BLK2     TITLE 'DISK BLOCK SIZES COMPUTATIONS (2).'
PAJPBLK2 START 0
         SPACE 1
* PURPOSE :    COMPUTE THE NUMBER OF BLOCKS PER TRACKS CAPACITY FOR
* ---------    THE PREVIOUSLY REQUESTED AND CHECKED DEVICES TYPES.
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=R12
         EJECT
         LA    R10,MAXERR
         MVI   SWITCH,RCON
        $ISPF  VGET,U1,U1V         GET U1 VALUE.
         BNZ   ERR1                ERROR.
        $ISPF  VGET,U2,U2V         GET U2 VALUE.
         BNZ   ERR2                ERROR.
        $ISPF  VGET,U3,U3V         GET U3 VALUE.
         BNZ   ERR3                ERROR.
        $ISPF  VGET,KEY,KEYV       GET KEY VALUE.
         BNZ   ERR4                ERROR.
         NI    SWITCH,255-RCON
         LA    R2,KEYV
         BAS   R8,CNVRT            CONVERT TO BINARY KEY VALUE.
         ST    R1,KEY
         LA    R1,U1TY
         LA    R2,U1V
         BAS   R8,EXTUT            GET U1 DEV. TYPE.
         B     ERR5                MISSING.
         B     ERR6                UNKNOWN DEVICE.
         OI    SWITCH,RCON
        $ISPF  VGET,BU1,BU1V       GET BU1 VALUE.
         BNZ   ERR7                ERROR.
         NI    SWITCH,255-RCON
         LA    R2,BU1V
         BAS   R8,CNVRT            CONVERT TO BINARY BU1 VALUE.
         XR    R0,R0
         LTR   R3,R1
         BZ    SU1
         XR    R2,R2
         IC    R2,U1TY
         BAS   R8,TRKRT            COMPUTE NU1.
SU1      ST    R0,NU1
         LA    R1,U2TY
         LA    R2,U2V
         BAS   R8,EXTUT            GET U2 DEV. TYPE.
         B     NOMORE              NO MORE.
         B     ERR8                UNKNOWN DEVICE.
         OI    SWITCH,RCON
        $ISPF  VGET,BU2,BU2V       GET BU2 VALUE.
         BNZ   ERR9                ERROR.
         NI    SWITCH,255-RCON
         LA    R2,BU2V
         BAS   R8,CNVRT            CONVERT TO BINARY BU2 VALUE.
         XR    R0,R0
         LTR   R3,R1
         BZ    SU2
         XR    R2,R2
         IC    R2,U2TY
         BAS   R8,TRKRT            COMPUTE NU2.
SU2      ST    R0,NU2
         LA    R1,U3TY
         LA    R2,U3V
         BAS   R8,EXTUT            GET U3 DEV. TYPE.
         B     NOMORE              NO MORE.
         B     ERR10               UNKNOWN DEVICE.
         OI    SWITCH,RCON
        $ISPF  VGET,BU3,BU3V       GET BU3 VALUE.
         BNZ   ERR11               ERROR.
         NI    SWITCH,255-RCON
         LA    R2,BU3V
         BAS   R8,CNVRT            CONVERT TO BINARY BU3 VALUE.
         XR    R0,R0
         LTR   R3,R1
         BZ    SU3
         XR    R2,R2
         IC    R2,U3TY
         BAS   R8,TRKRT            COMPUTE NU3.
SU3      ST    R0,NU3
NOMORE   OI    SWITCH,RCON
         L     R1,NU1
         LA    R2,NU1V
         BAS   R8,EDVRT            EDIT NU1V VALUE.
         STCM  R2,B'0011',VPNU1+18
VPNU1   $ISPF  VPUT,NU1,NU1V       SET NU1 VALUE.
         BNZ   ERR12               ERROR.
         L     R1,NU2
         LA    R2,NU2V
         BAS   R8,EDVRT            EDIT NU2V VALUE.
         STCM  R2,B'0011',VPNU2+18
VPNU2   $ISPF  VPUT,NU2,NU2V       SET NU2 VALUE.
         BNZ   ERR13               ERROR.
         L     R1,NU3
         LA    R2,NU3V
         BAS   R8,EDVRT            EDIT NU3V VALUE.
         STCM  R2,B'0011',VPNU3+18
VPNU3   $ISPF  VPUT,NU3,NU3V       SET NU3 VALUE.
         BNZ   ERR14               ERROR.
         NI    SWITCH,255-RCON
         EJECT
         XR    R10,R10             SET C.C. = 0.
LEAVE   $XRET  CC=(R10)            RETURN TO CALLER.
         SPACE 2
ERR1     BCTR  R10,0               U1 VGET ERROR.
ERR2     BCTR  R10,0               U2 VGET ERROR.
ERR3     BCTR  R10,0               U3 VGET ERROR.
ERR4     BCTR  R10,0               KEY VGET ERROR.
ERR5     BCTR  R10,0               U1 MISSING.
ERR6     BCTR  R10,0               U1 UNKNOWN DEVICE.
ERR7     BCTR  R10,0               BU1 VGET ERROR.
ERR8     BCTR  R10,0               U2 UNKNOWN DEVICE.
ERR9     BCTR  R10,0               BU2 VGET ERROR.
ERR10    BCTR  R10,0               U3 UNKNOWN DEVICE.
ERR11    BCTR  R10,0               BU3 VGET ERROR.
ERR12    BCTR  R10,0               NU1 VPUT ERROR.
ERR13    BCTR  R10,0               NU2 VPUT ERROR.
ERR14    BCTR  R10,0               NU3 VPUT ERROR.
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
         TM    SWITCH,RCON
         BZ    LEAVE
         LM    R1,R3,0(R15)
         CVD   R1,WORK
         ED    ERRMSA,WORK+6
         CVD   R2,WORK
         ED    ERRMSB,WORK+6
         CVD   R3,WORK
         ED    ERRMSC,WORK+6
        TPUT   ERRMS,ERRMSL
         B     LEAVE
         EJECT
*        GET UNIT DEVICE TYPE ROUTINE.
*              R1 = HEX. DEV. TYPE POINTER.
*              R2 = DEV. TYPE NAME POINTER.
*              R8 = LINK REGISTER.
*              R14 = WORK REGISTERS.
*              RETURN +  0 = DEV. TYPE NAME NOT SUPPLIED.
*                     +  4 = UNKNOWN DEV. TYPE.
*                     +  8 = OK.
         SPACE 1
EXTUT    CLI   0(R2),C' '
         BER   R8
         L     R14,=V(DAUTTB)
EXTUT1   CLC   2(8,R14),0(R2)
         BE    EXTUT2
         LA    R14,10(R14)
         CLI   0(R14),X'FF'
         BNE   EXTUT1
         B     4(R8)
EXTUT2   MVC   0(1,R1),0(R14)
         B     8(R8)
         EJECT
*        CONVERT BINARY ROUTINE.
*              R1 = WORK REGISTER / BINARY VALUE.
*              R2 = KEY VALUE POINTER / WORK REGISTER.
*              R8 = LINK REGISTER.
         SPACE 1
CNVRT    XR    R1,R1
         CLI   0(R2),C' '
         BER   R8
         LR    R1,R2
CNVRT1   LA    R2,1(R2)
         CLI   0(R2),C' '
         BNE   CNVRT1
         SR    R2,R1
         BCTR  R1,0
         EX    R2,CNVRT2
         CVB   R1,WORK
         BR    R8
CNVRT2   PACK  WORK,0(*-*,R1)
         EJECT
*        PERFORM TRACK CALCULATIONS ROUTINE.
*              R2 = UCB DEVICE TYPE (UCBTBYT4).
*              R3 = DATA LENGTH.
*              R8 = LINK REGISTER.
*              R0 = AT EXIT, NUMBER OF RECORDS THAT FIT ON A TRACK.
         SPACE 1
TRKRT   TRKCALC FUNCTN=TRKCAP,TYPE=(R2),R=1,K=KEY+3,DD=(R3),           1
               REGSAVE=YES
         BR    R8
         EJECT
*        EDIT VALUE ROUTINE.
*              R1 = VALUE / WORK REGISTER.
*              R2 = EDIT TARGET FIELD / LENGTH EDITED VALUE.
*              R8 = LINK REGISTER.
*              R0 = WORK REGISTER.
         SPACE 1
EDVRT    MVC   0(8,R2),=CL8' '
         CVD   R1,WORK
         MVC   ZONE,=XL8'4020202020202120'
         ED    ZONE,WORK+4
         LA    R1,ZONE
         LR    R0,R2
EDVRT1   CLI   0(R1),C' '
         BNE   EDVRT2
         LA    R1,1(R1)
         B     EDVRT1
EDVRT2   MVC   0(1,R2),0(R1)
         LA    R1,1(R1)
         LA    R2,1(R2)
         CLI   0(R1),C' '
         BNE   EDVRT2
         SR    R2,R0
         BR    R8
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
WORK     DC    D'0'
KEY      DC    F'0'
NU1      DC    F'0'
NU2      DC    F'0'
NU3      DC    F'0'
KEYV     DC    CL8' '
U1V      DC    CL8' '
BU1V     DC    CL8' '
NU1V     DC    CL8' '
U2V      DC    CL8' '
BU2V     DC    CL8' '
NU2V     DC    CL8' '
U3V      DC    CL8' '
BU3V     DC    CL8' '
NU3V     DC    CL8' '
ZONE     DC    CL8' ',C' '
U1TY     DC    XL1'0'
U2TY     DC    XL1'0'
U3TY     DC    XL1'0'
SWITCH   DC    XL1'0'
RCON     EQU   X'01'
         SPACE 1
ERRMS    DC    C' ---> PAJPBLK2 : $ISPF R.C.'
ERRMSA   DC    XL4'40202120',C','
ERRMSB   DC    XL4'40202120',C','
ERRMSC   DC    XL4'40202120',C'.'
ERRMSL   EQU   *-ERRMS
         SPACE 2
        LTORG
         SPACE 2
         END
