BLK1     TITLE 'DISK BLOCK SIZES COMPUTATIONS (1).'
PAJPBLK1 START 0
         SPACE 1
* PURPOSE :    VERIFY REQUESTED DEVICES TYPES AND SUPPLY SOME DEVICES
* ---------    CHARACTERISTICS (NUMBER OF TRACKS PER CYLINDER AND
*              NUMBER OF BYTES PER TRACK CAPACITY).
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 1
        $DEFREG
         EJECT
        $XENT  BASE=R12
         EJECT
         LA    R10,MAXERR
         MVI   AREA,C' '
         MVC   AREA+1(L'AREA-1),AREA
         MVI   SWITCH,RCON
        $ISPF  VGET,UTYPE,AREA     GET DEVICES TYPES.
         BNZ   ERR1                ERROR.
         NI    SWITCH,255-RCON
         LM    R2,R4,SCAR
         LA    R5,U1V
         BAS   R8,EXTUT            GET U1 VALUE.
         B     ERR2                MISSING.
         B     ERR3                WRONG LENGTH.
         LA    R5,U2V
         BAS   R8,EXTUT            GET U2 VALUE.
         B     SETDEV              NO MORE.
         B     ERR4                WRONG LENGTH.
         LA    R5,U3V
         BAS   R8,EXTUT            GET U3 VALUE.
         B     NOLAST              NO MORE.
         B     ERR5                WRONG LENGTH.
         CLC   U3V,U1V             ELIMINE DUPLICATED REQUESTS.
         BE    ELAST
         CLC   U3V,U2V
         BNE   NOLAST
ELAST    MVC   U3V,=CL8' '
NOLAST   CLC   U2V,U1V
         BNE   SETDEV
         MVC   U2V,U3V
         MVC   U3V,=CL8' '
SETDEV   L     R14,CVTPTR          GET CVT ADDRESS.
         USING CVT,R14
         L     R6,CVTZDTAB         DEV. CONSTANT TABLE ADDRESS.
         DROP  R14
         LA    R2,U1V
         LA    R3,NTC1
         LA    R4,NBT1
         LA    R5,U1TY
         BAS   R8,EXTUC            GET U1 CONSTANTS.
         B     ERR6                UNKNOWN DEVICE.
         B     ERR7                NO DEVICE TABLE.
         LA    R2,U2V
         LA    R3,NTC2
         LA    R4,NBT2
         LA    R5,U2TY
         BAS   R8,EXTUC            GET U2 CONSTANTS.
         B     ERR8                UNKNOWN DEVICE.
         B     ERR9                NO DEVICE TABLE.
         LA    R2,U3V
         LA    R3,NTC3
         LA    R4,NBT3
         LA    R5,U3TY
         BAS   R8,EXTUC            GET U3 CONSTANTS.
         B     ERR10               UNKNOWN DEVICE.
         B     ERR11               NO DEVICE TABLE.
         L     R1,NTC1
         LA    R2,NC1V
         BAS   R8,CNVTC            EDIT NC1V VALUE.
         L     R1,NTC2
         LA    R2,NC2V
         BAS   R8,CNVTC            EDIT NC2V VALUE.
         L     R1,NTC3
         LA    R2,NC3V
         BAS   R8,CNVTC            EDIT NC3V VALUE.
         OI    SWITCH,RCON
        $ISPF  VPUT,U1,U1V         SET U1 VALUE.
         BNZ   ERR12               ERROR.
        $ISPF  VPUT,NC1,NC1V       SET NC1 VALUE.
         BNZ   ERR13               ERROR.
        $ISPF  VPUT,U2,U2V         SET U2 VALUE.
         BNZ   ERR14               ERROR.
        $ISPF  VPUT,NC2,NC2V       SET NC2 VALUE.
         BNZ   ERR15               ERROR.
        $ISPF  VPUT,U3,U3V         SET U3 VALUE.
         BNZ   ERR16               ERROR.
        $ISPF  VPUT,NC3,NC3V       SET NC3 VALUE.
         BNZ   ERR17               ERROR.
         L     R1,NTC1
         LA    R2,NTC1V
         BAS   R8,EDVRT            EDIT NTC1V VALUE.
         STCM  R2,B'0011',VPNTC1+18
VPNTC1  $ISPF  VPUT,NTC1,NTC1V     SET NTC1 VALUE.
         BNZ   ERR18               ERROR.
         L     R1,NBT1
         LA    R2,NBT1V
         BAS   R8,EDVRT            EDIT NBT1V VALUE.
         STCM  R2,B'0011',VPNBT1+18
VPNBT1  $ISPF  VPUT,NBT1,NBT1V     SET NBT1 VALUE.
         BNZ   ERR19               ERROR.
         L     R1,NTC2
         LA    R2,NTC2V
         BAS   R8,EDVRT            EDIT NTC2V VALUE.
         STCM  R2,B'0011',VPNTC2+18
VPNTC2  $ISPF  VPUT,NTC2,NTC2V     SET NTC2 VALUE.
         BNZ   ERR20               ERROR.
         L     R1,NBT2
         LA    R2,NBT2V
         BAS   R8,EDVRT            EDIT NBT2V VALUE.
         STCM  R2,B'0011',VPNBT2+18
VPNBT2  $ISPF  VPUT,NBT2,NBT2V     SET NBT2 VALUE.
         BNZ   ERR21               ERROR.
         L     R1,NTC3
         LA    R2,NTC3V
         BAS   R8,EDVRT            EDIT NTC3V VALUE.
         STCM  R2,B'0011',VPNTC3+18
VPNTC3  $ISPF  VPUT,NTC3,NTC3V     SET NTC3 VALUE.
         BNZ   ERR22               ERROR.
         L     R1,NBT3
         LA    R2,NBT3V
         BAS   R8,EDVRT            EDIT NBT3V VALUE.
         STCM  R2,B'0011',VPNBT3+18
VPNBT3  $ISPF  VPUT,NBT3,NBT3V     SET NBT3 VALUE.
         BNZ   ERR23               ERROR.
         L     R1,U1TY
         LA    R2,U1TYV
         BAS   R8,EDVRT            EDIT U1TYV VALUE.
         STCM  R2,B'0011',VPU1TY+18
VPU1TY  $ISPF  VPUT,U1TY,U1TYV     SET U1TY VALUE.
         BNZ   ERR24               ERROR.
         L     R1,U2TY
         LA    R2,U2TYV
         BAS   R8,EDVRT            EDIT U2TYV VALUE.
         STCM  R2,B'0011',VPU2TY+18
VPU2TY  $ISPF  VPUT,U2TY,U2TYV     SET U2TY VALUE.
         BNZ   ERR25               ERROR.
         L     R1,U3TY
         LA    R2,U3TYV
         BAS   R8,EDVRT            EDIT U3TYV VALUE.
         STCM  R2,B'0011',VPU3TY+18
VPU3TY  $ISPF  VPUT,U3TY,U3TYV     SET U3TY VALUE.
         BNZ   ERR26               ERROR.
         NI    SWITCH,255-RCON
         EJECT
         XR    R10,R10             SET C.C. = 0.
LEAVE   $XRET  CC=(R10)            RETURN TO CALLER.
         SPACE 2
ERR1     BCTR  R10,0               UTYPE VGET ERROR.
ERR2     BCTR  R10,0               U1 MISSING.
ERR3     BCTR  R10,0               U1 WRONG LENGTH.
ERR4     BCTR  R10,0               U2 WRONG LENGTH.
ERR5     BCTR  R10,0               U3 WRONG LENGTH.
ERR6     BCTR  R10,0               U1 UNKNOWN DEVICE.
ERR7     BCTR  R10,0               U1 NO DEVICE TABLE.
ERR8     BCTR  R10,0               U2 UNKNOWN DEVICE.
ERR9     BCTR  R10,0               U2 NO DEVICE TABLE.
ERR10    BCTR  R10,0               U3 UNKNOWN DEVICE.
ERR11    BCTR  R10,0               U3 NO DEVICE TABLE.
ERR12    BCTR  R10,0               U1 VPUT ERROR.
ERR13    BCTR  R10,0               NC1 VPUT ERROR.
ERR14    BCTR  R10,0               U2 VPUT ERROR.
ERR15    BCTR  R10,0               NC2 VPUT ERROR.
ERR16    BCTR  R10,0               U3 VPUT ERROR.
ERR17    BCTR  R10,0               NC3 VPUT ERROR.
ERR18    BCTR  R10,0               NTC1 VPUT ERROR.
ERR19    BCTR  R10,0               NBT1 VPUT ERROR.
ERR20    BCTR  R10,0               NTC2 VPUT ERROR.
ERR21    BCTR  R10,0               NBT2 VPUT ERROR.
ERR22    BCTR  R10,0               NTC3 VPUT ERROR.
ERR23    BCTR  R10,0               NBT3 VPUT ERROR.
ERR24    BCTR  R10,0               U1TY VPUT ERROR.
ERR25    BCTR  R10,0               U2TY VPUT ERROR.
ERR26    BCTR  R10,0               U3TY VPUT ERROR.
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
         TM    SWITCH,RCON
         BZ    LEAVE
         LM    R1,R3,0(R15)
         CVD   R1,WORK
         ED    ERRMSA,WORK+6
         CVD   R2,WORK
         ED    ERRMSB,WORK+6
         CVD   R3,WORK
         ED    ERRMSC,WORK+6
        TPUT   ERRMS,ERRMSL
         B     LEAVE
         EJECT
*        EXTRACT DEVICE TYPE ROUTINE.
*              R2-R3-R4 = SCAN POINTERS.
*              R5 = DEV. TYPE NAME FIELD POINTER.
*              R8 = LINK REGISTER.
*              R14-R15 = WORK REGISTERS.
*              RETURN +  0 = NO DEV. TYPE NAME.
*                     +  4 = WRONG DEV. TYPE NAME LENGTH.
*                     +  8 = OK.
         SPACE 1
EXTUT    CLI   0(R4),C' '
         BNE   EXTUT1
         BXLE  R4,R2,EXTUT
         BR    R8
EXTUT1   LR    R14,R4
EXTUT2   BXLE  R4,R2,EXTUT3
         B     EXTUT4
EXTUT3   CLI   0(R4),C' '
         BNE   EXTUT2
EXTUT4   LR    R15,R4
         SR    R15,R14
         BNP   4(R8)
         CH    R15,=H'8'
         BH    4(R8)
         BCTR  R15,0
         MVC   0(8,R5),=CL8' '
         EX    R15,EXTUT5
         B     8(R8)
EXTUT5   MVC   0(*-*,R5),0(R14)
         EJECT
*        EXTRACT UNIT CONSTANTS ROUTINE.
*              R2 = DEV. TYPE NAME POINTER.
*              R3 = TRACKS/CYL VALUE POINTER (FULLWORD).
*              R4 = BYTES/TRACK CAPACITY POINTER (FULLWORD).
*              R5 = HEX. DEVICE TYPE POINTER (FULLWORD).
*              R6 = CVTZDTAB.
*              R8 = LINK REGISTER.
*              R1-R14-R15 = WORK REGISTERS.
*              RETURN +  0 = UNKNOWN DEV. TYPE.
*                     +  4 = NO DEVICE TABLE.
*                     +  8 = OK.
         SPACE 1
EXTUC    CLI   0(R2),C' '
         BE    8(R8)
         L     R1,=V(DAUTTB)
EXTUC1   CLC   2(8,R1),0(R2)
         BE    EXTUC2
         LA    R1,10(R1)
         CLI   0(R1),X'FF'
         BNE   EXTUC1
         BR    R8
EXTUC2   XR    R14,R14
         LR    R15,R14
         IC    R14,0(R1)
         IC    R15,0(R14,R6)
         LA    R15,0(R15,R6)
         CLR   R15,R6
         BE    4(R8)
         XC    0(2,R3),0(R3)
         MVC   2(2,R3),2(R15)
         XC    0(2,R4),0(R4)
         MVC   2(2,R4),4(R15)
         XC    0(3,R5),0(R5)
         STC   R14,3(R5)
         B     8(R8)
         EJECT
*        EDIT TRACKS/CYL VALUE ROUTINE.
*              R1 = TRACKS/CYL VALUE / WORK REGISTER.
*              R2 = EDIT TARGET FIELD.
*              R8 = LINK REGISTER.
         SPACE 1
CNVTC    MVC   0(7,R2),=CL8' '
         LTR   R1,R1
         BZR   R8
         MVI   0(R2),C'('
         LA    R2,1(R2)
         CVD   R1,WORK
         MVC   ZONE,=XL8'4020202020202120'
         ED    ZONE,WORK+4
         LA    R1,ZONE+3
CNVTC1   CLI   0(R1),C' '
         BNE   CNVTC2
         LA    R1,1(R1)
         B     CNVTC1
CNVTC2   MVC   0(1,R2),0(R1)
         LA    R1,1(R1)
         LA    R2,1(R2)
         CLI   0(R1),C' '
         BNE   CNVTC2
         MVI   0(R2),C')'
         BR    R8
         EJECT
*        EDIT VALUE ROUTINE.
*              R1 = VALUE / WORK REGISTER.
*              R2 = EDIT TARGET FIELD / LENGTH EDITED VALUE.
*              R8 = LINK REGISTER.
*              R0 = WORK REGISTER.
         SPACE 1
EDVRT    MVC   0(8,R2),=CL8' '
         CVD   R1,WORK
         MVC   ZONE,=XL8'4020202020202120'
         ED    ZONE,WORK+4
         LA    R1,ZONE
         LR    R0,R2
EDVRT1   CLI   0(R1),C' '
         BNE   EDVRT2
         LA    R1,1(R1)
         B     EDVRT1
EDVRT2   MVC   0(1,R2),0(R1)
         LA    R1,1(R1)
         LA    R2,1(R2)
         CLI   0(R1),C' '
         BNE   EDVRT2
         SR    R2,R0
         BR    R8
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
WORK     DC    D'0'
SCAR     DC    A(1,AREA+L'AREA-1,AREA)
NTC1     DC    F'0'
NBT1     DC    F'0'
U1TY     DC    F'0'
NTC2     DC    F'0'
NBT2     DC    F'0'
U2TY     DC    F'0'
NTC3     DC    F'0'
NBT3     DC    F'0'
U3TY     DC    F'0'
AREA     DC    CL60' '
U1V      DC    CL8' '
U2V      DC    CL8' '
U3V      DC    CL8' '
NBT1V    DC    CL8' '
NTC1V    DC    CL8' '
NBT2V    DC    CL8' '
NTC2V    DC    CL8' '
NBT3V    DC    CL8' '
NTC3V    DC    CL8' '
NC1V     DC    CL7'( '
NC2V     DC    CL7'( '
NC3V     DC    CL7'( '
U1TYV    DC    CL3' '
U2TYV    DC    CL3' '
U3TYV    DC    CL3' '
ZONE     DC    CL8' ',C' '
SWITCH   DC    XL1'0'
RCON     EQU   X'01'
         SPACE 1
ERRMS    DC    C' ---> PAJPBLK1 : $ISPF R.C.'
ERRMSA   DC    XL4'40202120',C','
ERRMSB   DC    XL4'40202120',C','
ERRMSC   DC    XL4'40202120',C'.'
ERRMSL   EQU   *-ERRMS
         SPACE 2
        LTORG
         SPACE 2
        PRINT  NOGEN
        CVT    DSECT=YES,TSO=YES,RPS=YES,LIST=YES
         SPACE 2
         END
