RDCHK    TITLE 'READ DATA-CHECK SUBROUTINE.'
RDCHK    START 0
         SPACE 1
* PURPOSE : THIS IS A ROUTINE TO READ A 9-TRACKS TAPE FILE CONTAINING
* --------- SOME ERRONEOUS RECORDS (PERMANENT REDUNDANCIES LIKE DATA
*           CHECKS), AND THUS GIVING THE OPPORTUNITY TO CORRECT OR
*           SUPPLY INFORMATION.
*
*           THE FOLLOWING DD-CARD IS NEEDED TO READ THE TAPE FILE :
*
*           //........ DD UNIT=TAPE,VOL=(PRIVATE,RETAIN,SER=......),
*           //            DISP=(OLD,PASS),LABEL=(...,NL,,IN)
*
* CALLING SEQUENCE : CALL RDCHK,(A,B,C),VL
* ------------------            (A,B)
*
*        WHERE : A - IS THE ADDRESS OF AN ARRAY (FORMAT FULLWORD - F
*                    BOUNDARY) LARGE ENOUGH TO RECEIVE THE LONGEST
*                    RECORD FROM THE TAPE FILE, WHICH THE DDNAME MUST
*                    BE PASSED TO THE ROUTINE AT THE FIRST TIME IT IS
*                    CALLED. THE DDNAME IS ASSUMED BE PLACED IN THE
*                    FIRST EIGHT BYTES OF THE ARRAY.
*
*                B - IS THE ADDRESS OF THE CURRENT RECORD LENGTH
*                    (FORMAT FULLWORD - F BOUNDARY) RETURNED BY THE
*                    ROUTINE AFTER EACH READ OPERATION, UNLESS WHEN
*                    THE END-OF-FILE IS DETECTED.
*
*                C - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY) IF SUPPLIED (OPTIONAL). VALUE IS ALWAYS
*                    PLACED IN REGISTER 15 AND CAN BE :
*
*                     0 - READ OPERATION CORRECTLY EXECUTED.
*                     1 - READ OPERATION HAS TERMINATED WITH PERMANENT
*                         REDUNDANCY. THE RECORD IS IN THE ARRAY AS IT
*                         HAS BEEN READ IN CORE STORAGE.
*                     2 - END-OF-FILE DETECTED. THE FIRST FOUR BYTES
*                         IN THE ARRAY (FISRT FULLWORD) CONTAINS THE
*                         NUMBER OF RECORDS CORRECTLY READ, AND THE
*                         FOLLOWING FOUR BYTES (SECOND FULLWORD)
*                         CONTAINS THE NUMBER OF ERRONEOUS RECORDS
*                         ENCOUNTERED.
*                     3 - CALLING SEQUENCE OR ARGUMENT ALIGNMENT ERROR.
*                     4 - DD-CARD MISSING, NOT TAPE OR OPEN ERROR.
*
*                     --- IF THE ROUTINE DETECTS AN UNEXPECTED ERROR,
*                         THE PROGRAM IS SENDED IN ABEND U0001.
*
* GENERAL NOTICE : MVS/XA : MUST BE AMODE AND RMODE 24.
* ----------------
         EJECT
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 1
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         SPACE 2
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PS,DEVD=DA
        PRINT  GEN
         SPACE 1
RDCHK    CSECT                     RESTORE MAIN CSECT.
         EJECT
        $XENT  BASE=R12
         SR    R9,R9               SET DEFAULTS.
         LA    R10,MAXERR
         L     R7,0(R1)            CONTROL ARGUMENTS.
         LA    R7,0(R7)
         TM    0(R1),X'80'
         BO    ERR3
         L     R8,4(R1)
         LA    R8,0(R8)
         TM    4(R1),X'80'
         BO    RD1
         TM    11(R1),X'03'
         BNZ   ERR3
         L     R9,8(R1)
         LA    R9,0(R9)
         TM    8(R1),X'80'
         BZ    ERR3
RD1      TM    3(R1),X'03'
         BNZ   ERR3
         TM    7(R1),X'03'
         BNZ   ERR3
         LA    R11,DCBTAPE
         USING IHADCB,R11
         SPACE 1
SWOP     NOP   READ
         MVC   DCBDDNAM(L'DCBDDNAM),0(R7) GET DDNAME.
         OC    ATIOT(L'ATIOT),ATIOT FIRST TIME?
         BNZ   RO1                 BRANCH IF NOT.
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
RO1      L     R2,ATIOT            SEARCH DD AND OPEN IT.
         USING TIODSECT,R2
         SR    R1,R1
RO2      CLC   TIOELNGH(4),ZEROS
         BE    ERR4
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    RO3
         IC    R1,TIOELNGH
         ALR   R2,R1
         B     RO2
         DROP  R2
RO3     DEVTYPE DCBDDNAM,DVTYP
         CLI   DVTYP+2,X'80'       IS THAT A MAGNETIC TAPE?
         BNE   ERR4                BRANCH IF NOT.
        OPEN   ((R11),(INPUT))
         TM    DCBOFLGS,DCBOFOPN   OPEN SUCCESSFULL?
         BZ    ERR4                NO, ERROR.
         XC    OKBLOCK(L'OKBLOCK+L'ERBLOCK),OKBLOCK
         OI    SWOP+1,ON
         SPACE 1
READ     ST    R7,CCW              ADDRESS OF DATA BUFFER.
         MVI   CCW,X'02'           SET READ CODE.
         XC    ECB,ECB             CLEAR EVENT CONTROL BLOCK.
         XC    CSW,CSW             CLEAR CSW INFO.
        EXCP   IOB
        WAIT   ECB=ECB
         CLI   ECB,X'7F'
         BE    OKREAD
         TM    IOB+12,X'01'        UNIT EXCEPTION?
         BO    TAPEEOF             YES, END-OF-FILE.
         CLI   ECB,X'41'           I/O ERROR?
         BE    RDERR               YES.
         SPACE 1
        ABEND  1,DUMP
         SPACE 1
TAPEEOF  OI    DCBOFLGS,DCBOFTM    SET EOF ENCOUNTERED.
         NI    SWOP+1,OFF
        CLOSE  ((R11))
         MVC   0(L'OKBLOCK+L'ERBLOCK,R7),OKBLOCK
         XC    0(4,R8),0(R8)
         B     ERR2
         SPACE 1
OKREAD   SR    R10,R10
         LA    R2,OKBLOCK
         LA    R6,RET
COUNT    L     R1,0(R2)            UPDATE READ RECORDS COUNTER.
         LA    R1,1(R1)
         ST    R1,0(R2)
         L     R2,CCW+4            COMPUTE AND STORE READ LENGTH.
         LA    R2,0(R2)
         SH    R2,CSW+6
         ST    R2,0(R8)
         BR    R6
         SPACE 1
RDERR    LA    R2,ERBLOCK
         BAS   R6,COUNT
         DROP  R11
         SPACE 1
ERR1     BCTR  R10,0
ERR2     BCTR  R10,0
ERR3     BCTR  R10,0
ERR4     BCTR  R10,0
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
RET      LTR   R9,R9
         BZ    EXIT
         ST    R10,0(R9)
EXIT    $XRET  CC=(R10)
         EJECT
DCBTAPE  DCB   DSORG=PS,DEVD=TA,MACRF=E,RECFM=U,                       1
               IOBAD=IOB,OPTCD=Z,DDNAME=XXXXXXXX
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
CCW      CCW   X'02',*-*,X'20',32767
ATIOT    DC    A(*-*)
ZEROS    DC    F'0'
DVTYP    DC    2F'0'
OKBLOCK  DC    F'0'
ERBLOCK  DC    F'0'
         SPACE 1
ECB      DC    F'0'
         SPACE 1
IOB      DC    0F'0',X'42000000'
         DC    A(ECB)
CSW      DC    XL8'0'
         DC    A(CCW)
         DC    A(DCBTAPE)
         DC    2F'0'
         SPACE 2
         END
