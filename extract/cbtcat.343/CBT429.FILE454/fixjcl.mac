ISREDIT  MACRO (APARM) NOPROCESS
/*  MACRO NAME : FIXJCL                                             */
/*    FUNCTION : ALIGN JCL JOB, EXEC, AND DD STATEMENTS ON          */
/*               STANDARD BOUNDARIES.                               */
/*               T. M. HANES, ASYST INC. 02/01/88                   */
/*               D.E.M.I., 03/01/88                                 */
/*      SYNTAX : FIXJCL                                             */
/*               FIXJCL HELP OR H                                   */
/*       DEBUG : FIXJCL LIST                                        */
/*      ORIGIN : CBT TAPE 89 FEB, FILE 95                           */
/*      UPDATE : SOME CHANGED FROM ORIGINAL (MOINIL P.A.)           */
  IF &STR(&APARM.) ^= &STR() THEN DO
    IF &STR(&APARM.) = &STR(H) OR +
      &STR(&APARM.) = &STR(HELP) THEN DO
        ISPEXEC CONTROL DISPLAY SAVE
        ISPEXEC SELECT PGM(ISPTUTOR) PARM(PAJTFJCL)
        SET &RCX = &LASTCC
        ISPEXEC CONTROL DISPLAY RESTORE
        EXIT CODE(&RCX)
        END
    ELSE IF &STR(&APARM.) ^= &STR(LIST) THEN DO
      SET ZEDSMSG = INVALID OPERAND
      SET ZEDLMSG = VALID OPERAND ARE HELP OR NULL
      ISPEXEC SETMSG MSG(ISRZ000)
      EXIT CODE(0)
      END
    END
/*               SITE DEPENDENT DEFINITIONS :                       */
/*               ALIGNMENT COLUMNS FOR CARD TYPES                   */
  SET &JOBC = 12
  SET &PROCC = 11
  SET &PENDC = 11
  SET &DDC = 13
  SET &EXECC = 11
  SET &CONTC = 16
  IF &STR(&APARM.) = &STR(LIST) THEN CONTROL LIST SYMLIST CONLIST
/*               PRESERVE CONTINUATION CHARACTERS IN 72             */
  ISREDIT PROCESS RANGE C
  IF &LASTCC = 0 THEN DO
     ISREDIT (RCMD) = RANGE_CMD
     ISREDIT (JZF) = LINENUM .ZFRANGE
     ISREDIT (JZL) = LINENUM .ZLRANGE
     END
  ELSE DO
     ISREDIT (JZF) = LINENUM .ZFIRST
     ISREDIT (JZL) = LINENUM .ZLAST
     END
  ISREDIT LABEL &JZF = .JZF
  ISREDIT LABEL &JZL = .JZL
  SET &LJZF = &STR(.JZF)
  SET &LJZL = &STR(.JZL)
  IF &JZF  = &JZL THEN SET &LJZF = &STR(.JZL)
  ISREDIT (CL,CR) = CURSOR
  ISREDIT (LB,RB) = BOUNDS
  ISREDIT BOUNDS    = 1 71
  ISREDIT X ALL
  ISREDIT F '//'  1 ALL &LJZF &LJZL
  ISREDIT X '//*' 1 ALL &LJZF &LJZL
  ISREDIT X '/*'  1 ALL &LJZF &LJZL
/*               REMOVE EXTRA SPACES                                */
  ISREDIT C ' ' '{'      3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{{{{{{' '{' 3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{{{{{' '{'  3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{{{{' '{'   3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{{{' '{'    3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{{' '{'     3 71 ALL NX  &LJZF &LJZL
  ISREDIT C '{' ' '      3 71 ALL NX  &LJZF &LJZL
/*               JOB, PROC, EXEC, DD AND PEND CONVERSION            */
  SET &KEYWD = &STR(JOB)
  SET &FLD=&JOBC-2
  DO WHILE &KEYWD NE &STR()
    ISREDIT X ALL
    ISREDIT F ' &STR(&KEYWD) ' 3 25 ALL                &LJZF &LJZL
    IF &LASTCC=4 THEN GOTO BYEDT
    ISREDIT X '//*' 1 ALL                              &LJZF &LJZL
    ISREDIT C ' &STR(&KEYWD) ' '{&STR(&KEYWD)}' ALL NX &LJZF &LJZL
    ISREDIT C '{' '{{' 3 25 ALL NX                     &LJZF &LJZL
    ISREDIT C '{' '{{' 3 25 ALL NX                     &LJZF &LJZL
    ISREDIT C '{' '{{' 3 25 ALL NX                     &LJZF &LJZL
    ISREDIT C '{' '{{' 3 25 ALL NX                     &LJZF &LJZL
    ISREDIT C '{&STR(&KEYWD)}' '_&STR(&KEYWD)_' ALL NX &LJZF &LJZL
    ISREDIT C ' ' '^' ALL NX                           &LJZF &LJZL
    ISREDIT C '{' ' ' 3 &FLD ALL NX                    &LJZF &LJZL
    ISREDIT C '{' '' ALL NX                            &LJZF &LJZL
    ISREDIT C '_&STR(&KEYWD)_' ' &STR(&KEYWD) ' ALL    &LJZF &LJZL
    ISREDIT C '^' ' ' ALL NX                           &LJZF &LJZL
BYEDT: IF &KEYWD = DD   THEN DO
          SET &KEYWD = &STR()
          END
    IF &KEYWD = PEND THEN DO
       SET &KEYWD = &STR(DD)
       SET &FLD=&DDC-2
       END
    IF &KEYWD = EXEC THEN DO
       SET &KEYWD = &STR(PEND)
       SET &FLD=&PENDC-2
       END
    IF &KEYWD = PROC THEN DO
       SET &KEYWD = &STR(EXEC)
       SET &FLD=&EXECC-2
       END
    IF &KEYWD = JOB  THEN DO
       SET &KEYWD = &STR(PROC)
       SET &FLD=&PROCC-2
       END
    END
/*               CONTINUATION CARD CONVERSION                       */
  SET &FLD=&CONTC-1
  ISREDIT X ALL
  ISREDIT F '// '  1 ALL                             &LJZF &LJZL
  ISREDIT X ' EXEC ' 3 20 ALL                        &LJZF &LJZL
  ISREDIT X ' DD '   3 20 ALL                        &LJZF &LJZL
  ISREDIT X ' PEND ' 3 20 ALL                        &LJZF &LJZL
  ISREDIT C ' ' '}'  3 ALL NX                        &LJZF &LJZL
  ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
  ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
  ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
  ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
  ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
  ISREDIT C ' ' '^'  3 70 ALL NX                     &LJZF &LJZL
  ISREDIT C '}^' '}' 3 70 ALL NX                     &LJZF &LJZL
  ISREDIT C '}' ' '  3 &FLD ALL NX                   &LJZF &LJZL
  ISREDIT C '}' ''        ALL NX                     &LJZF &LJZL
  ISREDIT C '^' ' '       ALL NX                     &LJZF &LJZL
  ISREDIT BOUNDS =  &LB &RB
  ISREDIT LEFT MAX
  ISREDIT RESET
  ISREDIT CURSOR = &CL &CR
EXIT CODE(0)
