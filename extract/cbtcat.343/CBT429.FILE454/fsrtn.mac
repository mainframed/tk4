FSRT     TITLE '-- ROUTINE FSRTN - FULL-SCREEN SERVICE --'
FSRTN    START 0
         SPACE 1
**********************************************************************
***      A SET OF ROUTINES TO MANAGE MORE EASILY THE FULL-SCREEN   ***
***      DISPLAY OPERATIONS ON AN IBM 3270 TERMINAL.               ***
***      EXTENDED VERSION            (MOINIL P.A. - 14 MARCH 1994) ***
**********************************************************************
         SPACE 1
         PRINT NOGEN
        $DEFREG
         PRINT GEN
         SPACE 1
         ENTRY FSRTNR
         ENTRY FSRTNI
         ENTRY FSRTNQ
         ENTRY FSRTNB
         ENTRY FSRTNA
         SPACE 1
         USING *,R15
         MVI   WTGO+3,FSPACK-*     SET FSRTN ENTRY ------- 1
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
FSRTNR   MVI   WTGO+3,FSPACK-*     SET FSRTNR ENTRY ------ 2
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
FSRTNI   MVI   WTGO+3,FSPACK-*     SET FSRTNI ENTRY ------ 3
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
FSRTNQ   MVI   WTGO+3,FSPACK-*     SET FSRTNQ ENTRY ------ 4
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
FSRTNB   MVI   WTGO+3,FSPACK-*     SET FSRTNB ENTRY ------ 5
         B     WTGO
         DROP  R15
         SPACE 1
         USING *,R15
FSRTNA   MVI   WTGO+3,FSPACK-*     SET FSRTNA ENTRY ------ 6
         DROP  R15
         SPACE 1
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS
MAXENT   EQU   ((*-FSRTN)/8)+1
         EJECT
FSPACK  $XENT  BASE=(R10,R11)
         LR    R15,R10             COMPUTE WHERE TO GO
         BCTR  R15,0
         XR    R0,R0
         IC    R0,0(R15)
         SRL   R0,3
         LA    R14,MAXENT
         SR    R14,R0
         BCTR  R14,0
         SLL   R14,2
         B     *+L'*(R14)          ENTER SELECTED ROUTINE
         B     @FSRTN              1
         B     @FSRTNR             2
         B     @FSRTNI             3
         B     @FSRTNQ             4
         B     @FSRTNB             5
         B     @FSRTNA             6
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTN,(A,B,C),VL ---> MACROS : @FS AND @FSO                   *
*            (A)                                                     *
*        FUNCTION : WRITE A SCREEN VIA TPUT, AND GET A REPLY VIA     *
*                   TGET.                                            *
*        AT ENTRY : A = ADDRESS OF A 1-BYTE CONTAINING THE REQUESTS  *
*                       X'00' = TPUT/TGET OPERATION                  *
*                       X'01' = TGET SUPPRESS (NO REPLY), ONLY TPUT  *
*                       X'80' = SNAP INPUT BUFFER WHEN RECEIVED      *
*                               (NEEDS A PRE-DEFINED DATA-SET WITH   *
*                               RECFM=VBA,BLKSIZE=1632,LRECL=125 AND *
*                               PRE-ALLOCATED TO 'SYSSNAP' DD-NAME)  *
*                       X'FF' = TERMINATE/EXIT FULL-SCREEN MODE      *
*                   B = START ADDRESS OF THE SCREEN IMAGE            *
*                   C = ADDRESS OF A FULLWORD CONTAINING THE SCREEN  *
*                       IMAGE LENGTH                                 *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION (TEXT AT DISPOSAL)   *
*                             WITH R0 = ADDRESS OF AID-BYTE OF       *
*                                     STRUCTURED FIELD, OR R0 = 0,   *
*                              AND R1 = ADDRESS OF AID-BYTE          *
*                                     FOLLOWED BY THE 2-BYTES CURSOR *
*                                     ADDRESS, OR R1 = 0.            *
*                       = 4 - BUFFER SHORTAGE (INPUT TRUNCATED, BUT  *
*                             R0-R1 ARE SET AS WHEN R15 = 0)         *
*                       = 8 - END REQUESTED (KEYS : PA1, PA2 OR PA3, *
*                             AND R0-R1 ARE SET AS WHEN R15 = 0)     *
*                       = 16 - ERROR DETECTED (MESSAGE SENT)         *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTN   L     R2,4(R13)
         XC    24(4,R2),24(R2)     SET R1 = 0 FOR RETURN
         XC    AREPLY(L'AREPLY+L'LREPLY),AREPLY
         L     R2,0(R1)            TEST AND SET PARAMETERS
         LTR   R2,R2
         BZ    SMS1
         BP    STPRMS
         LA    R2,0(R2)
         CLI   0(R2),FSEXIT
         BE    QUIT                BRANCH IF EXIT FULL-SCREEN REQ.
         B     SMS1
STPRMS   TM    0(R2),255-FSSNAP-FSSKIP
         BNZ   SMS1
         MVC   SWOPT(1),0(R2)
         L     R2,4(R1)
         LTR   R2,R2
         BNP   SMS1
         ST    R2,SCIMAD
         L     R2,8(R1)
         LTR   R2,R2
         BNM   SMS1
         LA    R2,0(R2)
         L     R0,0(R2)
         LTR   R0,R0
         BNP   SMS1
         ST    R0,SCIMLG
         TM    SWITCH,SCRFT        WAS FIRST TIME ENTRY DONE?
         BO    GODONE              BRANCH IF YES
         SPACE 1
*------- CHECK CALLER TERMINAL.
         SPACE 1
         TM    SWITCH,SCRGT        TEMINAL ATTRIBUTES AVAILABLE?
         BO    CHKRQ               YES
         XC    FSTAB,FSTAB         NO, GET TERMINAL ATTRIBUTES
        GTTERM MF=(E,GTPARM)
         LTR   R15,R15
         BNZ   SMS13
         OI    SWITCH,SCRGT        INDICATE GOTTEN
         CLC   FSALTSZE,=F'0'
         BNE   CHKRQ
         MVC   FSALTSZE,FSPRMSZE
CHKRQ    CLC   REQSZ,=F'0'
         BNE   CHKCT
         MVC   REQSZ,=AL1(24,80)   SET DEFAULT
         CLC   REQSZ,FSPRMSZE
         BE    CHKCT
         CLC   REQSZ,FSALTSZE
         BNE   SMS4
CHKCT   GTSIZE ,                   GET CURRENT LOGICAL SCREEN SIZE
         LTR   R15,R15
         BNZ   SMS2
         LTR   R0,R0               IS IT A SCREEN?
         BZ    SMS3                IF ZERO, NOT A SCREEN
         STC   R0,CURROW           SAVE CURRENT SCREEN SIZE
         STC   R1,CURCOL
         CLC   REQSZ,CURSZ
         BE    *+L'*+4             MATCH WITH REQUESTED?
         OI    SWITCH,SCRSR        NO, INDICATE SCREEN SIZE TO BE SET
        STCOM  NO                  TURN OFF INTERCOM.
         LTR   R15,R15
         BNZ   SMS5
        STTMPMD ON,KEYS=ALL        DISABLE SESSION MANAGER
         LTR   R15,R15
         BNZ   SMS6
        STFSMODE ON,INITIAL=YES    TURN ON VTAM FULL-SCREEN MODE
         LTR   R15,R15
         BNZ   SMS7
         TM    SWITCH,SCRSR        SCREEN SIZE TO BE SET?
         BZ    NOCHNG              BRANCH IF NOT
         XC    DBLWRD,DBLWRD
         MVC   DBLWRD+3(L'CURCOL),REQCOL
         MVC   DBLWRD+7(L'CURROW),REQROW
        STSIZE SIZELOC=DBLWRD,LINELOC=DBLWRD+4 SET REQUESTED SIZE
         LTR   R15,R15
         BNZ   SMS8
NOCHNG   OI    SWITCH,SCRFT        SET FIRST TIME ENTRY DONE
         CLC   REQSZ,FSPRMSZE      USE CORRECT ERASE ORDER
         BNE   SETALT
        $FS    CC=EW,MF=(I,CLSCR)
         B     DOCLRS
SETALT  $FS    CC=EWA,MF=(I,CLSCR)
DOCLRS   LA    R15,REQSZ           SET CORRECT SBA
         BAS   R14,SCLSBA
         LA    R1,CLSCR
         LA    R0,LCLSCR
         ICM   R1,B'1000',TPUTFLG  INDICATE FULL-SCREEN
        TPUT   (1),(0),R
         LTR   R15,R15
         BNZ   SMS9
         SPACE 1
*------- EXECUTE FULL-SCREEN PROCESSING.
         SPACE 1
GODONE   LM    R0,R1,SCIMLG        GET IMAGE INFO'S
         CLC   0(L'ASKQ,R1),ASKQ   WHICH TPUT ...
         BE    TNOEW
         ICM   R1,B'1000',TPUTFLG  INDICATE FULL-SCREEN
        TPUT   (1),(0),R
         B     TSTTP
TNOEW    LM    R8,R9,SCIMLG        GET IMAGE INFO'S
        TPUT   (R9),(R8),NOEDIT,WAIT
TSTTP    LTR   R15,R15
         BNZ   SMS10
         TM    SWOPT,FSSKIP        NO REPLY REQUESTED ?
         BO    RETOK               YES, EXIT
         L     R9,ABFFR
         LTR   R9,R9
         BNZ   *+L'*+4
         BAS   R8,SETBUF           CREATE BUFFER (NOT DONE PREVIOUSLY)
         USING TRBUF,R9
         LM    R4,R7,CLRRP         CLEAR REPLY AREA
         LR    R0,R5
         BCTR  R0,0
         MVCL  R4,R6
         NI    SWITCH,255-BFFSH
        TGET   SREPLY,(0),ASIS
         ST    R1,LREPLY           TRUE LENGTH REPLY
         LTR   R15,R15             IS INPUT OK?
         BZ    SKCLRQ              YES
         CH    R15,=H'20'          TERMINAL DISCONNECTED?
         BE    ENDIT               YES,... SPLIT
         CH    R15,=H'8'           ATTENTION?
         BE    ENDIT               YES,... SPLIT
         CH    R15,=H'12'          IS INPUT LONGER THAN BUFFER?
         BNE   SMS11               NO,... ERROR
         OI    SWITCH,BFFSH        YES, SET BUFFER SHORTAGE
        TCLEARQ INPUT              FLUSH THE TRASH
SKCLRQ   TM    SWITCH,CLSNP        SNAP CLOSED?
         BO    NOSNAP              YES
         TM    SWOPT,FSSNAP        NO, SNAP WANTED?
         BZ    NOSNAP              NO
         TM    SWITCH,OPSNP        YES, SNAP OPENED?
         BO    DOSNAP              YES
         LA    R2,SNAPDCB          NO, SEARCH DD AND OPEN IT IF ANY
         USING IHADCB,R2
        EXTRACT    ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT
         USING TIODSECT,R3
SCSNAP   CLC   TIOELNGH(4),=F'0'
         BE    OSERR
         CLC   TIOEDDNM,DCBDDNAM
         BE    OPSNAP
         SR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     SCSNAP
         DROP  R3
OPSNAP  OPEN   (SNAPDCB,OUTPUT)
         TM    DCBOFLGS,DCBOFOPN
         BZ    OSERR               SNAP OPEN ERROR
         DROP  R2
         OI    SWITCH,OPSNP        SNAP IS NOW OPENED
DOSNAP   LA    R15,SREPLY
         ST    R15,AFTRB
         AL    R15,LREPLY
         BCTR  R15,0
         ST    R15,ALTRB
         MVC   TNTRB,LREPLY
         LA    R8,REPLY+SFXL-1
         AL    R8,MXBSZ
        SNAP   TCB='S',STORAGE=((R9),(R8)),MF=(E,SNAPLST)
         LTR   R15,R15
         BZ    NOSNAP
        CLOSE  (SNAPDCB)           SNAP ERROR
OSERR    OI    SWITCH,CLSNP
NOSNAP   XR    R2,R2
         LR    R3,R2
         LR    R4,R2
         LR    R5,R2
         L     R0,LREPLY
         LTR   R0,R0
         BNP   STNRET
         LA    R1,SREPLY
         CLI   0(R1),X'88'         AID OF S.F. (STRUCTURED FIELD)?
         BNE   CHKPAK              NO
         LR    R2,R1               YES, SET S.F. START
         XR    R14,R14
         ICM   R14,B'0011',1(R1)
         LA    R14,5(R14)          S.F. LENGTH
         SR    R0,R14
         BNP   STNRET
         AR    R1,R14              A REPLY FOLLOWS, POINT AFTER S.F.
CHKPAK   CLI   0(R1),X'6C'         PA 1 ENTERED?
         BE    ENDREQ              YES,... SPLIT
         CLI   0(R1),X'6E'         PA 2 ENTERED?
         BE    ENDREQ              YES,... SPLIT
         CLI   0(R1),X'6B'         PA 3 ENTERED?
         BE    ENDREQ              YES,... SPLIT
         B     STNRET              NO
ENDIT    XR    R2,R2
         LR    R3,R2
         LR    R4,R2
         LR    R5,R2
ENDREQ   LA    R15,8               END REQUESTED
         B     SNXTGT
STNRET   XR    R15,R15
SNXTGT   LR    R3,R1
         LA    R14,L'SREPLY
         SR    R0,R14
         BNP   *+L'*+6
         LR    R5,R0
         LA    R4,0(R1,R14)
         STM   R4,R5,AREPLY        REPLY LENGTH AND START ADDRESS
         L     R14,4(R13)
         STM   R2,R3,20(R14)       PASS AID'S ADDRESSES ...
         LTR   R15,R15
         BZ    RETOK
         B     LEAVE
         DROP  R9
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTNR ---> MACRO : @FSR                                      *
*        FUNCTION : PROCESS THE REPLY TEXT OBTAINED VIA TGET         *
*                   (THIS IS MANDATORY AS LAST CALL).                *
*                   IT PASSES INPUT TO CALLER (FIELD BY FIELD).      *
*        AT ENTRY : NONE                                             *
*         AT EXIT : R15 = 0 - COMPLETION OF REPLY TEXT (NO MORE),    *
*                         AND R1 = 0                                 *
*              OR : R15 = ADDRESS OF SBA (SET BUFFER ADDRESS ORDER,  *
*                         1-BYTE) FOLLOWED BY THE BUFFER ADDRESS     *
*                         (2-BYTES), FOLLOWED BY THE TEXT READ,      *
*                         AND R1 = LENGTH OF TEXT                    *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTNR  L     R2,4(R13)
         XC    24(4,R2),24(R2)     SET R1 = 0 FOR RETURN
         LM    R15,R0,AREPLY
         LTR   R0,R0               ANYTHING TO PASS?
         BNP   RETOK               NO MORE ...
         CLI   0(R15),X'11'        SBA ORDER?
         BE    *+L'*+10            YES
RESALL   XC    LREPLY,LREPLY       NO, RESET ALL ...
         B     RETOK               SAY END ...
         LA    R14,3(R15)          POINT TO TEXT
         XR    R1,R1
         SH    R0,=H'3'            MINUS SBA + BUFFER ADDR.
         BM    RESALL              BRANCH IF NO MORE, END
         BZ    LSTNLL              BRANCH IF LAST IS NULL
SRCSBA   CLI   0(R14),X'11'        SEARCH END OR NEXT SBA
         BE    NXTSBA
         LA    R1,1(R1)
         LA    R14,1(R14)
         BCT   R0,SRCSBA
         B     LSTNLL
NXTSBA   ST    R14,AREPLY
LSTNLL   ST    R1,24(R2)           SET R1 = LENGTH FOR RETURN
         ST    R0,LREPLY           SET R0 = REMAINING LENGTH
         B     LEAVE
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTNI,(A,B,C),VL ---> MACROS : @FSI AND @FST                 *
*             (A,B)                                                  *
*             (A)                                                    *
*        FUNCTION : SET MAXIMUM REPLY TEXT LENGTH (BUFFER) FOR TGET  *
*                   (DEFAULT BUFFER SIZE IS 1K, MAXIMUM IS 30K).     *
*                   IT OBTAINS THE BUFFER FOR REPLY TEXT.            *
*                   ALSO, EVENTUALLY GET TERMINAL ATTRIBUTES AND/OR  *
*                   DECLARE THE DESIRED WORKING SCREEN SIZE (BY      *
*                   DEFAULT IT IS 24 * 80).                          *
*        AT ENTRY : A = ADDRESS OF A FULLWORD CONTAINING THE MAXIMUM *
*                       REPLY TEXT LENGTH (BUFFER LENGTH)            *
*                       IF R1 IS ZERO, OR THE ADDRESS IS ZERO, OR    *
*                       THE LENGTH IS ZERO OR NEGATIVE, THEN DEFAULT *
*                       SIZE IS USED                                 *
*                   B = ADDRESS OF AN 8-BYTES FIELD TO RECEIVE BACK  *
*                       THE TERMINAL ATTRIBUTES                      *
*                   C = ADDRESS OF A 2-BYTES FIELD CONTAINING THE    *
*                       DESIRED WORKING SCREEN SIZE AS BELOW :       *
*                            1ST-BYTE = ROWS VALUE, AND              *
*                            2ND-BYTE = COLUMNS VALUE.               *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION                      *
*                       = 16 - ERROR DETECTED (MESSAGE SENT)         *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTNI  XC    AREPLY(L'AREPLY+L'LREPLY),AREPLY
         XC    REQSZ,REQSZ
         LTR   R1,R1
         BZ    STIDEF
         L     R2,0(R1)
         LA    R2,0(R2)
         TM    0(R1),X'80'
         BO    SKSGTA
         TM    4(R1),X'80'
         BO    GETTA
         TM    SWITCH,SCRFT        WAS FIRST TIME ENTRY DONE?
         BO    SMS22               BRANCH IF YES
         TM    8(R1),X'80'
         BZ    SMS1
         L     R3,8(R1)
         LA    R3,0(R3)
         LTR   R3,R3
         BZ    GETTA
         MVC   REQSZ,0(R3)         COPY REQUESTED SCREEN SIZE
GETTA    L     R3,4(R1)
         LA    R3,0(R3)
         LTR   R3,R3
         BZ    SKSGTA
         TM    SWITCH,SCRGT        TEMINAL ATTRIBUTES AVAILABLE?
         BO    SETTA               YES
         XC    FSTAB,FSTAB         NO, GET TERMINAL ATTRIBUTES
        GTTERM MF=(E,GTPARM)
         LTR   R15,R15
         BNZ   SMS13
         OI    SWITCH,SCRGT        INDICATE GOTTEN
         CLC   FSALTSZE,=F'0'
         BNE   SETTA
         MVC   FSALTSZE,FSPRMSZE
SETTA    MVC   0(L'FSTAB,R3),FSTAB PASS BACK TO CALLER
         CLC   REQSZ,=F'0'
         BE    SKSGTA
         CLC   REQSZ,FSPRMSZE
         BE    SKSGTA
         CLC   REQSZ,FSALTSZE
         BNE   SMS21
SKSGTA   LTR   R2,R2
         BZ    STIDEF
         L     R0,0(R2)
         LTR   R0,R0
         BP    *+L'*+10
STIDEF   MVC   MXBSZ,=A(1*KBYTES)
         B     GETBUF
         AH    R0,=H'7'
         SRL   R0,3
         SLL   R0,3
         CL    R0,=A(30*KBYTES)
         BH    SMS1
         ST    R0,MXBSZ
GETBUF   LM    R0,R1,LBFFR
         LTR   R1,R1
         BZ    NOBUF
        FREEMAIN R,LV=(0),A=(1)
         XC    LBFFR(L'LBFFR+L'ABFFR),LBFFR
NOBUF    BAS   R8,SETBUF           CREATE BUFFER
         B     RETOK
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTNQ,(A),VL ---> MACRO : @FSQ                               *
*        FUNCTION : GET QUERY REPLY INFORMATION.                     *
*                   (DEFAULT BUFFER SIZE IS 1K, MAXIMUM IS 30K)      *
*        AT ENTRY : A = ADDRESS OF A FULLWORD CONTAINING THE MAXIMUM *
*                       QUERY REPLY LENGTH (BUFFER LENGTH)           *
*                       IF R1 IS ZERO, OR THE ADDRESS IS ZERO, OR    *
*                       THE LENGTH IS ZERO OR NEGATIVE, THEN DEFAULT *
*                       SIZE IS USED                                 *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION (QUERY AT DISPOSAL,  *
*                             R1 = ADDRESS OF QUERY REPLY BUFFER     *
*                             INFORMATION AND R0 = LENGTH)           *
*                       = 16 - ERROR DETECTED (MESSAGE SENT)         *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTNQ  L     R7,4(R13)
         XC    20(2*4,R7),20(R7)   SET R0 AND R1 = 0 FOR RETURN
         TM    SWITCH,SCRFT        WAS FIRST TIME ENTRY DONE?
         BZ    SMS12               BRANCH IF NOT
         LR    R5,R1
         TM    FSATTRB3,FSTASCII
         BO    SMS14
         TM    FSATTRB3,FSTQUERY
         BZ    SMS15
         OC    QLBFR,QLBFR
         BNZ   GTQBUF
         LTR   R5,R5
         BZ    STQDEF
         L     R2,0(R5)
         LTR   R2,R2
         BNM   SMS1
         LA    R2,0(R2)
         LTR   R2,R2
         BZ    STQDEF
         L     R0,0(R2)
         LTR   R0,R0
         BP    *+L'*+10
STQDEF   MVC   QLBFR,=A(1*KBYTES)
         B     GTQBUF
         AH    R0,=H'7'
         SRL   R0,3
         SLL   R0,3
         CL    R0,=A(30*KBYTES)
         BH    SMS1
         ST    R0,QLBFR
GTQBUF   LM    R0,R1,QLBFR
         LR    R3,R0
         LTR   R1,R1
         BNZ   ZQBUF
        GETMAIN R,LV=(0)
         ST    R1,QABFR
ZQBUF    LR    R2,R1
         XR    R15,R15
         BASR  R14,0
         MVCL  R2,R14
         LR    R2,R1
         CLC   REQSZ,FSPRMSZE      USE CORRECT ERASE ORDER
         BNE   ALTST
        $FS    CC=EW,MF=(I,RSTAID)
         B     DORST
ALTST   $FS    CC=EWA,MF=(I,RSTAID)
DORST    LA    R0,RSTAIDL
         LA    R1,RSTAID
         ICM   R1,B'1000',TPUTFLH
        TPUT   (1),(0),R           RESET ATTENTION IDENTIFIER (1)
         LTR   R15,R15
         BNZ   SMS16A
        TCLEARQ INPUT              FLUSH THE TRASH
        TPG    ASKQ,ASKQL,NOEDIT,WAIT
         LTR   R15,R15
         BNZ   SMS17
         LM    R0,R1,QLBFR
         ICM   R1,B'1000',TGETFLG
        TGET   (1),(0),R           READ QUERY RESPONSE
         LTR   R15,R15
         BNZ   SMS18
         LR    R5,R1
         LA    R0,RSTAIDL
         LA    R1,RSTAID
         ICM   R1,B'1000',TPUTFLH
        TPUT   (1),(0),R           RESET ATTENTION IDENTIFIER (2)
         LTR   R15,R15
         BNZ   SMS16B
         LR    R6,R2
         ALR   R2,R5
         BCTR  R2,0
         CLR   R6,R2
         BH    SMS19               AID FROM QUERY REPLY NOT RECEIVED
         CLI   0(R6),X'88'
         BNE   SMS20               NOT AID FROM QUERY REPLY
         STM   R5,R6,20(R7)        SET R0 AND R1 = 0 FOR RETURN
         B     RETOK
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTNB,(A,B),VL ---> MACRO : @FSBA                            *
*        FUNCTION : COMPUTE ROW/COLUMN TO BUFFER ADDRESS FOR THE     *
*                   CURRENT WORKING SCREEN SIZE                      *
*        AT ENTRY : A = ADDRESS OF A 2-BYTES FIELD CONTAINING THE    *
*                       DESIRED ROW/COLUMN AS BELOW :                *
*                             1ST-BYTE = ROW VALUE, AND              *
*                             2ND-BYTE = COLUMN VALUE                *
*                   B = ADDRESS OF A 2-BYTES FIELD TO RECEIVE BACK   *
*                       THE CORRESPONDING BUFFER ADDRESS             *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION                      *
*                       = 16 - ERROR DETECTED (MESSAGE SENT)         *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTNB  BAS   R14,CKSTPL          CHECK-SET PARAMETERS
         CLC   REQROW,0(R2)        VALID ROW?
         BL    SMS1                NO
         CLC   REQCOL,1(R2)        VALID COLUMN?
         BL    SMS1                NO
         XR    R0,R0
         LR    R1,R0
         IC    R0,0(R2)            POS = ((ROW-1) * MAXCOL) + (COL-1)
         BCT   R0,*+L'*+4
         B     *+L'*+8
         IC    R1,REQCOL
         MR    R0,R0
         XR    R0,R0
         IC    R0,1(R2)
         BCTR  R0,0
         AR    R1,R0
         LR    R15,R1
         SRL   R15,6
         IC    R0,TBSBA(R15)
         STC   R0,0(R3)
         N     R1,=A(X'0000003F')
         IC    R0,TBSBA(R1)
         STC   R0,1(R3)
         B     RETOK
         EJECT
*--------------------------------------------------------------------*
* CALL FSRTNA,(A,B),VL ---> MACRO : @FSRC                            *
*        FUNCTION : COMPUTE BUFFER ADDRESS TO ROW/COLUMN FOR THE     *
*                   CURRENT WORKING SCREEN SIZE                      *
*        AT ENTRY : A = ADDRESS OF A 2-BYTES FIELD CONTAINING THE    *
*                       BUFFER ADDRESS                               *
*                   B = ADDRESS OF A 2-BYTES FIELD TO RECEIVE BACK   *
*                       THE CORRESPONDING ROW/COLUMN AS BELOW :      *
*                             1ST-BYTE = ROW VALUE, AND              *
*                             2ND-BYTE = COLUMN VALUE                *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION                      *
*                       = 16 - ERROR DETECTED (MESSAGE SENT)         *
*--------------------------------------------------------------------*
         SPACE 1
@FSRTNA  BAS   R14,CKSTPL          CHECK-SET PARAMETERS
         LA    R4,1
         LA    R5,TBSBAL
         LA    R6,TBSBA            CHECK VALID HEX BUFFER ADDRESS
         LR    R0,R6
         CLC   0(1,R2),0(R6)
         BE    *+L'*+8
         BXLE  R6,R4,*-10
         B     SMS1
         SR    R6,R0
         LR    R1,R6
         SLL   R1,6
         LR    R6,R0
         CLC   1(1,R2),0(R6)
         BE    *+L'*+8
         BXLE  R6,R4,*-10
         B     SMS1
         SR    R6,R0
         AR    R1,R6
         AR    R1,R4
         XR    R0,R0
         LR    R2,R0
         IC    R2,REQCOL
         LR    R4,R2
         LR    R5,R0
         IC    R5,REQROW
         MR    R4,R4
         CLR   R1,R5               CHECK VALID BUFFER ADDRESS
         BNL   SMS1
         AR    R1,R2               TO GET THE RIGHT (ROW,COL)
         DR    R0,R2               POS / MAXCOL
         STC   R0,1(R3)            REMAINDER = COL
         STC   R1,0(R3)            QUOTIENT = ROW
         B     RETOK
         EJECT
*------- ERROR MESSAGES - TERMINATION.
         SPACE 1
SMS1     BAS   R8,FSOFF
         LA    R0,L'ERROR1         WRONG CALL PARM'S
         LA    R1,ERROR1
         B     SEVERR
SMS2     LA    R7,ERROR2+17
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR2         GTSIZE ERROR
         LA    R1,ERROR2
         B     SEVERR
SMS3     BAS   R8,FSOFF
         LA    R0,L'ERROR3         NOT SCREEN TERMINAL
         LA    R1,ERROR3
         B     SEVERR
SMS4     BAS   R8,FSOFF
         LA    R0,L'ERROR4         NOT SIZED 24 * 80
         LA    R1,ERROR4
         B     SEVERR
SMS5     LA    R7,ERROR5+19
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR5         STCOM NO ERROR
         LA    R1,ERROR5
         B     SEVERR
SMS6     LA    R7,ERROR6+30
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR6         STTMPMD ON,KEYS=ALL ERROR
         LA    R1,ERROR6
         B     SEVERR
SMS7     LA    R7,ERROR7+34
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR7         STFSMODE ON,INITIAL=YES ERROR
         LA    R1,ERROR7
         B     SEVERR
SMS8     LA    R7,ERROR8+20
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR8         STSIZE SIZE=80,LINE=24 ERROR
         LA    R1,ERROR8
         B     SEVERR
SMS9     LA    R7,ERROR9+31
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR9         INITIAL CLEAR ERROR
         LA    R1,ERROR9
         B     SEVERR
SMS10    LA    R7,ERROR10+28
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR10        TPUT SCREEN ERROR
         LA    R1,ERROR10
         B     SEVERR
SMS11    LA    R7,ERROR11+28
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR11        TGET SCREEN ERROR
         LA    R1,ERROR11
         B     SEVERR
SMS12    BAS   R8,FSOFF
         LA    R0,L'ERROR12        FS MODE OFF FAILED
         LA    R1,ERROR12
         B     SEVERR
SMS13    CH    R15,=H'8'
         BE    SMS3
         LA    R7,ERROR13+17
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR13        GTTERM FAILED
         LA    R1,ERROR13
         B     SEVERR
SMS14    BAS   R8,FSOFF
         LA    R0,L'ERROR14        ASCII NOT SUPPORTED
         LA    R1,ERROR14
         B     SEVERR
SMS15    BAS   R8,FSOFF
         LA    R0,L'ERROR15        CAN'T DO QUERY
         LA    R1,ERROR15
         B     SEVERR
SMS16A   MVI   ERROR16+15,C'1'
         B     SMS16
SMS16B   MVI   ERROR16+15,C'2'
SMS16    LA    R7,ERROR16+24
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR16        RESET AID (N) FAILED
         LA    R1,ERROR16
         B     SEVERR
SMS17    LA    R7,ERROR17+29
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR17        ASK QUERY RESPONSE FAILED
         LA    R1,ERROR17
         B     SEVERR
SMS18    LA    R7,ERROR18+30
         BAS   R14,SMSRC
         BAS   R8,FSOFF
         LA    R0,L'ERROR18        READ QUERY REPONSE FAILED
         LA    R1,ERROR18
         B     SEVERR
SMS19    BAS   R8,FSOFF
         LA    R0,L'ERROR19        QUERY AID NOT RECEIVED
         LA    R1,ERROR19
         B     SEVERR
SMS20    BAS   R8,FSOFF
         LA    R0,L'ERROR20        WRONG QUERY AID
         LA    R1,ERROR20
         B     SEVERR
SMS21    BAS   R8,FSOFF
         LA    R0,L'ERROR21        INVALID SCREEN SIZE
         LA    R1,ERROR21
         B     SEVERR
SMS22    BAS   R8,FSOFF
         LA    R0,L'ERROR22        CAN'T CHANGE SCREEN SIZE NOW
         LA    R1,ERROR22
SEVERR  TPUT   (1),(0),R
         LA    R15,16              SEVERE ERROR
         B     LEAVE
         SPACE 1
*------- TURN OFF FULL-SCREEN (SPF),
*        CLEAR AND RESET CURSOR TO ROW1, COL1.
         SPACE 1
QUIT     LA    R8,RETOK
*              R8 = LINK REGISTER
FSOFF    TM    SWITCH,SCRFT        WAS FIRST TIME ENTRY DONE?
         BZ    GOEXIT              BRANCH IF NOT
         TM    SWITCH,SCRSR        WAS SCREEN SIZE CHANGED?
         BZ    ENDCL               BRANCH IF NOT
         XC    DBLWRD,DBLWRD
         MVC   DBLWRD+3(L'CURCOL),CURCOL
         MVC   DBLWRD+7(L'CURROW),CURROW
        STSIZE SIZELOC=DBLWRD,LINELOC=DBLWRD+4 RESTORE ORIGINAL SIZE
         ST    R15,LSOPRC+0*4
         CLC   CURSZ,FSPRMSZE      USE CORRECT ERASE ORDER
         BNE   STALT
        $FS    CC=EW,MF=(I,CLSCR)
         B     ENDCL
STALT   $FS    CC=EWA,MF=(I,CLSCR)
ENDCL    LA    R15,CURSZ           SET CORRECT SBA
         BAS   R14,SCLSBA
         LA    R1,CLSCR
         LA    R0,LCLSCR
         ICM   R1,B'1000',TPUTFLG  INDICATE FULL-SCREEN
        TPUT   (1),(0),R
         ST    R15,LSOPRC+1*4
        STFSMODE OFF               TURN OFF FULL-SCREEN MODE
         ST    R15,LSOPRC+2*4
        STTMPMD OFF                MAY BE ENABLE SESSION MANAGER
         ST    R15,LSOPRC+3*4
        STCOM  YES                 TURN ON INTERCOM.
         ST    R15,LSOPRC+4*4
         SPACE 1
*------- THAT'S ALL FOLKS.
         SPACE 1
GOEXIT   NI    SWITCH,255-SCRFT-SCRGT-SCRSR RESET ALL
         XC    FSTAB,FSTAB
         XC    REQSZ,REQSZ
         TM    SWITCH,CLSNP        SNAP CLOSED?
         BO    QFBUF               YES
         TM    SWITCH,OPSNP        NO,... SNAP OPENED?
         BZ    QFBUF               NO
        CLOSE  (SNAPDCB)           CLOSE SNAP
         OI    SWITCH,CLSNP        CLOSE SNAP WAY
QFBUF    LM    R0,R1,QLBFR
         LTR   R1,R1
         BZ    FRBUF
        FREEMAIN R,LV=(0),A=(1)
         XC    QLBFR(L'QLBFR+L'QABFR),QLBFR
FRBUF    LM    R0,R1,LBFFR
         LTR   R1,R1
         BZR   R8
        FREEMAIN R,LV=(0),A=(1)
         XC    LBFFR(L'LBFFR+L'ABFFR),LBFFR
         BR    R8
         SPACE 1
*------- BACK TO CALLER.
         SPACE 1
RETOK    XR    R15,R15
         TM    SWITCH,BFFSH
         BZ    LEAVE+L'LEAVE
         LA    R15,4               INPUT TRUNCATED
LEAVE    NI    SWITCH,255-BFFSH
         OC    LSOPRC(5*4),LSOPRC
         BZ    EXRET
         LR    R2,R15
         ICM   R15,B'1111',LSOPRC+0*4
         BZ    NXMS1
         XC    LSOPRC+0*4(4),LSOPRC+0*4
         LA    R7,MSGA+27
         BAS   R14,SMSRC
        TPUT   MSGA,L'MSGA
NXMS1    ICM   R15,B'1111',LSOPRC+1*4
         BZ    NXMS2
         XC    LSOPRC+1*4(4),LSOPRC+1*4
         LA    R7,MSGB+23
         BAS   R14,SMSRC
        TPUT   MSGB,L'MSGB
NXMS2    ICM   R15,B'1111',LSOPRC+2*4
         BZ    NXMS3
         XC    LSOPRC+2*4(4),LSOPRC+2*4
         LA    R7,MSGC+23
         BAS   R14,SMSRC
        TPUT   MSGC,L'MSGC
NXMS3    ICM   R15,B'1111',LSOPRC+3*4
         BZ    NXMS4
         XC    LSOPRC+3*4(4),LSOPRC+3*4
         LA    R7,MSGD+22
         BAS   R14,SMSRC
        TPUT   MSGD,L'MSGD
NXMS4    ICM   R15,B'1111',LSOPRC+4*4
         BZ    NXMSX
         XC    LSOPRC+4*4(4),LSOPRC+4*4
         LA    R7,MSGE+20
         BAS   R14,SMSRC
        TPUT   MSGE,L'MSGE
NXMSX    LR    R15,R2
EXRET   $XRET  CC=(R15)
         SPACE 1
*------- EDIT RC IN MESSAGE ROUTINE.
*              R15 = RC TO BE EDITED IN MESSAGE
*              R14 = LINK REGISTER
         SPACE 1
SMSRC    CVD   R15,DBLWRD
         MVC   0(4,R7),=XL4'40202120'
         ED    0(4,R7),DBLWRD+L'DBLWRD-2
         BR    R14
         SPACE 1
*------- CREATE BUFFER ROUTINE.
*              R8 = LINK REGISTER
         SPACE 1
SETBUF   L     R0,MXBSZ
         AL    R0,=A(PFXL+SFXL)
         ST    R0,LBFFR
        GETMAIN R,LV=(0)
         ST    R1,ABFFR
         USING TRBUF,R1
         MVC   FILLSD,=CL4'SNAP'
         LA    R2,SREPLY
         ST    R2,CLRRP
         LA    R2,L'SREPLY+1
         AL    R2,MXBSZ
         ST    R2,CLRRP+4
         LA    R2,REPLY
         AL    R2,MXBSZ
         MVC   1(4,R2),=CL4'SNAP'
         DROP  R1
         BR    R8
         SPACE 1
*------- SET CORRECT SBA ROUTINE.
*              R0-R1 = WORK REGISTERS
*              R14 = LINK REGISTER
*              R15 = AT ENTRY, SCREEN SIZE POINTER
         SPACE 1
SCLSBA   XR    R0,R0
         LR    R1,R0
         IC    R0,0(R15)
         IC    R1,1(R15)
         MR    R0,R0
         BCTR  R1,0
         BCTR  R1,0
         LR    R15,R1
         SRL   R15,6
         IC    R0,TBSBA(R15)
         STC   R0,CLSBA+1
         N     R1,=A(X'0000003F')
         IC    R0,TBSBA(R1)
         STC   R0,CLSBA+2
         BR    R14
         SPACE 1
*------- CHECK-SET PARAMETERS ROUTINE.
*              R1 = PARAMETERS LIST POINTER
*              R2-R3 = AT EXIT, PARAMETERS POINTERS
*              R14 = LINK REGISTER
         SPACE 1
CKSTPL   TM    SWITCH,SCRFT        WAS FIRST TIME ENTRY DONE?
         BZ    SMS12               BRANCH IF NOT
         LTR   R1,R1
         BZ    SMS1
         TM    0(R1),X'80'
         BO    SMS1
         TM    4(R1),X'80'
         BZ    SMS1
         LM    R2,R3,0(R1)
         LTR   R2,R2
         BZ    SMS1
         CLC   0(2,R2),=F'0'
         BE    SMS1
         LA    R3,0(R3)
         LTR   R3,R3
         BZ    SMS1
         BR    R14
         SPACE 1
         DROP  R10,R11
         EJECT
*--------------------------------------------------------------------*
*        CONSTANTS AND WORK-AREAS.                                   *
*--------------------------------------------------------------------*
         SPACE 1
DBLWRD   DC    D'0'
FSTAB   @FST   ,
GTPARM  GTTERM PRMSZE=FSPRMSZE,ALTSZE=FSALTSZE,ATTRIB=FSATTRIB,MF=L
ATIOT    DC    A(*-*)
KBYTES   EQU   1024
MXBSZ    DC    A(1*KBYTES)
SCIMLG   DC    A(*-*)        SCREEN IMAGE LENGTH
SCIMAD   DC    A(*-*)        SCREEN IMAGE ADDRESS
LBFFR    DC    A(*-*)        TGET - BUFFER LENGTH
ABFFR    DC    A(*-*)        TGET - BUFFER ADDRESS
QLBFR    DC    A(*-*)        QUERY TGET - BUFFER LENGTH
QABFR    DC    A(*-*)        QUERY TGET - BUFFER ADDRESS
AREPLY   DC    F'0'          TGET - REPLY CURRENT ADDRESS
LREPLY   DC    F'0'          TGET - REPLY LENGTH
CLRRP    DC    A(*-*,*-*,*+4,0)
LSOPRC   DC    5F'0'
REQSZ    DC    0H'0'         REQUESTED WORKING SCREEN SIZE
REQROW   DC    AL1(*-*)            ROWS VALUE
REQCOL   DC    AL1(*-*)            COLUMNS VALUE
CURSZ    DC    0H'0'         CURRENT (ORIGINAL) SCREEN SIZE
CURROW   DC    AL1(*-*)            ROWS VALUE
CURCOL   DC    AL1(*-*)            COLUMNS VALUE
TBSBA    DC    XL16'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'  00-0F
         DC    XL16'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'  10-1F
         DC    XL16'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'  20-2F
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'  30-3F
TBSBAL   EQU   *-1
         SPACE 1
SWITCH   DC    XL1'0'
SCRFT    EQU   X'80'         FIRST TIME ENTRY DONE
SCRGT    EQU   X'40'         TERMINAL ATTRIBUTES GOTTEN
SCRSR    EQU   X'20'         SCREEN SIZE TO BE SET/RESET
BFFSH    EQU   X'10'         BUFFER SHORTAGE
OPSNP    EQU   X'02'         SNAP OPENED
CLSNP    EQU   X'01'         SNAP CLOSED
SWOPT   @FSO   ,
         SPACE 1
TGETFLG  DC    XL1'81'       TGET ASIS,WAIT
TPUTFLG  DC    XL1'03'       TPUT FULLSCR,WAIT
TPUTFLH  DC    XL1'0B'       TPUT FULLSCR,WAIT,HOLD
         SPACE 1
ERROR1   DC    C'*** Wrong CALL parameter(s) detected ***'
ERROR2   DC    C'*** "GTSIZE" RC =     ***'
ERROR3   DC    C'*** I run only on a screen terminal ***'
ERROR4   DC    C'*** I want to be screen sized 24 x 80 ***'
ERROR5   DC    C'*** "STCOM NO" RC =     ***'
ERROR6   DC    C'*** "STTMPMD ON,KEYS=ALL" RC =     ***'
ERROR7   DC    C'*** "STFSMODE ON,INITIAL=YES" RC =     ***'
ERROR8   DC    C'*** "STSIZE set RC =     ***'
ERROR9   DC    C'*** Initial clear screen - RC =     ***'
ERROR10  DC    C'*** TPUT screen error - RC =     ***'
ERROR11  DC    C'*** TGET screen error - RC =     ***'
ERROR12  DC    C'*** VTAM full-screen mode is OFF ***'
ERROR13  DC    C'*** "GTTERM" RC =     ***'
ERROR14  DC    C'*** I don''t support ASCII terminal ***'
ERROR15  DC    C'*** Can''t do QUERY at terminal ***'
ERROR16  DC    C'*** Reset AID ( ) - RC =     ***'
ERROR17  DC    C'*** Ask QUERY response - RC =     ***'
ERROR18  DC    C'*** Read QUERY response - RC =     ***'
ERROR19  DC    C'*** AID form QUERY reply not received ***'
ERROR20  DC    C'*** Wrong AID from QUERY reply ***'
ERROR21  DC    C'*** Invalid working screen size ***'
ERROR22  DC    C'*** Can''t change working screen size now ***'
MSGA     DC    C'*** "STSIZE" restore - RC =     ***'
MSGB     DC    C'*** Clear screen - RC =     ***'
MSGC     DC    C'*** "STFSMODE OFF" RC =     ***'
MSGD     DC    C'*** "STTMPMD OFF" RC =     ***'
MSGE     DC    C'*** "STCOM YES" RC =     ***'
         SPACE 1
CLSCR    $FS   CC=EW,WCC=(AL,KBR,RMDT),MF=L
CLSBA    $FS   SBA=(24,79),MF=L
         $FS   SBA=(1,1),RA=(1,1,00),MF=L
         $FS   SBA=(1,1),SF=(IC),MF=L
LCLSCR   EQU   *-CLSCR
         SPACE 1
RSTAID   $FS   CC=EW,WCC=(KBR,RMDT),MF=L
RSTAIDL  EQU   *-RSTAID
         SPACE 1
ASKQ     $FS   CC=WSF,SET=(000501FF02),MF=L
ASKQL    EQU   *-ASKQ
         EJECT
*--------------------------------------------------------------------*
*        SNAP CONTROL BLOCKS.                                        *
*--------------------------------------------------------------------*
         SPACE 1
        PRINT  NOGEN
SNAPDCB DCB    DSORG=PS,RECFM=VBA,MACRF=(W),BLKSIZE=1632,LRECL=125,    X
               DDNAME=SYSSNAP
        PRINT  GEN
SNAPLST SNAP   DCB=SNAPDCB,ID=1,STORAGE=(*-*,*-*),STRHDR=SNAPHD,MF=L
SNAPHD   DC    AL1(L'HDT)
HDT      DC    C'F S R T N - DUMP OF TERMINAL INPUT BUFFER.'
         EJECT
*--------------------------------------------------------------------*
*        LITERAL POOL.                                               *
*--------------------------------------------------------------------*
         SPACE 1
        LTORG
         SPACE 1
*--------------------------------------------------------------------*
*        TGET REPLY BUFFER DUMMY SECTION.                            *
*--------------------------------------------------------------------*
         SPACE 1
TRBUF    DSECT
AFTRB    DS    F             ADDRESS OF FIRST TGET REPLY BYTE
ALTRB    DS    F             ADDRESS OF LAST TGET REPLY BYTE
TNTRB    DS    F             TOTAL NUMBER OF TGET REPLY BYTES
FILLSD   DS    CL4           FILLER FOR SNAP DUMP
SREPLY   DS    XL3           AID + JUNK (CURSOR ADDRESS)
PFXL     EQU   *-TRBUF
REPLY    DS    X             START OF REPLY TEXT
SFXL     EQU   5
         SPACE 1
*--------------------------------------------------------------------*
*        GENERAL DUMMY SECTIONS.                                     *
*--------------------------------------------------------------------*
         SPACE 1
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PS,DEVD=DA
        PRINT  GEN
         SPACE 2
         END
