1   03/06/87
                                                      DYNCC     1/2.

  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * *            D Y N A M I C            * * * * * * * *
  * * * * * * * *    CONCATENATION-DECONCATENATION    * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  Purpose :    Routine to dynamically concatenate and deconcatenate
  ---------    allocated data sets.

  Calling sequence : CALL DYNCC,(A,B),VL
  ------------------ CALL DYNDC,(A,B),VL
                                (A)

         Where : A - is the address of the list of the DDnames to be
                     concatenated (DYNCC) or the DDname of the group
                     to be deconcatenated (DYNDC).
                     DYNCC : A ===> DC CL8'DD1'
                                    DC CL8'DD2'
                                    ...
                                    DC CL8'DDN'
                                    DC XL1'0' or CL1' ' = end of list.
                     DYNDC : A ===> DC CL8'DDG'

                 B - receives the return codes (format fullwords -
                     F boundaries) if supplied (optional).
                             B ===> DC 2F'0'
                     In any case, the return codes are always given
                     back in registers 15 and 0.

         Return codes (register 15) :
                  0-4-8-12 = SVC 99 return codes. R0 = REASON code
                             fields = 0-1 - ERROR code
                                      2-3 - INFORMATION code
                        16 = calling sequence or parameter alignment
                             error (R0 = 0).
                        20 = DDname coding error. R0 = relative DDname
                             position from the beginning of the list
                             (0 = 1st, 1 = 2nd, ...).

  Module attribute : this routine is re-enterable.
  ------------------

  Assembler macro : $DYNCC A,B
  ----------------- $DYNDC A,B

         Where B is optional and may be omitted.
         Register use may be coded within parentheses.
1   03/06/87
                                                      DYNCC     2/2.

  Dynamic concatenation :
  -----------------------
         Dynamic concatenation logically connects allocated data sets
  into a concatenated group. You can only identify data sets to be
  concatenated by their associated DDnames. These data sets must not
  be open, if they are, the request for dynamic concatenation fails.
         The order in which you specify the DDnames is the order in
  which the routine will concatenate their associated data sets. The
  name associated with the concatenated group is the DDname that was
  specified first, the other DDnames are no longer associated with
  any data set. If a DDname you specify is already associated with a
  concatenated group, that entire group will be included in the new
  concatenation.
         After the request for dynamic concatenation is satisfied,
  all members of the dynamically-concatenated group are assigned the
  in-use attribute.

  Dynamic deconcatenation :
  -------------------------
         Dynamic deconcatenation logically disconnects the members of
  a concatenated group. You identify the concatenated group to be
  deconcatenated by specifying the DDname of the group. The request
  for dynamic deconcatenation fails if the concatenated group is open.
  A permanently concatenated group, or members of a concatenated group
  that are permanently concatenated, remain concatenated.
         When a concatenated group is dynamically deconcatenated, the
  DDnames that were associated with the data sets before they were
  concatenated are restored unless this would result in duplicate
  DDnames. This situation could arise if a dynamic allocation with the
  DDname to be restored occurred after a dynamic concatenation. In this
  case, the deconcatenation request fails.
         Dynamic deconcatenation has no effect on the in-use attributes
  associated with the members of the group.

  Reference : for more details, look to the section Dynamic Allocation
  ----------- in the IBM manual GC28-1150 (MVS/Extended Architecture
              System Programming Library : System Macros and Facilities
              Volume 1).
