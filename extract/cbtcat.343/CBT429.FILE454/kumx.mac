KUMX     TITLE 'KEYWORDS USER MASK FUNCTION.'
KUMX     START 0
         SPACE 1
*- - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                                                                    *
* PURPOSE :    BUILD LOCK TSO-COMMAND TABLE (PRIVATE USE ONLY).      *
* ---------                                                          *
*                                                                    *
* AUTHOR :     P.A. MOINIL                                           *
* --------     COMPUTING CENTRE                                      *
*              J.R.C. - ISPRA ESTABLISHMENT                          *
*              21020 ISPRA (VA), ITALY                               *
*                                                                    *
*- - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         PRINT NOGEN
        $DEFREG
        $XENT  BASE=(R11,R12)
         PRINT GEN
         EJECT
        CALL   ISPLINK,(VDEF,LL,BUFFER,TYPEC,LENBUF),VL
         LTR   R15,R15
         BNZ   ERR1
        CALL   ISPLINK,(VDEF,DL,LINENO,TYPEF,LEN4),VL
         LTR   R15,R15
         BNZ   ERR2
        CALL   ISPLINK,(EDIT,LEN0,EDMAC),VL
         LTR   R15,R15
         BNZ   ERR3
        CALL   ISPLINK,(EDIT,LEN0,EDDST),VL
         LTR   R15,R15
         BNZ   ERR4
        CALL   ISPLINK,(EDIT,LEN0,EDBDS),VL
         LTR   R15,R15
         BNZ   ERR5
         OC    LINENO,LINENO
         BZ    ERR6
         OC    COLNO,COLNO
         BZ    ERR6
         L     R3,RIGHTB
         CL    R3,LENBUF
         BH    ERR7
        CALL   ISPLINK,(EDIT,LEN0,EDGLN),VL
         LTR   R15,R15
         BNZ   ERR8
        CALL   ISPLINK,(EDIT,LEN0,EDMSK),VL
         LTR   R15,R15
         BNZ   ERR9
         MVC   WKAREA,BUFFER
         LA    R2,1
         LA    R4,WKAREA-1
         ALR   R3,R4
         AL    R4,LEFTB
         CLI   0(R4),C'*'
         BE    *+L'*+8
         CLI   0(R4),C' '
         BNE   *+L'*+8
         BXLE  R4,R2,*-8
         B     ERR10
         LR    R14,R4
         BXLE  R4,R2,*+L'*+4
         B     ERR11
         CLI   0(R4),C' '
         BNE   *-12
         LR    R15,R4
         SLR   R15,R14
         CH    R15,=Y(L'KEYW-1)
         BH    ERR11
         BCT   R15,*+L'*+6
         MVC   KEYW(*-*),0(R14)
         EX    R15,*-6
         BXLE  R4,R2,*+L'*+4
         B     ERR10
         CLI   0(R4),C' '
         BE    *-12
         LR    R14,R4
         BXLE  R4,R2,*+L'*+4
         B     ERR11
         CLI   0(R4),C' '
         BNE   *-12
         LR    R15,R4
         SLR   R15,R14
         CH    R15,=Y(L'KEYW)
         BH    ERR11
         BCT   R15,*+L'*+6
         MVC   KEYW+L'KEYW(*-*),0(R14)
         EX    R15,*-6
         BXLE  R4,R2,*+L'*+4
         B     ERR10
         CLI   0(R4),C' '
         BE    *-12
         LR    R14,R4
         BXLE  R4,R2,*+L'*+4
         B     ERR11
         CLI   0(R4),C' '
         BNE   *-12
         LR    R15,R4
         SLR   R15,R14
         CH    R15,=Y(L'KEYW)
         BH    ERR11
         BCT   R15,*+L'*+6
         MVC   KEYW+2*L'KEYW(*-*),0(R14)
         EX    R15,*-6
         MVI   SWDE1,2
         MVI   SWDE2,2
         MVI   SWDE3,2
         XC    TSWRD(8),=XL8'A4C4CD2F1D9C7664'
         OI    SWDE1,1
         XI    SWDE2,3
         OI    SWDE3,1
AGAIN    L     R2,TSWRD
         XR    R3,R3
         LA    R8,15
         LR    R6,R8
         SLL   R6,28
         XR    R7,R7
         LR    R4,R2
         SRL   R4,*-*
SWDE1    EQU   *-1
         XR    R2,R4
         NR    R2,R6
         STM   R2,R3,DBLWRD
         BASR  R1,0
         LM    R4,R5,TSWRD
         NR    R2,R6
         NR    R3,R7
         SRDL  R6,4
         NR    R4,R6
         NR    R5,R7
         SRDL  R2,4
         XR    R4,R2
         XR    R5,R3
         SLDL  R2,*-*
SWDE2    EQU   *-1
         XR    R4,R2
         XR    R5,R3
         NR    R4,R6
         NR    R5,R7
         LR    R2,R4
         LR    R3,R5
         SRDL  R2,*-*
SWDE3    EQU   *-1
         XR    R4,R2
         XR    R5,R3
         NR    R4,R6
         NR    R5,R7
         LM    R2,R3,DBLWRD
         OR    R2,R4
         OR    R3,R5
         STM   R2,R3,DBLWRD
         BCTR  R8,R1
         CLI   SWDE1,2
         BE    *+L'*+22
         NI    SWDE1,2
         XI    SWDE2,3
         NI    SWDE3,2
         MVC   TSWRD,DBLWRD
         B     AGAIN
         MVI   SWDE1,*-*
         MVI   SWDE2,*-*
         MVI   SWDE3,*-*
         CLI   DBLWRD,C' '
         BNE   *+L'*+14
         MVC   DBLWRD(L'DBLWRD-1),DBLWRD+1
         MVI   DBLWRD+L'DBLWRD-1,C' '
         B     *-18
         LA    R1,PLST1
         L     R15,=V(SETKEY)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR12
         MVC   IDWRD,KEYW
         LA    R1,PLST5
         L     R15,=V(ENCIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR13
         LA    R1,PLST4
         L     R15,=V(ENCIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR13
         LA    R1,PLST2
         L     R15,=V(SETKEY)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR12
         LA    R1,PLST4
         L     R15,=V(ENCIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR13
         LA    R1,PLST3
         L     R15,=V(SETKEY)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR12
         LA    R1,PLST4
         L     R15,=V(ENCIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERR13
         MVI   BUFFER,C' '
         MVC   BUFFER+1(L'BUFFER-1),BUFFER
         MVC   BUFFER+9(2),=CL2'DC'
         MVC   BUFFER+15(5),=CL5'XL16'''
         LA    R1,BUFFER+20
         LA    R2,IDWRD
         LA    R3,L'IDWRD+L'DBLWRD
LOOP     XR    R0,R0
         IC    R0,0(R2)
         STC   R0,1(R1)
         SRL   R0,4
         STC   R0,0(R1)
         NC    0(2,R1),=XL2'0F0F'
         TR    0(2,R1),=CL16'0123456789ABCDEF'
         LA    R1,2(R1)
         LA    R2,1(R2)
         BCT   R3,LOOP
         MVI   0(R1),C''''
         MVC   4(2,R1),=CL2'<='
         MVC   7(L'KEYW,R1),KEYW
        CALL   ISPLINK,(EDIT,LEN0,EDPLN),VL
         LTR   R15,R15
         BNZ   ERR14
         SPACE 1
         XR    R10,R10             SET RETURN CODE
         PRINT NOGEN
LEAVE   $XRET  CC=(R10)            RETURN
         PRINT GEN
         EJECT
ERR1     MVC   MLOP,=CL8'BUFFER  '
         B     ERRA
ERR2     MVC   MLOP,=CL8'... ... '
ERRA     MVC   MLFU,VDEF
         B     ERRXR
ERR3     MVC   MLOP,=CL8'MACRO   '
         B     ERRE
ERR4     MVC   MLOP,=CL8'CURSOR  '
         B     ERRE
ERR5     MVC   MLOP,=CL8'BOUNDS  '
         B     ERRE
ERR6     MVC   MLOP,=CL8'CURSOR  '
         B     ERRB
ERR7     MVC   MLOP,=CL8'BUFFER  '
ERRB     MVC   MLFU,=CL8'CHECK   '
         B     ERRC
ERR8     MVC   MLOP,=CL8'GET LINE'
         B     ERRE
ERR9     MVC   MLOP,=CL8'MASKLINE'
         B     ERRE
ERR10    MVC   MLOP,=CL8'BUFFER  '
         MVC   MLFU,=CL8'EMPTY   '
         B     ERRC
ERR11    MVC   MLOP,=CL8'ARGUMENT'
         MVC   MLFU,=CL8'INVALID '
ERRC     XR    R15,R15
         B     ERRXR
ERR12    MVC   MLOP,=CL8'SETKEY  '
         B     ERRD
ERR13    MVC   MLOP,=CL8'ENCIPH  '
ERRD     MVC   MLFU,=CL8'ERROR   '
         B     ERRXR
ERR14    MVC   MLOP,=CL8'PUT LINE'
ERRE     MVC   MLFU,EDIT
ERRXR    CVD   R15,DBLWRD          EDIT RETURN CODE RECEIVED
         MVC   MSRC,=XL4'40202120'
         ED    MSRC,DBLWRD+6
        CALL   ISPLINK,(VREP,MS,MSL,MSV),VL
         LR    R10,R15
        CALL   ISPLINK,(VREP,ML,MLL,MLV),VL
         SLL   R10,8
         OR    R10,R15
        CALL   ISPLINK,(SETM,MSGID),VL
         SLL   R10,8
         OR    R10,R15
         LTR   R10,R10
         BNZ   LEAVE
         LA    R10,100             SET RETURN CODE
         B     LEAVE
         EJECT
* ------ CONSTANTS AND WORK-AREAS.
         SPACE 1
IDWRD    DC    D'0'
DBLWRD   DC    D'0'
         SPACE 1
VDEF     DC    CL8'VDEFINE '
EDIT     DC    CL8'ISREDIT '
VREP     DC    CL8'VREPLACE'
SETM     DC    CL8'SETMSG  '
MSGID    DC    CL8'ISRZ001 '
TYPEC    DC    CL8'CHAR    '
TYPEF    DC    CL8'FIXED   '
LEN0     DC    F'0'
LEN4     DC    F'4'
LENBUF   DC    A(BUFLEN)
MSL      DC    A(MSVL)
MLL      DC    A(MLVL)
         SPACE 1
PLST1    DC    A(KEYW)
PLST2    DC    A(KEYW+L'KEYW)
PLST3    DC    A(KEYW+2*L'KEYW)
PLST4    DC    A(DBLWRD,*+4,L'DBLWRD)
PLST5    DC    A(IDWRD,*+4,L'IDWRD)
KEYW     DC    3CL8' '
TSWRD    DC    0XL8'0',F'-1',F'-1'
         SPACE 1
LINENO   DC    F'0'
COLNO    DC    F'0'
LEFTB    DC    F'0'
RIGHTB   DC    F'0'
BUFFER   DC    CL80' '
BUFLEN   EQU   *-BUFFER
WKAREA   DC    CL(BUFLEN)' '
         SPACE 1
LL       DC    C'(BUFFER)'
DL       DC    C'(LINENO,COLNO,LEFTB,RIGHTB)'
MS       DC    C'(ZEDSMSG)'
ML       DC    C'(ZEDLMSG)'
         SPACE 1
EDMAC    DC    C'ÖMACRO NOPROCESSÖ'
EDDST    DC    C'Ö(LINENO,COLNO) = CURSORÖ'
EDBDS    DC    C'Ö(LEFTB,RIGHTB) = BOUNDSÖ'
EDGLN    DC    C'Ö(BUFFER) = LINE &&LINENOÖ'
EDMSK    DC    C'ÖMASKLINE = " "Ö'
EDPLN    DC    C'ÖLINE_AFTER &&LINENO = MASKLINE + (BUFFER)Ö'
         SPACE 1
MSV      DC    C'RC ='
MSRC     DC    CL4' '
MSVL     EQU   *-MSV
MLV      DC    C'-- ERROR AT FUNCTION : '
MLFU     DC    CL8' ',C' / OPERATION : '
MLOP     DC    CL8' ',C' --'
MLVL     EQU   *-MLV
         EJECT
         LTORG
         SPACE 1
         DROP  R11,R12 - - - - - - END OF BASE REGISTER ADDRESSABILITY
         SPACE 2
         END
