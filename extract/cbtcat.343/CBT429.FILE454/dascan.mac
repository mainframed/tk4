DASC     TITLE 'DIRECT-ACCESS UCB-S LOOKUP SUBROUTINE.'
DASCAN   START 0
         SPACE 1
         ENTRY DARSCA
         SPACE 1
* CALLING SEQUENCE : CALL DASCAN,(A,B),VL
* ------------------ CALL DARSCA,(A,B),VL
*                                (A)
*
*        WHERE : A - RECEIVES THE ADDRESS OF AN ONLINE (DASCAN) OR
*                    AN ONLINE AND READY (DARSCA) DIRECT-ACCESS UCB
*                    (FORMAT FULLWORD - F BOUNDARY).
*
*                B - RECEIVES THE RETURN CODE (FORMAT FULLWORD -
*                    F BOUNDARY) IF SUPPLIED (OPTIONAL).
*
*        RETURN CODES (REGISTER 15) :
*
*                        0 = NORMAL.
*                        4 = END OF UCB'S LOOK UP TABLE.
*                        8 = CALLING SEQUENCE OR PARAMETER ALIGNMENT
*                            ERROR.
*
* GENERAL NOTICE : THIS ROUTINE IS SERIALLY REUSABLE.
* ================
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 2
        $DEFREG
         EJECT
         USING *,R15
         MVI   WTGO+3,COMMON-*     SET DASCAN ENTRY ---------- 1.
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
DARSCA   MVI   WTGO+3,COMMON-*     SET DARSCA ENTRY ---------- 0.
         DROP  R15
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         SPACE 1
COMMON  $XENT  BASE=R12,ID=DASCAN
         LR    R15,R12             COMPUTE ENTRY SWITCH.
         BCTR  R15,0
         SR    R7,R7
         IC    R7,0(R15)
         SRL   R7,4
         EJECT
         SR    R8,R8
         SR    R9,R9
         SR    R10,R10
         TM    3(R1),X'03'
         BNZ   ERSA
         TM    0(R1),X'80'
         BO    GADD
         TM    4(R1),X'80'
         BZ    ERSA
         TM    7(R1),X'03'
         BNZ   ERSA
         L     R9,4(R1)
         LA    R9,0(R9)
GADD     L     R8,0(R1)
         LA    R8,0(R8)
         L     R2,CVTPTR           GET CVT POINTER.
         USING CVT,R2
         BALR  R6,0                ESTABLISH LOOP ADDRESS.
         LA    R1,PARMLIST         SET PARAMETER LIST ADDRESS.
         L     R15,CVTUCBSC        GET SCAN SERVICE ADDRESS.
         DROP  R2
         BALR  R14,R15             GO TO SCAN SERVICE (R13=SA).
         LTR   R15,R15             HAS A UCB BEEN RETURNED?
         BNZ   ENDSRC              BRANCH IF END, NOT FOUND.
         L     R3,ADDRUCB          GET UCB ADDRESS.
         USING UCBDSECT,R3
         TM    UCBSTAT,UCBONLI     IS DEVICE ONLINE?
         BZR   R6                  IF NOT, GO TO NEXT.
         LTR   R7,R7               WHAT REQUESTED?
         BNZ   STORE               ONLY ONLINE, SKIP NEXT TEST.
         TM    UCBFLA,UCBNOTRD     IS DEVICE NOT READY?
         BOR   R6                  IF YES, GO TO NEXT.
         DROP  R3
         SPACE 1
STORE    ST    R3,0(R8)            PASS THIS UCB ADDRESS.
         B     LEAVE
         EJECT
ENDSRC   LA    R10,4
         B     CLEAR
ERSA     LA    R10,8
CLEAR    XC    ADDRUCB,ADDRUCB
         XC    WRKTAB,WRKTAB       CLEAR WORK AREA.
LEAVE    LTR   R9,R9
         BZ    EXIT
         ST    R10,0(R9)           STORE INDICATOR.
EXIT    $XRET  CC=(R10)
         SPACE 2
*        CONSTANTS AND WORK AREAS.
         SPACE 1
         DS    0D                  ALIGNMENT NEEDED.
WRKTAB   DC    XL100'0'
PARMLIST DC    A(WRKTAB,DEVCL),A(X'80000000'+ADDRUCB)
ADDRUCB  DC    F'0'
DEVCL    DC    AL1(UCB3DACC)       DIRECT ACCESS DEVICE CLASS.
         SPACE 2
        PRINT  NOGEN
         SPACE 1
        CVT    DSECT=YES,LIST=YES
         SPACE 1
UCBDSECT DSECT
         SPACE 1
        IEFUCBOB
         SPACE 1
        PRINT  GEN
         SPACE 2
         END
