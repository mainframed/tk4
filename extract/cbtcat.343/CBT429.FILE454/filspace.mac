FLSP     TITLE 'FILSPACE -- DATA-SET SPACE INFORMATION.'
FILSPACE START 0
         SPACE 1
* ORIGIN :     EXTRACTED FROM TAPE CBT 89 FEB, FILE 270.
* --------     ADAPTED BY MOINIL P.A.
*              ATTRIBUTES : RE-ENTERABLE
*
* PURPOSE :    THIS IS A SUBROUTINE THAT ACCEPTS A DATA-SET NAME AND
* ---------    THE VOLUME SERIAL NUMBER THAT IS PASSED TO IT AND
*              RETURNS TO THE INVOKER THE NUMBER OF USED EXTENTS AND
*              THE NUMBER OF USED TRACKS.
*
* TO USE THIS ROUTINE FROM A COBOL PROGRAM, DO THE FOLLOWING :
*            1. PLACE THE FOLLOWING DATA AREA IN THE WORKING-STORAGE :
*                 01  FILSPACE-I-O-AREA.
*                     05  FILLER                    PIC X(02).
*                     05  IN-DSN                    PIC X(44).
*                     05  IN-VOL-SER                PIC X(06).
*                     05  OUT-NO-OF-USED-EXTENTS    PIC 9(2).
*                     05  OUT-NO-OF-USED-TRACKS     PIC 9(5).
*            2. PLACE THE FOLLOWING CODE IN THE PROCEDURE DIVISION :
*                 MOVE DATA-SET NAME
*                   TO IN-DSN OF FILSPACE-I-O-AREA.
*                 MOVE VOLUME SERIAL NUMBER
*                   TO IN-VOL-SER OF FILSPACE-I-O-AREA.
*                 CALL 'FILSPACE' USING FILSPACE-I-O-AREA.
*
* RETURN CODE        MEANING
* -----------        -------------------------------------------------
*      0             SUCCESSFUL COMPLETION
*      4             REQUIRED VOLUME IS NOT MOUNTED
*      8             DATA-SET IS NOT FOUND ON VOLUME INDICATED
*     12             OBTAIN MACRO RETURNED WITH RC = 12, 16, OR 20
*     16             UNKNOWN UNIT TYPE WAS ENCOUNTERED
         EJECT
        $DEFREG
         EJECT
*------- INITIALIZATION.
         SPACE 1
        $XENT  BASE=R12,LV=WKLEN,TYPE=RENT
         LR    R2,R1
         LR    R9,R13
         USING WKAREA,R9
         L     R3,0(R2)
         MVC   FLSPAREA(L'FLSPAREA),0(R3)
         SPACE 1
*------- DO AN OBTAIN ON THE DATA-SET NAME.
         SPACE 1
         MVC   CAMLST2(CMLIST2L),CMLIST2
         LA    R1,INDSN
         STCM  R1,B'1111',CAMLST2+4
         LA    R1,INVOL
         STCM  R1,B'1111',CAMLST2+8
         LA    R1,OBTAREA
         STCM  R1,B'1111',CAMLST2+12
        OBTAIN CAMLST2
         LTR   R10,R15             TEST OBTAIN RC
         BZ    OBTOK               BRANCH IF REG 15 = 0
OBTERR   CH    R10,=H'8'           TEST IF OBTAIN RC IS .GT. 8
         BNH   LEAVE               BRANCH IF NOT
         LA    R10,12              R10 ==> 12
         B     LEAVE
         SPACE 1
*------- PROCESS THE DSCB1.
*        IF AN ERROR IS ENCOUNTERED, REGISTER 10 IS SET TO THE
*        APPROPRIATE VALUE WHICH IDENTIFIES THE REASON FOR THE ERROR.
*        IF NO ERROR IS ENCOUNTERED AND THE USED EXTENTS DOES NOT
*        EXCEED 3 (HENCE THERE IS NO DSCB3), THEN APPROPRIATE VALUES
*        ARE MOVED TO OUTTRKNO AND OUTEXTNO (I.E. 1, 2 OR 3).
*        IF NO ERROR IS ENCOUNTERED AND AND THE USED EXTENTS DOES
*        DOES EXCEED 3 AND THUS IT NEEDS TO PROCESS THE DSCB3, THEN
*        THE APPROPRIATE VALUE IS MOVED TO OUTTRKNO.
         SPACE 1
OBTOK    ZAP   RUNTOT,=PL1'+0'     RUNTOT = 0
         MVC   DS1LSTAR,OBTAREA+54
         CLC   DS1LSTAR,=XL3'0'
         BNE   NOTEMPTY
         MVC   OUTEXTNO(L'OUTEXTNO),=CL5'00000'
         MVC   OUTTRKNO,=CL5'00000'
         B     DSCB1X
NOTEMPTY MVC   HALFWORD(2),DS1LSTAR
         LH    R3,HALFWORD
         AH    R3,=H'1'
         CVD   R3,CONVDEC
         MVC   LSTRTRKS(3),CONVDEC+5
         UNPK  OUTTRKNO(5),LSTRTRKS(3)
         OI    OUTTRKNO+4,X'F0'
         CLI   OBTAREA+61,X'00'    IS 1ST EXTENT DESC INSIGNIFICANT ?
         BE    DSCB1X              BRANCH IF SO
         MVC   OUTEXTNO,=CL2'01'   MOVE 01 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+63
         MVC   ENDCCHH(4),OBTAREA+67
         BAL   R8,CALCTRKS         PERFORM ROUTINE TO CALCULATE
*                                  NUMBER OF TRACKS USED IN THIS EXTENT
         TM    SWITCH,PRSKIP       WERE ANY ERRORS ENCOUNTERED ?
         BO    LEAVE               BRANCH IF SO
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL NUMBER OF USED TRACKS
*                                    TO THIS POINT
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT PUT US PAST THE
*                                    DS1LSTAR VALUE ?
         BNH   DSCB1X              BRANCH IF SO
         CLI   OBTAREA+71,X'00'    IS 2ND EXTENT DESC INSIGNIFICANT ?
         BE    DSCB1X              BRANCH IF SO
         MVC   OUTEXTNO,=CL2'02'   MOVE 02 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+73
         MVC   ENDCCHH(4),OBTAREA+77
         BAL   R8,CALCTRKS         PERFORM ROUTINE TO CALCULATE
*                                  NUMBER OF TRACKS USED IN THIS EXTENT
         TM    SWITCH,PRSKIP       WERE ANY ERRORS ENCOUNTERED ?
         BO    LEAVE               BRANCH IF SO
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL NUMBER OF USED TRACKS
*                                    TO THIS POINT
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT PUT US PAST THE
*                                    DS1LSTAR VALUE ?
         BNH   DSCB1X              BRANCH IF SO
         CLI   OBTAREA+81,X'00'    IS 3RD EXTENT DESC INSIGNIFICANT ?
         BE    DSCB1X              BRANCH IF SO
         MVC   OUTEXTNO,=CL2'03'   MOVE 03 TO OUTEXTNO
         MVC   BGNCCHH(4),OBTAREA+83
         MVC   ENDCCHH(4),OBTAREA+87
         BAL   R8,CALCTRKS         PERFORM ROUTINE TO CALCULATE
*                                  NUMBER OF TRACKS USED IN THIS EXTENT
         TM    SWITCH,PRSKIP       WERE ANY ERRORS ENCOUNTERED ?
         BO    LEAVE               BRANCH IF SO
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL NUMBER OF USED TRACKS
*                                    TO THIS POINT
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT PUT US PAST THE
*                                    DS1LSTAR VALUE ?
         BNH   DSCB1X              BRANCH IF SO
         OI    SWITCH,PRDSCB3      SAY DSCB3 TO BE PROCESSED
         MVC   CCHHR,OBTAREA+91    MOVE CCHHR PTR FOR DSCB3 TO CCHHR
DSCB1X   TM    SWITCH,PRDSCB3      DO WE NEED TO PROCESS THE DSCB3 ?
         BZ    LEAVE               BRANCH IF NOT
         SPACE 1
*------- PROCESS THE DSCB3 AND THEN GENERATE THE EXTENT NUMBER.
         SPACE 1
         MVC   CAMLST3(CMLIST3L),CMLIST3
         LA    R1,CCHHR
         STCM  R1,B'1111',CAMLST3+4
         LA    R1,INVOL
         STCM  R1,B'1111',CAMLST3+8
         LA    R1,DCB3AREA
         STCM  R1,B'1111',CAMLST3+12
        OBTAIN CAMLST3
         LTR   R10,R15             TEST OBTAIN RC
         BNZ   OBTERR              BRANCH IF REG 15 NOT 0
         ZAP   PACKEXT#,=PL1'+3'
         LA    R3,DCB3AREA         R3 ==> ADDRESS OF DSCB3
         LA    R3,4(R3)            OFFSET TO DS3EXTNT
         LA    R4,4
LOOP3A   CLI   0(R3),X'00'
         BE    UNPKEXT#
         AP    PACKEXT#,=PL1'+1'
         MVC   BGNCCHH(4),2(R3)
         MVC   ENDCCHH(4),6(R3)
         BAL   R8,CALCTRKS         PERFORM ROUTINE TO CALCULATE
*                                  NUMBER OF TRACKS USED IN THIS EXTENT
         TM    SWITCH,PRSKIP       WERE ANY ERRORS ENCOUNTERED ?
         BO    LEAVE               BRANCH IF SO
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL NUMBER OF USED TRACKS
*                                    TO THIS POINT
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT PUT US PAST THE
*                                    DS1LSTAR VALUE ?
         BNH   UNPKEXT#            BRANCH IF SO
         LA    R3,10(R3)
         BCT   R4,LOOP3A
         LA    R3,1(R3)            OFFSET TO DS3ADEXT
         LA    R4,9
LOOP3B   CLI   0(R3),X'00'
         BE    UNPKEXT#
         AP    PACKEXT#,=PL1'+1'
         MVC   BGNCCHH(4),2(R3)
         MVC   ENDCCHH(4),6(R3)
         BAL   R8,CALCTRKS         PERFORM ROUTINE TO CALCULATE
*                                  NUMBER OF TRACKS USED IN THIS EXTENT
         TM    SWITCH,PRSKIP       WERE ANY ERRORS ENCOUNTERED ?
         BO    LEAVE               BRANCH IF SO
         AP    RUNTOT,TOTRACKS     RUNTOT = TOTAL NUMBER OF USED TRACKS
*                                    TO THIS POINT
         CP    LSTRTRKS,RUNTOT     DOES THIS EXTENT PUT US PAST THE
*                                    DS1LSTAR VALUE ?
         BNH   UNPKEXT#            BRANCH IF SO
         LA    R3,10(R3)
         BCT   R4,LOOP3B
UNPKEXT# UNPK  OUTEXTNO(2),PACKEXT#(3)
         OI    OUTEXTNO+1,X'F0'
         SPACE 1
*------- END OF PROCESSING.
         SPACE 1
LEAVE    L     R3,0(R2)
         MVC   0(L'FLSPAREA,R3),FLSPAREA
        $XRET  CC=(R10),LV=WKLEN,TYPE=RENT
         EJECT
*------- THIS ROUTINE CALCULATES THE NUMBER OF TRACKS GIVEN A
*        BEGINNING CCHH AND AN ENDING CCHH.
*        BEFORE PERFORMING THIS ROUTINE, DO THE FOLLOWING :
*            MOVE THE BEGINNING CCHH TO BGNCCHH,
*            AND MOVE THE ENDING CCHH TO ENDCCHH.
*        AFTER PERFORMING THIS ROUTINE, THE NUMBER OF USED
*        TRACKS WILL BE IN TOTRACKS.
*        LINK REGISTER = R8.
         SPACE 1
CALCTRKS LH    R0,BGNCCHH
         CVD   R0,CONVDEC          PACK BEGINNING CYL
         MVC   BEGINCYL(3),CONVDEC+5
         LH    R0,ENDCCHH
         CVD   R0,CONVDEC          PACK ENDING CYL
         MVC   ENDCYL(3),CONVDEC+5
         LH    R0,BGNCCHH+2
         CVD   R0,CONVDEC          PACK BEGINNING TRK
         MVC   BEGINTRK(3),CONVDEC+5
         LH    R0,ENDCCHH+2
         CVD   R0,CONVDEC          PACK ENDING TRK
         MVC   ENDTRK(3),CONVDEC+5
         ZAP   CYLDIFF,ENDCYL      CYLDIFF = ENDING CYL #
         SP    CYLDIFF,BEGINCYL    CYLDIFF = ENDING CYL - BEGIN CYL
         SPACE 1
*------- EXAMINES VOL SER TO DETERMINE THE # OF TRACKS PER
*        CYLINDER AND PLACES THE ANSWER IN TRKPRCYL.
*        IF AN ERROR IS ENCOUNTERED, THE REGISTER 10 IS
*        LOADED WITH 16 AND CONTROL GO BACK.
         SPACE 1
         LA    R1,UCBWA
         ST    R1,PLIST
         LA    R1,DEVCL
         ST    R1,PLIST+4
         LA    R1,UCBADDR
         ST    R1,PLIST+8
         OI    PLIST+8,X'80'
         MVI   DEVCL,UCB3DACC
         XC    UCBWA,UCBWA         UCB LOOKUP LIST FROM CVT
         L     R5,CVTPTR           ADDRESS OF CVT INTO R9
         USING CVT,R5
SCANUCB  L     R15,CVTUCBSC
         LA    R1,PLIST
         BALR  R14,R15
         LTR   R15,R15
         BNZ   DETRERR             BRANCH IF END, NOT FOUND
         L     R1,UCBADDR          GET ADDRESS OF A UCB
         USING UCBDSECT,R1
         TM    UCBJBNR,UCBVRDEV    IS IT VIO?
         BO    SCANUCB             BRANCH IF YES
         TM    UCBSTAT,UCBONLI     IS IT ONLINE?
         BZ    SCANUCB             BRANCH IF NOT
         CLC   UCBVOLI,INVOL       TABLE ENTRY VS VOL IN UCB
         BNE   SCANUCB             BRANCH IF NOT EQUAL
         L     R7,CVTZDTAB         CVTZDTAB.
         DROP  R5
         XR    R0,R0
         LR    R5,R0
         LR    R6,R0
         IC    R6,UCBTBYT1         GET DEVICE TYPE.
         IC    R5,0(R6,R7)         GET DISPL. OF SINGLE DEV. TABLE.
         LA    R5,0(R5,R7)         COMPUTE DEV. TABLE ADDRESS.
         ICM   R0,B'0011',2(R5)    NO. OF TRKS PER CYL.
         CVD   R0,CONVDEC
         MVC   TRKPRCYL,CONVDEC+5
         DROP  R1
         CP    ENDTRK,BEGINTRK     IF ENDING TRK # > BEGINNING TRK
         BH    ENDISGT             BRANCH IF YES
         ZAP   TRKDIFF,ENDTRK      TRKDIFF = ENDING TRACK #
         SP    TRKDIFF,BEGINTRK    TRKDIFF = ENDING TRK - BEGIN TRK
         AP    TRKDIFF,=PL1'+1'    ADD 1 TO TRKDIFF
         B     DOCALC
ENDISGT  SP    CYLDIFF,=PL1'+1'    SUBTRACT 1 FROM CYLDIFF
         ZAP   REMANTRK,TRKPRCYL   REMANTRK = TRKPRCYL
         SP    REMANTRK,BEGINTRK   REMANTRK = TRKPRCYL - BEGINTRK
         ZAP   TRKDIFF,REMANTRK    TRKDIFF = REMANTRK
         AP    TRKDIFF,ENDTRK      TRKDIFF = REMANTRK + ENDTRK
         AP    TRKDIFF,=PL1'+1'    ADD 1 TO TRKDIFF
DOCALC   ZAP   TOTRACKS,TRKPRCYL   TOTRACKS = TRKPRCYL
         MP    TOTRACKS,CYLDIFF    TOTRACKS = TRKPRCYL * CYLDIFF
         AP    TOTRACKS,TRKDIFF    ADD TRKDIFF TO TOTRACKS
         BR    R8                  RETURN
DETRERR  OI    SWITCH,PRSKIP       UNKNOWN UNIT TYPE, SAY SKIP PROCESS
         LA    R10,16              R10 ==> 16
         BR    R8                  RETURN
         EJECT
*------- DATA CONSTANTS.
CMLIST2 CAMLST SEARCH,*-*,*-*,*-*
CMLIST2L EQU   *-CMLIST2
CMLIST3 CAMLST SEEK,*-*,*-*,*-*
CMLIST3L EQU   *-CMLIST3
         SPACE 1
        LTORG
         EJECT
WKAREA   DSECT
         DS    18F                 SAVE AREA
CONVDEC  DS    D
UCBWA    DS    XL100
         SPACE 1
CAMLST2 CAMLST SEARCH,*-*,*-*,*-*
CAMLST3 CAMLST SEEK,*-*,*-*,*-*
OBTAREA  DS    0D
         DS    XL140
DCB3AREA DS    0D
         DS    XL140
         SPACE 1
         DS    0F
FLSPAREA DS    0CL59 - - - - - - - +
         DS    CL2                 +
INDSN    DS    CL44                +
INVOL    DS    CL6                 +
OUTEXTNO DS    CL2                 +
OUTTRKNO DS    CL5                 + - BREAKDOWN OF FLSPAREA
         SPACE 1
PLIST    DS    3F
UCBADDR  DS    A
         SPACE 1
BGNCCHH  DS    F
ENDCCHH  DS    F
HALFWORD DS    H
RUNTOT   DS    PL6
TOTRACKS DS    PL6
CCHHR    DS    CL5
BEGINCYL DS    PL3
BEGINTRK DS    PL3
CYLDIFF  DS    PL3
DS1LSTAR DS    CL3
ENDCYL   DS    PL3
ENDTRK   DS    PL3
LSTRTRKS DS    PL3
PACKEXT# DS    PL3
REMANTRK DS    PL3
TRKDIFF  DS    PL3
TRKPRCYL DS    PL3
DEVCL    DS    XL1
SWITCH   DS    XL1
PRSKIP   EQU   X'80'
PRDSCB3  EQU   X'40'
         SPACE 1
WKLEN    EQU   (((*-WKAREA)+7)/8)*8
         SPACE 2
        PRINT  NOGEN
        CVT    DSECT=YES,LIST=YES
UCBDSECT DSECT
        IEFUCBOB
         SPACE 2
         END
