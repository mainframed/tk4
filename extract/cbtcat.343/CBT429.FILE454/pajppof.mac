VSPO     TITLE 'PAJPPOF - ISPF VTAM SECONDARY PROGRAM OPERATOR -'
PAJPPOF  START 0
         SPACE 1
***********************************************************************
*                                                                     *
*  PURPOSE :   PROVIDE VTAM SECONDARY PROGRAM OPERATOR FOR USE        *
*              IN ISPF (MODIFIED VERSION OF THE ORIGINAL ONE          *
*              WRITTEN BY DOUG MOORE - SEPTEMBER 1978).               *
*                                                                     *
*  ADAPTED TO ISPF BY MOINIL P.A.- OCTOBER 1990                   -EU-*
*                                                                     *
***********************************************************************
         SPACE 1
PAJPPOF AMODE  24
PAJPPOF RMODE  24
         PRINT NOGEN
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        AUTHORITY LEVELS DEFINITIONS.                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
LV0      EQU   0         REJECT LEVEL.
         SPACE 1
POF     $MDL@IX
         SPACE 1
        $DEFREG
         SPACE 1
        IEZBITS
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - MAIN PROGRAM.                                          *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
        $XENT  BASE=R12
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         USING DATA,R8
        $EACM  REQAUT
         CLI   AUTH,LV0            AUTHORIZED ?
         BNE   POFAUTH             ...YES, OK TO PROCEED
         MVC   POFOUT(23),=C'* UNAUTHORIZED TO YOU *'
        TPUT   POFOUT,23
         B     LEAVE               DON'T LET THEM PLAY
POFAUTH  XR    R15,R15             INITIALIZE ISPF
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BNZ   POFRTN              SOMETHING GOES WRONG
        EXTRACT POFPSCB,'S',FIELDS=(PSB)
         L     R1,POFPSCB          PSCB ADDRESS
         USING PSCB,R1
         MVC   POFUSRID,PSCBUSER   SAVE USERID
         DROP  R1
        OPEN   (POFACB)            OPEN SPO ACB
         LTR   R15,R15             OPEN OK ?
         BZ    POFOPNK             ...YES, CONTINUE
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBOFLGS,X'02'      POSSIBLE ACB ALREADY OPEN ?
         BNE   POFOPNF             ...NO, SOMETHING ELSE
         CLI   ACBERFLG,X'58'      POSSIBLE ACB ALREADY OPEN ?
         BNE   POFOPNF             ...NO, SOMETHING ELSE
         CLC   =CL8'POF003',POFACBAI+1  IS THIS THE LAST ALTERNATE ?
         BE    POFMAXU                  ...YES, THAT WAS THE LAST ACB
         AP    POFACB#,=PL1'1'     GET NEXT ACB NUMBER
         UNPK  POFACBAI+4(3),POFACB#(2)
         OI    POFACBAI+6,X'F0'
         B     POFAUTH             TRY AGAIN
POFMAXU  XR    R15,R15             TERMINATE ISPF
         L     R10,=A(DOISPF)
         BASR  R9,R10
         MVC   POFOUT(37),=C'* MAXIMUM POF USERS ALREADY STARTED *'
        TPUT   POFOUT,37
         B     POFRTN              GO AWAY
POFOPNF  XR    R15,R15             TERMINATE ISPF
         L     R10,=A(DOISPF)
         BASR  R9,R10
         MVC   POFOUT(39),=C'OPEN FAILED FOR VTAM SPO ACB - XXXXXXXX'
         MVC   POFOUT+31(8),POFACBAI+1  INSERT ACB NAME
        TPUT   POFOUT,39
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK PUT IN MESSAGE
        TPUT   POFMSG1,L'POFMSG1
         B     POFRTN              OPEN FAILED SO GET OUT
         DROP  R2
POFOPNK  MVC   WTOSLT,=AL2(33)     LENGTH OF MESSAGE
         MVC   WTOSTX(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOSTX+7(14),=C' LOGGED ON TO '
         MVC   WTOSTX+21(8),POFACBAI+1  PUT ACB IN MESSAGE
         MVC   POFOUT(41),=C'-------> VTAM SPO FUNCTION ACTIVATED FOR '
         MVC   POFOUT+41(8),POFACBAI+1  PUT ACB IN MESSAGE
         LA    R0,49
         LA    R1,POFOUT
         LA    R15,2               ADD TO TABLE
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BNZ   POFEOJ              SOMETHING GOES WRONG
         OI    POFSW,FSURT         SET SUSPEND RESET TABLE
        RCVCMD RPL=POFRPLRC        ISSUE FIRST RCVCMD
         LTR   R15,R15             ACCEPTED ?
         BZ    POFSTID             ...YES, GO SEND STATUS COMMAND
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR1' - - - - - - - - - - - - - ERROR 1
         BR    R10
POFSTID  MVC   POFIN(20),=CL20'D NET,U,ID=....... '    SET COMMAND
         MVC   POFIN+11(7),POFUSRID     PUT USERID IN COMMAND
         LA    R1,20               COMMAND LENGTH
         B     POFSTORE            GO SEND IT
POFRQCMD TM    POFSW,FREND         WAIT FOR END ?
         BZ    POFEVC              ...NO
         LA    R5,60               SET 1 MIN CONTROL
POFWAIT STIMER WAIT,,BINTVL=TIMESC WAIT A SEC, THEN
         TM    POFSW,FREND         ALWAYS WAIT FOR END ?
         BZ    POFEVC              ...NO
         BCT   R5,POFWAIT          GO WAIT AGAIN
         NI    POFSW,255-FREND-FRMSG    FORCE
         MVC   POFOUT(12),=C'*END* FORCED'
         B     POFENDF
POFEVC   TM    POFSW,FRMSG         END MESSAGE PENDING ?
         BZ    POFEVCS             ...NO
         NI    POFSW,255-FRMSG     RESET END MESSAGE PENDING
         MVC   POFOUT(12),=C'IST314I  END'
POFENDF  LA    R0,12
         LA    R1,POFOUT
         LA    R15,2               ADD TO TABLE
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BNZ   POFEOJ              SOMETHING GOES WRONG
POFEVCS  LA    R0,L'POFIN
         LA    R1,POFIN
         LA    R15,3               DISPLAY TABLE
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BNZ   POFEOJ              END OR SOMETHING GOES WRONG
         LTR   R1,R1               ANY INPUT ?
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
POFRQCHK CLC   =CL3'END',POFIN     THE END ?
         BE    POFEOJ              ...YES, GO TO EOJ
         CLI   POFIN,C'*'          WANT TO DO SAME THING ?
         BNE   POFCHKQ             ...NO, GO CHECK FOR QUESTION MARK
         L     R1,SAVECMDL         RELOAD LENGTH
         MVC   POFIN,SAVECMD       RELOAD COMMAND
         B     POFDOCMD            GO DO COMMAND
POFCHKQ  CLI   POFIN,C'?'          WANT TO SEE LAST COMMAND ?
         BNE   POFTSN              ...NO, GO CHECK SEL.NO.
         MVC   POFIN,SAVECMD       RELOAD COMMAND
         B     POFRQCMD            GO SEE WHAT TO DO
POFTSN   CLI   POFIN,C'0'          WANT TO GET A SKELETON ?
         BL    *+L'*+8
         CLI   POFIN,C'9'
         BNH   POFSKEL             YES
POFSTORE ST    R1,SAVECMDL         SAVE LENGTH
         MVC   SAVECMD,POFIN       SAVE COMMAND
POFDOCMD LA    R2,POFRPLSC         POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'            ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  R2
         STH   R1,WTOLTH           STORE LENGTH FOR WTO
         MVC   WTOTXT(L'POFIN),POFIN    MOVE COMMAND TO WTO
         OI    POFSW,FREND         SET WAIT FOR END
         TM    POFSW,FSURT         SUSPEND RESET TABLE REQUESTED ?
         BO    *+L'*+10            YES
         LA    R15,4               RESET TABLE
         L     R10,=A(DOISPF)
         BASR  R9,R10
         NI    POFSW,255-FSURT     RESET REQUEST
         L     R10,=A(SNAP)        TRACE IF NEEDED
         LA    R0,1                SNAP ID NUMBER - - - - - - - ID = 1
         BASR  R9,R10
        SENDCMD RPL=POFRPLSC       ISSUE THE COMMAND
         LTR   R15,R15             SUCCESSFUL ?
         BZ    POFLOG              ...YES, GO LOG COMMAND
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR2' - - - - - - - - - - - - - ERROR 2
         BR    R10
POFLOG   TM    POFSW,FSLOG         LOG ALREADY ACTIVE ?
         BO    POFLOGX             BRANCH IF YES
        WTO    MF=(E,WTOSTRT)      WRITE LOGON TO SYSLOG
         OI    POFSW,FSLOG         INDICATE LOG STARTED
POFLOGX WTO    MF=(E,WTOLIST)      WRITE COMMAND TO LOG
         MVI   POFIN,C' '          BLANK OUT BUFFER
         MVC   POFIN+1(L'POFIN-1),POFIN
         B     POFRQCMD            GO GET ANOTHER COMMAND
POFSKEL  MVI   POFOUT,C' '         USE OUTPUT TO BUILD FULL COMMAND
         MVC   POFOUT+1(L'POFOUT-1),POFOUT
         XR    R0,R0
         LR    R2,R0
         LA    R15,X'0F'
         IC    R2,POFIN
         NR    R2,R15
         BCTR  R1,0                -1 INPUT LENGTH
         LA    R3,POFIN+1
         CLI   POFIN+1,C'0'
         BL    POFSKL1
         CLI   POFIN+1,C'9'
         BH    POFSKL1
         IC    R0,POFIN+1
         NR    R0,R15
         BCTR  R1,0                -1 INPUT LENGTH
         LA    R3,POFIN+2
         MH    R2,=H'10'
POFSKL1  AR    R2,R0
         CH    R2,=Y(NUMSN)
         BH    POFSKISN            INVALID SEL.NO.
         BCT   R2,*+L'*+4
         B     *+L'*+4
         MH    R2,=Y(L'SNTABLE)
         AL    R2,=A(SNTABLE)
         CLI   10(R2),C' '
         BE    POFSKNSN            NULL SEL.NO.
         MVC   POFOUT(L'POFVT),10(R2)
         LTR   R1,R1
         BNP   POFSKL2             NO MORE
         LA    R2,POFOUT+L'POFVT-1 COMPLETE COMMAND SKELETON
         LA    R4,L'POFVT
         CLI   0(R2),C' '
         BNE   *+L'*+6
         BCTR  R4,0
         BCT   R2,*-10
         CLI   0(R3),C' '
         BNE   *+L'*+12
         LA    R3,1(R3)
         BCT   R1,*-12
         B     POFSKL2             NONE TO COMPLETE
         LA    R0,L'POFIN
         SR    R0,R4
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         MVC   1(*-*,R2),0(R3)
         EX    R1,*-6
POFSKL2  MVC   POFIN,POFOUT        COPY TO INPUT
         MVI   POFOUT,C' '         CLEAR OUTPUT
         MVC   POFOUT+1(L'POFOUT-1),POFOUT
         B     POFRQCMD            GO SEE WHAT TO DO
POFSKISN MVC   POFOUT(38),=C'INV. NO.INVALID SKELETON SELECT NUMBER'
         B     POFSKMSG
POFSKNSN MVC   POFOUT(38),=C'NULL NO.THIS IS A NULL SELECT SKELETON'
POFSKMSG LA    R0,30
         LA    R1,POFOUT
         LA    R15,1               SET MESSAGES
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BZ    POFRQCMD            GO SEE WHAT TO DO
POFEOJ   XR    R15,R15             TERMINATE ISPF
         L     R10,=A(DOISPF)
         BASR  R9,R10
         OI    POFSW,FSEOJ         INDICATE END REQUESTED
        CLOSE  (POFACB)            CLOSE THE ACB
         LTR   R15,R15             CLOSE SUCCESSFUL ?
         BZ    POFCLSOK            ...YES, PROCEED
         MVC   POFOUT(29),=C'CLOSE FAILED FOR VTAM SPO ACB'
        TPUT   POFOUT,29
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'4C'      MORE MESSAGES OUSTANDING ?
         BNE   POFCLSF             ...NO, PRESS ON
         MVC   POFOUT(27),=C'OUTSTANDING MESSAGES PURGED'
        TPUT   POFOUT,27
         B     POFEOJ              TRY CLOSE AGAIN
POFCLSF  MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK PUT IN MESSAGE
        TPUT   POFMSG1,L'POFMSG1
         B     POFRTN              CLOSE FAILED SO GET OUT
         DROP  R2
POFCLSOK TM    POFSW,FSLOG         LOG WAS ACTIVE ?
         BZ    POFRTN              BRANCH IF NOT
         MVC   WTOSLT,=AL2(34)     LENGTH OF MESSAGE
         MVC   WTOSTX(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOSTX+7(15),=C' LOGGED OFF OF '
         MVC   WTOSTX+22(8),POFACBAI+1  PUT ACB IN MESSAGE
        WTO    MF=(E,WTOSTRT)      WRITE LOGOFF TO SYSLOG
POFRTN   L     R10,=A(SNAPCL)
         BASR  R9,R10
LEAVE   $XRET  CC=0
         DROP  R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - RCVCMD EXIT.                                           *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
POFRCVEX LR    R12,R15             GET NEW BASE
         USING POFRCVEX,R12
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         ST    R14,POFRCSV         SAVE RETURN REG
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2           ADDRESS RPL
         LA    R13,POFRCVSA        POINT TO RSA
        CHECK  RPL=POFRPLRC        CHECK RCVCMD RPL
         LTR   R15,R15             SUCCESSFUL ?
         BZ    POFRCVA             ...YES, PROCEED
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR3' - - - - - - - - - - - - - ERROR 3
         BR    R10
POFRCVA  MVC   LRM(L'LRM),RPLRLEN+L'RPLRLEN-L'LRM
         L     R10,=A(SNAP)        TRACE IF NEEDED
         LA    R0,2                SNAP ID NUMBER - - - - - - - ID = 2
         BASR  R9,R10
         CLC   =XL2'100D',RPLRTNCD ACB CLOSED ?
         BE    POFRCLD             ...YES, DONT DO ANY MORE
         TM    POFCMDI+1,POHEND+POHDATA POSSIBLE NO DATA ?
         BNM   POFRCVB             ...NO, CONTINUE (ONES OR ZEROS)
         TM    POFCMDI+1,POHEND    END OF MULTI-LINE, NO DATA ?
         BO    POFRCLD             ...YES, NO OUTPUT
POFRCVB  CLC   POFIMSG(12),=C'IST314I  END'  END OF RECEIVE ?
         BE    POFEMSG             ...YES
         ICM   R0,B'1111',RPLRLEN  GET LENGTH OF REPLY
         BZ    POFRCLD             ...NONE
         STH   R0,WTOLTH           STORE LENGTH FOR WTO
         SH    R0,=H'4'            LESS HEADER LENGTH
         LA    R1,POFIMSG          A(REPLY)
         LA    R15,2               ADD TO TABLE THE REPLY
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BZ    POFRCTL
         XR    R15,R15             TERMINATE ISPF, LOST THE REST
         L     R10,=A(DOISPF)        AND FORCE THE END
         BASR  R9,R10
         B     POFRCTL
POFEMSG  OI    POFSW,FRMSG         SET END MESSAGE PENDING
POFRCTL  TM    POFSW,FSLOG         LOG ALREADY ACTIVE ?
         BO    POFRCVC             BRANCH IF YES
        WTO    MF=(E,WTOSTRT)      WRITE LOGON TO SYSLOG
         OI    POFSW,FSLOG         INDICATE LOG STARTED
POFRCVC  MVC   WTOTXT(L'POFIMSG),POFIMSG     MOVE RESPONSE TO WTO
        WTO    MF=(E,WTOLIST)      WRITE RESPONSE TO LOG
         TM    POFCMDI+1,POHEND    END OF MULTI-LINE ?
         BO    POFRCLD             ...YES
         TM    POFCMDI+1,POHDATA   DATA LINE ?
         BO    POFRCVI             ...YES
         CLC   POFIMSG(26),=C'IST097I  DISPLAY  ACCEPTED'
         BE    POFRCVI             ...YES, OTHERWISE ERROR MSG
POFRCLD  NI    POFSW,255-FREND     RESET WAIT FOR END
POFRCVI  XC    RPLRLEN,RPLRLEN     RESET LENGTH OF REPLY
         XC    POFCMDI(4),POFCMDI  RESET COMMAND HEADER
         MVI   POFIMSG,C' '        CLEAR MESSAGE
         MVC   POFIMSG+1(L'POFIMSG-1),POFIMSG
        RCVCMD RPL=POFRPLRC        ISSUE ANOTHER RCVCMD
         LTR   R15,R15             ACCEPTED ?
         BZ    POFRCRT             ...YES, RETURN
         L     R10,=A(ABEND)       ...NO, GIVE UP
         ICM   R1,B'1111',=CL4'ERR4' - - - - - - - - - - - - - ERROR 4
         BR    R10
POFRCRT  L     R14,POFRCSV         RESTORE RETURN REG
         BR    R14                 RETURN
         SPACE 1
         DROP  R2,R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - LERAD/SYNAD EXIT.                                      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
POFLSAD  LR    R12,R15             SET UP BASE
         USING POFLSAD,R12
         CNOP  0,4
         L     R8,*+L'*+4          DATA AREA'S BASE REGISTER.
         B     *+L'*+4
         DC    A(DATA)
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2
         ST    R14,POFLSSV         SAVE RETURN ADDRESS
         CLC   =XL2'100D',RPLRTNCD IS THIS PSEUDO ERROR (ACB CLSD) ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'146E',RPLRTNCD IS THIS PSEUDO ERROR ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1471',RPLRTNCD IS THIS PSEUDO ERROR ?
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1470',RPLRTNCD IS THIS PSEUDO ERROR ?
         BNE   POFERR              ...NO, GO TO ERROR DIAGNOSE
         TM    POFSW,FSEOJ         ...YES, THE END ?
         BZ    POFERR              ...NO, ERROR
POFNOERR XR    R15,R15             SET GOOD RETURN CODE
         L     R14,POFLSSV         RELOAD RETURN REG
         BR    R14                 RETURN
POFERR   MVC   POFOUT(35),=C'UNKNOWN FAILED - XXXX = RTNCD/FDBK2'
         TM    RPLREQ,RPLRVCMD     RCVCMD FAILED ?
         BNO   POFREQ              ...NO, TRY SENDCMD
         MVC   POFOUT(7),=C'RCVCMD '    SHOW RCVCMD
         B     POFRQST
POFREQ   TM    RPLREQ,RPLSDCMD     SENDCMD FAILED ?
         BNO   POFRQST             ...NO, THATS IT
         MVC   POFOUT(7),=C'SENDCMD'    SHOW SENDCMD
POFRQST  MVC   POFDBLWK+1(1),RPLRTNCD   GET RETURN CODE
         UNPK  POFDBLWK(1),POFDBLWK+1(1)     PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),RPLFDB2    GET FEEDBACK FIELD
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1)   PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F' PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFOUT+17(4),POFDBLWK PUT IN MESSAGE
         LA    R0,35
         LA    R1,POFOUT
         LA    R15,2               ADD TO TABLE THE MESSAGE
         L     R10,=A(DOISPF)
         BASR  R9,R10
         LTR   R15,R15
         BZ    *+L'*+8
         XR    R15,R15             TERMINATE ISPF, LOST THE REST
         L     R10,=A(DOISPF)        AND FORCE THE END
         BASR  R9,R10
         NI    POFSW,255-FREND     RESET WAIT FOR END
         LA    R15,BIT0            INDICATE SENDCMD/RCVCMD FAILURE
         L     R14,POFLSSV         RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE 1
         DROP  R2,R12
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - ABEND PROCESS.                                         *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  2,4
         USING *,R10
ABEND    STCM  R1,B'1111',ABCODE   SET ABEND ERROR CODE
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
        ABEND  (1)                 THIS ABEND WILL CAUSE A SVC DUMP
         DROP  R10
         SPACE 1
ABCODE   DC    CL4' '              ENTITLED 'VTAM IRB ABEND' ALSO
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - COMMON DATA AREAS.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
DATA     DS    0D
         SPACE 1
POFDBLWK DC    D'0'                DOUBLE WORD WORK AREA
POFRCVSA DC    18F'0'              RSA FOR RCVCMD EXIT
POFRCSV  DC    F'0'
POFLSSV  DC    F'0'
POFPSCB  DC    A(*-*)
         SPACE 1
POFCMDI  DS    0C                  COMMAND INPUT BUFFER (FROM VTAM)
         DC    XL4'0'              COMMAND HEADER
POFIMSG  DC    CL126' '            MESSAGE
POFCMDIL EQU   *-POFCMDI
LRM      DC    H'0'                LENGTH OF RECEIVED MESSAGE
POFCMDIE EQU   *-1                 END SNAP ID 2 ADDRESS
         SPACE 1
POFCMDO  DS    0C                  COMMAND OUTPUT BUFFER (TO VTAM)
         DC    XL1'0'              COMMAND HEADER
         DC    AL1(POHRREQ+POHGEN)
         DC    XL2'0'
POFIN    DC    CL80' '             TGET BUFFER
POFCMDOL EQU   *-POFCMDO
SAVECMDL DC    F'0'                LENGTH OF SAVED COMMAND
POFCMDOE EQU   *-1                 END SNAP ID 1 ADDRESS
         SPACE 1
POFSW    DC    XL1'0'              PROCESSING FLAGS
FSEOJ    EQU   X'01'                    END REQUESTED
FSLOG    EQU   X'02'                    HARD COPY ACTIVE
FREND    EQU   X'10'                    WAIT END OF RECEIVE
FRMSG    EQU   X'20'                    END MESSAGE PENDING
FSURT    EQU   X'80'                    SUSPEND RESET TABLE
AUTH     DC    XL1'0'
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(AUTH)
TIMESC   DC    A(1*100)            1.00 SEC WAIT INTERVAL
         SPACE 1
POFTRTBL DC    CL16'0123456789ABCDEF'
POFOUT   DC    CL80' '             TPUT BUFFER
SAVECMD  DC    CL80' '             SAVED COMMAND
WORKCMD  DC    CL80' '             COMMAND WORK AREA
         EJECT
WTOSTRT WTO    ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
WTOSLT   EQU   WTOSTRT,2           LENGTH OF TEXT + 4
         ORG   WTOSTRT+4           POINT TO MESSAGE
WTOSTX   DC    CL126' '            MESSAGE TEXT (MAX OF 124)
         SPACE 1
WTOLIST WTO    ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
WTOLTH   EQU   WTOLIST,2           LENGTH OF TEXT + 4
         ORG   WTOLIST+4           POINT TO MESSAGE
WTOTXT   DC    CL126' '            MESSAGE TEXT (MAX OF 124)
         SPACE 1
POFUSRID DC    CL7' '              TSO USER ID
POFMSG1  DC    C'XXXX = ACBOFLGS/ACBERFLG'
         SPACE 1
POFACB   ACB   AM=VTAM,                                                X
               APPLID=POFACBAI,                                        X
               PASSWD=POFACBPW,                                        X
               EXLST=POFACBEX,                                         X
               MACRF=NLOGON
         SPACE 1
POFACB#  DC    PL2'1'              ACB COUNTER FOR MULTIPLE POF'S
POFACBAI DC    X'08'
         DC    CL8'POF001'         ACB NAME
POFACBPW DC    X'08'
         DC    CL8'POFSPOPW'       ACB PASSWORD
         SPACE 1
POFACBEX EXLST AM=VTAM,                                                X
               LERAD=POFLSAD,                                          X
               SYNAD=POFLSAD
         SPACE 1
POFRPLSC RPL   AM=VTAM,                                                X
               ACB=POFACB,                                             X
               AREA=POFCMDO,                                           X
               RECLEN=POFCMDOL,                                        X
               OPTCD=(SYN)
         SPACE 1
POFRPLRC RPL   AM=VTAM,                                                X
               ACB=POFACB,                                             X
               AREA=POFCMDI,                                           X
               AREALEN=POFCMDIL,                                       X
               EXIT=POFRCVEX,                                          X
               OPTCD=(ASY,Q,TRUNC)
         SPACE 1
*------- END OF COMMON DATA AREAS ADDESSABILITY (R8) -----------------*
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - PREDEFINED COMMANDS SKELETONS TABLE.                   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         DS    0F
SNTABLE  DS    0CL28               DISPLAYED BY HELP PANEL PAJTPOF
POFVN    EQU   SNTABLE,10          VARIABLE NAME
POFVT    EQU   SNTABLE+10,18       VARIABLE VALUE
         SPACE 1
         DC    CL10'(POFVT1)',CL18'D NET,BFRUSE'
         DC    CL10'(POFVT2)',CL18'D NET,PENDING'
         DC    CL10'(POFVT3)',CL18'D NET,APPLS'
         DC    CL10'(POFVT4)',CL18'D NET,MAJNODES'
         DC    CL10'(POFVT5)',CL18'D NET,LINES,I'
         DC    CL10'(POFVT6)',CL18'D NET,CLSTRS,I'
         DC    CL10'(POFVT7)',CL18'D NET,TERMS,I'
         DC    CL10'(POFVT8)',CL18'D NET,ID='
         DC    CL10'(POFVT9)',CL18' '
         DC    CL10'(POFVT10)',CL18'V NET,ACT,ID='
         DC    CL10'(POFVT11)',CL18'V NET,INACT,ID='
         DC    CL10'(POFVT12)',CL18' '
         SPACE 1
SNTBEND  EQU   *-L'SNTABLE
NUMSN    EQU   (*-SNTABLE)/L'SNTABLE
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - SNAP DUMP PROCESS.                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* SNAP ENTRY : TO TAKE A SNAP DUMP.                                   *
*              R0  = SNAP ID NUMBER (0-255).                          *
*              R8  = ADDRESS OF DATA AREA (PASSED BY CALLER).         *
*              R9  = LINK REGISTER.                                   *
*              R10 = ADDRESS OF SNAP ROUTINE.                         *
*              NOTE - THE FOLLOWING ALLOCATION IS NEEDED TO           *
*                     OBTAIN THE SNAP DUMPS :                         *
*                        ALLOC F(SYSSNAP) SYSOUT(A)                   *
*                     OR :                                            *
*                        ALLOC F(SYSSNAP) DA(...) OLD                 *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  0,4
         USING *,R10
SNAP     TM    SNAPSW,SNAPFNA      FUNCTION INACTIVE ?
         BOR   R9                  YES, BYPASS
         STM   R14,R12,12(R13)     ENTRY
         LR    R1,R13
         LA    R13,SNAPSV
         ST    R1,4(R13)
         ST    R13,8(R1)
         LR    R4,R0               SAVE SNAP ID NUMBER
         LA    R2,SNAPDCB
         USING IHADCB,R2
         TM    SNAPSW,SNAPOPN      DATA-SET ALREADY OPENED ?
         BO    SNO                 YES
        EXTRACT ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT
         USING TIODSECT,R3
         XR    R1,R1
SNS      CLC   TIOELNGH(4),=F'0'
         BE    SNN
         CLC   TIOEDDNM(L'TIOEDDNM),DCBDDNAM
         BE    SNF
         IC    R1,TIOELNGH
         ALR   R3,R1
         B     SNS
         DROP  R3
SNF     OPEN   (SNAPDCB,OUTPUT)
         TM    DCBOFLGS,DCBOFOPN   SUCCESSFULLY OPENED ?
         BZ    SNN                 NO
         DROP  R2
         OI    SNAPSW,SNAPOPN      INDICATE DATA-SET OPENED
SNO      CH    R4,SNAPMAX          KNOWN ID NUMBER ?
         BNL   SNE                 NO, BYPASS
         LR    R5,R4
         MH    R5,SNAPTLE
         LA    R5,SNAPTB(R5)
         LA    R6,8(R5)
         TM    0(R6),X'80'         UNUSED ELEMENT ?
         BZ    SNE                 YES, BYPASS
        SNAP   TCB='S',ID=(R4),LIST=(R5),STRHDR=(R6),MF=(E,SNAPLIST)
         LTR   R15,R15             ALL OK ?
         BZ    SNE                 YES
SNN      OI    SNAPSW,SNAPFNA      INACTIVE FUNCTION
SNE      L     R13,4(R13)          EXIT
         LM    R14,R12,12(R13)
         BR    R9
         DROP  R10
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* SNAPCL ENTRY : TO CLOSE THE SNAP FILE IF OPENED.                    *
*              R8  = ADDRESS OF DATA AREA (PASSED BY CALLER).         *
*              R9  = LINK REGISTER.                                   *
*              R10 = ADDRESS OF SNAPCL ROUTINE.                       *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
         CNOP  0,4
         USING *,R10
SNAPCL   TM    SNAPSW,SNAPOPN      DATA-SET IS OPENED ?
         BZR   R9                  NO
         STM   R14,R12,12(R13)     ENTRY
         LR    R1,R13
         LA    R13,SNAPSV
         ST    R1,4(R13)
         ST    R13,8(R1)
        CLOSE  (SNAPDCB)
         L     R13,4(R13)          EXIT
         LM    R14,R12,12(R13)
         BR    R9
         DROP  R10
         EJECT
SNAPDCB  DCB   DSORG=PS,RECFM=VBA,MACRF=(W),                           X
               BLKSIZE=1632,LRECL=125,DDNAME=SYSSNAP
SNAPLIST SNAP  DCB=SNAPDCB,MF=L
         SPACE 1
SNAPSV   DC    18F'0'
ATIOT    DC    F'0'
         SPACE 1
SNAPTB   DC    3F'0'               0 = NOT USED
SNAPTBL  EQU   *-SNAPTB            ELEMENT LENGTH
         DC    A(POFCMDO),XL1'80',AL3(POFCMDOE),XL1'80',AL3(SHDO)
         DC    A(POFCMDI),XL1'80',AL3(POFCMDIE),XL1'80',AL3(SHDI)
SNAPTBM  EQU   (*-SNAPTB)/SNAPTBL  NUMBER OF ELEMENTS
         SPACE 1
SNAPTLE  DC    Y(SNAPTBL)          ELEMENT LENGTH
SNAPMAX  DC    Y(SNAPTBM)          NUMBER OF ELEMENTS (MAX ID)
SNAPSW   DC    XL1'0'
SNAPFNA  EQU   X'01'               SNAP FUNCTION NOT ACTIVE.
SNAPOPN  EQU   X'02'               SNAP DATA-SET IS OPENED.
SHDO     DC    AL1(L'SHDOT)
SHDOT    DC    C'P O F - DUMP OF COMMAND OUTPUT BUFFER (SENDCMD).'
SHDI     DC    AL1(L'SHDIT)
SHDIT    DC    C'P O F - DUMP OF COMMAND INPUT BUFFER (RCVCMD).'
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - DO ISPF PROCESSING.                                    *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
*              R0    = PARM./WORK REGISTER
*              R1    = PARM./WORK REGISTER
*              R2-R7 = ALL SAVED AND RESTORED
*              R8    = ADDRESS OF DATA AREA (PASSED BY CALLER)
*              R9    = LINK REGISTER
*              R10   = ENTRY ADDRESS / LOCAL BASE REGISTER
*              R12   = CALLER BASE REGISTER
*              R13   = MAIN SAVE AREA POINTER
*        AT ENTRY R15 = REQUEST CODE 0 - INITIALIZATION / TERMINATION
*                                    1 - SET MESSAGES (SHORT/LONG)
*                                    2 - ADD TO TABLE
*                                    3 - DISPLAY TABLE
*        AT EXIT R15 = RETURN CODE 0 - NORMAL, OK
*                                  4 - SPECIAL CONDITION, OK
*                                  8 - ERROR, ABORT
         SPACE 1
         CNOP  0,4
         USING *,R10
DOISPF   STM   R2,R7,SV#REGS
         LTR   R15,R15
         BM    RCISPF8
         BP    WHISPF
         TM    SW#ISPF,SW#VDF
         BO    EXISPF
         TM    SW#ISPF,SW#VDL
         BO    RCISPF8
        CALL   ISPLINK,(#VDEFINE,MS,MST,#CHAR,MSL),VL
         LTR   R15,R15
         BZ    OKISPF
         LA    R0,C'S'
ERISPF1  MVC   M#ISPF+25(10),=CL10' MSG/  *'
         STC   R0,M#ISPF+30
ERISPF2  MVC   M#ISPF+17(8),#VDEFINE
ERISPF3  MVC   M#ISPF(17),=CL17' -- * RC =     -'
         CVD   R15,DBL#WK
         MVC   M#ISPF+10(4),=XL4'40202120'
         ED    M#ISPF+10(4),DBL#WK+6
        TPUT   M#ISPF,35
         OI    SW#ISPF,SW#VDL
         B     RCISPF8
OKISPF  CALL   ISPLINK,(#VDEFINE,ML,MLT,#CHAR,MLL),VL
         LTR   R15,R15
         BZ    *+L'*+8
         LA    R0,C'L'
         B     ERISPF1
        CALL   ISPLINK,(#VDEFINE,#VTCMD,VTCMD,#CHAR,LGHVT),VL
         LTR   R15,R15
         BZ    *+L'*+10
         MVC   M#ISPF+25(10),=CL10' VTCMD *'
         B     ERISPF2
        CALL   ISPLINK,(#VDEFINE,#X,X,#CHAR,LGHX),VL
         LTR   R15,R15
         BZ    *+L'*+10
         MVC   M#ISPF+25(10),=CL10' X *'
         B     ERISPF2
         LM    R2,R4,=A(L'SNTABLE,SNTBEND,SNTABLE)
STISPF   LA    R5,10(R4)
        CALL   ISPLINK,(#VDEFINE,(R4),(R5),#CHAR,LGHPV),VL
         LTR   R15,R15
         BZ    *+L'*+10
         MVC   M#ISPF+25(10),=CL10' POFVT *'
         B     ERISPF2
         BXLE  R4,R2,STISPF
         OI    SW#ISPF,SW#VDF
         B     RCISPF0
EXISPF   TM    SW#ISPF,SW#VDL
         BO    RCISPF8
        CALL   ISPLINK,(#VDELETE,#VTCMD),VL
         LTR   R15,R15
         BZ    *+L'*+16
         MVC   M#ISPF+25(10),=CL10' VTCMD *'
ERISPF4  MVC   M#ISPF+17(8),#VDELETE
         B     ERISPF3
        CALL   ISPLINK,(#VDELETE,#X),VL
         LTR   R15,R15
         BZ    *+L'*+10
         MVC   M#ISPF+25(10),=CL10' X *'
         B     ERISPF4
         LM    R2,R4,=A(L'SNTABLE,SNTBEND,SNTABLE)
DLISPF  CALL   ISPLINK,(#VDELETE,(R4)),VL
         LTR   R15,R15
         BZ    *+L'*+10
         MVC   M#ISPF+25(10),=CL10' POFVT *'
         B     ERISPF4
         BXLE  R4,R2,DLISPF
         OI    SW#ISPF,SW#VDL
         TM    SW#ISPF,SW#TBL
         BZ    RCISPF0
        CALL   ISPLINK,(#TBEND,#RPTB),VL
         LTR   R15,R15
         BZ    RCISPF0
         MVC   M#ISPF+25(10),=CL10' RSPTAB *'
         MVC   M#ISPF+17(8),#TBEND
         B     ERISPF3
WHISPF   TM    SW#ISPF,SW#VDF
         BZ    RCISPF8
         TM    SW#ISPF,SW#VDL
         BO    RCISPF8
         CH    R15,MXISPF
         BH    RCISPF8
         SLL   R15,2
         B     *(R15)              SELECT FUNCTION
GOISPF   B     MSISPF              1 - SET MESSAGES
         B     ATISPF              2 - ADD TO TABLE
         B     DTISPF              3 - DISPLAY TABLE
         B     RTISPF              4 - RESET TABLE
MXISPF   DC    Y((*-GOISPF)/4)
MSISPF   MVI   MLT,C' '            R0 = LONG MESSAGE TEXT LENGTH
         MVC   MLT+1(L'MLT-1),MLT  R1 -> SHORT MSG TEXT (CL8), FOLLOWED
         MVC   MST(L'MST),0(R1)          LONG MSG TEXT (CL..., MAX=72)
         LA    R15,L'MLT
         CLR   R15,R0
         BNH   *+L'*+2
         LR    R15,R0
         BCT   R15,*+L'*+6
         MVC   MLT(*-*),0+L'MST(R1)
         EX    R15,*-6
        CALL   ISPLINK,(#VREP,MS,MSL,MST),VL
         LTR   R15,R15
         BZ    *+L'*+24
         LA    R0,C'S'
ERISPF5  MVC   M#ISPF+25(10),=CL10' MSG/  *'
         STC   R0,M#ISPF+30
ERISPF6  MVC   M#ISPF+17(8),#VREP
         B     ERISPF3
        CALL   ISPLINK,(#VREP,ML,MLL,MLT),VL
         LTR   R15,R15
         BZ    *+L'*+8
         LA    R0,C'L'
         B     ERISPF5
        CALL   ISPLINK,(#SETM,#MSGID),VL
         LTR   R15,R15
         BZ    RCISPF0
         MVC   M#ISPF+25(10),=CL10' PAJZ000 *'
         MVC   M#ISPF+17(8),#SETM
         B     ERISPF3
ATISPF   TM    SW#ISPF,SW#TBL+SW#TBR
         BO    XAISPF
         STM   R0,R1,DBL#WK
        CALL   ISPLINK,(#TBCREAT,#RPTB,,,#NOWRITE,#REPLACE),VL
         CH    R15,=H'4'
         BL    *+L'*+20
         BE    *+L'*+20
         MVC   M#ISPF+25(10),=CL10' RSPTAB *'
         MVC   M#ISPF+17(8),#TBCREAT
         B     ERISPF3
         OI    SW#ISPF,SW#TBL
         OI    SW#ISPF,SW#TBR
         LM    R0,R1,DBL#WK
XAISPF   MVI   X,C' '              R0 = LINE TEXT LENGTH
         MVC   X+1(L'X-1),X        R1 -> LINE TEXT (CL..., MAX=78)
         LA    R15,L'X
         CLR   R15,R0
         BNH   *+L'*+2
         LR    R15,R0
         BCT   R15,*+L'*+6
         MVC   X(*-*),0(R1)
         EX    R15,*-6
        CALL   ISPLINK,(#TBADD,#RPTB,#X),VL
         LTR   R15,R15
         BZ    RCISPF0
         MVC   M#ISPF+25(10),=CL10' RSPTAB *'
         MVC   M#ISPF+17(8),#TBADD
         B     ERISPF3
DTISPF   TM    SW#ISPF,SW#TBL+SW#TBR
         BNO   RCISPF8
         STM   R0,R1,DBL#WK
         MVI   VTCMD,C' '
         MVC   VTCMD+1(L'VTCMD-1),VTCMD
         L     R15,LGHVT
         CLR   R15,R0
         BNH   *+L'*+2
         LR    R15,R0
         BCT   R15,*+L'*+6
         MVC   VTCMD(*-*),0(R1)
         EX    R15,*-6
        CALL   ISPLINK,(#VREP,#VTCMD,LGHVT,VTCMD),VL
         LTR   R15,R15
         BZ    *+L'*+16
         MVC   M#ISPF+25(10),=CL10' VTCMD *'
         MVC   M#ISPF+17(8),#VREP
         B     ERISPF3
        CALL   ISPLINK,(#TBTOP,#RPTB),VL
         LTR   R15,R15
         BZ    *+L'*+16
         MVC   M#ISPF+25(10),=CL10' RSPTAB *'
         MVC   M#ISPF+17(8),#TBTOP
         B     ERISPF3
        CALL   ISPLINK,(#TBDISPL,#RPTB,#RPAN),VL
         CH    R15,=H'8'
         BE    RCISPF4
         LTR   R15,R15
         BZ    *+L'*+16
         MVC   M#ISPF+25(10),=CL10' RSPTAB *'
         MVC   M#ISPF+17(8),#TBDISPL
         B     ERISPF3
         LM    R0,R1,DBL#WK        R0 = MAX. INPUT TEXT LENGTH
         MVI   0(R1),C' '          R1 -> INPUT TEXT TO MOVE
         LR    R15,R0
         BCTR  R15,0
         BCT   R15,*+L'*+6
         MVC   1(*-*,R1),0(R1)
         EX    R15,*-6
         LA    R3,VTCMD
         LR    R4,R3
         AL    R3,LGHVT
         BCTR  R3,0
         LA    R2,1
         CLI   0(R4),C' '
         BNE   *+L'*+8
         BXLE  R4,R2,*-8
         B     SZISPF
         CLI   0(R3),C' '
         BNE   *+L'*+12
         BCTR  R3,0
         CLR   R3,R4
         BL    SZISPF
         B     *-16
         SLR   R3,R4
         EX    R3,*+L'*+8
         LA    R1,1(R3)            R1 = INPUT TEXT LENGTH
         B     RCISPF0
         OC    0(*-*,R1),0(R4)     MAKE UPPERCASE FOR WRITING TO SYSLOG
SZISPF   XR    R1,R1               R1 = NULL INPUT TEXT LENGTH
         B     RCISPF0
RTISPF   NI    SW#ISPF,255-SW#TBR
         B     RCISPF0
RCISPF8  LA    R15,8               RC=8
         B     RSISPF
RCISPF4  LA    R15,4               RC=4
         B     RSISPF
RCISPF0  XR    R15,R15             RC=0
RSISPF   LM    R2,R7,SV#REGS
         BR    R9
         DROP  R10
         SPACE 1
DBL#WK   DC    D'0'
SV#REGS  DC    6F'0'
M#ISPF   DC    CL40' '
         SPACE 1
LGHVT    DC    A(L'VTCMD)
LGHX     DC    A(L'X)
LGHPV    DC    A(L'POFVT)
MSL      DC    A(L'MST)
MLL      DC    A(L'MLT)
         SPACE 1
VTCMD    DC    CL48' '
X        DC    CL78' '
MST      DC    CL8' '
MLT      DC    CL72' '
         SPACE 1
#VDEFINE DC    CL8'VDEFINE'
#VREP    DC    CL8'VREPLACE'
#VDELETE DC    CL8'VDELETE'
#TBCREAT DC    CL8'TBCREATE'
#TBADD   DC    CL8'TBADD'
#TBTOP   DC    CL8'TBTOP'
#TBDISPL DC    CL8'TBDISPL'
#TBEND   DC    CL8'TBEND'
#RPTB    DC    CL8'RSPTAB'
#RPAN    DC    CL8'PAJPOF'
#NOWRITE DC    CL8'NOWRITE'
#REPLACE DC    CL8'REPLACE'
#SETM    DC    CL8'SETMSG'
#MSGID   DC    CL8'PAJZ000'
         SPACE 1
MS       DC    C'(EUMSGS) '
ML       DC    C'(EUMSGL) '
#VTCMD   DC    C'(VTCMD) '
#X       DC    C'(X) '
#CHAR    DC    C'CHAR '
         SPACE 1
SW#ISPF  DC    XL1'0'
SW#VDF   EQU   X'80'
SW#VDL   EQU   X'40'
SW#TBL   EQU   X'20'
SW#TBR   EQU   X'10'
         SPACE 1
        LTORG
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*        POF - DATA DESCRIPTIONS (DSECTS).                            *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
        ISTDPOHD
        IFGACB AM=VTAM
        IFGRPL AM=VTAM
        IKJPSCB
TIODSECT DSECT
        IEFTIOT1
        DCBD   DEVD=DA,DSORG=PS
         SPACE 2
         END
