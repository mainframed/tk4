PROC     0
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
/*       PURPOSE : MAIL-BOXES FACILITY DRIVER.                   (PM)*/
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
CONTROL MAIN NOMSG
IF &SYSISPF EQ &STR(NOT ACTIVE) THEN EXIT
/*-------------------------------------------------------------------*/
/* PRE-REQUISITE : "PRINTO" TSO COMMAND (AVAILABLE IN CBT FILES      */
/*                 433 AND 437).                                 (PM)*/
/*-------------------------------------------------------------------*/
ISPEXEC CONTROL ERRORS RETURN
ISPEXEC DISPLAY PANEL(PAJMX0)
IF &LASTCC NE 0 THEN EXIT
ISPEXEC CONTROL ERRORS CANCEL
IF &MXTEST EQ YES THEN CONTROL LIST SYMLIST CONLIST MSG
/* - - - SET MAIL-BOXES TABLE (DDNAME = MXTBMB). - - - - - - - - - - */
ERROR DO
  ERROR DO
    ERROR OFF
    ISPEXEC SETMSG MSG(PAJM991U)
    EXIT
    END
  SET &MXDSN = &STR(&MXTPRO..&MXTLIB..&MXTTYP)
  SET &MXUNM = SYSDA
  SET &MXSP1 = 5
  SET &MXSP2 = 2
  SET &MXSPU = TRACKS
  SET &MXDIR = 46
  ISPEXEC VPUT (MXDSN MXUNM MXSP1 MXSP2 MXSPU MXDIR)
  ISPEXEC DISPLAY PANEL(PAJMX3)
  ALLOC F(MXTBMB) DSN('&MXTPRO..&MXTLIB..&MXTTYP') +
    NEW CATALOG UNIT(&MXUNM) VOLUME(&MXVOL) +
    SP(&MXSP1 &MXSP2) &MXSPU DIR(&MXDIR) +
    RECFM(F B) LRECL(80) BLKSIZE(9040)
  FREE F(MXTBMB)
  ERROR OFF
  END
ALLOC F(MXTBMB) DSN('&MXTPRO..&MXTLIB..&MXTTYP') SHR
ERROR OFF
ISPEXEC LIBDEF ISPTLIB LIBRARY ID(MXTBMB)
ISPEXEC LIBDEF ISPTABL LIBRARY ID(MXTBMB)
ISPEXEC CONTROL ERRORS RETURN
IF &MXUPDT EQ YES THEN ISPEXEC TBOPEN &MXLIST WRITE SHARE
ELSE ISPEXEC TBOPEN &MXLIST NOWRITE SHARE
SET &RC = &LASTCC
ISPEXEC CONTROL ERRORS CANCEL
IF &RC EQ 12 THEN DO
  ISPEXEC SETMSG MSG(PAJM991R)
  GOTO EX01
  END
IF &RC GT 12 THEN DO
  ISPEXEC SETMSG MSG(PAJM991S)
  GOTO EX01
  END
IF &RC EQ 8 THEN DO
  IF &MXUPDT EQ YES THEN DO
    ISPEXEC TBCREATE &MXLIST WRITE SHARE +
      NAMES(MXNUM MXDES MXDATE MXSORT MXFIELD MXAUT)
    SET &RC = &LASTCC
    IF &RC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM991S)
      GOTO EX01
      END
    ISPEXEC SETMSG MSG(PAJM991T)
    END
  ELSE DO
    ISPEXEC SETMSG MSG(PAJM991N)
    GOTO EX01
    END
  END
ISPEXEC TBSORT &MXLIST +
  FIELDS(MXNUM,N,D MXSORT,N,A MXFIELD,C,A MXAUT,C,A)
SET &MXSRTF = &STR( MAIL DATE FIELD AUTHOR)
ISPEXEC VPUT (MXSRTF)
SET &MXPDEL =
SET &RC = 0
SET &ZTDTOP = 0
SET &MXUPF =
/* - - - DISPLAY MAIL-BOXES TABLE. - - - - - - - - - - - - - - - - - */
NX00: IF &RC EQ 4 THEN ISPEXEC TBDISPL &MXLIST POSITION(CRP)
ELSE DO
  ISPEXEC TBTOP &MXLIST
  ISPEXEC TBSKIP &MXLIST NUMBER(&ZTDTOP)
  ISPEXEC VGET (ZVERB ZSCROLLN)
  IF &ZVERB EQ UP THEN ISPEXEC TBSKIP &MXLIST NUMBER(-&ZSCROLLN)
  ELSE IF &ZVERB EQ DOWN THEN ISPEXEC TBSKIP &MXLIST +
    NUMBER(&ZSCROLLN)
  ISPEXEC TBDISPL &MXLIST PANEL(PAJMX1) POSITION(CRP)
  END
SET &RC = &LASTCC
IF &CMD EQ CANCEL OR &RC GT 4 THEN GOTO EX00
/* - - - SORT COMMAND. - - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ SORT THEN DO
  IF &SFMX1 EQ THEN DO
    SET &SFMX1 = M
    SET &SFMX2 = D
    SET &SFMX3 = F
    SET &SFMX4 = A
    END
  SET &MXSFLDS =
  SET &MXSRTF =
  SET &I = 1
  DO WHILE &I LT 5
    SET &SFMX = SFMX&I
    SET &S = &&&SFMX
    IF &S EQ M THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXNUM,N,D)
      SET &MXSRTF = &STR(&MXSRTF MAIL)
      END
    ELSE IF &S EQ MI THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXNUM,N,A)
      SET &MXSRTF = &STR(&MXSRTF MAIL(A))
      END
    ELSE IF &S EQ D THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXSORT,N,A)
      SET &MXSRTF = &STR(&MXSRTF DATE)
      END
    ELSE IF &S EQ DI THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXSORT,N,D)
      SET &MXSRTF = &STR(&MXSRTF DATE(D))
      END
    ELSE IF &S EQ F THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXFIELD,C,A)
      SET &MXSRTF = &STR(&MXSRTF FIELD)
      END
    ELSE IF &S EQ FI THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXFIELD,C,D)
      SET &MXSRTF = &STR(&MXSRTF FIELD(D))
      END
    ELSE IF &S EQ A THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXAUT,C,A)
      SET &MXSRTF = &STR(&MXSRTF AUTHOR)
      END
    ELSE IF &S EQ AI THEN DO
      SET &MXSFLDS = &STR(&MXSFLDS MXAUT,C,D)
      SET &MXSRTF = &STR(&MXSRTF AUTHOR(D))
      END
    SET &I = &I + 1
    END
  ISPEXEC VPUT (MXSRTF)
  ISPEXEC TBSORT &MXLIST FIELDS(&MXSFLDS)
  ISPEXEC SETMSG MSG(PAJM995R)
  END
/* - - - SAVE COMMAND. - - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ SAVE THEN DO
  IF &MXUPDT EQ YES THEN DO
    ISPEXEC TBSORT &MXLIST +
      FIELDS(MXNUM,N,D MXSORT,N,A MXFIELD,C,A MXAUT,C,A)
    ISPEXEC TBSAVE &MXLIST REPLCOPY PAD(15)
    SET &MXUPF =
    ISPEXEC TBSORT &MXLIST FIELDS(&MXSFLDS)
    ISPEXEC SETMSG MSG(PAJM995S)
    END
  ELSE ISPEXEC SETMSG MSG(PAJM993T)
  END
/* - - - INPUT COMMAND.  - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ INPUT THEN DO
  IF &MXUPDT EQ YES THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    DO WHILE &MXIN GE 1
      ISPEXEC TBVCLEAR &MXLIST
      ISPEXEC DISPLAY PANEL(PAJMX2)
      IF &LASTCC EQ 0 THEN DO
        SET &MXDEL = &MXNUM
        SET &MXNUM = &MXDEL
        ISPEXEC TBADD &MXLIST ORDER
        SET &MXUPF = YES
        END
      SET &MXIN = &MXIN - 1
      END
    ISPEXEC CONTROL DISPLAY RESTORE
    END
  ELSE ISPEXEC SETMSG MSG(PAJM993T)
  END
/* - - - MAILBOX COMMAND.  - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ MAILBOX THEN DO
  ISPEXEC CONTROL DISPLAY SAVE
  SET &ALRC = 0
  ERROR DO
    ERROR DO
      ISPEXEC SETMSG MSG(PAJM998E)
      SET &ALRC = 1
      GOTO MC00
      END
    SET &MXDSN = &STR(&MXMPRO..&MXMLIB..&MXMTYP)
    SET &MXUNM = SYSDA
    SET &MXSP1 = 2
    SET &MXSP2 = 1
    SET &MXSPU = CYLINDERS
    SET &MXDIR = 46
    SET &MXRCF = VARIABLE
    ISPEXEC VPUT (MXDSN MXUNM MXSP1 MXSP2 MXSPU MXDIR MXRCF)
    ISPEXEC DISPLAY PANEL(PAJMX5)
    IF &MXRCF EQ FIXED THEN -
      ATTR MXATTR RECFM(F B) LRECL(80) BLKSIZE(6320)
    ELSE ATTR MXATTR RECFM(V B) LRECL(84) BLKSIZE(6356)
    ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP.($MAIL$)') +
      NEW REUSE UNIT(&MXUNM) VOLUME(&MXVOL) +
      SP(&MXSP1 &MXSP2) &MXSPU DIR(&MXDIR) USING(MXATTR)
    FREE ATTR(MXATTR)
    ERROR OFF
    END
  ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') SHR REUSE
MC00: ERROR OFF
  FREE F(MXMLBX)
  ERROR OFF
  IF &ALRC NE 0 THEN GOTO MC01
  ISPEXEC CONTROL ERRORS RETURN
  ISPEXEC EDIT DATASET('&MXMPRO..&MXMLIB..&MXMTYP') MACRO(PAJCMXN)
  IF &LASTCC GT 4 THEN ISPEXEC SETMSG MSG(PAJM996T)
  ISPEXEC CONTROL ERRORS CANCEL
MC01: ISPEXEC CONTROL DISPLAY RESTORE
  END
/* - - - LIST COMMAND. - - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ LIST THEN DO
  ERROR DO
    ERROR OFF
    FREE ATTR(VBA)
    ATTR VBA RECFM(V B A) LRECL(137) BLKSIZE(6356) DSORG(PS)
    ALLOC F(ISPFILE) DSN(MXTEMP.LISTING) REUSE CATALOG +
      USING(VBA) SP(2 2) TRACKS
    SET &MXPDEL = DELETE
    END
  ALLOC F(ISPFILE) DSN(MXTEMP.LISTING) OLD REUSE
  ERROR OFF
  ISPEXEC FTOPEN
  ISPEXEC FTINCL PAJSMX1
  ISPEXEC FTCLOSE
  SET &MXPOPT =
  IF &MXPDEST NE THEN SET &MXPOPT = &STR(DEST(&MXPDEST))
  IF &MXPCLAS NE THEN SET &MXPOPT = &STR(&MXPOPT CLASS(&MXPCLAS))
  PRINTO MXTEMP.LISTING &MXPOPT NOHEADING
  ISPEXEC SETMSG MSG(PAJM993P)
  END
/* - - - STATUS COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &CMD EQ STATUS THEN DO
  ISPEXEC CONTROL DISPLAY SAVE
  ISPEXEC DISPLAY PANEL(PAJMX4)
  IF &LASTCC GT 8 THEN EXIT
  ISPEXEC CONTROL DISPLAY RESTORE
  END
/* - - - D LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
ELSE IF &ZTDSELS GE 1 THEN DO
  IF &ACT EQ D THEN DO
    IF &MXUPDT EQ YES THEN -
      DO WHILE &N GE 1
        ISPEXEC TBDELETE &MXLIST
        ISPEXEC TBSKIP &MXLIST
        IF &LASTCC NE 0 THEN SET &N = 0
        ELSE SET &N = &N - 1
        SET &MXUPF = YES
        END
    ELSE ISPEXEC SETMSG MSG(PAJM993T)
    END
/* - - - R LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
  ELSE IF &ACT EQ R THEN DO
    IF &MXUPDT EQ YES THEN -
      DO WHILE &N GE 1
        ISPEXEC TBADD &MXLIST ORDER
        SET &N = &N - 1
        SET &MXUPF = YES
        END
    ELSE ISPEXEC SETMSG MSG(PAJM993T)
    END
/* - - - U LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
  ELSE IF &ACT EQ U THEN DO
    IF &MXUPDT EQ YES THEN DO
      ISPEXEC CONTROL DISPLAY SAVE
      DO WHILE &N GE 1
        ISPEXEC DISPLAY PANEL(PAJMX2)
        SET &RCLC = &LASTCC
        IF &RCLC EQ 0 THEN DO
          SET &MXDEL = &MXNUM
          SET &MXNUM = &MXDEL
          ISPEXEC TBPUT &MXLIST ORDER
          ISPEXEC SETMSG MSG(PAJM994S)
          SET &MXUPF = YES
          END
        ELSE IF &RCLC GT 8 THEN GOTO UL00
        ELSE ISPEXEC SETMSG MSG(PAJM994N)
        IF &N EQ 1 THEN GOTO UL01
        ISPEXEC TBSKIP &MXLIST
        IF &LASTCC EQ 0 THEN GOTO UL01
UL00:   SET &N = 1
UL01:   SET &N = &N - 1
        END
      ISPEXEC CONTROL DISPLAY RESTORE
      END
    ELSE ISPEXEC SETMSG MSG(PAJM993T)
    END
/* - - - M LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
  ELSE IF &ACT EQ M THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    SET &ALRC = 0
    ERROR DO
      ERROR DO
        ISPEXEC SETMSG MSG(PAJM998E)
        SET &ALRC = 1
        GOTO ML00
        END
      SET &MXDSN = &STR(&MXMPRO..&MXMLIB..&MXMTYP)
      SET &MXUNM = SYSDA
      SET &MXSP1 = 2
      SET &MXSP2 = 1
      SET &MXSPU = CYLINDERS
      SET &MXDIR = 46
      SET &MXRCF = VARIABLE
      ISPEXEC VPUT (MXDSN MXUNM MXSP1 MXSP2 MXSPU MXDIR MXRCF)
      ISPEXEC DISPLAY PANEL(PAJMX5)
      IF &MXRCF EQ FIXED THEN -
        ATTR MXATTR RECFM(F B) LRECL(80) BLKSIZE(6320)
      ELSE ATTR MXATTR RECFM(V B) LRECL(84) BLKSIZE(6356)
      ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') +
        NEW REUSE UNIT(&MXUNM) VOLUME(&MXVOL) +
        SP(&MXSP1 &MXSP2) &MXSPU DIR(&MXDIR) USING(MXATTR)
      FREE ATTR(MXATTR)
      ERROR OFF
      END
    ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') SHR
ML00: ERROR OFF
    FREE F(MXMLBX)
    ERROR OFF
    IF &ALRC NE 0 THEN GOTO ML03
    DO WHILE &N GE 1
      ISPEXEC EDIT DATASET('&MXMPRO..&MXMLIB..&MXMTYP.(MX&MXNUM)') +
        MACRO(PAJCMXN)
      SET &RCLC = &LASTCC
      IF &RCLC GT 4 THEN GOTO ML01
      IF &RCLC EQ 0 THEN ISPEXEC SETMSG MSG(PAJM996S)
      ELSE ISPEXEC SETMSG MSG(PAJM996N)
      IF &N EQ 1 THEN GOTO ML02
      ISPEXEC TBSKIP &MXLIST
      IF &LASTCC EQ 0 THEN GOTO ML02
ML01: ISPEXEC SETMSG MSG(PAJM996N)
      SET &N = 1
ML02: SET &N = &N - 1
      END
ML03: ISPEXEC CONTROL DISPLAY RESTORE
    END
/* - - - B LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
  ELSE IF &ACT EQ B THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    SET &ALRC = 0
    ERROR DO
      ERROR DO
        ISPEXEC SETMSG MSG(PAJM998E)
        SET &ALRC = 1
        GOTO BL00
        END
      SET &MXDSN = &STR(&MXMPRO..&MXMLIB..&MXMTYP)
      SET &MXUNM = SYSDA
      SET &MXSP1 = 2
      SET &MXSP2 = 1
      SET &MXSPU = CYLINDERS
      SET &MXDIR = 46
      SET &MXRCF = VARIABLE
      ISPEXEC VPUT (MXDSN MXUNM MXSP1 MXSP2 MXSPU MXDIR MXRCF)
      ISPEXEC DISPLAY PANEL(PAJMX5)
      IF &MXRCF EQ FIXED THEN -
        ATTR MXATTR RECFM(F B) LRECL(80) BLKSIZE(6320)
      ELSE ATTR MXATTR RECFM(V B) LRECL(84) BLKSIZE(6356)
      ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') +
        NEW REUSE UNIT(&MXUNM) VOLUME(&MXVOL) +
        SP(&MXSP1 &MXSP2) &MXSPU DIR(&MXDIR) USING(MXATTR)
      FREE ATTR(MXATTR)
      ERROR OFF
      END
    ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') SHR
BL00: ERROR OFF
    ERROR OFF
    IF &ALRC NE 0 THEN GOTO BL94
    ALLOC F(MXBRWS) UNIT(VIO) SPACE(1 1) CYLINDERS -
      DSORG(PS) RECFM(V B A) LRECL(80) BLKSIZE(4084) NEW
    ISPEXEC CONTROL ERRORS RETURN
    ISPEXEC LMINIT DATAID(MXFIN) DDNAME(MXMLBX)
    SET &RCLC = &LASTCC
    IF &RCLC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM998I)
      GOTO BL93
      END
    ISPEXEC LMINIT DATAID(MXFOU) DDNAME(MXBRWS) ENQ(EXCLU)
    SET &RCLC = &LASTCC
    IF &RCLC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM998J)
      GOTO BL92
      END
    IF &MXOPT NE NO THEN ISPEXEC LMOPEN DATAID(&MXFIN) RECFM(MXRFT)
    ELSE ISPEXEC LMOPEN DATAID(&MXFIN)
    SET &RCLC = &LASTCC
    IF &RCLC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM998O)
      GOTO BL91
      END
    IF &MXOPT NE NO THEN DO
      ISPEXEC CONTROL ERRORS CANCEL
      IF &MXRFT EQ FB THEN -
        ALLOC F(MXWORK) UNIT(VIO) SPACE(1 1) CYLINDERS -
          DSORG(PS) RECFM(F B) LRECL(80) BLKSIZE(4080) NEW
      ELSE ALLOC F(MXWORK) UNIT(VIO) SPACE(1 1) CYLINDERS -
          DSORG(PS) RECFM(V B) LRECL(84) BLKSIZE(4096) NEW
      ISPEXEC CONTROL ERRORS RETURN
      ISPEXEC LMINIT DATAID(MXFWK) DDNAME(MXWORK) ENQ(EXCLU)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998J)
        GOTO BL90
        END
      END
    DO WHILE &N GE 1
      ISPEXEC LMOPEN DATAID(&MXFOU) OPTION(OUTPUT)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998P)
        GOTO BL33
        END
      ISPEXEC LMMFIND DATAID(&MXFIN) MEMBER(MX&MXNUM)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998N)
        GOTO BL32
        END
      IF &MXOPT NE NO THEN GOTO BL10
      CONTROL ASIS
      SET &MXPRQ = B
BL01: ISPEXEC LMGET DATAID(&MXFIN) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO BL02
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO BL31
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO BL31
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFOU) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO BL01
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO BL31
BL02: CONTROL CAPS
      GOTO BL20
BL10: ISPEXEC LMOPEN DATAID(&MXFWK) OPTION(OUTPUT)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998P)
        GOTO BL32
        END
      CONTROL ASIS
      SET &MXPRQ = M
BL11: ISPEXEC LMGET DATAID(&MXFIN) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO BL12
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO BL30
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO BL30
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFWK) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO BL11
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO BL30
BL12: CONTROL CAPS
      ISPEXEC LMCLOSE DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998D)
        GOTO BL32
        END
BL13: IF &MXOPT EQ YES THEN ISPEXEC EDIT DATAID(&MXFWK) MACRO(PAJCMXD)
      ELSE ISPEXEC EDIT DATAID(&MXFWK) MACRO(PAJCMXN)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        IF &RCLC EQ 4 THEN ISPEXEC SETMSG MSG(PAJM998Y)
        ELSE ISPEXEC SETMSG MSG(PAJM998Z)
        GOTO BL32
        END
      IF &MXOPT EQ YES THEN DO
        ISPEXEC VGET (CRYKSI) SHARED
        IF &CRYKSI EQ YES THEN GOTO BL13
        END
      ISPEXEC LMOPEN DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998O)
        GOTO BL32
        END
      CONTROL ASIS
      SET &MXPRQ = B
BL14: ISPEXEC LMGET DATAID(&MXFWK) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO BL15
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO BL30
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO BL30
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFOU) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO BL14
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO BL30
BL15: CONTROL CAPS
      ISPEXEC LMCLOSE DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998C)
        GOTO BL32
        END
BL20: ISPEXEC LMCLOSE DATAID(&MXFOU)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998D)
        GOTO BL33
        END
      ISPEXEC BROWSE DATAID(&MXFOU)
      IF &LASTCC NE 0 THEN ISPEXEC SETMSG MSG(PAJM997N)
      ELSE ISPEXEC SETMSG MSG(PAJM997S)
      IF &N EQ 1 THEN GOTO BL34
      ISPEXEC TBSKIP &MXLIST
      IF &LASTCC EQ 0 THEN GOTO BL34
      GO TO BL33
BL30: ISPEXEC LMCLOSE DATAID(&MXFWK)
BL31: CONTROL CAPS
BL32: ISPEXEC LMCLOSE DATAID(&MXFOU)
BL33: SET &N = 1
BL34: SET &N = &N - 1
      END
    IF &MXOPT NE NO THEN ISPEXEC LMFREE DATAID(&MXFWK)
BL90: ISPEXEC LMCLOSE DATAID(&MXFIN)
    IF &MXOPT NE NO THEN FREE F(MXWORK)
BL91: ISPEXEC LMFREE DATAID(&MXFOU)
BL92: ISPEXEC LMFREE DATAID(&MXFIN)
BL93: FREE F(MXBRWS)
BL94: FREE F(MXMLBX)
    ISPEXEC CONTROL ERRORS CANCEL
    ISPEXEC CONTROL DISPLAY RESTORE
    END
/* - - - L LINE-COMMAND. - - - - - - - - - - - - - - - - - - - - - - */
  ELSE IF &ACT EQ L THEN DO
    ISPEXEC CONTROL DISPLAY SAVE
    ERROR DO
      ERROR OFF
      FREE ATTR(VBA)
      ATTR VBA RECFM(V B A) LRECL(137) BLKSIZE(6356) DSORG(PS)
      ALLOC F(ISPFILE) DSN(MXTEMP.LISTING) REUSE CATALOG +
        USING(VBA) SP(2 2) TRACKS
      SET &MXPDEL = DELETE
      END
    ALLOC F(ISPFILE) DSN(MXTEMP.LISTING) OLD REUSE
    ERROR OFF
    SET &ALRC = 0
    ERROR DO
      ERROR DO
        ISPEXEC SETMSG MSG(PAJM998E)
        SET &ALRC = 1
        GOTO LL00
        END
      SET &MXDSN = &STR(&MXMPRO..&MXMLIB..&MXMTYP)
      SET &MXUNM = SYSDA
      SET &MXSP1 = 2
      SET &MXSP2 = 1
      SET &MXSPU = CYLINDERS
      SET &MXDIR = 46
      SET &MXRCF = VARIABLE
      ISPEXEC VPUT (MXDSN MXUNM MXSP1 MXSP2 MXSPU MXDIR MXRCF)
      ISPEXEC DISPLAY PANEL(PAJMX5)
      IF &MXRCF EQ FIXED THEN -
        ATTR MXATTR RECFM(F B) LRECL(80) BLKSIZE(6320)
      ELSE ATTR MXATTR RECFM(V B) LRECL(84) BLKSIZE(6356)
      ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') +
        NEW REUSE UNIT(&MXUNM) VOLUME(&MXVOL) +
        SP(&MXSP1 &MXSP2) &MXSPU DIR(&MXDIR) USING(MXATTR)
      FREE ATTR(MXATTR)
      ERROR OFF
      END
    ALLOC F(MXMLBX) DSN('&MXMPRO..&MXMLIB..&MXMTYP') SHR
LL00: ERROR OFF
    FREE F(MXMLBX)
    ERROR OFF
    IF &ALRC NE 0 THEN GOTO LL92
    ISPEXEC CONTROL ERRORS RETURN
    ISPEXEC LMINIT DATAID(MXFIN) DATASET('&MXMPRO..&MXMLIB..&MXMTYP')
    SET &RCLC = &LASTCC
    IF &RCLC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM998I)
      ISPEXEC CONTROL ERRORS CANCEL
      GOTO LL92
      END
    IF &MXOPT NE NO THEN ISPEXEC LMOPEN DATAID(&MXFIN) RECFM(MXRFT)
    ELSE ISPEXEC LMOPEN DATAID(&MXFIN)
    SET &RCLC = &LASTCC
    IF &RCLC NE 0 THEN DO
      ISPEXEC SETMSG MSG(PAJM998O)
      ISPEXEC CONTROL ERRORS CANCEL
      GOTO LL91
      END
    IF &MXOPT NE NO THEN DO
      ISPEXEC CONTROL ERRORS CANCEL
      IF &MXRFT EQ FB THEN -
        ALLOC F(MXWORK) UNIT(VIO) SPACE(1 1) CYLINDERS -
          DSORG(PS) RECFM(F B) LRECL(80) BLKSIZE(4080) NEW
      ELSE ALLOC F(MXWORK) UNIT(VIO) SPACE(1 1) CYLINDERS -
          DSORG(PS) RECFM(V B) LRECL(84) BLKSIZE(4096) NEW
      ISPEXEC CONTROL ERRORS RETURN
      ISPEXEC LMINIT DATAID(MXFWK) DDNAME(MXWORK) ENQ(EXCLU)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998J)
        ISPEXEC CONTROL ERRORS CANCEL
        GOTO LL90
        END
      END
    ISPEXEC CONTROL ERRORS CANCEL
    DO WHILE &N GE 1
      ISPEXEC FTOPEN
      ISPEXEC FTINCL PAJSMX2
      ISPEXEC FTCLOSE
      ISPEXEC CONTROL ERRORS RETURN
      ISPEXEC LMINIT DATAID(MXFOU) DATASET(MXTEMP.LISTING) ENQ(MOD)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998J)
        GOTO LL34
        END
      ISPEXEC LMOPEN DATAID(&MXFOU) OPTION(OUTPUT)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998P)
        GOTO LL33
        END
      ISPEXEC LMMFIND DATAID(&MXFIN) MEMBER(MX&MXNUM)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998N)
        GOTO LL32
        END
      IF &MXOPT NE NO THEN GOTO LL10
      CONTROL ASIS
      SET &MXPRQ = L
LL01: ISPEXEC LMGET DATAID(&MXFIN) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO LL02
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO LL31
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO LL31
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFOU) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO LL01
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO LL31
LL02: CONTROL CAPS
      GOTO LL20
LL10: ISPEXEC LMOPEN DATAID(&MXFWK) OPTION(OUTPUT)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998P)
        GOTO LL32
        END
      CONTROL ASIS
      SET &MXPRQ = M
LL11: ISPEXEC LMGET DATAID(&MXFIN) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO LL12
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO LL30
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO LL30
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFWK) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO LL11
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO LL30
LL12: CONTROL CAPS
      ISPEXEC LMCLOSE DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998D)
        GOTO LL32
        END
LL13: IF &MXOPT EQ YES THEN ISPEXEC EDIT DATAID(&MXFWK) MACRO(PAJCMXD)
      ELSE ISPEXEC EDIT DATAID(&MXFWK) MACRO(PAJCMXN)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        IF &RCLC EQ 4 THEN ISPEXEC SETMSG MSG(PAJM998Y)
        ELSE ISPEXEC SETMSG MSG(PAJM998Z)
        GOTO LL32
        END
      IF &MXOPT EQ YES THEN DO
        ISPEXEC VGET (CRYKSI) SHARED
        IF &CRYKSI EQ YES THEN GOTO LL13
        END
      ISPEXEC LMOPEN DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998O)
        GOTO LL32
        END
      CONTROL ASIS
      SET &MXPRQ = B
LL14: ISPEXEC LMGET DATAID(&MXFWK) MODE(INVAR) +
        DATALOC(MXRIN) DATALEN(MXLIN) MAXLEN(80)
      SET &RCLC = &LASTCC
      IF &RCLC EQ 8 THEN GOTO LL15
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998R)
        GOTO LL30
        END
      ISPEXEC VPUT (MXRIN MXLIN MXPRQ) SHARED
      ISPEXEC SELECT PGM(PAJPMX)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998X)
        GOTO LL30
        END
      ISPEXEC VGET (MXROU MXLOU) SHARED
      ISPEXEC LMPUT DATAID(&MXFOU) MODE(INVAR) +
        DATALOC(MXROU) DATALEN(&MXLOU) NOBSCAN
      SET &RCLC = &LASTCC
      IF &RCLC EQ 0 THEN GOTO LL14
      ISPEXEC SETMSG MSG(PAJM998W)
      GOTO LL30
LL15: CONTROL CAPS
      ISPEXEC LMCLOSE DATAID(&MXFWK)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998C)
        GOTO LL32
        END
LL20: ISPEXEC LMCLOSE DATAID(&MXFOU)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998D)
        GOTO LL33
        END
      ISPEXEC LMFREE DATAID(&MXFOU)
      SET &RCLC = &LASTCC
      IF &RCLC NE 0 THEN DO
        ISPEXEC SETMSG MSG(PAJM998G)
        GOTO LL34
        END
      ISPEXEC CONTROL ERRORS CANCEL
      SET &MXLOPT =
      IF &MXLDEST NE THEN SET &MXLOPT = &STR(DEST(&MXLDEST))
      IF &MXLCLAS NE THEN SET &MXLOPT = &STR(&MXLOPT CLASS(&MXLCLAS))
      PRINTO MXTEMP.LISTING &MXLOPT NOHEADING
      ISPEXEC SETMSG MSG(PAJM997X)
      IF &N EQ 1 THEN GOTO LL36
      ISPEXEC TBSKIP &MXLIST
      IF &LASTCC EQ 0 THEN GOTO LL36
      GOTO LL35
LL30: ISPEXEC LMCLOSE DATAID(&MXFWK)
LL31: CONTROL CAPS
LL32: ISPEXEC LMCLOSE DATAID(&MXFOU)
LL33: ISPEXEC LMFREE DATAID(&MXFOU)
LL34: ISPEXEC CONTROL ERRORS CANCEL
LL35: SET &N = 1
LL36: SET &N = &N - 1
      END
    IF &MXOPT NE NO THEN ISPEXEC LMFREE DATAID(&MXFWK)
LL90: ISPEXEC LMCLOSE DATAID(&MXFIN)
    IF &MXOPT NE NO THEN FREE F(MXWORK)
LL91: ISPEXEC LMFREE DATAID(&MXFIN)
LL92: ISPEXEC CONTROL DISPLAY RESTORE
    END
  END
GOTO NX00
/* - - - END-CANCEL COMMANDS.  - - - - - - - - - - - - - - - - - - - */
EX00: FREE F(ISPFILE) ATTR(VBA) &MXPDEL
IF &CMD EQ CANCEL THEN DO
  ISPEXEC TBEND &MXLIST
  ISPEXEC SETMSG MSG(PAJM992C)
  END
ELSE IF &MXUPF EQ THEN DO
  ISPEXEC TBEND &MXLIST
  ISPEXEC SETMSG MSG(PAJM992N)
  END
ELSE DO
  ISPEXEC TBSORT &MXLIST +
    FIELDS(MXNUM,N,D MXSORT,N,A MXFIELD,C,A MXAUT,C,A)
  IF &MXUPDT EQ YES THEN DO
    ISPEXEC TBCLOSE &MXLIST REPLCOPY PAD(15)
    ISPEXEC SETMSG MSG(PAJM992S)
    END
  ELSE DO
    ISPEXEC TBCLOSE &MXLIST
    ISPEXEC SETMSG MSG(PAJM992N)
    END
  END
EX01: ISPEXEC LIBDEF ISPTLIB LIBRARY
ISPEXEC LIBDEF ISPTABL LIBRARY
FREE F(MXTBMB)
