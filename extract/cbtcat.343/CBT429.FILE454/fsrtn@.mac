1   23/03/94
                                                      FSRTN     1/3.

  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * *     FULL-SCREEN SERVICE ROUTINES    * * * * * * * *
  * * * * * * * *                                     * * * * * * * *
  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

  Purpose :    A set of routines to manage more easily the full-screen
  ---------    display of IBM 3270 terminal.
               (see $FS and $FSDOT assembler macros also)

  Calling sequence : CALL FSRTN,(A,B,C),VL
  ------------------            (A)
          Function : write a screen via TPUT, and get a reply via TGET.
          At entry : A = address of a byte containing the requests
                         X'00' = TPUT/TGET operation
                         X'01' = TGET suppress (no reply), only TPUT
                         X'80' = snap input buffer when received (needs
                                 a pre-defined data-set with format
                                 RECFM=VBA,BLKSIZE=1632,LRECL=125
                                 and pre-allocated to SYSSNAP DD-name)
                         X'FF' = terminate/exit full-screen mode
                     B = start address of the screen image
                     C = address of a fullword containing the screen
                         image length
           At exit : R15 = 0 - normal completion (text at disposal)
                               with R0 = address of AID-byte of
                                       structured field, or R0 = 0,
                                and R1 = address of AID-byte
                                       followed by the 2-bytes cursor
                                       address, or R1 = 0.
                         = 4 - buffer shortage (input truncated, but
                               R0-R1 are set as when R15 = 0)
                         = 8 - end requested (keys : PA1, PA2 or PA3,
                               and R0-R1 are set as when R15 = 0)
                         = 16 - error detected (message sent)

  Assembler macro : @FS A,B,C or @FS A
  ----------------- @FSO (to define the requests byte)

  Calling sequence : CALL FSRTNR
  ------------------
          Function : process the reply text obtained via TGET (it is
                     mandatory as last call). It pass input to caller
                     (field by field).
          At entry : none
           At exit : R15 = 0 - completion of reply text (no more),
                           and R1 = 0
                or : R15 = address of SBA (Set Buffer Address order,
                           1-byte) followed by the buffer address
                           (2-bytes), followed by the text read,
                           and R1 = length of text

  Assembler macro : @FSR
  -----------------
1   07/12/93
                                                      FSRTN     2/3.

  Calling sequence : CALL FSRTNI,(A,B,C),VL
  ------------------             (A,B)
                                 (A)
          Function : set maximum reply text length (buffer) for TGET
                     (default buffer size is 1K, maximum is 30K).
                     It obtains the buffer for reply text.
                     Also, eventually get terminal attributes and/or
                     declare the desired working screen size (by
                     default it is 24 x 80).
          At entry : A = address of a fullword containing the maximum
                         reply text length (buffer length)
                         If R1 is zero, or the address is zero, or
                         the length is zero or negative, then default
                         size is used
                     B = address of an 8-bytes field to receive back
                         the terminal attributes (GTTERM response)
                     C = address of a 2-bytes field containing the
                         desired working screen size as below :
                              1st-byte = rows value, and
                              2nd-byte = columns value
           At exit : R15 = 0 - normal completion
                         = 16 - error detected (message sent)

  Assembler macro : @FSI A,B,C (where A, B and C are optional)
  ----------------- @FST (to define the terminal attributes response)

  Calling sequence : CALL FSRTNQ,(A),VL
  ------------------
          Function : get QUERY reply information (default buffer size
                     is 1K, maximum is 30K).
          At entry : A = address of a fullword containing the maximum
                         QUERY reply length (buffer length)
                         If R1 is zero, or the address is zero, or
                         the length is zero or negative, then default
                         size is used
           At exit : R15 = 0 - normal completion (QUERY at disposal,
                               R1 = address of QUERY reply buffer
                               information and R0 = length)
                         = 16 - error detected (message sent)

  Assembler macro : @FSQ A or @FSQ
  -----------------
1   08/12/93
                                                      FSRTN     3/3.

  Calling sequence : CALL FSRTNB,(A,B),VL
  ------------------
          Function : compute ROW/COLUMN to BUFFER ADDRESS for the
                     current working screen size
          At entry : A = address of a 2-bytes field containing the
                         desired ROW/COLUMN as below :
                               1st-byte = ROW value, and
                               2nd-byte = COLUMN value
                     B = address of a 2-bytes field to receive back
                         the corresponding BUFFER ADDRESS
           At exit : R15 = 0 - normal completion
                         = 16 - error detected (message sent)

  Assembler macro : @FSBA A,B
  -----------------

  Calling sequence : CALL FSRTNA,(A,B),VL
  ------------------
          Function : compute BUFFER ADDRESS to ROW/COLUMN for the
                     current working screen size
          At entry : A = address of a 2-bytes field containing the
                         BUFFER ADDRESS
                     B = address of a 2-bytes field to receive back
                         the corresponding ROW/COLUMN as below :
                               1st-byte = ROW value, and
                               2nd-byte = COLUMN value
           At exit : R15 = 0 - normal completion
                         = 16 - error detected (message sent)

  Assembler macro : @FSRC A,B
  -----------------
