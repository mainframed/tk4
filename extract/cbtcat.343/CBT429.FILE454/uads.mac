UADS     TITLE 'U A D S   - LIST SYS1.UADS TSO COMMAND.'
***********************************************************************
*        U A D S - TSO COMMAND                                        *
***********************************************************************
         SPACE 1
* WRITTEN BY : BILL GODFREY, PLANNING RESEARCH CORPORATION.
* INSTALLATION : AIR FORCE DATA SERVICES CENTER / PENTAGON.
* DATE WRITTEN : MAY 6 1981.
* ATTRIBUTES : RE-ENTRANT.
* DESCRIPTION : THIS COMMAND LISTS UADS MEMBERS ON THE TERMINAL.
*         IT DIFFERS FROM THE 'ACCOUNT' COMMAND IN THAT IT
*         DOES NOT LIST THE PASSWORD, DOES NOT ALLOW CHANGES,
*         AND CANNOT LIST THE DIRECTORY OF ALL MEMBER NAMES.
*         IT IS INTENDED FOR USE BY THOSE PERSONS IN SYSTEMS
*         SUPPORT WHO NEED TO LOOK AT UADS BUT ARE NOT
*         RESPONSIBLE FOR UPDATING IT.
* SYNTAX : UADS USERIDX   OR   UADS (USERIDX USERIDY ...)
*         ASTERISK MAY BE SPECIFIED IN PLACE OF YOUR OWN USERID.
* THE INFORMATION IS DISPLAYED IN THE FOLLOWING FORMAT :
* USERID - XXXXXXX  USER ATTR.: OPER ACCT JCL NOMOUNT RECOVER
*                   INST. ATTR., IN HEX: 0000 -- MAXSIZE:  1000K
*                   UPT: 00000000000000000000000000000000 PREFIX
*                   DESTINATION: (DEFAULT)
*                   HOLD MSGCLASS: (DEFAULT) -- JOB CLASS: (DEFAULT)
*                   MESSAGE CLASS: (DEFAULT) -- SYSOUT CLASS: (DEFAULT)
*          PASSWORD XXXXXXXX
*             ACCOUNT XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*                PROC XXXXXXXX  SIZE=NNNNNK  UNIT NAME: SYSDA
* ----------------------------------------------------------------
* CBT ORIGIN : EXTRACTED FROM CBT TAPE 86 FEB, FILE 300.
* ----------------------------------------------------------------
* UPDATED BY MOINIL P.A. - COMPUTING CENTRE
*                          J.R.C. - ISPRA ESTABLISHMENT
*                          21020 ISPRA (VA), ITALY
*        - LOCAL CHECK OF USER AUTHORITY.
*        - MAXIMUM NUMBER OF MEMBERS FOR A USERID DYNAMICALLY
*          COMPUTED FROM ASSEMBLY VARIABLE (SEE 'MXMU',EASY ZAP).
*        - SNAP OPTION ADDED TO GET UADS BLOCKS TRACE.
*        - LOGON OPTION ADDED TO GET LOGON DEFAULTS.
         SPACE 1
        PRINT  OFF
         MACRO
&LAB    @SNAP  &ID,&HEADER,&SKIP
&LAB     TM    SWSNAP,SNREQ
         BZ    &SKIP
         AIF   ('&ID' EQ '').A
         LA    R0,&ID
         AGO   .B
.A       XR    R0,R0
.B       AIF   ('&HEADER' EQ '').C
         L     R1,=A(&HEADER)
         AGO   .D
.C       XR    R1,R1
.D       L     R15,=A(SNAP)
         BASR  R14,R15
         LTR   R15,R15
         MEND
        PRINT  ON
         EJECT
UADS     START 0
         SPACE 1
UADS    AMODE  24
UADS    RMODE  24
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
MXMU     EQU   3    <--- MAXIMUM NUMBER OF MEMBERS FOR A USERID  *
*                        (ACCEPTABLE RANGE IS : 1 UP TO 9).      *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        $DEFREG
*------- AUTHORITY LEVEL DEFINITIONS.
         SPACE 1
LV10     EQU   10 - 15             SYSTEM + OPERATOR
LV0      EQU   0 - 9               NONE
         SPACE 1
DIDOCS  $MDL@IX
         EJECT
        $XENT  BASE=(R11,R12),LV=@DATAL,TYPE=RENT
         LR    R2,R1               SAVE ENTRY REGISTER
         LR    R9,R13              INITIALIZE WORKAREA POINTER
         USING @DATA,R9
         LA    R0,@DATA+(18*4)     AREA TO BE CLEARED
         L     R1,@SIZE            LENGTH TO BE CLEARED
         XR    R15,R15             ZERO PAD AND 'FROM' LENGTH
         MVCL  R0,R14              ZERO IT ALL
        $TEW$EC REG=R2,TIOT=YES,MSG=PUTMSG,ERR=QUIT,PUT=PUTLNE
         MVI   LINE-1,C' '
         MVI   AUTH,LV0            CHECK AUTHORITY OF USER ISSUING
         XC    REQAUT(REQAUTL),REQAUT   THE COMMAND
         MVC   REQAUT+1(3),=AL3(MDL@IX)
         LA    R1,AUTH
         ST    R1,REQAUT+4
        $EACM  REQAUT
         CLI   AUTH,LV10
         BL    NOTAUT
        $TEW$PP PARM=UADSPCL,REG=R2
         MVC   DDNAME,=CL8'SYSUADS'
        DEVTYPE DDNAME,DEVAREA
         LTR   R15,R15
         BNZ   DDERR
         LA    R4,SYSUADS
         MVC   0(SYSUADSL,R4),SYSUADS1
         USING IHADCB,R4
         MVC   DCBDDNAM,DDNAME
         MVI   OPEN,X'80'
        OPEN   ((R4),INPUT),MF=(E,OPEN)
         TM    DCBOFLGS,DCBOFOPN   SUCCESSFULLY OPENED?
         BZ    OPERR               NO - ERROR
         OI    STATUS,STATOPEN
         LH    R0,DCBBLKSI         GET UADS BLOCKSIZE
         DROP  R4
         ST    R0,INUSIZ           PHYSICAL BLOCK LENGTH
         MH    R0,MXMEMB           N TIMES
         LH    R3,MXMEMB           COMPUTE BLDL SPACE
         MH    R3,MXMEMB+2
         AH    R3,=H'4'
         AR    R0,R3               ADD BLDL SPACE
         AH    R0,=H'7'            ROUND UP TO DOUBLE WORD
         SRL   R0,3
         SLL   R0,3
         ST    R0,INULEN           SAVE IT
        GETMAIN R,LV=(0)
         ST    R1,INUPTR
         AR    R1,R3               ADD BLDL SPACE
         ST    R1,INUBUF
         OI    STATUS,STATGM
         MVC   UADDECBW(UADDECBL),UADDECB
         MVC   PASSKWT(1),PASSKW+1
         MVC   LOGKWT(1),LOGKW+1
         CLI   PASSKWT,4           IS TRACE REQUESTED?
         BNE   *+L'*+4             NO
         OI    SWSNAP,SNREQ        YES
         LA    R4,USERID
         DROP  R2
         B     *+L'*+4
NEXTUSER L     R4,8(,R4)
         ST    R4,USERPTR
         MVC   MEMBER,=CL8' '
         L     R14,0(,R4)
         LH    R1,4(,R4)
         BCTR  R1,0
         B     *+L'*+6
         MVC   MEMBER(0),0(R14)
         EX    R1,*-6
         CLC   MEMBER,=CL8'* '
         BNE   NOTSELF
         L     R2,#TSCPPL
         USING CPPL,R2
         L     R14,CPPLPSCB
         DROP  R2
         IC    R1,7(,R14)          PSCBUSRL
         LTR   R1,R1
         BZ    NOTFND
         BCTR  R1,0
         B     *+L'*+6
         MVC   MEMBER(0),0(R14)    PSCBUSER
         EX    R1,*-6
NOTSELF  L     R2,INUPTR
         MVC   0(4,R2),MXMEMB      SET START OF BLDL LIST
         LA    R15,4(R2)
         LA    R14,1(R1,R15)
         LH    R3,MXMEMB
         XR    R1,R1
BUILDL   MVC   0(8,R15),MEMBER     BUILD BLDL ENTRIES
         XC    8(4,R15),8(R15)
         MVI   0(R14),C'0'         APPEND '0' TO USERID
         EX    R1,APPEND           SET 'N' TO USERID
         BCT   R3,*+L'*+4
         B     XBLDL
         LA    R1,1(R1)
         LA    R14,12(R14)
         LA    R15,12(R15)
         B     BUILDL
APPEND   OI    0(R14),*-*          <<EXECUTED>>
XBLDL   BLDL   SYSUADS,(R2)
         LTR   R15,R15             IS USERID IN UADS
         BZ    FOUND               YES, BRANCH
         CH    R15,=H'4'           WAS ERROR DUE TO MEMBER NOT FOUND
         BNE   BLDLERR             NO, I/O ERROR OR DCB ERROR
FOUND    XC    PASSNUM,PASSNUM
         L     R4,INUBUF
         LR    R3,R4               START OF READ
         LA    R2,4(R2)            SET TO MEMBER0
         BAS   R10,READMB          READ MEMBER0
         B     NOTFND              +0 - NOT FOUND
         LH    R5,MXMEMB           +4 - OK
READNX   BCT   R5,*+L'*+4
         B     TSNAP               END OF READ
         AL    R3,INUSIZ           NEXT TO READ
         LA    R2,12(R2)           SET TO NEXT MEMBER
         BAS   R10,READMB          READ MEMBER
         B     TSNAP               +0 - NO MORE
         B     READNX              +0 - OK
UADERR   OI    STATUS,STATERR      SET READ ERROR
         BR    R14
TSNAP   @SNAP  1,HDR,PROCESS       DUMP BLOCK READ
         BZ    PROCESS
         MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+1(33),=CL33'---> SNAP RC =     (R15=        )'
         CVD   R15,DOUBLE
         MVC   LINE+16(3),=XL3'202120'
         ED    LINE+15(4),DOUBLE+6
         ST    R15,DOUBLE
         UNPK  LINE+25(9),DOUBLE(5)
         NC    LINE+25(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    LINE+25(8),=CL16'0123456789ABCDEF'
         MVI   LINE+33,C')'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         SPACE 1
*------- H E A D E R   B L O C K -- (R4)
         SPACE 1
         USING DHED,R4
PROCESS  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+1(8),=CL8'USERID -'
         MVC   LINE+10(8),UADSUSER
         LA    R1,LINE+10+7
ZEROLOOP CLI   0(R1),C'0'
         BE    *+L'*+4
         BCT   R1,ZEROLOOP
         MVI   0(R1),C' '
         MVC   LINE+19(11),=CL11'USER ATTR.:'
         LA    R1,LINE+31
         TM    UADSATTR,USATR00
         BNO   NOOPER
OPER     MVC   0(4,R1),=CL4'OPER'
         LA    R1,5(,R1)
         B     OPERX
NOOPER   MVC   0(6,R1),=CL6'NOOPER'
         LA    R1,7(,R1)
OPERX    TM    UADSATTR,USATR01
         BNO   NOACCT
ACCT     MVC   0(4,R1),=CL4'ACCT'
         LA    R1,5(,R1)
         B     ACCTX
NOACCT   MVC   0(6,R1),=CL6'NOACCT'
         LA    R1,7(,R1)
ACCTX    TM    UADSATTR,USATR02
         BNO   NOJCL
JCL      MVC   0(3,R1),=CL3'JCL'
         LA    R1,4(,R1)
         B     JCLX
NOJCL    MVC   0(5,R1),=CL5'NOJCL'
         LA    R1,6(,R1)
JCLX     TM    UADSATTR,USATR03
         BNO   NOMOUNT
MOUNT    MVC   0(5,R1),=CL5'MOUNT'
         LA    R1,6(,R1)
         B     MOUNTX
NOMOUNT  MVC   0(7,R1),=CL7'NOMOUNT'
         LA    R1,8(,R1)
MOUNTX   TM    UADSATTR,USATR04
         BNO   RECOV
NORECOV  MVC   0(9,R1),=CL9'NORECOVER'
         B     RECOVX
RECOV    MVC   0(7,R1),=CL7'RECOVER'
RECOVX   LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1
         MVC   LINE+19(20),=CL20'INST. ATTR., IN HEX:'
         LA    R15,LINE+40
         UNPK  0(5,R15),UADSINST(3)
         TR    0(4,R15),HEXTAB-240
         MVI   4(R15),C' '
         MVC   LINE+45(11),=CL11'-- MAXSIZE:'
         LA    R15,LINE+56
         LH    R0,UADSMAXC
         CVD   R0,DOUBLE
         MVC   0(6,R15),=XL6'402020202120'
         ED    0(6,R15),DOUBLE+5
         MVI   6(R15),C'K'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1
         MVC   LINE+19(4),=CL4'UPT:'
         L     R1,UADSUPTP         GET OFFSET TO UPT
         LA    R1,UADSMHDR(R1)     POINT TO UPT
         USING UPT,R1
         UNPK  LINE+24+00(9),UPT(5)
         UNPK  LINE+24+08(9),UPT+4(5)
         UNPK  LINE+24+16(9),UPT+8(5)
         UNPK  LINE+24+24(9),UPTSWS(5)
         MVI   LINE+24+32,C' '
         TR    LINE+24(32),HEXTAB-240
         XR    R14,R14
         IC    R14,UPTPREFL
         LTR   R14,R14             IS PREFIX LENGTH ZERO
         BZ    NOPREF              YES, BRANCH
         BCT   R14,*+L'*+6
         MVC   LINE+24+33(*-*),UPTPREFX      MOVE PREFIX
         EX    R14,*-6
         DROP  R1
NOPREF   LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1
         MVC   LINE+19(12),=CL12'DESTINATION:'
         MVC   LINE+32(L'UADSDEST),UADSDEST
         CLC   LINE+32(L'UADSDEST),=XL8'0'
         BE    *+L'*+10
         CLC   LINE+32(L'UADSDEST),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+32(9),=CL9'(DEFAULT)'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1
         MVC   LINE+19(14),=CL14'HOLD MSGCLASS:'
         MVC   LINE+34(L'UADSSUBH),UADSSUBH
         CLC   LINE+34(L'UADSSUBH),=XL8'0'
         BE    *+L'*+10
         CLC   LINE+34(L'UADSSUBH),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+34(9),=CL9'(DEFAULT)'
         MVC   LINE+44(13),=CL13'-- JOB CLASS:'
         MVC   LINE+58(L'UADSSUBC),UADSSUBC
         CLC   LINE+58(L'UADSSUBC),=XL8'0'
         BE    *+L'*+10
         CLC   LINE+58(L'UADSSUBC),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+58(9),=CL9'(DEFAULT)'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1
         MVC   LINE+19(14),=CL14'MESSAGE CLASS:'
         MVC   LINE+34(L'UADSSUBM),UADSSUBM
         CLC   LINE+34(L'UADSSUBM),=XL8'0'
         BE    *+L'*+10
         CLC   LINE+34(L'UADSSUBM),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+34(9),=CL9'(DEFAULT)'
         MVC   LINE+44(16),=CL16'-- SYSOUT CLASS:'
         MVC   LINE+61(L'UADSSOUT),UADSSOUT
         CLC   LINE+61(L'UADSSOUT),=XL8'0'
         BE    *+L'*+10
         CLC   LINE+61(L'UADSSOUT),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+61(9),=CL9'(DEFAULT)'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         SPACE 1
*------- P A S S W O R D   L E V E L -- (R5)
         SPACE 1
         L     R5,UADSPWD1
         LA    R5,UADSMHDR(R5)
         USING DPOB,R5
NEWPASS  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+10(8),=CL8'PASSWORD'
         ICM   R6,B'1111',UADSPDAT PASSWORD PRESENT?
         BNZ   PASSGO              YES - BRANCH
         MVC   LINE+19(3),=CL3'(*)'
         B     PASSPR
PASSGO   LA    R6,UADSMHDR(R6)
         USING DPOBD,R6
         MVC   PASSDUM,=CL8'*****'
         CLI   PASSKWT,3           PASSWORD REQUESTED
         BNL   PASSSHOW            YES, SHOW IT (RACF GROUP)
         CLI   PASSKWT,2           PASSNUM (SHOW RELATIVE PASSWORD)
         BNE   PASSXXX             NO, GO SHOW ASTERISKS
         LH    R1,PASSNUM
         LA    R1,1(,R1)           COUNT PASSWORDS FOR THIS USERID
         STH   R1,PASSNUM
         CVD   R1,DOUBLE
         OI    DOUBLE+7,X'0F'
         MVC   PASSDUM,=CL8' '
         UNPK  PASSDUM+0(5),DOUBLE+5(3)
PASSXXX  MVC   UADSPPWD,PASSDUM
PASSSHOW MVC   LINE+19(8),UADSPPWD
PASSPR   LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         DROP  R6
         SPACE 1
*------- A C C O U N T   L E V E L -- (R6)
         SPACE 1
         L     R6,UADSPSUB
         LA    R6,UADSMHDR(R6)
         USING DNOB,R6
NEWACCT  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+13(7),=CL7'ACCOUNT'
         ICM   R7,B'1111',UADSADAT ACCOUNT PRESENT?
         BNZ   ACCTGO              YES - BRANCH
ACCTSTAR MVC   LINE+21(3),=CL3'(*)'
         B     ACCTPR
ACCTGO   LA    R7,UADSMHDR(R7)
         USING DNOBD,R7
         XR    R2,R2
         IC    R2,UADSALEN
         LTR   R2,R2               LENGTH ZERO?
         BZ    ACCTSTAR            YES - BRANCH
         LA    R1,L'UADSANUM
         CLR   R2,R1
         BNH   *+L'*+2
         LR    R2,R1
         LA    R1,LINE+21
         BCT   R2,*+L'*+6
         MVC   0(0,R1),UADSANUM
         EX    R2,*-6              PRINT UP TO 40 DIGITS OF ACCOUNT
ACCTPR   LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         DROP  R7
         SPACE 1
*------- P R O C N A M E   L E V E L -- (R7)
         SPACE 1
         L     R7,UADSASUB
         LA    R7,UADSMHDR(R7)
         USING DROB,R7
NEWPROC  MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+16(4),=CL4'PROC'
         L     R8,UADSRDAT
         LA    R8,UADSMHDR(R8)
         USING DROBD,R8
         MVC   LINE+21(8),UADSRNAM
         MVC   LINE+31(11),=CL11'SIZE=NNNNNK'
         LH    R0,UADSRSIZ
         CVD   R0,DOUBLE
         MVC   LINE+35(6),=XL6'402020202120'
         ED    LINE+35(6),DOUBLE+5
         MVI   LINE+35,C'='
         MVC   LINE+44(10),=CL10'UNIT NAME:'
         MVC   LINE+55(8),UADSUNAM
         CLC   LINE+55(8),=CL8' '
         BNE   *+L'*+6
         MVC   LINE+55(6),=CL6'(NONE)'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         DROP  R8
         SPACE 1
*------- S T A R T   B A C K I N G   U P --
         SPACE 1
         TM    UADSRFLG,FLGR01     ANY MORE PROCNAMES?
         BO    UPTOACCT            NO - GO UP 1 LEVEL
         XR    R1,R1
         ICM   R1,B'0111',UADSRNEX
         LA    R7,UADSMHDR(R1)
         BNZ   NEWPROC
         DROP  R7
UPTOACCT TM    UADSAFLG,AFLG01     ANY MORE ACCOUNT NUMBERS?
         BO    UPTOPASS            NO - GO UP 1 LEVEL
         XR    R1,R1
         ICM   R1,B'0111',UADSANEX
         LA    R6,UADSMHDR(R1)
         BNZ   NEWACCT
         DROP  R6
UPTOPASS TM    UADSPFLG,PFLG01     ANY MORE PASSWORDS?
         BO    ENDPSWS             NO - FINISHED PASSWORDS
         XR    R1,R1
         ICM   R1,B'0111',UADSPNEX
         LA    R5,UADSMHDR(R1)
         BNZ   NEWPASS
         SPACE 1
*------- L O G O N   D E F A U L T S -- (R5)
         SPACE 1
ENDPSWS  TM    UADSBN01+1,UADSDFMT DFLT FORMAT UADS?
         BZ    ENDUSER             NO, FINISHED THIS USERID
         CLI   LOGKWT,1            LOGN DEFAULTS REQUESTED
         BNE   ENDUSER             NO, FINISHED THIS USERID
         L     R5,UADSDFTP
         LTR   R15,R5              NON ZERO OFFSET?
         BZ    ENDUSER             NO, FINISHED THIS USERID
         LA    R5,UADSMHDR(R5)
         USING DFOB,R5
LGNPCN   TM    UADSDFOB,DFBLOGN    IS IT A LOGON DEFAULT BLOCK?
         BZ    LGNPCT              NO, LOOK TO NEXT IF ANY
         L     R6,UADSDDAT
         LA    R6,UADSMHDR(R6)
         USING DDOBD,R6
         MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+10(15),=CL15'LOGON DEFAULTS:'
         LA    R1,LINE+10+16
         TM    UADSOPT1,UADSMAIL
         BO    *+L'*+14
         MVC   0(4,R1),=CL4'MAIL'
         LA    R1,5(R1)
         B     *+L'*+10
         MVC   0(6,R1),=CL6'NOMAIL'
         LA    R1,7(R1)
         TM    UADSOPT1,UADSNOTC
         BO    *+L'*+14
         MVC   0(6,R1),=CL6'NOTICE'
         LA    R1,7(R1)
         B     *+L'*+10
         MVC   0(8,R1),=CL8'NONOTICE'
         LA    R1,9(R1)
         TM    UADSOPT1,UADSOID
         BO    *+L'*+10
         MVC   0(7,R1),=CL7'OIDCARD'
         B     *+L'*+6
         MVC   0(9,R1),=CL9'NOOIDCARD'
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1         BLANK THE LINE
         MVC   LINE+17(8),=CL8'COMMAND:'
         CLC   LINE+17+9(L'UADSCMD/2),UADSCMD
         BNE   *+L'*+10
         MVC   LINE+17+9(6),=CL6'(NONE)'
         B     LGNPCM
         MVC   LINE+17+9(L'UADSCMD/2),UADSCMD
         LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         MVC   LINE,LINE-1         BLANK THE LINE
         CLC   LINE+17+9(L'UADSCMD/2),UADSCMD+(L'UADSCMD/2)
         BE    LGNPCT
         MVC   LINE+17+9(L'UADSCMD/2),UADSCMD+(L'UADSCMD/2)
LGNPCM   LA    R0,L'LINE-1
         LA    R1,LINE+1
         BAS   R10,STLNE
         DROP  R6
LGNPCT   TM    UADSDFOB,DFFLG01    LAST DEFAULT BLOCK?
         BO    ENDUSER             YES - FINISHED THIS USERID
         XR    R1,R1
         ICM   R1,B'0111',UADSDNXT
         LA    R5,UADSMHDR(R1)
         BNZ   LGNPCN
         DROP  R4,R5
ENDUSER  L     R4,USERPTR
         CLI   8(R4),X'FF'         WAS THAT THE LAST USERID
         BNE   NEXTUSER            NO, BRANCH
         B     EXIT
         SPACE 1
*------- TERMINATION.
         SPACE 1
NOTFND   LA    R0,L'MSG2
         LA    R1,MSG2
         B     SNDMSG
BLDLERR  LA    R0,L'MSG3
         LA    R1,MSG3
         B     SNDMSG
UADEOD   LA    R0,L'MSG4
         LA    R1,MSG4
SNDMSG   BAS   R14,PUTLNE
SETRC    MVI   RC+1,12             RC=12 ------------------------------
         B     ENDUSER
DDERR    LA    R0,L'MSG5
         LA    R1,MSG5
         B     EXRET
OPERR    LA    R0,L'MSG6
         LA    R1,MSG6
EXRET    BAS   R14,PUTLNE
         MVI   RC+1,12             RC=12 ------------------------------
EXIT     TM    SWSNAP,SNOPEN
         BZ    NOSNCL
        CLOSE  (SNAPDCB),MF=(E,SNAPCL)
NOSNCL   TM    STATUS,STATGM
         BZ    EXITNOFM
         L     R1,INUPTR
         L     R0,INULEN
        FREEMAIN R,A=(1),LV=(0)
EXITNOFM TM    STATUS,STATOPEN
         BZ    EXITNOCL
         MVI   CLOSE,X'80'
        CLOSE  ((R4)),MF=(E,CLOSE)
EXITNOCL IKJRLSA #TSANSW
         LH    R15,RC
         B     LEAVE
NOTAUT   LA    R0,L'MSG1
         LA    R1,MSG1
         BAS   R14,PUTLNE
QUIT     LA    R15,12              RC=12 ------------------------------
LEAVE   $XRET  CC=(R15),LV=@DATAL,TYPE=RENT
         SPACE 1
*------- READ MEMBER ROUTINE
*              R2      = LINE ADDRESS
*              R10     = LINK REGISTER
         SPACE 1
READMB   CLI   10(R2),0            WAS MEMBER FOUND
         BER   R10                 NO, RETURN +0
        FIND   SYSUADS,8(R2),C
         XC    UADDECBW(4),UADDECBW CLEAR ECB
         NI    STATUS,255-STATERR  RESET READ ERROR
        READ   UADDECBW,SF,SYSUADS,(R3),'S',MF=E
        CHECK  UADDECBW
         TM    STATUS,STATERR      READ ERROR OCCURED?
         BZ    4(R10)              NO, RETURN +4
         LA    R0,L'MSG7           YES
         LA    R1,MSG7
         B     SNDMSG
         SPACE 1
*------- LINE ROUTINE
*              R0      = LINE LENGTH
*              R1      = LINE ADDRESS
*              R10     = LINK REGISTER
         SPACE 1
STLNE    BAS   R14,PUTLNE
         B     *+L'*(R15)          HOW COMPLETE?
         B     0(R10)              +0 - OK
         B     SETRC               +4 - ERROR
         EJECT
*------- C O N S T A N T S --
         SPACE 1
@SIZE    DC    A(@DATAL-(18*4))
MXMEMB   DC    0H'0',AL2(MXMU,12)  N ENTRIES, EACH 12 BYTES
         SPACE 1
         PRINT NOGEN
SYSUADS1 DCB   DDNAME=SYSUADS,DSORG=PO,MACRF=R,                        1
               EODAD=UADEOD,SYNAD=UADERR
SYSUADSL EQU   *-SYSUADS1
         PRINT GEN
        READ   UADDECB,SF,0,0,'S',MF=L
UADDECBL EQU   *-UADDECB
         SPACE 1
HEXTAB   DC    C'0123456789ABCDEF'
MSG1     DC    C'UNAUTHORIZED COMMAND'
MSG2     DC    C'NOT FOUND'
MSG3     DC    C'BLDL ERROR'
MSG4     DC    C'UNEXPECTED EOF'
MSG5     DC    C'SYSUADS DD NOT FOUND'
MSG6     DC    C'SYSUADS OPEN ERROR'
MSG7     DC    C'SYSUADS READ ERROR'
         SPACE 1
        LTORG  ,                   LITERAL POOL
         SPACE 1
         DROP  R11,R12
         EJECT
*------- TRACE ROUTINE (DEBUG AID FACILITY)
*              R0      = SNAP ID NUMBER (0-255)
*              R1      = SNAP HEADER ADDRESS
*              R9      = WORK AREAS POINTER
*              R11     = LOCAL BASE REGISTER
*              R13     = NEW SAVE AREA
*              R14     = LINK REGISTER
*              R15     = ENTRY ADDRESS
*        NOTE - THE FOLLOWING ALLOCATION IS NEEDED TO OBTAIN THE SNAP
*               DUMPS : ALLOC F(SYSSNAP) SYSOUT(A)
         SPACE 1
        CNOP   0,8
         USING *,R11
SNAP     STM   R14,R12,12(R13)     ENTRY
         LR    R11,R15
         LR    R2,R13
         LA    R13,SVSNAP
         ST    R2,4(R13)
         ST    R13,8(R2)
         LR    R2,R0
         ST    R1,SNAPHD
         OI    SNAPHD,X'80'
         LA    R3,SNAPDCB
         USING IHADCB,R3
         TM    SWSNAP,SNOPEN       SNAP ALREADY OPENED?
         BO    SNS                 YES
         MVC   SNAPDCB(SNAPLL),SNAPCS
         XR    R1,R1
         L     R2,#TSTIOT
         USING TIODSECT,R2
SNL      CLC   TIOELNGH(4),=F'0'
         BE    SNM
         CLC   TIOEDDNM(L'TIOEDDNM),DCBDDNAM
         BE    SNF
         IC    R1,TIOELNGH
         ALR   R2,R1
         B     SNL
         DROP  R2
SNM      LA    R15,36              SET DD MISSING
         B     SNC
SNF     OPEN   ((R3),OUTPUT),MF=(E,SNAPOP)
         TM    DCBOFLGS,DCBOFOPN   OPENED?
         BO    SNO                 YES
         LA    R15,32              SET OPEN ERROR
         B     SNC
SNO      OI    SWSNAP,SNOPEN
         L     R15,INUPTR          START OF SNAP
         ST    R15,SNAPLST
         AL    R15,INULEN          LENGTH
         ST    R15,SNAPLST+4       END OF SNAP
         OI    SNAPLST+4,X'80'
SNS     SNAP   DCB=(R3),TCB='S',ID=(R2),LIST=SNAPLST,                  1
               STRHDR=SNAPHD,MF=(E,SNAPLIST)
         LTR   R15,R15             ALL OK?
         BZ    SNR                 YES
SNC      NI    SWSNAP,255-SNREQ    KILL THE REQUEST
SNR      L     R13,4(R13)          EXIT
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         MVI   12(R13),X'FF'
         BR    R14
         SPACE 1
         DROP  R3,R11
         SPACE 1
        LTORG  ,                   LITERAL POOL
         EJECT
*------- SKELETONS AND CONSTANTS.
         SPACE 1
         PRINT NOGEN
SNAPCS  DCB    DSORG=PS,RECFM=VBA,MACRF=(W),                           1
               BLKSIZE=1632,LRECL=125,                                 2
               DDNAME=SYSSNAP
        OPEN   (*-*),MF=L
        CLOSE  (*-*),MF=L
        SNAP   MF=L
         PRINT GEN
SNAPLL   EQU   *-SNAPCS
         PRINT GEN
         SPACE 1
HDR      DC    AL1(L'HDRT)
HDRT     DC    C'U A D S -- DUMP OF A USERID BLOCK.'
         SPACE 1
*------- P A R S E   P C L --
         SPACE 1
         PRINT NOGEN
UADSPCL  IKJPARM
USERID   IKJIDENT 'USERID',LIST,ASTERISK,                              +
               FIRST=ALPHA,OTHER=ALPHANUM,MAXLNTH=7,                   +
               DEFAULT='*'
PASSKW   IKJKEYWD
         IKJNAME 'SUPPRESS'
         IKJNAME 'NUMBER'
         IKJNAME 'PASSWORD'
         IKJNAME 'TEST'
LOGKW    IKJKEYWD
         IKJNAME 'LOGON'
         IKJENDP
         PRINT GEN
         EJECT
*------- D S E C T S --
         SPACE 1
@DATA    DSECT
         DS    18F
SAVEREGS DS    18F                 FOR PUTLINE
SVSNAP   DS    18F                 SNAP SAVE AREA
DOUBLE   DS    D
        $TEW$WA
DDNAME   DS    CL8
DEVAREA  DS    2F
INUPTR   DS    F
INUBUF   DS    F
INUSIZ   DS    F
INULEN   DS    F
USERPTR  DS    F
RC       DS    H
PASSNUM  DS    H
PASSDUM  DS    CL8
MEMBER   DS    CL8
OPEN     DS    0F
CLOSE    DS    F
SYSUADS  DS    0F,(SYSUADSL)X
UADDECBW DS    0F,(UADDECBL)X
STATUS   DS    XL1
STATOPEN EQU   X'40'
STATGM   EQU   X'20'
STATERR  EQU   X'01'
PASSKWT  DS    XL1                 PASSWORD OPTION
LOGKWT   DS    XL1                 LOGON OPTION
LINEM1   DS    C                   LINE MINUS 1
LINE     DS    CL121
SWSNAP   DC    XL1'0'
SNOPEN   EQU   X'80'
SNREQ    EQU   X'08'
AUTH     DC    AL1(0)
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(*-*)
REQAUTL  EQU   *-REQAUT
         SPACE 1
         PRINT NOGEN
SNAPDCB DCB    DSORG=PS,RECFM=VBA,MACRF=(W),                           1
               BLKSIZE=1632,LRECL=125,                                 2
               DDNAME=SYSSNAP
SNAPOP  OPEN   (*-*),MF=L
SNAPCL  CLOSE  (*-*),MF=L
SNAPLIST SNAP  MF=L
         PRINT GEN
SNAPLST  DS    2F
SNAPHD   DS    F
         SPACE 1
@DATAL   EQU   (((*-@DATA)+7)/8)*8
         SPACE 1
         PRINT NOGEN
        $TEW$DS
        IKJUPT
        DCBD   DEVD=DA,DSORG=PO
         PRINT GEN
         SPACE 1
        IKJEFUAD DSPL,ALL
         SPACE 1
         END
