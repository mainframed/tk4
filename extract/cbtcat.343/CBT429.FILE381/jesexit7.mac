         TITLE 'CREATE SMF TYPE30 RECORDS FOR NJE JOBS'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.4  OR SP 1.3.6                      *
*                                                                     *
*        THIS JES2 EXIT PROGRAM WILL CREATE AN SMF TYPE 30            *
*        SUBTYPE 1 RECORD FOR EVERY NJE JOB.  THIS IS TO              *
*        PROVIDE ACCOUNTING INFORMATION FOR NJE PRINT JOBS            *
*        WHICH IS CURRENTLY BEING LOST SINCE THE WRITER               *
*        (TYPE6) AND THE PURGE (TYPE26) RECORDS DO NOT                *
*        PROVIDE JOB ACCOUNTING.  THIS RECORD WILL ONLY BE            *
*        PRODUCED IF THE APPROPRIATE NJE USER HEADER SECTION          *
*        IS PRESENT TO PROVIDE THE JOB ACCOUNTING INFORMATION.        *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST COMPUTER SERVICES                      *
*                        420 BRUSHY MOUNTAIN ROAD                     *
*                        WILKESBORO, N.C. 28697                       *
*                        (919) 651-5414                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   J E S X I T 1 7            *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $ENTRY       SYS1.HASPSRC                               *
*        04)  $FREEBUF     SYS1.HASPSRC                               *
*        05)  $GETBUF      SYS1.HASPSRC                               *
*        06)  $HASPEQU     SYS1.HASPSRC                               *
*        07)  $HASPGBL     SYS1.HASPSRC                               *
*        08)  $HCT         SYS1.HASPSRC                               *
*        09)  $JCT         SYS1.HASPSRC                               *
*        10)  $JQE         SYS1.HASPSRC                               *
*        11)  $MIT         SYS1.HASPSRC                               *
*        12)  $MODEND      SYS1.HASPSRC                               *
*        13)  $MODULE      SYS1.HASPSRC                               *
*        14)  $NHD         SYS1.HASPSRC                               *
*        15)  $PCE         SYS1.HASPSRC                               *
*        16)  $SAVE        SYS1.HASPSRC                               *
*        17)  $RETURN      SYS1.HASPSRC                               *
*        18)  IEESMCA      SYS1.AMODGEN                               *
*        19)  IFASMFR      SYS1.AMODGEN                               *
*        20)  IFGRPL       SYS1.MACLIB                                *
*        21)  SMFEWTM      SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
JESEXIT7 $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='CREATE SMF TYPE30 RECORDS FOR NJE JOBS',         X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RPL,                GENERATE MVS  RPL DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $HCT,               GENERATE HASP SVT DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $NHD,               GENERATE HASP NDH DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $PCE,               GENERATE HASP PCE DSECT             X
               SMCA                GENERATE OS SMCA DSECT
         TITLE 'CREATE SMF TYPE30 RECORDS FOR NJE JOBS'
         IFASMFR 30
         EJECT
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREA                                            *
*                                                                     *
***********************************************************************
WORKAREA DSECT
         DS    CL104               ***** RESERVED BY JES2 *****
HDRADDR  DS    F                   ADDRESS OF USER HEADER SECTION
SMFREC   DS    CL500
         SPACE 3
***********************************************************************
*                                                                     *
*        FCS USER HEADER MAPPING DSECT                                *
*                                                                     *
***********************************************************************
FCSUHDR  DSECT
FCSUHDRL DS    H                   LENGTH OF USER HEADER
FCSUHTYP DS    X                   TYPE OF HEADER
FCSUHMOD DS    X                   MODIFIER VALUE
FCSUHID  DS    CL4                 USER HEADER IDENTIFIER
FCSUHACL DS    H                   LENGTH OF ACCOUNTING FIELD
FCSUHACT DS    CL20                ACCOUNTING FIELD
         DS    CL40                RESERVED
FCSUHDRS EQU   *-FCSUHDR           LENGTH OF USER HEADER
JESEXIT7 CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
         PRINT OFF
         AIF   ('&VERSION' NE 'SP 1.3.6' AND                           X
               '&VERSION' NE 'SP 2.1.5').VEREND
         PRINT ON
***********************************************************************
*                                                                     *
*        EQUATED VARIABLES FOR SP 1.3.6 OR SP 2.1.5                   *
*                                                                     *
***********************************************************************
         SPACE 3
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         SPACE 3
.VEREND  ANOP
         PRINT ON
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EXIT7    $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLERS REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R0  - A CODE PASSED TO YOUR ROUTINE BY JES2.                 *
*              0 - INDICATES THAT THE JCT HAS BEEN READ FROM SPOOL    *
*              4 - INDICATES THAT THE JCT WILL BE WRITTEN TO SPOOL    *
*        R1  - ADDRESS OF THE BUFFER THAT CONTAINS THE JCT            *
*        R11 - ADDRESS OF THE HCT                                     *
*        R13 - ADDRESS OF THE PCE                                     *
*        R14 - RETURN ADDRESS                                         *
*        R15 - ENTRY ADDRESS                                          *
*                                                                     *
***********************************************************************
         SPACE 3
         LTR   R0,R0              TEST ENTRY REASON CODE
         BZ    RETURN0            ZERO, READ ONLY, NOT INTERESTED
         LR    R10,R1             SET JCT ADDRESS
         CLC   JCTXNODE,=X'0000'  SEE IF CONTAINS AN EXECUTION NODE
         BE    RETURN0            NO, JUST GET OUT
         CLC   JCTXNODE,$OWNNODE  SEE IF AN NJE JOB
         BE    RETURN0            NO, JUST GET OUT
***********************************************************************
*        FIND OUR SPECIAL HEADER                                      *
***********************************************************************
         LA    R6,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         USING FCSUHDR,R6          SET ADDRESSABILITY TO HEADERS
         LH    R5,0(R6)            LOAD LENGTH OF NETWORK HEADERS
         AR    R5,R6               GET END ADDRESS OF NETWORK HEADERS
         LA    R6,4(R6)            LOAD START ADDRESS OF FIRST HEADER
TSTHDR1  CR    R6,R5               SEE IF END OF HEADERS
         BNL   RETURN0             YES, GET OUT
         TM    FCSUHTYP,NTYPUSER   SEE IF USER HEADER
         BNO   TSTHDR2             NO, GO GET NEXT ONE
         CLC   FCSUHID,=CL4'FCSH'  SEE IF OUR HEADER
         BE    TSTHDR3             YES, GO CHECK IT
TSTHDR2  AH    R6,0(R6)            POINT TO NEXT HEADER
         B     TSTHDR1             LOOP
TSTHDR3  TM    FCSUHMOD,X'80'      SEE IF SMF RECORD ALREADY WRITTEN
         BO    RETURN0             YES, GET OUT
***********************************************************************
*        GET A WORK AREA FOR THE EXIT                                 *
***********************************************************************
         SPACE 3
         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R9,R1               SAVE WORK AREA ADDRESS
         USING WORKAREA,R9         SET ADDRESSABILITY TO BUFFER
         ST    R6,HDRADDR          SAVE USER HEADER ADDRESS
         LA    R2,SMFREC           POINT TO START OF TYPE 30 RECORD
         LH    R3,$BUFSIZE         LOAD LENGTH OF BUFFER
         SLR   R4,R4               SET "FROM" ADDRESS TO ZERO
         SLR   R5,R5               SET "FROM" LENGTH  TO ZERO
         MVCL  R2,R4               ZERO THE BUFFER
         LA    R2,SMFREC           POINT TO START OF TYPE 30 RECORD
         USING SMFRCD30,R2         SET ADDRESSABILITY TO SMF RECORD
***********************************************************************
*        BUILD THE SMF TYPE 30 RECORD IN THE WORK AREA                *
***********************************************************************
BASELEN  EQU   SMF30EOR+L'SMF30EOR-SMFRCD30
PSSLEN   EQU   SMF30PNM+L'SMF30PNM-SMF30PSS
IDLEN    EQU   SMF30TID+L'SMF30TID-SMF30ID
TYPE30LN EQU   BASELEN+PSSLEN+IDLEN
***********************************************************************
*        BUILD THE SMF TYPE 30 BASE SECTION                           *
***********************************************************************
         MVC   SMF30LEN,=AL2(TYPE30LN) SET BASE RECORD LENGTH
         MVI   SMF30FLG,X'02'      SET SYSTEM IDENTIFIER TO VS2
         MVI   SMF30RTY,30         SET RECORD TYPE TO TYPE 30
         TIME  BIN                 GET DATE AND TIME
         STCM  R0,15,SMF30TME      SAVE TIME IN RECORD
         STCM  R1,15,SMF30DTE      SAVE DATE IN RECORD
         MVC   SMF30SID,$SID       MOVE CPUID TO RECORD
         MVC   SMF30WID,=CL4'TSO ' SET SUBSYSTEM ID TO TSO
         CLI   JCTJOBID,C'T'       SEE IF A TSO USER
         BE    SSIDOK              YES, BRANCH
         MVC   SMF30WID,=CL4'STC ' SET SUBSYSTEM ID TO STC
         CLI   JCTJOBID,C'S'       SEE IF A STARTED TASK
         BE    SSIDOK              YES, BRANCH
         MVC   SMF30WID,=CL4'JES2' SET SUBSYSTEM ID TO JES2
SSIDOK   MVC   SMF30SOF,=A(BASELEN) SAVE OFFSET OF SUBSYSTEM SECTION
         MVC   SMF30SLN,=AL2(PSSLEN) SAVE LENGTH OF SUBSYSTEM SECTION
         MVC   SMF30SON,=H'1'      SAVE NUMBER OF IDENT SECTIONS
         MVC   SMF30IOF,=A(BASELEN+PSSLEN) SAVE OFFSET OF IDENT SECT
         MVC   SMF30ILN,=AL2(IDLEN) SAVE LENGTH OF IDENT SECTION
         MVC   SMF30ION,=H'1'      SAVE NUMBER OF IDENT SECTIONS
***********************************************************************
*        BUILD THE SMF TYPE 30 SUBSYSTEM SECTION                      *
***********************************************************************
         LA    R3,SMFREC+BASELEN   POINT TO START OF SUBSYSTEM SECTION
         USING SMF30PSS,R3         SET ADDRESSABILITY TO SUBSYS SECTION
         MVC   SMF30TYP,=H'1'      SET TO SUBTYPE 1
         MVC   SMF30RVN,=C'01'     SET TO RECORD VERSION 1
         MVC   SMF30PNM,=CL8'BOGUSNJE' SET SUBSYSTEM NAME
         DROP  R3                  DROP ADDRESSABILITY TO SUBSYS SECT
***********************************************************************
*        BUILD THE SMF TYPE 30 IDENTIFICATION SECTION                 *
***********************************************************************
         LA    R3,SMFREC+BASELEN+PSSLEN POINT TO START OF IDENT SECTION
         USING SMF30ID,R3          SET ADDRESSABILITY TO IDENT SECTION
         MVC   SMF30JBN,JCTJNAME   SET JOB NAME
         MVC   SMF30PGM,=CL8' '    SET BLANK PGM NAME
         MVC   SMF30STM,=CL8'NJEPRINT' SET DUMMY STEP NAME
         MVC   SMF30UIF,JCTUSEID   SET USER ID FIELD
         MVC   SMF30JNM,JCTJOBID   SET JES JOB NUMBER
         MVI   SMF30CLS,C' '       SET JOB CLASS TO BLANK
         CLI   JCTJOBID,C'J'       SEE IF BATCH JOB
         BNE   NOTBATCH            NO, BRANCH
         MVC   SMF30CLS,JCTJCLAS   SET JOB CLASS
NOTBATCH MVC   SMF30JPT+1(1),JCTPRIO SET JES INPUT PRIORITY
         MVC   SMF30SIT,SMF30TME   SET STEP INIT TIME TO CURR TIME
         MVC   SMF30STD,SMF30DTE   SET STEP INIT DATE TO CURR DATE
         MVC   SMF30RST,JCTRDRON   SET READER START TIME
         MVC   SMF30RSD,JCTRDTON   SET READER START DATE
         MVC   SMF30RET,JCTRDROF   SET READER END TIME
         MVC   SMF30RED,JCTRDTOF   SET READER END DATE
         OI    SMF30RED+3,X'0F'    MAKE SURE DATE HAS A SIGN
         MVC   SMF30USR,JCTPNAME   SET PROGRAMMER NAME
         MVC   SMF30GRP,=CL8' '    SET BLANK RACF GROUP ID
         MVC   SMF30RUD,=CL8' '    SET BLANK RACF USER ID
***********************************************************************
*        TRY TO FIND OUT THE RACF/ACF2 USERID                         *
***********************************************************************
***********************************************************************
*        SAVE JOBNAME AS LOGONID FOR STC OR TSU                       *
***********************************************************************
         CLI   JCTJOBID,C'J'       SEE IF A BATCH JOB
         BE    FUID01              YES, BRANCH
         MVC   SMF30RUD,JCTJNAME   NO,  MOVE JOBNAME TO LOGONID FIELD
         B     FUIDEND             GET OUT
         DROP  R6                  DROP ADDRESSABILITY TO USER HEADER
***********************************************************************
*        SEARCH THE JES2 JOB HEADER (3.1.4 OR GREATER)                *
***********************************************************************
FUID01   LA    R6,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         USING NJH2,R6             SET ADDRESSABILITY TO JES2 HEADER
         LH    R5,0(R6)            LOAD LENGTH OF NETWORK HEADERS
         AR    R5,R6               GET END ADDRESS OF NETWORK HEADERS
         LA    R6,4(R6)            LOAD START ADDRESS OF FIRST HEADER
FUID02   CR    R6,R5               SEE IF END OF HEADERS
         BNL   FUID07              YES, GET OUT
         CLI   NJH2TYPE,NTYPJES2   SEE IF JES2 SECTION
         BE    FUID03              YES, GO PROCESS IT
         AH    R6,0(R6)            POINT TO NEXT HEADER
         B     FUID02              LOOP
FUID03   CLI   NJH2USR,C' '        SEE IF LOGONID SPECIFIED
         BNH   FUID04              NO, GO CHECK ANOTHER PLACE
         MVC   SMF30RUD,NJH2USR    YES, MOVE LOGONID FROM JES2 HEADER
         B     FUIDEND             GET OUT
         DROP  R6                  DROP ADDRESSABILITY TO JES2 HEADER
***********************************************************************
*        SEARCH THE GENERAL NETWORK JOB HEADER FOR VM                 *
***********************************************************************
FUID04   LA    R6,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         USING NJHG,R6             SET ADDRESSABILITY TO GENERAL HDR
         LH    R5,0(R6)            LOAD LENGTH OF NETWORK HEADERS
         AR    R5,R6               GET END ADDRESS OF NETWORK HEADERS
         LA    R6,4(R6)            LOAD START ADDRESS OF FIRST HEADER
FUID05   CR    R6,R5               SEE IF END OF HEADERS
         BNL   FUID07              YES, GET OUT
         CLI   NJHGTYPE,NTYPGEN    SEE IF GENERAL SECTION
         BE    FUID06              YES, GO PROCESS IT
         AH    R6,0(R6)            POINT TO NEXT HEADER
         B     FUID05              LOOP
FUID06   CLI   NJHGXEQU,C' '       SEE IF VM LOGONID SPECIFIED
         BNH   FUID07              NO, GO CHECK ANOTHER PLACE
         MVC   SMF30RUD,NJHGXEQU   MOVE VM LOGONID FROM GENERAL HEADER
         B     FUIDEND             GET OUT
         DROP  R6                  DROP ADDRESSABILITY TO GENERAL HDR
***********************************************************************
*        SEARCH FOR AN ACF2 USER HEADER                               *
***********************************************************************
FUID07   LA    R6,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         USING FCSUHDR,R6          SET ADDRESSABILITY TO HEADERS
         LH    R5,0(R6)            LOAD LENGTH OF NETWORK HEADERS
         AR    R5,R6               GET END ADDRESS OF NETWORK HEADERS
         LA    R6,4(R6)            LOAD START ADDRESS OF FIRST HEADER
FUID08   CR    R6,R5               SEE IF END OF HEADERS
         BNL   FUIDEND             YES, GET OUT
         TM    FCSUHTYP,NTYPUSER   SEE IF USER HEADER
         BNO   FUID09              NO, GO GET NEXT ONE
         CLC   FCSUHID,=CL4'ACF2'  SEE IF ACF2 HEADER
         BNE   FUID09              NO, GO LOOK AT NEXT HEADER
         MVC   SMF30RUD,88(R6)     YES, MOVE LOGONID FROM ACF2 HEADER
         B     FUIDEND             GET OUT
FUID09   AH    R6,0(R6)            POINT TO NEXT HEADER
         B     FUID08              LOOP
FUIDEND  DS    0H                  END OF FIND USERID ROUTINE
         DROP  R3                  DROP ADDRESSABILITY TO ID SECTION
***********************************************************************
*        BUILD THE SMF TYPE 30 ACCOUNTING SECTION                     *
***********************************************************************
         L     R6,HDRADDR          RELOAD USER HEADER ADDRESS
         LA    R3,SMFREC+BASELEN+PSSLEN+IDLEN POINT TO START OF ACCT
         USING SMF30ACS,R3         SET ADDRESSABILITY TO ACCT SECTION
         LH    R15,FCSUHACL        LOAD LENGTH OF ACCOUNTING FIELD
         LTR   R15,R15             TEST LENGTH
         BZ    WRITESMF            ZERO, NO ACCOUNTING FIELD
         STC   R15,SMF30ACL        SAVE LENGTH OF ACCOUNTING FIELD
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVACCT          MOVE ACCT TO RECORD
***********************************************************************
*        UPDATE BASE SECTION FOR VARIABLE ACCOUNTING SECTION          *
***********************************************************************
         LH    R15,FCSUHACL        RELOAD LENGTH OF ACCOUNTING FIELD
         LA    R15,1(R15)          GET LENGTH OF ACCOUNTING SECTION
         LH    R1,SMF30LEN         LOAD LENGTH OF RECORD
         AR    R1,R15              ADD LENGTH OF ACCOUNT SECTION
         STH   R1,SMF30LEN         SAVE NEW RECORD LENGTH
         MVC   SMF30AOF,=A(BASELEN+PSSLEN+IDLEN) LOAD OFFSET OF ACCT
         STH   R15,SMF30ALN        SAVE LENGTH OF ACCT SECTION
         MVC   SMF30AON,=H'1'      SAVE NUMBER OF ACCT SECTIONS
         B     WRITESMF            GO WRITE SMF RECORD
MVACCT   MVC   SMF30ACT(0),FCSUHACT **** EXECUTE ONLY ****
***********************************************************************
*        WRITE SMF TYPE 30 RECORD                                     *
***********************************************************************
WRITESMF SMFEWTM (R2)              WRITE THE SMF RECORD
         OI    FCSUHMOD,X'80'      TURN ON SMF RECORD WRITTEN INDICATOR
         DROP  R6                  DROP ADDRESSABILITY TO USER HDR RECD
***********************************************************************
*                                                                     *
*        FREE THE WORK AREA AND RETURN WITH THE APPROPRIATE           *
*        RETURN CODE.                                                 *
*                                                                     *
***********************************************************************
         SPACE 3
EXIT     $FREEBUF (R9)             FREE THE BUFFER
         B     RETURN0             GET OUT
         DROP  R9                  DROP ADDRESSABILITY TO THE BUFFER
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*                                                                     *
***********************************************************************
RETURN0  DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                   CONSTANTS USED IN THIS EXIT                       *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         EJECT
         $MODEND
         END
