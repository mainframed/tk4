J004$OWN TITLE 'ESTABLISH JOB OWNERSHIP FROM JOBPARM STATEMENT'
***********************************************************************
*                                                                     *
* MODULE NAME - J004$OWN                                              *
*                                                                     *
* DESCRIPTIVE NAME - FUNB JOB OWNERSHIP ROUTINES                      *
*                                                                     *
* JES2 LEVEL - SP 2.2.0                                               *
*                                                                     *
* FUNCTION - THIS MODULE WILL PROCESS THE OWNERID PARAMETER OF        *
*            THE JES2 JOBPARM STATEMENT.                              *
*                                                                     *
* EXIT ENVIRONMENT                                                    *
*                                                                     *
*    JES2 MAIN TASK                                                   *
*                                                                     *
* MODULE ATTRIBUTES                                                   *
*                                                                     *
*    RENTRANT, REUSABLE, REFRESHABLE                                  *
*                                                                     *
* ENTRY POINTS = E004$OWN   - SET USERID FROM OWNERID= OF /*JOBPARM   *
*                                                                     *
*                NOTE: THE FIELD JCTUSEID IS SET IN THE ACCOUNT CODE  *
*                      VALIDATION ROUTINES.  ALTHOUGH THIS IS AN SMF  *
*                      FIELD, IT IS CONSIDERED THE DEFAULT OWNERID    *
*                      FOR THE JOB.                                   *
*                                                                     *
***********************************************************************
         SPACE
         COPY  $HASPGBL
J004$OWN $MODULE RESPA,                                                X
               $HASPEQU,                                               X
               $PCE,               CONTAINS USING PCE,R13              X
               $DCT,                                                   X
               $PDDB,                                                  X
               $PPPWORK,                                               X
               $BUFFER,                                                X
               $JQE,                                                   X
               $JCT,                                                   X
               $CAT,                                                   X
               $JOE,                                                   X
               $NIT,                                                   X
               $MIT,                                                   X
               $HCT,                                                   X
               $PADDR,                                                 X
               $SCANTAB,                                               X
               $SCANWA,                                                X
               $RDRWORK,                                               X
               $CMB,                                                   X
               $COMWORK,                                               X
               RPL
         USING JCT,R10
#ON      EQU   X'FF'
#OFF     EQU   X'00'
         LTORG
         TITLE 'EXIT 4: PROCESS OWNERID= OF /*JOBPARM STATEMENT'
E004$OWN $ENTRY BASE=R12,CSECT=YES
         $SAVE
*======================================================================
*                                                                     *
* REGISTER USAGE IN E004$OWN                                          *
*                                                                     *
*  R0  - A CODE INDICATING WHETHER A JES2 OF JCL STATEMENT WAS READ   *
*         0 - INDICATES A JES2 CONTROL STATEMENT                      *
*         4 - INDICATES A JCL STATEMENT                               *
*                                                                     *
*  R1  - A(3 WORD PARAMETER LIST)                                     *
*        +0 POINTS TO STATEMENT IMAGE BUFFER                          *
*        +4 POINTS TO EXIT FLAG BYTE, RXITFLAG IN THE PCE.            *
*        +8 POINTS TO JCTXWRK IN THE JCT                              *
*                                                                     *
*  R2  -                                                              *
*  R3  -                                                              *
*  R4  -                                                              *
*  R5  -                                                              *
*  R7  -                                                              *
*  R9  -                                                              *
*  R10 - JCT                                                          *
*  R11 - HCT                                                          *
*  R12 - BASE                                                         *
*  R13 - PCE                                                          *
*  R14 - RETURN                                                       *
*  R15 - ENTRY POINT; BALR; RETURN CODE                               *
*                                                                     *
* RETURN CODES                                                        *
*                                                                     *
*   0  CALL NEXT ROUTINE ASSOCIATED WITH THIS EXIT; PERFORM STANDARD  *
*      HASPRDR PROCESSING.                                            *
*                                                                     *
*   4  IGNORE ANY FURTHER ROUTINES ASSOCIATED WITH THIS EXIT;         *
*      PERFORM STANDARD HASPRDR PROCESSING.                           *
*                                                                     *
*   8  FOR JES2 STATEMENTS, COMMENT THIS STATEMENT, NO PROCESSING     *
*      FOR JCL STATEMENTS, PERFORM STANDARD HASPRDR PROCESSING        *
*                                                                     *
*  12  CANCEL THE JOB DUE TO AN ILLEGAL CONTROL STATEMENT.  OUTPUT    *
*      WILL BE PRODUCED.                                              *
*                                                                     *
*  16  PURGE THE JOB DUE TO AN ILLEGAL CONTROL STATEMENT.  OUTPUT     *
*      WILL NOT BE PRODUCED.                                          *
*                                                                     *
*=====================================================================*
*                                                                     *
* SETUP ADDRESSABILITIES, PERFORM INITIALIZATION                      *
*                                                                     *
*======================================================================
         SPACE 1
         LR    R12,R15             LOAD OUR BASE
         SR    R15,R15             CLEAR RETURN CODE
         SPACE
         LTR   R0,R0               IF THIS IS A JCL STATEMENT,
         BNZ   FC4RETB               RETURN RC=0.
         SPACE 1
RJBPCARD LTR   R10,R10             TEST FOR JOB
         BZ    FC4RETB             IGNORE JOBPARM CARD IF NOT IN JOB
RJBNODE  CLC   JCTXEQND,$OWNNODE   TEST EXECUTION NODE
         BNE   FC4RETB             IGNORE IF ROUTED TO DIFF NODE
         L     R2,0(R1)            PUT A(STATEMENT IMAGE BUFFER) IN R2
         CLC   0(9,R2),=C'/*JOBPARM'  IS IT A JOBPARM ?
         BNE   FC4RETB             IF NOT, LET JES PROCEED
         USING FCSXWRK,R5          ESTABLISH ADDRESSABILITY
         LA    R5,JCTWORK          PUT A(JCTWORK) IN R5 TO LAY
*                                  FCSXWRK DSECT OVER
         XC    FCSXSAVE(LEXITWRK),FCSXSAVE CLEAR ADDRESS FIELDS
         ST    R2,BUFFAD           SAVE A(STATEMENT IMAGE BUFFER)
         LA    R2,9(R2)            PUSH PAST /*JOBPARM
         CLI   0(R2),C' '           IS THERE A BLANK IN COLUMN 10?
         BE    CONT
         LA    R15,4               COL. 10 NOT BLANK; LET JES PROCESS
*                                         AND CANCEL BECAUSE OF ILLEGAL
*                                         JOBPARM
         B     FC4RET               ADIOS KEMO SABE
CONT     EQU   *
         LA    R2,1(R2)            ADVANCE TO COLUMN 11
         LA    R7,60(R2)           PUT END ADDRESS (COL 71) IN R7
         ST    R2,STMNTSAV         SAVE A(BEGIN OF CARD IN BUFFER)
         ST    R2,PARMAD           SAVE A(BEGIN OF CARD IN BUFFER)
         ST    R7,ENDSTSAV         SAVE A(END OF CARD IN BUFFER)
*=====================================================================*
*                                                                     *
* PROCESS MIX OF FUNB PARAMETERS AND STANDARD JES PARAMETERS          *
*    MOVE FUNB PARAMETERS TO END OF JOBPARM IN JCTXWRK                *
*    SET RXCCRDSW IN RXITFLAG SO JES WILL LOOK IN JCTXWRK FOR JOBPARM *
*    GIVE JES A RETURN CODE OF ZERO                                   *
*                                                                     *
*=====================================================================*
         MVI   JCTXWRK,C' '             BLANK JOBPARM
         MVC   JCTXWRK+1(70),JCTXWRK      IN JCTXWRK
         LA    R4,JCTXWRK       PUT ADDRESS OF JCTXRK IN R4
         LA    R4,1(R4)    BUMP OVER 1: LEAVE BLANK IN FIRST POSITION
         ST    R4,XWRKCUR      SAVE BEGINNING ADDRESS OF JCTXWRK
         MVC   FCSXSTA,STMNTSAV   MOVE ADDRESS OF START FOR SCAN
         MVC   FCSXEND,ENDSTSAV   MOVE ADDRESS OF END FOR SCAN
         MVI   FCSXDLMT,X'00'        SET TO SCAN FOR NON-BLANK
         LA    R4,FCSXDLMT          SET DELIMETER TABLE
         ST    R4,FCSXDLM             ADDRESS IN PARM LIST
         LA    R1,FCSXPARM
         CALL  SCANDLMT                SCAN FOR A COMMA OR BLANK
         L     R8,FCSXFND          PUT A(DELIMETER) IN R8
         LTR   R8,R8              WAS THERE A DELIMETER?
         BZ    FC4RET0             IF NOT (??), LET JES PROCESS
         MVC   CURAD,FCSXFND      MOVE ADDRESS OF START FOR SCAN
         L     R9,CURAD         PUT ADDRESS OF BEGIN OF PARM IN R9
*----------------------------------------------------------------------
AGAIN    EQU   *
         LA    R2,FCSTAB                A(TABLE)
         L     R3,ENTRIES                GET # ENTRIES
         SR    R6,R6                     CLEAR WORK REG
         SPACE
LOCLOOP  IC    R6,0(R2)                 GET L' CHARS TO COMPARE
         EX    R6,COMPARE1                AND CHECK FOR A MATCH
         BE    FOUNDONE                 IF EQUAL, PREPARE FOR RETURN
         LA    R4,LENGENT               ELSE,
         LA    R2,0(R4,R2)                    POINT TO NEXT ENTRY
         BCT   R3,LOCLOOP                 AND TRY AGAIN.
         CLI   JESIND,X'FF'          IS THIS THE FIRST JES PARM?
         BE    NONFCS                NO. THE INDICATOR IS ALREADY SET.
         MVI   JESIND,X'FF'          YES. TURN IT ON.
         B     NONFCS                GO PROCESS
         CLI   JESIND,X'FF'          IS THIS THE FIRST JES PARM?
FOUNDONE EQU   *
         MVI   ONOFF,X'FF'      TURN ON SO WE KNOW WE ARE DOING FUNB
         MVI   FLAGS,CHKPT      TURN ON SO WE WILL REQUEST CHKPT
         CLI   FCSIND,X'FF'          IS THIS THE FIRST FUNB PARM?
         BE    NONFCS                NO. THE INDICATOR IS ALREADY SET.
         MVI   FCSIND,X'FF'          YES. TURN IT ON.
NONFCS   EQU   *
         MVC   FCSXSTA,CURAD      MOVE ADDRESS OF START FOR SCAN
         MVC   FCSXEND,ENDSTSAV   MOVE ADDRESS OF END FOR SCAN
         MVI   FCSXDLMT,X'02'        SET TO SCAN FOR
         MVI   FCSXDLMT+1,C','         COMMA  OR
         MVI   FCSXDLMT+2,C' '         BLANK
         LA    R4,FCSXDLMT          SET DELIMETER TABLE
         ST    R4,FCSXDLM             ADDRESS IN PARM LIST
         LA    R1,FCSXPARM
         CALL  SCANDLMT                SCAN FOR A COMMA OR BLANK
         L     R8,FCSXFND          PUT A(DELIMETER) IN R8
         LTR   R8,R8              WAS THERE A DELIMETER?
         BNZ   CHAR                FOUND SOMETHING - CONTINUE PROCESS
*                            OTHERWISE, MUST BE END OF PARMS (COL. 71)
         MVI   LASTPARM,X'FF'     TURN INDICATOR ON FOR LAST PARAM
         B     COMMA                  GO ON
CHAR     EQU   *
         CLI   0(R8),C' '           IS IT A BLANK?
         BNE   COMMA                 NO. GO ON.
         MVI   LASTPARM,X'FF'     TURN INDICATOR ON FOR LAST PARAM
COMMA    EQU   *
         CLI   ONOFF,X'FF'        IS INDICATOR ON FOR FUNB PROCESSING?
         BNE   JESSIE             NO. DO JES PARAMETER PROCESSING.
         MVI   ONOFF,X'00'        TURN IT OFF FOR NEXT TIME
         B     JCTSTUFF          GO DO FUNB THINGS IN JCT .
JESSIE   EQU   *
         L     R6,FCSXFND         PUT ADDRESS OF END OF PARM IN R6
         S     R6,CURAD         SUBTRACT BEGINNING ADDRESS OF PARM
         L     R7,PARMAD    ADDRESS OF BEGIN OF PARMS IN BUFFER IN R7
         L     R8,CURAD    ADDRESS OF CURRENT KEYWORD AND VALUE IN R8
         EX    R6,PARMOVE              SHIFT PARM OVER
         AR    R7,R6           ADD THE LENGTH TO PARMAD
         LA    R7,1(R7)          INCREMENT BY 1
         ST    R7,PARMAD
LAST     EQU   *
         CLI   LASTPARM,X'FF'     IS INDICATOR ON?
         BE    FINISHED             GOOD-BYE FOREVER
         L     R9,FCSXFND        PUT NEW ADDRESS IN R9 FOR COMPARE
         LA    R9,1(R9)          PUSH PAST COMMA TO NEXT KEYWORD
         ST    R9,CURAD           PUT NEW ADDRESS IN CURAD
         B     AGAIN             OTHERWISE, CONTINUE.
JCTSTUFF EQU   *
         L     R6,FCSXFND         PUT ADDRESS OF END OF PARM IN R6
         S     R6,CURAD         SUBTRACT BEGINNING ADDRESS OF PARM
         L     R7,XWRKCUR     PUT THE DESTINATION ADDRESS IN R7
         L     R8,CURAD    ADDRESS OF CURRENT KEYWORD AND VALUE IN R8
         EX    R6,PARMOVE     MOVE FUNB PARM(S) TO JCTXWRK
         AR    R7,R6          ADD LENGTH TO XWRKCUR
         LA    R7,1(R7)       ADD 1 TO POSITION PAST END FOR NEXT
         ST    R7,XWRKCUR       SAVE NEW LOCATION IN JCTXWRK
         XR    R5,R5             CLEAR REGISTER FOR INSERT
         IC    R5,0(R2)          LOAD LENGTH OF KEYWORD FROM TABLE
         LA    R5,2(R5)         ADD 2 TO POSITION PAST EQUALS
         AR    R8,R5           ADD THE LENGTH TO THE KEYWORD START
         LA    R5,JCTWORK      RELOAD ADDRESS OF DSECT
         L     R9,FCSXFND      ADDRESS OF END OF KEYWORD AND VALUE
         SR    R9,R8           SUBTRACT BEGINNING OF KEYWORD
*                                SO WE ARE LEFT WITH THE LENGTH
         XR    R7,R7             CLEAR REGISTER FOR INSERT
         IC    R7,8(R2)   LOAD LENGTH OF KEYWORD VALUE FROM TABLE
         CR    R9,R7          IS THE LENGTH VALID ?
         BH    FC4RET0          NO - LET JES FLUSH
         ICM   R9,B'1000',BLANKS   PUT A BLANK PAD BYTE IN R9
*                                       WHICH HAS THE LENGTH OF
*                                       THE ORIGINATING FIELD
         LR    R6,R10           PUT JCT ADDRESS IN R6
         XR    R5,R5             CLEAR REGISTER FOR INSERT
         ICM   R5,B'0111',9(R2)    ADD OFFSET FOR FIELD
         AR    R6,R5           ADD THE LENGTH TO THE JCT
         MVCL  R6,R8             STICK IT IN THE JCT
         LA    R5,JCTWORK      RELOAD ADDRESS OF DSECT
         B     LAST               IS THE INDICATOR ON FOR LAST PARM?
FINISHED EQU   *
         CLI   JESIND,X'FF'    DID WE PROCESS JES PARMS?
         BNE   FC4RET8         NO. ALL FCS, SO COMMENT OUT.
         CLI   FCSIND,X'FF'    DID WE PROCESS FUNB AS WELL AS JES?
         BNE   MOVEIT          NO. ONLY JES, SO BLANK OUT JOBPARM
*                                    BEYOND JES PARAMETERS
MOVEIT   EQU   *
         L     R7,PARMAD     PUT A(END OF JES PARMS IN BUFFER) IN R7
         BCTR  R7,R0           SUBTRACT 1 AND CHECK FOR A COMMA
         CLI   0(R7),C','      IS THE LAST CHARACTER A COMMA
         BE    COPYBACK         YES. OVERLAY THE COMMA
         LA    R7,1(R7)         NO. ADD 1 BACK
         ST    R7,PARMAD        CHANGE PARMAD LIKEWISE.
COPYBACK EQU   *
         L     R6,BUFFAD         PUT A(STATEMENT IMAGE BUFFER) IN R6
         L     R8,ENDSTSAV      COMPUTE LENGTH OF MOVE
         S     R8,PARMAD      SUBTRACT END OF PARMS FROM END OF CARD
         BCTR  R8,R0             LESS 1 FOR EXECUTED MOVE
         EX    R8,XWRKOUT     MOVE FUNB PARMS FROM JCTXWRK TO BUFFER
         B     FC4RET0             LET JES PROCESS CONVERTED JOBPARM
FC4RET0  SR    R15,R15         CLEAR RETURN CODE
         B     FC4RET
         SPACE
FC4RET8  LA    R15,8           TELL JES TO COMMENT JOBPARM
FC4RET   TM    FLAGS+L'CHKPT,CHKPT  IS A CHECKPOINT REQUIRED?
         BNO   FC4RETB                NO, JUST RETURN
         CLI   JCTUSEID,C' '        SEE IF OWNERID HAS BEEN SET
         BNH   FC4RETB              NO, JUST RETURN
         USING JQE,R9               ELSE,
         ICM   R9,B'1111',PCEJQE      SEE IF JQE IS AVAILABLE
         BZ    FC4RETB
         ST    R15,FCSXSAVE           SAVE RETURN CODE FOR JES
         $QSUSE ,                     UPDATE
         MVC   JQEXOWNR,JCTUSEID       JQE AND
         OI    JQEXFLG3,JQEXOWNJ           FLAG
         L     R15,FCSXSAVE           RELOAD RETURN CODE
         SPACE
FC4RETB  $RETURN RC=(R15)           RETURN TO JES
         SPACE
COMPARE1 CLC   1(1,R2),0(R9)   *****   EXECUTED COMPARE *****
PARMOVE  MVC   0(1,R7),0(R8)   *****   EXECUTED MOVE   *****
XWRKOUT  MVC   0(1,R7),JCTXWRK *****   EXECUTED MOVE   *****
         SPACE
*
*    TABLE HAS LENGTH OF KEYWORD, KEYWORD, LENGTH OF KEYWORD
*           VALUE, AND FIELD IN JCT TO PUT VALUE
*
FCSTAB   EQU   *
FIRSTENT DC    AL1(6),CL7'OWNERID',AL1(8),AL3(JCTUSEID-JCT)
LENGENT  EQU   *-FIRSTENT
         DC    AL1(0),CL7'Q',AL1(8),AL3(JCTUSEID-JCT)
         DC    AL1(1),CL7'ID',AL1(3),AL3(JCTROOMN-JCT)
         DC    AL1(0),CL7'W',AL1(3),AL3(JCTROOMN-JCT)
         DC    AL1(2),CL7'FCB',AL1(4),AL3(JCTFCB-JCT)
         DC    AL1(0),CL7'O',AL1(4),AL3(JCTFCB-JCT)
         DC    AL1(2),CL7'UCS',AL1(4),AL3(JCTUCS-JCT)
         DC    AL1(0),CL7'U',AL1(4),AL3(JCTUCS-JCT)
ENTRIES  DC    A((*-FCSTAB)/LENGENT)
BLANKS   DC    XL4'40000000'
         LTORG
         SPACE
FCSXWRK  DSECT
FCSXSAVE DS   2F                    R0 & R1 SAVE AREA
FCSXPARM DS   0F                    SCANDLMT PARAMETER LIST
FCSXDLM  DS    F                      A(DELIMITER TABLE)
FCSXSTA  DS    F                      START OF FIELD
FCSXEND  DS    F                      END OF FIELD
FCSXFND  DS    F                      A(FOUND DELIMITER)
FCSXGM   DS    F                    ADDR. OF GETMAINED WORK AREA
FCSXDLMT DS    CL4                  DELIMITER WORK AREA
STMNTSAV DS    F    BEGINNING OF JOBPARM IN BUFFER (COL. 11)
ENDSTSAV DS    F    END OF JOBPARM IN BUFFER (COL. 71)
CURAD    DS    F    CURRENT POSITION IN BUFFER FOR SCANS
XWRKCUR  DS    F    CURRENT ADDRESS IN JCTXWRK FOR MOVING FUNB PARMS TO
PARMAD   DS    F    CURRENT ADDRESS IN BUFFER FOR MOVING JES PARMS TO
BUFFAD   DS    F    ADDRESS OF STATEMENT IMAGE BUFFER
LSTMTSAV EQU   *-STMNTSAV
LASTPARM DS    X           INDICATE LAST PARM PROCESSED
JESIND   DS    X           TURNED ON IF ANY JES PARMS PROCESSED
FCSIND   DS    X           TURNED ON IF ANY FUNB PARMS PROCESSED
ONOFF    DS    X           TURNED ON WHEN PROCESSING FUNB TABLE
*                              ENTRY AND TURNED OF AT END OF
*                              PROCESS.
FLAGS    DS    X
CHKPT    EQU   X'80',0     MOVE DATA FROM JCT AND CHKPT JQE.
LEXITWRK EQU   *-FCSXSAVE
         EJECT
         TITLE 'SCANDLMT - SCAN A FIELD FOR ONE OR MORE DELIMITERS'
*----------------------------------------------------------------------
*
* USE THIS ROUTINE TO FIND A DELIMITER WITHIN A FIELD.  MORE THAN ONE
* DELIMITER CAN BE SCANNED FOR.  IF YOU WANT TO SCAN A FIELD FOR THE
* FIRST NON-BLANK, SET THE NUMBER OF DELIMITERS TO ZERO.
*
* R1 - PARAMETER LIST
*
*      +0 - DELIMITER LIST.  FIRST BYTE = BINARY # DELIMITERS IN LIST
*                            FOLLOWED BY DELIMITERS.  IE., TO SCAN A
*                            A FIELD FOR (,) YOU WOULD CODE X'034D6B5D'
*      +4 - BEGINNING OF FIELD TO BE SCANNED
*      +8 - END OF FIELD TO BE SCANNED.
*     +12 - ADDRESS OF FOUND DELIMITER
*
*----------------------------------------------------------------------
         SPACE
SCANDLMT CSECT
         USING SCANDLMT,R15
         $SAVE                     SAVE CALLERS REGISTERS
         L     R2,0(R1)            POINT TO DELIMITER LIST
         L     R7,4(R1)            GET FIELD STARTING ADDRESS
         LA    R8,1                INCREMENT
         L     R9,8(R1)            GET FIELD ENDING ADDRESS
         SR    R3,R3               (CLEAN UP R3)
         SPACE
DLMTLOOP IC    R3,0(R2)            # CHARACTERS TO SCAN FOR.
         LTR   R3,R3               IF 0,
         BZ    NONBLNK               SCAN FOR FIRST NON-BLANK
         LA    R4,1(R2)            POINT TO LIST OF DELIMITERS
         SPACE
CKDLMT   CLC   0(1,R7),0(R4)       FIND A HIT?
         BE    DONE                  YES, SET RETURN POINTERS
         LA    R4,1(R4)              NO, POINT TO NEXT DELIMITER
         BCT   R3,CKDLMT               AND CONTINUE
         SPACE
         BXLE  R7,R8,DLMTLOOP      POINT TO NEXT BUFFER ADDRESS
         SPACE
         SR    R7,R7               INDICATE NO DELIMITER FOUND
         B     DONE
         SPACE
NONBLNK  CLI   0(R7),C' '
         BNE   DONE
         BXLE  R7,R8,NONBLNK
         SR    R7,R7               INDICATE NO DELIMITER FOUND
         B     DONE
         SPACE
DONE     ST    R7,12(R1)           SET ADDRESS OF DELIMITER
         $RETURN RC=0
         LTORG
         $MODEND
         END
