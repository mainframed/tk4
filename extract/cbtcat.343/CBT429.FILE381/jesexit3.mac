         TITLE 'JES2 USER NETWORK JOB HEADER CREATION ROUTINE'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.4  OR SP 1.3.6                      *
*                                                                     *
*        THIS JES2 EXIT PROGRAM WILL CREATE A USER NETWORK JOB        *
*        HEADER RECORD FOR EVERY JOB.  THIS HEADER RECORD IS          *
*        DESIGNED PRIMARILY TO CONTAIN THE JOB ACCOUNTING             *
*        INFORMATION FOR A JOB SINCE IT IS TOO LARGE TO BE            *
*        CONTAINED IN THE FOUR BYTE FIELD PROVIDED BY JES2.           *
*        ROOM WILL BE LEFT IN THE HEADER RECORD FOR FUTURE USE.       *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST COMPUTER SERVICES                      *
*                        420 BRUSHY MOUNTAIN ROAD                     *
*                        WILKESBORO, N.C. 28697                       *
*                        (919) 651-5414                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   J E S X I T 1 7            *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $ENTRY       SYS1.HASPSRC                               *
*        04)  $FREEBUF     SYS1.HASPSRC                               *
*        05)  $GETBUF      SYS1.HASPSRC                               *
*        06)  $HASPEQU     SYS1.HASPSRC                               *
*        07)  $HASPGBL     SYS1.HASPSRC                               *
*        08)  $HCT         SYS1.HASPSRC                               *
*        09)  $JCT         SYS1.HASPSRC                               *
*        10)  $JQE         SYS1.HASPSRC                               *
*        11)  $MIT         SYS1.HASPSRC                               *
*        12)  $MODEND      SYS1.HASPSRC                               *
*        13)  $MODULE      SYS1.HASPSRC                               *
*        14)  $MSG         SYS1.HASPSRC                               *
*        15)  $NHD         SYS1.HASPSRC                               *
*        16)  $PCE         SYS1.HASPSRC                               *
*        17)  $SAVE        SYS1.HASPSRC                               *
*        18)  $RETURN      SYS1.HASPSRC                               *
*        19)  $WTO         SYS1.HASPSRC                               *
*        20)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
JESEXIT3 $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 USER NETWORK JOB HEADER CREATION ROUTINE',  X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RPL,                GENERATE MVS  RPL DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $HCT,               GENERATE HASP SVT DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $NHD,               GENERATE HASP NDH DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $PCE                GENERATE HASP PCE DSECT
         TITLE 'JES2 USER NETWORK JOB HEADER CREATION ROUTINE'
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREA                                            *
*                                                                     *
***********************************************************************
WORKAREA DSECT
         DS    CL102               ***** RESERVED BY JES2 *****
TRLENGTH DS    H                   LENGTH OF TRAILER RECORDS
SOFLNGTH DS    H                   LENGTH OF SPOOL OFFLOAD FAC SECTION
SOFADDR  DS    F                   ORIGINAL ADDR OF SOF SECTION
SAVETRL  DS    0F
         SPACE 3
***********************************************************************
*                                                                     *
*        FCS USER HEADER MAPPING DSECT                                *
*                                                                     *
***********************************************************************
FCSUHDR  DSECT
FCSUHDRL DS    H                   LENGTH OF USER HEADER
FCSUHTYP DS    X                   TYPE OF HEADER
FCSUHMOD DS    X                   MODIFIER VALUE
FCSUHID  DS    CL4                 USER HEADER IDENTIFIER
FCSUHACL DS    H                   LENGTH OF ACCOUNTING FIELD
FCSUHACT DS    CL20                ACCOUNTING FIELD
         DS    CL40                RESERVED
FCSUHDRS EQU   *-FCSUHDR           LENGTH OF USER HEADER
JESEXIT3 CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
         PRINT OFF
         AIF   ('&VERSION' NE 'SP 1.3.6' AND                           X
               '&VERSION' NE 'SP 2.1.5').V134
         PRINT ON
***********************************************************************
*                                                                     *
*        EQUATED VARIABLES FOR SP 1.3.6 OR SP 2.1.5                   *
*                                                                     *
***********************************************************************
         SPACE 3
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         SPACE 3
         AGO   .VEREND
.V134    ANOP
         PRINT ON
***********************************************************************
*                                                                     *
*        EQUATED VARIABLES FOR SP 1.3.4                               *
*                                                                     *
***********************************************************************
         SPACE 3
NJTO$MOD EQU   X'80'               JES2 RECORD SUBTYPE FOR SOF SECTION
         SPACE 3
.VEREND  ANOP
         PRINT ON
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EXIT3    $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLERS REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R0  - LENGTH OF ACCOUNTING FIELD.                            *
*        R1  - THE ADDRESS OF A 3 WORD PARAMETER LIST                 *
*              WORD 1 - ADDRESS OF THE ACCOUNTING FIELD (JCTWORK)     *
*              WORD 2 - ADDRESS OF THE EXIT FLAG BYTE IN THE PCE      *
*              WORD 3 - ADDRESS OF THE JCTXWRK FIELD IN THE JCT       *
*        R10 - ADDRESS OF THE JCT                                     *
*        R11 - ADDRESS OF THE HCT                                     *
*        R13 - ADDRESS OF THE PCE                                     *
*        R14 - RETURN ADDRESS                                         *
*        R15 - ENTRY ADDRESS                                          *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*        SAVE INPUT REGISTERS
***********************************************************************
         LR    R7,R0              SAVE REG 0
         LR    R8,R1              SAVE REG 1
***********************************************************************
*        GET A WORK AREA FOR THE EXIT                                 *
***********************************************************************
         SPACE 3
         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R9,R1               SAVE WORK AREA ADDRESS
         USING WORKAREA,R9         SET ADDRESSABILITY TO BUFFER
***********************************************************************
*        SEE IF ROOM FOR USER AREA IN JCT                             *
***********************************************************************
         SPACE 3
         LA    R4,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         LH    R5,0(R4)            LOAD LENGTH OF NETWORK HEADERS
         AR    R4,R5               POINT TO START OF NETWORK TRAILERS
         AH    R5,0(R4)            ADD LEN OF TRAILERS TO LEN OF HEAD
         LA    R6,FCSUHDRS         LOAD LENGTH OF USER HEADER
         AR    R6,R5               GET NEW LEN OF HEADERS AND TRAILERS
         LA    R4,JCTNJHDR         GET LENGTH OF
         SR    R4,R10                   JCT BASE AREA
         AR    R4,R6               GET NEW LENGTH OF JCT
         CH    R4,$BUFSIZE         SEE IF EXCEEDS MAXIMUM
         BH    ERROR1              YES, ERROR
***********************************************************************
*                                                                     *
*        SEARCH FOR THE SPOOL OFFLOAD HEADER (IF ONE)                 *
*                                                                     *
*        JES2 SP 1.3.6 AND SP 2.1.5 HAVE A SPOOL OFFLOAD HEADER       *
*        SECTION WHICH MUST BE THE LAST SECTION OF THE NETWORK        *
*        HEADERS.                                                     *
*                                                                     *
***********************************************************************
FSOF01   LA    R2,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         USING NJH2,R2             SET ADDRESSABILITY TO JES2 HEADER
         XC    SOFLNGTH,SOFLNGTH   ZERO THE LENGTH OF THE SOF HEADER
         XC    SOFADDR,SOFADDR     ZERO THE ADDRESS OF THE SOF HEADER
         LH    R3,0(R2)            LOAD LENGTH OF NETWORK HEADERS
         AR    R3,R2               GET END ADDRESS OF NETWORK HEADERS
         LA    R2,4(R2)            LOAD START ADDRESS OF FIRST HEADER
FSOF02   CR    R2,R3               SEE IF END OF HEADERS
         BNL   FSOFEND             YES, GET OUT
         CLI   NJH2TYPE,NTYPJES2   SEE IF JES2 SECTION
         BNE   FSOF03              NO, GO GET NEXT HEADER
         CLI   NJH2MOD,NJTO$MOD    SEE IF SOF SUB TYPE
         BE    FSOF04              YES, BRANCH
FSOF03   AH    R2,0(R2)            POINT TO NEXT HEADER
         B     FSOF02              LOOP
FSOF04   MVC   SOFLNGTH,0(R2)      SAVE LENGTH OF SOF HEADER
         ST    R2,SOFADDR          SAVE ADDRESS OF THE SOF HEADER
FSOFEND  DS    0H
***********************************************************************
*        SAVE SOF SECTION AND NETWORK TRAILER RECORDS IN WORK AREA    *
***********************************************************************
         LA    R2,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         LH    R3,0(R2)            LOAD LENGTH OF NETWORK HEADERS
         AR    R2,R3               POINT TO START OF NETWORK TRAILERS
         LH    R3,0(R2)            LOAD LENGTH OF TRAILERS
         AH    R3,SOFLNGTH         ADD LENGTH OF SOF SECTION
         OC    SOFADDR,SOFADDR     SEE IF SOF SECTION FOUND
         BZ    NOSOF1              NO, BRANCH
         L     R2,SOFADDR          YES, USE ADDR OF SOF AS START
NOSOF1   LA    R4,SAVETRL          LOAD ADDRESS OF WORK AREA
         LR    R5,R3               SET LENGTH OF WORK AREA
         STH   R5,TRLENGTH         SAVE LENGTH
         MVCL  R4,R2               SAVE TRAILER
***********************************************************************
*        CREATE USER HEADER RECORD IN VACATED AREA                    *
***********************************************************************
         LA    R1,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         LH    R3,0(R1)            LOAD LENGTH OF NETWORK HEADERS
         AR    R1,R3               POINT PAST OLD HEADERS
         OC    SOFADDR,SOFADDR     SEE IF SOF SECTION FOUND
         BZ    NOSOF2              NO, BRANCH
         L     R1,SOFADDR          YES, USE ADDR OF SOF AS START
         USING FCSUHDR,R1          SET ADDRESSABILITY TO USER HDR RECD
NOSOF2   XC    FCSUHDR(FCSUHDRS),FCSUHDR CLEAR USER HDR RECORD
         LA    R4,FCSUHDRS         LOAD LENGTH OF USER HEADER RECORD
         STH   R4,FCSUHDRL         SAVE IN USER HEADER RECORD
         MVI   FCSUHTYP,NTYPUSER   SET TO USER HEADER TYPE
         MVI   FCSUHMOD,NJHU$MOD   SET MODIFIER VALUE
         MVC   FCSUHID,=CL4'FCSH'  SET USER HEADER IDENTIFIER
***********************************************************************
*        RESET LENGTH FIELD AND MOVE TRAILER RECORDS BACK             *
***********************************************************************
         LA    R2,JCTNJHDR         POINT TO START OF NETWORK HEADERS
         LH    R3,0(R2)            LOAD OLD LENGTH OF NETWORK HEADERS
         LA    R3,FCSUHDRS(R3)     ADD LENGTH OF USER HEADER TO OLD LEN
         STH   R3,0(R2)            SAVE NEW LENGTH OF NETWORK HEADERS
         AR    R2,R3               POINT PAST NETWORK HEADERS
         OC    SOFADDR,SOFADDR     SEE IF SOF SECTION FOUND
         BZ    NOSOF3              NO, BRANCH
         L     R2,SOFADDR          YES, USE ADDR OF SOF AS START
         LA    R2,FCSUHDRS(R2)     ADD LENGTH OF USER HEADER TO START
NOSOF3   LH    R3,TRLENGTH         SET LENGTH OF NETWORK TRAILERS
         LA    R4,SAVETRL          LOAD ADDRESS OF WORK AREA
         LR    R5,R3               SET LENGTH OF WORK AREA
         MVCL  R2,R4               RESTORE TRAILER
***********************************************************************
*        MOVE FIRST JOB ACCOUNTING FIELD TO USER HEADER RECORD        *
***********************************************************************
SETACCT  LTR   R7,R7               TEST LENGTH OF ACCOUNTING FIELD
         BZ    EXIT                ZERO, LEAVE IT ALONE
         L     R2,0(R8)            LOAD ADDRESS OF ACCOUNTING AREA
         LR    R0,R2               SAVE START OF FIELD ADDRESS
         SLR   R3,R3               SET 1ST ACCOUNTING FIELD LENGTH TO 0
         CLI   0(R2),C'('          NORMAL START OF ACCOUNTING FIELD
         BE    SETACCT1            YES, BRANCH
         CLI   0(R2),C''''         SEE IF QUOTED FIELD
         BE    SETACCT3            YES, BRANCH
         B     SETACCT2            GO PROCESS AT START OF FIELD
SETACCT1 LA    R2,1(R2)            INCREMENT PAST '('
         LR    R0,R2               SAVE START OF FIELD ADDRESS
         BCTR  R7,0                REDUCE LENGTH OF ACCT FIELD BY 1
         LTR   R7,R7               TEST LENGTH
         BZ    EXIT                ZERO, NO REAL ACCT
         CLI   0(R2),C''''         SEE IF QUOTED FIELD
         BE    SETACCT3            YES, BRANCH
SETACCT2 CLI   0(R2),C','          END OF FIELD
         BE    SETACCT6            YES, BRANCH
         CLI   0(R2),C')'          END OF FIELD
         BE    SETACCT6            YES, BRANCH
         CLI   0(R2),C' '          END OF FIELD
         BE    SETACCT6            YES, BRANCH
         LA    R3,1(R3)            ADD 1 TO LENGTH COUNTER
         LA    R2,1(R2)            INCREMENT TO NEXT POSITION OF ACCT
         BCT   R7,SETACCT2         LOOP
         B     SETACCT6            GO SAVE ACCT
SETACCT3 LA    R2,1(R2)            INCREMENT PAST QUOTE
         LR    R0,R2               SAVE START OF FIELD ADDRESS
         BCTR  R7,0                REDUCE LENGTH OF ACCT FIELD BY 1
         LTR   R7,R7               TEST LENGTH
         BZ    EXIT                ZERO, NO REAL PARM
SETACCT4 CLC   0(2,R2),=C''''''    DOUBLE QUOTE?
         BE    SETACCT5            YES, BRANCH
         CLI   0(R2),C''''         END OF FIELD
         BE    SETACCT6            YES, BRANCH
         LA    R3,1(R3)            ADD 1 TO LENGTH COUNTER
         LA    R2,1(R2)            INCREMENT TO NEXT POSITION OF ACCT
         BCT   R7,SETACCT4         LOOP
         B     SETACCT6            GO SAVE ACCT FIELD
SETACCT5 LA    R3,2(R3)            ADD 2 TO LENGTH COUNTER
         LA    R2,2(R2)            INCREMENT TO NEXT POSITION OF ACCT
         BCTR  R7,0                DECREMENT LOOP COUNTER 1 EXTRA TIME
         BCT   R7,SETACCT4         LOOP
SETACCT6 LR    R2,R0               RESET START OF ACCT ADDRESS
         LTR   R3,R3               TEST ACCT LENGTH
         BZ    EXIT                ZERO, NO REAL ACCT
         CH    R3,=H'20'           SEE IF ACCT LENGTH GT 20
         BNH   SETACCT7            NO, BRANCH
         LH    R3,=H'20'           SET TO MAX LENGTH
SETACCT7 STH   R3,FCSUHACL         SAVE LENGTH OF PARM
         BCTR  R3,0                MAKE MACHINE LENGTH
         EX    R3,MVACCT           MOVE ACCOUNTING FIELD TO USER HEADER
         B     EXIT                GET OUT
MVACCT   MVC   FCSUHACT(0),0(R2)   **** EXECUTE ONLY ****
         DROP  R1                  DROP ADDRESSABILITY TO USER HDR RECD
***********************************************************************
*                                                                     *
*        FREE THE WORK AREA AND RETURN WITH THE APPROPRIATE           *
*        RETURN CODE.                                                 *
*                                                                     *
***********************************************************************
         SPACE 3
EXIT     $FREEBUF (R9)             FREE THE BUFFER
         B     RETURN0             GET OUT
         DROP  R9                  DROP ADDRESSABILITY TO THE BUFFER
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - CANCEL THE JOB BUT PRODUCT THE OUTPUT LISTING      *
*        RC = 12 - PURGE THE JOB WITH NO OUTPUT                       *
*                                                                     *
***********************************************************************
RETURN0  DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                      ERROR ROUTINES                                 *
*                                                                     *
***********************************************************************
               SPACE 3
ERROR1   LA    R1,MSG1             LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG1           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=NO,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
               SPACE 3
         B     EXIT                GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                   CONSTANTS USED IN THIS EXIT                       *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         SPACE 3
MSG1     $MSG  999,'NO ROOM IN JCT TO ADD NETWORK USER HEADER'
         EJECT
         $MODEND
         END
