         TITLE 'JES2 SUPPLY STC JOB INFORMATION ROUTINE'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM WILL SUPPLY JOB INFORMATION           *
*        FOR STARTED TASKS INCLUDING PROGRAMMER NAME AND              *
*        MESSAGE CLASS BY USING JIT (JOB INFORMATION TASK)            *
*        SERVICES TO EXTRACT THIS INFORMATION FROM A VSAM             *
*        DISTRIBUTION INFORMATION FILE.                               *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST UNION NATIONAL BANK                    *
*                        301 SOUTH TRYON STREET                       *
*                        CHARLOTTE, N.C.  28288                       *
*                        (704) 374-2427                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   J 0 0 3 S T C S            *
*                                                                     *
*        01)  POST         SYS1.MACLIB                                *
*        02)  $BUFFER      SYS1.HASPSRC                               *
*        03)  $CALL        SYS1.HASPSRC                               *
*        04)  $CAT         SYS1.HASPSRC                               *
*        05)  $DTE         SYS1.HASPSRC                               *
*        06)  $ENTRY       SYS1.HASPSRC                               *
*        07)  $ERA         SYS1.HASPSRC                               *
*        08)  $FCSDTE      SYS1.HASPSRC (USER)                        *
*        09)  $FCSJITB     SYS1.HASPSRC (USER)                        *
*        10)  $FCSUCT      SYS1.HASPSRC (USER)                        *
*        11)  $GETWORK     SYS1.HASPSRC                               *
*        12)  $HASPEQU     SYS1.HASPSRC                               *
*        13)  $HASPGBL     SYS1.HASPSRC                               *
*        14)  $HCT         SYS1.HASPSRC                               *
*        15)  $JCT         SYS1.HASPSRC                               *
*        16)  $JQE         SYS1.HASPSRC                               *
*        17)  $MIT         SYS1.HASPSRC                               *
*        18)  $MODEND      SYS1.HASPSRC                               *
*        19)  $MODULE      SYS1.HASPSRC                               *
*        20)  $MSG         SYS1.HASPSRC                               *
*        21)  $PADDR       SYS1.HASPSRC                               *
*        22)  $PCE         SYS1.HASPSRC                               *
*        23)  $SAVE        SYS1.HASPSRC                               *
*        24)  $RETURN      SYS1.HASPSRC                               *
*        25)  $WAIT        SYS1.HASPSRC                               *
*        26)  $WTO         SYS1.HASPSRC                               *
*        27)  $XECB        SYS1.HASPSRC                               *
*        28)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J003STCS $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 SUPPLY STC JOB INFORMATION ROUTINE',        X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $CAT,               GENERATE HASP CAT DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $DTE,               GENERATE HASP DTE DSECT             X
               $ERA,               GENERATE HASP ERA DSECT             X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP SVT DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $XECB,              GENERATE HASP XECB DSECT            X
               RPL                 GENERATE MVS  RPL DSECT
         TITLE 'JES2 SUPPLY STC JOB INFORMATION ROUTINE'
***********************************************************************
*                                                                     *
*        USER ADDITION TO THE DTE                                     *
*                                                                     *
***********************************************************************
DTE      DSECT
         ORG   DTEWORK
         DS    0CL2048             2048 BYTE EXTENSION
         $FCSDTE ,                 MAP THE DTE EXTENSION AREA
J003STCS CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
***********************************************************************
*                                                                     *
*        USER CONTROL TABLE (UCT)                                     *
*                                                                     *
***********************************************************************
         $FCSUCT ,                 MAP THE USER CONTROL TABLE
J003STCS CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
***********************************************************************
*                                                                     *
*        JOB INFORMATION TASK CONTROL BLOCK                           *
*                                                                     *
***********************************************************************
         $FCSJITB ,                MAP THE JITB CONTROL BLOCK
J003STCS CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E003STCS $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLERS REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R0  - LENGTH OF ACCOUNTING FIELD.                            *
*        R1  - THE ADDRESS OF A 3 WORD PARAMETER LIST                 *
*              WORD 1 - ADDRESS OF THE ACCOUNTING FIELD (JCTWORK)     *
*              WORD 2 - ADDRESS OF THE EXIT FLAG BYTE IN THE PCE      *
*              WORD 3 - ADDRESS OF THE JCTXWRK FIELD IN THE JCT       *
*        R10 - ADDRESS OF THE JCT                                     *
*        R11 - ADDRESS OF THE HCT                                     *
*        R13 - ADDRESS OF THE PCE                                     *
*        R14 - RETURN ADDRESS                                         *
*        R15 - ENTRY ADDRESS                                          *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*        SEE IF THIS IS A STARTED TASK                                *
***********************************************************************
         TM    JCTJOBFL,JCTSTCJB   SEE IF STC
         BNO   RETURN0             NO, GET OUT
         SPACE 3
***********************************************************************
*        SUPPLY DEFAULT INFORMATION FOR STARTED TASKS                 *
***********************************************************************
         MVC   JCTPNAME,=CL20'DELIVER TO SSD'
         MVC   JCTROOMN,=CL4'SSD'
         SPACE 3
***********************************************************************
*        SEE IF JIT ENTRY FOR THIS STC                                *
***********************************************************************
***********************************************************************
*        GET A JITB FOR THE DEVICE IF NOT ALREADY ONE                 *
***********************************************************************
GETJIT   ICM   R2,B'1111',PCEUSER0 LOAD THE ADDRESS OF THE JITB
         BNZ   GETJIT2             GOOD, BRANCH
         USING JITB,R2             SET ADDRESSABILITY TO JITB
GETJIT1  $GETWORK WORDS=128,USE=JITB,WAIT=YES GET A 512 BYTE WORK AREA
         ST    R1,PCEUSER0         SAVE THE ADDRESS
         LR    R2,R1               MOVE THE JITB ADDRESS TO REG 2
         MVC   JITBID,=CL4'JITB'   SET IDENTIFIER
GETJIT2  CLC   JITBID,=CL4'JITB'   SEE IF REALLY A JITB
         BE    GETJIT3             YES, GO CALL JIT TASK
         LA    R1,MSG1             LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG1           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=YES,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
         B     GETJIT1             GO GET A JITB
*        B     RETURN0             GET OUT
***********************************************************************
*                                                                     *
*        SET THE JITB KEY                                             *
*                                                                     *
*        STC  - THE STARTED TASK NAME WILL BE THE KEY WITH            *
*               A BLANK GROUP NAME.                                   *
*                                                                     *
***********************************************************************
GETJIT3  MVC   JITBJOBN,JCTJNAME   SET KEY TO JOBNAME
         MVC   JITBGRP,=CL8' '     BLANK THE GROUP NAME
         NI    JITBSTAT,255-JITBOK TURN OFF OK INDICATOR
***********************************************************************
*        CALL JITB COMMUNICATION TASK                                 *
***********************************************************************
         $CALL CALLJIT             CALL JOB INFORMATION TASK
         TM    JITBSTAT,JITBOK     DO WE HAVE A GOOD JITB
         BNO   RETURN0             NO, GET OUT
         CLI   JITBCLAS,C'A'       SEE IF WE HAVE A GOOD SYSOUT CLASS
         BL    RETURN0             NO, GET OUT
         MVC   JCTPNAME,JITBPGMR   SAVE PGMR NAME FROM JIT RECORD
         MVC   JCTMCLAS,JITBCLAS   SAVE DEFAULT SYSOUT CLASS FROM JIT
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - CANCEL THE JOB BUT PRODUCT THE OUTPUT LISTING      *
*        RC = 12 - PURGE THE JOB WITH NO OUTPUT                       *
*                                                                     *
***********************************************************************
RETURN0  DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*        CALL THE JOB INFORMATION TASK                                *
*                                                                     *
*        ON INPUT:                                                    *
*                                                                     *
*        R2     - JITB ADDRESS                                        *
*        R11    - HCT                                                 *
*        R13    - PCE                                                 *
*        R15    - ENTRY POINT ADDRESS                                 *
*                                                                     *
***********************************************************************
         SPACE 1
CALLJIT  $SAVE
         USING CALLJIT,R12         SET ADDRESSABILITY TO ROUTINE
         LR    R12,R15             SET BASE REGISTER
         ICM   R5,B'1111',$UCT     LOAD UCT ADDRESS
         BZ    CALLJITB            NONE, BRANCH
         USING UCT,R5              SET ADDRESSABILITY TO UCT
         ICM   R4,B'1111',UCTJITDT LOAD JIT DTE ADDRESS
         BZ    CALLJITB            NONE, BRANCH
         USING DTE,R4              SET ADDRESSABILITY TO DTE
         MVI   JITBFLG,JITBREAD    TURN ON READ OPERATION REQUEST
         XC    JITBXECB(L'XECBECB),JITBXECB CLEAR THE XECB
         L     R1,DTEFQUE          LOAD THE WORK QUEUE ADDRESS
CALLJITA ST    R1,JITBCH           PUSH HEAD QUEUE DOWN
         CS    R1,R2,DTEFQUE       ADD TO WORK QUEUE
         BNE   CALLJITA            CHANGED, TRY AGAIN
         POST  DTEWECB             POST SUBTASK
         $WAIT OPER,XECB=JITBXECB,INHIBIT=YES
         DROP  R4                  DROP ADDRESSABILITY TO DTE
         DROP  R5                  DROP ADDRESSABILITY TO UCT
         SPACE 1
CALLJITB $RETURN ,                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                   CONSTANTS USED IN THIS EXIT                       *
*                                                                     *
***********************************************************************
MSG1     $MSG  999,'EXIT ROUTINE J003STCS ENCOUNTERED AN INVALID JITB'
         SPACE 3
         LTORG
         EJECT
         $MODEND
         END
