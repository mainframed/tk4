         TITLE 'JES2 BSC RJE SIGNON/SIGNOFF EXIT'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 1.3.4  OR SP 1.3.6                      *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED EXAMINE ALL SIGNON        *
*        CARDS AND ISSUE A CALL TO ACF2 TO VALIDATE THE PASSWORD      *
*        ON THE SIGNON CARD.  IF THE PASSWORD DOES NOT MATCH,         *
*        THE SIGNON ATTEMPT IS TERMINATED.  IF THE PASSWORD           *
*        MATCHES, THE PASSWORD FIELD IN THE SIGNON CARD WILL BE       *
*        BLANKED AND NORMAL SIGNON PROCESSING ALLOWED TO CONTINUE.    *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST COMPUTER SERVICES                      *
*                        420 BRUSHY MOUNTAIN ROAD                     *
*                        WILKESBORO, N.C. 28697                       *
*                        (919) 651-5414                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*            M A C R O S   U S E D   I N   J E S X I T 1 7            *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $DCT         SYS1.HASPSRC                               *
*        04)  $ENTRY       SYS1.HASPSRC                               *
*        05)  $HASPEQU     SYS1.HASPSRC                               *
*        06)  $HASPGBL     SYS1.HASPSRC                               *
*        07)  $HCT         SYS1.HASPSRC                               *
*        08)  $JCT         SYS1.HASPSRC                               *
*        09)  $JQE         SYS1.HASPSRC                               *
*        10)  $MIT         SYS1.HASPSRC                               *
*        11)  $MSG         SYS1.HASPSRC                               *
*        12)  $MODEND      SYS1.HASPSRC                               *
*        13)  $MODULE      SYS1.HASPSRC                               *
*        14)  $PCE         SYS1.HASPSRC                               *
*        15)  $SAVE        SYS1.HASPSRC                               *
*        16)  $RETURN      SYS1.HASPSRC                               *
*        17)  $WTO         SYS1.HASPSRC                               *
*        18)  ACCVT        SYSP.ACFMAC                                *
*        19)  ACFINCVT     SYSP.ACFMAC                                *
*        20)  ACFSVC       SYSP.ACFMAC                                *
*        21)  FREEMAIN     SYS1.MACLIB                                *
*        22)  GETMAIN      SYS1.MACLIB                                *
*        23)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
JESXIT17 $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 BSC RJE SIGNON/SIGNOFF EXIT',               X
               $HASPEQU,           GENERATE HASP EQUATES               X
               RPL,                GENERATE MVS  RPL DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $HCT,               GENERATE HASP SVT DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $CAT,               GENERATE HASP CAT DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $PCE                GENERATE HASP PCE DSECT
         TITLE 'JES2 BSC RJE SIGNON/SIGNOFF EXIT'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
EXIT17   $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLERS REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R0  - A CODE INDICATING THE ENTRY REASON                     *
*              0 - INDICATES SIGN-ON BEFORE PARM PROCESSING           *
*              4 - INDICATES SIGN-ON AFTER PARM PROCESSING            *
*              8 - INDICATES SIGN-OFF PROCESSING                      *
*        R1  - THE ADDRESS OF A 5 WORD PARAMETER LIST                 *
*              WORD 1 - ADDRESS OF RAT (R0=0) OR                      *
*                     - ADDRESS OF RAT ENTRY (R0=4 OR 8)              *
*              WORD 2 - ADDRESS OF THE LINE DCT                       *
*              WORD 3 - ZERO                                          *
*              WORD 4 - ADDRESS OF CARD IMAGE (R0=0)                  *
*              WORD 5 - LENGTH OF CARD IMAGE  (R0=0)  ALWAYS 80       *
*        R11 - ADDRESS OF THE HCT                                     *
*        R13 - ADDRESS OF LINE MANAGER OR REMOTE READER PCE           *
*        R14 - RETURN ADDRESS                                         *
*        R15 - ENTRY ADDRESS                                          *
*                                                                     *
***********************************************************************
         CH    R0,=H'0'            SEE IF SIGNON BEFORE PARM PROCESS
         BNE   RETURN0             NO, GET OUT
         SPACE 3
         L     R2,12(R1)           LOAD ADDRESS OF CARD IMAGE
         SPACE 3
***********************************************************************
*                                                                     *
*        GET A WORK AREA FOR THE EXIT                                 *
*                                                                     *
***********************************************************************
         SPACE 3
         LA    R0,WORKLEN          LOAD SIZE OF WORK AREA
         GETMAIN R,LV=(0)          GET A WORK AREA
         LR    R3,R1               SAVE BUFFER ADDRESS
         USING WORKAREA,R3         SET ADDRESSABILITY TO BUFFER
         EJECT
***********************************************************************
*                                                                     *
*        BUILD ACF2 PARAMETER LIST                                    *
*                                                                     *
*        NOTE:                                                        *
*                                                                     *
*        THE LOGONID FIELD WILL BE THE REMOTE NAME ON THE             *
*        SIGNON CARD.                                                 *
*        THE PASSWORD WILL BE THE LINE PASSWORD STARTING IN           *
*        COLUMN 25 OF THE SIGNON CARD.                                *
*        THE SOURCE FIELD WILL BE THE EXIT NAME.  THE PSWD-VIO        *
*        COUNT WILL BE INCREMENTED FOR INVALID PASSWORDS WHICH        *
*        COULD RESULT IN A LOGONID BEING SUSPENDED.                   *
*                                                                     *
***********************************************************************
         MVC   ACFRET,=F'16'       SET RETURN CODE TO 16
         XC    ACVALD(ACVLEN),ACVALD CLEAR PARM LIST
         USING ACCVT,R4            SET ADDRESSABILITY TO ACF CVT
         ACFINCVT R4,NONE=ERROR1   GET THE ACF2 CVT ADDRESS
         MVI   ACVFCN,X'01'        SET FUNCTION ID
         MVI   ACVSFCN,ACVSVALD    SET SUB FUNCTION CODE
         MVI   ACVCNTL,ACVCIPSD    COUNT VIOS
         LA    R1,ACFMSG           LOAD ADDRESS OF ACF2 MSG AREA
         ST    R1,ACVMSG           SAVE IN PARM LIST
         MVC   ACVLID,15(R2)       SET LID EQUAL TO THE REMOTE ID
         MVC   ACVPSWD,24(R2)      MOVE SIGNON PSWD1 TO PARM LIST
         MVC   24(8,R2),=CL8' '    BLANK THE PASSWORD IN THE RECORD
         MVC   ACVSRCE,=CL8'JESXIT17'  SET SOURCE FIELD TO EXIT NAME
         MVC   ACVJOBV,=CL8'JES2'  SET JOBNAME TO JES2
         MVC   ACVSLID,=CL8' '     BLANK SUBMITTERS LID ????
         MVC   ACVAPROG,=CL8' '    CLEAR PROGRAM NAME
         LA    R1,LIDAREA          LOAD ADDRESS OF 512 BYTE LID AREA
         ST    R1,ACVRECB          SAVE IN PARM LIST
         MVC   ACVRECL,=F'512'     SET LENGTH OF AREA IN PARM LIST
         CLI   ACVPSWD,C' '        SEE IF A PASSWORD WAS SUPPLIED
         BNE   ACFCALL             NO, BRANCH
         OI    ACVCNTL,ACVCNPSD    TURN ON NO PASSWORD SUPPLIED IND
ACFCALL  ACFSVC ACVALD,TYPE=A,CVT=HAVE,NONE=ERROR2 CALL ACF/2
         ST    R15,ACFRET          SAVE RETURN CODE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERROR3              NOT ZERO, BAD, ERROR
***********************************************************************
*                                                                     *
*        FREE THE WORK AREA AND RETURN WITH THE APPROPRIATE           *
*        RETURN CODE.                                                 *
*                                                                     *
***********************************************************************
         SPACE 3
EXIT     L     R4,ACFRET           SAVE THE ACF2 RETURN CODE
         LA    R0,WORKLEN          LOAD LENGTH OF WORK AREA
         LR    R1,R3               SET WORK AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)   FREE THE BUFFER
         LTR   R4,R4               TEST THE RETURN CODE
         BZ    RETURN0             ZERO, GOOD, CONTINUE
         B     RETURN8             NOT ZERO, BAD, TERMINATE SIGN-ON
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE NORMAL SIGN-ON PROCESSING                *
*        RC = 12 - BYPASS SYNTAX BUT NOT PASSWORD PROCESSING          *
*        RC = 16 - BYPASS BOTH SYNTAX AND PASSWORD PROCESSING         *
*                                                                     *
***********************************************************************
RETURN0  DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
RETURN8  DS    0H
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                      ERROR ROUTINES                                 *
*                                                                     *
***********************************************************************
               SPACE 3
ERROR1   LA    R1,MSG1             LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG1           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=NO,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
               SPACE 3
         B     EXIT                GET OUT
ERROR2   LA    R1,MSG2             LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG2           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=NO,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
         B     EXIT                GET OUT
ERROR3   LA    R1,MSG3             LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG3           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=NO,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
         MVC   $WTOWRK(L'MSG4),MSG4 INITIALIZE MSG4 WORK AREA
         MVC   $WTOWRK+2(124),ACFMSG+4 SET ACF2 MESSAGE
         LA    R1,$WTOWRK          LOAD ADDRESS OF MESSAGE
         LA    R0,L'MSG4           LOAD LENGTH OF MESSAGE
         $WTO  (R1),(R0),JOB=NO,CMB=NO,WAIT=NO,ROUTE=$MAIN,UCM=NO
         B     EXIT                GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                   CONSTANTS USED IN THIS EXIT                       *
*                                                                     *
***********************************************************************
         SPACE 3
         LTORG
         SPACE 3
MSG1     $MSG  910,'REMOTE SIGNON DENIED - UNABLE TO FIND ACF2 CVT'
MSG2     $MSG  911,'REMOTE SIGNON DENIED - ACF2 IS NOT ACTIVE'
MSG3     $MSG  912,'REMOTE SIGNON DENIED - ACCESS DENIED BY ACF2'
MSG4     $MSG  913,'123456789 123456789 123456789 123456789 123456789 1X
               23456789 123456789 123456789 123456789 123456789 1234567X
               89 123456789 1234'
         EJECT
         $MODEND
         EJECT
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREA                                            *
*                                                                     *
***********************************************************************
WORKAREA DSECT
ACFRET   DS    F                   RETURN CODE FROM ACF2
ACFMSG   DS    CL128               ACF/2 MESSAGE AREA
LIDAREA  DS    CL512               ACF/2 LID AREA
         ACVALD DSECT=NO           ACF2 WORK AREA
$WTOWRK  DS    CL130               $WTO WORK AREA
WORKLEN  EQU   *-WORKAREA          LENGTH OF WORK AREA
         EJECT
         ACCVT
         END
