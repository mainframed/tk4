         TITLE 'JES2 $UL COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $UL COMMAND   *
*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *
*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $UL        *
*        COMMAND WHEN ENCOUNTERED.                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*        THE $UL COMMAND HAS THE FOLLOWING SYNTAX:                    *
*                                                                     *
*        $UL                                                          *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *
*                                                                     *
*        1)  THE HASP908 MESSAGES ARE MADE UPON COMPLETION OF         *
*            COMMAND                                                  *
*                                                                     *
*        $HASP908 JOBNAME  EXECUTING C PRIO XX SSSS                   *
*                                                                     *
*        $HASP908 JOBNAME  ON PRINTRXX PRIO XX SSSS                   *
*                                                                     *
*        $HASP908 JOBNAME  WAIT EXEC X PRIO XX SSSS                   *
*                                                                     *
*        2)  THE HASP900 MESSAGE WILL BE ISSUED WHEN NONE             *
*            OF THE REQUESTED JOBS CANNOT BE FOUND.                   *
*                                                                     *
*        $HASP900 JOB(S) NOT FOUND                                    *
*                                                                     *
*        3)  THE HASP999 MESSAGE WILL BE ISSUED FOR ALL               *
*            ERRORS.                                                  *
*                                                                     *
*        $HASP999 XXXXXXXXX INVALID OPERAND                           *
*                                                                     *
*        THE JOBNAME/JOB NUMBER CONTAINS INVALID SYNTAX.              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J E S $ U L              *
*                                                                     *
*        01)  $AMODE       SYS1.HASPSRC                               *
*        02)  $BUFFER      SYS1.HASPSRC                               *
*        03)  $CAT         SYS1.HASPSRC                               *
*        04)  $CMB         SYS1.HASPSRC                               *
*        05)  $COMWORK     SYS1.HASPSRC                               *
*        06)  $CWA         SYS1.HASPSRC                               *
*        07)  $CWTO        SYS1.HASPSRC                               *
*        08)  $DCT         SYS1.HASPSRC                               *
*        09)  $ENTRY       SYS1.HASPSRC                               *
*        10)  $EXCP        SYS1.HASPSRC                               *
*        11)  $GETBUF      SYS1.HASPSRC                               *
*        12)  $FREEBUF     SYS1.HASPSRC                               *
*        13)  $HASPEQU     SYS1.HASPSRC                               *
*        14)  $HASPGBL     SYS1.HASPSRC                               *
*        15)  $HCT         SYS1.HASPSRC                               *
*        16)  $IOERROR     SYS1.HASPSRC                               *
*        17)  $IOT         SYS1.HASPSRC                               *
*        18)  $JCT         SYS1.HASPSRC                               *
*        19)  $JOE         SYS1.HASPSRC                               *
*        20)  $JQE         SYS1.HASPSRC                               *
*        21)  $MIT         SYS1.HASPSRC                               *
*        22)  $MODEND      SYS1.HASPSRC                               *
*        23)  $MODULE      SYS1.HASPSRC                               *
*        24)  $PADDR       SYS1.HASPSRC                               *
*        25)  $PCE         SYS1.HASPSRC                               *
*        26)  $PDDB        SYS1.HASPSRC                               *
*        27)  $QLOC        SYS1.HASPSRC                               *
*        28)  $QSE         SYS1.HASPSRC                               *
*        29)  $RETURN      SYS1.HASPSRC                               *
*        30)  $SAVE        SYS1.HASPSRC                               *
*        31)  $TAB         SYS1.HASPSRC                               *
*        32)  $WAIT        SYS1.HASPSRC                               *
*        33)  IAZRESPA     SYS1.AMODGEN                               *
*        34)  IFGRPL       SYS1.MACLIB                                *
*        35)  MODESET      SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       2K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J005$UL  $MODULE $HASPEQU,                                             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $CAT,               GENERATE HASP CAT DSECT             X
               $CMB,               GENERATE HASP CMB DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $CWA,               GENERATE HASP CWA DSECT             X
               $DAS,               GENERATE HASP DAS DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $EXITPL,            GENERATE HASP EXITPL DSECT          X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $IOT,               GENERATE HASP IOT DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $LCK,               GENERATE HASP LCK DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $PDDB,              GENERATE HASP PDDB DSECT            X
               $QSE,               GENERATE HASP QSE DSECT             X
               $TAB,               GENERATE HASP TAB DSECT             X
               $XIT,               GENERATE HASP XIT DSECT             X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               RPL                 GENERATE MVS  IFGRPL DSECT
         EJECT
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREAS                                           *
*                                                                     *
***********************************************************************
$ULWORK  DSECT
         DS    CL(BUFSTART-BFPDSECT) **** RESERVED BY JES2 ****
         $FCSFMTP ,
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
DBL      DS    D                   DOUBLE WORD WORK AREA
LOWJOB   DS    H                   LOW RANGE JOB REQUESTED
HIGHJOB  DS    H                   HIGH RANGE JOB REQUESTED
ROUTCDE  DS    F                   DESTINATION CODE FOR SETDEST ROUTIN
RC       DS    H                   $CWTO RETURN CODE
LTEXT    DS    H                   CURRENT LENGTH OF MESSAGE AREA
MISCSW1  DS    X                   MISCELLANEOUS SWITCHES
TSO      EQU   X'80'               REQUEST IS FOR A RANGE OF TSO USERS
STC      EQU   X'40'               REQUEST IS FOR A RANGE OF STC'S
JOB      EQU   X'20'               REQUEST IS FOR A RANGE OF BATCH JOBS
FOUND    EQU   X'10'               A JOB WAS FOUND FOR PROCESSING
MISCSW2  DS    X                   MISCELLANEOUS SWITCHES
DEVNO    DS    H                   NUMBER OF ACTIVE DEVICES
SAVEBAS  DS   CL18                 MSG SAVE AREA FOR JOB NBR AND NAME
SAVEAFF  DS    16F                 REGISTER SAVE AREA FOR SETAFF RTN
SAVEPUT  DS    16F                 REGISTER SAVE AREA FOR PUTMSG RTN
RANGETBL DS    51CL6               ROOM FOR 50 RANGES + END OF LIST
SAVEBLD  DS    16F                 REGISTER SAVE FOR BLDACT  ROUTINE
DEVTBL   DS    50XL4               ACTIVE DEVICE TABLE
         SPACE 3
J005$UL  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         TITLE 'JES2 $UL COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E005$UL  $ENTRY BASE=(R12)
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        SEE IF THIS IS A $UL COMMAND                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         CLC   COMVERB(2),=C'UL'   SEE IF THIS IS THE $UL COMMAND
         BNE   EXIT0               NO. LET JES HANDLE IT
         SPACE 1
***********************************************************************
*                                                                     *
*        GET A JES2 BUFFER FOR REENTRANCY AND                         *
*        CLEAR THE COMMAND WORK AREA                                  *
*                                                                     *
***********************************************************************
         SPACE 1
ULOK     $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R8,R1               SAVE WORK AREA ADDRESS
         USING $ULWORK,R8          SET ADDRESSABILITY TO WORK AREA
         LA    R14,$ULWORK+(BUFSTART-BFPDSECT) SET 'TO' ADDRESS
         LH    R15,$BUFSIZE        SET   'TO'   LENGTH
         SLR   R0,R0               CLEAR 'FROM' ADDRESS
         SLR   R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE BUFFER
         SPACE 1
*****************************************************************
*                                                               *
*        INITIALIZE PARM LIST FOR EXIT 225 ROUTINE              *
*                                                               *
*****************************************************************
         SPACE 1
         MVI   QBITS,QCNV+QXEQ+QOUT+QPPU+QXMT+QPUR ALL QUEUES
         MVI   QBITS+1,QACT+QDEV ACTIVE AND DEVICE ACTIVITY
         MVI   QMISC,SYSALL        ALL SYSTEMS
         MVI   QFILT1,0            NO SPECIAL FILTERING
         MVI   QFILT2,0            NO SPECIAL FILTERING
         MVI   QCLASS,0            ZERO THE XEQ/CNV CLASS
         XC    OWNERID,OWNERID     NO OWNERID SELECTION
*
         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R10,R1              SAVE BUFFER ADDRESS
         MVC   LOWJOB,=H'1'        SET LOW JOB NUMBER
         MVC   HIGHJOB,=H'9999'    SET HIGH JOB NUMBER
         L     R1,0(R5)            GET ADDRESS OF FIRST OPERAND
         CLI   1(R1),C' '          IS THERE A BLANK AFTER UL
         BNE   BADOPRND            NO. TELL USER
         BXH   R5,R6,TSTUCM        CHECK FOR ANY MORE OPERANDS
         B     BADOPRND            TELL USER
         SPACE 1
*****************************************************************
*                                                               *
*        CHECK FOR AUTOMATIC REDIRECTION OF RESPONSES           *
*                                                               *
*****************************************************************
         SPACE 1
TSTUCM   TM    COMFLAG,CMBFLAGU    IS THIS A UCM
         BZ    MSGGOOD             NO, SKIP REDIRECTION
         TM    FBLFLG,FBLFLGC+FBLFLGR CONSOLE SET OR REMOTE SYSTEM
         BNZ   MSGRPT              SKIP AUTOMATIC L=CCA
         LA    R1,4                LOAD REDIRECT OFFSET FOR $UL
*                                  SAME AS FOR $DJ
         BCTR  R1,0                REDUCE BY 1
         SLL   R1,1                DOUBLE
         SLR   R2,R2               ZERO REGISTER FOR IC
         IC    R2,COMUCM           PICK UP CURRENT UCM ID
         L     R14,$COMEXTN        POINT TO CONSOLE WORK AREA
         USING CWA,R14             SET ADDRESSABILITY TO CWA
         CH    R2,CWAOCON          SEE IF EXCEEDS MAXIMUM
         BH    MSGRPT              YES, ERROR, NO AUTOMATIC REDIRECTION
         MH    R2,CWALCON          MULTIPLY BY LENGTH OF EACH ENTRY
         AR    R1,R2               COMBINE OFFSETS
         LA    R1,CWARESP-CWACONL(R1) POINT TO CORRECT CWA ENTRY
         MVC   COMUCM,CWACON(R1)   INSERT NEW CONSOLE ID
         TM    FBLFLG,FBLFLGA      HAS AREA BEEN SET
         BO    MSGRPT              YES, SKIP AUTOMATIC REDIRECTION
         MVC   COMUCMA,CWACONA(R1) SET NEW AREA
         DROP  R14                 DROP ADDRESSABILITY TO CWA
MSGRPT   BAL   R9,MSGVCCA          VERIFY CCA (NO RETURN IF BAD)
         CLI   COMUCMA,0           TEST FOR DISPLAY AREA
         BZ    MSGGOOD             IF NOT, SKIP
         MVI   COMLINET,X'80'      SET CONTROL LINE
         $CWTO L=L'CMBMSG,MSGID=900 ECHO THE COMMAND
         MVI   COMLINET,X'20'      SET DATA LINE
         SPACE 1
***********************************************************************
*                                                                     *
*        SCAN THE JOB QUEUE FOR THE JOB LIST                          *
*                                                                     *
***********************************************************************
         SPACE 1
MSGGOOD  DS    0H
         OI    MISCSW1,JOB         TURN ON JOB DEFAULT TYPE
         SPACE 1
JQESCAN  LH    R1,LOWJOB           LOAD JOB NUMBER
         $QLOC (R1)                GET JQE FOR THIS JOB NUMBER
         BZ    NEXTJQE             GET NEXT JQE IF NOT FOUND
         LR    R9,R1               SAVE JQE ADDRESS
         USING JQE,R9              SET ADDRESSABILITY TO JQE
         TM    JQEXFLG2,JQEXUHLD   SEE IF JOB IS ON USER HOLD
         BO    JQEFND              FOUND ONE. GO PROCESS
NEXTJQE  LH    R1,LOWJOB           LOAD PREVIOUS JOB NUMBER
         LA    R1,1(R1)            ADD 1 TO JOB NUMBER
         STH   R1,LOWJOB           SAVE NEW JOB NUMBER
         CH    R1,HIGHJOB          SEE IF END OF RANGE
         BNH   JQESCAN             NO, LOOP
         TM    MISCSW1,FOUND       SEE IF ANY JOBS FOUND
         BO    EXIT8               YES. LEAVE AND SMILE
         MVC   COMMAND(L'MSG2),MSG2 SET NO JOBS FOUND MESSAGE
         LA    R0,L'MSG2           SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=900    WRITE THE MSG TO THE OPERATOR
         B     EXIT8               GET OUT
JQEFND   OI    MISCSW1,FOUND       TURN ON JOB FOUND INDICATOR
         EJECT
***********************************************************************
*                                                                     *
*        CALL EXIT 255 TO FORMAT THE JOB INFORMATION                  *
*                                                                     *
***********************************************************************
         SPACE 1
         LA    R1,QBITS            POINT TO EXIT PARM LIST
EXIT255  $EXIT 255,ENVIRON=JES2,MAXRC=8 CALL FORMAT ROUTINE
         CH    R15,=H'8'           SEE IF CONSOLE BUFFER SHORTAGE
         BE    EXIT8               YES, GET OUT
         B     NEXTJQE             GO GET NEXT JOB
         EJECT
*****************************************************************
*                                                               *
*        SUBROUTINE TO VERIFY CONSOLE/AREA                      *
*                                                               *
*****************************************************************
         SPACE 1
MSGVCCA  TM    FBLFLG,FBLFLGR      SEE IF REMOTE SYSTEM UCM
         BOR   R9                  YES, UCM AND AREA ARE OK
         L     R2,$COMEXTN         POINT TO CONSOLE WORK AREA
         USING CWA,R2              SET ADDRESSABILITY TO CWA
         MVC   XASCID(1),COMUCM    SET UCM ID
         MVC   XASDID(1),COMUCMA   SET AREA ID
         CLI   XASDID,0            SEE IF AREA ID SPECIFIED
         BNZ   MSGSSAOP            YES, BRANCH
         MVI   XASDID,C'Z'         NO,  FORCE AREA Z
MSGSSAOP MVC   XAU(1),COMUCM       TELL OS SOURCE IS SAME AS OUTPUT
         MVI   XAN,X'22'           SET ID FOR VERIFIER
         MODESET EXTKEY=ZERO       GET KEY 0
         L     R15,CWA7603D        POINT TO OS VERIFICATION ROUTINE
         $AMODE 24,PUSHR=0,R=R14   GO TO AMODE 24
         BALR  R14,R15             ENTER IT
         $AMODE POPR=0,R=R14       RETURN TO ORIGINAL AMODE
         MODESET EXTKEY=HASP       RETURN TO KEY 1
         CH    R15,=H'4'           CHECK FOR SERIOUS ERROR
         BNHR  R9                  NO, RETURN TO CALLER
         SLR   R3,R3               CLEAR REGISTER FOR ICM
         ICM   R3,B'0011',COMUCM   PICK UP UCM AND AREA ID
         MVI   COMUCMA,0           FORCE NO DISPLAY AREA
         CH    R15,=H'12'          SEE IF CONSOLE DOWN
         BNE   *+16                NO, DO NOT SET LOGICAL CONSOLE
         MVC   COMFLAG(4),MOWTOL   DESTROY APPARENT SOURCE INFO
         MVC   COMOUT,MOWTOL+(COMOUT-COMFLAG) OMITTING CNTL FIELD
         $CWTO L=L'CMBMSG,MSGID=900 ECHO THE COMMAND
         MVC   COMMAND(MBVINVL),MBVINV SET ERROR MESSAGE TEXT
         STC   R3,MBVINVA          SET AREA
         SRL   R3,8                ALIGN CONSOLE ID
         CVD   R3,$DOUBLE          CONVERT TO PACKED
         MVC   DBL(4),=X'F0212020' SET EDIT MASK
         ED    DBL(4),$DOUBLE+6    EDIT CONSOLE ID TO AREA
         MVC   MBVINVC,DBL+2       MOVE CONSOLE ID TO MESSAGE
         MVC   COMMAND+MBVINVL(8),COMACEID MOVE IDENTIFIER
         $CWTO L=MBVINVL,MSGID=999 WRITE ERROR MESSAGE TO CONSOLE
         B     EXIT8               GET OUT
         DROP  R2                  DROP ADDRESSABILITY TO CWA
         EJECT
*****************************************************************
*                                                               *
*       R E D I R E C T   R O U T I N E   C O N S T A N T S     *
*                                                               *
*****************************************************************
         SPACE 1
MOWTOL   $WTO  PRI=$HI,CLASS=$ALWAYS,JOB=NO,ROUTE=X'C000',MF=LX
MBVINV   DC    C'RESPONSE LOCATION L=CCA UNAVAILABLE '
MBVINVL  EQU   *-MBVINV
MBVINVC  EQU   COMMAND+MBVINVL-16,2
MBVINVA  EQU   MBVINVC+2,1
FBLFLG   EQU   COMEWORK+2          FLAG BYTE
COMJMBR  EQU   COMJRMT             SHARED SPOOL MEMBER NUMBER
FBLFLGR  EQU   1                   UCM COMMAND FROM REMOTE SYSTEM
FBLFLGC  EQU   2                   CONSOLE HAS BEEN SPECIFIED
FBLFLGA  EQU   4                   AREA HAS BEEN SPECIFIED
         EJECT
***********************************************************************
*        CONSTANTS FOR $UL                                            *
***********************************************************************
         SPACE 3
BLANKS   DC    CL20' '             STRING OF 20 BLANKS
         SPACE 3
MSG1     DC    C'MORE THAN 50 JOBS OR RANGES SPECIFIED'
MSG2     DC    C'NO JOBS FOUND ON USER HOLD'
MSG3     DC    C' INVALID OPERAND'
MSG4     DC    C' LIST INCOMPLETE'
         SPACE 3
DEVNTBL  DS    0F                  DEVICE NAME TABLE
         DC    AL1(5),CL7'INTRDR'
         DC    AL1(5),CL7'READER'
         DC    AL1(5),CL7'PRINTR'
         DC    AL1(4),CL7'PUNCH'
         DC    AL1(1),CL7'JT'
         DC    AL1(1),CL7'JR'
         DC    AL1(1),CL7'ST'
         DC    AL1(1),CL7'SR'
         DC    AL1(2),CL7'RMT'
         DC    AL1(2),CL7'RDR'
         DC    AL1(2),CL7'PRT'
         DC    AL1(2),CL7'PUN'
         EJECT
***********************************************************************
*                                                                     *
*        INVALID $QJ OPERAND                                          *
*                                                                     *
***********************************************************************
         SPACE 1
BADOPRND L     R1,0(0,R5)          POINT TO INVALID OPERAND
         MVC   COMMAND(9),0(R1)    MOVE 9 CHARACTERS OF OPERAND TO MSG
         MVC   COMMAND+9(L'MSG3),MSG3 SET ERROR MESSAGE
         LA    R0,L'MSG3+9         SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=999    WRITE THE MSG TO THE OPERATOR
         B     EXIT8               GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
         SPACE 1
EXIT0    LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT8    $FREEBUF (R8)             FREE THE WORK AREA
         $FREEBUF (R10)            FREE THE WORK AREA
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
         LTORG
         EJECT
         $MODEND
         END
