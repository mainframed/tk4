         TITLE 'CONSOLE -- TSO ALTERNATE CONSOLE COMMAND'
***********************************************************************
*                                                                     *
*                         C O N S O L E                               *
*                                                                     *
*                       OPERATOR CONSOLE MONITOR                      *
*                                                                     *
*     THIS PROGRAM DISPLAYS ALL ACTIVE OPERATORS CONSOLES ON          *
*     A 3270 TSO TERMINAL. SINCE THIS BUFFER CAN BE 35 LINES LONG,    *
*     IT MUST BE DISPLAYED IN TWO 'PAGES'. VARIOUS CONTROL            *
*     COMMANDS ARE AVAILABLE AND ARE DESCRIBED BELOW.                 *
*                                                                     *
*     COMMAND      DESCRIPTION                                        *
*                                                                     *
*        ?         DISPLAYS HELP FOR CONSOLE                          *
*        END       END; END THE PROGRAM                               *
*        FREEZE    FREEZE DISPLAY ON THE CURRENT PAGE                 *
*        RELEASE   RELEASE DISPLAY; SHOW ALTERNATING PAGES            *
*        WAITXX    AUTOMATICALLY REFRESH THE SCREEN                   *
*                  XX TIMES, THEN RETURN TO NORMAL MODE.              *
*                  IF XX IS NOT ENTERED, 30 ITERATIONS ARE ASSUMED.   *
*                  IF XX = 0, THE COMMAND WILL REFRESH THE SCREEN     *
*                  UNTIL THE TSO USER PRESSES THE ATTENTION KEY       *
*                  TO EXIT FROM THE DISPLAY.  NOTE THAT THE ATTN      *
*                  KEY IS NOT THE PA1 KEY ON AN IBM 3278 TERMINAL.    *
*        DELAYXX   SET DELAY TIME BETWEEN REFRESHES TO XX TENTHS      *
*                  OF A SECOND.                                       *
*        RECALL    RECALL LAST ENTERED COMMAND FOR UPDATE             *
*        CONSOLE=N RESET DISPLAY TO SPECIFIED CONSOLE NUMBER          *
*        Z         HALT: END THE PROGRAM                              *
*                                                                     *
*     HITTING THE ATTENTION KEY WHILE IN TIMER MODE WILL CAUSE        *
*     THE TIMER TO BE RESET TO ZERO AND WAIT MODE TERMINATED.         *
*                                                                     *
*     ONLY TSO USERS WITH OPERATOR AUTHORITY MAY USE THIS PROGRAM.    *
*     AN AUTHORIZATION SUPERVISOR CALL IS REQUIRED AND THE SVC 34     *
*     INTERFACE IS USED TO ISSUE COMMANDS FROM TSO. TO UTILIZE THIS   *
*     FACILITY REQUIRES PROTECT KEY ZERO AND THEREFORE MUST BE        *
*     APF AUTHORIZED.  ALSO THE CONSOLE BUFFERS ARE NOW IN FETCH      *
*     PROTECTED STORAGE AND CONSOLE MUST GO INTO PROTECT KEY ZERO TO  *
*     ACCESS THEIR CONTENTS.                                          *
*                                                                     *
***********************************************************************
         SPACE 4
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
CONSOLE  CSECT
         USING CONSOLE,R15         SET TEMPORARY PGM ADDRESSABILITY
         B     SAVE+18*4           BRANCH AROUND SAVE AREAS
         DC    CL9'CONSOLE'        IDENTIFIER
         DC    CL9'&SYSDATE'       ASSEMBLY DATE
         DC    CL6'&SYSTIME'       ASSEMBLY TIME
SAVE     DC    18F'0'              SAVE AREA
         DROP  R15                 DROP TEMPORARY ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             R12 = ADDR OF ENTRY POINT
         USING CONSOLE,R12,R11,R10 ADDRESABILITY TO CSECT
         LA    R11,SAVE            R11 = ADDR OF OUR SAVE AREA
         ST    R13,SAVE+4          SAVE POINTER TO CALLERS SAVE AREA
         ST    R11,8(R13)          SAVE PTR TO OUR SAVE IN CALLER'S
         LR    R13,R11             R13 = ADDR OF OUR SAVE AREA
         LA    R11,4095(R12)       R11 WILL BE
         LA    R11,1(R11)          SECOND BASE REGISTER
         LA    R10,4095(R11)       R10 WILL BE
         LA    R10,1(R10)          THIRD BASE REGISTER
         SPACE 3
***********************************************************************
*                                                                     *
*                       PROGRAM INITIALIZATION                        *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*                       AUTHORIZE OURSELVES                           *
*                                                                     *
***********************************************************************
         LA    R0,PROGNAME         LOAD ADDRESS OF PROGRAM NAME
         SLR   R1,R1               REQUEST PROTECT KEY ZERO
         SVC   248                 GET AUTHORIZATION
         L     R2,PSATOLD          GET TCB
         USING TCB,R2              SET ADDRESSABILITY TO TCB
         L     R2,TCBJSCB          GET POINTER TO JSCB
         DROP  R2                  DROP ADDRESSABILITY TO TCB
         USING IEZJSCB,R2          SET ADDRESSABILITY TO JSCB
         OI    JSCBOPTS,JSCBAUTH   TURN ON AUTHORIZATION BIT
         DROP  R2                  DROP ADDRESSABILITY TO JSCB
         LA    R0,PROGNAME         LOAD ADDRESS OF PROGRAM NAME
         LA    R1,8                REQUEST PROTECT KEY RETURN
         SVC   248                 GET AUTHORIZATION
***********************************************************************
*                                                                     *
*  CHECK THE PSCB TO SEE IF THE USER HAS OPERATOR AUTHORITY. IF       *
*  NOT THEN WE SIMPLY RETURN TO THE TMP WITH NO PROCESSING.           *
*  THIS IS THE FIRST LEVEL OF AUTHORIZATION.                          *
*                                                                     *
***********************************************************************
         EXTRACT PSCBADDR,'S',FIELDS=(PSB) GET PSCB ADDRESS
         L     R3,PSCBADDR         GET PSCB ADDR
         USING PSCB,R3             ADDRESSABILITY TO PSCB
         TM    PSCBATR1,PSCBCTRL   OPERATOR AUTHORITY ?
         BNO   EXIT                NO, DON'T ISSUE COMMAND
         MVI   VIPFLG,X'FF'        YES, SUPER USER
***********************************************************************
*                                                                     *
*        MATCH THE JOB/TSO NAME IN THE PSCB WITH NAMES IN THE TABLE.  *
*        IF NO MATCH, JUST RETURN AS IF NOTHING HAPPENED.             *
*                                                                     *
*                         **** NOTE ****                              *
*                                                                     *
*              THIS CHECK IS CURRENTLY BEING BYPASSED                 *
*                                                                     *
***********************************************************************
         B     CONSOLE1            ***** BYPASS LOGONID CHECK *****
         LA    R8,AUTHNAME         LOAD ADDR OF AUTHORIZED NAMES TABLE
AUTHLOOP CLI   0(R8),X'FF'         END OF AUTHNAME TABLE?
         BE    EXIT                YES, GET OUT
         CLC   PSCBUSER,0(R8)      SEE IF JOB/TSO NAME IN TABLE
         BE    CONSOLE1            YES, GO DO IT
         LA    R8,8(,R8)           INCREMENT TO NEXT TABLE ENTRY
         B     AUTHLOOP            LOOP UNTIL DONE
CONSOLE1 DS    0H
         STFSMODE ON,INITIAL=YES   TURN ON VTAM FULL SCREEN MODE
***********************************************************************
*                                                                     *
*        TEST THE SIZE OF THE TERMINAL FROM WHICH THE COMMAND WAS     *
*        ISSUED.  THIS INFORMATION WILL BE SAVED TO RESET THE         *
*        TERMINAL ATTRIBUTES UPON EXIT.  THIS CODE ASSUMES THAT       *
*        THE TERMINAL IS A 3278-4 OR A 3278-5 TERMINAL WITH TWO       *
*        MODES OF OPERATION.  IF THE TERMINAL IS A CRT, ONE OF        *
*        THE AVAILABLE MODES OF OPERATION MUST BE 24 X 80.            *
*                                                                     *
***********************************************************************
         GTSIZE
         ST    R0,LPSCREEN         R0 = LINES PER SCREEN
         ST    R1,CPLINE           R1 = CHARACTERS PER LINE
         LTR   R0,R0               R0 = NUMBER OF LINES PER SCREEN
         BZ    NOTCRT              ZERO MEANS HARDCOPY
         GTTERM PRMSZE=PRMSIZE,ALTSZE=ALTSIZE
         CLC   PRMSIZE,STDSIZE     SEE IF 24 X 80 ALLOWED
         BE    SETSIZE             YES, GO SET SIZE
         CLC   ALTSIZE,STDSIZE     SEE IF 24 X 80 ALLOWED
         BE    SETSIZE             YES, GO SET SIZE
         TPUT  ERRMSG8,26          WRITE ERROR MSG
         ABEND 001,DUMP            NEITHER SIZE IS 24 X 80
SETSIZE  STSIZE LINE=24,SIZE=80    SET STD SIZE
         B     GETPWD              GO GET PASSWORD
NOTCRT   STSIZE SIZE=80            HARDCOPY - SET LSIZE=80
         MVI   CRTFLAG,X'00'       WE ARE USING A HARDCOPY
         MVC   CMDCTRL(6),BLANKS   ZAP OUT 3277 CNTRL CHARS
         MVC   PHEADING(6),BLANKS  ZAP OUT 3277 CNTRL CHARS
         MVC   HELP(14),BLANKS     ZAP OUT 3277 CNTRL CHARS
         EJECT
***********************************************************************
*                                                                     *
*  PROMPT THE USER FOR AN ADMISSION PASSWORD. THIS IS THE SECOND      *
*  LEVEL OF AUTHORIZATION REQUIRED.                                   *
*                                                                     *
*                         **** NOTE ****                              *
*                                                                     *
*              THIS CHECK IS CURRENTLY BEING BYPASSED                 *
*                                                                     *
***********************************************************************
GETPWD   DS    0H
         B     PSWDOK              BYPASS PASSWORD ROUTINE
         LA    R2,PWREPLY          LOAD ADDRESS OF REPLY AREA
         TPUT  CLEAR,CLEARGTH,FULLSCR  CLEAR SCREEN
         TPUT  ENTER,ENTERLN,FULLSCR   PROMPT FOR PASSWORD
         TCLEARQ INPUT             CLEAR INPUT BUFFER
         TGET  (2),8               GET THE OPERATOR'S REPLY
         TPUT  CLEAR,CLEARGTH,FULLSCR  CLEAR SCREEN
         B     COMPSWD             GO COMPARE PASSWORD
ENTER    DC    X'C11140401DE8'     WCC, SBA, SF
         DC    C'ENTER PASSWORD:'  PROMPT MESSAGE
         DC    X'1D4D13'           SF, NON-DISP, IC
ENTERLN  EQU   *-ENTER             LENGTH OF 3270 MESSAGE
COMPSWD  DS    0H
         MVC   PWDWRK,PWDENTER     MOVE LOWER CASE PASSWORD TO WORK
         OC    PWDWRK,BLANKS       MAKE UPPER CASE
         OC    PWREPLY,BLANKS      MAKE UPPER CASE
         CLC   PWREPLY,PWDWRK      SEE IF PASSWORD MATCHES
         BNE   EXIT                NO, EXIT
***********************************************************************
*                                                                     *
*  GETMAIN SAVE AREA FOR CONSOLE BUFFERS                              *
*                                                                     *
***********************************************************************
PSWDOK   GETMAIN R,LV=4096,SP=0    GET 4K BUFFER SAVE AREA
         ST    R1,GETADDR          SAVE GETMAIN ADDRESS
***********************************************************************
*                                                                     *
*  SETUP STAX FOR ATTENTION INTERRUPTIONS                             *
*                                                                     *
***********************************************************************
         LA    R3,STAXLIST         R3 = ADDRESS OF STAX LIST MACRO
         STAX  ATTNEXIT,USADDR=ATTNFLG,MF=(E,(3)) ATTN EXIT TRAP
***********************************************************************
*                                                                     *
*  SETUP CROSS MEMORY                                                 *
*                                                                     *
***********************************************************************
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
***********************************************************************
*                                                                     *
*          BUILD A TABLE OF ALL UCM ADDRESSES                         *
*                                                                     *
***********************************************************************
BLDUCMS  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R4,CVTCUCB          R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R5,UCMVEA           ADDRESS OF FIRST UCM ENTRY
         L     R6,UCMVEZ           LOAD LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL           ADDRESS OF LAST UCM ENTRY
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         LA    R8,UCMTAB+4         LOAD ADDR OF 1ST UCM ADDR (REL 1)
         LA    R15,UCMTABC         LOAD NUMBER OF ENTRIES IN TABLE
UCMTBLP  SLR   R8,R8               ZERO REGISTER FOR IC
         IC    R8,UCMID            LOAD UCMID
         CR    R8,R15              SEE IF UCMID OUTSIDE OUR TABLE
         BH    UCMTBLP1            YES, IGNORE IT
         SLL   R8,2                MULTIPLY BY 4
         LA    R8,UCMTAB(R8)       POINT WITHIN TABLE
         ST    R5,0(R8)            SAVE UCM ADDRESS
UCMTBLP1 LA    R8,4(,R8)           INCREMENT TO NEXT UCMTAB ENTRY
         AR    R5,R6               INCREMENT TO NEXT UCM ENTRY
         CR    R5,R7               SEE IF END OF UCM ENTRIES
         BNH   UCMTBLP             NO, LOOP
UCMTDONE STH   R15,NUMUCMS         SAVE MAX NUMBER OF UCMS
         DROP  R5                  DROP ADDRESSABILITY TO UCM
         EJECT
***********************************************************************
*                                                                     *
*          FIND THE MASTER CONSOLE UCM AND DCM ADDRESS                *
*                                                                     *
***********************************************************************
FINDUCM  SLR   R5,R5               CLEAR REG FOR IC
         IC    R5,CNSLNUM          LOAD CONSOLE NUMBER
         CLI   CNSLNUM,C'M'        WAS MASTER REQUESTED?
         BE    UCMMAST             YES, BRANCH
         SLR   R15,R15             ZERO REG FOR IC
         IC    R15,CNSLNUM         LOAD CONSOLE NUMBER
         CH    R15,NUMUCMS         SEE IF TOO HIGH
         BH    UCMERR6             YES, INVALID
         SLA   R15,2               MULTIPLY BY 4
         L     R4,UCMTAB(R15)      LOAD UCM ENTRY
         LTR   R4,R4               TEST ADDRESS
         BZ    UCMERR6             ZERO, NOT A CONSOLE
         USING UCMLIST,R4          SET ADDRESSABILITY TO UCM
         TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BO    ACTIVE              YES, BRANCH
UCMERR5  MVC   ERROR(26),ERRMSG5   SET INACTIVE CONSOLE MESSAGE
         B     UCMMAST             GO SET TO MASTER
UCMERR6  MVC   ERROR(26),ERRMSG6   SET INVALID CONSOLE MESSAGE
UCMMAST  LA    R5,1                SET STARTING CONSOLE NUMBER
         LH    R15,NUMUCMS         LOAD NUMBER OF UCMS
         LA    R14,UCMTAB+4        LOAD ADDRESS OF UCM TABLE
UCMMLOOP ICM   R4,15,0(R14)        LOAD UCM ENTRY
         BZ    UCMMLOO1            ZERO, CONSOLE IS NOT A CRT
         TM    UCMDISP1,UCMDISPA   IS THIS A MASTER CONSOLE?
         BNO   UCMMLOO1            NO, LOOP
         TM    UCMATR,UCMUF        IS THE DEVICE ACTIVE?
         BO    ACTIVE              YES, BRANCH
         TPUT  ERRMSG1,26          WRITE ERROR MSG
         ABEND 002,DUMP            ABEND THE COMMAND
UCMMLOO1 LA    R14,4(,R14)         INCREMENT TO NEXT UCM TABLE ENTRY
         LA    R5,1(,R5)           ADD 1 TO CONSOLE NUMBER
         BCT   R15,UCMMLOOP        LOOP ON UCM TABLE ENTRIES
         TPUT  ERRMSG1,26          WRITE ERROR MSG
         ABEND 002,DUMP            ABEND THE COMMAND
ACTIVE   ST    R4,CONFLG1          SAVE UCM ADDRESS
         STC   R5,CNSLNUM          STORE CONSOLE NUMBER
         DROP  R4                  DROP ADDRESSABILITY TO UCM
         SPACE 3
***********************************************************************
*                                                                     *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT               *
*                                                                     *
*              OUTPUT LOOP RETURNS TO HERE TO HANDLE POSSIBLE         *
*              MASTER CONSOLE SWITCH                                  *
*                                                                     *
***********************************************************************
NEXTPAGE CLI   ATTNFLG,X'00'       WAS ATTN HIT?
         BE    NOATTN              NO
*                                  ATTENTION KEY HIT; PROCESS IT
         STFSMODE ON
         MVI   ATTNFLG,X'00'       YES, RESET FLAG
         MVC   TIME(3),BLANKS      BLANK OUT TIMER FIELD
         MVI   WAITFLG,X'00'       TURN OFF WAIT FLAG
         XC    TIMER,TIMER         SET TIMER TO 0
NOATTN   L     R5,CONFLG1          R5 = ADDR OF UCM
         USING UCMLIST,R5          SET ADDRESSABILITY TO UCM
         L     R6,UCMXB            R6 = ADDR OF RDCM
         LTR   R6,R6               IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS            YES
         MVC   ERROR(26),ERRMSG4   NON-GRAPHIC CONSOLE
         B     DONE                GET OUT
         SPACE
GRAPHICS MVC   CTYPE(28),BLANKS    BLANK OUT CONSOLE TYPE FIELD
         TM    UCMDISP1,UCMDISPA   IS THIS A MASTER CONSOLE?
         BNO   AUTH                NO
         MVC   MASTER(6),=CL6'MASTER' YES
AUTH     TM    UCMAUTHA,UCMAUTH1   IS THIS CONSOLE SYSTEM AUTHORIZED?
         BNO   AUTH1               NO
         MVC   SYS(3),=CL3'SYS'    YES
AUTH1    TM    UCMAUTHA,UCMAUTH2   IS IT I/O AUTHORIZED?
         BNO   AUTH2               NO
         MVC   IO(3),=CL3'I/O'     YES
AUTH2    TM    UCMAUTHA,UCMAUTH3   IS IT CONS AUTHORIZED?
         BNO   AUTHDONE            NO
         MVC   CONS(4),=CL4'CONS'  YES
AUTHDONE L     R7,UCMUCB           R7 = ADDR OF UCB
         MVC   UNIT(3),13(R7)      MOVE UNIT ADDR INTO LINE
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         LA    R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         LR    R8,R6               R8 = ADDR OF RDCM
         LA    R4,LORDCM           R4 = ADDR OF COPY OF RDCM
         LA    R5,4                R5 = WANT 1ST 4 BYTES ONLY
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
         MVCP  0(R5,R4),0(R8),R15  MOVE IT
         L     R8,LORDCM           R8 = ADDR OF PAGEABLE DCM FROM RDCM
         LA    R4,LOCDCM           R4 = ADDR OF COPY OF PDCM
         LA    R5,L'LOCDCM         R5 = LENGTH OF PDCM
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MVLOOP   MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MVDONE              FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MVLOOP              MOVE NEXT 256 BYTES
MVDONE   L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         LA    R7,LOCDCM           R7 = ADDR OF COPY OF TDCM
         USING PDCM,R7             SET ADDRESSABILITY TO PAGEABLE DCM
         SPACE
***********************************************************************
*                                                                     *
*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *
*                                                                     *
***********************************************************************
         MVC   LASTLINE(40),DCMINPUT   MOVE IN INPUT BUFFER LINE
         MVI   MODE+1,C' '         BLANK OUT VIP INDICATOR
         CLI   VIPFLG,X'FF'        IS THE VIP FLAG ON?
         BNE   CHKINTEG            NOPE
         MVI   MODE+1,C'*'         TURN ON VIP INDICATOR
         SPACE 1
***********************************************************************
*                                                                     *
*                    CHECK FOR INTEGRATED CONSOLE                     *
*                                                                     *
*     IF THIS IS A INTEGRATED CONSOLE(3066), SPECIAL PROCESSING MUST  *
*     BE MADE FOR PROCESSING THE 30 LINES ON THE 3277 TSO SCREEN.     *
*                                                                     *
***********************************************************************
CHKINTEG MVI   INTEGFLG,X'FF'      TURN ON INTEGRATED CONSOLE FLAG
         LH    R15,DCMMSGAL        LOAD NUMBER OF MESSAGE LINES
         STH   R15,NUMIN           SAVE NUMBER OF INPUT LINES
         LH    R15,DCMCORLN        LOAD LENGTH OF MESSAGE LINE
         STH   R15,LENIN           SAVE LENGTH OF INPUT LINE
         SH    R15,=H'78'          SUBTRACT LENGTH OF TEXT
         STH   R15,BUFINDEX        AND SAVE BUFFER INDEX AMOUNT
NOCTRL   LH    R15,LENIN           LOAD LENGTH OF BUFFER LINE
         MH    R15,NUMIN           MULTIPLY BY NUMBER OF LINES
         STH   R15,MOVEL           SAVE LENGTH OF CONSOLE BUFFERS
         EJECT
*********************************************************************
*                                                                   *
*        SET UP MOVE LENGTH FOR PAGE1 AND PAGE2 (IF 3066 CONSOLE)   *
*        AND BUFFER OFFSET FOR MOVE FOR PAGE2 .                     *
*                                                                   *
*********************************************************************
         SPACE 3
*********************************************************************
*                                                                   *
*        ASSUME 3277 TYPE CONSOLE WHICH MEANS THAT NO PAGE2 WILL    *
*        REQUIRED FOR EITHER A 3277 OR A 3278 TSO CRT.              *
*                                                                   *
*********************************************************************
         SLR   R15,R15             CLEAR REGISTER
         STH   R15,PAGE2OFF        ASSUME NO PAGE2
         LH    R15,NUMIN           LOAD NUMBER OF LINES IN BUFFER
         MH    R15,=H'84'          MULTIPLY BY TPUT LINE LENGTH
         STH   R15,PAGEML          AND SAVE MOVE LENGTH
         LH    R15,NUMIN           LOAD NUMBER OF LINES IN BUFFER
         CH    R15,=H'19'          IS THIS A 3277 TYPE CONSOLE?
         BE    MOVEBUFF            YES, ALL SET UP
         CH    R15,=H'20'          IS THIS A 3278 TYPE CONSOLE?
         BE    MOVEBUFF            YES, ALL SET UP
*********************************************************************
*                                                                   *
*        WE KNOW THAT THE CONSOLE IS A 3066 AND WILL HAVE 30 LINES  *
*        OF BUFFERS.  THE TSO CRT IS A 3277 OR 3278 IN MOD 2 MODE   *
*        SO PAGE2 WILL BE REQUIRED.  PAGE1 WILL HAVE THE FIRST      *
*        20 LINES AND PAGE2 WILL HAVE THE LAST 20 LINES.            *
*                                                                   *
*********************************************************************
         LA    R15,20              PAGE 1 WILL HAVE FIRST 20 LINES
         MH    R15,=H'84'          MULTIPLY BY TPUT LINE LENGTH
         STH   R15,PAGEML          AND SAVE MOVE LENGTH
         LH    R15,LENIN           CALCULATE OFFSET
         MH    R15,=H'10'              FOR 10 LINES
         STH   R15,PAGE2OFF        AND SAVE THE OFFSET VALUE
*       MOVE CONSOLE BUFFER TO GETMAIN
MOVEBUFF LA    R9,CONASID          GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
         L     R8,DCMASCRN         R8 = ADDR OF SCREEN BUFFER
         SH    R8,BUFINDEX         SUBTRACT BUFFER INDEX (IF ANY)
         L     R4,GETADDR          R4 = ADDR OF OUTPUT BUFFER
         LH    R5,MOVEL            R5 = LENGTH OF ALL CONSOLE BUFFERS
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
MOVELOOP MVCP  0(R5,R4),0(R8),R15  MOVE IT
         BZ    MOVEDONE            FINISHED
         LA    R4,256(R4)          INCREMENT 'TO' ADDRESS
         LA    R8,256(R8)          INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          DECREMENT LENGTH LEFT TO MOVE
         B     MOVELOOP            MOVE NEXT 256 BYTES
MOVEDONE L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
*       SET PROPER TPUT LENGTH
         LH    R15,PAGEML          LOAD LENGTH OF MESSAGE LINES
         LA    R15,TRAILEN(R15)    ADD TRAILER LENGTH
         ST    R15,TPUTLEN         SET LENGTH FOR FULL SCREEN
         SPACE 2
         CLC   DCMMSGAL(2),=H'30'  IS THIS REALLY INTEGRATED CONSOLE?
         BE    MOD3066             YES
         CLC   DCMMSGAL(2),=H'19'  IS THIS A TYPE 3277 ?
         BE    MOD3277             YES
         CLC   DCMMSGAL(2),=H'20'  IS THIS A TYPE 3278 ?
         BE    MOD3277             YES
         TPUT  ERRMSG7,26          WRITE ERROR MSG
         ABEND 003,DUMP            WHAT IS IT
MOD3277  MVI   INTEGFLG,X'00'      NO; TURN OFF INTEGRATED CONSOLE FLAG
         MVI   FREEZE,C'F'         FREEZE DISPLAY
         MVI   PAGE,C'1'           ON PAGE 1
         SPACE 1
MOD3066  CLI   PAGE,C'1'           ARE WE ON PAGE 1?
         BNE   ONTWO               NO, SO WE MUST BE ON 2
         CLI   FREEZE,C'F'         ARE WE FROZEN ON PAGE 1?
         BNE   PAGE2               NO, SO DISPLAY PAGE 2
         B     PAGE1               YES, SO DISPLAY PAGE 1
ONTWO    CLI   FREEZE,C'F'         ARE WE FROZEN ON PAGE 2?
         BE    PAGE2               YES, SO DISPLAY PAGE 2
PAGE1    MVI   PAGE,C'1'           PAGE = 1
*       MOVE FROM GETMAIN AREA + ZERO
         L     R8,GETADDR          R8 = ADDR OF SCREEN BUFFER SAVE AREA
         AH    R8,BUFINDEX         ADD MSG PREFIX LENGTH TO BUFFER ADDR
         LA    R4,BUF              R4 = ADDR OF OUTPUT BUFFER
         LH    R5,NUMIN            LOAD NUMBER OF MESSAGE LINES
         CH    R5,=H'20'           SEE IF EXCEEDS 20
         BNH   PAGE1A              NO, BRANCH
         LA    R5,20               SET NUMBER OF LINES TO 20
PAGE1A   SLR   R9,R9               SET ROW NUMBER TO ZERO
PAGE1B   LA    R9,1(R9)            ADD 1 TO ROW NUMBER
         STH   R9,ROW              SAVE NEW ROW NUMBER
         BAL   R14,GETSBA          GO GET SBA ADDRESS OF THIS LINE
         MVI   0(R4),X'11'         SET SBA ORDER IN TPUT BUFFER
         MVC   1(2,R4),SBA         MOVE SBA TO TPUT BUFFER
         MVC   3(3,R4),=X'1DE840'  SET FIELD ATTRIBUTES
         MVC   6(78,R4),0(R8)      MOVE MESSAGE TO TPUT BUFFER
         CLI   3(R8),C'*'          SEE IF NON ROLL-DELETABLE
         BE    PAGE1C              YES, LEAVE THE ATTRIBUTES ALONE
         CLI   3(R8),C'@'          SEE IF NON ROLL-DELETABLE
         BE    PAGE1C              YES, LEAVE THE ATTRIBUTES ALONE
         MVC   3(3,R4),=X'1DE440'  SET TO NORMAL INTENSITY
PAGE1C   LA    R4,84(R4)           POINT TO NEXT RECORD IN TPUT BUFFER
         AH    R8,LENIN            POINT TO NEXT RECORD IN CNSL BUFFER
         BCT   R5,PAGE1B           LOOP UNTIL ALL RECORDS PROCESSED
         B     MVETRAIL            GO MOVE THE BUFFER
PAGE2    MVI   PAGE,C'2'           PAGE = 2
*       MOVE FROM GETMAIN AREA + OFFSET TO LAST 20 LINES
         L     R8,GETADDR          R8 = ADDR OF SCREEN BUFFER SAVE AREA
         AH    R8,PAGE2OFF         ADD BUFFER OFFSET FOR PAGE2
         AH    R8,BUFINDEX         ADD MSG PREFIX LENGTH TO BUFFER ADDR
         LA    R4,BUF              R4 = ADDR OF OUTPUT BUFFER
         LH    R5,NUMIN            LOAD NUMBER OF MESSAGE LINES
         CH    R5,=H'20'           SEE IF EXCEEDS 20
         BNH   PAGE2A              NO, BRANCH
         LA    R5,20               SET NUMBER OF LINES TO 20
PAGE2A   SLR   R9,R9               SET ROW NUMBER TO ZERO
PAGE2B   LA    R9,1(R9)            ADD 1 TO ROW NUMBER
         STH   R9,ROW              SAVE NEW ROW NUMBER
         BAL   R14,GETSBA          GO GET SBA ADDRESS OF THIS LINE
         MVI   0(R4),X'11'         SET SBA ORDER IN TPUT BUFFER
         MVC   1(2,R4),SBA         MOVE SBA TO TPUT BUFFER
         MVC   3(3,R4),=X'1DE840'  SET FIELD ATTRIBUTES
         MVC   6(78,R4),0(R8)      MOVE MESSAGE TO TPUT BUFFER
         CLI   3(R8),C'*'          SEE IF NON ROLL-DELETABLE
         BE    PAGE2C              YES, LEAVE THE ATTRIBUTES ALONE
         CLI   3(R8),C'@'          SEE IF NON ROLL-DELETABLE
         BE    PAGE2C              YES, LEAVE THE ATTRIBUTES ALONE
         MVC   3(3,R4),=X'1DE440'  SET TO NORMAL INTENSITY
PAGE2C   LA    R4,84(R4)           POINT TO NEXT RECORD IN TPUT BUFFER
         AH    R8,LENIN            POINT TO NEXT RECORD IN CNSL BUFFER
         BCT   R5,PAGE2B           LOOP UNTIL ALL RECORDS PROCESSED
MVETRAIL LA    R4,BUF              R4 = ADDR OF OUTPUT BUFFER
         AH    R4,PAGEML           R4 = ADDR OF TRAILER
         MVC   0(TRAILEN,R4),CMDCTRL MOVE IN TRAILER
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         DROP  R5,R7
         CLI   CRTFLAG,X'FF'       IS THIS A CRT?
         BE    TPUTCRT             YES
         SPACE 5
***********************************************************************
*                                                                     *
*      DISPLAY THE OPERATOR'S SCREEN ON A TSO HARDCOPY TERMINAL       *
*                                                                     *
***********************************************************************
NOT3270  LH    R8,NUMIN            R8 = NUMBER OF INPUT LINES
         LA    R3,BUF              SET POINTER TO FIRST LINE
         AH    R3,BUFINDEX         ADD BUFFER INDEX TO START
         ICM   R3,8,EDITFLG        EDIT MODE
         L     R0,=F'80'           R0 LENGTH OF OUTPUT LINE
         CH    R0,LENIN            SEE IF LINE LENGTH = 80 (3066)
         BE    NEXTL               YES, BRANCH
         L     R0,=F'78'           SET TPUT LENGTH TO 78
NEXTL    TPUT  (3),(0),R           PRINT ONE LINE ON HARDCOPY
         AH    R3,LENIN            ADD LINE LENGTH TO BUFFER ADDR
         BCT   R8,NEXTL            LOOP UNTIL PRINTED LAST LINE?
DOLAST2  TPUT  LASTLINE,79,EDIT    DISPLAY OPER CMD LINE
         TPUT  HEADING,79,EDIT     DISPLAY CONSOLE STATUS LINE
         TPUT  USERLINE,79,EDIT    DISPLAY USER CMD LINE
         B     INPUT
         EJECT
***********************************************************************
*                                                                     *
*               DISPLAY THE OPERATORS SCREEN ON A 3277                *
*                                                                     *
***********************************************************************
TPUTCRT  LA    R1,CLEAR            R1 = ADDR OF OUTPUT STREAM
         L     R0,TPUTLEN          R0 = LENGTH OF TPUT
         ICM   R1,8,FULLSCR        SET ASIS TYPE FOR TPUT
         TPUT  (1),(0),R           DISPLAY ENTIRE SCREEN
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         SLR   R1,R1               CLEAR PARM REG
         SYSEVENT TGETTPUT         MARK END OF TRANSACTION
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
INPUT    MVC   ERROR(32),BLANKS    BLANK OUT ERROR FIELD
         CLI   WAITFLG,X'FF'       IS THE WAIT FLAG ON?
         BNE   READCHAR            NO, SO GO GET A COMMAND
         STIMER WAIT,BINTVL=DELAY WAIT FOR DELAY*.01 SECONDS
         L     R2,TIMER            R2 = CURRENT VALUE OF TIMER
         BCTR  R2,0                TIMER = TIMER - 1
         ST    R2,TIMER            STORE NEW VALUE OF TIMER
         CVD   R2,WORK             CONVERT TO DECIMAL.
         MVC   SCRATCH(4),PATTERN  MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6   EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1   MOVE TIME LEFT INTO PLACE
         LTR   R2,R2               HAS TIMER HIT ZERO?
         BNZ   NEXTPAGE            NO, CONTINUE TO COUNT
         MVC   TIME(3),BLANKS      CLEAR COUNTER FIELD
         XI    WAITFLG,X'FF'       TOGGLE WAIT FLAG OFF
         B     NEXTPAGE            AND GO ON AS IF NOTHING HAPPENED..
         EJECT
***********************************************************************
*                                                                     *
*                       READ COMMAND FROM USER                        *
*                                                                     *
***********************************************************************
READCHAR MVC   REPLY,BLANKS        SHOW NO COMMAND
         TGET  REPLYBUF,85,ASIS    GET 79 CHARACTERS FROM TERMINAL
         CH    R15,=H'20'          SEE IF RETURN CODE VALID
         BH    INVALID             NO, BRANCH
         B     BRTAB(R15)          BRANCH TO BRANCH TABLE
BRTAB    B     OK                  RC=0
         B     NEXTPAGE            RC=4  (NO DATA AVAILABLE)
         B     ATTN                RC=8  (ATTENTION WAS HIT)
         B     NEXTPAGE            RC=12 (IGNORE DATA)
         B     INVALID             RC=16 (INVALID TPUT)
         B     IOERROR             RC=20 (TERMINAL DISCONNECTED)
INVALID  TPUT  ERRMSG9,26          WRITE ERROR MSG
         ABEND 004,DUMP            ABEND THE COMMAND
IOERROR  TPUT  ERRMSG10,26         WRITE ERROR MSG
         ABEND 005,DUMP            ABEND THE COMMAND
ATTN     MVI   ATTNFLG,X'FF'       SET ATTENTION INDICATOR
         B     NEXTPAGE            AND CONTINUE AS IF ENTER PRESSED
OK       CLI   REPLYBUF,X'7D'      ENTER KEY ?
         BE    NOPFK               YES, SKIP PFK LOGIC
         CLI   REPLYBUF,X'60'      ERROR (NO AID)?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6B'      PA3 KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6C'      PA1 KEY ?
         BE    ATTN                YES, PROCESS AS IF ATTN
         CLI   REPLYBUF,X'6D'      CLEAR KEY ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'6E'      IS THIS A RESHOW? (VTAM ONLY)
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'F0'      TEST REQ?
         BE    NEXTPAGE            YES, CONTINUE AS IF ENTER PRESSED
         CLI   REPLYBUF,X'7A'      PFK10 (RECALL) ?
         BE    RECALL              YES, GO DO RECALL COMMAND
         NI    REPLYBUF,X'0F'      TURN OFF HIGH BYTE
         SR    R1,R1               CLEAR REGISTER
         IC    R1,REPLYBUF         GET PFK NUMBER
         LTR   R1,R1               TEST PFK NUMBER
         BNP   NEXTPAGE            ZERO OR NEGATIVE, CONTINUE
         BCTR  R1,0                DECREMENT BY 1
         CH    R1,=H'9'            HIGHEST DEFINED PFK IS 10
         BH    NEXTPAGE            SO SKIP OTHERS OR BUF TRANSFER ERROR
         MH    R1,=H'80'           GET OFFSET INTO TABLE
         LA    R1,PFKTABLE(R1)     GET ADDRESS OF COMMAND
         MVC   REPLY,0(R1)         INSERT COMMAND
NOPFK    CLI   REPLY,C' '          JUST A BLANK?
         BE    NEXTPAGE            YES, JUST GO REFRESH
         MVC   USERLINE,BLANKS     BLANK OUT INPUT FIELD
         OC    REPLY(79),BLANKS    CONVERT CHARS TO UPPER CASE
         CLC   REPLY(6),=C'RECALL' RECALL COMMAND ?
         BE    RECALL              YES, GO DO IT
         CLC   REPLY(3),=C'RCL'    RECALL COMMAND (SHORT FORM) ?
         BNE   CHEKWAIT            NO, CHECK FOR WAIT COMMAND
RECALL   DS    0H
         MVC   LASTUSER,LASTRPLY   RESTORE LAST ENTERED COMMAND
         MVC   USERLINE(L'LASTRPLY),LASTRPLY   RECALL LAST COMMAND
         B     NEXTPAGE            GIVE OPER THE CHANCE TO CHANGE
***********************************************************************
*                                                                     *
*                    WAIT  --  ENTER WAIT MODE                        *
*                                                                     *
***********************************************************************
CHEKWAIT DS    0H
         CLC   REPLY(4),=C'WAIT'   DO WE SHIFT TO WAIT MODE?
         BNE   CDELAY              NO, SO CONTINUE
         LA    R1,REPLY+4          LOAD START ADDRESS OF VALUE
         XI    WAITFLG,X'FF'       TURN ON WAIT FLAG
         LA    R2,30               SET DEFAULT VALUE = 30
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         MVC   SCRATCH(4),PATTERN  MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6   EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1   MOVE TIME LEFT INTO PLACE
         ST    R2,TIMER            STORE STARTING TIMER VALUE
         B     NEXTPAGE            ALL SET - GO DISPLAY NEXT PAGE
***********************************************************************
*                                                                     *
*        DELAY  --  SET TIMER DELAY IN TENTHS OF A SECOND             *
*                                                                     *
***********************************************************************
CDELAY   CLC   REPLY(5),=C'DELAY'  ARE WE CHANGING THE TIME DELAY?
         BNE   CNSL                NO, SO CONTINUE
         LA    R1,REPLY+5          LOAD START ADDRESS OF VALUE
         LA    R2,10               SET DEFAULT VALUE = 10 TENTHS SECOND
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         MVC   SCRATCH(5),DPATTRN  MOVE IN EDIT PATTERN
         ED    SCRATCH(5),WORK+6   EDIT IN DELAY TIME
         MVC   PAUSE(3),SCRATCH+2  MOVE TIME LEFT INTO PLACE
         MH    R2,=H'10'           CONVERT TO 100THS OF A SECOND
         ST    R2,DELAY            STORE WAIT DELAY VALUE
         B     NEXTPAGE            ALL SET - GO DISPLAY NEXT PAGE
***********************************************************************
*                                                                     *
*                   CONSOLE --  CHANGE CONSOLE ADDRESS                *
*                                                                     *
***********************************************************************
CNSL     CLC   REPLY(8),=C'CONSOLE=' IS THIS A CONSOLE CHANGE REQUEST
         BNE   END                 NO, BRANCH
         MVI   CNSLNUM,C'M'        SET DEFAULT TO MASTER
         LA    R1,REPLY+8          LOAD START ADDRESS OF VALUE
         CLI   0(R1),C'M'          IS THE MASTER CONSOLE REQUESTED?
         BE    FINDUCM             YES, BRANCH
         LA    R2,0                SET DEFAULT VALUE = 00
         LA    R15,CONVBIN         BRANCH TO CONVERSION RTN
         BALR  R14,R15             EBCDIC TO BINARY
         LTR   R2,R2               TEST VALUE
         BZ    FINDUCM             ZERO, USE 'M'
         STC   R2,CNSLNUM          SAVE CONSOLE NUMBER
         B     FINDUCM             GO PROCESS CONSOLE SWITCH
***********************************************************************
*                                                                     *
*                       END --  TERMINATE CONSOLE                     *
*                                                                     *
***********************************************************************
END      CLC   REPLY(2),=C'EN'     IS IT AN 'END' ?
         BE    DONE                YES, SO QUIT
***********************************************************************
*                                                                     *
*                        Z  --  TERMINATE CONSOLE                     *
*                                                                     *
***********************************************************************
HALT     CLC   REPLY(4),=C'Z   '   IS IT AN 'Z'?
         BE    DONE                YES, SO QUIT
***********************************************************************
*                                                                     *
*          FREEZE  --  FREEZE DISPLAY ON CURRENT PAGE                 *
*                                                                     *
***********************************************************************
F        CLC   REPLY(2),=C'FR'     IS IT AN 'FREEZE' ?
         BNE   R                   NO, SO CONTINUE ON
         MVI   FREEZE,C'F'         TURN ON FREEZE INDICATOR
         B     NEXTPAGE            CONTINUE
***********************************************************************
*                                                                     *
*     RELEASE  --  RELEASE FREEZE ON CURRENT PAGE DISPLAY             *
*                                                                     *
***********************************************************************
R        CLC   REPLY(2),=C'RE'     IS IT AN 'RELEASE' ?
         BNE   GETHELP             NO, SO CONTINUE ON
         MVI   FREEZE,C'R'         TURN OFF FREEZE INDICATOR
         B     NEXTPAGE            CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*           ?  --  LIST HELP FOR CONSOLE COMMANDS ON TERMINAL         *
*                                                                     *
***********************************************************************
GETHELP  CLI   REPLY,C'?'          IS HE ASKING FOR HELP?
         BNE   VIP                 NO,SO CONTINUE
         LA    R1,HELP             R1 = ADDR OF HELP PAGE
         LA    R0,HLENGTH          R0 = LENGTH OF HELP PAGE
         ICM   R1,8,FULLSCR        INSERT ASIS CNTL CHARS
         TPUT  (1),(0),R           DISPLAY HELP
         B     READCHAR
***********************************************************************
*                                                                     *
*   CHECK FOR THE 'VIP' PASSWORD. THIS IS THE THIRD AND LAST LEVEL    *
*   OF AUTHORIZATION REQUIRED TO ISSUE OS/JES COMMANDS.               *
*                                                                     *
***********************************************************************
VIP      DS    0H
         MVC   LASTRPLY,REPLY      SAVE THIS COMMAND FOR RECALL
         MVC   LASTUSER,REPLY      SHOW LAST ENTERED USER COMMAND
         CLI   VIPFLG,X'FF'        SUPER OPERATOR ?
         BE    DYNA                YES, ANY COMMAND VALID
         CLC   REPLY(2),=C'R '     NO, REPLY COMMAND ?
         BE    DYNA                YES, REPLY VALID FOR OTHERS
         CLC   REPLY(6),=C'REPLY ' NO, FULL REPLY COMMAND ?
         BE    DYNA                YES, REPLY VALID
         CLC   REPLY(2),=C'$D'     NO, DISPLAY COMMAND ?
         BE    DYNA                YES, DISPLAY VALID FOR OTHERS
         CLC   REPLY(2),=C'D '     NO, OS DISPLAY COMMAND ?
         BE    DYNA                YES, DISPLAY VALID FOR OTHERS
         B     BADCMD              SORRY, OTHER COMMAND INVALID
***********************************************************************
*                                                                     *
*                       JES OPERATOR COMMANDS                         *
*                      SYSTEM OPERATOR COMMANDS                       *
*                                                                     *
***********************************************************************
DYNA     DS    0H
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         MVC   COMMDATA+4(50),REPLY MOVE CMD TO WTO LIST FORM
         MVC   REPLY(79),BLANKS    BLANK OUT REPLY FIELD
         SLR   R0,R0               CLEAR REG 0
         IC    R0,CNSLNUM          SET UCMID FOR COMMAND
         LA    R1,COMMDATA         LOAD ADDRESS OF WTO LIST FORM
         MGCR  (1)                 ISSUE COMMAND
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
         B     NEXTPAGE            LOOP
COMMDATA WTO   '12345678901234567890123456789012345678901234567890',   X
               ROUTCDE=(2),DESC=4,MF=L
***********************************************************************
*                                                                     *
*                      COMMAND WAS INVALID                            *
*                                                                     *
***********************************************************************
BADCMD   MVC   ERROR(26),ERRMSG3   COMMAND WAS INVALID
         B     NEXTPAGE            LOOP
         SPACE 5
DONE     CLI   CRTFLAG,X'00'       IS THIS A HARDCOPY?
         BE    ALLDONE             YES
         TPUT  CLEAR,CLEARGTH,FULLSCR  NO, LETS CLEAR THE SCREEN FIRST
         STFSMODE OFF              TURN OFF FS MODE
         L     R1,GETADDR          LOAD GETMAIN AREA ADDRESS
ALLDONE  FREEMAIN R,LV=4096,SP=0,A=(1) FREE GETMAIN BUFFER ADDR
EXIT     STSIZE LINELOC=LPSCREEN,SIZELOC=CPLINE RESET SCREEN ATTR
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
***********************************************************************
*                                                                     *
*                     UNAUTHORIZE OURSELVES                           *
*                                                                     *
***********************************************************************
         LA    R0,PROGNAME         LOAD ADDRESS OF PROGRAM NAME
         SLR   R1,R1               REQUEST PROTECT KEY ZERO
         SVC   248                 GET AUTHORIZATION
         L     R2,PSATOLD          GET TCB
         USING TCB,R2              SET ADDRESSABILITY TO TCB
         L     R2,TCBJSCB          GET POINTER TO JSCB
         DROP  R2                  DROP ADDRESSABILITY TO TCB
         USING IEZJSCB,R2          SET ADDRESSABILITY TO JSCB
         NI    JSCBOPTS,255-JSCBAUTH   TURN OFF AUTHORIZATION BIT
         DROP  R2                  DROP ADDRESSABILITY TO JSCB
         LA    R0,PROGNAME         LOAD ADDRESS OF PROGRAM NAME
         LA    R1,8                REQUEST PROTECT KEY RETURN
         SVC   248                 GET AUTHORIZATION
         L     R13,SAVE+4          RESTORE PTR TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         LA    R15,0               SET RETURN CODE TO ZERO
         BR    R14                 RETURN TO SYSTEM
         EJECT
***********************************************************************
*                                                                     *
*            CONVERT EBCDIC NUMBERS FROM USER INTO BINARY             *
*                                                                     *
***********************************************************************
CONVBIN  CVD   R2,WORK             CONVERT TO DECIMAL.
         CLI   0(R1),C' '          DID HE ENTER A NUMBER?
         BE    RTRN                NO, USE THE DEFAULT
         CLI   0(R1),C'0'          IS THE HEX CODE < 'F0' ?
         BL    BADCHAR             YES, ERROR
         CLI   0(R1),C'9'          IS THE HEX CODE > 'F9' ?
         BH    BADCHAR             YES, ERROR
         PACK  WORK(8),0(1,R1)     PACK EBCDIC (ASSUME 1 DIGIT)
         CLI   1(R1),C' '          DID HE ENTER 2 DIGITS?
         BE    CVB                 NO, DONT DO THE 2 DIGIT PACK
         CLI   1(R1),C'0'          IS THE HEX CODE < 'F0' ?
         BL    BADCHAR             YES, ERROR
         CLI   1(R1),C'9'          IS THE HEX CODE > 'F9' ?
         BH    BADCHAR             YES, ERROR
         PACK  WORK(8),0(2,R1)     PACK AGAIN, WITH 2 DIGITS THIS TIME
CVB      CVB   R2,WORK             GET BINARY
RTRN     BR    R14                 RETURN TO MAINLINE
BADCHAR  MVC   ERROR(26),ERRMSG2   CONSOLE NUMBER ERROR
         BR    R14                 RETURN TO MAINLINE
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE ROUTINE TO CONVERT ROW AND COLUMN TO A           *
*        CRT SET BUFFER ADDRESS (SBA) VALUE                           *
*                                                                     *
*        THE ROW AND COLUMN ARE AT HALFWORDS NAMED ROW AND COL        *
*        RESPECTIVELY                                                 *
*                                                                     *
*              ON RETURN:                                             *
*                                                                     *
*        THE SBA ADDRESS WILL BE IN A TWO BYTE FIELD NAMED SBA.       *
*                                                                     *
***********************************************************************
GETSBA   STM   R0,R15,SAVGSBA      SAVE INPUT REGISTERS
         LH    R2,ROW              LOAD ROW NUMBER
         BCTR  R2,0                MAKE RELATIVE TO ZERO
         LH    R3,COL              LOAD COLUMN NUMBER
         BCTR  R3,0                MAKE RELATIVE TO ZERO
         MH    R2,=H'80'           MULTIPLY ROW NUMBER BY LINE SIZE
         AR    R2,R3               DETERMINE RELATIVE SCREEN POSITION
         SRDA  R2,32               SHIFT TO ODD REG OF PAIR
         D     R2,=F'64'           DIVIDE BY 64 FOR TBL OFFSETS
*        QUOTIENT  IN REG 3
*        REMAINDER IN REG 2
         LA    R4,SBATBL1          LOAD ADDRESS OF SBA TABLE
         IC    R5,0(R3,R4)         LOAD FIRST SBA CHAR
         STC   R5,SBA              SAVE FIRST SBA CHAR
         IC    R5,0(R2,R4)         LOAD SECOND SBA CHAR
         STC   R5,SBA+1            SAVE SECOND SBA CHAR
***********************************************************************
*                      EXIT FROM GETSBA ROUTINE                       *
***********************************************************************
GSBAEXIT LM    R0,R15,SAVGSBA      RESTORE REGS
         BR    R14                 RETURN TO CALLER
         SPACE 3
SBATBL1  DS    0CL64
         DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'
         SPACE 3
SAVGSBA  DS    16F                 GETSBA ROUTINE SAVE AREA
ROW      DC    H'0'                ROW NUMBER TO BE CONVERTED
COL      DC    H'1'                COLUMN NUMBER TO BE CONVERTED
SBA      DS    XL2                 RESULTING SBA
         DROP  12
         EJECT
***********************************************************************
*                                                                     *
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
*                                                                     *
***********************************************************************
         USING ATTNEXIT,R15        ESTABLISH EXIT ADDRESSABILITY
ATTNEXIT L     R1,8(R1)            LOAD ADDRESS OF STAX USADDR
         MVI   0(R1),X'FF'         SET ATTN FLAG (ATTNFLG)
         BR    R14                 RETURN TO CALLER
         DROP  R15
AUTHNAME DS    0CL8
         DC    CL8'S40384 '        HOOPER
         DC    8XL1'FF'
         EJECT
PFKTABLE DS    0H
PFK1     DC    CL80'?'
PFK2     DC    CL80'WAIT0'
PFK3     DC    CL80'END'
PFK4     DC    CL80'$DQ'
PFK5     DC    CL80'$DF'
PFK6     DC    CL80'$DI'
PFK7     DC    CL80'$DA'
PFK8     DC    CL80'D A,L'
PFK9     DC    CL80'D TS,L'
PFK10    DC    CL80'RECALL'
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
         SPACE 3
PSATOLD  EQU   540
PSAAOLD  EQU   548
         DS    0D
WORK     DS    D                   WORK AREA FOR PACKS
SCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP
CONFLG1  DC    F'1'                CONSOLE TO BE LOOKED AT
TPUTLEN  DC    F'0'                LENGTH OF FULLSCREEN TPUT
LPSCREEN DC    F'0'                LINES PER SCREEN
CPLINE   DC    F'0'                CHARACTERS PER LINE
LENIN    DC    H'0'                LENGTH OF LINE IN DCM
NUMIN    DC    H'0'                NUMBER OF LINES IN DCM
PAGEML   DC    H'0'                SIZE OF 1 PAGE OF BUFFERS
PAGE2OFF DC    H'0'                OFFSET WITHIN GETMAIN TO 2ND PAGE
MOVEL    DC    H'0'                TOTAL SIZE OF LINES IN DCM
BUFINDEX DC    H'0'                INDEX (0 OR 6) FOR CONTROL CHARS
GETADDR  DC    F'0'                SAVE AREA FOR GETMAIN ADDR
TIMER    DC    F'30'               SECONDS LEFT ON TIMER
DELAY    DC    F'100'              DELAY FOR 100 HUNDREDTHS OF A SECOND
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
CRTFLAG  DC    X'FF'               X'FF' INDICATES CRT IN USE
WAITFLG  DC    X'00'               X'00' INDICATES NOT IN WAIT MODE
VIPFLG   DC    X'00'               X'FF' INDICATES VIP MODE
INTEGFLG DC    X'00'               INTEGRATED CONSOLE FLAG
FULLSCR  DC    X'03'               TPUT ASIS FLAG
EDITFLG  DC    X'00'               TPUT EDIT FLAG
PWREPLY  DC    CL8' '              REPLY AREA FOR PASSWORD
PWDENTER DC    X'A495898396999540' LOWER CASE PASSWORD
NULLS    DC    80X'00'             JUST NULLS
PATTERN  DC    X'40202020'         EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'       EDIT PATTERN FIELD
REPLYBUF DS    0CL85               TGET REPLY BUFFER
REPLYAID DS    CL6                 TGET ATTENTION IDENTIFICATION VALUES
REPLY    DC    CL79' '             USERS COMMAND INPUT FIELD
LASTRPLY DC    CL79' '             USERS LAST COMMAND INPUT
PAD      DC    C' '                PAD CHARACTER FOR MOVEBUFF MVC
STAXLIST STAX  ATTNEXIT,MF=L
BLANKS   DC    CL80' '             CHARACTER STRING OF BLANKS
         CNOP  0,4
SVCKEY   DC    C'0000'
PRMSIZE  DS    H                   PRIMARY SIZE OF TERMINAL
ALTSIZE  DS    H                   ALTERNATE SIZE OF TERMINAL
STDSIZE  DC    AL1(24),AL1(80)     STD SIZE OF TERMINAL (24 X 80)
SASID    DS    F                   SAVE PREVIOUS SECONDARY ASID
PSCBADDR DS    F                   ADDRESS OF PSCB
CONASID  EQU   7                   ASID OF 'CONSOLE'
ONE      DC    H'1'                TO SET AX 1
ZERO     DC    H'0'                TO SET AX 0
PWDWRK   DS    CL8                 PASSWORD WORK
PROGNAME DC    CL8'CONSOLE'        PROGRAM NAME FOR USER SVC
CNSLNUM  DC    C'M'                DEFAULT TO MASTER CONSOLE
UCMTAB   DC    F'0'                NULL FIRST UCM ADDRESS FOR REL 1
         DC    20F'0'              ROOM FOR 20 UCM ADDRESSES
UCMTABC  EQU   (*-(UCMTAB+4))/4    NUMBER OF UCM ADDRESSES
NUMUCMS  DS    H                   NUMBER OF UCM ENTRIES
         SPACE 5
***********************************************************************
*                                                                     *
*                  DISPLAY SCREEN - HEADER SECTION                    *
*                                                                     *
***********************************************************************
HEADER   EQU   *
CLEAR    EQU   *
         DC    X'27F5C3'
CLEARGTH EQU   *-CLEAR
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'1D60'             ATTR BYTE - PROTECTED FIELD
         DC    X'40'
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - IMAGE BUFFER SECTION                 *
*                                                                     *
***********************************************************************
BUF      DC    3000C' '            TPUT BUFFER
***********************************************************************
*                                                                     *
*               DISPLAY SCREEN - TRAILER SECTION                      *
*                                                                     *
***********************************************************************
TRAILER  EQU   *
CMDCTRL  DC    X'115A50'           SBA TO ROW 22, COL 1
         DC    X'1DE8'             ATTR BYTE - PROTECTD, HIGH INTENSITY
LASTLINE DS    0CL79               OPERATORS COMMAND INPUT LINE
LASTOPER DC    CL40' '             LAST OPERATOR INPUT BUFFER
LASTUSER DC    CL39' '             LAST USER INPUT BUFFER
PHEADING DC    X'115B60'           SBA TO ROW 23, COL 1
         DC    X'1DE8'             ATTR BYTE - PROTECTD, HIGH INTENSITY
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL2'  '             CONSOLE NUMBER
CTYPE    DC    CL4' '
MASTER   DC    CL8' '              MASTER CONSOLE
SYS      DC    CL4' '              SYS  AUTHORIZATION
IO       DC    CL4' '              I/O  AUTHORIZATION
CONS     DC    CL5' '              CONS AUTHORIZATION
         DC    CL3' '
         DC    CL5'UNIT'
UNIT     DC    CL4' '              UNIT ADDR OF CONSOLE
HEADING1 DC    CL7'TIMER: '
TIME     DC    CL3' '              SECONDS REMAINING ON TIMER
SLASH    DC    CL1'/'
PAUSE    DC    CL3'1.0'            DELAY IN SECONDS
         DC    CL2' '
HEADING2 DC    CL6'MODE: '
FREEZE   DC    C'F'                FREEZE/RELEASE MODE
MODE     DC    CL1' '
         DC    CL2' '
         DC    CL5'PAGE '
PAGE     DC    CL1'2'              PAGE NUMBER
R24C1    DC    X'115CF0'           SBA TO ROW 24, COL 1
         DC    X'1D40'             ATTR BYTE - UNPROTECTD, LOW INTENS.
         DC    X'13'               INSERT CURSOR
USERLINE DC    CL13' '             USERS COMMAND INPUT LINE
ERROR    DC    CL66' '             ERROR MSG FIELD
TRAILEN  EQU   *-TRAILER           LENGTH OF TRAILER
         SPACE 5
         LTORG
         SPACE 5
ERRMSG1  DC    CL26'ERROR - NO MASTER CONSOLE '
ERRMSG2  DC    CL26'ERROR - NON-NUMERIC VALUE '
ERRMSG3  DC    CL26'ERROR - INVALID COMMAND   '
ERRMSG4  DC    CL26'ERROR - NON-CRT CONSOLE   '
ERRMSG5  DC    CL26'ERROR - CONSOLE INACTIVE  '
ERRMSG6  DC    CL26'ERROR - CONSOLE INVALID   '
ERRMSG7  DC    CL26'INVALID CONSOLE TYPE      '
ERRMSG8  DC    CL26'INVALID TSO TERMINAL TYPE '
ERRMSG9  DC    CL26'INVALID TGET COMMAND      '
ERRMSG10 DC    CL26'TERMINAL DISCONNECTED     '
         SPACE 5
***********************************************************************
*                                                                     *
*                           USER HELP PAGE                            *
*                                                                     *
***********************************************************************
HELP     DC    X'C1'               WCC
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
R1C01    DC    X'114040',X'1DE8',C'COMMAND     DESCRIPTION'
R2C01    DC    X'11C150'
R3C01    DC    X'11C260'
R4C01    DC    X'11C3F0'
R5C01    DC    X'11C540',C' DELAYXX    SET DELAY TO XX TENTHS SECONDS'
R6C01    DC    X'11C650',C' END        END CONSOLE'
R7C01    DC    X'11C760',C' FREEZE     FREEZE DISPLAY ON CURRENT PAGE'
R8C01    DC    X'11C8F0',C' RECALL     RECALL LAST COMMAND FOR UPDATE'
R9C01    DC    X'114A40',C' CONSOLE=NN SWITCH TO CONSOLE NUMBER NN'
R10C01   DC    X'114B50',C' RELEASE    RELEASE DISPLAY'
R11C01   DC    X'114C60',C' WAIT       START TIMER MODE FOR 30 SECONDS'
R12C01   DC    X'114DF0',C' WAITXX     START TIMER MODE FOR XX SECONDS'
R13C01   DC    X'114F40',C' WAIT0      START UNLIMITED TIMER MODE'
R14C01   DC    X'115050',C' Z          END CONSOLE'
R15C01   DC    X'11D160',C' ?          DISPLAY THIS PAGE'
R16C01   DC    X'11D2F0',C'                          '
R17C01   DC    X'11D440'
R18C01   DC    X'11D550',C'HITTING ATTENTION WILL STOP THE WAIT TIMER'
R19C01   DC    X'11D660'
R20C01   DC    X'11D7F0',C' PFK 1=HELP    PFK 2=WAIT0    PFK 3=END'
R21C01   DC    X'11D940',C' PFK 4=$DQ     PFK 5=$DF      PFK 6=$DI'
R22C01   DC    X'115A50',C' PFK 7=$DA     PFK 8=D A,L    PFK 9=D TS,L'
R23C01   DC    X'115B60',C' PFK10=RECALL  PFK11=         PFK12=  '
R24C01   DC    X'115CF0'
         DC    C'HIT ENTER TO CONTINUE'
         DC    X'115DC6'           ROW 24, COL 23
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
HLENGTH  EQU   *-HELP              LENGTH OF HELP TPUT
         EJECT
         CVT   DSECT=YES
         EJECT
PDCM     DSECT
         IEECDCM DEVICE=D
         EJECT
         IEECUCM FORMAT=NEW,LIST=YES
         EJECT
         IKJPSCB
         EJECT
         IKJUPT
         EJECT
         IHAASCB
         IKJTSB LIST=YES,EXT=YES
         EJECT
         IKJTCB
         EJECT
         IEZJSCB
CONSOLE  CSECT
         EJECT
         DS    0F
LORDCM   DS    CL4                 LOCAL COPY OF 1ST 4 BYTES OF RDCM
         DS    0F
LOCDCM   DS    CL(ENDDCM-STRTDCM)  LOCAL COPY OF PDCM
         END   CONSOLE
