         TITLE 'JES2 COMMAND FILTER EXIT'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED TO SCAN ALL COMMANDS      *
*        TO JES2 TO PREVENT SEVERAL COMMANDS OR CERTAIN OPERANDS.     *
*        THE USE OF JOB RANGES EITHER PRODUCES AN EXCESSIVE NUMBER    *
*        OF CONSOLE MESSAGES OR PERFORMS AN UNINTENTIONAL OPERATION   *
*        ON TOO MANY JOBS.  AN EXAMPLE OF THIS IS THE USE OF          *
*        $CJ1-9999 WHEN THE OPERATOR INTENDED TO ENTER $DJ1-9999.     *
*        THE RESTRICTION OF THE USE OF THE RANGE OPERAND CAUSES       *
*        LESS PROBLEMS THAN THE ACCIDENTAL MISUSE OF THE COMMAND.     *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST UNION NATIONAL BANK                    *
*                        301 SOUTH TRYON STREET                       *
*                        CHARLOTTE, N.C.  28288                       *
*                        (704) 374-2427                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J 0 0 5 F I L T          *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CAT         SYS1.HASPSRC                               *
*        03)  $COMWORK     SYS1.HASPSRC                               *
*        04)  $ENTRY       SYS1.HASPSRC                               *
*        05)  $HASPEQU     SYS1.HASPSRC                               *
*        06)  $HASPGBL     SYS1.HASPSRC                               *
*        07)  $HCT         SYS1.HASPSRC                               *
*        08)  $JCT         SYS1.HASPSRC                               *
*        09)  $JOE         SYS1.HASPSRC                               *
*        10)  $JQE         SYS1.HASPSRC                               *
*        11)  $MIT         SYS1.HASPSRC                               *
*        12)  $MODEND      SYS1.HASPSRC                               *
*        13)  $MODULE      SYS1.HASPSRC                               *
*        14)  $PADDR       SYS1.HASPSRC                               *
*        15)  $PCE         SYS1.HASPSRC                               *
*        16)  $RETURN      SYS1.HASPSRC                               *
*        17)  $SAVE        SYS1.HASPSRC                               *
*        18)  $STORE       SYS1.HASPSRC                               *
*        19)  IAZRESPA     SYS1.AMODGEN                               *
*        20)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       1K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J005FILT $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 COMMAND FILTER EXIT',                       X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $CAT,               GENERATE HASP CAT DSECT             X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               RPL                 GENERATE MVS  IFGRPL DSECT
         TITLE 'JES2 COMMAND FILTER EXIT'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E005FILT $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        COMPARE THE FIRST 2 CHARACTERS IN THE COMMAND FOR AN         *
*        ENTRY IN THE VALIDATION TABLE.                               *
*                                                                     *
***********************************************************************
         LA    R2,COMTABLE         LOAD ADDRESS OF THE COMMAND TABLE
COMLOOP  CLI   0(R2),X'FF'         END OF TABLE?
         BE    EXIT0               YES, BRANCH TO COMMAND OK EXIT
         CLC   0(2,R2),COMVERB     COMPARE TABLE TO ENTRY COMMAND
         BE    CKACTION            YES, GO CHECK FOR ACTION TO TAKE
         LA    R2,4(,R2)           INCREMENT TO NEXT TABLE ENTRY
         B     COMLOOP             LOOP UNTIL DONE
***********************************************************************
*                                                                     *
*        BRANCH TO THE INDICATED ROUTINE FOR THE COMMAND USING        *
*        THE OFFSET IN THE COMMAND ENTRY IN A BRANCH TABLE.           *
*                                                                     *
***********************************************************************
CKACTION LH    R15,2(R2)           LOAD OFFSET FROM COMMAND TABLE ENTRY
         B     BTABLE(R15)         BRANCH TO ROUTINE
BTABLE   B     EXIT0               00 - NOT USED
         B     EXIT0               04 - $AJ
         B     ROUT$CJ             08 - $CJ
         B     EXIT0               12 - $DJ   *** NULLIFIED ***
         B     ROUT$EJ             16 - $EJ
         B     EXIT0               20 - $HJ   *** NULLIFIED ***
         B     EXIT0               24 - $LJ   *** NULLIFIED ***
         B     EXIT0               28 - $OJ   *** NULLIFIED ***
         B     ROUT$PJ             32 - $PJ
         B     EXIT0               36 - $TJ   *** NULLIFIED ***
         B     ERROR1              40 - $TC
         B     ERROR1              44 - $TM
         B     ROUT$PQ             48 - $PQ   *** NULLIFIED ***
         B     EXIT0               52 - $QJ   *** NULLIFIED ***
         B     EXIT0               56 - $UH   *** NULLIFIED ***
         B     EXIT0               60 - $UA   *** NULLIFIED ***
         B     EXIT0               64 - NOT USED
         B     EXIT0               68 - NOT USED
         EJECT
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $AJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$AJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $CJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$CJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $DJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$DJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $EJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$EJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $HJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$HJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $LJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$LJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $OJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$OJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $PJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$PJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $TJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$TJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
ROUT$TJ1 BXH   R5,R6,ROUT$TJ2      GET NEXT OPERAND
         L     R15,0(R5)           LOAD ADDRESS OF PARAMETER
         CLC   0(2,R15),C#CEQ      SEE IF CHANGING JOB CLASS
         BE    ERROR3              YES, ERROR
         B     ROUT$TJ1            LOOP FOR NEXT OPERAND
ROUT$TJ2 B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $PQ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$PQ  BXH   R5,R6,ROUT$PQ1      GET NEXT OPERAND
         L     R15,0(R5)           LOAD ADDRESS OF PARAMETER
         CLC   0(3,R15),C#ALL      SEE IF USING THE ALL OPERAND
         BE    ERROR4              YES, ERROR
         B     ROUT$PQ             LOOP FOR NEXT OPERAND
ROUT$PQ1 B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $QJ COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$QJ  LA    R1,COMVERB+1        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $UH COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$UH  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         SPACE 3
***********************************************************************
*                                                                     *
*        CHECK OPERANDS FOR THE $UA COMMAND                           *
*                                                                     *
***********************************************************************
ROUT$UA  LA    R1,COMVERB+2        POINT PAST COMMAND NAME
         BAL   R4,CKRANGE          GO SEE OF JOB RANGE SELECTED
         LTR   R15,15              TEST RETURN CODE
         BNZ   ERROR2              NOT ZERO, RANGE, ERROR
         B     EXIT0               END OF CHECKING, GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                  E R R O R     R O U T I N E S                      *
*                                                                     *
***********************************************************************
ERROR1   MVC   COMMAND(LMSG1),MSG1 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG1            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR2   MVC   COMMAND(LMSG2),MSG2 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG2            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR3   B     EXIT0               ***** BYPASS THIS ERROR *****
         MVC   COMMAND(LMSG3),MSG3 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG3            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
ERROR4   MVC   COMMAND(LMSG4),MSG4 MOVE MESSAGE TO PCE WORK AREA
         LA    R0,LMSG4            SET MESSAGE LENGTH IN REG 0
         B     EXIT16              GO EXIT ROUTINE
         SPACE 3
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
EXIT0    LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT16   $STORE R0                 SAVE MESSAGE LENGTH
         LA    R15,16              SET RETURN CODE TO 16
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*                         C K R A N G E                               *
*                                                                     *
*        THIS ROUTINE EXAMINES THE OPRANDS POINTED TO BY REG 1        *
*        ON ENTRY FOR A JOB/STC/TSU RANGE.  NOTE THAT IN MOST         *
*        CASES, INDIVIDUAL JOB REQUESTS CAN BE MIXED WITH JOB         *
*        RANGES SO ALL OPERANDS MUST BE SCANNED UNTIL THE END         *
*        OF OPERANDS OR KEYWORDS ARE ENTERED.  AN EXAMPLE OF          *
*        THIS IS $DJ101,265,672-677,S33.  THIS TECHNIQUE IS           *
*        NOT USED OFTEN, BUT MUST BE DETECTED.                        *
*                                                                     *
*        IF A RANGE IS DETECTED, REGISTER 15 WILL CONTAIN AN 8,       *
*        OTHERWISE, IT WILL CONTAIN A ZERO.                           *
*                                                                     *
*        RETURN WILL BE MADE TO REGISTER 4 .                          *
*                                                                     *
***********************************************************************
CKRANGE  LR    R2,R1               SAVE START OF VALUE1
CKRANGE1 CLI   0(R1),C'0'          SEE IF FIRST CHARACTER JOB NUMBER
         BNL   CKRANGE3            YES, BRANCH
         CLI   0(R1),C'J'          SEE IF JOB NUMBER
         BE    CKRANGE2            YES, BRANCH
         CLI   0(R1),C'S'          SEE IF STC NUMBER
         BE    CKRANGE2            YES, BRANCH
         CLI   0(R1),C'T'          SEE IF TSO NUMBER
         BNE   CKRANGE5            NO, MUST BE A KEYWORD
CKRANGE2 CLI   1(R1),C'0'          SEE IF NEXT CHARACTER NUMERIC
         BL    CKRANGE5            NO, INVALID, OR A KEYWORD
         CLI   1(R1),C'9'          SEE IF NEXT CHARACTER NUMERIC
         BH    CKRANGE5            NO, INVALID, OR A KEYWORD
         LA    R1,1(R1)            INCREMENT PAST JOB TYPE
         LR    R2,R1               RESET START OF VALUE1
CKRANGE3 CLI   0(R1),C','          SEE IF END OF "JOB" NUMBER
         BE    CKRANGE4            YES, BRANCH
         CLI   0(R1),C' '          SEE IF END OF "JOB" NUMBER
         BE    CKRANGE5            YES, NO RANGE, SET RETURN CODE TO 0
         CLI   0(R1),C'-'          SEE IF JOB RANGE DIVIDER
         BE    CKRANGE6            YES, A RANGE, SET RETURN CODE TO 8
         CLI   0(R1),C'0'          SEE IF NUMERIC
         BL    CKRANGE5            NO, INVALID, OR KEYWORD
         CLI   0(R1),C'9'          SEE IF NUMERIC
         BH    CKRANGE5            NO, INVALID, OR KEYWORD
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         B     CKRANGE3            LOOP
CKRANGE4 LA    R1,1(,R1)           INCREMENT PAST ','
         B     CKRANGE             GO CHECK NEXT NUMBER
CKRANGE5 SLR   R15,R15             SET RETURN CODE TO ZERO
         B     CKRANGE7            GO EXIT THIS ROUTINE
CKRANGE6 LA    R15,8               SET RETURN CODE TO 8
CKRANGE7 BR    R4                  RETURN TO CALLER
         SPACE
PACKIT   PACK  $DOUBLE,0(0,R2)     **** EXECUTE ONLY ****
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
C#CEQ    DC    CL2'C='             CHARACTER CONSTANT 'C='
C#ALL    DC    CL3'ALL'            CHARACTER CONSTANT 'ALL'
MSG1     DC    C'COMMAND NOT ALLOWED IN THIS INSTALLATION'
LMSG1    EQU   *-MSG1
MSG2     DC    C'JOB RANGE NOT ALLOWED FOR THIS COMMAND'
LMSG2    EQU   *-MSG2
MSG3     DC    C'JOB CLASS MAY NOT BE CHANGED'
LMSG3    EQU   *-MSG3
MSG4     DC    C'THE ''ALL'' OPERAND IS NOT ALLOWED FOR THIS COMMAND'
LMSG4    EQU   *-MSG4
COMTABLE DC    CL2'AJ',AL2(4)      $AJ
         DC    CL2'AS',AL2(4)      $AS
         DC    CL2'AT',AL2(4)      $AT
         DC    CL2'CJ',AL2(8)      $CJ
         DC    CL2'CS',AL2(8)      $CS
         DC    CL2'CT',AL2(8)      $CT
         DC    CL2'DJ',AL2(12)     $DJ
         DC    CL2'DS',AL2(12)     $DS
         DC    CL2'DT',AL2(12)     $DT
         DC    CL2'EJ',AL2(16)     $EJ
         DC    CL2'ES',AL2(16)     $ES
         DC    CL2'ET',AL2(16)     $ET
         DC    CL2'HJ',AL2(20)     $HJ
         DC    CL2'HS',AL2(20)     $HS
         DC    CL2'HT',AL2(20)     $HT
         DC    CL2'LJ',AL2(24)     $LJ
         DC    CL2'LS',AL2(24)     $LS
         DC    CL2'LT',AL2(24)     $LT
         DC    CL2'OJ',AL2(28)     $OJ
         DC    CL2'OS',AL2(28)     $OS
         DC    CL2'OT',AL2(28)     $OT
         DC    CL2'PJ',AL2(32)     $PJ
         DC    CL2'PS',AL2(32)     $PS
         DC    CL2'PT',AL2(32)     $PT
         DC    CL2'TJ',AL2(36)     $TJ
         DC    CL2'TS',AL2(36)     $TS
         DC    CL2'TT',AL2(36)     $TT
         DC    CL2'TC',AL2(40)     $TC
         DC    CL2'TM',AL2(44)     $TM
         DC    CL2'PQ',AL2(48)     $PQ
         DC    CL2'QJ',AL2(52)     $QJ  USER COMMAND
         DC    CL2'QS',AL2(52)     $QS  USER COMMAND
         DC    CL2'QT',AL2(52)     $QT  USER COMMAND
         DC    CL2'UH',AL2(56)     $UH  USER COMMAND
         DC    CL2'UA',AL2(60)     $UA  USER COMMAND
         DC    4X'FF'              END OF TABLE
         EJECT
         LTORG
         EJECT
         $MODEND
         END
