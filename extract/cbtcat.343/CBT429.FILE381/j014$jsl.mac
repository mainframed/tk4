J014$JSL TITLE 'JOB QUEUE WORK SELECT EXIT FOR DEPENDENT JOB CONTROL'
***********************************************************************
*                                                                     *
* MODULE NAME - J014$JSL                                              *
*                                                                     *
* DESCRIPTIVE NAME - DEPENDENT JOB CONTROL                            *
*                                                                     *
* JES2 LEVEL - SP 2.2.0                                               *
*                                                                     *
* FUNCTION - THIS MODIFICATION SUPPORTS THE FUNB DEPENDENT JOB        *
*            SELECTION EXIT #14.    DEPENDENT JOB CONTROL GROUPS      *
*            INFORMATION CONCERNING THE VARIOUS JOB DEPENDENCIES      *
*            INTO ONE CONTROL BLOCK.  THE JECL STATEMENTS USED TO     *
*            DEFINE THESE DEPENDENCIES ARE:                           *
*                                                                     *
*            /*SETUP    USED TO NAME THE TAPE OR DISK VOLUMES         *
*                       NEEDED BY THE JOB.                            *
*                                                                     *
*            /*THREAD   SPECIFIES A NAME THAT WILL BE USED TO SINGLE  *
*                       THREAD ALL OTHER JOBS SPECIFYING THIS NAME.   *
*                       THIS STATEMENT CAN OPTIONALLY PLACE A JOB ON  *
*                       USER HOLD PENDING RELEASE BY ANOTHER JOB.     *
*                                                                     *
*            /*EXCLUDE  SPECIFIES ONE OR MORE JOB NAMES THAT, IF      *
*                       CURRENTLY EXECUTING, WILL KEEP THIS JOB       *
*                       FROM EXECUTING.  THE REVERSE IS NOT TRUE      *
*                       UNLESS THOSE JOBS EXCLUDE THIS ONE AS WELL.   *
*                                                                     *
*            QUEUE SCAN REPLACEMENT PERFORM THREAD/EXCLUDE PROCESSING.*
*                                                                     *
*                                                                     *
* EXIT ENVIRONMENT                                                    *
*                                                                     *
*    JES2 MAIN TASK                                                   *
*                                                                     *
* MODULE ATTRIBUTES                                                   *
*                                                                     *
*                                                                     *
* ENTRY POINTS = E014$SL - JOB QUEUE WORK SELECT                      *
*                                                                     *
*                                                                     *
* ENTRY POINT DOCUMENTATION:                                          *
*                                                                     *
*     REGISTERS AT ENTRY-                                             *
*                                                                     *
*              R0  = N/A                                              *
*              R1  = POINTER TO QGET PARAMETER LIST                   *
*                  = +00 - ADDRESS OF NODE TABLE                      *
*                  = +04 - ADDRESS OF CONTROL BLOCK                   *
*                  =       .  PIT  --  IF INWS                        *
*                  =       .  DCT  --  IF OJTWS OR OJTWSC             *
*                  = +08 - ADDRESS OF CLASS LIST (IF APPLICABLE)      *
*                  = +12 - ADDRESS OF JQE                             *
*                  = +16 - EACH BYTE SET AS FOLLOWS:                  *
*                  =       +16  LENGTH OF CLASS LIST                  *
*                  =       +17  QUEUE TYPE; REFER TO $QGET MACRO      *
*                  =       +18  WORK SELECTION TYPE FLAG              *
*                  =       +19  RESERVED                              *
*              R2  = N/A                                              *
*              R3  = N/A                                              *
*              R4  = N/A                                              *
*              R5  = N/A                                              *
*              R6  = N/A                                              *
*              R7  = N/A                                              *
*              R8  = N/A                                              *
*              R9  = N/A                                              *
*              R10 = N/A                                              *
*              R11 = HCT ADDRESS                                      *
*              R12 = N/A                                              *
*              R13 = PCE ADDRESS                                      *
*              R14 = RETURN ADDRESS                                   *
*              R15 = ENTRY ADDRESS                                    *
*                                                                     *
***********************************************************************
***********************************************************************
         SPACE
         COPY  $HASPGBL
J014$JSL $MODULE $HASPEQU,                                             X
               $PCE,               CONTAINS USING PCEDSECT,R13         X
               $CMB,                                                   X
               $DCT,                                                   X
               $PDDB,                                                  X
               $IOT,                                                   X
               $RDRWORK,                                               X
               $BUFFER,                                                X
               $JQE,                                                   X
               $JCT,                                                   X
               $CAT,                                                   X
               $JOE,                                                   X
               $NIT,                                                   X
               $TAB,                                                   X
               $MIT,                                                   X
               $KIT,                                                   X
               $HCT,                                                   X
               $PADDR,                                                 X
               $QGET,                                                  X
               $QSE,                                                   X
               RPL
         SPACE 1
E014$SL  $ENTRY BASE=R12,CSECT=YES PROVIDE PROCESSOR ENTRY POINT
         $SAVE                    SAVE CALLERS REGISTERS
         LR    R12,R15            LOAD UP BASE REGISTER
         LR    R2,R1              COPY $QGET PARAMETER LIST ADDR
         USING QGT,R2             R2  ADDRESSABILITY FOR QGT
*
*        LIMIT PROCESSING TO REQUESTS FOR JOBS AWAITING EXECUTION
*
         TM    QGTWSTP,$QGTLST+$QGTLSTC   OFFJT WORK SELECTION ??
         BM    X014RC00           YES, LET JES2 SCAN FOR JQE
         L     R10,$JOBQPTR       R10 => JOB QUEUE ORIGIN
         TM    QGTWSTP,$QGTINWS   INITIATOR CLASS LIST SEARCH ??
         BO    QLIST              YES, BR AROUND
         TM    QGTTYP,$XEQ        EXECUTION QUEUE REQUEST ??
         BNO   X014RC00           NO, LET JES2 SCAN FOR JQE
         CLI   QGTTYP,$XEQ        CONVERSION QUEUE REQUEST ??
         BE    X014RC00           YES, LET JES2 SCAN FOR JQE
         SPACE 1
QLIST    DS    0H
         ICM   R5,B'1111',QGTCLST GET CLASS LIST ADDRESS
         BZ    X014RC00           IF NO ADDRESS, LET JES2 SCAN
         XR    R3,R3              CLEAR REGISTER FOR CLASS COUNTER
*
*        RUN THROUGH THE SPECIFIED CLASS LIST.  CALCULATE THE
*        $QINDEX OFFSET OF EACH CLASS IN THE LIST AND SCAN THAT
*        CLASS QUEUE.
*
QNXTCLAS DS    0H
         CLM   R3,B'0001',QGTLSTLN  CLASS LIST EXHAUSTED ??
         BNL   X014RC12             YES, EXIT WITH NO JQE FOUND
         XR    R6,R6              CLEAR REG FOR IC
         IC    R6,0(,R5)          GET NEXT CLASS IN LIST
         CLM   R6,B'0001',$BLANKS END OF LIST ??
         BE    X014RC12           YES, EXIT WITH NO JQE FOUND
         LA    R5,1(,R5)          POINT TO NEXT CLASS IN LIST
         LA    R3,1(,R3)          INCREMENT CLASS LIST COUNTER
         N     R6,=A($XEQCLAS)    MODIFY CLASS FOR TABLE INDEX
         LA    R4,X'3F'           GET MASK FOR RELATIVE CAT ENTRY
         NR    R4,R6              GET RELATIVE CAT ENTRY
         MH    R4,=Y(CATLEN)      MULTIPLY BY CAT ENTRY LENGTH
         AL    R4,$CATABLE        POINT TO CAT ENTRY
         SPACE 1
         USING CAT,R4             CAT ADDRESSABILITY
         SPACE 1
*
*        IF CURRENT CLASS IS A TSU, STC, OR HELD CLASS, DON'T
*        SCAN THE CLASS QUEUE FOR JQES
*
         TM    CATJOBFL,JCTTSUJB+JCTSTCJB   TSU OR STC CLASS ??
         BNZ   QNXTCLAS                     YES, GET NEXT CLASS
         TM    CATJBOPT,JCTQHELD  IS THIS A HELD CLASS ??
         BO    QNXTCLAS           YES, GET THE NEXT CLASS
         B     QGTINDX            BR TO CONTINUE SEARCH
         SPACE 1
         DROP  R4                 KILL CAT ADDRESSABILITY
         SPACE 1
QGTCLAS  DS    0H
         XR    R6,R6              CLEAR R6 FOR INSERT
         IC    R6,QGTTYP          GET CLASS QUEUE
         SPACE 1
QGTINDX  DS    0H
         L     R15,$QINDEXA       GET JOB QUEUE..
         IC    R6,0(R6,R15)       ..HEADER OFFSET
         LTR   R6,R6              VALID QUEUE TYPE ??
         BZ    QCHKCLST           YES, CHECK IF RUNNING CLASS LIST
         LA    R6,$JQHEADS-$JQHEADL-(JQENEXT-JQE)(R6) SETUP Q SCAN
         USING JQE,R6             JQE ADDRESSABILITY
         SPACE 2
***********************************************************************
*        SCAN SELECTED QUEUE FOR A JQE                                *
***********************************************************************
         SPACE 1
QNEXT    DS    0H
         L     R6,JQENEXT         GET OFFSET OF NEXT JQE
         N     R6,$ZEROFFF        END OF THIS QUEUE ??
         BNZ   QCNTCHK            NO, CHECK-OUT THE JQE
         SPACE 1
QCHKCLST DS    0H
         TM    QGTWSTP,$QGTINWS   CLASS LIST BEING SCANNED ??
         BNO   X014RC12           NO, RETURN WITH NO JQE FOUND
         B     QNXTCLAS           ELSE GET NEXT CLASS
         SPACE 1
QCNTCHK  DS    0H
         ALR   R6,R10             R6 = ABSOLUTE JQE ADDRESS
*
*        CHECK FOR ACTIVE OR HELD JOB
*
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2+JQE1BUSY
         BNZ   QNEXT              BR IF THIS JQE HELD OR ACTIVE
         TM    JQEFLAG4,JQE4CAN   FORCE PURGE FLAG ON ??
         BO    QNEXT              YES, SKIP THIS JQE
         TM    JQEXFLG2,JQEXUHLD  JOB ON USER HOLD ??
         BO    QNEXT              YES, SKIP THIS JQE
         CLI   JQETYPE,$XMIT      IF JOB IS ON NJE TRANSMISSION QUEUE
         BE    QNEXT              YES, SKIP THIS JQE
         TM    JQEXFLG2,JQEXWSET  IS JOB AWAITING SETUP ?
         BO    QNEXT              YES, SKIP THIS ONE
         TM    JQETYPE,$XEQ       IS QUEUE TYPE XEQ?
         BNO   QNEXT              NO, SKIP THIS ONE
*
*        CHECK THAT ALL SPOOLS FOR THIS JOB ARE ONLINE
*
QSPOOLS  DS    0H
         LH    R15,$JQEMSKL       GET JQE SPOOL MASK LENGTH-1
         EX    R15,MBJQEMVC       GET SPOOLS USED BY THIS JOB
         NC    $SPMSKWA,$SPLSLCT  'AND' WITH QUALIFYING SPOOLS
         EX    R15,MBJQECLC       ALL REQUIRED SPOOLS MOUNTED ??
         BNE   QNEXT              NO, SKIP THIS JQE
*
*        CHECK FOR AFFINITY AND INDEPENDENT MODE
*
QCHKIND  DS    0H                 CHECK CPU/JOB INDEPENDENCE
         TM    $STATUS,$INDMODE   CPU IN INDEPENDENT MODE ??
         BO    QCPUIND            YES, GO CHECK THE JQE
         TM    JQEFLAG2,JQE2IND   JOB IN INDEPENDENT MODE ??
         BO    QNEXT              YES, SKIP THIS JQE
         B     QCHKAFF            NO,  BR AROUND
QCPUIND  DS    0H
         TM    JQEFLAG2,JQE2IND   JOB IN INDEPENDENT MODE ??
         BZ    QNEXT              NO, SKIP THIS JOB
QCHKAFF  DS    0H                 CHECK JOB CPU AFFFINITY
         XR    R15,R15            CLEAR R15 FOR INSERT
         IC    R15,$SIDAFF        GET THE SYSTEM ID (CAN BE 1-7)
         EX    R15,MBTSTAFF       MAY JOB RUN ON THIS SYSTEM ??
         BZ    QNEXT              NO, SKIP THIS JQE
         SPACE 1
***********************************************************************
*               AT THIS POINT WE HAVE A GOOD JQE                      *
***********************************************************************
***********************************************************************
*                                                                     *
* CHECK FOR THREAD/EXCLUDE RESTRICTIONS                               *
*                                                                     *
***********************************************************************
QGETDJC  LA    R7,$XEQ                  PREPARE
         L     R15,$QINDEXA               TO SCAN
         IC    R7,0(R7,R15)               EXECUTION BY
         XR    R8,R8                      CLASS + CNV + STC + TSU
*
*        POINT TO NEXT EXECUTION QUEUE ANCHOR
*
QNXTQUE  DS    0H
         LA    R8,$JQHEADL(,R8)    ADD TO INDEX INTO THE QUEUE
         CL    R8,=A($JQCLSSZ+(3*$JQHEADL)) ANOTHER QUEUE??
         BH    X014RC08            NO, WE HAVE A GOOD JOB
         LA    R1,0(R7,R8)         PREPARE TO SCAN NEXT EXECUTION
         LA    R1,$JQHEADS-(2*$JQHEADL)-(JQENEXT-JQE)(R1) QUEUE
*
*        POINT TO NEXT JQE IN CURRENT EXECUTION QUEUE
*
QNXTJQE  DS    0H
         L     R1,JQENEXT-JQE(R1) OFFSET OF NEXT JQE.
         N     R1,$ZEROFFF         END OF EXECUTION QUEUE...
         BZ    QNXTQUE             BR IF END OF CURRENT QUEUE
         ALR   R1,R10              CONVERT OFFSET TO ABSOLUTE ADR
         TM    JQETYPE-JQE(R1),$XEQ        IS IT $XEQ QUEUE ??
         BNO   QNXTJQE             NO, GO GET NEXT JQE
         CLI   JQETYPE-JQE(R1),$XMIT       IS IT $XMIT QUEUE ??
         BE    QNXTJQE             YES, GO GET NEXT JQE
         TM    JQEFLAG1-JQE(R1),JQE1BUSY IS OTHER ACTIVE?
         BZ    QNXTJQE             NO - GET NEXT JQE
         CLR   R6,R1               IS IT OUR JQE?                @
         BE    QNXTJQE             YES, GO GET NEXT JQE
         SPACE 1
*
*        R1 POINTS TO A JQE IN THE EXECUTION QUEUE
*
         TM    JQEXFLG2,JQEXTHRD+JQEXXCLU JOB HAVE THREAD OR EXCLUDE
         BZ    X014RC08            NO. USE THIS JOB
         TM    JQEXFLG2,JQEXTHRD   DID JOB USE THREAD
         BZ    QEXCL               NO. TEST FOR EXCLUDE
         CLC   JQEXTHRN(8),JQEJNAME-JQE(R1) THREAD NAME = JOB NAME?
         BE    QNEXT               YES. DON'T SELECT THIS JQE
         TM    JQEXFLG2-JQE(R1),JQEXTHRD DID OTHER JOB USE THREAD
         BZ    QEXCL               NO. TRY EXCLUDE
*
*        BOTH JOBS USED THREAD CARD NOW SEE IF SAME NAME
*
CKTHRD2  CLC   JQEXTHRN(8),JQEXTHRN-JQE(R1) IS THREAD NAME EQUAL
         BE    QNEXT               YES. DON'T SELECT THIS JQE
*
*        SEE IF SELECTED JQE SHOULD RUN AFTER OTHER JQE
QEXCL    DS    0H
         TM    JQEXFLG2,JQEXXCLU   DID JOB USE EXCLUDE?
         BZ    QNXTJQE             NO. GET ANOTHER EXECUTING JQE
         CLC   JQEXEXCN(8),JQEJNAME-JQE(R1) EXCLUDE NAME = JOB NAME?
         BE    QNEXT               YES. DON'T SELECT THIS JQE
         TM    JQEXFLG2-JQE(R1),JQEXTHRD DID OTHER JOB USE THREAD
         BZ    QNXTJQE             NO. GET ANOTHER EXECUTING JQE
         CLC   JQEXEXCN(8),JQEXTHRN-JQE(R1) EXCLUDE NAME = THREAD NAME?
         BE    QNEXT               YES. DON'T SELECT THIS JQE
         B     QNXTJQE             GET ANOTHER EXECUTING JQE
*
         SPACE
         TITLE 'HASP $QGET JOB QUEUE WORK SELECT -- RETURNS'
***********************************************************************
*                                                                     *
*      J 0 1 4 $ J S L   C O M M O N   R E T U R N S                  *
*                                                                     *
***********************************************************************
         SPACE 2
X014RC12 DS    0H                 JQE NOT FOUND
         LA    R15,12             SET RC=12
         B     X014RTN            BR TO RETURN
         SPACE 1
X014RC08 DS    0H                 JQE SELECTED BY $QGET EXIT
         ST    R6,QGTJQE          PLACE JQE ADDRESS IN $QGET LIST
         LA    R15,8              SET RC=8
         B     X014RTN            BR TO RETURN
         SPACE 1
X014RC04 DS    0H                 CONTINUE + IGNORE OTHER EXITS
         LA    R15,4              SET RC=4
         B     X014RTN            BR TO RETURN
         SPACE 1
X014RC00 DS    0H                 CONTINUE NORMAL PROCESSING
         XR    R15,R15            SET RC=0
         SPACE 1
X014RTN  DS    0H
         $RETURN RC=(R15)          RETURN TO MAINLINE HASPNUC
         TITLE 'HASP $QGET JOB QUEUE WORK SELECT -- CONSTANTS'
***********************************************************************
*                                                                     *
*        M B X 0 1 4   C O N S T A N T S                              *
*                                                                     *
***********************************************************************
         SPACE 2
         LTORG                    EXPAND LITERAL POOL HERE
         SPACE 1
MBJQEMVC MVC   $SPMSKWA(*-*),JQESUMSK  EXECUTED INSTRUCTION
MBJQECLC CLC   $SPMSKWA(*-*),JQESUMSK  EXECUTED INSTRUCTION
MBTSTAFF TM    JQEFLAG2,*-*       EXECUTED INSTRUCTION
         SPACE 1
QCTLSNAM DC    CL8' '     SELECTED JQE CNTL NAME WORKAREA
QCTLBNAM DC    CL8' '     BUSY (ACTIVE) JQE CNTL NAME WORKAREA
QCTLSFLG DC    X'00'      SELECTED JQE CNTL NAME STATUS INDICATOR
QCTLBFLG DC    X'00'      BUSY JQE CNTL NAME STATUS INDICATOR
QCTLSHR  EQU   B'11000000'         SHARED
QCTLEXC  EQU   B'01000000'         EXCLUSIVE
QCTLMUT  EQU   B'10000000'         MUTUAL
         DROP  ,
         $MODEND
         END
