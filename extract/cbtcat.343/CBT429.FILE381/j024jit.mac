         TITLE 'JES2 POST INITIALIZATION EXIT'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED TO RUN RIGHT BEFORE       *
*        JES2 INITIALIZATION ENDS TO MODIFY JES2 CONTROL BLOCKS       *
*        AND CREATE OUR OWN CONTROL BLOCKS.                           *
*                                                                     *
*        THIS EXIT WILL DEFINE ITS OWN DTE ATTACH CONTROL             *
*        BLOCK FOR TWO SUBTASKS AND ANCHOR IT OFF OF THE              *
*        MCT.  THE TWO SUBTASKS WILL THEN BE STARTED USING            *
*        THE STANDARD DTE INTERFACE.                                  *
*                                                                     *
*        THE FIRST SUBTASK IS A JOB INFORMATION TASK.  IT             *
*        WILL RECEIVE REQUESTS FOR JOB INFORMATION FROM               *
*        VARIOUS JES2 PROCESSORS TO RETURN JOB RELATED                *
*        INFORMATION ON THE BASIS OF JOBNAME AND/OR OUTPUT            *
*        GROUP-ID.  THIS SUBTASK WILL READ THE JOB INFORMATION        *
*        FROM A VSAM FILE WHICH IS MAINTAINED BY A CICS               *
*        SYSTEM.  THIS INFORMATION WILL BE USED PRIMARILY             *
*        TO EXPAND THE INFORMATION ON A USER JOB SEPARATOR            *
*        AT PRINT TIME OR TO NOTIFY UCC7 OF THE COMPLETION            *
*        OF PRINT PROCESSING FOR A REPORT GROUP.                      *
*                                                                     *
*        THE SECOND SUBTASK IS A UCC7 SUBTASK WHICH WILL              *
*        DEMAND A NETWORK BASED ON THE INFORMATION IN THE             *
*        JITB.  THIS WILL NORMALLY BE REQUESTED AT THE END            *
*        OF A JES2 EVENT SUCH AS PRINT PROCESSING.                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST UNION NATIONAL BANK                    *
*                        301 SOUTH TRYON STREET                       *
*                        CHARLOTTE, N.C.  28288                       *
*                        (704) 374-2427                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J 0 2 4 J I T            *
*                                                                     *
*        01)  $$WTO        SYS1.HASPSRC                               *
*        02)  $AMODE       SYS1.HASPSRC                               *
*        03)  $DTE         SYS1.HASPSRC                               *
*        04)  $DTETAB      SYS1.HASPSRC                               *
*        05)  $ENTRY       SYS1.HASPSRC                               *
*        06)  $ERA         SYS1.HASPSRC                               *
*        07)  $FCSDTE      SYS1.HASPSRC (USER)                        *
*        08)  $FCSJITB     SYS1.HASPSRC (USER)                        *
*        09)  $FCSUCT      SYS1.HASPSRC (USER)                        *
*        10)  $HASPEQU     SYS1.HASPSRC                               *
*        11)  $HASPGBL     SYS1.HASPSRC                               *
*        12)  $HCT         SYS1.HASPSRC                               *
*        13)  $MID         SYS1.HASPSRC                               *
*        14)  $MIT         SYS1.HASPSRC                               *
*        15)  $MODEND      SYS1.HASPSRC                               *
*        16)  $MODULE      SYS1.HASPSRC                               *
*        17)  $PADDR       SYS1.HASPSRC                               *
*        18)  $PCE         SYS1.HASPSRC                               *
*        19)  $SETRP       SYS1.HASPSRC                               *
*        20)  $XECB        SYS1.HASPSRC                               *
*        21)  ABEND        SYS1.MACLIB                                *
*        22)  CLOSE        SYS1.MACLIB                                *
*        23)  DYNALLOC     SYS1.MACLIB                                *
*        24)  ESTAE        SYS1.MACLIB                                *
*        25)  GENCB        SYS1.MACLIB                                *
*        26)  GET          SYS1.MACLIB                                *
*        27)  IEZWPL       SYS1.AMODGEN                               *
*        28)  IFGACB       SYS1.MACLIB                                *
*        29)  IFGRPL       SYS1.MACLIB                                *
*        30)  IHAECB       SYS1.MACLIB                                *
*        31)  LOAD         SYS1.MACLIB                                *
*        32)  MODCB        SYS1.MACLIB                                *
*        33)  MRKBFR       SYS1.MACLIB                                *
*        34)  OPEN         SYS1.MACLIB                                *
*        35)  POST         SYS1.MACLIB                                *
*        36)  RETURN       SYS1.MACLIB                                *
*        37)  SAVE         SYS1.MACLIB                                *
*        38)  SU7SVC       SYS1.UCC7.MACLIB                           *
*        39)  WTO          SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       10K                                              *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J024JIT  $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 POST INITIALIZATION EXIT',                  X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $DTE,               GENERATE HASP DTE DSECT             X
               $DTETAB,            GENERATE HASP DTE TABLE DSECT       X
               $SCANTAB,           GENERATE HASP SCANTABL TABLE DSECT  X
               $ERA,               GENERATE HASP ERA DSECT             X
               $HCT,               GENERATE HASP HCT DSECT             X
               $PCE,               GENERATE HASP PCE DSECT             X
               $XECB,              GENERATE HASP EXT ECB DSECT         X
               $MCT,               GENERATE HASP MCT DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               ACB,                GENERATE MVS  IFGACB DSECT          X
               RPL,                GENERATE MVS  IFGRPL DSECT          X
               WPL                 GENERATE MVS  WPL DSECT
               SPACE 3
         EJECT
***********************************************************************
*                                                                     *
*        USER ADDITION OF THE DTE                                     *
*                                                                     *
***********************************************************************
DTE      DSECT
         ORG  DTEWORK
         DS   0CL2048              2048 BYTE EXTENSION
         $FCSDTE ,                 MAP THE COMMON DTE EXTENSION AREA
***********************************************************************
*                                                                     *
*        WORK AREA USED BY JOB INFORMATION FILE ROUTINE               *
*                                                                     *
***********************************************************************
SAVER14  DS    F                   ROUTINE RETURN ADDRESS
MYACBADD DS    F                   ADDRESS OF OUR ACB
MYRPLADD DS    F                   ADDRESS OF OUR RPL
OPENL    OPEN  (,INPUT),MF=L       OPEN LIST FORM
CLOSEL   CLOSE (0),MF=L            CLOSE LIST FORM
KEY      DS    CL16                VSAM FILE KEY
LDDN     DS    H                   LENGTH OF DDNAME
DDNAME   DS    CL8                 DDNAME OF VSAM FILE
LDSN     DS    H                   LENGTH OF DSNAME
DSNAME   DS    CL44                DSNAME OF VSAM FILE
INREC    DS    CL256               VSAM RECORD
RLIST    DS    20F                 REMOTE PARAMETER LIST
DBLJ1    DS    D                   DOUBLE WORD WORK AREA 1
DBLJ2    DS    D                   DOUBLE WORD WORK AREA 2
ERRCODE1 DS    CL5                 DYNFAIL WORK AREA
ERRCODE2 DS    CL5                 DYNFAIL WORK AREA
         SPACE 3
***********************************************************************
*                SVC 99 INPUT REQUEST BLOCK                           *
***********************************************************************
S99RBP   DS     0F
S99RBPTR DC     X'80',AL3(S99RB)   REQUEST BLOCK POINTER
S99RB    DS     0F                 REQUEST BLOCK
S99RBLN  DC     AL1(20)            LENGTH OF REQUEST BLOCK
S99VERB  DC     X'01'              VERB CODE
S99VRBAL EQU    X'01'              ALLOCATION
S99VRBUN EQU    X'02'              UNALLOCATION
S99VRBCC EQU    X'03'              CONCATENATION
S99VRBDC EQU    X'04'              DECONCATENATION
S99VRBRI EQU    X'05'              REMOVE IN-USE
S99VRBDN EQU    X'06'              DDNAME ALLOCATION
S99VRBIN EQU    X'07'              INFORMATION RETRIEVAL
S99FLAG1 DS     0CL2               FLAGS
S99FLG11 DC     XL1'00'            FIRST FLAGS BYTE
S99ONCNV EQU    X'80'              ALLOC FUNCTION-DO NOT USE AN
*                                  EXISTING ALLOCATION THAT DOES
*                                  NOT HAVE THE CONVERTIBLE
*                                  ATTRIBUTE TO SATISFY A REQUEST
S99NOCNV EQU    X'40'              ALLOC FUNCTION-DO NOT USE AN
*                                  EXISTING ALLOCATION TO SATISFY
*                                  THE REQUEST
S99NOMNT EQU    X'20'              ALLOC FUNCTION-DO NOT MOUNT
*                                  VOLUMES OR CONSIDER OFFLINE
*                                  UNITS (THIS FLAG OVERRIDES
*                                  S99MOUNT AND S99OFFLN BELOW)
S99JBSYS EQU    X'10'              ALLOC FUNC-JOB RELATED SYSOUT
S99CNENQ EQU    X'08'              ALL FUNCTIONS-ISSUE A
*                                  CONDITIONAL ENQ ON TIOT
*                                  RESOURCE. IF NOT
*                                  AVAILABLE, RETURN AN
*                                  ERROR CODE TO USER.
S99FLG12 DC     XL1'00'            SECOND BYTE OF FLAGS
S99RSC   DS     0CL4               REASON CODE FIELDS
S99ERROR DC     XL2'0000'          ERROR REASON CODE
S99INFO  DC     XL2'0000'          INFORMATION REASON CODE
S99TXTPP DC     A(S99TUPL)         ADDR OF LIST OF TEXT UNIT PTRS
S99RSV01 DC     F'0'               RESERVED
S99FLAG2 DS     0CL4               FLAGS FOR AUTHORIZED FUNCTIONS
S99FLG21 DC     XL1'00'            FIRST BYTE OF FLAGS
S99WTVOL EQU    X'80'              ALLOC FUNCTION-WAIT FOR
*                                  VOLUMES
S99WTDSN EQU    X'40'              ALLOC FUNCTION-WAIT FOR DSNAME
S99NORES EQU    X'20'              ALLOC FUNCTION-DO NOT DO
*                                  DATA SET RESERVATION
S99WTUNT EQU    X'10'              ALLOC FUNCTION-WAIT FOR UNITS
S99OFFLN EQU    X'08'              ALLOC FUNCTION-CONSIDER OFFLINE
*                                  UNITS
S99TIONQ EQU    X'04'              ALL FUNCTIONS-TIOT ENQ ALREADY
*                                  DONE
S99CATLG EQU    X'02'              ALLOC FUNCTION-SET SPECIAL
*                                  CATALOG DATA SET INDICATORS
S99MOUNT EQU    X'01'              ALLOC FUNCTION-MAY MOUNT VOLUME
S99FLG22 DC     XL1'00'            SECOND BYTE OF FLAGS
S99UDEVT EQU    X'80'              ALLOCATION FUNCTION-UNIT NAME
*                                  PARM IS A DEVICE TYPE
S99PCINT EQU    X'40'              ALLOC FUNCTION-ALLOC
*                                  PRIVATE CATALOG TO
*                                  INITIATOR
S99FLG23 DC     XL1'00'            THIRD BYTE OF FLAGS
S99FLG24 DC     XL1'00'            FOURTH BYTE OF FLAGS
S99RBEND EQU    *                  END MARKER
***********************************************************************
* SVC 99 TEXT UNIT POINTER LIST                                       *
***********************************************************************
         DS     0F                 TEXT UNIT POINTER LIST
S99TUPL  DC     10A(0)             ROOM FOR 10 TEXT UNITS
         SPACE 3
         DS    0H
TUDDN    DC    X'0001',AL2(1),AL2(8),CL8' '         DDNAME
         DS    0H
TUDSN    DC    X'0002',AL2(1),AL2(44),CL44' '       DSNAME
         DS    0H
TUDISP   DC    X'0004',AL2(1),AL2(01),XL01'08'      DISP=SHR
         DS    0H
TURDDN   DC    X'0055',AL2(1),AL2(08),CL08' '       NEW DDNAME
         ORG   DTEUEXTN            USER WORK EXTENSION AREA
DBLU1    DS    D                   DOUBLE WORD WORK AREA 1
DBLU2    DS    D                   DOUBLE WORD WORK AREA 2
UCC7SVCA DS    F                   EPA ADDRESS OF SASSSVCA
UCC7CMD  DS    CL100               COMMAND LIST PASSED TO SASSSVCA
         SU7SVC TYPE=DA,SECT=NO    MAP THE SASSSVCA PARM LIST
J024JIT  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
         $FCSUCT ,                 GENERATE THE UCT DSECT
J024JIT  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
         $FCSJITB ,                GENERATE THE JITB DSECT
J024JIT  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
***********************************************************************
*                                                                     *
*        ACTUAL JES2 EXIT ENTRY POINT                                 *
*                                                                     *
***********************************************************************
E024JIT  $ENTRY  BASE=(R10,R12)
         $SAVE
         LR    R10,R15             ESTABLISH FIRST BASE REGISTER
         LA    R12,4095(R10)       ESTABLISH SECOND
         LA    R12,1(R12)              BASE REGISTER
         USING HCT,R11             ESTABLISH ADDRESSABILITY TO HCT
         ICM   R9,15,$UCT          GET UCT ADDRESS
         BZ    EXIT24EN            ZERO, JUST GET OUT
         USING UCT,R9              ESTABLISH ADDRESSABILITY TO UCT
         LA    R1,JOBINFO          LOAD EPA ADDRESS OF SUBTASK
         ST    R1,UCTJITA          SAVE EPA ADDRESS IN UCT
         LA    R1,UCC7TASK         LOAD EPA ADDRESS OF SUBTASK
         ST    R1,UCTUC7A          SAVE EPA ADDRESS IN UCT
***********************************************************************
*        SAVE USER DTETAB ADDRESS IN MCT                              *
***********************************************************************
         L     R8,$MCT             LOAD ADDRESS OF MASTER CONTROL TABLE
         USING MCT,R8              ESTABLISH ADDRESSABILITY TO MCT
         LA    R1,DTES             LOAD ADDRESS OF USER DTETABLE
         ST    R1,MCTDTETU         SAVE ADDRESS IN MCT
         DROP  R8                  DROP ADDRESSABILITY TO MCT
***********************************************************************
*        START JOB INFORMATION SUBTASK                                *
***********************************************************************
         $DTEDYN ATTACH,WAIT=ECB,PARM=HCT,ID=255,ERRET=ERROR02
         ST    R1,UCTJITDT         SAVE DTE ADDRESS IN UCT
         LR    R8,R1               SET ADDRESS OF DTE
         USING DTE,R8              SET ADDRESSABILITY TO DTE
         XC    DTEFQUE,DTEFQUE     ZERO THE WORK QUEUE POINTER
         MVC   DTEUMSG(LWTO4),WTO4 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE INIT COMPLETE MESSAGE
         DROP  R8                  DROP ADDRESSABILITY TO DTE
***********************************************************************
*        START UCC7 SUBTASK                                           *
***********************************************************************
         $DTEDYN ATTACH,WAIT=ECB,PARM=HCT,ID=254,ERRET=ERROR03
         ST    R1,UCTUC7DT         SAVE DTE ADDRESS IN UCT
         LR    R8,R1               SET ADDRESS OF DTE
         USING DTE,R8              SET ADDRESSABILITY TO DTE
         XC    DTEFQUE,DTEFQUE     ZERO THE WORK QUEUE POINTER
         MVC   DTEUMSG(LWTO5),WTO5 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE INIT COMPLETE MESSAGE
***********************************************************************
*                        C L E A N    U P                             *
***********************************************************************
EXIT24EN $RETURN RC=0
         EJECT
***********************************************************************
*                     E R R O R    R O U T I N E S                    *
***********************************************************************
ERROR01  MVC   DTEUMSG(LWTO1),WTO1 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     EXIT24EN            GET OUT
ERROR02  MVC   DTEUMSG(LWTO2),WTO2 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     EXIT24EN            GET OUT
ERROR03  MVC   DTEUMSG(LWTO3),WTO3 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     EXIT24EN            GET OUT
         DROP  R8                  DROP ADDRESSABILITY TO DTE
         EJECT
***********************************************************************
*                     C O N S T A N T S                               *
***********************************************************************
         LTORG
         SPACE 3
         $MID  960
WTO1     WTO   '&MID.PREVIOUSLY DEFINED UCT FOUND DURING JOB INFORMATIOX
               N ROUTINE INITIALIZATION',                              X
               ROUTCDE=(2),DESC=(4),MF=L
LWTO1    EQU   *-WTO1
WTO2     WTO   '&MID.UNABLE TO ATTACH JOB INFORMATION ROUTINE SUBTASK',X
               ROUTCDE=(2),DESC=(4),MF=L
LWTO2    EQU   *-WTO2
WTO3     WTO   '&MID.UNABLE TO ATTACH UCC7 SUBTASK',                   X
               ROUTCDE=(2),DESC=(4),MF=L
LWTO3    EQU   *-WTO3
WTO4     WTO   '&MID.JOB INFORMATION SUBTASK INITIALIZATION COMPLETE', X
               ROUTCDE=(2),DESC=(4),MF=L
LWTO4    EQU   *-WTO4
WTO5     WTO   '&MID.UCC7 SUBTASK INITIALIZATION COMPLETE',            X
               ROUTCDE=(2),DESC=(4),MF=L
LWTO5    EQU   *-WTO5
         SPACE 3
         $DTETAB TABLE=USER
DTES     $DTETAB NAME=JOBINFO,ID=255,EPNAME=JOBINFO,                   X
               EPLOC=UCTJITA,HEAD=UCTJITH,SZERO=NO,                    X
               WORKLEN=2048
         $DTETAB NAME=UCC7TASK,ID=254,EPNAME=UCC7TASK,                 X
               EPLOC=UCTUC7A,HEAD=UCTUC7H,SZERO=NO,                    X
               WORKLEN=2048
         $DTETAB TABLE=END
         EJECT
         PUSH USING
         TITLE 'JES2 JOB INFORMATION ROUTINE SUBTASK'
***********************************************************************
*                                                                     *
*        ACTUAL JOB INFORMATION ROUTINE SUBTASK ENTRY POINT           *
*                                                                     *
***********************************************************************
JOBINFO  $ENTRY  BASE=(R10,R12)
         LR    R10,R15             ESTABLISH FIRST BASE REGISTER
         LA    R12,4095(R10)       ESTABLISH SECOND
         LA    R12,1(R12)              BASE REGISTER
         LR    R13,R1              SET NEW SAVE AREA ADDRESS
         USING DTE,R13             ESTABLISH ADDRESSABILITY TO DTE
         L     R11,DTEPARM         LOAD HCT ADDRESS FROM DTE
         USING HCT,R11             ESTABLISH ADDRESSABILITY TO HCT
         $AMODE 31                 GO TO AMODE 31
***********************************************************************
*                                                                     *
*        SET UP ESTAE ENVIRONMENT                                     *
*                                                                     *
***********************************************************************
         MVC   DTEVRXAD,$ZEROS     SET RECOVERY VRA EXIT ADDRESS
         MVC   DTEESXAD,$ZEROS     SET RECOVERY CLEAN UP EXIT ADDR
         MVC   DTERTXAD,=A(JINFRETR) SET RECOVERY RETRY EXIT ADDRESS
         L     R2,$STABNDA         LOAD SUBTASK ESTAE RTN ADDRESS
         LR    R3,R13              SET DTE ADDRESS
         MVC   DTEAWRKA(LESTAEL1),ESTAEL1 SET ESATE LIST FORM
         ESTAE (2),PARAM=(3),RECORD=YES,MF=(E,DTEAWRKA)
         LA    R14,DTEWORK         SET 'TO' ADDRESS
         LA    R15,2048            SET   'TO'   LENGTH
         SLR   R0,R0               CLEAR 'FROM' ADDRESS
         SLR   R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE WORK AREA
***********************************************************************
*                                                                     *
*        FINISH INITIALIZATION PROCESSING                             *
*                                                                     *
***********************************************************************
         MVC   DTEUMSG(LWTOJIM1),WTOJIM1 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE INIT STARTED MESSAGE
JINFRIN  TM    UCTJITOP,UCTJITDR   SEE IF INITIAL OPTION OF DRAINED
         BO    JINFACT             YES, BYPASS INITIALIZATION
         BAL   R14,JINFINIT        GO INITIALIZE FILE PROCESSING
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFACT             NOT ZERO, BAD
         BAL   R14,JINFALOC        GO ALLOCATE JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFACT             NOT ZERO, BAD
         BAL   R14,JINFOPEN        GO OPEN JOB INFO FILE
JINFACT  OI    DTEFLAG1,DTE1ACTV   TURN ON ACTIVE BIT
         POST  DTEIECB             POST INITIALIZATION COMPLETE
JINFWAIT TM    DTEFLAG1,DTE1TERM   SEE IF TERMINATION REQUESTED
         BO    JINFTERM            YES, BRANCH
         WAIT  ECB=DTEWECB         WAIT ON WORK
         XC    DTEWECB,DTEWECB     ZERO THE ECB AGAIN
***********************************************************************
*                                                                     *
*        GET A JITB FROM THE LIFO QUEUE OF PENDING WORK               *
*                                                                     *
***********************************************************************
JINFNEXT TM    DTEFLAG1,DTE1TERM   SEE IF TERMINATION REQUESTED
         BO    JINFTERM            YES, BRANCH
         ICM   R7,15,DTEFQUE       CHECK QUEUE POINTER
         USING JITB,R7             SET ADDRESSABILITY TO JITB
         BZ    JINFWAIT            ZERO, NONE, GO WAIT FOR WORK
JINFUNCH L     R1,JITBCH           LOAD ADDRESS OF NEXT JITB
         CS    R7,R1,DTEFQUE       REMOVE JITB FROM QUEUE
         BNE   JINFUNCH            QUEUE CHANGED, LOOP
         CLC   JITBID,=C'JITB'     SEE IF REALLY A JITB
         BNE   JINFABND            NO, ERROR
         ST    R7,DTEJITBA         SAVE ADDRESS OF CURRENT JITB
         MVI   JITBSTAT,0          ZERO THE STATUS FLAGS
***********************************************************************
*                                                                     *
*        TEST FOR READ REQUEST                                        *
*                                                                     *
***********************************************************************
JINFOP1  TM    JITBFLG,JITBREAD    SEE IF REQUEST FOR READ
         BNO   JINFOP2             NO, BRANCH
         TM    DTEFLAGS,JOPEN      SEE IF FILE OPENED
         BNO   JINFPOST            FILE NOT OPENED, IGNORE THIS REQUEST
         MVC   KEY,JITBKEY         SET VSAM FILE KEY
         BAL   R14,JINFGET         GO READ JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BZ    JINFOUND            ZERO, FOUND THE RECORD
         B     JINFPOST            NOT ZERO, RECORD NOT FOUND
         EJECT
***********************************************************************
*                                                                     *
*        TEST FOR START FILE REQUEST                                  *
*                                                                     *
***********************************************************************
JINFOP2  TM    JITBFLG,JITBSTAR    SEE IF START FILE REQUEST
         BNO   JINFOP3             NO, BRANCH
         TM    DTEFLAGS,JALLOC+JOPEN SEE IF FILE HAS BEEN STOPPED
         BNZ   JINFOP2A            NO, ERROR
         BAL   R14,JINFINIT        GO INITIALIZE FILE PROCESSING
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP2B            NOT ZERO, BAD
         BAL   R14,JINFALOC        GO ALLOCATE JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP2B            NOT ZERO, BAD
         BAL   R14,JINFOPEN        GO OPEN JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP2B            NOT ZERO, BAD
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         B     JINFPOST            ZERO, GO GET ANOTHER JITB (IF ONE)
JINFOP2A MVC   DTEUMSG(LWTOJIM4),WTOJIM4 FILE NOT STOPPED MSG
         $$WTO DTEUMSG             WRITE MESSAGE
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
JINFOP2B MVC   DTEUMSG(LWTOJIM5),WTOJIM5 FILE CANNOT BE STARTED MSG
         $$WTO DTEUMSG             WRITE MESSAGE
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
         EJECT
***********************************************************************
*                                                                     *
*        TEST FOR STOP FILE REQUEST                                   *
*                                                                     *
***********************************************************************
JINFOP3  TM    JITBFLG,JITBSTOP    SEE IF STOP FILE REQUEST
         BNO   JINFOP4             NO, BRANCH
         TM    DTEFLAGS,JALLOC+JOPEN SEE IF FILE HAS BEEN STOPPED
         BZ    JINFOP3A            YES, ERROR
         BAL   R14,JINFCLOS        GO CLOSE THE JOB INFO FILE
         BAL   R14,JINFREE         GO FREE THE JOB INFO FILE
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         TM    DTEFLAGS,JALLOC+JOPEN SEE IF FILE HAS BEEN STOPPED
         BNZ   JINFOP3B            NO, ERROR
         B     JINFPOST            ZERO, GO GET ANOTHER JITB (IF ONE)
JINFOP3A MVC   DTEUMSG(LWTOJIM6),WTOJIM6 FILE NOT STARTED MSG
         $$WTO DTEUMSG             WRITE MESSAGE
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
JINFOP3B MVC   DTEUMSG(LWTOJIM7),WTOJIM7 FILE CANNOT BE STOPPED MSG
         $$WTO DTEUMSG             WRITE MESSAGE
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
         EJECT
***********************************************************************
*                                                                     *
*        TEST FOR RESTART FILE REQUEST                                *
*                                                                     *
***********************************************************************
JINFOP4  TM    JITBFLG,JITBREST    SEE IF RESTART FILE REQUEST
         BNO   JINFPOST            UNKNOWN REQUEST, IGNORE IT
         TM    DTEFLAGS,JALLOC+JOPEN SEE IF FILE HAS BEEN STOPPED
         BZ    JINFOP4A            YES, BRANCH
         BAL   R14,JINFCLOS        GO CLOSE THE JOB INFO FILE
         BAL   R14,JINFREE         GO FREE THE JOB INFO FILE
         TM    DTEFLAGS,JALLOC+JOPEN SEE IF FILE HAS BEEN STOPPED
         BNZ   JINFOP4B            NO, ERROR
JINFOP4A BAL   R14,JINFINIT        GO INITIALIZE FILE PROCESSING
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP4B            NOT ZERO, BAD
         BAL   R14,JINFALOC        GO ALLOCATE JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP4B            NOT ZERO, BAD
         BAL   R14,JINFOPEN        GO OPEN JOB INFO FILE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFOP4B            NOT ZERO, BAD
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
JINFOP4B MVC   DTEUMSG(LWTOJIM8),WTOJIM8 FILE CANNOT BE RESTARTED MSG
         $$WTO DTEUMSG             WRITE MESSAGE
         B     JINFPOST            GO GET ANOTHER JITB (IF ONE)
         EJECT
***********************************************************************
*                                                                     *
*        MATCH FOUND                                                  *
*                                                                     *
***********************************************************************
JINFOUND MVC   JITBREC,INREC       MOVE VSAM RECORD TO JITB
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
***********************************************************************
*                                                                     *
*        END OF PROCESSING FOR THIS JITB                              *
*                                                                     *
***********************************************************************
JINFPOST XC    DTEJITBA,DTEJITBA   ZERO ADDRESS OF CURRENT JITB
         POST  JITBXECB            POST CALLER OF COMPLETION
         B     JINFNEXT            GO GET ANOTHER JITB (IF ONE)
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATION REQUESTED                                        *
*                                                                     *
***********************************************************************
JINFTERM MVC   DTEUMSG(LWTOJIM2),WTOJIM2 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE TERMINATION REQUESTED MESSAGE
         BAL   R14,JINFCLOS        GO CLOSE THE JOB INFO FILE
         BAL   R14,JINFREE         GO FREE THE JOB INFO FILE
         NI    DTEFLAG1,255-DTE1ACTV TURN OFF ACTIVE SWITCH
         ESTAE 0                   CANCEL ESTAE ENVIRONMENT
         SVC   3                   TERMINATE SUBTASK
         EJECT
***********************************************************************
*                                                                     *
*        ALLOCATE THE VSAM FILE                                       *
*                                                                     *
***********************************************************************
***********************************************************************
*        DETERMINE THE LENGTH OF THE DSNAME                           *
***********************************************************************
JINFALOC ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JALLOC     TEST ALLOCATED INDICATOR
         BO    JINFAL03            ON, JUST GET OUT OF ROUTINE
         MVC   DSNAME,UCTJITDS     SAVE DSNAME
         LA    R15,44              SET LOOP COUNTER
         LA    R14,0               SET LENGTH OF DSN
         LA    R1,DSNAME           POINT TO START OF DSNAME
JINFAL01 CLI   0(R1),C' '          SEE IF END OF DSNAME
         BNH   JINFAL02            YES, GET OUT
         LA    R14,1(R14)          ADD 1 TO LENGTH
         LA    R1,1(R1)            INCREMENT TO NEXT CHAR OF DSNAME
         BCT   R15,JINFAL01        LOOP
JINFAL02 STH   R14,LDSN            SAVE LENGTH OF DSNAME
         LTR   R14,R14             TEST LENGTH OF DSNAME
         BZ    JINFAL06            ZERO, ERROR
***********************************************************************
*        PERFORM DYNAMIC ALLOCATION                                   *
***********************************************************************
         LA    R15,S99RB           LOAD ADDRESS OF RB
         ST    R15,S99RBPTR        SAVE IT IN RB POINTER LIST
         MVI   S99RBPTR,X'80'      FLAG END OF LIST
         MVI   S99RBLN,20          SET LENGTH OF RB
         MVI   S99VERB,S99VRBAL    SET VERB FOR ALLOCATION
         XC    S99FLAG1,S99FLAG1   ZERO FLAG FIELD 1
         XC    S99RSC,S99RSC       ZERO RETURN CODE FIELDS
         LA    R15,S99TUPL         LOAD ADDRESS OF TEXT UNIT PARM LIST
         ST    R15,S99TXTPP        AND SAVE IT IN RB
         XC    S99RSV01,S99RSV01   ZERO RESERVED FIELD
         XC    S99FLAG2,S99FLAG2   ZERO FLAG FIELD 2
         LA    R15,TUDSN           LOAD ADDRESS OF DSN TEXT UNIT
         ST    R15,S99TUPL         SAVE IT IN TEXT UNIT PARM LIST
         LA    R15,TUDISP          LOAD ADDRESS OF DISP TEXT UNIT
         ST    R15,S99TUPL+4       SAVE IT IN TEXT UNIT PARM LIST
         LA    R15,TURDDN          LOAD ADDRESS OF RETURN DDN TEXT UNIT
         ST    R15,S99TUPL+8       SAVE IT IN TEXT UNIT PARM LIST
         MVI   S99TUPL+8,X'80'     FLAG END OF LIST
         MVC   TUDSN(LTUDSN),ITUDSN    INITIALIZE DSN TEXT UNIT
         MVC   TUDISP(LTUDISP),ITUDISP INITIALIZE DISP TEXT UNIT
         MVC   TURDDN(LTURDDN),ITURDDN INITIALIZE RETURN DDN TEXT UNIT
         LH    R15,LDSN            LOAD LENGTH OF DSNAME
         STH   R15,TUDSN+4         SAVE LENGTH OF DSNAME IN TEXT UNIT
         MVI   TUDSN+6,C' '        BLANK THE
         MVC   TUDSN+7(43),TUDSN+6       ENTIRE DSNAME
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVDSN           MOVE DSNAME TO TEXT UNIT
MVDSN    MVC   TUDSN+6(0),DSNAME   **** EXECUTE ONLY ****
         LA    R1,S99RBPTR         LOAD ADDRESS OF RB POINTER
         DYNALLOC ,                CALL DYNAMIC ALLOCATION
         LTR   R15,R15             TEST RETURN CODE
         BNZ   JINFAL07            NOT ZERO, ERROR
         LH    R15,TURDDN+4        LOAD LENGTH OF DDNAME
         STH   R15,LDDN            SAVE LENGTH OF DDNAME
         MVI   DDNAME,C' '         BLANK THE
         MVC   DDNAME+1(7),DDNAME        ENTIRE DDNAME
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVDDN1          MOVE DDNAME TO SAVE AREA
MVDDN1   MVC   DDNAME(0),TURDDN+6  **** EXECUTE ONLY ****
         L     R2,MYACBADD         LOAD ADDRESS OF ACB
         LA    R6,RLIST            LOAD ADDRESS OF REMOTE PARM LIST
         MODCB ACB=(R2),                                               X
               DDNAME=(*,DDNAME),                                      X
               MF=(G,(R6),LRLIST1)
         LTR   R15,R15             TEST MODCB RETURN CODE
         BNZ   JINFAL08            NOT ZERO, ERROR
***********************************************************************
*        RETURN TO CALLER WITH APPROPRIATE RETURN CODE                *
***********************************************************************
JINFAL03 SLR   R15,R15             SET RETURN CODE TO ZERO
         OI    DTEFLAGS,JALLOC     TURN ON ALLOCATED INDICATOR
         B     JINFAL05            GO RETURN TO CALLER
JINFAL04 LA    R15,4               SET RETURN CODE TO 4
JINFAL05 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
***********************************************************************
*        THE LENGTH OF THE DSNAME WAS ZERO                            *
***********************************************************************
JINFAL06 MVC   DTEUMSG(LWTOJIM9),WTOJIM9 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         MVC   DTEUMSG(LWTOJIMA),WTOJIMA SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFAL04            GO RETURN TO CALLER
***********************************************************************
*        DYNAMIC ALLOCATION FAILURE                                   *
***********************************************************************
JINFAL07 CVD   R15,DBLJ1           CONVERT RETURN CODE TO PACKED
         MVC   DBLJ2(4),=X'F0202120' SET EDIT MASK
         ED    DBLJ2(4),DBLJ1+6    MAKE RETURN CODE PRINTABLE
         UNPK  ERRCODE1(5),S99ERROR(3) UNPACK ERROR CODE + 1 BYTE
         TR    ERRCODE1(4),TRTBL1  MAKE IT PRINTABLE
         UNPK  ERRCODE2(5),S99INFO(3) UNPACK INFO CODE + 1 BYTE
         TR    ERRCODE2(4),TRTBL1  MAKE IT PRINTABLE
         MVC   DTEUMSG(LWTOJIMA),WTOJIMA SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         MVC   DTEUMSG(LWTOJIMB),WTOJIMB SET MESSAGE BUFFER
         MVC   DTEUMSG+4+9+9(2),DBLJ2+2   MOVE RETURN CODE TO MESSAGE
         MVC   DTEUMSG+4+9+14(4),ERRCODE1 MOVE ERRCD TO MESSAGE
         MVC   DTEUMSG+4+9+21(4),ERRCODE2 MOVE INFOCD TO MESSAGE
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFAL04            GO RETURN TO CALLER
TRTBL1   EQU   *-240               HEX TO DISPLAY TRANSLATE TABLE
         DC    C'0123456789ABCDEF'
***********************************************************************
*        MODCB FOR ACB FAILED                                         *
***********************************************************************
JINFAL08 MVC   DTEUMSG(LWTOJIME),WTOJIME SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFAL04            GO RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZE THE ACB AND THE RPL FOR THE JOB INFORMATION       *
*        FILE                                                         *
*                                                                     *
***********************************************************************
JINFINIT ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JINIT      TEST INITIALIZED INDICATOR
         BO    JINFIN02            ON, JUST GET OUT OF ROUTINE
         LA    R6,RLIST            LOAD ADDRESS OF REMOTE PARM LIST
         GENCB BLK=ACB,                                                X
               AM=VSAM,                                                X
               BUFND=1,                                                X
               BUFNI=3,                                                X
               MACRF=(KEY,DIR,IN),                                     X
               MF=(G,(R6),LRLIST2)
         LTR   R15,R15             TEST GENCB RETURN CODE
         BNZ   JINFIN05            NOT ZERO, ERROR
         ST    R1,MYACBADD         SAVE ADDRESS OF ACB
         LR    R2,R1               SAVE ACB ADDRESS
         LA    R6,RLIST            LOAD ADDRESS OF REMOTE PARM LIST
         GENCB BLK=RPL,                                                X
               AM=VSAM,                                                X
               AREALEN=256,                                            X
               KEYLEN=16,                                              X
               OPTCD=(KEY,DIR,SYN,NUP,KEQ,FKS,MVE),                    X
               MF=(G,(R6),LRLIST3)
         LTR   R15,R15             TEST GENCB RETURN CODE
         BNZ   JINFIN06            NOT ZERO, ERROR
         ST    R1,MYRPLADD         SAVE ADDRESS OF RPL
         LR    R3,R1               SAVE RPL ADDRESS
         LA    R6,RLIST            LOAD ADDRESS OF REMOTE PARM LIST
         MODCB RPL=(R3),                                               X
               ACB=(R2),                                               X
               AREA=(S,INREC),                                         X
               ARG=(S,KEY),                                            X
               MF=(G,(R6),LRLIST4)
         LTR   R15,R15             TEST MODCB RETURN CODE
         BNZ   JINFIN07            NOT ZERO, ERROR
***********************************************************************
*        RETURN TO CALLER WITH APPROPRIATE RETURN CODE                *
***********************************************************************
JINFIN02 SLR   R15,R15             SET RETURN CODE TO ZERO
         OI    DTEFLAGS,JINIT      TURN ON INITIALIZED INDICATOR
         B     JINFIN04            GO RETURN TO CALLER
JINFIN03 LA    R15,4               SET RETURN CODE TO 4
JINFIN04 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
***********************************************************************
*        GENCB FOR ACB FAILED                                         *
***********************************************************************
JINFIN05 MVC   DTEUMSG(LWTOJIMC),WTOJIMC SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFIN03            GO RETURN TO CALLER
***********************************************************************
*        GENCB FOR RPL FAILED                                         *
***********************************************************************
JINFIN06 MVC   DTEUMSG(LWTOJIMD),WTOJIMD SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFIN03            GO RETURN TO CALLER
***********************************************************************
*        MODCB FOR RPL FAILED                                         *
***********************************************************************
JINFIN07 MVC   DTEUMSG(LWTOJIMF),WTOJIMF SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFIN03            GO RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        OPEN THE JOB INFORMATION FILE                                *
*                                                                     *
***********************************************************************
JINFOPEN ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JOPEN      TEST OPEN INDICATOR
         BO    JINFOP01            ON, JUST GET OUT OF ROUTINE
         L     R2,MYACBADD         LOAD THE ACB ADDRESS
         MVI   OPENL,X'80'         SET END OF LIST INDICATOR
         OPEN  ((R2),INPUT),MF=(E,OPENL)
         USING IFGACB,R2           SET ADDRESSABILITY TO ACB
         TM    ACBOFLGS,ACBOPEN    SEE IF OPEN FLAG IS ON
         BNO   JINFOP04            NO, ERROR
         DROP  R2                  DROP ADDRESSABILITY TO ACB
***********************************************************************
*        RETURN TO CALLER WITH APPROPRIATE RETURN CODE                *
***********************************************************************
JINFOP01 SLR   R15,R15             SET RETURN CODE TO ZERO
         OI    DTEFLAGS,JOPEN      TURN ON OPEN INDICATOR
         B     JINFOP03            GO RETURN TO CALLER
JINFOP02 LA    R15,4               SET RETURN CODE TO 4
JINFOP03 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
***********************************************************************
*        OPEN FAILED FOR THE JOB INFORMATION FILE                     *
***********************************************************************
JINFOP04 MVC   DTEUMSG(LWTOJIMG),WTOJIMG SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         B     JINFOP02            GO RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        READ A RECORD FROM THE JOB INFORMATION FILE                  *
*                                                                     *
***********************************************************************
JINFGET  ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JOPEN      TEST OPEN INDICATOR
         BNO   JINFGE03            NO, ACT IF GET FAILED
         OI    DTEFLAGS,JACT       TURN ON I/O ACTIVE INDICATOR
         L     R3,MYRPLADD         LOAD THE RPL ADDRESS
         GET   RPL=(R3)            READ A RECORD
         NI    DTEFLAGS,255-JACT   TURN OFF I/O ACTIVE INDICATOR
         LR    R2,R15              SAVE RETURN CODE
         LTR   R15,R15             TEST RETURN CODE
         BZ    JINFGE02            ZERO, OK
         CH    R15,=H'8'           SEE IF LOGICAL ERROR
         BNE   JINFGE01            NO, ABNORMAL RC
         USING IFGRPL,R3           SET ADDRESSABILITY TO RPL
         CLI   RPLERRCD,X'04'      SEE IF EOF
         BE    JINFGE02            YES, NORMAL RECORD NOT FOUND
         CLI   RPLERRCD,X'10'      SEE IF RECORD NOT FOUND
         BE    JINFGE02            YES, NORMAL RECORD NOT FOUND
JINFGE01 MVC   DTEUMSG(LWTOJIMH),WTOJIMH SET MESSAGE BUFFER
         CVD   R15,DBLJ1           CONVERT RETURN CODE TO PACKED
         OI    DBLJ1+7,X'0F'       MAKE PRINTABLE
         UNPK  DTEUMSG+4+9+35(2),DBLJ1+6(2)  UNPACK RETURN CODE
         UNPK  DBLJ1(5),RPLFDBWD(3) UNPACK 1ST HALF FEEDBACK WORK
         TR    DBLJ1(4),TRTBL1     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+47(4),DBLJ1 MOVE 1ST HALF TO MESSAGE
         UNPK  DBLJ1(5),RPLFDBWD+2(3) UNPACK 2ND HALF FEEDBACK WORK
         TR    DBLJ1(4),TRTBL1     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+51(4),DBLJ1 MOVE 2ND HALF TO MESSAGE
         $$WTO DTEUMSG             I/O ERROR MESSAGE
JINFGE02 MRKBFR RPL=(R3),MARK=XINVALID MARK BUFFERS INVALID
         LR    R15,R2              RESTORE RETURN CODE
         B     JINFGE04            GET OUT WITH RESIDUAL RETURN CODE
JINFGE03 LA    R15,4               SET RETURN CODE TO 4
JINFGE04 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         DROP  R3                  DROP ADDRESSABILITY TO RPL
         EJECT
***********************************************************************
*                                                                     *
*        CLOSE THE JOB INFORMATION FILE                               *
*                                                                     *
***********************************************************************
JINFCLOS ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JOPEN      TEST OPEN INDICATOR
         BNO   JINFCL01            NOT OPEN, JUST GET OUT OF ROUTINE
         L     R2,MYACBADD         LOAD THE ACB ADDRESS
         MVI   CLOSEL,X'80'        SET END OF LIST INDICATOR
         CLOSE ((R2)),MF=(E,CLOSEL) CLOSE THE ACB
***********************************************************************
*        RETURN TO CALLER WITH APPROPRIATE RETURN CODE                *
***********************************************************************
JINFCL01 SLR   R15,R15             SET RETURN CODE TO ZERO
         NI    DTEFLAGS,255-JOPEN  TURN OFF OPEN INDICATOR
         B     JINFCL03            GO RETURN TO CALLER
JINFCL02 LA    R15,4               SET RETURN CODE TO 4
JINFCL03 L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        FREE THE JOB INFORMATION FILE                                *
*                                                                     *
***********************************************************************
JINFREE  ST    R14,SAVER14         SAVE RETURN ADDRESS
         TM    DTEFLAGS,JALLOC     TEST ALLOCATED INDICATOR
         BNO   JINFFR01            NOT ALLOC, JUST GET OUT OF ROUTINE
         LA    R15,S99RB           LOAD ADDRESS OF RB
         ST    R15,S99RBPTR        SAVE IT IN RB POINTER LIST
         MVI   S99RBPTR,X'80'      FLAG END OF LIST
         MVI   S99RBLN,20          SET LENGTH OF RB
         MVI   S99VERB,S99VRBUN    SET VERB FOR UNALLOCATION
         XC    S99FLAG1,S99FLAG1   ZERO FLAG FIELD 1
         XC    S99RSC,S99RSC       ZERO RETURN CODE FIELDS
         LA    R15,S99TUPL         LOAD ADDRESS OF TEXT UNIT PARM LIST
         ST    R15,S99TXTPP        AND SAVE IT IN RB
         XC    S99RSV01,S99RSV01   ZERO RESERVED FIELD
         XC    S99FLAG2,S99FLAG2   ZERO FLAG FIELD 2
         LA    R15,TUDDN           LOAD ADDRESS OF DDN TEXT UNIT
         ST    R15,S99TUPL         SAVE IT IN TEXT UNIT PARM LIST
         MVI   S99TUPL,X'80'       FLAG END OF LIST
         MVC   TUDDN(LTUDDN),ITUDDN    INITIALIZE DDN TEXT UNIT
         LH    R15,LDDN            LOAD LENGTH OF DDNAME
         STH   R15,TUDDN+4         SAVE LENGTH OF DDNAME IN TEXT UNIT
         MVI   TUDDN+6,C' '        BLANK THE
         MVC   TUDDN+7(7),TUDDN+6        ENTIRE DDNAME
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MVDDN2          MOVE DDNAME TO TEXT UNIT
MVDDN2   MVC   TUDDN+6(0),DDNAME   **** EXECUTE ONLY ****
         LA    R1,S99RBPTR         LOAD ADDRESS OF RB POINTER
         DYNALLOC ,                CALL DYNAMIC ALLOCATION
***********************************************************************
*        RETURN TO CALLER WITH APPROPRIATE RETURN CODE                *
***********************************************************************
JINFFR01 NI    DTEFLAGS,255-JALLOC TURN OFF ALLOCATED INDICATOR
         SLR   R15,R15             SET RETURN CODE TO ZERO
         L     R14,SAVER14         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATE JES2 ROUTINE                                       *
*                                                                     *
***********************************************************************
JINFABND MVC   DTEUMSG(LWTOJIM3),WTOJIM3 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         ESTAE 0                   CANCEL OLD ESTAE ENVIRONMENT
         MVC   DTEVRXAD,$ZEROS     SET RECOVERY VRA EXIT ADDRESS
         MVC   DTEESXAD,=A(JINFCLN) SET RECOVERY CLEAN UP EXIT ADDR
         MVC   DTERTXAD,$ZEROS     SET RECOVERY RETRY EXIT ADDRESS
         L     R2,$STABNDA         LOAD SUBTASK ESTAE RTN ADDRESS
         LR    R3,R13              SET DTE ADDRESS
         MVC   DTEAWRKA(LESTAEL1),ESTAEL1 SET ESATE LIST FORM
         ESTAE (2),PARAM=(3),RECORD=YES,MF=(E,DTEAWRKA)
         ABEND X'FFF',DUMP,,SYSTEM   ABEND THE SUBTASK
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE RETRY ROUTINE                                          *
*                                                                     *
***********************************************************************
JINFRETR SAVE  (14,12)             SAVE REGISTERS
         USING JINFRETR,R15        SET TEMPORARY ADDRESSABILITY
         USING ERA,R1              SET ADDRESSABILITY TO ERA
         L     R10,=A(JOBINFO)     RESET FIRST BASE REGISTER
         L     R12,=A(JOBINFO+4096) RESET SECOND BASE REGISTER
         ST    R10,ERAREG10        SAVE BASE REGISTER FOR RESTART
         ST    R12,ERAREG12        SAVE BASE REGISTER FOR RESTART
         L     R11,DTEPARM         RESTORE HCT ADDRESS
         ST    R11,ERAREG11        SAVE HCT REGISTER FOR RESTART
         DROP  R15                 DROP TEMPORARY ADDRESSABILITY
         $SETRP RESUME=JINFRES     SET RETRY ADDRESS
         MVC   DTEUMSG(LWTOJIMI),WTOJIMI SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         RETURN (14,12)            RESTORE REGS AND RETURN TO CALLER
         DROP  R1                  DROP ADDRESSABILITY TO ERA
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE RESUME ENTRY POINT                                     *
*                                                                     *
***********************************************************************
JINFRES  ICM   R7,B'1111',DTEJITBA RESTORE JITB ADDRESS
         BNZ   JINFPOST            GOT ONE, GO POST IT COMPLETE
         TM    DTEFLAG1,DTE1ACTV   SEE IF INITIALIZATION COMPLETE
         BNO   JINFRIN             NO,  GO COMPLETE INITIALIZATION
         B     JINFNEXT            YES, GO PROCESS NEXT REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE CLEAN UP ROUTINE                                       *
*                                                                     *
*        A RETURN CODE OF 4 TELLS DTE TERMINATION SUPPORT TO          *
*        ABEND THE MAIN TASK                                          *
*                                                                     *
***********************************************************************
JINFCLN  LA    R15,4               SET RETURN CODE TO 4
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                     C O N S T A N T S                               *
***********************************************************************
         LTORG
         SPACE 3
JBLANKS  DC    CL20' '             STRING OF BLANKS
         DS    0H
ITUDDN   DC    X'0001',AL2(1),AL2(8),CL8' '         DDNAME
LTUDDN   EQU   *-ITUDDN
         DS    0H
ITUDSN   DC    X'0002',AL2(1),AL2(44),CL44' '       DSNAME
LTUDSN   EQU   *-ITUDSN
         DS    0H
ITUDISP  DC    X'0004',AL2(1),AL2(01),XL01'08'      DISP=SHR
LTUDISP  EQU   *-ITUDISP
         DS    0H
ITURDDN  DC    X'0055',AL2(1),AL2(08),CL08' '       NEW DDNAME
LTURDDN  EQU   *-ITURDDN
         SPACE 3
         $MID  970
WTOJIM1  WTO   '&MID.JOB INFORMATION SUBTASK INITIALIZATION BEGINNING',X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM1 EQU   *-WTOJIM1
WTOJIM2  WTO   '&MID.JOB INFORMATION SUBTASK TERMINATION REQUESTED',   X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM2 EQU   *-WTOJIM2
WTOJIM3  WTO   '&MID.INVALID JITB CHAIN ENCOUNTERED IN JOB INFORMATION X
               TASK',ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM3 EQU   *-WTOJIM3
WTOJIM4  WTO   '&MID.JOB INFORMATION FILE NOT STOPPED',                X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM4 EQU   *-WTOJIM4
WTOJIM5  WTO   '&MID.JOB INFORMATION FILE CANNOT BE STARTED',          X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM5 EQU   *-WTOJIM5
WTOJIM6  WTO   '&MID.JOB INFORMATION FILE NOT STARTED',                X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM6 EQU   *-WTOJIM6
WTOJIM7  WTO   '&MID.JOB INFORMATION FILE CANNOT BE STOPPED',          X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM7 EQU   *-WTOJIM7
WTOJIM8  WTO   '&MID.JOB INFORMATION FILE CANNOT BE RESTARTED',        X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM8 EQU   *-WTOJIM8
WTOJIM9  WTO   '&MID.LENGTH OF DSNAME FOR JOB INFORMATION FILE IS ZERO'X
               ,ROUTCDE=(2),DESC=(4),MF=L
LWTOJIM9 EQU   *-WTOJIM9
WTOJIMA  WTO   '&MID.UNABLE TO ALLOCATE JOB INFORMATION FILE',         X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMA EQU   *-WTOJIMA
WTOJIMB  WTO   '&MID.SVC99 RC=XX E=XXXX I=XXXX',                       X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMB EQU   *-WTOJIMB
WTOJIMC  WTO   '&MID.UNABLE TO GENERATE ACB FOR JOB INFORMATION FILE', X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMC EQU   *-WTOJIMC
WTOJIMD  WTO   '&MID.UNABLE TO GENERATE RPL FOR JOB INFORMATION FILE', X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMD EQU   *-WTOJIMD
WTOJIME  WTO   '&MID.UNABLE TO MODIFY ACB FOR JOB INFORMATION FILE',   X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIME EQU   *-WTOJIME
WTOJIMF  WTO   '&MID.UNABLE TO MODIFY RPL FOR JOB INFORMATION FILE',   X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMF EQU   *-WTOJIMF
WTOJIMG  WTO   '&MID.UNABLE TO OPEN THE JOB INFORMATION FILE',         X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMG EQU   *-WTOJIMG
WTOJIMH  WTO   '&MID.JOB INFORMATION FILE I/O ERROR R15=XX RPLFDBWD=XXXX
               XXXXX',ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMH EQU   *-WTOJIMH
WTOJIMI  WTO   '&MID.JOB INFORMATION TASK ABEND - CURRENT REQUEST WILL X
               BE TERMINATED',ROUTCDE=(2),DESC=(4),MF=L
LWTOJIMI EQU   *-WTOJIMI
         SPACE 3
ESTAEL1  ESTAE *-*,MF=L
LESTAEL1 EQU   *-ESTAEL1
         EJECT
         PUSH USING
         TITLE 'JES2 UCC7 ROUTINE SUBTASK'
***********************************************************************
*                                                                     *
*        ACTUAL UCC7 SUBTASK ENTRY POINT                              *
*                                                                     *
***********************************************************************
UCC7TASK $ENTRY  BASE=(R10,R12)
         LR    R10,R15             ESTABLISH FIRST BASE REGISTER
         LA    R12,4095(R10)       ESTABLISH SECOND
         LA    R12,1(R12)              BASE REGISTER
         LR    R13,R1              SET NEW SAVE AREA ADDRESS
         USING DTE,R13             ESTABLISH ADDRESSABILITY TO DTE
         L     R11,DTEPARM         LOAD HCT ADDRESS FROM DTE
         USING HCT,R11             ESTABLISH ADDRESSABILITY TO HCT
         $AMODE 31                 GO TO AMODE 31
***********************************************************************
*                                                                     *
*        SET UP ESTAE ENVIRONMENT                                     *
*                                                                     *
***********************************************************************
         MVC   DTEVRXAD,$ZEROS     SET RECOVERY VRA EXIT ADDRESS
         MVC   DTEESXAD,$ZEROS     SET RECOVERY CLEAN UP EXIT ADDR
         MVC   DTERTXAD,=A(UCC7RETR) SET RECOVERY RETRY EXIT ADDRESS
         L     R2,$STABNDA         LOAD SUBTASK ESTAE RTN ADDRESS
         LR    R3,R13              SET DTE ADDRESS
         MVC   DTEAWRKA(LESTAEL2),ESTAEL2 SET ESATE LIST FORM
         ESTAE (2),PARAM=(3),RECORD=YES,MF=(E,DTEAWRKA)
         LA    R14,DTEWORK         SET 'TO' ADDRESS
         LA    R15,2048            SET   'TO'   LENGTH
         SLR   R0,R0               CLEAR 'FROM' ADDRESS
         SLR   R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE WORK AREA
***********************************************************************
*                                                                     *
*        FINISH INITIALIZATION PROCESSING                             *
*                                                                     *
***********************************************************************
         MVC   DTEUMSG(LWTOU7M1),WTOU7M1 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE INIT STARTED MESSAGE
UCC7RIN  XC    UCC7SVCA,UCC7SVCA   ZERO THE UCC7 ROUTINE EPA
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
         LOAD  EPLOC=(0),ERRET=UCC7ER1I LOAD THE ROUTINE
         ST    R0,UCC7SVCA         SAVE UCC7 ROUTINE EPA
         OI    DTEFLAGS,ULOADED    TURN ON INTERFACE MODULE LOADED IND
UCC7RIN1 POST  DTEIECB             POST INITIALIZATION COMPLETE
         OI    DTEFLAG1,DTE1ACTV   TURN ON ACTIVE BIT
         OI    DTEFLAGS,UENABLE    TURN ON INTERFACE ENABLED IND
UCC7WAIT TM    DTEFLAG1,DTE1TERM   SEE IF TERMINATION REQUESTED
         BO    UCC7TERM            YES, BRANCH
         WAIT  ECB=DTEWECB         WAIT ON WORK
         XC    DTEWECB,DTEWECB     ZERO THE ECB AGAIN
         EJECT
***********************************************************************
*                                                                     *
*        GET A JITB FROM THE LIFO QUEUE OF PENDING WORK               *
*                                                                     *
***********************************************************************
UCC7NEXT TM    DTEFLAG1,DTE1TERM   SEE IF TERMINATION REQUESTED
         BO    UCC7TERM            YES, BRANCH
         ICM   R7,15,DTEFQUE       CHECK QUEUE POINTER
         USING JITB,R7             SET ADDRESSABILITY TO JITB
         BZ    UCC7WAIT            ZERO, NONE, GO WAIT FOR WORK
UCC7UNCH L     R1,JITBCH           LOAD ADDRESS OF NEXT JITB
         CS    R7,R1,DTEFQUE       REMOVE JITB FROM QUEUE
         BNE   UCC7UNCH            QUEUE CHANGED, LOOP
         CLC   JITBID,=C'JITB'     SEE IF REALLY A JITB
         BNE   UCC7ABND            NO, ERROR
         ST    R7,DTEJITBA         SAVE ADDRESS OF CURRENT JITB
         MVI   JITBSTAT,0          ZERO THE STATUS FLAGS
***********************************************************************
*                                                                     *
*        TEST FOR DEMAND REQUEST                                      *
*                                                                     *
***********************************************************************
UCC7OP1  TM    JITBFLG,JITBDMD     SEE IF REQUEST FOR DEMAND
         BNO   UCC7OP2             NO, BRANCH
UCC7P    TM    DTEFLAGS,UENABLE    SEE IF INTERFACE ENABLED
         BNO   UCC7ER4             NO, ERROR
         CLI   JITBJOBN,C' '       SEE IF JOBNAME SPECIFIED
         BE    UCC7POST            NO, IGNORE REQUEST
         CLI   JITBNETN,C' '       SEE IF NETWORK NAME SPECIFIED
         BE    UCC7POST            NO, IGNORE REQUEST
         CLI   JITBSUBI,C' '       SEE IF SUBID SPECIFIED
         BE    UCC7POST            NO, IGNORE REQUEST
         MVI   UCC7CMD,C' '        BLANK THE ENTIRE
         MVC   UCC7CMD+1(99),UCC7CMD     UCC7 PARM FIELD
         LA    R3,UCC7CMD          LOAD START ADDRESS OF UCC7 PARM
         ST    R3,DAREC            SAVE START ADDRESS OF UCC7 PARM
         SLR   R4,R4               ZERO THE LENGTH FIELD
UCC7P1   MVC   0(21,R3),=CL21'/LOGON JES2;DMDNW,NW='
         LA    R3,21(R3)           INCREMENT PAST STRING
         LA    R4,21(R4)           ADD LENGTH OF STRING
UCC7P2   MVC   0(8,R3),JITBNETN    MOVE NETWORK NAME TO PARM
UCC7P2A  CLI   0(R3),C' '          SEE IF END OF NETWORK NAME
         BE    UCC7P3              YES, GET OUT
         LA    R3,1(R3)            INCREMENT TO NEXT CHAR
         LA    R4,1(R4)            ADD 1 TO LENGTH OF PARM
         B     UCC7P2A             LOOP
UCC7P3   MVC   0(5,R3),=CL5',JOB='
         LA    R3,5(R3)            INCREMENT PAST STRING
         LA    R4,5(R4)            ADD LENGTH OF STRING
         MVC   0(8,R3),JITBJOBN    MOVE JOBNAME TO PARM
UCC7P3A  CLI   0(R3),C' '          SEE IF END OF JOB NAME
         BE    UCC7P4              YES, GET OUT
         LA    R3,1(R3)            INCREMENT TO NEXT CHAR
         LA    R4,1(R4)            ADD 1 TO LENGTH OF PARM
         B     UCC7P3A             LOOP
UCC7P4   MVC   0(7,R3),=CL7',SUBID='
         LA    R3,7(R3)            INCREMENT PAST STRING
         LA    R4,7(R4)            ADD LENGTH OF STRING
         MVC   0(8,R3),JITBSUBI    MOVE SUBID TO PARM
UCC7P4A  CLI   0(R3),C' '          SEE IF END OF SUBID
         BE    UCC7P5              YES, GET OUT
         LA    R3,1(R3)            INCREMENT TO NEXT CHAR
         LA    R4,1(R4)            ADD 1 TO LENGTH OF PARM
         B     UCC7P4A             LOOP
UCC7P5   CLI   JITBDESC,C' '       SEE IF OPTIONAL DESCRIPTION
         BE    UCC7P6              NO, GET OUT
         MVC   0(6,R3),=CL6',DESC='
         LA    R3,6(R3)            INCREMENT PAST STRING
         LA    R4,6(R4)            ADD LENGTH OF STRING
         MVC   0(8,R3),JITBDESC    MOVE DESCRIPTION TO PARM
UCC7P5A  CLI   0(R3),C' '          SEE IF END OF DESCRIPTION
         BE    UCC7P6              YES, GET OUT
         LA    R3,1(R3)            INCREMENT TO NEXT CHAR
         LA    R4,1(R4)            ADD 1 TO LENGTH OF PARM
         B     UCC7P5A             LOOP
UCC7P6   MVC   0(8,R3),=CL8';/LOGOFF'
         LA    R3,8(R3)            INCREMENT PAST STRING
         LA    R4,8(R4)            ADD LENGTH OF STRING
         ST    R4,DARECL           SAVE LENGTH OF UCC7 PARM
         XC    DA,DA               CLEAR UCC7 OPTIONS
         MVI   DACALL,DAPGM        SET CALL FROM PGM
         MVI   DATYPE,DAPROC       SET TYPE TO PROCESS
         XC    DAHOLD,DAHOLD       CLEAR THE HOLD AREA ADDRESS
         TM    DTEFLAGS,ULOADED    SEE IF UCC7 INTERFACE MODULE LOADED
         BNO   UCC7ER3             NO, ERROR
*        B     UCC7P7              **********************************
         L     R15,UCC7SVCA        LOAD ADDR OF UCC7 INTERFACE MODULE
         LA    R2,DA               LOAD PARM ADDRESS IN REG 2
         BALR  R14,R15             CALL SASSSVCA
         LTR   R15,R15             TEST RETURN CODE
         BNZ   UCC7ER2             NOT ZERO, ERROR
UCC7P7   DS    0H                  **********************************
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         B     UCC7POST            GET OUT
***********************************************************************
*                                                                     *
*        TEST FOR START REQUEST                                       *
*                                                                     *
***********************************************************************
UCC7OP2  TM    JITBFLG,JITBSTAR    SEE IF REQUEST FOR START
         BNO   UCC7OP3             NO, BRANCH
         TM    DTEFLAGS,ULOADED    SEE IF UCC7 INTERFACE MODULE LOADED
         BNO   UCC7OP2A            NO, BRANCH
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
         NI    DTEFLAGS,255-ULOADED TURN OFF UCC7 INTERFACE LOADED IND
         DELETE EPLOC=(0)          DELETE THE ROUTINE
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
UCC7OP2A LOAD  EPLOC=(0),ERRET=UCC7ER1R RELOAD THE ROUTINE
         ST    R0,UCC7SVCA         SAVE UCC7 ROUTINE EPA
         OI    DTEFLAGS,ULOADED    TURN ON INTERFACE MODULE LOADED IND
         OI    DTEFLAGS,UENABLE    TURN ON INTERFACE ENABLED IND
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         B     UCC7POST            GET OUT
***********************************************************************
*                                                                     *
*        TEST FOR STOP REQUEST                                        *
*                                                                     *
***********************************************************************
UCC7OP3  TM    JITBFLG,JITBSTOP    SEE IF REQUEST FOR STOP
         BNO   UCC7OP4             NO, BRANCH
         NI    DTEFLAGS,255-UENABLE TURN OFF INTERFACE ENABLED IND
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
         B     UCC7POST            GET OUT
***********************************************************************
*                                                                     *
*        TEST FOR RESTART REQUEST                                     *
*                                                                     *
***********************************************************************
UCC7OP4  TM    JITBFLG,JITBSTOP    SEE IF REQUEST FOR STOP
         BNO   UCC7POST            UNKNOWN REQUEST, IGNORE IT
         TM    DTEFLAGS,ULOADED    SEE IF UCC7 INTERFACE MODULE LOADED
         BNO   UCC7OP4A            NO, BRANCH
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
         NI    DTEFLAGS,255-ULOADED TURN OFF UCC7 INTERFACE LOADED IND
         DELETE EPLOC=(0)          DELETE THE ROUTINE
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
UCC7OP4A LOAD  EPLOC=(0),ERRET=UCC7ER1R RELOAD THE ROUTINE
         ST    R0,UCC7SVCA         SAVE UCC7 ROUTINE EPA
         OI    DTEFLAGS,ULOADED    TURN ON INTERFACE MODULE LOADED IND
         OI    DTEFLAGS,UENABLE    TURN ON INTERFACE ENABLED IND
         OI    JITBSTAT,JITBOK     TURN ON 'OK' FLAG
***********************************************************************
*                                                                     *
*        END OF THIS REQUEST                                          *
*                                                                     *
***********************************************************************
UCC7POST XC    DTEJITBA,DTEJITBA   ZERO ADDRESS OF CURRENT JITB
         POST  JITBXECB            POST CALLER OF COMPLETION
         B     UCC7NEXT            GO GET ANOTHER JITB IF ONE
         EJECT
***********************************************************************
*                                                                     *
*        ERROR LOADING UCC7 INTERFACE MODULE                          *
*        DURING INITIALIZATION                                        *
*                                                                     *
***********************************************************************
UCC7ER1I MVC   DTEUMSG(LWTOU7M4),WTOU7M4 SET MESSAGE BUFFER
         ST    R1,DBLU1            SAVE ABEND CODE
         UNPK  DBLU1(5),DBLU1+2(3) UNPACK ABEND CODE
         TR    DBLU1(4),TRTBL2     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+45(3),DBLU1+1 MOVE ABEND CODE TO MESSAGE
         ST    R15,DBLU1           SAVE REASON CODE
         UNPK  DBLU1(5),DBLU1+2(3) UNPACK REASON CODE
         TR    DBLU1(4),TRTBL2     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+52(4),DBLU1 MOVE REASON CODE TO MESSAGE
         $$WTO DTEUMSG             WRITE LOAD FAILED MESSAGE
         B     UCC7RIN1            CONTINUE INITIALIZATION
         EJECT
***********************************************************************
*                                                                     *
*        ERROR LOADING UCC7 INTERFACE MODULE                          *
*        DURING RESTART PROCESSING                                    *
*                                                                     *
***********************************************************************
UCC7ER1R MVC   DTEUMSG(LWTOU7M4),WTOU7M4 SET MESSAGE BUFFER
         ST    R1,DBLU1            SAVE ABEND CODE
         UNPK  DBLU1(5),DBLU1+2(3) UNPACK ABEND CODE
         TR    DBLU1(4),TRTBL2     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+45(3),DBLU1+1 MOVE ABEND CODE TO MESSAGE
         ST    R15,DBLU1           SAVE REASON CODE
         UNPK  DBLU1(5),DBLU1+2(3) UNPACK REASON CODE
         TR    DBLU1(4),TRTBL2     MAKE PRINTABLE
         MVC   DTEUMSG+4+9+52(4),DBLU1 MOVE REASON CODE TO MESSAGE
         $$WTO DTEUMSG             WRITE LOAD FAILED MESSAGE
         B     UCC7POST            POST THIS REQUEST COMPLETE
TRTBL2   EQU   *-240               HEX TO DISPLAY TRANSLATE TABLE
         DC    C'0123456789ABCDEF'
         EJECT
***********************************************************************
*                                                                     *
*        BAD RETURN CODE FROM UCC7 INTERFACE MODULE                   *
*                                                                     *
***********************************************************************
UCC7ER2  MVC   DTEUMSG(LWTOU7M5),WTOU7M5 SET MESSAGE BUFFER
         MVC   DTEUMSG+4+9+24(8),JITBJOBN MOVE JOBNAME TO MESSAGE
         MVC   DTEUMSG+4+9+33(8),JITBNETN MOVE NETWORK NAME TO MESSAGE
         CVD   R15,DBLU1           CONVERT RETURN CODE TO PACKED
         OI    DBLJ1+7,X'0F'       MAKE PRINTABLE
         UNPK  DTEUMSG+4+9+54(4),DBLU1+5 MOVE RETURN CODE TO MESSAGE
         $$WTO DTEUMSG             WRITE LOAD FAILED MESSAGE
         B     UCC7POST            TERMINATE REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        INTERFACE MODULE NOT AVAILABLE                               *
*                                                                     *
***********************************************************************
UCC7ER3  MVC   DTEUMSG(LWTOU7M6),WTOU7M6 SET MESSAGE BUFFER
         MVC   DTEUMSG+4+9+24(8),JITBJOBN MOVE JOBNAME TO MESSAGE
         MVC   DTEUMSG+4+9+33(8),JITBNETN MOVE NETWORK NAME TO MESSAGE
         $$WTO DTEUMSG             WRITE LOAD FAILED MESSAGE
         B     UCC7POST            TERMINATE REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        INTERFACE DISABLED                                           *
*                                                                     *
***********************************************************************
UCC7ER4  MVC   DTEUMSG(LWTOU7M7),WTOU7M7 SET MESSAGE BUFFER
         MVC   DTEUMSG+4+9+24(8),JITBJOBN MOVE JOBNAME TO MESSAGE
         MVC   DTEUMSG+4+9+33(8),JITBNETN MOVE NETWORK NAME TO MESSAGE
         $$WTO DTEUMSG             WRITE LOAD FAILED MESSAGE
         B     UCC7POST            TERMINATE REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATION REQUESTED                                        *
*                                                                     *
***********************************************************************
UCC7TERM MVC   DTEUMSG(LWTOU7M2),WTOU7M2 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE TERMINATION REQUESTED MESSAGE
         TM    DTEFLAGS,ULOADED    SEE IF UCC7 INTERFACE MODULE LOADED
         BNO   UCC7TRM1            NO, BRANCH
         LA    R0,SASSSVCA         LOAD UCC7 ROUTINE NAME ADDRESS
         NI    DTEFLAGS,255-ULOADED TURN OFF UCC7 INTERFACE LOADED IND
         DELETE EPLOC=(0)          DELETE THE ROUTINE
         NI    DTEFLAG1,255-DTE1ACTV TURN OFF ACTIVE SWITCH
UCC7TRM1 ESTAE 0                   CANCEL ESTAE ENVIRONMENT
         SVC   3                   TERMINATE SUBTASK
         EJECT
***********************************************************************
*                                                                     *
*        TERMINATE JES2 ROUTINE                                       *
*                                                                     *
*        AN UNRECOVERABLE ERROR HAS OCCURRED WHICH WILL               *
*        REQUIRE JES2 TO BE RESTARTED.                                *
*                                                                     *
***********************************************************************
UCC7ABND MVC   DTEUMSG(LWTOU7M3),WTOU7M3 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         ESTAE 0                   CANCEL OLD ESTAE ENVIRONMENT
         MVC   DTEVRXAD,$ZEROS     SET RECOVERY VRA EXIT ADDRESS
         MVC   DTEESXAD,=A(UCC7CLN) SET RECOVERY CLEAN UP EXIT ADDR
         MVC   DTERTXAD,$ZEROS     SET RECOVERY RETRY EXIT ADDRESS
         L     R2,$STABNDA         LOAD SUBTASK ESTAE RTN ADDRESS
         LR    R3,R13              SET DTE ADDRESS
         MVC   DTEAWRKA(LESTAEL2),ESTAEL2 SET ESATE LIST FORM
         ESTAE (2),PARAM=(3),RECORD=YES,MF=(E,DTEAWRKA)
         ABEND X'FFF',DUMP,,SYSTEM   ABEND THE SUBTASK
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE RETRY ROUTINE                                          *
*                                                                     *
***********************************************************************
UCC7RETR SAVE  (14,12)             SAVE REGISTERS
         USING UCC7RETR,R15        SET TEMPORARY ADDRESSABILITY
         USING ERA,R1              SET ADDRESSABILITY TO ERA
         L     R10,=A(UCC7TASK)    RESET FIRST BASE REGISTER
         L     R12,=A(UCC7TASK+4096)    RESET SECOND BASE REGISTER
         ST    R10,ERAREG10        SAVE BASE REGISTER FOR RESTART
         ST    R12,ERAREG12        SAVE BASE REGISTER FOR RESTART
         L     R11,DTEPARM         RESTORE HCT ADDRESS
         ST    R11,ERAREG11        SAVE HCT REGISTER FOR RESTART
         DROP  R15                 DROP TEMPORARY ADDRESSABILITY
         $SETRP RESUME=UCC7RES     SET RETRY ADDRESS
         NI    DTEFLAGS,255-UENABLE DISABLE THE EXIT
         MVC   DTEUMSG(LWTOU7M8),WTOU7M8 SET MESSAGE BUFFER
         $$WTO DTEUMSG             WRITE ERROR MESSAGE
         RETURN (14,12)            RESTORE REGS AND RETURN TO CALLER
         DROP  R1                  DROP ADDRESSABILITY TO ERA
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE RESUME ENTRY POINT                                     *
*                                                                     *
***********************************************************************
UCC7RES  ICM   R7,B'1111',DTEJITBA RESTORE JITB ADDRESS
         BNZ   UCC7POST            GOT ONE, GO POST IT COMPLETE
         TM    DTEFLAG1,DTE1ACTV   SEE IF INITIALIZATION COMPLETE
         BNO   UCC7RIN             NO,  GO COMPLETE INITIALIZATION
         B     UCC7NEXT            YES, GO PROCESS NEXT REQUEST
         EJECT
***********************************************************************
*                                                                     *
*        ESTAE CLEAN UP ROUTINE                                       *
*                                                                     *
*        A RETURN CODE OF 4 TELLS DTE TERMINATION SUPPORT TO          *
*        ABEND THE MAIN TASK                                          *
*                                                                     *
***********************************************************************
UCC7CLN  LA    R15,4               SET RETURN CODE TO 4
         BR    R14                 RETURN TO CALLER
         EJECT
***********************************************************************
*                     C O N S T A N T S                               *
***********************************************************************
         LTORG
         SPACE 3
UBLANKS  DC    CL20' '             STRING OF BLANKS
SASSSVCA DC    CL8'SASSSVCA'       UCC7 INTERFACE MODULE NAME
         SPACE 3
         $MID  980
WTOU7M1  WTO   '&MID.UCC7 SUBTASK INITIALIZATION BEGINNING',           X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M1 EQU   *-WTOU7M1
WTOU7M2  WTO   '&MID.UCC7 SUBTASK TERMINATION REQUESTED',              X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M2 EQU   *-WTOU7M2
WTOU7M3  WTO   '&MID.INVALID JITB CHAIN ENCOUNTERED IN UCC7 SUBTASK',  X
               ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M3 EQU   *-WTOU7M3
WTOU7M4  WTO   '&MID.ERROR LOADING UCC7 INTERFACE MODULE - ABEND SXXX RX
               C=NNNN',ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M4 EQU   *-WTOU7M4
WTOU7M5  WTO   '&MID.DEMAND FOR UCC7 NETWORK JJJJJJJJ.NNNNNNNN FAILED -X
                RC=XXXX',ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M5 EQU   *-WTOU7M5
WTOU7M6  WTO   '&MID.DEMAND FOR UCC7 NETWORK JJJJJJJJ.NNNNNNNN FAILED -X
                INTERFACE ROUTINE LOAD ERROR',ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M6 EQU   *-WTOU7M6
WTOU7M7  WTO   '&MID.DEMAND FOR UCC7 NETWORK JJJJJJJJ.NNNNNNNN FAILED -X
                INTERFACE ROUTINE DISABLED',ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M7 EQU   *-WTOU7M7
WTOU7M8  WTO   '&MID.UCC7 INTERFACE TASK ABEND - INTERFACE WILL BE DISAX
               BLED',ROUTCDE=(2),DESC=(4),MF=L
LWTOU7M8 EQU   *-WTOU7M8
         SPACE 3
ESTAEL2  ESTAE *-*,MF=L
LESTAEL2 EQU   *-ESTAEL2
         POP   USING
         $MODEND
         END
