         TITLE 'JES2 $DV COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM IS DESIGNED PROCESS THE $DV COMMAND   *
*        WHEN ENTERED.  THIS COMMAND IS IMPLEMENTED AS A TYPE 5       *
*        EXIT TO JES2, AND AS SUCH MUST INTERCEPT ONLY THE $DV        *
*        COMMAND WHEN ENCOUNTERED.                                    *
*                                                                     *
*                                                                     *
*        THE $DV COMMAND HAS THE FOLLOWING SYNTAX:                    *
*                                                                     *
*        $D V,VVVVVV       WHERE                                      *
*                                                                     *
*             VVVVVV IS THE VOLSER OR PREFIX TO BE DISPLAYED          *
*                                                                     *
*                  OR                                                 *
*                                                                     *
*        $D V,@UUU         WHERE                                      *
*                                                                     *
*             UUU IS THE UNIT ADDRESS OR PORTION OF THE UNIT          *
*                 ADDRESS TO BE DISPLAYED                             *
*                                                                     *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST UNION NATIONAL BANK                    *
*                        301 SOUTH TRYON STREET                       *
*                        CHARLOTTE, N.C.  28288                       *
*                        (704) 374-2427                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING RESPONSES WILL BE MADE BY THIS EXIT:           *
*                                                                     *
*        1)  THE HASP900 MESSAGE WILL BE ISSUED FOR EACH VOLUME       *
*            WHICH IS FOUND.                                          *
*                                                                     *
*        $HASP900 VVVVVV UUU DEVTYP MNT/ATTR USECNT                   *
*                                                                     *
*                                                                     *
*        2)  THE HASP919 MESSAGE WILL BE ISSUED WHEN NO OUTPUT        *
*            GROUP MATCHES THE SELECTION CRITERIA.                    *
*                                                                     *
*        $HASP919 NO VOLUME(S) FOUND                                  *
*                                                                     *
*                                                                     *
*        3)  THE HASP950 MESSAGE WILL BE ISSUED WHEN AN INVALID       *
*            OPERAND KEYWORD OR VALUE IS DETECTED.                    *
*                                                                     *
*        $HASP950 ......... INVALID OPERAND                           *
*                                                                     *
*        4)  THE HASP951 MESSAGE WILL BE ISSUED WHEN MORE THAN        *
*            ONE OPERAND IS ENTERED.                                  *
*                                                                     *
*        $HASP951 TOO MANY OPERANDS                                   *
*                                                                     *
*        4)  THE HASP952 MESSAGE WILL BE ISSUED WHEN NO VOLSER        *
*            IS ENTERED.                                              *
*                                                                     *
*        $HASP952 NO VOLSER ENTERED                                   *
*                                                                     *
*        5)  THE HASP999 MESSAGE WILL BE ISSUED WHEN THE L=CCA        *
*            OPERAND SPECIFIES AN INVALID CONSOLE OR DISPLAY          *
*            AREA.                                                    *
*                                                                     *
*        $HASP999 RESPONSE LOCATION L=CCA UNAVAILABLE                 *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J 0 0 5 $ D V            *
*                                                                     *
*        01)  $AMODE       SYS1.HASPSRC                               *
*        02)  $BUFFER      SYS1.HASPSRC                               *
*        03)  $CMB         SYS1.HASPSRC                               *
*        04)  $COMWORK     SYS1.HASPSRC                               *
*        05)  $CWA         SYS1.HASPSRC                               *
*        06)  $CWTO        SYS1.HASPSRC                               *
*        07)  $ENTRY       SYS1.HASPSRC                               *
*        08)  $GETBUF      SYS1.HASPSRC                               *
*        09)  $FREEBUF     SYS1.HASPSRC                               *
*        10)  $HASPEQU     SYS1.HASPSRC                               *
*        11)  $HASPGBL     SYS1.HASPSRC                               *
*        12)  $HCT         SYS1.HASPSRC                               *
*        13)  $JOE         SYS1.HASPSRC                               *
*        14)  $MIT         SYS1.HASPSRC                               *
*        15)  $MODEND      SYS1.HASPSRC                               *
*        16)  $MODULE      SYS1.HASPSRC                               *
*        17)  $PADDR       SYS1.HASPSRC                               *
*        18)  $PCE         SYS1.HASPSRC                               *
*        19)  $RETURN      SYS1.HASPSRC                               *
*        20)  $SAVE        SYS1.HASPSRC                               *
*        21)  $STORE       SYS1.HASPSRC                               *
*        22)  IAZRESPA     SYS1.AMODGEN                               *
*        23)  IEFUCBOB     SYS1.AMODGEN                               *
*        24)  IEZCVT       SYS1.AMODGEN                               *
*        25)  IFGRPL       SYS1.MACLIB                                *
*        26)  MODESET      SYS1.AMODGEN                               *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       2K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J005$DV  $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 $DV COMMAND PROCESSOR',                     X
               $CMB,               GENERATE HASP CMB     DSECT         X
               $COMWORK,           GENERATE HASP COMWORK DSECT         X
               $CWA,               GENERATE HASP CWA DSECT             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               CVT,                GENERATE MVS  CVT DSECT             X
               RESPA,              GENERATE MVS  RESPA DSECT           X
               RPL,                GENERATE MVS  IFGRPL DSECT          X
               UCB                 GENERATE MVS  UCB DSECT
               SPACE 3
         EJECT
***********************************************************************
*                                                                     *
*        PROGRAM WORK AREAS                                           *
*                                                                     *
***********************************************************************
         SPACE 3
$DVWORK  DSECT                     COMMAND WORK AREA
         DS    CL(BUFSTART-BFPDSECT) **** RESERVED BY JES2 ****
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
SWITCH   DS    X                   MISCELLANEOUS BIT SWITCHES
FOUND    EQU   X'80'               A VOLUME HAS BEEN FOUND
*
DEVCLASS DS    X                   IOSVSUCB DEVICE TYPE
         DS    0D
WRKA     DS    CL10                EXIT WORK AREA
SCANWORK DS    CL100               IOSVSUCB SCAN WORK AREA
UCBADDR  DS    F                   ADDRESS OF UCB
IOSVSUCB DS    F                   ADDRESS OF IOSVSUCB ROUTINE
SCANPARM DS    0F                  IOSVSUCB PARM LIST
SCANP1   DS    F                   ADDRESS OF WORK AREA
SCANP2   DS    F                   ADDRESS OF DEVICE TYPE FIELD
SCANP3   DS    F                   ADDRESS OF UCB RETURN AREA
MESSAGE  DS    CL100               MESSAGE WORK AREA
*
MSG1     EQU   MESSAGE             FIRST MESSAGE
UNITADD  DS    CL3                 UNIT ADDRESS FOR SEARCH
VOLSER   DS    CL6                 VOLSER FOR SEARCH
VOLEN    DS    H                   LENGTH OF VOLSER
DETAIL   EQU   MESSAGE,35          DETAIL LINE
OUTVOL   EQU   MESSAGE,6           OUTPUT VOLSER
OUTADDR  EQU   MESSAGE+8,3         OUTPUT DEVICE ADDRESS
OUTDEVT  EQU   MESSAGE+12,6        OUTPUT DEVICE TYPE
OUTMNT1  EQU   MESSAGE+19,4        FIRST MOUNT ATTRIBUTE
OUTSLASH EQU   MESSAGE+23,1        CONSTANT '/'
OUTMNT2  EQU   MESSAGE+24,5        SECOND MOUNT ATTRIBUTE
OUTCLASS EQU   MESSAGE+30,1        OUTPUT SPECIAL CLASS
OUTUCNT  EQU   MESSAGE+32,3        OUTPUT USE COUNT
J005$DV  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         TITLE 'JES2 $DV COMMAND PROCESSOR'
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E005$DV  $ENTRY BASE=R12
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER CONTENTS ON ENTRY TO THIS EXIT ROUTINE:             *
*                                                                     *
*        R5       - ADDRESS OF THE CURRENT OPERAND                    *
*        R6       - INCREMENT VALUE OF 4                              *
*        R7       - ADDRESS OF THE LAST OPERAND                       *
*        R11      - ADDRESS OF THE HCT                                *
*        R13      - ADDRESS OF THE HASPCOMM PCE                       *
*        R14      - RETURN ADDRESS                                    *
*        R15      - ENTRY ADDRESS                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*        SEE IF THIS IS A $DV COMMAND                                 *
*                                                                     *
***********************************************************************
         CLC   COMVERB(2),=C'DV'   ISF IF THIS IS THE $DV COMMAND
         BNE   EXIT0               NO, BRANCH TO COMMAND OK EXIT
         EJECT
***********************************************************************
*                                                                     *
*        $D V,VOLSER        OR                                        *
*        $D V,@UUU                                                    *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        GET A JES2 BUFFER FOR REENTRANCY AND                         *
*        CLEAR THE COMMAND WORK AREA                                  *
*                                                                     *
***********************************************************************
         SPACE 1
         $GETBUF TYPE=HASP,WAIT=YES GET A WORK AREA
         LR    R9,R1               SAVE WORK AREA ADDRESS
         USING $DVWORK,R9          SET ADDRESSABILITY TO WORK AREA
         LA    R14,$DVWORK+(BUFSTART-BFPDSECT) SET 'TO' ADDRESS
         LH    R15,$BUFSIZE        SET   'TO'   LENGTH
         SLR   R0,R0               CLEAR 'FROM' ADDRESS
         SLR   R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE BUFFER
         EJECT
***********************************************************************
*                                                                     *
*        EXAMINE THE COMMAND OPERANDS                                 *
*                                                                     *
***********************************************************************
CDVNSPEC BXH   R5,R6,CDVOK         IF NO MORE EXIT
         L     R1,0(,R5)           POINT TO OPERAND
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE VOLSER OR UNITADDRESS SUBPARAMETER               *
*                                                                     *
***********************************************************************
         SPACE 1
CDVVOL   L     R1,0(,R5)           POINT TO OPERAND
         LR    R14,R1              SAVE SUBPARAMETER ADDRESS
         SLR   R15,R15             SET LENGTH TO ZERO
         MVC   VOLSER,BLANKS       SET VOLSER TO BLANKS
         MVC   UNITADD,BLANKS      SET UNITADDRESS TO BLANKS
CDVVOL1  CLI   0(R1),C' '          END OF SUBPARAMETER STRING
         BE    CDVVOL2             YES, BRANCH
         CLI   0(R1),C','          END OF SUBPARAMETER STRING
         BE    XTRAOPND            YES, ERROR
         LA    R1,1(,R1)           INCREMENT TO NEXT CHAR OF SUBPARAM
         LA    R15,1(,R15)         ADD 1 TO LENGTH
         B     CDVVOL1             LOOP
CDVVOL2  LTR   R15,R15             TEST LENGTH
         BZ    BADOPND             ZERO, ERROR
         CLI   0(R14),C'@'         SEE IF UNITADDRESS SPECIFICATION
         BE    CDVVOL3             YES, BRANCH
         CH    R15,=H'6'           SEE IF GT 6
         BH    BADOPND             GREATER THAN 6, ERROR
         STH   R15,VOLEN           SAVE VOLSER LENGTH
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MOVEVOL         SAVE VOLSER
         EX    R15,TRTVOL          TEST VOLSER
         BNZ   BADOPND             NOT VALID, ERROR
         B     CDVNSPEC            GET NEXT SPECIFICATION
CDVVOL3  BCTR  R15,0               REDUCE LENGTH BY 1 FOR @
         LTR   R15,R15             TEST LENGTH
         BZ    BADOPND             ZERO, ERROR
         CH    R15,=H'3'           SEE IF GT 3
         BH    BADOPND             GREATER THAN 3, ERROR
         STH   R15,VOLEN           SAVE UNITADD LENGTH
         BCTR  R15,0               MAKE MACHINE LENGTH
         EX    R15,MOVEUNIT        SAVE UNITADDRESS
         EX    R15,TRTUNIT         TEST UNITADD
         BNZ   BADOPND             NOT VALID, ERROR
         B     CDVNSPEC            GET NEXT SPECIFICATION
MOVEVOL  MVC   VOLSER(0),0(R14)    MOVE VOLSER TO SAVE AREA
MOVEUNIT MVC   UNITADD(0),1(R14)   MOVE UNITADDRESS TO SAVE AREA
TRTVOL   TRT   VOLSER(0),TRTBL     TEST VOLSER
TRTUNIT  TRT   UNITADD(0),TRTBL    TEST UNITADD
TRTBL    DC    256X'01'            VALID VOLSER OR UNITADD CHARS
         ORG   TRTBL+C'A'
         DC    9X'00'              A-I
         ORG   TRTBL+C'J'
         DC    9X'00'              J-R
         ORG   TRTBL+C'S'
         DC    8X'00'              S-Z
         ORG   TRTBL+C'0'
         DC    10X'00'             0-9
         ORG
         EJECT
*****************************************************************
*                                                               *
*        CHECK FOR REDIRECTION OF RESPONSES                     *
*                                                               *
*****************************************************************
         SPACE 1
CDVOK    TM    COMFLAG,CMBFLAGU    IS THIS A UCM
         BZ    MSGGOOD             NO, SKIP REDIRECTION
REDIR    TM    FBLFLG,FBLFLGC+FBLFLGR CONSOLE SET OR REMOTE SYSTEM
         BNZ   REDIR1              SKIP AUTOMATIC L=CCA
         LA    R1,2                LOAD REDIRECT OFFSET FOR $DV
*                                  SAME AS FOR $DF
         BCTR  R1,0                REDUCE BY 1
         SLL   R1,1                DOUBLE
         SLR   R2,R2               ZERO REGISTER FOR IC
         IC    R2,COMUCM           PICK UP CURRENT UCM ID
         L     R14,$COMEXTN        POINT TO CONSOLE WORK AREA
         USING CWA,R14             SET ADDRESSABILITY TO CWA
         CH    R2,CWAOCON          SEE IF EXCEEDS MAXIMUM
         BH    REDIR1              YES, ERROR, NO AUTOMATIC REDIRECTION
         MH    R2,CWALCON          MULTIPLY BY LENGTH OF EACH ENTRY
         AR    R1,R2               COMBINE OFFSETS
         LA    R1,CWARESP-CWACONL(R1) POINT TO CORRECT CWA ENTRY
         MVC   COMUCM,CWACON(R1)   INSERT NEW CONSOLE ID
         TM    FBLFLG,FBLFLGA      HAS AREA BEEN SET
         BO    REDIR1              YES, SKIP AUTOMATIC REDIRECTION
         MVC   COMUCMA,CWACONA(R1) SET NEW AREA
         DROP  R14                 DROP ADDRESSABILITY TO CWA
         EJECT
*****************************************************************
*                                                               *
*        ROUTINE TO VERIFY CONSOLE/AREA                         *
*                                                               *
*****************************************************************
         SPACE 1
REDIR1   TM    FBLFLG,FBLFLGR      SEE IF REMOTE SYSTEM UCM
         BO    REDIR3              YES, UCM AND AREA ARE OK
         L     R2,$COMEXTN         POINT TO CONSOLE WORK AREA
         USING CWA,R2              SET ADDRESSABILITY TO CWA
         MVC   XASCID(1),COMUCM    SET UCM ID
         MVC   XASDID(1),COMUCMA   SET AREA ID
         CLI   XASDID,0            SEE IF AREA ID SPECIFIED
         BNZ   REDIR2              YES, BRANCH
         MVI   XASDID,C'Z'         NO,  FORCE AREA Z
REDIR2   MVC   XAU(1),COMUCM       TELL OS SOURCE IS SAME AS OUTPUT
         MVI   XAN,X'22'           SET ID FOR VERIFIER
         MODESET EXTKEY=ZERO       GET KEY 0
         L     R15,CWA7603D        POINT TO OS VERIFICATION ROUTINE
         $AMODE 24,PUSHR=0,R=R14   GO TO AMODE 24
         BALR  R14,R15             ENTER IT
         $AMODE POPR=0,R=R14       RETURN TO ORIGINAL AMODE
         MODESET EXTKEY=HASP       RETURN TO KEY 1
         CH    R15,=H'4'           CHECK FOR SERIOUS ERROR
         BNH   REDIR3              NO, GO ISSUE ERROR MESSAGE
         SLR   R3,R3               CLEAR REGISTER FOR ICM
         ICM   R3,B'0011',COMUCM   PICK UP UCM AND AREA ID
         MVI   COMUCMA,0           FORCE NO DISPLAY AREA
         CH    R15,=H'12'          SEE IF CONSOLE DOWN
         BNE   *+16                NO, DO NOT SET LOGICAL CONSOLE
         MVC   COMFLAG(4),MOWTOL   DESTROY APPARENT SOURCE INFO
         MVC   COMOUT,MOWTOL+(COMOUT-COMFLAG) OMITTING CNTL FIELD
         $CWTO L=L'CMBMSG,MSGID=900 ECHO THE COMMAND
         MVC   COMMAND(MBVINVL),MBVINV SET ERROR MESSAGE TEXT
         STC   R3,MBVINVA          SET AREA
         SRL   R3,8                ALIGN CONSOLE ID
         CVD   R3,$DOUBLE          CONVERT TO PACKED
         MVC   WRKA(4),=X'F0212020' SET EDIT MASK
         ED    WRKA(4),$DOUBLE+6   EDIT CONSOLE ID TO AREA
         MVC   MBVINVC,WRKA+2      MOVE CONSOLE ID TO MESSAGE
         MVC   COMMAND+MBVINVL(8),COMACEID MOVE IDENTIFIER
         $CWTO L=MBVINVL,MSGID=999 WRITE ERROR MESSAGE TO CONSOLE
         B     EXIT8               GET OUT
         DROP  R2                  DROP ADDRESSABILITY TO CWA
REDIR3   CLI   COMUCMA,0           TEST FOR DISPLAY AREA
         BE    MSGGOOD             IF NOT, SKIP
         MVI   COMLINET,X'80'      SET CONTROL LINE
         $CWTO L=L'CMBMSG,MSGID=900 ECHO THE COMMAND
         MVI   COMLINET,X'20'      SET DATA LINE
         B     MSGGOOD             CONTINUE
         EJECT
*****************************************************************
*                                                               *
*       R E D I R E C T   R O U T I N E   C O N S T A N T S     *
*                                                               *
*****************************************************************
         SPACE 1
MOWTOL   $WTO  PRI=$HI,CLASS=$ALWAYS,JOB=NO,ROUTE=X'C000',MF=LX
MBVINV   DC    C'RESPONSE LOCATION L=CCA UNAVAILABLE '
MBVINVL  EQU   *-MBVINV
MBVINVC  EQU   COMMAND+MBVINVL-16,2
MBVINVA  EQU   MBVINVC+2,1
FBLFLG   EQU   COMEWORK+2          FLAG BYTE
COMJMBR  EQU   COMJRMT             SHARED SPOOL MEMBER NUMBER
FBLFLGR  EQU   1                   UCM COMMAND FROM REMOTE SYSTEM
FBLFLGC  EQU   2                   CONSOLE HAS BEEN SPECIFIED
FBLFLGA  EQU   4                   AREA HAS BEEN SPECIFIED
         EJECT
***********************************************************************
*                                                                     *
*        SCAN THE UCBS FOR THE REQUESTED VOLSER(S)                    *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        SCAN UCB TABLE                                               *
*                                                                     *
***********************************************************************
         SPACE 1
MSGGOOD  CLI   VOLSER,0            SEE IF A VOLSER ENTERED
         BE    NOOPND              NO, ERROR
UCBLKUP  L     R1,CVTPTR           GET CVT ADDRESS
         L     R6,CVTUCBSC-CVT(R1) POINT TO UCB SCAN SERVICE RTN
         ST    R6,IOSVSUCB         SAVE ADDR OF UCB SCAN ROUTINE
         MVI   DEVCLASS,UCB3DACC   SET FOR DASD UCBS ONLY
         LA    R1,SCANWORK         LOAD ADDRESS OF SCAN WORK AREA
         ST    R1,SCANP1           SAVE IN PARM LIST
         LA    R1,DEVCLASS         LOAD ADDRESS OF DEVICE CLASS
         ST    R1,SCANP2           SAVE IN PARM LIST
         LA    R1,UCBADDR          LOAD ADDRESS OF UCB RETURN
         ST    R1,SCANP3           SAVE IN PARM LIST
         OI    SCANP3,X'80'        TURN ON HIGH ORDER BIT
         XC    SCANWORK,SCANWORK   CLEAR SCAN SERVICE WORK AREA
CDVLOOP  L     R15,IOSVSUCB        LOAD ADDR OF UCB SCAN ROUTINE
         LA    R1,SCANPARM         LOAD ADDRESS OF UCB SCAN PARM
         BALR  R14,R15             GO TO UCB SCAN SERVICE ROUTINE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ENDUCBS             NOT ZERO, END OF UCBS
         L     R8,UCBADDR          LOAD UCB ADDRESS
         EJECT
***********************************************************************
*                                                                     *
*        TEST EACH UCB FOR PROPER ATTRIBUTES                          *
*                                                                     *
***********************************************************************
         SPACE 1
         USING UCBCMSEG,R8         SET ADDRESSABILITY TO UCB
         TM    UCBTBYT3,UCB3DACC   DIRECT ACCESS?
         BZ    CDVLOOP             NO
         TM    UCBSTAT,UCBONLI     ONLINE?
         BNO   CDVLOOP             NO, IGNORE DEVICE
         CLC   UCBTBYT3(2),=X'2005' DATA CELL?
         BE    CDVLOOP             IF SO SKIP IT
         TM    UCBVOLI,X'FF'       ANY NAME?
         BZ    CDVLOOP             NO, IGNORE IT
***********************************************************************
*                                                                     *
*        SEE IF OUR VOLSER                                            *
*                                                                     *
***********************************************************************
         LH    R1,VOLEN            LOAD VOLSER/UNITADD LENGTH
         BCTR  R1,0                MACHINE LENGTH
USENAME  CLI   UNITADD,C' '        SEE IF UNITADDRESS SPECIFIED
         BNE   USEUNIT             YES, BRANCH
         EX    R1,EXCLC1           SEE IF THIS IS A MATCH
         BE    USEUCB              YES, GO FORMAT THE UCB
         B     CDVLOOP             NO, SKIP IT
         SPACE 1
USEUNIT  EX    R1,EXCLC2           SEE IF THIS IS A MATCH
         BE    USEUCB              YES, GO FORMAT THE UCB
         B     CDVLOOP             NO, SKIP IT
         SPACE 1
EXCLC1   CLC   VOLSER(0),UCBVOLI   *** EXECUTE ONLY ***
EXCLC2   CLC   UNITADD(0),UCBNAME  *** EXECUTE ONLY ***
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT UCB INFORMATION                                       *
*                                                                     *
***********************************************************************
         SPACE 1
USEUCB   DS    0H
         OI    SWITCH,FOUND        TURN ON FOUND SWITCH
         MVC   DETAIL,BLANKS       CLEAR THE DETAIL LINE
         MVC   OUTVOL,UCBVOLI      MOVE VOLSER TO DETAIL LINE
         MVC   OUTADDR,UCBNAME     MOVE UNIT ADDRESS TO DETAIL LINE
         PRINT OFF
***********************************************************************
*                                                                     *
*        SET THE ICM MASK FOR THE UCB USER FIELD.  IN SP SYSTEMS      *
*        THE LENGTH IS 1.  IN XA SYSTEMS THE LENGTH IS 2.  CODE       *
*        IS SET FOR ANY LENGTH UP TO 4.                               *
*                                                                     *
***********************************************************************
         LCLA  &MASK
&MASK    SETA  1
         AIF   (L'UCBUSER EQ 1).LENOK
&MASK    SETA  3
         AIF   (L'UCBUSER EQ 2).LENOK
&MASK    SETA  7
         AIF   (L'UCBUSER EQ 3).LENOK
&MASK    SETA  15
.LENOK   ANOP
         PRINT ON
         XR    R1,R1               ZERO REG FOR IC
         ICM   R1,&MASK,UCBUSER    LOAD USE COUNT
         CVD   R1,DOUBLE           CONVERT USE COUNT TO PACKED
         OI    DOUBLE+7,X'0F'      FIX SIGN BITS
         UNPK  OUTUCNT,DOUBLE+6(2) MOVE USE COUNT TO DETAIL LINE
         MVC   OUTDEVT,=CL6'3350'  SET DEVICE TYPE TO 3350
         CLI   UCBTBYT4,X'0B'      IS THIS A 3350?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'3380'  SET DEVICE TYPE TO 3380
         CLI   UCBTBYT4,X'0E'      IS THIS A 3380?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'3330-1' SET DEVICE TYPE TO 3330-1
         CLI   UCBTBYT4,X'0D'      IS THIS A 3330-1?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'3330'  SET DEVICE TYPE TO 3330
         CLI   UCBTBYT4,X'09'      IS THIS A 3330?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'3340'  SET DEVICE TYPE TO 3340
         CLI   UCBTBYT4,X'0A'      IS THIS A 3340?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'3375'  SET DEVICE TYPE TO 3375
         CLI   UCBTBYT4,X'0C'      IS THIS A 3375?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'2305-2' SET DEVICE TYPE TO 2305-2
         CLI   UCBTBYT4,X'07'      IS THIS A 2305-2?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'2305-1' SET DEVICE TYPE TO 2305-1
         CLI   UCBTBYT4,X'06'      IS THIS A 2305-1?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'2314'  SET DEVICE TYPE TO 2314
         CLI   UCBTBYT4,X'08'      IS THIS A 2314?
         BE    CKMNT1              YES, GO CHECK MOUNT ATTR
         MVC   OUTDEVT,=CL6'UNKN'  SET DEVICE TYPE TO UNKN
CKMNT1   MVC   OUTMNT1,=CL4'PRIV'  SET 1ST MOUNT ATTR TO PRIV
         TM    UCBSTAB,UCBBPRV     IS IT MOUNTED PRIVATE?
         BO    CKMNT2              YES, GO CHECK NEXT MOUNT ATTR
         MVC   OUTMNT1,=CL4'STRG'  SET 1ST MOUNT ATTR TO STRG
         TM    UCBSTAB,UCBBSTR     IS IT MOUNTED AS STORAGE?
         BO    CKMNT2              YES, GO CHECK NEXT MOUNT ATTR
         MVC   OUTMNT1,=CL4'PUBL'  SET 1ST MOUNT ATTR TO PUBL
         TM    UCBSTAB,UCBBPUB     IS IT MOUNTED PUBLIC?
         BO    CKMNT2              YES, GO CHECK NEXT MOUNT ATTR
         MVC   OUTMNT1,=CL4'UNKN'  SET 1ST MOUNT ATTR TO UNKN
CKMNT2   MVI   OUTSLASH,C'/'       SET SLASH CONSTANT
         MVC   OUTMNT2,=CL5'RSDNT' SET 2ND MOUNT ATTR TO RSDNT
         TM    UCBSTAT,UCBPRES     IS IT MOUNTED PERM RESIDENT?
         BO    SPECLASS            YES, GO CHECK FOR SPEC CLASS
         MVC   OUTMNT2,=CL5'RSERV' SET 2ND MOUNT ATTR TO RSERV
         TM    UCBSTAT,UCBRESV     IS IT MOUNTED RESERVED?
         BO    SPECLASS            YES, GO CHECK FOR SPEC CLASS
         MVC   OUTMNT2,=CL5'UNKN'  SET 2ND MOUNT ATTR TO UNKN
SPECLASS MVI   OUTCLASS,C'S'       SET TO SYSRES VOLUME
         TM    UCBSTAT,UCBSYSR     IS IT THE SYSRES VOLUME?
         BO    ENDFMT              YES, END OF FORMAT ROUTINE
         MVI   OUTCLASS,C'P'       SET TO PAGING VOLUME
         TM    UCBSTAB,UCBPGFL     IS IT USED AS A PAGING VOLUME?
         BO    ENDFMT              YES, END OF FORMAT ROUTINE
         MVI   OUTCLASS,C' '       SET TO NO SPECIAL CLASS
ENDFMT   DS    0H
***********************************************************************
*                                                                     *
*        WRITE THE MESSAGE FOR THIS UCB                               *
*                                                                     *
***********************************************************************
         LA    R0,35               WRITE FIRST MESSAGE
         LA    R1,MESSAGE          LOAD ADDRESS OF MESSAGE
         $CWTO L=(R0),MSG=(R1),MSGID=900  DISPLAY MESSAGE
SETFND   OI    SWITCH,FOUND        TURN ON MATCH FOUND SWITCH
         B     CDVLOOP             GO GET ANOTHER UCB
         EJECT
***********************************************************************
*                                                                     *
*        END OF ALL UCBS.  IF NO MESSAGES WERE ISSUED, ISSUE          *
*        A MESSAGE THAT NO VOLUMES WERE FOUND.                        *
*                                                                     *
***********************************************************************
ENDUCBS  TM    SWITCH,FOUND        WAS A MATCH FOUND
         BZ    NOUTPUT             NO, BRANCH
         B     EXIT8               GET OUT
NOUTPUT  $CWTO MSG='NO VOLUME(S) FOUND',MSGID=919  ISSUE MESSAGE
         B     EXIT8               GET OUT
         SPACE 1
***********************************************************************
*                                                                     *
*        INVALID $DV OPERAND                                          *
*                                                                     *
***********************************************************************
         SPACE 1
BADOPND  L     R1,0(0,R5)          POINT TO INVALID OPERAND
         MVC   COMMAND(9),0(R1)    MOVE 9 CHARACTERS OF OPERAND TO MSG
         MVC   COMMAND+9(16),=C' INVALID OPERAND' SET ERROR MSG
         LA    R0,25               SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=950    WRITE ERROR MESSAGE
         B     EXIT8               GET OUT
         SPACE 1
***********************************************************************
*                                                                     *
*        TOO MANY $DV OPERANDS                                        *
*                                                                     *
***********************************************************************
         SPACE 1
XTRAOPND MVC   COMMAND(18),=C' TOO MANY OPERANDS' SET ERROR MSG
         LA    R0,18               SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=951    WRITE ERROR MESSAGE
         B     EXIT8               GET OUT
         SPACE 1
***********************************************************************
*                                                                     *
*        NO VOLSER ENTERED                                            *
*                                                                     *
***********************************************************************
         SPACE 1
NOOPND   MVC   COMMAND(18),=C' NO VOLSER ENTERED' SET ERROR MSG
         LA    R0,18               SET MESSAGE LENGTH
         $CWTO L=(R0),MSGID=952    WRITE ERROR MESSAGE
         B     EXIT8               GET OUT
         EJECT
***********************************************************************
*                                                                     *
*                    E X I T     R O U T I N E S                      *
*                                                                     *
*        RC = 00 - CONTINUE USING ANY ADDITIONAL EXITS                *
*        RC = 04 - CONTINUE WITHOUT USING ANY ADDITIONAL EXITS        *
*        RC = 08 - TERMINATE WITHOUT ANY MESSAGE                      *
*        RC = 12 - TERMINATE ISSUING THE "OK" MESSAGE                 *
*        RC = 16 - TERMINATE USING A USER SUPPLIED MESSAGE            *
*                                                                     *
***********************************************************************
EXIT0    DS    0H
         LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
EXIT8    DS    0H
         $FREEBUF (R9)             FREE THE WORK AREA
         LA    R15,8               SET RETURN CODE TO 8
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
         LTORG
         SPACE 3
BLANKS   DC    100C' '             STRING OF BLANKS
         EJECT
         $MODEND
         END
