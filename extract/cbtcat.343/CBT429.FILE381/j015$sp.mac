         TITLE 'JES2 EXIT 15 DATASET SEPARATOR EXIT FOR XEROX 3700'
***********************************************************************
*                                                                     *
*        ENVIRONMENT   MVS SP 2.2.0                                   *
*                                                                     *
*        THIS JES2 EXIT PROGRAM WILL GAIN CONTROL BETWEEN EACH        *
*        DATASET OF AN OUTPUT GROUP AND BETWEEN COPIES OF A           *
*        DATASET.  THIS SPECIFIC EXIT WILL BE FUNCTIONAL ONLY         *
*        FOR OUR XEROX 3700 RJE DEVICES.  ALL OTHER DEVICES           *
*        WILL BE A QUICK EXIT.  THIS EXIT WILL USE THE XJCF           *
*        PRODUCT (XENOS COMPUTER SYSTEM) EXTENSION FIELDS IN          *
*        THE JOE AND THE PDDB TO CREATE DJDE RECORDS FOR EACH         *
*        OUTPUT DATASET GOING TO THE 3700'S.  NOT ALL OF THE          *
*        EXTENSIONS WILL BE SUPPORTED, BUT AN ATTEMPT WILL BE         *
*        MADE TO KEEP THEM AS COMPATABLE AS POSSIBLE.                 *
*                                                                     *
*        THIS EXIT ASSUMES THAT THE JOB SEPARATOR PAGE HAS            *
*        ALREADY BEEN PRINTED AND THAT ALL IS REQUIRED IS TO          *
*        WRITE THE DJDE FOR THE DATASET.  EXIT1 COULD NOT             *
*        EASILY PERFORM THIS FUNCTION SINCE THE PDDB IS NOT           *
*        AVAILABLE TO THAT EXIT.                                      *
*                                                                     *
*        WRITTEN BY:                                                  *
*                        JOHN V. HOOPER                               *
*                        FIRST UNION NATIONAL BANK                    *
*                        301 SOUTH TRYON STREET                       *
*                        CHARLOTTE, N.C.  28288                       *
*                        (704) 374-2427                               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*              M A C R O S   U S E D   I N   J 0 1 5 $ S P            *
*                                                                     *
*        01)  $BUFFER      SYS1.HASPSRC                               *
*        02)  $CALL        SYS1.HASPSRC                               *
*        03)  $CAT         SYS1.HASPSRC                               *
*        04)  $DCT         SYS1.HASPSRC                               *
*        05)  $DTE         SYS1.HASPSRC                               *
*        06)  $ENTRY       SYS1.HASPSRC                               *
*        07)  $ERA         SYS1.HASPSRC                               *
*        08)  $FCSUCT      SYS1.HASPSRC (USER)                        *
*        09)  $FREEBUF     SYS1.HASPSRC                               *
*        10)  $GETBUF      SYS1.HASPSRC                               *
*        11)  $HASPEQU     SYS1.HASPSRC                               *
*        12)  $HASPGBL     SYS1.HASPSRC                               *
*        13)  $HCT         SYS1.HASPSRC                               *
*        14)  $HFAME       SYS1.HASPSRC                               *
*        15)  $JCT         SYS1.HASPSRC                               *
*        16)  $JOE         SYS1.HASPSRC                               *
*        17)  $JQE         SYS1.HASPSRC                               *
*        18)  $MIT         SYS1.HASPSRC                               *
*        19)  $MODEND      SYS1.HASPSRC                               *
*        20)  $MODULE      SYS1.HASPSRC                               *
*        21)  $PADDR       SYS1.HASPSRC                               *
*        22)  $PCE         SYS1.HASPSRC                               *
*        23)  $PDDB        SYS1.HASPSRC                               *
*        24)  $PPPWORK     SYS1.HASPSRC                               *
*        25)  $PRPUT       SYS1.HASPSRC                               *
*        26)  $RDT         SYS1.HASPSRC                               *
*        27)  $RETURN      SYS1.HASPSRC                               *
*        28)  $SAVE        SYS1.HASPSRC                               *
*        29)  $SCAT        SYS1.HASPSRC                               *
*        30)  $SVT         SYS1.HASPSRC                               *
*        31)  $XECB        SYS1.HASPSRC                               *
*        32)  CVT          SYS1.AMODGEN                               *
*        33)  IFGRPL       SYS1.MACLIB                                *
*                                                                     *
*                                                                     *
*              L I N K A G E    E D I T O R    I N F O                *
*                                                                     *
*        SIZE:       4K                                               *
*        ATTRIBUTES: REENTRANT, REUSEABLE, REFRESHABLE                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         COPY  $HASPGBL
J015$SP  $MODULE SYSP=(GEN,GEN,DATA,GEN,GEN),                          X
               ENVIRON=JES2,                                           X
               TITLE='JES2 EXIT15 DATASET SEPARATOR EXIT',             X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $CAT,               GENERATE HASP CAT DSECT             X
               $DCT,               GENERATE HASP DCT DSECT             X
               $DTE,               GENERATE HASP DTE DSECT             X
               $ERA,               GENERATE HASP ERA DSECT             X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $HFAME,             GENERATE HASP FAME DSECT            X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $JQE,               GENERATE HASP JQE DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $PDDB,              GENERATE HASP PDDB DSECT            X
               $PPPWORK,           GENERATE HASP PPPWORK DSECT         X
               $RDT,               GENERATE HASP RDT DSECT             X
               $SCAT,              GENERATE HASP SCAT DSECT            X
               $SVT,               GENERATE HASP SSVT DSECT            X
               $XECB,              GENERATE HASP XECB DSECT            X
               CVT,                GENERATE MVS CVT DSECT              X
               RPL                 GENERATE MVS RPL DSECT
         TITLE 'JES2 EXIT 15 DATASET SEPARATOR EXIT FOR XEROX 3700'
         $FCSUCT ,                 MAP THE UCT DSECT
J015$SP  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         EJECT
***********************************************************************
*                                                                     *
*        WORK AREA USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
HDRDSECT DSECT                     HASP HEADER DSECT
         DS    CL(BUFSTART-BFPDSECT) *****  RESERVED BY JES2 *****
HDR      DS    CL133
J015$SP  CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         SPACE 3
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         EJECT
***********************************************************************
*                                                                     *
*        EXIT MAIN ENTRY POINT                                        *
*                                                                     *
***********************************************************************
E015$SP  $ENTRY BASE=(R9,R12)
         SPACE 1
         $SAVE                     SAVE CALLER'S REGISTERS
         LR    R9,R15              LOAD FIRST BASE REGISTER
         LA    R12,4095(R9)        LOAD SECOND
         LA    R12,1(R12)               BASE REGISTER
         CH    R0,=H'4'            IS THIS ENTRY FOR DATASET SEPARATOR
         BNE   EXITQ               NO, TAKE QUICK EXIT
         LR    R4,R1               SAVE INPUT PARM ADDRESS
         L     R10,8(R4)           LOAD JCT ADDRESS
         L     R2,16(R4)           LOAD INPUT DCT ADDRESS
         USING DCT,R2              SET ADDRESSABILITY TO DCT
         L     R3,12(R4)           LOAD INPUT PDDB ADDRESS
         USING PDB,R3              SET ADDRESSABILITY TO PDDB
         CLC   DCTDEVN(6),=CL6'R20.PR'  SEE IF ONE OF OUR 3700'S
         BE    DEV3700             YES, BRANCH
         CLC   DCTDEVN(6),=CL6'R21.PR'  SEE IF ONE OF OUR 3700'S
         BNE   EXITQ               NO, TAKE QUICK EXIT
***********************************************************************
*                                                                     *
*        MODIFY THE PRINT TRANSLATE TABLE TO THE NULL TABLE IN        *
*        THE UCT.  THIS ALLOWS THESE DEVICES TO EFFECTIVELY BE        *
*        TRANSLATE = NO.                                              *
*                                                                     *
***********************************************************************
DEV3700  ICM   R5,B'1111',$UCT     LOAD UCT ADDRESS
         BZ    CKDJDE              NONE, BYPASS THIS ROUTINE
         USING UCT,R5              SET ADDRESSABILITY TO UCT
         LA    R15,UCTXLAT         LOAD ADDRESS OF TRANSLATE TABLE
         ST    R15,24(R4)          MODIFY ADDRESS IN PARM LIST
         DROP  R5                  DROP ADDRESSABILITY TO UCT
CKDJDE   TM    PDBFLAG9,PDB9NODJ   SEE IF NO DJDE REQUESTED
         BO    EXITQ               YES, TAKE QUICK EXIT
         $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER
         LR    R8,R1               SAVE ADDRESS OF BUFFER
         USING HDRDSECT,R8         SET ADDRESSABILITY TO HEADER LINE
         LA    R14,HDRDSECT+(BUFSTART-BFPDSECT) SET 'TO' ADDRESS
         LH    R15,$BUFSIZE        SET   'TO'   LENGTH
         SLR   R0,R0               CLEAR 'FROM' ADDRESS
         SLR   R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE BUFFER
***********************************************************************
*                                                                     *
*        PRODUCE THE DJDE FOR DATASET.                                *
*                                                                     *
***********************************************************************
         MVI   HDR,C' '            BLANK THE ENTIRE
         MVC   HDR+1(132),HDR         DJDE WORK AREA
         LA    R15,HDR             LOAD ADDRESS OF DJDE AREA
         MVC   HDR(LDJDE1),DJDE1   SET SPECIAL DJDE LINE
         LA    R15,LDJDE1(R15)     INCREMENT PAST DJDE
         L     R6,PPPCHJOE         LOAD ADDRESS CHARACTERISTICS JOE
         USING JOE,R6              SET ADDRESSABILITY TO JOE
CKSHIFT  TM    JOEFLAGC,JOEFCSFT   SEE IF SHIFT=YES
         BO    SHIFT               YES, BRANCH
NOSHIFT  MVC   0(9,R15),=C'SHIFT=NO,' SET FOR SHIFT=NO
         LA    R15,9(R15)          INCREMENT BY LENGTH OF KEYWORD
         B     CKORIENT            GO CHECK NEXT FIELD
SHIFT    MVC   0(10,R15),=C'SHIFT=YES,' SET FOR SHIFT=YES
         LA    R15,10(R15)         INCREMENT BY LENGTH OF KEYWORD
CKORIENT TM    PDBFLAG9,PDB9PORT   SEE IF PMODE=PORTRAIT
         BO    PORTRAIT            YES, BRANCH
LANDSCAP MVC   0(16,R15),=C'PMODE=LANDSCAPE,' SET FOR LANDSCAPE
         LA    R15,16(R15)         INCREMENT BY LENGTH OF KEYWORD
         B     CKPDE               GO CHECK NEXT FIELD
PORTRAIT MVC   0(15,R15),=C'PMODE=PORTRAIT,' SET FOR PORTRAIT
         LA    R15,15(R15)         INCREMENT BY LENGTH OF KEYWORD
CKPDE    MVC   0(7,R15),=C'FORMAT=' SET PDE KEYWORD
         LA    R15,7(R15)          INCREMENT BY LENGTH OF KEYWORD
         CLI   PDBXFMT,C'*'        SEE IF PDE SPECIFIED
         BE    NOPDE               NO, BRANCH
PDE      MVC   0(6,R15),PDBXFMT    SET PDE NAME
PDE1     CLI   0(R15),C' '         END OF PDE
         BE    PDE2                YES, BRANCH
         LA    R15,1(R15)          INCREMENT TO NEXT CHAR OF PDE NAME
         B     PDE1                LOOP
PDE2     MVI   0(R15),C','         SET END OF VALUE
         LA    R15,1(R15)          INCREMENT PAST ','
         B     CKFLASH             GO CHECK NEXT FIELD
NOPDE    MVC   0(6,R15),=C'PDFLT,' ASSUME PORTRAIT
         TM    PDBFLAG9,PDB9PORT   SEE IF PMODE=PORTRAIT
         BO    NOPDE1              YES, BRANCH
         MVC   0(6,R15),=C'LDFLT,' MAKE LANDSCAPE
NOPDE1   LA    R15,6(R15)          INCREMENT PAST PDE NAME
CKFLASH  MVC   0(6,R15),=C'FORMS=' SET FORMS KEYWORD
         LA    R15,6(R15)          INCREMENT PAST KEYWORD
         MVC   0(4,R15),JOEFLASH   SET PROBABLE FORMS NAME
         CLI   JOEFLASH,C'*'       SEE IF DEFAULT FLASH
         BE    CKFLASH1            YES, BRANCH
         CLC   JOEFLASH,=C'LINE'   SEE IF SPECIAL FLASH NAME
         BNE   CKFLASH2            NO, BRANCH
CKFLASH1 MVC   0(4,R15),=C'P001'   ASSUME PORTRAIT
         TM    PDBFLAG9,PDB9PORT   SEE IF PMODE=PORTRAIT
         BO    CKFLASH2            YES, BRANCH
         MVC   0(4,R15),=C'L001'   MAKE LANDSCAPE
CKFLASH2 CLI   0(R15),C' '         END OF FORM NAME
         BE    CKFLASH3            YES, BRANCH
         LA    R15,1(R15)          INCREMENT TO NEXT CHAR OF FORM NAME
         B     CKFLASH2            LOOP
CKFLASH3 MVI   0(R15),C','         SET END OF VALUE
         LA    R15,1(R15)          INCREMENT PAST ','
CKOPTCD  TM    PDBFLAG2,PDB2OPTJ   SEE IF OPTCD=J SPECIFIED
         BO    CKOPTCD1            YES, BRANCH
         MVC   0(15,R15),=C'FONTINDEX=NONE,' SET NO FONTINDEX
         LA    R15,15(R15)         INCREMENT PAST PARAMETER
         MVC   0(13,R15),=C'DATA=(0,150),'   SET FULL DATA LINE
         LA    R15,13(R15)         INCREMENT PAST PARAMETER
         B     ENDDJDE             GET OUT
CKOPTCD1 MVC   0(12,R15),=C'FONTINDEX=0,' SET FONTINDEX
         LA    R15,12(R15)         INCREMENT PAST PARAMETER
         MVC   0(13,R15),=C'DATA=(1,150),'   SET PARTIAL DATA LINE
         LA    R15,13(R15)         INCREMENT PAST PARAMETER
ENDDJDE  MVC   0(4,R15),=C'END;'   FLAG END OF DJDE
         LA    R1,HDR              SET DJDE ADDRESS
         LA    R0,133              SET LENGTH = 133
         $PRPUT DATA=(R1),LEN=(R0),WAIT=YES,CC=M WRITE DJDE
         EJECT
***********************************************************************
*                                                                     *
*                           E X I T                                   *
*                                                                     *
*             RETURN CODE OF 0 TELLS JES2 TO CALL ANY ADDITIONAL      *
*             EXIT ROUTINES AND CONTINUE WITH NORMAL JES2             *
*             PROCESSING.                                             *
*                                                                     *
***********************************************************************
EXIT     $FREEBUF (R8)             FREE SECOND WORK BUFFER
EXITQ    LA    R15,0               SET RETURN CODE TO 0
         $RETURN RC=(R15)          RETURN TO JES2
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS USED BY THIS JES2 EXIT                             *
*                                                                     *
***********************************************************************
DJDE1    DC    X'01'
         DC    C'$X9700$DJDE COPIES=1,'
LDJDE1   EQU   *-DJDE1
         SPACE 3
***********************************************************************
*        ROUTINE CONSTANTS                                            *
***********************************************************************
         LTORG
         EJECT
         $MODEND
         END
