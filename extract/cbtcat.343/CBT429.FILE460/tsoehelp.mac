PROC 1   COMMAND  DEBUG
         IF &DEBUG ^= THEN CONTROL LIST SYMLIST CONLIST
         ISPEXEC CONTROL ERRORS RETURN
         SET TABLE = &STR(TSO&SUBSTR(4:8,&SYSTIME))
         ISPEXEC LMINIT DATAID(ID) DDNAME(SYSHELP)
         IF &LASTCC ^= 0 THEN DO
             ISPEXEC SETMSG MSG(&ZERRMSG)
             EXIT CODE(12)
             END

         ISPEXEC LMOPEN DATAID(&ID)
         IF &LASTCC ^= 0 THEN DO
             ISPEXEC SETMSG MSG(&ZERRMSG)
             ISPEXEC LMFREE DATAID(&ID)
             EXIT CODE(12)
             END

         ISPEXEC LMMFIND DATAID(&ID) MEMBER(&COMMAND)
         IF &LASTCC ^= 0 THEN DO
             ISPEXEC SETMSG MSG(&ZERRMSG)
             ISPEXEC LMCLOSE DATAID(&ID)
             ISPEXEC LMFREE DATAID(&ID)
             EXIT CODE(12)
             END
         SET CMD =
         SET RECORD =
         SET TYPE =
         ISPEXEC CONTROL ERRORS CANCEL
         ISPEXEC TBCREATE &TABLE NAMES(TYPE RECORD) NOWRITE REPLACE
         IF &LASTCC ^= 0 THEN DO
             ISPEXEC SETMSG MSG(&ZERRMSG)
             ISPEXEC LMCLOSE DATAID(&ID)
             ISPEXEC LMFREE DATAID(&ID)
             EXIT CODE(12)
             END

         DO WHILE &SUBSTR(1,&STR(&RECORD)    ) ^= +
             &SUBSTR(2,&STR(()X)  )
             ISPEXEC LMGET DATAID(&ID) MODE(INVAR) DATALOC(RECORD) +
             DATALEN(RECLEN) MAXLEN(72)
             IF &LASTCC = 8 THEN GOTO DISPL1
             END

         SET TYPE = &SUBSTR(2:2,&STR(&RECORD  )  )
         SET CMDHELP =
   SET RECORD = &STR(&SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))
         ISPEXEC TBADD &TABLE

         DO WHILE &SUBSTR(1,&STR(&RECORD)    ) ^= +
             &SUBSTR(2,&STR((=Y)  )
             ISPEXEC LMGET DATAID(&ID) MODE(INVAR) DATALOC(RECORD) +
             DATALEN(RECLEN) MAXLEN(72)
             IF &LASTCC = 8 THEN GOTO DISPL1
             IF &SUBSTR(1,&STR(&RECORD)   ) EQ &SUBSTR(2:2,&STR(()X) ) +
             THEN DO
                  SET TYPE = &SUBSTR(2,&STR(&RECORD ) )
                  IF &SUBSTR(2,&STR(&RECORD)   ) EQ +
                      &SUBSTR(2,&STR(()X ) ) OR +
                      &SUBSTR(2,&STR(&RECORD)   ) EQ P OR +
                      &SUBSTR(2,&STR(&RECORD)   ) EQ &STR(O) THEN DO
                      SET TYPE = &SUBSTR(2,&STR(()X ) )
   SET RECORD = &STR(&SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))
                      ISPEXEC TBADD &TABLE
                      END
                  ELSE DO
   SET RECORD = &STR(  &SUBSTR(3:&LENGTH(&STR(&RECORD)),&STR(&RECORD)))
                  ISPEXEC TBADD &TABLE
                  END
                 END
             ELSE DO
                 ISPEXEC TBADD &TABLE
                 IF &LASTCC ^= 0 THEN DO
                     ISPEXEC SETMSG MSG(&ZERRMSG)
                     END
                 END
             END
DISPL1:  +
         ISPEXEC LMCLOSE DATAID(&ID)
         ISPEXEC LMFREE DATAID(&ID)
         SET TYPE = &SUBSTR(2,&STR(()X  ) )
         SET RECORD =
         ISPEXEC TBADD &TABLE
         SET TYPE = F
         ISPEXEC TBADD &TABLE
         SET TYPE = X
         ISPEXEC TBADD &TABLE
         ISPEXEC TBTOP &TABLE
         SET CMD = &STR(&COMMAND)
DISPL:   +
         SET SW =
         SET CSRPOS = &LENGTH(&COMMAND)
         SET SAVETYPE = &STR(&TYPE)
         ISPEXEC TBVCLEAR &TABLE
         SET TYPE = &STR(&SAVETYPE)
         ISPEXEC TBSARG &TABLE
         ISPEXEC TBDISPL &TABLE +
             PANEL(TSOBHELP) CSRPOS(&EVAL(&CSRPOS + 2))
         IF &LASTCC ^= 0 THEN DO
             ISPEXEC TBEND &TABLE
             EXIT
             END
         ISPEXEC VGET (ZVERB ZSCROLLN) SHARED
         IF &STR(&ZVERB) NE THEN DO
             IF &ZVERB = UP THEN SET MINUS = &STR(-)
             ELSE SET MINUS =
             ISPEXEC TBSKIP &TABLE NUMBER(&MINUS.&ZSCROLLN)
             GOTO DISPL
             END

         IF &SW NE THEN DO
             ISPEXEC TBTOP &TABLE
             GOTO DISPL
             END

         ISPEXEC CONTROL DISPLAY LINE START(10)
         ISPEXEC SELECT CMD(&CMD)
         GOTO DISPL
