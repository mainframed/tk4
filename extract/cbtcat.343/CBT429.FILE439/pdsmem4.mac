 PDSMEM4: PROC(PARM) OPTIONS(MAIN);
 /* PROGRAM TO DISPLAY MEMBER SEARCH RESULTS */
 DCL PARM CHAR(8) VAR;
 DCL PLIXOPT CHAR(40) VAR INIT('ISA(50K)') EXT STATIC;
 %INCLUDE PDS2FILE; /* DEKLARATIONEN FUER EINGABE-DATEI */
 %INCLUDE PDS2ISPF; /* ISPF-DECLARES */
 %INCLUDE PDS2CMEM;
 %INCLUDE PDS2READ;
 %INCLUDE PDS2SDSN;

 DCL (SUBSTR,TRANSLATE,STG,PLIRETV) BUILTIN;
 DCL PDSMEMALT CHAR(8) STATIC INIT(' ');
 DCL XDSN CHAR(80) STATIC INIT(' ');
 DCL ROWCNT BIN FIXED(31) STATIC INIT(10000);
 DCL MEMSTACK(500) CHAR(8) STATIC;
 MEMSTACK(1) = ' ';
 PDSMAX = 0;

 CALL ISPLINK('CONTROL ','ERRORS ','RETURN ');

 IF PARM ^= ' ' THEN
   DO;
      PDSMEMM = PARM;
      PDSMEMALT = PDSMEMM;
      PDSCUR,PDSMAX = 1;
      MEMSTACK(PDSCUR) = PDSMEMM;
   END;

 CALL READMEM(PDSMEMM);
 SHOW_PANEL: CALL ISPLINK('TBDISPL ','PDSMEMT ','PDSMEM2A ');
 IF PLIRETV >= 8 THEN RETURN;

 IF SUBSTR(PDSMEMM,1,5) = '-DROP' THEN
    DO;
       PDSCUR = 0;
       PDSMEMM = ' ';
    END;
 IF SUBSTR(PDSMEMM,1,1) = '-' THEN
    DO;
       IF PDSCUR > 1 THEN
          DO;
             PDSMEMM = MEMSTACK(PDSCUR-1);
             PDSCUR = PDSCUR - 1;
             CALL READMEM(PDSMEMM);
             GOTO SHOW_PANEL;
          END;
       ELSE PDSMEMM = MEMSTACK(1);
    END;
 IF SUBSTR(PDSMEMM,1,1) = '+' THEN
    DO;
       IF PDSCUR < PDSMAX THEN
          DO;
             PDSMEMM = MEMSTACK(PDSCUR+1);
             PDSCUR = PDSCUR + 1;
             CALL READMEM(PDSMEMM);
             GOTO SHOW_PANEL;
          END;
       ELSE PDSMEMM = MEMSTACK(PDSMAX);
    END;
 IF SUBSTR(PDSMEMM,1,1) = '<' THEN
    DO;
             PDSCUR = 1;
             PDSMEMM = MEMSTACK(PDSCUR);
             CALL READMEM(PDSMEMM);
             GOTO SHOW_PANEL;
    END;
 IF SUBSTR(PDSMEMM,1,1) = '>' THEN
    DO;
             PDSCUR = PDSMAX;
             PDSMEMM = MEMSTACK(PDSCUR);
             CALL READMEM(PDSMEMM);
             GOTO SHOW_PANEL;
    END;
 IF PDSMEMM ^= PDSMEMALT THEN
    DO;
       PDSMEMALT = PDSMEMM;
       CALL READMEM(PDSMEMM);
       IF PDSMAX < 500 THEN PDSMAX = PDSMAX + 1;
       PDSCUR = PDSMAX;
       MEMSTACK(PDSCUR) = PDSMEMM;
       GOTO SHOW_PANEL;
    END;

 IF ZTDSELS = 0 THEN GOTO SHOW_PANEL;

 PROCLOOP:

 SELECT (PDSSEL);

    WHEN ('E ') DO;  /* MEMBER EDITIEREN */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ××
                          '(' ××
                          STRIP(PDSMEML) ××
                          ')''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
                   CALL ISPLINK('EDIT ',XDSN,PDSVOL);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('B ') DO; /* MEMBER ANZEIGEN */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ××
                          '(' ××
                          STRIP(PDSMEML) ××
                          ')''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
                   CALL ISPLINK('BROWSE ',XDSN,PDSVOL);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('V ') DO; /* VIEW MEMBER     */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ××
                          '(' ××
                          STRIP(PDSMEML) ××
                          ')''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
           ISPBUFFER = 'CMD(VIEW ' ×× XDSN ×× 'VOL(' ×× PDSVOL××') ) ';
                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('VD') DO; /* VIEW DATASET    */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ××
                          '''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
           ISPBUFFER = 'CMD(VIEW ' ×× XDSN ×× 'VOL(' ×× PDSVOL××') ) ';
                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('I') DO; /* DATASET INFO    */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ××
                          '''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
    ISPBUFFER = 'CMD(DSINFO ' ×× XDSN ×× ' )' ;
                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;


    WHEN ('ED') DO; /* DATEI EDITIEREN */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ×× '''';
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
                   CALL ISPLINK('EDIT ',XDSN);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('BD') DO; /* DATEI ANZEIGEN */
                   XDSN = '''' ××
                          STRIP(PDSDSNL) ×× '''' ;
                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');
                   CALL ISPLINK('BROWSE ',XDSN,PDSVOL);
                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');
                END;

    WHEN ('M ') DO; /* MEMBER LIST */
                END;

    OTHER ;
 END;
 PDSSEL = ' ';

 NEXTROW: IF ZTDSELS > 1 THEN
             DO;
                CALL ISPLINK('TBDISPL ','PDSMEMT ');
                GOTO PROCLOOP;
             END;

 GOTO SHOW_PANEL;

 STRIP: PROC(S) RETURNS(CHAR(80) VAR);
 DCL S CHAR(*),
     (IX,JX) BIN FIXED,
     (LENGTH,SUBSTR) BUILTIN,
     R CHAR(80) INIT(' ');
 JX = 0;
 DO IX = 1 TO LENGTH(S);
    IF SUBSTR(S,IX,1) ^= ' ' THEN
       DO;
          JX = JX + 1;
          SUBSTR(R,JX,1) = SUBSTR(S,IX,1);
       END;
 END;
 RETURN(SUBSTR(R,1,JX));
 END STRIP;

 END;
