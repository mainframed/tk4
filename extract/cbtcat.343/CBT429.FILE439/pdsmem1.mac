 PDSMEM: PROC OPTIONS(MAIN);
 /* PROGRAM TO CREATE MEMBERLIST */
 /* READS DATASET  NAMES FROM FILE VTOC */
 /* PROCESSES DIRECTORY FOR EACH DATASET */
 /* WRITES MEMBER INFORMATION TO FILE OUTPUT */
 DCL PLIXOPT CHAR(100) STATIC VAR EXT INIT('NOREPORT');

 ON ERROR BEGIN;
    HIGHCC = 8;
    PUT SKIP EDIT('*** ERROR ***')(A);
    GOTO NEXT_DSN;
 END;

 DCL  SYSPRINT FILE PRINT,
      SUBSTR BUILTIN,
      LISTCIN FILE RECORD SEQL INPUT,
      VTOCIN  FILE RECORD SEQL INPUT,
      EOF_SYSIN BIT(1) STATIC INIT('0'B),
      EOF_VTOCIN BIT(1) STATIC INIT('0'B),
      VTOCIN_REC CHAR(150) STATIC INIT(' '),
      LISTCIN_REC CHAR(121) STATIC VAR INIT(''),
      ADDR BUILTIN,
      (TIME,DATE) BUILTIN,
      MAX BUILTIN;

 DCL MEMTAB (10000) CHAR(8),
     MEMANZ BIN FIXED(31) STATIC INIT(0),
     MEMGES BIN FIXED(31) STATIC INIT(0);

 DCL  OUTPUT FILE RECORD SEQL OUTPUT,
      PDSALLOC ENTRY EXT OPTIONS(ASM INTER RETCODE),
      PDSFREE  ENTRY EXT OPTIONS(ASM INTER RETCODE),
      (I,POS) BIN FIXED(31) STATIC INIT(0),
      PLIRETV BUILTIN,
      SYSIN_REC CHAR(80) STATIC INIT(' '),
      DDNAME CHAR(8) STATIC INIT('$LIB'),
      RC BIN FIXED(31) STATIC INIT(0),
      DSN CHAR(44) STATIC INIT(' '),
      INFO(2) BIN FIXED(15) STATIC INIT(0),
      RETCODE BIN FIXED(31) STATIC INIT(0),
      DSORG BIN FIXED(15) STATIC INIT(0),
      HIGHCC BIN FIXED(31) STATIC INIT(0);

 DCL 1 I_REC STATIC,
       2 RECTYPE CHAR(1) INIT('I'),
       2 DATZEIT CHAR(20) INIT(' ');
 DCL 1 D_REC STATIC,
       2 RECTYPE CHAR(1) INIT('D'),
       2 DNUM PIC'(8)9' INIT(0),
       2 VOLSER CHAR(8) INIT(' '),
       2 DSN CHAR(44) INIT(' ');
 DCL 1 M_REC STATIC,
       2 RECTYPE CHAR(1) INIT('M'),
       2 MEM CHAR(8) INIT(' '),
       2 DNUM PIC'(8)9';

 %INCLUDE PDSDIR;

 PUT SKIP EDIT('--- READING DIRECTORIES ---')(A);

 ON ENDFILE(VTOCIN) BEGIN;
    EOF_VTOCIN = '1'B;
    GOTO NEXT_DSN;
 END;
 ON UNDEFINEDFILE(VTOCIN) BEGIN;
    EOF_VTOCIN = '1'B;
    GOTO NEXT_DSN;
 END;
 ON ENDFILE(SYSIN) BEGIN;
    EOF_SYSIN = '1'B;
    GOTO NEXT_DSN;
 END;
 ON UNDEFINEDFILE(SYSIN) BEGIN;
    EOF_SYSIN = '1'B;
    GOTO NEXT_DSN;
 END;
 ON ENDFILE(LISTCIN) GOTO ENDE;
 ON UNDEFINEDFILE(LISTCIN) GOTO ENDE;
 OPEN FILE(OUTPUT);

 I_REC.DATZEIT = DATE××TIME;
 WRITE FILE(OUTPUT) FROM(I_REC);

 READ_INPUT:
 IF ^EOF_SYSIN THEN
    DO;
       GET SKIP EDIT(SYSIN_REC)(A(80));
       DSN = SUBSTR(SYSIN_REC,1,44);
       VOLSER = ' ';
    END;
    ELSE
    IF ^EOF_VTOCIN THEN
    DO;
       READ FILE(VTOCIN) INTO(VTOCIN_REC);
       IF SUBSTR(VTOCIN_REC,1,1) = ' ' THEN
          DO;
             DSN=SUBSTR(VTOCIN_REC,2,44);
             VOLSER=SUBSTR(VTOCIN_REC,47,6);
          END;
       ELSE GOTO READ_INPUT;
    END;
    ELSE
    DO;
       LISTCIN_REC = (121)' ';
       VOLSER = ' ';
       READ FILE(LISTCIN) INTO(LISTCIN_REC);
       IF SUBSTR(LISTCIN_REC,1,10) = '0NONVSAM -' THEN
          DSN=SUBSTR(LISTCIN_REC,18,44);
       ELSE GOTO READ_INPUT;
    END;
    IF DSN = ' ' THEN GOTO READ_INPUT;
    IF SUBSTR(DSN,1,1) = '*' THEN
       DO;
           PUT SKIP EDIT(SYSIN_REC)(A,X(1));
           GOTO READ_INPUT;
       END;
    PUT SKIP EDIT(DSN)(A(44));
 TRYALLOC: CALL PDSALLOC(DDNAME,DSN,RC,INFO,DSORG);
    RETCODE = RC;
    IF RETCODE ^= 0 THEN
       DO;
           IF INFO(1) = 528 THEN /* DATA SET IN USE */
                 HIGHCC = MAX(HIGHCC,8);
           ELSE
                 HIGHCC = MAX(HIGHCC,4);
                 PUT EDIT('FILE NOT READ      ')(A);
                 PUT SKIP EDIT('RC=',RETCODE)(X(44),A,F(10))
                              (',INFO1=',INFO(1))(A,F(10))
                              (',INFO2=',INFO(2))(A,F(10));
                 CALL PDSFREE(DDNAME);
                 GOTO NEXT_DSN;
       END;
 IF DSORG ^= 512 THEN
    DO;
       PUT EDIT('NOT PARTITIONED')(A);
       CALL PDSFREE(DDNAME);
       GOTO NEXT_DSN;
    END;
 MEMANZ = PDSDIR(DDNAME,10000,MEMTAB);
 MEMGES = MEMGES + MEMANZ;
 D_REC.DNUM = D_REC.DNUM + 1;
 PUT EDIT('     ',MEMANZ,' MEMBER    (#'××D_REC.DNUM××')')(A,F(5),A);
 M_REC.DNUM = D_REC.DNUM;
 D_REC.DSN = DSN;
 WRITE FILE(OUTPUT) FROM(D_REC);
 DO I = 1 TO MEMANZ WHILE(MEMANZ > 0);
    M_REC.MEM = MEMTAB(I);
    WRITE FILE(OUTPUT) FROM(M_REC);
 END;

 CALL PDSFREE(DDNAME);

 NEXT_DSN: GOTO READ_INPUT;

 ENDE: PUT SKIP;
 CLOSE FILE(OUTPUT);
 PUT SKIP EDIT('MEMBER TOTAL:  ',MEMGES)(A,F(10));
 END PDSMEM;
