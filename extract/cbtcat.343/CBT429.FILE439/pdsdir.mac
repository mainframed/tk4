 PDSDIR: PROC(DDNAME,MAXMEM,MEMTAB) RETURNS(BIN FIXED(31));
 /* SUBROUTINE TO READ PDS DIRECTORY                    */
 /* DDNAME    DDNAME WHERE LIBRARY IS ALLOCATED         */
 /* MAXMEM    MAX NUMBER OF MEMBER NAMES TO BE RETURNED */
 /* MEMTAB    MEMBER NAME TABLE                         */
     DCL DDNAME CHAR(8) ,
         MAXMEM BIN FIXED(31),
         MEMTAB(*) CHAR(8);
     DCL IN1 FILE RECORD SEQUENTIAL INPUT ENV(U,BLKSIZE(256));
     DCL I BIN FIXED STATIC INIT(0);
     DCL MEM_ANZ BIN FIXED(31) STATIC INIT(0);
     DCL A POINTER;
     DCL 1 DIRBLK,
           2  COUNT BIT(16),
           2  ENTRIES(254) CHAR(1),
         1 ENTRY BASED(A),
           2 NAME CHAR(8),
           2 TTR CHAR(3),
           2 INDIC,
             3 ALIAS BIT(1),
             3 TTRS BIT(2),
             3 USERCT  BIT(5),
             3 USERDT CHAR(62),
     (SUBSTR,HIGH,UNSPEC, LENGTH) BUILTIN,
     (LEN,PTR) BIN FIXED(31);
 ON ENDFILE(IN1) GO TO FINISH;
 OPEN FILE (IN1) TITLE(DDNAME);
 MEM_ANZ = 0;
 NEXTBLK: READ FILE(IN1) INTO (DIRBLK);
   LEN = COUNT;
   PTR = 1;
 NEXTENT: A=ADDR(ENTRIES(PTR));
   IF NAME = HIGH(8) THEN GO TO FINISH;
   I = USERCT;
   MEM_ANZ = MEM_ANZ + 1;
   IF MEM_ANZ > MAXMEM THEN
      DO;
         MEM_ANZ = -1;
         GOTO FINISH;
      END;
   MEMTAB(MEM_ANZ) = NAME;
   IF I = 0 THEN GOTO SKIPUDAT;
   SKIPUDAT:
   PTR = PTR + 12 + 2 * USERCT;
   IF PTR + 2 > LEN THEN GO TO NEXTBLK;
   GO TO NEXTENT;
 FINISH: CLOSE FILE(IN1);
 RETURN(MEM_ANZ);
 END PDSDIR;

