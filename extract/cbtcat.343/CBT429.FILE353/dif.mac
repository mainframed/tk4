//ASQCCASM  JOB (X0041,QCC,ASQCC),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=ASQCC
/*JOBPARM L=999
//* *****************************************************************
//* *****************************************************************
//*                                                               ***
//* TECH.SERV.SOURCE(DI)                                          ***
//*                                                               ***
//* THIS IS AN SPF APPLICATION TO DISPLAY THE STATUS OF JES2      ***
//* INITIATORS.                                                   ***
//*                                                               ***
//* *****************************************************************
//* *****************************************************************
//*
//JOBLIB   DD  DSN=SYS1.LINKLIB,DISP=SHR,
//         UNIT=3380,VOL=SER=MVSTGT
//*
//ASM1    EXEC PGM=IEV90,REGION=1024K,
//        PARM='OBJECT,NODECK,TERM,XREF(SHORT),BATCH'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,
//         UNIT=3380,VOL=SER=MVSTGT
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,
//         UNIT=3380,VOL=SER=MVSDLB
//         DD  DSN=SYS1.HASPSRC,DISP=SHR,
//         UNIT=3380,VOL=SER=MVSDLB
//         DD  DSN=SYS2.MACLIB,DISP=SHR  <== SPFMACS, JDFMACS
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT2   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSUT3   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(5,5)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
DIF      TITLE 'DIF - DISPLAY INITIATORS FACILITY'
         PRINT OFF
         COPY  $HASPGBL
         $HASPEQU
*  NOTE MACROS BELOW ARE REQUIRED TO ASSEMBLE $SVT
         $XECB
         $SCAT
*
         $SVT
         $PIT
         $SJB
         COPY  SPFMACS
         PRINT ON
         PRINT NOGEN
         TITLE 'DIF - DISPLAY INITIATORS FACILITY'
***********************************************************************
*                                                                     *
*                                                                     *
*               DISPLAY INITIATORS FACILITY (DIF)                     *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY STATUS OF JES2 INITIATORS.                        *
*                                                                     *
*                                                                     *
* FUNCTION: DIF IS DESIGNED TO OPERATE UNDER ISPF USING DISPLAY       *
*           MANAGEMENT SERVICES. IT PROVIDES A DISPLAY OF THE         *
*           STATUS OF JES2 INITIATORS, AND FOR AUTHORIZED USERS,      *
*           THE ABILITY TO START, STOP, AND REFORMAT INITIATORS.      *
*                                                                     *
*           DIF LOOKS AT VARIOUS JES2/SP1.3.0 CONTROL BLOCKS.         *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCE: ISPLINK                                         *
*                                                                     *
*                                                                     *
* MACROS USED: SAVE                                                   *
*              ABEND                                                  *
*              RETURN                                                 *
*              GETMAIN                                                *
*              STAX                                                   *
*              ENQ                                                    *
*              DEQ                                                    *
*              TPUT                                                   *
*              FREEMAIN                                               *
*              $JQE                                                   *
*              $JOE                                                   *
*              CVT                                                    *
*              CVTUSERS (USER)                                        *
*              TCBWORK  (USER)                                        *
*                                                                     *
*                                                                     *
* ATTRIBUTES:                                                         *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THIS SPF COMMAND WILL DISPLAY JES2 BATCH INITIATORS,         *
*        CLASSES ASSIGNED, AND ACTIVE JOBS UNDER THE INITS.           *
*                                                                     *
*        CHAINS THROUGH CVT , JESCT BLOCK, SSCT BLOCK,                *
*        SSVT JES2 BLOCKS AND PIT JES2 BLOCKS TO OBTAIN               *
*        INITIATOR CLASSES.                                           *
*        THEN GET SJB FROM PIT TO GET JOBNAMES, USED CLASS.           *
*                                                                     *
*        PROGRAM MUST BE ASSEMBLED WITH INPUT LIBRARY DSN             *
*           CONCATENATING 'SYS1.HASPSRC' SINCE JES2 DSECTS ARE        *
*              CONTAINED THEREIN.  THIS MEANS IF JES2 MAINTENANCE     *
*                IS APPLIED, NORMALLY ONLY A RE-ASSEMBLY WILL         *
*                   BE ALL THAT IS REQUIRED.                          *
*                                                                     *
*       NOTE, USE OF THIS ROUTINE IS LIMITED TO THOSE USERS WITH      *
*       OPERATOR AUTHORITY                                            *
*                                                                     *
*       AUGUST 1979,                                                  *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* NOTE THE FOLLOWING ENTRY POINT LOGIC IS NON-STANDARD. IN PARTICULAR,
*      IT WILL NOT WORK WITH CALLED PL/I PROGRAMS.
*
***********************************************************************
DIF      CSECT
         USING *,12
*
         SAVE  (14,12),,DIF_08/01/79_BRIAN_COOK_&SYSDATE_&SYSTIME
*
         USING CVT,R1        SETUP CVT BASE
         USING JESCT,R2           SETUP JESCT BASE
         USING SSCT,R3            SETUP SSCT BASE
         USING SSVT,R4            SETUP SSVT BASE
         USING PITDSECT,R5        SETUP PIT BASE
         USING SJBDSECT,R11       SETUP SJB BASE
*
         LR    R12,R15        SET PROGRAM BASE
         LA    R2,DIFSAVE    SET SAVE AREA AND BASE 1
         ST    R2,8(R13)      LINK SAVE AREAS
         ST    R13,4(R2)      SAVE THE CALLER'S R13
*
         LR    R13,R2
*
INITFLDS DS    0H
         MVI   ATABFL,C'0'    NO ACTIVE TABLE
         MVI   DIFLINE,C' '   CLEAR TAB ENTRY AREA
         MVC   DIFLINE+1(79),DIFLINE
         XC    ISPARMS(40),ISPARMS
         VDEFINE DIFLINE,60
         VDEFINE DIFS,2
         VDEFINE DIFID,2
         VDEFINE DIFCL,8
*
SHOWAGIN DS    0H
         BAL   R7,SHOWNIT     DISPLAY THE INITS
*
SHOWDONE DS    0H
*                                  DELETE THE TABLE VARIABLES
         VDELETE DIFLINE,DIFS,DIFID,DIFCL
         TBEND   DIFTABLE
*
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LM    14,12,12(13)   RETURN TO OUR CALLER
         SR    15,15          SET RC=0
         BR    14             AND RETURN
*
L4096    DC    F'4096'
DIFSAVE  DC    18F'0'
*
         EJECT
SHOWNIT  DS    0H
         ST    R7,DIF7HOLD SAVE THE RETURN ADDRESS
*
         MVC   DIFS(2),SPACES SET SELECTION CODE TO SPACES
*
         CLI   ATABFL,C'0'        DO I HAVE AN ACTIVE TABLE?
         BE    ANOTAB             NOPE
*
         TBEND DIFTABLE
*
ANOTAB   DS    0H
*
         TBCREATE DIFTABLE,DIFS,DIFID,DIFCL,DIFLINE
*
         TBVCLEAR DIFTABLE
*
         MVI   ATABFL,C'1'        AN ACTIVE TABLE
*
*
         L     R1,16              GET CVT
         L     R2,296(R1)         GET JESCT    (JES CONTROL TABLE)
         L     R3,JESSSCT         GET FIRST JES SSCT (SSCVT)
         L     R4,SSCTSSVT        GET JES SSVT
         L     R5,$SVPIT          GET PIT ADDR--5.302 JES LOGIC+MAINT
NEXTPIT  EQU   *                  NOW READY TO WRITE
         TM    PITSTAT,PITHOLDA   PIT DRAINED $PI ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHOLD1   PIT DRAINED $P IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'DRAINED '  MOVE IN DRAINED STATUS
         TM    PITSTAT,PITHALTA   PIT HALTED  $Z I ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         TM    PITSTAT,PITHALT1   PIT HALTED  $Z IN ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'HALTED  '  MOVE IN HALTED  STATUS
         TM    PITSTAT,PITINIT    OS INIT EXISTS FOR PIT?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'INACTIVE'  MOVE IN INACTIVE
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'ACTIVE  '  MOVE IN ACTIVE
         TM    PITSTAT,PITIDLE    PIT IDLE ?
         BNO   *+10               IF NOT CONTINUE
         MVC   STAT,=C'IDLE    '  MOVE IN IDLE
         CLC   STAT,=8C' '        STATUS NOT AVAILABLE ?
         BNE   *+10               IF NOT CONTINUE
         MVC   STAT,=C'UNAVAIL '  MOVE IN STATUS NOT AVAIL.
         CLI   PITPATID,C' '      NULL 1ST CHAR?
         BNE   IDENTOK            NO, CONTINUE
         MVC   DIFID(1),PITPATID+1 MOVE IN ID---FORMAT CL1
         B     IDENTSKP           SKIP NEXT MOVE
IDENTOK  MVC   DIFID,PITPATID     MOVE ID IN---FORMAT CL2
IDENTSKP MVC   DIFCL,PITCLASS   MOVE THE INIT CLASSES TO OUTPUT
*
*    &MAXCLAS PARAMETER ON GEN LIMITS MAX CLASSES, ABOVE MAY NEED
*    TO BE CHANGED IF OTHER THAN 8 CLASSES.
*
         TM    PITSTAT,PITBUSY    PIT BUSY ?
         BNO   PRINT              IF NOT CONTINUE
         L     R11,PITSJB         GET SJB ADDRESS
         MVC   JOBNAME,SJBJOBNM   GET JOBNAME FROM JOB CARD
         MVC   UCLASS,SJBJCLAS    GET USED CLASS
*
***********************************************************************
*
*   ADD THE DETAIL LINE TO THE TABLE
*
***********************************************************************
PRINT    DS    0H
         TBADD DIFTABLE
*
         LTR   R15,R15
         BNZ   BADADD
*
         MVI   DIFLINE,C' '
         MVC   DIFLINE+1(79),DIFLINE
*
*
         L     R5,PITNEXT         GET NEXT PIT---REFER 5.200 JES2
         LTR   R5,R5              CHK R5 FOR VALID ADDR
         BZ    SHOWSCRN           END PROCESS FOR SSCT
         B     NEXTPIT            GO BACK
*
BADADD   DS    0H
         DC    H'0'        S0C1
         EJECT
*
***********************************************************************
*
*   NOW SHOW THE ISPPLIB FORMAT AND THE TABLE ON THE SCREEN
*
***********************************************************************
*
*
SHOWSCRN DS    0H
         TBTOP DIFTABLE
         TBDISPL DIFTABLE,DIFDATAB,ENDKEY=SHOWDONE
SHOWSCR2 DS    0H
*
***********************************************************************
*
*   DETERMINE WHETHER ANYTHING WAS ENTERED ON THE SCREEN
*
***********************************************************************
*
         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??
         BNE   DUNWITIT       NOPE
GOTSTUFF DS    0H
         MVC   SELSAVE(2),DIFS       SAVE SEL CODE
         OC    SELSAVE(2),SPACES   UPPER-CASE IT
         MVC   DIFS(2),SPACES SET SELECTION CODE TO SPACES
         MVC   INITID(1),DIFID       SAVE INITIATOR ID
         MVC   NEWCLSS(8),DIFCL      SAVE NEW CLASSES, IF ANY
         OC    NEWCLSS(8),SPACES   UPPER-CASE IT
*
**  CHECK FOR A SELECTION CODE.
*
         CLI   SELSAVE,C'P'   IS IT "PURGE"
         BE    PURGE          GO DO IT
*
         CLI   SELSAVE,C'S'   IS IT "START"
         BE    START          GO DO IT
*
         CLI   SELSAVE,C'T'   IS IT "CHANGE"
         BE    CHANGE         GO DO IT
*
* ADD TESTS FOR OTHER LINE SELECTION CODES HERE
*
         B     SHOWAGIN       GO REPEAT THE DISPLAY
         EJECT
PURGE    DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$PI'
         MVC   CMDLINE+3(1),INITID     INITIATOR ID
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
         EJECT
START    DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$SI'
         MVC   CMDLINE+3(1),INITID     INITIATOR ID
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
         EJECT
CHANGE   DS    0H
*
         BAL   R7,TESTAUTH    CHECK AUTHORIZATION
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(71),CMDLINE
         MVC   CMDLINE(3),=C'$TI'
         MVC   CMDLINE+3(1),INITID     INITIATOR ID
         MVI   CMDLINE+4,C','          MOVE IN A COMMA
         MVC   CMDLINE+5(8),NEWCLSS   NEW CLASSES
*
         LA    R0,1             SET AUTH ON
         SVC   235
*
         MODESET KEY=ZERO,MODE=SUP
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         SVC   34                      ISSUE COMMAND VIA SVC 34
         MODESET KEY=NZERO,MODE=PROB
*
         SR    R0,0             SET AUTH OFF
         SVC   235
*
         B     SHOWAGIN       GO REPEAT THE SCREEN
*
CMDISMF  DC    Y(76),Y(00)
CMDLINE  DC    CL72'I SMF' COMMAND SVC 34 INPUT
*
*
         EJECT
*
TESTAUTH DS    0H
         ST    R7,AUTHHOLD    SAVE  RETURN ADDRESS
*
         L     R1,16              GET CVT POINTER
         L     R1,0(R1)           OLD/NEW POINTER
         L     R1,4(R1)           OUR TCB POINTER
         L     R15,12(R1)         OUR TIOT POINTER
         CLI   0(R15),C'A'        IS THIS SYSTEMS USER?
         BE    IAMAUTH            YUP, AUTHORIZED
         L     R1,180(R1)         JSCB POINTER
         L     R1,264(R1)         PSCB POINTER
         TM    16(R1),X'80'       DO WE HAVE OPER ABILITY?
         BO    IAMAUTH            YES, CONTINUE
NOTAUTH  DS    0H
*
         SETMSG DIF001
*
         B     SHOWDONE       ALL DONE
*
IAMAUTH  DS    0H
         L     R7,AUTHHOLD    SAVE  RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         EJECT
*
*
DUNWITIT DS    0H
         L     R7,DIF7HOLD     RESTORE  RETURN ADDRESS
         BR    R7             RETURN TO OUR CALLER
         TITLE 'MISCELLANEOUS CONSTANTS'
         PRINT NOGEN
         LTORG
*
         DS    0F
DIF7HOLD DS    F
OUT7HOLD DS    F
AUTHHOLD DS    F
*
*
FZEROS   DC    F'0'
F8       DC    F'8'
*
*
SPACES   DC    CL80' '
*
*
*
         TITLE 'WORKING STORAGE AREAS'
*
ISPARMS  DS    10F            PARM LIST FOR ISPLINK
*
*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTS
ATABFL   DS    XL1     DO I HAVE A CURRENT "DISPLAY ACTIVE" TABLE
*
*
DIFLINE  DS    0CL80
STAT     DC    CL8' ',CL3' '
JOBNAME  DC    CL8' ',CL1' '
UCLASS   DC    CL1' ',CL11' ' (PAD)
         DS    CL52
DIFS     DC    CL2' '
DIFID    DC    CL2' '
DIFCL    DC    CL8' '
*
SELSAVE  DS    CL2            LINE SELECTION CODE SAVE AREA
NEWCLSS  DS    CL8            NEW INIT CLASSES SAVE AREA
*
INITID   DS    CL1            JOBNAME SAVE AREA
         CVT   DSECT=YES
         IEFJESCT
         IEFJSCVT
         END
/*
//LKED1    EXEC PGM=HEWLH096,PARM=(XREF,LET,LIST,TERM),
//            COND=(2,LT,ASM1),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DISP=SHR,DSN=ISP.V2R2M0.ISPLOAD,
//         UNIT=3380,VOL=SER=MVSTGT
//*YSLMOD  DD   DISP=SHR,DSN=SYS2.LINKLIB
//SYSLMOD  DD   DISP=SHR,DSN=SYS2.CMDLIB
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSTERM  DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  NAME DIF(R)
/*
