//ASQCCIDC JOB (E9167,QCC,ASQCC),'X-COOK, BRIAN',
//   MSGCLASS=X,CLASS=X,NOTIFY=ASQCC,MSGLEVEL=(1,1)
/*JOBPARM L=99,SYSAFF=MVSA
//*
//* TECH.ASQCC.SOURCE(ETPSIDC2)
//*
//ONEL   OUTPUT PAGEDEF=06080,FORMDEF=0101,CHARS=GT12,DEFAULT=YES
//ASM     EXEC PGM=IEV90,REGION=1024K,
//             PARM='TERM,NODECK,OBJECT,RENT,XREF(SHORT)'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DISP=SHR,DSN=SYS2.MACLIB  <== TCBUVTAM, ETPSMACS
//SYSUT1   DD  SPACE=(CYL,(5,1)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
ETPSIDC2 TITLE 'ETPS - IDCAMS INTERFACE CHANGE LOG'
**********************************************************************
*
* CHANGE LOG:
*
*  4/02/87 BRIAN COOK     FIXED GARBAGE SCREEN IN SPLIT-SCREEN,
*                         PER CARL GELBART, PACIFIC MUTUAL. THANKS!
*
* 11/10/86 BRIAN COOK     UPDATED HELP PANEL.
*
* 11/07/86 BRIAN COOK     SCROLL OUTPUT, ADD 4TH AND 5TH COMMAND LINE.
*                         GETTING SOME REAL STRANGE RESIDUAL DATA ON
*                         SECOND TIME THROUGH. OH, WELL.
*
*  9/03/86 BRIAN COOK     ADDED 2ND AND 3RD COMMAND LINES
*
*
**********************************************************************
         TITLE 'ETPS - IDCAMS INTERFACE'
         PRINT OFF
         COPY ETPSMACS
         PRINT ON
ETPSIDC2 CSECT
*
         USING *,12,11
         USING SAVE2,13
*
         STM   R14,R12,12(R13)    SAVE INPUT REGS
         LR    R12,R15            SET PROGRAM BASE REGISTER 1
         L     R2,0(,R1)          SAVE PARM POINTER
         LA    R11,72(,R13)       LEVEL 2 MODULE, SO BUMP TO SAVE2
         ST    R13,4(,R11)       STORE BACKWARDS POINTER
         ST    R11,8(R13)         STORE FORWARD POINTER
         LR    R13,R11            SET DSECT BASE 1
         LA    R3,1
         LA    R11,4095(R3,R12)   SET PROGRAM BASE REGISTER 2
         LA    R10,SPLITWRK       SET DSECT FOR SPLIT-SCREEN
         USING SPLTAREA,10
*
         GETMAIN R,LV=12288       GET MY SAVE AREA ADDRESS
         LR    R9,R1             SAVE GETMAIN POINTER
         USING IDCSAVE,9
*
SETPARMS DS    0H
*
         MVC   EYECATCH(8),=CL8'CALLVSAM'
         MVC   IDCPARMS(PARMLEN),PARMTOP
         MVI   COMMAND1,C' '
         MVC   COMMAND1+1(79),COMMAND1
*
         LA    R1,IDCPARMS
         USING PDSECT,1
*
         LA    R15,PARMFLD
         ST    R15,VPARMS
*
         LA    R15,DDNAMES
         ST    R15,VPARMS+4
*
         LA    R15,PAGELIST
         ST    R15,VPARMS+8
*
         LA    R15,IOLIST
         ST    R15,VPARMS+12
         OI    VPARMS+12,X'80'
*
*                                SET UP IOLIST ENTRIES FOR SYSIN
*
         LA    R15,IODD1
         ST    R15,IOLIST+4
*
         L     R15,=A(IOR)
         ST    R15,IOLIST+8
*
         ST    R9,IOLIST+12
*
*                                SET UP IOLIST ENTRIES FOR SYSPRINT
*
         LA    R15,IODD2
         ST    R15,IOLIST+16
*
         L     R15,=A(IOR)
         ST    R15,IOLIST+20
*
         ST    R9,IOLIST+24
*
*    SET UP THE COMMAND SCREEN
*
IDCCMND  DS    0H
*
         LA    R4,TERMOUT+4      PICK UP ADDR OF FIRST OUTPUT LINE
         L     R8,SCROWS          PICK UP NUMBER OF ROWS
         CLI   SPLIT,0           AM I DOING SPLIT-SCREEN?
         BE    SETIDCNX          NOPE
         L     R8,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
*
         CLI   SPLIT,2           AM I ON SCREEN 2?
         BNE   SETIDCNX          GO DO IT
*
         SLL   R8,2              MULTIPLY BY 4
         LA    R4,TERMOUT+4(R8)  SET ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS2        PICK UP NUMBER OF ROWS ON SCREEN 2
*
SETIDCNX DS    0H
*
         NI    0(R4),X'7F'        NOT END OF PARM LIST
         L     R14,0(,R4)         PICK UP ADDR OF FIRST OUTPUT LINE
         MVC   0(81,R14),IDCROW1  FILL IN LINE1
*
         L     R14,4(,R4)         BUMP
         NI    4(R4),X'7F'        NOT END OF PARM LIST
         MVC   0(81,R14),IDCROW2  FILL IN LINE2
         MVC   22(57,R14),COMMAND1 COPY COMMAND TO SCREEN
         MVI   22(R14),C'*'       MAKE IT A COMMENT
*
         L     R14,8(,R4)         BUMP
         NI    8(R4),X'7F'        NOT END OF PARM LIST
         MVC   0(81,R14),IDCROW2  FILL IN LINE2
         MVC   22(57,R14),COMMAND2 COPY COMMAND TO SCREEN
         MVI   22(R14),C'*'       MAKE IT A COMMENT
*
         L     R14,12(,R4)        BUMP
         NI    12(R4),X'7F'       NOT END OF PARM LIST
         MVC   0(81,R14),IDCROW2  FILL IN LINE2
         MVC   22(57,R14),COMMAND3 COPY COMMAND TO SCREEN
         MVI   22(R14),C'*'       MAKE IT A COMMENT
*
         L     R14,16(,R4)        BUMP
         NI    16(R4),X'7F'       NOT END OF PARM LIST
         MVC   0(81,R14),IDCROW2  FILL IN LINE2
         MVC   22(57,R14),COMMAND4 COPY COMMAND TO SCREEN
         MVI   22(R14),C'*'       MAKE IT A COMMENT
*
         L     R14,20(,R4)        BUMP
         NI    20(R4),X'7F'       NOT END OF PARM LIST
         MVC   0(81,R14),IDCROW2  FILL IN LINE2
         MVC   22(57,R14),COMMAND5 COPY COMMAND TO SCREEN
         MVI   22(R14),C'*'       MAKE IT A COMMENT
*
         L     R14,24(,R4)        BUMP
         MVC   0(81,R14),BLANK1   FILL IN LINE3
*
         OI    24(R4),X'80'       END OF PARM LIST
         CLI   SPLIT,1            AM I DOING SPLIT-SCREEN?
         BNE   *+8                NO
         NI    24(R4),X'7F'       NOT END OF PARM LIST
*
COMMIDC  DS    0H
*
*
         L     R15,=A(IDCHELP)     IDCAMS HELP SCREEN
         ST    R15,HELPADD
*
         MVI   AIDROW,01           CURSOR ROW
         MVI   AIDCOL,21           CURSOR COLUMN
         MVC   HOMEAID(2),AIDADDR  COPY
*
         L     R15,COMMA3          GO COMMUNICATE
         BALR  R14,R15
*
         LTR   R15,15                   BAD RC
         BNZ   EOJ                      OUT
*
COMMIDC2 DS    0H
*                 CHECK TO SEE WHETHER AN IDCAMS COMMAND WAS ENTERED
*
         LM    R2,R8,TERMINPT      PICK UP FIRST REPLY FIELD
*
         CLI   SPLIT,2             AM I ON SECOND SCREEN
         BNE   IDCFMTPF            NO, GO TEST PFKEY
*
         L     R3,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
         SLL   R3,2              MULTIPLY BY 4
         LA    R3,TERMINPT+4(R3) SET ADDRESS OF FIRST INPUT LINE
         LM    R3,R8,0(R3)       PICK UP FIRST REPLY FIELD
*
IDCFMTPF DS    0H
         CLI   0(R2),X'6E'         PA 2
         BE    COMMIDC             RESHOW SCREEN
*
         CLI   PFKFLAG,0           PFK/ATTN ENTERED?
         BNE   IDCPFK            YUP
*
*
*                                SET UP IDCAMS COMMAND
SETCMD1  DS    0H
*
         CLI   0(R4),X'00'      COMMAND ENTERED?
         BE    SETCMD2          NOPE
         CLI   22(R4),C'*'      LEADING ASTERISK?
         BE    SETCMD2          YES, JUST RESHOW THE SCREEN
*
         MVI   COMMAND1,C' '
         MVC   COMMAND1+1(79),COMMAND1
         MVC   COMMAND1(57),22(R4)
*
SETCMD2  DS    0H
*
         CLI   0(R5),X'00'      COMMAND ENTERED?
         BE    SETCMD3          NOPE
         CLI   22(R5),C'*'      LEADING ASTERISK?
         BE    SETCMD3          YES, JUST RESHOW THE SCREEN
*
         MVI   COMMAND2,C' '
         MVC   COMMAND2+1(79),COMMAND2
         MVC   COMMAND2(57),22(R5)
*
SETCMD3  DS    0H
*
         CLI   0(R6),X'00'      COMMAND ENTERED?
         BE    SETCMD4          NOPE
         CLI   22(R6),C'*'      LEADING ASTERISK?
         BE    SETCMD4          YES, JUST RESHOW THE SCREEN
*
         MVI   COMMAND3,C' '
         MVC   COMMAND3+1(79),COMMAND3
         MVC   COMMAND3(57),22(R6)
*
SETCMD4  DS    0H
*
         CLI   0(R7),X'00'      COMMAND ENTERED?
         BE    SETCMD5          NOPE
         CLI   22(R7),C'*'      LEADING ASTERISK?
         BE    SETCMD5          YES, JUST RESHOW THE SCREEN
*
         MVI   COMMAND4,C' '
         MVC   COMMAND4+1(79),COMMAND4
         MVC   COMMAND4(57),22(R7)
*
SETCMD5  DS    0H
*
         CLI   0(R8),X'00'      COMMAND ENTERED?
         BE    SETCMD6          NOPE
         CLI   22(R8),C'*'      LEADING ASTERISK?
         BE    SETCMD6          YES, JUST RESHOW THE SCREEN
*
         MVI   COMMAND5,C' '
         MVC   COMMAND5+1(79),COMMAND5
         MVC   COMMAND5(57),22(R8)
*
SETCMD6  DS    0H
*                                SET UP LINE COUNTERS/POINTERS
*
         SR    R15,R15
         ST    R15,OUTLINES
*
         LA    R14,120           LOOP CONTROL
         ST    R14,MAXLINES
*
         LA    R15,DATALINE      CLEAR THE OUTPUT LINES
         ST    R15,NEXTLINE
*
         MVC   0(80,R15),ENDDATA
         LA    R15,80(,R15)
         BCT   R14,*-10          LOOP
         MVC   0(80,R15),ENDDATA
*
         LA    R1,IDCPARMS
         LINK  EP=IDCAMS
*
SCRNDATA DS    0H
         LA    R7,DATALINE
         ST    R7,TOPLINE
         L     R5,MAXLINES
         L     R6,OUTLINES
         CR    R5,R6
         BL    *+6
         LR    R5,R6
*
*        DC    H'0'
*
SHOWOUT1 DS    0H
*
*        MOVE DATA TO SCREEN
*
         LA    R4,TERMOUT+4      PICK UP ADDR OF FIRST OUTPUT LINE
         L     R8,SCROWS          PICK UP NUMBER OF ROWS
         CLI   SPLIT,0           AM I DOING SPLIT-SCREEN?
         BE    SETIDCS2          NOPE
*
         CLI   SPLIT,2           AM I ON SCREEN 2?
         BE    SETIDCS1          YUP
*
         L     R8,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
         B     SETIDCS2          GO DO IT
*
SETIDCS1 DS    0H
*
         L     R8,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
         SLL   R8,2              MULTIPLY BY 4
         LA    R4,TERMOUT+4(R8)  SET ADDRESS OF FIRST OUTPUT LINE
         L     R8,SCROWS2        PICK UP NUMBER OF ROWS ON SCREEN 2
*
SETIDCS2 DS    0H
*
         L     R14,0(,R4)         BUMP
         NI    0(R4),X'7F'        NOT END OF PARM LIST
         MVC   0(81,R14),IDCOUT1  FILL IN LINE2
*
         LA    R1,3
         SR    R8,R1
*
         C     R7,TOPLINE         AM I ABOVE THE TOP
         BH    *+8                NO
         L     R7,TOPLINE         YES, SET TO TOP
*
         ST    R7,TOPPTR          LINE I AM ON
*
*
*  THE LOOP CONTROL HERE IS SORT OF TRICKY, BECAUSE THERE ARE 2
*  FACTORS:
*
*  1. NUMBER OF LINES PRODUCED BY IDCAMS
*  2. AVAILABLE NUMBER OF LINES ON THE SCREEN
*
SCRNLOOP DS    0H
*
* MOVE THE IDCAMS OUTPUT LINES TO THE SCREEN
*
         CLC   0(20,R7),ENDDATA   EMPTY LINE
         BE    DATAEND            YES
         C     R7,NEXTLINE        AM I PAST THE END?
         BH    DATAEND            YES
*
         NI    0(R4),X'7F'        NOT END OF PARM LIST
         LA    R4,4(,R4)
         L     R14,0(,R4)
         MVC   0(81,R14),BLANK1
         MVC   2(79,R14),0(R7)
*
         LA    R7,80(,R7)
         BCT   R8,SCRNLOOP
*
         B     SCRNDONE
*
DATAEND  DS    0H
*
         L     R7,NEXTLINE        POINT TO THE LAST  LINE
*
SCRNDONE DS    0H
*
         LTR   R8,R8              END OF SCREEN?
         BZ    SCRNEND1           YES
*
         NI    0(R4),X'7F'        NOT END OF PARM LIST
         LA    R4,4(,R4)
         L     R14,0(,R4)
         MVC   0(81,R14),ENDDATA
*
         BCT   R8,SCRNDONE
*
SCRNEND1 DS    0H
*
         OI    0(R4),X'80'        END OF PARM LIST
         CLI   SPLIT,1           AM I DOING SPLIT-SCREEN?
         BNE   *+8                NO
         NI    0(R4),X'7F'        NOT END OF PARM LIST
*
*
*        DISPLAY THE SCREEN
*
*
         L     R15,=A(IDCHELP)     IDCAMS HELP SCREEN
         ST    R15,HELPADD
*
         L     R15,COMMA3          GO COMMUNICATE
         BALR  R14,R15
*
         LTR   R15,15                   BAD RC
         BNZ   EOJ                      OUT
*
*
         L     R2,TERMINPT
*
         CLI   0(R2),X'C3'         IS IT PF15
         BE    IDCCMND             CONTINUE
         CLI   0(R2),X'F3'         IS IT PF3
         BE    IDCCMND             CONTINUE
*
         CLI   0(R2),X'C7'         IS IT PF19
         BE    IDCSUP              SCROLL UP
         CLI   0(R2),X'F7'         IS IT PF7
         BE    IDCSUP              SCROLL UP
*
         CLI   0(R2),X'C8'         IS IT PF20
         BE    IDCSDOWN            SCROLL DOWN
         CLI   0(R2),X'F8'         IS IT PF8
         BE    IDCSDOWN            SCROLL DOWN
*
         B     SHOWOUT1            JUST RESHOW THE SCREEN
*
IDCSUP   DS    0H
*
*
         L     R1,SCROWS          PICK UP NUMBER OF ROWS
         CLI   SPLIT,0           AM I DOING SPLIT-SCREEN?
         BE    *+20              NOPE
         L     R1,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
         CLI   SPLIT,1           AM I ON SCREEN 1?
         BE    *+8               YUP
         L     R1,SCROWS2        PICK UP NUMBER OF ROWS ON SCREEN 2
*
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         MH    R1,H80
         L     R7,TOPPTR
         SR    R7,R1             POINT UP
         B     SHOWOUT1          RE-DISPLAY AFTER SCROLL
*
IDCSDOWN DS    0H
*
*
         L     R1,SCROWS          PICK UP NUMBER OF ROWS
         CLI   SPLIT,0           AM I DOING SPLIT-SCREEN?
         BE    *+20              NOPE
         L     R1,SCROWS1        PICK UP NUMBER OF ROWS ON SCREEN 1
         CLI   SPLIT,1           AM I ON SCREEN 1?
         BE    *+8               YUP
         L     R1,SCROWS2        PICK UP NUMBER OF ROWS ON SCREEN 2
*
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         BCTR  R1,0
         MH    R1,H80
         L     R7,TOPPTR
         AR    R7,R1             POINT DOWN
         C     R7,NEXTLINE
         BL    SHOWOUT1          RE-DISPLAY AFTER SCROLL
*
         L     R7,NEXTLINE
         SR    R7,R1             POINT UP
         B     SHOWOUT1          RE-DISPLAY AFTER SCROLL
*
*
IDCPFK   DS    0H
*
EOJ      DS    0H
*
         FREEMAIN R,LV=12288,A=(9)
*
IDCRETRN DS    0H
         L     R13,4(,13)               RESTORE CALLERS REGS
         LM    R14,R12,12(R13)          RESTORE CALLERS REGS
         BR    R14                      NORMAL RETURN
         TITLE 'ETPS - IDCAMS COMMAND INTERFACE SCREEN'
*
H80      DC    H'80'
*
IDCAMSCR DS    0F
IDCROW1  DC    AL1(80)
         DC    X'05'
         DC    CL34'   ENTER IDCAMS COMMAND BELOW -----'
         DC    CL48'-----------------------------------------2.4    '
IDCROW2  DC    AL1(80)
         DC    X'05'
         DC    CL19'COMMAND INPUT ===> '
         DC    X'01'
IDCHOME  EQU   *-IDCAMSCR
         DC    X'13'                         IC
         DC    CL58' '
BLANK1   DC    AL1(80)
         DC    X'04'
         DC    CL80' '
ENDDATA  DC    AL1(80)
         DC    X'04'
         DC    CL20'********************'
         DC    CL40'********************    END OF DATA'
         DC    CL20'********************'
IDCOUT1  DC    AL1(80)
         DC    X'05'
         DC    CL34'---IDCAMS SYSPRINT OUTPUT----------'
         DC    CL48'-- (PF8=SCROLL DOWN, PF7=SCROLL UP) -----2.4    '
*
*
         TITLE 'ETPS - IDCAMS COMMAND INTERFACE CONSTANTS'
         DS    0F
PARMTOP  EQU   *
         DS    F
         DS    F
         DS    F
         DS    F
*
         DC    H'0'
*
         DC    H'0'
*
         DC    H'0'
*
         DC    F'2'
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
*
         DC    CL10'DDSYSIN'
         DC    CL10'DDSYSPRINT'
PARMLEN  EQU   *-PARMTOP
         LTORG
         EJECT
IOR      CSECT
         USING *,12
         STM   R14,R12,12(R13)    SAVE INPUT REGS
         LR    R12,R15            SET BASE REGISTER
         LR    R8,R13            SAVE R13
         LM    R9,R11,0(R1)      PICK UP PARMS
         ST    R9,8(R8)         STORE FORWARD   POINTER
         ST    R8,4(R9)         STORE BACKWARD  POINTER
*
         LR    R13,R9
         USING IDCSAVE,13
         USING VFLAGS,10
         USING VINFO,11
*
         CLI   VFLAG1,VOPEN
         BE    IDCOPEN
*
         CLI   VFLAG1,VGET
         BE    IDCGET
*
         CLI   VFLAG1,VPUT
         BE    IDCPUT
*
         CLI   VFLAG1,VCLOSE
         BE    RC0
*
         B     RC0              IGNORE ANYTHING ELSE
*
*
IDCOPEN  DS    0H
*
         TM    VFLAG2,VOUTPUT
         BO    RC0
         MVI   IOFLAG,0
         B     RC0
*
IDCGET   DS    0H
*
         CLI   IOFLAG,5
         BE    RC4
*
         CLI   IOFLAG,0
         BE    INCMD1
         CLI   IOFLAG,1
         BE    INCMD2
         CLI   IOFLAG,2
         BE    INCMD3
         CLI   IOFLAG,3
         BE    INCMD4
         CLI   IOFLAG,4
         BE    INCMD5
*
         B     RC12
*
INCMD1   DS    0H
*
         MVI   IOFLAG,1
*
         CLI   COMMAND1,C'*'
         BE    INCMD2
*
         OC    COMMAND1(80),SPACES
         MVI   COMMAND1-1,C' '
         LA    R1,COMMAND1-1
         ST    R1,VREC
         LA    R2,80
         ST    R2,VRECLEN
*
         B     RC0
*
INCMD2   DS    0H
*
         MVI   IOFLAG,2
*
         CLI   COMMAND2,C'*'
         BE    INCMD3
*
         MVI   COMMAND2-1,C' '
         OC    COMMAND2(80),SPACES
         LA    R1,COMMAND2-1
         ST    R1,VREC
         LA    R2,80
         ST    R2,VRECLEN
*
         B     RC0
*
INCMD3   DS    0H
*
         MVI   IOFLAG,3
*
         CLI   COMMAND3,C'*'
         BE    INCMD4
*
         MVI   COMMAND3-1,C' '
         OC    COMMAND3(80),SPACES
         LA    R1,COMMAND3-1
         ST    R1,VREC
         LA    R2,80
         ST    R2,VRECLEN
*
         B     RC0
*
INCMD4   DS    0H
*
         MVI   IOFLAG,4
*
         CLI   COMMAND4,C'*'
         BE    INCMD5
*
         MVI   COMMAND4-1,C' '
         OC    COMMAND4(80),SPACES
         LA    R1,COMMAND4-1
         ST    R1,VREC
         LA    R2,80
         ST    R2,VRECLEN
*
         B     RC0
*
INCMD5   DS    0H
*
         MVI   IOFLAG,5
*
         CLI   COMMAND5,C'*'
         BE    RC4
*
         MVI   COMMAND5-1,C' '
         OC    COMMAND5(80),SPACES
         LA    R1,COMMAND5-1
         ST    R1,VREC
         LA    R2,80
         ST    R2,VRECLEN
*
         B     RC0
*
IDCPUT   DS    0H
*
         L     R2,MAXLINES
         L     R3,OUTLINES
         L     R4,NEXTLINE
         L     R5,VREC       RECORD ADDRESS
         LA    R5,1(,R5)     BUMP PAST CARRIAGE CONTROL
         L     R6,VRECLEN    RECORD LENGTH
         BCTR  R6,0          DROP FOR CARRIAGE CONTROL
*
         LTR   R6,R6                            IF LENGTH 0,
         BZ    RC0                                   SKIP IT
*
         BCTR  R6,0          DROP FOR EXECUTED MOVE
         EX    R6,MOVELINE   MOVE IT TO WORKLINE
         LA    R6,1(,R6)     RESTORE TO ACTUAL VALUE
         LA    R5,WORKLINE   RECORD ADDRESS
*
         CLC   0(14,R5),=CL14'IDCAMS  SYSTEM'  IF HEADER LINE,
         BE    RC0                                   SKIP IT
         CLC   0(20,R5),COMMAND1                IF REPEAT OF COMMAND,
         BE    RC0                                   SKIP IT
         CLC   0(70,R5),SPACES                  IF BLANK LINE,
         BE    RC0                                   SKIP IT
*
         LA    R3,1(,R3)     BUMP OUTPUT LINE COUNT
         ST    R3,OUTLINES
*
         CR    R3,R2         IF LINE COUNT IS HIGHER THAN MAXIMUM,
         BH    RC0           DON'T MOVE IT IN
*
         LA    R3,80         MAXIMUM LINE LENGTH
         CR    R3,R6         IF RECLEN < 80,
         BH    MOVE80        USE IT
*
* LOCATE FIRST NON-BLANK CHARACTER; THIS PRESERVES LEADING BLANKS
*
         CLI   0(R5),C' '    BLANK?
         BNE   *+12
         LA    R5,1(,R5)
         B     *-12
*
LOOPSP1  DS    0H
         LR    R8,R5         POINT TO START OF LINE
         LR    R3,R6         SAVE MAX LINE LENGTH
*
LOOPSP2  DS    0H
*
* ABBREVIATE SOME OF THE PARAMETERS
*
         CLC   0(8,R8),=C'SHROPTNS'
         BNE   *+14               NOPE
         MVC   3(5,R8),ZEROS      TRUNCATE PARAMETER
         B     LOOPSP3            BUMP
*
         CLC   0(10,R8),=C'NOREPLICAT'
         BNE   *+14               NOPE
         MVC   5(5,R8),ZEROS      TRUNCATE PARAMETER
         B     LOOPSP3            BUMP
*
         CLC   0(10,R8),=C'NONSPANNED'
         BNE   *+14               NOPE
         MVC   5(5,R8),ZEROS      TRUNCATE PARAMETER
         B     LOOPSP3            BUMP
*
         CLC   0(10,R8),=C'NOWRITECHK'
         BNE   *+14               NOPE
         MVC   4(6,R8),ZEROS      TRUNCATE PARAMETER
         B     LOOPSP3            BUMP
*
         CLC   0(10,R8),=C'UNORDERED '
         BNE   *+14               NOPE
         MVC   5(4,R8),ZEROS      TRUNCATE PARAMETER
         B     LOOPSP3            BUMP
*
         CLC   0(2,R8),SPACES     FIND 2 SPACES
         BNE   LOOPSP3            NOPE
*
         MVI   0(R8),0            SET IT TO BINARY ZEROS
         B     LOOPSP1            LOOP FROM THE TOP
*
LOOPSP3  DS    0H
         LA    R8,1(,R8)          BUMP TO NEXT BYTE
         BCT   R3,LOOPSP2         KEEP LOOPING
*
LOOPHY1  DS    0H
         LR    R8,R5         POINT TO START OF LINE
         LR    R3,R6         SET MAX LINE LENGTH FOR BCT
*
LOOPHY2  DS    0H
         CLC   0(2,R8),HYPHENS    FIND 2 HYPHENS
         BNE   LOOPHY3            NOPE
*
         MVI   0(R8),0            SET IT TO BINARY ZEROS
         B     LOOPHY1            LOOP FROM THE TOP
*
LOOPHY3  DS    0H
         LA    R8,1(,R8)          BUMP TO NEXT BYTE
         BCT   R3,LOOPHY2         KEEP LOOPING
*
MOVE80   DS    0H
         SR    R8,R8              CLEAR COUNTER
         LA    R3,79              LOOP CONTROL
         LA    R5,WORKLINE   RECORD ADDRESS
*
         MVI   0(R4),C' '    CLEAR THE LINE
         MVC   1(79,R4),0(R4)
         LR    R7,R4
*
MOVELOOP DS    0H
         CLI   0(R5),0           BINARY ZEROS
         BE    MOVEBUMP          JUST BUMP ADDRESS
*
         MVC   0(1,R7),0(R5)     MOVE 1 BYTE
         LA    R7,1(,R7)         BUMP TARGET ADDRESS
*
         LA    R8,1(,R8)         BUMP COUNTER
         CR    R8,R3             COMPARE TO 80
         BH    MOVEDALL          MOVED AS MUCH AS I CAN
*
MOVEBUMP DS    0H
         LA    R5,1(,R5)         BUMP 1 BYTE
         BCT   R6,MOVELOOP       LOOP
*
MOVEDALL DS    0H
         LA    R4,80(,R4)
         MVI   0(R4),X'FF'
         ST    R4,NEXTLINE
*
         B     RC0
*
MOVELINE MVC   WORKLINE(1),0(R5)
*
RC0      DS    0H
*
         SR    R15,R15
         B     RETURN
*
RC4      DS    0H
*
         MVI   IOFLAG,5
         LA    R15,4
         B     RETURN
*
RC12     DS    0H
*
         LA    R15,12
         B     RETURN
*
RETURN   DS    0H
*
         L     R13,4(,R13)  PICK UP CALLING SAVE AREA
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
*
SPACES   DC    CL80' '
ZEROS    DC    80X'00'
HYPHENS  DC    C'--'
         LTORG
*
         EJECT
IDCSAVE  DSECT
         DS    18F
EYECATCH DS    CL8
IDCPARMS DS    XL(PARMLEN)
*
MAXLINES DS    F
*
OUTLINES DS    F
*
NEXTLINE DS    F
TOPLINE  DS    F
TOPPTR   DS    F
*
IOFLAG   DS    XL1
*
         DS    0D
WORKLINE DS    CL150
*
         DS    CL1
         DS    0D
COMMAND1 DS    CL80
COMMAND2 DS    CL80
COMMAND3 DS    CL80
COMMAND4 DS    CL80
COMMAND5 DS    CL80
*
DATALINE DS    CL80
*
VFLAGS   DSECT
VFLAG1   DS    XL1
VOPEN    EQU   X'00'
VCLOSE   EQU   X'04'
VGET     EQU   X'08'
VPUT     EQU   X'0C'
VFLAG2   DS    XL1
VINPUT   EQU   X'80'
VOUTPUT  EQU   X'40'
VDDN     EQU   X'20'
VDSN     EQU   X'10'
VFLAG3   DS    XL1
VFLAG4   DS    XL1
*
VINFO    DSECT
VREC     DS    F
VRECLEN  DS    F
*
PDSECT   DSECT
VPARMS   DS    F
         DS    F
         DS    F
         DS    F
*
PARMFLD  DS    H
*
DDNAMES  DS    H
*
PAGELIST DS    H
*
IOLIST   DS    F
         DS    F
         DS    F
UPTR1    DS    F
         DS    F
         DS    F
UPTR2    DS    F
*
IODD1    DS    CL10
IODD2    DS    CL10
*
*
*
ACBSIZ   EQU   56
MODSIZ   EQU   36
RPLSIZ   EQU   72
DYNDECBL EQU   20
GMVUL    EQU   10
*
         PRINT GEN
         SPLTAREA
         MYSAVE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
         CNOP  0,8
         TITLE 'ETPS - IDCAMS HELP SCREEN'
*
*
IDCHELP  CSECT
         DC    A(IDCHELP1)
         DC    A(IDCBLANK)
         DC    A(IDCHELP2)
         DC    A(IDCHELP3)
         DC    A(IDCHELP4)
         DC    A(IDCBLANK)
         DC    A(IDCHELP5)
         DC    A(IDCHELP6)
         DC    A(IDCBLANK)
         DC    A(IDCHELP7)
         DC    A(IDCHELP8)
         DC    A(IDCHELP9+X'80000000')
IDCHELP1 DC    AL1(80)                  ROW 01, COL 01
         DC    X'05'                  PROTECT, HIGH-LIGHT
         DC    24C'-'
         DC    CL21' IDCAMS INTERFACE    '
         DC    34C'-'
*        123456789012345678901234567890123456789012345678901234567890
IDCHELP2 DC    AL1(61),X'05'
 DC CL62'5 COMMAND LINES ARE PROVIDED TO ENTER AN IDCAMS COMMAND OR  '
IDCHELP3 DC    AL1(61),X'05'
 DC CL62'    A SET OF IDCAMS COMMANDS. EACH COMMAND LINE IS PRECEEDED'
IDCHELP4 DC    AL1(61),X'05'
 DC CL62'    BY AN ASTERISK, WHICH MAKES THE ENTIRE LINE A COMMENT.  '
IDCHELP5 DC    AL1(61),X'05'
 DC CL62'NOTE THAT IF AN IDCAMS COMMAND REQUIRES MORE THAN ONE LINE, '
IDCHELP6 DC    AL1(61),X'05'
 DC CL62'    YOU MUST INDICATE CONTINUATIONS WITH A HYPHEN.          '
IDCHELP7 DC    AL1(61),X'05'
 DC CL62'EACH COMMAND LINE IS PASSED TO IDCAMS AS A CARD IMAGE, JUST '
IDCHELP8 DC    AL1(61),X'05'
 DC CL62'    AS IF IDCAMS WAS INVOKED IN A BATCH JOB. DO NOT USE ANY '
IDCHELP9 DC    AL1(61),X'05'
 DC CL62'    OF THE TSO COMMAND SYNTAX, THINK BATCH.                 '
IDCBLANK DC    AL1(10),X'05',CL12' '
         END
/*
//LKED1    EXEC PGM=IEWL,PARM='XREF,LET,LIST,NCAL,RENT',
//             COND=(2,LT,ASM),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DSN=SYS1.LINKLIB,DISP=SHR
//SYSLMOD  DD   DISP=SHR,DSN=SYS1.LINKLIB,UNIT=SYSDA,VOL=SER=MVSTGT
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  SETCODE AC(1)
     NAME ETPSIDC2(R)
/*
//LKED2    EXEC PGM=IEWL,PARM='XREF,LET,LIST,NCAL,RENT',
//             COND=(2,LT,ASM),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DSN=SYS1.LINKLIB,DISP=SHR
//SYSLMOD  DD   DISP=SHR,DSN=SYS1.LINKLIB,UNIT=SYSDA,VOL=SER=MVSYSA
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
  SETCODE AC(1)
     NAME ETPSIDC2(R)
/*
