         TITLE 'JDF - MACROS'
         PRINT OFF
         COPY  SPFMACS
         COPY  JDFMACS
         PRINT ON
         PRINT NOGEN
         TITLE 'JDF - CHANGE LOG'
JDF      CSECT                DISPLAY STATUS OF JES2 JOBS
JDF      AMODE 31
JDF      RMODE ANY
***********************************************************************
*                                                                     *
* CHANGE LOG                                                          *
*                                                                     *
* 11/03/86 BRIAN COOK    PURGE/RE-QUEUE BY OUTPUT GROUP               *
*                                                                     *
* 10/16/86 BRIAN COOK    INITIALIZE "CONDNUM" EACH TIME THROUGH.      *
*                                                                     *
* 10/10/86 BRIAN COOK    TRY SVC 247 AGAIN                            *
*                                                                     *
* 10/08/86 BRIAN COOK    PUT GETMAINS BACK TO LOC=ANY                 *
*                                                                     *
*  9/30/86 BRIAN COOK    JDF002 MSG WHEN JOBNAME MATCHES, BUT         *
*                        DIFFERENT USER-ID SUBMITTED JOB.             *
*                                                                     *
*  9/29/86 BRIAN COOK    ADDED LINK TO "QSAMPUT" FOR QSAM I/O.        *
*                                                                     *
*  9/18/86 BRIAN COOK    SUPPORT FOR TEST JDF, KEYED OFF CVTUSER.     *
*                                                                     *
*  9/17/86 BRIAN COOK    SWITCHED JDFCHECK TO USE SVC 247, ACFCHK.    *
*                                                                     *
*  9/04/86 BRIAN COOK    UPDATED JDFCHECK FOR 6670 CONFIDENTIAL       *
*                        OUTPUTS.                                     *
*                                                                     *
*  8/29/86 BRIAN COOK    CHANGED TO RE-ENTRANT                        *
*                                                                     *
*  8/25/86 BRIAN COOK    REPLACED "JDFBRO" WITH "SMBROWSE", A GENERAL *
*                        PURPOSE SPF MEMORY BROWSE UTILITY.           *
*                                                                     *
*  8/20/86 BRIAN COOK    ADDED "JDFCHECK" MODULE FOR SECURITY CHECKS  *
*                        FOR VIEWING JOB OUTPUT.                      *
*                                                                     *
*  8/20/86 BRIAN COOK    JQE LOOK-UP FOR "SHOWJOB" WILL USE END OF    *
*                        JOB-ENTRIES FLAG, X'FF', INSTEAD OF LOOP     *
*                        CONTROL BASED ON "$MAXJOBS" IN JES PARMS.    *
*                                                                     *
*  8/13/86 MARK SPAIN    CHANGED JOB.OUTLIST NAME TO @TEMP.OUTLIST    *
*                                                                     *
*  5/09/86 BRIAN COOK    ROUTE JOBCLASS "P" TO BPSCAN                 *
*                                                                     *
*  4/10/86 BRIAN COOK    ON "DO" REQUEST, DON'T SHOW CLASS Y EITHER.  *
*                                                                     *
*  4/01/86 BRIAN COOK    ON "DO" REQUEST, DON'T SHOW CLASS X OR W;    *
*                        MUST USE "DOX" OR "DOW".                     *
*                                                                     *
*  2/13/86 BRIAN COOK    INCREASED "DSNLINE" FROM 133 BYTES TO 266    *
*                                                                     *
*  1/31/86 BRIAN COOK    ALLOW BPSCAN TO LOOK AT "ASM" JOBS           *
*                                                                     *
*  1/30/86 BRIAN COOK    ADDED JCTODTON TO JDFDDTAB                   *
*                                                                     *
*  1/15/86 BRIAN COOK    ADDED "CONTROL" SERVICE BEFORE BROWSE        *
*                                                                     *
*                                                                     *
***********************************************************************
           TITLE 'JDF - JES2 DISPLAY FACILITY '
***********************************************************************
*                                                                     *
*                                                                     *
*                   JES2 DISPLAY FACILITY (JDF)                       *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY STATUS OF JES2 JOBS, LOGONS, & STARTED TASKS.     *
*                                                                     *
*                                                                     *
* FUNCTION: JDF IS AN ISPF/PDF APPLICATION.                           *
*                                                                     *
*           JDF ACCESSES CHECKPOINT INFORMATION VIA CROSS-MEMORY      *
*           SERVICES IN A USER SVC. THIS IS THE UAL JES2 SVC, HEAVILY *
*           MODIFIED FOR SP 1.3.0 AND 1.3.4.                          *
*                                                                     *
*           (THE MEMBER NAME FOR THE SVC IS "JDFSVC".)                *
*                                                                     *
*           THE JES2 JOB QUEUE ELEMENTS (JQES) AND JOB OUTPUT ELEMENTS*
*           ARE USED TO DISPLAY INFORMATION ON JOBS ON INPUT, WAIT-   *
*           ING FOR EXECUTION, OR EXECUTING.                          *
*                                                                     *
*           SUPPORT IS PROVIDED TO BROWSE SPOOL DATASETS, AS WELL AS  *
*           COPYING THEM TO A SEQUENTIAL FILE. ALL SPOOL ACCESS IS    *
*           VIA MODIFIED UAL JES2 INTERFACE SVC:                      *
*                                                                     *
JESSVC   EQU   237                                                    *
*                                                                     *
*           THE MAXIMUM NUMBER OF REMOTES IS DEFINED BELOW. IF THE    *
*           NUMBER IS MORE THAN 33, THE "RMTABLE" ENTRIES WILL HAVE   *
*           TO BE INCREASED. THE DESCRIPTIONS IN RMTABLE NEED TO BE   *
*           MAINTAINED.                                               *
*                                                                     *
RMTMAX  EQU   40
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> STANDARD PARAMETER LIST:                               *
*        R1 ==> (PARM ADDR)                                           *
*      PARM ==> H'LENGTH',PARMDATA                                    *
*                                                                     *
* EXTERNAL REFERENCE: JDFSRB                                          *
*                                                                     *
*                                                                     *
* MACROS USED: SAVE                                                   *
*              ABEND                                                  *
*              RETURN                                                 *
*              STAX                                                   *
*              ENQ                                                    *
*              DEQ                                                    *
*              TPUT                                                   *
*              FREEMAIN                                               *
*              CVT                                                    *
*              CVTUSERS (USER)                                        *
*              TCBWORK  (USER)                                        *
*                                                                     *
*                                                                     *
* ATTRIBUTES: REENTRANT,RESIDENT                                      *
*                                                                     *
*                                                                     *
***********************************************************************
         TITLE 'JDF - ENTRY POINT LOGIC'
         PRINT NOGEN
         USING *,12,11,10,9
*
         SAVE  (14,12),,JDF_01/01/81_BRIAN_COOK_&SYSTIME_&SYSDATE
*
         LR    R12,R15        SET BASE 1
         LA    R1,4095
         LA    R11,1(R1,R12)  SET BASE 2
         LA    R10,1(R1,R11)  SET BASE 3
         LA    R9,1(R1,R10)   SET BASE 4
*
*
*  ADDED SUPPORT FOR TEST JDF
*
*
         USING PSA,0
         L     R15,FLCCVT
         USING CVT,15
         L     R15,CVTUSER
         DROP  15
         USING CVTUSERS,15
         CLC   CVTJDFID(4),=C'TJDF'   TEST JDF INSTALLED
         BNE   NOTSTJDF               NO
         ICM   R15,15,CVTJDFAD
         DROP  15
         LTR   R15,R15                TEST JDF INSTALLED
         BZ    NOTSTJDF               NO
         CR    R12,R15                AM I THE TEST JDF
         BE    NOTSTJDF               YES, CONTINUE
*
         LM    R0,R12,20(R13)         RESTORE REGS
         L     R14,12(,R13)           USE OLD RETURN
         BR    R15                    INVOKE TEST JDF
*
NOTSTJDF DS    0H
*
*
         L     R2,GETMLENG
*        GETMAIN R,LV=(2)
         GETMAIN R,LV=(2),LOC=(BELOW)
*
         ST    R1,8(R13)      LINK SAVE AREAS
         ST    R13,4(R1)      SAVE THE CALLER'S R13
         LR    R13,R1         SET SAVE AREA
         USING WORKAREA,13
*
         USING PSA,0
*
         B     SHOWBGIN
*
GETMLENG DC    F'262144'      GETMAIN AREA
*
         TITLE 'JDF - MAINLINE PROCESSING'
SHOWBGIN DS    0H             DISPLAY STATUS OF JES2 JOBS
*
         MVI   OPEN1,X'80'
         MVC   COMMAND(2),0(R5)    SAVE THE COMMAND ENTERED
         MVI   GOTANYST,C'0'  SET TO "NO STATUS MATCHES"
         MVI   ATABFL,C'0'    NO ACTIVE TABLE
         MVI   DTABFL,C'0'    NO DD NAME TABLE
         MVI   JOBLINE,C' '   CLEAR TAB ENTRY AREA
         MVC   JOBLINE+1(79),JOBLINE
         XC    ISPARMS(40),ISPARMS
*
SHOWINIT DS    0H             DISPLAY STATUS OF JES2 JOBS
         BAL   R7,DOINIT      BUILD THE JOB NAME PARAMETER LIST
*
* SET INITIAL OPTION
*
         MVC   COMMAND(2),STREQ           SET STATUS REQUEST
         MVI   JDFZ,C'S'                 UPPER-CASE IT
*
SHOWAGIN DS    0H
*
         VDEFINE JDFLST,44
*
SHOWOPT2 DS    0H
*
         VGET  JDFLST
*
SHOWOPT3 DS    0H
*
         DISPLAY JDFOPT,ENDKEY=DELNDONE
*
         C     R15,FZEROS         IF ENTER KEY PRESSED
         BNE   SHOWOPT2
*
         OI    JDFZ,C' '                 UPPER-CASE IT
         CLI   JDFZ,C'A'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'E'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'H'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'I'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'L'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'O'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'R'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'T'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'W'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'Q'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
         CLI   JDFZ,C'S'                  VALID OPTION
         BE    OPTIONOK                   GO PICK UP LEVEL
*
         SETMSG JDF007
         B     SHOWOPT3
*
OPTIONOK DS    0H
*
         CLC   JDFLST(44),SPACES
         BE    SHOWOPT2
*
         VPUT  JDFLST
         VDELETE JDFLST
*
         LA    R15,JDFLST
         SR    R14,R14
*
         CLI   0(R15),C' '
         BE    *+16
         LA    R14,1(,R14)
         LA    R15,1(,R15)
         B     *-16
         STC   R14,JDFLSTL
*
** FOLLOWING FIELD INITIALIZATIONS PERFORMED AS PART OF THE
*  CONVERSION TO RE-ENTRANCY
*
         MVI   BPSFORM,C' '
         MVC   BPSFORM+1(BPSFORML-1),BPSFORM
         MVC   BPSFORM(27),=CL27'  ***** BPSCAN DATA FOR'
         MVC   JOBDDNAM+8(5),=C'.DSID'
         MVC   BRODSID(5),=C'-----'
         MVC   CMDISMF(4),=X'00220000'
         MVC   RQRMT(8),=CL8'N1R'
         MVC   RURMT(8),=CL8'U'
         MVC   DATYPE(3),=C'JOB'
*
*
         CLI   JDFZ,C'X'                  END
         BE    SHOWDONE                   YUP
*
         CLI   JDFZ,C'I'                  DISPLAY INITIATORS
         BNE   TSTINOPT                   NO, SKIP THIS
         LINK EP=DIF
         B     SHOWAGIN                   LOOP
*
DELNDONE DS    0H
*
         VDELETE JDFLST
         B     SHOWDONE                   GO PICK UP LEVEL
*
TSTINOPT DS    0H
*
         CLI   JDFZ,C'S'                  STATUS
         BNE   JDFINOPT                   NO
         MVC   COMMAND(2),STREQ           SET STATUS REQUEST
         B     JDFINLVL                   GO PICK UP LEVEL
*
JDFINOPT DS    0H
         MVI   COMMAND,C'D'               SET "D" REQUEST
         MVC   COMMAND+1(1),JDFZ          SET DISPLAY TYPE
*
JDFINLVL DS    0H
         OC    LVL(8),SPACES             UPPER-CASE IT
         MVI   LVL+7,C' '                MAKE SURE THERE IS A BLANK
         SR    R15,15
         LA    R14,LVL
*
         CLI   0(R14),C' '
         BE    *+16
         LA    R14,1(,R14)
         LA    R15,1(,R15)
         B     *-16
*
         BCTR  R15,0           SUBTRACT 1
         STC   R15,USRJLENG
*
SHOWAGN2 DS    0H
         BAL   R7,GETJQES     READ CKPT FOR JQE'S AND JOE'S
*
         BAL   R7,OUTJQES     FILL IN THE SPF TABLE
*
         BAL   R7,SHOWISP     DISPLAY THE SPF TABLE
*
SHOWDONE DS    0H
*
         TBCREATE DATABLE1,TSEL,JOBLINE
         TBEND    DATABLE1
*
         TBCREATE DDTABLE1,DSEL,DDNLINE
         TBEND    DDTABLE1
*
         TBCREATE RMTABLE1,RMT1,RMT2
         TBEND    RMTABLE1
*
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
JUSTGOUT DS    0H
         TM    OUTLIST+48,X'10'   OPEN OK?
         BZ    JDFRTRN             NOPE
*
** LET "QSAMPUT" DO THE CLOSE
*
         LA    R15,OUTLIST
         ST    R15,ISPARMS
         MVC   ISPARMS+4(4),=X'FFFFFFFF'
         LA    R1,ISPARMS
         L     R15,QPUTEPA
         BALR  R14,R15
*
JDFRTRN  DS    0H
*
         DELETE EP=QSAMPUT
*
         L     R3,4(,R13)     RESTORE THE CALLER'S R13
         L     R2,GETMLENG
         FREEMAIN R,LV=(2),A=(13)
*
         LR    R13,R3
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
*
         TITLE 'JDF - INITIALIZATION'
DOINIT   DS    0H
*
         LOAD  EP=QSAMPUT
         ST    R0,QPUTEPA
*
         L     R1,DCB2ADDR
         MVC   REPRINT(DCB2LEN),0(R1)        REPRINT DCB
         L     R1,DCB3ADDR
         MVC   OUTLIST(DCB3LEN),0(R1)        OUTLIST DCB
*
         XC    READMTTR(4),READMTTR
         XC    READAREA(4),READAREA
         XC    DRNUM(2),DRNUM
         MVI   DQCLASS,C' '
         MVI   DOCLASS,C' '
*
         MVI   JDFZ,C' '
         MVC   LVL(8),SPACES
         MVI   JOBLINE,C' '
         MVC   JOBLINE+1(74),JOBLINE
         MVC   TSEL(3),SPACES
         MVC   JCMD(40),SPACES
         MVC   DCMD(40),SPACES
         MVI   DDNLINE,C' '
         MVC   DDNLINE+1(75),DDNLINE
         MVC   DSEL(3),SPACES
*
         VDEFINE JDFZ,1
         VDEFINE LVL,8
         VDEFINE JOBLINE,75
         VDEFINE JOBID,30
         VDEFINE TSEL,3
         VDEFINE JCMD,40
         VDEFINE DCMD,40
         VDEFINE DDNLINE,76
         VDEFINE DSEL,3
*
        XC    HR001(HRLEN),HR001   CLEAR OUT THE REMOTE COUNTERS
*
         VDEFINE RMT1,34
         VDEFINE RMT2,34
*
         MVC   UIDLEN(4),L8
         CALL  ISPLINK,                                                X
               (VCOPY,ZUSER,UIDLEN,USERID,SPFMOVE),                    X
               VL,MF=(E,ISPARMS)
*
         LTR   R15,15          IF RETURN CODE IS ZERO,
         BZ    USERIDOK        OK
*
USERIDOK DS    0H
         MVC   PFXLEN(4),L8
         CALL  ISPLINK,                                                X
               (VCOPY,ZPREFIX,PFXLEN,PREFIX,SPFMOVE),                  X
               VL,MF=(E,ISPARMS)
*
         LTR   R15,15          IF RETURN CODE IS ZERO,
         BZ    SMBDEFS         OK
*
ABEND12  ABEND 12,DUMP,STEP
*
SMBDEFS  DS    0H
*
         VDEFINE SMBSTART,4,FMT=FIXED
         VDEFINE SMBNUMB,4,FMT=FIXED
         VDEFINE SMBLRECL,4,FMT=FIXED
         VDEFINE SMBTITLE,49
*
         MVC   LVL(8),USERID          DEFAULT
         MVC   MSGJNAME(8),LVL        SAVE FOR MESSAGE
*
         LA    R2,4095
         LA    R1,1(R2,R13)  BUMP PAST 4K WORKAREA
         ST    R1,JJSPARM
         OI    JJSPARM,X'80'
         A     R1,L128K       BUMP 128 K
*
         ST    R1,JCTPTR
         A     R1,L12K         BUMP 12 K
*
         ST    R1,IOTPTR
         A     R1,L40K         BUMP 40 K
*
         LA    R1,88(,R1)
         ST    R1,IXTPTR
*
         LA    R1,SSOBAREA
         ST    R1,SSOBPTR
         OI    SSOBPTR,X'80'
*
         BR    R7             RETURN TO OUR CALLER
*
L128K    DC    F'131072'
L24K     DC    F'24576'
L12K     DC    F'12288'
L40K     DC    F'40960'
*
         TITLE 'JDF - READ JQE S  AND JOE S'
*
GETJQES  DS    0H
*
*
         STAX  DEFER=YES
*
         L     R1,JJSPARM
         USING JJSDSECT,1
*
         LA    R1,JJSPARM
         LA    R15,12
         SVC   JESSVC
*
*        LA    R15,8
*        SVC   236
*
         STAX  DEFER=NO
*
         BR    R7
         TITLE 'JDF - BUILD JQE DISPLAY'
OUTJQES  DS    0H
         L     R1,JJSPARM
         USING JJSDSECT,1
         LA    R6,JJSLINE1  POINT TO FIRST JOB LINE
         USING JOBDSECT,6
         LA    R6,JOBSIZE(,R6)    SKIP FIRST ONE
*
         ST    R7,JQESHOLD SAVE THE RETURN ADDRESS
*
         MVC   TSEL(3),SPACES     SET SELECTION CODE TO SPACES
         MVI   GOTANYST,C'0'      DID I FIND ANY ENTRIES?
*
         TBCREATE DATABLE1,TSEL,JOBLINE
*        TBVCLEAR DATABLE1
*
         MVI   ATABFL,C'1'        AN ACTIVE TABLE
*
         XC    BPSCANJO(8),BPSCANJO   CLEAR THE BPSCAN JOBNAME TABLE
*
CHECKJQE DS    0H
*
         CLC   COMMAND(2),DEREQ    DE REQUEST
         BE    CHECKJQ2            YES, PRINT IT
         CLC   COMMAND(2),STREQ    ST REQUEST
         BE    CHECKJQ2            YES, PRINT IT
*
         CLC   JOBJNAME(5),=C'INIT '    INITIATOR
         BE    NEXTJQE        GET ANOTHER JQE
*
         CLC   JOBJNAME(8),=C'$MASCOMM' MULTI-ACCESS SPOOL COMM
         BE    NEXTJQE        GET ANOTHER JQE
*
CHECKJQ2 DS    0H
         CLC   COMMAND(2),=C'QS'   REMOTE QUEUE SUMMARY
         BE    CHECKRSM            YES, SET FLAGS AND SCAN WORK JOES
*
         BAL   R7,INITMSG     INITIALIZE THE OUTPUT MESSAGE
*
         MVC   MSGSREMT(8),JOBWTRID   INDICATE WTR
*
         CLI   MSGJOB#+4,C' ' IF JOB NUMBER IS ZEROS
         BE    JQEDONE        ALL DONE
         CLI   JOBTYPE,$PURGE JOB HAS BEEN PURGED
         BE    JQEPURGE       GO PRINT IT
         CLI   JOBTYPE,X'60'  ACTIVE TSO SESSION?
         BE    JQEXEQ         YES
         CLI   JOBTYPE,X'50'  ACTIVE STARTED TASK?
         BE    JQEXEQ         YES
         TM    JOBFLAGS,QUEBUSY   JOB EXECUTING?
         BZ    JQEQINP        NO, SEE IF IT IS IN INPUT
         B     JQEXEQ         YES
JQEQINP  DS    0H
         CLI   JOBTYPE,X'40'  JOB AWAITING EXECUTION?
         BE    JQEINPUT       YES
         CLI   JOBTYPE,X'41'  JOB AWAITING EXECUTION?
         BE    JQEINPUT       YES
         CLI   JOBTYPE,X'43'  JOB AWAITING EXECUTION?
         BE    JQEINPUT       YES
         TM    JOBTYPE,$SETUP JOB AWAITING EXECUTION?
         BO    JQEINPUT       YES
         CLI   JOBTYPE,$XMIT  JOB ON TRANSMISSION QUEUE
         BE    JQEXMIT        YES
         TM    JOBTYPE,$XMIT  JOB ON INPUT
         BO    JQEINPUT       YES
         TM    JOBTYPE,$RECEIVE JOB ON SYSOUT RECEIVER?
         BO    JQEINPUT       YES
         TM    JOBTYPE,$DUMPQ JOB ON SPOOL OFFLOAD DUMP QUEUE?
         BO    JQEDUMP        YES
         CLI   JOBTYPE,$OUTPUT JOB ON OUTPUT QUEUE?
         BE    JQEOUTP        YES
         TM    JOBTYPE,$OUTPUT JOB ON OUTPUT QUEUE?
         BO    JQEINPUT       YES
         TM    JOBTYPE,$HARDCPY JOB ON PRINTER?
         BO    JQEOUTP        YES
         B     NEXTJQE        GET ANOTHER JQE
JQEXEQ   DS    0H
*
         CLI   JOBFLAG3,QUETSU  TSO USER ?
         BE    LOGDUSER       YES => SET THE MSG
         CLI   JOBFLAG3,QUESTC  STARTED TASK?
         BNE   EXECJOB         NO => MUST BE BATCH JOB
         MVC   MSGSTYPE(L'ACTIVE),ACTIVE MUST BE A STARTED TASK
         CLC   JOBRECCT(4),FZEROS      ANY RECORDS?
         BE    JQEOUTST        NOPE,   GET NEXT WORK JOE
         B     JQEOUTP                 SEE IF THERE IS ANY OUTPUT
LOGDUSER MVC   MSGSTYPE(L'LOGGEDON),LOGGEDON TSUSER
         CLC   JOBRECCT(4),FZEROS      ANY RECORDS?
         BE    JQEOUTST        NOPE,   GET NEXT WORK JOE
         B     JQEOUTP                 SEE IF THERE IS ANY OUTPUT
EXECJOB  MVC   MSGSTYPE(L'EXECUTNG),EXECUTNG EXECUTING JOB
         MVC   MSGQTYPE,JOBJCLAS SET THE JOB CLASS
         OI    MSGQTYPE,HIGHBIT MAKE THE JOB CLASS PRINTABLE
         B     JQEOUTST                SEE IF THERE IS ANY OUTPUT
*
JQEINPUT DS    0H
*
         MVC   MSGSTYPE(L'INPQUE),INPQUE   ON INPUT QUEUE
         MVC   MSGQTYPE,JOBJCLAS SET THE JOB CLASS
         OI    MSGQTYPE,HIGHBIT MAKE THE JOB CLASS PRINTABLE
         B     MSGTEST        GO PRINT THE MESSAGE
JQEXMIT  DS    0H
*
         MVC   MSGSTYPE(L'XMTQUE),XMTQUE   ON INPUT QUEUE
         MVC   MSGQTYPE,JOBJCLAS SET THE JOB CLASS
         OI    MSGQTYPE,HIGHBIT MAKE THE JOB CLASS PRINTABLE
         SR    R15,R15
         ICM   R15,3,JOBXEQND
         CVD   R15,DOUBLEWD     NODE NUMBER FOR PRINTED OUTPUT
         OI    DOUBLEWD+7,X'0F' MAKE PRINTABLE
         MVI   MSGSNODE,C'N'
         UNPK  MSGSNODE+1(1),DOUBLEWD+7(1)
         B     MSGTEST        GO PRINT THE MESSAGE
*
JQEPURGE DS    0H
*
         MVC   MSGSTYPE(L'PURQUE),PURQUE   ON PURGE QUEUE
         B     MSGTEST        GO PRINT THE MESSAGE
*
JQERECV  DS    0H
*
         MVC   MSGSTYPE(L'SYSREC),SYSREC   ON SYSOUT RECEIVER
         B     MSGTEST        GO PRINT THE MESSAGE
*
JQEDUMP  DS    0H
*
         MVC   MSGSTYPE(L'DMPQUE),DMPQUE   ON $DUMP QUEUE
         B     MSGTEST        GO PRINT THE MESSAGE
*
JQEOUTP  DS    0H
*
         MVC   MSGSTYPE(18),SPACES
*
         OC    JOBGNAME(8),SPACES          MIGHT BE BINARY ZEROS
         CLC   JOBGNAME(8),SPACES          IF NO OUTPUT GROUP NAME
         BE    JQEOUTP8                    SHOW DEFAULT MESSAGE
*
         MVC   MSGSTYPE(7),=C'OUTGRP='     SHOW OUTPUT GROUP
         MVC   MSGSTYPE+7(8),JOBGNAME           OUTPUT GROUP NAME
*
         LA    R1,MSGSTYPE+7               START OF LOOP
         MVI   MSGSTYPE+10,C' '            END OF LOOP
*
         CLI   0(R1),C' '                  END OF GROUP NAME
         BE    *+12                        GOT IT
         LA    R1,1(,R1)                   BUMP
         B     *-12                        LOOP
*
         MVI   0(R1),C'.'                  DELIMITER
         SR    R14,R14
         ICM   R14,3,JOBGID1
         CVD   R14,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         UNPK  1(3,R1),DOUBLEWD+6(2)
         MVI   4(R1),C'.'                  DELIMITER
         SR    R14,R14
         ICM   R14,3,JOBGID2
         CVD   R14,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         UNPK  5(3,R1),DOUBLEWD+6(2)
*
         B     JQEOUTP9
*
JQEOUTP8 DS    0H
         MVC   MSGSTYPE(L'OUTQUE),OUTQUE   ON OUTPUTQUEUE
*
JQEOUTP9 DS    0H
*
JQEOUTST DS    0H
         TM    JOBFLAGS,X'E0'     IS THE JOB HELD
         BZ    JQEJOENH           NO. CONTINUE CHECKING
         MVC   MSGSPCST(4),HOLD      NO READY OUTPUT
         CLC   JOBREMOT,FZEROS REMOTE QUEUE?
         BNE   RMTDEV          YES => OUTPUT IT
         B     JQEOUTLP
JQEJOENH DS    0H
         TM    JOBDEVID,X'0F'     IS THIS AN XWTR
         BNO   NOTXWTR            NO. CONTINUE CHECKING
         MVC   MSGSPCST(4),=C'XWTR'  NO READY OUTPUT
         B     JQEOUTLP
NOTXWTR  DS    0H
         CLC   JOBREMOT,FZEROS REMOTE DEVICE?
         BNE   RMTDEV          YES => OUTPUT IT
NOTXWTR2 DS    0H
         SR    R1,R1            FOR THE INSERT CHARACTER
         IC    R1,JOBDEVID      DEVICE TYPE
         SRL   R1,4             RIGHT JUSTIFIED
         MH    R1,DEVTYPEL      TYPE * LENGTH OF A DEVICE ENTRY
         LA    R1,DEVTABLE(R1)   A(DEVICE TYPE)
         CLC   DEVTABLE+1(7),1(R1)      DUMMY ENTRY?
         BE    JQEOUTLP       GO EXIT
         MVC   MSGSREMT(7),1(R1)        PUT IN THE DEVICE TYPE
         CLI   JOBDEVID,0        INTERNAL READER?
         BE    JQEOUTLP          YES => GIVE THE USER THE INFO
         SR    R15,R15           FOR THE INSERT CHARACTER
         IC    R15,JOBDEVID+2    DEVICE NUMBER
         CVD   R15,DOUBLEWD      IN PACKED DECIMAL
         IC    R15,0(R1)         OFFSET TO WHERE THE DEV # GOES
         LA    R15,MSGSREMT(R15) A(WHERE THE DEV # GOES)
         MVC   1(3,R15),THREEPT  SET UP THE EDIT OF 3 DIGITS
         EDMK  0(4,R15),DOUBLEWD+6 DEV # IN EBCDIC
         MVC   0(4,R15),0(R1)    ADJUST FOR BLANKS
*
*
         B     JQEOUTLP       GO EXIT
*
RMTDEV   DS    0H
*
         SR    R0,R0          NOT REALLY NEEDED NOW
         ICM   R0,3,JOBREMOT    REMOTE NUMBER
         CVD   R0,DOUBLEWD    IN PACKED DECIMAL
         MVC   MSGSREMT(7),SPACES
*
         MVI   MSGSREMT,C'R'    INDICATE A REMOTE DEVICE
         CLC   JOBRNODE,FZEROS  IS THIS A LOCAL PRINTER?
         BNE   *+8              NO
         MVI   MSGSREMT,C'U'    INDICATE A LOCAL PRINTER
*
         MVC   MSGSREMT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK
         EDMK  MSGSREMT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC
         MVC   MSGSREMT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS
         LA    R1,MSGSREMT+1    A(SPOT JUST BEFORE POSSIBLE SEP)
FINDPT   LA    R1,1(R1)       A(NEXT BYTE)
         CLI   0(R1),C'.'     FOUND THE SEPARATOR?
         BNE   FINDPT         NO => KEEP LOOKING
         SR    R15,R15        FOR THE INSERT CHARACTER
         IC    R15,JOBDEVID     DEVICE TYPE INDICATOR
         SRL   R15,3          RIGHT JUSTIFIED
         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)
         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE
         MVC   3(1,R1),JOBDEVID     THE DEVICE NUMBER
         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE
         CLC   0(4,R1),=C'.NT0'
         BNE   JQEOUTLP       GO EXIT
         MVC   0(4,R1),=C'    '
         B     JQEOUTLP       GO EXIT
         EJECT
JQEOUTLP DS    0H
         CLC   MSGSREMT(2),=C'U3'  3820 PSF/FSS PRINTER?
         BNE   JQEOUTL2            NO, SKIP THIS
*
         CLC   MSGSREMT+2(3),SPACES ACTIVE
         BE    JQEOUTL2            NO, SKIP THIS
*
         MVC   MSGSREMT+2(5),=C'.PRTR'
*
JQEOUTL2 DS    0H
         MVI   JOBRECCT,X'00'      WIPE OUT LEFT BYTE
         CLC   JOBRECCT(4),FZEROS      ANY RECORDS?
         BE    JQENOWRK        NOPE,   GET NEXT WORK JOE
*
JOENOWTR DS    0H
*
JOERECLP DS    0H
*
JQEOUTMS DS    0H
         ICM   R15,15,JOBRECCT        RECORD COUNT
         CVD   R15,DOUBLEWD        RECORD COUNT
         MVC   MSGALINE-1(10),EDIT10
         ED    MSGALINE-1,DOUBLEWD+4
*
         MVC   MSGOCLAS(1),JOBCURCL
*
         CLC   MSGSTYPE(7),=C'OUTGRP='     SHOW OUTPUT GROUP
         BE    JQETNODE            CHECK FOR RMT PRINT NODE
         CLC   MSGSTYPE(3),OUTQUE   ON OUTPUTQUEUE?
         BNE   MSGTEST
*
         B     JQETNODE            CHECK FOR RMT PRINT NODE
*
JQENOWRK DS    0H
*
         CLC   MSGSTYPE(3),OUTQUE   ON OUTPUTQUEUE?
         BNE   MSGTEST
*
         MVC   MSGSPCST(4),=C'NRDY'  NO READY OUTPUT
*
JQETNODE DS    0H
*
         CLC   JOBRNODE(2),FZEROS     COMPARE PRINT NODE TO ZERO
         BE    MSGTEST       IT'S THE SAME, SO SKIP IT
         CLC   JOBTHISN(2),JOBRNODE   COMPARE THIS NODE VS. PRINT NODE
         BE    MSGTEST       IT'S THE SAME, SO SKIP IT
*
         SR    R15,R15
         ICM   R15,3,JOBRNODE
         CVD   R15,DOUBLEWD     NODE NUMBER FOR PRINTED OUTPUT
         OI    DOUBLEWD+7,X'0F' MAKE PRINTABLE
         MVI   MSGSNODE,C'N'
         UNPK  MSGSNODE+1(1),DOUBLEWD+7(1)
         CLC   MSGSNODE(2),=C'N1'  LOCAL NODE
         BNE   MSGTEST        GO PRINT THE MESSAGE
         MVC   MSGSNODE(2),SPACES  LOCAL NODE
MSGTEST  DS    0H
*
         CLC   COMMAND(2),DTREQ    DT REQUEST
         BE    MSGDTREQ            YES, GO TEST FOR OUTPUT QUEUE TYPE
         CLC   COMMAND(2),DRREQ    DR REQUEST
         BE    MSGDRREQ            YES, GO TEST FOR OUTPUT QUEUE TYPE
         CLC   COMMAND(2),DOREQ    DO REQUEST
         BE    MSGDOREQ            YES, GO TEST FOR OUTPUT QUEUE TYPE
         CLC   COMMAND(2),DWREQ    DW REQUEST
         BE    MSGDWREQ            YES, GO TEST FOR EXTERNAL WRITER
         CLC   COMMAND(2),DEREQ    DE REQUEST
         BE    MSGNEXT             YES, PRINT IT
         CLC   COMMAND(2),STREQ    ST REQUEST
         BE    MSGSTAT             YES, PRINT IT
         CLC   COMMAND(2),DHREQ    DH REQUEST
         BE    MSGHELD             YES, PRINT IT
         CLC   COMMAND(2),DLREQ    DL REQUEST
         BE    MSGSLOG             YES, PRINT IT
         CLC   COMMAND(2),DAREQ    DA REQUEST
         BE    MSGACTV             YES, PRINT IT
         CLC   COMMAND(2),DQREQ    DQ REQUEST
         BE    MSGINPT             YES, PRINT IT
         B     MSGNEXT        GO PRINT THIS JQE
*
MSGSTAT  DS    0H
*
         SR    R15,15
         IC    R15,USRJLENG   SET THE JOB LENGTH
         EX    R15,NAMECLC1   MATCH ON JOB NAME
         BE    MSGSTAT2       GO PRINT THIS JQE
         EX    R15,NAMECLC2   MATCH ON WTRID
         BE    MSGSTAT2       GO PRINT THIS JQE
         B     NEXTJQE        GET ANOTHER JQE
*
NAMECLC1 CLC   LVL(1),JOBJNAME         JOBNAME FIRST 5 BYTES
NAMECLC2 CLC   LVL(1),JOBWTRID         JOBNAME FIRST 5 BYTES
MSGSTAT2 DS    0H
*
         CLI   MSGSTYPE,C'E'   EXECUTING?
         BE    GETSYSID       GO SET SYSTEM ID
         CLI   MSGSTYPE,C'A'   ACTIVE
         BE    GETSYSID       GO SET SYSTEM ID
         CLI   MSGSTYPE,C'L'   LOGGED ON
         BE    GETSYSID       GO SET SYSTEM ID
*
         B     MSGNEXT        GO PRINT THIS JQE
*
MSGHELD  DS    0H
*
         CLC   MSGSTYPE(7),=C'OUTGRP='     SHOW OUTPUT GROUP
         BE    *+14
         CLC   MSGSTYPE(L'OUTQUE),OUTQUE   ON OUTPUTQUEUE
         BNE   NEXTJQE        NO, SKIP IT
*
         CLC   USERID(6),=CL6'BPSCAN'
         BE    MSGHELD2       YES, CHECK FOR DUPLICATE NAME
*
         CLC   MSGSPCST(4),=C'NRDY'  NO READY OUTPUT
         BE    MSGHELD3       YES, CHECK FOR BPSCAN
         CLC   MSGSPCST(4),HOLD      NO READY OUTPUT
         BE    MSGHELD3       YES, CHECK FOR BPSCAN
*
         B     NEXTJQE        NO, SKIP IT
*
MSGHELD2 DS    0H
*
         CLC   BPSCANJO(8),JOBJNAME
         BE    NEXTJQE
         MVC   BPSCANJO(8),JOBJNAME
         B     MSGHELD3            CHECK FOR HELD OUTPUT
*
MSGHELD3 DS    0H
*
         CLC   USERID(6),=CL6'BPSCAN'
         BNE   MSGNEXT        GO PRINT THIS JQE
*                                     IF USER ID IS BPSCAN
         CLI   JOBJCLAS,C'P'          LOOK AT CLASS "P" JOBS
         BE    CHKCLASX
*
         CLI   JOBJCLAS,C'S'          LOOK AT CLASS "S" JOBS
         BE    CHKCLASX
*
         CLI   JOBJCLAS,C'R'          LOOK AT CLASS "R" JOBS
         BE    CHKCLASX
*
         CLI   JOBJNAME+7,C'0'        AND PRODUCTION
         BL    NEXTJQE
*
CHKCLASX DS    0H
*                   AT THIS POINT WE HAVE TO DETERMINE WHETHER THE
*                   JOB HAS ALREADY BEEN PROCESSED BY BPSCAN.
*
         L     R1,JCTPTR
         USING JEDDSECT,1
         MVC   JEDMTTR2(4),JOBTRAK
         LA    R1,JCTPTR
         LA    R15,14
         SVC   JESSVC
*
         LTR   R15,R15
         BNZ   ABADJCT
*
         L     R1,JCTPTR
         MVC   JOBUSRID(7),JEDUSEID    SET SUBMITTING USERID
         OI    JEDATOUT+3,X'0F'  MAKE PRINTABLE
         UNPK  JOBOUDAT(5),JEDATOUT+1(3)
         L     R15,IOTPTR
         MVC   000(256,R15),000(R1)
         MVC   256(256,R15),256(R1)
         MVC   512(256,R15),512(R1)
*
         LA    R1,IOTPTR
         LA    R15,15
         SVC   JESSVC
*
         L     R1,IOTPTR
         LA    R1,JEDBUFF+24   POINT TO DDNAMES
         USING DDLINE,1
*
BPSCAN01 DS    0H
         CLI   0(R1),X'FF'          END OF ENTRIES?
         BE    NEXTJQE
         CLC   DDLDSID(3),=C'003'
         BE    NEXTJQE
         CLC   DDLDSID(3),=C'002'
         BE    BPSCANCL
*
BPSCAN02 DS    0H
         LA    R1,DDLINESZ(,1)       BUMP TO NEXT DD ENTRY
         B     BPSCAN01
*
BPSCANCL DS    0H
         CLI   DDCLASS,C'X'
         BNE   BPSCAN02
*
INITAHJR DS    0H
*
         B     MSGNEXT        OK, KEEP IT
*
MSGSLOG  DS    0H
         CLC   JOBJNAME(8),=CL8'SYSLOG'
         BE    GETSYSID       YES, GET THE SYSTEM ID
         B     NEXTJQE        NO, SKIP IT
*
MSGACTV  DS    0H
         CLC   MSGJBTYP(3),DATYPE
         BNE   NEXTJQE        NO, SKIP IT
*
MSGACTVT DS    0H
*
         CLI   MSGSTYPE,C'E'   EXECUTING?
         BE    GETSYSID       GO SET SYSTEM ID
         CLI   MSGSTYPE,C'A'   ACTIVE
         BE    GETSYSID       GO SET SYSTEM ID
         CLI   MSGSTYPE,C'L'   LOGGED ON
         BE    MSGSTAT2       GO SET SYSTEM ID
         B     NEXTJQE        NO, SKIP IT
*
*                              FIND OUT WHAT SYSTEM IT IS RUNNING ON
GETSYSID DS    0H
*
         TM    JOBFLAG3,QUESYSDS    SYSTEM DATASET
         BO    MSGNEXT              NO JCT, JOBTRAK POINTS TO IOT
*
         L     R1,JCTPTR
         USING JEDDSECT,1
         MVC   JEDMTTR2(4),JOBTRAK
         LA    R1,JCTPTR
         LA    R15,14
         SVC   JESSVC
*
         L     R1,JCTPTR
         MVC   JOBUSRID(7),JEDUSEID    SET SUBMITTING USERID
         OI    JEDATOUT+3,X'0F'  MAKE PRINTABLE
         UNPK  JOBOUDAT(5),JEDATOUT+1(3)
         MVC   MSGSPCST(4),JEDEXSID
         LTR   R15,R15
         BZ    MSGNEXT
*
ABADJCT  DS    0H
         SETMSG JDF005
         B     SHOWAGN2        DISPLAY THE SCREEN
*
MSGINPT  DS    0H
         CLC   MSGSTYPE(6),INPQUE
         BNE   NEXTJQE        NO, SKIP IT
*
         CLI   DQCLASS,C' '   NO QUEUE SPECIFIED?
         BE    MSGNEXT        GO PRINT THIS JQE
*
         CLC   DQCLASS(1),JOBJCLAS     CORRECT QUEUE?
         BE    MSGNEXT        GO PRINT THIS JQE
*
         B     NEXTJQE        NO, SKIP IT
*
MSGDRREQ DS    0H
         CLI   MSGSNODE,C'N'  REMOTE NODE?
         BE    NEXTJQE       YES, SKIP IT
         CLI   MSGSREMT,C'U' REMOTE FSS PRINTER?
         BE    *+12          YES, INCLUDE IT
         CLI   MSGSREMT,C'R' REMOTE PRINT/PUNCH?
         BNE   NEXTJQE        NO, SKIP IT
*
         CLC   DRNUM(2),FZEROS   ALL REMOTES?
         BE    MSGNEXT        GO PRINT THIS JQE
*
         CLC   DRNUM(2),JOBREMOT THIS REMOTES?
         BE    MSGNEXT        GO PRINT THIS JQE
*
         B     NEXTJQE        NO, SKIP IT
*
MSGDWREQ DS    0H
*
         CLI   JOBWTRID,C' ' EXTERNAL WRITER/IDTF?
         BNH   NEXTJQE       NO, SKIP IT
*
         MVC   MSGSREMT(8),JOBWTRID   INDICATE WTR
         B     MSGNEXT        GO PRINT THIS JQE
*
MSGDOREQ DS    0H
*
         CLI   JOBWTRID,C' ' EXTERNAL WRITER/IDTF?
         BNE   NEXTJQE       YES, SKIP IT
*
         CLC   MSGSPCST(4),=C'NRDY'  NO READY OUTPUT
         BE    NEXTJQE       YES, SKIP IT
         CLI   MSGSNODE,C'N'  REMOTE NODE?
         BE    NEXTJQE       YES, SKIP IT
         CLI   MSGSREMT,C'R'  REMOTE QUEUE?
         BE    NEXTJQE       YES, SKIP IT
*
         CLC   MSGSREMT(2),=C'U3'  REMOTE FSS PRINTER?    **FSS**
         BE    NEXTJQE       YES, SKIP IT
*
         CLI   MSGSTYPE+3,C'O' OUTPUT - LOCAL PRINT QUEUE
         BE    MSGDOCHK       GO CHECK FOR PRINT QUEUE
         CLI   MSGSTYPE+3,C'P' OUTPUT - ACTUALLY PRINTING
         BE    MSGDOCHK       GO CHECK FOR PRINT QUEUE
         CLC   MSGSTYPE(7),=C'OUTGRP='
         BE    MSGDOCHK       GO CHECK FOR PRINT QUEUE
         B     NEXTJQE        NO, SKIP IT
*
MSGDOCHK DS    0H
*
         CLI   MSGOCLAS,C'V'  IS THIS SYSOUT=V?
         BE    MSGDOCK2       CHECK FOR SPECIFIC CLASS REQUEST
         CLI   MSGOCLAS,C'W'  IS THIS SYSOUT=W?
         BE    MSGDOCK2       CHECK FOR SPECIFIC CLASS REQUEST
         CLI   MSGOCLAS,C'X'  IS THIS SYSOUT=X?
         BE    MSGDOCK2       CHECK FOR SPECIFIC CLASS REQUEST
         CLI   MSGOCLAS,C'Y'  IS THIS SYSOUT=Y?
         BE    MSGDOCK2       CHECK FOR SPECIFIC CLASS REQUEST
*
         CLI   DOCLASS,C' '   NO QUEUE SPECIFIED?
         BE    MSGNEXT        GO PRINT THIS JQE
*
MSGDOCK2 DS    0H
*
         CLC   DOCLASS(1),MSGOCLAS     CORRECT QUEUE?
         BE    MSGNEXT        GO PRINT THIS JQE
         B     NEXTJQE        NO, SKIP IT
*
MSGDTREQ DS    0H
*
         CLC   MSGSTYPE(L'XMTQUE),XMTQUE   ON INPUT QUEUE FOR XMIT
         BE    MSGNEXT        GO PRINT THIS JQE
*
         CLI   MSGSNODE,C'N'
         BNE   NEXTJQE        NO, SKIP IT
         B     MSGNEXT        GO PRINT THIS JQE
*
MSGNEXT  DS    0H
*
         CLC   JOBFORM(4),=C'STD1'
         BE    *+10
         MVC   MSGFORM(4),JOBFORM
*
         MVI   MSGBURST,C' '  SET BURST FLAG
         TM    JOBCFLAG,$JOEBRST  BURST OUTPUT?
         BE    *+8            NOPE
         MVI   MSGBURST,C'Y'
*
*
         CLI   MSGSTYPE,C'L'  LOGGED-ON TSO USER?
         BNE   BALOUTMS       NO, JUST GO PRINT THIS JQE
*
         L     R1,FLCCVT      PICK UP CVT
         USING CVT,1
         L     R1,CVTUSER     PICK UP CVTUSER
         USING CVTUSERS,1
*
         LTR   R1,1           CVTUSER AREA PRESENT?
         BZ    BALOUTMS       NO, JUST GO PRINT THIS JQE
*
         L     R14,CVTTSOUA          FIRST TSO USER ENTRY
         L     R15,CVTTSOUN          NUMBER OF ENTRIES
         USING TSOUSER,14
*
CVTULOOP DS    0H
         CLC   MSGJNME(7),TSOUSRID   MATCH
         BE    GOTATSOE              USE IT
*
         LA    R14,TSOUSLEN(,14)     BUMP TO NEXT ENTRY
         BCT   R15,CVTULOOP
         B     NOTATSOE
*
GOTATSOE DS    0H
*
         CLC   MSGSTYPE(7),=C'OUTGRP='      OUTGROUP?
         BE    *+10                         YES, LEAVE IT
         MVC   MSGSTYPE(16),TSOUSRNM+2
*
NOTATSOE DS    0H
*
BALOUTMS DS    0H
*
         PACK  MSGJQTYP(1),JOBTYPE
         NI    MSGJQTYP,X'0F'
         MVC   MSGJQTYP+1(1),JOBTYPE
         NI    MSGJQTYP+1,X'0F'
         TR    MSGJQTYP(2),HEXTABLE
*
         MVC   JOBLINE(80),MESSAGE
         VPUT  TSEL,JOBLINE
         TBADD DATABLE1
         MVI   GOTANYST,C'1'      GOT ONE
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         B     NEXTJQE
*
HEXTABLE DC    C'0123456789ABCDEF'
*
NEXTJQE  DS    0H
*
         LA    R6,JOBSIZE(6) A(NEXT JDF JOB RECORD)
*
         CLI   0(R6),X'FF'
         BE    JQEDONE
*
         B     CHECKJQE CHECKED ALL RETURNED JQES?
*
JQEDONE  DS    0H
         L     R7,JQESHOLD YES => RETURN
         BR    R7             TO OUR CALLER
*
CHECKRSM DS    0H
*
         XC    HR001(HRLEN),HR001   CLEAR OUT THE REMOTE COUNTERS
*
         TBCREATE RMTABLE1,RMT1,RMT2
*
RSMLOOP  DS    0H
*
         CLC   JOBRNODE,FZEROS ROUTCDE OR LOCAL PRINTER?
         BNE   RSMLOOP1        NO, SEE IF IT IS A REMOTE
*
         CLC   JOBREMOT(2),=H'3'  FSS REMOTE?        **FSS**
         BE    RSMLOOP1           YES, INCLUDE THIS AS A REMOTE
*
         B     NEXTRSM         NO, SKIP
*
RSMLOOP1 DS    0H
*
         CLC   JOBREMOT,FZEROS REMOTE QUEUE?
         BE    NEXTRSM         NO, SKIP
*
         SR    R1,1
         ICM   R1,3,JOBREMOT   PICK UP REMOTE NUMBER
*
         LA    R14,RMTMAX      HIGHEST REMOTE NUMBER
         CR    R1,R14          COMPARE THIS RMT VS HIGHEST
         BH    NEXTRSM         TOO HIGH, JUST SKIP
*
         SLL   R1,1            MULTIPLY BY 2
         LA    R1,HRTABLE(R1)  POINT TO COUNTER
         ICM   R14,3,0(R1)     PICK UP COUNTER
         LA    R14,1(,R14)     BUMP 1
         STCM  R14,3,0(R1)     UPDATE COUNTER
*
NEXTRSM  DS    0H
*
         LA    R6,JOBSIZE(6) A(NEXT JDF JOB RECORD)
*
         CLI   0(R6),X'FF'
         BE    RSMDONE
*
         B     RSMLOOP  CHECKED ALL RETURNED JQES?
*
RSMDONE  DS    0H
*
         LA    R5,HRTABLE+2   POINT TO COUNTERS
*
         LA    R6,RMTMAX       LOOP CONTROL
         SR    R3,R3
*
RSMLOOP2 DS    0H
*
         MVI   RMT1,C' '
         MVC   RMT1+1(33),RMT1
         MVC   RMT2(34),RMT1
*
*
         ICM   R3,3,0(R5)      PICK UP COUNTER
         LTR   R3,R3
         BZ    RSMBUMP2        IF ZERO, SKIP
*
         CVD   R3,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         MVC   RMT1(4),EDIT4
         ED    RMT1(4),DOUBLEWD+6
*
         LR    R3,R5
         LA    R15,HRTABLE
         SR    R3,R15         SET R3 = TABLE OFFSET
         SRL   R3,1           SET R3 = REMOTE NUMBER
*
         L     R15,RMTABLEA
         LA    R1,RMTMAX
*
         CLM   R3,3,0(R15)
         BE    *+16
         LA    R15,26(,R15)
         BCT   R1,*-12
         B     *+10
*
         MVC   RMT1+4(24),2(R15)
         BCTR  R6,0
         LTR   R6,R6
         BZ    RSMDONE2
*
         LA    R5,2(,R5)       BUMP COUNTERS
RMT2LOOP DS    0H
         MVI   RMT2,C' '
         MVC   RMT2+1(33),RMT2
*
         ICM   R3,3,0(R5)      PICK UP COUNTER
         LTR   R3,R3
         BZ    RSMBUMP3        IF ZERO, SKIP
*
         CVD   R3,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         MVC   RMT2(4),EDIT4
         ED    RMT2(4),DOUBLEWD+6
*
         LR    R3,R5
         LA    R15,HRTABLE
         SR    R3,R15         SET R3 = TABLE OFFSET
         SRL   R3,1           SET R3 = REMOTE NUMBER
         L     R15,RMTABLEA
         LA    R1,RMTMAX
*
         CLM   R3,3,0(R15)
         BE    *+16
         LA    R15,26(,R15)
         BCT   R1,*-12
         B     *+10
*
         MVC   RMT2+4(24),2(R15)
*
         TBADD    RMTABLE1
*
RSMBUMP2 DS    0H
         LA    R5,2(,R5)       BUMP COUNTERS
         BCT   R6,RSMLOOP2     DO THEM ALL
*
         B     RSMDONE2
*
RSMBUMP3 DS    0H
         LA    R5,2(,R5)       BUMP COUNTERS
         BCT   R6,RMT2LOOP     DO THEM ALL
*
         MVI   RMT2,C' '
         MVC   RMT2+1(33),RMT2
*
         TBADD    RMTABLE1
*
RSMDONE2 DS    0H
         TBTOP    RMTABLE1
         TBDISPL  RMTABLE1,JDFRMT
*
         TBEND    RMTABLE1
*
         MVC   COMMAND(2),CMDSAVE    SAVE THE PREVIOUS COMMAND
         B     SHOWAGN2        RESHOW OPTION MENU
*
         TITLE 'JDF -  JQE DISPLAY USING TABLE MGMT SERVICES'
SHOWISP  DS    0H
         CLI   GOTANYST,C'0'
         BNE   GOTSOMEJ
*
GOTNONE  DS    0H
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         MVC   MESSAGE+5(13),=CL13'NO JOBS FOUND'
         MVC   JOBLINE(80),MESSAGE
         VPUT  TSEL,JOBLINE
         TBADD DATABLE1
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         B     GOTSOMEJ
*
NEXTLINE DS    0H
         L     R15,DISPLRC   PICK UP LAST PREVIOUS RETURN CODE.
         LTR   R15,15        ALL DONE?
         BZ    SHOWAGN2      YES, RESHOW THE JOB TABLE.
*                            NO, RETRIEVE THE NEXT JOB SELECTED.
         MVI   JOBLINE,C' '
         MVC   JOBLINE+1(77),JOBLINE
         MVC   TSEL(3),SPACES     SET SELECTION CODE TO SPACES
*
*
         TBDISPL DATABLE1,ENDKEY=SHOWAGIN
         ST    R15,DISPLRC     SAVE RETURN CODE
         B     TSTRTRNC        TEST RETURN CODES
*
GOTSOMEJ DS    0H
         TBTOP DATABLE1
NODATOP  DS    0H
         TBDISPL DATABLE1,JDFDATAB,ENDKEY=SHOWAGIN
         ST    R15,DISPLRC     SAVE RETURN CODE
         B     TSTRTRNC        TEST RETURN CODES
DNOTAUTH DS    0H
         SETMSG JDF002
         B     SHOWAGN2        DISPLAY THE SCREEN
*
TSTRTRNC DS    0H
*
         C     R15,FZEROS      COMMAND ENTERED/ 1 LINE SELECTED?
         BE    GOTSTUFF        YUP
         C     R15,F4          COMMAND ENTERED/ LINES SELECTED?
         BE    GOTSTUFF        YUP
*
         B     SHOWAGIN        RESHOW OPTION MENU
         TITLE 'JDF -  COMMAND INPUT PROCESSING'
*
GOTSTUFF DS    0H
*
         MVC   SELSAVE(3),TSEL       SAVE SEL CODE
         OC    SELSAVE(3),SPACES   UPPER-CASE IT
         MVC   TSEL(3),SPACES     SET SELECTION CODE TO SPACES
*
         MVC   MESSAGE(LMESSAGE),JOBLINE
*
         MVC   JOBNUMS(5),JOBLINE+3  SAVE JES JOB NUMBER
         OC    JOBNUMS(5),CZEROS     SET LEADING ZEROS
         PACK  JOBNUMP(8),JOBNUMS
         CVB   R1,JOBNUMP
         STH   R1,JOBNUMH
*
         MVC   JOBNAMS(8),JOBLINE+9  SAVE JOB NAME
         MVC   JOBID(3),JOBLINE      SAVE JOB TYPE, STC, TSU, OR JOB
*
         OC    JCMD(40),SPACES       UPPER-CASE COMMAND INPUT
*
         CLC   SELSAVE(3),SPACES   IF SEL OPTION ENTERED,
         BNE   GOTSELCD            GO PROCESS IT.
*
         CLI   JCMD,C' '             IS IT BLANK
         BE    SHOWAGN2            JUST REPEAT THE DISPLAY
         B     GOTCOMND       ELSE A COMMAND WAS ENTERED
*
GOTSELCD DS    0H
*
* IF NOT A COMMAND, THEN A LINE SELECTION CODE MUST HAVE BEEN
* ENTERED. I HAVE THE CURRENT LINE, SO EDIT THE SELECTION CODE.
*
         CLI   JOBID,C' '     IF NO JOB TYPE,
         BE    NEXTLINE           MUST BE A MISTAKE
*
         B     USERAUTH       GO CHECK AUTHORITY
*
         TITLE 'JDF -  CHECK USER COMMAND AUTHORITY'
USERAUTH DS    0H
*
* SINCE THERE IS NO JOB NAME CONVENTION THAT TIES IN THE USERID,
* WE HAVE TO READ IN THE JCT.
*
         L     R1,JJSPARM           PICK UP JQE BUFFER
         USING JJSDSECT,1
         LA    R6,JJSLINE1
         LA    R6,JOBSIZE(,6) BUMP
         USING JOBDSECT,6     ADDRESSABILITY
*
JCGETJQE DS    0H
         CLC   JOBJOBNO(2),JOBNUMH
         BE    JCTPOINT       YUP
         LA    R6,JOBSIZE(,6) BUMP
         CLI   0(R6),X'FF'     END OF LIST
         BE    NEXTLINE
         B     JCGETJQE        LOOP
*
*
JCTPOINT DS    0H
         CLC   FZEROS(4),JOBTRAK    JCT DISK ADDRESS
         BE    NEXTLINE
*
         L     R1,JCTPTR
         USING JEDDSECT,1
*
         XC    JEDBUFF(18),JEDBUFF
         TM    JOBFLAG3,QUESYSDS    SYSTEM DATASET
         BZ    JCTSVCOK             JOBTRAK POINTS TO JCT
*
*                                   NO JCT, JOBTRAK POINTS TO IOT
         MVC   JEDIOT(4),JOBTRAK
         B     IAMAUTH
*
JCTSVCOK DS    0H
*
         MVC   JEDMTTR2(4),JOBTRAK
         LA    R1,JCTPTR
         LA    R15,14
         SVC   JESSVC
*
         LTR   R15,R15
         BNZ   ABADJCT
*
         L     R1,JCTPTR
         MVC   JOBUSRID(7),JEDUSEID    SET SUBMITTING USERID
         OI    JEDATOUT+3,X'0F'  MAKE PRINTABLE
         UNPK  JOBOUDAT(5),JEDATOUT+1(3)
         MVC   JDFJBKEY(4),JEDJBKEY  SAVE KEY OF OUTPUT
*
* ANYONE CAN LOOK AT DDNAME LIST FOR ANY JOB
*
         CLI   SELSAVE,C'S'   IS IT SHOWJOB
         BE    SHOWJOB        THEN GO DO IT
         CLI   SELSAVE,C'B'   IS IT SHOWJOB
         BE    SHOWJOB        THEN GO DO IT
*
* RULE 2==>  OPERATIONS USERID'S BEGIN WITH THE CHARACTERS BELOW.
*            OPERATIONS USERS CAN ENTER ANY COMMANDS FOR ANY JOBS.
*
*
         CLC   USERID(3),=C'MVS'     OPERATIONS
         BE    IAMAUTH          YUP
         CLC   USERID(2),=C'AO'      OPERATIONS
         BE    IAMAUTH          YUP
         CLC   USERID(2),=C'BP'      PRODSERV USER-ID
         BE    IAMAUTH          YUP
         CLC   USERID(2),=C'BO'      PRODSERV USER-ID
         BE    IAMAUTH          YUP
         CLC   USERID(2),=C'AP'      PRODSERV USER-ID
         BE    IAMAUTH          YUP
*
*
* RULE 3==>  SOFTWARE ENGINEERING CAN ISSUE ANY COMMAND AGAINST ANY JOB
*
*
         CLC   USERID(2),=C'AS'      SOFTWARE ENGINEERING
         BE    IAMAUTH          YUP
*
* CHANGING PRINT PRIORITY IS RESTRICTED
*
         CLC   SELSAVE(3),=C'PUP'   IS IT INCREASE PRINT PRIORITY
         BE    DNOTAUTH              RESTRICTED TO OPERATIONS, SOFTWARE
*
* IF SUBMITTING USERID FIELD IS BLANK, DON'T CHECK USER FOR AUTHORITY
*
         CLI   JEDUSEID,C' '        ID FIELD BLANK?
         BE    IAMAUTH          YUP
*
* IF SUBMITTING USERID FIELD MATCHES MY USERID, I OWN IT
*
         CLC   JEDUSEID(5),USERID   SUBMITTING USER-ID VS MINE
         BE    IAMAUTH              YES, ALLOW ACCESS
*
* IF JOB NAME MATCHES MY USERID, I OWN IT
*
         CLC   JOBNAMS(5),USERID    JOB NAME VERSUS USER-ID
         BE    IAMAUTH              YES, ALLOW ACCESS
*
         B     DNOTAUTH              RESTRICTED TO OPERATIONS, SOFTWARE
*
IAMAUTH  DS    0H
*
         CLI   SELSAVE,C'I'   IS IT SHOW INITIATORS
         BE    SHOWDIF        THEN GO DO IT
*
         CLI   SELSAVE,C'A'   IS IT A "$AJ" COMMAND
         BE    ACTAJOB        THEN GO DO IT
*
         CLC   SELSAVE(3),=CL3'RDR'   IS IT ROUTE TO CMS SPOOL
         BE    JOBRDR         THEN GO DO IT
*
         CLI   SELSAVE,C'C'   IS IT A CANCEL
         BE    JOBCAN         THEN GO DO IT
*
         CLI   SELSAVE,C'H'   IS IT A "$HJ"
         BE    HOLDAJOB       THEN GO DO IT
*
         CLC   SELSAVE(3),=C'PUP'    BUMP PRINT PRIORITY
         BE    PRTPRIO               GO DO IT
*
         CLC   SELSAVE(2),=C'OJ'     CHANGE PRINT CLASS
         BE    JOBOJ                 GO DO IT
*
         CLI   SELSAVE,C'P'   IS IT A PURGE
         BE    JOBPUR         THEN GO DO IT
*
         CLC   SELSAVE(3),=CL3'RLS'   IS IT RELEASE FROM HELD STATUS
         BE    JOBRLS         THEN GO DO IT
*
         CLI   SELSAVE,C'R'   IS IT A REQUEUE
         BE    JOBREQ         THEN GO DO IT
*
         CLI   SELSAVE,C'T'   IS IT A "$TJ" COMMAND
         BE    JOBTJ          THEN GO DO IT
*
         CLI   SELSAVE,C'D'   IS IT A "$DUMP" COMMAND
         BE    JOBDUMP        THEN GO DO IT
*
         SETMSG JDF007
         B     SHOWAGN2        DISPLAY THE SCREEN
*
         TITLE 'JDF -  INVOKE XDF (EXECUTION DISPLAY)'
*
SHOWXDF  DS    0H
*
         LINK EP=XDF
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  INVOKE XDF (EXECUTION DISPLAY)'
*
SHOWDIF  DS    0H
*
         LINK EP=DIF
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  INVOKE      CONSOLE DISPLAY)'
*
SHOWCONS DS    0H
*
         LINK EP=CDF
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  PERFORM $OJ PROCESSING'
*
JOBOJ    DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVC   CMDLINE(3),=C'$TO'    ALTER
         MVC   CMDLINE+3(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+4(5),JOBNUMS    JES NUMBER
         MVC   CMDLINE+09(7),=C',ALL,Q='   ALL OUTPUTS
         MVC   CMDLINE+16(1),SELSAVE+2 NEW CLASS
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
*
         TITLE 'JDF -  PERFORM $DUMP PROCESSING'
*
JOBDUMP  DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVC   CMDLINE(8),=C'$DUMP,J=' COMMAND
         MVC   CMDLINE+8(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+9(5),JOBNUMS    JES NUMBER
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
*
         TITLE 'JDF -  PERFORM $TJ PROCESSING'
JOBTJ    DS    0H
*
         CLI   SELSAVE+1,C'C' IS IT A "$TJ000,C=X" COMMAND
         BE    JOBTJC         THEN GO DO IT
*
         B     NEXTLINE       GO REPEAT THE SCREEN
*
JOBTJC   DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'T'          ALTER
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
         MVC   CMDLINE+8(3),COMMAC     SYNTAX
         MVC   CMDLINE+11(1),SELSAVE+2 NEW CLASS
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  INCREASE PRIORITY'
*
PRTPRIO  DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'T'          ALTER
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
         MVC   CMDLINE+8(6),PUPDATA    P=99
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  HOLD A JOB'
*
HOLDAJOB DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'H'          HOLD
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
*
*
HOLDAJBC DS    0H
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  RELEASE A HELD JOB'
*
ACTAJOB  DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'A'          HOLD
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
*
*
ACTAJOBC DS    0H
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
*
         TITLE 'JDF -  JOB CANCEL    PROCESSING'
JOBCAN   DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'C'        CANCEL
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
         B     NEXTLINE       GO REPEAT THE SCREEN
ABEND5   ABEND 5,DUMP,STEP
ABEND6   ABEND 6,DUMP,STEP
         TITLE 'JDF -  JOB PURGE     PROCESSING'
JOBPUR   DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVI   CMDLINE+1,C'P'          PURGE
         MVC   CMDLINE+2(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+3(5),JOBNUMS    JES NUMBER
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  RELEASE HELD OUTPUT FOR A JOB'
JOBRLS   DS    0H
*
         B     NEXTLINE       GO REPEAT THE SCREEN
        TITLE 'JDF -  ROUTE A JOBS OUTPUT TO A CMS USERS READER QUEUE'
JOBRDR   DS    0H
*
         MVI   CMDLINE,C' '
         MVC   CMDLINE+1(29),CMDLINE
         MVI   CMDLINE,C'$'
         MVC   CMDLINE+1(7),=C'RALL,J=' ELEASE
         MVC   CMDLINE+8(1),JOBID      TYPE, "JOB", "STC", OR "TSU"
         MVC   CMDLINE+9(5),JOBNUMS    JES NUMBER
         MVC   CMDLINE+14(6),=C',D=CIS'
*
         BAL   R7,ISSUECMD         ISSUE JES COMMAND VIA SVC 34
*
         B     NEXTLINE       GO REPEAT THE SCREEN
         TITLE 'JDF -  JOB REQUEUE   SUBROUTINE'
JOBREQ   DS    0H
*
         MVC   RDEST(5),SPACES       SET FLAG
*
         CLI   SELSAVE+1,C'Q'         IS THIS "RQ"
         BE    RQ1BYTE                YUP, ONE-BYTE FORMAT
         CLI   SELSAVE+1,C'U'         IS THIS "RU" (LOCAL PRINTER)
         BE    RU1BYTE                YUP, ONE-BYTE FORMAT
*
RQ2BYTE  DS    0H
*   RE-QUEUE COMMAND WAS CODED AS "R00", WHERE "00" = RMT#
         MVC   RDEST(2),SELSAVE+1     SAVE THE DEST
         MVI   SELSAVE+2,C'A'         SET NEW CLASS
         B     CLSREQ                 GO DO IT
*
RQ1BYTE  DS    0H
*   RE-QUEUE COMMAND WAS CODED AS "RQ0", WHERE "0" = RMT# OR CLASS
*
         CLI   SELSAVE+2,C'0'        AM I CHANGING THE CLASS?
         BL    CLSREQ               NOT NUMERIC, JUST CHANGE THE CLASS
*
*  I AM RE-QUEUEING TO A NUMERIC VALUE, SO IT MUST BE A REMOTE DEST.
*
         MVC   RDEST(1),SELSAVE+2     SAVE THE DEST
         MVI   SELSAVE+2,C'A'         SET NEW CLASS
*
         B     CLSREQ                 GO DO IT
*
RU1BYTE  DS    0H
*   RE-QUEUE COMMAND WAS CODED AS "RU0", WHERE "0" = LOCAL PRINTER
*
         CLI   SELSAVE+2,C'0'        AM I CHANGING THE CLASS?
         BL    CLSREQ               NOT NUMERIC, JUST CHANGE THE CLASS
*
*  I AM RE-QUEUEING TO A NUMERIC VALUE, SO IT MUST BE A REMOTE DEST.
*
         MVC   RUDEST(1),SELSAVE+2     SAVE THE DEST
         MVI   SELSAVE+2,C'A'         SET NEW CLASS
*
CLSREQ   DS    0H
*
         CLI   SELSAVE+2,X'C0'         ALPHANUMERIC CLASS
         BH    *+8                     YUP
         MVI   SELSAVE+2,C'A'          NOPE, SO SET IT TO DEFAULT
*
         B     SETSSOB        YUP
*
SETSSOB  DS    0H
***                                                                 ***
*   SET UP SSOB TO ISSUE IEFSSREQ TO REQUEUE A JOB                    *
***                                                                 ***
*
         L     R14,SSOBPTR
         USING SSOB,14
         LA    R15,SSOBHSIZ(,R14)
         USING SSOBGN,15
*
* SET UP SUB-SYSTEM REQUEST HEADER
*
         XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN
         MVC   SSOBID(4),=C'SSOB'
         LA    R1,SSOBHSIZ
         STH   R1,SSOBLEN
         MVC   SSOBFUNC(2),H1        SET FUNCTION TO SYSOUT
         ST    R15,SSOBINDV          SET PROCESS-SYSOUT ADDRESS
*
* SET UP PROCESS-SYSOUT CONTROL BLOCK
*
         XC    SSSOBGN(SSSOSIZE),SSSOBGN
*
         LA    R1,SSSOSIZE
         STH   R1,SSSOLEN
*
         MVC   SSSOPGMN,SPACES     INITIALIZE WRITER NAME TO BLANKS
         MVC   SSSOLEN(2),=AL2(SSSOSIZE)
         OI    SSSOUFLG,SSSOSETC
         OI    SSSOUFLG,SSSORLSE
         OI    SSSOFLG1,SSSOHLD
         OI    SSSOFLG1,SSSOSJBN
         OI    SSSOFLG1,SSSOSJBI
         OI    SSSOFLG1,SSSOSCLS  INCLUDE CLASS
         MVC   SSSOCLSL,SPACES     INITIALIZE CLASS LIST TO BLANKS
         MVI   SSSOCLSL,C'X'          SET CLASS TO "X" ONLY
         OI    SSSOFLG2,SSSOCTRL
         MVC   SSSOJOBN(8),JOBNAMS JOB NAME
         MVC   SSSOJOBI+3(5),JOBNUMS JOB ID
         MVC   SSSOJOBI(3),JOBID JOB TYPE, "JOB", "STC", OR "TSU"
         MVC   SSSOCLAS(1),SELSAVE+2 SET NEW CLASS
*
         CLI   SSSOCLAS,C'W'         IS THIS BPSCAN
         BNE   CKRDEST
         MVC   SSSODEST(8),=CL8'N1   '
         OI    SSSOUFLG,SSSOROUT  USE DESTINATION
         B     DOSSREQ1
*
CKRDEST  DS    0H
***                                                                 ***
**       NOW CHECK TO SEE WHETHER I AM CHANGING THE CLASS OR DEST
***                                                                 ***
         CLI   SELSAVE+1,C'U'         IS THIS "RU" (LOCAL PRINTER)
         BE    SETUDEST               YES
         CLI   RDEST,C' '     IS THERE A REMOTE DEST
         BE    DOSSREQ1       NOPE
         MVC   SSSODEST(8),RQRMT
         OI    SSSOUFLG,SSSOROUT  USE DESTINATION
         B     DOSSREQ1       GO DO IT
*
SETUDEST DS    0H
*
         MVC   SSSODEST(8),RURMT
         OI    SSSOUFLG,SSSOROUT  USE DESTINATION
         B     DOSSREQ1       GO DO IT
*
DOSSREQ1 DS    0H
***                                                                 ***
**     IEFSSREQ                                                      **
***                                                                 ***
         LA    R1,SSOBPTR
         LA    R15,4               SSREQ FLAG
         SVC   JESSVC
*
         ST    R15,SSREQRC         SAVE RETURN CODE
*
         SR    R15,15              CLEAR REGISTER
         C     R15,SSREQRC         DID I HAV RC=0 FROM SSREQ?
         BNE   BADREQ              NOPE
         C     R15,SSOBRETN        DID I HAV RC=0 FROM SSREQ?
         BNE   BADREQ              NOPE
         B     NEXTLINE       GO REPEAT THE SCREEN
*
BADREQ   DS    0H
*
         MVC   SSOBWTO2(SSOBWTOL),SSOBWTO1
*
         L     R15,SSREQRC
         CVD   R15,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         UNPK  SSOBWTO2+14(3),DOUBLEWD+6(2)
*
         L     R15,SSOBRETN
         CVD   R15,DOUBLEWD
         OI    DOUBLEWD+7,X'0F'
         UNPK  SSOBWTO2+35(3),DOUBLEWD+6(2)
*
         WTO   ,MF=(E,SSOBWTO2)
*
         SETMSG JDF001
         B     NEXTLINE       GO REPEAT THE SCREEN
ENDREQ   DS    0H
         B     NEXTLINE       GO REPEAT THE SCREEN
*
SSOBWTO1 WTO   'SSREQRC=          , SSOBRETN=         ',ROUTCDE=11,MF=L
SSOBWTOL EQU   *-SSOBWTO1
*
GOTCOMND DS    0H
*
         MVC   CMDSAVE(2),COMMAND    SAVE THE PREVIOUS COMMAND
*
         CLC   JCMD(4),=C'DUMP'      IS IT A DUMP REQUEST
         BE    S0C1                  YUP, JUST GET A S0C1
*
         CLI   JCMD,C'R'             IS IT A "R" FOR REPEAT
         BE    RPTCOMND              YUP, JUST REPEAT
*
         MVC   SELSAVE(40),JCMD      MOVE IT IN
         MVC   DOCLASS(1),JCMD+2     OUTPUT CLASS
RESETCMD DS    0H
*
         CLC   SELSAVE(2),=C'DC'
         BE    SHOWCONS       GO SELECT THE SCREEN
*
         CLC   SELSAVE(2),=C'DI'
         BE    SHOWDIF        GO SELECT THE SCREEN
*
         CLC   SELSAVE(2),=C'DX'
         BE    SHOWXDF        GO SELECT THE SCREEN
*
RESETCM1 DS    0H
         CLC   SELSAVE(3),=C'JOB'
         BNE   RESETCM2       NOPE
*
         MVC   COMMAND(2),DAREQ
         MVC   DATYPE(3),=C'JOB'
         B     SHOWAGN2       GO SELECT THE SCREEN
*
RESETCM2 DS    0H
*
         CLC   SELSAVE(3),=C'STC'
         BNE   RESETCM3       NOPE
*
         MVC   COMMAND(2),DAREQ
         MVC   DATYPE(3),=C'STC'
         B     SHOWAGN2       GO SELECT THE SCREEN
*
RESETCM3 DS    0H
*
         CLC   SELSAVE(3),=C'TSU'
         BNE   RESETCM4       NOPE
*
         MVC   COMMAND(2),DAREQ
         MVC   DATYPE(3),=C'TSU'
         B     SHOWAGN2       GO SELECT THE SCREEN
*
*
RESETCM4 DS    0H
*
         MVC   COMMAND(2),DAREQ
         CLC   SELSAVE(2),DAREQ
         BE    SHOWAGN2       GO SELECT THE SCREEN
*
         MVC   COMMAND(2),DEREQ
         CLC   SELSAVE(2),DEREQ
         BE    SHOWAGN2       GO SELECT THE SCREEN
*
         MVC   COMMAND(2),DHREQ
         CLC   SELSAVE(2),DHREQ
         BE    SHOWAGN2       GO SELECT THE SCREEN
*
         MVC   COMMAND(2),DOREQ
         CLC   SELSAVE(2),DOREQ
         BE    SHOWAGN2       GO SELECT THE SCREEN
*
         CLC   SELSAVE(2),DQREQ
         BE    SHOWDQRQ       GO SELECT THE SCREEN
*
         CLC   SELSAVE(2),DRREQ
         BE    SHOWDRRQ       GO SELECT THE SCREEN
*
         MVC   COMMAND(2),DTREQ
         CLC   SELSAVE(2),DTREQ
         BE    SHOWAGN2       GO SELECT THE SCREEN
*
         MVC   COMMAND(2),DLREQ
         CLC   SELSAVE(2),DLREQ
         BE    SHOWAGN2       RESHOW THE SCREEN
*
         MVC   COMMAND(2),DWREQ
         CLC   SELSAVE(2),DWREQ
         BE    SHOWAGN2       RESHOW THE SCREEN
*
         MVC   COMMAND(2),=C'QS'
         CLC   SELSAVE(2),COMMAND
         BE    SHOWAGN2       RESHOW THE SCREEN
*
         MVC   COMMAND(2),STREQ
         B     SHOWAGN2       GO SELECT THE SCREEN
*
SHOWDORQ DS    0H
*
         MVC   COMMAND(2),DOREQ
         MVI   DOCLASS,C' '
*
         CLI   SELSAVE+2,C' ' SPECIFIC REMOTE SELECTED?
         BE    SHOWAGN2       NO, JUST GO SELECT THE SCREEN
*
         MVC   DOCLASS(1),SELSAVE+2      SET CLASS
         B     SHOWAGN2       GO SELECT THE SCREEN
*
SHOWDQRQ DS    0H
*
         MVC   COMMAND(2),DQREQ
         MVI   DQCLASS,C' '
*
         CLI   SELSAVE+2,C' ' SPECIFIC REMOTE SELECTED?
         BE    SHOWAGN2       NO, JUST GO SELECT THE SCREEN
*
         MVC   DQCLASS(1),SELSAVE+2      SET CLASS
         B     SHOWAGN2       GO SELECT THE SCREEN
*
SHOWDRRQ DS    0H
*
         MVC   COMMAND(2),DRREQ
         XC    DRNUM(2),DRNUM
*
         CLI   SELSAVE+2,C' ' SPECIFIC REMOTE SELECTED?
         BE    SHOWAGN2       NO, JUST GO SELECT THE SCREEN
*
         CLI   SELSAVE+2,C'0' NON-NUMERIC REMOTE SELECTED?
         BL    SHOWAGN2       YES, JUST SHOW ALL REMOTES
         CLI   SELSAVE+2,C'9' NON-NUMERIC REMOTE SELECTED?
         BH    SHOWAGN2       YES, JUST SHOW ALL REMOTES
*
         PACK  DOUBLEWD,SELSAVE+2(1)   SET REMOTE NUMBER
         CLI   SELSAVE+3,C'0' 1-BYTE REMOTE NUMBER?
         BL    DRR1POS
         CLI   SELSAVE+3,C'9' 1-BYTE REMOTE NUMBER?
         BH    DRR1POS
         PACK  DOUBLEWD,SELSAVE+2(2)   SET REMOTE NUMBER
*
DRR1POS  DS    0H
*
         CVB   R1,DOUBLEWD
         STCM  R1,3,DRNUM
*
         B     SHOWAGN2       GO SELECT THE SCREEN
*
S0C1     DC    H'0'                  SOC1
*
RPTCOMND DS    0H
         MVI   JOBLINE,C' '   CLEAR TAB ENTRY AREA
         MVC   JOBLINE+1(79),JOBLINE
*
         TBEND DATABLE1
         MVI   ATABFL,C'0'        NO ACTIVE TABLE
*
         XC    ISPARMS(40),ISPARMS
         B     SHOWAGN2       GO REPEAT THE SCREEN
         TITLE 'JDF -  BUILD DDNAME TABLE'
SHOWJOB  DS    0H
*
*              INITIALIZE CONSTANTS FOR A NEW JOB
*
*
         MVC   CONDZERO(3),P3ZERO INITIALIZE COUNTERS
         MVC   CONDNUM(3),P3ZERO  INITIALIZE COUNTERS
         MVC   CATNUM(12),CONDNUM                     FOR BPSCAN
*
         TBCREATE DDTABLE1,DSEL,DDNLINE
*        TBVCLEAR DDTABLE1
*
         MVI   DTABFL,C'1'        AN ACTIVE TABLE
*
         TITLE 'JDF -  DISPLAY DDNAME TABLE USING TABLE MGMT SERVICES'
*
*  JCT HAS ALREADY BEEN READ IN, AND IOT AND SPIN IOT POINTERS
*
*
         L     R1,JCTPTR
         L     R15,IOTPTR
         MVC   000(256,R15),000(R1)
         MVC   256(256,R15),256(R1)
         MVC   512(256,R15),512(R1)
*
         LA    R1,IOTPTR
         LA    R15,15
         SVC   JESSVC
*
         L     R1,IOTPTR
         USING JEDDSECT,1
*
         LA    R8,JEDBUFF+24   POINT TO DDNAMES
         USING DDLINE,8
*
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         MVC   MESSAGE(17),=CL17'COND CODE SUMMARY'
         MVC   DDNLINE(80),MESSAGE
         VPUT  DSEL,DDNLINE
         TBADD DDTABLE1
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         MVI   SLOGFLAG,0     FIRST TIME THROUGH
*
DODDLOOP DS    0H
*
         CLI   0(R8),X'FF'        END OF ENTRIES
         BE    DODDS1ST           YES, SHOW TABLE
*
         CLI   SLOGFLAG,0     FIRST TIME THROUGH
         BNE   NOTSLOGD       NO
         CLC   JOBNAMS(7),=C'SYSLOG '
         BNE   NOTSLOGD
         CLI   DDLDSID,C'9'       FIRST SPIN DSID
         BNE   NOTSLOGD
*
         MVI   PROCNAME-1,X'03'          HIGHLIGHT
         MVC   PROCNAME(8),ACTIVE        THE PROCSTEPNAME
         MVC   STEPNAME(8),=CL8'SYSLOG'  THE STEPNAME
         MVI   SLOGFLAG,1 NOT FIRST TIME THROUGH
*
NOTSLOGD DS    0H
*
         MVC   MESSAGE(DDLINSHO),0(R8)
         MVC   DDNLINE(80),MESSAGE
         VPUT  DSEL,DDNLINE
         TBADD DDTABLE1
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(79),MESSAGE
         LA    R8,DDLINESZ(,R8)    BUMP TO NEXT
         B     DODDLOOP
*
DODDS1ST DS    0H
         LM    R4,R8,SAVE5        RESTORE THE WORK REGISTERS
         MVI   COPYFLAG,0     FIRST TIME THROUGH
*
SHODDTAB DS    0H
         TBTOP DDTABLE1
*
         MVI   DSIDEOF,0      NOT EOF
*
         CLC   LVL(6),=C'BPSCAN'       USERID IS BPSCAN??
         BNE   SHODDTBS      DISPLAY THE DD TABLE
*
         CLC   COMMAND(2),DHREQ        HELD JOB DISPLAY??
         BNE   SHODDTBS      DISPLAY THE DD TABLE
*
         CLI   SELSAVE,C'B'            BPSCAN SELECT??
         BNE   SHODDTBS      DISPLAY THE DD TABLE
*
         B     GOTDSOPR       GO DO THE BPSCAN DISPLAY
*
SHODDTBS DS    0H
         TBDISPL DDTABLE1,JDFDDTAB,ENDKEY=DDALLDON
         B     DDTSTRTN       YUP, GO PROCESS IT
DDMSG2   DS    0H
         SETMSG JDF002
         B     SHODDTBS
DDTSTRTN DS    0H  TEST RETURN CODE FROM DISPLAY
         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??
         BE    GOTDDSEL       YUP, GO PROCESS IT
DDALLDON DS    0H
*
*    DONE PROCESSING THE DDNAME MENU, SO
*    RE-SHOW THE PRIMARY OPTION SELECTED
*
         L     R15,DISPLRC   PICK UP LAST PREVIOUS RETURN CODE.
         LTR   R15,15        ALL DONE?
         BZ    NODATOP       YES, JUST RESHOW THE DA TABLE
         B     NEXTLINE      NO, RETRIEVE THE NEXT JOB SELECTED.
*
         TITLE 'JDF -  PROCESS DDNAME TABLE SELECTION OPTIONS'
GOTDDSEL DS    0H
*
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
*
         MVC   SELSAVE(3),DSEL       SAVE SELECTION OPTION
         MVC   DSEL(3),SPACES     SET SELECTION CODE TO SPACES
         OC    SELSAVE(3),SPACES     SAVE SELECTION OPTION
         CLC   SELSAVE(3),SPACES     NOTHING ENTERED
         BE    SHODDTAB       REPEAT THE DD TABLE
         MVC   DDSDSID(3),DDNLINE    SAVE JES DSID NUMBER
         MVC   BRODSID(3),DDSDSID        SAVE IT FOR BROWSE
*
         CLC   DDSDSID(3),=C'CTL'    CONTROL BLOCK DISPLAY?
         BE    GOTDSCTL
*
         CLC   DDSDSID(3),=C'CON'    BPSCAN DISPLAY?
         BE    GOTDSOPR
*
ADDNEDD  DS    0H
*
         L     R1,IOTPTR
         USING JEDDSECT,1
         LA    R8,JEDBUFF+24   POINT TO DDNAMES
         USING DDLINE,8
*
DSIDLOOP DS    0H
         CLI   0(R8),X'FF'               END OF TABLE?
         BE    DDALLDON                  YES
         CLC   DDLDSID(3),DDSDSID        DSID MATCH?
         BE    GOTDSID                   YES
*
         LA    R8,DDLINESZ(,R8)          DSID MATCH?
         B     DSIDLOOP                  YES
*
GOTDSID  DS    0H
*
         MVC   JOBDDNAM(8),DDN           MOVE DDNAME TO TITLE
*
         LA    R5,DDMTTR                POINT TO THE BLOCK
         MVC   READAREA(4),IXTPTR        MOVE IN THE READ BUFFER
         MVC   READMTTR(4),DDMTTR        MOVE IN THE READ MTTR
         MVC   SMBLRECL+2(2),DDLRECL     MOVE IN PDDB LRECL
*
         CLC   USERID(5),JOBNAMS     JOBNAME BEGINS WITH USERID?
         BE    DDAUTHOK         YUP
*
*    INVOKE "JDFCHECK" MODULE TO ALLOW/DISALLOW ACCESS TO DSID
*
         L     R15,JCTPTR
         USING JEDDSECT,15
         CALL  JDFCHECK,(JEDUSEID,JOBNAMS,USERID,DDN,DDLDSID,PREFIX,DDRX
               EMOTE,DDCLASS),VL,MF=(E,ISPARMS)
         DROP  15
*
         LTR   R15,R15          IF ZERO RETURN CODE
         BZ    DDAUTHOK         ALLOW ACCESS
         B     DDMSG2           OTHERWISE, GIVE AUTH FAILED MSG
DDAUTHOK DS    0H
*
*    IF AUTH OK, DEFINE THE DATASET TABLE
*
         XC    GOTSOME(2),GOTSOME NO RECORDS WRITTEN
*
         CLI   SELSAVE,C'B'              WAS BROWSE REQUESTED?
         BE    OUTLBROW                  YUP, OPEN OUTLIST FILE
*
         CLI   SELSAVE,C'R'              WAS REPRINT REQUESTED?
         BE    REPRNTDS                  YUP, GO DO IT
*
DDSTABLE DS    0H
*
         L     R2,SMBLRECL               LRECL SPECIFIED.
         LTR   R2,R2
         BNZ   *+12                   YES
         LA    R2,133
         ST    R2,SMBLRECL               MAKE IT 133
*
         PACK  DOUBLEWD(8),DDLINES       GET SPACE FOR ALL THE RECORDS
         CVB   R2,DOUBLEWD
         LTR   R2,R2
         BZ    DDSTABL2
*
*        LA    R2,1(,R2)                 SOMETHING WRONG WITH MY LOOP
*                                        CONTROL, ALWAYS DOING AN EXTRA
*                                        GETMAIN, FIGURE OUT WHY LATER.
*
         ST    R2,SMBMAX
         MH    R2,SMBLRECL+2             A THOUSAND RECORDS
         ST    R2,SMBLENG
*
         B     DDSTABL3
*
DDSTABL2 DS    0H
*
         LH    R2,THOUSAND               A THOUSAND RECORDS
         ST    R2,SMBMAX
         L     R2,SMBLRECL               GET SPACE FOR
         MH    R2,THOUSAND               A THOUSAND RECORDS
         ST    R2,SMBLENG
*
DDSTABL3 DS    0H
*
*        GETMAIN RC,LV=(2)                         10/08/86
         GETMAIN RC,LV=(2),LOC=(ANY)
         LTR   R15,R15
         BZ    DDSGMALL
*
         SETMSG SMB003
*
         L     R2,SMBLRECL               GETTING SPACE FOR
         MH    R2,THOUSAND               A THOUSAND RECORDS?
         C     R2,SMBLENG
         BE    DDSTEND                   YES, DON'T HAVE ENOUGH
*
         B     DDSTABL2                  TRY FOR 1000
*
DDSGMALL DS    0H
*
         ST    R1,SMBSTART
         LR    R2,R1
*
         XC    SMBNUMB(4),SMBNUMB NO RECORDS WRITTEN
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
         MVC   READAREA(4),IXTPTR
*
SMBLOOP  DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   SMBEOF             NOPE, EOF
*
         L     R1,SMBLRECL
         BCTR  R1,0
         B     *+10
         MVC   0(1,R2),DSNLINE
         EX    R1,*-6
         LA    R2,1(R1,R2)      BUMP FOR NEXT RECORD
*
         L     R1,SMBNUMB       PICK UP RECORD COUNT
         LA    R1,1(,1)         ADD 1
         ST    R1,SMBNUMB       SAVE RECORD COUNT
*
         C     R1,SMBMAX        COMPARE TO MAX
         BL    SMBLOOP
*
** RATS! RAN OUT OF SPACE, HAVE TO DO ANOTHER GETMAIN.
*
*
         L     R2,SMBLRECL               GET SPACE FOR
         MH    R2,THOUSAND               A THOUSAND RECORDS
         A     R2,SMBLENG
*
*        GETMAIN RC,LV=(2)                      10/08/86
         GETMAIN RC,LV=(2),LOC=(ANY)
         LTR   R15,R15
         BNZ   DDSTNUFF
*
         LR    R3,R1                    SAVE GETMAIN ADDRESS
         LR    R14,R1                   ADDRESS
         LR    R15,R2                   LENGTH
         L     R0,SMBSTART              ADDRESS
         L     R1,SMBLENG               LENGTH
         LR    R4,R1                    SAVE IT
         MVCL  R14,R0                   MOVE THE OLD STUFF
*
         L     R0,SMBLENG
         L     R1,SMBSTART
         FREEMAIN RU,LV=(0),A=(1)
*
         ST    R3,SMBSTART
         ST    R2,SMBLENG
*
         LH    R2,THOUSAND               A THOUSAND RECORDS
         A     R2,SMBMAX                 PICK UP OLD MAX
         ST    R2,SMBMAX                 SET NEW MAX
*
         LR    R2,R3
         AR    R2,R4
*
         B     SMBLOOP
*
*
SMBEOF   DS    0H
*
         L     R15,SMBNUMB
         LTR   R15,R15
         BNZ   DDSSMB
*
         SETMSG JDF001C
*
         B     DDSSMBFR
*
DDSTNUFF DS    0H
*
         SETMSG SMB003
*
DDSSMB   DS    0H
*
         VPUT  SMBSTART,SMBNUMB,SMBLRECL,SMBTITLE,POOL=SHARED
*
         SELECT PGM(SMBROWSE)
*
DDSSMBFR DS    0H
*
         L     R0,SMBLENG
         L     R1,SMBSTART
         FREEMAIN RU,LV=(0),A=(1)
*
         B     SHODDTBS
*
DDSTEND  DS    0H
*
         SETMSG SMB003
         B     SHODDTBS
*
THOUSAND DC    H'1000'
*
OUTLBROW DS    0H
         TM    OUTLIST+48,X'10'   OPEN OK?
         BO    OUTLREAD           YUP
         LA    R1,USERIDL
         ST    R1,ISPARMS
         LA    R1,ISPARMS
         CALL  ALLOOUTL
         L     R1,DCB3ADDR
         MVC   OUTLIST(DCB3LEN),0(R1)        OUTLIST DCB
*
OUTLREAD DS    0H
*
         XC    GOTSOME(2),GOTSOME NO RECORDS WRITTEN
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
         MVC   READAREA(4),IXTPTR
*
OUTLLOOP DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   OUTLEOF            NOPE, EOF
*
         LH    R1,GOTSOME       PICK UP RECORD COUNT
         LA    R1,1(,1)         ADD 1
         STH   R1,GOTSOME       SAVE RECORD COUNT
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         TM    OUTLIST+48,X'10'   OPEN OK?
         BO    OUTLLOOP           YUP
         MVI   SELSAVE,C'S'       NO, SO SET IT TO TABLE SELECT
         B     DDSTABLE           GO DO IT
*
OUTLEOF  DS    0H
*
BROWSEDS DS    0H
*
* WRITE A LINE OF ASTERISKS TO AVOID EMPTY FILE
*
         SR    R1,1
         CH    R1,GOTSOME         NO RECORDS WRITTEN
         BNE   OUTLSCLS           NOPE, JUST SHOW THE TABLE
*
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         MVC   DSNLINE(17),=CL17'*** FILE IS EMPTY'
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
OUTLSCLS DS    0H
*
** LET "QSAMPUT" DO THE CLOSE
*
         LA    R15,OUTLIST
         ST    R15,ISPARMS
         MVC   ISPARMS+4(4),=X'FFFFFFFF'
         LA    R1,ISPARMS
         L     R15,QPUTEPA
         BALR  R14,R15
*
         CONTROL DISPLAY,SAVE
*
         CALL  ISPLINK,                                                X
               (BROWSE,                                                X
               JDFLST),                                                X
               VL,MF=(E,ISPARMS)
*
         CONTROL DISPLAY,RESTORE
*
         CLC   JOBNAMS(6),=C'SYSLOG'       SYSLOG?
         BE    SHOWAGN2                    YES
*
         CLC   SELSAVE(3),=C'BPS'    DOING SPECIAL BPSCAN DISPLAY?
         BNE   SHODDTAB       REPEAT THE DD TABLE
*
         CLC   LVL(6),=C'BPSCAN'       USERID IS BPSCAN??
         BNE   SHODDTAB       REPEAT THE DD TABLE
*
         CLC   COMMAND(2),DHREQ        HELD JOB DISPLAY??
         BNE   SHODDTAB       REPEAT THE DD TABLE
*
         MVC   SELSAVE(3),=C'RQW'    SET REQUEUE TO CLASS "W"
         B     JOBREQ                CHANGE OUTPUT CLASS OF JOB
*
GOTDSCTL DS    0H
         B     SHODDTAB       REPEAT THE DD TABLE
         TITLE 'JDF -  PERFORM REROUTE FOR A SELECTED DSID'
*
REPRNTDS DS    0H
         CALL  ALLOREPR
         LTR   R15,R15            CONTINUE?
         BNZ   SHODDTBS       REPEAT THE DD TABLE
         L     R1,DCB2ADDR
         MVC   REPRINT(DCB2LEN),0(R1)        REPRINT DCB
*        OPEN  (REPRINT,(OUTPUT)),MF=(E,OPEN1)
REPRREAD DS    0H
*
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
         MVC   READAREA(4),IXTPTR
*
REPRLOOP DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   REPREOF            NOPE, EOF
*
         LA    R1,DSNLINE         POINT TO RECORD JUST READ
*
REPRTSCC DS    0H
*
         TM    REPRINT+36,X'02'   MACHINE CARRIAGE CONTROL?
         BO    REPRCARM           YES, GO CHECK IT.
         TM    REPRINT+36,X'04'   ASA CARRIAGE CONTROL?
         BZ    REPRPUT1           NO, JUST PRINT
*
         MVI   DSNLINE-1,C' '     SET DEFAULT CARRIAGE CONTROL
*
         CLI   0(R1),C'1'         SKIP TO CHANNEL 1?
         BE    REPRPUT1           YES
         CLI   0(R1),C'+'         SUPPRESS SPACE?
         BE    REPRPUT1           YES
         CLI   0(R1),C' '         SPACE 1 LINE?
         BE    REPRPUT1           YES
         CLI   0(R1),C'0'         SPACE 2 LINES?
         BE    REPRPUT1           YES
         CLI   0(R1),C'-'         SPACE 3 LINES?
         BE    REPRPUT1           YES
*
         LA    R1,DSNLINE-1
         B     REPRPUT1           YES
*
REPRCARM DS    0H
*
         MVI   DSNLINE-1,X'09'    SET DEFAULT CARRIAGE CONTROL
*
         CLI   0(R1),X'89'        SKIP TO CHANNEL 1?
         BE    REPRPUT1           YES
         CLI   0(R1),X'8B'        SKIP TO CHANNEL 1?
         BE    REPRPUT1           YES
         CLI   0(R1),X'0B'        SKIP A LINE?
         BE    REPRPUT1           YES
         CLI   0(R1),X'11'        SKIP 2 LINES?
         BE    REPRPUT1           YES
         CLI   0(R1),X'13'        SKIP 2 LINES?
         BE    REPRPUT1           YES
         CLI   0(R1),X'19'        SKIP 3 LINES?
         BE    REPRPUT1           YES
         CLI   0(R1),X'1B'        SKIP 3 LINES?
         BE    REPRPUT1           YES
*
         LA    R1,DSNLINE-1
         B     REPRPUT1           YES
*
REPRPUT1 DS    0H
         L     R15,QPUTEPA
         LA    R0,REPRINT
         ST    R0,ISPARMS
         ST    R1,ISPARMS+4
         LA    R1,ISPARMS
         BALR  R14,R15
*
         TM    REPRINT+48,X'10'   OPEN OK?
         BO    REPRLOOP
         SETMSG JDF008
         B     SHODDTBS           GO DO IT
*
REPREOF  DS    0H
*
         SETMSG JDF009
         B     REPRCLOS
*
REPRCLOS DS    0H
*
** LET "QSAMPUT" DO THE CLOSE
*
         LA    R15,REPRINT
         ST    R15,ISPARMS
         MVC   ISPARMS+4(4),=X'FFFFFFFF'
         LA    R1,ISPARMS
         L     R15,QPUTEPA
         BALR  R14,R15
*
         B     SHODDTBS       REPEAT THE DD TABLE
*
         TITLE 'JDF -  PERFORM SPECIAL FORMAT BPSCAN DISPLAY'
GOTDSOPR DS    0H
         LA    R1,USERIDL
         ST    R1,ISPARMS
         LA    R1,ISPARMS
         CALL  ALLOOUTL
         L     R1,DCB3ADDR
         MVC   OUTLIST(DCB3LEN),0(R1)        OUTLIST DCB
*
         B     DOBPSCAN           YUP
***********************************************************************
*                                                                     *
*   SET UP SPECIAL FORMAT CONDITION CODE SCAN                         *
*                                                                     *
***********************************************************************
DOBPSCAN DS    0H
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         MVC   DSNLINE(58),BPSFORM
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         TM    OUTLIST+48,X'10'   OPEN OK?
         BO    DOBPOPOK           YES
         WTO   'OUTLIST OPEN FAILED',ROUTCDE=11
         DC    H'0'
         B     SHOWAGN2       ALL DONE
*
DOBPOPOK DS    0H
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
         MVC   LABEL1(13),EXPECTED
*
*  FIRST LOCATE THE DDN  FOR DSID 1 TO PICK UP THE COND COMMENT CARD
*
*
         L     R1,IOTPTR
         USING JEDDSECT,1
         LA    R1,JEDBUFF+24   POINT TO DDNAMES
         DROP  8
         USING DDLINE,1
*
DSIDL001 DS    0H
         CLI   0(R1),X'FF'               END OF TABLE?
         BE    NOTDSID1                  YES
         CLC   DDLDSID(3),=C'001'       DSID MATCH?
         BE    GOTDSID1                  YES
*
         LA    R1,DDLINESZ(,R1)          DSID MATCH?
         B     DSIDL001                  YES
*
NOTDSID1 DS    0H
*
         WTO   'DSID 001 JCL MISSING FOR THIS JOB',ROUTCDE=11
         B     GETJMREC                  GO GET MESSAGES
*
GOTDSID1 DS    0H
*
         LA    R5,DDMTTR                 POINT TO THE BLOCK
         MVC   READAREA(4),IXTPTR        MOVE IN THE READ BUFFER
         MVC   READMTTR(4),DDMTTR        MOVE IN THE READ MTTR
*
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
*
         MVI   BOPR1ST,1          SET FIRST-TIME-THROUGH
         XC    GOTSOME(2),GOTSOME NO RECORDS WRITTEN
*
DOREAD1C DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   BGNJMREC           NOPE, EOF
*
         LA    R1,DSNLINE
*
BPCOMMLP DS    0H
*
         CLC   0(3,R1),=C'//*'   COMMENT LINE?
         BNE   DOREAD1C         YES, SKIP IT
*
         LA    R1,3(,1)          BUMP
         LA    R7,65             MAXIMUM ITERATIONS
*
BPCOMML1 DS    0H
         CLC   0(4,R1),=C'COND'  CONDITION CODE LINE
         BE    BPCOMMPT          YUP
         LA    R1,1(,1)
         BCT   R7,BPCOMML1
         B     DOREAD1C
*
BPCOMMPT DS    0H
         MVC   WRKLINE(67),DSNLINE+3
         MVC   DSNLINE(13),LABEL1
         MVI   LABEL1,C' '
         MVC   LABEL1+1(12),LABEL1
         MVC   DSNLINE+13(67),WRKLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         B     DOREAD1C
*
BGNJMREC DS    0H
*
*
GETJMREC DS    0H
*
*
*    NOW LOCATE THE DDN  FOR DSID 4 TO PICK UP THE COND CODES, ETC.
*
*
         USING JEDDSECT,1
         L     R1,IOTPTR
         LA    R1,JEDBUFF+24   POINT TO DDNAMES
         USING DDLINE,1
*
DSIDL004 DS    0H
         CLI   0(R1),X'FF'               END OF TABLE?
         BE    NOTDSID4                  YES, ISSUE MESSAGE
         CLC   DDLDSID(3),=C'004'       DSID MATCH?
         BE    GOTDSID4                  YES
*
         LA    R1,DDLINESZ(,R1)          DSID MATCH?
         B     DSIDL004                  YES
*
NOTDSID4 DS    0H
*
         WTO   'DSID 004 MSGS MISSING FOR THIS JOB',ROUTCDE=11
         B     OUTLSCLS                  YES, JUST BROWSE WHAT I GOT
*
GOTDSID4 DS    0H
*
         LA    R5,DDMTTR                 POINT TO THE BLOCK
         MVC   READAREA(4),IXTPTR        MOVE IN THE READ BUFFER
         MVC   READMTTR(4),DDMTTR        MOVE IN THE READ MTTR
*
         MVI   READ1ST,0          SET FIRST-TIME-THROUGH
         MVC   CONDNUM(3),P3ZERO  INITIALIZE COUNTERS
*
GETJMLOP DS    0H
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   SHOWBP       NOPE, END OF DATASET.
*
         LA    R1,DSNLINE
*
*
         CLC   0(7,R1),=C'IEF142I'     COND LINE
         BE    BPGOTCON                YUP
         CLC   1(7,R1),=C'IEF142I'     COND LINE
         BE    BPGOTCON                YUP
         CLC   0(7,R1),=C'IEF472I'     COND LINE
         BE    BPGOTCON                YUP
         CLC   1(7,R1),=C'IEF472I'     COND LINE
         BE    BPGOTCON                YUP
*
         CLC   1(7,R1),=C'IEF285I'  CAT/UNCAT REC?
         BE    *+14                 NO
         CLC   0(7,R1),=C'IEF285I'  CAT/UNCAT REC?
         BNE   BPUNCAT              NO
*
         CLC   55(3,R1),=C'CAT'  CATALOGED REC?
         BE    BPCATED              YUP
         CLC   56(3,R1),=C'CAT'  CATALOGED REC?
         BE    BPCATED              YUP
*
         CLC   56(3,R1),=C'UNC'  UNCATALOGED REC?
         BE    *+14              YES
         CLC   55(3,R1),=C'UNC'  UNCATALOGED REC?
         BNE   GETJMLOP          NOPE
*
         CLI   BOPR1ST,2            IF SECOND TIME AROUND
         BE    GETJMLOP             SKIP IT
*
         AP    UNCATNUM(3),P1(1)
         B     GETJMLOP            GO GET THE NEXT ONE
*
BPUNCAT  DS    0H
         CLC   1(7,R1),=C'IEF287I'  "NOT CATALOGED" REC?
         BE    *+14                 YES
         CLC   0(7,R1),=C'IEF287I'  "NOT CATALOGED" REC?
         BNE   GETJMLOP             NO
*
         CLC   56(3,R1),=C'NOT'     ACTUAL RECORD?
         BE    *+14                 YES
         CLC   55(3,R1),=C'NOT'     ACTUAL RECORD?
         BNE   GETJMLOP          NOPE
*
         CLI   BOPR1ST,2            IF SECOND TIME AROUND
         BNE   BPUNADD              GO WRITE IT OUT
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         BAL   R7,READ1REC        GET A RECORD FROM THE SPOOL
         LTR   R15,15             DID I GET A RECORD
         BNZ   SHOWBP       NOPE, END OF DATASET.
         B     BPPUT1        YUP, GO WRITE IT OUT
*
BPUNADD  DS    0H
         AP    NCATNUM(3),P1(1)
         B     GETJMLOP            GO GET THE NEXT ONE
*
BPGOTCON DS    0H
         LA    R1,DSNLINE+35       BEGIN TEST FOR COND CODE 0
         LA    R15,80
BPTSTCON DS    0H
         CLC   0(10,R1),=C'COND CODE '
         BE    BPGOTCND
         CLC   0(15,R1),=C'COMPLETION CODE' FOR ABEND LINE
         BE    BPGOTCND
         LA    R1,1(,1)            BUMP
         BCT   R15,BPTSTCON        LOOP
BPGOTCND DS    0H
*
         CLI   BOPR1ST,2            IF SECOND TIME AROUND
         BE    BPTSTBAD             GO TEST FOR NON-ZERO
*
         AP    CONDNUM(3),P1(1)
         CLC   10(4,R1),=C'0000'   CONDITION CODE ZERO
         BNE   GETJMLOP
*
         AP    CONDZERO(3),P1(1)
         B     GETJMLOP            GO GET THE NEXT ONE
*
BPTSTBAD DS    0H
         CLC   10(4,R1),=C'0000'   CONDITION CODE ZERO
         BE    GETJMLOP            GO GET THE NEXT ONE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         B     GETJMLOP            GO GET THE NEXT ONE
*
BPCATED  DS    0H
*
         CLI   BOPR1ST,2            IF SECOND TIME AROUND
         BE    GETJMLOP             GO GET THE NEXT ONE
*
         AP    CATNUM(3),P1(1)
         B     GETJMLOP            GO GET THE NEXT ONE
*
BPPUT1   DS    0H
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         B     GETJMLOP            GO GET THE NEXT ONE
*
SHOWBP   DS    0H
         CLI   BOPR1ST,2            IF SECOND TIME THROUGH
         BE    DOSHOWBP             ALL DONE
         MVI   BOPR1ST,2
*
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         MVC   DSNLINE(13),FOUND
*
*
* COND CODES
         MVC   DSNLINE+13(16),CONDMS
         MVC   DSNLINE+29(6),EDIT6   DO EDIT
         ED    DSNLINE+29(6),CONDNUM DO EDIT
* DATA SETS CATALOGED
         MVC   DSNLINE+36(9),CATSMS
         MVC   DSNLINE+45(6),EDIT6   DO EDIT
         ED    DSNLINE+45(6),CATNUM DO EDIT
* DATA SETS UNCATALOGED
         MVC   DSNLINE+52(11),UNCATMS
         MVC   DSNLINE+63(6),EDIT6   DO EDIT
         ED    DSNLINE+63(6),UNCATNUM
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
* ZERO COND CODES
         CP    CONDNUM,CONDZERO      IF ALL CONDITION CODES ZERO
         BE    ALLCND0               ISSUE THE MESSAGE
         SP    CONDNUM,CONDZERO      IF ALL CONDITION CODES ZERO
         MVC   DSNLINE+13(20),CONDMSNZ
         MVC   DSNLINE+33(6),EDIT6   DO EDIT
         ED    DSNLINE+33(6),CONDNUM
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         B     SHOWBPFR              ISSUE THE MESSAGE
ALLCND0  DS    0H
         MVC   DSNLINE+13(24),CONDMS0
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
SHOWBPFR DS    0H
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVC   DSNLINE(58),BPSFORM
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         B     GETJMREC             GO DO IT AGAIN
DOSHOWBP DS    0H
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVC   DSNLINE(58),BPSFORM
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
*
         L     R15,QPUTEPA
         CALL  (15),(OUTLIST,DSNLINE),VL,MF=(E,ISPARMS)
*
         MVC   DDSDSID(3),=C'004'  JOB MESSAGES
         MVC   SELSAVE(3),=C'BPS'    DOING CONDITION CODE SCAN
*
         B     ADDNEDD
*
*
GOTDDCMD DS    0H
         B     SHODDTAB       REPEAT THE DD TABLE
         TITLE 'JDF -  DSID READ 1 RECORD SUBROUTINE'
READ1REC DS    0H
         ST    R7,RD1SAVE7
         CLI   READ1ST,0      FIRST TIME THROUGH?
         BE    READ1OPN       YUP
         CLI   DSIDEOF,0      IS IT EOF
         BNE   READ1EOF       YUP
         LM    R4,R7,RD1SAVE
         B     SKIP1REC
READ1OPN DS    0H
         MVI   READ1ST,1      TURN OFF SWITCH
         MVI   DSIDEOF,0      NOT EOF
READ1NXT DS    0H
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTDSA  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK
         LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    READ1EOF       YUP END OF DATASET.
         L     R5,IXTPTR                 POINT TO THE BLOCK
         ST    R4,READMTTR    STORE DISK ADDR IN TABLE
         BAL   R7,READSPAC               READ IN THE BLOCK
         CLC   JDFJBKEY(4),4(R5) DOES THE JOBID MATCH?
         BNE   READ1EOF       NO. END OF DATASET.
         LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTDSR  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTDSA        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPANSKIP       YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         LR    R7,R6          SAVE RECORD LENGTH
         LR    R1,R4          SAVE RECORD LOCATION
         MVI   CCFLAG,0       NO CARRIAGE CONTROL
         TM    1(R4),X'80'    IS THERE CARRIAGE CONTROL?
         BZ    *+12           NO.
         LA    R1,1(,1)       BUMP 1
         MVI   CCFLAG,1       THERE IS CARRIAGE CONTROL
         TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         LR    R4,R1          UPDATE RECORD POINTER
         BNZ   SKIP1REC       YES. SKIP IT.
         LTR   R7,R7          LENGTH ZERO
         BZ    SKIP1REC       YES. SKIP IT.
         BCTR  R7,0           MINUS 1
         N     R7,ZEROFF      LOP OFF LEFT BYTES
         CH    R7,=H'133'     IS THE RECORD BIGGER THAN LINE WIDTHLBDMC
         BNH   *+8            NO. USE RECORD LENGTH.
         LH    R7,=H'133'          YES. USE LINE WIDTH            LBDMC
         LA    R1,3(R1)       OFFSET PAST REC HDR
         MVI   DSNLINE,C' '
         MVC   DSNLINE+1(132),DSNLINE
         CLI   CCFLAG,0       IS THERE CARRIAGE CONTROL?
         BE    *+10           NOPE
         BCTR  R1,0           BACK UP 1 TO PICK UP CC
         LA    R7,1(,7)       AND ADD 1 TO LENGTH
         EX    R7,MOVEDATA
         STM   R4,R7,RD1SAVE
         SR    R15,15         GOT A RECORD
READ1RTN DS    0H
         L     R14,RD1SAVE7
         BR    R14
READ1EOF DS    0H
         LA    R15,4          EOF
         MVI   READ1ST,0      FIRST TIME THROUGH IS FORCED
         MVI   DSIDEOF,1      SET EOF
         B     READ1RTN
*
SKIP1REC LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTDSR        PROCESS NEXT RECORD
SPANSKIP LH    R6,2(R4)       LENGTH OF SEGMENT
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPAN1STR       YES. USE HEADER LENGTH OF 6.
         LA    R4,4(R6,R4)    UPDATE RECORD POSITION
         B     NEXTDSR        PROCESS NEXT RECORD
SPAN1STR LA    R4,6(R6,R4)    UPDATE RECORD POSITION
         B     NEXTDSR        PROCESS NEXT RECORD
*
MOVEDATA MVC   DSNLINE(1),0(R1)   MOVE IN LINE
*
         TITLE 'JDF -  MVS COMMAND   SUBROUTINE'
ISSUECMD DS    0H
*
         SLR   R0,0                    CLEAR REG 0
         LA    R1,CMDISMF             GET ADDRESS OF COMMAND I SMF
         LA    R15,1
         SVC   JESSVC                  ISSUE COMMAND VIA SVC 34
         BR    R7
*
         TITLE 'JDF -  READ 1 BLOCK FROM THE SPOOL'
READSPAC DS    0H
         L     R1,READMTTR
         NI    READAREA,X'7F'  CLEAR LEFT BIT
         L     R0,READAREA
         LA    R15,88
         SR    R0,R15
         LA    R15,3
         SVC   JESSVC
         BR    R7
*
         TITLE 'JDF -  INITIALIZE MESSAGE SUBROUTINE'
INITMSG  MVI   MESSAGE,C' '   BLANK OUT THE
         MVC   MESSAGE+1(79),MESSAGE MESSAGE BUFFER
         MVC   MSGJNME,JOBJNAME PUT IN THE JOB NAME
         SR    R1,R1
         ICM   R1,3,JOBJOBNO   JOB'S NUMBER
         TM    JOBFLAG3,QUEJOB  BATCH JOB IF ZEROS
         BNZ   STCORTSU     NO => TRY STC OR TSU
         MVC   MSGJBTYP,JOB   INDICATE IT'S A JOB
         B     CONVERT#       PUT IN THE JOB NUMBER
STCORTSU DS    0H
         CLI   JOBFLAG3,QUETSU  TSO USER ?
         BNE   ITSTC          NO => IT'S STC
         MVC   MSGJBTYP,TSU   INDICATE TSU
         B     CONVERT#       PUT IN THE TSU NUMBER
ITSTC    MVC   MSGJBTYP,STC   INDICATE STC
CONVERT# CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL
         UNPK  MSGJOB#,DOUBLEWD+5(3) CONVERT TO ZONED DECIMAL
         OI    MSGJOB#+L'MSGJOB#-1,C'0' CONVERT TO EBCDIC
         CLI   MSGJOB#,C'0'
         BNE   NUMDONE
         MVI   MSGJOB#,C' '
         CLI   MSGJOB#+1,C'0'
         BNE   NUMDONE
         MVI   MSGJOB#+1,C' '
         CLI   MSGJOB#+2,C'0'
         BNE   NUMDONE
         MVI   MSGJOB#+2,C' '
         CLI   MSGJOB#+3,C'0'
         BNE   NUMDONE
         MVI   MSGJOB#+3,C' '
         CLI   MSGJOB#+4,C'0'
         BNE   NUMDONE
         MVI   MSGJOB#+4,C' '
NUMDONE  DS    0H
*
         TM    JOBFLAGS,QUEHOLD1+QUEHOLD2+QUEPURGE+QUEOPCAN
         BZR   R7             NO SPECIAL FLAGS
         MVC   MSGSPCST(L'PURGE),PURGE ASSUME THE JOB'S TO BE PURGED
         TM    JOBFLAGS,QUEPURGE JOB TO BE PURGED?
         BOR   R7             YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'CANCEL),CANCEL ASSUME JOB CANCELLED
         TM    JOBFLAGS,QUEOPCAN JOB CANCELLED?
         BOR   R7             YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'HOLD),HOLD   SINGLE JOB HOLD
         TM    JOBFLAGS,QUEHOLD1       SINGLE JOB HOLD?
         BOR   R7             YES => RETURN TO OUR CALLER
         MVC   MSGSPCST(L'DUPLICAT),DUPLICAT MUST BE DUPLICATE JOB
         BR    R7             RETURN TO OUR CALLER
         TITLE 'MISCELLANEOUS CONSTANTS'
*
         LTORG
P1       DC    PL1'+1'
P3ZERO   DC    PL3'+0'
CATSMS   DC    CL9'CATALOGS='
UNCATMS  DC    CL11'UNCATALOGS='
NOTCATMS DC    CL24'NOT CATALOGED ERRORS    '
CONDMS   DC    CL16'CONDITION CODES='
NZCONDMS DC    CL24'NON-ZERO CONDITION CODES'
EXPECTED DC    CL13'  EXPECTED:  '
FOUND    DC    CL13'     FOUND:  '
*
VCOPY    DC    CL8'VCOPY '
ZUSER    DC    CL8'ZUSER '
ZPREFIX  DC    CL8'ZPREFIX'
SPFMOVE  DC    CL8'MOVE   '
F128K    DC    F'131072'
         DS    0F
ZEROFF   DC    X'000000FF'
*
*
***********************************************************************
*   DEVICE TABLES FOR LOCAL AND REMOTE DEVICES                        *
***********************************************************************
         DS    0H
DEVTABLE DC    AL1(0),CL8'OUT QUE ',AL1(6),CL8'RDR Q   '
         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH Q'
DEVTYPEL DC    AL2((*-DEVTABLE)/4)
RMTDEVS  DC    C'**',C'RD',C'PR',C'PU'
         DC    C'012345678XMTTER  ABC'
HIGHBIT  EQU   X'80'          MAKES JOB CLASS PRINTABLE
*
* HIGH-LIGHTED FIELDS
*
STREQ    DC    C'ST'
DQREQ    DC    C'DQ'
DEREQ    DC    C'DE'
DAREQ    DC    C'DA'
DHREQ    DC    C'DH'
DLREQ    DC    C'DL'
DOREQ    DC    C'DO'
DRREQ    DC    C'DR'
DTREQ    DC    C'DT'
DWREQ    DC    C'DW'
*
*
L8       DC    F'8'
*
CONDMS0  DC    CL24'ALL CONDITION CODES 0000'
CONDMSNZ DC    CL20'NON-ZERO COND CODES '
*
*
JDFMSG1  DC    CL8'JDF001'
JDFMSG2  DC    CL8'JDF002'
JDFMSG3  DC    CL8'JDF003'
JDF005   DC    CL8'JDF005'
JDF006   DC    CL8'JDF006'
JDF007   DC    CL8'JDF007'
*
BROWSE   DC    CL8'BROWSE'
*
THREEPT  DC    X'2020204B'
EDIT4    DC    X'40202021'
EDIT6    DC    X'402020202121'
EDIT10   DC    X'40206B2020206B202120'
*
JOB      DC    C'JOB'
TSU      DC    C'TSU'
STC      DC    C'STC'
HOLD     DC    C'HOLD'
PURGE    DC    C'PURG'
CANCEL   DC    C'CANC'
DUPLICAT DC    C'DUPL'
ACTIVE   DC    C'ACTIVE  '    STARTED TASK
LOGGEDON DC    C'LOGGED ON '  TSO USER
EXECUTNG DC    C'EXECUTING '    JOB
INPQUE   DC    C'ON INPUT  '      JOB
XMTQUE   DC    C'AWAITING XMIT'
PURQUE   DC    C'ON PURGE Q'
SYSREC   DC    C'ON SYS RCV'
DMPQUE   DC    C'ON $DUMP Q'
OUTQUE   DC    C'ON OUT QUE'
*
DUMM     DS    0H
*
*
FZEROS   DC    F'0'
F4       DC    F'4'
F8       DC    F'8'
L3       DC    F'3'
*
H1       DC    H'1'
H2       DC    H'2'
H8       DC    H'8'
*
SPACES   DC    CL44' '
CZEROS   DC    CL8'00000000'
*
COMMAC   DC    C',C='
PUPDATA  DC    C',P=+99'
*
*
RMTABLEA DC    A(RMTABLE)
*
DCB2ADDR DC    A(DCB2)
DCB3ADDR DC    A(DCB3)
*
         SPACE 5
DCB2 DCB DDNAME=REPRINT,DSORG=PS,MACRF=(PM)
DCB2LEN  EQU   *-DCB2
DCB3 DCB DDNAME=OUTLIST,DSORG=PS,MACRF=(PM)
DCB3LEN  EQU   *-DCB3
*
RMTABLE  DS    0H
         DC    H'001',CL24' 01 RCHD8100 CHICAGO8100'
         DC    H'002',CL24' 02 RKSCHMIT KLIENSCHMIT'
         DC    H'003',CL24' 03 CIS6670  6670'
         DC    H'004',CL24' 04 CISCHM   CHEM WACKER'
         DC    H'005',CL24' 05 NOT ASSIGNED     '
         DC    H'006',CL24' 06 RRING    RINGWOOD'
         DC    H'007',CL24' 07 RCHEMTST CHEM TEST  '
         DC    H'008',CL24' 08 PRODSERV OPER 3262  '
         DC    H'009',CL24' 09 RCARS    CARSTAB '
         DC    H'010',CL24' 10 RFNBC    1ST NAT BNK'
         DC    H'011',CL24' 11 RVENT    VENTRON '
         DC    H'012',CL24' 12 RDYN     DYNACHEM '
         DC    H'013',CL24' 13          CARSTAB SNA'
         DC    H'014',CL24' 14 RELK     ELKTON '
         DC    H'015',CL24' 15 RHUNT    HUNTSVILLE'
         DC    H'016',CL24' 16 RLONG    LONGHORN '
         DC    H'017',CL24' 17 RLOUIS   LOUISIAN '
         DC    H'018',CL24' 18 RWAS     WASATCH '
         DC    H'019',CL24' 19 RCHEMGRN GREENVILL'
         DC    H'020',CL24' 20 RRING2   RINGWOOD '
         DC    H'021',CL24' 21 RELKG    ELK GROV '
         DC    H'022',CL24' 22 RPOLY    POLYMER  '
         DC    H'023',CL24' 23 RMANI    MANISTEE '
         DC    H'024',CL24' 24 RPATE    PATERSON '
         DC    H'025',CL24' 25 RSANT    SANTA FE '
         DC    H'026',CL24' 26 RARMS    ARMSTRNG '
         DC    H'027',CL24' 27 RWEEK    WEEKS ISL'
         DC    H'028',CL24' 28 RMOSS    MOSS POINT'
         DC    H'029',CL24' 29 RPRIN    PRINCETON'
         DC    H'030',CL24' 30 RWOOD    RINGWOOD   '
         DC    H'031',CL24' 31 MVSB     NOTASSIGNED'
         DC    H'032',CL24' 32          DYNACHM SNA'
         DC    H'033',CL24' 33          LOUISINA ML'
         DC    H'034',CL24' 34          NOTASSIGNED'
         DC    H'035',CL24' 35 RSANT2   SANTA FE P2'
         DC    H'036',CL24' 36 RELKG2   ELK GROV P2'
         DC    H'037',CL24' 37 RBCHEM   BEE CHEM 38'
         DC    H'038',CL24' 38          NOTASSIGNED'
         DC    H'039',CL24' 39          NOTASSIGNED'
         DC    H'040',CL24' 40          NOTASSIGNED'
*
         TITLE 'WORKING STORAGE AREAS'
WORKAREA DSECT
         DS    18F
JJSPARM  DS    F
JCTPTR   DS    F
IOTPTR   DS    F
IXTPTR   DS    F
SSOBPTR  DS    F
WTRSAV6  DS    F
ACOUNT   DS    F
PCOUNT   DS    F
SCOUNT   DS    F
DISPLRC  DS    F
*
QPUTEPA  DS    F
*
SMBSTART DS    F
SMBLRECL DS    F
SMBNUMB  DS    F
SMBLENG  DS    F
SMBMAX   DS    F
CMDISMF  DS    F
CMDLINE  DS    CL30
LABEL1   DS    CL13
BOPR1ST  DS    X
*
DATYPE   DS    CL3
CONDZERO DS    PL3
RURMT    DS    C
RUDEST   DS    C
         DS    CL6
*
*
PFXLEN   DS    F
*
*
JDFJBKEY DS    XL4
PREFIX   DS    CL8
         DS    0F
UIDLEN   DS    XL3
USERIDL  DS    XL1
USERID   DS    CL8
JDFLSTL  DS    XL1
JDFLST   DS    CL44
BPSCANJO DS    CL8
RQRMT    DS    C
RDEST    DS    C
         DS    CL4
*
*
BPSFORM  DS    CL27
SMBTITLE EQU   *
JOBID    DS    CL3            SAVE JOB TYPE, STC, TSU, OR JOB
JOBNUMS  DS    CL5            SAVE JES JOB NUMBER
         DS    C
JOBNAMS  DS    CL8            SAVE JOB NAME
         DS    C
JOBUSRID DS    CL7
JOBOUDAT DS    CL5
         DS    C
JOBDDNAM DS    CL8
         DS    CL5
BRODSID  DS    CL3
         DS    CL2
BPSFORML EQU   *-BPSFORM
SSREQRC  DS    F
DDSDSID  DS    CL3
*
DSIDEOF  DS    XL1                     EOF FLAG = 1
GOTSOME  DS    H                       OUTPUT COUNT
*
DOUBLEWD DS    D              PACKED DECIMAL WORK AREA
JOBNUMP  DS    D
ISPARMS  DS    9F
RD1SAVE  DS    4F
RD1SAVE7 DS    F
DDIOTRAK DS    F
DDJCTRAK DS    F
READSPA7 DS    F
READMTTR DS    F
SLOGMTTR DS    F
IXTMTTR  DS    XL4                 STARTING TRACK ADDR
SAVE5    DS    5F
READAREA DS    F
JQESHOLD DS    A              RETURN ADDRESS HOLD FOR OUTJQES
JOESHOLD DS    A              RETURN ADDRESS HOLD FOR OUTJOES
*
JOBNUMH  DS    H
*
GOTANYST DS    XL1     DID I FIND ANY MATCHES, Y=1, N=0
READ1ST  DS    X
*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTS
ATABFL   DS    XL1     DO I HAVE A CURRENT "DISPLAY ACTIVE" TABLE
DTABFL   DS    XL1     DO I HAVE A CURRENT DD NAME TABLE
*
USRJLENG DS    CL1
*
DRNUM    DS    XL2
DQCLASS  DS    CL1
DOCLASS  DS    CL1
*
COMMAND  DS    CL2
CMDSAVE  DS    CL2
ENTCOMD  DS    CL2
MSGJNAME DS    CL8     SAVE FOR MESSAGE
*
CCFLAG   DS    XL1
*
COPYFLAG DS    XL1
SLOGFLAG DS    XL1
*
         DS    XL1
DSNLINE  DS    CL133
         DS    CL133
*
LVL      DS    CL8
*
JCMD     DS    CL40             COMMAND LINE  FOR JDFDATAB
DCMD     DS    CL40             COMMAND LINE  FOR JDFDDTAB
*
DDNLINE  DS    CL80
DSEL     DS    CL3
JOBLINE  DS    CL80
TSEL     DS    CL3
*
JDFZ     DS    CL3
*
SELSAVE  DS    CL40           LINE SELECTION CODE
*
WRKLINE  DS    CL80
*                           NOTE THESE FIELDS ARE POSITION-DEPENDENT
CONDNUM  DS    PL3
CATNUM   DS    PL3
UNCATNUM DS    PL3
NCATNUM  DS    PL3
NZCONDS  DS    PL3
*
MESSAGE  EQU   *              OUTPUT MESSAGE BUFFER
MSGJBTYP DS    CL3            JOB OR TSU OR STC
MSGJOB#  DS    CL5            JOB NUMBER
         DS    C
MSGJNME  DS    CL8            JOB NAME
         DS    C
MSGSTYPE DS    CL16           JOB STATUS
         DS    C
MSGQTYPE DS    CL1            JOB CLASS
         DS    C
MSGSPCST DS    CL4            SPECIAL STATUS
         DS    CL1
MSGJQTYP DS    CL2            JQETYPE
MSGALINE DS    CL10
         DS    C
MSGOCLAS DS    CL1
         DS    C
MSGFORM  DS    CL4            JOB CLASS
         DS    C
MSGBURST DS    CL1            BURST=Y
         DS    C
MSGSNODE DS    CL2            NODE FLAG
         DS    C
MSGSREMT DS    CL8          REMOTE FLAG
LMESSAGE EQU   *-MESSAGE      LENGTH OF THE MESSAGE BUFFER
         DS    CL5            PAD OUT TO 75
         DS    CL80           FILLER
*
OPEN1    DS    F
*
REPRINT  DS    XL(DCB2LEN)
OUTLIST  DS    XL(DCB3LEN)
*
         DS    0F
SSOBWTO2 DS    XL(SSOBWTOL)
*
         DS    0F
SSOBAREA DS    XL(SSOBALL)
*
RMT1    DS     CL4,CL4,CL26
RMT2    DS     CL4,CL4,CL26
*
HRTABLE DS    H
HR001   DS    XL(RMTMAX*2)
HRLEN   EQU   *-HR001
*
WORKALEN EQU   *-WORKAREA
         TITLE 'SUB-SYSTEM OUTPUT BLOCK (SSOB)'
         IEFJSSOB
SSOBGN   DSECT
         IEFSSSO
         IEFSSCS
SSOBALL  EQU   SSOBHSIZ+SSSOSIZE
*
         PRINT GEN
         DDLINE
*
         JDFJOB JESEQ=YES
*
         JEDDSECT
*
         JJSDSECT
*
         PRINT NOGEN
         IKJTCB
         IHAPSA
         CVT   DSECT=YES
         CVTUSERS
         IEFTIOT1
*
         IEFZB4D0
         IEFZB4D2
         IKJDAP08
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
*
         END
         TITLE 'JDF -  CHECK AUTHORIZATION RULES TO VIEW JOB OUTPUTS'
JDFCHECK CSECT
JDFCHECK AMODE 31
JDFCHECK RMODE ANY
*
*
********************************************************************
*
*  THIS IS THE JDF SYSOUT ACCESS CONTROL MODULE. IT IS CALLED FROM
*  THE JDF MAINLINE TO DECIDE WHETHER TO ALLOW/DISALLOW A USER TO
*  BROWSE A JOB'S OUTPUT.
*
*  CALLING PARAMETERS ARE:
*
*       CALL  JDFCHECK,(JEDUSEID,JOBNAMS,USERID,DDN,DDLDSID,PREFIX)
*
*                       JEDUSEID = SUBMITTING USER-ID
*                       JOBNAMS  = JOB NAME
*                       USERID   = TSO USERID REQUESTING ACCESS
*                       DDN      = DDNAME OF OUTPUT
*                       DDLDSID  = JES DSID NUMBER OF OUTPUT
*                       PREFIX   = TSO PREFIX
*
*           THE ACCESS CONTROL SVC IN INVOKED IN THE "JDFCHECK"       *
*           SUB-ROUTINE USING THIS SVC NUMBER:                        *
*                                                                     *
ACFCHK   EQU   247                                                    *
*                                                                     *
********************************************************************
*
*
         USING *,12,11
*
         SAVE  (14,12),,JDFCHECK_08/25/86_BRIAN_COOK_&SYSTIME_&SYSDATE
*
         LR    R12,R15            SET BASE REGISTER
         LA    R11,4095
         LA    R11,1(R11,R12)     SET BASE 2
         LR    R9,R1              SAVE PARM REGISTER
*
** TO REDUCE RUN-TIME OVERHEAD, SOME BASIC SCREENING TESTS ARE MADE
*  PRIOR TO THE GETMAIN, AND BEFORE ANY CALL TO "ACFCHK".
*
         LM    R1,R3,0(R9)        PICK UP PARMS
*
*    IF SUBMITTING USERID IS BLANK, ALLOW ACCESS
*
         CLI   0(R1),C' '         BLANK
         BE    QUICKOUT           YES, JUST SET RC=0
*
*
**          JES INPUTS AND OUTPUTS CAN BE VIEWED IF THE JOBNAME BEGINS
*           WITH YOUR USERID, OR IF YOU SUBMITTED IT.
*
         CLC   0(5,R3),0(R1)      SUBMITTED BY THIS USERID?
         BE    QUICKOUT           YES, JUST SET RC=0
         CLC   0(5,R3),0(R2)      JOBNAME MATCHES USERID?
         BE    QUICKOUT           YES, JUST SET RC=0
*
*
**  TEMPORARILY, SOFTWARE ENGINEERING STUFF
*
*        CLC   0(3,R2),=C'MPS'    PAYROLL?
*        BE    NOTSPEC            YES, DON'T ALLOW ACCESS
*        CLC   0(2,R3),=C'AS'     SOFTWARE ENGINEERING?
*        BE    QUICKOUT           YES, JUST SET RC=0
*        CLC   0(2,R3),=C'BO'     OPERATIONS?
*        BE    QUICKOUT           YES, JUST SET RC=0
*        CLC   0(2,R3),=C'BP'     BPSCAN?
*        BE    QUICKOUT           YES, JUST SET RC=0
*
NOTSPEC  DS    0H
*
         L     R2,GETMLENG
         GETMAIN R,LV=(2)
*
         ST    R13,4(R1)          STORE BACKWARDS POINTER
         ST    R1,8(R13)          STORE FORWARD POINTER
         LR    R13,R1             DSECT BASE
         USING WORKAREA,13
*
*        LA    R0,1               AUTH ON
*        SVC   235
*
*        LOAD  EP=ACFCHK
*        LR    R10,R0
*
         LM    R1,R8,0(R9)        PICK UP PARMS
         MVC   JEDUSEID(8),0(R1)
         MVC   JOBNAMS(8),0(R2)
         MVC   USERID(8),0(R3)
         MVC   DDN(8),0(R4)
         MVC   DDLDSID(3),0(R5)
         MVC   PREFIX(8),0(R6)
         MVC   DDREMOTE(1),0(R7)
         MVC   DDCLASS(1),0(R8)
*
JOBTEST1 DS    0H
*
*
*    A DISPLAY OF A PARTICULAR DSID HAS BEEN REQUESTED, SO CHECK AUTH
*
*
* RULE 1==> JES DATASETS FOR ANY JOB CAN BE LOOKED AT BY ANYONE.
*
*
         CLI   DDLDSID,C'0'          IF JES DATASETS
         BE    RETURN0               LET ANYBODY LOOK AT ANYTHING
*
*
*
*
*
* RULE 2==> ANYONE CAN LOOK AT SYSLOG
*
*
         CLC   JOBNAMS(7),=C'SYSLOG '   SYSLOG
         BE    RETURN0                  YES, ALLOW READ ACCESS
*
*
*
*
* RULE 3==> SOFTWARE ENGINEERING JOBS ARE RESTRICTED TO SE USERS.
*
*
         CLC   JOBNAMS(2),=C'AS'     IS THIS SOFTWARE ENGINEERING JOB?
         BNE   DDNRUL3E              NO, SKIP ALL THIS
         CLC   JOBNAMS(3),=C'ASM'    IS THIS SPECIAL "ASM2" JOB?
         BE    DDNRUL3E              YES, SKIP TEST
*        CLC   PREFIX(2),=C'AS'      IS THIS SOFTWARE ENGINEERING USER
         CLC   USERID(2),=C'AS'      IS THIS SOFTWARE ENGINEERING USER
         BE    RETURN0          YUP
         B     RETURN4 AUTH CHECK FAILED, DISPLAY THE MESSAGE
DDNRUL3E DS    0H
*
*
*
* RULE 4==> CERTAIN DDNAMES ARE UNRESTRICTED, AND CAN BE VIEWED BY
*           ANY USER.
*
         CLC   DDN(3),=C'CPX'          IS IT CAPEX
         BE    RETURN0                   OK TO LOOK AT
         CLC   DDN(8),=C'SORTMSGS'     IS IT SORT MESSAGES
         BE    RETURN0                   OK TO LOOK AT
         CLC   DDN(8),=C'SYSOUT  '     IS IT SORT MESSAGES
         BE    RETURN0                   OK TO LOOK AT
*
*
         CLI   DDREMOTE,C'R'      REMOTE?
         BNE   ACFCHECK           NO, JUST DO ACFCHECK
*
** THIS WILL PREVENT ACCESS TO CONFIDENTIAL OUTPUTS ON THE 6670
*
** IT WILL ALSO PREVENT ACCESS TO ANY REMOTE OUTPUT UNLESS SPECIFICALLY
** AUTHORIZED.
*
         CLI   DDCLASS,C'C'       CONFIDENTIAL OUTPUT PRINT CLASS?
         BE    DDNRULE6           YES, CHECK FOR SYSTEM ACCESS
         CLI   DDCLASS,C'U'       CONFIDENTIAL OUTPUT PUNCH CLASS?
         BE    DDNRULE6           YES, CHECK FOR SYSTEM ACCESS
*
*
ACFCHECK DS    0H
*
*
** LINK TO ACFCHK, TO DETERMINE WHETHER IT IS AN "EXCEPTION" JOB.
*
** IF THIS IS AN EXCEPTION JOB, IT MEANS THAT EVEN USERS WITH THE
*  "ALLJOBS" ATTRIBUTE CAN'T LOOK AT IT. THE ONLY USERS THAT CAN LOOK
*  AT THE REPORT OUTPUT ARE USERS THAT HAVE "ALLJOBS" FOR THE SPECIFIC
*  SYSTEM, OR FOR THE JOB.
*
*
         MVI   OPTBYTE,1            READ ACCESS
         MVC   ACFUID(8),=CL8'APSEC '
         MVC   RESTYPE(3),JOBNAMS
         MVC   RESNAME(40),=CL40'EXCEPT   '
*
         LA    R1,OPTBYTE
         ST    R1,ACFPARMS
         LA    R1,ACFUID
         ST    R1,ACFPARMS+4
         LA    R1,RESTYPE
         ST    R1,ACFPARMS+8
         LA    R1,RESNAME
         ST    R1,ACFPARMS+12
         OI    ACFPARMS+12,X'80'
*
         LA    R1,ACFPARMS
         SVC   ACFCHK
*        LR    R15,R10
*        BALR  R14,R15
*
         LTR   R15,R15
         BZ    DDNRULE6
*
*        DC    H'0'
*
DDNRULE5 DS    0H
*
         MVI   OPTBYTE,1            READ ACCESS
*        MVC   ACFUID(8),PREFIX
         MVC   ACFUID(8),USERID
         MVC   RESTYPE(3),=C'JDF'
         MVC   RESNAME(40),=CL40'ALLJOBS'
*
         LA    R1,ACFPARMS
         SVC   ACFCHK
*        LR    R15,R10
*        BALR  R14,R15
*
         LTR   R15,R15
         BZ    RETURN0
*
*
*
*
* RULE 6==> SOME USERS ARE AUTHORIZED TO LOOK AT ALL JOBS IN A GIVEN
*           APPLICATION SYSTEM (1ST 3 CHARACTERS OF JOBNAME=SYSTEM ID)
*
DDNRULE6 DS    0H
*
*
         MVI   OPTBYTE,1            READ ACCESS
*        MVC   ACFUID(8),PREFIX
         MVC   ACFUID(8),USERID
         MVC   RESTYPE(3),JOBNAMS
         MVC   RESNAME(40),=CL40'ALLJOBS'
         MVC   RESNAME(3),JOBNAMS
*
         LA    R1,ACFPARMS
         SVC   ACFCHK
*        LR    R15,R10
*        BALR  R14,R15
*
         LTR   R15,R15
         BZ    RETURN0
*
*
*
* RULE 7==> SOME USERS ARE AUTHORIZED TO LOOK AT A SPECIFIC JOB.
*
DDNRULE7 DS    0H
*
*
         MVI   OPTBYTE,1            READ ACCESS
*        MVC   ACFUID(8),PREFIX
         MVC   ACFUID(8),USERID
         MVC   RESTYPE(3),JOBNAMS
         MVC   RESNAME(40),SPACES
         MVC   RESNAME(8),JOBNAMS
*
         LA    R1,ACFPARMS
         SVC   ACFCHK
*        LR    R15,R10
*        BALR  R14,R15
*
         LTR   R15,R15
         BZ    RETURN0
*
         B     RETURN4
*
*
QUICKOUT DS    0H
*
         SR    R15,R15
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
*
RETURN0  DS    0H
*
         SR    R10,R10
         B     RETURN
*
RETURN4  DS    0H
*
         LA    R10,4
*
*        CLC   USERID(5),=C'ASQCC'
*        BE    RETURN0
*
RETURN   DS    0H
*
*        SR    R0,R0              AUTH OFF
*        SVC   235
*
         LR    R3,R13             START ADDRESS OF GETMAINED AREA
         L     R2,GETMLENG        LENGTH OF GETMAINED AREA
         L     R13,4(,R13)        PICK UP CALLING SAVE AREA
         FREEMAIN R,LV=(2),A=(3)
         LR    R15,R10
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
*
SPACES   DC    CL40' '
GETMLENG DC    A(WORKLENG)
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
WORKAREA DSECT
         DS    18F
JEDUSEID DS    CL8
JOBNAMS  DS    CL8
USERID   DS    CL8
DDN      DS    CL8
PREFIX   DS    CL8
DDLDSID  DS    CL8
DDREMOTE DS    CL1
DDCLASS  DS    CL1
*
ACFPARMS DS    4F
OPTBYTE  DS    XL1
ACFUID   DS    CL8
RESTYPE  DS    CL3
RESNAME  DS    CL40
*
AUTHFLAG DS    C
*
WORKLENG EQU   *-WORKAREA
         END
         TITLE 'JDF -  ALLOCATE OUTLIST DATASET'
ALLOOUTL CSECT
ALLOOUTL AMODE 31
ALLOOUTL RMODE ANY
*
*
         USING *,12,11
*
         SAVE  (14,12),,ALLOOUTL_03/21/86_BRIAN_COOK_&SYSTIME_&SYSDATE
*
         LR    R12,R15            SET BASE REGISTER
         LA    R11,4095
         LA    R11,1(R11,R12)     SET BASE 2
         L     R7,0(,R1)          SAVE PARM
*
         L     R2,GETMLENG
         GETMAIN R,LV=(2)
*
         ST    R13,4(R1)          STORE BACKWARDS POINTER
         ST    R1,8(R13)          STORE FORWARD POINTER
         LR    R13,R1             DSECT BASE
         USING WORKAREA,13
         TITLE 'INITIALIZE DYNAMIC ALLOCATION REQUEST BLOCKS'
*
** INITIALIZE ALLOCATE-OLD  REQUEST BLOCK
*
         MVC   OLD2RB(RB2LEN),RB2MASK
         LA    R1,OLD2
         ST    R1,OLD2RB
         OI    OLD2RB,X'80'
         LA    R1,OLD2TXT
         ST    R1,TXT2PTR
         LA    R1,DSN2TU
         ST    R1,DSN2PTR
         OI    DSN2PTR,X'80'
*
** INITIALIZE ALLOCATE-NEW  REQUEST BLOCK
*
         MVC   NEW2RB(NEWMLEN),NEW2MASK
         LA    R1,NEW2
         ST    R1,NEW2RB
         OI    NEW2RB,X'80'
         LA    R1,NEW2TXT
         ST    R1,NEW2PTR
         LA    R1,DSN2TU
         ST    R1,NEW2DSN
         OI    NEW2DSN,X'80'
*
** INITIALIZE FREE REQUEST BLOCK
*
         MVC   FREERB(FREELEN),FREEMASK
         LA    R1,FREE
         ST    R1,FREERB
         OI    FREERB,X'80'
         LA    R1,FREE1PTR
         ST    R1,FREEPTR
         OI    FREE2PTR,X'80'  END PARAMETER FLAG
*
         TITLE 'GENERATE OUTLIST DSNAME'
*
*  PICK UP USERID/DSNAME LENGTH AND BUILD TEXT UNIT
*
         MVC   OUTLDSN(7),1(R7)   USERID INTO NAME
*
         SR    R15,R15
         IC    R15,0(,R7)         GET  LENGTH OF USERID
         LA    R1,OUTLDSN(R15)    BUMP TO FIRST BLANK AFTER USERID
         MVI   0(R1),C'.'
         LA    R1,1(,R1)          BUMP PAST PERIOD
*
         IC    R15,9(,R7)         GET  LENGTH OF OUTLIST DSNAME
         LTR   R15,R15
         BNZ   JDFXMOV1
*
         MVC   0(13,R1),=CL13'@TEMP.OUTLIST'
         LA    R15,12
         B     JDFXMOV2
*
JDFXMOV1 DS    0H
         BCTR  R15,0
         EX    R15,*+8
         B     JDFXMOV2
         MVC   0(1,R1),10(R7)
JDFXMOV2 DS    0H
*
         LA    R15,1(,R15)        RESET LENGTH OF OUTLIST DSNAME
         SR    R14,R14
         IC    R14,0(,R7)         GET  LENGTH OF USERID
         LA    R14,1(R14,R15)     GET TOTAL LENGTH
         STCM  R14,3,OUTLDSNL     STORE IT INTO TEXT UNIT
*
         TITLE 'ALLOCATE OUTLIST DSNAME'
*
*
*        FREE THE OUTLIST DATASET
*
         LA    R1,FREERB     LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
*
*
*        ALLOCATE THE OUTLIST DATASET AS OLD
*
         LA    R1,OLD2RB     LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
*
         LTR   R15,R15       CHECK RETURN CODE
         BZ    JDFOUTL4      0 - WE ALLOCATED IT AS OLD - LETS GO HOME
*
         LA    R5,OLD2
         USING S99RB,R5
         CLC   S99ERROR,=X'1708'  SEE IF DSNAME NOT FOUND
         BE    JDFOUTL2           ... OK NO ERROR AFTER ALL
         DROP  R5
*
         WTO   'JDF OUTLIST ALLOCATE OLD FAILED',ROUTCDE=11
         DC    H'0'
         TITLE 'OUTLIST ALLOCATE THE DDNAME/DSNAME AS NEW'
*
*        OK - MUST NOT HAVE ONE SO LET'S BUILD A NEW OUTLIST DATASET
*
*        ALLOCATE THE THE OUTLIST DATASET AS NEW, CATLG
*
         USING S99TUNIT,R5
*
JDFOUTL2 DS    0H
*
         LA    R1,NEW2RB     LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
*
         LTR   R15,R15       CHECK RETURN CODE
         BZ    JDFOUTL3      0 - WE ALLOCATED OK
         SPACE
         WTO   'JDF OUTLIST ALLOCATE NEW FAILED',ROUTCDE=11
         DC    H'0'
*
JDFOUTL3 DS    0H
*SPPROF3 LA    R1,MSGGOOD1     - TELL THE USER WE CREATED A NEW ONE
*        LA    R0,L'MSGGOOD1
*        SPACE
*        TPUT  (R1),(R0)     WRITE OUT RESULTS OF NEW ALLOCATION
JDFOUTL4 DS    0H
         LR    R3,R13             START ADDRESS OF GETMAINED AREA
         L     R2,GETMLENG        LENGTH OF GETMAINED AREA
         L     R13,4(,R13)        PICK UP CALLING SAVE AREA
         FREEMAIN R,LV=(2),A=(3)
         LM    R14,R12,12(R13)
         SR    R15,15
         BR    R14
         TITLE 'SVC 99 REQUEST BLOCKS'
*
         DS    0F
FREEMASK DS    F
         DC    AL1(20),AL1(S99VRBUN),X'6000',A(0),A(0),A(0),A(0)
FREETXT  DC    A(FREETU1)
         DC    A(FREETU2)
FREELEN  EQU   *-FREEMASK
FREETU1  DC    AL2(DUNDDNAM),AL2(1),AL2(7),CL7'OUTLIST'
FREETU2  DC    AL2(DUNUNALC),AL2(0)
*
         DS    0F
OLD2TU1  DC    AL2(DALDDNAM),AL2(1),AL2(7),CL7'OUTLIST'
OLD2TU2  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(DA08OLD)
OLD2TU3  DC    AL2(DALNDISP),AL2(1),AL2(1),AL1(DA08KEEP)
OLD2TU4  DC    AL2(DALRLSE),AL2(0)
         DS    0F
*
RB2MASK  DS    F
         DC    AL1(20),AL1(S99VRBAL),X'6000',A(0),A(0),A(0),A(0)
         DC    A(OLD2TU1)
         DC    A(OLD2TU2)
         DC    A(OLD2TU3)
         DC    A(OLD2TU4)
         DS    F
         DC    AL2(DALDSNAM),AL2(1)
         DS    XL2
         DC    CL44' '
RB2LEN   EQU   *-RB2MASK
*
         DS    0F
NEW2TU1  DC    AL2(DALDDNAM),AL2(1),AL2(7),CL7'OUTLIST'
NEW2TU2  DC    AL2(DALSTATS),AL2(1),AL2(1),AL1(DA08NEW)
NEW2TU3  DC    AL2(DALNDISP),AL2(1),AL2(1),AL1(DA08CAT)
NEW2TU4  DC    AL2(DALTRK),AL2(0)
NEW2TU5  DC    AL2(DALPRIME),AL2(1),AL2(3),AL3(30)
NEW2TU6  DC    AL2(DALSECND),AL2(1),AL2(3),AL3(30)
NEW2TU7  DC    AL2(DALVLSER),AL2(1),AL2(6),C'STOR01'
NEW2TU8  DC    AL2(DALUNIT),AL2(1),AL2(5),C'SYSDA'
NEW2TU9  DC    AL2(DALBLKSZ),AL2(1),AL2(2),AL2(13300)
NEW2TU10 DC    AL2(DALDSORG),AL2(1),AL2(2),X'4000'
NEW2TU11 DC    AL2(DALLRECL),AL2(1),AL2(2),AL2(133)
NEW2TU12 DC    AL2(DALRECFM),AL2(1),AL2(1),X'90'
*
NEW2MASK DS    F
         DC    AL1(20),AL1(S99VRBAL),X'6000',A(0),A(0),A(0),A(0)
         DC    A(NEW2TU1)
         DC    A(NEW2TU2)
         DC    A(NEW2TU3)
         DC    A(NEW2TU4)
         DC    A(NEW2TU5)
         DC    A(NEW2TU6)
         DC    A(NEW2TU8)
         DC    A(NEW2TU9)
         DC    A(NEW2TU10)
         DC    A(NEW2TU11)
         DC    A(NEW2TU12)
         DS    F
NEWMLEN  EQU   *-NEW2MASK
         EJECT
GETMLENG DC    A(WORKLENG)
         LTORG
WORKAREA DSECT
         DS    18F
*
FREERB   DS    F
FREE     DS    F
         DS    F
FREEPTR  DS    F
         DS    F
         DS    F
FREE1PTR DS    F
FREE2PTR DS    F
*
OLD2RB   DS    F
OLD2     DS    F
         DS    F
TXT2PTR  DS    F
         DS    F
         DS    F
OLD2TXT  DS    F
         DS    F
         DS    F
         DS    F
DSN2PTR  DS    F
DSN2TU   DS    XL4
OUTLDSNL DS    XL2
OUTLDSN  DS    CL44
*
         DS    0F
NEW2RB   DS    F
NEW2     DS    F
         DS    F
NEW2PTR  DS    F
         DS    F
         DS    F
NEW2TXT  DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
NEW2DSN  DS    F
WORKLENG EQU   *-WORKAREA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJDAP08
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
         END
REPRINT  TITLE 'JDF -  ALLOCATE REPRINT DATASET'
ALLOREPR CSECT
ALLOREPR AMODE 31
ALLOREPR RMODE ANY
*
         PRINT OFF
         COPY  JDFMACS
         COPY  SPFMACS
         PRINT ON
         PRINT GEN
*
         USING PSA,0
*
*
         USING *,12,11
*
         SAVE  (14,12),,ALLOREPR_03/21/86_BRIAN_COOK_&SYSTIME_&SYSDATE
*
         LR    R12,R15            SET BASE REGISTER
         LA    R11,4095
         LA    R11,1(R11,R12)     SET BASE 2
         L     R7,0(,R1)      SAVE PARM
*
         L     R2,GETMLENG
         GETMAIN R,LV=(2)
*
         ST    R13,4(R1)          STORE BACKWARDS POINTER
         ST    R1,8(R13)          STORE FORWARD POINTER
         LR    R13,R1             DSECT BASE
         USING WORKAREA,13
*
*
** INITIALIZE FREE REQUEST BLOCK
*
         MVC   FREERB(FREELEN),FREEMASK
         LA    R1,FREE
         ST    R1,FREERB
         OI    FREERB,X'80'
         LA    R1,FREE1PTR
         ST    R1,FREEPTR
         OI    FREE2PTR,X'80'  END PARAMETER FLAG
*
** INITIALIZE ALLOCATE REQUEST BLOCK
*
         MVC   ALLORB(ALLOLEN),ALLOMASK
         LA    R1,ALLO
         ST    R1,ALLORB
         OI    ALLORB,X'80'
         LA    R1,ALLOTXT
         ST    R1,ALLOPTR
         LA    R1,ALLOTU1
         ST    R1,ALLOTXT
         LA    R1,ALLOTU2
         ST    R1,ALLOTXT+4
         LA    R1,ALLOTU3
         ST    R1,ALLOTXT+8
         LA    R1,ALLOTU4
         ST    R1,ALLOTXT+12
         LA    R1,ALLOTU5
         ST    R1,ALLOTXT+16
         LA    R1,ALLOTU6
         ST    R1,ALLOTXT+20
         LA    R1,ALLOTU7
         ST    R1,ALLOTXT+24
         LA    R1,ALLOTU8
         ST    R1,ALLOTXT+28
         LA    R1,ALLOTU9
         ST    R1,ALLOTXT+32
         OI    ALLOTXT+32,X'80'
*
         L     R1,PSATOLD
         USING TCB,1
         L     R1,TCBTIO
         USING TIOT1,1
         LA    R1,TIOENTRY
         USING TIOENTRY,1
         SR    R15,R15
         USING DDLINE,8
*
REPRTIO  DS    0H
         CLC   TIOEDDNM(8),=CL8'REPRINT'
         BE    REPRTFRE
*
         CLC   0(4,R1),=X'00000000'      END OF TIOT?
         BE    REPRTISP                  YES, GO DO ISPLINK
*
         IC    R15,TIOELNGH              LENGTH OF THIS ENTRY
         LA    R1,0(R1,R15)              POINT TO NEXT ENTRY
         B     REPRTIO                   KEEP LOOPING
*
         DROP  1
*
         TITLE 'FREE THE DDNAME'
REPRTFRE DS    0H
*
*
*        FREE THE REPRINT DDNAME
*
         LA    R1,FREERB     LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
*
*
         TITLE 'DEFINE THE VARIABLES AND DISPLAY THE SCREEN'
REPRTISP DS    0H
*
*
*        ALLOCATE THE REPRINT DATASET AS OLD
*
         VDEFINE RCLASS,1
         VDEFINE RCCO,1
         VDEFINE RDEST,8
         VDEFINE RCOPIES,3
*
         MVC    RCLASS(1),DDCLASS
         CLI    RCLASS,C'X'
         BNE    *+8
         MVI    RCLASS,C'A'
         VPUT   RCLASS
*
         MVC    RDEST(8),=CL8'N1'
         VPUT   RDEST
*
         PACK   DWORD,DDDRECL+3(3)
         CVB    R15,DWORD
         STCM   R15,3,RECLENG
         STCM   R15,3,BLOCKSIZ
*
         MVI    RCCO,C'N'        DEFAULT CARRIAGE CONTROL IS NONE
*
         CLI    DDDRECF,C'U'
         BE     REPRRECU
         CLI    DDDRECF+1,C'A'   ASA CARRIAGE CONTROL
         BE     REPRRECA
         CLI    DDDRECF+2,C'A'   ASA CARRIAGE CONTROL
         BE     REPRRECA
         CLI    DDDRECF+1,C'M'   MACHINE CARRIAGE CONTROL
         BE     REPRRECM
         CLI    DDDRECF+2,C'M'   MACHINE CARRIAGE CONTROL
         BE     REPRRECM
*
         B      REPRPUT2
*
REPRRECA DS    0H
*
         MVI    RCCO,C'A'       ANSI CARRIAGE CONTROL
         B      REPRPUT2
*
REPRRECM DS    0H
*
         MVI    RCCO,C'M'       MACHINE CARRIAGE CONTROL
         B      REPRPUT2
*
REPRRECU DS    0H
*
         MVC    RECLENG(2),=H'133'
         MVC    BLOCKSIZ(2),=H'133'
*
         B      REPRPUT2
*
REPRPUT2 DS    0H
*
         VPUT   RCCO
         MVC    RCOPIES(3),DDCOPIES
         CLI    RCOPIES,C' '
         BNE    *+8
         MVI    RCOPIES,C'0'
         CLI    RCOPIES+1,C' '
         BNE    *+8
         MVI    RCOPIES+1,C'0'
         VPUT   RCOPIES
*
         VGET   RCLASS
         VGET   RCCO
         VGET   RDEST
         VGET   RCOPIES
*
         DISPLAY JDFREPR,ENDKEY=REPREND
*
         VPUT   RCLASS
         VPUT   RDEST
*
         TITLE 'SET UP CARRIAGE CONTROL'
REPRTCC2 DS    0H
*
         CLI   RCCO,C'A'
         BE    REPRFMA
         CLI   RCCO,C'M'
         BE    REPRFMM
*
REPRFMN  DS    0H
*
         MVI    RECFM,X'90'     SET DEFAULT RECFM = FB
         B      REPRTIOA
*
REPRFMA  DS    0H
*
         MVI    RECFM,X'94'     SET DEFAULT RECFM = FBA
         B      REPRTIOA
*
REPRFMM  DS    0H
*
         MVI    RECFM,X'92'     SET DEFAULT RECFM = FBM
         B      REPRTIOA
*
         TITLE 'FILL IN THE TEXT UNITS'
REPRTIOA DS    0H
*
         PACK   DWORD,RCOPIES
         CVB    R15,DWORD
         STC    R15,COPIES
*
         B      JDFREPR2        GO DO THE ALLOCATE
*
         TITLE 'ALLOCATE THE DDNAME'
*
*
         USING S99TUNIT,R5
*
JDFREPR2 DS    0H
*
         LA    R1,ALLORB     LOAD PARAMETER POINTER FOR SVC99
         DYNALLOC            ISSUE SVC99
*
         LTR   R15,R15       CHECK RETURN CODE
         BZ    JDFREPR3      0 - WE ALLOCATED OK
         SPACE
         WTO   'JDF REPRINT ALLOCATE NEW FAILED',ROUTCDE=11
         DC    H'0'
*
JDFREPR3 DS    0H
*SPPROF3 LA    R1,MSGGOOD1     - TELL THE USER WE CREATED A NEW ONE
*        LA    R0,L'MSGGOOD1
*        SPACE
*        TPUT  (R1),(R0)     WRITE OUT RESULTS OF NEW ALLOCATION
JDFREPR4 DS    0H
*
         BAL   R7,DLTVARS
         SR    R8,R8
*
JDFREPRC DS    0H
*
         LR    R3,R13             START ADDRESS OF GETMAINED AREA
         L     R2,GETMLENG        LENGTH OF GETMAINED AREA
         L     R13,4(,R13)        PICK UP CALLING SAVE AREA
         FREEMAIN R,LV=(2),A=(3)
         LR    R15,R8
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
*
REPREND  DS    0H
*
         BAL   R7,DLTVARS
*
         LA    R8,12
         B     JDFREPRC
DLTVARS  DS    0H
*
         VDELETE RCOPIES
         VDELETE RCLASS
         VDELETE RDEST
         VDELETE RCCO
*
         BR    R7
*
         TITLE 'SVC 99 REQUEST BLOCKS'
*
         DS    0F
FREEMASK DS    F
         DC    AL1(20),AL1(S99VRBUN),X'6000',A(0),A(0),A(0),A(0)
FREETXT  DC    A(FREETU1)
         DC    A(FREETU2)
FREELEN  EQU   *-FREEMASK
FREETU1  DC    AL2(DUNDDNAM),AL2(1),AL2(7),CL7'REPRINT'
FREETU2  DC    AL2(DUNUNALC),AL2(0)
*
ALLOMASK DS    F
         DC    AL1(20),AL1(S99VRBAL),X'6000',A(0),A(0),A(0),A(0)
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    0F
         DC    AL2(DALDDNAM),AL2(1),AL2(7),CL7'REPRINT'
         DS    0F
         DC    AL2(DALBLKSZ),AL2(1),AL2(2)
         DS    XL2
         DS    0F
         DC    AL2(DALDSORG),AL2(1),AL2(2),X'4000'
         DS    0F
         DC    AL2(DALLRECL),AL2(1),AL2(2)
         DS    XL2
         DS    0F
         DC    AL2(DALRECFM),AL2(1),AL2(1)
         DS    XL1
         DS    0F
         DC    AL2(DALSYSOU),AL2(1),AL2(1)
         DS    CL1
         DS    0F
         DC    AL2(DALSUSER),AL2(1),AL2(8)
         DS    CL8
         DS    0F
         DC    AL2(DALCLOSE),AL2(0)
         DS    0F
         DC    AL2(DALCOPYS),AL2(1),AL2(1)
         DS    XL1
ALLOLEN  EQU   *-ALLOMASK
*
GETMLENG DC    A(WORKLENG)
*
         LTORG
WORKAREA DSECT
         DS    18F
*
RCOPIES  DS    CL3
RCCO     DS    CL1
ISPARMS  DS    8F
*
DWORD    DS    D
*
FREERB   DS    F
FREE     DS    F
         DS    F
FREEPTR  DS    F
         DS    F
         DS    F
FREE1PTR DS    F
FREE2PTR DS    F
*
ALLORB   DS    F
ALLO     DS    F
         DS    F
ALLOPTR  DS    F
         DS    F
         DS    F
ALLOTXT  DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    F
         DS    0F
ALLOTU1  DS    XL13
         DS    0F
ALLOTU2  DS    XL6
BLOCKSIZ DS    XL2
         DS    0F
ALLOTU3  DS    XL8
         DS    0F
ALLOTU4  DS    XL6
RECLENG  DS    XL2
         DS    0F
ALLOTU5  DS    XL6
RECFM    DS    XL1
         DS    0F
ALLOTU6  DS    XL6
RCLASS   DS    CL1
         DS    0F
ALLOTU7  DS    XL6
RDEST    DS    CL8
         DS    0F
ALLOTU8  DS    XL4
         DS    0F
ALLOTU9  DS    XL6
COPIES   DS    XL1
*
WORKLENG EQU   *-WORKAREA
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         EJECT
         IKJDAP08
*
*   ADDED TO SUPPORT STEPNAME CHECKING AND DDNAME SCAN
*
         PRINT NOGEN
         IHAPSA
         IKJTCB
         IEFTIOT1
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
         DDLINE
*
         END
