//ASQCCSPO  JOB (X0002,QCC,ASQCC),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=W,NOTIFY=ASQCC
/*JOBPARM L=999
//ASM     EXEC PGM=IEV90,REGION=2048K,PARM='OBJECT,NODECK,TERM'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DISP=SHR,DSN=TECH.SERV.MACLIB
//         DD  DISP=SHR,DSN=SYS1.HASPSRC
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
APPLSPO  TITLE '* * *  SPO - VTAM SECONDARY PROGRAM OPERATOR  * * *'
***********************************************************************
*                                                                     *
*  PURPOSE - PROVIDE VTAM SECONDARY PROGRAM OPERATOR FOR USE IN TSO   *
*            COMMAND OR AS A STAND ALONE VTAM APPLICATION PROGRAM.    *
*                                                                     *
*  OPERATION - SPO OPENS ITS OWN ACB, AND USING TPUT/TGET AND         *
*              SENDCMD/RCVCMD ALLOWS AN AUTHORIZED TSO USER TO        *
*              BE A VTAM SECONDARY PROGRAM OPERATOR.  THE COMMANDS    *
*              AND RESPONSES ARE ALSO RECORDED ON SYSLOG.             *
*                                                                     *
*  WRITTEN BY DOUG MOORE - SEPTEMBER 1978                             *
*                                                                     *
*  MODIFIED BY DOUG MOORE - JANUARY 1980                              *
*     SUPPORT ADDED FOR * = REPEAT LAST COMMAND                       *
*                       ? = SHOW LAST COMMAND                         *
*                       X = PCF EXIT                                  *
*                                                                     *
*  MODIFIED BY DOUG MOORE - AUGUST 1980                               *
*     SUPPORT ADDED FOR MULTIPLE SPO'S.  CURRENT MAX OF 3.            *
*                                                                     *
*  MODIFIED BY DOUG MOORE - JULY 1981                                 *
*     SUPPORT ADDED FOR PFKEYS.                                       *
*                                                                     *
*  MODIFIED BY BRIAN COOK - SEPTEMBER 17, 1984                        *
*     CHANGED TO RUN UNDER APPLMON, ADDED 2 BASE REGISTERS.           *
*                                                                     *
***********************************************************************
         EJECT
         MACRO
         VPUT  &VAREA,&VLEN
         LA    R0,&VLEN
         LA    R1,&VAREA
         L     R15,TCBUVPUT
         BALR  R14,R15
         MEND
         EJECT
SPO      CSECT
         USING *,12,11,10
         STM   R14,R12,12(R13)
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R13              SAVE PREVIOUS RSA POINTER
         LR    R11,R12             LOAD BASE
         A     R11,FOURK                     REGISTER 2
         LR    R10,R11             LOAD BASE
         A     R10,FOURK                     REGISTER 3
*
         USING PSA,0
         L     R1,PSATOLD
         USING TCB,1
         L     R1,TCBUSER
         USING TCBUVTAM,1
         LA    R13,TCBUSAV2
         DROP  1
         USING TCBUSAV2,13
*
         ST    R2,4(R13)           CHAIN SAVE AREAS
         ST    R13,8(R2)           CHAIN SAVE AREAS
*
         B     POFAUTH
*
FOURK    DC    F'4096'
         EJECT
POFAUTH  DS    0H
         OPEN  (POFACB)            OPEN SPO ACB
         LTR   R15,R15             Q. OPEN OK
         BZ    POFOPNOK            ...YES, CONTINUE
         SPACE
POFOPNF  DS    0H
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBOFLGS,X'02'      Q. POSSIBLE ACB ALREADY OPEN
         BNE   POFOPNF2            ...NO, SOMETHING ELSE
         CLI   ACBERFLG,X'58'      Q. POSSIBLE ACB ALREADY OPEN
         BNE   POFOPNF2            ...NO, SOMETHING ELSE
         CLC   =CL8'POF003',POFACBAI+1   Q. IS THIS THE LAST ALTERNATE
         BE    POFMAXU                   ...YES, THAT WAS THE LAST ACB
         AP    POFACB#,=PL1'1'     GET NEXT ACB NUMBER
         UNPK  POFACBAI+4(3),POFACB#(2)
         OI    POFACBAI+6,X'F0'
         B     POFAUTH             TRY AGAIN
POFMAXU  DS    0H
         WTO   '* MAXIMUM POF USERS ALREADY STARTED *',ROUTCDE=11
         B     POFRTN              GO AWAY
         SPACE
POFOPNF2 DS    0H
         WTO   'OPEN FAILED FOR VTAM SPO ACB',ROUTCDE=11
         B     POFRTN              OPEN FAILED SO GET OUT
         SPACE
         DROP  R2
         EJECT
POFOPNOK DS    0H
*        GTSIZE                    , GET SCREEN SIZE
*        STC   R0,GTSIZE0          SAVE FOR LATER TEST
*        STC   R1,GTSIZE1          SAVE FOR LATER TEST
         MVC   WTOLTH,=AL2(33)     LENGTH OF MESSAGE
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOTXT+7(14),=C' LOGGED ON TO '
         MVC   WTOTXT+21(8),POFACBAI+1   PUT ACB IN MESSAGE
         WTO   MF=(E,WTOLIST)      WRITE LOGON TO SYSLOG
         SPACE
POFRCV1  DS    0H
         RCVCMD RPL=POFRPLRC       ISSUE FIRST RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRQCMD            ...YES, GO REQUEST COMMANDS
         BAL   R9,ABEND           ...NO, GIVE UP
         SPACE 2
POFRQCMD DS    0H
         LA    R0,SPOTEXT          SPO SCREEN
         LA    R1,SPOSCRSZ         SPO SCREEN SIZE
         LA    R14,POFTEXT         SPO SCREEN
         LR    R15,R1
*
         MVCL  R14,R0
*
POFSENDD DS    0H
         LA    R1,POFTEXT
         LA    R0,SPOSCRSZ
         L     R15,TCBUVPUT
         BALR  R14,R15             CLEAR REG
*
         B     POF3270             GO READ THE INPUT
*
POFRQCHK DS    0H
         OC    POFIN,=CL80' '      MAKE UPPERCASE FOR WRITING TO SYSLOG
         CLC   =CL3'END',POFIN     Q. THE END
         BE    POFEOJ              ...YES, GO TO EOJ
         CLC   =CL4'HELP',POFIN    Q. HELP WANTED
         BE    POFHELP             ...YES, GO DO HELP
         SPACE
         CLI   POFIN,C'*'          Q. WANT TO DO SAME THING
         BNE   POFCHKQ             ...NO, GO CHECK FOR QUESTION MARK
         L     R1,SAVECMDL         RELOAD LENGTH
         MVC   POFIN,SAVECMD       RELOAD COMMAND
         B     POFDOCMD            GO DO COMMAND
         SPACE
POFCHKQ  DS    0H
         CLI   POFIN,C'?'          Q. WANT TO SEE LAST COMMAND
         BNE   POFSTORE            ...NO, GO SAVE THIS INPUT
*        L     R1,SAVECMDL         RELOAD LENGTH
*        VPUT  SAVECMD,(1)         WRITE LAST COMMAND BACK OUT
         B     POFRQCMD            GO SEE WHAT TO DO
         SPACE
POFSTORE DS    0H
         ST    R1,SAVECMDL         SAVE LENGTH
         MVC   SAVECMD,POFIN       SAVE COMMAND
POFDOCMD DS    0H
         SPACE
* ISSUE THE COMMAND
         LA    R2,POFRPLSC         POINT TO SENDCMD RPL
         USING IFGRPL,R2
         AH    R1,=H'4'            ADD HEADER LENGTH TO COMMAND LENGTH
         ST    R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  R2
         STH   R1,WTOLTH           STORE LENGTH IN WTO
         MVC   WTOTXT(L'POFIN),POFIN   MOVE COMMAND TO WTO
         WTO   MF=(E,WTOLIST)      WRITE COMMAND TO LOG
*
         TIME  BIN
         ST    R0,RCVTIME
*
         LA    R1,O05-SPOTEXT      FIRST LINE FOR OUTPUT
         LA    R1,POFTEXT(R1)      POINT TO IT
         ST    R1,POFIRST          SET THIS FOR RECEIVE EXIT
         LA    R1,O17-SPOTEXT      LAST LINE FOR OUTPUT
         LA    R1,POFTEXT(R1)      POINT TO IT
         ST    R1,POFLAST          SET THIS FOR RECEIVE EXIT
*
         SENDCMD RPL=POFRPLSC
         LTR   R15,R15             Q. SUCCESSFUL
         BNZ   POFSNDAB            ...NO, ABEND
POFWAIT2 DS    0H
*
* WAIT 2 SEC TO ALLOW THE RECEIVE COMMAND EXIT TO PROCESS RESPONSES
*
         STIMER WAIT,BINTVL=TWOSEC
POFTTIME DS    0H
*
*  WAIT 2 SECONDS AFTER THE LAST COMMAND RESPONSE WAS RECEIVED
*
         TIME  BIN
         ST    R0,TSTTIME
*                              CLEAR THE SIGN BITS
         MVI   TSTTIME,0
         MVI   RCVTIME,0
         L     R14,TSTTIME     MY TIME
         L     R15,RCVTIME     COMMAND RESPONSE RECEIVED TIME
         A     R15,TWOSEC      BUMP BY 2 SECONDS
         CR    R14,R15         IF MY TIME IS LESS
         BL    POFWAIT2        WAIT 2 MORE SECONDS
*
         B     POFSENDD            ...YES, GO GET ANOTHER COMMAND
*
TWOSEC   DC    F'200'
TSTTIME  DS    F
POFSNDAB DS    0H
         BAL   R9,ABEND           ...NO, GIVE UP
         EJECT
POF3270  DS    0H
*
         LA    R1,POFIN
         LA    R0,80
         L     R15,TCBUVGET
         BALR  R14,R15             CLEAR REG
         L     R15,TCBURPLA        POINT TO RECEIVE RPL
         USING IFGRPL,15
         L     R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  15
*
         LTR   R1,R1               Q. ANY INPUT
         BZ    POFRQCMD            ...NO, GO ASK AGAIN
         LA    R15,AIDTABLE        POINT TO AID TABLE
         LA    R14,NUMAIDS         NUMBER OF AIDS I MIGHT SEE
POFAIDLP DS    0H
         CLC   POFIN(1),0(R15)     Q. IS THIS THE AID
         BE    POFGAID             ...YES, PROCEED
         LA    R15,4(0,R15)        POINT TO NEXT ENTRY
         BCT   R14,POFAIDLP        LOOP UNTIL DONE
*        NO HITS POINTS TO DEFAULT ENTRY
         SPACE
POFGAID  DS    0H
         L     R2,0(0,R15)         GET ADDRESS OF AID FUNCTION TABLE
         CLI   0(R2),X'FF'         Q. ENTER KEY
         BNE   POFNOTEN            ...NO, PROCEED
         MVC   POFIN(74),POFIN+6   GET RID OF 3270 STUFF
         SH    R1,=H'6'            FIX LENGTH
         BNP   POFRQCMD            THERE WAS NO INPUT, GET NEW CMD
         B     POFRQCHK            RETURN TO NORMAL FLOW
POFNOTEN DS    0H
         MVC   WORKCMD,POFIN       SAVE INPUT TEMPORARILY
         MVC   POFIN,BLNKLINE      BLANK OUT BUFFER
         CLI   0(R2),X'00'         Q. ANY PROCESSING
         BNE   POFAIDP             ...YES, PROCEED
POFNOOPS DS    0H
         SLR   R3,R3               CLEAR REG FOR EXECUTE
         IC    R3,1(0,R2)          GET LENGTH FOR EXECUTE MOVE
         EX    R3,AIDMVC           MOVE IN COMMAND
         LA    R1,1(0,R3)          PUT REAL LENGTH IN R1
         B     POFRQCHK            RETURN TO NORMAL FLOW
AIDMVC   MVC   POFIN(0),2(R2)      MOVE COMMAND TO BUFFER
BLDMVC   MVC   0(0,R4),WORKCMD+6   BUILD NEW COMMAND
         SPACE
POFAIDP  DS    0H
         CLI   0(R2),X'01'         Q. FURTHER PROCESSING REQUIRED
         BNE   POFAIDF             ...NO, PROCEED
         SH    R1,=H'6'            CORRECT LENGTH
         BNP   POFNOOPS            BRANCH IF NO OPERANDS
         SLR   R3,R3               CLEAR REG FOR EXECUTE
         IC    R3,1(0,R2)          GET LENGTH FOR EXECUTE MOVE
         EX    R3,AIDMVC           MOVE IN 1ST PART OF COMMAND
         LA    R4,POFIN+1(R3)      POINT TO END OF THIS PIECE
         BCTR  R1,0                DECREMENT FOR EXECUTED MOVE
         EX    R1,BLDMVC           MOVE IN REMAINDER OF COMMAND
         LA    R1,2(R1,R3)         ADD NEW PART TO TOTAL(+2 FOR EX MVC)
         B     POFRQCHK            RETURN TO NORMAL FLOW
         SPACE
POFAIDF  DS    0H
         LA    R15,BADAID          POINT TO UNSUPPORTED AID
         B     POFGAID             THROW IN THE TOWEL
         EJECT
POFHELP  DS    0H
         LA    R1,HLPTEXT          HELP SCREEN
         LA    R0,HLPSCRSZ         HELP SCREEN LENGTH
         L     R15,TCBUVPUT
         BALR  R14,R15             CLEAR REG
         LA    R1,TCBUFILL
         LA    R0,80
         L     R15,TCBUVGET
         BALR  R14,R15             CLEAR REG
         B     POFRQCMD            RETURN
         SPACE
         EJECT
ABEND    DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)
         EJECT
POFEOJ   DS    0H
         CLOSE (POFACB)            CLOSE THE ACB
         LTR   R15,R15             Q. CLOSE SUCCESSFUL
         BZ    POFCLSOK            ...YES, PROCEED
         MVC   POFOUT(29),=C'CLOSE FAILED FOR VTAM SPO ACB'
         VPUT  POFOUT,29
         SPACE
POFCLSF  DS    0H
         LA    R2,POFACB           POINT TO ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'4C'      Q. MORE MESSAGES OUSTANDING
         BNE   POFCLSF2            ...NO, PRESS ON
         MVC   POFOUT(27),=C'OUTSTANDING MESSAGES PURGED'
         VPUT  POFOUT,27
         B     POFEOJ              TRY CLOSE AGAIN
         SPACE
POFCLSF2 DS    0H
         MVC   POFDBLWK+1(1),ACBOFLGS   GET OPEN FLAGS
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),ACBERFLG   GET ERROR FLAGS
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG1(4),POFDBLWK    PUT IN MESSAGE
         VPUT  POFMSG1,L'POFMSG1
         B     POFRTN              CLOSE FAILED SO GET OUT
         SPACE
         DROP  R2
         SPACE 2
POFCLSOK DS    0H
         MVC   WTOLTH,=AL2(34)     LENGTH OF MESSAGE
         MVC   WTOTXT(7),POFUSRID  PUT USERID IN MESSAGE
         MVC   WTOTXT+7(15),=C' LOGGED OFF OF '
         MVC   WTOTXT+22(8),POFACBAI+1    PUT ACB IN MESSAGE
         WTO   MF=(E,WTOLIST)      WRITE LOGOFF TO SYSLOG
         SPACE
POFRTN   DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RESTORE REGISTERS AND RETURN
         SPACE
         LTORG
         DROP  12
         DROP  11
         DROP  10
         TITLE 'SPO COMMAND RESPONSE RECEIVE EXIT'
POFRCVEX DS    0H
         LR    R12,R15             GET NEW BASE
         USING POFRCVEX,12,11,10
         LR    R11,R12             LOAD BASE
         A     R11,FOURK2                    REGISTER 2
         LR    R10,R11             LOAD BASE
         A     R10,FOURK2                    REGISTER 3
         LR    R9,R14              SAVE RETURN REG
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2           ADDRESS RPL
         LA    R13,POFRCVSA        POINT TO RSA
*
*  SET TIME TO INDICATE WHEN RCVCMD EXIT WAS ENTERED
*
         TIME  BIN
         ST    R0,RCVTIME
*
         CHECK RPL=POFRPLRC        CHECK RCVCMD RPL
         LTR   R15,R15             Q. SUCCESSFUL
         BZ    POFRCVA             ...YES, PROCEED
         BAL   R14,RCVEABND        ...NO, GIVE UP
         SPACE 3
POFRCVA  DS    0H
         CLC   =XL2'100D',RPLRTNCD   Q. ACB CLOSED
         BE    POFRCVR               ...YES, DONT DO ANY MORE
         CLC   =XL2'1470',RPLRTNCD   Q. ACB CLOSED
         BE    POFRCVR               ...YES, DONT DO ANY MORE
         TM    POFCMDI+1,X'C0'     Q. POSSIBLE NO DATA
         BC    9,POFRCVB           ...NO, CONTINUE (ONES OR ZEROS)
         TM    POFCMDI+1,X'80'     Q. END OF MULTI-LINE, NO DATA
         BO    POFRCVI             ...YES, NO OUTPUT, ISSUE RCVCMD
POFRCVB  DS    0H
         L     R15,RPLRLEN         GET LENGTH OF REPLY
         BCTR  R15,0               MINUS 1 FOR EXECUTED MOVE
         L     R1,POFIRST          LOCATION TO PUT THIS IN
         C     R1,POFLAST          ON LASTLINE?
         BNL   POFRCVN             YUP
         EX    R15,RSPMVC          A(REPLY)
         LA    R1,O08-O07(,R1)     BUMP TO NEXT LOCATION
         ST    R1,POFIRST          LOCATION TO PUT THIS IN
         SPACE
POFRCVN  DS    0H
         MVC   WTOTXT(L'POFIMSG),POFIMSG   MOVE RESPONSE TO WTO
         WTO   MF=(E,WTOLIST)      WRITE RESPONSE TO LOG
POFRCVI  DS    0H
         RCVCMD RPL=POFRPLRC       ISSUE ANOTHER RCVCMD
         LTR   R15,R15             Q. ACCEPTED
         BZ    POFRCVR             ...YES, RETURN
         BAL   R14,RCVEABND        ...NO, GIVE UP
POFRCVR  DS    0H
         LR    R14,R9              RESTORE RETURN REG
         BR    R14                 RETURN
RSPMVC   MVC   6(0,R1),POFIMSG     A(REPLY)
POFIRST  DS    F
POFLAST  DS    F
FOURK2   DC    F'4096'
         SPACE 3
RCVEABND DS    0H
         LA    R1,1                SET DUMP OPTION
         SLL   R1,31
         ALR   R1,R15              SET ABEND CODE
         ABEND (1)                 THIS ABEND WILL CAUSE A SVC DUMP
*                                     ENTITLED 'VTAM IRB ABEND'
         SPACE
POFRCVSA DS    18F                 RSA FOR RCVCMD EXIT
RCVTIME  DS    F
         LTORG
         DROP  R2,R12,11,10
         SPACE
         EJECT
POFLERAD DS    0H
POFSYNAD DS    0H
         LR    R12,R15             SET UP BASE
         USING POFLERAD,R12,11,10
         LR    R11,R12             LOAD BASE
         A     R11,FOURK3                    REGISTER 2
         LR    R10,R11             LOAD BASE
         A     R10,FOURK3                    REGISTER 3
         LR    R2,R1               SAVE RPL POINTER
         USING IFGRPL,R2
         LR    R9,R14              SAVE RETURN ADDRESS
         CLC   =XL2'100D',RPLRTNCD   Q. IS THIS PSEUDO ERROR (ACB CLSD)
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'146E',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1471',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         CLC   =XL2'1470',RPLRTNCD   Q. IS THIS PSEUDO ERROR
         BE    POFNOERR            ...YES, NOT REALLY AN ERROR
         SPACE
         MVC   POFOUT(14),=C'UNKNOWN FAILED'
         TM    RPLREQ,RPLRVCMD     Q. RCVCMD FAILED
         BNO   POFREQ2             ...NO, TRY SENDCMD
         MVC   POFOUT(7),=C'RCVCMD '   SHOW RCVCMD
         B     POFREQST
POFREQ2  DS    0H
         TM    RPLREQ,RPLSDCMD     Q. SENDCMD FAILED
         BNO   POFREQST            ...NO, THATS IT
         MVC   POFOUT(7),=C'SENDCMD'   SHOW SENDCMD
POFREQST DS    0H
         VPUT  POFOUT,14
POFLEMSG DS    0H
         MVC   POFDBLWK+1(1),RPLRTNCD   GET RETURN CODE
         UNPK  POFDBLWK(1),POFDBLWK+1(1)   PREPARE FOR CONVERSION
         MVC   POFDBLWK+3(1),RPLFDB2    GET FEEDBACK FIELD
         UNPK  POFDBLWK+2(1),POFDBLWK+3(1) PREPARE FOR CONVERSION
         NC    POFDBLWK(4),=X'0F0F0F0F'    PREPARE FOR TRANSLATE
         TR    POFDBLWK(4),POFTRTBL     TRANSLATE
         MVC   POFMSG2(4),POFDBLWK    PUT IN MESSAGE
         VPUT  POFMSG2,L'POFMSG2
         SPACE
POFLERTN DS    0H
         LA    R15,BIT0            INDICATE SENDCMD/RCVCMD FAILURE
         LR    R14,R9              RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
POFNOERR DS    0H
         SLR   R15,R15             SET GOOD RETURN CODE
         LR    R14,R9              RELOAD RETURN REG
         BR    R14                 RETURN
         SPACE
LEABEND  DS    0H
         LA    R15,BIT0+BIT1       INDICATE SENDCMD/RCVCMD FAILURE
*                                     PLUS TPUT FAILURE
         LR    R14,R9              RELOAD RETURN REG
         BR    R14                 RETURN
FOURK3   DC    F'4096'
         LTORG
         TITLE 'A P P L M O N - SPO DISPLAY SCREEN '
*
HLPTEXT  DS    0H
         DC    X'7EC2'
    DC X'1140401D60',CL80' '
    DC X'11C1501DE8',23C'-',CL32'APPLMON VTAM OPERATOR DISPLAY',24C'-'
         DC    C' '
    DC X'11C2601DE8',CL13'COMMAND ===>',X'1D40',X'13',CL67' '
    DC X'11C3F01D60',CL80' '
    DC X'11C5401D60',CL80' PFK1  =  HELP'
    DC X'11C6501D60',CL80' PFK2  =  D NET,BFRUSE'
    DC X'11C7601D60',CL80' PFK3  =  END'
    DC X'11C8F01D60',CL80' PFK4  =  D NET,PENDING'
    DC X'114A401D60',CL80' PFK5  =  D NET,APPLS'
    DC X'114B501D60',CL80' PFK6  =  D NET,MAJNODES'
    DC X'114C601D60',CL80' PFK7  =  D NET,LINES,I'
    DC X'114DF01D60',CL80' PFK8  =  D NET,CLSTRS,I'
    DC X'114F401D60',CL80' PFK9  =  D NET,TERMS,I'
    DC X'1150501D60',CL80' PFK10 =  D NET,ID='
    DC X'11D1601D60',CL80' PFK11 =  V NET,ACT,ID='
    DC X'11D2F01D60',CL80' PFK12 =  V NET,INACT,ID='
    DC X'11D4401D60',CL80' '
    DC X'11D5501D60',CL80' '
    DC X'11D6601D60',CL80'ENTER END COMMAND TO RETURN TO SPO DISPLAY'
    DC X'11D7F01D60',CL80' '
HLPSCRSZ EQU   *-HLPTEXT
*
         TITLE 'A P P L M O N - SPO DISPLAY SCREEN '
*
SPOTEXT  DS    0H
         DC    X'7EC2'
O01 DC X'1140401D60',CL80' '
O02 DC X'11C1501DE8',23C'-',CL32'APPLMON VTAM OPERATOR DISPLAY',24C'-'
         DC    C' '
O03 DC X'11C2601DE8',CL13'COMMAND ===>',X'1D40',X'13',CL67' '
O04 DC X'11C3F01D60',CL80' '
O05 DC X'11C5401D60',CL80' '
O06 DC X'11C6501D60',CL80' '
O07 DC X'11C7601D60',CL80' '
O08 DC X'11C8F01D60',CL80' '
O09 DC X'114A401D60',CL80' '
O10 DC X'114B501D60',CL80' '
O11 DC X'114C601D60',CL80' '
O12 DC X'114DF01D60',CL80' '
O13 DC X'114F401D60',CL80' '
O14 DC X'1150501D60',CL80' '
O15 DC X'11D1601D60',CL80' '
O16 DC X'11D2F01D60',CL80' '
O17 DC X'11D4401D60',CL80' '
O18 DC X'11D5501D60',CL80' '
O19 DC X'11D6601D60',CL80'ENTER END COMMAND TO TERMINATE SPO DISPLAY'
O20 DC X'11D7F01D60',CL80' '
SPOSCRSZ EQU   *-SPOTEXT
*
POFTEXT  DS    XL(SPOSCRSZ)
         TITLE 'A P P L M O N - DATA AREAS'
         SPACE
         DROP  R2,R12
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
         SPACE 2
         EJECT
POFRSA   DS    18D                 REGISTER SAVE AREA
POFDBLWK DS    D                   DOUBLE WORD WORK AREA
         SPACE
CPPLPTR  DC    A(0)                A(CPPL)
         SPACE
CSPLIST  EQU   *
CSPLUPT  DC    A(0)                A(UPT)
CSPLECT  DC    A(0)                A(ECT)
CSPLECB  DC    A(POFCECB)          A(ECB)
CSPLFLG  DC    A(POFCFLG)          A(FLAGS)
CSPLOA   DC    A(POFCOA)           A(OUTPUT AREA)
CSPLCBUF DC    A(POFCBUF)          A(BUFFER)
         SPACE
POFCECB  DC    A(0)                ECB
POFCFLG  DC    X'80',AL3(0)        FLAGS
POFCOA   DC    XL8'00'             OUTPUT AREA
POFCBUF  EQU   *
         DC    H'84'               LENGTH
         DC    H'0'                OFFSET
         DC    CL80' '             BUFFER
         SPACE
IKJSCAN  DC    CL8'IKJSCAN'        NAME OF IKJSCAN FOR LINK
         SPACE
POFTRTBL DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5F6'
         SPACE
POFOUT   DS    CL80                TPUT BUFFER
         SPACE
POFCMDI  EQU   *                   COMMAND INPUT BUFFER (FROM VTAM)
         DS    CL4                 COMMAND HEADER
POFIMSG  DS    CL126               MESSAGE
POFCMDIL EQU   *-POFCMDI
         SPACE
POFCMDO  EQU   *                   COMMAND OUTPUT BUFFER (TO VTAM)
         DC    X'00'               COMMAND HEADER
         DC    X'03'
         DC    X'0000'
POFIN    DS    CL80                TGET BUFFER
POFCMDOL EQU   *-POFCMDO
         SPACE
SAVECMDL DC    F'0'                LENGTH OF SAVED COMMAND
SAVECMD  DC    CL80' '             SAVED COMMAND
WORKCMD  DC    CL80' '             COMMAND WORK AREA
BLNKLINE DC    CL80' '             BLANK LINE FOR CLEARING OUT BUFFER
         SPACE 2
WTOLIST  WTO   ' ',MCSFLAG=HRDCPY,MF=L   WTO TO LOG CMDS & RESPONSES
         SPACE
WTOLTH   EQU   WTOLIST,2           LENGTH OF TEXT + 4
         ORG   WTOLIST+4           POINT TO MESSAGE
WTOTXT   DS    CL126               MESSAGE TEXT (MAX OF 124)
         SPACE 2
POFUSRID DS    CL7                 TSO USER ID
POFMSG1  DC    C'XXXX = ACBOFLGS/ACBERFLG'
POFMSG2  DC    C'XXXX = RTNCD/FDBK2'
GTSIZE0  DS    X                   NUMBER OF LINES/SCREEN
GTSIZE1  DS    X                   NUMBER OF CHARS/LINE
         EJECT
AIDTABLE DS    0F
         DC    X'7D',AL3(ENTER)    ENTER KEY/SELECTOR LIGHT-PEN ATTN
         DC    X'F1',AL3(PFK1)     PFK 1
         DC    X'F2',AL3(PFK2)     PFK 2
         DC    X'F3',AL3(PFK3)     PFK 3
         DC    X'F4',AL3(PFK4)     PFK 4
         DC    X'F5',AL3(PFK5)     PFK 5
         DC    X'F6',AL3(PFK6)     PFK 6
         DC    X'F7',AL3(PFK7)     PFK 7
         DC    X'F8',AL3(PFK8)     PFK 8
         DC    X'F9',AL3(PFK9)     PFK 9
         DC    X'7A',AL3(PFK10)    PFK 10
         DC    X'7B',AL3(PFK11)    PFK 11
         DC    X'7C',AL3(PFK12)    PFK 12
         DC    X'C1',AL3(PFK13)    PFK 13
         DC    X'C2',AL3(PFK14)    PFK 14
         DC    X'C3',AL3(PFK15)    PFK 15
         DC    X'C4',AL3(PFK16)    PFK 16
         DC    X'C5',AL3(PFK17)    PFK 17
         DC    X'C6',AL3(PFK18)    PFK 18
         DC    X'C7',AL3(PFK19)    PFK 19
         DC    X'C8',AL3(PFK20)    PFK 20
         DC    X'C9',AL3(PFK21)    PFK 21
         DC    X'4A',AL3(PFK22)    PFK 22
         DC    X'4B',AL3(PFK23)    PFK 23
         DC    X'4C',AL3(PFK24)    PFK 24
         DC    X'6E',AL3(PA2)      PA 2
         DC    X'6B',AL3(PA3)      PA 3
NUMAIDS  EQU   (*-AIDTABLE)/4      TOTAL NUMBER OF AIDS
BADAID   DC    X'00',AL3(NOSUPT)   NOT SUPPORTED
         EJECT
ENTER    DC    X'FF'               FLAGS
         DC    AL1(ENTERL-3)       LENGTH FOR EXECUTED MOVE
         DC    C' '                COMMAND
ENTERL   EQU   *-ENTER             LENGTH
PFK1     DC    X'00'
         DC    AL1(PFK1L-3)
         DC    C'HELP'
PFK1L    EQU   *-PFK1
PFK2     DC    X'00'
         DC    AL1(PFK2L-3)
         DC    C'D NET,BFRUSE'
PFK2L    EQU   *-PFK2
PFK3     DC    X'00'
         DC    AL1(PFK3L-3)
         DC    C'END'
PFK3L    EQU   *-PFK3
PFK4     DC    X'00'
         DC    AL1(PFK4L-3)
         DC    C'D NET,PENDING'
PFK4L    EQU   *-PFK4
PFK5     DC    X'00'
         DC    AL1(PFK5L-3)
         DC    C'D NET,APPLS'
PFK5L    EQU   *-PFK5
PFK6     DC    X'00'
         DC    AL1(PFK6L-3)
         DC    C'D NET,MAJNODES'
PFK6L    EQU   *-PFK6
PFK7     DC    X'00'
         DC    AL1(PFK7L-3)
         DC    C'D NET,LINES,I'
PFK7L    EQU   *-PFK7
PFK8     DC    X'00'
         DC    AL1(PFK8L-3)
         DC    C'D NET,CLSTRS,I'
PFK8L    EQU   *-PFK8
PFK9     DC    X'00'
         DC    AL1(PFK9L-3)
         DC    C'D NET,TERMS,I'
PFK9L    EQU   *-PFK9
PFK10    DC    X'01'
         DC    AL1(PFK10L-3)
         DC    C'D NET,ID='
PFK10L   EQU   *-PFK10
PFK11    DC    X'01'
         DC    AL1(PFK11L-3)
         DC    C'V NET,ACT,ID='
PFK11L   EQU   *-PFK11
PFK12    DC    X'01'
         DC    AL1(PFK12L-3)
         DC    C'V NET,INACT,ID='
PFK12L   EQU   *-PFK12
PFK13    DC    X'00'
         DC    AL1(PFK13L-3)
         DC    C'HELP'
PFK13L   EQU   *-PFK13
PFK14    DC    X'00'
         DC    AL1(PFK14L-3)
         DC    C'D NET,BFRUSE'
PFK14L   EQU   *-PFK14
PFK15    DC    X'00'
         DC    AL1(PFK15L-3)
         DC    C'END'
PFK15L   EQU   *-PFK15
PFK16    DC    X'00'
         DC    AL1(PFK16L-3)
         DC    C'D NET,PENDING'
PFK16L   EQU   *-PFK16
PFK17    DC    X'00'
         DC    AL1(PFK17L-3)
         DC    C'D NET,APPLS'
PFK17L   EQU   *-PFK17
PFK18    DC    X'00'
         DC    AL1(PFK18L-3)
         DC    C'D NET,MAJNODES'
PFK18L   EQU   *-PFK18
PFK19    DC    X'00'
         DC    AL1(PFK19L-3)
         DC    C'D NET,LINES,I'
PFK19L   EQU   *-PFK19
PFK20    DC    X'00'
         DC    AL1(PFK20L-3)
         DC    C'D NET,CLSTRS,I'
PFK20L   EQU   *-PFK20
PFK21    DC    X'00'
         DC    AL1(PFK21L-3)
         DC    C'D NET,TERMS,I'
PFK21L   EQU   *-PFK21
PFK22    DC    X'01'
         DC    AL1(PFK22L-3)
         DC    C'D NET,ID='
PFK22L   EQU   *-PFK22
PFK23    DC    X'01'
         DC    AL1(PFK23L-3)
         DC    C'V NET,ACT,ID='
PFK23L   EQU   *-PFK23
PFK24    DC    X'01'
         DC    AL1(PFK24L-3)
         DC    C'V NET,INACT,ID='
PFK24L   EQU   *-PFK24
PA2      DC    X'00'
         DC    AL1(PA2L-3)
         DC    C'PA 2 KEY'
PA2L     EQU   *-PA2
PA3      DC    X'00'
         DC    AL1(PA3L-3)
         DC    C'PA 3 KEY'
PA3L     EQU   *-PA3
NOSUPT   DC    X'00'
         DC    AL1(NOSUPTL-3)
         DC    C'THIS AID NOT SUPPORTED.'
NOSUPTL  EQU   *-NOSUPT
         EJECT
POFACB   ACB   AM=VTAM,                                                *
               APPLID=POFACBAI,                                        *
               EXLST=POFACBEX,                                         *
               MACRF=NLOGON
         SPACE 2
POFACB#  DC    PL2'1'              ACB COUNTER FOR MULTIPLE POF'S
POFACBAI DC    X'08'
         DC    CL8'POF001'         ACB NAME
POFACBPW DC    X'08'
         DC    CL8'POFSPOPW'       ACB PASSWORD
         EJECT
POFACBEX EXLST AM=VTAM,                                                *
               LERAD=POFLERAD,                                         *
               SYNAD=POFSYNAD
         EJECT
POFRPLSC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDO,                                           *
               RECLEN=POFCMDOL,                                        *
               OPTCD=(SYN)
         EJECT
POFRPLRC RPL   AM=VTAM,                                                *
               ACB=POFACB,                                             *
               AREA=POFCMDI,                                           *
               AREALEN=POFCMDIL,                                       *
               EXIT=POFRCVEX,                                          *
               OPTCD=(ASY,Q,TRUNC)
         EJECT
         LTORG
         EJECT
         TITLE 'A P P L M O N - DSECTS'
TCBUVTAM DSECT
         TCBUVTAM PFX=TCBU
         PRINT NOGEN
         IKJTCB
         IHAASCB
         IHAPSA
         ISTDPOHD
         SPACE 5
         PRINT NOGEN
         SPACE 5
         IFGACB AM=VTAM
         SPACE 5
         IFGRPL AM=VTAM
         SPACE 5
         END
/*
//LKED    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,NCAL,TERM),
//             COND=(4,LT,ASM),REGION=1024K
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD  DISP=SHR,
//             DSN=TECH.SERV.LOAD
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  SETCODE AC(1)
     NAME APPLSPO(R)
/*
