//ASQCCEDT  JOB (E9167,QCC,ASQCC),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=ASQCC
/*JOBPARM L=99,SYSAFF=MVSA
//*
//* TECH.ASQCC.SOURCE(ETPSEDT3)
//*
//ONEL   OUTPUT PAGEDEF=06080,FORMDEF=0101,CHARS=GT12,DEFAULT=YES
//ASM     EXEC PGM=IEV90,REGION=1024K,
//         PARM='OBJECT,NODECK,TERM,RENT'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DISP=SHR,DSN=SYS2.MACLIB
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
ETPSEDT3 TITLE 'CHANGE LOG'
********************************************************************
*
* CHANGE LOG:
*
* 11/21/89 BRIAN COOK (MNP)  FIXED "LINE REPEAT" PROBLEM, ALSO
*                            AFFECTED "COPY-AFTER".
*
* 03/16/89 BRIAN COOK (MNP)  FIXED S0C4 WHEN EXITING EDIT ON A
*                            SEQUENTIAL FILE. THE POINTER "MSGADD"
*                            WAS LEFT POINTING TO AN AREA WITHIN THE
*                            PROGRAM ON EXIT (EDIT WORKED OK).
*
*                            REPORTED BY ED GUTHMAN (SP?) AT
*                            BLUE CROSS/BLUE SHIELD (OKLA)
*
*
********************************************************************
         TITLE 'ETPS - EDITOR'
         PRINT OFF
         COPY  ETPSMACS
         PRINT ON
         PRINT NOGEN
ETPSEDT3 CSECT
         USING *,12,11
         USING SAVE3,13
*
         STM   R14,R12,12(R13)    SAVE INPUT REGS
         LR    R12,R15            SET PROGRAM BASE REGISTER 1
         L     R2,0(,R1)          SAVE PARM POINTER
         LA    R11,72(,R13)       LEVEL 3 MODULE, SO BUMP TO SAVE3
         ST    R13,4(,R11)       STORE BACKWARDS POINTER
         ST    R11,8(R13)         STORE FORWARD POINTER
         LR    R13,R11            SET DSECT BASE 1
         LA    R3,1
         LA    R11,4095(R3,R12)   SET PROGRAM BASE REGISTER 2
         LA    R10,SPLITWRK       SET DSECT FOR SPLIT-SCREEN
         USING SPLTAREA,10
*
* PARM LIST FOR EDITOR IS : DCB, DSN, MEMBER NAME, DSORG, NUM RECS
*
         LM    R2,R6,0(R1)              PICK UP THE REGISTERS
*
*  R2=DCB ADDRESS
*  R3=DSN ADDRESS
*  R4=MEMBER NAME ADDRESS
*  R5=DSORG ADDRESS
*  R6=RECORD COUNT ADDRESS
*
         L     R6,0(,R6)                PUT RECORD COUNT IN R6
*
         ST    R2,EDTDCB                SAVE DCB ADDRESS
         MVC   EDTDSN(44),0(R3)         SAVE DSNAME
         MVC   EDTMEM(8),0(R4)          SAVE MEMBER NAME
         MVC   EDTORG(3),0(R5)          SAVE DSORG
         ST    R6,EDTRECS               SAVE REC COUNT
         ST    R6,EDNOWLN1              SAVE REC COUNT
*
         MVI   AIDROW,1
         MVI   AIDCOL,21
         MVC   HOMEAID(2),AIDADDR
*
*  CLEAR THE FIND STRING/CHANGE STRING FIELDS
*
         MVI   EDFINDL,0
         MVI   EDCHNGL,0
         MVI   EDFINDS,C' '
         MVC   EDFINDS+1(23),EDFINDS
         MVC   EDCHNGS(24),EDFINDS
*
         LA    R7,22(,R6)               SET UP FOR MULTIPLY (ADD 22)
         SR    R6,R6                    SET UP FOR MULTIPLY
         LA    R1,80                    MULTIPLIER
         MR    R6,R1                    MULTIPLY
*
         GETMAIN R,LV=(R7)
         ST    R1,EDTMAIN1              SAVE GETMAIN ADDRESS
         ST    R7,EDTLENG1              SAVE GETMAIN LENGTH
         LA    R7,0(R1,R7)              ADDR OF LAST BYTE
         ST    R7,EDTLAST1              SAVE LAST BYTE ADDRESS
*
         LR    R7,R1                    START LOCATION
         LA    R1,20                    20 CARDS
*
         MVI   72(R7),X'00'             INDICATE BLANK CARD
         LA    R7,80(,7)                BUMP TO NEXT CARD
         BCT   R1,*-8                   LOOP
*
EDTQORG  DS    0H
*        CLC   EDTORG(3),=C'PAN'        PAN LIBRARY
*        BE    EDTPAN                   GO DO IT
*
         TITLE 'ETPS - EDITOR    READ IN NON-PAN DS'
EDTSEQ   DS    0H
*
         L     R2,EDTDCB      SET EODAD
         LM    R0,R1,40(R2)         SAVE DDNAME
         L     R2,MEMDCBA     SET EODAD
         MVC   0(96,R2),GMVDCB      SET MACRF TO GET-MOVE
         STM   R0,R1,40(R2)        RESET DDNAME
         LA    R1,EDTEOF1     SET EODAD
         STCM  R1,7,33(R2)
*
         MVI   PARMOP,X'80'   SET VL BIT
         OPEN  ((2),(INPUT)),MF=(E,PARMOP)
*
         TM    48(R2),X'10'   TEST FOR GOOD OPEN
         BZ    WTOMS51        NOT OPEN
*
         L     R3,EDTMAIN1    PICK UP STORAGE AREA
         LA    R3,1600(,3)    CURRENT LINE POINTER
         ST    R3,EDTCURR1    CURRENT LINE POINTER
         ST    R3,EDTFIRST    FIRST LINE
         LA    R4,10          FIRST LINE NUMBER
*
EDTGET1  DS    0H
*
         GET   (R2),(R3)
*
         CVD   R4,PACK8
         OI    PACK8+7,X'0F'
         UNPK  72(6,R3),PACK8+5(3)
*
         LA    R3,80(,3)
         LA    R4,10(,4)
         B     EDTGET1
*
         TITLE 'ETPS - EDITOR    DISPLAY MEM'
EDTEOF1  DS    0H
*
         MVI   PARMOP,128
         CLOSE ((2)),MF=(E,PARMOP)
*     FREEPOOL (2)
         MVI   EDTEOF,0     NOT EOF
         XC    EDTRPTA1(4),EDTRPTA1 CLEAR ADDRESS POINTER
         MVI   EDAFTSV1,C' '      CLEAR LINE SAVE AREA
*
EDTSHOW  DS    0H
*
         LM    R7,R9,TERMOUT+4   LINES TO BUILD IN
         LA    R5,TERMOUT+12     FIRST DATA LINE ADDRESS
         LA    R1,TERMOUT+4      POINT TO START
*
         CLI   SPLIT,2           AM I ON SCREEN 2?
         BNE   EDTSHOW1          NOPE, JUST GO DO IT
*
         L     R3,SCROWS1        PICK UP NUMBER OF ROWS ON SCRN1
         SLL   R3,2              MULTIPLY BY 4
         LA    R1,TERMOUT+4(R3)  POINT TO START
         LM    R7,R9,0(R1)       LINES TO BUILD IN
         LA    R5,8(,R1)         FIRST DATA LINE ADDRESS-1
*
EDTSHOW1 DS    0H
         MVC   0(81,R7),DSNROW1  SET FIRST ROW
*
         MVC   0(81,R8),DSNROW2  SET NEXT ROW
*
         MVC   0(81,R9),DSNROW3  SET NEXT ROW
         MVC   17(24,R9),EDFINDS SET FIND STRING
         MVC   57(24,R9),EDCHNGS SET CHNG STRING
*
         NI    0(R1),X'7F'       NOT LAST PARM
         NI    4(R1),X'7F'       NOT LAST PARM
         NI    8(R1),X'7F'       NOT LAST PARM
         NI    12(R1),X'7F'      NOT LAST PARM
*
         L     R3,EDTCURR1       FIRST LINE
         L     R4,EDTLAST1       LAST LINE
         L     R6,SCROWS1         PICK UP NUMBER OF ROWS
         CLI   SPLIT,2           AM I IN SPLIT SCREEN
         BNE   EDTMOV0           NOPE, JUST GO DO IT
         L     R6,SCROWS2        MUST BE SCREEN 2
*
EDTMOV0  DS    0H
         LA    R1,4               SUBTRACT FIRST 4 ROWS
         SR    R6,R1   MAX LINES ON SCREEN
*
EDTMOV1  DS    0H
*
         CR    R3,R4
         BNL   EDTEND2          EOF BEFORE END OF SCREEN
*
         CLI   72(R3),X'FF'     CHECK FOR DELETED LINE
         BE    EDTBMP1          SKIP THIS LINE
*
         CLI   72(R3),X'00'     CHECK FOR DELETED LINE
         BE    EDTBMP1          SKIP THIS LINE
*
         NI    0(R5),X'7F'  NOT LAST PARM
         LA    R5,4(,R5)
*
         L     R1,0(,R5)    PICK UP TERMOUT POINTER
         MVC   0(81,R1),DSNLINE  MOVE IN MASK
*
         MVC   2(6,R1),72(R3)   MOVE IN LINE NUMBER
*
         MVC   09(72,R1),0(R3)  MOVE IN LINE DATA
*
         LA    R3,80(,3)        BUMP
         BCT   R6,EDTMOV1
*
         CLI   SPLIT,1           AM I ON SCREEN 1
         BE    EDCOMM            YES, DON'T SET PARM FLAG
         OI    0(R5),X'80'  SET LAST PARM
         B     EDCOMM           GO SHOW THE SCREEN
*
EDTBMP1  DS    0H
*
         LA    R3,80(,3)        BUMP
         B     EDTMOV1          LOOP
*
EDTEND2  DS    0H
         MVI   EDTEOF,1         EOF
*
         NI    0(R5),X'7F'  NOT LAST PARM
         LA    R5,4(,R5)
*
         L     R1,0(,R5)    PICK UP TERMOUT POINTER
         MVC   0(81,R1),DSNLINE  MOVE IN MASK
*
         MVC   2(6,R1),=C'**EOF*'
*
         BCT   R6,EDTEND2+4
*
         CLI   SPLIT,1           AM I ON SCREEN 1
         BE    EDCOMM            YES, DON'T SET PARM FLAG
         OI    0(R5),X'80'  SET LAST PARM
*
EDCOMM   DS    0H
*
         L     R15,=A(EDTHELP)     DEFAULT HELP SCREEN
         ST    R15,HELPADD
*
         MVI   EDCOMMND,C' '
*
         L     R15,COMMA4
         BALR  R14,R15
*
         LTR   R15,15                   BAD RC
         BNZ   EDTFREE1                 OUT
*
         L     R2,TERMINPT
*
         CLI   0(R2),X'7D'         IS IT "ENTER"
         BE    EDLINES             YUP  - CONTINUE
*
         CLI   0(R2),X'C3'         IS IT PF15
         BE    *+12                YES
         CLI   0(R2),X'F3'         IS IT PF3
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'SAVEND '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'C4'         IS IT PF16
         BE    *+12                YES
         CLI   0(R2),X'F4'         IS IT PF4
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'CANCEL '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'C7'         IS IT PF19
         BE    *+12                YES
         CLI   0(R2),X'F7'         IS IT PF7
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'UP     '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'C8'         IS IT PF20
         BE    *+12                YES
         CLI   0(R2),X'F8'         IS IT PF8
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'DOWN   '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'C5'         IS IT PF17
         BE    *+12                YES
         CLI   0(R2),X'F5'         IS IT PF5
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'RFIND  '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'C6'         IS IT PF18
         BE    *+12                YES
         CLI   0(R2),X'F6'         IS IT PF6
         BNE   *+14                NO
         MVC   EDCOMMND(7),=C'CHANGE '
         B     EDLINES             CONTINUE
*
         CLI   0(R2),X'6C'         IS IT PA1
         BE    EDTFREE1            YUP  - ALL DONE
*
         B     EDRESCR             GO RESHOW THE SCREEN
*
EDLINES  DS    0H
*
* PUT MODIFIED LINES LOOP HERE
*
         L     R3,EDTCURR1        PICK UP CURRENT LINE POINTER
         LA    R4,TERMINPT+12     POINT TO LINE1 TERMINAL INPUT ADDR
         L     R2,SCROWS1         PICK UP NUMBER OF ROWS
*
         CLI   SPLIT,2                  AM I ON SCREEN 2
         BNE   EDLINES2                 NOPE
*
         L     R1,SCROWS1          PICK UP SIZE OF SCREEN1
         SLL   R1,2                MULTIPLY BY 4
         LA    R4,TERMINPT+12(R1)  PICK UP RESPONSES
         L     R2,SCROWS2          PICK UP NUMBER OF ROWS
*
EDLINES2 DS    0H
*
         L     R5,0(,R4)          POINT TO LINE1 TERMINAL INPUT
         CLI   0(R5),X'00'      WAS THIS LINE CHANGED BY THE OPERATOR?
         BE    EDLINES4           NO
*
*  SET END OF FIELD = R14
*
         LA    R14,41(,R5)      SET END OF FIELD
*
         MVI   EDFINDL,0
         MVI   EDFINDS,C' '
         MVC   EDFINDS+1(23),EDFINDS
*
*
*  SET LENGTH FOR FIND STRING
*
         LA    R15,24           MAXIMUM LENGTH
*
         CLI   0(R14),X'41'     IF NOT NUMERIC
         BH    *+14
         BCTR  R14,0            DECREMENT BASE ADDRESS
         BCT   R15,*-10
         B     EDLINES3         FIND IT
*
         STC   R15,EDFINDL      SET LENGTH MINUS 1 (FROM "BCT", ABOVE)
*
         EX    R15,FNDMOVE1     MOVE STRING TO WORK AREA
         B     EDLINES3         FIND IT
*
FNDMOVE1 MVC   EDFINDS(1),17(R5)
CHGMOVE1 MVC   EDCHNGS(1),0(R1)
*
EDLINES3 DS    0H
*
*  SET START ADDRESS FOR CHANGE STRING.
*
         LA    R1,57(,R5)       POINT TO CHANGE STRING START
         LA    R14,80(,R5)      SET END OF FIELD
*
         MVI   EDCHNGL,0
         MVI   EDCHNGS,C' '
         MVC   EDCHNGS+1(23),EDCHNGS
*  SET LENGTH FOR CHANGE STRING
*
         LA    R15,24           MAXIMUM LENGTH
*
         CLI   0(R14),X'41'     IF NOT NUMERIC
         BH    *+14
         BCTR  R14,0            DECREMENT BASE ADDRESS
         BCT   R15,*-10
         B     EDLINES4         FIND IT
*
         STC   R15,EDCHNGL      SET LENGTH MINUS 1 (FROM "BCT", ABOVE)
*
         MVI   EDCHNGS,C' '
         MVC   EDCHNGS+1(23),EDCHNGS
*
         EX    R15,CHGMOVE1     MOVE STRING TO WORK AREA
         B     EDLINES4         FIND IT
*
EDLINDMP DS    0H
*
         LA    R0,EDFINDS
         LA    R1,EDCHNGS
         SR    R2,R2
         LR    R3,R2
         IC    R2,EDFINDL
         IC    R3,EDCHNGL
         DC    H'0'
*
EDLINES4 DS    0H
         LA    R4,4(,4)           BUMP TO NEXT TERM INPUT ADDRESS
*
EDLINES5 DS    0H
         LA    R1,3               SUBTRACT FIRST 2 ROWS
         SR    R2,R1   MAX LINES ON SCREEN
*
         CLI   72(R3),X'FF'       THIS LINE DELETED?
         BE    *+12               YES, BUMP TO NEXT
         CLI   72(R3),X'00'       THIS LINE DELETED?
         BNE   *+12               NOPE, NO BUMP
         LA    R3,80(,3)          BUMP TO LINE IN BUFFER
         B     *-20               CHECK THIS LINE
*
EDLINESL DS    0H
         L     R5,0(,R4)          POINT TO LINE1 TERMINAL INPUT
         CLI   0(R5),X'00'      WAS THIS LINE CHANGED BY THE OPERATOR?
         BNE   EDLINEIN         YUP.
*
EDLINEUP DS    0H
         LA    R4,4(,4)           BUMP TO NEXT TERM INPUT ADDRESS
         LA    R3,80(,3)          BUMP TO LINE IN BUFFER
         C     R3,EDTLAST1        IF I'VE LOOKED AT ALL THE LINES,
         BNL   EDLINESN           CHECK FOR COMMANDS, PFK
         CLI   72(R3),X'FF'       THIS LINE DELETED?
         BE    *-16               BUMP TO NEXT
         CLI   72(R3),X'00'       THIS LINE DELETED?
         BE    *-24               BUMP TO NEXT
         BCT   R2,EDLINESL        LOOP
         B     EDLINESN           CHECK FOR COMMANDS, PFK
*
EDLINEIN DS    0H
*
*  NEXT TEST FOR A LINE COMMAND
*
         LA    R6,2(,R5)         POINT TO LINE NUMBER COLUMNS
         LA    R7,6              SET LOOP CONTROL
*
EDLINCOL DS    0H
         CLI   0(R6),C'D'         LINE DELETE
         BE    EDLINDEL           DELETE IT
         CLI   0(R6),C'C'         LINE COPY
         BE    EDLINCOP           REPEAT IT
         CLI   0(R6),C'A'         LINE COPY AFTER LOCATION
         BE    EDLINAFT           REPEAT IT
         CLI   0(R6),C'R'         LINE REPEAT
         BE    EDLINRPT           REPEAT IT
*
*  PUT TESTS FOR OTHER LINE COMMANDS HERE
*
EDBUMPCL DS    0H
         LA    R6,1(,6)           BUMP POINTER
         BCT   R7,EDLINCOL        LOOP
*
*  MOVE ONE LINE OF DATA
*
         MVC   0(72,R3),09(R5)    MOVE IN LINE DATA
*
         B     EDLINEUP           CHECK FOR NEXT LINE
*
EDLINDEL DS    0H
*
*  DELETE ONE LINE
*
         MVI   0(R6),C'0'         LINE DELETE OFF
         MVI   72(R3),X'FF'             SET DELETE FLAG
         B     EDLINEUP           CHECK FOR NEXT LINE
*
EDLINCOP DS    0H
*
*  COPY ONE LINE
*
         MVC   EDAFTSV1(80),0(R3) SAVE THIS LINE
         L     R7,EDTRPTA1       DO I HAVE AN "AFTER" LOCATION
         LTR   R7,7
         BNZ   EDGOTAFT          YUP, GO MOVE IT IN
         B     EDLINEUP           CHECK FOR NEXT LINE
*
EDLINAFT DS    0H
*
*  GOT "AFTER" LOCATION
*
         BAL   R14,EDLINRP1        REPEAT THE LINE
*
         CLI   EDAFTSV1,C' '      DO I HAVE A LINE TO MOVE IN
         BE    EDLINEUP           NOPE, JUST CHECK FOR NEXT LINE
*
         L     R7,EDTRPTA1        PICK UP ADDRESS OF REPEATED LINE
EDGOTAFT DS    0H
         XC    EDTRPTA1(4),EDTRPTA1 CLEAR ADDRESS POINTER
         MVC   0(80,R7),EDAFTSV1  MOVE IN THE LINE TO BE COPIED
         MVI   EDAFTSV1,C' '      CLEAR LINE SAVE AREA
         B     EDRENUM             RENUMBER AND RESCREEN
*
EDLINRPT DS    0H
         MVI   0(R6),C'0'         LINE REPEAT OFF
         BAL   R14,EDLINRP1        REPEAT THE LINE
         XC    EDTRPTA1(4),EDTRPTA1 CLEAR ADDRESS POINTER
         B     EDRENUM             RENUMBER AND RESCREEN
EDLINRP1 DS    0H
*
*  REPEAT ONE LINE
*
         L     R7,EDTMAIN1        PICK UP FIRST LINE
         LA    R7,1600(,7)        20 LINES OF GAS
         LA    R1,20              LOOP CONTROL
         LA    R0,80              LINE LENGTH
*
         CLI   72(R7),X'00'       AVAILABLE LINE
         BE    *+14               GOT ONE
         SR    R7,R0              BACK UP ONE
         BCT   R1,*-10            KEEP LOOPING
         B     EDNORPT            CAN'T DO REPEAT
*
         ST    R7,EDTFIRST        NEW START LOCATION
         L     R1,EDNOWLN1        NUMBER OF LINES
         LA    R1,1(,1)           BUMP 1
         ST    R1,EDNOWLN1
*
         MVC   0(80,R7),80(R7)
         LA    R7,80(,7)         BUMP
         CR    R7,R3
         BNE   *-12
*
         MVC   0(80,R7),0(R3)     MOVE IN REPEATED LINE
         ST    R7,EDTRPTA1        SAVE ADDRESS
*
         L     R7,EDTCURR1         PICK UP CURRENT LINE POINTER
         LA    R1,80
         SR    R7,R1
         ST    R7,EDTCURR1         RESET CURRENT LINE POINTER
*
         BR    R14                 RETURN
*
EDNORPT  DS    0H
         B     EDRESCR             CAN'T DO REPEAT
*
EDLINESN DS    0H
         L     R3,TERMINPT+8       COMMAND LINE
*
         CLI   SPLIT,2                  AM I ON SCREEN 2
         BNE   EDLINE2N                 NOPE
*
         L     R3,SCROWS1          PICK UP SIZE OF SCREEN1
         SLL   R3,2                MULTIPLY BY 4
         L     R3,TERMINPT+8(R3)   PICK UP RESPONSES
*
EDLINE2N DS    0H
         CLI   EDCOMMND,C' '
         BNE   EDLINE3N
*
         CLI   0(R3),X'00'         COMMAND ENTERED
         BE    EDRESCR             NO, RESHOW THE SCREEN
         MVC   EDCOMMND(7),22(R3)
*
         MVI   AIDROW,1
         MVI   AIDCOL,21
         MVC   HOMEAID(2),AIDADDR
*
* PUT TESTS FOR COMMAND LINE HERE
*
EDLINE3N DS    0H
*
         CLC   EDCOMMND(5),=C'ABEND' IS IT ABEND?
         BNE   *+6                   NO
         DC    H'0'                  S0C1
*
         CLC   EDCOMMND(6),=C'RENUM ' IS IT A RENUM COMMAND
         BE    EDRENUM             GO DO IT
*
         CLC   EDCOMMND(4),=C'SAVE'   IS IT A SAVE COMMAND
         BE    EDTSAVE1            GO DO IT
*
         CLC   EDCOMMND(3),=C'SUB' IS IT A SUBMIT COMMAND
         BE    EDTSUBMT            GO DO IT
*
         CLC   EDCOMMND(4),=C'END ' IS IT AN END COMMAND
         BE    EDTSAVE1            GO DO IT
         CLC   EDCOMMND(4),=C'PF3 ' IS IT AN END COMMAND
         BE    EDTSAVE1            GO DO IT
         CLC   EDCOMMND(3),=C'CAN' IS IT "CANCEL"
         BE    EDTFREE1            GO DO IT
*
         CLC   EDCOMMND(6),=C'RESET ' IS IT A RESET COMMAND
         BE    EDRESCR             RESHOW THE SCREEN
*
         CLC   EDCOMMND(2),=C'F '  IS IT "FIND"  COMMAND
         BE    EDRFIND             SET FIND STRING
         CLC   EDCOMMND(2),=C'L '  IS IT "FIND"  COMMAND
         BE    EDRFIND             SET FIND STRING
         CLC   EDCOMMND(3),=C'RF ' IS IT "FIND"  COMMAND
         BE    EDRFIND             SET FIND STRING
*
         CLC   EDCOMMND(7),=C'DOWN   '
         BE    EDMORMEM            SCROLL DOWN
         CLC   EDCOMMND(7),=C'UP     '
         BE    EDPREMEM            SCROLL UP
         CLC   EDCOMMND(7),=C'RFIND  '
         BE    EDRFIND             REPEAT FIND
         CLI   EDCOMMND,C'C'       CHANGE
         BE    EDRCHANG            CHANGE/REPEAT CHANGE
*
         B     EDRESCR             RESHOW THE SCREEN
*
EDRCHANG DS    0H
*
         CLI   EDFINDL,0           NO FIND STRING
         BE    EDCHANG1
*
         CLI   EDCHNGL,0           NO CHNG STRING
         BE    EDCHANG2
*
         CLC   EDCHNGL(1),EDFINDL  STRINGS NOT SAME LENGTH
         BNE   EDCHANG3
*
         B     EDRFIND             REPEAT FIND
*
EDCHANG1 DS    0H
         LA    R1,EDCERR1          FOUND
         ST    R1,MSGADD
         B     EDRESCR             RESHOW THE SCREEN
*
EDCHANG2 DS    0H
         LA    R1,EDCERR2          FOUND
         ST    R1,MSGADD
         B     EDRESCR             RESHOW THE SCREEN
*
EDCHANG3 DS    0H
*
*        LA    R0,EDFINDS
*        LA    R1,EDCHNGS
*        SR    R2,R2
*        LR    R3,R2
*        IC    R2,EDFINDL
*        IC    R3,EDCHNGL
*        DC    H'0'
*
         LA    R1,EDCERR3          FOUND
         ST    R1,MSGADD
         B     EDRESCR             RESHOW THE SCREEN
*
EDCERR1  DC    CL20'ENTER "FIND" STRING'
EDCERR2  DC    CL20'ENTER "CHNG" STRING'
EDCERR3  DC    CL20'FIND/CHNG LENGTHS  '
EDRENUM  DS    0H
*                                  RENUMBER THE DS BY 10
         L     R3,EDTFIRST        NEW START LOCATION
         L     R1,EDNOWLN1        NUMBER OF LINES
         LA    R4,10
*                                  RENUMBER THE DS BY 10
         CLI   72(R3),X'00'       BLANK LINE
         BE    *+30               YUP
         CLI   72(R3),X'FF'       DELETED LINE
         BE    *+22               YUP
*
         CVD   R4,PACK8
         OI    PACK8+7,X'0F'
         UNPK  72(6,R3),PACK8+5(3)
*
         LA    R4,10(,4)
         LA    R3,80(,3)
         BCT   R1,*-38
*                                  RENUMBER THE DS BY 10
         B     EDRESCR             RESHOW THE SCREEN
*
EDINPUT  DS    0H
*                   PROCESS ONE UPDATED LINE
*
EDRESCR  DS    0H
*                   RE-DISPLAY THE SCREEN
         B     EDTSHOW             RE-DISPLAY
*
EDRFIND  DS    0H
*                   FIND THE NEXT OCCURRENCE OF A STRING
         SR    R14,R14             CLEAR THE REGISTER
         IC    R14,EDFINDL         SET LENGTH FOR EXECUTED CLC
*
         CLI   EDFINDS,X'7D'    LEADING QUOTE?
         BNE   *+8
         BCTR  R14,0
         BCTR  R14,0
*
         L     R1,EDTCURR1      PICK UP LINE POINTER
         CLI   EDCOMMND,C'C'       CHANGE
         BE    *+8              YES, DON'T BUMP TO NEXT LINE
         LA    R1,80(,R1)       BUMP TO NEXT LINE
         LR    R15,R1              COPY START OF LINE
*
EDRFIND2 DS    0H
*
         C     R15,EDTLAST1     IF PAST END OF FILE
         BH    EDRFNOTF         ALL DONE
*
         LA    R0,72
         SR    R0,R14             SET R15 TO MAXIMUM LINE LOOP
*
EDRFLOOP DS    0H
         CLI   EDFINDS,X'7D'    LEADING QUOTE?
         BNE   *+16
         EX    R14,FNDCLC2         SEARCH FOR THE STRING
         BE    EDRFIND3            GOT IT
         B     *+12
         EX    R14,FNDCLC1         SEARCH FOR THE STRING
         BE    EDRFIND3            GOT IT
         LA    R1,1(,R1)         BUMP 1 BYTE
         BCT   R0,EDRFLOOP         KEEP LOOPING
*
         LA    R15,80(,R15)        BUMP TO NEXT LINE
         LR    R1,R15              COPY START OF LINE
         B     EDRFIND2         ALL DONE
*
EDRFIND3 DS    0H
*
         CLI   EDCOMMND,C'C'       CHANGE
         BNE   EDRFIND4            NO, JUST FIND
*
         CLI   EDFINDS,X'7D'    LEADING QUOTE?
         BNE   *+12
         EX    R14,CHGMVC2         REPLACE THE STRING
         B     *+8
         EX    R14,CHGMVC1         REPLACE THE STRING
*
         ST    R15,EDTCURR1        SET LINE POINTER
         LA    R1,EDRCHNGD         CHANGED
         ST    R1,MSGADD
*
         CLC   EDCOMMND(3),=C'C A' CHANGE ALL
         BNE   EDTSHOW             NO, JUST DISPLAY THE CHANGED LINE
*
         B     EDTSHOW             JUST DISPLAY THE CHANGED LINE
*
EDRFIND4 DS    0H
         ST    R15,EDTCURR1        SET LINE POINTER
         LA    R1,EDRFOUND         FOUND
         ST    R1,MSGADD
         B     EDTSHOW             RE-DISPLAY
*
EDRFNOTF DS    0H
*
         LA    R1,EDNOTFMS         NOT FOUND
         ST    R1,MSGADD
         B     EDTSHOW             RE-DISPLAY
*
FNDCLC1  CLC   EDFINDS(1),0(R1)
FNDCLC2  CLC   EDFINDS+1(1),0(R1)
CHGMVC1  MVC   0(1,R1),EDCHNGS
CHGMVC2  MVC   0(1,R1),EDCHNGS+1
*
EDNOTFMS DC    CL20'    STRING NOT FOUND'
EDRFOUND DC    CL20'STRING FOUND'
EDRCHNGD DC    CL20'             CHANGED'
*
EDMORMEM DS    0H
*
         CLI   22(R3),C' '      COMMAND ENTERED
         BE    EDMORM12         NO, JUST BUMP DEFAULT
*
         CLI   00(R3),X'00'     COMMAND ENTERED
         BE    EDMORM12         NO, JUST BUMP DEFAULT
*
         CLI   22(R3),C'M'      SCROLL "MAX"
         BE    EDMORMAX         GO TO BOTTOM
*
         CLI   22(R3),C'0'      IF NOT NUMERIC
         BL    EDMORM12         JUST BUMP DEFAULT
*
         LA    R14,22(,R3)      SET START OF FIELD
         LA    R15,6            MAXIMUM LENGTH
         SR    R1,1             COUNTER
*
         CLI   0(R14),C'0'      IF NOT NUMERIC
         BL    *+16
         LA    R1,1(,R1)        BUMP COUNTER
         LA    R14,1(,R14)      BUMP POINTER
         BCT   R15,*-16
*
         LTR   R1,1             IF LENGTH IS ZERO
         BZ    EDMORM12         JUST BUMP DEFAULT
*
         BCTR  R1,0             SUBTRACT 1 FOR EXECUTED PACK
         EX    R1,NUMPACK       PACK IT IN EDDWORD
         CVB   R1,EDDWORD       PUT VALUE IN R1
         SR    R0,R0
         LA    R14,80
         MR    R0,R14
         A     R1,EDTCURR1
         ST    R1,EDTCURR1
         C     R1,EDTLAST1
         BL    EDTSHOW             RE-DISPLAY
         B     EDMORMAX           RE-DISPLAY
*
NUMPACK  PACK  EDDWORD(8),25(1,R3)
EDMORM12 DS    0H
*                   BUMP THE SCREEN BY 12 LINES
         LA    R1,960
         A     R1,EDTCURR1
         ST    R1,EDTCURR1
         C     R1,EDTLAST1
         BL    EDTSHOW             RE-DISPLAY
         B     EDMORMAX            RE-DISPLAY
*
EDMORMAX DS    0H
*                   BUMP THE SCREEN TO BOTTOM AND BACK UP 12
         LA    R1,960
         L     R0,EDTLAST1
         SR    R0,R1
         ST    R0,EDTCURR1
         B     EDTSHOW             RE-DISPLAY
*
EDPREMEM DS    0H
         CLI   22(R3),C' '      COMMAND ENTERED
         BE    EDPREM12         NO, JUST BUMP DEFAULT
*
         CLI   00(R3),X'00'     COMMAND ENTERED
         BE    EDPREM12         NO, JUST BUMP DEFAULT
*
         CLI   22(R3),C'M'      SCROLL "MAX"
         BE    EDPREMAX         GO TO TOP
*
         CLI   22(R3),C'0'      IF NOT NUMERIC
         BL    EDPREM12         JUST BUMP DEFAULT
*
         LA    R14,22(,R3)      SET START OF FIELD
         LA    R15,6            MAXIMUM LENGTH
         SR    R1,1             COUNTER
*
         CLI   0(R14),C'0'      IF NOT NUMERIC
         BL    *+16
         LA    R1,1(,R1)        BUMP COUNTER
         LA    R14,1(,R14)      BUMP POINTER
         BCT   R15,*-16
*
         LTR   R1,1             IF LENGTH IS ZERO
         BZ    EDPREM12         JUST BUMP DEFAULT
*
         BCTR  R1,0             SUBTRACT 1 FOR EXECUTED PACK
         EX    R1,NUMPACK       PACK IT IN EDDWORD
         CVB   R1,EDDWORD       PUT VALUE IN R1
         SR    R0,R0
         LA    R14,80
         MR    R0,R14
*
         LR    R0,R1            AMOUNT TO BACK UP
         L     R1,EDTCURR1
         SR    R1,R0
         ST    R1,EDTCURR1
         C     R1,EDTFIRST
         BH    EDTSHOW             RE-DISPLAY
         B     EDPREMAX           RE-DISPLAY
EDPREM12 DS    0H
*                   BACK UP THE SCREEN 12 LINES
         L     R1,EDTCURR1
         LA    R0,960
         SR    R1,R0
         ST    R1,EDTCURR1
         C     R1,EDTFIRST
         BH    EDTSHOW             RE-DISPLAY
EDPREMAX DS    0H
         MVC   EDTCURR1(4),EDTFIRST
         B     EDTSHOW             RE-DISPLAY
*
         TITLE 'ETPS - EDITOR    READ IN PAN DS'
EDTPAN   DS    0H
*
         B     EDTFREE1            ALL DONE
*
         TITLE 'ETPS - EDITOR    SUBMIT COMMAND'
EDTSUBMT DS    0H
*
* NOTE ALL THE DATASET SUBMIT LOGIC GOES HERE
*
         LA    R1,SUBSUBP
         DYNALLOC
*
         GENCB BLK=ACB,AM=VSAM,MACRF=(ADR,SEQ,OUT),                    X
               DDNAME=SUBJOB,MF=(G,ACBWORK,ACBSIZ)
*
         ST    R1,SUBACB
         LR    R2,R1                           * ACB ADDRESS
         USING IFGACB,2
*
         GENCB BLK=RPL,AM=VSAM,ACB=(2),OPTCD=(ADR,SEQ,SYN,NUP),        X
               RECLEN=80,MF=(G,RPLWORK,RPLSIZ)
*
         ST    R1,SUBRPL
         LR    R3,R1                           * RPL ADDRESS
         USING IFGRPL,3
*
         MVI   PARMOP,X'80'   SET VL BIT
         OPEN  ((2)),MF=(E,PARMOP)
*
         LTR   R15,15                          * GOOD OPEN?
         BNZ   WTOMS61        NOT OPEN
*
         L     R4,EDTFIRST    PICK UP STORAGE AREA
*
EDTSUB1  DS    0H
*
         C     R4,EDTLAST1
         BNL   EDTSUBCL
*
         CLI   72(R4),X'00'  DELETED LINE
         BE    EDTSUBB1
         CLI   72(R4),X'FF'  DELETED LINE
         BE    EDTSUBB1
*
         MODCB RPL=(3),AREA=(4),ACB=(2),MF=(G,MODWORK,MODSIZ)
*
         PUT   RPL=(3)
*
EDTSUBB1 DS    0H
         LA    R4,80(,4)
         B     EDTSUB1
*
EDTSUBCL DS    0H
        ENDREQ RPL=(3)
         MVC   SUBMSG1(20),SUBMSG   SET MESSAGE
         MVC   SUBMSG1(8),RPLRBAR   SET JOB NUMBER IN MESSAGE
         MVI   PARMOP,X'80'   SET VL BIT
         CLOSE ((2)),MF=(E,PARMOP)
         LA    R1,SUBMSG1
         ST    R1,MSGADD
         B     EDRESCR              RESHOW THE SCREEN
*
SUBMSG   DC    CL20'         SUBMITTED'
*
         TITLE 'ETPS - EDITOR    SAVE PROCESSING'
         PRINT GEN
EDTSAVE1 DS    0H
*
* NOTE ALL THE DATASET SAVE LOGIC GOES HERE
*
*
* FIRST COUNT THE NUMBER OF RECORDS IN MY EDIT WORK AREA TO DETERMINE
* WHETHER I CAN DO AN UPDATE-IN-PLACE.
*
         SR    R1,1                 RECORD COUNTER
*
         L     R3,EDTFIRST    PICK UP STORAGE AREA
*
EDTALLY  DS    0H
*
         C     R3,EDTLAST1
         BNL   EDTCFREC
*
         CLI   72(R3),X'00'  DELETED LINE
         BE    EDTALLUP
         CLI   72(R3),X'FF'  DELETED LINE
         BE    EDTALLUP
*
         LA    R1,1(,1)      ADD 1 TO MY COUNT
*
EDTALLUP DS    0H
         LA    R3,80(,3)
         B     EDTALLY
EDTCFREC DS    0H
*
         C     R1,EDTRECS   COMPARE CURRENT RECS VERSUS ORIGINAL RECS
         BNE   EDTSUPD2     NO MATCH, CAN'T DO UPDATE-IN-PLACE
*
EDTSUPD1 DS    0H
         L     R2,EDTDCB            PICK UP DCB ADDRESS
         MVC   50(2,R2),=X'4850'    SET MACRF TO GL,PM
*
         MVI   PARMOP,X'80'   SET VL BIT
         OPEN  ((2),(UPDAT)),MF=(E,PARMOP)
*
         TM    48(R2),X'10'   TEST FOR GOOD OPEN
         BZ    WTOMS61        NOT OPEN
*
         L     R3,EDTFIRST    PICK UP STORAGE AREA
*
EDTPUT1  DS    0H
*
         C     R3,EDTLAST1
         BNL   EDTEOF2
*
         CLI   72(R3),X'00'  DELETED LINE
         BE    EDTPUTB1
         CLI   72(R3),X'FF'  DELETED LINE
         BE    EDTPUTB1
*
         GET   (R2)
         MVC   0(80,R1),0(R3)
         PUTX  (R2)
*
EDTPUTB1 DS    0H
         LA    R3,80(,3)
         B     EDTPUT1
*
*
EDTSUPD2 DS    0H
         ST    R1,EDTRECS       SET CURRENT RECS
         L     R2,EDTDCB            PICK UP DCB ADDRESS
         LM    R0,R1,40(R2)         SAVE DDNAME
         MVC   0(96,R2),PMVDCB      SET MACRF TO PM
         STM   R0,R1,40(R2)        RESET DDNAME
*
         MVI   PARMOP,X'80'   SET VL BIT
         OPEN  ((2),(OUTPUT)),MF=(E,PARMOP)
*
         TM    48(R2),X'10'   TEST FOR GOOD OPEN
         BZ    WTOMS61        NOT OPEN
*
         L     R3,EDTFIRST    PICK UP STORAGE AREA
*
EDTPUT2  DS    0H
*
         C     R3,EDTLAST1
         BNL   EDTEOF2
*
         CLI   72(R3),X'00'  DELETED LINE
         BE    EDTPUTB2
         CLI   72(R3),X'FF'  DELETED LINE
         BE    EDTPUTB2
*
         PUT   (R2),(R3)
*
EDTPUTB2 DS    0H
         LA    R3,80(,3)
         B     EDTPUT2
*
EDTEOF2  DS    0H
*
         MVI   PARMOP,128
         CLOSE ((2)),MF=(E,PARMOP)
*     FREEPOOL (2)
*
         MVI   MSGBUFF,C' '
         MVC   MSGBUFF+1(19),MSGBUFF
*
         MVC   MSGBUFF(20),EDTSAVDS
         CLI   EDTMEM,C' '         MEMBER PROVIDED
         BE    EDTMSG2             NOPE
         CLC   EDTORG(3),=C'SEQ'   SEQUENTIAL FILE?
         BE    EDTMSG2             YES, DON'T DO STOW
*
         L     R2,LIBDCBA
         CALL  SPFSTOW,((2),EDTRECS,USERID,EDTMEM),VL,MF=(E,PARM43)
*
         B     EDTCMDT
*
EDTSAVDS DC    CL8'DATASET '
EDTSAVMM DC    CL12'SAVED'
PMVDCB   DCB   DDNAME=DUMMY,MACRF=PM,DSORG=PS
GMVDCB   DCB   DDNAME=DUMMY,MACRF=GM,DSORG=PS
*
EDTCMDT  DS    0H
*
         MVC   MSGBUFF(8),EDTMEM        SET THE "SAVED" MESSAGE
         MVC   MSGBUFF+9(5),EDTSAVMM
EDTMSG2  DS    0H
         LA    R1,MSGBUFF
         ST    R1,MSGADD
*
         CLC   EDCOMMND(7),=C'SAVEND '     SAVE AND END
         BE    EDTFREE1            ALL DONE
*
         CLC   EDCOMMND(3),=C'END'         JUST END
         BE    EDTFREE1            ALL DONE
*
         B     EDRESCR             RESHOW THE SCREEN
*
EDTFREE1 DS    0H
         L     R6,EDTMAIN1              SAVE GETMAIN ADDRESS
         L     R7,EDTLENG1              SAVE GETMAIN LENGTH
         FREEMAIN R,LV=(R7),A=(R6)
EDTRETRN DS    0H
         L     R13,4(,13)               RESTORE CALLERS REGS
         LM    R14,R12,12(R13)          RESTORE CALLERS REGS
         BR    R14                      NORMAL RETURN
WTOMS51  WTO   'ETPS1051 OPEN INPUT FAILED IN EDITOR  ',ROUTCDE=11
         LA    R1,WTOMS51+13
         ST    R1,MSGADD
         B     EDTFREE1            ALL DONE
WTOMS61  WTO   'ETPS1051 OPEN OUTPUT FAILED IN EDITOR ',ROUTCDE=11
         LA    R1,WTOMS61+13
         ST    R1,MSGADD
         B     EDTFREE1            ALL DONE
         LTORG
         PRINT NOGEN
         TITLE 'ETPS - EDIT CONSTANTS'
*
EQUALS   DC    C'=='
*
         TITLE 'ETPS - EDIT FILE SCREEN FORMAT'
*
* THIS IS THE FORMAT FOR A PDS OR PAN LIBRARY MEMBER, OR A SEQ FILE.
*
EDTTITLE DS    0F
DSNROW1  DC    AL1(80)
         DC    X'05'
         DC    CL8'   EDIT '
         DC    C'- '
DSNDSNAM EQU   *-EDTTITLE
         DC    69C'-'
DSNROW2  DC    AL1(80)
         DC    X'05'
         DC    CL19'COMMAND INPUT ===> '
         DC    X'01'
         DC    CL40' '
         DC    X'05'
         DC    CL13' SCROLL ===> '
         DC    X'01'
         DC    CL4'PAGE'
*
DSNROW3  DC    AL1(80)
         DC    X'05'
         DC    CL14'FIND STRNG==> '
FLDSTART DC    X'01'
         DC    CL24' '
FLDEND   DC    X'05'
         DC    CL14'CHANGE TO ==> '
         DC    X'01'
         DC    CL30' '
         DC    X'05'
*
DSNLINE  DC    AL1(80)
         DC    X'01',C'      ',X'01',CL72' '
*
         CNOP  0,8
         TITLE 'ETPS - EDIT   HELP SCREEN'
*
*
EDTHELP  CSECT
         DC    A(EDTHELP1)
         DC    A(EDTBLANK)
         DC    A(EH2)
         DC    A(EH3)
         DC    A(EH4)
         DC    A(EDTBLANK)
         DC    A(EH5)
         DC    A(EH6)
         DC    A(EH7)
         DC    A(EDTBLANK)
         DC    A(EH8)
         DC    A(EH9)
         DC    A(EHA)
         DC    A(EHB)
         DC    A(EHC+X'80000000')
EDTHELP1 DC    AL1(80)                  ROW 01, COL 01
         DC    X'05'                  PROTECT, HIGH-LIGHT
         DC    24C'-'
         DC    CL22' PDS MEMBER EDIT HELP'
         DC    34C'-'
*                         1234567890123456789012345678901234567890123
EH2 DC AL1(45),X'05',CL46'COMMAND LINE COMMANDS ARE:                 '
EH3 DC AL1(45),X'05',CL46' ABEND-S0C1   SAVE-SAVE CURRENT END-ENDSAVE'
EH4 DC AL1(45),X'05',CL46' SUB---SUBMIT CAN--END NOSAVE   F---FIND   '
EH5 DC AL1(45),X'05',CL46'LINE PREFIX COMMANDS ARE:                  '
EH6 DC AL1(45),X'05',CL46' D-DELETE LINE   R-REPEAT LINE  C-COPY LINE'
EH7 DC AL1(45),X'05',CL46' A-AFTER (USED WITH COPY)                  '
EH8 DC AL1(45),X'05',CL46'NOTE THAT LINE PREFIX COMMANDS MUST NOT BE '
EH9 DC AL1(45),X'05',CL46'MIXED, EXCEPT FOR COPY-AFTER. DO NOT DELETE'
EHA DC AL1(45),X'05',CL46'AND REPEAT LINES ON THE SAME SCREEN, NOR   '
EHB DC AL1(45),X'05',CL46'COPY AND DELETE/REPEAT LINES ON THE SAME   '
EHC DC AL1(45),X'05',CL46'SCREEN.                                    '
EDTBLANK DC    AL1(10),X'05',CL12' '
         CNOP  0,8
         EJECT
         PRINT GEN
         MYSAVE
DYNDECBL EQU   20
GMVUL    EQU   10
         SPLTAREA
         IFGACB
         IFGRPL
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
SPFSTOW  CSECT
         USING *,12
         STM   R14,R12,12(R13)    SAVE INPUT REGS
         LR    R12,R15            SET BASE REGISTER
         LR    R10,R1             SAVE PARM ADDRESS
         B     PROLOG
         DC    C'SPFSTOW  05/15/84 BRIAN COOK'
PROLOG   DS    0H
         GETMAIN R,LV=4096        GET MY SAVE AREA ADDRESS
         LR    R11,R1             SAVE GETMAIN POINTER
         ST    R13,4(R11)         STORE BACKWARDS POINTER
         ST    R11,8(R13)         STORE FORWARD POINTER
         LR    R13,R11
         USING STOWSAVE,13
*
GETPARM  DS    0H
         LM    R2,R5,0(10)    R2=ADDRESS OF OPEN DIRECTORY DCB
         L     R3,0(,R3)      R3=NUMBER OF CARDS
*                             R4=ADDRESS OF USERID
*                             R5=ADDRESS OF MEMBER NAME
*
         MVC   BLDLENT(60),BLDLAREA
         MVC   MEMNAME(8),0(R5)  MOVE THE MEMBER NAME
*
         EJECT
         BLDL  (2),BLDLENT
*
         LTR   R15,15
         BZ    *+10
         LA    R14,BLDLENT
         DC    X'0000'
         MVC   SPFVER(30),SPFVER+2   SKIP BLDL JUNK
*
         CLI   STALIAS,X'0F'
         BNE   NOTASPF
*
         SR    R15,R15
         IC    R15,SPFMOD
         LA    R15,1(,R15)
         STC   R15,SPFMOD
*
         B     ITSASPF
*
NOTASPF  DS    0H
         MVC   SPFVER(5),=X'0100000000'
         MVI   STALIAS,X'0F'
ITSASPF  DS    0H
*
         MVC   SPFUID(8),SPACES
         MVC   SPFUID(5),0(R4)    USERID
*
         TIME  DEC
         STCM  R1,7,SPFMODT
         CLC   SPFCRDT(3),SPACES
         BNE   *+8
         STCM  R1,7,SPFCRDT
         SRL   R0,16              SHIFT OFF SECONDS
         STCM  R0,3,SPFMODTM
         STCM  R3,3,SPFSIZE
         CLC   SPFSIZEI(2),SPACES
         BNE   *+8
         STCM  R3,3,SPFSIZEI
*
         STOW  (2),MEMNAME,R
*
*
*
JUSTEOJ  DS    0H
*
         L     R13,4(,R13)  PICK UP CALLING SAVE AREA
         FREEMAIN R,LV=4096,A=(11)
         LM    R14,R12,12(R13)
         SR    R15,15
         BR    R14
         TITLE 'WORKING STORAGE AREAS'
SPACES   DC    CL16' '
FZEROS   DC    F'0'
BLDLAREA DS    0H
         DC    H'1'     NUMBER OF ENTRIES IN BLDL LIST
         DC    H'56'    LENGTH OF ENTRY
         DC    56X'40'
         LTORG
         TITLE 'DSECT '
STOWSAVE DSECT
         DS    18F
BLDLENT  DS    F
MEMNAME  DS    CL8
TTRC     DS    XL3
STALIAS  DS    XL1
*
*    SPF USER DATA
*
SPFVER   DS    XL1
SPFMOD   DS    XL1
         DS    XL2
         DS    XL1
SPFCRDT  DS    PL3
         DS    XL1
SPFMODT  DS    PL3
SPFMODTM DS    XL2
SPFSIZE  DS    XL2
SPFSIZEI DS    XL2
SPFMOD2  DS    XL2
SPFUID   DS    CL7
         DS    CL3
BLDLPAD  DS    XL2
         END
/*
//LKED1   EXEC PGM=HEWL,PARM=(XREF,LET,LIST,RENT,TERM),
//             COND=(2,LT,ASM),REGION=1024K
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.LINKLIB,UNIT=SYSDA,VOL=SER=MVSTGT
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  SETCODE AC(1)
     NAME ETPSEDT3(R)
/*
//LKED2   EXEC PGM=HEWL,PARM=(XREF,LET,LIST,RENT,TERM),
//             COND=(2,LT,ASM),REGION=1024K
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD  DISP=SHR,DSN=SYS1.LINKLIB,UNIT=SYSDA,VOL=SER=MVSYSA
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  SETCODE AC(1)
     NAME ETPSEDT3(R)
/*
//LLA   EXEC PGM=MVSCMD,PARM='F LLA,REFRESH'
