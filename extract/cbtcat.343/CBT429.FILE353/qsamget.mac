//ASQCCASM  JOB (X0041,QCC,ASQCC),'X-COOK BRIAN',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=ASQCC
/*JOBPARM L=99,SYSAFF=MVSB
//*
//*  TECH.XA.SOURCE(JDFASM2)
//*
//JOBLIB   DD  DSN=SYS1.LINKLIB,DISP=SHR,
//         UNIT=SYSDA,VOL=SER=MVSTGT
//*
//ASM1    EXEC PGM=IEV90,REGION=1024K,
//        PARM='OBJECT,NODECK,TERM,XREF(SHORT),BATCH,RENT'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR,
//         UNIT=SYSDA,VOL=SER=MVSTGT
//         DD  DSN=SYS1.AMODGEN,DISP=SHR,
//         UNIT=SYSDA,VOL=SER=MVSDLB
//         DD  DSN=SYS2.MACLIB,DISP=SHR  <== $AMODE
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(5,5)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
QSAMGET  TITLE 'CHANGE LOG'
QSAMGET  CSECT
QSAMGET  AMODE ANY
QSAMGET  RMODE 24
***********************************************************************
*                                                                     *
* CHANGE LOG                                                          *
*                                                                     *
*  9/30/86 BRIAN COOK    INITIAL ENTRY.                               *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
           TITLE 'LINK-ABLE QSAM GET MODULE FOR 31-BIT PROGRAMS'
***********************************************************************
*                                                                     *
*                                                                     *
*                   QSAM GET PROGRAM                                  *
*                                                                     *
*                                                                     *
* ABSTRACT: ISSUE QSAM GET MACRO ON BEHALF OF 31-BIT PROGRAMS.        *
*                                                                     *
*                                                                     *
* FUNCTION: THIS IS A RE-ENTRANT PROGRAM THAT CAN BE DYNAMICALLY      *
*           "LINK"ED TO BY A 31-BIT PROGRAM TO PERFORM A QSAM "GET".  *
*                                                                     *
*           NOTE THAT BOTH THE DCB AND THE RECORD AREA   MUST BE IN   *
*           24-BIT MEMORY.                                            *
*                                                                     *
*                                                                     *
*                                                                     *
* LINKAGE:  STANDARD PARAMETER LIST FORMAT, POINTED TO BY REG 1:      *
*                                                                     *
*           FULL-WORD 1 ==>  ADDRESS OF DCB                           *
*           FULL-WORD 2 ==>  ADDRESS OF RECORD (IF "MOVE" MODE)       *
*                                                                     *
*                                                                     *
***********************************************************************
         TITLE 'ENTRY POINT LOGIC'
         PRINT GEN
         USING *,12
*
         SAVE  (14,12),,QSAMGET_09/30/86_BRIAN_COOK_&SYSTIME_&SYSDATE
*
         LR    R12,R15        SET BASE 1
*
         LR    R9,R1          SAVE PARM REGISTER
         LM    R10,R11,0(R9)  SET R10=DCB, R11=RECORD
         USING IHADCB,10
*
         GETMAIN R,LV=4096,LOC=(BELOW)
*
         ST    R1,8(R13)      LINK SAVE AREAS
         ST    R13,4(R1)      SAVE THE CALLER'S R13
         LR    R13,R1         SET SAVE AREA
         USING WORKAREA,13
*
         $AMODE 24
*
         SR    R8,R8
         IC    R8,0(,R13)          PICK UP 31-BIT FLAG
         SRL   R8,7                SHIFT OUT EVERYTHING ELSE
*
         CLM   R11,15,FOXES        "CLOSE" REQUEST?
         BNE   TSTOPEN             NO, TEST FOR DCB OPEN
*
         TM    DCBOFLGS,DCBOFOPN   DCB OPEN?
         BO    DOCLOSE             YES, CLOSE IT
*
         SR    R15,R15             JUST SET RETURN CODE ZERO
         B     MODE31
*
DOCLOSE  DS    0H
*
         MVC   OPENMFE(OPENMFLN),OPENMFL
         CLOSE ((10)),MF=(E,OPENMFE)
         MVC   4(4,R9),FOXES       INDICATE FILE IS CLOSED
*
         LR    R5,R15              SAVE RETURN CODE FROM CLOSE
*
         B     MODE31
*
TSTOPEN  DS    0H
*
         TM    DCBOFLGS,DCBOFOPN   DCB OPEN?
         BO    OPENED              YES, TEST MACRF
*
OPENOUT  DS    0H
*
         MVC   OPENMFE(OPENMFLN),OPENMFL
         MVC   DCBEODA(3),=AL3(DOCLOSE)
         OPEN  ((10),(INPUT)),MF=(E,OPENMFE)
*
         TM    DCBOFLGS,DCBOFOPN   DCB OPEN?
         BO    OPENED              YES, TEST MACRF
*
         LR    R5,R15              SAVE RETURN CODE FROM OPEN
*
         B     MODE31
*
OPENED   DS    0H
*
         TM    DCBMACR1,DCBMRLCG   LOCATE MODE?
         BO    GETLOCAT            YES, ISSUE GET-LOCATE
*
GETMOVE  DS    0H
*
         GET   (10),(11)
*
         LR    R5,R15         SAVE RETURN CODE
*
         B     MODE31
*
GETLOCAT DS    0H
*
         GET   (10)
         LA    R1,0(,R1)      CLEAR LEFT BYTE
         ST    R1,4(,R9)      SET BUFFER ADDRESS
*
         LR    R5,R15         SAVE RETURN CODE
*
MODE31   DS    0H
*
         LTR   R8,R8         INVOKED IN 24-BIT MODE?
         BZ    RETURNRC      YES, LEAVE THAT WAY
*
         $AMODE 31
*
RETURNRC DS    0H
*
         L     R3,4(,R13)     RESTORE THE CALLER'S R13
         FREEMAIN R,LV=4096,A=(13)
*
         LR    R13,R3
         LR    R15,R5
         LM    R0,R12,20(R13)
         L     R14,12(,R13)
         BR    R14
*
         TITLE 'CONSTANTS'
         DS    0F
OPENMFL  OPEN  (OPENMFL,(INPUT)),MF=L
OPENMFLN EQU   *-OPENMFL
FOXES    DC    X'FFFFFFFF'
         LTORG
         CNOP  0,8
         TITLE 'GETMAINED AREA'
WORKAREA DSECT
         DS    18F
*
         DS    0F
OPENMFE  DS    XL(OPENMFLN)
*
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12                  1ST BASE REG
R13      EQU   13                  WORK AREA
R14      EQU   14
R15      EQU   15
*
         TITLE 'DCB DSECT'
         DCBD  DSORG=PS,DEVD=DA
         END
/*
//LKED1    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,TERM,RENT,REUS),
//            COND=(2,LT,ASM1),REGION=1024K
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,PASS)
//         DD   DDNAME=SYSIN
//SYSLIB   DD   DISP=SHR,DSN=ISP.V2R2M0.ISPLOAD,
//         UNIT=SYSDA,VOL=SER=MVSTGT
//*YSLMOD  DD   DISP=SHR,DSN=ASQCC.TEST.STEPLIB
//SYSLMOD  DD   DISP=SHR,DSN=SYS2.LINKLIB
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSTERM  DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSIN    DD   *
    MODE AMODE(ANY),RMODE(24)
    NAME QSAMGET(R)
/*
