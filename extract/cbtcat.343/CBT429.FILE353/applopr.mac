//ASQCCOPR  JOB (X0002,QCC,ASQCC),'X-BRIAN COOK',
//   MSGCLASS=X,
//   MSGLEVEL=(1,1),CLASS=X,NOTIFY=ASQCC
/*JOBPARM L=999
//ASM     EXEC PGM=IEV90,REGION=2048K,
//        PARM='OBJECT,NODECK,TERM,BATCH'
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DISP=SHR,DSN=SYS2.MACLIB     <=== TCBUVTAM
//SYSUT1   DD  SPACE=(CYL,(5,5)),
//             UNIT=SYSDA
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSPUNCH DD  DUMMY
//SYSLIN   DD  DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(1,1)),
//             DISP=(MOD,PASS)
//SYSIN    DD  *
APPLOPR  TITLE '* * *  MCS - MVS MASTER CONSOLE SUPPORT       * * *'
***********************************************************************
*                                                                     *
*  PURPOSE - PROVIDE MVS MASTER CONSOLE SUPPORT UNDER APPLMON.        *
*                                                                     *
***********************************************************************
         EJECT
APPLOPR  CSECT
         USING *,12,11,10
         STM   R14,R12,12(R13)
         LR    R12,R15             LOAD BASE REGISTER
         LR    R2,R13              SAVE PREVIOUS RSA POINTER
         LR    R11,R12             LOAD BASE
         A     R11,FOURK                     REGISTER 2
         LR    R10,R11             LOAD BASE
         A     R10,FOURK                     REGISTER 3
*
         USING PSA,0
         L     R1,PSATOLD
         USING TCB,1
         L     R1,TCBUSER
         USING TCBUVTAM,1
         LA    R13,TCBUSAV2
         DROP  1
         USING TCBUSAV2,13
*
         ST    R2,4(R13)           CHAIN SAVE AREAS
         ST    R13,8(R2)           CHAIN SAVE AREAS
*
         B     MCSAUTH
*
FOURK    DC    F'4096'
         EJECT
MCSAUTH  DS    0H
*
*
*
MCSLOOP1 DS    0H
*
*  CALL "MCS" PROGRAM TO PICK UP MASTER CONSOLE TRAFFIC
*
         LA    R1,MCSLINES         POINT TO MCS LINES
         ST    R1,MCSPARM
         LA    R1,MCSPARM
         CALL  MCS
         LTR   R2,R15
         BZ    MCSRTRN
*
         LA    R4,MCSLINE1
         LA    R3,43
*
MCSLOOP2 DS    0H
         MVC   3(3,R4),=X'1D6040'
         MVC   6(75,R4),5(R4)
         LA    R4,81(,R4)
         BCT   R3,MCSLOOP2
*
MCSLOOP3 DS    0H
*
         LA    R3,MCSLINES         POINT TO MCS LINES
         LA    R4,MCSLINE1
         SR    R5,R5
*
MCSLOOP4 DS    0H
*
*  COPY THE MCS LINES TO THE SCREEN.
*
         CLI   0(R3),X'FF'
         BE    MCSCMDLN
*
         MVC   5(76,R4),0(R3)
         LA    R3,76(,R3)
         LA    R4,81(,R4)
         LA    R5,81(,R5)
         BCT   R2,MCSLOOP4
*
MCSCMDLN DS    0H
*
*  COPY THE COMMAND LINE TO THE SCREEN
*
         LA    R4,81(,R4)
         LA    R5,81(,R5)
         MVC   3(3,R4),=X'1D4013'
         MVI   6(R4),C'*'
         MVC   7(76,R4),LASTCMD
         LA    R5,81(,R5)
*
MCSVPUT1 DS    0H
*
*  SEND THE SCREEN
*
*
         LA    R1,MCSTEXT
         LR    R0,R5
         L     R15,TCBUVPUT
         BALR  R14,R15             CLEAR REG
*
*  RECEIVE RESPONSE
*
         LA    R1,MCSIN
         LA    R0,80
         L     R15,TCBUVGET
         BALR  R14,R15             CLEAR REG
*
*  ANALYZE RESPONSE
*
         L     R15,TCBURPLA        POINT TO RECEIVE RPL
         USING IFGRPL,15
         L     R1,RPLRLEN          STORE LENGTH IN RPL
         DROP  15
*
         LTR   R1,R1               Q. ANY INPUT
         BZ    MCSLOOP1            ...NO, GO ASK AGAIN
*
         CLI   MCSIN,X'7D'         ENTER
         BNE   MCSRTRN
*
         CLI   MCSIN+6,C'*'        Q. ANY INPUT
         BE    MCSLOOP1            ...NO, GO ASK AGAIN
*
MCSENTER DS    0H
         MVI   LASTCMD,C' '
         MVC   LASTCMD+1(75),LASTCMD
         BCTR  R1,0
         EX    R1,MOVCMD1
         EX    R1,UPCASE1
*
         LA    R15,1               SET FUNCTION CODE
         SR    R0,R0
         LA    R1,MVSCMD
         SVC   242
*
         B     MCSLOOP1
*
MOVCMD1  MVC   LASTCMD(1),MCSIN+6
UPCASE1  OC    LASTCMD(1),BLANKS
*
BLANKS   DC    CL80' '
*
MVSCMD   DC    Y(80),Y(00)
LASTCMD  DC    CL76'* TYPE COMMANDS OVER THE ASTERISK'
*
MCSRTRN  DS    0H
         L     R13,4(R13)          RESTORE CALLERS RSA
         RETURN (14,12),RC=0       RESTORE REGISTERS AND RETURN
*
         LTORG
         DROP  12
         DROP  11
         DROP  10
         TITLE 'A P P L M O N - MCS DISPLAY SCREEN '
*
*
MCSTEXT  DS    0H
         DC    X'7EC2'
MCSLINE1 DC    X'1140401D60',CL76' '
         DC    X'11C1501D60',CL76' '
         DC    X'11C2601D60',CL76' '
         DC    X'11C3F01D60',CL76' '
         DC    X'11C5401D60',CL76' '
         DC    X'11C6501D60',CL76' '
         DC    X'11C7601D60',CL76' '
         DC    X'11C8F01D60',CL76' '
         DC    X'114A401D60',CL76' '
         DC    X'114B501D60',CL76' '
         DC    X'114C601D60',CL76' '
         DC    X'114DF01D60',CL76' '
         DC    X'114F401D60',CL76' '
         DC    X'1150501D60',CL76' '
         DC    X'11D1601D60',CL76' '
         DC    X'11D2F01D60',CL76' '
         DC    X'11D4401D60',CL76' '
         DC    X'11D5501D60',CL76' '
         DC    X'11D6601D60',CL76' '
         DC    X'11D7F01D60',CL76' '
         DC    X'11',X'D9',X'40',CL76' '
         DC    X'11',X'5A',X'50',CL76' '
         DC    X'11',X'5B',X'60',CL76' '
         DC    X'11',X'5C',X'F0',CL76' '
         DC    X'11',X'5E',X'40',CL76' '
         DC    X'11',X'5F',X'50',CL76' '
         DC    X'11',X'60',X'60',CL76' '
         DC    X'11',X'61',X'F0',CL76' '
         DC    X'11',X'E3',X'40',CL76' '
         DC    X'11',X'E4',X'50',CL76' '
         DC    X'11',X'E5',X'60',CL76' '
         DC    X'11',X'E6',X'F0',CL76' '
         DC    X'11',X'E8',X'40',CL76' '
         DC    X'11',X'E9',X'50',CL76' '
         DC    X'11',X'6A',X'60',CL76' '
         DC    X'11',X'6B',X'F0',CL76' '
         DC    X'11',X'6D',X'40',CL76' '
         DC    X'11',X'6E',X'50',CL76' '
         DC    X'11',X'6F',X'60',CL76' '
         DC    X'11',X'F0',X'F0',CL76' '
         DC    X'11',X'F2',X'40',CL76' '
         DC    X'11',X'F3',X'50',CL76' '
         DC    X'11',X'F4',X'60',CL76' '
*
*
*
MCSIN    DS    XL86
*
MCSPARM  DS    F
MCSLINES DS    XL3344
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         TITLE 'A P P L M O N - DSECTS'
TCBUVTAM DSECT
         TCBUVTAM PFX=TCBU
         PRINT NOGEN
         IKJTCB
         IFGRPL AM=VTAM
         IHAPSA
         END
         TITLE 'CONSOLE DISPLAY FACILITY (MCS)'
***********************************************************************
*                                                                     *
*                                                                     *
*                 CONSOLE DISPLAY FACILITY (MCS)                      *
*                                                                     *
*                                                                     *
* ABSTRACT: DISPLAY MVS MASTER CONSOLE ACTIVITY AND PROCESS MVS       *
*           AND JES COMMANDS.                                         *
*                                                                     *
*                                                                     *
* FUNCTION: MCS IS DESIGNED TO OPERATE UNDER APPLMON.                 *
*                                                                     *
*           IT PROVIDES A CONSOLE DISPLAY AND MVS/JES2 COMMAND        *
*           INTERFACE SIMILAR TO AN OS CONSOLE.                       *
*                                                                     *
*           MCS LOOKS AT VARIOUS MVS SP 1.3.0 CONTROL BLOCKS.         *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCE: NONE.                                           *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* CHANGE LOG:                                                         *
*                                                                     *
*  12/04/84  INITIAL ENTRY.                                           *
*    BCOOK                                                            *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*
* NOTE THE FOLLOWING ENTRY POINT LOGIC IS NON-STANDARD. IN PARTICULAR,
*      IT WILL NOT WORK WITH CALLED PL/I PROGRAMS.
*
***********************************************************************
MCS      CSECT
         USING *,13,12,11,10
         B     72(,15)
         DC    17F'0'
         STM   14,12,12(13)   SAVE CALLING PGM'S REGISTERS
         LA    R2,0(,R15)     LOAD EPA IN R2 FOR WORK REGISTER
         ST    R2,8(R13)      LINK SAVE AREAS
         ST    R13,4(R2)      SAVE THE CALLER'S R13
*
SETBASES DS    0H
         LR    R13,R2         SET SAVE AREA AND BASE 1
         LR    R12,R2         SET
         A     R12,L4096          BASE 2
         LR    R11,R12        SET
         A     R11,L4096          BASE 3
         LR    R10,R11        SET
         A     R10,L4096          BASE 4
*
         L     R9,0(,R1)      POINT TO PARAMETER LIST
         ST    R9,LINEPTR     POINT TO FIRST OUTPUT LINE
*
         B     SHOWCONS
*
*
SHOWRTRN DS    0H
         L     R13,4(R13)     RESTORE THE CALLER'S R13
         LM    R0,12,20(13)   RETURN TO OUR CALLER
         L     14,12(13)   RETURN TO OUR CALLER
         BR    14             AND RETURN
*
L4096    DC    F'4096'
*
         TITLE 'MCS   START OF SHOW CONSOLE LOOP'
SHOWCONS DS    0H
*
*
*---------------------------------------------------------------------*
*                                                                     *
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*                                                                     *
*---------------------------------------------------------------------*
BLDUCMS  L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB
         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         XR    R2,R2              R2  = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB
         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)
         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMDONE            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BL    UCMLOOP            NOPE; KEEP GOING
UCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND
         DROP  R4
*---------------------------------------------------------------------*
*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT        GMM*
*        CONSOLE WHEN ENTERING THE "JESOPER" COMMAND.              GMM*
*---------------------------------------------------------------------*
SETMAST  LA    R4,1               SET DEFAULT TO FIRST CONSOLE     JL1
MASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE GMM
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?              GMM
         BNH   MASTCONT           NO, CONTINUE                     GMM
         ABEND 1                  IMPOSSIBLE .. NO MASTER CONSOLE ?GMM
MASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX  GMM
         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT  GMM
         L     R5,0(0,R5)         SET POINTER TO UCM               GMM
         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM         GMM
         L     R6,UCMXB
         USING IEERDCM,6
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?        GMM
         BO    MASTFND            YES ? FOUND THE MASTER CONSOLE ..GMM
         SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE GMM
         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE      GMM
         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOPGMM
MASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE GMM
         ST    R4,OLDCONS         SET VALID OLD CONSOLE NUMBER     GMM
         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)GMM
         MVC   CDFUCMID(1),UCMID  SAVE THE UCMID OF THE MASTER      BC
         L     R7,UCMUCB          R7 = ADDR OF UCB
         L     R7,DCMADTRN        GET ADDRESS OF TDCM              GMM
         USING STRTDCM,7
         SPACE 2
         TITLE 'MCS   CROSS MEMORY SERVICES     '
*---------------------------------------------------------------------*
*                                                                     *
*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
         L     R3,CONSOLE         LOAD THE CONSOLE NUMBER
         MODESET MF=(E,SUPRMOD)   GET INTO SUPV STATE AND KEY ZERO JPB
*
*                                      SET UP FOR CROSS MEMORY MOVE
*
         AXRES AXLIST=AXLIST           RESERVE AN AX               JPB
         SPACE 2
         LA    R1,CONSASID             'CONSOLE' ASID IS 5         JPB
         AXEXT ASID=(1)                EXTRACT AX OF 'CONSOLE'IN R0JPB
         SPACE 2
         AXSET AX=(0)                  SET OUT AX TO THAT OF CONSOLEPB
         SPACE 2
         LA    R1,CONSASID             'CONSOLE' ASID IS 5         JPB
         SSAR  R1                      SET 'CONSOLE' AS SECONDARY  JPB
         SPACE 2
         PRINT ON,GEN
*
*                                      PICK UP LAST LINE
*
*                                      PICK UP START ADDRESS
*
         LA    R1,CONSASID
         SSAR  R1
         LA    R1,4               SET TRUE LENGTH                  JPB
         SLR   R0,R0              SET STORAGE KEY                  JPB
         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB
*
*                                      SET UP FOR XMEM MOVE LOOP
*
         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         LA    R5,M4BUFLEN        R5 = 3278-4 BUFFER LEN (35 LINES)
         LA    R9,M4BUFLEN        R9 = 3278-4 BUFFER LEN (35 LINES)
M4BUFLEN EQU   35*80              LENGTH OF 3278-4 BUFFER
MOVEBUFF DS    0H
         SH    R8,=H'6'
         SLR   R0,R0              RESET THE KEY
*
MVCPLOOP DS    0H
         MVCP  0(R5,R4),0(R8),R0  LOOP THRU THE CONSOLE BUFFER
*
         BZ    RESETSAR
         AL    R8,=F'256'         MAX LEN ALLOWED
         AL    R4,=F'256'         MAX LEN ALLOWED
         SL    R5,=F'256'         MAX LEN ALLOWED
         B     MVCPLOOP
*
RESETSAR DS    0H
*---------------------------------------------------------------------*
*                                                                     *
*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *
*        SECONDARY ADDRSPC MUST BE THE SAME                           *
*                                                                     *
*---------------------------------------------------------------------*
*
         EPAR  R1                 EXTRACT PRIMARY ASN
         SSAR  R1
         MODESET KEY=NZERO                                         GMM
*
         DROP  R5,R6,R7                                            GMM
*
GOTITALL DS    0H
*
         TITLE 'MCS   SCAN FOR REPLIES AND MOUNTS'
SCANEM   DS    0H
*
         XR    R8,R8              R8 = COUNTER = 0
         LA    R3,BUF             SET POINTER TO FIRST LINE
*
SCNEXT   DS    0H
         CLC   IEEMSG(3),6(R3)   END OF SCREEN
         BE    SCLAST            DISPLAY THE TABLE
         CLC   BLANKS(70),5(R3)  ALL SPACES
         BE    SCBUMP            BUMP TO NEXT LINE
         LA    R8,1(0,R8)         ADD 1 TO COUNTER
         L     R7,LINEPTR
         MVC   0(76,R7),8(R3)  MOVE IT TO SPF AREA
         LA    R7,76(,R7)       ADD THE ENTRY TO THE TABLE
         ST    R7,LINEPTR
*
SCBUMP   DS    0H
         LA    R3,84(0,R3)        POINT TO NEXT LINE
*
         B     SCNEXT             CHECK IT OUT
*
BLANKS   DC    CL80' '
SCLAST   DS    0H
*
         L     R7,LINEPTR
         MVC   0(76,R7),6(R3)  MOVE IT TO SPF AREA
         LA    R7,76(,R7)       ADD THE ENTRY TO THE TABLE
         ST    R7,LINEPTR
         B     COUNTEM           DISPLAY THE TABLE
*
IEEMSG   DC    C'IEE152I'        BOTTOM MESSAGE ON OPER CONSOLE
         TITLE 'MCS   COUNT LINES TO BE DISPLAYED'
COUNTEM  DS    0H
*
*
         L     R7,LINEPTR
         MVI   0(R7),X'FF'
         MVC   1(76,R7),0(R7)
*
*
         LR    R15,R8             R8 = COUNTER = 0
         B     SHOWRTRN
*
         TITLE 'MISCELLANEOUS CONSTANTS'
         LTORG
*
         DS    0F
LINEPTR  DS    F
CONSOLE  DS    F
OLDCONS  DS    F
CDFUCMID DS    XL1
*
*---------------------------------------------------------------------*
*                                                                     *
*        FOLLOWING IS IN SUPPORT OF C M S                             *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 2
SIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER
AXLIST   DC    H'1',H'0'           AXRES PARMLIST
CONSASID EQU   5                   'CONSOLE' ASID FOR CMS
         SPACE 2
         CNOP  0,8
*---------------------------------------------------------------------*
*                                                                     *
*               DISPLAY SCREEN - IMAGE BUFFER SECTION                 *
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL40'BUF  THIS IS THE START OF THE BUFFER  =>'
BUF      DC    21CL80' '          OPERATORS SCREEN BUFFER
         DC    14CL80' '          PLUS EXTRA FOR 3278-4
         DC    CL40'<= BUF  THIS IS THE END   OF THE BUFFER '
*---------------------------------------------------------------------*
*                                                                     *
*               DISPLAY SCREEN - TRAILER SECTION                      *
*                                                                     *
*---------------------------------------------------------------------*
         LTORG
         DS    0F
UCMTAB   DS    F
         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES
UCMTABE  EQU   *
NUMUCMS  DS    H
         SPACE 5
         TITLE 'EQUATES'
***********************************************************************
*                                                                     *
*        REGISTER EQUATES                                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L                            GMM
PROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L                          GMM
         EJECT
         PRINT NOGEN
*.....................................................................*
*        MAPPING DSECT FOR SRM USER CONTROL BLOCK
*.....................................................................*
         IRAOUCB
*.....................................................................*
*        MAPPING DSECT FOR DMDT (DOMAIN DESCRIPTOR TABLE)             *
*.....................................................................*
         SPACE
DMDT     DSECT
DMDTNO   DS    XL1             DOMAIN NUMBER
DMDTLO   DS    XL1             MIN  MPL LEVEL
DMDTHI   DS    XL1             MAX  MPL LEVEL
DMDTWT   DS    XL1             WEIGHTING FACTOR
DMDTMPLT DS    XL2             CURRENT MPL TARGET
DMDTRUA  DS    XL2             AVE # OF READY USERS
DMDTGOOU DS    XL2             CURRENT # USERS GOING OUT
DMDTCMPL DS    XL2             CURRENT MPL
DMDTOUTU DS    XL2             CURRENT # USERS ON OUT Q
DMDTINCU DS    XL2             CURRENT # SWAPPABLE INCORE USERS
DMDTRUC  DS    XL4             ACCUM FOR READY USER AVERAGE
DMDTEND  DS    0X              END OF DMT
DMDTLEN  EQU   *-DMDT
         SPACE 2
*
* EQUATES....
*
RMCTDMDT EQU   X'B4'           POINTER TO DOMAIN TABLE
RMCTDMNC EQU   X'BC'           COUNT OF NUMBER OF DOMAINS
RMCTWMST EQU   X'18'           ADDRESS OF WLM SPEC TABLE
         SPACE 2
         TITLE '*** COMMUNICATION VECTOR TABLE ***'                GMM
         CVT   DSECT=YES                                           GMM
         TITLE '*** RDCM DSECT ***'                                GMM
IEERDCM  DSECT ,                                                   GMM
         IEECRDCM                                                  GMM
         TITLE '*** TDCM DSECT ***'                                GMM
IEETDCM  DSECT ,                                                   GMM
         IEECDCM                                                   GMM
         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***' GMM
         IEECUCM FORMAT=NEW
         END
/*
//LKED    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,NCAL,TERM),
//             COND=(4,LT,ASM),REGION=1024K
//SYSLIN   DD  DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLIB   DD  DSN=SYS2.LINKLIB,DISP=SHR
//SYSLMOD  DD  DISP=SHR,
//             DSN=TECH.SERV.LOAD
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSTERM  DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  SETCODE AC(1)
     NAME APPLOPR(R)
/*
