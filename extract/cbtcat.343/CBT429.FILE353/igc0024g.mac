//ASYSFSVC JOB (X0002,YSF,ASYSF),'X-CITTADINO, MIKE',CLASS=X,
//         MSGCLASS=X
//ASSEMBLY EXEC PGM=IEV90,
//            REGION=2048K,
//            PARM='LINECOUNT(55),DECK,NOOBJECT,ALIGN,TERM,RENT'
//SYSLIB   DD  DSN=SYS1.AMACLIB,DISP=SHR,DCB=(BLKSIZE=19040)
//         DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYS3.ACF2R41.ACFMAC,DISP=SHR
//SYSLIN   DD  DUMMY
//SYSGO    DD  DUMMY
//SYSPUNCH DD  DSN=&&SYSPUNCH(IGC0024G),
//            UNIT=SYSDA,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120),
//            SPACE=(TRK,(5,5,1)),
//            DISP=(NEW,PASS)
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(3,1))
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  *
IGC0024G TITLE 'IGC0024G - PROGRAM ABSTRACT'
         PRINT ON,NOGEN,NODATA
         SPACE 3
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        * * * * * * * * * * * * * * * * * * * * * * * * * * *        *
*        *                                                   *        *
*        * FUNCTION : TO PREFORM ACCESS VALIDATION OF ACF2   *        *
*        *            GENERALIZED RESOURCES (GRS).           *        *
*        *                                                   *        *
*        * INPUT    : A STANDARD CALL FORMAT PARMLIST IS     *        *
*        *            PASSED IN REGISTER 1.                  *        *
*        *                                                   *        *
*        *            1. ONE BYTE OF OPTION SWITCHES         *        *
*        *             X'80' - IF THIS BIT IS SET THE RETURN *        *
*        *                     CODE WILL INDICATE IF A RULE  *        *
*        *                     EXISTS FOR THE SUPPLIED GRS   *        *
*        *                     TYPE/NAME COMBINATION.        *        *
*        *                                                   *        *
*        *             X'40' - IF THIS BIT IS SET VALIDATION *        *
*        *                     FAILURES WILL BE LOGGED BY    *        *
*        *                     ACF2.                         *        *
*        *                                                   *        *
*        *             X'20' - IF THIS BIT IS SET ANY ACF2   *        *
*        *                     ERROR MESSAGES ASSOCIATED     *        *
*        *                     WITH RC=8 FROM A VALIDATION   *        *
*        *                     REQUEST WILL BE OUTPUT AS     *        *
*        *                     WTO MESSAGES.                 *        *
*        *                                                   *        *
*        *             X'08' - VALIDATE ADD ACCESS           *        *
*        *             X'04' - VALIDATE DELETE ACCESS        *        *
*        *             X'02' - VALIDATE UPDATE ACCESS        *        *
*        *             X'01' - VALIDATE READ ACCESS (DEFAULT)*        *
*        *                                                   *        *
*        *            2. USERID TO BE VALIDATED. THIS PARM   *        *
*        *               IS PASSED AS A CL8 STRING LEFT PAD- *        *
*        *               DED WITH BLANKS.                    *        *
*        *                                                   *        *
*        *            3. CL3 GRS RESOURCE TYPE CODE          *        *
*        *                                                   *        *
*        *            4. THE GRS RESOURCE NAME. THIS PARM MAY*        *
*        *               BE PASSED AS A CL40 STRING LEFT PAD-*        *
*        *               ED WITH BLANKS OR AS A VARIABLE LEN.*        *
*        *               STRING WITH THE FIRST BYTE INDICAT- *        *
*        *               ING THE COUNT OF CHARACTERS 1-40.   *        *
*        *                                                   *        *
*        * OUTPUT   : UPON RETURN REGISTER 15 CONTAINS ONE   *        *
*        *            OF THE FOLLOWING RETURN CODES.         *        *
*        *                                                   *        *
*        *            0 - USERID IS AUTHORIZED FOR ACCESS TO *        *
*        *                THE RESOURCE OR RULE EXISTS.       *        *
*        *                                                   *        *
*        *            4 - USERID IS NOT AUTHORIZED FOR ACCESS*        *
*        *                TO THE RESOURCE OR NO RULE FOUND.  *        *
*        *                                                   *        *
*        *            8 - AN ERROR OCCURED DURING PROCESSING *        *
*        *                OF THE VALIDATION REQUEST.         *        *
*        *                                                   *        *
*        * * * * * * * * * * * * * * * * * * * * * * * * * * *        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         TITLE 'IGC0024G - PROGRAM INITALIZATION'
IGC0024G CSECT
         SPACE 1
*        *     *                  GENERAL REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
LINKREG  EQU   R7
         SPACE 1
         USING IGC0024G,R6         DECLARE PROGRAM BASE REGISTER
         SPACE 1
         LR    R11,R14             SAVE RETURN ADDRESS
         LR    R2,R1               SAVE PARMLIST ADDRESS
         L     R1,0(,R1)           ADDRESS OPTION BYTE
         TM    0(R1),OPTVER        VERIFY ACCESS RULE EXISTS
         BO    NOLOGWA             YES, BRANCH
         TM    0(R1),OPTLOG        LOG ACCESS VIOLATIONS
         BZ    NOLOGWA             NO, BRANCH
         LH    R8,LOGGML           GET LENGTH FOR GETMAIN
         B     GETWA               GET PROGRAM STORAGE
NOLOGWA  EQU   *
         LH    R8,NLOGGML          GET LENGTH FOR GETMAIN
GETWA    EQU   *
         GETMAIN RU,LV=(R8)        GET STORAGE FOR PROGRAM WORKAREA
         LR    R13,R1              POINT TO PROGRAM WORK AREA
         USING WORKAREA,R13        ADDRESS WORKAREA STORAGE
         EJECT
         XC    SAVEAREA(72),SAVEAREA CLEAR REGISTER SAVEAREA
         ST    R2,PARMPTR          SAVE PARMLIST ADDRESS
         STH   R8,WAGML            SAVE GETMAIN LENGTH
         SPACE 1
         L     R1,0(,R2)           * COPY OPTION BYTE INTO WORKAREA
         MVC   OPTBYTE,0(R1)       *
         L     R1,4(,R2)           * COPY ACF USERID INTO WORKAREA
         MVC   USERID,0(R1)        *
         MVI   RESTYPE,C'R'        * COPY RESOURCE TYPE INTO WORKAREA
         L     R1,8(,R2)           *
         MVC   RESTYPE+1(3),0(R1)  *
         L     R1,12(,R2)          * COPY RESOURCE NAME INTO WORKAREA
         CLI   0(R1),40            CHECK FOR RESOURCE NAME IN VAR.
         BH    NOVRN               LENGTH FORMAT
         MVI   RESNAME,C' '          * COPY RESOURCE NAME IN VAR.
         MVC   RESNAME+1(39),RESNAME * LENGTH FORMAT
         SR    R8,R8                 *
         IC    R8,0(,R1)             *
         BCTR  R8,R0                 *
         EX    R8,MVCRNAME           *
         B     GETACVT               *
NOVRN    EQU   *
         MVC   RESNAME,0(R1)       MOVE RES NAME IN FIXED LEN. FORMAT
*
         TITLE 'IGC0024G - MAINLINE PROCESSING'
GETACVT  EQU   *
         TM    OPTBYTE,X'0F'       WERE ANY ACCESS BITS SPECIFIED
         BNZ   SETAUTH             YES, CONTINUE
         OI    OPTBYTE,OPTREAD     NO, DEFAULT TO READ ACCESS
SETAUTH  EQU   *
         ST    R4,TCBPTR           SAVE TCB ADDRESS
         L     R1,TCBJSCB-TCB(,R4) GET JSCB ADDRESS
         LA    R1,0(,R1)           CLEAR HIGH ORDER BYTE
         MVC   SAVEOPTS,JSCBOPTS-IEZJSCB(R1) GET JSCB OPTION BYTE
         OI    JSCBOPTS-IEZJSCB(R1),JSCBAUTH INSURE AUTHORIZED
         SPACE 1
         ACFINCVT R10,NONE=RET08   POINT TO ACF2 CVT
         USING ACCVT,R10
         SPACE 1
         BAL   LINKREG,GETLID      GET LID RECORD FOR USERID
         SPACE 1
         TM    OPTBYTE,OPTVER      VERIFY RESOURCE RULE EXISTS
         BZ    NOTVER              NO, BRANCH
         BAL   LINKREG,VERRUL      USE RULE INTERPERTER
         B     RET00               RULE FOUND
NOTVER   EQU   *
         TM    OPTBYTE,OPTLOG      VIOLATION LOGGING REQUESTED
         BZ    NOELOG              NO, BRANCH
         SPACE 1
         BAL   LINKREG,BLDAUCB     BUILD AUCB FOR VALIDATION CALL
         BAL   LINKREG,CHKAUTH     USE SVC TYPE=A CALL IF LOGGING
         B     RET00               AUTHORIZED RETURN
NOELOG   EQU   *
         BAL   LINKREG,GETRUL      * USE RULE INTERPERTER IF
         BAL   LINKREG,CHKRUL      * LOGGING TO BE SUPPRESSED
         B     RET00               AUTHORIZED RETURN
*
         TITLE 'IGC0024G - PROGRAM RETURN'
ACFERMSG DS    0H
*        *
*        *                         THE MESSAGE RETURNED BY ACF2 IS IN
*        *                         PUTLINE FORMAT, THE FOLLOWING CODE
*        *                         WILL CONVERT IT INTO WTO FORMAT
*        *
         MVC   MSGBUF+2(2),=X'8000' SET MCS FLAGS
         LH    R1,MSGBUF           GET MESSAGE LENGTH
         LA    R1,MSGBUF(R1)       POINT TO END OF MESSAGE TEXT
         MVC   0(4,R1),=X'00004020' SET DESCRIPTOR & ROUTING CODES
         WTO   MF=(E,MSGBUF)       WRITE THE MESSAGE
         B     RET08               RETURN ERROR
         SPACE 1
RET00    DS    0H                  AUTHORIZED USER RETURN
         LA    R2,0
         B     RET
RET04    DS    0H                  UNAUTHORIZED USER RETURN
         LA    R2,4
         B     RET
RET08    DS    0H                  ERROR RETURN
         LA    R2,8
         SPACE 1
RET      DS    0H
         L     R1,TCBPTR                       * POINT TO TASK TCB
         L     R1,TCBJSCB-TCB(,R1)             * GET ADDRESS OF JSCB
         LA    R1,0(,R1)                       * CLEAR HIGH ORDER
         MVC   JSCBOPTS-IEZJSCB(1,R1),SAVEOPTS * RESTORE OPTION BYTE
         LH    R4,WAGML            GET LENGTH FOR FREEMAIN
         FREEMAIN RU,LV=(R4),A=(R13) FREE WORKAREA STORAGE
         LR    R15,R2              SET RETURN CODE
         BR    R11                 RETURN TO CALLER
*
         TITLE 'IGC0024G - EXTERNAL CALL - GET LIDREC'
GETLID   DS    0H
*                                  ACF2 INFO CALL TO RETRIEVE THE
*                                  LID FOR A USERID THAT IS NOT THE
*                                  ID LOGGED ON TO THE ADDRESS SPACE
*
         XC    ACVALD(ACVLEN),ACVALD CLEAR ACVALD CONTROL BLOCK
         MVI   ACVFCN,X'01'        INDICATE CONTROL BLOCK TYPE
         MVI   ACVSFCN,ACVSINFO    INDICATE INFO CALL
         XC    MSGBUF,MSGBUF       CLEAR MESSAGE RETURN AREA
         LA    R0,MSGBUF           * SETUP ADDRESS OF MESSAGE AREA
         ST    R0,ACVMSG           *
         LA    R0,LIDREC           * SETUP ADDRESS OF LOGON ID
         ST    R0,ACVRECB          * BUFFER AREA
         LA    R0,LIDLEN           * SETUP LENGTH OF LOGON ID BUFFER
         ST    R0,ACVRECL          *
         LA    R0,ACUID            * SETUP ADDRESS OF USER ID
         ST    R0,ACVUIDB          * BUFFER AREA
         LA    R0,24               * SETUP LENGTH OF USERID ID BUFFER
         ST    R0,ACVUIDL          *
         MVC   ACVLID,USERID       * GET LOGONID FOR REQUEST
         SPACE 1
         ACFSVC ACVALD,TYPE=A,NONE=GETLIDER,CVT=HAVE GET LIDREC FOR ID
         LTR   R15,R15             WAS FUNCTION SUCCESSFUL
         BZR   LINKREG             YES, RETURN
         SPACE 1
         TM    ACVRFLG,ACVRMSG     WAS A MESSAGE RETURNED
         BZ    RET08               NO, RETURN ERROR
GETLIDER EQU   *
         TM    OPTBYTE,OPTMSG      WRITE OUT ERROR MESSAGES
         BZ    RET08               NO, RETURN ERROR
         B     ACFERMSG            YES, WRITE OUT THE ACF2 MESSAGE
*
         TITLE 'IGC0024G - EXTERNAL CALL - BUILD AUCB'
BLDAUCB  DS    0H
*                                  INITALIZE AUCB REQUIRED FOR THE
*                                  ACF2 EXTERNAL CALL INTERFACE.
*
         LA    R14,ACUCB           * ZERO OUT CONTROL BLOCK
         LA    R15,ACULEN          *
         SR    R1,R1               *
         MVCL  R14,R0              *
         MVC   ACULID,USERID       GET LOGON ID
         LA    R0,ACUID            * SETUP UID ADDRESS
         ST    R0,ACUUIDP          *
         LA    R0,LIDREC           * SETUP LIDREC ADDRESS
         ST    R0,ACULRECP         *
         MVI   ACUSIND,ACUSVS2     INDICATE SMF IS VS2
         L     R1,16                        * COPY SMF CPUID TO ACUCB
         L     R1,CVTSMCA-CVT(R1)           *
         MVC   ACUSCPU,SMCASID-SMCABASE(R1) *
*        *
*        *                         INSERT JOB/STEP NAME AS APPROPRIATE
*        *
         L     R1,TCBPTR           POINT TO TCB ADDRESS
         L     R1,TCBTIO-TCB(R1)   GET TIOT ADDRESS
         MVC   ACUSJOBN,0(R1)      COPY JOBNAME TO ACUCB
         MVC   ACUSTEP,8(R1)       COPY STEPNAME TO ACUCB
         TIME  BIN                 GET DATE/TIME
         STCM  R0,15,ACUSMTIM      SET SMF TIMESTAMP
         STCM  R1,15,ACUSMDAT      SET SMF DATE
         MVC   ACUSRTIM(8),ACUSMTIM SET READER TIME & DATE STAMPS
*        *
*        *                         FILL IN ACUCB FIELDS AS REQUIRED
*        *
         MVI   ACUSUIF,C' '                             * BLANK OUT
         MVC   ACUSUIF+1(ACUT1FLG-ACUSUIF-1),ACUSUIF    * ACUCB
         MVI   ACUSLIBS,C' '                            * CHARACTER
         MVC   ACUSJOBL+1(ACUSFT-ACUSJOBL-1),ACUSJOBL   * FIELDS
         MVI   ACUSLIBS,C' '                            *
         MVC   ACUSLIBS+1(ACUMUSID-ACUSLIBS-1),ACUSLIBS *
         MVC   ACUPGM,PGMNAME      * SETUP PROGRAM NAME IN ACUCB
         MVC   ACUSPGM,ACUPGM      *
         MVC   ACUSLIB,=CL44'SYS1.LINKLIB' * DEFAULT PGM LIBRARY TO
         MVC   ACUSLVOL,=CL8' '            * LINKLIST
         MVI   ACUT2FLG,ACUT2JOB   INDICATE PGM/LIB IS CURRENT
         MVC   ACUSKEY,=CL8' '     INITALIZE DATASET HLQ AS REQUIRED
         SPACE 1
         BR    LINKREG             RETURN
*
         TITLE 'ACFCHK - VERIFY RESOURCE RULE RECORD PRESENT'
VERRUL   DS    0H
*                                  ACF2 CALL TO RETRIEVE THE COMPILED
*                                  RULE RECORD FOR A SPECIFIC RESOURCE
*                                  TYPE/NAME COMBINATION.
*
         XC    ACGRSRC(ACGRSLEN),ACGRSRC CLEAR PARMLIST AREA
         MVI   ACGFCN,X'04'        INDICATE RESOURCE CALL
         MVI   ACGSFCN,ACGSRET     RETURN RULE RECORD
         MVI   ACGFLGS2,ACGNCACH   INDICATE NO USER CACHE
         MVI   ACGRFLGS,X'00'      CLEAR RETURNED FLAGS FIELD
         MVI   ACGUCB,X'FF'        * SET ACUCB POINTER FOR SUPERCALL
         MVC   ACGUCB+1(3),ACGUCB  *
         XC    MSGBUF,MSGBUF       CLEAR MESSAGE RETURN AREA
         LA    R0,MSGBUF           * POINT TO BUFFER FOR RETURNED
         ST    R0,ACGMSG           * MESSAGE
         LA    R0,RULBUF           * POINT TO BUFFER FOR RETURNED
         ST    R0,ACGRULAD         * RULE
         MVC   ACGRULEN,RULBUFL    SET RULE BUFFER LENGTH
         MVC   ACGRTYPE(4),RESTYPE SET GENERALIZED RESOURCE TYPE
         MVC   ACGRNAME,RESNAME    SET RESOURCE NAME
         MVC   ACGMODID,PGMNAME    SET PROGRAM NAME
         SPACE 1
         ACFSVC ACGRSRC,TYPE=A,NONE=VERRULER,CVT=HAVE GET THE RULE REC
         LTR   R15,R15             CHECK RETURN FROM SVC CALL
         BZR   LINKREG             RETURN IF CALL SUCCESSFUL
         SPACE 1
         CLC   MSGBUF+4(8),ACF04005 WAS ERROR = NO RULE RECORD FOUND
         BNE   VERRULER            NO, TREAT AS ERROR
         B     RET04               INDICATE NO RULE FOUND
VERRULER EQU   *
         TM    OPTBYTE,OPTMSG      ISSUE ACF ERROR MESSAGES
         BZ    RET08               NO, RETURN ERROR
         B     ACFERMSG            YES, WRITE THE ERROR MESSAGE
*
         TITLE 'IGC0024G - RETRIEVE RESOURCE RULE RECORD'
GETRUL   DS    0H
*                                  ACF2 CALL TO RETRIEVE THE COMPILED
*                                  RULE RECORD FOR A SPECIFIC RESOURCE
*                                  TYPE/NAME COMBINATION.
*
         XC    ACGRSRC(ACGRSLEN),ACGRSRC CLEAR PARMLIST AREA
         MVI   ACGFCN,X'04'        INDICATE RESOURCE CALL
         MVI   ACGSFCN,ACGSRET     RETURN RULE RECORD
         MVI   ACGFLGS2,ACGNCACH   INDICATE NO USER CACHE
         MVI   ACGRFLGS,X'00'      CLEAR RETURNED FLAGS FIELD
         MVI   ACGUCB,X'FF'        * SET ACUCB POINTER FOR SUPERCALL
         MVC   ACGUCB+1(3),ACGUCB  *
         XC    MSGBUF,MSGBUF       CLEAR MESSAGE RETURN AREA
         LA    R0,MSGBUF           * POINT TO BUFFER FOR RETURNED
         ST    R0,ACGMSG           * MESSAGE
         LA    R0,RULBUF           * POINT TO BUFFER FOR RETURNED
         ST    R0,ACGRULAD         * RULE
         MVC   ACGRULEN,RULBUFL    SET RULE BUFFER LENGTH
         MVC   ACGRTYPE(4),RESTYPE SET GENERALIZED RESOURCE TYPE
         MVC   ACGRNAME,RESNAME    SET RESOURCE NAME
         MVC   ACGMODID,PGMNAME    SET PROGRAM NAME
         SPACE 1
         ACFSVC ACGRSRC,TYPE=A,NONE=GETRULER,CVT=HAVE GET THE RULE REC
         LTR   R15,R15             CHECK RETURN FROM SVC CALL
         BZR   LINKREG             RETURN IF CALL SUCCESSFUL
         SPACE 1
         CLC   MSGBUF+4(8),ACF04005 WAS ERROR = NO RULE RECORD FOUND
         BNE   GETRULER            NO, TREAT AS ERROR
         TM    LIDMFLG,LIDMNCNL    IS THIS USER MARKED NO-CNCL
         BO    RET00               YES, INDICATE AUTH OK
         B     RET04               NO, INDICATE NOT AUTHORIZED
GETRULER EQU   *
         TM    OPTBYTE,OPTMSG      ISSUE ACF ERROR MESSAGES
         BZ    RET08               NO, RETURN ERROR
         B     ACFERMSG            YES, WRITE THE ERROR MESSAGE
*
         TITLE 'IGC0024G - INTERPERT RESOURCE RULE RECORD'
CHKRUL   DS    0H
*                                  CODING REQUIRED TO MAKE A CALL TO
*                                  THE GRS RULE INTERPERTER.
*
         SPACE 1
         XC    ACFGINTP(ACGPLEN),ACFGINTP * CLEAR PARMLIST AREA
         LA    R0,RULBUF           * POINT TO AREA CONTAINING RULE
         ST    R0,ACGPREC          * OBJECT RECORD
         LA    R0,RULWORKA         * POINT TO THE WORKAREA FOR THE
         ST    R0,ACGPWRK          * RULE INTERPERTER
         LA    R0,ACUID            * SETUP POINTER TO THE UID TO
         ST    R0,ACGPUID          * BE CHECKED
         TIME  DEC                 * USE CURRENT DATE FOR RULE
         STCM  R1,15,RULDATE       * VALIDATION
         LA    R0,RULDATE          * POINT TO ACCESS DATE
         ST    R0,ACGPDATE         *
         MVI   SRCNAME,C' '         * SETUP DUMMY SOURCE NAME
         MVC   SRCNAME+1(7),SRCNAME * OF CL8' '
         LA    R0,SRCNAME           * POINT TO SOURCE NAME
         ST    R0,ACGPSRCE          *
CHKRR    EQU   *
         TM    OPTBYTE,OPTREAD     IS READ ACCESS TO BE VALIDATED
         BZ    CHKRD               NO, BRANCH
         MVI   ACGPFLGS,ACGPREAD   INDICATE READ ACCESS
CHKRD    EQU   *
         TM    OPTBYTE,OPTDEL      IS DELETE ACCESS TO BE VALIDATED
         BZ    CHKRU               NO, BRANCH
         MVI   ACGPFLGS,ACGPDEL    INDICATE DELETE ACCESS
CHKRU    EQU   *
         TM    OPTBYTE,OPTUPDT     IS UPDATE ACCESS TO BE VALIDATED
         BZ    CHKRA               NO, BRANCH
         MVI   ACGPFLGS,ACGPUPDT   INDICATE DELETE ACCESS
CHKRA    EQU   *
         TM    OPTBYTE,OPTADD      IS ADD ACCESS TO BE VALIDATED
         BZ    CHKRCALL            NO, BRANCH
         MVI   ACGPFLGS,ACGPADD    INDICATE ADD ACCESS
CHKRCALL EQU   *
         LOAD  EPLOC=ACFGINT       * GET E.P. OF GRS RULE INTERPERTER
         LR    R15,R0              *
         LA    R1,ACFGINTP         POINT TO INTERPERTER PARMLIST
         BALR  R14,R15             CALL THE GRS RULE INTERPERTER
         SPACE 1
         CH    R15,H24             RULE RECORD IN IMPROPER FORMAT
         BE    CHKRULER            YES, ERROR
         CH    R15,H16             IS ACCESS ALLOWED TO USER
         BLR   LINKREG             YES, RETURN
         TM    LIDMFLG,LIDMNCNL    IS USER MARKED NO-CNCL
         BOR   LINKREG             YES, RETURN
         B     RET04               INDICATE NOT AUTHORIZED
CHKRULER EQU   *
         TM    OPTBYTE,OPTMSG      WRITE OUT ERROR MESSAGES
         BZ    RET08               NO, RETURN
         B     ACFERMSG            YES, WRITE THE ERROR MESSAGE
*
         TITLE 'IGC0024G - GENERALIZED RESOURCE VALIDATION CALL'
CHKAUTH  DS    0H
*                                  CODING REQUIRED TO MAKE A ACF2 GRS
*                                  VALIDATION CALL
*
         XC    ACGRSRC(ACGRSLEN),ACGRSRC CLEAR CONTROL BLOCK TO X'00'
         MVI   ACGFCN,X'04'        INDICATE RESOURCE CALL
         MVI   ACGSFCN,ACGSINP     INDICATE RESOURCE VALIDATION
         MVI   ACGFLGS2,ACGNCACH   INDICATE NO USER CACHE
         MVI   ACGRFLGS,X'00'      CLEAR RETURNED FLAGS FIELD
         LA    R0,ACUCB            * POINT TO ACUCB FOR CALL
         ST    R0,ACGUCB           *
         XC    MSGBUF,MSGBUF       CLEAR MESSAGE RETURN AREA
         LA    R0,MSGBUF           * POINT TO BUFFER FOR RETURNED
         ST    R0,ACGMSG           * MESSAGE
         MVC   ACGRTYPE,RESTYPE    SET THE GENERALIZED RESOURCE TYPE
         MVC   ACGRNAME,RESNAME    SET RESOURCE NAME
         MVC   ACGMODID,PGMNAME    SET PROGRAM NAME
CHKAR    EQU   *
         TM    OPTBYTE,OPTREAD     IS READ ACCESS TO BE VALIDATED
         BZ    CHKAD               NO, BRANCH
         MVI   ACGFLGS,ACGFARD     INDICATE READ ACCESS
CHKAD    EQU   *
         TM    OPTBYTE,OPTDEL      IS DELETE ACCESS TO BE VALIDATED
         BZ    CHKAU               NO, BRANCH
         MVI   ACGFLGS,ACGFADEL    INDICATE DELETE ACCESS
CHKAU    EQU   *
         TM    OPTBYTE,OPTUPDT     IS UPDATE ACCESS TO BE VALIDATED
         BZ    CHKAA               NO, BRANCH
         MVI   ACGFLGS,ACGFAUPT    INDICATE DELETE ACCESS
CHKAA    EQU   *
         TM    OPTBYTE,OPTADD      IS ADD ACCESS TO BE VALIDATED
         BZ    CHKACALL            NO, BRANCH
         MVI   ACGFLGS,ACGFAADD    INDICATE ADD ACCESS
CHKACALL EQU   *
         ACFSVC ACGRSRC,TYPE=A,NONE=CHKAERR,CVT=HAVE CHECK ACCESS AUTH
         CH    R15,H4              ERROR DURING PROCESSING
         BH    CHKAERR             YES, BRANCH
         CLI   ACGRFLGS,X'08'      CHECK RETURN FLAGS FIELD
         BE    RET04               ACCESS NOT ALLOWED IF RFLGS = 8
         BR    LINKREG             ACCESS ALLOWED IF RFLGS < 8
         SPACE 1
CHKAERR  EQU   *
         TM    OPTBYTE,OPTMSG      WRITE ACF ERROR MESSAGES
         BZ    RET08               NO, RETURN ERROR
         B     ACFERMSG            YES, WRITE THE ERROR MESSAGE
*
         TITLE 'IGC0024G - DATA AREAS AND DSECTS'
MVCRNAME MVC   RESNAME(0),1(R1)    MOVE VAR. FORMAT RESOURCE NAME
         SPACE 1
RULBUFL  DC    F'4096'             LENGTH OF RULE BUFFER
         SPACE 1
*                                  ACFGINT MUST BE ALIGNED ON FULLWORD
ACFGINT  DC    CL8'ACFGINT'        RESOURCE RULE INTERPERTER EP NAME
         SPACE 1
PGMNAME  DC    CL8'IGC0024G'       PROGRAM NAME LITERAL
ACF04005 DC    CL8'ACF04005'       NO RULE RECORD FOUND MESSAGE NUMBER
         SPACE 1
H24      DC    H'24'               HALFWORD 24
H16      DC    H'16'               HALFWORD 16
H4       DC    H'4'                HALFWORD 4
         SPACE 1
LOGGML   DC    AL2(LOGGMLL)        WA LEN IF VOILATION LOGGING
NLOGGML  DC    AL2(NLOGGMLL)       WA LEN IF NO VIOLATION LOGGING
         SPACE 1
         LTORG
         EJECT
WORKAREA DSECT                     PROGRAM WORKAREA DSECT
SAVEAREA DS    18F                 SAVE AREA FOR RULE INTERPERTER CALL
PARMPTR  DS    F                   PARMLIST ADDRESS SAVEAREA
TCBPTR   DS    F                   TCB CONTROL BLOCK ADDRESS
WAGML    DS    H                   GETMAINED LENGTH OF WORKAREA
RULDATE  DS    PL4                 RULE INTERPETER PARM - CURRENT DATE
SRCNAME  DS    CL8                 RULE INTERPETER PARM - SOURCE NAME
USERID   DS    CL8                 USERID TO BE VALIDATED
RESTYPE  DS    CL4                 GRS RESOURCE TYPE
RESNAME  DS    CL40                GRS RESOURCE NAME
SAVEOPTS DS    XL1                 JSCB OPTIONS BYTE SAVEAREA
OPTBYTE  DS    XL1                 OPTIONS BYTE
OPTVER   EQU   X'80'               VERIFY RULE RECORD EXISTS
OPTLOG   EQU   X'40'               LOG AUTHORIZATION VIOLATIONS
OPTMSG   EQU   X'20'               OUTPUT ACF ERROR MESSAGES
OPTADD   EQU   X'08'               VALIDATE ADD ACCESS TO RESOURCE
OPTDEL   EQU   X'04'               VALIDATE DELETE ACCESS TO RESOURCE
OPTUPDT  EQU   X'02'               VALIDATE UPDATE ACCESS TO RESOURCE
OPTREAD  EQU   X'01'               VALIDATE READ ACCESS TO RESOURCE
         SPACE 1
         DS    0H
MSGBUF   DS    XL128               ACF MESSAGE BUFFER AREA
         SPACE 1
ACUID    ACUID ,                   UID STRING
         SPACE 1
         LIDREC DSECT=NO           ACF LOGON ID RECORD
         SPACE 1
         ACUCB DSECT=NO            ACF LOGON ID RECORD
         SPACE 1
         ACVALD DSECT=NO           INFO CALL PARMLIST
         SPACE 1
         ACGRSRC DSECT=NO          GRS VALIDATION CALL PARMLIST
         SPACE 1
         DS    0D
LOGGMLL  EQU   *-WORKAREA          WA LENGTH IF OPTLOG SPECIFIED
         SPACE 1
         ACFGINTP DSECT=NO         GRS RULE INTERPERTER PARMLIST
         SPACE 1
RULWORKA DS    XL256               GRS RULE INTERPERTER WORKAREA
         SPACE 1
RULBUF   DS    XL4096              GRS RULE RECORD BUFFER AREA
         SPACE 1
         DS    0D
NLOGGMLL EQU   *-WORKAREA          WA LENGTH IF OPTLOG NOT SPECIFIED
         EJECT
         ACCVT ,                   ACF CVT DSECT
         SPACE 1
         ACFASVT ,                 ACF SVT DSECT
         SPACE 1
         IHAPSA ,                  PREFIXED STORAGE AREA DSECT
         SPACE 1
         IHAASCB ,                 ADDRESS SPACE CONTROL BLOCK DSECT
         SPACE 1
         IHALPDE ,                 LINK PACK DIRECTORY ENTRY DSECT
         SPACE 1
         IEESMCA ,                 SMF CONTROL BLOCKS DSECTS
         SPACE 1
         IEZJSCB ,                 JOB STEP CONTROL BLOCK
         SPACE 1
         CVT DSECT=YES,LIST=NO     COMMUNICATION VECTOR TABLE DSECT
         SPACE 1
         IKJTCB DSECT=YES,LIST=NO  TASK CONTROL BLOCK DSECT
         SPACE 3
         END
/*
//*
//LINKEDIT EXEC PGM=HEWL,
//             COND=(7,LT),
//             PARM='LIST,XREF,LET,RENT,REUS,REFR'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSLMOD  DD  DSN=SYS1.LPALIB,DISP=SHR
//SYSLIB   DD  DSN=SYS3.ACF2R41.ACFMOD,DISP=SHR
//SYSPUNCH DD  DSN=&&SYSPUNCH,DISP=(OLD,DELETE)
//SYSLIN   DD  *
 INCLUDE SYSPUNCH(IGC0024G)
 NAME    IGC0024G(R)
/*
//
