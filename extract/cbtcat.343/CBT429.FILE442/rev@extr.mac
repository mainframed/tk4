)Attr
   % type(text  ) intens(high) caps(off)
   ` type(text  ) intens(high) caps(off)              hilite(reverse)
   @ type(text)   intens(high) caps(off) color(yellow)
   ~ type(text)   intens(high) caps(off) color(turq)
   + type(text  ) intens(low )
   _ type(input ) intens(high) caps(off) just(left )
   › type(input ) intens(high) caps(on ) color(red  ) hilite(uscore)
   × type(input ) intens(low ) caps(on ) color(blue ) hilite(uscore)
   \ type(input ) intens(high) caps(on ) just(right)  hilite(uscore)
   õ type(input ) intens(high) caps(off) just(left )  hilite(uscore)
)Body  Expand(//) window(73,17)
`Revive!%: Bring Back to PDS Members : EXTRACT < &rvv > -/-/-
%Command ===>_zcmd                                                / / +
@ Type extraction dataset information.
+   Dataset name        :›rv1eds
+    Member name        :›rv1emn  +(If PDS required)
+    Volume serial      :›rv1evo+
+    Space units        :›z  +(CYL, TRK or BLK)
+    Primary quantity   :›z    +(1 - 4369 or 1 - 65535)
+    Secondary quantity :›z    +(0 - 4369 or 0 - 65535)
+    Directory blocks   :›z    +(0 - 4369)  <0 for non PDS file>
+    Record format      :×z  +(F, V, U, B, S...)
+    Record length      :×z    +(0 - 32760)
+    Block size         :×z    +(1 - 32760)
+
+  This member have &rv1erec records. I can make &rv1trkc blocks per
+   1 track of dataset, as if create new dataset same disk type.
+  Please input a more than &rv1cspt spaces at least.
)Init
  .zvars = '(rv1esp rv1esq1 rv1esq2 rv1espd rv1erf rv1erl rv1ebs)'
  vget (rv1erec rv1trkc rv1cspt) profile
)Proc
  ver(&rv1eds,nb,dsname)
  ver(&rv1evo,pict,cccccc)
  ver(&rv1esp,nb,list,TRK,CYL,BLK)
  if (&rv1esp = 'CYL')
    ver(&rv1esq1,nb,range,1,4369)
    ver(&rv1esq2,nb,range,0,4369)
  else
    ver(&rv1esq1,nb,range,1,65535)
    ver(&rv1esq2,nb,range,0,65535)
  ver(&rv1espd,nb,range,0,4369)
  if (&rv1espd ^= '0')
    ver(&rv1emn,nb,name)
)End
