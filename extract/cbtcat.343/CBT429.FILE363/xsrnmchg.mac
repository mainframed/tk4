         TITLE 'XSRNMCHG - ISPF/PDF data set name change exit'
***********************************************************************
*                                                                     *
* XSRNMCHG - ISPF/PDF data set name change exit                       *
*                                                                     *
***********************************************************************
*                                                                     *
* Reference: ISPF and ISPF/PDF Version 4 Release 2                    *
*            Planning and Customizing             -  SC34-4443-01     *
*            Page 201 - Data Set Name Change Exit                     *
*                                                                     *
***********************************************************************
*                                                                     *
* DESCRIPTION:  You can use the data set name change exit to change   *
* the name of the data set entered on the data entry panel.  This     *
* allows PDF to process using the new data set name without the       *
* variables originally entered on the panel being changed.  Anywhere  *
* the data set name is displayed, other than the data entry panel,    *
* can reflect either the original or the changed data set name.  The  *
* data entry fields will not reflect any changes made to the data set *
* name.  If the exit is not specified, all data set names are used    *
* exactly as they are entered.                                        *
*                                                                     *
* PDF calls this exit routine using the standard conventions.  The    *
* exit is invoked for every data set specified on a data entry panel  *
* or in a PDF service call at the point in the PDF processing flow    *
* when the data set name is built from its component parts.  This     *
* includes the library access services, EDIT and BROWSE services, and *
* the PDF product dialogs themselves.  The routine must be a program. *
* All ISPF, PDF and system services are available to it.              *
*                                                                     *
* If more than one ISPF library is specified on a data entry panel,   *
* the exit is invoked once for each library specified before each     *
* library is allocated.  The libraries are not concatenated until     *
* each library is processed by the exit and allocated.                *
*                                                                     *
* EXIT PARAMETERS:  PDF passes the data set name information as it    *
* was entered on the panel to the exit routine.  Register 1 points    *
* to the parameter list.                                              *
*                                                                     *
* PDF uses the following parameters to communicate with the data set  *
* name change exit:                                                   *
*                                                                     *
* PROJECT        CHAR(8)  Project name as it was entered on the panel *
*                                                                     *
* GROUP          CHAR(8)  Group name as it was entered on the panel   *
*                                                                     *
* TYPE           CHAR(8)  Type name as it was entered on the panel    *
*                                                                     *
* MEMBER         CHAR(8)  Member name as it was entered on the panel  *
*                                                                     *
* OTHER DATA SET CHAR(56) On input to the exit, the other data set    *
*                         name as entered on the panel.  On output    *
*                         from the exit, blank or the data set name   *
*                         to be used.  This may be used to replace an *
*                         ISPF library.                               *
*                                                                     *
* REASON         CHAR(8)  Reason the data set is being allocated      *
*                                                                     *
*                 RECOVERY The data set is the edit recovery data set.*
*                          The OTHER DATA SET field contains the      *
*                          fully qualified data set name.             *
*                                                                     *
*                 TEMP     The data set is a temporary PDF data set.  *
*                          This includes the following:               *
*                                                                     *
*                          * The data set name specified on the       *
*                            member list SAVE command                 *
*                                                                     *
*                          * The data set name specified on the       *
*                            data set list SAVE command               *
*                                                                     *
*                          * The data set name specified under LMF    *
*                            options 8.5.2.3 and 8.5.3.3 (review      *
*                            listings)                                *
*                                                                     *
*                          * The data set name specified for LMF      *
*                            options 8.1.3.2, 8.1.3.3 and 8.1.3.4     *
*                            (initialize, clear of verify member      *
*                            controls)                                *
*                                                                     *
*                          * The data set used during the outlist     *
*                            utility processing (PDF option 3.8, when *
*                            using program ISRUOLP instead of CLIST   *
*                            ISRUOL).                                 *
*                                                                     *
*                 blank                                               *
*                                                                     *
*                          * Any data set entered on a PDF data       *
*                            entry panel                              *
*                                                                     *
*                          * The LMF member activity log              *
*                                                                     *
*                          * The LMF Administrator activity log       *
*                                                                     *
*                          * Data sets specified on the LMINIT service*
*                                                                     *
*                          * Data sets specified on any service that  *
*                            does not need an LMINIT to have been     *
*                            previously performed.                    *
*                                                                     *
* Any of the parameters can be modified and are picked up by PDF      *
* with the exception of the REASON field, which is for the            *
* information of the exit only.  Both an ISPF library (a              *
* PROJECT/GROUP/TYPE combination) and an OTHER DATA SET can be        *
* present in the parameter list.  In this case, the OTHER DATA SET    *
* name supersedes the ISPF library name.  If an ISPF library          *
* combination is specified as input to the exit and the exit wishes   *
* to create a new name that does not fit the ISPF library naming      *
* convention, the ISPF library name can be replaced by the exit       *
* filling in the OTHER DATA SET field.                                *
*                                                                     *
* Once the data set name has been changed by the exit, PDF does its   *
* normal data set processing, such as appending the user's prefix if  *
* an OTHER DATA SET name without quotes is returned by the exit.  The *
* changed data set name values are not saved in any variable pool,    *
* but are saved internally by PDF.  The original input fields on the  *
* data entry panel are not changed, but any title line on a panel     *
* which contains a data set name can reflect either the original or   *
* the changed data set name.                                          *
*                                                                     *
*                                                                     *
* Usage Notes:                                                        *
*                                                                     *
* 1. Those data sets marked with a reason of TEMP can go through the  *
*    exit more than once.  The exit should not blindly add qualifiers *
*    to the TEMP data set names.                                      *
*                                                                     *
* 2. Any sequential data set that is used for output, such as being   *
*    edited, the target of a Move/Copy (option 3.3), the source of    *
*    an Edit MOVE command or the target of an Edit REPLACE command,   *
*    or being reallocated by Edit after a space ABEND (B37), is sent  *
*    through the exit twice.  In addition, if a member is being       *
*    browsed via the Library utility browse line command (browse      *
*    under option 3.1), the data set is sent through the exit twice.  *
*                                                                     *
* 3. Data sets that are allocated in a CLIST as well as a program or  *
*    that have their data set names built in a CLIST or skeleton      *
*    cannot be modified by the data set name exit unless the CLIST or *
*    skeleton has also been modified to change the data set name in   *
*    the same way that the exit does.  These data sets include the    *
*    following:                                                       *
*                                                                     *
*    * The list data set name produced by the language processors in  *
*      Foreground and Batch, and the term data sets in Batch.         *
*                                                                     *
*    * The input and output data sets for SUPERC.  The CLISTS to be   *
*      modified are ISRSFORG and ISRSSRCH.                            *
*                                                                     *
*    * The data set created by the Outlist utility (option 3.8) if    *
*      CLIST ISRUOL is used rather than program ISRUOLP.              *
*                                                                     *
* 4. If the data set is being allocated for recovery, the data set    *
*    name change exit should check the recovery table and generate a  *
*    unique data set name.                                            *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* NOTE:                                                               *
*                                                                     *
* Although this is still not clearly documented in the ISPF Planning  *
* and Customizing manual, the fact is that when this exit is invoked  *
* for the RECOVERY data set, the only field filled in is the          *
* OTHER DATA SET field, and the contents are the FULLY QUALIFIED      *
* backup data set name WITHOUT QUOTES.  There is no member name.      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* Corequisites:                                                       *
*                                                                     *
* (1) Modify the ISRCONFG module as follows:                          *
*                                                                     *
* NMCHGPGM DC  CL8'XSRNMCHG'    Program for data set name change exit *
*                                                                     *
***********************************************************************
*                                                                     *
* Draper usage of this exit:                                          *
*                                                                     *
* (1) To change the names of the edit recovery data sets when edit    *
*     recovery is invoked under a PIE session.  The PIE session       *
*     number is appended to the end of the data set name to make it   *
*     unique to that session.                                         *
*                                                                     *
*     Note that the modification of CLIST ISREDRTI, while formerly    *
*     both necessary and sufficient to implement this change, is      *
*     now neither.                                                    *
*                                                                     *
*     Example:                                                        *
*                                                                     *
*     If this is PIE session 2, and the name of the edit recovery     *
*     backup data set passed is ISR0001.BACKUP, this exit changes     *
*     the name to ISR0001.BACKUP2.                                    *
*                                                                     *
* 03/10/88 - We must check that the name we generate is not in use    *
*            by ISPF, which it sometimes is, particularly when a      *
*            SAVE is done in one edit and another edit is started up. *
*            To do this, we test via ENQ to see if the name is in use *
*            and increment the numeric part of the name until we get  *
*            a successful not-in-use backup data set name.            *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* As of now this exit does not require any additional storage,        *
* UNLESS it needs to do an ENQ because it changed the dsname.         *
* It needs no save area, as it does not do I/O or call subroutines.   *
*                                                                     *
***********************************************************************
         SPACE 1
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
XSRNMCHG CSECT
XSRNMCHG AMODE ANY
XSRNMCHG RMODE ANY
         SAVE  (14,12),,XSRNMCHG_&SYSDATE._&SYSTIME
         LR    R12,R15             Set up base register
         USING XSRNMCHG,R12        Address our code
         USING PARMS,R1            Address parameter list
         EJECT
         SPACE 1
***********************************************************************
*                                                                     *
* See if we want to handle this call.                                 *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R14,PREASON         Get address of REASON parameter
         CLC   0(8,R14),=CL8'RECOVERY' If reason is RECOVERY
         BE    DORECOV                 then process this request.
         B     RETURN              Otherwise return doing nothing.
         SPACE 1
DORECOV  DS    0H                  REASON = RECOVERY
         SPACE 1
***********************************************************************
*                                                                     *
* Determine if PIE is active.  If it isn't, then do nothing.          *
*                                                                     *
* See PIE macro "#SCVTUTL" for similar code.                          *
*                                                                     *
* This code was written by scanning the PIE control blocks in virtual *
* storage, and also by taking a sneak peek at PIECHECK.               *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R2,X'21C'           Get TCB address from PSA
         USING TCB,R2
         L     R2,TCBJSTCB         Get address of job step TCB
         ICM   R2,15,TCBOTC        Get job step TCB's mother task TCB
         BZ    RETURN              If none, PIE not active, just return
         ICM   R2,15,TCBUSER       Else PIE's TCB, so get user field
         BZ    RETURN              If none, PIE not active, just return
         DROP  R2
         CLC   =C'SCVT',0(R2)      Check eyecatcher:  PIE SCVT?
         BNE   RETURN              If not, PIE not active, just return
         ICM   R2,15,8(R2)         Else PIE's SCVT, so get addr of STCB
         BZ    RETURN              If none, PIE not active, just return
         CLC   =C'STCB',0(R2)      Check eyecatcher:  PIE STCB?
         BNE   RETURN              If not, PIE not active, just return
         CLI   X'84'(R2),C'1'      If this is PIE session 1
         BE    RETURN              then primary session, just return
         XR    R3,R3               Else clear insert register
         IC    R3,X'84'(,R2)       Load PIE session ID
         SPACE 1
***********************************************************************
*                                                                     *
* Now that we've determined that we are in a non-primary PIE session, *
* we must modify the EDIT recovery data set name.  Scan backwards     *
* from the end of the "OTHER DATA SET" field for the last nonblank.   *
* Provided the name does not already end in the PIE session character *
* we append it to the name.                                           *
*                                                                     *
***********************************************************************
         SPACE 1
         L     R4,POTHERDS         Get address of other data set name
         CLI   0(R4),C' '          If the name is blank
         BE    ERROR1              then error
         CLI   0(R4),C''''         If the name begins with a quote
         BE    ERROR4              then something is not as expected.
         CLI   55(R4),C' '         If all 56 characters are used
         BNE   ERROR2              then error
         LA    R5,54(,R4)          Else point to last possible nonblank
NAMELOOP DS    0H
         CLI   0(R5),C' '          Loop until nonblank found
         BNE   FOUNDNB
         BCT   R5,NAMELOOP
*
* The above loop assumes that (1) the OTHER DATA SET NAME field is
* never blank, and (2) R5, being an address, will never go to zero.
* Seems reasonable, no?
*
FOUNDNB  DS    0H                  Found nonblank; R5 points to it
*
* If there is a member name, we can't deal with it.  There shouldn't.
*
         CLI   0(R5),C')'          If a member name was specified
         BE    ERROR3              then something is terribly wrong.
*
* We can stick the character on.
*
         CLM   R3,B'0001',0(R5)    If the character is there already
         BE    RETURN              then do nothing
         SPACE 1
         STC   R3,1(,R5)           Else stick it on the end
*
* Before returning, we must make sure that the name we have just
* generated is not in use.  If it is in use, we must modify it.
*
         LA    R0,QDL              Get length of area needed
         GETMAIN R,LV=(0)          Get storage for ENQ parameter list
         LR    R6,R1               Save address of storage
         USING QD,R6
         MVC   ENQ(ENQL),$ENQ      Build ENQ parameter list
         MVC   ENQRNDSN(44),0(R4)  Move data set name to ENQRNAME
         MVC   ENQRNMEM(8),=CL8' ' Clear member name portion
*
* Scan backwards to locate the numeric portion of the data set name.
*
         LA    R1,1(,R5)           Get length of data to scan
         SR    R1,R4                and bump down by 4 because the
         SH    R1,=H'4'              period must follow 4 characters
         LA    R7,ENQRNDSN-1+4(R1) Point to last char in ENQ DSN
NUMELOOP DS    0H
         CLI   0(R7),C'.'          Loop until period found
         BE    FOUND#
         BCTR  R7,0
         BCT   R1,NUMELOOP         Continue until data set name is
         B     ERROR5               exhausted, at which point error
FOUND#   DS    0H                  R7 -> the period
         LR    R8,R7               Look for ---nnnn.
         SH    R8,=H'4'            Point to character 4 bytes before
         TRT   0(4,R8),NUMTBL      Verify all numerics
         BNZ   ERROR5
*
* Now R8 -> numeric part of dsn.  Prepare for ENQ!
*
TRYENQ   DS    0H                  See if dataset is in use
         ENQ   (ENQQNAME,ENQRNDSN,E,52,SYSTEMS),RET=TEST,MF=(E,ENQ)
         LTR   R15,R15             If resource is available
         BZ    AVAIL               then everything is OK.
*
* The name must be changed.  Do this by incrementing the numeric part
* of the name and trying again.
*
         PACK  DOUBLE(8),0(4,R8)   Convert to packed decimal
         AP    DOUBLE(8),=P'1'     Increment
         UNPK  0(4,R8),DOUBLE(8)   Put back into ENQ dsn
         OI    3(R8),X'F0'         Fix up zone
         B     TRYENQ              See if name is available
         SPACE 1
AVAIL    DS    0H                  This name is available
         SPACE 1
         MVC   0(44,R4),ENQRNDSN   Move back the name
         LA    R0,QDL              Get length of GETMAINed area
         LR    R1,R6               Get address of GETMAINed area
         FREEMAIN R,LV=(0),A=(1)
******** B     RETURN              and return.
*
* Also assume that the final qualifier is less than 8 characters.
* It should always be BACKUP or BACKUPI.  If not, ISPF will get some
* kind of dynamic allocation error, so you'll find out about your
* mistake one way or the other.
*
         EJECT
RETURN   DS    0H                  Return to ISPF
         SPACE 1
         LM    R14,R12,12(R13)     Reload registers
         XR    R15,R15             Set return code to zero
         BR    R14                 Return
         EJECT
ERROR1   DS    0H                  "This shouldn't happen!!!"
         SPACE 1
         WTO   'XSRNMCHG: OTHER DATA SET field blank for RECOVERY DS.',X
               ROUTCDE=11          Write to programmer
         B     ABEND
ERROR2   DS    0H                  "This shouldn't happen!!!"
         SPACE 1
         WTO   'XSRNMCHG: RECOVERY data set name too long to modify.', X
               ROUTCDE=11          Write to programmer
         B     ABEND
ERROR3   DS    0H                  "This shouldn't happen!!!"
         SPACE 1
         WTO   'XSRNMCHG: RECOVERY data set name has a member specifiedX
               .',ROUTCDE=11       Write to programmer
         B     ABEND
ERROR4   DS    0H                  "This shouldn't happen!!!"
         SPACE 1
         WTO   'XSRNMCHG: RECOVERY data set name is enclosed in single X
               quotes.',ROUTCDE=11 Write to programmer
         B     ABEND
ERROR5   DS    0H                  "This shouldn't happen!!!"
         SPACE 1
         WTO   'XSRNMCHG: RECOVERY data set name has no numeric infix pX
               ortion.',ROUTCDE=11 Write to programmer
         B     ABEND
ABEND    DS    0H
         LR    R1,R4
         LA    R0,44
         TPUT  (1),(0),R           Display the data set name
         ABEND 1234,DUMP
         EJECT
         SPACE 1
$ENQ     ENQ   (*-*,*-*,E,*-*,SYSTEMS),RET=TEST,MF=L
ENQL     EQU   *-$ENQ              Length of ENQ parameter list
         SPACE 1
ENQQNAME DC    CL8'SPFEDIT '       Qname for ENQ
         SPACE 1
NUMTBL   DC    256X'FF'            Table to validate numerics
         ORG   NUMTBL+X'F0'
         DC    10X'00'
         ORG   ,
         SPACE 1
         LTORG
         SPACE 1
         DROP  R12
         EJECT
QD       DSECT ,                   Area used to do ENQ
         SPACE 1
DOUBLE   DS    D
ENQ      ENQ   (*-*,*-*,E,*-*,SYSTEMS),RET=TEST,MF=L
ENQRNDSN DS    CL44
ENQRNMEM DS    CL8
         SPACE 1
QDL      EQU   *-QD
         EJECT
PARMS    DSECT ,                   Parameters passed via register 1
         SPACE 1
PPROJECT DS    A                   Address of PROJECT
PGROUP   DS    A                   Address of GROUP
PTYPE    DS    A                   Address of TYPE
PMEMBER  DS    A                   Address of MEMBER
POTHERDS DS    A                   Address of OTHER DATA SET
PREASON  DS    A                   Address of REASON
         SPACE 1
         IKJTCB ,                  Map the TCB
         SPACE 1
         END
