ENQM     TITLE 'STARTED TASK ENQ CONTENTION MONITOR'
*---------------------------------------------------------------------*
*---     NAME: ENQMON                                              ---*
*---                                                               ---*
*---     PURPOSE: DISPLAY AND LOG DATASET CONTENTION PROBLEMS.     ---*
*---                                                               ---*
*---     METHOD: EACH MINUTE, USE GQSCAN TO LOCATE ANY DATASET     ---*
*---           CONTENTION SITUATIONS.  USE THE INFORMATION RETURNED---*
*---           BY GRS TO DISPLAY, ON CONSOLES AND SYSLOG, THE      ---*
*---           DSNAME INVOLVED, THE HOLDERS, AND REQUESTORS.       ---*
*---                                                               ---*
*---     PARAMETERS: NONE                                          ---*
*---                                                               ---*
*---     DD STATEMENTS REQUIRED: NONE                              ---*
*---                                                               ---*
*---     TERMINATION: THIS PROGRAM WILL ACCEPT A MVS STOP COMMAND  ---*
*---           AS A SIGNAL TO SHUTDOWN.  ACTUAL SHUTDOWN MAY TAKE  ---*
*---           UP TO ONE MINUTE.                                   ---*
*---                                                               ---*
*---     PROGRAM ATTRIBUTES: AMODE-31, RMODE-ANY, NOT-REENTRANT    ---*
*---                                                               ---*
*---     RICK FOCHTMAN, SR. SYSTEMS PROGRAMMING SPECIALIST         ---*
*---     BOARD OF TRADE CLEARING CORP.                             ---*
*---     141 W. JACKSON BLVD, SUITE 1460                           ---*
*---     CHICAGO, IL  60604                                        ---*
*---     (312) 786-5772                                            ---*
*---                                                               ---*
*---     SEPTEMBER, 1998                                           ---*
*---------------------------------------------------------------------*
         SPACE 3
ENQMON   CSECT
ENQMON   AMODE 31
ENQMON   RMODE ANY
R0       EQU   0                   R
R1       EQU   1                    E
R2       EQU   2                     G
R3       EQU   3                      I
R4       EQU   4                       S
R5       EQU   5                        T
R6       EQU   6                         E
R7       EQU   7                          R
R8       EQU   8
R9       EQU   9                   E
R10      EQU   10                   Q
R11      EQU   11                    U
R12      EQU   12                     A
R13      EQU   13                      T
R14      EQU   14                       E
R15      EQU   15                        S
         B     12(,R15)            BRANCH AROUND
         DC    AL1(7),CL7'ENQMON'  CSECT IDENTIFIER
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS
         LR    R12,R15             COPY ENTRY ADDRESS
         USING ENQMON,R12          AND DECLARE THE BASE REGISTER
         L     R3,WALEN            LOAD WORK AREA LENGTH
         GETMAIN RC,LV=(3)         GRAB W.A. STORAGE
         LR    R2,R1               COPY STORAGE ADDRESS
         LA    R4,0                CLEAR SOURCE ADDRESS
         LA    R5,0                  AND LENGTH
         MVCL  R2,R4               CLEAR THE WORKING STORAGE
         ST    R13,4(,R1)          SAVE BACK S.A. POINTER
         ST    R1,8(,R13)          AND FORWARD POINTER
         LR    R13,R1              AND BUMP DOWN THE CHAIN
         USING WORK,R13            AND BASE ITS DSECT
*---------------------------------------------------------------------*
*---     1. SET UP CIB INTERFACE FOR STOP COMMAND.                 ---*
*---------------------------------------------------------------------*
         LA    R2,COMMPTR          POINT TO RETURN AREA
         EXTRACT (2),FIELDS=COMM
         L     R2,COMMPTR          LOAD THE COMMAREA POINTER
         USING COM,R2              AND BASE THE DSECT
         ICM   R3,15,COMCIBPT      LOAD CIB POINTER
         BZ    NOCIB               NONE TO FREE ---
         LA    R4,COMCIBPT         POINT TO CIB START ADDRESS
         QEDIT ORIGIN=(4),BLOCK=(3)    RELEASE 'START' CIB
NOCIB    DS    0H
         QEDIT ORIGIN=(4),CIBCTR=1
         DROP  R2
*---------------------------------------------------------------------*
*---     2. GRAB STORAGE FOR GQSCAN RETURN AREA AND BASE ITS       ---*
*---        DSECT(S)                                               ---*
*---------------------------------------------------------------------*
         L     R2,GQSCSIZE         LOAD SIZE
         GETMAIN RC,LV=(2),SP=POOL1,BNDRY=PAGE
         LR    R4,R1               COPY STORAGE ADDRESS
         ST    R1,GQAREA           AND SAVE FOR LATER
         LR    R5,R2               COPY AREA SIZE
         LA    R6,0                SOURCE ADDRESS OF ZERO
         LA    R7,0                AND LENGTH OF ZERO
         MVCL  R4,R6               CLEAR IT OUT...
         LR    R11,R1              COPY AREA POINTER FOR LATER
*---------------------------------------------------------------------*
*---     5. ISSUE GQSCAN FOR SYSDSN CONTENTION                     ---*
*---------------------------------------------------------------------*
RESCAN   DS    0H
         L     R3,GQSCSIZE         LOAD AREA SIZE
         GQSCAN AREA=((R11),(R3)),SCOPE=ALL,REQLIM=MAX,                X
               WAITCNT=1,XSYS=NO,RESNAME=QNAME
         ST    R1,RIBSLEFT         SAVE RIB COUNT
         CH    R15,=H'4'           ANY CONTENTION ??
         BE    NOWAIT              NOPE; RELEASE CHAINS
         BL    PARSEIT             SOMEONE IS WAITING; CHECK IT OUT
*        WTO   'ENQMON: GQSCAN SEVERE ERROR HAS OCCURED.'
         ABEND 1000,DUMP
*---------------------------------------------------------------------*
*---     NOBODY WAITING FOR DATASETS. RELEASE ANY CHAINS WE HAVE   ---*
*---           AND GO WAIT FOR ANOTHER MINUTE.                     ---*
*---------------------------------------------------------------------*
NOWAIT   DS    0H
         L     R2,COMMPTR          LOAD COMM AREA POINTER
         USING COM,R2
         ICM   R3,15,COMCIBPT      IS THERE A CIB ??
         BZ    WAITER              NOPE ---
         USING CIB,R3              YES; MAP IT
         CLI   CIBVERB,CIBSTOP     STOP COMMAND ??
         BE    ENDITALL
         LA    R4,COMCIBPT         POINT TO ORIGIN
         QEDIT ORIGIN=(R4),BLOCK=(R3)
         DROP  R2,R3               DISCARD MAPS
WAITER   DS    0H
         STIMER WAIT,BINTVL=MINUTE
         B     RESCAN              AND SCAN AGAIN ---
MINUTE   DC    A(60*100)           ONE MINUTE WAIT INTERVAL
         SPACE 3
ENDITALL DS    0H
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         LA    R15,0
         BR    R14
*---------------------------------------------------------------------*
*---     PARSE THE RIB RETURNED BY GQSCAN                          ---*
*---------------------------------------------------------------------*
PARSEIT  DS    0H
         LR    R10,R11             COPY AREA POINTER FOR LATER
         USING RIB,R10             AND BASE ITS DSECT
NEWRIB   DS    0H
         ST    R1,RIBSLEFT         SAVE UPDATED RIB COUNT
         LA    R3,RIBEND           POINT TO START OF RIBVAR
         AH    R3,RIBVLEN          ADD VARIABLE AREA LENGTH
         USING RIBE,R3             AND BASE ANOTHER DSECT
         L     R4,RIBTRIBE         LOAD RIBE COUNT
         LA    R5,OWNERS           POINT TO OWNERS' LIST
         LA    R6,WAITERS          POINT TO WAITERS' LIST
         LA    R7,0                NO OWNERS YET
         LA    R8,0                NO WAITERS YET
FRSTLOOP DS    0H
*---
*---     FIND THE OWNERS AND WAITERS FIRST
*---
         TM    RIBESFLG,RIBESTAT   WAITING FOR RESOURCE ??
         BZ    WAIT1               YES ---
         MVC   0(16,R5),RIBEJBNM   COPY JOB/SYSTEM NAMES
         MVC   16(1,R5),RIBERFLG   COPY REQUEST FLAGS
         LA    R5,17(,R5)          POINT TO NEXT SLOT
         LA    R7,1(,R7)           INCREMENT COUNTER BY ONE
         B     LOOP1               AND CONTINUE
WAIT1    DS    0H
         MVC   0(16,R6),RIBEJBNM   COPY JOB/SYSTEM NAMES
         MVC   16(1,R6),RIBERFLG   COPY REQUEST FLAGS
         LA    R6,17(,R6)          POINT TO NEXT SLOT
         LA    R8,1(,R8)           INCREMENT COUNTER BY ONE
LOOP1    DS    0H
         LA    R3,RIBEEND          POINT TO NEXT RIBE
         BCT   R4,FRSTLOOP         AND CONTINUE ---
*---
*--- START BUILDING/SPITING MESSAGES
*---
*--- USE PRINTED MESSAGES FOR DEBUGGING
*---
         LA    R15,RIBEND          POINT TO RIB VARIABLE AREA
         USING RIBVAR,R15
         LH    R1,RIBVLEN          LOAD VARIABLE AREA LENGTH
         BCTR  R1,R0
         MVC   DSNAME,BLANKS
         EX    R1,RIBM             MOVE DSNAME TO MESSAGE
         B     RIBM+6
RIBM     MVC   DSNAME(1),RIBRNAME COPY THE DSNAME
         DROP  R15
         LA    R0,0                CLEAR MCS CONSOLE ID
         WTO   TEXT=LINE1
         WTO   TEXT=LINE2
         LA    R5,OWNERS           POINT TO LIST OF OWNERS
MSG1     DS    0H
         MVC   JOBNAME1,0(R5)      COPY THE JOB NAME
         MVC   SYSTEM1,8(R5)       AND SYSTEM ID
         MVC   USE1,=CL3'EXC'      ASSUME SHARED FOR NOW
         TM    16(R5),X'80'        EXCLUSIVE USE ??
         BNO   MSG2                NOPE ---
         MVC   USE1,=CL3'SHR'      YES, MARK IT
MSG2     DS    0H
         LA    R0,0                CLEAR MCS CONSOLE ID
         WTO   TEXT=LINE3
         LA    R5,17(,R5)          POINT TO NEXT ENTRY
         BCT   R7,MSG1             AND CONTINUE ---
         LA    R5,WAITERS          POINT TO LIST OF OWNERS
MSG3     DS    0H
         MVC   JOBNAME2,0(R5)      COPY THE JOB NAME
         MVC   SYSTEM2,8(R5)       AND SYSTEM ID
         MVC   USE2,=CL3'EXC'      ASSUME SHARED FOR NOW
         TM    16(R5),X'80'        EXCLUSIVE USE ??
         BNO   MSG4                NOPE ---
         MVC   USE2,=CL3'SHR'      YES, MARK IT
MSG4     DS    0H
         LA    R0,0                CLEAR MCS CONSOLE ID
         WTO   TEXT=LINE4
         LA    R5,17(,R5)          POINT TO NEXT ENTRY
         BCT   R8,MSG3             AND CONTINUE ---
         LA    R0,0                CLEAR MCS CONSOLE ID
         LR    R10,R3              START A NEW RIBE
         L     R1,RIBSLEFT         GET NUMBER OF RIBS LEFT
         BCT   R1,NEWRIB           PROCESS NEXT RIB, IF ANY
         B     NOWAIT              AND LOOP ---
         DROP  R10
         SPACE 3
*
QNAME    DC    CL8'SYSDSN'
BLANKS   DC    CL44' '
*
LINE1    DC    AL2(LINE2-TXT1)
TXT1     DC    C' ENQMON01 : DATASET CONTENTION EXISTS!'
*
LINE2    DC    AL2(LINE3-TXT2)
TXT2     DC    C' ENQMON02 : DSNAME='
DSNAME   DC    CL44' '
*
LINE3    DC    AL2(LINE4-TXT3)
TXT3     DC    C' ENQMON03: JOB '
JOBNAME1 DC    CL08' '
         DC    C' ON SYSTEM '
SYSTEM1  DC    CL08' '
         DC    C' HAS IT '
USE1     DC    CL03' '
*
LINE4    DC    AL2(ENDTXT-TXT4)
TXT4     DC    C' ENQMON04: JOB '
JOBNAME2 DC    CL08' '
         DC    C' ON SYSTEM '
SYSTEM2  DC    CL08' '
         DC    C' WANTS IT '
USE2     DC    CL03' '
ENDTXT   EQU   *
GQSCSIZE DC    F'1048576'          ONE MEGABYTE
POOL1    EQU   6                   SUBPOOL FOR GQSCAN RETURN AREA
         LTORG
WALEN    DC    A(ENDWORK-WORK)
WORK     DSECT
SA       DS    18F
GQAREA   DS    A
RIBSLEFT DS    F
COMMPTR  DS    F
WAITERS  DS    100CL17
OWNERS   DS    100CL17
ENDWORK  DS    0D
         ISGRIB
COM      DSECT
         IEZCOM
CIB      DSECT
         IEZCIB
         END
