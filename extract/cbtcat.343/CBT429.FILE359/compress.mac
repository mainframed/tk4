CMPR     TITLE 'GSFTSOCM -- COMPRESS'
***********************************************************************
** GSFTSOCM, VERSION 1.0   J. SCHINDLER  DEC. 1974
** GSFTSOCM, VERSION 2.0   H. DEAN       JUL. 1977
** GSFTSOCM, VERSION 3.0   H. DEAN       AUG. 1977
** GSFTSOCM, VERSION 4.0   S. HAGGERTY   MAY  1978
** GSFTSOCM, VERSION 5.0   S. HAGGERTY   DEC  1978
** GSFTSOCM, VERSION 5.1   H. DEAN       APR  1979
** GSFTSOCM, VERSION 5.2   H. DEAN       JUL  1979
** GSFTSOCM, VERSION 5.3   H. DEAN       OCT  1979
** GSFTSOCM, VERSION 6.0   H. DEAN       FEB  1982          *HMD 02/82*
** GSFTSOCM, VERSION 6.1   H. DEAN       MAY  1982          *HMD 02/82*
**
**   CHANGED 3/18/75 BY J. SCHINDLER TO ATTACH IEBCOPY INSTEAD OF
**   VSCOPY BECAUSE OF ERRORS FOUND IN THE CURRENT VERSION OF VSCOPY.
**
**   CHANGED 07/30/77 BY H. DEAN. MODULE MADE REENTERABLE
**   AND REUSABLE FOR STORAGE IN SVS LINK PACK AREA
**
**   CHANGED 07/31/77 BY H. DEAN TO ELIMINATE THE
**   SYSOUT PARAMTER (NOT SUPPORTED AT L.A.C.C.D)
**
**   CHANGED 08/15/77 BY H. DEAN TO ALLOCATE A "SAFETY"
**   DATASET. UNLESS "NOSAFETY" IS SPECIFIED, THE
**   DATASET TO BE COMPRESSED WILL BE COPIED TO A DYNAMICALLY
**   ALLOCATED "SAFETY" DATASET BEFORE THE COMPRESS.
**   IF THE COMPRESS RETURN CODE IS NOT ZERO,
**   THE "SAFETY" DATASET WILL BE KEPT.
**
**   CHANGED 05/31/78 BY STEVE HAGGERTY TO USE "IBMCOPY"
**   WHICH IS THE ORIGINAL, ACCEPT NO SUBSTUTES, VERSION OF
**   IEBCOPY HERE AT GTEDS.
**
**   CHANGED 12/29/78 BY STEVE HAGGERTY TO OPTIONALLY ALLOW
**   THE USE OF "DISP=OLD" ALLOCATION OF THE PDS TO BE
**   COMPRESSED TO INSURE DATA SET INTEGRITY.
**
**   CHANGED 12/29/78 BY STEVE HAGGERTY TO OPTIONALLY ALLOW
**   A HARDWARE RESERVE TO BE ISSUED AGAINST THE PACK ON WHICH
**   THE PDS TO BE COMPRESSED RESIDES.
**   NOTE: QNAME = VOL. ID. , RNAME = DSN
**
**   CHANGED 04/30/79 BY HOWARD DEAN TO IMPLIMENT THE ABOVE
**   CHANGES ATTEMPTED BY STEVE HAGGERTY. FLAT-RATE UNINCORPORATED
**   IS NOW THE LEGAL OWNER OF THIS PROGRAM.
**
**   CHANGED 04/30/79 BY HOWARD DEAN TO MAKE &COPY A SYMBOLIC
**   PARAMETER. CHANGE TO INDICATE THE NAME OF THE IEBCOPY PROGRAM
**   USED BY YOUR INSTALLATION. LIMIT AUTHORIZATION (NEEDED FOR MVS)
**   TO JUST BEFORE ATTACH AND REMOVE AFTER DETACH OF COPY PROGRAM.
**   PROVIDE A ROUTINE FOR DSN NOT AVAILABLE (OLD OR SHR ALLOCATION).
**
**   CHANGED 04/30/79 BY HOWARD DEAN TO USE THE PREFIX RATHER
**   THAN THE USERID IN BUILDING THE RESERVE RNAME.
**
**   CHANGED 05/05/79 BY HOWARD DEAN TO:
**
**     1. RE-ARRANGE CODE FOR EASIER MAINTAINABILITY.
**     2. FORCE NOPRINT IF RESERVE ISSUED.
**     3. ADD ESTAE ROUTINE TO RELEASE DEVICE IF ABEND.
**
**   CHANGED 07/25/79 BY HOWARD DEAN TO:
**
**     1. USE "PUTLINE" SERVICE ROUTINE SO COMPRESS CAN BE RUN
**        IN BATCH MODE. (NOTE HMD'S SPELLING IN NEXT LINE. HA HA)
**     2. CORRECT ADDRESSIBILTIY ERROR IN ESTAE ROUTINE
**     3. REMOVE  AUTOMATIC AUTHORIZATION FROM COMPRESS.
**        MUST NOW BE AUTHORIZED THROUGH A TABLE IN THE
**        TSO TMP (MODULE IKJEFT01 - CSECT IKJEFTE2). SEE
**        THE TSO SYSTEM PROGRAMMING MANUAL FOR FURTHER
**        INFO. LINKEDIT WITH AC(1).
**     4. IF RUNNING TMP IN BATCH MODE, IEBCOPY TERMINAL OUTPUT IS
**        DIRECTED TO MESSAGE CLASS INSTEAD OF TERMINAL.
**
**   NOTE THAT SAFETY DATASET IN BATCH MODE WILL BE CATALOGED
**   UNDER THE PREFIX DEFINED IN THE &PREFIX SYMBOLIC PARM. THIS
**   PREFIX IS MOVED INTO THE UPT SET UP BY THE BATCH TMP, SO ANY
**   NON-QUOTED DSNAMES WILL BE CATALOGED UNDER THIS PREFIX. 'TEMP'
**   IS USED AT GTEDS. YOUR INSTALLATION WILL HAVE TO DEFINE A
**   PREFIX TO USE FOR DSNAMES.
**
**   CHANGED 10/16/79 BY HOWARD DEAN TO:
**
**     1. PROVIDE A 'UNIT' AND 'VOLUME' KEYWORD TO COMPRESS
**        DATASETS ON VOLUMES OTHER THAN THOSE IN THE CATALOG.
**
**     2. DEFAULT UNIT TYPE IS 'DISK'. IF THIS GROUP NAME IS NOT
**        ALL-INCLUSIVE AT YOUR INSTALLATION CHANGE THE SETC SYMBOL
**        BELOW TO THE CORRECT UNIT NAME.
**
**  COMMAND NAME ---  COMPRESS (COMPRESS A PDS)
**  ATTR - REENTERABLE, REUSEABLE, REFRESHABLE
**
**  THIS COMMAND PROCESSOR WILL ATTACH IEBCOPY TO COMPRESS A DATA SET
**  WHOSE NAME IS SUPPLIED. THE OPTIONS ARE AS FOLLOWS:
**           SAFETY - BEFORE COMPRESSING THE PDS, CREATE A "SAFETY"
**                    COPY.  (SAFETY IS DEFAULT)
**         NOSAFETY - DO NOT CREATE A SAFETY COPY
**
**   PRINT('DSN'/*) - PUT THE SYSPRINT DATA SET TO 'DSN' OR TERMINAL
**          NOPRINT - "DUMMY" OUT THE SYSPRINT FILE
**                           (PRINT(*) IS DEFAULT)
**
**       NORESERVE  - DO NOT ISSUE A HARDWARE RESERVE (DEFAULT)
**         RESERVE  - ISSUE A HARDWARE RESERVE TO PREVENT ACCESS
**                    FROM OTHER CPUS.
**
**             SHR  - ALLOCATE THE PDS AS "SHR". (DEFAULT)
**             OLD  - ALLOCATE THE PDS AS 'DISP=OLD'.
**
**
**            UNIT  - GENERIC NAME OF INPUT PDS DEVICE.
**
**          VOLUME  - VOLSER OF DASD DEVICE ON WHICH PDS RESIDES.
**
**
**  EXAMPLE OF COMMAND:
**    COMPRESS 'DATA SET NAME' PRINT('DSN'/*) S/NOS SHR/OLD NOR/RES
**    COMPRESS 'DATA SET NAME'
**    COMPRESS 'DATA SET NAME' NOPRINT
**    COMPRESS 'DATA SET NAME' NOSAFETY
**    COMPRESS 'DATA SET NAME' RESERVE
**    COMPRESS 'DATA SET NAME' OLD
**    COMPRESS 'DATA SET NAME' OLD UNIT(3350) VOL(SYSLIB)
**    COMPRESS 'DATA SET NAME' VOL(PACK07)
**
**
**
**  RE-WRITTEN ON AUG 15, 1977 BY:
**
**     HOWARD M. DEAN
**     LOS ANGELES COMMUNITY COLLEGE DISTRICT
**     SYSTEMS SOFTWARE GROUP
**     2140 W. OLYMPIC BLVD.  L.A. 90006 (213)-380-6000 EXT. 225
**
** MODIFIED FOR USE UNDER MVS - MAY 1978
**
**     STEVE HAGGERTY
**     GTE DATA SERVICES
**     SYSTEM SUPPORT UNIT
**     4750 LINCOLN BLVD
**     MARINA DEL REY, CA 90291
**     (213) 821-0511
** MODIFIED FOR USE UNDER MVS - APR 1979
**
**     HOWARD M. DEAN
**     GTE DATA SERVICES (MEMBER OF THE DEAN AND HAGGERTY TEAM)
**     SYSTEMS SUPPORT UNIT
**     4750 LINCOLN BLVD.
**     MARINA DEL REY, CA 90291
**     (213) 821-0511
**                                                          *HMD 02/82*
** CHANGED 02/13/82 BY HOWARD M. DEAN TO:                   *HMD 02/82*
**                                                          *HMD 02/82*
**  1. ATTACH 'SPFCOPY' INSTEAD OF IEBCOPY SO THAT          *HMD 02/82*
**     CODE TO DYNAMICALLY AUTHORIZE CAN BE REMOVED.        *HMD 02/82*
**                                                          *HMD 02/82*
**  2. DYNAMIC AUTHORIZATION CODE IS IN SPFCOPY AND         *HMD 02/82*
**     FOR SECURITY REASONS IT WILL REMAIN IN ONLY          *HMD 02/82*
**     THAT MODULE. SEE MEMBER 'SPFCOPY' OF SSU.ASM         *HMD 02/82*
**     FOR FURTHER DETAILS.                                 *HMD 02/82*
**                                                          *HMD 02/82*
**  3. REMOVE SYMBOLIC VARIABLE '&PREFLEN'. LENGTH          *HMD 02/82*
**     OF &PREFIX IS NOW DETERMINED BY THE 'K' ATTRIBUTE    *HMD 02/82*
**     (CHARACTER COUNT).                                   *HMD 02/82*
**                                                          *HMD 02/82*
**  CHANGED ON 05/11/82 - HOWARD M. DEAN                    *HMD 05/82*
**                                                          *HMD 05/82*
**  1. ADD APPROPRIATE MESSAGE FOR ABEND(S) IN SAFETY       *HMD 05/82*
**     OR COMPRESS STEP.                                    *HMD 05/82*
**                                                          *HMD 05/82*
**  2. INCREASE RETURN CODE FIELD TO 4 BYTES AND            *HMD 05/82*
**     PRINT RETURN CODE AT END OF PROGRAM. RETURN          *HMD 05/82*
**     CODE OF 20 MEANS THAT EITHER PARSE OR DAIR           *HMD 05/82*
**     DID NOT WORK CORRECTLY.                              *HMD 05/82*
**                                                          *HMD 05/82*
**  3. PRINT SAFETY DATA SET NAME AFTER ALLOCATION          *HMD 05/82*
**     FOR FUTURE REFERENCE.                                *HMD 05/82*
**                                                          *HMD 05/82*
**----------------------------------------------------------*HMD 01/85*
**  CHANGED ON 01/16/85 - HOWARD M. DEAN                    *HMD 01/85*
**                                                          *HMD 01/85*
**  1. CHANGE DEFAULT UNIT AND DEFAULT PREFIX               *HMD 01/85*
**                                                          *HMD 01/85*
**  2. CHANGE HEADER TO REFLECT NEW COMPANY - SYNTEX        *HMD 01/85*
**                                                          *HMD 01/85*
**  3. ADD SET SYMBOL TO INSERT CURRENT DATE AT EVERY       *HMD 01/85*
**     ASSEMBLY.                                            *HMD 01/85*
**                                                          *HMD 01/85*
**  HOWARD M. DEAN                                          *HMD 01/85*
**  TECHNICAL SUPPORT M/S A5-5                              *HMD 01/85*
**  SYNTEX U.S.A                                            *HMD 01/85*
**  3401 HILLVIEW AVENUE                                    *HMD 01/85*
**  P.O. BOX 10850                                          *HMD 01/85*
**  PALO ALTO, CA 94303                                     *HMD 01/85*
**  (415) 852-1792                                          *HMD 01/85*
***********************************************************************
       EJECT
**
**  COMPRESS INSTREAM MACROS
**
         MACRO
&NAME    TSOTEST &NOTTSO
.* TEST IF PROGRAM IS RUNNING UNDER TERMINAL OR BATCH
         LCLC    &A,&B
&A       SETC    'SVS'.'&SYSNDX'.'A'
&B       SETC    'SVS'.'&SYSNDX'.'O'
         AIF   ('&NOTTSO' NE '').GOTOP
         MNOTE 12,'*** BRANCH POINT MISSING FOR TSOTEST ***'
         MEXIT
.GOTOP   ANOP
         MNOTE *,'BRANCH TO &NOTTSO IF NOT TERMINAL USER'  *HMD*
&NAME    L     15,X'10'   .       --> CVT                  *HMD*
         TM    116(15),1          Q. IS THIS MVS           *HMD*
         L     15,0(15)   .       --> QUAD/DOUBLE WORD     *HMD*
         BNO   &A         .       A. NO, TRY SVS/MVT CODE  *HMD*
         L     15,12(R15) .       ASCB ADDRESS             *HMD*
         L     15,56(15)  .       CSCB ADDRESS             *HMD*
         TM    7(15),X'40' .      TERMINAL JOB TEST        *HMD*
         BNO   &NOTTSO .          BRANCH IF NOT FROM TSO   *HMD*
         B     &B         .       BRANCH AROUND SVS/MVT CODE
&A       DS    0H    .            SVS/MVT CODE             *HMD*
         L     15,4(15)  .        LOAD TCB ADDRESS         *HMD*
         TM    X'94'(15),128  .   TERMINAL JOB TEST        *HMD*
         BZ    &NOTTSO .          BRANCH IF NOT FROM TSO   *HMD*
&B       DS    0H                 END OF MACRO EXPANSION   *HMD*
         MEND
         EJECT
         MACRO
&NAME    TPUT &WHAT,&HOWLONG,&OUT=PUTLINE
         AIF   ('&OUT' NE '').BEGIN
         MNOTE 12,'** TPUT - OUTPUT ROUTINE ADDRESS MISSING **'
         MEXIT
.BEGIN   AIF   ('&NAME' EQ '').NOLBL
&NAME    DS    0H
.NOLBL   AIF  ('&WHAT'(1,1) EQ '(').REG
         LA    1,&WHAT              LOAD MESSAGE ADDRESS
         AGO   .SEQ1
.REG     ANOP
         LA    1,0(0,&WHAT(1))      LOAD 1 AND CLR HI BYTE
.SEQ1    AIF  ('&HOWLONG'(1,1) EQ '(').REGR
         LA    0,&HOWLONG           LOAD MESSAGE LENGTH
         AGO  .SVC
.REGR    ANOP
         LA    0,0(0,&HOWLONG(1))   CLR HI BYTE AND LOAD LENGTH
.SVC     L     R15,=A(&OUT)
         BALR  R14,R15              LINK TO OUTPUT ROUTINE  *HMD 07/79*
         MEND
         EJECT
         MACRO
&NAME    CLEAR &FIELD,&LEN,&TYPE=B
         LCLC  &L
         AIF   ('&NAME' EQ '').NONAME
&NAME    DS    0H                          CLEAR A FIELD
.NONAME  AIF   ('&FIELD' NE '').OK
         MNOTE 8,'*** CLEAR: FIELD NAME MISSING ***'
         MEXIT
.OK      AIF   ('&LEN' NE '').IMPLEN
&L       SETC  'L''&FIELD'
         AGO   .CLR
.IMPLEN  ANOP
&L       SETC  '&LEN'
.CLR     ANOP
         AIF   ('&TYPE' EQ 'B').EQB
         MVI   &FIELD,X'00'                MOVE IN ZERO
         AGO   .MVC
.EQB     MVI   &FIELD,C' '                 MOVE IN SPACE
.MVC     MVC   &FIELD+1(&L-1),&FIELD       CLEAR ALL THE WAY
         MEND
         EJECT
******************************************************************
** AT GTEDS, WE HAVE DECIDED TO USE 'SPFCOPY' TO COMPRESS   *HMD 02/82*
** A PDS.  THIS MODULE RESIDES IN LPALIB AND DYNAMICALLY    *HMD 02/82*
** AUTHORIZES ITSELF VIA A USER SVC.  FOR ALL PRACTICAL     *HMD 02/82*
** PURPOSES SPFCOPY WORKS LIKE AN IEBCOPY THAT DOES NOT     *HMD 02/82*
** REQUIRE AUTHORIZATION.  WHY, IN HEAVENS NAME, THAT IBM   *HMD 02/82*
** DECIDED TO REQUIRE THAT IEBCOPY BE APF AUTHORIZED IS     *HMD 02/82*
** BEYOND ME.  WHEN IBM FINALLY WAKES UP TO THE FACT THAT   *HMD 02/82*
** 'DATA SET UTILITIES' SHOULD NOT PROVIDE  AUTHORIZED      *HMD 01/85*
** SERVICES OR REQUIRE AUTHORIZATION THE LOCAL VARIABLE     *HMD 02/82*
** BELOW CAN BE CHANGED BACK TO IEBCOPY. UNTIL THAT TIME,   *HMD 02/82*
** WE WILL CIRCUMVENT THE SILLY RESTRICTION USING           *HMD 02/82*
** 'SPFCOPY'.  CHANGE THE VARIABLE BELOW IF YOU WISH TO     *HMD 02/82*
** USE THE VANILLA IEBCOPY.  HOWEVER, BEWARE THAT YOU MUST  *HMD 02/82*
** AUTHORIZED THIS COMMAND VIA IKJEFTE2 CSECT AND YOU       *HMD 02/82*
** CANNOT THEN USE IT UNDER SPF OPTION 6.                   *HMD 02/82*
******************************************************************
         LCLC  &COPY
******************************************************************
** EACH INSTALLATION SHOULD DEFINE A DEFAULT 'UNIT TYPE' NAME   **
** THAT IS INCLUSIVE OF ALL DASD DEVICES IN THE SHOP. AT GTEDS  **
** THAT NAME IS 'DISK' AND IT INCLUDES EVERY DASD DEVICE WE     **
** OWN. THE SET SYMBOL BELOW IS USED TO SET THE DEFAULT VALUE   **
** FOR THE PARSE 'UNIT NAME' KEYWORD. SET IT TO AN UNIT DEVICE  **
** NAME THAT IS ALL-INCLUSIVE AT YOUR INSTALLATION.             **
**                                                              **
**    HOWARD M. DEAN  10/16/79                                  **
******************************************************************
         LCLC  &UDEF            DEFAULT UNIT TYPE NAME      *HMD 10/79*
******************************************************************
**  THE FOLLOWING CONSTANTS WILL BE USED TO ESTABLISH A PREFIX  **
**  TO BE USED WHEN RUNNING COMPRESS UNDER THE TMP IN BATCH     **
**  MODE. EACH INSTALLATION, WHEN INSTALLING COMPRESS MUST      **
**  CHOOSE AN APPROPRIATE HIGH-LEVEL INDEX TO SERVE AS A        **
**  PREFIX FOR THE TMP RUN IN BATCH MODE.                       **
******************************************************************
         LCLC  &PREFIX          PREFIX FOR BATCH MODE       *HMD 07/79*
         LCLC  &DXT             DATE EXTRACT FOR HEADER     *HMD 01/85*
         LCLA  &PREFLEN         LOCAL LENGTH VARIABLE       *HMD 02/82*
&PREFIX  SETC  'SX10'        *** CHANGE IF DIFFERENT PREFIX USED ***
*                               """""" SYNTEX """""""       *HMD 01/85*
&PREFLEN SETA  K'&PREFIX     LENGTH OF PREFIX VARIABLE      *HMD 02/82*
&COPY    SETC  'SPFCOPY'     *** CHANGE IF DIFFERENT NAME   *HMD 02/82*
&UDEF    SETC  'SYSALLDA'    *** CHANGE IF DIFFERENT UNIT TYPE USED ***
*                               """""" SYNTEX """""""       *HMD 01/85*
&DXT     SETC  '&SYSDATE'(1,2).'&SYSDATE'(6,3)              *HMD 01/85*
         EJECT
GSFTSOCM TSOENTER BASE=11,PL=(PARSE,DAIR,IO),WORK=48        *HMD 07/79*
**
**  ESTABLISH SECOND BASE
**
NEXTBASE LR    R12,R11
         LA    R12,4095(R12)
         LA    R12,1(R12) SECOND BASE REG
         LUSE  GSFTSOCM+4096,R12
**
**  GET STORAGE FOR VARIABLES
**
GETSPAC  GETMAIN R,LV=STORLEN,SP=3         GET STORAGE FOR CONSTANTS
         LR    R10,R1                      ADDRESS DSECT
         LUSE  SAVDSC,R10                  TELL ASSEMBLER
         ST    R1,TSOUSER                  SAVE ADDRESS FOR LATER
         STM   R10,R12,ESSAVE              SAVE FOR ESTAE EXIT
         INUSE ,                           SEE WHO IS ON FIRST
         EJECT
**
**  MOVE MESSAGES TO DYNAMIC AREA AND INITIALIZE VARIABLES
**
INIT1    MVC   DAIRERRP(DAIRLTH),DAIRERRA
         MVC   DAIRERRS(DAIRLTG),DAIRERRB
         MVC   DAIRERRV(DAIRLTF),DAIRERRC
         MVC   DAIRERRX(DAIRLTE),DAIRERRD
         MVC   SYSUTX(SYSUTXL+2),SYSUTA
         MVC   MSG01(MSG01Z),MSG0A
         MVC   MSG02(MSG02Y),MSG0B
         MVC   MSG10(MSG10X),MSG10A
         MVC   MSG16(MSG16AL),MSG16A
         MVC   MSG26(MSG26X),MSG26A                         *HMD 05/82*
         MVC   MSG27(MSG27X),MSG27A                         *HMD 05/82*
         MVC   MSG28(MSG28X),MSG28A                         *HMD 05/82*
         MVC   PODCB(ADCBL),ADCB           MOVE DCB TO DYNAMIC AREA
         MVC   EXDCB(BDCBL),BDCB           MOVE DCB TO DYNAMIC AREA
         CLEAR DSNAME                      CLEAR DSNAME FIELD
         MVC   VSPARM(2),=H'0'
         MVC   DDNAMES(2),=H'88'
         CLEAR STAXLIST,LSTFRML,TYPE=Z     CLEAR LIST FORM MACROS
         CLEAR DDNAMLST,(22*L'DDNAMLST),TYPE=Z CLEAR ALT. DDNAME LIST
         XC    TSOECB,TSOECB               CLEAR EVENT CNTLBLK
         XC    TCB,TCB                     CLEAR TASK CNTL BLK
         XC    COMPCD,COMPCD               CLEAR COMPLETION CODE
         XC    PPLUWA,PPLUWA               CLEAR WORK AREA
         XC    PPLRANS,PPLRANS             CLEAR ANSWER AREA
         NI    ERRFLG,0                    CLEAR ERROR FLAG
         NI    RESSW,0                     CLEAR RES SWITCH *HMD 05/79*
         EJECT
**
**  CHECK IF USER IS RUNNING THE TMP UNDER BATCH OR TERM    *HMD 07/79*
**
BATCHT   TSOTEST BATCH               CHECK FOR TERMINAL     *HMD 07/79*
         OI    RESSW,REST            SET TERMINAL SWITCH    *HMD 07/79*
BATCH    DS    0H                    BATCH USER             *HMD 07/79*
         TM    RESSW,REST            TERMINAL USER?         *HMD 07/79*
         BO    NOPREF                YES, FORGET PREFIX     *HMD 07/79*
PREFIX   L     R3,CPPLUPT            GET UPT ADDRESS        *HMD 07/79*
         MVC   SAVEPREF(8),UPTPREFX-UPT(R3)  SAVE PREFIX    *HMD 07/79*
         CLI   UPTPREFL-UPT(R3),0    IS THERE ONE?          *HMD 07/79*
         BNE   NOPREF                YES, FORGET MOVE       *HMD 07/79*
         LA    R4,&PREFLEN           GET PREFIX LENGTH      *HMD 07/79*
         MVC   UPTPREFX-UPT(&PREFLEN,R3),=C'&PREFIX'        *HMD 07/79*
         STC   R4,UPTPREFL-UPT(R3)   SAVE PREFIX LENGTH     *HMD 07/79*
NOPREF   DS    0H                    BRACH AROUND PREF CODE *HMD 07/79*
         EJECT
**
**  SET UP FOR PARSE, DAIR
**
PARSE    MVC   PPLPCL,APPLPARM       SAVE PARSE LIST ADDR
         LA    R3,DAIRPB             POINT TO DAIR PARM BLK
         ST    R3,DAPLDAPB           STORE IN DAPB
         XC    TSOECB,TSOECB         CLEAR EVENT CNTL BLK
         LA    R1,PPL                LOAD LIST ADDRESS
         CALLTSSR EP=IKJPARS         LINK TO PARSE              *SRH*
         LTR   R15,R15               TEST FOR SUCCESSFUL COMPLETION
         BZ    PARSEOK               YES, CONTINUE
PARSERR  CVD   R15,DTEMP             RETURN CODE TO BE OUTPUT W/MSG
         UNPK  DTEMP(3),DTEMP+6(2)   UNPACK, PREPARE FOR PRINT
         OI    DTEMP+2,X'F0'         FIX SIGN
         MVC   MSG01C,DTEMP+1        MOVE TO DYNAMIC MESSAGE AREA
         TPUT  MSG01,MSG01L          PUT OUT MESSAGE
         B     RETURN0               RETURN TO TMP
         EJECT
**
**  GET NAME OF DATA SET TO BE COMPRESSED
**
PARSEOK  L     R8,PPLRANS            LOAD PARSE ANS. ADDRESS
         LUSE  PDL,R8                ESTABLISH ADDRESSIBILITY
         L     R2,PPLDSNAM           LOAD DSNAME ADDRESS
         LH    R3,PPLDSNAM+4         LOAD LENGTH OF DSNAME
         STH   R3,DSNLEN             SAVE FOR DAIR
         BCTR  R3,R0                 DOWN 1 FOR MACH. LEN
         LA    R4,DSNAME             FOR EXECUTED INSTRUCTION
         EX    R3,MOVE               EXECUTE THE MOVE
         INUSE ,
         EJECT
**
**  ALLOCATE DATA SET TO BE COMPRESSED
**
ALLODS   LA    R9,DAIRPB
         LUSE  DAPB08,R9
         MVC   DA08CD,=X'0008'
         XC    DA08FLG(6),DA08FLG
         LA    R2,DSNLEN
         ST    R2,DA08PDSN
         CLEAR DA08DDN,24
         XC    DA08BLK(16),DA08BLK
         CLEAR DA08MNM,16
         TM    PPLDSNAM+22,X'80'      IS PASSWORD PRESENT?
         BZ    NOPW                   NO, CONTINUE
         LH    R3,PPLDSNAM+20         LOAD PASSWORD LENGTH
         BCTR  R3,0                   DECREMENT FOR MACH LEN
         LA    R4,DA08PSWD            ADDR OF PASSWORD AREA
         L     R2,PPLDSNAM+16         PTR TO PASSWORD
         EX    R3,MOVE                MOVE PASSWORD TO AREA
*****************************************************************SRH*
*    SEE IF THE PDS TO BE COMPRESSED SHOULD BE ALLOCATED        *SRH*
*    "DISP=SHR" OR "DISP=OLD".                                  *SRH*
*****************************************************************SRH*
NOPW     DS    0H                                               *SRH*
         CLI   DISPKW+1,1             WAS 'DISP=OLD' SPECIFIED? *SRH*
         BE    ALLOCOLD               YEP, DO IT                *SRH*
         MVC   DA08DSP1(3),SHRCODE    NOPE, MAKE IT SHR         *SRH*
         B     ALLOCDSP               GO ON                     *SRH*
ALLOCOLD MVC   DA08DSP1(3),OLDCODE    MAKE IT OLD               *SRH*
ALLOCDSP DS    0H                                               *SRH*
*****************************************************************HMD*
*    SEE IF WE SHOULD EVENTUALLY ISSUE A HARDWARE RESERVE       *HMD*
*    TO THE PACK WHICH HOLD THE COMPRESSEE DATA SET             *HMD*
*****************************************************************HMD*
         CLI   RESERVE+1,1            DOES HE WANT RESERVE?     *HMD*
         BE    RSVD                   OK, WE'LL DO IT           *HMD*
         B     NRSVD                  GO ALLOCATE DATA SET      *HMD*
RSVD     OI    RESSW,RESI             TURN ON RESERVE SWITCH    *HMD*
NRSVD    DS    0H                     POINT TO BRANCH TO        *HMD*
         SPACE 2
         XC    DA08CTL(5),DA08CTL
         TM    PPLDSNAM+6,X'40'       TEST FOR DSNAME WITHIN QUOTES
         BO    CKUNIT                 QUOTES - CHECK UNIT   *HMD 10/79*
         MVI   DA08CTL,DA08UID     INDICATE TO PREFIX USER ID
CKUNIT   CLEAR DA08UNIT               CLEAR UNIT FIELD      *HMD 10/79*
         CLEAR DA08SER                CLEAR VOLSER FIELD    *HMD 10/79*
         CLI   UNIT+1,0               NO UNIT SPECIFIED?    *HMD 10/79*
         BE    CKVOLS                 USE PSCB GROUP NAME   *HMD 10/79*
         TM    UNITTYP+6,X'80'        UNIT SUPPLIED?        *HMD 10/79*
         BZ    CKVOLS                 NOPE - SEE IF VOL OK  *HMD 10/79*
         SR    15,15                  CLEAR FOR ICM         *HMD 10/79*
         ICM   15,3,UNITTYP+4         LENGTH OF CHAR STRING *HMD 10/79*
         BZ    CKVOLS                 NO PARM SUPPLIED      *HMD 10/79*
         L     14,UNITTYP             POINTER TO CHAR STRING*HMD 10/79*
         BCTR  15,0                   BUMP DOWN FORM MVC    *HMD 10/79*
         EX    15,MOVE001             MOVE TO DAIR P.B.     *HMD 10/79*
CKVOLS   CLI   VOLUME+1,0             NO VOLUME SPECIFIED?  *HMD 10/79*
         BE    GOLINK                 USE CATALOG/LINK DAIR *HMD 10/79*
         TM    VOLSERY+6,X'80'        WAS VOL SPECIFIED     *HMD 10/79*
         BZ    GOLINK                 NOPE, FORGET IT       *HMD 10/79*
         SR    15,15                  CLEAR FOR ICM         *HMD 10/79*
         ICM   15,3,VOLSERY+4         LENGTH OF PARAMETER   *HMD 10/79*
         BZ    GOLINK                 ZERO LEN PARM - BAD   *HMD 10/79*
         L     14,VOLSERY             POINTER TO CHAR STRING*HMD 10/79*
         BCTR  15,0                   BUMP DOWN FOR MVC     *HMD 10/79*
         EX    15,MOVE002             MOVE IN VOLSER        *HMD 10/79*
         B     GOLINK                 BRANCH AROUND EXEC.   *HMD 10/79*
MOVE001  MVC   DA08UNIT(0),0(14)      ** EXECUTED **        *HMD 10/79*
MOVE002  MVC   DA08SER(0),0(14)       ** EXECUTED **        *HMD 10/79*
         SPACE
GOLINK   LA    R1,DAPL
         XC    TSOECB,TSOECB
         CALLTSSR EP=IKJDAIR          DO DAIR                  *SRH*
         LTR   R15,R15
         BZ    CMPRSOK
IN#USE   CLC   DA08DARC,DAIR020C      DATA SET SHARED?     *HMD 04/79*
         BE    EXCLMSG                YES, PUT OUT MSG     *HMD 04/79*
         CLC   DA08DARC,DAIR0210      IS DATA SET IN USE?  *HMD 05/79*
         BE    SHRALLOC               YUP, PUT OUT MSG     *HMD 05/79*
         B     CKONVOL                GO SEE IF ON VOLUME  *HMD 04/79*
EXCLMSG  LA    R1,MSG04               ERROR HEADER         *HMD 04/79*
         BAL   R14,OUTMSG             TO OUTPUT            *HMD 05/79*
         TPUT  MSG21,MSG21L           PUT OUT SECOND MSG   *HMD 04/79*
         B     RETURN0                CLEAR OUT OF HERE    *HMD 04/79*
SHRALLOC LA    R1,MSG04               ERROR HEADER         *HMD 04/79*
         BAL   R14,OUTMSG             PUT IT OUT           *HMD 05/79*
         TPUT  MSG22,MSG22L           PUT OUT SECOND MSG   *HMD 04/79*
         B     RETURN0                CLEAR OUT OF HERE    *HMD 04/79*
CKONVOL  CLC   DA08DARC,DAIR6708      NOT ON VOLUME?       *HMD 10/79*
         BNE   CKCTLG                 NO, CHECK IF CTLGD   *HMD 10/79*
         LA    R1,MSG05C              LOAD VOL MSG ADDR    *HMD 10/79*
         BAL   R14,OUTMSG             TO OUTPUT            *HMD 10/79*
         B     RETURN0                CLEAR OUT OF HERE    *HMD 10/79*
CKCTLG   CLI   DA08DARC,X'17'         TEST FOR CATALOG ERROR
         BE    CATERR
CMPRSERR DC    0H'0'
         ST    R15,SAVER15
         LA    R1,MSG04
         BAL   R14,OUTMSG
         L     R15,SAVER15
         L     R1,DA08DARC
         BAL   R14,DAIRERR
         B     RETURN0
CATERR   CLI   DA08DARC+1,X'08'        DATA SET NOT CATLGD?
         BE    NOTCATLG                YES, INDICATE ERROR
         CLI   DA08DARC+1,X'0C'        BAD INDEX?
         BE    LOWLEV                  YES, INDICATE ERROR
         CLI   DA08DARC+1,X'10'        SAME?
         BNE   CMPRSERR                NO, MUST BE OTHER ERROR
LOWLEV   LA    R1,MSG05A               LOAD MESSAGE ADDRESS
         BAL   R14,OUTMSG              PUT IT OUT TO USER
         B     RETURN0                 INDICATE ERROR
NOTCATLG LA    R1,MSG03
         BAL   R14,OUTMSG
         B     RETURN0
CMPRSOK  MVC   INDD(8),DA08DDN         INDD
         MVC   OUTDD(8),DA08DDN        OUTDD
         TM    DA08DSO,X'02'           IS DATASET PARTITIONED?@HMD78185
         BNO   BADTYP                  NO                     @HMD78185
MOVUID   TM    RESSW,RESI              ISSUE RESERVE?       *HMD 05/79*
         BNO   ALLODUM                 NO, FORGET THIS CODE *HMD 05/79*
         TM    PPLDSNAM+6,X'40'        DSNAME IN QUOTES?      @HMD78185
         CLEAR DSNHOLD                 CLEAR DSNAME HOLD AREA @HMD78185
         BO    WHOLQUAL                FULLY QUALIFIED        @HMD78185
         L     R1,CPPLUPT              GET UPT ADDRESS      *HMD 04/79*
         LA    R1,UPTPREFX-UPT(R1)     POINT TO PREFIX      *HMD 04/79*
         SLR   R2,R2                   CLEAR FOR IC           @HMD78185
         IC    R2,7(R1)                GET USERID LENGTH      @HMD78185
MOVIT    MVC   DSNHOLD(0),0(R1)        << EXECUTED >>         @HMD78185
         BCTR  R2,0                    DOWN FOR MVC           @HMD78185
         EX    R2,MOVIT                MOVE USERID TO AREA    @HMD78185
         LA    R1,DSNHOLD(R2)          POINT TO LAST CHAR     @HMD78185
         MVI   1(R1),C'.'              MOVE IN DOT            @HMD78185
         LH    R3,DSNLEN               GET DSN LENGTH         @HMD78185
         LA    R1,2(R1)                POINT PAST USERID      @HMD78185
MOVREST  MVC   0(0,R1),DSNAME          << EXECUTED >>         @HMD78185
         BCTR  R3,0                    BUMP DOWN FOR MVC      @HMD78185
         EX    R3,MOVREST              OK, WHOLE NAME MOVED   @HMD78185
         LA    R3,3(R2,R3)             GET FULL DSN LENGTH    @HMD78186
         STH   R3,ENQLEN               SAVE FOR RNAME LENGTH  @HMD78186
         B     ALLODUM                 CONTINUE               @HMD78185
WHOLQUAL MVC   DSNHOLD(0),DSNAME       << EXECUTED >>         @HMD78185
         LH    R2,DSNLEN               GET DSNAME LENGTH      @HMD78185
         STH   R2,ENQLEN               SAVE FOR RNAME LENGTH  @HMD78186
         BCTR  R2,0                    BUMP DOWN FOR MVC      @HMD78185
         EX    R2,WHOLQUAL             MOVE DSNAME            @HMD78185
         B     ALLODUM                 CONTINUE               @HMD78185
         SPACE 2
BADTYP   LA    R1,MSG05                LOAD ADDR OF ERROR MSG
         BAL   R14,OUTMSG              PUT OUT MESSAGE
         B     RETURN1                 RETURN TO TMP
         SPACE 2
RETURN0  MVC   COMPCD,=F'20'           MOVE ERROR CODE
         B     RETURN3                 RETURN HOME
         INUSE ,                       SEE WHO'S ON FIRST
         EJECT
**
**  ALLOC DUMMY FOR SYSIN
**
**  R9 STILL POINTS TO DAPB AND 0008 IS IN DA08CD
**
ALLODUM  XC    DA08FLG(10),DA08FLG    CLEAR DAIRPB FLAGS
         CLEAR DA08DDN,24             CLEAR DDNAME AREA
         XC    DA08BLK(16),DA08BLK    CLEAR BLOCKSIZE
         CLEAR DA08MNM,16             NO MEMBER NAME
         MVI   DA08DSP1,DA08NEW       INDICATE NEW DATASET
         XC    DA08DPS2(2),DA08DPS2   CLEAR SECONDARY DISP
         MVI   DA08CTL,DA08DMMY       INDICATE DUMMY
         XC    DA08CTL+1(4),DA08CTL+1 CLEAR RESERVED BYTES
         XC    TSOECB,TSOECB          RESET ECB
         LA    R1,DAPL                LOAD DAPPLE ADDRESS
         CALLTSSR EP=IKJDAIR          LINK TO DAIR                *SRH*
         LTR   R15,R15                WAS ALLOCATION OK?
         BZ    SAVDUMDD               YES, CONTINUE
         ST    R15,SAVER15            SAVE RETURN CODE
         TPUT  MSG09,MSG09L           PUT OUT ERROR MSG
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R1,DA08DARC            GET DYNAMIC ALLOC. RET CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MSG
         B     RETURN1                RETURN TO TMP
SAVDUMDD MVC   SYSIN(8),DA08DDN       SAVE SYSIN DD NAME
         EJECT
**
**  ALLOCATE SYSPRINT
**
PRNTCHK  CLI   PRNTKYWD+1,0         NO PRINT KEYWORD?
         BE    CKRESS               SEE IF RESERVE REQUESTED*HMD 05/79*
         CLI   PRNTKYWD+1,1         NOPRINT SPECIFIED?
         BE    ALPRTDUM             YUP, ALLOCATE DUMMY     *HMD 05/79*
         B     ALPRTDSN             ALLOCATE PRINT TO DSNAME*HMD 05/79*
***********************************************************************
** WE COME HERE IF PRINT(*) WAS SPECIFIED, OR IF NO PRINT OPTION WAS **
** GIVEN. BRANCHED TO FROM ALPRTDSN ROUTINE IF '*' IS SPECIFIED.     **
** AT THIS POINT CHECK TO SEE IF RESERVE WAS ISSUED. IF SO, FORCE    **
** PRINT TO DUMMY SO THAT OUTPUT WAIT WILL NOT TIE UP DEVICE DURING  **
** COMPRESS. SET SWITCH TO SEND MESSAGE TO USER LATER TO INFORM HIM  **
** OPTION HAS BEEN CHANGED.      ** H. DEAN 05/79 **                 **
***********************************************************************
CKRESS   DS    0H                   CHECK FOR RESERVE       *HMD 05/79*
         TM    RESSW,RESI           WAS RESERVE ISSUED?     *HMD 05/79*
         BNO   ALTERM               NO, GO AHEAD WITH TERM  *HMD 05/79*
* IN BATCH TERMINAL WILL REALLY BE MESSAGE CLASS            *HMD 07/79*
         TM    RESSW,REST           BATCH RUN OF COMPRESS?  *HMD 07/79*
         BZ    ALTERM               THIS GUY IS UNDER BATCH *HMD 07/79*
         OI    RESSW,RESB           INDICATE PRINT IS DUMMY *HMD 05/79*
         B     ALPRTDUM             NOW ALLOCATE PRINT DUMMY*HMD 05/79*
         INUSE ,
         EJECT
**
**  R9 STILL POINTS TO DAPB AND 0008 IS IN DA08CD
**
ALPRTDUM XC    DA08FLG(10),DA08FLG    CLEAR DAIR FLAGS
         CLEAR DA08DDN,24             CLEAR DDNAME FIELD
         XC    DA08BLK(16),DA08BLK    CLEAR BLOCKSIZE
         CLEAR DA08MNM,16             NO MEMBER NAME
         MVI   DA08DSP1,DA08NEW       INDICATE NEW DATASET
         XC    DA08DPS2(2),DA08DPS2   CLEAR SEC. DISP
         MVI   DA08CTL,DA08DMMY       INDICATE DUMMY DATASET
         XC    DA08CTL+1(4),DA08CTL+1 CLEAR RESERVED BYTES
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         LA    R1,DAPL                A DAPPLE A DAY....
         CALLTSSR EP=IKJDAIR          LINK TO DAIR               *SRH*
         LTR   R15,R15                ALLOCATION OK?
         BZ    SAVEDDN                YES, SAVE DDNAME
         ST    R15,SAVER15            NO, SAVE RETURN CODE
         TPUT  MSG13,MSG13L           OUTPUT MESSAGE
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R1,DA08DARC            GET DYNAM. ALLOC. RET. CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MESSAGE
RETURN1  MVC   COMPCD,=F'20'          INDICATE ERROR        *HMD 05/82*
         B     RETURN2                RETURN TO TMP
         EJECT
**
**  ALLOCATE SYSPRINT TO A DATA SET
**
ALPRTDSN L     R2,PRNTDSNA          LOAD DSNAME PTR
         CLI   0(R2),C'*'           IS IT THE TERMINAL?
         BE    CKRESS               YES, CHECK FOR RESERVE *HMD 05/79*
         LA    R4,DSNAME            NO, GET DSNAME AREA ADDR
         LH    R3,PRNTDSNA+4        LOAD LENGTH OF DSNAME
         STH   R3,DSNLEN            SAVE IN LENGTH FIELD (FOR DAIRPB)
         BCTR  R3,R0                DOWN 1 FOR MACH. LEN
         EX    R3,MOVE              MOVE IN DSNAME
         BAL   R14,ALLOCPRT         GO FINISH ALLOCATION
         EJECT
**
**  ALLOCATE NEW
**
ALLOCNEW MVC   DA08BLK,PRNTBLK        PRINT BLKSIZE=3509
         MVI   DA08PQTY+3,10          10 TRACKS PRIMARY
         MVI   DA08SQTY+3,5           5  TRACKS SECONDARY
         TM    PRNTDSNA+14,X'80'      TEST FOR MEMBER NAME
         BZ    ALNOMEM                NO, NOT A PDS
         MVI   DA08DQTY+3,1           YES, ALLOCATE 1 DIR. BLOCK
ALNOMEM  MVC   DA08DSP1(3),NEWCODE    NEW,CATLG,KEEP
         OI    DA08CTL,DA08TRKS+DA08RLSE   TRACKS AND RELEASE
         LA    R1,DAPL                DAPPLE PIE
         XC    TSOECB,TSOECB          CLEAR  EVENT CNTL BLOCK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR             *SRH*
         LTR   R15,R15                ALLOCATION OK?
         BZ    SAVEDDN                YES, SAVE DDNAME
         INUSE ,
         EJECT
**
**  TRY ALLOC AS SHR
**
ALLOCSHR BAL   R14,ALLOCPRT           GO DO BASIC ALLOC ROUTINE
         MVC   DA08DSP1(3),SHRCODE    SHR,KEEP,KEEP
         LA    R1,DAPL                LOAD DAPPLE ADDRESS
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR             *SRH*
         LTR   R15,R15                ZERO RETURN CODE?
         BZ    TESTPO                 YES, TEST FOR PO DSORG
         ST    R15,SAVER15            NO, SAVE RETURN CODE
         LA    R1,MSG04               LOAD MESSAGE ADDRESS
         BAL   R14,OUTMSG             PUT OUT MESSAGE
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R1,DA08DARC            LOAD DYNAM. ALLOC. RET. CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MSG
         B     RETURN1                RETURN TO TMP
TESTPO   TM    DA08DSO,X'02'          TEST FOR PO DSORG
         BZ    SAVEDDN                NOT PARTITIONED, SAVE DDNAME
         CLI   DA08MNM,C' '           IS MEMBER NAME BLANK?
         BNE   SAVEDDN                NO, SAVE DDNAME
         LA    R1,MSG07               YES, PUT OUT ERROR MESSAGE
         BAL   R14,OUTMSG             INDICATE ERROR
         B     RETURN1                RETURN TO TMP
SAVEDDN  MVC   SYSPRINT(8),DA08DDN    MOVE DDNAME TO SYSPRINT AREA
         B     ALUT34                 GO ALLOC SYSUT3 AND SYSUT4
         EJECT
**
**  ALLOC SYSPRINT TO TERMINAL
**
         LDROP R9
         LUSE  DAPB1C,R9
ALTERM   LA    R9,DAIRPB              RESTORE DAIR PB ADDR
**                                                                **
** CHECK FOR TERMINAL OR BATCH -                                  **
** IF BATCH - ALLOCATE A SYSOUT DATA SET TO THE MESSAGE CLASS     **
**                                                                **
         TM    RESSW,REST             BATCH JOB?           *HMD 07/79*
         BZ    SYSOUTDS               YUP, ALLOC SYSOUT DS *HMD 07/79*
TERMINAL MVC   DA1CCD,=X'001C'        MOVE IN TERMINAL CODE
         XC    DA1CFLG(6),DA1CFLG     CLEAR DAIR FLAGS
         MVC   DA1CDDN,BLANK          CLEAR DDNAME
         LA    R1,DAPL                LOAD DAPPLE ADDRESS
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR            *SRH*
         LTR   R15,R15                ZERO RTN CODE?
         BZ    SAVETDSN               YES, SAVE TERMINAL DDNAME
         ST    R15,SAVER15            NO, SAVE RETURN CODE
         TPUT  MSG06,MSG06L           PUT OUT ERROR MSG
         L     R15,SAVER15            RESTORE RETURN CODE
         XC    DA1CDARC+2(2),DA1CDARC CLEAR FIRST 2 DARC BYTES
         L     R1,DA1CDARC            LOAD DYNAM. ALLOC. RTN. CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MSG
         B     RETURN1                RETURN TO TMP
SAVETDSN MVC   SYSPRINT(8),DA1CDDN    MOVE DDNAME SYSPRINT AREA
         B     ALUT34                 GO ALLOC SYSUT3 AND SYSUT4
         INUSE ,
         EJECT
*********************************************************************
**  THIS SUBROUTINE WILL ALLOCATE A SYSOUT DATA SET FOR PRINTING   **
**  IEBCOPY MESSAGES IF TERMINAL IS SPECIFIED ON THE PRINT KEYWORD **
**  (OR TAKEN BY DEFAULT) AND THE USER IS RUNNING THE TMP UNDER    **
**  BATCH MODE.                                                    **
*********************************************************************
         LDROP R9                     GET RID OF BASE       *HMD 07/79*
         LUSE  DAPB30,R9              ADDRESS DAIR PB       *HMD 07/79*
SYSOUTDS LA    R9,DAIRPB              ALLOCATE A SYSOUT DS  *HMD 07/79*
         MVC   DA30CD,=X'0030'        MOVE IN PROPER CODE   *HMD 07/79*
         XC    DA30FLG(6),DA30FLG     CLEAR FLAGS           *HMD 07/79*
         XC    DA30PDSN,DA30PDSN      CLEAR DSNAME POINTER  *HMD 07/79*
         CLEAR DA30DDN,24             CLEAR DDNAME, ETC     *HMD 07/79*
         XC    DA30BLK(12),DA30BLK    CLEAR ATTRIBUTES      *HMD 07/79*
         CLEAR DA30PGNM,12            CLEAR PROGRAM NAME    *HMD 07/79*
         MVI   DA30CTL,DA30PERM       PERM. ALLOCATION      *HMD 07/79*
         LA    R1,DAPL                A DAPPLE A DAY...     *HMD 07/79*
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLOCK*HMD 07/79*
         CALLTSSR EP=IKJDAIR          CALL SERVICE ROUTINE  *HMD 07/79*
         LTR   R15,R15                CHECK REG. 15         *HMD 07/79*
         BZ    SAVESDDN               SAVE SYSOUT DDNAME    *HMD 07/79*
         ST    R15,SAVER15            SAVE RETURN CODE      *HMD 07/79*
         TPUT  MSG06A,MSG06AL         PUT OUT MESSAGE       *HMD 07/79*
         L     R15,SAVER15            RESTORE RETURN CODE   *HMD 07/79*
         XC    DA30DARC+2(2),DA30DARC CLEAR FIRST TWO BYTES *HMD 07/79*
         L     R1,DA30DARC            LOAD RETURN CODE      *HMD 07/79*
         BAL   R14,DAIRERR            PUT OUT ERROR MSG     *HMD 07/79*
         B     RETURN1                RETURN TO TMP         *HMD 07/79*
SAVESDDN MVC   SYSPRINT(8),DA30DDN    MOVE DDNAME TO LIST   *HMD 07/79*
         B     ALUT34                 ALLOCATE OTHER DS     *HMD 07/79*
         INUSE ,
         EJECT
**
** BASIC ALLOCATION OF SYSPRINT DATA SET
**
         LDROP R9
         LUSE  DAPB08,R9
ALLOCPRT ST    R14,SAVER14            STORE RETURN ADDRESS
         MVC   DA08CD,=X'0008'        MOVE IN DAIR CODE
         XC    DA08FLG(6),DA08FLG     CLEAR DAIR FLAGS
         LA    R2,DSNLEN              LOAD DSNAME ADDR
         ST    R2,DA08PDSN            STORE IN DAPB
         CLEAR DA08DDN,24             CLEAR DDNAME AREA
         XC    DA08BLK(16),DA08BLK    CLEAR BLKSIZE
         CLEAR DA08MNM,16             CLEAR MEMBER NAME AREA
         TM    PRNTDSNA+14,X'80'      TEST FOR MEMBER NAME
         BZ    NOMEM                  NO MEMBER NAME PRESENT
         LH    R3,PRNTDSNA+12         LOAD MEMBER NAME LENGTH
         BCTR  R3,R0                  DOWN 1 FOR MACH. LEN
         LA    R4,DA08MNM             MOVE MEMBER NAME TO DAIR PB
         L     R2,PRNTDSNA+8                 "
         EX    R3,MOVE                       "
NOMEM    XC    DA08DSP1(7),DA08DSP1   CLEAR DISP FIELDS
         TM    PRNTDSNA+22,X'80'      TEST FOR PASSWORD
         BZ    NOPSWRD                NOT PRESENT
         L     R2,PRNTDSNA+16         POINTER TO PASSWORD
         LA    R4,DA08PSWD            LOAD PASSWORD AREA ADDRESS
         LH    R3,PRNTDSNA+20         LENGTH OF PASSWORD
         BCTR  R3,0                   DOWN 1 FOR MACH. LEN
         EX    R3,MOVE                MOVE PASSWORD TO AREA
NOPSWRD  TM    PRNTDSNA+6,X'40'       TEST FOR QUOTES
         BO    ALLOCRTN               NO, LEAVE DSNAME ALONE
         OI    DA08CTL,DA08UID        PREFIX USERID
ALLOCRTN L     R14,SAVER14            RESTORE RET REG
         BR    R14                    RETURN
         INUSE ,
         EJECT
**
**  ALLOCATE SYSUT3 AND SYSUT4
**
         LDROP R9
         LUSE  DAPB08,R9
ALUT34   LA    R9,DAIRPB              RESTORE DAIR PB ADDRESS
         LA    R7,2                   TWO SYSUTS
         MVC   DA08CD,=X'0008'        MOVE IN DAIR CODE
SYSUTLP  XC    DA08FLG(6),DA08FLG     CLEAR FLAGS
         LA    R2,SYSUTX              LOAD "SYSUT" DSNAME ADDR
         ST    R2,DA08PDSN            SAVE IN DAIR PB
         CLEAR DA08DDN,24             CLEAR DDNAME AREA
         XC    DA08BLK(16),DA08BLK    CLEAR BLK SIZE
         MVI   DA08PQTY+3,5           5 CYL PRIMARY ALLOCATION
         MVI   DA08SQTY+3,2           2 CYL SECONDARY ALLOCATION
         CLEAR DA08MNM,16             CLEAR MEMBER NAME AREA
         MVC   DA08DSP1(3),TEMPCODE   NEW,DELETE,DELETE
         MVI   DA08CTL,DA08CYLS       CYLINDER ALLOCATION
         XC    DA08CTL+1(4),DA08CTL+1 CLEAR RESERVED BYTES
         LA    R1,DAPL                A DAPPLE A DAY....
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR            *SRH*
         LTR   R15,R15                ZERO RETURN CODE?
         BZ    SYSUTST                YES, GET NEXT SYSUT
         ST    R15,SAVER15            SAVE BAD RETURN CODE
         TPUT  MSG08,MSG08L           PUT OUT MESSAGE
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R1,DA08DARC            LOAD DYNAM. ALLOC. RET. CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MESSAGE
         B     RETURN1                RETURN TO TMP
SYSUTST  LR    R4,R7                  EITHER 2 OR 1 (2 FIRST TIME)
         SLL   R4,3                   EITHER 16 OR 8 (16 FIRST TIME)
         LA    R4,OUTDD(R4)           OFFSET FROM OUTDD
         LA    R2,DA08DDN             LOAD DDNAME ADDRESS
         LA    R3,7                   MOVE 8 BYTES
         EX    R3,MOVE                OF THE DDNAME
         BCT   R7,MOVEUTNO            GET SYSUT3 ALLOCATED
         B     SETSTAX                GO SPECIFY ATTN EXIT
MOVEUTNO MVI   SYSUTXNO,C'3'          CHANGE DSNAME TO "SYSUT3"
         B     SYSUTLP                LOOP ONE MORE TIME
         INUSE ,
         EJECT
**
** ALL THE DATA SETS ARE ALLOCATED. INITAITE STAX.
**
SETSTAX  DC    0H'0'
         STAX  STAXEXIT,OBUF=(ATTNMSG,ATTNMSGL),                       X
               MF=(E,STAXLIST)
         EJECT
**
** ESTABLISH ESTAE EXIT                                    *HMD 05/79*
**
         ESTAE ESEXIT,                 ESTAE EXIT ADDR     *HMD 05/79* X
               CT,                     CREATE OPTION       *HMD 05/79* X
               PURGE=NONE,             CLEAR I/O OPS       *HMD 05/79* X
               PARAM=ESSAVE,           SAVE BASE REGISTERS *HMD 05/79* X
               ASYNCH=YES,             FOR DEQ MACRO       *HMD 05/79* X
               TERM=YES,               EVEN OPR CANCEL     *HMD 05/79* X
               MF=(E,ESLIST)           POINT TO LIST FORM  *HMD 05/79*
         EJECT
**
**  TEST IF SAFETY WANTED  (HMD 08/77)
**
SAFECK   TPUT  MSG19,MSG19L          TELL USER SOMETHING IS HAPPENING
         TM    RESSW,REST            BATCH USER?            *HMD 07/79*
         BO    T0001                 NOPE, TERMINAL USER    *HMD 07/79*
         TPUT  BLANK,BLANKL          PUT OUT BLANK LINE     *HMD 07/79*
         TPUT  MSG25,MSG25L          TELL USER OF CHANGE    *HMD 07/79*
         B     SAVECK1               BRANCH AROUND TERM CODE*HMD 07/79*
T0001    DS    0H                    TERMINAL USER ONLY     *HMD 07/79*
         TM    RESSW,RESB            PRINT(*) WITH RESERVE? *HMD 05/79*
         BNO   SAVECK1               NO, FORGET MSGS
         TPUT  BLANK,BLANKL          PUT OUT BLANK LINE     *HMD 05/79*
         TPUT  MSG23,MSG23L          FIRST PART OF MSG      *HMD 05/79*
         TPUT  MSG24,MSG24L          SECOND PART OF MSG     *HMD 05/79*
SAVECK1  DS    0H                                           *HMD 05/79*
         CLI   SAFEKW+1,1            WAS NOSAFETY SPECIFIED
         BE    BLNKLNE               YES, PUT OUT BLANK LINK
         NI    ERRFLG,255-ERRIND     TURN OFF SAFETY ERROR  *HMD 05/82*
         OI    ERRFLG,ERRSAF         INDICATE SAFETY COPY   *HMD 05/82*
         BAL   R14,SAFETY            LINK TO SAFETY ROUTINE
         ST    R15,COMPCD            SAVE COMPLETION CODE   *HMD 05/82*
         OC    COMPCD,COMPCD         IS COMPLETION CODE ZERO*HMD 05/82*
         BZ    TELLIT                YES, TELL USER COPY OK *HMD 05/82*
         OI    ERRFLG,ERRIND         SET SAFETY COPY MSG    *HMD 05/82*
         B     RETURN2               GO FREE DS AND SEND MSG*HMD 05/82*
TELLIT   TPUT  MSG17,MSG17L          COPY OK, TELL USER
         NI    ERRFLG,ERRSAFO        TURN OFF SAFETY IND.   *HMD 05/82*
         B     RELEASE               GO RELEASE PDE
BLNKLNE  TPUT  BLANK,BLANKL          PUT OUT BLANK LINE
         EJECT
**
**  RELEASE PDL
**
RELEASE  IKJRLSA PPLRANS
         EJECT
**                                                            @HMD78184
**  RESERVE DATASET BETWEEN CPUS                              @HMD78184
**                                                            @HMD78184
RESRVE   DS    0H                                             @HMD78184
         TM    RESSW,RESI         ISSUE RESERVE?           *HMD 05/79*
         BNO   ATTACHA            NOPE, GET LOST           *HMD 05/79*
         EXTRACT UCBADD,FIELDS=TIOT,MF=(E,EXTRA)              @HMD78185
         L     R1,UCBADD          GET TIOT ADDRESS            @HMD78184
         LA    R1,24(,R1)         POINT TO DDNAME LIST        @HMD78184
         LA    R3,INDD            POINT TO INPUT DDNAME       @HMD78184
TIOTLOOP CLC   =F'0',0(R1)        END OF TIOT?                @HMD78184
         BE    TIOTERR            YES, INDICATE ERROR AND END @HMD78184
         SLR   R2,R2              CLEAR FOR IC                @HMD78185
         IC    R2,0(R1)           GET LENGTH OF THIS DD ENTRY @HMD78184
         CLC   0(8,R3),4(R1)      DOES DDNAME ENTRY MATCH     @HMD78184
         BE    GOTUCB             YES, GOT UCB ADDRESS        @HMD78184
         LA    R1,0(R2,R1)        GET NEXT DD ADDRESS         @HMD78184
         B     TIOTLOOP                                       @HMD78184
GOTUCB   MVC   UCBADD+1(3),17(R1) MOVE IN UCB ADDRESS         @HMD78184
         L     R2,UCBADD          GET UCB ADDRESS           *HMD 04/79*
         CLEAR QNAME              BLANK QNAME               *HMD 04/79*
         MVC   QNAME(6),28(R2)    MOVE IN VOLSER            *HMD 04/79*
         OI    ENQLST,192         INDICATE LISTEND            @HMD78186
         LH    R3,ENQLEN          LOAD LENGTH OF DSNAME       @HMD78186
RSVP     RESERVE (QNAME,DSNHOLD,E,(3),SYSTEMS),UCB=UCBADD,MF=(E,ENQLST)
         OI    RESSW,RESO         INDICATE RESERVE ISSUED   *HMD 05/79*
         B     ATTACHA                                        @HMD78184
TIOTERR  TPUT  MSGTIOT,MSGTIOTL   PUT OUT ERROR MSG           @HMD78184
         XC    TCB,TCB                CLEAR TCB ADDRESS
         MVC   COMPCD,=F'20'          FIX COMPETION CODE      @HMD78184
         OI    ERRFLG,ERRIND          DELETE SAFETY DATASET   @HMD78184
         B     RETURN2            RETURN TO TMP               @HMD78184
         EJECT
**
**  ATTACH IEBCOPY
**
ATTACHA  XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         LA    R5,TSOECB              LOAD ECB ADDRESS FOR ATTACH
         LA    R1,VSPARM              EXEC PARM ADDR
         ST    R1,TSOUSER+4           SAVE IN DYNAMIC AREA
         LA    R1,DDNAMES             ALTERNATE DDNAME ADDR
         ST    R1,TSOUSER+8           SAVE IN DYNAMIC AREA
         MVI   TSOUSER+8,X'80'        SET VL BIT
         LA    R1,TSOUSER+4           LOAD PARM LIST ADDRESS
         ATTACH EP=&COPY,ECB=(5),MF=(E,(1)),SF=(E,ATACHSF), *HMD 07/79*X
               ESTAI=(ESEXIT,ESSAVE)
         ST    R1,TCB                 SAVE TCB OF ATTACHED TASK
         WAIT  1,ECB=TSOECB           WAIT FOR COMPRESS TO COMPLETE
         L     R1,TCB                 GET TCB ADDRESS       *HMD 05/82*
         MVC   COMPCD,16(R1)          SAVE RETURN CODE      *HMD 05/82*
DETACH   DETACH TCB,STAE=YES          DETACH IEBCOPY        *HMD 07/79*
         TM    RESSW,RESI              WAS RESERVE ISSUED   *HMD 05/79*
         BNO   RETURN2                 NOPE, FORGET DEQ     *HMD 05/79*
         LH    R3,ENQLEN              RESTORE LENGTH        @HMD78176
DEQRTN   DEQ   (QNAME,DSNHOLD,(3),SYSTEMS),RET=HAVE,        *HMD 05/79*X
               UCB=UCBADD,MF=(E,ENQLST)                     @HMD78186
         NI    RESSW,255-RESO         INDICATE NO MORE RES  *HMD 05/79*
         B     RETURN2                                      *HMD 04/79*
IRVING   LTORG
         EJECT
**
** THIS ROUTINE WILL DYNAMICALLY ALLOCATE A "SAFETY"
** DATASET INTO WHICH THE DATASET TO BE COMPRESSED
** WILL BE COPIED. IF THE COMPRESS IS SUCCESSFUL,
** THIS DATASET WILL BE SCRATCHED AND UNCATALOGED. IF
** THE COMPRESS IS UNSUCCESSFUL (NON-ZERO RETURN CODE
** FROM IEBCOPY) THE DATASET WILL BE RETAINED.
**
** THE NAME OF THE "SAFETY" DATASET IS STRUCTURED AS
** FOLLOWS:
**
**   PREFIX.SYSXXXXX.TYYYYYYY.SAFETY
**
** WHERE:
**   PREFIX   =  THE UPT PREFIX OF THE ISSUER OF THE COMPRESS CMD
**               (NAME SPECIFIED IN SYMBOLIC '&PREFIX' IS USED FOR
**                BATCH INVOCATION OF THE TMP)
**   XXXXX    =  THE CURRENT JULIAN DATE
**   YYYYYYY  =  THE CURRENT TIME OF DAY
**
** VALUES FOR DASD SPACE AND DIRECTORY ALLOCATION ARE OBTAINED
** AS FOLLOWS:
**
**  1. PRIMARY AND SECONDARY SPACE ALLOCATIONS ARE OBTAINED
**     FROM THE DATA EXTENT BLOCK OF THE DATA SET TO BE COMPRESSED
**
**  2. DIRECTORY ALLOCATION IS OBTAINED BY ISSUING A SERIES OF
**     "GETS" AGAINST THE DIRECTORY OF THE DATASET TO BE COMPRESSED
**     AND INCREMENTING A COUNTER UNTIL EOF IS REACHED.
**
** TWO DCBS FOR THE DATASET TO BE COMPRESSED ARE PROVIDED,EVEN
** THOUGH ONLY ONE IS NEEDED. THIS IS TO ALLOW FOR FUTURE EXPANSION
** OF THIS PROGRAM (ADDITIONAL FEATURES TO BE PROVIDED)
**
         EJECT
SAFETY   DS   0H                      SAFETY ROUTINE
         ST   R14,SAVES14             SAVE REGISTER 14      *HMD 07/79*
         TPUT BLANK,BLANKL            PUT OUT LINE OF BLANKS
         MVC  DDOLD,BLANK             CLEAR OLD DDNAME
         MVC  DDNEW,BLANK             CLEAR NEW DDNAME
         STM  R0,R12,SAVESAF          SAVE REGS IN WORK AREA
         STM  R13,R14,SAVE1314        SAVE REGS 13,14 IN AREA
         TPUT MSG18,MSG18L            TELL USER ALLOC IN PROGRESS
         XR   R15,R15                 CLEAR RET CODE REG
         MVC  DDNAMS,OUTDD            SAVE ORIGINAL DDNAME
         CLEAR NEWDSN                 CLEAR NEW DSNAME
         MVC  DSNSAVE(DSNC),DSNCN     MOVE MODEL TO SAVE AREA
         TIME DEC                     GET TIME AND DATE
         STM  R0,R1,TIMEDATE          SAVE THE TIME AND DATE
         OI   TIMEDATE+3,X'0F'        FIX TIME SIGN
         OI   TIMEDATE+7,X'0F'        FIX DATE SIGN
         UNPK DSNSAVE+3(5),TIMEDATE+5(3)     MOVE IN DATE
         UNPK DSNTIME(7),TIMEDATE(4)         MOVE IN TIME
         LA   R3,DSNC                 LOAD LENGTH OF DSNAME
         STH  R3,NEWDSNL              NEW  DSNLEN
         MVC  NEWDSN(DSNC),DSNSAVE    MOVE IN DSNAME
         EJECT
**
**  ALLOCATE SAFETY DATASET
**
ALLSAF   DS   0H                      SAFETY DS ALLOCATION
         LA   R9,DAIRPB               RESTORE DAPB ADDRESS
         LDROP R9
         LUSE DAPB08,R9
         MVC  DA08CD,=X'0008'         INDICATE NEW ALLOCATION
         XC   DA08FLG(6),DA08FLG      CLEAR FLAGS
         LA   R2,NEWDSNL              LOAD DSN BUFFER ADDRESS
         ST   R2,DA08PDSN             STORE IN DAPB
         CLEAR DA08DDN,24             CLEAR DDNAME AREA
         CLEAR DA08BLK,16,TYPE=Z      CLEAR SPACE  AREA
         CLEAR DA08MNM,16             CLEAR MEMBER NAME AREA
         MVC   DA08DSP1(3),NEWCODE    NEW,CATLG,KEEP
         CLEAR DA08ALN,8              CLEAR ATTRIBUTE LIST NAME AREA
         XC    DA08CTL+1(3),DA08CTL+1 CLEAR RESERVED BYTES
         EJECT
**
**  CALCULATE SPACE REQUIRED FOR SAFETY DS
**
CALCSPAC DS    0H                     CALCULATE NEEDED SPACE
         XC    OPENLIST,OPENLIST      CLEAR OPEN LIST
         OI    OPENLIST+4,X'80'       SET VL BIT
         MVC   PODCB+DCBDDNAM-IHADCB(8),DDNAMS MOVE DDNAME
         MVC   EXDCB+DCBDDNAM-IHADCB(8),DDNAMS MOVE DDNAME
         OPEN  (PODCB,INPUT,EXDCB,INPUT),MF=(E,OPENLIST)
         L     R7,EXDCB+DCBDEBAD-IHADCB       LOAD DEB ADDRESS
         LUSE  DEBBASIC,R7            ESTABLISH ADDRESSIBILITY
         XR    R5,R5                  CLEAR COUNTER
         XR    R6,R6                  CLEAR COUNTER
         IC    R6,DEBNMEXT            INSERT NUMBER OF EXTENTS
         LA    R7,32(,R7)             POINT TO DASD SECTION OF DEB
         LDROP R7                     DROP OLD DSECT
         LUSE  DEBDASD,R7             ADDRESSABILITY TO DEBDASD
USAGE    AH    R5,DEBNMTRK            GET NUMBER OF TRKS
         LA    R7,16(,R7)             SIZE OF DEB EXTENT ENTRY
         BCT   R6,USAGE               GET TOTAL # TRKS
*
*  CALCULATE THE SPACE IN BLOCKS BECAUSE THE DEVICE TYPE FOR THE SAFETY
*  DATASET MAY NOT BE THE SAME AS THE PDS TO BE COMPRESSED.
*
         DEVTYPE DDNAMS,DEVAREA       GET DEVICE INFO ABOUT PDS
         SR    R6,R6                  CLEAR R6
         SR    R1,R1                  CLEAR R1
         ICM   R1,3,EXDCB+DCBBLKSI-IHADCB GET PDS BLKSIZE
         L     R7,MAXTRKSZ            GET MAX USABLE TRKSIZE
         DR    R6,R1                  GET #BLKS/TRK
* NOW SHOULD HAVE # OF BLKS PER TRK IN R7.
         SR    R6,R6                  CLEAR REMAINDER FROM R6,
*                                     LEAVE QUOTIENT IN R7.
         MR    R6,R5                  GET # OF BLKS
*
* WE NOW SHOULD HAVE THE # OF BLKS ALLOCATED TO THE PDS IN R7
*
         LR    R5,R7                  MOVE IT TO R5
         ST    R5,DA08PQTY            SAVE IN DAIR PB
         SRL   R5,2                   DIVIDE BY 4
         ST    R5,DA08SQTY            SAVE IN DAIR PB SEC
         XR    R5,R5                  CLEAR COUNTER
         MVC   DA08BLK+2(2),EXDCB+DCBBLKSI-IHADCB SET AVE BLKSZ
GETDIR   GET   PODCB                  GET DIR BLOCK
         LA    R5,1(,R5)              BUMP COUNTER
         B     GETDIR                 GET ANOTHER BLOCK
ENDOFIL  LA    R5,1(,R5)              BUMP COUNTER
         ST    R5,DA08DQTY            STORE IN DAIR PB
         CLOSE (PODCB,,EXDCB),MF=(E,OPENLIST)  CLOSE DCBS
         LDROP R7
         INUSE ,                      BASE REGISTER DISPLAY
         EJECT
**
**  LINK TO DAIR
**
LINKDAIR MVI   DA08CTL,DA08ABKL+DA08UID+DA08RLSE BLKS AND PREFIX USERID
         LA    R1,DAPL                LOAD DAPL ADDRESS
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR            *SRH*
         LTR   R15,R15                TEST RETURN CODE
         BZ    MOVEDDN                OK, MOVE DDNAME
         ST    R15,SAVER15            SAVE RETURN CODE
         TPUT  MSG15,MSG15L           PUT OUT ERROR MSG
         L     R15,SAVER15            LOAD RETURN CODE
         L     R1,DA08DARC            LOAD DYNAMIC ALLOC RET CODE
         BAL   R14,DAIRERR            INDICATE DAIR ERROR
         LA    R15,20                 LOAD SUBROUTINE COMP CODE
*                                                           *HMD 05/82*
         B     RETURNS                GO RETURN TO CALLER
MOVEDDN  MVC   OUTDD(8),DA08DDN       MOVE DDNAME TO ALT DD LIST
         MVC   DDNAMR,DA08DDN         SAVE DDNAME FOR LATER
         EJECT
**
**  ALLOCATE DUMMY FOR SYSPRINT
**
ALOSPD   DS    0H                     ALLOCATE DUMMY SYSPRINT
         MVC   DDOLD(8),SYSPRINT      SAVE ORIGINAL SYSPRINT DD
         XC    DA08FLG(10),DA08FLG    CLEAR DAIR FLAGS
         CLEAR DA08DDN,24             CLEAR DDNAME AREA
         CLEAR DA08MNM,16             CLEAR MEMBER NAME AREA
         MVI   DA08CTL,DA08DMMY       DUMMY DATASET
         XC    DA08CTL+1(4),DA08CTL+1 CLEAR RESERVED BYTES
         XC    DA08BLK(4),DA08BLK     CLEAR BLKSIZE FROM LAST *SRH*
*                                     CALL TO DAIR.           *SRH*
         MVI   DA08DSP1,DA08NEW       NEW DATASET
         XC    DA08DPS2(2),DA08DPS2   CLEAR SECONDARY DISP
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         CALLTSSR EP=IKJDAIR          LINK TO DAIR           *SRH*
         LTR   R15,R15                ZERO RETURN CODE?
         BZ    SAVDDPT                SAVE PRINT DDNAME
         ST    R15,SAVER15            SAVE RETURN CODE
         TPUT  MSG20,MSG20L           PUT OUT MSG
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R1,DA08DARC            LOAD DYNAMIC ALLOC. RET. CODE
         BAL   R14,DAIRERR            PUT OUT SECONDARY MSG
         LA    R15,20                 LOAD SUBROUTINE RTN CODE
*                                                           *HMD 05/82*
         B     RETURNS                RETURN TO CALLER
SAVDDPT  MVC   SYSPRINT(8),DA08DDN    MOVE IN NEW DDNAME
         MVC   DDNEW,DA08DDN          SAVE DDNAME FOR FREE LATER
         CLEAR MSG28D                                       *HMD 05/82*
         LA    R2,MSG28D              POINT TO MSG28D       *HMD 05/82*
         L     R3,CPPLUPT             GET UPT ADDRESS       *HMD 05/82*
         SLR   R1,R1                  CLEAR R1              *HMD 05/82*
         ICM   R1,B'0001',UPTPREFL-UPT(R3)                  *HMD 05/82*
         BNP   SAVDDPT1               AVOID ZERO LENGTH     *HMD 05/82*
         BCTR  R1,0                   DECREMENT FOR EX      *HMD 05/82*
         EX    R1,MVEPREF             MOVE THE PREFIX       *HMD 05/82*
         LA    R2,MSG28D(R1)          POINT TO END OF PREF  *HMD 05/82*
         MVI   1(R2),C'.'             MOVE IN DOT           *HMD 05/82*
         LA    R2,2(,R2)              BUMP POINTER          *HMD 05/82*
SAVDDPT1 MVC   0(DSNC,R2),DSNSAVE     MOVE IN REST OF NAME  *HMD 05/82*
         TPUT  MSG28,MSG28L           PUT OUT THE MESSAGE   *HMD 05/82*
         EJECT
**
**  PREPARE AND ATTACH IEBCOPY FOR SAFETY
**
ATTACHI  DS    0H                     IEBCOPY ATTACH ROUTINE
         XC    TSOECB,TSOECB          CLEAR EVENT CNTL BLK
         LA    R5,TSOECB              LOAD ECB ADDRESS
         LA    R1,VSPARM              LOAD PARM ADDRESS
         ST    R1,TSOUSER+4           STORE IN WORK AREA
         LA    R1,DDNAMES             LOAD DDNAMES ADDRESS
         ST    R1,TSOUSER+8           STORE IN WORK AREA
         MVI   TSOUSER+8,X'80'        SET VL BIT
         LA    R1,TSOUSER+4           LOAD PARM ADDRESS
         ATTACH EP=&COPY,ECB=(5),MF=(E,(1)),SF=(E,ATACHSF)  *HMD 05/82*
         ST    R1,TCB                 SAVE TCB ADDRESS
         WAIT  1,ECB=TSOECB           WAIT ON EVENT
         L     R1,TCB                 GET TCB ADDRESS       *HMD 05/82*
         MVC   COMPCD,16(R1)          MOVE COMPLETION CODE  *HMD 05/82*
         DETACH TCB                   DETACH IEBCOPY        *HMD 05/82*
         L     R15,COMPCD             INSERT RETURN CODE
         EJECT
**
**   RETURN TO CALLER
**
RETURNS  DS    0H                     RETURN TO CALLER
         MVC   OUTDD(8),DDNAMS        RESTORE DDNAME LIST
         MVC   SYSPRINT(8),DDOLD      RESTORE OLD SYSPRINT
         LA    R1,DDNEW               LOAD DUMMY SYSPRINT DDNAME ADDR
         ST    R15,SAVER15            SAFE IEBCOPY RTN. CODE
         BAL   R14,FREEDDN            FREE THIS DDNAME
         LM    R13,R14,SAVE1314       RESTORE REG
         LM    R0,R12,SAVESAF         RELOAD REGS
         L     R15,SAVER15            RESTORE RETURN CODE
         L     R14,SAVES14            RESTORE RETURN REG   *HMD 07/79*
         BR    R14                    RETURN TO CALLER
         EJECT
**
**   RETURN ROUTINES
**
RETURN2  LA    R2,11
RTNLOOP  LR    R3,R2
         BCTR  R3,R0
         SLL   R3,3
         LA    R1,DDNAMLST(R3)
         BAL   R14,FREEDDN
         BCT   R2,RTNLOOP
         LA    R1,DDNAMR                   SAVED DDNAME
         TM    ERRFLG,ERRIND               ERROR IN SAFETY COPY?
         BO    DELETE                      YES, DELETE DS
         CLI   COMPCD,0                    COMPLETION CODE =0?
         BE    DELETE                      YES, DELETE SAFETY
         BAL   R14,FREEDDN                 GO FREE DDNAME BUT KEEP DS
         B     RETURN3                     RETURN TO CALLER
DELETE   OI    ERRFLG,DELIND               SET DELETE INDICATOR
         BAL   R14,FREEDDN                 GO DELETE DATASET
RETURN3  DS    0H                                           *HMD 05/82*
         SLR   R2,R2                       CLEAR REG 2      *HMD 05/82*
         MVC   MSG10C(4),=C'0000'          ASSUME ZERO RC   *HMD 05/82*
         MVC   MSG16C(4),=C'0000'          CLEAR SAFETY CD  *HMD 05/82*
         ICM   R2,B'0111',COMPCD+1         INSERT CODE      *HMD 05/82*
         BZ    COMPC                       NO ERROR, LEAVE  *HMD 05/82*
         CLI   COMPCD,X'00'                ABEND CODE(S)?   *HMD 05/82*
         BNE   RETURN3A                    YES, PROCESS     *HMD 05/82*
         CVD   R2,DTEMP                    CONVERT CODE     *HMD 05/82*
         UNPK  DTEMP(5),DTEMP+5(3)         UNPACK CODE      *HMD 05/82*
         OI    DTEMP+4,C'0'                FIX SIGN         *HMD 05/82*
         MVC   MSG10C(4),DTEMP+1                            *HMD 05/82*
         MVC   MSG16C(4),DTEMP+1                            *HMD 05/82*
         TM    ERRFLG,ERRSAF               IN SAFETY COPY?  *HMD 05/82*
         BZ    COMPC                       NO..COMPRESSING  *HMD 05/82*
         TPUT  MSG16,MSG16L                PUT OUT ERROR MSG*HMD 05/82*
         B     RETURN4                                      *HMD 05/82*
COMPC    DS    0H                                           *HMD 05/82*
         TPUT  MSG10,MSG10L
         B     RETURN4                                      *HMD 05/82*
RETURN3A DS    0H                   PROCESS ABEND CODE      *HMD 05/82*
         LR    R1,R2                LOAD ERROR CODE         *HMD 05/82*
         SRL   R1,12                GET SYSTEM CODE         *HMD 05/82*
         ST    R1,DTEMP+4           SAVE CODE               *HMD 05/82*
         UNPK  DTEMP(6),DTEMP+6(3)  UPACK RET CODE          *HMD 05/82*
         TR    DTEMP(5),HEXTAB-240  CONVERT TO HEX          *HMD 05/82*
         MVC   MSG26S(3),DTEMP+2    MOVE IN CODE            *HMD 05/82*
         MVC   MSG27S(3),DTEMP+2    MOVE IN AGAIN           *HMD 05/82*
         N     R2,=F'4095'          CLEAR HI ORDER          *HMD 05/82*
         XC    DTEMP,DTEMP          CLEAR WORK AREA         *HMD 05/82*
         CVD   R2,DTEMP             CONVERT IT              *HMD 05/82*
         UNPK  DTEMP(5),DTEMP+5(3)  UNPACK IT               *HMD 05/82*
         OI    DTEMP+4,C'0'         FIX SIGN                *HMD 05/82*
         MVC   MSG26U(4),DTEMP+1    MOVE INTO MESSAGE       *HMD 05/82*
         MVC   MSG27U(4),DTEMP+1    MOVE INTO MESSAGE       *HMD 05/82*
         LA    R2,20                PROVIDE RETURN CODE     *HMD 05/82*
         TM    ERRIND,ERRSAF        IN SAFETY MESSAGE?      *HMD 05/82*
         BZ    COMPU                NO..COMPRESS            *HMD 05/82*
         TPUT  MSG26,MSG27L         PUT OUT MESSAGE         *HMD 05/82*
         B     RETURN4              CONTINUE WITH RETURN    *HMD 05/82*
COMPU    DS    0H                                           *HMD 05/82*
         TPUT  MSG27,MSG27L         PUT OUT MESSAGE         *HMD 05/82*
         B     RETURN4              CONTINUE WITHE RETURN   *HMD 05/82*
         SPACE 2                                            *HMD 05/82*
RETURN4  STAX  ,
         ESTAE 0                    REMOVE ESTAE EXIT      *HMD 05/79*
         TM    RESSW,REST           TERMINAL USER?         *HMD 07/79*
         BO    T0006                FORGET PREFIX MOVE     *HMD 07/79*
         L     R3,CPPLUPT           GET UPT ADDRESS        *HMD 07/79*
         MVC   UPTPREFX-UPT(8,R3),SAVEPREF RESTORE PREFIX  *HMD 07/79*
T0006    L     R10,TSOUSER          LOAD STORAGE ADDRESS
         FREEMAIN R,LV=STORLEN,A=(10),SP=3
         TSOLEAVE ISN=LTORG,RETCODE=(2)
         SPACE 2
**   EXECUTED INSTRUCTIONS
MOVE     MVC   0(*-*,R4),0(R2)
COMPARE  CLC   0(*-*,R2),0(R4)
MVEPREF  MVC   0(0,R2),UPTPREFX-UPT(R3)
         SPACE 2
**  ATTN EXIT
STAXEXIT DC    0H'0' ATTN HANDLER
         BR    R14 RETURN TO STAX
         EJECT
**********************************************************************
**           E S T A E   E X I T    R O U T I N E                   **
** THIS ROUTINE WILL RELEASE ANY HELD RESORCE CAUSED BY A RESERVE   **
** BEING REQUESTED, IN CASE OF ABEND OF 'COMPRESS'. ** HMD 05/79**  **
**********************************************************************
ESEXIT   LR    R5,R1         SAVE SDWA ADDR                *HMD 05/79*
         LR    R6,R0         SAVE ENTRY CODE               *HMD 05/79*
         USING ESEXIT,R15    ADDRESS EXIT                  *HMD 05/79*
         C     R6,=F'12'     IF R0 = 12, NO STORAGE FOR SDWA *HMD*
         BE    NOSDWA        NO SDWA, R2 = PARAM ADDR      *HMD 05/79*
         STM   R14,R12,12(R13)  SAVE REGISTERS             *HMD 05/79*
         USING SDWA,R1       ADDRESS SDWA                  *HMD 05/79*
         L     R10,SDWAPARM  GET PARM ADDRESS              *HMD 05/79*
         LM    R10,R12,0(R10)    LOAD BASE REGS            *HMD 05/79*
         B     EXITMAIN      PERFORM EXIT PROCESSING       *HMD 05/79*
         DROP  R1            NO NEED FOR BASE NOW          *HMD 05/79*
NOSDWA   LM    R10,R12,0(R2) R2 = ADDR OF PARM LIST        *HMD 05/79*
         DROP  R15
EXITMAIN TM    RESSW,RESI    WAS RESERVE ISSUED?           *HMD 05/79*
         BNO   SETRPX        NO, NORMAL TERMINATION        *HMD 05/79*
         LH    R3,ENQLEN     LOAD ENQ LENGTH FOR DEQ       *HMD 05/79*
         DEQ   (QNAME,DSNHOLD,(3),SYSTEMS),RET=HAVE,       *HMD 05/79* X
               UCB=UCBADD,MF=(E,ENQLST)   FREE RESOURCE    *HMD 05/79*
         NI    RESSW,255-RESO INDICATE RESERVE RELEASED    *HMD 05/79*
SETRPX   C     R6,=F'12'      WAS SDWA PASSED?             *HMD 05/79*
         BE    ESTAER         RETURN WITH NO SETRP         *HMD 05/79*
         SETRP WKAREA=(5),REGS=(14,12),                    *HMD 05/79* X
               DUMP=NO,RC=0                                *HMD 05/79*
ESTAER   XR    R15,R15          RETURN CODE=0              *HMD 05/79*
         BR    R14              RETURN TO CONTROL PROG     *HMD 05/79*
         LTORG ,                PLACE LITERALS HERE        *HMD 07/79*
         EJECT
**
** OUTPUT DATA SET 'DSNAME' --- MESSAGE
** R1 = ADDR OF LAST PART, R14 = RETURN ADDR, R9 = ADDR OF DAPB
**
OUTMSG   ST    R14,SAVER14 SAVE RETURN ADDR
         LA    R4,MSG02C
         TM    DA08CTL,DA08UID     TEST FOR QUOTES
         BO    NOQOUTE1
         MVI   0(R4),C'''' MOVE QUOTE
         LA    R4,1(R4)
NOQOUTE1 L     R3,DA08PDSN LOAD ADDR OF DATA SET NAME
         LA    R2,2(R3)
         LH    R3,0(R3) LOAD LENGTH OF DSNAME
         BCTR  R3,R0 FOR MVC
         EX    R3,MOVE DSNAME
         LA    R4,1(R3,R4)
         TM    DA08CTL,DA08UID     TEST FOR QUOTE
         BO    NOQUOTE2
         MVI   0(R4),C'''' MOVE QUOTE
         LA    R4,1(R4)
NOQUOTE2 MVI   0(R4),C' '
         LA    R4,1(R4)
         LH    R3,0(R1)
         BCTR  R3,R0
         LA    R2,2(R1)
         EX    R3,MOVE
         LA    R4,1(R3,R4)
         LA    R2,MSG02
         SR    R4,R2
         TPUT  MSG02,(R4) OUTPUT MSG
         L     R14,SAVER14
         BR    R14
         EJECT
**
** FREE DDNAME SECTION
**
** R1=ADDR OF DDNAME, R14=RETURN ADDR
** OUTSWT=00 -- NO SYSOUT, OUTSWT=FF SYSOUT=A DATA SET
**
         LDROP R9
         LUSE  DAPB18,R9
FREEDDN  STM   R2,R9,FREESV29
         ST    R14,FREESV14
         LA    R9,DAIRPB
         MVC   DA18CD,=X'0018'
         XC    DA18FLG(10),DA18FLG
         MVC   DA18DDN,0(R1) MOVE DDNAME
         MVC   DA18MNM,BLANK MEMBER NAME
         MVC   DA18SCLS,BLANK SYSOUT CLASS
FREEX2   TM    ERRFLG,DELIND       IS DELETTION REQUESTED
         BZ    NODEL               NO, DON'T DELETE DS
         MVI   DA18DPS2,DA18DEL    YES, DELETE DATASET
         B     AROUND              BRANCH AROUND CODE
NODEL    MVI   DA18DPS2,DA18KEEP   MOVE IN KEEP CODE
AROUND   MVI   DA18CTL,DA18PERM    FREE PERMANENT ALLOCATIONS
         MVC   DA18JBNM,BLANK
         XC    TSOECB,TSOECB
         LA    R1,DAPL
         CALLTSSR EP=IKJDAIR        LINK TO DAIR             *SRH*
         LM    R2,R9,FREESV29
         L     R14,FREESV14
         BR    R14 RETURN
**
** END OF FREEDDN SECTION
**
         INUSE ,
         EJECT
**
** THIS SECTION CHECKS THE CODE RETURNED FROM DAIR AND OUTPUT THE
** MESSAGE CORRESPONDING TO THE TYPE. REG 1=DARC& CTRC, REG 14=RETURN
** ADDR, AND REG 15=RC FROM DAIR
**
DAIRERR  ST    R14,DAIRERRN SAVE RETURN ADDR
         STM   R2,R5,DAIRERRO
         B     DAIRERR1(R15)
DAIRERR1 B     DAIRERRG RC=0 DAIR IS O.K. -- RETURN
         B     DAIRERR5 RC=4 PARM LIST WAS INVALID
         B     DAIRERR2 RC=8 ERROR IN CATALOG MANAGEMENT
         B     DAIRERR3 RC=12 ERROR IN DYNAMIC ALLOCATION
         B     DAIRERR4 RC=16 NO TIOT ENTRIES
         B     DAIRERR5 RC=20 DDNAME IS UNAVAILABLE
         B     DAIRERR5 RC=24 DSNAME IS MEMBER OF CONCATENATED GROUP
         B     DAIRERR5 RC=28 DDNAME OR DSNAME NOT CURRENTLY ALLOCATED
         B     DAIRERR5 RC=32 DISP=NEW CANNOT BE SPECIFIED
         B     DAIRERR5 RC=36 ERROR IN CATALOG INFORMATION ROUTINE
         B     DAIRERR5 RC=40 RETURN AREA FOR QUALIFIERS TOO SMALL
         B     DAIRERR5 RC=44 DISP=OLD, MOD, OR SHR WITH NO VOL-SER NO.
DAIRERR2 LR    R2,R1  (RC=8)
DAIRER21 SRDL  R2,16
         SRL   R3,16
         CVD   R3,DAIRERRM
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   DAIRERRQ,DAIRERRM+1
         TPUT  DAIRERRP,DAIRERRR
         B     DAIRERRG
DAIRERR3 SRL   R1,16 (RC=12)  SHIFT OUT CTRC
         LR    R2,R1
         LA    R5,4
DAIRER31 SRDL  R2,4
         SRL   R3,28
         IC    R1,DAIRTAB(R3)
         STC   R1,DAIRERRT-1(R5)
         BCT   R5,DAIRER31
         TPUT  DAIRERRS,DAIRERRU
         B     DAIRERRG
DAIRERR4 TPUT  DAIRERRV,DAIRERRW (RC=16)
         B     DAIRERRG
DAIRERR5 CVD   R15,DAIRERRM (RC=4,20,24,28,32,36,40,44)
         UNPK  DAIRERRM(3),DAIRERRM+6(2)
         OI    DAIRERRM+2,X'F0'
         MVC   DAIRERRY,DAIRERRM+1
         TPUT  DAIRERRX,DAIRERRZ
DAIRERRG LM    R2,R5,DAIRERRO
         L     R14,DAIRERRN
         BR    R14
**
** END OF DAIR ERROR PROCESSING
**
         EJECT
**********************************************************************
**  THE FOLLOWING SUBROUTINE WILL ISSUE A PUTLINE FOR TERMINAL      **
**  MESSAGES, SO THAT 'COMPRESS' CAN BE RUN UNDER THE TMP IN BATCH  **
**  MODE. PRINT(*) PRINT IS DIRECTED TO MESSAGE CLASS IN THAT CASE. **
**                                                                  **
**  INPUT  -  R1 = ADDRESS OF MESSAGE TO BE SENT                    **
**            R0 = LENGTH  OF MESSAGE TO BE SENT                    **
** H. DEAN 07/79                                                    **
**********************************************************************
PUTLINE  DS    0H                 PUTLINE SUBROUTINE        *HMD 07/79*
         STM   R0,R15,SAVEPUT     SAVE REGISTERS            *HMD 07/79*
         LR    R2,R0              SAVE LENGTH IN R2         *HMD 07/79*
         LA    R0,4(R2)           BUMP LENGTH BY 4 FOR OLD  *HMD 07/79*
         SLL   R0,16              MOVE TO HIGH ORDER        *HMD 07/79*
         ST    R0,OUTLINEL        SAVE LENGTH IN AREA       *HMD 07/79*
         BCTR  R2,0               BUMP DOWN FOR EXECUTE     *HMD 07/79*
         XC    TSOECB,TSOECB      GET READY FOR PUTLINE     *HMD 07/79*
         EX    R2,MOVEMSG         MOVE MESSAGE TO AREA      *HMD 07/79*
         PUTLINE PARM=PTPB,MF=(E,IOPL),                     *HMD 07/79*X
               OUTPUT=(OUTLINEL,SINGLE,DATA),               *HMD 07/79*X
               TERMPUT=(EDIT,WAIT,HOLD)                     *HMD 07/79*
         LM    R0,R15,SAVEPUT     RESTORE REGISTERS         *HMD 07/79*
         BR    R14                RETURN  TO CALLER         *HMD 07/79*
MOVEMSG  MVC   OUTLINE(0),0(R1)   MOVE MESSAGE TO AREA      *HMD 07/79*
         EJECT
**
**   MESSAGE CONSTANT AREA
**
DAIRERRA DC    C'CATALOG MANAGEMENT ERROR CODE '
DAIRLTH  EQU   *-DAIRERRA
DAIRERRB DC    C'DYNAMIC ALLOCATION ERROR CODE '
DAIRLTG  EQU   *-DAIRERRB
DAIRERRC DC    C'UNABLE TO ALLOCATE, MAXIMUM NUMBER OF ALLOCATIONS EXCEX
               EDED'
DAIRLTF  EQU   *-DAIRERRC
DAIRERRD DC    C'ERROR RETURNED FROM DYNAMIC ALLOCATION CODE '
DAIRLTE  EQU   *-DAIRERRD
DAIRTAB  DC    C'0123456789ABCDEF'
**
** ERROR MESSAGES FOR TPUT
**
MSG0A    DC    C'ERROR INDICATED FROM PARSE -- CODE='
MSG01Z   EQU   *-MSG0A
MSG0B    DC    C'DATA SET '
MSG02Y   EQU   *-MSG0B
MSG03    DC    Y(MSG03L),C'NOT IN CATALOG'
MSG03L   EQU   *-MSG03-2
MSG04    DC    Y(MSG04L),C'NOT ALLOCATED'
MSG04L   EQU   *-MSG04-2
MSG05    DC    Y(MSG05L),C'NOT PARTITIONED - COMPRESS ENDED'
MSG05L   EQU   *-MSG05-2
MSG05A   DC    Y(MSG05AL),C'EXISTS AT A LOWER LEVEL'
MSG05AL  EQU   *-MSG05A-2
MSG05C   DC    Y(MSG05CL),C'NOT ON VOLUME AS SPECIFIED OR INDICATED IN X
               THE CATALOG'                                 *HMD 10/79*
MSG05CL  EQU   *-MSG05C-2
MSG06    DC    C'SYSPRINT DATA SET NOT ALLOCATED TO TERMINAL'
MSG06L   EQU   *-MSG06
MSG06A   DC    C'TERMINAL OUTPUT ALLOCATION TO MESSAGE CLASS FAILED'
MSG06AL  EQU   *-MSG06A                                     *HMD 07/79*
MSG07    DC    Y(MSG07L),C'PARTITIONED -- NO MEMBER NAME SPECIFIED'
MSG07L   EQU   *-MSG07-2
MSG08    DC    C'UTILITY DATA SET NOT ALLOCATED'
MSG08L   EQU   *-MSG08
MSG09    DC    C'SYSIN (DUMMY) DATA SET NOT ALLOCATED'
MSG09L   EQU   *-MSG09
MSG10A   DC    C'COMPRESS IS COMPLETE -- HIGHEST SEVERITY CODE IS '
MSG10X   EQU   *-MSG10A
MSG13    DC    C'SYSPRINT (DUMMY) NOT ALLOCATED'
MSG13L   EQU   *-MSG13
MSG15    DC    C'SAFETY DATASET ALLOCATION FAILED -'
MSG15L   EQU   *-MSG15
MSG16A   DC    C'SAFETY COPY ERROR - RETURN CODE IS '
MSG16AL  EQU   *-MSG16A
MSG17    DC    C'SAFETY COPY COMPLETE - RETURN CODE IS 0000'
MSG17L   EQU   *-MSG17                                      *HMD 05/82*
MSG18    DC    C'SAFETY DATASET COPY IN PROGRESS'
MSG18L   EQU   *-MSG18
MSG19    DC    C'COMPRESS VER 6.1-(SYNTEX HMD-&DXT)-"PDS COMPRESSOR"'
*                                                           *HMD 01/85*
MSG19L   EQU   *-MSG19
MSG20    DC    C'SAFETY PRINT FILE (DUMMY) NOT ALLOCATED'
MSG20L   EQU   *-MSG20
MSG21    DC    C'DATA SET IN USE - CANNOT BE ALLOCATED OLD'      *HMD*
MSG21L   EQU   *-MSG21
MSG22    DC    C'ANOTHER USER HAS EXCLUSIVE CONTROL OF DATA SET' *HMD*
MSG22L   EQU   *-MSG22
MSG23    DC    C'PRINT(*) AND RESERVE ARE MUTUALLY EXCLUSIVE'    *HMD*
MSG23L   EQU   *-MSG23
MSG24    DC    C'NOPRINT HAS BEEN USED INSTEAD '                 *HMD*
MSG24L   EQU   *-MSG24
MSG25    DC    C'TERMINAL OUTPUT WILL BE DIRECTED TO MESSAGE CLASS'
MSG25L   EQU   *-MSG25                                      *HMD 07/79*
MSG26A   DC    C'SAFETY COPY ABEND - SYSTEM=XXX USER=XXXX'  *HMD 05/82*
MSG26X   EQU   *-MSG26A                                     *HMD 05/82*
MSG27A   DC    C'COMPRESS ABEND - SYSTEM=XXX USER=XXXX'     *HMD 05/82*
MSG27X   EQU   *-MSG27A                                     *HMD 05/82*
MSG28A   DC    C'GENERATED DATASET NAME - '                 *HMD 05/82*
MSG28X   EQU   *-MSG28A                                     *HMD 05/82*
ATTNMSG  DC    C'YOU CANNOT INTERRUPT ''COMPRESS'''
ATTNMSGL EQU   *-ATTNMSG
MSGTIOT  DC    C'ERROR IN LOCATING DD ENTRY IN TIOT - COMPRESS ENDED'
MSGTIOTL EQU   *-MSGTIOT
         EJECT
**
**   MISC CONSTANTS
**
HEXTAB   DC    C'0123456789ABCDEF' HEX CONVERT TABLE        *HMD 05/82*
PRNTBLK  DC    F'3509'             PRINT BLOCKSIZE
BLANK    DC    CL8' '              SPACES FOR MVC
BLANKL   EQU   L'BLANK             LENGTH OF BLANK AREA
DAIR020C DC    X'020C'             DAIR ERROR CODE = 020C  *HMD 05/79*
DAIR0210 DC    X'0210'             DAIR ERROR CODE = 0210  *HMD 05/79*
DAIR6708 DC    X'6708'             DAIR ERROR CODE = 6708  *HMD 10/79*
APPLPARM DC    A(PPLPARM)          PARSE LIST ADDRESS
SYSUTA   DC    Y(SYSUTXL)
         DC    X'50' AMPERSAND
         DC    C'SYSUT'
SYSUTXB  DC    C'4'
         EJECT
**
**  CONSTANTS FOR SAFETY
**
DSNCN    DC    C'SYSXXXXX.TXXXXXXX.SAFETY'
DSNC     EQU   *-DSNCN
TEMPCODE DC    X'040404'              NEW,DELETE,DELETE
NEWCODE  DC    X'040208'              NEW,CATLG,KEEP
NEWKEEP  DC    X'040808'              NEW,KEEP,KEEP         *HMD 07/79*
SHRCODE  DC    X'080808'              SHR,KEEP,KEEP
OLDCODE  DC    X'010808'              OLD,KEEP,KEEP
         EJECT
ADCB     DCB   DSORG=PS,BLKSIZE=256,LRECL=256,RECFM=F,EODAD=ENDOFIL,   &
               DDNAME=X,MACRF=(GL)
ADCBL    EQU   *-ADCB
         EJECT
BDCB     DCB   DSORG=PO,DDNAME=X,MACRF=(R),EODAD=ENDOFIL
BDCBL    EQU   *-BDCB
         EJECT
**
** PARSE PARM LIST
**
PPLPARM  IKJPARM DSECT=PDL
PPLDSNAM IKJPOSIT DSNAME,PROMPT='DATA SET NAME+',HELP=('NAME OF PARTITI*
               ONED DATA SET TO BE COMPRESSED+','NAME OF PARTITIONED DA*
               TA SET TO REMOVE UNUSED SPACE')
PRNTKYWD IKJKEYWD
         IKJNAME 'NOPRINT'
         IKJNAME 'PRINT',SUBFLD=PRNTSUBF
SAFEKW   IKJKEYWD DEFAULT='SAFETY'         DEFINE SAFETY KEYWORD
         IKJNAME  'NOSAFETY'               SAFETY BYPASS
         IKJNAME  'SAFETY'                 TURN ON SAFETY
DISPKW   IKJKEYWD DEFAULT='SHR'            DEFAULT TO "SHR"
         IKJNAME  'OLD'                    OLD KEYWORD     *HMD 04/79*
         IKJNAME  'SHR'                    SHR KEYWORD     *HMD 04/79*
RESERVE  IKJKEYWD DEFAULT='NORESERVE'      DEFAULT NORES   *HMD 04/79*
         IKJNAME  'RESERVE'                RESERVE PACK    *HMD 04/79*
         IKJNAME  'NORESERVE'              DO NOT RESERVE  *HMD 04/79*
VOLUME   IKJKEYWD  ,                       VOLUME OF D/S   *HMD 10/79*
         IKJNAME  'VOLUME',SUBFLD=VOLSUBF  VOLUME OF D/S   *HMD 10/79*
UNIT     IKJKEYWD  DEFAULT='UNIT(&UDEF)'   UNIT TYPE       *HMD 10/79*
         IKJNAME  'UNIT',SUBFLD=UNITSUBF   UNIT TYPE       *HMD 10/79*
PRNTSUBF IKJSUBF
PRNTDSNA IKJPOSIT DSTHING,PROMPT='DATA SET NAME OR * FOR PRINT+',      *
               HELP=('NAME OF DATA SET TO CONTAIN IEBCOPY MESSAGES+',  *
               '* TO DIRECT IEBCOPY MESSAGES TO TERMINAL OR DATA SET NA*
               ME+','NAME OF SEQUENTIAL DATA SET OR * TO DIRECT OUTPUT *
               TO TERMINAL')
UNITSUBF IKJSUBF
UNITTYP  IKJIDENT 'UNIT TYPE',FIRST=ALPHANUM,DEFAULT='&UDEF',          X
               OTHER=ALPHANUM,MAXLNTH=8
VOLSUBF  IKJSUBF
VOLSERY  IKJIDENT 'VOLUME SERIAL',FIRST=ALPHANUM,OTHER=ALPHANUM,       X
               MAXLNTH=6,                                              X
               PROMPT='THE NAME OF THE VOLUME ON WHICH THE DATA SET TO X
               BE COMPRESSED RESIDES+',HELP=('A ONE TO SIX CHARACTER VOX
               LUME NAME+','ATTENTION AND OMIT THE ''VOLUME'' KEYWORD TX
               E NEXT TIME THIS COMMAND IS INVOKED')
         IKJENDP
         LTORG
         EJECT
**
** SAVE AREA, CONSTANTS, ETC.
**
SAVDSC   DSECT                     STORAGE DSECT            *HMD 07/77*
AREA     EQU   *                   BEGINNING OF STORAGE AREA
DTEMP    DS    D
ESSAVE   DS    3F                  SAVE AREA FOR ESTAE      *HMD 05/79*
TCB      DS    F
DAIRPB   DS    20F
SAVER14  DS    F
SAVES14  DS    F
COMPCD   DS    F
FREESV14 DS    F
         DS    0F
VSPARM   DS    H
DDNAMES  DS    H
DDNAMLST DS    22F
DDNAML   EQU   (L'DDNAMLST)*2
SYSIN    EQU   DDNAMLST+(4*DDNAML)
SYSPRINT EQU   DDNAMLST+(5*DDNAML)
INDD     EQU   DDNAMLST+(7*DDNAML)
OUTDD    EQU   DDNAMLST+(8*DDNAML)
SYSUT3   EQU   DDNAMLST+(9*DDNAML)
SYSUT4   EQU   DDNAMLST+(10*DDNAML)
FREESV29 DS    8F
SAVER15  DS    F
UCBADD   DS    F              UCB ADDRESS FOR RESERVE        @HMD78184
QNAME    DS    CL8            QUEUE NAME FOR RESERVE         @HMD78184
DSNLEN   DS    H
DSNAME   DS    CL44
ENQLEN   DS    H          LENGTH OF RNAME                    @HMD78186
DSNHOLD  DS    CL44       HOLD AREA FOR FULLY QUALIFIED NAME @HMD78185
RESSW    DS    X          SWITCH FOR RESERVE OR NORESERVE   *HMD 04/79*
RESI     EQU   X'80'      RESERVE HAS BEEN REQUESTED        *HMD 05/79*
RESO     EQU   X'40'      RESERVE HAS BEEN ISSUED           *HMD 05/79*
RESB     EQU   X'20'      PRINT OPTION CHANGED DUE TO RESERVE *HMD*
REST     EQU   X'10'      USER IS RUNNING TMP UNDER TERMINAL*HMD 07/79*
TIMEDATE DS    D                      TIME AND DATE
SAVEPREF DS    CL8                    SAVE AREA FOR PREFIX  *HMD 07/79*
NEWDSNL  DS    H
NEWDSN   DS    CL44                   DATASET NAME
DSNSAVE  DS    CL(DSNC)               SAVE AREA TO BUILD DSNAME
DSNTIME  EQU   DSNSAVE+10             TO INSERT TIME
DDNAMS   DS    CL8                    DDNAME SAVE AREA
DDOLD    DS    CL8                     OLD SYSPRINT DDNAME
DDNEW    DS    CL8                     NEW SYSPRINT DDNAME
DDNAMR   DS    CL8                    DDNAME SAVE AREA
SAVESAF  DS    13F                    REGISTER SAVE AREA
SAVE1314 DS    2F                     REG 13,14 SAVE AREA
SAVEPUT  DS    16F                    PUTLINE SAVE AREA     *HMD 07/79*
ERRFLG   DS    X                      ERROR INDICATOR
ERRIND   EQU   X'80'                  ERROR HAS OCCURED IN "SAFETY"
DELIND   EQU   X'40'                  DELETE SAFETY DATASET
ERRSAF   EQU   X'20'                  SAFETY IN PROGRESS    *HMD 05/82*
ERRSAFO  EQU   X'FF'-ERRSAF           TURN OFF SAFETY BIT   *HMD 05/82*
PODCB    DS    0F                     ALIGN TO FULLWORD
         DS    CL(ADCBL)              DIRECTORY DCB
EXDCB    DS    0F                     ALIGN TO FULLWORD
         DS    CL(ADCBL)              DATASET DCB
OPENLIST DS    2A                     OPEN PARAMETER LIST
DEVAREA  DS    0F                     *DEVTYPE MACRO AREA*
UCBTYP   DS    F                      TYPE FIELD FROM UCB
MAXTRKSZ DS    F                      MAXIMUM USABLE TRKSIZE
         EJECT
**
**   LIST FORM MACRO INSTRUCTIONS
**
STAXLIST STAX  STAXEXIT,MF=L
ENQLST   RESERVE (QNAME,DSNHOLD,E,44,SYSTEMS),UCB=UCBADD,MF=L HMD78185
EXTRA    EXTRACT MF=L                                        @HMD78185
ATACHSF  ATTACH EP=&COPY,SF=L                               *SRH*
ESLIST   ESTAE  ,PARAM=0,MF=L                               *HMD 05/79*
PTPB     PUTLINE OUTPUT=0,MF=L        PUTLINE LIST FORM     *HMD 07/79*
LSTFRML  EQU    *-STAXLIST
         EJECT
**
** DYNAMIC MESSAGE AREA
**
DAIRERRM DS    D
DAIRERRN DS    F             SAVE R14
DAIRERRO DS    4F            SAVE R2 THRU R5
DAIRERRP DS    CL(DAIRLTH)   CATALOG ERROR MESSAGE
DAIRERRQ DS    CL2           AND RETURN CODE
DAIRERRR EQU   *-DAIRERRP    LENGTH OF MESSAGE FIELD
DAIRERRS DS    CL(DAIRLTG)   DYNAMIC ALLOCATION ERROR MSG
DAIRERRT DS    CL4           AND RETURN CODE
DAIRERRU EQU   *-DAIRERRS    LENGTH OF MESSAGE FIELD
DAIRERRV DS    CL(DAIRLTF)   ALLOCATION EXHAUSTED MSG
DAIRERRW EQU   *-DAIRERRV    LENGTH OF MESSAGE FIELD
DAIRERRX DS    CL(DAIRLTE)   DYNAMIC ALLOCATION ERROR MSG
DAIRERRY DS    CL2           AND RETURN CODE
DAIRERRZ EQU   *-DAIRERRX    LENGTH OF MESSAGE FIELD
SYSUTX   DS    H             LENGTH OF "SYSUT" DD NAME
         DS    X,CL5         ENTRY STORAGE AREA
SYSUTXNO DS    X             SYSUT NUMBER
SYSUTXL  EQU   *-SYSUTX-2    LENGTH OF DDNAME
MSG01    DS    CL(MSG01Z)    PARSE ERROR MSG
MSG01C   DS    CL2           AND RETURN CODE
MSG01L   EQU   *-MSG01       LENGTH OF MESSAGE
MSG02    DS    CL(MSG02Y)    DATA SET MESSAGE
MSG02C   DS    CL120         OUTPUT AREA
MSG10    DS    CL(MSG10X)    END OF JOB MESSAGE
MSG10C   DS    CL4           RETURN CODE
MSG10L   EQU   *-MSG10       LENGTH OF MESSAGE
MSG16    DS    CL(MSG16AL)   SAFETY COPY MESSAGE
MSG16C   DS    CL4
MSG16L   EQU   *-MSG16
MSG26    DS    CL(MSG26X)    SAFETY COPY ABEND MESSAGE      *HMD 05/82*
MSG26L   EQU   *-MSG26       LENGTH OF MESSAGE              *HMD 05/82*
MSG26S   EQU   MSG26+27      SYSTEM ABEND CODE AREA         *HMD 05/82*
MSG26U   EQU   MSG26+36      USER   ABEND CODE AREA         *HMD 05/82*
MSG27    DS    CL(MSG27X)    COMPRESS ABEND MESSAGE         *HMD 05/82*
MSG27L   EQU   *-MSG27       LENGTH OF MESSAGE              *HMD 05/82*
MSG27S   EQU   MSG27+24      SYSTEM ABEND CODE AREA         *HMD 05/82*
MSG27U   EQU   MSG27+33      USER ABEND CODE AREA           *HMD 05/82*
MSG28    DS    CL(MSG28X)    SAFETY DSNAME MESSAGE          *HMD 05/82*
MSG28D   DS    CL44          SAFETY DATASET NAME AREA       *HMD 05/82*
MSG28L   EQU   *-MSG28       LENGTH OF MESSAGE              *HMD 05/82*
OUTLINEL DS    F             OUTPUT LINE LENGTH             *HMD 07/79*
OUTLINE  DS    CL80          OUTPUT BUFFER                  *HMD 07/79*
STORLEN  EQU   (((*-AREA)+7)/8)*8     LENGTH OF STORAGE AREA
         EJECT
**
** MAPPING DSECTS
**
         IKJDAP08
         EJECT
         IKJDAP18
         EJECT
         IKJDAP1C
         EJECT
         IKJDAP30
         EJECT
         IKJUPT
         EJECT
         DCBD   DSORG=PO,DEVD=DA
         EJECT
         IEZDEB LIST=YES
         EJECT
         IHASDWA
         EJECT
         CVT    LIST=YES,DSECT=YES
         END   GSFTSOCM
