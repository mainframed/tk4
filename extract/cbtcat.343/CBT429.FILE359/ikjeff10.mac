***********************************************************************
***********************************************************************
***                                                                 ***
***  JOB STATEMENT VERIFICATION - TSO SUBMIT EXIT IKJEFF10          ***
***                                                                 ***
***  DOCUMENTATION ON THE FOLLOWING SUBMIT EXIT CAN BE FOUND IN     ***
***  IBM PUBLICATION "RACF RELEASE 1.7 USAGE GUIDE", INTERNATIONAL  ***
***  TECHNICAL SUPPORT CENTERS, GG24-3069-0, P.63-70, AND APPENDIX  ***
***  C, "SAMPLE CODING", PAGES 110-138.                             ***
***                                                                 ***
***  ==> THIS CODE HAS NOT BEEN SUBMITTED TO ANY FORMAL IBM TEST    ***
***      AND IS DISTRIBUTED ON AN "AS IS" BASIS WITHOUT ANY         ***
***      WARRANTY EITHER EXPRESS OR IMPLIED. THE IMPLEMENTATION     ***
***      OF ANY OF THE TECHNIQUES DESCRIBED OR USED HEREIN IS A     ***
***      CUSTOMER RESPONSIBILITY AND DEPENDS ON THE CUSTOMER'S      ***
***      OPERATIONAL ENVIRONMENT. WHILE EACH ITEM MAY HAVE BEEN     ***
***      REVIEWED FOR ACCURACY IN A SPECIFIC SITUATION AND MAY      ***
***      RUN IN A SPECIFIC ENVIRONMENT, THERE IS NO GUARANTEE       ***
***      THAT THE SAME OR SIMILAR RESULTS WILL BE OBTAINED ELSE-    ***
***      WHERE. CUSTOMERS ATTEMPTING TO ADAPT THESE TECHNIQUES TO   ***
***      THEIR OWN ENVIRONMENTS DO SO AT THEIR OWN RISK.            ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         MACRO
&NAME    REGI  &BIT=YES,&FLOAT=NO
         GBLA  &IEZBITS
*
***********************************************************************
*                                                                     *
*         REGISTER AND BIT EQUATES                                    *
*                                                                     *
*         REGI  BIT=NO     REGISTER EQUATES ONLY                      *
*         REGI  FLOAT=YES  FLOATING POINT REGISTERS TOO               *
*                                                                     *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         AIF   ('&FLOAT' NE 'YES').BITS
*
F0       EQU   0                   FLOATING POINT REGISTER 0
F2       EQU   2                   FLOATING POINT REGISTER 2
F4       EQU   4                   FLOATING POINT REGISTER 4
F6       EQU   6                   FLOATING POINT REGISTER 6
.BITS    ANOP
         AIF   ('&BIT' NE 'YES').END
         AIF   (&IEZBITS EQ 0).SETSW
         MEXIT
.SETSW   ANOP
&IEZBITS SETA  1
*
BIT0     EQU   X'80'
BIT1     EQU   X'40'
BIT2     EQU   X'20'
BIT3     EQU   X'10'
BIT4     EQU   X'08'
BIT5     EQU   X'04'
BIT6     EQU   X'02'
BIT7     EQU   X'01'
.END     ANOP
         MEND
IKJEFF10 TITLE 'TSO SUBMIT COMMAND INSTALLATION EXIT'
         PRINT OFF
***********************************************************************
***********************************************************************
***                                                                 ***
***      CONDITIONAL ASSEMBLY CODE TO RESOLVE THE PARAMETERS IN     ***
***      THE 'SYSPARM' STRING SPECIFIED IN THE // EXEC JCL STATE-   ***
***      MENT. POSSIBLE PARAMETERS ARE:                             ***
***                                                                 ***
***      USRI=YES×NO,PSWP=YES×NO,NOTF=YES×NO                        ***
***                                                                 ***
***      DEFAULT:  USRI=NO,PSWP=NO,NOTF=YES                         ***
***                                                                 ***
***      MEANING:                                                   ***
***                                                                 ***
***      USRI=YES: INSERT SUBMITTER'S USERID AND PASSWORD (FROM     ***
***                THE TSB) IF THE 'USER=' PARAMETER IS OMITTED     ***
***                FROM THE JOBCARD. SHOULD BE SPECIFIED ONLY       ***
***                IF JES SUPPORT FOR USERID AND PASSWORD           ***
***                PROPAGATION IS NOT INSTALLED.                    ***
***      USRI=NO : SUBMIT JOB WITHOUT USERID IF 'USER=' PARAMETER   ***
***                OMITTED FROM JOBCARD. SHOULD BE SPECIFIED ON     ***
***                SYSTEMS WITH JES2/3 VERSION 1.3.4 AND ABOVE      ***
***                WITH USERID AND PASSWORD PROPAGATION             ***
***                SUPPORT INSTALLED.                               ***
***                DEFAULT: USRI=NO                                 ***
***                                                                 ***
***      PSWP=YES: ALWAYS PROMPT FOR A PASSWORD IF SUBMITTER'S      ***
***                USERID AND THE 'USER=' PARAMETER ARE UNEQUAL,    ***
***                EVEN IF A 'PASSWORD=' PARAMETER HAS BEEN SPE-    ***
***                CIFIED IN THE JOBCARD. THIS IS FOR INSTALLATIONS ***
***                WHO WANT TO DISCOURAGE THE USE OF PASSWORDS      ***
***                IN THEIR USERS' JCL LIBRARIES.                   ***
***      PSWP=NO : PROMPT FOR A PASSWORD ONLY IF A 'PASSWORD='      ***
***                PARAMETER IS NOT IN THE JOBCARD.                 ***
***                DEFAULT: PSWP=NO                                 ***
***                                                                 ***
***      NOTF=YES: INSERT 'NOTIFY=' PARAMETER IN JOBCARD IF OMITTED ***
***      NOTF=NO : DON'T INSERT 'NOTIFY=' PARAMETER.                ***
***                DEFAULT: NOTF=YES                                ***
***                                                                 ***
***********************************************************************
***********************************************************************
         LCLA  &L,&I,&J,&N,&COUNT,&LAST
         LCLC  &USRIP,&PSWPP,&NOTFP,&MIST
         LCLB  &HUSRI,&HPSWP,&HNOTF
         LCLB  &USRI,&PSWP,&NOTF
&HUSRI   SETB  0
&HPSWP   SETB  0
&HNOTF   SETB  0
&USRI    SETB  0
&PSWP    SETB  0
&NOTF    SETB  1
&COUNT   SETA  1
&L       SETA  K'&SYSPARM          LENGTH OF SYSPARM STRING
&LAST    SETA  &L                  POS. OF LAST CHAR. IN SYSPARM
&I       SETA  1                   START OF PARAMETER TO BE CHECKED
         AIF   (&L EQ 0).NOPARM    SYSPARM NOT SPECIFIED IN EXEC STMT.
.CHKPSWP ANOP
         AIF   (&HPSWP).CHKUSRI    'PSWP=' ALREADY FOUND, BYPASS
         AIF   (&L LT 7).CHKUSRI   MUST BE AT LEAST 'PSWI=NO'
         AIF   ('&SYSPARM'(&I,5) NE 'PSWP=').CHKUSRI
&I       SETA  &I+5                INDEX TO PSWP PARAMETER VALUE
&L       SETA  &L-5                REMAINING PARAMETER LENGTH
&J       SETA  &I                  CHARACTER INDEX
.LP1     AIF   (&L EQ 0).COM1      END OF SYSPARM STRING
         AIF   ('&SYSPARM'(&J,1) EQ ',').COM1  DELIM. FOUND
&J       SETA  &J+1                BUMP CHARACTER INDEX
         AIF   (&J GT &LAST).COM1  AT END OF STRING, BRANCH
         AIF   (&J-&I LE 3).LP1    LOOP IF WITHIN LENGTH LIMIT
.PSWPERR MNOTE 8,'INVALID SPECIFICATION FOR ''PSWP'' PARAMETER'
         AGO   .END
.COM1    ANOP
&N       SETA  &J-&I               LENGTH OF PARAMETER
&PSWPP   SETC  '&SYSPARM'(&I,&N)   VALUE OF 'PSWP='
         AIF   ('&PSWPP' EQ 'NO').PSWPOK 'NO' IS DEFAULT
         AIF   ('&PSWPP' NE 'YES').PSWPERR ANYTHING BUT 'YES'
&PSWP    SETB  1                   SET PSWP TO YES
.PSWPOK  ANOP
&HPSWP   SETB  1                   INDICATE PARAMETER PRESENT
         AIF   (&J GT &LAST).NOPARM END OF STRING, BRANCH
&N       SETA  &N+1                ADD ONE FOR THE COMMA
&L       SETA  &L-&N               REMAINING PARAMETER LENGTH
&I       SETA  &I+&N               BUMP OVER PARAM. AND COMMA
         AIF   (&L EQ 0).NOPARM    SYSPARM NOT SPECIFIED IN EXEC STMT.
.CHKUSRI ANOP
         AIF   (&HUSRI).CHKNOTF    'USRI=' ALREADY FOUND, BYPASS
         AIF   (&L LT 7).CHKNOTF   MUST BE AT LEAST 'USRI=NO'
         AIF   ('&SYSPARM'(&I,5) NE 'USRI=').CHKNOTF
&I       SETA  &I+5                INDEX TO USRI PARAMETER VALUE
&L       SETA  &L-5                REMAINING PARAMETER LENGTH
&J       SETA  &I                  CHARACTER INDEX
.LP2     AIF   (&L EQ 0).COM2      END OF SYSPARM STRING
         AIF   ('&SYSPARM'(&J,1) EQ ',').COM2  DELIM. FOUND
&J       SETA  &J+1                BUMP CHARACTER INDEX
         AIF   (&J GT &LAST).COM2  AT END OF STRING, BRANCH
         AIF   (&J-&I LE 3).LP2    LOOP IF WITHIN LENGTH LIMIT
.USRIERR MNOTE 8,'INVALID SPECIFICATION FOR ''USRI'' PARAMETER'
         AGO   .END
.COM2    ANOP
&N       SETA  &J-&I               LENGTH OF PARAMETER
&USRIP   SETC  '&SYSPARM'(&I,&N)   VALUE OF 'USRI='
         AIF   ('&USRIP' EQ 'NO').USRIOK 'NO' IS DEFAULT
         AIF   ('&USRIP' NE 'YES').USRIERR ANYTHING BUT 'YES'
&USRI    SETB  1                   SET USRI TO YES
.USRIOK  ANOP
&HUSRI   SETB  1                   INDICATE PARAMETER PRESENT
         AIF   (&J GT &LAST).NOPARM END OF STRING, BRANCH
&N       SETA  &N+1                ADD ONE FOR THE COMMA
&L       SETA  &L-&N               REMAINING PARAMETER LENGTH
&I       SETA  &I+&N               BUMP OVER PARAM. AND COMMA
         AIF   (&L EQ 0).NOPARM    SYSPARM NOT SPECIFIED
.CHKNOTF ANOP
         AIF   (&HNOTF).CHKNXT     'NOTF=' ALREADY FOUND, BYPASS
         AIF   (&L LT 7).CHKNXT    MUST BE AT LEAST 'NOTF=NO'
         AIF   ('&SYSPARM'(&I,5) NE 'NOTF=').CHKNXT
&I       SETA  &I+5                INDEX TO NOTF PARAMETER VALUE
&L       SETA  &L-5                REMAINING PARAMETER LENGTH
&J       SETA  &I                  CHARACTER INDEX
.LP3     AIF   (&L EQ 0).COM3      END OF SYSPARM STRING
         AIF   ('&SYSPARM'(&J,1) EQ ',').COM3  DELIMITER FOUND, BRANCH
&J       SETA  &J+1                BUMP CHARACTER INDEX
         AIF   (&J GT &LAST).COM3  AT END OF STRING, BRANCH
         AIF   (&J-&I LE 3).LP3    LOOP IF WITHIN LENGTH LIMIT
.NOTFERR MNOTE 8,'INVALID SPECIFICATION FOR ''NOTF'' PARAMETER'
         AGO   .END
.COM3    ANOP
&N       SETA  &J-&I               LENGTH OF PARAMETER
&NOTFP   SETC  '&SYSPARM'(&I,&N)   VALUE OF 'NOTF='
         AIF   ('&NOTFP' EQ 'YES').NOTFOK 'YES' IS DEFAULT
         AIF   ('&NOTFP' NE 'NO').NOTFERR ANYTHING BUT 'NO'
&NOTF    SETB  0                   SET NOTF TO NO
.NOTFOK  ANOP
&HNOTF   SETB  1                   INDICATE PARAMETER PRESENT
         AIF   (&J GT &LAST).NOPARM END OF STRING, BRANCH
&N       SETA  &N+1                ADD ONE FOR THE COMMA
&L       SETA  &L-&N               REMAINING PARAMETER LENGTH
&I       SETA  &I+&N               BUMP OVER PARAM. AND COMMA
.CHKNXT  ANOP
         AIF   (&COUNT GT 3).ERR   MORE THAN 3 TIMES THROUGH ?
&COUNT   SETA  &COUNT+1            ADD 1 TO LOOP COUNT
         AGO   .CHKPSWP            ONCE MORE THROUGH THE LOOP
.ERR     ANOP
&N       SETA  &LAST-&I+1          REMAINDER OF SYSPARM STRING
&MIST    SETC  '&SYSPARM'(&I,&N)
         MNOTE 12,'INVALID ''SYSPARM'' SPECIFICATION ''&MIST'''
         AGO   .END
.NOPARM  ANOP
         EJECT
         PRINT ON
IKJEFF10 CSECT ,
IKJEFF10 AMODE 24
IKJEFF10 RMODE 24
         SPACE 5
***********************************************************************
***********************************************************************
***                                                                 ***
***      INSTALLATION EXIT FOR THE 'SUBMIT' COMMAND PROCESSOR.      ***
***                                                                 ***
***      THIS INSTALLATION-WRITTEN EXIT ROUTINE CHECKS THE JOB      ***
***      CARDS OF JOBS BEING SUBMITTED VIA THE 'SUBMIT' COMMAND     ***
***      PROCESSOR OR THE EDIT SUBCOMMAND PROCESSOR.                ***
***                                                                 ***
***      THE ROUTINE CHECKS THE PARAMETERS 'USER=' AND              ***
***      'PASSWORD=' IN THE JOBCARD.                                ***
***      FOLLOWING ACTIONS ARE TAKEN:                               ***
***                                                                 ***
***      1. IF THE PARAMETER 'USER=' IS PRESENT, THE PARAMETER      ***
***         'PASSWORD=' IS OMITTED, HOWEVER, THE TERMINAL USER      ***
***         IS PROMPTED FOR THE PASSWORD, UNLESS THE USERID IS      ***
***         THAT OF THE USER'S SESSION.                             ***
***                                                                 ***
***         THE PARAMETER 'PASSWORD=' IS GENERATED AND INSERTED     ***
***         IN THE JOBCARD.                                         ***
***                                                                 ***
***         IF A 'NEW PASSWORD' IS ALSO GIVEN, IT IS INSERTED       ***
***         IN THE 'PASSWORD='-PARAMETER. IN THAT CASE, THE         ***
***         PASSWORD IS NOT REMEMBERED FOR FOLLOWING JOBS.          ***
***                                                                 ***
***      2. IF THE PARAMETER 'USER=' IS OMITTED, TWO ALTERNATIVE    ***
***         ACTIONS CAN BE TAKEN DEPENDING ON THE SETTING OF        ***
***         'SYSPARM' WHEN THE MODULE WAS ASSEMBLED:                ***
***         A) THE TSO USER'S USERID IS INSERTED (USRI=YES)         ***
***            THE PASSWORD FROM THE TSB IS ALSO INSERTED IN        ***
***            THE 'PASSWORD=' PARAMETER.                           ***
***         B) NO 'USER=' AND 'PASSWORD=' PARAMETERS ARE            ***
***            CREATED (USRI=NO)                                    ***
***                                                                 ***
***      3. DEPENDING ON THE SETTING OF THE PARAMETER 'NOTF='       ***
***         IN THE 'SYSPARM' STRING AT ASSEMBLY TIME, THE           ***
***         'NOTIFY=' PARAMETER IS HANDLED:                         ***
***                                                                 ***
***         A) A 'NOTIFY=' PARAMETER FOR THE SUBMITTING USER'S      ***
***            USERID IS INSERTED IN THE JOBCARD (NOTF=YES)         ***
***         B) NO 'NOTIFY=' PARAMETER IS CREATED, BUT AN EXISTING   ***
***            ONE IS LEFT UNTOUCHED (NOTF=NO)                      ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         SPACE 5
***********************************************************************
***********************************************************************
***                                                                 ***
***      4. THE WAY THE PARAMETER 'PASSWORD=' IN JOBCARDS IS        ***
***         TREATED IS ALSO DEPENDENT ON THE  SETTING OF 'SYSPARM': ***
***                                                                 ***
***         A) IF 'PSWP=YES', THE PASSWORD IN 'PASSWORD=' IS        ***
***            CLEARED AND THE USER IS PROMPTED FOR THE PASSWORD.   ***
***         B) IF 'PSWP=NO', A 'PASSWORD=' PARAMETER IN A JOBCARD   ***
***            IS ACCEPTED AND THE USER IS PROMPTED ONLY IF THIS    ***
***            PARAMETER IS OMITTED AND THE USERID SPECIFIED IN     ***
***            THE PARAMETER 'USER=' IS NOT EQUAL TO THE            ***
***            SUBMITTER'S USERID.                                  ***
***         C) IF 'PSWI=YES', A 'PASSWORD=' PARAMETER WITH THE      ***
***            MITTER'S PASSWORD IS INSERTED, IF NOT SPECIFIED      ***
***            BY THE USER.                                         ***
***                                                                 ***
***      OTHER PARAMETERS OF THE JOBCARD AND/OR OTHER JCL           ***
***      STATEMENTS CAN BE HANDLED BY INSERTING APPROPRIATE CODE    ***
***      AT LOCATIONS IN THE CODE THAT ARE IDENTIFIED BY COMMENTS.  ***
***                                                                 ***
***      IF CODE IS ADDED TO THIS EXIT ROUTINE, THE FOLLOWING       ***
***      SHOULD BE OBSERVED:                                        ***
***                                                                 ***
***      WHEN THE EXIT IS REENTERED FROM THE SUBMIT COMMAND,        ***
***      THE CODE AT THE BEGINNING OF THE EXIT ROUTINE WILL         ***
***      RESTORE THE CONTENTS OF REGISTERS 9 (EXIT PARAMETER        ***
***      LIST) AND 10 (WORK AREA) AND WILL INITIALIZE REG. 7 TO     ***
***      THE START OF THE PARAMETER BUFFER. THE CONTENTS OF ALL     ***
***      OTHER REGISTERS, IF NEEDED, HAS TO BE SAVED IN THE         ***
***      EXIT'S WORK AREA (SUBWORK).                                ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         SPACE 5
***********************************************************************
***********************************************************************
***                                                                 ***
***      REGISTERS ON ENTRY:                                        ***
***      R1    ADDR. OF POINTER TO PARAMETER LIST                   ***
***            (MAPPED BY MACRO INSTR. 'IKJEFFIE')                  ***
***      R7    ADDR. OF SUBMIT'S INTERNAL CONTROL TABLE IKJEFFCT    ***
***                                                                 ***
***      EXIT:                                                      ***
***      R15   0 - PROCESS CURRENT STATEMENT AND READ THE NEXT      ***
***            4 - REINVOKE EXIT ROUTINE FOR INSERTION OF A         ***
***                NEW STATEMENT.                                   ***
***            8 - DISPLAY MESSAGE GENERATED BY EXIT ROUTINE        ***
***                (MSG. ID IKJ56283I) AND REINVOKE EXIT            ***
***           12 - DISPLAY PROMPTING MESSAGE GENERATED BY EXIT      ***
***                ROUTINE (MSG. ID IKJ56280A), OBTAIN RESPONSE,    ***
***                AND REINVOKE EXIT ROUTINE.                       ***
***           16 - TERMINATE THE SUBMIT COMMAND                     ***
***                                                                 ***
***      REGISTER USAGE:                                            ***
***      R13   SAVE AREA                                            ***
***      R12   PROGRAM BASE                                         ***
***      R10   ADDR. OF WORK AREA  (SUBWORK)                        ***
***      R9    ADDR. OF EXIT PARAMETER LIST (IEEXITL)               ***
***      R8    ADDR. OF CONTROL SWITCHES (IESUBCTP)                 ***
***      R7    ADDR. OF PARAMETER BUFFER (PARMENT)                  ***
***                                                                 ***
***********************************************************************
***********************************************************************
         EJECT
         CVT   DSECT=YES
         EJECT
         IHAASCB
         EJECT
         IKJEFFIE IETYPE=SUBMIT
         EJECT
         IEZJSCB
         EJECT
         IKJPPL
         EJECT
         IKJTCB
         EJECT
         IKJTSB
         EJECT
*
***********************************************************************
*                                                                     *
*        PARAMETER LIST ENTRY                                         *
*                                                                     *
***********************************************************************
*
PARMENT  DSECT
PARMLNG  DS    H                   LENGTH OF PARAMETER
PARMTYP  DS    H                   TYPE OF PARAMETER
PARMTPAR EQU   X'80'               PARAMETER HAS PARENTHESES
PARMTSUB EQU   X'40'               PARAMETER HAS SUBPARAMETERS
PARMTXT  DS    CL144               PARAMETER
PARMNXT  DS    0H
PARMELNG EQU   *-PARMLNG           LENGTH OF PARAMETER ENTRY
         EJECT
*
***********************************************************************
*                                                                     *
*        WORK AREA FOR THE SUBMIT INSTALLATION EXIT IKJEFF10          *
*                                                                     *
***********************************************************************
*
SUBWORK  DSECT
SUBACR   DC    CL8'SUBWORK'        ACRONYM
SUBSAV   DS    18F                 SAVE AREA
SUBCLSAV DS    4F                  SAVE AREA FOR CLRPARM SUBROUTINE
SUBJOBN  DS    CL8                 JOB NAME
SUBUSID  DS    CL8                 USERID
SUBPSWD  DS    CL8                 PASSWORD
SUBNPSWD DS    CL8                 NEW PASSWORD
SUBPBUF  DS    A                   ADDR. OF PARAMETER BUFFER
SUBPARM  DS    A                   ADDR. OF NEXT FREE PARAM. ENTRY
SUBCURP  DS    A                   ADDR. OF CURRENT PARAM. ENTRY
SUBPROC  DS    A                   ADDR. OF PROCESSING ROUT. (RC=8/12)
SUBPPL   DS    A                   ADDR. OF SUBMIT'S PARSE PARAM. LIST
SUBANS   DS    A                   ADDR. OF ANSWER PLACE FROM PARSE
SUBINSRT DS    A                   INSERTION POINT IN PARAMETER TEXT
SUBPARCT DS    F                   COUNT OF OPEN LEFT PARENTHESES
*
SUBCLNG  DS    H                   LENGTH OF JCL (FOR MESSAGE)
SUBCARD  DS    CL80                JCL STATEMENT
SUBOPST  DS    H                   START OF OPERAND IN FIRST CARD
SUBMSGL  DS    H                   LENGTH OF MESSAGE
SUBMSG   DS    CL80                MESSAGE AREA FOR CHANGEABLE MSGS.
*
SUBUSLN  DS    H                   LENGTH OF USERID - 1
SUBPWLN  DS    H                   LENGTH OF PASSWORD - 1
SUBNPWLN DS    H                   LENGTH OF NEW PASSWORD - 1
SUBWKLN  DS    H                   LENGTH OF SAVED PARAMETER TEXT
SUBWKSP  DS    CL144               SAVED PARAMETER TEXT
*
SUBFLG1  DS    X                   FLAG BYTE
SUBJBCMP EQU   X'80'               JOB CARD PROCESSED
SUBCHNG  EQU   X'40'               STATEMENT IS CHANGED
SUB1SHOT EQU   X'20'               CONTROL STMT. IS ONLY 1 CARD
SUBLAST  EQU   X'10'               LAST CARD OF STATEMENT
*
SUBCDFLG DS    X                   CARD PROCESSING FLAG BYTE
SUBOPCNT EQU   X'80'               OPERAND CONTINUED ON NEXT CARD
SUBCONT  EQU   X'20'               STATEMENT IS TO BE CONTINUED
         DS    0D
SUBLNG   EQU   *-SUBWORK           LENGTH OF WORK AREA
         EJECT
         REGI  BIT=YES
         EJECT
IKJEFF10 CSECT
         SAVE  (14,12),,IKJEFF10.V03L00.&SYSDATE
         LR    R12,R15
         USING IKJEFF10,R12        PROGRAM BASE
         USING SUBWORK,R10         BASE FOR WORK AREA
         L     R9,0(R1)            GET ADDR. OF PARAMETER LIST
         USING IEEXITL,R9          BASE FOR EXIT PARAMETER LIST
*
***********************************************************************
*                                                                     *
*        GET STORAGE FOR WORK AREA AND PARAMETER BUFFER               *
*        IF FIRST ENTRY TO SUBMIT EXIT ROUTINE                        *
*                                                                     *
***********************************************************************
*
         ICM   R10,15,IEEXITWD     GET PTR. TO EXIT'S WORKAREA
         BNZ   GOTWORK             -NOT ZERO, AREA IS PRESENT
         GETMAIN RU,                                                   *
               LV=SUBLNG,SP=229    GET STORAGE FOR WORKAREA
         LR    R10,R1              ADDR. OF WORK AREA
         ST    R10,IEEXITWD        SAVE ADDR. IN PARAMETER LIST
         LR    R0,R1               ADDR. OF AREA
         LA    R1,SUBLNG           LENGTH OF AREA
         LM    R14,R15,ZEROES
         MVCL  R0,R14              CLEAR WORKAREA
         MVC   SUBACR,=CL8'SUBWORK'  ACRONYM TO WORKAREA
*
***********************************************************************
*                                                                     *
*        SAVE ADDR. OF SUBMIT'S PARSE PARAMETER LIST IN THE           *
*        WORKAREA. THE PTR. TO THE PPL IS IN IKJEFFCT,                *
*        SUBMIT'S INTERNAL CONTROL TABLE. IKJEFF10'S CALLER           *
*        (IKJEFF09) USES REG. 7 AS BASE FOR IKJEFFCT.                 *
*                                                                     *
*        NOTE: THIS CODE HAS A DEPENDENCY ON THE FORMAT OF THE        *
*              INTERNAL CONTROL TABLE IKJEFFCT. IN CASE OF PROBLEMS,  *
*              CHECK MICROFICHE OF MODULE IKJEFF09.                   *
*                                                                     *
***********************************************************************
*
         L     R1,40(,R7)          GET ADDR. OF PPL
         ST    R1,SUBPPL           STORE IN WORKAREA
*
GETBUFR  DS    0H
         GETMAIN RU,                                                   *
               LV=4096,SP=229      GET A PAGE
         LR    R7,R1               ADDR. OF PARAMETER BUFFER
         USING PARMENT,R7          BASE FOR PARAMETER ENTRY
         MVC   0(8,R7),=CL8'PARMBUF' MOVE ACRONYM TO BUFFER
         LA    R7,8(,R7)           BUMP OVER ACRONYM
         ST    R7,SUBPBUF          STORE ADDR. IN WORK AREA
         ST    R7,SUBPARM          ADDR. OF FREE PARAM. ENTRY
GOTWORK  DS    0H
         ST    R13,SUBSAV+4        BACKWARD PTR.
         LR    R15,R13             SAVE OLD SAVE AREA ADDR.
         LA    R13,SUBSAV
         ST    R13,8(R15)          FORWARD PTR.
         L     R7,SUBPBUF          ADDR. OF PARAMETER BUFFER
*
***********************************************************************
*                                                                     *
*        DETERMINE CONDITION UNDER WHICH EXIT IS CALLED               *
*                                                                     *
***********************************************************************
*
         CLC   IEMSGP,ZEROES       MESSAGE ISSUED OR PROMPT ?
         BNZ   RET8OR12            -YES, BRANCH
         L     R8,IESUBCTP         ADDR. OF CONTROL SWITCHES
         USING IESUBCTD,R8         BASE FOR JCL CONTROL INFORMATION
         TM    IESTMTYP,IESJOB     JOB STATEMENT ?
         BO    JOBSTMT             -YES, BRANCH
*
* IF THE EXIT SHOULD BE CALLED FOR OTHER JCL THAN JOB STATEMENTS,
* THE APPROPRIATE FLAGS MUST BE TESTED AND ROUTINES BRANCHED TO.
* BUT DON'T FORGET TO SET THE FLAGS IN 'IETAKEEX' ON FIRST ENTRY
*
         SR    R15,R15             RETURN CODE IS ZERO
         EJECT
*
***********************************************************************
*                                                                     *
*        RETURN TO CALLER, RETURN CODE IN REGISTER 15                 *
*                                                                     *
***********************************************************************
*
GOBACK   DS    0H
         L     R13,4(R13)          RELOAD SAVE AREA ADDR.
         RETURN (14,12),RC=(15)    BACK TO CALLER
         EJECT
*
***********************************************************************
*                                                                     *
*        PROCESSING ROUTINE FOR JOB STATEMENTS                        *
*                                                                     *
***********************************************************************
*
JOBSTMT  DS    0H
         ICM   R1,15,IECARDP       GET ADDR. OF JCL STMT.
         BZ    CONTINUE            -ZERO, GENERATE CONTINUATION
         TM    IESTMTYP,IESCONTN   IS THIS FIRST STATEMENT ?
         BO    JOBNFST             -NO, BRANCH
         MVI   SUBCDFLG,0          CLEAR CARD PROCESSING FLAGS
         MVI   SUBFLG1,0           CLEAR FLAGS
         ST    R7,SUBPARM          CLEAR PTR. TO FREE PARM. ENTRY
         BAL   R14,CLRPARM         CLEAR PARAMETER BUFFER
         SR    R0,R0
         IC    R0,IEOPRAND         GET START OF OPERAND FIELD
         BCTR  R0,0                MINUS 1 IS OFFSET
         STH   R0,SUBOPST          SAVE START OF OPERAND FIELD
JOBNFST  DS    0H
         CLI   2(R1),C'*'          IS THIS A COMMENT STATEMENT ?
         BE    JOBCONT             -YES, SKIP IT
         SR    R0,R0
         IC    R0,IEOPRAND         GET START OF OPERAND FIELD
         BCTR  R0,0                MINUS 1 IS OFFSET
         AR    R0,R1               PTR. TO START OF OPERAND
         BAL   R14,PARMSEP         SEPARATE JOB CARD PARAMETERS
         LTR   R15,R15             NORMAL RETURN ?
         BNZ   JCLERR              -NO, JOB CONTROL ERROR
         TM    IESTMTYP,IESCONTN   IS THIS FIRST STATEMENT ?
         BO    JOBCONT             -NO, BRANCH
         L     R1,IECARDP          ADDR. OF JOB STATEMENT
         MVC   SUBCARD,0(R1)       SAVE FIRST JOB STATEMENT
*
* MOVE JOBNAME TO WORK AREA
*
         MVC   SUBJOBN,BLANKS      BLANK OUT JOBNAME FIELD
         LA    R1,SUBCARD+2        FIRST JOBNAME CHARACTER
         LA    R2,1                VALUE OF INCREMENT
         LA    R3,8(,R1)           LAST JOBNAME CHARACTER
JOBBLNK  DS    0H
         CLI   1(R1),C' '          END OF JOBNAME ?
         BE    JOBNAM              -YES, BRANCH
         BXLE  R1,R2,JOBBLNK       TEST NEXT CHARACTER
         B     JCLERR              JOBNAME TOO LONG
JOBNAM   DS    0H
         LA    R2,SUBCARD+2        START OF JOBNAME
         SR    R1,R2               LENGTH OF JOBNAME - 1
         EX    R1,JOBNMOVE         MOVE JOBNAME TO WORK AREA
         OC    SUBJOBN,BLANKS      MAKE JOBNAME UPPER CASE
         EX    R1,JOBNCOMP         CHECK IF ANY CHANGE TO JOBNAME
         BNE   JCLERR              -YES, ERROR IN JOBNAME
*
         TM    IESTMTYP,IESSCON    HAS STATEMENT CONTINUATION ?
         BO    JOBCONT             -YES, BRANCH
         OI    SUBFLG1,SUB1SHOT    JOB STATEMENT IS 1 CARD
         B     JOBPROC             PROCESS JOB STATEMENT
*
JOBCONT  DS    0H
         TM    IESTMTYP,IESSCON    IS THIS LAST PART OF STATEMENT ?
         BZ    JOBPROC             -YES, PROCESS NOW
         XC    IECARDP,IECARDP     DELETE CURRENT JCL STATEMENT
         SR    R15,R15             RETURN CODE ZERO - CONTINUE
         B     GOBACK              GO BACK TO GET NEXT PART OF STMT.
*
JOBNMOVE MVC   SUBJOBN(0),0(R2)    MOVE JOBNAME TO WORK AREA
JOBNCOMP CLC   SUBJOBN(0),0(R2)    COMPARE JOBNAME WITH JCL
         EJECT
*
***********************************************************************
*                                                                     *
*        JOB STATEMENT COMPLETE - PROCESS NOW                         *
*                                                                     *
*        THE PARAMETERS 'USER=' AND 'PASSWORD=' ARE CHECKED.          *
*        USERID AND/OR PASSWORD ARE PROMPTED AND INSERTED, IF         *
*        NECESSARY.                                                   *
*                                                                     *
***********************************************************************
*
JOBPROC  DS    0H
         L     R7,SUBPBUF          ADDR. OF PARAMETER BUFFER
USERNXT  DS    0H
         LH    R0,PARMLNG          LENGTH OF PARAMETER
         SH    R0,=AL2(L'PARMUSR)  SUBTRACT LENGTH OF 'USER='
         BM    BMPUSER             -SHORTER, TRY NEXT
         CLC   PARMUSR,PARMTXT     IS IT 'USER=' ?
         BNE   BMPUSER             -NO, BRANCH
         LA    R2,PARMTXT+L'PARMUSR POINT TO START OF USERID
         LTR   R0,R0               USERID SPECIFIED ?
         BZ    JCLERR              -NO, THIS IS AN ERROR
         BAL   R14,SAVUSID         SAVE USERID
         B     SRCHPSWD            LOOK FOR PASSWORD NOW
BMPUSER  DS    0H
         LA    R7,PARMNXT          NEXT PARAMETER BUFFER ENTRY
         C     R7,SUBPARM          AT END OF BUFFER ?
         BL    USERNXT             -NO, TEST NEXT ENTRY
         AIF   (NOT &USRI).USRI01  SKIP CODE IF 'USRI=NO'
*
***********************************************************************
*                                                                     *
*        PARAMETER 'USER=' NOT SPECIFIED. INSERT SESSION USERID       *
*                                                                     *
***********************************************************************
*
         L     R7,SUBPARM          ADDR. OF FIRST FREE PARAMETER ENTRY
         LA    R2,PARMNXT          ADDR. OF NEXT FREE ENTRY
         ST    R2,SUBPARM          ADJUST POINTER
         MVC   PARMTXT(L'PARMUSR),PARMUSR INSERT 'USER='
         L     R2,IEUSRIDP         GET ADDR. OF SESSION USERID
         MVC   SUBUSID,0(R2)       MOVE SESSION USERID
         MVC   PARMTXT+L'PARMUSR(8),SUBUSID MOVE USERID TO PARAMETER
         LA    R1,7                MAX. USERID OFFSET
CHKUSIDB DS    0H
         LA    R2,SUBUSID(R1)      POINT TO CHAR. IN USERID
         CLI   0(R2),C' '          IS IT A BLANK?
         BNE   USIDENDF            -NO, FOUND END OF USERID
         BCT   R1,CHKUSIDB         -YES, CHECK NEXT CHARACTER
USIDENDF DS    0H
         LA    R1,L'PARMUSR+1(R1)  LENGTH OF PARAMETER 'USER=USERID'
         STH   R1,PARMLNG          STORE IN PARAMETER HEADER
         OI    SUBFLG1,SUBCHNG     SHOW JOB CARD CHANGED
.USRI01  ANOP
*
***********************************************************************
*                                                                     *
*        SEARCH FOR 'PASSWORD=' PARAMETER.                            *
*                                                                     *
***********************************************************************
*
SRCHPSWD DS    0H
         L     R7,SUBPBUF          ADDR. OF PARAMETER BUFFER
PSWDNXT  DS    0H
         LH    R0,PARMLNG          LENGTH OF PARAMETER
         SH    R0,=AL2(L'PARMPSW)  SUBTRACT LENGTH OF 'PASSWORD='
         BM    BMPPSWD             -SHORTER, TRY NEXT
         CLC   PARMPSW,PARMTXT     IS IT 'PASSWORD=' ?
         BNE   BMPPSWD             -NO, BRANCH
         AIF   (NOT &PSWP).PSWP01
         B     PRMPPSW             PROMPT FOR PASSWORD
         AGO   .PSWP02
.PSWP01  ANOP
         LTR   R0,R0               IS LENGTH OF PASSWORD ZERO ?
         BNP   PRMPPSW             -YES, PROMPT FOR PASSWORD
         LA    R2,PARMTXT+L'PARMPSW ADDR. OF PASSWORD
         TM    PARMTYP,PARMTSUB    NEW PASSWORD ALSO GIVEN ?
         BO    NEWPSWD             -YES, BRANCH
         LR    R1,R0               LENGTH OF PASSWORD
         TM    PARMTYP,PARMTPAR    PASSWORD IN PARENTHESES ?
         BNO   PSWDNPAR            -NO, BRANCH
         LA    R2,1(,R2)           BUMP OVER LEFT PARENTHESIS
         SH    R2,=H'2'            LENGTH MINUS 2 PARENTHESES
         LTR   R1,R1               IS LENGTH NOW ZERO ?
         BNP   PRMPPSW             -YES, PROMPT FOR PASSWORD
PSWDNPAR DS    0H
         CH    R1,=H'8'            LONGER THAN 8 CHARS. ?
         BH    PRMPPSW             -YES, PROMPT FOR PASSWORD
         BCTR  R1,0                SUBTRACT 1 FOR EXECUTE
         MVC   SUBPSWD,BLANKS      CLEAR PASSWORD AREA
         EX    R1,MOVEPSW          SAVE PASSWORD IN WORKAREA
         STH   R1,SUBPWLN          SAVE LENGTH OF PASSWORD - 1
         B     RACFOK              USERID AND PASSWORD O.K.
NEWPSWD  DS    0H
         XC    SUBPSWD,SUBPSWD     CLEAR PASSWORD FIELD
         B     RACFOK
*
.PSWP02  ANOP
BMPPSWD  DS    0H
         LA    R7,PARMNXT          NEXT PARAMETER BUFFER ENTRY
         C     R7,SUBPARM          AT END OF BUFFER ?
         BL    PSWDNXT             -NO, TEST NEXT ENTRY
*
* PARAMETER 'PASSWORD=' NOT SPECIFIED.
*
         CLI   SUBUSID,C' '        'USER=' SPECIFIED?
         BNH   RACFOK              -NO, BYPASS USERID CHECK
         AIF   (&USRI).USRI04      SKIP CODE IF 'USRI=YES'
         L     R2,IEUSRIDP         ADDR. OF TSO SESSION USERID
         CLC   SUBUSID,0(R2)       SAME USERID ON JOBCARD ?
         BE    RACFOK              -YES, NO NEED TO INSERT PASSWORD
.USRI04  ANOP
*
         L     R7,SUBPARM          ADDR. OF FREE PARAMETER ENTRY
         LA    R2,PARMNXT          ADDR. OF NEXT FREE ENTRY
         ST    R2,SUBPARM          ADJUST POINTER
         MVC   PARMTXT(L'PARMPSW),PARMPSW INSERT 'PASSWORD='
         B     PRMPPSW             PROMPT FOR PASSWORD
*
MOVEPSW  MVC   SUBPSWD(0),0(R2)    SAVE PASSWORD IN WORK AREA
         EJECT
*
***********************************************************************
*                                                                     *
*        CHECK FOR 'NOTIFY=' PARAMETER ON JOBCARD. INSERT USERID      *
*        OF TSO SESSION IF 'NOTIFY=,' HAS BEEN SPECIFIED.             *
*                                                                     *
***********************************************************************
*
RACFOK   DS    0H
         L     R7,SUBPBUF          ADDR. OF PARAMETER BUFFER
NOTFNXT  DS    0H
         LH    R0,PARMLNG          LENGTH OF PARAMETER
         SH    R0,=AL2(L'PARMNTF)  SUBTRACT LENGTH OF 'NOTIFY='
         BM    BMPNOTF             -SHORTER, TRY NEXT
         CLC   PARMNTF,PARMTXT     IS IT 'NOTIFY='
         BNE   BMPNOTF             -NO, BRANCH
         LA    R2,PARMTXT+L'PARMNTF POINT TO START OF USERID
         LTR   R0,R0               USERID SPECIFIED ?
         BNZ   JOBDONE             -YES, NO ACTION
*
         L     R3,IEUSRIDP         GET ADDR. OF SESSION USERID
         MVC   0(8,R2),0(R3)       MOVE USERID TO PARAMETER
         LA    R1,7                MAX. USERID OFFSET
CHKUSIDL DS    0H
         LA    R2,0(R1,R3)         POINT TO CHAR. IN USERID
         CLI   0(R2),C' '          IS IT A BLANK?
         BNE   USIDENDL            -NO, FOUND END OF USERID
         BCT   R1,CHKUSIDL         -YES, CHECK NEXT CHARACTER
USIDENDL DS    0H
         LA    R1,L'PARMNTF+1(R1)  LENGTH OF PARAMETER 'NOTIFY=USERID'
         STH   R1,PARMLNG          STORE IN PARAMETER HEADER
         OI    SUBFLG1,SUBCHNG     SHOW JOB CARD CHANGED
         B     JOBDONE             JOB CARD IS PROCESSED
BMPNOTF  DS    0H
         LA    R7,PARMNXT          NEXT PARAMETER BUFFER ENTRY
         C     R7,SUBPARM          AT END OF BUFFER ?
         BL    NOTFNXT             -NO, TEST NEXT ENTRY
         AIF   (NOT &NOTF).NOTF01  SKIP CODE IF 'NOTF=NO'
*
***********************************************************************
*                                                                     *
*        PARAMETER 'NOTIFY=' NOT SPECIFIED. INSERT SESSION USERID     *
*                                                                     *
***********************************************************************
*
         L     R7,SUBPARM          ADDR. OF FIRST FREE PARAMETER ENTRY
         LA    R2,PARMNXT          ADDR. OF NEXT FREE ENTRY
         ST    R2,SUBPARM          ADJUST POINTER
         MVC   PARMTXT(L'PARMNTF),PARMNTF INSERT 'NOTIFY='
         L     R3,IEUSRIDP         GET ADDR. OF SESSION USERID
         MVC   PARMTXT+L'PARMNTF(8),0(R3) MOVE USERID TO PARAMETER
         LA    R1,7                MAX. USERID OFFSET
CHKUSIDX DS    0H
         LA    R2,0(R1,R3)         POINT TO CHAR. IN USERID
         CLI   0(R2),C' '          IS IT A BLANK?
         BNE   USIDENDX            -NO, FOUND END OF USERID
         BCT   R1,CHKUSIDX         -YES, CHECK NEXT CHARACTER
USIDENDX DS    0H
         LA    R1,L'PARMNTF+1(R1)  LENGTH OF PARAMETER 'NOTIFY=USERID'
         STH   R1,PARMLNG          STORE IN PARAMETER HEADER
         OI    SUBFLG1,SUBCHNG     SHOW JOB CARD CHANGED
.NOTF01  ANOP
         SPACE 2
*
***********************************************************************
*                                                                     *
*        IF ANY OTHER JOB CARD PARAMETERS ARE TO BE PROCESSED,        *
*        IT SHOULD BE DONE HERE.                                      *
*                                                                     *
*        REG. 7  ==> ADDR. OF PARAMETER BUFFER (PARMENT)              *
*                                                                     *
***********************************************************************
*
JOBDONE  DS    0H
         L     R7,SUBPBUF          ADDR. OF PARAMETER BUFFER
         EJECT
*
***********************************************************************
*                                                                     *
*        JOB STATEMENT PROCESSED. PUT TOGETHER IF CHANGED             *
*        OR IF UNCHANGED BUT CONTINUATION CARD(S).                    *
*                                                                     *
***********************************************************************
*
JOBOK    DS    0H
         TM    SUBFLG1,SUBCHNG     ANYTHING CHANGED ?
         BO    JOBGEN              -YES, BRANCH
         TM    SUBFLG1,SUB1SHOT    ONLY 1 CARD ?
         BO    JOBLAST             -YES, NO ACTION REQUIRED
JOBGEN   DS    0H
         LH    R2,SUBOPST          OFFSET TO START OF OPERAND FIELD
         LA    R1,78               LENGTH OF CARD MINUS 2
         SR    R1,R2               LENGTH OF OPERAND FIELD - 2
         LA    R2,SUBCARD(R2)      PTR. TO START OF OPERAND FIELD
         MVI   0(R2),C' '          BLANK OUT -
         EX    R1,CARDCLR                      OPERAND FIELD
         MVC   SUBCURP,SUBPBUF     ADDR. OF 1'ST PARAMETER TO PROCESS
NEXTCARD DS    0H
         LA    R1,SUBCARD          ADDR. OF CARD BUFFER
         BAL   R14,PARMGLUE        PUT STATEMENT TOGETHER
         LTR   R15,R15             NORMAL RETURN ?
         BNZ   TOOLONG             -NO, PARAMETER TOO LONG
         ICM   R1,15,IECARDP       GET ADDR. OF JCL STATEMENT
         BZ    NEXTNFST            -NO, BRANCH
         MVC   0(L'SUBCARD,R1),SUBCARD MOVE GENERATED STATEMENT
         B     NEXTMORE
NEXTNFST DS    0H
         LA    R1,SUBCARD          ADDR. OF CARD BUFFER
         ST    R1,IECARDP          STORE ADDR. OF CARD BUFFER
NEXTMORE DS    0H
         TM    SUBFLG1,SUBLAST     MORE TO GENERATE ?
         BO    JOBLAST             -NO, BRANCH
         LA    R15,4               RETURN CODE 4 : COME BACK FOR NEXT
         B     GOBACK
JOBLAST  DS    0H
         MVI   SUBCDFLG,0          CLEAR CARD PROCESSING FLAGS
         OI    SUBFLG1,SUBJBCMP    SHOW JOB CARD PROCESSED
         SR    R15,R15             RETURN CODE 0 IF LAST CARD
         B     GOBACK              BACK TO CALLER
*
CARDCLR  MVC   1(0,R2),0(R2)       BLANK OUT ALL OF OPERAND FIELD
         EJECT
*
***********************************************************************
*                                                                     *
*        PROMPT FOR PASSWORD FOR PARAMETER 'PASSWORD='                *
*                                                                     *
***********************************************************************
*
PRMPPSW  DS    0H
         OI    SUBFLG1,SUBCHNG     SHOW JOB CARD CHANGED
         LA    R2,PARMTXT+L'PARMPSW POINT BEHIND 'PASSWORD='
         ST    R2,SUBINSRT         SAVE INSERTION POINT FOR PASSWORD
         CLI   SUBPSWD,C' '        GOT A PASSWORD ?
         BH    HAVPSWD             -YES, INSERT
         L     R2,IEUSRIDP         ADDR. OF TSO SESSION USERID
         CLC   SUBUSID,0(R2)       SAME USERID ON JOBCARD ?
         BNE   MUSTPRMP            -NO, MUST PROMPT FOR PASSWORD
         AIF   (NOT &USRI).USRI02  SKIP CODE IF 'USRI=NO'
         L     R3,16               ADDR. OF CVT
         USING CVT,R3              BASE FOR CVT
         L     R1,CVTTCBP          ADDR. OF TCB/ASCB WORDS
         DROP  R3                  RELEASE CVT BASE
         L     R3,12(R1)           ADDR. OF CURRENT ASCB
         USING ASCB,R3             BASE FOR ASCB
         ICM   R4,15,ASCBTSB       ADDR. OF TERMINAL STATUS BLOCK
         BZ    MUSTPRMP            -NOT PRESENT, PROMPT FOR PASSWORD
         USING TSB,R4              BASE FOR TERMINAL STATUS BLOCK
         DROP  R3                  RELEASE ASCB BASE
KEY0B    MODESET EXTKEY=SUPR,SAVEKEY=(2),                    **BOH002  *
               RELATED=KEYXB       GET INTO SUPERVISOR KEY   **BOH002
         MVC   SUBPSWD,TSBPSWD     GET TSO SESSION PASSWORD
KEYXB    MODESET KEYADDR=(2),RELATED=KEY0B BACK TO OUR KEY   **BOH002
         DROP  R4                  RELEASE TSB BASE
         LA    R3,7                MAX. OFFSET INTO PASSWORD
FNDPSWND DS    0H
         LA    R1,SUBPSWD(R3)      POINT TO CHAR. IN PASSWORD
         CLI   0(R1),C' '          IS IT A BLANK?
         BE    PSWDNEXT            -YES, BRANCH
         CLI   0(R1),0             IS IT BINARY ZEROES?
         BNE   PSWDEND             -NO, THIS IS LAST CHAR.
PSWDNEXT DS    0H
         BCTR  R3,0                SUBTRACT ONE FROM OFFSET
         CH    R3,=H'0'            DID WE CHECK OFFSET ZERO?
         BNM   FNDPSWND            -NO, TEST NEXT CHARACTER
         B     NOPSWD1             -YES, PASSWORD IS BLANKS OR ZEROES
PSWDEND  DS    0H                  R3 = LENGTH OF PASSWORD - 1
         STH   R3,SUBPWLN          STORE IN LENGTH FIELD
         B     HAVPSWD
         AGO   .USRI03
*
.USRI02  ANOP
         B     RACFOK              PROCESS NEXT JOBCARD PARAMETER
.USRI03  ANOP
*
* PROMPT TERMINAL USER FOR PASSWORD.
*
MUSTPRMP DS    0H
         MVI   SUBMSG,C' '         BLANK OUT MSG. AREA
         MVC   SUBMSG+1(L'SUBMSG-1),SUBMSG
         MVC   SUBMSG+2(L'DUMYCMD),DUMYCMD MOVE DUMMY COMMAND
         LA    R1,SUBMSG+3+L'DUMYCMD INSERTION POINT FOR USERID
         MVC   0(8,R1),SUBUSID     INSERT USERID IN COMMAND BUFFER
         LH    R2,SUBUSLN          LENGTH OF USERID - 1
         LA    R2,1(,R2)           ADD 1
         AR    R1,R2               POINT BEHIND USERID
         MVI   0(R1),C'/'          FORCE PASSWORD PROMPT
         LA    R1,L'DUMYCMD+1      OFFSET TO PARAMETERS
         STH   R1,SUBMSG           STORE IN COMMAND BUFFER PREFIX
         LA    R1,5(R1,R2)         LENGTH OF COMMAND BUFFER
         STH   R1,SUBMSGL          STORE IN LENGTH FIELD
         LA    R1,REPLPSWD         ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         B     PARSE               PROMPT FOR PASSWORD
         EJECT
*
***********************************************************************
*                                                                     *
*        PASSWORD ENTERED BY TERMINAL USER. INSERT IN 'PASSWORD='     *
*                                                                     *
***********************************************************************
*
REPLPSWD DS    0H
         USING IKJPARMD,R4         BASE FOR PDE'S
         ICM   R4,15,SUBANS        ADDR. OF ANSWER AREA
         BNP   PARSFAIL            -NOT PLUS, PARSE FAILED
         TM    USERID+14,BIT0      PASSWORD PRESENT ?
         BZ    NOPSWD              -NO, BRANCH
         LH    R1,USERID+12        GET LENGTH OF PASSWORD
         LTR   R1,R1               IS LENGTH ZERO ?
         BZ    NOPSWD              -YES, NO PASSWORD ENTERED
         L     R2,USERID+8         ADDR. OF PASSWORD
         BCTR  R1,0                SUBTRACT 1 FOR EXECUTE
         EX    R1,MOVEPSW          MOVE PASSWORD TO WORK AREA
         STH   R1,SUBPWLN          SAVE LENGTH OF PASSWORD - 1
         TM    USERID+22,BIT0      NEW PASSWORD ALSO PRESENT ?
         BZ    RLSEPDL             -NO, BRANCH
         LH    R1,USERID+20        GET LENGTH OF NEW PASSWORD
         LTR   R1,R1               IS LENGTH ZERO ?
         BZ    RLSEPDL             -YES, NO NEW PASSWORD ENTERED
         L     R2,USERID+16        ADDR. OF NEW PASSWORD
         BCTR  R1,0                SUBTRACT 1 FOR EXECUTE
         EX    R1,MOVENPSW         MOVE NEW PASSWORD TO WORK AREA
         STH   R1,SUBNPWLN         LENGTH OF NEW PASSWORD - 1
RLSEPDL  DS    0H
         BAL   R14,RLSPDL          RELEASE STORAGE FROM PARSE
HAVPSWD  DS    0H
         LH    R2,SUBPWLN          LENGTH OF PASSWORD - 1
         L     R1,SUBINSRT         GET INSERTION POINT
         CLI   SUBNPSWD,0          NEW PASSWORD GIVEN ?
         BE    NOPSWDNW            -NO, BRANCH
         MVI   0(R1),C'('          INSERT LEFT PARENTHESIS
         LA    R1,1(,R1)           ADJUST INSERTION POINT
NOPSWDNW DS    0H
         LA    R5,SUBPSWD          ADDR. OF PASSWORD IN WORK AREA
         EX    R2,PARMOV           MOVE PASSWORD
         LA    R3,L'PARMPSW+1(R2)  LENGTH OF PARAMETER
         CLI   SUBNPSWD,0          NEW PASSWORD GIVEN ?
         BE    SETLNG              -NO, BRANCH
         LA    R1,1(R1,R2)         POINT BEHIND PASSWORD
         MVI   0(R1),C','          INSERT COMMA
         LA    R1,1(,R1)           BUMP OVER COMMA
         LH    R2,SUBNPWLN         LENGTH OF NEW PASSWORD
         LA    R5,SUBNPSWD         ADDR. OF NEW PASSWORD
         EX    R2,PARMOV           MOVE NEW PASSWORD
         XC    SUBPSWD,SUBPSWD     CLEAR PASSWORD
         XC    SUBNPSWD,SUBNPSWD   CLEAR NEW PASSWORD
         LA    R1,1(R1,R2)         POINT BEHIND NEW PASSWORD
         MVI   0(R1),C')'          SET RIGHT PARENTHESIS
         LA    R3,4(R2,R3)         LENGTH OF PARAMETER
SETLNG   DS    0H
         STH   R3,PARMLNG          STORE IN LENGTH FIELD
         B     RACFOK              PROCESS NEXT JOB CARD PARAMETER
         DROP  R4                  RELEASE PDE BASE
*
* NO PASSWORD ENTERED. FORGET 'PASSWORD=' (ZERO LENGTH FIELD)
*
NOPSWD   DS    0H
         BAL   R14,RLSPDL          RELEASE STORAGE FROM PARSE
NOPSWD1  DS    0H
         XC    PARMLNG,PARMLNG     CLEAR PARAMETER LENGTH FIELD
         B     RACFOK
*
MOVENPSW MVC   SUBNPSWD(0),0(R2)   MOVE NEW PASSWORD TO WORK AREA
PARMOV   MVC   0(0,R1),0(R5)       MOVE PARAMETER
         EJECT
*
***********************************************************************
*                                                                     *
*        ENTRY IS FOR GENERATION OF CONTINUATION OF STATEMENT         *
*                                                                     *
***********************************************************************
*
CONTINUE DS    0H
         MVC   SUBCARD,ZAKZAK      '// '
         MVC   SUBCARD+3(L'SUBCARD-3),SUBCARD+2 BLANK OUT THE REST
         LH    R2,SUBOPST          OFFSET TO START OF OPERAND
         CH    R2,=H'15'           BEHIND COL. 16 ?
         BNH   CONTOK              -NO, BRANCH
         LA    R2,15               SET COL. 16
CONTOK   DS    0H
         LA    R2,SUBCARD(R2)      START OF OPERAND
         B     NEXTCARD            GENERATE NEXT CARD OF STATEMENT
*
***********************************************************************
*                                                                     *
*        MESSAGE WAS ISSUED. SELECT ROUTINE FOR FURTHER PROCESSING    *
*                                                                     *
***********************************************************************
*
RET8OR12 DS    0H
         XC    IEMSGP,IEMSGP       CLEAR PTR. TO MESSAGE
         L     R15,SUBPROC         ADDR. OF PROCESSING ROUTINE
         BR    R15                 AND ENTER
         EJECT
*
***********************************************************************
*                                                                     *
*        ERROR EXIT ROUTINES                                          *
*                                                                     *
***********************************************************************
*
BADREPLY DS    0H                  TERMINAL USER ENTERED GARBAGE
         LA    R1,RENLNG           ADDR. OF 'REENTER' - MESSAGE
         ST    R1,IEMSGP           STORE IN PARAMETER LIST
         LA    R15,12              ISSUE PROMPTING MESSAGE
         B     GOBACK
*
TOOLONG  DS    0H                  PARAMETER EXCEEDS MAXIMUM LENGTH
         LA    R1,PARMOUT          ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         LA    R1,LONGLNG          ADDR. OF ERROR MESSAGE
         B     ISSUEMSG
*
JCLERR   DS    0H                  JCL ERROR
         LA    R1,CARDOUT          ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         LA    R1,JCLLNG           ADDR. OF ERROR MESSAGE
         B     ISSUEMSG
*
PARSFAIL DS    0H                  PARSE ERROR
         LA    R1,ERRORRET         ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         LA    R1,PARSLNG          ADDR. OF ERROR MESSAGE
         B     ISSUEMSG
*
ISSUEMSG DS    0H
         ST    R1,IEMSGP           STORE PTR. TO MSG IN PARAM. LIST
         LA    R15,8               ISSUE MESSAGE TO TERMINAL USER
         B     GOBACK
*
CARDOUT  DS    0H                  DISPLAY JCL CARD IN ERROR
         LA    R1,L'SUBMSG+2       LNG OF CARD + LENGTH FLD  **BOH001
         STH   R1,SUBMSGL          STORE IN LENGTH FIELD     **BOH001
         LA    R1,ERRORRET         ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         L     R1,IECARDP          ADDR. OF JCL STMT.        **BOH001
         MVC   SUBMSG,0(R1)        MOVE TO MESSAGE AREA      **BOH001
         LA    R1,SUBMSGL          ADDR. OF MESSAGE          **BOH001
         B     ISSUEMSG
*
PARMOUT  DS    0H                  DISPLAY PARAMETER IN ERROR
         LH    R1,PARMLNG          LENGTH OF PARAMETER
         LA    R1,2(,R1)           ADD LENGTH OF LENGTH FIELD
         STH   R1,PARMLNG          STORE IN LENGTH FIELD
         LA    R1,ERRORRET         ADDR. OF PROCESSING ROUTINE
         ST    R1,SUBPROC          STORE IN WORK AREA
         LA    R1,PARMLNG          ADDR. OF MESSAGE
         B     ISSUEMSG
*
ERRORRET DS    0H
         LA    R15,16              TERMINATE SUBMIT COMMAND PROCESSING
         B     GOBACK
         EJECT
*
***********************************************************************
*                                                                     *
*        PROMPT TERMINAL USER USING PARSE                             *
*                                                                     *
***********************************************************************
*
PARSE    DS    0H
         USING PPL,R4              BASE FOR PARSE PARM. LIST **BOH002
         L     R4,SUBPPL           GET ADDR. OF SUBMIT'S PPL **BOH002
         L     R1,PCLADR           ADDR. OF PCL
         ST    R1,PPLPCL           STORE IN PPL
         LA    R1,SUBANS           ADDR. OF ANSWER AREA PTR.
         ST    R1,PPLANS           STORE IN PPL
         LA    R1,SUBMSGL          ADDR. OF COMMAND BUFFER
         ST    R1,PPLCBUF          STORE IN PPL
KEY0     MODESET EXTKEY=SUPR,SAVEKEY=(2),                    **BOH002  *
               RELATED=KEYX        GET INTO SUPERVISOR KEY   **BOH002
         LR    R1,R4               ADDR. OF PPL              **BOH002
         CALLTSSR EP=IKJPARS,MF=(E,(1)) INVOKE PARSE
         LR    R4,R15              SAVE RETURN CODE          **BOH002
KEYX     MODESET KEYADDR=(2),RELATED=KEY0 BACK TO OUR KEY    **BOH002
         LTR   R4,R4               PARSE SUCCESSFUL ?        **BOH002
         BNZ   PARSFAIL            -NO, ERROR
         L     R14,SUBPROC         ADDR. OF PROCESSING ROUTINE
         BR    R14                 ENTER ROUTINE
         DROP  R4                  RELEASE BASE FOR PPL      **BOH002
         SPACE 3
*
* RELEASE STORAGE FOR PDL AND PDE'S
*
RLSPDL   DS    0H
         ST    R14,12(R13)         SAVE REG. 14
         LA    R1,SUBANS           ADDR. OF ANSWER AREA PTR. **BOH002
KEY0A    MODESET EXTKEY=SUPR,SAVEKEY=(2),                    **BOH002  *
               RELATED=KEYXA       GET INTO SUPERVISOR KEY   **BOH002
         IKJRLSA (1)                                         **BOH002
KEYXA    MODESET KEYADDR=(2),RELATED=KEY0A BACK TO OUR KEY   **BOH002
         L     R14,12(R13)         RESTORE REG. 14
         BR    R14
         EJECT
*
***********************************************************************
*                                                                     *
*        CLEAR PARAMETER BUFFER                                       *
*                                                                     *
*        INPUT :                                                      *
*              R7                  ADDR. OF PARAMETER BUFFER          *
*                                                                     *
*        EXIT:                                                        *
*              R14                 RETURN ADDRESS                     *
*                                                                     *
***********************************************************************
*
CLRPARM  DS    0H
         STM   R0,R3,SUBCLSAV      SAVE REGISTERS 0 TO 3
         LR    R0,R7               ADDR. OF PARAMETER BUFFER
         LA    R1,4088             LENGTH OF PARAM. BUFFER - PREFIX
         LM    R2,R3,ZEROES
         MVCL  R0,R2               CLEAR THE BUFFER
         LM    R0,R3,SUBCLSAV      RESTORE REGISTERS 0 TO 3
         BR    R14                 BACK TO CALLER
         EJECT
*
***********************************************************************
*                                                                     *
*        SAVE USERID IN WORK AREA                                     *
*                                                                     *
*        INPUT :                                                      *
*              R0                  LENGTH OF USERID                   *
*              R2                  ADDR. OF USERID                    *
*              R10                 PTR. TO EXIT WORK AREA (SUBWORK)   *
*                                                                     *
*        EXIT:                                                        *
*              USERID IN WORK AREA (SUBUSID)                          *
*              R14                 RETURN ADDRESS                     *
*                                                                     *
***********************************************************************
*
SAVUSID  DS    0H
         LR    R15,R0              LENGTH OF USERID
         BCTR  R15,0               SUBTRACT 1 FOR EXECUTE
         CH    R15,SUBUSLN         DO WE HAVE USERID OF SAME LENGTH ?
         BNE   SAVUS01             -NO, BRANCH
         EX    R15,COMPUSID        IS USERID ALREADY IN WORK AREA ?
         BER   R14                 -YES, RETURN
SAVUS01  DS    0H
         MVC   SUBUSID,BLANKS      CLEAR USERID
         MVC   SUBPSWD,BLANKS      CLEAR PASSWORD
         EX    R15,MOVEUSID        MOVE USERID TO WORK AREA
         STH   R15,SUBUSLN         SAVE LENGTH OF USERID - 1
         BR    R14                 RETURN
*
COMPUSID CLC   SUBUSID(0),0(R2)    COMPARE USERIDS
MOVEUSID MVC   SUBUSID(0),0(R2)    MOVE USERID TO WORK AREA
         EJECT
*
***********************************************************************
*                                                                     *
*        SAVE REST OF PARAMETER BEFORE INSERTION                      *
*                                                                     *
*        INPUT :                                                      *
*              R1                  PTR. TO PARAMETER TO BE SAVED      *
*              R10                 PTR. TO EXIT WORK AREA (SUBWORK)   *
*                                                                     *
*        EXIT:                                                        *
*              REST OF PARAMETER IN WORK AREA (SUBWKSP)               *
*              R14                 RETURN ADDRESS                     *
*              R15 : 0             NORMAL RETURN                      *
*                  : 8             ERROR: LONGER THAN 144 BYTES       *
*                                                                     *
***********************************************************************
*
SAVPARM  DS    0H
         MVI   SUBWKSP,C' '        CLEAR PARAMETER SAVE AREA
         MVC   SUBWKSP+1(L'SUBWKSP-1),SUBWKSP
         LA    R5,PARMTXT          START OF PARAMETER
         LR    R0,R1               START OF REST OF PARAMETER
         SR    R0,R5               LENGTH OF PREFIX
         LH    R15,PARMLNG         LENGTH OF PARAMETER
         SR    R15,R0              LENGTH OF REST TO BE SAVED
         STH   R15,SUBWKLN         STORE IN WORK AREA
         LTR   R15,R15             ANYTHING TO BE SAVED ?
         BNP   SAVPRET0            -NO, RETURN
         CH    R15,=H'144'         MORE THAN 144 CHARS. ?
         BH    SAVPTLG             -YES, ERROR
         BCTR  R15,0               SUBTRACT 1 FOR EXECUTE
         EX    R15,PARMMOVE        MOVE REST OF PARAMETER
SAVPRET0 DS    0H
         SR    R15,R15             INDICATE NORMAL RETURN
         BR    R14                 RETURN
SAVPTLG  DS    0H
         LA    R15,8               ERROR RETURN: PARAMETER TOO LONG
         BR    R14
*
PARMMOVE MVC   SUBWKSP(0),0(R1)    SAVE REST OF PARAMETER
         EJECT
*
***********************************************************************
*                                                                     *
*        RESTORE REST OF PARAMETER                                    *
*                                                                     *
*        INPUT :                                                      *
*              R1                  PTR. TO INSERTION POINT            *
*              R10                 PTR. TO EXIT WORK AREA (SUBWORK)   *
*                                                                     *
*        EXIT:                                                        *
*              PARAMETER RESTORED IN PARAMETER BUFFER (PARMENT)       *
*              R14                 RETURN ADDRESS                     *
*              R15 : 0             NORMAL RETURN                      *
*                  : 8             ERROR: LONGER THAN 144 BYTES       *
*                                                                     *
***********************************************************************
*
RESTPARM DS    0H
         L     R7,SUBCURP          ADDR. OF CURRENT PARAMETER ENTRY
         LA    R2,PARMTXT          PTR. TO START OF PARAMETER
         LR    R0,R1               END OF FIRST PART OF PARAMETER
         SR    R0,R2               LENGTH OF FIRST PART OF PARAMETER
         MVI   0(R1),C' '          PUT A BLANK BEHIND FIRST PART
         LA    R2,142              LENGTH OF PARAMETER TEXT - 2
         SR    R2,R0               LENGTH OF FIELD TO BE BLANKED
         BM    NOBLANKS            -MINUS, BRANCH
         EX    R2,BLANKOUT         BLANK OUT REST OF FIELD
NOBLANKS DS    0H
         LH    R15,SUBWKLN         LENGTH OF SAVED PART OF PARAMETER
         AR    R0,R15              NEW LENGTH OF PARAMETER
         STH   R0,PARMLNG          STORE NEW LENGTH OF PARAMETER
         CH    R0,=H'144'          IS MAX. SIZE EXCEEDED ?
         BH    RESTTLG             -YES, ERROR
         LTR   R15,R15             ANYTHING TO RESTORE ?
         BNP   RESTRET0            -NO, RETURN
         BCTR  R15,0               SUBTRACT 1 FOR EXECUTE
         EX    R15,PARMREST        RESTORE REST OF PARAMETER
RESTRET0 DS    0H
         SR    R15,R15             INDICATE NORMAL RETURN
         BR    R14                 RETURN
RESTTLG  DS    0H
         LA    R15,8               ERROR: PARAMETER TOO LONG
         BR    R14                 BACK TO CALLER
*
PARMREST MVC   0(0,R1),SUBWKSP     RESTORE REST OF PARAMETER
BLANKOUT MVC   1(0,R1),0(R1)       BLANK OUT REST OF FIELD
         EJECT
*
***********************************************************************
*                                                                     *
*        GENERATE JCL CARD FROM PARAMETER BUFFER                      *
*                                                                     *
*        INPUT :                                                      *
*              R1                  PTR. TO CARD BUFFER                *
*              R2                  PTR. TO START OF OPERAND FIELD     *
*              R7                  PTR. TO FIRST PARAM. (SUBCURP)     *
*              R10                 PTR. TO EXIT WORK AREA (SUBWORK)   *
*                                                                     *
*        EXIT:                                                        *
*              JCL CARD IN CARD BUFFER                                *
*              R14                 RETURN ADDRESS                     *
*              R15 : 0             NORMAL RETURN                      *
*                  : 8             ERROR: LONGER THAN 65 BYTES        *
*                                                                     *
***********************************************************************
*
PARMGLUE DS    0H
         L     R7,SUBCURP          PTR. TO 1ST PARAM. TO PROCESS
         LA    R0,70(,R1)          LAST USABLE CHAR. OF CARD
         LH    R3,PARMLNG          LENGTH OF PARAMETER
         LTR   R3,R3               ZERO ?
         BNP   PARMBMP             -YES, SKIP
PARMNEXT DS    0H
         LA    R4,0(R2,R3)         END OF PARAMETER IN CARD
         CR    R4,R0               PAST COL. 71 ?
         BH    NOFIT               -YES, DOES NOT FIT IN CARD
         BCTR  R3,0                SUBTRACT 1 FOR EXECUTE
         EX    R3,GLUEMOVE         MOVE PARAMETER TO CARD
         LR    R2,R4               POINT PAST PARAMETER
PARMBMP  DS    0H
         LA    R7,PARMNXT          ADDR. OF NEXT PARAMETER ENTRY
         C     R7,SUBPARM          THIS ENTRY FREE ?
         BE    PARMLAST            -YES, THIS IS END-OF-STATEMENT
         LH    R3,PARMLNG          GET LENGTH OF NEXT PARAMETER
         LTR   R3,R3               DUMMY PARAMETER ?
         BNP   PARMBMP             -YES, SKIP
         MVI   0(R2),C','          PUT A COMMA BEHIND LAST PARAMETER
         LA    R2,1(,R2)           ADJUST PTR. TO FREE SPACE IN CARD
         B     PARMNEXT            PROCESS NEXT PARAMETER
*
NOFIT    DS    0H
         LA    R0,71(,R1)          SEE IF PARAMETER FITS IN COL. 71
         CR    R4,R0               DOES IT FIT NOW ?
         BH    NOFIT71             -NO, BRANCH
         LA    R15,PARMNXT         ADDR. OF NEST PARAMETER ENTRY
         C     R15,SUBPARM         THIS ENTRY FREE ?
         BNE   NOFIT71             -NO, NOT LAST PARAMETER
         BCTR  R3,0                SUBTRACT 1 FROM PARAMETER LENGTH
         EX    R3,GLUEMOVE         MOVE PARAMETER
         B     PARMLAST
NOFIT71  DS    0H
         CH    R3,=H'65'           PARAMETER > 65 BYTES ?
         BH    PARMGTLG            -YES, NOT SUPPORTED
         ST    R7,SUBCURP          THIS PARAM. TO BE PROCESSED AGAIN
         NI    SUBFLG1,255-SUBLAST THIS IS NOT LAST CARD OF STMT.
         SR    R15,R15             INDICATE NORMAL RETURN
         BR    R14                 RETURN TO CALLER
*
PARMLAST DS    0H
         OI    SUBFLG1,SUBLAST     THIS IS LAST CARD OF STATEMENT
         SR    R15,R15             INDICATE NORMAL RETURN
         BR    R14                 RETURN TO CALLER
*
PARMGTLG DS    0H
         LA    R15,8               ERROR: PARAMETER > 65 BYTES
         BR    R14                 BACK TO CALLER
*
GLUEMOVE MVC   0(0,R2),PARMTXT     MOVE PARAMETER TO CARD
         EJECT
*
***********************************************************************
*                                                                     *
*        SEPARATE PARAMETERS OF JCL STATEMENT                         *
*                                                                     *
*        INPUT :                                                      *
*              R0                  PTR. TO OPERAND FIELD              *
*              R1                  PTR. TO JCL STATEMENT              *
*              R8                  PTR. TO CONTROL SWITCHES           *
*              R10                 PTR. TO EXIT WORK AREA (SUBWORK)   *
*                                                                     *
*        EXIT:                                                        *
*              PARAMETERS IN PARAMETER BUFFER (PARMBUF)               *
*              R14                 RETURN ADDRESS                     *
*              R15 : 0             NORMAL RETURN                      *
*                  : 8             ERROR: LONGER THAN 144 BYTES       *
*                                                                     *
***********************************************************************
*
PARMSEP  DS    0H
         LA    R2,1                VALUE OF INCREMENT
         LA    R3,70(R1)           LAST CHAR. OF CARD
         LTR   R1,R0               OPERAND WITHIN STATEMENT LIMITS?
         BNP   PARMSJCL            -NO, BRANCH
         LR    R5,R1               SAVE START OF OPERAND
         TM    SUBCDFLG,SUBOPCNT   OPERAND TO BE CONTINUED ?
         BZ    NOOPCNT             -NO, BRANCH
         L     R7,SUBCURP          ADDR. OF CURRENT PARAMETER
         L     R6,SUBPARCT         GET COUNT OF OPEN PARENTHESES
         B     CHKPAR              RESUME PROCESSING OF OPERAND
NOOPCNT  DS    0H
         L     R7,SUBPARM          GET ADDR. OF FREE PARM. ENTRY
         SR    R6,R6               COUNT OF PARENTHESES
SRCOPER  DS    0H
         CLI   0(R1),C'('          LEFT PARENTHESIS ?
         BE    LEFTPAR             -YES, BRANCH
         CLI   0(R1),C''''         APOSTROPHE ?
         BE    QUOTE               -YES, BRANCH
         CLI   0(R1),C','          COMMA ?
         BE    ENDPARM             -YES, END OF PARAMETER
         CLI   0(R1),C' '          BLANK ?
         BE    ENDCARD             -YES, END OF CARD
OPERBXL  DS    0H
         BXLE  R1,R2,SRCOPER       TEST NEXT CHAR.
ENDCARD  DS    0H
         CR    R1,R5               LAST PARAM. DUMMY (', ') ?
         BE    MUSTCONT            -YES, DO NOT MOVE
         BAL   R11,PARMOVE         MOVE THE PARAMETER
         NI    SUBCDFLG,255-SUBCONT NO CONTINUATION OF THIS STATEMENT
         SR    R15,R15             NORMAL RETURN
         BR    R14                 BACK TO CALLER
MUSTCONT DS    0H
         OI    SUBCDFLG,SUBCONT    THIS STATEMENT IS TO BE CONTINUED
         SR    R15,R15             NORMAL RETURN
         BR    R14                 BACK TO CALLER
         EJECT
*
* LEFT PARENTHESIS FOUND. CHECK FOR RIGHT PARENTHESIS
*
LEFTPAR  DS    0H
         LA    R6,1(,R6)           ONE MORE LEFT PARENTHESIS
         OI    PARMTYP,PARMTPAR    SHOW PARENTHESES PRESENT
PARBXL   DS    0H
         BXLE  R1,R2,CHKPAR        TEST NEXT CHAR.
         B     OPERCNT
PARCOM   DS    0H
         OI    PARMTYP,PARMTSUB    SHOW SUBPARAMETERS PRESENT
         B     PARBXL
CHKPAR   DS    0H
         CLI   0(R1),C''''         QUOTE WITHIN PARENTHESES  **BOH001
         BE    PQUOTE              -YES, FIND CLOSING QUOTE  **BOH001
         CLI   0(R1),C','          COMMA WITHIN PARENTHESES ?
         BE    PARCOM              -YES, SHOW SUBPARAMETERS PRESENT
         CLI   0(R1),C'('          ANOTHER LEFT PARENTHESIS ?
         BE    LEFTPAR             -YES, ADD TO COUNT
         CLI   0(R1),C' '          END OF CARD ?
         BE    OPERCNT             -YES, OPERAND CONTIN. ON NEXT CARD
         CLI   0(R1),C')'          RIGHT PARENTHESIS ?
         BNE   PARBXL              -NO, CHECK NEXT CHARACTER
         SH    R6,=H'1'            REDUCE PARENTHESIS COUNT
         BNZ   PARBXL              -NOT ZERO, TEST AGAIN
         B     OPERBXL             SEARCH FOR DELIMITER
OPERCNT  DS    0H
         LR    R2,R1               ADDR. OF LAST CHAR.
         BCTR  R2,0                SUBTRACT ONE
         CLI   0(R2),C','          IS IT A COMMA ?
         BNE   PARMSJCL            -NO, RIGHT PARENTHESIS MISSING
         ST    R6,SUBPARCT         SAVE COUNT OF PARENTHESES
         OI    SUBCDFLG,SUBOPCNT   SHOW OPERAND TO BE CONTINUED
         B     ENDCARD
*
* QUOTE FOUND. SEARCH FOR ANOTHER QUOTE.
*
QUOTE    DS    0H
         BXLE  R1,R2,CHKQUOTE      TEST NEXT CHAR.
         B     PARMSJCL            NO OTHER QUOTE, JCL ERROR
CHKQUOTE DS    0H
         CLI   0(R1),C''''         QUOTE ?
         BNE   QUOTE               -NO, CHECK NEXT CHARACTER
         B     OPERBXL             SEARCH FOR DELIMITER
*                                                            **BOH001
PQUOTE   DS    0H                                            **BOH001
         BXLE  R1,R2,CHKPQUOT      TEST NEXT CHAR.           **BOH001
         B     PARMSJCL            NO OTHER QUOTE, JCL ERROR **BOH001
CHKPQUOT DS    0H                                            **BOH001
         CLI   0(R1),C''''         QUOTE ?                   **BOH001
         BNE   PQUOTE              -NO, CHECK NEXT CHARACTER **BOH001
         B     PARBXL              SEARCH FOR CLOSING PAREN. **BOH001
*
* COMMA FOUND. MOVE PRECEDING PARAMETER.
*
ENDPARM  DS    0H
         BAL   R11,PARMOVE         MOVE PARAMETER
         B     OPERBXL             TEST NEXT CHARACTER
*
PARMSJCL DS    0H
         LA    R15,8               INDICATE JOB CONTROL ERROR
         BR    R14                 BACK TO CALLER
         EJECT
*
***********************************************************************
*                                                                     *
*        ROUTINE TO MOVE A PARAMETER INTO A PARAMETER BUFFER ENTRY    *
*                                                                     *
***********************************************************************
*
PARMOVE  DS    0H
         LR    R4,R1               END OF PARAMETER
         SR    R4,R5               LENGTH OF PARAMETER
         BNP   NULLPARM            -ZERO, DUMMY PARAMETER
         LH    R6,PARMLNG          LENGTH OF TEXT ALREADY STORED
         LR    R0,R6
         LA    R6,PARMTXT(R6)      FIRST CHAR. BEHIND TEXT ALREADY ST.
         AR    R0,R4               TOTAL LENGTH OF PARAMETER
         STH   R0,PARMLNG          STORE IN LENGTH FIELD
         BCTR  R4,0                SUBTRACT 1 FOR EXECUTE
         EX    R4,PARMMVC          MOVE PARAMETER
NULLPARM DS    0H
         ST    R7,SUBCURP          SAVE PTR. TO CURRENT PARAM. ENTRY
         LA    R7,PARMNXT          NEXT PARAMETER ENTRY
         ST    R7,SUBPARM          SAVE PTR. TO NEXT PARAM. ENTRY
         LA    R5,1(,R1)           START OF NEXT PARAMETER
         SR    R6,R6               CLEAR COUNT OF PARENTHESES
         BR    R11                 BACK TO CALLER
*
PARMMVC  MVC   0(0,R6),0(R5)       MOVE PARAMETER
         EJECT
*
***********************************************************************
*                                                                     *
*        CONSTANTS AND MESSAGE PROTOTYPES                             *
*                                                                     *
***********************************************************************
*
ZEROES   DC    D'0'                BINARY ZEROES
         SPACE 1
BLANKS   DC    CL8' '
ZAKZAK   DC    C'// '
DUMYCMD  DC    C'XX'
PARMUSR  DC    C'USER='
PARMPSW  DC    C'PASSWORD='
PARMNTF  DC    C'NOTIFY='
*
RENLNG   DC    AL2(L'RENMSG+2)
RENMSG   DC    C'INVALID - REENTER'
JCLLNG   DC    AL2(L'JCLMSG+2)
JCLMSG   DC    C'JCL ERROR IN:'
LONGLNG  DC    AL2(L'LONGMSG+2)
LONGMSG  DC    C'PARAMETER TOO LONG'
PARSLNG  DC    AL2(L'PARSMSG+2)
PARSMSG  DC    C'CANNOT PROMPT, SUBMIT CANCELED'
         SPACE 3
         LTORG
         EJECT
*
***********************************************************************
*                                                                     *
*        PARAMETER LIST FOR PARSE                                     *
*                                                                     *
***********************************************************************
*
PROMPT   IKJPARM
*
USERID   IKJPOSIT UID2PSWD,PROMPT='USERID',                            *
               HELP='USERID AND PASSWORD FOR ACCOUNT FIELD'
         IKJENDP
PCLADR   DC    A(PROMPT)           ADDR. OF PCL FOR USERID/PASSWORD
         SPACE 3
.END     ANOP
         END
