         MACRO                                              *HMD 08/82*
&NAME    TABLE &T,&G                                        *HMD 08/82*
         LCLA  &L                                           *HMD 08/82*
&L       SETA  K'&T-1                                       *HMD 08/82*
&NAME    DC    AL1(&L),AL3(&G),C'&T'                        *HMD 08/82*
         MEND                                               *HMD 08/82*
         EJECT                                              *HMD 08/82*
ENQ      TITLE 'ENQ - DISPLAY MVS ENQUEUE STRUCTURE - MVS/SP 1.3'
***********************************************************************
*        THIS COMMAND HAS BEEN UPDATED FOR USE UNDER MVS              *
*        SYSTEM PRODUCT RELEASE 1.3 BY:                               *
*                                                                     *
*        HOWARD M. DEAN                                               *
*        SR. SYSTEMS PROGRAMMER                                       *
*        GTE DATA SERVICES                                            *
*        4750 LINCOLN BLVD.                                           *
*        MARINA DEL REY, CA 90291                                     *
*                                                                     *
***********************************************************************
ENQ      TSBEGIN WORK=TSDUSIZE                              *HMD 08/82*
         LA    R2,DWORK                 1ST BYTE OF AREA    *HMD 08/82*
         LA    R3,TSDUSIZE              USER AREA SIZE      *HMD 08/82*
         SLR   R4,R4                    CONTENTS NOT IMPT   *HMD 08/82*
         SLR   R5,R5                    PAD WITH ZEROS      *HMD 08/82*
         MVCL  R2,R4                    CLEAR MEMORY        *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
         LA    R0,1                     GET A CONSTANT      *HMD 08/82*
         ST    R0,OLD                   SET # OF SEGMENTS   *HMD 08/82*
         LA    R0,LINELEN               GET LENGTH OF LINE  *HMD 08/82*
         SLL   R0,16                    SHIFT TO HI ORDER   *HMD 08/82*
         ST    R0,LINE                  SAVE IN DESCRIPTOR  *HMD 08/82*
         MVC   TSDGMAIN(LGMAIN),GMAIN   INIT THE GETMAIN LIST
         MVC   TSDESTAE(ESTAELEN),ESTAEL     AND ESTAE LIST *HMD 08/82*
         BAL   RLINK,GQSCORE            GET GQSCAN AREA     *HMD 08/82*
         OI    FLAG1,$CNFL              1ST TIME TRY CONFLICTS
         L     R3,CVTPTR                CHECK FOR SP 1.2/3  *HMD 08/82*
         ICM   R3,B'1111',CVTLQCB-CVT(R3)                   *HMD 08/82*
         BNZ   NONSUPT                  ENQ NOT SUPPORTED   *HMD 08/82*
         EJECT                                              *HMD 08/82*
***********************************************************************
*                                                                     *
*        EXTABLISH ESTAE EXIT TO CLEAN UP IN CASE OF ABEND            *
*                                                                     *
***********************************************************************
         ESTAE CLEANUP,CT,PURGE=NONE,ASYNCH=YES,TERM=NO,    *HMD 08/82*X
               MF=(E,TSDESTAE)                              *HMD 08/82*
         EJECT                                              *HMD 08/82*
***********************************************************************
*                                                                     *
*        AT THIS POINT THE PROGRAM USES THE "GQSCAN" MACRO            *
*        TO EXTRACT INFORMATION FROM THE GRS ADDRESS SPACE            *
*                                                                     *
***********************************************************************
         SPACE 3                                            *HMD 08/82*
SCAN     DS    0H                                           *HMD 08/82*
         L     R4,GQAREA                                    *HMD 08/82*
         L     R3,GQLEN                                     *HMD 08/82*
GQCODE   GQSCAN AREA=((R4),(R3)),SCOPE=ALL,REQLIM=MAX,      *HMD 08/82*X
               MF=(E,GQLIST)                                *HMD 08/82*
         ST    R0,GQRIBI                SAVE RIB INFO       *HMD 08/82*
         ST    R1,GQRIBN                SAVE NUMBER OF RIBS *HMD 08/82*
         CH    R15,=H'16'               CHECK RETURN CODE   *HMD 08/82*
         BH    BADQUEUE                 ERROR IN GQSCAN     *HMD 08/82*
BRTAB    B     *+4(R15)                                     *HMD 08/82*
         B     FORMAT                   RC=0 RESOURCE FOUND *HMD 08/82*
         B     PGMERR                   RC=4 ERROR          *HMD 08/82*
         B     QFULL                    RC=8 TRY AGAIN      *HMD 08/82*
         B     BADQUEUE                 RC=12 ABNORMAL END  *HMD 08/82*
         B     BADQUEUE                 RC=16 INVALID RC    *HMD 08/82*
         SPACE 2
QFULL    BAL   RLINK,NEWGQCOR           GET MORE CORE       *HMD 08/82*
         B     SCAN                     RETURN AGAIN        *HMD 08/82*
*                                                           *HMD 08/82*
* PROGRAM ERRORS                                            *HMD 08/82*
*                                                           *HMD 08/82*
PGMERR   DS    0H                                           *HMD 08/82*
*        SETPSW ENABLE                                      *HMD 08/82*
         EX    0,*                      A NICE PRECISE 0C3  *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
         EJECT                                              *HMD 08/82*
***********************************************************************
*
*        FORMAT THE TABELED ENQUEUE STRUCTURE
*              THIS ROUTINE CONSTRUCTS THE LINE TO BE SENT TO THE
*              TERMINAL, AND PERFORMS THE REQUIRED SELECTION (AS
*              DETERMINED BY THE COMMAND SCAN SECTION) OF OUTSTANDING
*              ENQUEUE REQUESTS
*
***********************************************************************
         SPACE 3                                            *HMD 08/82*
FORMAT   DS    0H                                           *HMD 08/82*
         LUSE  RIBE,R2                  -> RIB EXTENSION    *HMD 08/82*
         LUSE  RIB,R3                   -> RIB              *HMD 08/82*
         LUSE  RIBVAR,R4                -> RIB VAR SECTION  *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
         L     R3,GQAREA                -> 1ST RIB          *HMD 08/82*
         L     R9,GQRIBN                R9 = NUMBER OF RIBS *HMD 08/82*
FRIB     DS    0H                        PROCESS RIB SECTION*HMD 08/82*
         MVI   LSCOPE,C' '               CLEAR THE LINE     *HMD 08/82*
         MVC   LTYPE(LMNAME-LTYPE),LSCOPE                   *HMD 08/82*
         MVI   LMNAME,C' '               CLEAR MINOR NAME   *HMD 08/82*
         MVC   LMNAME+1(L'LMNAME-1),LMNAME                  *HMD 08/82*
         CLC   RIBQCB,=F'0'              END OF CHAIN?      *HMD 08/82*
         BE    COMGET                    YES. GET NEXT CMD  *HMD 08/82*
         LR    R4,R3                     -> RIB             *HMD 08/82*
         AH    R4,GQRIBI                 -> RIB VAR SECTION *HMD 08/82*
         MVC   LJNAME,RIBQNAME           MOVE MAJOR NAME TO LINE
         SPACE 1                                            *HMD 08/82*
FRIBVAR  DS    0H                       PROCESS RIBVAR SEC  *HMD 08/82*
         SR    R1,R1                    CLEAR FOR INSERT    *HMD 08/82*
         IC    R1,RIBRNMLN              GET MINOR NAME LEN  *HMD 08/82*
         CH    R1,LMNMAX                OVER MY MAX LEN ?   *HMD 08/82*
         BNH   FMINMOVE                 NO, DON'T FORCE IT  *HMD 08/82*
         LH    R1,LMNMAX                SET TO MY MAX       *HMD 08/82*
FMINMOVE DS    0H                                           *HMD 08/82*
         BCTR  R1,0                     -1 FOR EXECUTED MVC *HMD 08/82*
         EX    R1,FMINMVC               MOVE MINOR NAME     *HMD 08/82*
         LR    R11,R1                   SAVE ORIGINAL LENGTH*HMD 08/82*
         TRT   RIBRNAME,TRTMN            CHECK FOR UNPRINT  *HMD 08/82*
         EX    R11,*-6                                      *HMD 08/82*
         BZ    FMINDONE                 NONE, PRINT AS CHAR *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FHEXMIN  LA    R5,RIBRNAME              -> RIB MINOR NAME   *HMD 08/82*
         LA    R6,1                     BXLE INCREMENT      *HMD 08/82*
         LR    R8,R1                    STARTING ADDRESS    *HMD 08/82*
         SR    R8,R5                    GET GOOD CHAR LEN   *HMD 08/82*
         LA    R8,LMNAME(R8)            OUTPUT AREA ADDRESS *HMD 08/82*
         LA    R7,1(R11,R5)             END OF STRING BXLE  *HMD 08/82*
         MVC   0(3,R8),=C' X'''                             *HMD 08/82*
         LA    R8,3(,R8)                                    *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
HEXLOOP  UNPK  DWORK(3),0(2,R1)                             *HMD 08/82*
         MVC   0(2,R8),DWORK                                *HMD 08/82*
         TR    0(2,R8),HEXTAB                               *HMD 08/82*
         LA    R8,2(,R8)                                    *HMD 08/82*
         AR    R1,R6                INCREMENT COUNT         *HMD 08/82*
         BXLE  R5,R6,HEXLOOP                                *HMD 08/82*
         MVI   0(R8),C''''                                  *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FMINDONE DS    0H                   POINT TO RIBE'S         *HMD 08/82*
         LR    R2,R4                -> MINOR NAME           *HMD 08/82*
         AH    R2,RIBVLEN           ADD LEN OF MINOR        *HMD 08/82*
         L     R7,RIBNRIBE          LOAD NUMBER OF RIBES    *HMD 08/82*
* R2 NOW POINTS TO RIB EXTENSION                            *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FQELLOOP DS    0H                   FORMAT RIB EXTENSIONS   *HMD 08/82*
         TM    FLAG1,$GLOBAL        AM I TO DO EVERYTHING ? *HMD 08/82*
         BO    DOLINE               YES, THEN GET AT IT     *HMD 08/82*
         TM    FLAG1,$CNFL          CONFLICT CHECKING ?     *HMD 08/82*
         BNO   FQELCKF              NO, THEN GO CHECK FINDS *HMD 08/82*
         CLC   RIBNTWE,=F'0'        WAITING FOR EXCLUSIVE?  *HMD 08/82*
         BNE   DOLINE               GO DISPLAY CONFLICTS    *HMD 08/82*
         CLC   RIBNTWS,=F'0'        WAITING FOR SHARED?     *HMD 08/82*
         BE    FQELEND              NO, GET NEXT RIB        *HMD 08/82*
         B     DOLINE               GO DISPLAY CONFLICTS    *HMD 08/82*
         SPACE 1
FQELCKF  DS    0H                    TEST FOR FINDS         *HMD 08/82*
         TM    FLAG1,$FIND           IS IT A FIND REQUEST ? *HMD 08/82*
         BO    FQELFIND              YES, KEEP GOING        *HMD 08/82*
         EX    0,*                   PGM ERROR, CAN'T BE HERE
         SPACE 1                                            *HMD 08/82*
FQELFIND DS    0H                                           *HMD 08/82*
         TM    FLAG2,$FMAJ              FIND ON MAJOR NAME ?*HMD 08/82*
         BNO   FQELFMIN                 NO, GO TEST FOR MINOR
         LH    R1,FMAJLEN               GET THE COMPARE LEN *HMD 08/82*
         EX    R1,FMAJCLC               SEE IF THIS MAJOR NAME
         BNE   FQELEND                  NO, THE SKIP TO NEXT RIB
FQELFMIN DS    0H                                           *HMD 08/82*
         TM    FLAG2,$FMIN              CHECK FOR MINOR NAME*HMD 08/82*
         BNO   FQELFJOB                 NO, GO CHECK FOR JOB NAME
         LH    R1,FMINLEN               GET THE COMPARE LEN *HMD 08/82*
         EX    R1,FMINCLC               SEE IF THIS MINOR NAME
         BNE   FQELEND                  NO, GO GET NEXT RIB *HMD 08/82*
FQELFJOB DS    0H                                           *HMD 08/82*
         TM    FLAG2,$FJOB              FIND ON JOB NAME ?  *HMD 08/82*
         BNO   DOLINE                   NO, THEN GO DISPLAY LINE
         LH    R14,FJOBLEN              GET LEN TO COMPARE  *HMD 08/82*
         EX    R14,FJOBCLC              IS THIS THE ONE ?   *HMD 08/82*
         BNE   FQELNEXT                 NO, THEN GET NEXT RIBE        *
         EJECT                                              *HMD 08/82*
DOLINE   DS    0H                                           *HMD 08/82*
         MVC   LJOB,RIBEJBNM        MOVE JOB NAME TO LINE   *HMD 08/82*
         MVI   LSCOPE,#SYSS         ASSUME SYSTEMS WIDE ENQ *HMD 08/82*
         TM    RIBSCOPE,RIBSYSS     'SYSTEMS' SCOPE?        *HMD 08/82*
         BO    FQELSYS              CHECK SHARED/EXCLUSIVE  *HMD 08/82*
         MVI   LSCOPE,#SYS          ASSUME 'SYSTEM' SCOPE   *HMD 08/82*
         TM    RIBSCOPE,RIBSYS      IS MINOR QCB SYSTEM WIDE*HMD 08/82*
         BO    FQELSYS              YES, SKIP NEXT MOVE     *HMD 08/82*
         MVI   LSCOPE,#STEP         MARK AS STEP WIDE ONLY  *HMD 08/82*
FQELSYS  DS    0H                                           *HMD 08/82*
         MVI   LTYPE,#SHR           ASSUME A SHARED ENQ     *HMD 08/82*
         TM    RIBERFLG,RIBETYPE    IS THIS QEL SHARED ?    *HMD 08/82*
         BO    FQELSHR              YES, THEN SKIP THE MOVE *HMD 08/82*
         MVI   LTYPE,#EXC           MARK NON-SHARED         *HMD 08/82*
FQELSHR  DS    0H                                           *HMD 08/82*
         MVI   LHAS,#GOT            ASSUME HE HAS RESOURCE  *HMD 08/82*
         TM    RIBESFLG,RIBESTAT    IS HE WAITING ?         *HMD 08/82*
         BO    FQELGOT              NO, SKIP TO NEXT TEST   *HMD 08/82*
         MVI   LHAS,#WAIT           MARK AS WAITING         *HMD 08/82*
FQELGOT  DS    0H                                           *HMD 08/82*
         MVI   LSYS,C' '            ASSUME NOT RESERVE      *HMD 08/82*
         TM    RIBERFLG,RIBERESV    IS THIS A RESERVE ?     *HMD 08/82*
         BZ    FQELCONV             NO, SKIP TO THE NEXT    *HMD 08/82*
         MVI   LSYS,#RES            MARK AS A RESERVE       *HMD 08/82*
         B     FQELSETU             CONTINUE WITH CODE      *HMD 08/82*
FQELCONV TM    RIBERFLG,RIBERESC    CONVERTED RESERVE?      *HMD 08/82*
         BZ    FQELRES              CHECK FOR MUST COMPLETE *HMD 08/82*
         MVI   LSYS,#RESC           MOVE IN RESERVE COMPLETE*HMD 08/82*
         B     FQELRES                                      *HMD 08/82*
FQELSETU L     R11,RIBEUCB          MOVE IN UCB VOL SER     *HMD 08/82*
         LUSE  UCBOB,R11            ADDRESS THE UCB         *HMD 08/82*
         MVC   LUCB(6),UCBVOLI      MOVE IN UCB VOL SER     *HMD 08/82*
         MVC   LUCB+7(3),UCBNAME    MOVE IN DEVICE ADDR     *HMD 08/82*
         MVI   LUCB+6,C'-'                                  *HMD 08/82*
         LDROP R11                                          *HMD 08/82*
FQELRES  DS    0H                                           *HMD 08/82*
         MVI   LMC,C' '             CLEAR MC FLAG           *HMD 08/82*
         TM    RIBERFLG,RIBEMC      MUST COMPLETE?          *HMD 08/82*
         BZ    FQELPUT              NO, PUT OUT LINE        *HMD 08/82*
         MVI   LMC,#MUST            INDICATE MUST COMPLETE  *HMD 08/82*
FQELPUT  DS    0H                   PUT OUT A LINE          *HMD 08/82*
         LA    R1,IOPL              POINT TO PARMS          *HMD 08/82*
         L     R15,TSDAPUTL         LOAD ENTRY POINT        *HMD 08/82*
         PUTLINE PARM=PTPB,OUTPUT=(LINE,TERM,SINGLE,DATA),  *HMD 08/82*X
               MF=(E,IOPL),ENTRY=(15)                       *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
FQELNEXT DS    0H                                           *HMD 08/82*
         AH    R2,GQRIBI+2          ADD LENGTH OF RIB       *HMD 08/82*
         LTR   R7,R7                CHECK FOR ZERO          *HMD 08/82*
         BNP   FQELEND              END OF RIBE BLOCKS      *HMD 08/82*
         BCT   R7,FQELLOOP          PROCESS ALL QELS        *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
FQELEND  DS    0H                                           *HMD 08/82*
* POINT R3 TO NEXT RIB AND RETURN TO LOOP                   *HMD 08/82*
         L     R7,RIBNRIBE          LOAD NUMBER OF RIBS     *HMD 08/82*
         MH    R7,GQRIBI+2          X LENGTH OF ONE RIBE    *HMD 08/82*
         AH    R7,GQRIBI            + LENGTH OF A RIB       *HMD 08/82*
         AH    R7,RIBVLEN           + VARIABLE SECTION LEN  *HMD 08/82*
         AR    R3,R7                POINT TO NEXT RIB       *HMD 08/82*
         LTR   R9,R9                CHECK FOR ANOTHER       *HMD 08/82*
         BNP   COMGET               GET ANOTHER COMMAND     *HMD 08/82*
         BCT   R9,FRIB              PROCESS NEXT RIB        *HMD 08/82*
         B     COMGET               END OF RIBS (YUM!!)     *HMD 08/82*
         SPACE 5                                            *HMD 08/82*
FMAJCLC  CLC   FMAJ(0),LJNAME           << EXECUTED >>      *HMD 08/82*
FMINCLC  CLC   FMIN(0),LMNAME           << EXECUTED >>      *HMD 08/82*
FJOBCLC  CLC   FJOB(0),RIBEJBNM         << EXECUTED >>      *HMD 08/82*
FMINMVC  MVC   LMNAME(0),RIBRNAME       << EXECUTED >>      *HMD 08/82*
         LDROP R2,R3,R4                                     *HMD 08/82*
         EJECT                                              *HMD 08/82*
***********************************************************************
*
*        ASK THE USER FOR A COMMAND.  WHEN YOU GET ONE SEARCH THE
*        COMMAND TABLE FOR A MATCH, IF NO MATCH ASK HIM AGAIN,
*        IF YOU GET A HIT GO PROCESS THE COMMAND
*
***********************************************************************
         SPACE 3                                            *HMD 08/82*
COMGET   DS    0H                                           *HMD 08/82*
         LA    R1,MSGMODE               GET MY MODE MSG     *HMD 08/82*
         ST    R1,OLD+4                 AND PUT IT IN THE OLD
         L     R15,TSDAPTGT             GET EPA OF IKJPTGT  *HMD 08/82*
         LA    R1,IOPL                  GET THE IO PARM LIST*HMD 08/82*
*        TELL USER WE WANT INPUT AND WAIT FOR HIM TO TALK   *HMD 08/82*
         PUTGET PARM=PGPB,OUTPUT=(OLD,,MODE),ENTRY=(15),    *HMD 08/82*+
               TERMGET=(EDIT),MF=(E,(1))                    *HMD 08/82*
         CH    R15,=H'4'                A BAD ERROR ?       *HMD 08/82*
         BH    EXIT                     YES, THE GIVE UP    *HMD 08/82*
         L     R1,PGPBIBUF              GET COMMAND BUFFER  *HMD 08/82*
         ST    R1,CSPLCBUF              INTO THE LIST       *HMD 08/82*
         LA    R1,CSPL                  -> LIST             *HMD 08/82*
         L     R15,TSDASCAN             GET EPA OF IKJSCAN  *HMD 08/82*
         BALR  R14,R15                  GO SCAN THE COMMAND *HMD 08/82*
*        INVOKE IKJSCAN TO FORMAT THE COMMAND BUFFER        *HMD 08/82*
         LTR   R15,R15                  CHECK RETURN FROM IKJSCAN
         BNZ   SCANERR                  AND ERROR IS A BAD ONE
         CLI   CSOAFLG,X'10'            IS BUFFER EMPTY ?   *HMD 08/82*
         BE    AGAIN                    YES, THE GO FREE UP & CONTINUE
         TM    CSOAFLG,X'28'            IS THERE A VALID COM THERE
         BNZ   COMINVL                  NO, THEN TELL USER  *HMD 08/82*
         L     R1,CSOACNM               GET THE COMMAND ADDR*HMD 08/82*
         LH    R0,CSOALNM               GET THE LEN OF THE NAME
         BCTR  R0,0                     REDUCE IT FOR TEST  *HMD 08/82*
         LA    R15,COMTAB               -> TABLE OF VALID COMMANDS
         SR    R14,R14                  CLEAR A WORK REG    *HMD 08/82*
COMLOOP  DS    0H                                           *HMD 08/82*
         IC    R14,0(,R15)              GET EX LEN OF COMMAND
         CR    R14,R0                   ARE THEY THE SAME   *HMD 08/82*
         BNE   COMNEXT                  NO, GO TRY THE NEXT ONE
         EX    R14,COMCLC               CHECK THE TEXT      *HMD 08/82*
         BE    COMHAVE                  = IS A HIT ON THE COMMAND
COMNEXT  DS    0H                                           *HMD 08/82*
         LA    R15,5(R14,R15)           POINT TO NEXT COMMAND
         CLI   0(R15),XFF               END OF TABLE ?      *HMD 08/82*
         BE    COMINVL                  YES, THEN INVALID COMMAND
         B     COMLOOP                  GO TRY NEXT ONE     *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
COMHAVE  DS    0H                                           *HMD 08/82*
         MVC   DWORK(4),0(R15)          GET ADDR OF COMMAND *HMD 08/82*
         L     R15,DWORK                SO I CAN USE IT     *HMD 08/82*
         BR    R15                      GO PROCESS THE COMMAND
         SPACE 3                                            *HMD 08/82*
COMCLC   CLC   4(0,R15),0(R1) << EXECUTED >>                *HMD 08/82*
         EJECT                                              *HMD 08/82*
COMINVL  DS    0H                        INVALID COMMAND ENTERED
         LA    R1,MSGCOM                GET INVVALID MSG    *HMD 08/82*
         ST    R1,OLD+4                 PUT IT IN THE OLD   *HMD 08/82*
         LA    R1,IOPL                  GET THE LIST ADDR   *HMD 08/82*
         L     R15,TSDAPUTL             GET PUTLINE ADDRESS *HMD 08/82*
         PUTLINE PARM=PTPB,OUTPUT=OLD,MF=(E,(1)),ENTRY=(15) *HMD 08/82*
         LTR   R15,R15                  DID IT WORK ?       *HMD 08/82*
         BNZ   EXIT                     NO, THEN QUIT       *HMD 08/82*
         B     COMGET                   GO TRY AGAIN        *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
SCANERR  DS    0H                                           *HMD 08/82*
         EX    0,*                      DIE A LOT           *HMD 08/82*
         EJECT                                              *HMD 08/82*
CONFL    DS    0H                        CONFLICT COMMAND   *HMD 08/82*
         XC    FLAGS,FLAGS              CLEAN UP            *HMD 08/82*
         OI    FLAG1,$CNFL              SET CONFLICT SCAN   *HMD 08/82*
         B     AGAIN                    AND CONTINUE        *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
GLOBAL   DS    0H                        GLOBAL COMMAND     *HMD 08/82*
         XC    FLAGS,FLAGS              CLEAN UP            *HMD 08/82*
         OI    FLAG1,$GLOBAL            SET FOR GLOBAL SCAN *HMD 08/82*
         B     AGAIN                    AND GO DO IT        *HMD 08/82*
         EJECT
FIND     DS    0H                        FIND COMMAND       *HMD 08/82*
         XC    FLAGS,FLAGS              CLEAN UP            *HMD 08/82*
         OI    FLAG1,$FIND              INDICATE FIND OPERATION
         TSPARSE CBUF=PGPBIBUF,PCL==V(PCL),ENTRY=TSDAPARS   *HMD 08/82*
         LTR   R15,R15                  DID THE PARSE GO ?  *HMD 08/82*
         BNZ   EXIT                     NO, THEN QUIT       *HMD 08/82*
         L     R1,TSDPANS               GET THE ANSWER PLACE*HMD 08/82*
         USING IKJPARMD,R1              MAKE IT ADDRESSABLE *HMD 08/82*
         LH    R14,PARMAJ+4             GET LEN OF MAJOR GIVEN
         LTR   R14,R14                  ANY NAME ?          *HMD 08/82*
         BZ    FINDMIN                  NO, GO GET MINOR    *HMD 08/82*
         L     R15,PARMAJ               GET ADDR OF TEXT    *HMD 08/82*
         BCTR  R14,0                    CHECK FOR LEN OF 1  *HMD 08/82*
         LTR   R14,R14                  IS THE LEN ONE      *HMD 08/82*
         BZ    FINDJ@                   YES, GO CHECK FOR '*'
FINDJ#   DS    0H                                           *HMD 08/82*
         LA    R2,FMAJ                  GET RECEIVING FIELD *HMD 08/82*
         EX    R14,FINDMVC              MOVE THE NAME       *HMD 08/82*
         STH   R14,FMAJLEN              SAVE THE LEN        *HMD 08/82*
         OI    FLAG2,$FMAJ              INDICATE FIND ON MAJOR NAME
         B     FINDMIN                  GO CHECK MINOR      *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FINDJ@   DS    0H                                           *HMD 08/82*
         CLI   0(R15),C'*'              ACCEPT ANY MAJOR NAME ?
         BNE   FINDJ#                   NO, MUST BE REAL NAME
         SPACE 2                                            *HMD 08/82*
FINDMIN  DS    0H                                           *HMD 08/82*
         LH    R14,PARMIN+4             GET THE LEN OF MINOR NAME
         LTR   R14,R14                  IS IT OMITTED ?     *HMD 08/82*
         BZ    FINDJOB                  YES, GO CHECK JOB NAME
         L     R15,PARMIN               GET TEXT ADDR       *HMD 08/82*
         BCTR  R14,0                    DOWN BY ONE         *HMD 08/82*
         LTR   R14,R14                  IS LEN ONE          *HMD 08/82*
         BZ    FINDM@                   YES, GO CHECK SPECIAL CASE
FINDM#   DS    0H                                           *HMD 08/82*
         LA    R2,FMIN                  GET RECEIVVING FIELD*HMD 08/82*
         EX    R14,FINDMVC              MOVE THE TEXT       *HMD 08/82*
         STH   R14,FMINLEN              SAVE THE LEN        *HMD 08/82*
         OI    FLAG2,$FMIN              SET FIND ON MINOR NAME
         B     FINDJOB                  GO CHECK JOB NAME   *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FINDM@   DS    0H                                           *HMD 08/82*
         CLI   0(R15),C'*'              ALLOW ANY MINOR NAME*HMD 08/82?
         BNE   FINDM#                   NO, GO MOVE NAME    *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
FINDJOB  DS    0H                                           *HMD 08/82*
         LH    R14,PARJOB+4             GET LEN OF JOB NAME *HMD 08/82*
         LTR   R14,R14                  WAS ONE GIVEN       *HMD 08/82*
         BZ    FINDEND                  NO, GO TO END OF PARSE
         L     R15,PARJOB               GET TEXT ADDR       *HMD 08/82*
         BCTR  R14,0                    DOWN BY ONE         *HMD 08/82*
         LTR   R14,R14                  IS THE LEN ONE      *HMD 08/82*
         BZ    FINDN@                   YES, GO CHECK SPECIAL CASE
FINDN#   DS    0H                                           *HMD 08/82*
         LA    R2,FJOB                  GET TARGET FIELD    *HMD 08/82*
         EX    R14,FINDMVC              MOVE THE JOB NAME   *HMD 08/82*
         STH   R14,FJOBLEN              SAVE FOR LATTER     *HMD 08/82*
         OI    FLAG2,$FJOB              MARK AS FIND JOB NAME
         B     FINDEND                  AND GO FINISH PARSE *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FINDN@   DS    0H                                           *HMD 08/82*
         CLI   0(R15),C'*'              ACCEPT ANY JOB NAME ?
         BNE   FINDN#                   NO, GO MOVE NAME    *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
FINDEND  DS    0H                                           *HMD 08/82*
         IKJRLSA (1)                    FREE THE PDL        *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
AGAIN    DS    0H                                           *HMD 08/82*
         L     R1,PGPBIBUF              GET COMMAND BUFFER  *HMD 08/82*
         LH    R0,0(,R1)                GET LEN OF BUFFER   *HMD 08/82*
         O     R0,=AL1(1,0,0,0)         MAKE IF SUB POOL 1  *HMD 08/82*
         FREEMAIN R,LV=(0),A=(1)        GIVE BACK BUFFER    *HMD 08/82*
         B     SCAN                     AND GO TRY IT AGAIN *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
FINDMVC  MVC   0(0,R2),0(R15)           << EXECUTED >>      *HMD 08/82*
         EJECT                                              *HMD 08/82*
NEWGQCOR DS    0H                                           *HMD 08/82*
         L     R1,GQAREA                GET AREA ADDRESS    *HMD 08/82*
         L     R0,GQLEN                 GET LENGTH          *HMD 08/82*
         O     R0,=AL1(3,0,0,0)         MAKE SUBPOOL 3      *HMD 08/82*
         FREEMAIN R,LV=(0),A=(1)        GIVE IT BACK        *HMD 08/82*
GQSCORE  DS    0H                                           *HMD 08/82*
         L     R3,GQLEN                 GET CURRENT LENGTH  *HMD 08/82*
         A     R3,GQINCR                ADD INCREMENT       *HMD 08/82*
         BC    5,QUITCORE               NOT OVERFLOW/MINUS  *HMD 08/82*
         ST    R3,GQLEN                 SAVE LENGTH         *HMD 08/82*
         LA    R4,GQAREA                GET AREA ADDRESS    *HMD 08/82*
         XC    GQAREA,GQAREA            IN CASE FAILURE     *HMD 08/82*
         LA    R1,TSDGMAIN              GET THE LIST ADDR   *HMD 08/82*
         GETMAIN EC,LV=(R3),SP=3,A=(R4),MF=(E,(1))          *HMD 08/82*
         LTR   R15,R15                  DID WE GET IT?      *HMD 08/82*
         BNZ   QUITCORE                 NOPE..NO STORAGE    *HMD 08/82*
         BR    RLINK                                        *HMD 08/82*
         EJECT                                              *HMD 08/82*
BADQUEUE DS    0H                                           *HMD 08/82*
         LA    R1,MSGQUE                GET BAD QUEUE MSG   *HMD 08/82*
         ST    R1,OLD+4                 & PUT IT IN THE OLD *HMD 08/82*
PUTLINE  DS    0H                                           *HMD 08/82*
         LA    R1,IOPL                  GET THE LIST ADDR   *HMD 08/82*
         L     R15,TSDAPUTL             GET ROUTINE ADDRESS *HMD 08/82*
         PUTLINE PARM=PTPB,OUTPUT=OLD,MF=(E,(1)),ENTRY=(15) *HMD 08/82*
         B     COMGET                   THEN TRY AGAIN      *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
QUITCORE DS    0H                                           *HMD 08/82*
         LA    R1,MSGCORE               GET OUT OF CORE MSG *HMD 08/82*
         ST    R1,OLD+4                 PUT IT IN THE OLD   *HMD 08/82*
         B     PUTLINE                  THEN GO DO IT       *HMD 08/82*
         SPACE 3                                            *HMD 08/82*
NONSUPT  DS    0H                                           *HMD 08/82*
         LA    R1,MSGNSUPT              NON SUPPORTED REL   *HMD 08/82*
         ST    R1,OLD+4                 SAVE IN OLD         *HMD 08/82*
         LA    R1,IOPL                  GET PARM ADDRESS    *HMD 08/82*
         L     R15,TSDAPUTL             GET PUTLINE ADDRESS *HMD 08/82*
         PUTLINE PARM=PTPB,OUTPUT=OLD,MF=(E,(1)),ENTRY=(15) *HMD 08/82*
         B     EXIT                                         *HMD 08/82*
         EJECT                                              *HMD 08/82*
*                                                           *HMD 08/82*
* ESTAE EXIT ROUTINE                                        *HMD 08/82*
*                                                           *HMD 08/82*
CLEANUP  DS    0H                                           *HMD 08/82*
         LUSE  CLEANUP,R15             ADDRESS THE ROUTINE  *HMD 08/82*
         C     R0,NOSDWA               DID I GET SDWA?      *HMD 08/82*
         BNE   CLEANOK                 YES..PROCESS         *HMD 08/82*
         CLM   R1,6,A0C3               IS THIS AN 0C3       *HMD 08/82*
         BNE   CLEANRET                NO, RETRY            *HMD 08/82*
         LA    R15,0                   CONTINUE WITH ABEND  *HMD 08/82*
         BR    R14                     RETURN TO CALLER     *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
CLEANRET L     R0,AEXIT                GET EXIT ADDRESS     *HMD 08/82*
         LA    R15,4                   SCHEDULE A RETRY     *HMD 08/82*
         BR    R14                     RETURN TO RTM        *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
CLEANOK  SAVE  (14,12)                                      *HMD 08/82*
* RETURN TO FREE STORAGE                                    *HMD 08/82*
         LUSE  SDWA,R1                                      *HMD 08/82*
         CLC   SDWACMPC,A0C3           AN 0C3 ABEND?        *HMD 08/82*
         BE    CLEANDMP                CONTINUE WITH ABEND  *HMD 08/82*
         LDROP R1                      DROP SDWA BASE       *HMD 08/82*
         L     R2,AEXIT                                     *HMD 08/82*
         SETRP WKAREA=(1),REGS=(14,12),RETADDR=(2),DUMP=NO, *HMD 08/82*X
               RETREGS=YES,FRESDWA=YES,RC=4                 *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
CLEANDMP SETRP WKAREA=(1),REGS=(14,12),RC=0                 *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
NOSDWA   DC    F'12'                   NO SDWA OBTAINED CODE*HMD 08/82*
AEXIT    DC    A(EXIT)                 RETRY ROUTINE ADDR   *HMD 08/82*
A0C3     DC    X'0C3000'               ABEND 0C3 COMP CODE  *HMD 08/82*
         LDROP R15                     NO NEED FOR BASE     *HMD 08/82*
         EJECT                                              *HMD 08/82*
EXIT     DS    0H                                           *HMD 08/82*
         L     R1,GQAREA      GET GQSCAN AREA ADDRESS       *HMD 08/82*
         LTR   R1,R1          IS THERE ONE ?                *HMD 08/82*
         BZ    NONFREE        NO, THEN SKIP FREE            *HMD 08/82*
         L     R0,GQLEN       GET CURRENT LENGTH            *HMD 08/82*
         O     R0,=AL1(3,0,0,0)         MAKE SUBPOOL 3      *HMD 04/82*
         FREEMAIN R,LV=(0),A=(1)        GIVE BACK THE CORE  *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
NONFREE  DS    0H                                           *HMD 08/82*
         TSFINISH RC=0                  GO HOME             *HMD 08/82*
         TSDSECT NODAPL,NOADAIR,NOSAV2,PGPB,PTPB,ASCAN,NODAPB,NODAECB
         TSDSECT AIOPG,AIOPT,APARS,CSPL,GEN=YES             *HMD 08/82*
         EJECT                                              *HMD 08/82*
GMAIN    GETMAIN EC,A=0,LV=0,MF=L                           *HMD 08/82*
LGMAIN   EQU   *-GMAIN                                      *HMD 08/82*
ESTAEL   ESTAE 0,MF=L             LIST FORM ESTAE MACRO     *HMD 08/82*
ESTAELEN EQU   *-ESTAEL                                     *HMD 08/82*
LMNMAX   DC    Y(L'LMNAME)                                  *HMD 08/82*
GQINCR   DC    A(8*4096)          GET SOME CORE             *HMD 10/82*
         SPACE 3                                            *HMD 08/82*
MSGCORE  DC    AL2(LMSGCORE,0)
         DC    C'HMD0555I INSUFFICIENT MEMORY TO PROCESS'   *HMD 08/82*
LMSGCORE EQU   *-MSGCORE                                    *HMD 08/82*
MSGQUE   DC    AL2(LMSGQUE,0)
         DC    C'HMD0554E ERROR IN QUEUE STRUCTURE - '      *HMD 08/82*
         DC    C'ISGQSCAN ERROR - CONTACT SYSTEMS SUPPORT'  *HMD 08/82*
LMSGQUE  EQU   *-MSGQUE                                     *HMD 08/82*
MSGCOM   DC    AL2(LMSGCOM,0)
         DC    C'HMD0553I INVALID COMMAND'                  *HMD 08/82*
LMSGCOM  EQU   *-MSGCOM                                     *HMD 08/82*
MSGNSUPT DC    AL2(MSGNONL,0)                               *HMD 08/82*
         DC    C'HMD0550I ENQ'                              *HMD 08/82*
         DC    C' REQUIRES AN MVS RELEASE OF'              '*HMD 08/82*
         DC    C' SYSTEM PRODUCT 1.2 OR HIGHER'             *HMD 08/82*
MSGNONL  EQU   *-MSGNSUPT                                   *HMD 08/82*
MSGMODE  DC    AL2(LMSGMODE,0),C' ENQ'                      *HMD 08/82*
LMSGMODE EQU   *-MSGMODE                                    *HMD 08/82*
         EJECT                                              *HMD 08/82*
COMTAB   TABLE FIND,FIND                                    *HMD 08/82*
         TABLE F,FIND                                       *HMD 08/82*
         TABLE CONFLICT,CONFL                               *HMD 08/82*
         TABLE C,CONFL                                      *HMD 08/82*
         TABLE GLOBAL,GLOBAL                                *HMD 08/82*
         TABLE G,GLOBAL                                     *HMD 08/82*
         TABLE END,EXIT                                     *HMD 08/82*
         TABLE E,EXIT                                       *HMD 08/82*
         DC    X'FF'                                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
$WAIT    EQU   X'01'                                        *HMD 08/82*
$TSO     EQU   X'01'                                        *HMD 08/82*
$MQCBCNF EQU   X'80'                                        *HMD 08/82*
XFF      EQU   X'FF'                                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
         LTORG  ,                                           *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
HEXTAB   EQU   *-C'0'                                       *HMD 08/82*
         DC    C'0123456789ABCDEF'                          *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
TRTMN    DC    256X'FF'                 TABLE FOR XLATE AND TEST
         ORG   TRTMN+C' '                                   *HMD 08/82*
         DC    X'00'                                        *HMD 08/82*
         ORG   TRTMN+C'.'                                   *HMD 08/82*
         DC    6X'00'                                       *HMD 08/82*
         ORG   TRTMN+C'$'                                   *HMD 08/82*
         DC    7X'00'                                       *HMD 08/82*
         ORG   TRTMN+C','                                   *HMD 08/82*
         DC    5X'00'                                       *HMD 08/82*
         ORG   TRTMN+C':'                                   *HMD 08/82*
         DC    5X'00'                                       *HMD 08/82*
         ORG   TRTMN+C'A'                                   *HMD 08/82*
         DC    9X'00'                                       *HMD 08/82*
         ORG   TRTMN+C'J'                                   *HMD 08/82*
         DC    9X'00'                                       *HMD 08/82*
         ORG   TRTMN+C'S'                                   *HMD 08/82*
         DC    8X'00'                                       *HMD 08/82*
         ORG   TRTMN+C'0'                                   *HMD 08/82*
         DC    10X'00'                                      *HMD 08/82*
         ORG   ,                                            *HMD 08/82*
         EJECT                                              *HMD 08/82*
PCL      IKJPARM
         SPACE 1                                            *HMD 08/82*
PARMAJ   IKJIDENT 'MAJOR NAME',ASTERISK,MAXLNTH=8,FIRST=ANY,           X
               OTHER=ANY,DEFAULT='*'                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
PARMIN   IKJIDENT 'MINOR NAME',ASTERISK,MAXLNTH=256,FIRST=ANY,         X
               OTHER=ANY,DEFAULT='*'                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
PARJOB   IKJIDENT 'JOB NAME',ASTERISK,MAXLNTH=8,FIRST=ANY,             X
               OTHER=ANY,DEFAULT='*'                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
         IKJENDP
         EJECT                                              *HMD 08/82*
         ISGRIB ,                                           *HMD 08/82*
         EJECT                                              *HMD 08/82*
         CVT   LIST=YES,DSECT=YES                           *HMD 08/82*
         EJECT                                              *HMD 08/82*
         IEFUCBOB LIST=YES                                  *HMD 08/82*
         EJECT                                              *HMD 08/82*
         IHASDWA  ,                                         *HMD 08/82*
         EJECT                                              *HMD 08/82*
TSDSECT  DSECT ,              PICK UP IN THE DSECT          *HMD 08/82*
DWORK    DS    D                                            *HMD 08/82*
GQAREA   DS    A              A(GRS QUEUE RETURN AREA)      *HMD 08/82*
GQLEN    DS    F              GRS QUEUE RETURN LENGTH       *HMD 08/82*
GQRIBI   DS    F              R0 SAVE AREA FROM GQSCAN      *HMD 08/82*
GQRIBN   DS    F              NUMBER OF RIBS RETURNED       *HMD 08/82*
OLD      DC    A(0,0)                                       *HMD 08/82*
FLAGS    DS    0F                                           *HMD 08/82*
FLAG1    DS    X                                            *HMD 08/82*
$CNFL    EQU   X'80'                                        *HMD 08/82*
$GLOBAL  EQU   X'40'                                        *HMD 08/82*
$FIND    EQU   X'20'                                        *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FLAG2    DS    X                                            *HMD 08/82*
$FMAJ    EQU   X'80'                                        *HMD 08/82*
$FMIN    EQU   X'40'                                        *HMD 08/82*
$FJOB    EQU   X'20'                                        *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FLAG3    DS    X                                            *HMD 08/82*
FLAG4    DS    X                                            *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
FMAJLEN  DS    H                                            *HMD 08/82*
FMINLEN  DS    H                                            *HMD 08/82*
FJOBLEN  DS    H                                            *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
TSDGMAIN GETMAIN EC,A=0,LV=0,MF=L                           *HMD 08/82*
TSDESTAE ESTAE   0,MF=L                  ESTAE PARM LIST    *HMD 08/82*
GQLIST   GQSCAN MF=L                     GQSCAN PARM LIST   *HMD 08/82*
FMAJ     DS    CL8                                          *HMD 08/82*
FJOB     DS    CL8                                          *HMD 08/82*
FMIN     DS    CL256                                        *HMD 08/82*
         SPACE 2                                            *HMD 08/82*
LINE     DS    F                        MAP THE LINE SENT TO TERMINAL
LSCOPE   DS    C                        SCOPE OF ENQ - 'Y' OR 'J'
LTYPE    DS    C                        TYPE OF ENQ - 'E' OR 'S'
LHAS     DS    C                        ENQ STATUS - 'G' OR 'W'
LSYS     DS    C                        RESERVE     'R'     *HMD 08/82*
         DS    C                                            *HMD 08/82*
LMC      DS    C                        MUST COMPLETE =*    *HMD 08/82*
LJOB     DS    CL8                      JOB NAME            *HMD 08/82*
         DS    C                                            *HMD 08/82*
LUCB     DS    CL10                     UCB  NAME           *HMD 08/82*
         DS    C                                            *HMD 08/82*
LJNAME   DS    CL8                      MAJOR QUEUE NAME    *HMD 08/82*
         DS    C                                            *HMD 08/82*
LMNAME   DS    CL256                    MINOR QUEUE NAME    *HMD 08/82*
LINELEN  EQU   *-LINE                   LENGTH FOR PUTLINE  *HMD 08/82*
         SPACE 1                                            *HMD 08/82*
#SYS     EQU   C'Y'                                         *HMD 08/82*
#SYSS    EQU   C'X'               SYSTEMS WIDE ENQUEUE      *HMD 08/82*
#STEP    EQU   C'J'                                         *HMD 08/82*
#SHR     EQU   C'S'                                         *HMD 08/82*
#EXC     EQU   C'E'                                         *HMD 08/82*
#GOT     EQU   C'G'                                         *HMD 08/82*
#WAIT    EQU   C'W'                                         *HMD 08/82*
#RES     EQU   C'R'                                         *HMD 08/82*
#RESC    EQU   C'C'               CONVERTED RESERVE         *HMD 08/82*
#MUST    EQU   C'*'                                         *HMD 08/82*
RLINK    EQU   R11                                          *HMD 08/82*
TSDUEND  DS    0H                                           *HMD 08/82*
TSDUSIZE EQU   TSDUEND-TSDUSER                              *HMD 08/82*
         END
