//C4ADMDMJ JOB C4ADM000,'JES3 TSO CP',CLASS=A,MSGCLASS=X,NOTIFY=C4ADMDM
//*
//*   NEEDS VTAMLST UPDATE AND APPROPRIATE C4J.. NAMES IN J3 INISH
//*
//*         VBUILD TYPE=APPL
//*CAAJES3  APPL  AUTH=(ACQ),EAS=25,ACBNAME=C4#1       SYSTEM ID C4#1
//*
//*
//ASMHCL  PROC
//C      EXEC  PGM=IEV90,PARM=OBJECT,REGION=5M
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=(SYSDA,SEP=SYSLIB),SPACE=(CYL,(10,5)),DSN=&SYSUT1
//SYSPUNCH DD  SYSOUT=B,DCB=(BLKSIZE=800),SPACE=(CYL,(5,5,0))
//SYSPRINT DD SYSOUT=X,DCB=(BLKSIZE=3509),UNIT=(,SEP=(SYSUT1,SYSPUNCH))
//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),            *
//             DCB=(BLKSIZE=400),DSN=&&LOADSET
//L    EXEC  PGM=IEWL,PARM='MAP,LET,LIST,NCAL',REGION=2M,COND=(8,LT,C)
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSLMOD DD DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(2,1,2)),DSN=&GOSET(GO)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1
//SYSPRINT DD  SYSOUT=X,DCB=(RECFM=FB,BLKSIZE=3509)
//  PEND
//*
//S1 EXEC ASMHCL,
//   PARM.C='OBJECT,XREF(SHORT)',PARM.L='LIST,LET,XREF'
//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DATA
JES3     CSECT
         MACRO
         $MVHEX &OUT,&IN,&L=
         LCLA  &LEN1,&LEN2
         LCLC  &STRING
&LEN2    SETA  &L*2
         IC    R0,&OUT+&LEN2
&LEN1    SETA  &L*2+1
&LEN2    SETA  &L+1
&STRING  SETC  '&OUT'.'('.'&LEN1'.'),'.'&IN'.'('.'&LEN2'.')'
         UNPK  &STRING
&LEN2    SETA  &L*2
         STC   R0,&OUT+&LEN2
&STRING  SETC  '&OUT'.'('.'&LEN2'.'),HEXTAB-240'
         TR    &STRING
         MEXIT
         MEND
*--------------------------------------------------------------------*
*        REGISTER EQUATES
*--------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11                      MODULE BASE REGISTER
R12      EQU   12                      GLOBAL AREA POINTER.
R13      EQU   13                      SAVE AREA PTR
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      MODULE ENTRY POINT ADDR.
*--------------------------------------------------------------------*
*        SAVE ENVIRONMENT AND ESTABLISH ADDRESSABILITY
*--------------------------------------------------------------------*
         STM   R14,R12,12(R13)
         LR    R11,R15
         LA    R5,4095(R11)
         LA    R5,1(R5)
         USING JES3,R11,R5               STANDARD LINKAGE
         ST    R13,SAVEAREA+4
         MVC   8(4,R13),ADDRSAVE
         LA    R13,SAVEAREA
         L     R1,0(R1)
         LH    R2,0(R1)                  PARM LEN
         SH    R2,=H'4'
         LH    R3,2(R1)                  OFFSET TO PARMS
         SR    R2,R3
         LTR   R2,R2         ? GOT ANY PARMS
         BZ    MAINC
         MVI   PANS,C'N'
*
MAINC    L     R1,16
         USING CVT,R1
         L     R2,0(R1)             SHIFT REG ONCE AGAIN
         L     R2,4(R2)             GET THE CURRENT TCB
         L     R2,12(R2)            GET TCB + 12 TIOT ADDRESS
         MVC   USERID(7),0(R2)
*
         L     R1,CVTSMCA               ---> SMCA
         USING SMCABASE,R1
         CLC   SMCASID(4),=CL4'C4#6'
         BE    C4#6SYS
         CLC   SMCASID(4),=CL4'C4#3'
         BE    C4#3SYS
         CLC   SMCASID(4),=CL4'C4#1'
         BE    C4#1SYS
         B     SETWORK
C4#6SYS  MVC   JESACB(8),=CL8'CGAJES3'
         MVC   RJPWSP(4),=CL4'C4J6'
         B     SETWORK
C4#1SYS  MVC   JESACB(8),=CL8'CAAJES3'
         MVC   RJPWSP(4),=CL4'C4J1'
         B     SETWORK
C4#3SYS  MVC   JESACB(8),=CL8'CEAJES3'
         MVC   RJPWSP(4),=CL4'C4J3'
         B     SETWORK
*---------------------------------------------------------------------
*        OPEN WORKSTATION ACB (10 AVAILABLE - FIND ONE THAT WORKS)
*---------------------------------------------------------------------
SETWORK  DS    0H
*
         L     R15,ISPLINK
         CALL  (15),(VDELETE,ASTER),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(VDEF,ACTLINEP,TPUTAREA,CHAR,L80),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(VDEF,JESCMDP,REPDATA,CHAR,L60),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(TBCR,JESTABLE,NULL,DANAMLST,NOW),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(TBVCLEAR,JESTABLE),VL,MF=(E,ISPARMS)
*
         CLI   PANS,C' '
         BNE   NOPAN1
         L     R15,ISPLINK
         CALL  (15),(VLIBDEF,VISP,VDATASET,VPANELS),VL,MF=(E,ISPARMS)
*
NOPAN1   LA    R3,9                     RETRY COUNT
JES30006 DS    0H
         MVC   WORKST,APPLID+1
         ENQ   (MAJOR,USERID,S,14,SYSTEM),RET=USE
         LTR   R15,R15
         BNZ   JES39700
         OPEN  (ACB)                    OPEN DEFAULT ACB NAME
         LTR   R15,R15                  OK?
         BZ    JES30008                 YES, BRANCH ELSE
         DEQ   (MAJOR,USERID,14,SYSTEM)
         LA    R2,ACB                   ADDR ACB
         USING IFGACB,R2
         CLI   ACBERFLG,X'58'           ACB WITH THIS NAME OPEN?
         BE    JES30007                 YES, BRANCH ELSE
         CLI   ACBERFLG,X'5A'           BAD ACB NAME?
         BE    JES39030                 YES, BRANCH ELSE
         B     JES39020                 FUNNY ERROR
JES30007 DS    0H
         PACK  DWORD,ACBID#             GET ACB NUMBER
         AP    DWORD,=PL1'1'            UP ONE
         UNPK  ACBID#,DWORD             RE-STORE
         OI    ACBID#+L'ACBID#-1,C'0'
         BCT   R3,JES30006              RETRY OPEN
         B     JES39030                 ERROR IF NO ACB'S AVAILABLE
JES30008 DS    0H
         MVC   LOGONDTA(5),APPLID+1    MAKE APPLID THE WORK/STN NAME
JES30009 DS    0H
*---------------------------------------------------------------------
*        ENABLE SESSION STARTS ON  WORKSTATION EMULATOR
*---------------------------------------------------------------------
         SETLOGON RPL=RPL,OPTCD=(SYN,START)        ALLOW REQSESS
         LTR   R15,R15                  OK?
         BNZ   JES39060                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   JES39060                 NO, BRANCH ELSE
         LA    R2,NIB                   ADDR NIB
         MVC   NIBSYM-ISTDNIB(8,2),JESACB
*---------------------------------------------------------------------
*        LOGON TO JES AS AN SLU
*---------------------------------------------------------------------
         REQSESS RPL=RPL,NIB=NIB,OPTCD=(SYN,NQ),AREA=LOGONDTA,RECLEN=5
         LTR   R15,R15                  OK?
         BNZ   JES39070                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   JES39070                 NO, BRANCH ELSE
         WAIT  ECB=SCIPECB              WAIT FOR OPNSEC IN SCIP
         OC    SCIPECB+1(3),SCIPECB+1   OK?
         BNZ   JES3END                  NO, BRANCH ELSE
         L     R9,LUCID                 GET CID
*---------------------------------------------------------------------
*        RECEIVE DATA FROM JES
*---------------------------------------------------------------------
JES30010 MVI   RCVAREA,C' '
         MVC   RCVAREA+1(255),RCVAREA         BLANK OUT
         MODCB AM=VTAM,RPL=RPL,OPTCD=(Q)      MAKE RECEIVE OPTCD Q
         TM    FLAG,X'02'
         BNO   JES30012
         MODCB AM=VTAM,RPL=RPL,OPTCD=(NQ)     MAKE RECEIVE OPTCD NQ
         NI    FLAG,X'FF'-X'02'
JES30012 RECEIVE RPL=RPL,ARG=(R9),AREA=RCVAREA,AREALEN=256,            *
               RTYPE=(DFSYN,NDFASY,NRESP),OPTCD=(SYN,CS,TRUNC,SPEC)
         LTR   R15,R15                  OK?
         BNZ   JES39050                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   JES39050                 NO, BRANCH ELSE
         LA    R2,RPL                   ADDR RPL
         TM    RPLVTFL2-IFGRPL(R2),RPLEX EXCEPTION RESP ONLY?
         BO    JES30015                 YES, BANCH ELSE
         SEND  RPL=RPL,STYPE=RESP,OPTCD=(SYN,CS)        SEND +VE RESP
         LTR   R15,R15                  OK?
         BNZ   JES39040                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   JES39040                 NO, BRANCH ELSE
JES30015 DS    0H
         LA    R2,RPL                   ADDR RPL
         TM    RPLOPT12-IFGRPL(R2),RPLFMHDR FM HEADER?
         BNO   JES30020                 NO, BRANCH ELSE
         TM    RCVAREA+4,X'20'          END-DATA-SET?
         BNO   JES30010                 NO, GO DO ANOTHER RECEIVE
         TM    FLAG,X'02'               DM INSERT
         BNO   NODATA                   DM INSERT
*---------------------------------------------------------------------
*        TPUT DATA TO TSO USER
*---------------------------------------------------------------------
JES30017 OC    TPUTAREA(80),TPUTAREA    ANYTHING LEFT TO TPUT?
         BZ    JES30018                 NO, BRANCH ELSE
*        TR    TPUTAREA(80),TRTAB       TRANSLATE UNPRINTABLES
*        CLC   =C'IAT7130 ''*E ',TPUTAREA+9
*        BE    JES30018
*        PUT   SYSPRINT,TPUTAREA
*        MVC   TPUTAREA(80),SPACES
*---------------------------------------------------------------------
*        PROCESS INPUT FROM TSO USER
*---------------------------------------------------------------------
JES30018 DS    0H
*
         MVI   TPUTAREA,C'*'
         MVC   TPUTAREA+1(60),REPDATA
         MVC   TPUTAREA+61(19),SPACES
*
         L     R15,ISPLINK
         CALL  (15),(TBADD,JESTABLE),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(TBTOP,JESTABLE),VL,MF=(E,ISPARMS)
***********************************************************
*                                                         *
*        TABLE DISPLAY HERE                               *
*                                                         *
***********************************************************
         L     R15,ISPLINK
         CALL  (15),(TBDISPL,JESTABLE,JESDATAB),VL,MF=(E,ISPARMS)
*
         C     R15,L8         END COMMAND ENTERED??
         BE    JES3END        ALL DONE
*
         NI    FLAG,X'FF'-X'08'
         MVC   TPUTPTR(4),=A(TPUTAREA)
         MVC   TPUTAREA(80),SPACES
*
         CLC   REPDATA(60),SPACES
         BE    NODATA
EDCONT   OC    REPDATA(60),SPACES       UPPER CASE
         CLC   REPDATA(3),=C'END'       FINISHED?
         BE    JES3END                  YES, BRANCH ELSE
***********************************************************
*        MODIFY TEXT                                      *
***********************************************************
         LA    R1,REPDATA+7             WHERE PARAMETERS START
         LA    R2,73                    LENGTH LEFT
         CLC   =C'MODIFY',REPDATA       MODIFY COMMAND ?
         BE    MODIFY01                 YES
         LA    R1,REPDATA+2             WHERE PARAMETERS START
         LA    R2,78                    LENGTH LEFT
         CLC   =C'F',REPDATA            ALTERNATE MODIFY COMMAND ID ?
         BNE   JES30019                 NO
MODIFY01 DS    0H
         CLI   0(R1),C' '               LEADING BLANK ?
         BNE   MODIFY02                 YES
         LA    R1,1(R1)                 INC PTR
         BCT   R2,MODIFY01              LOOP BACK
         B     JES30019                 BR IF NOTHING LEFT
MODIFY02 DS    0H
         CLC   =C'J=',0(R1)             JOB NUMBER(S) SPECIFICATION ?
         BE    MODIFY03                 YES
         CLC   =C'J/',0(R1)             ANOTHER JOB NUMBER(S) SPEC ?
         BE    MODIFY03                 YES
         CLI   0(R1),C'N'               MODIFY NETWORK ?
         BE    MODIFY03                 YES
         B     JES30019                 NO
MODIFY03 DS    0H
         LA    R1,2(R1)                 POINT PAST "J=" OR "N " OR "N,"
         SH    R2,=H'2'                 DEC COUNTER
         BNP   JES30019                 BR IF NONE LEFT
         SR    R3,R3                    LAST BLANK POINTER
MODIFY04 DS    0H
         CLI   0(R1),C' '               BLANK (POSSIBLE END TO CMD) ?
         BNE   MODIFY05                 NO
         LTR   R3,R3                    ALREADY HAVE A LAST BLANK ?
         BNZ   MODIFY06                 YES
         LR    R3,R1                    SAVE POSSIBLE END OF CMD PTR
         B     MODIFY06
MODIFY05 DS    0H
         SR    R3,R3                    SIGNAL END OF CMD NOT FOUND YET
         CLC   =C'T=',0(R1)             TERMINAL SPECIFICATION ?
         BE    MODIFY07                 YES
         CLC   =C'T/',0(R1)             TERMINAL SPECIFICATION ?
         BE    MODIFY07                 YES
MODIFY06 DS    0H
         LA    R1,1(R1)                 INC PTR
         BCT   R2,MODIFY04              LOOP BACK
         LTR   R3,R3                    END OF CMD ENCOUNTERRED ?
         BZ    JES30019                 NO
         MVC   0(3,R3),=C',T='          TACK ON TERMINAL SPEC
         LA    R1,1(R3)                 PNT TO START OF TERM SPEC
MODIFY07 DS    0H
         MVC   2(7,R1),USERID           PUT USERID INTO CMD
         OI    FLAG,X'08'               SIGNAL CMD MODIFIED
         B     JES30019                 PROCESS CMD
*----------------------------------------------------------------
*        SEND COMMAND TO JES
*----------------------------------------------------------------
JES30019 DS    0H
         MVC   SNDAREA(80),REPDATA
         SEND RPL=RPL,AREA=SNDAREA,RECLEN=80,                          *
               STYPE=REQ,               SEND DATA ENTERED              *
               CONTROL=DATA,RESPOND=(NEX,FME,NRRN),                    *
               POST=RESP,BRACKET=(BB,EB),OPTCD=(SYN,CS,NFMHDR)
         LTR   R15,R15                  OK?
         BNZ   JES39040                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   JES39040                 NO, BRANCH ELSE
*        SOME COMMANDS DO NOT GET AN ANSWER FROM JES. IF THESE
*        HAVE JUST BEEN SENT, WE MUST NOT DO AN IMMEDIATE RECEIVE
*        AS THE KEYBOARD WILL STAY LOCKED.
         CLI   SNDAREA,C'Z'             .
         BE    JES30010                 . CHECK FOR COMMAND AND DO
         CLC   SNDAREA(2),=C' Z'        . RCV NQ IF FOUND
         BE    JES30010                 .
         CLC   SNDAREA(3),=C'  Z'       . RCV NQ IF FOUND
         BE    JES30010                 .
         CLC   SNDAREA(2),=C'8Z'        .
         BE    JES30010                 .
         CLC   SNDAREA(2),=C'*Z'        .
         BE    JES30010                 .
         NI    FLAG,X'FF'-X'02'
         B     JES30010                 GO DO ANOTHER RECEIVE
JES30020 BAL   R10,TPUTRCV              GO TPUT DATA
         B     JES30010                 GO DO ANOTHER RECEIVE
*        END THE SESSION AND EXIT
*----------------------------------------------------------------
JES3END  TM    FLAG,X'01'               IN SESSION?
         BNO   JES3ENDA                 NO, BRANCH ELSE
         XC    SCIPECB(4),SCIPECB       CLEAR ECB
         SEND  RPL=RPL,                                                *
               STYPE=REQ,                                              *
               CONTROL=RSHUTD,          SEND 'REQUEST SHUTDOWN'        *
               RESPOND=(NEX,FME,NRRN),  (SCIP EXIT GETS UNBIND)        *
               POST=RESP,                                              *
               BRACKET=(BB,EB),                                        *
               OPTCD=(SYN,CS,NFMHDR)
         WAIT  ECB=SCIPECB              WAIT FOR UNBIND
JES3ENDA CLOSE (ACB)                    CLOSE VTAM ACB
         DEQ   (MAJOR,USERID,14,SYSTEM),RET=HAVE
JES3ENDX DS    0H
*
         L     R15,ISPLINK
         CALL  (15),(VDELETE,ASTER),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(TBEND,JESTABLE),VL,MF=(E,ISPARMS)
*
         CLI   PANS,C' '
         BNE   BYREFR
         L     R15,ISPLINK
         CALL  (15),(VLIBDEF,VISP,VDATASET,VPANCLR),VL,MF=(E,ISPARMS)
*
BYREFR   L     R13,SAVEAREA+4
         LM    R0,R12,20(R13)
         L     R14,12(R13)
         BR    R14                      RETURN
* END !
NODATA   OI    FLAG,X'02'
*
         STIMER WAIT,DINTVL=INTVL
*
         B     JES30010
JES39020 LA    R2,ACB                   ADDR ACB
         USING IFGACB,R2
         $MVHEX MSG2FLG,ACBERFLG,L=1    MOVE ACBERFLG TO ERROR MSG
         TPUT  MSG2,L'MSG2
         B     JES3END
JES39030 TPUT  MSG3,L'MSG3
         B     JES3END                  FINISH
JES39040 LA    R2,RPL                   ADDR RPL
         USING IFGRPL,R2
         TPUT  MSG4,L'MSG4
         B     JES39999                 SKIP
JES39050 LA    R2,RPL                   ADDR RPL
         CLC   RPLFDBK-IFGRPL(2,R2),=X'0006' NO INPUT AFTER OPTCD NQ?
         BE    JES30018                 YES, GO RE-DO PROMPT ELSE
         TPUT  MSG5,L'MSG5
         B     JES39999
JES39060 TPUT  MSG7,L'MSG7
         B     JES39999                 SKIP
JES39070 LA    R2,RPL                   ADDR RPL
         USING IFGRPL,R2
         TPUT  MSG8,L'MSG8
         B     JES39999                 SKIP
JES39700 TPUT  MSG19,L'MSG19
         B     JES3ENDX
JES39999 DS    0H
         LA    R2,RPL                   ADDR RPL
         USING IFGRPL,R2
         $MVHEX MSG99FB,RPLFDBK,L=2     MOVE FDBK
         $MVHEX MSG99FB2,RPLFDBK2,L=4   MOVE FDBK2
         TPUT  MSG99,L'MSG99
         STIMER WAIT,BINTVL=TWOSECS
         B     JES3END
TWOSECS  DC    F'200'                   TWO SECONDS
*------------------------------------------------------------------*
*        TPUTRCV SUBROUTINE
*------------------------------------------------------------------*
TPUTRCV  STM   R2,R10,SAVER             SAVE REGS
         L     R8,TPUTPTR               GET TPUTAREA POINTER
         OC    RPLRLEN-IFGRPL(4,R2),RPLRLEN-IFGRPL(R2) LENGTH ZERO?
         BZR   R10                      YES, RETURN TO CALLER ELSE
         L     R7,RPLRLEN-IFGRPL(2)     GET LENGTH RECV'D
         LA    R4,RCVAREA               ADDRESS DATA RECV'D
TPUT0010 CLI   0(R4),X'15'              NEW LINE?
         BNE   TPUT0015                 NO, BRANCH ELSE
         LA    R4,1(R4)                 NEXT IN RCVAREA
         B     TPUT0020                 SKIP
TPUT0015 MVC   0(1,R8),0(R4)            MOVE NEXT CHAR TO TPUTAREA
         LA    R8,1(R8)                 NEXT IN TPUTAREA
         LA    R4,1(R4)                 NEXT IN RCVAREA
         C     R8,=A(TPUTAREA+79)       FILLED UP TPUTAREA?
         BL    TPUT0030                 NO, BRANCH ELSE
TPUT0020 TR    TPUTAREA(80),TRTAB       TRANSLATE UNPRINTABLES
         CLC   =C'IAT7130 ''*E ',TPUTAREA+9
         BE    TPUT0026
*
         L     R15,ISPLINK
         CALL  (15),(VPUT,DANAMLST),VL,MF=(E,ISPARMS)
*
         L     R15,ISPLINK
         CALL  (15),(TBADD,JESTABLE),VL,MF=(E,ISPARMS)
*
         MVC   TPUTAREA(80),SPACES
TPUT0026 LA    R8,TPUTAREA              RESTORE POINTER
TPUT0030 BCTR  R7,R0                    DECREMENT COUNT RCVAREA DONE
         LTR   R7,R7                    FINISHED RCVAREA?
         BNZ   TPUT0010                 NO, BRANCH ELSE
         ST    R8,TPUTPTR
         LM    R2,R10,SAVER             RESTORE REGS
         BR    R10                      RETURN TO CALLER
********************************************************************
*        VTAM SCIP EXIT
********************************************************************
         DROP  R11,R5
SCIP     DS    0H
         USING SCIP,R15
         L     R11,=A(JES3)              LOAD REAL MODULE ADDRESS
         L     R5,=A(JES3+4096)         LOAD REAL MODULE ADDRESS
         DROP  R15
         USING JES3,R11,R5               NEW BASE
         ST    R14,RETNADDR             SAVE RETURN ADDRESS
         LA    R13,SCIPSAVE             ADDR EXIT SAVE AREA
         USING IFGRPL,R2
         LA    R4,SCIPNIB               ADDR NIB
         USING ISTDNIB,R4
         LR    R3,R1                    GET R1
         L     R2,16(R3)                R2-->READ-ONLY RPL
         TM    RPLCNTDC-IFGRPL(2),RPLTBIND BIND?
         BNO   SCIP0010                 NO, BRANCH ELSE
         MVC   NIBSYM(8),JESACB         NAME TO OPNSEC
         OPNSEC RPL=SCIPRPL,                                           *
               NIB=SCIPNIB,             OPEN JES3                      *
               OPTCD=(SYN,CS)
         LTR   R15,R15                  OK?
         BNZ   SCIP9010                 NO, BRANCH ELSE
         LTR   R0,R0                    SURE?
         BNZ   SCIP9010                 NO, BRANCH ELSE
         OI    FLAG,X'01'               SHOW IN SESSION
         MVC   LUCID(4),NIBCID          REMEMBER CID
         B     SCIPEND                  FINISH EXIT
SCIP0010 DS    0H
         TM    RPLCNTSC-IFGRPL(2),RPLSDT START DATA TRAFFIC?
         BNO   SCIP0020                 NO, BRANCH ELSE
         LA    R6,SCIPECB               ADDR ECB
         POST  (R6)                     WAKE UP MAINLINE
         B     SCIPEND                  AND FINISH EXIT
SCIP0020 DS    0H
         TM    RPLCNTDC-IFGRPL(R2),RPLTUNBD UNBIND?
         BNO   SCIPEND                  NO, BRANCH ELSE
         LA    R6,SCIPECB               ADDR ECB
         POST  (R6)                     WAKE UP MAINLINE
         B     SCIPEND                  AND FINISH
SCIP9010 DS    0H                       OPNSEC FAILURE
         TPUT  MSG9,L'MSG9
         B     SCIP9999                 SKIP
SCIP9999 DS    0H
         $MVHEX MSG99FB,RPLFDBK,L=2     MOVE FEEDBACK
         $MVHEX MSG99FB2,RPLFDBK2,L=4   MOVE SENSE
         TPUT  MSG99,L'MSG99
         LA    R6,SCIPECB               ADDR ECB
         LA    R7,4                     RETURN CODE 4
         POST  (R6),(R7)                POST ECB BADLY
SCIPEND  DS    0H
         L     R14,RETNADDR             RESTORE RETURN ADDRESS
         BR    R14                      RETURN TO VTAM
********************************************************************
*        VTAM NSEXIT EXIT
********************************************************************
         DROP  R11,R5
NSEXIT   DS    0H
         USING NSEXIT,R15
         L     R11,=A(JES3)             LOAD REAL MODULE ADDRESS
         L     R5,=A(JES3+4096)        LOAD REAL MODULE ADDRESS
         DROP  R15
         USING JES3,R11,R5               NEW BASE
         ST    R14,RETNADDR             SAVE RETURN ADDRESS
         LA    R13,SCIPSAVE             ADDR EXIT SAVE AREA
         TPUT  MSG16,L'MSG16
         LA    R6,SCIPECB               ADDR ECB
         LA    R7,8
         POST  (R6),(R7)                POST ECB BADLY
         L     R14,RETNADDR
         BR    R14                      RETURN TO VTAM
*-------------------------------------------------------------------
*        C O N S T A N T S
*-------------------------------------------------------------------
MSG2     DC    C'OPEN VTAM ACB FAILED - ACBERFLG = X''NN'' '
MSG2FLG  EQU   MSG2+36
MSG3     DC    C'NO VTAM ACB''S AVAILABLE'
MSG4     DC    C'SEND TO LU FAILED'
MSG5     DC    C'RECEIVE FROM LU FAILED'
MSG7     DC    C'SETLOGON FAILED'
MSG8     DC    C'REQSESS FAILED'
MSG9     DC    C'OPNSEC FAILED'
MSG16    DC    C'NSEXIT DRIVEN - POSSIBLE REQSESS FAILURE'
MSG19    DC    C'ENQ FAILURE'
MSG99    DC    C'FDBK/SENSE = X''NNNNNNNNNNNN'' '
MSG99FB  EQU   MSG99+15
MSG99FB2 EQU   MSG99+19
HEXTAB   DC    C'0123456789ABCDEF'
MAJOR    DC    CL8'JES3'
USERID   DC    CL8' '
         DC    C' '
WORKST   DS    CL5' '
FLAG     DC    X'00'
LOGONDTA DC    CL5' '
*
ISPARMS  DS    10F
VPANELS  DC    C'(''C4ADMDM.ZDF'')   '
VPANCLR  DC    C'() '
VLIBDEF  DC    C'LIBDEF '
VISP     DC    C'ISPPLIB '
VDISPLAY DC    C'DISPLAY  '
VDATASET DC    C'DATASET '
ISPLINK  DC    V(ISPLINK)
JESTABLE DC    C'JESTABLE'
TBEND    DC    C'TBEND '
ASTER    DC    CL1'*'
PANS     DC    C' '
VDELETE  DC    C'VDELETE '
SHARED   DC    C'SHARED '
CHAR     DC    C'CHAR '
JESDATAB DC    C'JESDATAB'
VSELECT  DC    C'SELECT '
INTVL    DC    CL8'00000006'         WAIT 6/100 SEC
TBADD    DC    C'TBADD '
TBCR     DC    C'TBCREATE '
TBDISPL  DC    C'TBDISPL '
TBGET    DC    C'TBGET '
TBTOP    DC    C'TBTOP '
TBVCLEAR DC    C'TBVCLEAR '
VDEF     DC    C'VDEFINE '
VGET     DC    C'VGET '
VPUT     DC    C'VPUT '
ZUSER    DC    C'ZUSER '
NOW      DC    C'NOWRITE '
NULL     DC    C'()'
DANAMLST DC    C'('             DISPLAY ACTIVE NAME LIST
ACTLINE  DC    C'ACTLINE )'     JOB INFO
ACTLINEP DC    C'(ACTLINE)'     JOB INFO
JESCMDP  DC    C'(JCMD)'
REPDATA  DC    CL60' '
         DC    CL20' '
SNDAREA  DS    CL256
RCVAREA  DC    CL256' '
TPUTAREA DC    CL80' '
TPUTPTR  DC    A(TPUTAREA)
L7       DC    F'7'
L60      DC    F'60'
L80      DC    F'80'
L1       DC    F'1'
L8       DC    F'8'
L13      DC    F'13'
RETNADDR DC    F'0'
SCIPECB  DC    F'0'
SPACES   DC    CL80' '
SCIPSAVE DC    18F'0'
SAVEAREA DC    18F'0'
SAVER    DC    9F'0'
ADDRSAVE DC    A(SAVEAREA)
LUCID    DC    F'0'
DWORD    DC    D'0'
NIB      NIB   MODE=RECORD
SCIPNIB  NIB   MODE=RECORD
RPL      RPL   AM=VTAM,ACB=ACB
SCIPRPL  RPL   AM=VTAM,ACB=ACB
ACB      ACB   AM=VTAM,MACRF=LOGON,APPLID=APPLID,EXLST=EXLST
APPLID   DC    X'05'
RJPWSP   DC    CL4'C4J3'
ACBID#   DC    CL1'1'
JESACB   DC    CL8' '
SELCODE  DS    CL1
EXLST    EXLST AM=VTAM,SCIP=SCIP,NSEXIT=NSEXIT
         LTORG
TRTAB    DC    X'404B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 00-0F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 10-1F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 20-2F
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 30-3F
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F' 40-4F
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F' 50-5F
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F' 60-6F
         DC    X'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F' 70-7F
         DC    X'4B8182838485868788894B4B4B4B4B4B' 80-8F
         DC    X'4B9192939495969798994B4B4B4B4B4B' 90-9F
         DC    X'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B' A0-AF
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' B0-BF
         DC    X'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B' C0-CF
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B' D0-DF
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B' E0-EF
         DC    X'F0F1F2F3F4F5F6F7F8F9FA4B4B4B4B4B' F0-FF
         PRINT NOGEN
         ISTDNIB
         IFGACB AM=VTAM
         IFGRPL AM=VTAM
         CVT    DSECT=YES
         IEESMCA
         END
/*
//L.SYSLMOD  DD DSN=C4ADMDM.PROD.LKED,DISP=SHR
//L.SYSLIB   DD   DISP=SHR,DSN=SYS1.ISPLOAD
//SYSIN DD *
 NAME EDJES3(R)
/*
