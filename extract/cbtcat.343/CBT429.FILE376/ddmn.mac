//C4SYSDMA JOB MSGCLASS=X,CLASS=B,NOTIFY=XSDMN
//*
// EXEC ASMHCL,PARM.L=('AMODE=31','RMODE=24')
//C.SYSLIB DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.MODGEN
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
DDMN     CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING *,R15
         STM   R14,R12,12(R13)
         LA    R12,SAVE
         ST    R12,8(R13)
         ST    R13,SAVE+4
         LR    R13,R12
         LR    R12,R15
         USING DDMN,R12
         DROP  R15
INIT     L     R2,16               (R2)=ADDR OF CVT
         USING CVT,R2
         L     R5,CVTOPCTP         (R5)=ADDR OF RMCT
         L     R3,RMCTDMDT(R5)     (R3)=ADDR OF DMDT (FIRST ENTRY)
         XR    R4,R4               CLEAR REG 4
         ICM   R4,B'0011',RMCTDMNC(R5)   (R4)=NUMBER OF DOMAINS
         LTR   R4,R4               ANYBODY HOME?
         BNP   ENDJC                NOPE-> EXIT STAGE LEFT
         USING DMDT,R3             ESTABLISH ADDR TO DOMAIN DESC. TABLE
         SPACE
         L     R5,RMCTWMST(R5)     (R5)=ADDR WMST
         MVC   MIPS,4(R5)          MOVE IN IPS NUMBER TO MSGHDR1
         LA    R1,MSGHDR1
         BAL   R6,PUTMSG
         LA    R1,MSGHDR2          POKE OUT THE HEADER MESSAGES
         BAL   R6,PUTMSG
         EJECT
LOOP     MVI   MSG,C' '            CLEAR OUT THE MESSAGE BUFFER
         MVC   MSG+1(L'MSG-1),MSG    WITH BLANKS
         LA    R1,DMDTNO
         LA    R2,MNO
         BAL   R6,EDIT             GO EDIT DOMAIN NUMBER INTO MSG
         CLI   MNO+2,C'-'          DOMAIN=0?
         BNE   CONTINUE             NO-> SKIP FIXUP
         MVI   MNO+2,C'0'
CONTINUE DS    0H
         SPACE
         LA    R1,DMDTLO
         LA    R2,MLO
         BAL   R6,EDITH            GO EDIT MIN MPL INTO MSG
         SPACE
         LA    R1,DMDTHI
         LA    R2,MHI
         BAL   R6,EDITH            GO EDIT MAX MPL INTO MSG
         SPACE
*        LA    R1,DMDTWT
*        LA    R2,MWT
*        BAL   R6,EDIT             GO EDIT WEIGHTING FACTOR INTO MSG
         SPACE
         LA    R1,DMDTMPLI
         LA    R2,MMPLT
         BAL   R6,EDITH            GO EDIT CURRENT MPL TARGET INTO MSG
         SPACE
         LA    R1,DMDTRUA
         LA    R2,MRUA
         BAL   R6,EDITRUA          GO EDIT AVE # OF READY USRS INTO MSG
         SPACE
         LA    R1,DMDTMPLO
         LA    R2,MGOOU
         BAL   R6,EDITH            GO EDIT CURRENT # USRS GOING OUT
         SPACE
         LA    R1,DMDTCMPL
         LA    R2,MCMPL
         BAL   R6,EDITH            GO EDIT CURRENT MPL INTO MSG
         SPACE
         LA    R1,DMDTOUTU
         LA    R2,MOUTU
         BAL   R6,EDITH            GO EDIT CURNT # USRS ON OUT QUEUE
         SPACE
         LA    R1,DMDTTWSR
         LA    R2,SERVR
         BAL   R6,EDITH1S          GO EDIT SERVICE
         SPACE
         LA    R1,DMDTCIDX
         LA    R2,CIDXR
         BAL   R6,EDITH1D          GO EDIT CIDX
         SPACE
         LA    R1,DMDTINCU
         LA    R2,MINCU
         BAL   R6,EDITH            GO EDIT CURNT # SWAPBL IN CORE USERS
         SPACE
         LA    R1,WTOMSG
         BAL   R6,PUTMSG
         SPACE 2
         LA    R3,DMDTLEN(R3)      BUMP POINTER
         BCT   R4,LOOP             LOOP THROUGH ALL DOMAINS
*
         B     ENDJC
         EJECT
*.....................................................................*
*     LOCAL SUBROUTINES   EDIT,EDITH  (USES REG 5)                    *
*.....................................................................*
         SPACE
EDIT     SR    R5,R5               CLEAR WORK REGISTER
         ICM   R5,B'0001',0(R1)    GET BYTE TO CONVERT
         C     R5,=F'999'          TO LARGE?
         BNH   EDIT1
         MVC   0(3,R2),=C'***'     INDICATE TOO LARGE
         BR    R6                    AND RETURN
EDIT1    CVD   R5,CVDWORK          CONVERT TO DECIMAL
         MVC   0(3,R2),=X'202020'  MOVE IN MASK
         BCTR  R2,0                DECREMENT POSITION FOR SPACE
         ED    0(4,R2),CVDWORK+6     BEFORE NUMBER AND EDIT
         CLC   1(3,R2),=C'   '     ANYTHING THERE
         BE    EDIT2
         BR    R6
EDIT2    MVI   3(R2),C'-'          INDICATE PLACE HOLDER
         BR    R6                  RETURN
         SPACE 3
EDITRUA  SR    R5,R5               CLEAR WORK REGISTER
         ICM   R5,B'0011',0(R1)    GET HALFWORD TO CONVERT
         ST    R5,RUA
         SRL   R5,4
         C     R5,=F'999'          TO LARGE?
         BNH   EDITRUX
         MVC   0(5,R2),=C'*****'   INDICATE TOO LARGE
         BR    R6                    AND RETURN
EDITRUX  CVD   R5,CVDWORK          CONVERT TO DECIMAL
         MVC   0(3,R2),=X'202021'  MOVE IN MASK
         BCTR  R2,0                DECREMENT POSITION FOR SPACE
         ED    0(4,R2),CVDWORK+6     BEFORE NUMBER AND EDIT
         MVC   4(1,R2),=C'.'
         L     R5,RUA
         N     R5,=F'15'
         LA    R2,4(R2)
         CVD   R5,CVDWORK          CONVERT TO DECIMAL
*        MVC   1(1,R2),=X'20'      MOVE IN MASK
*        ED    1(1,R2),CVDWORK+7     BEFORE NUMBER AND EDIT
         BR    R6
EDITH    SR    R5,R5               CLEAR WORK REGISTER
         ICM   R5,B'0011',0(R1)    GET HALFWORD TO CONVERT
         C     R5,=F'999'          TO LARGE?
         BNH   EDITH1
         MVC   0(3,R2),=C'***'     INDICATE TOO LARGE
         BR    R6                    AND RETURN
EDITH1D  SR    R5,R5               CLEAR WORK REGISTER
         ICM   R5,B'0011',0(R1)    GET HALFWORD TO CONVERT
         C     R5,=F'9999999'      TO LARGE?
         BNH   EDITH1X
         MVC   0(8,R2),=C'********' INDICATE TOO LARGE
         BR    R6                    AND RETURN
EDITH1X  CVD   R5,CVDWORK          CONVERT TO DECIMAL
         MVC   0(8,R2),=X'20202021204B2020'  MOVE IN MASK
         BCTR  R2,0                DECREMENT POSITION FOR SPACE
         ED    0(9,R2),CVDWORK+4     BEFORE NUMBER AND EDIT
         BR    R6
EDITH1S  SR    R5,R5               CLEAR WORK REGISTER
         L     R5,0(R1)            LOAD
         C     R5,=F'99999999'     TO LARGE?
         BNH   EDITH1Y
         MVC   0(8,R2),=C'********' INDICATE TOO LARGE
         BR    R6                    AND RETURN
EDITH1Y  CVD   R5,CVDWORK          CONVERT TO DECIMAL
         MVC   0(8,R2),=X'2020202020202120'  MOVE IN MASK
         BCTR  R2,0                DECREMENT POSITION FOR SPACE
         ED    0(9,R2),CVDWORK+4     BEFORE NUMBER AND EDIT
         BR    R6
EDITH1   CVD   R5,CVDWORK          CONVERT TO DECIMAL
         MVC   0(3,R2),=X'202020'  MOVE IN MASK
         BCTR  R2,0                DECREMENT POSITION FOR SPACE
         ED    0(4,R2),CVDWORK+6     BEFORE NUMBER AND EDIT
         CLC   1(3,R2),=C'   '     ANYTHING THERE
         BE    EDITH2
         BR    R6
EDITH2   MVI   3(R2),C'-'          INDICATE PLACE HOLDER
         BR    R6                  RETURN
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  R6,PUTMSG         OR
*    BAL  R6,PUTGET
*
*  USES R14 FOR WORK
*
*
PUTMSG   DS    0H
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    R6
         SPACE 2
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE 2
CVDWORK  DC    D'0'                WORK AREA
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
*
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         EJECT
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE
         LTORG
         EJECT
ENDJC    DS    0H
         L     R13,4(R13)
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
SYSPRINT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,LRECL=79,RECFM=FB,  X
               BLKSIZE=790
SAVE     DC    19F'0'
*.....................................................................*
*        MESSAGES AND MESSAGE MAPPING OVERLAYS                        *
*.....................................................................*
         SPACE
RUA      DS    1F
MSGHDR1  WTO   'IPS=XX                                    ',           X
               ROUTCDE=(11),MF=L
         ORG   MSGHDR1+8
MIPS     DS    CL2
         ORG
MSGHDR2  WTO   'DOM CUR TGT MIN MAX   RDY OUT SERVICE      CIDX  IN >O'X
               ,ROUTCDE=(11),MF=L
WTOMSG   WTO   '                                                     ',X
               ROUTCDE=(11),MF=L
         ORG   WTOMSG+4
MSG      DS    CL43
         ORG   WTOMSG+4
MNO      DS    CL3
         DS    CL1
MCMPL    DS    CL3
         DS    CL1
MMPLT    DS    CL3
         DS    CL1
MLO      DS    CL3
         DS    CL1
MHI      DS    CL3
         DS    CL1
MRUA     DS    CL5
         DS    CL1
MOUTU    DS    CL3
         DS    CL1
SERVR    DS    CL8
         DS    CL1
CIDXR    DS    CL8
         DS    CL1
MINCU    DS    CL3
         DS    CL1
MGOOU    DS    CL3
         ORG
*
RMCTDMDT EQU   X'B4'           POINTER TO DOMAIN TABLE
RMCTDMNC EQU   X'BC'           COUNT OF NUMBER OF DOMAINS
RMCTWMST EQU   X'18'           ADDRESS OF WLM SPEC TABLE
*.....................................................................*
*        MAPPING DSECT FOR DMDT (DOMAIN DESCRIPTOR TABLE)             *
*.....................................................................*
         SPACE
DMDT     DSECT
DMDTNO   DS    XL1             DOMAIN NUMBER
DMDTRSV0 DS    XL1             RESERVED
DMDTMPLI DS    XL2             MPL IN TARGET
DMDTMPLO DS    XL2             MPL OUT TARGET
DMDTRUA  DS    XL2             AVE # OF READY USERS
DMDTFITS DS    XL2             FITS RC
DMDTCMPL DS    XL2             CURRENT MPL
DMDTOUTU DS    XL2             CURRENT # USERS ON OUT Q
DMDTINCU DS    XL2             CURRENT # SWAPPABLE INCORE USERS
DMDTRUC  DS    XL4             ACCUM FOR READY USER AVERAGE
DMDTWMS  DS    XL4             INTVL DMN SVCE ACCUM
DMDTTWSR DS    XL4             WEIGHTED INTVL DMN SVCE
DMDTRSV2 DS    XL4             RESERVED
DMDTCIDX DS    XL2             CONTENTION INDEX
DMDTNSW  DS    XL2             CURRENT AND N/S IN USERS
DMDTRUMX DS    XL2             MAX AND READY USERS IN INTERVAL
DMDTFLGS DS    XL1
DMDTRSV3 DS    XL1             RESERVED
DMDTTRNC DS    XL4
DMDTTRNT DS    XL4
DMDTTWET DS    XL4
DMDTLO   DS    XL2             MIN  MPL LEVEL
DMDTHI   DS    XL2             MAX  MPL LEVEL
DMDTASRL DS    XL4             LOW AVG SERVICE RATE
DMDTASRH DS    XL4             HI  AVG SERVICE RATE
DMDTDSRL DS    XL4             LO  TOT SERVICE RATE
DMDTDSRH DS    XL4             HI  TOT SERVICE RATE
DMDTCRTI DS    XL2             ESTOR CRITERIA TABLE INDEX
DMDTCRTR DS    XL2             REQUESTED CRIYERIA TABLE INDEX
DMDTRUMW DS    XL2             WEIGHTED READY USER MAX
DMDTRSV5 DS    XL2             RESERVED
DMDTWORK DS    XL100           WORKAREA
DMDTEND  DS    0X              END OF DMT
DMDTLEN  EQU   *-DMDT
         SPACE 2
         CVT DSECT=YES,LIST=NO
         LTORG
         END
//*KED.SYSLMOD DD DSN=SYS1.MISC.LINKLIB(DDMN),DISP=SHR
//L.SYSLMOD DD DSN=TEST.PGM.LOAD(DDMN),DISP=SHR
