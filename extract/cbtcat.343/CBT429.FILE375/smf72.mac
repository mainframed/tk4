//ED115DMH JOB C4SYS000,MSGCLASS=X,CLASS=J,REGION=4M,NOTIFY=C4SYSDM
//*
//*MAIN PROC=C4
// EXEC EDMXGSAS,OPTIONS='SOURCE'
//*MF    DD DISP=SHR,DSN=C4MS.OSTAR
//SMF    DD DISP=SHR,DSN=C4MS.OSTAR.SAMPLE
//CORR   DD SYSOUT=X
//SYSIN DD *
  DATA S (KEEP =
           SMFXXFLG          SMFNO             TIMEOUT
           SYSTEM            HSRSSI            HSRSTY
           HSRHVR            HSRJBN            HSRRST
           HSRNT             HSRSVD1
           HSRHPSO           HSRHPSL           HSRHPSN
           HSRPUIO           HSRPUIL           HSRPUIN
           HSRACTO           HSRACTL           HSRACTN
           HSRPERO           HSRPERL           HSRPERN
  )
  PROCESS (KEEP =
                 HSRSVR
                 HSRSTPN
                 HSRPRCN
                 HSRCRTME
                 HSRENV
                 HSRENTR
                 HSRENVID
                 HSRENVIX
  )
  PROUNIT (KEEP =
                 HSRTDS
                 HSRNODE
                 HSRMDL
                 HSRDRT
                 HSRUID
                 HSRUSER
                 HSRUTERM
                 HSRUTM
                 HSRUSNID
                 HSRUTYPE
                 HSRUMODE
                 HSRUNQID
                 HSRTRUL
                 HSRTRID
                 HSRTRLVL
                 HSRTRLCL
                 HSRTRT
                 HSRTRNID
                 HSRTRCID
                 HSRPU3
  )
  ACCOUNT (KEEP =
                 HSR72NT
                 HSR72SIO
                 HSR72SIL
                 HSR72SIN
                 HSR72SCO
                 HSR72SCL
                 HSR72SCN
                 HSR72SAO
                 HSR72SAL
                 HSR72SAN
  )
     SUCOUNT ( KEEP =
                         HSR72SN
                         HSR72TN
             )
     SUACCNT ( KEEP =
                         HSR72ELP
                         HSR72RUN
                         HSR72QSC
                         HSR72QUE
                         HSR72RIC
                         HSR72RSM
                         HSR72TRM
                         HSR72LKC
                         HSR72LCK
                         HSR72CPU
                         HSR72PGS
                         HSR72PGH
                         HSR72SRP
                         HSR72SRR
                         HSR72SRQ
                         HSR72SRW
                         HSR72SQP
                         HSR72SQR
                         HSR72SQQ
                         HSR72SQW
                         HSR72VSP
                         HSR72VSR
                         HSR72VSQ
                         HSR72VSW
                         HSR72TXP
                         HSR72TXR
                         HSR72TXQ
                         HSR72TXW
                         HSR72PRQ
                         HSR72PRW
                         HSR72XS
                         HSR72XSR
                         HSR72XSK
                         HSR72RLD
                         HSR72RUL
                         HSR72EXL
                         HSR72EXC
                         HSR72FNC
                         HSR72TAM
                         HSR72REF
                         HSR72SIG
                         HSR72RC
                         HSR72RC2
             )
   PERFORM ( KEEP =
                 HSR72NT2
                 HSR72SCO
                 HSR72SCL
                 HSR72SCN
                 HSR72LKO
                 HSR72LKL
                 HSR72LKN
                 HSR72RPO
                 HSR72RPL
                 HSR72RPN
                 HSR72TBO
                 HSR72TBL
                 HSR72TBN
           )
           SYSCALL (KEEP =
                 HSR72SRE
                 HSR72SRN
                 HSR72SCA
                 HSR72SRU
                 HSR72SQU
                 HSR72SRM
                 HSR72SCP
                 HSR72SRD
                 HSR72SBY
                 )
   LOCK (KEEP =          HSR72LNM
                         HSR72LSH
                         HSR72LS1
                         HSR72LSW
                         HSR72LS2
                         HSR72LEH
                         HSR72LE1
                         HSR72LEW
                         HSR72LE2
                         )
   RULE (KEEP =          HSR72RNM
                         HSRXRRV1
                         HSR72RTY
                         HSR72RUS
                         HSR72RTM
                         )
  ;
  RETAIN N 0;
  INFILE SMF MISSOVER;
  N+1;
  *F N > 1000 THEN STOP;
  INPUT @1 SMFXXFLG PIB1.    SMFNO    PIB1.    TIMEOUT SMFSTAMP8.
           SYSTEM $CHAR4.    HSRSSI   $CHAR4.  HSRSTY  PIB2.
           HSRHVR PIB2.      HSRJBN   $CHAR8.  HSRRST  SMFSTAMP8.
           HSRNT  PIB2.      HSRSVD1  PIB2.
           HSRHPSO PIB4.     HSRHPSL  PIB2.    HSRHPSN PIB2.
           HSRPUIO PIB4.     HSRPUIL  PIB2.    HSRPUIN PIB2.
           HSRACTO PIB4.     HSRACTL  PIB2.    HSRACTN PIB2.
           HSRPERO PIB4.     HSRPERL PIB2.     HSRPERN PIB2.
@  ;
    OUTPUT S;
IF HSRNT = 0 THEN DELETE;  * # OF TRIPLETS 0;
*;
IF HSRSTY = 72 THEN DO;
*;
IF HSRHPSN > 0 THEN DO;
   DO I = 0 TO (HSRHPSN-1);
   OFFSET = HSRHPSO -3 + I*HSRHPSL;
   INPUT @OFFSET HSRSVD2 PIB2.
                 HSRSVD3 PIB8.
                 HSRSVR  PIB2.
                 HSRSVD4 PIB2.
                 HSRSVD5 PIB2.
                 HSRSTPN $CHAR8.
                 HSRPRCN $CHAR8.
                 HSRSVD6 PIB4.
                 HSRCRTME SMFSTAMP8.
                 HSRENV  $CHAR8.
                 HSRENTR $CHAR8.
                 HSRENVID PIB4.
                 HSRENVIX PIB4.
                 HSRSVD9  PIB4.
                 HSRSVDA  PIB8.
                 @;
                 IF HSRENV = 'BATCH' THEN DELETE;
   OUTPUT PROCESS;
   END;
                    END;
IF HSRPUIN > 0 THEN DO;
   DO I = 0 TO (HSRPUIN-1);
   OFFSET = HSRPUIO -3 + I*HSRPUIL;
   INPUT @OFFSET HSRTDS  $CHAR8.
                 HSRNODE $CHAR16.
                 HSRMDL  $CHAR8.
                 HSRDRT  SMFSTAMP8.
                 HSRPU1  PIB8.
                 HSRUID  $CHAR8.
                 HSRUSER $CHAR8.
                 HSRUTERM $CHAR8.
                 HSRUTM  SMFSTAMP8.
                 HSRUSNID PIB4.
                 HSRUTYPE PIB1.
                 HSRUMODE PIB1.
                 HSRUNQID PIB4.
                 HSRPU2   PIB4.
                 HSRTRUL  $CHAR16.
                 HSRTRID  $CHAR8.
                 HSRTRSV1 PIB8.
                 HSRTRSV2 PIB3.
                 HSRTRLVL PIB1.
                 HSRTRLCL $CHAR8.
                 HSRTRT   SMFSTAMP8.
                 HSRTRNID PIB4.
                 HSRTRCID PIB4.
                 HSRPU3   PIB8.
                 @;
   OUTPUT PROUNIT;
   END;
                    END;
IF HSRACTN > 0 THEN DO;
   DO I = 0 TO (HSRACTN-1);
   OFFSET = HSRACTO -3 + I*HSRACTL;
   INPUT @OFFSET HSR72RS1 PIB2.
                 HSR72NT  PIB2.
                 HSR72SIO PIB4.
                 HSR72SIL PIB2.
                 HSR72SIN PIB2.
                 HSR72SCO PIB4.
                 HSR72SCL PIB2.
                 HSR72SCN PIB2.
                 HSR72SAO PIB4.
                 HSR72SAL PIB2.
                 HSR72SAN PIB2.
                 @;
   OUTPUT ACCOUNT;
***;
       IF HSR72SIN > 0 THEN DO;
           DO I = 0 TO (HSR72SIN-1);
           OFFSET = HSR72SIO -3 + I*HSR72SIL;
          *INPUT @OFFSET
                         @;
           *UTPUT SUID   ;
           END;
                            END;
       IF HSR72SCN > 0 THEN DO;
           DO I = 0 TO (HSR72SCN-1);
           OFFSET = HSR72SCO -3 + I*HSR72SCL;
           INPUT @OFFSET HSR72SN  PIB4.
                         HSR72TN  PIB4.
                         @;
           OUTPUT SUCOUNT;
           END;
                            END;
       IF HSR72SAN > 0 THEN DO;
           DO I = 0 TO (HSR72SAN-1);
           OFFSET = HSR72SAO -3 + I*HSR72SAL;
           INPUT @OFFSET HSR72RS2 PIB4.
                         HSR72ELP PIB8.6
                         HSR72RS3 PIB4.
                         HSR72RUN PIB8.6
                         HSR72QSC PIB4.
                         HSR72QUE PIB8.6
                         HSR72RIC PIB4.
                         HSR72RSM PIB8.6
                         HSR72RS4 PIB4.
                         HSR72TRM PIB8.6
                         HSR72LKC PIB4.
                         HSR72LCK PIB8.6
                         HSR72RS5 PIB4.
                         HSR72CPU PIB8.6
                         HSR72RS6 PIB4.
                         HSR72PGS PIB8.6
                         HSR72PGH PIB4.
                         HSR72SRP PIB4.
                         HSR72SRR PIB8.
                         HSR72SRQ PIB4.
                         HSR72SRW PIB8.
                         HSR72SQP PIB4.
                         HSR72SQR PIB8.
                         HSR72SQQ PIB4.
                         HSR72SQW PIB8.
                         HSR72VSP PIB4.
                         HSR72VSR PIB8.
                         HSR72VSQ PIB4.
                         HSR72VSW PIB8.
                         HSR72TXP PIB4.
                         HSR72TXR PIB8.
                         HSR72TXQ PIB4.
                         HSR72TXW PIB8.
                         HSR72PRQ PIB4.
                         HSR72PRW PIB8.
                         HSR72XS  PIB4.
                         HSR72XSR PIB4.
                         HSR72XSK PIB8.
                         HSR72RLD PIB4.
                         HSR72RUL PIB4.
                         HSR72EXL PIB4.
                         HSR72EXC PIB4.
                         HSR72FNC PIB4.
                         HSR72TAM PIB4.
                         HSR72REF PIB4.
                         HSR72SIG PIB4.
                         HSR72RC  PIB4.
                         HSR72RC2 PIB4.
                         @;
           OUTPUT SUACCNT;
           END;
                            END;
***;
   END;
                    END; * OF ACCOUNT;
IF HSRPERN > 0 THEN DO;
   DO I = 0 TO (HSRPERN-1);
   OFFSET = HSRPERO -3 + I*HSRPERL;
   INPUT @OFFSET HSR72RV1 PIB2.
                 HSR72NT2 PIB2.
                 HSR72SCO PIB4.
                 HSR72SCL PIB2.
                 HSR72SCN PIB2.
                 HSR72LKO PIB4.
                 HSR72LKL PIB2.
                 HSR72LKN PIB2.
                 HSR72RPO PIB4.
                 HSR72RPL PIB2.
                 HSR72RPN PIB2.
                 HSR72TBO PIB4.
                 HSR72TBL PIB2.
                 HSR72TBN PIB2.
                 @;
   OUTPUT PERFORM;
***;
       IF HSR72SCN > 0 THEN DO;
           DO I = 0 TO (HSR72SCN-1);
           OFFSET = HSR72SCO -3 + I*HSR72SCL;
           INPUT @OFFSET
                 HSR72SRE   $CHAR8.
                 HSR72SRN   PIB2.
                 HSR72SR1   PIB2.
                 HSR72SCA   PIB4.
                 HSR72SRU   PIB8.
                 HSR72SQU   PIB8.
                 HSR72SRM   PIB8.
                 HSR72SCP   PIB8.
                 HSR72SRD   PIB4.
                 HSR72SBY   PIB8.
                         @;
           OUTPUT SYSCALL;
           END;
                            END;
       IF HSR72LKN > 0 THEN DO;
           DO I = 0 TO (HSR72LKN-1);
           OFFSET = HSR72LKO -3 + I*HSR72LKL;
           INPUT @OFFSET HSR72LNM  $CHAR8.
                         HSR72LSH  PIB4.
                         HSR72LS1  PIB8.
                         HSR72LSW  PIB4.
                         HSR72LS2  PIB8.
                         HSR72LEH  PIB4.
                         HSR72LE1  PIB8.
                         HSR72LEW  PIB4.
                         HSR72LE2  PIB8.
                         @;
           OUTPUT LOCK   ;
           END;
                            END;
       IF HSR72RPN > 0 THEN DO;
           DO I = 0 TO (HSR72RPN-1);
           OFFSET = HSR72RPO -3 + I*HSR72RPL;
           INPUT @OFFSET HSR72RNM $CHAR16.
                         HSRXRRV1 PIB3.
                         HSR72RTY PIB1.
                         HSR72RUS PIB4.
                         HSR72RTM PIB8.
                         @;
           OUTPUT RULE   ;
           END;
                            END;
***;
   END;
                    END; * OF PERFORMANCE;
END; * IF TYPE 72;
RETURN;
*ROC PRINT DATA=S;
FORMAT TIMEOUT HSRRST DATETIME. ;
*ROC PRINT DATA=PROCESS;
PROC SORT DATA=PROCESS; BY HSRENV;
DATA SUMC (KEEP = HSRENV COUNT);
SET PROCESS; BY HSRENV;
IF FIRST.HSRENV THEN COUNT=0;
COUNT+1;
IF LAST.HSRENV THEN OUTPUT SUMC;
RETURN;
PROC PRINT;
*ROC PRINT DATA=PROUNIT;
FORMAT HSRDRT HSRUTM HSRTRT DATETIME.;
*ROC PRINT DATA=ACCOUNT;
*ROC PRINT DATA=SUCOUNT;
PROC SORT DATA=SUACCNT; BY DESCENDING HSR72ELP;
PROC PRINT DATA=SUACCNT(OBS=1000) UNIFORM;
*ROC PRINT DATA=PERFORM;
*ROC PRINT DATA=SYSCALL;
*ROC PRINT DATA=LOCK   ;
*ROC PRINT DATA=RULE   ;
PROC PRINTTO PRINT=CORR;
PROC CORR NOSIMPLE NOPROB ; VAR HSR72ELP; WITH
                         HSR72RUN
                         HSR72QSC
                         HSR72QUE
                         HSR72RIC
                         HSR72RSM
                         HSR72TRM
                         HSR72LKC
                         HSR72LCK
                         HSR72CPU
                         HSR72PGS
                         HSR72PGH
                         HSR72SRP
                         HSR72SRR
                         HSR72SRQ
                         HSR72SRW
                         HSR72SQP
                         HSR72SQR
                         HSR72SQQ
                         HSR72SQW
                         HSR72VSP
                         HSR72VSR
                         HSR72VSQ
                         HSR72VSW
                         HSR72TXP
                         HSR72TXR
                         HSR72TXQ
                         HSR72TXW
                         HSR72PRQ
                         HSR72PRW
                         HSR72XS
                         HSR72XSR
                         HSR72XSK
                         HSR72RLD
                         HSR72RUL
                         HSR72EXL
                         HSR72EXC
                         HSR72FNC
                         HSR72TAM
                         HSR72REF
                         HSR72SIG
                         HSR72RC
                         HSR72RC2
                         ;
