./       ADD   NAME=$$$DOC
 FILE
 MEMBER      EXPLANATION
 --------    ----------------------------------------------------
 JCLUPDT     THE SAMPLE JCL TO IEBUPDATE THE MEMBERS.
 $$$DOC      THIS FILE ( CONTAINS DOCUMENTS OF EACH FILE)
 PTFLIB      PTF PROGRAMS (FINDFIX, SAS, ETC)
 QISP136     QUEUE SOURCES, MACS, ISPF DRIVERS FOR MVS/JES2 SP134 OR
                  SP136
 SOURCE      MISCELLANEOUS PROGRAMS (ASMTRACE, DISASM, SAS, ETC)
 LOCMEM      ASM SOURCE, PANELS, TUTORIALS, CLIST
 ----------------------------------------------------------------
 THE ABOVE FILES ARE IN IEBUPDATE FORMAT BY LRECL=80.
./       ADD   NAME=$$$TOCBT
DATE: 06/14/88
  1. QISP136 IS NOW SUPPORTING MVS SP134 OR SP136 AND ISPF V1 OR V2.
      NEW QUEUE/ISPF TUTORIALS ARE INCLUDED. SUPPORT MVS SP134 AND
      EARLIER OR OLDER ISPF VERSIONS.
  2. LISTPDSI PROGRAM TO LIST MEMBERS BY ISPF MODIFIED OR CREATED
     DATE. SEE LOCMEM MEMBER.
--------------------------------------------------------------------
DATE: 05/04/87
1. LISTPTF WAS REWRITTEN TO INCLUDE CONTROL BLOCK TO ALLOCATE ESDID
   CSECT AND WAS IMPROVED BY CUTTING CPU TIME BY 95%.
2. FINDFIX (SMP/E) EXPLANATION TO READ OUTPUT OF SMPCNTL IS INCLUDED.
   NEW RELEASE V2.2 IS INCLUDED AFTER FIXED SOME DEBUGS AND IMPROVEMENT
   IN DEBUG OUTPUT/DUMPS. IT GIVES MORE IMPROVEMENTS IN OUTPUTS.
3. QISP136  HAS MORE COMMANDS (DM,FR,XM,AM,PM,JOB,SA,VS) THAT IS MORE
   INFORMATION. NEW COMMAND CALLED MPL TO SHOW WHY MPL INCREASED OR
   DECREASED. ISPF TUTORIALS/HELPS ARE INCLUDED.
4. QISP136 SUPPORTS TSO WITHOUT ISPF/PDF. SEE JCLSP134.
   IT SUPPORT ISPF V1R1M0 AND V2R2M0 AND UP.
5. QISP136 HAS SYSTEM OPERATOR PROCEDURE TO REASM/RELINK WHEN JES2
   TRANSFER TO NEW CHECKPOINT DATA VOLUME. SEE QUEQI4, QUEQI4T, AND
   QUEQI42. (QUEOBJ AND QUEOBJT ARE PROCS TO COMPRESS LINKLIB AND
   OBJLIB DSN IF THERE IS ABEND CODE B37.)
6. SAS SOURCE INCLUDED TO PRINT CONTENTS FROM FINDFIX'S INFOIN FILE.
7. SAS SOURCE WAS IMPROVED FOR PRINT SMPE CSI CONTENTS.
--------------------------------------------------------------------
DATE: 05/19/86
  1.LISTPTF IS UPGRADED AND FIXED.
  2.PRINTOFF IMPLEMENTED TO SUPPORT MICROFICHE PAGE WITH BLOCKHEAD OF
    MEMBERS; BLOCKSUB ROUTINE IS ADDED.
  3.SAS PGM IS UPGRADED TO DISPLAY CONTENTS OF SMPE VSAM CSI DATASETS
  4.FINDFIX V2.1 IS UPGRADED WITH NEW INFORMATION DISPLAY (ONLY SMPE).
     (MORE POWERFUL, MORE INFORMATION, MORE IMPROVEMENT IN YOUR SYSTEMS
      MAINTAINANCE SKILLS.)
  5.QISP134/QSTART MACRO IS CHANGED TO REFLECT HASPCKPT VOLUME NAME
    CHANGE  BY SPECIFYING CKPT ENTRY IN JCL/ASM/PARM CARD (SEE
    $$QIDOC).
  6.QISP134/DUMP PROGRAM IS UPGRADED AND FIXED.
  7.PTFLIB HAS MORE PROGRAMS/JCLS
     TO SUPPORT EASY MAINTAINENCE PROCEDURE (PTF LIBRARY CONTROL).
--------------------------------------------------------------------
DATE: 9/17/85
1. QISP134 HAS MORE COMMANDS (ROUTE, ASID, RMF, ETC.)
2. FINDFIX V2.0 SUPPORTS SMPE VSAM CSI (GLOBAL AND TARGET/DLIB) AND
   IS REPLACED WITH FINDFIX V1.4 (IBM SWIZERLAND). (SEE PTFLIB DOC.)
3. SAS PGM TO DISPLAY CONTENTS OF SMPE VSAM CSI DATASETS.
./       ADD   NAME=$$QIDOC
THE SP13  VERSION OF THE QUEUE COMMAND IS MODIFIED FOR CDSI NEEDS.
WORKS ON MVS 3.8J  & ANY ISPF VERSIONS (RELINK WITH ISPLINK OF EACH
ISPF VERSION )
 -------------------------------------------------------------------
NOTE FROM DOR/CDSI 05/4/87. ISPF V2+ DOES SUPPORT THIS.
    USE SAME SP134 FOR SP136 PLEASE SEE ASM EXEC PARM SPECIFICATION.

 -------------------------------------------------------------------
 WORKS WELL ON ISPF V2.3.   6/14/88
 FOR ADDITIONAL CHANGE INFORMATION, PLEASE SEE $$QIDOC ON QISP136.
 -------------------------------------------------------------------
 NOTICE: ALL SOURCE ARE MODIFIED FOR BOTH SP134 AND SP136. PLEASE
         DISCARD OLD QISP134 QUEUE SOURCES FROM YOUR LIBRARY
         OF OLD CBT TAPE.
 -------------------------------------------------------------------
USING ISPF QI, MY PRODUCTIVITY INCREASES MUCH THAN USING TSO Q BECAUSE
I USE ISPF SPILTING WHEN CHECKING WITH JES2 SPOOL WHEN WORK WITH ISPF
EDITING AND OTHER FUNCTIONS.  ISPF QI  SAVES QUEUE RE-INITIALITION
OVERHEAD.  IT USES FOR MANY MONTHS AT NO PROBLEM.

 -------------------------------------------------------------------
 WARNING BEFORE YOU SUBMIT ASM/LKED JOBS:
 TO CHANGE HASPCKPT VOLUME NAME, USE CKPT IN SYSPARM OF ASM PARM.
  I.E. SYSPARM=(CKPT=XXXXXX) WHERE XXXXXX IS HASPCKPT VOLUME NAME.
     SEE $CDSIDOC FOR JCL SAMPLES.  (DEFAULT CKPT IS MVSDL1)
     SEE $CDSPARM FOR SYSPARM CODE.
 -------------------------------------------------------------------
 TO INSTALL ISPF QUEUE FOR SP136, PLEASE SEE $$QIDOC OF QISP136.
 -------------------------------------------------------------------
 TO INSTALL ISPF QUEUE FOR SP134
    1. SEE $CDSPARM TO SET SYSPARM IN ISPSP134 JCL OR QSTART.
    2. ALLOCATE QUEISPF OBJLIB AND LOADLIB (AUTHORIZED LIB).
    3. CODE DSN NAME OF ISPLINK MODULE RESIDED IN LKED STEP.
    4. USE ISPSP134 TO ASM AND LKED ALL Q ROUTINES AND ISPF DRIVER.
       SYSPARM=SYSP TO ADD MORE COMMANDS.
    5. COPY QI@A PANEL MEMBER TO YOUR ISPPLIB DSN
        OR  QI@V2 PANEL MEMBER FOR ISPF V2.2
    6. ADD 'QI' COMMAND ENTRY IN ISR@PRIM (SEE ISR@PRIM).
    7. READY TO GO AND HAVE FUN!!!
 NOTE: (NO LOAD MODULES AVAILABLE DUE TO YOUR DIFFERENT ISPF VERSION.
     YOU MUST RELINK QI WITH ISPLINK MODULE FROM IBM (ISRLOAD/ISPLOAD).
     LOAD MODULE MUST BE IN AUTHORIZED LIBRARY.
 -------------------------------------------------------------------
 TO INSTALL TSO QUEUE WITHOUT ISPF FOR SP134
    1. FOLLOW ISPF QUEUE STEPS 1 AND 2 BEFORE ASM AND LKED FOR
       TSO WITHOUT ISPF. YOU CAN ALLOCATE SEPERATE OBJLIB FOR TSO.
    2. USE JCLSP134 TO ASM AND LKED ALL Q ROUTINES.
    3. ADD 'Q' COMMAND ENTRY IN ISR@PRIM (SEE ISR@PRIM).
    4. READY TO GO AND HAVE FUN!!!
 -------------------------------------------------------------------
  SEE $CDSPARM FOR MORE DETAIL TO INCLUDE ASM SYSPARM CODING.
  ADD ISPF DIALOG MANAGEMENT INTERFACE. SET  1 TO QISPF.
  QCOMMON IS EXPANDED TO SUPPORT ISPF. AND SO Q5
 -------------------------------------------------------------------
 EXTRA QUEUE FEATURES:
1.JOBNAME CAN BE REPEATED WITH BLANKED OR ( DD USE "-"). SEE Q6.
2.QCOMMON IS EXPANDED.
3.NEW MASTER CONSOLE COMMAND (CSYS) TO ISSUE SYSTEM CMDS BY QUEUE.
4.ROUTE JOBNAME TO LOCAL OR REMOTE.
5.DISPLAY BY FORMS/FBC/UBC/COPIES UNDER JOB/DDN.
6.DISPLAY CARRIAGE CONTROL LINES OF JOB/DDN.
___ ONLY ISPF QUEUE FEATURES -----
1.SRM COMMAND TO DISPLAY SRM INFORMATION (CAME FROM #I /FILE 266).
2.ALLOC COMMAND TO DISPLAY ALLOC INFORMATION (CAME FROM #R /FILE 266).
3.ASID COMMAND TO DISPLAY ASID INFORMATION.
4.COREZAP COMMAND TO DISPLAY/ZAP  MEMORY CONTENTS. 7/10/85 STILL DEBUG
    OK TO DISPLAY  BUT NOT WORK ON ZAP. WILL BE DONE.
5.VSM COMMAND TO DISPLAY VIRTUAL STORAGE MANAGEMENT
6.MPL COMMAND TO DISPLAY MULTIPLE PROGRAMMING LISTING
 -------------------------------------------------------------------
 -------------------------------------------------------------------

I WOULD APPRECIATE HEARING FROM ANYONE WHO COMES UP WITH EITHER
ADDITIONAL BUGS OR FIXES TO THE KNOWN ONES.  ALSO, I WILL TRY TO
PASS ON ANY FIXES TO THOSE USERS THAT I AM AWARE OF, SO PLEASE DROP
ME A NOTE IF YOU GET THIS OFF OF ONE OF THE MODS TAPES.

DAVE RIKER
COMPUTER DATA SYSTEMS INC
ONE CURIE COURT
ROCKVILLE, MARYLAND 20850
(202) 362-1160

./       ADD   NAME=$FINDFIX
Subject: Explanation of the SMPCNTL contents of FINDFIX V2.

FINDFIX v2 will provide receive and apply control cards in SMP4
format.  The cards can be copied to tailor with SMPE control cards for
receive, apply, or accept setups.  I do ignore SMPCNTL apply cards
outputs because they are the same as receive. I recommend that the
receive output is excellent for SMPE documentation purpose.

Here is a sample SMPCNTL output from FINDFIX.

+--------------------------------------------------------------------+
×                                                                    ×
× RECEIVE  S(                                                        ×
×  /*        SYSMOD     FMID    LEVEL    HOLD RCVD           /*      ×
×          UZ42927   /*EBT1102 85/07/01      NOT YET       */        ×
×          UZ61713   /*EBT1102 85/05/02 HOLD 85231         */        ×
×          UZ64453   /*JBB1326 84/06/03 HOLD 85262         */        ×
×          UZ64456   /*EBB1102 85/05/02 HOLD 85262         */        ×
×          UZ70083   /*EBT1102 85/05/02      85228         */        ×
×          UZ70361   /*EBB1102 85/05/02      85262         */        ×
×          UZ70362   /*JBB1326 85/05/02      85262         */        ×
×          UZ71108   /*EBB1102 85/05/02      85262         */        ×
×          UZ71110   /*JBB1326 84/07/01      85052         */        ×
×          ).                                                        ×
×                                                                    ×
+--------------------------------------------------------------------+

In the example, we find three different common information as
following:

1. The SYSMOD UZ42927 have not been received in global CSI so do
receive this sysmod.

2. The sysmods  UZ61713, UZ64453, and UZ64456 are in holddata as PE
ptfs. They have already received by the data indicated from global
CSI. They are not applied because SMPE will prevent them to apply and
bypass them. (HOLDDATA comes from file 4 of each IBM PUT tape and
expection request  from IBM SUPPORT CENTER. Please receive all
holddata (file 4 and expections) before applying SYSMODS.  The
holddata are required to both FINDFIX V2 and SMPE.)

3. The other sysmods (UZ70083 thru UZ71110) have already received by
the date indicated from global CSI. They are not applied as requisite
to the held sysmods of the previous paragraph (2.)  FINDFIX V2 will
punch them in case if IBM will release the held sysmods someday with
superceded or fixed APAR.  SMPE will also prevent them to apply as
reqs to held sysmods and bypass them.

There are two steps to use the FINDFIX's generated sysmods so that
SMPE will apply or accept the sysmods depending on the status of the
sysmod (held, released, requisited, supressed, etc).

1. You have to tell SMPE to check the sysmods first for any errors.

2. The sysmods generated by FINDFIX are required to have REDO operand
only during apply or accept without CHECK operand.

After applying the sysmods indicated from previous FINDFIX V2 request,
redo with FINDFIX V2 if the sysmods are applied and are not in SMPCNTL
output (except the holddata sysmods and their reqs.)

To tailor FINDFIX SMPCNTL output for SMPE applying setup, code the
like as following:

+--------------------------------------------------------------------+
×                                                                    ×
× SET BOUNDARY(tgtzone).     /* tgt TEST PACK              */        ×
× APPLY      GROUP           /* INCLUDE REQUISITE PTFS     */        ×
×            CHECK           /* to check for any errors    */        ×
×            SELECT(                                                 ×
×  /*        SYSMOD     FMID    LEVEL    HOLD RCVD         */        ×
×          UZ42927   /*EBT1102 85/07/01      NOT YET       */        ×
×          UZ61713   /*EBT1102 85/05/02 HOLD 85231         */        ×
×          UZ64453   /*JBB1326 84/06/03 HOLD 85262         */        ×
×          UZ64456   /*EBB1102 85/05/02 HOLD 85262         */        ×
×          UZ70083   /*EBT1102 85/05/02      85228         */        ×
×          UZ70361   /*EBB1102 85/05/02      85262         */        ×
×          UZ70362   /*JBB1326 85/05/02      85262         */        ×
×          UZ71108   /*EBB1102 85/05/02      85262         */        ×
×          UZ71110   /*JBB1326 84/07/01      85052         */        ×
×             )                                                      ×
×           BYPASS(ID     /* DON'T TERMINATE FOR ID CHECKS  */       ×
×   /*       HOLDSYS   */ /* ACCEPT HOLDS (ACTION DOC IOGEN ETC*/    ×
×            )                                                       ×
×      /*   REDO */   /* findfix require FOR REINSTALLATION */       ×
×      .                                                             ×
×                                                                    ×
+--------------------------------------------------------------------+

To tailor FINDFIX SMPCNTL output for SMPE accepting setup, code the
like as following:

+--------------------------------------------------------------------+
×                                                                    ×
× SET BOUNDARY(dlibzone).      /* distribution library    */         ×
× ACCEPT     GROUP             /* INCLUDE REQUISITE PTFS  */         ×
×            CHECK             /* to check for any errors */         ×
×            SELECT(                                                 ×
×  /*        SYSMOD     FMID    LEVEL    HOLD RCVD         */        ×
×          UZ42927   /*EBT1102 85/07/01      NOT YET       */        ×
×          UZ61713   /*EBT1102 85/05/02 HOLD 85231         */        ×
×          UZ64453   /*JBB1326 84/06/03 HOLD 85262         */        ×
×          UZ64456   /*EBB1102 85/05/02 HOLD 85262         */        ×
×          UZ70083   /*EBT1102 85/05/02      85228         */        ×
×          UZ70361   /*EBB1102 85/05/02      85262         */        ×
×          UZ70362   /*JBB1326 85/05/02      85262         */        ×
×          UZ71108   /*EBB1102 85/05/02      85262         */        ×
×          UZ71110   /*JBB1326 84/07/01      85052         */        ×
×             )                                                      ×
×           BYPASS(ID     /* DON'T TERMINATE FOR ID CHECKS */        ×
×   /*       HOLDSYS   */ /* ACCEPT HOLDS (ACTION DOC IOGEN ETC*/    ×
×            APPLYCHECK                                              ×
×            )                                                       ×
×      /*   REDO */      /* findfix require FOR REINSTALLATION */    ×
×      .                                                             ×
×                                                                    ×
+--------------------------------------------------------------------+

The tailoring job looks very simple and effective for each FINDFIX
request.  I use  SMPE release 2 to do with the tailoring procedure.
SMPE R3 is much better but we do not have the release 3 yet. But the
practice of using SMPE's SELECT operand could be used with FINDFIX
V2.

Look for SMPE errors after applying with CHECK operand. Some sysmods
could have rejected for some reason. Check with FINDFIX output of the
rejected sysmods.
./       ADD   NAME=$PDSMEM
//JOBPDSM  JOB (XXXXX,,99),'XXXXXX',
//         CLASS=A,MSGCLASS=A,NOTIFY=DOR
/*ROUTE PRINT RMT55
/*ROUTE PUNCH RMT55
//PDSMEM PROC DSN=,PREFIX='C6000A.DOR'
//LMEMBERS EXEC PGM=LSTPDSMD
//*   LSTPDSMD LIST MEMBERS IN COLUMNUAR FORMAT
//*   LSTPDSML  LIST MEMBERS IN ISPF FORMAT
//STEPLIB DD DSN=C6000A.DOR.LINKLIB2,DISP=SHR,UNIT=3350
//PDS DD DSN=&PREFIX..&DSN,DISP=SHR
//LISTING  DD SYSOUT=A,DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)
//CONTENTS DD DSN=C6000A.DOR.CNTL($FILEMEM),DISP=(MOD,KEEP),
//    DCB=(RECFM=FB,LRECL=80,BLKSIZE=9440)
//SYSUDUMP DD SYSOUT=A
//SYSABEND DD SYSOUT=A
//*SYSTRACE DD SYSOUT=A
//*SYSTRAC2 DD SYSOUT=A
//   PEND
//S EXEC PDSMEM,DSN=SRCLIB,PREFIX='SYS7.TOCBT'
./       ADD   NAME=JCLUPDT
//DORUPDT JOB (6000A,004,,999),UPDATE,CLASS=A,MSGCLASS=A,NOTIFY=DOR
/*ROUTE PRINT RMT55
//UPMEMPDS PROC MEM=$$$DOC,MEM2=DOCLIB
//* AFTER OFFLOAD THE FILE 384 BY CBT973
//S1 EXEC PGM=IEBGENER
//SYSPRINT DD SYSOUT=*
//SYSIN DD DUMMY
//SYSUT1   DD  DSN=MYPDS.FILE384.DATA(&MEM),DISP=SHR,
//         UNIT=3350
//SYSUT2   DD  DSN=&&TEMP,UNIT=SYSDA,SPACE=(TRK,(50,10)),DISP=(,PASS)
//UPDT  EXEC  PGM=IEBUPDTE,PARM=NEW
//SYSPRINT  DD  SYSOUT=A
//SYSIN     DD  DSN=&&TEMP,DISP=OLD,UNIT=SYSDA
//SYSUT2    DD  DSN=SYS7.MYPDS.&MEM2.,DISP=(NEW,KEEP),UNIT=3380,
//      SPACE=(TRK,(300,50,80)),
//      DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB,DSORG=PO)
//     PEND
//$$$DOC   EXEC UPMEMPDS,MEM=$$$DOC
//PTFLIB   EXEC UPMEMPDS,MEM=PTFLIB,MEM2=PTFLIB
//LOCMEM   EXEC UPMEMPDS,MEM=LOCMEM,MEM2=LOCMEM
//QISP136  EXEC UPMEMPDS,MEM=QISP136,MEM2=QISP136
//SOURCE   EXEC UPMEMPDS,MEM=SOURCE,MEM2=SRCLIB
./       ADD   NAME=LOCMEM
THE PROGRAM WHICH I MODIFIED FROM PTFLIST IS ISPF DIALOG TO SEE ANY
MEMBER OF PDS BY ISPF MODIFIED OR CREATED DATE OR GROUP OF MEMBERS.

I AM TIRED OF USING ISPF BROWSE OR EDIT MEMBER LIST TABLE WITH 100 OR
MORE MEMBERS.  IT TAKES LONG TIME TO SCAN OR READ ISPF INFORMATION OF
EACH MEMBER THAT CHANGED LAST OR TWO WEEKS AGO (FOR EXAMPLE.)  MY EYES
ARE GETTING SORE SO I DECIDE TO WRITE A PROGRAM TO LOCATE MEMBERS MORE
QUICKER AND EFFECTIVE.

THE PROGRAM ALSO CAN GIVE AN OPPORTUNITY TO BROWSE OR EDIT THE SELECTED
MEMBER FROM SHORT LIST OF MEMBER TABLE.

MEMBER      DESCRIPTION
---------   ---------------
$ASMJCL     JCL TO ASSEMBLE LISTPTFI
$INSTALL    INSTRUCTION ON HOW TO INSTALL LOCMEM.
LISTPDSI    ASM SOURCE
LOCMEM#P    PANEL
LOCMEM#T    PANEL OF ISPF TABLE LIST
LOCMEM#R    PANEL
LOCMEM#S    CLIST REQUIRED BY LOCMEM#P
TLOCMEM     MAIN TUTORIAL PANEL
TLOCMEM1    TUTORIAL PANEL
TLOCMEM2    TUTORIAL PANEL
TLOCMEM3    TUTORIAL PANEL
./       ADD   NAME=PTFLIB
TO HAVE A TRUE CONCEPT OF SYSTEM INTEGRATION, I INCLUDE SOME TECHNICAL
TOOLS TO SUPPORT PREVENTIVE MAINTAINANCE USED AT MY SHOP.
ALL TOOLS ARE INTENDED FOR SMPE FORMAT.

THE TOOLS ARE CATEGORICAL BY THEIR OWN FUNCTION AS FOLLOWING:

A. PTF ARCHIVES FOR EACH CICS, NCP, OR MVS.
   1. PTFS IN SEQUENTIAL ORDER BY SYSMOD NAME (BOTH SMP4/SMPE FORMAT)
   2. HOLDDATA BY LEVEL DATE (FILE 4 OF EACH IBM PTF TAPES)
   3. EXCEPTION HOLDDATA FROM IBM SUPPORT CENTER
   4. INOIN/INOUT DATA FOR FINDFIX V2 BY FMIDS REQUIRED ON SYSTEM
B. SYSMOD REQUISITE CHAINING CHECKING BY FINDFIX V2.
C. LETTERCOVERS LIBRARY FOR SCANNING, RESEARCHING, AND INFORMATION.
D. CSI DUMPS IN OWN FORMAT (LESS LINES THAN SMPE LIST) BY SAS.
E. CROSS PRE'S OF EACH SYSMOD OF INFOIN FILE BY SAS.
F. MISCELLANEOUS TOOLS: PRINTOUTS

NOTE: 12/02/86 WE HAVE SMP3 V1.3. FINDFIX V2.2 WORKS FINE AND
      FIXED WITH MINOR DEBUGS AFTER WE USE SMPE V1.3.

I USE SMP/E 1.2 ( SMPE 1.3 IS BETTER). I HAVE LOTS OF PTF TAPES (LEVEL
8111 TO 8602). I DEVELOPED A BETTER WAY TO HAVE ARCHIVES OF PTF TAPE
LIBRARY INTO ONE FILE TAPE USING CBT FILE 333. I ENCLOSED MOST OF FILE
333 MODULES. I MODIFIED PUTXREF2 TO INCLUDE THE LEVEL DATE BEHIND
SYSMOD NAME FOR EASIER REFERENCE OF WHICH LEVEL DOES PTF BELONG.

I INCLUDE JCL SAMPLE NAMED MVSACCUM FOR PTF LEVEL ACCUMULATION ARCHIVES
IN EASIER WAY AS WELL AS I UPGRADE NEW LEVEL WHEN USING FINDFIX V2 (FROM
THIS FILE).  THE MASTER PTF TAPE FILE ARCHIVES IS SEPERATELY BY SREL
(Z038 FOR MVS, P004 FOR NCP, C150 FOR CICS, ETC).  THE PUTXREF2 WILL
MAKE REPORTS OF EACH FMID AND THE SYSMODS UNDER FMID IS INCLUDE WITH
LEVEL DATE IN FORMAT OF YY/MM/DD WHICH YOU MUST CODE IN IN MVSACCUM.
(I.E.  86/02/01 FOR LEVEL 8602,  86/02/02 FOR CORRECTIVE PTFS, ETC.)
THESE WILL HELP YOU TO TRACK INTO PTF LEVEL DATE.  WHEN IBM LEVEL 1/2 OF
A CASE PROBLEM TELL YOU OF CORRECTIVE PTFS YOU WILL USE PUTXREF2 REPORT
TO LOOK FOR AVAILABLE SYSMOD OF YOUR ARCHIVES.  THE JCL IS INCLUDED WITH
PUT FILE 4 (SMPE HOLDDATA) ACCUMULATED IN "IPO1.JCLIN" AND  THE PROC SET
TO UPDATE FINDFIX V2 INFOIN/INFOUT DSNS BY REQUIRED FMIDS.

I INCLUDE JCL SAMPLE "PULLSAVE" TO PRODUCE COVERLETTERS OF EACH FMID
IN A DSN FILE (DSORG=PO). I USE THE COVERLETTERS TO READ PROBLEM
DESCRIPTION OF SYSMODS. HOLD SYSMODS IS MY PRIMARY INFORMATION DURING
FINDFIX V2 PROCESSING (FOR EXAMPLE, HOLDDATA WITH REASON OF DEP, SYS,
OR DOC  WHICH YOU HAVE TO APPLY/ACCEPT IN SMPE SEPERATELY FOR EACH
SYSMOD AS PER COVERLETTER INSTRUCTION OR IBM SUPPORT CENTER
ASSISTANCE.)

I REMODIFY FINDFIX FROM SMP4 TO SMPE TO ACCESS SMPE CSI FILES IN VSAM.
I USE FINDFIX V2 TO MAKE REPORTS OF MISSING PTFS AND GENERATE
SMP-CODED CARDS (IN SMP4 FORMAT, YOU HAVE TO EDIT THEM INTO SMPE
FORMAT) OF SELECTED SYSMODS OF EACH FMID FOR RECEIVE FROM THE PTF
LIBRARY TAPE  FASTER THAN FROM IBM PTF TAPES.  I FIND THAT FINDFIX V2
IS EASIER TO LOCATE SYSMODS THAT WERE NOT YET APPLIED OR ACCEPTED INTO
SYSTEM INCLUDED HOLDDATA. FOR MORE EXPANATION ABOUT USING FINDFIX'S
SMPCNTL CONTENTS, SEE $FINDFIX.

FINDFIX V2 CARRIES HOLD SYSMODS IN RECIEVE/APPLY REPORTS BECAUSE YOU
HAVE TO CHECK WITH IBM SUPPORT CENTER FOR EXCEPTION/HOLD STATUS. THE
JCL "MVSACCUM" USE TO COPY HOLDDATA (FILE 4 OF IBM PTF TAPE) INTO
MEMBER OF 'IPO1.JCLIN'  SO  YOU HAVE TO RECEIVE HOLDDATA INTO GLOBAL
CSI EVERY TIME YOU RECEIVE PTF TAPE; THUS THESE WILL GIVE SMPE TO
PREVENT APPLYING/ACCEPTING THE ERROREOUS SYSMODS INTO YOUR SYSTEMS
AND TO PREVENT CAUSING REGRESSION IN REQUISITE CHAINING PROBLEMS.

FINDFIX V2 ALSO MANAGES SYSMODS IN YOUR SYSTEM AND KEEPS THEM CLEAN IN
EVERY NEXT LEVEL AND MAKE REPORTS OF HOLD SYSMODS FOR YOUR DECISION.
(SMPE IS SMART NOT TO APPLY/ACCEPT HOLD SYSMODS AS THE SAME WAY AS THE
FINDFIX V2 REPORT SHOWS WHY.)

FINDFIX V2 IS MORE POWERFUL TO MAKE REPORTS OF NEW UPGRADE LEVEL IN
YOUR SYSTEMS BEFORE SMPE.  IT CAN TELL YOU THAT YOU MAY NEED MORE
PRE'S PTFS THAT IBM SOMETIME FORGET TO SHIP IN PTF TAPE AS WELL AS TO
CHECK PRE'S CHAINING OF SMPE'S CSI AND PTF TAPE LIBRARY.

I INCLUDE SASXPRE SOURCE THAT WILL GIVES YOU A COMPLETE LISTING OF
CROSS REFERENCE OF EACH PRE'D SYSMODS FROM INPUT OF INFOIN FILE. THE
JCL "SASXPRE" WILL READ FINDFIX'S INFOIN DATA FILE AS INPUT TO SAS.
THIS PROCESSING IS QUICKER THAN SEARCH PRE FROM MASTER PTF TAPE FILE.
THE SASXPRE OUTPUTS WILL SHOW ANY REQUIRED SYSMODS IS AVAILABLE OR
NOT. UNAVAILABLE SYSMODS CAN BE INDICATED WITH NO LEVEL DATA "(YYMM)"
PRINTED ON SECOND COLUMN.  THEY CAN BE A PRIMARY FACTOR OF MISSED PTFS
FROM YOUR ARCHIVES OF PTF MASTER LIBRARY.

MY GOAL IS TO COLLECT ALL PTFS FOR EACH CICS, NCP, OR MVS MASTER PTF
LIBRARY RESPECTFULLY (DONE BY SREL SELECTION.)  PTFS FROM EACH MASTER
PTF LIBRARY CAN BE SELECTED BY FMID TO UPGRADE INFOIN/INFOUT FILE.
WHEN UPGRADE FUNCTION OR SYSTEM.

MEMBER      DESCRIPTION
---------   ---------------
$ASMCOVR    ASSEMBLE SOURCE FOR SMPCOVER
$ASMPTF     ASSEMBLE SOURCES FOR FINDFIX V2
$ASMPTFU    ASSEMBLE SOURCES FOR PTFMAST, PTFUTIL, PTFSORT2, PTFMERG
$ASMPXRF    ASSEMBLE SOURCES FOR PUTXREF2
$CSISAS     JCL SAMPLE
$PTFFIND    DOCUMENTATION TO USE FINDFIX V2 (SMPE ONLY)
CSISASRC    SAS SOURCE TO LIST CSI CONTENTS FROM GLOBAL, TARGET, OR DLIB
FMIDALL     TABLE LISTING AS INPUT TO PUTXREF2
MVSACCNW    JCL SAMPLE TO ACCUMULATE CORRECTIVE PTFS TO MASTER TAPE
MVSACCUM    JCL SAMPLE TO ACCUMULATE PUT TAPES INTO ONE MASTER TAPE
MVSFIND     JCL SAMPLE TO FIND PRE CHAINS FROM GIVEN CONTROL STATEMENTS
MVSFINDF    JCL SAMPLE TO GENERATE RECEIVE STATEMENTS FOR SMPE
NCPFIND     JCL SAMPLE TO GENERATE RECEIVE STATEMENTS FOR SMPE
PTFCOMN     COMMON DSECT FOR FINDFIX V2 CSECTS
PTFENV      CSECT SOURCE FOR FINDFIX V2
PTFFIX      CSECT SOURCE FOR FINDFIX V2
PTFINFO     CSECT SOURCE FOR FINDFIX V2
PTFMAST     SOURCE (SEE CBT FILE 333 FOR LOAD MODULE)
PTFMAST$    DOCUMENTATION TO USE PTFMAST
PTFMERG     SOURCE (SEE CBT FILE 333 FOR LOAD MODULE)
PTFMERG$    DOCUMENTATION TO USE PTFMERG
PTFPARM     CSECT SOURCE FOR FINDFIX V2
PTFROUT     CSECT SOURCE FOR FINDFIX V2
PTFSORT$    DOCUMENTATION TO USE PTFSORT2
PTFSORT2    SOURCE (REASM TO PREVENT I/O ABEND)
PTFVSAM     CSECT SOURCE FOR FINDFIX V2
PUTXREF2    ASM SOURCE AS MODIFIED FROM PUTXREF
PTFUTIL     SOURCE (SEE CBT FILE 333 FOR LOAD MODULE)
PTFUTIL$    DOCUMENTATION TO USE PTFUTIL
PULLSAVE    JCL SAMPLE TO GENERATE RETAIN FILE WITH COVERLETTERS
PUTXREF2    ASM SOURCE
SASXPRE     SAS SOURCE TO LIST PRES OF SYSMODS IN CROSS REFERENCE.
SMPCOVER    ASM SOURCE
./       ADD   NAME=QISP130
THE MEMBER IS DISCONTINUED AND IS CONVERTED INTO QISP136. SEE
$$QIDOC OF QISP136 FOR DETAILS OF HOW TO INSTALL SP130.   DOR 6/14/88.

THIS MEMBER LISTING IS PARTLY FROM QSP130 (IEBUPDTE FORMAT). CDSI
USE SP130 WHEN IN PRE-1984. WE MIGRATED FROM SP130 TO SP134. I
HAD TO KEEP SP130 FOR CBT USERS WHO USE SP130 TO SP133. I NEVER
HEARD OF CBT USERS USING IT UNDER SP131 TO SP133. THE QISPF WAS
ORIGINALLY DEVELOPED ON SP130. AND ON SP134 AND UP I REMODIFIED
DIFFERENTLY (SEE QSP134 LISTING) DUE TO DIFFERENT HASP SOURCE AND
MACROS AS CONTRASTED TO SP130-SP133.   DAVID RIKER 6/11/86
MOST OF QUEUE MEMBERS WAS COPIED FROM CBT FILE 153.
-------------------------------------------------------------------
SOURCE MEMBERS - DESCRIPTION
Q0     - QCOMMON EXPANSION
ISP@QI2- ISPF DIALOG MGMT DRIVER              QI
Q1     - QUEUE MAINLINE MODULE                Q1 QUEUE
Q2     - DATASET ALLOCATION                   Q2 ALLOCATE
Q3     - CHECKPOINT READ                      Q3 CKPT
Q4     - LIST DDNAMES AND DSIDS               Q4 DDNAME
Q5     - 3270 DISPLAY                         Q5 DISPLAY
Q6     - FINDJOB SUBROUTINE                   Q6 FINDJOB
Q7     - JQE AND JOE FORMAT                   Q7 FORMAT
Q8     - HELP DISPLAY                         Q8 HELP
Q9     - HEXIDECIMAL DUMP                     Q9 HEXBLK
Q10    - INITIALIZATION                       Q10 INIT
Q11    - JCL LIST                             Q11 JCL
Q12    - JOB LOG LIST                         Q12 JLOG
Q13    - JOB MESSAGE LIST                     Q13 JMSG
Q14    - DATASET LIST                         Q14 LIST
Q15    - DATASET DISPLAY                      Q15 LISTDS
Q16    - COMMAND PARSE                        Q16 PARSE
Q17    - BLOCK READ SUBROUTINE                Q17 READSPC
Q18    - REPOSITION SUBROUTINE                Q18 REPOS
Q19    - SAVE DATASET                         Q19 SAVE
Q20    - JQE AND JOE SEARCH                   Q20 SEARCH
Q21    - SYSLOG PRINT                         Q21 SYSLOG
Q22    - EXTENDED DATASET DISPLAY             Q22 XDS
Q23    - INITS                                Q23 INITS
Q24    - ACTIVE                               Q24 ACTIVE
Q25    - FINDPDDB                             Q25 FINDPDDB
Q26    - SYSOUT                               Q26 SYSOUT
Q27    - PRINT                                Q27 PRINT
Q28    - HEXDUMP                              Q28 HEXDUMP
Q29    - CJQE                                 Q29 CJQE
Q30    - CJCT                                 Q30 CJCT
Q31    - CTSO                                 Q31 CTSO
Q32    - CHCT                                 Q32 CHCT
Q33    - CPDDB                                Q33 CPDDB
Q34    - CJOE                                 Q34 CJOE
Q35    - CJHIST                               Q35 CJHIST
Q36    - CONSOLE SYSTEM COMMAND               Q36 CSYS
./       ADD   NAME=QISP134
THIS MEMBER IS MERGED INTO QISP136. SEE DETAILS IN QISP136.
./       ADD   NAME=QISP136
THIS MEMBER SUPPORTS EITHER SP134 OR SP136. AND EITHER ISPF V1 OR V2.
SEE SOME DETAILS ON  JCLS WITHIN SP136.

THIS MEMBER DESCRIBES THE SP134 & UP MVS SUPPORT WITH ISPF/PDF PRODUCT.
THIS CAN SUPPORT EITHER ISPF V1 OR V2 IF YOU MUST RELINK QUEUE MODULE
WITH ISPLINK MODULE FROM YOUR IBM ISRLOAD LIBRARY.

NOTICE USING QUEUE ISPF INTERFACE ON ISPF V2 HAVING PROBLEM WITH
PF KEYS FOR FIND AND CHANGE AS INOPERATION UNTIL FURTHER NOTICE.

I COPIED ALL OF QUEUE SOURCES FROM  CBT FILE 393 BECAUSE OF SOFTWARE
QUAILITY TO INCLUDE EASIER MODIFICATION TIME.  I SELECT FEW ##CMD
MODULES FROM VARIOUS CBT FILES AND REMODIFY THEM INTO THIS QUEUE WITH
FEASIBILITY FEATURE (AS SUPPORTING CBT FILE 393 PROGRAMMING TECHNIQUE
WHICH IS MY FAVORITE.)

CBT FILE 393 WAS SUPPORTED ON ACF2 OR RACF. WE USE TOP SECRET SYSTEM
(TSS).  THE JCL PARM CAN BE INDICATED WHICH YOU USE ACF2, RACF, OR TSS.
I NEVER TEST WITH RACF OR ACF2. THERE ARE LOTS OF CODES CHANGED FROM
ACF2 TO TSS IN AUTH SOURCE LIKE SVC 246. YOU WILL HAVE TO RECODE
SOME MODULES FROM CBT FILE 393 TO SUPPORT ACF2 AND ISPF. THE QUEUE
MODULES ARE AUTH, AND INITNEW (ALIAS INIT).  BY AUTH MODULE, I ADD
AUTHORIZED CONTROL TABLE SO WHICH USER CAN BE AUTHORIZED. YOU HAVE TO
RECODE AUTH SOURCE TO SUPPORT AUTHORIZATION IN YOUR OWN SYSTEM. (SEE
$CDSAUTH FOR SAMPLE OF AUTHORIZATION TABLE.)

WE FREQUENTLY CHANGE SPOOL/CHECKPOINT VOLUMES, I INDICATE  CHECKPOINT
VOLUME NAME IN PARM SO YOU WILL REASM ONLY ONE QCOMMON MODULE AND RELINK
ALL QUEUE OBJECTS AND NEW QCOMMON INTO ONE QUEUE MODULE FOR EASIER
CHANGE OF VOLUME. SEE $CDSPARM.

I INCLUDED THREE DIFFERENT MODULE NAMES FOR QUEUE:  ONE WITHOUT ISPF
(SYSPARM=NOISPF) (SIMILIAR TO CBT FILE 393), ONE FOR QUEUE WITH ISPF
(MODIFIED FOR CDSI), AND ONE FOR TESTING WITH ISPF AND #CMDS. ALL
THREE SETS MUST USE OWN OBJECT LIBRARIES FOR EASIER RELINKING.

THERE IS "ASM PARM=SYSPARM" DESCRIPTION ON $CDSPARM FOR VARIOUS OPTION
TO GENERATE ONE QUEUE MODULE FOR ISPF OR NOT. (SEE $CDSPARM FOR MORE
DETAILS).  THE PARM OPTIONS ARE:

CKPT=VOLNAME        NAME OF VOLUME FOR CHECKPOINT (REQUIRED)
                    (CHANGE IN QCOMMON SOURCE IF YOUR CKPT USE
                           UNIT=3350 OR 3380)
TSS/NOTSS           INCLUDE TOP SECRET SYSTEM (TSS) OR NOT
CDSI/NOCDSI         INCLUDE AUTHORIZATION TABLE SPECIFIED FOR CDSI
SYSP/NOSYSP         INCLUDE #CMD SUPPORTS (200K INCREASE STORAGE)
WTO/NOWTO           INCLUDE WHO USE QUEUE COMMANDS AND DISPLAY ON
                       MASTER CONSOLE. (PERFORMANCE CONTROL)
ISPF/NOISPF         INCLUDE ISPF SUPPORT (CDSI HAVE BOTH WAY SINCE
                     THEY HAVE DIFFERENT SCREEN FORMAT.)
ISPF1               SUPPORT ISPF V1
ISPF2               SUPPORT ISPF V2
ACF2/NOACF2         INCLUDE ACF2 SUPPORT ORIGINALLY BY CBT FILE 393
SP/NOSP             SUPPORT SP (SYSTEMS PRODUCT)
SP133/NOSP133       SUPPORT SP133 AND UP
SP134               SUPPORT SP134
SP136               SUPPORT SP136
OTHERS              SEE $CDSPARM FOR MORE DETAILS. CHANGE DEFAULTS.

THE QUEUE MODULE WITH #CMD MODIFIED REQUIRED A LARGE STORAGE SO THE 'ASM
PARM=SYSP' INDICATES THE MODULE BE ADD WITH #CMD MODULES OR NOT.

- DAVID RIKER 6/11/86
-----------------------------------------------------------------
MODIFIED MEMBERS ARE:
 $$QIDOC  ISPF QUEUE FOR MVS SP134 DOCUMENTATION
 $CDSIDOC INSTALLATION GUIDE
 AUTH     MODIFIED TO SUPPORT TOP SECRET SYSTEM (REPLACED RACF)
 CJHIST   MODIFIED
 CSYS     NEW COMMAND TO ISSUE SYSTEM COMMAND FROM  QUEUE
          (REQUIRED "COMMAND" PROGRAM FROM CBT FILE 338)
 DISPLAY  MODIFIED TO SUPPORT ISPF DRIVER
 ENTER    MACRO REQUIRED FOR ISPF DRIVER
 FINDJOB  MODIFIED TO REPEAT JOBNAME WITHOUT ENTERIN AN * !!!
 FORMAT   MODIFIED TO SUPPORT ISPF DRIVER
 INITNEW  REPLACED FROM INIT TO SUPPORT ISPF DRIVER
 ISLSP134 JCL TO LINK
 ISPCALL  MACRO REQUIRED TO SUPPORT ISPF DRIVER
 ISPFQI   ISPF DRIVER SOURCE
 ISPSP134  JCL TO ASM FOR ISPF QUEUE
 ISR@PRIM  PANEL SAMPLE
 ISTRL134  JCL TO RELINK ISPF QUEUE  IN TEST MODE
 ISTSP134  JCL TO ASM SOURCE AND RELINK ISPF QUEUE IN TEST MODE
 JCLSP134  JCL TO ASM TSO QUEUE(NO ISPF)
 JCTSP134  JCL TO ASM TSO QUEUE  IN TEST MODE
 LEAVE     MACRO REQUIRED FOR ISPF DRIVER
 PARSE     MODIFIED TO ADD NEW COMMAND
 QCOMMON   MODIFIED TO ADD ISPF FIELDS
 QI@A      MOVE THIS PANEL TO ISPPLIB
 QISPANEL  DIFFERENT PANEL THAT ISPF DOESNT WORK ON THIS TYPE
 QSTART    MODIFIED TO SUPPORT ISPF DRIVER
 QUEUEISP  REPLACED FOR QUEUE TO SUPPORT ISPF DRIVER
 SAVEPGM   RENAMED FROM SAVE TO PREVENT CONFUSED NAME AS MACRO
 SYSOUT    MODIFIED REMOVE TESTAUTH (WE USE OWN SVC 246)
 FORMAT    MODIFIED TO SUPPORT RJE DESTINATION NUMBER UP TO 9999
 -------- CONVERT SOURCE FROM OTHER FILES TO BE USED BY ISPF QUEUE
 SRM      #I COMMAND CONVERT FROM FILE 266 REMODIFIED
 DEVIREQ  #R COMMAND CONVERT FROM FILE 266 REMODIFIED
 COREZAP  #D COMMAND CONVERT FROM FILE 266 REMODIFIED
 ASID        COMMAND CONVERT FROM FRIEND   REMODIFIED
 ROUTE       ROUTE JOBNAME TO LOCAL OR DESTINATION
 LISTDS2  *  SHOW CARRIAGE CONTROL (COLUMN 1)
 DOPTION  *  SHOW CARRIAGE CONTROL (COLUMN 1)
 LIST     *  SHOW CARRIAGE CONTROL (COLUMN 1)
 REPOS    *  SHOW CARRIAGE CONTROL (COLUMN 1)
          *  ALL FOUR MODULES MUST SUPPORT TOGETHER
 SEARCH/FFORMAT   FORMAT LISTING OF ALL SYSOUTS
 DTAPE       SHOW TAPE DEVICES
 JOBS        DISPLAY JOB STATISTICS (DEBUGS)
 SUINFO      DISPLAY SU INFORMATION
 STORAGE     DISPLAY CSA, V=R, NUCLEUS, ETC STORAGE AREA
 VSM         DISPLAY VITURAL STORAGE MANAGEMENT
 ----- 7/10/85  DOR/CDSI DEBUGS WAIT FOR IBM MANUAL
 ----- ENQ RUN OK IF NO ENQ --- IF ENQ RUN CRAZY AND LONGER
 ----- ENQLOAD1/2 NEVER RUN - ABEND/NEED TO REWRITE SOURCE/REGISTERS
 ----- PLEASE DO NOT ATTEMPT TO USE ENQ ENQLOAD1/2 UNTIL NEXT RELEASE
 ENQLOAD1 #N COMMAND CONVERT FROM FILE 266 REMODIFIED DEBUG!!
 ENQLOAD2 #N COMMAND CONVERT FROM FILE 266 REMODIFIED DEBUG!!
 ENQ      #Q COMMAND CONVERT FROM FILE 266 REMODIFIED DEBUG!!
 -----------------------------------------------------------------
OTHER UNMODIFIED MEMBERS THAT ARE CAME FROM FILE 393   (CBT VOL 242)
 $$$$$$$$
 $CLDOC
 $CLJCL
 $JQT
 $LOG
 $NERJCL3
 $NERJCL4
 $ONLDOC
 $RELINK
 $RNBDOC
 $SP
 $UFDOC
 $WARN
 $WISHLST
 #FILE53
 #HELP
 #TABLE
 @COMPLIB
 ACTIVE
 ALLOCATE
 CDIE
 CHCT
 CIOT
 CJCT
 CJOE
 CJQE
 CKPT
 CPDDB
 CPFK
 CSPIN
 CTGPS
 CTSO
 DDNAME
 DISPLOLD
 FINDPDDB
 HELP
 HEXBLK
 HEXDUMP
 IEBUPDTE
 INITS
 JCL
 JLOG
 JMSG
 LIST
 LISTDS
 PRINT
 QAUTHCK
 QPRBGEN
 QSCE
 QSTOP
 QTILT
 QUEUE
 Q0
 READSPC
 REPOS
 SCANLINE
 SEARCH
 SYSLOG
./       ADD   NAME=SOURCE
 $$ATRACE DOCUMENTATION OF ASMTRACE
 $$DISASM DOCUMENTATION OF DISASSEMBLY (MODIFIED )
 $ASMDISX JCL TO ASM DISASM
 $ASMBLKH JCL TO ASM BLOCKSAS  AND LINK TO SAS LIB
 $ASMBLKS JCL TO ASM BLOCKSUB  AND LINK TO PRINTOFF
 $ASMEALS JCL TO ASM EALSDW95 TO SUPPORT BLOCKSAS/BLOCKSUB SOURCE
 $ASMLPTF JCL TO ASM LISTPTF
 $ASMTRCE JCL TO ASM ASMTRACE
 $PDSMEM  JCL TO RUN PDS MEM IN ISPF  OR TABLE  FORMAT
 @RMFSASP SAS SOURCE TO GENERATE REPORTS AND PLOTS OF MVS EXCEPTIONS
          INCLUDES MACROS TO PRINT 8-UP PLOT SETS PER PAGE
              AND CALL SUBROUTINE TO BLOCKHEAD OF DATE
 ASMTRACE SOURCE
 BLOCKSAS SOURCE TO PRINT A BLOCK FROM PARM FOR SAS REQUIRED SUBROUTINE
 BLOCKSUB SOURCE TO PRINT A BLOCK FROM PARM FOR ASM REQUIRED SUBROUTINE
 BLOKTST2 JCL TO TEST SAS CALL BLOKHEAD ROUTINE
 DISASMX  SOURCE
 DISASMX1 SOURCE
 DISASMX2 SOURCE
 EALSDW95 SOURCE TO SUPPORT BLOKHEAD WHEN INCLUDE BY LINKAGE EDITOR
 ISP@SPY  SOURCE TO ISPF DIAGLOG OF MASTER CONSOLE DISPLAY
 LISTPTF  SOURCE TO DISPLAY LOAD MODULE OF LASTED UPDATED PTF/SYSMODS
 LSTPDSMD  SOURCE TO DISPLAY MEMBERS IN TABULAR FORMAT
 LSTPDSML  SOURCE TO DISPLAY MEMBERS IN ISPF FORMAT
 NCPTUNEP  SAS PGM TO REPORT NCP PERFORMANCE IN MEANS AND 8-UP PLOT
 PRINTOFF  ASM PGM TO SUPPORT MICROFICHE PAGE WITH HEADBLOCK OF MEMBER
 PTFSASL4  SAS PGM TO MAKE PRE STRING FROM SMPE / FMID DIRECTORY REPORT
 PTFSAST   JCL TO RUN SMPE AND SAS
