         MACRO
&N       EXIT  &RC=0
.*  General purpose exit macro
.*  Mark Lawrence  12 Sept 73
.*  Last Revision 31 Jan 86
.*
.*  This macro will restore regs 2-14, load a return code in R15, and
.*  return.  The contents of registers 0 and 1 are unchanged.
.*  Return code:  If "RC" is not specified, the return code is zero.
.*                If RC is an absolute expression, it is used as
.*                the return code.
.*                If RC=(reg) is specified, the return code will be
.*                loaded from the specified register (whch must not
.*                be register 13).
.*                If RC=(15) or RC=(R15) is specified, the contents
.*                of register 15 will not be changed.
.*                If "RC" is a fullword, halfword, or byte-length
.*                symbol, RC will be loaded from the specified
.*                location.
.*
.*  Save area:  The save area name established by the last ENTER
.*  macro will be used.  If SAVE=0 was specified, then no save
.*  area exists; in this case, registers 2-12 are restored but
.*  the contents of R13 are unchanged.
.*
         GBLC  &SNAME              Save area name, or "0"
         LCLA  &RNO
         AIF   ('&RC'(1,1) NE '(').NRCR
.*
.*  Here if RC=(reg)
.*
         AIF   (T'&RC(1) EQ 'N').NRR    If numeric, check value
         AIF   ('&RC(1)' EQ 'R15').R15  Assuming "R15"=15
.*  Don't know what kind of operand.  Just use it and hope
&N       LR    15,&RC(1)           Return code
         AGO   .LOADED
.*  Register operand is numeric.  Check the value
.NRR     ANOP
&RNO     SETA  &RC(1)              Copy reg. no
         AIF   (&RNO EQ 13 OR &RNO GT 15).BAD1  If illegal reg
         AIF   (&RNO EQ 15).R15    RC is already in R15
&N       LR    15,&RNO             Return code
         AGO   .LOADED
.R15     AIF   ('&SNAME' EQ '0').NOSAV1   If no save area
&N       L     13,4(13)            Restore R13 from our save area
         AGO   .LR15
.NOSAV1  ANOP
&N       L     14,12(13)           Restore R14
         AGO   .LM
.*
.*  Here if RC=value  or RC=symbol
.*
.NRCR    AIF   (T'&RC EQ 'N').ABSEXP
.*  RC is in core.  Load it
.CORE    AIF   (L'&RC EQ 4).FW
         AIF   (L'&RC EQ 2).HW
         AIF   (L'&RC EQ 1).BYTE
         AGO   .BAD2               Other length illegal
.FW      ANOP
&N       L     15,&RC              Return code
         AGO   .LOADED
.HW      ANOP
&N       LH    15,&RC              Return code
         AGO   .LOADED
.BYTE    ANOP
&N       SR    15,15
         IC    15,&RC              Return code
         AGO   .LOADED
.*  Here if RC=absexp
.ABSEXP  ANOP
         AIF   (&RC EQ 0).ZERO
&N       LA    15,&RC              Return code
         AGO   .LOADED
.ZERO    ANOP
&N       SR    15,15               Return code
.LOADED  AIF   ('&SNAME' EQ '0').LR15    If no save area
         L     13,4(13)            Restore R13 from our save area
.LR15    L     14,12(13)           Restore R14
.LM      LM    2,12,28(13)         Restore R2-R12
         MVI   12(13),X'FF'        Indicate return
         BR    14                  Return
         MEXIT
.BAD1    MNOTE 8,'  &RC.:  Invalid return code register'
         MEXIT
.BAD2    MNOTE 8,'  &RC.:  Invalid length or type'
         MEND
