DYLO     TITLE 'DYLON/DYLOFF -- DYNAMIC LOGON/LOGOFF.'
DYLOCOM  START 0
        PRINT  OFF
        COPY   DYLOMAC             <=== ASSEMBLY MACROS ==============
         GBLA  &TSON
         GBLB  &ITSWT
         GBLB  &ACSWS,&ACSWE
         GBLB  &ALSWSU,&ALSWEU,&ALSWSG,&ALSWEG
         GBLB  &DDSWS,&DDSWE
         GBLC  &TSOP(100)
         GBLC  &PRS,&PRF
         GBLC  &ITPFX,&ITDSN
         GBLC  &DMSVOL,&MXLCIT,&MXALUS,&MXALGR
         GBLC  &PU,&PV,&PA,&PP,&PS,&PD,&PB
         GBLC  &WU,&WA,&WP,&WS,&WD,&WR
         GBLC  &CU,&CA,&CP,&CS,&CB
         GBLC  &EU,&EA,&EP,&ES
         GBLC  &ACLBL,&ALUNM,&ALGNM
&TSON    SETA  100
&ACSWS   SETB  0
&ACSWE   SETB  0
&DDSWS   SETB  0
&DDSWE   SETB  0
&ALSWSU  SETB  0
&ALSWEU  SETB  0
&ALSWSG  SETB  0
&ALSWEG  SETB  0
&TSOP(1)   SETC 'NOLIST'
&TSOP(2)   SETC 'NOMSG'
&TSOP(3)   SETC 'NOLST'
&TSOP(4)   SETC 'LIST'
&TSOP(5)   SETC 'MSG'
&TSOP(6)   SETC 'LST'
&TSOP(7)   SETC '?'
&TSOP(8)   SETC 'AUTO'
&TSOP(9)   SETC 'AOS'
&TSOP(10)  SETC 'AO'
&TSOP(11)  SETC 'A'
&TSOP(12)  SETC 'IDV'
&TSOP(13)  SETC 'I'
&TSOP(14)  SETC 'DDT'
&TSOP(15)  SETC 'DD'
&TSOP(16)  SETC 'ALT'
&TSOP(17)  SETC 'AL'
&TSOP(18)  SETC 'ACS'
&TSOP(19)  SETC 'AC'
&TSOP(20)  SETC 'C='
&TSOP(21)  SETC 'CMD='
&TSOP(22)  SETC 'CMDS='
&TSOP(23)  SETC 'COMMAND='
&TSOP(24)  SETC 'COMMANDS='
&TSOP(25)  SETC 'DSAB'
&TSOP(26)  SETC 'LINE'
&TSOP(27)  SETC 'SCREEN'
         AIF   ('&SYSPARM' EQ '').SN
         AIF   ('&SYSPARM' EQ 'FULL').SF
         AIF   ('&SYSPARM' EQ 'SHORT').SS
.SN      ANOP
&PRS     SETC  'NOGEN'
&PRF     SETC  'NOGEN'
         AGO   .ST
.SS      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'NOGEN'
         AGO   .ST
.SF      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'GEN'
.ST     PRINT  ON
         SPACE 1
*--------------------------------------------------------------------*
*        D Y L O N / D Y L O F F     T S O     C O M M A N D         *
*--------------------------------------------------------------------*
*
*  PURPOSE :   SESSION LIBRARIES DYNAMIC ALLOCATION.
*  ---------   ALLOCATE (DYLON) OR DE-ALLOCATE (DYLOFF) ALL THE NEEDED
*              LIBRARIES TO RUN SUCCESSFULLY A SPECIFIC USER SESSION.
*   THIS COMMAND INTENTS TO :
*     1. BYPASS TSO LOGOFF/LOGON "ANOTHER PROCEDURE", NEEDED WHEN A
*        CHANGE ENVIRONMENT/APPLICATION IS NECESSARY, AND THUS,
*     2. HIGHLY LIMITS THE NUMBER OF STANDARD OR PRIVATE TSO LOGON
*        PROCEDURES (SO LESS "ACCOUNT" COMMAND TO DO),
*     3. RESTORE AUTOMATICALLY THOSE DATA-SETS WHICH HAVE BEEN ARCHIVED
*        BY "DMS" (EQUIVALENT OF IBM "HSM"),
*     4. EASIER DIAGNOSE OF ANY MALFUNCTION WHEN ALLOCATING THE
*        ENVIRONMENT/APPLICATION LIBRARIES DATA-SETS.
*   I.E., AT OUR INSTALLATION, WE USE THE FOLLOWING TWO COUPLE OF
*   STANDARD TSO LOGON PROCEDURES WITH THIS COMMAND :
*     1. LOGON MANUAL MODE :
*        A. UNDER TSO ONLY :
*           //JRCTSO  EXEC PGM=IKJEFT01,DYNAMNBR=100,
*           //             TIME=0015,PARM='TIME'
*           //ROTATE OUTPUT PAGEDEF=R90L08
*           //ROTSMALL OUTPUT PAGEDEF=R90L10,CHARS=GSCC,FCB=LN10
*        B. UNDER SESSION MANAGER :
*           //JRCSM   EXEC PGM=ADFMDF03,DYNAMNBR=100,
*           //             TIME=0015,PARM='SM(,Y)'
*           //ROTATE OUTPUT PAGEDEF=R90L08
*           //ROTSMALL OUTPUT PAGEDEF=R90L10,CHARS=GSCC,FCB=LN10
*     2. LOGON AUTOMATIC MODE :
*        A. UNDER TSO ONLY :
*           //JRCTSOX EXEC PGM=IKJEFT01,DYNAMNBR=100,
*           //             TIME=0015,PARM='DYLON AUTO'
*           //ROTATE OUTPUT PAGEDEF=R90L08
*           //ROTSMALL OUTPUT PAGEDEF=R90L10,CHARS=GSCC,FCB=LN10
*        B. UNDER SESSION MANAGER :
*           //JRCSMX  EXEC PGM=ADFMDF03,DYNAMNBR=100,
*           //             TIME=0015,PARM='SM(,Y),DYLON AUTO'
*           //ROTATE OUTPUT PAGEDEF=R90L08
*           //ROTSMALL OUTPUT PAGEDEF=R90L10,CHARS=GSCC,FCB=LN10
*   SO, AFTER A LOGON MANUAL MODE (JRCTSO OR JRCSM PROCEDURE), THE
*   USER MAY SELECT VARIOUS SESSION ENVIRONMENTS/APPLICATIONS USING
*   "DYLON" AND "DYLOFF" COMMANDS SEQUENCE. HOWEVER, AFTER AN INITIAL
*   LOGON AUTOMATIC MODE (JRCTSOX OR JRCSMX PROCEDURE), THE USER ENTER
*   DIRECTLY IN A SESSION ENVIRONMENT/APPLICATION WITHOUT ANY ACTION.
*   THEN, IF WANTED, HE MAY CHANGE ENVIRONMENTS/APPLICATIONS USING THE
*   "DYLOFF" AND "DYLON" COMMANDS SEQUENCE AGAIN.
         EJECT
*--------------------------------------------------------------------*
*                   C O M M A N D     S Y N T A X                    *
*--------------------------------------------------------------------*
*
* DYLON  : ALLOCATE SESSION LIBRARIES.
* ------ OPERANDS (OPTIONAL) --- OR -> OPERANDS (OPTIONAL)
*        --------------------------    --------------------------
*        NOLIST/LIST/?                 NOLIST/LIST/?
*        AUTO                          NOISPF/ISPF
*                                      NOINFOSYS/INFOSYS
*                                      NOSMP/SMP
*                                      NOADABAS/ADABAS
*                                      NOMFTS/MFTS
*                                      IDV
*                                      DDT
*                                      ALT
*                                      ACS
*                                      COMMAND=...
*                                      SETIFM
*                                      SETDMS
*                                      LINE/SCREEN
*
* DYLOFF : DE-ALLOCATE SESSION LIBRARIES (UNLESS THOSE CONSIDERED AS
* ------   TSO BASIC USE).
*        OPERANDS (OPTIONAL) --- OR -> OPERANDS (OPTIONAL)
*        --------------------------    --------------------------
*        NOLIST/LIST/?                 NOLIST/LIST/?
*        AUTO                          NOSYS/SYS
*                                      ACS
*                                      COMMAND=...
*                                      SETIFM
*                                      SETDMS
*                                      LINE/SCREEN
         EJECT
*--------------------------------------------------------------------*
*                 C O M M A N D     O P E R A N D S                  *
*--------------------------------------------------------------------*
*
* OPERANDS :  1. NOLIST = ONLY SEVERE ERROR MESSAGES (DEFAULT)
* ----------       LIST = ALL MESSAGES
*                     ? = ALL MESSAGES + SOME INFORMATIONAL MESSAGES
*
*             2. AUTO = ALL THE REMAINING OPERANDS (UNLESS NOLIST, LIST
*                OR ?) ARE SUPPLIED IN A MEMBER OF THE TABLES LIBRARY
*                DATA-SET (DEFAULT IS "AOS" MEMBER).
*                NOTE : TO KNOW MORE (EXPLANATION/USE) ABOUT "AOS" SEE
*                       FURTHER AT "TABLES LIBRARY DATA-SET".
*
*             3. PRODUCTS LIBRARIES ALLOCATION SELECTION (THESE
*                KEYWORDS ARE USED WITH "DYLON" COMMAND ONLY).
*                IF ANY ONE IS SPECIFIED, AUTOMATICALLY THE ALL
*                DEFAULTS ARE THE "NO..." OPTION.
*                IF NONE IS SPECIFIED, THEN THE DEFAULTS ARE SET BY
*                THE LOGIC CODED IN THE MEMBER "DYLOUSD" (USER'S
*                SELECTIONS - DEFAULTS).
*
*             4. NOSYS = DON'T DE-ALLOCATE THE SYSTEM DATA-SETS
*                        LIBRARIES (DEFAULT OPTION).
*                  SYS = DE-ALLOCATE IT ALSO.
*                (THIS KEYWORD IS USED WITH "DYLOFF" COMMAND ONLY).
*
*             5. IDV (INTERNAL DEFINITIONS VALUES), DDT (DD-NAMES),
*                ALT (ALIASES) AND ACS (AUTOMATIC COMMANDS SELECTION)
*                TO EVENTUALLY SPECIFY NAMES (1-8 CHARACTERS) WHICH
*                ALLOW MEMBERS SELECTION FROM THE TABLES LIBRARY
*                DATA-SET (UNLESS ACS, THESE KEYWORDS ARE USED WITH
*                "DYLON" COMMAND ONLY).
*                NOTE : TO KNOW MORE (EXPLANATION/USE) ABOUT "IDV",
*                       "DDT", "ALT" AND "ACS" LOOK FURTHER AT
*                       "TABLES LIBRARY DATA-SET".
*
*             6. COMMAND=... ANY COMMAND(S) TO BE EXECUTED WHEN THE
*                "DYLON" OR "DYLOFF" PROCESS IS SUCCESSFULLY COMPLETE.
*                THE SYNTAX OF THIS OPERAND MAY BE AS BELOW :
*                     COMMAND=LISTA
*                     COMMAND='LISTA STATUS'
*                     COMMAND='FREE ALL;LISTA STATUS'
*                THE STRING MUST BE QUOTED IF IT INCLUDES ONE OR MORE
*                BLANKS AND/OR QUOTES (A QUOTE IN THE STRING MUST BE
*                DOUBLED), AND MULTIPLE COMMANDS MUST BE SEPARATED
*                EACH FROM THE OTHER BY THE SEMI-COLON DELIMITER.
*                OR : COMMAND=* (AUTOMATIC COMMANDS SELECTION)
*                     COMMAND=? (TERMINAL PROMPTING FOR COMMANDS)
         EJECT
*  OPERANDS   ALIASES
*  ---------  -----------------------------------------
*  NOLIST     NOMSG, NOLST
*  LIST       MSG, LST
*  AUTO       AOS, AO, A
*  NOISPF     NOSPF
*  ISPF       SPF
*  NOINFOSYS  NOIFS, NOIS
*  INFOSYS    IFS, IS
*  NOADABAS   NOADA
*  ADABAS     ADA
*  NOMFTS     NOMFT, NOMF
*  MFTS       MFT, MF
*  NOSYS      NS
*  SYS        S
*  IDV        I
*  DDT        DD
*  ALT        AL
*  ACS        AC
*  COMMAND=   CMD=, C=, COMMANDS=, CMDS=
*
*  COMPLETION CODES : THIS COMMAND RETURNS A VALUE IN REGISTER 15
*  ------------------ (RETURN CODE) REPRESENTING THE SUCCESS OR
*                     NONSUCCESS COMPLETION :
*
*        -----------------------------------------------------------
*        × &LASTCC × MEANING                                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    8    × COMPLETION WITH ERROR(S)                      ×
*        -----------------------------------------------------------
*
*  ATTRIBUTES : MODULE IS RE-ENTERABLE.
*  ------------ TSO FOREGROUND AND BACKGROUND RUNNING ALLOWED.
*
*  AUTHOR :     MOINIL P.A.
*  --------     COMPUTING CENTRE (TP 361)
*               J.R.C. - ISPRA ESTABLISHMENT
*               21020 ISPRA (VA), ITALY
*               TEL. 0-332-789442
         EJECT
*-------------------------------------------------------------------*
*               S P E C I A L     O P E R A N D ( S )               *
*-------------------------------------------------------------------*
         SPACE 1
*  SPECIAL OPERANDS : RESTRICTED TO DEBUG USE (TEST PURPOSE), SO
*  ------------------ ALLOWED ONLY TO THE "WIZARD" INSTALLATION
*        SENIOR SYSTEM PROGRAMMER(S) AND DEFINED WITH @WIZ MACRO.
*
*        OPERAND  MEANING
*        -------  ---------------------------------------------------
*        SETIFM   FORCE INFO MANAGER ALLOCATIONS.
*        SETDMS   FORCE DMS MANAGER ALLOCATIONS.
*        LINE     FORCE LINE TERMINAL (AS I.E. AN IBM 2741).
*        SCREEN   FORCE SCREEN TERMINAL (AS I.E. AN IBM 3270) .
*
*  NOTE : THESE OPERANDS ARE ACCEPTED ONLY AS TRUE COMMAND OPERANDS,
*  ====== THEY CANNOT BE USED IN ANY "AOS" MEMBER(S).
         SPACE 1
*-------------------------------------------------------------------*
*            T S O - B A T C H     E N V I R O N M E N T            *
*-------------------------------------------------------------------*
         SPACE 1
*  BATCH EXECUTION : THIS COMMAND MAY RUN IN TSO-BATCH ENVIRONMENT,
*  ----------------- WITH THE FOLLOWING ASSUMPTIONS :
*        1. BACKGROUND RUN AS A "LINE" TERMINAL (I.E. IBM 2741), AND
*        2. OPERAND COMMAND=? (TERMINAL PROMPTING) IS BYPASSED.
*
*  DEBUG FACILITY : YOU MAY TEST I.E. NEW TABLES DEFINITIONS BY
*  ---------------- SUBMITTING A JOB AS SHOWN BELOW :
*        //.....    JOB ...(YOUR JOB CARD)...
*        //             MSGLEVEL=(1,1),MSGCLASS=X,
*        //             REGION=2M,TIME=(,30),NOTIFY=...,USER=...
*        /*JOBPARM L=5
*        //IKJ     EXEC PGM=IKJEFT01,DYNAMNBR=100
*        //DYLO$IT   DD DSN=...(TABLES DS-NAME)...,DISP=SHR
*        //SYSTSPRT  DD SYSOUT=*
*        //SYSUDUMP  DD SYSOUT=*
*        //SYSTSIN   DD *
*          DYLON LIST IDV=INT1 DDT=SKEL1 ALT=ALIAS1 SCREEN
*          DYLOFF LIST
*          DYLON LIST IDV=INT2 DDT=SKEL2 ALT=ALIAS2 SCREEN
*          DYLOFF LIST
*          END
*        /*
         EJECT
*-------------------------------------------------------------------*
*                    P R E - R E Q U I S I T E S                    *
*-------------------------------------------------------------------*
         SPACE 1
*  SYS1.PARMLIB MEMBERS :
*  ----------------------
*            1. IKJTSO00 : "DYLON" AND "DYLOFF" COMMANDS
*                          AUTHORIZATION NEEDED.
*            2. IEAAPF00 : LINK "DYLON" AND "DYLOFF" COMMANDS IN
*                          AN APF-LIBRARY.
*            3. LNKLST00 : SET LINK-LIBRARY IN LNKLST LOOKASIDE (LLA).
         SPACE 1
*-------------------------------------------------------------------*
*              F U R T H E R     P A R T I C U L A R S              *
*-------------------------------------------------------------------*
         SPACE 1
*        INFORMATION BELOW IS FOR THE INSTALLATION WIZARD ONLY :
*        THE "OWNDYLO", "TSODYLO" AND "SYSDYLO" FLAGS (USED TO
*        REMEMBER AND INDICATE WHICH AND HOW DATA-SETS HAVE BEEN
*        ALLOCATED BY THIS COMMAND) ARE DEFINED IN THE RESERVED
*        BYTE "DSABRS01" OF THE DATA-SET ASSOCIATION BLOCK (DSAB).
         SPACE 1
*-------------------------------------------------------------------*
*         T A B L E S     L I B R A R Y     D A T A - S E T         *
*-------------------------------------------------------------------*
         SPACE 1
*        USING THE MACRO @TLDSN (WHERE IP= MEANS INITIAL PREFIX AND
*        RN= THE REST OF THE NAME) DEFINE BELOW THE DEFAULT TABLES
*        LIBRARY DATA-SET NAME :
         SPACE 1
        @TLDSN IP=EUR1,RN=DYLO.DATA
         SPACE 1
* REMARKS : THE ABOVE DATA-SET IS THE DEFAULT ONE ALLOCATED AND
* ---------    ACCESSED USING THE DD-NAME "DYLO$IT". IT WILL CONTAIN
*              ALL THE "AOS", "IDV", "DDT", "ALT" AND "ACS" MEMBERS
*              WHICH ARE OF GENERAL USE IN THE SYSTEM.
*           ALSO, YOU MAY CHOOSE TO USE ANOTHER DATA-SET (I.E., FOR
*              TEST OR ALTERNATE PURPOSES) IN TWO WAYS :
*              1. CREATING A DATA-SET WITH A NAME EQUAL TO THE DEFAULT
*                 ONE BUT WITH THE INITIAL PREFIX REPLACED BY YOUR
*                 USER-ID OR YOUR GROUP (OBVIOUSLY THIS LAST WILL BE
*                 ACCESSED BY ALL THE USERS IN THE GROUP), OR
*              2. PRE-ALLOCATING IT WITH THE DD-NAME "DYLO$IT".
*           = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
*           NOTE : ALL THE NEEDED MEMBERS ARE RETRIEVED ONLY IN THAT
*           ------ LIBRARY.
*           = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
         EJECT
*-------------------------------------------------------------------*
*              M E M B E R ( S )     S E L E C T I O N              *
*-------------------------------------------------------------------*
         SPACE 1
* 1. "AOS" MEMBER SELECTION :
*        SPECIFY : AUTO=... TO SELECT THE MEMBER NAMED "...",
*                  AUTO TO SELECT THE DEFAULT MEMBER NAMED "AOS"
*                       (THIS IS LIKE AUTO=AOS),
*                  AUTO= IS LIKE NOT SPECIFIED, AND
*                  NOT SPECIFIED MEANS NO OPERANDS SUPPLY PROCESS.
* 2. "IDV" MEMBER SELECTION :
*        SPECIFY : IDV=... TO SELECT THE MEMBER NAMED "...",
*                  IDV TO SELECT THE DEFAULT MEMBER NAMED "IDV"
*                       (THIS IS LIKE IDV=IDV),
*                  IDV= IS LIKE NOT SPECIFIED, AND
*                  NOT SPECIFIED MEANS USE OF INTERNAL PRE-DEFINED
*                       IDV VALUES (SET BY ASSEMBLY VALUES BELOW).
* 3. "DDT" MEMBER SELECTION :
*        SPECIFY : DDT=... TO SELECT THE MEMBER NAMED "...",
*                  DDT TO SELECT THE DEFAULT MEMBER NAMED "DDT"
*                       (THIS IS LIKE DDT=DDT),
*                  DDT= IS LIKE NOT SPECIFIED, AND
*                  NOT SPECIFIED MEANS USE OF INTERNAL PRE-DEFINED
*                       DDT TABLE (CREATED WITH ASSEMBLY MACROS @DD,
*                       @DS AND @DSE).
* 4. "ALT" MEMBER SELECTION :
*        SPECIFY : ALT=... TO SELECT THE MEMBER NAMED "...",
*                  ALT TO SELECT THE DEFAULT MEMBER NAMED "ALT"
*                       (THIS IS LIKE ALT=ALT),
*                  ALT= WILL BYPASS SELECTION (NO MEMBER NOR INTERNAL
*                       PRE-DEFINED TABLE USE), AND
*                  NOT SPECIFIED MEANS USE OF INTERNAL PRE-DEFINED
*                       ALT TABLE (CREATED WITH ASSEMBLY MACRO @AL).
* 5. "ACS" MEMBER SELECTION (ACTIVE ONLY WITH COMMAND=*) :
*        SPECIFY : ACS=... TO SELECT THE MEMBER NAMED "...",
*                  ACS TO SELECT THE DEFAULT MEMBER NAMED "ACS" (THIS
*                       IS LIKE ACS=ACS),
*                  ACS= WILL BYPASS ANY AUTOMATIC COMMANDS SELECTION
*                       EVEN IF COMMAND=* IS SPECIFIED, AND
*                  NOT SPECIFIED MEANS USE OF INTERNAL PRE-DEFINED
*                       ACS TABLE (CREATED WITH ASSEMBLY MACRO @AC).
         EJECT
*-------------------------------------------------------------------*
*               A U T O M A T I C     O P E R A N D S               *
*         S E L E C T I O N     P R O C E S S     T A B L E         *
*-------------------------------------------------------------------*
         SPACE 1
* MEMBER(S) AOS STATEMENTS DESCRIPTION :
* ======================================
* PURPOSE : AUTOMATIC OPERAND(S) SELECTION TO BE SUPPLIED WITH THE
* --------- "DYLON" OR "DYLOFF" COMMAND.
*           BY USE OF STATEMENTS, IT ALLOWS CONDITIONAL SELECTION.
* CARD COLUMNS RANGE : COLUMNS 1-72. NEVER A KEYWORD OR AN OPERAND
* -------------------- CAN BE SPLIT BETWEEN TWO SUCCESSIVE CARDS.
*          KEYWORDS AND OPERANDS MUST BE SEPARATED EACH FROM THE
*          OTHERS BY AT LEAST A BLANK CHARACTER. WHEN THE FIRST
*          CHARACTER ENCOUNTERED IN A CARD, UNLESS BLANKS, IS AN
*          ASTERISK (*), THEN THIS CARD IS HANDLED AS A COMMENT CARD.
* SYNTAX : ALWAYS, A STATEMENT MUST START WITH A KEYWORD "IF-ON" OR
* -------- "IF-OFF" AND END BY A KEYWORD "O=" (THIS IS MANDATORY).
*          BE CAREFUL IN STATEMENTS SEQUENCE ORDER SO THEY WARRANT A
*          HIGH COMPLEX CONDITION IS MET BEFORE A LESS ONE.
* KEYWORD  OPERAND(S)  MEANING
* -------  ----------  --------------------------------------------
* IF-ON    NONE        START A CONDITIONAL SENTENCE FOR "DYLON".
* IF-OFF   NONE        START A CONDITIONAL SENTENCE FOR "DYLOFF".
* T=       S/L/B       TERMINAL TYPE : "S" FOR SCREEN OR "L" FOR LINE
*                      OR "B" FOR TSO BACKGROUND RUN.
* U=       USER-ID     LIST OF USER-ID'S NAMES MATCHING CONDITIONS.
* G=       GROUP       LIST OF GROUP'S NAMES MATCHING CONDITIONS.
* P=       PROCEDURE   LIST OF PROCEDURE'S NAMES MATCHING CONDITIONS.
* O=       OPERAND(S)  THE DESIRED OPERAND(S) TO BE SUPPLIED. THIS
*                      IS THE COPY OF THE COMMAND OPERANDS YOU WANT,
*                      EXACTLY AS THEY WOULD BE KEYBOARD TYPED IN
*                      (UNLESS FOR THE C= OPERAND AS SHOWN LATER).
*          KEYWORDS    ALIASES
*          ----------  -----------------------------------------------
*          T=          TERM=, TERMINAL=
*          U=          USER=, USERS=
*          G=          GROUP=, GROUPS=
*          P=          PROC=, PROCEDURE=, PROCS=, PROCEDURES=
*          O=          OP=, OPS=, OPND=, OPNDS=, OPERAND=, OPERANDS=
*          OPERANDS    ALIASES
*          ----------  -----------------------------------------------
*          S           SCREEN, D, DISPLAY
*          L           LINE, LINES
*          B           BACK, BACKGROUND (EQUIVALENT TO "L")
         EJECT
* HOW TO CODE KEYWORDS AND OPERANDS :
* -----------------------------------
*      1. WHEN CODING U=, G= AND P= OPERAND(S), THE FOLLOWING RULES
*         MUST BE APPLIED :
*           1. A SINGLE NAME MAY BE CODED P= ... AS WELL AS P= ( ... )
*           2. A LIST OF NAMES IS ALWAYS CODED G= ( ... ... ... )
*         YOU MAY ALSO SPECIFY A SHORTER CHARACTERS STRING WHICH WILL
*         BE USED AS MATCH TEST ON THE INITIAL CHARACTERS OF THE
*         CURRENT USER-ID, GROUP OR PROCEDURE NAME. TO DO IT, JUST
*         PREFIX THE CHARACTERS STRING BY A PERIOD.
*           I.E. : U= .SYS WHICH MEANS ALL USER-ID'S NAMES STARTING
*           WITH THE "SYS" CHARACTERS (I.E. : SYSTSO1, SYSTSO2,
*           SYSIBM1 AND SYSIBM2 ARE ALL MATCHING THE ABOVE CONDITION).
*      2. KEYWORDS AND OPERANDS AS WELL AS MULTIPLE COMMANDS MAY BE
*         CODED IN SEPARATE CARDS, AS I.E. :
*           IF-ON
*                  TERMINAL= S
*                            USERS= ( .SYS MASTER )
*                                      OPERANDS= NOLIST
*                                                ISPF
*                                                COMMANDS= ' TIME ;
*                                                            ISPF '
         EJECT
*-------------------------------------------------------------------*
*                 D E F A U L T     I N T E R N A L                 *
*                D E F I N I T I O N S     T A B L E                *
*-------------------------------------------------------------------*
         SPACE 1
* MEMBER(S) IDV KEYWORDS DESCRIPTION :
* ====================================
*    CARD COLUMNS RANGE : COLUMNS 1-72.
*    -------------------- KEYWORD=VALUE MUST RESIDE ENTIRELY IN A CARD.
*                         AS SOON AS AN ASTERISK IS ENCOUNTERED, IT
*                         MEANS A COMMENT IN THE REST OF THE CARD.
*    REMARK : BY ASSEMBLY, ALL KEYWORD=VALUE'S ARE ASSIGNED A DEFAULT
*   -------   VALUE BELOW, SO YOU MAY OMIT THOSE YOU NEED NOT CHANGE
*             IN THE IDV MEMBER(S).
         SPACE 1
*------- LOCAL DEFINITIONS -----------------------------------------*
         SPACE 1
*        VOLUME SERIAL NUMBER USED BY DMS TO ARCHIVE DATA-SETS,
*        AND THUS, USED TO FORCE THEIR RESTORE :
&DMSVOL  SETC  'SHADOW'       DMSVOL=SHADOW
         SPACE 1
*        DD-NAME'S LIBRARIES CONCATENATIONS INFO'S TABLE AREA
*        SPACE LENGTH :
&MXLCIT  SETC  '10K'          MXLCIT=10K
         SPACE 1
*        USER-ID'S ALIASES PROCESS TABLE AREA SPACE LENGTH :
&MXALUS  SETC  '512'          MXALUS=512
         SPACE 1
*        GROUPS ALIASES PROCESS TABLE AREA SPACE LENGTH :
&MXALGR  SETC  '512'          MXALGR=512
         SPACE 1
*------- SPECIAL PROCESSINGS DEFINITIONS ---------------------------*
         SPACE 1
* DS/SP=P : ALLOCATION OF NEW ISPF PROFILE
*              (ALSO USED TO ALLOCATE MFTTLIB DD OF MFTS)
*              EQUIVALENT JCL ALLOCATION :
*              //ISPPROF  DD UNIT=&PU,VOL=SER=&PV,
*              //            DSN=...,SPACE=(&PA,(&PP,&PS,&PD)),
*              //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=&PB),
*              //            DISP=(NEW,CATLG)
*        NOTE : DSN=... (DS=), RECFM=F AND LRECL=80 MUST BE DEFINED IN
*               MEMBERS DDT OR @DD MACROS (BLKSIZE IS DEFINED BELOW).
&PU      SETC  'DISK'         PU=DISK   * UNIT
&PV      SETC  'USER00'       PV=USER00 * VOLUME SERIAL NUMBER
&PA      SETC   'TRK'         PA=TRK    * SPACE ALLOCATION (CYL OR TRK)
&PP      SETC   '1'           PP=1      * PRIMARY SPACE
&PS      SETC   '1'           PS=1      * SECONDARY SPACE
&PD      SETC   '3'           PD=3      * DIRECTORY BLOCKS
&PB      SETC   '3120'        PB=3120   * BLOCK-SIZE
         EJECT
* DD/SP=W : ALLOCATION OF ISPF WORK FILE
*              EQUIVALENT JCL ALLOCATION :
*              //ISPWORK  DD UNIT=&WU,SPACE=(&WA,(&WP,&WS,&WD)),
*              //            DCB=&WR
&WU      SETC  'VIO'          WU=VIO    * UNIT
&WA      SETC  'CYL'          WA=CYL    * SPACE ALLOCATION (CYL OR TRK)
&WP      SETC  '1'            WP=1      * PRIMARY SPACE
&WS      SETC  '2'            WS=2      * SECONDARY SPACE
&WD      SETC  '5'            WD=5      * DIRECTORY BLOCKS
&WR      SETC  'EUR1.TABLES.DATA'
         SPACE 1
*                             WR=EUR1.TABLES.DATA
*                                       * DCB REFERENCE DATA-SET NAME
* DD/SP=C - ALLOCATION OF ISPF CONTROL FILE
*              EQUIVALENT JCL ALLOCATION :
*              //ISPCTL.. DD UNIT=&CU,SPACE=(&CA,(&CP,&CS)),
*              //            DCB=(RECFM=FB,BLKSIZE=&CB,LRECL=80)
*        NOTE : RECFM=F AND LRECL=80 MUST BE DEFINED IN MEMBERS
*               DDT OR @DD MACROS (BLKSIZE IS DEFINED BELOW).
&CU      SETC  'SYSDA'        CU=SYSDA  * UNIT
&CA      SETC  'CYL'          CA=CYL    * SPACE ALLOCATION (CYL OR TRK)
&CP      SETC  '1'            CP=1      * PRIMARY SPACE
&CS      SETC  '1'            CS=1      * SECONDARY SPACE
&CB      SETC  '6080'         CB=6080   * BLOCK-SIZE
         SPACE 1
* DD/SP=E : ALLOCATION OF TSO EDIT WORK FILE
*              EQUIVALENT JCL ALLOCATION :
*              //SYSEDIT  DD UNIT=&EU,DSN=&EDIT,
*              //            SPACE=(&EA,(&EP,&ES))
&EU      SETC  'SYSDA'        EU=SYSDA  * UNIT
&EA      SETC  '6121'         EA=6121   * BLOCKS ALLOCATION
&EP      SETC  '20'           EP=20     * PRIMARY SPACE
&ES      SETC  '10'           ES=10     * SECONDARY SPACE
         EJECT
*-------------------------------------------------------------------*
*               D D N A M E ' S     L I B R A R I E S               *
*     C O N C A T E N A T I O N S     I N F O ' S     T A B L E     *
*-------------------------------------------------------------------*
         SPACE 1
* MEMBER(S) DDT STATEMENTS DESCRIPTION :
* ======================================
*    CARD COLUMNS RANGE : COLUMNS 1-72.
*    -------------------- AN OPERAND MUST RESIDE ENTIRELY IN A CARD.
*                         AN ASTERISK IN COLUMN 1 MEANS A COMMENT.
* 1. DD : DEFINE A DD-NAME TO WHICH ONE, AT LEAST, OR MORE LIBRARIES
* ------- MUST BE DYNAMICALLY AND PERMANENTLY ALLOCATED.
*    SYNTAX :  DD=...  ID=...  DSORG=...  RECFM=...  LRECL=...  SP=...
*    OPERAND  MEANING                                       MAX.L.
*    -------  --------------------------------------------  ------
*    DD=      DD-NAME (JOBCAT, STEPCAT, JOBLIB AND          CL8
*             STEPLIB ARE OBVIOUSLY NOT SUPPORTED).
*    ID=      DD PURPOSE SHORT DESCRIPTION (MUST BE         CL20
*             ENCLOSED BETWEEN DOUBLE-QUOTES (") IF
*             IT CONTAINS ONE OR MORE BLANKS).
*    DSORG=   DATA-SET(S) ORGANIZATION : PS, PO OR DA.
*             WHEN DA, RECFM AND LRECL ARE NOT USED.
*    RECFM=   DATA-SET(S) RECORD FORMAT : F, V OR U.
*    LRECL=   DATA-SET(S) RECORD LENGTH (USED ONLY
*             WITH RECFM=F OR V).
*    SP=      DD-NAME SPECIAL PROCESSING REQUEST.
*             VALID VALUE : C = CONTROL
*                           D = DUMMY
*                           E = EDIT
*                           T = TERMINAL
*                           W = WORK
* 2. DS : DEFINE A DATA-SET LIBRARY TO BE ALLOCATED UNDER THE DD-NAME
* ------- PREVIOUSLY DECLARED BY A DD STATEMENT.
*    SYNTAX :  DS=...  TYPE=...  OPT=...  SP=...
*    OPERAND  MEANING                                       MAX.L.
*    -------  --------------------------------------------  ------
*    DS=      DATA-SET NAME, INTO WHICH YOU MAY USE         CL44
*             THE FOLLOWING SPECIAL CODING :
*             <P> : CURRENT DSNAME'S PREFIX REPLACEMENT
*             <U> : CURRENT RACF USER-ID REPLACEMENT
*             <G> : CURRENT RACF GROUP-NAME REPLACEMENT
*             IF OMITTED : TEMPORARY DATA-SET ASSUMED
*             (CODE DS= WHEN ANOTHER OPERAND SPECIFIED).
*    TYPE=    DATA-SET PRODUCT(S) OR SPECIAL USES.
*             SEE "DATA-SETS DEFINITIONS" (INDICATORS
*             BYTES UNDER THE CONTROL OF "DYLO").
*    OPT=     DATA-SET PROCESSING REQUIREMENT. SEE
*             "DATA-SETS DEFINITIONS" (FLAG BYTE UNDER
*             THE CONTROL OF "DYLO").
*    SP=      DATA-SET SPECIAL PROCESSING REQUEST.
*             VALID VALUE : P = PROFILE
         EJECT
*-------------------------------------------------------------------*
*         A L I A S ( E S )     P R O C E S S     T A B L E         *
*-------------------------------------------------------------------*
         SPACE 1
* MEMBER(S) ALT STATEMENTS DESCRIPTION :
* ======================================
* ALIAS : DEFINE AN ALIAS NAME TO USE AS REPLACEMENT FOR USER <U> OR
* ------- GROUP <G> DATA-SETS NAMES WHEN TRYING TO ALLOCATE THEM TO
*         SPECIFIC DD-NAMES (I.E., IF A DATA-SET <U>... OR <G>... IS
*         NOT FOUND WHEN DOING ALLOCATION, THEN A SEARCH IS DONE TO
*         FIND THE ALIAS... DATA-SET ONLY WHEN THE DD-NAME MATCHES
*         IN THE CORRESPONDING ALIAS TABLE ENTRY).
*         THE UNLESS OPERAND ALLOWS TO PREVENT THIS PROCESS WHEN
*              1. A USER (USER-ID TABLE) IS CONNECTED TO ANY RACF
*                 GROUP(S) WHICH MUST NOT ACCESS THE ALIAS NAME, OR
*              2. A GROUP (GROUP TABLE) CONTAINS ANY RACF USER(S)
*                 WHO MUST NOT ACCESS THE ALIAS NAME.
*    SYNTAX :  USER= OR GROUP=  NAME ALIAS
*    --------           DDN=  ...  ...  ...
*                       UNLESS=  ...  ...  ...
*    CARD COLUMNS RANGE : COLUMNS 1-72.
*                         AN ASTERISK IN COLUMN 1 MEANS A COMMENT.
*    OPERAND  MEANING                                       MAX.L.
*    -------  --------------------------------------------  ------
*    NAME     THE USER-ID (USER=) OR GROUP (GROUP=) NAME.   CL8
*    ALIAS    THE ALIAS NAME.                               CL8
*    DDN=     THE DD-NAME(S) TO WHICH THE PROCESS MUST      CL8
*             BE APPLIED.
*             THE LIST MAY CONTINUE ON MORE CARDS.
*    UNLESS=  THE GROUP NAME(S), WHEN USER-ID TABLE,        CL8
*             OR USER-ID NAME(S), WHEN GROUP TABLE, FOR
*             WHICH THE PROCESS MUST NOT BE APPLIED.
*             IF SPECIFIED, THIS OPERAND MUST FOLLOWS
*             THE DDN= OPERAND.
*             THE LIST MAY CONTINUE ON MORE CARDS.
         EJECT
*-------------------------------------------------------------------*
*               A U T O M A T I C     C O M M A N D S               *
*         S E L E C T I O N     P R O C E S S     T A B L E         *
*-------------------------------------------------------------------*
         SPACE 1
* MEMBER(S) ACS STATEMENTS DESCRIPTION :
* ======================================
* PURPOSE : AUTOMATIC COMMAND(S) SELECTION TO BE EXECUTED WHEN THE
* --------- "DYLON" OR "DYLOFF" PROCESS IS SUCCESSFULLY COMPLETE.
*           BY USE OF STATEMENTS, IT ALLOWS CONDITIONAL SELECTION.
* CARD COLUMNS RANGE : COLUMNS 1-72. NEVER A KEYWORD OR AN OPERAND
* -------------------- CAN BE SPLIT BETWEEN TWO SUCCESSIVE CARDS.
*          KEYWORDS AND OPERANDS MUST BE SEPARATED EACH FROM THE
*          OTHERS BY AT LEAST A BLANK CHARACTER. WHEN THE FIRST
*          CHARACTER ENCOUNTERED IN A CARD, UNLESS BLANKS, IS AN
*          ASTERISK (*), THEN THIS CARD IS HANDLED AS A COMMENT CARD.
* SYNTAX : ALWAYS, A STATEMENT MUST START WITH A KEYWORD "IF-ON" OR
* -------- "IF-OFF" AND END BY A KEYWORD "C=" (THIS IS MANDATORY).
*          BE CAREFUL IN STATEMENTS SEQUENCE ORDER SO THEY WARRANT A
*          HIGH COMPLEX CONDITION IS MET BEFORE A LESS ONE.
* KEYWORD  OPERAND(S)  MEANING
* -------  ----------  --------------------------------------------
* IF-ON    NONE        START A CONDITIONAL SENTENCE FOR "DYLON".
* IF-OFF   NONE        START A CONDITIONAL SENTENCE FOR "DYLOFF".
* T=       S/L/B       TERMINAL TYPE : "S" FOR SCREEN OR "L" FOR LINE
*                      OR "B" FOR TSO BACKGROUND RUN.
* U=       USER-ID     LIST OF USER-ID'S NAMES MATCHING CONDITIONS.
* G=       GROUP       LIST OF GROUP'S NAMES MATCHING CONDITIONS.
* P=       PROCEDURE   LIST OF PROCEDURE'S NAMES MATCHING CONDITIONS.
* S=       TYPE        LIST OF TYPE'S NAMES MATCHING CONDITIONS (VALID
*                      ONLY IN "IF-ON" SENTENCE).
* C=       COMMAND(S)  THE DESIRED COMMAND(S). THE STRING MUST BE
*                      QUOTED IF IT INCLUDES ONE OR MORE BLANKS AND/OR
*                      QUOTES (A QUOTE IN THE STRING MUST BE DOUBLED),
*                      AND MULTIPLE COMMANDS MUST BE SEPARATED EACH
*                      FROM THE OTHER BY THE SEMI-COLON DELIMITER.
*          KEYWORDS    ALIASES
*          ----------  -----------------------------------------
*          T=          TERM=, TERMINAL=
*          U=          USER=, USERS=
*          G=          GROUP=, GROUPS=
*          P=          PROC=, PROCEDURE=, PROCS=, PROCEDURES=
*          S=          SEL=, SELECT=
*          C=          CMD=, CMDS=, COMMAND=, COMMANDS=
*          OPERANDS    ALIASES
*          ----------  -----------------------------------------
*          S           SCREEN, D, DISPLAY
*          L           LINE, LINES
*          B           BACK, BACKGROUND (EQUIVALENT TO "L")
         EJECT
* HOW TO CODE KEYWORDS AND OPERANDS :
* -----------------------------------
*      1. WHEN CODING U=, G= AND P= OPERAND(S), THE FOLLOWING
*         RULES MUST BE APPLIED :
*           1. A SINGLE NAME MAY BE CODED P= ... AS WELL AS P= ( ... )
*           2. A LIST OF NAMES IS ALWAYS CODED G= ( ... ... ... )
*         YOU MAY ALSO SPECIFY A SHORTER CHARACTERS STRING WHICH WILL
*         BE USED AS MATCH TEST ON THE INITIAL CHARACTERS OF THE
*         CURRENT USER-ID, GROUP OR PROCEDURE NAME. TO DO IT, JUST
*         PREFIX THE CHARACTERS STRING BY A PERIOD.
*           I.E. : U= .SYS WHICH MEANS ALL USER-ID'S NAMES STARTING
*           WITH THE "SYS" CHARACTERS (I.E. : SYSTSO1, SYSTSO2,
*           SYSIBM1 AND SYSIBM2 ARE ALL MATCHING THE ABOVE CONDITION).
*      2. THE SAME RULES APPLY TO S= OPERAND(S) CODING UNLESS YOU MAY
*         NOT DEFINE A MATCH TEST (CHARACTERS STRING PREFIXED BY A
*         PERIOD). THE TYPE'S NAMES ARE THE DATA-SET PRODUCT(S)
*         OR SPECIAL USES, AND ALL THOSE IN THE LIST ARE TESTED
*         TO GET THE CONDITION MET. SEE "DATA-SETS DEFINITIONS"
*         (INDICATORS BYTES UNDER THE CONTROL OF "DYLO").
*      3. KEYWORDS AND OPERANDS AS WELL AS MULTIPLE COMMANDS MAY BE
*         CODED IN SEPARATE CARDS, AS I.E. :
*           IF-ON
*                  TERMINAL= S
*                            USERS= ( .SYS
*                                     MASTER )
*                                      SELECT= ( SPF
*                                                ADA )
*                                                COMMANDS= ' TIME ;
*                                                            ISPF '
         EJECT
*-------------------------------------------------------------------*
*            D A T A - S E T S     D E F I N I T I O N S            *
*-------------------------------------------------------------------*
         SPACE 1
        PRINT  &PRS
* MACRO USE :  @DEFI  N,I1,I2,I3,I4,I5,I6,I7,I8
* -----------  N = THE BYTE NUMBER (1 ,2 OR 3)
*              I1-I8 = A LIST OF 1 UP TO 8 INDICATORS NAMES (ONLY 1
*                      UP TO 4 CHARACTERS LONG ACCEPTED).
         SPACE 1
* TYPE=  HERE FOLLOWS THE BITS FLAGS DEFINITIONS (INDICATORS BYTES
*        UNDER THE CONTROL OF "DYLO") FOR :
         SPACE 1
*        1. PRODUCTS :
        @DEFI  1,                  INDICATORS - BYTE 1                 X
               SPF,                     ISPF                           X
               IFS,                     INFO SYSTEM                    X
               SMP,                     SMP                            X
               ADA,                     ADABAS                         X
               MFT                      MFTS
         SPACE 1
*        2. SPECIAL DATA-SET'S STATUS :
        @DEFI  2,                  INDICATORS - BYTE 2                 X
               SYS                      SYSTEM USER
         SPACE 1
*        3. SPECIAL USER'S STATUS :
        @DEFI  3,                  INDICATORS - BYTE 3                 X
               IFM,                     INFO-SYSTEM MANAGER            X
               DMS                      DMS MANAGER
         SPACE 1
***********************************************************************
*--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ---*
*---           I F     Y O U     D O     C H A N G E S             ---*
*---                  O R     A D D I T I O N S                    ---*
*--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ---*
* REMARKS : -- ANY CHANGES IN ABOVE DEFINITIONS MAY INVOLVE ALSO :    *
* =========    1. THE LOGIC CODED IN THE MEMBER "DYLOUSD" (USER'S     *
*                 SELECTIONS - DEFAULTS), AND                         *
*              2. THE OPERANDS SCAN IN THE MEMBER "DYLOSCO", THEN     *
*              EVENTUAL ASSEMBLY ERRORS ALLOW YOU TO ADJUST CODE.     *
*--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ---*
***********************************************************************
         EJECT
*-------------------------------------------------------------------*
*             A S S E M B L Y     D E F I N I T I O N S             *
*-------------------------------------------------------------------*
         SPACE 1
        $DEFREG
         SPACE 1
        PRINT  OFF
        @CHK   ,                   CHECK DEFAULTS VALUES
        @DEFF  M,                       MANDATORY                      X
               X                        EXCLUSIVE
        @VCOM  ,
        PRINT  ON
        PRINT  &PRF
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -          C O M M U N I C A T I O N S            - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- VERIFY AND SET SENIOR SYSTEM PROGRAMMER(S).
*        A SINGLE OR A LIST OF USER-ID(S) AND/OR GROUP(S) NAME(S)
*        MAY BE GIVEN USING THE @WIZ MACRO AS SHOWN BELOW :
*              @WIZ  UUU <= A SINGLE USER
*              @WIZ  ,GGG <= A SINGLE GROUP
*              @WIZ  UUU,GGG <= A SINGLE USER AND A SINGLE GROUP
*              @WIZ  (UUU,UUU,UUU) <= A USERS LIST
*              @WIZ  ,(GGG,GGG,GGG) <= A GROUPS LIST
*              @WIZ  (UUU,UUU,UUU),GGG <= A USERS LIST AND A SINGLE
*                                                            GROUP
*              @WIZ  UUU,(GGG,GGG,GGG) <= A SINGLE USER AND A GROUPS
*                                                             LIST
*              @WIZ  (UUU,UUU,UUU),(GGG,GGG,GGG) <= A USERS LIST AND
*                                                   A GROUPS LIST
         SPACE 1
        @WIZ   SYSPAJA
         EJECT
        PRINT  OFF
         CNOP  0,4
         USING *,R8
         USING WKAREA,R10
AUSD     STM   R14,R12,12(R13)
         LR    R8,R15
         LR    R10,R1
        PRINT  ON
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*       U S E R ' S     S E L E C T I O N S - D E F A U L T S       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
* YOU MAY PROGRAM YOUR NEEDS USING THE FOLLOWING TWO MACROS :
* ===========================================================
* 1. @IF MACRO, SYNTAX IS :
*             ...  @IF  KEYWORD=(... <- KEYWORD NAME
*                                U), <- UNSPECIFIED OPTION
*                                N   <- NO OPTION
*                                S   <- OPTION
*                  OR : USER=...,
*                       USER=(...,...,...),
*                  OR : GROUP=...,
*                       GROUP=(...,...,...),
*                  OR : TERMINAL=S, <- SCREEN
*                                L  <- LINE
*                                B  <- BACKGROUND
*                       GOTO=..., <- BRANCH IF EQUAL
*                       ELSE=...  <- BRANCH IF NOT EQUAL
* 2. @SETI MACRO, SYNTAX IS :
*             ...  @SETI  ..., <- TARGET FIELD
*                         ..., <- INDICATOR NAME
*                         GOTO=... <- UNCONDITIONAL BRANCH
* REMARK : TO END CORRECTLY PROCESSING, BRANCH TO LABEL "USDOK", AND,
*          TO SIGNAL AN ERROR, BRANCH TO LABEL "USDERR".
* MANDATORY LABELS USE :
* ======================
*        "USDOK"  : BRANCH WHEN PROCESS TERMINATES CORRECTLY
*        "USDERR" : BRANCH WHEN AN ERROR IS DETECTED
*        THEN USE LABELS FROM "TUSD0" UP TO "TUSD999" FOR YOUR NEEDS
         SPACE 1
        PRINT  &PRF
        COPY   DYLOUSD             <=== SELECTIONS/DEFAULTS ==========
        PRINT  OFF
         SPACE 1
USDERR   LA    R15,4               SET RC=4 (ERROR)
         B     USDX
USDOK    XR    R15,R15             SET RC=0 (OK)
USDX     L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         DROP  R8
        LTORG
         CNOP  0,4
         USING *,R8
ASOK     STM   R14,R12,12(R13)
         LR    R8,R15
         LR    R10,R1
         LTR   R0,R0
         BP    OPX0
         BZ    OPY0
         B     OPZ0
        PRINT  ON
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                    S C A N     O P E R A N D S                    *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
* YOU MAY PROGRAM YOUR NEEDS USING THE FOLLOWING FOUR MACROS :
* ============================================================
* 1. @IF MACRO, SYNTAX IS :
*             ...  @IF  KEYWORD=(... <- KEYWORD NAME
*                                U), <- UNSPECIFIED OPTION
*                                N   <- NO OPTION
*                                S   <- OPTION
*                -----------------------------------------
*                ( OR : USER=...,                        )
*                (      USER=(...,...,...),              )
*                ( OR : GROUP=...,                       )-> NOT
*                (      GROUP=(...,...,...),             )   USED
*                ( OR : TERMINAL=S, <- SCREEN            )   HERE
*                (               L  <- LINE              )
*                (               B  <- BACKGROUND        )
*                -----------------------------------------
*                       GOTO=..., <- BRANCH IF EQUAL
*                       ELSE=...  <- BRANCH IF NOT EQUAL
* 2. @CHKO MACRO, SYNTAX IS :
*             ...  @CHKO  ...,...,..., <- KEYWORDS NAMES LIST
*                         MATCH=...,   <- BRANCH IF EQUAL
*                         NOMATCH=...  <- BRANCH IF NOT EQUAL
* 3. @SETKW MACRO, SYNTAX IS :
*             ...  @SETKW  ..., <- KEYWORD NAME
*                          ..., <- U = UNSPECIFIED OPTION
*                                  N = NO OPTION
*                                  S = OPTION
*                          GOTO=... <- UNCONDITIONAL BRANCH
* 4. @SETI MACRO, SYNTAX IS :
*             ...  @SETI  ..., <- TARGET FIELD
*                         ..., <- INDICATOR NAME
*                         GOTO=... <- UNCONDITIONAL BRANCH
* MANDATORY LABELS USE :
* ======================
*        "OPDUPL" : BRANCH WHEN A KEYWORD OPERAND IS TWICE DETECTED
*        "OPNEXT" : BRANCH WHEN A KEYWORD OPERAND IS PROCESSED
*        "OPEND"  : BRANCH WHEN IT IS NONE OF THE POSSIBLE KEYWORDS
         SPACE 1
        PRINT  &PRF
        COPY   DYLOSCO             <=== SCAN OPERANDS ================
        PRINT  OFF
         SPACE 1
OPEND    LA    R15,8               SET RC=8 (END/CONTINUE)
         B     OPSX
OPDUPL   LA    R15,4               SET RC=4 (ERROR/DUPLICATED)
         B     OPSX
OPNEXT   XR    R15,R15             SET RC=0 (NEXT/CONTINUE)
OPSX     L     R14,12(R13)
         LM    R0,R2,20(R13)
         LM    R8,R12,52(R13)
         BR    R14
         DROP  R8,R10
        LTORG
        PRINT  ON
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*     I N T E R N A L     D D N A M E ' S     L I B R A R I E S     *
*     C O N C A T E N A T I O N S     I N F O ' S     T A B L E     *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
* MACROS USE DESCRIPTION :
* ========================
*
* 1. @DD :     DEFINES A DD-NAME TO WHICH ONE, AT LEAST, OR MORE
* --------     LIBRARIES MUST BE DYNAMICALLY AND PERMANENTLY ALLOCATED.
*              SYNTAX : DDN  @DD  ID=,DSORG=,RECFM=,LRECL=,SP=
*              --------
*              OPERAND  MEANING                                 MAX.L.
*              -------  --------------------------------------  ------
*              DDN      DD-NAME.                                CL8
*              ID       DD PURPOSE SHORT DESCRIPTION            CL20
*              DSORG    DATA-SET(S) ORGANIZATION : PS, PO OR
*                       DA. WHEN DA, RECFM AND LRECL ARE NOT
*                       USED.
*              RECFM    DATA-SET(S) RECORD FORMAT : F, V OR U.
*              LRECL    DATA-SET(S) RECORD LENGTH (USED ONLY
*                       WITH RECFM=F OR V).
*              SP       DD-NAME SPECIAL PROCESSING REQUEST.     CL1
*                       VALID VALUE : C = CONTROL
*                                     D = DUMMY
*                                     E = EDIT
*                                     T = TERMINAL
*                                     W = WORK
*
* 2. @DS :     DEFINES A DATA-SET LIBRARY TO BE ALLOCATED UNDER THE
* --------     DD-NAME PREVIOUSLY DECLARED USING A @DD MACRO.
*              SYNTAX : ...  @DS  DSN,TYPE=,OPT=,SP=
*              -------- (WHERE, IF YOU NEED IT, ... MAY BE A LABEL)
*              OPERAND  MEANING                                 MAX.L.
*              -------  --------------------------------------  ------
*              DSN      DATA-SET NAME, INTO WHICH YOU MAY USE   CL44
*                       THE FOLLOWING SPECIAL CODING :
*                       <P> = CURRENT DSNAME'S PREFIX.
*                       <U> = CURRENT RACF USER-ID.
*                       <G> = CURRENT RACF GROUP-NAME.
*                       IF OMITTED = TEMPORARY DATA-SET.
*              TYPE     DATA-SET PRODUCT(S) OR SPECIAL USES.
*                       SEE "DATA-SETS DEFINITIONS"(INDICATORS
*                       BYTES UNDER THE CONTROL OF "DYLO").
*              OPT      DATA-SET PROCESSING REQUIREMENT. SEE
*                       "DATA-SETS DEFINITIONS"(FLAG BYTE UNDER
*                       THE CONTROL OF "DYLO").
*              SP       DATA-SET SPECIAL PROCESSING REQUEST.    CL1
*                       VALID VALUE : P = PROFILE
*
* 3. @DSE :    MARKS THE END OF DATA-SET(S) LIST.
* ---------    MACRO HAS NO OPERANDS.
*              SYNTAX : ...  @DSE
*              -------- (WHERE, IF YOU NEED IT, ... MAY BE A LABEL)
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        I N T E R N A L     L I B R A R I E S     T A B L E        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  OFF
         @DDTS ,                   START OF TABLE
        PRINT  ON
        PRINT  &PRS
        COPY   DYLODDT             <=== LIBRARIES TABLE ==============
        PRINT  OFF
         @DDTE ,                   END OF TABLE ADDRESS
        PRINT  ON
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*               I N T E R N A L     A L I A S ( E S )               *
*                    P R O C E S S     T A B L E                    *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
* MACRO USE DESCRIPTION :
* =======================
*
* @AL :        DEFINES AN ALIAS NAME TO USE AS REPLACEMENT FOR USER
* -----        <U> OR GROUP <G> DATA-SETS NAMES WHEN TRYING TO ALLOCATE
*              THEM TO SPECIFIC DD-NAMES (I.E., IF A DATA-SET <U>... OR
*              <G>... IS NOT FOUND WHEN DOING ALLOCATION, THEN A SEARCH
*              IS DONE TO FIND THE ALIAS... DATA-SET ONLY WHEN THE
*              DD-NAME MATCHES IN THE CORRESPONDING ALIAS TABLE ENTRY).
*              THE UNLESS OPERAND ALLOWS TO PREVENT THIS PROCESS WHEN
*              1. A USER (USER-ID TABLE) IS CONNECTED TO ANY RACF
*                 GROUP(S) WHICH MUST NOT ACCESS THE ALIAS NAME, OR
*              2. A GROUP (GROUP TABLE) CONTAINS ANY RACF USER(S)
*                 WHO MUST NOT ACCESS THE ALIAS NAME.
*              SYNTAX : NAME @AL  ALIAS,DDN=
*              --------                 DDN=(...,...,...)
*                                       UNLESS=
*                                       UNLESS=(...,...,...)
*              OPERAND  MEANING                                 MAX.L.
*              -------  --------------------------------------  ------
*              NAME     THE NAME                                CL8
*              ALIAS    THE ALIAS NAME                          CL8
*              DDN      THE DD-NAME(S) TO WHICH THE PROCESS     CL8
*                       MUST BE APPLIED
*              UNLESS   THE GROUP NAME(S), WHEN USER-ID TABLE,  CL8
*                       OR USER-ID NAME(S), WHEN GROUP TABLE,
*                       FOR WHICH THE PROCESS MUST NOT BE
*                       APPLIED.
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*       I N T E R N A L     U S E R - I D ( S )     T A B L E       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  OFF
USERS    @ALS  ,                   USER-ID TABLE
        PRINT  ON
        PRINT  &PRS
        COPY   DYLOUAL             <=== USERS TABLE ==================
        PRINT  OFF
         @ALE  ,                   END OF TABLE
        PRINT  ON
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*         I N T E R N A L     G R O U P ( S )     T A B L E         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  OFF
GROUPS   @ALS  ,                   GROUP TABLE
        PRINT  ON
        PRINT  &PRS
        COPY   DYLOGAL             <=== GROUPS TABLE =================
        PRINT  OFF
         @ALE  ,                   END OF TABLE
        PRINT  ON
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*     I N T E R N A L     A U T O M A T I C     C O M M A N D S     *
*         S E L E C T I O N     P R O C E S S     T A B L E         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
* MACRO USE DESCRIPTION :
* =======================
*
* @AC :        DEFINES AUTOMATIC COMMAND(S) SELECTION TO BE EXECUTED
* -----        WHEN THE "DYLON" OR "DYLOFF" PROCESS IS SUCCESSFULLY
*              COMPLETE. THIS MACRO IS USED TO WRITE A SINGLE AND
*              CONTINUOUS STRING WITH ALL THE DESIRED STATEMENTS.
*              SYNTAX : @AC  '... STATEMENTS TEXT ...'
*              -------- KEYWORDS AND OPERANDS MUST BE SEPARATED EACH
*              EACH FROM THE OTHERS BY AT LEAST A BLANK CHARACTER.
*              ALWAYS, A STATEMENT MUST START WITH A KEYWORD "IF-ON" OR
*              "IF-OFF" AND END BY A KEYWORD "C=" (THIS IS MANDATORY).
*              BE CAREFUL IN STATEMENTS SEQUENCE ORDER SO THEY WARRANT
*              A HIGH COMPLEX CONDITION IS MET BEFORE A LESS ONE.
* KEYWORD  OPERAND(S)  MEANING
* -------  ----------  --------------------------------------------
* IF-ON    NONE        START A CONDITIONAL SENTENCE FOR "DYLON"
* IF-OFF   NONE        START A CONDITIONAL SENTENCE FOR "DYLOFF"
* T=       S/L/B       TERMINAL TYPE : "S" FOR SCREEN OR "L" FOR LINE
*                      OR "B" FOR TSO BACKGROUND RUN.
* U=       USER-ID     LIST OF USER-ID'S NAMES MATCHING CONDITIONS
* G=       GROUP       LIST OF GROUP'S NAMES MATCHING CONDITIONS
* P=       PROCEDURE   LIST OF PROCEDURE'S NAMES MATCHING CONDITIONS
* S=       TYPE        LIST OF TYPE'S NAMES MATCHING CONDITIONS (VALID
*                      ONLY IN "IF-ON" SENTENCE).
* C=       COMMAND(S)  THE DESIRED COMMAND(S). THE STRING MUST BE
*                      QUOTED (2 QUOTES IN @AC TEXT) IF IT INCLUDES
*                      ONE OR MORE BLANKS AND/OR QUOTES (A QUOTE IN
*                      THE STRING MUST BE DOUBLED, SO 4 QUOTES IN @AC
*                      TEXT), AND MULTIPLE COMMANDS MUST BE SEPARATED
*                      EACH FROM THE OTHER BY THE SEMI-COLON DELIMITER.
*          KEYWORDS    ALIASES
*          ----------  -----------------------------------------
*          T=          TERM=, TERMINAL=
*          U=          USER=, USERS=
*          G=          GROUP=, GROUPS=
*          P=          PROC=, PROCEDURE=, PROCS=, PROCEDURES=
*          S=          SEL=, SELECT=
*          C=          CMD=, CMDS=, COMMAND=, COMMANDS=
*          OPERANDS    ALIASES
*          ----------  -----------------------------------------
*          S           SCREEN, D, DISPLAY
*          L           LINE, LINES
*          B           BACK, BACKGROUND
         EJECT
* NOTES : WHEN CODING U= AND G= OPERAND(S) YOU MUST FOLLOW THE RULES
* ------- GIVEN BELOW :
*           1. A SINGLE NAME MAY BE CODED P= ... AS WELL AS P= ( ... )
*           2. A LIST OF NAMES IS ALWAYS CODED G= ( ... ... ... )
*         YOU MAY ALSO SPECIFY A SHORTER CHARACTERS STRING WHICH WILL
*         BE USED AS MATCH TEST ON THE INITIAL CHARACTERS OF THE
*         CURRENT USER-ID, GROUP OR PROCEDURE NAME. TO DO IT, JUST
*         PREFIX THE CHARACTERS STRING BY A PERIOD.
*           I.E. : U= .SYS WHICH MEANS ALL USER-ID'S NAMES STARTING
*           WITH THE "SYS" CHARACTERS (I.E. : SYSTSO1, SYSTSO2,
*           SYSIBM1 AND SYSIBM2 ARE ALL MATCHING THE ABOVE CONDITION).
*         THE SAME RULES APPLY TO S= OPERAND(S) CODING UNLESS YOU MAY
*         NOT DEFINE A MATCH TEST (CHARACTERS STRING PREFIXED BY A
*         PERIOD). THE TYPE'S NAMES ARE THE DATA-SET PRODUCT(S)
*         OR SPECIAL USES, AND ALL THOSE IN THE LIST ARE TESTED
*         TO GET THE CONDITION MET. SEE "DATA-SETS DEFINITIONS"
*         (INDICATORS BYTES UNDER THE CONTROL OF "DYLO").
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*       I N T E R N A L     C O M M A N D ( S )     T A B L E       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  OFF
         @ACS  ,                   START OF TABLE
        PRINT  ON
        PRINT  &PRS
        COPY   DYLOCMD             <=== COMMANDS TABLE ===============
        PRINT  OFF
         @ACE  ,                   END OF TABLE
        @DEFDV ,                   DEFINE DEFAULTS VALUES
        @TABF  ,                   FLAGS NAMES TABLE
        @TABS  ,                   SELECT (INDICATORS) NAMES TABLE
        @TABI  ,                   INDICATORS NAMES TABLE
WKAREA  @WAC   ,                   WORK-AREAS COMMUNICATIONS
        @GNKW  ,                   PRODUCTS, ... CHECK
WKLEN    EQU   (((*-WKAREA)+7)/8)*8
DSCDSECT DSECT ,                   SYSTEM DSECT'S.
        IECSDSL1 (1)
        IEFZB4D2
        PRINT  ON
         SPACE 2
         END
