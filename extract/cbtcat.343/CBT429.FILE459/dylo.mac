DYLO     TITLE 'DYLON/DYLOFF -- DYNAMIC LOGON/LOGOFF.'
DYLON    START 0
        PRINT  OFF
        COPY   DYLOM               <=== ASSEMBLY MACROS ==============
         GBLA  &TSON
         GBLC  &TSOP(100)
         GBLC  &PRS,&PRF,&PUN
&TSON    SETA  100
&TSOP(1) SETC  'A'                 ALIAS OF AUTO (NOT USING MACRO)
&PUN     SETC  'NO'
         AIF   ('&SYSPARM' EQ '').SN
         AIF   ('&SYSPARM'(1,1) EQ 'F').SF
         AIF   ('&SYSPARM'(1,1) EQ 'S').SS
.SN      ANOP
&PRS     SETC  'NOGEN'
&PRF     SETC  'NOGEN'
         AGO   .ST
.SS      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'NOGEN'
         AGO   .SP
.SF      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'GEN'
.SP      AIF   (K'&SYSPARM LT 2).ST
         AIF   ('&SYSPARM'(2,1) NE 'Y').ST
&PUN     SETC  'YES'
.ST     PRINT  ON
         SPACE 1
*--------------------------------------------------------------------*
*        D Y L O N / D Y L O F F     T S O     C O M M A N D         *
*--------------------------------------------------------------------*
*
*  DESCRIPTION : SEE MODULE "DYLOCOM" FOR DOCUMENTATION.
*  -------------
*
*  COMPLETION CODES : THIS COMMAND RETURNS A VALUE IN REGISTER 15
*  ------------------ (RETURN CODE) REPRESENTING THE SUCCESS OR
*                     NONSUCCESS COMPLETION :
*
*        -----------------------------------------------------------
*        × &LASTCC × MEANING                                       ×
*        ×---------×-----------------------------------------------×
*        ×    0    × SUCCESSFUL COMPLETION                         ×
*        ×---------×-----------------------------------------------×
*        ×    8    × COMPLETION WITH ERROR(S)                      ×
*        -----------------------------------------------------------
*
*  ATTRIBUTES : MODULE IS RE-ENTERABLE.
*  ------------ TSO FOREGROUND AND BACKGROUND RUNNING ALLOWED.
*
*  AUTHOR :     MOINIL P.A.
*  --------     COMPUTING CENTRE (TP 361)
*               J.R.C. - ISPRA ESTABLISHMENT
*               21020 ISPRA (VA), ITALY
*               TEL. 0-332-789442
         EJECT
*-------------------------------------------------------------------*
*                    P R E - R E Q U I S I T E S                    *
*-------------------------------------------------------------------*
         SPACE 1
*  SYS1.PARMLIB MEMBERS :
*  ----------------------
*            1. IKJTSO00 : "DYLON" AND "DYLOFF" COMMANDS
*                          AUTHORIZATION NEEDED.
*            2. IEAAPF00 : LINK "DYLON" AND "DYLOFF" COMMANDS IN
*                          AN APF-LIBRARY.
*            3. LNKLST00 : SET LINK-LIBRARY IN LNKLST LOOKASIDE (LLA).
         SPACE 1
*-------------------------------------------------------------------*
*               S P E C I A L     O P E R A N D ( S )               *
*-------------------------------------------------------------------*
         SPACE 1
*  SPECIAL OPERANDS : RESTRICTED TO DEBUG USE (TEST PURPOSE), SO
*  ------------------ ALLOWED ONLY TO THE "WIZARD" INSTALLATION
*        SENIOR SYSTEM PROGRAMMER(S) AND DEFINED WITH @WIZ MACRO
*        IN "DYLOCOM" MODULE.
*
*        OPERAND  MEANING
*        -------  ---------------------------------------------------
*        DSAB     TRACE OF DSAB'S FLAGS (BYTE "DSABRS01").
*
*  NOTES : 1. THESE OPERANDS ARE ACCEPTED ONLY AS TRUE COMMAND
*  ======     OPERANDS, THEY CANNOT BE USED IN ANY "AOS" MEMBER(S).
*         2.  SEE ALSO COMMENT AT LABEL "ASKTEST".
         SPACE 1
*===================================================================*
*              F U R T H E R     P A R T I C U L A R S              *
*-------------------------------------------------------------------*
*                                                                   *
*        THE "OWNDYLO", "TSODYLO" AND "SYSDYLO" FLAGS (USED TO      *
*        REMEMBER AND INDICATE WHICH AND HOW DATA-SETS HAVE BEEN    *
*        ALLOCATED BY THIS COMMAND) ARE DEFINED IN THE RESERVED     *
*        BYTE "DSABRS01" OF THE DATA-SET ASSOCIATION BLOCK (DSAB).  *
*                                                                   *
*===================================================================*
         EJECT
*-------------------------------------------------------------------*
*            D A T A - S E T S     D E F I N I T I O N S            *
*-------------------------------------------------------------------*
         SPACE 1
        PRINT  &PRS
* OPT=   HERE FOLLOWS THE BITS FLAGS DEFINITIONS (FLAG BYTE UNDER THE
*        CONTROL OF "DYLO") FOR THE DATA-SETS PROCESSING :
         SPACE 1
        @DEFF  M,                       MANDATORY                      X
               X                        EXCLUSIVE
         SPACE 1
*-------------------------------------------------------------------*
*             A S S E M B L Y     D E F I N I T I O N S             *
*-------------------------------------------------------------------*
         SPACE 1
        PRINT  GEN
MXSTN    EQU   10                  MAXIMUM NUMBER OF SAVE-AREAS USE
*                                    TO BE GENERATED IN THE TANK
MXTBN    EQU   16                  EXPECTED MAXIMUM NUMBER OF DATA-SETS
*                                    TO BE CONCATENATED TO A DDNAME
MXRBTP   EQU   20                  EXPECTED MAXIMUM NUMBER OF POINTERS
*                                    TO SVC99 TEXT UNITS
MXRBTU   EQU   516                 EXPECTED MAXIMUM AREA LENGTH TO BE
*                                    USED FOR SVC99 TEXT UNITS
         EJECT
        $DEFREG
* GENERAL USE OF REGISTERS :
* --------------------------
*        R8  = ROUTINES LOCAL WORK AREA POINTER
*        R9  = ROUTINES BASE REGISTER
*        R10 = GENERAL WORK-AREA POINTER
*        R11 = MAIN 1ST BASE REGISTER
*        R12 = MAIN 2ND BASE REGISTER
*        R13 = SAVE AREA POINTER
*        R14 = LINK REGISTER
*        R15 = ENTRY ADDRESS / RETURN CODE
         SPACE 1
        PRINT  &PRF
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -          I N I T I A L I Z A T I O N            - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        ENTRY  DYLOFF
         SPACE 1
DYLOFF  $XENT  BASE=(R11,R12),ID=<ON/OFF>,LV=WKLEN,TYPE=RENT
         LR    R10,R13
         USING WKAREA,R10
         LA    R2,18*4(R10)
         L     R3,=A(WKLEN-(18*4))
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
         MVC   EXTR(EXTRLEN),EXTRP
         LR    R2,R1               GET ENTRY REGISTER
         USING CPPL,R2             SET CPPL ADDRESSABILITY
         XC    ATIOT(L'ATIOT+L'ATSO+L'APSCB),ATIOT
        EXTRACT ATIOT,'S',FIELDS=(TIOT,TSO,PSB),MF=(E,EXTR)
         ICM   R1,B'1111',APSCB    PSCB ADDRESS
         BZ    NOTTSO              WE ARE NOT IN TSO
         USING PSCB,R1
         CLC   PSCBUPT,CPPLUPT     CPPL+4 = UPT ADDRESS ?
         BNE   *+L'*+10            NO
         DROP  R1
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS ?
         BE    CMDOK               YES, TSO COMMAND
         LR    R1,R2
         USING IKJEBECA,R1
         L     R2,CAPTTMP          CPPL ADDRESS
         DROP  R1
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS ?
         BNE   NOTCMD              NO, NOT TSO SUB-COMMAND
CMDOK    ST    R2,CPPLADDR
         DROP  R2
         LA    R1,MXSTN            TANKS INITIALIZATION
         CVD   R1,WORKD
         MVC   TANKMX(L'TANKMX),WORKD+L'WORKD-L'TANKMX
         ZAP   TANKNO,=PL1'+0'
         STM   R11,R12,OLDPICA+4   ABEND INITIALIZATION
         MVC   ESPLST(ESPLSTL),ESPLSTP
        ESPIE  SET,,,PARAM=(R10),MF=(E,ESPLST)
         ST    R1,OLDPICA
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -            M A I N     P R O C E S S            - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         LR    R1,R10
         AL    R1,=A(DRBTP)
         ST    R1,ALRBTP
         L     R0,=A(LRBTP)
         ST    R0,ALRBTP+4
         ALR   R1,R0
         ST    R1,ALRBTP+8
         LR    R1,R10
         AL    R1,=A(DRBTU)
         ST    R1,ALRBTU
         L     R0,=A(LRBTU)
         ST    R0,ALRBTU+4
         ALR   R1,R0
         ST    R1,ALRBTU+8
         LR    R1,R10
         AL    R1,=A(DTBDS)
         ST    R1,ATBDS
         MVC   AOSNME,=CL8' '
         MVC   IDVNME,=CL8' '
         MVC   DDTNME,=CL8' '
         MVC   ALTNME,=CL8' '
         MVC   ACSNME,=CL8' '
         MVC   ESM(ESML),ESMP
         MVC   RPM(RPML),RPMP
         L     R2,CVTPTR           CVT ADDRESS
         USING CVTMAP,R2
         L     R2,CVTTCBP          TCB-TCB ADDRESSES (TCBHEAD)
         DROP  R2
         MVC   ATCB(L'ATCB),4(R2)  SET CURRENT TCB ADDRESS
         SPACE 1
*------- GET CURRENT USER-ID, GROUP, USER AND TERMINAL-ID
         SPACE 1
         MVC   USID,=CL8' '
         MVI   USIDL,0
         MVC   GRNM,=CL8' '
         MVC   GRNML,0
         MVI   UNME,C' '
         MVC   UNME+1(L'UNME-1),UNME
         MVI   UNMEL,0
         MVI   TRSN,C' '
         MVC   TRSN+1(L'TRSN-1),TRSN
         MVI   TRSNL,0
        RACSTAT ,
         LTR   R15,R15
         BZ    RCFACT
         L     R2,APSCB            PSCB POINTER
         USING PSCB,R2
         MVC   USID(L'PSCBUSER),PSCBUSER
         MVC   USIDL,PSCBUSRL
         DROP  R2
         USING PSA,R0
         L     R1,PSAAOLD
         DROP  R0
         USING ASCB,R1
         L     R2,ASCBTSB          TSB POINTER
         DROP  R1
         LTR   R2,R2
         BP    *+L'*+10
         MVC   TRSN,=CL8'B-GROUND'
         B     FLLNMS
        MODESET MF=(E,ESM)         ENTER SUPERVISOR MODE
         USING TSB,R2
         MVC   GRNM(L'TSBSF1),TSBSF1
         MVC   TRSN,TSBTRMID
         DROP  R2
        MODESET MF=(E,RPM)         RE-ENTER PROBLEM MODE
         LA    R0,L'GRNM
         LA    R2,GRNM+L'GRNM-1
         CLI   0(R2),C' '
         BNE   *+L'*+6
         BCTR  R2,0
         BCT   R0,*-10
         STC   R0,GRNML
         B     FLLNMS
         USING PSA,R0
RCFACT   L     R1,PSAAOLD
         DROP  R0
         USING ASCB,R1
         L     R2,ASCBASXB
         DROP  R1
         USING ASXB,R2
         L     R1,ASXBSENV
         DROP  R2
         USING ACEE,R1
         MVC   USID,ACEEUSRI       GET USER ID
         MVC   USIDL,ACEEUSRL      GET USER ID LENGTH
         MVC   GRNM,ACEEGRPN       GET GROUP NAME
         MVC   GRNML,ACEEGRPL      GET GROUP NAME LENGTH
         ICM   R2,B'1111',ACEEUNAM POINTER TO USER NAME
         BZ    GTTRID
         XR    R3,R3
         IC    R3,0(R2)
         LTR   R3,R3
         BNP   GTTRID
         BCT   R3,*+L'*+4
         B     GTTRID
         BCT   R3,*+L'*+6
         MVC   UNME(*-*),1(R2)
         EX    R3,*-6
GTTRID   MVC   TRSN,ACEETRID       GET TERMINAL-ID NAME
FLLNMS   LA    R0,L'UNME
         LA    R2,UNME+L'UNME-1
         CLI   0(R2),C' '
         BNE   *+L'*+6
         BCTR  R2,0
         BCT   R0,*-10
         STC   R0,UNMEL
         LA    R0,L'TRSN
         LA    R2,TRSN+L'TRSN-1
         CLI   0(R2),C' '
         BNE   *+L'*+6
         BCTR  R2,0
         BCT   R0,*-10
         STC   R0,TRSNL
         DROP  R1
         SPACE 1
*------- GET PROCEDURE/FOREGROUND OR STEP/BACKGROUND NAME (TIOT)
         SPACE 1
         L     R1,ATIOT            TIOT POINTER
         USING TIODSECT,R1
         MVC   PNME,TIOCSTEP
         DROP  R1
         LA    R0,L'PNME
         LA    R1,PNME+L'PNME-1
         CLI   0(R1),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R0,*-10
         STC   R0,PNMEL
         SPACE 1
*------- GET CURRENT PREFIX IF ANY (UPT)
         SPACE 1
         L     R2,CPPLADDR
         USING CPPL,R2             SET CPPL ADDRESSABILITY
         L     R3,CPPLUPT          UPT ADDRESS
         DROP  R2
         MVI   PRFXL,0
         MVI   PRFX,C' '
         MVC   PRFX+1(L'PRFX-1),PRFX
         USING UPT,R3
         XR    R1,R1
         IC    R1,UPTPREFL
         LTR   R1,R1
         BNP   GINFT1
         STC   R1,PRFXL            GET PREFIX LENGTH
         BCT   R1,*+L'*+6
         MVC   PRFX(*-*),UPTPREFX  <<EXECUTED>>
         EX    R1,*-6              GET PREFIX
         DROP  R3
         CLC   PRFX,USID           IS PREFIX IDENTICAL TO USER-ID ?
         BE    *+L'*+10            YES
         CLC   PRFX,GRNM           NO, IS PREFIX IDENTICAL TO GROUP ?
         BNE   GINFT1              NO, OK
         MVI   PRFXL,0             YES, RESET IT
         MVI   PRFX,C' '
         MVC   PRFX+1(L'PRFX-1),PRFX
         SPACE 1
*------- GET INFO'S ABOUT THE TERMINAL
         SPACE 1
         USING PSA,R0
GINFT1   L     R3,PSAAOLD
         DROP  R0
         USING ASCB,R3
         L     R2,ASCBTSB
         LTR   R2,R2
         BP    *+L'*+8
         OI    SWPRCS,BCKGR        SET BACKGROUND RUNNING
         B     PCREQ
         LA    R4,PCREQ            SET WHERE TO GO
        MODESET MF=(E,ESM)         ENTER SUPERVISOR MODE
         USING TSB,R2
         CLM   R3,B'0111',TSBASCB
         BE    *+L'*+8
         LA    R4,GINFT3           SOMETHING IS WRONG
         B     GINFT2
         TM    TSBSTAT,TSBDSPLY
         BO    *+L'*+8             IT IS A SCREEN TERMINAL
         DROP  R2,R3
         LA    R4,PCREQ            NOT SCREEN TREMINAL
         B     GINFT2
         OI    SWSTTS,TDSPLY       IT IS A SCREEN TERMINAL
GINFT2  MODESET MF=(E,RPM)         RE-ENTER PROBLEM MODE
         BR    R4
GINFT3   OI    SWPRCS,TABPERR      TSB -> ASCB BACK POINTER ERROR
         SPACE 1
*------- PROCESS COMMAND REQUESTS
         SPACE 1
PCREQ   @CALL  PCOPN               GO PROCESS COMMAND OPERANDS
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   QUIT                ERROR(S) DETECTED
         SPACE 1
*------- SET GENERAL REQUESTS
         SPACE 1
        @IFKW  LIST,S,ELSE=TTRC
         OI    SWSTTS,MSGLST       SAY MESSAGES LIST
         TM    SWPRCS,BCKGR        BACKGROUND RUNNING ?
         BZ    STGRQ1              NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(28),=CL28'BACKGROUND EXECUTION RUNNING'
         LA    R1,WKLINE
         LA    R0,38
        @CALL  PUTLNE
         B     TTRC
STGRQ1   TM    SWPRCS,TABPERR      TSB POINTER ERROR ?
         BZ    STGRQ2              NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(30),=CL30'TSB -> ASCB BACK POINTER ERROR'
         LA    R1,WKLINE
         LA    R0,40
        @CALL  PUTLNE
         B     TTRC
STGRQ2   TM    SWSTTS,TDSPLY       IS IT A SCREEN TERMINAL ?
         BO    TTRC                YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(28),=CL28'THE TERMINAL IS NOT A SCREEN'
         LA    R1,WKLINE
         LA    R0,38
        @CALL  PUTLNE
TTRC     TM    SWSTTS,WIZARD
         BZ    GODORP
        @IFKW  DSAB,N,ELSE=STFRC
         OI    SWSTTS,TRDSAB       SAY TRACE DSABRS01/DSABOPCT
STFRC   @IFKW  TYPE,U,GOTO=GODORP
        @IFKW  TYPE,N,GOTO=STFRCL
         TM    SWSTTS,TDSPLY       IS IT A SCREEN TERMINAL ?
         BO    GODORP              YES
         OI    SWSTTS,TDSPLY       SET SCREEN TERMINAL
         TM    SWSTTS,MSGLST       MESSAGES SUPPRESSED ?
         BZ    GODORP              YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(24),=CL24'TERMINAL = SCREEN FORCED'
         LA    R1,WKLINE
         LA    R0,34
        @CALL  PUTLNE
         B     GODORP
STFRCL   TM    SWSTTS,TDSPLY       IS IT A SCREEN TERMINAL ?
         BZ    GODORP              NO
         NI    SWSTTS,255-TDSPLY   SET LINE TERMINAL
         TM    SWSTTS,MSGLST       MESSAGES SUPPRESSED ?
         BZ    GODORP              YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'TERMINAL = LINE FORCED'
         LA    R1,WKLINE
         LA    R0,32
        @CALL  PUTLNE
         SPACE 1
*------- GO DO REQUESTED PROCESS
         SPACE 1
GODORP   TM    SWPRCS,PROFF        OFF PROCESS ?
         BO    XQOFF               YES
         EJECT
*-------------------------------------------------------------------*
*                                                                   *
*                   OOOOOOOOOO      NN        NN                    *
*                  OOOOOOOOOOOO     NNN       NN                    *
*                  OO        OO     NNNN      NN                    *
*                  OO        OO     NN NN     NN                    *
*                  OO        OO     NN  NN    NN                    *
*                  OO        OO     NN   NN   NN                    *
*                  OO        OO     NN    NN  NN                    *
*                  OO        OO     NN     NN NN                    *
*                  OO        OO     NN      NNNN                    *
*                  OO        OO     NN       NNN                    *
*                  OOOOOOOOOOOO     NN        NN                    *
*                   OOOOOOOOOO      NN        NN                    *
*                                                                   *
*-------------------------------------------------------------------*
         SPACE 1
*------- DO SPECIFIC PROCESS INITIALIZATION
         SPACE 1
        @CALL  INITT               GO DO IT
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   QUIT                FAILED
*------- GO DO USER'S SELECTION(S) AND/OR DEFAULTS
         SPACE 1
        @CALL  USRDS               GO DO IT
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   TERR                ERROR
         SPACE 1
*------- DO DD-NAME'S LIBRARIES PROCESS
         SPACE 1
         L     R5,ALIBCIT
         USING LIBCITD,R5
SCPRL    LA    R2,LIBNDS
         LR    R3,R2
         USING LIB#DS,R3
SCPRN    CLC   LIB#DSSA,=AL4(LIB#DSF$) END OF LIST ?
         BE    SCPRS               YES
         XC    WDSI,WDSI           ELSE CHECK IF NEEDED
         OC    WDSI,LIB#DSI
         BZ    SCPRX               IF ZERO, ALWAYS
         NC    WDSI,XDSI
         BNZ   SCPRX               IF NON-ZERO, MATCH SPECIFIED
         LA    R3,LIB#LDS(R3)
         B     SCPRN
SCPRX    LA    R3,LIB#LDS(R3)
         CLC   LIB#DSSA,=AL4(LIB#DSF$) POSITION TO END OF LIST
         BNE   *-10
         DROP  R3
         MVC   WDDN,LIBDDN         SET DD-NAME INFORMATION
         MVC   WLID,LIBLID
         MVC   WORG,LIBORG
         MVC   WRFM,LIBRFM
         MVC   WLRL,LIBLRL
         DROP  R5
         LA    R1,L'WDDN
         LA    R15,WDDN+L'WDDN-1
         CLI   0(R15),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R15,*-10
         STH   R1,WLDD
        @CALL  DDNDS               CONCATENATE DATA-SETS
         CH    R15,=H'4'           COMPLETION ?
         BNH   SCPRS               OK OR NONE
         OI    SWPRCS,ERREXR       ERROR
         TM    SWPRCS,ABTEXR       ABORT REQUESTED ?
         BO    XRTRN               YES
SCPRS    LA    R3,L'LIB#DSF$(R3)
         CL    R3,ALIBCITE
         BNL   XRTRN
         LR    R5,R3
         B     SCPRL
         EJECT
*-------------------------------------------------------------------*
*                                                                   *
*           OOOOOOOOOO      FFFFFFFFFFFF     FFFFFFFFFFFF           *
*          OOOOOOOOOOOO     FFFFFFFFFFFF     FFFFFFFFFFFF           *
*          OO        OO     FF               FF                     *
*          OO        OO     FF               FF                     *
*          OO        OO     FF               FF                     *
*          OO        OO     FFFFFFFF         FFFFFFFF               *
*          OO        OO     FFFFFFFF         FFFFFFFF               *
*          OO        OO     FF               FF                     *
*          OO        OO     FF               FF                     *
*          OO        OO     FF               FF                     *
*          OOOOOOOOOOOO     FF               FF                     *
*           OOOOOOOOOO      FF               FF                     *
*                                                                   *
*-------------------------------------------------------------------*
         SPACE 1
*------- OFF : DD-NAME'S LIBRARIES PROCESS
         SPACE 1
XQOFF   @CALL  DDOPEN              CHECK IF ANY DATA-SET IS OPENED
         CH    R15,=H'4'           COMPLETION ?
         BH    QUIT                8 = STOP
         BE    XRTRN               4 = NONE
ANPRL    L     R2,ATCB             0 = OK, GET TCB ADDRESS
         USING TCB,R2
         L     R2,TCBJSCB          JOB STEP CONTROL BLOCK ADDRESS
         DROP  R2
         USING IEZJSCB,R2
         L     R2,JSCDSABQ         GET ADDRESS OF QDB FOR DSAB CHAIN
         DROP  R2
         USING QDB,R2
         CLC   QDBNELMS,=XL4'0'    NO DATA-SETS ?
         BE    XRTRN               YES, LET'S GO (NOTHING TO DO)
         L     R2,QDBFELMP         GET ADDRESS OF FIRST DSAB
         DROP  R2
         USING DSAB,R2
ANPRI    TM    DSABFLG1,DSABDALC   DATA-SET DYNAMICALLY ALLOCATED ?
         BO    ANPRT               YES
         TM    DSABRS01,OWNDYLO    NO, IS IT MY ALLOCATION ?
         BZ    ANPRT               NO
         TM    DSABRS01,TSODYLO    IS IT A TSO BASIC ?
         BO    ANPRT               YES
         OC    TDSI,TDSI           NO, SYSTEM PRESERVE ?
         BNZ   ANPRA               NO
         TM    DSABRS01,SYSDYLO    YES, IS IT SYSTEM ?
         BZ    ANPRA               NO
ANPRT    ICM   R2,B'1111',DSABFCHN GET NEXT DSAB ENTRY
         BZ    XRTRN               END OF CHAIN
         B     ANPRI               OTHERWISE KEEP LOOKING
ANPRA    L     R3,DSABTIOT         POINT TO TIOT
         USING TIOELNGH,R3
         MVC   WDDN,TIOEDDNM       SET DD-NAME INFORMATION
         DROP  R2,R3
         LA    R1,L'WDDN
         LA    R15,WDDN+L'WDDN-1
         CLI   0(R15),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R15,*-10
         STH   R1,WLDD
        @CALL  DDFREE              FREE DATA-SET(S) AND DD
         CH    R15,=H'4'           COMPLETION ?
         BL    ANPRL               0 = OK
         BH    QUIT                8 = STOP
         OI    SWPRCS,ERREXR       4 = ERROR
         B     ANPRL
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -              T E R M I N A T I O N              - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- DO COMMAND(S) STACK
         SPACE 1
XRTRN    TM    SWPRCS,ERREXR       ERROR(S) DETECTED ?
         BO    QUIT                YES
         XR    R2,R2               NO, OK, SET RC=0
         CLI   STCMDL,1            SUCCESSFUL, ANY COMMAND(S) ?
         BL    LEAVE               NO
         BH    STCKI               YES
         CLI   STCMDT,C'*'         IS IT AN AUTOMATIC REQUEST ?
         BE    *+L'*+8             YES
         CLI   STCMDT,C'?'         IS IT ON TERMINAL REQUEST ?
         BNE   STCKI               NO
        @CALL  GCMDS               YES
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   QUIT                ERROR DETECTED
         CLI   STCMDL,0            ANY COMMAND(S) ?
         BE    LEAVE               NO
STCKI    MVC   GTMN(GTMNLEN),GTMNP STACK COMMAND(S)
         LA    R3,LSDLEN
         ST    R3,REQSP78          LSD SPACE
         XR    R1,R1
         IC    R1,STCMDL
         LA    R5,4(R1)
         LA    R3,STCMDT
STCKL    CLI   0(R3),C';'          COMMAND(S) SEPARATOR ?
         BE    STCKN               YES
STCKX    BCT   R1,*+L'*+4          NO, CONTINUE
         B     STCKE
         LA    R3,1(R3)
         B     STCKL
STCKN    BCT   R1,*+L'*+8
         MVI   0(R3),C' '          CANCEL IT IF LAST CHARACTER
         B     STCKE
         LR    R4,R3
         LA    R3,1(R3)
         CLI   0(R3),C';'          ANOTHER COMMAND(S) SEPARATOR ?
         BNE   *+L'*+8             NO
         MVI   0(R4),C' '          YES, CANCEL THE PREVIOUS
         B     STCKN
         LA    R5,3(R5)            ADD A DESC. WORD LENGTH
         B     STCKX
STCKE    LA    R3,7(R5)
         SRL   R3,3
         SLL   R3,3
         ST    R3,REQSP78+4
         OI    REQSP78+4,X'80'     IN-STORAGE LIST SPACE
         XC    WORKD,WORKD
        GETMAIN LU,LA=REQSP78,A=WORKD,SP=78,LOC=BELOW,MF=(E,GTMN)
         LM    R3,R4,WORKD
         XC    0(LSDLEN,R3),0(R3)  CLEAR LSD TO ZEROS
         USING LSD,R3
         ST    R4,LSDADATA         ADDRESS OF IN-STORAGE LIST
         STH   R5,LSDTOTLN         LENGTH OF IN-STORAGE LIST
         ST    R4,LSDANEXT         POINTER TO NEXT RECORD
         DROP  R3
         XR    R0,R0
         IC    R0,STCMDL
         LA    R3,STCMDT
STCKC    LR    R5,R3
         LA    R1,4                DESCRIPTOR WORD LENGTH
STCKS    CLI   0(R3),C';'          COMMAND(S) SEPARATOR ?
         BE    STCKM               YES
         LA    R1,1(R1)            NO, CONTINUE SCAN
         LA    R3,1(R3)
         BCT   R0,STCKS
         LA    R0,1
STCKM    SLL   R1,16
         STCM  R1,B'1111',0(R4)    IN-STORAGE DESCRIPTOR WORD
         SRL   R1,16
         SH    R1,=H'4'
         BCT   R1,*+L'*+6
         MVC   4(*-*,R4),0(R5)     <<EXECUTED>>
         EX    R1,*-6
         LA    R4,5(R4,R1)
         LA    R3,1(R3)
         BCT   R0,STCKC
         L     R5,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R5
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R5
         L     R5,WORKD            LSD ADDRESS
         XC    ECBX,ECBX           CLEAR ECB TO ZEROS
         XC    STPBX(STPBLEN),STPBX CLEAR SLIST TO ZEROS
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX            ADDRESS OF LIST
        STACK  PARM=STPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                  X
               STORAGE=((R5),PROCN),MF=(E,(1))
         LTR   R15,R15             HOW STACK COMPLETED ?
         BZ    LEAVE               OK
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(29),=CL29'STACK COMMAND(S) FAILED (R15='
         ST    R15,WORKD
         UNPK  WKLINE+39(9),WORKD(5)
         NC    WKLINE+39(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+39(8),HXTB
         MVI   WKLINE+47,C')'
         LA    R1,WKLINE
         LA    R0,48
        @CALL  PUTLNE              TELL USER OF ERROR
LEAVE   ESPIE  RESET,OLDPICA
XBACK    ICM   R1,B'1111',AWK
         BNP   SOLONG
         L     R15,ASRVC
        @CALL  ,
SOLONG   MVI   INOPR,INOPRE        FINAL
        @CALL  PTLDS
         L     R0,MXLCIT
         A     R0,MXALUS
         A     R0,MXALGR
         BNP   TLSRC
         L     R1,ALIBCIT
        FREEMAIN R,LV=(0),A=(1)
TLSRC    TM    SWSTTS,RCLSTX       RC DISPLAY ?
         BZ    BYE                 NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(20),=CL20'COMPLETION CODE =   '
         STC   R2,WKLINE+28
         OI    WKLINE+28,C'0'
         LA    R1,WKLINE
         LA    R0,30
        @CALL  PUTLNE
BYE     $XRET  CC=(R2),LV=WKLEN,TYPE=RENT
         SPACE 1
*------- ERROR(S) DETECTED
         SPACE 1
NOTCMD   L     R1,ATSO             TSO-FLAG ADDRESS
         TM    0(R1),X'80'
         BZ    *+L'*+8
         LA    R2,TPTMSG           TSO FOREGROUND, USE TPUT
         B     *+L'*+4
         LA    R2,WTOMSG           TSO BACKGROUND, USE WTO
         LA    R1,MSGERR
         B     SNDMSG
NOTTSO   LA    R1,MSGTSO
         LA    R2,WTOMSG           USE WTO
SNDMSG   MVC   MSGWORK(PWTOL),PWTO
         MVC   MSGWORK+4(L'MSID),MSID
         MVC   MSGWORK+14(31),0(R1)
         BR    R2
WTOMSG  WTO    MF=(E,MSGWORK)
         B     XCERR
TPTMSG   LH    R0,MSGWORK          TSO FOREGROUND
         SH    R0,=H'4'
         LA    R1,MSGWORK+4
        TPUT   (1),(0)
XCERR    LA    R2,8                SET RC=8
         B     BYE
STOVER   XR    R2,R2
         B     STUNDER+L'STUNDER
STUNDER  BASR  R2,0
         LR    R13,R10             BACK TO FIRST S.A.
         ZAP   TANKNO,=PL1'+0'
         LH    R6,NTBDS
         LTR   R6,R6               ANY DATA-SETS ALLOCATED
         BNP   SKIPF               NO
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
        @CALL  FREEDS              YES
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
SKIPF    MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(17),=CL17'SAVE AREA''S TANK '
         LTR   R2,R2
         BNZ   *+L'*+10
         MVC   WKLINE+27(33),=CL33'OVERFLOW (CHECK VALUE OF "MXSTN")'
         B     *+L'*+6
         MVC   WKLINE+27(33),=CL33'UNDERFLOW *** S C R A M B L E ***'
         LA    R1,WKLINE
         LA    R0,60
        @CALL  PUTLNE
         B     QUIT
TERR     MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(17),=CL17'OPERANDS CONFLICT'
         MVC   WKLINE+27(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,58
        @CALL  PUTLNE
QUIT    ESPIE  RESET,OLDPICA
XSTDL    LA    R2,8                YES, SET RC=8
         L     R5,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R5
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R5
         XC    ECBX,ECBX           CLEAR ECB TO ZEROS
         XC    STPBX(STPBLEN),STPBX CLEAR SLIST TO ZEROS
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX            ADDRESS OF LIST
        STACK  PARM=STPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                  X
               DELETE=ALL,MF=(E,(1))
        TCLEARQ INPUT
         MVC   WKLINE(L'MSID),MSID
         TM    SWPRCS,ABTEXR       ABORT REQUESTED ?
         BO    *+L'*+10            YES
         MVC   WKLINE+10(17),=CL17'ERROR(S) DETECTED'
         B     *+L'*+6
         MVC   WKLINE+10(17),=CL17'OFF NOW REQUESTED'
         MVC   WKLINE+27(32),=CL32' - IF ANY COMMAND(S), FLUSH DONE'
         LA    R1,WKLINE
         LA    R0,59
        @CALL  PUTLNE              TELL USER OF ERROR
         B     XBACK
         SPACE 1
*------- FAILURE DETECTED
         SPACE 1
         CNOP  0,4
INTEX   ESPIE  RESET,OLDPICA
         TM    SWSTTS,DSPPIE       DISPLAY PIE ?
         BZ    NOPIE               NO
        @CALL  XPPIE
NOPIE    MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(30),=CL30'INTERRUPT ××× CALL BIG WIZARD '
         LA    R1,WKLINE
         LA    R0,40
        @CALL  PUTLNE              TELL USER OF ERROR
         B     XSTDL
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -              S U B R O U T I N E S              - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- CHKDD - CHECK DD-NAME SUBROUTINE
*              AT ENTRY : DD-NAME TO BE CHECKED IN FIELD 'WDDN'
*              R0  : WORK REGISTER
*              R1  : TIOT POINTER
*              R14 : LINK REGISTER - RETURN +0 = NOT FOUND
*                                           +4 = FOUND
*              AT EXIT : IF DD-NAME FOUND, R1 POINTS TO TIOT DD-ENTRY
         SPACE 1
CHKDD    XR    R0,R0
         L     R1,ATIOT            START TIOT POINTER
         USING TIODSECT,R1
CHKDDL   CLC   TIOELNGH(4),=XL4'0' END OF TIOT ?
         BER   R14                 YES, RETURN+0 (NOT FOUND)
         CLC   TIOEDDNM(L'TIOEDDNM),WDDN DDNAME MATCH ?
         BE    4(R14)              YES, RETURN+4 (FOUND)
         IC    R0,TIOELNGH         LENGTH OF CURRENT DD-ENTRY
         ALR   R1,R0               NEXT DD-ENTRY IN TIOT
         B     CHKDDL
         DROP  R1
         SPACE 1
*------- BDDSN - BUILD A DS-NAME SUBROUTINE
*              R0  : WORK REGISTER
*              R1  : WORK REGISTER
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R14 : LINK REGISTER / RETURN +0 = ERROR
*                                           +4 = NONE
*                                           +8 = OK
*              R15 : WORK REGISTER
*              AT EXIT : IF ALL OK, FIELD 'WDSN' = DS-NAME AND
*                                   FIELD 'WLDS' = LENGTH OF DS-NAME
*                        IF ERROR, A MESSAGE IS SENDED IF REQUESTED
         SPACE 1
         USING LIB#DS,R2
BDDSN    CLC   LIB#DSSA,=AL4(LIB#DSF$) END OF LIST ?
         BNE   BDDSNX              NO, OK
         TM    SWSTTS,MSGLST       YES, MESSAGES SUPPRESSED ?
         BZR   R14                 YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R15,WKLINE+L'WDDN+9
         CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,*-8
         MVC   1(19,R15),=CL19' HAS NO DATA-SET(S)'
         LA    R15,20(R15)
         LA    R1,WKLINE
         SLR   R15,R1
         LR    R0,R15
        @CALL  PUTLNE,GO=YES       TELL USER OF ERROR
BDDSNX   CLC   LIB#DSN(3),=CL3'<P>'
         BE    BDDSNP
         CLC   LIB#DSN(3),=CL3'<U>'
         BE    BDDSNU
         CLC   LIB#DSN(3),=CL3'<G>'
         BE    BDDSNG
         CLC   LIB#DSN(3),=CL3'<T>'
         BE    *+L'*+10
         MVC   WDSN,LIB#DSN
         B     BDDSNS
         MVI   WDSN,C' '           BUILD TEMPORARY DS-NAME
         MVC   WDSN+1(L'WDSN-1),WDSN
         MVI   WDSN,C'&&'
         MVC   WDSN+1(L'WDDN),WDDN
         B     BDDSNS
BDDSNP   CLI   PRFXL,0             NO PREFIX ?
         BE    4(R14)              YES, NONE
         MVC   WDSN(L'PRFX),PRFX   SET PREFIX LEVEL
         XR    R1,R1
         IC    R1,PRFXL
         B     BDDSNM
BDDSNU   MVC   WDSN(L'USID),USID   SET USER-ID LEVEL
         XR    R1,R1
         IC    R1,USIDL
         B     BDDSNM
BDDSNG   CLI   GRNML,0             NO GROUP-NAME ?
         BE    4(R14)              YES, NONE
         MVC   WDSN(L'GRNM),GRNM   SET GROUP-NAME LEVEL
         XR    R1,R1
         IC    R1,GRNML
BDDSNM   LR    R0,R1
         LA    R1,WDSN(R1)
         LA    R15,L'LIB#DSN
         SR    R15,R0
         BCT   R15,*+L'*+6
         MVC   0(*-*,R1),LIB#DSN+3 <<EXECUTED>>
         EX    R15,*-6
BDDSNS   LA    R1,L'WDSN
         LA    R15,WDSN+L'WDSN-1
         CLI   0(R15),C' '
         BNE   *+L'*+6
         BCTR  R1,0
         BCT   R15,*-10
         STH   R1,WLDS
         B     8(R14)
         DROP  R2
         SPACE 1
*------- XDAIR - EXECUTE IKJDAIR-IKJEFF18 SUBROUTINE
*              R0  : WORK REGISTER
*              R1  : WORK REGISTER
*              R14 : LINK REGISTER - RETURN +0 = OK
*                                           +4 = ERROR
*              R15 : WORK REGISTER
         SPACE 1
XDAIR    ST    R14,SVLINK
         XC    DAPLECBS,DAPLECBS
        CALLTSSR EP=IKJDAIR,MF=(E,XDAPL)
         L     R14,SVLINK
         LTR   R15,R15             TEST DAIR COMPLETION
         BZR   R14                 OK
         TM    SWSTTS,MSGLST       ERROR, MESSAGES SUPPRESSED ?
         BZ    4(R14)              YES
         ST    R15,RETC            NO, STORE RETURN CODE
         LA    R1,XDFDA            PARM. ADDRESS
         USING DFDSECTD,R1
         XC    0(DFLEN,R1),0(R1)
         LA    R15,XDAPL
         ST    R15,DFDAPLP
         LA    R15,RETC
         ST    R15,DFRCP
         LA    R15,ZERO
         ST    R15,DFJEFF02
         LA    R15,DASW
         ST    R15,DFIDP
         DROP  R1
         B     XDFAIL              GO SEND ERROR MESSAGE
         SPACE 1
*------- XDYNALL - EXECUTE DYNALLOC-IKJEFF18 SUBROUTINE
*              R0  : WORK REGISTER
*              R1  : WORK REGISTER
*              R14 : LINK REGISTER - RETURN +0 = OK
*                                           +4 = ERROR
*              R15 : WORK REGISTER
         SPACE 1
XDYNALL  ST    R14,SVLINK
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         LA    R1,RBPS99           LOAD PARAMETER POINTER FOR SVC99
        DYNALLOC ,                 EXECUTE SVC99
         ST    R15,RETC            SAVE SVC99 RETURN CODE
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         L     R15,RETC            GET SVC99 RETURN CODE
         L     R14,SVLINK
         LTR   R15,R15             CHECK SVC99 RETURN CODE
         BZR   R14                 OK
         TM    SWSTTS,MSGLST       ERROR, MESSAGES SUPPRESSED ?
         BZ    4(R14)              YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(12),=CL12'DYNALLOC RC='
         UNPK  WKLINE+22(9),RETC(5) SET RETURN CODE
         NC    WKLINE+22(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+22(8),HXTB
         MVC   WKLINE+30(5),=CL5', EC='
         LA    R1,RBS99            RB POINTER
         USING S99RB,R1
         UNPK  WKLINE+35(5),S99ERROR(3) SET ERROR CODE
         NC    WKLINE+35(4),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+35(4),HXTB
         MVC   WKLINE+39(5),=CL5', IC='
         UNPK  WKLINE+44(5),S99INFO(3) SET INFO CODE
         NC    WKLINE+44(4),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+44(4),HXTB
         DROP  R1
         LA    R1,WKLINE
         LA    R0,48
        @CALL  PUTLNE              TELL USER OF ERROR
         LA    R1,XDFDA            PARM. ADDRESS
         USING DFDSECTD,R1
         XC    0(DFLEN,R1),0(R1)
         LA    R15,RBPS99
         ST    R15,DFS99RBP
         LA    R15,RETC
         ST    R15,DFRCP
         LA    R15,ZERO
         ST    R15,DFJEFF02
         LA    R15,DYSW
         ST    R15,DFIDP
         MVC   DFCPPLP,CPPLADDR
         DROP  R1
XDFAIL  LINK   EP=IKJEFF18         SEND ERROR MESSAGE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    XEXIT               OK
         ST    R15,WORKD           STORE DAIRFAIL RETURN CODE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(12),=CL12'DAIRFAIL RC='
         UNPK  WKLINE+22(9),WORKD(5) SET RETURN CODE
         NC    WKLINE+22(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+22(8),HXTB
         MVC   WKLINE+30(11),=CL11' (IKJEFF18)'
         LA    R1,WKLINE
         LA    R0,41
        @CALL  PUTLNE              TELL USER OF ERROR
XEXIT    L     R14,SVLINK
         B     4(R14)
         SPACE 1
*------- MESSAGES SUBROUTINES
*              R0  : SET TO ADDRESS OF MESSAGE
*              R1  : SET TO LENGTH OF MESSAGE
*              R14 : LINK REGISTER - RETURN
         SPACE 1
MSGTBN   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(25),=CL25'DATA-SETS TABLE OVERFLOW '
         MVC   WKLINE+35(24),=CL24'(CHECK VALUE OF "MXTBN")'
         LA    R1,WKLINE
         LA    R0,59
         BR    R14
MSGRBTP  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(34),=CL34'TEXT UNITS POINTERS AREA OVERFLOW '
         MVC   WKLINE+44(25),=CL25'(CHECK VALUE OF "MXRBTP")'
         LA    R1,WKLINE
         LA    R0,69
         BR    R14
MSGRBTU  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(25),=CL25'TEXT UNITS AREA OVERFLOW '
         MVC   WKLINE+35(25),=CL25'(CHECK VALUE OF "MXRBTU")'
         LA    R1,WKLINE
         LA    R0,60
         BR    R14
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                    D A T A     C O N S T A N T S                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
EXTRP   EXTRACT *-*,'S',MF=L
EXTRLEN  EQU   *-EXTRP
ESPLSTP ESPIE  SET,ESPEXIT,((1,15)),MF=L
ESPLSTL  EQU   *-ESPLSTP
ESMP    MODESET KEY=ZERO,MODE=SUP,MF=L ENTER SUPERVISOR MODE
ESML     EQU   *-ESMP
RPMP    MODESET KEY=NZERO,MODE=PROB,MF=L RE-ENTER PROBLEM MODE
RPML     EQU   *-RPMP
GTMNP   GETMAIN LU,MF=L
GTMNLEN  EQU   *-GTMNP
CAML1   CAMLST NAME,*-*,,*-*
LCAML1   EQU   *-CAML1
ZERO     DC    F'0'
DASW     DC    AL2(DFDAIR)
DYSW     DC    AL2(DFSVC99)
         SPACE 1
LSTSCL   DC    CL60'----+----1----+----2----+----3----+----4----+----5-X
               ---+----6'
         SPACE 1
* SKELETON FOR '----+----1----+----2----+----3----+----4-'
*              '=> DYLO : CAN'T BE INVOKED THROUGH A CALL',
*              '=> DYLO : WRONG ENVIRONMENT (TSO COMMAND)'
PWTO    WTO    '                                         ',            X
               ROUTCDE=11,DESC=7,MF=L
PWTOL    EQU   *-PWTO
         SPACE 1
A$PL     DC    A(PUTLNE)
A$DD     DC    A(DIAGDD)
A$FD     DC    A(FREEDS)
A$PA     DC    A(PERMAL)
HXTB     DC    CL16'0123456789ABCDEF'
MSGERR   DC    CL31'CAN''T BE INVOKED THROUGH A CALL'
MSGTSO   DC    CL31'WRONG ENVIRONMENT (TSO COMMAND)'
TANKUP   DC    PL1'+1'
MSID     DC    CL10'=> DYLO : '
         SPACE 1
        LTORG
         SPACE 1
*********************************************************************
*--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ---*
*---                                                             ---*
*---        END OF R11-R12 BASE REGISTERS ADDRESSABILITY         ---*
*---                                                             ---*
*--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ---*
*********************************************************************
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -        G E N E R A L     R O U T I N E S        - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- PUTLNE - PUTLINE ROUTINE
*              R0  : MESSAGE TEXT LENGTH
*              R1  : POINTS TO THE MESSAGE TEXT
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE = 0 (ALWAYS)
         SPACE 1
PUTLNE  @ENTER ,
         LTR   R0,R0
         BNP   PUTLNEX
         LA    R2,L'MSGOUT
         CLR   R0,R2
         BNL   *+L'*+2
         LR    R2,R0
         MVI   MSGOUT,C' '         CLEAR BUFFER TO SPACES
         MVC   MSGOUT+1(L'MSGOUT-1),MSGOUT
         BCT   R2,*+L'*+6
         MVC   MSGOUT(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6
         XC    MSGCNTL,MSGCNTL     SET IN PUTLINE LINE LENGTH
         LA    R2,L'MSGCNTL+1(R2)
         STH   R2,MSGCNTL
         LA    R5,MSGWORK          ADDRESS OF MSG BUFFER
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R2
         XC    ECBX,ECBX           CLEAR ECB TO ZEROS
         XC    PTPBX(PTPBLEN),PTPBX CLEAR PLIST TO ZEROS
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX            ADDRESS OF LIST
        PUTLINE PARM=PTPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                 X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               OUTPUT=((R5),TERM,SINGLE,DATA),                         X
               MF=(E,(1))
PUTLNEX  XR    R15,R15             SET RC=0
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- GETLNE - GETLINE ROUTINE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE :
*                    0 = NORMAL, THE INPUT TEXT INFORMATION ("GTLITI")
*                        IS SET AS BELOW (2-WORDS) :
*                        +0 = START ADDRESS OF TEXT
*                        +4 = LENGTH OF TEXT
*                    4 = NONE, "GTLITI" : +0 = GETLINE RC (4)
*                                       : +4 = ALL X'0'S
*                    8 = GET ... ERROR, "GTLITI" : +0 = GETLINE RC
*                                                : +4 = ALL X'0'S
         SPACE 1
GETLNE  @ENTER ,
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R2
         XC    GTLITI(2*L'GTLITI),GTLITI ZERO'S TEXT INFORMATION
         XC    ECBX,ECBX           CLEAR ECB TO ZEROS
         XC    GTPBX(GTPBLEN),GTPBX CLEAR GET PARMLIST TO ZEROS
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX            ADDRESS OF LIST
        GETLINE PARM=GTPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                 X
               TERMGET=(EDIT,WAIT),                                    X
               INPUT=(TERM,LOGICAL),                                   X
               MF=(E,(1))
         ST    R15,GTLITI          SET GETLINE RC
         CH    R15,=H'4'           HOW COMPLETE ?
         BNH   *+L'*+8             SUCCESSFULLY ...
         LA    R15,8               SET RC=8 (GET...ERROR)
         B     GETLNEX
         LA    R2,GTPBX            ADDRESSABILITY FOR THE GTPB
         USING GTPB,R2
         L     R1,GTPBIBUF         GET ADDRESS OF INPUT BUFFER
         DROP  R2
         LH    R4,0(R1)            BUFFER LENGTH
         SH    R4,=H'4'            PREFIX LENGTH
         LH    R2,2(R1)            OFFSET TO FIRST OPERAND
         SR    R4,R2               OPERANDS LENGTH
         BP    *+L'*+8
         LA    R15,4               SET RC=4 (NONE)
         B     GETLNEX
         LA    R3,4(R1,R2)         START ADDRESS OF OPERANDS
         STM   R3,R4,GTLITI        SET INPUT TEXT INFORMATION
         XR    R15,R15             SET RC=0
GETLNEX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- DDNDS - CONCATENATE DATA-SETS TO DD-NAME ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = NONE
*                                                  8 = ERROR
*              AT EXIT : IF ALL OK, CONCATENATION IS DONE
*                        IF ERROR, NONE DONE RESULTS
         SPACE 1
DDNDS   @ENTER ,
         LR    R1,R2
         MVI   STFLGS,OWNDYLO      PREPARE DSAB-FLAGS TO BE SET
         XC    WDSI,WDSI
         USING LIB#DS,R1
         OC    WDSI,LIB#DSI
         LA    R1,LIB#LDS(R1)
         CLC   LIB#DSSA,=AL4(LIB#DSF$) END OF LIST ?
         BNE   *-16                NO
         DROP  R1
         OC    WDSI,WDSI
         BNZ   *+L'*+8
         OI    STFLGS,TSODYLO
         B     *+L'*+14
         NC    WDSI,TDSI
         BZ    *+L'*+4
         OI    STFLGS,SYSDYLO
         USING LIBCITD,R5
         ICM   R15,B'1111',LIBSPA  SPECIAL PRE-ALL. ROUTINE ?
         BZ    DDNDSV              NO
         DROP  R5
         L     R14,=A(SPRTDD)
         CLI   0(R14),0
         BE    DDNDSD
         CLM   R15,B'1000',0(R14)
         BE    *+L'*+8
         LA    R14,L'SPRTDD(R14)
         B     *-20
         ICM   R15,B'1111',1(R14)
        @CALL  ,                   GET IT CONTROL
         CH    R15,=H'4'           HOW COMPLETED ?
         BL    DDNDSP              0 = OK, ALREADY ALLOCATED
         BE    DDNDSN              4 = GO TO ALLOCATE IT
         B     DDNDS8              8 = ERROR
DDNDSV   BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     DDNDSN              +0 = NO
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BNZ   DDNDS8              ERROR
        @CALL  PERMAL              OK
         B     DDNDS0
DDNDSN   XC    NTBDS,NTBDS
         XC    WBLK,WBLK
         USING LIB#DS,R2
DDNDSL   XC    WDSI,WDSI           CHECK IF NEEDED
         OC    WDSI,LIB#DSI
         BZ    *+L'*+10            IF ZERO, ALWAYS
         NC    WDSI,XDSI
         BZ    DDNDST              IF ZERO, NOT SPECIFIED
         BAS   R14,BDDSN           BUILD DS-NAME
         B     DDNDSF              0 = ERROR
         B     DDNDST              4 = NONE
        @CALL  CHKDS               8 = OK, CHECK DATA-SET
         CH    R15,=H'4'           COMPLETION ?
         BL    DDNDSE              0 = OK
         BH    DDNDSF              8 = ERROR
         ICM   R15,B'1111',LIB#DSSA 4 = NOT CATALOGED (NONE)
         BZ    DDNDSC              NOT SPECIAL ROUTINE
         L     R14,=A(SPRTDS)
         CLI   0(R14),0
         BE    DDNDSD
         CLM   R15,B'1000',0(R14)
         BE    *+L'*+8
         LA    R14,L'SPRTDS(R14)
         B     *-20
         ICM   R15,B'1111',1(R14)
        @CALL  ,                   GET IT CONTROL
         LTR   R15,R15             HOW COMPLETED ?
         BZ    DDNDSE              0 = OK, ALLOCATED
         B     DDNDSF              4 = ERROR
DDNDSD   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(17),=CL17'INVALID SP=  (DD='
         STCM  R15,B'1000',WKLINE+21
         MVC   WKLINE+27(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+26
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(25,R14),=CL25') : UNEXPECTED ERROR HERE'
         LA    R14,26(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     DDNDSF
DDNDSC  @CALL  ALPRC               TRY ALIAS(ES) PROCESS
         CH    R15,=H'4'           HOW COMPLETED ?
         BL    DDNDSE              0 = OK
         BH    DDNDSF              8 = ERROR
         XR    R15,R15             4 = NONE
         IC    R15,XTSTFM
         EX    R15,DDNXTM          IS IT MANDATORY ?
         BZ    DDNDST              NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(25,R14),=CL25' NOT FOUND, BUT MANDATORY'
         LA    R14,26(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDNDSF   OC    NTBDS,NTBDS
         BZ    DDNDSM
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         LH    R6,NTBDS
        @CALL  FREEDS              DE-ALLOCATE DATA-SETS IF NEEDED
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         B     DDNDSM
DDNXTM   TM    LIB#DSF,*-*         <<EXECUTED>>
DDNDSE   XR    R15,R15
         IC    R15,XTSTFX
         EX    R15,DDNXTM          IS IT EXCLUSIVE ?
         BO    DDNDSB              YES
DDNDST   LA    R2,LIB#LDS(R2)      ELSE CONTINUE
         CLC   LIB#DSSA,=AL4(LIB#DSF$) END OF LIST ?
         BNE   DDNDSL              NO, PROCESS NEXT
         DROP  R2
         OC    NTBDS,NTBDS         SOME DATA-SET PRESENT ?
         BZ    DDNDSW              NO, NONE
DDNDSB  @CALL  ALLDS               YES, ALLOCATE DATA-SETS
         LTR   R15,R15             COMPLETION ?
         BZ    DDNDSA              0 = OK
DDNDSM   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(28,R14),=CL28' DATA-SETS ALLOCATION FAILED'
         LA    R14,29(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     DDNDS8
DDNDSW   TM    SWSTTS,MSGLST
         BZ    DDNDS4
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(19,R14),=CL19' NO DATA-SETS FOUND'
         LA    R14,20(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDNDS4   LA    R15,4               SET RC=4
         B     DDNDSX
DDNDSA  @CALL  COPDS               CONCATENATE PERMANENTLY DATA-SETS
         LTR   R15,R15             COMPLETION ?
         BZ    DDNDSP              0 = OK, 4 = ERROR
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(31,R14),=CL31' DATA-SETS CONCATENATION FAILED'
         LA    R14,32(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDNDS8   LA    R15,8               SET RC=8
         B     DDNDSX
DDNDSP   TM    SWSTTS,MSGLST       OK, LIST SPECIFIED ?
         BZ    DDNDS0              NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(2,R14),=CL2' ('
         MVC   3(L'WLID,R14),WLID
         LA    R14,2+L'WLID(R14)
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(17,R14),=CL17') ALLOCATION DONE'
         LA    R14,18(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDNDS0   XR    R15,R15             SET RC=0
DDNDSX  @EXIT
         SPACE 1
SPRTDD   DC    0XL5'0'
         DC    CL1'C',AL4(PCTRL)
         DC    CL1'D',AL4(PDMMY)
         DC    CL1'E',AL4(PEDIT)
         DC    CL1'T',AL4(PTERM)
         DC    CL1'W',AL4(PWORK)
         DC    XL1'0'
SPRTDS   DC    0XL5'0'
         DC    CL1'P',AL4(SPROF)
         DC    XL1'0'
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- CHKDS - CHECK DATA-SET ROUTINE
*              AT ENTRY : DS-NAME TO BE CHECKED IN FIELD 'WDSN'
*                         ALL OTHER FIELDS : FROM 'LIBCIT' TABLE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = NOT CATALOGED
*                                                  8 = ERROR
*              AT EXIT : IF ALL OK, ACTIONS BELOW ARE DONE
*                                   'NTBDS' = 'NTBDS' + 1
*                                   AND 'TBDS' TABLE ENTRY FILLED
         SPACE 1
CHKDS   @ENTER ,
         OC    NTBDS,NTBDS         ANY PREVIOUS ?
         BZ    CHKDSS              NO
         LH    R0,NTBDS            YES, CHECK IF DUPLICATE
         L     R1,ATBDS
         USING TBDSECT,R1
CHKDSD   CLC   TBDSN,WDSN
         BE    CHKDS0              GO BACK AS OK
         LA    R1,TBDSLEN(R1)
         BCT   R0,CHKDSD
         DROP  R1
CHKDSS   MVC   CAMLST1(LCAML1),CAML1 LOCATE DATA-SET
         LA    R1,WDSN
         ST    R1,CAMLST1+4
         LA    R1,LOCAREA
         ST    R1,CAMLST1+12
         XC    LOCAREA(256),LOCAREA
         XC    LOCAREA+256(L'LOCAREA-256),LOCAREA+256
         XR    R4,R4               SWITCH IF DMS RESTORE INVOLVED
        LOCATE CAMLST1
         LTR   R15,R15             LOCATED ?
         BZ    CHKDSL              YES
         TM    SWSTTS,MSGLST       NO, NOT CATALOGED
         BZ    CHKDS4
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(14,R14),=CL14' NOT CATALOGED'
         LA    R14,15(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
CHKDS4   LA    R15,4               SET RC=4
         B     CHKDSX
CHKDSL   CLC   LOCAV01,DMSVN       IS IT DMS ARCHIVE VOLUME ?
         BNE   CHKDSE              NO
         LH    R1,NTBDS            YES
         CH    R1,=Y(MXTBN)        DSNAME'S TABLE OVERFLOW ?
         BL    CHKDSC              NO
CHKDSB   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(14,R14),=CL14' ... BREAKDOWN'
         LA    R14,15(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         BAS   R14,MSGTBN          DATA-SETS TABLE OVERFLOW
        @CALL  PUTLNE
CHKDS8   LA    R15,8               SET RC=8
         B     CHKDSX
CHKDSC  @CALL  DMSRF               NO, GO TELL DMS TO RESTORE IT
         LTR   R15,R15             COMPLETION ?
         BZ    CHKDSO              0 = OK, ALLOCATED, GO DO ALL CHECKS
         B     CHKDS8              4 = ERROR
CHKDSE   CLI   LOCAU01+2,X'20'     IS DATA-SET ON DA DEVICE ?
         BE    CHKDSO              YES, OK
         TM    SWSTTS,MSGLST       NO
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(16,R14),=CL16' NOT DA DEVICE ('
         MVC   17(L'LOCAV01,R14),LOCAV01 LIST VOLSER OF DEVICE
         MVI   17+L'LOCAV01(R14),C')'
         LA    R14,19+L'LOCAV01(R14)
CHKDSP   LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     CHKDS8
CHKDSO   MVC   CAMLST2(LCAML2),CAML2 OBTAIN FMT-1 DSCB
         LA    R1,WDSN
         ST    R1,CAMLST2+4
         LA    R2,OBTAREA
         ST    R2,CAMLST2+12
         LA    R1,OBTVOL
         ST    R1,CAMLST2+8
         XC    OBTAREA,OBTAREA
         MVC   OBTVOL(L'OBTVOL),LOCAV01 MOVE VOLSER FOR OBTAIN
        OBTAIN CAMLST2
         LTR   R15,R15             OBTAIN CORRECTLY COMPLETED ?
         BZ    CHKDSY              YES
         TM    SWSTTS,MSGLST       NO
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         CH    R15,=H'4'
         BE    CHKDSM              BRANCH IF REG 15=4
         CH    R15,=H'8'
         BE    CHKDSZ              BRANCH IF REG 15=8
         MVC   1(19,R14),=CL19' OBTAIN RC=12/16/20'
         LA    R14,20(R14)
         B     CHKDSP
CHKDSM   MVI   1(R14),255
         MVC   2(21,R14),1(R14)
         MVC   1(22,R14),=CL22' VOLUME NOT MOUNTED : '
         LA    R14,22(R14)
         B     CHKDSV
CHKDSZ   MVI   1(R14),255
         MVC   2(22,R14),1(R14)
         MVC   1(23,R14),=CL23' NOT FOUND ON VOLUME : '
         LA    R14,23(R14)
CHKDSV   MVC   1(L'OBTVOL,R14),OBTVOL  MOVE VOLSER TO MSG
         LA    R14,L'OBTVOL+1(R14)
         B     CHKDSP
         USING DS1FMTID,R2
CHKTORG  TM    DS1DSORG,*-*        <<EXECUTED>>
CHKDSY   XR    R1,R1
         IC    R1,WORG
         EX    R1,CHKTORG          IS IT GOOD DSORG ?
         BO    CHKDSY1             YES
         TM    SWSTTS,MSGLST       NO
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(15,R14),=CL15' MUST BE DSORG='
         LA    R1,16(R14)
         LA    R14,18(R14)
         TM    WORG,DS1DSGPO
         BZ    *+L'*+10
         MVC   0(2,R1),=CL2'PO'
         B     CHKDSP
         TM    WORG,DS1DSGPS
         BZ    *+L'*+10
         MVC   0(2,R1),=CL2'PS'
         B     CHKDSP
         TM    WORG,DS1DSGDA
         BZ    *+L'*+10
         MVC   0(2,R1),=CL2'DA'
         B     CHKDSP
         MVC   0(2,R1),=CL2'??'
         B     CHKDSP
CHKTRFM  CLI   WRFM,*-*            <<EXECUTED>>
CHKDSY1  TM    WORG,DS1DSGDA
         BO    CHKDSY3
         XR    R1,R1
         IC    R1,DS1RECFM
         LA    R0,DS1RECFU
         NR    R1,R0
         EX    R1,CHKTRFM          IS IT GOOD RECFM ?
         BE    CHKDSY2             YES
         TM    SWSTTS,MSGLST       NO
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(15,R14),=CL15' MUST BE RECFM='
         LA    R1,16(R14)
         LA    R14,17(R14)
         CLI   WRFM,DS1RECFV
         BNE   *+L'*+8
         MVI   0(R1),C'V'
         B     CHKDSP
         CLI   WRFM,DS1RECFF
         BNE   *+L'*+8
         MVI   0(R1),C'F'
         B     CHKDSP
         CLI   WRFM,DS1RECFU
         BNE   *+L'*+8
         MVI   0(R1),C'U'
         B     CHKDSP
         MVI   0(R1),C'?'
         B     CHKDSP
CHKDSY2  TM    WRFM,DS1RECFU       FIXED OR VARIABLE RECORDS ?
         BNM   CHKDSY3             NO
         CLC   DS1LRECL,WLRL       YES, IS IT GOOD LRECL ?
         BE    CHKDSY3             YES
         TM    SWSTTS,MSGLST       NO
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(15,R14),=CL15' MUST BE LRECL='
         LA    R14,16(R14)
         LH    R1,WLRL
         CVD   R1,WORKD
         MVC   0(6,R14),=XL6'402020202120'
         ED    0(6,R14),WORKD+5
         LR    R1,R14
         LA    R14,6(R14)
         CLI   0(R1),C' '
         BNE   CHKDSP
         MVC   0(5,R1),1(R1)
         MVI   5(R1),C' '
         BCTR  R14,0
         B     *-20
CHKDSY3  OC    WBLK,WBLK           FIRST TIME BLKSIZE TESTED ?
         BNZ   *+L'*+10            NO
         MVC   WBLK,DS1BLKL        MOVE BLKSIZE
         B     CHKDSY4
         CLC   DS1BLKL,WBLK        IS IT GOOD BLKSIZE ?
         BNH   CHKDSY4             YES
         MVC   WBLK,DS1BLKL        NO, RETAIN THIS BLKSIZE
         L     R1,ATBDS
         USING TBDSECT,R1
         OI    TBIND2,TBSTBLK      SAY SET BLKSIZE
         DROP  R1
         TM    SWSTTS,MSGLST
         BZ    CHKDSY4
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' BLKSIZE IS LARGER'
         LA    R14,19(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
CHKDSY4  CLC   WBLK,WLRL           IS BLKSIZE LESS THAN LRECL ?
         BL    CHKDSY5             YES
         CLI   WRFM,DS1RECFF       NO, FIXED RECORDS ?
         BNE   CHKDSY6             NO
         XR    R0,R0               YES, CHECK MULTIPLE
         LH    R1,WBLK
         LH    R14,WLRL
         DR    R0,R14
         LTR   R0,R0
         BZ    CHKDSY6
CHKDSY5  TM    SWSTTS,MSGLST
         BZ    CHKDS8
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(16,R14),=CL16' INVALID BLKSIZE'
         LA    R14,17(R14)
         B     CHKDSP
CHKDSY6  LTR   R4,R4
         BNZ   CHKDS0
         LH    R1,NTBDS
         CH    R1,=Y(MXTBN)        DSNAME'S TABLE OVERFLOW ?
         BNL   CHKDSB              YES
         LA    R14,1(R1)
         STH   R14,NTBDS
         LTR   R1,R1
         BNP   *+L'*+4
         MH    R1,=Y(TBDSLEN)
         AL    R1,ATBDS
         USING TBDSECT,R1
         CH    R14,=H'1'
         BNE   *+L'*+10
         MVC   TBDDN,WDDN
         B     *+L'*+6
         MVC   TBDDN,=CL8' '
         MVC   TBLDS,WLDS
         MVC   TBDSN,WDSN
         XC    TBIND,TBIND
         DROP  R1,R2
CHKDS0   XR    R15,R15             SET RC=0
CHKDSX  @EXIT
         SPACE 1
CAML2   CAMLST SEARCH,*-*,*-*,*-*
LCAML2   EQU   *-CAML2
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- DMSRF - DMS RESTORE FORCE ROUTINE
*              (IT IS DONE TRYING TO ALLOCATE IT DIRECTLY)
*              AT ENTRY : DS-NAME IN FIELD 'WDSN' AND
*                         LENGTH OF DS-NAME IN FIELD 'WLDS'
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = ERROR
         SPACE 1
DMSRF   @ENTER ,
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         LA    R4,XDA08
         USING DAPB08,R4
         ST    R4,DAPLDAPB
         XC    0(LDA08,R4),0(R4)
         LA    R1,WLDS
         ST    R1,DA08PDSN
         OC    NTBDS,NTBDS
         BNZ   *+L'*+10
         MVC   DA08DDN,WDDN
         B     *+L'*+6
         MVC   DA08DDN,=CL8' '
         MVC   DA08CD,=XL2'0008'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVI   DA08CTL,DA08PERM
         MVC   DA08ALN,=CL8' '
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         BAS   R14,XDAIR           EXECUTE ALLOCATION
         B     DMSRFN              +0 = OK
         TM    SWSTTS,MSGLST       +4 = ERROR
         BZ    DMSRFF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(19,R14),=CL19' DMS RESTORE FAILED'
         LA    R14,20(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DMSRFF   LH    R6,NTBDS
         LTR   R6,R6
         BNP   DMSRFY
        @CALL  FREEDS              DE-ALLOCATE DATA-SETS IF ANY
DMSRFY   LA    R2,4                SET RC=4
         B     DMSRFX
DMSRFN   MVC   CAMLST1(LCAML1),CAML1 LOCATE AGAIN DATA-SET TO GET
         LA    R1,WDSN               THE VOLUME FOR CHECKS (OBTAIN)
         ST    R1,CAMLST1+4
         LA    R1,LOCAREA
         ST    R1,CAMLST1+12
         XC    LOCAREA(256),LOCAREA
         XC    LOCAREA+256(L'LOCAREA-256),LOCAREA+256
        LOCATE CAMLST1
         LTR   R15,R15             LOCATED ?
         BZ    DMSRFO              YES
         TM    SWSTTS,MSGLST       NO, ERROR
         BZ    DMSRFF
         ST    R15,WORKD
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(11,R14),=CL11' LOCATE RC='
         UNPK  12(9,R14),WORKD(5)
         NC    12(8,R14),=XL8'0F0F0F0F0F0F0F0F'
         TR    12(8,R14),HXTB
         MVI   20(R14),C' '
         LA    R14,21(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     DMSRFF
DMSRFO   LH    R1,NTBDS
         LA    R14,1(R1)
         STH   R14,NTBDS
         LTR   R1,R1
         BNP   *+L'*+4
         MH    R1,=Y(TBDSLEN)
         AL    R1,ATBDS
         USING TBDSECT,R1
         MVC   TBDDN,DA08DDN
         MVC   TBLDS,WLDS
         MVC   TBDSN,WDSN
         XC    TBIND,TBIND
         OI    TBIND1,TBALLDS      SAY ALLOCATED
         DROP  R1,R3,R4
        @PASS  R4                  BACK REGISTER 4
         XR    R2,R2               SET RC=0
DMSRFX  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         LR    R15,R2              SET RETURN CODE
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- ALPRC - ALIAS(ES) PROCESS ROUTINE
*              R2  : CURRENT DATA-SET POINTER IN 'LIBCIT' TABLE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = NONE
*                                                  8 = ERROR
*              AT EXIT : IF ALL OK, 'CHKDS' ACTIONS ARE DONE
         SPACE 1
ALPRC   @ENTER ,
         USING LIB#DS,R2
         CLC   LIB#DSN(3),=CL3'<U>' USER-ID DATA-SET ?
         BE    ALPRCU              YES
         CLC   LIB#DSN(3),=CL3'<G>' NO, GROUP DATA-SET ?
         BE    ALPRCG              YES
ALPRC4   LA    R15,4               NO, SET RC=4
         B     ALPRCX
         USING ALDSECT,R3
ALPRCU   L     R3,ALPTBUA          USER-ID ALIAS(ES) TABLE
         BASR  R6,0                SET NEXT ENTRY LOOP ADDRESS
         CLI   ALNME,0             END OF TABLE ?
         BE    ALPRC4              YES, NONE
         CLC   ALNME,USID          NO, THIS USER ?
         BNE   ALPRCC              NO
         BAS   R14,ALPRCA          YES, NOW CHECK DD-NAME(S)
         B     ALPRCC              +0 = NOT FOUND
         CLI   ALNUN,0             +4 = FOUND, ANY UNLESS NAME(S) ?
         BE    ALPRCD              NO, PROCESS
         XR    R0,R0               CHECK UNLESS NAME(S)
         IC    R0,ALNUN            NUMBER OF UNLESS NAME(S)
         XR    R14,R14
         IC    R14,ALNDD           NUMBER OF DD-NAME(S)
         MH    R14,=Y(L'ALDDN)
         LA    R1,ALDDN(R14)
ALPRCF   CLC   GRNM,0(R1)
         BE    ALPRCC              FOUND, NO PROCESS
         BCT   R0,*+L'*+4
         B     ALPRCD              NOT FOUND, PROCESS
         LA    R1,L'ALUNN(R1)
         B     ALPRCF
ALPRCG   L     R3,ALPTBGA          GROUP ALIAS(ES) TABLE
         BASR  R6,0                SET NEXT ENTRY LOOP ADDRESS
         CLI   ALNME,0             END OF TABLE ?
         BE    ALPRC4              YES, NONE
         CLC   ALNME,GRNM          NO, THIS GROUP ?
         BNE   ALPRCC              NO
         BAS   R14,ALPRCA          YES, NOW CHECK DD-NAME(S)
         B     ALPRCC              +0 = NOT FOUND
         CLI   ALNUN,0             +4 = FOUND, ANY UNLESS NAME(S) ?
         BE    ALPRCD              NO, PROCESS
         XR    R0,R0               CHECK UNLESS NAME(S)
         IC    R0,ALNUN            NUMBER OF UNLESS NAME(S)
         XR    R14,R14
         IC    R14,ALNDD           NUMBER OF DD-NAME(S)
         MH    R14,=Y(L'ALDDN)
         LA    R1,ALDDN(R14)
ALPRCH   CLC   USID,0(R1)
         BE    ALPRCC              FOUND, NO PROCESS
         BCT   R0,*+L'*+4
         B     ALPRCD              NOT FOUND, PROCESS
         LA    R1,L'ALUNN(R1)
         B     ALPRCH
ALPRCA   XR    R0,R0               CHECK DD-NAME(S)
         IC    R0,ALNDD            NUMBER OF DD-NAME(S)
         LA    R1,ALDDN
ALPRCB   CLC   WDDN,0(R1)
         BE    4(R14)              FOUND, RETURN = +4
         BCT   R0,*+L'*+2
         BR    R14                 NOT FOUND, RETURN = +0
         LA    R1,L'ALDDN(R1)
         B     ALPRCB
ALPRCC   XR    R14,R14             STEP TO NEXT TABLE ENTRY
         LR    R15,R14
         IC    R14,ALNDD           NUMBER OF DD-NAME(S)
         MH    R14,=Y(L'ALDDN)
         IC    R15,ALNUN           NUMBER OF UNLESS NAME(S)
         LTR   R15,R15
         BNP   *+L'*+6
         MH    R15,=Y(L'ALUNN)
         ALR   R14,R15
         LA    R3,ALDDN(R14)
         BR    R6
ALPRCD   MVI   WDSN,C' '           BUILD THE ALTERNATE DS-NAME
         MVC   WDSN+1(L'WDSN-1),WDSN
         MVC   WDSN(L'ALANM),ALANM
         LA    R15,WDSN
         LR    R0,R15
         LA    R1,L'WDSN
         CLI   0(R15),C' '
         BE    *+L'*+8
         LA    R15,1(R15)
         BCT   R1,*-12
         LA    R14,LIB#DSN+3
ALPRCE   MVC   0(1,R15),0(R14)
         LA    R14,1(R14)
         LA    R15,1(R15)
         CLI   0(R14),C' '
         BE    *+L'*+4
         BCT   R1,ALPRCE
         SLR   R15,R0
         STH   R15,WLDS
        @CALL  CHKDS               CHECK DATA-SET
         CH    R15,=H'4'           HOW COMPLETE ?
         BL    ALPRC0              0 = OK
         BE    ALPRCC              4 = NOT CATALOGED, LOOK FURTHER
ALPRC8   LA    R15,8               8 = ERROR, SET RC=8
         DROP  R2,R3
ALPRC0   XR    R15,R15             SET RC=0
ALPRCX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- ALLDS - ALLOCATION DATA-SETS ROUTINE
*              AT ENTRY : ALL INFO'S IN 'TBDS' TABLE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = ERROR
*              AT EXIT : IF ALL OK, ALL DATA-SETS ARE ALLOCATED AND
*                                   ALL DD-NAMES STORED IN 'TBDS' TABLE
*                        IF ERROR, ALL DATA-SETS ARE DE-ALLOCATED
         SPACE 1
ALLDS   @ENTER ,
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         L     R5,ATBDS
         USING TBDSECT,R5
         LH    R6,NTBDS
         LA    R4,XDA08            ALLOCATE DATA-SETS
         USING DAPB08,R4
         ST    R4,DAPLDAPB
ALLDSL   TM    TBIND1,TBALLDS      ALREADY ALLOCATED ?
         BO    ALLDSB
         XC    0(LDA08,R4),0(R4)
         LA    R1,TBLDS
         ST    R1,DA08PDSN
         MVC   DA08DDN,TBDDN
         MVC   DA08CD,=XL2'0008'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVI   DA08CTL,DA08PERM
         MVC   DA08ALN,=CL8' '
         BAS   R14,XDAIR           EXECUTE ALLOCATION
         B     ALLDSN              +0 = OK
         TM    SWSTTS,MSGLST       +4 = ERROR
         BZ    ALLDSF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'TBDSN),TBDSN
         LA    R14,WKLINE+L'TBDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' ALLOCATION FAILED'
         LA    R14,19(R14)
ALLDSM   LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
ALLDSF   LR    R0,R6
         LH    R6,NTBDS
         SR    R6,R0
         BNP   ALLDSY
        @CALL  FREEDS              DE-ALLOCATE DATA-SETS
ALLDSY   LA    R2,4                SET RC=4
         B     ALLDSX
ALLDSN   MVC   TBDDN,DA08DDN
         OI    TBIND1,TBALLDS      SAY ALLOCATED
ALLDSB   TM    TBIND2,TBSTBLK      IS BLKSIZE TO BE SET ?
         BZ    ALLDST              NO
         XR    R0,R0               YES
         L     R1,ATIOT            START TIOT POINTER
         USING TIODSECT,R1
ALLDSS   CLC   TIOELNGH(4),=XL4'0' END OF TIOT ?
         BE    ALLDSE              YES, NOT FOUND
         CLC   TIOEDDNM(L'TIOEDDNM),TBDDN DDNAME MATCH ?
         BE    ALLDSI              YES, FOUND
         IC    R0,TIOELNGH         LENGTH OF CURRENT DD-ENTRY
         ALR   R1,R0               NEXT DD-ENTRY IN TIOT
         B     ALLDSS
ALLDSE   TM    SWSTTS,MSGLST
         BZ    ALLDSF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'TBDDN),TBDDN
         LA    R14,WKLINE+L'TBDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(19,R14),=CL19' CANNOT SET BLKSIZE'
         LA    R14,20(R14)
         B     ALLDSM
ALLDSI   XR    R2,R2
         ICM   R2,B'0111',TIOEJFCB
         DROP  R1
        MODESET MF=(E,ESM)         ENTER SUPERVISOR MODE
         USING ZB502,R2
         MVC   JFCBLKSI,WBLK       SET BLKSIZE
         DROP  R2
        MODESET MF=(E,RPM)         RE-ENTER PROBLEM MODE
ALLDST   BCT   R6,*+L'*+4
         B     ALLDSZ
         LA    R5,TBDSLEN(R5)
         B     ALLDSL
         DROP  R3,R4,R5
ALLDSZ   XR    R2,R2               SET RC=0
ALLDSX  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         LR    R15,R2              SET RETURN CODE
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- COPDS - CONCATENATE PERMANENTLY DATA-SETS ROUTINE
*              AT ENTRY : ALL INFO'S IN 'TBDS' TABLE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = ERROR
*              AT EXIT : IF ALL OK, THE CONCATENATION IS DONE
*                        IF ERROR, ALL DATA-SETS ARE DE-ALLOCATED
         SPACE 1
COPDS   @ENTER ,
         LH    R1,NTBDS
         CH    R1,=H'1'            ONLY ONE DATA-SET ?
         BE    COPDSP              YES
         LR    R6,R1
         L     R5,ATBDS
         LA    R2,DA0CDDN
         USING TBDSECT,R5
COPDSL   MVC   0(L'TBDDN,R2),TBDDN
         BCT   R1,*+L'*+4
         B     COPDSC
         LA    R2,L'DA0CDDN(R2)
         LA    R5,TBDSLEN(R5)
         B     COPDSL
         DROP  R5
COPDSC   L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA0C            CONCATENATE DATA-SETS
         USING DAPB0C,R4
         ST    R4,DAPLDAPB
         XC    0(LDA0C,R4),0(R4)
         MVC   DA0CCD,=XL2'000C'
         STH   R6,DA0CNUMB
         DROP  R3,R4
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         BAS   R14,XDAIR           EXECUTE CONCATENATION
         B     COPDSN              +0 = OK
         TM    SWSTTS,MSGLST       +4 = ERROR
         BZ    COPDSF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(16,R14),=CL16' CONCATENATION ERROR'
         LA    R14,21(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
COPDSF  @CALL  FREEDS              DE-ALLOCATE DATA-SETS
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         LA    R15,4               SET RC=4
         B     COPDSX
COPDSN  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
COPDSP  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         LTR   R15,R15             HOW COMPLETION ?
         BNZ   COPDSF              ERROR
         XR    R15,R15             SET RC=0
COPDSX  @EXIT  ,                   OK
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PERMAL - PERMANENT ALLOCATION ROUTINE
*              AT ENTRY : DD-NAME TO BE CHECKED IN FIELD 'WDDN'
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE = 0 - OK
*                                                  4 - ERROR
         SPACE 1
PERMAL  @ENTER ,
         L     R2,ATCB             GET TCB ADDRESS
         USING TCB,R2
         L     R2,TCBJSCB          JOB STEP CONTROL BLOCK ADDRESS
         DROP  R2
         USING IEZJSCB,R2
         L     R2,JSCDSABQ         GET ADDRESS OF QDB FOR DSAB CHAIN
         DROP  R2
         USING QDB,R2
         CLC   QDBNELMS,=XL4'0'    NO DATA-SETS ?
         BE    PERMALR             YES, ERROR
         L     R2,QDBFELMP         GET ADDRESS OF FIRST DSAB
         DROP  R2
         USING DSAB,R2
PERMALI  TM    DSABFLG1,DSABDALC   DATA-SET DYNAMICALLY ALLOCATED ?
         BO    PERMALE             YES
PERMALS  ICM   R2,B'1111',DSABFCHN NO, GET NEXT DSAB ENTRY
         BZ    PERMALH             END OF CHAIN
         B     PERMALI             OTHERWISE KEEP LOOKING
PERMALE  L     R3,DSABTIOT         POINT TO TIOT
         USING TIOELNGH,R3
         CLC   TIOEDDNM,WDDN       IS THIS DDNAME ?
         BNE   PERMALS             NO
         DROP  R3
         TM    SWSTTS,TRDSAB       DSAB TRACE ?
         BZ    PERMALZ             NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' --- DSAB TRACE = '
         LA    R14,19(R14)
         IC    R15,DSABRS01
         STC   R15,1(R14)
         SRL   R15,4
         STC   R15,0(R14)
         NC    0(2,R14),=XL4'0F0F0F0F'
         TR    0(2,R14),HXTB
         LA    R14,2(R14)
         MVI   0(R14),C'/'
         ICM   R15,B'0011',DSABOPCT
         STC   R15,4(R14)
         SRL   R15,4
         STC   R15,3(R14)
         SRL   R15,4
         STC   R15,2(R14)
         SRL   R15,4
         STC   R15,1(R14)
         NC    1(4,R14),=XL4'0F0F0F0F'
         TR    1(4,R14),HXTB
         LA    R14,5(R14)
         MVI   0(R14),C' '
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
PERMALZ STAX   DEFER=YES           DEFER ALL ATTENTIONS
        MODESET MF=(E,ESM)         ENTER SUPERVISOR MODE
         OC    DSABRS01,STFLGS     INDICATE IT AS MY ALLOCATION
PERMALB  NI    DSABFLG1,255-DSABDALC SET NOT DYNAMICALLY ALLOCATED
         ICM   R2,B'1111',DSABFCHN NO, GET NEXT DSAB ENTRY
         BZ    PERMALG             END OF CHAIN
         TM    DSABFLG1,DSABDALC   DATA-SET DYNAMICALLY ALLOCATED ?
         BZ    PERMALG             NO
         L     R3,DSABTIOT         YES, POINT TO TIOT
         USING TIOELNGH,R3
         CLI   TIOEDDNM,C' '       PART OF A CONCATENATION GROUP ?
         BE    PERMALB             YES
         DROP  R2,R3
PERMALG MODESET MF=(E,RPM)         RE-ENTER PROBLEM MODE
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         XR    R15,R15             SET RC=0
         B     PERMALX
PERMALR  TM    SWSTTS,MSGLST
         BZ    PERMALF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(28,R14),=CL28' NO DATA-SET(S) STATUS FOUND'
         LA    R14,29(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     PERMALF
PERMALH  TM    SWSTTS,MSGLST
         BZ    PERMALF
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(37,R14),=CL37' NO DATA-SET(S) DYNAMICALLY ALLOCATED'
         LA    R14,38(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
PERMALF  LA    R15,4               SET RC=4
PERMALX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- DIAGDD - DIAGNOSE DD-ALLOCATION ROUTINE
*              R1  : DD-ENTRY IN TIOT POINTER
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = ERROR
         SPACE 1
DIAGDD  @ENTER ,
         LR    R6,R1               R1 -> R6 = DD-ENTRY
         TM    SWSTTS,MSGLST
         BZ    DIAGDDS
         LR    R3,R6               R3 = DD-ENTRY
         USING TIODSECT,R3
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(2,R14),=CL2' ('
         MVC   3(L'WLID,R14),WLID
         LA    R14,2+L'WLID(R14)
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(19,R14),=CL19') ALREADY ALLOCATED'
         LA    R14,20(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         LA    R5,1(R14)
DIAGDDW  MVC   WKLINE(L'MSID),MSID
         MVC   0(4,R5),=CL4' DD '
         XR    R4,R4
         ICM   R4,B'0111',TIOEJFCB R4 -> JFCB
         USING ZB502,R4
         MVC   4(L'JFCBDSNM,R5),JFCBDSNM LIST DS-NAME
         LA    R14,L'JFCBDSNM+4(R5)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         XR    R0,R0               SET NEXT DD-ENTRY IN THE TIOT
         IC    R0,TIOELNGH         R0 = LENGTH OF CURRENT DD-ENTRY
         ALR   R3,R0               R3 -> NEXT DD-ENTRY IN TIOT
         CLC   TIOELNGH(4),=XL4'0' END OF TIOT ?
         BE    DIAGDDS             YES
         CLC   TIOEDDNM(L'TIOEDDNM),=CL8' ' BLANK DD-NAME ?
         BNE   DIAGDDS             NO, NO MORE
         MVI   WKLINE,C' '         YES, CONCATENATION
         MVC   WKLINE+1(L'WDDN+11),WKLINE
         B     DIAGDDW
         USING LIB#DS,R2
DIAGDDS  BAS   R14,BDDSN           BUILD DS-NAME
         B     DIAGDD4             0 = ERROR
         B     DIAGDDN             4 = NONE (SKIP)
         CLI   WDSN,C'&&'          8 = OK, IS IT A TEMPORARY ?
         BE    DIAGDDN             YES
         LR    R3,R6               NO, R3 = DD-ENTRY
DIAGDDL  XR    R4,R4
         ICM   R4,B'0111',TIOEJFCB R4 -> JFCB
         CLC   WDSN,JFCBDSNM       THIS DS-NAME ?
         BE    DIAGDDN             YES
         XR    R0,R0               NO, GET NEXT DD-ENTRY IN THE TIOT
         IC    R0,TIOELNGH         R0 = LENGTH OF CURRENT DD-ENTRY
         ALR   R3,R0               R3 -> NEXT DD-ENTRY IN TIOT
         CLC   TIOELNGH(4),=XL4'0' END OF TIOT ?
         BE    DIAGDDC             YES, NOT FOUND
         CLC   TIOEDDNM(L'TIOEDDNM),=CL8' ' BLANK DD-NAME ?
         BE    DIAGDDL             YES, LOOP TO CHECK WITH IT
         DROP  R3,R4
DIAGDDC  XC    WDSI,WDSI           CHECK IF DATA-SET IS NEEDED
         OC    WDSI,LIB#DSI
         BZ    DIAGDDT             ZERO
         NC    WDSI(1),XDSI
         BZ    DIAGDDN             ZERO, NOT SPECIFIED
         MVC   CAMLST1(LCAML1),CAML1 LOCATE DATA-SET
         LA    R1,WDSN
         ST    R1,CAMLST1+4
         LA    R1,LOCAREA
         ST    R1,CAMLST1+12
         XC    LOCAREA(256),LOCAREA
         XC    LOCAREA+256(L'LOCAREA-256),LOCAREA+256
        LOCATE CAMLST1
         LTR   R15,R15             LOCATED ?
         BZ    DIAGDDP             YES
DIAGDDT  XR    R15,R15
         IC    R15,XTSTFM
         EX    R15,DIAGXTM         IS IT MANDATORY ?
         BZ    DIAGDDN             NO
DIAGDDP  OI    SWPRCS,ABTEXR       YES, SET ABORT
DIAGDD4  LA    R15,4               SET RC=4
         B     DIAGDDX
DIAGXTM  TM    LIB#DSF,*-*         <<EXECUTED>>
DIAGDDN  LA    R2,LIB#LDS(R2)      NEXT DATA-SET
         CLC   LIB#DSSA,=AL4(LIB#DSF$) END OF LIST ?
         BNE   DIAGDDS             NO, GO CHECK NEXT DS-NAME
         DROP  R2
         XR    R15,R15             SET RC=0
DIAGDDX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- DDOPEN - CHECK IF ANY DD OPENED ROUTINE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = NONE
*                                                  8 = STOP
         SPACE 1
DDOPEN  @ENTER ,
         L     R2,ATCB             GET TCB ADDRESS
         USING TCB,R2
         L     R2,TCBJSCB          JOB STEP CONTROL BLOCK ADDRESS
         DROP  R2
         USING IEZJSCB,R2
         L     R2,JSCDSABQ         GET ADDRESS OF QDB FOR DSAB CHAIN
         DROP  R2
         USING QDB,R2
         CLC   QDBNELMS,=XL4'0'    NO DATA-SETS ?
         BE    DDOPEN4             YES, LET'S GO (NOTHING TO DO)
         L     R2,QDBFELMP         GET ADDRESS OF FIRST DSAB
         DROP  R2
         USING DSAB,R2
         XR    R4,R4               RESET COUNT
DDOPENI  TM    DSABFLG1,DSABDALC   DATA-SET DYNAMICALLY ALLOCATED ?
         BO    DDOPENT             YES
         TM    DSABRS01,OWNDYLO    NO, IS IT MY ALLOCATION ?
         BZ    DDOPENT             NO, LET'S GO
         L     R3,DSABTIOT         POINT TO TIOT
         USING TIOELNGH,R3
         TM    SWSTTS,TRDSAB       DSAB TRACE ?
         BZ    DDOPENP             NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'TIOEDDNM),TIOEDDNM
         LA    R14,WKLINE+L'TIOEDDNM+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' --- DSAB TRACE = '
         LA    R14,19(R14)
         IC    R15,DSABRS01
         STC   R15,1(R14)
         SRL   R15,4
         STC   R15,0(R14)
         NC    0(2,R14),=XL4'0F0F0F0F'
         TR    0(2,R14),HXTB
         LA    R14,2(R14)
         MVI   0(R14),C'/'
         ICM   R15,B'0011',DSABOPCT
         STC   R15,4(R14)
         SRL   R15,4
         STC   R15,3(R14)
         SRL   R15,4
         STC   R15,2(R14)
         SRL   R15,4
         STC   R15,1(R14)
         NC    1(4,R14),=XL4'0F0F0F0F'
         TR    1(4,R14),HXTB
         LA    R14,5(R14)
         MVI   0(R14),C' '
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDOPENP  TM    DSABRS01,TSODYLO    IS IT A TSO BASIC ?
         BO    DDOPENT             YES, LET IT STAY
         OC    TDSI,TDSI           NO, SYSTEM PRESERVE ?
         BNZ   *+L'*+8             NO
         TM    DSABRS01,SYSDYLO    YES, IS IT SYSTEM ?
         BO    DDOPENT             YES, LET IT STAY
         CLC   DSABOPCT,=XL2'0'    NO, IS IT STILL OPENED ?
         BNE   DDOPENA             YES, REJECT ALL
         LA    R4,1(R4)            NO, OK
DDOPENT  ICM   R2,B'1111',DSABFCHN GET NEXT DSAB ENTRY
         BZ    DDOPENH             END OF CHAIN
         B     DDOPENI             OTHERWISE KEEP LOOKING
DDOPENA  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'TIOEDDNM),TIOEDDNM
         LA    R14,WKLINE+L'TIOEDDNM+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(31,R14),=CL31' IS STILL OPENED - ALL REJECTED'
         LA    R14,32(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         LA    R15,8               SET RC=8
         B     DDOPENX
         DROP  R2,R3
DDOPENH  LTR   R4,R4               SOMETHING ?
         BNZ   DDOPEN0             YES
DDOPEN4  LA    R15,4               SET RC=4
         B     DDOPENX
DDOPEN0  XR    R15,R15             SET RC=0
DDOPENX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- DDFREE - FREE DATA-SET(S) AND DD ROUTINE
*              R2  : DSAB POINTER
*              R3  : TIOT ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK
*                                                  4 = ERROR
*                                                  8 = STOP
         SPACE 1
DDFREE  @ENTER ,
         USING DSAB,R2
         CLC   DSABOPCT,=XL2'0'    NO, CHECK AGAIN, STILL OPENED ?
         BE    DDFREEA             NO, OK
         TM    SWSTTS,TRDSAB       YES, DSAB TRACE ?
         BZ    DDFREEP             NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' --- DSAB TRACE = '
         LA    R14,19(R14)
         IC    R15,DSABRS01
         STC   R15,1(R14)
         SRL   R15,4
         STC   R15,0(R14)
         NC    0(2,R14),=XL4'0F0F0F0F'
         TR    0(2,R14),HXTB
         LA    R14,2(R14)
         MVI   0(R14),C'/'
         ICM   R15,B'0011',DSABOPCT
         STC   R15,4(R14)
         SRL   R15,4
         STC   R15,3(R14)
         SRL   R15,4
         STC   R15,2(R14)
         SRL   R15,4
         STC   R15,1(R14)
         NC    1(4,R14),=XL4'0F0F0F0F'
         TR    1(4,R14),HXTB
         LA    R14,5(R14)
         MVI   0(R14),C' '
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDFREEP  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(32,R14),=CL32' IS STILL OPENED - REST REJECTED'
         LA    R14,33(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         LA    R15,8               SET RC=8
         B     DDFREEX
DDFREEA STAX   DEFER=YES           DEFER ALL ATTENTIONS
        MODESET MF=(E,ESM)         ENTER SUPERVISOR MODE
         MVI   DSABRS01,0          RESET MY ALLOCATION FLAGS
        MODESET MF=(E,RPM)         RE-ENTER PROBLEM MODE
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         DROP  R2
         USING TIOELNGH,R3
         LR    R6,R3               RETAIN TIOT START DD-ENTRY
         LA    R4,1
         L     R5,ATBDS            SET DD INFO'S
         USING TBDSECT,R5
DDFREEN  MVC   TBDDN,TIOEDDNM      DD-NAME
         XR    R1,R1
         ICM   R1,B'0111',TIOEJFCB
         USING ZB502,R1
         MVC   TBDSN,JFCBDSNM      DS-NAME
         DROP  R1
         LA    R0,L'TBDSN
         XR    R1,R1
         LA    R2,TBDSN
DDFREEL  CLI   0(R2),C' '
         BE    *+L'*+12
         LA    R1,1(,R1)
         LA    R2,1(,R2)
         BCT   R0,DDFREEL
         STH   R2,TBLDS            DS-NAME LENGTH
         XC    TBIND,TBIND
         OI    TBIND1,TBALLDS      SAY ALLOCATED
         XR    R0,R0
         IC    R0,TIOELNGH
         ALR   R3,R0               NEXT DD-ENTRY
         CLC   TIOELNGH(4),=XL4'0' END OF TIOT ?
         BE    DDFREEE             YES
         CLC   TIOEDDNM(L'TIOEDDNM),=CL8' ' BLANK DD-NAME ?
         BNE   DDFREEE             NO
         LA    R4,1(,R4)           YES, CONCATENATED
         LA    R5,TBDSLEN(R5)
         B     DDFREEN
         DROP  R3
DDFREEE  STH   R4,NTBDS
         L     R5,ATBDS
         CH    R4,=H'1'            ONLY ONE DATA-SET ?
         BE    DDFREEF             YES
         LA    R3,XDAPL            NO, MORE, DECONCATENATION REQUESTED
         USING DAPL,R3
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA10            DECONCATENATE DATA-SETS
         USING DAPB10,R4
         ST    R4,DAPLDAPB
         XC    0(LDA10,R4),0(R4)
         MVC   DA10CD,=XL2'0010'
         MVC   DA10DDN,TBDDN
         DROP  R3,R4
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         BAS   R14,XDAIR           EXECUTE DECONCATENATION
         B     DDFREES             +0 = OK
        STAX   DEFER=NO            +4 = ERROR, RESTORE ALL ATTENTIONS
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(23,R14),=CL23' DECONCATENATION FAILED'
         LA    R14,24(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         LA    R15,4               SET RC=4
         B     DDFREEX
DDFREES STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         LH    R2,NTBDS
         USING TIOELNGH,R6
DDFREEC  CLC   TBDDN,TIOEDDNM
         BE    *+L'*+6
         MVC   TBDDN,TIOEDDNM      FILL DD-NAME'S
         BCT   R2,*+L'*+4
         B     DDFREEF
         XR    R0,R0
         IC    R0,TIOELNGH
         ALR   R6,R0               NEXT DD-ENTRY
         LA    R5,TBDSLEN(R5)
         B     DDFREEC
        DROP   R5,R6
DDFREEF LH     R6,NTBDS            DE-ALLOCATE DATA-SETS
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
        @CALL  FREEDS              YES
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         TM    SWSTTS,MSGLST
         BZ    DDFREE0
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(19,R14),=CL19' DE-ALLOCATION DONE'
         LA    R14,20(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
DDFREE0  XR    R15,R15             SET RC=0
DDFREEX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- FREEDS - DE-ALLOCATE DATA-SETS ROUTINE
*              R6  : NUMBER OF ENTRIES IN 'TBDS' TO BE SCANNED
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE = 0 - ALWAYS
         SPACE 1
FREEDS  @ENTER ,
         L     R2,CPPLADDR         DE-ALLOCATE DATA-SETS
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA18
         USING DAPB18,R4
         ST    R4,DAPLDAPB
         L     R5,ATBDS
         USING TBDSECT,R5
FREEDSL  TM    TBIND1,TBALLDS      ALLOCATED ?
         BZ    FREEDST             NO
         XC    0(LDA18,R4),0(R4)
         MVC   DA18CD,=XL2'0018'
         MVC   DA18DDN,TBDDN
         MVC   DA18MNM,=CL8' '
         MVC   DA18SCLS(L'DA18SCLS),=CL8' '
         MVI   DA18CTL,DA18PERM
         DROP  R4
         BAS   R14,XDAIR           EXECUTE DE-ALLOCATION
         B     FREEDST             +0 = OK, +4 = ERROR
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'TBDSN),TBDSN
         LA    R14,WKLINE+L'TBDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(21,R14),=CL21' DE-ALLOCATION FAILED'
         LA    R14,22(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
FREEDST  BCT   R6,*+L'*+4
         B     *+L'*+8
         LA    R5,TBDSLEN(R5)
         B     FREEDSL
         DROP  R5
         XR    R15,R15             SET RC=0
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*=== - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ===*
*===           E S P I E     E X I T     R O U T I N E           ===*
*=== - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ===*
         SPACE 1
ASKTEST  EQU   11,1                DYLON+11 = 0 - FORCE PIE TRACE
*                                  (MAY BE DONE BY ZAP)
         SPACE 1
         CNOP  0,8
         USING *,R15
         USING EPIE,R1
ESPEXIT  L     R10,EPIEPARM
         LR    R7,R10
         LM    R8,R9,OLDPICA+4
         MVC   PIEAR(L'PIEAR),EPIEGPR SAVE PIE CONTENTS
         OI    SWSTTS,DSPPIE       SAY DISPLAY
         L     R6,=A(INTEX-DYLOFF)
         CLI   ASKTEST(R8),0
         BE    ESPEXITX
         XC    PIEAR(L'PIEAR),PIEAR
         NI    SWSTTS,255-DSPPIE
ESPEXITX STM   R7,R10,EPIEGPR+R10*4
         ALR   R6,R8
         ST    R6,EPIEPSW+4
         NI    EPIEPSW+4,X'7F'
         BR    R14
         SPACE 1
        LTORG
         SPACE 1
         DROP  R1,R15              END OF LOCAL ADDRESSABILITIES
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - -        S P E C I A L     R O U T I N E S        - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- SPROF - ALLOCATION OF NEW ISPF PROFILE ROUTINE
*                (ALSO USED TO ALLOCATE MFTTLIB DD OF MFTS)
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = ERROR
         SPACE 1
SPROF   @ENTER ,
         LH    R1,NTBDS
         CH    R1,=Y(MXTBN)        DSNAME'S TABLE OVERFLOW ?
         BL    SPROFA              NO
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDSN),WDSN
         LA    R14,WKLINE+L'WDSN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(14,R14),=CL14' ... BREAKDOWN'
         LA    R14,15(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         BAS   R14,MSGTBN          DATA-SETS TABLE OVERFLOW
        @CALL  PUTLNE
SPROF4   LA    R15,4               SET RC=4
         B     SPROFX
SPROFA  @S99I  TUPAOV=SPROFY,TUAOV=SPROFZ START LIST
         OC    NTBDS,NTBDS         IS IT THE FIRST DATA-SET ?
         BNZ   SPROFN              NO, SKIP
        @TU01  ,                   BUILD TU 01 - DDNAME
SPROFN  @TU02  ,                   BUILD TU 02 - DSNAME
        @TU04  NEW                 BUILD TU 04 - STATUS
        @TU05  CAT                 BUILD TU 05 - DISPOSITION
        @TUTC  YYPA                BUILD TU 07/08 - TRK/CYL ALLOC.
        @TU0A  YYPP                BUILD TU 0A - PRIMARY SPACE
        @TU0B  YYPS                BUILD TU 0B - SECONDARY SPACE
        @TU0C  YYPD                BUILD TU 0C - DIRECTORY BLOCKS
        @TU10  YYPV                BUILD TU 10 - VOLSER
        @TU15  YYPU                BUILD TU 15 - UNIT
        @TU30  YYPB,WBLK           BUILD TU 30 - BLKSIZE
        @TU3C  WORG                BUILD TU 3C - DSORG
        @TU42  WLRL                BUILD TU 42 - LRECL
        @TU49  WRFM,WBLK,WLRL      BUILD TU 49 - RECFM
        @TU52  LAST=YES            BUILD TU 52 - PERM. ALL. ATTR.
         OC    NTBDS,NTBDS         IS IT THE FIRST DATA-SET ?
         BZ    SPROFD              YES, SKIP
        @S99N  ,                   PROVIDE NEXT
        @TU55  LAST=YES            BUILD TU 55 - RETURN DDNAME
         LR    R5,R4               RETAIN ADDRESS OF RETURN DDNAME
SPROFD  @S99T  ,                   TERMINATE LIST
         BAS   R14,XDYNALL         EXECUTE DYNALLOC
         B     SPROFS              0 = OK, ALLOCATED
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(28,R14),=CL28' DATA-SETS ALLOCATION FAILED'
         LA    R14,29(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     SPROF4
SPROFY   BAS   R14,MSGRBTP         TEXT UNITS POINTERS AREA OVERFLOW
        @CALL  PUTLNE
         B     SPROF4
SPROFZ   BAS   R14,MSGRBTU         TEXT UNITS AREA OVERFLOW
        @CALL  PUTLNE
         B     SPROF4
SPROFS   LH    R2,NTBDS
         LA    R14,1(R2)
         STH   R14,NTBDS
         LTR   R2,R2
         BNP   *+L'*+4
         MH    R2,=Y(TBDSLEN)
         AL    R2,ATBDS
         USING TBDSECT,R2
         CH    R14,=H'1'
         BNE   *+L'*+10
         MVC   TBDDN,WDDN
         B     SPROFC
         MVC   TBDDN,=CL8' '
         USING S99TUNIT,R5
         XR    R1,R1
         ICM   R1,B'0011',S99TULNG
         BCT   R1,*+L'*+6
         MVC   TBDDN(*-*),S99TUPAR <<EXECUTED>>
         EX    R1,*-6              SET RETURNED DDNAME
         DROP  R5
SPROFC   MVC   TBLDS,WLDS
         MVC   TBDSN,WDSN
         OI    TBIND1,TBALLDS      SAY ALLOCATED
         DROP  R2
         XR    R15,R15             SET RC=0
SPROFX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PWORK - PRE-ALLOCATED ISPF WORK FILE ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = GO ALLOCATE IT
*                                                  8 = ERROR
         SPACE 1
PWORK   @ENTER ,
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     PWORKA              +0 = NO, GO ALLOCATE IT
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    PWORKS              OK
         B     PWORK8              ERROR
PWORKA   BAS   R14,BDDSN           BUILD DS-NAME
         B     PWORK8              0 = ERROR
         B     PWORK8              4 = NONE (UNACCEPTABLE)
        @S99I  TUPAOV=PWORKY,TUAOV=PWORKZ 8 = OK, START LIST
        @TU01  ,                   BUILD TU 01 - DDNAME
        @TU02  ,                   BUILD TU 02 - DSNAME
        @TU04  NEW                 BUILD TU 04 - STATUS
        @TU05  DEL                 BUILD TU 05 - DISPOSITION
        @TU06  DELE                BUILD TU 06 - DISPOSITION
        @TUTC  YYWA                BUILD TU 07/08 - TRK/CYL ALLOC.
        @TU0A  YYWP                BUILD TU 0A - PRIMARY SPACE
        @TU0B  YYWS                BUILD TU 0B - SECONDARY SPACE
        @TU0C  YYWD                BUILD TU 0C - DIRECTORY BLOCKS
        @TU15  YYWU                BUILD TU 15 - UNIT
        @TU2C  YYWR                BUILD TU 2C - DCB REFERENCE
        @TU52  LAST=YES            BUILD TU 52 - PERM. ALL. ATTR.
        @S99T  ,                   TERMINATE LIST
         BAS   R14,XDYNALL         EXECUTE DYNALLOC
         B     PWORKS              0 = OK, ALLOCATED
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(27,R14),=CL27' DATA-SET ALLOCATION FAILED'
         LA    R14,28(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     PWORK8
PWORKY   BAS   R14,MSGRBTP         TEXT UNITS POINTERS AREA OVERFLOW
        @CALL  PUTLNE
         B     PWORK8
PWORKZ   BAS   R14,MSGRBTU         TEXT UNITS AREA OVERFLOW
        @CALL  PUTLNE
PWORK8   LA    R15,8               SET RC=8
         B     PWORKX
PWORKS  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         XR    R15,R15             SET RC=0
PWORKX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PCTRL - PRE-ALLOCATED ISPF CONTROL FILE ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = GO ALLOCATE IT
*                                                  8 = ERROR
         SPACE 1
PCTRL   @ENTER ,
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     PCTRLA              +0 = NO, GO ALLOCATE IT
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    PCTRLS              OK
         B     PCTRL8              ERROR
PCTRLA   BAS   R14,BDDSN           BUILD DS-NAME
         B     PCTRL8              0 = ERROR
         B     PCTRL8              4 = NONE (UNACCEPTABLE)
        @S99I  TUPAOV=PCTRLY,TUAOV=PCTRLZ 8 = OK, START LIST
        @TU01  ,                   BUILD TU 01 - DDNAME
        @TU02  ,                   BUILD TU 02 - DSNAME
        @TU04  NEW                 BUILD TU 04 - STATUS
        @TU05  DEL                 BUILD TU 05 - DISPOSITION
        @TU06  DELE                BUILD TU 06 - DISPOSITION
        @TUTC  YYCA                BUILD TU 07/08 - TRK/CYL ALLOC.
        @TU0A  YYCP                BUILD TU 0A - PRIMARY SPACE
        @TU0B  YYCS                BUILD TU 0B - SECONDARY SPACE
        @TU15  YYCU                BUILD TU 15 - UNIT
        @TU30  YYCB                BUILD TU 30 - BLKSIZE
        @TU3C  WORG                BUILD TU 3C - DSORG
        @TU42  WLRL                BUILD TU 42 - LRECL
        @TU49  WRFM,YYCB,WLRL      BUILD TU 49 - RECFM
        @TU52  LAST=YES            BUILD TU 52 - PERM. ALL. ATTR.
        @S99T  ,                   TERMINATE LIST
         BAS   R14,XDYNALL         EXECUTE DYNALLOC
         B     PCTRLS              0 = OK, ALLOCATED
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(27,R14),=CL27' DATA-SET ALLOCATION FAILED'
         LA    R14,28(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     PCTRL8
PCTRLY   BAS   R14,MSGRBTP         TEXT UNITS POINTERS AREA OVERFLOW
        @CALL  PUTLNE
         B     PCTRL8
PCTRLZ   BAS   R14,MSGRBTU         TEXT UNITS AREA OVERFLOW
        @CALL  PUTLNE
PCTRL8   LA    R15,8               SET RC=8
         B     PCTRLX
PCTRLS  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         XR    R15,R15             SET RC=0
PCTRLX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PEDIT - PRE-ALLOCATED TSO EDIT WORK ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = GO ALLOCATE IT
*                                                  8 = ERROR
         SPACE 1
PEDIT   @ENTER ,
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     PEDITA              +0 = NO, GO ALLOCATE IT
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    PEDITS              OK
         B     PEDIT8              ERROR
PEDITA   BAS   R14,BDDSN           BUILD DS-NAME
         B     PEDIT8              0 = ERROR
         B     PEDIT8              4 = NONE (UNACCEPTABLE)
        @S99I  TUPAOV=PEDITY,TUAOV=PEDITZ 8 = OK, START LIST
        @TU01  ,                   BUILD TU 01 - DDNAME
        @TU02  ,                   BUILD TU 02 - DSNAME
        @TU04  NEW                 BUILD TU 04 - STATUS
        @TU05  DEL                 BUILD TU 05 - DISPOSITION
        @TU06  DELE                BUILD TU 06 - DISPOSITION
        @TU09  YYEA                BUILD TU 09 - BLK. ALLOCATION
        @TU0A  YYEP                BUILD TU 0A - PRIMARY SPACE
        @TU0B  YYES                BUILD TU 0B - SECONDARY SPACE
        @TU15  YYEU                BUILD TU 15 - UNIT
        @TU52  LAST=YES            BUILD TU 52 - PERM. ALL. ATTR.
        @S99T  ,                   TERMINATE LIST
         BAS   R14,XDYNALL         EXECUTE DYNALLOC
         B     PEDITS              0 = OK, ALLOCATED
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(27,R14),=CL27' DATA-SET ALLOCATION FAILED'
         LA    R14,28(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         B     PEDIT8
PEDITY   BAS   R14,MSGRBTP         TEXT UNITS POINTERS AREA OVERFLOW
        @CALL  PUTLNE
         B     PEDIT8
PEDITZ   BAS   R14,MSGRBTU         TEXT UNITS AREA OVERFLOW
        @CALL  PUTLNE
PEDIT8   LA    R15,8               SET RC=8
         B     PEDITX
PEDITS  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         XR    R15,R15             SET RC=0
PEDITX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PTERM - PRE-ALLOCATED TO TERMINAL ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = GO ALLOCATE IT
*                                                  8 = ERROR
         SPACE 1
PTERM   @ENTER ,
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     PTERMA              +0 = NO, GO ALLOCATE IT
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    PTERMS              OK
         B     PTERM8              ERROR
         SPACE 1
*        EQUIVALENT JCL ALLOCATION :
*              //...      DD TERM=TS
         SPACE 1
PTERMA   L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA1C            ALLOCATE TERM=TS
         USING DAPB1C,R4
         ST    R4,DAPLDAPB
         XC    0(LDA1C,R4),0(R4)
         MVC   DA1CDDN,WDDN
         MVC   DA1CCD,=XL2'001C'
         MVI   DA1CCTL,DA1CPERM
         MVC   DA1CALN,=CL8' '
         DROP  R3,R4
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         BAS   R14,XDAIR           EXECUTE ALLOCATION
         B     PTERMP              +0 = OK, ALLOCATED
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(27,R14),=CL27' DATA-SET ALLOCATION FAILED'
         LA    R14,28(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
PTERM8   LA    R15,8               SET RC=8
         B     PTERMX
PTERMP  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
PTERMS  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         XR    R15,R15             SET RC=0
PTERMX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*------- PDMMY - PRE-ALLOCATED TO DUMMY ROUTINE
*              R2  : DATA-SET(S) NAME(S) LIST POINTER
*              R5  : 'LIBCIT' TABLE ENTRY POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, ALLOCATED
*                                                  4 = GO ALLOCATE IT
*                                                  8 = ERROR
         SPACE 1
PDMMY   @ENTER ,
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     PDMMYA              +0 = NO, GO ALLOCATE IT
        @CALL  DIAGDD              +4 = YES, GO DIAGNOSE
         LTR   R15,R15             HOW COMPLETED ?
         BZ    PDMMYS              OK
         B     PDMMY8              ERROR
         SPACE 1
*        EQUIVALENT JCL ALLOCATION :
*              //...      DD DUMMY
         SPACE 1
PDMMYA   L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         LA    R4,XDA08            ALLOCATE DUMMY
         USING DAPB08,R4
         ST    R4,DAPLDAPB
         XC    0(LDA08,R4),0(R4)
         MVC   DA08DDN,WDDN
         MVC   DA08CD,=XL2'0008'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08CTL,DA08PERM+DA08DMMY
         MVC   DA08ALN,=CL8' '
         DROP  R3,R4
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         BAS   R14,XDAIR           EXECUTE ALLOCATION
         B     PDMMYP              +0 = OK, ALLOCATED
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'WDDN),WDDN
         LA    R14,WKLINE+L'WDDN+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(27,R14),=CL27' DATA-SET ALLOCATION FAILED'
         LA    R14,28(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
PDMMY8   LA    R15,8               SET RC=8
         B     PDMMYX
PDMMYP  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
PDMMYS  @CALL  PERMAL              SET PERMANENTLY ALLOCATED
         XR    R15,R15             SET RC=0
PDMMYX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        P R O C E S S     C O M M A N D     O P E R A N D S        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- PCOPN - PROCESS COMMAND OPERANDS
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
PCOPN   @ENTER ,
         SPACE 1
*------- VERIFY AND SET SENIOR SYSTEM PROGRAMMER(S)
         SPACE 1
         L     R4,=V(DYLOCOM)
         L     R5,=A(VCOML)
         LA    R2,0(R4,R5)
         CL    R5,0(R2)
         BE    SETVC
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(32),=CL32'"DYLOCOM" VECTOR COMMUNICATIONS '
         MVC   WKLINE+42(12),=CL12'DISCREPANCY '
         LA    R1,WKLINE
         LA    R0,54
        @CALL  PUTLNE
         LA    R15,4               SET RC=4
         B     PCOPNZ
SETVC    LA    R2,VCOMS
         LR    R3,R5
         MVCL  R2,R4
         L     R15,ASRVC
         XR    R1,R1
        @CALL  ,
         ST    R1,AWK
         L     R1,AWIZ
         XR    R2,R2
         IC    R2,0(R1)
         LA    R3,1(R1)
         LTR   R2,R2
         BNP   *+L'*+18
         CLC   0(8,R3),USID
         BE    STWZRD
         LA    R3,8(R3)
         BCT   R2,*-14
         LR    R1,R3
         XR    R2,R2
         IC    R2,0(R1)
         LA    R3,1(R1)
         LTR   R2,R2
         BNP   PCBFOP
         CLC   0(8,R3),GRNM
         BE    STWZRD
         LA    R3,8(R3)
         BCT   R2,*-14
         B     PCBFOP
STWZRD   OI    SWSTTS,WIZARD
         SPACE 1
*------- PROCESS COMMAND BUFFER OPERANDS
         SPACE 1
PCBFOP   L     R2,CPPLADDR
         USING CPPL,R2             SET CPPL ADDRESSABILITY
         L     R6,CPPLCBUF         COMMAND BUFFER ADDRESS
         DROP  R2
         MVC   CMNME,=CL8' '
         LH    R1,2(R6)            LENGTH OF COMMAND (=OFFSET)
         LA    R0,8
         CLR   R1,R0
         BNH   *+L'*+2
         LR    R1,R0
         BCT   R1,*+L'*+6
         OC    CMNME,4(R6)         <<EXECUTED>>
         EX    R1,*-6              UPPERCASE COMMAND NAME
         CLI   CMNME+4,C'N'        ON PROCESS ?
         BE    *+L'*+4             YES
         OI    SWPRCS,PROFF        NO, SAY OFF PROCESS
         LH    R1,0(R6)            GET LENGTH
         SH    R1,=H'4'            -4 (PREFIX)
         CH    R1,2(R6)            ANY OPERAND ?
         BH    NMOPSP1             YES
         XR    R15,R15             NO, NONE, SET RC=0
         B     PCOPNZ
NMOPSP1  SH    R1,2(R6)            LENGTH OF OPERANDS (-OFFSET)
         LA    R1,31(R1)           BUMP SO SCAN COMPARE DON'T ABEND
         SRL   R1,3
         SLL   R1,3
         ST    R1,OPLGTH           SAVE LENGTH OF OPERANDS AREA
         LR    R3,R1
        GETMAIN R,LV=(1)
         ST    R1,OPADDR           SAVE ADDRESS OF OPERANDS AREA
         LR    R2,R1
         LR    R4,R1
         LA    R5,C' '
         SLL   R5,24
         MVCL  R2,R4               SET AREA TO BLANKS
         LH    R1,0(R6)            GET LENGTH
         SH    R1,=H'4'            -4 (PREFIX)
         LH    R2,2(R6)            OFFSET TO OPERANDS
         LA    R3,4(R6,R2)         START OF OPERANDS
         SR    R1,R2               LENGTH OF OPERANDS
         BCTR  R1,0
         XR    R0,R0
         SLDL  R0,24
         SRL   R1,24
         L     R2,OPADDR
         LTR   R0,R0               COPY AND UPPER CASE OPERANDS
         BZ    NMOPSP3
NMOPSP2  OC    0(256,R2),0(R3)
         LA    R2,256(R2)
         LA    R3,256(R3)
         BCT   R0,NMOPSP2
         B     NMOPSP3
         OC    0(*-*,R2),0(R3)     <<EXECUTED>>
NMOPSP3  EX    R1,*-6
         L     R3,OPADDR
         LA    R4,1
         L     R5,OPLGTH
         ALR   R5,R3
         SLR   R5,R4
        @CALL  OPSCN               GO SCAN OPERANDS
         LR    R6,R15              RETAIN RC
         LM    R0,R1,OPLGTH
        FREEMAIN R,LV=(0),A=(1)
         LTR   R15,R6              TEST AND SET BACK RC
         BNZ   PCOPNZ
         SPACE 1
*------- PROCESS AUTOMATIC OPERANDS
         SPACE 1
         XR    R8,R8
        @IFKW  AUTO,S,ELSE=AUCMDT
         L     R3,=A(AUWKL)
        GETMAIN R,LV=(R3)
         LR    R8,R1
         LR    R2,R1
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
         USING AUWKA,R8
         MVI   INOPR,INOPRI        INITIAL
        @CALL  PTLDS
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   AUEX                ERROR
         LA    R1,AOSNME
         MVI   INOPR,INOPRP        POSITION TO MEMBER
        @CALL  PTLDS
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   AUEX                ERROR
         TM    INSWS,INSWSM        MEMBER NOT FOUND ?
         BO    AUEX                YES, NO OPERANDS
AUOPSP1  MVI   INOPR,INOPRR        READ MEMBER
        @CALL  PTLDS
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   AUEX                ERROR
         ICM   R1,B'1111',INCBP    MEMBER EOF ?
         BZ    AUOPSP2             YES, SKIP
         CLI   0(R1),C'*'          NO, COMMENT ?
         BNE   AUOPSP2             NO
         LA    R0,1                YES, COUNT ALSO THIS CARD
         A     R0,AUCDS
         ST    R0,AUCDS
         B     AUOPSP1
AUOPSP2 @CALL  PRAOS               NO, PROCESS AUTOMATIC OP. SEL.
         LTR   R6,R15              HOW COMPLETE ?
         BZ    AUOPSP1             CONTINUE
         BP    AUEX                ERROR, SOMETHING WRONG IN MEMBER
         OC    AUPOP,AUPOP
         BZ    AUCMDT
         TM    SWSTTS,RCLSTX
         BZ    AUOPSP3
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(18),=CL18'AUTOMATIC OPERANDS'
         MVC   WKLINE+28(19),=CL19' SUPPLIED (L=   ) :'
         L     R4,AUPOP
         CVD   R4,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+41(3),WORKD+1
         LA    R1,WKLINE
         LA    R0,47
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'LSTSCL),LSTSCL
         LA    R1,WKLINE
         LA    R0,10+L'LSTSCL
        @CALL  PUTLNE
         LA    R3,AUSOP
         LA    R5,60
         BAS   R6,AUOPSL
         CLI   STCMDL,0
         BE    AUOPSP3
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(29),=CL29'COMMAND(S) SUPPLIED (L=   ) :'
         XR    R4,R4
         IC    R4,STCMDL
         CVD   R4,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+33(3),WORKD+1
         LA    R1,WKLINE
         LA    R0,39
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'LSTSCL),LSTSCL
         LA    R1,WKLINE
         LA    R0,10+L'LSTSCL
        @CALL  PUTLNE
         LA    R3,STCMDT
         LA    R6,AUOPSP3
AUOPSL   MVC   WKLINE(L'MSID),MSID
         MVI   WKLINE+10,C' '
         MVC   WKLINE+11(59),WKLINE+10
         CLR   R4,R5
         BNH   *+L'*+6
         LR    R2,R5
         B     *+L'*+2
         LR    R2,R4
         SR    R4,R2
         BCT   R2,*+L'*+6
         MVC   WKLINE+10(*-*),0(R3) <<EXECUTED>>
         EX    R2,*-6
         LA    R3,1(R3,R2)
         LA    R1,WKLINE
         LA    R0,70
        @CALL  PUTLNE
         LTR   R4,R4
         BP    AUOPSL
         BR    R6
AUOPSP3  LA    R3,AUSOP
         LA    R4,1
         L     R5,AUPOP
         ALR   R5,R3
         SLR   R5,R4
         OI    AUFLGS,AUKWRJ
         NI    AUFLGS,255-ALLORJ
        @CALL  OPSCN               GO SCAN OPERANDS
         LTR   R6,R15              TEST AND SET BACK RC
         BNZ   PCOPNX
AUCMDT  @IFKW  ACS,S,ELSE=AUCMDX
        @IFKW  CMD,U,GOTO=AUSACS1
         CLI   STCMDL,1            ANY COMMAND(S) ?
         BL    AUSACS2             NO
         BH    AUACST              YES
         CLI   STCMDT,C'?'         IS IT ON TERMINAL REQUEST ?
         BE    AUACST              YES
         CLI   STCMDT,C'*'         NO, IS IT AN AUTOMATIC REQUEST ?
         BE    AUCMDX              YES
AUACST  @SETKW ACS,U               IGNORE ACS REQUEST
         MVC   ACSNME,=CL8' '
         B     AUCMDX
AUSACS1 @SETKW CMD,N               SET AUTOMATIC REQUEST
AUSACS2  MVI   STCMDL,1
         MVI   STCMDT,C'*'
AUCMDX   XR    R6,R6               SET RC=0 (OK)
         B     PCOPNX
AUEX     MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(18),=CL18'AUTOMATIC OPERANDS'
         MVC   WKLINE+28(30),=CL30' SELECTION FAILURE (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,58
        @CALL  PUTLNE
         LA    R6,4                SET RC=4 (ERROR)
PCOPNX   LTR   R1,R8
         BZ    PCOPNY
         L     R0,=A(AUWKL)
        FREEMAIN R,A=(1),LV=(0)
         DROP  R8
PCOPNY   LR    R15,R6              SET RC=0/4
PCOPNZ  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                    S C A N     O P E R A N D S                    *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- OPSCN - SCAN OPERANDS
*              R3  : SCAN START POINTER
*              R4  : SCAN INCREMENT VALUE
*              R5  : SCAN END POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
OPSCN   @ENTER ,
         SPACE 1
*------- ANALYZE COMMAND OPERANDS
         SPACE 1
OPSCAN   CLI   0(R3),C' '
         BNE   OPFND
OPLOOP   BXLE  R3,R4,OPSCAN
         B     OPSCNX
OPNEXT   LA    R3,0(R3,R7)
         BXLE  R3,R4,*+L'*+4
         B     OPSCNX
         CLI   0(R3),C' '
         BE    OPLOOP
         MVC   WKLINE+23(19),=CL19'<-SEPARATOR MISSING'
         B     OPTERX
OPFND   @CHKO  NOLIST,NOMSG,NOLST,WHERE=OPCHKW,MATCH=OPLST1
        @CHKO  LIST,MSG,LST,WHERE=OPCHKW,MATCH=OPLST2
        @CHKO  ?,WHERE=OPCHKW,MATCH=OPINF1
         TM    AUFLGS,AUKWRJ
         BO    OPNAUT
        @CHKO  AUTO,AOS,AO,WHERE=OPCHKW,MATCH=OPAOS1
         XR    R7,R7               CHECK IF ONLY A OR A=
         CLI   0(R3),C'A'
         BNE   OPNAUT
         CLR   R3,R5
         BNL   OPAOS1              OK, GO PROCESS AUTO
         CLI   1(R3),C' '
         BE    OPAOS1              OK, GO PROCESS AUTO
         CLI   1(R3),C'='
         BE    OPAOS1              OK, GO PROCESS AUTO
OPNAUT   TM    AUFLGS,ALLORJ
         BO    OPTRC0
         L     R1,AWK              PREPARE WORK-AREA
         USING WACOM,R1
         LA    R15,OPCHKW
         ST    R15,AOCKR
         MVC   ZGRNM,GRNM
         MVC   ZUSID,USID
         MVC   ZTDSI,TDSI
         MVC   ZXDSI,XDSI
         MVC   ZSWSTTS,SWSTTS
         NI    ZSWSTTS,TDSPLY
         LR    R0,R4
         TM    SWPRCS,PROFF
         BZ    *+L'*+2
         XR    R0,R0
         L     R15,ASOK
        @CALL  ,                   GO SCAN OPERANDS
         MVC   TDSI,ZTDSI          BACK FROM WORK-AREA
         MVC   XDSI,ZXDSI
         DROP  R1
         CH    R15,=H'4'
         BL    OPNEXT
         BE    OPDUPL
         LTR   R0,R0
         BZ    OPYEND
        @CHKO  IDV,I,WHERE=OPCHKW,MATCH=OPIDV1
        @CHKO  DDT,DD,WHERE=OPCHKW,MATCH=OPDDT1
        @CHKO  ALT,AL,WHERE=OPCHKW,MATCH=OPALT1
OPYEND  @CHKO  ACS,AC,WHERE=OPCHKW,MATCH=OPACS1
        @CHKO  'C=','CMD=','CMDS=','COMMAND=','COMMANDS=',             X
               WHERE=OPCHKW,MATCH=OPCMD1
         TM    AUFLGS,AUKWRJ
         BZ    OPTRC0
OPTERR   MVC   WKLINE+23(19),=CL19'... UNKNOWN OPERAND'
OPTERX   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(3),=CL3'-> '
         MVC   WKLINE+13(10),0(R3)
         MVC   WKLINE+42(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,73
         B     OPERRM
OPLST1  @IFKW  LIST,U,ELSE=OPNEXT
        @SETKW LIST,N,GOTO=OPNEXT
OPLST2  @IFKW  LIST,S,GOTO=OPNEXT
        @SETKW LIST,S,GOTO=OPNEXT
         SPACE 1
*------- GET MEMBERS NAMES
         SPACE 1
OPAOS1  @IFKW  AUTO,U,ELSE=OPDUPL
         XR    R14,R14
         IC    R14,LGNKW
         LTR   R14,R14
         BNP   OPAONK
         L     R15,AWK
         USING WACOM,R15
         BCT   R14,*+L'*+6
         OC    ZGNKW(*-*),ZGNKW    <<EXECUTED>>
         EX    R14,*-6
         BNZ   *+L'*+10
         DROP  R15
OPAONK   OC    KWAUTO(AUKCHK),KWAUTO
         BZ    *+L'*+8
         LA    R14,OPAOS6-12
         B     OPEXNRM
         LA    R15,AOSNME
         BAS   R14,OPEXNR
         B     OPAOS3              RETURN +0
         B     OPAOS2                     +4
         B     OPAOS4                     +8
         B     OPAOS6                     +12
OPAOS2  @SETKW AUTO,N,GOTO=OPAOS5
OPAOS3   MVC   AOSNME,=CL8'AOS'
OPAOS4  @SETKW AUTO,S
OPAOS5   OI    AUFLGS,ALLORJ
         B     OPLOOP
OPAOS6   MVC   WKLINE+10(3),=CL8'AOS'
         B     OPERRM
OPIDV1  @IFKW  IDV,U,ELSE=OPDUPL
         LA    R15,IDVNME
         BAS   R14,OPEXNR
         B     OPIDV3              RETURN +0
         B     OPIDV2                     +4
         B     OPIDV4                     +8
         B     OPIDV5                     +12
OPIDV2  @SETKW IDV,N,GOTO=OPLOOP
OPIDV3   MVC   IDVNME,=CL8'IDV'
OPIDV4  @SETKW IDV,S,GOTO=OPLOOP
OPIDV5   MVC   WKLINE+10(3),=CL3'IDV'
         B     OPERRM
OPDDT1  @IFKW  DDT,U,ELSE=OPDUPL
         LA    R15,DDTNME
         BAS   R14,OPEXNR
         B     OPDDT3              RETURN +0
         B     OPDDT2                     +4
         B     OPDDT4                     +8
         B     OPDDT5                     +12
OPDDT2  @SETKW DDT,N,GOTO=OPLOOP
OPDDT3   MVC   DDTNME,=CL8'DDT'
OPDDT4  @SETKW DDT,S,GOTO=OPLOOP
OPDDT5   MVC   WKLINE+10(3),=CL3'DDT'
         B     OPERRM
OPALT1  @IFKW  ALT,U,ELSE=OPDUPL
         LA    R15,ALTNME
         BAS   R14,OPEXNR
         B     OPALT3              RETURN +0
         B     OPALT2                     +4
         B     OPALT4                     +8
         B     OPALT5                     +12
OPALT2  @SETKW ALT,N,GOTO=OPLOOP
OPALT3   MVC   ALTNME,=CL8'ALT'
OPALT4  @SETKW ALT,S,GOTO=OPLOOP
OPALT5   MVC   WKLINE+10(3),=CL3'ALT'
         B     OPERRM
OPACS1  @IFKW  ACS,U,ELSE=OPDUPL
         LA    R15,ACSNME
         BAS   R14,OPEXNR
         B     OPACS3              RETURN +0
         B     OPACS2                     +4
         B     OPACS4                     +8
         B     OPACS5                     +12
OPACS2  @SETKW ACS,N,GOTO=OPLOOP
OPACS3   MVC   ACSNME,=CL8'ACS'
OPACS4  @SETKW ACS,S,GOTO=OPLOOP
OPACS5   MVC   WKLINE+10(3),=CL3'ACS'
         B     OPERRM
OPEXNR   LA    R3,0(R3,R7)         EXTRACT NAME ROUTINE
         BXLE  R3,R4,*+L'*+2
         BR    R14                 RETURN +0 (DEFAULT)
         CLI   0(R3),C' '
         BER   R14                 RETURN +0 (DEFAULT)
         CLI   0(R3),C'='
         BNE   OPEXNRM
         BXLE  R3,R4,*+L'*+4
         B     4(R14)              RETURN +4 (NONE)
         CLI   0(R3),C' '
         BE    4(R14)              RETURN +4 (NONE)
         LR    R2,R3               NAMES STRING
OPEXNRC  CLI   0(R3),C'A'          ALPHA
         BL    OPEXNRM
         CLI   0(R3),C'Z'
         BH    OPEXNRM
OPEXNRN  BXLE  R3,R4,*+L'*+4
         B     OPEXNRT
         CLI   0(R3),C' '
         BE    OPEXNRT
         CLI   0(R3),C'$'          DOLLAR
         BE    OPEXNRN
         CLI   0(R3),C'#'          NUMBER SIGN
         BE    OPEXNRN
         CLI   0(R3),C'@'          AT SIGN
         BE    OPEXNRN
         CLI   0(R3),C'0'          NUMERIC
         BL    OPEXNRC
         CLI   0(R3),C'9'
         BNH   OPEXNRN
         B     OPEXNRM
OPEXNRT  LR    R1,R3
         SR    R1,R2
         LA    R0,L'AOSNME         OR L'IDVNME/DDTNME/ALTNME/ACSNME
         CLR   R1,R0
         BNH   OPEXNRD
OPEXNRM  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+13(14),=CL14'= SYNTAX ERROR'
         MVC   WKLINE+27(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,58
         B     12(R14)             RETURN+12 (ERROR)
OPEXNRD  BCT   R1,*+L'*+6
         MVC   0(*-*,R15),0(R2)    <<EXECUTED>>
         EX    R1,*-6
         B     8(R14)              RETURN+8 (NAME SET)
         SPACE 1
*------- DISPLAY INFORMATIONAL MESSAGES
         SPACE 1
OPINF1   TM    SWSTTS,RCLSTX       ALREADY DONE ?
         BO    OPNEXT              YES, DON'T TWICE THESE MESSAGES
        @IFKW  LIST,S,GOTO=OPINF2
        @SETKW LIST,S              SET LIST OPTION
OPINF2   OI    SWSTTS,RCLSTX       SET DISPLAY RC, ... ALSO
         CLI   UNMEL,0
         BNE   *+L'*+8
         CLI   TRSNL,0
         BE    OPINF5
         MVC   WKLINE(L'MSID),MSID
         LA    R2,WKLINE+10
         CLI   UNMEL,0
         BE    OPINF3
         MVC   0(7,R2),=CL7'NAME = '
         XR    R1,R1
         IC    R1,UNMEL
         BCT   R1,*+L'*+6
         MVC   7(*-*,R2),UNME
         EX    R1,*-6
         LA    R2,8(R2,R1)
         CLI   TRSNL,0
         BE    OPINF4
         MVC   0(3,R2),=CL3' / '
         LA    R2,3(R2)
OPINF3   MVC   0(14,R2),=CL14'TERMINAL-ID = '
         XR    R1,R1
         IC    R1,TRSNL
         BCT   R1,*+L'*+6
         MVC   14(*-*,R2),TRSN
         EX    R1,*-6
         LA    R2,15(R2,R1)
OPINF4   LA    R1,WKLINE
         LR    R0,R2
         SLR   R0,R1
        @CALL  PUTLNE
OPINF5   CLI   USIDL,0
         BNE   *+L'*+16
         CLI   GRNML,0
         BNE   *+L'*+8
         CLI   PNMEL,0
         BE    OPNEXT
         MVC   WKLINE(L'MSID),MSID
         LA    R2,WKLINE+10
         CLI   USIDL,0
         BE    OPINF6
         MVC   0(7,R2),=CL7'USER = '
         XR    R1,R1
         IC    R1,USIDL
         BCT   R1,*+L'*+6
         MVC   7(*-*,R2),USID
         EX    R1,*-6
         LA    R2,8(R2,R1)
         CLI   GRNML,0
         BNE   *+L'*+8
         CLI   PNMEL,0
         BE    OPINF8
         MVC   0(3,R2),=CL3' / '
         LA    R2,3(R2)
OPINF6   CLI   GRNML,0
         BE    OPINF7
         MVC   0(8,R2),=CL8'GROUP = '
         XR    R1,R1
         IC    R1,GRNML
         BCT   R1,*+L'*+6
         MVC   8(*-*,R2),GRNM
         EX    R1,*-6
         LA    R2,9(R2,R1)
         CLI   GRNML,0
         BE    OPINF7
         CLI   PNMEL,0
         BE    OPINF8
         MVC   0(3,R2),=CL3' / '
         LA    R2,3(R2)
OPINF7   CLI   PNMEL,0
         BE    OPINF8
         MVC   0(12,R2),=CL12'PROCEDURE = '
         XR    R1,R1
         IC    R1,PNMEL
         BCT   R1,*+L'*+6
         MVC   12(*-*,R2),PNME
         EX    R1,*-6
         LA    R2,13(R2,R1)
OPINF8   LA    R1,WKLINE
         LR    R0,R2
         SLR   R0,R1
        @CALL  PUTLNE
         B     OPNEXT
         SPACE 1
*------- GET ANY SPECIAL REQUEST (TEST PURPOSE)
         SPACE 1
OPTRC0   TM    SWSTTS,WIZARD
         BZ    OPTRCX
         L     R1,AWK              PREPARE WORK-AREA
         USING WACOM,R1
         LA    R15,OPCHKW
         ST    R15,AOCKR
         MVC   ZGRNM,GRNM
         MVC   ZUSID,USID
         MVC   ZTDSI,TDSI
         MVC   ZXDSI,XDSI
         MVC   ZSWSTTS,SWSTTS
         NI    ZSWSTTS,TDSPLY
         LNR   R0,R4
         L     R15,ASOK
        @CALL  ,                   GO SCAN OPERANDS
         MVC   TDSI,ZTDSI          BACK FROM WORK-AREA
         MVC   XDSI,ZXDSI
         DROP  R1
         CH    R15,=H'4'
         BL    OPNEXT
         BE    OPDUPL
        @CHKO  DSAB,WHERE=OPCHKW,MATCH=OPTRC1
        @CHKO  LINE,WHERE=OPCHKW,MATCH=OPTLNE
        @CHKO  SCREEN,WHERE=OPCHKW,MATCH=OPTSCR
OPTRCX   TM    AUFLGS,ALLORJ
         BZ    OPTERR
         LA    R14,OPAOS6-12
         B     OPEXNRM
         SPACE 1
OPTRC1  @IFKW  DSAB,U,ELSE=OPDUPL
        @SETKW DSAB,N,GOTO=OPNEXT
OPTLNE  @IFKW  TYPE,U,ELSE=OPDUPL
        @SETKW TYPE,N,GOTO=OPNEXT
OPTSCR  @IFKW  TYPE,U,ELSE=OPDUPL
        @SETKW TYPE,S,GOTO=OPNEXT
         SPACE 1
*------- GET ANY COMMAND(S) TO BE STACKED AT END
         SPACE 1
OPCMD1  @IFKW  CMD,U,GOTO=OPCMDPR
OPDUPL   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(10),0(R3)
         MVC   WKLINE+20(22),=CL22'... DUPLICATED OPERAND'
         MVC   WKLINE+42(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,73
         B     OPERRM
OPCMDPR @SETKW CMD,N
         LA    R3,0(R3,R7)
         BXLE  R3,R4,*+L'*+4
         B     OPSCNX
         CLI   0(R3),C''''
         BE    OPCMDQT
         LR    R2,R3               STRING COMMAND
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         LR    R1,R3
         SR    R1,R2
         CH    R1,=Y(L'STCMDT)
         BNH   OPCMDST
OPCMDTL  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(16),=CL16'COMMAND TOO LONG'
         MVC   WKLINE+26(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,57
         B     OPERRM
OPCMDST  STC   R1,STCMDL
         BCT   R1,*+L'*+6
         MVC   STCMDT(*-*),0(R2)   <<EXECUTED>>
         EX    R1,*-6
         B     OPLOOP
OPCMDQT  BXLE  R3,R4,OPCMDLQ       QUOTED STRING COMMAND(S)
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'QUOTED COMMAND MISSING'
         MVC   WKLINE+32(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,63
         B     OPERRM
OPCMDLQ  XR    R1,R1
         LA    R2,STCMDT
         CLI   0(R3),C' '          SKIP INITIAL BLANKS AND SEPARATORS
         BE    *+L'*+8
         CLI   0(R3),C';'
         BNE   OPCMDQS
         BXLE  R3,R4,*-16
OPCMDQM  MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(28),=CL28'COMMAND(S) END QUOTE MISSING'
         MVC   WKLINE+38(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,69
         B     OPERRM
OPCMDQS  CLI   0(R3),C''''
         BE    OPCMDCQ
OPCMDMV  LA    R1,1(R1)
         CH    R1,=Y(L'STCMDT)
         BH    OPCMDTL
         MVC   0(1,R2),0(R3)
         CLI   0(R2),C';'          SEPARATOR JUST MOVED ?
         BE    *+L'*+12            YES
         LA    R2,1(R2)            NO
         BXLE  R3,R4,OPCMDQS
         B     OPCMDQM
         MVI   0(R2),C' '          SUPPRESS PREVIOUS BLANKS IF ANY
         BCTR  R1,0
         BCTR  R2,0
         CLI   0(R2),C' '
         BE    *-8
         MVI   1(R2),C';'
         LA    R1,1(R1)
         LA    R2,2(R2)
OPCMDEL  BXLE  R3,R4,*+L'*+4
         B     OPCMDQM
         CLI   0(R3),C' '          SKIP UNNEEDED BLANKS AND SEPARATORS
         BE    OPCMDEL
         CLI   0(R3),C';'
         BE    OPCMDEL
         B     OPCMDQS
OPCMDCQ  BXLE  R3,R4,*+L'*+4
         B     OPCMDEX
         CLI   0(R3),C''''
         BE    OPCMDMV
         CLI   0(R3),C' '
         BE    OPCMDEX
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'COMMAND(S) QUOTE ERROR'
         MVC   WKLINE+32(31),=CL31' - REQUEST REJECTED (NONE DONE)'
         LA    R1,WKLINE
         LA    R0,63
OPERRM  @CALL  PUTLNE
         LA    R15,4               SET RC=4
         B     OPSCNZ
OPCMDEX  STC   R1,STCMDL
         LTR   R1,R1
         BNP   OPLOOP
         LA    R2,STCMDT-1(R1)
OPCMDE1  CLI   0(R2),C' '          ELIMINATION OF LAST BLANK(S)
         BE    *+L'*+8
         CLI   0(R2),C';'          ELIMINATION OF LAST SEPARATOR(S)
         BNE   OPCMDE2
         BCTR  R2,0
         BCT   R1,OPCMDE1
         MVI   STCMDL,0
         B     OPLOOP
OPCMDE2  STC   R1,STCMDL
         B     OPLOOP
         SPACE 1
*------- OPCHKW - OPERANDS CHECK KEYWORD ROUTINE
*               R0  : WORK REGISTER
*               R3  : CURRENT TEXT POINTER
*               R4  : TEXT POINTER INCREMENT (DON'T MODIFY IT)
*               R5  : END OF TEXT POINTER
*               R6  : LINK REGISTER - RETURN +0 = NO MATCH
*                                            +4 = OK, MATCH
*                                            +8 = KEYWORDS LIST
*               R7  : WORK REGISTER - AT RETURN +4 (OK) = LENGTH OF
*                                                         KEYWORD-1
*               R15 : WORK REGISTER
*        KEYWORDS LIST :       DC   AL1(L'KW1-1)
*                        KW1   DC   C'...KEYWORD...'
*                        ...   ...  ...
*                              DC   AL1(255) <--- END OF LIST
*        NOTE : YOU MAY USE MACRO @CHKO TO GENERATE THE CALL, THE
*               RETURNS AND THE KEYWORDS LIST.
*               SYNTAX : @CHKO  ...,...,...,   <- ONE OR MORE KEYWORDS
*                               WHERE=OPCHKW,NOMATCH=...,MATCH=...
*                 NOTE : IF NOMATCH= AND/OR MATCH= ARE NOT SPECIFIED,
*                        THEN THE CORRESPONDING BRANCH IS GENERATED TO
*                        CONTINUE IN SEQUENCE.
         SPACE 1
OPCHKW  @GCHKR R3,R5
         SPACE 1
OPSCNX   XR    R15,R15             SET RC=0
OPSCNZ  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        PROCESS AUTOMATIC OPERANDS SELECTION                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- PRAOS - AUTOMATIC OPERANDS SELECTION
*              AT ENTRY : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
*              R8  : AUTOMATIC OPERANDS WORK-AREA POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
*                                                  - = EOF PROCESSED
         SPACE 1
PRAOS   @ENTER ,
         USING AUWKA,R8
         ICM   R1,B'1111',INCBP    GET CARD POINTER
         BZ    AOTEOF              MEMBER EOF
         LA    R3,71(R1)
         LA    R2,1
         LR    R0,R2               ADD ONE TO CARDS COUNT
         A     R0,AUCDS
         ST    R0,AUCDS
         NI    AUSWS,255-AUSWSN    SET START OF A CARD
         CLI   0(R1),C' '
         BNE   PRAOS2
PRAOS1   BXLE  R1,R2,*-8
         B     PRONXT
         CLI   0(R1),C' '
         BE    PRAOS1
PRONOT   BXLE  R1,R2,*-8
         B     PRONXT              NO, NEXT CARD
PRAOS2   TM    AUSWS,AUSWSN        START OF A CARD ?
         BO    AOWTG               NO
         OI    AUSWS,AUSWSN        YES, SET START OF CARD DONE
         CLI   0(R1),C'*'          COMMENT FOLLOWS ?
         BNE   AOWTG               NO
         B     PRONXT              YES, SKIP CARD
PROSKP   MVI   AUSCW,0             RESTART SCAN TO NEXT IF-
         MVI   AUSCV,0
         NI    AUKSW,255-AUKWRZ    RESET ALL KEYWORDS DONE
PROCNT   CLR   R1,R3
         BNH   PRAOS1
         B     PRONXT
AOWTG    XR    R15,R15             WHERE TO GO
         IC    R15,AUSCW
         CL    R15,AOCWTG
         BH    AOERR5
         SLL   R15,2
         B     AOBWTG(R15)         GO TO
         CNOP  0,4
AOBWTG   B     AOSCO1              = 0
         B     AOSCN1                1
         B     AOTRM0                2
         B     AOCHK0                3
         B     AOPND0                4
AOCWTG   DC    AL4(((*-AOBWTG)/L'AOBWTG)-1)
         SPACE 1
AOSCO1   TM    SWPRCS,PROFF        SEARCH FOR IF-ON OR IF-OFF
         BO    AOSCO2
        @CHKW  IF-ON,WHERE=AOCHKW,NOMATCH=PRONOT,MATCH=AOSCO3
AOSCO2  @CHKW  IF-OFF,WHERE=AOCHKW,NOMATCH=PRONOT,MATCH=AOSCO3
AOSCO3   MVI   AUSCW,1
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     PRONXT
         CLI   0(R1),C' '
         BE    PROCNT
         B     AOERR1              SYNTAX ERROR ...
         SPACE 1
AOSCN1  @CHKW  'T=','TERM=','TERMINAL=',                               X
               WHERE=AOCHKW,MATCH=AOTRM1
        @CHKW  'U=','USER=','USERS=',                                  X
               WHERE=AOCHKW,MATCH=AOUSR1
        @CHKW  'G=','GROUP=','GROUPS=',                                X
               WHERE=AOCHKW,MATCH=AOGRP1
        @CHKW  'P=','PROC=','PROCS=','PROCEDURE=','PROCEDURES=',       X
               WHERE=AOCHKW,MATCH=AOPRC1
        @CHKW  'O=','OP=','OPS=','OPND=','OPNDS=','OPERAND=',          X
               'OPERANDS=',WHERE=AOCHKW,NOMATCH=AOERR1,MATCH=AOPND1
         SPACE 1
AOTRM0   XR    R15,R15             WHERE TO GO
         IC    R15,AUSCV
         CL    R15,AOCTRM
         BH    AOERR6
         SLL   R15,2
         B     AOBTRM(R15)         GO TO
         CNOP  0,4
AOBTRM   B     AOTRM2              = 0
AOCTRM   DC    AL4(((*-AOBTRM)/L'AOBTRM)-1)
AOTRM1   TM    AUKSW,AUKWT         PROCESS TERMINAL
         BO    AOERR1              SYNTAX ERROR ...
         OI    AUKSW,AUKWT
         MVI   AUSCW,2
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     AOTRM2
         MVI   AUSCV,0
         B     PRONXT
AOTRM2   BAS   R14,AOVERK
        @CHKW  S,SCREEN,D,DISPLAY,WHERE=AOCHKW,MATCH=AOTRM3
        @CHKW  L,B,LINE,BACK,LINES,BACKGROUND,                         X
               WHERE=AOCHKW,NOMATCH=AOERR1
         TM    SWSTTS,TDSPLY       TERMINAL IS A SCREEN ?
         BO    PROSKP              YES, SKIP
         B     AOTRM4              NO, OK
AOTRM3   TM    SWSTTS,TDSPLY       TERMINAL IS A SCREEN ?
         BZ    PROSKP              NO, SKIP
AOTRM4   MVI   AUSCW,1             YES, OK
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     PRONXT
         CLI   0(R1),C' '
         BE    PROCNT
         B     AOERR1              SYNTAX ERROR ...
         SPACE 1
AOUSR1   TM    AUKSW,AUKWU         PROCESS USER=
         BO    AOERR1              SYNTAX ERROR ...
         MVC   AUNMEL,USIDL
         MVC   AUNME,USID
         OI    AUKSW,AUKWU
         B     AOCHK1
AOGRP1   TM    AUKSW,AUKWG         PROCESS GROUP=
         BO    AOERR1              SYNTAX ERROR ...
         MVC   AUNMEL,GRNML
         MVC   AUNME,GRNM
         OI    AUKSW,AUKWG
         B     AOCHK1
AOPRC1   TM    AUKSW,AUKWP         PROCESS PROCEDURE=
         BO    AOERR1              SYNTAX ERROR ...
         MVC   AUNMEL,PNMEL
         MVC   AUNME,PNME
         OI    AUKSW,AUKWP
         B     AOCHK1
AOCHK0   XR    R15,R15             WHERE TO GO
         IC    R15,AUSCV
         CL    R15,AOCCHK
         BH    AOERR7
         SLL   R15,2
         B     AOBCHK(R15)         GO TO
         CNOP  0,4
AOBCHK   B     AOCHK2              = 0
         B     AOCHK4                1
         B     AOCHK11               2
         B     AOCHK22               3
AOCCHK   DC    AL4(((*-AOBCHK)/L'AOBCHK)-1)
AOCHK1   MVI   AUSCW,3
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     AOCHK2
         MVI   AUSCV,0
         B     PRONXT
AOCHK2   BAS   R14,AOVERK
         CLI   0(R1),C'('          MULTIPLE TEST ?
         BE    AOCHK3              YES
         LR    R4,R1               NO, SINGLE
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         BAS   R14,AOCHKR
         B     PROSKP              +0 - CANNOT OR NO MATCH
         MVI   AUSCW,1             +4 - OK, MATCH
         B     PROCNT
AOCHK3   BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     AOCHK4
         MVI   AUSCV,1
         B     PRONXT
AOCHK4   BAS   R14,AOVERK
         LR    R4,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+16
         CLI   0(R1),C' '
         BE    *+L'*+8
         CLI   0(R1),C')'
         BNE   *-20
         BAS   R14,AOCHKR
         B     AOCHK10             +0 - CANNOT OR NO MATCH
         B     AOCHK20             +4 - OK, MATCH
AOCHK10  CLR   R1,R3
         BH    *+L'*+20
         CLI   0(R1),C')'          IS IT THE END ?
         BE    AOCHK12             YES
         CLI   0(R1),C' '
         BNE   AOCHK4              CHECK THE NEXT
         BXLE  R1,R2,*-16
         MVI   AUSCV,2
         B     PRONXT
AOCHK11  CLI   0(R1),C')'          IS IT THE END ?
         BNE   AOCHK4              NO, CHECK THE NEXT
AOCHK12  BXLE  R1,R2,*+L'*+4
         B     PROSKP
         CLI   0(R1),C' '
         BE    PROSKP
         B     AOERR1              SYNTAX ERROR ...
AOCHK20  CLR   R1,R3
         BNH   AOCHK22
AOCHK21  MVI   AUSCV,3
         B     PRONXT
AOCHK22  BAS   R14,AOVERK
         CLI   0(R1),C')'          IS IT THE END ?
         BE    *+L'*+8             YES
         BXLE  R1,R2,AOCHK22
         B     AOCHK21
         MVI   AUSCW,1
         BXLE  R1,R2,*+L'*+4
         B     PRONXT
         CLI   0(R1),C' '
         BE    PROCNT
         B     AOERR1              SYNTAX ERROR ...
AOCHKR   LR    R5,R1               CHECK ROUTINE
         SLR   R5,R4               R14 = LINK REGISTER
         CLI   0(R4),C'.'                RETURN +0 = NO MATCH
         BE    AOCHKR1                          +4 = OK, MATCH
         CH    R5,=H'8'
         BH    AOERR2              NAME TOO LONG ...
         MVI   WORKD,C' '
         MVC   WORKD+1(L'WORKD-1),WORKD
         BCT   R5,*+L'*+6
         MVC   WORKD(*-*),0(R4)    <<EXECUTED>>
         EX    R5,*-6
         CLC   AUNME,WORKD
         BNER  R14                 +0, NO MATCH
         B     4(R14)              +4, OK, MATCH
AOCHKR1  BCT   R5,*+L'*+4
         B     AOERR1              SYNTAX ERROR ...
         CH    R5,=H'8'
         BH    AOERR2              NAME TOO LONG ...
         CLM   R5,B'0001',AUNMEL
         BHR   R14                 +0, CANNOT MATCH
         BCT   R5,*+L'*+6
         CLC   AUNME(*-*),1(R4)    <<EXECUTED>>
         EX    R5,*-6
         BNER  R14                 +0, NO MATCH
         B     4(R14)              +4, OK, MATCH
         SPACE 1
AOPND0   XR    R15,R15             WHERE TO GO
         IC    R15,AUSCV
         CL    R15,AOCOPN
         BH    AOERR8
         SLL   R15,2
         B     AOBOPN(R15)         GO TO
         CNOP  0,4
AOBOPN   B     AOPND4              = 0
         B     AOPND7                1
         B     AOPND10               2
         B     AOPND12               3
         B     AOPND15               4
         B     AOPND17               5
AOCOPN   DC    AL4(((*-AOBOPN)/L'AOBOPN)-1)
AOPND1   MVI   AUSCW,4             PROCESS OPERAND(S)
         XR    R4,R4
         LA    R5,AUSOP
         STM   R4,R5,AUPOP
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     AOPND3
AOPND2   CLI   0(R1),C' '
         BE    *-12
         B     AOPND4
AOPND3   MVI   AUSCV,0
         B     PRONXT
AOPND4   BAS   R14,AOVERS
         B     *+L'*+4             +0 - NO MATCH
         B     PRAOSEOF            +4 - MATCH, END
        @CHKW  'C=','CMD=','CMDS=','COMMAND=','COMMANDS=',             X
               WHERE=AOCHKW,MATCH=AOPND6
         LR    R14,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R15,R1
         SLR   R15,R14
         LM    R4,R5,AUPOP
         ALR   R4,R15
         CH    R4,=Y(L'STCMDT)
         BH    AOERR3              OPERAND TOO LONG ...
         BCT   R15,*+L'*+6
         MVC   0(*-*,R5),0(R14)    <<EXECUTED>>
         EX    R15,*-6
         LA    R5,1(R5,R15)
         LA    R0,1(R4)
         CH    R0,=Y(L'STCMDT)
         BH    *+L'*+10
         LR    R4,R0
         MVI   0(R5),C' '
         LA    R5,1(R5)
         STM   R4,R5,AUPOP
AOPND5   CLR   R1,R3
         BNH   AOPND2
         B     AOPND3
AOPND6   CLI   STCMDL,0
         BNE   AOERR1
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     AOPND7
         MVI   AUSCV,1
         B     PRONXT
AOPND7   BAS   R14,AOVERK
        @CHKW  'C=','CMD=','CMDS=','COMMAND=','COMMANDS=',             X
               WHERE=AOCHKW,MATCH=AOERR1
         CLI   0(R1),C''''         QUOTED OPERANDS ?
         BE    AOPND8              YES
         LR    R4,R1               NO, STRING OPERAND
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R5,R1
         SLR   R5,R4
         CH    R5,=Y(L'STCMDT)
         BH    AOERR3              OPERAND TOO LONG ...
         STC   R5,STCMDL
         BCT   R5,*+L'*+6
         MVC   STCMDT(*-*),0(R4)   <<EXECUTED>>
         EX    R5,*-6
         B     AOPND5
AOPND8   XR    R4,R4
         LA    R5,AUCMD
AOPND9   BXLE  R1,R2,AOPND10+L'AOPND10
         STM   R4,R5,AUQTC
         MVI   AUSCV,2
         B     PRONXT
AOPND10  LM    R4,R5,AUQTC
         CLI   0(R1),C' '          SKIP INITIAL BLANKS AND SEPARATORS
         BE    *+L'*+8
         CLI   0(R1),C';'
         BNE   AOPND12+L'AOPND12
         BXLE  R1,R2,*-16
         B     AOPND9+L'AOPND9     OPERAND QUOTES ERROR
AOPND11  LA    R5,1(R5)
         BXLE  R1,R2,AOPND12+L'AOPND12
         STM   R4,R5,AUQTC
         MVI   AUSCV,3
         B     PRONXT
AOPND12  LM    R4,R5,AUQTC
         CLI   0(R1),C''''
         BE    AOPND16
AOPND13  LA    R4,1(R4)
         CH    R4,=Y(L'STCMDT)
         BH    AOERR3
         MVC   0(1,R5),0(R1)
         CLI   0(R5),C';'          SEPARATOR JUST MOVED ?
         BNE   AOPND11             NO
         MVI   0(R5),C' '          SUPPRESS PREVIOUS BLANKS IF ANY
         BCTR  R4,0
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-8
         MVI   1(R5),C';'
         LA    R4,1(R4)
         LA    R5,2(R5)
AOPND14  BXLE  R1,R2,AOPND15+L'AOPND15
         STM   R4,R5,AUQTC
         MVI   AUSCV,4
         B     PRONXT
AOPND15  LM    R4,R5,AUQTC
         CLI   0(R1),C' '          SKIP UNNEEDED BLANKS AND SEPARATORS
         BE    AOPND14
         CLI   0(R1),C';'
         BE    AOPND14
         B     AOPND12+L'AOPND12
AOPND16  BXLE  R1,R2,AOPND17+L'AOPND17
         STM   R4,R5,AUQTC
         MVI   AUSCV,5
         B     PRONXT
AOPND17  LM    R4,R5,AUQTC
         CLI   0(R1),C''''
         BE    AOPND13
         CLI   0(R1),C' '
         BNE   AOERR4              OPERAND QUOTES ERROR ...
         STC   R4,STCMDL
         LTR   R4,R4
         BNP   AOPND5
         LA    R5,AUCMD-1(R4)
AOPND18  CLI   0(R5),C' '          ELIMINATION OF LAST BLANK(S)
         BE    *+L'*+8
         CLI   0(R5),C';'          ELIMINATION OF LAST SEPARATOR(S)
         BNE   AOPND19
         BCTR  R5,0
         BCT   R4,AOPND18
         MVI   STCMDL,0
         B     AOPND5
AOPND19  STC   R4,STCMDL
         BCT   R4,*+L'*+6
         MVC   STCMDT(*-*),AUCMD   <<EXECUTED>>
         EX    R4,*-6
         B     AOPND5
         SPACE 1
*------- AOCHKW - CHECK KEYWORD ROUTINE
*               R0  : WORK REGISTER
*               R1  : CURRENT TEXT POINTER
*               R2  : TEXT POINTER INCREMENT (DON'T MODIFY IT)
*               R3  : END OF TEXT POINTER
*               R6  : LINK REGISTER - RETURN +0 = NO MATCH
*                                            +4 = OK, MATCH
*                                            +8 = KEYWORDS LIST
*               R7  : WORK REGISTER - AT RETURN +4 (OK) = LENGTH OF
*                                                         KEYWORD-1
*               R15 : WORK REGISTER
*        KEYWORDS LIST :       DC   AL1(L'KW1-1)
*                        KW1   DC   C'...KEYWORD...'
*                        ...   ...  ...
*                              DC   AL1(255) <--- END OF LIST
*        NOTE : YOU MAY USE MACRO @CHKW TO GENERATE THE CALL, THE
*               RETURNS AND THE KEYWORDS LIST.
*               SYNTAX : @CHKW  ...,...,...,   <- ONE OR MORE KEYWORDS
*                               WHERE=AOCHKW,NOMATCH=...,MATCH=...
*                 NOTE : IF NOMATCH= AND/OR MATCH= ARE NOT SPECIFIED,
*                        THEN THE CORRESPONDING BRANCH IS GENERATED TO
*                        CONTINUE IN SEQUENCE.
         SPACE 1
AOCHKW  @GCHKR R1,R3
         SPACE 1
*------- AOVERS - VERIFY KEYWORD ROUTINE
*               R1  : CURRENT TEXT POINTER
*               R14 : LINK REGISTER - RETURN +0 = NO MATCH
*                                            +4 = OK, MATCH
         SPACE 1
AOVERS  @CHKW  IF-ON,WHERE=AOCHKW,MATCH=4(R14)
        @CHKW  IF-OFF,WHERE=AOCHKW,MATCH=4(R14),NOMATCH=AOVERK1
         SPACE 1
*------- AOVERK - VERIFY KEYWORD ROUTINE
*               R1  : CURRENT TEXT POINTER
*               R14 : LINK REGISTER
         SPACE 1
AOVERK  @CHKW  IF-ON,WHERE=AOCHKW,MATCH=AOERR1
        @CHKW  IF-OFF,WHERE=AOCHKW,MATCH=AOERR1
AOVERK1 @CHKW  'T=','TERM=','TERMINAL=',                               X
               WHERE=AOCHKW,MATCH=AOERR1
        @CHKW  'U=','USER=','USERS=',                                  X
               WHERE=AOCHKW,MATCH=AOERR1
        @CHKW  'G=','GROUP=','GROUPS=',                                X
               WHERE=AOCHKW,MATCH=AOERR1
        @CHKW  'P=','PROC=','PROCS=','PROCEDURE=','PROCEDURES=',       X
               WHERE=AOCHKW,MATCH=AOERR1
        @CHKW  'O=','OP=','OPS=','OPND=','OPNDS=','OPERAND=',          X
               'OPERANDS=',WHERE=AOCHKW,NOMATCH=0(R14),MATCH=AOERR1
         SPACE 1
AOERR1   LA    R2,=CL21'SYNTAX ERROR DETECTED'
         B     AOERRB
AOERR2   LA    R2,=CL21'NAME ERROR : TOO LONG'
         B     AOERRB
AOERR3   LA    R2,=CL21'OPERAND TEXT TOO LONG'
         B     AOERRB
AOERR4   LA    R2,=CL21'QUOTES ERROR DETECTED'
         B     AOERRB
AOERR5   ICM   R2,B'0111',=CL3'W-0'
         B     AOERRA
AOERR6   ICM   R2,B'0111',=CL3'V-1'
         B     AOERRA
AOERR7   ICM   R2,B'0111',=CL3'V-2'
         B     AOERRA
AOERR8   ICM   R2,B'0111',=CL3'V-3'
AOERRA   MVC   WKLINE+10(13),=CL13'VALUE (   ) ='
         STCM  R2,B'0111',WKLINE+17
         CVD   R15,WORKD
         MVC   WKLINE+23(8),=XL9'402020202020212040'
         ED    WKLINE+23(8),WORKD+L'WORKD-4
         B     AOERRC
AOERRB   MVC   WKLINE+10(21),0(R2)
AOERRC   LR    R2,R1               SAVE CURRENT POINTER
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+31(28),=CL28' - AUTOMATIC OPERAND FLUSHED'
         LA    R1,WKLINE
         LA    R0,59
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(8),=CL8'SCAN AT '
         LA    R15,WKLINE+18
         ICM   R0,B'1111',AUCDS
         BZ    AOERRD
         MVC   0(4,R15),=CL4'CARD'
         CVD   R0,WORKD
         MVC   4(9,R15),=XL9'402020202020212040'
         ED    4(8,R15),WORKD+L'WORKD-4
         CLI   5(R15),C' '
         BNE   *+L'*+10
         MVC   4(8,R15),5(R15)
         B     *-14
         LA    R15,6(R15)
         CLI   0(R15),C' '
         BE    *+L'*+8
         LA    R15,1(R15)
         B     *-12
         LA    R15,1(R15)
AOERRD   MVC   0(4,R15),=CL4'COL.'
         ICM   R3,B'1111',INCBP    GET CARD POINTER
         SLR   R2,R3
         LA    R2,1(R2)
         CVD   R2,WORKD
         MVC   4(9,R15),=XL9'402020202020212040'
         ED    4(8,R15),WORKD+L'WORKD-4
         CLI   5(R15),C' '
         BNE   *+L'*+10
         MVC   4(8,R15),5(R15)
         B     *-14
         LA    R15,6(R15)
         CLI   0(R15),C' '
         BE    *+L'*+8
         LA    R15,1(R15)
         B     *-12
         LA    R1,WKLINE
         LR    R0,R15
         SLR   R0,R1
        @CALL  PUTLNE
         B     PRAOSQ
         SPACE 1
AOTEOF   CLI   AUSCW,0
         BE    PRAOSEOF            OK
         CLI   AUSCW,4
         BE    PRAOSEOF            OK
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(19),=CL19'SYNTAX ERROR AT END'
         MVC   WKLINE+39(18),=CL18' - OPERAND FLUSHED'
         LA    R1,WKLINE
         LA    R0,47
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(34),=CL34'... SOMETHING MISSING PROBABLY ...'
         LA    R1,WKLINE
         LA    R0,44
        @CALL  PUTLNE
PRAOSQ   LA    R15,4               SET RC=4
         B     PRAOSX
PRAOSEOF LH    R15,=H'-1'          SET RC=-
         B     PRAOSX
PRONXT   XR    R15,R15             SET RC=0
PRAOSX  @EXIT
         DROP  R8
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*            T A B L E S     I N I T I A L I Z A T I O N            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- INITT - GET INTERNAL DEFINITIONS VALUES, AND BUILD
*                DD-NAMES TABLE AND EVENTUAL ALIASES TABLE
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
INITT   @ENTER ,
         L     R3,=A(INWKL)
        GETMAIN R,LV=(R3)
         LR    R8,R1
         LR    R2,R1
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
         USING INWKA,R8
        @IFKW  IDV,S,GOTO=INITXR
        @IFKW  DDT,S,GOTO=INITXR
        @IFKW  ALT,S,ELSE=INITRI0
INITXR   MVI   INOPR,INOPRI        INITIAL
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         SPACE 1
*------- GET INTERNAL DEFINITIONS VALUES
         SPACE 1
INITRI0  XC    INCBP,INCBP
        @IFKW  IDV,S,ELSE=INITRI2
         LA    R1,IDVNME
         MVI   INOPR,INOPRP        POSITION TO MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         TM    INSWS,INSWSM        MEMBER NOT FOUND ?
         BO    INITRI2             YES, LIKE EOF
INITRI1  MVI   INOPR,INOPRR        READ MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         ICM   R1,B'1111',INCBP    MEMBER EOF ?
         BZ    INITRI2             YES, SKIP
         CLI   0(R1),C'*'          NO, COMMENT ?
         BE    INITRI1             YES
INITRI2 @CALL  BLDIDV              NO, PROCESS INTERNAL DEFINITIONS
         LTR   R6,R15              HOW COMPLETE ?
         BZ    INITRI1             OK, CONTINUE
         BM    INITRI3             OK, END
         XC    MXLCIT,MXLCIT       ERROR, SOMETHING WRONG IN MEMBER
         XC    MXALUS,MXALUS
         XC    MXALGR,MXALGR
         B     INEX
INITRI3  L     R14,DDSTART
         L     R15,DDEND
         SLR   R15,R14
         LA    R15,4095(R15)
         SRL   R15,12
         SLL   R15,12
         CL    R15,MXLCIT
         BNH   *+L'*+4
         ST    R15,MXLCIT
         L     R0,MXLCIT
         L     R14,USERSS
         L     R15,USERSE
         SLR   R15,R14
         LA    R15,8(R15)
         SRL   R15,3
         SLL   R15,3
         CL    R15,MXALUS
         BNH   *+L'*+4
         ST    R15,MXALUS
         A     R0,MXALUS
         L     R14,GROUPSS
         L     R15,GROUPSE
         SLR   R15,R14
         LA    R15,8(R15)
         SRL   R15,3
         SLL   R15,3
         CL    R15,MXALGR
         BNH   *+L'*+4
         ST    R15,MXALGR
         A     R0,MXALGR
        GETMAIN R,LV=(0)
         ST    R1,ALIBCIT
         AL    R1,MXLCIT
         ST    R1,ALPTBUA
         AL    R1,MXALUS
         ST    R1,ALPTBGA
         SPACE 1
*------- BUILD DD-NAMES TABLE
         SPACE 1
        @IFKW  DDT,S,GOTO=INITRD1
         L     R14,DDSTART
         L     R15,DDEND
         SLR   R15,R14
         L     R0,ALIBCIT
         LR    R1,R0
         ALR   R1,R15
         ST    R1,ALIBCITE
         LR    R1,R15
         MVCL  R0,R14
         B     INITRA0
INITRD1  LA    R1,DDTNME
         MVI   INOPR,INOPRP        POSITION TO MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         TM    INSWS,INSWSM        MEMBER NOT FOUND ?
         BO    INITRD3             YES, LIKE EOF
INITRD2  MVI   INOPR,INOPRR        READ MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         ICM   R1,B'1111',INCBP    MEMBER EOF ?
         BZ    INITRD3             YES, SKIP
         CLI   0(R1),C'*'          NO, COMMENT ?
         BE    INITRD2             YES
INITRD3 @CALL  BLDDDT              NO, PROCESS LIBRARIES TABLE
         LTR   R6,R15              HOW COMPLETE ?
         BZ    INITRD2             CONTINUE
         BP    INEX                ERROR, SOMETHING WRONG IN MEMBER
         SPACE 1
*------- BUILD EVENTUAL ALIASES TABLE
         SPACE 1
INITRA0 @IFKW  ALT,U,ELSE=INITRA1
         L     R14,USERSS
         L     R15,USERSE
         SLR   R15,R14
         LA    R15,1(R15)
         L     R0,ALPTBUA
         LR    R1,R15
         MVCL  R0,R14
         L     R14,GROUPSS
         L     R15,GROUPSE
         SLR   R15,R14
         LA    R15,1(R15)
         L     R0,ALPTBGA
         LR    R1,R15
         MVCL  R0,R14
         B     INXOK
INITRA1 @IFKW  ALT,N,GOTO=INITRA3
         LA    R1,ALTNME
         MVI   INOPR,INOPRP        POSITION TO MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         TM    INSWS,INSWSM        MEMBER NOT FOUND ?
         BO    INITRA3             YES, LIKE EOF
INITRA2  MVI   INOPR,INOPRR        READ MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   INEX                ERROR
         ICM   R1,B'1111',INCBP    MEMBER EOF ?
         BZ    INITRA3             YES, SKIP
         CLI   0(R1),C'*'          NO, COMMENT ?
         BE    INITRA2             YES
INITRA3 @CALL  BLDALT              NO, PROCESS ALIASES TABLE
         LTR   R6,R15              HOW COMPLETE ?
         BZ    INITRA2             CONTINUE
         BP    INEX                ERROR, SOMETHING WRONG IN MEMBER
INXOK    XR    R6,R6               SET RC=0
         TM    SWSTTS,MSGLST
         BZ    INEX
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(19),=CL19'INITIALIZATION DONE'
         LA    R1,WKLINE
         LA    R0,29
        @CALL  PUTLNE
INEX     LR    R1,R8
         L     R0,=A(INWKL)
        FREEMAIN R,A=(1),LV=(0)
         LTR   R15,R6              TEST AND SET RC TO RETURN
         BZ    INITTZ              OK
         OI    SWPRCS,ERREXR       ERROR
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'INITIALIZATION FAILURE'
         LA    R1,WKLINE
         LA    R0,32
        @CALL  PUTLNE
         LR    R15,R6              SET RC TO RETURN
         DROP  R8
INITTZ  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GET INTERNAL DEFINITIONS VALUES                            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- BLDIDV - INTERNAL DEFINITIONS VALUES
*              AT ENTRY : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
*              R8  : INITIALIZATION WORK-AREA POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
*                                                  - = EOF PROCESSED
         SPACE 1
BLDIDV  @ENTER ,
         USING INWKA,R8
         ICM   R1,B'1111',INCBP
         BZ    BLDIEOF             MEMBER EOF
         LA    R3,71(R1)
         LA    R2,1
         CLI   0(R1),C' '
         BNE   *+L'*+8
BLDIDV1  BXLE  R1,R2,*-8
         B     BLDIDVE
         CLI   0(R1),C'*'          COMMENT FOLLOWS
         BE    BLDIDVE
         L     R14,=A(IDVTB)
         XR    R15,R15
IDVSCAN1 CLC   0(2,R14),=AL1(255,255)
         BE    IDVERR1             NOT FOUND, UNKNOWN
         IC    R15,0(R14)
         EX    R15,IDVSCANT
         BE    IDVSCAN2
         LA    R14,6(R14,R15)
         B     IDVSCAN1
IDVSCANT CLC   0(*-*,R1),5(R14)    <<EXECUTED>>
IDVSCAN2 MVC   IDVOPK(L'IDVOPK),1(R14)
         LA    R1,0(R1,R15)
         BXLE  R1,R2,*+L'*+4
         B     IDVERR1             OPERAND NOT ENTIRELY IN CARD
         CLI   0(R1),C' '
         BE    IDVERR1
         MVI   IDVOPL,0
         MVI   IDVOPT,C' '
         MVC   IDVOPT+1(L'IDVOPT-1),IDVOPT
         LR    R14,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R15,R1
         SLR   R15,R14
         CH    R15,=Y(L'IDVOPT)
         BH    IDVERR1             OPERAND TOO LONG
         STC   R15,IDVOPL
         BCT   R15,*+L'*+6
         MVC   IDVOPT(*-*),0(R14)  <<EXECUTED>>
         EX    R15,*-6
         ICM   R14,B'1111',IDVOPK
         BR    R14
         SPACE 1
IDVDMSV  CLI   DMSVN,0
         BNE   IDVERR1             TWICE ENCOUNTERED
         CLI   IDVOPL,L'DMSVN
         BNE   IDVERR1             WRONG VOL.SER.NUMBER
         MVC   DMSVN(L'DMSVN),IDVOPT
         B     BLDIDV1
         SPACE 1
IDVLCIT  LA    R15,MXLCIT
         B     IDVSZ1
IDVALUS  LA    R15,MXALUS
         B     IDVSZ1
IDVALGR  LA    R15,MXALGR
IDVSZ1   OC    0(L'MXALGR,R15),0(R15) OR L'MXALUS, OR L'MXLCIT
         BNZ   IDVERR1             TWICE ENCOUNTERED
         XR    R4,R4
         IC    R4,IDVOPL
         LA    R5,IDVOPT-1(R4)
         CLI   0(R5),C'K'
         BNE   *+L'*+2
         BCTR  R4,0
         CH    R4,=H'5'
         BH    IDVERR1             VALUE TEXT TOO LONG
         BCTR  R4,0
         EX    R4,IDVVLM
         OC    WORKD,=CL8'00000000'
         EX    R4,IDVVLC
         BNE   IDVERR1             NOT NUMERIC VALUE
         EX    R4,IDVVLP
         CVB   R4,WORKD
         LTR   R4,R4
         BNP   IDVERR1             ZERO VALUE
         CLI   0(R5),C'K'
         BNE   *+L'*+8
         SLL   R4,10
         B     *+L'*+12
         LA    R4,7(R4)
         SRL   R4,3
         SLL   R4,3
         ST    R4,0(R15)
         B     BLDIDV1
         SPACE 1
IDVPU    LA    R15,YYPU
         B     IDVUN1
IDVWU    LA    R15,YYWU
         B     IDVUN1
IDVCU    LA    R15,YYCU
         B     IDVUN1
IDVEU    LA    R15,YYEU
IDVUN1   CLI   1(R15),0
         BNE   IDVERR1             TWICE ENCOUNTERED
         CLI   IDVOPL,8
         BH    IDVERR1             WRONG UNIT
         XR    R4,R4
         IC    R4,IDVOPL
         STC   R4,0(R15)
         BCT   R4,*+L'*+6
         MVC   1(*-*,R15),IDVOPT   <<EXECUTED>>
         EX    R4,*-6
         B     BLDIDV1
IDVPV    CLI   YYPV,0
         BNE   IDVERR1             TWICE ENCOUNTERED
         CLI   IDVOPL,L'YYPV
         BNE   IDVERR1             WRONG VOL.SER.NUMBER
         MVC   YYPV(L'YYPV),IDVOPT
         B     BLDIDV1
IDVPA    LA    R15,YYPA
         B     IDVAL1
IDVWA    LA    R15,YYWA
         B     IDVAL1
IDVCA    LA    R15,YYCA
IDVAL1   OC    0(2,R15),0(R15)
         BNZ   IDVERR1             TWICE ENCOUNTERED
         CLI   IDVOPL,3
         BNE   IDVERR1             WRONG ALLOCATION
         CLC   IDVOPT(3),=CL3'CYL'
         BNE   *+L'*+10
         MVC   0(2,R15),=AL2(DALCYL)
         B     BLDIDV1
         CLC   IDVOPT(3),=CL3'TRK'
         BNE   IDVERR1
         MVC   0(2,R15),=AL2(DALTRK)
         B     BLDIDV1
IDVPP    LA    R15,YYPP
         B     IDVVP1
IDVPS    LA    R15,YYPS
         B     IDVVP1
IDVPD    LA    R15,YYPD
         B     IDVVP1
IDVWP    LA    R15,YYWP
         B     IDVVP1
IDVWS    LA    R15,YYWS
         B     IDVVP1
IDVWD    LA    R15,YYWD
         B     IDVVP1
IDVCP    LA    R15,YYCP
         B     IDVVP1
IDVCS    LA    R15,YYCS
         B     IDVVP1
IDVEP    LA    R15,YYEP
         B     IDVVP1
IDVES    LA    R15,YYES
IDVVP1   OC    0(L'YYPP,R15),0(R15) OR L'...
         BNZ   IDVERR1             TWICE ENCOUNTERED
         BAS   R14,IDVCKN
         STCM  R4,B'0111',0(R15)
         B     BLDIDV1
IDVPB    LA    R15,YYPB
         B     IDVBL1
IDVCB    LA    R15,YYCB
IDVBL1   OC    0(L'YYPB,R15),0(R15) OR L'...
         BNZ   IDVERR1             TWICE ENCOUNTERED
         BAS   R14,IDVCKN
         CH    R4,=H'32767'
         BH    IDVERR1
         STCM  R4,B'0011',0(R15)
         B     BLDIDV1
IDVWR    CLI   YYWR+1,0
         BNE   IDVERR1             TWICE ENCOUNTERED
         XR    R4,R4
         IC    R4,IDVOPL
         STC   R4,YYWR
         BCT   R4,*+L'*+6
         MVC   YYWR+1(*-*),IDVOPT  <<EXECUTED>>
         EX    R4,*-6
         B     BLDIDV1
IDVEA    OC    YYEA,YYEA
         BNZ   IDVERR1             TWICE ENCOUNTERED
         BAS   R14,IDVCKN
         CH    R4,=H'32767'
         BH    IDVERR1
         STCM  R4,B'0111',YYEA
         B     BLDIDV1
         SPACE 1
BLDIEOF  L     R1,AINDV
         OC    MXLCIT,MXLCIT
         BNZ   *+L'*+6
         MVC   MXLCIT(L'MXLCIT),0(R1)
         LA    R1,L'MXLCIT(R1)
         OC    MXALUS,MXALUS
         BNZ   *+L'*+6
         MVC   MXALUS(L'MXALUS),0(R1)
         LA    R1,L'MXALUS(R1)
         OC    MXALGR,MXALGR
         BNZ   *+L'*+6
         MVC   MXALGR(L'MXALGR),0(R1)
         LA    R1,L'MXALGR(R1)
         XR    R14,R14
         IC    R14,0(R1)
         CLI   YYPU+1,0
         BNE   *+L'*+10
         MVC   YYPU(*-*),0(R1)
         EX    R14,*-6
         LA    R1,1(R1,R14)
         CLI   YYPV,0
         BNE   *+L'*+6
         MVC   YYPV(L'YYPV),0(R1)
         LA    R1,L'YYPV(R1)
         OC    YYPA,YYPA
         BNZ   *+L'*+6
         MVC   YYPA(L'YYPA),0(R1)
         LA    R1,L'YYPA(R1)
         OC    YYPP,YYPP
         BNZ   *+L'*+6
         MVC   YYPP(L'YYPP),0(R1)
         LA    R1,L'YYPP(R1)
         OC    YYPS,YYPS
         BNZ   *+L'*+6
         MVC   YYPS(L'YYPS),0(R1)
         LA    R1,L'YYPS(R1)
         OC    YYPD,YYPD
         BNZ   *+L'*+6
         MVC   YYPD(L'YYPD),0(R1)
         LA    R1,L'YYPD(R1)
         OC    YYPB,YYPB
         BNZ   *+L'*+6
         MVC   YYPB(L'YYPB),0(R1)
         LA    R1,L'YYPB(R1)
         XR    R14,R14
         IC    R14,0(R1)
         CLI   YYWU+1,0
         BNE   *+L'*+10
         MVC   YYWU(*-*),0(R1)
         EX    R14,*-6
         LA    R1,1(R1,R14)
         OC    YYWA,YYWA
         BNZ   *+L'*+6
         MVC   YYWA(L'YYWA),0(R1)
         LA    R1,L'YYWA(R1)
         OC    YYWP,YYWP
         BNZ   *+L'*+6
         MVC   YYWP(L'YYWP),0(R1)
         LA    R1,L'YYWP(R1)
         OC    YYWS,YYWS
         BNZ   *+L'*+6
         MVC   YYWS(L'YYWS),0(R1)
         LA    R1,L'YYWS(R1)
         OC    YYWD,YYWD
         BNZ   *+L'*+6
         MVC   YYWD(L'YYWD),0(R1)
         LA    R1,L'YYWD(R1)
         XR    R14,R14
         IC    R14,0(R1)
         CLI   YYWR+1,0
         BNE   *+L'*+10
         MVC   YYWR(*-*),0(R1)
         EX    R14,*-6
         LA    R1,1(R1,R14)
         XR    R14,R14
         IC    R14,0(R1)
         CLI   YYCU+1,0
         BNE   *+L'*+10
         MVC   YYCU(*-*),0(R1)
         EX    R14,*-6
         LA    R1,1(R1,R14)
         OC    YYCA,YYCA
         BNZ   *+L'*+6
         MVC   YYCA(L'YYCA),0(R1)
         LA    R1,L'YYCA(R1)
         OC    YYCP,YYCP
         BNZ   *+L'*+6
         MVC   YYCP(L'YYCP),0(R1)
         LA    R1,L'YYCP(R1)
         OC    YYCS,YYCS
         BNZ   *+L'*+6
         MVC   YYCS(L'YYCS),0(R1)
         LA    R1,L'YYCS(R1)
         OC    YYCB,YYCB
         BNZ   *+L'*+6
         MVC   YYCB(L'YYCB),0(R1)
         LA    R1,L'YYCB(R1)
         XR    R14,R14
         IC    R14,0(R1)
         CLI   YYEU+1,0
         BNE   *+L'*+10
         MVC   YYEU(*-*),0(R1)
         EX    R14,*-6
         LA    R1,1(R1,R14)
         OC    YYEA,YYEA
         BNZ   *+L'*+6
         MVC   YYEA(L'YYEA),0(R1)
         LA    R1,L'YYEA(R1)
         OC    YYEP,YYEP
         BNZ   *+L'*+6
         MVC   YYEP(L'YYEP),0(R1)
         LA    R1,L'YYEP(R1)
         OC    YYES,YYES
         BNZ   *+L'*+6
         MVC   YYES(L'YYES),0(R1)
         LA    R1,L'YYES(R1)
         CLI   DMSVN,0
         BNE   *+L'*+6
         MVC   DMSVN(L'DMSVN),0(R1)
         MVI   BLDSW,0             RESET ALL
         LH    R15,=H'-1'          SET RC=-
         B     BLDIDVX
         SPACE 1
IDVERR1  TM    SWSTTS,MSGLST
         BZ    IDVERRB
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(9),=CL9'T. IDV= "'
         CLI   IDVNME,C' '
         BE    *+L'*+10
         MVC   WKLINE+19(8),IDVNME
         B     *+L'*+6
         MVC   WKLINE+19(8),=CL8'========'
         MVC   WKLINE+27(25),=CL25'" / SCAN ERROR AT COLUMN '
         SL    R1,INCBP
         CVD   R1,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+52(2),WORKD+2
         LA    R0,54
         LA    R1,WKLINE
         CLC   1(8,R3),=CL8' '
         BE    IDVERRA
         LR    R14,R0
         LA    R15,0(R1,R14)
         MVC   0(4,R15),=CL4' -> '
         MVC   4(8,R15),1(R3)
         LA    R0,12(R14)
IDVERRA @CALL  PUTLNE
IDVERRB  LA    R15,4               SET RC=4
         B     BLDIDVX
         SPACE 1
*------- IDVCKN - CHECK NUMERIC VALUE
*              R14 : LINK REGISTER
         SPACE 1
IDVCKN   CLI   IDVOPL,5
         BH    IDVERR1             VALUE TEXT TOO LONG
         XR    R4,R4
         IC    R4,IDVOPL
         BCTR  R4,0
         EX    R4,IDVVLM
         OC    WORKD,=CL8'00000000'
         EX    R4,IDVVLC
         BNE   IDVERR1             NOT NUMERIC VALUE
         EX    R4,IDVVLP
         CVB   R4,WORKD
         LTR   R4,R4
         BPR   R14
         B     IDVERR1             ZERO VALUE
         SPACE 1
IDVVLM   MVC   WORKD(*-*),IDVOPT   <<EXECUTED>>
IDVVLC   CLC   WORKD(*-*),IDVOPT   <<EXECUTED>>
IDVVLP   PACK  WORKD,IDVOPT(*-*)   <<EXECUTED>>
         SPACE 1
         DROP  R8
BLDIDVE  XR    R15,R15             SET RC=0
BLDIDVX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         SPACE 1
IDVTB   @OKAT  DMSVOL,IDVDMSV      OPERANDS TABLE
        @OKAT  MXLCIT,IDVLCIT
        @OKAT  MXALUS,IDVALUS
        @OKAT  MXALGR,IDVALGR
        @OKAT  PU,IDVPU
        @OKAT  PV,IDVPV
        @OKAT  PA,IDVPA
        @OKAT  PP,IDVPP
        @OKAT  PS,IDVPS
        @OKAT  PD,IDVPD
        @OKAT  PB,IDVPB
        @OKAT  WU,IDVWU
        @OKAT  WA,IDVWA
        @OKAT  WP,IDVWP
        @OKAT  WS,IDVWS
        @OKAT  WD,IDVWD
        @OKAT  WR,IDVWR
        @OKAT  CU,IDVCU
        @OKAT  CA,IDVCA
        @OKAT  CP,IDVCP
        @OKAT  CS,IDVCS
        @OKAT  CB,IDVCB
        @OKAT  EU,IDVEU
        @OKAT  EA,IDVEA
        @OKAT  EP,IDVEP
        @OKAT  ES,IDVES
        @TEM   ,                   END OF TABLE
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        BUILD DDNAME'S LIBRARIES CONCATENATIONS INFO'S TABLE       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- BLDDDT - BUILD DD-NAMES TABLE
*              AT ENTRY : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
*              R8  : INITIALIZATION WORK-AREA POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
*                                                  - = EOF PROCESSED
         SPACE 1
BLDDDT  @ENTER ,
         USING INWKA,R8
         TM    BLDSW,BLDSWI        INITIALIZATION DONE ?
         BO    BLDDDT1             YES
         L     R5,ALIBCIT
         USING LIBCITD,R5
         USING LIB#DS,R6
         BAS   R14,BLDDSI          INITIALIZE DD-ENTRY
         OI    BLDSW,BLDSWI        SET IT DONE
BLDDDT1  ICM   R1,B'1111',INCBP
         BZ    BLDDEOF             MEMBER EOF
         LA    R3,71(R1)
         LA    R2,1
         CLI   0(R1),C' '
         BNE   *+L'*+8
BLDDDT2  BXLE  R1,R2,*-8
         B     BLDDDTE
         L     R14,=A(DDTTB)
         XR    R15,R15
DDTSCAN1 CLC   0(2,R14),=AL1(255,255)
         BE    DDTERR1             NOT FOUND, UNKNOWN
         IC    R15,0(R14)
         EX    R15,DDTSCANT
         BE    DDTSCAN2
         LA    R14,6(R14,R15)
         B     DDTSCAN1
DDTSCANT CLC   0(*-*,R1),5(R14)    <<EXECUTED>>
DDTSCAN2 MVC   DDTOPK(L'DDTOPK),1(R14)
         LA    R1,0(R1,R15)
         BXLE  R1,R2,*+L'*+4
         B     DDTERR1             OPERAND NOT ENTIRELY IN CARD
         MVI   DDTOPL,0
         MVI   DDTOPT,C' '
         MVC   DDTOPT+1(L'DDTOPT-1),DDTOPT
         CLI   0(R1),C' '
         BE    DDTSCANE
         CLI   0(R1),C'"'
         BNE   DDTSCAN3
         BXLE  R1,R2,*+L'*+4
         B     DDTERR1             OPERAND NOT ENTIRELY IN CARD
         LR    R14,R1
         BXLE  R1,R2,*+L'*+4
         B     DDTERR1             OPERAND NOT ENTIRELY IN CARD
         CLI   0(R1),C'"'
         BNE   *-12
         LR    R15,R1
         BXLE  R1,R2,*+L'*+4
         B     DDTSCAN4
         CLI   0(R1),C' '
         BNE   DDTERR1             NOT FOLLOWED BY A BLANK
         B     DDTSCAN4
DDTSCAN3 LR    R14,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R15,R1
DDTSCAN4 SLR   R15,R14
         CH    R15,=Y(L'DDTOPT)
         BH    DDTERR1             OPERAND TOO LONG
         STC   R15,DDTOPL
         BCT   R15,*+L'*+6
         MVC   DDTOPT(*-*),0(R14)  <<EXECUTED>>
         EX    R15,*-6
DDTSCANE LM    R5,R6,PTRTB
         ICM   R14,B'1111',DDTOPK
         BR    R14
         SPACE 1
DDTPDD   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTPDD1             NO
         BAS   R14,BLDDST          YES, TERMINATE IT
         BAS   R14,BLDDSI          INITIALIZE A NEW DD-ENTRY
         NI    BLDSW,255-BLDSWS    RESET
DDTPDD1  CLI   DDTOPL,0
         BE    DDTERR1             NO DD-NAME
         CLI   DDTOPL,8
         BH    DDTERR1             DD-NAME TOO LONG
         MVC   LIBDDN(L'LIBDDN),DDTOPT
         OI    BLDSW,BLDSWA        SET ACTIVE
         B     BLDDDT2
         SPACE 1
DDTPID   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO, ERROR
         TM    BLDSW,BLDSWS        YES, LIST MUST TERMINATE ?
         BO    DDTERR1             YES, INVALID OPERAND
         CLI   DDTOPL,0
         BE    DDTERR1             NO IDENTIFICATION
         CLI   DDTOPL,20
         BH    DDTERR1             IDENTIFICATION TOO LONG
         CLI   LIBLID,C' '
         BNE   DDTERR1             ID TWICE ENCOUNTERED
         MVC   LIBLID(L'LIBLID),DDTOPT
         B     BLDDDT2
         SPACE 1
DDTPOR   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO, ERROR
         TM    BLDSW,BLDSWS        YES, LIST MUST TERMINATE ?
         BO    DDTERR1             YES, INVALID OPERAND
         CLI   DDTOPL,2
         BNE   DDTERR1             NO OR WRONG DSORG
         CLI   LIBORG,0
         BNE   DDTERR1             DSORG TWICE ENCOUNTERED
         CLC   DDTOPT(2),=CL2'PS'
         BNE   *+L'*+8
         MVI   LIBORG,DS1DSGPS
         B     BLDDDT2
         CLC   DDTOPT(2),=CL2'PO'
         BNE   *+L'*+8
         MVI   LIBORG,DS1DSGPO
         B     BLDDDT2
         CLC   DDTOPT(2),=CL2'DA'
         BNE   DDTERR1             UNSUPPORTED DSORG
         MVI   LIBORG,DS1DSGDA
         B     BLDDDT2
         SPACE 1
DDTPRF   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO, ERROR
         TM    BLDSW,BLDSWS        YES, LIST MUST TERMINATE ?
         BO    DDTERR1             YES, INVALID OPERAND
         CLI   DDTOPL,1
         BNE   DDTERR1             NO OR WRONG RECFM
         CLI   LIBRFM,0
         BNE   DDTERR1             RECFM TWICE ENCOUNTERED
         CLI   DDTOPT,C'F'
         BNE   *+L'*+8
         MVI   LIBRFM,DS1RECFF
         B     BLDDDT2
         CLI   DDTOPT,C'V'
         BNE   *+L'*+8
         MVI   LIBRFM,DS1RECFV
         B     BLDDDT2
         CLI   DDTOPT,C'U'
         BNE   DDTERR1             UNSUPPORTED DSORG
         MVI   LIBRFM,DS1RECFU
         B     BLDDDT2
         SPACE 1
DDTPLR   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO, ERROR
         TM    BLDSW,BLDSWS        YES, LIST MUST TERMINATE ?
         BO    DDTERR1             YES, INVALID OPERAND
         OC    LIBLRL,LIBLRL
         BNZ   DDTERR1             LRECL TWICE ENCOUNTERED
         CLI   DDTOPL,0
         BE    DDTERR1             NO LRECL SPECIFIED
         CLI   DDTOPL,15
         BH    DDTERR1             TOO LONG LRECL SPECIFICATION
         XR    R14,R14
         IC    R14,DDTOPL
         LA    R15,DDTOPT-1(R14)
DDTPLR1  CLI   0(R15),C'0'
         BL    DDTERR1             NOT NUMERIC
         CLI   0(R15),C'9'
         BH    DDTERR1             NOT NUMERIC
         BCTR  R15,0
         BCT   R14,DDTPLR1
         IC    R14,DDTOPL
         BCT   R14,*+L'*+6
         PACK  WORKD,DDTOPT(*-*)   <<EXECUTED>>
         EX    R14,*-6
         CVB   R14,WORKD
         CL    R14,=F'16384'
         BNL   DDTERR1             LRECL VALUE TOO HIGH
         STH   R14,LIBLRL
         B     BLDDDT2
         SPACE 1
DDTPDS   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO
         TM    BLDSW,BLDSWS        LIST MUST TERMINATE ?
         BZ    DDTPDS1             NO, CAN FILL IN
         LA    R6,LIB#LDS(R6)      YES, TERMINATE THIS LIST
         BAS   R14,BLDDSS          INITIALIZE A NEW LIST
DDTPDS1  OI    BLDSW,BLDSWS        SET MUST TERMINATE
         CLI   DDTOPL,0
         BE    BLDDDT2             NULL (TEMPORARY)
         MVC   LIB#DSN,DDTOPT
         B     BLDDDT2
         SPACE 1
DDTPTY   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO
         TM    BLDSW,BLDSWS        LIST MUST TERMINATE ?
         BZ    DDTERR1             NO, OPERAND INVALID
         CLI   DDTOPL,0
         BE    DDTERR1             NO TYPE
         CLI   DDTOPL,4
         BH    DDTERR1             WRONG TYPE
         L     R15,INDTB
DDTPTY1  CLI   0(R15),0
         BE    DDTERR1             UNSUPPORTED TYPE
         CLC   0(INDTB$,R15),DDTOPT
         BE    *+L'*+8
         LA    R15,INDTB#(R15)
         B     DDTPTY1
         OC    LIB#DSI(L'LIB#DSI),INDTB$(R15)
         B     BLDDDT2
         SPACE 1
DDTPOP   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO
         TM    BLDSW,BLDSWS        LIST MUST TERMINATE ?
         BZ    DDTERR1             NO, OPERAND INVALID
         CLI   DDTOPL,1
         BNE   DDTERR1             NO OR WRONG OPT
         L     R15,LFLTB
DDTPOP1  CLI   0(R15),0
         BE    DDTERR1             UNSUPPORTED OPT
         CLC   0(LFLTB$,R15),DDTOPT
         BE    *+L'*+8
         LA    R15,LFLTB#(R15)
         B     DDTPOP1
         OC    LIB#DSF(L'LIB#DSF),LFLTB$(R15)
         B     BLDDDT2
         SPACE 1
DDTPSP   TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR1             NO, ERROR
         CLI   DDTOPL,1
         BNE   DDTERR1             NO OR WRONG SP
         TM    BLDSW,BLDSWS        LIST MUST TERMINATE ?
         BO    DDTPSP2             YES
         OC    LIBSPA,LIBSPA
         BNZ   DDTERR1             SP TWICE ENCOUNTERED
         CLI   DDTOPT,C'C'
         BE    DDTPSP1
         CLI   DDTOPT,C'D'
         BE    DDTPSP1
         CLI   DDTOPT,C'E'
         BE    DDTPSP1
         CLI   DDTOPT,C'T'
         BE    DDTPSP1
         CLI   DDTOPT,C'W'
         BNE   DDTERR1             UNSUPPORTED SP
DDTPSP1  MVC   LIBSPA(L'LIBSPA),=CL8' '
         MVC   LIBSPA(1),DDTOPT
         B     BLDDDT2
DDTPSP2  OC    LIB#DSSA,LIB#DSSA
         BNZ   DDTERR1             SP TWICE ENCOUNTERED
         CLI   DDTOPT,C'P'
         BNE   DDTERR1             UNSUPPORTED SP
         MVC   LIB#DSSA(L'LIB#DSSA),=CL8' '
         MVC   LIB#DSSA(1),DDTOPT
         B     BLDDDT2
         SPACE 1
BLDDEOF  TM    BLDSW,BLDSWA        ENTRY ACTIVE ?
         BZ    DDTERR2             NO
         LM    R5,R6,PTRTB         YES, TERMINATE IT
         BAS   R14,BLDDST
         ST    R5,ALIBCITE         SET FINAL ADDRESS
         MVI   BLDSW,0             RESET ALL
         LH    R15,=H'-1'          SET RC=-
         B     BLDDDTX
         SPACE 1
DDTERR1  TM    SWSTTS,MSGLST
         BZ    DDTERRC
         MVC   WKLINE+27(25),=CL25'" / SCAN ERROR AT COLUMN '
         SL    R1,INCBP
         CVD   R1,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+52(2),WORKD+2
         LA    R0,54
         B     DDTERRA
DDTERR2  TM    SWSTTS,MSGLST
         BZ    DDTERRC
         MVC   WKLINE+27(25),=CL25'" / LIBRARIES TABLE EMPTY'
         LA    R0,52
DDTERRA  MVC   WKLINE+10(9),=CL9'T. DDT= "'
         CLI   DDTNME,C' '
         BE    *+L'*+10
         MVC   WKLINE+19(8),DDTNME
         B     DDTERRB
         MVC   WKLINE+19(8),=CL8'========'
         B     DDTERRB
DDTERR3  TM    SWSTTS,MSGLST
         BZ    DDTERRC
         MVC   WKLINE+10(25),=CL25'LIBRARIES TABLE OVERFLOW '
         MVC   WKLINE+35(25),=CL25'(CHECK VALUE OF "MXLCIT")'
         LA    R0,60
DDTERRB  MVC   WKLINE(L'MSID),MSID
         LA    R1,WKLINE
         CLC   1(8,R3),=CL8' '
         BE    *+L'*+22
         LR    R14,R0
         LA    R15,0(R1,R14)
         MVC   0(4,R15),=CL4' -> '
         MVC   4(8,R15),1(R3)
         LA    R0,12(R14)
        @CALL  PUTLNE
DDTERRC  LA    R15,4               SET RC=4
         B     BLDDDTX
         SPACE 1
*------- BLDDSI - INITIALIZE DD-ENTRY + 1 DS-ENTRY
*        BLDDSS - INITIALIZE NEXT DS-ENTRY
*              R5  : DD-NAME ENTRY
*              R6  : DS-NAME LIST ELEMENT
*              R14 : LINK REGISTER
         SPACE 1
BLDDSI   LA    R0,LIBNDS
         CL    R0,ALPTBUA
         BNL   DDTERR3             TABLE OVERFLOW
         XC    LIBSPA,LIBSPA
         MVI   LIBDDN,C' '
         MVC   LIBDDN+1(L'LIBDDN+L'LIBLID-1),LIBDDN
         XC    LIBORG(L'LIBORG+L'LIBRFM+L'LIBLRL),LIBORG
         LA    R6,LIBNDS
BLDDSS   LA    R0,LIB#LDS+L'LIB#DSF$(R6)
         CL    R0,ALPTBUA
         BNL   DDTERR3             TABLE OVERFLOW
         XC    LIB#DSSA(L'LIB#DSSA+L'LIB#DSF+L'LIB#DSI),LIB#DSSA
         MVI   LIB#DSN,C' '
         MVC   LIB#DSN+1(L'LIB#DSN-1),LIB#DSN
         MVC   LIB#DSN(3),=CL3'<T>'
         STM   R5,R6,PTRTB
         BR    R14
         SPACE 1
*------- BLDDST - TERMINATE DD-ENTRY
*              R5  : DD-NAME ENTRY
*              R6  : LAST DS-NAME LIST ELEMENT
*              R14 : LINK REGISTER
         SPACE 1
BLDDST   CLC   LIBLID,=CL20' '     TERMINATE CURRENT DD-ENTRY
         BNE   *+L'*+6
         MVC   LIBLID(3),=CL3'???'
         CLI   LIBORG,DS1DSGDA
         BNE   *+L'*+8
         MVI   LIBRFM,0
         B     *+L'*+8
         CLI   LIBRFM,DS1RECFU
         BNE   *+L'*+6
         XC    LIBLRL,LIBLRL
         LA    R6,LIB#LDS(R6)
         MVC   LIB#DSSA,=AL4(LIB#DSF$)
         LA    R5,L'LIB#DSF$(R6)
         BR    R14
         SPACE 1
         DROP  R5,R6,R8
BLDDDTE  XR    R15,R15             SET RC=0
BLDDDTX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         SPACE 1
DDTTB   @OKAT  DD,DDTPDD           OPERANDS TABLE
        @OKAT  ID,DDTPID
        @OKAT  DSORG,DDTPOR
        @OKAT  RECFM,DDTPRF
        @OKAT  LRECL,DDTPLR
        @OKAT  DS,DDTPDS
        @OKAT  TYPE,DDTPTY
        @OKAT  OPT,DDTPOP
        @OKAT  SP,DDTPSP
        @TEM   ,                   END OF TABLE
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        BUILD USER-ID'S AND GROUPS ALIASES TABLE                   *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- BLDALT - BUILD USER-ID'S/GROUPS TABLE
*              AT ENTRY : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
*              R8  : INITIALIZATION WORK-AREA POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
*                                                  - = EOF PROCESSED
         SPACE 1
BLDALT  @ENTER ,
         USING INWKA,R8
         TM    BLDSW,BLDSWI        INITIALIZATION DONE ?
         BO    BLDALT1             YES
         USING ALDSECT,R5
         L     R5,ALPTBUA          INITIALIZE USERS TABLE
         ST    R5,UTBPT
         MVI   ALNME,0
         L     R5,ALPTBGA          INITIALIZE GROUPS TABLE
         ST    R5,PTRTB
         ST    R5,GTBPT
         MVI   ALNME,0
         AL    R5,MXALGR
         ST    R5,PTRTB+4
         OI    BLDSW,BLDSWI        SET IT DONE
BLDALT1  TM    BLDSW,BLDSWU
         BZ    *+L'*+8
         LM    R5,R6,UTBPT
         B     *+L'*+18
         TM    BLDSW,BLDSWG
         BZ    *+L'*+8
         LM    R5,R6,GTBPT
         B     *+L'*+2
         XR    R5,R5
         ICM   R1,B'1111',INCBP
         BZ    BLDALEOF            MEMBER EOF
         LA    R3,71(R1)
         LA    R2,1
BLDALT2  CLI   0(R1),C' '
         BNE   *+L'*+8
BLDALT3  BXLE  R1,R2,*-8
         B     BLDALTE
         L     R14,=A(ALTTB)
         XR    R15,R15
ALTSCAN1 CLC   0(2,R14),=AL1(255,255)
         BNE   *+L'*+10
         LTR   R5,R5
         BNZ   ALTSCAN4
         B     ALTERR1             NOT FOUND, UNKNOWN
         IC    R15,0(R14)
         EX    R15,ALTSCANT
         BE    ALTSCAN2
         LA    R14,3(R14,R15)
         B     ALTSCAN1
ALTSCANT CLC   0(*-*,R1),2(R14)    <<EXECUTED>>
ALTSCAN2 MVC   ALTOPK(L'ALTOPK),1(R14)
         LA    R1,0(R1,R15)
         XR    R14,R14
         IC    R14,ALTOPK
         SLL   R14,2
         B     *+L'*(R14)
         B     ALTPUS              USER=
         B     ALTPGR              GROUP=
         B     ALTPDD              DDN=
         B     ALTPUN              UNLESS=
ALTSCAN3 MVC   ALTOPS,ALTOPK
         BXLE  R1,R2,BLDALT2
         B     BLDALTE
ALTSCAN4 MVI   ALTOPT,C' '
         MVC   ALTOPT+1(L'ALTOPT-1),ALTOPT
         LR    R14,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R15,R1
         SLR   R15,R14
         CH    R15,=Y(L'ALNME)
         BH    ALTERR1             OPERAND TOO LONG
         BCT   R15,*+L'*+6
         MVC   ALTOPT(*-*),0(R14)  <<EXECUTED>>
         EX    R15,*-6
         XR    R14,R14
         IC    R14,ALTOPS
         SLL   R14,2
         B     *+L'*(R14)
         B     ALTPNA              USER=
         B     ALTPNA              GROUP=
         B     ALTPDN              DDN=
         B     ALTPAL              UNLESS=
         SPACE 1
ALTPUS   LTR   R5,R5
         BZ    ALTPUS1             PREVIOUS ENTRY NOT SET
         CLI   ALNME,0
         BE    ALTERR1             NO NAME
         CLI   ALANM,0
         BE    ALTERR1             NO ALIAS NAME
         CLI   ALNDD,0
         BE    ALTERR1             NO DD-NAME(S)
         TM    BLDSW,BLDSWU
         BZ    *+L'*+10
         LR    R5,R6
         ST    R5,UTBPT
         B     *+L'*+8
         ST    R6,GTBPT
ALTPUS1  L     R5,UTBPT
         NI    BLDSW,255-BLDSWU-BLDSWG
         LA    R6,ALBSL(R5)
         CL    R6,PTRTB
         BNL   ALTERR2
         ST    R6,UTBPT+4
         XC    ALNME(ALBSL),ALNME
         OI    BLDSW,BLDSWU
         B     ALTSCAN3
         SPACE 1
ALTPGR   LTR   R5,R5
         BZ    ALTPGR1             PREVIOUS ENTRY NOT SET
         CLI   ALNME,0
         BE    ALTERR1             NO NAME
         CLI   ALANM,0
         BE    ALTERR1             NO ALIAS NAME
         CLI   ALNDD,0
         BE    ALTERR1             NO DD-NAME(S)
         TM    BLDSW,BLDSWG
         BZ    *+L'*+10
         LR    R5,R6
         ST    R5,GTBPT
         B     *+L'*+8
         ST    R6,UTBPT
ALTPGR1  L     R5,GTBPT
         NI    BLDSW,255-BLDSWU-BLDSWG
         LA    R6,ALBSL(R5)
         CL    R6,PTRTB+4
         BNL   ALTERR3
         ST    R6,GTBPT+4
         XC    ALNME(ALBSL),ALNME
         OI    BLDSW,BLDSWG
         B     ALTSCAN3
         SPACE 1
ALTPDD   LTR   R5,R5
         BZ    ALTERR1             PREVIOUS ENTRY NOT SET
         CLI   ALNME,0
         BE    ALTERR1             NO NAME
         CLI   ALANM,0
         BE    ALTERR1             NO ALIAS NAME
         CLI   ALNDD,0
         BNE   ALTERR1             AGAIN DD-NAME(S)
         B     ALTSCAN3
         SPACE 1
ALTPUN   LTR   R5,R5
         BZ    ALTERR1             PREVIOUS ENTRY NOT SET
         CLI   ALNME,0
         BE    ALTERR1             NO NAME
         CLI   ALANM,0
         BE    ALTERR1             NO ALIAS NAME
         CLI   ALNDD,0
         BE    ALTERR1             NO DD-NAME(S)
         CLI   ALNUN,0
         BNE   ALTERR1             AGAIN UNLESS
         B     ALTSCAN3
         SPACE 1
ALTPNA   CLI   ALNME,0
         BNE   *+L'*+10
         MVC   ALNME(L'ALNME),ALTOPT
         B     BLDALT3
         CLI   ALANM,0
         BNE   ALTERR1             NAME AND ALIAS NAME ALREADY IN
         MVC   ALANM(L'ALANM),ALTOPT
         B     BLDALT3
         SPACE 1
ALTPDN   LA    R0,L'ALDDN(R6)
         TM    BLDSW,BLDSWU
         BZ    *+L'*+12
         CL    R0,PTRTB
         BNL   ALTERR2
         B     *+L'*+8
         CL    R0,PTRTB+4
         BNL   ALTERR3
         XR    R14,R14
         IC    R14,ALNDD
         LA    R14,1(R14)
         CLM   R14,B'0010',=XL1'00'
         BNZ   ALTERR4
         MVC   0(L'ALDDN,R6),ALTOPT
         STC   R14,ALNDD
         LR    R6,R0
         TM    BLDSW,BLDSWU
         BZ    *+L'*+8
         ST    R6,UTBPT+4
         B     BLDALT3
         ST    R6,GTBPT+4
         B     BLDALT3
         SPACE 1
ALTPAL   LA    R0,L'ALUNN(R6)
         TM    BLDSW,BLDSWG
         BO    *+L'*+12
         CL    R0,PTRTB
         BNL   ALTERR2
         B     *+L'*+8
         CL    R0,PTRTB+4
         BNL   ALTERR3
         XR    R14,R14
         IC    R14,ALNUN
         LA    R14,1(R14)
         CLM   R14,B'0010',=XL1'00'
         BNZ   ALTERR5
         MVC   0(L'ALUNN,R6),ALTOPT
         STC   R14,ALNUN
         LR    R6,R0
         TM    BLDSW,BLDSWG
         BO    *+L'*+8
         ST    R6,UTBPT+4
         B     BLDALT3
         ST    R6,GTBPT+4
         B     BLDALT3
         SPACE 1
BLDALEOF LTR   R5,R5               ANY ENTRY ACTIVE ?
         BZ    BLDALX              NO
         CLI   ALNME,0
         BE    ALTERR1             NO NAME
         CLI   ALANM,0
         BE    ALTERR1             NO ALIAS NAME
         CLI   ALNDD,0
         BE    ALTERR1             NO DD-NAME(S)
BLDALX   MVI   BLDSW,0             RESET ALL
         LH    R15,=H'-1'          SET RC=-
         B     BLDALTX
         SPACE 1
ALTERR1  TM    SWSTTS,MSGLST
         BZ    ALTERRB
         MVC   WKLINE+10(9),=CL9'T. ALT= "'
         CLI   ALTNME,C' '
         BE    *+L'*+10
         MVC   WKLINE+19(8),ALTNME
         B     *+L'*+6
         MVC   WKLINE+19(8),=CL8'========'
         MVC   WKLINE+27(25),=CL25'" / SCAN ERROR AT COLUMN '
         SL    R1,INCBP
         CVD   R1,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+52(2),WORKD+2
         LA    R0,54
         B     ALTERRA
ALTERR2  TM    SWSTTS,MSGLST
         BZ    ALTERRB
         MVC   WKLINE+10(25),=CL25'USER-ID''S TABLE OVERFLOW '
         MVC   WKLINE+35(25),=CL25'(CHECK VALUE OF "MXALUS")'
         LA    R0,60
         B     ALTERRA
ALTERR3  TM    SWSTTS,MSGLST
         BZ    ALTERRB
         MVC   WKLINE+10(21),=CL21'GROUPS TABLE OVERFLOW '
         MVC   WKLINE+31(25),=CL25'(CHECK VALUE OF "MXALGR")'
         LA    R0,57
         B     ALTERRA
ALTERR4  TM    SWSTTS,MSGLST
         BZ    ALTERRB
         MVC   WKLINE+10(23),=CL23'DDN= ... LIST OVERFLOW '
         MVC   WKLINE+33(15),=CL15'(MAXIMUM = 255)'
         LA    R0,48
         B     ALTERRA
ALTERR5  TM    SWSTTS,MSGLST
         BZ    ALTERRB
         MVC   WKLINE+10(26),=CL26'UNLESS= ... LIST OVERFLOW '
         MVC   WKLINE+36(15),=CL15'(MAXIMUM = 255)'
         LA    R0,51
ALTERRA  MVC   WKLINE(L'MSID),MSID
         LA    R1,WKLINE
         CLC   1(8,R3),=CL8' '
         BE    *+L'*+22
         LR    R14,R0
         LA    R15,0(R1,R14)
         MVC   0(4,R15),=CL4' -> '
         MVC   4(8,R15),1(R3)
         LA    R0,12(R14)
        @CALL  PUTLNE
ALTERRB  LA    R15,4               SET RC=4
         B     BLDALTX
         SPACE 1
         DROP  R5,R8
BLDALTE  XR    R15,R15             SET RC=0
BLDALTX @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         SPACE 1
ALTTB   @OKIT  USER,TOPUS          OPERANDS TABLE
        @OKIT  GROUP,TOPGR
        @OKIT  DDN,TOPDN
        @OKIT  UNLESS,TOPUN
        @TEM   ,                   END OF TABLE
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*       U S E R ' S     S E L E C T I O N S - D E F A U L T S       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- USRDS - USER'S SELECTION(S) AND/OR DEFAULTS
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
USRDS   @ENTER ,
         L     R1,AWK              PREPARE WORK-AREA
         USING WACOM,R1
         MVC   ZGRNM,GRNM
         MVC   ZUSID,USID
         MVC   ZTDSI,TDSI
         MVC   ZXDSI,XDSI
         MVC   ZSWSTTS,SWSTTS
         NI    ZSWSTTS,TDSPLY
         L     R15,AUSD
        @CALL  ,                   GO DO SELECTIONS/DEFAULTS
         MVC   TDSI,ZTDSI          BACK FROM WORK-AREA
         MVC   XDSI,ZXDSI
         DROP  R1
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                   G E T     C O M M A N D ( S )                   *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- GCMDS - GET COMMAND(S)
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
GCMDS   @ENTER ,
         CLI   STCMDT,C'*'         IS IT AN AUTOMATIC REQUEST ?
         BNE   GCMDT               NO
         SPACE 1
*------- GET COMMAND(S) FROM AUTOMATIC SELECTION
         SPACE 1
         MVI   STCMDL,0
         MVI   STCMDT,C' '
         MVC   STCMDT+1(L'STCMDT-1),STCMDT
        @IFKW  ACS,N,GOTO=GCMDSX
         L     R3,=A(CMWKL)
        GETMAIN R,LV=(R3)
         LR    R8,R1
         LR    R2,R1
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
         USING CMWKA,R8
        @IFKW  ACS,S,GOTO=GCMDAR1
         OI    PASWS,PASWSI        SET INTERNAL TABLE USE
         B     GCMDAR3
GCMDAR1  MVI   INOPR,INOPRI        INITIAL
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   CMEX                ERROR
         LA    R1,ACSNME
         MVI   INOPR,INOPRP        POSITION TO MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   CMEX                ERROR
         TM    INSWS,INSWSM        MEMBER NOT FOUND ?
         BZ    GCMDAR2             NO, OK
         BAS   R6,CMEX             YES, NO COMMAND
GCMDAR2  MVI   INOPR,INOPRR        READ MEMBER
        @CALL  PTLDS
         LTR   R6,R15              HOW COMPLETE ?
         BNZ   CMEX                ERROR
         ICM   R1,B'1111',INCBP    MEMBER EOF ?
         BZ    GCMDAR3             YES, SKIP
         CLI   0(R1),C'*'          NO, COMMENT ?
         BNE   GCMDAR3             NO
         LA    R0,1                YES, COUNT ALSO THIS CARD
         A     R0,PACDS
         ST    R0,PACDS
         B     GCMDAR2
GCMDAR3 @CALL  PRACS               NO, PROCESS AUTOMATIC CMD SEL.
         LTR   R6,R15              HOW COMPLETE ?
         BZ    GCMDAR2             CONTINUE
         BP    CMEX                ERROR, SOMETHING WRONG IN MEMBER
         XR    R6,R6               SET RC=0
CMEX     LR    R1,R8
         L     R0,=A(CMWKL)
        FREEMAIN R,A=(1),LV=(0)
         DROP  R8
         LTR   R6,R6               TEST RC
         BZ    GCMDLS              OK
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(18),=CL18'AUTOMATIC COMMANDS'
         MVC   WKLINE+38(18),=CL18' SELECTION FAILURE'
         LA    R1,WKLINE
         LA    R0,46
        @CALL  PUTLNE
         B     GCMDSE
GCMDLS   TM    SWSTTS,RCLSTX
         BZ    GCMDT
         CLI   STCMDL,0
         BE    GCMDT
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(21),=CL21'AUTOMATIC COMMAND(S) '
         MVC   WKLINE+31(18),=CL18'SUPPLIED (L=   ) :'
         XR    R4,R4
         IC    R4,STCMDL
         CVD   R4,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+43(3),WORKD+1
         LA    R1,WKLINE
         LA    R0,49
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'LSTSCL),LSTSCL
         LA    R1,WKLINE
         LA    R0,10+L'LSTSCL
        @CALL  PUTLNE
         LA    R3,STCMDT
         LA    R5,60
GCMDLL   MVC   WKLINE(L'MSID),MSID
         MVI   WKLINE+10,C' '
         MVC   WKLINE+11(59),WKLINE+10
         CLR   R4,R5
         BNH   *+L'*+6
         LR    R2,R5
         B     *+L'*+2
         LR    R2,R4
         SR    R4,R2
         BCT   R2,*+L'*+6
         MVC   WKLINE+10(*-*),0(R3) <<EXECUTED>>
         EX    R2,*-6
         LA    R3,1(R3,R2)
         LA    R1,WKLINE
         LA    R0,70
        @CALL  PUTLNE
         LTR   R4,R4
         BP    GCMDLL
         SPACE 1
*------- GET COMMAND(S) FROM TERMINAL
         SPACE 1
GCMDT    CLI   STCMDT,C'?'         IS IT ON TERMINAL REQUEST ?
         BNE   GCMDSX              NO
         MVI   STCMDL,0
         MVI   STCMDT,C' '
         MVC   STCMDT+1(L'STCMDT-1),STCMDT
         TM    SWPRCS,BCKGR        IS IT A BACKGROUND RUN ?
         BO    GCMDSX              YES, NO PROMPTING
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(18),=CL18'ENTER COMMAND(S) :'
         LA    R0,28
GCMDTR   LA    R1,WKLINE
        @CALL  PUTLNE
        @CALL  GETLNE
         CH    R15,=H'4'           HOW COMPLETE ?
         BE    GCMDTX              NONE
         BH    GCMDTE              GET ERROR
         LM    R2,R3,GTLITI        OK, HANDLE COMMAND(S)
         CH    R3,=Y(L'STCMDT)     TOO LONG ?
         BNH   GCMDTA              NO
         BAS   R7,GRIBAP           YES, RELEASE INPUT BUFFER
         B     GCMDSE              +0 - ERROR
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'COMMAND(S) TOO LONG - '
         MVC   WKLINE+32(21),=CL21'RE-ENTER COMMAND(S) :'
         LA    R0,53
         B     GCMDTR
GCMDTA   STC   R3,STCMDL
         BCT   R3,*+L'*+6
         MVC   STCMDT(*-*),0(R2)   <<EXECUTED>>
         EX    R3,*-6
GCMDTX   BAS   R7,GRIBAP           RELEASE INPUT BUFFER
         B     GCMDSE              +0 - ERROR
         CLI   STCMDL,1
         BNE   GCMDSX
         CLI   STCMDT,C'*'         IS IT AN AUTOMATIC REQUEST ?
         BE    *+L'*+8             YES
         CLI   STCMDT,C'?'         IS IT ON TERMINAL REQUEST ?
         BNE   GCMDSX              NO
         MVI   STCMDL,0
         MVI   STCMDT,C' '
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(18),=CL18'INVALID COMMAND - '
         MVC   WKLINE+28(21),=CL21'RE-ENTER COMMAND(S) :'
         LA    R0,49
         B     GCMDTR
GCMDTE   BAS   R7,GRIBAP           RELEASE INPUT BUFFER
         B     GCMDSE              +0 - ERROR
         B     GCMDSE
         SPACE 1
*------- GRIBAP - GETLINE RELEASE INPUT BUFFER AFTER PROCESS ROUTINE
*              R7  : LINK REGISTER - RETURN +0 = ERROR
*                                           +4 = OK
         SPACE 1
GRIBAP   LA    R2,GTPBX            ADDRESSABILITY FOR THE GTPB
         USING GTPB,R2
         ICM   R1,B'1111',GTPBIBUF GET ADDRESS OF INPUT BUFFER
         DROP  R2
         BZ    4(R7)               NONE ...
         XR    R0,R0
         ICM   R0,B'0011',0(R1)    INPUT BUFFER LENGTH
         BZ    4(R7)               NONE ...
         AH    R0,=H'7'            ROUND UP TO 8
         SRL   R0,3
         SLL   R0,3
        FREEMAIN RC,LV=(0),A=(1),SP=1
         LTR   R15,R15             HOW COMPLETE ?
         BZ    4(R7)               SUCCESSFULLY ...
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(22),=CL22'GETLINE RELEASE INPUT '
         MVC   WKLINE+32(18),=CL18'BUFFER ERROR - RC='
         CVD   R15,WORKD
         MVC   WORKD(4),=CL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+50(2),WORKD+2
         CLI   WKLINE+50,C' '
         BNE   *+L'*+10
         MVC   WKLINE+50(1),WKLINE+51
         MVI   WKLINE+51,C' '
         LA    R1,WKLINE
         LA    R0,52
        @CALL  PUTLNE
         BR    R7
         SPACE 1
GCMDSE   MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(33),=CL33'COMMAND(S) ABORT - DO IT YOURSELF'
         LA    R1,WKLINE
         LA    R0,43
        @CALL  PUTLNE
         LA    R15,4               SET RC=4 (ERROR)
         B     GCMDSZ
GCMDSX   XR    R15,R15             SET RC=0
GCMDSZ  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        PROCESS AUTOMATIC COMMANDS SELECTION                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- PRACS - AUTOMATIC COMMANDS SELECTION
*              AT ENTRY : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
*              R8  : INITIALIZATION WORK-AREA POINTER
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
*                                                  - = EOF PROCESSED
         SPACE 1
PRACS   @ENTER ,
         USING CMWKA,R8
         TM    PASWS,PASWSI        INTERNAL TABLE USE ?
         BZ    PRACS1              NO
         L     R15,AUTOS           YES, GET SCAN POINTERS
         LM    R1,R3,0(R15)
         OI    PASWS,PASWSN        NEVER START OF A CARD (NO COMMENTS)
         B     PRACS2
PRACS1   ICM   R1,B'1111',INCBP    GET CARD POINTER
         BZ    PATEOF              MEMBER EOF
         LA    R3,71(R1)
         LA    R2,1
         LR    R0,R2               ADD ONE TO CARDS COUNT
         A     R0,PACDS
         ST    R0,PACDS
         NI    PASWS,255-PASWSN    SET START OF A CARD
PRACS2   CLI   0(R1),C' '
         BNE   PRACS4
PRACS3   BXLE  R1,R2,PRACS2
         B     PRANXT
         CLI   0(R1),C' '
         BE    PRACS3
PRANOT   BXLE  R1,R2,*-8
PRANXT   TM    PASWS,PASWSI        INTERNAL TABLE USE ?
         BO    PATEOF              YES
         B     PRACSC              NO, NEXT CARD
PRACS4   TM    PASWS,PASWSN        START OF A CARD ?
         BO    PRWTG               NO
         OI    PASWS,PASWSN        YES, SET START OF CARD DONE
         CLI   0(R1),C'*'          COMMENT FOLLOWS ?
         BNE   PRWTG               NO
         B     PRACSC              YES, SKIP CARD
PRASKP   MVI   PASCW,0             RESTART SCAN TO NEXT IF-
         MVI   PASCV,0
         NI    PAKSW,255-PAKWRZ    RESET ALL KEYWORDS DONE
PRACNT   CLR   R1,R3
         BNH   PRACS3
         B     PRANXT
PRWTG    XR    R15,R15             WHERE TO GO
         IC    R15,PASCW
         CL    R15,PRCWTG
         BH    PAERR5
         SLL   R15,2
         B     PRBWTG(R15)         GO TO
         CNOP  0,4
PRBWTG   B     PRSCO1              = 0
         B     PRSCN1                1
         B     PRTRM0                2
         B     PRCHK0                3
         B     PRSEL0                4
         B     PRCOM0                5
PRCWTG   DC    AL4(((*-PRBWTG)/L'PRBWTG)-1)
         SPACE 1
PRSCO1   TM    SWPRCS,PROFF        SEARCH FOR IF-ON OR IF-OFF
         BO    PRSCO2
        @CHKW  IF-ON,WHERE=PRCHKW,NOMATCH=PRANOT,MATCH=PRSCO3
PRSCO2  @CHKW  IF-OFF,WHERE=PRCHKW,NOMATCH=PRANOT,MATCH=PRSCO3
PRSCO3   MVI   PASCW,1
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     PRANXT
         CLI   0(R1),C' '
         BE    PRACNT
         B     PAERR1              SYNTAX ERROR ...
         SPACE 1
PRSCN1  @CHKW  'T=','TERM=','TERMINAL=',                               X
               WHERE=PRCHKW,MATCH=PRTRM1
        @CHKW  'U=','USER=','USERS=',                                  X
               WHERE=PRCHKW,MATCH=PRUSR1
        @CHKW  'G=','GROUP=','GROUPS=',                                X
               WHERE=PRCHKW,MATCH=PRGRP1
        @CHKW  'P=','PROC=','PROCS=','PROCEDURE=','PROCEDURES=',       X
               WHERE=PRCHKW,MATCH=PRPRC1
         TM    SWPRCS,PROFF
         BO    PRSCN2
        @CHKW  'S=','SEL=','SELECT=',                                  X
               WHERE=PRCHKW,MATCH=PRSEL1
PRSCN2  @CHKW  'C=','CMD=','CMDS=','COMMAND=','COMMANDS=',             X
               WHERE=PRCHKW,MATCH=PRCOM1,NOMATCH=PAERR1
         SPACE 1
PRTRM0   XR    R15,R15             WHERE TO GO
         IC    R15,PASCV
         CL    R15,PRCTRM
         BH    PAERR6
         SLL   R15,2
         B     PRBTRM(R15)         GO TO
         CNOP  0,4
PRBTRM   B     PRTRM2              = 0
PRCTRM   DC    AL4(((*-PRBTRM)/L'PRBTRM)-1)
PRTRM1   TM    PAKSW,PAKWT         PROCESS TERMINAL
         BO    PAERR1              SYNTAX ERROR ...
         OI    PAKSW,PAKWT
         MVI   PASCW,2
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRTRM2
         MVI   PASCV,0
         B     PRANXT
PRTRM2   BAS   R14,PRVERK
        @CHKW  S,SCREEN,D,DISPLAY,WHERE=PRCHKW,MATCH=PRTRM3
        @CHKW  L,B,LINE,BACK,LINES,BACKGROUND,                         X
               WHERE=PRCHKW,NOMATCH=PAERR1
         TM    SWSTTS,TDSPLY       TERMINAL IS A SCREEN ?
         BO    PRASKP              YES, SKIP
         B     PRTRM4              NO, OK
PRTRM3   TM    SWSTTS,TDSPLY       TERMINAL IS A SCREEN ?
         BZ    PRASKP              NO, SKIP
PRTRM4   MVI   PASCW,1             YES, OK
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     PRANXT
         CLI   0(R1),C' '
         BE    PRACNT
         B     PAERR1              SYNTAX ERROR ...
         SPACE 1
PRUSR1   TM    PAKSW,PAKWU         PROCESS USER=
         BO    PAERR1              SYNTAX ERROR ...
         MVC   PANMEL,USIDL
         MVC   PANME,USID
         OI    PAKSW,PAKWU
         B     PRCHK1
PRGRP1   TM    PAKSW,PAKWG         PROCESS GROUP=
         BO    PAERR1              SYNTAX ERROR ...
         MVC   PANMEL,GRNML
         MVC   PANME,GRNM
         OI    PAKSW,PAKWG
         B     PRCHK1
PRPRC1   TM    PAKSW,PAKWP         PROCESS PROCEDURE=
         BO    PAERR1              SYNTAX ERROR ...
         MVC   PANMEL,PNMEL
         MVC   PANME,PNME
         OI    PAKSW,PAKWP
         B     PRCHK1
PRCHK0   XR    R15,R15             WHERE TO GO
         IC    R15,PASCV
         CL    R15,PRCCHK
         BH    PAERR7
         SLL   R15,2
         B     PRBCHK(R15)         GO TO
         CNOP  0,4
PRBCHK   B     PRCHK2              = 0
         B     PRCHK4                1
         B     PRCHK11               2
         B     PRCHK22               3
PRCCHK   DC    AL4(((*-PRBCHK)/L'PRBCHK)-1)
PRCHK1   MVI   PASCW,3
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRCHK2
         MVI   PASCV,0
         B     PRANXT
PRCHK2   BAS   R14,PRVERK
         CLI   0(R1),C'('          MULTIPLE TEST ?
         BE    PRCHK3              YES
         LR    R4,R1               NO, SINGLE
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         BAS   R14,PRCHKR
         B     PRASKP              +0 - CANNOT OR NO MATCH
         MVI   PASCW,1             +4 - OK, MATCH
         B     PRACNT
PRCHK3   BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRCHK4
         MVI   PASCV,1
         B     PRANXT
PRCHK4   BAS   R14,PRVERK
         LR    R4,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+16
         CLI   0(R1),C' '
         BE    *+L'*+8
         CLI   0(R1),C')'
         BNE   *-20
         BAS   R14,PRCHKR
         B     PRCHK10             +0 - CANNOT OR NO MATCH
         B     PRCHK20             +4 - OK, MATCH
PRCHK10  CLR   R1,R3
         BH    *+L'*+20
         CLI   0(R1),C')'          IS IT THE END ?
         BE    PRCHK12             YES
         CLI   0(R1),C' '
         BNE   PRCHK4              CHECK THE NEXT
         BXLE  R1,R2,*-16
         MVI   PASCV,2
         B     PRANXT
PRCHK11  CLI   0(R1),C')'          IS IT THE END ?
         BNE   PRCHK4              NO, CHECK THE NEXT
PRCHK12  BXLE  R1,R2,*+L'*+4
         B     PRASKP
         CLI   0(R1),C' '
         BE    PRASKP
         B     PAERR1              SYNTAX ERROR ...
PRCHK20  CLR   R1,R3
         BNH   PRCHK22
PRCHK21  MVI   PASCV,3
         B     PRANXT
PRCHK22  BAS   R14,PRVERK
         CLI   0(R1),C')'          IS IT THE END ?
         BE    *+L'*+8             YES
         BXLE  R1,R2,PRCHK22
         B     PRCHK21
         MVI   PASCW,1
         BXLE  R1,R2,*+L'*+4
         B     PRANXT
         CLI   0(R1),C' '
         BE    PRACNT
         B     PAERR1              SYNTAX ERROR ...
PRCHKR   LR    R5,R1               CHECK ROUTINE
         SLR   R5,R4               R14 = LINK REGISTER
         CLI   0(R4),C'.'                RETURN +0 = NO MATCH
         BE    PRCHKR1                          +4 = OK, MATCH
         CH    R5,=H'8'
         BH    PAERR2              NAME TOO LONG ...
         MVI   WORKD,C' '
         MVC   WORKD+1(L'WORKD-1),WORKD
         BCT   R5,*+L'*+6
         MVC   WORKD(*-*),0(R4)    <<EXECUTED>>
         EX    R5,*-6
         CLC   PANME,WORKD
         BNER  R14                 +0, NO MATCH
         B     4(R14)              +4, OK, MATCH
PRCHKR1  BCT   R5,*+L'*+4
         B     PAERR1              SYNTAX ERROR ...
         CH    R5,=H'8'
         BH    PAERR2              NAME TOO LONG ...
         CLM   R5,B'0001',PANMEL
         BHR   R14                 +0, CANNOT MATCH
         BCT   R5,*+L'*+6
         CLC   PANME(*-*),1(R4)    <<EXECUTED>>
         EX    R5,*-6
         BNER  R14                 +0, NO MATCH
         B     4(R14)              +4, OK, MATCH
         SPACE 1
PRSEL0   XR    R15,R15             WHERE TO GO
         IC    R15,PASCV
         CL    R15,PRCSEL
         BH    PAERR8
         SLL   R15,2
         B     PRBSEL(R15)         GO TO
         CNOP  0,4
PRBSEL   B     PRSEL2              = 0
         B     PRSEL4                1
         B     PRSEL6                2
PRCSEL   DC    AL4(((*-PRBSEL)/L'PRBSEL)-1)
PRSEL1   TM    PAKSW,PAKWS         PROCESS TERMINAL
         BO    PAERR1              SYNTAX ERROR ...
         OI    PAKSW,PAKWS
         MVI   PASCW,4
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRSEL2
         MVI   PASCV,0
         B     PRANXT
PRSEL2   BAS   R14,PRVERK
         CLI   0(R1),C'('          MULTIPLE TEST ?
         BE    PRSEL3              YES
         LR    R4,R1               NO, SINGLE
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         BAS   R6,PRSELR
         B     PRASKP              +0 - NOT SELECTED, SKIP
         MVI   PASCW,1             +4 - OK, MATCH
         B     PRACNT
PRSEL3   BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRSEL4
         MVI   PASCV,1
         B     PRANXT
PRSEL4   BAS   R14,PRVERK
         LR    R4,R1
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+16
         CLI   0(R1),C' '
         BE    *+L'*+8
         CLI   0(R1),C')'
         BNE   *-20
         BAS   R6,PRSELR
         B     PRASKP              +0 - NOT SELECTED, SKIP
         CLR   R1,R3               +4 - OK, MATCH
         BNH   PRSEL6
PRSEL5   MVI   PASCV,2
         B     PRANXT
PRSEL6   CLI   0(R1),C')'          IS IT THE END ?
         BE    PRSEL7              YES
         CLI   0(R1),C' '          NO, SEARCH THE NEXT
         BNE   PRSEL4
         BXLE  R1,R2,PRSEL6
         B     PRSEL5
PRSEL7   MVI   PASCW,1
         BXLE  R1,R2,*+L'*+4
         B     PRANXT
         CLI   0(R1),C' '
         BE    PRACNT
         B     PAERR1              SYNTAX ERROR ...
PRSELR   LR    R5,R1               CHECK ROUTINE
         SLR   R5,R4               R6 = LINK REGISTER
         CH    R5,=H'4'                 RETURN +0 = NOT SELECTED
         BH    PAERR2                          +4 = OK
         BCTR  R5,0
         XR    R14,R14
         L     R15,SELTB
PRSELR1  CLI   0(R15),255
         BE    PAERR1              SYNTAX ERROR ...
         IC    R14,0(R15)
         CLM   R5,B'0001',0(R15)
         BNE   *+L'*+8
         EX    R5,*+L'*+12
         BE    PRSELR2
         LA    R15,L'LIB#DSI+2(R15,R14)
         B     PRSELR1
         CLC   0(*-*,R4),1(R15)    <<EXECUTED>>
PRSELR2  MVC   TDSI,XDSI
         LA    R15,2(R15,R14)
         NC    TDSI(L'LIB#DSI),0(R15)
         BZR   R6                  +0, NOT SELECTED, SKIP
         B     4(R6)               +4, OK, MATCH
         SPACE 1
PRCOM0   XR    R15,R15             WHERE TO GO
         IC    R15,PASCV
         CL    R15,PRCCOM
         BH    PAERR9
         SLL   R15,2
         B     PRBCOM(R15)         GO TO
         CNOP  0,4
PRBCOM   B     PRCOM2              = 0
         B     PRCOM5                1
         B     PRCOM7                2
         B     PRCOM10               3
         B     PRCOM12               4
PRCCOM   DC    AL4(((*-PRBCOM)/L'PRBCOM)-1)
PRCOM1   MVI   PASCW,5             PROCESS COMMAND
         LA    R1,0(R1,R7)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+12
         CLI   0(R1),C' '
         BE    *-12
         B     PRCOM2
         MVI   PASCV,0
         B     PRANXT
PRCOM2   BAS   R14,PRVERK
         CLI   0(R1),C''''         QUOTED COMMAND ?
         BE    PRCOM3              YES
         LR    R4,R1               NO, STRING COMMAND
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+8
         CLI   0(R1),C' '
         BNE   *-12
         LR    R5,R1
         SLR   R5,R4
         CH    R5,=Y(L'STCMDT)
         BH    PAERR3              COMMAND TOO LONG ...
         STC   R5,STCMDL
         BCT   R5,*+L'*+6
         MVC   STCMDT(*-*),0(R4)   <<EXECUTED>>
         EX    R5,*-6
         B     PATCMD
PRCOM3   XR    R4,R4
         LA    R5,PACMD
PRCOM4   BXLE  R1,R2,PRCOM5+L'PRCOM5
         STM   R4,R5,PAQTC
         MVI   PASCV,1
         B     PRANXT
PRCOM5   LM    R4,R5,PAQTC
         CLI   0(R1),C' '          SKIP INITIAL BLANKS AND SEPARATORS
         BE    *+L'*+8
         CLI   0(R1),C';'
         BNE   PRCOM7+L'PRCOM7
         BXLE  R1,R2,*-16
         B     PRCOM4+L'PRCOM4     COMMAND QUOTES ERROR
PRCOM6   LA    R5,1(R5)
         BXLE  R1,R2,PRCOM7+L'PRCOM7
         STM   R4,R5,PAQTC
         MVI   PASCV,2
         B     PRANXT
PRCOM7   LM    R4,R5,PAQTC
         CLI   0(R1),C''''
         BE    PRCOM11
PRCOM8   LA    R4,1(R4)
         CH    R4,=Y(L'STCMDT)
         BH    PAERR3
         MVC   0(1,R5),0(R1)
         CLI   0(R5),C';'          SEPARATOR JUST MOVED ?
         BNE   PRCOM6              NO
         MVI   0(R5),C' '          SUPPRESS PREVIOUS BLANKS IF ANY
         BCTR  R4,0
         BCTR  R5,0
         CLI   0(R5),C' '
         BE    *-8
         MVI   1(R5),C';'
         LA    R4,1(R4)
         LA    R5,2(R5)
PRCOM9   BXLE  R1,R2,PRCOM10+L'PRCOM10
         STM   R4,R5,PAQTC
         MVI   PASCV,3
         B     PRANXT
PRCOM10  LM    R4,R5,PAQTC
         CLI   0(R1),C' '          SKIP UNNEEDED BLANKS AND SEPARATORS
         BE    PRCOM9
         CLI   0(R1),C';'
         BE    PRCOM9
         B     PRCOM7+L'PRCOM7
PRCOM11  BXLE  R1,R2,PRCOM12+L'PRCOM12
         STM   R4,R5,PAQTC
         MVI   PASCV,4
         B     PRANXT
PRCOM12  LM    R4,R5,PAQTC
         CLI   0(R1),C''''
         BE    PRCOM8
         CLI   0(R1),C' '
         BNE   PAERR4              COMMAND QUOTES ERROR ...
         STC   R4,STCMDL
         LTR   R4,R4
         BNP   PATCMD
         BCT   R4,*+L'*+6
         MVC   STCMDT(*-*),PACMD   <<EXECUTED>>
         EX    R4,*-6
         B     PATCMD
         SPACE 1
*------- PRCHKW - CHECK KEYWORD ROUTINE
*               R0  : WORK REGISTER
*               R1  : CURRENT TEXT POINTER
*               R2  : TEXT POINTER INCREMENT (DON'T MODIFY IT)
*               R3  : END OF TEXT POINTER
*               R6  : LINK REGISTER - RETURN +0 = NO MATCH
*                                            +4 = OK, MATCH
*                                            +8 = KEYWORDS LIST
*               R7  : WORK REGISTER - AT RETURN +4 (OK) = LENGTH OF
*                                                         KEYWORD-1
*               R15 : WORK REGISTER
*        KEYWORDS LIST :       DC   AL1(L'KW1-1)
*                        KW1   DC   C'...KEYWORD...'
*                        ...   ...  ...
*                              DC   AL1(255) <--- END OF LIST
*        NOTE : YOU MAY USE MACRO @CHKW TO GENERATE THE CALL, THE
*               RETURNS AND THE KEYWORDS LIST.
*               SYNTAX : @CHKW  ...,...,...,   <- ONE OR MORE KEYWORDS
*                               WHERE=PRCHKW,NOMATCH=...,MATCH=...
*                 NOTE : IF NOMATCH= AND/OR MATCH= ARE NOT SPECIFIED,
*                        THEN THE CORRESPONDING BRANCH IS GENERATED TO
*                        CONTINUE IN SEQUENCE.
         SPACE 1
PRCHKW  @GCHKR R1,R3
         SPACE 1
*------- PRVERK - VERIFY KEYWORD ROUTINE
*               R1  : CURRENT TEXT POINTER
*               R14 : LINK REGISTER
         SPACE 1
PRVERK  @CHKW  IF-ON,WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  IF-OFF,WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'T=','TERM=','TERMINAL=',                               X
               WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'U=','USER=','USERS=',                                  X
               WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'G=','GROUP=','GROUPS=',                                X
               WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'P=','PROC=','PROCS=','PROCEDURE=','PROCEDURES=',       X
               WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'S=','SEL=','SELECT=',                                  X
               WHERE=PRCHKW,MATCH=PAERR1
        @CHKW  'C=','CMD=','CMDS=','COMMAND=','COMMANDS=',             X
               WHERE=PRCHKW,NOMATCH=0(R14),MATCH=PAERR1
         SPACE 1
PAERR1   LA    R2,=CL21'SYNTAX ERROR DETECTED'
         B     PAERRB
PAERR2   LA    R2,=CL21'NAME ERROR : TOO LONG'
         LR    R1,R4
         B     PAERRB
PAERR3   LA    R2,=CL21'COMMAND TEXT TOO LONG'
         B     PAERRB
PAERR4   LA    R2,=CL21'QUOTES ERROR DETECTED'
         B     PAERRB
PAERR5   ICM   R2,B'0111',=CL3'W-0'
         B     PAERRA
PAERR6   ICM   R2,B'0111',=CL3'V-1'
         B     PAERRA
PAERR7   ICM   R2,B'0111',=CL3'V-2'
         B     PAERRA
PAERR8   ICM   R2,B'0111',=CL3'V-3'
         B     PAERRA
PAERR9   ICM   R2,B'0111',=CL3'V-4'
PAERRA   MVC   WKLINE+10(13),=CL13'VALUE (   ) ='
         STCM  R2,B'0111',WKLINE+17
         CVD   R15,WORKD
         MVC   WKLINE+23(8),=XL9'402020202020212040'
         ED    WKLINE+23(8),WORKD+L'WORKD-4
         B     PAERRC
PAERRB   MVC   WKLINE+10(21),0(R2)
PAERRC   LR    R2,R1               SAVE CURRENT POINTER
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+31(28),=CL28' - AUTOMATIC COMMAND FLUSHED'
         LA    R1,WKLINE
         LA    R0,59
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(8),=CL8'SCAN AT '
         LA    R15,WKLINE+18
         ICM   R0,B'1111',PACDS
         BZ    PAERRD
         MVC   0(4,R15),=CL4'CARD'
         CVD   R0,WORKD
         MVC   4(9,R15),=XL9'402020202020212040'
         ED    4(8,R15),WORKD+L'WORKD-4
         CLI   5(R15),C' '
         BNE   *+L'*+10
         MVC   4(8,R15),5(R15)
         B     *-14
         LA    R15,6(R15)
         CLI   0(R15),C' '
         BE    *+L'*+8
         LA    R15,1(R15)
         B     *-12
         LA    R15,1(R15)
PAERRD   MVC   0(4,R15),=CL4'COL.'
         TM    PASWS,PASWSI        INTERNAL TABLE USE ?
         BZ    *+L'*+12            NO
         L     R3,AUTOS            YES, GET SCAN POINTERS
         L     R3,0(R3)
         B     *+L'*+4
         ICM   R3,B'1111',INCBP    GET CARD POINTER
         SLR   R2,R3
         LA    R2,1(R2)
         CVD   R2,WORKD
         MVC   4(9,R15),=XL9'402020202020212040'
         ED    4(8,R15),WORKD+L'WORKD-4
         CLI   5(R15),C' '
         BNE   *+L'*+10
         MVC   4(8,R15),5(R15)
         B     *-14
         LA    R15,6(R15)
         CLI   0(R15),C' '
         BE    *+L'*+8
         LA    R15,1(R15)
         B     *-12
         LA    R1,WKLINE
         LR    R0,R15
         SLR   R0,R1
        @CALL  PUTLNE
         B     PRACSQ
         SPACE 1
PATCMD   CLI   STCMDL,1
         BNE   PRACSEOF
         CLI   STCMDT,C'*'         IS IT AN AUTOMATIC REQUEST ?
         BNE   PRACSEOF            NO
         MVI   STCMDL,0            YES, AGAIN, CANCEL IT
         MVI   STCMDT,C' '
         B     PRACSEOF
PATEOF   CLI   PASCW,0
         BE    PRACSEOF            OK
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(19),=CL19'SYNTAX ERROR AT END'
         MVC   WKLINE+29(18),=CL18' - COMMAND FLUSHED'
         LA    R1,WKLINE
         LA    R0,47
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(34),=CL34'... SOMETHING MISSING PROBABLY ...'
         LA    R1,WKLINE
         LA    R0,44
        @CALL  PUTLNE
PRACSQ   LA    R15,4               SET RC=4
         B     PRACSX
PRACSEOF LH    R15,=H'-1'          SET RC=-
         B     PRACSX
PRACSC   XR    R15,R15             SET RC=0
PRACSX  @EXIT
         DROP  R8
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        PROCESS TABLES LIBRARY DATA-SET (MEMBERS)                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- PTLDS - PROCESS TABLES LIBRARY DATA-SET
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS / RETURN CODE : 0 = OK, DONE
*                                                  4 = ERROR
         SPACE 1
PTLDS   @ENTER ,
         TM    INSWS,INSWSF        FLUSH ?
         BO    PTLDSY              YES
         LA    R7,INDCB
         USING IHADCB,R7
         SPACE 1
*------- INITIAL PROCESS
         SPACE 1
         CLI   INOPR,INOPRI        INITIAL ?
         BNE   PTCHKP              NO
         TM    DCBOFLGS,DCBOFOPN
         BO    PTLDSZ              SKIP, ALREADY OPENED
         LM    R1,R4,=A(TLSOPN,TLSCLS,TLSDCB,TLSDECB) SET SKELETONS
         MVC   INOPN(TLLOPN*4),0(R1)
         MVC   INCLS(TLLCLS*4),0(R2)
         MVC   INDCB(TLLDCB*4),0(R3)
         MVC   INDECB(TLLDECB*4),0(R4)
         MVC   INRXL,=A(INDCBX+X'85000000')
         LA    R1,INRXL
         LA    R2,INRDE
         LA    R3,INRDX
         STCM  R1,B'0111',DCBEXLSA
         STCM  R2,B'0111',DCBSYNA
         STCM  R3,B'0111',DCBEODA
         MVI   DCBDDNAM,255
         MVC   DCBDDNAM+1(L'DCBDDNAM-1),DCBDDNAM
         MVC   DCBDDNAM(L'DCBDDNAM),=CL8'DYLO$IT '
         MVC   WDDN,DCBDDNAM
         BAS   R14,CHKDD           DD ALREADY ALLOCATED ?
         B     *+L'*+8             +0 = NO, ALLOCATE IT
         OI    INSWS,INSWTL        +4 = YES, PRE-ALLOCATED
         B     ININI2
         L     R3,ATLDSN
         LA    R2,USIDL
         BAS   R6,INLOC
         B     ININI1              +0 = OK
         LA    R2,GRNML
         BAS   R6,INLOC
         B     ININI1              +0 = OK
         L     R2,ATLPFX
         BAS   R6,INLOC
         B     ININI1              +0 = OK
         B     PTLDSY
ININI1   L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
        STAX   DEFER=YES           DEFER ALL ATTENTIONS
         LA    R4,XDA08            ALLOCATE DATA-SET
         USING DAPB08,R4
         ST    R4,DAPLDAPB
         XC    0(LDA08,R4),0(R4)
         LA    R1,INDSNL
         ST    R1,DA08PDSN
         MVC   DA08DDN,DCBDDNAM
         MVC   DA08CD,=XL2'0008'
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,=CL8' '
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVC   DA08ALN,=CL8' '
         DROP  R3,R4
         BAS   R14,XDAIR           EXECUTE ALLOCATION
         B     *+L'*+4             +0 = OK
         B     INERR1              +4 = ERROR
        STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         OI    INSWS,INSWSA        SET FILE ALLOCATED
ININI2  OPEN   ((R7),(INPUT)),MF=(E,INOPN)
         TM    DCBOFLGS,DCBOFOPN
         BZ    INERR2              ERROR, OPEN FAILED
         TM    INSWS,INSWSO
         BO    INERR3              ERROR, WRONG LRECL
         LH    R1,DCBBLKSI
         LTR   R1,R1
         BP    *+L'*+4
         L     R1,INLRL
         ST    R1,INBLK
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
        GETMAIN R,LV=(0)
         ST    R1,INSBP            SAVE ADDRESS OF I/O AREA
         B     PTLDSZ
         SPACE 1
*------- FIND MEMBER PROCESS
*        AT ENTRY : R1 = ADDRESS OF MEMBER NAME
         SPACE 1
PTCHKP   CLI   INOPR,INOPRP        POSITION TO MEMBER ?
         BNE   PTCHKR              NO
         NI    INSWS,255-INSWSM    RESET
         XC    INCBP,INCBP
         XC    INEBP,INEBP
         XC    INBLDL(INRZB),INBLDL
         MVC   INBLDL(L'INBLDL),=AL2(1,INRZB)
         MVC   INBNME(L'INBNME),0(R1)   SET MEMBER NAME
        BLDL   (R7),INBLDL
         LTR   R15,R15             TEST COMPLETION CODE
         BZ    INFND1              OK
         LA    R0,4
         CLR   R15,R0
         BNE   INERR4              ERROR, BLDL FAILED
         OI    INSWS,INSWSM        SET MEMBER NOT FOUND
         TM    SWSTTS,MSGLST
         BZ    PTLDSZ
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(8),=CL8'MEMBER "'
         MVC   WKLINE+18(L'INBNME),INBNME
         LA    R14,WKLINE+L'INBNME+17
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(11,R14),=CL11'" NOT FOUND'
         LA    R14,12(R14)
         LA    R0,WKLINE
         SLR   R14,R0
         LR    R0,R14
         LA    R1,WKLINE
        @CALL  PUTLNE
         B     PTLDSZ
INFND1  FIND   (R7),INBTTR,C
         B     PTLDSZ
         SPACE 1
*------- READ MEMBER PROCESS
*        AT EXIT : "INCBP" = LOGICAL RECORD POINTER OR 0 IF EOF
         SPACE 1
PTCHKR   CLI   INOPR,INOPRR        READ MEMBER ?
         BNE   PTCHKE              NO
         ICM   R5,B'1111',INCBP    GET CURRENT POINTER
         BZ    INRDM1              INITIAL
         AL    R5,INLRL            POINTS AT NEXT LOGICAL RECORD
         CL    R5,INEBP            IS BLOCK EXHAUSTED ?
         BL    INRDM2              NO
INRDM1   L     R5,INSBP            YES, AREA ADDRESS
         LA    R4,INDECB           DECB ADDRESS
         USING DECB,R4
        READ   (R4),SF,(R7),(R5),'S',MF=E
        CHECK  (R4)
         TM    INSWS,INSWSR
         BO    INERR5              ERROR, READ FAILED
         L     R0,INBLK            COMPUTE REAL BLOCK LENGTH
         L     R1,DECIOBPT         (IOB ADDRESS)
         DROP  R4
         USING IOBSTDRD,R1
         SH    R0,IOBCSW+5         RESIDUAL COUNT
         DROP  R1
         ALR   R0,R5
         ST    R0,INEBP            SET LAST + 1 POINTER
INRDM2   ST    R5,INCBP            SET CURRENT POINTER
         B     PTLDSZ
         CNOP  0,4
INRDX    XC    INCBP,INCBP         SAY EOF
         B     PTLDSZ
         SPACE 1
*------- FINAL PROCESS
         SPACE 1
PTCHKE   LA    R6,PTLDSZ
         CLI   INOPR,INOPRE        FINAL ?
         BE    INFNL2              YES
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(33),=CL33'INVALID INPUT OPERATION REQUEST ='
         XR    R15,R15
         IC    R15,INOPR
         CVD   R15,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   WKLINE+43(4),WORKD
         LA    R1,WKLINE
         LA    R0,47
        @CALL  PUTLNE
INFNL1   LA    R6,PTLDSY
INFNL2   TM    DCBOFLGS,DCBOFOPN   OPENED ?
         BZ    INFNL3              NO
        CLOSE  ((R7)),MF=(E,INCLS)
INFNL3   TM    INSWS,INSWTL        PRE-ALLOCATED ?
         BO    INFNL4              YES
         TM    INSWS,INSWSA        NO, ALLOCATED ?
         BZ    INFNL4              NO
         NI    INSWS,255-INSWSA    YES, DE-ALLOCATE DATA-SET
         L     R2,CPPLADDR
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA18
         USING DAPB18,R4
         ST    R4,DAPLDAPB
         XC    0(LDA18,R4),0(R4)
         MVC   DA18CD,=XL2'0018'
         MVC   DA18DDN,DCBDDNAM
         MVC   DA18MNM,=CL8' '
         MVC   DA18SCLS(L'DA18SCLS),=CL8' '
         DROP  R3,R4
         BAS   R14,XDAIR           EXECUTE DE-ALLOCATION
         B     INFNL4              +0 = OK, +4 = ERROR
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(L'DCBDDNAM),DCBDDNAM
         LA    R14,WKLINE+L'DCBDDNAM+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(21,R14),=CL21' DE-ALLOCATION FAILED'
         LA    R14,22(R14)
         LA    R1,WKLINE
         SLR   R14,R1
         LR    R0,R14
        @CALL  PUTLNE
         LA    R6,PTLDSY
INFNL4   OI    INSWS,INSWSF
         L     R1,INBLK
         LA    R0,7(R1)
         SRL   R0,3
         SLL   R0,3
         ICM   R1,B'1111',INSBP
         BZR   R6
        FREEMAIN R,A=(1),LV=(0)
         BR    R6
         SPACE 1
INERR1  STAX   DEFER=NO            RESTORE ALL ATTENTIONS
         TM    SWSTTS,MSGLST
         BZ    INFNL1
         MVC   WKLINE+10(L'DCBDDNAM),DCBDDNAM
         LA    R14,WKLINE+L'DCBDDNAM+9
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(18,R14),=CL18' ALLOCATION FAILED'
         LA    R14,19(R14)
         B     INERRB
INERR2   TM    SWSTTS,MSGLST
         BZ    INFNL1
         MVC   WKLINE+28(11),=CL11'OPEN FAILED'
         LA    R0,39
         B     INERRA
INERR3   TM    SWSTTS,MSGLST
         BZ    INFNL1
         MVC   WKLINE+28(12),=CL12'LRECL NOT 80'
         LA    R0,40
INERRA   MVC   WKLINE+10(18),=CL18'TABLES DATA-SET - '
         B     INERRC
INERR4   TM    SWSTTS,MSGLST
         BZ    INFNL1
         MVC   WKLINE+10(6),=CL6'BLDL "'
         MVC   WKLINE+16(L'INBNME),INBNME
         LA    R14,WKLINE++L'INBNME+15
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(12,R14),=CL12'" FAILED RC='
         ST    R15,WORKD
         UNPK  13(5,R14),WORKD+2(3)
         LA    R14,17(R14)
         B     INERRB
INERR5   TM    SWSTTS,MSGLST
         BZ    INFNL1
         MVC   WKLINE+10(8),=CL8'MEMBER "'
         MVC   WKLINE+18(L'INBNME),INBNME
         LA    R14,WKLINE+L'INBNME+17
         CLI   0(R14),C' '
         BNE   *+L'*+4
         BCT   R14,*-8
         MVC   1(12,R14),=CL12'" READ ERROR'
         LA    R14,13(R14)
INERRB   LA    R0,WKLINE
         SLR   R14,R0
         LR    R0,R14
INERRC   MVC   WKLINE(L'MSID),MSID
         LA    R1,WKLINE
        @CALL  PUTLNE
         B     INFNL1
         SPACE 1
*------- READ ERROR ROUTINE (READ PROCESSING)
         SPACE 1
INRDE    OI    INSWS,INSWSR        SET READ ERROR SWITCH
         BR    R14
         SPACE 1
         DROP  R7
         SPACE 1
*------- DCB EXIT ROUTINE (OPEN PROCESSING)
         SPACE 1
         CNOP  0,4
         USING IHADCB,R1
INDCBX   TM    DCBRECFM,DCBRECF    TEST IF RECORD FORMAT FIXED
         BZ    INDCBE
         TM    DCBRECFM,DCBRECV
         BO    INDCBE
         LA    R3,80               LOGICAL RECORD LENGTH MUST BE 80
         LH    R2,DCBLRECL
         LTR   R2,R2
         BP    *+L'*+10
         LH    R2,DCBBLKSI
         LTR   R2,R2
         BNP   INDCBE
         CLR   R2,R3
         BNE   INDCBE
         ST    R2,INLRL
         BR    R14
INDCBE   OI    INSWS,INSWSO        SET OPEN ERROR SWITCH
         BR    R14
         DROP  R1
         SPACE 1
*------- INLOC - LOCATE DATA-SET ROUTINE
*              R0  : WORK REGISTER
*              R1  : WORK REGISTER
*              R2  : PREFIX POINTER
*              R3  : REST OF NAME POINTER
*              R6  : LINK REGISTER / RETURN : +0 = OK, LOCATED
*                                             +4 = NOT LOCATED
*              R14 : WORK REGISTER
*              R15 : WORK REGISTER
*        AT RETURN +0 : "INDSNL" AND "INDSN" BUILDED
         SPACE 1
INLOC    LA    R15,INDSN
         MVI   0(R15),C' '
         MVC   1(L'INDSN-1,R15),0(R15)
         XR    R1,R1
         IC    R1,0(R2)
         LTR   R0,R1
         BNP   4(R6)
         BCT   R1,*+L'*+6
         MVC   0(*-*,R15),1(R2)    <<EXECUTED>>
         EX    R1,*-6
         ALR   R15,R0
         IC    R1,0(R3)
         AR    R0,R1
         STH   R0,INDSNL
         BCT   R1,*+L'*+6
         MVC   0(*-*,R15),1(R3)    <<EXECUTED>>
         EX    R1,*-6
         MVC   CAMLST1(LCAML1),CAML1
         LA    R1,INDSN
         ST    R1,CAMLST1+4
         LA    R1,LOCAREA
         ST    R1,CAMLST1+12
         XC    LOCAREA(256),LOCAREA
         XC    LOCAREA+256(L'LOCAREA-256),LOCAREA+256
        LOCATE CAMLST1
         LTR   R15,R15
         BZR   R6                  GO BACK
         TM    SWSTTS,MSGLST
         BZ    4(R6)
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(12),=CL12'NO DATA-SET '
         LA    R14,WKLINE+22
         XR    R1,R1
         ICM   R1,B'0011',INDSNL
         BCT   R1,*+L'*+6
         MVC   0(*-*,R14),INDSN    <<EXECUTED>>
         EX    R1,*-6
         LA    R14,1(R14,R1)
         MVC   0(12,R14),=CL12' / LOC.RC=  '
         CVD   R15,WORKD
         MVC   WORKD(4),=XL4'40212020'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   10(2,R14),WORKD+2
         LA    R0,12(R14)
         LA    R1,WKLINE
         SLR   R0,R1
        @CALL  PUTLNE
         B     4(R6)
         SPACE 1
PTLDSY   LA    R15,4               SET RC=4
         B     PTLDSX
PTLDSZ   XR    R15,R15             SET RC=0
PTLDSX  @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        TABLES LIBRARY DATA-SET SKELETONS                          *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
TLSOPN  OPEN   (*-*),MF=L
TLLOPN   EQU   ((*-TLSOPN)+3)/4
TLSCLS  CLOSE  (*-*),MF=L
TLLCLS   EQU   ((*-TLSCLS)+3)/4
TLSDCB  DCB    DSORG=PO,DEVD=DA,MACRF=(R),BFALN=D,                     X
               EXLST=*-*,SYNAD=*-*,EODAD=*-*,DDNAME=........
TLLDCB   EQU   ((*-TLSDCB)+3)/4
         SPACE 1
        READ   TLSDECB,SF,,,'S',MF=L
TLLDECB  EQU   ((*-TLSDECB)+3)/4
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        DISPLAY PROGRAM'S INTERRPUTS                               *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- XPPIE - DISPLAY PIE INFORMATION
*              R14 : LINK REGISTER
*              R15 : ENTRY ADDRESS
         SPACE 1
XPPIE   @ENTER ,
         NI    SWSTTS,255-DSPPIE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(6),=CL6'PSW = '
         UNPK  WKLINE+16(9),PIEPSW(5)
         NC    WKLINE+16(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+16(8),HXTB
         UNPK  WKLINE+24(9),PIEPSW+4(5)
         NC    WKLINE+24(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+24(8),HXTB
         MVC   WKLINE+32(7),=CL7' ILC = '
         UNPK  WKLINE+39(5),PIEILC(L'PIEILC+1)
         NC    WKLINE+39(4),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+39(4),HXTB
         MVC   WKLINE+43(7),=CL7' INC = '
         UNPK  WKLINE+50(5),PIEINC(L'PIEINC+1)
         NC    WKLINE+50(4),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+50(4),HXTB
         MVC   WKLINE+54(7),=CL7' P/F = '
         UNPK  WKLINE+61(9),PIEPGF(L'PIEPGF+1)
         NC    WKLINE+61(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    WKLINE+61(8),HXTB
         MVI   WKLINE+69,C' '
         LA    R0,70
         LA    R1,WKLINE
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(9),=CL9'R0 -R3 = '
         LA    R3,PIEGRP
         LA    R2,4
         LA    R1,WKLINE+19
         BAS   R14,XPPREGS
         LA    R0,61
         LA    R1,WKLINE
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(9),=CL9'R4 -R7 = '
         LA    R2,4
         LA    R1,WKLINE+19
         BAS   R14,XPPREGS
         LA    R0,61
         LA    R1,WKLINE
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(9),=CL9'R8 -R11= '
         LA    R2,4
         LA    R1,WKLINE+19
         BAS   R14,XPPREGS
         LA    R0,61
         LA    R1,WKLINE
        @CALL  PUTLNE
         MVC   WKLINE(L'MSID),MSID
         MVC   WKLINE+10(9),=CL9'R12-R15= '
         LA    R2,4
         LA    R1,WKLINE+19
         BAS   R14,XPPREGS
         LA    R0,61
         LA    R1,WKLINE
        @CALL  PUTLNE
         B     XPPIEX
         SPACE 1
XPPREGS  UNPK  0(9,R1),0(5,R3)     LINK = R14
         NC    0(8,R1),=XL8'0F0F0F0F0F0F0F0F'
         TR    0(8,R1),HXTB
         LA    R1,8(R1)
         LA    R3,4(R3)
         BCT   R2,XPPREGS1
         MVI   0(R1),C' '
         BR    R14
XPPREGS1 MVC   0(3,R1),=CL3' - '
         LA    R1,3(R1)
         B     XPPREGS
         SPACE 1
XPPIEX   XR    R15,R15             SET RC=0
        @EXIT
         SPACE 1
        LTORG
         SPACE 1
*------- END OF R9 LOCAL BASE REGISTER ADDRESSABILITY --------------*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*              D Y N A M I C     W O R K  -  A R E A S              *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*------- WORK-AREA DESCRIPTION
         SPACE 1
        PRINT  &PRS
WKAREA   DSECT
         DS    (MXSTN*18)F         SAVE AREAS TANK
         SPACE 1
WORKD    DS    5D
SVLINK   DS    F
OLDPICA  DS    3F
         SPACE 1
TANKMX   DS    PL2
TANKNO   DS    PL2
         SPACE 1
         DS    0F
EXTR     DS    (EXTRLEN)X
ATIOT    DS    A - - - - - - - - - +
ATSO     DS    A                   +
APSCB    DS    A                   + - EXTRACT PARM LIST
ATCB     DS    A
         DS    0F
ESPLST   DS    (ESPLSTL)X
         DS    0F
ESM      DS    (ESML)X
         DS    0F
RPM      DS    (RPML)X
AWK      DS    A
VCOMS   @VCOM  ,
ALIBCIT  DS    A
ALIBCITE DS    A
ATBDS    DS    A
ALPTBUA  DS    A
ALPTBGA  DS    A
CPPLADDR DS    A
OPLGTH   DS    F - - - - - - - - - +
OPADDR   DS    A                   + - OPERANDS AREA
REQSP78  DS    2F
         SPACE 1
GTMN     DS    0F,(GTMNLEN)X
STPBX    DS    0F,(STPBLEN)X       STACK PARM BLOCK
PTPBX    DS    0F,(PTPBLEN)X       PUTLINE PARM BLOCK
GTPBX    DS    0F,(GTPBLEN)X       GETLINE PARM BLOCK
IOPLX    DS    0F,(IOPLLEN)X       PUTLINE/GETLINE/STACK I-O PARM LIST
ECBX     DS    F                   ECB FOR PUTLINE/GETLINE/STACK
GTLITI   DS    2F                  GETLINE INPUT TEXT INFORMATION
MSGWORK  DS    0CL84          PUTLINE WORK USE
MSGCNTL  DS    F                   CONTROL WORD FOR PUTLINE
MSGOUT   DS    CL80                PUTLINE TEXT
         SPACE 1
         DS    0F
CAMLST1  DS    (LCAML1)X
         DS    0D
LOCAREA  DS    0XL272
         DS    XL2            VOLUMES COUNT
LOCAU01  DS    XL4            1ST VOLUME - DEVICE TYPE
LOCAV01  DS    CL6                       - SERIAL NUMBER
         DS    24XL10         FROM 2ND TO 25TH VOLUMES
         DS    XL4,XL16
         DS    0F
CAMLST2  DS    (LCAML2)X
         DS    0D
OBTAREA  DS    XL144
         SPACE 1
XDAPL    DS    0F             DAIR PARM LIST (DAPL)
         DS    (LDAPL)X
DAPLECBS DS    F
XDA08    DS    0F             DAIR ALLOCATE PARM LIST (DAPB08)
         DS    (LDA08)X
XDA0C    DS    0F             DAIR CONCATENATE PARM LIST (DAPB0C)
         DS    (LDA0C)X
DA0CDDN  DS    (MXTBN)CL8
XDA10    DS    0F             DAIR DECONCATENATE PARM LIST (DAPB10)
         DS    (LDA10)X
XDA18    DS    0F             DAIR DE-ALLOCATE BY DSNAME BLOCK (DAPB18)
         DS    (LDA18)X
XDA1C    DS    0F             DAIR ALLOCATE TO TERMINAL (DAPB1C)
         DS    (LDA1C)X
XDFDA    DS    0F             DAIR FAILURE PARM LIST
         DS    (DFLEN)X
RETC     DS    F
         SPACE 1
WKLINE   DS    CL80
         SPACE 1
WLDS     DS    H - - - - - - - - - +
WDSN     DS    CL44                + - DSNAME ARGUMENT
WLID     DS    CL20
WLDD     DS    H
WDDN     DS    CL8
WLRL     DS    H
WBLK     DS    H
WORG     DS    XL1
WRFM     DS    XL1
         SPACE 1
NTBDS    DS    H
CMNME    DS    CL8
USIDL    DS    XL1 - - - - - - - - +
USID     DS    CL8                 + - USER-ID
GRNML    DS    XL1 - - - - - - - - +
GRNM     DS    CL8                 + - GROUP
UNMEL    DS    XL1   - - - - - - - +
UNME     DS    CL20                + - USER NAME
PNMEL    DS    XL1 - - - - - - - - +
PNME     DS    CL8                 + - PROCEDURE
TRSNL    DS    XL1 - - - - - - - - +
TRSN     DS    CL8                 + - TERMINAL-ID
PRFXL    DS    XL1 - - - - - - - - +
PRFX     DS    CL8                 + - PREFIX
AOSNME   DS    CL8
IDVNME   DS    CL8
DDTNME   DS    CL8
ALTNME   DS    CL8
ACSNME   DS    CL8
OBTVOL   DS    CL6
SWPRCS   DS    XL1
PROFF    EQU   X'80'               OFF PROCESS
BCKGR    EQU   X'40'               TSO BACKGROUND RUNNING
ERREXR   EQU   X'04'               ERROR(S) EXIT REQUEST
ABTEXR   EQU   X'02'               ABORT EXIT REQUEST
TABPERR  EQU   X'01'               TSB -> ASCB BACK POINTER ERROR
SWSTTS   DS    XL1
MSGLST   EQU   X'80'               MESSAGES LIST
RCLSTX   EQU   X'40'               LIST RETURN CODE BEFORE EXIT
WIZARD   EQU   X'08'               SENIOR SYSTEM PROGRAMMER
DSPPIE   EQU   X'04'               DISPLAY PIE
TRDSAB   EQU   X'02'               TRACE DSABRS01/DSABOPCT
TDSPLY   EQU   X'01'               TERMINAL IS A SCREEN
AUFLGS   DS    XL1
AUKWRJ   EQU   X'80'               AUTO KEYWORD REJECT
ALLORJ   EQU   X'40'               ALL OPERANDS REJECT
         SPACE 1
STFLGS   DS    XL1                 DSAB-FLAGS WORK-BYTE
TDSI     DS    XL(L'LIB#DSI)
WDSI     DS    XL(L'LIB#DSI)
XDSI     DS    XL(L'LIB#DSI)
         SPACE 1
KWLIST   DS    XL1 - - - - - - - - +
KWAUTO   DS    XL1                 +
KWIDV    DS    XL1                 +
KWDDT    DS    XL1                 +
KWALT    DS    XL1                 +
KWACS    DS    XL1                 +
KWCMD    DS    XL1                 +
AUKCHK   EQU   *-KWAUTO            + - AUTO OPERANDS CHECK
KWTYPE   DS    XL1                 +
KWDSAB   DS    XL1                 +
STCMDL   DS    XL1                 +
STCMDT   DS    XL255               + - COMMAND OPERANDS / KEYWORDS
         SPACE 1
MXLCIT   DS    F - - - - - - - - - +
MXALUS   DS    F                   +
MXALGR   DS    F                   +
YYPU     DS    XL1,CL8             +
YYPV     DS    CL6                 +
YYPA     DS    XL2                 +
YYPP     DS    XL3                 +
YYPS     DS    XL3                 +
YYPD     DS    XL3                 +
YYPB     DS    XL2                 +
YYWU     DS    XL1,CL8             +
YYWA     DS    XL2                 +
YYWP     DS    XL3                 +
YYWS     DS    XL3                 +
YYWD     DS    XL3                 +
YYWR     DS    XL1,CL44            +
YYCU     DS    XL1,CL8             +
YYCA     DS    XL2                 +
YYCP     DS    XL3                 +
YYCS     DS    XL3                 +
YYCB     DS    XL2                 +
YYEU     DS    XL1,CL8             +
YYEA     DS    XL3                 +
YYEP     DS    XL3                 +
YYES     DS    XL3                 +
DMSVN    DS    CL6                 + - INTERNAL DEFINITIONS VALUES
         SPACE 1
INLRL    DS    F                   MAX. LOGICAL RECORD LENGTH
INBLK    DS    F                   BLOCK SIZE LENGTH
INSBP    DS    A                   ADDRESS OF AREA TO HOLD ONE BLOCK
INEBP    DS    F                   END OF BLOCK POSITION
INCBP    DS    F                   CURRENT BLOCK POSITION
INOPR    DS    XL1                 OPERATION REQUEST
INOPRI   EQU   0                        INITIAL
INOPRP   EQU   1                        POSITION TO MEMBER
INOPRR   EQU   2                        READ MEMBER
INOPRE   EQU   255                      FINAL
INSWS    DS    XL1                 FLAGS BYTE
INSWTL   EQU   X'80'                    TABLES LIBRARY PRE-ALLOCATED
INSWSF   EQU   X'40'                    FLUSH ALL REQUESTS
INSWSA   EQU   X'10'                    FILE ALLOCATED
INSWSO   EQU   X'08'                    OPEN ERROR
INSWSR   EQU   X'04'                    READ ERROR
INSWSM   EQU   X'02'                    MEMBER NOT FOUND
         SPACE 1
INDSNL   DS    H
INDSN    DS    XL44
         SPACE 1
INBLDL   DS    F
INBNME   DS    CL8
INBTTR   DS    XL6,XL40
INRZB    EQU   *-INBLDL
         SPACE 1
INRXL    DS    F
INOPN    DS    (TLLOPN)F
INCLS    DS    (TLLCLS)F
INDCB    DS    (TLLDCB)F
INDECB   DS    (TLLDECB)F
         SPACE 1
PIEAR    DS    0XL80               (SEE EPIE DSECT / IHAEPIE)
PIEGRP   DS    16XL4
PIEPSW   DS    XL8
PIEILC   DS    XL2
PIEINC   DS    XL2
PIEPGF   DS    XL4
         SPACE 1
        @S99L  ,                   SVC 99 RB
         SPACE 1
*-+-+-+- END OF WORK-AREA DIRECT ADDRESSABILITY  -+-+-+-+-+-+-+-+-+-*
         SPACE 1
RBTP     DS    (MXRBTP)F           POINTERS TO SVC99 TEXT UNITS
DRBTP    EQU   RBTP-WKAREA
LRBTP    EQU   *-RBTP
         SPACE 1
RBTU     DS    (MXRBTU)X           SVC99 TEXT UNITS
DRBTU    EQU   RBTU-WKAREA
LRBTU    EQU   (((*-RBTU)+7)/8)*8
         SPACE 1
TBDS     DS    0F
         DS    (MXTBN)CL(TBDSLEN)
DTBDS    EQU   TBDS-WKAREA
         SPACE 1
WKLEN    EQU   (((*-WKAREA)+7)/8)*8
         EJECT
*------- AUTOMATIC OPERANDS SELECTION WORK-AREA DESCRIPTION
         SPACE 1
AUWKA    DSECT
AUPOP    DS    2F
AUQTC    DS    2F
AUCDS    DS    F                   CARDS COUNT
AUNME    DS    CL8                 CHECK NAME
AUNMEL   DS    XL1                 CHECK NAME LENGTH
AUSCW    DS    XL1                 1ST SCAN WHERE TO GO BACK
AUSCV    DS    XL1                 2ND SCAN WHERE TO GO BACK
AUSWS    DS    XL1                 FLAGS BYTE
AUSWSN   EQU   X'80'                    NOT START OF CARD
AUKSW    DS    XL1                 FLAGS BYTE
AUKWU    EQU   X'80'                    KEYWORD U=... DONE
AUKWG    EQU   X'40'                       "    G=... DONE
AUKWP    EQU   X'20'                       "    P=... DONE
AUKWT    EQU   X'10'                       "    T=... DONE
AUKWRZ   EQU   AUKWU+AUKWG+AUKWP+AUKWT
         SPACE 1
AUSOP    DS    CL(L'STCMDT)
AUCMD    DS    CL(L'STCMDT)
         SPACE 1
AUWKL    EQU   (((*-AUWKA)+7)/8)*8
         EJECT
*------- INITIALIZATION WORK-AREA DESCRIPTION
         SPACE 1
INWKA    DSECT
PTRTB    DS    2A
UTBPT    DS    2A
GTBPT    DS    2A
BLDSW    DS    XL1                 FLAGS BYTE
BLDSWI   EQU   X'80'                    INITIALIZATION DONE
BLDSWA   EQU   X'40'                    ENTRY ACTIVE
BLDSWS   EQU   X'20'                    LIST MUST TERMINATE
BLDSWU   EQU   X'40'                    USER ENTRY ACTIVE
BLDSWG   EQU   X'20'                    GROUP ENTRY ACTIVE
IDVOPK   DS    0XL4                OPERAND KEYWORD (ADDRESS)
DDTOPK   DS    XL4
ALTOPK   DS    XL1                 OPERAND KEYWORD (INDEX)
TOPUS    EQU   0                   USER=
TOPGR    EQU   1                   GROUP=
TOPDN    EQU   2                        DDN=
TOPUN    EQU   3                        UNLESS=
IDVOPL   DS    0XL1                OPERAND LENGTH
DDTOPL   DS    0XL1
ALTOPS   DS    XL1                 ACTIVE OPERAND KEYWORD (INDEX)
IDVOPT   DS    0XL44               OPERAND TEXT
DDTOPT   DS    0XL44
ALTOPT   DS    XL44
         SPACE 1
INWKL    EQU   (((*-INWKA)+7)/8)*8
         EJECT
*------- AUTOMATIC COMMANDS SELECTION WORK-AREA DESCRIPTION
         SPACE 1
CMWKA    DSECT
PAQTC    DS    2F
PACDS    DS    F                   CARDS COUNT
PANME    DS    CL8                 CHECK NAME
PANMEL   DS    XL1                 CHECK NAME LENGTH
PASCW    DS    XL1                 1ST SCAN WHERE TO GO BACK
PASCV    DS    XL1                 2ND SCAN WHERE TO GO BACK
PASWS    DS    XL1                 FLAGS BYTE
PASWSI   EQU   X'80'                    USE INTERNAL TABLE
PASWSN   EQU   X'40'                    NOT START OF CARD
PAKSW    DS    XL1                 FLAGS BYTE
PAKWU    EQU   X'80'                    KEYWORD U=... DONE
PAKWG    EQU   X'40'                       "    G=... DONE
PAKWP    EQU   X'20'                       "    P=... DONE
PAKWT    EQU   X'10'                       "    T=... DONE
PAKWS    EQU   X'08'                       "    S=... DONE
PAKWRZ   EQU   PAKWU+PAKWG+PAKWP+PAKWT+PAKWS
         SPACE 1
PACMD    DS    CL(L'STCMDT)
         SPACE 1
CMWKL    EQU   (((*-CMWKA)+7)/8)*8
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*       D A T A     S E C T I O N S     D E S C R I P T I O N       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        PRINT  GEN
        @DD    ,
        @AL    ,
         EJECT
*------- WORK-AREAS COMMUNICATIONS
         SPACE 1
        @WAC   ,
         SPACE 1
*------- DATA-SETS TABLE DSECT
         SPACE 1
TBDSECT  DSECT
TBDDN    DS    CL8                 DD-NAME
TBIND    DS    0XL2                INDICATORS
TBIND1   DS    XL1                 INDICATORS BYTE 1
TBALLDS  EQU   X'80'               DATA-SET IS ALLOCATED
TBIND2   DS    XL1                 INDICATORS BYTE 2
TBSTBLK  EQU   X'80'               SET BLKSIZE (FOR BUFFER)
TBLDS    DS    H - - - - - - - - - + LENGTH OF DS-NAME
TBDSN    DS    CL44                + - - - - - DS-NAME
TBDSLEN  EQU   (((*-TBDSECT)+1)/2)*2 LENGTH OF A TABLE ELEMENT
         EJECT
*------- SYSTEM DSECT'S
         SPACE 1
        PRINT  NOGEN
        CVT    DSECT=YES,LIST=YES
        IKJCPPL
        IKJPSCB
        IKJEBECA
        IKJUPT
        IKJIOPL
IOPLLEN  EQU   *-IOPL
        IKJPTPB
PTPBLEN  EQU   *-PTPB
        IKJGTPB
GTPBLEN  EQU   *-GTPB
        IKJSTPB
STPBLEN  EQU   *-STPB
        IKJLSD
LSDLEN   EQU   *-LSD
        IHAPSA
        IHAPCCA DSECT=YES
        IHAASCB
        IHAASXB
        IHAACEE
TIODSECT DSECT
        IEFTIOT1
        IEFZB502 , - - - - - - - -+
        IEFJFCBN ,                +- SWA CONTROL BLOCK
DSCDSECT DSECT
        IECSDSL1 (1)
        IKJTSB LIST=YES,EXT=YES
        IKJTCB
        IEZJSCB
        IHAQDB
DSAB    IHADSAB
*   ---> DSABRS01 (RESERVED BYTE) <---   ---   ---   ---   ---   ---
OWNDYLO  EQU   X'10'               MY ALLOCATION INDICATOR
TSODYLO  EQU   X'02'               TSO BASIC USE INDICATOR
SYSDYLO  EQU   X'01'               SYSTEM ALLOCATION INDICATOR
        IKJDAPL
LDAPL    EQU   *-DAPL
        IKJDAP08
LDA08    EQU   *-DAPB08
        IKJDAP0C
LDA0C    EQU   *-DAPB0C
        IKJDAP10
LDA10    EQU   *-DAPB10
        IKJDAP18
LDA18    EQU   *-DAPB18
        IKJDAP1C
LDA1C    EQU   *-DAPB1C
        IKJEFFDF DFDSECT=YES
        IEFZB4D0
        IEFZB4D2
        DCBD   DSORG=PO,DEVD=DA
        IHADECB
        IEZIOB
        IHAEPIE
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                O P E R A N D S     K E Y W O R D S                *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        @LSTO  ,
         SPACE 1
         END
