TOPS     TITLE '---  DISPLAY PRIVATE TOP SECRETS TSO COMMAND  ---'
TOPSEC   START 0
         SPACE 1
* PURPOSE :    A TSO COMMAND TO DISPLAY PRIVATE TOP SECRETS.
* ---------    IT DISPLAYS A MEMBER NAMED "USER-ID" FROM A DATA-SET
*              "SHORT-WRITE-UP" (MAY BE PREPARED WITH THE ISPF EDIT
*              AND THEN CRYPTED WITH "SHADOW" UTILITY).
*              SEE AT LABELS "SWUDSN", "KEYW1", "KEYW2" AND "TBNME"
*              IN MODULE "TOPSECT" FOR ALL DEFINITIONS.
*
* SYNTAX :     THE TSO-COMMAND NAME IS ANY ONE OF THOSE DEFINED IN
* --------     THE USER-ID'S TABLE NAMES ("TBNME"), IT ALLOWS TO VIEW
*              THE CORRESPONDING USER-ID SHORT-WRITE-UP.
*              AT THE LINK-EDIT STEP, ALL THIS NAMES MUST BE ALIASES
*              OF THIS MODULE.
*
* WRITTEN BY : MOINIL P.A. - COMPUTING CENTRE
* ------------               J.R.C. - ISPRA ESTABLISHMENT
*                            21020 ISPRA (VA), ITALY
         SPACE 1
         PRINT NOGEN
        $DEFREG
        $XENT  BASE=(R11,R12)
         SPACE 1
*------- INITIALIZATION
         SPACE 1
         LR    R3,R1               SAVE FOR FURTHER USE
         XR    R10,R10             C.C. = 0
         SPACE 1
*------- RECOGNIZE ENVIRONMENT
         SPACE 1
        EXTRACT ATSO,'S',FIELDS=(TSO,PSB)
         L     R1,ATSO
         TM    0(R1),X'80'
         BZ    NOTTSO              NOT TSO ADDRESS SPACE
         L     R2,APSCB            PSCB ADDRESS
         LTR   R2,R2
         BZ    NOTTSO              WE ARE'NT IN TSO
         USING CPPL,R3             SET CPPL ADDRESSABILITY
         USING PSCB,R2
         CLC   PSCBUPT,CPPLUPT     CPPL+4 = UPT ADDRESS?
         BNE   *+L'*+10            NO
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS?
         BE    OK                  YES, TSO COMMAND
         LR    R1,R3
         USING IKJEBECA,R1
         L     R3,CAPTTMP          CPPL ADDRESS
         DROP  R1
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS?
         BNE   NOTCMD              NO, NOT TSO SUB-COMMAND
OK       ST    R3,CPPLADDR
         L     R9,=V(TOPSECT)
         L     R1,0(R9)
         CLC   0(2,R1),ZERO
         BE    ERRTM
         CLC   0(2,R1),=Y(L'NDSN)
         BH    ERRTM
         LM    R0,R1,4(R9)
         CLR   R0,R1
         BNL   ERRTM
         SLR   R1,R0
         CH    R1,=H'16'
         BNE   ERRTM
         SPACE 1
*------- CHECK CALLER
         SPACE 1
         L     R4,CPPLCBUF         COMMAND BUFFER ADDRESS
         DROP  R3
         MVC   CMDNME,=CL8' '
         LH    R1,2(R4)            LENGTH OF COMMAND (=OFFSET)
         CH    R1,=H'8'
         BH    ERRAN
         BCT   R1,*+L'*+6
         OC    CMDNME(*-*),4(R4)   <<EXECUTED>>
         EX    R1,*-6              UPPERCASE COMMAND NAME
         LM    R3,R5,8(R9)
         CH    R4,=H'16'
         BNE   ERRTM
         CLR   R3,R5
         BH    ERRTM
         XR    R15,R15
CHKAUT   CLC   0(L'ZERO,R3),ZERO
         BE    CHKNXT
         LR    R1,R3
         BAS   R14,DECRPT
         MVC   SVEWD,DBLWD
         LA    R1,8(R3)
         BAS   R14,DECRPT
         CLC   CMDNME,DBLWD
         BNE   *+L'*+10
         LA    R15,4(R15)
         MVC   MSNME,SVEWD
         CLC   PSCBUSER(L'PSCBUSER),SVEWD
         BNE   *+L'*+4
         LA    R15,8(R15)
CHKNXT   BXLE  R3,R4,CHKAUT
         DROP  R2
         XC    DBLWD,DBLWD
         XC    SVEWD,SVEWD
         B     *+L'*(R15)
         B     UNEXPT
         B     UNAUTH
         B     UNEXPT
         SPACE 1
*------- ALLOCATE DATA-SET MEMBER
         SPACE 1
         L     R2,CPPLADDR
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA08
         USING DAPB08,R4
         ST    R4,DAPLDAPB
         XC    0(LDA08,R4),0(R4)
         MVC   DA08CD,=XL2'0008'
         L     R2,0(R9)
         LH    R1,0(R2)
         STH   R1,LDSN
         MVI   NDSN,255
         MVC   NDSN+1(L'NDSN-1),NDSN
         BCT   R1,*+L'*+6
         XC    NDSN(*-*),2(R2)     <<EXECUTED>>
         EX    R1,*-6
         LA    R1,LDSN
         ST    R1,DA08PDSN
         MVC   DA08DDN(L'DA08DDN),=CL8'TOPSECM '
         MVC   DA08UNIT,=CL8' '
         MVC   DA08SER,=CL8' '
         MVC   DA08MNM,MSNME
         MVC   DA08PSWD,=CL8' '
         MVI   DA08DSP1,DA08SHR
         MVI   DA08DPS2,DA08KEEP
         MVI   DA08DPS3,DA08KEP
         MVC   DA08ALN,=CL8' '
         BAS   R14,XDAIR
         B     ALLOK               +0 = OK, +4 = ERROR
         MVC   WKLNE(16),=CL36' === DATA-SET ALLOCATION FAILED === '
         LA    R0,36
         B     ERRET
         DROP  R3,R4
         SPACE 1
*------- PROCESS DATA-SET MEMBER
         SPACE 1
ALLOK    LA    R2,DCBRQ
         USING IHADCB,R2
         MVC   DCBDDNAM(L'DCBDDNAM),=CL8'TOPSECM '
        OPEN   (DCBRQ,(INPUT))
         TM    FFLGS,IOABN
         BO    ERRAB
         TM    FFLGS,OPERR
         BO    ERROP
         TM    DCBOFLGS,DCBOFOPN
         BZ    ERROP
         DROP  R2
         LA    R2,ERRIN
        ESPIE  SET,ESPEXIT,((1,15)),PARAM=(R2)
         ST    R1,OLDPICA
         L     R1,4(R9)
         BAS   R14,DECRPT
         MVC   KEYW1,DBLWD
         L     R1,4(R9)
         LA    R1,8(R1)
         BAS   R14,DECRPT
         MVC   KEYW2,DBLWD
         XC    DBLWD,DBLWD
RDNXT    NI    FFLGS,255-IOERR
        GET    DCBRQ,WKLNE+4
         TM    FFLGS,IOERR
         BO    ERRRD
         MVC   WKLNE(4),=CL8' '
         MVC   WKLNE+76(8),=CL8' '
         LA    R1,PLST1
         L     R15,=V(SETKEY)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERRSD
         LA    R1,PLST3
         L     R15,=V(DECIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERRSD
         LA    R1,PLST2
         L     R15,=V(SETKEY)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERRSD
         LA    R1,PLST3
         L     R15,=V(DECIPH)
         BASR  R14,R15
         LTR   R15,R15
         BNZ   ERRSD
         LA    R0,72
         LA    R1,WKLNE+75
         CLI   0(R1),C' '
         BL    ERRDX
         BCTR  R1,0
         BCT   R0,*-10
         LA    R0,76
         LA    R1,WKLNE+4
         BAS   R14,PUTLNE
         TM    FFLGS,PTERR         PUTLINE IN ERROR ...
         BZ    RDNXT               NO
         BO    RDEND               YES
         SPACE 1
RDERR    OI    FFLGS,IOERR
         BR    R14
         SPACE 1
SPINT   ESPIE  RESET,OLDPICA
         BR    R8
         SPACE 1
RDEND    BAS   R8,SPINT
RDCLS   CLOSE  (DCBRQ)
         SPACE 1
*------- DE-ALLOCATE DATA-SET
         SPACE 1
DEALL    L     R2,CPPLADDR
         USING CPPL,R2
         LA    R3,XDAPL
         USING DAPL,R3
         MVC   DAPLUPT,CPPLUPT
         MVC   DAPLECT,CPPLECT
         LA    R1,DAPLECBS
         ST    R1,DAPLECB
         MVC   DAPLPSCB,CPPLPSCB
         DROP  R2
         LA    R4,XDA18
         USING DAPB18,R4
         ST    R4,DAPLDAPB
         XC    0(LDA18,R4),0(R4)
         MVC   DA18CD,=XL2'0018'
         MVC   DA18DDN(L'DA18DDN),=CL8'TOPSECM '
         MVC   DA18MNM,=CL8' '
         MVC   DA18SCLS(L'DA18SCLS),=CL8' '
         DROP  R3,R4
         BAS   R14,XDAIR
         B     LEAVE               +0 = OK, +4 = ERROR
         MVC   WKLNE(39),=CL39' === DATA-SET DE-ALLOCATION FAILED === '
         LA    R0,39
ERRET    LA    R1,WKLNE
         BAS   R14,PUTLNE
         SPACE 1
*------- TERMINATION
         SPACE 1
         LA    R10,8               C.C. = 8
LEAVE   $XRET  CC=(R10)
         EJECT
*------- DIAGNOSTIC'S MESSAGES
         SPACE 1
NOTCMD   MVC   MSGOUT(26),=CL16' === CALL NOT ALLOWED === '
         LA    R0,26
         LA    R1,MSGOUT
        TPUT   (1),(0)
ERREX    LA    R10,8               C.C. = 8
         B     LEAVE
NOTTSO   MVC   WTOMSG+4(33),=CL33' === NOT ALLOWED OUTSIDE TSO === '
        WTO    MF=(E,WTOMSG)
         B     ERREX
ERRTM    MVC   WKLNE(28),=CL28' === TABLE MODULE ERROR === '
         LA    R0,28
         B     ERRET
ERRAN    MVC   WKLNE(25),=CL25' === INVALID COMMAND === '
         LA    R0,25
         B     ERRET
UNAUTH   MVC   WKLNE(30),=CL30' === UNAUTHORIZED COMMAND === '
         LA    R0,30
         B     ERRET
UNEXPT   MVC   WKLNE(22),=CL22' === UNKNOWN USER === '
         LA    R0,22
         B     ERRET
ERRAB    MVC   WKLNE(32),=CL32' === NONE (NO "DOC" MEMBER) === '
         LA    R0,32
ERRXO    LA    R1,WKLNE
         BAS   R14,PUTLNE
         LA    R10,8               C.C. = 8
         B     DEALL
ERROP    MVC   WKLNE(35),=CL35' === OPEN ERROR OR DD CONFLICT === '
         LA    R0,35
         B     ERRXO
ERRRD    BAS   R8,SPINT
         MVC   WKLNE(30),=CL30' === I/O READ ERROR (GET) === '
         LA    R0,30
ERRXD    LA    R1,WKLNE
         BAS   R14,PUTLNE
         LA    R10,8               C.C. = 8
         B     RDCLS
ERRIN    BAS   R8,SPINT
         MVC   WKLNE(30),=CL30' === INTERRUPT (REJECTED) === '
         LA    R0,30
         B     ERRXD
ERRSD    BAS   R8,SPINT
         MVC   WKLNE(32),=CL32' === CRYPT FAILURE DETECTED === '
         LA    R0,32
         B     ERRXD
ERRDX    BAS   R8,SPINT
         MVC   WKLNE(30),=CL30' === WRONG CRYPT DETECTED === '
         LA    R0,30
         B     ERRXD
         EJECT
*------- DECRPT - DECRYPT ROUTINE
*              R1 : DECRYPT POINTER (CL8)
*              R13 : SAVE AREA POINTER
*              R14 : LINK REGISTER
* ON EXIT ---- "DBLWD" : DECRYPT RESULT (DOUBLE-WORD)
         SPACE 1
DECRPT   STM   R2,R8,28(R13)
         MVI   SWDE1,2
         MVI   SWDE2,2
         MVI   SWDE3,2
         MVC   ARGWD(L'ARGWD),0(R1)
         XC    ARGWD,=XL8'FFFFFFFFFFFFFFFF'
         OI    SWDE1,1
         XI    SWDE2,3
         OI    SWDE3,1
DECRPTL  L     R2,ARGWD
         XR    R3,R3
         LA    R8,15
         LR    R6,R8
         SLL   R6,28
         XR    R7,R7
         LR    R4,R2
         SRL   R4,*-*
SWDE1    EQU   *-1
         XR    R2,R4
         NR    R2,R6
         STM   R2,R3,DBLWD
         BASR  R1,0
         LM    R4,R5,ARGWD
         NR    R2,R6
         NR    R3,R7
         SRDL  R6,4
         NR    R4,R6
         NR    R5,R7
         SRDL  R2,4
         XR    R4,R2
         XR    R5,R3
         SLDL  R2,*-*
SWDE2    EQU   *-1
         XR    R4,R2
         XR    R5,R3
         NR    R4,R6
         NR    R5,R7
         LR    R2,R4
         LR    R3,R5
         SRDL  R2,*-*
SWDE3    EQU   *-1
         XR    R4,R2
         XR    R5,R3
         NR    R4,R6
         NR    R5,R7
         LM    R2,R3,DBLWD
         OR    R2,R4
         OR    R3,R5
         STM   R2,R3,DBLWD
         BCTR  R8,R1
         CLI   SWDE1,2
         BE    *+L'*+22
         NI    SWDE1,2
         XI    SWDE2,3
         NI    SWDE3,2
         MVC   ARGWD,DBLWD
         B     DECRPTL
         MVI   SWDE1,*-*
         MVI   SWDE2,*-*
         MVI   SWDE3,*-*
         LM    R2,R8,28(R13)
         BR    R14
         EJECT
*------- XDAIR - EXECUTE IKJDAIR-IKJEFF18 SUBROUTINE
*              R0  : WORK REGISTER
*              R1  : WORK REGISTER
*              R14 : LINK REGISTER - RETURN +0 = OK
*                                           +4 = ERROR
*              R15 : WORK REGISTER
         SPACE 1
XDAIR    ST    R14,SVLINK
         XC    DAPLECBS,DAPLECBS
        CALLTSSR EP=IKJDAIR,MF=(E,XDAPL)
         L     R14,SVLINK
         LTR   R15,R15
         BZR   R14                 OK
         ST    R15,RETC            DIAGNOSE ERROR
         LA    R1,XDFDA
         USING DFDSECTD,R1
         XC    0(DFLEN,R1),0(R1)
         LA    R15,XDAPL
         ST    R15,DFDAPLP
         LA    R15,RETC
         ST    R15,DFRCP
         LA    R15,ZERO
         ST    R15,DFJEFF02
         LA    R15,DASW
         ST    R15,DFIDP
         DROP  R1
        LINK   EP=IKJEFF18         SEND ERROR MESSAGE
         LTR   R15,R15
         BZ    XDAIRX
         MVC   WKLNE(37),=CL37' === DAIRFAIL RC = .. (IKJEFF18) === '
         STC   R15,MSGOUT+20
         SRL   R15,4
         STC   R15,MSGOUT+19
         NC    MSGOUT+19(2),=XL2'0F0F'
         TR    MSGOUT+19(2),=CL16'0123456789ABCDEF'
         LA    R0,37
         LA    R1,WKLNE
         BAS   R14,PUTLNE
XDAIRX   L     R14,SVLINK
         B     4(R14)
         EJECT
*------- PUTLNE - PUTLINE ROUTINE
*        (REGISTERS R2-R10 AND R14 ARE SAVED/RESTORED BY ROUTINE)
*              R14 : LINK REGISTER
* ON ENTRY --- R0 : MESSAGE TEXT LENGTH
*              R1 : POINTS TO THE MESSAGE TEXT
         SPACE 1
PUTLNE   LTR   R0,R0
         BNPR  R14
         STM   R2,R10,SAVEREGS     SAVE CALLER'S REGS
         ST    R14,SAVEREGR
         LA    R2,L'MSGOUT
         CLR   R0,R2
         BNL   *+L'*+2
         LR    R2,R0
         MVI   MSGOUT,C' '         CLEAR BUFFER TO SPACES
         MVC   MSGOUT+1(L'MSGOUT-1),MSGOUT
         BCT   R2,*+L'*+6
         MVC   MSGOUT(*-*),0(R1)   <<EXECUTED>>
         EX    R2,*-6
         XC    MSGCNTL,MSGCNTL     SET IN PUTLINE LINE LENGTH
         LA    R2,L'MSGCNTL+1(R2)
         TM    FFLGS,PTERR         PUTLINE IN ERROR ...
         BO    PUTERR              YES
         STH   R2,MSGCNTL
         LA    R5,MSGWORK          ADDRESS OF MSG BUFFER
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R2
         XC    ECBX,ECBX           CLEAR ECB
         XC    PTPBX(PTPBLEN),PTPBX CLEAR PUT PARMLIST
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST
         LA    R1,IOPLX            ADDRESS OF LIST
        PUTLINE PARM=PTPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                 X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               OUTPUT=((R5),TERM,SINGLE,DATA),                         X
               MF=(E,(1))
         LTR   R15,R15             HOW COMPLETE ?
         BZ    PUTRET              SUCCESSFULL
         OI    FFLGS,PTERR
         MVC   WTOMSG+4(33),=CL33' === PUTLINE ERROR - RC = .. === '
         STC   R15,WTOMSG+31
         SRL   R15,4
         STC   R15,WTOMSG+30
         NC    WTOMSG+30(2),=XL2'0F0F'
         TR    WTOMSG+30(2),=CL16'0123456789ABCDEF'
        WTO    MF=(E,WTOMSG)
PUTERR   MVC   MSGCNTL+2(2),WTOMSG+2
         LA    R3,MSGOUT(R2)
         MVC   0(L'WTOMSGF,R3),WTOMSGF
         LA    R2,L'WTOMSGF(R2)
         STH   R2,MSGCNTL
        WTO    MF=(E,MSGWORK)
PUTRET   LM    R2,R10,SAVEREGS     RESTORE CALLER'S REGS
         L     R14,SAVEREGR
         BR    R14                 RETURN TO CALLER
         EJECT
*------- DCBEXIT
         SPACE 1
         CNOP  0,4
         USING IHADCB,R1
DCBEXIT  TM    DCBRECFM,DCBRECF    MUST BE FIXED RECORDS
         BZ    *+L'*+6
         TM    DCBRECFM,DCBRECV
         BZR   R14
         DROP  R1
         OI    FFLGS,OPERR
         BR    R14
         SPACE 1
*------- DCBABND
         SPACE 1
         CNOP  0,4
DCBABND  TM    3(R1),X'04'         TEST OK TO IGNORE
         BZ    *+L'*+10            NO
         CLC   0(L'S013RC18,R1),S013RC18 YES, TEST ABEND S013-18
         BE    *+L'*+6             YES
         MVI   3(R1),0             NO, ABEND TASK IMMEDIATELY
         BR    R14
         MVI   3(R1),4             SET IGNORE ABEND CONDITION
         OI    FFLGS,IOABN
         BR    R14
         SPACE 1
S013RC18 DC    XL3'013018'
         SPACE 1
*------- ESPIE EXIT ROUTINE
         SPACE 1
         CNOP  0,8
         USING *,R15
         USING EPIE,R1
ESPEXIT  XC    KEYW1,KEYW1
         XC    KEYW2,KEYW2
         L     R2,EPIEPARM
         ST    R2,EPIEPSW+4
         NI    EPIEPSW+4,X'7F'
         BR    R14
         DROP  R1,R15
         EJECT
*------- LOCAL WORK-AREAS AND CONSTANTS
         SPACE 1
DBLWD    DC    D'0'
ARGWD    DC    D'0'
SVEWD    DC    D'0'
         SPACE 1
WTOMSG  WTO    '                                 ',                    X
               ROUTCDE=11,DESC=7,MF=L
WTOMSGF  EQU   *-4,4
DCBRQ   DCB    DSORG=PS,DEVD=DA,MACRF=GM,BFALN=D,                      X
               EXLST=REXLIST,SYNAD=RDERR,EODAD=RDEND,DDNAME=........
         PRINT GEN
REXLIST  DC    0F'0',XL1'05',AL3(DCBEXIT),XL1'91',AL3(DCBABND)
         SPACE 1
ATSO     DS    A
APSCB    DS    A
SVLINK   DS    F
OLDPICA  DS    F
PLST1    DC    A(KEYW2)
PLST2    DC    A(KEYW1)
PLST3    DC    A(WKLNE+4,*+4,72)
         SPACE 1
XDAPL    DC    0F'0',(LDAPL)X'0'   DAIR PARM LIST (DAPL)
DAPLECBS DC    F'0'
XDA08    DC    0F'0',(LDA08)X'0'   DAIR ALLOCATE PARM LIST (DAPB08)
XDA18    DC    0F'0',(LDA18)X'0'   DAIR DE-ALLOCATE PARM LIST (DAPB18)
XDFDA    DC    0F'0',(DFLEN)X'0'   DAIR FAILURE PARM LIST
RETC     DC    F'0'
         SPACE 1
CPPLADDR DC    A(*-*)         PUTLINE USE
SAVEREGS DC    9F'0'          SAVE REGS R2-R10 FOR PUTLINE
SAVEREGR DC    F'0'           SAVE REG R14 FOR PUTLINE
IOPLX    DC    (IOPLLEN)X'0'  I-O PARM LIST FOR PUTLINE/GETLINE
ECBX     DC    F'0'           ECB FOR PUTLINE/GETLINE
PTPBX    DC    (PTPBLEN)X'0'  PUTLINE PARM BLOCK
MSGWORK  EQU   MSGCNTL,84     PUTLINE WORK USE
MSGCNTL  DC    F'0'                CONTROL WORD FOR PUTLINE
MSGOUT   DC    CL80' '             PUTLINE TEXT
         SPACE 1
WKLNE    DC    CL88' '
ZERO     DC    F'0'
DASW     DC    0H'0',AL2(DFDAIR)
LDSN     DC    H'0'
NDSN     DC    XL44'0'
CMDNME   DC    XL8'0'
MSNME    DC    XL8'0'
KEYW1    DC    XL8'0'
KEYW2    DC    XL8'0'
FFLGS    DC    XL1'0'
IOABN    EQU   X'80'
OPERR    EQU   X'40'
IOERR    EQU   X'08'
PTERR    EQU   X'01'
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         LTORG
         SPACE 1
        PRINT  NOGEN
        CVT    DSECT=YES,LIST=YES
        IKJCPPL
        IKJPSCB
        IKJEBECA
        IKJIOPL
IOPLLEN  EQU   *-IOPL
        IKJPTPB
PTPBLEN  EQU   *-PTPB
        IKJDAPL
LDAPL    EQU   *-DAPL
        IKJDAP08
LDA08    EQU   *-DAPB08
        IKJDAP18
LDA18    EQU   *-DAPB18
        IKJEFFDF DFDSECT=YES
        DCBD   DSORG=PS,DEVD=DA
        IHAEPIE
         SPACE 2
         END
