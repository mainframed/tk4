)ATTR
~ TYPE(TEXT) COLOR(WHITE) SKIP(ON)
! TYPE(TEXT) COLOR(PINK) SKIP(ON)
} TYPE(TEXT) COLOR(BLUE) SKIP(ON)
| TYPE(TEXT) COLOR(GREEN) SKIP(ON)
× TYPE(TEXT) INTENS(HIGH) SKIP(ON)
Ö TYPE(TEXT) INTENS(LOW) SKIP(ON)
{ TYPE(TEXT) COLOR(YELLOW) HILITE(BLINK) SKIP(ON)
^ TYPE(TEXT) COLOR(TURQ) HILITE(REVERSE) SKIP(ON)
$ TYPE(TEXT) COLOR(YELLOW) HILITE(REVERSE) SKIP(ON)
\ TYPE(TEXT) COLOR(RED) HILITE(REVERSE) SKIP(ON)
)BODY
×---------------------------$   T  O  P  S  E  C   ×--------------------
~Command!===>_ZCMD
Ö

^
^  Ö
^  Ö                                            \               Ö
^  Ö                                            \  Ö         \  Ö(maximu
^  Ö  !Enter member name}(new or old or replace){===>_TPSMNM \  Ö seven
^  Ö                                            \  Ö         \  Ö char.)
^  Ö                                            \               Ö
^  Ö
^  Ö  |       Create or Replace the symbolic module :_UU1Ö(YES/NO)
^  Ö
^  Ö  |                    Edit the symbolic module :_UU2Ö(YES/NO)
^  Ö
^  Ö  |             Assembly of the symbolic module :_UU3Ö(YES/NO)
^  Ö
^  Ö  |             Link-edit in the target library :_UU4Ö(YES/NO)
^  Ö
^

)INIT
  .HELP = PAJTOPSH
  &ZCMD = &Z
  &TPSMNM = &Z
  &UU1 = TRANS (&UU1 ' ',NO *,*)
  &UU2 = TRANS (&UU2 ' ',YES *,*)
  &UU3 = TRANS (&UU3 ' ',YES *,*)
  &UU4 = TRANS (&UU4 ' ',NO YES,NO *,*)
)PROC
  IF (&ZCMD ^= &Z)
    &UUCMD = TRANS(TRUNC(&ZCMD,' ')
             C,E CAN,E CANCEL,E
             E,E END,E *,*)
    VER (&UUCMD,LIST,E,MSG=PAJT900V)
  IF (&ZCMD = &Z)
    &UUCMD = &Z
    VER (&TPSMNM,NB,NAME)
    &UU1 = TRUNC (&UU1,1)
    &UU1 = TRANS (&UU1 N,NO Y,YES *,*)
    VER (&UU1,NB,LIST,NO,YES)
    &UU2 = TRUNC (&UU2,1)
    &UU2 = TRANS (&UU2 N,NO Y,YES *,*)
    VER (&UU2,NB,LIST,NO,YES)
    &UU3 = TRUNC (&UU3,1)
    &UU3 = TRANS (&UU3 N,NO Y,YES *,*)
    VER (&UU3,NB,LIST,NO,YES)
    &UU4 = TRUNC (&UU4,1)
    &UU4 = TRANS (&UU4 N,NO Y,YES *,*)
    VER (&UU4,NB,LIST,NO,YES)
  VPUT (UUCMD UU1 UU2 UU3 UU4 TPSMNM) SHARED
)END
