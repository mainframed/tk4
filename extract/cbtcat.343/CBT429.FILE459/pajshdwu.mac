)ATTR
~ TYPE(TEXT) COLOR(WHITE) SKIP(ON)
! TYPE(TEXT) COLOR(PINK) SKIP(ON)
} TYPE(TEXT) COLOR(BLUE) SKIP(ON)
| TYPE(TEXT) COLOR(GREEN) SKIP(ON)
× TYPE(TEXT) INTENS(HIGH) SKIP(ON)
Ö TYPE(TEXT) INTENS(LOW) SKIP(ON)
{ TYPE(TEXT) COLOR(YELLOW) HILITE(BLINK) SKIP(ON)
^ TYPE(TEXT) COLOR(TURQ) HILITE(REVERSE) SKIP(ON)
$ TYPE(TEXT) COLOR(YELLOW) HILITE(REVERSE) SKIP(ON)
\ TYPE(TEXT) COLOR(RED) HILITE(REVERSE) SKIP(ON)
` TYPE(OUTPUT) COLOR(PINK) HILITE(BLINK) JUST(ASIS) SKIP(ON)
# TYPE(OUTPUT) COLOR(YELLOW) JUST(ASIS) SKIP(ON)
)BODY
×---------------------------$   S  H  A  D  O  W   ×--------------------
~Command!===>_ZCMD
Ö

^
^  Ö
^  Ö  |Indicate below your target data-set name for/of the symbolic modu
^  Ö  }(it must be partitioned with logical record length 80).Ö
^  Ö  !Enter the fully qualified data-set name}(unquoted)!:Ö
^  Ö  \                                                    Ö
^  Ö  \  Ö                                              \  Ö
^  Ö  {===>_UUDSN                                       \  Ö `UUDSE
^  Ö  \  Ö                                              \  Ö
^  Ö  \                                                    Ö
^  Ö  | Do you have already the keys-table symbolic module :_UU1Ö(YES/NO
^  Ö  |    Do you want edit the keys-table symbolic module :_UU2Ö(YES/NO
^  Ö  |Do you want assembly the keys-table symbolic module :_UU3Ö(YES/NO
^  Ö  |    Do you want link-edit in the target library too :_UU4Ö(YES/NO
^  Ö  ~The target link library is always :Ö
^  Ö  #UUTLL                                       Ö
^  Ö
^

)INIT
  .HELP = PAJSHDWH
  &ZCMD = ' '
  &UU1 = TRANS (&UU1 ' ',YES *,*)
  &UU2 = TRANS (&UU2 ' ',YES *,*)
  &UU3 = TRANS (&UU3 ' ',YES *,*)
  &UU4 = TRANS (&UU4 ' ',NO YES,NO *,*)
)PROC
  &UU1 = TRUNC (&UU1,1)
  &UU1 = TRANS (&UU1 N,NO Y,YES *,*)
  VER (&UU1,NB,LIST,NO,YES)
  &UU2 = TRUNC (&UU2,1)
  &UU2 = TRANS (&UU2 N,NO Y,YES *,*)
  VER (&UU2,NB,LIST,NO,YES)
  &UU3 = TRUNC (&UU3,1)
  &UU3 = TRANS (&UU3 N,NO Y,YES *,*)
  VER (&UU3,NB,LIST,NO,YES)
  &UU4 = TRUNC (&UU4,1)
  &UU4 = TRANS (&UU4 N,NO Y,YES *,*)
  VER (&UU4,NB,LIST,NO,YES)
  VPUT (UU1 UU2 UU3 UU4 UUDSN) SHARED
)END
