//TSDAMFCI JOB 01992,FCBIDR,NOTIFY=TSDAM,MSGCLASS=H
// EXEC QASML,NAME=FCBIDR,USR=PRDT
LIDR     TITLE '   L I S T I D R   1 . 0  --- 20SEP76'
*$DOC@*****************************************************************
*                                                                     *
*   LISTIDR - ORIGINALLY DEVELOPED BY J BARRETT (NSA) 01MAR73         *
*                                                                     *
*   UPDATED AT NASA/GSFC BY FRANK PAJERSKI                            *
*   UPDATED AT AFDSC/PENTAGON BY BILL GODFREY                         *
*                                                                     *
*   UPDATED AT MAY & SPEH BY DON MARQUARDT                            *
*    COMMENTED OUT SOME WRITES AND CHANGED LINE COUNT                 *
*    NOW IT ONLY LISTS THE IDR INFO.  USED WITH OUR FCBGEN SYSTEM     *
*    THAT INCLUDES USER IDENT AS IDR IN ALL FCB'S                     *
*                                                                     *
*                                                                     *
*   THIS PROGRAM LISTS IDR INFORMATION CONTAINED IN LOAD MODULES.     *
*                                                                     *
*   SAMPLE JCL                                                        *
*     //STEP EXEC PGM=LISTIDR                                         *
*     //SYSPRINT DD SYSOUT=A                                          *
*     //SYSLIB   DD DSN=USER.LOADLIB,DISP=SHR                         *
*     //SYSIN    DD *                                                 *
*      C SYSLIB                                                       *
*      S MEMBER1,MEMBER2,MEMBER3                                      *
*     /*                                                              *
*                                                                     *
*   INFORMATION INCLUDES DATE ASSEMBLED/COMPILED, COMPILER ID,        *
*   DATE LINK-EDITED, LINKAGE EDITOR VERSION, COMMENTS.               *
*                                                                     *
*   CONTROL STATEMENT INPUT ALLOWS MEMBERS TO BE SELECTED OR          *
*   EXCLUDED, OR ENTIRE PDS TO BE PROCESSED.  SELECT/EXCLUDE          *
*   MEMBER OPERANDS MAY CONTAIN PERIODS AS WILD-CARD CHARACTERS.      *
*                                                                     *
*$DOC$*****************************************************************
         SPACE
         MACRO
&N       ON    &X
&N       OI    LCSW&X+1,X'F0'
         MEND
         SPACE 2
         MACRO
&N       OFF   &X
&N       NI    LCSW&X+1,X'0F'
         MEND
         SPACE 2
         MACRO
&N       MODHLINE &PR
&N       DC    C'0'
&PR.NAME DC    8C' ',C'  SIZE '
&PR.SIZE DC    6C' ',C'  ENTRY POINT '
&PR.EP   DC    6C' ',C'  ATTRIBUTES '
&PR.ATTR DC    4C' ',C'  SSI '
&PR.SSI  DC    8C' ',C'  LINKAGE EDIT'
&PR.NIDR DC    C'ED BY '
&PR.PROC DC    10C' ',C' V'
&PR.V    DC    2C' ',C' L'
&PR.L    DC    2C' ',C' ON '
&PR.YEAR DC    2C' ',C'.'
&PR.DAY  DC    3C' '
         MEND
         SPACE 2
         MACRO
&N       YD    &X,&Y
&N       MVC   CSC&X.YEAR(2),&Y
         MVC   CSC&X.DAY(3),&Y+2
         MVI   CSC&X.YEAR+2,C'.'
         MEND
         MACRO
&N       OUTPUT &A,&B
&N       LA    WRKA,&A
         LA    WRKB,&B
         BAL   RET1,PRINT1
         MEND
         SPACE 2
         MACRO
&SECT    INSECT &BASE,&OPT
         GBLC  &NAME
         LCLC  &B
&B       SETC  '&BASE'
         AIF   (T'&OPT EQ 'O').S1
         ENTRY &SECT
         CNOP  0,4
&SECT    STM   14,12,12(13)
         AGO   .S2
.S1      ANOP
&NAME    SETC  '&SECT'(1,4)'SAVE'
&SECT    CSECT
         B     32(,15)                                            .PRC.
         DC    AL1(11),CL11'LISTIDR'                              .PRC.
         DC    CL16' &SYSDATE &SYSTIME '                          .PRC.
         STM   14,12,12(13)
.S2      LR    10,13
         AIF   (T'&BASE NE 'O').S3
&B       SETC  '12'
.S3      AIF   ('&B' EQ '15').S4
         LR    &B,15
.S4      USING &SECT,&B
         LA    13,&NAME
         ST    10,4(13)
         ST    13,8(10)
         MEND
         SPACE 2
         MACRO
&HOME    OUTSECT &RT,&X
         GBLC  &NAME
&HOME    L     13,&NAME.+4
         LM    14,12,12(13)
         AIF   (T'&RT EQ 'O').NORM1
         LA    15,&RT
.NORM1   BR    14
         AIF   (T'&X EQ 'O').NORM2
         AGO   .END
.NORM2   ANOP
&NAME    DS    18F
         LTORG
.END     MEND
         SPACE 2
         MACRO
         REGS
         LCLA  &NR
&NR      SETA  0
.LOOP    ANOP
R&NR     EQU   &NR
&NR      SETA  &NR+1
         AIF   (&NR NE 16).LOOP
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         MEND
         EJECT
*
*   LISTIDR - ORIGINALLY DEVELOPED BY J BARRETT (NSA) 01MAR73
*
*   UPDATED AT NASA/GSFC BY FRANK PAJERSKI
*
*   STATUS -
*     VERSION 1.0 20SEP76
*       . BEGINNINGS OF CLEAN-UP AND DOCUMENTATION
*       . 0C7 ABEND FIX(ES)
*       . CODE TO HANDLE 'MASK' ON INPUT MEMBER NAMES
*     VERSION 1.1 28NOV79
*       . UPDATED AT PRC COMPUTER CENTER BY BILL GODFREY
*       . FOR MVS. TIOT SCAN ENDLESS LOOP FIXED. EXTRACT
*       . MACRO REPLACED WITH 5 INSTRUCTIONS. MAXL 82 TO 52.
*
*   SAMPLE CATALOGED PROCEDURE 'LISTIDR' -
*      //DEFAULT PROC LIB=
*      //LISTIDR EXEC PGM=LISTIDR,REGION=100K
*      //SYSPRINT DD  SYSOUT=A
*      //SYSLIB   DD  DSN=&LIB,DISP=SHR
*
*   SAMPLE JCL -
*      //  EXEC  LISTIDR,LIB='SYS1.SVCLIB'
*        ..THE FOLLOWING IS OPTIONAL. IF OMITTED, A CSECT-LEVEL LIST
*          ON THE ENTIRE DATA SET POINTED TO BY 'SYSLIB' IS DONE..
*      //LINKLIB DD DSN=SYS1.LINKLIB,DISP=SHR
*      //ANYNAME DD DSN=...,DISP=SHR
*      //SYSIN DD *
*      *   ..COMMENT CARDS START WITH '*' IN CC1..
*      *  SELECT ALL SVC 34 MEMBERS FROM SVCLIB FOR CSECT-LEVEL LIST
*      *   -NOTE THAT A MASK OF A '.' ALLOWS ANY CHARACTER IN THAT
*      *    RELATIVE POSITION IN THE DIRECTORY MEMBER NAME TO BE
*      *    ACCEPTABLE-
*        C SVCLIB
*         S IGC..03D
*      *  EXCLUDE IEB- MEMBERS FROM CSECT-LEVEL LIST OF LINKLIB
*        C LINKLIB
*          E IEB...,IEB....,IEB.....
*      * GET LOAD-MODULE-LEVEL LIST OF DATA SET POINTED TO BY 'ANYNAME'
*         L ANYNAME
*
*
         EJECT
*----------------------------------------------------------------------
* SET UP BASE REGISTERS,SAVE AREA
*----------------------------------------------------------------------
LISTIDR  INSECT
         USING LISTSAVE,R13
         OPEN  (PRINT,OUTPUT)
*        EXTRACT TIOTADD,FIELDS=TIOT                              .PRC.
         L     1,16                CVTPTR                         .PRC.
         L     1,0(,1)             TCB WORDS                      .PRC.
         L     1,4(,1)             CURRENT TCB                    .PRC.
         L     1,12(,1)            TCBTIOT                        .PRC.
         ST    1,TIOTADD           STORE TIOT ADDRESS             .PRC.
         L     TIOTR,TIOTADD
         USING TIOT,TIOTR
         SR    WRKA,WRKA
LOOP1    CLI   TIOELNGH,0                                         .PRC.
         BE    NOSYSIN
         CLC   TIOEDDNM(8),=CL8'SYSIN'
         BE    YESSYSIN
         IC    WRKA,TIOELNGH
         AR    TIOTR,WRKA
         B     LOOP1
NOSYSIN  OI    FLAGS,DEFFLG
         B     RESCORE
YESSYSIN OPEN  (CARD,INPUT)
         BAL   RET1,CA   GET AND ANALYZE ACRD
         OI    FLAGS,SYSINFLG
RESCORE  GETMAIN R,LV=8192 RESERVE CORE FOR SYSTEM USE
         LR    WRKA,R1
         GETMAIN VU,LA=MINLEN,A=ADDRESS  GET ALL AVAILABLE CORE
         FREEMAIN R,LV=8192,A=(WRKA)  FREE CORE FOR SYSTEM
         L     WRKBASE,ADDRESS
         USING WORKAREA,WRKBASE
         LR    WRKA,WRKBASE
         A     WRKA,LENGTH
         ST    WRKA,ADD3
         ST    WRKA,ADD4
         LA    WRKA,WORKEND
         C     WRKA,ADD4
         LA    WRKE,4
         BH    NOCORE
         ST    WRKA,ADD1
         ST    WRKA,ADD2
         TM    FLAGS,SYSINFLG
         BZ    OPENLIB
         EJECT
* IN LINE CARD PROCESSING ROUTINE
* ON ENTRY AN ALREADY ANALYSED CARD IS IN STORE
CP       L     WRKA,CPINDEX  INDICATES WHAT LAST CARD WAS
* SEE WHAT THIS CARD IS
         CLI   OPCHAR,C'L'
         BE    CPL(WRKA)
         CLI   OPCHAR,C'C'
         BE    CPC(WRKA)
         CLI   OPCHAR,C'S'
         BE    CPS(WRKA)
         CLI   OPCHAR,C'E'
         BE    CPE(WRKA)
         CLI   OPCHAR,C'*'
         BE    CPAST(WRKA)
CPINVAL  MVC   CARDBUF+82(11),=C'**INVALID**'  FLAG
CPPUT    LH    WRKA,LCNT
         BCT   WRKA,CPPR
         PUT   PRINT,CARDHEAD
         MVI   CARDOUT,C'0'
         LA    WRKA,MAXL-2
CPPR     PUT   PRINT,CARDOUT
         STH   WRKA,LCNT
         MVI   CARDOUT,C' '
         MVC   CARDBUF+82(11),=CL11' '     RESTORE OUTPUT AREA
         BAL   RET1,CA  GET AND ANALYZE CARD
         B     CP   GO TO RIGHT SUBROUTINE
* BRANCH TABLE
* INDEXED BRANCHES ARE PERFORMED WITH THIS TABLE
* INDEX VALUES 0 NEW DATASET EXPECTED
*              4 LAST CARD WAS L OR C
*        8 LAST CARD WAS S
*        12 LAST CARD WAS E
CPL      B     CPLM
         B     CPOUT
         B     CPOUT
         B     CPOUT
CPC      B     CPCS
         B     CPOUT
         B     CPOUT
         B     CPOUT
CPS      B     CPINVAL
         B     CPSEL
         B     CPSEEX
         B     CPINVAL
CPE      B     CPINVAL
         B     CPEXC
         B     CPINVAL
         B     CPSEEX
CPAST    B     CPPUT
         B     CPOUT
         B     CPOUT
         B     CPOUT
CPLM     EQU   *
         ON    1
         ON    2
         ON    3
         B     CPLMCS
CPCS     EQU   *
         OFF   1
         OFF   2
         OFF   3
CPLMCS   MVC   SYSLIB+40(8),=CL8'SYSLIB' ASSUME DEFAULT
         MVI   CPINDEX+3,4   INDICATE  NEW DATASET STARTED
         CLI   OPNUM,0
         BE    CPPUT   USE DEFAULT
         MVC   SYSLIB+40(8),OPLIST  GET DDNAME
         B     CPPUT
CPSEL    MVC   SESW2+2(2),SWANT
         MVC   SESW3+2(2),SNEXT
         MVI   CPINDEX+3,8
         B     CPSEEX
CPMOVE   MVC   0(0,WRKB),OPLIST
CPEXC    MVC   SESW2+2(2),SNEXT
         MVC   SESW3+2(2),SWANT
         MVI   CPINDEX+3,12
CPSEEX   CLI   OPNUM,0
         BE    CPPUT
         SR    WRKA,WRKA
         IC    WRKA,OPNUM
         L     WRKB,ADD3
         SR    WRKB,WRKA
         C     WRKB,ADD2
         LA    WRKE,8
         BL    NOCORE
         ST    WRKB,ADD3
         BCTR  WRKA,0
         EX    WRKA,CPMOVE
         B     CPPUT
CPOUT    EQU   *
         OI    SESW1+1,X'F0'
         CLC   ADD3(4),ADD4
         BE    CPDONE
         NI    SESW1+1,X'0F'
CPDONE   EQU   *
         EJECT
* PROCESS DATASET
OPENLIB  RDJFCB SYSLIB
         MVC   LIBHEADN(44),BUFFER
         MVC   LIBHEADV(6),BUFFER+118
         TIME  DEC
         STM   R0,R1,WORK
         MVC   LIBHDATE(7),DATEPAT
         ED    LIBHDATE(7),WORK+5
         MVC   LIBHTIME(6),DATEPAT
         ED    LIBHTIME(6),WORK
         MVC   LIBHPAGE(4),=C'0001'
         MVC   PGCNT(3),=PL3'1'
         MVI   LCNT+1,1
         OPEN  (SYSLIB,INPUT)
         TM    SYSLIB+48,X'10'
         BNO   NOTOPEN
         OI    EOSYSLIB+1,X'F0'  SWITCH ON
READDIR  READ  DECB,SF,MF=E
         LA    DIRPTR,BUFFER+2
         LA    WRKA,BUFFER
         CHECK DECB
         AH    WRKA,BUFFER
         ST    WRKA,DIREND
NEWMEM   CLI   0(DIRPTR),X'FF'
         BE    ENDDIR
         IC    WRKA,11(DIRPTR)
         N     WRKA,=F'31'
         AR    WRKA,WRKA
         LA    WRKA,12(WRKA,DIRPTR)
         ST    WRKA,ENDENT
SESW1    B     WANTMEM
         L     WRKA,ADD3
*   MERGE IN CHARACTER FROM DIRECTORY MEMBER NAME INTO CONTROL CARD
*   NAME WHERE MASK EXISTS - AND COMPARE
*SECOMP  CLC   0(8,DIRPTR),0(WRKA)                          FJP/12SEP76
SECOMP   MVC   WORK(8),0(WRKA)                              FJP/12SEP76
         TR    WORK(8),TRANIT                               FJP/12SEP76
         NC    WORK(8),0(DIRPTR)                            FJP/12SEP76
         OC    WORK(8),0(WRKA)                              FJP/12SEP76
         CLC   0(8,DIRPTR),WORK                             FJP/12SEP76
SESW2    BE    WANTMEM  (NEXTMEM)
         LA    WRKA,8(WRKA)
         C     WRKA,ADD4
         BL    SECOMP
SESW3    B     NEXTMEM  (WANTMEM)
         EJECT
WANTMEM  EQU   *
         L     WRKA,ADD2
         LA    WRKB,MLLEN(WRKA)
         C     WRKB,ADD3
         LA    WRKE,12
         BH    NOCORE
         ST    WRKB,ADD2
         USING MLIST,WRKA
         MVC   MLNAME(8),0(DIRPTR)
         MVC   MLTTR(3),8(DIRPTR)
         MVC   MLATTR(2),20(DIRPTR)
         MVC   MLCORE(3),22(DIRPTR)
         MVC   MLEP(3),27(DIRPTR)
         MVI   MLFLAGS,0
         LA    WRKB,34(DIRPTR)  NORMAL END OF ENTRY
         TM    11(DIRPTR),X'80' IS IT AN ALIAS?
         BNO   NOTAL
         OI    MLFLAGS,MLALFLG
         NI    SORTSW+1,X'0F'  TURN OFF SORT BYPASS
         TM    20(DIRPTR),X'C0'  IS IT RENT OR REUS
         BZ    NOTAL     NO
         LA    WRKB,10(WRKB)  YES, UP POINTER
NOTAL    TM    20(DIRPTR),X'04'  IS IT SCTR?
         BZ    NOTSCTR  NO
         LA    WRKB,8(WRKB)  YES,UP POINTER
NOTSCTR  C     WRKB,ENDENT
         BNL   NEXTMEM
         OI    MLFLAGS,MLSSIFLG
         MVC   MLSSI(4),0(WRKB)
         DROP  WRKA
NEXTMEM  L     DIRPTR,ENDENT
         C     DIRPTR,DIREND
         BL    NEWMEM
         B     READDIR
ENDDIR   CLC   ADD1(4),ADD2
         BNE   GOTMEMBS
         PUT   PRINT,LIBHEAD
         PUT   PRINT,NOMEMMSG
         B     ENDLIB
NOTOPEN  MVC   NOPMSGDD(8),SYSLIB+40
         PUT   PRINT,NOPMSG
         B     ENDLIBX
GOTMEMBS MVC   ADD3(4),ADD4
         NI    EOSYSLIB+1,X'0F'  SWITCH OFF
SORTSW   B     NOALIAI
         L     WRKA,ADD1
         LA    WRKB,MLLEN
         L     WRKC,ADD2
         SR    WRKC,WRKB
         BCTR  WRKB,0
         LA    WRKD,MLTTR-MLIST
         LA    WRKE,3
         BAL   RET1,SORT
         L     WRKB,ADD1
         MVC   ADDX(4),ADD2
ALILOOP1 LR    WRKA,WRKB
ALILOOP2 LA    WRKB,MLLEN(WRKB)
         C     WRKB,ADDX
         BNL   ALISORT2
         CLC   MLTTR-MLIST(3,WRKA),MLTTR-MLIST(WRKB)
         BNE   ALILOOP1
         MVC   MLALIAS-MLIST(8,WRKB),MLNAME-MLIST(WRKA)
         MVI   MLFLAGS-MLIST(WRKB),MLALFLG1
         L     WRKC,ADD2
         LA    WRKD,MLLEN(WRKC)
         C     WRKD,ADD3
         LA    WRKE,16
         BH    NOCORE
         ST    WRKD,ADD2
         MVC   MLNAME-MLIST(11,WRKC),MLNAME-MLIST(WRKA)
         MVC   MLALIAS-MLIST(8,WRKC),MLNAME-MLIST(WRKB)
         MVI   MLFLAGS-MLIST(WRKC),MLALFLG2
         B     ALILOOP2
ALISORT2 L     WRKA,ADD1
         LA    WRKB,MLLEN
         L     WRKC,ADD2
         SR    WRKC,WRKB
         BCTR  WRKB,0
         LA    WRKD,MLNAME-MLIST
         LA    WRKE,11
         BAL   RET1,SORT
NOALIAI  OI    SORTSW+1,X'F0'
         L     DIRPTR,ADD1
         USING MLIST,DIRPTR
         L     WRKA,ADD2
         LA    WRKA,3(WRKA)
         N     WRKA,=F'-4'
         ST    WRKA,ADDX
NEWLOAD  TM    MLFLAGS,MLALFLG1+MLALFLG2
         BNZ   ALENT
         NI    FLAGS,255-LEFLAG-SZFORCE
         MVC   ADDY(4),ADDX
         MVC   ADD3(4),ADD4
         MVC   BLOCKADD(3),MLTTR
         POINT SYSLIB,BLOCKADD
READTXT  READ  DECB,SF,MF=E
         CHECK DECB
         TM    BUFFER,X'0F'  CONTROL OR RLD?
         BNZ   ENDLOAD  YES,NEED READ NO MORE
         TM    BUFFER,X'80'  IDR?
         BO    IDRPROC  YES
LCSW1    NOP   READTXT
         TM    BUFFER,X'20'  CESD?
         BNO   READTXT  NO
         USING CLIST,WRKC
CESDPROC EQU   *
         LA    WRKA,BUFFER+8
         LR    WRKB,WRKA
         AH    WRKB,BUFFER+6
         ST    WRKB,ENDENT
         LH    WRKB,BUFFER+4
CESDENT  TM    8(WRKA),X'0F'
         BNZ   CESDNEXT
         LA    WRKE,CLNFLG
         BAL   RET1,CLSEARCH
         NI    CLFLAGS,255-CLNFLG
         MVC   CLNAME(8),0(WRKA)
CESDNEXT LA    WRKB,1(WRKB)
         LA    WRKA,16(WRKA)
         C     WRKA,ENDENT
         BL    CESDENT
         B     READTXT
IDRPROC  SR    WRKB,WRKB
         IC    WRKB,BUFFER+1
         LA    WRKA,BUFFER+3
         LA    WRKB,BUFFER+1(WRKB)
         ST    WRKB,ENDENT
         TM    BUFFER+2,X'02'
         BO    LEPROC
LCSW2    NOP   READTXT
         TM    BUFFER+2,X'01'
         BO    SZAPPROC
         TM    BUFFER+2,X'04'
         BO    TRANPROC
         TM    BUFFER+2,X'08'
         BNO   READTXT
USERPROC EQU   *
         TM    FLAGS,MORFLG
         BO    USERB1
USERA2   LA    WRKB,45(WRKA)
         C     WRKB,ENDENT
         BL    USERA4
         L     WRKB,ENDENT
         BCTR  WRKB,0
USERA4   SR    WRKB,WRKA
         LA    WRKC,TRANSAVE
         EX    WRKB,USERMV1
         LA    WRKB,1(WRKB)
         ST    WRKB,ADDZ
         LA    WRKB,5(WRKA)
         OI    FLAGS,MORFLG
         C     WRKB,ENDENT
         BNL   READTXT
         SR    WRKB,WRKB
         IC    WRKB,5(WRKA)
         LA    WRKB,5(WRKB,WRKA)
         C     WRKB,ENDENT
         BNL   READTXT
         XC    ADDZ(4),ADDZ
USERA6   NI    FLAGS,255-MORFLG
         LH    WRKB,TRANSAVE
         LA    WRKE,CLUFLG
         BAL   RET1,CLSEARCH
         NI    CLFLAGS,255-CLUFLG
         SR    WRKB,WRKB
         IC    WRKB,TRANSAVE+5
         MVI   CLUSER+3,C' '
         MVC   CLUSER+4(39),CLUSER+3
         CLI   TRANSAVE+5,40
         BNH   USEROK
         LA    WRKB,40
USEROK   EQU   *
         EX    WRKB,IDRMOVE
         MVC   CLUSER(3),TRANSAVE+2
         LA    WRKA,6(WRKA,WRKB)
         S     WRKA,ADDZ
         C     WRKA,ENDENT
         BL    USERA2
         B     READTXT
USERB1   LA    WRKB,45
         L     WRKC,ADDZ
         SR    WRKB,WRKC
         LA    WRKC,TRANSAVE(WRKC)
         EX    WRKB,USERMV1
         B     USERA6
USERMV1  MVC   0(0,WRKC),0(WRKA)
IDRMOVE  MVC   CLUSER+2(0),TRANSAVE+5
TRANPROC EQU   *
         TM    FLAGS,DATAFLG
         BO    TRANC6
         TM    FLAGS,MORFLG
         BZ    TRANA6
         NI    FLAGS,255-MORFLG           0C7 FIX           FJP/12SEP76
         L     WRKB,ADDZ
         TM    FLAGS,ODDFLG
         BZ    TRANA5
         MVC   0(1,WRKB),0(WRKA)
         NI    FLAGS,255-ODDFLG
         LA    WRKA,1(WRKA)
TRANA5   BCTR  WRKB,0
         TM    0(WRKB),X'80'
         BO    TRANB5
TRANA6   LR    WRKD,WRKA
TRANA7   C     WRKA,ENDENT
         BH    TRANC2
         BE    TRANC3
         TM    0(WRKA),X'80'
         LA    WRKA,2(WRKA)
         BZ    TRANA7
*        NI    FLAGS,255-MORFLG                             FJP/12SEP76
         C     WRKA,ENDENT                0C7 FIX           FJP/12SEP76
         BH    TRANC2                                       FJP/12SEP76
         BE    TRANC3                                       FJP/12SEP76
TRANB1   L     WRKB,ADD3
         SR    WRKB,WRKA
         AR    WRKB,WRKD
         C     WRKB,ADDY
         LA    WRKE,24
         BL    NOCORE
         LR    WRKC,WRKA
         BCTR  WRKC,0
         SR    WRKC,WRKD
         ST    WRKB,ADD3
         EX    WRKC,TRANMV1
         AR    WRKB,WRKC
         ST    WRKB,ADDZ
         TM    FLAGS,MORFLG
         BO    READTXT
TRANB5   LA    WRKD,15(WRKA)
         TM    0(WRKA),1
         BZ    TRANB8
         LA    WRKD,15(WRKD)
TRANB8   C     WRKD,ENDENT
         BL    TRANB10
         L     WRKD,ENDENT
         BCTR  WRKD,0
         OI    FLAGS,DATAFLG
TRANB10  LA    WRKB,TRANSAVE
         SR    WRKD,WRKA
         EX    WRKD,TRANMV2
         ST    WRKD,ADDZ
         TM    FLAGS,DATAFLG
         BO    READTXT
         B     TRANC10
TRANC2   OI    FLAGS,ODDFLG
TRANC3   OI    FLAGS,MORFLG
         B     TRANB1
TRANC6   NI    FLAGS,255-DATAFLG
         LA    WRKB,TRANSAVE
         A     WRKB,ADDZ
         LA    WRKB,1(WRKB)
         LA    WRKD,14
         TM    TRANSAVE,1
         BZ    TRANC9
         LA    WRKD,15(WRKD)
TRANC9   S     WRKD,ADDZ
         EX    WRKD,TRANMV2
TRANC10  LA    WRKA,1(WRKA,WRKD)
         L     WRKD,ADD3
TRANLOOP C     WRKD,ADD4
         ST    WRKD,ADD3
         BNL   TRANDONE
         NI    0(WRKD),X'7F'
         LH    WRKB,0(WRKD)
         LA    WRKE,CLTFLG
         BAL   RET1,CLSEARCH
         NI    CLFLAGS,255-CLTFLG
         MVC   CLTRANS(15),TRANSAVE+1
         TM    TRANSAVE,X'01'
         BZ    TRANNEXT
         LA    WRKE,CLTFLG
         BAL   RET1,CLSEARCH
         NI    CLFLAGS,255-CLTFLG
         MVC   CLTRANS(15),TRANSAVE+16
TRANNEXT EQU   *
         LA    WRKD,2(WRKD)
         B     TRANLOOP
TRANDONE C     WRKA,ENDENT
         BL    TRANA6
         B     READTXT
TRANMV1  MVC   0(0,WRKB),0(WRKD)
TRANMV2  MVC   0(0,WRKB),0(WRKA)
LEPROC   MVC   LEIDR(15),0(WRKA)
         OI    FLAGS,LEFLAG
LCSW3    NOP   ENDLOAD
         B     READTXT
SZAPPROC EQU   *
         TM    0(WRKA),X'80'
         BZ    SZAPNF
         OI    FLAGS,SZFORCE
SZAPNF   IC    WRKB,0(WRKA)
         N     WRKB,=F'63'
         MH    WRKB,=H'13'
         LA    WRKA,1(WRKA)
         AR    WRKB,WRKA
         ST    WRKB,ENDENT
SZAPLOOP C     WRKA,ENDENT
         BNL   READTXT
         MVC   WORK(2),0(WRKA)
         LH    WRKB,WORK
         LA    WRKE,CLZFLG
         BAL   RET1,CLSEARCH
         NI    CLFLAGS,255-CLZFLG
         MVC   CLZAP(11),2(WRKA)
         LA    WRKA,13(WRKA)
         B     SZAPLOOP
         DROP  WRKC
ENDLOAD  EQU   *
         SR    WRKC,WRKC
         CLC   ADDX(4),ADDY
         BE    NOCSECTS
         L     WRKA,ADDX
         LA    WRKB,CLLEN
         L     WRKC,ADDY
         SR    WRKC,WRKB
         BCTR  WRKB,0
         SR    WRKD,WRKD
         LA    WRKE,2
         BAL   RET1,SORT
* DEVELOP # OF LINES REQUIRED FOR THIS LOAD MODULE
* # OF LINES OF CSECT INFO
         L     WRKC,ADDY
         S     WRKC,ADDX
         SR    WRKB,WRKB
         D     WRKB,=A(CLLEN)
* ADD # ALIASES/8
NOCSECTS EQU   *
         LR    WRKA,DIRPTR
         LA    WRKB,7
CNT1     LA    WRKA,MLLEN(WRKA)
         C     WRKA,ADD2
         BNL   CNT2
         CLC   0(8,WRKA),MLNAME
         BNE   CNT2
         LA    WRKB,1(WRKB)
         B     CNT1
CNT2     ST    WRKA,MEMNXT
         SRL   WRKB,3
         AR    WRKC,WRKB
* ADD 1 IF SZFORCE FLAG IS ON
         TM    FLAGS,SZFORCE
        BZ    CNT3
         LA    WRKC,1(WRKC)
* ADD 3 FOR HEADINGS
CNT3 LA WRKC,3(WRKC)
* ADD 1 IF NO CNTL OR RLD
         TM    MLFLAGS,MLNCFLG
         BZ    NOTNC
         LA    WRKC,1(WRKC)
NOTNC    EQU   *
* SEE IF THERE IS ROOM ON THIS PAGE
         CH    WRKC,LCNT
         BL    HAVROOM
         MVI   LCNT+1,1 FORCE TOP OF PAGE
HAVROOM  EQU   *
* SET UP LOAD MODULE HEADER
         MVC   MODHEAD(133),MODSKEL
         MVC   MODHNAME(8),MLNAME
         UNPK  WORK(11),MLCORE(6)
         TR    WORK(10),HEXTAB
         MVC   MODHSIZE(6),WORK
         MVC   MODHATTR(4),WORK+6
         TM    MLFLAGS,MLSSIFLG
         BZ    NOSSI
         MVC   WORK(4),MLSSI
         UNPK  WORK+7(9),WORK(5)
         TR    WORK+7(8),HEXTAB
         MVC   MODHSSI(8),WORK+7
SSIBACK  EQU   *
         MVC   WORK+8(3),MLEP
         UNPK  WORK(7),WORK+8(4)
         TR    WORK(6),HEXTAB
         MVC   MODHEP(6),WORK
        TM    FLAGS,LEFLAG
        BZ    NOLEIDR
         MVC   MODHPROC(10),LEIDR
         UNPK  WORK(9),LEIDR+10(5)
         MVC   MODHV(2),WORK
         MVC   MODHL(2),WORK+2
         MVC   MODHYEAR(2),WORK+4
         MVC   MODHDAY(3),WORK+6
        B     PUTMODH
NOSSI    MVC   MODHSSI(8),=CL8'********'
         B     SSIBACK
NOLEIDR  MVC   MODHNIDR(31),=CL31'OR IDR NOT PRESENT'
*UTMODH  OUTPUT MODHEAD,2                                DAM 6/10/86
PUTMODH  LA    WRKC,MLNAME
ALSETUP  MVI   SETUP,C' '
         MVC   SETUP+1(132),SETUP
         NI    FLAGS,255-ALFLAG
         LA    WRKD,8
         LA    WRKE,SETUP+22
ALSETUP2 LA    WRKC,MLLEN(WRKC)
         C     WRKC,MEMNXT
         BNL   ALCOMP
         MVC   0(8,WRKE),MLALIAS-MLIST(WRKC)
         OI    FLAGS,ALFLAG
         LA    WRKE,9(WRKE)
         BCT   WRKD,ALSETUP2
ALSET    MVC   SETUP+11(10),=CL10'ALIAS(ES)-'
*LPUT    OUTPUT SETUP,1                               DAM 6/10/86
ALPUT    TM    FLAGS,ALFLAG
         BZ    ALDONE
         B     ALSETUP
ALCOMP   TM    FLAGS,ALFLAG
         BZ    ALDONE
         NI    FLAGS,255-ALFLAG
         B     ALSET
ALDONE   EQU   *
* TELL ABOUT SZFORCE
         TM    FLAGS,SZFORCE
         BZ    NOFORCE
         OUTPUT FORCEMSG,1
NOFORCE  EQU   *
* TELL ABOUT NO CNTL OR RLD
         TM    MLFLAGS,MLNCFLG
         BZ    CNOK
         OUTPUT WARNING,1
CNOK     EQU   *
* DISCOVER PRINT SPACE REQUIRED BY EACH CSECT
         L     WRKB,ADDX
         C     WRKB,ADDY
         BE    ENDMOD
CCNT1    LR    WRKA,WRKB
         TM    CLFLAGS-CLIST(WRKA),CLNFLG
         BZ    HAVNAME
         NI    CLFLAGS-CLIST(WRKA),255-CLNFLG
         MVC   CLNAME-CLIST(8,WRKA),=CL8'********'
HAVNAME  EQU   *
         SR    WRKC,WRKC
CCNT2    LA    WRKC,1(WRKC)
         LA    WRKB,CLLEN(WRKB)
         C     WRKB,ADDY
         BNL   CCNT3
         CLC   0(2,WRKA),0(WRKB)
         BNE   CCNT3
         MVI   0(WRKB),X'FF'
        B     CCNT2
CCNT3    STH   WRKC,0(WRKA)
         C     WRKB,ADDY
         BL    CCNT1
* SEE IF THERE IS SPACE FOR FIRST CSECT
         L     WRKC,ADDX
         USING CLIST,WRKC
         LH    WRKA,CLCNT
         LA    WRKA,1(WRKA)
         CH    WRKA,LCNT
         BL    GOTROOM
         MVI   LCNT+1,1 FORCE NEW PAGE
         B     NOROOM
GOTROOM EQU   *
         MVC   CSCTHEAD(9),=CL9' '
*        OUTPUT CSCTHEAD,1
NOROOM   EQU   *
* FORMAT CSECT LINE AND PRINT IT
LINEOUT  MVI   SETUP,C' '
         MVC   SETUP+1(132),SETUP
         TM    CLFLAGS,CLNFLG
        BO    LOT
         MVC   CSCNAME(8),CLNAME
LOT     TM    CLFLAGS,CLTFLG
         BO    LOZ
         MVC   CSCTNAME(10),CLTRANS
        UNPK  WORK(9),CLTRANS+10(5)
        YD    T,WORK+4
         MVC   CSCTV(2),WORK
        MVC   CSCTL(2),WORK+2
LOZ      TM    CLFLAGS,CLZFLG
         BO    LOU
        UNPK  WORK(5),CLZAP(3)
         YD    Z,WORK
         MVC   CSCZDATA(8),CLZAP+3
LOU      TM    CLFLAGS,CLUFLG
         BO    LOPR
         UNPK  WORK(5),CLUSER(3)
         YD    U,WORK
         MVC   CSCUDATA(40),CLUSER+3
LOPR     TM    CLCNT,X'FF'
        BO    NOTFST
         LH    WRKA,LCNT
         SH    WRKA,CLCNT
         BP    NOHEAD
         OUTPUT CSCTHEAD,MAXL
         LH    WRKA,LCNT
         SH    WRKA,CLCNT
NOHEAD   STH   WRKA,LCNT
NOTFST   PUT   PRINT,SETUP
         LA    WRKC,CLLEN+CLIST
         C     WRKC,ADDY
         BL    LINEOUT
ENDMOD   EQU   *
         L     DIRPTR,MEMNXT
ENDMODA  EQU   *
         C     DIRPTR,ADD2
         BL    NEWLOAD
ENDLIB   CLOSE (SYSLIB)
         MVC   ADD2(4),ADD1
         MVC   ADD3(4),ADD4
ENDLIBX  EQU   *
         SR    WRKE,WRKE
         TM    FLAGS,DEFFLG
         BO    DEFAULT
         TM    FLAGS,SYSINFLG
         BZ    FINISHED
         MVI   CPINDEX+3,0
         MVI   LCNT+1,1        RESET LINE COUNT
         B     CP
ALENT    EQU   *
         MVC   ALNM1(8),MLNAME
         MVC   ALNM2(8),MLALIAS
         MVC   WORK+8(3),MLEP
         UNPK  WORK(7),WORK+8(4)
         TR    WORK(6),HEXTAB
         MVC   ALEP(6),WORK
         OUTPUT ALINE,2
         LA    DIRPTR,MLLEN(DIRPTR)
         B     ENDMODA
EOSYSIN  CLOSE (CARD)
         TM    FLAGS,SYSINFLG
         BZ    NOSYSIN
         NI    FLAGS,255-SYSINFLG
         CLI   OPCHAR,C'*'  WAS LAST CARD COMMENT?
         BE    FINISHED    YES, LETS SPLIT
         B     CPOUT
DEFAULT  L     TIOTR,TIOTADD
LOOP2    SR    WRKA,WRKA
         IC    WRKA,TIOELNGH
         LTR   WRKA,WRKA                                          .PRC.
         BZ    FINISHED                                           .PRC.
         AR    WRKA,TIOTR
         CLC   TIOEDDNM(8),SYSLIB+40
         LR    TIOTR,WRKA
         BNE   LOOP2
GOTIT    ST    TIOTR,TIOTADD  SAVE SOME SEARCHING NEXT TIME
         CLI   TIOELNGH,0                                         .PRC.
         BE    FINISHED
         CLI   TIOEDDNM,0                                         .PRC.
         BE    LOOP2                                              .PRC.
         MVC   SYSLIB+40(8),TIOEDDNM
         CLC   TIOEDDNM(3),=C'SYS'  DDNAME STARTING SYS?
         BE    LOOP2   YES, SKIP IT
         B     OPENLIB
EOSYSLIB B     ENDDIR  SWITCH
         OI    MLFLAGS,MLNCFLG
         B     ENDLOAD
         SPACE 2
*----------------------------------------------------------------------
* IN-CORE SORT ROUTINE
* REGISTER CONTENTS: WRKA ADDRESS OF FIRST RECORD
*                    WRKB RECORD LENGTH -1
*                    WRKC ADDRESS OF LAST RECORD
*                    WRKD DISPLACEMENT OF SORT FIELD
*                    WRKE LENGTH OF SORT FIELD -1
*                    RET1 RETURN ADDRESS
*----------------------------------------------------------------------
SORT     STC   WRKB,SORTX1+1
         STC   WRKB,SORTX2+1
         STC   WRKB,SORTX3+1
         STC   WRKD,SORTY+3
         STC   WRKD,SORTY+5
         STC   WRKE,SORTY+1
         LA    WRKB,1(WRKB)
SORTA    LR    WRKE,WRKA
SORTB    LR    WRKD,WRKE
SORTC    BXH   WRKE,WRKB,SORTD
SORTY    CLC   0(0,WRKD),0(WRKE)
         BH    SORTB
         B     SORTC
SORTD    CR    WRKD,WRKA
         BE    SORTE
SORTX1   XC    0(0,WRKA),0(WRKD)
SORTX2   XC    0(0,WRKD),0(WRKA)
SORTX3   XC    0(0,WRKA),0(WRKD)
SORTE    BXLE  WRKA,WRKB,SORTA
         BR    RET1
         SPACE 2
*----------------------------------------------------------------------
* ROUTINE TO FIND APPROPRIATE ENTRY IN CLIST TABLE OR GET NEW ONE
* WRKB HAS CSECT ID, WRKE HAS FLAG VALUE,RET1 HAS RETURN ADDRESS
* ADDRESS OF ENTRY IS RETURNED IN WRKC
*----------------------------------------------------------------------
CLSEARCH L     WRKC,ADDX
         USING CLIST,WRKC
CLSCHECK C     WRKC,ADDY
         BNL   CLSNEW
         CH    WRKB,CLID
         BNE   CLSNEXT
         EX    WRKE,CLSTM
         BCR   7,RET1  BNZ
CLSNEXT  LA    WRKC,CLLEN+CLIST
         B     CLSCHECK
CLSNEW   LA    WRKE,CLLEN+CLIST
         C     WRKE,ADD3
         ST    WRKE,ADDY
         LA    WRKE,20
         BH    NOCORE
         STH   WRKB,CLID
         MVI   CLFLAGS,X'F0'
         BR    RET1
CLSTM    TM    CLFLAGS,0
         DROP  WRKC
         SPACE 2
PRINT1   LH    R1,LCNT
         SR    R1,WRKB
         BP    SAMEPAGE
         PUT   PRINT,LIBHEAD
         AP    PGCNT(3),=PL3'1'
         UNPK  LIBHPAGE(4),PGCNT(3)
         OI    LIBHPAGE+3,X'F0'
         LA    R1,MAXL-2
         MVI   0(WRKA),C'0'
         MVC   1(8,WRKA),MLNAME
SAMEPAGE STH   R1,LCNT
         PUT   PRINT,(WRKA)
         BR    RET1
         DROP  DIRPTR
         SPACE 2
*----------------------------------------------------------------------
* CONTROL CARD ANALYSIS ROUTINE
* THIS ROUTINE EXTRACTS AN OPERATION AND ITS OPERANDS FROM A CONTROL
* CARD.  THE OPERATION (ONE CHARACTER) IS PLACED IN LOCATION OPCHAR.
* THE OPERANDS ,LEFT JUSTIFIED AND PADDED TO 8 BYTES ARE PLACED
*IIN A LIST STARTING AT OPLIST. THE NUMBER OF BYTES IN THE LIST IS
* STORED AT OPNUM. THE CARD IS IN CARDBUF AND RET1 CONTAINS THE
* RETURN ADDRESS
*----------------------------------------------------------------------
CA       GET   CARD,CARDBUF
         MVI   OPCHAR,C'*'         ASSUME COMMENT CARD
         CLI   CARDBUF,C'*'  IS IT REALLY?
         BCR   8,RET1
         LA    WRKA,CARDBUF   ADDRESS OF CARD
         LA    WRKB,79(WRKA)       END OF CARD
         BAL   WRKC,CABLCH  FIND CHAR FOLLOWING BLANK
         MVC   OPCHAR(1),0(WRKA)  SAVE OPERATION
         BAL   WRKC,CABLCH  FIND FIRST CHAR OF OPERANDS
         LA    WRKC,OPLIST  WHERE TO PUT THE OPERANDS
CANEXT   LR    WRKD,WRKA           START OF OPERAND
CALOOP   CLI   0(WRKA),C','   DELIMITING COMMA?
         BE    CACOMMA             YES
         CLI   0(WRKA),C' '  DELIMITING BLANK?
         BE    CABLANK   YES
         CLI   0(WRKA),C'.'      IS THIS A MASK BYTE?       FJP/12SEP76
         BNE   *+8               BIF NOT                    FJP/12SEP76
         MVI   0(WRKA),X'00'     YES - SET UP FOR XLATE     FJP/12SEP76
         LA    WRKA,1(WRKA)        NO, GET NEXT POSN.
         CR    WRKA,WRKB  END OF CARD?
         BL    CALOOP  NO,TRY THIS POSN.
         B     CAINVAL   YES
CABLANK  NI    CASW+1,X'0F'  TURN OFF SWITCH
CACOMMA  SR    WRKA,WRKD   GET LENGTH OF OPERAND
         BZ    CANULL              NOTHING THERE
         CH    WRKA,=H'8'  HOW LONG IS IT?
         BH    CAINVAL    TOO LONG
         MVC   0(8,WRKC),=CL8' '   CLEAR LIST ENTRY
         BCTR  WRKA,0  PREPARE FOR EXECUTION
         EX    WRKA,CAMOVE   CHOP - MOVE OPERAND
         LA    WRKC,8(WRKC) POINT TO NEXT LIST ENTRY
         LA    WRKA,1(WRKA,WRKD)  RESTORE WRKA
CANULL   LA    WRKA,1(WRKA)  SKIP DELIMITER
CASW     BC    15,CANEXT  GET NEXT OPERAND
         OI    CASW+1,X'F0'   RESTORE SWITCH
         LA    WRKD,OPLIST     BEGINNING OF OPLIST
         SR    WRKC,WRKD    LENGTH OF OPLIST
         STC   WRKC,OPNUM      STORE LENGTH
         BR    RET1   RETURN
CAMOVE   MVC   0(0,WRKC),0(WRKD)   MOVE OPERAND
CABLCH   MVC   CABR(4),CABR1  SET UP BRANCH INST.
CALOOK   CLI   0(WRKA),C' '   LOOK FOR BLANK
CABR     BE    CABL     THIS INSTRUCTION GETS MODID
CAINC    LA    WRKA,1(WRKA)  NEXT CHARACTER
         CR    WRKA,WRKB   END OF CARD?
         BNL   CAINVAL    YES
         B     CALOOK   LOOK AT NEXT CHARACTER
CABL     MVC   CABR(4),CABR2   CHANGE BRANCH INST.
         B     CAINC
CACH     BR    WRKC    RETURN
CABR1    BE    CABL    REPLACEMENT INSTRUCTION
CABR2    BNE   CACH    REPLACEMENT INSTRUCTION
CAINVAL  MVI   OPNUM,0  NO OPERANDS
         CLI   OPCHAR,C'L'  LOAD MOD?
         BCR   8,RET1   YES
         CLI   OPCHAR,C'C'   CSECTS ?
         BCR   8,RET1   YES
         MVI   OPCHAR,C' '  NO, INVALID
         BR    RET1
         SPACE 2
NOCORE   PUT   PRINT,NCMSG
FINISHED CLOSE (PRINT)
         L     WRKA,4(R13)  CALLER'S SAVE AREA ADDRESS
         ST    WRKE,16(WRKA)  SAVE RETURN CODE
         OUTSECT
         EJECT
TRANIT   DC    X'FF',255X'00'  XLATE TABLE FOR 'MASK'       FJP/12SEP76
MODSKEL  DC    CL133' '
         ORG   MODSKEL
         MODHLINE MODU
         ORG   MODSKEL+133
FORCEMSG DC    CL133'           IMASPZAP IDR SPACE EXCEEDED - DATA LOSTX
               '
CSCTHEAD DC    11C' ',C'-CSECT--  ------TRANSLATOR-------  '
         DC    C'----IDRDATA----  ---------------USER-----------'
         DC    C'-----------------',CL25' '
CSCTHL   EQU   *-CSCTHEAD                                         .PRC.
CARDOUT  DC    C' '
CARDBUF  DC    CL132' '
CARDHEAD DC    CL133'1 CONTROL CARDS '
LIBHEAD  DC    CL133'1'
         ORG   LIBHEAD+1
         DC    C'IDR LIST FOR DATA SET '
LIBHEADN DC    CL44' ',C' ON VOLUME '
LIBHEADV DC    CL6' ',C'  DATE'
LIBHDATE DC    CL7' ',C'  TIME'
LIBHTIME DC    CL6' ',C'  PAGE '
LIBHPAGE DC    CL4' '
         ORG
ALINE    DC    CL133'0'
         ORG   ALINE+1
ALNM1    DS    8C
         DC    C'  IS AN ALIAS FOR '
ALNM2    DS    8C
         DC    C'  ENTRY POINT '
ALEP     DS    6C
         ORG
NCMSG    DC    CL133'0INSUFFICIENT CORE AVAILABLE'
NOMEMMSG DC    CL133'0 NO SELECTED MEMBER WAS FOUND IN DATA SET'
NOPMSG   DC    CL133'1'
         ORG   NOPMSG+1
         DC    C'DDNAME '
NOPMSGDD DC    CL8' ',C' COULD NOT BE OPENED'
         ORG
WARNING  DC    CL133' ********  WARNING  ********  MEMBER CONTAINS NO CX
               ONTROL OR RLD RECORD  ********'
FLAGS    DC    X'00'
LCNT     DC    H'1'
SNEXT    DC    S(NEXTMEM)
SWANT    DC    S(WANTMEM)
         READ  DECB,SF,SYSLIB,BUFFER,256,MF=L
BUFFER   DS    128H
OPNUM    DC    X'00'
OPCHAR   DC    C' '
OPLIST   DC    80C' '
         PRINT NOGEN
CARD     DCB   DDNAME=SYSIN,DSORG=PS,LRECL=80,MACRF=GM,EODAD=EOSYSIN
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,LRECL=133,RECFM=FBA,           +
               BLKSIZE=3458,MACRF=PM
SYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,RECFM=U,KEYLEN=0,MACRF=R,        +
               EXLST=EXLST,EODAD=EOSYSLIB
         PRINT GEN
EXLST    DC    X'87',AL3(BUFFER)
ADDRESS  DC    F'0'
LENGTH   DC    F'0'
TIOTADD  DC    F'0'
MINLEN   DC    A(WORKEND-WORKAREA)
MAXLEN   DC    F'131072'
BLOCKADD DC    F'0'
CPINDEX  DC    F'0'
DATEPAT  DC    X'402120',C'.',X'202020'
HEXTAB   EQU   *-240
         DC    C'0123456789ABCDEF'
         SPACE 2
WORKAREA DSECT
WORK     DS    2D
MEMNXT   DS    F
ADD1     DS    F  START OF DYNAMIC CORE
ADD2     DS    F  END OF DIRECTORY/EXTENDED DIRECTORY
ADDX     DS    F  END OF DIRECTORY/START OF CSECT TABLE
ADDY     DS    F  END OF CSECT TABLE
ADD3     DS    F  START OF SELECT/EXCLUDE/CSECT DATA
ADD4     DS    F  END OF DYNAMIC CORE
ADDZ     DS    F
ENDENT   DS    F
DIREND   DS    F
TRANSAVE DS    46C
PGCNT    DS    3C
LEIDR    DC    15X'00'
SETUP    DS    133C
WORKEND  DS    0D
         ORG   SETUP
MODHEAD  MODHLINE MODH
         ORG   SETUP
CSCOUT   DS    11C
CSCNAME  DS    10C
CSCTYEAR DS    3C
CSCTDAY  DS    4C
CSCTNAME DS    11C
CSCTV    DS    3C
CSCTL    DS    4C
CSCZYEAR DS    3C
CSCZDAY  DS    4C
CSCZDATA DS    10C
CSCUYEAR DS    3C
CSCUDAY  DS    4C
CSCUDATA DS    40C
         SPACE 2
CLIST    DSECT
CLCNT    EQU   *
CLID     DS    H   CSECT ID
CLFLAGS  DS    C  FLAGS
CLNFLG   EQU   128
CLTFLG   EQU   64
CLZFLG   EQU   32
CLUFLG   EQU   16
CLNAME   DS    8C  CSECT NAME
CLTRANS  DS    15C   TRANSLATOR DATA
CLZAP    DS    11C    IMASPZAP DATA
CLUSER   DS    43C  USER DATA
CLEND    DS    0H
CLLEN    EQU   *-CLIST
         SPACE 2
MLIST    DSECT
MLNAME   DS    8C
MLTTR    DS    3C
MLFLAGS  DS    C
MLALIAS  EQU   *
MLCORE   DS    3C
MLATTR   DS    2C
MLSSI    DS    4C
MLEP     DS    3C
MLALFLG  EQU   32
MLNCFLG  EQU   2
MLSSIFLG EQU   1
MLALFLG1 EQU   64
MLALFLG2 EQU   128
MLLEN    EQU   *-MLIST
         SPACE 2
TIOT     DSECT
TIOELNGH EQU   TIOT+24
TIOEDDNM EQU   TIOT+28
         SPACE 2
         REGS
         SPACE 2
DIRPTR   EQU   R2
TIOTR    EQU   R3
WRKBASE  EQU   R4
WRKA     EQU   R5
WRKB     EQU   R6
WRKC     EQU   R7
WRKD     EQU   R8
WRKE     EQU   R9
RET1     EQU   R11
DEFFLG   EQU   1
ODDFLG   EQU   2
MORFLG   EQU   4
DATAFLG  EQU   8
ALFLAG   EQU   16
LEFLAG   EQU   32
SZFORCE  EQU   64
SYSINFLG EQU   128
MAXL     EQU   62       --- LINES PER PAGE ---
         END
