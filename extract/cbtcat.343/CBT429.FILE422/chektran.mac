CHEKTRAN START
*
*
* ASSEMBLER SUB-PROGRAMME TO SET UP AMOUNTS FOR PRINTING CHEQUES.
*
*  BOTH AN EDITED NUMERIC FIELD WITH THE CURRENCY SYMBOL PROTECTIVELY
*  PLACED AND THE AMOUNT IN WORDS ARE PREPARED.
*
*
* THE FOLLOWING COMMENTS SHOW HOW PART OF THE WORKING STORAGE SECTION
* OF THE DATA DIVISION OF A COBOL CALLING PROGRAMME SHOULD BE SET UP.
* THIS IS THE PART OF THE CALLING PROGRAMME'S STORAGE THAT MUST BE
* AVAILABLE TO THIS ROUTINE.
*
*  NOTE THAT THIS ROUTINE DISTURBS ONLY THE 'CKT-OUTPUT' GROUP ITEM.
*  ALSO NOTE THAT THE SYMBOLS 'ABC', 'DEF', 'G', 'HIJ', AND 'N' ARE
*  INTENDED HERE AS REPRESENTATIONAL VARIABLES.
*
*      05  CHEKTRAN-DATA.
*          10  CKT-CODE                            PICTURE  X(1).
*          10  CKT-A-TOTAL-L   VALUE ABC
*                              COMPUTATIONAL-3     PICTURE  9(3).
*          10  CKT-A-LINE-L    VALUE DEF
*                              COMPUTATIONAL-3     PICTURE  9(3).
*          10  CKT-A-INDENT    VALUE G
*                              COMPUTATIONAL-3     PICTURE  9(1).
*          10  CKT-DOLLARS     COMPUTATIONAL-3     PICTURE S9(9)V9(2).
*          10  CKT-PENCE REDEFINES CKT-DOLLARS
*                              COMPUTATIONAL-3     PICTURE S9(11).
*          10  CKT-OUTPUT.
*              15  CKT-A-LINES COMPUTATIONAL-3     PICTURE S9(1).
*              15  CKT-NUMERIC                     PICTURE  X(16).
*              15  CKT-ALPHABETIC.
*                  20  CKT-LINE-1                  PICTURE  X(DEF).
*                  20  CKT LINE-2                  PICTURE  X(DEF).
*                  .            .
*                  .            .
*                  20  CKT-LINE-N                  PICTURE  X(HIJ).
*
*      NOTE THAT 'HIJ' MUST NOT EXCEED 'DEF' AND THAT 'ABC' MUST EQUAL
*           (N MINUS ONE) TIMES 'DEF' PLUS 'HIJ'.
*
*
* THE INPUT CODING HAS THE FOLLOWING MEANING -
*
*   CKT-CODE      - LETTER 'F' SIGNIFIES FRENCH LANGUAGE, DOLLARS AND
*                   CENTS.
*
*                 - LETTER 'D' SIGNIFIES ENGLISH LANGUAGE, DECIMAL
*                   STERLING.
*
*                 - LETTER 'L' SIGNIFIES ENGLISH LANGUAGE, L-S-D
*                   STERLING.
*
*                 - ANY OTHER CODING SIGNIFIES ENGLISH LANGUAGE,
*                   DOLLARS AND CENTS.
*
*   CKT-A-TOTAL-L - THE VALUE 'ABC' IS THE NUMBER OF CHARACTERS IN THE
*                   'CKT-ALPHABETIC' OUTPUT AREA. THIS MUST BE IN THE
*                   RANGE 30-259 INCLUSIVE.
*
*   CKT-A-LINE-L  - THE VALUE 'DEF' IS THE NUMBER OF CHARACTERS IN EACH
*                   LINE OF THE ALPHABETIC OUTPUT AREA, WITH THE
*                   EXCEPTION THAT THE FINAL LINE MAY BE SHORTER.
*                   THE VALUE 'DEF' MUST NOT BE LESS THAN 30.
*
*   CKT-INDENT    - THE VALUE 'G' IS THE NUMBER OF BLANK SPACES
*                   INSERTED AT THE BEGINNING OF EACH ALPHABETIC OUTPUT
*                   LINE BUT THE FIRST. IT MUST NOT BE NEGATIVE.
*                   EITHER 0 OR 3 IS SUGGESTED AS A VALUE.
*
*
*   THE AMOUNT FIELD MUST BE POSITIVE. IT MUST CONTAIN THE NUMBER OF
*   MINOR UNITS OF CURRENCY IN THE AMOUNT.
*
*   THIS ROUTINE CAN BE ENTERED VIA A STATEMENT SUCH AS -
*        CALL 'CHEKTRAN' USING CHEKTRAN-DATA.
*
*
* OUTPUT FROM THE PROGRAMME IS SET UP IN THE FOLLOWING 3 AREAS -
*
*   CKT-A-LINES    - THIS ONE BYTE PACKED DECIMAL FIELD GIVES THE
*                    NUMBER OF LINES OF ALPHABETIC DATA SET UP TO
*                    FULLY DESCRIBE THE AMOUNT IN WORDS.
*                    THIS FIELD IS SET TO ZERO SHOULD ANY INVALIDITIES
*                    BE DETECTED BY THIS PROGRAMME.
*
*   CKT-NUMERIC    - THIS 16 CHARACTER FIELD IS SET UP WITH THE CHEQUE
*                    AMOUNT EDITED, AND WITH THE CURRENCY SYMBOL JUST
*                    TO THE LEFT OF THE MOST SIGNIFICANT DIGIT OF THE
*                    AMOUNT.
*
*   CKT-ALPHABETIC - THIS AREA IS SET UP WITH THE AMOUNT IN WORDS.
*                    NOTE THAT BOTH ENDS OF THE ALPHABETIC DESCRIPTION
*                    ARE AUTOMATICALLY BRACKETED BY A PAIR OF
*                    ASTERISKS, AND ALSO THAT UNUSED SPACE IN THE RIGHT
*                    HAND END OF THIS AREA IS BLANKED.
*
*
* INVALIDITIES CAN BE TURNED UP FOR THE FOLLOWING REASONS -
*
*   - 'CKT-A-TOTAL-L' IS NOT IN THE RANGE 30 TO 259 INCLUSIVE.
*
*   - 'CKT-A-LINE-L' IS LESS THAN 30.
*
*   - 'CKT-A-INDENT' IS NEGATIVE.
*
*   - THE AMOUNT FIELD IS ZERO OR NEGATIVE.
*
*   - THE 'CKT-NUMERIC' FIELD IS NOT LARGE ENOUGH TO HOLD SOME
*     EXTREMELY HIGH L-S-D STERLING AMOUNTS.
*
*   - THE 'CKT-ALPHABETIC' IS NOT LARGE ENOUGH TO HOLD THE ENTIRE
*     ALPHABETIC DESCRIPTION OF THE AMOUNT.
*
*   AGAIN NOTE THAT 'CKT-A-LINES' IS SET TO ZERO ON ALL INVALIDITIES.
*   THE CONTENTS OF THE REST OF THE OUTPUT AREA IS UNPREDICTABLE.
*
*
*
RB       EQU   2                        BASE REGISTER.
RC       EQU   3                        CURRENCY PHRASE POINTER.
RG       EQU   4                        POINTER TO PHRASES BEING GOTTEN
RI       EQU   5                        INPUT/OUTPUT AREA POINTER.
RL       EQU   6                        LANGUAGE PHRASE POINTER.
RN       EQU   7                        NEXT LINE START POINTER.
RP       EQU   8                        OUTPUT PLACEMENT POINTER.
RW1      EQU   9                        PRIMARY WORK REGISTER.
RW2      EQU   10                       SECONDARY WORK REGISTER.
RX1      EQU   11                       HIGH LEVEL LINKAGE REGISTER.
RX2      EQU   12                       LOW LEVEL LINKAGE REGISTER.
*
         SAVE  (14,12)                  SAVE REGISTERS.
         BALR  RB,0                     SET UP THE BASE REGISTER.
         USING *,RB
         USING LANGGO,RL
         USING CURRGO,RC
         USING INANDOUT,RI
         L     RI,0(0,1)                SET UP I/O LINKAGE POINTER.
         LA    RP,ALFOUT+1              INITIALIZE 'RP'.
         ZAP   DOUBLEWD,CHAROUT
         CVB   RW1,DOUBLEWD             VERIFY THAT THE NUMBER OF
         CH    RW1,BINH30               CHARACTERS IN THE ALPHABETIC
         BL    INVALID                  OUTPUT MESSAGE IS IN THE RANGE
         CH    RW1,BINH259              30-259 INCLUSIVE.
         BH    INVALID
         SH    RW1,BINARYH4             SET UP LENGTH OF 'INIZEALF'.
         STC   RW1,INIZEALF+1
         LA    RW2,ALFOUT+3             SET UP 'PUTLIMIT' WITH ADDRESS
         AR    RW2,RW1                  OF RIGHTMOST VALID PLACEMENT
         ST    RW2,PUTLIMIT             SPOT.
         ZAP   DOUBLEWD,CHARPLN
         CVB   RN,DOUBLEWD              VERIFY THAT THERE ARE 30 OR
         CH    RN,BINH30                MORE CHARACTERS PER LINE.
         BL    INVALID
         STH   RN,HCHARPLN              SET UP 'HCHARPLN' AND
         BCTR  RN,0                     INITIALIZE REGISTER 'RN'.
         AR    RN,RP
         ZAP   WORK(1),INDENT           SET UP 'HINDENT' AND IN THE
         BM    INVALID                  PROCESS ENSURE THAT THE LEFT
         MVO   HLENGTH(3),WORK(1)       HAND BYTE OF 'HLENGTH' IS ZERO.
         MVC   HINDENT,HLENGTH
*
         ZAP   DOUBLEWD(7),AMOUNT       SET UP AND TEST THE AMOUNT.
         BNH   INVALID
         MVC   LINESOUT(20),PACKED1     INITIALIZE FIRST 20 BYTES OF
         LA    1,NUMOUT+12              OUTPUT AND REGISTER 1.
         LA    RC,DOLLAR                SET UP 'RC' RE DOLLARS & CENTS.
         CLI   INCODE,C'F'
         BNE   *+12                     FIX 'RL' RE LANGUAGE.
         LA    RL,FRENCH-1
         B     DECIMAL
         LA    RL,ENGLISH-1
         CLI   INCODE,C'D'
         BNE   *+12
         LA    RC,POUNDDEC              SET UP DECIMAL POUNDS.
         B     DECIMAL
         CLI   INCODE,C'L'
         BE    LSDDO
DECIMAL  EDMK  NUMOUT(16),DOUBLEWD+1    FOR ALL DECIMAL CURRENCIES, SET
         BCTR  1,0                      UP THE NUMERIC OUTPUT FIELD
         MVC   0(1,1),CURRSYMB          WITH THE CURRENCY SYMBOL AND
         MVO   DOUBLEWD,DOUBLEWD+1(6)   SHIFT THE AMOUNT PROPERLY IN
         B     INIZEALF                 THE DOUBLEWORD FIELD.
LSDDO    LA    RC,POUNDLSD
         ZAP   WORK(9),DOUBLEWD+1(6)
         DP    WORK(9),LSDP240          L-S-D STERLING -
         DP    WORK+5(4),LSDP12
         MVN   WORK+4(3),WORK+5         FIX UP REGISTER 'RC'.
         MVC   WORK+5(1),WORK+6         FIND THE NUMBER OF POUNDS,
         MVC   WORK+6(1),WORK+8         SHILLINGS, AND PENCE.
         MVC   NUMOUT+13(9),LSDEDIT     SET UP FOR THE EDIT.
         EDMK  NUMOUT(19),WORK          DO THE EDIT AND PLACE THE
         BCTR  1,0                      CURRENCY SYMBOL.
         MVC   0(1,1),CURRSYMB          CLOSE UP THE EDITED FIELD IF
         CLI   NUMOUT+17,C'0'           THERE ARE ZEROES IN EITHER THE
         BNE   *+10                     TENS SPOT OF SHILLINGS OR THE
         MVC   NUMOUT+17(4),NUMOUT+18   TENS SPOT OF THE PENCE.
         CLI   NUMOUT+14,C'0'
         BNE   *+10                     SHIFT THE FIELD LEFT UNTIL IT
         MVC   NUMOUT+14(7),NUMOUT+15   IS PROPERLY ALIGNED, ALWAYS
LSDNFIX  CLI   NUMOUT,C' '              ENSURING THAT NO SIGNIFICANT
         BNE   INVALID                  DATA IS SHIFTED OUT AT THE
         MVC   NUMOUT(21),NUMOUT+1      TOP END.
         CLI   NUMOUT+16,C'*'
         BNE   LSDNFIX                  SET UP THE AMOUNT IN 'DOUBLEWD'
         MVO   WORK(8),WORK(7)          PROPERLY. SHILLINGS IN TOP
         MVC   DOUBLEWD(1),WORK+5       SPOT, POUNDS IN NEXT FIVE, AND
         MVC   DOUBLEWD+1(5),WORK       PENCE IN THE NEXT.
         MVC   DOUBLEWD+6(1),WORK+6
*
INIZEALF MVC   ALFOUT+4(0),ALFOUT+3     BLANK ALPHA FIELD.
         MVC   FRFIXPOS,FRFIXSNG
         CLC   DOUBLEWD+1(2),HEXTEST    DO THE MILLIONS IF THEIR DIGITS
         BE    DOTHOU                   ARE NON-ZERO.
         MVC   HTU,DOUBLEWD+1
         BAL   RX1,DOHTU
         LA    RG,MILLIONS              ONLY USE THE PLURAL ON FRENCH.
         CLC   HTU,HEXTEST+4
         BNE   *+8
         LA    RG,MILLION
         BAL   RX2,PUT
DOTHOU   MVO   HTU(3),DOUBLEWD+3(2)     NOW DO THE THOUSANDS IF THEIR
         CLC   HTU,HEXTEST              DIGITS ARE NON-ZERO.
         BE    DOUNITS
         CLI   INCODE,C'F'              AVOID DIGIT WORDS IF ONE
         BNE   *+14                     THOUSAND IN FRENCH.
         CLC   HTU,HEXTEST+4
         BE    *+8
         BAL   RX1,DOHTU
         LA    RG,THOUSAND
         BAL   RX2,PUT
DOUNITS  MVC   FRFIXPOS,FRFIXPLR        NOW DO THE HUNDREDS, TENS, AND
         LA    RX1,DOMAJOR              UNITS DIGITS.
         MVC   HTU,DOUBLEWD+4
         NI    H,X'0F'
         CLI   H,X'00'
         BNE   DOHTU
         CLC   DOUBLEWD+1(4),HEXTEST
         BNE   DOANDTU
         CLI   TU,X'00'
         BNE   DOTU
DOMAJOR  LA    RG,MAJORS                NOW DESCRIBE ANY MAJOR UNITS.
         CLC   DOUBLEWD+1(5),HEXTEST+1
         BH    FIXMAJOR
         BL    TRYINTER
         LA    RG,MAJOR
FIXMAJOR BAL   RX2,PUT
TRYINTER CLI   DOUBLEWD,X'00'           NOW DESCRIBE ANY INTERMEDIATE
         BE    TRYMINOR                 UNITS.
         MVC   TU,DOUBLEWD
         BAL   RX1,DOTU
         LA    RG,INTERS
         CLI   TU,X'01'
         BNE   FIXINTER
         LA    RG,INTER
FIXINTER BAL   RX2,PUT
TRYMINOR LA    RG,ONLY                  NOW DESCRIBE ANY MINOR UNITS.
         CLI   DOUBLEWD+6,X'00'
         BE    FIXMINOR
         MVC   TU,DOUBLEWD+6
         CLC   DOUBLEWD(6),HEXTEST
         BL    *+12
         LA    RG,AND
         BAL   RX2,PUT
         BAL   RX1,DOTU
         LA    RG,MINORS
         CLI   TU,X'01'
         BNE   FIXMINOR
         LA    RG,MINOR
FIXMINOR BAL   RX2,PUT
OUT      RETURN (14,12)
INVALID  MVI   LINESOUT,X'0C'
         B     OUT
*
         DS    0D
DOUBLEWD DS    D
PUTLIMIT DS    F                        ADDRESS OF LAST ALLOWABLE SPOT.
HCHARPLN DS    H
HINDENT  DS    H
BINARYH2 DC    X'0002'
BINARYH4 DC    X'0004'
BINH30   DC    X'001E'
BINH259  DC    X'0103'
HLENGTH  DS    H
WORK     DS    CL22
PACKED1  DC    X'1C'
         DC    X'40402020206B2020206B2021204B2020',C'** '
LSDEDIT  DC    X'602020602020',C'** '
LSDP12   DC    X'012C'
HEXTEST  DC    X'000000000001'
*
*
* SUBROUTINE TO PLACE PHRASES FOR HUNDREDS DIGIT AND TENS AND UNITS
* DIGITS.
*
*  ENTRY SHOULD BE MADE SO THAT REGISTER 'RX1' IS SET UP FOR RETURN.
*
*  FOR ALL ENTRIES, THE POSITION 'TU' MUST HAVE BEEN SET UP WITH THE
*  TENS DIGIT IN THE ZONE PORTION AND THE UNITS DIGIT IN THE NUMERIC
*  PORTION.
*
*  IF ENTRY IS MADE TO 'DOHTU', THE POSITION 'H' MUST HAVE BEEN SET UP
*  WITH ZERO IN THE ZONE PORTION AND THE HUNDREDS DIGIT IN THE NUMERIC
*  PORTION. THE ROUTINE WILL PLACE THE HUNDREDS DIGIT AND WORD IF
*  NEEDED, THE CONNECTIVE 'AND' WHERE REQUIRED, AND THE TENS AND UNITS
*  DIGITS WHEN REQUIRED. DO NOT ENTER IF ALL THE DIGITS ARE ZERO.
*
*  IF ENTRY IS MADE TO 'DOANDTU', THE ROUTINE WILL EXIT AFTER DOING
*  NOTHING IF 'TU' IS ZERO. OTHERWISE THE ROUTINE WILL PLACE THE
*  CONNECTIVE 'AND' IF THE LANGUAGE IS ENGLISH AND THEN ALWAYS PLACE
*  THE TENS AND UNITS DIGITS.
*
*  IF ENTRY IS MADE TO 'DOTU', THE ROUTINE WILL PLACE THE TENS AND
*  UNITS DIGITS.
*
DOHTU    CLI   H,X'00'                  GO DIRECTLY TO 'DOTU' IF THE
         BE    DOTU                     HUNDREDS DIGIT IS ZERO.
         MVC   HTUFIX+5(1),H
HTUFIX   MVC   HTULOAD+3(1),0(RL)       SET UP 'RG' TO ACCESS H PHRASE.
HTULOAD  LA    RG,0(0,RL)
         CLI   1(RG),C'U'               AVOID DIGIT IF FRENCH ONE, ALSO
         BE    HTUDO100                 AVOID SPECIAL PLURAL OF 100.
         BAL   RX2,PUT                  PLACE HUNDREDS DIGIT. AVOID
         CLI   TU,X'00'                 SPECIAL PLURAL OF 100 IF 'TU'
         BE    HTU100S                  IS NOT ZERO.
HTUDO100 LA    RG,HUNDRED               PLACE REGULAR 100 PHRASE.
         BAL   RX2,PUT
DOANDTU  CLI   TU,X'00'                 EXIT IF 'TU' IS ZERO.
         BCR   8,RX1
         CLI   AND+1,C'A'               PLACE 'AND' IF ENGLISH.
         BNE   DOTU
         LA    RG,AND                   ALWAYS GO TO 'DOTU'.
         BAL   RX2,PUT
         B     DOTU
HTU100S  MVC   PUTLADRS+3(1),DISP100S   PLACE APPROPRIATE HUNDRED
         BAL   RX2,PUTLADRS             PHRASE.
         BR    RX1                      EXIT, AS 'TU' EQUALS ZERO.
*
DOTU     MVC   PUTLDISP+5(1),TU         DO NUMBERS 01-19 DIRECTLY VIA
         CLI   TU,X'19'                 POSITION TU.
         BNH   TUFINAL
         MVZ   TUFIXT+3(1),TU           SET UP 'RW1' WITH THE ADDRESS
TUFIXT   LA    RW1,0(0,RL)              OF POSITION T0.
         MVZ   TUFIXU+5(1),2(RW1)       ALSO SET UP ZONE OF POSITION T2
         MVN   TUFIXU+5(1),TU           AND NUMERIC OF U IN 'TUFIXU+5'.
         CLI   TUFIXU+5,X'00'           IF 'TUFIXU+5' IS ZERO, DO
         BE    TUFINAL                  DIRECTLY VIA POSITION TU.
         MVC   TULOADT+3(1),1(RW1)      SET UP 'RG' TO ACCESS TENS
TULOADT  LA    RG,0(0,RL)               PHRASE VIA POSITION T1.
         TM    2(RW1),X'0F'             USE A CONNECTIVE HYPHEN IF THE
         BZ    TUDOHYPH                 NUMERIC PART OF POSITION T2 IS
         MVZ   TUTESTU+1(1),TU          ZERO OR IF THE UNITS DIGIT IS
TUTESTU  CLI   TU,X'01'                 NOT ONE.
         BNE   TUDOHYPH
         BAL   RX2,PUT                  NO HYPHEN CASE - PLACE THE TENS
         LA    RG,AND                   PHRASE, THE 'AND', AND THEN SET
         BAL   RX2,PUT                  UP FOR THE FINAL PLACEMENT OF
         MVC   PUTLDISP+5(1),TUFIXU+5   THE UNITS PHRASE.
TUFINAL  BAL   RX2,PUTLDISP             PLACE THE ONE PHRASE OR THE
         BR    RX1                      FINAL PHRASE AND EXIT.
TUDOHYPH LA    RW1,HLENGTH+1
         LH    RW2,BINARYH2             HYPHEN CASE - SET UP THE TENS
         BAL   RX2,TUHYPHSR             PHRASE IN THE WORK AREA,
         AR    RW1,RW2                  APPEND THE HYPHEN,
         MVI   0(RW1),C'-'              AND THEN APPEND THE PROPER
TUFIXU   MVC   TULOADU+3(1),0(RL)       UNITS PHRASE.
TULOADU  LA    RG,0(0,RL)
         BAL   RX2,TUHYPHSR             FINALLY PLACE THE COMPOSITE
         STH   RW2,HLENGTH              PHRASE INTO THE OUTPUT AREA
         LA    RG,HLENGTH+1             FROM THE WORK AREA.
         BAL   RX2,PUT
         BR    RX1
TUHYPHSR MVC   TUMOVE+1(1),0(RG)
         MVC   HLENGTH+1(1),0(RG)
TUMOVE   MVC   1(0,RW1),1(RG)
         AH    RW2,HLENGTH
         BR    RX2
*
*
*
* SUBROUTINE TO PLACE A PHRASE IN THE OUTPUT AREA.
*
*  ENTRY SHOULD BE MADE SO THAT REGISTER 'RX2' IS SET UP FOR RETURN.
*
*  IF ENTRY IS MADE TO 'PUTLDISP', THE SINGLE POSITION AT THE ADDRESS
*  'PUTLDISP+5' MUST HAVE BEEN SET UP WITH THE HEXADECIMAL POSITION OF
*  THE LANGUAGE TABLE AT WHICH THE PROPER 'DISPLACEMENT' WITHIN THE
*  SAME TABLE IS FOUND.
*
*  IF ENTRY IS MADE TO 'PUTLADRS', THE SINGLE POSITION AT THE ADDRESS
*  'PUTLADRS+3' MUST HAVE BEEN SET UP WITH THE 'DISPLACEMENT' WITHIN
*  THE LANGUAGE TABLE AT WHICH THE PHRASE TO BE PLACED IS DEFINED.
*
*  IF ENTRY IS MADE TO 'PUT', REGISTER 'RG' MUST HAVE BEEN SET UP WITH
*  THE ADDRESS AT WHICH THE PHRASE IS DEFINED. AT THIS SPOT, THE LENGTH
*  OF THE PHRASE MINUS ONE HAS BEEN SET UP. THE PHRASE ITSELF FOLLOWS.
*
*   NOTE THAT AFTER THE PLACEMENT HAS BEEN DONE, REGISTER 'RP' POINTS
*   TO THE RIGHTMOST CHARACTER OF THE PHRASE JUST MOVED IN.
*
*   ALSO NOTE THAT DIRECT EXIT TO 'INVALID' WILL BE MADE IF PLACEMENT
*   OF THE PHRASE WOULD OVERFLOW THE OUTPUT AREA.
*
PUTLDISP MVC   PUTLADRS+3(1),0(RL)      MOVE IN THE DISPLACEMENT.
PUTLADRS LA    RG,0(0,RL)               SET UP LANGUAGE PHRASE ADDRESS.
PUT      AH    RP,BINARYH2              SET UP 'RP' WITH PROBABLE NEXT
         MVC   HLENGTH+1(1),0(RG)       PLACEMENT SPOT.
         MVC   PUTMOVE+1(1),0(RG)       SET UP THE LENGTH IN TWO SPOTS.
PUTSETUP LR    RW1,RP                   'RW1' GETS FIRST PLACEMENT SPOT
         AH    RP,HLENGTH               AND 'RP' GETS LAST ONE.
         CLR   RP,RN                    SEE IF A NEW LINE MUST BE
         BNL   PUTNEWLN                 STARTED.
         CL    RP,PUTLIMIT              GO TO 'INVALID' IF THE PHRASE
         BH    INVALID                  AT HAND WONT FIT IN THE AREA.
PUTMOVE  MVC   0(0,RW1),1(RG)           MOVE THE PHRASE INTO THE OUTPUT
         BR    RX2                      AREA AND EXIT.
PUTNEWLN LR    RP,RN                    TO SET UP A NEW LINE. FIX 'RP',
         AH    RN,HCHARPLN              CRANK 'RN', ADD THE INDENTATION
         AH    RP,HINDENT               TO THE NEW VALUE OF 'RP', ADD
         AP    LINESOUT,PACKED1         ONE TO THE OUTPUT LINE COUNT,
         B     PUTSETUP                 AND RETURN TO 'PUTSETUP'.
*
*
*
*
* THE ITEMS THAT VARY BY LANGUAGE ARE DESCRIBED AND DEFINED BELOW.
*
*  REGISTER 'RL' MUST BE LOADED WITH ONE LESS THAN THE ADDRESS OF THE
*  BEGINNING OF THE APPROPRIATE LANGUAGE TABLE.
*
*  THE 'DISPLACEMENT' MENTIONED BELOW IS THE VALUE THAT MUST BE ADDED
*  TO THE CONTENTS OF REGISTER 'RL' TO FIND THE ADDRESS FROM WHICH AN
*  APPROPRIATE WORD OR PHRASE MAY BE OBTAINED FOR PLACEMENT IN THE
*  OUTPUT STRING. AS ITS VALUE NEVER EXCEEDS 255, IT IS CONTAINED IN
*  ONE BYTE.
*
*   CONSIDER A DECIMAL NUMBER IN THE RANGE 01-99 AS BEING DESCRIBED BY
*   THE TWO DECIMAL DIGITS 'TU'.
*
*    THE HEXADECIMAL CODING POSITIONS OF EACH LANGUAGE TABLE ARE USED
*    AS FOLLOWS. REMEMBER THAT EACH TABLE STARTS AT POSITION 01.
*
*     POSITIONS 01-09, 10-19 CONTAIN THE 'DISPLACEMENT' FOR THE NUMBERS
*     01-09, 10-19 RESPECTIVELY.
*     ALSO IF THE NUMBER IS NOT 10 BUT IS OF THE FORM 'T0' AND IF
*     POSITION T2 IS ZERO IN ITS ZONE PORTION, THEN POSITION T0
*     CONTAINS THE REQUIRED 'DISPLACEMENT'.
*     ALL SUCH NUMBERS NEED ONLY ONE PHRASE.
*
*     ALL NUMBERS NOT DEALT WITH IN THE ABOVE PARAGRAPH NEED A TENS
*     PHRASE, A CONNECTIVE, AND A UNITS PHRASE.
*
*      POSITION T1 CONTAINS THE 'DISPLACEMENT' NEEDED TO ACCESS THE
*      TENS PHRASE.
*
*      IF 'U' IS 1 AND THE NUMERIC PORTION OF POSITION T2 IS NON-ZERO,
*      THE CONNECTIVE IS ' AND ' IN THE PROPER LANGUAGE.
*      IN ALL OTHER CASES THE CONNECTIVE IS A HYPHEN.
*
*      THE 'DISPLACEMENT' NEEDED TO ACCESS THE UNITS PHRASE IS FOUND IN
*      POSITION ZU, WHERE 'Z' IS THE ZONE PORTION OF POSITION T2.
*      NOTE THAT 'Z' CAN HAVE A VALUE OF 0 OR 1.
*
*       IT SHOULD ALSO BE NOTED THAT POSITION 7F CONTAINS THE
*       'DISPLACEMENT' FOR THE WORD TO FOLLOW THE HUNDREDS DIGIT IF IT
*       IS NOT ONE IN FRENCH AND IF THE FOLLOWING TENS AND UNITS DIGITS
*       ARE ZERO.
*       POSITIONS 7F AND 80 ARE VARIABLE IN THE FRENCH LANGUAGE TABLE.
*
*
ENGLISH  DC    X'732C0A3B5B6793996B'    RE 01-09.
         DC    X'04',C'THREE'           D=10
         DC    X'9F83A3AAB377BCC4CED7'  RE 10-19.
         DC    X'04',C'FORTY'           D=26
         DC    X'E0E000'                RE 20'S.
         DC    X'07',C'THOUSAND'        D=35
         DC    X'02',C'TWO'             D=44
         DC    X'E7E700'                RE 30'S.
         DC    X'06',C'HUNDRED'         D=51
         DC    X'03',C'FOUR'            D=59
         DC    X'1A1A00'                RE 40'S.
         DC    X'05',C'EIGHTY'          D=67
         DC    X'04',C'FIFTY'           D=74
         DC    X'4A4A00'                RE 50'S.
         DC    X'06',C'ONLY **'         D=83
         DC    X'03',C'FIVE'            D=91
         DC    X'8A8A00'                RE 60'S.
         DC    X'02',C'AND'             D=99
         DC    X'02',C'SIX'             D=103
         DC    X'03',C'NINE'            D=107
         DC    X'EEEE00'                RE 70'S.
         DC    X'02',C'ONE'             D=115
         DC    X'06',C'FIFTEEN'         D=119
         DC    X'33'                    SPECIAL 100'S.
         DC    X'434300'                RE 80'S.
         DC    X'05',C'ELEVEN'          D=131
         DC    X'04',C'SIXTY'           D=138
         DC    X'F6F600'                RE 90'S.
         DC    X'04',C'SEVEN'           D=147
         DC    X'04',C'EIGHT'           D=153
         DC    X'02',C'TEN'             D=159
         DC    X'05',C'TWELVE'          D=163
         DC    X'07',C'THIRTEEN'        D=170
         DC    X'07',C'FOURTEEN'        D=179
         DC    X'06',C'SIXTEEN'         D=188
         DC    X'08',C'SEVENTEEN'       D=196
         DC    X'07',C'EIGHTEEN'        D=206
         DC    X'07',C'NINETEEN'        D=215
         DC    X'05',C'TWENTY'          D=224
         DC    X'05',C'THIRTY'          D=231
         DC    X'06',C'SEVENTY'         D=238
         DC    X'05',C'NINETY'          D=246
*
LSDP240  DC    X'0000240C'
HTU      DS    0CL2
H        DS    CL1
TU       DS    CL1
         DS    CL1                      FOR 'MVO' SLOP.
*
MILLION  DC    X'06',C'MILLION'         D=260
*
*
FRENCH   DC    X'73660A298338A7ACB1'    RE 01-09.
         DC    X'04',C'TROIS'           D=10
         DC    X'3CB61ABB76C26B88C9D2'  RE 10-19.
         DC    X'04',C'DOUZE'           D=26
         DC    X'DBDB0F'                RE 20'S.
         DC    X'04',C'MILLE'           D=35
         DC    X'05',C'QUATRE'          D=41
         DC    X'E1E10F'                RE 30'S.
         DC    X'03',C'CENT'            D=51
         DC    X'02',C'SIX'             D=56
         DC    X'02',C'DIX'             D=60
         DC    X'E8E80F'                RE 40'S.
         DC    X'0B',C'QUATRE-VINGT'    D=67
         DC    X'F1F10F'                RE 50'S.
         DC    X'0B',C'SEULEMENT **'    D=83
         DC    X'FBFB0F'                RE 60'S.
         DC    X'01',C'ET'              D=99
         DC    X'03',C'DEUX'            D=102
         DC    X'04',C'SEIZE'           D=107
         DC    X'FB1F'                  RE 70'S.
         DC    X'01',C'UN'              D=115
         DC    X'07',C'QUATORZE'        D=118
FRFIXPOS DS    CL2                      SPECIAL RE 100'S AND 80.
         DC    X'4300'                  RE 80'S.
         DC    X'03',C'CINQ'            D=131
         DC    X'07',C'DIX-SEPT'        D=136
         DC    X'4310'                  RE 90'S.
         DC    X'04',C'CENTS'           D=147
         DC    X'0C',C'QUATRE-VINGTS'   D=153
         DC    X'03',C'SEPT'            D=167
         DC    X'03',C'HUIT'            D=172
         DC    X'03',C'NEUF'            D=177
         DC    X'03',C'ONZE'            D=182
         DC    X'05',C'TREIZE'          D=187
         DC    X'05',C'QUINZE'          D=194
         DC    X'07',C'DIX-HUIT'        D=201
         DC    X'07',C'DIX-NEUF'        D=210
         DC    X'04',C'VINGT'           D=219
         DC    X'05',C'TRENTE'          D=225
         DC    X'07',C'QUARANTE'        D=232
         DC    X'08',C'CINQUANTE'       D=241
         DC    X'07',C'SOIXANTE'        D=251
         DC    X'07',C'MILLIONS'        D=260
*
FRFIXSNG EQU   ENGLISH+126              RE SINGULARS.
FRFIXPLR EQU   ENGLISH+6                RE PLURALS.
*
*
*
* THE ITEMS THAT VARY BY CURRENCY ARE DEFINED BELOW.
*
*  REGISTER 'RC' MUST BE LOADED WITH THE ADDRESS OF THE BEGINNING OF
*  THE APPROPRIATE CURRENCY TABLE.
*
DOLLAR   DC    C'$'
         DC    X'05',C'DOLLAR'
         DC    X'06',C'DOLLARS'
         DC    X'06',C'CENT **    '
         DC    X'07',C'CENTS **   '
*
POUNDDEC DC    C'<'
         DC    X'04',C'POUND '
         DC    X'05',C'POUNDS '
         DC    X'0A',C'NEWPENNY **'
         DC    X'0A',C'NEWPENCE **'
*
POUNDLSD DC    C'<'
         DC    X'04',C'POUND '
         DC    X'05',C'POUNDS '
         DC    X'07',C'PENNY **   '
         DC    X'07',C'PENCE **   '
         DC    X'07',C'SHILLING'
         DC    X'08',C'SHILLINGS'
*
         LTORG
*
*
* THE 3 DUMMY SECTINS WHICH FOLLOW ARE SET UP TO ALLOW EASY REFERENCE
* TO ITEMS TO BE ACCESSED VIA REGISTERS 'RL', 'RC', AND 'RI'.
*
*
LANGGO   DSECT                          USING 'RL'.
THOUSAND EQU   LANGGO+35
HUNDRED  EQU   LANGGO+51
ONLY     EQU   LANGGO+83
AND      EQU   LANGGO+99
DISP100S EQU   LANGGO+127
MILLIONS EQU   LANGGO+260
*
CURRGO   DSECT                          USING 'RC'.
CURRSYMB EQU   CURRGO
MAJOR    EQU   CURRGO+1
MAJORS   EQU   CURRGO+8
MINOR    EQU   CURRGO+16
MINORS   EQU   CURRGO+28
INTER    EQU   CURRGO+40
INTERS   EQU   CURRGO+49
*
* THE COMMENTS BESIDE THE DS ITEMS BELOW SHOW THE ORDER AND COBOL
* PICTURES NEEDED IN A COBOL CALLING PROGRAMME.
*
INANDOUT DSECT                          USING 'RI'.
INCODE   DS    CL1       PICTURE  X(1)  NEED ONLY THIS PARAMETER POINT.
CHAROUT  DS    PL2       PICTURE  9(3)       COMPUTATIONAL-3
CHARPLN  DS    PL2       PICTURE  9(3)       COMPUTATIONAL-3
INDENT   DS    PL1       PICTURE  9(1)       COMPUTATIONAL-3
AMOUNT   DS    PL6       PICTURE S9(9)V9(2)  COMPUTATIONAL-3
LINESOUT DS    PL1       PICTURE S9(1)       COMPUTATIONAL-3
NUMOUT   DS    CL16      PICTURE  X(16)
ALFOUT   DS    CL1       PICTURE  X(THE NUMBER IN 'CHAROUT')
*
         END
