//TSDAMM JOB 01992,DAM,MSGCLASS=H,NOTIFY=TSDAM,COND=(0,NE)
//*
//*
//*    MVS/SP  1.3.4
//*
//*
//*
//*
//* I AM NOT A SMP MAN SO IF YOU WANT TO USE SMP YOU HAVE TO
//* ADD IT YOURSELF.  I JUST CODED AND TESTED THE MOD.
//*
//*   DON MARQUARDT
//*   MAY AND SPEH    SHARE (MSD)  GUIDE (LTU)
//*   312-369-3000 EXT 2778
//*
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -EXPAND
//EXPAND EXEC PGM=IEWL,PARM='LIST,MAP,XREF,NCAL,RENT,AC=1'
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSLIN    DD DDNAME=SYSIN
//SYSIN     DD *
 INCLUDE SYSLMOD(HEWLH096)
 EXPAND HEWLFFNL(200)
 ENTRY HEWLFROU
 NAME HEWLH096(R)
//SYSLMOD   DD DSN=SYS1.LINKLIB,
//             DISP=SHR
//SYSUT1    DD UNIT=SYSDA,
//             SPACE=(CYL,(5,5))
//*
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -ASM
//ASM     EXEC PGM=IEV90,PARM='NODECK,NOLOAD,NOALIGN'
//SYSLIB    DD DSN=SYS1.AMODGEN,
//             DISP=SHR
//          DD DSN=SYS1.MACLIB,
//             DISP=SHR
//SYSUT1    DD UNIT=VIO,
//             DCB=BLKSIZE=1700,
//             SPACE=(CYL,(1,1))
//SYSUT2    DD UNIT=VIO,
//             DCB=BLKSIZE=1700,
//             SPACE=(CYL,(1,1))
//SYSUT3    DD UNIT=VIO,
//             DCB=BLKSIZE=1700,
//             SPACE=(CYL,(1,1))
//SYSPRINT  DD DSN=&&LIST,
//             UNIT=VIO,
//             DISP=(,PASS),
//             SPACE=(TRK,(20,20))
//SYSIN     DD *
HEWLFFNL CSECT ,
*
* THIS CODE IS FOR THE DFP LINKAGE EDITOR HEWLH096 AT
* LEVEL 8503 AND HAS UZ78097 APPLIED
*
*ZAP CARD  NAME HEWLH096 HEWLFFNL
         PRINT GEN
         PRINT DATA
         SPACE 2
R1       EQU   1
REG9     EQU   9
*
*
DCBADRS2 EQU   HEWLFFNL+X'0A98'   POINTER TO SYSLMOD DCB
MINOR    EQU   HEWLFFNL+X'08F8'   POINTER TO MINOR ENQ NAME
TRAP     EQU   HEWLFFNL+X'05A8'   TRAP INTERCEPT ADDRESS
PATCH    EQU   HEWLFFNL+X'0BE8'   PATCH AREA ADDRESS
PSTART   EQU   HEWLFFNL+X'0002'   BASE ADDRESS
MOVE     EQU   HEWLFFNL+X'05B0'   EXECUTED MOVE INSTR
*
*  NOTES ON FINDING THE ABOVE INSTRUCTION ADDRESSES IN NEW UPDATES
*
*  USE THE DISASSEMBLER FOR HEWLH096 HEWLFFNL
*
*  THE FOLLWOING FIELDS WILL BE INDICATED IN THE RLD INFO SECTION
*
*      DCBADRS2  BY NAME HEWLCMDB
*      MINOR     BY FIRST ENTRY FOR NAME MINOR
*
*   THE BALANCE OF THE ADDRESS CAN BE LOCATED BY LOOKING AT THE
*   DIS-ASSEMBLED SOURCE CODE.
*
*
*      TRAP      IS AROUND LOCATION 5A0  +/- A FEW BYTES
*                LOOK FOR AN EX INSTRUCTION FOLLOWED BY A BALR 14,15
*                THEN A BR 8.  TRAP IS THE ADDRESS OF THE EX INSTR.
*      PATCH     THE FIRST FULL WORD AFTER THE X'FFFF0000' AT THE
*                END OF THE CSECT.  THIS WILL BE WHERE THE ADDED
*                SPACE IS CREATED BY THE EXPAND CSECT STEP.
*      MOVE      THIS IS THE INSTRUCTION AFTER THE BR8 INSTRUCTION
*                FOUND FOR THE TRAP ADDRESS ABOVE.
*
*                THE SEQUENCE IS
*
*            PATCH   EX   ....,....
*                    BALR 14,15
*                    B    8
*            MOVE    MVC  0(1,3),0(10)
*
*
*
*
         SPACE
         DSECT
LINE     DS    CL120              OUTPUT BUFFER
         SPACE 2
HEWLFFNL CSECT ,
         SPACE 3
         USING PSTART,12
         USING LINE,3
         EJECT ,
*ZAP START VER
         SPACE
         ORG   TRAP               VERIFY INTERCEPT
         SPACE
         EX    REG9,MOVE
RETURN   EQU   *
         SPACE 4
*ZAP START REP
         SPACE
         ORG   TRAP
         B     NEWCODE            BRANCH TO NEW CODE
         EJECT
*ZAP START VER
         SPACE
         ORG   PATCH              VERIFY PATCH AREA
         DC    96X'00'            SHOULD BE ZEROS
*ZAP START REP
         ORG   PATCH
         SPACE
NEWCODE  EQU   *                  ENTRY TO NEW CODE
*
*     SINCE THE DSN AND VOLSER OVERLAYS THE AMODE PART OF THE
*     MESSAGE, IT IS SAVED AND THEN MOVED BACK INTO THE PRINT LINE
*
         EX    REG9,MOVE          PATCHED OUT INSTRUCTION
         MVC   AMODESV,LINE+64    SAVE AMODE
         LA    REG9,LINE+52
         CLI   LINE+15,C'D'       '...DOES NOT EXIST...' MSG ?
         BE    MOVEDSN            YES, GO PUT IN DSN/VOLSER
         CLI   LINE+15,C'N'       '...NOW...' MSG ?
         BNE   RETURN             NO, THEN QUIT NOW
         MVC   AMODESV,LINE+42    SAVE AMODE
         LA    REG9,LINE+31
         CLI   LINE+19,C'R'       '...NOW RELPACED...' MSG ?
         BE    MOVEDSN            YES, GO PUT IN DSN/VOLSER
         MVC   AMODESV,LINE+40    SAVE AMODE
         LA    REG9,LINE+28       NO, ASSUME '...NOW ADDED...' MSG
MOVEDSN  EQU   *
         L     R1,MINOR           ADDR OF MINOR ENQ NAME
         MVC   0(44,REG9),0(R1)   MOVE DSN TO OUTPUT BUFFER
SCANDSN  EQU   *
         LA    REG9,1(,REG9)      SCAN TO END OF DSN
         CLI   0(REG9),C' '
         BNE   SCANDSN
         MVC   1(3,REG9),ONTEXT   MOVE 'ON ' TO OUTPUT BUFFER
         L     R1,DCBADRS2        R1 --> DCB
         L     R1,44(,R1)         R1 --> DEB
         L     R1,32(,R1)         R1 --> UCB
         MVC   4(6,REG9),28(R1)   MOVE VOLSER TO OUTPUT BUFFER
         MVC   12(10,REG9),AMODESV MOVE IN AMODE
         B     RETURN             RETURN TO MAIN CODE
ONTEXT   EQU   *
         DC    C'ON '
AMODESV  DC    CL10' '
         SPACE 5
*ZAP STOP
         END
//*
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -ZAPPER
//ZAPPER  EXEC PGM=ASMTOZAP
//*
//*  THIS PROGRAM IS FROM THE CBT TAPE AND IS IN LOAD MODULE
//*  FORM IN FILE 035 OF THE TAPE.
//*
//STEPLIB   DD DSN=MVS.FILE035.PDS,
//             DISP=SHR
//GO.IN     DD DSN=&&LIST,
//             DISP=(OLD,DELETE)
//OUT       DD DSN=&&ZAPFILE,
//             UNIT=VIO,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=1600),
//             DISP=(,PASS),
//             SPACE=(TRK,(1,1))
//*
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - -ZAPLKED
//ZAPLKED EXEC PGM=AMASPZAP
//SYSPRINT  DD SYSOUT=*
//SYSLIB    DD DSN=SYS1.LINKLIB,
//             DISP=SHR
//SYSIN     DD DSN=&&ZAPFILE,
//             DISP=(OLD,DELETE)
