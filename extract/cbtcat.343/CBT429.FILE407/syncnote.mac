***
***  An edited version of a fax message sent in October 1990.
***  Users of DYNABLDL and SYNCSORT take note!
***


To:     Shmuel Golob, Newsweek
From:   David Andrews, A. Duda and Sons, Inc.  407-365-2153  (fax: 2148)
Subj:   DYNABLDL vs. SYNCSORT
------------------------------------------------------------------------

I have been fiddling with DYNABLDL for the last couple of weeks.  I've
been disappointed by the hit ratio - about 65 percent.  After spending
a day and a half on SLIP traps and GTF traces, I determined that the
DYNABLDL misses were nearly all SYNCSORT modules.  This confused me;
all the SYNCSORT modules live in a user LPA library and do NOT exist
in the link list at all!

I called Syncsort Technical Support and asked "Why does SYNCSORT do
BLDLs for modules that are already in the link pack?"  The answer was
that "SYNCSORT does this in order to accommodate customers that want
to apply changes to SYNCSORT and test them without IPLing the system.
It is unlikely that we are ever going to change this behavior because
this is a BIG change.  If you do not want to endure the overhead of a
BLDL search for all the SYNCSORT modules each time you run SYNCSORT,
you should put the SYNCSORT library near the front of your linklist
concatenation.  This library should not be authorized; if it is then
SYNCSORT will ABEND U1178 (under XA, not 370)."

So here is the choice you have with SYNCSORT:
  1.  Install the package reentrant with a user LPA library.  Don't
      put the modules in the linklist.  Each SYNCSORT execution will
      cause a BLDL of 50-80 "SS33xxxx" modules against your linklist
      concatenation.  If you have a long linklist (we have 14
      libraries at Duda) then this is significant overhead.

  2.  Install the package non-reentrant or pseudo-reentrant.

If you are using LLA, life is easy.  Because LLA maintains a complete
incore copy of the linklist directories, it tolerates BLDLs for
non-existent members with relatively little overhead, since it handles
BLDLs at near-electronic speed (though its storage requirement is
high).

If you have installed DYNABLDL, life is hard.  DYNABLDL only
implements a small directory cache, and passes control to the real
IGC018 if a miss occurs.  SYNCSORT generates many cache misses by
design, adding considerable overhead.

Because DYNABLDL has the ability to ignore some of the linklist
libraries, and its storage requirements are so much smaller, we find
it superior to LLA (Linklist Look-Aside).  But if you do a lot of
sorting, SYNCSORT has problems in the DYNABLDL environment.
