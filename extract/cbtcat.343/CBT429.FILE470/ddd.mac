         MACRO
&DDNAME  DDD   &DUMMY,&DSN=,&DSNAME=,&DISP=,&TERM=,&FREE=END,          *
               &UNIT=,&SPACE=,&MSVGP=,&VOL=,&VOLUME=,&LABEL=,&PROTECT=,*
               &DCB=,&SUBSYS=,                                         *
               &SYSOUT=,&DEST=,&HOLD=,&COPIES=,&OUTLIM=,&FCB=,&UCS=,   *
               &BURST=,&CHARS=,&FLASH=,&MODIFY=,                       *
               &KEYADDS=,&TYPE=PERM,&MOUNT=NO,&EXIT=ALODDERR
         GBLA  &X,&Y,&H,&N,&CONCATX,&R
         GBLB  &CONCATB,&CONCATD,&DDDFAIL,&DDDD
         LCLA  &A
         LCLC  &C,&D
         AIF   (&DDDD).ERRDDDD
&X       SETA  20 DISPLACEMENT FROM ALOBLOCK TO FIRST TEXT UNIT POINTER
&Y       SETA  20         NEGATIVE DISTANCE FROM ALOBLOCK TO FIRST DATA
&R       SETA  14                      FIRST REGISTER LOADED
         DDD5  &DDNAME,&DSN,&DSNAME,&DISP
         AIF   ('&TERM' EQ '').TERMX
         AIF   ('&TERM' NE 'TS').ERRTERM
         DDD0  =Y(X'28',0),,,,'TERM=TS'
.TERMX   AIF   ('&FREE' EQ 'END').FREEX
         AIF   ('&FREE' NE 'CLOSE').ERRFREE
         DDD0  =Y(X'1C',0),,,,'FREE=CLOSE'
.FREEX   AIF   ('&UNIT&SPACE&MSVGP' EQ '').DDD1X
         DDD1  &UNIT,&SPACE,&MSVGP
.DDD1X   AIF   ('&VOL&VOLUME&LABEL&PROTECT' EQ '').DDD2X
         AIF   ('&VOLUME' EQ '').DDD2V
         AIF   ('&VOL' NE '').ERRVOL
         DDD2  &VOLUME,&LABEL,&PROTECT
         AGO   .DDD2X
.DDD2V   DDD2  &VOL,&LABEL,&PROTECT
.DDD2X   AIF   ('&DUMMY&DCB&SUBSYS' EQ '').DDD3X
         DDD3  &DUMMY,&DCB,&SUBSYS
.DDD3X   AIF   ('&SYSOUT&DEST&HOLD&COPIES&OUTLIM&FCB&UCS' EQ '' AND    *
               '&BURST&CHARS&FLASH&MODIFY' EQ '').DDD4X
         DDD4  &SYSOUT,&DEST,&HOLD,&COPIES,&OUTLIM,&FCB,&UCS,          *
               &BURST,&CHARS,&FLASH,&MODIFY
.DDD4X   AIF   ('&KEYADDS' EQ '').KEYADDX
&A       SETA  0
.KEYLOOP AIF   (&A GE N'&KEYADDS).KEYADDX
&A       SETA  &A+1
&C       SETC  '&KEYADDS(&A)'
         AIF   ('&C' EQ '').KEYLOOP
         AIF   ('&C'(1,1) EQ '(').KEYADDR
         DDD0  &C,,,,'KEYADDS=&C'
         AGO   .KEYLOOP
.KEYADDR DDD0  0&C,,,,'KEYADDS=&C'
         AGO   .KEYLOOP
.KEYADDX AIF   ('&TYPE' EQ 'PERM').TYPEP
         AIF   ('&TYPE' EQ 'TEMP').TYPEX
         AIF   ('&TYPE' NE 'CNVRT').ERRTYPE
         DDD0  =Y(X'53',0),,,,'TYPE=CNVRT  CONVERTIBLE'
.TYPEP   DDD0  =Y(X'52',0),,,,'PERMANENTLY ALLOCATED'
.TYPEX   AIF   (&R NE 14).R14X
&X       SETA  &X-4
         AGO   .RX
.R14X    AIF   (&R NE 15).R15X
         ST    14,ALOBLOCK+&X
         AGO   .RX
.R15X    AIF   (&R NE 0).R0X
         STM   14,15,ALOBLOCK+&X
&X       SETA  &X+4
         AGO   .RX
.R0X     STM   14,0,ALOBLOCK+&X
&X       SETA  &X+8
.RX      OI    ALOBLOCK+&X,X'80'        SET END OF TEXT UNIT ADDR LIST
&C       SETC  'X''0100''+X''0020'''   ALLOC, NOMOUNT
         AIF   ('&MOUNT' EQ 'NO').MOUNTX
         AIF   ('&MOUNT' NE 'YES').ERRMOUN
&C       SETC  'X''0100'''             ALLOC
.MOUNTX  AIF   (NOT &CONCATD).CONCADX
&C       SETC  '&C+X''0080'''          DON'T USE EXISTING UNLESS CNVRT
.CONCADX LA    0,&C                    LOAD VERB, FLAGS1
         AIF   ('&EXIT'(1,1) EQ '(').LREXIT
         LA    15,&EXIT                LOAD ERROR EXIT RTN ADDRESS
&DDDFAIL SETB  ('&EXIT' EQ 'ALODDERR' OR &DDDFAIL)
         AGO   .BALDDDD
.LREXIT  LR    15,&EXIT                LOAD ERROR EXIT RTN ADDRESS
.BALDDDD BAL   14,ALOROUT              LINK TO DDDD MACRO
         SPACE 1
         AIF   (NOT &CONCATB).CONCX
&CONCATD SETB  1
         MVC   ALOCONCA+&CONCATX.(10),ALORTDDN+4 SAVE DDNAME FOR CONCAT
&CONCATX SETA  &CONCATX+1
         MVI   ALOCONCA+&CONCATX,8     SET LENGTH TO 8 FOR SPACING
&CONCATX SETA  &CONCATX+9
         SPACE 1
.CONCX   AIF   (&H GE &Y).HX
&H       SETA  &Y
.HX      AIF   (&N GE &X).MEXIT
&N       SETA  &X
.MEXIT   MEXIT
.ERRDDDD MNOTE 12,'DDD MAY NOT BE ISSUED AFTER DDDD'
         MEXIT
.ERRFREE MNOTE 8,'FREE=&FREE INVALID. FREE=END ASSUMED.'
         AGO   .FREEX
.ERRVOL  MNOTE 12,'BOTH VOL= AND VOLUME= SPECIFIED. VOLUME=&VOLUME IGNO*
               RED.'
         AGO   .DDD2V
.ERRTERM MNOTE 8,'INVALID VALUE, TERM=&TERM.. IGNORED.'
         AGO   .TERMX
.ERRTYPE MNOTE 8,'TYPE=&TYPE INVALID. TYPE IGNORED.'
         AGO   .TYPEP
.ERRMOUN MNOTE 8,'MOUNT=&MOUNT INVALID. IGNORED.'
         AGO   .MOUNTX
         MEND
