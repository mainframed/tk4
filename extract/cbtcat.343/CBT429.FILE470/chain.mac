* CHAIN AND UNCHAIN MANAGE LIFO QUEUES IN A MULTI-PROGRAMMING AND/OR
*   MULTI-PROCESSING ENVIRONMENT.
*  CHAIN ADDS A USER-SUPPLIED ELEMENT TO A QUEUE SPECIFIED BY ITS
*    ANCHOR ADDRESS.
*  UNCHAIN WILL REMOVE THE MOST RECENTLY ADDED ELEMENT FROM A QUEUE
*    SPECIFIED BY ITS ANCHOR ADDRESS AND PLACE THE ADDRESS OF THE
*    ELEMENT IN REGISTER 1.
*    IF THERE ARE NO ELEMENTS IN THE QUEUE, UNCHAIN PLACES ZERO IN
*    REGISTER 1.
* EACH QUEUE IS DEFINED BY ITS "ANCHOR", WHICH MUST BE 8 BYTES ON A
*   DOUBLEWORD BOUNDARY. THE ANCHOR MUST CONTAIN BINARY ZEROS WHEN THE
*   FIRST CHAIN OR UNCHAIN MACRO IS ISSUED ON IT. THEREAFTER IT IS
*   MAINTAINED ENTIRELY BY THE MACROS.
* THE FIRST 4 BYTES OF EACH ELEMENT ARE A PREFIX. THE PREFIX IS USED
*   BY THE MACROS AND IS NOT INITIALIZED BY THE USER.
         MACRO
&NAME    CHAIN &ANCHOR,&ELEMENT,&LAST=0(0,1)
         LCLC  &A,&E,&L
&A       SETC  '4+&ANCHOR'
&E       SETC  '&ELEMENT'
&L       SETC  '&LAST'
         AIF   ('&ANCHOR'(1,1) NE '(').AX
&A       SETC  '4&ANCHOR'
.AX      AIF   ('&ELEMENT'(1,1) NE '(').EX
&E       SETC  '0&ELEMENT'
.EX      AIF   ('&LAST'(1,1)  NE '(').LX
&L       SETC  '0&LAST'
.LX      ANOP
&NAME    LA    1,&E           ADDRESS OF NEW 1ST ELEMENT
         L     0,&A           LOAD ADDRESS OF OLD 1ST ELEMENT
         ST    0,&L           NEW ELEMENT POINTS TO OLD 1ST ELEMENT
         CS    0,1,&A         CHAIN POINTS TO NEW 1ST ELEMENT
         BNE   *-8            IF CONTENTION, RETRY
         MEND
