1
0        WRITTEN BY MIKE AMLING, CNA INSURANCE, CHICAGO,IL
1
0                     DYNAMIC ALLOCATION MACROS               PAGE 1
0                        USAGE SPECIFICATIONS
                      VERSION 2.8 AS OF 10/11/84
0SUMMARY OF AMENDMENTS:  THE FOLLOWING  CHANGES BRING THIS MANUAL TO
 LEVEL 2.8:
  THE USE OF THE @ CHARACTER FOR RUN-TIME VALUES IS STRESSED.
  THE DYNAMIC  ALLOCATION MACROS WILL  TAKE ADDRESSES OF  VALUES NOT
 KNOWN AT ASSEMBLY  TIME.  TO INDICATE THAT  AN OPERAND OF A  DDD OR
 FREE MACRO IS AN ADDRESS OF A VALUE RATHER THAN A VALUE ITSELF, ADD
 THE CHARACTER '@' TO THE END OF AN RX-TYPE ADDRESS IN THE OPERAND.
  THE FOLLOWING CHANGES BRING THIS MANUAL TO LEVEL 2.7:
  MINOR ENHANCEMENTS TO THE EXPLANATION OF THE USE OF THE @ SIGN.
  THE FOLLOWING CHANGES BRING THIS MANUAL TO LEVEL 2.6:
  THE DCB=BUFNO KEYWORD,  THE DCB=KEYLEN KEYWORD,  THE FIRST OR ONLY
 SUBPARAMETER  OF  THE   COPIES  KEYWORD,   AND  THE   VOLUME  COUNT
 SUBPARAMETER OF THE  VOLUME KEYWORD OF THE DDD MACRO  ARE NO LONGER
 LIMITED TO VALUES LESS THAN 128.
  THE DDD  MACRO SUPPORTS THE FOLLOWING  OPERANDS WHICH MAY  BE USED
 ONLY    WHEN   EXECUTING    UNDER    MVS/XA:    BURST=,     CHARS=,
 COPIES=(,(GROUP,VALUES)), FLASH=, MODIFY=, UNIT=(,,DEFER).
  THE DEFAULT  ERROR EXIT  HAS BEEN  CHANGED TO  INVOKE IKJEFF18  TO
 WRITE A WTO DESCRIBING THE ERROR.
  THE  MACROS WILL  WORK  IN 31-BIT  ADDRESSING  MODE UNDER  MVS/XA.
 (SINCE IKJEFF18  OPERATES IN 24-BIT  ADDRESSING MODE,   THE DEFAULT
 ERROR  EXIT ROUTINE  SHOULD  NOT BE  USED IF  THE  LITERAL POOL  OR
 WORKING STORAGE ARE ABOVE THE 16 MEGABYTE LINE.)
  THE USE OF '@' FOR SPECIFYING TEXT UNIT PARAMETER VALUES NOT KNOWN
 AT ASSEMBLY TIME IS NOW DOCUMENTED.
  THE KEYADDS KEYWORD  OF THE DDD,  DDI AND FREE  MACROS WILL ACCEPT
 ADDRESSES OF FULLWORDS POINTING TO TEXT UNITS.
1
0                     DYNAMIC ALLOCATION MACROS               PAGE 2
0FUNCTION:
0     THE DYNAMIC ALLOCATION MACROS (DDD, FREE, CONCAT, DDDD,  DDTU)
      CONSTRUCT THE  REQUEST BLOCK  AND TEXT  UNIT ADDRESS  LIST FOR
      DYNAMIC ALLOCATION, ISSUE THE "DYNALLOC MACRO" (SVC 99),  TEST
      THE RETURN CODE,   AND IF IT IS  NOT 0,  ABEND OR  BRANCH TO A
      USER-SPECIFIED RECOVERY ROUTINE.
       THE DYNAMIC  ALLOCATION MACROS PERFORM  "DYNAMIC ALLOCATION",
      "DYNAMIC UNALLOCATION" AND "DYNAMIC CONCATENATION".
0      THOSE OPERANDS OF THE MACROS THAT HAVE EQUIVALENTS IN THE JCL
      DD STATEMENT MAY ALL BE CODED THE  SAME WAY AS THEY ARE IN JCL
      (WITH A FEW EXCEPTIONS NOTED IN THIS MANUAL).   THOSE OPERANDS
      THAT SPECIFY  NUMERIC  VALUES  MAY  ALSO   BE  CODED  AS  NON-
      RELOCATABLE ASSEMBLER EXPRESSIONS.
       AS  SUPPORT  FOR TEXT  UNIT  PARAMETER  VALUES NOT  KNOWN  AT
      ASSEMBLY  TIME,  ANY  OPERAND  WHOSE  CORRESPONDING TEXT  UNIT
      CONTAINS A  PARAMETER VALUE  (WITH A  FEW EXCEPTIONS  NOTED IN
      THIS MANUAL)   MAY BE CODED  AS AN RX-TYPE  ADDRESS EXPRESSION
      FOLLOWED BY THE CHARACTER '@'.  THE RX-TYPE ADDRESS MUST POINT
      TO STORAGE  CONTAINING THE  VALUE TO BE  PLACED INTO  THE TEXT
      UNIT FOR THAT OPERAND.  VALUES FOR OPERANDS OF VARYING LENGTHS
      MUST  BE PADDED  TO THE  MAXIMUM LENGTH  ALLOWED.  THE  MACROS
      SUPPLY THE TEXT UNIT KEY, NUMBER AND LENGTH.
       THEY USE  GLOBAL SYMBOLS  TO DETERMINE THE  LENGTH OF  A WORK
      AREA AND WHETHER CERTAIN FEATURES HAVE BEEN USED.
       FULL DOCUMENTATION ON  THE USE OF DYNAMIC  ALLOCATION AND SVC
      99 IS  IN OS/VS2 SYSTEM  PROGRAMMING LIBRARY:   JOB MANAGEMENT
      (GC28-0627-1)  OR  MVS/XA SYSTEM PROGRAMMING  LIBRARY:  SYSTEM
      MACROS AND FACILITIES (GC28-1150-1).   JCL REFERENCE IS OS/VS2
      MVS JCL (GC28-0692-3).
       EXAMPLE:  ALLOCATE DDNAME SYSUT1 TO A DATASET WHOSE NAME WILL
      NOT BE KNOWN UNTIL RUN TIME.
0     * ALLOCATE THE DATASET WHOSE NAME IS IN THE 44 BYTES FROM MYWORK+1
      *  THRU MYWORK+59 WITH MEMBER NAME IN THE 8 BYTES BEGINING 2 BYTES
      *  AFTER THE ADDRESS CONTAINED IN GENERAL REGISTER RN.
      SYSUT1   DDD   DSN=MYWORK+16@(2(RN)@),DISP=SHR
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 3
0 DDD (DYNAMIC DATA DEFINITION) - PERFORM DYNAMIC ALLOCATION
0     THE  DDD  MACRO,   MODELED  AFTER   THE  JCL  DD  STATEMENT,
 CONSTRUCTS A TEXT  UNIT LIST AND CALLS A SUBROUTINE  (IN THE DDDD
 MACRO EXPANSION)   TO ISSUE SVC  99.  IF  DDD IS ISSUED  DURING A
 CONCATENATION IT ALSO CONSTRUCTS PART  OF A DYNAMIC CONCATENATION
 TEXT UNIT. THE DDD MACRO EXPANSION CONTAINS ONLY EXECUTABLE CODE.
0SYNTAX:
0                                                                -

  NAME                           'RETURN' CODED AS THE NAME
                               INDICATES A REQUEST FOR THE RETURN
                               OF THE DDNAME (SEE BELOW).  ANY
                               OTHER VALUE IS INTERPRETED AS A
                               DDNAME SPECIFICATION EXACTLY AS IN
                               JCL.
0 DDD                            PRECEDED AND FOLLOWED BY AT LEAST
                               ONE BLANK.
                                                                 -

0    DUMMY                      POSITIONAL PARAMETER, OPTIONAL.
                               IF USED, MUST BE CODED AS SHOWN.
                               INDICATES ALLOCATION OF A DUMMY
                               DATASET, EXACTLY AS IN JCL.
0    KEYWORDS:                  OPTIONAL. USE KEYWORDS TO INDICATE
                               SPECIFICS OF THE ALLOCATION.
                                                                 -

  THE KEYWORD OPERANDS OF DDD MAY BE CODED, FOR THE MOST PART,  AS
         IF THEY WERE KEYWORDS OF THE  JCL DD STATEMENT.   THE DDD
         OPERANDS VALUES ARE NOT ALWAYS KNOWN AT ASSEMBLY TIME AND
         FOR THIS  REASON,   DDD  ACCEPTS   ADDRESSES  OF  DYNAMIC
         ALLOCATION
  DDD SUPPORTS  THE  FOLLOWING KEYWORDS  (WITH  NOTED  EXCEPTIONS)
         EXACTLY AS IN JCL:
0      DISP=  (EXCEPTION:   DYNAMIC  ALLOCATION DOES  NOT  SUPPORT
              PASSED  DATASETS (DISP=(,PASS) OR DISP=(,,PASS)))
       SPACE=  (EXCEPTION:   DYNAMIC ALLOCATION  DOES NOT  SUPPORT
              ABSOLUTE TRACK ALLOCATION (SPACE=(ABSTR,...)))
       UNIT=  (UNIT=(,,DEFER)   FOR EXECUTION  UNDER MVS/XA  ONLY.
              EXCEPTON:    DYNAMIC  ALLOCATION  DOES  NOT  SUPPORT
              UNIT=AFF=.   A  PARALLEL MOUNT UNIT=(,P)   CANNOT BE
              SPECIFIED AS AN RX-TYPE ADDRESS FOLLOWED BY '@'.)
       VOL=,VOLUME=   (EXCEPTION:   DYNAMIC  ALLOCATION  DOES  NOT
              SUPPORT    THE    SECOND     POSITIONAL    PARAMETER
              (VOL=(,RETAIN)),    OR   VOLUME   SPECIFICATION   BY
              REFERENCE TO A DDNAME (VOL=REF=*. ))
       MSVGP=  (EXCEPTION:  DYNAMIC ALLOCATION DOES  NOT SUPPORT A
              DDNAME FOR VOLUME SEPARATION)
       CHARS=  (FOR EXECUTION UNDER MVS/XA ONLY.   NOTE: IF CHARS=
              IS SPECIFIED AS AN RX-TYPE  ADDRESS FOLLOWED BY '@',
              ONLY  ONE CHARACTER  ARRANGEMENT TABLE  NAME MAY  BE
              SPECIFIED)
       COPIES= (GROUP VALUES  FOR THE  3800 PRINTER  FOR EXECUTION
              UNDER MVS/XA ONLY. GROUP VALUES MAY NOT BE SPECIFIED
              AS AN RX-TYPE ADDRESS FOLLOWED BY '@'.)
       LABEL=
       PROTECT=
       FREE=
       QNAME=
       TERM=
       SYSOUT=
       DEST=
       HOLD=
       FCB=
       OUTLIM=
       UCS=
       BURST= (FOR EXECUTION UNDER MVS/XA ONLY)
       FLASH= (FOR EXECUTION UNDER MVS/XA ONLY)
       MODIFY= (FOR EXECUTION UNDER MVS/XA ONLY)
       SUBSYS=
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 4
0      DDD SUPPORTS THE FOLLOWING KEYWORDS WITH LIMITED FUNCTION:
0      DSN=,DSNAME=   (EXCEPTION:   DYNAMIC  ALLOCATION  DOES  NOT
              SUPPORT AN AREA  NAME FOR AN ISAM  DATASET OR DSNAME
              SPECIFICATION BY REFERENCE TO A DDNAME (DSN=*. ))
          DDD DOES  NOT  SUPPORT  THE   SINGLE-AMPERSAND  FORM  OF
              DSN=,DSNAME=  FOR SYSTEM-NAMED  TEMPORARY  DATASETS.
              USE THE DOUBLE-AMPERSAND FORM.
          IF A MEMBER NAME IS DESIRED,  SPECIFY  IT AS IN JCL,  IN
              PARENTHESES AFTER THE DSNAME. THE ACTUAL MEMBER NAME
              MAY BE SPECIFIED,  IF KNOWN AT ASSEMBLY TIME,  OR AN
              RX-TYPE ADDRESS EXPRESSION FOLLOWED  BY '@' MAY GIVE
              THE ADDRESS OF AN 8-BYTE FIELD WHERE THE MEMBER NAME
              MAY BE FOUND (PADDED WITH BLANKS) AT RUN TIME.
0      DCB=  (EXCEPTION:   DYNAMIC ALLOCATION DOES NOT SUPPORT DCB
              REFERENCE  TO A  DDNAME IN  A PREVIOUS  JOB STEP  OR
              DCB=CYLOFL= OR DCB=NTM=)
0              DDD SUPPORTS DCB  REFERENCE TO A  CATALOGED DATASET
                   OR DCB REFERENCE  TO A DDNAME IN  THIS JOB STEP
                   EXACTLY AS IN JCL.
          DDD SUPPORTS THE  FOLLOWING DCB SUB-KEYWORDS  EXACTLY AS
              IN JCL:
                 BLKSIZE=
                 BUFL=
                 BUFNO=
                 DEN=
                 EROPT=
                 KEYLEN=
                 LIMCT=
                 LRECL=
                 NCP=
                 OPTCD=
                 RECFM=
            DDD HAS LIMITED  SUPPORT FOR  THE  FOLLOWING DCB  SUB-
                KEYWORD:
                 DSORG=   FOR DA, PO OR PS ONLY.
-           DDD DOES NOT SUPPORT THE FOLLOWING DCB SUB-KEYWORDS:
                 BFALN=,   BFTEK=,   BUFIN=,   BUFMAX=,   BUFOFF=,
                     BUFOUT=,  BUFSIZE=,  CODE=,  CPRI=,  DIAGNS=,
                     FRID=, FUNC=,  GNCP=,  INTVL=,  MODE=,  PCI=,
                     PRTSP=, RESERVE=, STACK=, THRESH=, TRTCH=.
0           DDD DOES NOT  SUPPORT THE  FOLLOWING DCB  SUB-KEYWORDS
                THAT HAVE NO JCL COUNTERPARTS:
                 BUFRQ=, IPLTXTID=, SOWA=.
       DYNAMIC ALLOCATION DOES NOT SUPPORT THE FOLLOWING KEYWORDS:
            AMP=, CHKPT=EOV, DDNAME=, DLM=, DSID=.
0      DDD SUPPORTS THE FOLLOWING KEYWORDS NOT IN JCL:
0      TYPE=PERM  SPECIFIES THE PERMANENTLY ALLOCATED ATTRIBUTE.
       TYPE=CNVRT  SPECIFIES   THE  CONVERTIBLE   AND  PERMANENTLY
       ALLOCATED ATTRIBUTES.
       TYPE=TEMP  SPECIFIES NEITHER ATTRIBUTE.
          DEFAULT: TYPE=PERM, AS USED BY THE ALLOC COMMAND.
0      MOUNT=YES   SPECIFIES  THAT DYNAMIC  ALLOCATION  MAY  BRING
       DEVICES  ONLINE  AND  MOUNT  VOLUMES  FOR  THIS  ALLOCATION
       (UNLESS  ISSUED   BY  TIME   SHARING  USER   WITHOUT  MOUNT
       AUTHORITY).
       MOUNT=NO    SPECIFIES THAT  DYNAMIC  ALLOCATION  IS NOT  TO
       BRING DEVICES ONLINE OR MOUNT VOLUMES FOR THIS ALLOCATION.
          DEFAULT: MOUNT=NO.
0      KEYADDS=   SPECIFIES  1  OR   MORE  RX-TYPE  ADDRESSES  (OR
       REGISTER NUMBERS ENCLOSED IN PARENTHESES)  OF USER-SUPPLIED
       TEXT UNITS TO BE INCLUDED WITH  THE TEXT UNITS GENERATED BY
       THE DDD  MACRO.  DDD DOES  NOT INITIALIZE OR  INSPECT THESE
       TEXT UNITS.   AN  RX-TYPE ADDRESS NOT FOLLOWED BY  A '@' IS
       THE ADDRESS OF A TEXT UNIT.  AN RX-TYPE ADDRESS FOLLOWED BY
       A '@' IS  THE ADDRESS OF A FULLWORD  CONTAINING THE ADDRESS
       OF A TEXT UNIT.   A REGISTER (ENCLOSED IN PARENTHESES) MUST
       CONTAIN THE ADDRESS OF A TEXT UNIT AND MUST NOT BE FOLLOWED
       BY A '@'.
          DEFAULT: NONE.
0      EXIT=      SPECIFIES AN  RX-TYPE ADDRESS  OF OR  (REGISTER)
       CONTAINING THE  ADDRESS OF  A USER  ERROR-HANDLING ROUTINE.
       CODE IN THE  DDDD MACRO WILL BRANCH TO THIS  ROUTINE IF THE
       RETURN CODE FROM DYNAMIC ALLOCATION IS NOT 0.  REGISTERS ON
       ENTRY TO THE ERROR-HANDLING ROUTINE ARE:
                REGISTER 14  - RETURN ADDRESS TO  RESUME EXECUTION
                AS IF THE RETURN CODE FROM SVC 99 HAD BEEN 0.   IF
                THE DDD MACRO WAS NOT PART OF A CONCATENATION THIS
                WILL BE THE ADDRESS OF THE FIRST INSTRUCTION AFTER
                THE DDD MACRO.
                REGISTER  15  -  ADDRESS   OF  THE  ERROR-HANDLING
                ROUTINE.
                REGISTER 0  - CONTENTS OF  REGISTER 15 AS RETURNED
                BY SVC 99.
                REGISTER  1  -  SAME  AS WHEN  SVC  99 WAS  ISSUED
                (POINTS TO A FULLWORD THAT CONTAINS THE ADDRESS OF
                THE DYNAMIC ALLOCATION REQUEST BLOCK).
                REGISTERS 2 THRU 13 -  UNCHANGED FROM ENTRY TO THE
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 5
0               DDD MACRO.
          DEFAULT:  A ROUTINE INTERNAL TO  THE MACROS THAT INVOKES
       IKJEFF18  TO ISSUE  A  DIAGNOSTIC  WTO,  AND  ISSUES  ABEND
       SPECIFYING USER ABEND  CODE 99 WITH DUMP.   ALODFAIL IS THE
       LABEL  OF   THE  DEFAULT  ERROR-HANDLING  ROUTINE   IN  THE
       EXPANSION OF  THE DDDD  MACRO (CODE).   YOUR ERROR-HANDLING
       ROUTINE  MAY EXIT  TO THE  DEFAULT ERROR-HANDLING  ROUTINE,
       WHICH WILL  ISSUE A DIAGNOSTIC WTO  AND ABEND USER  99,  BY
       BRANCHING TO THE LABEL ALODFAIL.
       NOTE: THE ALODFAIL ROUTINE IS GENERATED AS PART OF THE DDDD
       CODE EXPANSION ONLY  IF SOME PREVIOUS DDD,   FREE OR CONCAT
       MACRO LEFT THE EXIT=  PARAMETER UNSPECIFIED.  IF NECESSARY,
       CODE A PARAMETERLESS DDD MACRO AND  ORG BACK OVER IT BEFORE
       THE DDDD CODE MACRO.
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 6
0      NOTES:
0      TO REQUEST THE RETURN OF THE  DDNAME,  CODE 'RETURN' AS THE
           DDNAME.   WHEN 'RETURN' IS SPECIFIED  IN THE LABEL OF A
           DDD  MACRO,  DDD  DOES NOT  USE  IT AS  THE DDNAME  BUT
           INSTEAD INCLUDES A TEXT UNIT  FOR RETURN OF THE DDNAME.
           THE LABEL ON THE TEXT UNIT  FOR RETURN OF THE DDNAME IS
           ALWAYS  'ALORTDDN'.     AFTER  THE  DDD   IS  EXECUTED,
           ALORTDDN+4 CONTAINS THE HALFWORD LENGTH OF THE RETURNED
           DDNAME  AND  ALORTDDN+6 CONTAINS  THE  RETURNED  DDNAME
           LEFT-JUSTIFIED AND PADDED WITH BLANKS TO LENGTH 8.
0      DDD SUPPORTS  QUOTED   OPERANDS  ONLY  FOR   THE  SUBSYSTEM
           PARAMETERS PORTION OF THE  SUBSYS=  KEYWORD.
0      THE EXPANSION OF THE DDD MACRO  DOES NOT INCLUDE ANY LABEL.
           TO BRANCH TO THE DDD MACRO,  BRANCH TO A LABELED  DS 0H
            BEFORE IT.
0      ADDRESSABILITY: THE LITERAL POOL AND THE DDDD MACRO MUST BE
           ADDRESSABLE FROM EVERY DDD MACRO. IF THERE ARE TWO DDDD
           MACROS  (CODE   AND  STORAGE),    THEN  BOTH   MUST  BE
           ADDRESSABLE FROM EVERY DDD MACRO.
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 7
0 FREE - PERFORM DYNAMIC UNALLOCATION
0     THE FREE MACRO PERFORMS DYNAMIC DEALLOCATION.  IT CONSTRUCTS
 A  TEXT UNIT  LIST  AND CALLS  A SUBROUTINE  (IN  THE DDDD  MACRO
 EXPANSION)   TO  ISSUE  SVC 99.    ITS  EXPANSION  CONTAINS  ONLY
 EXECUTABLE CODE.
0SYNTAX:
0                                                                -

  NAME                           ANY VALUE IS INTERPRETED AS A
                               DDNAME SPECIFICATION.
0 FREE                           PRECEDED AND FOLLOWED BY AT LEAST
                               ONE BLANK.
                                                                 -

0    KEYWORDS:                  OPTIONAL. USE KEYWORDS TO
                                SPECIFICS OF THE DEALLOCATION.
                                                                 -

       FREE SUPPORTS THE FOLLOWING KEYWORDS WITH JCL COUNTERPARTS,
           USING THE SAME SYNTAX AS JCL.
0      DSN=,DSNAME=   (EXCEPTION:   DYNAMIC  ALLOCATION  DOES  NOT
           SUPPORT  AN AREA  NAME FOR  AN ISAM  DATASET OR  DSNAME
           SPECIFICATION BY REFERENCE TO A DDNAME (DSN=*. ))
0      DISP=   (EXCEPTION:  DYNAMIC  ALLOCATION  DOES NOT  SUPPORT
           PASSED    DATASETS    (DISP=(,PASS)))     THE    SECOND
           SUBPARAMETER OF THE DISP KEYWORD BECOMES THE OVERRIDING
           DISPOSITION.
0      SYSOUT= SPECIFIES AN  OVERRIDING SYSOUT CLASS FOR  A SYSOUT
           DATASET.
0      HOLD=YES  SPECIFIES  HOLD  QUEUE PROCESSING  FOR  A  SYSOUT
           DATASET.
       HOLD=NO OVERRIDES A HOLD=YES ON THE ORIGINAL ALLOCATION.
0      DEST=  SPECIFIES AN  OVERRIDING  REMOTE  WORKSTATION FOR  A
           SYSOUT DATASET.
-      FREE SUPPORTS   THE   FOLLOWING    KEYWORDS   WITHOUT   JCL
           COUNTERPARTS:
0      TYPE=EITHER  SPECIFIES REMOVAL OF THE IN-USE ATTRIBUTE FROM
           THE DDNAME/DSNAME IF  IT HAS THE  PERMANENTLY ALLOCATED
           ATTRIBUTE AND  UNALLOCATION OF THE DDNAME/DSNAME  IF IT
           DOES NOT HAVE THE PERMANENTLY ALLOCATED ATTRIBUTE.
       TYPE=UNALLOC   SPECIFIES THAT  THE DDNAME/DSNAME  IS TO  BE
           UNALLOCATED EVEN  IF IT  HAS THE  PERMANENTLY ALLOCATED
           ATTRIBUTE.
       TYPE=REMOVE  SPECIFIES REMOVAL OF THE IN-USE ATTRIBUTE EVEN
           IF  THE DDNAME/DSNAME  DOES  NOT  HAVE THE  PERMANENTLY
           ALLOCATED ATTRIBUTE.
          DEFAULT: TYPE=UNALLOC
0      KEYADDS=   SPECIFIES   1  OR  MORE  RX-TYPE   ADDRESSES  OR
           (REGISTER)  CONTAINING ADDRESSES  OF USER-SUPPLIED TEXT
           UNITS TO BE  INCLUDED WITH THE TEXT  UNITS GENERATED BY
           THE FREE  MACRO.  FREE DOES  NOT INITIALIZE  OR INSPECT
           THESE TEXT UNITS.  IF AN RX-TYPE ADDRESS IS FOLLOWED BY
           A  '@',   THE  RX-TYPE ADDRESS  POINTS  TO  A  FULLWORD
           CONTAINING THE ADDRESS OF THE TEXT UNIT.
          DEFAULT: NONE.
0      EXIT=      SPECIFIES  AN  RX-TYPE   ADDRESS  OR  (REGISTER)
           CONTAINING  THE   ADDRESS  OF  A   USER  ERROR-HANDLING
           ROUTINE.  CODE  IN THE DDDD  MACRO WILL BRANCH  TO THIS
           ROUTINE IF THE  RETURN CODE FROM DYNAMIC  ALLOCATION IS
           NOT  0 (EXCEPTION:   IF  THE  ERROR CODE  FROM  DYNAMIC
           ALLOCATION  IS X'0438'  OR X'0440'  (FREE MACRO  FAILED
           BECAUSE SPECIFIED  DDNAME OR DSNAME WAS  NOT ALLOCATED)
           THEN DDDD RETURNS TO THE INVOKING  FREE MACRO AS IF THE
           RETURN CODE FROM DYNAMIC ALLOCATION HAD BEEN 0.)
       REGISTERS  ON  ENTRY  TO  THE  ERROR-HANDLING  ROUTINE  ARE
           EXPLAINED UNDER THE DDD MACRO.
0      NOTES: THE EXPANSION OF THE FREE MACRO DOES NOT INCLUDE ANY
           LABEL.   TO BRANCH TO THE FREE MACRO,  CODE A NAMED  DS
           0H  BEFORE IT.
       ADDRESSABILITY: THE LITERAL POOL AND THE DDDD MACRO MUST BE
           ADDRESSABLE FROM  EVERY FREE MACRO.   IF THERE  ARE TWO
           DDDD  MACROS (CODE  AND STORAGE),   THEN  BOTH MUST  BE
           ADDRESSABLE FROM EVERY FREE MACRO.
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 8
0 CONCAT - MARK BEGINNING OR END OF LIST OF DDDS FOR CONCATENATION
0     THE  CONCAT  MACRO  PERFORMS   DYNAMIC  CONCATENATION.   THE
 DATASETS CONCATENATED ARE ON CONSECUTIVE  DDD MACROS PRECEDED AND
 FOLLOWED BY CONCAT MACROS.  THE USER MAY INTERSPERSE HIS OWN CODE
 WITH DDD MACROS  AFTER THE BEGINNING CONCAT MACRO  AND BEFORE THE
 ENDING CONCAT  MACRO PROVIDED THE USER  CODE DOES NOT  MODIFY THE
 STORAGEE RESERVED  BY THE DDDD  MACRO.  THE CONCAT  MACROS ASSUME
 THAT EACH  DDD MACRO IN THE  CONCATENATION WILL BE  EXECUTED ONCE
 AND ONLY ONCE.
0SYNTAX:
0                                                                -

  NAME                           ANY NAME CODED IS IGNORED.
0 CONCAT                         PRECEDED AND FOLLOWED BY AT LEAST
                               ONE BLANK.
                                                                 -

0 B OR E                         POSITIONAL. SPECIFY B AS THE
                               OPERAND OF THE CONCAT MACRO THAT
                               PRECEDES THE DDD MACROS TO BE
                               CONCATENATED.  SPECIFY E (AND,
                               OPTIONALLY, KEYWORDS) ON THE CONCAT
                               MACRO THAT FOLLOWS THE DDD MACROS
                               TO BE CONCATENATED.
0    KEYWORDS:                  OPTIONAL. USE KEYWORDS WITH THE E
                               OPERAND TO INDICATE SPECIFICS OF
                               THE CONCATENATION.
                                                                 -

  CONCAT SUPPORTS THE FOLLOWING KEYWORDS WITHOUT JCL COUNTERPARTS:
- TYPE=PERM SPECIFIES THE PERMANENTLY CONCATENATED ATTRIBUTE.
  TYPE=TEMP OMITS THE PERMANENTLY CONCATENATED ATTRIBUTE.
     DEFAULT: TYPE=PERM, AS USED BY THE ALLOC COMMAND.
0 EXIT=     SPECIFIES AN RX-TYPE ADDRESS OR (REGISTER)  CONTAINING
      THE ADDRESS OF A  USER ERROR-HANDLING ROUTINE.  CODE  IN THE
      DDDD MACRO  WILL BRANCH TO THIS  ROUTINE IF THE  RETURN CODE
      FROM DYNAMIC ALLOCATION IS NOT 0.
  REGISTERS ON ENTRY  TO THE ERROR-HANDLING ROUTINE  ARE EXPLAINED
      UNDER THE DDD MACRO.
-
  NOTES:
  ADDRESSABILITY:  THE  LITERAL POOL  AND THE  DDDD MACRO  MUST BE
      ADDRESSABLE FROM EVERY CONCAT MACRO.   IF THERE ARE TWO DDDD
      MACROS (CODE  AND STORAGE),  THEN  BOTH MUST  BE ADDRESSABLE
      FROM EVERY CONCAT MACRO.
1
0                    DYNAMIC ALLOCATION MACROS              PAGE 9
0 DDDD - DYNAMIC ALLOCATION SVC ISSUER
0     THE  DDDD  MACRO  MUST  BE INCLUDED  IN  ANY  ASSEMBLY  THAT
 INCLUDES THE DDD OR FREE MACRO.  NO  DDD OR FREE MACRO MAY APPEAR
 PHYSICALLY AFTER ANY DDDD MACRO. THE USER SHOULD NOT MOVE, MODIFY
 OR BRANCH DIRECTLY TO A DDDD MACRO.
      THE DDDD MACRO  EXPANDS INTO A PROTOTYPE  DYNAMIC ALLOCATION
 CONTROL BLOCK,  SUFFICIENT WORK SPACE TO CONTAIN THE LONGEST TEXT
 UNIT LIST IN THE ASSEMBLY,  AND  EXECUTABLE CODE TO ISSUE SVC 99,
 CHECK ITS RETURN CODE, AND IF THE RETURN CODE IS NOT ZERO, BRANCH
 TO A RECOVERY ROUTINE SPECIFIED ON THE DDD,  CONCAT OR FREE MACRO
 THAT BRANCHED TO THIS DDDD MACRO.
0SYNTAX:
0                                                                -

  NAME                           ANY NAME CODED IS IGNORED.
0 DDDD                           PRECEDED AND FOLLOWED BY AT LEAST
                               ONE BLANK.
                                                                 -

0    CODE                       OPTIONAL. IF CODE IS SPECIFIED,
                               EXPANSION INCLUDES ONLY EXECUTABLE
                               CODE, TO INITIALIZE AND USE A WORK
                               AREA RESERVED BY THE DDDD MACRO
                               WITH STORAGE SPECIFIED.
     STORAGE                    OPTIONAL.  IF STORAGE IS
                               SPECIFIED, EXPANSION INCLUDES NO
                               EXECUTABLE CODE AND NO CONSTANTS,
                               BUT MERELY RESERVES SPACE.
                                                                 -

0 IF NEITHER  CODE NOR  STORAGE  IS  CODED,  THE  RESULTING  MACRO
      EXPANSION IS REUSABLE BUT NOT REENTRANT.
0 TO GET REENTRANT CODE,   ISSUE DDDD TWICE,  ONCE WITH  CODE IN A
      CSECT AND  ONCE WITH STORAGE IN  A DSECT ADDRESSABLE  BY ALL
      THE DDD,  FREE AND CONCAT MACROS  AND BY THE DDDD WITH CODE.
      THE STORAGE FORM  OF DDDD RESERVES SPACE  AND DEFINES LABELS
      FOR USE BY THE DDD,  FREE AND DDDD (CODE)  MACROS.  THE DDDD
      (CODE)  MACRO DOES ALL INITIALIZATION  OF THE AREA RESERVED.
      THE USER MAY REUSE THE SPACE  RESERVED BY THE DDDD (STORAGE)
      MACRO IN  ANY WAY  PROVIDED NO  DYNAMIC ALLOCATION  MACRO IS
      EXECUTING.
1
0                    DYNAMIC ALLOCATION MACROS             PAGE 10
0 DDTU (DATA DEFINITION  TEXT UNITS)  - DEFINE  DYNAMIC ALLOCATION
      TEXT UNITS
0     PURPOSE: THE DDD MACRO GENERATES TEXT UNITS WHOSE VALUES ARE
      KNOWN  AT ASSEMBLY  TIME.   THE  DDTU MACRO  AIDS IN  CODING
      DYNAMIC ALLOCATION  TEXT UNITS  WHOSE VALUES  ARE NOT  KNOWN
      UNTIL EXECUTION TIME.
0     IN MANY PROGRAMS,  EVEN THOSE WHERE TEXT UNIT VALUES ARE NOT
      KNOWN AT  ASSEMBLY TIME,  THE  DDTU MACRO IS  NOT NECESSARY.
      THE  DYNAMIC  ALLOCATION  MACROS  DDD  AND  FREE  WILL  TAKE
      ADDRESSES OF VALUES NOT KNOWN AT ASSEMBLY TIME.  TO INDICATE
      THAT AN OPERAND  OF A DDD OR  FREE MACRO IS AN  ADDRESS OF A
      VALUE RATHER THAN A VALUE ITSELF,   ADD THE CHARACTER '@' TO
      THE END OF  AN RX-TYPE ADDRESS IN THE  KEYWORD OPERAND.  THE
      RUN-TIME VALUE FACILITY  IS EASIER TO USE  AND MAINTAIN THAN
      DDTU.  DDTU IS  NECESSARY ONLY FOR THOSE TEXT  UNITS THAT DO
      NOT TAKE A VALUE,  SUCH AS TERM=TS,  AND THOSE THAT CAN TAKE
      MORE THAN  ONE VALUE,   SUCH AS VOL=SER=  FOR MORE  THAN ONE
      VOLUME.
0     THE  DDTU  MACRO,   MODELED  AFTER  THE  JCL  DD  STATEMENT,
      CONSTRUCTS DYNAMIC ALLOCATION TEXT  UNITS WITH USER-SUPPLIED
      LABELS.
0     CODE THE DDTU  MACRO WITH JCL KEYWORDS WHOSE  VALUE WILL NOT
      BE KNOWN  UNTIL EXECUTION  TIME.  FOR  EACH VALUE  NOT KNOWN
      UNTIL EXECUTION TIME,  CODE AN  ASSEMBLER SYMBOL NOT DEFINED
      ELSEWHERE IN THE PROGRAM.
0     THE TEXT  UNITS GENERATED  ARE A  HALFWORD KEY,   A HALFWORD
      NUMBER-OF-FOLLOWING-PARAMETERS WHICH IS EITHER 0 OR 1,  AND,
      IF 1, A HALFWORD LENGTH.  THE LENGTH, IF PRESENT,  IS ALWAYS
      THE MAXIMUM LENGTH  THAT DYNAMIC ALLOCATION WILL  ACCEPT FOR
      THE TEXT UNIT BEING CREATED.
0     TEXT UNITS FORMED BY DDTU MAY  BE USED IN DYNAMIC ALLOCATION
      BY SPECIFYING THEIR LABELS AS SUBPARAMETERS OF THE  KEYADDS=
       KEYWORD ON  THE DDD OR FREE  MACROS,  OR COPYING THEM  TO A
      WORKAREA,   MODIFYING  THEM,  AND  SPECIFYING  THE  WORKAREA
      ADDRESSES AS SUBPARAMETERS OF THE  KEYADDS=  KEYWORD.
0     THE DDTU MACRO EXPANSION CONTAINS NO EXECUTABLE CODE.
0SYNTAX:
0                                                                -

  NAME                           'RETURN' CODED AS THE NAME WILL
                               BE USED AS THE LABEL OF A TEXT UNIT
                               FOR SPECIFYING THE RETURN OF THE
                               DDNAME.  ANY OTHER VALUE IS USED AS
                               THE LABEL OF A TEXT UNIT FOR
                               SPECIFYING DDNAME.
0 DDTU                           PRECEDED AND FOLLOWED BY AT LEAST
                               ONE BLANK.
                                                                 -

0    SYMBOL                     POSITIONAL PARAMETER, OPTIONAL.
                               THE SYMBOL, IF SPECIFIED WILL BE
                               USED AS THE LABEL OF A TEXT UNIT
                               FOR SPECIFYING A DUMMY DATASET.
0    KEYWORDS:                  OPTIONAL. USE KEYWORDS TO INDICATE
                               LABELS FOR ADDITIONAL TEXT UNITS.
                                                                 -

       DDTU WILL FORM DYNAMIC ALLOCATION  TEXT UNITS CORRESPONDING
              TO THE   FOLLOWING   JCL    KEYWORDS   (WITH   NOTED
              EXCEPTIONS)
0      DSN=,DSNAME=   (EXCEPTION:   DYNAMIC  ALLOCATION  DOES  NOT
              SUPPORT SPECIFICATION  BY  REFERENCE   TO  A  DDNAME
              (DSN=*. ))
       DISP=
       VOL=,VOLUME=   (EXCEPTION:   DYNAMIC  ALLOCATION  DOES  NOT
              SUPPORT    THE    SECOND     POSITIONAL    PARAMETER
              (VOL=(,RETAIN)),    OR   VOLUME   SPECIFICATION   BY
              REFERENCE TO A DDNAME (VOL=REF=*. ))
       MSVGP=  (EXCEPTION:  DYNAMIC ALLOCATION DOES  NOT SUPPORT A
              DDNAME FOR VOLUME SEPARATION)
       LABEL=
       SYSOUT=
       COPIES=  (EXCEPTION:  DDTU DOES NOT  SUPPORT "GROUP VALUES"
              FOR THE 3800 PRINTER)
       DEST=
       FCB=
       OUTLIM=
       UCS=
1
0                    DYNAMIC ALLOCATION MACROS             PAGE 11
0 DDTU WILL FORM  DYNAMIC ALLOCATION  TEXT UNITS  CORRESPONDING TO
         THE FOLLOWING JCL KEYWORDS (WITH NOTED EXCEPTIONS)
0      SPACE=  (EXCEPTION:   DYNAMIC ALLOCATION  DOES NOT  SUPPORT
              ABSOLUTE TRACK ALLOCATION)
          THE LABEL  OF  THE  TEXT  UNIT  CREATED  FOR  SPECIFYING
              CYLINDER  SPACE TYPE  IS  NECCESSARILY 'CYL'.    THE
              LABEL OF THE TEXT UNIT  CREATED FOR SPECIFYING TRACK
              SPACE TYPE IS  NECCESSARILY 'TRK'.  ANY  OTHER VALUE
              FOR THE  FIRST SPACE OPERAND  GENERATES A  TEXT UNIT
              FOR SPECIFYING AVERAGE BLOCK.
0      UNIT=  (EXCEPTON:   DYNAMIC  ALLOCATION  DOES  NOT  SUPPORT
              UNIT=(,,DEFER) OR UNIT=AFF=)
          THE LABEL  OF  THE  TEXT  UNIT  CREATED  FOR  SPECIFYING
              PARALLEL MOUNT IS NECCESSARILY 'P'.
0      FREE=
          THE TEXT UNIT CREATED IS FOR SPECIFYING FREE=CLOSE.
0      TERM=
          THE TEXT UNIT CREATED IS FOR SPECIFYING TERM=TS.
0      HOLD=
          THE TEXT UNIT CREATED IS FOR SPECIFYING HOLD=YES.
-      DCB= (EXCEPTION:  DYNAMIC  ALLOCATION DOES NOT  SUPPORT DCB
              REFERENCE TO A DDNAME IN A PREVIOUS JOB STEP.)
              BLKSIZE=
              BUFL=
              BUFNO=
              KEYLEN=
              LIMCT=
              LRECL=
              NCP=
              RECFM=
              DEN=
              DSORG=
              EROPT=
    EXAMPLE 1:
-            DDTU  SPACE=(ALENGTH),FREE=SYMBOL28
   +SYMBOL28 DC    Y(X'1C',0)              FREE=CLOSE
   +ALENGTH  DC    Y(X'09',1,3)            SPACE=( )
    EXAMPLE  2:  ALLOCATE  AND  OPEN  A NEW  TEMPORARY  1-CYLINDER
        DATASET ON THE  DIRECT ACCESS VOLUME WHOSE  UCB IS POINTED
        TO BY REGISTER 5.
0           .
            .
            USING UCB,5
   *
   *  INITIALIZE WORK AREA FOR UNIT=;
            MVC   WORKUNIT(3),UCBNAME     USE CHANNEL/UNIT ADDRESS AS
   *                                      UNITNAME (E.G. JCL UNIT=4D0);
            MVC   WORKUNIT+3(5),=CL5' '   PAD WITH BLANKS TO LENGTH 8;
   *  ISSUE THE DDD MACRO;
   RETURN   DDD   DSN=&&TEMP,SPACE=(CYL,1),UNIT=WORKUNIT@,VOL=SER=UCBVOL
   * THE VOLUME SERIAL NUMBER IN THE UCB IS ALREADY 6 CHARACTERS,SO NO
   *   PADDING IS NECESSARY.
   *
   *  USE THE RETURNED DDNAME;
            MVC   DCBDDNAM-IHADCB+MYDCB,ALORTDDN+8
            XC    OLIST,OLIST
            OPEN  (MYDCB,OUTPUT),MF=(E,OLIST)
            .
            .
            RETURN RC=0
            .
            .
   *
   *  INCLUDE THE DDDD (CODE) MACRO AFTER ALL DDD, FREE AND CONCAT MACRO
            DDDD CODE
            .
            .
   WORKSTOR DSECT
            DS    18F                     SAVE AREA;
   OLIST    OPEN  0,MF=L
   WORKUNIT DS    CL8                     SPACE FOR PADDED UNIT NAME;
   *  INCLUDE THE DDDD (STORAGE) TO RESERVE WORKING STORAGE;
            DDDD STORAGE
            END
