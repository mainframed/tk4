         TITLE 'ISFPSAMC'
ISFPSAMC CSECT
         ENTRY ISFPSAMC
********************
* REGISTER EQUATES *
********************
R00      EQU   00
R01      EQU   01
R02      EQU   02
R03      EQU   03
R04      EQU   04
R05      EQU   05
R06      EQU   06
R07      EQU   07
R08      EQU   08
R09      EQU   09
ISFPSAMC AMODE 31
ISFPSAMC RMODE ANY
**********************************
* DIRECC.                        *
**********************************
         BAKR  R14,0
         LR    R12,R15
         LR    R02,R00
         LR    R03,R01
         LA    R01,1
         LA    R11,4095(R01,R12)
         USING ISFPSAMC,R12,R11
         GETMAIN RU,LV=LDATA,LOC=(BELOW,ANY)
         LR    R10,R01
         USING DYNAREA,R10
         LA    R13,SAVER
         USING ENVBLOCK,R02
         L     R8,ENVBLOCK_IRXEXTE
         USING IRXEXTE,R8
         L     R7,IRXEXCOM
         ST    R7,SAV_IRXEXCOM
         DROP  R02,R08
**********************************
* ESTABLECER ENTORNO REXX        *
**********************************
         ST    R02,REXXENT
         USING EFPL,R03
         L     R04,EFPLARG
         L     R05,EFPLEVAL
         DROP  R03
         L     R05,0(R05)
         ST    R05,REXXRET
         USING ARGTABLE_ENTRY,R04
         MVC   PJNAME,=CL8'*'
         MVC   PUNAME,=CL8'*'
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         CLC   0(3,R05),=CL3'INI'
         BE    GETINI
         LA    R1,SAMPWA_N
         ST    R1,D1
         LA    R1,SAMPWA_L
         ST    R1,D2
         LA    R1,SAMPWA
         ST    R1,D3
         LA    R1,SAMPWA_S
         ST    R1,D4
         LA    R15,D1
         BAL   R14,GETVREX
         MVC   R_WAREA(4),SAMPWA
         CLC   0(3,R05),=CL3'TER'
         BE    GETTER
         CLC   0(3,R05),=CL3'JQE'
         BE    GETPJQE
         CLC   0(3,R05),=CL3'JOE'
         BE    GETPJOE
         CLC   0(3,R05),=CL3'JDS'
         BE    GETPJDS
         CLC   0(3,R05),=CL3'JOS'
         BE    GETPJOS
         CLC   0(3,R05),=CL3'DSR'
         BE    GETPDSR
         CLC   0(3,R05),=CL3'JCT'
         BE    GETPJCT
         B     FINNOK
**************************************
* ESTABLECER PARAMETROS PARA GET JQE *
**************************************
GETPJQE  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    GETJQE
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         C     R06,=F'8'
         BH    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP1
         LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    GETJQE
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         C     R06,=F'8'
         BH    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP2
**********************************
* GETJQE                         *
**********************************
GETJQE   EQU   *
         MVC   R_PARM,=CL3'JQE'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R02,R_ADDR
         L     R03,R_BUFLEN
         L     R04,R_ELEML
         AR    R03,R02
         MVC   STKFUNC,=CL8'QUEUE'
         ST    R04,STKLEN
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
         USING JQE,R02
         LOAD  EP=IRXSTK
         LR    R08,R00
LOOPJQE  EQU   *
         TM    JQETYPE,$FREE
         BO    NJQE
         BZ    NJQE
         MVI   LLNGSTR,X'08'
         MVI   LLNGPAT,X'08'
         MVC   STR(8),JQEJNAME
         MVC   PAT(8),PJNAME
         LA    R05,STR
         LA    R06,PAT
         LA    R07,LLNGSTR
         LA    R09,LLNGPAT
         CALL  UTILMATC,((R05),(R06),(R07),(R09)),MF=(E,CALL1)
         LTR   R15,R15
         BNZ   NJQE
         MVI   LLNGSTR,X'08'
         MVI   LLNGPAT,X'08'
         MVC   STR(8),JQEUSRID
         MVC   PAT(8),PUNAME
         LA    R05,STR
         LA    R06,PAT
         LA    R07,LLNGSTR
         LA    R09,LLNGPAT
         CALL  UTILMATC,((R05),(R06),(R07),(R09)),MF=(E,CALL1)
         LTR   R15,R15
         BNZ   NJQE
         ST    R02,STKDAT
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BZ    NJQE
         ABEND 002,DUMP
NJQE     AR    R02,R04
         CR    R02,R03
         BL    LOOPJQE
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
**************************************
* ESTABLECER PARAMETROS PARA GET JOE *
**************************************
GETPJOE  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    GETJQE
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         C     R06,=F'1'
         BNE   FINNOK
         MVC   R_ENT(1),0(R05)
**********************************
* GETJOE                         *
**********************************
GETJOE   EQU   *
         MVC   R_PARM,=CL3'JOE'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R02,R_ADDR
         L     R03,R_BUFEND
         CR    R02,R03
         BNL   NJOES
         L     R04,R_ELEML
         MVC   STKFUNC,=CL8'QUEUE'
         ST    R04,STKLEN
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
         USING JQE,R02
         LOAD  EP=IRXSTK
         LR    R08,R00
LOOPJOE  ST    R02,STKDAT
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BZ    NJOE
         ABEND 011,DUMP
NJOE     AR    R02,R04
         CR    R02,R03
         BL    LOOPJOE
NJOES    L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
**************************************
* ESTABLECER PARAMETROS PARA GET JDS *
**************************************
GETPJDS  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP3
**********************************
* GETJDS                         *
**********************************
GETJDS   EQU   *
         MVC   R_PARM,=CL3'JDS'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R04,R_ELEML
         LTR   R04,R04
         BZ    FINNOK
         C     R04,=F'1'
         BE    JDSERROR
         LOAD  EP=IRXSTK
         LR    R08,R00
         L     R02,R_ADDR
         L     R03,R_BUFEND
         MVC   STKFUNC,=CL8'QUEUE'
         ST    R04,STKLEN
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
NJDS     ST    R02,STKDAT
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ABEND6
         AR    R02,R04
         CR    R02,R03
         BL    NJDS
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
ABEND6   ABEND 006,DUMP
JDSERROR EQU   *
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         MVI   WCR,C'0'
         SR    R09,R09
         B     EXITM
**************************************
* ESTABLECER PARAMETROS PARA GET JCT *
**************************************
GETPJCT  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP3
**********************************
* GETJCT                         *
**********************************
GETJCT   EQU   *
         MVC   R_PARM,=CL3'JCT'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R04,R_ELEML
         LTR   R04,R04
         BZ    FINNOK
         C     R04,=F'1'
         BE    JCTERROR
         LOAD  EP=IRXSTK
         LR    R08,R00
         L     R02,R_ADDR
         L     R03,R_BUFEND
         MVC   STKFUNC,=CL8'QUEUE'
         ST    R04,STKLEN
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
         ST    R02,STKDAT
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ABEND7
         AR    R02,R04
         CR    R02,R03
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
ABEND7   ABEND 007,DUMP
JCTERROR EQU   *
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         MVI   WCR,C'0'
         SR    R09,R09
         B     EXITM
**************************************
* ESTABLECER PARAMETROS PARA GET JOS *
**************************************
GETPJOS  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP3
**********************************
* GETJOS                         *
**********************************
GETJOS   EQU   *
         MVC   R_PARM,=CL3'JOS'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R04,R_ELEML
         LTR   R04,R04
         BZ    FINNOK
         C     R04,=F'1'
         BE    JOSERROR
         LOAD  EP=IRXSTK
         LR    R08,R00
         L     R02,R_ADDR
         L     R03,R_BUFEND
         MVC   STKFUNC,=CL8'QUEUE'
         ST    R04,STKLEN
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
NJOS     ST    R02,STKDAT
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ABEND12
         AR    R02,R04
         CR    R02,R03
         BL    NJOS
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
ABEND12  ABEND 012,DUMP
JOSERROR EQU   *
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         MVI   WCR,C'0'
         SR    R09,R09
         B     EXITM
**************************************
* ESTABLECER PARAMETROS PARA GET DSR *
**************************************
GETPDSR  LA    R04,ARGTABLE_NEXT
         L     R05,ARGTABLE_ARGSTRING_PTR
         LTR   R05,R05
         BM    FINNOK
         L     R06,ARGTABLE_ARGSTRING_LENGTH
         LTR   R06,R06
         BZ    FINNOK
         BCTR  R06,R00
         EX    R06,MOVP3
**********************************
* GETDSR                         *
**********************************
GETDSR   EQU   *
         MVC   R_PARM,=CL3'DSR'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         L     R04,R_ELEML
         LTR   R04,R04
         BZ    FINNOK
         LOAD  EP=IRXSTK
         LR    R08,R00
         L     R02,R_ADDR
         L     R03,R_BUFEND
         MVC   STKFUNC,=CL8'QUEUE'
         MVC   STKENV,REXXENT
         LA    R01,STKFUNC
         ST    R01,P1
         LA    R01,STKDAT
         ST    R01,P2
         LA    R01,STKLEN
         ST    R01,P3
         LA    R01,STKRC
         ST    R01,P4
         LA    R01,STKENV
         ST    R01,P5
         LA    R01,STKRCE
         A     R01,=X'80000000'
         ST    R01,P6
NDSR     SR    R05,R05
         ICM   R05,B'0011',0(R02)
         LA    R02,2(R02)
         ST    R02,STKDAT
         ST    R05,STKLEN
         LA    R01,IRXSTKP
         LR    R15,R08
         BALR  R14,R15
         LTR   R15,R15
         BNZ   ABEND6
         AR    R02,R05
         CR    R02,R03
         BL    NDSR
         L     R01,R_ADDR
         L     R03,R_BUFLEN
         FREEMAIN RU,LV=(R03),A=(R01)
         B     EXIT
**********************************
* GETINI                         *
**********************************
GETINI   EQU   *
         MVC   R_PARM,=CL3'INI'
         XC    R_WAREA,R_WAREA
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         MVC   SAMPWA,R_WAREA
         LA    R1,SAMPWA_N
         ST    R1,D1
         LA    R1,SAMPWA_L
         ST    R1,D2
         LA    R1,SAMPWA
         ST    R1,D3
         LA    R1,SAMPWA_S
         ST    R1,D4
         LA    R15,D1
         BAL   R14,PUTVREX
         B     EXIT
**********************************
* GETTER                         *
**********************************
GETTER   EQU   *
         MVC   R_PARM,=CL3'TER'
         LA    R01,PARM
         LINK  EP=ISFPSAMR
         MVC   SAMPWA,R_WAREA
         LA    R1,SAMPWA_N
         ST    R1,D1
         LA    R1,SAMPWA_L
         ST    R1,D2
         LA    R1,SAMPWA
         ST    R1,D3
         LA    R1,SAMPWA_S
         ST    R1,D4
         LA    R15,D1
         BAL   R14,PUTVREX
         B     EXIT
*************************
* SALIDAS               *
*************************
         DROP  R04
EXIT     EQU   *
         MVI   WCR,C'1'
         SR    R09,R09
EXITM    EQU   *
         L     R05,REXXRET
         USING EVALBLOCK,R05
         LA    R01,1
         ST    R01,EVALBLOCK_EVLEN
         MVC   EVALBLOCK_EVDATA(1),WCR
         DROP  R05
         LR    R01,R10
         FREEMAIN RU,LV=LDATA,A=(1)
         LR    R15,R09
         PR
FINNOK   LA    R09,16
         B     EXITM
MOVP1    MVC   PJNAME(0),0(R05)
MOVP2    MVC   PUNAME(0),0(R05)
MOVP3    MVC   R_ENT(0),0(R05)
**************
* GETVREX    *
* R15- VAR_A *
* R1 - LENGTH*
**************
GETVREX  EQU   *
         BAKR  R14,R0
         LA    R8,SHV1
         USING SHVBLOCK,R8
         MVI   SHVCODE,SHVFETCH
         L     R1,12(R15)
         MVC   SHVBUFL,0(R1)
         B     SETREX
**************
* PUTVREX    *
* R15- VAR_A *
**************
PUTVREX  EQU   *
         BAKR  R14,R0
         LA    R8,SHV1
         USING SHVBLOCK,R8
         MVI   SHVCODE,SHVSTORE
SETREX   MVC   SHVNEXT,=F'0'
         MVC   SHVUSER,=F'0'
         MVC   SHVRET,=F'0'
         L     R1,0(R15)
         ST    R1,SHVNAMA
         L     R1,4(R15)
         MVC   SHVNAML,0(R1)
         L     R1,8(R15)
         ST    R1,SHVVALA
         L     R1,12(R15)
         MVC   SHVVALL,0(R1)
         LA    R1,VP1
         ST    R1,DD1
         LA    R1,VP2Y3
         ST    R1,DD2
         ST    R1,DD3
         LR    R1,R8
         ST    R1,DD4
         OI    DD4,X'80'
         LA    R1,DD1
         LR    R0,R9
         L     R15,SAV_IRXEXCOM
         BALR  R14,R15
         L     R1,SHVVALL
         PR
VP1      DC    CL8'IRXEXCOM'
VP2Y3    DC    F'0'
SAMPWA_N DC    CL8'@SAMP_WA'
SAMPWA_L DC    AL4(L'SAMPWA_N)
SAMPWA_S DC    AL4(L'SAMPWA)
**********************************
* AREA DE TRABAJO                *
**********************************
DYNAREA  DSECT
SAVER    DS    18F
PJNAME   DS    CL8
PUNAME   DS    CL8
REXXENT  DS    F
REXXRET  DS    F
WCR      DS    C
LLNGSTR  DS    X
LLNGPAT  DS    X
STR      DS    CL256
PAT      DS    CL256
CALL1    CALL  ,(,,,),MF=L
SHV1     DS    8F
SAV_IRXEXCOM   DS   F
* REXX
STKFUNC  DS    CL8
STKDAT   DS    F
STKLEN   DS    F
STKRC    DS    F
STKENV   DS    F
STKRCE   DS    F
IRXSTKP  DS    0F
P1       DS    F
P2       DS    F
P3       DS    F
P4       DS    F
P5       DS    F
P6       DS    F
DD1      DS    F
DD2      DS    F
DD3      DS    F
DD4      DS    F
D1       DS    F
D2       DS    F
D3       DS    F
D4       DS    F
SAMPWA   DS    F
**********************
* PARM AREA          *
**********************
PARM     DS    0D
         ISFPSAMP
LDATA    EQU   *-DYNAREA
**********************************
* MAPAS DEL SISTEMA USADOS       *
**********************************
         IRXENVB
         IRXEXTE
         IRXSHVB
         IRXEFPL
         IRXARGTB
         IRXEVALB
         $JQE
         $HASPEQU
         END   ISFPSAMC
