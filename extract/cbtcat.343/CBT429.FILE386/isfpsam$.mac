
                         Spool Access Method.
                         --------------------

Changes.
--------

  Jan  1.996 - V 1.00
  Jul  1.999 - V 1.01 (Documentation and little changes)

Introduction.
-------------

  Spool Access Method (SAM) is a program that access a jes2 spool
  to retrieve some blocks.
  It is not a browser or Sdsf substitute, it's function is to make
  spooled data visible to programs.

  SAM has to interfaces a program to program (ISFPSAMR) and a Rexx
  interface (ISFPSAMC). With a little of work it can be used for a
  lot of tasks. I used it to release all jobs that matchs a pattern,
  to test jobs codes and messages, and a lot of little tasks for
  operators.

  Its works in OS390/V2R5 (Sysplex/MAS), and has been working in
  several previous versions of OS/390 and ESA.

Warning.
--------

  SAM does not make any security verification. If in your shop spooled
  output are protected by RACF or other products, SAM can read any way.
  Do not install or protect the program.

Installation.
-------------

  Install IGX00200 extended Svc or change authorization procedure
  (SETSUP) to your own method.

  Assemble ISFPSAMR and ISFPSAMC concatenating SYS1.MACLIB, SYS1.MODGEN
  and SYS1.HASPSRC/SYS1.V?R?M0.SHASMAC in SYSLIB.

  (OS/390 V2R5) Assemble can terminate with code 8 due to an error
  in $JQE.

  Copy load modules to tso step library or linklist library.

  Customize and test ISFPSAM1.

Calling ISFPSAMR.
-----------------

  Allocate a work area mapped in ISFPSAMP macro.
  Do not clear or free before calling "TER" function.
  Set function code in R_PARM.
  Set data in R_ENT.
  Call or link ISFPSAMR with R1 pointing to work area.
  Return code will be 0 or abend.

  "INI" - Init interface. Open spool and get work areas.
          Call:   R_PARM = "INI"
          Return: R_WAREA = ISFPSAMR work area.

  "TER" - Terminate interface. Close spool and free work areas.
          Call:   R_PARM = "TER"
          Return: none

  "JQE" - Return a buffer with all JQE's in Jes.
          In Jes exist a JEQ (Job queue element) for every Job, Tsu
          and Stc. (Sdsf's ST panel).
          Call:   R_PARM = "JQE"
          Return: R_ADDR = Add. of buffer returned with all JQEs.
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = Length of a single JQE.

  "JDS" - Return a list of datasets of a specified JQE. (PDDBs)
          Call:   R_PARM = "JDS"
                  R_ENT  = JQE
          Return: R_ADDR = Add. of buffer returned with all PDDBS
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = Length of a single PDDB.

  "DSR" - Return records from a specified PDDB. Until EOD or buffer
          full.
          Call:   R_PARM = "DSR"
                  R_ENT  = PDDB
          Return: R_ADDR = Add. of buffer returned with variable
                           records from adtaset
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = 0 - Buffer full / 1 - EOD.
                  R_OTHER  = Last block readed if buffer full.

  "DS2" - Return records from a specified PDDB starting at a specified
          position.
          Call:   R_PARM = "DS2"
                  R_ENT  = PDDB
                  R_OTHER= Last block readed
          Return: R_ADDR = Add. of buffer returned with variable
                           records from adtaset
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = 0 - Buffer full / 1 - EOD.
                  R_OTHER  = Last block readed if buffer full.

  "JOE" - Return all JOEs (Job output element) in a specified class.
          Joes are collection of datasets. (Sdsf's O panel).
          Call:   R_PARM = "JOE"
                  R_ENT  = class
          Return: R_ADDR = Add. of buffer returned with all Joes
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = Length of a single JOE.

  "JOS" - Return a list of datasets of a specified JOE. (PDDBs)
          Call:   R_PARM = "JOS"
                  R_ENT  = JOE
          Return: R_ADDR = Add. of buffer returned with all PDDBS
                  R_BUFLEN = Length of buffer.
                  R_BUFEND = End of buffer.
                  R_ELEML  = Length of a single PDDB.

Calling ISFPSAMC.
-----------------


  "INI" - Init interface. Open spool and get work areas.
          Call:   'ret_code = ISFPSAMC("INI")'
          Return: none

  "TER" - Terminate interface. Close spool and free work areas.
          Call:   'ret_code = ISFPSAMC("TER")'
          Return: none

  "JQE" - Return a buffer with all JQE's in Jes.
          In Jes exist a JEQ (Job queue element) for every Job, Tsu
          and Stc. (Sdsf's ST panel).
          Call:   'ret_code = ISFPSAMC("JQE","PREFIX","USERID")
          Return: JQEs are in stack, read it with pull.

  "JDS" - Return a list of datasets of a specified JQE. (PDDBs)
          Call:   'ret_code = ISFPSAMC("JDS",jqe)
          Return: PDDBs are in stack read it with pull.

  "DSR" - Return records from a specified PDDB. Until EOD or buffer
          full.
          Call:   'ret_code = ISFPSAMC("JDS",pddb)
          Return: Data is in the stack read it with pull.


  "JOE" - Return all JOEs (Job output element) in a specified class.
          Joes are collection of datasets. (Sdsf's O panel).
          Call:   'ret_code = ISFPSAMC("JOE",class)
          Return: Joes are in the stack, read it with pull

  "JOS" - Return a list of datasets of a specified JOE. (PDDBs)
          Call:   'ret_code = ISFPSAMC("JOS",joe)
          Return: PDDBs are in stack read it with pull.
