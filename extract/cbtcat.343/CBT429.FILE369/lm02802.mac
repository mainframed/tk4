PRC      TITLE 'ZAP TO IGG02046 FOR TCAM CLOSEQ SMF RECORD.'
********************************************************************
*                                                                  *
* NAME - TCAM CLOSEQ SMF RECORD WRITER.                            *
*                                                                  *
* DESCRIPTION - THIS CODE WRITES AN SMF240 RECORD FOR EACH CLOSE   *
*   OF AN TCAM APPLICATION Q.                                      *
*                                                                  *
* LEVEL - WE TESTED THIS EXIT WITH TCAM V2R4.  PLEASE NOTE THE USE *
*   OF MODLEV BELOW THAT INDICATES MAINTENANCE LEVEL OF THIS MODULE*
*   IN THE SMF RECORD.                                             *
*                                                                  *
* UPON ENTRY -                                                     *
*                                                                  *
* LOG -                                                            *
*   07/XX/86 PTW L01 IMPLEMENTATION                                *L01
*   05/21/87 PTW L02 REFIT FOR UY00456                             *L02
*                                                                  *
********************************************************************
*ZAP     CARD ++USERMOD(LM02802) .        /* TCAM CLOSEQ WRITE SMF */
*ZAP     CARD ++VER(Z038) FMID(JTC2412) PRE(UY00456).
*ZAP     CARD ++ZAP (IGG02046).
*ZAP     CARD    NAME IGG02046
*ZAP     CARD  EXPAND IGG02046(450)
         LCLC  &CSECT
&CSECT   SETC  'IGG02046'          LIST OUTPUT CSECT NAME.
&CSECT   CSECT                     START THE CSECT.
*
RECTYPE  EQU   240                SMF RECORD NUMBER.
RECSTYPE EQU   2                  SMF RECORD SUBTYPE.
MODLEV   EQU   2                  THIS MODULE'S LEVEL.              L02
TCAMLEV  EQU   24                 VTAM VERSION/RELEASE.
*
A        EQU   &CSECT              FOR CONVENIENCE.
HOOK     EQU   A+X'31A'            OFFSET TO 'STEAL' POINT.         L02
NOEU     EQU   A+X'320'            BRANCH BACK LABEL.               L02
PATCH    EQU   A+X'53C'            OFFSET TO 'PATCH' POINT.         L02
OFFSET   EQU   X'002'              OFFSET OF CSECT ADDRESSIBILITY.
ONE      EQU   1
* NOTE: WE DESTROY R0-R1,R3-R4,R14-R15 IN THIS ROUTINE.
RRCB     EQU   1                   A(RCB).
RCORE    EQU   2                   A(WORKAREA).
RTCB     EQU   9                   A(TCB).
RDCB     EQU   10                  A(DCB PROTECTED COPY).
RBASE    EQU   12                  BASE REGISTER.
*
IEDQRECB DSECT                     A FAKE DSECT FOR THE RCB.
         DS    XL22
RCBOPECB DS    XL4
         DS    XL11
RCBPEBAD DS    AL3
*
FORCORE  DSECT                     A FAKE DSECT FOR THE WORKAREA.
         ORG   *+X'170'
DXCCW1   DS    D
*
&CSECT   CSECT                     START THE CSECT.
         USING A+OFFSET,RBASE      ADDRESSIBILITY.
         PRINT DATA
*ZAP START
*ZAP START VER
         ORG   HOOK
         USING FORCORE,RCORE
         USING IEDQRECB,RRCB
         MVC   DXCCW1+ONE(3),RCBOPECB
         DROP  RCORE,RRCB
         ORG   PATCH
         DC    XL8'00'
*ZAP START REP
         ORG   HOOK                HOOK POINT.
         B     DOSMF               BRANCH TO PATCH.
         ORG   PATCH               PATCH POINT.
DOSMF    DS    0H                  PATCH LABEL.
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         LR    R3,R1              SAVE A(RCB).
         GETMAIN RU,LV=DYNLEN,SP=230 GET SP230 (TASK,HI PRIVATE)
         LR    R4,R1              SAVE AREA
         USING DYNAMIC,R4
         LA    R0,DYNAMIC         ZERO
         LA    R1,DYNLEN            DYNAMIC
         LR    R14,R0                 STORAGE.
         SLR   R15,R15
         MVCL  R0,R14             DO IT.
********************************************************************
*                                                                  *
*        C R E A T E   S M F   R E C O R D                         *
*                                                                  *
********************************************************************
         MVI   SM240RTY,RECTYPE   RECORD TYPE 240.
         MVC   SM240TYP,=AL2(RECSTYPE) WE ARE SUBTYPE 2.
         LA    R14,S2402DAT       R14 = (SMF POINTER).
         MVC   S2402TRN,=AL2(S2402TR#) # TRIPLETS.
* CREATE SOFTWARE LEVEL SECTION OF SMF RECORD.
         LA    R0,S2402REC        CALCULATE AND STORE OFFSET.
         LR    R1,R14
         SLR   R1,R0
         ST    R1,S2402LVO
         MVC   S2402LVL,=AL2(S2402LLN) MOVE LENGTH.
         MVC   S2402LV#,=H'1'     ONLY 1 SECTION.
         USING S2402LEV,R14       USE LEV MAPPING.
         MVI   S2402LAM,S2402LAT  MOVE ACCESS METHOD.
         MVI   S2402LVR,TCAMLEV   MOVE VERSION/RELEASE.
         MVI   S2402LMD,MODLEV    OUR RECORD VERSION.
         DROP  R14
         LA    R14,S2402LLN(,R14) BUMP SMF POINTER.
* CREATE ACCOUNTING SECTION OF SMF RECORD.
         LA    R0,S2402REC        CALCULATE AND STORE OFFSET.
         LR    R1,R14
         SLR   R1,R0
         ST    R1,S2402ACO
         MVC   S2402ACL,=AL2(S2402ALN) MOVE LENGTH.
         MVC   S2402AC#,=H'1'     ONLY 1 SECTION.
         USING S2402ACT,R14       USE ACCT MAPPING.
         TIME  BIN                STORE TIME, DATE.                 L02
         STM   R0,R1,S2402ATM
         MVI   S2402ATY,S2402ATE  MOVE FUNCTION CODE.
         L     R1,TCBTIO-T(,RTCB) R1= A(TIOT).
         AH    R1,DCBTIOT-D(,RDCB) R1 = A(TIOT ENTRY).
         ICM   R1,7,TIOEJFCB-TIOENTRY(R1)  R1 = A(JFCB).
         MVC   S2402APL,=CL8' '   INIT PLUNAME.
* MUST ADJUST A(JFCB) BY LENGTH OF HEADER IN NEXT INSTRUCTION.
         LA    R1,JFCBQNAM-J+X'10'(,R1)
         LA    R0,L'JFCBQNAM      THIS LOOP STRIPS OFF THE QUALIFIER
         LR    R15,R1               FROM THE QNAME.JOBNAME FORM OF
TESTQUAL DS    0H                   ALLOCATION.
         CLI   1(R15),C'.'        LOOK FOR '.'.
         BE    GOTQUAL            EXIT IF FOUND.
         LA    R15,1(,R15)        BUMP POINTER.
         BCT   R0,TESTQUAL        LIMIT OF 8 TIMES.
         BCTR  R15,0              ADJUST POINTER BACK.
GOTQUAL  DS    0H
         SLR   R15,R1             FIND LENGTH.
         EX    R15,MOVEQNAM       MOVE QNAME.
         MVC   S2402ASL,=CL8' '   MOVE SLUNAME.
         MVC   S2402AMJ,=CL8' '   INIT ACCESS METHOD JOBNAME.
         USING IEDQRECB,R3
         ICM   R1,7,RCBPEBAD      R1 = A(TCAM ASCB).
         DROP  R3
         L     R15,ASCBJBNI-ASCB(,R1) IF JOBNAME FOR JOB IS BLANK,
         LTR   R15,R15                  TRY JOBNAME FOR STC/LOGON/
         BNZ   MOVEJOBM                 MOUNT.
         L     R15,ASCBJBNS-ASCB(,R1)
         LTR   R15,R15
         BZ    *+10
MOVEJOBM MVC   S2402AMJ,0(R15)    MOVE IN ACCESS METHOD JOBNAME.
         MVC   S2402AAJ,=CL8' '   BLANK APPL JOBNAME.
         L     R1,PSAAOLD-P       R1 = A(CURRENT ASCB)
         L     R15,ASCBJBNI-ASCB(,R1) SAME AS ABOVE.
         LTR   R15,R15
         BNZ   MOVEJOBA
         L     R15,ASCBJBNS-ASCB(,R1)
         LTR   R15,R15
         BZ    *+10
MOVEJOBA MVC   S2402AAJ,0(R15)    MOVE IN ACCESS METHOD JOBNAME.
         DROP  R14
         LA    R14,S2402ALN(,R14) BUMP SMF POINTER.
         LA    R0,SM240ULN
         LR    R1,R14             CALCULATE L'USER SECTION.
         SLR   R1,R0
         STH   R1,SM240ULN        STORE L'USER SECTION IN SMF REC.
         LA    R1,S2402REC        R1 = A(SMF RECORD).
         SVC   226                CALL USER SVC ROUTINE.
         LTR   R15,R15            WTO IF BAD RC.
         BNZ   BADSVC
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
RETURN   DS    0H
         FREEMAIN RU,LV=DYNLEN,A=(R4),SP=230
         LR    R1,R3
         USING FORCORE,RCORE
         USING IEDQRECB,RRCB
         MVC   DXCCW1+ONE(3),RCBOPECB
         DROP  RCORE,RRCB
         B     NOEU
********************************************************************
*                                                                  *
*        E R R O R S                                               *
*                                                                  *
********************************************************************
BADSVC   DS    0H
*WTO 'IEDPRC6I NON-ZERO RC FROM PRC SMF SVC - NO ACCT RECORD WRITTEN.'2
         B     RETURN
********************************************************************
*                                                                  *
*        S T A T I C   A R E A                                     *
*                                                                  *
********************************************************************
MOVEQNAM MVC   S2402APL(*-*),0(R1)     MOVE PLUNAME.
         LTORG *
*ZAP END
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A S                                 *
*                                                                  *
********************************************************************
DYNAMIC  DSECT
         PRINT GEN
S2402REC SMF240 DSECT=NO,SUBTYPE=2     TYPE 240 RECORD.
DYNLEN   EQU   *-DYNAMIC
         PRINT NOGEN
         IHAPSA
P        EQU   PSA
         IHAASCB
         IKJTCB
T        EQU   TCB
TI       DSECT
         IEFTIOT1
J        DSECT
         IEFJFCBN
         DCBD  DSORG=PS,DEVD=DA
D        EQU   IHADCB
         PRINT OFF
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11                 A(PLIST).
R12      EQU   12                 PROGRAM BASE.
R13      EQU   13                 A(SAVE AREA).
R14      EQU   14
R15      EQU   15
         PRINT ON
         END   &CSECT
