PRC      TITLE 'ENQWAIT - STIMER UNTIL SOMEONE ELSE GETS AN ENQ.'
********************************************************************
*                                                                  *
* NAME - ENQWAIT.                                                  *
*                                                                  *
* DESCRIPTION -                                                    *
*                                                                  *
*   THIS PROGRAM WORKS IN CONJUNCTION WITH THE AUTOIPL PROGRAM.    *
*   WE STIMER UNTIL A TARGET JOB ACQUIRES A TARGET RESOURCE VIA AN *
*   ENQ REQUEST.  THUS WE CAN ENSURE THAT AUTOIPL WILL NOT         *
*   PROCEED UNTIL A PREVIOUS PROCESS IS READY FOR PROCESSING.      *
*                                                                  *
*   FOR EXAMPLE, CONSIDER THE FOLLOWING AUTOIPL INPUT:             *
*     S TPJOB,M=TCAM                                               *
*     "ENQWAIT "JOB=TCAM,MAJOR=AUTOTCAM                            *
*     S MESS,M=                                                    *
*                                                                  *
*   THE "S MESS,M=" COMMAND WILL NOT PROCEED UNTIL TCAM ACQUIRES   *
*   THE RESOURCE WHOSE MAJOR NAME IS AUTOTCAM.  WE STIMER EVERY    *
*   10 SECONDS FOR 5 MINUTES TO CHECK ON STATUS.  IF ANYTHING IS   *
*   FOUND THAT IS UNGOOD, WE ABEND WITH A U123.                    *
*                                                                  *
* TO USE -                                                         *
*                                                                  *
*   EXEC PGM=ENQWAIT,PARM='MAJOR=MMMMMMMM,                         *
*                          ACTION=WAIT/ABEND,                      *
*                          CONTROL=E/S/ANY,                        *
*                          JOB=JJJJJJJJ,                           *
*                          MINOR=RRRRRRRR,                         *
*                          MSG=YES/NO,                             *
*                          NAME=NNNNNNNN,                          *
*                          SCOPE=STEP/SYSTEM/SYSTEMS/ANY,          *
*                          SYSNAME=SSSSSSSS,                       *L04
*                          TIME=9999,                              *
*                          WANTENQ=HELD/NOTHELD'                   *
*                                                                  *
*           MAJ(OR)  = TEST FOR THIS ENQ QNAME BEING HELD:         *
*                      MMMMMMMM = QNAME (1-8 CHARS).               *
*           A(CTION) = DO THIS IF CONDITION IS'NT INITIALLY MET:   *
*                      W(AIT): WAIT (DEFAULT) FOR TIME= SECONDS.   *
*                      A(BEND): ABEND IMMEDIATELY. (WITH AN U123). *
*           C(ONTROL)= TEST FOR THIS ENQ RESOURCE CONTORL:         *
*                      E(XC): EXCLUSIVE                            *
*                      S(HR): SHARED                               *
*                      A(NY): DON'T TEST CONTROL (DEFAULT).        *
*           J(OB)    = TEST FOR THIS JOBNAME HOLDING RESOURCE:     *
*                      MMMMMMMM = QNMAE (1-8 CHARS).               *
*                      NOTE: A MASK IS ALLOWED - JOB=ABC*.         *
*           MIN(OR)  = TEST FOR THIS ENQ RNAME BEING HELD:         *
*                      RRRRRRRR = RNAME (1-44 CHARS).              *
*                      NOTE: A MASK IS ALLOWED - MINOR=ABC*.       *
*           MSG      = IF CONDITION IS'NT MET, NOTIFY ISSUER?      *L03
*                      Y(ES): NOTIFY (DEFAULT).                    *
*                      N(O):  DON'T NOTIFY.                        *
*           N(AME)   = DESCRIPTIVE NAME PUT IN NOTIFCATION MSG.    *
*                      NNNNNNNN = NAME (1-8 CHARS).                *
*           S(COPE)  = TEST FOR THIS ENQ SCOPE:                    *
*                      S(TEP): WITHIN AN ADDRESS SPACE.            *
*                      SYS(TEM): BETWEEN ADDRESS SPACES.           *
*                      SYSTEMS: SHARED BETWEEN SYSTEMS.            *
*                      SYSS:    ""                                 *
*                      A(NY): DON'T TEST SCOPE (DEFAULT).          *
*           SYS(NAME)= TEST FOR THIS SYSNAME HOLDING RESOURCE:     *L04
*                      SSSSSSSS = SYSNAME (1-8 CHARS).             *L04
*                      NOTE: THIS IS FOR GRS SUPPORT.              *L04
*           T(IME)   = FOR ACTION=WAIT, ELAPSED SECONDS TO WAIT    *
*                      BEFORE ABENDING:                            *
*                      NNNN = 1-9999 (DEFAULT=300).                *
*                      NOTE: ROUNDED UP TO NEXT 5 SECOND INTREVAL. *
*           W(ANTENQ)= CONDITION TO BE MET BEFORE RETURNING CONTROL*
*                      H(ELD): ENQ MUST BE HELD (DEFAULT)          *
*                      N(OTHELD): ENQ MUST NOT BE HELD.            *
*                                                                  *
*     NOTE: MAJOR= IS REQUIRED. IF JOB= IS NOT SPECIFIED, BOTH     *
*           MAJOR= AND MINOR= MUST BE.  ALSO, IF MSG=YES IS IN     *
*           EFFECT, EITHER JOB= OR NAME= MUST BE SPECIFIED; IF     *
*           ONLY JOB= IS SPECIFIED, THE VALUE MUST NOT BE A MASK.  *
*                                                                  *
* LOG -                                                            *
*   11/11/86 L01 PTW IMPLEMENTED                                   *L01
*   12/22/86 L02 PTW ADD'L PARMS SUPPORTED.                        *L02
*   06/17/87 L03 PTW BETTER MSGS, FIX BUGS, ETC.                   *L03
*   08/23/88 L04 PTW SYSNAME= SUPPORT FOR GRS.                     *L04
*                                                                  *
********************************************************************
         LCLC  &CSECT
&CSECT   SETC  'ENQWAIT'
&CSECT   CSECT
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         PRINT NOGEN
         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME
         LR    R12,R15            ESTABLISH BASE.
         USING &CSECT,R12
         GETMAIN RU,LV=DYNLEN     GET SOME STORAGE.
         LR    R2,R13             DO THE USUAL SAVE AREA STUFF.
         LR    R13,R1
         USING DYNAMIC,R13
         LR    R0,R1
         L     R14,=A(DYNLEN)
         LA    R1,R1
         SLR   R15,R15
         MVCL  R0,R14             ZERO STORAGE.
         ST    R2,4(,R13)         BACK CHAIN.
         ST    R13,8(,R2)         FORWARD CHAIN.
         XC    RC,RC              ASSUME GOOD RC.
********************************************************************
*                                                                  *
*        P A R M   P R O C E S S I N G                             *
*                                                                  *
********************************************************************
         L     R2,PSAAOLD-PSA
         L     R3,ASCBJBNI-ASCB(R2) GET OUR JOBNAME.
         LTR   R3,R3
         BNZ   *+8
         L     R3,ASCBJBNS-ASCB(R2)
         MVC   OURJOB,0(R3)
         MVI   TSO,NO             ASSUME NOT TSO.
         L     R3,ASCBTSB-ASCB(,R2)
         LTR   R3,R3
         BZ    *+8
         MVI   TSO,YES            THEN INDICATE TPUT MODE.
         MVI   WTOFLG,0           INITIALIZE FLAGS.
         MVI   PARM1,0
         MVI   PARM2,0
         MVI   MASK,0
         MVI   ACTION,WAIT
         MVI   CONTROL,ANY
         MVI   MSG,YES
         MVI   SCOPE,ANY
         MVC   TIME,=F'300'
         MVI   WANTENQ,HELD
DOPARM   DS    0H
         L     R2,4(,R13)         DIG BACK THRU SAVEAREAS
         L     R2,24(,R2)           FOR THE A(PARM).
         L     R2,0(,R2)          R2 = A(PARM).
         LH    R3,0(,R2)          R3 = L'PARM.
         LTR   R3,R3              IF ZEROS +
         BZ    BADPARM              THEN EXIT.
         LA    R2,2(,R2)          R2 = A(START OF TEXT).
         LA    R3,0(R3,R2)        R3 = A(END OF TEXT).
         ST    R3,SAVE
         LR    R3,R2
TRYCOMMA DS    0H                 SCAN FOR THE ','.
         CLI   0(R3),C','         IF A ',',
         BE    GOTCOMMA             THEN EXIT.
         LA    R3,1(,R3)          ELSE, LOOP.
         CL    R3,SAVE            IF STILL MORE TO GO,
         BL    TRYCOMMA             KEEP SCANNING.
GOTCOMMA DS    0H
         LR    R4,R3
         SR    R4,R2              R4 = L'KEYWORD +L'VALUE.
         L     R11,=A(KWORDTAB)    DO A TABLE LOOKUP ON THE
         USING KTABLE,R11
TRYKWORD DS    0H
         CLI   KTABKEY,X'FF'
         BE    BADPARM
         SLR   R5,R5
         IC    R5,KTABKEYL        CHECK THAT THE LENGTH IS FEASIBLE.
         CLR   R4,R5
         BNH   NXTKWORD
         BCTR  R5,0
         EX    R5,CLCKWORD        DO THE COMPARE.
         BE    GOTKWORD
NXTKWORD DS    0H
         LA    R11,KTABLEN(,R11)    IF NOT EQUAL, BUMP TO NEXT ENTRY.
         B     TRYKWORD
CLCKWORD CLC   KTABKEY(*-*),0(R2)
NXTPARM  DS    0H
         CL    R3,SAVE            CHECK FOR ANY MORE PARM FIELD.
         BNL   DOCHECK
         LA    R2,1(,R3)          IF YES, POSITION CURSOR.
         LR    R3,R2
         B     TRYCOMMA
GOTKWORD DS    0H
         XC    VALUELEN,VALUELEN  INITIALIZE WORKAREAS.
         MVI   VALUE,C' '
         MVC   VALUE+1(L'VALUE-1),VALUE
         MVI   VALUEFLG,0
         SLR   R4,R4
         IC    R4,KTABKEYL
         LA    R2,0(R4,R2)        BUMP CURSOR PAST KEYWORD.
         LR    R4,R3              CALCULATE LENGTH OF VALUE.
         SR    R4,R2
         BNP   BADPARM
         STH   R4,VALUELEN        SAVE L'VALUE.
         BCTR  R4,0
         EX    R4,MVCVALUE        AND VALUE.
         CLI   KTABTYPE,KEY       IF TYPE IS KEY, PROCESS.
         BE    DOKEY
         CLI   KTABTYPE,NUM       IF TYPE IS NUM, PROCESS.
         BE    DONUM
         CLI   KTABTYPE,FLG       IF TYPE IS FLG, PROCESS.
         BE    DOFLG
DOCHR    DS    0H                 ASSUME TYPE IS CHR.
         CLC   KTABMINW,VALUELEN+1  CHECK FOR MINIMUM WIDTH.
         BH    BADPARM
         CLC   KTABMAXW,VALUELEN+1  CHECK FOR MINIMUM WIDTH.
         BL    BADPARM
DOROUT   DS    0H
         L     R14,KTABROUT        GO TO THE PROPER ROUTINE.
         BR    R14
         DROP  R11
MVCVALUE MVC   VALUE(*-*),0(R2)
DOKEY    DS    0H                 TYPE IS KEY.
         USING KTABLE,R11
         L     R11,KTABVTAB       R11 = A(VALUE TABLE).
         DROP  R11
         L     R14,0(,11)         R14 = A(ROUTINE).
         LA    R11,4(,R11)        R11 = A(VALUES).
         USING VTABLE,R11
VALLOOP  DS    0H                 DO TABLE LOOKUP.
         CLI   VTABKEY,X'FF'      IF AT END, UNKNOWN VALUE.
         BE    BADPARM
         CLC   VTABKEYL,VALUELEN+1 LENGTHS MUST MATCH.
         BNE   NXTVALUE
         LH    R4,VALUELEN
         BCTR  R4,0
         EX    R4,CLCVALUE        DO COMPARE.
         BE    GOTVALUE
NXTVALUE DS    0H
         LA    R11,VTABLEN(,R11)  BUMP TO NEXT ENTRY.
         B     VALLOOP
GOTVALUE DS    0H
         MVC   VALUEFLG,VTABVAL   GOT HIT: MOVE VALUE FLAG.
         BR    R14
CLCVALUE CLC   VTABKEY(*-*),0(R2)
         DROP  R11
DONUM    DS    0H                 TYPE IS NUM.
         LA    R4,VALUE
         LH    R5,VALUELEN
NUMLOOP  DS    0H                 VERIFY NUMERIC.
         CLI   0(R4),C'0'            SCAN
         BL    BADPARM              FORWARD
         CLI   0(R4),C'9'            SCAN
         BH    BADPARM              FORWARD
         LA    R4,1(,R4)              TO FIRST
         BCT   R5,NUMLOOP
         B     DOROUT             GO TO ROUTINE.
DOFLG    DS    0H                 TYPE IS KEY.
         USING KTABLE,R11
         L     R14,KTABROUT       R14 = A(ROUTINE).
         DROP  R11
         L     R11,=A(FLGTAB)     R11 = A(VALUE TABLE).
         USING VTABLE,R11
FLGLOOP  DS    0H
         CLI   VTABKEY,X'FF'      IF AT END, BAD PARM.
         BE    BADPARM
         CLC   VTABKEYL,VALUELEN+1 CHECK LENGTHS.
         BNE   NXTFLVAL
         LH    R4,VALUELEN
         BCTR  R4,0
         EX    R4,CLCVALUE        COMPARE VALUES.
         BE    GOTFLG
NXTFLVAL DS    0H
         LA    R11,VTABLEN(,R11)  BUMP TO NEXT ENTRY.
         B     FLGLOOP
GOTFLG   DS    0H
         MVC   VALUEFLG,VTABVAL   GOT HIT: MOVE IN FLAG VALUE.
         BR    R14
DOMAJOR  DS    0H                 THE MAJOR= ROUTINE.
         TM    PARM1,GOTMAJOR     ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   MAJORLEN,VALUELEN  MOVE VALUE.
         MVC   MAJOR,VALUE        MOVE VALUE.
         OI    PARM1,GOTMAJOR     INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOACTION DS    0H                 THE ACTION= ROUTINE.
         TM    PARM1,GOTACT       ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   ACTION,VALUEFLG
         OI    PARM1,GOTACT       INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOCONTRL DS    0H                 THE CONTROL= ROUTINE.
         TM    PARM1,GOTCONT      ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   CONTROL,VALUEFLG
         OI    PARM1,GOTCONT      INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOJOB    DS    0H                 THE JOB= ROUTINE.
         TM    PARM1,GOTJOB       ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   JOBLEN,VALUELEN    MOVE VALUE.
         MVC   JOB,VALUE
         OI    PARM1,GOTJOB       INDICATE WE HAVE A VALUE.
         LH    R4,JOBLEN          CHECK FOR A MASK.
         LA    R5,JOB-1(R4)
         CLI   0(R5),C'*'
         BNE   NOJOBMSK
         BCTR  R4,0
         STH   R4,JOBLEN          GOT MASK: INDICATE THUSLY.
         OI    MASK,GOTJOB
NOJOBMSK DS    0H
         B     NXTPARM
DOMINOR  DS    0H                 THE MINOR= ROUTINE.
         TM    PARM1,GOTMINOR     ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   MINORLEN,VALUELEN  SAVE THE LENGTH.
         MVC   MINOR,VALUE
         OI    PARM1,GOTMINOR     INDICATE WE HAVE A VALUE.
         LH    R4,MINORLEN        CHECK FOR MASK.
         LA    R5,MINOR-1(R4)
         CLI   0(R5),C'*'
         BNE   NOMINMSK
         BCTR  R4,0
         STH   R4,MINORLEN        GOT MASK: INDICATE THUSLY.
         OI    MASK,GOTMINOR
NOMINMSK DS    0H
         B     NXTPARM
DOMSG    DS    0H                 THE MSG= ROUTINE.
         TM    PARM1,GOTMSG       ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   MSG,VALUEFLG
         OI    PARM1,GOTMSG       INDICATE WE HAVE A VALUE.
         B     NXTPARM
DONAME   DS    0H                 THE NAME= ROUTINE.
         TM    PARM1,GOTNAME      ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   NAME,VALUE
         OI    PARM1,GOTNAME      INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOSCOPE  DS    0H                 THE SCOPE= ROUTINE.
         TM    PARM1,GOTSCOPE     ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   SCOPE,VALUEFLG
         OI    PARM1,GOTSCOPE     INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOSYSN   DS    0H                 THE SYSNAME= ROUTINE.             L04
         TM    PARM2,GOTSYSN      ALLOW ONLY ONE SPECIFICATION.     L04
         BO    BADPARM                                              L04
         MVC   SYSNLEN,VALUELEN   SAVE THE LENGTH.                  L04
         MVC   SYSNAME,VALUE                                        L04
         OI    PARM2,GOTSYSN      INDICATE WE HAVE A VALUE.         L04
         B     NXTPARM                                              L04
DOTIME   DS    0H                 THE TIME= ROUTINE.
         TM    PARM2,GOTTIME      ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         LH    R4,VALUELEN
         BCTR  R4,0               MACHINE LENGTH.
         EX    R4,PACKTIME        PACK SECONDS.
         CVB   R5,DOUBLE          CONVERT TO BINARY.
         CH    R5,=H'1'           TEST SECONDS
         BL    BADPARM             FOR LIMITS.
         CH    R5,=H'9999'
         BH    BADPARM
         OI    PARM2,GOTTIME      INDICATE WE HAVE A VALUE.
         ST    R5,TIME             AND STORE.
         B     NXTPARM
PACKTIME PACK  DOUBLE,VALUE(*-*)
DOWENQ   DS    0H                 THE WANTENQ= ROUTINE.
         TM    PARM2,GOTWENQ      ALLOW ONLY ONE SPECIFICATION.
         BO    BADPARM
         MVC   WANTENQ,VALUEFLG
         OI    PARM2,GOTWENQ      INDICATE WE HAVE A VALUE.
         B     NXTPARM
DOCHECK  DS    0H                 CONSISTENCY CHECKING.
         TM    PARM1,GOTMAJOR     MAJOR IS REQUIRED.
         BZ    BADPARM
         TM    PARM1,GOTJOB       IF JOB= NOT FOUND, BETTER HAVE
         BO    OKJOB                BOTH MAJOR= , MINOR=.
         TM    PARM1,GOTMAJOR+GOTMINOR
         BNO   BADPARM
OKJOB    DS    0H
         CLI   MSG,NO             BYPASS NEXT IF MSG=NO.
         BE    OKNAME
         TM    PARM1,GOTNAME      IF MSG=YES, MUST HAVE EITHER
         BO    OKNAME               NAME= OR JOB=.
         TM    PARM1,GOTJOB       IF ONLY JOB=, BETTER NOT BE MASK:
         BZ    BADPARM              WILL BE UNINTELLIGBLE MESSAGE.
         TM    MASK,GOTJOB
         BO    BADPARM
         MVC   NAME,JOB           USE JOB= VALUE IN MESSAGE.
OKNAME   DS    0H
         B     ENDPARM
ENDPARM  DS    0H
         DROP  R11
********************************************************************
*                                                                  *
*        T E S T   F O R   E N Q                                   *
*                                                                  *
********************************************************************
         MVC   TIMELIM,TIME       INIT ELAPSED TIME COUNTER.
DOSCAN   DS    0H
         MVC   GQSCAN(GQSCANL),XGQSCAN
         TM    PARM1,GOTMINOR     ISSUE A DIFFERENT GQSCAN FOR MINOR.
         BO    GQMINOR
         GQSCAN AREA=(WRKRIB,WRKRIBL),RESNAME=(MAJOR),                 X
               MF=(E,GQSCAN)
         B     GQRC
GQMINOR  DS    0H
         LH    R3,MINORLEN
         TM    MASK,GOTMINOR                                        L03
         BO    GQMINGEN                                             L03
         GQSCAN AREA=(WRKRIB,WRKRIBL),RESNAME=(MAJOR,MINOR,(R3)),      X
               MF=(E,GQSCAN)
         B     GQRC                                                 L03
GQMINGEN DS    0H                                                   L03
       GQSCAN AREA=(WRKRIB,WRKRIBL),RESNAME=(MAJOR,MINOR,(R3),GENERIC),X
               MF=(E,GQSCAN)                                        L03
         B     GQRC                                                 L03
GQRC     DS    0H
         LTR   R15,R15            IF A BAD RC,
         BZ    GOTRIBS              LEAVE.
         CH    R15,=H'4'          IF NO ONE HAS RESOURCE,
         BE    NOHIT                WAIT A BIT.
         B     BADSCAN              WAIT A BIT.
GOTRIBS  DS    0H
         LR    R4,R1              R1 = # RIBS RETURNED.
         LA    R11,WRKRIB         R11 = A(1ST RIB).
         USING RIB,R11
DORIB    DS    0H                 LOOP THRU RIBS.
         CLI   SCOPE,ANY          CHECK FOR MATCHING SCOPE=.
         BE    OKSCOPE
         CLI   SCOPE,STEP         SCOPE=STEP ROUTINE.
         BNE   NOTSTEP
         TM    RIBSCOPE,RIBSTEP
         BZ    NEXTRIB
NOTSTEP  DS    0H
         CLI   SCOPE,SYSTEMS      SCOPE=SYSTEMS ROUTINE.
         BNE   NOTSYSS
         TM    RIBSCOPE,RIBSYSS
         BZ    NEXTRIB
NOTSYSS  DS    0H
         TM    RIBSCOPE,RIBSYS    SCOPE=SYSTEM ROUTINE.
         BZ    NEXTRIB
OKSCOPE  DS    0H
         LH    R2,RIBVLEN         R2 = L(VARIABLE PORTION OF RIB).
         LA    R10,RIBEND(R2)     R10 = A(FIRST RIBE).
         USING RIBE,R10
         L     R5,RIBNRIBE        R5 = # RIBES.
DORIBE   DS    0H                                                   L04
         TM    PARM2,GOTSYSN      CHECK FOR MATCHING SYSNAME=       L04
         BZ    OKRIBESN                                             L04
         CLC   SYSNAME,RIBESYSN                                     L04
         BNE   NEXTRIBE                                             L04
OKRIBESN DS    0H
         TM    PARM1,GOTJOB       CHECK FOR MATCHING JOB= .
         BZ    OKRIBEJB
         LA    R6,L'RIBEJBNM-1    DEFAULT LENGTH.
         TM    MASK,GOTJOB        IF MASK, DO COMPARE AS IS.
         BZ    *+10
         LH    R6,JOBLEN          ELSE USE JOB= LENGTH.
         BCTR  R6,0
         EX    R6,CLCJOBNM        IF THIS RIBE IS OUR TARGET JOB,
         BNE   NEXTRIBE             OKEYDOKE, EXIT.
OKRIBEJB DS    0H
         TM    RIBESFLG,RIBESTAT  CHECK FOR MATCHING CONTROL=.
         BZ    NEXTRIBE
         CLI   CONTROL,ANY        IF C=ANY, NO MATCHING NECESSARY.
         BE    OKCONT                                               L03
         CLI   CONTROL,SHR        C=SHR ROUTINE.
         BNE   NOTSHR
         TM    RIBERFLG,RIBETYPE
         BO    OKCONT
         B     NEXTRIBE
NOTSHR   DS    0H
         TM    RIBERFLG,RIBETYPE  C=EXC ROUTINE.
         BZ    OKCONT
         B     NEXTRIBE
OKCONT   DS    0H
         B     GOTHIT
NEXTRIBE DS    0H
         LA    R10,RIBEEND-RIBE(,R10)
         BCT   R5,DORIBE          LOOP UNTIL DONE.
NEXTRIB  DS    0H
         LH    R2,RIBVLEN         CALCUTE THE ADDRESS OF THE
         L     R3,RIBNRIBE          NEXT RIB.
         MH    R3,=Y(RIBEEND-RIBE)
         LA    R2,RIBEND-RIB(R3,R2)
         LA    R11,0(R2,R11)      R11 = A(NEXT RIB).
         BCT   R4,DORIB           LOOP UNTIL DONE.
         B     NOHIT
GOTHIT   DS    0H
         CLI   WANTENQ,HELD       GOTHIT, DO WE WANT ONE?
         BE    RETURN
         B     DOWAIT
NOHIT    DS    0H
         CLI   WANTENQ,NOTHELD    NO HIT, DO WE NOT WANT ONE?
         BE    RETURN
         B     DOWAIT
CLCJOBNM CLC   JOB(*-*),RIBEJBNM  IF THIS RIBE IS OUR TARGET JOB,
         DROP  R11,R10
********************************************************************
*                                                                  *
*        W A I T                                                   *
*                                                                  *
********************************************************************
DOWAIT   DS    0H
         CLC   TIMELIM,TIME       IF FIRST TIME THRU, CHECK
         BNE   DOSTIMER             FOR ACTION=.
         CLI   ACTION,ABEND       IF ACT=ABEND, DO IT.
         BE    BADLIM
         CLI   MSG,YES            IF MSG=YES, DO IT.
         BNE   DOSTIMER
         BAL   R4,INITMSG         FORMAT OUR WAITING MESSAGE.
DOSTIMER DS    0H
         STIMER WAIT,BINTVL==F'500' WAIT FOR 5 SECONDS.
         L     R2,TIMELIM         SUBTRACT 5 SECONDS.
         SH    R2,=H'5'
         BNP   BADLIM
         ST    R2,TIMELIM
         B     DOSCAN             THEN HANG IT UP.
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
RETURN   DS    0H
         TM    WTOFLG,NEEDDOM
         BZ    *+8
         BAL   R4,DODOM
         L     R2,RC                  R2 = RC.
         LR    R1,R13              PREPARE
         L     R13,4(,R13)         FOR FREEMAIN.
         FREEMAIN RU,LV=DYNLEN,A=(1)
         LR    R15,R2              AND RETURN
         RETURN (14,12),RC=(15)      WITH R15 = RC.
DODOM    DS    0H
         L     R1,MSGID
         DOM   MSG=(1)            DODOM IF REQUIRED.
         STIMER WAIT,BINTVL==F'250' WAIT FOR 2.5 SECONDS.
         BR    R4
********************************************************************
*                                                                  *
*        M E S S A G E S                                           *
*                                                                  *
********************************************************************
BADPARM  DS    0H                 FORMAT THE BAD PARM MESSAGE.      L03
         MVC   RC,=F'12'          RC = 12.                          L03
         BAL   R14,FMTMSG         INIT MSG AREA.                    L03
         MVC   MSGTEXT(L'MSGPARM),MSGPARM                           L03
         LA    R4,DOABEND                                           L03
         B     DOMESSAG                                             L03
BADSCAN  DS    0H                 FORMAT THE BAD SCAN MESSAGE.      L03
         MVC   RC,=F'12'          RC = 12.                          L03
         BAL   R14,FMTMSG         INIT MSG AREA.                    L03
         MVC   MSGTEXT(L'MSGSCAN),MSGSCAN                           L03
         LA    R4,DOABEND                                           L03
         B     DOMESSAG                                             L03
BADLIM   DS    0H                 FORMAT THE EXCEEDED LIMIT MESSAGE.L03
         MVC   RC,=F'12'          RC = 12.                          L03
         CLI   MSG,YES            IF MSG ^= YES,                    L03
         BNE   DOABEND              DON'T ISSUE MSG.                L03
         BAL   R14,FMTMSG         INIT MSG AREA.                    L03
         MVC   MSGTEXT(L'MSGLIM),MSGLIM                             L03
         MVC   MSGLJOB,NAME                                         L03
         MVC   MSGLSTOP,=CL6'START.'                                L04
         CLI   WANTENQ,HELD                                         L03
         BE    *+10                                                 L03
         MVC   MSGLSTOP,=CL6'STOP. ' ONLY IF WANTENQ=NOTHELD.       L04
         OI    WTOFLG,NONROLL
         LA    R4,DOABEND
         B     DOMESSAG
INITMSG  DS    0H                 FORMAT THE  WAITING MESSAGE.      L03
         BAL   R14,FMTMSG         INIT MSG AREA.                    L03
         MVC   MSGTEXT(L'MSGINIT),MSGINIT MOVE IN MSGLOG1 TEXT.     L03
         MVC   MSGIJOB,NAME                                         L03
         MVC   MSGISTOP,=CL6'START.'                                L04
         CLI   WANTENQ,HELD
         BE    *+10
         MVC   MSGISTOP,=CL6'STOP .' ONLY IF WANTENQ=NOTHELD.       L04
         TM    PARM2,GOTSYSN                                        L04
         BZ    OKISYSN                                              L04
         MVI   MSGISYSN-1,C' '                                      L04
         MVC   MSGISYSN(2),=CL2'ON'                                 L04
         MVC   MSGISYSN+3(L'SYSNAME),SYSNAME                        L04
         LH    R2,SYSNLEN                                           L04
         LA    R2,MSGISYSN+3(R2)                                    L04
         MVI   0(R2),C'.'                                           L04
OKISYSN  DS    0H                                                   L04
         OI    WTOFLG,NONROLL+SAVMSGID  INDICATE NONROLL, SAVE MSGID.
         B     DOMESSAG
********************************************************************
*                                                                  *
*        D O   M E S S A G E S.                                    *
*                                                                  *
********************************************************************
DOMESSAG DS    0H
         CLI   TSO,YES            ISSUE TPUT FOR TSO.
         BE    DOTPUT
         MVC   WTO(WTOL),XWTO     ELSE DO WTO.                      L03
         MVC   WTOMSG(L'MSGAREA),MSGAREA                            L03
         TM    WTOFLG,NONROLL
         BZ    *+8
         MVI   WTODESC,X'40'
DOWTO    DS    0H
         WTO   MF=(E,WTO)
         TM    WTOFLG,SAVMSGID
         BZ    *+12
         ST    R1,MSGID
         OI    WTOFLG,NEEDDOM
         NI    WTOFLG,255-(NONROLL+SAVMSGID)
         BR    R4
DOTPUT   DS    0H
         MVC   TPUT(TPUTL),XTPUT
         TPUT  MSGAREA,L'MSGAREA,MF=(E,TPUT)                        L03
         BR    R4
MVCWTO   MVC   WTOMSG(*-*),0(R2)
DOABEND  DS    0H
         TM    WTOFLG,NEEDDOM
         BZ    *+8
         BAL   R4,DODOM
         ABEND 123
********************************************************************L03
*                                                                  *L03
*        F O R M A T   M E S S A G E   H E A D E R                 *L03
*                                                                  *L03
********************************************************************L03
FMTMSG   DS    0H                                                   L03
         MVI   MSGAREA,C' '       BLANK MSGTEXT.                    L03
         MVC   MSGAREA+1(L'MSGAREA-1),MSGAREA                       L03
         MVC   MSGJOB,OURJOB       MOVE IN OUR ADABAS JOBNAME.      L03
         MVI   MSGCOLON,C':'      THEN A COLON.                     L03
         BR    R14                RETURN.                           L03
********************************************************************
*                                                                  *
*        S T A T I C   A R E A                                     *
*                                                                  *
********************************************************************
XGQSCAN  GQSCAN ,SCOPE=ALL,MF=L
GQSCANL  EQU   *-XGQSCAN
XWTO     WTO   '                                                       X
                                            ',MF=L,ROUTCDE=11
WTOL     EQU   *-XWTO
XTPUT    TPUT  0,0,EDIT,WAIT,,BREAKIN,MF=L
TPUTL    EQU   *-XTPUT
MSGINIT  DC    C'IS WAITING FOR          TO                   '     L04
MSGPARM  DC    C'THE PARM FIELD IS BAD, AN ABEND FOLLOWS.'          L03
MSGSCAN  DC    C'BAD RC FROM GQSCAN SVC, AN ABEND FOLLOWS.'         L03
MSGLIM   DC    C'         DIDN''T       IN TIME, ABENDING.'         L03
         LTORG *
SRCLEVEL DC    C'                                        '
KWORDTAB CSECT ,                  PARAMETER KEYWORD TABLE.
         DC    CL8'A=      ',AL1(2,KEY,0,0),A(ACTTAB)
         DC    CL8'ACTION= ',AL1(7,KEY,0,0),A(ACTTAB)
         DC    CL8'C=      ',AL1(2,KEY,0,0),A(CONTAB)
         DC    CL8'CONTROL=',AL1(8,KEY,0,0),A(CONTAB)
         DC    CL8'J=      ',AL1(2,CHR,1,8),A(DOJOB)
         DC    CL8'JOB=    ',AL1(4,CHR,1,8),A(DOJOB)
         DC    CL8'MAJ=    ',AL1(4,CHR,1,8),A(DOMAJOR)
         DC    CL8'MAJOR=  ',AL1(6,CHR,1,8),A(DOMAJOR)
         DC    CL8'MIN=    ',AL1(4,CHR,1,44),A(DOMINOR)
         DC    CL8'MINOR=  ',AL1(6,CHR,1,44),A(DOMINOR)
         DC    CL8'MSG=    ',AL1(4,FLG,0,0),A(DOMSG)
         DC    CL8'N=      ',AL1(2,CHR,1,8),A(DONAME)
         DC    CL8'NAME=   ',AL1(5,CHR,1,8),A(DONAME)
         DC    CL8'S=      ',AL1(2,KEY,0,0),A(SCOPTAB)
         DC    CL8'SCOPE=  ',AL1(6,KEY,0,0),A(SCOPTAB)
         DC    CL8'SYS=    ',AL1(4,CHR,1,8),A(DOSYSN)               L04
         DC    CL8'SYSNAME=',AL1(8,CHR,1,8),A(DOSYSN)               L04
         DC    CL8'T=      ',AL1(2,NUM,1,3),A(DOTIME)
         DC    CL8'TIME=   ',AL1(5,NUM,1,3),A(DOTIME)
         DC    CL8'W=      ',AL1(2,KEY,0,0),A(WENQTAB)
         DC    CL8'WANTENQ=',AL1(8,KEY,0,0),A(WENQTAB)
         DC    X'FF'
KTABLE   DSECT
KTABKEY  DS    CL8
KTABKEYL DS    AL1
KTABTYPE DS    AL1
KEY      EQU   X'01'
CHR      EQU   X'02'
NUM      EQU   X'04'
FLG      EQU   X'08'
KTABMINW DS    AL1
KTABMAXW DS    AL1
KTABROUT DS    A
         ORG   KTABROUT
KTABVTAB DS    A
KTABLEN  EQU   *-KTABLE
ACTTAB   CSECT ,                  ACTION= TABLE.
         DC    A(DOACTION)
         DC    CL8'A       ',AL1(1,ABEND)
         DC    CL8'ABEND   ',AL1(5,ABEND)
         DC    CL8'W       ',AL1(1,WAIT)
         DC    CL8'WAIT    ',AL1(4,WAIT)
         DC    X'FF'
CONTAB   CSECT ,                  CONTROL= TABLE.
         DC    A(DOCONTRL)
         DC    CL8'A       ',AL1(1,ANY)
         DC    CL8'ANY     ',AL1(3,ANY)
         DC    CL8'E       ',AL1(1,EXC)
         DC    CL8'EXC     ',AL1(3,EXC)
         DC    CL8'EXCLUSIV',AL1(8,EXC)
         DC    CL8'S       ',AL1(1,SHR)
         DC    CL8'SHR     ',AL1(3,SHR)
         DC    CL8'SHARED  ',AL1(6,SHR)
         DC    X'FF'
SCOPTAB  CSECT ,                  SCOPE= TABLE.
         DC    A(DOSCOPE)
         DC    CL8'A       ',AL1(1,ANY)
         DC    CL8'ANY     ',AL1(3,ANY)
         DC    CL8'S       ',AL1(1,SYSTEM)
         DC    CL8'SYS     ',AL1(3,SYSTEM)
         DC    CL8'SYSTEM  ',AL1(6,SYSTEM)
         DC    CL8'SYSS    ',AL1(4,SYSTEMS)
         DC    CL8'SYSTEMS ',AL1(7,SYSTEMS)
         DC    X'FF'
WENQTAB  CSECT ,                  WANTENQ= TABLE.
         DC    A(DOWENQ)
         DC    CL8'H       ',AL1(1,HELD)
         DC    CL8'HELD    ',AL1(4,HELD)
         DC    CL8'N       ',AL1(1,NOTHELD)
         DC    CL8'NOTHELD ',AL1(7,NOTHELD)
         DC    X'FF'
FLGTAB   CSECT ,                  FLAG TABLE.
         DC    CL8'YES     ',AL1(3,YES)
         DC    CL8'Y       ',AL1(1,YES)
         DC    CL8'NO      ',AL1(2,NO)
         DC    CL8'N       ',AL1(1,NO)
         DC    X'FF'
VTABLE   DSECT
VTABKEY  DS    CL8
VTABKEYL DS    AL1
VTABVAL  DS    AL1
VTABLEN  EQU   *-VTABLE
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A                                   *
*                                                                  *
********************************************************************
DYNAMIC  DSECT
SAVE     DS    18F .
DOUBLE   DS    D
RC       DS    F
MSGID    DS    F
VALUELEN DS    H
VALUE    DS    CL100
TIME     DS    F
TIMELIM  DS    F
MAJORLEN DS    H
MAJOR    DS    CL8
MINORLEN DS    H
MINOR    DS    CL44
OURJOB   DS    CL8
JOBLEN   DS    H
JOB      DS    CL8
NAME     DS    CL8
SYSNLEN  DS    H                                                    L04
SYSNAME  DS    CL8                                                  L04
TSO      DS    X
NO       EQU   0
YES      EQU   1
VALUEFLG DS    X
PARM1    DS    X
GOTMAJOR EQU   X'01'
GOTACT   EQU   X'02'
GOTCONT  EQU   X'04'
GOTJOB   EQU   X'08'
GOTMINOR EQU   X'10'
GOTMSG   EQU   X'20'
GOTNAME  EQU   X'40'
GOTSCOPE EQU   X'80'
PARM2    DS    X
GOTTIME  EQU   X'10'
GOTWENQ  EQU   X'20'
GOTSYSN  EQU   X'40'                                                L04
MASK     DS    X
ACTION   DS    X
WAIT     EQU   1
ABEND    EQU   2
CONTROL  DS    X
EXC      EQU   1
SHR      EQU   2
ANY      EQU   255
MSG      DS    X
SCOPE    DS    X
STEP     EQU   1
SYSTEM   EQU   2
SYSTEMS  EQU   3
*ANY     EQU   255
WANTENQ  DS    X
HELD     EQU   1
NOTHELD  EQU   2
WTOFLG   DS    X                                                    L03
NONROLL  EQU   X'01'                                                L03
SAVMSGID EQU   X'02'                                                L03
NEEDDOM  EQU   X'04'                                                L03
MSGAREA  DS    CL80                                                 L03
MSGJOB   EQU   MSGAREA,8                                            L03
MSGCOLON EQU   MSGAREA+8,1                                          L03
MSGTEXT  EQU   MSGAREA+10,70                                        L03
MSGLJOB  EQU   MSGTEXT,8                                            L03
MSGIJOB  EQU   MSGTEXT+15,8                                         L03
MSGLSTOP EQU   MSGTEXT+16,6                                         L03
MSGISTOP EQU   MSGTEXT+27,6                                         L03
MSGISYSN EQU   MSGTEXT+33,12
GQSCAN   DS    0F,CL(GQSCANL)                                       L03
TPUT     DS    0F,CL(TPUTL)                                         L03
WTO      DS    0F,CL(WTOL)                                          L03
WTOMSG   EQU   WTO+4,80                                             L03
WTODESC  EQU   *-4,2                                                L03
WRKRIB   DS    0F,64CL256
WRKRIBL  EQU  *-WRKRIB
DYNLEN   EQU   *-DYNAMIC
         ISGRIB ,
         IHAPSA ,
         IHAASCB ,
         PRINT OFF
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12                 PROGRAM BASE.
R13      EQU   13                 A(SAVE AREA).
R14      EQU   14
R15      EQU   15
         PRINT ON
         END   &CSECT
