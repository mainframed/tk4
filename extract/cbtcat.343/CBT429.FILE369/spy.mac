PRC      TITLE 'S P Y --  MVS CONSOLE SPY PROGRAM  --  VERSION 3.1'
********************************************************************
*                                                                  *
*                              S P Y                               *
*                                                                  *
*                            02/26/82                              *
*                                                                  *
*                    OPERATOR CONSOLE MONITOR                      *
*                                                                  *
*  THIS PROGRAM DISPLAYS THE CONTENTS OF ALL ACTIVE GRAPHIC        *
*  OPERATOR'S CONSOLES ON A TSO CRT. THE OPERATOR'S SCREEN CAN BE  *
*  EITHER A 327X OR A 370-168 INTEGRATED CONSOLE WITH 35 LINES.    *
*  THE TSO USER CAN USE ANY 327X TERMINAL.                         *
*                                                                  *
*  SPY MUST, ALAS, BE APF AUTHORIZED. THE OPERATOR CONSOLE BUFFERS *
*  AND CONTROL BLOCKS ARE NOW IN FETCH PROTECTED STORAGE. BE       *
*  SURE TO PLACE THE 'SPY' COMMAND IN IKJEFTE2 AND/OR IKJEFTE8     *
*  SO THAT IT WILL RETAIN APF AUTHORIZATION FROM TSO.              *
*                                                                  *
*  SPY GIVES A TSO USER THE CAPABILITY TO ENTER ANY                *
*  CONSOLE OPERATOR COMMAND. THIS FACILITY IN PROTECTED BY A       *
*  SIMPLE 3 CHARACTER PASSWORD (IN VIPWORD) TO PREVENT YOU         *
*  FROM ENTERING AN OPERATOR COMMAND BY ACCIDENT. THE SYNTAX IS    *
*                                                                  *
*  JES COMMAND:  $...  ANY JES COMMAND ...                         *
*  OS COMMAND:   /...  ANY OS COMMAND ...  (THE / IS STRIPPED OFF) *
*                                                                  *
*  TYPING THE 3-LETTER VIP PASSWORD 'TOGGLES' THE VIP FLAG.        *
*  THIS FACILITY WORKS BY PASSING THE COMMAND TO THE COMMAND       *
*  PROGRAM AS A PARM, WHO IN TURN EXECUTES IT USING SVC 34.        *
*  SPY,COMMAND AND LINK MUST ALL BE APF AUTHORIZED IF THEY ARE     *
*  TO WORK PROPERLY IN CONCERT. NOTE THAT THE RESPONSE TO THE      *
*  COMMAND APPEARS ONLY ON THE SCREEN YOU ARE WATCHING AT THE      *
*  TIME. ALSO, YOUR COMMANDS HAVE THE SAME CONSOLE AUTHORITY       *
*  AS THE SCREEN YOU ARE WATCHING, INCLUDING THE MASTER CONSOLE!   *
*  THE MORAL BEING DON'T WATCH THE MASTER CONSOLE AND ACCIDENTALLY *
*  ENTER '/Q' OR SOMETHING LIKE THAT...                            *
*                                                                  *
*  THIS PROGRAM WILL PROBABLY REQUIRE BOTH THE SYS1.AMODGEN AND    *
*  SYS1.APVTMACS MACRO LIBRARIES TO ASSEMBLE PROPERLY.             *
*  SPY WAS DEVELOPED ON A 370/168 MVS RELEASE 3.7; IT WILL WORK    *
*  ON MVS 3.8 WITH OR WITHOUT SE/2.                                *
*                                                                  *
*                     STEVE LANGLEY                                *
*                     SOUTHERN CALIF. EDISON                       *
*                     ROSEMEAD, CALIF   91770                      *
*                     213-572-3435                                 *
*                                                                  *
*                                                                  *
********************************************************************
********************************************************************
*                                                                  *
*                                                                  *
*  COMMAND     DESCRIPTION                                         *
*                                                                  *
*     B        END SPY                                             *
*     C        SWITCH MONITOR TO CONSOLE 1                         *
*     CXX      SWITCH MONITOR TO CONSOLE XX                        *
*     DXX      SET DELAY TO XX TENTHS SECONDS                      *
*     E        END SPY                                             *
*     F        FREEZE DISPLAY ON CURRENT PAGE                      *
*     R        RELEASE DISPLAY                                     *
*     S        STATUS OF ALL CONSOLES                              *
*     W        START TIMER MODE FOR 30 SECONDS                     *
*     WXX      START TIMER MODE FOR XX SECONDS                     *
*     W0       START TIMER MODE UNTIL INTERRUPT                    *
*     ?        DISPLAY THIS PAGE                                   *
*     1        DISPLAY MODE 1                                      *
*     2        DISPLAY MODE 2                                      *
*                                                                  *
*  HITTING INTERRUPT WILL STOP THE WAIT TIMER                      *
*                                                                  *
*     DISPLAY MODES 1 AND 2 ARE ONLY USEFUL WHEN WATCHING A LARGE  *
*     35-LINE 3066 370-168 INTEGRATED CONSOLE FROM A 24-LINE 327X-2*
*     TSO TERMINAL. THESE MODES ARE:                               *
*                                                                  *
*     DISPLAY MODE 1 - PAGE 1 = TOP 22 LINES                       *
*                      PAGE 2 = BOTTOM 12 LINES                    *
*     DISPLAY MODE 2 - PAGE 1 = TOP 22 LINES                       *
*                      PAGE 2 = BOTTOM 22 LINES                    *
*                                                                  *
*  LOG -                                                           *
*    05/00/85 PTW L01 IMPLEMENT AT PRC                             *L01
*    02/01/88 PTW L02 FIX FOR MVS/SP2.1.7 CONASID SET TO 7         *L02
*    09/28/88 PTW L03 MOD3 SUPPORT, DYNAMIC CONASID, ETC.          *L03
*                                                                  *
*                                                                  *
********************************************************************
         PRINT NOGEN                                                L03
SPY      CSECT
         USING SPY,R15                                              RGR
         B     AROUND             BRANCH AROUND DATA AREAS
         DC    CL9'SPY'           IDENTIFIER
         DC    CL9'&SYSDATE'
         DC    CL7'&SYSTIME'
         DC    CL11'VERSION 3.1'
SAVEADDR DC    A(SAVE)                                              RGR
AROUND   STM   R14,R12,12(R13)    SAVE REGISTERS                    RGR
         LR    R12,R15            R12 = ADDR OF ENTRY POINT
         L     R11,SAVEADDR       R11 = ADDR OF OUR SAVE AREA       RGR
         ST    R13,4(R11)         SAVE POINTER TO CALLERS SAVE AREA RGR
         ST    R11,8(R13)         SAVE PTR TO OUR SAVE AREA IN CALLER'S
         LR    R13,R11            R13 = ADDR OF OUR SAVE AREA
         USING SAVE,R13           R13 = THIRD BASE REGISTER         RGR
         LA    R11,4095(R12)      R11 WILL BE
         LA    R11,1(R11)         SECOND BASE REGISTER
         DROP  R15                                                  RGR
         USING SPY,R12,R11        ADDRESABILITY TO CSECT            RGR
         L     R1,8(R1)           ACCESS PSCB THROUGH CPPL          RGR
         TM    X'10'(R1),X'80'    IS HE OPER PRIVILEGED?            RGR
         BNO   DONE0                                                RGR
********************************************************************
*                                                                  *
*                       PROGRAM INITIALIZATION                     *
*                                                                  *
********************************************************************
         BAL   R14,INITSCAN       INITIALIZE IKJSCAN PARMLIST
         L     R2,PSAAOLD-PSA     FIND THE JOBNAME.                 L03
         L     R2,ASCBJBNS-ASCB(,R2)                                L03
         MVC   WTOUSER,0(R2)                                        L03
         L     R2,CVTPTR          FIND THE SYSTEM ID.               L03
         L     R3,CVTSMCA-CVT(,R2)                                  L03
         MVC   OURSID,SMCASID-SMCABASE(R3)                          L03
         L     R3,CVTCUCB-CVT(,R2)                                  L03
         MVC   CONASID,UCMCTID-UCM(R3)                              L03
         GTSIZE ,                 GET SCREEN SIZE
         LTR   R0,R0              R0 = NUMBER OF LINES PER SCREEN
         BZ    HARDCOPY           IF NONZERO ASSUME A CRT IS IN USE
********************************************************************
*                                                                  *
*                       THIS TERMINAL IS A CRT                     *
*                                                                  *
********************************************************************
CRT      STH   R0,LPSCREEN        R0 = LINES PER SCREEN
         STH   R1,CPLINE          R1 = CHARACTERS PER LINE
         CH    R0,=H'43'          IS USER ON A 3277?                L02
         BNE   FLSCREEN           YES, JUST CONTINUE                L02
         MVI   MOD4FLG,X'FF'      SET 3278-4 FLAG ON
         MVC   CMDCTRL(3),R41C1   ROW 41, COL 1
         MVC   PHEADING(3),R42C1  ROW 42, COL 1
         MVC   R24C1(3),R43C1     ROW 43, COL 1
FLSCREEN DS    0H
         STFSMODE ON,INITIAL=YES  TURN ON VTAM FULL SCREEN MODE
         LA    R3,STAXLIST        R3 = ADDRESS OF STAX LIST MACRO
         STAX  ATTNEXIT,MF=(E,(3)) ATTN EXIT TRAP
SKPTST3  EQU   *
         B     BLDUCMS
********************************************************************
*                                                                  *
*                    THIS TERMINAL IS A HARDCOPY                   *
*                                                                  *
********************************************************************
HARDCOPY STSIZE SIZE=80           OTHERWISE, HARDCOPY; SET LSIZE=80
         MVI   CRTFLAG,X'00'      WE ARE USING A HARDCOPY
         MVC   CMDCTRL(6),BLANKS  ZAP OUT 327X CNTRL CHARS
         MVC   PHEADING(6),BLANKS ZAP OUT 327X CNTRL CHARS
         MVC   HELP(14),BLANKS    ZAP OUT 327X CNTRL CHARS
         MVC   HELP2(14),BLANKS   ZAP OUT 327X CNTRL CHARS          RGR
********************************************************************
*                                                                  *
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)        *
*                                                                  *
********************************************************************
BLDUCMS  L     R4,CVTPTR          R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         LR    R2,R4              R2 = R4
         S     R2,=F'4'           R2 = ADDR OF ADDR OF UCM PREFIX
         L     R2,0(R2)           R2 = ADDR OF UCM PREFIX
         USING UCMPRFX,R2
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+16       R8 = ADDR OF UCMTAB
         L     R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         XR    R10,R10            R10 = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(R8)           SAVE UCM ADDRESS IN UCMTAB
         LA    R10,1(R10)         R10 = R10 + 1  (ONE MORE UCM)
         C     R5,UCMMCENT        IS THIS UCM THE MASTER CONSOLE UCM?
         BNE   UCMNEXT            NO;  GO LOOK AT NEXT UCM ENTRY
         ST    R10,CONSOLE        YES; LOOK AT THIS ONE FIRST
UCMNEXT  LA    R8,16(R8)          R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMFULL            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BNH   UCMLOOP            NO; KEEP GOING                    L02
         B     UCMDONE            YES; TABLE COMPLETE
UCMFULL  MVC   ERROR(27),ERRMSG5  UCM TABLE TOO SMALL
         MVI   EFLAG,X'FF'        SET ERROR FLAG                    RGR
UCMDONE  STH   R10,NUMUCMS        SAVE NUMBER OF UCMS FOUND
         DROP  R2,R4
********************************************************************
*                                                                  *
*         HERE WE GO... USE MODESET TO PUT US IN KEY 0             *
*                                                                  *
********************************************************************
SETAUTH  DS    0H                                                   SP3
         MODESET MODE=SUP                                           SP3
         ESAR  R5                   GET SEC ASID                    SP3
         ST    R5,SASID             KEEP IT                         SP3
         AXSET AX=ONE               SET AX TO ALLOW SSAR            SP3
         GETMAIN R,LV=820           GETMAIN AREA FOR TDCM           SP3
         ST    R1,LOCDCM            SAVE THE ADDRESS                SP3
SKPTST4  EQU   *
********************************************************************
*                                                                  *
*                            TOP OF LOOP                           *
*              LOCATE SCREEN BUFFER AND PREPARE TO TPUT            *
*                                                                  *
********************************************************************
NEXTPAGE CLI   ATTNFLG,X'00'      WAS ATTN HIT?
         BE    NOATTN             NO
*                                 ATTENTION KEY HIT; PROCESS IT
         MVI   ATTNFLG,X'00'      YES, RESET FLAG
         MVC   TIME(3),BLANKS     BLANK OUT TIMER FIELD
         MVI   WAITFLG,X'00'      TURN OFF WAIT FLAG
         XC    TIMER,TIMER        SET TIMER TO 0
NOATTN   EQU   *
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         L     R4,CONSOLE         R4 = CONSOLE TO BE DISPLAYED
         LTR   R4,R4              IS NUMBER = 0                     RGR
         BZ    NOCONSOL           YES, NO GOOD                      RGR
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
NOCONSOL MVC   ERROR(27),ERRMSG1  CONSOLE NUMBER INVALID            RGR
         MVI   EFLAG,X'FF'        SET ERROR FLAG                    RGR
RESETCN1 L     R4,OLDCONS         RESET TO OLD CONSOLE
         ST    R4,CONSOLE         AND SAVE IT
         B     NEXTPAGE           AND GO BACK THROUGH LOOP          RGR
GETUCM   SLL   R4,4               MULTIPLY BY 16
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         LR    R1,R5              R1 = ADDR OF UCMTAB ENTRY
         L     R5,0(R5)           R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         USING DCMTSRT,R6
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
********************************************************************
*                                                                  *
*       THIS IS NOT AN OPERATOR GRAPHIC CONSOLE - GIVE ERRMSG4     *
*                                                                  *
********************************************************************
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         MVC   ERROR(27),ERRMSG4  NON-GRAPHIC CONSOLE
         MVI   EFLAG,X'FF'        SET ERROR FLAG                    RGR
         B     RESETCN1           RESET THE CONSOLE NUMBER
********************************************************************
*                                                                  *
*   THIS IS A GRAPHIC CONSOLE - BUILD TRAILER LINE WITH CONSDATA   *
*                                                                  *
********************************************************************
GRAPHICS EQU   *
         BAL   R14,CONSDATA       CALL CONSDATA RTN
*       SETUP TO COPY PAGEABLE DCM TO OUR ADDRESS SPACE             SP3
         L     R5,DCMADTRN        ADDR OF TDCM - 'FROM' FOR MVCP    SP3
         LH    R7,CONASID         GET 'CONSOLE' ASID                L03
         SSAR  R7                 SET CONSOLE AS SECONDARY          SP3
         L     R7,LOCDCM          'TO' ADDR FOR MVCP                SP3
         LA    R3,820             LENGTH TO MOVE                    SP3
         SR    R15,R15            'FROM' KEY                        SP3
MOVEDCM  MVCP  0(R3,R7),0(R5),R15  MOVE IT                          SP3
         BZ    DCMMOVED                                             SP3
         LA    R5,256(R5)         BUMP 'FROM' ADDR                  SP3
         LA    R7,256(R7)         BUMP 'TO' ADDR                    SP3
         SH    R3,=H'256'         DECREMENT TRUE LENGTH             SP3
         B     MOVEDCM            GO GET THE REST                   SP3
DCMMOVED L     R5,SASID           RESTORE PREVIOUS SECONDARY -      SP3
         SSAR  R5                 SHOULD BE SAME AS PRIMARY         SP3
         L     R7,LOCDCM          ADDR OF OUR COPY                  SP3
         USING DCMSTRT,R7
********************************************************************
*                                                                  *
*    FILLIN OPERATORS COMMAND INPUT BUFFER AND SET VIP FLAG INDICR *
*                                                                  *
********************************************************************
         MVC   LASTLINE(79),DCMINPUT MOVE IN INPUT BUFFER LINE
         MVI   MODE+1,C' '        BLANK OUT VIP INDICATOR
         CLI   VIPFLG,X'FF'       IS THE VIP FLAG ON?
         BNE   CHKINTEG           NOPE
         MVI   MODE+1,C'*'        TURN ON VIP INDICATOR
********************************************************************
*                                                                  *
*                         CHECK CONSOLE TYPE                       *
*                                                                  *
********************************************************************
CHKINTEG MVI   INTEGFLG,X'FF'     TURN ON 3066 CONSOLE FLAG
         CLC   DCMMSGAL(2),=H'30' IS THIS REALLY A 3066 CONSOLE?
         BE    CHKMODEL           YES; CHK IF IT WILL FIT ON OUR TERM
         MVI   INTEGFLG,X'00'     NO; TURN OFF 3066 CONSOLE FLAG
*        CLC   DCMMSGAL(2),=H'20' IS THIS 327X-2 TYPE CONSOLE?      AEI
*        BNE   NOTSUPRT           NO;  NOT SUPPORTED, SO ABEND      AEI
         MVI   FREEZE,C'F'        YES; FREEZE DISPLAY
         MVI   PAGE,C'1'               ON PAGE 1 OF USER'S CRT
         MVC   TPUTLEN(4),MOD2TPUT
         B     MOD2               AND TREAT USER AS MOD2 FOR NOW
********************************************************************
*                                                                  *
*        THIS OPERATOR'S CONSOLE IS NEITHER A 24-LINE 327X-2 NOR   *
*        A 35-LINE 3066 270-168 INTEGRATED CONSOLE, SO ABEND.      *
*                                                                  *
********************************************************************
NOTSUPRT LA    R1,ERRMSG6         R1 = ADDR OF STRING TO TPUT
         LA    R0,26              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         ABEND 999
********************************************************************
*                                                                  *
*     THIS IS A 35-LINE 3066 OPERATORS CONSOLE. IF THE USER HAS A  *
*     43-LINE 3278-4 THERE IS NO PROBLEM, THE WHOLE THING CAN BE   *
*     DISPLAYED AT ONCE. HOWEVER, IF THE USER HAS A 24-LINE 327X-2 *
*     WE WILL HAVE TO BREAK THE DISPLAY INTO 2 PAGES SO IT WILL FIT*
*                                                                  *
********************************************************************
CHKMODEL CLI   MOD4FLG,X'FF'      IS THIS A 3278-4? (43 LINES)
         BNE   MOD2               NO - MUST BE A MOD2 (24 LINES)
********************************************************************
*                                                                  *
*                  USER HAS A 43-LINE 3278-4 CRT                   *
*                                                                  *
*        WE CAN JUST FREEZE HIS DISPLAY ON 'PAGE 1' AND CONTINUE   *
*                                                                  *
********************************************************************
         MVI   FREEZE,C'F'        FREEZE DISPLAY
         MVI   PAGE,C'1'          ON PAGE 1 INITIALLY
         MVC   TPUTLEN(4),MOD4TPUT SET LENGTH FOR FULL 3278-4 SCREEN
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN BUFFER + 6    RGR
         BCTR  R8,0
         BCTR  R8,0
         BCTR  R8,0
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         LA    R5,M4BUFLEN        R5 = 3278-4 BUFFER LEN (35 LINES)
         LA    R9,M4BUFLEN        R9 = 3278-4 BUFFER LEN (35 LINES)
         B     MOVEBUFF
********************************************************************
*                                                                  *
*                  USER HAS A 24-LINE 327X-2 CRT                   *
*                                                                  *
*        THIS OPER CONSOLE WILL HAVE TO BE DISPLAYED IN TWO SEGMENT*
*        OR 'PAGES' SINCE 35 LINES WON'T FIT IN THIS 24 LINE TUBE. *
*                                                                  *
********************************************************************
MOD2     CLI   PAGE,C'1'          ARE WE ON PAGE 1?
         BNE   ONTWO              NO, SO WE MUST BE ON 2
         CLI   FREEZE,C'F'        ARE WE FROZEN ON PAGE 1?
         BNE   PAGE2              NO, SO DISPLAY PAGE 2
         B     PAGE1              YES, SO DISPLAY PAGE 1
ONTWO    CLI   FREEZE,C'F'        ARE WE FROZEN ON PAGE 2?
         BE    PAGE2              YES, SO DISPLAY PAGE 2
PAGE1    MVI   PAGE,C'1'          PAGE = 1
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN IMAGE + 6     RGR
         BCTR  R8,0
         BCTR  R8,0
         BCTR  R8,0
         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         LA    R5,M2BUFLEN        R5 = LENGTH OF OUTPUT BUF (21 LINES)
         LA    R9,M2BUFLEN        R9 = CONSOLE BUFFER LEN   (21 LINES)
         B     MVETRAIL           GO MOVE THE BUFFER
PAGE2    MVI   PAGE,C'2'          PAGE = 2
         L     R8,DCMASCRN        R8 = ADDR OF SCREEN IMAGE + 6     RGR
         BCTR  R8,0
         BCTR  R8,0
         BCTR  R8,0
         CLI   MODE,C'2'          ARE WE IN DISPLAY MODE 2?
         BE    DMODE2             YES, BRANCH TO DMODE2
DMODE1   LA    R8,LEN22(R8)       MOVE POINTER DOWN 23 LINES
         LA    R9,LEN13           R9 = LENGTH OF LAST 12 LINES
         B     CONTINUE           JUMP AROUND MODE 2 DISPLAY
DMODE2   LA    R8,LEN9(R8)        MOVE POINTER DOWN 9 LINES
         LA    R9,LEN21           R9 = LENGTH OF SOURCE BUFFER
CONTINUE LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER
         LA    R5,M2BUFLEN        R5 = LENGTH OF OUTPUT BUFFER
MVETRAIL MVC   ENDMOD2(TRAILEN),CMDCTRL MOVE IN TRAILER
********************************************************************
*                                                                  *
*               MOVE THE SCREEN IMAGE BUFFER INTO BUF              *
*                                                                  *
********************************************************************
MOVEBUFF STM   R4,R9,MOVEBSAV     KEEP REGS                         SP3
*        SETUP TO COPY CONSOLE BUFFER TO OUR ADDRESS SPACE.         SP3
*        FIRST FILL AREA WITH SPACES                                SP3
         L     R9,=X'40000000'    MAKE BLANK THE PAD, LENGTH =0     SP3
         LA    R8,*               NOT THAT IT REALLY MATTERS        SP3
         MVCL  R4,R8              PAD WITH SPACES                   SP3
         LH    R4,CONASID         GET 'CONSOLE' ASID                L03
         SSAR  R4                 SET 'CONSOLE' AS SECONDARY        SP3
         LM    R4,R9,MOVEBSAV     GET BACK ADDRESSES, LENGTHS       SP3
         SR    R15,R15            'FROM' KEY                        SP3
MOVEBFR  MVCP  0(R9,R4),0(R8),R15 MOVE IT                           SP3
         BZ    BFRMOVED           GET OUT WHEN ALL MOVED            SP3
         LA    R8,256(R8)         BUMP FROM ADDR                    SP3
         LA    R4,256(R4)         BUMP TO ADDR                      SP3
         SH    R9,=H'256'         DECREMENT TRUE LENGTH             SP3
         B     MOVEBFR            GET THE REST                      SP3
BFRMOVED L     R4,SASID           RESTORE PREVIOUS SECONDARY -      SP3
         SSAR  R4                 SHOULD BE SAME AS PRIMARY.        SP3
         DROP  R5,R6,R7
WCNTL    DS    0H
         CLI   CRTFLAG,X'FF'      IS THIS A CRT?
         BE    TPUTCRT            YES
********************************************************************
*                                                                  *
*             USER HAS A LINE-AT-A-TIME HARDCOPY TERMINAL          *
*                                                                  *
********************************************************************
         XR    R8,R8              R8 = COUNTER = 0
         LA    R1,BUF             SET POINTER TO FIRST LINE OF BUFFER
         ICM   R1,8,EDITFLG       EDIT MODE
         L     R0,=F'78'          R0 LENGTH OF OUTPUT LINE
NEXTL    LR    R3,R1              SAVE R1 SINCE TPUT ZAPS IT
         BAL   R14,TERMPUT        PRINT ONE LINE ON HARDCOPY
         LA    R8,1(R8)           ADD 1 TO COUNTER
         C     R8,=F'21'          HAVE WE PRINTED LAST LINE?
         BE    DOLAST2            YES, CONTINUE
         LA    R1,80(R3)          NOPE, POINT TO NEXT LINE
         CLI   INTEGFLG,X'FF'     IS THIS AN INTEGRATED CONSOLE?
         BE    NOT3270            YES
         MVC   0(5,R1),BLANKS     BLANK OUT 3270 CTRL CHARS
         LA    R1,4(R1)           ADD 4 EXTRA BYTES TO SKIP CTRL CHARS
NOT3270  L     R0,=F'78'          LOAD LENGTH OF LINE
         ICM   R1,8,EDITFLG       EDIT MODE
         B     NEXTL              PRINT NEXT LINE
DOLAST2  LA    R1,LASTLINE        R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         LA    R1,HEADING         R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         LA    R1,USERLINE        R1 = ADDR OF STRING TO TPUT
         LA    R0,79              R0 = LENGTH OF TPUT
         BAL   R14,TERMPUT        DO A TPUT
         B     CHKWAIT            GO CHECK THE WAIT TIMER
********************************************************************
*                                                                  *
*               DISPLAY THE OPERATOR'S SCREEN ON A 327X            *
*                                                                  *
********************************************************************
TPUTCRT  LA    R1,CLEAR           R1 = ADDR OF OUTPUT STREAM
         L     R0,TPUTLEN         R0 = LENGTH OF TPUT
         L     R7,LOCDCM          ADDR OF OUR COPY                  L02
         USING DCMSTRT,R7                                           L02
         CLC   DCMMSGAL(2),=H'16' IS THIS 4341 3278-2A?             L02
         BH    NOT2A              NO; BYPASS NEXT                   L02
         MVC   BUF+17*84(84),=CL84' '
         MVC   BUF+18*84(84),=CL84' '
         MVC   BUF+19*84(84),=CL84' '
         MVC   BUF+20*84(84),=CL84' '
         MVC   BUF+21*84(84),=CL84' '
         MVC   BUF+17*84(3),=X'11D550'
NOT2A    DS    0H                                                   L02
         CLC   DCMMSGAL(2),=H'20' IS THIS 3278-2?                   L02
         BNE   *+10                                                 L02
         MVC   BUF+21*84(84),=CL84' ' CLEAN UP CMD INPUT AREA       L02
         ICM   R1,8,FULLSCR       SET ASIS TYPE FOR TPUT
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY ENTIRE SCREEN
         DROP  R7                                                   L02
********************************************************************
*                                                                  *
*      IF WE ARE IN WAIT MODE SO A STIMER FOR THE NECESSARY LENGTH *
*      OF TIME, THEN CALCULATE AND DISPLAY THE NEW TIMER COUNT.    *
*      IF COUNT HAS HIT ZERO, TURN OFF WAIT FLAG.                  *
*                                                                  *
********************************************************************
CHKWAIT  MVC   ERROR(66),BLANKS   BLANK OUT ERROR FIELD
         CLI   WAITFLG,X'FF'      IS THE WAIT FLAG ON?
         BNE   READCHAR           NO, SO GO GET A COMMAND
         STIMER WAIT,BINTVL=DELAY WAIT FOR DELAY * .01 SECONDS
         L     R2,TIMER           R2 = CURRENT VALUE OF TIMER
         BCTR  R2,0               TIMER = TIMER - 1
         ST    R2,TIMER           STORE NEW VALUE OF TIMER
         CVD   R2,WORK            CONVERT TO DECIMAL.
         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1  MOVE TIME LEFT INTO PLACE
         LTR   R2,R2              HAS TIMER HIT ZERO?
         BNZ   NEXTPAGE           NO, CONTINUE TO COUNT
         MVC   TIME(3),BLANKS     CLEAR COUNTER FIELD
         XI    WAITFLG,X'FF'      TOGGLE WAIT FLAG OFF
         B     NEXTPAGE           AND GO ON AS IF NOTHING HAPPENED..
********************************************************************
*                                                                  *
*                       READ COMMAND FROM USER                     *
*                                                                  *
********************************************************************
READCHAR DS    0H                                                   RGR
         XC    REPLY0(06),REPLY0  CLEAR THE INPUT LINE              RGR
         MVC   REPLY(79),BLANKS   CLEAR THE INPUT LINE              RGR
         TGET  REPLY0,85,ASIS     GET 85 CHARACTERS FROM TERMINAL   RGR
         CH    R15,=H'12'              MORE INPUT?                  RGR
         BNE   NOCLEAR                    NO, SKIP CLEARQ           RGR
         TCLEARQ INPUT                                              RGR
NOCLEAR  DS    0H                                                   RGR
         MVC   R24C1A(2),=X'1D40'      AND RESET MDT FLAG           RGR
         MVC   USERLINE(79),NULLS      CLEAR USER LINE              L03
         XR    R1,R1                   CLEAR REG.                   RGR
         IC    R1,REPLY0               SET UP FOR PFK               RGR
         N     R1,=XL4'0000000F'       OBTAIN NUMBER ONLY           RGR
         CH    R1,=XL2'000C'           CHECK FOR ENTER              RGR
         BH    ENTER                                                RGR
         MVC   REPLY(79),BLANKS        CLEAR THE REPLY AREA         RGR
         BCTR  R1,0                    KNOCK IT DOWN BY ONE         RGR
         SLL   R1,5                    TABLE OF 32 BYTE ENTRIES     RGR
         LA    R1,REPLYS(R1)           POINT TO ENTRY               RGR
         CLI   0(R1),C'C'              IS IT A CONVERSATIONAL KEY?  RGR
         BNE   NONCON                     NO, CONTINUE ON.          RGR
         MVC   USERLINE(79),NULLS      YES, CLEAR USERLINE          L03
         MVC   USERLINE(31),1(R1)         AND MOVE IN PFK REPLY     RGR
         MVC   R24C1A(2),=X'1DC1'         AND SET MDT FLAG          RGR
         B     NEXTPAGE           AND GO ON                         RGR
NONCON   DS    0H                                                   RGR
         MVC   REPLY(31),1(R1)         AND MOVE IT IN               RGR
ENTER    DS    0H                                                   RGR
         CLI   REPLY0,X'6E'       IS THIS A RESHOW? (VTAM ONLY)     RGR
         BE    WCNTL              YES; REDISPLAY SCREEN             RGR
         CLI   REPLY,C' '         JUST A BLANK?                     RGR
         BE    NEXTPAGE           YES, JUST GO REFRESH              RGR
         CLI   REPLY+13,C':'      IS ERROR MESSAGE IN FIELD?        RGR
         BNE   ENTER0                                               RGR
         MVC   REPLY+13(67),BLANKS YES, CLEAR IT OUT.               RGR
ENTER0   DS    0H
********************************************************************
*                                                                  *
*                       X  --  RESHOW PREVIOUS COMMAND             *
*                                                                  *
********************************************************************
RESHOW   DS    0H                                                   RGR
         CLI   REPLY,C'X'         IS IT RESHOW?                     RGR
         BE    RESHOW0            YES, SET UP THE COMMAND           RGR
         CLC   REPLY(3),VIPWORD   IS IT PASSWORD?                   RGR
         BE    OPERCMDS           YES, DON'T RESET COMMAND          RGR
         MVC   REPLYSAV(79),REPLY NO, SAVE FOR NEXT TIME.           RGR
         B     OPERCMDS           AND CONTINUE                      RGR
RESHOW0  DS    0H                                                   RGR
         LA    R2,REPLYSAV+L'REPLYSAV-10                            L03
         CLI   0(R2),C' '         MAKE SURE WE HAVE NULLS IN        L03
         BNE   *+8                  USERLINE.                       L03
         BCT   R2,*-8                                               L03
         SL    R2,=A(REPLYSAV)                                      L03
         EX    R2,MVCREP                                            L03
         MVC   R24C1A(2),=X'1DC1' AND SET MDT FLAG                  RGR
         B     NEXTPAGE           AND GO ON                         RGR
MVCREP   MVC   USERLINE(*-*),REPLYSAV
********************************************************************
*                                                                  *
*               CHECK FOR SYSTEM OPERATOR COMMANDS                 *
*                                                                  *
********************************************************************
OPERCMDS DS    0H                                                   RGR
         CLI   VIPFLG,X'FF'       ARE WE IN VIP MODE?
         BNE   PARSECMD           NO, SO CONTINUE
         CLI   REPLY,C'#'         IS IT A POUND COMMAND?            RGR
         BNE   OPER               NO, CONTINUE                      RGR
         MVC   OPERCMD(80),REPLY  YES; QUIT AND BLANK OUT REPLY     RGR
         MVI   OPERCMD+79,C' '    BLANK OUT COLUMN 80               RGR
         B     DOCMD              BRANCH TO COMMAND AND SVC34       RGR
OPER     CLI   REPLY,C'/'         IS THIS AN OS OPERATOR COMMAND?
         BNE   JES                NO, CHECK FOR JES CMD
         MVC   OPERCMD(79),REPLY+1 YES; QUIT AND BLANK OUT REPLY FIELD
         MVI   OPERCMD+79,C' '    BLANK OUT COLUMN 80
         B     DOCMD              BRANCH TO COMMAND AND SVC34
JES      CLI   REPLY,C'$'         IS THIS A JES COMMAND?
         BNE   PARSECMD           NO, CONTINUE
* CHECK FOR JES2 $T AND $VS COMMAND LINES DELETED                   RGR
         MVC   OPERCMD(80),REPLY  MOVE CMD IN FROM REPLY FIELD      RGR
         MVI   OPERCMD+79,C' '    BLANK OUT COLUMN 80               RGR
DOCMD    DS    0H                                                   RGR
         MVC   REPLY(80),BLANKS   BLANK OUT REPLY FIELD             RGR
         LA    R3,OPERCMD+79      R3 = ADDR OF LAST COLUMN
         LA    R1,OPERCMD         R1 = ADDR OF FIRST COLUMN
NXTCHAR  CLI   0(R3),C' '         IS THIS A BLANK?
         BNE   LASTCHAR           NO; THIS IS LAST CHAR IN CMD
         BCTR  R3,0               R3 = R3 - 1
         CR    R3,R1              IS WHOLE THING BLANK?
         BL    NEXTPAGE           YES; SOMETHING WRONG, BUT CONT ANYWAY
         B     NXTCHAR            NO;  GO LOOK AT NEXT CHAR
LASTCHAR SR    R3,R1              R3 = R3- R1
         LA    R3,1+4(,R3)        R3 = R3 + 5                       L03
         STH   R3,OPERCMDL
         MVC   WTOCMD,OPERCMD                                       L03
         L     R2,SAVEUPT                                           L03
         NI    UPTSWS-UPT(R2),255-UPTWTP                            L03
         WTO   MF=(E,WTO)                                           L03
         L     R2,CVTPTR           CVT ADDRESS                      L03
         L     R2,CVTCUCB-CVT(,R2) UCM ADDRESS                      L03
         SH    R2,=H'4'            POINT TO PREFIX POINTER          L03
         L     R2,0(,R2)           POINT TO UCM PREFIX              L03
         L     R2,UCMMCENT-UCMPRFX(,R2) MSTCONSOLE UCM ENTRY        L03
         SLR   R3,R3                                                L03
         IC    R3,UCMID-UCMLIST(,R2) MASTER UCM ENTRY NUMBER        L03
         MODESET KEY=ZERO                                           L03
         LR    R0,R3              SHOW MCON (CAN DO MOST CMDS).     L03
         LA    R1,OPERCMDL                                          L03
         MGCR  OPERCMDL           ISSUER OPERATOR COMMAND.          L03
         MODESET KEY=NZERO                                          L03
         L     R2,SAVEUPT                                           L03
         OI    UPTSWS-UPT(R2),UPTWTP                                L03
         B     NEXTPAGE                                             L03
********************************************************************
*                                                                  *
*          CONVERT COMMAND TO UPPER CASE AND CALL IKJSCAN          *
*                                                                  *
*    THIS CALL TO IKJSCAN IS COMPLETELY UNNECESSARY TO THE OPERATIO*
*    OF SPY. IT IS INCLUDED SOLELY TO ALLOW THE 'X' FEATURE OF     *
*    PCF2 TO OPERATE. IF YOU DO NOT HAVE PCF2, THIS COULD BE REMOVE*
*                                                                  *
********************************************************************
PARSECMD OC    REPLY(79),BLANKS   CONVERT CHARS TO UPPER CASE
         XC    CBUF+2(2),CBUF+2   CLEAR OFFSET
         MVC   CSPLBLOK(24),CSPLSAVE  COPY IN CSPL BLOK
         XC    CSOABLOK(8),CSOABLOK
         LA    R1,CSPLBLOK        R1 = ADDR OF CMD SCAN PARM LIST
         L     R15,ADDRSCAN       R15 = ADDR OF IKJSCAN
         BALR  R14,R15            INVOKE IKJSCAN
         LA    R1,CSOABLOK        R1 = ADDR OF CMD SCAN OUTPUT AREA
         USING CSOA,R1
         TM    CSOAFLG,CSOANOC    IS THE BUFFER EMPTY?
         BO    NEXTPAGE           YES; JUST GO REFRESH
         DROP  R1
********************************************************************
*                                                                  *
*                       W  --  ENTER WAIT MODE                     *
*                                                                  *
********************************************************************
CWAIT    CLI   REPLY,C'W'         DO WE SHIFT TO WAIT MODE?
         BNE   CDELAY             NO, SO CONTINUE
         XI    WAITFLG,X'FF'      TURN ON WAIT FLAG
         LA    R2,30              SET DEFAULT VALUE = 30
         LA    R15,CONVBIN        BRANCH TO CONVERSION RTN
         BALR  R14,R15            EBCDIC TO BINARY
         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER
         MVC   TIME(3),SCRATCH+1  MOVE TIME LEFT INTO PLACE
         ST    R2,TIMER           STORE STARTING TIMER VALUE
         B     NEXTPAGE           ALL SET - GO DISPLAY NEXT PAGE
********************************************************************
*                                                                  *
*            D  --  SET TIMER DELAY IN TENTHS OF A SECOND          *
*                                                                  *
********************************************************************
CDELAY   CLI   REPLY,C'D'         ARE WE CHANGING THE TIME DELAY?
         BNE   CCONSOLE           NO, SO CONTINUE
         LA    R2,10              SET DEFAULT VALUE = 10 TENTHS SECOND
         LA    R15,CONVBIN        BRANCH TO CONVERSION RTN
         BALR  R14,R15            EBCDIC TO BINARY
         C     R2,=F'10'          IS IT LESS THAN A SECOND          RGR
         BH    NO10               ITS OK                            RGR
         LA    R2,10              ELSE GIV THEM A TEN               RGR
         MVC   WORK+6(2),=X'010C'      AND TELL THEM ABOUT IT       RGR
NO10     MVC   SCRATCH(5),DPATTRN MOVE IN EDIT PATTERN              RGR
         ED    SCRATCH(5),WORK+6  EDIT IN DELAY TIME
         MVC   PAUSE(3),SCRATCH+2 MOVE TIME LEFT INTO PLACE
         MH    R2,=H'10'          CONVERT TO 100THS OF A SECOND
         ST    R2,DELAY           STORE WAIT DELAY VALUE
         B     NEXTPAGE           ALL SET - GO DISPLAY NEXT PAGE
********************************************************************
*                                                                  *
*                    C  --  SET CONSOLE NUMBER                     *
*                                                                  *
********************************************************************
CCONSOLE CLI   REPLY,C'C'         DO WE CHANGE CONSOLES?
         BNE   BYE                NO, SO CONTINUE
         L     R2,CONSOLE         SET DEFAULT CONSOLE
         ST    R2,OLDCONS         SAVE OLD CONSOLE #
         LA    R15,CONVBIN        BRANCH TO
         BALR  R14,R15            EBCDIC->BINARY CONVERTOR
         ST    R2,CONSOLE         STORE R2 AWAY AS CONSOLE NUMBER
         B     NEXTPAGE           CONTINUE
********************************************************************
*                                                                  *
*                        B  --  TERMINATE SPY                      *
*                                                                  *
********************************************************************
BYE      CLI   REPLY,C'B'         IS IT A 'B'?
         BE    DONE               YES, SO QUIT
********************************************************************
*                                                                  *
*                        E  --  TERMINATE SPY                      *
*                                                                  *
********************************************************************
END      CLI   REPLY,C'E'         IS IT AN 'E'?
         BE    DONE               YES, SO QUIT
********************************************************************
*                                                                  *
*               F  --  FREEZE DISPLAY ON CURRENT PAGE              *
*                                                                  *
********************************************************************
F        CLI   REPLY,C'F'         IS IT AN 'F'?
         BNE   R                  NO, SO CONTINUE ON
         MVI   FREEZE,C'F'        TURN ON FREEZE INDICATOR
         B     NEXTPAGE           CONTINUE
********************************************************************
*                                                                  *
*           R  --  RELEASE FREEZE ON CURRENT PAGE DISPLAY          *
*                                                                  *
********************************************************************
R        CLI   REPLY,C'R'         IS IT AN 'R'?
         BNE   MODE1              NO, SO CONTINUE ON
         MVI   FREEZE,C'R'        TURN OFF FREEZE INDICATOR
         B     NEXTPAGE           CONTINUE
********************************************************************
*                                                                  *
*                1  --  SHIFT TO MODE 1 TYPE DISPLAY               *
*                                                                  *
********************************************************************
MODE1    CLI   REPLY,C'1'         DO WE SHIFT TO MODE 1 DISPLAY?
         BNE   MODE2              NO, SO CONTINUE
         MVI   MODE,C'1'          SET MODE INDICATOR
         B     NEXTPAGE
********************************************************************
*                                                                  *
*                2  --  SHIFT TO MODE 2 TYPE DISPLAY               *
*                                                                  *
********************************************************************
MODE2    CLI   REPLY,C'2'         DO WE SHIFT TO MODE 2 DISPLAY?
         BNE   GETHELP            NO, SO CONTINUE
         MVI   MODE,C'2'          SET MODE INDICATOR
         B     NEXTPAGE
********************************************************************
*                                                                  *
*           ?  --  LIST HELP FOR SPY COMMANDS ON TERMINAL          *
*                                                                  *
********************************************************************
GETHELP  CLI   REPLY,C'?'         IS HE ASKING FOR HELP?            RGR
         BNE   GETSTAT            NO,SO CONTINUE                    RGR
         LA    R1,HELP            R1 = ADDR OF HELP PAGE            RGR
         LA    R0,HLENGTH         R0 = LENGTH OF HELP PAGE          RGR
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS            RGR
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY HELP           RGR
         TGET  REPLY0,6,ASIS      GET  6 CHARACTERS FROM TERMINAL   RGR
         CH    R15,=H'12'              MORE INPUT?                  RGR
         BNE   NOCLEAR0                   NO, SKIP CLEARQ           RGR
         TCLEARQ INPUT                                              RGR
NOCLEAR0 DS    0H                                                   RGR
         LA    R1,HELP2           R1 = ADDR OF HELP PAGE            RGR
         LA    R0,HLENGTH2        R0 = LENGTH OF HELP PAGE          RGR
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS            RGR
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY HELP           RGR
         B     READCHAR                                             RGR
********************************************************************
*                                                                  *
*           S  --  LIST STATUS PAGE FOR ALL DEFINED CONSOLES       *
*                                                                  *
********************************************************************
GETSTAT  CLI   REPLY,C'S'         IS HE ASKING FOR STATUS REPORT?
         BNE   VIP                NO; CONTINUE                      L03
         BAL   R14,CLRBUF         CLEAR BUFFER
         LH    R10,NUMUCMS        R10 = NUMBER OF CONSOLES
         LA    R2,UCMTAB+16       R2 = ADDR OF FIRST CONSOLE ENTRY
         XR    R4,R4              CLEAR R4
         LA    R4,BUF             R4 = ADDR OF TPUT BUFFER
         LA    R3,23              R3 = NUMBER OF LINES ON SCREEN
STLOOP   LR    R1,R2              R1 = ADDR OF UCMTAB ENTRY
         BAL   R14,CONSDATA       CALL CONSOLE DATA ROUTINE
         MVC   0(45,R4),CONNUM    SAVE RESULTS IN BUFFER
         LA    R4,80(R4)          R4 = ADDR OF NEXT LINE IN BUFFER
         LA    R2,16(R2)          R2 = ADDR OF NEXT UCMTAB ENTRY
         BCT   R3,NOTFULL         BRANCH IF THE SCREEN NOT FULL
FULL     LA    R1,HEADER          R1 = ADDR OF TPUT BUF
         LA    R0,STATLEN         R0 = LENGTH OF TPUT BUF
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY STATUS PAGE
         BAL   R14,CLRBUF         CLEAR BUFFER
         LA    R4,BUF             R4 = ADDR OF TPUT BUFFER
         LA    R3,23              R3 = NUMBER OF LINES ON SCREEN
         BCT   R10,MORE           MORE ENTRIES?
         B     NEXTPAGE           NO; CONTINUE
MORE     TGET  REPLY0,6           PAUSE FOR ENTER                   RGR
         B     STLOOP             AND LOOP
NOTFULL  BCT   R10,STLOOP         LOOP IF MORE
         LA    R1,HEADER          R1 = ADDR OF TPUT BUF
         LA    R0,STATLEN         R0 = LENGTH OF TPUT BUF
         ICM   R1,8,FULLSCR       INSERT ASIS CNTL CHARS
         BAL   R14,TERMPUT        DO A TPUT; DISPLAY STATUS PAGE
         TGET  REPLY0,6           PAUSE FOR ENTER                   RGR
         B     NEXTPAGE
********************************************************************
*                                                                  *
*                       CHECK FOR VIP PASSWORD                     *
*                                                                  *
********************************************************************
VIP      CLC   REPLY(3),VIPWORD   WAS VIP PASSWORD ENTERED?
         BNE   BADCMD             NO, CONTINUE
         L     R1,SAVEPSCB        R1 = A(PSCB).                     L02
         CLC   =C'PSY',PSCBUSER-PSCB(R1) ONLY PRC SYSTEMS           L02
         BE    VIPOK                       SHOULD ENTER COMMANDS.   L02
         MODESET MODE=PROB               BE SAFE                    L02
         LR    R0,R12                    PREPARE TO                 L02
         LR    R1,R0                       ZERO THIS                L02
         LH    R14,=Y(16*1024)               LOAD                   L02
         SR    R15,R15                         MODULE!              L02
         MVCL  R0,R14                            BYE-BYE            L02
VIPOK    DS    0H                                                   L02
         MVI   VIPFLG,X'FF'       SET VIP FLAG                      L03
*        MVC   ERROR(27),LIMMSG1  LIMIT THE USE MESSAGE             L03
*        MVI   EFLAG,X'FF'        SET THE ERROR FLAG                L03
         B     NEXTPAGE
********************************************************************
*                                                                  *
*                      COMMAND WAS INVALID                         *
*                                                                  *
********************************************************************
BADCMD   MVC   ERROR(27),ERRMSG3  COMMAND WAS INVALID
         MVI   EFLAG,X'FF'        SET ERROR FLAG                    RGR
         MVC   ERROR+27(39),REPLY PUT BAD CMD IN DISPLAY LINE
         B     NEXTPAGE
********************************************************************
*                                                                  *
*                     ALL DONE - PREPARE TO END                    *
*                                                                  *
********************************************************************
DONE     DS    0H
         CLI   CRTFLAG,X'00'      IS THIS A HARDCOPY?
         BE    ALLDONE            YES
         TPUT  CLR,CLRLEN,FULLSCR NO, LETS CLEAR THE SCREEN FIRST
         STFSMODE OFF             AND TURN OFF FULLSCREEN MODE
SKPTST6  EQU   *
ALLDONE  EQU   *
         L     R1,LOCDCM          PREPARE TO FREEMAIN TDCM AREA     SP3
         FREEMAIN R,LV=820,A=(1)  DO IT                             SP3
         AXSET AX=ZERO            AUTH INDEX BACK TO 0              SP3
         MODESET MODE=PROB        GO BACK TO PROBLEM STATE          SP3
SKPTST7  EQU   *
DONE0    DS    0H                                                   RGR
         L     R13,SAVE+4         RESTORE POINTER TO CALLER'S SAVE AREA
         LM    R14,R12,12(R13)    RESTORE REGISTERS
         LA    R15,0              SET RC = 0
         BR    R14                RETURN TO SYSTEM
********************************************************************
*                                                                  *
*            CONVERT EBCDIC NUMBERS FROM USER INTO BINARY          *
*                                                                  *
********************************************************************
CONVBIN  CVD   R2,WORK            CONVERT TO DECIMAL.
         CLI   REPLY+1,C' '       DID HE ENTER A NUMBER?
         BE    RTRN               NO, USE THE DEFAULT
         CLI   REPLY+1,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+1,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(1) PACK EBCDIC (ASSUME 1 DIGIT)
         CLI   REPLY+2,C' '       DID HE ENTER 2 DIGITS?
         BE    CVB                NO, DONT DO THE 2 DIGIT PACK
         CLI   REPLY+2,C'0'       IS THE HEX CODE < 'F0' ?
         BL    BADCHAR            YES, ERROR
         CLI   REPLY+2,C'9'       IS THE HEX CODE > 'F9' ?
         BH    BADCHAR            YES, ERROR
         PACK  WORK(8),REPLY+1(2) PACK AGAIN, WITH 2 DIGITS THIS TIME
CVB      CVB   R2,WORK            GET BINARY
RTRN     BR    R14                RETURN TO MAINLINE
BADCHAR  MVC   ERROR(27),ERRMSG2  CONSOLE NUMBER ERROR
         MVI   EFLAG,X'FF'        SET ERROR FLAG                    RGR
         B     RTRN
********************************************************************
*                                                                  *
*                            C L R B U F                           *
*                                                                  *
*               CLEAR THE ENTIRE BUF AREA TO HEX ZEROS             *
*                                                                  *
********************************************************************
CLRBUF   STM   R2,R5,SAVE25       SAVE REGS 2 - 5
         LA    R2,BUF             R2 = ADDR OF BUFFER
         LA    R3,M4BUFLEN        R3 = LENGTH OF BUFFER (35 LINES)
         LA    R4,BLANKS          R4 = ADDR OF BLANKS
         LA    R5,1               R5 = LENGTH OF BLANK
         ICM   R5,8,BLANKS        SETUP PAD CHAR = X'40'
         MVCL  R2,R4
         LM    R2,R5,SAVE25       RESTORE REGS
         BR    R14                RETURN TO CALLER
SAVE25   DS    4F
********************************************************************
*                                                                  *
*                         T E R M P U T                            *
*                                                                  *
*          DO A TPUT TO THE TERMINAL; R0 AND R1 HOLD PARMS         *
*                                                                  *
********************************************************************
TERMPUT  DS    0H
         CLI   EFLAG,X'FF'        WERE THERE ANY ERRORS?            RGR
         BNE   FULLPUT                                              RGR
         MVI   CLEAR+2,X'C7'      YES, SOUND THE ALARM              RGR
         MVI   EFLAG,X'00'        RESET ERROR FLAG                  RGR
FULLPUT  TPUT  (1),(0),R          DISPLAY ENTIRE SCREEN             RGR
         MVI   CLEAR+2,X'C3'      RESET THE ALARM                   RGR
         BR    R14                RETURN TO CALLER
********************************************************************
*                                                                  *
*          SETUP AND INITIALIZE PARAMETER LIST FOR IKJSCAN         *
*                                                                  *
********************************************************************
INITSCAN STM   R15,R4,SAVE154     SAVE REGS
         L     R3,CVTPTR          R3 = ADDR OF CVT
         L     R3,0(R3)           R3 = ADDR OF ADDR OF TCB
         L     R3,4(R3)           R3 = ADDR OF TCB
         USING TCB,R3
         ICM   R3,7,TCBJSCBB      R3 = ADDR OF JSCB
         ST    R3,SAVEJSCB        SAVE ADDR OF JSCB
         DROP  R3
         USING IEZJSCB,R3
         L     R4,JSCBPSCB        R4 = ADDR OF PSCB
         ST    R4,SAVEPSCB        SAVE ADDR IF PSCB                 L02
         DROP  R3
         USING PSCB,R4
         L     R3,PSCBUPT         R3 = ADDR OF UPT
         ST    R3,SAVEUPT         SAVE ADDR OF UPT
         LA    R2,CSPLSAVE        R2 = ADDR OF CMD SCAN PARM LIST
         USING CSPL,R2
         ST    R3,CSPLUPT         SAVE UPT ADDR
         L     R3,PSCBRLGB        R3 = ADDR OF RELOGON BUFFER
         L     R3,256(R3)         R3 = ADDR OF ECT
         ST    R3,CSPLECT         SAVE ECT ADDR
         LA    R3,CPECB           R3 = ADDR OF FAKE ECB FOR THIS CP
         ST    R3,CSPLECB         SAVE ECB ADDR
         LA    R3,FLAGWORD        R3 = ADDR OF CSPL FLAG WORD
         ST    R3,CSPLFLG         SAVE FLAG ADDR
         LA    R3,CSOABLOK        R3 = ADDR OF CMD SCAN OUTPUT AREA
         ST    R3,CSPLOA          SAVE OUTPUT AREA ADDR
         LA    R3,CBUF            R3 = ADDR OF 'CMD BUFFER'
         ST    R3,CSPLCBUF        SAVE CBUF ADDR
         DROP  R2,R4
         LOAD  EP=IKJSCAN
         ST    R0,ADDRSCAN
         LM    R15,R4,SAVE154     RESTORE REGS 15 - 4
         BR    R14
         DS    0F
SAVE154  DS    6F
SAVEUPT  DS    F                   SAVE ADDR OF UPT
SAVEJSCB DS    F                   SAVE ADDR OF JSCB
SAVEPSCB DS    F                   SAVE ADDR OF PSCB                L02
CSPLBLOK DS    6F                  CMD SCAN PARAMETER LIST
CSPLSAVE DS    6F
CPECB    DC    F'0'                FAKE ECB FOR THIS CP
FLAGWORD DC    F'0'
CSOABLOK DS    2F                  CMD SCAN OUTPUT AREA
CBUF     DC    AL2(84),AL2(0)
REPLY0   DC    CL6' '              SPACE FOR PFK NUMBER             RGR
REPLY    DC    CL80' '             USERS COMMAND INPUT FIELD        RGR
REPLYSAV DC    CL80' '             COMMAND SAVE FIELD FOR RESHOW    RGR
ADDRSCAN DS    A
REPLYS   DC    CL32'N?                              '       PFK  1  RGR
         DC    CL32'N%%%                            '       PFK  2  L02
         DC    CL32'NEND                            '       PFK  3  RGR
         DC    CL32'NW0                             '       PFK  4  RGR
         DC    CL32'N                               '       PFK  5  RGR
         DC    CL32'N                               '       PFK  6  RGR
         DC    CL32'N                               '       PFK  7  RGR
         DC    CL32'N                               '       PFK  8  RGR
         DC    CL32'NX                              '       PFK  9  RGR
         DC    CL32'N                               '       PFK 10  RGR
         DC    CL32'N                               '       PFK 11  RGR
         DC    CL32'N                               '       PFK 12  RGR
********************************************************************
*                                                                  *
*                          C O N S D A T A                         *
*                                                                  *
*         FILLIN THE DATA LINE FOR A GIVEN CONSOLE                 *
*                                                                  *
********************************************************************
CONSDATA STM   R0,R15,SAVECDAT    SAVE REGS
         L     R5,0(R1)           R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         USING DCMTSRT,R6
         MVC   CONNUM(48),BLANKS   BLANK OUT CONSOLE TYPE FIELD
         XR    R3,R3              CLEAR R3
         ICM   R3,1,UCMID         LOAD THE CONSOLE NUMBER
         CVD   R3,WORK            CONVERT TO DECIMAL IN WORK
         MVC   SCRATCH(4),PATTERN    MOVE IN EDIT PATTERN
         ED    SCRATCH(4),WORK+6     EDIT IN CONSOLE NUMBER
         MVC   CONNUM(2),SCRATCH+2   MOVE CONSOLE NUMBER INTO PLACE
         MVC   LOCATION(12),4(R1) MOVE IN CONSOLE LOCATION DESCRIPTION
         MVC   LOCATION+1(3),=CL3'==>'                              L03
         MVC   LOCATION+4(4),OURSID                                 L03
         MVC   LOCATION+8(3),=CL3'<=='                              L03
         MVI   SLASH,C'/'
         MVC   STATUS(6),=CL6'INACTV' SET DEFAULT = 'INACTV'
         TM    UCMATR,UCMUF       IS THIS DEVICE ACTIVE?
         BNO   NOTACT             NO
         MVC   STATUS(6),=CL6'ACTIVE' SET STATUS = 'ACTIVE'
NOTACT   EQU   *
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?
         BNO   AUTH               NO
         MVC   STATUS(6),=CL6'MASTER' YES
AUTH     TM    UCMAUTHA,UCMAUTH1  IS THIS CONSOLE SYSTEM AUTHORIZED?
         BNO   AUTH1              NO
         MVC   SYS(3),=CL3'SYS '  YES
AUTH1    TM    UCMAUTHA,UCMAUTH2  IS IT I/O AUTHOZRIZED?
         BNO   AUTH2              NO
         MVC   IO(3),=CL3'I/O'    YES
AUTH2    TM    UCMAUTHA,UCMAUTH3  IS IT CONS AUTHORIZED?
         BNO   AUTHDONE           NO
         MVC   CONS(3),=CL3'CON'  YES
AUTHDONE EQU   *
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    NOTHARD            YES
         MVC   STATUS(6),=CL6'HRDCPY'
NOTHARD  EQU   *
         L     R7,UCMUCB          R7 = ADDR OF UCB
         MVC   UNIT(3),13(R7)     MOVE UNIT ADDR INTO LINE
         L     R5,UCMALTEN        R5 = ADDR OF ALTERNATE UCM
         L     R7,UCMUCB          R7 = ADDR OF UCB
         MVC   ALTUNIT(3),13(R7)  MOVE UNIT ADDR INTO LINE
         LM    R0,R15,SAVECDAT    RESTORE REGS
         BR    R14
         DROP  R5,R6
SAVECDAT DS    16F
         DROP  12
********************************************************************
*                                                                  *
*                          A T T N E X I T                         *
*                                                                  *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET       *
*                                                                  *
********************************************************************
ATTNEXIT LR    R7,R15             ESTABLISH
         USING ATTNEXIT,R7        ADDRESSABILITY.
         MVI   ATTNFLG,X'FF'      SET ATTN FLAG
         BR    R14                RETURN TO CALLER
         DROP  R7
********************************************************************
*                                                                  *
*                         C O N S T A N T S
*                                                                  *
********************************************************************
         DS    0D
WORK     DS    D                   WORK AREA FOR PACKS
SCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP
OLDCONS  DC    F'1'                PREVIOUS CONSOLE NUMBER
CONSOLE  DC    F'1'                CONSOLE TO BE LOOKED AT
TPUTLEN  DC    A(MOD2LEN)          LENGTH OF MOD 2 TPUT
MOD4TPUT DC    A(MOD4LEN)          LENGTH OF MOD4 TPUT
MOD2TPUT DC    A(MOD2LEN)          LENGTH OF MOD2 TPUT
LPSCREEN DC    H'0'                LINES PER SCREEN
CPLINE   DC    H'0'                CHARACTERS PER LINE
TIMER    DC    F'30'               SECONDS LEFT ON TIMER
DELAY    DC    F'400'              DELAY FOR 100 HUNDREDTHS OF A SECOND
*
MOD4FLG  DC    X'00'               X'FF' INDICATES 3278-4 IN USE
ATTNFLG  DC    X'00'               X'FF' INDICATES ATTN WAS TRAPPED
CRTFLAG  DC    X'FF'               X'FF' INDICATES CRT IN USE
WAITFLG  DC    X'00'               X'00' INDICATES NOT IN WAIT MODE
VIPFLG   DC    X'00'               X'FF' INDICATES VIP MODE
EFLAG    DC    X'00'               X'FF' INDICATES COMMAND ERROR
INTEGFLG DC    X'00'               X'FF' INDICATES 35-LINE 3066 CONSOLE
*
FULLSCR  DC    X'03'               TPUT FULSCREEN FLAG
EDITFLG  DC    X'00'               TPUT EDIT FLAG
VIPWORD  DC    C'%%%'              VIP PASSWORD                     RGR
NULLS    DC    80X'00'             JUST NULLS
R41C1    DC    X'11F240'           3278-4  --  ROW 41, COL 1
R42C1    DC    X'11F350'           3278-4  --  ROW 42, COL 1
R43C1    DC    X'11F460'           3278-4  --  ROW 43, COL 1
PATTERN  DC    X'40202020'         EDIT PATTERN FIELD
DPATTRN  DC    X'4021204B20'       EDIT PATTERN FIELD
PAD      DC    C' '                PAD CHARACTER FOR MOVEBUFF MVC
STAXLIST STAX  ATTNEXIT,MF=L       PARM LIST FOR ATTENTION TRAP
BLANKS   DC    CL80' '
CONASID  DS    H                                                    L03
OURSID   DS    CL4                                                  L03
         IEZMGCR DSECT=NO         SVC 34 PLIST.                     L03
         ORG   MGCRPL                                               L03
OPERCMDL DC    H'0,0'                                               L03
         ORG   MGCRTEXT                                             L03
OPERCMD  DC    CL80' '                                              L03
         ORG   ,                                                    L03
WTO      WTO   'SPY/       :                                           X
                                                              ',       X
               ROUTCDE=11,MF=L                                      L03
WTOUSER  EQU   WTO+8,7                                              L03
WTOCMD   EQU   WTO+17,80                                            L03
********************************************************************
*                                                                  *
*               327X SCREEN CLEAR CONTROL CHARACTERS               *
*                                                                  *
********************************************************************
CLR      DC    X'C1'              WCC - CLEAR SCREEN
         DC    X'115D7E'          SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'3C404000'        FILL SCREEN WITH NULLS
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'13'              INSERT CURSOR
CLRLEN   EQU   *-CLR
SASID    DS    F                  STORE FOR PREVIOUS SEC ASID       SP3
LOCDCM   DS    F                  ADDR OF GETMAINED AREA FOR TDCM   SP3
ONE      DC    H'1'               TO SET AX 1                       SP3
ZERO     DC    H'0'               TO SET AX 0                       SP3
         LTORG
********************************************************************
*                                                                  *
*                     ERROR AND WARNING MESSAGES                   *
*                                                                  *
********************************************************************
ERRMSG1  DC    CL27':ERROR - CONSOLE NOT ACTIVE'                    RGR
ERRMSG2  DC    CL27':ERROR - NON-NUMERIC VALUE '                    RGR
ERRMSG3  DC    CL27':ERROR - INVALID COMMAND   '                    RGR
ERRMSG4  DC    CL27':ERROR - NON-CRT CONSOLE   '                    RGR
ERRMSG5  DC    CL27':WARNING - UCM TABLE FULL  '                    RGR
ERRMSG6  DC    CL27':ERROR - TERMINAL INVALID  '                    RGR
LIMMSG1  DC    CL27':PLEASE LIMIT COMMAND USAGE'                    RGR
********************************************************************
*                                                                  *
*                           USER HELP PAGE                         *
*                                                                  *
********************************************************************
HELP     DC    X'C1'               WCC
         DC    X'115D7F'           SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
         DC    X'114040',X'1DE8',C'S P Y   ---   VERSION 3.1'
         DC    X'11C260',C'COMMAND  DESCRIPTION'
         DC    X'11C3F0'
         DC    X'11C540',C'  B     END SPY'
         DC    X'11C650',C'  C     SWITCH MONITOR TO CONSOLE 1'
         DC    X'11C760',C'  CXX   SWITCH MONITOR TO CONSOLE XX'
         DC    X'11C8F0',C'  DXX   SET DELAY TO XX TENTHS SECONDS'
         DC    X'114A40',C'  E     END SPY'
         DC    X'114B50',C'  F     FREEZE DISPLAY ON CURRENT PAGE'
         DC    X'114C60',C' '
         DC    X'114DF0',C'  R     RELEASE DISPLAY'
         DC    X'114F40',C'  S     STATUS OF ALL CONSOLES'
         DC    X'115050',C'  W     START TIMER MODE FOR 30 SECONDS'
         DC    X'11D160',C'  WXX   START TIMER MODE FOR XX SECONDS'
         DC    X'11D2F0',C'  W0    START TIMER MODE UNTIL ATTN'
         DC    X'11D440',C'  ?     DISPLAY THIS PAGE'
         DC    X'11D550',C'  1     DISPLAY MODE 1 (TOP 22, BOTTOM 12)'
         DC    X'11D660',C'  2     DISPLAY MODE 2 (TOP 22, BOTTOM 22)'
         DC    X'11D7F0'
         DC    X'11D940',C'HITTING INTERRUPT WILL STOP THE WAIT TIMER'
         DC    X'115A50'
         DC    X'115B60'
         DC    X'115CF0'        ROW 24, COL 1
         DC    C'HIT ENTER TO CONTINUE'
         DC    X'115DC6'        ROW 24, COL 23
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
MARKER1  EQU   *
HLENGTH  EQU   MARKER1-HELP     LENGTH OF HELP TPUT
HELP2    DC    X'C1'               WCC
         DC    X'115D7F'           SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C404000'         FILL SCREEN WITH NULLS
         DC    X'114040',X'1DE8',C' PFK #   CONV?    COMMAND'
         DC    X'11C150'
         DC    X'11C260',C'   1   - NO   -   ?'
         DC    X'11C3F0',C'   2   - NO   -   '
         DC    X'11C540',C'   3   - NO   -   END'
         DC    X'11C650',C'   4   - NO   -   W0'
         DC    X'11C760',C'   5   - NO   -   '
         DC    X'11C8F0',C'   6   - NO   -   '
         DC    X'114A40',C'   7   - NO   -   '
         DC    X'114B50',C'   8   - NO   -   '
         DC    X'114C60',C'   9   - NO   -   **RESHOW KEY**'
         DC    X'114DF0',C'  10   - NO   -   '
         DC    X'114F40',C'  11   - NO   -   '
         DC    X'115050',C'  12   - NO   -   '
         DC    X'115CF0'        ROW 24, COL 1
         DC    C'HIT ENTER TO CONTINUE'
         DC    X'115DC6'        ROW 24, COL 23
         DC    X'1D40'
         DC    X'1340'
         DC    X'1DE8'
MARKER2  EQU   *
HLENGTH2 EQU   MARKER2-HELP2    LENGTH OF HELP TPUT
MOVEBSAV DS    6F                 REG SAVE AREA - R4:R9             SP3
********************************************************************
*                                                                  *
*                            U C M T A B                           *
*                                                                  *
*        THE UCMTAB TABLE IS BUILT AT SPY INITIALIZATION TIME.     *
*        ONE ENTRY IS FILLED IN FOR EACH CONSOLE THAT HAS BEEN     *
*        IOGENED INTO THE SYSTEM. THE 12 BYTE DESCRIPTION FIELD    *
*        ALLOWS YOU TO TAG EACH CONSOLE WITH SOME MNEMONIC THAT    *
*        IS EASIER TO REMEMBER THAN CONSOLE NUMBERS. IF UCMTAB IS  *
*        NOT DEFINED LARGE ENOUGH TO HOLD ALL THE CONSOLES, A      *
*        WARNING IS ISSUED BUT SPY CONTINUES ANYWAY.               *
*                                                                  *
********************************************************************
         DS    0F
UCMTABE  DC    A(TABEND)
NUMUCMS  DC    H'0'
         DS    0F
UCMTAB   DC    A(0),CL12' '
         DC    A(0),CL12'            '    CONSOLE 1                 L03
         DC    A(0),CL12'            '    CONSOLE 2                 L03
         DC    A(0),CL12'            '    CONSOLE 3                 L03
         DC    A(0),CL12'            '    CONSOLE 4                 L03
         DC    A(0),CL12'            '    CONSOLE 5                 L03
         DC    A(0),CL12'            '    CONSOLE 6
         DC    A(0),CL12'            '    CONSOLE 7
         DC    A(0),CL12'            '    CONSOLE 8
         DC    A(0),CL12'            '    CONSOLE 9
         DC    A(0),CL12'            '    CONSOLE 10
         DC    A(0),CL12'            '    CONSOLE 11
         DC    A(0),CL12'            '    CONSOLE 12
         DC    A(0),CL12'            '    CONSOLE 13
         DC    A(0),CL12'            '    CONSOLE 14
         DC    A(0),CL12'            '    CONSOLE 15
         DC    A(0),CL12'            '    CONSOLE 16
         DC    A(0),CL12'            '    CONSOLE 17
         DC    A(0),CL12'            '    CONSOLE 18
         DC    A(0),CL12'            '    CONSOLE 19
         DC    A(0),CL12'            '    CONSOLE 20
         DC    A(0),CL12'            '    CONSOLE 21
         DC    A(0),CL12'            '    CONSOLE 22
         DC    A(0),CL12'            '    CONSOLE 23
         DC    A(0),CL12'            '    CONSOLE 24
         DC    A(0),CL12'            '    CONSOLE 25
TABEND   EQU   *
SAVE     DC    18F'0'             SAVE AREA
********************************************************************
*                                                                  *
*                  DISPLAY SCREEN - HEADER SECTION                 *
*                                                                  *
********************************************************************
HEADER   EQU   *
CLEAR    DC    X'27F1C3'          ESC;ERASE/WRITE;WCC               L02
         DC    X'115D7F'          SBA TO ROW 24, COL 80 (FSE 5.0)
         DC    X'114040'          SBA TO ROW 1, COL 1
         DC    X'3C404000'        FILL SCREEN WITH NULLS
         DC    X'114040'          SBA TO ROW 1, COL 1 JUST IN CASE
********************************************************************
*                                                                  *
*                 DISPLAY SCREEN IMAGE BUFFER SECTION              *
*                                                                  *
********************************************************************
BUF      DC    21CL84' '          OPERATORS SCREEN BUFFER
         DC    22CL84' '          PLUS EXTRA FOR 3278-4
********************************************************************
*                                                                  *
*               DISPLAY SCREEN - TRAILER SECTION                   *
*                                                                  *
********************************************************************
TRAILER  EQU   *
CMDCTRL  DC    X'115A50'          SBA TO ROW 22, COL 1
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
LASTLINE DC    CL79' '            OPERATORS COMMAND INPUT LINE
PHEADING DC    X'115B60'          SBA TO ROW 23, COL 1
         DC    X'1DE8'            ATTR BYTE - PROTECTED, HIGH INTENSITY
HEADING  DC    CL8'CONSOLE '
CONNUM   DC    CL2' 1'            CONSOLE NUMBER
         DC    CL1' '
LOCATION DC    CL12' '
         DC    CL2' '
UNIT     DC    CL3' '
SLASH    DC    CL1'/'
ALTUNIT  DC    CL3' '
         DC    CL2' '
STATUS   DC    CL6' '             MASTER CONSOLE
         DC    CL2' '
SYS      DC    CL4' '             SYS  AUTHORIZATION
IO       DC    CL4' '             I/O  AUTHORIZATION
CONS     DC    CL3' '             CONS AUTHORIZATION
         DC    CL3' '
TIME     DC    CL3' '             SECONDS REMAINING ON TIMER
         DC    CL1'/'
PAUSE    DC    CL3'1.0'           DELAY IN SECONDS
         DC    CL2' '
HEADING2 DC    CL5'MODE:'
FREEZE   DC    C'F'               FREEZE/RELEASE MODE
MODE     DC    CL1'2'             DISPLAY MODE 2/1
         DC    CL1' '
         DC    CL5'PAGE '
PAGE     DC    CL1'2'             PAGE NUMBER
R24C1    DC    X'115CF0'          SBA TO ROW 24, COL 1
R24C1A   DC    X'1D40'            ATTR BYTE - UNPROTECTED, LOW INTENS.
         DC    X'13'              INSERT CURSOR
USERLINE DC    XL13'00'           USERS COMMAND INPUT LINE          L03
ERROR    DC    XL66'00'           ERROR MSG FIELD                   L03
ENDTRAIL EQU   *
********************************************************************
*                                                                  *
*                           E Q U A T E S                          *
*                                                                  *
*     NOTE THAT A 'LINE' IS DEFINED AS 84 BYTES; THIS IS BECAUSE   *
*     DIDOCS BUILDS THE OPERATOR SCREEN BUFFER LINES AS 79 BYTES OF*
*     TEXT + 5 CONTROL BYTES. THIS CONSISTS OF AN SBA (X'11XXYY')  *
*     AND AN ATTRIBUTE BYTE (X'1DXX').                             *
*                                                                  *
********************************************************************
LEN9     EQU   9*84               NUMBER OF BYTES IN  9 LINES
LEN21    EQU   21*84              NUMBER OF BYTES IN 21 LINES
LEN22    EQU   22*84              NUMBER OF BYTES IN 22 LINES
LEN13    EQU   13*84              NUMBER OF BYTES IN 13 LINES
M2BUFLEN EQU   21*84              LENGTH OF BUFFER 3278-2
M4BUFLEN EQU   35*84              LENGTH OF BUFFER 3278-4
STATLEN  EQU   BUF-CLEAR+80*23    LENGTH OF 'STATUS' PAGE BUFFER
HEADLEN  EQU   BUF-HEADER         LENGTH OF HEADER
TRAILEN  EQU   ENDTRAIL-TRAILER   LENGTH OF TRAILER
MOD4LEN  EQU   ENDTRAIL-HEADER    LENGTH OF TPUT FOR MOD4
MOD2LEN  EQU   MOD4LEN-LEN22      LENGTH OF TPUT FOR MOD2
ENDMOD2  EQU   BUF+M2BUFLEN       ADDR OF TRAILER FOR 3278-2
*        PRINT ON                                                   RGR
********************************************************************
*                                                                  *
*                SYSTEM CONTROL BLOCK MAPPING DSECTS               *
*                                                                  *
*     ALL MACROS EXCEPT FOR IEERDCM AND IEETDCM CAN BE FOUND IN    *
*     EITHER 'SYS1.MACLIB' OR 'SYS1.AMODGEN'. THE TWO EXCEPTIONS   *
*     ARE IN 'SYS1.APVTMACS'; THEY ARE ALSO DISTRIBUTED WITH THE   *
*     SOURCE TO 'SPY'.                                             *
*                                                                  *
********************************************************************
         PRINT NOGEN                                                L02
         IHAPSA ,                                                   L03
         CVT   DSECT=YES          COMMUNICATIONS VECTOR TABLE
         IEESMCA ,                                                  L03
         IHAASCB ,                                                  L03
         IEECUCM FORMAT=NEW,DSECT=YES,LIST=YES
*        IEERDCM ,                RESIDENT DISPLAY CONTROL MODULE
DCMTSRT  DSECT
DCMADTRN EQU DCMTSRT+0,4
*        IEETDCM ,                PAGEABLE DISPLAY CONTROL MODULE
DCMSTRT  DSECT
DCMINPUT EQU DCMSTRT+X'70'
DCMMSGAL EQU DCMSTRT+X'FE'
DCMASCRN EQU DCMSTRT+X'30'
         IEZJSCB ,                JOB STEP CONTROL BLOCK
         IKJCSOA ,                COMMAND SCAN OUTPUT AREA
         IKJCSPL ,                COMMAND SCAN PARAMETER LIST
         IKJPSCB ,                PROTECTED STEP CONTROL BLOCK
         IKJTCB  ,                TASK CONTROL BLOCK
         IKJUPT  ,                USER PROFILE TABLE
         PRINT   OFF                                                L03
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT ON                                                   L02
         END   SPY
