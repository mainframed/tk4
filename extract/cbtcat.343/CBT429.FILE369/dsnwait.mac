PRC      TITLE 'DSNWAIT - WTO EXIT TO INFORM TSO USER OF DSN WAIT.'
********************************************************************
*                                                                  *
* NAME - DSNWAIT - WTO EXIT TO INFORM A TSO USER THAT JOB IS       *
*   WAITING FOR A DATASET.                                         *
*                                                                  *
* DESCRIPTION -                                                    *
*   WE GET CONTROL UPON ISSUANCE OF THE IEF099I WTO.  WE ISSUE     *
*   AN OPERATOR SEND COMMAND TO INFORM THE TSO USER THAT HIS BATCH *
*   JOB IS WAITING FOR SOME DATASETS.  THE INTENT HERE IS TO ALERT *
*   THE PERSON WHO CAN DO SOMETHING ABOUT THE SITUATION, SUCH AS   *
*   FREE THE DATASETS.  WE FIRST MAKE SURE THAT MSG IEF099I        *
*   WAS ISSUED, THAT ACF2 IS ALIVE AND WELL, THAT WE'RE A JOB,     *
*   AND THAT THE RESULTS OF OUR GQSCAN REQUEST FOR SYSDSN CONFLICTS*
*   IS COOL. THEN WE ISSUE A SEND COMMAND FOR THE FIRST THREE      *
*   CONFLICTS THAT MEET THE FOLLOWING CONDITIONS:                  *
*     1). 1 TASK HOLDS THE RESOURCE.                               *
*     2). 1 TASK WAITS FOR THE RESOURCE.                           *
*     3). WE ARE THE TASK THE WAITS FOR THE RESOURCE.              *
*     4). IT IS A TSO USER THAT HOLDS THE RESOURCE.                *
*     5). THE ACF2 LIDS FOR THE HOLDER AND WAITER ARE THE SAME.    *
*   WHILE IT IS ACKNOWLEDGED THAT THESE CRITERIA WILL ELIMINATE    *
*   SOME CANDIDATES FROM CONSIDERATION, IT IS HOPED THAT THIS EXIT *
*   WILL OTHERWISE PROVE USEFUL FOR MANY SITUATIONS.               *
*                                                                  *
* NOTE - WE MUST BE IN AN APF-AUTHORIZED LINKLIST LIBRARY.         *
*        THE ACF2 SECURITY SYSTEM IS REQUIRED BY THIS EXIT.        *
*                                                                  *
* TO USE -                                                         *
*   SPECIFY IN AN MPFLSTXX MEMBER OF PARMLIB:                      *
*     IEF099I,SUP(NO),USEREXIT(DSNWAIT)                            *
*                                                                  *
* ON ENTRY -                                                       *
*   R1 = A(CTXT - COMMTASK EXIT PARMLIST).                         *
*   STD LINKAGE.                                                   *
*                                                                  *
* ON EXIT -                                                        *
*   R15 = NOT USED.                                                *
*                                                                  *
* LOG -                                                            *
*     DATE   WHO LV    CHANGE                                      *
*   07/XX/86 PTW L01 IMPLEMENTATION                                *
*   09/20/88 PTW L02 FIX BROKEN-IN-GRS ENIRONMENT BUG.             *
*                                                                  *L02
********************************************************************
         LCLC  &CSECT
&CSECT   SETC  'DSNWAIT'
&CSECT   CSECT ,
&CSECT   AMODE 31
&CSECT   RMODE ANY
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         PRINT NOGEN
         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME
         LR    R12,R15            ESTABLISH BASE.
         USING &CSECT,R12         TELL ASSEMBLER.
         L     R11,0(,R1)          R11 = A(CTXT - PARMLIST).
         USING CTXT,R11           TELL ASSEMBLER.
         L     R10,CTXTTXPJ       R10 = A(CTXTATTR - TEXT).
         USING CTXTATTR,R10       TELL ASSEMBLER.
         CLC   =C'IEF099I ',CMSGID ENSURE WE ONLY DEAL WITH MSGIEF099I.
         BNE   QUIKEXIT
         GETMAIN RU,LV=DYNLEN,SP=230,LOC=BELOW MUST BE BELOW FOR SVC34.
         LR    R2,R13             SAVE AREA
         LR    R13,R1             SAVE AREA
         USING DYNAMIC,R13        TELL ASSEMBLER.
         LA    R0,DYNAMIC         ZERO
         LA    R1,DYNLEN            DYNAMIC
         LR    R14,R0                 STORAGE.
         SLR   R15,R15
         MVCL  R0,R14             DO IT.
         ST    R2,4(,R13)         BACK CHAIN.
         ST    R13,8(,R2)         FORWARD CHAIN.
         MVC   GQSCAN(GQSCANL),XGQSCAN
********************************************************************
*                                                                  *
*        M A I N L I N E   P R O C E S S I N G                     *
*                                                                  *
********************************************************************
         ACFINCVT R2,NONE=NOACF   IF ACF2 NOT ACTIVE, LEAVE.
         L     R2,ACCASVT-ACCVT(,R2) R2 = A(ACF2 ASVT).
         ST    R2,ASVTADDR        SAVE THIS ADDRESS.
         L     R3,PSAAOLD-P       R3 = A(OUR ASCB).
         LH    R3,ASCBASID-ASCB(,R3) R3 = OUR ASID.
         STH   R3,OURASID         SAVE OUR ASID.
         MH    R3,=Y(ASVENLEN)    FIND OUR ACF2 ASVT ENTRY.
         ALR   R2,R3              R2 = A(OUR ASVT ENTRY).
         ST    R2,OURASVTE        SAVE THIS ADDRESS.
         CLC   =C'JOB',ASVJID-ACFASVT(R2) IF WE'RE NOT A JOB,
         BNE   CANTUSE                      LEAVE.
         GQSCAN AREA=(WRKRIB,WRKRIBL),RESNAME==CL8'SYSDSN',            X
               MF=(E,GQSCAN)      FIND ALL WAITED-ON DSN RESOURCES.
         LTR   R15,R15            IF A BAD RC,
         BNZ   BADSCAN              LEAVE.
         LR    R6,R1              R1 = # RIBS RETURNED.
         LA    R9,WRKRIB          R9 = A(1ST RIB).
         USING RIB,R9
DORIB    DS    0H                 LOOP THRU RIBS.
         CLC   =H'1',RIBNTO+2     IF MORE THAN 1 OWNER OF DSN,
         BNE   NEXTRIB              FORGET IT.
         CLC   =H'2',RIBNRIBE+2   IF MORE THAN 1 OWNER + 1 WAITING,
         BL    NEXTRIB              FORGET IT.
         LH    R2,RIBVLEN         R2 = L(VARIABLE PORTION OF RIB).
         LA    R8,RIBEND+(RIBEEND-RIBE)(R2) R8 = A(WAITING RIBE).
         USING RIBE,R8
         CLC   OURASID,RIBEASID   IF THE WAITING RIB IS NOT US,
         BNE   NEXTRIB              FORGET IT.
         L     R3,CVTPTR          R3 = A(CVT).                      L02
         CLC   RIBESYSN,CVTSNAME-CVT(R3) MAKE SURE SYSNAMES         L02
         BNE   NEXTRIB            MATCH.                            L02
         LH    R2,RIBVLEN         R2 = L(VARIABLE PORTION OF RIB).
         LA    R8,RIBEND(R2)      R8 = A(OWNING RIBE).
         L     R3,CVTPTR          R3 = A(CVT).                      L02
         CLC   RIBESYSN,CVTSNAME-CVT(R3) MAKE SURE OWNER            L02
         BNE   NEXTRIB            IS RUNNING ON OUR SYSTEM.         L02
         L     R2,ASVTADDR        R2 = A(ACF2 ASVT).
         LH    R3,RIBEASID        R3 = OWNING ASID.
         STH   R3,TSOASID         SAVE OWING ASID.
         MH    R3,=Y(ASVENLEN)    FIND OWNING ACF2 ASVT ENTRY.
         ALR   R2,R3              R2 = A(OWING ASVT ENTRY).
         ST    R2,TSOASVTE        SAVE THIS ADDRESS.
         CLC   =C'TSU',ASVJID-ACFASVT(R2) IF OWNER NOT A TSO SESSION,
         BNE   NEXTRIB              FORGET IT.
         L     R3,OURASVTE        R3 = A(OUR ASVT ENTRY).
         CLC   ASVLID-ACFASVT(,R2),ASVLID-ACFASVT(R3) IF ACF2 LIDS ^=,
         BNE   NEXTRIB            FORGET IT.
         XC    MGCR(MGCRTEXT-MGCR),MGCR PREPARE TO ISSUE SEND COMMAND.
         MVI   MMSG,C' '          BLANK MSG AREA.
         MVC   MMSG+1(MMSGL-1),MMSG
         MVC   MMSGT1(L'MSGT1),MSGT1 "SEND '" TEXT.
         MVC   MMSGT1+L'MSGT1(L'CMSGT1),CMSGT1 FIXED TEXT FROM IEF099I.
         LA    R7,RIBEND          R7 = A(DSN).
         USING RIBVAR,R7
         SLR   R3,R3
         IC    R3,RIBRNMLN        R3 = L=DSN.
         BCTR  R3,0
         EX    R3,MOVEDSN         MOVE DSN TO MSG AREA.
         LA    R2,MMSGDSN+1(R3)   BUMP CURSOR.
         MVC   0(L'MSGT2,R2),MSGT2 "',USER=(" TEXT.
         LA    R2,L'MSGT2(,R2)    BUMP CURSOR.
         MVC   0(L'RIBEJBNM,R2),RIBEJBNM  MOVE TARGET TSO USERID.
         LA    R3,L'RIBEJBNM
FINDEND  CLI   0(R2),C' '         SCAN TO THE NEXT BLANK.
         BE    ENDTEXT
         LA    R2,1(,R2)
         BCT   R3,FINDEND
ENDTEXT  MVC   0(L'MSGT3,R2),MSGT3  "),NOW" TEXT.
         LA    R2,L'MSGT3(,R2)    CALCULATE LENGTH OF COMMAND.
         LA    R3,MGCR
         SLR   R2,R3
         STC   R2,MGCRLGTH        STORE LENGTH.
         SR    R0,R0              ZERO 0.
         MGCR  MGCR               ISSUE SVC 34.
         LH    R2,SEND#           ALLOW AT MOST 3 SEND COMMANDS.
         AH    R2,=H'1'
         CH    R2,=H'3'
         BNL   ENOUGH
         STH   R2,SEND#
NEXTRIB  DS    0H
         LH    R2,RIBVLEN         CALCUTE THE ADDRESS OF THE
         L     R3,RIBNRIBE          NEXT RIB.
         MH    R3,=Y(RIBEEND-RIBE)
         LA    R2,RIBEND-RIB(R3,R2)
         LA    R9,0(R2,R9)        R9 = A(NEXT RIB).
         BCT   R6,DORIB           LOOP UNTIL DONE.
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
RETURN   DS    0H
         L     R2,RC                  R2 = RC.
         LR    R1,R13              PREPARE
         L     R13,4(,R13)         FOR FREEMAIN.
         FREEMAIN RU,LV=DYNLEN,A=(1),SP=230
         LR    R15,R2              AND RETURN
         RETURN (14,12),RC=(15)      WITH R15 = RC.
QUIKEXIT DS    0H
         RETURN (14,12),RC=4         WITH R15 = 4.
********************************************************************
*                                                                  *
*        E R R O R S                                               *
*                                                                  *
********************************************************************
BADSCAN  DS    0H                 ERROR FROM GQSCAN SERVICE.
NOACF    DS    0H                 ACF2 NOT UP.
         MVC   RC,=F'12'
         B     RETURN
CANTUSE  DS    0H                 CATCH ALL RETURN.
         MVC   RC,=F'8'
         B     RETURN
ENOUGH   DS    0H                 MAX SEND COMMANDS ISSUED.
         MVC   RC,=F'4'
         B     RETURN
********************************************************************
*                                                                  *
*        S T A T I C   A R E A                                     *
*                                                                  *
********************************************************************
MOVEDSN  MVC   MMSGDSN(*-*),RIBRNAME
XGQSCAN  GQSCAN ,SCOPE=ALL,WAITCNT=1,MF=L                           L02
GQSCANL  EQU   *-XGQSCAN
MSGT1    DC    C'SEND '''
MSGT2    DC    C''',USER=('
MSGT3    DC    C'),NOW'
         LTORG *
         DROP  R11,R10,R9,R8,R7
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A S                                 *
*                                                                  *
********************************************************************
DYNAMIC  DSECT
SAVE     DS    18F .
RC       DS    F                  RETURN CODE.
ASVTADDR DS    A                  A(ACF2 ASVT).
OURASVTE DS    A                  A(OUR ASVT ENTRY).
TSOASVTE DS    A                  A(TSO ASVT ENTRY).
OURASID  DS    H                  OUR ASID.
TSOASID  DS    H                  TSO ASID.
SEND#    DS    H                  COUNTER FOR # COMMANDS ISSUED.
GQSCAN   DS    0F,CL(GQSCANL)
         IEZMGCR DSECT=NO
MGCR     EQU   MGCRPL
         ORG   MGCRTEXT
MMSG     DS    0C
MMSGT1   DS    CL40  "SEND 'JOB XXXXXXXX WAITING FOR DATA SET "
MMSGDSN  DS    CL45  DSN
MMSGT2   DS    CL21  "',USER=(UUUUUUUU),NOW"
MMSGL    EQU   *-MMSG
         ORG   ,
WRKRIB   DS    0F,4CL256          RETURN RIBS.
WRKRIBL  EQU  *-WRKRIB
DYNLEN   EQU   *-DYNAMIC          LENGTH OF WRKAREA.
         IEZVX100
CMSGID   EQU   CTXTTMSG,8         "IEF099I "
CMSGT1   EQU   CTXTTMSG+8,33      "JOB XXXXXXXX WAITING..."
         ISGRIB
         ACCVT ,
         ACFASVT ,
         IHAPSA
P        EQU   PSA
         CVT   DSECT=YES                                            L02
         IHAASCB
         PRINT OFF
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11                 A(PLIST).
R12      EQU   12                 PROGRAM BASE.
R13      EQU   13                 A(SAVE AREA).
R14      EQU   14
R15      EQU   15
         PRINT ON
         END   &CSECT
