OPTIONS S=72;
*----  CALENDAR....DICK SZIEDE,  CSC 1982.                           ;
*----                                                                ;
*----  THE OUTPUT FORMAT IS COPIED FROM A COBOL PROGRAM I GOT FROM A ;
*----  BURROUGHS SHOP.  AUTHOR UNKNOWN.                              ;
*----                                                                ;
*----  I WANTED TO MAKE IT PRINT 8-LPI.  I FOUND IT WAS EASIER TO    ;
*----  REWRITE IT IN SAS THAN IT WAS TO FIGURE OUT UNCOMMENTED COBOL.;
*----                                                                ;
*---- AN 8-LPI ASSUMPTION IS HARD-CODED IN THIS CALENDAR.  A P-11    ;
*---- OR PN TRAIN WILL WORK.  USE OF THE VERTICAL BAR FOR THE SIDES  ;
*---- ASSUMES A PRETTY GOOD PRINT REGISTRATION.  I HAVE A STC-1800.  ;
*---- ON AN IBM 1403 OR 3211, FORGET IT!  USE AN ASTERISK.           ;
*---                                                                 ;
*----                                                                ;
*----                                                                ;
*----                                                                ;
*----                                                                ;
*---- ALLOW PRETTY FREE-FORM INPUT BY SCANNING DATES FOR ALPHA MONTH  ;
*---- THE INPUT FORMAT ALLOWS ONE EMBEDDED BLANK IN THE EVENT         ;
*----                                                                 ;
DATA EVENTS (KEEP=DATE KIND WORDS AGE)
     PARMS  (KEEP=YEAR HEADER);
     INFILE  EVENTS;
     RETAIN YYYY;               *    SAVE A   4-CHARACTER YEAR        ;
     RETAIN YEAR;               *    SAVE A   NUMERIC     YEAR        ;
     FORMAT DATE DATE8.;

     INPUT KKK $1.@;            *  WE ALLOW IMBEDDED COMMENTS BY      ;
     IF  KKK > 'Z';             *  CHECKING FOR NON-NUMERIC FIRST     ;
                                *  CHARACTER;                         ;
     INPUT @1 KIND @;
     IF  KIND=0 THEN DO;        *    GET HEADER STUFF                 ;
         INPUT @3 YEAR @3 YYYY $4.
               @7 HEADER $64.@;
         OUTPUT PARMS;
         END;
     IF  KIND > 0 THEN DO;      *    READ EVENT DATES, ALLOWING ONE   ;
         INPUT EVENT $     WORDS & $14.@;* EMBEDDED BLANK.;
         MON_POS=VERIFY(EVENT,'0123456789');
         TEMP=SUBSTR(EVENT,1,(MON_POS+2))××SUBSTR(YYYY,3,2);
         IF  MON_POS=2 THEN TEMP='0'××TEMP; * STUFF IN A LEADING ZERO;
         DATE=INPUT(TEMP,DATE7.);
         IF  KIND>1 THEN DO;    * BIRTHDAY AND ANNIVERSARY            ;
             TEMP=SUBSTR(EVENT,((LENGTH(EVENT)-1)),2); * LAST 2 CHARS ;
             TEMP='19'××TEMP;
             IF  VERIFY(TEMP,'0123456789')=5 THEN
                 AGE=YEAR-INPUT(TEMP,4.);
             END;
         OUTPUT EVENTS;
         END;
PROC SORT DATA=EVENTS;
     BY DATE KIND;
MACRO MACBOXLN 11%

*---                                                                 ;
*--- PRE-SET THE PRINT POSITIONS WITHIN THE BOXES.                   ;
*--- FEASTS START FROM TOP-DOWN. BIRTHDAYS AND ANNIVERSARIES,        ;
*--- BOTTOM-UP.                                                      ;
*---                                                                 ;
DATA EVENT2;
     SET EVENTS;
     BY DATE KIND;
     RETAIN PRT_POS BOTTOM;
     IF  FIRST.DATE THEN DO;
         PRT_POS=1;
         BOTTOM=MACBOXLN-2;
         END;
     PRT_POS+1;
     IF  KIND>1 THEN DO;
         PRT_POS=BOTTOM;
         BOTTOM=BOTTOM-1;
         IF  LAST.KIND THEN BOTTOM=BOTTOM-1;  * SAVE ROOM FOR HEADER ;
         END;
     OUTPUT EVENT2;

PROC FORMAT;
     VALUE FMTMON 1='JANUARY' 2='FEBRUARY' 3='MARCH'
                  4='APRIL  ' 5='MAY     ' 6='JUNE '
                  7='JULY   ' 8='AUGUST  ' 9='SEPTEMBER'
                 10='OCTOBER' 11='NOVEMBER' 12='DECEMBER';
     VALUE FMTMONN 1='J A N U A R Y' 2='F E B R U A R Y' 3='M A R C H'
                  4='A P R I L  ' 5='M A Y   ' 6='J U N E '
                  7='J U L Y   ' 8='A U G U S T' 9='S E P T E M B E R'
                 10='O C T O B E R' 11='N O V E M B E R'
                 12='D E C E M B E R';
     RUN;
     PAGE;
*---                                                                 ;
*--- THE OUTER LOOP IS BY DAYS.  START AT JAN 1, AND LOOP TO DEC 31. ;
*--- ON THE FIRST DAY OF EACH MONTH, PRINT THE PREVIOUS MONTH,       ;
*--- SET UP HEADERS.   I RECALCULATE ROW AND COLUMN FOR EACH DAY.    ;
*--- ROW RECALCULATION IS REDUNDANT, BUT IT SAVES A TEST FOR FIRST   ;
*--- DAY OF WEEK.                                                    ;
*---                                                                 ;
*--- A MORE SAS-ORIENTED WAY OF DOING THIS WOULD HAVE BEEN TO        ;
*--- GENERATE A DATASET WITH ONE OBSERVATION FOR EACH DAY, AND LET   ;
*--- THAT DRIVE THE LOOP.  THE EVENTS FILE WOULD THEN HAVE BEEN      ;
*--- READ USING THE "UPDATE" STATEMENT.  I CHOOSE DOING IT MYSELF    ;
*--- FOR AESTHETIC REASONS.  THUS ONE WILL FIND A SET FOR THE EVENTS ;
*--- FILE BURIED IN THE INNERMOST LOOP.                              ;
*---                                                                 ;

DATA _NULL_;
     FILE PRINT NOPRINT N=PS PAGESIZE=92;
     FORMAT HEADER $64. WORDS $14.;
     FORMAT DATE TODAY DATE8.;
     LINK RTNPARM;                   * FOR EACH DAY OF THE YEAR.     ;
     TODAY=MDY(1,1,YEAR);            * WE WILL PASS THROUGH THIS     ;
     RETAIN YEAR; RETAIN HEADER;     * HUGE LOOP.                    ;

 DO  WHILE (YEAR(TODAY)=YEAR);
     THISMON=MONTH(TODAY);
     DAY_MON=TODAY-MDY(THISMON,1,YEAR)+1;  *      DAY OF MONTH       ;

     IF  DAY_MON=1 THEN LINK RTNDAY1; *HERE'S WHERE WE SET UP A PAGE.;

*---                                                                 ;
*--- SET UP A BOX.                                                   ;
*---                                                                 ;
     COL=1+(18*(WEEKDAY(TODAY)-1));  * THIS IS THE DAY OF THE WEEK   ;
     ROW=21+(MACBOXLN*INT((TODAY-FRST_SUN)/7)); *AND WEEK OF MONTH   ;
     L=ROW-1;          C=COL+1;      *  ROOF  THE CURRENT BOX.       ;
     PUT #L @C '+-----------------+';
     IF  WEEKDAY(TODAY)=1 THEN PUT #L @C '×';
     IF  WEEKDAY(TODAY)=7 THEN PUT #L @C +18 '×';
     L=ROW+MACBOXLN-1; C=COL+1;      *  FLOOR THE CURRENT BOX.       ;
     PUT #L @C '*-----------------*';
     C=COL+2; L=ROW;                 * AND JULIAN DATE, PRINTED.     ;
     JUL_DAY=MOD(JULDATE(TODAY),1000);
     PUT #L @C DAY_MON 2. +12 JUL_DAY 3.;
*---                                                                 ;
*--- FILL IN THE BOX.                                                ;
*---                                                                 ;
     DO  I=0 TO MACBOXLN-1;
         L=ROW+I; C=COL+1;
         IF  I < MACBOXLN-1 THEN PUT #L @C '×' +17 '×';
         END;

     DO  WHILE ((DATE <= TODAY) AND NOT END_EVNT);
         IF  DATE=TODAY  THEN DO;
             C=COL+2; L=ROW+PRT_POS;
             IF  KIND > 1 THEN C=COL+4;
             PUT #L @C WORDS;        * PRINT THE EVENT.              ;
             IF  (KIND=2 AND (1<=AGE<=21)) OR (KIND=3 AND (1<=AGE))
                 THEN DO;
                 C=C+LENGTH(WORDS);
                 PUT #L @C  '-' AGE;
                 END;
             IF  (LAST.KIND AND KIND > 1)    THEN DO;
                 L=L-1; C=COL+2;
                 IF  KIND=3 THEN PUT #L @C 'ANNIVERSARY';
                 IF  KIND=2 THEN PUT #L @C 'BIRTHDAY';
                 END;
             END;
         SET EVENT2 END=END_EVNT;     * HERE WE SUCK IN  THE         ;
         BY DATE KIND;                *   EVENTS FILE.               ;
         END;

     TODAY+1;
     END;
     PUT _PAGE_; STOP;
*---                                                                 ;
*--- OVERPRINT THE TITLE, AND THE CURRENT MONTH. SET UP WEEK-DAY     ;
*--- HEADINGS.  PRIME THE FIRST SIX DAY BOXES, IN CASE NOBODY        ;
*--- WANTS THEM.  PRINT THE PREVIOUS MONTH.  DETERMINE THE DATE OF   ;
*--- THE FIRST BOX IN THIS MONTH (IT WILL BE IN PREVIOUS MONTH).     ;
*---                                                                 ;
*---                                                                 ;
RTNDAY1:
     IF  THISMON > 1 THEN PUT _PAGE_;
     FRST_SUN=TODAY-(WEEKDAY(TODAY)-1); * DATE OF 1ST SQUARE.    ;
     C=66-INT(LENGTH(HEADER)/2);
     PUT #1 @C  HEADER #2 '+' @C  HEADER #3 @1 '+' @C  HEADER;
     BITTYMON=(THISMON-1)+12*(THISMON=1);
     COL=2;                      *   STICK LAST MONTH AND THIS   ;
     LINK RTNBITTY;              *   AT THE TOP OF THE PAGE.     ;
     BITTYMON=(THISMON+1)-12*(THISMON=12);
     COL=86;
     LINK RTNBITTY;
     C=66-INT(LENGTH(PUT(THISMON,FMTMONN.))/2); *  OVERPRINT MTH.;
     PUT #10 @C  THISMON FMTMONN.
         / @1 '+' @C THISMON FMTMONN.
         / @1 '+' @C THISMON FMTMONN.;
     PUT #14 @64 YEAR;
         PUT #19 @2 '×   S U N D A Y   ×   M O N D A Y   ×  T U E S D A
Y  ×W E D N E S D A Y× T H U R S D A Y ×   F R I D A Y   × S A T U R D A
 Y ×' /
                 @2 '×-----------------+-----------------+--------------
---+-----------------+-----------------+-----------------+--------------
---×'    /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' /
         @2 '×' @20 '×' @38 '×' @56 '×' @74 '×' @92 '×' ;
     RETURN;

*---                                                                 ;
*--- PRINT THE NEXT AND PREVIOUS MONTHS IN THE CORNERS OF THE        ;
*--- CALENDAR.  NOTE THAT THE HICCOUGH IN THE LINE COUNT ALLOWS      ;
*--- FOR THE OVERPRINT OF THE CURRENT MONTH.                         ;
*---                                                                 ;
 RTNBITTY:
     C=COL+21-INT(LENGTH(PUT(BITTYMON,FMTMON.))/2);
     PUT #4 @C BITTYMON FMTMON. / /
         @COL '× SUN × MON × TUE × WED × THU × FRI × SAT ×' /
         @COL '×-----+-----+-----+-----+-----+-----+-----×';
     BIT_YEAR=YEAR+(BITTYMON=1  AND THISMON=12)
                  -(BITTYMON=12 AND THISMON=1);
     BIT_DAY=MDY(BITTYMON,1,BIT_YEAR);
     BIT_SUN=BIT_DAY-(WEEKDAY(BIT_DAY)-1);
     DO  WHILE (MONTH(BIT_DAY)=BITTYMON);
         BIT_WKDY=WEEKDAY(BIT_DAY);
         IF  (BIT_WKDY=1 OR BIT_DAY=MDY(BITTYMON,1,BIT_YEAR)) THEN DO;
             BIT_ROW=8+INT((BIT_DAY-BIT_SUN)/7);
             L=BIT_ROW+2*(BIT_ROW>10);
             PUT #L @COL '×     ×     ×     ×     ×     ×     ×     ×';
             IF   L > 10 THEN PUT #L /
                    @COL '*-----------------------------------------*';
             END;
         BIT_COL=COL+6*(BIT_WKDY-1);
         C=BIT_COL+1;
         BIT_DYMO=BIT_DAY-MDY(BITTYMON,1,BIT_YEAR)+1;
         PUT #L @C BIT_DYMO 3.;
         BIT_DAY+1;
         END;
     RETURN;

*---                                                                   ;
*--- READ THE TITLE, AND THE YEAR TO BE PRINTED.  THIS IS IN A SUB-    ;
*--- ROUTINE, BECAUSE IT IS THE FIRST SAS DATASET "SET'ED" IN THE      ;
*--- STEP, BUT IT CAN'T BE THE FIRST PHISICAL SET STATEMENT IN THE     ;
*--- DECK, 'CAUSE I USE A "BY" VARIABLE IN THE OTHER SET STATEMENT.    ;
*---                                                                   ;
RTNPARM:
     SET PARMS;
     RETURN;

*    FILE LOG;                              ******DEBUG;
*    PUT  KIND= TODAY= WORDS= DATE= LAST.KIND= PRT_POS= BOTTOM=;
*    FILE PRINT NOPRINT N=PS PAGESIZE=92;   ******DEBUG;

