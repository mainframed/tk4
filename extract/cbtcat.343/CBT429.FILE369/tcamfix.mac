PRC TITLE 'TCAMFIX - RESET THE CVTAQAVB FIELD SO TCAM WILL INITIALIZE.'
********************************************************************
*                                                                  *
* NAME - TCAMFIX                                                   *
*                                                                  *
* DESCRIPTION - THIS ROUTINE CLEANS UP THE CVTAQAVB FIELD SO TCAM  *
*   WILL INITIALIZE.  THE CVT-BASED TCAM IS SUPPOSED TO DO THIS WHE*
*   IT TERMINATES, BUT IT ISN'T ALWAYS SO OBLIGING.  IF THE OPERATO*
*   RESPONDS "Y" TO OUR MESSAGE IEDPRC1D, THEN WE ZERO THIS FIELD. *
*                                                                  *
* NOTE - WE MUST RUN APF-AUTHORIZED, AND WE CAN RUN AS A SUBTASK OF*
*   THE TCAM INITIATOR.                                            *
*                                                                  *
* LOG -                                                            *
*     DATE   WHO LV    CHANGE                                      *
*   02/14/86 PTW 01 IMPLEMENTATION                                 *L01
*                                                                  *
********************************************************************
         LCLC  &CSECT
&CSECT   SETC  'TCAMFIX'
&CSECT   CSECT ,
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         PRINT NOGEN
         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME
         LR    R12,R15            ESTABLISH BASE.
         USING &CSECT,R12         TELL ASSEMBLER.
         GETMAIN RU,LV=DYNLEN     GET DYNAMIC AREA.
         LR    R2,R13             SAVE AREA
         LR    R13,R1             SAVE AREA
         USING DYNAMIC,R13        TELL ASSEMBLER.
         LA    R0,DYNAMIC         ZERO
         LA    R1,DYNLEN            DYNAMIC
         LR    R14,R0                 STORAGE.
         SLR   R15,R15
         MVCL  R0,R14             DO IT.
         ST    R2,4(,R13)         BACK CHAIN.
         ST    R13,8(,R2)         FORWARD CHAIN.
         XC    RC,RC              ASSUME GOOD RC.
         XC    ECB,ECB
         MVC   WTOR(WTORL),XWTOR  INITIALIZE VARIABLES.
         MVI   REPLY,C' '
         MVC   REPLY+1(L'REPLY-1),REPLY
********************************************************************
*                                                                  *
*        M A I N L I N E                                           *
*                                                                  *
********************************************************************
         L     R2,FLCCVT-P             R2 = A(CVT).
         SLR   R3,R3
         ICM   R3,B'0111',CVTAQAVB-C(R2) IF OUR FIELD IS ZERO,
         BZ    ITSZERO                   NO RESET REQUIRED, EXIT.
         WTOR  ,REPLY,L'REPLY,ECB,MF=(E,WTOR) ELSE WTOR.
         WAIT  ECB=ECB
         OI    REPLY,C' '              FOLD TO UPPER CASE.
         CLI   REPLY,C'Y'              IF NOT "Y",
         BNE   NOGO                      THEN EXIT.
         SLR   R3,R3
         MODESET KEY=ZERO              ELSE, GET PRIVILIGED.
         STCM  R3,B'0111',CVTAQAVB-C(R2) ZERO CVT FIELD.
         MODESET KEY=NZERO
         WTO   'IEDPRC2I CVTAQAVB IS RESET.  TCAM SHOULD RESTART NOW.',X
               ROUTCDE=2
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
RETURN   DS    0H
         L     R2,RC                  R2 = RC.
         LR    R1,R13              PREPARE
         L     R13,4(,R13)         FOR FREEMAIN.
         FREEMAIN RU,LV=DYNLEN,A=(1)
         LR    R15,R2              AND RETURN
         RETURN (14,12),RC=(15)      WITH R15 = RC.
********************************************************************
*                                                                  *
*        E R R O R S                                               *
*                                                                  *
********************************************************************
ITSZERO  DS    0H
         WTO   'IEDPRC3I CVTAQAVB FIELD IS ALREADY ZERO, NO ACTION TAKEX
               N.',ROUTCDE=2
         MVC   RC,=F'4'              R2 = RC.
         B     RETURN
NOGO     DS    0H
         WTO   'IEDPRC4I OPERATOR REQUESTED NO CVTAQAVB RESET, NO ACTIOX
               N TAKEN.',ROUTCDE=2
         MVC   RC,=F'8'              R2 = RC.
         B     RETURN
********************************************************************
*                                                                  *
*        S T A T I C   A R E A S.                                  *
*                                                                  *
********************************************************************
XWTOR    WTOR 'IEDPRC1D REPLY Y TO ZAP CVTAQAVB, ANYTHING ELSE TERMINATX
               ES.',ROUTCDE=2,MF=L
WTORL    EQU   *-XWTOR
         LTORG ,
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A S.                                *
*                                                                  *
********************************************************************
DYNAMIC  DSECT
SAVE     DS    18F                     SAVE AREA.
RC       DS    F                       RETURN CODE.
ECB      DS    F                       ECB FOR WTOR.
WTOR     DS    XL(WTORL)               WTOR LIST.
REPLY    DS    CL10                    REPLY AREA.
DYNLEN   EQU   *-DYNAMIC               LENGTH.
         PRINT OFF
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11
R12      EQU   12                 PROGRAM BASE.
R13      EQU   13                 A(SAVE AREA).
R14      EQU   14
R15      EQU   15
         PRINT ON
         CVT   DSECT=YES
C        EQU   CVTMAP
         IHAPSA
P        EQU   PSA
         END   &CSECT
