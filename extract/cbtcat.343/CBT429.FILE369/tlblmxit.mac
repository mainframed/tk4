         TITLE 'TLBLMXIT -- TAPE LABEL WRITER MESSAGE INTERCEPT EXIT'
***********************************************************************
*                                                                     *
* NAME         TLBLMXIT                                               *
*                                                                     *
* COMPONENT    TAPE LABEL WRITER                                      *
*                                                                     *
* FUNCTION     QUEUE REQUESTS FOR EXTERNAL TAPE LABELS                *
*                                                                     *
* ENTRY        FROM WTO PROCESSOR VIA MPFLSTXX PARAMETER FOR IEC705I. *
*                                                                     *
* PARAMETERS   CTXT                                                   *
*                                                                     *
* INPUT        IEC705I MESSAGE TEXT                                   *
*                                                                     *
* OUTPUT       REQUEST QUEUED FOR TLBLMAIN                            *
*                                                                     *
* RETURN CODES NONE                                                   *
*                                                                     *
* FILES        NONE                                                   *
*                                                                     *
* EXT REF      NONE                                                   *
*                                                                     *
* MESSAGES     NONE                                                   *
*                                                                     *
* MACROS       ACFINCVT                                               *
*              ACFGUCB                                                *
*              FREEMAIN                                               *
*              GETMAIN                                                *
*              POST                                                   *
*              REGS                                                   *
*              RETURN                                                 *
*              SAVE                                                   *
*              TIME                                                   *
*                                                                     *
* TABLES       ASCB       -- IHAASCB                                  *
*              ACFASVT                                                *
*              ACCVT                                                  *
*              ACUCB                                                  *
*              CTXT       -- IEZVX100                                 *
*              CVT                                                    *
*              DEB        -- IEZDEB                                   *
*              DCB        -- DCBD                                     *
*              ECB        -- IHAECB                                   *
*              JFCB       -- IEFJFCBN                                 *
*              JSCB       -- IEZJSCB                                  *
*              JESCT      -- IEFJESCT                                 *
*              PSA        -- IHAPSA                                   *
*              SSCVT      -- IEFJSCVT                                 *
*              SSIB       -- IEFJSSIB                                 *
*              TCB        -- IKJTCB                                   *
*              TIOT       -- IEFTIOT1                                 *
*              TLBLABEL                                               *
*              TLBLCVT                                                *
*              UCB        -- IEFUCBOB                                 *
*                                                                     *
* OPERATION    ×                                                      *
*                                                                     *
* ATTRIBUTES   REENTRANT                                              *
*              REUSABLE                                               *
*              AMODE 31                                               *
*              RMODE ANY                                              *
*              AUTHORIZED                                             *
*              LNKLSTXX LIBRARY                                       *
*              KEY ZERO                                               *
*              SUPERVISOR STATE                                       *
*                                                                     *
* RESTRICTIONS IN ORDER TO GET THE VOLUME SEQUENCE (REEL) NUMBER      *
*              IT'S NECESSARY TO LOCATE THE JFCB FOR WHICH THE        *
*              IEC705I MSG IS BEING ISSUED. USUALLY ONE GOES          *
*              THROUGH THE TIOT, BUT WITHOUT A DDNAME (ONLY A         *
*              DEVICE NUMBER) IT'S NOT POSSIBLE TO ALWAYS FIND THE    *
*              RIGHT ENTRY, SINCE UNIT=AFF LETS THERE BE MANY         *
*              DEVICE ENTRIES FOR A GIVEN DEVICE.  THERE CAN BE       *
*              ONLY ONE OPEN DATASET PER TAPE UNIT, SO RUNNING THE    *
*              DEB CHAIN CAN FIND THE OPEN DS ACCESSING THAT          *
*              DEVICE. UNFORTUNATLY, THERE IS NO DEB AT THE TIME      *
*              IEC705I IS ISSUED FOR THE FIRST VOLUME; IT'S THERE     *
*              FOR ALL THE OTHERS.  ONE COULD DEFAULT TO A REEL       *
*              NUMBER OF ONE IN THE ABSENCE OF A DEB, AND             *
*              COMMENTED-OUT CODE TO DO THAT IS INCLUDED AROUND       *
*              MXIT4000. A LOCAL FUNCTION (MANUAL CHECKOUT OF         *
*              TAPES) WOULD PRODUCE MISLEADING RESULTS (ALL REELS     *
*              OF A DS AS NUMBER 1) HERE AT APS SO LET'S NOT DO       *
*              THAT.                                                  *
*                                                                     *
* NOTES        ALTHOUGH THERE IS LOGIC IN HERE WHICH REFERENCES       *
*              SUBSYSTEM TABLES, THE TAPE LABEL WRITER IS NOT A       *
*              FORMAL SUBSYSTEM; IT NEVER ACTIVATES A SSVT SO IT      *
*              MAKES NO USE OF SUBSYSTEM REQUEST ROUTING. THE SSCT    *
*              USER FIELD IS USED AS A CONVENIENT ANCHOR FOR CSA      *
*              CONTROL BLOCKS.                                        *
*                                                                     *
* AUTHOR       C. J. PITTS                                            *
*                                                                     *
* MAINTENANCE  WHO   DATE      DESCRIPTION                            *
*              CJP   12/31/86  ADDED SUPPORT FOR JES JOB ID           *
*              CJP    3/10/87  ADDED SUPPORT FOR REEL NUMBER          *
*              CJP    6/ 5/87  FIXED BUG IN DEB LOOKUP: ONLY          *
*                              CHECK DEBS WITH EXCP OR SEQ ACCMETH.   *
*                              (OTHERS CAN'T BE TAPE AND MAY NOT      *
*                              HAVE A UCB.)                           *
*                                                                     *
**********************************************************************/
*                                                                     *
* REGISTERS AT ENTRY                                                  *
*              R1    POINTER TO CTXT ADDRESS WORD                     *
*              R13   SAVE AREA                                        *
*              R14   RETURN ADDRESS                                   *
*              R15   ENTRY POINT                                      *
*                                                                     *
* REGISTER USE IN PROGRAM                                             *
*              R7    WORKAREA                                         *
*              R8    TLBLABEL                                         *
*              R9    CTXT                                             *
*              R10   CTXTATTR                                         *
*              R11   TLBLCVT                                          *
*              R12   BASE REGISTER                                    *
*              R13   SAVE AREA                                        *
*                                                                     *
**********************************************************************/
         SPACE 3
***********************************************************************
* TLBLMXIT:                                      /*  ENTRY POINT  */  *
*        BRANCH AROUND DOCUMENTATION HEADER;                          *
***********************************************************************
         SPACE
TLBLMXIT CSECT
         SPACE
TLBLMXIT AMODE 31
TLBLMXIT RMODE ANY
         SPACE
         USING TLBLMXIT,R15        TEMPORARY BASE
         B     BEGIN               SKIP OVER DOCUMENTATION
         SPACE
         DC    AL1(BEGIN-*)        LENGTH OF TEXT
SRCLEVEL DC    C'TLBLMXIT VNN.MNN YY/MM/DD HH:MM UUUUUUUU'
*                MODULE   VER/MOD   DATE   TIME  USER NAME
COPYRIGT DC    C' COPYRIGHT (C) 1987 PLANNING RESEARCH CORPORATION '
ASMSTAMP DC    C'ASM &SYSDATE &SYSTIME'
         DROP  R15                 DONE WITH TEMPORARY BASE
         SPACE
BEGIN    DS    0H
         EJECT
***********************************************************************
* MXIT0000:                                   /*  INITIALIZATION  */  *
*        SAVE REGISTERS;                                              *
*        SET PROGRAM BASE;                                            *
*        LOCATE SSCVT;                                                *
*        IF (UNABLE TO FIND SSCVT)                                    *
*          THEN RETURN TO CALLER;                   /*  MXIT9900  */  *
*        GET TLBLCVT ADDRESS FROM SSCT;                               *
*        IF (NOT THERE)                                               *
*          THEN RETURN TO CALLER;                   /*  MXIT9900  */  *
***********************************************************************
         SPACE
MXIT0000 DS    0H
         USING PSA,R0              ALWAYS
         SPACE
         SAVE  (14,12)             SAVE REGISTERS
         SPACE
         LR    R12,R15             SET BASE REGISTER
         USING TLBLMXIT,R12
         SPACE
         L     R9,0(,R1)           CTXT ADDRESS PARAMETER
         USING CTXT,R9
         L     R10,CTXTTXPJ        POINT TO TEXT ATTRIBUTE LIST
         USING CTXTATTR,R10
         SPACE
         L     R1,FLCCVT           CVT ADDRESS
         USING CVT,R1
         L     R1,CVTJESCT         JESCT ADDRESS
         USING JESCT,R1
         L     R7,JESSSCT          FIRST SSCVT ADDRESS
         USING SSCT,R7
         DROP  R1
         SPACE
MXIT0200 DS    0H
         CLC   SSCTSNAM,SSNAME     IS THIS THE RIGHT SSCVT?
         BE    MXIT0500            YEP...ONWARD
         ICM   R7,B'1111',SSCTSCTA NEXT SSCT
         BNZ   MXIT0200            LOOP IF IT EXISTS
         SPACE
         B     MXIT9900            NO GOT...RETURN TO CALLER
         SPACE
MXIT0500 DS    0H
         ICM   R11,B'1111',SSCTSUSE GET POINTER TO TLBLCVT
         USING TLBLCVT,R11
         DROP  R7
         BZ    MXIT9900            NOT THERE...RETURN TO CALLER
         SPACE
         ST    R12,TLBLEXEP        SAVE EP ADDRESS FOR DEBUGGING
         EJECT
***********************************************************************
* MXIT2000:                                                           *
*        GETMAIN WORKAREA FROM SYSTEM SUBPOOL;                        *
*        CHAIN SAVE AREAS;                                            *
*        IF (ACTIVE LOCK IS NOT HELD)                                 *
*           THEN GO RETURN TO CALLER;               /*  MXIT9000  */  *
***********************************************************************
         SPACE
MXIT2000 DS    0H
         L     R0,GETWORK          LENGTH AND SUBPOOL FOR GETMAIN
         GETMAIN R,LV=(0)
         SPACE
         LR    R7,R1               GOTTEN AREA ADDRESS
         USING WORKAREA,R7
         SPACE
         LR    R15,R13             ---
         LA    R13,WORKSAVE        -  SAVE AREA
         ST    R15,4(,R13)         -  CHAINING
         ST    R13,8(,R15)         ---
         SPACE
         MVC   WORKENQ(WORKENQL),ENQL INITIALIZE LIST FORM OF ENQ
         ENQ   (TLBLQNAM,TLBLRNAM),MF=(E,WORKENQ)
         SPACE
         LTR   R15,R15             TEST RETURN CODE
         BZ    MXIT9000            LOCK AVAILABLE...RETURN TO CALLER
         CLI   3(R15),X'04'        LOCK HELD?
         BNE   MXIT9000            NOPE...RETURN TO CALLER
         EJECT
***********************************************************************
*        GETMAIN TLBLABEL BLOCK FROM CSA;                             *
*        INITIALIZE TLBLABEL BLOCK;                                   *
*        PLACE TIME AND DATE IN TAPELABL BLOCK;                       *
*        LOCATE LIFE-OF-JOB SSIB -- TCB->JSTCB->JSCB->SSIB ;          *
*        MOVE JES JOBLOG ID TO TLBLABEL BLOCK;                        *
***********************************************************************
         SPACE
         L     R0,GETLBLOK         LENGTH AND SUBPOOL FOR GETMAIN
         GETMAIN R,LV=(0)
         LR    R8,R1               GOTTEN AREA ADDRESS
         USING TLBLABEL,R8
         SPACE
         MVC   LABELEYE,=C'LABL'   EYECATCHER
         SPACE
         XC    LABELNXT,LABELNXT   NEXT POINTER
         XC    LABELADD,LABELADD   COMPARE/SWAP ITERATION COUNTER
         XC    LABELDEL,LABELDEL   COMPARE/SWAP ITERATION COUNTER
         SPACE
         MVI   LABELCHR,C' '       BLANK OUT CHARACTER FIELDS
         MVC   LABELCHR+1(LABELCHL-1),LABELCHR  FILL AREA
         SPACE
         TIME  DEC
         SPACE
         ST    R0,LABELTIM         SAVE TIME
         ST    R1,LABELDAT         SAVE DATE
         SPACE
         L     R1,PSATOLD          CURRENT (OLD) TCB
         USING TCB,R1
         L     R1,TCBJSTCB         JOB STEP TCB
         ICM   R1,B'1000',=X'00'   CLEAR HIGH BYTE
         ICM   R1,B'0111',TCBJSCBB JOB STEP CONTROL BLOCK (JSCB)
         USING IEZJSCB,R1
         L     R1,JSCBSSIB         SSIB
         USING SSIB,R1
         SPACE
         MVC   LABELJID,SSIBJBID   JOBLOG ID
         SPACE
         DROP  R1
         EJECT
***********************************************************************
* MXIT3000:                                /*  DESTRING WTO TEXT  */  *
*        DO UNTIL( (ALL MESSAGE FIELDS ARE PROCESSED)    -- OR --     *
*                  (MESSAGE TEXT AFTER TRIGGER IS EXHAUSTED) )        *
*          FIND LENGTH OF NEXT FIELD IN MESSAGE;                      *
*          IF (LENGTH > 0)                                            *
*            THEN MOVE TEXT TO TLBLABEL BLOCK FIELD;                  *
*        END;                                                         *
***********************************************************************
         SPACE
MXIT3000 DS    0H
         LH    R5,CTXTTLEN         MESSAGE LENGTH INCLUDING TRIGGER
         S     R5,=A(L'TRIGGER+1)  LENGTH LESS TRIGGER+1 FOR EXECUTE
         LA    R6,CTXTTMSG+L'TRIGGER FIRST INTERESTING BYTE
         SPACE
         LA    R14,MOVETBL         MOVE TABLE
         LA    R15,MOVETBLC        LOOP COUNTER
         SPACE
MXIT3500 DS    0H
         LTR   R5,R5               ANY CHARACTERS LEFT?
         BM    MXIT3900            NOPE...DONE
         SPACE
         EX    R5,TRTDELIM         LOCATE NEXT DELIMITER
         BNZ   MXIT3550            GO IF DELIMITER FOUND
         SPACE
         LR    R4,R5               LENGTH FOR EXECUTED MOVE
         LA    R1,1(R6,R5)         FAKE OUT R1 FOR LATER LOOP CALCS
         B     MXIT3600            GO FOR MOVE
         SPACE
MXIT3550 DS    0H
         LR    R4,R1               ADDRESS OF DELIMITER
         SR    R4,R6               COMPUTE LENGTH
         BCTR  R4,0                DECREMENT FOR EXECUTE
         SPACE
MXIT3600 DS    0H
         LM    R2,R3,0(R14)        GET OFFSET AND MAX LENGTH FOR MOVE
         LA    R2,TLBLABEL(R2)     DESTINATION ADDRESS
         LR    R1,R4               COPY LENGTH OF DATA
         CR    R3,R1               CHECK LENGTH
         BNL   MXIT3650            GO IF MAX LENGTH NOT EXCEEDED
         LR    R1,R3               SET LENGTH TO MAXIMUM
MXIT3650 DS    0H
         LTR   R1,R1               CHECK LENGTH FOR EXECUTE
         BM    MXIT3700            NULL FIELD...SKIP MOVE
         EX    R1,MVCFIELD         MOVE SUITABLE LENGTH
         SPACE
MXIT3700 DS    0H
         LA    R4,2(,R4)           ACCOUNT FOR DELIMITER, EXECUTE
         SR    R5,R4               DECREMENT REMAINING COUNT
         AR    R6,R4               BUMP ADDRESS PAST PROCESSED DATA
         LA    R14,L'MOVETBL(,R14) BUMP TABLE POINTER
         BCT   R15,MXIT3500        LOOP
         SPACE
MXIT3900 DS    0H
         EJECT
***********************************************************************
* MXIT4000:                    /*  LOCATE VOLUME SEQUENCE NUMBER  */  *
*   /*   INITIALIZE LABELVNO TO 1;  DISABLED --- SEE RESTRICTIONS */  *
*        DO FOR ALL DEB'S;                                            *
*          IF (DEBAMTYP IS EXCP OR SEQUENTIAL)                        *
*            THEN DO;                                                 *
*                   LOCATE UCB FROM DEBSUCBB;                         *
*                   IF (UCBNAME=LABELDEV)                             *
*                     THEN DO;                                        *
*                            LOCATE JFCB: DEB->DCB->TIOT->JFCB;       *
*                            IF (JFCBNVOL=0)                          *
*                              THEN ADD 1 AND USE FOR VOLUME COUNT;   *
*                              ELSE USE AS IS FOR VOLUME COUNT;       *
*                            FORMAT LABELVNO;                         *
*                            LEAVE DEB SEARCH LOOP;                   *
*                          END;                                       *
*                 END;                                                *
*         END;                                                        *
***********************************************************************
         SPACE
MXIT4000 DS    0H
*        MVC   LABELVNO,=C'  1'    DEFAULT VOLUME SEQUENCE NUMBER
         SPACE
         XR    R15,R15             WORK REGISTER
         L     R14,PSATOLD         CURRENT TCB
         USING TCB,R14
         SPACE
         ICM   R1,B'1111',TCBDEB   DEB ORIGIN
         SPACE
MXIT4200 DS    0H
         BZ    MXIT4900            NO MORE DEB'S -- ONWARD
         SPACE
         A     R1,=A(DEBPREFX-DEBBASIC) BACK UP TO POINT TO PREFIX
         USING DEBPREFX,R1
         SPACE
         CLI   DEBAMTYP,DEBAMSAM   SEQUENTIAL ACCESS?
         BE    MXIT4300            YEP...ONWARD...UCB EXISTS
         CLI   DEBAMTYP,DEBAMXCP   EXCP ACCESS?
         BNE   MXIT4800            NOPE...LOOP WITH NEXT DEB
MXIT4300 DS    0H
         SPACE
         ICM   R15,B'0111',DEBSUCBB UCB ADDRESS
         USING UCBOB,R15
         SPACE
         CLC   UCBNAME,LABELDEV    IS THIS THE RIGHT DEB/UCB?
         BNE   MXIT4800            NOPE...ONWARD AND LOOP
         SPACE
         ICM   R15,B'0111',DEBDCBB DCB ADDRESS
         USING IHADCB,R15
         SPACE
         L     R14,TCBTIO          TCB ORIGIN
         AH    R14,DCBTIOT         OFFSET TO TIOT ENTRY
         USING TIOENTRY,R14
         SPACE
         ICM   R14,B'0111',TIOEJFCB JFCB JOBQ ADDRESS
         LA    R14,JOBQHRDL(,R14)  BUMP PAST IN-CORE HEADER
         USING JFCB,R14
         SPACE
         XR    R0,R0                          CLEAR REGISTER
         ICM   R0,B'0001',JFCBNVOL            CURRENT VOLUME COUNT
         BNZ   MXIT4400                       NON-ZERO...USE AS IS
         LA    R0,1                           WAS ZERO...SET TO 1
MXIT4400 DS    0H
         CVD   R0,WORKCVD                     CONVERT TO PACKED
         MVC   WORKCVD(L'EDITMVNO),EDITMVNO   EDIT PATTERN
         ED    WORKCVD(L'EDITMVNO),WORKCVD+6  CONVERT TO ZONED
         MVC   LABELVNO,WORKCVD+1             MOVE FORMATTED REEL NO
         SPACE
         B     MXIT4900            LEAVE LOOP
         SPACE
MXIT4800 DS    0H
         ICM   R1,B'0111',DEBDEBB  NEXT DEB
         B     MXIT4200            LOOP
         SPACE
MXIT4900 DS    0H
         DROP  R1,R14,R15
         EJECT
***********************************************************************
* MXIT5000:                        /*  GET ACF2 USER CONTROL BLOCK */ *
*        LOCATE ACF2 ACVT VIA ACFINCVT;                               *
*        LOCATE ACF2 UCB VIA ACFGUCB;                                 *
*        MOVE LID TO TLBLABEL BLOCK FIELD;                            *
*        MOVE SYSTEM SMF ID TO TLBLABEL BLOCK FIELD;                  *
***********************************************************************
         SPACE
         ACFINCVT R2,NONE=MXIT5900
         SPACE
         USING ACCVT,R2
         SPACE
         ACFGUCB R3,INLINE=YES,SYS=AOS2,NONE=MXIT5900
         SPACE
         USING ACUCB,R3
         SPACE
         MVC   LABELLID,ACULID     MOVE LID TO TLBLABEL FIELD
         MVC   LABELSIT,ACUSCPU    MOVE SMF ID TO TLBLABEL FIELD
         SPACE
         DROP  R2,R3
         SPACE
MXIT5900 DS    0H
         EJECT
***********************************************************************
* MXIT6000:                     /* SEE IF LABEL IS TO BE PRINTED  */  *
*        IF (DATASETNAME NOT PRESENT)     /*  NO KEEP DISP GIVEN  */  *
*          THEN DO;                                                   *
*                 FREEMAIN TLBLABEL;                                  *
*                 RETURN TO CALLER;                 /*  MXIT9000  */  *
*               END;                                                  *
***********************************************************************
         SPACE
MXIT6000 DS    0H
*======================================================================
*        CLI   LABELDSN,C' '       DATASET NAME PRESENT? (DISP1 = KEEP)
*        BNE   MXIT6200            YEP...ONWARD
*        SPACE
*        L     R0,GETLBLOK         LENGTH AND SUBPOOL
*        FREEMAIN R,LV=(0),A=(R8)
*        SPACE
*        B     MXIT9000            RETURN TO CALLER
*======================================================================
         SPACE
MXIT6200 DS    0H
         EJECT
***********************************************************************
* MXIT7000:                                 /*  SCHEDULE TBLABEL  */  *
*        ADD TBLABEL TO QUEUE ANCHORED IN TLBLCVT;                    *
*        POST TLBLMAIN WORK-TO-DO ECB;                                *
***********************************************************************
         SPACE
MXIT7000 DS    0H
         LR    R5,R8               NEW TAIL OF LIST
         SPACE
MXIT7200 DS    0H
         LM    R2,R3,TLBLPTRS      HEAD AND TAIL OF CHAIN
         LTR   R4,R2               TEST HEAD OF CHAIN (HEAD REMAINS)
         BZ    MXIT7400            ZERO => EMPTY CHAIN
         SPACE
         ST    R5,LABELNXT-TLBLABEL(,R3) POINT OLD TAIL TO NEW
         B     MXIT7600            ONWARD
         SPACE
MXIT7400 DS    0H
         LR    R4,R5               HEAD EQUALS TAIL - ONLY 1 BLOCK
         SPACE
MXIT7600 DS    0H
         LA    R15,1               ---
         AH    R15,LABELADD        - INCREMENT COUNTER
         STH   R15,LABELADD        ---
         SPACE
         CDS   R2,R4,TLBLPTRS      UPDATE POINTERS
         BNE   MXIT7200            RETRY IF ANCHORS HAVE CHAINED
         SPACE
         L     R1,=AL1(ECBPOST,0,0,0) POSTED ECB
         XR    R15,R15             CURRENT ECB -- BE ZERO IF NOT WAIT
         CS    R15,R1,TLBLECB      SET IN NEW ECB IF NOT WAITING
         BE    MXIT7900            OKAY...ONWARD
         SPACE
         L     R14,FLCCVT          POINTER TO CVT FOR POST ERROR EXIT
         USING CVT,R14
         L     R2,TLBLASCB         ASCB FOR POST
         POST  TLBLECB,ASCB=(R2),ERRET=CVTBRET,ECBKEY=0,MF=(E,WORKPOST)
         DROP  R14
         SPACE
MXIT7900 DS    0H
         EJECT
***********************************************************************
* MXIT9000:                                /*  RETURN TO INVOKER  */  *
*        POINT TO HIGHER SAVE AREA;                                   *
*        FREEMAIN WORKAREA;                                           *
* MXIT9900:                                                           *
*        RESTORE REGISTERS;                                           *
*        RETURN TO CALLER VIA R14;                                    *
***********************************************************************
         SPACE
MXIT9000 DS    0H
         L     R13,4(,R13)         HIGHER SAVE AREA
         L     R0,GETWORK          SUBPOOL AND LENGTH OF WORKAREA
         FREEMAIN R,LV=(0),A=(R7)
         SPACE
MXIT9900 DS    0H
         RETURN (14,12),RC=0
         EJECT
***********************************************************************
*        CONSTANTS AND LITERALS                                       *
***********************************************************************
         SPACE
         PRINT NOGEN
SSNAME   DC    C'TLBL'             SUBSYSTEM NAME FOR SSCVT LOOKUP
         SPACE
TRIGGER  DC    C'IEC705I TAPE ON '
         SPACE
GETWORK  DC    0A(*-*),AL1(WORKSUBP),AL3(WORKLEN)
GETLBLOK DC    0A(*-*),AL1(LABELSBP),AL3(LABELLEN)
         SPACE
ENQL     ENQ   (*-*,*-*,E,L'TLBLRNAM,SYSTEM),RET=TEST,MF=L
         SPACE
JOBQHRDL EQU   X'10'               LENGTH OF IN-CORE JOBQ CB HEADER
         SPACE
EDITMVNO DC    X'40202021'         EDIT MASK - VOLUME SEQUENCE NUMBER
         SPACE
MOVETBL  DS    0D                  TABLE FOR DESTS OF MESSAGE FIELDS
*                                  THESE ENTRIES MUST BE IN THE SAME
*                                  ORDER AS THE FIELDS IN THE MESSAGE
*                                  BEING DISASSEMBLED.
         DC    A(LABELDEV-TLBLABEL,L'LABELDEV-1)
         DC    A(LABELSER-TLBLABEL,L'LABELSER-1)
         DC    A(LABELTYP-TLBLABEL,L'LABELTYP-1)
         DC    A(LABELDEN-TLBLABEL,L'LABELDEN-1)
         DC    A(LABELJOB-TLBLABEL,L'LABELJOB-1)
         DC    A(LABELSTP-TLBLABEL,L'LABELSTP-1)
         DC    A(LABELDSN-TLBLABEL,L'LABELDSN-1)
MOVETBLC EQU   (*-MOVETBL)/L'MOVETBL
         SPACE
TRTDELIM TRT   0(*-*,R6),COMMATBL  EXECUTED - FIND COMMA
MVCFIELD MVC   0(*-*,R2),0(R6)     EXECUTED - MOVE MESSAGE FIELD
         SPACE
         DS    0D
COMMATBL DC    XL256'00'           TRT TABLE TO LOCATE COMMA
         ORG   COMMATBL+C','
         DC    C','
         ORG
         SPACE
         LTORG
         EJECT
***********************************************************************
*        DSECTS                                                       *
***********************************************************************
         SPACE
         PRINT NOGEN
         ACFASVT DSECT=YES
         ACCVT DSECT=YES
         ACUCB DSECT=YES
         CVT   DSECT=YES
         DCBD  DSORG=PS,DEVD=DA
TIOT     DSECT
         IEFTIOT1
         IEFJESCT
JFCB     DSECT
         IEFJFCBN
         IEFJSCVT
UCB      DSECT
         IEFUCBOB
         IEFJSSIB
         IEZDEB
         IEZJSCB
         IEZVX100
         IHAASCB
         IHAECB
         IHAPSA
         IKJTCB DSECT=YES
         EJECT
         PRINT GEN
WORKAREA DSECT
WORKSUBP EQU   230
WORKSAVE DS    18F
WORKENQ  ENQ   (*-*,*-*,,*-*,),MF=L
WORKENQL EQU   *-WORKENQ
WORKPOST POST  *-*,ASCB=*-*,ERRET=*-*,ECBKEY=YES,MF=L
WORKCVD  DS    D                   CVD RESULT WORKAREA
WORKLEN  EQU   *-WORKAREA
         SPACE
         REGS
         SPACE
         TLBLCVT
         SPACE 2
         TLBLABEL
         SPACE 3
         END
