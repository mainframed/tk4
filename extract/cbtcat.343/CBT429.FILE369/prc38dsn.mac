PRC      TITLE 'STORE THE DSN FOR A DDNAME IN A DIALOG VARIABLE.'
*********************************************************************
*                                                                   *
*   THIS ROUTINE RUNS UNDER CONTROL OF THE ISPF DIALOG MANAGER.     *
*   GIVEN AN ALLOCATED DDNAME VIA THE PARM FIELD, WE RETURN THE     *
*   DSN AND VOLSER IN DIALOG VARIABLES OUTDSN AND OUTVOL.  DESIGNED *
*   FOR USE IN THE PRC 3.8 REPLACEMENT CLISTS SO WE CAN USE VIO     *
*   FOR OUR TEMPORARY FILES.                                        *
*                                                                   *
*   TO USE -                                                        *
*     ISPEXEC SELECT PGM(PRC38DSN) PARM(DDNAME)                     *
*     ISPEXEC VGET (OUTDSN OUTVOL)                                  *
*                                                                   *
*   05/01/86 - L01 PTW IMPLEMENTED                                  *
*                                                                   *
*********************************************************************
         LCLC  &CSECT
&CSECT   SETC  'PRC38DSN'
&CSECT   CSECT ,
*********************************************************************
*                                                                   *
*        I N I T I A L I Z E   A N D   D E T E R M I N E            *
*        T Y P E   O F   C A L L.                                   *
*                                                                   *
*********************************************************************
         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME
         LR    R12,R15            ESTABLISH BASE.
         USING &CSECT,R12         TELL ASSEMBLER.
         LR    R11,R1             ESTABLISH BASE.
         GETMAIN RU,LV=DYNLEN     GET DYNAMIC AREA.
         LR    R2,R13             SAVE AREA
         LR    R13,R1             SAVE AREA
         USING DYNAMIC,R13        TELL ASSEMBLER.
         LA    R0,DYNAMIC         ZERO
         LA    R1,DYNLEN            DYNAMIC
         LR    R14,R0                 STORAGE.
         SLR   R15,R15
         MVCL  R0,R14             DO IT.
         ST    R2,4(,R13)         BACK CHAIN.
         ST    R13,8(,R2)         FORWARD CHAIN.
         XC    RC,RC              ASSUME GOOD RC.
         MVC   RDJFCB(RDJFCBL),XRDJFCB
         MVC   DCB(DCBL),XDCB                MOVE DCB INTO WORK AREA
         MVC   CALL(CALLL),XCALL               MOVE DCB INTO WORK AREA
         MVC   (DCBDDNAM-D)+DCB,=CL8' '
         L     R2,0(,R11)
         LH    R3,0(,R2)                LOAD PARM LENGTH
         LTR   R3,R3                   TEST PARM LENGTH
         BZ    BADPARM
         CH    R3,=H'8'                PARM LENGTH <= 8?
         BH    BADPARM                 NO - BAD PARM
         BCTR  R3,0                    DEDUCT 1 FOR EX
         EX    R3,MVCDDNAM             MOVE PARM INTO DCB DDNAME
         LA    R2,JFCB
         ST    R2,EXLST                STORE JFCB ADDR INTO EXLST
         MVI   EXLST,X'87'             SET INDICATOR BYTE
         LA    R2,EXLST
         ST    R2,(DCBEXLST-D)+DCB     STORE EXLST ADDR INTO DCB
         LA    R2,DCB
         ST    R2,RDJFCB               STORE DCB ADDR INTO RDJFCB LIST
         MVI   RDJFCB,HIORDER         TURN ON HIGH-ORDER BIT
         RDJFCB MF=(E,RDJFCB)
         LTR   R15,R15
         BNZ   BADPARM
*        TPUT  JFCB,44
         LOAD  EP=ISPLINK
         ST    R0,ISPLINK
         L     R15,ISPLINK
         CALL  (15),(=CL8'VREPLACE',=CL8'OUTDSN',=A(L'OUTDSN),OUTDSN), X
               VL,MF=(E,CALL)
         LTR   R15,R15
         BNZ   BADCALL
         L     R15,ISPLINK
         CALL  (15),(=CL8'VREPLACE',=CL8'OUTVOL',=A(L'OUTVOL),OUTVOL), X
               VL,MF=(E,CALL)
         LTR   R15,R15
         BNZ   BADCALL
         L     R15,ISPLINK
         CALL  (15),(=CL8'VPUT',=C'(OUTDSN OUTVOL)',=CL8'SHARED'),     X
               VL,MF=(E,CALL)
         LTR   R15,R15
         BNZ   BADCALL
         DELETE EP=ISPLINK
RETURN   DS    0H
         LH    R2,RC                  R2 = RC.
         LR    R1,R13              PREPARE
         L     R13,4(,R13)         FOR FREEMAIN.
         FREEMAIN RU,LV=DYNLEN,A=(1)
         LR    R15,R2              AND RETURN
         RETURN (14,12),RC=(15)      WITH R15 = RC.
BADPARM  DS    0H
         MVC   RC,=F'16'              R2 = RC.
*        TPUT  =C'BADPARM',7
         B     RETURN
BADCALL  DS    0H
         MVC   RC,=F'16'              R2 = RC.
*        TPUT  =C'BADCALL',7
         B     RETURN
MVCDDNAM MVC   (DCBDDNAM-D)+DCB(*-*),2(R2)
XRDJFCB  RDJFCB 0,MF=L
RDJFCBL  EQU   *-XRDJFCB
XDCB     DCB   DDNAME=DDNAME,MACRF=R,DSORG=PS
DCBL     EQU   *-XDCB
XCALL    CALL  ,(,,,,,,,,),VL,MF=L
CALLL    EQU   *-XCALL
         LTORG ,
*********************************************************************
*                                                                   *
*        D Y N A M I C   A R E A S.                                 *
*                                                                   *
*********************************************************************
DYNAMIC  DSECT
SAVE     DS    18F                     SAVE AREA
EXLST    DS    A
RC       DS    F
ISPLINK  DS    A
JFCB     DS    XL176
OUTDSN   EQU   JFCB,44,C'C'
OUTVOL   EQU   JFCB+118,6,C'C'
DCB      DS    XL(DCBL)
RDJFCB   DS    XL(RDJFCBL)
CALL     DS    XL(CALLL)
DYNLEN   EQU   *-DYNAMIC
         PUSH  PRINT
         PRINT NOGEN
         IHADCB
D        EQU   IHADCB
         POP   PRINT
BACK     EQU   X'04',4
SAVR1    EQU   X'18',4
HIORDER  EQU   X'80'
R0       EQU   00
R1       EQU   01
R2       EQU   02
R3       EQU   03
R4       EQU   04
R5       EQU   05
R6       EQU   06
R7       EQU   07
R8       EQU   08
R9       EQU   09
R10      EQU   10
R11      EQU   11                 A(PLIST).
R12      EQU   12                 PROGRAM BASE.
R13      EQU   13                 A(SAVE AREA).
R14      EQU   14
R15      EQU   15
         END   &CSECT
