         TITLE 'LM01603 -- IO COUNTS IN DEALLOCATION MESSAGES'
*-------
*------- TITLE LM01603...I/O COUNT IN MSGS IEF283I, IEF285I, IEF287I
*-------
*------- AUTHOR LARRY KRAUSE...LITTON COMPUTER SERVICES 1978
*-------
*------- BACKGROUND AS FAR AS I KNOW, LARRY IS THE ONLY ONE TO
*-------       WRITE A MVS VERSION  OF THIS MOD,  ALTHOUGH IT
*-------       COMMON IN MVT (RICK  DUVALL...CSC) AND SVS (AUTHOR
*-------       UNKNOWN).  THIS VERSION HAS BEEN RECODED IN ASMTOZAP
*-------       FORMAT FOR MVS SP1.3, WITH SOME COSMETIC CHANGES.
*-------       DICK SZIEDE...CSC 1982.
*------- UPDATED FOR XA.
*-------       IEFAB4B0 AT JBB2110, IEFAB4A2 AT JBB2125.
*-------       MORE COSMETIC CHANGES AND INCREASE THE NUMBER
*-------       OF COUNT DIGITS. REMOVED CHECK FOR MSGID TO
*-------       ENABLE IEF283I AND IEF287I.
*-------       ADDED LOOP TO SUM UP COUNTS WHEN MULTIPLE UNITS
*-------       ARE ALLOCATED.
*-------       ENHANCED TO SHOW COUNTS FOR VIO DATASETS.
*-------       CHARLIE PITTS - PRC, DULLES AIRPORT - 1985
*------- UPDATED FOR DFP2.
*-------       IEFAB4B0 AT JBB2110, IEFAB4A2 AT UZ84611.
*-------       CORRECTED S0C4 WHEN DEALLOC IS FROM MSTR (JSCBTCBP
*-------       OF ZERO). ADDED OTHER CHECKS FOR ZERO POINTERS.
*-------       CHARLIE PITTS - PRC, DULLES AIRPORT - 1988
*-------
*-------
*-------
         SPACE 2
*ZAP     CARD ++ USERMOD(LM01603)          /* IO COUNTS IN IEF283I,
*ZAP     CARD                                 IEF285I, AND IEF287I
*ZAP     CARD                                 ASM-TO-ZAP SOURCE FROM
*ZAP     CARD                                 SYSA.USERMOD.ASM.     */.
*ZAP     CARD ++ VER(Z038) FMID(JBB2110) SUP(LM01602) .
*ZAP     CARD ++ ZAP (IEFAB4B0).
*ZAP     CARD    NAME IEFAB4B0
*ZAP     CARD  EXPAND IEFAB4B0(188)
         SPACE 2
*               EQUATES FOR LOCATIONS WITHIN IEFAB4B0
         SPACE
@PSTART  EQU   IEFAB4B0+X'22'
CLRKEY   EQU   IEFAB4B0+X'66'
CLRTXT   EQU   IEFAB4B0+X'8A'
STEAL    EQU   IEFAB4B0+X'16A'
@EL00001 EQU   IEFAB4B0+X'300'
@SIZDATD EQU   IEFAB4B0+X'44C'
PATCH    EQU   IEFAB4B0+X'4C8'
         SPACE
*              AND OF COURSE, THE REGISTERS
         SPACE
@01      EQU   01
@02      EQU   02
@04      EQU   04
@05      EQU   05
@06      EQU   06
@10      EQU   10
@11      EQU   11
@12      EQU   12
@13      EQU   13
         EJECT
IEFAB4B0 CSECT
         PRINT ON,GEN,DATA
         SPACE
IEFAB4B0 AMODE 31
IEFAB4B0 RMODE ANY
         SPACE 2
         ORG   @PSTART
         USING @PSTART,@12
         USING @DATD,@11
         SPACE
*ZAP     START VER
         SPACE
         ORG   CLRKEY
         STC   @02,@OLDKEY
         SPACE
         ORG   CLRTXT
         MVC   MSGBUFFR+1(L'MSGBUFFR-1),MSGBUFFR  BLANK ENTIRE BUFFER
         SPACE
         ORG   STEAL
         MVI   MSGDISP+1,C' '      DISPLACED INSTRUCTION
         MVC   MSGDISP+2(L'MSGDISP-2),MSGDISP+1 CLEAR DISP FIELD
         SPACE
         ORG   @EL00001
         IC    @02,@OLDKEY
         SPACE
         ORG   @SIZDATD
         DC    AL1(230),AL3(@ENDATD-@DATD)
         SPACE
         ORG   PATCH
         DC    (PATCHLEN)X'00'
         EJECT
*ZAP     START REP
         SPACE
         ORG   CLRKEY
         STC   @02,@NEWKEY
         SPACE
         ORG   CLRTXT
         MVC   MSGBUFFR+1(NEWBUFLN-1),MSGBUFFR BLANK IT
         SPACE
         ORG   STEAL
         B     PATCHOUT
MAINLINE DS    0H
         MVC   MSGDISP+2(L'MSGDISP-3),MSGDISP+1 ONE BYTE LESS
         SPACE
         ORG   @EL00001
         IC    @02,@NEWKEY
         SPACE
         ORG   @SIZDATD
         DC    AL1(230),AL3(@NEWDATD-@DATD)
         SPACE
         ORG   PATCH
PATCHOUT DS    0H
         MVI   MSGLNGTH+3,NEWBUFLN  SET NEW LENGTH
         USING SAVEAREA,@13
         L     @10,SVHSA            ADDRESS OF IEFAB4A2'S SAVE AREA
         USING SAVEAREA,@10
         DROP  @13
         L     @10,SVREG10          IEFAB4A2'S R10
         USING #DATD,@10            IEFAB4A2'S WORKAREA
         ICM   @10,B'1111',DSABPTR  ADDRESS OF DSAB
         BZ    PATCHXIT             EXIT IF NO DSAB
         USING DSAB,@10
         SPACE
         ICM   @10,B'1111',DSABTIOT ADDRESS OF TIOT ENTRY
         BZ    PATCHXIT             EXIT IF NOT THERE
         USING TIOELNGH,@10
         SPACE
         ICM   @01,B'1111',PJSCBPTR ADDRESS OF JSCB POINTER
         BZ    PATCHXIT             EXIT IF NOT THERE
         ICM   @01,B'1111',0(@01)   ADDRESS OF JSCB
         BZ    PATCHXIT             EXIT IF NOT THERE
         USING IEZJSCB,@01
         SPACE
         ICM   @05,B'1111',JSCBTCBP ADDRESS OF INIT'S TCB
         BZ    PATCHXIT             EXIT IF NOT THERE
         USING TCB,@05
         SPACE
         ICM   @01,B'1111',JSCTMCOR ADDRESS OF TIOT MGMT AREA
         BZ    PATCHXIT             EXIT IF NOT THERE
         USING TIOPREFX,@01
         S     @10,TIOTPTR          CALC TIOT ENTRY OFFSET
         DROP  @10
         SPACE
         XR    @04,@04              INSURE CLEAR HI-PART OF ADDRESS
         ICM   @04,B'0111',TCBTCTB  ADDRESS OF TIMING CONTROL TABLE
         USING SMFTCT,@04
         BZ    PATCHXIT             EXIT IF NONE
         SPACE
         L     @04,TCTIOTBL         ADDRESS OF TCT I/O TABLE
         USING TCTTIOT,@04
         LA    @05,TCTDCBTD         ADDRESS OF 1ST DD LOOKUP TABLE ENT
         USING TCTIODSP,@05
         SPACE
         XR    @06,@06              CLEAR WORK REGISTER
         SPACE
PATCHDDL DS    0H
         C     @10,TCTDCBTD         DO THE TIOT DISPLACEMENTS MATCH?
         BE    PATCHGOT                  YES ==> PRINT I/O COUNT.
         C     @06,TCTDCBTD         LAST ENTRY IS ZERO
         BE    PATCHXIT                  EXIT IF ZERO.
         LA    @05,TCTDCBLE         BUMP TO NEXT DD TABLE ENTRY
         B     PATCHDDL
         SPACE
PATCHGOT DS    0H
         A     @04,TCTIOTSD         OFFSET TO THE DEVICE ENTRY
         USING TCTDDENT,@04
         DROP  @05
         SPACE
         C     @06,TCTUCBP          UCB ADDRESS EXIST?
         BNE   PATCHPRT             YEP...ONWARD TO COUNTS
         TM    TCTFLGS,TCTVAMDS     VIO DATASET? (NO UCB)
         BNO   PATCHXIT             NOPE...SYSIN/SYSOUT/TERM=TS ETC
PATCHPRT DS    0H
         SPACE
         XR    @05,@05              CLEAR LOOP COUNTER
         XR    @06,@06              CLEAR ACCUMULATOR
         IC    @05,TCTSCTR          UCB COUNT
         SPACE
PATCHADD DS    0H
         A     @06,TCTDCTR          ADD IO COUNT
         LA    @04,TCTDDLEN(,@04)   NEXT UCB ENTRY
         BCT   @05,PATCHADD         LOOP
         SPACE
         CVD   @06,MSGDISP+1        INTO PACKED FORMAT
         MVC   MSGCOUNT,EDITMASK    PREPARE TO EDIT
         ED    MSGCOUNT,MSGDISP+4   STICK IN SOME COMMAS
         MVI   MSGCOUNT,C'*'        MARK WITH A SPLAT
         SPACE
PATCHXIT DS    0H
         MVI   MSGDISP+1,C' '       DISPLACED INSTRUCTION
         SPACE
         B     MAINLINE
         SPACE
*                - N N N , N N N , N N N
         SPACE
EDITMASK DC    X'602020206B2020206B202120'
         SPACE
PATCHEND DS    0H
PATCHLEN EQU   PATCHEND-PATCHOUT
         SPACE
*ZAP     END
         EJECT
@DATD    DSECT ,                    IEFAB4B0 WORKAREA
         DS    XL(X'48')
@PC00001 DS    5F                   PARAMETER LIST PASSED TO IEFAB4B0
         ORG   @PC00001
PMSGDATA DS    A
PVSLPTR  DS    A
PDSNPTR  DS    A
PERRCOD  DS    A
PJSCBPTR DS    A
         DS    XL(X'58')
MSGLNGTH DS    F
         DS    2F
MSGBUFFR DS    CL74
MSGDISP  EQU   MSGBUFFR+55,13,C'C'
@OLDKEY  DS    AL1
         DS    XL5
@ENDATD  EQU   *                   END OF ORIGINAL IEFAB4B0 WORKAREA
         SPACE
         ORG   MSGDISP+L'MSGDISP-1 TRYING TO KEEP THE COUNT WITHIN THE -
                                   AREA VISABLE UNDER ISPF BROWSE
MSGCOUNT DS    CL(L'EDITMASK)      NEW FIELD FOR COUNT
NEWBUFLN EQU   *-MSGBUFFR          NEW BUFFER LENGTH
@NEWKEY  DS    AL1                 REPLACEMENT FOR DISPLACED FIELD
         DS    0D                  ALIGN TO DOUBLEWORD FOR GETMAIN
@NEWDATD EQU   *
         SPACE 2
#DATD    DSECT ,                   IEFAB4A2 WORKAREA
         DS    XL(X'138')
DSABPTR  DS    A
         SPACE 2
MSGDATA  DSECT ,                   MSGDATA PARAMETER
MSGID    DS    X                   INDEX INTO MSGID TABLE
MSGFLAGS DS    X                   MESSAGE PROCESSING FLAGS
DISPID   DS    X                   INDEX INTO DISPID TABLE
         EJECT
SAVEAREA DSECT ,                   STANDARD OS SAVEAREA
SVWORD1  DS    A
SVHSA    DS    A                   HIGHER SAVE AREA
SVLSA    DS    A                   LOWER SAVE AREA
         DS    12A                 REGS 14-15,0-9
SVREG10  DS    A
         DS    2A                  REGS 11-12
         SPACE 2
TIOPREFX DSECT ,                   TIOT PREFIX (SEE IEFAB4FC)
         DS    XL(X'18')
TIOTPTR  DS    A                   ADDRESS OF TIOT
         SPACE 2
         PRINT NOGEN,NODATA
         IHADSAB  ,                DASB
         IEZJSCB  ,                JSCB
         IKJTCB   ,                TCB
TIOT     DSECT    ,                TIOT
         IEFTIOT1 ,                TIOT
         IEFTCT   ,                TCT
         SPACE 3
         END
