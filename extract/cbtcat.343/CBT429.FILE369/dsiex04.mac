PRC      TITLE 'NCCF EXIT04 FOR LOGGING MSGS TO THE SYSTEM LOG.'
********************************************************************
*                                                                  *
* DSIEX04 -                                                        *
*   NCCF'S OWN LOGGING FACILITY IS PRETTY USELESS.  THIS EXIT      *
*   PROVIDES AN ALTERNATIVE.                                       *
*                                                                  *
*   WE GET A LOOKSIE AT ALL NCCF TERMINAL INPUTS AND OUTPUTS BEFORE*
*   NCCF DOES ITS OWN LOGGING.  WE DECIDE WHAT'S IMPORTANT AND WTO *
*   IT FOR POSTERITY.  NOTE THAT DSILOG TASK MUST BE ACTIVE FOR    *
*   THIS EXIT TO BE INVOKED.                                       *
*                                                                  *
* LOG -                                                            *
*   11/08/85 - PTW     IMPLEMENTATION                              *
*   11/26/85 - PTW L02 ALLOW 8 CHARACTERS FOR OPID (AXXNCPPT)      *L02
*   02/22/88 - PTW L03 REDO                                        *L03
*                                                                  *
********************************************************************
         PRINT NOGEN
         LCLC   &CSECT
&CSECT   SETC   'DSIEX04'
&CSECT   CSECT ,
         DSICBS DSITIB,DSISWB,DSIUSE,DEFER=THESE
********************************************************************
*                                                                  *
*        I N I T I A L I Z E                                       *
*                                                                  *
********************************************************************
         SAVE  (14,12),,&CSECT-&SYSDATE-&SYSTIME
         LR    R12,R15                 SET UP BASE REG.
         USING &CSECT,R12
         LR    R11,R1                  R11 = A(DSIUSE PARM LIST).
         USING DSIUSE,R11
         LR    R2,R13                  USE SUPPLIED SAVE AREA
         L     R13,USERSWB               IN SWB PASSED TO US.
         LA    R13,SWBSAVEA-DSISWB(,R13)
         USING SWBSAVEA,R13
         ST    R13,8(,R2)              BACK AND FORWARD CHAIN.
         ST    R2,4(,R13)
********************************************************************
*                                                                  *
*        W T O   S E L E C T E D   T R A F F I C                   *
*                                                                  *
********************************************************************
         L     R10,USERMSG             R10 = A(MSG BUFFER).
         USING BUFHDR,R10
         LH    R9,HDRTDISP             R9 = A(MSG TEXT).
         LA    R9,0(R10,R9)
         USING MSG,R9
         CLI   HDRMTYPE,HDRTYPET       TERMINAL INPUT
         BE    TRYCMD
         CLI   HDRMTYPE,HDRTYPEC       CMD OR MSG FROM CLIST
         BNE   ENDCMD
TRYCMD   DS    0H
         CLC   =C'IST',MSGTEXT         IST* MESSAGES FROM CLISTS
         BE    GOTMSG
         LA    R2,CMDTAB
         USING CMD,R2
         SLR   R3,R3
CMDLOOP  DS    0H
         CLI   CMDLEN,255
         BE    ENDCMD
         IC    R3,CMDLEN
         BCTR  R3,0
         EX    R3,CLCCMD
         BE    GOTMSG
         LA    R2,L'CMDLEN+1(R3,R2)
         B     CMDLOOP
ENDCMD   DS    0H
         CLI   HDRMTYPE,HDRTYPEJ       NCCF GENERATED (IST TRAFFIC)
         BNE   ENDTYPEJ
         CLC   =C'IST',MSGTEXT         WE ONLY WANT IST* MESSAGES
         BE    GOTMSG
         B     ENDMSG
ENDTYPEJ DS    0H
         CLI   HDRMTYPE,HDRTYPEQ       VTAM UNSOLICITED
         BE    GOTMSG
         CLI   HDRMTYPE,HDRTYPEV       VTAM SOLICITED
         BNE   ENDMSG                  TAKE NO ACTION FOR OTHER MSGS
GOTMSG   DS    0H
         MVC   WTO(WTOLEN),XWTO        INIT WTO LIST.
         MVC   WTOMSG(L'HDRDOMID),HDRDOMID
         LA    R2,WTOMSG
BLOOP1   DS    0H
         CLI   0(R2),C' '
         BE    ELOOP1
         LA    R2,1(,R2)
         B     BLOOP1
ELOOP1   DS    0H
         MVI   0(R2),C'/'
         LA    R2,1(,R2)
         L     R3,USEROPID             MOVE IN NCCF OPID.
         MVC   0(8,R2),0(R3)
BLOOP2   DS    0H
         CLI   0(R2),C' '
         BE    ELOOP2
         LA    R2,1(,R2)
         B     BLOOP2
ELOOP2   DS    0H
         MVI   0(R2),C':'
         LA    R2,2(,R2)
         LA    R4,WTOMSG+WTOMSGL
         SLR   R4,R2
         LH    R3,HDRMLENG             MAKE SURE WE DON'T OVERFLOW
         CLR   R3,R4
         BNH   *+6
         LR    R3,R4
         BCTR  R3,0
         EX    R3,MVCWTO               MOVE MSG TEXT TO WTO.
         WTO   MF=(E,WTO)
ENDMSG   DS    0H
********************************************************************
*                                                                  *
*        R E T U R N                                               *
*                                                                  *
********************************************************************
RETURN   DS    0H
         LA    R15,USERASIS            SET RC = 0.
         L     R13,4(,R13)
         RETURN (14,12),RC=(15)
         DROP  R10
********************************************************************
*                                                                  *
*        S T A T I C   A R E A S                                   *
*                                                                  *
********************************************************************
CMDTAB   DS    0C
         DC    AL1(2),C'D '
         DC    AL1(8),C'DISPLAY '
         DC    AL1(2),C'F '
         DC    AL1(7),C'MODIFY '
         DC    AL1(2),C'V '
         DC    AL1(5),C'VARY '
         DC    AL1(255)
CLCCMD   CLC   CMDNAME(*-*),MSGTEXT
MVCWTO   MVC   0(*-*,R2),MSGTEXT
XWTO     WTO   '                                                       X
                                                                 ',    X
               ROUTCDE=14,MCSFLAG=HRDCPY,MF=L                       L02
WTOLEN   EQU   *-XWTO
WTOMSGL  EQU   *-XWTO-8                LENGTH FOR ACTUAL MSG TEXT.  L02
         LTORG *
********************************************************************
*                                                                  *
*        D Y N A M I C   A R E A S                                 *
*                                                                  *
********************************************************************
         DSICBS DEFER=INCLUDE,PRINT=NO ,EJECT=YES
*
DSISWB   DSECT ,
         ORG   SWBADATD
         DS    0F
WTO      DS    CL(WTOLEN)
WTOMSG   EQU   WTO+4                   JUMP OVER ROUTE AND DESC CODE
*
MSG      DSECT ,
MSGTEXT  DS    0C
*
CMD      DSECT
CMDLEN   DS    AL1
CMDNAME  DS    0C
         PRINT OFF
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT ON
         END   &CSECT
