LAA      TITLE 'LAA - EXPANDED, DEFAULT-ONLY, ALLOCATION LISTER.'
*%A PPLINK NOTEST AMODGEN
         SPACE 1
***********************************************************************
*                                                                     *
*  COPYRIGHT 1978, 1992 BY JEFFREY R. BROIDO.  ALL RIGHTS RESERVED.   *
*                                                                     *
*  LICENSE IS HEREBY GRANTED TO PERSHING SYSTEMS, INCORPORATED        *
*  COMPANY, JERSEY CITY, NJ AND ITS AFFILIATES TO USE THIS            *
*  PROGRAM.  HOWEVER, IT MUST NOT BE SOLD, GIVEN, OR OTHERWISE        *
*  DISTRIBUTED TO ANY OTHER COMPANY OR DATA CENTER WITHOUT PRIOR      *
*  WRITTEN PERMISSION OF:                                             *
*                                                                     *
*                                  BROIDO COMPUTER CONSULTING         *
*                                  104 MILLS STREET                   *
*                                  MORRISTOWN, N.J.  07960            *
*                                                                     *
***********************************************************************
         SPACE 1
***********************************************************************
*                                                                     *
*        LAA -  PROGRAM TO LIST ALLOCATION IN A FASHION SIMILAR TO    *
*               LISTALC COMMAND.  THIS COMMAND TAKES NO OPERANDS,     *
*               AND PRINTS THE DATASETS, WITH DDNAMES, IN A MORE      *
*               LINEWISE-COMPACT WAY THAN LISTALC.                    *
*                                                                     *
*                                  JEFFREY R. BROIDO - 20 FEB 78      *
*                                  COLGATE-PALMOLIVE, PISCATAWAY.     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        MODIFIED 1 FEB 79 AT J & J MIC TO TAKE A K OPERAND TO        *
*                 CLEAR THE SCREEN OF A DISPLAY TUBE BEFORE           *
*                 EXECUTION.                                          *
*                                                 JRB                 *
*                                                                     *
*        MODIFIED 8 JUL 92 AT PERSHING TO WORK PROPERLY WITH          *
*                 SWA ABOVE THE LINE.                                 *
*                                                 JRB                 *
*                                                                     *
***********************************************************************
*
*        %GOTO QDBL1;  /*
         MACRO
         IHAQDB &DSECT=YES    */
*%QDBL1 : ;
*
*/* **************************************************************** */
*/*                                                                  */
*/*                         QUEUE DESCRIPTOR BLOCK                   */
*/*                                                                  */
*/*  OS/VS2 RELEASE 2, 08/02/72, LEVEL=1                             */
*/*                                                                  */
*/*  METHOD OF ACCESS                                                */
*/*      BAL   - DSECT IS PRODUCED UNLESS DSECT=NO IS SPECIFIED.     */
*/*              USING ON QDB GIVES ADDRESSABILITY FOR ALL SYMBOLS.  */
*/*      PL/S  - DCL QDBPTR PTR                                      */
*/*                                                                  */
*/* **************************************************************** */
*%GOTO QDBL2;  /*
         SPACE 1
         AIF ('DSECT' EQ 'NO').QDB10
QDB      DSECT
         AGO   .QDB20
.QDB10    ANOP
         DS    0D
QDB      EQU   *
.QDB20   ANOP
QDBQDB   DS    CL4 -          ACRONYM IN EBCDIC -QDB-
QDBATTR  DS    BL2 -          QUEUE ATTRIBUTES
QDBRV001 DS    H -            RESERVED
QDBNELMS DS    F -            NUMBER OF ELEMENTS ON QUEUE
QDBFELMP DS    A -            POINTER TO FIRST ELEMENT
QDBLELMP DS    A -            POINTER TO LAST ELEMENT
QDBFPTDS DS    H -            FORWARD POINTER DISPLACEMENT
QDBBPTDS DS    H -            BACKWARD POINTER DISPLACEMENT
QDBPRSZ  DS    H -            PRIORITY FIELD SIZE
QDBPRDS  DS    H -            PRIORITY FIELD DISPLACEMENT
QDBRV002 DS    A -            RESERVED
         MEND  , -  */
*%QDBL2 : ;
*
*DECLARE
*  1 QDB     BASED(QDBPTR)  BDY(WORD),
*   2 QDBQDB      CHAR(4) BDY(WORD),     /* ACRONYM IN EBCIDIC -QDB- */
*   2 QDBATTR     CHAR(2),               /* QUEUE ATTRIBUTES         */
*   2 QDBRV001    FIXED(15),             /* RESERVED                 */
*   2 QDBNELMS    FIXED(31),             /* NUMBER OF ELEMENTS ON
*                                           QUEUE                    */
*   2 QDBFELMP    PTR(31),               /* POINTER TO FIRST ELEMENT */
*   2 QDBLELMP    PTR(31),               /* POINTER TO LAST ELEMENT  */
*   2 QDBFPTDS    FIXED(15),             /* FORWARD POINTER
*                                           DISPLACEMENT             */
*   2 QDBBPTDS    FIXED(15),             /* BACKWARD POINTER
*                                           DISPLACEMENT             */
*   2 QDBPRSZ     FIXED(15),             /* PRIORITY FIELD SIZE      */
*   2 QDBPRDS     FIXED(15),             /* PRIORITY FIELD
*                                           DISPLACEMENT             */
*   2 QDBRV002    PTR(31);               /* RESERVED                 */
*
         SPACE 3
LAA      CSECT
LAA      AMODE 31
LAA      RMODE 24
         REGS
         USING LAA,R15             (ESTABLISH TEMPORARY BASE).
         B     BEGIN               SKIP OVER HEADER.
HEAD0    DC    AL1(HEADL)          EXCLUSIVE LENGTH OF HEADER.
HEAD     DC    C' LAA - &SYSDATE - &SYSTIME -'
         DC    C'COPYRIGHT (C) BROIDO COMPUTER CONSULTING '
         DC    C'1978, 1992 - '
         DC    C'ALL RIGHTS RESERVED'
HEADL    EQU   *-HEAD
         DROP  R15                 (DROP TEMPORARY BASE).
BEGIN    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             COPY BASE.
         USING LAA,R12             (TELL ASSEMBLER).
         LR    R14,R13             COPY CALLER'S SAVE AREA POINTER.
         LA    R13,SAVE            POINT TO MY SAVE AREA.
         ST    R13,8(,R14)         CHAIN ...
         ST    R14,SAVE+4          ... SAVE AREAS.
         SPACE 1
*              LOCATE THE DSAB QUEUE.
         SPACE 1
         LTR   R1,R1               ANY CPPL OR PARM POINTER?
         BZ    LAASTART            B IF NOT.
         L     R2,0(,R1)           POINT TO BUFFER
         LTR   R2,R2               ANY?
         BZ    LAASTART            B IF NOT.
         LH    R3,0(R2)            LOAD LENGTH.
         LTR   R3,R3               ANY?
         BZ    LAASTART            B IF NOT.
         CLI   2(R2),X'00'         COMMAND PROCESSOR INVOKATION?
         BE    LAACP
         LA    R2,2(,R2)           POINT TO PARM.
         B     PARM
LAACP    CH    R3,=H'4'            ANY PARM?
         BE    LAASTART            B IF NOT.
         AH    R2,2(,R2)           POINT TO ...
         LA    R2,4(,R2)           ... PARM.
PARM     OI    0(R2),C' '          UPPERCASE.
         CLI   0(R2),C'K'          CLEAR?
         BNE   LAASTART            B IF NOT.
         GTSIZE
         LTR   R0,R0               DISPLAY?
         BZ    LAASTART            B IF NOT.
         K     ,                   CLEAR SCREEN.
LAASTART L     R5,X'10'            POINT TO THE CVT.
         L     R5,0(,R5)           POINT TO TCB WORDS.
         L     R5,0(,R5)           POINT TO MY TCB.
         USING TCB,R5              (TELL ASSEMBLER).
         L     R5,TCBJSCB          POINT TO MY JSCB.
         USING IEZJSCB,R5          (TELL ASSEMBLER).
         L     R5,JSCDSABQ         POINT TO MY QDB FOR DSAB QUEUE.
         USING QDB,R5              (TELL ASSEMBLER).
         L     R5,QDBFELMP         POINT TO FIRST DSAB.
         USING DSAB,R5             (TELL ASSEMBLER).
         MVI   OUT,X'40'           CLEAR ...
         MVC   OUT+1(OUTLEN-1),OUT ... OUTPUT AREA
         B     CKEND
TLUP     L     R5,DSABFCHN         POINT TO NEXT DSAB.
CKEND    LTR   R5,R5               END OF DSAB QUEUE?
         BNZ   CKDD                B IF NOT
         L     R13,SAVE+4             E
         LM    R14,R12,12(R13)          X
         SR    R15,R15                    I
         BR    R14                          T
CKDD     L     R2,DSABTIOT         POINT TO ASSOCIATED TIOT ENTRY.
         USING TIOENTRY,R2         (TELL ASSEMBLER).
         MVI   DISP,X'40'                CLEAR DISP, TFLAG ...
         MVC   DISP+1(OUTEND-DISP),DISP  ... AND DSN.
         MVC   DDN,TIOEDDNM        MOVE DDNAME
         MVC   DEV,=CL6'Term'      MOVE DEVICE NAME OF TERM.
         TM    TIOELINK,TIOTTERM   IS IT A TERMINAL?
         BO    OUTPUT              B IF YES.
         MVC   DEV,=CL6'Sysout'    MOVE DEV NAME OF SYSOUT.
         LA    R6,EPAL             POINT TO THE EPAL.
         USING ZB505,R6            (TELL ASSEMBLER)
         XC    EPAL,EPAL           CLEAR THE EPAL.
         MVC   SWVA,TIOEJFCB       MOVE TOKEN FOR JFCB TO EPAL.
         SWAREQ FCODE=RL,EPA=EPALPTR,UNAUTH=YES,                       +
               MF=(E,SWAPARMS)     GET ADDRESS OF JFCB.
         L     R4,SWBLKPTR         POINT TO JFCB.
         USING JFCB,R4             (TELL ASSEMBLER).
         TM    TIOELINK,TIOESYOT   IS IT A SUBSYSTEM DATASET?
         BZ    MVDSN               B IF NOT.
         MVC   DSN(6),=C'Class='   MOVE SYSOUT CLASS GRAPHIC.
         L     R15,X'14'(,R5)      POINT TO SIOT.
         XC    EPAL,EPAL           CLEAR THE EPAL.
         MVC   SWVA,DSABSSVA       MOVE TOKEN FOR SIOT TO EPAL.
         SWAREQ FCODE=RL,EPA=EPALPTR,UNAUTH=YES,                       +
               MF=(E,SWAPARMS)     GET ADDRESS OF SIOT.
         L     R15,SWBLKPTR        POINT TO SIOT.
         USING INDMSIOT,R15        (TELL ASSEMBLER).
         MVC   DSN+6(1),SCTOUTPN   MOVE SYSOUT CLASS FROM SIOT.
         DROP  R15
         B     OUTPUT              CONTINUE.
MVDSN    MVC   DSN,JFCBDSNM        MOVE DATASET NAME.
         CLC   =C'NULLFILE ',DSN   DUMMY DATASET?
         BNE   MVVOL               B IF NOT.
         MVC   DEV,=CL6'Dummy'     MOVE DUMMY GRAPHIC.
         B     CKTCAM              CONTINUE.
MVVOL    MVC   DEV,JFCBVOLS        MOVE VOLUME NAME.
CKTCAM   TM    TIOELINK,TIOTREM    TCAM?
         BZ    CKVIO               B IF NOT
         MVC   DSN(11),=C'TCAM Queue:'
         MVC   DEV,=CL6'Queue'     MOVE DEV NAME OF QUEUE (TCAM).
         MVC   DSN+12(8),JFCBDSNM  MOVE DATASET NAME AGAIN.
         B     OUTPUT              CONT.
CKVIO    TM    JFCFLGS1,JFCVRDS    VIO DATASET?
         BZ    GETUNIT             B IF NOT.
         MVC   DEV,=CL6'Vio'       MOVE VIO GRAPHIC.
         B     CKVTOC              CONT.
GETUNIT  CLC   DEV,=CL6' '         HAS DEVICE FIELD BEEN FILLED?
         BNE   CKVTOC              B IF YES.
         SR    R1,R1               LOAD ...
         ICM   R1,7,TIOEFSRT       ... POINTER TO UCB.
         USING UCBCMEXT,R1         (TELL ASSEMBLER)
         MVC   DEV,=CL6'(###)'     MOVE DEVICE GRAPHIC.
         MVC   DEV+1(3),UCBNAME    MOVE DEVICE ADDRESS.
         DROP  R1,R2
CKVTOC   CLI   DSN,X'04'           IS THIS THE DSN FOR VTOC?
         BNE   CKDISP              B IF NOT.
         MVC   DSN,=CL44'           -- Volume Table of Contents --'
CKDISP   MVC   DISP,=C'SHR'        MOVE SHR GRAPHIC.
         TM    JFCBIND2,JFCSHARE   SHARED?
         BO    CKTEMP              B IF YES
         MVC   DISP,=C'NEW'        MOVE NEW GRAPHIC.
         TM    JFCBIND2,JFCNEW     TEST OLD-NEW BITS.
         BO    CKTEMP              B IF NEW.
         MVC   DISP,=C'OLD'        MOVE OLD GRAPHIC.
         TM    JFCBIND2,JFCOLD     OLD?
         BO    CKTEMP              B IF YES.
         MVC   DISP,=C'MOD'        MOVE MOD GRAPHICS.
CKTEMP   TM    DSABFLG1,DSABPALC   PERMANENT ALLOCATION?
         BO    NOTTEMP             B IF YES.
         MVI   TFLAG,C'*'          MOVE TEMP. ALLOCATION FLAG.
NOTTEMP  CLI   JFCBELNM,C' '       MEMBER OR GENERATION?
         BE    OUTPUT              B IF NOT.
MEM      LA    R1,8                LD MAX MEMBER LEN FOR BCT.
         LA    R2,JFCBELNM         PT TO MEMBER.
MEMLUP   CLI   0(R2),C' '          CHAR BLANK?
         BE    MEMLCALC            B IF YES.
         LA    R2,1(,R2)           BUMP POINTER.
         BCT   R1,MEMLUP
MEMLCALC LA    R3,8                CALC ...
         SR    R3,R1               ... MEMBER LENGTH.
         LA    R1,76-(OUT-DSN)     GENERATE ...
         SR    R1,R3               ... DSN SCAN INDEX.
         LA    R2,DSN              POINT TO DSN.
DFBLUP   CLI   0(R2),C' '          CHAR BLANK?
         BE    DFBSET              B IF YES.
         LA    R2,1(,R2)           BUMP POINTER.
         BCT   R1,DFBLUP           LOOK AT ANOTHER CHAR.
         B     OUTPUT              NO ROOM FOR MEMBER.  SKIP IT.
DFBSET   MVI   0(R2),C'('          MOVE PAREN.
         EX    R3,MVMEMB           MOVE MEMBER (+ ONE CHAR).
*      ( MVC   1(*-*,R2),JFCBELNM  )
         LA    R2,0(R2,R3)         BUMP PTR.
         MVI   1(R2),C')'          MOVE PAREN.
OUTPUT   TPUT  OUT,OUTLEN          OUTPUT LINE
         B     TLUP                LOOP.
SAVE     DS    9D
MVMEMB   MVC   1(*-*,R2),JFCBELNM  *** EXECUTED ***
OUT      EQU   *
DDN      DS    CL8,3X
DEV      DS    CL6,3X
DISP     DS    CL3,2X
TFLAG    DS    C
DSN      DS    CL44
OUTEND   EQU   *
OUTLEN   EQU   *-OUT
         SPACE 1
POOP     DC    X'00'               BUFFER.
EPALPTR  DC    A(EPAL)             POINTER TO EPAL.
EPAL     DS    CL28                EPAL.
SWAPARMS SWAREQ MF=L               SWAREQ PARMS
         TITLE '- MAPPING MACROS.'
         IEFZB505 LOCEPAX=YES      MAP THE EPAL.
         CVT   DSECT=YES           MAP THE CVT.
         IEFJESCT                  MAP THE JESCT.
         IEZJSCB                   MAP THE JSCB.
         IKJTCB                    MAP THE TCB.
         IHAQDB                    MAP THE QDB.
         IHADSAB                   MAP THE DSAB.
         IEFTIOT1                  MAP THE TIOT.
JFCB     DSECT
         IEFJFCBN                  MAP THE JFCB.
         IEFASIOT                  MAP THE SIOT.
         IEFUCBOB                  MAP THE UCB.
         END   LAA
