000100 ID DIVISION.
000200 PROGRAM-ID. UNIX0002.
000300 AUTHOR. JOHN MCKOWN.
000400 INSTALLATION. HEALTHAXIS.
000500 DATE-WRITTEN.
000600 DATE-COMPILED.
000700 SECURITY. NONE.
000800
000900 ENVIRONMENT DIVISION.
001000 CONFIGURATION SECTION.
001100 SOURCE-COMPUTER. IBM-370.
001200 OBJECT-COMPUTER. IBM-370.
001300 INPUT-OUTPUT SECTION.
001400 FILE-CONTROL.
001500 I-O-CONTROL.
001600 DATA DIVISION.
001700 FILE SECTION.
001800*
001900 WORKING-STORAGE SECTION.
002000 01  WS-STARTS              PIC X(24)
002100     VALUE IS 'UNIX0001 WS START.'.
002200 01  NEW-LINE               PIC X(1) VALUE IS X'15'.
002300 01  JUNK.
002400     05 JUNK-1              PIC S9(3) PACKED-DECIMAL.
002500     05 JUNK-2 REDEFINES JUNK-1 PIC X(2).
002600 77  INDEX-VALUE            PIC S9(9) BINARY.
002700 77  STDIN                  PIC S9(9) BINARY VALUE IS +0.
002800 77  STDOUT                 PIC S9(9) BINARY VALUE IS +1.
002900 77  STDERR                 PIC S9(9) BINARY VALUE IS +2.
003000 77  RET-VALUE              PIC S9(9) BINARY.
003100 77  RET-CODE               PIC S9(9) BINARY.
003200 77  REASON-CODE            PIC S9(9) BINARY.
003300 77  AALINE                 POINTER.
003400 77  LINE-LENGTH            PIC S9(9) BINARY.
003500 77  BPX1WRT                PIC X(8) VALUE IS 'BPX1WRT'.
003600 77  FNL                    PIC S9(9) BINARY VALUE IS +1.
003700 77  F0                     PIC S9(9) BINARY VALUE IS +0.
003800 77  LINE0A                 PIC X(24)
003900     VALUE IS 'NUMBER OF ARGUMENTS IS:'.
004000 77  LINE0B                 PIC X(35)
004100     VALUE IS 'NUMBER OF ENVIRONMENT VARIABLES IS:'.
004200 77  LINE1                  PIC X(05)
004300     VALUE IS 'ARGC['.
004400 77  LINE2                  PIC X(2)
004500     VALUE IS ']='.
004600 77  LINE3                  PIC X(05)
004700     VALUE IS 'ENV['.
004800 77  FLINE                  PIC 999.
004900*
005000 LINKAGE SECTION.
005100 01  VALUE-ARGC             PIC S9(9) BINARY.
005200* VALUE-ARGC CONTAINS THE NUMBER OF ARGUMENTS ON THE COMMAND LINE
005300*
005400 01  VALUE-ARGVL-ARRAY.
005500     05 VALUE-ARGVL         POINTER
005600                            OCCURS 32767 TIMES
005700                            DEPENDING ON VALUE-ARGC.
005800* VALUE-ARGVL-ARRAY IS AN ARRAY OF POINTERS. THERE ARE
005900* VALUE-ARGC NUMBER OF THEM. EACH POINTER POINTS TO A FULLWORD
006000* (PIC S9(9) BINARY IN COBOL). EACH FULLWORD IS THE LENGTH OF
006100* THE CORRESPONDING ARGUMENT
006200*
006300 01  VALUE-ARGVD-ARRAY.
006400     05 VALUE-ARGVD-PTR     POINTER
006500                            OCCURS 32767 TIMES
006600                            DEPENDING ON VALUE-ARGC.
006700* VALUE-ARGVD-ARRAY IS AN ARRAY OF POINTERS. THERE ARE
006800* VALUE-ARGC NUMBER OF THEM. EACH POINTER POINTS TO A CHARACTER
006900* STRING. THE LENGTH OF THE STRING IS KEPT IN THE CORRESPONDING
007000* VALUE-ARGVL-ARRAY FULLWORD.
007100*
007200 01  VALUE-ENVC             PIC S9(9) BINARY.
007300* VALUE-ENVC CONTAINS THE NUMBER OF ENVIRONMENT VARIABLES.
007400*
007500 01  VALUE-ENVPL-ARRAY.
007600     05 VALUE-ENVPL         POINTER
007700                            OCCURS 32767 TIMES
007800                            DEPENDING ON VALUE-ENVC.
007900* VALUE-ENVPL-ARRAY IS AN ARRAY OF POINTERS. EACH POINTER POINTS
008000* TO A FULLWORD (COBOL PIC S9(9) BINARY). THIS FULLWORD CONTAINS
008100* THE LENGTH OF THE ENVIRONMENT VARIABLE.
008200*
008300 01  VALUE-ENVPD-ARRAY.
008400     05 VALUE-ENVPD-PTR     POINTER
008500                            OCCURS 32767 TIMES
008600                            DEPENDING ON VALUE-ENVC.
008700* VALUE-ENVPD-ARRAY IS AN ARRAY OF POINTERS. EACH POINTER POINTS
008800* TO A CHARACTER STRING. THE LENGTH OF THE STRING IN KEPT IN THE
008900* CORRESPONDING VALUE-ENVPL-ARRAY.
009000*
009100 01  PARM-SELF              POINTER.
009200* THIS SIMPLY POINTS BACK TO THE BEGINNING OF THE PARAMETER
009300* LIST. I HAVE NO IDEA WHY IT IS HERE!
009400*
009500 01  VALUE-LENGTH           PIC S9(9) BINARY.
009600* I USE THIS TO ACCESS THE VALUE OF THE LENGTH OF AN ARGUMENT OR
009700* AN ENVIRONMNET VARIABLE. I DO THIS BY SETTING ITS ADDRESS
009800* (USING COBOL'S "ADDRESS OF" STATEMENT) TO THE CORRESPONDING
009900* ARGUMENT OR ENVIRONMENT VARIABLE LENGTH.
010000*
010100 PROCEDURE DIVISION USING VALUE-ARGC
010200                          VALUE-ARGVL-ARRAY
010300                          VALUE-ARGVD-ARRAY
010400                          VALUE-ENVC
010500                          VALUE-ENVPL-ARRAY
010600                          VALUE-ENVPD-ARRAY
010700                          PARM-SELF.
010800 START-UP.
010900     MOVE VALUE-ARGC TO FLINE
011000*
011100* PUT THE ADDRESS OF LINE0A INTO AALINE
011200     CALL 'GETADDR' USING LINE0A, AALINE
011300     MOVE LENGTH OF LINE0A TO LINE-LENGTH
011400*
011500* WRITE LINE0A TO STDOUT
011600     CALL BPX1WRT USING STDOUT,
011700                        AALINE,
011800                        F0,
011900                        LINE-LENGTH,
012000                        RET-VALUE,
012100                        RET-CODE
012200                        REASON-CODE
012300     MOVE VALUE-ARGC TO FLINE
012400*
012500* PUT THE ADDRESS OF FLINE INTO AALINE
012600     CALL 'GETADDR' USING FLINE, AALINE
012700     MOVE LENGTH OF FLINE TO LINE-LENGTH
012800*
012900* PRINT THE VALUE OF "ARGC" TO STDOUT
013000       CALL BPX1WRT USING STDOUT,
013100                          AALINE,
013200                          F0,
013300                          LINE-LENGTH,
013400                          RET-VALUE,
013500                          RET-CODE
013600                          REASON-CODE
013700*
013800* PUT THE ADDRESS OF NEW-LINE TO AALINE
013900       CALL 'GETADDR' USING NEW-LINE, AALINE
014000*
014100* OUTPUT A "NEW LINE" TO STDOUT
014200       CALL BPX1WRT USING STDOUT,
014300                          AALINE,
014400                          F0,
014500                          FNL,
014600                          RET-VALUE,
014700                          RET-CODE
014800                          REASON-CODE
014900     PERFORM VARYING INDEX-VALUE FROM 1 BY 1
015000       UNTIL INDEX-VALUE IS GREATER THAN VALUE-ARGC
015100*
015200* PUT THE ADDRESS OF LINE1 INTO AALINE
015300       CALL 'GETADDR' USING LINE1, AALINE
015400       MOVE LENGTH OF LINE1 TO LINE-LENGTH
015500*
015600* PRINT "ARGC[" TO STDOUT
015700       CALL BPX1WRT USING STDOUT,
015800                          AALINE,
015900                          F0,
016000                          LINE-LENGTH,
016100                          RET-VALUE,
016200                          RET-CODE
016300                          REASON-CODE
016400       SUBTRACT 1 FROM INDEX-VALUE GIVING FLINE
016500*
016600* PUT THE ADDRESS OF FLINE INTO AALINE
016700       CALL 'GETADDR' USING FLINE, AALINE
016800       MOVE LENGTH OF FLINE TO LINE-LENGTH
016900*
017000* PRINT THE CURRENT VALUE OF THE INDEX TO STDOUT
017100       CALL BPX1WRT USING STDOUT,
017200                          AALINE,
017300                          F0,
017400                          LINE-LENGTH,
017500                          RET-VALUE,
017600                          RET-CODE
017700                          REASON-CODE
017800*
017900* PUT THE ADDRESS OF LINE1 INTO AALINE
018000       CALL 'GETADDR' USING LINE2, AALINE
018100       MOVE LENGTH OF LINE2 TO LINE-LENGTH
018200*
018300* PRINT "]" TO STDOUT
018400       CALL BPX1WRT USING STDOUT,
018500                          AALINE,
018600                          F0,
018700                          LINE-LENGTH,
018800                          RET-VALUE,
018900                          RET-CODE
019000                          REASON-CODE
019100       SET ADDRESS OF VALUE-LENGTH TO
019200           VALUE-ARGVL ( INDEX-VALUE )
019300*
019400* OUTPUT THE "N" ARGUMENT TO STDOUT
019500       CALL BPX1WRT USING STDOUT,
019600                          VALUE-ARGVD-PTR ( INDEX-VALUE) ,
019700                          F0,
019800                          VALUE-LENGTH,
019900                          RET-VALUE,
020000                          RET-CODE
020100                          REASON-CODE
020200*
020300* PUT THE ADDRESS OF NEW-LINE TO AALINE
020400       CALL 'GETADDR' USING NEW-LINE, AALINE
020500*
020600* OUTPUT A "NEW LINE" TO STDOUT
020700       CALL BPX1WRT USING STDOUT,
020800                          AALINE,
020900                          F0,
021000                          FNL,
021100                          RET-VALUE,
021200                          RET-CODE
021300                          REASON-CODE
021400     END-PERFORM.
021500     MOVE VALUE-ENVC TO FLINE
021600*
021700* PUT THE ADDRESS OF LINE0B TO AALINE
021800     CALL 'GETADDR' USING LINE0B, AALINE
021900     MOVE LENGTH OF LINE0B TO LINE-LENGTH
022000*
022100* OUTPUT THE NUMBER OF ENVIRONMENT VARIABLES TO STDOUT
022200     CALL BPX1WRT USING STDOUT,
022300                        AALINE,
022400                        F0,
022500                        LINE-LENGTH,
022600                        RET-VALUE,
022700                        RET-CODE
022800                        REASON-CODE
022900     MOVE VALUE-ENVC TO FLINE
023000*
023100* PUT THE ADDRESS OF FLINE INTO AALINE
023200     CALL 'GETADDR' USING FLINE, AALINE
023300     MOVE LENGTH OF FLINE TO LINE-LENGTH
023400*
023500* PRINT THE VALUE OF "ARGC" TO STDOUT
023600       CALL BPX1WRT USING STDOUT,
023700                          AALINE,
023800                          F0,
023900                          LINE-LENGTH,
024000                          RET-VALUE,
024100                          RET-CODE
024200                          REASON-CODE
024300*
024400* PUT THE ADDRESS OF NEW-LINE TO AALINE
024500       CALL 'GETADDR' USING NEW-LINE, AALINE
024600*
024700* OUTPUT A "NEW LINE" TO STDOUT
024800       CALL BPX1WRT USING STDOUT,
024900                          AALINE,
025000                          F0,
025100                          FNL,
025200                          RET-VALUE,
025300                          RET-CODE
025400                          REASON-CODE
025500     PERFORM VARYING INDEX-VALUE FROM 1 BY 1
025600       UNTIL INDEX-VALUE IS GREATER THAN VALUE-ENVC
025700       SET ADDRESS OF VALUE-LENGTH
025800           TO VALUE-ENVPL ( INDEX-VALUE )
025900*
026000* PUT THE ADDRESS OF LINE3 TO AALINE
026100       CALL 'GETADDR' USING LINE3, AALINE
026200       MOVE LENGTH OF LINE3 TO LINE-LENGTH
026300*
026400* OUTPUT A "ENV[" TO STDOUT
026500       CALL BPX1WRT USING STDOUT,
026600                          AALINE,
026700                          F0,
026800                          LINE-LENGTH,
026900                          RET-VALUE,
027000                          RET-CODE
027100                          REASON-CODE
027200       SUBTRACT 1 FROM INDEX-VALUE GIVING FLINE
027300*
027400* PUT THE ADDRESS OF FLINE TO AALINE
027500       CALL 'GETADDR' USING FLINE, AALINE
027600       MOVE LENGTH OF FLINE TO LINE-LENGTH
027700*
027800* OUTPUT THE CURRENT INDEX VALUE TO STDOUT
027900       CALL BPX1WRT USING STDOUT,
028000                          AALINE,
028100                          F0,
028200                          LINE-LENGTH,
028300                          RET-VALUE,
028400                          RET-CODE
028500                          REASON-CODE
028600*
028700* PUT THE ADDRESS OF LINE2 TO AALINE
028800       CALL 'GETADDR' USING LINE2, AALINE
028900       MOVE LENGTH OF LINE2 TO LINE-LENGTH
029000*
029100* OUTPUT A "]" TO STDOUT
029200       CALL BPX1WRT USING STDOUT,
029300                          AALINE,
029400                          F0,
029500                          LINE-LENGTH,
029600                          RET-VALUE,
029700                          RET-CODE
029800                          REASON-CODE
029900       SET ADDRESS OF VALUE-LENGTH TO
030000           VALUE-ENVPL ( INDEX-VALUE )
030100*
030200* OUTPUT THE ENVIRONMENT VARIABLE NAME & VALUE
030300       CALL BPX1WRT USING STDOUT,
030400                          VALUE-ENVPD-PTR ( INDEX-VALUE) ,
030500                          F0,
030600                          VALUE-LENGTH,
030700                          RET-VALUE,
030800                          RET-CODE
030900                          REASON-CODE
031000*
031100* PUT THE ADDRESS OF NEW-LINE TO AALINE
031200       CALL 'GETADDR' USING NEW-LINE, AALINE
031300*
031400* OUTPUT A "NEW LINE" TO STDOUT
031500       CALL BPX1WRT USING STDOUT,
031600                          AALINE,
031700                          F0,
031800                          FNL,
031900                          RET-VALUE,
032000                          RET-CODE
032100                          REASON-CODE
032200     END-PERFORM.
032300     GOBACK.
032400*
032500 ID DIVISION.
032600 PROGRAM-ID. GETADDR.
032700*
032800* SINCE COBOL IS TOO STUPID TO ALLOW ME TO DO AN "ADDRESS OF"
032900* A VARIABLE IN THE WORKING-STORAGE SECTION, THIS LITTLE PROGRAM
033000* DOES THE EQUIVALENT.
033100*
033200 DATA DIVISION.
033300 LINKAGE SECTION.
033400 01  LS-DATA PIC X.
033500 01  LS-ADDR POINTER.
033600 PROCEDURE DIVISION USING LS-DATA, LS-ADDR.
033700 DOIT.
033800     SET LS-ADDR TO ADDRESS OF LS-DATA.
033900     GOBACK.
034000 END PROGRAM GETADDR.
034100 END PROGRAM UNIX0002.
