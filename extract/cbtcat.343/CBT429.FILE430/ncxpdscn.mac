NCXPDSCN TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - PROGRAM DOCUMENTATION'
*****                                                             *****
*                                                                     *
* ID:          NCXPDSCN - PDS SCAN ETC UTILITY                        *
*                                                                     *
* NCXPDSCN.1 PROGRAM DESCRIPTION                                      *
*                                                                     *
* THIS PROGRAM WILL PERFORM VARIOUS USEFUL FUNCTIONS ON A CARD IMAGE  *
* PARTITIONED DATASET (PDS):                                          *
*                                                                     *
* 1. TEXT SCAN                                                        *
*    ---------                                                        *
*    SCAN ALL OR SOME OF THE MEMBERS OF A PDS FOR OCCURRENCES OF      *
*    PARTICULAR CHARACTER STRINGS.                                    *
*    THE OUTPUT FROM THIS FUNCTION IS EITHER A SERIES OF CARD IMAGES  *
*    OR A FORMATTED OUTPUT FOR USE IN CROSS REFERENCE FUNCTIONS.      *
*                                                                     *
* 2. MEMBER UNLOAD                                                    *
*    -------------                                                    *
*    UNLOAD ALL OR SOME OF THE MEMBERS OF A PDS TO A SEQUENTIAL FILE. *
*                                                                     *
* 3. DIRECTORY LIST                                                   *
*    --------------                                                   *
*    LIST ALL OR SOME OF THE DIRECTORY ENTRIES OF A PDS.              *
*                                                                     *
* THE SELECTION OF MEMBERS TO BE PROCESSED MAY BE BY THE FOLLOWING    *
* CRITERIA:                                                           *
*                                                                     *
* 1. GENERIC                                                          *
*    -------                                                          *
*    THE MEMBERS ARE IDENTIFIED BY A PARTICULAR PREFIX.               *
*                                                                     *
* 2. SPECIFIC                                                         *
*    --------                                                         *
*    THE MEMBERS ARE IDENTIFIED BY NAME.                              *
*                                                                     *
* 3. FULL FILE                                                        *
*    ---------                                                        *
*    ALL MEMBERS IN A PDS ARE PROCESSED.                              *
*                                                                     *
* UP TO 40 CHARACTER STRINGS WHICH MAY INCLUDE SPECIAL CHARACTERS     *
* AND EMBEDDED SPACES CAN BE SPECIFIED IN A SINGLE EXECUTION.         *
*                                                                     *
* THE MAXIMUM LENGTH OF A CHARACTER STRING IS 31 BYTES.               *
*                                                                     *
* THERE IS AN FACILITY FOR TWO EXITS WHICH ARE GIVEN CONTROL TO       *
* SELECTIVELY OVERRIDE MEMBER SELECTION AND RECORD PROCESSING.        *
*                                                                     *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCXPDSCN.2 USER INSTRUCTIONS                                        *
*                                                                     *
* PLEASE NOTE THAT THE DETAILS BELOW ARE NOT A COMPLETE USER          *
* DESCRIPTION OF THE UTILITY BUT ARE TO PROVIDE THE PROGRAMMER        *
* WITH ENOUGH UNDERSTANDING TO MAINTAIN AND UNDERSTAND THE PROGRAM.   *
*                                                                     *
* THE PROGRAM RUNS AS A BATCH JOB. THE PDS IS ONLY OPEN FOR INPUT.    *
*                                                                     *
* JCL:                                                                *
* ----                                                                *
*                                                                     *
* //S1     EXEC PGM=NCXPDSCN,PARM=........                            *
* //STEPLIB DD  DSN=MAC1.LOAD,DISP=SHR                                *
* //PDS     DD  DSN=.......,DISP=SHR       <-- NAME OF                *
* //PDSDIR  DD  DSN=.......,DISP=SHR       <   PDS.                   *
* //CARDIN1 DD  ....                       <-- SEARCH STRINGS.        *
* //CARDIN2 DD  ....                       <-- MEMBER NAMES.          *
* //SEQFL   DD  ....                       <-- UNLOADED FILE.         *
* //XREFL   DD  ....                       <-- CROSS-REFERNENCE.      *
* //LIST    DD  SYSOUT=*                   <-- EXECUTION MESSAGES.    *
*                                                                     *
* PARAMETERS:                                                         *
* -----------                                                         *
* THE PROGRAM PARAMETER SPECIFIES THE FUNCTIONS TO BE PERFORMED.      *
* SOME OF THESE ARE MUTUALLY EXCLUSIVE. DEPENDING ON THE FUNCTIONS    *
* TO BE PERFORMED AS SPECIFIED BY THE PARAMETER THEN EITHER OR        *
* BOTH OF THE CARDIN DD STATEMENTS MUST BE PRESENT.                   *
*                                                                     *
* C - MEMBER SELECTION SPECIFIED BY CARDS (CARDIN2).                  *
* F - ALL MEMBERS TO BE PROCESSED.                                    *
* G - MEMBER SELECTION SPECIFIED BY GENERIC PREFIX (CARDIN2).         *
* I - TEXT SCAN - IMAGE OUTPUT.                                       *
* K - TEXT SCAN - FORMATTED OUTPUT.                                   *
* L - DIRECTORY LISTING.                                              *
* U - UNLOAD.                                                         *
*                                                                     *
* E0=......... NAME OF EXIT 0 (TO OVERRIDE MEMBER SELECTION)          *
* E1=......... NAME OF EXIT 1 (TO OVERRIDE RECORD PROCESSING)         *
         EJECT
*                                                                     *
* CHARACTER STRINGS:                                                  *
* ------------------                                                  *
*                                                                     *
* UP TO 40 31 BYTE CHARACTER STRINGS FOR SEARCH MAY BE SPECIFIED      *
* BY THE CARDIN1 DD STATEMENT. CHARACTER STRINGS ARE DELIMITED BY     *
* COMMAS. THEY MAY BE SPECIFIED ON SEPARATE STATEMENTS IN WHICH CASE  *
* A TRAILING COMMA IS NOT NECESSARY. A SPECIAL FORM MAY BE USED TO    *
* SPECIFY SEARCH STRING WITH EMBEDDED SPACES OR COMMAS. EG. =' COPY '.*
*                                                                     *
* EXITS                                                               *
* -----                                                               *
*                                                                     *
* EXIT 0 - INVOKED   - BEFORE A MEMBER IS PROCESSED                   *
*          INTERFACE - STANDARD OS: P1 -> MEMBER NAME                 *
*          RETURN    - 0  CONTINUE                                    *
*               CODE  ^0  DO NOT PROCESS THIS MEMBER                  *
*                                                                     *
* EXIT 1 - INVOKED   - BEFORE A RECORD IS PROCESSED                   *
*          INTERFACE - STANDARD OS: P1 -> RECORD                      *
*          RETURN    - 0 CONTINUE                                     *
*               CODE  ^0 DO NOT PROCESS THIS RECORD                   *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCXPDSCN.3 MESSAGES                                                 *
*                                                                     *
* ALL MESSAGES ARE DIRECTED TO THE FILE 'LIST'. THESE INCLUDE DETAILS *
* OF THE PARAMETERS USED AND CARD INPUT. THE DIRECTORY LISTING IS ALSO*
* DIRECTED TO THIS FILE.
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCXPDSCN.4 ABEND CODES                                              *
*                                                                     *
* USER 100 - NO PARAMETER HAS BEEN SUPPLIED.                          *
*                                                                     *
* USER 101 - PARAMETER SPECIFIED 'CARD' AND 'GENERIC' SELECT.         *
*                                                                     *
* USER 102 - PARAMETER SPECIFIED 'IMAGE' AND 'FORMATTED' OUTPUT.      *
*                                                                     *
* USER 103 - SYNTAX ERROR IN CHAR STRING PREFIXED BY '='.             *
*                                                                     *
* USER 104 - INVALID EXIT NAME.                                       *
*                                                                     *
* USER 152 - INCORRECTLY SPECIFIED GENERIC MEMBER PREFIX.             *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCXPDSCN.5 IMPLEMENTATION METHOD                                    *
*                                                                     *
* MOVE TO MAC1.ASM AND PASMAL.                                        *
*                                                                     *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCXPDSCN.6 AMENDMENT HISTORY                                        *
*                                                                     *
* CHANGE HISTORY:                                                     *
* DATE      INITS VERSION COMMENTS                                    *
*                                                                     *
* .. ... 81 PTL   V01     CREATED                                     *
* 05 NOV 82 RH    V01     ADDED PROLOGUE                              *
*                         LOCAL MACROS REMOVED                        *
*                         RETURN CODES CHANGED TO ABENDS              *
*                         SOME CODE TIDYING                           *
*                         ABEND DESCRIPTIONS CLARIFIED                *
*                         PREPARE FOR EXIT BY CODE REARRANGEMENT      *
* 09 NOV 82 RH    V02     ADDED EXIT0 AND EXIT1                       *
* 16 NOV 82 RH    V02     ADDED SOME COMMENTS AND SUGGESTIONS         *
*                                                                     *
* WHENEVER YOU MAKE ANY FUNCTIONAL CHANGES TO THIS PROGRAM PLEASE     *
* UPDATE THE DOCUMENTATION IN 'ISD INFO' AND INFORM ISD STAFF.        *
*                                                                     *
* SUGGESTED ENHANCEMENTS:                                             *
*                                                                     *
* 05 NOV 82 RH : 1. AS MAINTENANCE IS PERFORMED GET RID OF:           *
*                   1. RELATIVE BRANCHES.                             *
*                   2. RECODE 'OI' 'NI' INSTRUCTIONS FOR FLAG HANDLING*
* 10 NOV 82 RH : 2. ADD FURTHER EXITS IF NECESSARY.                   *
*                3. PROVIDE FACILITY TO MODIFY RECORD AREA TO SUPPORT *
*                   RECORD SCAN RESTRICTION TO CERTAIN COLUMNS.       *
*                                                                     *
* 16 NOV 82 RH : 1. BUFFER BSAM INPUT                                 *
*                2. EXTEND NO. OF SEARCH STRINGS AND LENGTH OF SEARCH *
*                   ARGUMENTS BY:                                     *
*                   - VARIABLE LENGTH KEYWORD TABLE ENTRY             *
*                   - LENGTH TO 1 BYTE                                *
*                   - LARGER GETMAIN                                  *
*                   - USE DSECT                                       *
*                3. OPTIMIZE 'TRT' BY DECREMENTING LENGTH             *
*                                                                     *
*                                                                     *
* KNOWN PROBLEMS:                                                     *
* 05 NOV 82 RH : CODE TO PROCESS DELIMITERS ON SPECIAL CHAR STRING    *
*                SPECIFICATION DOESN'T WORK ( U152 + 0C4 ).           *
*                                                                     *
* 10 NOV 82 RH : S201 WHEN USING SEARCH STRING ='COPY '               *
* 11 NOV 82 RH : COULD NOT REPRODUCE THIS PROBLEM                     *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCXPDSCN.7 MODULARISATION DETAILS                                   *
*                                                                     *
* THE PROGRAM IS A SIMPLE LINEAR STRUCTURE WITH SUBROUTINES.          *
* BSAM AND QSAM ARE USED.                                             *
* FIND IS USED.                                                       *
* RDJFCB AND LOAD ARE USED.                                           *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCXPDSCN.8 PROGRAM LOGIC OVERVIEW                                   *
*                                                                     *
* 1. PROCESSING OUTLINE:                                              *
*    - READ PARAMETERS                                                *
*    - OPEN FILES                                                     *
*    - LOAD SCAN STRINGS INTO TABLES (SEE BELOW)                      *
*    - FOR EACH MEMBER TO BE SELECTED:                                *
*      READ DIRECTORY ENTRY                                           *
*      LOCATE MEMBER                                                  *
*      READ MEMBER                                                    *
*      PROCESS MEMBER CREATING VARIOUS OUTPUTS                        *
*    - CLOSE FILES                                                    *
*                                                                     *
* 2. TABLES USED:                                                     *
*                                                                     *
*    TRTAB - INITIALLY 256X'00' IS LOADED WITH ALL DISTINCT SCAN      *
*            STRING INITIAL CHARACTERS.                               *
*            THE RECORDS ARE SCANNED BY 'TRT' AGAINST THIS TABLE.     *
*            IF A MATCH IS FOUND THEN THE OFFSET OF THE MATCHED       *
*            CHARACTER IN TRTAB (R2 * 4) IS USED TO INDEX INTO        *
*                                                                     *
*   ADDRESS TABLE                                                     *
*          - A POINTER WILL BE FOUND TO LOCATE THE FIRST SCAN STRING  *
*            IN THE                                                   *
*                                                                     *
*   KEYWORD TABLE                                                     *
*          - EACH 37 BYTE ENTRY IS A 2 BYTE LENGTH (OF SCAN STRING)   *
*            THE SCAN STRING AND A POINTER TO THE NEXT SCAN STRING    *
*            WITH THE SAME INITIAL CHARACTER OR ZERO.                 *
*                                                                     *
*****                                                             *****
         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - PROGRAM PROLOGUE'
*****                                                             *****
*                                                                     *
* ID:          NCXPDSCN - PDS SCAN ETC UTILITY                        *
*                                                                     *
* ENTRY INTFCE: STANDARD OS WITH PARM.                                *
*                                                                     *
* EXIT  INTFCE: STANDARD OS.                                          *
*                                                                     *
* RETURN CODES:RC = 0          OK                                     *
*                                                                     *
*                                                                     *
*****                                                             *****
         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - PROGRAM CODE'
         PRINT NOGEN
*        THE REGISTER USAGE COMMENTS ARE INCOMPLETE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3                  -> JFCB AND WORK
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                 LINK REGISTER
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
************************************************************
*        STANDARD O/S LINKAGE CONVENTIONS                  *
************************************************************
         SPACE
NCXPDSCN CSECT
         STM   R14,R12,12(R13)          REGS TO CALLER SAVE AREA
         USING NCXPDSCN,R12             ESTABLISH BASE REG
         LR    R12,R15                  LOAD CSECT START ADDRESS
         LA    R11,SAVEAREA             THIS CSECT SAVE AREA
         ST    R11,8(R13)               FORWARD LINK
         ST    R13,SAVEAREA+4           BACKWARD LINK
         LR    R13,R11                  ESTABLISH THIS CSECT SAVE
         B     BEGIN                    BEGIN PROBLEM PROCESSING
         SPACE
         DS    0F
         DC    CL8'NCXPDSCN'            CSECT NAME
         DC    CL4' V02'                VERSION
         DC    CL8'&SYSDATE'            DATE ASSEMBLED
         DC    CL7' &SYSTIME'           TIME ASSEMBLED
SAVEAREA DC    18F'0'                   REGISTER SAVE AREA
RETCODE  DC    F'0'
         EJECT
************************************************************
*        BEGIN                                             *
************************************************************
         SPACE
BEGIN    DS    0H
         LA    R11,RECADDR        ESTABLISH SECOND BASE REGISTER
         USING RECADDR,R11          AT START OF DATA AREA
         USING INFMJFCB,R3        ESTABLISH ADDRESSABILITY FOR JFCB
         LA    R10,STK10          LOAD STACK ADDRESS
         ST    R10,STKADDR          AND STORE
         SPACE
********************************************************************
*        CHECK FOR PRESENCE OF PARAMETER                           *
********************************************************************
         SPACE
         L     R3,0(R1)           LOAD PARM ADDRESS
         LH    R7,0(R3)           LOAD PARM LENGTH FOR LOOP CONTROL
         LTR   R7,R7              Q - PARM ABSENT ?
         BNZ   P00PARM            N CONTINUE
         ABEND 100                Y ABEND USER 100
         EJECT
*******************************************************************
*        PARAMETER CHECKING                                       *
*******************************************************************
         SPACE
P00PARM  DS    0H
         LA    R3,2(R3)           POINT PAST 'LL' IN PARM STRING
P00TEST  EQU   *
*
*        CODE IN THIS SECTION IS PRESENTED AS SETS IN THE
*        FOLLOWING FORM :
*         CHECK PARM OPTION (CLI)
*         SET ON APPROPRIATE OPTION BIT (OI)
*         SET ON BIT TO INDICATE THAT A PARTICULAR DDNAME IS TO OPENED
*
         CLI   0(R3),C'C'         CHECK FOR CARD I/P
         BNE   P00QG                BRANCHING IF NONE
         OI    OPTFLG1,CRDOPT     SET ON CARDS FLAG
         OI    DDFLAG1,CARD2DD    SET ON DDNAME=CARDIN2 FLAG
         SPACE
P00QG    CLI   0(R3),C'G'         CHECK FOR GENERIC OPTION
         BNE   P00QL                BRANCHING IF NONE
         OI    OPTFLG1,GENOPT     SET ON GENERIC FLAG
         OI    DDFLAG1,CARD2DD    SET ON DDNAME=CARDIN2 FLAG
         SPACE
P00QL    CLI   0(R3),C'L'         CHECK FOR LIST OPTION
         BNE   P00QD                BRANCHING IF NONE
         OI    OPTFLG1,LSTOPT     SET ON LIST FLAG
         SPACE
P00QD    CLI   0(R3),C'D'         CHECK FOR DSN LABEL LIST OPTION
         BNE   P00QU                BRANCHING IF NONE
         OI    OPTFLG1,LSTOPT     SET ON LIST FLAG
         OI    OPTFLG1,DSNOPT     SET ON DSN FLAG
         SPACE
P00QU    CLI   0(R3),C'U'         CHECK FOR UNLOAD OPTION
         BNE   P00QF                BRANCHING IF NONE
         OI    OPTFLG1,UNLOPT     SET ON UNLOAD FLAG
         OI    DDFLAG1,SEQFDD     SET ON DDNAME=SEQFL FLAG
         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG
         SPACE
P00QF    CLI   0(R3),C'F'         CHECK FOR FULL FILE
         BNE   P00QI                BRANCHING IF NONE
         OI    OPTFLG1,ALLOPT     SET ON FULL FILE FLAG
         SPACE
P00QI    CLI   0(R3),C'I'         CHECK FOR TEXT SCAN (IMAGE)
         BNE   P00QK                BRANCHING IF NONE
         OI    OPTFLG1,IMGOPT     SET ON IMAGE FLAG
         OI    DDFLAG1,CARD1DD    SET ON DDNAME=CARDIN1 FLAG
         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG
         OI    DDFLAG1,XREFDD     SET ON DDNAME=XREFL FLAG
         SPACE
P00QK    CLI   0(R3),C'K'         CHECK FOR TEXT SCAN (KEY/FMT)
         BNE   P00QE0               BRANCHING IF NONE
         OI    OPTFLG1,FMTOPT     SET ON FORMAT FLAG
         OI    DDFLAG1,CARD1DD    SET ON DDNAME=CARDIN1 FLAG
         OI    DDFLAG1,PDSDD      SET ON DDNAME=PDS FLAG
         OI    DDFLAG1,XREFDD     SET ON DDNAME=XREFL FLAG
         SPACE
P00QE0   CLC   =C'E0=',0(R3)      Q - EXIT 0 ?
         BNE   P00QE1             N
         LA    R9,E0NAME          Y POINT TO NAME AND ADDRESS FIELD
         BAL   R10,P911EXIT       GO GET EXIT NAME AND LOAD IT
         B     P00BUMP
         SPACE
P00QE1   CLC   =C'E1=',0(R3)      Q - EXIT 1 ?
         BNE   P00BUMP            N
         LA    R9,E1NAME          Y POINT TO NAME AND ADDRESS FIELD
         BAL   R10,P911EXIT       GO GET EXIT NAME AND LOAD IT
         SPACE
P00BUMP  LA    R3,1(0,R3)         INCREMENT PARM POINTER
         BCT   R7,P00TEST         LOOP CONTROL
*
*        ERROR CHECKING
*
         TM    OPTFLG1,ALLCRD     CHECK FOR
         BO    P00A                 ALL INVALID
         TM    OPTFLG1,ALLGEN         COMBINATIONS OF
         BO    P00A                     MEMBER SELECTION
         TM    OPTFLG1,CRDGEN             CARD
         BO    P00A
         B     P00B
P00A     EQU   *
         MVC   RETCODE,=F'101'            SETTING BAD CODE
         B     P01OPEN                      IF ANY FOUND
P00B     EQU   *
         TM    OPTFLG1,IMGFMT     CHECK FOR
         BO    P00C                 TEXT OPTIONS
         B     P01OPEN
P00C     EQU   *
         MVC   RETCODE,=F'102'        SETTING BAD CODE
         B     P01OPEN                  IF ANY FOUND
         EJECT
*******************************************************************
*        OPEN FILES                                               *
*******************************************************************
         SPACE
P01OPEN  EQU   *
         OPEN  (PDSDIR,INPUT)     OPEN PDS DIRECTORY
         OPEN  (LIST,OUTPUT)      OPEN LIST FILE
         TM    DDFLAG1,PDSDD      CHECK FOR USE OF PDS
         BZ    P01A                 BRANCHING IF NONE
         OPEN  (PDS,INPUT)        OPEN PDS
P01A     EQU   *
         TM    DDFLAG1,CARD1DD    CHECK FOR USE OF CARDIN1
         BZ    P01B                 BRANCHING IF NONE
         OPEN  (CARDIN1,INPUT)    OPEN CHAR STRING CARDS
P01B     EQU   *
         TM    DDFLAG1,CARD2DD    CHECK FOR USE OF CARDIN2
         BZ    P01C                 BRANCHING IF NONE
         OPEN  (CARDIN2,INPUT)    OPEN MEMBER CARD FILE
P01C     EQU   *
         TM    DDFLAG1,XREFDD     CHECK FOR USE OF XREFL
         BZ    P01D                 BRANCHING IF NONE
         OPEN  (XREFL,OUTPUT)     OPEN XREF FILE
P01D     EQU   *
         TM    DDFLAG1,SEQFDD     CHECK FOR USE OF SEQFL
         BZ    P01E                 BRANCHING IF NONE
         OPEN  (SEQFL,OUTPUT)     OPEN UNLOAD FILE
P01E     EQU   *
         RDJFCB PDS               READ JFCB FOR PDS
         EJECT
***************************************************************
*        CHECK FOR GENERIC COMPARE OPTION                     *
***************************************************************
         SPACE
P02GEN   EQU   *
         TM    OPTFLG1,GENOPT     CHECK GENERIC FLAG
         BZ    P03REPT              BRANCHING IF NOT SET
         GET   CARDIN2,WKCARD     READ MEMBER NAME CARD
         TRT   WKCARD,TRTABF      CHECK FOR SPACE
         BC    8,P910ABRT           ABORTING IF NOT FOUND
         LA    R5,WKCARD          ADDRESS CARD AREA
         SR    R1,R5              CALCULATE LENGTH OF GENERIC
         S     R1,=F'1'           DECREMENT
         STH   R1,STGEN           STORE LENGTH
         MVC   STGEN+2(8),WKCARD    WITH DATA
         MVC   LST2SEL,STGEN+2    MOVE SELECT TO HEADING
         EJECT
*****************************************************************
*        PRINT OPTIONS IN EFFECT                                *
*****************************************************************
         SPACE
P03REPT  EQU   *
*
*        MAIN HEADINGS
*
         MVC   HD1,PARAHD1        MOVE PARAMETER HEADINGS
         MVC   HD2,PARAHD2          TO WORK HEADING AREA
         BAL   R10,P905HDS        PERFORM HEADINGS
*
*        PRESENT OPTIONS
*
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+24(8),=C'TEXT   :'  AND LABEL
         TM    OPTFLG1,IMGOPT     CHECK FOR IMAGE (I)
         BZ    *+10
         MVC   PLINE+39(5),=C'IMAGE'
         TM    OPTFLG1,FMTOPT           AND FORMAT
         BZ    *+10
         MVC   PLINE+45(6),=C'FORMAT'     TEXT SCAN OPTIONS
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         BAL   R10,P907PRNT         AND PRINT
         MVC   PLINE+24(4),DASHES PRINT
         BAL   R10,P907PRNT         UNDERLINING CHARACTERS
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+24(8),=C'MEMBER :'   AND LABEL
         TM    OPTFLG1,ALLOPT     CHECK FOR FULL FILE (F)
         BZ    *+10
         MVC   PLINE+39(3),=C'ALL'
         TM    OPTFLG1,CRDOPT           AND CARD I/P (C)
         BZ    *+10
         MVC   PLINE+43(4),=C'CARD'
         TM    OPTFLG1,GENOPT           AND GENERIC (G)
         BZ    *+10
         MVC   PLINE+48(7),=C'GENERIC'    MEMBER SELECT OPTIONS
         BAL   R10,P907PRNT                 FOR PRINTING
         MVC   PLINE+24(6),DASHES PRINT
         BAL   R10,P907PRNT         UNDERLINING CHARACTERS
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+24(36),=C'EXITS :        E0=12345678 E1=12345678'
         MVC   PLINE+42(8),E0NAME
         MVC   PLINE+54(8),E1NAME
         BAL   R10,P907PRNT
         MVC   PLINE+24(5),DASHES PRINT
         BAL   R10,P907PRNT         UNDERLINING CHARACTERS
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+24(8),=C'OTHER  :'  AND LABEL
         TM    OPTFLG1,UNLOPT          FOR OTHER OPTIONS
         BZ    *+10                      I.E. UNLOAD
         MVC   PLINE+39(6),=C'UNLOAD'
         TM    OPTFLG1,LSTOPT                 LIST
         BZ    *+10
         MVC   PLINE+46(4),=C'LIST'
         TM    OPTFLG1,DSNOPT             AND DSN
         BZ    *+10
         MVC   PLINE+51(3),=C'DSN'
         BAL   R10,P907PRNT               AND PRINT THEM
         MVC   PLINE+24(5),DASHES PRINT
         BAL   R10,P907PRNT         UNDERLINING CHARACTERS
*
*        PREPARE FOR PRINTING CHARACTER STRINGS
*
         TM    OPTFLG1,FMTOPT     CHECK FOR TEXT SCAN FORMATTED
         BO    *+16                 BRANCHING IF SET ON
         TM    OPTFLG1,IMGOPT     CHECK FOR TEXT SCAN (IMAGE)
         BO    *+8                  BRANCHING IF SET ON
         B     P03A               ELSE BYPASS SUB-HEADINGS
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+16(27),CRDLBL  ELSE MOVE IN HEADER
         BAL   R10,P907PRNT           AND PRINT IT
         MVC   PLINE+16(27),DASHES PRINT
         BAL   R10,P907PRNT         UNDERLINING CHARACTERS
         MVI   PLINE,C'0'         MOVE IN CONTROL CHARACTER
*
*        SET UP DSN IN HEADING IF REQUIRED
*
P03A     EQU   *
         TM    OPTFLG1,CRDOPT     CHECK FOR MEMBER CARD I/P
         BZ    *+10                 BRANCHING IF NOT FOUND
         MVC   LST2SEL,=C'MEMBERS' ELSE IDENTIFY OPTION IN HEADING
         TM    OPTFLG1,ALLOPT     CHECK FOR FULL FILE PROCESSING
         BZ    P03B                 BRANCHING IF NOT FOUND
         ST    R3,STK3            SAVE REG3
         L     R3,JFCBAD          LOAD JFCB ADDRESS
         MVC   LSTTEMPS(44),JFCBDSNM   AND MOVE DSN TO HEADING
         L     R3,STK3            RESTORE REG3
P03B     EQU   *
         CLC   RETCODE,=F'0'      CHECK FOR PARAMETER ERROR
         BNE   PEOJ               GO TO EOJ IF ERRORS DETECTED
         TM    OPTFLG1,LSTOPT     CHECK FOR LISTING OPTION
         BZ    *+16                 BRANCHING IF NONE
         MVC   HD1,LSTHD1         SET UP DIRECTORY
         MVC   HD2,LSTHD2           LISTING HEADERS
         TM    DDFLAG1,CARD1DD    CHECK IF CARDIN1 IS OPEN
         BO    P04LOAD              BRANCHING TO CHAR. LOAD IF ON
         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION
         BZ    P05A                 BRANCHING PAST PDS LOGIC IF OFF
         B     P05START             ELSE GO TO SET UP PDS RETRIEVAL
         EJECT
*****************************************************************
*        LOAD CHARACTER STRING DATA                             *
*****************************************************************
         SPACE
P04LOAD  EQU   *
         LA    R2,2904            DEFINE TABLE SIZE
         GETMAIN R,LV=(R2)        GET TABLE AREA
         LR    R9,R1              LOAD TABLE ADDRESS TO R9
         USING CHARTAB,R9         ESTABLISH ADDRESSABILITY
         ST    R9,TABADDR         STORE TABLE ADDRESS
         LR    R3,R2              LOAD TABLE LENGTH TO R3
         LR    R2,R9                AND ADDRESS TO R2
         SR    R4,R4              CLEAR R4
         LR    R5,R4                AND R5
         MVCL  R2,R4              CLEAR TABLE TO BINARY ZEROS
         SR    R3,R3              CLEAR R3
         LA    R4,TRTAB           ADDRESS TRANS TABLE
         LA    R6,1880(R9)        ADDRESS ADDR. TABLE
P04READ  EQU   *
         GET   CARDIN1,WKCARD     READ CHAR. STRING CARD
         LA    R5,WKCARD            AND ADDRESS IT
         EJECT
*****************************************************************
*        THE FOLLOWING PARAGRAPHS ENTER THE INPUT               *
*        CHARACTER STRINGS TO A SERIES OF TABLES.               *
*        PARAGRAPH P04A IS MAINLY CONCERNED WITH                *
*        THOSE STRINGS CONTAINED IN USER SELECTED               *
*        DELIMITERS E.G. =' JOB ('.                             *
*****************************************************************
P04A     EQU   *
         MVI   DELIM,X'00'        CLEAR DELIMITER
         CLI   0(R5),C'='         CHECK FOR EQUAL SIGN
         BNE   P04B                 BRANCHING IF NOT FOUND
         CLI   1(R5),C' '         CHECK FOR DELIMITING SPACE
         BNE   *+14                 BRANCHING IF NOT FOUND
         MVC   RETCODE,=F'103'    SET RETURN CODE
         B     PEOJ                 AND TERMINATE RUN
         CLI   1(R5),C','         CHECK FOR DELIMITING COMMA
         BNE   *+14                 BRANCHING IF NOT FOUND
         MVC   RETCODE,=F'103'    SET RETURN CODE
         B     PEOJ                 AND TERMINATE RUN
         MVC   DELIM,1(R5)        SAVE DELIMITING CHARACTER
         LA    R2,TRTABF          ADDRESS DELIMITER TABLE
         IC    R3,1(R5)           LOAD DELIMITER TO R3
         LA    R2,0(R2,R3)        ADDRESS DELIMITER ENTRY
         NI    TRTABF+64,X'00'    SET OFF SPACE
         NI    TRTABF+107,X'00'     AND COMMA DELIMITERS
         MVC   0(1,R2),DELIM      SET ON NEW DELIMITER
         A     R5,=F'2'           INCREMENT R5
         EJECT
****************************************************************
*        THE LOADING TO THE 3 TABLES IS DONE AT                *
*        THIS POINT FOR BOTH TYPES OF STRING. NOTE             *
*        THAT P04A HAS EFFECTIVELY EXTRACTED THE               *
*        DATA CONTENT OF THE INPUT CARD FROM THE               *
*        DELIMITERS BY AMENDING THE DELIMITER TABLE TRTABF.    *
****************************************************************
P04B     EQU   *
         SR    R3,R3              CLEAR R3
         IC    R3,0(R5)           LOAD LEAD CHAR. TO R3
         LA    R3,0(R3,R4)        ADDRESS TRANS TAB CHAR.
         MVC   0(1,R3),0(R5)        AND MOVE IN
         TRT   0(80,R5),TRTABF    CHECK FOR END OF STRING
         BC    8,P910ABRT           ABORTING IF NOT FOUND
         STH   R2,TCHAR           STORE IN TEST AREA
         SR    R1,R5              CALCULATE LENGTH
         SH    R1,=H'1'             AND DECREMENT
         STH   R1,0(R9)           STORE LENGTH
         EX    R1,MVCINST6          WITH TABLE ENTRY
         EX    R1,MVCINST5        MOVE TO PRINT LINE
         BAL   R10,P907PRNT         AND PRINT
         SR    R1,R1              CLEAR R1
         LH    R1,0(R9)             AND RESTORE LENGTH TO IT
         SR    R3,R4              RESET R3
         MH    R3,=H'4'           CALCULATE DISPL. IN
         LA    R6,0(R3,R6)          ADDRESS TABLE
         CLC   0(4,R6),NULL       CHECK IF ADDRESS ALREADY LOADED
         BE    *+10                 BRANCHING IF NOT
         MVC   33(4,R9),0(R6)     ELSE STORE ADDRESS BEFORE
         ST    R9,0(R6)             BUILDING CHAIN
         A     R9,=F'37'          POINT TO NEXT TABLE ENTRY
         L     R6,TABADDR         RESTORE TABLE ADDR. TO R6
         LA    R6,1880(R6)          AND POSITION TO ADDRESSES
         CLI   DELIM,X'00'        CHECK FOR USE OF NEW DELIMITER
         BE    P04C                 BRANCHING IF NOT USED
         LA    R2,TRTABF          ADDRESS DELIMITER TABLE
         IC    R3,DELIM           LOAD DELIMITER TO R3
         LA    R2,0(R2,R3)        ADDRESS DELIMITER ENTRY
         OI    TRTABF+64,X'40'    RESET SPACE
         OI    TRTABF+107,X'6B'     AND COMMA DELIMITERS
         NI    0(R2),X'00'        TURN OFF NEW DELIMITER
         LA    R5,1(0,R5)         INCREMENT R5 PAST DELIMITER
P04C     EQU   *
         CLI   TCHAR+1,C' '       CHECK FOR END OF CARD
         BE    P04READ              READING NEXT CARD IF FOUND
         LA    R5,2(R1,R5)        ELSE POSITION TO NEXT ENTRY
         CLI   0(R5),C' '         RECHECK IF SPECIAL DELIMITER
         BE    P04READ              READING NEXT CARD IF SPACE NEXT
         B     P04A               ELSE CONTINUE STRING SEARCH
         EJECT
*****************************************************************
*        INITIALIZATION                                         *
*****************************************************************
         SPACE
P05START EQU   *
         LA    R1,PDS             ADDRESS OF DCB
         LH    R2,62(R1)          BLKSIZE FROM DCB
         STH   R2,BLKSIZE         SAVE FOR LATER USE
         LH    R4,82(R1)          RECORD LENGTH
         GETMAIN R,LV=(R2)        GETMAIN DATA RECORD INPUT AREA
         SPACE
         ST    R1,RECADDR         SAVE ADDRESS OF INPUT AREA
         SPACE
         SRDL  R2,32              SET UP FOR MULTIPLY
         DR    R2,R4              DIVIDE BLKSIZE BY LRECL
         ST    R3,NUMREC          SAVE RECORDS PER BLOCK
         SPACE
P05A     EQU   *
         TM    OPTFLG1,LSTOPT     CHECK FOR LISTING OPTION
         BZ    P05B                 BRANCHING IF NOT SET
         BAL   R10,P905HDS        PERFORM HEADINGS
P05B     EQU   *
         TM    OPTFLG1,CRDOPT     CHECK FOR CARD INPUT
         BO    P05C                 BRANCHING IF SET
         B     P06RDIR            GO TO READ DIRECTORY
         SPACE
P05C     EQU   *
         GET   CARDIN2,WKCARD     READ MEMBER CARD
         MVC   MEMBER,WKCARD      MOVE TO MEMBER NAME
         BAL   R10,P908PBLD       GENERATE DIRECTORY PRINT LINE
         B     P06C               BYPASS DIRECTORY READ
         EJECT
*****************************************************************
*        PROCESS DIRECTORY BLOCK                                *
*****************************************************************
         SPACE
P06RDIR EQU    *
         GET   PDSDIR,PDSBLK      GET DIRECTORY BLOCK
         SPACE
         LA    R2,PDSBLK          ADDRESS BLOCK I-O
         LH    R3,0(R2)           LOAD BLOCK LENGTH TO REG 3
         LA    R3,0(R2,R3)        ADDRESS END OF DIRECTORY BLOCK
         ST    R3,EODIR           SAVE EOD ADDRESS
         LA    R2,2(R2)           ADDRESS PAST BLOCK PREFIX
         ST    R2,ENTADDR         INIT ADDRESS OF CURRENT ENTRY
         SPACE
P06A     EQU   *
         L     R3,ENTADDR         GET ADDRESS OF NEXT ENTRY
         CLC   0(8,R3),HIGHVALS   IS THIS END OF DIRECTORY
         BE    PEOJ                   YES - BRANCH
         CLI   0(R3),X'00'        IS THIS END OF BLOCK
         BE    P06RDIR                YES - BRANCH
         C     R3,EODIR           IS CURRENT ADDRESS PAST EOD
         BNL   P06RDIR                YES - BRANCH
         MVC   MEMBER,0(R3)       CAPTURE MEMBER NAME
P06B     EQU   *
         NI    GENFLG1,ALIASOFF   TURN OFF ALIAS CONDITION
         LA    R3,11(R3)          MOVE PAST ENTRY NAME AND TTR
         TM    0(R3),X'30'        CHECK FOR ALIAS
         BNO   *+8                  BRANCHING IF NOT FOUND
         OI    GENFLG1,ALIASON    TURN ON ALIAS CONDITION
         NI    0(R3),X'0F'        CLEAR FLAG BITS
         SR    R2,R2              CLEAR WORK REG.
         IC    R2,0(R3)           GET USER HALF WORD COUNT
         SLL   R2,1               MULTIPLY BY 2 FOR BYTE COUNT
         LA    R2,1(R3,R2)        POINT TO NEXT ENTRY
         TM    GENFLG1,ALIAS      CHECK FOR ALIAS CONDITION
         BZ    *+8                  BRANCHING IF NOT
         LA    R2,32(R2)            ELSE STEP PAST ALIAS DATA
         ST    R2,ENTADDR         SAVE FOR NEXT PASS
         SPACE
         L     R15,E0ADDR
         LTR   R15,R15            Q - IS THERE AN E0 EXIT ?
         BZ    P06B1              N
         LA    R1,MEMBERA         Y SET UP PARAMETER
         BALR  R14,R15            INVOKE EXIT 0
         LTR   R15,R15            Q - DID IT SAY 'IGNORE THIS MEMBER ?'
         BNZ   P06A               Y GO CONTINUE WITH DIRECTORY
         EJECT
P06B1    EQU   *
         TM    OPTFLG1,GENOPT     CHECK FOR GENERIC OPTION
         BZ    *+16                 BRANCHING IF NOT
         BAL   R10,P903GEN        PERFORM GENERIC TEST
         CLI   TFLG1,C'Y'         TEST FOR MATCH
         BNE   P06B10               BRANCHING IF NONE
         TM    OPTFLG1,LSTOPT     CHECK FOR LIST OPTION
         BZ    P06B10               BRANCHING IF NONE
         BAL   R10,P908PBLD       GENERATE DIRECTORY PRINT LINE
P06B10   EQU   *
         CLI   TFLG1,C'N'         TEST FOR GENERIC COMPARE
         BE    P06A                 READING NEXT ENTRY IF NOT GOOD
         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD
         BO    P06C                 BRANCHING IF SET
         TM    OPTFLG1,FMTOPT     CHECK FOR TEXT SCAN (FORMATTED)
         BO    P06C                 BRANCHING IF SET
         TM    OPTFLG1,IMGOPT     CHECK FOR TEXT SCAN (IMAGE)
         BO    P06C                 BRANCHING IF SET
         B     P06A               ELSE CONTINUE WITH DIRECTORY
         SPACE
P06C     EQU   *
         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION
         BZ    P06D                 BRANCHING IF NOT SET
         PUT   SEQFL,IEBLIT       WRITE IEBUPDTE HEADER
         SPACE
P06D     EQU   *
         FIND  PDS,MEMBER,D       POSITION TO MEMBER FOR READ
         STH   R15,SYSRC          STORE SYSTEM RETURN CODE
         TM    SYSRC+1,X'04'      CHECK FOR MEMBER NOT FOUND
         BZ    *+8                  BRANCHING IF BIT OFF
         B     P05C               ELSE GO TO READ NEXT MEMBER CARD
         EJECT
*****************************************************************
*        PROCESS MEMBER DATA                                    *
*****************************************************************
         SPACE
P07PROC  EQU   *
         L     R2,RECADDR         GET ADDRESS OF INPUT AREA
         LH    R3,BLKSIZE         GET LENGTH OF MOVE
         SR    R4,R4              SOURCE ADDRESS IS ZERO
         LR    R5,R4              SOURCE LENGTH IS ZERO
         MVCL  R2,R4              CLEAR TARGET TO X'00'
         SPACE
P07A     EQU   *
         L     R2,RECADDR
         READ  DECB,SF,PDS,(R2),'S'  GET PHYSICAL BLOCK OF DATA
         SPACE
         CHECK DECB               WAIT FOR I/O TO COMPLETE
         SPACE
         L     R7,NUMREC          BCT CONTROL
         L     R3,RECADDR         START OF PHYSICAL BLOCK OF DATA
         EJECT
**********************************************************************
*        CHECK FOR CHARACTER STRING MATCH                            *
**********************************************************************
         SPACE
P08CHECK EQU   *
         CLI   0(R3),X'00'        END OF DATA - SHORT BLOCK TEST
         BE    P08ECTL                YES - BRANCH TO CONTROL
         MVC   WKTXT,0(R3)        MOVE DATA TO WORK AREA
         SPACE
         L     R15,E1ADDR
         LTR   R15,R15            Q - IS THERE AN E1 EXIT ?
         BZ    P08A0              N
         LA    R1,WKTXTA          Y SET UP PARAMETER
         BALR  R14,R15            INVOKE EXIT 1
         LTR   R15,R15            Q - DID IT SAY 'IGNORE THIS RECORD ?'
         BNZ   P08E               Y GO CONTINUE WITH NEXT RECORD
         SPACE
P08A0    EQU   *
         TM    OPTFLG1,UNLOPT     CHECK FOR UNLOAD OPTION
         BZ    *+8                  BRANCHING IF NOT SET ON
         BAL   R10,P904UNLD       PERFORM UNLOAD
         L     R9,TABADDR         LOAD TABLE ADDRESS
         LA    R6,1880(R9)        ADDRESS ADDR. TABLE
         LA    R8,WKTXT           ADDRESS WORK AREA
P08A     EQU   *
         SR    R2,R2              CLEAR R2
*
* THE FOLLOWING INSTRUCTION SHOULD BE OPTIMIZED BY CHANGING THE LENGTH
*
         TRT   0(80,R8),TRTAB     CHECK FOR POSSIBLE KEYWORD
         BC    8,P08E               BRANCHING IF NONE
         ST    R1,STK1            SAVE R1
         MH    R2,=H'4'           CALCULATE DISPLACEMENT
         LA    R4,0(R2,R6)          IN ADDRESS TABLE
         L     R4,0(R4)               AND POINT AT KEYWORD
P08B     EQU   *
         LH    R2,0(R4)           LOAD KEYWORD LENGTH
         EX    R2,CLCINST6          AND COMPARE WITH DATA
         BNE   P08C                   BRANCHING IF NOT EQUAL
         TM    OPTFLG1,FMTOPT     CHECK FOR FORMAT REQUEST
         BZ    *+12                 BYPASSING IF NOT SET
         BAL   R10,P902FMT        ELSE FORMAT OUTPUT
         B     P08D                 AND BRANCH
         BAL   R10,P901DMP        DUMP OUTPUT
         B     P08E               BYPASS RECOMPARE
P08C     EQU   *
         CLC   33(4,R4),NULL      CHECK FOR BLANK ADDRESS FIELD
         BE    P08D                 BRANCHING IF FOUND
         L     R4,33(R4)          ELSE FOLLOW CHAIN
         B     P08B                 TO REPEAT COMPARE
P08D     EQU   *
         L     R8,STK1            RESTORE DATA ADDRESS TO R8
         LA    R8,1(0,R8)           AND INCREMENT
         B     P08A               BRANCH TO RETRANSLATE
P08E     EQU   *
         LA    R3,80(R3)          POSITION TO NEXT RECORD IN BLOCK
         BCT   R7,P08CHECK        LOOP TO PROCESS UNTIL END OF BLOCK
         B     P07PROC              THEN GO TO GET NEXT PHYSICAL BLOCK
         SPACE
P08ECTL  EQU   *
         TM    OPTFLG1,CRDOPT     CHECK FOR CARD I/P
         BO    P05C               READ NEXT CARD IF FOUND
         B     P06A                 ELSE PROCESS DIRECTORY
         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - SUBROUTINES'
**************************************************************
*        ROUTINES                                            *
**************************************************************
*        1 - WRITE DUMP OUTPUT                               *
**************************************************************
         SPACE
P901DMP  EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         MVC   RECBUFF,WKTXT      MOVE TEXT TO I-O
         MVC   RECBUFF+72(8),MEMBER MOVE NAME TO ID.
         BAL   R10,P906WXRF       PERFORM WRITE
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
**************************************************************
*        2 - WRITE FORMATTED OUTPUT                          *
**************************************************************
         SPACE
P902FMT  EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         MVI   RECBUFF,C' '       MOVE PAD CHAR. TO I-O
         MVC   RECBUFF+1(79),RECBUFF  AND CLEAR TO SPACES
         EX    R2,MVCINST3        MOVE TO I-O
         LA    R1,1(R1,R2)        ADDRESS DATA AREA
         TRT   0(80,R1),TRTABS    CHECK FOR ALPHA
         BC    8,*+18             BRANCH IF NONE
         ST    R1,STK1            SAVE REG1
         TRT   0(80,R1),TRTABF    CHECK FOR END
         BC    8,*+8                BRANCHING IF NONE
         B     P902A              BRANCH ROUND ADDRESS SETTING
         L     R1,EOTXADR         SET DATA LIMIT TO END OF TEXT
P902A    EQU   *
         S     R1,STK1            CALCULATE LENGTH
         S     R1,=F'1'             AND DECREMENT
         L     R2,STK1            ADDRESS START
         EX    R1,MVCINST2        MOVE TO I-O
         MVC   RECBUFF+72(8),MEMBER  AND LABEL CARD
         BAL   R10,P906WXRF       PERFORM WRITE
         LA    R1,1(R1,R2)        RESTORE POSN.
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         L     R2,STK1            ADDRESS START
         BR    R10                RETURN
         EJECT
**************************************************************
*        3 - CHECK FOR GENERIC MATCH                         *
**************************************************************
         SPACE
P903GEN  EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         MVI   TFLG1,C'N'         SET TEST FLAG OFF
         LH    R6,STGEN           LOAD LENGTH FOR GEN. COMP.
         EX    R6,CLCINST2        COMPARE WITH STORED VALUE
         BNE   *+8                  BRANCHING IF NO MATCH
         MVI   TFLG1,C'Y'         SET MATCH FLAG ON
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
**************************************************************
*        4 - WRITE UNLOADED RECORD                           *
**************************************************************
         SPACE
P904UNLD EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         PUT   SEQFL,WKTXT        WRITE UNLOADED RECORD
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
****************************************************************
*        5 - DIRECTORY LIST HEADINGS                           *
****************************************************************
         SPACE
P905HDS EQU    *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         TM    FIRST,X'FF'        CHECK FOR FIRST PASS
         BO    *+12                 BYPASSING DSN CHECK IF SO
         TM    OPTFLG1,DSNOPT     CHECK FOR DSN OPTION
         BO    P905A                SUPPRESSING HEADINGS IF FOUND
         NI    FIRST,X'00'        TURN OFF FIRST PASS FLAG
         SP    PLNCT,PLNCT        ZEROISE LINE COUNT
         MVC   PLINE,HD1          MOVE IN 1ST HEAD
         BAL   R10,P907PRNT         AND PRINT
         MVC   PLINE,HD2          MOVE IN 2ND HEAD
         BAL   R10,P907PRNT         AND PRINT
         MVC   PLINE+30(41),DASHES
         BAL   R10,P907PRNT       PRINT DASH LINE
         MVI   PLINE,C'0'         MOVE IN CONTROL CHARACTER
P905A    EQU   *
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
*************************************************************
*        6 - WRITE XREF RECORD                              *
*************************************************************
         SPACE
P906WXRF EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         PUT   XREFL,RECBUFF      WRITE XREF O/P
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10
         EJECT
*************************************************************
*        7 - PRINT A LINE                                   *
*************************************************************
         SPACE
P907PRNT EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         PUT   LIST,PLINE         WRITE PRINT
         CLI   PLINE,C' '         CHECK CONTROL FOR SINGLE SPACING
         BNE   *+10               BRANCH IF NOT
         AP    PLNCT,=P'1'        ADD TO LINE COUNT
         CLI   PLINE,C'0'         CHECK CONTROL FOR DOUBLE SPACING
         BNE   *+10               BRANCH IF NOT
         AP    PLNCT,=P'2'        ADD TO LINE COUNT
         MVI   PLINE,C' '         PAD PRINT LINE
         MVC   PLINE+1(132),PLINE   WITH SPACES
         CP    PLNCT,=P'54'       IF LINE COUNT > 54
         BNH   *+8
         BAL   R10,P905HDS          PERFORM HEADINGS
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
*************************************************************
*        8 - BUILD DIRECTORY PRINT LINE                     *
*************************************************************
         SPACE
P908PBLD EQU   *
         ST    R10,STK10          SAVE REG10
         BAL   R10,P909ASTK       STACK RETURN ADDRESS
         MVC   PLINE+50(8),MEMBER MOVE MEMBER NAME TO PRINT LINE
         TM    OPTFLG1,DSNOPT     CHECK FOR DSN REQUIRED
         BZ    P908A                BRANCHING IF NOT
         ST    R3,STK3            SAVE REG3
         L     R3,JFCBAD          LOAD ADDRESS OF JFCB
         MVC   PLINE+88(44),JFCBDSNM  ELSE MOVE DSN TO PRINT LINE
         L     R3,STK3            RESTORE REG3
P908A    EQU   *
         BAL   R10,P907PRNT       PERFORM MEMBER LIST
         BAL   R10,P909BUST       UNSTACK RETURN ADDRESS
         L     R10,STK10          RESTORE REG10
         BR    R10                RETURN
         EJECT
*****************************************************************
*        9 - STACK AND UNSTACK                                  *
*****************************************************************
         SPACE
P909ASTK EQU   *
         ST    R2,STK2            SAVE REG2
         L     R2,STKADDR         LOAD STACK ADDRESS
         A     R2,=F'4'           INCREMENT TO NEXT ENTRY
         MVC   0(4,R2),STK10      MOVE REG10 TO STACK
         ST    R2,STKADDR         SAVE STACK ADDRESS
         L     R2,STK2            RESTORE REG2
         BR    R10                RETURN
         SPACE
P909BUST EQU   *
         ST    R2,STK2            SAVE REG2
         L     R2,STKADDR         LOAD STACK ADDRESS
         MVC   STK10(4),0(R2)     MOVE STACK TO REG10
         S     R2,=F'4'           DECREMENT TO LAST ENTRY
         ST    R2,STKADDR         SAVE STACK ADDRESS
         L     R2,STK2
         BR    R10                RETURN
         EJECT
*****************************************************************
*        ABORT                                                  *
*****************************************************************
         SPACE
P910ABRT EQU   *
         ABEND 152,DUMP           ABEND WITH DUMP
         EJECT
*************************************************************
*        11 - GET EXIT NAME AND LOAD IT                     *
*************************************************************
         SPACE
P911EXIT DS    0H
         ST    R10,STK10
         BAL   R10,P909ASTK
         LA    R1,3(R3)           R1 -> EXIT NAME IN PARM STRING
         LR    R8,R7              COPY REMAINING PARM BYTE COUNT
         SH    R8,=H'3'           Q - ANY PARM LEFT AFTER ADJUSTING FOR
*                                     'E.=' ?
         BP    P911A              Y CONTINUE
         ABEND 104                N GIVE UP
P911A    C     R8,=F'8'           Q - MORE THAN 8 BYTES OF PARM LEFT ?
         BNH   P911B              N USE R8 AS IS
         LA    R8,8               Y TAKE ONLY NEXT 8 BYTES
P911B    LR    R4,R1              COPY R4 BEFORE TRT
         BCTR  R8,0               REDUCE R8 TO M/C LENGTH
         EX    R8,TRTINST1        LOCATE COMMA OR SPACE
         CR    R4,R1              Q - FOUND EITHER ?
         BE    P911C              N USE R8 FOR EXIT NAME LENGTH AS IS
         LR    R8,R1              Y COMPUTE MEMBER NAME LENGTH
         SR    R8,R4
         BCTR  R8,0               REDUCE TO M/C LENGTH
P911C    EX    R8,MVCINST7        MOVE EXIT NAME FROM PARM STRING
         LA    R3,0(R4,R8)        POINT R3 PAST STRING
         SR    R7,R8              DECREMENT REMAINING PARM BYTE COUNT
*                                 BUT ALLOWING FOR P00BUMP TO OPERATE
         SH    R7,=H'3'
         CLC   =C'NO',0(R9)       Q - NULL EXIT INDICATED ?
         BE    P911D              Y IGNORE IT
         LOAD  EPLOC=(R9)         LOAD EXIT
         ST    R0,8(R9)           STORE ADDRESS OF EXIT
P911D    BAL   R10,P909BUST
         L     R10,STK10
         BR    R10
         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - TERMINATION'
*****************************************************************
*        END OF JOB                                             *
*****************************************************************
         SPACE
PEOJ     EQU   *
         CLC   RETCODE,=F'0'      CHECK FOR GOOD EOJ
         BE    PEJOK                BRANCHING IF FOUND
         MVI   PLINE,C'-'         MOVE IN CONTROL CHARACTER
         MVC   PLINE+35(41),ERRMSG    AND LITERAL
         BAL   R10,P907PRNT           AND PRINT IT
         SPACE
PEJOK    CLOSE (PDSDIR,,LIST)      CLOSE DIRECTORY AND LIST
         SPACE
         TM    DDFLAG1,CARD1DD     CHECK FOR CARDIN1 OPEN
         BZ    PEJA                  BRANCHING IF NOT
         CLOSE CARDIN1                 ELSE CLOSE CARDIN1
         SPACE
PEJA     EQU   *
         TM    DDFLAG1,CARD2DD     CHECK FOR CARDIN2 OPEN
         BZ    PEJB                  BRANCHING IF NOT
         CLOSE CARDIN2                 ELSE CLOSE CARDIN2
         SPACE
PEJB     EQU   *
         TM    DDFLAG1,XREFDD      CHECK FOR XREF OPEN
         BZ    PEJC                  BRANCHING IF NOT
         CLOSE XREFL                   ELSE CLOSE XREF
         SPACE
PEJC     EQU   *
         TM    DDFLAG1,SEQFDD      CHECK FOR SEQF OPEN
         BZ    PEJD                  BRANCHING IF NOT
         CLOSE SEQFL                   ELSE CLOSE SEQF
         SPACE
PEJD     EQU   *
         TM    DDFLAG1,PDSDD       CHECK FOR PDS OPEN
         BZ    PEJE                  BRANCHING IF NOT
         CLOSE PDS                     ELSE CLOSE PDS
         SPACE
PEJE     EQU   *
         CLC   RETCODE,=F'0'       Q - ANY ERRORS ?
         BE    PEJF                N RETURN
         L     R1,RETCODE          Y
         SVC   13                  ISSUE ABEND
         SPACE
PEJF     DS    0H
         L     R13,SAVEAREA+4      LOAD SAVE ADDRESS
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         SR    R15,R15             SET RETURN CODE = 0
         BR    14
         TITLE 'GENERAL PDS TEXT SCAN AND DIRECTORY LIST UTILITY -     *
               - DATA'
*****************************************************************
*        ADDRESS AND FILE ATTRIBUTE SAVE AREAS                  *
*****************************************************************
         SPACE
RECADDR  DC    F'0'
TABADDR  DC    F'0'
ENTADDR  DC    F'0'
STKADDR  DC    F'0'
EOTXADR  DC    A(WKTXT+72)
EODIR    DC    F'0'
NUMREC   DC    F'0'
MEMBERA  DC    X'80',AL3(MEMBER)
WKTXTA   DC    X'80',AL3(WKTXT)
BLKSIZE  DC    H'0'
         SPACE
SYSRC    DC    H'0'               RETURN CODE WORK
         SPACE
STK1     DS    F                  R1 STORE
STK2     DS    F                  R2 STORE
STK3     DS    F                  R3 STORE
STK10    DS    8F                 R10 STORE
         EJECT
*****************************************************************
*        RECORD I-O AREAS AND LITERALS                          *
*****************************************************************
         SPACE
PIEBLIT  DC    C' '
IEBLIT   DS    0CL80
         DC    CL12'./ ADD NAME='
MEMBER   DC    CL8' '
         DC    CL60' '
CRDLBL   DC    CL27'* INPUT CHARACTER STRINGS *'
ERRMSG   DC    CL41'* JOB CANCELLED DUE TO PARAMETER ERRORS *'
         SPACE
SPACES   DC    80C' '             SPACES LITERAL
DASHES   DC    80C'-'             DASHES LITERAL
HIGHVALS DC    80X'FF'            HIGH VALUES LITERAL
         SPACE
OUTREC   DC    0CL80' '
*
RECBUFF  DS    CL80               OUTPUT I-O AREA
*
WKTXT    DS    CL80               INPUT I-O AREA
         DC    80X'00'
*
WKCARD   DS    CL80               WORK AREA FOR MEMBER CARD
         DC    80X'00'
*
         EJECT
*****************************************************************
*        HEADINGS AND PRINT LINE WORK AREAS                     *
*****************************************************************
         SPACE
PLNCT    DC    PL2'0'             LINE COUNT
PLINE    DS    CL133              PRINT LINE
*
HD1      DS    CL133              1ST HEAD WORK AREA
HD2      DS    CL133              2ND HEAD WORK AREA
*
LSTHD1   DS    0CL133
         DC    C'1'
         DC    CL19' PROGRAM : NCXPDSCN'
         DC    16C' '
         DC    CL31'* PARTITIONED DATASET UTILITY *'
         DC    66C' '
LSTHD2   DS    0CL133
         DC    C'0'
         DC    CL21' REPORT  : NCXPDSCN-B'
         DC    8C' '
         DC    CL34'* DIRECTORY LISTING FOR SELECTION='
LST2SEL  DC    CL8'* *     '
         DC    61C' '
LSTTORG  ORG   LST2SEL
LSTTEMPS DC    69C' '
PARAHD1  DS    0CL133
         DC    C'1'
         DC    CL19' PROGRAM : NCXPDSCN'
         DC    16C' '
         DC    CL29'* PARTITIONED DATASET UTILITY *'
         DC    68C' '
PARAHD2  DS    0CL133
         DC    C'0'
         DC    CL21' REPORT  : NCXPDSCN-A'
         DC    15C' '
         DC    CL27'* INPUT PARAMETER LISTING *'
         DC    69C' '
*
*
         EJECT
*****************************************************************
*        FLAG AREA                                              *
*****************************************************************
         SPACE
*
OPTFLG1  DC    X'00'              OPTION FLAG 1
ALLOPT   EQU   X'80'              FULL FILE OPTION
CRDOPT   EQU   X'40'              CARD I/P OPTION
GENOPT   EQU   X'20'              GENERIC SELECT OPTION
IMGOPT   EQU   X'10'              IMAGE TEXT SCAN OPTION
FMTOPT   EQU   X'08'              FORMATTED KEYWORD SCAN OPTION
LSTOPT   EQU   X'04'              LIST OPTION
DSNOPT   EQU   X'02'              DSN LABEL OPTION
UNLOPT   EQU   X'01'              UNLOAD OPTION
*
*        ERRORS
*
ALLCRD   EQU   X'C0'              BOTH CARD AND FULL FILE ON
ALLGEN   EQU   X'A0'              BOTH GENERIC AND FULL FILE ON
CRDGEN   EQU   X'60'              BOTH GENERIC AND CARD ON
IMGFMT   EQU   X'18'              BOTH IMAGE AND FORMAT ON
*
DDFLAG1  DC    X'00'              DDNAME FLAG
*
PDSDD    EQU   X'80'              PDS DD REQUIRED
CARD1DD  EQU   X'40'              CARDIN1 DD REQUIRED
CARD2DD  EQU   X'20'              CARDIN2 DD REQUIRED
XREFDD   EQU   X'10'              XREF DD REQUIRED
SEQFDD   EQU   X'08'              SEQF DD REQUIRED
*
GENFLG1  DC    X'00'              GENERAL PURPOSE FLAG
ALIAS    EQU   X'80'              ALIAS CONDITION
ALIASON  EQU   X'80'              TURN ALIAS CONDITION ON
ALIASOFF EQU   X'7F'              TURN ALIAS CONDITION OFF
*
TCHAR    DS    H                  CHAR. TEST AREA
DELIM    DC    X'00'              DELIMITER STORE
*
TFLG1    DC    C' '               TEST FLAG 1
FIRST    DC    X'FF'              FIRST PASS FLAG
NULL     DC    F'0'               NULL CONSTANT
*
* DO NOT MOVE OR MODIFY THE FOLLOWING DECLARATIONS WHICH ARE
* REFERENCED BY OFFSET IN P911EXIT
*
         DS    0F
E0NAME   DC    CL8' '             EXIT 0 NAME
E0ADDR   DC    F'0'               EXIT 0 ADDRESS (ZERO IF NOT USED)
E1NAME   DC    CL8' '             EXIT 1 NAME
E1ADDR   DC    F'0'               EXIT 1 ADDRESS (ZERO IF NOT USED)
*
         DS    0H
STGEN    DS    CL12               GENERIC SAVE AREA
         EJECT
*****************************************************************
*        JFCB WORK AREA                                         *
*****************************************************************
         SPACE
JFCBAD   DS    0F
         DC    X'07'
JFCBADA  DC    AL3(JFCBSV)
*
         DS    0F
JFCBSV   DS    CL176
*
         EJECT
*****************************************************************
*        TRANSLATE TABLES                                       *
*****************************************************************
         SPACE
TRTAB    DC    256X'00'           TRANS TABLE FOR CHAR. STRING
*
TRTABF   DS    0CL256             TRANS TABLE FOR CARD DELIMITERS
         DC    64X'00'
         DC    X'40'              SPACE
         DC    42X'00'
         DC    X'6B'              COMMA
         DC    148X'00'
*
TRTABS   DS    0CL256             TRANS TABLE FOR DATA START
         DC    80X'00'
         DC    X'FF'              AMPERSAND
         DC    10X'00'
         DC    X'FF'              DOLLAR
         DC    31X'00'
         DC    2X'FF'             COMMERCIAL AT,HASH
         DC    68X'00'
         DC    9X'FF'
         DC    7X'00'
         DC    9X'FF'
         DC    8X'00'
         DC    8X'FF'
         DC    6X'00'
         DC    10X'00'
         DC    6X'00'
*
         EJECT
*****************************************************************
*        EXECUTABLE INSTRUCTION AREA                            *
*****************************************************************
         SPACE
TRTINST1 TRT   0(0,R4),TRTABF     TRANSLATE AND TEST INSTRUCTION
*
MVCINST2 MVC   RECBUFF+31(0),0(R2)
*
MVCINST3 MVC   RECBUFF(0),0(R1)
*
MVCINST5 MVC   PLINE+21(0),0(R5)  MOVE INSTRUCTION
*
MVCINST4 MVC   STGEN+2(0),0(R5)   MOVE INSTRUCTION
*
MVCINST6 MVC   2(0,R9),0(R5)      MOVE INSTRUCTION
*
MVCINST7 MVC   0(0,R9),0(R4)      MOVE INSTRUCTION
*
CLCINST2 CLC   STGEN+2(0),MEMBER  COMPARE INSTRUCTION
*
CLCINST6 CLC   0(0,R1),2(R4)      COMPARE INSTRUCTION
*
PDSBLK   DC    CL256' '
         EJECT
*****************************************************************
*        D. C. B. S                                             *
*****************************************************************
         SPACE
PDSDIR   DCB   DDNAME=PDSDIR,BLKSIZE=256,RECFM=F,DSORG=PS,             C
               MACRF=GM,LRECL=256,EODAD=PEOJ
PDS      DCB   DDNAME=PDS,DSORG=PS,MACRF=RP,EODAD=P06A,EXLST=JFCBAD
CARDIN1  DCB   DDNAME=CARDIN1,DSORG=PS,MACRF=GM,EODAD=P05START
CARDIN2  DCB   DDNAME=CARDIN2,DSORG=PS,MACRF=GM,EODAD=PEOJ
SEQFL    DCB   DDNAME=SEQFL,DSORG=PS,MACRF=PM,LRECL=80
XREFL    DCB   DDNAME=XREFL,DSORG=PS,MACRF=PM,LRECL=80
LIST     DCB   DDNAME=LIST,DSORG=PS,MACRF=PM,LRECL=133,                C
               RECFM=FBA
         EJECT
*****************************************************************
*        LITERAL POOL                                           *
*****************************************************************
         LTORG
*****************************************************************
*        DSECTS                                                 *
*****************************************************************
         SPACE
CHARTAB  DSECT
         DS    CL1880
         DS    CL1024
         SPACE 2
JFCBMAP  DSECT
         IEFJFCBN LIST=YES
         END
