IEFACTRT TITLE 'SMF JOB/STEP TERMINATION EXIT                          *
               - PROGRAM DOCUMENTATION'
*****                                                             *****
*                                                                     *
* ID:          IEFACTRT - JOB/STEP TERMINATION EXIT                   *
*                                                                     *
* IEFACTRT.1 PROGRAM DESCRIPTION                                      *
*                                                                     *
* THE EXIT WRITES TO THE JOB MESSAGE LOG DETAILS FO I/O COUNTS FOR    *
* EACH DD STATEMENT.  THE DETAILS COME FROM THE TYPE 30 RECORDS.      *
* MUCH OF THE CODE WAS LIFTED FROM THE US SENATE REQUEUER ON THE      *
* MVS GOODIES TAPE, FILES 95-97                                       *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* IEFACTRT.2 USER INSTRUCTIONS                                        *
*                                                                     *
* THIS PROGRAM IS PART OF THE SYSTEM AND SHOULD NEVER BE EXEC'D       *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* IEFACTRT.3 MESSAGES                                                 *
*                                                                     *
* DETAILS OF STEP I/O COUNTS.                                         *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* IEFACTRT.4 ABEND CODES                                              *
*                                                                     *
* NONE.                                                               *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* IEFACTRT.5 IMPLEMENTATION METHOD                                    *
*                                                                     *
*  WARNING  WARNING  WARNING  WARNING  WARNING  WARNING               *
*  ====================================================               *
*  ************* THIS IS A KEY ZERO ROUTINE ***********               *
*                                                                     *
* MUST BE RE-ENTRANT AND REFRESHABLE.                                 *
* SMP INSTAL IS MANDATORY.                                            *
* CLPA IS REQUIRED TO ACTIVATE, ALSO DESCRIBE IN SMFPRMXX MEMBER OF   *
*  SYS1.PARMLIB                                                       *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* IEFACTRT.6 AMENDMENT HISTORY                                        *
*                                                                     *
* DATE      INITS VERSION COMMENTS                                    *
* 03 DEC 82 EMM   V01     CREATED                                     *
*  5 MAR 84 RH    V01     RECODED 'REQU' MACRO AS EQUATES             *
*                                                                     *
* SUGGESTED ENHANCEMENTS:                                             *
*                                                                     *
* RECORD DETAILS BELOW.                                               *
*                                                                     *
* DD MMM YY WHO : COMMENTS                                            *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* IEFACTRT.7 MODULARISATION DETAILS                                   *
*                                                                     *
* MUST BE RE-ENTRANT AND REFRESHABLE - LPA ROUTINE.                   *
* USES SMF MAPPING MACRO AND SOME US SENATE MACROS IN MAC1.MACLIB.    *
* ALSO USES ESTAE AND SETRP MACROS FOR RECOVERY.                      *
*                                                                     *
*****                                                             *****
         TITLE 'SMF JOB/STEP TERMINATION EXIT                          *
               - PROGRAM PROLOGUE'
*****                                                             *****
*                                                                     *
* ID:          IEFACTRT - JOB/STEP TERMINATION EXIT                   *
*                                                                     *
* ENTRY INTFCE: SEE SMF SPL.                                          *
*                                                                     *
* EXIT  INTFCE: SEE SMF SPL.                                          *
*                                                                     *
* RETURN CODES:RC = 0  ALWAYS                                         *
*                                                                     *
*              RC = 4  NEVER                                          *
*                                                                     *
* REG USAGE:                                                          *
*        REGISTER                 FUNCTION
*              R15                ENTRY ADDR/WORK REG/RETURN CODE
*              R14                RETURN ADDR/WORK REG
*              R13                SAVEAREA/WORKAREA
*              R12                BASE REGISTER (MAIN PROGRAM)
*              R11
*              R10                RETURN ADDR FOR SUBROUTINES
*              R9                 ADDR OF SMF RECORD
*              R8                 RETURN ADDR REG FOR FUNCTIONS
*              R7-R0              WORK REGISTERS
*                                                                     *
         PRINT NOGEN
*****                                                             *****
         TITLE 'IEFACTRT - MAIN ROUTINE'
IEFACTRT CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,IEFACTRT-&SYSDATE-&SYSTIME
         LR    R12,R15        ESTAB. BASE REG.
         USING IEFACTRT,R12   TELL ASSEMBLER
         LR    R8,R1          HOLD ONTO PARM PTRS
         LR    R7,R0          HOLD ONTO ENTRY CODE
         USING ACTRTMAP,R8    GIVE PASSED PARMS ADDRESSABILITY
         L     R6,ACTCEPA     GET COMM EXIT PARM AREA PTR
         USING COMMEXIT,R6    GIVE IT ADDRESSABILITY
         CH    R7,=H'20'      IS IT TYPE 30 RECORD
         BNE   MRRETURN       BIF NO: GET OUT
         TM    CEPSMFOP,CEPSMF07 IS IT TSO
         BNZ   MRRETURN       BIF YES - NOT INTERESTED
         L     R9,ACTSMFRA    GET SMF RECORD ADDRESS
         USING SMFRCD30,R9    ADDRESS IT
         LR    R1,R9
         A     R1,SMF30SOF
         USING SMF30PSS,R1    POINT TO PRODUCT SECTION
         CLC   SMF30TYP,=H'4' IS IT STEP TERMINATION
         BNE   MRRETURN       BIF NO - NOT INTERESTED
         DROP  R1
         DROP  R6
         LA    R0,ECSUBPOL    SUBPOOL #
         SLL   R0,24          PUT INTO LEFTMOST BYTE
         LA    R1,ECWRKSIZ    ACTRT-ONLY WORK AREA SIZE
         OR    R0,R1          MERGE TOGETHER
         GETMAIN R,LV=(0)
         ST    R1,8(,R13)     COMPLETE THE CHAINING PROCESS
         ST    R13,4(,R1)
         LR    R13,R1
         USING EXITCORE,R13   GIVE IT ADDRESSABILITY
         ST    R8,PARMPTRS    STOW ADDR OF ACTRT PARMS
         ST    R7,ENTRYCDE    STOW ENTRY CODE VALUE
         ST    R6,CEPAADDR    STOW ADDR OF COMM EXIT PARM AREA
         DROP  R8
*
*        SET UP RECOVERY ENVIRONMENT
*
         MVC   ESTAEW(LESTAEL),ESTAEL  MOVE IN ESTAE PARAMETER LIST
         LA    R0,RTRYRTN1            RETRY ROUTINE - NO SDWA
         ST    R0,ESTAPARM            STORE IN PARAMETER LIST
         LA    R0,RTRYRTN2            RETRY ROUTINE - WITH SDWA
         ST    R0,ESTAPARM+4          STORE IN PARAMETER LIST
         STM   R12,R13,ESTAPARM+8      STORE BASE & DATA REG IN PARM
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW) SETUP RCVRY
         SPACE 3
***********************************************************************
*        CALL INTERFACE TO SMF TYPE 30 PROCESSOR
***********************************************************************
         LA    R15,0          SET RC=0 INITIALLY
         BAL   R10,TY30RTN    GO TO TYPE 30 PROCESSING
         MVC   LINE+1(L'LINE-1),LINE   PROPAGATE ASTERS
         BAL   R8,WRITEMSG
MREXIT   DS    0H
***********************************************************************
*        MAIN EXIT ROUTINE
***********************************************************************
         ESTAE 0                   CANCEL ESTAE EXIT
RTRYRTN2 DS    0H                  ESTAE RETRY ROUTINE WITH SDWA
*                                  JUST FREE STORAGE AND EXIT
         L     R2,SAVEAREA+4  GET CALLER'S S/A PTR
         LA    R0,ECSUBPOL    SUBPOOL #
         SLL   R0,24          PUT INTO LEFTMOST BYTE
         LA    R1,ECWRKSIZ    ACTRT-ONLY WORK AREA SIZE
         OR    R0,R1          MERGE TOGETHER
         LR    R1,R13         GET ADDR OF ACTRT-GETMAINED AREA
         FREEMAIN  R,LV=(0),A=(1) LOCAL FREEMAIN
         LR    R13,R2         R13 NOW HAS CALLER'S S/A PTR
MRRETURN LA    R15,0          SET RETURN REGISTERS
         LA    R1,0
         RETURN (14,12),RC=(15)
         TITLE 'IEFACTRT - BATCH JOB SMF TYPE 30 PROCESSOR'
TY30RTN  DS    0H
***********************************************************************
*
*        SMF TYPE 30 RECORD PROCESSOR
*
***********************************************************************
         MVI   LINE,C'*'
         MVC   LINE+1(L'LINE-1),LINE   PROPAGATE ASTERS
         BAL   R8,WRITEMSG    PUT OUT A LINE
         LR    R3,R9
         A     R3,SMF30IOF
         USING SMF30ID,R3     POINT TO IDENT SECTION
         MVI   LINE+1,C' '               BLANK OUT INFO AREA
         MVC   LINE+2(L'LINE-3),LINE+1
         MVC   LINE+1(ST1LGTH),ST1PATRN
         MVC   LINE+21(8),SMF30PGM   MOVE IN PROGRAM NAME
         MVC   LINE+46(8),SMF30STM   MOVE IN STEP NAME
         LR    R3,R9
         A     R3,SMF30COF
         USING SMF30CAS,R3     POINT TO CPU SECTION
         L     R0,SMF30CPT     GET TCB CPU TIME
         A     R0,SMF30CPS     ADD IN SRB TIME
         CVD   R0,WORK01
         ED    LINE+68(9),WORK01+4
         LR    R3,R9
         A     R3,SMF30POF
         USING SMF30PRF,R3     POINT TO CPU SECTION
         L     R0,SMF30SRV     GET TOTAL SERVICE UNITS
         CVD   R0,WORK01
         ED    LINE+100(12),WORK01+3
         BAL   R8,WRITEMSG    WRITE OUT ID LINE
         LR    R3,R9
         A     R3,SMF30TOF
         USING SMF30CMP,R3    POINT TO COMPLETION SECTION
         TM    SMF30STI,X'79' WAS STEP CANCELLED OR FLUSHED?
         BNZ   LIOEXIT        BIF YES
         DROP  R3
         SPACE 3
LIOSTATS EQU   *
***********************************************************************
*
*        I/O STATISTICS, BY DD STATEMENT (EXCL. SPOOLED DATA)
*
***********************************************************************
         MVC   LINE+1(L'LINE-1),LINE     ASTERS ON LINE
         LH    R5,SMF30EON               # OF UCB'S
         LTR   R5,R5                     ARE THERE ANY UCB'S
         BNP   LIOEXIT                   BIF NONE
         LA    R7,LINE+2
         CH    R5,=H'3'                  ARE THERE LESS THAN 5?
         BL    LIOPARTL                  BIF YES
         LA    R5,3                      TITLE ALL THREE COLUMNS
LIOPARTL EQU   *
         MVC   0(38,R7),LIOPAT1          MOVE TITLES IN, ONE AT A TIME
         LA    R7,41(R7)                 MOVE TO NEXT SLOT
         BCT   R5,LIOPARTL             TITLE AS MANY COLUMNS AS NEEDED
         BAL   R8,WRITEMSG               PUT OUT A LINE
         LH    R5,SMF30EON               # OF UCB'S
         SR    R4,R4
         D     R4,=A(3)                  HOW MANY ROWS DO WE NEED?
         LTR   R4,R4                     EVENLY DIVISABLE BY 5?
         BZ    LIOEVEN                   BIF YES
         LA    R5,1(R5)                  R5 = # OF ROWS
LIOEVEN  EQU   *
         ST    R5,LIODEPTH
         LR    R4,R9                     POINT TO FIRST UCB ENTRY
         A     R4,SMF30EOF
         MVI   LINE+1,C' '               BLANK OUT INFO AREA
         MVC   LINE+2(L'LINE-3),LINE+1
         L     R6,LIODEPTH               # OF ROWS
         LH    R5,SMF30EON               # OF UCB'S
LIOCALL1 EQU   *
         BAL   R8,LIOBLDLN               RTN TO BUILD AN ENTIRE LINE
         STM   R0,R7,REGSAVE             HOLD ONTO REGS FOR WRITE
         BAL   R8,WRITEMSG               PUT OUT A LINE
         LM    R0,R7,REGSAVE             NOW BRING THEM BACK
         MVI   LINE+1,C' '               BLANK OUT INFO AREA
         MVC   LINE+2(L'LINE-3),LINE+1
         BCT   R6,LIOCALL1               LOOP UNTIL ALL ROWS COMPLETE
LIOEXIT  EQU   *
         BR    R10                       RETURN TO CALLER
         TITLE 'IEFACTRT - SMF TYPE 30 ROUTINE CONSTANTS'
ST1PATRN EQU   *
         DC    CL10' '
         DC    C'PROGRAM - '
ST1PROG  DC    CL8' '
         DC    CL10' '
         DC    C'STEP - '
ST1STEP  DC    CL8' '
         DC    CL4' '
         DC    C'CPU TIME - '
ST1CPU   DC    X'20202021204B2020'
         DC    C' SEC'
         DC    CL4' '
         DC    C'SERVICE UNITS - '
ST1SERV  DC    X'2020206B2020206B202120'
ST1END   EQU   *
ST1LGTH  EQU   *-ST1PATRN
         TITLE 'IEFACTRT - UCB ADDR/DEVICE TYPE/I-O COUNT DISPLAY RTN'
LIOBLDLN DS    0H
***********************************************************************
*        R5 = # OF COLUMNS LEFT TO DO @ ENTRY
*        R4 = ADDR OF UCB RECORD PORTION TO BE PROCESSED NOW
*        R8 = RETURN ADDRESS
***********************************************************************
         LA    R3,LINE+2      BASE PTR FOR OUTPUT
         LA    R2,3          3 UNITS ARE TO BE BUILT
         SPACE 1
LIOCALL2 EQU   *
         BAL   R7,LIOBLDSU    BUILD A SUBUNIT OF A LINE
         AH    R4,SMF30ELN   JUMP TO UCB FOR  NEXT COLUMN
         LA    R3,41(R3)     POSITION TO NEXT COLUMN ON OUTPUT
         BCT   R5,LIOCONT    CONTINUE UNTIL NO UCB'S
         B     LIOLNEEX
LIOCONT  BCT   R2,LIOCALL2   CONTINUE UNTIL NO ROOM ON LINE
LIOLNEEX EQU   *
         BR    R8             GO BACK TO CALLER
         SPACE 3
LIOBLDSU EQU   *             ROUTINE TO BUILD UCB INFO UNIT
***********************************************************************
*        R7 = SECONDARY ROUTINE RETURN REG
*        R5 = # OF COLUMNS LEFT TO DO @ ENTRY
*        R4 = ADDR OF UCB INFO BEING CURRENTLY PROCESSED
*        R6 = # OF LINES LEFT
*        R3 = OUTPUT AREA POINTER
*        R2 = # OF UNITS TO BE DONE
***********************************************************************
         USING SMF30EXP,R4
         MVC   0(LIOPT2L,R3),LIOPAT2 PATTERN FOR UCB DISPLAY
         MVC   0(8,R3),SMF30DDN      MOVE IN DDNAME
         L     R0,SMF30BLK           # OF EXCP'S ISSUED UNDER THIS UCB
         CVD   R0,WORK01
         MP    WORK01,=P'10'         SHIFT FOR EDITING
         ED    27(11,R3),WORK01+3    EXCP'S
         LR    R1,R9
         A     R1,SMF30TOF
         USING SMF30CMP,R1           POINT TO PRODUCT SECTION
         TM    SMF30STI+1,X'80'      POTENTIAL ERRORS IN UCB DATA?
         DROP  R1
         BZ    LIOCNTOK              BIF NO DETECTED ERRORS
         MVI   38(R3),C'*'           OTHERWISE, FLAG IT
LIOCNTOK EQU   *
         LH    R0,SMF30BSZ           BLOCKSIZE
         LTR   R0,R0                 HAS IT CHANGED
         BNL   LBSCHG                BIF NOT
         SLL   R0,1                  ZERO HIGH-ORDER BIT
         SRL   R0,1
LBSCHG   EQU   *
         CVD   R0,WORK01
         ED    21(6,R3),WORK01+5
         TM    SMF30BSZ,X'80'        HAS BLOCKSIZE CHANGED
         BZ    LBSOK                 BIF NO
         MVI   27(R3),C'*'           OTHERWISE, FLAG IT
LBSOK    EQU   *
         XC    WORK01,WORK01
         MVC   WORK01(2),SMF30CUA    UCB ADDRESS
         UNPK  WORK01,WORK01(3)
         TR    WORK01+3(4),HEXTABLE  CONVERT TO HEX DISPLAY
         MVC   9(3,R3),WORK01+4      GET IT INTO INFO AREA
*
         MVC   WORK01+7(1),SMF30DEV  GET DEVICE CLASS
         TR    WORK01+7(1),TYPTABLE  CONVERT DEVICE CLASS TO AN OFFSET
         SR    R1,R1                 SET UP FOR TABLE LOOKUP
         IC    R1,WORK01+7
         SLL   R1,3
         A     R1,=A(DEVTABLE)     POINT TO BEG. OF LIST FOR THAT TYPE
LIOLOOP1 EQU   *
         C     R1,=A(DEVTABED)       HAVE WE REACHED END OF TABLE?
         BNL   LIOUCBNF              BIF END OF TABLE HAS BEEN REACHED
         CLC   0(2,R1),SMF30DEV      DOES THIS UCBTYPE MATCH TAB ENTRY?
         BE    LIOUCBFD              BIF ENTRY & UCB INFO MATCH
         LA    R1,8(,R1)             SKIP TO NEXT ENTRY
         B     LIOLOOP1              KEEP ON TRUCKIN'
         SPACE 1
LIOUCBFD EQU   *
         MVC   13(6,R3),2(R1)     MOVE EBCDIC NAME OF DEV. TO INFO AREA
         CLC   9(3,R3),=C'FFF'       VIO?
         BNE   LIOTSJES              IF NOT VIO, TEST FOR JES
         MVC   13(6,R3),=C'VIO   '
         B     LIOBLDSX
LIOTSJES EQU   *
         CLC   13(5,R3),=C'DUMMY'    IS THIS SPOOLED DATA?
         BNE   LIOBLDSX              BIF NOT
         MVC   21(17,R3),=C'   N/A        N/A'
         MVC   9(4,R3),=C'JES/'
         B     LIOBLDSX
         SPACE 1
LIOUCBNF EQU   *
         XC    WORK01,WORK01
         MVC   WORK01(2),SMF30DEV         DEV TYPE DATA
         UNPK  WORK01,WORK01(3)
         TR    WORK01+3(4),HEXTABLE
         MVC   13(4,R3),WORK01+3
LIOBLDSX EQU   *
         BR    R7             BACK TO FUNCTION 'LIOBLDLN'
         DROP  R4
         TITLE 'IEFACTRT - IEFYS WRITER INTERFACE'
WRITEMSG DS    0H
***********************************************************************
*
*        THIS MODULE WRITES A MESSAGE TO THE SYSTEM OUTPUT MESSAGE
*        DATA SET.  THE MODULE MAY BE USED ONLY FOR BATCH JOBS.
*        THIS ROUTINE STES UP ALL LINE LENGTHS TO 124 BYTES
*
***********************************************************************
         L     R7,SAVEAREA+4  EXTRACT VALUE IN R12 @ ENTRY TO ACTRT
         L     R7,68(,R7)     R7 NOW HAS VALUE OF ORIG R12
         LA    R6,LINE        SET UP PARMS FOR IEFYS
         ST    R6,36(,R7)
         LA    R6,L'LINE      ALL LINES WILL BE 124 BYTES LONG
         STH   R6,42(,R7)
         LR    R5,R12         REMEMBER R12 IS OUR BASE REG!!!
         L     R15,=V(IEFYS)  BRANCH TO IEFYS
         LR    R12,R7         PUT IN VALUE IEFYS WANTS
         BALR  R14,R15
         LR    R12,R5         RESTORE R12 IMMEDIATELY!!!
PUTEXIT  EQU   *
         BR    R8
         TITLE 'IEFACTRT - ESTAE EXIT ROUTINE'
RECOVERY DS    0H
         USING *,R15               SET UP ADDRESSABILITY
         LA    R4,4                PUT 4 IN REGISTER FOR COMPARE
         CR    R0,R4               IS SDWA PRESENT?
         BNE   HAVESDWA            YES, BR TO PROCESS WITH SDWA
         L     R0,0(R2)            LOAD RETRY ADDRESS FROM PARAM LIST
         LA    R15,4               SET RETCODE TO RETRY ADDR IN R00
         BR    R14                 RETURN TO PROCESSOR WITH RETRY ADDR
HAVESDWA DS    0H                  ENTER HERE IF SDWA PRESENT
         ST    R14,12(R13)         SAVE RETURN ADDRESS
         L     R2,0(R1)            LOAD PARAM LIST ADDR FROM SDWA
         L     R2,4(R2)            LOAD RETRY ADDRESS
         SETRP RC=4,,RETADDR=(2),RETREGS=YES,FRESDWA=YES,REGS=(14)
         DROP  R15
         SPACE 3
***********************************************************************
*                                                                     *
*  ESTAE RETRY ROUTINE WHEN NO SDWA WAS PRESENT                       *
*                                                                     *
***********************************************************************
RTRYRTN1 DS    0H                  RETRY ROUTINE WITH NO SDWA PRESENT
         LM    R12,R13,8(R1)       LOAD REGS FOR ESTAE PARM LIST
         B     RTRYRTN2            AND GET OUT
         TITLE 'IEFACTRT - GENERAL CONSTANTS'
***********************************************************************
*        CONSTANTS
***********************************************************************
         DS    0D
* DEFINE ESTAE LIST FORM
*
ESTAEL   ESTAE MF=L               CREATE MODEL ESTAE PARM LIST
LESTAEL  EQU   *-ESTAEL           NAME ITS LENGTH
*
         SPACE 2
HEXTABLE DC    240CL1'*',C'0123456789ABCDEF'
         SPACE 2
LIOPAT1  DC    C'DDNAME..UNIT.TYPE....BLKSIZE.....I/O''S   '
*                0123456789012345678901234567890123456 7890
         SPACE 2
LIOPAT2  DC    CL22' ',X'2020202120',C' '
         DC    X'20206B2020206B202120',C' * '
LIOPT2L  EQU   *-LIOPAT2
         TITLE 'IEFACTRT - UCBTYPE VS NAME LOOKUP TABLE'
DEVTABLE EQU   *
***********************************************************************
*
*        TABLE OF EBCDIC NAMES CROSS-REFERENCED BY DEVICDE TYPE
*        (BYTES 18 &19 OF THE UCB TYPE FIELD)
*        THIS TABLE MUST N-E-V-E-R HAVE MORE THAN 255 ENTRIES
*
***********************************************************************
DEVJES   EQU   *             JES
         DC    X'0000',C'DUMMY ' ANY JES/DUMMY ASSIGNMENTS
DEVCOMM  EQU   *             COMMUNICATIONS DEVICES
         DC    X'4015',C'3705  ' 3705 COMMUNICATIONS PROCESSOR
         DC    X'4092',C'BSCA01' BISYNC 2701
         DC    X'4093',C'BSCA03' BIYNCH 2703
DEVUR    EQU   *             UNIT RECORD EQUIPMENT
         DC    X'080B',C'3203  ' 3203 PRINTER
DEVTAPE  EQU   *             TAPE DRIVES
         DC    X'8003',C'3400  ' 3400 SERIES TAPE DRIVE
DEVDASD  EQU   *             DASD DEVICES
         DC    X'200B',C'3350  ' 3350 DISK DRIVE
         DC    X'200E',C'3380  ' 3380 DISK DRIVE
         DC    X'2008',C'2314  ' 2314 DISK DRIVE
DEVTABED EQU   *             END OF THIS MADNESS
         TITLE 'IEFACTRT - UCBTYPE TABLE OFFSET LIST'
TYPTABLE EQU   *
***********************************************************************
*
*        TABLE USED WITH A TRANSLATE INSTR TO DECODE THE DEVICE
*        CLASS IN THE UCB INFO SECTION OF A TYPE 4 SMF RECORD INTO
*        AN OFFSET INTO A TABLE OF EBCDIC DEVICE NAMES
*
***********************************************************************
         DC    AL1((DEVJES-DEVTABLE)/8) JES
         DC    7AL1((DEVTABED-DEVTABLE)/8)
         DC    AL1((DEVUR-DEVTABLE)/8) UNIT RECORD
         DC    23AL1((DEVTABED-DEVTABLE)/8)
         DC    AL1((DEVDASD-DEVTABLE)/8) DASD
         DC    31AL1((DEVTABED-DEVTABLE)/8)
         DC    AL1((DEVCOMM-DEVTABLE)/8)  COMMUNICATIONS
         DC    63AL1((DEVTABED-DEVTABLE)/8)
         DC    AL1((DEVTAPE-DEVTABLE)/8) TAPE
         DC    127AL1((DEVTABED-DEVTABLE)/8)
         LTORG
         TITLE 'IEFACTRT - WORK AREA USED BY ALL EXITS'
EXITCORE DSECT
SAVEAREA DS    18F           THIS AREA MUST ALWAYS BE FIRST
GETPARM  DS    F             SUBPOOL & GETMAIN SIZE STORED HERE
ECPGMNAM DS    CL8           'PGM=' NAME PROVIDED BY IEFUSI
ECWRKSIZ EQU   1024          PRIV AREA SET ASIDE FOR EACH EXIT
ECTSOSIZ EQU   2048          PRIV. AREA SET ASIDE FOR TSO
ECSIZE   EQU   8192          SIZE OF TOTAL GETMAIN
ECSUBPOL EQU   252           GETMAIN SUBPOOL #
LINE     DS    CL124
WORK01   DS    D
WORK02   DS    D
REGSAVE  DS    8F             SAVE AREA FOR UCB LINE BUILD RTN
PARMPTRS DS    A              PTR TO PARM LIST PASSED TO IEFACTRT
ENTRYCDE DS    A              ENTRY CODE PASSED TO IEFACTRT
CEPAADDR DS    A              ADDR OF COMM EXIT PARM AREA
ERRORSW  DS    XL1         ERROR INDICATOR USED BY SUBROUTINES
ERRJT4   EQU   X'01'       ERROR IN SMF TYPE 4 PROCESSOR
ERRJT5   EQU   X'02'       ERROR IN SMF TYPE 5 PROCESSOR
ERRDDNRT EQU   X'04'       ERROR IN DDNAME DISPLAY ROUTINE
ERREQUE  EQU   X'08'       ERROR IN REQUEUER INTERFACE PROCESSOR
ERRTT34  EQU   X'10'       ERROR IN TSO SESSION SMF TYPE 34 PROC.
ERRTT35  EQU   X'20'       ERROR IN TSO SESSION SMF TYPE 35 PROC
ERRTT30  EQU   X'40'       ERROR IN TSO SESSION SMF TYPE 30 PROC
ERRTT32  EQU   X'80'       ERROR IN TSO SESSION SMF TYPE 32 PROC.
LIODEPTH DS    F             # OF COLUMNS NCSSARY FOR UCB LIST
ESTAEW   DS    XL(LESTAEL)      ESTAE PARM LIST AREA
ESTAPARM DS    4F               PARAMETER LIST PASSED TO RETRY ROUTINE
*              RETRY ROUTINE ADDRESS  NO SWDA OBTAINED
*              RETRY ROUTINE ADDRESS  SWDA OBTAINED
*              BASE REGISTER R12
*              DATA REGISTER R13
*
TRTEND   DS    0H
CORELGTH EQU   (((*-EXITCORE+7)/8)*8)
ECEND    EQU   (((*-EXITCORE+7)/8)*8) END OF USER-DEFINED VARIABLES
ECSIGNAL EQU   (ECWRKSIZ-ECEND)  REDUCE USER VARS IF ASSEM ERROR
ECSMFTAB EQU   EXITCORE+ECWRKSIZ
         TITLE 'IEFACTRT - LIST OF PARMS PASSED TO IEFACTRT'
         ACTRTMAP
         TITLE 'IEFACTRT - COMMON EXIT PARAMETER AREA'
         COMMEXIT
         PRINT NOGEN
         TITLE 'IEFACTRT - SMF RECORD LAYOUTS'
SMFREC   DSECT
         IFASMFR 30          SMF TYPE THIRTY LAYOUT
         IHASDWA DSECT=YES         SDWA FOR ESTAE/SETRP MACRO
         END   IEFACTRT
