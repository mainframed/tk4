CSPIN    TITLE 'QUEUE COMMAND - SPIN A COPY OF CURRENT DATASET'   ONL01
CSPIN    QSTART ,                  START CSPIN CSECT ASSEMBLY     ONL01
*        PRINT GEN
         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA
         L     R10,QVCKPT     LOAD BASE REG
         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL      LOAD BASE REG
         USING WORK,R13       LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   ALLOCATE OUTPUT DATASET                                           *
*                                                                     *
***********************************************************************
         CLC   QPDSID,=H'0'   IS THERE A VALID DATASET?
         BE    TILT1          NO. TELL THE USER.
         LA    R1,1           DEFAULT FIRST LINE                 WGH
         ST    R1,FRSTLINE    INIT DEFAULT                       WGH
         LA    R1,0           INIT CURRENT LINE                  WGH
         ST    R1,LINECNT     DEFAULT CURRENT LINE               WGH
         L     R1,=F'9999999' DEFAULT LAST LINE                  WGH
         ST    R1,LASTLINE    TO ENSUR END OF DATASET            WGH
         MVC   DEST(8),=CL8' '         DEFAULT DEST              WGH
         MVC   WRTRID(8),=CL8' '       DEFAULT WRTRID            WGH
         MVI   CLASS,C'A'     SYSOUT=A
         CLC   QPARM1(6),=C'CLASS='  IS CLASS SPECIFIED          WGH
         BE    ALTCLASS       YES..  GET ALTERNATE CLASS PARM    WGH
         LA    R4,QLNG1       POINT TO 1ST  FIELD LENGTH         WGH
         LA    R5,QPARM1      POINT TO 1ST  FIELD                WGH
         LH    R3,0(R4)       ANY PARMS  SPECIFIED               WGH
         LTR   R3,R3          IS PARM1 0 CHAR?                   WGH
         BZ    DSALLOC        YES..  USE DEFAULT                 WGH
         CLI   QPARM1,C'Z'    CHECK FOR COUNT                    WGH
         BH    CHKCNT         NOT ALPHABETIC TRY COUNT           WGH
         CH    R3,=H'1'       IS PARM GT 1 CHAR?                 WGH
         BH    DEST1          YES..  MUST BE DEST                WGH
         CLI   QPARM1,C'A'    NO...  CHECK FOR VALID CLASS       WGH
         BL    BADCLS         NOT ALPHABETIC BAD CLASS           WGH
         MVC   CLASS,QPARM1   USE SPECIFIED CLASS                WGH
         B     COUNT2         TRY FOR COUNT IN PARM2             WGH
ALTCLASS CLI   QPARM1+6,C'A'  CHECK FOR VALID CLASS              WGH
         BL    BADCLS         TO LOW BAD SYSOUT CLASS            WGH
         MVC   CLASS,QPARM1+6 USE SPECIFIED CLASS                WGH
COUNT2   LA    R4,QLNG2       POINT TO NEXT FIELD                WGH
         LA    R5,QPARM2      POINT TO NEXT FIELD                WGH
CHKCNT   EQU   *
         LH    R3,0(R4)       LENGTH OF COUNT FIELD              WGH
         LTR   R3,R3          ANYTHING THERE                     WGH
         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH
         CLI   0(R5),C'0'     IS IT A NUMBER?                    WGH
         BL    DEST1          NO.. MUST BE DEST                  WGH
         XC    SCRATCH,SCRATCH YES..ZERO WORK AREA               WGH
         MVC   SCRATCH+4,QPREC      MOVE CURRENT LINE            WGH
         CVB   R15,SCRATCH     CONVERT TO BINARY                 WGH
         LTR   R15,R15         IS IT POSITIVE                    WGH
         BNP   CHKNUM          NO.. LEAVE AS DEFAULT             WGH
         ST    R15,FRSTLINE    SAVE FOR LATER                    WGH
CHKNUM   BCTR  R3,0            LENGTH OF FIELD -1                WGH
         LA    R14,0(R5)       POINT TO PARM FIELD               WGH
         MVC   QFZONES,QFZONE  INIT CHECK FIELD                  WGH
         EX    R3,MVZ          MOVE ZONES FROM PARM              WGH
         CLC   QFZONES,QFZONE  IS IT ALL NUMERIC ?               WGH
         BNE   NOTNUM          NO.. INFORM USER                  WGH
         EX    R3,PACK         PACK THE NUMBER                   WGH
         CVB   R15,SCRATCH     LOAD THE NUMBER                   WGH
         A     R15,FRSTLINE    ADD TO STARTING LINE              WGH
         S     R15,=F'1'       ADJUST TO GET CORRECT COUNT       WGH
         ST    R15,LASTLINE    SAVE IT                           WGH
         LA    R4,12(R4)      POINT TO NEXT FIELD LENGTH         WGH
         LA    R5,12(R5)      POINT TO NEXT FIELD (2 OR 3)       WGH
DEST1    EQU   *                                                 WGH
         LH    R3,0(R4)       LENGTH OF DEST  FIELD              WGH
         LTR   R3,R3          ANYTHING THERE                     WGH
         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH
         STH   R3,DESTLEN     SAVE LENGTH                        WGH
         MVC   DEST(8),0(R5)   MOVE IN DEST FIELD                WGH
         LA    R4,12(R4)      POINT TO WRTRID FIELD LENGTH       WGH
         LA    R5,12(R5)      POINT TO WRTRID FIELD              WGH
         LH    R3,0(R4)       LENGTH OF WRTRID FIELD             WGH
         LTR   R3,R3          ANYTHING THERE                     WGH
         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH
         STH   R3,WRTRLEN     SAVE LENGTH                        WGH
         MVC   WRTRID(8),0(R5)   MOVE IN WRTRID FIELD            WGH
DSALLOC  EQU   *
         BAL   R8,ALLOSPIN    GO ALLOCATE SPIN DDN               WGH
         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT
         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL
         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS
         LH    R1,QCLRECL     RECORD LENGTH
         LTR   R1,R1          IS THE LRECL ZERO?
         BNZ   RECOK          NO. SKIP.
         LA    R1,133         YES. USE LRECL 133.
RECOK    STH   R1,QCOUT+82    STORE LRECL
         STH   R1,QCOUT+62    AND BLKSIZE
         OPEN  MF=(E,QCOPEN)
***********************************************************************
*                                                                     *
*   REPOSITION DATASET TO TOP                                         *
*                                                                     *
***********************************************************************
         L     R4,QCSTART     TOP OF DATASET POINTER
         L     R4,0(R4)       DISK ADDR TOP OF DATASET
         L     R5,QCBLKA      IOAREA ADDRESS
         B     FIRST          GO DO IT
***********************************************************************
*                                                                     *
*   PROCESS DATASET                                                   *
*                                                                     *
***********************************************************************
NEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5) DISK ADDR NEXT BLOCK   WGH42
FIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?
         BZ    END            YES. END OF DATASET.
         BAL   R8,READ        READ A BLOCK
         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)    JOBID MATCH?    WGH42
         BNE   END                  NOMATCH                     WGH42
         CLC   QPDSID,HDBDSKEY-BUFSTART+2(R5)   DSID  MATCH?    WGH42
         BE    IDISOK              BR IF SO                          CL
         L     R4,QCJQEA           ADDR OF JQE                       CL
         TM    JQEFLAG3-JQE(R4),JQE3SYSD ALL THRU IF THIS            CL
         BNO   END                    IS NOT SYSTEM JQE              CL
IDISOK   LA    R4,HDBSTART-BUFSTART(R5)    FIRST RECORD IN BLOCK  WGH42
***********************************************************************
*                                                                     *
*   PROCESS RECORDS                                                   *
*                                                                     *
***********************************************************************
NEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?
         BE    NEXTBLK        YES. END OF BLOCK.
         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?
         BO    SPAN           YES. SKIP IT.
         SR    R6,R6          ZERO OUT REG
         IC    R6,0(R4)       INSERT LENGTH
         TM    1(R4),X'80'    IS CCTL SPECIFIED?
         BZ    NOCCTL         NO. SKIP.
         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL
NOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?
         BO    SKIPREC        YES. SKIP IT.
         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER
         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER
         LR    R7,R6          DO NOT DESTROY R6
         SH    R7,=H'1'       IS LENGTH ZERO?
         BM    SKIPREC        YES. SKIP RECORD.
         EX    R7,MVCREC      MOVE RECORD TO BUFFER
         L     R1,LINECNT     GET CURRENT LINE CNT                WGH
         LA    R1,1(R1)       ADD THIS LINE TO IT                 WGH
         ST    R1,LINECNT     SAVE IT                             WGH
         C     R1,LASTLINE    IT IS GT THAN LAST REQUESTED        WGH
         BH    END            YES.. CLOSE IT                      WGH
         C     R1,FRSTLINE    IS IT LESS THAN 1ST REQUESTED?      WGH
         BL    SKIPREC        YES... SKIP IT                      WGH
         PUT   QCOUT,BUFFER
SKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPAN     LH    R6,2(R4)       SEGMENT LENGTH
         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?
         BO    SPANFRST       YES. USE LARGER HEADER SIZE.
         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
SPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD
         B     NEXTREC        PROCESS NEXT RECORD
***********************************************************************
*                                                                     *
*   CLOSE UP SHOP AND GO HOME                                         *
*                                                                     *
***********************************************************************
END      CLOSE MF=(E,QCOPEN)
         MVC   DYNALLOC(FREELEN),FREEPTR
         LA    R1,YREERB
         STCM  R1,B'0111',YREEPTR+1
         LA    R1,YREETXPT
         ST    R1,YREETPTR
         LA    R1,YREETU1
         STCM  R1,B'0111',YREETXPT+1
         LA    R1,YREETU2
         STCM  R1,B'0111',YREETXPT+5
         LA    R1,YREEPTR
         DYNALLOC
         L     R15,=V(LISTDS) GO BACK TO LISTDS
         BALR  R14,R15        GO TO IT
         QSTOP
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK      STORE DISK ADDR
         LR    R1,R5          IOAREA ADDRESS
         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15        GO TO IT
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   ALLOCATION ROUTINE                                                *
*                                                                     *
***********************************************************************
ALLOSPIN MVC   DYNALLOC(S99LENG),S99RBPTR  COPY DYN ALLOC LIST    WGH
         LA    R1,X99RB       RELOCATE LIST
         STCM  R1,B'0111',X99RBPTR+1
         LA    R1,X99TUPL
         ST    R1,X99TXTPP
         LA    R1,X99TUKY1
         STCM  R1,B'0111',X99TUPL+1
         LA    R1,X99TUKY2
         STCM  R1,B'0111',X99TUPL+5
         LA    R1,X99TUKY3
         STCM  R1,B'0111',X99UPLL+1
         LA    R1,X99TUKY4
         STCM  R1,B'0111',X99UPLLW+1
         MVC   X99SYSOC,CLASS
         CLI   DEST,C' '               ANY DEST SPEC?
         BE    NODEST
         MVC   X99DESTL,DESTLEN        MOVE IN LENGTH
         MVC   X99DEST,DEST            MOVE IN DEST
         MVI   X99EPARM,X'00'          SAY CLASS NOT LAST PARM
         CLI   WRTRID,C' '             ANY WRTRID SPECIFIED
         BE    NODEST
         MVC   X99WRTRL,WRTRLEN        MOVE IN LENGTH
         MVC   X99WRTR,WRTRID          MOVE IN WRTRID
         MVI   X99UPLL,X'00'           SAY DEST NOT LAST PARM
NODEST   LA    R1,DYNALLOC
         DYNALLOC
         LTR   R15,R15                 OK?
         BNZ   CANTALLC                NO CAN DO
         BR    R8             RETURN TO CALLER
***********************************************************************
*                                                                     *
*   ALLOCATION FAILURE                                                *
*                                                                     *
***********************************************************************
CANTALLC MVC   QDTLINE,QBLANK     CLEAR OUT LINE
         CLC   X99ERROR,=X'046C'  WAS IT 'NOT DEF TO JES2'
         BE    BADDEST            YES TELL USER
*
         MVC   QDTLINE(L'MSGERR),MSGERR
         CVD   R15,SCRATCH
         MVC   M2RC,=X'40202020'
         ED    M2RC,SCRATCH+6
*
         UNPK  M2ERC(5),X99ERROR(3)  CONVT DYNAM ALLOC ERR CODE
         NC    M2ERC,HEXMASK
         TR    M2ERC,HEXTAB
         MVI   M2ERC+4,C' '
*
         UNPK  M2INFO(5),X99INFO(3)  CONVT DYNAM ALLOC ERR INFO
         NC    M2INFO,HEXMASK
         TR    M2INFO,HEXTAB
         MVI   M2INFO+4,C' '
         B     GOTMSG
*
BADDEST  MVC   QDTLINE(L'MSGDEST),MSGDEST
         MVC   MDEST,DEST
         CLI   DEST,C' '             ANY DEST
         BNE   GOTMSG                YES.. CONTINUE
         MVC   MDEST(8),=CL8'LOCAL'
         B     GOTMSG
*
GOTMSG   EQU   *
         LA    R1,0                  SET A ZERO
         L     R2,4(R13)             RETURN CODE
         ST    R1,16(R2)
         MVC   QDREPLY,QBLANK        KISS OFF OUR REPLY
         XC    QDRLNG,QDRLNG         AND SAY NOBODY HOME (SNEAKY)
         QSTOP
HEXTAB   DC    C'0123456789ABCDEF'
HEXMASK  DC    X'0F0F0F0F0F0F0F0F'
MSGDEST  DC    C'  DEST XXXXXXXX NOT DEFINED TO JES2; SPIN BYPASSED'
MSGERR   DC    C'CANT ALLOC SYSOUT FOR SPIN ; DARC= XXXX INFO= XXXX R15X
               = XXXX '
MDEST    EQU   QDTLINE+7,8
M2ERC    EQU   QDTLINE+35,4
M2INFO   EQU   QDTLINE+46,4
M2RC     EQU   QDTLINE+56,4
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
TILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'
NOTNUM   QTILT '*** INVALID RANGE FIELD SPECIFIED ***'
BADCLS   QTILT '*** INVALID SYSOUT CLASS SPECIFIED ***'
         LTORG
MVCREC   MVC   BUFFER(1),3(R4)
PACK     PACK  SCRATCH,0(1,R14)    PACK OPERAND                   WGH
MVZ      MVZ   QFZONES(1),0(R14)   MOVE ZONES FROM PARM FIELD     WGH
*
***********************************************************************
*                                                                     *
*   DYNAMIC ALLOCATION CONTROL BLOCKS                                 *
*                                                                     *
***********************************************************************
         DS    0F
S99RBPTR DC    X'80',AL3(S99RB)
*
S99RB    DS    0F
S99RBLN  DC    AL1(20)             LENGTH = 20 BYTES
S99VERB  DC    X'01'               VERB CDE=01 (DSN ALLOC)
S99FLAG1 DC    X'1000'             DONT USE EXISTING ALLOC
S99ERROR DC    AL2(0)              ERROR CODE
S99INFO  DC    AL2(0)              INFO CODE
S99TXTPP DC    A(S99TUPL)          TEXT UNIT PTR PTR
S99RSVD1 DC    A(0)                RESERVED
S99FLAG2 DC    A(0)                FLAGS 2
S99TUPL  DC    A(S99TUKY1)         TEXT UNIT PTR
S99EPARM DC    X'80',AL3(S99TUKY2) LAST PARM IF NO DEST
S99UPLL  DC    X'80',AL3(S99TUKY3) LAST PARM IF NO WRTRID GIVEN
S99UPLLW DC    X'80',AL3(S99TUKY4) LAST PARM IF WRTRID GIVEN
S99TUNIT DS    0F
*
S99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPSAVE'
*
S99TUKY2 DC    X'0018',X'0001',X'0001'       SYSOUT
S99SYSOC DC    C'A'
*
S99TUKY3 DC    X'0058',X'0001'        OPTIONAL DEST=RMTXX OR NODE
S99DESTL DC    X'0000'                LENGTH OF DEST PARM
S99DEST  DC    CL8'LOCAL'             DEST PARM
S99TUKY4 DC    X'0063',X'0001'        OPTIONAL WRTRID=USER OR WRTR
S99WRTRL DC    X'0000'                LENGTH OF WRTR LENGTH
S99WRTR  DC    CL8' '                 WRTR PARM
S99LENG  EQU   *-S99RBPTR
*
*        DYNALLOC REQUEST CONTROL TO FREE DDNAME
*
         DS    0F
FREEPTR  DC    X'80',AL3(FREERB)
*
FREERB   DC    FL1'20'                LENGTH OF RB 20 BYTES
         DC    XL1'02'                VERB CODE 02 FREE BY DDN
         DC    AL2(0)                 FLAGS1
FREERC   DC    XL2'0000'              ERROR CODE
FREEINFO DC    XL2'0000'              INFO CODE
FREETPTR DC    AL4(FREETXPT)          TEXT UNIT PTR PTR
         DC    XL4'00'                RESERVED
         DC    XL4'00'                FLAGS2
*
FREETXPT DC    AL4(FREETU1)           ADDR OF DSN TEXT UNIT
         DC    X'80',AL3(FREETU2)     ADDR OF UNALLOC TEXT
*
FREETU1  DC    X'0001',X'0001',FL2'8',C'HASPSAVE' DDNAME
FREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM
FREELEN  EQU   *-FREEPTR
*
***********************************************************************
*
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         QCOMMON
         $JQE                                                        CL
         $HASPEQU
         IFGRPL  ,                                                WGH42
         $BUFFER ,                                                WGH42
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
WORK     DSECT
         DS    CL80
BUFFER   DS    CL256
SCRATCH  DS    D                   DOUBLEWORD                     WGH
FRSTLINE DS    F                   FIRST LINE TO SAVE             WGH
LINECNT  DS    F                   CURRENT LINE #                 WGH
LASTLINE DS    F                   LAST LINE TO SAVE              WGH
DESTLEN  DS    H                   DESTINATION LENGTH             WGH
DEST     DS    CL8                 DESTINATION                    WGH
WRTRLEN  DS    H                   DESTINATION LENGTH             WGH
WRTRID   DS    CL8                 DESTINATION                    WGH
CLASS    DS    C                   SYSOUT CLASS                   WGH
****************************************************************  WGH
         DS    0F
DYNALLOC DS    (S99LENG)XL1
         ORG   DYNALLOC
*
X99RBPTR DC    X'80',AL3(X99RB)
*
X99RB    DS    0F
X99RBLN  DC    AL1(20)             LENGTH = 20 BYTES
X99VERB  DC    X'01'               VERB CDE=01 (DSN ALLOC)
X99FLAG1 DC    X'1000'             DONT USE EXISTING ALLOC
X99ERROR DC    AL2(0)              ERROR CODE
X99INFO  DC    AL2(0)              INFO CODE
X99TXTPP DC    A(X99TUPL)          TEXT UNIT PTR PTR
X99RSVD1 DC    A(0)                RESERVED
X99FLAG2 DC    A(0)                FLAGS 2
X99TUPL  DC    A(X99TUKY1)         TEXT UNIT PTR
X99EPARM DC    X'80',AL3(X99TUKY2) LAST PARM IF NO DEST
X99UPLL  DC    X'80',AL3(X99TUKY3) LAST PARM IF NO WRTRID
X99UPLLW DC    X'80',AL3(X99TUKY4) LAST PARM IF WRTRID GIVEN
X99TUNIT DS    0F
*
X99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPSAVE'
*
X99TUKY2 DC    X'0018',X'0001',X'0001'       SYSOUT
X99SYSOC DC    C'A'
*
X99TUKY3 DC    X'0058',X'0001'        OPTIONAL DEST=RMTXX OR NODE
X99DESTL DC    X'0000'                LENGTH OF DEST PARM
X99DEST  DC    CL8'LOCAL'             DEST PARM
*
X99TUKY4 DC    X'0063',X'0001'        OPTIONAL WRTRID=USER OR WRTR
X99WRTRL DC    X'0000'                LENGTH OF WRTRID PARM
X99WRTR  DC    CL8' '                 WRTRID PARM
*
         ORG   DYNALLOC
         DS    0F
YREEPTR  DC    X'80',AL3(YREERB)
*
YREERB   DC    FL1'20'                LENGTH OF RB 20 BYTES
         DC    XL1'02'                VERB CODE 02 FREE BY DDN
         DC    AL2(0)                 FLAGS1
YREERC   DC    XL2'0000'              ERROR CODE
YREEINFO DC    XL2'0000'              INFO CODE
YREETPTR DC    AL4(YREETXPT)          TEXT UNIT PTR PTR
         DC    XL4'00'                RESERVED
         DC    XL4'00'                FLAGS2
*
YREETXPT DC    AL4(YREETU1)           ADDR OF DSN TEXT UNIT
         DC    X'80',AL3(YREETU2)     ADDR OF UNALLOC TEXT
*
YREETU1  DC    X'0001',X'0001',FL2'8',C'HASPSAVE' DDNAME
YREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM
         ORG   ,
****************************************************************  WGH
         END
