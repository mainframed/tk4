CPDDB    TITLE 'QUEUE COMMAND - LIST PDDBS FOF A JOB'             ONL01
CPDDB    QSTART ,                  START CPDDB ASSEMBLY           ONL01
***********************************************************************
*                                                                     *
*        PDDB JOBNAME <PDDB#>                                         *
*                                                                     *
* DISPLAY LIMITED INFORMATION ABOUT ALL OF THE PDDB'S FOR A JOB       *
*                                                                     *
* IF THE OPTIONAL PDDB NUMBER IS SPECIFIED, ONLY THAT PDDB WILL       *
* BE DUMPED IN HEX.                                                   *
*                                                                     *
***********************************************************************
         GBLB  &QJTIP             JTIP OPTION, DEFINED BY QSTART
         GBLB  &QSP133             SP 1.3.3 OPTION                UF046
         GBLB  &QSP                SP 1.3.X OPTION                CL007
         USING QCKPT,R10          BASE REG FOR CHECKPONT WORK AREA
         L     R10,QVCKPT         LOAD BASE REG
         USING QDISPLAY,R9        BASE REG FOR DISPLAY WORK AREA
         L     R9,QVDSPL          LOAD BASE REG
         USING WORK,R13           BASE REG FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   CALL FINDJOB TO LOCATE THE JCT                                    *
*                                                                     *
***********************************************************************
         L     R15,=V(FINDJOB)    ADDR OF MODULE TO FIND JOB
         BALR  R14,R15            GO TO IT
         SPACE 2                                                  ONL02
******************************************************************ONL02
*                                                                 ONL02
*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02
*                                                                 ONL02
******************************************************************ONL02
         SPACE 1                                                  ONL02
         QAUTHCK QAPDDB            PERFORM JOB AUTHORIZATION      ONL02
         SPACE 2                                                  ONL02
***********************************************************************
*                                                                     *
*   FIND ALL PDDBS FOR THIS JOB                                       *
*                                                                     *
***********************************************************************
         USING PDB,R2             BASE REG FOR PDDB
         MVC   QDHLINE,HEADING    SET HEADING LINE
         MVI   SWITCH,0           CLEAR FLAG BYTE
         L     R3,QCIOTA          LOAD BASE REG
         LR    R5,R3              IOAREA FOR READ IOT BLOCK
         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046
         USING IOT,R3             BASE REG FOR IOT                UF046
         L     R1,QCJQEA          ADDRESS OF JQE                  UF046
         USING JQE,R1             SET TEMP ADDRESSING             UF046
         TM    JQEFLAG3,JQE3SYSD  JQETRAK POINT TO IOT?           UF046
         BZ    READJCT            NO, SKIP THIS CODE              UF046
         OI    SWITCH,1            SKIP SPIN IOT'S                UF046
         L     R4,JQETRAK          ADDRESS OF FIRST IOT           UF046
         B     READIOT             READ FIRST IOT                 UF046
READJCT  DS    0H                                                 UF046
         USING JCT,R1             SET TEMP ADDRESSING             ONL16
         L     R1,QCJCTA          POINT TO JCT
         L     R4,JCTIOT          FIRST IOT ADDRESS
         DROP  R1                 DROP TEMP ADDRESSING
READIOT  DS    0H                                                 UF046
         BAL   R8,READ            READ THE IOT
         SPACE 1
         LH    R6,QLNG2           WAS A PDDB SPECIFIED?
         LTR   R6,R6
         BZ    NEXTIOT            NO, PROCEED NORMALLY
         BCTR  R6,0               DROP FOR EXECUTES
         MVC   QFZONES,QFZONE     PREPARE FOR NUMERIC TEST
         EX    R6,MVZ             MOVE ZONES FOR TEST
         CLC   QFZONES,QFZONE     ALL NUMERIC?
         BNE   TILT               NO, SKIP IT
         EX    R6,PACK            PACK TO DWORD
         CVB   R6,CONVERT         GET PDDB NUMBER
         OI    SWITCH,X'02'       AND INDICATE FOR LATER
         SPACE 1
NEXTIOT  LR    R4,R3              BASE OF IOT
         CLC   IOTID,=CL4'IOT'    WAS AN IOT READ FROM SPOOL ?    ONL03
         BNE   BADIOT             ERROR IF NO                     ONL03
         CLC   QPJOBID,IOTJBKEY   IS THE IOT'S JOB KEY VALID ?    ONL03
         BNE   BADIOT             ERROR IF NO                     ONL03
         A     R4,IOTPDDBP        OFFSET BEYOND LAST PDDB
         LR    R2,R3              BASE OF IOT
         A     R2,IOTPDDB            ADD OFFSET TO FIRST PDDB     UF046
PDDBLOOP L     R0,PDBDSKEY        GET THE DSID        (FULLWORD) WGH42
         TM    PDBFLAG3,PDB3PLHD   IGNORE PDDB IF                 CL007
         BO    NEXTPDDB             IT IS A PLACE HOLDER          CL007
         TM    SWITCH,X'02'       ONLY WANT ONE PDDB?
         BZ    PDDBLP1            NO, SKIP SPECIAL TEST
         CR    R0,R6              FOUND RIGHT PDDB?
         BNE   NEXTPDDB           NO, TRY NEXT ONE
         LR    R1,R2              POINT TO PDDB
         LA    R0,PDBLENG         LENGTH OF PDDB
         L     R15,=V(HEXDUMP)    POINT TO DISPLAY ROUTINE
         BALR  R14,R15            AND LINK TO IT
         B     NEXTPDDB           JUST INCASE MULTIPLE PDDBS (SYSLOG)
         SPACE 1
PDDBLP1  MVC   QDMSG,QBLANK       BLANK WORK LINE AREA
         LTR   R0,R0              TEST FOR NULL PDDB#
*        BZ    NEXTPDDB           SKIP IF SO                        SBG
         CVD   R0,CONVERT         CONVERT TO DECIMAL
         MVC   DSID-4(8),ED8      MOVE EDIT PATTERN TO DISPLAY
         ED    DSID-4(8),CONVERT+4  EDIT THE DSID
         UNPK  DSFLAG1(3),PDBFLAG1(2)  HEX OF FLAG BYTE
         TR    DSFLAG1,HEXTAB     MAKE PRINTABLE
         MVI   DSFLAG1+2,C' '     CLEAR TRASH BYTE
         L     R0,PDBRECCT        GET THE RECORD COUNT
         CVD   R0,CONVERT         CONVERT TO DECIMAL
         MVC   DSRECCT,ED8        MOVE EDIT PATTERN TO DISPLAY
         ED    DSRECCT,CONVERT+4  EDIT THE RECORD COUNT
         MVC   DSCLASS,PDBCLASS   MOVE PDBCLASS TO DISPLAY
         UNPK  DSMTTR(9),PDBMTTR(5)  UNPACK MTTR TO DISPLAY
         TR    DSMTTR,HEXTAB      MAKE PRINTABLE
         MVI   DSMTTR+9,C' '      CLEAR JUNK BYTE
         MVC   DS#PROC,PDBPNAME   SET PDDB PROC NAME              UF046
         MVC   DS#STEP,PDBSNAME   SET PDDB STEP NAME              UF046
         MVC   DS#DDNM,PDBDDNAM   SET PDDB DD NAME                UF046
         LH    R0,PDBLRECL        PICK UP LRECL                   WGH
         CVD   R0,CONVERT         CONVERT TO DECIMAL              WGH
         MVC   DS#LRECL,ED8       MOVE EDIT PATTERN TO DISPLAY    WGH
         ED    DS#LRECL,CONVERT+4 EDIT THE LRECL                  WGH
         UNPK  DS#RECFM(3),PDBRECFM(2) UNPACK RECFM TO DISPLAY    WGH
         TR    DS#RECFM(2),HEXTAB MAKE PRINTABLE                  WGH
         MVI   DS#RECFM+2,C' '    CLEAR JUNK BYTE                 WGH
         LA    R1,DS#RECFM+3      SET FOR FORMAT CONCAT           WGH
         MVI   0(R1),C'U'         DEFAULT TO RECFM U              WGH
         TM    PDBRECFM,X'C0'     FIXED OR VARIABLE ?             WGH
         BZ    RECFMZIP           NO.. MUST BE ZIP                WGH
         BO    CHKBLK             BOTH.. MUST BE U                WGH
         MVI   0(R1),C'F'         DEFAULT TO RECFM F              WGH
         TM    PDBRECFM,X'80'     FIXED    RECORDS                WGH
         BO    CHKBLK             YES.. LEAVE IT RECFM F          WGH
         MVI   0(R1),C'V'         NO... MUST BE RECFM V           WGH
         B     CHKBLK             CHECKED IF BLOCKED              WGH
RECFMZIP MVI   0(R1),C'?'         UNKNOWN                         WGH
CHKBLK   LA    R1,1(R1)           BUMP TO NEXT POSITION           WGH
         TM    PDBRECFM,X'10'     BLOCKED ?                       WGH
         BZ    CKSPAN             NO.. CHECK FOR SPANNED          WGH
         MVI   0(R1),C'B'         YES... SET BLOCKED              WGH
         LA    R1,1(R1)           BUMP TO NEXT POSITION           WGH
CKSPAN   TM    PDBRECFM,X'08'     SPANNED OR STANDARD?            WGH
         BZ    GETCCTL            NO... CHECK CONTROL             WGH
         MVI   0(R1),C'S'         YES.. SET                       WGH
         LA    R1,1(R1)           BUMP TO NEXT POS                WGH
GETCCTL  TM    PDBRECFM,X'06'     CCTL ?                          WGH
         BZ    FMTDONE            NO.. THATS IT                   WGH
         BO    UNCCTL             BOTH.. ???                      WGH
         MVI   0(R1),C'A'         DEFAULT TO A                    WGH
         TM    PDBRECFM,X'04'     IS IT ASA?                      WGH
         BO    FMTDONE            YES... LEAVE IT                 WGH
         MVI   0(R1),C'M'         NO.... MUST BE MACHINE          WGH
         B     FMTDONE                                            WGH
UNCCTL   MVI   0(R1),C'?'         UNKNOWN                         WGH
         B     FMTDONE                                            WGH
FMTDONE  EQU   *                                                  WGH
         MVC   QDMLNG,=H'80'      SET THE LENGTH
         LA    R0,QDMSG           POINT TO MESSAGE
         ST    R0,QDMSGA          SET IN AREA
         L     R15,=V(DISPLAY)    POINT TO DISPLAY ROUTINE
         BALR  R14,R15            LINK TO IT
NEXTPDDB LA    R2,PDBLENG(R2)     POINT TO NEXT PDDB
         CR    R2,R4              HAVE WE GONE PAST THE LAST PDDB
         BL    PDDBLOOP           NO. KEEP TRYING
         L     R4,IOTIOTTR        DISK ADDR OF NEXT IOT
SPIN     LTR   R4,R4              IS THERE ANOTHER IOT?
         BZ    SPINIOT            NO. TRY THE SPIN IOT.
         BAL   R8,READ            READ THE IOT
         B     NEXTIOT            SEARCH THE NEXT IOT
         USING JCT,R1             BASE REG FOR JCT                ONL16
SPINIOT  TM    SWITCH,1           DID WE SEARCH THE SPINIOT ALREADY
         BO    STOP               YES, DONE
         OI    SWITCH,1           SET SWITCH
         L     R1,QCJCTA          LOAD BASE REG
         L     R4,JCTSPIOT        DISK ADDR OF SPIN IOT
         B     SPIN               SEARCH THE SPIN IOT CHAIN
         DROP  R1
STOP     QSTOP                    GO BACK TO CALLER
***********************************************************************
*                                                                     *
*   READ A BLOCK FROM HASPACE                                         *
*                                                                     *
***********************************************************************
READ     ST    R4,QCTRAK          STORE DISK ADDR
         LR    R1,R5              IOAREA ADDRESS
         L     R15,=V(READSPC)    ADDR OF ROUTINE TO READ HASPACE
         BALR  R14,R15            GO TO IT
         BR    R8                 RETURN TO CALLER
ED8      DC    X'4020202020202120'
MVZ      MVZ   QFZONES(1),QPARM2
PACK     PACK  CONVERT,QPARM2(1)
HEXTAB   EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
TILT     QTILT 'INVALID PDDB# SPECIFIED'
BADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03
HEADING  DC    CL80' '
         ORG   HEADING            POINT TO START OF AREA
         DC    C'    DSID'
         DC    C' F1'             FLAG BYTE 1
         DC    C'  RECORDS'
         DC    C' C'              CLASS
         DC    C'   MTTR  '       MTTR
         DC    C' PROCNAME'
         DC    C' STEPNAME'
         DC    C' DDNAME  '
         DC    C'   RECFM '                                       WGH
         DC    C'   LRECL '                                       WGH
         ORG   ,                  BACK TO NORMAL ADDRESSING
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
CPDDB    CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         $BUFFER ,                                                UF046
         IFGRPL
         $TAB
         $JCT
         $JQE                                                     UF046
         $PDDB
         $IOT
         $HASPEQU
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG
         DS    CL4
DSID     DS    CL4
         DS    CL1
DSFLAG1  DS    CL2
         DS    CL1
DSRECCT  DS    CL8
         DS    CL1
DSCLASS  DS    CL1
         DS    CL1
DSMTTR   DS    CL8
         DS    CL1
DS#PROC  DS    CL8
         DS    CL1
DS#STEP  DS    CL8
         DS    CL1
DS#DDNM  DS    CL8
         DS    CL3                                             WGH
DS#RECFM DS    CL4                                             WGH
         DS    CL1                                             WGH
DS#LRECL DS    CL8                                             WGH
WORK     DSECT
         DS    CL72
SWITCH   DS    C
CONVERT  DS    D
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
