DISPLAY  TITLE 'QUEUE COMMAND - 3270 DISPLAY ROUTINES'            ONL01
DISPLAY  QSTART ,                  START DISPLAY CSECT ASSEMBLY   ONL01
         PRINT GEN
***********************************************************************
* RNB CHANGES:                                                        *
*     (1) RNB13 - MODIFICATIONS TO FIX PROBLEMS WITH TCAM FULL-SCREEN *
*                 PROCESSING OF TEST-REQUEST, SYSTEM REQUEST, AND THE *
*                 PA2/PA3 KEYS.                                       *
*     (2) RNB14 - MODIFICATIONS TO FIX PROBLEMS FULL-SCREEN           *
*                 PROCESSING. THIS ONE ALLOWS THE USER TO TYPE IN THE *
*                 TOP COMMAND LINE WITHOUT QUEUE MISINTERPRETING WHAT *
*                 WAS ENTERED. (TRY THE DO COMMAND FROM BOTH PLACES   *
*                 WITHOUT THE MOD TO SEE THE EFFECT.)                 *
***********************************************************************
         GBLB  &QPFK          PF-KEY OPTION. DEFINED BY QSTART     ICBC
         GBLB  &QNERDC                                            UF040
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     ADDR OF DISPLAY WORK AREA
         USING QCPRINT,R9     BASE REG FOR PRINT   WORK AREA       FCI*
         L     R9,QVPRINT     ADDR OF PRINT   WORK AREA            FCI*
***********************************************************************
*                                                                     *
*   CHECK FOR ROOM ON SCREEN                                          *
*                                                                     *
***********************************************************************
         MVI   QDOVER,0       ZERO OUT THE PAGE OVERFLOW INDICATOR
         MVI   QDPLUS,C' '    BLANK THE OVERFLOW INDICATOR
         LH    R4,QDMLNG      LOAD MSG LENGTH
         CH    R4,QDSCRLEN    IS THE MSG LENGTH > SCRSIZE?        UF003
         BH    RETURN         YES. GO AWAY.
         MVC   QPRSAVE,QDTLINE        SAVE SUBTITLE LINE ON ENTRY  FCI*
         LTR   R4,R4          IS MSG LENGTH ZERO?
         BZ    WRTSCR         YES. WRITE SCREEN.
         MVI   QDPLUS,C'+'    INDICATE SCREEN OVERFLOW
         AH    R4,QDNEXT      ADD CURRENT LOCATION ON SCREEN
         CH    R4,QDSCRLEN    IS THERE ROOM ON THE SCREEN?        UF003
         BH    WRTSCR         NO. WRITE SCREEN.
***********************************************************************
*                                                                     *
*   MOVE THE MESSAGE TO THE SCREEN                                    *
*                                                                     *
***********************************************************************
DSP2     LH    R7,QDMLNG      LOAD MESSAGE LENGTH
         LTR   R7,R7          IS MESSAGE LENGTH ZERO?
         BZ    RETURN         YES. RETURN.
         LH    R4,QDNEXT      LOAD CURRENT SCREEN LINE NUMBER
         LR    R1,R4          SAVE LINE NUMBER
         LA    R4,QDLINE1(R4) LOAD ADDRESS OF NEXT LINE
         L     R6,QDMSGA      LOAD ADDR OF MESSAGE
         LH    R5,QDLNELEN    LENGTH MUST BE MULTIPLE OF LINESIZE UF003
DSP3     CR    R5,R7          IS 5 NOT LESS THAN 7?
         BNL   DSP4           YES. GO DO IT.
         AH    R5,QDLNELEN    INCR BY LINE LENGTH                 UF003
         B     DSP3           TRY AGAIN
DSP4     AR    R1,R5          UPDATE LINE NUMBER
         STH   R1,QDNEXT      STORE LINE NUMBER
         MVCL  R4,R6          MOVE THE MESSAGE TO THE SCREEN
***********************************************************************
*                                                                     *
*   RETURN TO CALLER                                                  *
*                                                                     *
***********************************************************************
RETURN   QSTOP
***********************************************************************
*                                                                     *
*   WRITE A FULL SCREEN, WAIT FOR REPLY                               *
*                                                                     *
***********************************************************************
WRTSCR   LA    R1,QDLINE1     ENSURE PRINTABILITY                 UF003
         LH    R15,QDSCRLEN   LENGTH TO XLATE                     UF003
         LA    R14,255        SET FOR EXECUTE                     UF003
WRTSCR1  CR    R15,R14        SEE IF ONLY ONE NEEDED              UF003
         BNH   WRTSCRN        YES, DO IT                          UF003
         EX    R14,WRTSCRTR   TRANSLATE PART OF BUFFER            UF003
         LA    R1,1(R1,R14)   POINT TO NEXT SLOT                  UF003
         SR    R15,R14        DROP FOR LENGTH DONE                UF003
         BCTR  R15,0          END FOR EXECUTE FIX                 UF003
         B     WRTSCR1        LOOP TILL DONE                      UF003
         SPACE 1                                                  UF003
WRTSCRTR TR    0(*-*,R1),TABLE  FIX UNPRINTABLES                  UF003
         SPACE 1                                                  UF003
WRTSCRN  BCTR  R15,0          DROP FOR EXECUTE                    UF003
         LTR   R15,R15        TEST FOR NULL                       UF003
         BM    *+8            SKIP IF NULL                        UF003
         EX    R15,WRTSCRTR   TRANSLATE END OF BUFFER             UF003
         SPACE 1                                                  UF003
TPUTSCRN DS    0H                                                 UF003
         TM    QFLAG1,QFLG1QUI QUIET MODE SET ?                   WGH
         BO    CRTSAME        YES.. BYPASS TERMINAL OUTPUT        WGH
         L     R1,QDOSZR0     CHECK TERM TYPE                     WGH
         LTR   R1,R1          IS IT CRT                           WGH
         BZ    NOTCRT         NO.. DO TTY OUTPUT                  WGH
         LH    R6,QDLNELEN    GET LINESIZE                        WGH
         BCTR  R6,0           REDUCE FOR EX                       WGH
         LA    R5,QDSCREEN    START OF SCREEN                     WGH
         AH    R5,QDSCRPLN    PLUS LENGTH OF BUFFER               WGH
BLNKLOOP SH    R5,QDLNELEN    MINUS ONE LINE                      WGH
         EX    R6,BLNKTST     IS THIS LINE BLANK                  WGH
         BE    BLNKLOOP       YES... BACK UP SOME MORE            WGH
         AH    R5,QDLNELEN    NO... ADD IT BACK IN                WGH
         LA    R6,QDSCREEN    START OF SCREEEN BUFFER             WGH
         SR    R5,R6          CALCULATE SIZE                      WGH
*        LH    R0,QDSCRPLN    LOAD LENGTH FOR TPUT                UF003
         TPUT  QDSCREEN,(5),FULLSCR,MF=(E,QTPUT)          WGH     UF003
         B     CRTSAME        REJOIN LOGIC                        WGH
BLNKTST  CLC   0(0,R5),=CL132' '      ALL BLANKS?                 WGH
NOTCRT   EQU   *                                                  WGH
*        TPUT  QUECMD,L'QUECMD,ASIS,MF=(E,QTOUT)                  WGH
*        TPUT  QDTLINE,63,EDIT,MF=(E,QTPUT)                       WGH
         MVI   QOUTLINE+1,5                    DATA + HEADER      WGH
         MVI   QOUTLINE+4,C' '                 BLANK LINE         WGH
         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)
         MVI   QOUTLINE+1,L'QUECMD+63+4        DATA + HEADER      WGH
         MVC   QOUTLINE+4(L'QUECMD),QUECMD       DATA TO BUFFER   WGH
         MVC   QOUTLINE+4+L'QUECMD(63),QDTLINE   DATA TO BUFFER   WGH
         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)
*        TPUT  QDHLINE,79,EDIT,MF=(E,QTPUT)                       WGH
         MVI   QOUTLINE+1,79+4         SIZE OF DATA + HEADER      WGH
         MVC   QOUTLINE+4(79),QDHLINE  MOVE DATA TO BUFFER        WGH
         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)
         LH    R6,QDLNELEN    GET LINESIZE                        WGH
         BCTR  R6,0           REDUCE FOR EX                       WGH
         LA    R5,QDLINE1     START OF DATA AREA                  WGH
         AH    R5,QDSCRLEN    PLUS LENGTH OF DATA AREA            WGH
BLNKLOP2 SH    R5,QDLNELEN    MINUS ONE LINE                      WGH
         EX    R6,BLNKTST     IS THIS LINE BLANK                  WGH
         BE    BLNKLOP2       YES.. BACK UP SOME MORE             WGH
         AH    R5,QDLNELEN    NO... ADD IT BACK IN                WGH
         LA    R6,QDLINE1     START OF DATA AREA                  WGH
         SR    R5,R6          CALCULATE SIZE                      WGH
         SR    R4,R4          CLEAR FOR DIVIDE                    WGH
         LH    R6,QDLNELEN    GET LINESIZE FOR DIVIDE             WGH
         DR    R4,R6          FIND NUMBER OF LINES TO OUTPUT      WGH
         LR    R6,R5          LINES LEFT TO OUTPUT                WGH
         LA    R5,QDLINE1     FIRST ONE                           WGH
         LTR   R6,R6          CHECK FOR ZERO                      WGH
         BP    MSGLOOP        NO.. DO IT                          WGH
         LA    R6,1           YES. DO AT LEAST 1 EVEN IF BLANK    WGH
MSGLOOP  EQU   *                                                  WGH
*        TPUT  (R5),79,EDIT,MF=(E,QTPUT)                          WGH
         MVI   QOUTLINE+1,79+4         SIZE OF DATA + HEADER      WGH
         MVC   QOUTLINE+4(79),0(R5)    MOVE DATA TO BUFFER        WGH
         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)
         AH    R5,QDLNELEN            BUMP LINE PTR               WGH
         BCT   R6,MSGLOOP                                         WGH
TYPROMPT EQU   *                                                  WGH
         LA    R6,REPLY       ADDRESS OF DEFAULT REPLY            WGH
         CLI   QDPLUS,C'+'    IS THERE MORE DATA?                 WGH
         BNE   NOPLUS         NO.. LEAVE DEFAULT                  WGH
         LA    R6,REPLY2      YES.. USE ALTERNATE                 WGH
NOPLUS   EQU   *                                                  WGH
*        TPUT  (R6),L'REPLY,ASIS,MF=(E,QTPUT)                    WGH
         MVI   QOUTLINE+1,L'REPLY+4            DATA + HEADER      WGH
         MVC   QOUTLINE+4(L'REPLY),0(R6)    DATA TO BUFFER        WGH
         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=ASIS,MF=(E,PUTIOPL)
CRTSAME  EQU   *                                                  WGH
         MVC   QDTLINE,QPRSAVE        RESTORE SUBTITLE INFO        FCI*
         L     R1,QDOSZR0     CHECK TERM TYPE?                     WGH
         LTR   R1,R1          FOR CRT OR NOT CRT                   WGH
         BNZ   ISCRT          GO PROCESS FULL SCREEN MODE          WGH
         XC    PFREPLY,PFREPLY  PREPARE FOR TTY/TTY-CLIST/BATCH    WGH
         XC    QDREPLY,QDREPLY                                     WGH
*        TGET  QDREPLY,63,EDIT,MF=(E,QTGET)                        WGH
GETDATA  EQU   *                                                   WGH
         TM    QFLAG2,QFLG2NSK     IS NOSTACK FLAG ON              WGH
         BO    GETTERM             YES.. BYPASS STACK              WGH
         GETLINE INPUT=ISTACK,TERMGET=EDIT,MF=(E,GETIOPL)          WGH
         B     GOTDATA             PROCESS INPUT                   WGH
GETTERM  GETLINE INPUT=TERM,TERMGET=EDIT,MF=(E,GETIOPL)            WGH
GOTDATA  CH    R15,=H'16'     EOD FROM BATCH TSO OR CLIST ?        WGH
         BE    GETDATA        YES.. TRY AGAIN                      WGH
         CH    R15,=H'4'      ANY DATA TO PROCESS?                 WGH
         BH    GETDATA        NO... TRY AGAIN                      WGH
         BE    STACKIN        YES.. CMD FROM STACK                 WGH
         TM    QFLAG2,QFLG2STK CMD FROM TERM/PREVIOUS FROM STACK ? WGH
         BZ    EASYIN         NO.. CONTINUE                        WGH
         NI    QFLAG2,255-QFLG2STK  FLAG CMD FROM TERMINAL         WGH
         NI    QFLAG1,255-QFLG1QUI  RESET QUIET MODE               WGH
         B     EASYIN              AND CONTINUE                    WGH
STACKIN  OI    QFLAG2,QFLG2STK      FLAG CMD FROM STACK            WGH
EASYIN   L     R1,GETBLOCK+4  ADDRESS OF INPUT BUFFER              WGH
         LH    R2,0(R1)       GET LENGTH OF INPUT                  WGH
         SH    R2,=H'4'       MINUS HEADER                         WGH
         CH    R2,=H'63'      MAX WE CAN TAKE                      WGH
         BNH   *+8            SKIP RESET                           WGH
         LA    R2,63          FORCE TO MAX                         WGH
         STH   R2,QDRLNG      SAVE INPUT LENGTH                    WGH
         LTR   R2,R2          TEST LENGTH FOR MOVE                 WGH
         BZ    FREEBUF        NOTHING TO MOVE                      WGH
         BCTR  R2,0           REDUCE FOR EX                        WGH
         MVC   QDREPLY(0),4(R1)    MOVE DATA TO BUFFER             WGH
         EX    R2,*-6              MOVE DATA TO BUFFER             WGH
FREEBUF  LH    R0,0(R1)            PUT LENGTH  IN R0               WGH
         O     R0,=X'01000000'     PUT SUBPOOL IN R0               WGH
         FREEMAIN R,A=(1),LV=(0)   RELEASE BUFFER                  WGH
*        CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER          WGH
*        BNE   NOCLEAR2       NO, CONTINUE                         WGH
*        TCLEARQ INPUT        CLEAR INPUT QUEUE                    WGH
*NOCLEAR2 STH   R1,QDRLNG      SAVE INPUT LENGTH                    WGH
         B     INSANE                                              WGH
ISCRT    EQU   *                                                   WGH
         LA    R6,QDREPLY                                          ICBC
         XC    PFREPLY,PFREPLY                                     ICBC
         XC    QDREPLY,QDREPLY                                     ICBC
*        TGET  PFREPLY,69,ASIS,MF=(E,QTGET)
*        CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?         ICBC
*        BNE   NOCLEAR        NO. CONTINUE.                        ICBC
*        TCLEARQ INPUT        CLEAR THE QUEUE                      ICBC
GETCRT   EQU   *                                                   WGH
         TM    QFLAG2,QFLG2NSK     IS NOSTACK FLAG ON              WGH
         BO    GETCRTT             YES.. BYPASS STACK              WGH
         GETLINE INPUT=ISTACK,TERMGET=ASIS,MF=(E,GETIOPL)          WGH
         B     GOTCRT                                              WGH
GETCRTT  GETLINE INPUT=TERM,TERMGET=ASIS,MF=(E,GETIOPL)            WGH
GOTCRT   CH    R15,=H'16'     EOD FROM CLIST ?                     WGH
         BE    GETCRT         YES.. GET NEXT INPUT                 WGH
         CH    R15,=H'4'      ANY DATA TO PROCESS?                 WGH
         BE    STACKIN        COMMAND FROM CLIST..                 WGH
         BH    GETCRT         NO... TRY AGAIN                      WGH
         TM    QFLAG2,QFLG2STK  CMD FROM TERM/PREVIOUS FROM STACK? WGH
         BZ    CRTIN          NO.. CONTINUE                        WGH
         NI    QFLAG2,255-QFLG2STK  YES.. RESET CMD FROM STACK     WGH
         NI    QFLAG1,255-QFLG1QUI  RESET QUIET MODE               WGH
CRTIN    L     R1,GETBLOCK+4  ADDRESS OF INPUT BUFFER              WGH
         LH    R2,0(R1)       GET LENGTH OF INPUT                  WGH
         SH    R2,=H'4'       MINUS HEADER                         WGH
         CH    R2,=H'69'      MAX WE CAN TAKE                      WGH
         BNH   *+8            SKIP RESET                           WGH
         LA    R2,69          FORCE TO MAX                         WGH
         LTR   R4,R2          SAVE INPUT LENGTH                    WGH
         BZ    FREEBUF2       NOTHING TO MOVE                      WGH
         BCTR  R2,0           REDUCE FOR EX                        WGH
         MVC   PFREPLY(0),4(R1)    MOVE DATA TO BUFFER             WGH
         EX    R2,*-6              MOVE DATA TO BUFFER             WGH
FREEBUF2 LH    R0,0(R1)            PUT LENGTH  IN R0               WGH
         O     R0,=X'01000000'     PUT SUBPOOL IN R0               WGH
         FREEMAIN R,A=(1),LV=(0)   RELEASE BUFFER                  WGH
         LR    R1,R4          PUT LENGTH IN R1                     WGH
NOCLEAR  IC    R4,PFCODE                                           ICBC
         XR    R5,R5                                               ICBC
         CLI   PFCODE,X'F0'      TEST-REQ/SYS-REQ?                RNB13
         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13
         CLI   PFCODE,X'01'      OTHER KIND OF SYS-REQ?           RNB13
         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13
*        CLI   PFCODE,X'6E'      PA2?                      WGH    RNB13
*        BE    TPUTSCRN          /YES - GO RESHOW SCREEN   WGH    RNB13
         CLI   PFCODE,X'6B'      PA3?  (TCAM GENERATED)           RNB13
         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13
         N     R4,=X'0000000F'   EXTRACT PF-KEY NUMBER             ICBC
         CH    R4,=H'12'                                           ICBC
         BH    ENTKEY           "ENTER" KEY                        ICBC
         BCTR  R4,0                                                ICBC
         SLL   R4,3              TIMES SIZE OF AN ENTRY           UF043
         LA    R5,QDPFKTAB                                        UF043
         LA    R5,0(R4,R5)                                         ICBC
         MVC   QDREPLY(8),0(R5)  MOVE PF-KEY VALUE                UF043
         LA    R5,8                                               UF043
         LA    R6,6(,R6)                                          UF043
         SH    R1,=H'3'          ALLOW USER TO INPUT ON EITHER    UF043
         BZ    NOTXT             THE TOP OR BOTTOM COMMAND LINE   RNB14
         MVC   0(57,R6),PFTXT                                     UF043
         LA    R5,6                                               UF043
         SH    R1,=H'3'                                           UF043
         B     NOTXT                                              RNB14
ENTKEY   EQU   *                                                   ICBC
         SH    R1,=H'3'                                            ICBC
         BZ    NOTXT                                               ICBC
         MVC   0(63,R6),PFTXT                                     RNB14
         SH    R1,=H'3'                                            ICBC
NOTXT    LA    R1,0(R5,R1)                                         ICBC
         STH   R1,QDRLNG      STORE LENGTH OF REPLY                ICBC
INSANE   OC    QDREPLY,QBLANK     UPPERCASE THE COMMAND            FCI*
         CLC   QDREPLY(2),=CL2'PR' POSSIBLE PRINT COMMAND      PWF FCI*
         BNE   CLSCRN             NOPE..SPLIT NORMALLY             FCI*
*                                                                  FCI*
         L     R15,=V(PRINT)  FETCH PRINT ENTRY ADDRESS            FCI*
         BALR  R14,R15        AND CALL HIM                         FCI*
         LTR   R15,R15        HOW IS HIS RETURN CODE               FCI*
         BNZ   CLSCRN         NOTHING TO REPORT                    FCI*
*                                                                  FCI*
         B     TPUTSCRN       GO REPOST SCREEN                     FCI*
CLSCRN   LA    R4,QDLINE1     LOAD ADDRESS OF FIRST LINE           FCI*
         LH    R5,QDSCRLEN    LOAD LENGTH OF SCREEN               UF003
         SR    R6,R6          NO SENDING FIELD NEEDED              FCI*
         STH   R6,QDNEXT      STORE ZERO IN LINE NUMBER            FCI*
         SR    R7,R7          FILL SCREEN WITH NULLS               FCI*
         MVCL  R4,R6          CLEAR THE SCREEN                     FCI*
*
         LH    R1,QDRLNG      STORE LENGTH OF REPLY
         LTR   R1,R1          WAS THERE A RESPONSE FROM USER?
         BNZ   INTER          YES. INTERRUPT PROCESSING.
         MVI   QDOVER,1       INDICATE PAGE OVERFLOW
         B     DSP2           CONTINUE PROCESSING
INTER    L     R13,QFRSTSA    GO BACK TO MAIN MODULE
         LM    R14,R12,12(R13) RESTORE REGISTERS FROM FIRST SAVEAREA
         BR    R10            ADDRESS OF INTERRUPT HANDLER IN QUEUE
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
REPLY    DC    C'REPLY - '    TTY PROMPT                          WGH
REPLY2   DC    C'REPLY + '    TTY PROMPT                          WGH
QUECMD   DC    C'QUEUE COMMAND - ' TTY/BATCH TSO PROMPT           WGH
* TABLE OF PRINTABLE CHARACTERS
TABLE    DC    CL64' '
         DC    191AL1(*-TABLE)  REST OF TABLE IS OK               UF003
         DC    C' '              EXCEPT FOR X'FF'                 UF031
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         QCOMMON
         $HASPEQU
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
