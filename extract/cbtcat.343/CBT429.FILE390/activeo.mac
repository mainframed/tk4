ACTIVE   TITLE 'QUEUE COMMAND - LIST ACTIVE JOB STATUS'           ONL01
ACTIVE   QSTART ,                  START ACTIVE CSECT ASSEMBLY    ONL01
******************************************************************
* RNB CHANGES:                                                   *
*       (1) RNB07 - WHEN LISTING BATCH JOBS, SAY THEY            *
*                   ARE ON THE XEQ QUEUE INSTEAD OF INPUT QUEUE. *
*       (1) RNB26 - BUG FIX TO STOP LISTING A LOT OF STRANGE JOBS*
******************************************************************
         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA
         L     R9,QVCKPT      LOAD BASE REG
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA
******************************************************************UF006
*                                                                 UF006
*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006
*                                                                 UF006
******************************************************************UF006
CALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006
         BALR  R14,R15        GO TO IT                            UF006
         L     R8,16          POINT TO CVT
         USING CVTDSECT,R8
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *
*                                                                     *
***********************************************************************
         L     R7,CVTASVT     POINT TO ASVT
         L     R2,CVTMSER     POINT TO ASVT
         USING ASVT,R7
         L     R7,ASVTMAXU    LOAD THE MAX ASCBS
         DROP  R7
         L     R8,CVTJESCT    POINT TO JESCT
         DROP  R8
         USING JESCT,R8
         L     R8,JESSSCT     POINT TO SSCT
         DROP  R8
         USING SSCT,R8
         L     R8,SSCTSSVT    POINT TO SSVT
         DROP  R8
         USING SSVT,R8
***********************************************************************
*                                                                     *
*        FIND THE ACTIVE MAIN SUBSYSTEM'S HAVT                        *
*                                                                     *
***********************************************************************
         L     R6,SVTHAVT     POINT TO HAVT
         LTR   R6,R6          TEST IF ANY PITS
         BZ    NOHAVT         NO, IGNORE COMMAND
         LA    R6,4(,R6)      POINT TO FIRST SJB POINTER
         USING SJB,R5
         MVC   QDHLINE,INITHD MOVE IN THE HEADING
***********************************************************************
*                                                                     *
*        BUILD THE MESSAGE(S) DESCRIBING THE JOBS                     *
*                                                                     *
***********************************************************************
BLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA
         L     R5,0(,R6)      POINT TO SJB
         LTR   R5,R5          TEST FOR ANY
         BZ    NEXTSJB
         L     R4,SJBSJB      TEST FOR BATCH JOB
         LTR   R4,R4          IS IT
         BNZ   BATCHCHK
         L     R3,SJBJQOFF    LOAD JQE OFFSET
         LTR   R3,R3          ANY JQE?                            RNB26
         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26
         AL    R3,QCJQTA      ADD TO JQE ORIGIN
         USING JQE,R3         BASE REG FOR JQE
         TM    JQEFLAG3,JQE3JOB BATCH JOB?  (SHOULDN'T BE)        RNB26
         BO    UNK              /YES - SAY UNKNOWN                RNB26
         TM    JQEFLAG3,JQE3TSU TSO USER?                         UF020
         BO    TSOCHK         YES, GO PROCESS                     UF020
         TM    JQEFLAG3,JQE3STC STARTED TASK?                     UF020
         BO    STCCHK         YES, GO PROCESS                     UF020
UNK      MVC   QUEUE,=CL8'UNKNOWN'                                UF020
         B     NOTTSO         PRINT WHATEVER WE CAN FIND          UF020
BATCHCHK CLI   QPARM1,C'B'    BATCH DISPLAY ONLY ?
         BE    BATCHMSG       YES. GO PROCESS
         CLI   QPARM1,C'J'    BATCH DISPLAY ONLY ?                ONL10
         BE    BATCHMSG       YES. GO PROCESS                     ONL10
         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?
         BNE   NEXTSJB        NO. GET NEXT SJB
BATCHMSG LR    R5,R4          COPY THE SJB ADDRESS
         L     R3,SJBJQOFF    POINT TO JQE OFFSET
         LTR   R3,R3          ANY JQE?                            RNB26
         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26
         AL    R3,QCJQTA      POINT TO THE JQE
         IC    R0,JQETYPE     GET THE JOB TYPE
         MVC   QUEUE,=CL8'   XEQ'                                 RNB07
         STC   R0,QUEUE+7     SET THE QUEUE TYPE
         OI    QUEUE+7,X'80'  SET THE PRINTABLE QUEUE TYPE
         B     NOTTSO         GO TO COMMON ROUTINE
TSOCHK   CLI   QPARM1,C'T'    TSO DISPLAY ONLY ?
         BE    TSOMSG         YES. GO PROCESS
         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?
         BNE   NEXTSJB        NO. GET NEXT SJB ?
TSOMSG   MVC   QUEUE,=CL8'TSO USER'
         B     NOTTSO
STCCHK   CLI   QPARM1,C'S'    STC DISPLAY ONLY ?
         BE    STCMSG         YES. GO PROCESS.
         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?
         BNE   NEXTSJB        NO. GET NEXT SJB.
STCMSG   MVC   QUEUE,=CL8'SYSTEM Q'
NOTTSO   L     R1,SJBASCBP    POINT TO ASCB
         USING ASCB,R1
         LM    R14,R15,ASCBEJST GET THE CPU TIME
         SRDL  R14,12         SKIP THE GARBAGE
         D     R14,=F'10000'  GET THE VALUE IN .01 SECS
         CVD   R15,CONVERT    GET THE DECIMAL VALUE
         MVC   TCBTIME,EDCPU  MOVE EDIT MASK
         ED    TCBTIME,CONVERT+4 EDIT THE NUMBER
         MVI   TCBTIME+L'TCBTIME-1,C'S' SET SECONDS
         LM    R14,R15,ASCBSRBT GET THE CPU TIME
         SRDL  R14,12         SKIP THE GARBAGE
         D     R14,=F'10000'  GET THE VALUE IN .01 SECS
         CVD   R15,CONVERT    GET THE DECIMAL VALUE
         MVC   SRBTIME,EDCPU  MOVE EDIT MASK
         ED    SRBTIME,CONVERT+4 EDIT THE NUMBER
         MVI   SRBTIME+L'SRBTIME-1,C'S' SET SECONDS
         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME
         LH    R14,JQEJOBNO   LOAD JOB NUMBER
         CVD   R14,CONVERT    GET THE DECIMAL VALUE
         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE
         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE
         LR    R4,R2          COPY THE ADDRESS
FINDCSCB ICM   R4,15,0(R4)    POINT TO THE NEXT CSCB
         BZ    NEXTSJB
         USING CSCDSECT,R4
         TM    CHTRKID,CHINITID  IS IT INIT?                       WGH
         BO    FINDCSCB          YES.. NEXT CSCB                   WGH
         TM    CHTRKID,CHJOBID   IS IT JOB OR STC ?                WGH
         BO    DOSTC             YES.. GO PROCESS                  WGH
         CLC   CHKEY,JQEJNAME    NO... TEST FOR RIGHT TSU          WGH
         BNE   FINDCSCB          NO... NEXT CSCB                   WGH
         MVC   STEPNAME,CHCLS    CHANGE STEP FOR TSU               WGH
         MVC   PROCSTEP,=CL8' '  BLANK PROCSTEP                    WGH
         B     NOCSCB            CONTINUE                          WGH
DOSTC    CLC   CHCLS,JQEJNAME    TEST FOR RIGHT JOB/STC            WGH
         BNE   FINDCSCB          NOPE
         MVC   PROCSTEP,CHPROCSN MOVE IN THE PROCSTEP NAME
         MVC   STEPNAME,CHSTEP   MOVE IN STEPNAME (JOB)
         TM    JQEFLAG3,JQE3STC  STARTED TASK?
         BNO   NOCSCB            NO...  CONTINUE
         MVC   STEPNAME,CHKEY    YES.. CHANGE STEP FOR STC
         DROP  R4
NOCSCB   LH    R0,ASCBFMCT    GET NUMBER OF SLOTS
         SLL   R0,2           GET NUMBER OF K
         CVD   R0,CONVERT     GET THE DECIMAL VALUE
         MVC   SLOTS,ED5      MOVE EDIT MASK
         ED    SLOTS,CONVERT+5 GET THE K
         MVI   SLOTS+L'SLOTS-1,C'K' SET THE 'K'
         MVC   QDMLNG,=H'80'  SET THE LENGTH
         LA    R0,QDMSG       GET THE ADDRESS
         ST    R0,QDMSGA      SET THE ADDRESS
         L     R15,=V(DISPLAY) POINT TO THE ROUTINE
         BALR  R14,R15        CALL THE ROUTINE
***********************************************************************
*                                                                     *
*        SEND THE MESSAGE DESCRIBING THE PIT                          *
*                                                                     *
***********************************************************************
NEXTSJB  LA    R6,4(,R6)      POINT TO NEXT HAVT POINTER
         DROP  R1,R5
         BCT   R7,BLDMSG      TEST FOR NEXT HAVT POINTER
***********************************************************************
*                                                                     *
*        END IT ALL                                                   *
*                                                                     *
***********************************************************************
END      QSTOP
NOHAVT   QTILT '***** NO JOBS TO DISPLAY *****'
INITHD   DC    CL80'  QUEUE  JOBNAME   JOB#  STEPNAME PROCSTEP   SLOTS *
                  TCB-TIME    SRB-TIME'
ED5      DC    X'402020202120'
EDCPU    DC    X'4020206B2021204B2020'
         LTORG
***********************************************************************
*                                                                     *
*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *
*                                                                     *
***********************************************************************
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
ACTIVE   CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         CVT   PREFIX=NO,DSECT=YES                                UF046
CVTDSECT EQU   CVT                                                UF046
         IEFJESCT TYPE=DSECT                                      UF046
         IEFJSCVT ,                                               UF046
         IHAASVT DSECT=YES                                        UF046
         IHAASCB DSECT=YES                                        UF046
CSCDSECT DSECT ,                                                  UF046
         IEECHAIN ,                                               UF046
         IEZDEB ,                                                 UF046
         $XECB ,                                                  UF046
ACTIVE   CSECT                                                    UF046
         $SCAT ,                                                  UF046
*        $SVT
         $HCCT
         $HFAME
         $SJB
         $JQE
         $HASPEQU
         $TQE
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG
QUEUE    DS    CL8
         DS    C
JOBNAME  DS    CL8
         DS    C
JOBNUM   DS    CL6
         DS    C
STEPNAME DS    CL8
         DS    C
PROCSTEP DS    CL8
         DS    C
SLOTS    DS    CL7
         DS    C
TCBTIME  DS    CL11
         DS    C
SRBTIME  DS    CL11
         DS    C
WORK     DSECT
         DS    CL72
CONVERT  DS    D
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
