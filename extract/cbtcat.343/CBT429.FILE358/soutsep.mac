         MACRO
         PROLOG
         PRINT OFF
***********************************************************************
*                                                                     *
*  VSAM JOURNAL VERSION                                               *
*                                                                     *
***********************************************************************
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS JOB STOPS "DISKWTR" AND STARTS "SAVEWTR"                      *
*                                                                     *
*  IF YOUR PROC IS NOT CALLED "DISKWTR", THEN FIND  "STOPDISK" IN     *
*  COL 1 AND CHANGE TO YOUR STARTED TASK'S NAME!!                     *
*                                                                     *
*  IF YOUR PROC IS NOT CALLED "SAVEWTR", THEN FIND  "STARTSVE" IN     *
*  COL 1 AND CHANGE TO YOUR STARTED TASK'S NAME!!                     *
*                                                                     *
***********************************************************************
*    SOUTSEP IS AN EXTERNAL WRITER PAGE SEPARATOR ROUTINE TO BE       *
*    USED BY THE 'DISKWTR' ROUTINE.  IT CREATES A VSAM JOURNAL RECORD *
*    DESCRIBING THE JOB BEING PROCESSED, AND ALSO A SEPARATOR RECORD  *
*    WHICH IS PLACED INTO THE OUTPUT FILE AS A DELIMITER/VERIFICATION *
*    RECORD.  BOTH OF THESE RECORDS ARE USED BY THE SOUTSUB ROUTINE   *
*    TO LOCATED THE NAMED JOB'S OUTPUT.  THESE RECORDS ARE MAINTAINED *
*    BY THE SOUTWTR ROUTINE ACROSS ARCHIVAL AS WELL.                  *
*                                                                     *
*    SOUTSEP IS REENTRANT SO THAT IT MAY BE RESIDENT IN THE PLPA      *
*    TO AVOID REPEATED MODULE LOADS DUE TO INVOCATION VIA THE LINK    *
*    MACRO IN THE EXTERNAL WRITER(IASXWR00).  SOUTSEP SUPPORTS        *
*    RECFM=FBA ON THE SYSOUT DATASET WITH LRECL OF 133 OR LARGER.     *
*                                                                     *
*    IT USES A PUT MACRO IN LOCATE MODE AND ESTABLISHES A SYNAD EXIT  *
*    BY STORING THE ADDRESS OF THE SYNAD ROUTINE IN THE DCBSYNAD      *
*    FIELD.                                                           *
*                                                                     *
*  INPUT.                                                             *
*    UPON ENTRY, REGISTER 1 POINTS TO A 4-WORD PARAMETER LIST IN THE  *
*    FOLLOWING FORMAT.                                                *
*     0    OUTPUT UNIT TYPE SWITCH                                    *
*     1-3  RESERVED                                                   *
*     4-7  ADDRESS OF OPEN OUTPUT QSAM DCB IN LOCATE MODE             *
*     8-11 ADDRESS OF 8 CHARACTER FIELD CONTAINING JOBNAME            *
*    12-15 ADDRESS OF 1 CHARACTER FIELD CONTAINING MSGCLASS           *
*                                                                     *
*    NOTE.                                                            *
*    ALTHOUGH NOT SPECIFICALLY SUPPORTED, THE JES2 JOB ID MAY BE      *
*    FOUND IMMEDIATELY FOLLOWING THE JOBNAME.  IF IN SUBSEQUENT MVS   *
*    RELEASES THIS FACT CHANGES, APPROPRIATE UPDATES WILL HAVE TO BE  *
*    MADE IN ORDER TO CONTINUE SUPPLYING THE JES2 JOB ID.             *
*                                                                     *
*  JOURNAL-OUTPUT:                                                    *
*          THE DISK TTR CONTAINED IN THE WTR OUTPUT DCB IS WRITTEN    *
*          TO THE JOURNAL DATASET ALONG WITH THE CURRENT DATE/TIME,   *
*          JOBNAME, JOB NUMBER, AND MSGCLASS.  THIS ALLOWS THE        *
*          SPFSOUT ROUTINE TO LOCATE A GIVEN JOB DIRECTLY.  THE       *
*          FOLLOWING IS A DESCRIPTION OF THE JOURNAL RECORD:          *
*   'JJJJJJJJ MM/DD/YY HH.MM.SS JOB##### C TTR DAY LINE DEVT ADR STP' *
*                                                                     *
*          WHERE JOBNAME   BEGINS IN COL  1 (8)                       *
*                MM/DD/YY  BEGINS IN COL  9 (5) PACKED (-99999999)    *
*                HH:MM:SS  BEGINS IN COL 14 (4) PACKED (-999999)      *
*                JOBNUMBER BEGINS IN COL 18 (5)                       *
*                TASK-TYPE BEGINS IN COL 23 (3)                       *
*                MSGCLASS  BEGINS IN COL 26 (1)                       *
*                TTR       BEGINS IN COL 27 (3) - DISK ONLY           *
*                DAY       BEGINS IN COL 30 (1)                       *
*                LINES     BEGINS IN COL 31 (4) PACKED (ZERO)         *
*                DEVT      BEGINS IN COL 35 (1) DEVICE TYPE           *
*                ADR       BEGINS IN COL 36 (1) SET TO A(ACTIVE)      *
*                STAMP     BEGINS IN COL 37 (6) SET TO 99999999999    *
*                                                                     *
*    NOTE.                                                            *
*    SOUTSEP CREATES AND OPENS A JOURNAL ACB IN GOTTEN STORAGE WHICH  *
*    IS LEFT OPEN FOR THE DURATION OF THE WTR ACTIVE TIME.  THIS      *
*    ACB IS NEVER CLOSED BY THIS ROUTINE.  INSTEAD IT IS LEFT TO      *
*    RECOVERY/TERMINATION MANAGER TO CLOSE AT TERMINATION TIME.       *
*    THIS AVOIDS AN OPEN/CLOSE SEQUENCE FOR EACH DATASET PROCESSED.   *
*                                                                     *
*  SEPARATOR-OUTPUT:                                                  *
*    A SINGLE RECORD IN THE FOLLOWING FORMAT, WRITTEN TO THE DCB      *
*    SUPPLIED BY THE EXTERNAL WRITER.                                 *
*                                                                     *
* SPFSOUTS PAGE SEPARATOR FOLLOWS:                                    *
*    AAAAAAAA(BBBCCCCC), MSGC D EEEEEEEE FFFFFFFF GGGG H              *
*                                                                     *
*    NOT SHOWN ABOVE ARE POSITIONS 0-5 (OFFSETS RELATIVE TO 0)        *
*     0-5           X'F140404040' SET DEFAULT CARRAGE CONTROL         *
*     6-133         PRINTED DATA                                      *
*    34-41 AAAAAAAA JOBNAME                                           *
*    43-45 BBB      JES2 JOBTYPE (JOB/STC/TSU)                        *
*    46-50 CCCCC    JES2 JOB SEQUENCE NUMBER                          *
*    63    D        MSGCLASS                                          *
*    65-72 EEEEEEEE DATE IN THE FORM MM/DD/YY                         *
*    74-81 FFFFFFFF TIME IN THE FORM HH:MM:SS                         *
*    83-86 GGGG     FULL YEAR                                         *
*    88    H        DAY OF WEEK BYTE                                  *
*                                                                     *
*                                                                     *
*  RETURN CODES UPON RETURN TO EXTERNAL WRITER.                       *
*    0 - SUCCESSFUL OPERATION                                         *
*    8 - UNRECOVERABLE OUTPUT ERROR                                   *
*                                                                     *
***********************************************************************
         MEND
         PRINT ON
SOUTSEP  CSECT
         SAVE  (14,12),,*          SAVE REGISTERS
         BALR  R3,R0               INITIALIZE BASE REGISTER
         USING *,R3                CSECT BASE REGISTERS
         LR    R8,R1               SAVE ENTRY REG 1
         LA    R7,8                SET I/O ERROR RETCODE
         L     R15,16              CVT ADDRESS
         L     R15,0(R15)          OLD/NEW POINTERS
         L     R6,4(R15)           CURRENT TCB ADDRESS
         L     R14,8(R6)           ADDRESS OF FIRST DEB ADDRESS
         L     R12,24(R14)         DCB ADDRESS
         LH    R1,40(R12)          TIOT OFFSET
         A     R1,12(R6)           ADDRESS OF TIOT ENTRY
         CLC   4(8,R1),=CL8'JOURNAL'  IS THIS THE JOURNAL DCB ?
         BE    GOTDEB             YES - OK
NEXTDEB  ICM   R14,7,5(R14)        GET NEXT DEB IF ANY
         BZ    GETMAIN             NONE, FIRST TIME THROUGH
         L     R12,24(R14)         GET DCB ADDRESS
         LH    R1,40(R12)          TIOT OFFSET
         A     R1,12(R6)           ADDRESS OF TIOT ENTRY
         CLC   4(8,R1),=CL8'JOURNAL' THIS THE JOURNAL DCB?
         BNE   NEXTDEB             NO, GET NEXT DEB
GOTDEB   EQU   *
         S     R12,=A(GACBLOCK-GMAREA) BACK UP TO BEGINNING OF GM
         ST    R13,4(R12)          SET CURR SAVE BKP PTR=A(PREV SAVE)
         ST    R12,8(R13)          SET PREV SAVE FWD PTR=A(CURR SAVE)
         LR    R13,R12             SET R13=A(CURR SAVE)
         LM    R10,R12,4(R8)       SET ADDRESSABILITY TO PARM DATA
         B     CONTINUE            YES, CONTINUE
GETMAIN  LA    R0,GMAREALN         SET R0=L'GMAREA
         GETMAIN R,LV=(0)          GET VIRTUAL FOR GMAREA
         LR    R12,R1              SET R12=A(GMAREA)
         LR    R0,R1               SET R0=MVCL AD1, A(GMAREA)
         LA    R1,GMAREALN         SET R1=MVCL LN1, L'GMAREA
         SR    R15,R15             SET R15=MVCL LN2, PAD
         MVCL  R0,R14              RESET ALL GMAREA TO X'00'
         LA    R0,GLIST-GMAREA(R12) ADDRESS OF TO FIELD
         LA    R14,JLIST           ADDRESS OF FROM FIELD
         LA    R1,GJOBN-GLIST+1     SIZE OF DATA TO MOVE
         LR    R15,R1              TO BOTH REGS
         MVCL  R0,R14              MOVE TO GETMAINED AREA
         ST    R13,4(R12)          SET CURR SAVE BKP PTR=A(PREV SAVE)
         ST    R12,8(R13)          SET PREV SAVE FWD PTR=A(CURR SAVE)
         LR    R13,R12             SET R13=A(CURR SAVE)
         USING GMAREA,R13          BASE FOR GOTTEN STORAGE
         LA    R2,GACB             SET R2=ACB IN GETMAIN
         LA    R4,GACBLOCK         SET R4=WHERE TO BUILD ACB
         GENCB BLK=ACB,DDNAME=JOURNAL,AM=VSAM,MACRF=(KEY,DIR,OUT),     X
               WAREA=(R4),LENGTH=96,MF=(G,(R2))
         LR    R2,R1               SET R2=ADDR OF ACB
         LA    R4,GJOBN            SET R4=RECORD AREA
         LA    R5,GRPL             SET R5=RPL AREA
         GENCB BLK=RPL,AREA=(R4),ACB=(R2),AREALEN=42,RECLEN=42,        X
               OPTCD=(KEY,DIR,SYN,NUP,MVE),MF=(G,(R5))
         LR    R6,R1               SET R6=RPL ADDR
         ST    R6,SAVERPL          SAVE FOR LATER USE
         OPEN  ((R2)),MF=(E,GLIST) OPEN ACB
         LTR   R15,R15             OK?
         BNZ   EXIT                NO - EXIT
         LM    R10,R12,4(R8)       SET ADDRESSABILITY TO PARM DATA
         USING IHADCB,R10          ADDRESS OF WTR DCB
         LA    R0,GJOBN            ADDRESS OF TO FIELD
         LA    R14,JJOBN           ADDRESS OF FROM FIELD
         LA    R1,GSTP-GJOBN+6     SIZE OF DATA TO MOVE
         LR    R15,R1              TO BOTH REGS
         MVCL  R0,R14              MOVE TO GETMAINED AREA
         LA    R15,DEVT#           SET LOOP CONTROL
         LA    R14,DEVT            ADDRESS OF DEVICE TABLE
NEXTDEV  CLC   0(1,R14),DCBTRBAL-1 CHECK DEVICE TYPE
         BE    DEVTFND             FOUND, CONTINUE
         LA    R14,4(R14)          NEXT ENTRY
         BCT   R15,NEXTDEV         CHECK NEXT DEVICE ENTRY
         WTO   'DISKWTR - UNSUPPORTED DEVICE TYPE'
         B     EXIT                ERROR RETURN TO EXTERNAL WTR
DEVTFND  MVC   GDEVT,0(R14)        GET NUMBER OF TRACKS/CYLINDER
         LH    R14,2(R14)          GET NUMBER OF TRACKS/CYLINDER
         ST    R14,G#TC            SAVE FOR LATER USE
         USING JOB,R11             ADDRESS OF JOBNAME
         USING MSGCLASS,R12        ADDRESS OF MSGCLASS
CONTINUE CLC   GJOBN,JOBNAME       IS THIS SAME JOB AS PREVIOUS
         BNE   PROCESS             NO, PROCESS SEPARATOR
         CLC   GJOB#(5),JOBNUM+3   IS THIS SAME JOB + AS PREVIOUS
         BNE   PROCESS             NO - CREATE SEPERATOR
         CLC   GJOB#+5(3),JOBNUM   IS THIS SAME TYPE JOB AS PREVIOUS
         BE    NOSEP               YES, SKIP SEPARATOR
PROCESS  $STCK NOGEN               GET DATE/TIME FOR SEPARATOR/JOURNAL
*
*  CONVERT DATE AND TIME TO PACK AD SUBTRACT FROM 9999999 SO THAT
*  RECORDS ARE STORED ON THE VSAM FILE IN LIFO ORDER
*
         MVC   HDATE(4),YEARDATE   MOVE IN FULL YEAR (IE:1984)
         MVC   HDATE+4(2),DATE     MOVE IN MONTH
         MVC   HDATE+6(2),DATE+3   MOVE IN DAY
         PACK  PDATE,HDATE         PACK DATE
         MVC   GDATE,=P'099999999' SET TO HIGH NUMBER
         SP    GDATE,PDATE         SUBTRACT DATE FOR REVERSAL
*
         MVC   HTIME(2),TIME       MOVE IN HOURS
         MVC   HTIME+2(2),TIME+3   MOVE IN MINUTES
         MVC   HTIME+4(2),TIME+6   MOVE IN SECONDS
         PACK  PTIME,HTIME         PACK TIME
         MVC   GTIME,=P'0999999'   SET TO HIGH
         SP    GTIME,PTIME         SUBTRACT TIME FOR REVERSAL
*
         MVI   GPREFIX,X'40'       SET GPREFIX(0)=SPACE
         MVC   GPREFIX+1(5),GPREFIX  SET GPREFIX(1-5)=SPACE
         LA    R15,SYNAD           SET R15=A(SYNAD ROUTINE)
         STCM  R15,7,DCBSYNA       SET DCBSYNA A(SYNAD)
         LA    R4,133              SET R4 = CONSTANT 133
         LA    R8,GPREFIX          SET R8=A(GPREFIX), ADDRESS CARRCTL
         USING CARRCTL,R8          CARRCTL DSECT BASE REG
         MVI   CARRCTL,X'F1'       SET ASA CARRIAGE CONTROL=X'F1'
PUT      PUT   (10)                GET RECORD AREA VIA PUT LOCATE
         ICM   R7,15,GRC           SET R7=RETURN CODE
         BNZ   EXIT                IF I/O ERROR, GO TO EXIT
         USING RECORD,R1           RECORD DSECT BASE REG
         MVC   RECPREF,GPREFIX     MOVE RDW, CARRCTL, TRC TO RECORD
         MVC   RECLIT,LIT          MOVE LITERAL TO RECORD
         LH    R15,DCBLRECL        SET R15=DCBLRECL
         SR    R15,R4              SUBTRACT FIXED LENGTH FROM LRECL
         BNP   MOVES               IF NO REMAINING BYTES, GO MOVE DATA
         BCTR  R15,R0              DECREMENT R15 FOR EX LENGTH
         EX    R15,*+8             EXECUTE MVC TO SPACE FILL
         B     *+10                BRANCH AROUND EXECUTED MVC
         MVC   RECORD+133(0),RECORD+132 SET REST OF RECORD=SPACE
MOVES    MVC   RECJNAME,JOBNAME    MOVE JOBNAME TO RECORD
         MVC   GJOBN,JOBNAME       MOVE JOBNAME TO JOURNAL REC
         MVC   RECJNUM,JOBNUM      MOVE JOBNUM TO RECORD
         MVC   GJOB#(5),JOBNUM+3   MOVE JOBNUM TO JOURNAL REC
         MVC   GJOB#+5(3),JOBNUM   MOVE JOBTYPE TO JOURNAL REC
         MVC   RECMSGCL,MSGCLASS   MOVE MSGCLASS TO RECORD
         MVC   GMCLASS,MSGCLASS    MOVE MSGCLASS TO JOURNAL REC
         MVC   RECDATE,DATE        MOVE DATE TO SEPARATOR RECORD
         MVC   RECTIME,TIME        MOVE TIME TO SEPARATOR RECORD
         MVC   RECYEAR,YEARDATE    MOVE IN FULL YEAR DATE
         MVC   RECDAY,DAY          MOVE IN DAY CODE
         LA    R7,8                SET I/O ERROR RETCODE
         L     R14,DCBDEBAD        GET ADDRESS OF WTR DCB'S DEB
         TM    GSWITCH,X'01'       FIRST PASS?
         BNZ   SETUPTTR            NO - HAVE MAX TTR
* CALCULATE FOR MAX TTR BEFORE ISSUING STOP
         OI    GSWITCH,X'01'       SET ON
         SR    R8,R8               CLEAR FOR ICM
         SR    R9,R9               CLEAR FOR ICM
         ICM   R9,3,42(R14)        GET END CYLINDER NUMBER
         ICM   R8,3,38(R14)        GET START CYLINDER NUMBER
         SR    R9,R8               GET # CYLS IN ACTIVE FILE
         AH    R9,=H'1'            ADD 1 (ASSUMES CYL ALLOCATION)
         SR    R8,R8               CLEAR FOR MULTIPLY
         M     R8,G#TC             MULTIPLY BY TRKS/CYL
         M     R8,=F'80'           CALCULATE FOR 80% FULL
         D     R8,=F'100'          CALCULATE FOR 80% FULL
         STH   R9,GMAXTTR          MOVE MAX INTO HOLD AREA
SETUPTTR CLC   DCBFDAD+3(4),38(R14) CHECK WITHIN EXTENT
         BL    EXIT                LOW, ERROR RETURN
         CLC   DCBFDAD+3(4),42(R14) CHECK WITHIN EXTENT
         BH    EXIT                HIGH, ERROR RETURN
         SR    R8,R8               CLEAR FOR ICM
         SR    R9,R9               CLEAR FOR ICM
         ICM   R9,3,DCBFDAD+3      GET CURRENT CYLINDER NUMBER
         ICM   R8,3,38(R14)        GET START CYLINDER NUMBER
         SR    R9,R8               GET RELATIVE CYLINDER
         SR    R8,R8               CLEAR FOR MULTIPLY
         M     R8,G#TC             MULTIPLY BY TRKS/CYL
         SR    R15,R15             CLEAR FOR ICM
         ICM   R15,3,DCBFDAD+5     GET CURRENT TRACK NUMBER
         IC    R14,DCBFDAD+7       GET RECORD NUMBER
         AR    R9,R15              NOW HAVE REAL 'TT'
         BZ    NOADJ               ZERO TTR, SKIP DECREMENT
         CLI   DCBFDAD+7,X'01'     WOULD DECREMENT TAKE US TO ZERO?
         BH    DECR                NO, DECREMENT RECORD NUMBER
         SH    R9,=H'1'            DECREMENT TRACK NUMBER
         B     NOADJ               CONTINUE
DECR     BCTR  R14,R0              DECRMENT FOR SAM-E
NOADJ    STC   R14,GTTR+2          INCLUDE UPDATED TTR
         STCM  R9,3,GTTR           MOVE TO JOURNAL RECORD
         L     R6,SAVERPL          RESTORE RPL ADDRESS
         PUT   RPL=(R6)            UPDATE VSAM JOURNAL
         LA    R7,8                SET R7 TO UPDATE RETURN CODE
         LTR   R15,R15             OK?
         BNZ   EXIT                NO - EXIT
         SR    R7,R7               CLEAR R7
         ENDREQ RPL=(R6)           END IT
*
         CLC   GTTR(2),GMAXTTR     REACHED 80% FULL YET
         BL    NOSEP               NO - BR AROUND
         TM    GSTART,X'01'        STARTED SAVEWTR ALREADY
         BNZ   NOSEP               YES - BYPASS START
         OI    GSTART,X'01'        SET ON
         WTO   'DISKWTR - ACTIVE FILE 80% FULL'
*
         SR    R0,R0               CLEAR R0
         LA    R1,STARTSVE         SET R1 TO START SAVEWTR
         SVC   34                  ISSUE START SAVEWTR COMMAND
*
         SR    R0,R0               CLEAR R0
         LA    R1,STOPDISK         SET R1 TO STOP DISKWTR
         SVC   34                  ISSUE STOP DISKWTR COMMAND
*
*  FOLLOWING TIMER ADDED TO TRY TO ELIMINATE DISKWTR FROM
*  ADDING ANOTHER SEP RECORD BEFORE THE STOP COMMAND TAKES
*  AFFECT. U0007 COULD HAPPEN IN SAVEWTR IF SEP RECORD ADDED
*  WITH NO VSAM JOURNAL RECORD ???????
*
         STIMER WAIT,DINTVL=WAITTIME
*
NOSEP    SR    R7,R7               CLEAR RETCODE
EXIT     L     R13,GSAVE+4         SET R13=A(PREV SAVE AREA
         LR    R15,R7              SET R15=RETURN CODE
         RETURN (14,12),T,RC=(15)  RETURN TO EXTERNAL WRITER
SYNAD    MVI   GRC+3,8             SET RETURN CODE=8
         BR    R14                 RETURN TO QSAM
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 1
JLIST    OPEN  (R2,),MF=L
         DS    0F
JJOBN    DC    CL8'JOBNAME'
JDATE    DC    PL5'0'
JTIME    DC    PL4'0'
JJOB#    DC    CL8'#####JOB'
JMCLASS  DC    CL1' '
JTTR     DC    XL3'00'
JDAY     DC    XL1'00'
JLINES   DC    PL4'0'
JDEVT    DC    XL1'00'
JADR     DC    CL1'A'
JSTP     DC    XL6'99999999999F'
WAITTIME DC    C'00000200'
STOPDISK DC    AL2(20)
         DC    H'0'
         DC    CL18'P DISKWTR'
STARTSVE DC    AL2(20)
         DC    H'0'
         DC    CL18'S SAVEWTR'
LIT      DC    CL50'SPFSOUTS PAGE SEPARATOR FOR ########(########), MS'
         DC    CL77'GCLASS # MM/DD/YY TTTTTTTT YYYY'
         LTORG
*              DEVICE TYPE - 00 - TRACKS/CYLINDER
         DS    0F
DEVT     DC    XL1'2F',XL1'00',H'15'       3390
         DC    XL1'2E',XL1'00',H'15'       3380
         DC    XL1'2B',XL1'00',H'30'       3350
         DC    XL1'29',XL1'00',H'19'       3330
         DC    XL1'2D',XL1'00',H'19'       3330-1
         DC    XL1'2A',XL1'00',H'12'       3340
DEVT#    EQU   (*-DEVT)/4
*
*
*
GMAREA   DSECT
GSAVE    DS    18F
GACBLOCK DS    CL96
         DS    0F
GACB     DS    CL120
         DS    0F
GRPL     DS    CL120
         DS    0F
GLIST    DS    XL(JJOBN-JLIST)
         DS    0F
GJOBN    DS    CL8
GDATE    DS    PL5
GTIME    DS    PL4
GJOB#    DS    CL8
GMCLASS  DS    CL1
GTTR     DS    XL3
DAY      DS    CL1
GLINES   DS    PL4
GDEVT    DS    CL1
GADR     DS    CL1
GSTP     DS    XL6
         DS    0F
YEARDATE DS    CL4
DATE     DS    CL8
TIME     DS    CL12
HDATE    DS    CL8
PDATE    DS    PL5
HTIME    DS    CL6
PTIME    DS    PL4
G#TC     DS    F
GPREFIX  DS    0F,CL6
GRC      DS    0F,XL4
GSWITCH  DS    0F,XL1
GSTART   DS    0F,XL1
GMAXTTR  DS    0F,H
SAVERPL  DS    F
GMAREALN EQU   (((((*-GMAREA)-1)/8)+1)*8)+16
CARRCTL  DSECT
         DS    XL1
JOB      DSECT
JOBNAME  DS    CL8
JOBNUM   DS    CL4
MSGCLASS DSECT
         DS    CL1
RECORD   DSECT
RECPREF  DS    CL6
RECLIT   DS    0CL127
         DS    CL28
RECJNAME DS    CL8
         DS    CL1
RECJNUM  DS    CL8
         DS    CL12
RECMSGCL DS    CL1
         DS    CL1
RECDATE  DS    CL8
         DS    CL1
RECTIME  DS    CL8
         DS    CL1
RECYEAR  DS    CL4
         DS    CL1
RECDAY   DS    CL1
         DS    CL44
         DCBD  DSORG=PS
         END
