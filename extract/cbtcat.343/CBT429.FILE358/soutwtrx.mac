         PRINT NOGEN
***********************************************************************
* SOUTWTR IS THE PROGRAM EXECUTED IN THE SAVEWTR PROC. ITS FUNCTION   *
* IS TO OFFLOAD THE ACTIVE FILE TO DAILY DISK OR TAPE DATASETS.       *
* IT WILL ALSO OFFLOAD DAILY DISK DATASETS TO ARCHIVE TAPES.          *
*                                                                     *
* ADDITIONAL SOUTWTR FUNCTIONS ARE:                                   *
*   1) FORMAT THE ACTIVE FILE                                         *
*   2) REBUILD THE VSAM JOURNAL                                       *
*   3) A "FIX TAPE" OPTION TO RELOAD BROKEN TAPES OR COPY DISK        *
*      FILES TO TAPES (THIS OPTION CAN BE USED FOR OTHER THAN         *
*      FIXING TAPES)                                                  *
*   4) USE THE OPTIONAL "SPECLDEL" DATASET TO DELETE UN-WANTED        *
*      REPORTS FROM THE SYSTEM                                        *
*                                                                     *
***********************************************************************
*                                                                     *
* THE FOLLOWING IS THE PARM FORMATS THAT CAN BE PASSED TO SOUTWTR:    *
*                                                                     *
*                                                                     *
*                                                                     *
*   PARM='FORMAT'           FORMAT THE ACTIVE FILE ONLY               *
*                           (MUST ALREADY BE CREATED)                 *
*                                                                     *
*   PARM='REBUILD,ALL'      WILL READ ALL THE SYSOUT DATASETS AND     *
*                ,ACTIVE    REBUILD THE VSAM JOURNAL RECORDS ONLY     *
*                ,DAILY     (JOURNAL MUST HAVE BEEN CREATED AND INITED*
*                ,ARCHIVE   THE SYSOUT DATASETS ARE OBTAINED BY       *
*                ,OLD       GETTING ALL THE DATASETS WITH THE PREFIX  *
*                           IN THE:                                   *
*                           //PREFIX DD   CARD                        *
*                             AND OPTIONALLY IN THE:                  *
*                           //OLDPFX DD   CARD                        *
*                                                                     *
*   PARM='FIXTAPE,OUTPUT=DAILY'                                       *
*                 OUTPUT=ARCHIVE'  READS AN INPUT DD DATASET AND      *
*                                  MODS OR CREATES A OUTPUT DAILY     *
*                                  OR ARCHIVE DATASET (SPECIFIED)     *
*                                  AND UPDATES THE VSAM JOURNAL       *
*                                  (IF TAPE IS "NL", DCB MUST BE      *
*                                   SUPPLIED ON THE DD CARD)          *
*                                                                     *
* ==>NOTE: DEFAULT ALLOCATION IS TO A "TAPE" UNIT                     *
*          (THIS APPLIES TO ANY TAPE MOUNT; HERE OR IN COPY PARM)     *
*          IF YOU DO NOT USE "TAPE" AS AN ESOTERIC NAME               *
*          YOU CAN SPECIFY THE FOLLOWING:                             *
*                                                                     *
*                 OUTPUT=DAILY=TAPEXX                                 *
*                 OUTPUT=ARCHIVE=TAPEXX (TAPEXX IS ANY TAPE ESOTERIC  *
*                                        NAME ONLY)                   *
*                                                                     *
*   PARM='COPY'            COPIES ACTIVE TO DAILY TAPE                *
*                          (ASSUMES DAILY TO TAPE)                    *
*                                                                     *
*   PARM='COPY,DAILY=TAPE' (TAPE IS YOUR ESOTERIC TAPE NAME           *
*                           IE: TAPE  OR  TAPE9  OR TAPE16  ETC.)     *
*                                                                     *
*   PARM='COPY,DAILY=SYSDA,DAYS=XXX'  DAILYS ARE ON ANY SYSDA DISKS   *
*                                     (SYSDA CAN BE ANY ESOTERIC NAME)*
*                                     AND ARE KEPT FOR XXX DAYS BEFORE*
*                                     COPYING TO ARCHIVE TAPE         *
*                                                                     *
*   PARM='COPY,DAILY=SYSDA(PVT801,PVT802,PVT803),DAYS=XXX             *
*                                     DAILYS ARE KEPT ON 1, 2 OR 3    *
*                                     SPECIFIED SYSDA PACKS           *
*                                     (SYSDA CAN BE ANY ESOTERIC NAME)*
*                                     AND ARE KEPT FOR XXX DAYS BEFORE*
*                                     COPYING TO ARCHIVE TAPE         *
*                                                                     *
*        IF YOU ARE USING A TAPE ESOTERIC NAME FOR THE ARCHIVE        *
*        DATASET, YOU CAN SUPPLY IT AFTER THE DAYS PARAMETER          *
*                                                                     *
*        IE:   ...,DAYS=XXX,ARCHIVE=TAPEXX  ESOTERIC NAME             *
*                                                                     *
***********************************************************************
*                                                                     *
* MISC NOTES:                                                         *
*                                                                     *
*                                                                     *
*  MENTIONED BREIFLY ABOVE, ALL TAPE ALLOCATION USES THE DEFAULT      *
*  "UNIT=TAPE". IF YOU ARE NOT USING "TAPE" AS A ESOTERIC NAME, YOU   *
*  CAN SPECIFY YOUR NAME IN THE PARM AS FOLLOWS:                      *
*                                                                     *
*    1) FOR COPY OPTION USE:                                          *
*       A) FOR DAILY TAPES:  PARM='COPY,DAILY=TAPEXXXX'               *
*       B) FOR ARCH. TAPES:  PARM='COPY,...,ARCHIVE=TAPEXXXX'         *
*    2) FOR FIXTAPE OPTION USE:                                       *
*       A) PARM=FIXTAPE,OUTPUT=DAILY=TAPEXXXX                         *
*       B) PARM=FIXTAPE,OUTPUT=ARCHIVE=TAPEXXXX                       *
*                                                                     *
*                                                                     *
*  THE ACTIVE FILE IS COMPRESSED BEFORE IT IS WRITTEN TO THE DAILY    *
*  FILE. WHEN GOING FROM DAILY TO ARCHIVE, THE FILES ARE JUST COPIED  *
*  AS IS AND REBLOCKED (6169 ON DISK  31743 ON TAPE)                  *
*  THE SEPERATOR RECORDS ARE NOT COMPRESSED. THIS ALLOWS THE PROGRAMS *
*  THAT READ THE SYSOUT FILES TO DO COMPARES FOR SEPERATOR RECORDS    *
*  WITHOUT HAVING TO DECOMPRESS EVERY RECORD.                         *
*                                                                     *
*                                                                     *
*  AND OPTIONAL DD CARD OF "//ALLOCRPT" CAN BE SUPPLIED FOR A LIST    *
*  OF ALL FILES ALLOCATED FOR INPUT, NEW OUTPUT, OR MOD TO OUTPUT.    *
*  IF THIS DD CARD IS NOT SUPPLIED IN THE SAVEWTR PROC, NO REPORTING  *
*  IS DONE. (HANDY FOR TESTING)                                       *
*                                                                     *
*                                                                     *
* IF THE OPTIONAL "SPECLDEL" DD IS SUPPLIED, THE REQUESTED REPORTS    *
* WILL BE DELETED FROM THE JOURNAL FILE AND THE REPORT WILL NOT BE    *
* COPIED FROM THE ACTIVE TO DAILY OR DAILY TO ARCHIVE. ON REBUILD,    *
* THE RECORD WILL NOT BE ADDED TO THE JOURNAL FILE.                   *
*   NOTE: THE SPECIAL DELETE DATASET SHOULD BE  LRECL=80              *
*         FORMAT OF THE FILE IS:                                      *
*                         1         2         3                       *
*          COL   123456789012345678901234567890                       *
*                JJJJJJJJ XXX#####             <== JOB# IS OPTIONAL)  *
*                   ×      ×   ×-----JOB NUMBER                       *
*                   ×      ×---------JOB LIT  (IE: JOB STC TSU)       *
*                   ×----------------JOB NAME (IE: PAYROLL            *
*                                                  PAY*  <= GENERIC)  *
*                                                                     *
*                                                                     *
*  WHEN SPECIFYING THE DAYS PARAMETER, THE NUMBER OF DAYS KEEP ONLINE *
*  ARE AS FOLLOWS:                                                    *
*       DAYS=000 - KEEP ALL OF TODAYS ONLINE ONLY                     *
*       DAYS=001 - KEEP ALL OF TODAYS ONLINE PLUS ALL OF YESTERDAYS   *
*       DAYS=002 - KEEP ALL OF TODAYS ONLINE PLUS LAST 2 DAYS         *
*                                                                     *
*                                                                     *
*  IF CHANGING DAILYS FROM DISK TO TAPE, ALL THE EXISTING DAILY DISK  *
*  FILES WILL BE COPIED TO ARCHIVE TAPE FIRST; THEN THE COPY FROM     *
*  THE ACTIVE TO DAILY TAPE WILL TAKE PLACE. IF AT A LATER DATE, YOU  *
*  DECIDE TO PLACE THE DAILYS BACK ON DISK, ALL THE EXISTING DAILY    *
*  TAPES WILL REMAIN ON DAILY TAPES (NO COPY OF DAILY TAPE TO ARCHIVE *
*  TAPES) UNTIL THEY ARE CYCLED OFF THRU CLEANWTR.                    *
*                                                                     *
*                                                                     *
*  ANY TAPE CREATED ASSUMES CATALOG RETENTION IN YOUR TAPE MANAGEMENT *
*  SYSTEM. (IE: EXPDT=99000). IF YOU ARE NOT, FIND THE VARIABLE       *
*  "TAPEXPDT" IN THIS PROGRAM AND UNCOMMENT BEFORE ASSEMBLING.        *
*  (THERE ARE 2 OCCURRENCES) (THIS WAS NOT TESTED)                    *
*                                                                     *
*                                                                     *
*  THE SOUTXIT REPORTING IS ONLY INVOLKED WHEN THE ACTIVE IS COPIED   *
*  TO THE DAILY DASD/TAPE DATASET.                                    *
*                                                                     *
*                                                                     *
*  THE SYSTEM IS DESIGNED THAT ONLY ONE REEL OF TAPE IS NEEDED        *
*  WHEN CREATING/MOD'ING  THE DAILY OR ARCHIVE TAPE DATASETS.         *
*  THIS SHOULD PREVENT MULTI-REEL TAPES. IT COULD GO INTO A SECOND    *
*  REEL IF YOU HAVE SHORT TAPES (USUALLY LESS THAN 2000 FT).          *
*  IF IT GOES INTO A SECOND REEL, ONLY ONE OR TWO REPORTS ARE         *
*  WRITTEN TO THE SECOND REEL AND A NEW DATASET IS THEN CREATED.      *
*                                                                     *
*                                                                     *
*  THIS JOB CAN BE RESTARTED AT ANY TIME WITHOUT ANY DATASETS NEEDING *
*  TO BE DELETED OR CLEANED UP.                                       *
*  (IE: IF SAVEWTR WAS CANCELED IN THE MIDDLE OF WRITING THE ACTIVE   *
*       FILE TO A DAILY TAPE, THE RESTART WILL RE-OPEN THE ACTIVE FILE*
*       AND START MODDING ONTO THE END OF THE DAILY TAPE. THE VSAM    *
*       JOURNAL IS UPDATED NORMALLY. THE ONLY PROBLEM THAT ARISES     *
*       FROM THIS PROCEDURE IS THAT THERE COULD BE DUPLICATE SYSOUT   *
*       REPORTS FROM THE ACTIVE FILE ON THE DAILY TAPE,BUT THE JOURNAL*
*       ONLY RECORDS THAT THE REPORT IS ON THAT ONE TAPE AND 4.S      *
*       WILL FIND THE FIRST OCCURANCE OF THAT REPORT ON THE TAPE.     *
*                                                                     *
*                                                                     *
*  THE ONLY SPECIAL PROCESSING THAT IS REQUIRED IS IF THE SYSTEM      *
*  CRASHES (POWER LOSS) WHILE WRITTING TO TAPE. THE RESULT IS THAT    *
*  THERE IS NO END OF FILE MARK WRITTEN ON THE TAPE. YOU CANNOT       *
*  MOD ON TO THAT TAPE.                                               *
*                                                                     *
*  ONE POSSIBLE SOLUTION IS TO TO A IEBGENER AND COPY THE BAD TAPE    *
*  TO A TAPE WITH THE SAME DATASET NAME. UNCATALOG THE BAD TAPE AND   *
*  CATALOG THE NEW (GENERED) TAPE. THE NEW TAPE SHOULD HAVE A END OF  *
*  TAPE MARKER.                                                       *
*                                                                     *
*  ANOTHER SOLUTION IS TO UNCATALOG THE TAPE, AND RUN A SPECIAL       *
*  SAVEWTR PROC WITH "PARM=FIXTAPE". SET THE //INPUT DD  TO THE       *
*  UNCATALOGED TAPE WITH THE VOL=SER=... SUPPLIED.  A NEW DAILY OR    *
*  ARCHIVE TAPE WILL BE BUILT AND THE VSAM JOURNAL WILL BE UPDATED.   *
*  AN EOF ERROR WILL OCCUR, BUT THE NEW TAPE CREATED WILL BE OK.      *
*  (SEE THE "FIXTAPE" PARM OPTION FOR FURTHER DETAILS).               *
*                                                                     *
***********************************************************************
*  PROCESSING SEQUENCE FOR SELECTED PARMS:                            *
*                                                                     *
*                                                                     *
*  A) FORMAT  -  (FORMAT ACTIVE FILE)                                 *
*     1. ALLOCATE AND OPEN ACTIVE FILE                                *
*     2. INSERT "PAD" RECORDS UNTIL D37 ABEND                         *
*     3) FINISHED                                                     *
*                                                                     *
*                                                                     *
*  B) REBUILD -  (REBUILD THE VSAM JOURNAL FROM SYSOUT DATASETS)      *
*     1. ALLOCATE AND OPEN ACTIVE FILE                                *
*        A. SEARCH ACTIVE FOR SEPERATOR RECORDS                       *
*        B. BUILD JOURNAL RECORD FROM SEPERATOR AND ADD TO JOURNAL    *
*     2. ALLOCATE AND OPEN EACH DAILY DISK/TAPE FILE                  *
*        A. SEARCH DAILY FOR SEPERATOR RECORDS                        *
*        B. BUILD JOURNAL RECORD FROM SEPERATOR AND ADD TO JOURNAL    *
*     3. ALLOCATE AND OPEN EACH ARCHIVE TAPE FILE (IF ANY)            *
*        A. SEARCH ARCHIVE FOR SEPERATOR RECORDS                      *
*        B. BUILD JOURNAL RECORD FROM SEPERATOR AND ADD TO JOURNAL    *
*     4. ALLOCATE AND OPEN EACH OLD SYSTEM ARCHIVE TAPE FILE          *
*        (OPTIONAL IF //OLDPFX DD  CARD IS SUPPLIED)                  *
*        A. SEARCH OLD ARCHIVE FOR SEPERATOR RECORDS                  *
*        B. BUILD JOURNAL RECORD FROM SEPERATOR AND ADD TO JOURNAL    *
*     5) FINISHED                                                     *
*                                                                     *
* NOTE:  FOR EACH SEPERATOR FOUND ON ANY OF THE SYSOUT DATASETS:      *
*        A) TRY TO FIND THAT RECORD IN THE VSAM JOURNAL               *
*        B) IF FOUND, UPDATE IT (SHOULD NEVER HAPPEN BECAUSE VSAM     *
*            JOURNAL WAS CREATED NEW IN INITIALIZED)                  *
*        C) IF NOT FOUND, ADD A NEW RECORD TO THE VSAM JOURNAL        *
*                                                                     *
*                                                                     *
*  C) FIXTAPE -  (FOR FIXING BROKEN TAPE)                             *
*             -  (COULD ALSO BE USED AS A CONVERSION PROCESS)         *
*     1. ALLOCATE AND OPEN THE //INPUT DD                             *
*     2. ALLOCATE AND OPEN VSAM JOURNAL                               *
*     3. IF OUTPUT=DAILY                                              *
*        A) FIND LAST DAILY TAPE USED FOR MOD'ING ON TO...            *
*        B) IF NO EXISTING DAILY TAPES, ALLOCATE A NEW ONE            *
*     4. IF OUTPUT=ARCHIVE                                            *
*        A) FIND LAST ARCHIVE TAPE USED FOR MOD'ING ON TO...          *
*        B) IF NO EXISTING ARCHIVE TAPES, ALLOCATE A NEW ONE          *
*     5) ALLOCATE AND OPEN THE OUTPUT TAPE (WILL ALWAYS BE TAPE)      *
*     6) READ INPUT TAPE AND WRITE SAME TO OUTPUT TAPE                *
*     7) FOR EACH SEPERATOR FOUND, PERFORM THE FOLLOWING:             *
*        A) TRY TO FIND THAT RECORD IN THE VSAM JOURNAL               *
*        B) IF FOUND, UPDATE IT TO POINT TO NEW TAPE                  *
*        C) IF NOT FOUND, ADD A NEW RECORD TO THE VSAM JOURNAL        *
*     8) FINISHED                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*  D) COPY    -  (OFFLOADING ACTIVE FILE TO DAILY)                    *
*     1. ALLOCATE AND OPEN VSAM JOURNAL                               *
*     2. IF "DAILY=TAPE", PERFORM THE FOLLOWING:                      *
*        A) FIND LAST DAILY TAPE USED FOR MOD'ING ON TO...            *
*        B) IF NO EXISTING DAILY TAPES, ALLOCATE A NEW ONE            *
*        C) ALLOCATE THE ACTIVE FILE                                  *
*        D) READ THE ACTIVE AND COPY TO THE DAILY TAPE                *
*        E) FOR EACH SEPERATOR RECORD FOUND, UPDATE THE VSAM JOURNAL  *
*           TO POINT TO THE DAILY TAPE INSTEAD OF THE ACTIVE          *
*        F) INITIALIZE THE ACTIVE FILE                                *
*        G) FINISHED                                                  *
*                                                                     *
*     3. IF "DAILY=DISK", PERFORM THE FOLLOWING:                      *
*        A) FIND LAST ARCHIVE TAPE USED FOR MOD'ING ON TO...          *
*        B) IF NO EXISTING ARCHIVE TAPES, ALLOCATE A NEW ONE          *
*        C) LOOK AT ALL THE DAILY DISK DATASETS, AND COMPARE DATE     *
*           STAMP TO "DAYS=XXX" PARM                                  *
*        D) COPY OLD DAILY DISKS TO ARCHIVE TAPE AND UPDATE VSAM      *
*           JOURNAL TO POINT TO THE ARCHIVE TAPE                      *
*        E) AFTER COPY IS COMPLETE, DELETE THE DISK DATASET           *
*        F) PERFORM THIS PROCESS UNTIL ALL THE OLD DISKS ARE ON TAPE  *
*        G) ALLOCATE AND OPEN THE ACTIVE FILE                         *
*        H) ALLOCATE AND OPEN A NEW DAILY DISK DATASET                *
*           (THE SIZE OF THE ACTIVE DETERMINES THE SIZE OF THE DAILY) *
*           (THE DAILY DISK DATASET WILL GO TO SPECIFIED PACKS OR TO  *
*            ANY PACK, DEPENDING ON THE PARM)                         *
*           ( IF 2 OR 3 PACKS ARE SPECIFIED, THE PACK WITH THE MOST   *
*             SPACE IS SELECTED)                                      *
*        I) READ THE ACTIVE AND COPY TO THE DAILY DISK                *
*        J) FOR EACH SEPERATOR RECORD FOUND, UPDATE THE VSAM JOURNAL  *
*           TO POINT TO THE DAILY TAPE INSTEAD OF THE ACTIVE          *
*        K) INITIALIZE THE ACTIVE FILE                                *
*        L) FINISHED                                                  *
*                                                                     *
*                                                                     *
***********************************************************************
*                                                                     *
*                                                                     *
*        R1  -                                                        *
*        R2  - WORK (USED FOR PARM VERIFICATION)                      *
*        R3  - WORK                                                   *
*        R4  - WORK                                                   *
*        R5  - DSN LENGTH FOR SVC99                                   *
*        R6  - WORK -USING FOR WORK AREAS                             *
*        R7  - ACTIVE FILE RECORD COUNTER                             *
*        R8  - USING FOR DCB                                          *
*        R9  - BASE                                                   *
*        R10 - BASE                                                   *
*        R11 - BASE                                                   *
*        R12 - BASE                                                   *
*        R13 -                                                        *
*        R14 - WORK                                                   *
*        R15 - WORK                                                   *
*                                                                     *
*                                                                     *
*                                                                     *
* ABEND  REASONS:                                                     *
*                                                                     *
*        U0001 - INVALID PARM                                         *
*        U0002 - EXIT MISSING (SOUTDATE/SOUTCPR/LOCINDEX)             *
*        U0003 - NO PREFIX DD CARD                                    *
*        U0004 - NO //INPUT DD FOR "FIXTAPE" OPTION                   *
*        U0005 - ALLOCATION REPORT OPEN ERROR                         *
*        U0006 - ACT FILE ON NON-SUPPORTED DISK DEVICE (UPDATE TABLE) *
*        U0007 - JOURNAL RECORD NOT FOUND -IN COPY MODE (MUST BE THERE*
*        U0008 - VSAM UPDATE ERROR                                    *
*        U0009 - INPUT DATASET (ACT/DAY) OPEN ERROR                   *
*        U0010 - OUTPUT DATASET (DAILY/ARCH.) OPEN ERROR              *
*        U0011 - INVALID DATASET NAME (NOT DATE/TIME STAMPED)         *
*        U0012 - NON-SUPPORTED OUTPUT DISK COPY DEVICE TYPE           *
*        U0013 - TAPE DENSITY NO IN THE TABLE                         *
*        U0014 - LISTSPC CATALOG ERROR                                *
*        U0015 - NOT USED                                             *
*        U0016 - NO SPACE ON SPECIFIED PACKS                          *
*        U0017 - BACKUP DATE ERROR                                    *
*        U0018 - ACTIVE FILE ALLOCATION ERROR                         *
*        U0019 - VSAM JOURNAL ALLOCATION ERROR                        *
*        U0020 - VSAM JOURNAL OPEN ERROR                              *
*        U0021 - NEW TAPE ALLOCATION ERROR                            *
*        U0022 - MOD TO TAPE ALLOCATION ERROR                         *
*        U0023 - OLD DAILY/ARCH. DATASET ALLOCATION ERROR             *
*        U0024 - ENTERED INVALID CODE                                 *
*        U0025 - NEW DAILY DISK DATASET ALLOCATION ERROR              *
*        U0026 - OPEN ERROR ON SPECIAL DELETE DSN                     *
*        U0027 - INCREASE GETMAIN FOR SPECIAL DELETE FILE             *
*        U0028 - REQUESTED DELETE OF JOURNAL RECORD FAILED            *
*                                                                     *
***********************************************************************
*                                                                     *
***********************************************************************
*                                                                     *
*        INITIALIZATION AND PARM ISOLATION                            *
*                                                                     *
***********************************************************************
SOUTWTR  $PROLOG R12,R11,R10,R9  SPECIFY BASE REGISTERS
         USING IHADCB,R8       INFORM THE ASSEMBLER
         L     R2,0(R1)        GET PARM POINTER
         LH    R3,0(R2)        GET PARM SIZE
         LTR   R3,R3           ANY PARM?
         BZ    ABEND1          NO, ERROR
         SR    R3,R3           CLEAR R3
         LH    R3,0(R2)        SET R3 TO LENGTH OF PARM
         LA    R2,2(R2)
         CLC   0(4,R2),=C'COPY' VALID REQUEST?
         BNE   III010          NO, INVALID PARM
         OI    FUNC,COPYING    SET COPY OPTION
         SH    R3,=H'4'        SUBTRACT LENGTH OF COPY
         CH    R3,=H'0'        ANY MORE
         BE    FFF010          NO - ASSUME DAILY TO TAPE
         LA    R2,4(R2)        BUMP PAST LENGTH AND COPY
         CLC   0(7,R2),=C',DAILY=' IS NEXT A DAILY PARM
         BNE   ABEND1          NO - BAD PARM
         LA    R2,7(R2)        BUMP R2
         SH    R3,=H'7'        SUBTRACT LENGTH OF COPY
         BNP   ABEND1          NO POSITIVE - ERROR
         CLC   0(4,R2),=C'TAPE' TAPE SPECIFIED
         BE    GGG010          YES - SET SWITCH
         CLC   0(4,R2),=C'CART' TAPE SPECIFIED
         BE    GGG010          YES - SET SWITCH
         LA    R4,DISKNAME     SET R4 TO NAME OF DISK
         SR    R5,R5           CLEAR R5 FOR LENGTH
AAA010   MVC   0(1,R4),0(R2)   MOVE IN ONE CHAR
         LA    R2,1(R2)        BUMP R2
         LA    R4,1(R4)        BUMP R4
         AH    R5,=H'1'        ADD 1 TO LENGTH
         STH   R5,DISKNML      SAVE IN DISK LENGTH AREA
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         CLI   0(R2),C','      FOUND COMA
         BE    DDD010          GO TO SET DAYS LIMIT
         CLI   0(R2),C'('      FOUND LEFT PAREN
         BE    BBB010          HAVE SPECIFIED DISK PACKS
         B     AAA010          TRY AGAIN
BBB010   OI    COPYTO,DDSPEC   ALLOC ON SPECIFIED DISKS
         LA    R4,DISKTBL      SET R4 TO DISK TABLE
         LA    R2,1(R2)        BUMP PAST PAREN
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         SR    R5,R5           CLEAR R5 FOR LENGTH
BBB010A  MVC   0(1,R4),0(R2)   MOVE IN FIRST PACK
         AH    R5,=H'1'       ADD 1 TO LENGTH
         STH   R5,DISKTBL+12  SAVE LENGTH
         LA    R4,1(R4)        BUMP TO NEXT CHAR
         LA    R2,1(R2)        BUMP TO NEXT CHAR
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         CLI   0(R2),C')'      END OF LIST
         BE    CCC010          DONE
         CLI   0(R2),C','      MORE PACKS SPECIFIED
         BNE   BBB010A         MOVE IN NEXT CHAR
         LA    R2,1(R2)        BUMP PAST COMA
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         LA    R4,DISKTBL      SET BACK TO BEGINNING
         LA    R4,14(R4)       BUMP TO SECOND ENTRY
         SR    R5,R5           CLEAR R5 FOR LENGTH
BBB010B  MVC   0(1,R4),0(R2)   MOVE IN SECOND PACK
         AH    R5,=H'1'        ADD 1 TO LENGTH
         STH   R5,DISKTBL+26   SAVE LENGTH
         LA    R4,1(R4)        BUMP TO NEXT CHAR
         LA    R2,1(R2)        BUMP TO NEXT CHAR
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         CLI   0(R2),C')'      END OF LIST
         BE    CCC010          DONE
         CLI   0(R2),C','      MORE PACKS SPECIFIED
         BNE   BBB010B         MOVE IN NEXT CHAR
         LA    R2,1(R2)        BUMP PAST COMA
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         LA    R4,DISKTBL      SET BACK TO BEGINNING
         LA    R4,28(R4)       BUMP TO THIRD ENTRY
         SR    R5,R5           CLEAR R5 FOR LENGTH
BBB010C  MVC   0(1,R4),0(R2)   MOVE IN THIRD PACK
         AH    R5,=H'1'        ADD 1 TO LENGTH
         STH   R5,DISKTBL+40   SAVE LENGTH
         LA    R4,1(R4)        BUMP TO NEXT CHAR
         LA    R2,1(R2)        BUMP TO NEXT ENTRY
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         CLI   0(R2),C','      END OF LIST
         BE    ABEND1          3 PACKS IS MAX
         CLI   0(R2),C')'      END OF LIST
         BNE   BBB010C         MOVE IN NEXT CHAR
CCC010   LA    R2,1(R2)        BUMP PAST PAREN
         SH    R3,=H'1'        DECREMENT
         BNP   ABEND1          ERROR
         B     EEE010          GO SET DAY LIMIT
DDD010   OI    COPYTO,DDANY    ALLOC ON ANY DISK
EEE010   CH    R3,=H'9'        MUST HAVE AT LEAST 9 LEFT
         BL    ABEND1          ERROR
         CLC   0(6,R2),=C',DAYS=' DAYS PARM SPECIFIED
         BNE   ABEND1          ERROR
         LA    R2,6(R2)        BUMP R2
         SH    R3,=H'6'        DECREMENT
         BNP   ABEND1          ERROR
         TM    0(R2),X'F0'     IS CHAR NUMERIC
         BNO   ABEND1          NO - ABEND
         TM    1(R2),X'F0'     IS CHAR NUMERIC
         BNO   ABEND1          NO - ABEND
         TM    2(R2),X'F0'     IS CHAR NUMERIC
         BNO   ABEND1          NO - ABEND
         MVC   DAYONLIN+2(3),0(R2) MOVE IN DAYS ONLINE
         LA    R2,3(R2)        BUMP PAST DAYS
         SH    R3,=H'3'        DECREMENT LENGTH
         CH    R3,=H'0'        ANY PARM LEFT
         BE    FFF011          GO MOVE IN TAPE NAME
         CH    R3,=H'10'       MUST HAVE AT LEAST 10 MORE
         BL    ABEND1          LESS - ERROR
         CLC   0(9,R2),=C',ARCHIVE='
         BNE   ABEND1
         LA    R2,9(R2)        BUMP PAST CONSTANT
         SH    R3,=H'9'        DECREMENT LENGTH
         B     GGG011          GO MOVE IN ESOTERIC NAME
FFF010   OI    COPYTO,DT       SET TO DAILY=TAPE
FFF011   MVC   TAPENAME,=CL8'TAPE' "TAPE" UNIT BY DEFAULT
         MVC   TAPENML,=H'4'   LENGTH OF 4
         B     ENTRY020        START PROCESSING
GGG010   OI    COPYTO,DT       SET TO DAILY=TAPE
GGG011   LA    R4,TAPENAME     SET R4 TO NAME OF TAPE
         STH   R3,TAPENML      SAVE LENGTH
HHH010   MVC   0(1,R4),0(R2)   MOVE IN ONE CHAR
         LA    R2,1(R2)        BUMP R2
         LA    R4,1(R4)        BUMP R4
         BCT   R3,HHH010       DECREMENT AND MOVE NEXT CHAR
         B     ENTRY020        START PROCESSING
III010   CLC   0(6,R2),=C'FORMAT' VALID REQUEST?
         BNE   JJJ010          NO - CHECK REBUILD
         OI    FUNC,FORMAT     SET FORMAT  OPTION
         B     ENTRY030        GO GET PREFIX
JJJ010   CLC   0(8,R2),=C'REBUILD,' VALID REQUEST?
         BNE   KKK010          NO - CHECK FIXTAPE
         OI    FUNC,REBUILD    SET REBUILD OPTION
         LA    R2,8(R2)        BUMP PAST PARM
         MVI   RBLDSW,X'0F'    DEFAULT TO ALL
         CLC   0(3,R2),=C'ALL' REBUILD ALL??
         BE    ENTRY020        GO TO ENTRY020
         MVI   RBLDSW,X'01'    SET TO REBUILD ACTIVE ONLY
         CLC   0(3,R2),=C'ACT' REBUILD ACTIVE
         BE    ENTRY020        GO TO ENTRY020
         MVI   RBLDSW,X'02'    SET TO REBUILD DAILY ONLY
         CLC   0(3,R2),=C'DAI' REBUILD ACTIVE
         BE    ENTRY020        GO TO ENTRY020
         MVI   RBLDSW,X'04'    SET TO REBUILD ARCHIVE ONLY
         CLC   0(3,R2),=C'ARC' REBUILD ACTIVE
         BE    ENTRY020        GO TO ENTRY020
         MVI   RBLDSW,X'08'    SET TO REBUILD "OLD" ONLY
         CLC   0(3,R2),=C'OLD' REBUILD ACTIVE
         BE    ENTRY020        GO TO ENTRY020
         B     ABEND1          ELSE - ERROR
KKK010   CLC   0(7,R2),=C'FIXTAPE' VALID REQUEST?
         BNE   ABEND1          NOT ANY VALID REQUEST
         OI    FUNC,FIXTAPE    SET TAPE FIX OPTION
         LA    R2,7(R2)        BUMP PAST CONSTANT
         SH    R3,=H'7'        DECREMENT
         CH    R3,=H'13'       MUST HAVE AT LEAST 13
         BL    ABEND1          NO - ERROR
         CLC   0(13,R2),=C',OUTPUT=DAILY'
         BE    LLL010
         OI    COPYTO,FIXARCH  SET TO ARCHIVE OUTPUT
         CLC   0(15,R2),=C',OUTPUT=ARCHIVE'
         BNE   ABEND1          ERROR
         LA    R2,15(R2)       BUMP PAST OUT=DAY PARM
         SH    R3,=H'15'       DECREMENT COUNTER
         B     NNN010
LLL010   LA    R2,13(R2)       BUMP PAST OUT=DAY PARM
         SH    R3,=H'13'       DECREMENT COUNTER
         OI    COPYTO,FIXDAY   SET TO DAILY OUTPUT
NNN010   CH    R3,=H'1'        CHECK REMAINING
         BL    PPP010          ASSUME TAPE
         CLI   0(R2),C'='      EQUAL SIGN
         BNE   ABEND1          ERROR
         LA    R2,1(R2)        BUMP PAST EQUAL
         SH    R3,=H'1'        DECREMENT COUNTER
         BZ    PPP010          IF ZERO - ASSUME TAPE
         LA    R4,TAPENAME     SET R4 TO NAME OF TAPE
         STH   R3,TAPENML      SAVE LENGTH
OOO010   MVC   0(1,R4),0(R2)   MOVE IN ONE CHAR
         LA    R2,1(R2)        BUMP R2
         LA    R4,1(R4)        BUMP R4
         BCT   R3,OOO010       DECREMENT AND MOVE NEXT CHAR
         B     ENTRY020        START PROCESSING
PPP010   MVC   TAPENAME,=CL8'TAPE' "TAPE" UNIT BY DEFAULT
         MVC   TAPENML,=H'4'   LENGTH OF 4
         B     ENTRY020        START PROCESSING
         EJECT
***********************************************************************
*        LOAD THE EXIT ROUTINE (IF ONE EXISTS)                        *
*        LOAD THE COMPRESSION EXIT                                    *
*        LOAD THE LOCINDEX EXIT                                       *
*        LOAD THE DATE BACKUP EXIT                                    *
***********************************************************************
ENTRY020 EQU   *
         BLDL  0,BLDLLIST      ISSUE BLDL FOR SOUTXIT MODULE
         LTR   R15,R15         DOES IT EXIST
         BNZ   AAA020          NO, BYPASS LOAD
         LOAD  EP=SOUTXIT      LOAD ROUTINE
         ST    R0,EXITADDR     SAVE ADDRESS
AAA020   MVC   BLDLLIST+4(8),=CL8'SOUTCPR'    COMPRESS MODULE
         BLDL  0,BLDLLIST      ISSUE BLDL FOR COMPRESS MODULE
         LTR   R15,R15         DOES IT EXIST
         BNZ   ABEND2          NO, BYPASS LOAD
         LOAD  EP=SOUTCPR      LOAD ROUTINE
         ST    R0,COMPADDR     SAVE ADDRESS
BBB020   MVC   BLDLLIST+4(8),=CL8'LOCINDEX'    LOC INDEX
         BLDL  0,BLDLLIST      ISSUE BLDL
         LTR   R15,R15         DOES IT EXIST
         BNZ   ABEND2          ERROR - NEED ROUTINE
         LOAD  EP=LOCINDEX     LOAD ROUTINE
         ST    R0,LOCIADDR     SAVE ADDRESS
CCC020   MVC   BLDLLIST+4(8),=CL8'SOUTDATE'   BACKUP DATE
         BLDL  0,BLDLLIST      ISSUE BLDL
         LTR   R15,R15         DOES IT EXIST
         BNZ   ABEND2          ERROR - NEED ROUTINE
         LOAD  EP=SOUTDATE     LOAD ROUTINE
         ST    R0,DATEADDR     SAVE ADDRESS
         EJECT
***********************************************************************
*       GET PREFIX AND OLDPFX JFCB'S TO GET PREFIX FOR DSNS           *
*       OLDPFX IS OPTIONAL (FOR CONVERSION ONLY)                      *
*       ALSO CHECK IF THERE IS A INPUT DD FOR FIX TAPE                *
***********************************************************************
ENTRY030 L     R3,16               GET CVT ADDRESS
         L     R3,0(R3)            GET OLD/NEW TCB POINTERS
         L     R3,4(R3)            GET OUR TCB ADDRESS
         L     R3,12(R3)           GET OUR TIOT ADDRESS
         LA    R2,24               SIZE OF TIOT HEADER
AAA030   AR    R3,R2               BUMP TO NEXT ENTRY
         CLC   4(8,R3),=CL8'PREFIX  ' PREFIX DATASET?
         BE    CCC030              YES, GET DSN
         CLC   4(8,R3),=CL8'OLDPFX  ' OLD PREFIX (REBUILD OPTION ONLY)
         BE    FFF030              YES, OK
         CLC   4(8,R3),=CL8'ALLOCRPT' ALLOCATION REPORT DD SUPPLIED
         BE    III030              YES, OK
         CLC   4(8,R3),=CL8'SPECLDEL' DELETE REPORTS DD SUPPLIED
         BE    JJJ030              YES, OK
         CLC   4(8,R3),=CL8'INPUT   ' INPUT DSN (FIXTAPE OPTION ONLY)
         BE    BBB030              YES, OK
         B     LLL030              TRY FOR NEXT DD
BBB030   OI    FUNC,TAPEINP        HAVE TAPE IN DD CARD
         B     LLL030              TRY FOR NEXT DD
CCC030   RDJFCB PREFIX             GET JFCB
         MVC   PREFIX1,JFCB        MOVE IN PREFIX
         LA    R4,PREFIX1         SET R4 TO BEGINNING
         LA    R4,20(R4)          SET R4 TO END
         LA    R5,21              SET R5 TO MAX LENGTH
DDD030   CLI   0(R4),C' '         FIND BLANK
         BNE   EEE030             NO -FOUND END
         SH    R4,=H'1'           DECREMENT
         BCT   R5,DDD030          TRY AGAIN
EEE030   ST    R5,PREFIX1L        SAVE LENGTH OF PREFIX
         B     LLL030             TRY FOR NEXT DD
FFF030   RDJFCB OLDPFX            GET OLD JFCB
         MVC   PREFIX2,JFCB        MOVE IN PREFIX
         LA    R4,PREFIX2         SET R4 TO BEGINNING
         LA    R4,24(R4)          SET R4 TO END
         LA    R5,25              SET R5 TO MAX LENGTH
GGG030   CLI   0(R4),C' '         FIND BLANK
         BNE   HHH030             NO -FOUND END
         SH    R4,=H'1'           DECREMENT
         BCT   R5,GGG030          TRY AGAIN
HHH030   ST    R5,PREFIX2L        SAVE LENGTH OF PREFIX
         B     LLL030
III030   EQU   *
         OI    FUNC,RPTALLO        REPORT ON ALLOCATION
         B     LLL030
JJJ030   EQU   *
         OI    FUNC,SPECDEL        DELETE REPORTS ON MOVE
         B     LLL030
LLL030   ICM   R2,1,0(R3)          SIZE OF ENTRY
         BZ    MMM030              END OF TIOT, CONTINUE
         B     AAA030              CHECK NEXT ENTRY
MMM030   CLI   PREFIX1,C' '        IS THERE A PREFIX
         BE    ABEND3              ERROR
         TM    FUNC,FIXTAPE        ARE WE FIXING A TAPE
         BZ    OOO030              NO - BYPASS NEXT CHECK
         TM    FUNC,TAPEINP        HAVE INPUT TAPE DD?
         BZ    ABEND4              NO - ERROR
OOO030   TM    FUNC,RPTALLO        ALLOCATION REPORT WANTED
         BZ    PPP030              NO BYPASS OPEN
         OPEN  (ALLOCRPT,(OUTPUT)) OPEN REPORT DSN
         TM    ALLOCRPT+48,X'10'   DID IT OPEN
         BZ    ABEND5              NO - ERROR
         BAL   R14,ENTRY960        PUT OUT HEADING
         BAL   R14,ENTRY960        PUT OUT BLANK LINE
PPP030   TM    FUNC,SPECDEL        DELETE REPORTS  WANTED
         BZ    EXIT030             NO BYPASS OPEN
         GETMAIN R,LV=2000
         LR    R6,R1               SAVE ADDR OF DELETE AREA
         ST    R6,SAVESPEC         SAVE ADDR OF DELETE AREA
         LR    R0,R1               SET R0 TO BEGINNING OF GETMAIN
         LA    R1,2000             SET R1 TO LENGTH
         XR    R14,R14             CLEAR R14
         XR    R15,R15             CLEAR R15
         MVCL  R0,R14              SET GETMAINED TO ALL FF
         USING SPECAREA,R6         INFORM ASSEMBLER
         OPEN  (SPECLDEL,(INPUT))  OPEN DELETE DSN
         TM    SPECLDEL+48,X'10'   DID IT OPEN
         BZ    ABEND26             NO - ERROR
         LA    R7,99               99  RECORDS MAXIMUM
QQQ030   GET   SPECLDEL,DELAREA    GET DELETE RECORD
         LA    R2,DELAREA          SET R2 TO JOBNAME
         LA    R3,SPECNAME         SET R3 TO SPECIAL NAME
         LA    R4,8                SET TO MAX LENGTH
         XR    R5,R5               SET TO ZERO
RRR030   CLI   0(R2),C'*'          GENERIC NAME
         BE    SSS030              YES - DONE
         MVC   0(1,R3),0(R2)       MOVE IN 1 CHARACTER
         LA    R2,1(R2)            BUMP TO NEXT CHAR
         LA    R3,1(R3)            BUMP TO NEXT CHAR
         LA    R5,1(R5)            BUMP LENGTH COUNTER
         BCT   R4,RRR030           MOVE NEXT CHARACTER
SSS030   SH    R5,=H'1'            DECREMANT FOR COMPARE
         ST    R5,SPECLGTH         SAVE LENGTH OF JOB NAME
         MVC   SPECNUM,DELJNUM     SAVE JOB NUMBER IF ANY
         LA    R6,20(R6)           BUMP TO NEXT ENTRY
         BCT   R7,QQQ030           READ NEXT IF LESS THAN 100
         B     ABEND27             MORE THAN 99 ENTRIES - ERROR
XXX030   EQU   *
         CLOSE SPECLDEL
         DROP  R6
EXIT030  EQU   *
         EJECT
***********************************************************************
*        PROCESS THE COPY OPTION:
*          A) COPY ACTIVE TO TAPE ONLY
*           OR
*          B) COPY DAILYS TO ARCHIVE TAPE (BY DAYS OLD)
*             AND COPY ACTIVE TO DISK DAILY
*           ALWAYS
*          C) CLEAR THE ACTIVE FILE
***********************************************************************
ENTRY040 TM    FUNC,COPYING        ARE WE COPYING
         BZ    ENTRY050            TRY ANOTHER OPTION
         BAL   R14,ENTRY910        ALLOCATE AND OPEN JOURNAL
*
*        THE FOLLOWING LOGIC WILL:
*          A) GET LAST ARCHIVE TAPE USED (IF ANY)
*          B) GET THE DAILY DATASETS ON DISK ON DETERMINE IF
*             THEY SHOULD BE MOVE TO ARCHIVE TAPE
*             (EITHER DAILY IS PAST LIMIT FOR ONLINE
*              OR SWITCHING FROM DISK TO TAPE DAILYS)
*          C) ALLOCATE THE DAILY FILE
*          D) ALLOCATE THE ARCHIVE TAPE
*          E) COPY DAILY TO ARCHIVE AND UPDATE JOURNAL
*          F) DELETE DAILY
*          H) GO BACK TO B AND TRY AGAIN
*
* GET LAST ARCHIVE TAPE USED ????
*
         NI    MISC,255-ARCHALLO   SET ARCHIVE ALLOCATED TO NO
         MVC   PASSTYPE,ARCHVD     GET LAST ARCHIVE TAPE WITH
*                                   A DATE STAMP (NOT OLD GDG)
         OI    MISC,PASSLAST       JUST GET LAST ONE
         MVC   PASSLEN,PREFIX1L    MOVE PREFIX LENGTH
         MVC   PASSPFX(21),PREFIX1 MOVE PREFIX NAME
         MVI   LOOKFOR,ATAPE       LOOKING FOR A TAPE
         BAL   R14,ENTRY800        GET LAST ARCHIVE TAPE USED
         MVC   ARCHDSN,PASSDSN     SAVE IT FOR LATER ALLOC
*
         BAL   R14,ENTRY860        GET BACKUP DATE FOR COMPARE
         SR    R7,R7               CLEAR RECORD COUNTER
*
* GET ALL DAILY DATASET AND COMPARE AGAINST DATE
*
AAA040   MVC   PASSTYPE,DAYLED     GET LAST DAILY DISK WITH
*                                  A DATE STAMP (NOT OLD GDG)
         NI    MISC,255-PASSLAST   GET ALL DAILYS
         MVC   PASSLEN,PREFIX1L    MOVE PREFIX LENGTH
         MVC   PASSPFX(21),PREFIX1 MOVE PREFIX NAME
         MVI   LOOKFOR,ADISK       LOOKING FOR A DISK
         BAL   R14,ENTRY800        GET NEXT DAILY DATASET
         CLI   PASSDSN,C' '        ANY MORE DAILYS  ONLINE
         BE    GGG040              NO - DONE WITH DAILY TO ARCHIVE
*
* IF CHANGING FROM DISK TO TAPE DAILYS, MOVE ANY DISK TO ARCH TAPE
*
         TM    COPYTO,DT           DAILY TO TAPE ONLY
         BO    AAA041              YES-COPY ANY DAILY DISK TO ARCH.
*
         L     R5,PREFIX1L         SET R5 TO LENGTH OF PREFIX
         AH    R5,=H'7'            BUMP PAST .DAILY.
         LA    R4,PASSDSN          SET R4 TO PASSED DSN
         LA    R4,0(R5,R4)         BUMP PAST PREFIX
         CLC   COMPARED,0(R4)      COMPARE DATE STAMP
         BNH   AAA040              WITHIN LIMIT - KEEP ONLINE
AAA041   BAL   R14,ENTRY930        ALLOCATE THE DAILY DATASET
         BAL   R14,ENTRY700        OPEN INPUT FILE
*
*       ALLOCATE THE ARCHIVE TAPE FIRST TIME THRU
*
         MVC   PASSDSN,ARCHDSN     RESTORE PASSDSN TO ARCHIVE
         TM    MISC,ARCHALLO       IS ARCHIVE ALLOCATED YET?
         BO    DDD040              YES - BYPASS ALLOCATION
         OI    MISC,ARCHALLO+FRSTIME+RITETAPE       ARCH. IS ALLOCATED
*                                     SET FRSTIME FOR JOURN UPDATE OFF
*                                     WRITING ON TAPE
         MVC   NEWTYPE,ARCHV       SET TYPE FOR NEW FILE
         CLI   PASSDSN,C' '        WERE THERE ANY
         BNE   BBB040              YES - ALLOC EXISTING
         BAL   R14,ENTRY920        ALLOCATE A NEW TAPE
         B     CCC040
BBB040   BAL   R14,ENTRY925        ALLOCATE AN EXISTING TAPE
CCC040   BAL   R14,ENTRY750        OPEN OUTPUT FILE
DDD040   MVI   WHERETO,TOFFF040    WHERE TO ON EOF
         MVI   INPTYPE,DAYFILE     INPUT TYPE DAILY - NO SOUTXIT
*
*       MOVE DAILY TO ARCHIVE AND UPDATE JOURNAL
*
EEE040   BAL   R14,ENTRY710        READ THE INPUT DAILY FILE
         BAL   R14,ENTRY760        WRITE THE OUTPUT ARCHIVE FILE
         B     EEE040
FFF040   BAL   R14,ENTRY980       CLOSE THE DAILY/DELETE IT
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    AAA040             NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTDDS REPORT TYPE
         MVC   RPTLINE+29(44),DALYDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
         B     AAA040
GGG040   TM    MISC,ARCHALLO       WAS ARCHIVE ALLOCATED
         BZ    HHH040              NO - BYPASS CLOSE
         BAL   R14,ENTRY985        CLOSE AND FREE ARCHIVE OUTPUT
         LTR   R7,R7               ANY INPUT RECORDS WRITTEN
         BZ    HHH040              NO - BYPASS LAST RECORD UPDATE
         BAL   R14,ENTRY650        UPDATE THE LAST VSAM RECORD
*
*       DONE WITH DAILY TO ARCHIVE MOVE
*       NOW SETUP FOR ACTIVE TO DAILY DISK
*       (UNLESS DAILY TO TAPE ONLY)
*
HHH040   EQU   *
         TM    COPYTO,DT           DAILY TO TAPE ONLY
         BO    KKK040              YES-GO ALLOCATE DAILY TAPE
*
         BAL   R14,ENTRY900        ALLOCATE THE ACTIVE FILE
         BAL   R14,ENTRY700        OPEN THE ACTIVE FILE
*
*  GET ACTIVE DEVICE TYPE AND THE NUMBER OF BLKS PER CYLINDER
*  FOR ALLOCATION OF NEW DAILY FILE
*
         LA    R8,INPUT        SET UP ADDRESSABILITY
III040   LA    R15,DEVT#       SET LOOP CONTROL
         LA    R14,DEVT        ADDRESS OF DEVICE TABLE
JJJ040   CLC   0(1,R14),DCBTRBAL-1 CHECK DEVICE TYPE
         BE    JJJ041          FOUND, CONTINUE
         LA    R14,8(R14)      NEXT ENTRY
         BCT   R15,JJJ040      CHECK NEXT DEVICE ENTRY
         WTO   'SOUTWTR - UNSUPPORTED ACTIVE FILE DEVICE TYPE'
         B     ABEND6          ERROR RETURN
JJJ041   MVC   ALLOBLKS,4(R14) STORE BLKS/CYL QUANTITY
*
*  GET NUMBER OF CYLINDERS IN ACTIVE FILE
*
         L     R14,DCBDEBAD    INPUT DCB'S DEB
         SR    R3,R3           CLEAR FOR ICM
         SR    R4,R4           CLEAR FOR ICM
         ICM   R3,3,38(R14)    MOVE IN LOWER CYLINDER
         ICM   R4,3,42(R14)    MOVE IN UPPER CYLINDER
         SR    R4,R3           R4 CONTAINS CYLINDERS IN DATASET
         AH    R4,=H'1'        ROUND UP 1
         ST    R4,ALLOCYL      SAVE IT
         BAL   R14,ENTRY940    GO ALLOCATE NEW DISK DAILY DATASET
         BAL   R14,ENTRY750    OPEN OUTPUT FILE
         NI    MISC,255-RITETAPE  WILL BE WRITING TO DISK
         B     NNN040          GO PROCESS ACTIVE TO DAILY
*
*       SETUP AND PROCESS ACTIVE TO DAILY=TAPE
*
KKK040   EQU   *
*
*  FOLLOWING CODE NEEDED TO RESET LISTSPC (LICINDEX) IF
*  CHANGING FROM DISK TO TAPE (OTHERWISE JUST UNNEEDED LOGIC)
         MVC   PASSTYPE,BLANKS     GET AT LEAST ONE DSN
         MVC   PASSPFX(21),PREFIX1 MOVE NEW PREFIX NAME
         MVC   PASSLEN,PREFIX1L    MOVE NEW PREFIX LENGTH
         NI    MISC,255-PASSLAST   GET FIRST
         MVI   LOOKFOR,BOTH        GET ANY TYPE
         BAL   R14,ENTRY800        GO GET DSN
*  PREVIOUS CODE NEEDED TO RESET LISTSPC GETMAINED AREA
*
         OI    MISC,RITETAPE       WILL BE WRITING TO TAPE
         MVC   PASSTYPE,DAYLED     GET LAST DAILY WITH
*                                  A DATE STAMP (NOT OLD GDG)
         MVC   PASSPFX(21),PREFIX1 MOVE NEW PREFIX NAME
         MVC   PASSLEN,PREFIX1L    MOVE NEW PREFIX LENGTH
         OI    MISC,PASSLAST       JUST GET LAST ONE
         MVI   LOOKFOR,ATAPE       LOOK FOR LAST DAILY TAPE
         BAL   R14,ENTRY800        GO GET DSN
         MVC   NEWTYPE,DAYLE       SET NEW TYPE TO DAILY
         CLI   PASSDSN,C' '        ARE THERE ANY
         BNE   LLL040              YES - ALLOCATE EXISTING
         BAL   R14,ENTRY920        ALLOCATE A NEW TAPE
         B     MMM040
LLL040   BAL   R14,ENTRY925        ALLOCATE AN EXISTING TAPE
MMM040   BAL   R14,ENTRY750        OPEN OUTPUT DAILY TAPE
         BAL   R14,ENTRY900        GO ALLOC ACTIVE FILE
         BAL   R14,ENTRY700        OPEN ACTIVE FILE
NNN040   MVI   WHERETO,TOYYY040    SET EOF WHERE TO
         OI    MISC,FRSTIME        SET FRSTIME FOR JOURN UPDATE OFF
         MVI   INPTYPE,ACTFILE     SET TYPE TO ACTIVE FILE
         SR    R7,R7               CLEAR ACTIVE RECORD COUNTER
OOO040   BAL   R14,ENTRY710        READ THE INPUT FILE
         BAL   R14,ENTRY760        WRITE OUT THE FILE
         B     OOO040              GET NEXT RECORD
YYY040   EQU   *
         ICM   R15,15,EXITADDR     ADDRESS OF THE EXIT
         BZ    ZZZ040              NONE, BYPASS EXIT
         NI    EXITSW,255-REC-SEP  RESET SEP AND REC FLAGS
         OI    EXITSW,EOF          INDICATE END OF FILE
         XC    EXITREC,EXITREC     CLEAR RECORD POINTER
         LA    R1,EXITPARM         ADDRESS OF EXIT PARM
         BALR  R14,R15             LAST CALL TO THE EXIT ROUTINE
ZZZ040   LTR   R7,R7               ANY RECORDS IN THE ACTIVE FILE
         BZ    ZZZ041              NONE - BYPASS LAST UPDATE
         BAL   R14,ENTRY650        UPDATE THE LAST VSAM RECORD
ZZZ041   BAL   R14,ENTRY980        CLOSE THE INPUT FILE
         BAL   R14,ENTRY985        CLOSE THE OUTPUT FILE
         BAL   R14,ENTRY990        CLOSE THE VSAM JOURNAL
         LTR   R7,R7               WERE ANY RECORDS WRITTEN?
         BZ    EXIT040             NO, ALL DONE
         B     ENTRY070            GO AND CLEAR ACTIVE FILE
EXIT040  EQU   *
         B     EXIT0
         EJECT
***********************************************************************
*        REBUILD THE VSAM FILE FROM ALL THE INPUT FILES
***********************************************************************
ENTRY050 TM    FUNC,REBUILD        ARE WE REBUILDING
         BZ    ENTRY060            NO - TRY FIX TAPE OPTION
         MVC   HLINES,=PL4'0'      ZERO LINE COUNTER
         MVC   HTTR,=X'000000'     ZERO THE TTR
         BAL   R14,ENTRY910        ALLOCATE AND OPEN JOURNAL
         TM    RBLDSW,X'01'        REBUILD ACTIVE
         BZ    CCC050              NO - BYPASS REBUILD ACTIVE
         BAL   R14,ENTRY900        ALLOCATE THE ACTIVE FILE
         BAL   R14,ENTRY700        OPEN THE ACTIVE FILE
         MVI   WHERETO,TOBBB050    SET EOF WHERE TO!!
         LA    R8,INPUT            SET UP DCB ADDRESSABILITY
         RDJFCB INPUT              GET THE JFCB FOR 'OUTPUT'
         BAL   R14,ENTRY755        GET DSN AND DEVICE TYPE
         SR    R7,R7               CLEAR INPUT RECORD COUNTER
         OI    MISC,FRSTIME        SET ON
         MVI   INPTYPE,ACTFILE     SET FILE TYPE TO ACTIVE
AAA050   BAL   R14,ENTRY710        READ THE FILE
         B     AAA050              GO GET NEXT
BBB050   BAL   R14,ENTRY980        CLOSE THE ACTIVE FILE
         LTR   R7,R7               WERE ANY RECORDS WRITTEN?
         BZ    CCC050              NO BYPASS LAST UPDATE
         BAL   R14,ENTRY650        UPDATE LAST VSAM RECORD
CCC050   TM    RBLDSW,X'02'        REBUILD DAILY
         BZ    FFF050              NO - BYPASS REBUILD DAILY
         MVC   PASSTYPE,DAYLE      GET ALL DAILY SYSOUT DATASETS
         NI    MISC,255-PASSLAST   GET ALL
         MVC   PASSLEN,PREFIX1L    MOVE PREFIX LENGTH
         MVC   PASSPFX(21),PREFIX1 MOVE PREFIX NAME
         MVI   LOOKFOR,BOTH        LOOKING FOR A DISK OR TAPE
         BAL   R14,ENTRY800        GET ALL ARCHIVE TAPE USED
         CLI   PASSDSN,C' '        ANY MORE DAILYS  ONLINE
         BE    FFF050              DONE WITH DAILY
         BAL   R14,ENTRY930        ALLOCATE THE DAILY INPUT FILE
         BAL   R14,ENTRY700        OPEN THE INPUT FILE
         LA    R8,INPUT            SET UP DCB ADDRESSABILITY
         RDJFCB INPUT              GET THE JFCB FOR 'OUTPUT'
         BAL   R14,ENTRY755        GET DSN AND DEVICE TYPE
         MVI   INPTYPE,DAYFILE     SET FILE TYPE TO DAILY
         OI    MISC,FRSTIME        SET ON
         SR    R7,R7               CLEAR INPUT RECORD COUNTER
         MVI   WHERETO,TOEEE050    SET EOF WHERE TO!!
DDD050   BAL   R14,ENTRY710        READ THE FILE
         B     DDD050              LOOP
EEE050   BAL   R14,ENTRY980        CLOSE IT
         LTR   R7,R7               ANY RECORDS WRITTEN
         BZ    CCC050              NO - BYPASS LAST UPDATE
         BAL   R14,ENTRY650        UPDATE LAST VSAM RECORD
         B     CCC050              TRY FOR MORE DAILYS
FFF050   TM    RBLDSW,X'04'        REBUILD ARCHIVE
         BZ    III050              NO - BYPASS REBUILD ARCHIVE
         MVC   PASSTYPE,ARCHV      GET ALL ARCHIVE DATASETS
         NI    MISC,255-PASSLAST   GET ALL
         MVC   PASSLEN,PREFIX1L    MOVE PREFIX LENGTH
         MVC   PASSPFX(21),PREFIX1     MOVE PREFIX NAME
         MVI   LOOKFOR,BOTH        LOOKING FOR A DISK OR TAPE
         BAL   R14,ENTRY800        GET ALL ARCHIVE TAPE USED
         CLI   PASSDSN,C' '        ANY MORE ARCHIVES
         BE    III050              DONE WITH ARCHIVE
         BAL   R14,ENTRY930        ALLOCATE THE INPUT ARCHIVE FILE
         BAL   R14,ENTRY700        OPEN THE INPUT FILE
         LA    R8,INPUT            SET UP DCB ADDRESSABILITY
         RDJFCB INPUT              GET THE JFCB FOR 'OUTPUT'
         BAL   R14,ENTRY755        GET DSN AND DEVICE TYPE
         OI    MISC,FRSTIME        SET ON
         SR    R7,R7               CLEAR RECORD COUNTER
         MVI   WHERETO,TOHHH050    SET EOF WHERE TO!!
GGG050   BAL   R14,ENTRY710        READ THE FILE
         B     GGG050              LOOP
HHH050   BAL   R14,ENTRY980        CLOSE IT
         LTR   R7,R7               ANY RECORDS WRITTEN
         BZ    FFF050              NO - BYPASS LAST UPDATE
         BAL   R14,ENTRY650        UPDATE LAST VSAM RECORD
         B     FFF050              TRY FOR MORE DAILYS
III050   CLI   PREFIX2,C' '        ANY PREFIX 2
         BE    LLL050              END
         TM    RBLDSW,X'08'        REBUILD OLD ARCHIVE
         BZ    LLL050              NO - BYPASS REBUILD OLD
         MVC   PASSTYPE,ARCHV           ##### OLD=ARCHIVE
*        MVC   PASSTYPE,DAYLE           ##### OLD=DAILY
         NI    MISC,255-PASSLAST   GET ALL
         MVC   PASSPFX,PREFIX2     MOVE IN OLD PREFIX
         MVC   PASSLEN,PREFIX2L    MOVE PREFIX LENGTH
         MVI   LOOKFOR,BOTH        LOOKING FOR A DISK OR TAPE
         BAL   R14,ENTRY800        GET ALL ARCHIVE TAPE USED
         CLI   PASSDSN,C' '        ANY MORE OLD ARCHIVES
         BE    LLL050              DONE WITH OLD ARCHIVES
         BAL   R14,ENTRY930        ALLOCATE THE OLD ARCHIVE FILES
         BAL   R14,ENTRY700        OPEN THE INPUT FILE
         LA    R8,INPUT            SET UP DCB ADDRESSABILITY
         RDJFCB INPUT              GET THE JFCB FOR 'OUTPUT'
         BAL   R14,ENTRY755        GET DSN AND DEVICE TYPE
         MVI   HADR,C'O'           SET TO OLD SYSTEM
         OI    MISC,FRSTIME        SET ON
         SR    R7,R7               CLEAR RECORD COUNTER
         MVI   WHERETO,TOKKK050    SET EOF WHERE TO!!
JJJ050   BAL   R14,ENTRY710        READ THE FILE
         B     JJJ050              LOOP
KKK050   BAL   R14,ENTRY980        CLOSE IT
         LTR   R7,R7               ANY RECORDS WRITTEN
         BZ    III050              NO - BYPASS LAST UPDATE
         BAL   R14,ENTRY650        UPDATE LAST VSAM RECORD
         B     III050              TRY FOR MORE
LLL050   BAL   R14,ENTRY990        CLOSE THE VSAM FILE
EXIT050  EQU   *
         B     EXIT0               ALL DONE
         EJECT
***********************************************************************
*        TAKE A TAPE INPUT (SUPPLIED IN //INPUT DD CARD)
*        AND CREATE A NEW OUTPUT DAILY OR ARCHIVE TAPE
*        ALONG WITH ADDING OR UPDATING THE VSAM JOURNAL
***********************************************************************
ENTRY060 TM    FUNC,FIXTAPE        ARE WE FIXING TAPE
         BZ    ENTRY070            NO -MUST BE FORMATTING
         BAL   R14,ENTRY910        ALLOCATE AND OPEN JOURNAL
         TM    COPYTO,FIXDAY       TO DAILY TAPE
         BZ    AAA060              NO - MUST BE ARCHIVE
         MVC   PASSTYPE,DAYLED     GET LAST DAILY WITH
*                                  A DATE STAMP (NOT OLD GDG)
         MVC   NEWTYPE,DAYLE
         B     BBB060
AAA060   MVC   PASSTYPE,ARCHVD     GET LAST ARCHIVE WITH
*                                   A DATE STAMP (NOT OLD GDG)
         MVC   NEWTYPE,ARCHV       SET TO ARCHIVE FOR ALLOC
BBB060   OI    MISC,PASSLAST       JUST GET LAST ONE
         MVC   PASSLEN,PREFIX1L    MOVE PREFIX LENGTH
         MVC   PASSPFX(21),PREFIX1 MOVE PREFIX NAME
         MVI   LOOKFOR,ATAPE       LOOK FOR LAST TAPE USED
         BAL   R14,ENTRY800        GO GET DSN
         CLI   PASSDSN,C' '        ARE THERE ANY
         BNE   CCC060              YES - MOD ON
         BAL   R14,ENTRY920        ALLOCATE A NEW TAPE
         B     DDD060
CCC060   BAL   R14,ENTRY925        ALLOCATE AN EXISTING TAPE
DDD060   BAL   R14,ENTRY750        OPEN THE OUTPUT FILE
EEE060   LA    R8,INPUT            SET UP ADDRESSABILTY
         MVC   DCBDDNAM,=CL8'INPUT' SET INPUT AS DEFAULT
         BAL   R14,ENTRY700        OPEN THE INPUT TAPE
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EEE061             NO - BYPASS REPORTING
         RDJFCB INPUT             GET JFCB FOR REPORT LINE
         MVC   RPTLINE(29),RPTIDS REPORT TYPE
         MVC   RPTLINE+29(44),JFCB MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EEE061   MVI   WHERETO,TOGGG060    SET EOF WHERE TO!!
         OI    MISC,FRSTIME+RITETAPE SET ON
         SR    R7,R7               CLEAR RECORD COUNTER
         MVI   INPTYPE,INPFILE     SET TYPE TO INPUT
FFF060   BAL   R14,ENTRY710        READ THE FILE
         BAL   R14,ENTRY760        WRITE IT
         B     FFF060              READ AGAIN
GGG060   LTR   R7,R7               ANY RECORDS
         BZ    HHH060              NO - BYPASS UPDATE LAST RECORD
         BAL   R14,ENTRY650        UPDATE THE LAST VSAM RECORD
HHH060   BAL   R14,ENTRY980        CLOSE THE INPUT FILE
         BAL   R14,ENTRY985        CLOSE THE OUTPUT FILE
         BAL   R14,ENTRY990        CLOSE THE VSAM JOURNAL
EXIT060  EQU   *
         B     EXIT0
         EJECT
***********************************************************************
*        FORMAT THE ACTIVE FILE
***********************************************************************
ENTRY070 EQU   *
         TM    FUNC,RPTALLO         REPORT WANTED
         BZ    AAA070               NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTFORM  REPORT TYPE
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
AAA070   TM    FUNC,FORMAT          FORMATTING FILE ONLY
         BZ    BBB070               NO  - BR AROUND
         SR    R7,R7                CLEAR R7
         SR    R0,R0                CLEAR R0
         BCTR  R7,R0                SET TO MAX
BBB070   BAL   R14,ENTRY900         ALLOC ACTIVE FILE
         LA    R8,FORMDCB           SET UP ADDRESABILITY
         MVC   DCBDDNAM,ACTDDN      MOVE IN DDNAME
         BAL   R14,ENTRY995         FORMAT IT
*
*    EXPECT D37 IF FORMATTING ONLY
*
EXIT070  EQU   *
         B     EXIT0                DONE
         EJECT
***********************************************************************
*        END OF FILE PROCESSING ROUTINE - GO TO ??????                *
***********************************************************************
ENTRY100 DS    0H
         TM    WHERETO,TOYYY040
         BO    YYY040
         TM    WHERETO,TOFFF040
         BO    FFF040
         TM    WHERETO,TOBBB050
         BO    BBB050
         TM    WHERETO,TOEEE050
         BO    EEE050
         TM    WHERETO,TOHHH050
         BO    HHH050
         TM    WHERETO,TOKKK050
         BO    KKK050
         TM    WHERETO,TOGGG060
         BO    GGG060
         B     ABEND24
         EJECT
***********************************************************************
*        READ THE VSAM JOURNAL FILE                                   *
***********************************************************************
ENTRY600 DS    0H
         ST    R14,SAVE600
         CLI   RECYEAR,C' '    FULL YEAR BLANK
         BNE   AAA600          NO - MOVE IT
         MVC   RECYEAR(2),=C'19' SET TO 1900
         MVC   RECYEAR+2(2),RECDATE+6  MOVE IN YEAR
         CLC   RECDATE+6(2),=C'75'  LESS THAN 1975
         BH    AAA600              NO - CONTINUE
         MVC   RECYEAR(2),=C'20'   MUST BE 2000
AAA600   MVC   HDATE(4),RECYEAR    MOVE DATA FROM SEPARATOR
         MVC   HDATE+4(2),RECDATE    MOVE DATA FROM SEPARATOR
         MVC   HDATE+6(2),RECDATE+3  MOVE DATA FROM SEPARATOR
         PACK  PDATE,HDATE           PACK DATE
         MVC   JDATE,=P'099999999'   SET TO 9999999
         SP    JDATE,PDATE         REVERSE DATE
         MVC   HTIME(2),RECTIME    MOVE DATA FROM SEPARATOR
         MVC   HTIME+2(2),RECTIME+3  MOVE DATA FROM SEPARATOR
         MVC   HTIME+4(2),RECTIME+6  MOVE DATA FROM SEPARATOR
         PACK  PTIME,HTIME          PACK TIME
         MVC   JTIME,=P'0999999'    SET TO 9999999
         SP    JTIME,PTIME          REVERSE TIME
         MVC   JJOBN,RECJNAME  MOVE DATA FROM SEPARATOR
         MVC   JJOB#(5),RECJNUM+3   MOVE DATA FROM SEPARATOR
         MVC   JJOB#+5(3),RECJNUM   MOVE DATA FROM SEPARATOR
*
         MVI   SPECPROC,X'00'       SET TO NO SPECIAL PREOCESSING
         TM    FUNC,SPECDEL         SPECIAL DELETE PROCESSING
         BZ    FFF600               NO - BYPASS TABLE COMPARE
*
         USING SPECAREA,R15
         L     R15,SAVESPEC         SET TO DELETE GETMAINED AREA
BBB600   CLI   SPECNAME,X'00'       END OF NAME LIST
         BE    FFF600               YES - NO MATCH
         L     R14,SPECLGTH         SET R14 TO LENGTH OF COMPARE
         EX    R14,SPECOMPR         COMPARE JOBNAME
         BNE   DDD600               NO MATCH - TRY NEXT
         CLI   SPECNUM,C' '         JOB NUMBER COMPARE ??
         BE    CCC600               NO - DELETE IT
         CLC   SPECNUM,RECJNUM      JOB NUMBER MATCHES
         BNE   DDD600               NO - GET NEXT ENTRY
CCC600   OI    SPECPROC,DELIT       SET ON SWITCH
         B     FFF600               CONTINUE
DDD600   LA    R15,20(R15)          BUMP TO NEXT ENTRY
         B     BBB600               TRY NEXT COMPARE
*
SPECOMPR CLC   RECJNAME(0),SPECNAME COMPARE FOR DELETE JOBNAME
         DROP  R15
FFF600   EQU   *
*
         MODCB RPL=JOURNRPL,OPTCD=(UPD) SET RPL TO UPDATE MODE
         GET   RPL=JOURNRPL         GET THE VSAM RECORD
         LTR   R15,R15              OK?
         BZ    XXX600               YES - CONTINUE
*
* THE VSAM RECORD SHOULD ALWAYS BE THERE (ADDED ONLY WHEN FIRST
* PLACED ON THE ACTIVE FILE. THIS PROGRAM WILL ADD NEW VSAM
* RECORDS IF REBUILDING THE VSAM FILE OR FIXING A TAPE OR IF
* NEEDED TO SYNC THE JOURNAL AND THE ACTIVE IT IS CURRENTLY
* MOVING TO DAILY.
*
         OI    SPECPROC,NOTHERE     SET JOURNAL REC NOT THERE
         TM    FUNC,REBUILD+FIXTAPE REBUILDING OR FIXING TAPE
         BZ    VVV600               NO - ISSUE WTO
         B     WWW600               BRANCH AROUND MESSAGE
VVV600   EQU   *
         TM    SPECPROC,DELIT       ARE WE DELETING IT ANYWAY???
         BO    WWW600               YES  - BYPASS "SYNC" MESSAGES
         WTO   'SOUTWTR - SYNCHRONIZING JOURNAL AND REPORT FILES'
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    WWW600             NO - BYPASS REPORTING
         MVC   RPTLINE(50),SYNCLINE REPORT TYPE
         MVC   RPTLINE+8(8),RECJNAME
         MVC   RPTLINE+17(8),RECJNUM
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
*
WWW600   MODCB RPL=JOURNRPL,OPTCD=(NUP) SET RPL TO ADD NEW RECORD
*
         MVC   JMCLASS,RECMSGCL     PUT MSGCLASS IN JOURNAL REC
         MVC   JDAY,RECDAY          SAVE DAY
XXX600   BAL   R14,ENTRY610         GET POSITION IN OUTPUT FILE
EXIT600  L     R14,SAVE600
         BR    R14
SAVE600  DC    F'0'
         EJECT
***********************************************************************
*       GET THE TTR IF WRITING TO DISK                                *
***********************************************************************
ENTRY610 DS    0H
         ST    R14,SAVE610
         XC    HTTR,HTTR       ZERO TTR AS DEFAULT (NO TTR)
         CLC   TRKSPER,=F'0'   DO WE HAVE ANY TRACKS/CYL
         BE    EXIT610         NO, NOT A DASD DEVICE
         TM    FUNC,REBUILD    REBUILDING????
         BZ    AAA610
         LA    R8,INPUT        SET UP ADDRESSABILITY
         B     BBB610
AAA610   LA    R8,OUTPUT       SET UP ADDRESSABILITY
BBB610   L     R14,DCBDEBAD    OUTPUT DCB'S DEB
         CLC   DCBFDAD+3(4),38(R14) CHECK WITHIN EXTENT
         BL    EXIT610         LOW, SKIP TTR UPDATE
         CLC   DCBFDAD+3(4),42(R14) CHECK WITHIN EXTENT
         BH    EXIT610         HIGH, (SECOND XTENT) SKIP TTR UPDATE
         SR    R2,R2           CLEAR FOR ICM
         SR    R3,R3           CLEAR FOR ICM
         ICM   R3,3,DCBFDAD+3  CURRENT CYLINDER NUMBER
         ICM   R2,3,38(R14)    GET START CYLINDER NUMBER
         SR    R3,R2           GET RELATIVE CYLINDER
         SR    R2,R2           CLEAR FOR MULTIPLY
         M     R2,TRKSPER      MULTIPLY BY TRKS/CYL
         SR    R15,R15         CLEAR FOR ICM
         ICM   R15,3,DCBFDAD+5 CURRENT TRACK NUMBER
         IC    R14,DCBFDAD+7   GET RECORD NUMBER
         AR    R3,R15          NOW HAVE REAL 'TT'
         BZ    DDD610          ZERO TTR, SKIP DECREMENT
         CLI   DCBFDAD+7,X'01' STAY AWAY FROM ZERO
         BH    CCC610          NO, DECREMENT RECORD NUMBER
         SH    R3,=H'1'        DECREMENT TRACK NUMBER
         B     DDD610          CONTINUE
CCC610   BCTR  R14,R0          DECRMENT FOR SAM-E
DDD610   STC   R14,HTTR+2       INCLUDE UPDATED TTR
         STCM  R3,3,HTTR        MOVE TO HOLD TTR
EXIT610  L     R14,SAVE610
         BR    R14
SAVE610  DC    F'0'
         EJECT
***********************************************************************
*        UPDATE THE VSAM JOURNAL FILE                                 *
***********************************************************************
ENTRY650 DS    0H
         ST    R14,SAVE650
         MVC   JTTR,HTTR        MOVE IN TTR
         MVC   JDEVT,HDEVT      MOVE IN DEVICE TYPE
         MVC   JADR,HADR        MOVE IN TYPE CODE
         MVC   JSTAMP,HSTAMP    MOVE IN STAMP NUMBER
         MVC   JLINES,HLINES    MOVE LINE COUNT IN
*
         TM    SPECPROC,DELIT   DELETING RECORD FROM JOURNAL
         BO    AAA650           YES - DELETE IT
         PUT   RPL=JOURNRPL     WRITE OUT UPDATED/NEW JOURNAL RECORD
         LTR   R15,R15          UPDATE OK
         BNZ   ABEND8           NO - ABEND
         B     XXX650
AAA650   TM    SPECPROC,NOTHERE WAS RECORD THERE TO BEGIN WITH
         BO    BBB650           NO - JUST REPORT ON IT
         ERASE RPL=JOURNRPL     DELETE IT
         LTR   R15,R15          DELETE OK ???
         BNZ   ABEND28          NO - ABEND
BBB650   MVC   RPTLINE(50),DELTLINE REPORT TYPE
         MVC   RPTLINE+8(8),JJOBN
         MVC   RPTLINE+17(3),JJOB#+5
         MVC   RPTLINE+20(5),JJOB#
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
XXX650   SP    HLINES,HLINES    CLEAR LINE COUNTER
EXIT650  L     R14,SAVE650
         BR    R14
SAVE650  DC    F'0'
         EJECT
***********************************************************************
*        OPEN THE INPUT FILES AND DETERMINE IF FIXED OR VARIABLE      *
***********************************************************************
ENTRY700 DS    0H
         ST    R14,SAVE700
         OPEN  (INPUT,(INPUT)) OPEN THE INPUT FILE
         TM    INPUT+48,X'10'  CHECK IF IT OPENED
         BZ    ABEND9          NO, INPUT FAILED TO OPEN
         TM    INPUT+36,X'80'  CHECK IF FIXED RECFM
         BZ    AAA700          GO SET VARIABLE
         MVI   FIXVAR,FIXREC   SET TO FIXED RECORD
         LA    R6,RECORDF      FIXED LENGTH RECORD
         STCM  R6,7,EXITREC    STORE RECORD ADDRESS FOR EXIT
         B     EXIT700         GO READ FIRST RECORD
AAA700   EQU   *
         LA    R6,RECOUT       DE-COMPRESSED RECORD
         STCM  R6,7,EXITREC    STORE RECORD ADDRESS FOR EXIT
         MVI   FIXVAR,VARREC   SET TO VARIABLE
EXIT700  L     R14,SAVE700
         BR    R14
SAVE700  DC    F'0'
         EJECT
***********************************************************************
*        READ THE INPUT RECORDS AND DETERMINE IF THERE IS A           *
*        SEPERATOR RECORD; IF IT IS, GET THE JOURNAL RECORD           *
***********************************************************************
ENTRY710 DS    0H
         ST    R14,SAVE710
         MVC   RECSEP,BLANKS   CLEAR AREA BEFORE READ
AAA710   TM    FIXVAR,FIXREC   IS RECORD FIXED
         BZ    BBB710          NO - READ IN VARIABLE
         GET   INPUT,RECORDF   GET A FIXED  SYSOUT RECORD
         B     CCC710
BBB710   GET   INPUT,RECORDV   GET A VARIABLE RECORD
CCC710   CLI   RECSEP,C'S'     POSSIBLE  SEPARATOR RECORD
         BNE   CCC711          NO - CONTINUE
         CLC   RECSEP,SEPLIT   IS THIS A SEPARATOR RECORD
         BE    DDD710          YES - CONTINUE
CCC711   NI    EXITSW,255-SEP    RESET SEP FLAG
         OI    EXITSW,REC        RECORD FOR EXIT
         B     FFF710          CONTINUE
DDD710   TM    INPTYPE,ACTFILE IS THIS AN ACTIVE FILE
         BZ    DDD711          NO - BYPASS PAD CHECK
         CLC   RECPAD,=CL5' PAD ' IS THIS A 'PAD' RECORD?
         BE    ENTRY100        YES, GO TO END OF FILE PROCESSING
DDD711   NI    EXITSW,255-REC  RESET REC FLAG
         OI    EXITSW,SEP      SEPARATOR RECORD FOR EXIT
         TM    MISC,FRSTIME    IS THIS FIRST TIME THRU
         BO    DDD712          YES - BR AROUND UPDATE
         BAL   R14,ENTRY650    UPDATE JOURNAL
DDD712   NI    MISC,255-FRSTIME SET OFF
         TM    MISC,NEEDNEW    NEED NEW TAPE ?
         BZ    EEE710          NO - BR AROUND
         BAL   R14,ENTRY985    CLOSE OUTPUT
         BAL   R14,ENTRY920    ALLOCATE A NEW TAPE
         BAL   R14,ENTRY750    OPEN OUTPUT FILE
EEE710   BAL   R14,ENTRY600    READ THE VSAM FILE
         TM    FUNC,REBUILD    REBUILDING???
         BZ    FFF710          NO - BYPASS TTR CALC
         BAL   R14,ENTRY610    GET TTR
FFF710   LA    R7,1(R7)        BUMP RECORD COUNT
         TM    FUNC,REBUILD    REBUILDING????
         BZ    EXIT710         NO - BYPASS COUNTER
         AP    HLINES,=P'1'    ADD ONE
EXIT710  L     R14,SAVE710
         BR    R14
SAVE710  DC    F'0'
         EJECT
***********************************************************************
*        OPEN THE OUTPUT FILE AND GET DSN FOR JOURNAL UPDATE          *
*        ALSO DETERMINE IF DISK FOR TTR CALCULATION IF NEEDED         *
***********************************************************************
ENTRY750 DS    0H
         ST    R14,SAVE750
         OPEN  (OUTPUT,(OUTPUT))  OPEN THE OUTPUT FILES
         TM    OUTPUT+48,X'10' CHECK IF IT OPENED
         BZ    ABEND10         NO, OUTPUT FAILED TO OPEN
         LA    R8,OUTPUT       SET UP DCB ADDRESSABILITY
         RDJFCB OUTPUT         GET THE JFCB FOR 'OUTPUT'
         BAL   R14,ENTRY755    GET DSN AND DEVICE
EXIT750  L     R14,SAVE750
         BR    R14
SAVE750  DC    F'0'
         EJECT
***********************************************************************
*        GET DSN AND DEVICE TYPE FOR JOURNAL                          *
***********************************************************************
ENTRY755 DS    0H
         ST    R14,SAVE755
         LA    R4,JFCB          SET R4 TO JFCB
         LA    R4,43(R4)        SET TO END
         LA    R5,44            MAX DSN = 44
AAA755   CLC   0(2,R4),=C'.D'      DATE STAMP
         BE    BBB755           YES - DONE
         CLC   0(2,R4),=C'.G'      GENERATION NUMBER (OLD SYSTEM)
         BE    EEE755           YES - DONE
         CLC   0(8,R4),=C'.ACTIVE ' ACTIVE FILE (ONLY ON REBUILD)
         BE    FFF755           YES - DONE
         SH    R4,=H'1'         BACK UP ONE
         BCT   R5,AAA755        TRY AGAIN
         B     ABEND11          INVALID DSN
BBB755   MVC   HOLDSTP(7),2(R4)  MOVE IN DATE STAMP
         MVC   HOLDSTP+7(4),11(R4)  MOVE IN TIME STAMP
         B     GGG755           BRANCH
EEE755   MVC   HOLDSTP(5),=C'99999' SET UP HIGH
         MVC   HOLDSTP+5(4),2(R4) MOVE IN GDG
         MVC   HOLDSTP+9(2),7(R4) MOVE IN VERSION
         B     GGG755           BRANCH
FFF755   MVC   HOLDSTP(11),=C'99999999999' SET UP HIGH
GGG755   PACK  HSTAMP,HOLDSTP   PACK IT
         MVC   HADR,=C'A'        MOVE IN ACTIVE BY DEFAULT
         SH    R4,=H'5'         BACKUP 5 MORE
         CLC   0(5,R4),=C'DAILY'  IS IT DAILY FILE
         BE    HHH755            YES - SET NAME
         SH    R4,=H'2'         BACKUP 2 MORE
         CLC   0(7,R4),=C'ARCHIVE' IS IT ARCHIVE FILE
         BNE   III755            NO - MUST BE ACTIVE
         MVC   HADR,=C'R'        MOVE IN ARCHIVE LETTER
         B     III755            GO CHECK DEVICE
HHH755   MVC   HADR,=C'D'        MOVE IN DAILY LETTER
III755   TM    DCBTRBAL-1,X'20' DASD DEVICE CLASS?
         BZ    MMM755          NO, SKIP TTR PROCESSING
JJJ755   LA    R15,DEVT#       SET LOOP CONTROL
         LA    R14,DEVT        ADDRESS OF DEVICE TABLE
KKK755   CLC   0(1,R14),DCBTRBAL-1 CHECK DEVICE TYPE
         BE    LLL755          FOUND, CONTINUE
         LA    R14,8(R14)      NEXT ENTRY
         BCT   R15,KKK755      CHECK NEXT DEVICE ENTRY
         WTO   'SOUTWTR - UNSUPPORTED OUTPUT DISK DEVICE TYPE'
         B     ABEND12         ERROR RETURN
LLL755   MVC   HDEVT,0(R14)    STORE DEVICE TYPE
         LH    R14,2(R14)      GET NUMBER OF TRACKS/CYLINDER
         ST    R14,TRKSPER     SAVE FOR LATER USE
         B     EXIT755
MMM755   MVC   HDEVT,=C'T'     NOT DISK MUST BE TAPE
*
         L     R14,DCBDEBAD    GET DEB ADDR FOR THIS DCB
         L     R14,32(R14)     GET UCB ADDR FOR THIS DEB
         MVC   TYPEUCB,16(R14) DEVICE TYPE FROM UCB
*
         LA    R15,TAPETYP#    NUMBER OF ENTRIES IN TABLE
         LA    R14,TAPETYPE    ADDRESS OF TAPE TYPE TABLE
NNN755   CLC   0(4,R14),TYPEUCB CHECK DEVICE UCB
         BE    OOO755          MATCH
         LA    R14,20(R14)     BUMP TO NEXT
         BCT   R15,NNN755      TRY AGAIN
         WTO   'SOUTWTR - UNSUPPORTED OUTPUT TAPE DEVICE UCB'
         B     ABEND7          ERROR RETURN
OOO755   MVC   RPTLINE(29),RPTTUCB
         MVC   RPTLINE+20(12),8(R14)
         CLC   4(4,R14),=F'0'  3480 ?????
         BNE   RRR755          YES - MOVE BLOCK COUNT
*
         LA    R15,TAPEDEN#    SET LOOP CONTROL
         LA    R14,TAPEDEN ADDRESS OF TAPE TABLE
PPP755   CLC   0(1,R14),DCBDEN CHECK DEVICE DENSITY
         BE    QQQ755          MATCH
         LA    R14,16(R14)      BUMP TO NEXT
         BCT   R15,PPP755      TRY AGAIN
         WTO   'SOUTWTR - UNSUPPORTED OUTPUT TAPE DENSITY'
         B     ABEND13         ERROR RETURN
QQQ755   MVC   RPTLINE+24(8),8(R14)
RRR755   MVC   MAXBLOCK,4(R14) SAVE MAX BLOCKS TO WRITE
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT755            NO - BYPASS REPORTING
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT755  L     R14,SAVE755
         BR    R14
SAVE755  DC    F'0'
         EJECT
***********************************************************************
*        WRITE THE OUTPUT FILE AND OPTIONAL REPORTS                   *
***********************************************************************
ENTRY760 DS    0H
         ST    R14,SAVE760
         AP    HLINES,=P'1'    ADD ONE TO LINECOUNT
         CLC   RECSEP,SEPLIT   IS THIS A SEPARATOR RECORD
         BE    BBB760          NO, PASS IT ON
         TM    FIXVAR,FIXREC   IS IT FIXED RECORD
         BNZ   AAA760          YES - TRY TO COMPRESS IT
         MVC   OUTREC,RECORDV  MUST BE COMPRESSED ALREADY
         B     DDD760          WRITE IT
AAA760   ICM   R15,15,COMPADDR ADDRESS OF EXIT ROUTINE
         MVC   CPRTYPE,=X'FF000000' SET CODE TO COMPRESS
         MVC   INRECL,=H'133'  INLENGTH 133
         MVC   RECLEN,=H'133'  MAX OUT 133
         LA    R1,PARMCPR      ADDRESS OF COMP PARM
         BALR  R14,R15         GO TO COMPRESSION ROUTINE
         LTR   R15,R15         COMPRESS OK
         BZ    CCC760          GO WRITE IT
BBB760   EQU   *               WRITE OUT RECORD UN-COMPRESSED
         MVC   RECLEN,=H'137'  SET LEN TO 137
         MVC   RECOUT,RECORDF  MOVE IN FIXED RECORD
CCC760   MVC   RECTT,=H'0'     ZERO FIELD
DDD760   EQU   *
         TM    SPECPROC,DELIT  DELETING JOB FROM SYSTEM???
         BO    GGG760          YES - BYPASS WRITE TO OUTPUT
         PUT   OUTPUT,OUTREC   COPY TO OUTPUT FILE
         TM    MISC,RITETAPE   WRITING TO TAPE??
         BZ    GGG760          NO - BYPASS BLOCK CHECK
         LA    R8,OUTPUT       SET UP ADDRESSABILITY
         CLC   PREVBLCT,DCBBLKCT COMPARE PREVIOUS BLOCK COUNT
         BH    FFF760            HIGHER - MUST HAVE MOUNTED 2ND REEL
*                                SHOULD ONLY HAPPEN WILL SHORT REELS
*                                (APPROX 2000 FEET OR LESS)
         MVC   PREVBLCT,DCBBLKCT SAVE FOR NEXT COMPARE
EEE760   CLC   MAXBLOCK,DCBBLKCT MAX BLOCKS WRITTEN
         BH    GGG760
FFF760   OI    MISC,NEEDNEW    NEED NEW TAPE ON NEXT SEPERATOR
GGG760   TM    INPTYPE,ACTFILE IS THIS THE ACTIVE FILE
         BZ    EXIT760         NO - BYPASS EXIT
         BAL   R14,ENTRY770    PASS DATA THRU SOUTXIT
EXIT760  L     R14,SAVE760
         BR    R14
SAVE760  DC    F'0'
         EJECT
***********************************************************************
*        RUN ACTIVE FILE THRU SOUTXIT ROUTINE                         *
***********************************************************************
ENTRY770 DS    0H
         ST    R14,SAVE770
         ICM   R15,15,EXITADDR ADDRESS OF EXIT ROUTINE
         BZ    EXIT770         NO EXIT, BYPASS
*
*  FOLLOWING LOGIC SHOULD NEVER BE USED, UNLESS THE ACTIVE FILE
*  IS IN A COMPRESSED STATE. AS OF NOW, THE ACTIVE FILE IS NOT
*  COMPRESSED.
*
         TM    FIXVAR,FIXREC   FIXED LENGTH RECORD
         BNZ   AAA770          YES - BYPASS DECOMPRESSION
         MVC   RECLEN,=H'133' SET MAX EXPANSION LENGTH
         ICM   R15,15,COMPADDR ADDRESS OF EXIT ROUTINE
         MVC   CPRTYPE,=X'00000000' SET FOR DECOMPRESSION
         LA    R1,PARMCPR      ADDRESS OF COMP PARM
         BALR  R14,R15         GO TO COMPRESSION ROUTINE
         LTR   R15,R15         DE-COMPRESS OK
         BZ    AAA770          YES- TRY REPORT EXIT
         MVC   RECOUT,RECORDF  PASS COMPRESSED RECORD?
*
AAA770   ICM   R15,15,EXITADDR ADDRESS OF EXIT ROUTINE
         LA    R1,EXITPARM     ADDRESS OF EXIT PARM
         BALR  R14,R15         GO TO EXIT ROUTINE
EXIT770  L     R14,SAVE770
         BR    R14
SAVE770  DC    F'0'
         EJECT
***********************************************************************
*        CALL TO LOCINDEX ROUTINE TO LIST ALL DSNS WITH PREFIX        *
***********************************************************************
ENTRY800 DS    0H
         ST    R14,SAVE800
         ICM   R6,15,SAVEWORK      RESTORE WORK ADDRESS
         BNZ   AAA800              HAVE ALREADY - BR AROUND GETMAIN
         GETMAIN R,LV=4096
         LR    R6,R1               SAVE ADDR OF WORK AREA
         ST    R6,SAVEWORK         SAVE ADDR OF WORKAREA
         USING WORKSPC,R6          INFORM ASSEMBLER
AAA800   LA    R0,LOCINDXW         POINT TO LOCINDEX WORK AREA
         ST    R0,LOCIPARM+12      SAVE ADDR IN PARM LIST
         MVC   PASSDSN,BLANKS      CLEAR PASSING DSN
         MVC   LOCIPFX(25),PASSPFX MOVE IN PREFIX
         LA    R4,LOCIPFX          SET R4 TO ADDR OF PREFIX
         L     R5,PASSLEN          SET R5 TO LENGTH
         LA    R4,0(R5,R4)         BUMP R4 TO END OF PREFIX
         MVC   0(10,R4),PASSTYPE   ADD TYPE DAY/ARCHIVE
         MVI   LOCIPARM+12,X'80'   INDICATE END OF PARM LIST
BBB800   ICM   R15,15,LOCIADDR     POINT TO PARM LIST
         LA    R1,LOCIPARM         POINT TO PARM LIST
         BALR  R14,R15             GO TO LOCINDEX
         B     *+4(R15)            BRANCH , DEP ON RETURN CODE
         B     CCC800              HAVE A DASD DSN
         B     EXIT800             INDEX STRUCTURE NOT FOUND
         B     DDD800              DSN ON TAPE
         B     CCC800              MULTI VOLUME DSN
         B     EXIT800             DONE
         B     ABEND14             CATALOG ERROR
CCC800   EQU   *
         TM    LOOKFOR,ADISK       LOOKING FOR LAST DISK DSN?
         BZ    BBB800              NO - TRY FOR NEXT ONE
         B     EEE800              SAVE DSN AND TRY AGAIN
DDD800   EQU   *
         TM    LOOKFOR,ATAPE       LOOKING FOR LAST TAPE DSN?
         BZ    BBB800              NO - TRY FOR NEXT ONE
EEE800   MVC   PASSDSN,LOCIDSN     SAVE DSN TO PASS BACK
         TM    MISC,PASSLAST       PASSING JUST LAST ONE?
         BO    BBB800              YES-ARE THERE ANY MORE?
EXIT800  L     R14,SAVE800
         BR    R14
         DROP  R6
SAVE800  DC    F'0'
         EJECT
***********************************************************************
*        GET DISK WITH THE MOST SPACE                                 *
***********************************************************************
ENTRY830 DS    0H
         ST    R14,SAVE830
         LA    R1,WORKAREA    ADDRESS OF WORK AREA FOR UCB SCAN
         ST    R1,SPACPARM    PLACE INTO PARM LIST
         LA    R1,DEVCLASS    ADDRESS OF DEVICE CLASS (DASD)
         ST    R1,SPACPARM+4  PLACE INTO PARM LIST
         LA    R1,UCBADDR     ADDRESS OF RETURN FIELD
         ST    R1,SPACPARM+8  PLACE INTO PARM LIST
         OI    SPACPARM+8,128 SET HIGH ORDER BIT
*
*        SCAN EACH DASD UCB VIA IOSVSUCB
*
AAA830   DS    0H
         LA    R1,SPACPARM    PARAMETER LIST FOR IOSUCBSV
         L     R15,16         CVT LOCATION
         USING CVT,R15        INFORM THE ASSEMBLER
         L     R15,CVTUCBSC   UCB SERVICE ROUTINE ADDRESS
         DROP  R15            RELEASE R15 ADDRESSABILITY
         BALR  R14,R15        CALL UCB SERVICE ROUTINE
         LTR   R15,R15        ANY UCB PASSED?
         BNZ   FFF830         NO, ALL DONE
*
*        CHECK EACH DASD DEVICE FOR MOUNTED/ONLINE
*
         L     R4,UCBADDR     GET UCB ADDRESS
         TM    3(R4),X'80'    IS DEVICE ONLINE
         BZ    AAA830         NO, IGNORE IT
         TM    3(R4),X'50'    PENDING OFFLINE/UNLOAD
         BNZ   AAA830         YES, IGNORE IT
         TM    35(R4),X'80'   MOUNT PENDING
         BNZ   AAA830         YES, IGNORE IT
         CLI   28(R4),X'00'   ANY VOLUME INFORMATION?
         BE    AAA830         NO, VOLUME NOT VERIFIED YET
*
*        CHECK IF DASD DEVICE IS ONE REQUESTED
*
         LA    R2,DISKTBL     SET R2 TO REQUESTED DISKS
         LA    R3,3           MAX  3 REQUESTED
BBB830   CLC   28(6,R4),0(R2) IS THIS A REQUESTED VOLUME
         BE    EEE830         YES - CHECK DEVICE
*        BE    CCC830         YES - CHECK DEVICE
         LA    R2,14(R2)      BUMP TO NEXT
         BCT   R3,BBB830      TRY NEXT
         B     AAA830         GET NEXT UCB
EEE830   LR    R0,R4          LOAD ADDR OF UCB INTO REG 0
         LA    R1,MSGAREA     LOAD PNTR TO MSGAREA INTO REG 1
         SVC   78             GET DATA FOR THIS DASD
         LTR   R15,R15        LSPACE DATA RETURNED?
         BNZ   AAA830         NO, IGNORE THIS DEVICE
         MVC   8(4,R2),FREECYL MOVE IN CYLS
         B     AAA830         CHECK NEXT DEVICE
FFF830   LA    R3,DISKTBL     SET R3 TO BEGINING OF TABLE
         MVC   ALLOCVOL,0(R3) DEFAULT OF FIRST VOLUME
         MVC   ALLOCVLN,12(R3) FIRST VOLUME LENGTH
         MVC   HOLDCYL,8(R3)  SAVE OPEN CYLINDERS
         LA    R3,14(R3)      BUMP TO NEXT ENTRY
         CLC   HOLDCYL,8(R3)  DOES THIS ENTRY HAVE MORE SPACE
         BNL   GGG830         NO - TRY THIRD
         MVC   ALLOCVOL,0(R3) MOVE IN THIS VOLUME
         MVC   ALLOCVLN,12(R3) SECOND VOLUME LENGTH
         MVC   HOLDCYL,8(R3)  SAVE OPEN CYLINDERS
GGG830   LA    R3,14(R3)      BUMP TO NEXT ENTRY
         CLC   HOLDCYL,8(R3)  DOES THIS ENTRY HAVE MORE SPACE
         BNL   HHH830         NO - HAVE PACK WITH MOST
         MVC   ALLOCVOL,0(R3) MOVE IN THIRD VOLUME
         MVC   ALLOCVLN,12(R3) THIRD VOLUME LENGTH
         MVC   HOLDCYL,8(R3)  SAVE OPEN CYLINDERS
HHH830   CLC   HOLDCYL,BLANKS  ARE THERE ANY CYLINDERS
         BE    ABEND16        NO - ERROR
EXIT830  L     R14,SAVE830
         BR    R14
SAVE830  DC    F'0'
         EJECT
***********************************************************************
*        GET DATE AND TIME                                            *
***********************************************************************
ENTRY850 DS    0H
         ST    R14,SAVE850
         $STCK NOGEN
         MVC   PASSDSN,PREFIX1    MOVE IN DSN
         LA    R4,PASSDSN         SET R4 TO BEGINNING
         L     R5,PREFIX1L        SET R5 TO LENGTH
         LA    R4,0(R5,R4)        SET R4 TO END
         MVC   0(10,R4),NEWTYPE   MOVE IN TYPE (DAILY OR ARCHIVE)
AAA850   CLI   0(R4),C' '         IS IT BLANK
         BE    BBB850             NOW HAVE LENGTH
         LA    R4,1(R4)           BUMP UP ONE
         AH    R5,=H'1'           BUMP LENGTH COUNTER
         B     AAA850             TRY AGAIN
BBB850   MVC   0(2,R4),=C'.D'     MOVE IN CONSTANT
         MVC   2(1,R4),YEARDATE   MOVE IN FIRST CHAR OF YEAR
         MVC   3(2,R4),YEARDATE+2 MOVE IN YEAR
         MVC   5(2,R4),DATE       MOVE IN MONTH
         MVC   7(2,R4),DATE+3     MOVE IN DAY
         MVC   9(2,R4),=C'.T'     MOVE IN CONSTANT
         MVC   11(2,R4),TIME      MOVE IN HOUR
         MVC   13(2,R4),TIME+3    MOVE IN MINUTE
         AH    R5,=H'15'          ADD 15 TO LENGTH
EXIT850  L     R14,SAVE850
         BR    R14
SAVE850  DC    F'0'
         EJECT
***********************************************************************
*        GET BACKUP DATE FOR DAILY TO ARCHIVE                         *
***********************************************************************
ENTRY860 DS    0H
         ST    R14,SAVE860
         LA    R1,DATEPARM        SOUTDATE PARAMETER LIST
         ICM   R15,15,DATEADDR    ADDRESS OF THE DATE EXIT
         BALR  R14,R15            CALL THE DATE SUBROUTINE
         LTR   R15,R15            SOUTDATE RETCODE OK?
         BNZ   ABEND17            NO - ABEND IT
         MVC   COMPARED(1),=C'D'  MOVE IN CONSTANT DAY
         MVC   COMPARED+1(1),LASTDAYO+6 MOVE IN 1 CHAR OF YEAR
         MVC   COMPARED+2(2),LASTDAYO+8 MOVE IN YEAR
         MVC   COMPARED+4(2),LASTDAYO   MOVE IN MONTH
         MVC   COMPARED+6(2),LASTDAYO+3 MOVE IN DAY
EXIT860  L     R14,SAVE860
         BR    R14
SAVE860  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE THE ACTIVE SYSOUT FILES                             *
***********************************************************************
ENTRY900 DS    0H
         ST    R14,SAVE900
         MVC   ACTDSN(21),PREFIX1 MOVE IN PREFIX
         LA    R4,ACTDSN          SET R4 TO BEGINNING
         L     R5,PREFIX1L        SET R5 TO PREFIX LENGTH
         LA    R4,0(R5,R4)        SET R4 TO END OF PREFIX
         MVC   0(7,R4),=C'.ACTIVE' MOVE IN ACTIVE
         AH    R5,=H'7'           BUMP LENGTH
         STH   R5,ACTDSNL         STORE IN LENGTH
         LA    R1,ACTSVC99        GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE ACTIVE SOUT FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND18            NO - ERROR
         LA    R8,INPUT           SET UP ADDRESABILITY
         MVC   DCBDDNAM,ACTDDN    MOVE IN DDNAME
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT900            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTACT REPORT TYPE
         MVC   RPTLINE+29(44),ACTDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT900  L     R14,SAVE900
         BR    R14
SAVE900  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE AND OPEN THE VSAM JOURNAL FILE
***********************************************************************
ENTRY910 DS    0H
         ST    R14,SAVE910
         MVC   JRNDSN(21),PREFIX1 MOVE IN PREFIX
         LA    R4,JRNDSN          SET R4 TO BEGINNING
         L     R5,PREFIX1L        SET R5 TO PREFIX LENGTH
         LA    R4,0(R5,R4)        SET R4 TO END OF PREFIX
         MVC   0(8,R4),=C'.JOURNAL' MOVE IN JOURNAL
         AH    R5,=H'8'           BUMP LENGTH
         STH   R5,JRNDSNL         STORE IN LENGTH
         TM    FUNC,REBUILD+FIXTAPE IN REBUILD OR FIX TAPE
         BZ    AAA910             NO - BR AROUND
*        MVI   JRNSTAT,X'01'      SET TO OLD (NOT NEEDED 01/24/85)
AAA910   LA    R1,DAJOURN         GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE JOURNAL FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND19            NO - ERROR
         USING IFGACB,R15      INFORM ASSEMBLER
         LA    R15,JOURNACB        SET UP ADDRESSING
         MVC   ACBDDNM,JRNDDN     MOVE DDNAME
         DROP  R15
         OPEN  (JOURNACB)         OPEN THE JOURNAL ACB
         LTR   R15,R15            DID IT OPEN?
         BNZ   ABEND20            INDICATE OPEN FAILURE
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT900            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTJRNL REPORT TYPE
         MVC   RPTLINE+29(44),JRNDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT910  L     R14,SAVE910
         BR    R14
SAVE910  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE THE NEW DAILY/ARCHIVE TAPE                          *
***********************************************************************
ENTRY920 DS    0H
         ST    R14,SAVE920
         BAL   R14,ENTRY850       GET NEW DATASET NAME AND LENGTH
         MVC   TAPEDSN,PASSDSN    MOVE IN DSN
         STH   R5,TAPEDSNL        STORE IN LENGTH
         MVI   TAPESTAT,X'04'     NEW
         MVI   TAPEDISP,X'02'     CATLG
         MVI   TAPECOND,X'02'     CATLG
         MVC   TAPEUNIT,TAPENAME  MOVE IN UNIT NAME
         MVC   TAPELEN,TAPENML    MOVE IN LENGTH
         MVI   TAPEMOD,X'00'      RESET END OF LIST FOR NEW TAPE
         LA    R1,TAPE99          GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE SOUT TAPE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND21            NO - ERROR
         LA    R8,OUTPUT          SET UP ADDRESABILITY
         MVC   DCBDDNAM,TAPEDDN   MOVE IN DDNAME
         NI    MISC,255-NEEDNEW   CLEAR NEW TAPE SWITCH
         MVC   PREVBLCT,=F'0'     INIT PREVIOUS BLKCOUNT
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT920            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTNTP REPORT TYPE
         MVC   RPTLINE+29(44),TAPEDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT920  L     R14,SAVE920
         BR    R14
SAVE920  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE THE EXISTING DAILY/ARCHIVE TAPE                     *
***********************************************************************
ENTRY925 DS    0H
         ST    R14,SAVE925
         BAL   R14,ENTRY950       GET LENGTH OF DSN
         MVC   TAPEDSN,PASSDSN    MOVE IN DSN
         STH   R5,TAPEDSNL        STORE IN LENGTH
         MVI   TAPESTAT,X'02'     MOD
         MVI   TAPEDISP,X'02'     CATLG
         MVI   TAPECOND,X'02'     CATLG
         MVI   TAPEMOD,X'80'      END OF SVC99 LIST
         LA    R1,TAPE99          GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE ACTIVE SOUT FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND22            NO - ERROR
         LA    R8,OUTPUT          SET UP ADDRESABILITY
         MVC   DCBDDNAM,TAPEDDN   MOVE IN DDNAME
         NI    MISC,255-NEEDNEW   CLEAR NEW TAPE SWITCH
         MVC   PREVBLCT,=F'0'     INIT PREVIOUS BLKCOUNT
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT925            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTMTP REPORT TYPE
         MVC   RPTLINE+29(44),TAPEDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT925  L     R14,SAVE925
         BR    R14
SAVE925  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE THE EXISTING DAILY DATASET FOR COPY TO ARCHIVE      *
***********************************************************************
ENTRY930 DS    0H
         ST    R14,SAVE930
         MVC   DALYDSN,PASSDSN    MOVE IN DSN
         BAL   R14,ENTRY950       GET DATASET LENGTH
         STH   R5,DALYDSNL        STORE IN LENGTH
         MVI   DALYOLD,X'80'      END OF PARM
         MVI   DALYSTAT,X'01'     OLD
         TM    FUNC,REBUILD       REBUILDING
         BO    AAA930              YES - SET KEEP
         MVI   DALYDISP,X'04'     DELETE
         B     BBB930
AAA930   MVI   DALYDISP,X'08'     KEEP
BBB930   MVI   DALYCOND,X'08'     KEEP
         LA    R1,DALY99          GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE ACTIVE SOUT FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND23            NO - ERROR
         LA    R8,INPUT           SET UP ADDRESABILITY
         MVC   DCBDDNAM,DALYDDN   MOVE IN DDNAME
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT930            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTIDS REPORT TYPE
         MVC   RPTLINE+29(44),DALYDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT930  L     R14,SAVE930
         BR    R14
SAVE930  DC    F'0'
         EJECT
***********************************************************************
*        ALLOCATE A NEW DAILY DATASET ON DISK
***********************************************************************
ENTRY940 DS    0H
         ST    R14,SAVE940
         MVC   NEWTYPE,DAYLE      SET TYPE AS DAILY
         BAL   R14,ENTRY850       GET NEW DSN
         MVC   DALYDSN,PASSDSN    MOVE IN DSN
         STH   R5,DALYDSNL        STORE IN LENGTH
         MVI   DALYOLD,X'00'      RESET END OF PARM
         MVI   DALYSTAT,X'04'     NEW
         MVI   DALYDISP,X'02'     CATLG
         MVI   DALYCOND,X'04'     DELETE
         MVC   DALYUNIT,DISKNAME  MOVE IN DISKNAME
         MVC   DALYULEN,DISKNML   MOVE IN DISKNAME LENGTH
         L     R3,ALLOCYL         SET R3 TO NUM OF CYL NEEDED
         L     R4,ALLOBLKS        SET R4 TO BLKS/CYL
         SR    R2,R2              CLEAR FOR MULTIPLY
         MR    R2,R4              MULT CYLS BY BLKS/CYL
         ST    R3,ALLOBLKS        STORE IT
         MVC   DALYX8#,ALLOBLKS+1 MOVE IN ALLOCATION QTY
         TM    COPYTO,DDSPEC      SPECIFIED A VOLUME
         BZ    CCC940             NO - GO SET END OF PARM
         MVI   DALYNOVL,X'00'     VOLUME SPECIFIED
         CLC   DISKNAME,=CL8'3330V' IS IT MASS STORAGE
         BE    AAA940
*******************************************************************
*  SPECIFY A VOLSER FOR DASD ALLOCATION
*******************************************************************
         BAL   R14,ENTRY830       GET SPECIFIED VOL WITH MOST SPACE
         MVC   DALYXVOL,ALLOCVOL  MOVE IN VOLUME WITH MOST SPACE
         MVC   DALYXVLN,ALLOCVLN  MOVE IN VOLUME LENGTH
         B     DDD940
*******************************************************************
*  CHANGE VOLSER ALLOCATION TO MASS STORAGE "GROUP"   UNTESTED    *
*******************************************************************
AAA940   MVC   DALYXVOL,DISKTBL   MOVE IN FIRST VIRTUAL VOLUME
         MVC   DALYXVLN,DISKTBL+12 MOVE IN VIRTUAL VOLUME LENGTH
         MVC   DALYX13(2),=X'005E' CHANGE VOLUME TO MSVGP (MSS)
         B     DDD940
CCC940   MVI   DALYNOVL,X'80'     NO VOLUME SPECIFIED
DDD940   LA    R1,DALY99          GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE ACTIVE SOUT FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   ABEND25            NO - ERROR
         LA    R8,OUTPUT          SET UP ADDRESABILITY
         MVC   DCBDDNAM,DALYDDN   MOVE IN DDNAME
         NI    MISC,255-NEEDNEW   CLEAR NEW TAPE SWITCH (N/A)
         TM    FUNC,RPTALLO       REPORT WANTED
         BZ    EXIT940            NO - BYPASS REPORTING
         MVC   RPTLINE(29),RPTODS REPORT TYPE
         MVC   RPTLINE+29(44),DALYDSN MOVE IN DSN
         BAL   R14,ENTRY960        PUT OUT REPORT LINE
EXIT940  L     R14,SAVE940
         BR    R14
SAVE940  DC    F'0'
         EJECT
***********************************************************************
*        CALCULATE LENGTH OF PASSED DSN (WILL BE IN R5)
***********************************************************************
ENTRY950 DS    0H
         ST    R14,SAVE950
         LA    R4,PASSDSN         SET R4 TO BEGINNING
         LA    R4,43(R4)          SET R4 TO END
         LA    R5,44              SET R5 TO MAX LENGTH
AAA950   CLI   0(R4),C' '         IS IT BLANK
         BNE   EXIT950            NO  HAVE LENGTH
         SH    R4,=H'1'           BACK UP 1
         BCT   R5,AAA950          TRY AGAIN
EXIT950  L     R14,SAVE950
         BR    R14
SAVE950  DC    F'0'
         EJECT
***********************************************************************
*        PRINT THE ALLOCATION REPORT (ALSO SYNC AND DELETE REPORTS)
***********************************************************************
ENTRY960 DS    0H
         ST    R14,SAVE960
         PUT   ALLOCRPT,RPTLINE    PUT OUT THE LINE
         MVC   RPTLINE,BLANKS      CLEAR LINE
EXIT960  L     R14,SAVE960
         BR    R14
SAVE960  DC    F'0'
         EJECT
***********************************************************************
*        CLOSE THE INPUT FILE
***********************************************************************
ENTRY980 DS    0H
         ST    R14,SAVE980
         CLOSE (INPUT)         CLOSE THE INPUT FILE
EXIT980  L     R14,SAVE980
         BR    R14
SAVE980  DC    F'0'
         EJECT
***********************************************************************
*        CLOSE THE OUTPUT FILE
***********************************************************************
ENTRY985 DS    0H
         ST    R14,SAVE985
         CLOSE OUTPUT           CLOSE THE OUTPUT FILES
EXIT985  L     R14,SAVE985
         BR    R14
SAVE985  DC    F'0'
         EJECT
***********************************************************************
*        CLOSE THE VSAM JOURNAL
***********************************************************************
ENTRY990 DS    0H
         ST    R14,SAVE990
         CLOSE JOURNACB         CLOSE THE JOURNAL VSAM
EXIT990  L     R14,SAVE990
         BR    R14
SAVE990  DC    F'0'
         EJECT
***********************************************************************
*        CLEAR THE ACTIVE FILE
***********************************************************************
ENTRY995 DS    0H
         ST    R14,SAVE995
         OPEN  (FORMDCB,(OUTPUT)) OPEN INPUT FILE TO FORMAT
AAA995   PUT   FORMDCB,FORMREC    WRITE FORMAT RECORD
         BCT   R7,AAA995       WRITE NEXT RECORD
         CLOSE (FORMDCB)          CLOSE FILE
EXIT995  L     R14,SAVE995
         BR    R14
SAVE995  DC    F'0'
         EJECT
***********************************************************************
*        END OF PROGRAM AND ABEND CODES
***********************************************************************
EXIT0    EQU   *
         TM    FUNC,RPTALLO    WRITING ALLOCATION REPORT
         BZ    EXIT1           NO BYPASS CLOSE
         CLOSE ALLOCRPT        CLOSE REPORT
EXIT1    ICM   R1,15,SAVEWORK  LOCATE WORK AREA
         BZ    EXIT2           NON - GET OUT
         FREEMAIN R,LV=4096,A=(1)
EXIT2    ICM   R1,15,SAVESPEC  SPECIAL DELETE AREA
         BZ    EXIT3           NON - GET OUT
         FREEMAIN R,LV=2000,A=(1)
EXIT3    SR    R15,R15         CLEAR RETCODE
         $EPILOG ,             RETURN TO CALLER
         SPACE 3
ABEND1   WTO   'SOUTWTR - INVALID CONTROL PARM PASSED'
         ABEND 1
ABEND2   WTO   'SOUTWTR - EXIT MISSING (SOUTDATE/SOUTCPR/LOCINDEX)'
         ABEND 2
ABEND3   WTO   'SOUTWTR - NO PREFIX DD CARD SUPPLIED'
         ABEND 3
ABEND4   WTO   'SOUTWTR - NO //INPUT DD FOR "FIXTAPE" OPTION'
         ABEND 4
ABEND5   WTO   'SOUTWTR - ALLOCATION REPORT OPEN ERROR'
         ABEND 5
ABEND6   WTO   'SOUTWTR - ACTIVE FILE ON NON-SUPPORTED DISK DEVICE - UP+
               DATE "DEVT" TABLE'
         ABEND 6
ABEND7   WTO   'SOUTWTR - TAPE UCB TYPE NOT IN THE "TAPETYPE" TABLE'
         ABEND 7
ABEND8   WTO   'SOUTWTR - VSAM JOURNAL UPDATE ERROR'
         ABEND 8
ABEND9   WTO   'SOUTWTR - INPUT DATASET (ACT/DAY) OPEN ERROR'
         ABEND 9
ABEND10  WTO   'SOUTWTR - OUTPUT DATASET (DAILY/ARCH.) OPEN ERROR'
         ABEND 10
ABEND11  WTO   'SOUTWTR - INVALID DSN FOR COPY - NOT DATE STAMPED, GDG,+
                OR ACTIVE'
         ABEND 11
ABEND12  WTO   'SOUTWTR - UNSUPPORTED OUTPUT DISK DEVICE TYPE - UPDATE +
                "DEVT" TABLE'
         ABEND 12
ABEND13  WTO   'SOUTWTR - TAPE DENSITY NOT IN THE "TAPEDEN" TABLE'
         ABEND 13
ABEND14  WTO   'SOUTWTR - LISTSPC CATALOG ERROR'
         ABEND 14
ABEND15  WTO   'SOUTWTR - UNSUPPORTED DEVICE TYPE'
         ABEND 15
ABEND16  WTO   'SOUTWTR - NO SPACE ON SPECIFIED PACKS FOR COPY'
         ABEND 16
ABEND17  WTO   'SOUTWTR - CANNOT CREATE BACKUP DATE'
         ABEND 17
ABEND18  WTO   'SOUTWTR - ACTIVE FILE ALLOCATION ERROR'
         ABEND 18
ABEND19  WTO   'SOUTWTR - VSAM JOURNAL ALLOCATION ERROR'
         ABEND 19
ABEND20  WTO   'SOUTWTR - VSAM JOURNAL OPEN ERROR'
         ABEND 20
ABEND21  WTO   'SOUTWTR - NEW TAPE ALLOCATION ERROR'
         ABEND 21
ABEND22  WTO   'SOUTWTR - MOD TO EXISTING TAPE; ALLOCATION ERROR'
         ABEND 22
ABEND23  WTO   'SOUTWTR - OLD DAILY/ARCH. DATASET ALLOCATION ERROR'
         ABEND 23
ABEND24  WTO   'SOUTWTR - INVALID ROUTINE ENTERED'
         ABEND 24
ABEND25  WTO   'SOUTWTR - NEW DAILY DISK DATASET ALLOCATION ERROR'
         ABEND 25
ABEND26  WTO   'SOUTWTR - SPECIAL DELETE DSN OPEN ERROR'
         ABEND 26
ABEND27  WTO   'SOUTWTR - SPECIAL DELETE GETMAIN MUST BE EXPANDED'
         ABEND 27
ABEND28  WTO   'SOUTWTR - SPECIAL DELETE JOURNAL RECORD FAILED'
         ABEND 28
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS                                     *
*                                                                     *
***********************************************************************
         LTORG
         EJECT
***********************************************************************
*        DYNAMIC ALLOCATION FOR THE ACTIVE FILE                       *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
ACTSVC99 DC    X'80',AL3(ACTB)    ADDRESS OF DYNALLOC BLOCK
ACTB     DC    AL1(20),AL1(1),X'0000' ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(ACTC)            START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
ACTFLGS  DC    X'D0000000'        WAIT FOR DSN (NEED OLD)
ACTC     DC    A(ACTX1,ACTX2,ACTX3)
ACTFREE  DC    A(ACTX4),AL1(128),AL3(ACTX5)
ACTX1    DC    X'0002',AL2(1)                   DSNAME UNIT
ACTDSNL  DC    AL2(0)                           DSNAME LENGTH
ACTDSN   DC    CL44' '                          DSNAME
ACTX2    DC    X'0055',AL2(1),AL2(8)            DDNAME RETURN UNIT
ACTDDN   DC    CL8' '                           DDNAME RETURNED
ACTX3    DC    X'0004',AL2(1),AL2(1)            STATUS UNIT
ACTSTAT  DC    X'01'                            STATUS UNIT=OLD
ACTX4    DC    X'0005',AL2(1),AL2(1)            DISP UNIT
ACTDISP  DC    X'08'                            DISP UNIT=KEEP
ACTX5    DC    X'001C',AL2(0)                   FREE=CLOSE
         EJECT
***********************************************************************
*        DYNAMIC ALLOCATION FOR THE ANY TAPE INPUT OR OUTPUT FILE     *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
TAPE99   DC    X'80',AL3(TAPEB)   ADDRESS OF DYNALLOC BLOCK
TAPEB    DC    AL1(20),AL1(1),X'0000' ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(TAPEC)           START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
TAPEFLGS DC    X'D0000000'        FLAGS (MODIFIED FOR TAPE)
TAPEC    DC    A(TAPEX1,TAPEX2,TAPEX3)
         DC    A(TAPEX4,TAPEX5,TAPEX6)
*        DC    A(TAPEXPDT)
TAPEMOD  DC    X'80',AL3(TAPEX7)
         DC    X'80',AL3(TAPEX8)
TAPEX1   DC    X'0002',AL2(1)                   DSNAME UNIT
TAPEDSNL DC    AL2(0)                           DSNAME LENGTH
TAPEDSN  DC    CL44' '                          DSNAME
TAPEX2   DC    X'0055',AL2(1),AL2(8)            DDNAME RETURN UNIT
TAPEDDN  DC    CL8' '                           DDNAME RETURNED
TAPEX3   DC    X'0004',AL2(1),AL2(1)            STATUS UNIT
TAPESTAT DC    X'02'                            STATUS UNIT=MOD
TAPEX4   DC    X'0005',AL2(1),AL2(1)            DISP UNIT
TAPEDISP DC    X'02'                            DISP UNIT=CATALOG
TAPEX5   DC    X'0006',AL2(1),AL2(1)            DISP UNIT
TAPECOND DC    X'02'                            COND UNIT=CATLG
TAPEX6   DC    X'001C',AL2(0)                   FREE=CLOSE
TAPEX7   DC    X'0030',AL2(1),AL2(2)            ALLOC TAPE
TAPEBSIZ DC    XL2'7FE7'                        32743 MAX BLKSIZE
* TAPEXPDT DC    X'0022',AL2(1),AL2(5),CL5'99000' EXPDT=99000
TAPEX8   DC    X'0015',AL2(1)                   ALLOC TAPE
TAPELEN  DC    AL2(4)                           LENGTH OF TAPE UNIT
TAPEUNIT DC    CL8'TAPE'                        ESSOTERIC NAME TAPE
         EJECT
***********************************************************************
*        DYNAMIC ALLOCATION FOR THE ANY DAILY INPUT OR OUTPUT FILE    *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
DALY99   DC    X'80',AL3(DALYB)   ADDRESS OF DYNALLOC BLOCK
DALYB    DC    AL1(20)            LENGTH
DALYB1   DC    X'01',X'0000'      ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(DALYC)           START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
DALYFLGS DC    X'D0000000'        FLAGS (WAIT FOR DSNS)
         DS    0H
DALYC    DC    A(DALYX1,DALYX2,DALYX3,DALYX4,DALYX5)
DALYOLD  DC    X'80',AL3(DALYX6)
         DC    A(DALYX7,DALYX8,DALYX9,DALYX10,DALYX11)
DALYNOVL DC    X'80',AL3(DALYX12)
         DC    X'80',AL3(DALYX13)
DALYX1   DC    X'0055',AL2(1)                   DDNAME RETURN UNIT
DALYDDNL DC    AL2(8)                           DDNAME LENGTH
DALYDDN  DC    CL8' '                           DDNAME RETURNED
DALYX2   DC    X'0002',AL2(1)                   DSNAME UNIT
DALYDSNL DC    AL2(0)                           DSNAME LENGTH
DALYDSN  DC    CL44' '                          DSNAME
DALYX3   DC    X'0004',AL2(1),AL2(1)            STATUS UNIT
DALYSTAT DC    X'01'                            STATUS UNIT=OLD
DALYX4   DC    X'0005',AL2(1),AL2(1)            DISP UNIT
DALYDISP DC    X'04'                            DISP UNIT=DELETE
DALYX5   DC    X'0006',AL2(1),AL2(1)            DISP UNIT
DALYCOND DC    X'08'                            COND UNIT=KEEP
DALYX6   DC    X'001C',AL2(0)                   FREE=CLOSE
DALYX7   DC    X'0009',AL2(1),AL2(3),AL3(6169)  BLK ALLOCATION
DALYX8   DC    X'000A',AL2(1),AL2(3)            PRIMARY QTY
DALYX8#  DC    X'000000'                        # OF BLKS
DALYX9   DC    X'000F',AL2(0)                   ROUND
DALYX10  DC    X'000D',AL2(0)                   RLSE ON CLOSE
DALYX11  DC    X'0015',AL2(1)                   DISK UNIT ALLOCATION
DALYULEN DC    AL2(0)                           UNIT NAME LENGTH
DALYUNIT DC    CL8' '                           UNIT NAME
DALYX12  DC    X'0030',AL2(1),AL2(2),AL2(6169)  BLKSIZE - 6169
DALYX13  DC    X'0010',AL2(1)                   ALLOCATE VOLUME
DALYXVLN DC    AL2(0)                           VOLUME LENGTH
DALYXVOL DC    CL8' '                           VOLUME
         EJECT
***********************************************************************
*        DYNAMIC ALLOCATION FOR THE VSAM JOURNAL FILE                 *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
DAJOURN  DC    X'80',AL3(JRNB)    ADDRESS OF DYNALLOC BLOCK
JRNB     DC    AL1(20),AL1(1),X'0000' ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(JRNC)            START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
         DC    X'00000000'        FLAGS (MODIFIED FOR TAPE)
JRNC     DC    A(JRNX1,JRNX2,JRNX3,JRNX4,JRNX5),AL1(128),AL3(JRNX6)
JRNX1    DC    X'0002',AL2(1)                   DSNAME UNIT
JRNDSNL  DC    AL2(0)                           DSNAME LENGTH
JRNDSN   DC    CL44' '                          DSNAME
JRNX2    DC    X'0055',AL2(1),AL2(8)            DDNAME RETURN UNIT
JRNDDN   DC    CL8' '                           DDNAME RETURNED
JRNX3    DC    X'0004',AL2(1),AL2(1)            STATUS UNIT
JRNSTAT  DC    X'08'                            STATUS UNIT=SHR
JRNX4    DC    X'0005',AL2(1),AL2(1),X'08'      DISP UNIT (KEEP)
JRNX5    DC    X'001C',AL2(0)                   FREE=CLOSE
JRNX6    DC    X'003C',AL2(1),AL2(2),X'0008'    DSORG=VSAM
         EJECT
***********************************************************************
*        PROGRAM CONSTANTS FOLLOW                                     *
***********************************************************************
*
WHERETO  DC    X'00'           EOF PROCESSING
TOYYY040 EQU   X'01'
TOFFF040 EQU   X'02'
TOBBB050 EQU   X'04'
TOEEE050 EQU   X'08'
TOHHH050 EQU   X'10'
TOKKK050 EQU   X'20'
TOGGG060 EQU   X'80'
*
INPTYPE  DC    X'00'           INPUT TYPE - CHECKED FOR SOUTXIT
ACTFILE  EQU   X'01'
DAYFILE  EQU   X'02'
INPFILE  EQU   X'04'
*
FUNC     DC    X'00'           WHAT FUNCTION
COPYING  EQU   X'01'
FIXTAPE  EQU   X'02'
REBUILD  EQU   X'04'
FORMAT   EQU   X'08'
TAPEINP  EQU   X'10'           HAVE TAPE INPUT DD CARD
RPTALLO  EQU   X'20'           REPORT ON ALLOCATION
SPECDEL  EQU   X'40'           DELETE SPECIAL REPORTS
*
LOOKFOR  DC    X'00'           LOCATE INDEX LOOKING FOR:
ATAPE    EQU   X'01'           A TAPE ONLY
ADISK    EQU   X'02'           A DISK ONLY
BOTH     EQU   X'03'           A TAPE OR DISK
*
MISC     DC    X'00'           MISC SWITCHES
RITETAPE EQU   X'01'           WRITING OUTPUT TO TAPE
PASSLAST EQU   X'02'           GET LAST DSN WITH QUALIFIER
FRSTIME  EQU   X'04'           FIRST TIME SW FOR UPDATE JOURNAL
NEEDNEW  EQU   X'08'           NEED NEW TAPE ALLOCATED?
ARCHALLO EQU   X'10'           ANY DAILY TO ARCHIVE????
*
COPYTO   DC    X'00'           COPYING TO WHAT DEVICE????
FIXDAY   EQU   X'01'           FIXING TAPE - MOD/CREATE DAILY
FIXARCH  EQU   X'02'           FIXING TAPE - MOD/CREATE ARCHIVE
DT       EQU   X'10'           COPY DAILY TO TAPE
DDANY    EQU   X'20'           COPY DAILY TO ANY DISK
DDSPEC   EQU   X'40'           COPY DAILY TO SPECIFIED DISK
*
FIXVAR   DC    X'00'          FIXED OR VARIABLE INPUT RECORDS
FIXREC   EQU   X'01'
VARREC   EQU   X'02'
*
SPECPROC DC    X'00'          SPECIAL DELETE JOB PROCESSING
DELIT    EQU   X'01'
NOTHERE  EQU   X'02'
*
RBLDSW   DC    X'00'         REBUILD WHICH DATASETS
*
EXITADDR DC    F'0'            EXIT ROUTINE ADDRESS
*
EXITPARM DS    0F              EXIT ROUTINE PARM FOLLOWS
EXITSW   DC    X'24'
SEP      EQU   X'01'
REC      EQU   X'02'
EOF      EQU   X'08'
EXITREC  DC    AL3(0)          ADDRESS OF THE CURRENT INPUT RECORD
         DC    F'0'            USER FIELD (INITIALLY ZERO)
         DC    A(INPUT)        ADDRESS OF INPUT DCB
         DC    A(OUTPUT)       ADDRESS OF OUTPUT DCB
***********************************************************************
*        DEVICE TYPE TABLE - TRACKS/CYLINDER
***********************************************************************
         DS    0F
DEVT     DC    XL1'2E',XL1'00',H'15',F'105' 3380
         DC    XL1'2C',XL1'00',H'12',F'60'  3375
         DC    XL1'2B',XL1'00',H'30',F'90'  3350
         DC    XL1'2A',XL1'00',H'12',F'12'  3340
         DC    XL1'29',XL1'00',H'19',F'38'  3330
         DC    XL1'2D',XL1'00',H'19',F'38'  3330-1
         DC    XL1'FF',XL1'00',H'00',F'00'
DEVT#    EQU   (*-DEVT)/8
         EJECT
***********************************************************************
*        DRIVE    BPI     MAX 32K BLOCKS   SAVEWTR BLOCKS    %FREE
*        3420    1600       ????             1000             ??%
*        3420    6250       5171             4200             19%
*        3480    ????       6359             5400             15%
*
*  NOTE: THIS PROGRAMS LOGIC CHECKS THE BLOCK COUNT ON THE TAPE
*        EACH TIME A RECORD IS WRITTEN. IF THE MAX BLOCK COUNT
*        IS REACHED, IT WILL FINISH WRITTING THAT REPORT TO THE
*        TAPE AND THEN CLOSE IT AND ALLOCATE A NEW TAPE; THUS
*        PREVENTING MULTI-REEL TAPE DATASETS.
*        FREE SPACE IS LEFT ON EACH TAPE TO ALLOW FOR COMPLETING
*        A REPORT TRANSFER. IF, BY CHANCE, A EXTRA-LARGE REPORT
*        IS BEING TRANSFERED WHEN THE MAX BLOCK COUNT IS REACHED,
*        THERE SHOULD BE ENOUGH FREE SPACE CALCULATED HERE TO
*        COMPLETE THE TRANSFER.
*
***********************************************************************
*        TAPE TYPE TABLE - MAX BLOCKS PER TAPE
***********************************************************************
         DS    0F
TAPETYPE DC    XL4'32108003',F'0000',CL12'3420        '
         DC    XL4'33008003',F'5400',CL12'3480/COMPAT '
         DC    XL4'78008080',F'5400',CL12'3480/FULLFNC'
         DC    XL4'78048080',F'8000',CL12'3480/IDRC   '     ENB 11-4-93
         DC    XL4'78048081',F'18000',CL12'3490/E      '    ENB 11-4-93
TAPETYP# EQU   (*-TAPETYPE)/20
         DS    0F
TAPEDEN  DC    XL4'C3000000',F'1000',CL8'/1600BPI'
         DC    XL4'D3000000',F'4200',CL8'/6250BPI'
TAPEDEN# EQU   (*-TAPEDEN)/16
         EJECT
***********************************************************************
*        REQUESTED DISK DEVICE TABLE
***********************************************************************
         DS    0F
DISKTBL  DC    CL8' ',CL4' ',H'0'   DISKNAME×FREE CYL×NAME SIZE
         DC    CL8' ',CL4' ',H'0'
         DC    CL8' ',CL4' ',H'0'
MAXDISKS EQU   (*-DISKTBL)/16
*
         DS    0F
HTTR     DS    XL3
HDEVT    DC    C' '
HADR     DC    C' '
TRKSPER  DC    F'0'
HOLDSTP  DC    CL11' '
HOLDCYL  DC    CL4' '
TYPEUCB  DC    CL4' '
ALLOCVOL DC    CL8' '
ALLOCVLN DC    H'0'
HDATE    DC    CL8' '
PDATE    DC    PL5'0'
HTIME    DC    CL6' '
PTIME    DC    PL4'0'
HLINES   DC    PL4'0'
HSTAMP   DC    PL6'0'
DISKNAME DC    CL8' '
DISKNML  DC    H'0'
TAPENAME DC    CL8' '
TAPENML  DC    H'0'
DAYLED   DC    CL10'.DAILY.D'
DAYLE    DC    CL10'.DAILY'
ARCHVD   DC    CL10'.ARCHIVE.D'
ARCHV    DC    CL10'.ARCHIVE'
PASSTYPE DC    CL10' '
NEWTYPE  DC    CL10' '
PASSLEN  DC    F'0'
PASSDSN  DC    CL44' '
PASSPFX  DC    CL25' '
PREFIX1  DC    CL21' '
PREFIX1L DC    F'0'
PREFIX2  DC    CL25' '
PREFIX2L DC    F'0'
ARCHDSN  DC    CL44' '
ALLOCYL  DC    F'0'
ALLOBLKS DC    F'0'
SAVEWORK DC    F'0'
SAVESPEC DC    F'0'
BLDLLIST DC    H'1',H'58',CL8'SOUTXIT',XL52'00' BLDL LIST
BLANKS   DC    CL255' '
FORMREC  DC    X'00410000',C'  ' RDW, CC AND TRC (PAD PREFIX)
SEPLIT   DC    CL24'SPFSOUTS PAGE SEPARATOR ',CL103'PAD ' SEP RECORD
*
RPTLINE  DC    CL133'1 SOUTWTR - INPUT/OUTPUT DATASET ALLOCATIONS'
RPTACT   DC    CL29' ALLOCATE ACTIVE FILE,   DSN='
RPTJRNL  DC    CL29' ALLOCATE VSAM JOURNAL,  DSN='
RPTNTP   DC    CL29' CREATE NEW OUTPUT TAPE, DSN='
RPTMTP   DC    CL29' MOD TO OUTPUT TAPE    , DSN='
RPTIDS   DC    CL29' INPUT DATASET,          DSN='
RPTODS   DC    CL29' OUTPUT DISK DATASET,    DSN='
RPTDDS   DC    CL29' DELETE DISK DATASET,    DSN='
RPTTUCB  DC    CL29' TAPE DEVICE TYPE - XXXX/XXXX'
RPTFORM  DC    CL29' FORMAT ACTIVE FILE          '
SYNCLINE DC    CL50' ADDING JJJJJJJJ NNNNNNNN TO JOURNAL TO SYNC FILES'
DELTLINE DC    CL50' DELETE JJJJJJJJ NNNNNNNN FROM JOURNAL PER REQUEST'
         DS    0F
*    VARIABLES NEED FOR $STCK MACRO
DATE     DS    CL8
TIME     DS    CL12
YEARDATE DS    CL4
DAY      DS    XL1
*
* PARM PASSED TO SOUTDATE
DATEPARM DS    0F
DP1      DC    A(DAYONLIN)        ADDR OF BACK UP TO # DAYS
DP2      DC    A(LASTDAYO)        ADDR OF LAST DAY TO KEEP ONLINE
*
DAYONLIN DC    CL5'00000'
LASTDAYO DC    CL10' '
COMPARED DC    CL8' '
*
MAXBLOCK DC    F'0'            MAX BLOCKS TO WRITE ON TAPE
PREVBLCT DC    F'0'            PREVIOUS BLOCK COUNT
COMPADDR DC    F'0'            COMPRESSION EXIT
LOCIADDR DC    F'0'            LOCINDEX EXIT
DATEADDR DC    F'0'            BACKUP DATE EXIT
PARMCPR  DS    0F
P1       DC    A(CPRTYPE)
P2       DC    A(RECORDV)
P3       DC    A(OUTREC)
         DS    0H
CPRTYPE  DC    XL4'FF000000'
*
         DC    CL14'OUTPUT RECORD='
         DS    0H
OUTREC   DS    0CL137
RECLEN   DC    H'0'
RECTT    DC    H'0'
RECOUT   DC    CL133' '
         DS    D          PAD AREA
         DC    CL13'INPUT RECORD='
         DS    0H
RECORDV  DS    0CL137
INRECL   DS    H
         DS    H
RECORDF  DS    0CL133
RECPREF  DS    CL6
RECLIT   DS    0CL77
RECSEP   DS    CL23
RECPAD   DS    CL5
RECJNAME DS    CL8,CL1
RECJNUM  DS    CL8,CL12
RECMSGCL DS    CL1,CL1
RECDATE  DS    CL8,CL1
RECTIME  DS    CL8,CL1
RECYEAR  DS    CL4,CL1
RECDAY   DS    CL1
RECFILL  DS    CL48
         DC    CL12'JOURNAL REC='
         DS    D
*        THE FOLLOWING IS THE JOURNAL RECORD FOR OUTPUT
JOURNREC DS    0CL42              JOURNAL RECORD
JJOBN    DC    CL8' '
JDATE    DC    PL5'0'
JTIME    DC    PL4'0'
JJOB#    DC    CL8' '
JMCLASS  DC    CL1' '
JTTR     DC    XL3'000000'
JDAY     DC    X'FF'
JLINES   DC    PL4'0'
JDEVT    DC    XL1'00'
JADR     DC    CL1' '
JSTAMP   DC    PL6'0'
         EJECT
         DC    CL12'DCB FOLLOWS:'
JOURNACB ACB   AM=VSAM,DDNAME=JOURNAL,MACRF=(KEY,DIR,OUT)
JOURNRPL RPL   ACB=JOURNACB,AREA=JOURNREC,AREALEN=42,KEYLEN=22,        X
               OPTCD=(KEY,DIR,SYN,UPD,MVE,KEQ,FKS),RECLEN=42,          X
               ARG=JOURNREC
ALLOCRPT DCB   MACRF=(PM),DSORG=PS,DDNAME=ALLOCRPT,LRECL=133,          X
               RECFM=FBA,BLKSIZE=6118
SPECLDEL DCB   MACRF=(GM),DSORG=PS,DDNAME=SPECLDEL,EODAD=XXX030,       X
               EXLST=OPENL
FORMDCB  DCB   MACRF=(PM),DSORG=PS,DDNAME=XXXXX,LRECL=133
INPUT    DCB   MACRF=(GM),DSORG=PS,DDNAME=XXXXX,EODAD=ENTRY100,        X
               BUFL=32760,EXLST=OPENL
OUTPUT   DCB   MACRF=(PM),DSORG=PS,DDNAME=OUTPUT,LRECL=137,RECFM=VB,   X
               EXLST=OPENL
PREFIX   DCB   MACRF=(PM),DSORG=PS,DDNAME=PREFIX,EXLST=OPENL
OLDPFX   DCB   MACRF=(PM),DSORG=PS,DDNAME=OLDPFX,EXLST=OPENL
         DS    0F
OPENL    DC    X'87',AL3(JFCB) OPEN EXIT LIST
JFCB     DC    CL176' '        HOLD AREA FOR OUTPUT JFCB
*
DELAREA  DS    0CL80
DELJNAME DC    CL8' '
DELFILL1 DC    CL1' '
DELJNUM  DC    CL8' '
DELFILL2 DC    CL63' '
*
* PARM SETUP FOR LOCATE INDEX
*
LOCIPARM DC    A(LOCIPFX)
         DC    A(LOCIDSN)
         DC    A(LOCIVOL)
         DC    A(0)       ADDR OF GETMAIN
LOCIPFX  DC    CL44' '
LOCIDSN  DC    CL44' '
LOCIVOL  DC    CL6' '
*
*        THE FOLLOWING IS REFERNCED IN DYNAMIC STORAGE VIR R13
*
         DS    0F
DEVCLASS DC    XL1'20'         UCB DEVICE CLASS
WORKAREA DS    XL100          IOSVSUCB WORK AREA
UCBADDR  DS    F              ADDRESS OF RETURNED UCB
*
*        THE FOLLOWING IS THE SVC 78 PARAMETER LIST
*
MSGAREA  DS    0CL30
         DS    CL6            CONSTANT - 'SPACE='
FREECYL  DS    CL4            TOTAL NO. FREE CYLINDERS
         DS    CL1            CONSTANT - ','
FREETRK  DS    CL4            TOTAL NO. FREE TRACKS OUTSIDE CYLS
         DS    CL1            CONSTANT - ','
FREEXTNT DS    CL4            TOTAL NO. FREE EXTENTS
         DS    CL1            CONSTANT - '/'
CONTGCYL DS    CL4            LARGEST CONTIGUOUS FREE AREA
         DS    CL1                   IN CYLS AND TRKS
CONTGTRK DS    CL4
         DS    0F
SPACPARM DS    A              IOSVSUCB PARM - ADDRESS OF WORKAREA
         DS    A              IOSVSUCB PARM - ADDRESS OF DEVICE CLASS
         DS    A              IOSVSUCB PARM - UCB ADDRESS POINTER
         DS    F              IOSVSUCB RETURNED UCB ADDRESS
*
WORKSPC  DSECT
LOCINDXW EQU   *
*
SPECAREA DSECT
SPECNAME DS    CL8
SPECNUM  DS    CL8
SPECLGTH DS    F
         PRINT OFF
         DCBD  DSORG=PS
         IFGACB AM=VSAM
         CVT   DSECT=YES      GENERATE CVT LABELDS
         END
