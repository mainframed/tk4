***********************************************************************
*                                                                     *
*        THIS IS AN EXAMPLE OF A SOUTWTR EXIT ROUTINE.  IN THIS       *
*        EXAMPLE, A JOB DETAIL REPORT IS CREATED BY PROCESSING        *
*        THE JES2 WTO MESSAGES IN THE JOB LOG OF EACH JOB.  THIS      *
*        REPORT WILL CONTAIN:                                         *
*                                                                     *
*        DATE TIME JOBNUM JOBNAME RETCODE                             *
*                                                                     *
*        TAPE-UNIT VOLUME DSNAME (FOR TAPE REQUESTS)                  *
*                                                                     *
*        TOTAL CPU TIME IN MINUTES AND SECONDS                        *
*                                                                     *
*        NOTE:  IF A 'NOT CATALOGED' MESSAGE IS ENCOUNTERED IN        *
*        THE INPUT, THEN IT IS NOTED ON THE OUTPUT LISTING, AND       *
*        THE OPERATOR IS INFORMED VIA A 'WTO' MESSAGE TO CHECK        *
*        THE LISTING.  THIS INSURES THAT SHOULD A DATASET FAIL        *
*        CATALOGING FOR ANY REASON, THAT SOMEONE MAY ADDRESS IT       *
*        TO AVOID A POTENTIAL PROBLEM.                                *
*                                                                     *
*        INSURE THAT A SYSPRINT DD STATEMENT IS ADDED TO THE          *
*        SAVEWTR PROCEDURE TO PRODUCE THE REPORT.                     *
*                                                                     *
*        ATTRIBUTES: SERIALLY REUSABLE PER EXECUTION                  *
*                                                                     *
*        THE FOLLOWING DESCRIBES THE PARM LIST PASSED TO THIS         *
*        ROUTINE VIA REG 1:                                           *
*                                                                     *
*          DISPL  LEN    DESCRIPTION                                  *
*                                                                     *
*            0     1     01 SEPARATOR IS BEING PASSED                 *
*                        02 DATA RECORD IS BEING PASSED               *
*                        04 INPUT FILE IS THE 'ACTIVE' DATASET        *
*                        08 END OF FILE ON INPUT (LAST ENTRY)         *
*                        10 PARM SPECIFIED WAS COPY                   *
*                        20 PARM SPECIFIED WAS RESET                  *
*                        40 RESERVED                                  *
*                        80 RESERVED                                  *
*            1     3     ADDRESS OF THE CURRENT INPUT RECORD          *
*            4     4     USER FIELD (INITIALLY ZERO)                  *
*            8     4     ADDRESS OF INPUT DCB                         *
*           12     4     ADDRESS OF OUTPUT DCB                        *
*           16     4     ADDRESS OF THE OUTPUT DSNAME                 *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        INITIALIZATION AND PARM ISOLATION                            *
*                                                                     *
***********************************************************************
SOUTXIT  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         USING *,R12           INFORM THE ASSEMBLER OF BASE
         SAVE  (14,12)         SAVE SOUTWTR'S REGISTERS
         LR    R12,R15         GET A BASE REG
         LR    R11,R1          MOVE PARM TO USING REGISTER
         USING PARM,R11        INFORM THE ASSEMBLER
         ICM   R10,7,RECADDR   GET RECORD ADDRESS
         LA    R1,SAVE         ADDR OF SAVE AREA
         ST    R1,8(R13)       FORWARD CHAIN
         ST    R13,4(R1)       BACKWARD CHAIN
         LR    R13,R1          SET NEW SAVE AREA
         TM    USERAREA,INIT   HAVE WE INITIALIZED BEFORE?
         BO    INITDONE        YES, CONTINUE
         TM    FLAG,COPY+RESET WILL WE COPY DATA
         BNO   INITDONE        NO, SKIP HEADER UPDATE
         L     R15,JFCBADDR    ADDRESS OF JFCB (DSNAME)
         MVC   HEAD1(11),=C' COPIED TO ' ADD THE PREFIX
         MVC   HEAD1+11(44),0(R15) MOVE THE DATASET NAME
INITDONE OI    USERAREA,INIT   INDICATE INITIALIZATION COMPLETE
         TM    FLAG,EOF        IS THIS END OF FILE?
         BO    CLOSE           YES, GO CLOSE SYSPRINT FILE
         EJECT
***********************************************************************
*                                                                     *
*        PROCESS THE RECORD PASSED BY THE SOUTWTR ROUTINE             *
*                                                                     *
***********************************************************************
         TM    FLAG,SEP        IS THIS A SEPARATOR RECORD?
         BZ    NOTSEP          NO  CONTINUE
         TM    BLKLINE,X'01'   BLANK LINE WRITTEN BEFORE
         BO    BYPASSBL        YES - BYPASS WRITING ANOTHER
         LA    R1,BLANKS       POINT TO BLANK RECORD SEPARATOR
         BAL   R14,PRINT       WRITE BLANK RECORD
         OI    BLKLINE,X'01'   SET ON
BYPASSBL LA    R14,SLOTNUM     NUMBER OF SLOTS
         LA    R15,SLOTS       1ST SLOT AVAILABLE
INITSLOT XC    0(128,R15),0(R15) CLEAR SLOT TO X'00'
         LA    R15,128(R15)    BUMP TO NEXT SLOT
         BCT   R14,INITSLOT    LOOP FOR &SLOTNUM TIMES
         CLI   JOBSAVE,C' '    WAS A HEADER PREVIOUSLY SAVED?
         BE    SAVEJN          NO, CONTINUE
         MVC   JOBNUM(15),JOBSAVE  PREPARE TO WRITE SAVED DATA
         MVC   JOBSAVE(4),47(R10) SAVE JOB NUMBER
         MVC   JOBSAVE+7(8),34(R10) SAVE JOB NAME
         MVC   JOBSAVE+15(1),63(R10) SAVE JOB SYSOUT CLASS
         B     EXIT            COPY SEPARATOR RECORD AND WRITE
SAVEJN   MVC   JOBSAVE(4),47(R10) SAVE JOB NUMBER
         MVC   JOBSAVE+7(8),34(R10) SAVE JOB NAME
         MVC   JOBSAVE+15(1),63(R10) SAVE JOB SYSOUT CLASS
         B     EXIT            GET NEXT RECORD
NOTSEP   CLC   20(9,R10),=C'$HASP373 ' IS THIS JES STARTED MSG (FORM1)
         BE    DOJES           YES, PROCESS SAME
         CLC   30(16,R10),=CL16' STARTED - INIT' JES STARTED (FORM2)
         BNE   NOTJES          NO, CONTINUE
         LA    R1,7(R1)        ADJUST OFFSETS
*DOJES   MVC   @JCLASS,64(R10) MOVE CLASS TO MESSAGE
DOJES    B     DOTIME          WRITE IT OUT
NOTJES   CLC   20(8,R10),=CL8'IEF452I' JCL ERROR HEADER? (FORM3)
         BNE   NOTJCL          NO, CONTINUE
         MVC   @STEP(23),=CL23'FAILED BEFORE XEQ -JCL-'
DOTIME   MVC   @STIME,1(R10)   MOVE TIME TO MESSAGE
         B     NOLOG           WRITE IT OUT
NOTJCL   CLC   1(29,R10),=CL29'******** JOB DELETED BY JES2' (FORM4)
         BNE   ENDRECOD        NO, CONTINUE
         MVC   @STEP(23),=CL23'FAILED (NO-LOG)   -JCL-'
NOLOG    MVC   JOBNUM(15),JOBSAVE COPY SAVED HEADER INFO
         MVI   JOBSAVE,C' '    CLEAR SAVED HEADER INDICATOR
         B     WRITE           WRITE IT OUT
ENDRECOD EQU   *
         CLC   20(9,R10),=C'$HASP395 '
         BNE   CHKDATA
         MVC   SAVTIME,1(R10)
         B     EXIT
         EJECT
***********************************************************************
*                                                                     *
*        CHECK FOR A 'IEF287I' MESSAGE AND DISPLAY IT                 *
*                                                                     *
***********************************************************************
CHKDATA  CLC   1(7,R10),=C'IEF287I' DISPOSITION MESSAGE?
         BNE   CHK283          NO, CONTINUE
         MVC   @DSNAME(44),11(R10) MOVE DATASET NAME
         MVC   @ERCODE(13),56(R10) MOVE MESSAGE TEXT
         OI    USERAREA,FND    INDICATE THAT A RECORD WAS WRITTEN
         B     WRITE           WRITE OUT RECORD
         EJECT
***********************************************************************
*                                                                     *
*        CHECK FOR A 'IEF283I' MESSAGE AND DISPLAY IT                 *
*                                                                     *
***********************************************************************
CHK283   CLC   1(7,R10),=C'IEF283I' DISPOSITION MESSAGE?
         BNE   NOTNC           NO, CONTINUE
         MVC   @DSNAME(44),11(R10) MOVE DATASET NAME
         MVC   @ERCODE(13),56(R10) MOVE MESSAGE TEXT
         OI    USERAREA,FND    INDICATE THAT A RECORD WAS WRITTEN
         B     WRITE           WRITE OUT RECORD
         EJECT
***********************************************************************
*                                                                     *
*        ISOLATE AND SAVE ALL 'MOUNT' MSG INFORMATION                 *
*                                                                     *
***********************************************************************
NOTNC    CLC   20(7,R10),=C'IEF233A' IS THIS A SCHEDULER MOUNT?
         BE    CHKMOUNT        YES, GO CHECK TAPE MOUNT
         CLC   20(7,R10),=C'IEC501A' IS THIS AN OPEN MOUNT
         BNE   NOTMOUNT        NO, CHECK NEXT RECORD
CHKMOUNT CLC   27(3,R10),=C' M ' IS THIS FIRST PART OF MOUNT MSG?
         BE    SAVETAPE        YES, GO SAVE MSG DATA
         ICM   R15,15,SLOTSAVE GET ADDRESS OF PREVIOUS SLOT
         BZ    EXIT            NO SLOT, IGNORE IT
         LA    R14,128         SET LOOP CONTROL
SCRLOOP  CLI   0(R15),C' '     IS THIS THE END OF DATA?
         BE    SCRUPDT         YES, APPEND DATASET NAME
         LA    R15,1(R15)      BUMP TO NEXT CHARACTER
         BCT   R14,SCRLOOP     BUMP TO NEXT CHARACTER
         B     EXIT            TOO LONG, PASS WHAT WE GOT
SCRUPDT  EX    R14,MOVEDATA    MOVE DATA TO SLOT
         B     EXIT            PROCESS NEXT RECORD
MOVEDATA MVC   0(0,R15),28(R10) APPEND DATASET NAME
SAVETAPE BAL   R9,FINDSLOT     GO FIND THE ACTIVE SLOT FOR THIS DRIVE
         ST    R15,SLOTSAVE    SAVE ADDR OF SLOT
         MVC   0(80,R15),30(R10) SAVE DRIVE AND DATA
         B     EXIT            PROCESS NEXT RECORD
         EJECT
***********************************************************************
*                                                                     *
*        ISOLATE ALL 'KEEP' MSG INFORMATION                           *
*                                                                     *
***********************************************************************
NOTMOUNT CLC   20(7,R10),=C'IEF234E' IS THIS A SCHEDULER KEEP?
         BE    CHKKEEP         YES, GO CHECK TAPE KEEP
         CLC   20(7,R10),=C'IEC502E' IS THIS AN OPEN KEEP?
         BNE   CHKTERM         NO, CHECK NEXT RECORD
CHKKEEP  CLC   27(3,R10),=C' K ' IS THIS 1ST PART OF KEEP MSG?
         BNE   EXIT            NO, ALL DONE
         CLC   34(6,R10),=CL6' ' IS THIS A LABEL ERROR KEEP?
         BE    EXIT            YES, NO NEED TO PROCESS
         CLI   34(R10),C','    IS THIS AN ABEND ERROR KEEP?
         BE    EXIT            YES, NO NEED TO PROCESS
         BAL   R9,FINDSLOT     GO FIND THE ACTIVE SLOT FOR THIS DRIVE
         MVI   @TYPE,C'N'      MOVE TYPE OF I/O
         CLC   4(6,R15),=C'PRIVAT' WAS MOUNT FOR THIS DRIVE A SCRATCH?
         BE    ITSNEW          YES, ASSUME NEW
         MVI   @TYPE,C'O'      MOVE TYPE OF I/O
*ITSNEW  MVC   @UNIT+1(3),0(R15) MOVE TAPE DRIVE ADDRESS
ITSNEW   MVC   @VOLSER,34(R10) MOVE VOLUME SERIAL TO DATA AREA
         LA    R14,6           SET LOOP CONTROL
         LA    R1,@VOLSER      VOLUME SERIAL ADDRESS
SERLOOP  CLI   0(R1),C','      TRAILING COMMA?
         BE    SERCL           YES, CLEAR SAME
         LA    R1,1(R1)        BUMP TO NEXT CHAR
         BCT   R14,SERLOOP     CHK NEXT CHAR
SERCL    MVC   0(5,R1),BLANKS  CLEAR ANY THING AFTER VOLSER
         LA    R14,80          SET LOOP CONTROL
         LA    R3,5            SET LOOP CONTROL
CHKCOMMA CLI   0(R15),C','     FIND A COMMA
         BE    CHKCOM          FOUND, CHECK WHICH ONE
BUMPCOM  LA    R15,1(R15)      ADDRESS OF NEXT CHARACTER
         BCT   R14,CHKCOMMA    DECREMENT AND BRANCH BACK
         B     WRITE           NO DSNAME, WRITE WHAT WE GOT
CHKCOM   BCT   R3,BUMPCOM      DECREMENT AND BRANCH BACK
         MVC   @DSNAME(44),1(R15) MOVE DSNAME TO PRINT LINE
         B     WRITE           WRITE OUT RECORD
         SPACE 4
***********************************************************************
*                                                                     *
*        LOCATE AN ACTIVE TAPE SLOT OR A NULL SLOT (SUBROUTINE)       *
*                                                                     *
***********************************************************************
FINDSLOT LA    R15,SLOTS       ADDRESS OF SLOT TABLE
         LA    R14,SLOTNUM     NUMBER OF ENTRIES IN TABLE
SLOTLOOP CLC   0(3,R15),30(R10) CHECK FOR ENTRY MATCH
         BER   R9              MATCH, RETURN
         CLI   0(R15),X'00'    IS THIS AN EMPTY SLOT?
         BER   R9              YES, USE IT
         LA    R15,128(R15)    BUMP TO NEXT SLOT
         BCT   R14,SLOTLOOP    CHECK NEXT SLOT
         ABEND 2,DUMP          OUT OF SLOTS, ABEND (DUMP)
         EJECT
***********************************************************************
*                                                                     *
*        ISOLATE THE SMF JOB STARTED MSG TO PROVIDE DATE/TIME         *
*                                                                     *
***********************************************************************
*HKSTART CLC   1(7,R10),=C'IEF375I' IS THIS THE SMF TERMINATION MSG?
*        BNE   CHKTERM         NO, CHECK FOR STEP RECORDS
*        MVC   @SDATE,31(R10)  MOVE DATE TO RECORD
*        MVC   @STIME(2),37(R10)  MOVE HOUR TO RECORD
*        MVI   @STIME+2,PERIOD  MOVE PERIOD TO RECORD
*        MVC   @STIME+3(2),39(R10)  MOVE MIN TO RECORD
*        MVI   @STIME+5,PERIOD  MOVE PERIOD TO RECORD
*        MVC   @STIME+6(2),SECONDS  MOVE SECONDS TO RECORD
*        B     WRITE           BRANCH OUT AT TERM MESSAGE
*        SPACE 4
***********************************************************************
*                                                                     *
*        ISOLATE THE SMF TERMINATION MSG TO PROVIDE DATE/TIME         *
*                                                                     *
***********************************************************************
CHKTERM  CLC   1(7,R10),=C'IEF376I' IS THIS THE SMF TERMINATION MSG?
         BNE   CHKSLASH        NO, CHECK FOR STEP RECORDS
         MVC   @SDATE,31(R10)  MOVE DATE TO RECORD
         MVC   @STIME,SAVTIME  MOVE TIME TO RECORD
*        MVC   @STIME(2),37(R10)  MOVE HOUR TO RECORD
*        MVI   @STIME+2,PERIOD  MOVE PERIOD TO RECORD
*        MVC   @STIME+3(2),39(R10)  MOVE MIN TO RECORD
*        MVI   @STIME+5,PERIOD  MOVE PERIOD TO RECORD
*        MVC   @STIME+6(2),SECONDS  MOVE SECONDS TO RECORD
         B     WRITE           BRANCH OUT AT TERM MESSAGE
*        SPACE 4
***********************************************************************
*                                                                     *
*        ISOLATE THE ACCOUNTING ROUTINE RECORDS TO GET THE STEP       *
*        PROGRAM AND RETURN CODE                                      *
*                                                                     *
***********************************************************************
CHKSLASH CLI   55(R10),C'/'    IS THIS A STEP RECORD?
         BNE   EXIT            NO, SKIP IT
         CLI   65(R10),C'/'    IS THIS A STEP RECORD?
         BNE   EXIT            NO, SKIP IT
         MVC   @RETCODE,68(R10) MOVE RETCODE
         MVC   @STEP,29(R10)   MOVE STEPNAME AND PGM NAME
         SPACE 4
***********************************************************************
*                                                                     *
*        SYSPRINT OUTPUT ROUTINE AND EXIT CODE                        *
*                                                                     *
***********************************************************************
WRITE    CLC   JOBNUM,BLANKS   JOBNAME IS BLANKS
         BNE   WRITE1          NO - WRITE IT
         TM    BLKLINE,X'01'   ALREADY WROTE A BLANK LINE??
         BO    WRITEXIT        YES - BYPASS NEXT WRITE
         OI    BLKLINE,X'01'   WRITING A BLANK LINE
         B     WRITE2          BYPASS CLEAR
WRITE1   MVI   BLKLINE,X'00'   CLEAR BLANK LINE CHECK
WRITE2   MVC   @JOBLOG,JOBNUM ADD THE JOB NUMBER AND NAME
         LA    R1,ASA          DATA POINTER FOR SYSPRINT
         BAL   R14,PRINT       WRITE REPORT RECORD
WRITEXIT B     EXIT            RETURN
CLOSE    CLOSE (PRINTDCB)      CLOSE SYSPRINT DCB
         SR    R15,R15         CLEAR RETCODE
         TM    FLAG,ACT+RESET  IS THIS THE ACTIVE FILE?
         BNO   EXIT            NO, CONTINUE
         TM    USERAREA,FND    WERE ANY ERROR RECORDS FOUND?
         BZ    EXIT            NO, CONTINUE
         WTO   'SOUTWTR - JOBS FOUND THAT MAY BE IN ERROR, CHECK LISTIN*
               G',ROUTCDE=2    INFORM THE OPERATOR
EXIT     L     R13,SAVE+4      GET PREVIOUS SAVE POINTER
         SR    R15,R15         CLEAR RETURN CODE
         RETURN (14,12),RC=(15) RETURN TO SOUTWTR
         EJECT
***********************************************************************
*                                                                     *
*        CONSTANTS AND WORK AREAS                                     *
*                                                                     *
***********************************************************************
         LTORG
SAVE     DC    18F'0'          REGISTER SAVE AREA
SLOTSAVE DC    F'0'            SAVE AREA FOR MOST RECENT SLOT
BLKLINE  DC    X'00'           BLANK LINE CHECK SWITCH
JOBSAVE  DC    CL16' '         HOLD AREA FOR HEADER INFO
JOBNUM   DC    CL4' ',C'   '   HOLD AREA FOR JOBNUMBER
JOBNAME  DC    CL8' '          HOLD AREA FOR JOBNAME
JOBMCL   DC    CL1' '          HOLD AREA FOR JOB MSGCLASS
SEPLIT   DC    CL33'SPFSOUTS PAGE SEPARATOR ' SEPARATOR REC
BLANKS   DC    CL133' '        SEPARATOR PADDING
@TYPE    DC    CL1' '          WORK SPACE FOR TYPE OF I/O
SECONDS  DC    CL2'00'         WRITE THE SECONDS FOR PROCESSING
SAVTIME  DC    CL8' '
PERIOD   EQU   C'.'
         EJECT
***********************************************************************
*                                                                     *
*        SYSOUT LISTING BUFFERS AND CONSTANTS                         *
*                                                                     *
***********************************************************************
HEAD1    DC    CL134'                                                  X
                DISKWTR  JOB  STATUS  REPORT                           X
                                       '
HEAD2    DC    CL134'   DATE      TIME     JOB#   JOBNAME   STEPNAME   X
               RETCD   VOLSER   --------  DATASET NAME  ---------------X
               ----      ERROR CODE    '
*----------------------------------------------------------------------
ASA      DC    C' '            ASA CHARACTER FOR SYSPRINT
BUF      DC    CL132' '        OUTPUT BUFFER FOR SYSPRINT
         ORG   BUF             BACK TO BUF ORIGIN
         DC    C'  '
@SDATE   DC    CL5' ',C'   '        START DATE
@STIME   DC    CL8' ',C'   '        START TIME
@JOBLOG  DC    CL16' ',C' '         JOB NUMBER, JOBNAME
@STEP    DC    CL8' ',C'   '        STEPNAME
@RETCODE DC    CL5' ',C'   '        RETCODE
@VOLSER  DC    CL6' ',C'   '        VOLUME SERIAL NUMBER
@DSNAME  DC    CL44' ',C'     '     DATASET NAME
@ERCODE  DC    CL13' ',C'  '        EDATE/TIME
         ORG
*----------------------------------------------------------------------
         EJECT
***********************************************************************
*                                                                     *
*        INPUT/OUTPUT SUBROUTINES & DCB'S AND TAPE SLOT TABLE         *
*                                                                     *
***********************************************************************
PRINT    SYSPRINT HEADER1=HEAD1,HEADER2=HEAD2,LRECL=133 REPORT FILE
         LTORG
SLOTS    DC    50XL128'00'     ONE SLOT FOR EACH TAPE DRIVE AVAILABLE
SLOTNUM  EQU   ((*-SLOTS)/128)  NUMBER OF SLOTS IN TABLE
PARM     DSECT
FLAG     DS    X               INDICATOR SWITCH (FLAGS)
SEP      EQU   X'01'           SEPARATOR IS BEING PASSED
REC      EQU   X'02'           DATA RECORD IS BEING PASSED
ACT      EQU   X'04'           INPUT FILE IS THE 'ACTIVE' DATASET
EOF      EQU   X'08'           END OF FILE ON INPUT (LAST ENTRY)
COPY     EQU   X'10'           COPY IS BEING PERFORMED
RESET    EQU   X'20'           RESET WILL BE DONE
RSVD40   EQU   X'40'           RESERVED
RSVD80   EQU   X'80'           RESERVED
RECADDR  DS    AL3             ADDRESS OF THE CURRENT INPUT RECORD
USERAREA DS    F               USER FIELD (INITIALLY ZERO)
FND      EQU   X'01'           AT LEAST ONE "NOT CAT" FOUND
INIT     EQU   X'02'           INITIALIZATION COMPLETE
IDCBADDR DS    A               ADDRESS OF INPUT DCB
ODCBADDR DS    A               ADDRESS OF OUTPUT DCB
JFCBADDR DS    A               ADDRESS OF JFCB (DSNAME)
         END
