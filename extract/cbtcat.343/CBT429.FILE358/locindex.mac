         PRINT ON,GEN
*
*
*
* ********************************************************************
*
*  THIS IS THE ROUTINE BORROWED FROM THE "LISTSPC" PROGRAM
*
* ********************************************************************
*
*
*
*
*
*
*
*
*
*        LOCINDEX SUBROUTINE REPLACEMENT FOR MVS
*        THIS ROUTINE SUPPORTS 'LEVEL' OPTIONS OF THE 'LISTS' COMMAND
*             AND IS USED BY OTHER YCC VARIATIONS OF THAT PROGRAM
*        FOLLOWING IS ORIGINAL LOCINDEX DESCRIPTION:
*.....................................................................*
*.                                                                   .*
*.   LOCINDEX                                                        .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   1.0  GENERAL DESCRIPTION                                        .*
*.                                                                   .*
*.   THIS SUBROUTINE IS USED TO RETURN DSNAMES AND THE VOLSER        .*
*.   FOR A SPECIFIED INDEX STRUCTURE.  THE INDEX STRUCTURE CAN BE    .*
*.   SPECIFIED AS SEVERAL HIGH-LEVEL QUALIFIERS OR IT CAN BE A       .*
*.   DSNAME CONTAINING ONE EMBEDDED ASTERISK NOT AS THE HIGH-LEVEL   .*
*.   QUALIFIER.                                                      .*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.....................................................................*
*.                                                                   .*
*.   2.0  PARAMETER LIST AND RETURN CODE DESCRIPTION                 .*
*.                                                                   .*
*.   THE PARAMETER LIST IS A FOUR OR FIVE WORD LIST CONTAINING THE   .*
*.   FOLLOWING:                                                      .*
*.                                                                   .*
*.    WORD         DESCRIPTION                                       .*
*.                                                                   .*
*.      1          ADDRESS OF THE 44-BYTE FIELD CONTAINING THE       .*
*.                 INDEX STRUCTURE.                                  .*
*.      2          ADDRESS OF THE 44-BYTE FIELD INTO WHICH           .*
*.                 LOCINDEX WILL PLACE THE DSNAME.                   .*
*.      3          ADDRESS OF THE 6-BYTE FIELD INTO WHICH            .*
*.                 LOCINDEX WILL PLACE THE VOLSER OF THE DATASET.    .*
*.      4          ADDRESS OF A 4K WORK AREA TO BE USED BY           .*
*.                 LOCINDEX FOR STORING CATALOG BLOCKS.              .*
*.      5          OPTIONAL FIELD FOR THE ADDRESS OF A FULLWORD      .*
*.                 OF STORAGE ON AN INTEGRAL BOUNDARY INTO WHICH     .*
*.                 LOCINDEX WILL STORE THE RETURN CODE.              .*
*.                                                                   .*
*.   THE HIGH ORDER BIT OF THE LAST WORD OF THE PARAMETER LIST       .*
*.   MUST BE SET ON.                                                 .*
*.                                                                   .*
*.    RETURN CODE  MEANING                                           .*
*.                                                                   .*
*.         0       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .*
*.                 A DISK VOLUME.                                    .*
*.         4       THE INDEX STRUCTURE WAS NOT FOUND.                .*
*.         8       A DSNAME WAS FOUND AND THE DATASET RESIDES ON     .*
*.                 A TAPE VOLUME.                                    .*
*.        12       A DSNAME WAS FOUND BUT IT RESIDES ON MULTIPLE     .*
*.                 VOLUMES.                                          .*
*.        16       THERE ARE NO MORE DATASETS FOR THIS INDEX         .*
*.                 STRUCTURE.                                        .*
*.        20       AN I/O ERROR WAS DETECTED ON THE CATALOG.         .*
*.                                                                   .*
*.....................................................................*
*
*        THE PRIMARY DIFFERENCES BETWEEN THE MVS VERSION
*        AND THE OS VERSION ARE:
*              1) THE PART ABOVE THE ASTERISK IS PASSED TO VSAM
*                 GENERIC LOCATE AND WORKS HOWEVER GENERIC LOCATE
*                 LOCATE WORKS. ONLY NON-VSAM DATASETS ARE PASSED
*                 BACK TO THE CALLER.
*              2) THE CHARACTERS BELOW THE ASTERISK MUST APPEAR
*                 IN THE DATASET NAME ANYWHERE AFTER THE SEARCH
*                 KEY CHARACTERS. THEY MAY CONTAIN LEADING
*                 AND TRAILING PARTIAL INDEX LEVELS.
*              3) THE AMOUNT OF STORAGE REQUIRED FOR A VSAM GENERIC
*                 LOCATE IS MUCH MORE THAN THE 4K AREA PROVIDED BY
*                 THE OS CALLER. A 24K AREA IS GETMAINED AND ITS
*                 ADDRESS IS STORED IN THE FIRST WORK OF THE 4K
*                 CALLER WORK AREA. IT IS FREEMAINED WHEN THE
*                 RETURN CODE OF 16 SIGNALS THE END OF DATASETS
*                 UNDER THIS INDEX.
*              5) THE 265 BYTE CAMLIST WORK AREA IS PUT IN THE
*                 CALLER PROVIDED WORK AREA AT OFFSET 4. THIS
*                 ALLOWS ACCESS TO THE COMPLETE VOLUME LIST.
         EJECT
LOCINDEX CSECT
         USING *,15
         SAVE  (14,12),,*
         GETMAIN R,LV=LSECT
         ST    R13,4(R1)
         ST    R1,8(13)
         LR    R12,R13
         LR    R13,R1
         L     R1,24(R12)
         BALR  R12,0
         USING *,12
         USING DSASECT,R13
         ST    R1,INPARM
         L     R10,12(R1)
         USING WORKSECT,R10
         L     R2,0(R1)
         CLC   OINDEX,0(R2)   SAME INDEX STRUCTURE AS LAST CALL?
         BE    CAMLOC         GO GET NEXT DATASET
         MVC   OINDEX,0(R2)
         SPACE 10
BLDKEY   DS    0H
*        THIS BLOCK ANALIZES THE NEW INDEX STRUCTURE INTO COMPONENTS
*        IT CONSTRUCTS A VSAM CATALOG GENERIC SEARCH KEY AND AN
*        OPTIONAL LOWER LEVEL QUALIFIER VERIFICATION STRING
*        ONE ASTERISK IS ALLOWED ANYWHERE BELOW THE USERID.
*        IT MAY REPRESENT ALL OR PART OF AN 'INDEX LEVEL'
*        EXITS: NORMAL TO 'GENLOC'
*               TO 'ERROR4' IF A SYSTAX ERROR OCCURS IN INDEX STRUCTURE
         SR    R1,R1
         SR    R2,R2          CLEAR FOR TRT INSTRUCTION
         MVI   TRTAB,0
         MVC   TRTAB+1(255),TRTAB
         MVI   TRTAB+C' ',4
         MVI   TRTAB+C'*',8
         MVI   TRTAB+C'.',12
         MVC   KEY,OINDEX     COPY INDEX INPUT
         TRT   KEY,TRTAB
         BZ    ERROR4         MUST BE A BLANK IN 44 CHARS
         B     *(R2)
         B     @USERID        C' ' MUST BE A USERID
         B     ERROR4         C'*' ASTERISK MUST FOLLOW PERIOD
         B     COMPLEX        C'.' MUST DO FULL ANALYSIS OF STRUCTURE
         SPACE 5
@USERID  DS    0H
*        THIS BLOCK BUILDS SEARCH KEY FOR USERID. MUST BE <9 CHARACTERS
*        AND WE ADD A PERIOD TO IT TO INDICATE TO GENERIC LOCATE
*        THAT WE ARE INTERESTED IN THE DATASETS UNDER THE NAME AND
*        NOT THE ALIAS RECORD (CVOL POINTER) OF THE NAME ITSELF.
         MVI   0(R1),C'.'
         LA    R3,KEY
         SR    R1,R3
         CH    R1,=H'8'
         BH    ERROR4
         LA    R1,1(R1)
         STC   R1,NAME        STORE KEY LENGTH
         MVI   LREST,X'80'
         B     GENLOC
* END OF USERID
         SPACE 5
COMPLEX  DS    0H
*        NOW WE SEARCH FOR AN IMBEDDED ASTERISK IN INDEX STRUCTURE
*        CHARACTERS ABOVE IT ARE USED AS THE GENERIC KEY.
*        CHARACTERS AFTER IT ARE USED AS THE LOWER LEVEL QUALIFIERS.
         MVI   TRTAB+C'.',0   NO LONGER INTERESTED IN PERIODS
         TRT   KEY,TRTAB
         BZ    ERROR4
         B     *(R2)
         B     ONEPART        NO ASTERISK
         B     TWOPART
         SPACE 5
ONEPART  MVI   LREST,X'80'
         LA    R3,KEY
         SR    R1,R3
         STH   R1,LKEY
         STC   R1,NAME
         B     GENLOC
         SPACE 5
TWOPART  DS    0H
*        THIS BLOCK HANDLES THE CASE WHERE THERE IS AN EMBEDDED
*        ASTERISK IN THE INDEX LEVEL. THE CHARACTERS BELOW THE
*        ASTERISK ARE MOVED TO 'REST'. THE CHARACTERS FROM THE
*        ASTERISK ON ARE BLANKED IN 'KEY'. THE LENGTH OF THE
*        NON BLANK PART OF 'REST' LESS ONE IS SAVED IN 'LREST'
*        FOR USE IN THE LATER CLC INSTRUCTION. THE LENGTH OF
*        THE KEY IS SAVED IN 'NAME' FOR THE GENERIC LOCATE AND
*        IN 'LKEY' FOR AN INDICATION OF HOW MANY CHARS TO
*        SKIP BEFORE LOOKING IN A DSN FOR A MATCH TO 'REST'.
         LA    R3,KEY+42
         SR    R3,R1         GET LENGTH OF KEY ABOVE ASTERISK
         MVC   REST,=CL44' ' INITIALIZE REST
         EX    R3,MOVREST    MOVE PART BELOW ASTERISK
         LA    R3,1(R3)
         EX    R3,BLNKEY     BLANK KEY FROM ASTERISK ON
         SH    R3,=H'43'
         LPR   R3,R3         GET CHARS ABOVE ASTERISK
         STH   R3,LKEY
         STC   R3,NAME
         TRT   REST,TRTAB    FIND NON-BLANK LENGTH OF REST
         B     *(R2)
         B     LENRST
         B     ERROR4        SORRY, ONLY ONE * PER CUSTOMER
LENRST   LA    R3,REST+1     CALCULATE LENGTH FROM ADDRESS
         SR    R1,R3            OF FIRST BLANK
         STH   R1,LREST
         B     GENLOC
MOVREST  MVC   REST(0),1(R1)
BLNKEY   MVC   0(0,R1),=CL44' '
* END OF TWOPART
* END OF COMPLEX
* END OF BLDKEY
         EJECT
GENLOC   DS    0H
*        THIS BLOCK ISSUES A VSAM GENERIC LOCATE TO BUILD AN IN-CORE
*        LIST OF DATASETS THAT BEGIN WITH THE SEARCH KEY
*        THERE IS NO GOOD DOCUMENTATION ON THE GENERIC
*        LOCATE IN THE LITERATURE. SEE THE CATALOG PLM FOR
*        WHAT LITTLE THERE IS. THE FORM BELOW WAS INFERRED
*        FROM SOME FICHE AND BY INTERCEPTING SVC 26 WITH DSS.
         MVC   GENFLAG,=X'05201100'
         XC    GENX1,GENX1
         XC    GENX2(12),GENX2
         LA    R1,NAME
         ST    R1,GENNAME
         GETMAIN R,LV=X'7FF8'
         ST    R1,GETADDR
         ST    R1,GENWORK
         MVC   0(4,R1),=X'7FF80004'
         LA    R1,GENPARM
         XR    R0,R0
         SVC   26
         LTR   R15,R15
         BNZ   ERROR4
         L     R1,GETADDR    GET VSAM CATLG RETURN AREA
         LA    R1,0(R1)       CLEAR HIGH BYTE
         LH    R2,2(R1)       GET NUMBER BYTES USED
         AR    R2,R1          ADD START ADDR
         ST    R2,LAST        SAVE LAST BYTE ADDR
         LA    R1,49(R1)      SKIP 4 BYTE PREFIX AND FIRST 45 BYTE ENTR
         ST    R1,NEXT        SAVE ADDR OF FIRST DSN ENTRY
* END OF GENLOC
         SPACE 10
CAMLOC   DS    0H
*        NOW DO A REGULAR CAMLIST NAME LOCATE FOR THE NEXT NON-VSAM
*        DATASET IN THE INCORE LIST
         XC    CAMLST(16),CAMLST
         LA    R1,KEY
         ST    R1,CAMLST+4
         LA    R1,VOLCNT
         ST    R1,CAMLST+12
         L     R1,NEXT
TEST     C     R1,LAST
         BNL   RET16          NO MORE DATASETS IN LIST
         CLI   0(R1),C'A'     IS IT NON-VSAM
         BE    S1
NOGO     LA    R1,45(R1)
         B     TEST
S1       TM    LREST,X'80'    IS THERE A LOWER QUALIFIER
         BO    S2             NO, SO GO LOCATE
         SPACE 5
TESTQUAL DS    0H
*        THIS CODE LOOKS FOR THE CHARACTER STRING BELOW THE
*        ASTERISK IN THE INDEX SEARCH KEY. THIS STRING MUST
*        BE SOMEWHERE IN THE DATASET NAME BELOW THE KEY OR
*        THE NAME IS REJECTED
         LA    R2,1(R1)
         AH    R2,LKEY        SKIP GENERIC KEY CHARS
         LH    R3,LREST       GET # CHARS-1 IN REST
         LA    R4,44
         SR    R4,R3
         SH    R4,LKEY        R4=# CHARS BELOW KEY + 1
COMP     EX    R3,COMPAR
         BE    S2
         LA    R2,1(R2)
         BCT   R4,COMP
         B     NOGO
COMPAR   CLC   REST(0),0(R2)
* END OF TESTQUAL
         SPACE 5
S2       DS    0H
*        NOW TO ISSUE NORMAL LOCATE BY NAME AND RETURN INFORMATION
*        ACCORDING TO DESCRIPTION OF PARAMETERS IN LEADING DOCUMENT
         MVC   KEY,1(R1)      COPY DSN
         LA    R1,45(R1)      PT TO NXT DSN
         ST    R1,NEXT        SAVE FOR NXT TIME
         LA    R1,CAMLST
         XR    R0,R0
         SVC   26             LOCATE BY NAME
         L     R2,INPARM      NOW GET PASSED PARM LIST
         LM    R2,R3,4(R2)    PICK UP 2ND & 3RD USER PARMS
         MVC   0(44,R2),KEY   SAVE DSN
         MVC   0(6,R3),SER    SAVE VOL
         TM    DEVT+2,X'20'   IS THIS DISK
         BZ    ERROR8         NO, PASS 8 RETURN CODE
         CLI   VOLCNT+1,1     IS IT MULTI-VOL
         BNE   ERROR12        YES, PASS 12 RETURN CODE
* END OF CAMLOC
         SPACE 10
*VARIOUS RETURNS
RETN     SR    R15,R15
         B     RC
ERROR4   LA    R15,4
         B     RC
ERROR8   LA    R15,8
         B     RC
ERROR12  LA    R15,12
         B     RC
RET16    FREEMAIN R,LV=X'7FF8',A=GETADDR
         LA    R15,16
         B     RC
ERROR20  LA    R15,20
RC       L     R1,INPARM
         TM    12(R1),X'80'
         BO    EXIT
         L     R1,16(R1)
         ST    R15,0(R1)
EXIT     L     R13,4(R13)
         ST    R15,16(R13)
         L     R1,8(R13)
         FREEMAIN R,LV=LSECT,A=(1)
         LM    R14,R12,12(R13)
         BR    R14
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LTORG
DSASECT  DSECT
         DS    18A
GENPARM  DS    0F            GENERIC LOCATE PARM AREA
GENFLAG  DS    F
GENNAME  DS    A
GENX1    DS    A
GENWORK  DS    A
GENX2    DS    3A
KEYLEN   DS    0H
         DS    X
NAME     DS    X
KEY      DS    CL44
INPARM   DS    A             SAVE R1 UPON ENTRY TO LOCINDEX
CAMLST   DS    4A
         DS    0D
LSECT    EQU   *-DSASECT
         SPACE 10
GETSECT  DSECT               GETMAINED VSAM WORK AREA
GETLEN   DS    H             LENGT OF AREA
GETUSED  DS    H             AMOUNT ALLOCATED CURRENTLY TO DATA
GETENTY  DS    0CL45         FIRST ELEMENT OF DSN ARRAY
GETTYPE  DS    C             TYPE FLAG ('A'=NONVSAM)
GETNAME  DS    CL44          DSN
         SPACE 10
WORKSECT DSECT               WORK AREA PASSED AS PARM
GETADDR  DS    A             ADDRESS OF GETMAINED VSAM WORK AREA
TRTAB    DS    0CL256
VOLCNT   DS    H
DEVT     DS    XL4
SER      DS    CL6
SEQ      DS    H
         DS    CL251
OINDEX   DS    CL44          PREVIOUS VALUE OF FIRST PARM
REST     DS    CL44          LOW QUALIFIER COMPARE STRING
NEXT     DS    A             ADDRESS OF NEXT DSN IN INCORE TABLE
LAST     DS    A             ADDRESS OF BYTE AFTER END OF DSNLIST
LKEY     DS    H             LENGTH OF GENERIC KEY
NOREST   DS    0B            FLAG IF 'REST' IS EMPTY
LREST    DS    H             LENGTH OF REST
         END
