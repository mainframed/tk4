         PRINT ON,GEN
         MACRO
         PROLOG
**********************************************************************
*
*        THIS IS THE SPF SYSOUT UTILITY SUBROUTINE.  IT PROVIDES
*        BASIC SEARCH/LOCATE SUPPORT FOR BOTH SPF/TSO AND BATCH
*        PROCESSING FOR THE SYSOUT BROWSE SUBSYSTEM.
*
*        THIS UTILITY SUBROUTINE IS PASSED A LIST OF 9 POINTERS AS
*        PARM INFORMATION AS FOLLOWS:
*
*        1)  JOBNAME    ADDRESS OF AN EIGHT BYTE FIELD WHICH CONTAINS
*                       THE JOBNAME FOR WHICH SYSOUT IS TO BE LOCATED/
*                       COPIED.  IF THIS POINTER IS ZERO OR THE AREA
*                       IT POINTS TO IS NULL, JOBNAME IS NOT USED.
*        2)  JOBNUMBER  ADDRESS OF A FIVE CHARACTER FIELD WHICH
*                       CONTAINS THE JES2 JOB NUMBER OF THE JOB FOR
*                       WHICH SYSOUT IS TO BE LOCATED/COPIED (LEFT
*                       JUSTIFIED). IF THIS POINTER IS ZERO OR THE
*                       AREA IT POINTS TO IS NULL, JOBNUM IS NOT USED.
*        3)  DATE       ADDRESS OF A TEN(10)CHARACTER FIELD WHICH
*                       CONTAINS THE DATE THE ABOVE JOB WAS PROCESSED
*                       IN THE FORM 'MM/DD/YYYY' 'MM/DD' OR ZERO.
*                       IF NOT USED, THE FIRST OCCURRANCE OF THE JOB
*                       WILL BE USED TO SATISFY THE REQUEST.
*        4)  TIME       ADDRESS OF AN EIGHT CHARACTER FIELD WHICH
*                       CONTAINS THE TIME THE ABOVE JOB WAS PROCESSED
*                       IN THE FORM 'HH:MM:SS', OR ZERO.
*                       IF NOT USED, THE FIRST OCCURRANCE OF THE JOB
*                       WILL BE USED TO SATISFY THE REQUEST.
*        5)  DDNAME     THE DD NAME OF THE PRE-ALLOCATED FILE INTO
*                       WHICH THE JOBS SYSOUT IS TO BE COPIED.
*                       IF THE DCB ATTRIBUTES FOUND CONFLICT WITH
*                       THOSE REQUIRE, THEY WILL BE OVERRIDDEN.
*        6)  QUALIFIER  THE ADDRESS OF A FIELD UP TO 21 CHARACTERS IN
*                       LENGTH (LEFT JUSTIFIED) WHICH CONTAINS THE
*                       SOUT JOURNAL DATASET QUALIFIER.  THE BELOW
*                       LISTED DATASETS WILL BE PREFIXED WITH THIS
*                       QUALIFIER FOR ALLOCATION VIA SVC 99.
*                       1) DSNAME.QUALIFIER    .JOURNAL
*                       2) DSNAME.QUALIFIER    .ACTIVE
*                       3) DSNAME.QUALIFIER    .DAILY.DYYYMMDD.THHMM
*                       4) DSNAME.QUALIFIER    .ARCHIVE.DYYYMMDD.THHMM
*        7)  FLAG BYTE  THE ADDRESS OF A FLAG BYTE USED FOR AS A
*                       COMMUNICATION VEHICLE BETWEEN THIS ROUTINE
*                       CALLERS.  INDICATORS ARE AS FOLLOWS:
*                       X'01' CALLER IS FOR TSO (TPUTS WILL BE ISSUED)
*                       X'02' REQUEST IS FOR JOB LIST
*                       X'04' ALLOW AUTHORIZED MOUNT VIA DYNA-ALLOC
*                             (USER IS AUTHORIZED)
*        8)  DATE LIMIT IS THE DATE WHICH WILL BE USED FOR A LIST
*                       OF JOBS THAT MATCH THE JOB NAME ABOVE.
*                       FORMAT IS  "MM" , 'MM/DD' MM/DD/YYYY'
*                       IT IS USED TO LIST JOBS RUN ON OR AFTER
*                       THAT DATE. IF BLANK, ALL JOBS ARE LISTED
*        9)  QUALIFIER  THE ADDRESS OF A FIELD UP TO 25 CHARACTERS IN
*                       LENGTH (LEFT JUSTIFIED) WHICH CONTAINS THE OLD
*                       SOUT JOURNAL DATASET QUALIFIER.  IT WILL BE
*                       USED DURING THE CONVERSION FROM THE OLD SYSTEM.
*                       FOR CONVERSION; AND IF YOU USED A DIFFERENT
*                       QUALIFIER THAN #6 ABOVE, THIS QUALIFIER WILL
*                       BE PREFIXED TO THE "ARCHIVE.GNNNNVNN" DATASET.
*
*        ATTRIBUTES: NOT REENTRANT
*
*        REGISTERS USED:
*            R0 - WORK
*            R1 - WORK
*            R2 - FLAG REGISTER POINTER
*            R3 - PARM LIST POINTER
*            R4 - ------ CURRENT OUTPUT RECORD POINTER
*            R5 - ------ CURRENT INPUT RECORD POINTER
*            R6 - ------ BSAM RECORD MANAGMENT REGS
*            R7 - ------ BSAM RECORD MANAGMENT REGS
*            R8 - BAL REGISTER
*            R9 - RETURN CODE (INITIALLY CLEARED)
*           R10 - (1ST) PARM VALUE POINTER (THEN) SOUT DCB POINTER
*           R11 - BASE
*           R12 - BASE
*           R13 - SAVE AREA
*           R14 - WORK
*           R15 - WORK
*
*        RETURN CODES:
*             0 - NORMAL RETURN (REQUESTED JOB LOCATED AND COPIED)
*             4 - JOB NOT FOUND WITHIN THE CONTEXT DEFINED
*             8 - OPEN FAILURE FOR THE PASSED OUTPUT FILE
*            12 - INVALID PARAMETER PASSED
*            16 - DYNAMIC ALLOCATION FAILED FOR THE JOURNAL FILE
*            20 - EXPANSION FAILED
*            24 - JOURNAL FILE READ ERROR
*            28 - OPEN FAILURE FOR THE JOURNAL FILE
*            32 - OPEN FAILURE FOR THE INPUT SOUT FILE
*            36 - DYNAMIC ALLOCATION FAILED FOR THE INPUT FILE
*
**********************************************************************
         MEND
         PRINT ON
***********************************************************************
*
*        PROCESS INPUT PARM DATA AND PREPARE FOR DYNAMIC ALLOCATION
*
***********************************************************************
SOUTSUB  $PROLOG R12,R11
         SR    R9,R9              CLEAR RETCODE REG
         LR    R3,R1              COPY PARM LIST ORIGIN
         L     R2,24(R3)          ADDRESS OF USER FLAGS
         USING FLAG,R2            ADDRESSABILTY
         ICM   R10,15,0(R3)       GET JOBNAME POINTER
         BZ    EXIT12             ERROR - NEED JOBNAME
         CLI   0(R10),C' '        IS IT NULLS?
         BE    EXIT12             ERROR - NEED JOBNAME
         CLI   0(R10),X'00'       IS IT NULLS?
         BE    EXIT12             ERROR - NEED JOBNAME
         LA    R15,8              SET LOOP CONTROL
         LR    R14,R10            COPY FIELD ADDRESS
CHKSIZE0 CLI   0(R14),C' '        END OF FIELD?
         BE    ENDSIZE0           YES, CONTINUE
         CLI   0(R14),X'00'       END OF FIELD?
         BE    ENDSIZE0           YES, CONTINUE
         LA    R14,1(R14)         BUMP TO NEXT CHARACTER
         BCT   R15,CHKSIZE0       CHECK NEXT CHARACTER
ENDSIZE0 SR    R14,R10            GET DIFFERENCE (FIELD SIZE)
         BNP   EXIT12             ERROR IF NOT POSITIVE
         LR    R1,R14             COPY SIZE OF ORIGIN DATA
         BCTR  R1,R0              DECREMENT FOR EXECUTE
         LA    R14,0(R10,R1)      ADDRESS OF LAST CHARACTER
         CLI   0(R14),C'*'        LAST CHAR ASTERISK?
         BNE   SKIPALL            YES, NOT AN 'ALL' REQUEST
         BCTR  R1,R0              DECREMENT FOR EXECUTE
         STH   R1,JOBNLEN         SAVE LENGTH FOR COMPARE
         EX    R1,MVEJN           MOVE JOBNAME LESS *
         AH    R1,=H'1'           BUMP UP 1 FOR MODCB
         MODCB RPL=JOURNRPL,KEYLEN=(R1),OPTCD=(GEN)
         B     SETJNSW
MVEJN    MVC   FULLJN(0),0(R10)   MOVE JOBNAME(LESS *) TO VSAM KEY
SKIPALL  MVC   FULLJN,0(R10)      MOVE 8 BYTE JOBNAME TO VSAM KEY
SETJNSW  OI    OPT,JN             INDICATE JOB NAME SPECIFIED
         TM    FLAG,LST           IS THIS LIST ONLY
         BNZ   NOTIME             YES - BYPASS DATE AND TIME CHECK
         ICM   R10,15,4(R3)       GET JOB NUMBER POINTER IF ANY
         BZ    SKIPJOB#           NOT SPECIFIED, CONTINUE
         CLI   0(R10),C' '        IS IT NULLS?
         BE    SKIPJOB#           YES, NOT SPECIFIED
         CLI   0(R10),X'00'       IS IT NULLS?
         BE    SKIPJOB#           YES, NOT SPECIFIED
         OI    OPT,J#             INDICATE JOB NUMBER SPECIFIED
         LA    R15,5              SET LOOP CONTROL
         LR    R14,R10            COPY FIELD ADDRESS
CHKSIZE1 CLI   0(R14),C' '        END OF FIELD?
         BE    ENDSIZE1           YES, CONTINUE
         CLI   0(R14),X'00'       END OF FIELD?
         BE    ENDSIZE1           YES, CONTINUE
         LA    R14,1(R14)         BUMP TO NEXT CHARACTER
         BCT   R15,CHKSIZE1       CHECK NEXT CHARACTER
ENDSIZE1 SR    R14,R10            GET DIFFERENCE (FIELD SIZE)
         BNP   EXIT12             ERROR IF NOT POSITIVE
         LR    R1,R14             COPY SIZE OF ORIGIN DATA
         BCTR  R1,R0              DECREMENT FOR EXECUTE
         LA    R14,JOBNUM(R15)    ADDRESS OF RECEIVING FIELD
         LR    R15,R10            ADDRESS OF ORIGIN FIELD
         EX    R1,MOVE            MOVE JOB NUMBER FIELD
         MVC   FULLJ#,JOBNUM      MOVE JOBNUMBER TO VSAM KEY
SKIPJOB# ICM   R10,15,8(R3)       GET DATE PARM IF ANY
         BZ    NODATE             NONE PASSED, SKIP IT
         CLI   0(R10),C' '        IS IT NULLS?
         BE    NODATE             YES, NOT SPECIFIED
         CLI   0(R10),X'00'       IS IT NULLS?
         BE    NODATE             YES, NOT SPECIFIED
         CLI   2(R10),C'/'        VALID SYNTAX?
         BNE   EXIT12             NO, BAD PARM
         CLI   5(R10),C'/'        VALID SYNTAX?
         BNE   EXIT12             NO, BAD PARM
         CLI   8(R10),C' '        VALID SYNTAX?
         BE    EXIT12             NO, BAD PARM
         MVC   SDATE(4),6(R10)        SAVE DATE FIELD
         MVC   SDATE+4(2),0(R10)        SAVE DATE FIELD
         MVC   SDATE+6(2),3(R10)        SAVE DATE FIELD
         PACK  PACK5,SDATE          PACK DATE
         ZAP   FULLDT,=P'099999999' SET UP FOR REVERSAL
         SP    FULLDT,PACK5       REVERSE DATE FOR VSAM ORDER
         OI    OPT,DT             INDICATE DATE OPTION SPECIFIED
NODATE   ICM   R10,15,12(R3)      GET TIME PARM IF ANY
         BZ    NOTIME             NONE PASSED, SKIP IT
         CLI   0(R10),C' '        IS IT NULLS?
         BE    NOTIME             YES, NOT SPECIFIED
         CLI   0(R10),X'00'       IS IT NULLS?
         BE    NOTIME             YES, NOT SPECIFIED
         CLI   2(R10),C':'        VALID SYNTAX?
         BNE   EXIT12             NO, BAD PARM
         CLI   5(R10),C':'        VALID SYNTAX?
         BNE   EXIT12             NO, BAD PARM
         MVC   STIME(2),0(R10)        SAVE DATE FIELD
         MVC   STIME+2(2),3(R10)        SAVE DATE FIELD
         MVC   STIME+4(2),6(R10)        SAVE DATE FIELD
         PACK  PACK4,STIME        PACK TIME
         ZAP   FULLTM,=P'0999999' SETUP FOR TIME REVERSAL
         SP    FULLTM,PACK4       REVERSE TIME FOR VSAM ORDER
         OI    OPT,TM             INDICATE TIME OPTION SPECIFIED
NOTIME   ICM   R10,15,16(R3)      ADDRESS OF DDNAME
         BZ    EXIT12             NONE, ERROR
         MVC   UTILDCB+DCBDDNAM-IHADCB(8),0(R10) MOVE DDNAME TO DCB
         ICM   R10,15,20(R3)      ADDRESS OF DSNAME QUALIFIER
         BZ    EXIT12             NONE, ERROR
         LA    R15,21             SET LOOP CONTROL
         LR    R14,R10            COPY FIELD ADDRESS
CHKSIZE2 CLI   0(R14),C' '        END OF FIELD?
         BE    ENDSIZE2           YES, CONTINUE
         CLI   0(R14),X'00'       END OF FIELD?
         BE    ENDSIZE2           YES, CONTINUE
         LA    R14,1(R14)         BUMP TO NEXT CHARACTER
         BCT   R15,CHKSIZE2       CHECK NEXT CHARACTER
ENDSIZE2 SR    R14,R10            GET DIFFERENCE (FIELD SIZE)
         BNP   EXIT12             ERROR IF NOT POSITIVE
         ST    R14,SUFFIXLN       SAVE LENGTH FOR LATER UPDATE
         LR    R1,R14             COPY SIZE OF QUALIFER
         BCTR  R1,R0              DECREMENT FOR EXECUTE
         LA    R14,JRNDSN         ADDRESS OF RECEIVING FIELD
         LR    R15,R10            ADDRESS OF ORIGIN FIELD
         EX    R1,MOVE            MOVE QUALIFIER FOR DYNALLOC
         LA    R14,1(R1,R14)      END OF QUALIFIER
         ST    R14,SUFFIXAD       SAVE ADDRESS OF SUFFIX
         MVC   0(8,R14),=CL8'.JOURNAL' ADD SUFFIX
         L     R0,SUFFIXLN        GET LENGTH OF SUFFIX
         AH    R0,=H'8'           ADD LENGTH OF '.JOURNAL' SUFFIX
         STH   R0,JRNDSNL         SAVE FOR DYNALLOC
*
         ZAP   DATELIM,=P'099999999' SETUP TIME LIMIT
         TM    FLAG,LST           ARE WE DOING LIST?
         BZ    NODATELM           NO - BYPASS DATE LIMIT
         ICM   R10,15,28(R3)      GET DATE LIMIT PARM IF ANY
         BZ    NODATELM           NONE PASSED, SKIP IT
         CLI   0(R10),C' '        IS IT NULLS?
         BE    NODATELM           NONE PASSED,
         CLI   0(R10),X'00'       IS IT NULLS?
         BE    NODATELM           YES, NOT SPECIFIED
         CLI   2(R10),C' '        VALID SYNTAX?
         BE    MONLY              YES - MONTH ONLY
         CLI   2(R10),C'/'        VALID SYNTAX?
         BNE   EXIT12             NO, BAD PARM
MONLY    MVC   HDATEL+4(2),0(R10) MOVE IN MONTH
         CLI   3(R10),C' '        IS DAY SPECIFIED?
         BE    NODAYL             NO - SET DEFAULT
         MVC   HDATEL+6(2),3(R10) MOVE IN DAY
         B     YRLIM
NODAYL   MVC   HDATEL+6(2),=C'00' SET DAY TO ZERO
YRLIM    EQU   *
         CLI   6(R10),C' '        IS YEAR SPECIFIED?
         BE    HOLEYR             NO - NEED WHOLE YEAR
         CLI   8(R10),C' '        IS IT FULL YEAR "YYYY"
         BE    PARTYR             NO - ONLY LAST 2
         MVC   HDATEL(4),6(R10)   MOVE IN FULL YEAR
         B     CVTDATE            BR TO PACK IT
PARTYR   MVC   HDATEL+2(2),6(R10) MOVE IN LAST 2
         MVC   HDATEL(2),=C'19'   SET "1900" DEFAULT
         CLC   6(2,R10),=C'75'    BEFORE 1975
         BH    CVTDATE            YES - GO TO CONVERT
         MVC   HDATEL(2),=C'20'   MUST BE YEAR 2000
         B     CVTDATE            GO TO CONVERT
HOLEYR   $STCK
         MVC   HDATEL(4),YEARDATE MOVE IN GOTTEN FULL YEAR
CVTDATE  PACK  PACK5,HDATEL       PACK IT
         ZAP   DATELIM,=P'099999999' SET UP FOR REVERSAL
         SP    DATELIM,PACK5      REVERSE DATE LIMIT FOR VSAM ORDER
NODATELM EQU   *
         TM    FLAG,LST           DOING LIST?
         BNZ   CHECKJRN           YES - PROCESS JOURNAL
         TM    OPT,JN+J#+DT+TM    HAVE FULL KEY
         BM    CHECKJRN           NO - GENERIC SEARCH REQUIRED
FULKEY   LA    R1,=F'22'          FULL KEY OF 22 BYTES
         MODCB RPL=JOURNRPL,OPTCD=(FKS)  ALTER RPL
*
         EJECT
***********************************************************************
*
*        DYNAMICALLY ALLOCATE THE VSAM JOURNAL FILE
*        AND SEARCH FOR THE JOB AS QUALIFIED.
*
***********************************************************************
CHECKJRN LA    R1,DAJOURN         GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE JOURNAL FILE
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   EXIT16             NO - ERROR
OPENJRN  LA    R10,JOURNACB       SET UP ADDRESSING
         USING IFGACB,R10
         MVC   ACBDDNM,JRNDDN      MOVE DDNAME
         OPEN  (JOURNACB)         OPEN THE JOURNAL ACB
         LTR   R15,R15            DID IT OPEN?
         BNZ   EXIT28             INDICATE OPEN FAILURE
FRSTJRN  GET   RPL=JOURNRPL       GET JOURNAL RECORD
         LTR   R15,R15            RETURN CODE 0 FROM VSAM
         BZ    MODRPL             YES MODCB THE RPL
         B     CHKEOF             GO CHECK EOF
MODRPL   MODCB RPL=JOURNRPL,OPTCD=SEQ   HAVE POSITION -SEQ AFTER THIS
         B     CKJOB              GO CHECK IF JOBNAME MATCHES
NEXTJRN  GET   RPL=JOURNRPL       GET NEXT JOURNAL RECORD
         LTR   R15,R15            RC = 0
         BZ    CKJOB              GO CHECK JOBNAME
*        SHOWCB RPL=JOURNRPL,AREA=FDBAREA,FIELDS=FDBK,LENGTH=4
CHKEOF   C     R15,=F'8'          EOF
         BE    ENDJOURN           YES- BR TO END PRCOCESSING
         B     EXIT24             MAJOR VSAM ERROR
CKJOB    LH    R15,JOBNLEN        GET LENGTH OF NAME
         EX    R15,COMPJN         IS THIS A CANDIDATE?
         BNE   ENDJOURN           NO, END JOURNAL SEARCH
         B     CHKOPT             CHECK DATE LIMIT
COMPJN   CLC   JOURNJN(0),FULLJN  IS THIS A CANDIDATE?
CHKOPT   TM    FLAG,LST           IS THIS LIST REQUEST?
         BZ    NORMAL             NO, CONTINUE
CHKDATE  CP    DATELIM,JOURNDT    IS IT WITHIN DATE LIMIT
         BL    NEXTJRN            NO - GET NEXT
SETFIND  OI    OPT,FND            INDICATE DATA FOUND
         MVC   LISTJN,JOURNJN     MOVE IN JOBNAME
*
         MVC   PACK5,=P'099999999' SETUP FOR UNPACKING DATE
         SP    PACK5,JOURNDT      REVERSE DATE
         UNPK  UNPKAREA,PACK5      UNPACK DATE
         OI    UNPKAREA+8,X'F0'    CHANGE LAST BYTE
         MVC   LISTDATE(2),UNPKAREA+5 MOVE IN MONTH
         MVI   LISTDATE+2,C'/'
         MVC   LISTDATE+3(2),UNPKAREA+7 MOVE IN DAY
         MVI   LISTDATE+5,C'/'
         MVC   LISTDATE+6(4),UNPKAREA+1 MOVE IN FULL YEAR
*
         MVC   PACK4,=P'0999999' SETUP FOR UNPACKING TIME
         SP    PACK4,JOURNTM      REVERSE TIME
         UNPK  UNPKAREA,PACK4     UNPACK TIME
         OI    UNPKAREA+8,X'F0'   CHANGE LAST BYTE
         MVC   LISTTIME(2),UNPKAREA+3 MOVE IN HOURS
         MVI   LISTTIME+2,C':'
         MVC   LISTTIME+3(2),UNPKAREA+5 MOVE IN MINUTES
         MVI   LISTTIME+5,C':'
         MVC   LISTTIME+6(2),UNPKAREA+7 MOVE IN SECONDS
*
         MVC   LISTJT,JOURNJT     MOVE IN JOB TYPE (STC JOB TSU)
         MVC   LISTJ#,JOURNJ#     MOVE IN NUMBER
         MVC   LISTMC,JOURNMC     MOVE IN MSGCLASS
*
         LA    R14,DAYTABLE       R14 TO DAYTABLE
DAYLOOP  CLI   0(R14),X'FF'       IS IT END
         BE    MOVEDAY            DONE
         CLC   JOURNDAY(1),0(R14) DOES DAY MATCH
         BE    MOVEDAY            YES - CONVERT
         LA    R14,4(R14)         BUMP R14
         B     DAYLOOP            TRY AGAIN
MOVEDAY  MVC   LISTDAY,1(R14)     MOVE IN WHAT DAT (MON TUE ETC.)
*
         MVC   LISTLINE,LINEPAT   SET UP LINE COUNT PATTERN
         EDMK  LISTLINE,JOURNLIN  CONVERT LINE COUNT
         CLI   LISTLINE+9,C' '    ARE THERE LINES?
         BNE   MOVEDEVT           YES - OK
         MVI   LISTLINE+9,C'?'    PUT IN ? - ACTIVE OR OLD FILES
*
MOVEDEVT CLI   JOURNDEV,C'T'      IS DEVICE TAPE
         BE    LISTAPE            YES - BR
         MVC   LISTDEVT,=C'ONLINE' MUST BE ONLINE (DISK)
         B     LISTREST
LISTAPE  MVC   LISTDEVT,=C'TAPE  ' SET TO TAPE
LISTREST MVC   LISTADR,JOURNADR   MOVE IN ACTIVE DAILY SW
         MVC   LISTSTP,=CL15' '   CLEAR IT
         MVC   HSTAMP,STPATRN     MOVE IN PATTERN
         EDMK  HSTAMP,JOURNSTP    UNPACK DATE/TIME STAMP
         CLC   HSTAMP+1(11),HIGH9 IS IT HIGH VALUES
         BE    WRITELA            MUST BE ACTIVE
         CLC   HSTAMP+1(5),HIGH9    IS IT HIGH VALUES
         BE    ITSGDG
         MVC   LISTSTP(2),=C'.D'  MOVE IN CONSTANT
         MVC   LISTSTP+2(7),HSTAMP+1 MOVE IN DATE
         MVC   LISTSTP+9(2),=C'.T'  MOVE IN CONSTANT
         MVC   LISTSTP+11(4),HSTAMP+8 MOVE IN TIME
         B     WRITELA
ITSGDG   MVC   LISTSTP(2),=C'.G'  MOVE IN CONSTANT
         MVC   LISTSTP+2(4),HSTAMP+6 MOVE IN GDG
         MVC   LISTSTP+6(1),=C'V'  MOVE IN CONSTANT
         MVC   LISTSTP+7(2),HSTAMP+10 MOVE IN VERSION
*
WRITELA  EQU   *
         LA    R4,LISTREC         ADDRESS OF RECORD
         BAL   R8,PUTUTIL         WRITE RECORD
         B     NEXTJRN            GET NEXT RECORD
NORMAL   TM    OPT,JN+J#+DT+TM    FULL KEY SPECIFIED
         BO    SETFND             YES - FOUND REC
         CLC   JOURNJN,FULLJN     IS THIS A CANDIDATE?
         BNE   NEXTJRN            NO, SKIP TO NEXT JOURNAL RECORD
COMPDT   TM    OPT,DT             IS JOB DATE ACTIVE ????
         BZ    COMPTM             NO, CHECK TIME
         CP    JOURNDT,FULLDT     DATE MATCHES ????
         BNE   NEXTJRN            NO, SKIP TO NEXT JOURNAL RECORD
COMPTM   TM    OPT,TM             IS JOB TIME ACTIVE ????
         BZ    COMPJ#             NO, CHECK JOB NUMBER
         CP    JOURNTM,FULLTM     TIME MATCHES ???
         BNE   NEXTJRN            NO, SKIP TO NEXT JOURNAL RECORD
COMPJ#   TM    OPT,J#             IS JOBNUM QUALIFIACTION ACTIVE?
         BZ    SETFND             NO, ASSUME MATCH
         CLC   JOURNJ#,JOBNUM     IS THIS THE RIGHT ONE?
         BNE   NEXTJRN            NO, SKIP TO NEXT JOURNAL RECORD
SETFND   OI    OPT,FND            INDICATE MATCH SATISFIED
ENDJOURN CLOSE (JOURNACB)         CLOSE JOURNAL FILE
SKIPALOC TM    FLAG,LST           IS THIS A LIST REQUEST?
         BZ    NOTLIST            NO, SKIP LIST PROCESSING
         B     NOTFND             IS THIS A LIST FOR ALL JOURNALS
NOTLIST  TM    OPT,FND            WAS A MATCH FOUND?
         BO    PROCESS            YES, PROCESS SYSOUT DATASET
         B     NOTFND             SEARCH ARCHIVE (NOT FOUND)
         EJECT
***********************************************************************
*
*        DYNAMICALLY ALLOCATE THE REQUIRED SYSOUT DATASET
*        AND SEARCH/COPY THE JOB AS DEFINED IN THE JOURNAL
*
***********************************************************************
*
PROCESS  MVC   PACK5,=P'099999999' SETUP FOR UNPACKING DATE
         SP    PACK5,JOURNDT      REVERSE DATE
         UNPK  UNPKAREA,PACK5      UNPACK DATE
         OI    UNPKAREA+8,X'F0'    NUMERIC LAST BYTE
         MVC   LISTDATE(2),UNPKAREA+5 SET UP
         MVI   LISTDATE+2,C'/'             DATE
         MVC   LISTDATE+3(2),UNPKAREA+7       FOR
         MVI   LISTDATE+5,C'/'                   LIST TO BE PASSED
         MVC   LISTDATE+6(2),UNPKAREA+3            TO ISPF
*
         MVC   PACK4,=P'0999999' SETUP FOR UNPACKING DATE
         SP    PACK4,JOURNTM      REVERSE DATE
         UNPK  UNPKAREA,PACK4     UNPACK TIME
         OI    UNPKAREA+8,X'F0'
         MVC   LISTTIME(2),UNPKAREA+3  SET UP
         MVI   LISTTIME+2,C':'              TIME
         MVC   LISTTIME+3(2),UNPKAREA+5        TO BE PASSED
         MVI   LISTTIME+5,C':'                     TO
         MVC   LISTTIME+6(2),UNPKAREA+7             ISPF
         CLI   JOURNADR,C'O'      IS DATA FROM OLD SYSTEM
         BE    OLDDATA            YES - NEED OLF QUALIFIER
         ICM   R10,15,20(R3)      ADDRESS OF NEW DSN PREFIX
         LA    R15,21             MAX LENGTH OF NEW
         B     DATANM
OLDDATA  ICM   R10,15,32(R3)      ADDRESS OF OLD DSN PREFIX
         BZ    EXIT12             NONE ERROR
         LA    R15,25             MAX LENGTH OF OLD
DATANM   LR    R14,R10            COPY FIELD ADDRESS
CHKSIZE3 CLI   0(R14),C' '        END OF FIELD?
         BE    ENDSIZE3           YES, CONTINUE
         CLI   0(R14),X'00'       END OF FIELD?
         BE    ENDSIZE3           YES, CONTINUE
         LA    R14,1(R14)         BUMP TO NEXT CHARACTER
         BCT   R15,CHKSIZE3       CHECK NEXT CHARACTER
ENDSIZE3 SR    R14,R10            GET DIFFERENCE (FIELD SIZE)
         BNP   EXIT12             ERROR IF NOT POSITIVE
         ST    R14,DATASUFL       SAVE LENGTH FOR LATER UPDATE
         LR    R1,R14             COPY SIZE OF QUALIFER
         BCTR  R1,R0              DECREMENT FOR EXECUTE
         LA    R14,SOUTDSN        ADDRESS OF RECEIVING FIELD
         LR    R15,R10            ADDRESS OF ORIGIN FIELD
         EX    R1,MOVE            MOVE QUALIFIER FOR DYNALLOC
         LA    R14,1(R1,R14)      END OF QUALIFIER
         ST    R14,DATASUFA       SAVE ADDRESS OF SUFFIX
         CLI   JOURNADR,C'A'      IS THIS ACTIVE FILE
         BE    MVEACT
         CLI   JOURNADR,C'D'      IS THIS DAILY FILE
         BE    MVEDAILY
         CLI   JOURNADR,C'R'      IS THIS ARCHIVE FILE
         BE    MVEARCH
         B     MVEARCH            ##### - OLD=ARCHIVE
*        B     MVEDAILY           ##### - OLD=DAILY
MVEARCH  MVC   0(8,R14),=CL8'.ARCHIVE' ADD SUFFIX
         L     R0,DATASUFL        GET LENGTH OF SUFFIX
         AH    R0,=H'8'           ADD LENGTH OF '.ARCHIVE' SUFFIX
         LA    R14,8(R14)         BUMP R14
         B     CHKGDG
MVEACT   MVC   0(7,R14),=CL7'.ACTIVE' ADD SUFFIX
         L     R0,DATASUFL        GET LENGTH OF SUFFIX
         AH    R0,=H'7'           ADD LENGTH OF '.ACTIVE' SUFFIX
         LA    R14,7(R14)         BUMP R14
         B     CHKGDG
MVEDAILY MVC   0(6,R14),=CL6'.DAILY' ADD SUFFIX
         L     R0,DATASUFL        GET LENGTH OF SUFFIX
         AH    R0,=H'6'           ADD LENGTH OF '.DAILY' SUFFIX
         LA    R14,6(R14)         BUMP R14
         B     CHKGDG
CHKGDG   MVC   HSTAMP,STPATRN     MOVE IN PATTERN
         EDMK  HSTAMP,JOURNSTP    UNPACK DATE/TIME STAMP
         CLC   HSTAMP+1(11),HIGH9 IS IT HIGH VALUES
         BE    STLEN              MUST BE ACTIVE
         CLC   HSTAMP+1(5),HIGH9    IS IT HIGH VALUES
         BE    MVEOGDG
         MVC   0(2,R14),=C'.D'    MOVE IN CONSTANT
         MVC   2(7,R14),HSTAMP+1  MOVE IN DATE
         MVC   9(2,R14),=C'.T'    MOVE IN CONSTANT
         MVC   11(4,R14),HSTAMP+8 MOVE IN TIME
         AH    R0,=H'15'          ADD LENGTH OF DATE/TIME STAMP
         B     STLEN
MVEOGDG  MVC   0(2,R14),=C'.G'  MOVE IN CONSTANT
         MVC   2(4,R14),HSTAMP+6 MOVE IN GDG
         MVC   6(1,R14),=C'V'  MOVE IN CONSTANT
         MVC   7(2,R14),HSTAMP+10 MOVE IN VERSION
         AH    R0,=H'9'           ADD LENGTH OF '.G0000V00' SUFFIX
STLEN    STH   R0,SOUTDSNL        SAVE FOR DYNALLOC
*
         TM    FLAG,AUTH          SHOULD WE REQUEST AUTHORIZED MOUNT
         BNO   CHKTSO             NO, CONTINUE
         OI    SOUTFLGS,X'01'     ALLOW TAPE MOUNT FOR SYSOUT DATASET
*                                 (MUST BE AUTHORIZED FOR THIS OPT)
         TM    FLAG,TSO           ARE WE TSO?
         BO    CHKTAPE            YES, BYPASS "WAIT" REQUEST
         OI    SOUTFLGS,X'D0'     ALLOW WAIT FOR TAPE/DEVICE
         B     NOMSG1             BR AROUND MESSAGES
CHKTSO   EQU   *
         TM    FLAG,TSO           ARE WE TSO
         BNO   NOMSG1             NO, BR AROUND MESSAGES
CHKTAPE  CLI   JOURNDEV,C'T'      IS THIS A TAPE DATASET
         BNE   NOMSG1             NO, MUST BE DISK DATA SET
         TPUT  WAITMSG,27         INFORM THE USER (MIGHT BE TAPE)
         TPUT  SOUTDSN,44         ALSO THE DSNAME
         TPUT  MOUNTMSG,30        ALSO THE DSNAME
NOMSG1   LA    R1,DASOUT          GET DYNAMIC ALLOCATION PARM
         SVC   99                 ALLOCATE SYSOUT DATASET (ACTIVE/ARCH)
         LTR   R15,R15            RETCODE = ZERO?
         BNZ   EXIT36             NO, ERROR RETURN
         TM    FLAG,TSO           ARE WE INTO THE ARCHIVE FOR TSO USER?
         BNO   NOMSG2             NO, NORMAL ALLOCATION
         CLI   JOURNDEV,C'T'      IS THIS A TAPE DATASET
         BNE   NOMSG2             NO, MUST BE DISK DATA SET
         TPUT  SRCHMSG,25         INFORM THE USER (MIGHT BE LONG)
NOMSG2   LA    R10,BSAMDCB        ASSUME BSAM ACCESS
         USING IHADCB,R10         INFORM THE ASSEMBLER
         CLC   JOURNTTR,=X'000000' IS THIS ZERO TTR? TAPE OR FIRST
*                                  FILE ON DISK DATASET
         BNE   USEBSAM            NO, THEN USE BSAM
         LA    R10,QSAMDCB        USE QSAM ACCESS FOR ARCHIVES
USEBSAM  MVC   DCBDDNAM,SOUTDDN   MOVE DDNAME
NEXTSOUT BAL   R8,GETSOUT         GET SYSOUT RECORD
         USING RECORD,R5          INFORM ASSEMBLER OF DSECT
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   CHKSEP1            YES- BR
         CLI   1(R5),X'89'        IS THIS A FULL RECORD SIZE
         BE    BUMPR5             YES - GO CHECK FOR SEPERATOR
         LA    R5,4(R5)           BUMP PAST PREFIX 4 BYTES
         B     NEXTSOUT           GET THE NEXT RECORD
BUMPR5   LA    R5,4(R5)           BUMP PAST PREFIX 4 BYTES
CHKSEP1  CLI   RECLIT,C'S'        COULD THIS BE SEPARATOR RECORD?
         BNE   NEXTSOUT           NO, SKIP RECORD
         CLC   RECLIT(24),SEP     COMPARE FOR SEPARATOR RECORD
         BNE   NEXTSOUT           NO, SKIP RECORD
         CLI   JOURNADR,C'A'      READING ACTIVE ???
         BNE   CHKSEP1A           NO - BYPASS PAD RECORD CHECK
         CLC   RECLIT+24(3),PADDING FOUND PAD RECORD FROM FORMAT
         BE    LASTBLK            YES - WARN THE REQUESTOR
*                                 NOT ALL DATA WRITTEN YET !!!!!
*
CHKSEP1A TM    DEVT@@@@,DEVT3480  ON 3480 TAPE
         BZ    CHKSEP1B
         TM    DEVT@@@@,MSG3480
         BO    CHKSEP1B
         MSGDISP RDY,DCB=(R10),TXT='LOCATE'
         OI    DEVT@@@@,MSG3480
CHKSEP1B CLC   RECJNAME,JOURNJN    JOBNAME MATCHES
         BNE   NEXTSOUT           NO, SKIP RECORD
         CLC   RECDATE,LISTDATE   DATE MATCHES
         BNE   NEXTSOUT           NO, SKIP RECORD
         CLC   RECTIME,LISTTIME TIME MATCHES
         BNE   NEXTSOUT           NO, SKIP RECORD
         CLC   RECJNUM+3(5),JOURNJ# JOB NUMBER MATCHES
         BNE   NEXTSOUT           NO, SKIP RECORD
         TM    DEVT@@@@,DEVT3480  ON 3480 TAPE
         BZ    CHKSEP1C
         MSGDISP RDY,DCB=(R10),TXT='GOT-IT'
CHKSEP1C MVC   NEWSEP2(53),34(R5) MOVE SEPARATOR DATA TO NEWSEP
         LA    R4,NEWSEP1         ADDRESS OF DUMMY SEP RECORD
         BAL   R8,PUTUTIL         WRITE RECORD OUT
         BAL   R8,GETSOUT         GET RECORD FOLLOWING 1ST SEPARATOR
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   CHKSEP2            YES- BR
         LA    R5,4(R5)           BUMP PAST 4 BYTE PREFIX
CHKSEP2  CLC   RECLIT(24),SEP     COMPARE FOR SEPARATOR RECORD
         BNE   COPY               NO, CONTINUE
         BAL   R8,GETSOUT         SKIP 2ND SEP (RECFM 'M')
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   COPY               YES - BR
         LA    R5,4(R5)           BUMP PAST 4 BYTE PREFIX
COPY     EQU   *
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   COPY2              YES- BR
         ICM   R15,15,COMPADDR    IS THERE A DE-COMPREESION ROUTINE
         BZ    COPY2              NO - BR AROUND
         SH    R5,=H'4'           GET TO BEGINNING OF RECORD
         MVC   CPRTYPE,=X'00000000' SET TO DECOMPRESS
         MVC   MAXLEN,=H'133'     MAX LENGTH FOR EXPAND
         ST    R5,CP2             ADDR OF INPUT RECORD
         LA    R5,4(R5)           BUMP PAST PREFIX
         LA    R1,PARMCPR         R1 = DECOMPRESS PARMS
         BALR  R14,R15            LINK TO DECOMPRESSION
         LTR   R15,R15            DECOMPRESSION OK
         BZ    COPY1              OK - CONTINUE
         B     COPY2              WRITE RECORD AS IS!
COPY1    LA    R4,UNCOMREC        R4 = DECOMPRESSED RECORD
         LA    R4,4(R4)           BUMP PAST 4 BYTE PREFIX
         B     COPY3              WRITE IT
COPY2    LR    R4,R5              COPY RECORD POINTER
COPY3    BAL   R8,PUTUTIL         COPY OUTPUT RECORD
         BAL   R8,GETSOUT         NEXT RECORD
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   CHKSEP3            YES - BR
         LA    R5,4(R5)           BUMP PAST PREFIX
CHKSEP3  CLI   RECLIT,C'S'        COULD THIS BE SEPARATOR RECORD?
         BNE   COPY               NO, COPY RECORD
         CLC   RECLIT(24),SEP     COMPARE FOR SEPARATOR RECORD
         BNE   COPY               NO, COPY RECORD
         CLI   JOURNADR,C'A'      READING ACTIVE ???
         BNE   CLOSEM             NO - GOT ALL THE DATA - CLOSE
         CLC   RECLIT+24(3),PADDING FOUND PAD RECORD FROM FORMAT
         BNE   CLOSEM             NO - GOT ALL THE DATA - CLOSE
         DROP  R5
*
LASTBLK  LA    R4,BLANKS          PUT OUT WARNING OF MISSING DATA
         BAL   R8,PUTUTIL         WRITE IT OUT
         LA    R4,NEEDLB          PUT OUT WARNING OF MISSING DATA
         BAL   R8,PUTUTIL         WRITE IT OUT
         B     CLOSEM             CLOSE THE FILES
*
NOTFND   TM    FLAG,LST           IS THIS LIST REQUEST?
         BZ    EXIT4              NO, MUST BE NORMAL SEARCH
         TM    OPT,FND            WAS ONE FOUND
         BO    CLOSEM             YES, THEN NORMAL COMPLETION
         B     EXIT4              NO, NOT FOUND MESSAGE
EXIT36   LA    R9,4(R9)           BUMP RETCODE
EXIT32   LA    R9,4(R9)           BUMP RETCODE
EXIT28   LA    R9,4(R9)           BUMP RETCODE
EXIT24   LA    R9,4(R9)           BUMP RETCODE
EXIT20   LA    R9,4(R9)           BUMP RETCODE
EXIT16   LA    R9,4(R9)           BUMP RETCODE
EXIT12   LA    R9,4(R9)           BUMP RETCODE
EXIT8    LA    R9,4(R9)           BUMP RETCODE
EXIT4    LA    R9,4(R9)           BUMP RETCODE
         TM    FLAG,TSO           IS THIS TSO ENVIRONMENT?
         BZ    FILLWTO            NO, MUST BE BATCH
         B     EXIT               ALL DONE
FILLWTO  L     R15,MSGTAB(R9)     USE RETCODE AS OFFSET TO MSG ADDRESS
         MVC   WTO+8(50),0(R15)   MOVE DATA FOR WTP
WTO      WTO   '                                                       *
                                ',ROUTCDE=11
CLOSEM   CLOSE (BSAMDCB,,QSAMDCB,,UTILDCB) INSURE DCBS ARE CLOSED
         ICM   R1,15,BUFFER       BUFFER ADDRESS TO FREE
         BZ    DELCPR             SKIP FREEMAIN
         FREEMAIN R,LV=32760,A=(1) FREE BSAM BUFFER
DELCPR   ICM   R1,15,COMPADDR     RESTORE COMPRESSION ADDR
         BZ    EXIT               NO COMPRESION ROUTINE - GET OUT
         DELETE EP=SOUTCPR        DELETE COMPRESSION SUBROUTINE
EXIT     EQU   *
         LR    R15,R9             SET RETURN CODE
         $EPILOG ,                RETURN TO CALLER
*
GETSOUT  TM    DCBOFLGS,X'10'     IS OUTPUT FILE OPENED YET?
         BO    SKIPOPEN           YES, CONTINUE
         OPEN  ((10),(INPUT))     OPEN THE SYSOUT INPUT FILE
         TM    DCBOFLGS,X'10'     DID IT OPEN?
         BZ    EXIT32             INDICATE OPEN FAILURE
         MVC   DEVTDD,SOUTDDN     SAVE DDNAME FOR DEVTYPE MACRO
         MVI   DEVT@@@@,X'00'     TURN OFF 3480 BITS
         DEVTYPE DEVTDD,DEVTAREA  GET THE DEVICE TYPE
         CLC   DEVTUCB,D3480FF    ON 3480 FULL FUNC
         BE    ON3480             YES - TURN ON SW
         CLC   DEVTUCB,D3480CP    ON 3480 COMPAT. MODE
         BNE   NOT3480            NO - BYPASS
ON3480   OI    DEVT@@@@,DEVT3480  TURN ON 3480 BIT
NOT3480  TM    DCBRECFM,X'80'     IS IT A VARIABLE RECORD
         BZ    VARI               YES - VARIABLE REC
         OI    FIXVAR,FIXREC      TURN ON FIXED SW
         B     CHKTTR
VARI     OI    FIXVAR,VARREC      TURN  ON VARIABLE SW
         BLDL  0,BLDLCOMP         ISSUE BLDL FOR COMPRESSION
         LTR   R15,R15            DOES IT EXIST
         BNZ   CHKTTR
         LOAD  EP=SOUTCPR         COMPRESSION SUBROUTINE
         ST    R0,COMPADDR        SAVE ADDR
         B     CHKTTR
*        MVC   UTILDCB+36(1),DCBRECFM COPY INPUT FILE RECFM
CHKTTR   CLC   JOURNTTR,=X'000000' IS THIS ZERO TTR?
         BE    GETQSAM            NO, USE QSAM
         GETMAIN R,LV=32760       GET A BUFFER FOR BSAM READS
         ST    R1,BUFFER          SAVE FOR LATER
         MVC   TTR(3),JOURNTTR    MOVE SAVED TTR FOR POINT
         CLC   TTR(3),=X'000000'  IS THIS ZERO TTR?
         BE    NEXTBLK            YES, SKIP POINT
         POINT BSAMDCB,TTR        UPDATE TO RELATIVE RECORD
         B     NEXTBLK            READ FIRST BLOCK
SKIPOPEN CLC   JOURNTTR,=X'000000' IS THIS ZERO TTR?
         BNE   NEXTREC            YES, PROCESS BSAM DCB
GETQSAM  GET   QSAMDCB            GET QSAM RECORD FROM ARCHIVE
         LR    R5,R1              COPY RECORD TO REC REG
         BR    R8                 RETURN TO CALLER
NEXTREC  EQU   *                  BUMP TO NEXT REC IN BLOCK
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   NEXTRECF           YES- BR
         SH    R5,=H'4'           BUMP BACK TO BEGINNING OF RECORD
         AR    R5,R6              ADD LENGTH
         CR    R5,R7              PAST END OF BLOCK
         BNL   NEXTBLK            YES- READ NEXT BLK
         LH    R6,0(R5)           SET R6 TO NEXT VAR RECORD LEN
         B     PASSREC           BUMP TO NEXT REC IN BLOCK
*
NEXTRECF BXLE  R5,R6,PASSREC      BUMP TO NEXT REC IN BLOCK
*
NEXTBLK  L     R5,BUFFER          ADDR OF BUFFER
         READ  READDECB,SF,BSAMDCB,(R5),'S' READ SYSOUT BLOCK
         CHECK READDECB           WAIT FOR COMPLETION
         TM    FIXVAR,FIXREC      FIXED LENGTH RECORD
         BNZ   FIXBLK             YES - BR
         LH    R7,0(R5)           R7 = VAR BLKSIZE
         LA    R7,0(R7,R5)        R7 = END OF BLOCK
         LA    R5,4(R5)           BUMP PAST BLK LENGTH
         LH    R6,0(R5)           R6 = FIRST VAR RECORD LENGTH
         B     PASSREC            BRANCH
FIXBLK   LH    R6,DCBLRECL        LRECL
         LH    R7,DCBBLKSI        BLOCK SIZE
         LA    R7,0(R7,R5)        END OF FULL BLOCK
         L     R1,READDECB+16     ADDR OF IOB
         LH    R1,14(R1)          RESIDUAL COUNT FOR SHORT BLOCK
         SR    R7,R1              ADJUSTED BLOCK LENGTH
         SR    R7,R6              DECR TO BEGINNING OF LAST RECORD
         B     PASSREC
PASSREC  BR    R8                 PASS RECORD TO CALLER (R5====>LREC)
*
PUTUTIL  TM    UTILDCB+48,X'10'   IS OUTPUT FILE OPENED YET?
         BO    UTILOPEN           YES, CONTINUE
         OPEN  (UTILDCB,(OUTPUT)) OPEN THE UTILITY OUTPUT DCB
         TM    UTILDCB+48,X'10'   DID IT OPEN?
         BZ    EXIT8              INDICATE OPEN FAILURE
UTILOPEN PUT   UTILDCB,(R4)       COPY OUTPUT RECORD
         BR    R8                 RETURN TO CALLER
MOVE     MVC   0(0,R14),0(R15)    MOVE DATA VIA EXECUTE
         EJECT
         USING *,R15
SYNAD    OI    SWITCH,IOERR       INDICATE I/O ERROR
         BR    R14
         DROP  R15
***********************************************************************
*
*        CONSTANTS AND UTILITY AREAS
*
***********************************************************************
         DS    0D
PACK5    DC    PL5'0'
PACK4    DC    PL4'0'
DATELIM  DC    PL5'0'
HDATEL   DC    CL8' '
UNPKAREA DC    CL9' '
HSTAMP   DC    CL12' '
HIGH9    DC    CL11'99999999999'
STPATRN  DC    XL12'402120202020202020202020'
LINEPAT  DC    XL10'40206B2020206B202020'
FULLKEY  DS    0CL22              FULL KEY FOR SEARCH
FULLJN   DC    CL8' '
FULLDT   DC    PL5'0'
FULLTM   DC    PL4'0'
FULLJ#   DC    CL5' '
SDATE    DC    CL8' '             DATE FOR SEARCH
STIME    DC    CL6' '             TIME FOR SEARCH
EXDATE   DC    CL8' '             DATE FOR SEARCH
EXTIME   DC    CL6' '             TIME FOR SEARCH
SUFFIXLN DC    F'0'               SIZE OF DSNAME SUFFIX
SUFFIXAD DC    F'0'               ADDRESS OF JOURNAL DSN SUFFIX
DATASUFL DC    F'0'               SIZE OF DATA SUFFIX
DATASUFA DC    F'0'               ADDRESS OF JOURNAL DSN SUFFIX
TTR      DC    F'0'               FULLWORD TTR FOR POINT
BUFFER   DC    F'0'               SAVE AREA FOR GOTTEN STORAGE
COMPADDR DC    F'0'               SAVE AREA COMPRESSION ROUTINE
DEVTDD   DC    CL8' '
DEVTAREA DS    0D
DEVTUCB  DC    F'0'
DEVTBLSZ DC    F'0'
DEVT@@@@ DC    X'00'
DEVT3480 EQU   X'01'
MSG3480  EQU   X'02'
D3480FF  DC    XL4'78008080'
D3480CP  DC    XL4'33008003'
BLDLCOMP DC    H'1',H'58',CL8'SOUTCPR',XL58'00'
PARMCPR  DS    0F
CP1      DC    A(CPRTYPE)
CP2      DC    F'0'
CP3      DC    A(UNCOMREC)
CPRTYPE  DC    XL4'00000000'
UNCOMREC DS    0CL137
MAXLEN   DC    H'0'
         DC    H'0'
         DC    CL133' '
JOURNACB ACB   AM=VSAM,DDNAME=JOURNAL,MACRF=(KEY,DIR,SEQ,IN)
         DC    C'RPLBB'
JOURNRPL RPL   ACB=JOURNACB,AREA=JOURNREC,AREALEN=42,OPTCD=(KEY,       X
               DIR,SYN,NSP,KEQ,GEN,MVE),ARG=FULLKEY,KEYLEN=8
         DC    C'QSAMDCB '
QSAMDCB  DCB   DDNAME=XXXXXXX,DSORG=PS,MACRF=GL,EODAD=CLOSEM
         DC    C'BSAMDCB '
BSAMDCB  DCB   DDNAME=XXXXXXX,DSORG=PS,MACRF=RP,EODAD=CLOSEM
         DC    C'UTILDCB '
UTILDCB  DCB   DDNAME=XXXXXXX,DSORG=PS,MACRF=(PM),                     X
               LRECL=133,RECFM=FBA,BLKSIZE=6118   (BLOCK BY 46)
*
MSGTAB   DC    A(*,M4,M8,M12,M16,M20,M24,M28,M32,M36)
M36      DC    CL50'DYNAMIC ALLOCATION FAILED FOR THE INPUT FILE '
M32      DC    CL50'OPEN FAILURE FOR THE INPUT SYSOUT FILE '
M28      DC    CL50'OPEN FAILURE FOR THE JOURNAL VSAM FILE '
M24      DC    CL50'READ FAILURE FOR THE JOURNAL VSAM FILE '
M20      DC    CL50'EXPANSION FAILED FOR SYSOUT DATA'
M16      DC    CL50'DYNAMIC ALLOC FAILED FOR THE JOURNAL VSAM FILE'
M12      DC    CL50'INVALID PARAMETER PASSED '
M8       DC    CL50'OPEN FAILED FOR THE OUTPUT FILE '
M4       DC    CL50'JOB NOT FOUND WITHIN THE CONTEXT DEFINED '
*
JOBNUM   DC    CL5'00000'         JOBNUMBER FOR SEARCH
JOBNLEN  DC    H'7'               LENGTH OF JOBNAME FOR COMPARE
SAVED    DC    CL17' '            SAVED DATE/TIME FROM JOURNAL
JRNSAVE  DC    CL50' '            SAVED DSNAME FROM JOURNAL
*
DAYTABLE DS    0CL28
         DC    X'00',CL3'MON'
         DC    X'01',CL3'TUE'
         DC    X'02',CL3'WED'
         DC    X'03',CL3'THU'
         DC    X'04',CL3'FRI'
         DC    X'05',CL3'SAT'
         DC    X'06',CL3'SUN'
         DC    X'FF',CL3'???'
*
         DC    C'BEGIN JOURNREC'
*
*        THE FOLLOWING DESCRIBES THE JOURNAL RECORD
JOURNREC DS    0CL42              JOURNAL RECORD
JOURNJN  DC    CL8' '             JOURNAL JOBNAME FIELD
JOURNDT  DC    PL5'0'             JOURNAL DATE FIELD
JOURNTM  DC    PL4'0'             JOURNAL TIME FIELD
JOURNJ#  DC    CL5' '             JOURNAL JOB NUMBER FIELD
JOURNJT  DC    CL3' '             JOURNAL JOB TYPE (JOB/STC/TSU)
JOURNMC  DC    C' '               JOURNAL MESSAGE CLASS
JOURNTTR DC    CL3'TTR'           JOURNAL TTR FIELD
JOURNDAY DC    C' '               DAY OF WEEK INDICATOR (00=MONDAY)
JOURNLIN DC    PL4'0'
JOURNDEV DC    C' '
JOURNADR DC    C' '
JOURNSTP DC    PL6'0'
*
JSOUTDSN DC    CL44' '            ACTUAL DS CONTAINING JOB
*        THE FOLLOWING DESCRIBES THE RECORD CREATED FOR LIST OR LISTALL
LISTREC  DS    0CL133
LISTASA  DC    CL1' '             LIST DUMMY ASA CHARACTER
LISTJN   DC    CL8' ',CL1' '      LIST JOBNAME FIELD
LISTDATE DC    CL10' ',CL1' '     LIST DATE FIELD
LISTTIME DC    CL8' ',CL1' '      LIST TIME FIELD
LISTJT   DC    CL3' '             LIST JOB TYPE (JOB/STC/TSU)
LISTJ#   DC    CL5' ',CL1' '      LIST JOB NUMBER FIELD
LISTMC   DC    C' ',C' '          LIST MESSAGE CLASS
LISTDAY  DC    CL3' '             DAY OF WEEK INDICATOR (00=MONDAY)
LISTLINE DC    CL10' ',C' '
LISTDEVT DC    CL6' ',C' '
LISTADR  DC    C' ',C' '
LISTSTP  DC    CL15' '
LISTPAD  DC    CL54' '
*
BLANKS   DC    CL133' '
NEEDLB   DS    0CL133
         DC    CL45' *** WARNING ***  ALL DATA NOT WRITTEN TO THE'
         DC    CL45' ACTIVE ARCHIVER FILE YET. RUN THE FLUSH PROG'
         DC    CL43'RAM OR WAIT FOR ANOTHER JOB TO WRITE DATA. '
WAITMSG  DC    CL27'ALLOCATING ARCHIVE DATASET:'
MOUNTMSG DC    CL30'WAITING FOR TAPE TO BE MOUNTED'
SRCHMSG  DC    CL25'BEGINNING ARCHIVE SEARCH'
SEP      DC    CL24'SPFSOUTS PAGE SEPARATOR ' SEPARATOR RECORD LITERAL
PADDING  DC    CL3'PAD'           PADDING SEPERATOR
NEWSEP1  DC    CL29'         ------------------> '
NEWSEP2  DC    CL110' '           SUFFIX FOR NEW SEPARATOR
OPT      DC    X'00'              OPTION SWITCH
JN       EQU   X'01'              REQUEST FOR MATCH ON JOBNAME
J#       EQU   X'02'              REQUEST FOR MATCH ON JOBNUMBER
DT       EQU   X'04'              REQUEST FOR MATCH BY DATE
TM       EQU   X'08'              REQUEST FOR MATCH BY TIME
FND      EQU   X'10'              REQUESTED JOB FOUND
SWITCH   DC    X'00'              PROCESS SWITCHES
IOERR    EQU   X'01'              I/O ERROR ON JOURNAL
FIXVAR   DS    X'00'
FIXREC   EQU   X'01'
VARREC   EQU   X'02'
FDBAREA  DS    0F
         DS    1C
TYPECD   DS    1C
CMPCD    DS    1C
ERRCD    DS    1C
         EJECT
***********************************************************************
*                                                                     *
*        DYNAMIC ALLOCATION LIST FOR THE JOURNAL INPUT FILE(S)        *
*                                                                     *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
DAJOURN  DC    X'80',AL3(JRNB)    ADDRESS OF DYNALLOC BLOCK
JRNB     DC    AL1(20),AL1(1),X'0000' ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(JRNC)            START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
         DC    X'00000000'        FLAGS (MODIFIED FOR TAPE)
JRNC     DC    A(JRNX1,JRNX2,JRNX3,JRNX4,JRNX5),AL1(128),AL3(JRNX6)
JRNX1    DC    X'0002',AL2(1)                   DSNAME UNIT
JRNDSNL  DC    AL2(12)                             DSNAME LENGTH
JRNDSN   DC    CL44'SYS2.OPSWTR'                  DSNAME
JRNX2    DC    X'0055',AL2(1),AL2(8)            DDNAME RETURN UNIT
JRNDDN   DC    CL8' '                           DDNAME RETURNED
JRNX3    DC    X'0004',AL2(1),AL2(1),X'08'      STATUS UNIT (SHR)
JRNX4    DC    X'0005',AL2(1),AL2(1),X'08'      DISP UNIT (KEEP)
JRNX5    DC    X'001C',AL2(0)                   FREE=CLOSE
JRNX6    DC    X'003C',AL2(1),AL2(2),X'0008'    DSORG=VSAM
         SPACE 3
***********************************************************************
*                                                                     *
*        DYNAMIC ALLOCATION LIST FOR THE SYSOUT INPUT FILE            *
*                                                                     *
***********************************************************************
         DS    0F                 MUST BE FULLWORD ALIGNED
DASOUT   DC    X'80',AL3(SOUTB)   ADDRESS OF DYNALLOC BLOCK
SOUTB    DC    AL1(20),AL1(1),X'0000' ALLOCATION REQUEST
         DC    F'0'               ERROR/INFO CODES (RETURNED)
         DC    A(SOUTC)           START OF TEXT UNIT POINTER CHAIN
         DC    A(0)               RESERVED
SOUTFLGS DC    X'00000000'        FLAGS (MODIFIED FOR TAPE)
SOUTC    DC    A(SOUTX1,SOUTX2,SOUTX3)
SOUTFREE DC    A(SOUTX4),AL1(128),AL3(SOUTX5)
SOUTX1   DC    X'0002',AL2(1)                   DSNAME UNIT
SOUTDSNL DC    AL2(0)                           DSNAME LENGTH
SOUTDSN  DC    CL44' '                          DSNAME
SOUTX2   DC    X'0055',AL2(1),AL2(8)            DDNAME RETURN UNIT
SOUTDDN  DC    CL8' '                           DDNAME RETURNED
SOUTX3   DC    X'0004',AL2(1),AL2(1),X'08'      STATUS UNIT (SHR)
SOUTX4   DC    X'0005',AL2(1),AL2(1),X'08'      DISP UNIT (KEEP)
SOUTX5   DC    X'001C',AL2(0)                   FREE=CLOSE
         LTORG
FLAGPARM DSECT
FLAG     DS    X'00'
TSO      EQU   X'01'                 TSO CALLER
LST      EQU   X'02'                 LIST REQUEST
AUTH     EQU   X'04'                 REQUEST AUTHORIZED FUNCTION
SEQ      EQU   X'80'
RECORD   DSECT
RECPREF  DS    CL6
RECLIT   DS    0CL77
         DS    CL28
RECJNAME DS    CL8
         DS    CL1
RECJNUM  DS    CL8
         DS    CL12
RECMSGCL DS    CL1
         DS    CL1
RECDATE  DS    CL8
         DS    CL1
RECTIME  DS    CL8
         DS    CL1
         DS    CL60
         IFGACB AM=VSAM
         PRINT OFF
         DCBD DSORG=PS
         END
