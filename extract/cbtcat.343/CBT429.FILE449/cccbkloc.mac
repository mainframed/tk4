BKLOC    TITLE 'BOOKMANAGER CATALOG LOCATE PROGRAM'
***********************************************************************
*                                                                     *
*        BOOKMANAGER CATALOG LOCATE PROGRAM                           *
*                                                                     *
*        PARAMETERS                                                   *
*                                                                     *
*        HLI,HLI,HLI,....                                             *
*                                                                     *
*        THE PARM FIELD IS A LIST OF ONE TO A MAXIMUM OF 16           *
*        DATA SET HIGH LEVEL INDICES.                                 *
*                                                                     *
*        OUTPUT                                                       *
*                                                                     *
*        DDNAME CATFILE POINTS TO A SEQUENTIAL DATA SET THAT WILL     *
*        CONTAIN THE LIST OF LOCATED DATA SET NAMES.  THIS LIST       *
*        WILL BE IN ALPHABETICAL ORDER, ASSUMING THAT THERE IS        *
*        NO DUPLICATION OF DATA SET NAMES IN THE HIGH LEVEL           *
*        INDEX LIST PASSED TO THIS PROGRAM.                           *
*                                                                     *
***********************************************************************
*
         PUNCH '         PAGE  CCCBKLOC'  MAKE DEBUGGING EASIER
*
CCCBKLOC CSECT
CCCBKLOC AMODE 24
CCCBKLOC RMODE 24
*
         USING CCCBKLOC,R15        INITIAL BASE REGISTER
         B     AROUNDID
         DC    CL8'CCCBKLOC'       MODULE ID
         DC    CL8'V 1.1.1'        MODULE LEVEL
         DC    CL8'&SYSDATE'
         DC    CL8' &SYSTIME'
*
AROUNDID DS    0H
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             SET THE BASE REGISTER
         DROP  R15
         USING CCCBKLOC,R12
*
         L     R14,=A(SAVEAREA)    POINT AT NEW SAVE AREA
         ST    R14,8(,R13)         FORWARD CHAIN
         ST    R13,4(,R14)         BACK CHAIN
         LR    R13,R14             SET NEW SAVE AREA
         USING SAVEAREA,R13        PROVIDE ADDITIONAL ADDRESSABILITY
*
         EJECT
***********************************************************************
*                                                                     *
*        EXTRACT THE PARM FIELD TO CREATE THE INITIAL LIST            *
*        OF HIGH LEVEL INDICES.                                       *
*                                                                     *
***********************************************************************
*
         L     R2,0(,R1)           LOAD FIRST PARM ADDRESS
         LH    R3,0(,R2)           LOAD THE PARM LENGTH
         LTR   R3,R3               TEST THE PARM LENGTH
         BZ    PARMINVL            IF NONE, PARM IS INVALID
         LA    R2,2(,R2)           INCREMENT PAST THE LENGTH FIELD
*
         LA    R4,HLQTABLE         POINT AT FIRST ENTRY
*
PARMHLQL DS    0H
         MVC   PARMHOLD,BLANKS     BLANK THE DATA SET NAME AREA
         LA    R1,PARMHOLD         POINT AT START OF DSN
         LA    R15,PARMHOLD+8      POINT AT END OF VALID HLQ LENGTH
*
PARMHLQM DS    0H
         CLI   0(R2),C','          IS THIS A DELIMITER
         BE    PARMHLQE            IF SO, THIS IS THE END OF THE DSN
         CR    R1,R15              HAVE WE GONE TOO FAR
         BE    PARMERR1            BAD NEWS IF WE HAVE
*
         MVC   0(1,R1),0(R2)       MOVE ONE DSNAME CHARACTER
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         LA    R2,1(,R2)           INCREMENT TO NEXT CHARACTER
         BCT   R3,PARMHLQM         GO MOVE THE NEXT CHARACTER
*
PARMHLQE DS    0H
         MVC   0(L'HLQTABLE,R4),PARMHOLD COPY THE HIGH LEVEL INDEX
         LA    R4,L'HLQTABLE(,R4)  INCREMENT TO NEXT TABLE ENTRY
*
         LA    R0,1                LOAD A 1
         A     R0,HLQCOUNT         ADD THE OLD COUNT
         ST    R0,HLQCOUNT         STORE THE NEW COUNT
*
         LTR   R3,R3               DID WE REACH THE END
         BZ    PARMDONE            BRANCH IF SO
*
         C     R0,=A(HLQMAX)       HAVE WE REACHED THE MAX NUMBER OF EM
         BNL   PARMERR2            FI SO, BLOW
*
         LA    R2,1(,R2)           SKIP THE COMMA
         BCT   R3,PARMHLQL         AND LOOP THROUGH THE PARM
*
PARMDONE DS    0H
*
***********************************************************************
*                                                                     *
*        GETMAIN THE INITIAL CATALOG WORK AREA                        *
*                                                                     *
***********************************************************************
*
         L     R0,=A(16*1024)      LOAD 16K WORTH
         ST    R0,LOCWORKS         SAVE THIS SIZE
*
         GETMAIN RU,LV=(0),SP=99,LOC=(BELOW,ANY)
         ST    R1,LOCWORKA         SAVE THIS ADDRESS
         L     R0,LOCWORKS         LOAD THE FULL SIZE
         SH    R0,=H'8'            SUBTRACT HEADER SPACE
         ST    R0,0(,R1)           STORE THE USABLE LENGTH
         XC    4(4,R1),4(R1)       ZERO THE RETURN LENGTH
*
         LA    R0,1                LOAD A 1
         A     R0,GETMCNT          ADD PREVIOUS GETMAIN COUNT
         ST    R0,GETMCNT          STORE NEW GETMAIN COUNT
*
***********************************************************************
*                                                                     *
*        OPEN THE CATALOG OUTPUT FILE                                 *
*                                                                     *
***********************************************************************
*
         OPEN  (CATFILE,(OUTPUT))
         LTR   R15,R15             WAS THIS SUCCESSFUL
         BNZ   CATOPENE            IF NOT, ABORT
*
         EJECT
***********************************************************************
*                                                                     *
*        SCAN THE LIST OF HIGH LEVEL INDICES TO FIND THE LOWEST       *
*        ONE ALPHABETICALLY.                                          *
*                                                                     *
***********************************************************************
*
MAINLOOP DS    0H
         MVC   LOCDSN,BLANKS       CLEAR OUT THE AREA
         MVI   LOCDSN,X'FF'        SET HIGH VALUES
*
         LA    R1,HLQTABLE         POINT AT FIRST HIGH LEVEL QUALIFIER
         L     R0,HLQCOUNT         LOAD HOW MANY WE HAVE
         SLR   R2,R2               INDICATE WE HAVEN'T FOUND ONE
*
HLQLOOP1 DS    0H
         CLC   0(L'HLQTABLE,R1),BLANKS  IS THIS A BLANK ENTRY
         BE    HLQNEXT1            IF SO, SKIP IT
*
         CLC   0(L'HLQTABLE,R1),LOCDSN  LOCATE THE LOWEST ENTRY
         BNL   HLQNEXT1            BRANCH IF NOT LOWER
*
         MVC   LOCDSN(L'HLQTABLE),0(R1) COPY THE HIGH LEVEL INDEX
         LR    R2,R1               SAVE THE ADDRESS OF THE ONE WE FOUND
*
HLQNEXT1 DS    0H
         LA    R1,L'HLQTABLE(,R1)  INCREMENT TO NEXT ENTRY
         BCT   R0,HLQLOOP1         LOOP THROUGH THE HIGH LEVEL TABLE
*
         LTR   R2,R2               DID WE FIND ONE
         BZ    ALLDONE             IF NOT, WE ARE ALL DONE
*
         MVC   0(L'HLQTABLE,R2),BLANKS  NULLIFY THIS ENTRY
*
         LA    R1,LOCDSN           POINT AT FIRST CHARACTER
         LA    R15,1               COUNT AT LEAST ONE CHARACTER
*
HLQLENGL DS    0H
         CLI   0(R1),C' '          CHECK FOR THE TRAILING BLANK
         BE    HLQLENGG            BRANCH WHEN FOUND
         LA    R1,1(,R1)           INCREMENT TO NEXT CHARACTER
         LA    R15,1(,R15)         INCREMENT THE LENGTH
         B     HLQLENGL            AND LOOP THROUGH THE HIGH LEVEL IND
*
HLQLENGG DS    0H
         MVI   0(R1),C'.'          ADD A PERIOD
         STC   R15,LOCLENG         STORE THE LENGTH (INCLUDING PERIOD)
*
         EJECT
***********************************************************************
*                                                                     *
*        PERFORM THE GENERIC SUPERLOCATE FOR THIS HIGH LEVEL INDEX    *
*                                                                     *
***********************************************************************
*
LOCLOOP1 DS    0H
         L     R0,LOCWORKA         LOAD THE WORK AREA ADDRESS
         ST    R0,LOCWORK          INITIALIZE IN THE LOCATE PARM LIST
*
         LOCATE LOCPARM            ISSUE THE LOCATE SVC
*
         LTR   R15,R15             WAS IT COMPLETELY SUCCESSFUL
         BZ    LOCGOOD             BRANCH IF SO
*
         CH    R15,=H'40'          CHECK THE "LENGTH" RETURN CODE
         BL    LOCBAD1             ERROR IF LOWER
         CH    R15,=H'44'          CHECK THE OTHER "LENGTH" RETURN CODE
         BH    LOCBAD2             ERROR IF HIGHER
*
***********************************************************************
*                                                                     *
*        WORK AREA IS TOO SMALL.  DOUBLE IT UNTIL IT IS BIGGER THAN   *
*        THE INDICATE REQUIRED AMOUNT OF DATA.                        *
*                                                                     *
***********************************************************************
*
         L     R1,LOCWORKA         LOAD THE LOCATE AREA ADDRESS
         L     R0,LOCWORKS         LOAD THE CURRENT SIZE
*
         L     R2,4(,R1)           LOAD THE REQUIRED SIZE
*
         FREEMAIN RU,LV=(0),A=(1),SP=99 FREE THE OLD AREA
*
SIZELOOP DS    0H
         L     R0,LOCWORKS         LOAD THE CURRENT SIZE
         AR    R0,R0               DOUBLE IT
         ST    R0,LOCWORKS         STORE THE NEW SIZE
*
         CR    R0,R2               COMPARE AGAINST MAXIMUM
         BL    SIZELOOP            LOOP IF TOO SMALL STILL
*
         GETMAIN RU,LV=(0),SP=99,LOC=(BELOW,ANY)
         ST    R1,LOCWORKA         SAVE THIS ADDRESS
         L     R0,LOCWORKS         LOAD THE FULL SIZE
         SH    R0,=H'8'            SUBTRACT HEADER SPACE
         ST    R0,0(,R1)           STORE THE USABLE LENGTH
         XC    4(4,R1),4(R1)       ZERO THE RETURN LENGTH
*
         LA    R0,1                LOAD A 1
         A     R0,GETMCNT          ADD PREVIOUS GETMAIN COUNT
         ST    R0,GETMCNT          STORE NEW GETMAIN COUNT
*
         B     LOCLOOP1            AND GO RETRY THE LOCATE
*
         EJECT
***********************************************************************
*                                                                     *
*        NOW THAT A SUCCESSFUL LOCATE HAS BEEN PERFORMED,             *
*        RUN THROUGH THE RETURNED DATA AND EXTRACT EACH DATA          *
*        SET, HIGH LEVEL INDEX, AND LOW LEVEL INDEX.                  *
*                                                                     *
*        NOTE:  THE REASON THAT THE HIGH LEVEL INDEX IS EXTRACTED     *
*        EACH TIME IS THAT THE SPECIFIED HIGH LEVEL INDEX MAY         *
*        RETURN AN ALIASED DATA SET WHICH IN TURN IS ACTUALLY         *
*        NAMED UNDER A DIFFERENT HIGH LEVEL INDEX.  STRANGE, BUT      *
*        POSSIBLE.                                                    *
*                                                                     *
***********************************************************************
*
LOCGOOD  DS    0H
         L     R2,LOCWORKA         POINT AT START OF LOCATE WORK AREA
         L     R3,4(,R2)           LOAD THE RETURNED DATA SIZE
*
         LA    R2,8(,R2)           INCREMENT PAST THE WORK AREA HEADER
         SH    R3,=H'8'            DECREMENT FOR HEADER LENGTH
         BNH   MAINLOOP            IF NO DATA RETURNED, WE ARE DONE
*
         LA    R4,CATRECRD         POINT AT RECORD BUILD AREA
         USING BKLDSECT,R4
*
DSNBUILD DS    0H
         MVC   BKLDSECT(BKLLNGTH),BLANKS CLEAR THE ENTIRE RECORD
*
         MVC   BKLTYPE,0(R2)       COPY THE DATA SET TYPE
         MVC   BKLDSNME,1(R2)      COPY THE DATA SET NAME
*
         LA    R1,BKLDSNME         POINT AT START OF DATA SET NAME
         LA    R14,BKLDSNHL        POINT AT HIGH LEVEL QUALIFIER
         LA    R15,8               MAXIMUM LENGTH
*
DSNHLQLP DS    0H
         MVC   0(1,R14),0(R1)      COPY ONE CHARACTER
         LA    R1,1(,R1)           INCREMENT ARROW
         LA    R14,1(,R14)         INCREMENT TARGET
         CLI   0(R1),C'.'          LOOP FOR DELIMITER
         BE    *+8                 BRANCH WHEN FOUND
         BCT   R15,DSNHLQLP        LOOP THROUGH THE FIRST 8 CHARACTERS
*
         LA    R1,BKLDSNME+L'BKLDSNME   POINT PAST LAST CHARACTER
         LA    R0,BKLDSNME         POINT AT FIRST CHARACTER
*
DSNLLQL1 DS    0H
         BCTR  R1,0                BACK UP ONE CHARACTER
         CLI   0(R1),C'.'          LOOK FOR THE LAST DELIMITER
         BE    DSNLLQL2            BRANCH WHEN FOUND
         CR    R1,R0               ARE WE BACK AT THE BEGINNING
         BH    DSNLLQL1            BRANCH IF WE AREN'T
*
         MVC   BKLDSNLL,=8C'?'     INDICATE NO KNOW LLQ
         B     DSNLLQNO            AND SKIP THE REST
*
DSNLLQL2 DS    0H
         LA    R15,8               AGAIN WE SET THE MAXIMUM
         LA    R14,BKLDSNLL        POINT AT LOW LEVEL QUALIFIER FIELD
*
DSNLLQL3 DS    0H
         MVC   0(1,R14),1(R1)      COPY ONE CHARACTER
         LA    R14,1(,R14)         INCREMENT TARGET
         LA    R1,1(,R1)           INCREMENT ARROW
         CLI   0(R1),C' '          CHECK FOR END
         BE    *+8                 BRANCH WHEN THERE
         BCT   R15,DSNLLQL3        LOOP THROUGH THE LOW LEVEL QUALIFIER
*
DSNLLQNO DS    0H
         PUT   CATFILE,BKLDSECT    WRITE OUT THE CATALOG RECORD
*
         LA    R0,1                LOAD A ONE
         A     R0,DSNCOUNT         ADD PREVIOUS COUNT
         ST    R0,DSNCOUNT         STORE UPDATED COUNT
*
         LA    R2,45(,R2)          INCREMENT TO NEXT RETURNED FIELD
         SH    R3,=H'45'           DECREMENT LENGTH
         BP    DSNBUILD            LOOP IF MORE DATA LEFT
*
         DROP  R4
*
         B     MAINLOOP            AND GO GET THE NEXT HIGH LEVEL QUAL
*
         EJECT
***********************************************************************
*                                                                     *
*        CLOSE THE OUTPUT CATALOG DATA FILE                           *
*                                                                     *
***********************************************************************
*
ALLDONE  DS    0H
         CLOSE (CATFILE)           CLOSE THE OUTPUT FILE
         FREEPOOL CATFILE          FREE THE BUFFER POOL
*
***********************************************************************
*                                                                     *
*        FREE THE LOCATE WORK AREA                                    *
*                                                                     *
***********************************************************************
*
         ICM   R1,15,LOCWORKA      LOAD THE WORK AREA ADDRESS
         BZ    NOLOCFRE            BRANCH IF NONE
*
         L     R0,LOCWORKS         LOAD THE SIZE TO FREE
         FREEMAIN RU,A=(1),LV=(0),SP=99 FREE THE LOCATE WORK AREA
*
*
NOLOCFRE DS    0H
*
***********************************************************************
*                                                                     *
*        RETURN TO CALLER                                             *
*                                                                     *
***********************************************************************
*
         L     R13,4(,R13)         UNCHAIN THE SAVE AREA
         LM    R14,R12,12(R13)     RELOAD THE REGISTERS
         SLR   R15,R15             SET THE RETURN CODE
         BR    R14                 RETURN TO CALLER
*
         EJECT
***********************************************************************
*                                                                     *
*        VARIOUS ABEND ROUTINES                                       *
*                                                                     *
***********************************************************************
*
PARMINVL DS    0H
         ABEND 10,DUMP
*
PARMERR1 DS    0H
         ABEND 20,DUMP
*
PARMERR2 DS    0H
         ABEND 30,DUMP
*
CATOPENE DS    0H
         ABEND 40,DUMP
*
LOCBAD1  DS    0H
         ABEND 50,DUMP
*
LOCBAD2  DS    0H
         ABEND 60,DUMP
*
         EJECT
LITERALS LTORG ,
*
         EJECT
CCCBKLOD CSECT
CCCBKLOD AMODE 24
CCCBKLOD RMODE 24
*
SAVEAREA DC    9D'0'               REGISTER SAVE AREA
*
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
*
HLQCOUNT DC    F'0'                COUNT OF HIGH LEVEL QUALIFIERS
HLQTABLE DC    16CL8' '            HIGH LEVEL QUALIFIER TABLE
HLQMAX   EQU   (*-HLQTABLE)/L'HLQTABLE  SET COUNT OF HIGH LEVEL INDICES
*
DSNCOUNT DC    F'0'                COUNT OF DATA SETS LOCATED
*
PARMHOLD DS    CL16                AREA TO HOLD THE PARM HIGH LEVEL Q
*
GETMCNT  DC    F'0'                COUNT OF WORK AREA GETMAINS
LOCWORKA DC    A(0)                ADDRESS OF LOCATE WORK AREA
LOCWORKS DC    F'0'                SIZE OF LOCATE WORK AREA
*
         DS    0D
BLANKS   DC    CL128' '            AREA FOR BLANKING AND UPPERCASING
*
LOCPARM  DC    0D'0'
         DC    B'00000101'
         DC    B'00000000'
         DC    B'00010001'
         DC    B'00000000'
         DC    A(LOCLENG)
         DC    A(0)
LOCWORK  DC    A(*-*)
         DC    B'00000100'
         DC    B'00000000'
         DC    C'A'
         DC    AL1(0)
         DC    A(0)
         DC    H'0'
         DC    B'00000000'
         DC    X'00'
         DC    A(0)
         DC    A(0)
*
         DS    0D
LOCLENG  DS    AL1
LOCDSN   DS    CL44
*
         DS    0D
CATRECRD DS    CL(BKLLNGTH)        RECORD BUILD WORK AREA
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         EJECT
         PRINT NOGEN
*
CATFILE  DCB   DSORG=PS,                                               X
               DDNAME=CATFILE,                                         X
               MACRF=PM,                                               X
               RECFM=FB,                                               X
               LRECL=BKLLNGTH
*
         PRINT GEN
*
         BKMGRLOC
*
         END   CCCBKLOC
