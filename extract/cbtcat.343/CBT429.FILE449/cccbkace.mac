BKACE    TITLE 'BOOKMANAGER COMMON STORAGE ANCHOR BUILD'
***********************************************************************
*                                                                     *
*        BOOKMANAGER COMMON STORAGE ANCHOR BUILD PROGRAM              *
*                                                                     *
*                                                                     *
***********************************************************************
*
         PUNCH '         PAGE  CCCBKACE'  MAKE DEBUGGING EASIER
         PUNCH '         SETCODE AC(1)'   THIS PROGRAM IS AUTHORIZED
*
CCCBKACE CSECT
CCCBKACE AMODE 31
CCCBKACE RMODE 24
*
         USING CCCBKACE,R15        INITIAL BASE REGISTER
         B     AROUNDID
         DC    CL8'CCCBKACE'       MODULE ID
         DC    CL8'V 1.1.0'        MODULE LEVEL
         DC    CL8'&SYSDATC'
         DC    CL8' &SYSTIME'
*
AROUNDID DS    0H
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             SET THE BASE REGISTER
         DROP  R15
         USING CCCBKACE,R12
*
         L     R14,=A(SAVEAREA)    POINT AT NEW SAVE AREA
         ST    R14,8(,R13)         FORWARD CHAIN
         ST    R13,4(,R14)         BACK CHAIN
         LR    R13,R14             SET NEW SAVE AREA
*        USING SAVEAREA,R13        PROVIDE ADDITIONAL ADDRESSABILITY
*
         LR    R2,R1               SAVE THE PARM FIELD ADDRESS
*
         MODESET MODE=SUP          GET INTO SUPERVISOR STATE
*
         EJECT
***********************************************************************
*                                                                     *
*        LOAD THE CELL POOL SUBROUTINE                                *
*                                                                     *
***********************************************************************
*
         LOAD  EPLOC=CPSNAME,ERRET=LOADERR0 LOAD THE CELL POOL ROUTINE
         ST    R0,CPSADDR
*
***********************************************************************
*                                                                     *
*        CHECK FOR PARM=FREE TO FREE EXISTING CSA BLOCKS              *
*                                                                     *
***********************************************************************
*
         L     R2,0(,R2)           LOAD THE ACTUAL PARM ADDRESS
         LH    R3,0(,R2)           GET THE LENGTH
         LTR   R3,R3               TEST FOR NO PARM
         BZ    NOPARM              BRANCH IF NONE
*
         CH    R3,=H'4'            CHECK THE LENGTH
         BNE   PARMINVL            INVALID IF NOT EXACTLY FOUR
         CLC   2(4,R2),=C'FREE'    CHECK FOR FREE
         BNE   PARMINVL            ERROR IF NOT
*
         MVI   FREECSA,X'FF'       SET THE FREE ONLY FLAG
         B     FINDSSCT            GO FIND THE SSCT
*
NOPARM   DS    0H
         EJECT
***********************************************************************
*                                                                     *
*        FIND THE COMMON STORAGE ARCHOR                               *
*                                                                     *
***********************************************************************
*
FINDSSCT DS    0H
         L     R3,CVTPTR           LOAD THE CVT ADDRESS
         USING CVT,R3
         L     R3,CVTJESCT         LOAD THE JESCT ADDRESS
         USING JESCT,R3
         L     R3,JESSSCT          LOAD THE FIRST SSCT ADDRESS
         USING SSCT,R3
*
FINDSCTL DS    0H
         CLC   SSCTSNAM,=A(BKASSNAM)    CHECK FOR OUR SUBSYSTEM NAME
         BE    FINDSCTF            BRANCH IF FOUND
         ICM   R3,15,SSCTSCTA      GET NEXT SSCT
         BNZ   FINDSCTL            BRANCH IF THERE'S MORE
         B     INVLSSCT            ERROR IF NOT FOUND
*
FINDSCTF DS    0H
         ST    R3,SAVESSCT         SAVE IT FOR LATER
*
         CLI   FREECSA,X'FF'       IS THIS A FREE ONLY
         BNE   OPENINFO
         ICM   R2,15,SSCTSUSE      GET THE CURRENT ANCHOR ENVIRONMENT
         BZ    INVLSSCT            BRANCH IF NONE
*
         MODESET EXTKEY=ZERO
*
         SLR   R0,R0               CLEAR FOR STORE
         ST    R0,SSCTSUSE         ZERO THIS FIELD
*
         USING BKADSECT,R2
         LA    R4,BKAANCHR         POINT AT FIRST ANCHOR WORD
         LA    R5,BKAANUMB         GET NUMBER OF ANCHOR WORDS
*
FINDFREE DS    0H
         ICM   R1,15,0(R4)         LOAD THE ANCHOR WORD
         BZ    FINDFREN            IF ZERO, NOTHING TO FREE
*
         USING BKEDSECT,R1
         L     R0,BKELENG          LOAD THE LENGTH
         IC    R15,BKESUBPL        GET THE SUBPOOL
         DROP  R1
*
         FREEMAIN RU,A=(1),LV=(0),SP=(15),KEY=BKAKEYID
*
FINDFREN DS    0H
         LA    R4,4(,R4)           INCREMENT TO NEXT ANCHOR WORD
         BCT   R5,FINDFREE         LOOP THROUGH EACH EXTRACT BLOCK
*
         LH    R0,BKALENG          LOAD THE ANCHOR LENGTH
         IC    R15,BKASUBPL        GET THE SUBPOOL
*
         FREEMAIN RU,A=(R2),LV=(0),SP=(15),KEY=BKAKEYID
*
         DROP  R2,R3
*
         MODESET KEY=NZERO
*
         B     ALLDONE             AND LEAVE THIS PLACE
*
***********************************************************************
*                                                                     *
*        OPEN THE INPUT INFORMATION DATA SET                          *
*                                                                     *
***********************************************************************
*
OPENINFO DS    0H
         OPEN  (INFOFILE,(INPUT))  OPEN THE INFO FILE
         LTR   R15,R15             TEST FOR ANY OPEN ERRORS
         BNZ   INFOPENE            BAD IF ANY ERRORS
*
INFOREAD DS    0H
         GET   INFOFILE            READ ONE INFORMATION RECORD
         LR    R2,R1               COPY THIS ADDRESS
         USING BKNDSECT,R2         ESTABLISH EXTRACT AREA MAPPING
*
         LA    R0,1                LOAD A 1
         A     R0,INFOCNT          ADD THE PREVIOUS COUNT
         ST    R0,INFOCNT          STORE THE UPDATED COUNT
*
         CLI   BKNNAME,C'*'        CHECK FOR COMMENT RECORD
         BE    INFOREAD            LOOP IF COMMENT
         CLC   BKNTYPE,=CL8'BKINDEX'    IS THIS A BOOKSHELF INDEX
         BE    INFOREAD            SKIP IT IF SO
*
         LA    R0,4+7              PREFIX PLUS ROUND FACTOR
         AH    R0,BKNLENG          ADD THE RECORD LENGTH
         SRL   R0,3                DIVIDE BY 8
         SLL   R0,3                MULTIPLY BY 8
*
         LA    R1,EXTBLOCK         POINT AT EXTRACT BLOCK
         L     R15,CPSADDR         LOAD CELL POOL ROUTINE ADDR
         BASSM R14,R15             GET THE STORAGE
         LR    R3,R15              COPY STORAGE ADDRESS
*
         XC    0(4,R3),0(R3)       CLEAR THE CHAIN POINTER
         LA    R0,4(,R3)           POINT AT DATA AREA
*
         LH    R1,BKNLENG          LOAD THE RDW LENGTH
         LA    R14,BKNRDW          POINT AT ACTUAL RECORD
         LR    R15,R1              DUPLICATE THE LENGTH
         MVCL  R0,R14              COPY THE RECORD
*
         LA    R0,1                LOAD A ONE
         LH    R15,BKNLENG         LOAD THE RDW LENGTH
         LA    R15,7(,R15)         ADD FOR ROUNDING
         SRL   R15,3               DIVIDE BY EIGHT
         SLL   R15,3               MULTIPLY BY EITH
*
         CLC   BKNTYPE,=CL8'BOOK'  CHECK RECORD TYPE
         BE    INFOBOOK            BRANCH IF IT'S A BOOK
*
         A     R0,INFOCNTS         ADD PREVIOUS SHELF COUNT
         ST    R0,INFOCNTS         STORE UPDATED COUNT
*
         A     R15,INFOSIZS        ADD PREVIOUS SIZE
         ST    R15,INFOSIZS        STORE UPDATED SIZE
*
         LA    R15,INFOTBLS        POINT AT BOOKSHELF CHAIN
         LA    R14,INFOLSTS        POINT AT LAST BOOKSHELF
         LA    R1,INFODUPS         POINT AT DUP COUNTER
         B     INFOCHNC            GO TO COMMON CHAIN CODE
*
INFOBOOK DS    0H
         A     R0,INFOCNTB         ADD PREVIOUS BOOK COUNT
         ST    R0,INFOCNTB         STORE UPDATED COUNT
*
         A     R15,INFOSIZB        ADD PREVIOUS SIZE
         ST    R15,INFOSIZB        STORE UPDATED SIZE
*
         LA    R15,INFOTBLB        POINT AT BOOK CHAIN
         LA    R14,INFOLSTB        POINT AT LAST BOOK
         LA    R1,INFODUPB         POINT AT DUP COUNTER
*
INFOCHNC DS    0H
         ICM   R0,15,0(R15)        IS THIS THE FIRST TIME
         BNZ   INFOADD             IF NOT, GO ADD IT
*
         ST    R3,0(,R15)          STORE AS FIRST RECORD
         ST    R3,0(,R14)          STIRE AS LAST RECORD
*
         B     INFOREAD            AND GO GET THE NEXT RECORD
*
INFOADD  DS    0H
         L     R15,0(,R14)         LOAD THE LAST RECORD ADDRESS
         ST    R3,0(,R14)          SET THE NEW LAST RECORD
         ST    R3,0(,R15)          CHAIN THE OLD TO THE NEW
*
         CLC   BKNNAME,BKNNAME-BKNDSECT+4(R15) COMPARE KEYS
         BNE   INFOREAD            IF NOT A DUP, READ NEXT
*
         LA    R0,1                LOAD A ONE
         A     R0,0(,R1)           ADD PREVIOUS DUP COUNT
         ST    R0,0(,R1)           UPDATE DUPLICATE COUNT
         B     INFOREAD            AND READ ANOTHER RECORD
*
         DROP  R2
*
         EJECT
***********************************************************************
*                                                                     *
*        CLOSE THE INFORMATION FILE                                   *
*                                                                     *
***********************************************************************
*
INFOEOD  DS    0H
         CLOSE (INFOFILE)          CLOSE THE OUTPUT FILE
         FREEPOOL INFOFILE         FREE THE BUFFER POOL
*
***********************************************************************
*                                                                     *
*        CONSTRUCT THE PERMANENT TABLE ANCHOR BLOCK                   *
*                                                                     *
***********************************************************************
*
         MODESET EXTKEY=ZERO
*
         LA    R0,BKALNGTH
         LA    R15,BKASPLID
         GETMAIN RU,LV=(0),SP=BKASPLID,KEY=BKAKEYID,LOC=ANY
         LR    R2,R1               COPY THIS FOR USE
         ST    R2,SAVEBKA          AND SAVE IT FOR LATER
         USING BKADSECT,R2
*
         XC    BKADSECT(BKALNGTH),BKADSECT CLEAR THE AREA
         MVC   BKABLKID,=A(BKAIDEQU)    SET CONTROL BLOCK ID
         MVI   BKASUBPL,BKASPLID   SET SUBPOOL ID
         MVI   BKALEVEL,BKAVERSN   SET THE CONTROL BLOCK VERSION
         LA    R0,BKALNGTH         GET THE LENGTH
         STH   R0,BKALENG          STORE THE LENGTH
*
         TIME  DEC                 GET CURRENT TIME AMD DATE
         ST    R0,BKABTIME         STORE THE TIME
         ST    R1,BKABDATE         STORE THE DATE
         AP    BKABDATE,=P'1900000'     GET THE REAL DATE
*
         MVC   BKAQNAME,=C'BOOKSRVR'    SET ENQUEUE QNAME
         MVC   BKARNAME,=CL16'COMMON.STORAGE' SET THE RNAME
*
         EJECT
***********************************************************************
*                                                                     *
*        BUILD THE PERMANENT BOOKSHELF EXTRACT TABLE                  *
*                                                                     *
***********************************************************************
*
         LA    R0,BKELNGTH         LENGTH OF ENTRY HEADER
         L     R1,INFOCNTS         NUMBER OF BOOKSHELF ENTRIES
         MH    R1,=Y(BKEELNTH)     GET ENTRY HEADER SPACE
         AR    R0,R1               ADD TO SPACE NEEDED
         A     R0,INFOSIZS         ADD BOOK STORAGE NEEDED
         LR    R4,R0               SAVE THIS AREA SIZE
*
         GETMAIN RU,LV=(0),SP=BKESPLID,LOC=ANY,BNDRY=PAGE,KEY=BKAKEYID
*
         LR    R3,R1               COPY FOR PERMANENT USE
         USING BKEDSECT,R3
         ST    R3,BKABKSEX         STORE BOOKSHELF EXTRACT ADDRESS
*
         LR    R0,R3               COPY FOR CLEAR
         LR    R1,R4               COPY LENGTH
         SLR   R15,R15             CLEAR FOR MVCL PADDING
         MVCL  R0,R14              CLEAR THE AREA
*
         MVC   BKEBLKID,=A(BKEIDEQU)    SET THE EYE CATCHER
         MVI   BKESUBPL,BKESPLID   SET THE SUBPOOL
         MVI   BKELEVEL,BKEVERSN   SET THE CONTROL BLOCK LEVEL
         ST    R4,BKELENG          COPY THE SAVED AREA SIZE
         MVI   BKETYPE,BKETYPES    INDICATE BOOKSHELF EXTRACT
*
         LA    R4,BKESTART         POINT AT FIRST ENTRY
         USING BKEENTRY,R4
*
         L     R0,INFOCNTS         LOAD NUMBER OF ENTRIES
         ST    R0,BKENUMBR         STORE NUMBER OF ENTRIES
         S     R0,INFODUPS         SUBTRACT NUMBER OF DUPS
         ST    R0,BKEUNQUE         STURE NUMBER OF UNIQUE ENTRIES
*
         ST    R4,BKEFIRST         SET ADDRESS OF FIRST ENTRY
         ST    R4,BKELAST          SET ADDRESS OF LAST ENTRY
*
         L     R5,INFOTBLS         POINT AT FIRST RECORD
*
BKSTLOOP DS    0H
         LH    R1,4(,R5)           LOAD THE LENGTH FOR THE MOVE
         LR    R15,R1              COPY IT
         LA    R0,BKEEDATA         POINT AT RECEIVING AREA
         LA    R14,4(,R5)          POINT AT THE SAVED RECORD
         MVCL  R0,R14              COPY THE RECORD TO EXTRACT AREA
*
         L     R1,BKELAST          GET LAST RECORD
         ST    R1,BKEEPREV         SET THE BACK POINTER
         ST    R4,BKEENEXT-BKEENTRY(,R1)
         ST    R4,BKELAST          SET THE NEW LAST RECORD
*
         LA    R0,BKEELNTH+7       PREFIX PLUS ROUNDING
         AH    R0,4(,R5)           ADD THE RDW
         SRL   R0,3                DIVIDE BY EIGHT
         SLL   R0,3                MULTIPLY BY EIGHT
         AR    R4,R0               GET NEXT SLOT IN EXTRACT TABLE
*
         ICM   R5,15,0(R5)         GET NEXT SAVED ADDRESS
         BNZ   BKSTLOOP            LOOP IF WE HAVE MORE
*
         L     R4,BKEFIRST         POINT AT FIRST ENTRY
         ST    R5,BKEEPREV         ZERO BACK POINTER
         L     R4,BKELAST          POINT AT LASTE ENTRY
         ST    R5,BKEENEXT         ZERO FORWARD POINTER
*
         DROP  R3,R4
*
         EJECT
***********************************************************************
*                                                                     *
*        BUILD THE PERMANENT BOOK EXTRACT TABLE                       *
*                                                                     *
***********************************************************************
*
         LA    R0,BKELNGTH         LENGTH OF ENTRY HEADER
         L     R1,INFOCNTB         NUMBER OF BOOK ENTRIES
         MH    R1,=Y(BKEELNTH)     GET ENTRY HEADER SPACE
         AR    R0,R1               ADD TO SPACE NEEDED
         A     R0,INFOSIZB         ADD BOOK STORAGE NEEDED
         LR    R4,R0               SAVE THIS AREA SIZE
*
         GETMAIN RU,LV=(0),SP=BKESPLID,LOC=ANY,BNDRY=PAGE,KEY=BKAKEYID
*
         LR    R3,R1               COPY FOR PERMANENT USE
         USING BKEDSECT,R3
         ST    R3,BKABOOEX         STORE BOOKSHELF EXTRACT ADDRESS
*
         LR    R0,R3               COPY FOR CLEAR
         LR    R1,R4               COPY LENGTH
         SLR   R15,R15             CLEAR FOR MVCL PADDING
         MVCL  R0,R14              CLEAR THE AREA
*
         MVC   BKEBLKID,=A(BKEIDEQU)    SET THE EYE CATCHER
         MVI   BKESUBPL,BKESPLID   SET THE SUBPOOL
         MVI   BKELEVEL,BKEVERSN   SET THE CONTROL BLOCK LEVEL
         ST    R4,BKELENG          COPY THE SAVED AREA SIZE
         MVI   BKETYPE,BKETYPEB    INDICATE BOOK EXTRACT
*
         LA    R4,BKESTART         POINT AT FIRST ENTRY
         USING BKEENTRY,R4
*
         L     R0,INFOCNTB         LOAD NUMBER OF ENTRIES
         ST    R0,BKENUMBR         STORE NUMBER OF ENTRIES
         S     R0,INFODUPB         SUBTRACT NUMBER OF DUPS
         ST    R0,BKEUNQUE         STURE NUMBER OF UNIQUE ENTRIES
*
         ST    R4,BKEFIRST         SET ADDRESS OF FIRST ENTRY
         ST    R4,BKELAST          SET ADDRESS OF LAST ENTRY
*
         L     R5,INFOTBLB         POINT AT FIRST RECORD
*
BOOTLOOP DS    0H
         LH    R1,4(,R5)           LOAD THE LENGTH FOR THE MOVE
         LR    R15,R1              COPY IT
         LA    R0,BKEEDATA         POINT AT RECEIVING AREA
         LA    R14,4(,R5)          POINT AT THE SAVED RECORD
         MVCL  R0,R14              COPY THE RECORD TO EXTRACT AREA
*
         L     R1,BKELAST          GET LAST RECORD
         ST    R1,BKEEPREV         SET THE BACK POINTER
         ST    R4,BKEENEXT-BKEENTRY(,R1)
         ST    R4,BKELAST          SET THE NEW LAST RECORD
*
         LA    R0,BKEELNTH+7       PREFIX PLUS ROUNDING
         AH    R0,4(,R5)           ADD THE RDW
         SRL   R0,3                DIVIDE BY EIGHT
         SLL   R0,3                MULTIPLY BY EIGHT
         AR    R4,R0               GET NEXT SLOT IN EXTRACT TABLE
*
         ICM   R5,15,0(R5)         GET NEXT SAVED ADDRESS
         BNZ   BOOTLOOP            LOOP IF WE HAVE MORE
*
         L     R4,BKEFIRST         POINT AT FIRST ENTRY
         ST    R5,BKEEPREV         ZERO BACK POINTER
         L     R4,BKELAST          POINT AT LASTE ENTRY
         ST    R5,BKEENEXT         ZERO FORWARD POINTER
*
         DROP  R3,R4
*
         DROP  R2                  DROP THE NEW ANCHOR BLOCK FOR NOW
*
         EJECT
***********************************************************************
*                                                                     *
*        FREE THE PREVIOUS COMMON AREA IF IT EXISTS                   *
*                                                                     *
***********************************************************************
*
         L     R3,SAVESSCT         LOAD THE SAVED SSCT ADDRESS
         USING SSCT,R3
*
         ICM   R2,15,SSCTSUSE      GET THE CURRENT ANCHOR ENVIRONMENT
         BZ    BILDANEW            BRANCH IF NONE
*
         SLR   R0,R0               CLEAR FOR STORE
         ST    R0,SSCTSUSE         ZERO THIS FIELD
*
         USING BKADSECT,R2
         LA    R4,BKAANCHR         POINT AT FIRST ANCHOR WORD
         LA    R5,BKAANUMB         GET NUMBER OF ANCHOR WORDS
*
BILDFREE DS    0H
         ICM   R1,15,0(R4)         LOAD THE ANCHOR WORD
         BZ    BILDFREN            IF ZERO, NOTHING TO FREE
*
         USING BKEDSECT,R1
         L     R0,BKELENG          LOAD THE LENGTH
         IC    R15,BKESUBPL        GET THE SUBPOOL
         DROP  R1
*
         FREEMAIN RU,A=(1),LV=(0),SP=(15),KEY=BKAKEYID
*
BILDFREN DS    0H
         LA    R4,4(,R4)           INCREMENT TO NEXT ANCHOR WORD
         BCT   R5,BILDFREE         LOOP THROUGH EACH EXTRACT BLOCK
*
         LH    R0,BKALENG          LOAD THE ANCHOR LENGTH
         IC    R15,BKASUBPL        GET THE SUBPOOL
*
         FREEMAIN RU,A=(R2),LV=(0),SP=(15),KEY=BKAKEYID
*
         DROP  R2
*
BILDANEW DS    0H
         L     R1,SAVEBKA
         ST    R1,SSCTSUSE         POINT TO THE NEW ANCHOR AREA
*
         DROP  R3
*
         MODESET KEY=NZERO         GET BACK TO NORMAL KEY
*
         EJECT
***********************************************************************
*                                                                     *
*        FREE THE ACCUMULATED EXTRACT DATA                            *
*                                                                     *
***********************************************************************
*
         SLR   R0,R0               INDICATE FREE
         LA    R1,EXTBLOCK         POINT AT EXTRACT BLOCK
         L     R15,CPSADDR         LOAD CELL POOL ROUTINE ADDR
         BASSM R14,R15             GET THE STORAGE
         LR    R1,R15              COPY STORAGE ADDRESS
*
***********************************************************************
*                                                                     *
*        DELETE ALL THE SUBROUTINES                                   *
*                                                                     *
***********************************************************************
*
ALLDONE  DS    0H
         DELETE EPLOC=CPSNAME      DELETE THE CELL POOL SUBROUTINE
*
***********************************************************************
*                                                                     *
*        RETURN TO CALLER                                             *
*                                                                     *
***********************************************************************
*
         L     R13,4(,R13)         UNCHAIN THE SAVE AREA
         L     R15,RETCODE         LOAD THE RETURN CODE
         L     R14,12(,R13)        LOAD THE RETURN ADDRESS
         LM    R0,R12,20(R13)      RELOAD THE REGISTERS
         BR    R14                 RETURN TO CALLER
*
         EJECT
***********************************************************************
*                                                                     *
*        VARIOUS ABEND ROUTINES                                       *
*                                                                     *
***********************************************************************
*
PARMINVL DS    0H
         ABEND 10,DUMP
*
INFOPENE DS    0H
         ABEND 60,DUMP
*
LOADERR0 DS    0H
         ABEND 75,DUMP
*
INVLSSCT DS    0H
         WTO   'CCCBKACE COMMON ANCHOR SSCT NOT FOUND',ROUTCDE=11
         LA    R15,16
         ST    R15,RETCODE         SET THE RETURN CODE
         B     ALLDONE
*
         EJECT
LITERALS LTORG ,
*
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
SAVEAREA DC    9D'0'               REGISTER SAVE AREA
*
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
*
RETCODE  DC    F'0'                RETURN CODE
*
INFOCNT  DC    F'0'                COUNT OF EXTRACT RECORDS READ
*
INFOTBLS DC    A(0)                ADDRESS OF FIRST EXTRACT SHELF
INFOLSTS DC    A(0)                ADDRESS OF LAST EXTRACT SHELF
INFOSIZS DC    F'0'                SIZE OF SHELF RECORDS
INFOCNTS DC    F'0'                COUNT OF BOOKSHELF RECORDS
INFODUPS DC    F'0'                COUNT OF DUPLICATE NAMES
*
INFOTBLB DC    A(0)                ADDRESS OF FIRST EXTRACT BOOK
INFOLSTB DC    A(0)                ADDRESS OF LAST EXTRACT BOOK
INFOSIZB DC    F'0'                SIZE OF BOOK RECORDS
INFOCNTB DC    F'0'                COUNT OF BOOK RECORDS
INFODUPB DC    F'0'                COUNT OF DUPLICATE NAMES
*
SAVEBKA  DC    A(0)                ADDRESS OF NEW COMMON ANCHOR
SAVESSCT DS    A                   ADDRESS OF THE SSCT
*
CPSNAME  DC    CL8'CCCBKCPS'       CELL POOL ROUTINE NAME
CPSADDR  DC    A(0)                CELL POOL SUBROUTINE ADDRESS
*
FREECSA  DC    X'00'               X'FF' IF CSA FREE ONLY
*
EXTBLOCK BKMGRCPS ID=BOO,SP=66,SIZE=4096,LOC=ANY
*
INFOFILE DCB   DSORG=PS,                                               X
               DDNAME=INFOFILE,                                        X
               MACRF=GL,                                               X
               EODAD=INFOEOD,                                          X
               RECFM=VB
*
         EJECT
*
         PUSH  PRINT
         PRINT NOGEN
*
         CVT   DSECT=YES
*
         IEFJESCT
*
         IEFJSCVT
*
         DCBD  DSORG=PS,DEVD=DA
*
         BKMGRINF
*
         BKMGRCSA
*
         POP   PRINT
*
         END   CCCBKACE
