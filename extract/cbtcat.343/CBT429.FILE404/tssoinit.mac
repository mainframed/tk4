TSSOINIT CSECT
***********************************************************************
* THIS IS THE INITIALIZATION PROGRAM FOR THE TSSO SUBSYSTEM.
* THIS ROUTINE WILL GET CONTROL AT IPL TIME TO PERFORM THE FOLLOWING
* FUNCTIONS:
*
* 1) GETMAIN THE TSSO NON DESTRUCTABLE SYSTEM AREA. THIS AREA IS
*    GETMAINED AT IPL TIME, AND IT REMAINS THROUGHOUT THE DAY. THE
*    CONTROL BLOCK MAPPING THIS AREA IS IN THE TSSONDSA DSECT. IT IS
*    BASICALLY USED TO HOLD DATA THAT SHOULD NOT DISAPPEAR WHEN TSSO
*    DOES, FOR EXAMPLE, THE NUMBER OF SYSTEM RESTARTS. THE TSSO LX
*    NUMBER, ETC...
*
*
*
*
*
*
*
*
*
* THE ENTRY IN THE PARMLIB IEFSSNXX MEMBER FOR THE TSSO SUBSYSTEM
* SHOULD LOOK LIKE THIS.
*
* TSSO,TSSOINIT
***********************************************************************
         EQUATES
         STM    R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR     R9,R1              SAVE A COPY OF THE PARM LIST
         LR     R12,R15            LOAD ENTRY POINT OF EXIT
         USING  TSSOINIT,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST     R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST     R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR     R13,R1             KEEP A COPY IN R13
*
         MODESET KEY=ZERO
*
         GETMAIN R,LV=1024
         LR     R11,R1             COPY LOCAL STORAGE.
         USING  INITDSEC,R11       AND ADDRESS IT.
*
***********************************************************************
* STEP ONE IS TO GETMAIN THE AREA. NOTE THAT SUBPOOL 228 IS USED, AS  *
* WE WANT READ ONLY ACCESS TO THIS AREA IN MEMORY.                    *
***********************************************************************
         GETMAIN R,LV=1024,SP=228
         LR     R9,R1              R9 HAS ADDRESS OF THIS GLOBAL
*                                  STORAGE.
         GETCVT (R8),SSCT=YES      GET POINTER TO TSSO SSCT ENTRY.. RPS
*                                  BE THERE YET...
         USING SSCT,R8
         L     R7,SSCTSUS2
         LTR   R7,R7
         BNZ   DUPINIT
         ST    R9,SSCTSUS2         AND FILL IN THE SSCTSUS2 FIELD...
         USING TSSONDSA,R9         ADDRESS IT.
         XC    0(256,R9),0(R9)
         XC    256(256,R9),256(R9) ZERO
         XC    512(256,R9),512(R9)    OUT THE
         XC    768(256,R9),768(R9)          STORAGE
*
         OI    SSCTFLG1,SSCTUPSS   USE JES2 FOR SYSOUT ETC...
         DROP  R8
         DROP  R9
***********************************************************************
* THE NEXT STEP IS TO DISPLAY THE PRETTY MESSAGE INIDICATING THAT     *
* TSSO IS READY TO BE STARTED...                                      *
***********************************************************************
         WTO   'TSSI000I T S S O  IS WAITING FOR START COMMAND'
         B     ENDPROG
DUPINIT  DS    0H
         WTO   'TSSI001I TSSOINIT HAS ALREADY BEEN RUN'
         B     ENDPROG
ENDPROG  DS    0H
         FREEMAIN R,LV=1024,A=(R11)
         LR    R1,R13
         L     R13,4(R13)
         FREEMAIN R,LV=72,A=(R1)
         LM    R14,R12,12(R13)     LOAD UP RETURN REGISTERS
         XR    R15,R15
         BR    R14
         CVT   DSECT=YES
INITDSEC DSECT
FLAGS    DS    XL4
* BYTE 1
* X'80' - MODESET TO KEY ZERO WAS DONE.
         IEFJSCVT
         IEFJSIPL
         IEFJESCT
         TSSONDSA
         END TSSOINIT
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOINIT(''TSSO VERSION 4.3 &SYSDATE &SYSTIME'') '
 PUNCH ' ENTRY    TSSOINIT'
 PUNCH ' NAME     TSSOINIT(R)'
         END
