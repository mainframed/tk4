&WTOR   SETC   'YES'
***********************************************************************
* THIS MODULE WILL BE RESPONSIBLE FOR CLEANING UP TSSO RESOURCES      *
* WHEN TSSO IS TERMINATING. THE MODULE WILL BE CALLED FROM ONE OF     *
* TWO PLACES, EITHER FROM THE TSSOESTA ROUTINE, OR FROM THE TSSO      *
* PROCESSING MODULE.                                                  *
***********************************************************************
***********************************************************************
* NOTE: ALL MESSAGES PRODUCED BY THIS MODULE HAVE THE FORM:           *
* TSSDXXXS WHERE 301 <= XXX <= 350                                    *
* NOTE: THE LAST MESSAGE NUMBER IN USE IS 305.                        *
* NOTE: THE "D" IN THE MESSAGE ID STANDS FOR "DEATH".                 *
***********************************************************************
*                                                                     *
* MODIFIED                                                            *
*   20OCT92  GLA  USE NEW DSECT FOR AOF TABLE                         *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
TSSOTERM CSECT
         EQUATES
         STM    R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR     R12,R15            LOAD ENTRY POINT OF TSSO
         USING  TSSOTERM,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST     R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST     R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR     R13,R1             KEEP A COPY IN R13
*
         GETMAIN R,LV=1024
         LR     R11,R1
         USING  TERMDATD,R11
         MVC    POST1D(POST1CE-POST1C),POST1C
         MVC    TRMWTO1D(TRMWTO1E-TRMWTO1C),TRMWTO1C
**********************************************************************
* THIS MODULE IS THE TERMINATE ROUTINE FOR TSSO. ITS PURPOSE IS TO GAIN
* CONTROL OF TSSO AFTER A FAILURE, AND PERFORM THE FOLLOWING FUNCTIONS
*
* 1) DISCONNECT THE SUBSYSTEM FROM MVS.
* 2) FREEMAIN THE TSSO COMMAND RING
* 3) FREEMAIN THE TSSO SSVT
* 4) DELETE THE TSSO AUTOMATED OPERATOR PROCEDURE TABLE
* 5) DELETE THE TSSO SUBSYSTEM SUPPORT MODULE(S)
* 6) DECREMENT THE COUNT OF SUBSYSTEMS REQUESTING WTO BROADCASTS
* 7) RETURN THE JOB ID TO JES.
* 8) DE-ALLOCATE THE SUBSYSTEM ALLOCATABLE CONSOLE(S)
* 9) FREEMAIN THE TSSO SECURITY ARRAY
*10) LASTLY, FREEMAIN THE TSSO CVT
*
**********************************************************************
         GETCVT (R10)
         USING TSSOCVT,R10
         L     R9,TSSODSEC
         USING DATD,R9
         ESTAE 0
ESTAEX   DS    0H
**********************************************************************
* AT THIS POINT, THE TERMINATION ROUTINE IS READY TO GO.
* STEP 1 IS TO DISCONNECT THE SUBSYSTEM
**********************************************************************
         MODESET KEY=ZERO
         OI    TSSOFLG1,TSSOGONE       SET TERMINATION FLAG
         L     R2,TSSOSSCT             LOAD ADDRESS OF SSCT
         LTR   R2,R2                   MAKE SURE IT EXISTS
         BZ    NOSSCT
         XR    R3,R3                   WIPE OUT R3
         USING SSCT,R2
         CLC   SSCTSNAM(4),=CL4'TSSO'  MAKE SURE ITS TSSO
         BNE   NOSSCT
         ST    R3,SSCTSSVT             ** DISC SUBSYSTEM **
         DROP  R2
*
         B     FREEIT
NOSSCT   DS    0H
         WTO   'TSSD301S UNABLE TO DISCONNECT SUBSYSTEM- SSCT POINTER IX
               VALID',DESC=(1)
ENDST1   DS    0H
         B     STEP2
*
*
*
*
STEP2    DS    0H
FREEIT   DS    0H
**********************************************************************
* STEP 2 AFTER DISCONNECTING THE SUBSYSTEM IS TO FREEMAIN THE TSSO
* COMMAND RING. THIS IS A RELATIVELY STRAIGHTFOWARD PROCEDURE
**********************************************************************
         L     R2,NUMCMDS             GET MAX COMMAND ENTRY FOR TSSO
         SLL   R2,8
         L     R1,CMDRING             GET ADDRESS OF COMMAND RING
         FREEMAIN R,LV=(R2),A=(R1),SP=241      COMMAND RING
ENDST2   DS    0H
         B     STEP3
*
*
*
*
*
*
FREESSVT DS    0H
STEP3    DS    0H
**********************************************************************
* STEP 3 AFTER FREEING THE COMMAND RING, IS TO FREEMAIN THE TSSO SSVT
*
**********************************************************************
         L     R2,TSSOSSVT            GET ADDRESS OF SSVT
         LTR   R2,R2
         BZ    NOSSVT
         SL    R2,=F'4'        ACTUAL SSVT IS FOUR BYTES LESS THEN
*                              SSVT PRESENTED TO MVS FOR SSVT HEADER
         CLC   0(4,R2),=CL4'SSVT'     MAKE SURE
         BNE   NOSSVT                 IT ISNT FAKED
         FREEMAIN R,LV=1024+256+4+4,SP=241,A=(R2)   FREEMAIN IT
         B     FREEMORE
NOSSVT   DS    0H
         WTO   'TSSD302S UNABLE TO FREEMAIN SSVT- SSVT POINTER INVALID'X
               ,DESC=(1)
FREEMORE DS    0H
**********************************************************************
* STEP 4 AFTER FREEING THE SSVT IS TO PERFORM A MODULE DELETE ON THE
* TSSO AUTOMATED OPERATOR FACILITY REPLY TABLE.
*
* TSSO 4.3 WILL CHECK IF THERE ARE ANY ACTIVE OSWAITS BEFORE DELETING
* THE TABLE. IF SO, IT WILL POST THEM WITH BAD RETURN CODES AND ALLOW
* TERMINATION TO PROCEED.
*
*
**********************************************************************
         L     R2,TSSOTABL         GET ADDRESS OF TSSO AOF TABLE.
         LTR   R2,R2               DOES IT EXIST ?
         BZ    NOREPLY
         L     R2,0(R2)           POINT TO FIRST RECORD IN TABLE.
         USING AOFNTRY,R2         SETUP ADDRESSABILITY FOR ENTRY
         XR    R4,R4              FLAG...
RELALOOP DS    0H
         CLC   AOFMSGID,=CL8'ZZZZZZZZ' END OF TABLE ?
         BE    RELEOT                  YES, END OF TABLE...
         CLC   AOFACTN,=CL8'POST'      IS THIS ACTION=POST ?
         BNE   RELNENT                 NO, CHECK NEXT ENTRY
         TM    AOFPFLG,AOFP1WT         IS IT BEING WAITED ON ?
         BNO   RELNENT                 NO, DO BOTHER...
         L     R5,AOFPECB              GET ECB TO POST
         L     R3,AOFPASCB             GET THE ADDRESS SPACE...
         POST  (R5),X'FFF',ASCB=(R3),ERRET=DODEL,MF=(E,POST1D)
         LA    R4,1
         B     RELNENT
RELNENT  DS    0H
         L     R2,AOFNXT
         B     RELALOOP
         DROP  R2
*
RELEOT   DS    0H
         LTR   R4,R4              ANYBODY WAITING ?
         BZ    DODEL
*
         WTO   'TSSC142I TERMINATION DELAYED - ACTIVE OSWAITS IN PROGREX
               SS'
         MVC   DINTVL(8),=CL8'00000200'   WAIT TWO SECONDS.....
         STIMER WAIT,DINTVL=DINTVL
*
DODEL    DS    0H
         LA    R2,16(R2)           POINT TO TABLE NAME
         DELETE EPLOC=(R2)         ALL GONE...
*
NOREPLY  DS    0H
**********************************************************************
* STEP 5 AFTER DELETE THE AOF TABLE, IS TO DELETE THE SUBSYSTEM SUPPORT
* MODULES. A LOOP IS REQUIRED TO DO THIS, BECAUSE THERE MAY BE MORE
* THEN ONE.
**********************************************************************
FREESSSM DS    0H
         LH    R2,SSICOUNT
         LA    R3,SSIARRAY
FREESSLP DS    0H
         DELETE EPLOC=8(R3)            ALL GONE...
         LA    R3,36(R3)               NEXT ENTRY
         BCT   R2,FREESSLP
**********************************************************************
* STEP 6 AFTER DELETING THE SSSM MODULE IS TO DECREMENT THE COUNT OF
* SUBSYSTEMS RECEIVEING WTO REQUESTS. THIS IS REQUIRED IF ASSURE
* SUCCESS OF FUTURE STARTUPS OF TSSO.
**********************************************************************
         L     R2,16
         USING CVT,R2
         L     R2,CVTCUCB           GET UCM PREFIX
         USING UCM,R2
         AIF   ('&WTOR' NE 'YES').NOBRD2
         LH    R3,UCMBRDST
         BCTR  R3,0         (NOT BALR - MARC)
         STH   R3,UCMBRDST
.NOBRD2  ANOP
         DROP  R2
**********************************************************************
* STEP 7 CONCERNS RETURNING THE JOB ID TO JES. THIS IS A SUBSYSTEM
* FUNCTION. THIS ALLOWS JES TO NUKE CONTROL BLOCKS, CLOSE SUBSYSTEM
* DATASETS AND THE LIKE. IT IS NOT REQUIRED IF TSSO NEVER OBTAINED A
* JES ID.
* THE FIRST STEP IN THIS FUNCTION IS TO MODIFY THE JSCBSSIB FIELD
* TO REFLECT WHAT IT WAS ORIGNINALLY.
**********************************************************************
TRMSTEP7 DS    0H
         TM    TSSOFLG1,TSSOJSMD     DID TSSO EVER MODIFY THE JSCBSSIB
         BZ    JSCBOK
* WE MUST MODIFY THE JSCB
         L     R15,540               CURRENT TCB POINTER
         L     R15,180(R15)          TCBJSCB FIELD
         USING IEZJSCB,R15
         L     R15,JSCBACT
         L     R5,TSSOSSIB           GET ORIGNAL SSIB
         ST    R5,JSCBSSIB           AND STORE IT IN...
         DROP  R15
JSCBOK   DS    0H
         TM    TSSOFLG1,TSSOJBID     DID TSSO EVER GET A JOBID ?
         BZ    NORETJOB              NOPE, DONT SWEAT IT.
*
         LA    R5,$SVSSOB            THIS FIELD WAS PREVIOUSLY
*                                    INITIALIZED IN THE REQUEST
*                                    JOBID FUNCTION OF TSSO
         USING SSOB,R5               ADDRESS IT
         LA    R15,SSOBRTRN          GET JES FUNCTION CODE
         STH   R15,SSOBFUNC          AND PUT IN SSOB
*
         MODESET MODE=SUP            SUBSYSTEM REQUESTS NEED
*                                    SUPERVISOR MODE
         LA    R1,$SVSSOBA           THIS FIELD WAS INITIALIZED TO
*                                    THE START OF THE SSOB IN THE
*                                    REQUEST JOBID FUNCTION.
         IEFSSREQ
         LR    R5,R15
*
         MODESET MODE=PROB           ALL DONE
         LTR   R5,R5
         BNZ   ERRRETJB
         B     NORETJOB
ERRRETJB DS    0H
         WTO   'TSSD303E TSSO UNABLE TO RETURN JOB ID TO JES'
*
NORETJOB DS    0H
TRMSTEP8 DS    0H
***********************************************************************
* STEP 8 OF THE TSSO TERMINATION PROCEDURE WILL BE TO DEALLOCATE THE  *
* SUBSYSTEM CONSOLE, IF WE HAD PREVIOUSLY OBTAINED ONE. A CALL TO THE *
* TSSO CONSOLE SERVICE ROUTINE WILL DO THE TRICK.                     *
*
* NOTE: TSSO 4.3 MODIFIES THIS ROUTINE TO DELETE *ALL* OF THE OBTAINED*
* CONSOLES, IN ADDITION TO FREEMAINING THE SSCONCB AND THE SSCONCBH   *
***********************************************************************
         L     R8,SSCONSAD       GET THE SS CONSOLE CONTROL BLK HEADER
         USING SSCONCBH,R8
         LA    R8,SSCONFIR       POINT TO FIRST ELEMENT
FRESCNLP DS    0H
         USING SSCONCB,R8
         L     R1,SSCONNUM       GET TSSO CONSOLE ID...
         LTR   R1,R1             ANYTHING THERE ?
         BZ    FRECONCB          NO, GO DO THE FREEMAIN
*
         LA    R5,3              TRY TO FREE IT THREE TIMES.
SSCFRELP DS    0H
         TM    SSCONFLG,X'80'    IS SOMEONE USING THE SS CONSOLE ?
         BNO   SSCNUSE           NO, SS CONSOLE NOT IN USE.
*
         L     R2,SSCONICB       GET THE ICB...
         LTR   R2,R2             ANYTHING THERE ?
         BZ    SSCNUSE
*
         NI    SSCONFLG,255-X'20'    TURN OFF TSSO MSG TRAPPING
*
         USING OSCMDICB,R2
         LA    R3,OSCMDECB       GET ECB  FOR XMEM POST
         L     R4,OSCMDACB       AND THE ASCB IS ALSO NEEDED
         POST  (R3),X'EEE',ASCB=(R4),ERRET=SSCNUSE,MF=(E,POST1D)
*
         L     R1,SSCONNUM
         ST    R10,TSCVTPTR      REMEMBER TSSO CVT ADDR
         LR    R10,R11           FOR CONVERT ROUTINE
         CALL  JCECVTBD
         L     R10,TSCVTPTR      AND BACK TO THE CVT
         STH   R1,TRMWTO1D+58
         WTO   MF=(E,TRMWTO1D)   (MSG 305) - INDICATING SSCON BUSY.
*
         MVC   DINTVL(8),=CL8'00000200'   2 SECONDS TO FREE SS CONSOLE
         STIMER WAIT,DINTVL=DINTVL
*
         BCT   R5,SSCFRELP
         DROP  R2
*
SSCNUSE  DS    0H
         L     R1,SSCONNUM       RESTORE CONSOLE NUMBER FOR FREE ROUT.
         STH   R1,TSSCONID       STICK IN TSSCONID.
         LA    R0,4
         LINK  EP=TSSOGSSC          TSSOGSSC WILL DO THE FREEING
         LA    R8,SSCONCBL(R8)
         B     FRESCNLP
FRECONCB DS    0H
         L     R8,SSCONSAD       GET THE SSCONCB HEADER
         LTR   R8,R8
         BZ    NOFRECCB
         FREEMAIN R,LV=1024,A=(R8),SP=241   AND PERFORM THE FREEMAIN
         B     TRMSTEP9
NOFRECCB DS    0H
         WTO   'TSSD304E UNABLE TO FREE SSCONCBH - BAD POINTER'
         B     TRMSTEP9
*
TRMSTEP9 DS    0H
***********************************************************************
* STEP 9 OF THE TERMINATION PROCEDURE IS TO FREEMAIN THE TSSO         *
* SIGNON TABLE. THE ADDRESS IS POINTED TO FROM THE SECARRAY FIELD IN  *
* THE TSSO DATA AREA.                                                 *
***********************************************************************
         L     R5,SECARRAY         GET ADDRESS
         LTR   R5,R5
         BZ    TRMSTE95            NO SECARRAY - GO DO NEXT THING
*
         FREEMAIN R,LV=1024,A=(R5),SP=241
         B     TRMSTE95
TRMSTE95 DS    0H
***********************************************************************
* STEP 2.5 OF THE TSSO TERMINATION PROCEDURE IS TO DESTROY THE CROSS  *
* MEMORY SERVICES ENVIRONMENT. THIS IS DONE IMMEDIATELY TO PREVENT    *
* ERRENT CROSS MEMORY SERVICE CALLS.                                  *
***********************************************************************
         GETCVT (R8),NDSA=YES
         USING TSSONDSA,R8
         TM    TSSOFLG2,TSSOXMON          XMEM EVER CREATED ?
         BNO   ENDST9#5                    DONT BOTHER
*
         ETDES TOKEN=TSSOETTK,PURGE=YES,  GIVE IT THE TOKEN            X
               MF=(E,ETDESD)              TO DESTROY XMEM ENVIRONMENT
         NI    NDSAFLG1,255-X'10'         INDICATE ENVIRONMENT GONE.
         DELETE EP=TSSOGAPF               DELETE THE XMEM MODULE.
         DROP  R8
*
ENDST9#5 DS    0H
         B     TRMSTEPA
*
TRMSTEPA DS    0H
***********************************************************************
* STEP 10 OF THE TERMINATION PROCEDURE IS TO DELETE THE TSSOPCMD      *
* MODULE FROM GLOBAL STORAGE.                                         *
***********************************************************************
         TM    TSSOFLG2,TSSOPLOA   WAS TSSOPCMD LOADED
         BNO   TRMSTEPB
         DELETE EP=TSSOPCMD
         B     TRMSTEPB
TRMSTEPB DS    0H
***********************************************************************
* FREEMAIN THE TSSO COMMUNICATIONS VECTOR TABLE, POINTER TO VIA       *
* THE SSCTSUSE FIELD, AND STORE ZEROES INTO THAT FIELD.               *
* NOTE THAT R10 STILL POINTS TO THE SSCTSUE FIELD (TSSO CVT)
***********************************************************************
         FREEMAIN R,LV=1024,SP=228,A=(R10)
         GETCVT (R10),POINTER=YES
         XR     R1,R1
         ST     R1,0(R10)         BLANK OUT THE SSCTSUE
         MODESET KEY=NZERO
*
ENDPROG  DS    0H
         FREEMAIN R,LV=1024,A=(R11)
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         XR    R15,R15
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
*
POST1C   POST  ,ASCB=0,ERRET=0,MF=L
POST1CE  DS    0H
*
TRMWTO1C WTO   'TSSD305I TSSO TERMINATION DELAYED - SUBSYSTEM CONSOLE XX
               X BUSY',MF=L
TRMWTO1E EQU   *
*
TERMDATD DSECT
WKRATERM DS    CL200
POST1D   POST  ,ASCB=0,ERRET=0,MF=L
*
TRMWTO1D WTO   'TSSD305I TSSO TERMINATION DELAYED - SUBSYSTEM CONSOLE XX
               X BUSY',MF=L
DINTVL   DS    CL8
TSCVTPTR DS    F
UCM      DSECT
         IEECUCM
*
         TSSOCVT
         TSSONDSA
         TAOFNTRY
         COPY   TSSODATD
         IEFJESCT
         IEFJSCVT
         IEFJSSOB (CM,RR),CONTIG=YES
         IEZJSCB
         CVT  DSECT=YES
         SSCONCBH
         SSCONCB
         OSCMDICB
         END  TSSOTERM
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOTERM(''TSSO V 4.3.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    TSSOTERM'
 PUNCH ' NAME     TSSOTERM(R)'
         END
