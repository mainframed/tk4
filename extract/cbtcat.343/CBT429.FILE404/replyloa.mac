REPLYLOA CSECT                                                    RPS
         EQUATES                                                  RPS
         STM   R14,R12,12(R13)          SAVE CALLER'S REGS        RPS
         LAE   R12,0(R15,0)             ESTABISH R11 AS BASE REG  RPS
         USING REPLYLOA,R12             ESTABLISH ADDRESSABILITY  RPS
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
********************************************************************
* THIS COMMAND WILL SERVE AS THE REPLYING MODULE FOR THE REPLY     *
* COMMAND FUNCTION OF TSSO. THIS MODULE ACCEPT PARAMTERS FROM THE  *
* APPLY PROMPTER, DUE A SPACE SWITCH INTO THE CONSOLE ADDRESS SPACE*
* AND ATTEMPT TO REPLY TO THE COMMAND.                             *
*                                                                  *
* METHOD OF OPERATION                                              *
*                                                                  *
* 1) OBTAIN PARAMETER LIST IN THE FORM:                            *
*                                                                  *
*                                                                  *
* R1==> PARMS                                                      *
* PARMS                                                            *
* MSGID FOR 8 BYTES                                                *
* IMS COPY FOR 9 BYTES                                             *
* REPLY TEXT FOR 120 BYTES                                         *
*                                                                  *
* 2) OBTAIN INFORMATION ABOUT THE CONSOLE ADDRESS SPACE, SUCH AS   *
*    ASID, ASCB AND CONSOLE ID OF MASTER.                          *
*                                                                  *
* 3) SSAR TO CONSOLE ASID                                          *
*                                                                  *
* 4) SAC TO CONSOLE ASID                                           *
*                                                                  *
* 5) SEARCH THE ORE AND  WQE CONTROL BLOCKS UNTIL EITHER THE IMS   *
*    COPY, OR MESSAGE ID IS LOCATED...                             *
*                                                                  *
* 6) FORMAT AND ISSUE THE REPLY COMMAND, OR SET RETURN CODE SAYING *
*    THIS COULD NOT BE DONE.                                       *
*                                                                  *
*                                                                  *
* 7) RETURN TO THE SAFETY OF THE REPLY MODULE, AFTER RETURNING TO  *
*    KEY OF EIGHT.                                                 *
*                                                                  *
***********************************************************************
*                                                                     *
* MODIFIED                                                            *
*                                                                     *
*   31AUG99  DHC   REPLACE THE CROSS MEMORY STUFF WITH LIONRPLY       *
*                  AKA 'REPLY' OF THE 'COMMAND' PROCESSOR  IN FILE 19 *
*                  OF THE CBT TAPE AT RELEASE 417                     *
*                  NOTE: THIS PROGRAM IS NO LONGER RE-ENTRANT         *
*                                                                     *
*   29OCT92  GLA   SET MASTCONS OF ZERO IF NO UCMLIST (HARDWARE       *
*                  SYSCONS AS MASTER)                                 *
*                                                                     *
*   15OCT92  GLA  INCORPORATE CHANGES FROM VERSION 4.2                *
*              A.  ADD SUPPORT FOR IDMS                               *
*              B.  ADD SUPPORT FOR CADISPATCH AS IDMS                 *
*              C.  ADD SUPPORT FOR 31BIT ORE ELEMENTS.                *
*                                                                     *
***********************************************************************
         LR    R5,R1                    SAVE PARM POINTER          RPS
         LA    R1,WORKAREA_LEN          GET WORKAREA LENGTH FOR GM RPS

         STORAGE OBTAIN,                + OBTAIN A WORKAREA        RPS X
               LENGTH=(R1),             + R1 = LENGTH              RPS X
               ADDR=(R2),               + RETURN ADDR IN R2        RPS X
               COND=NO                  + ABEND IF WE CAN'T GET IT RPS

         USING WORKAREA,R2              R2 ---> SAVEAREA/WORKAREA  RPS
         XC    WORKAREA(L'WORKAREA_LEN),WORKAREA  CLEAR WORKAREA   RPS
         ST    R2,8(R13)                FORWARD CHAIN POINTER      RPS
         ST    R13,SAVEAREA+4           BACKWARD CHAIN POINTER     RPS
         LR    R13,R2                   SAVE/WORKAREA ADDR IN R13  RPS
         LR    R10,R2                   AND IN A BASE REGISTER    *DHC*
         DROP  R2                                                  RPS
         USING WORKAREA,R10             R10---> SAVEAREA/WORKAREA *DHC*
         MVC   REPLYMSG(8),0(R5)
         MVC   IMSCOPY(9),8(R5)
         MVC   REPLYTXT(90),17(R5)
********************************************************************
* THE PARAMETERS ARE NOW SAFELY STORED AWAY.                       *
* FIRST, WE MUST DETERMINE THE ASID OF THE COMMTASK ADDRESS SPACE. *
********************************************************************
         L     R2,16              CVT
         USING CVT,R2
         L     R3,CVTCUCB         UCMBASE
         USING UCM,R3
         LH    R4,UCMCTID         CONSOLE ADDRESS SPACE
         STH   R4,CONSASID        PUT AWAY
         LR    R4,R3
         AH    R4,=H'-4'          GO BACK 4 SPACES
         L     R4,0(R4)           UCM PREFIX
         USING UCMPRFX,R4
         XR    R15,R15
*DHC*    ICM   R14,15,UCMMCENT      GET ADDR OF UCM OF MASTCONS 29OCT92
*DHC*    BZ    HRDCONS              IF NONE THEN USE MASTCONS=0 29OCT92
         USING UCMLIST,R14                                      29OCT92
         IC    R15,UCMID            GET THE CONSOLE ID
HRDCONS  DS    0H                                               29OCT92
         STH   R15,MASTCONS
         DROP  R3                 END MAPPING
         DROP  R4                 END MAPPING
         EJECT ,
***********************************************************************
*                                                                     *
*        GET STORAGE FOR AN OUTSTANDING REPLY TABLE                   *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=13801        GET STORAGE FOR TABLE
         ST    R1,GETADDR          SAVE TABLE ADDRESS
         SPACE 3
***********************************************************************
*                                                                     *
*        GO GET A LIST OF OUTSTANDING REPLIES                         *
*                                                                     *
***********************************************************************
         CALL  LIONRPLY            CALL THE SUBROUTINE
***********************************************************************
* IN THE AGCO VERSION ALL FURTHER CHECKS ARE AGAINST THE COPY OF THE  *
* WQE PULLED IN BY 'LIONRPLY'. THESE ARE ADDRESSED VIA THE 'MSGDSECT' *
* MAPPING.                                                            *
***********************************************************************
         L     R6,GETADDR          POINT TO REPLY TABLE
         USING MSGENT,R6           ESTABLISH ADDRESSABILITY
         LA    R4,99               SET NUMBER OF LOOPS
         SPACE 2
********************************************************************
* WE WILL DETERMINE IF THE REQUIREMENT IS FOR A SPECIFIC
* IMS COPY. IF IT IS, CHECK FOR DFS996I IN THE MESSAGE TEXT AND
* CHECK POSITION 25 FOR THE IMS IDENTIFIER. IF NOT, WE CHECK
* FOR DFS810A IN THE MESSAGE TEXT AND CHECK THE 120 POSITION
* FOR THE IMS INDENTIFIER. IF NEITHER OF THESE WORK OUT, WE
* GO TO THE NEXT WQE.
********************************************************************
MSGCHECK DS    0H                  CHECK EACH OUTSTANDING REPLY
         CLC   IMSCOPY(9),=CL9' '  IS THIS AN IMS REQUEST ?
         BE    LOOKMSG             NO IMS REQUEST- LOOK AT MSGID
         CLI   IMSCOPY,C'I'            IS THIS IMS REQUEST      15OCT92
         BNE   CHKIDMS                 NO SO TRY IDMS           15OCT92
         CLC   MSGID,=CL8'DFS996I'        IS THIS AN IMS WQE ?
         BE    CHKCOPY                    YUP, CHECK WHICH COPY.
         CLC   MSGID,=CL8'DFS810A'        IS THIS A FIRST IMS WQE ?
         BE    CHKCOPY2                   YUP, IMS COPY IS IN
         CLC   MSGID,=CL8'DFS3139'        IS THIS A FIRST IMS WQE ?
         BE    CHKCOPY3                   YUP, IMS COPY IS IN
CHKCOPY  DS    0H
********************************************************************
* HERE, WE ARE CHECKING THE IMS COPY IN THE WQE FOR THE IMS SHORT
* MESSAGE, I.E. DFS999I. THE MESSAGE APPEARS AFTER DFS810A HAS BEEN
* REPLIED TO ONCE.
********************************************************************
         CLC   MSG+25(8),IMSCOPY+1        CORRECT IMS COPY ?
         BE    GOTMSG                     YES !!
         B     TRYNEXT
CHKCOPY2 DS    0H
         CLC   MSG+79(8),IMSCOPY+1        CORRECT IMS COPY ?
         BE    GOTMSG                     YES !!
         B     TRYNEXT
CHKCOPY3 DS    0H
         CLC   MSG+67(8),IMSCOPY+1        CORRECT IMS COPY ?
         BE    GOTMSG                     YES !!
         B     TRYNEXT
*                                         A DIFFERENT PLACE THOUGH
CHKIDMS  DS    0H                                               15OCT92
****************************************************************15OCT92
* HERE, WE ARE CHECKING THE IDMS CV NUMBER IN THE WQE           15OCT92
****************************************************************15OCT92
         CLC   =C'REPLY WITH REQUEST TO DS50',MSG+4 DISPATCH?   15OCT92
         BE    CHKIDMS2                   WAS NOT IDMS REPLY!!  15OCT92
         CLC   =C'REPLY WITH REQUEST TO IDMS',MSG+4      IDMS?? 15OCT92
         BNE   TRYNEXT                    WAS NOT IDMS REPLY!!  15OCT92
CHKIDMS2 CLC   MSG+31(8),IMSCOPY+1        CORRECT IDMS COPY?    15OCT92
         BE    GOTMSG                     YES !!                15OCT92
         B     TRYNEXT
********************************************************************
* HERE WE KNOW WE ARE LOOKING FOR MESSAGE TEXT
********************************************************************
LOOKMSG  DS    0H
         CLC   MSGID,REPLYMSG     IS THIS THE CORRECT MESSAGE
         BE    GOTMSG             GOT THE MESSAGE
TRYNEXT  DS    0H
         LA    R6,L'MSGENT(,R6)   TRY NEXT MESSAGE TABLE ENTRY
         BCT   R4,MSGCHECK        GO ROUND EACH MESSAGE
         LA    R9,8                SET ERROR CODE
*        DC    A(0)                ABEND S0C1       *DEBUG*
         STH   R9,EXITRC           REMEMBER IT
         B     ENDPROG             GO FINISH
         EJECT ,
GOTMSG   DS    0H
* HERE, WE PERCEIVE WE HAVE A REPLY TO MAKE, SO WE ISSUE THE
* REPLY COMMAND USING SVC 34. THE MESSAGE NUMBER FOR THE REPLY IS
* IN THE ORE.
         MVC   REPLYCMD(2),=H'94'
         MVC   REPLYCMD+2(2),=H'0'
         MVC   REPLYCMD+4(6),=CL6'REPLY '
         MVC   REPLYNUM(2),RID
         MVC   REPLYLNE(90),REPLYTXT     COPY REPLY TEXT
         MVI   REPLYCOM,C','
         LH    R0,MASTCONS               GET MASTER CONSOLE
         MODESET MODE=SUP,KEY=ZERO
         MGCR  REPLYCMD                  ISSUE COMMAND
         MODESET KEY=NZERO,MODE=PROB
         MVC   EXITRC(2),=H'0'
ENDPROG  DS    0H
         LH    R9,EXITRC                SAVE RC                    RPS
         L     R1,GETADDR               GET WORKAREA LEN FOR FREE
         STORAGE RELEASE,LENGTH=13801,ADDR=(R1)   FREE STORAGE
         L     R13,4(,R13)         RESTORE SA POINTER
         LA    R1,WORKAREA_LEN          GET WORKAREA LEN FOR FREE  RPS
         STORAGE RELEASE,LENGTH=(R1),ADDR=(R10)   FREE STORAGE     RPS
         LR    R15,R9                   SET RC                     RPS
         RETURN (14,12),RC=(15)         RETURN                     RPS

         TITLE 'DATA CONSTANT'
ONE      DC    H'1'

         TITLE 'SAVEAREA/WORKAREA'
         DSECT
WORKAREA DS    0F
SAVEAREA DS    18F
R13SAVE  DS    F             SAVE R13 FOR SETLOCK
GETADDR  DS    F             REPLY TABLE ADDRESS
SASID    DS    F
CONSASID DS    H
EXITRC   DS    H
MASTCONS DS    H
COMMASCB DS    F
REPLYMSG DC    CL8' '
IMSCOPY  DC    CL9' '
REPLYTXT DC    CL90' '
REPLYCMD DC    H'0',H'0'     REAL LENGTH, ZERO
         DC    CL6'REPLY '   MVS COMMAND "REPLY"
REPLYNUM DC    CL2' '
REPLYCOM DC    C','          COMMA
REPLYLNE DC    CL90' '
DOUBLEWD DC    D'0'                WORKAREA
WORKAREA_LEN   EQU  *-WORKAREA
         TITLE 'DSECTS'
MSGDSECT DSECT
MSGENT   DS    0CL138
JNAME    DS    CL8
RID      DS    CL2
MSG      DS    0CL128
         DS    CL128
MSGID    EQU   MSG+4,8             MESSAGE NUMBER
         SPACE 3
         IEZMGCR DSECT=YES         MGCR MAPPING
         EJECT ,
         PRINT NOGEN               SUPPRESS MACRO EXPANSION
         CVT   DSECT=YES,LIST=NO
         IHAORE
UCM      DSECT
         IEECUCM LIST=NO
         IHAWQE
         IHAPSA
         END   REPLYLOA
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY REPLYLOA(''V 1.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE SYSLMOD(LIONRPLY)'
 PUNCH ' ENTRY    REPLYLOA'
 PUNCH ' NAME     REPLYLOA(R)'
         END
