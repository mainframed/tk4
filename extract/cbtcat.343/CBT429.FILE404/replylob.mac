
REPLYLOA CSECT                                                    RPS
REPLYLOA AMODE 31                                                 RPS
REPLYLOA RMODE ANY                                                RPS
         EQUATES                                                  RPS
         SPLEVEL SET=5                                            RPS
         SAC   0                        A/S MODE                  RPS
         SYSSTATE ASCENV=P              INDICATE PRIMARY A/S      RPS
         STM   R14,R12,12(R13)          SAVE CALLER'S REGS        RPS
         LAE   R12,0(R15,0)             ESTABISH R11 AS BASE REG  RPS
         USING REPLYLOA,R12             ESTABLISH ADDRESSABILITY  RPS
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
********************************************************************
* THIS COMMAND WILL SERVE AS THE REPLYING MODULE FOR THE REPLY     *
* COMMAND FUNCTION OF TSSO. THIS MODULE ACCEPT PARAMTERS FROM THE  *
* APPLY PROMPTER, DUE A SPACE SWITCH INTO THE CONSOLE ADDRESS SPACE*
* AND ATTEMPT TO REPLY TO THE COMMAND.                             *
*                                                                  *
* METHOD OF OPERATION                                              *
*                                                                  *
* 1) OBTAIN PARAMETER LIST IN THE FORM:                            *
*                                                                  *
*                                                                  *
* R1==> PARMS                                                      *
* PARMS                                                            *
* MSGID FOR 8 BYTES                                                *
* IMS COPY FOR 9 BYTES                                             *
* REPLY TEXT FOR 120 BYTES                                         *
*                                                                  *
* 2) OBTAIN INFORMATION ABOUT THE CONSOLE ADDRESS SPACE, SUCH AS   *
*    ASID, ASCB AND CONSOLE ID OF MASTER.                          *
*                                                                  *
* 3) SSAR TO CONSOLE ASID                                          *
*                                                                  *
* 4) SAC TO CONSOLE ASID                                           *
*                                                                  *
* 5) SEARCH THE ORE AND  WQE CONTROL BLOCKS UNTIL EITHER THE IMS   *
*    COPY, OR MESSAGE ID IS LOCATED...                             *
*                                                                  *
* 6) FORMAT AND ISSUE THE REPLY COMMAND, OR SET RETURN CODE SAYING *
*    THIS COULD NOT BE DONE.                                       *
*                                                                  *
*                                                                  *
* 7) RETURN TO THE SAFETY OF THE REPLY MODULE, AFTER RETURNING TO  *
*    KEY OF EIGHT.                                                 *
*                                                                  *
***********************************************************************
*                                                                     *
* MODIFIED                                                            *
*   15OCT92  GLA  INCORPORATE CHANGES FROM VERSION 4.2                *
*              A.  ADD SUPPORT FOR IDMS                               *
*              B.  ADD SUPPORT FOR CADISPATCH AS IDMS                 *
*              C.  ADD SUPPORT FOR 31BIT ORE ELEMENTS.                *
*                                                                     *
*   29OCT92  GLA   SET MASTCONS OF ZERO IF NO UCMLIST (HARDWARE       *
*                  SYSCONS AS MASTER)                                 *
*                                                                     *
***********************************************************************
         LR    R5,R1                    SAVE PARM POINTER          RPS
         LA    R1,WORKAREA_LEN          GET WORKAREA LENGTH FOR GM RPS

         STORAGE OBTAIN,                + OBTAIN A WORKAREA        RPS X
               LENGTH=(R1),             + R1 = LENGTH              RPS X
               ADDR=(R2),               + RETURN ADDR IN R2        RPS X
               LOC=(ANY,ANY),           + ANYWHERE I DON'T CARE    RPS X
               COND=NO                  + ABEND IF WE CAN'T GET IT RPS

         USING WORKAREA,R2              R2 ---> SAVEAREA/WORKAREA  RPS
         XC    WORKAREA(L'WORKAREA_LEN),WORKAREA  CLEAR WORKAREA   RPS
         ST    R2,8(R13)                FORWARD CHAIN POINTER      RPS
         ST    R13,SAVEAREA+4           BACKWARD CHAIN POINTER     RPS
         LR    R13,R2                   SAVE/WORKAREA ADDR IN R13  RPS
         DROP  R2                                                  RPS
         USING WORKAREA,R13             R2 ---> SAVEAREA/WORKAREA  RPS

         LR    R2,R5              COPY PARM ADDRESS
         MVC   REPLYMSG(8),0(R2)
         MVC   IMSCOPY(9),8(R2)
         MVC   REPLYTXT(120),17(R2)
********************************************************************
*                                                                  *
* THE PARAMETERS ARE NOW SAFELY STORED AWAY, THE REST OF THIS CODE *
* MUST RUN IN THE CONSOLE ADDRESS SPACE. WE WILL SSAR AND SAC TO   *
* ACHIEVE THIS.                                                    *
* FIRST, WE MUST DETERMINE THE ASID OF THE COMMTASK ADDRESS SPACE. *
********************************************************************
         L     R2,16              CVT
         USING CVT,R2
         L     R3,CVTCUCB         UCMBASE
         USING UCM,R3
         LH    R4,UCMCTID         CONSOLE ADDRESS SPACE
         STH   R4,CONSASID        PUT AWAY
         LR    R4,R3
         AH    R4,=H'-4'          GO BACK 4 SPACES
         L     R4,0(R4)           UCM PREFIX
         USING UCMPRFX,R4
         XR    R15,R15
         ICM   R14,15,UCMMCENT      GET ADDR OF UCM OF MASTCONS 29OCT92
         BZ    HRDCONS              IF NONE THEN USE MASTCONS=0 29OCT92
         USING UCMLIST,R14                                      29OCT92
         IC    R15,UCMID            GET THE CONSOLE ID
HRDCONS  DS    0H                                               29OCT92
         STH   R15,MASTCONS
         L     R15,UCMASCB        GET ASCB OF COMMTASK ADDRESS SPACE
         ST    R15,COMMASCB       AND PUT IT AWAY
         DROP  R2,R14
         MODESET MODE=SUP,KEY=ZERO
         ESAR  R2                 GET SECONDARY ADDRESS SPACE
         ST    R2,SASID           STORE IT AWAY FOR LATER
         AXSET AX=ONE             GET AUTHORIZATION ANYWHERE
         LH    R2,CONSASID        LOAD UP ASID OF CONSOLE ADDRESS SPACE
         SSAR  R2
* GET CONSOLE ADDRESS SPACE LOCAL LOCK FOR REPLY FUNCTION.
         L     R11,COMMASCB       GET ASCB OF COMMTASK
         ST    R13,R13SAVE        SAVE REG 13
         LA    R13,LOCKSAVE       PROVIDE SETLOCK WITH SAVEAREA
GETLOCK  SETLOCK OBTAIN,TYPE=CML,ASCB=(11),REGS=USE,MODE=UNCOND,       X
               RELATED=(CONASCB,RELLOCK)
         SAC   X'100'             GO INTO SECONDARY ADDRESS SPACE
*                                 MODE (CONSOLE ASID)
REPLYIT  DS    0H
* WE NOW ENTER THE PART OF THE PROGRAM WHERE WE ACTUALLY TO THE REPLY
* AS REQUESTED IN THE COMMAND.
* WE WILL SEARCH THE CHAIN OF ORE ELEMENTS, LOOKING FOR ONE WITH A
* WQE TO MATCH WHAT WE WANT.
         L     R15,TO31A1         IN ESA 4.2 ORES               15OCT92
         BSM   0,R15                  ARE ABOVE                 15OCT92
TO31A1   DC    A(X'80000000'+O31A1)        THE LINE             15OCT92
O31A1    DS    0H                                               15OCT92
         L     R4,UCMRPYQ         LOAD ADDRESS OF FIRST ORE ENTRY
         LA    R4,0(R4)           ** CLEAR HIGH ORDER BYTE **
         LTR   R4,R4              IF NO OUTSTANDING WTORS
         BZ    ENDLOOP            THEN GET TO END OF LOOP
         LA    R7,20              OTHERWISE, ASSUME AT MOST 20.
ORELOOP  DS    0H
         USING OREF,R4
         L     R5,ORERWQE         GET ASSOCIATED WQE
         USING WQE,R5             ADDRESS IT
********************************************************************
* NOW WE ARE LOOKING AT A WQE ASSOCIATED WITH SOME OUTSTANDING
* REPLY. WE WILL DETERMINE IF THE REQUIREMENT IS FOR A SPECIFIC
* IMS COPY. IF IT IS, WE INSERT DFS996I INTO THE MESSAGE TEXT AND
* CHECK POSITION 25 FOR THE IMS IDENTIFIER. IF NOT, WE
* INSERT DFS810A INTO THE MESSAGE TEXT AND CHECK THE 120 POSITION
* FOR THE IMS INDENTIFIER. IF NEITHER OF THESE WORK OUT, WE
* GO TO THE NEXT WQE.
********************************************************************
         CLC   IMSCOPY(9),=CL9' '  IS THIS AN IMS REQUEST ?
         BE    LOOKMSG             NO IMS REQUEST- LOOK AT MSGID
         CLI   IMSCOPY,C'I'            IS THIS IMS REQUEST      15OCT92
         BNE   CHKIDMS                 NO SO TRY IDMS           15OCT92
         CLC   WQETXT+4(8),=CL8'DFS996I'  IS THIS AN IMS WQE ?
         BE    CHKCOPY                    YUP, CHECK WHICH COPY.
         CLC   WQETXT+4(8),=CL8'DFS810A'  IS THIS A FIRST IMS WQE ?
         BE    CHKCOPY2                   YUP, IMS COPY IS IN
CHKCOPY  DS    0H
********************************************************************
* HERE, WE ARE CHECKING THE IMS COPY IN THE WQE FOR THE IMS SHORT
* MESSAGE, I.E. DFS999I. THE MESSAGE APPEARS AFTER DFS810A HAS BEEN
* REPLIED TO ONCE.
********************************************************************
         CLC   WQETXT+25(8),IMSCOPY+1     CORRECT IMS COPY ?
         BE    GOTMSG                     YES !!
         B     TRYNEXT
CHKCOPY2 DS    0H
         CLC   WQETXT+79(8),IMSCOPY+1     CORRECT IMS COPY ?
         BE    GOTMSG                     YES !!
         B     TRYNEXT
*                                         A DIFFERENT PLACE THOUGH
CHKIDMS  DS    0H                                               15OCT92
****************************************************************15OCT92
* HERE, WE ARE CHECKING THE IDMS CV NUMBER IN THE WQE           15OCT92
****************************************************************15OCT92
         CLC   =C'REPLY WITH REQUEST TO DS50',WQETXT+4 DISPATCH?15OCT92
         BE    CHKIDMS2                   WAS NOT IDMS REPLY!!  15OCT92
         CLC   =C'REPLY WITH REQUEST TO IDMS',WQETXT+4   IDMS?? 15OCT92
         BNE   TRYNEXT                    WAS NOT IDMS REPLY!!  15OCT92
CHKIDMS2 CLC   WQETXT+31(8),IMSCOPY+1     CORRECT IDMS COPY?    15OCT92
         BE    GOTMSG                     YES !!                15OCT92
         B     TRYNEXT
********************************************************************
* HERE WE KNOW WE ARE LOOKING FOR MESSAGE TEXT
********************************************************************
LOOKMSG  DS    0H
         CLC   WQETXT+4(8),REPLYMSG  IS THIS THE CORRECT MESSAGE
         BE    GOTMSG             GOT THE MESSAGE
TRYNEXT  DS    0H
         L     R4,ORELKP          TRY NEXT ORE
         LA    R4,0(R4)           ** CLEAR HIGH ORDER BYTE **
         LTR   R4,R4
         BZ    ENDLOOP
         BCT   R7,ORELOOP
         MVC   EXITRC(2),=H'8'    SET RETURN CODE FROM LOOP
         B     XMEMOFF            AND GET OUT OF CROSS MEM LOOP
ENDLOOP  DS    0H
         MVC   EXITRC(2),=H'8'
         B     XMEMOFF
GOTMSG   DS    0H
* HERE, WE PERCEIVE WE HAVE A REPLY TO MAKE, SO WE ISSUE THE
* REPLY COMMAND USING SVC 34. THE MESSAGE NUMBER FOR THE REPLY IS
* IN THE ORE.
         MVC   REPLYCMD(2),=H'90'
         MVC   REPLYCMD+2(2),=H'0'
         MVC   REPLYCMD+4(6),=CL6'REPLY '
         MVC   REPLYNUM(2),OREID
         MVC   REPLYLNE(90),REPLYTXT     COPY REPLY TEXT
         MVI   REPLYCOM,C','
         L     R15,TO24A1                NOW GO                 15OCT92
         BSM   0,R15                       BACK TO              15OCT92
TO24A1   DC    A(O24A1)                      REGULAR 24         15OCT92
O24A1    DS    0H                              BIT MODE         15OCT92
         SAC   X'000'                    OUT OF XMEM MODE
         L     R2,SASID                  GET BACK ID OF SAVED ASID
         SSAR  R2
         L     R11,COMMASCB              GET COMTASK ASCB
RELLOCK  SETLOCK RELEASE,TYPE=CML,ASCB=(11),                           X
               RELATED=(CONASCB,GETLOCK)
         L     R13,R13SAVE
         LH    R0,MASTCONS               GET MASTER CONSOLE
         LA    R1,REPLYCMD               GET ADDRESS OF REPLYCOMAND
         SVC   34
         MVC   EXITRC(2),=H'0'
         B     KEYEIGHT
         DROP  R3,R4
XMEMOFF  DS    0H
         L     R15,TO24A2                NOW GO                 15OCT92
         BSM   0,R15                       BACK TO              15OCT92
TO24A2   DC    A(O24A2)                      REGULAR 24         15OCT92
O24A2    DS    0H                              BIT MODE         15OCT92
         L     R11,COMMASCB              GET COMTASK ASCB
         SETLOCK RELEASE,TYPE=CML,ASCB=(11),                           X
               RELATED=(CONASCB,GETLOCK)
* HERE, IF EXITRC=0 THEN WE HAVE REPLIED, OTHERWISE, THE MESSAGE
* WAS NOT OUTSTANDING.
         SAC   X'000'                   GO BACK TO HOME ADDRESS SPACE
         L     R2,SASID                 GET ID OF SAVED ASID
         SSAR  R2
         L     R13,R13SAVE
KEYEIGHT DS    0H
         MODESET KEY=NZERO,MODE=PROB
ENDPROG  DS    0H
         LH    R9,EXITRC                SAVE RC                    RPS
         LA    R1,WORKAREA_LEN          GET WORKAREA LEN FOR FREE  RPS
         STORAGE RELEASE,LENGTH=(R1),ADDR=(R13)   FREE STORAGE     RPS
         LR    R15,R9                   SET RC                     RPS
         RETURN (14,12),T,RC=0          RETURN                     RPS

         TITLE 'DATA CONSTANT'
ONE      DC    H'1'

         TITLE 'SAVEAREA/WORKAREA'
         DSECT
WORKAREA DS    0F
SAVEAREA DS    18F
LOCKSAVE DS    6F            SAVE AREA FOR SETLOCK
R13SAVE  DS    F             SAVE R13 FOR SETLOCK
SASID    DS    F
CONSASID DS    H
EXITRC   DS    H
MASTCONS DS    H
COMMASCB DS    F
REPLYMSG DC    CL8' '
IMSCOPY  DC    CL9' '
REPLYTXT DC    CL90' '
REPLYCMD DC    H'0',H'0'     REAL LENGTH, ZERO
         DC    CL6'REPLY '   MVS COMMAND "REPLY"
REPLYNUM DC    CL2' '
REPLYCOM DC    C','          COMMA
REPLYLNE DC    CL90' '
WORKAREA_LEN   EQU  *-WORKAREA
         TITLE 'DSECTS'
         CVT   DSECT=YES
         IHAORE
UCM      DSECT
         IEECUCM
         IHAWQE
         IHAPSA
         END   REPLYLOA
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY REPLYLOA(''V 1.0 &SYSDATE &SYSTIME'') '
 PUNCH ' ENTRY    REPLYLOA'
 PUNCH ' NAME     REPLYLOA(R)'
         END
