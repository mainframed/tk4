         TITLE ' T S S O    M A I N L I N E   R O U T I N E '
***********************************************************************
TSSOMAIN CSECT
***********************************************************************
* THIS ROUTINE IS THE MAINLINE PROCESSING ROUTINE FOR TSSO. IT IS     *
* RESPONSIBLE FOR THE ISSUING OF ALL TSSO COMMANDS, AND THE INTERFACE *
* WITH THE SUBSYSTEM SUPPORT MODULE.                                  *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         STM   R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR    R12,R15            LOAD ENTRY POINT OF TSSO
         USING TSSOMAIN,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST    R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST    R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR    R13,R1             KEEP A COPY IN R13
*
         GETMAIN  R,LV=4096
         LR    R11,R1
         USING TSSOVARS,R11
*
         MVC   LINK1D(LINK1CE-LINK1C),LINK1C
*
         GETCVT (R10)
         USING TSSOCVT,R10
*
         L     R9,TSSODSEC        GET LOCAL VARIABLES.
         USING DATD,R9        ADDRESS THEM
*
*
*
***********************************************************************
* SSSSS TTTTT   A    RRRR  TTTTT                                      *
* S       T    A A   R  R    T                                        *
* SSSSS   T   AAAAA  RRRR    T                                        *
*     S   T   A   A  R R     T                                        *
* SSSSS   T   A   A  R  R    T                                        *
***********************************************************************
************************************************************
*                                                          *
*        WAIT FOR POST FROM SSSM                           *
*                                                          *
************************************************************
         SPACE
WAIT     DS    0H
         MODESET KEY=ZERO
***********************************************************************
* THE REMAINDER OF THIS MODULE MUST RUN IN KEY ZERO. TO MANY CONTROL  *
* BLOCKS ARE REFERENCED TO MAKE IT VIABLE TO RUN ANY OTHER WAY.       *
*                                                                     *
***********************************************************************
         L     R2,CURRCMD          GET CURRENT COMMAND
         USING TSSOCMND,R2         ADDRESS IT
         TM    CMNDFLAG,X'80'      IS IT ACTIVE
         BO    NOWAIT
         TM    TSSOFLG2,TSSOMON    MONITORING?
         BZ    NOMON1
         WTO   MF=(E,WTO10D)       WAITING (MSG 61)
NOMON1   DS    0H
WAIT4CMD DS    0H
*
         WAIT  ECB=$SVPOSTE
*
         TM    CMNDFLAG,X'80'      IS THIS COMMAND ACTIVE ?
         BNO   WAIT4CMD
         TM    TSSOFLG2,TSSOMON    MONITORING?
         BZ    NOMON2
         WTO   MF=(E,WTO11D)       POSTED  (MSG 62)
NOMON2   EQU   *
NOWAIT   DS    0H
         SPACE
         MVI   $SVPOSTE,0          ZERO OUT THE ECB
*
         MVC   TSSOCMD(128),CMNDCMD+1  MOVE IN COMMAND (- # SIGN)
         L     R1,COUNTCMD             GET COUNT OF COMMANDS
         LA    R1,1(R1)                    INCREMENT
         ST    R1,COUNTCMD             AND REPLACE
         LA    R1,127                  ALWAYS USE BIG LENGTH
         STH   R1,TSSOCMDL             BECAUSE IT WORKS.
         MVC   CURRCONS(4),CMNDCONS    MOVE IN CONSOLE ID
*
         LA    R1,TSSOCMD
OBV#     DS    0H                   OBVIOUSLY A '#' COMMAND
*                                   OR WE WOULDNT BE HERE.
         CLI   0(R1),C'.'           IS THIS A CONTROL COMMAND ?
         BNE   TSOCMD               NOPE, MUST BE A TSO COMMAND
         XC    CCMDFLAG(4),CCMDFLAG   ZERO OUT COMMUNICATIONS FLAG
         LA    R1,DATD              PICK UP COMMON DATA AREA.
         LINK  EP=TSSOCCMD,SF=(E,LINK1D)  LINK TO CONTROL COMMAND MOD
         LTR   R15,R15
         BNZ   CCERROR              PROBLEM PROCESSING COMMAND
         TM    CCMDFLAG,X'80'       WAS THIS A REQUEST TO STOP?
         BO    STOP                 DARN- GUESS WE GO AWAY
         TM    CCMDFLAG,X'40'       SHOULD WE ATTEMPT TO LIST
*                                   SYSTSPRT OUTPUT ?
         BO    LISTAGAN             WELL.. I GUESS WE WILL REPEAT THE
*                                   LIST...
* HERE, WE CAN ASSUME ALL WENT WELL, AND GO BACK TO FETCH ANOTHER
* COMMAND.
         B     READY                READY TO PICK UP A NEW COMMAND
CCERROR  DS    0H
***********************************************************************
* WE COME HERE IN CASE OF ERROR FROM THE TSSO CONTROL COMMAND ROUTINE *
***********************************************************************
         WTO   'TSST063S INTERNAL ERROR DETECTED PROCESSING CONTROL COMX
               MAND- NOTIFY SYSTEMS PROGRAMMER',DESC=(1)
         B     READY
*
LISTAGAN DS    0H
         LH    R0,CCMDFLAG+2        PICK UP THE CONSOLE ID.
         STH   R0,CURRCONS+2
         OI    TSSWFLAG,X'80'       CAREFUL NOT TO EXECUTE COMMANDS
         B     LIST
************************************************************
*                                                          *
*        TSO COMMAND                                       *
*                                                          *
************************************************************
         SPACE
TSOCMD   DS    0H
*        OI    FLAG,X'80'          INDICATE THIS WAS A TSO COMMAND
         LINK  EP=TSSODOCM,PARAM=((R9)),SF=(E,LINK1D),MF=(E,LINKPARM)
         LR    R2,R15
         LTR   R2,R2               CHECK RETURN CODE FROM DOCM
         BNZ   READY               IF NON ZERO, DONT LIST.
         B     LIST                OTHERWISE, YOU CAN LIST.
READY    EQU   *
         L     R2,CURRCMD
         USING TSSOCMND,R2
         MODESET KEY=ZERO          TO FLICK BITS...
         NI    CMNDFLAG,255-X'80'  TURN OFF BIT, INDICATING COMMAND
*                                  DONE.
         L     R2,CMNDNEXT
         ST    R2,CURRCMD
         MODESET KEY=NZERO
         DROP  R2
         B     WAIT
************************************************************
*                                                          *
*        LIST TSO OUTPUT                                   *
*                                                          *
************************************************************
         SPACE
LIST     DS    0H
************************************************************
* NOTE. CANT LOAD ALL FOUR BYTES FROM CURRCONS BECAUSE MVS PUTS
* JUNK IN HIGH ORDER BYTE.
************************************************************
         LH    R0,CURRCONS+2       CONSOLE ID OF SOURCE
LISTR0   DS    0H
************************************************************
* THE LISTR0 LABEL ASSUMES THAT R0 HAS BEEN SET UP WITH THE
* CONSOLE ID DESIRED. NOTE THAT IF ENTRY WAS OBTAINED THROUGH THE
* #.L= COMMAND, THEN WE WILL NOT ALLOW COMMANDS IN THIS INVOCATION
************************************************************
         ST    R0,CONSPARM
         L     R15,WTOADDR
         CALL  (15),(CONSPARM,MAXWTO,TSSWFLAG),MF=(E,CALL1D)
*
         NI    TSSWFLAG,255-X'80'  TURN OFF FLAG BIT.
         B     READY
*
STOP     DS    0H
***********************************************************************
* THE STOP ROUTINE IS SIMPLY RETURN TO TSSO, THE MODULE THAT CALLED US*
*                                                                     *
***********************************************************************
ENDPROG  DS    0H
         MODESET KEY=NZERO
         FREEMAIN R,LV=4096,A=(R11)
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R8              RELOAD RETURN CODE
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
***********************************************************************
* TSSOMAIN ONLY DATA CONSTANTS                                        *
*                                                                     *
***********************************************************************
LINK1C   LINK  LSEARCH=YES,SF=L
*
LINK1CE  EQU   *
*
TSSOVARS DSECT
***********************************************************************
* TSSOMAIN PRIVATE DSECT.                                             *
*                                                                     *
***********************************************************************
LINK1D   LINK  LSEARCH=YES,SF=L
LINKPARM DS    F
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO MAINLINE SHARED VARIABLES.           *
***********************************************************************
         COPY  TSSODATD
*
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO CVT.                                 *
***********************************************************************
         TSSOCVT
         TSSONDSA
*
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO COMMAND RING                         *
***********************************************************************
         TSSOCMND          DSECT FOR TSSO COMMAND RING
*
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO SECURITY ARRAY                       *
***********************************************************************
         TSSOSECR          DSECT FOR TSSO SECURITY ARRAY
*
***********************************************************************
* COPY IN THE DSECT FOR THE TSSO SS CONSOLE BLOCK HEADER              *
***********************************************************************
         SSCONCBH          SUBSYSTEM CONSOLE CONTROL BLOCK HEADER
         SSCONCB           SUBSYSTEM CONSOLE CONTROL BLOCK
*
*
         PRINT NOGEN
         IEFJESCT
         IEFJSCVT
         IEFJSSVT
         DCBD  DSORG=PO,DEVD=DA
         CVT   DSECT=YES
         IEFJSSIB
         IEFJSSOB (CM,RR),CONTIG=YES
         IEZJSCB
         IKJTCB
         IHAASCB
         IHAASXB
         IHAETD
UCM      DSECT
         IEECUCM
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   TSSOMAIN
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOMAIN(''V 4.3.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    TSSOMAIN'
 PUNCH ' NAME     TSSOMAIN(R)'
         END
