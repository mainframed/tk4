         TITLE 'LOCATE LINE NUMBER IN MULTI-LINE WTO'
***********************************************************************
*                                                                     *
* BINARY SEARCH ROUTINE - GENERALIZED                                 *
*                                                                     *
* THIS ROUTINE WILL SCAN THE INDEX TABLE BUILD WHEN THE AOF TABLE     *
* WAS LOADED. THE INDEX TABLE HAS THE MESSAGE IDS IN ALPHABETICAL     *
* ORDER (STD COLLATING SEQ.). THIS ALLOWS THE TABLE TO BE SEARCHED    *
* VIA THE BINARY SEARCH METHOD.                                       *
*                                                                     *
* INPUT                                                               *
*   R2  --  ADDRESS OF COMPARE INSTRUCTION                            *
*   R4  --  START ADDRESS OF TABLE                                    *
*   R5  --  END ADDRESS OF TABLE                                      *
*   R6  --  LENGTH OF TABLE ENTRY (MUST BE POWER OF 2)                *
*   R14 --  RETURN ADDRESS                                            *
* DESTROYS                                                            *
*   R1  --  WORK                                                      *
*   R7  --  MOVING POINTER FOR COMPARE (SHOULD BE USED IN CMP INSTR)  *
* RETURNS                                                             *
*   +0  --  NOT FOUND                                                 *
*             R7 POINTS TO ITEM TO INSERT AFTER                       *
*   +4  --  FOUND                                                     *
*             R7 POINTS TO MATCH                                      *
*                                                                     *
*                                                                     *
***********************************************************************
BSCAN    DS    0H
         LNR   R1,R6                    GET -LENGTH FOR ANDING
BSLOOP   LR    R7,R5                    GET END ADDRESS
         SR    R7,R4                    GET DIFFERENCE
         SRL   R7,1                     DIVIDE BY 2
         NR    R7,R1                    ROUND DOWN TO ENTRY BOUNDARY
         AR    R7,R4                    ADD IN BASE OF TABLE
         EX    0,0(,R2)                 DO THE COMPARE
         BE    4(,R14)                  IF EQUAL THEN ALL DONE
         BH    BSHIGH                   GO HANDLE HIGH CASE
*    LOW - NEED TO GO CLOSER TO START
         CR    R7,R4                    ARE WE ALREADY AT START OF TBL
         BE    BSNF1                    NOT FOUND, BUT NEED TO ADJ R7
         LR    R5,R7                    SET NEW HIGH TO CURRENT
         SR    R5,R6                    SET NEW HIGH TO BELOW CURRENT
         B     BSLOOP                   TRY AGAIN
*    HIGH - NEED TO GO CLOSER TO END
BSHIGH   DS    0H
         CR    R7,R5                    ARE WE ALREADY AT END OF TABLE
         BE    BSNF2                    NOT FOUND, R7 IS OK
         LR    R4,R7                    SET NEW LOW TO CURRENT
         AR    R4,R6                    SET NEW LOW ABOVE CURRENT
         B     BSLOOP                   TRY AGAIN
BSNF1    DS    0H                       NOT FOUND - LOW
         SR    R7,R6                    SET POINTER TO ONE BEFORE
*                                       CANIDATE
BSNF2    BR    R14                      EXIT NOT FOUND
