***********************************************************************
*                                                                     *
*                           R E P L Y                                 *
*                                                                     *
*        RETURN A LIST OF THE OUTSTANDING REPLIES IN A TABLE          *
*        POINTED TO BY REGISTER 1 ON ENTRY.  THERE IS ROOM FOR        *
*        100 OUTSTANDING REPLIES IN THE TABLE.  AN ENTRY WHICH        *
*        STARTS WITH X'FF' WILL FLAG THE END OF THE REPLIES.          *
*                                                                     *
*        BECAUSE SOME OF THE STORAGE AREAS ARE ABOVE THE 16           *
*        MEG LINE, THE ROUTINE WILL SWITCH TO AMODE31 IN THE          *
*        BEGINNING AND SWITCH BACK TO AMODE 24 WHEN FINISHED.         *
*                                                                     *
*                                                                     *
*                                                                     *
*        REGISTERS ON ENTRY                                           *
*           R1  - ADDRESS OF THE REPLY TABLE                          *
*           R13 - ADDRESS OF A SAVE AREA                              *
*           R15 - ENTRY POINT ADDRESS                                 *
*                                                                     *
*        REGISTERS ON ENTRY                                           *
*           SAME AS ON ENTRY                                          *
*                                                                     *
*        WRITTEN BY:                                                  *
*                   JOHN V. HOOPER                                    *
*                   FOOD LION, INC.                                   *
*                   2110 EXECUTIVE DRIVE                              *
*                   SALISBURY, N.C.  28145-1330                       *
*                                                                     *
*        STRIPPED OUT OF THE 'COMMAND' PROGRAM IN FILE 19 OF CBT 417  *
*        BY DAVE CARTWRIGHT, AGCO LTD., DESFORD ENGLAND  31AUG99      *
*                                                                     *
*                                                                     *
*                           DISCLAIMER                                *
*                                                                     *
*      THE AUTHORS INCLUDING FOOD LION, ITS OFFICERS,                 *
*      DIRECTORS, AND EMPLOYEES MAKE NO REPRESENTATION OR             *
*      WARRANTY OF ANY KIND WHATSOEVER, INCLUDING, BUT NOT            *
*      LIMITED TO, REPRESENTATIONS OR WARRANTIES, EXPRESS OR          *
*      IMPLIED, OR MERCHANTABILITY, FITNESS FOR USE OR PURPOSE,       *
*      ACCURACY OR COMPLETENESS OF PROCESSES, PROCEDURES,             *
*      DESIGNS, DEFINITIONS, INSTRUCTIONS, INFORMATION, OR            *
*      FUNCTIONING OF ANY PROGRAMS, DOCUMENTS, OR RELATED             *
*      MATERIALS; THE AUTHORS FURTHER EXPRESSLY DISCLAIM ANY          *
*      KNOWLEDGE OF PURPOSE FOR WHICH THESE PROGRAMS,                 *
*      DOCUMENTS, OR RELATED MATERIAL MAY BE UTILIZED OR THEIR        *
*      APPLICABILITY FOR SUCH USE, NOR SHALL THE FACT OF MAKING       *
*      THEM AVAILABLE CONSTITUTE ANY SUCH REPRESENTATION,             *
*      WARRANTY, OR KNOWLEDGE; NOR DO THE AUTHORS ASSUME ANY          *
*      LIABILITY, RESPONSIBILITY, OR OBLIGATION ARISING FROM          *
*      THE USE OR MALFUNCTIONING OF OF THESE COMPUTER PROGRAMS,       *
*      DOCUMENTATION, OR RELATED MATERIALS.                           *
*                                                                     *
***********************************************************************
         EQUATES ,
LIONRPLY CSECT ,                   NAMED 'REPLY' AT FOOD LION *DHC*
         SAVE  (14,12)             SAVE REGISTERS
         LR    R12,R15             INITIALIZE FIRST BASE REGISTER
         USING LIONRPLY,R12        SET PROGRAM ADDRESSABILITY
         LR    R15,R13             SAVE CALLING'S SAVE AREA ADDR
         LA    R13,REPSAVE         LOAD ADDR OF NEW SAVE AREA
         ST    R13,8(R15)          STORE NEW SAVE ADDR IN OLD
         ST    R15,4(R13)          STORE OLD SAVE ADDR IN NEW
         LA    R15,*+10            SET BRANCH ADDRESS
         O     R15,=X'80000000'    SET AMODE31 BIT ON
         BASSM R14,R15             GO TO AMODE 31
***********************************************************************
*                                                                     *
*        FLAG END OF REPLY TABLE                                      *
*                                                                     *
***********************************************************************
         MVI   0(R1),X'FF'         SET END OF TABLE INDICATOR
         ST    R1,TBLADDR          SAVE REPLY TABLE ADDRESS
***********************************************************************
*                                                                     *
*        DETERMINE THE ASID NUMBER OF THE CONSOLE ADDRESS SPACE       *
*                                                                     *
***********************************************************************
REPLY01  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R5,CVTASVT          POINT TO ADDRESS SPACE VECTOR TABLE.
         USING ASVT,R5             SET ADDRESSABILITY TO ASVT
         L     R4,ASVTMAXU         LOAD MAX. NUMBER OF ADDRESS SPACES.
         LA    R2,1                SET ADDRESS SPACE NUMBER TO ONE
         LA    R5,ASVTENTY         LOAD ADDRESS OF FIRST ASCB POINTER
REPLY02  ICM   R6,B'1111',0(R5)    POINT TO ASCB
         BNP   REPLY03             ZERO OR NEGATIVE, BYPASS THIS ONE
         USING ASCB,R6             SET ADDRESSABILITY TO ASCB
         ICM   R15,B'1111',ASCBJBNS LOAD ADDRESS OF JOBNAME FIELD.
         BZ    REPLY03             ZERO, BYPASS THIS ONE
         CLC   0(8,R15),=C'CONSOLE ' IS THIS THE CONSOLE ADDRESS SPACE?
         BE    REPLY04             YES, EXIT FROM LOOP.
REPLY03  LA    R2,1(R2)            ADD 1 TO THE ASID
         LA    R5,4(R5)            POINT TO NEXT ASCB POINTER.
         BCT   R4,REPLY02          LOOP
         B     REPLY13             ERROR, GET OUT
REPLY04  ST    R2,CONSASID         SAVE ASID OF CONSOLE ADDRESS SPACE.
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         DROP  R5                  DROP ADDRESSABILITY TO ASVT
         DROP  R6                  DROP ADDRESSABILITY TO ASCB
         EJECT
***********************************************************************
*                                                                     *
*        SET UP CROSS MEMORY SERVICES                                 *
*                                                                     *
***********************************************************************
REPLY05  L     R10,TBLADDR         GET START OF REPLY TABLE
         USING MSGDSECT,R10        SET ADDRESSABILITY TO REPLY ENTRY
         SLR   R7,R7               SET MESSAGE COUNT TO ZERO
         MODESET MODE=SUP,KEY=ZERO AUTHORIZE OURSELVES
         ESAR  R9                  GET SECONDARY ASID
         ST    R9,SASID            AND SAVE IT
         AXSET AX=ONE              SET AX TO ALLOW SSAR
         L     R9,CONSASID         GET 'CONSOLE' ASID
         SSAR  R9                  SET 'CONSOLE' AS SECONDARY ASID
***********************************************************************
*                                                                     *
*        GET THE CMS LOCK SO THAT THE OUTSTANDING REPLY               *
*        ELEMENT (ORE) CHAIN WILL NOT BE ALTERED DURING               *
*        OUR PROCESSING.                                              *
*                                                                     *
***********************************************************************
REPLY06  AL    R13,=F'12'          CHANGE R13 FOR SETLOCK
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=SAVE
         SETLOCK OBTAIN,TYPE=CMS,MODE=UNCOND,REGS=SAVE
         SL    R13,=F'12'          PUT R13 BACK TO NORMAL
***********************************************************************
*                                                                     *
*          GET THE ADDRESS OF THE FIRST OUTSTANDING REPLY             *
*          ELEMENT (ORE)                                              *
*                                                                     *
***********************************************************************
REPLY07  L     R4,16               R4 = ADDR OF CVT
         USING CVT,R4              SET ADDRESSABILITY TO CVT
         L     R4,CVTCUCB          R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4                  DROP ADDRESSABILITY TO CVT
         USING UCM,R4              SET ADDRESSABILITY TO UCM BASE
         L     R2,UCMRPYQ          LOAD ADDRESS OF FIRST ORE
         LTR   R2,R2               TEST ORE ADDRESS
         BZ    REPLY12             ZERO, NO OUTSTANDING REPLIES
         DROP  R4                  DROP ADDRESSABILITY TO UCM BASE
         USING OREF,R2             SET ADDRESSABILITY TO ORE
***********************************************************************
*                                                                     *
*          COPY THE WTO QUEUE ELEMENT (WQE) FROM THE CONSOLE          *
*          ADDRESS SPACE FOR THE CURRENT ORE                          *
*                                                                     *
***********************************************************************
REPLY08  L     R8,ORERWQE          R8 = ADDR OF WQE
         LA    R4,WQECOPY          R4 = ADDR OF COPY OF WQE
         LA    R5,WQESIZE          R5 = SET LENGTH OF WQE
         SLR   R15,R15             SET 'FROM' KEY TO ZERO
REPLY09  MVCP  0(R5,R4),0(R8),R15  MOVE UP TO 256 BYTES
         BZ    REPLY10             CC=0 - DONE
         LA    R4,256(,R4)         INCREMENT 'TO' ADDRESS
         LA    R8,256(,R8)         INCREMENT 'FROM' ADDRESS
         SH    R5,=H'256'          SUBTRACT LENGTH OF LAST MOVE
         B     REPLY09             GO GET REST OF AREA
REPLY10  LA    R4,WQECOPY          RESTORE ADDRESS OF COPY OF WQE
         USING WQE,R4              SET ADDRESSABILITY TO WQE
***********************************************************************
*                                                                     *
*          SAVE THE REPLY JOBNAME, MSGID, AND ACTUAL MESSAGE          *
*          FROM THE WQE                                               *
*                                                                     *
***********************************************************************
REPLY11  MVI   MSGENT,C' '         BLANK THE ENTIRE
         MVC   MSGENT+1(L'MSGENT-1),MSGENT   MESSAGE AREA
         MVC   JNAME,WQEOJBNM      SAVE JOB NAME
         MVC   RID,WQERPYID        SAVE REPLY ID
         MVC   MSG,WQETXT          SAVE MESSAGE TEXT
         LA    R10,L'MSGENT(,R10)  INCREMENT TO NEXT MESSAGE AREA
         MVI   0(R10),X'FF'        SET END OF TABLE INDICATOR
         LA    R7,1(,R7)           ADD 1 TO MESSAGE COUNT
         CH    R7,=H'100'          SEE IF REACHED MAXIMUM
         BNL   REPLY12             YES, GET OUT
         L     R2,ORELKP           LOAD ADDRESS OF NEXT ORE
         LTR   R2,R2               SEE IF ANY MORE ORE'S
         BNZ   REPLY08             YES, LOOP
         DROP  R2                  DROP ADDRESSABILITY TO ORE
         DROP  R4                  DROP ADDRESSABILITY TO WQE
         DROP  R10                 DROP ADDRESSABILITY TO REPLY TABLE
***********************************************************************
*                                                                     *
*        FREE THE CMS LOCK SO THAT NORMAL CONSOLE MESSAGE             *
*        PROCESSING CAN CONTINUE                                      *
*                                                                     *
***********************************************************************
REPLY12  AL    R13,=F'12'          CHANGE R13 FOR SETLOCK
         SETLOCK RELEASE,TYPE=CMS,REGS=SAVE
         SETLOCK RELEASE,TYPE=LOCAL,REGS=SAVE
         SL    R13,=F'12'          PUT R13 BACK TO NORMAL
***********************************************************************
*                                                                     *
*        GET OUT OF CROSS MEMORY MODE                                 *
*                                                                     *
***********************************************************************
         L     R9,SASID            RESTORE PREVIOUS SECONDARY ASID
         SSAR  R9                  SHOULD BE SAME AS PRIMARY
         AXSET AX=ZERO             SET AUTHORIZATION INDEX BACK TO ZERO
         MODESET MODE=PROB,KEY=NZERO UNAUTHORIZE OURSELVES
***********************************************************************
*                                                                     *
*        RETURN TO THE CALLER                                         *
*                                                                     *
***********************************************************************
         SPACE 3
REPLY13  LA    R15,*+6             SET BRANCH ADDRESS
         BASSM R14,R15             GO TO AMODE 24
         L     R13,4(R13)          RESTORE ORIG SAVE AREA ADDRESS
         RETURN (14,12)            RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*                         C O N S T A N T S                           *
*                                                                     *
***********************************************************************
         LTORG
REPSAVE  DS    18F                 PROGRAM SAVE AREA
CONSASID DC    F'0'                ASID OF CONSOLE ADDRESS SPACE
TBLADDR  DS    F                   ADDRESS OF REPLY TABLE
SASID    DS    F                   SAVE PREVIOUS SECONDARY ASID
ONE      DC    H'1'                TO SET AX 1
ZERO     DC    H'0'                TO SET AX 0
         DS    0F
WQECOPY  DS    CL512               LOCAL COPY OF WQE
         EJECT
MSGDSECT DSECT
MSGENT   DS    0CL138
JNAME    DS    CL8
RID      DS    CL2
MSG      DS    CL128
         EJECT
         CVT   DSECT=YES
         EJECT
         IEECUCM DSECT=YES,FORMAT=NEW,LIST=YES
         EJECT
         IHAASVT DSECT=YES
         EJECT
         IHAASCB DSECT=YES
         EJECT
         IHAORE DSECT=YES
         EJECT
         IHAWQE DSECT=YES,FORMAT=OLD
         EJECT
         IHAPSA DSECT=YES,LIST=YES
         EJECT
TIOT     DSECT
         IEFTIOT1
         END    LIONRPLY
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY LIONRPLY(''V 1.0 &SYSDATE &SYSTIME'') '
 PUNCH ' ENTRY    LIONRPLY'
 PUNCH ' NAME     LIONRPLY(R)'
         END
