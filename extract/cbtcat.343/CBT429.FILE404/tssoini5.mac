         TITLE ' T S S O    I N I T I A L I Z A T I O N   (PART5)'
***********************************************************************
TSSOINI5 CSECT
***********************************************************************
* ----                                                           ---- *
* ----  FOR ESA SYSTEMS, IF THIS MODULE DOES NOT ASSEMBLE        ---- *
* ----  CLEANLY, THEN LOOK FOR THE STRING "-ESA-" IN THE         ---- *
* ----  CODE, COMMENT OUT THE -NONESA- INSTRUCTION, AND          ---- *
* ----  UNCOMMENT THE ESA-RELEVANT INSTRUCTION.                  ---- *
* ----                                                           ---- *
***********************************************************************
* THIS ROUTINE IS THE FIFTH MAIN COMPONENT TO TSSO INITIALIZATION.    *
* THIS ROUTINE IS RESPONSIBLE FOR SETTING UP THE CROSS MEMORY SERVICES*
* ENVIRONMENT FOR TSSO. THIS ENVIRONMENT WILL PROVIDE FOR             *
* AUTHORIZATION OF THE NCCF, IMS AND CICS CALLERS OF TSSOPCMD.        *
*                                                                     *
* NOTE: ERROR MESSAGES WILL BE IN THE FORM                            *
* TSSXNNNA WHERE 500<NNN<549 AND A IS A SEVERITY CODE.                *
*                                                                     *
*        +---------+                                                  *
*        + CHANGES +                                                  *
*        +---------+                                                  *
* 123096 RPS LABEL PROBLEM IN ETD                                     *
*                                                                     *
***********************************************************************
         STM    R14,R12,12(R13)    SAVE CALLERS REGSITERS
         LR     R12,R15            LOAD ENTRY POINT OF TSSO
         USING  TSSOINI5,R12       GET ADDRESSIBILITY
         B     EYE1
         COPY  EYECATCH
EYE1     DS    0H
         GETMAIN R,LV=72           WE NEED STORAGE FOR THE SAVE AREA
         ST     R13,4(R1)          STORE ADDRESS OF CALLERS SAVE AREA
*                                  SAVE AREA
         ST     R1,8(R13)          REMEMBER WHERE THIS CORE IS
         LR     R13,R1             KEEP A COPY IN R13
*
         GETCVT (R9)
         USING  TSSOCVT,R9
         L      R8,TSSODSEC
         USING  DATD,R8
         GETCVT (R7),NDSA=YES
         USING  TSSONDSA,R7
***********************************************************************
* INITIALIZE TSSOINI5 DSECT VARIABLES
***********************************************************************
         GETMAIN R,LV=4096
         LR    R11,R1
         USING TSSOVARS,R11
         MVC   WTOX1D(WTOX1CE-WTOX1C),WTOX1C
         MVC   WTOX2D(WTOX2CE-WTOX2C),WTOX2C
         MVC   WTOX3D(WTOX3CE-WTOX3C),WTOX3C
         MVC   WTOX4D(WTOX4CE-WTOX4C),WTOX4C
         MVC   LXRESD(LXRESCE-LXRESC),LXRESC
*        MVC   ETCRED(ETCRECE-ETCREC),ETCREC
         MVC   ETCOND(ETCONCE-ETCONC),ETCONC
         MODESET KEY=ZERO
***********************************************************************
* STEP 1 IS TO SET THE TSSO AUTHORIZATION INDEX TO ONE. THIS GIVES    *
* TSSO THE WRITE TO SSAR OR PT TO ANY OTHER ADDRESS SPACE.            *
*                                                                     *
*                                                                     *
***********************************************************************
         LA    R2,1
         AXSET AX=(2)              SET AUTHORIZATION INDEX TO 1
         LTR   R15,R15
         BNZ   AXRESERR               BAD NEWS.
***********************************************************************
* STEP 2 WILL BE TO RESERVE A LINKAGE INDEX, OR TO REUSE ONE IF ONE   *
* ALREADY EXISTS. THIS IS DETERMINED BY EXAMINING FLAGS IN THE TSSO   *
* NDSA. NOTE THAT IF TSSO RESTART PROCESSING IS IN EFFECT, WE WILL    *
* OBTAIN ANOTHER LINKAGE INDEX, EFFECTIVELY REBUILDING THE XMEM ENV.  *
***********************************************************************
         CLI   STARFORC,C'Y'       ARE WE IN FORCE MODE ?
         BE    GETNEWLX            YUP, GET A NEW LX.
         TM    NDSAFLG1,X'40'      HAS TSSO EVER GOT A LINKAGE INDEX ?
         BO    GOTANLX             YUP, TSSO HAS INDEED GOT AN LX
GETNEWLX DS    0H
         LA    R2,1                WE NEED ONE LINKAGE INDEX VALUE
         ST    R2,TSSOLXN
         LXRES LXLIST=TSSOLXP,SYSTEM=YES,   ** GET A SYSTEM LX **      X
               MF=(E,LXRESD)
         LTR   R15,R15
         BNZ   LXRESERR                     BAD NEWS
GOTANLX  DS    0H                  TSSO ALREADY HAS AN LX.
***********************************************************************
* STEP THREE OF THE XMEM INITIALIZATION PROCESS IS TO BUILD THE       *
* XMEM ENTRY TABLE HEADER.                                            *
*                                                                     *
***********************************************************************
         TM    NDSAFLG1,X'10'      DO WE ALREADY HAVE AN XMEM ENVIR ?
         BNO   INI5GO
*
         WTO   'TSSI504I XMEM ENVIRONMENT IS BEING RE-ESTABLISHED - PREX
               VIOUS LINKAGE INDEX UNUSABLE'
*
INI5GO   DS    0H
         LA    R6,TSSOETDH         POINT TO THE STORAGE
         USING ETD,R6
         MVI   ETDFMT,X'00'        FORMAT MUST BE ZERO
*        MVI   ETDRSV1,X'00'    RESERVED FIELD MUST BE ZERO  -NONESA-
*        MVI   ETDRS001,X'00'     -ESA-   -ESA-   -ESA-       RPS
         MVI   ETDHFLAG,X'00'     -ESA-   -ESA-   -ESA-       RPS
         MVC   ETDNUM(2),=H'1'     ONE PC ROUTINE FOR TSSO.
*
         DROP  R6
***********************************************************************
* STEP 4 IS TO FILL IN THE ENTRY TABLE. NOTE THAT ETDELE IS THE       *
* BASE FOR THIS OPERATION.                                            *
*                                                                     *
***********************************************************************
         LA    R6,TSSOETD1         POINT TO ENTRY TABLE 1
         USING ETDELE,R6
         MVI   ETDEX,X'01'         INDEX = 1
         MVI   ETDFLG,ETDSUP        SUPERVISOR STATE, NON SPACE SWITCH
*        MVC   ETDRSV3(2),=H'0'  MOVE A 0 INTO THE RSRVD FIELD -NONESA-
         MVC   ETDRS002(2),=H'0'  -ESA-   -ESA-   -ESA-
         XC    ETDPRO1(4),ETDPRO1    ZERO FIRST PART OF ADDRESS
         MVC   ETDPRO2(4),TSSOPC1   AND PUT ADDRESS OF PC ROUTINE
         MVC   ETDAKM(2),=XL2'FFFF'  AUTHORIZE ALL KEYS...
         MVC   ETDEKM(2),=XL2'FFFF'  AUTHORIZE ALL KEYS...
***********************************************************************
* STEP 5 IS TO CREATE THE ENTRY TABLE. THIS IS ACCOMPLISHED BY        *
* INVOKING THE MVS SERVICE DESIGNED TO CREATE ENTRY TABLES.           *
*                                                                     *
*                                                                     *
***********************************************************************
         ETCRE ENTRIES=TSSOETD     GIVE IT THE ENTRY TABLE LIST
         LTR   R15,R15             DID IT WORK ?
         BNZ   ETCREERR            BAD NEWS...
*
         ST    R0,TSSOETTK         REMEMBER THE TOKEN !
         LA    R2,1
         ST    R2,TSSOETLN         FILL IN ENTRY TABLE LIST.
*
***********************************************************************
* STEP 6 OF THE XMEM INITIALIZATION ROUTINE IS TO GLOBALLY CONNECT    *
* THE ENTRY TABLE INTO EVERYONES ADDRESS SPACE. THE ETCON SERVICE     *
* ACCOMPLISHES THIS.                                                  *
***********************************************************************
         ETCON TKLIST=TSSOETL,LXLIST=TSSOLXP,MF=(E,ETCOND)
         LTR   R15,R15
         BNZ   ETCONERR            REALLY BAD NEWS !
         OI    TSSOFLG2,TSSOXMON   INDICATE XMEM ACTIVE !
         OI    NDSAFLG1,X'40'      INDICATE THAT WE HAVE AN LX !
         OI    NDSAFLG1,X'10'      INDICATE THAT CROSS MEMORY ENV IS
*                                  ACTIVE.
         B     ENDPROG
*
ENDPROG  DS    0H
*
         MODESET KEY=NZERO
         LH    R8,RETCODE
         FREEMAIN R,LV=4096,A=(R11)
         LR    R1,R13              GET ADDRESS OF CORE IN R1
         L     R13,4(R13)          RESTORE R13
         FREEMAIN R,LV=72,A=(R1)    FREE UP THE CORE
ENDPROG1 DS    0H
         L     R14,12(R13)         RELOAD RETURN POINT
         LR    R15,R8              RELOAD RETURN CODE
         LM    R0,R12,20(R13)      RELOAD MORE REGISTERS
         BR    R14
AXRESERR DS    0H
         LR    R1,R15
         LA    R10,INI5WORK
         CALL  JCECVTBH
         STCM  R0,B'1111',WTOX1D+37
         STCM  R1,B'1111',WTOX1D+41
         WTO   MF=(E,WTOX1D)
         MVC   RETCODE(2),=H'8'
         B     ENDPROG
LXRESERR DS    0H
         LR    R1,R15
         LA    R10,INI5WORK
         CALL  JCECVTBH
         STCM  R0,B'1111',WTOX2D+37
         STCM  R1,B'1111',WTOX2D+41
         WTO   MF=(E,WTOX2D)
         MVC   RETCODE(2),=H'8'
         B     ENDPROG
ETCREERR DS    0H
         LR    R1,R15
         LA    R10,INI5WORK
         CALL  JCECVTBH
         STCM  R0,B'1111',WTOX3D+37
         STCM  R1,B'1111',WTOX3D+41
         WTO   MF=(E,WTOX3D)
         MVC   RETCODE(2),=H'8'
         B     ENDPROG
ETCONERR DS    0H
         LR    R1,R15
         LA    R10,INI5WORK
         CALL  JCECVTBH
         STCM  R0,B'1111',WTOX4D+37
         STCM  R1,B'1111',WTOX4D+41
         WTO   MF=(E,WTOX4D)
         MVC   RETCODE(2),=H'8'
         B     ENDPROG
*
***********************************************************************
* TSSOINI5 ONLY DATA CONSTANTS.                                       *
*                                                                     *
***********************************************************************
LXRESC   LXRES LXLIST=0,SYSTEM=YES,MF=L
LXRESCE  EQU   *
*
ETCONC   ETCON TKLIST=0,LXLIST=0,MF=L
ETCONCE  EQU   *
*
*
WTOX1C   WTO   'TSSX500E ERROR IN AXRES - (R15 = XXXXXXXX',MF=L
WTOX1CE  EQU   *
*
WTOX2C   WTO   'TSSX501E ERROR IN LXRES - (R15 = XXXXXXXX',MF=L
WTOX2CE  EQU   *
*
WTOX3C   WTO   'TSSX502E ERROR IN ETCRE - (R15 = XXXXXXXX',MF=L
WTOX3CE  EQU   *
*
WTOX4C   WTO   'TSSX503E ERROR IN ETCON - (R15 = XXXXXXXX',MF=L
WTOX4CE  EQU   *
*
TSSOVARS DSECT
INI5WORK DS    CL200
LXRESD   LXRES LXLIST=0,SYSTEM=YES,MF=L
*
ETCOND   ETCON TKLIST=0,LXLIST=0,MF=L
*
WTOX1D   WTO   'TSSX500E ERROR IN AXRES - (R15 = XXXXXXXX',MF=L
*
WTOX2D   WTO   'TSSX501E ERROR IN LXRES - (R15 = XXXXXXXX',MF=L
*
WTOX3D   WTO   'TSSX502E ERROR IN ETCRE - (R15 = XXXXXXXX',MF=L
*
WTOX4D   WTO   'TSSX503E ERROR IN ETCON - (R15 = XXXXXXXX',MF=L
*
RETCODE  DS    H           RETURN CODE FROM TSSOINI5
         TSSOCVT
         TSSONDSA
         IEFJESCT
         IEFJSCVT
         IEFJSSVT
         IHAETD
         COPY  TSSODATD
         CVT   DSECT=YES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   TSSOINI5
 PUNCH ' SETCODE  AC(1)'
 PUNCH ' IDENTIFY TSSOINI5(''V 4.3.0 &SYSDATE &SYSTIME'') '
 PUNCH ' INCLUDE  SYSLMOD(JCECVT)'
 PUNCH ' ENTRY    TSSOINI5'
 PUNCH ' NAME     TSSOINI5(R)'
         END
