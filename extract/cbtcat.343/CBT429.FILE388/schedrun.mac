SRUN     TITLE 'SCHEDRUN'
*************************************************************
*                                                           *
* MODULE NAME = SCHEDRUN.                                   *
*                                                           *
* DESCRIPTIVE NAME = AUTOMATIC OPERATOR COMMANDS SCHEDULER. *
*                                                           *
* COPYRIGHT = DAVID B. COLE - 1980.                         *
*                                                           *
* STATUS = RELEASE 2, MODIFICATION LEVEL 2.                 *   7/86MDL
*                                                           *
* FUNCTION = AUTOMATICALLY EXECUTES OPERATOR COMMANDS       *
*            ACCORDING TO A SCHEDULE MAINTAINED BY THE TSO  *
*            SCHEDULE COMMAND. WHENEVER THIS PROGRAM RUNS,  *
*            IT EXAMINES THE SCHEDULE TO SEE (A) IF ANY     *
*            OPERATOR COMMANDS NEED TO BE EXECUTED NOW, AND *
*            (B) TO SEE WHEN THE NEXT OPERATOR COMMAND IS   *
*            TO BE EXECUTED SO THAT IT CAN SCHEDULE ITS OWN *
*            REEXECUTION AT THAT TIME. IT DOES THIS BY      *
*            MEANS OF THE JES2 AUTOMATIC COMMANDS EXECUTION *
*            FACILITY.                                      *
*                                                           *
* PROCESSOR = OS/VS ASSEMBLER.                              *
*                                                           *
* TYPE = PROCEDURE.                                         *
*                                                           *
* ATTRIBUTES = TASK MODE, AUTHORIZED, REENTRANT.            *
*                                                           *
* DEPENDANCIES = JES2, GSAM IUP.                            *
*                                                           *
* AUTHOR = DAVID B. COLE.                                   *
*                                                           *
*************************************************************
         TITLE 'SCHEDRUN -- CHANGE HISTORY'
         MNOTE 4,'12/4/85 NEEDS $SCAT AND $XECB TO ASSEMBLE'  12/85 DBC
         MNOTE 4,'WITH JES2/SP 1.3.4'                         12/85 DBC
*************************************************************   7/86MDL
*                                                           *   7/86MDL
* RELEASE 2.2                                               *   7/86MDL
*                                                           *   7/86MDL
* LAST CHANGE DATE - JULY 10, 1986                          *   7/86MDL
*                                                           *   7/86MDL
*                  - WEEKDAY OPERAND EXPANDED AND MODIFIED: *   7/86MDL
*                                                           *   7/86MDL
*                    OPERAND WEEKDAY(XXX) HAS BEEN REPLACED *   7/86MDL
*                       BY WEEKDAY(+XXX) TO BE CONSISTANT   *   7/86MDL
*                       WITH THE -XXX FORM.                 *   7/86MDL
*                                                           *   7/86MDL
*                    WEEKDAY(XXX) NOW IMPLIES THAT THE      *   7/86MDL
*                       COMMAND WILL ONLY EXECUTE ON THAT   *   7/86MDL
*                       EXACT WEEKDAY, SUBJECT TO OTHER     *   7/86MDL
*                       TIMESTAMP MATCHING.                 *   7/86MDL
*                                                           *   7/86MDL
*                    WEEKDAY(^XXX) IMPLIES THAT THE COMMAND *   7/86MDL
*                       WILL EXECUTE ON ALL WEEKDAYS EXCEPT *   7/86MDL
*                       THE ONE SPECIFIED, SUBJECT TO OTHER *   7/86MDL
*                       TIMESTAMP MATCHING.                 *   7/86MDL
*                                                           *   7/86MDL
*************************************************************   7/86MDL
         EJECT ,                                                7/86MDL
************************************************************* 02/84 DBC
*                                                           * 02/84 DBC
* RELEASE 2.1                                               * 02/84 DBC
*                                                           * 02/84 DBC
* LAST CHANGE DATE - FEBRUARY 15, 1984                      * 02/84 DBC
*                                                           * 02/84 DBC
*                  - "TIME OF DAY" RECOGNITION HAS BEEN     * 02/84 DBC
*                    CHANGED. SCHEDRUN NOW RECOGNIZES AND   * 02/84 DBC
*                    USES LOCAL TIME INSTEAD OF GMT.        * 02/84 DBC
*                                                           * 02/84 DBC
************************************************************* 02/84 DBC
         EJECT ,                                              02/84 DBC
*************************************************************
*                                                           *
* RELEASE 2.0                                               *
*                                                           *
* LAST CHANGE DATE - MAY 1, 1983                            *
*                                                           *
*                  - THE DEPENDANCY UPON THE AVAILABILITY   *
*                    OF THE GSAM IUP (WRITTEN AT YALE) HAS  *
*                    BEEN REMOVED.                          *
*                                                           *
*                  - THE FORMAT OF THE LOG RECORD HAS BEEN  *
*                    CHANGED.                               *
*                                                           *
*                  - IF FOR ANY DETECTABLE REASON THE       *
*                    RESCHEDULING OF SCHEDRUN FAILS, THEN   *
*                    THE OPERATOR IS ALERTED VIA A WTOR     *
*                    FOLLOWED BY AN ABEND (CODE U69).       *
*                                                           *
*                  - IF A RECORD IS MADE OBSOLETE OR        *
*                    DISCOVERED TO BE OBSOLETE, THEN IT IS  *
*                    FLAGGED AS SUCH AND IGNORED ON         *
*                    SUBSEQUENT RUNS.                       *
*                                                           *
*                  - NEGATIVE WEEKDAY MODIFIERS SUPPORT     *
*                    ADDED.                                 *
*                                                           *
*                  - MULTIPLE SYSTEMS SUPPORT HAS BEEN      *
*                    ADDED. INDIVIDUAL SCHEDULE FILE        *
*                    RECORDS CAN BE ASSIGNED TO BE EXECUTED *
*                    ON EITHER SPECIFIC SYSTEMS OR ANY      *
*                    SYSTEM IN A MULTI-SYSTEM ENVIRONMENT.  *
*                                                           *
*************************************************************
         TITLE 'SCHEDRUN -- IRARMCT MACRO DEFINITION (FROM PVTMACS)'
*        %GOTO RMCTPLS1; /*
         MACRO
         IRARMCT &DSECT=YES
         IEZBITS                                                     */
*%RMCTPLS1:  ;
* /*                                                                 */
* /* MACCOMP Z-4 SC1CX/PKD16                                         */
* /* MACSTAT Z-4 75007/Z40BPSS                                       */
* /* *************************************************************** */
* /*                                                                 */
* /*   MACRO NAME - IRARMCT                                          */
* /*                                                                 */
* /*   DESCRIPTIVE NAME - SYSTEM RESOURCES MANAGER CONTROL TABLE     */
* /*                                                                 */
* /*   COPYRIGHT - NONE                                              */
* /*                                                                 */
* /*   STATUS - OS/VS2 RELEASE 4, 10/28/75, LEVEL=1                  */
* /*                                                                 */
* /*   FUNCTION - THE RMCT SERVES AS THE ORIGIN TO LOCATE SYSTEM     */
* /*         RESOURCES MANAGER TABLES AND ENTRY POINTS.  THE RMCT    */
* /*         LOCATES THE SCHEDULING / ROUTING INFORMATION USED TO    */
* /*         INVOKE THE REQUIRED PROCESSING FOR THE VARIOUS SYSTEM   */
* /*         RESOURCES MANAGER FUNCTIONS.                            */
* /*                                                                 */
* /*   METHOD OF ACCESS - THE ADDRESS OF THE RMCT IS CONTAINED IN    */
* /*         THE -CVTOPCTP- FIELD OF THE CVT.                        */
* /*                                                                 */
* /*         BY CONVENTION WITHIN THE SYSTEM RESOURCES MANAGER       */
* /*         ROUTINES, REGISTER 2 IS ALWAYS RESERVED TO CONTAIN      */
* /*         THE ADDRESS OF THE RMCT.                                */
* /*                                                                 */
* /* *************************************************************** */
*        %GOTO RMCTPLS2; /*
         AGO   .RMCTAL1                                              */
* /* *************************************************************** */
* /*                                                                 */
* /*   INVOCATION PARAMETERS AND/OR KEYWORDS =                       */
* /*                                                                 */
* /*     BAL - DSECT=NO IF DSECT IS NOT TO BE PRODUCED.              */
* /*                                                                 */
* /*           NOTE - THE BAL FORM OF THE MACRO IS CODED WITH        */
* /*           'DC' INSTRUCTIONS, SO THAT THE MACRO MAY BE USED      */
* /*           TO ASSEMBLE THE INITIAL FIELD VALUES FOR THE          */
* /*           IRARMCNS MODULE, WHICH CONTAINS THE RMCT.             */
* /*                                                                 */
* /*         USING ON RMCT GIVES ADDRESSABILITY TO ALL SYMBOLS.      */
* /*                                                                 */
* /*     PLS - %RMCTLEVL='USERLEVL' IF THE RMCT MAPPING IS TO BE     */
* /*           CONCATENATED WITH A PREVIOUS DECLARATION, WITH THE    */
* /*           RMCT BEING ASSIGNED THE INDICATED STRUCTURE LEVEL.    */
* /*         - %RMCT9999=',' IF THE STRUCTURE SHOULD NOT BE CLOSED.  */
* /*                                                                 */
* /*           NOTE - INASMUCH AS THE RMCT TABLE APPEARS AT THE      */
* /*           VERY BEGINNING OF THE -IRARMCNS- MODULE, ONLY A       */
* /*           STRUCTURE LEVEL OF '1' (ONE) SHOULD BE USED FOR       */
* /*           THE RMCT.                                             */
* /*                                                                 */
* /*         TO ACCESS THE RMCT AS A DECLARED STRUCTURE,             */
* /*         DCL RMCTPTR PTR.                                        */
* /*                                                                 */
* /*   CHANGE ACTIVITY = @ZM43085                                    */
* /*                     @ZA10831                                    */
* /*                                                                 */
* /*   A000000-999999                                          Y02133*/
* /*                                                                 */
* /* *************************************************************** */
* /*
.RMCTAL1 ANOP
         SPACE 1
         AIF   ('&DSECT' EQ 'NO').RMCTAL2
RMCT     DSECT
         AGO   .RMCTAL3
.RMCTAL2 ANOP
         DS    0D
RMCT     EQU   *
.RMCTAL3 ANOP
         SPACE 1
RMCTNAME DC    C'RMCT' -           BLOCK IDENTIFICATION
RMCTCCT  DC    A(CCT) -            CPU MANAGEMENT CONTROL TABLE
RMCTICT  DC    A(ICT) -            I/O MANAGEMENT CONTROL TABLE
RMCTMCT  DC    A(MCT) -            STORAGE MANAGEMENT CONTROL TABLE
RMCTRMPT DC    A(RMPT) -           CTL ALGORITHM PARAMETER TABLE
RMCTRMCA DC    A(RMCA) -           CTL ALGORITHM CONTROL AREA
RMCTWMST DC    A(0) -              ADDR OF WLM SPECIFICATION TABLE
RMCTRLCT DC    A(0) -              ADDR OF LOGICAL CHANNEL MGMT TABLE
RMCTRMSA DC    A(0) -              ADDR OF RESOURCES MANAGER SAVE AREA
RMCTRMPD DC    A(0) -              ADDR OF RESOURCES MANAGER PERF DATA
RMCTRMEX DC    A(RMEX) -           ROUTINE EXITING VECTOR TABLE
RMCTRMSB DC    A(RMSB) -           SUBROUTINE CALLING VECTOR TABLE
RMCTEPPA DC    A(IRAEPPA) -        PRTL ANALYSIS ENTRY TABLE
RMCTEPDT DC    A(EPDTSCN) -        USER ACTION ENTRY TABLE
RMCTEPAT DC    A(EPATSCN) -        ALGORITHM ENTRY TABLE
RMCTEPBG DC    A(EPAT) -           ADDR OF ALG ENTRY PT TABLE  @ZA10831
RMCTADJC DC    F'0' -              ADJUSTMENT FACTOR FOR CPU RATE
RMCTITT  DC    V(IRASECHT) -       INTFC EVENT CHARACTERISTICS TABLE
RMCTEPET DC    V(IRAPRCSR) -       EVENT ROUTING VECTOR TABLE
RMCTFLTM DC    A(IRAFLTM) -        TIME OF DAY ADJUST VECTOR TABLE
RMCTEPPR DC    A(IRAEPPR) -        PROCESS RATE DEPENDENT ENTRY TABLE
RMCTWAST DC    A(0) -              ADDR OF WAR SPECIFICATION TABLE
RMCTWAMT DC    A(0) -              ADDR OF WAR MEASUREMENT TABLE
RMCTTMQE DC    A(IRACTMQE) -       SCHEDULED RTNE QUEUE HEADER ADDR
RMCTAQCT DC    F'0' -              ACTION QUEUE MEMBER COUNT
RMCTAQHD DC    A(IRAOUCB) -        ACTION QUEUE FORWARD POINTER
RMCTWTQE DC    A(IRAWTQE) -        WAIT - QUEUE HEADER BLOCK ADDRESS
RMCTOTQE DC    A(IRAOTQE) -        OUT - QUEUE HEADER BLOCK ADDRESS
RMCTINQE DC    A(IRAINQE) -        IN - QUEUE HEADER BLOCK ADDRESS
RMCTR10  DC    F'0' -              RESERVED                    @Z40BPCH
RMCTTBS  DC    F'0' -              STARTING TIME BASE FOR TIME OF DAY
RMCTTOD  DC    F'0' -              TIME OF DAY - SYST RSRC MGR INVOKE
RMCTTOC  DC    D'0' -              TIME OF CENTURY - 64BIT BINARY NMB
RMCTALA  DC    4B'00000000' -      ALGORITHM REQUEST ACCUMULATOR FIELD
RMCTALR  DC    4B'00000000' -      IMMEDIATE ALGORITHM REQUEST FIELD
RMCTRQSV DC    A(RQSV) -           ADDR OF REQ SRV DATA AREA   @Z40BPCH
RMCTFLGS DC    1B'00000000' -      PROCESSING CONTROL FLAGS
RMCTMFA  EQU   BIT0 -              MEASUREMENT FACILITY ACTIVE
RMCTCPS1 EQU   BIT1                CAP SWITCH                  @Z40BPSS
RMCTINIT EQU   BIT3 -              SRM INITIALIZATION WAS PERFORMED
RMCTRSV1 EQU   BIT4 -              RESERVED                   @ZM43085
RMCTSTW  EQU   BIT5 -              SET HAS STOPPED WAR COLLECTION
RMCTRSV2 EQU   BIT6 -              RESERVED                   @ZM43085
         DC    1B'00000000' -      OVERRIDE CONDITION FLAGS
RMCTMFS  EQU   BIT1 -              MF1 ACTIVE,SET IPS RCVD    @Z40BPCH
         DC    2B'00000000' -      RESERVED
RMCTTELM DC    V(IEATSELM) -       RESOURCES MANAGER TIMING ELEMENT
RMCTCPID DC    C'RM1',X'03' -      RESOURCES MANAGER CELL POOL ID
RMCTTOCI DC    D'0' -              CLOCK READ AREA - 64BIT BINARY NMB
RMCTOUCB DC    A(IRAOUCB) -        PREASSEMBLED MODEL OUCB
RMCTOUXB DC    A(IRAOUXB) -        INTERPOSED DUMMY OUXB
RMCTSRBT DC    A(IRASRBT) -        RESOURCES MANAGER SRB TABLE
RMCTDMDT DC    A(0) -              ADDR OF DOMAIN TABLE        @Z40BPCH
RMCTDMDE DC    A(0) -              ADDR OF LAST DMN TAB ENTRY  @Z40BPCH
RMCTDMNC DC    H'0' -              NUMBER OF DOMAINS           @Z40BPCH
RMCTR50  DC    H'0' -              RESERVED                    @Z40BPCH
RMCTEND  DS    0D -                END OF RMCT
RMCTLEN  EQU   RMCTEND-RMCT -      LENGTH OF RMCT
         SPACE 3
CCT      EQU   *-*
ICT      EQU   *-*
MCT      EQU   *-*
RMPT     EQU   *-*
RMCA     EQU   *-*
RMEX     EQU   *-*
RMSB     EQU   *-*
IRAEPPA  EQU   *-*
EPDTSCN  EQU   *-*
EPATSCN  EQU   *-*
EPAT     EQU   *-*
IRAFLTM  EQU   *-*
IRAEPPR  EQU   *-*
IRACTMQE EQU   *-*
IRAOUCB  EQU   *-*
IRAWTQE  EQU   *-*
IRAOTQE  EQU   *-*
IRAINQE  EQU   *-*
RQSV     EQU   *-*
IRAOUXB  EQU   *-*
IRASRBT  EQU   *-*
         MEND
*                                                                    */
*%RMCTPLS2:  ;
         TITLE 'SCHEDRUN -- IBM CONTROL BLOCK MAPS'
         PUNCH '         SETCODE AC(1)'
         SPACE 3
SCHEDRUN CSECT ,
         PRINT NOGEN
         SPACE 3
*************************************************************
*        ASCB = ADDRESS SPACE CONTROL BLOCK                 *
*        ASCB = DSECT AND BASE                              *
*************************************************************
         SPACE 1
         IHAASCB ,
         SPACE 3
*************************************************************
*        CVT = COMMUNICATIONS VECTOR TABLE                  *
*        CVTFIX = PREFIX AND BASIC SECTIONS DSECT           *
*        CVTFIX = PREFIX SECTION BASE                       *
*        CVTMAP = BASIC SECTION BASE                        *
*        CVTXTNT1 = OS COMMON EXTENSION DSECT AND BASE      *
*        CVTXTNT2 = VS1/VS2 COMMON EXTENSION DSECT AND BASE *
*************************************************************
         SPACE 1
         CVT   DSECT=YES,PREFIX=YES,LIST=YES
         SPACE 3
*************************************************************
*        DCB = DATA CONTROL BLOCK                           *
*        IHADCB = DSECT AND BASE                            *
*************************************************************
         SPACE 1
         DCBD  DSORG=(PS,PO)
         SPACE 3
*************************************************************
*        JSCB = JOB STEP CONTROL BLOCK                      *
*        IEZJSCB = DSECT AND BASE                           *
*************************************************************
         SPACE 1
         IEZJSCB ,
         SPACE 3
*************************************************************
*        PSA = PREFIXED STORAGE AREA                        *
*        PSA = DSECT AND BASE                               *
*************************************************************
         SPACE 1
         IHAPSA ,
         SPACE 3
*************************************************************
*        RMCT = SRM CONTROL TABLE (SRM)                     *
*        RMCT = DSECT AND BASE                              *
*************************************************************
         SPACE 1
         IRARMCT ,
         SPACE 3
*************************************************************
*        SMCA = SMF (SYSTEM MANAGEMENT FACILITIES) CONTROL  *
*               AREA                                        *
*        SMCABASE = DSECT AND BASE                          *
*************************************************************
         SPACE 1
         IEESMCA ,
         SPACE 3
*************************************************************
*        SSIB = SUBSYSTEM IDENTIFICATION BLOCK              *
*        SSIB = DSECT AND BASE                              *
*************************************************************
         SPACE 1
         IEFJSSIB ,
         SPACE 3
*************************************************************
*        $SSVT = SUBSYSTEM VECTOR TABLE (JES2)              *
*        SSVT = DSECT AND BASE                              *
*************************************************************
         SPACE 1
SCHEDRUN CSECT ,
         $SVT  ,
         SPACE 3
*************************************************************
*        TCB = TASK CONTROL BLOCK                           *
*        TCBFIX = PREFIX AND BASIC SECTIONS DSECT           *
*        TCBFIX = PREFIX SECTION BASE                       *
*        TCB = BASIC SECTION BASE                           *
*        TCBXTNT2 = COMMON EXTENSION DSECT AND BASE         *
*************************************************************
         SPACE 1
         IKJTCB LIST=YES
         SPACE 3
*************************************************************
*        TIOT = TASK INPUT/OUTPUT TABLE                     *
*        DSECT CARD NOT GENERATED                           *
*        TIOCNJOB = BASIC SECTION BASE                      *
*        TIOENTRY = DD ENTRY BASE                           *
*        TIOESTTB = DEVICE ENTRY BASE                       *
*************************************************************
         SPACE 1
TIOT     DSECT ,
         IEFTIOT1 ,
         SPACE 3
*************************************************************
*        STANDARD REGISTER NAMES                            *
*************************************************************
         SPACE 1
         #REGS R
         SPACE 3
         PRINT ON,GEN,NODATA
         TITLE 'SCHEDRUN -- TIME - TIMESTAMP MAP'
*************************************************************
*                                                           *
*        TIME -- TIMESTAMP MAP                              *
*                                                           *
*************************************************************
         SPACE 1
TIME     DSECT ,
TIMEYR   DS    H                   YEAR
TIMEMO   DS    H                   MONTH
TIMEDY   DS    H                   DAY-OF-MONTH
TIMEYMD  EQU   TIMEYR,*-TIMEYR     DATE SEGMENT
TIMEHR   DS    H                   HOUR
TIMEMN   DS    H                   MINUTE
TIMEHM   EQU   TIMEHR,*-TIMEHR     TIME-OF-DAY SEGMENT
TIMETIME EQU   TIMEYR,*-TIMEYR
         TITLE 'SCHEDRUN -- DSA - LOCAL DYNAMIC STORAGE AREA'
*************************************************************
*                                                           *
*        DSA -- LOCAL REGISTER SAVE AREA AND DYNAMIC        *
*        STORAGE AREA.                                      *
*************************************************************
         SPACE 1
         #DSA  ,
DSADATA  DS    0D                  START OF DATA AREA
         EJECT ,
         IFGACB DSECT=NO
         EJECT ,
         IFGRPL DSECT=NO
         EJECT ,
         GSB   DSECT=NO            GSAM PARAMETER BLOCK
         EJECT ,
         ORG   GSBBUFX             LOCATE TO START OF SFR BUFFER
         SFR   MF=(D,N)            SFR MAP
         SPACE 1
         ORG   ,                   HIGHEST LOCATE
GSBBUFLN EQU   *-GSBBUFX           L'GSAM BUFFER
         SPACE 1
SAVEKEY  DS    XL(L'SFRKEY)        KEY SAVE AREA
         EJECT ,
*************************************************************
*        LOG CONTROL BLOCKS AND BUFFER                      *
*************************************************************
         SPACE 1
         PRINT NOGEN
LOGDCB   DCB   DSORG=PS,MACRF=PM,RECFM=VB,LRECL=LOGRCDLN+4,            *
               BLKSIZE=4096,DDNAME=SCHEDLOG
         PRINT ON,GEN,NODATA
         SPACE 1
LOGOPEN  OPEN  (LOGDCB,OUTPUT),MF=L
         SPACE 1
         DS    2Y
LOGRCD   DS    0C
LOGRCDRC DC    CL5'RC'
LOGRCDGU DC    C'   '
LOGRCMD  DS    CL(L'SFRCMD)
LOGRCDLN EQU   *-LOGRCD
         SPACE 3
*************************************************************
*        RESCHEDULING FAILURE WTOR                          *
*************************************************************
         SPACE 1
ERRWTOR  WTOR  '*** RESCHEDULING OF SCHEDRUN HAS FAILED. REPLY U TO AKN*
               OWLEDGE ***',                                           *
               WREPLY,L'WREPLY,WECB,                                   *
               ROUTCDE=(1,2,9,10,11),                                  *
               DESC=(2,7),                                             *
               MF=L
ERRWTORL EQU   *-ERRWTOR
         #TEST SIZE=(ERRWTORL,EQ,MERRWTOL)
         SPACE 1
WREPLY   DS    C
WECB     DS    A
         SPACE 3
*************************************************************
*        VARIOUS TIMESTAMPS                                 *
*************************************************************
         SPACE 1
IPLYR    DS    H                   TIME OF LAST IPL
IPLMO    DS    H
IPLDY    DS    H
IPLYMD   EQU   IPLYR,*-IPLYR
IPLHR    DS    H
IPLMN    DS    H
IPLHM    EQU   IPLHR,*-IPLHR
IPLTIME  EQU   IPLYR,*-IPLYR
         SPACE 1
NOWYR    DS    H                   CURRENT TIME
NOWMO    DS    H
NOWDY    DS    H
NOWYMD   EQU   NOWYR,*-NOWYR
NOWHR    DS    H
NOWMN    DS    H
NOWHM    EQU   NOWHR,*-NOWHR
NOWTIME  EQU   NOWYR,*-NOWYR
NOWMINS  DS    F                   CURRENT TIME IN MINUTES
         SPACE 1
WRKPYR   DS    H                   WORK AREA USED BY DATESCRN
WRKPMO   DS    H
WRKPDY   DS    H
WRKPYMD  EQU   WRKPYR,*-WRKPYR
WRKPHR   DS    H
WRKPMN   DS    H
WRKPHM   EQU   WRKPHR,*-WRKPHR
WRKPTIME EQU   WRKPYR,*-WRKPYR
         SPACE 1
WRKNYR   DS    H                   WORK AREA USED BY DATESCRN
WRKNMO   DS    H
WRKNDY   DS    H
WRKNYMD  EQU   WRKNYR,*-WRKNYR
WRKNHR   DS    H
WRKNMN   DS    H
WRKNHM   EQU   WRKNHR,*-WRKNHR
WRKNTIME EQU   WRKNYR,*-WRKNYR
         SPACE 3
*************************************************************
*        MISCELLANIOUS OTHER TIME VALUES                    *
*************************************************************
         SPACE 1
LTOFFGMT DS    F                   THE DIFFERENCE BETWEEN     02/84 DBC
*                                  LOCAL TIME AND GMT.        02/84 DBC
LASTMNIT DS    F                   TIME OF LAST MIDNIGHT IN MINUTES
NEXTSCHD DS    F                   TIME OF NEXT SCHEDRUN IN MINUTES
         SPACE 3
*************************************************************
*        MISCELLANIOUS SUBROUTINE SAVE AREAS                *
*************************************************************
         SPACE 1
SAVDATSC DS    5A                  DATESCRN
SAVFMINS DS    3A                  FINDMINS
SAVFTIME DS    3A                  FINDTIME
SAVFWKDY DS    A                   FINDWKDY
SAVRLOCK DS    4A                  RCDLOCK
         SPACE 3
*************************************************************
*        MISCELLANIOUS DATA                                 *
*************************************************************
         SPACE 1
         DS    0D
DSAWORK  DS    XL8                 VOLITILE WORK AREA
         SPACE 1
MYSYSID  DS    CL(L'SMCASID)       CURRENT SYSTEM ID VALUE
         SPACE 1
SCHDCMD  DS    2Y,CL60             $TA COMMAND BUILD AREA
SCHDCMDL EQU   *-SCHDCMD           LENGTH
         SPACE 3
*************************************************************
*        APPLICATIONS OVERRIDE LIST. MUST COME AT END OF    *
*        DSA.                                               *
*************************************************************
         SPACE 1
OVRDEOL  DS    A                   --> EO-OVERRIDE LIST
OVRDLIST DS    1000XL(L'SFRNAME)   TODAY'S OVERRIDE LIST (MUST BE LAST)
OVRDLEND EQU   *                   END OF LIST
         DS    X'00'               EOL INDICATOR
         SPACE 1
DSAEND   EQU   *                   EO-DSA
DSADLEN  EQU   DSAEND-DSADATA      L'DATA AREA
DSALEN   EQU   DSAEND-DSA          L'DSA
         TITLE 'SCHEDRUN -- INITIALIZATION'
*************************************************************
*        REENTRANT ENTRY LINKAGE                            *
*************************************************************
         SPACE 1
SCHEDRUN #ENTER SCHEDRUN
               BASES=2,SAVTYPE=(RENT,DSALEN)
         USING DSA,R13             DCL DSA BASE
         SPACE 3
*************************************************************
*        INSURE THAT I AM BEING INVOKED BY SOMEONE WHO IS   *
*        AUTHORIZED TO INVOKE ME.                           *
*************************************************************
         SPACE 1
         L     R1,PSAAOLD-PSA      --> OUR ASCB
         USING ASCB,R1             DCL ASCB BASE
         ICM   R0,15,ASCBTSB       TSO USER?
         BNZ   CHEKAUTH            YES, GO VALIDATE FURTHER
         ICM   R0,15,ASCBJBNI      NO, BATCH JOB?
         BZ    AUTHOK              NO, STARTED TASK; VALIDATION IS OK
         DROP  R1                  YES, RELEASE ASCB BASE
         SPACE 1
CHEKAUTH DS    0H
*************************************************************
* INSERT HERE YOUR OWN AUTHORITY CHECK                      *
*************************************************************
         L     R1,PSATOLD-PSA      --> OUR TCB
         L     R1,TCBTIO-TCB(,R1)  --> MY TIOT
         USING TIOT,R1             DCL TIOT ROOT BASE
         CLC   =C'J0PD',TIOCNJOB   PRODUCT DEVELOPMENT?
         BE    AUTHOK              YES, PERMIT
         CLC   =C'J0PS',TIOCNJOB   NO, PRODUCT SUPPORT?
         #DIE  NE,'CALLER NOT PERMITTED'
         DROP  R1                  RELEASE TIOT BASE
AUTHOK   DS    0H
         SPACE 3
*************************************************************
*        DETERMINE THE CURRENT SMF SYSTEM ID, IF ANY.       *
*************************************************************
         SPACE 1
         L     R1,CVTPTR           --> CVT
         ICM   R1,15,CVTSMCA-CVTMAP(R1) --> SMCA; EXIST?
         BZ    NOSMCA              NO, SKIP
         MVC   MYSYSID,SMCASID-SMCABASE(R1) YES, COPY CRNT SYSID
NOSMCA   DS    0H
         SPACE 3
*************************************************************
*        THE SCHEDULE FILE IS ABOUT TO BE "OPENED". IF      *
*        "FAKEGSAM" IS BEING USED, THEN A REAL OPEN IS      *
*        ABOUT TO BE PERFORMED IN WHICH CASE, IF THE        *
*        SCHEDULE FILE IS PASSWORD PROTECTED FOR UPDATE,    *
*        THEN THE OPERATOR WILL BE PROMPTED FOR THE         *
*        PASSWORD; HOWEVER, I AM SECURE; I AM SPECIAL; AND  *
*        IN GENERAL I AM AN ALL AROUND CERTIFIED GOOD-GUY.  *
*        SO, IT IS NOT NECESSARY THAT THE OPERATOR BE       *
*        PROMPTED. ACCORDINGLY, I WILL NOW SET THE          *
*        "SUPPRESS PASSWORD CHECKING" FLAG; OPEN THE        *
*        SCHEDULE FILE; AND THEN RESET THE FLAG AFTER OPEN. *
*        I WILL ALSO, HOWEVER, SET UP ESTAE PROTECTION SO   *
*        THAT AN INADVERTANT ABEND DOESN'T LEAVE THAT FLAG  *
*        ON FOREVER.                                        *
*************************************************************
         SPACE 1
         SR    R2,R2               CLEAR "GSAM DELAYED" SIGNAL
GSAMRTRY L     R1,PSATOLD-PSA      --> MY TCB
         L     R1,TCBJSCB-TCB(,R1) --> MY JSCB
         L     R1,JSCBACT-IEZJSCB(,R1) (HO-HUM) --> "ACTIVE" JSCB
         SR    R4,R4               SET "PASSWORD SUPPRESSION
*                                  ALREADY SET" SIGNAL
         TM    JSCBSWT1-IEZJSCB(R1),JSCBPASS TRUE?
         BNZ   PASSOK              YES, NOTHING TO DO HERE
         SPACE 1
         LR    R4,R1               NO, COPY JSCB PTR. ALSO
*                                  SERVES AS A "PASSWORD
*                                  SUPPRESSION BEING SET
*                                  LOCALLY" SIGNAL
         ESTAE PASSGARD,CT,TERM=YES SET UP TEMP ESTAE COVERAGE
         MODESET KEY=ZERO          SET KEY-0
         OI    JSCBSWT1-IEZJSCB(R4),JSCBPASS SUPPRESS PASSWORD
*                                  CHECKING
         MODESET KEY=NZERO         RESTORE P/P-KEY
PASSOK   DS    0H
         SPACE 3
*************************************************************
*        INITIALIZE GSAM ACCESS.                            *
*************************************************************
         SPACE 1
         MVC   SFMRKEY,SFMRKEY-SFMR+MASTER PRIME THE SEARCH KEY
         GSAMCALL READ,OPTIONS=(INITIAL,DIR,BACK,WAIT,SYNC,ABTERM),    *
               FILE='SCHEDULE',POOL=3,BUFFER=-1,BUFFLEN=GSBBUFLN,      *
               MF=(E,GSB)          INIT GSB & TEST FILE EXISTANCE
         LR    R3,R15              SAVE THE GSAM RETURN CODE
         SPACE 3
*************************************************************
*        REGARDLESS OF WHETHER OR NOT THE SCHEDULE FILE     *
*        "OPEN" OCCURED OR SUCCEEDED, IF I SET THE          *
*        "SUPPRESS PASSWORD CHECKING" FLAG LOCALLY, THEN    *
*        RESET IT NOW.                                      *
*************************************************************
         SPACE 1
         LTR   R4,R4               WAS THE FLAG SET LOCALLY?
         BZ    PASSOK2             NO, SKIP
         MODESET KEY=ZERO          YES, LOAD KEY-0
         NI    JSCBSWT1-IEZJSCB(R4),255-JSCBPASS RESET THE FLAG
         MODESET KEY=NZERO         RESUME P/P-KEY
         ESTAE 0                   CANCEL THE TEMP ESTAE
PASSOK2  DS    0H
         SPACE 3
*************************************************************
*        TEST THE RESULTS OF THE INITIAL GSAM CALL.         *
*************************************************************
         SPACE 1
         LTR   R15,R3              WAS THE READ OK?
         BZ    GSAMGO              YES, PROCEED
         CH    R15,=Y(GSAMEFIL)    NO, IS GSAM OR THE FILE UP?
         #DIE  NE,'GSAM ACCESS ERROR (INITIAL)'
         SPACE 3
*************************************************************
*        GSAM IS NOT UP OR THE SCHEDULE FILE IS NOT DEFINED *
*        TO GSAM. TELL THE OPERATOR AND THEN WAIT A DECENT  *
*        INTERVAL.                                          *
*************************************************************
         SPACE 1
         LTR   R2,R2               HAS THE OPERATOR BEEN NOTIFIED?
         BNZ   NOWTO               YES, SKIP
         WTO   'SCHEDRUN IS WAITING FOR ACCESS TO THE SCHEDULE FILE',  *
               ROUTCDE=2,DESC=2    NO, TELL
         LR    R2,R1               SAVE THE DOM ID
NOWTO    DS    0H
         SPACE 1
         STIMER WAIT,BINTVL=DELAYTIM WAIT A DECENT INTERVAL
         B     GSAMRTRY            RETRY GSAM
         SPACE 1
GSAMGO   LTR   R1,R2               ANY MSG TO DOM?
         BZ    NODOM               NO, PROCEED
         DOM   MSG=(1)             YES, DO SO
NODOM    DS    0H
         SPACE 3
*************************************************************
*        VERIFY THAT THIS IS THE SCHEDULE FILE              *
*************************************************************
         SPACE 1
         CLC   SFMRFID,SFMRFID-SFMR+MASTER IS THE MASTER RCD VALID?
         #DIE  NE,'INVALID SHEDULE FILE MASTER RECORD'
         SPACE 3
*************************************************************
*        FIND VARIOUS TIME CONSTANTS RELATING TO THE        *
*        CURRENT TIME, THE LAST IPL TIME, AND THE NEXT      *
*        SCHEDRUN TIME.                                     *
*************************************************************
         SPACE 1                                              02/84 DBC
         TIME  MIC,DSAWORK,        GET "ELAPSED" TIME         02/84 DBC*
               ZONE=LT             LOCAL TIME                 02/84 DBC
         L     R2,DSAWORK          SAVE THE SIGNIFICANT PART  02/84 DBC
         TIME  MIC,DSAWORK,        GET "ELAPSED" TIME         02/84 DBC*
               ZONE=GMT            GMT                        02/84 DBC
         SL    R2,DSAWORK          GET THE DIFFERENCE         02/84 DBC
         ST    R2,LTOFFGMT         SAVE IT                    02/84 DBC
         SPACE 1
         TIME  STCK,DSAWORK        GET TOD CLOCK (GMT)        02/84 DBC
         L     R0,DSAWORK          GET SIGNIFICANT PART       02/84 DBC
         AL    R0,LTOFFGMT         CNVRT TO LOCAL TIME        02/84 DBC
         ST    R0,DSAWORK          STORE BACK                 02/84 DBC
         LA    R1,NOWTIME          --> TIMESTAMP SINK
         BAL   R14,FINDTIME        CNVRT TODC TO TIMESTAMP
         BAL   R14,FINDMINS        CNVRT TO MINUTES
         ST    R15,NOWMINS         SAVE
         SPACE 1
         LH    R0,NOWHR            GET CURRENT +HH
         MH    R0,=H'60'           CNVRT TO +MINUTES
         AH    R0,NOWMN            ADD IN +MM
         SR    R15,R0              GET TIME OF LAST MIDNIGHT IN MINUTES
         ST    R15,LASTMNIT        SAVE
         SPACE 1
         AH    R15,=Y(24*60)       GET NEXT MIDNIGHT
         ST    R15,NEXTSCHD        SET MAX NEXT SCHEDRUN TIME
         SPACE 1
         L     R2,CVTPTR           --> CVT                    02/84 DBC
         L     R2,CVTOPCTP-CVTMAP(,R2) --> SRM'S RMCT         02/84 DBC
         L     R2,RMCTTBS-RMCT(,R2) GET SRM'S "TIME BASE".    02/84 DBC
*                                  THIS VALUE IS THE          02/84 DBC
*                                  COMPLEMENT OF BITS 10-41   02/84 DBC
*                                  OF THE TODC VALUE AT THE   02/84 DBC
*                                  TIME OF THE LAST IPL.      02/84 DBC
         LCR   R2,R2               RECOMPLEMENT TO GET IPL    02/84 DBC
*                                  TIME'S BITS 10-41          02/84 DBC
         SRL   R2,10               ISSOLATE BITS 10-31        02/84 DBC
*                                  ("SECONDS" COUNTER)        02/84 DBC
         TIME  STCK,DSAWORK        GET TOD CLOCK AGAIN (GMT)  02/84 DBC
         LM    R0,R1,DSAWORK       LOAD IT
         SRDL  R0,22               R0 GETS BITS 0-9; R1 GETS BITS 10-41
         SRL   R1,10               ISSOLATE CURRENT BITS 10-31
         CR    R1,R2               HAS OVERFLOW OCCURED OUT   02/84 DBC
*                                  OF BIT 10 SINCE IPL-TIME?  02/84 DBC
         BH    IPLTGLUE            NO, PROCEED
         BCTR  R0,0                YES, ADJUST THE CURRENT BITS 0-9
*                                  BACK TO THE IPL TIME'S BITS 0-9
IPLTGLUE SLL   R0,22               RESTORE BITS 0-9 TO THEIR CORRECT
*                                  POSITION
         OR    R0,R2               PUT THE PIECES TOGETHER    02/84 DBC
*                                  TO GET THE IPL-TIME BITS   02/84 DBC
*                                  0-31 (32-61 DON'T MATTER)  02/84 DBC
         AL    R0,LTOFFGMT         CNVRT TO LOCAL TIME        02/84 DBC
         ST    R0,DSAWORK          STORE FOR LOCAL CONVERSION
         LA    R1,IPLTIME          --> TIMESTAMP SINK
         BAL   R14,FINDTIME        CNVRT IPL-TODC TO TIMESTAMP
         SPACE 3
*************************************************************
*        OPEN THE LOG DATA SET AND WRITE TWO BLANK LINES.   *
*************************************************************
         SPACE 1
         MVC   LOGDCB(MODLEN),MODLDCB GET PROTOTYPE CONTROL BLOCKS
         OPEN  (LOGDCB,OUTPUT),MF=(E,LOGOPEN) OPEN THE LOG
         SPACE 1
         TM    DCBOFLGS-IHADCB+LOGDCB,DCBOFOPN IS THERE A LOG?
         BZ    NOLOG0              NO, SKIP
         LA    R0,=Y(6,0,C'  ')    YES, --> BLANK LINE
         PUT   LOGDCB,(0)          WRITE IT
         LA    R0,=Y(6,0,C'  ')    --> BLANK LINE AGAIN
         PUT   LOGDCB,(0)          WRITE IT
         SPACE 3
*************************************************************
*        FORMAT AND PRINT THE LOG HEADER LINE               *
*************************************************************
         SPACE 1
         MVC   LOGRCD-4(LMHEADL+4),LMHEADR-4 GET THE PROTOTYPE
         #TEST SIZE=(LOGRCDLN,GE,LMHEADL)
         MVC   LMHNOW-LMHEADR+LOGRCD-2(L'LMHNOW+2),=X'40212020612020612*
               0204020207A2020'    EDIT MASK: ' XMM/DD/YY HH:MM'
         #TEST SIZE=(L'LMHNOW,EQ,14)
         LH    R1,NOWMO            MM
         MH    R1,=H'100'          MM00
         AH    R1,NOWDY            MMDD
         MH    R1,=H'100'          MMDD00
         LH    R15,NOWYR           CCYY (CC = 19 OR 20)
         SR    R14,R14
         D     R14,=F'100'         R14=YY, R15=CC
         AR    R1,R14              MMDDYY
         MH    R1,=H'100'          MMDDYY00
         AH    R1,NOWHR            MMDDYYHH
         MH    R1,=H'100'          MMDDYYHH00
         AH    R1,NOWMN            MMDDYYHHMM
         CVD   R1,DSAWORK          CNVRT TO DECIMAL
         ED    LMHNOW-2-LMHEADR+LOGRCD(L'LMHNOW+2),DSAWORK+2 CNVRT TO E
         MVC   LMHNOW-2-LMHEADR+LOGRCD(2),LMHNOW-2 REPAIR DAMAGE
         SPACE 1
         MVC   LMHIPL-LMHEADR+LOGRCD-2(L'LMHIPL+2),=X'40212020612020612*
               0204020207A2020'    EDIT MASK: ' XMM/DD/YY HH:MM'
         #TEST SIZE=(L'LMHIPL,EQ,14)
         SPACE 1
         OC    LMHSYSID-LMHEADR+LOGRCD,MYSYSID COPY SYSID; DEFINED?
         BNZ   LMHSIDOK            YES, PROCEED
         MVC   LMHON-LMHEADR+LOGRCD(L'LMHON+L'LMHSYSID),LMHON-1-LMHEADR*
               +LOGRCD             NO, CLEAR IT
LMHSIDOK DS    0H
         SPACE 1
         LH    R1,IPLMO            MM
         MH    R1,=H'100'          MM00
         AH    R1,IPLDY            MMDD
         MH    R1,=H'100'          MMDD00
         LH    R15,IPLYR           CCYY (CC = 19 OR 20)
         SR    R14,R14
         D     R14,=F'100'         R14=YY, R15=CC
         AR    R1,R14              MMDDYY
         MH    R1,=H'100'          MMDDYY00
         AH    R1,IPLHR            MMDDYYHH
         MH    R1,=H'100'          MMDDYYHH00
         AH    R1,IPLMN            MMDDYYHHMM
         CVD   R1,DSAWORK          CNVRT TO DECIMAL
         ED    LMHIPL-2-LMHEADR+LOGRCD(L'LMHIPL+2),DSAWORK+2 CNVRT TO E
         MVC   LMHIPL-2-LMHEADR+LOGRCD(2),LMHIPL-2 REPAIR DAMAGE
         SPACE 1
         PUT   LOGDCB,LOGRCD-4     WRITE THE HEADER RECORD
NOLOG0   DS    0H
         TITLE 'SCHEDRUN -- BUILD TODAY''S OVERRIDE LIST'
*************************************************************
*        SCAN (BACKWARDS) THE SCHEDULE FILE TO BUILD A LIST *
*        OF ALL APPLICATIONS THAT ARE OVERRIDDEN ON THIS    *
*        DATE.                                              *
*************************************************************
         SPACE 1
         LA    R1,OVRDLIST         --> EMPTY OVERRIDE LIST
         ST    R1,OVRDEOL          INITIALIZE EOL PTR
         SPACE 1
OVRDREAD GSAMCALL READ,OPTIONS=(NOUPDATE,SEQ),MF=(E,GSB)
         LTR   R15,R15             GOT NEXT RECORD?
         BZ    OGOTSFR             YES, PROCEED
         CH    R15,=Y(GSAMEKEY)    NO, EOF?
         #DIE  NE,'GSAM ACCESS ERROR (OVERRIDE SCAN)'
         CLI   GSBVSAM+3,4         MAYBE, CHECK FURTHER
         #DIE  NE,'GSAM ACCESS ERROR (OVERRIDE SCAN)'
         B     OSFREOF             YES, EO-SCAN
OGOTSFR  DS    0H
         SPACE 3
*************************************************************
*        IF THE RECORD JUST READ HAS ALREADY BEEN FLAGGED   *
*        OBSOLETE, THEN SKIP IT.                            *
*************************************************************
         SPACE 1
         TM    SFRFLAG,SFRFOBSO    OBSOLETE RECORD?
         BNZ   OVRDREAD            YES, SKIP IT
         SPACE 3
*************************************************************
*        WEED OUT IRRELEVENT RECORDS                        *
*************************************************************
         SPACE 1
         TM    SFRFLAG,SFRFOVRD    IS THIS AN OVERRIDE RECORD?
         BZ    OVRDREAD            NO, IGNORE IT
         SPACE 1
         LA    R1,OVRDLIST-L'SFRNAME YES, LOAD LIST-SO-FAR SCANNER
         BALR  R14,0               LOAD LOOP HEAD
         LA    R1,L'SFRNAME(,R1)   --> NEXT ENTRY
         CLI   0(R1),X'00'         REDUNDANCY SCAN DONE?
         BE    ONOREDUN            YES, RECORD NOT REDUNDANT
         CLC   0(L'SFRNAME,R1),SFRNAME NO, REDUNDANT INFORMATION?
         BNER  R14                 NOT YET, KEEP CHECKING
         B     OVRDREAD            YES, IGNORE THIS RECORD
ONOREDUN DS    0H
         SPACE 3
*************************************************************
*        SEE IF THIS SFR IS ELIGIBLE TO RUN ON THE CURRENT  *
*        SYSTEM.                                            *
*************************************************************
         SPACE 1
         TM    SFRSYSID,255-C' '   "ANY"?
         BZ    SYSIDOK1            YES, PERMIT THIS SFR
         CLC   MYSYSID,SFRSYSID    NO, RIGHT SYSID?
         #TEST SIZE=(L'MYSYSID,EQ,L'SFRSYSID)
         BNE   OVRDREAD            NO, IGNORE THIS SFR
SYSIDOK1 DS    0H                  YES, PERMIT THIS SFR
         SPACE 3
*************************************************************
*        SEE IF THIS SFR IS SELECTED FOR THE CURRENT DATE.  *
*************************************************************
         SPACE 1
         LA    R1,NOWTIME          --> CURRENT DATE
         BAL   R14,DATESCRN        IS THIS SFR SCHEDULED FOR TODAY?
         B     OVRDREAD            +0 NO, GO READ THE NEXT SFR
*        FALL THROUGH              +4 YES, PROCEED
         SPACE 3
*************************************************************
*        I HAVE A NEW OVERRIDE NAME FOR TODAY. ADD IT TO    *
*        THE LIST.                                          *
*************************************************************
         SPACE 1
         LA    R1,OVRDLIST         --> LIST SPACE
         AH    R1,=Y(OVRDLEND-L'SFRNAME-OVRDLIST) --> LAST SLOT
         C     R1,OVRDEOL          WILL THIS OVERFLOW THE LIST?
         #DIE  L,'OVERRIDE TABLE OVERFLOW' YES, TERMINATE
         L     R1,OVRDEOL          NO, --> EO-LIST SO FAR
         MVC   0(L'SFRNAME,R1),SFRNAME SAVE OVERRIDDEN APPLICATION NAM
         LA    R1,L'SFRNAME(,R1)   ADVANCE EOL PTR
         ST    R1,OVRDEOL          STORE
         B     OVRDREAD            READ NEXT RECORD
OSFREOF  DS    0H
         TITLE 'SCHEDRUN -- PROCESS THE SCHEDULE FILE'
*************************************************************
*        READ THE NEXT SCHEDULE FILE RECORD.                *
*************************************************************
         SPACE 1
         XC    SFRKEY,SFRKEY       INITIALIZE 2 READ FORWARD SEQUENTIAL
NEXTSFR  GSAMCALL READ,OPTIONS=(UPDATE,FWD,SEQ),MF=(E,GSB)
         LTR   R15,R15             GOT NEXT RECORD?
         BZ    GOTSFR              YES, PROCEED
         CH    R15,=Y(GSAMEKEY)    NO, EOF?
         #DIE  NE,'GSAM ACCESS ERROR (READ BACKWARDS)'
         CLI   GSBVSAM+3,4         MAYBE, CHECK AGAIN
         #DIE  NE,'GSAM ACCESS ERROR (READ BACKWARDS)'
         B     SFREOF              YES, EOP
         SPACE 1
GOTSFR   CLC   SFRKEY,SFMRKEY-SFMR+MASTER MASTER RECORD?
         BE    SFREOF              YES, JUST LIKE EOF
         SPACE 3
*************************************************************
*        IF THE RECORD JUST READ HAS ALREADY BEEN FLAGGED   *
*        OBSOLETE, THEN SKIP IT.                            *
*************************************************************
         SPACE 1
         TM    SFRFLAG,SFRFOBSO    OBSOLETE RECORD?
         BNZ   NEXTSFR             YES, SKIP IT
         SPACE 3
*************************************************************
*        SEE IF THIS SFR IS ELIGIBLE TO RUN ON THE CURRENT  *
*        SYSTEM.                                            *
*************************************************************
         SPACE 1
         TM    SFRSYSID,255-C' '   "ANY"?
         BZ    SYSIDOK2            YES, PERMIT THIS SFR
         CLC   MYSYSID,SFRSYSID    NO, RIGHT SYSID?
         #TEST SIZE=(L'MYSYSID,EQ,L'SFRSYSID)
         BNE   NEXTSFR             NO, IGNORE THIS SFR
SYSIDOK2 DS    0H                  YES, PERMIT THIS SFR
         SPACE 3
*************************************************************
*        VALIDATE THIS SFR'S LAST EXECUTION TIME AGAINST    *
*        THE CURRENT TIME. IF SFRXTIME IS HIGH, THEN IT IS  *
*        CONSIDERED INVALID AND IS CLEARED.                 *
*************************************************************
         SPACE 1
         CLC   SFRXTIME,NOWTIME    IS LAST XEQ TIME VALID?
         BNH   XTIMEOK             YES, PROCEED
         XC    SFRXTIME,SFRXTIME   NO, CLEAR IT TO ZERO
XTIMEOK  DS    0H
         SPACE 3
*************************************************************
*        SEE IF THIS SFR IS SELECTED FOR THE CURRENT DATE.  *
*************************************************************
         SPACE 1
         LA    R1,NOWTIME          --> CURRENT DATE
         BAL   R14,DATESCRN        IS THIS SFR SCHEDULED FOR TODAY?
         B     CHKOBSOL            +0 NO, GO SEE IF IT IS OBSOLETE
         CLC   SFRHM,NOWHM         +4 YES, HAS TODAY'S START TIME
*                                     ARRIVED YET?
         BH    CHKFUTUR            NO, GO SEE IF I NEED TO RESET THE
*                                  NEXT SCHEDRUN TIME
*        FALL THROUGH              YES, PROCEED. NOTE, R15 CONTAINS THE
*                                  EXECUTION TIME IN MINUTES.
         SPACE 3
*************************************************************
*        I NOW HAVE A COMMAND WHICH IS SCHEDULED FOR TODAY  *
*        AT SOME TIME PRIOR TO THIS MOMENT. I MUST NOW      *
*        CHECK TO SEE IF THE CURRENT TIME FALLS WITHIN THIS *
*        COMMAND'S EXECUTION WINDOW.                        *
*************************************************************
         SPACE 1
         SR    R1,R1
         ICM   R1,3,SFRWHR         GET WINDOW HH
         MH    R1,=H'60'           CNVRT TO MINUTES
         AH    R1,SFRWMN           ADD MM
         AR    R1,R15              ADD TO SCHEDULED TIME
         CL    R1,NOWMINS          DOES NOW FALL WITHIN THE WINDOW?
         BNH   NEXTSFR             NO, LOOP FOR NEXT SFR
         SPACE 1
         CLC   SFRXTIME,WRKPTIME   YES, HAS THIS COMMAND ALREADY BEEN
*                                  EXECUTED IN THIS SAME WINDOW?
         BL    WNDOWOK             NO, PROCEED WITH CMD EXECUTION
         TM    SFRFLAG,SFRFIPLF    YES, CAN AN INTERVENING IPL FORCE
*                                  REEXECUTION OF THIS COMMAND IN THIS
*                                  SAME WINDOW?
         BZ    NEXTSFR             NO, FORGET IT
         CLC   SFRXTIME,IPLTIME    YES, HAS AN IPL OCCURED SINCE THE
*                                  LAST EXECUTION OF THIS COMMAND?
         BH    NEXTSFR             NO, FORGET IT
WNDOWOK  DS    0H
         SPACE 3
*************************************************************
*        I NOW HAVE A COMMAND THAT IS SCHEDULED TO EXECUTE  *
*        NOW. IF THIS IS NOT AN OVERRIDE COMMAND, THEN I    *
*        MUST NOW CHECK THE APPLICATION OVERRIDE LIST TO    *
*        INSURE THAT THIS COMMAND IS NOT OVERRIDDEN.        *
*************************************************************
         SPACE 1
         TM    SFRFLAG,SFRFOVRD    IS THIS AN OVERRIDE COMMAND?
         BNZ   OVRDNO              YES, CMD NOT OVERRIDDEN
         LA    R1,OVRDLIST-L'SFRNAME NO, LOAD BXH SCANNER
         LA    R2,L'SFRNAME        LOAD BXH INCRIMENT
         L     R3,OVRDEOL          --> EO-LIST
         SR    R3,R2               LOAD BXH LIMIT
         BALR  R14,0               LOAD LOOP HEAD
         BXH   R1,R2,OVRDNO        SCAN TO NEXT LIST ENTRY
         CLC   0(L'SFRNAME,R1),SFRNAME IS THIS APPLICATION OVERRIDDEN?
         BNER  R14                 NOT YET; KEEP CHECKING
         B     NEXTSFR             YES, DON'T EXECUTE THIS SFR'S CMD
OVRDNO   DS    0H
         SPACE 3
*************************************************************
*        THE COMMAND IS TO BE EXECUTED. FIRST UPDATE THIS   *
*        SFR.                                               *
*************************************************************
         SPACE 1
         MVC   SFRXTIME,NOWTIME    SET NEW EXECUTION TIME
         GSAMCALL REWRITE,MF=(E,GSB) REWRITE THIS SFR
         LTR   R15,R15             AOK?
         #DIE  NZ,'GSAM ACCESS ERROR (REWRITE)'
         SPACE 3
*************************************************************
*        ISSUE THE COMMAND.                                 *
*************************************************************
         SPACE 1
         MODESET KEY=ZERO,MODE=SUP GET PRIVILEGED
         SR    R0,R0               CLEAR UCMID INFO
         MGCR  SFRCMDL             ISSUE THE COMMAND
         LR    R2,R15              SAVE THE RETURN CODE
         MODESET KEY=NZERO,MODE=PROB GET NORMAL
         SPACE 3
*************************************************************
*        LOG THE COMMAND JUST ISSUED                        *
*************************************************************
         SPACE 1
         TM    DCBOFLGS-IHADCB+LOGDCB,DCBOFOPN IS LOG OPEN?
         BZ    NEXTSFR             NO, SKIP
         CVD   R2,DSAWORK          CNVRT SVC-34 RC TO DECIMAL
         MVC   LOGRCDRC(L'LOGRCDRC+1),EDMASKZ-L'LOGRCDRC EDIT MASK
         MVC   LOGRCDRC+L'LOGRCDRC+1,LOGRCDRC+L'LOGRCDRC PROPAGATE PAD
         LA    R1,LOGRCDRC+L'LOGRCDRC PRIME FOR EDMK
         EDMK  LOGRCDRC-1(L'LOGRCDRC+1),DSAWORK+8-(L'LOGRCDRC+1)/2
         MVC   LOGRCDRC,0(R1)      LEFT ADJUST THE TEXT
         MVC   LOGRCDGU+1,LOGRCDGU CLEAR THE GUTTER
         LTR   R2,R2               WAS SVC-34 OK?
         BNZ   CMDNOK1             NO, MSG IS DONE
         MVC   LOGRCDRC(2),=C'OK'  YES, SAY "NO ERROR"
CMDNOK1  DS    0H
         SPACE 1
         LH    R1,SFRCMDL          GET L'CMD+4
         SH    R1,=H'5'            GET L'CMD-1; NULL?
         BM    LOGNULL             YES, SKIP
         MVC   LOGRCMD(*-*),SFRCMD (EXECUTED)
         EX    R1,*-6              NO, COPY TO LOG RECORD
LOGNULL  LA    R1,LOGRCMD+5-LOGRCD(R1) GET L'LOG RECORD+4
         STH   R1,LOGRCD-4         STORE FOR RECFM=VB
         PUT   LOGDCB,LOGRCD-4     WRITE THE LOG RECORD
         B     NEXTSFR             LOOP FOR THE NEXT SFR
         EJECT ,
*************************************************************
*        THE CURRENT SFR IS SCHEDULED TO BE EXECUTED TODAY, *
*        BUT NOT YET. R15 CONTAINS THE SCHEDULED TIME IN    *
*        MINUTES. SEE IF IT IS THE SOONEST SO FAR. IF SO,   *
*        THEN:                                              *
*              - IF IT IS AN OVERRIDE, THEN USE IT.         *
*              - IF IT IS NOT AN OVERRIDE, THEN I MUST      *
*                CHECK THE OVERRIDE LIST. IF THIS SFR IS    *
*                OVERRIDDEN TODAY, THEN I CAN SKIP IT.      *
*        IF THIS SFR PASSES THE ABOVE TESTS, THEN I MUST    *
*        USE IT TO ADJUST THE SCHEDULED TIME FOR THE NEXT   *
*        EXECUTION OF SCHEDRUN.                             *
*************************************************************
         SPACE 1
CHKFUTUR CL    R15,NEXTSCHD        EARLIEST NEXT TIME SO FAR?
         BNL   NEXTSFR             NO, DONE WITH THIS SFR
         SPACE 1
         TM    SFRFLAG,SFRFOVRD    YES, AN OVERRIDE?
         BNZ   FUTUSET             YES, USE IT
         SPACE 1
         LA    R1,OVRDLIST-L'SFRNAME NO, --> OVERRIDE LIST
         LA    R2,L'SFRNAME        GET BXH INCRIMENT
         L     R3,OVRDEOL          --> EO-LIST
         SR    R3,R2               GET BXH LIMIT
         BALR  R14,0               LOAD LOOP HEAD
         BXH   R1,R2,FUTUSET       SCAN TO NEXT ENTRY
         CLC   0(L'SFRNAME,R1),SFRNAME SFR OVERRIDDEN TODAY?
         BNER  R14                 NOT YET, CONTINUE SCANNING
         B     NEXTSFR             YES, SKIP IT
         SPACE 1
FUTUSET  ST    R15,NEXTSCHD        SET NEW NEXT SCHEDRUN TIME
         B     NEXTSFR             LOOP FOR NEXT SFR
         SPACE 3
*************************************************************
*        THE CURRENT COMMAND WILL NOT EXECUTE TODAY. IT MAY *
*        BE OBSOLETE. IF IT IS OBSOLETE, THEN FLAG IT AS    *
*        SUCH, REWRITE IT, AND THEN LOOP TO GET THE NEXT    *
*        RECORD.                                            *
*************************************************************
         SPACE 1
CHKOBSOL LTR   R14,R14             IS THE CURRENT SFR OBSOLETE?
         BNM   NEXTSFR             NO, DONE WITH THIS SFR
         SPACE 1
         BAL   R14,RCDLOCK         YES, LOCK ONTO THE CURRENT RECORD
         OI    SFRFLAG,SFRFOBSO    FLAG IT AS OBSOLETE
         SPACE 1
         GSAMCALL REWRITE,MF=(E,GSB) REWRITE THIS SFR
         LTR   R15,R15             AOK?
         BZ    NEXTSFR             YES, LOOP FOR NEXT RECORD
         #DIE  'GSAM ACCESS ERROR (REWRITE)'
NOTOBSOL DS    0H
         TITLE 'SCHEDRUN -- TERMINATION'
*************************************************************
*        RELEASE GSAM CONTROL BLOCKS.                       *
*************************************************************
         SPACE 1
SFREOF   GSAMCALL FINISH,MF=(E,GSB)
         SPACE 3
*************************************************************
*        SCHEDULE THE NEXT SCHEDRUN.                        *
*************************************************************
         SPACE 1
         MVC   SCHDCMD(SCHDPROL),SCHDPROT GET PROTOTYPE
         SPACE 1
         L     R1,PSATOLD-PSA      --> MY TCB
         L     R1,TCBJSCB-TCB(,R1) --> MY JSCB
         L     R1,JSCBACT-IEZJSCB(,R1) --> ACTIVE JSCB
         L     R1,JSCBSSIB-IEZJSCB(,R1) --> MY SSIB
         ICM   R1,15,SSIBSUSE-SSIB(R1) --> JES'S SSVT; EXIST?
         BZ    COMCHROK            NO, ASSUME "$" COMMAND
         SH    R1,=H'8'            YES, --> PREFIX SECTION
         CLC   =C'SSVT',0(R1)      VALID SSVT?
         BNE   COMCHROK            NO, ASSUME "$" COMMAND
         MVC   SCHDCMD+4(1),$SVCOMCH-(SSVT-8)(R1) YES, SET CORRECT
*                                  CMD-CHAR
COMCHROK DS    0H
         SPACE 1
         L     R15,NEXTSCHD        GET SCHEDULED TIME
         S     R15,LASTMNIT        RELATIVE TO LAST MIDNIGHT
         SR    R14,R14
         D     R14,=F'60'          CNVRT TO +MM, HH
         MH    R15,=H'100'         DECIMAL SHIFT HH 2 PLACES
         AR    R15,R14             CREATE HHMM
         CVD   R15,DSAWORK         CNVRT TO DECIMAL
         UNPK  SCHDCMD+15(4),DSAWORK+5(3) CNVRT TO EBCDIC
         OI    SCHDCMD+18,B'11110000' FIX THE FUCKING SIGN
         MVC   SCHDCMD+14(2),SCHDCMD+15 ADJUST POSITIONING
         MVI   SCHDCMD+16,C'.'     DECORATION
         SPACE 1
         MODESET KEY=ZERO,MODE=SUP GET PRIVILEGED
         SR    R0,R0               CLEAR UCMID
         MGCR  SCHDCMD             SCHEDULE THE NEXT SCHEDRUN
         LR    R2,R15              SAVE THE RC
         MODESET KEY=NZERO,MODE=PROB GET NORMAL
         SPACE 3
*************************************************************
*        LOG THE ABOVE COMMAND AND THEN CLOSE THE LOG.      *
*************************************************************
         SPACE 1
         TM    DCBOFLGS-IHADCB+LOGDCB,DCBOFOPN IS LOG OPEN?
         BZ    NOLOG2              NO, SKIP
         CVD   R2,DSAWORK          CNVRT SVC-34 RC TO DECIMAL
         MVC   LOGRCDRC(L'LOGRCDRC+1),EDMASKZ-L'LOGRCDRC EDIT MASK
         MVC   LOGRCDRC+L'LOGRCDRC+1,LOGRCDRC+L'LOGRCDRC PROPAGATE PAD
         LA    R1,LOGRCDRC+L'LOGRCDRC PRIME FOR EDMK
         EDMK  LOGRCDRC-1(L'LOGRCDRC+1),DSAWORK+8-(L'LOGRCDRC+1)/2
         MVC   LOGRCDRC,0(R1)      LEFT ADJUST THE TEXT
         MVC   LOGRCDGU+1,LOGRCDGU CLEAR THE GUTTER
         LTR   R2,R2               WAS SVC-34 OK?
         BNZ   CMDNOK2             YES, PROCEED
         MVC   LOGRCDRC(2),=C'OK'  NO, RESET THE MSG
CMDNOK2  MVC   LOGRCMD(SCHDPROL-4),SCHDCMD+4 COPY THE RE-SCHED CMD
         #TEST SIZE=(SCHDPROL-4,LE,L'LOGRCMD)
         LA    R1,SCHDPROL+LOGRCMD-LOGRCD L'RECORD+4
         STH   R1,LOGRCD-4         STORE FOR RECFM=VB
         PUT   LOGDCB,LOGRCD-4     WRITE THE LOG RECORD
         SPACE 1
         CLOSE MF=(E,LOGOPEN)      CLOSE THE LOG
NOLOG2   DS    0H
         SPACE 3
*************************************************************
*        IF RESCHEDULING HAS FAILED, THEN ALERT THE         *
*        OPERATOR.                                          *
*************************************************************
         SPACE 1
         LTR   R2,R2               WAS THE SVC-34 OK?
         BZ    EXIT                YES, SKIP THIS
         MVC   ERRWTOR(ERRWTORL),MERRWTOR NO, GET WTOR PROTOTYPE
         MVI   WECB,0              CLEAR THE WTOR ECB
         WTOR  ,WREPLY,,WECB,MF=(E,ERRWTOR) GET OPERATOR'S ATTENTION
         WAIT  ECB=WECB            WAIT FOR HIM
         ABEND 69,DUMP             NOW TERMINATE DRAMATICALLY
         SPACE 3
*************************************************************
*        RETURN TO CALLER.                                  *
*************************************************************
         SPACE 1
EXIT     #EXIT ((R14,R12)),RC=0
         TITLE 'SCHEDRUN -- DATESCRN - DATE SCREENING ROUTINE'
*************************************************************
*                                                           *
*        DATESCRN -- THIS ROUTINE SCREENS THE CURRENT       *
*        SCHEDULE FILE RECORD AGAINST A GIVEN DATE TO SEE   *
*        IF THE RECORD IS SELECTED BY THAT DATE.            *
*                                                           *
*        NOTE, IN THE COMMENTARY FOR THIS ROUTINE ALL       *
*        REFERENCES TO THE "CURRENT DATE" SHOULD BE TAKEN   *
*        TO MEAN THE SELECTION DATE.                        *
*                                                           *
*        INPUTS:                                            *
*              - R1 POINTS TO THE SELECTION DATE (TIMESTAMP *
*                FORM).                                     *
*              - R14 POINTS TO A RETURN ADDRESS.            *
*              - SFR CONTAINS THE CURRENT SCHEDULE FILE     *
*                RECORD.                                    *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - THE CURRENT SFR IS REJECTED. IT IS NOT     *
*                SELECTED BY THE GIVEN DATE.                *
*              - R14: THE HIGH-ORDER BIT IS SET ON IF THE   *
*                SFR IS OBSOLETE WITH RESPECT TO THE GIVEN  *
*                DATE; OTHERWISE, IT IS SET OFF.            *
*              - ALL OTHER REGISTERS ARE RESTORED.          *
*              - WRKPTIME AND WRKNTIME ARE ALTERED IN AN    *
*                UNUSEFUL WAY.                              *
*                                                           *
*        RETURN 4(,R14):                                    *
*              - THE CURRENT SFR IS ACCEPTED. IT IS         *
*                SELECTED BY THE GIVEN DATE.                *
*              - R14: THE HIGH-ORDER BIT IS SET OFF         *
*                SIGNIFYING THAT THE SFR IS NOT OBSOLETE    *
*                WITH RESPECT TO THE GIVEN DATE.            *
*              - R15 CONTAINS THE SCHEDULED EXECUTION TIME  *
*                IN MINUTES (SINCE THE START OF THE         *
*                CENTURY).                                  *
*              - ALL OTHER REGISTERS ARE RESTORED.          *
*              - WRKPTIME CONTAINS THE SCHEDULED EXECUTION  *
*                TIMESTAMP.                                 *
*              - WRKNTIME HAS BEEN ALTERED IN AN UNUSEFUL   *
*                WAY.                                       *
*                                                           *
*************************************************************
         SPACE 1
DATESCRN LA    R14,0(,R14)         CLEAR THE HIGH-BIT
         STM   R14,R2,SAVDATSC     SAVE REGISTERS
         SPACE 1
         LR    R2,R1               COPY THE SELECTION TIMESTAMP PTR
         USING TIME,R2             DCL THE TIMESTAMP BASE
         SPACE 3
*************************************************************
*        GENERATE A START DATE BY SUBSTITUTING CURRENT DATE *
*        VALUES INTO THOSE FIELDS OF THE SFR ASSIGNED DATE  *
*        THAT CONTAIN ZEROS. IF THE RESULTING DATE FALLS    *
*        PAST THE VALID END OF THE MONTH, THEN ADJUST THE   *
*        DAY TO BE THE LAST DAY OF THAT MONTH.              *
*************************************************************
         SPACE 1
         MVC   WRKPTIME,SFRTIME    COPY THE SFR ASSIGNED TIME TO A WORK
*                                  AREA
         SPACE 1
         ICM   R1,3,WRKPYR         IS A YEAR ASSIGNED?
         BNZ   GOTYR               YES, SKIP
         MVC   WRKPYR,TIMEYR       NO, SET TO THE CURRENT YEAR
GOTYR    DS    0H
         SPACE 1
         ICM   R1,3,WRKPMO         IS A MONTH ASSIGNED?
         BNZ   GOTMO               YES, SKIP
         MVC   WRKPMO,TIMEMO       NO, SET TO THE CURRENT MONTH
GOTMO    DS    0H
         SPACE 1
         ICM   R1,3,WRKPDY         IS A DAY ASSIGNED?
         BNZ   GOTDY               YES, SKIP
         MVC   WRKPDY,TIMEDY       NO, SET TO THE CURRENT DAY
GOTDY    DS    0H
         SPACE 1
         LH    R1,WRKPMO           GET THE MONTH VALUE
         AR    R1,R1               CNVRT TO A HWORD OFFSET
         LA    R0,=Y(0,31,28,31,30,31,30,31,31,30,31,30,31) MO LENS
         AR    R1,R0               --> THIS MONTH'S LENGTH
         LH    R0,WRKPDY           GET THE DAY VALUE
         CH    R0,0(,R1)           VALID FOR THIS MONTH?
         BNH   GOTDYOK             YES, NO ADJUSTMENT NEEDED
         LH    R0,0(,R1)           NO, RESET TO THE MONTH'S LAST DAY
         TM    WRKPYR+1,B'00000011' IS THIS A LEAP YEAR?
         BNZ   GOTDYSET            NO, SKIP
         CLI   WRKPMO+1,2          YES, IS THIS FEBRUARY?
         BNE   GOTDYSET            NO, SKIP
         LA    R0,29               YES, RESET TO LEAP-FEB'S LAST DAY
GOTDYSET STH   R0,WRKPDY           RESET DAY TO EO-MONTH
         SPACE 1
GOTDYOK  MVC   WRKNTIME,WRKPTIME   PRIME "WRKN" = "WRKP"
         SPACE 3
*************************************************************
*        ADJUST THE GENERATED START DATE SO THAT "WRKPTIME" *
*        CONTAINS EITHER TODAY OR THE MOST RECENT PRIOR     *
*        EXECUTION DATE, AND "WRKNTIME" CONTAINS EITHER     *
*        TODAY OR THE EARLIEST NEXT EXECUTION DATE FOR THIS *
*        SCHEDULED COMMAND (UNLESS THE RANGE OF POSSIBLE    *
*        EXECUTION DATES DOES NOT SPAN THE CURRENT DATE IN  *
*        WHICH CASE ONE OR THE OTHER OF "WRKPTIME" OR       *
*        "WRKNTIME" WILL CONTAIN AN INCORRECT VALUE BUT THE *
*        ERROR WILL BE SUCH THAT THE VALIDITY OF SUBSEQUENT *
*        TESTS WILL NOT BE AFFECTED).                       *
*************************************************************
         SPACE 1
         CLC   WRKPYMD,TIMETIME    WHICH WAY DO I HAVE TO
*                                  TIME-TRAVEL?
         BE    CHKWDY              NIETHER; GO PERFORM WEEKDAY
*                                  MODIFICATION
         BH    ROLLBACK            BACKWARDS; GO DO IT
*        FALL THROUGH              FORWARDS; GO DO IT
         SPACE 3
*************************************************************
*        THE GENERATED DATE FALLS PRIOR TO THE CURRENT      *
*        DATE. ENTER A LOOP TO ADJUST THE DATE FORWARD IN   *
*        TIME EITHER UNTIL A FUTURE DATE IS ACHIEVED OR     *
*        UNTIL THE DATE OVERFLOWS BACK TO EITHER THE SAME   *
*        DATE OR A PRIOR DATE (IN WHICH CASE THIS SCHEDULED *
*        COMMAND WILL NEVER BE EXECUTED AGAIN).             *
*************************************************************
         SPACE 1
ROLL4WRD MVC   WRKPTIME,WRKNTIME   NEXT IS STILL IN THE PAST. COPY
*                                  IT IN CASE IT TURNS OUT TO BE THE
*                                  MOST RECENT PAST DATE FOR THIS SFR.
         SPACE 1
         LA    R0,1                LOAD AN ARITHMATIC "CARRY" SIGNAL.
*                                  ASSUME "CARRY"
         ICM   R1,3,SFRDY          IS THE DAY SPECIFICALLY DEFINED?
         BNZ   GOTDYF              YES, GO STORE IT
         SR    R0,R0               NO, ASSUME "NO CARRY"
         LH    R1,WRKNDY           GET DAY VALUE
         LA    R1,1(,R1)           ADVANCE A DAY
         CH    R1,=H'31'           OVERFLOW? (NOTE, THE "FINDMINS"
*                                  ROUTINE COMPENSATES FOR SHORTER
*                                  MONTHS)
         BNH   GOTDYF              NO, GO STORE NEW DAY
         BCTR  R0,0                YES, SIGNAL "CARRY"
         LA    R1,1                RESET TO START OF NEXT MONTH
GOTDYF   STH   R1,WRKNDY           STORE NEW DAY VALUE
         SPACE 1
         LTR   R0,R0               WAS THERE A CARRY TO THE MONTHS
*                                  VALUE?
         BZ    VCHKINCR            NO, GO TEST THE NEW DATE
         ICM   R1,3,SFRMO          YES, IS THE MONTH SPECIFICALLY
*                                  ASSIGNED?
         BNZ   GOTMOF              YES, GO STORE IT ("CARRY" IS SET)
         SR    R0,R0               NO, SET "NO CARRY"
         LH    R1,WRKNMO           GET MONTH VALUE
         LA    R1,1(,R1)           INCRIMENT IT
         CH    R1,=H'12'           OVERFLOW?
         BNH   GOTMOF              NO, GO STORE NEW VALUE
         BCTR  R0,0                YES, RESTORE "CARRY" SIGNAL
         LA    R1,1                RESET TO 1ST MONTH OF NEXT YEAR
GOTMOF   STH   R1,WRKNMO           STORE NEW MONTH VALUE
         SPACE 1
         LTR   R0,R0               WAS THERE A CARRY TO THE YEAR VALUE?
         BZ    VCHKINCR            NO, GO TEST THE NEW DATE
         ICM   R1,3,SFRYR          YES, IS THE YEAR SPECIFICALLY
*                                  ASSIGNED?
         BNZ   GOTYRF              YES, GO STORE IT
         LH    R1,WRKNYR           NO, GET OLD YEAR VALUE
         LA    R1,1(,R1)           INCRIMENT IT
GOTYRF   STH   R1,WRKNYR           STORE NEW YEAR VALUE
         SPACE 1
VCHKINCR CLC   WRKPYMD,WRKNYMD     DID THE DATE ADVANCE?
         BL    VCHKSCHD            YES, GO SEE HOW FAR
         OI    SAVDATSC,B'10000000' NO (BUT IT STILL MIGHT DUE TO
*                                  WEEKDAY MODIFICATION). PROBABLY THIS
*                                  SFR IS OBSOLETE. (SAY SO).
         B     CHKWDY              GO CHECK THE WEEKDAY MODIFIER. NOTE,
*                                  "WRKPTIME" IS GOOD; "WRKNTIME" IS
*                                  TRASH.
         SPACE 1
VCHKSCHD CLC   WRKNYMD,TIMETIME    YES, DID THE DATE REACH THE PRESENT
*                                  OR FUTURE?
         BL    ROLL4WRD            NO, LOOP TO TRY AGAIN
         B     CHKWDY              YES, GO EXAMINE WEEKDAY MODIFICATION
         SPACE 3
*************************************************************
*        THE GENERATED DATE FALLS AFTER THE CURRENT DATE.   *
*        ENTER A LOOP TO ADJUST THE DATE BACKWARDS IN TIME  *
*        EITHER UNTIL A PAST DATE IS ACHIEVED OR UNTIL THE  *
*        DATE UNDERFLOWS BACK TO EITHER THE SAME DATE OR A  *
*        MORE FUTURE DATE (IN WHICH CASE THIS SCHEDULED     *
*        COMMAND HAS NEVER YET BEEN EXECUTED).              *
*************************************************************
         SPACE 1
ROLLBACK MVC   WRKNTIME,WRKPTIME   WRKP IS STILL IN THE FUTURE. COPY
*                                  IT IN CASE IT TURNS OUT TO BE THE
*                                  EARLIEST FUTURE DATE FOR THIS SFR.
         SPACE 1
         LA    R0,1                LOAD AN ARITHMATIC "CARRY" SIGNAL.
*                                  ASSUME "CARRY"
         ICM   R1,3,SFRDY          IS THE DAY SPECIFICALLY DEFINED?
         BNZ   GOTDYB              YES, GO STORE IT
         SR    R0,R0               NO, ASSUME "NO CARRY"
         LH    R1,WRKPDY           GET THE DAY VALUE
         BCTR  R1,0                RETREAT A DAY
         LTR   R1,R1               UNDERFLOW?
         BNZ   GOTDYB              NO, GO STORE NEW VALUE
         BCTR  R0,0                YES, SIGNAL "CARRY"
         LA    R1,31               RESET TO END OF PRIOR MONTH (NOTE,
*                                  THE "FINDMINS" ROUTINE COMPENSATES
*                                  FOR SHORTER MONTHS)
GOTDYB   STH   R1,WRKPDY           STORE NEW DAY VALUE
         SPACE 1
         LTR   R0,R0               WAS THERE A CARRY TO THE MONTHS
*                                  VALUE?
         BZ    VCHKDECR            NO, GO TEST THE NEW DATE
         ICM   R1,3,SFRMO          YES, IS THE MONTH SPECIFICALLY
*                                  ASSIGNED?
         BNZ   GOTMOB              YES, GO STORE IT ("CARRY" IS SET)
         SR    R0,R0               NO, SET "NO CARRY"
         LH    R1,WRKPMO           GET MONTH VALUE
         BCTR  R1,0                DECRIMENT IT
         LTR   R1,R1               UNDERFLOW?
         BNZ   GOTMOB              NO, GO STORE NEW VALUE
         BCTR  R0,0                YES, RESTORE "CARRY" SIGNAL
         LA    R1,12               RESET TO LAST MONTH OF PRIOR YEAR
GOTMOB   STH   R1,WRKPMO           STORE NEW MONTH VALUE
         SPACE 1
         LTR   R0,R0               WAS THERE A CARRY TO THE YEAR VALUE?
         BZ    VCHKDECR            NO, GO TEST THE NEW DATE
         ICM   R1,3,SFRYR          YES, IS THE YEAR SPECIFICALLY
*                                  ASSIGNED?
         BNZ   GOTYRB              YES, GO STORE IT
         LH    R1,WRKPYR           NO, GET OLD YEAR VALUE
         BCTR  R1,0                DECRIMENT IT
GOTYRB   STH   R1,WRKPYR           STORE NEW YEAR VALUE
         SPACE 1
VCHKDECR CLC   WRKPYMD,WRKNYMD     DID THE DATE RETREAT?
         BNL   CHKWDY              NO, BUT IT STILL MIGHT DUE TO
*                                  WEEKDAY MODIFICATION. NOTE,
*                                  "WRKNTIME" IS GOOD. "WRKPTIME" IS
*                                  TRASH.
         CLC   WRKPYMD,TIMETIME    YES, DID IT REACH THE PRESENT OR
*                                  PAST?
         BH    ROLLBACK            NO, LOOP TO TRY AGAIN
*        FALL THROUGH              YES, EXAMINE WEEKDAY MODIFICATION
         SPACE 3
*************************************************************
*        PROBABLY VALID BUT CERTAINLY USABLE VALUES FOR     *
*        "WRKPTIME" AND "WRKNTIME" HAVE BEEN DEVELOPED.     *
*                                                           *   7/86MDL
*        IF THE WEEKDAY MODIFICATION OPERAND CONTAINS A     *   7/86MDL
*        MIXED RESULT WHEN TESTED WITH MASK '00C0', THEN    *   7/86MDL
*        THE WEEKDAY VALUE IS AN EXACT MATCH MODIFIER, AND  *   7/86MDL
*        SHOULD BE PROCESSED SEPARATELY FROM THE OTHER      *   7/86MDL
*        POSSIBLE VALUES FOR WEEKDAY.                       *   7/86MDL
*                                                           *   7/86MDL
*        NOW MODIFY EITHER THE PREVIOUS DATE FORWARD OR THE *
*        NEXT DATE BACKWARD ACCORDING TO WHETHER THE        *
*        WEEKDAY MODIFICATION IS FORWARDS OR BACKWARDS. IF  *
*        THE MODIFICATION RESULTS IN THE GENERATION OF THE  *
*        CURRENT DATE, THEN I HAVE A HIT; OTHERWISE I       *
*        DON'T.                                             *
*************************************************************
         SPACE 1
CHKWDY   DS    0H                                               7/86MDL
         TM    SFRWK+1,SFRWKNOT+SFRWKXCT EXACT WEEKDAY MODIFIER?7/86MDL
         BM    CHKWDY10            YEP, CHECK EXACT WEEKDAY OUT 7/86MDL
         SPACE 1                                                7/86MDL
         ICM   R1,3,SFRWK          IS THERE A WEEKDAY MODIFIER?
         BP    WDY4WRD             YES, FORWARDS; GO PROCESS IT
         BM    WDYBACK             YES, BACKWARDS; GO PROCESS IT
         SPACE 1
         CLC   WRKPYMD,TIMETIME    NO, IS THE EXECUTION DATE TODAY?
*                                  (NOTE, IF IT IS, THEN PRECEEDING
*                                  LOGIC FORCES WRKPTIME=WRKNTIME).
         BE    DSCRRET4            YES, ACCEPT THIS SFR; RETURN +4
         B     DSCRRET0            NO, REJECT THIS SFR; RETURN +0
         SPACE 2                                                7/86MDL
CHKWDY10 DS    0H                                               7/86MDL
         CLC   WRKPYMD,TIMETIME    IS THE EXECUTION DATE TODAY? 7/86MDL
         BNE   DSCRRET0            NO. REJECT THIS SFR; RETURN  7/86MDL
         SPACE 1                                                7/86MDL
         LA    R1,TIMETIME         --> CURRENT TIME/DATE        7/86MDL
         BAL   R14,FINDMINS        CNVRT TO MINUTES IN CENTURY  7/86MDL
         BAL   R14,FINDWKDY        CNVRT TO DAY IN WEEK         7/86MDL
         TM    SFRWK+1,SFRWKXCT    WEEKDAY MUST MATCH?          7/86MDL
         BO    CHKWDY20            YES, GO CHECK IT OUT         7/86MDL
*                                  NO, IT MUST NOT MATCH        7/86MDL
         O     R15,=A(SFRWKNOT)    EXTRA BIT INTO DAY IN WEEK   7/86MDL
         CLM   R15,1,SFRWK+1       COMPARE VALUES OF DAY IN WEEK7/86MDL
         BNE   DSCRRET4            NO MATCH, ACCEPT SFR, RET +4 7/86MDL
         B     DSCRRET0            MATCH, REJECT SFR, RETURN +0 7/86MDL
         SPACE 1                                                7/86MDL
CHKWDY20 DS    0H                                               7/86MDL
         O     R15,=A(SFRWKXCT)    EXTRA BIT INTO DAY IN WEEK   7/86MDL
         CLM   R15,1,SFRWK+1       COMPARE VALUES OF DAY IN WEEK7/86MDL
         BE    DSCRRET4            MATCH, ACCEPT SFR, RETURN +4 7/86MDL
         B     DSCRRET0            NO MATCH, REJECT SFR, RET +0 7/86MDL
         SPACE 3
*************************************************************
*        THE WEEKDAY MODIFICATION IS FORWARDS               *
*************************************************************
         SPACE 1
WDY4WRD  LA    R1,WRKPTIME         --> MOST RECENT PRIOR DATE
         BAL   R14,FINDMINS        CNVRT TO MINUTES SINCE SO-CENTURY
         LR    R0,R15              SAVE
         BAL   R14,FINDWKDY        CNVRT TO WEEKDAY ID NUMBER
         SH    R15,SFRWK           DISTANCE FROM THE SCHEDULED
*                                  WEEKDAY. IS THE DATE THAT DAY?
         BZ    WDYFCHK             YES, GO SEE IF THE DATE IS TODAY
         LCR   R15,R15             NO, RESET THE DIRECTION; IS THE
*                                  SCHEDULED WEEKDAY AFTER THE DATE'S
*                                  WEEKDAY?
         BP    WDYFAVNC            YES, SKIP
         LA    R15,7(,R15)         NO, RESET THE DATE'S WEEKDAY TO
*                                  "LAST WEEK"
WDYFAVNC MH    R15,=Y(60*24)       CNVRT THE DISTANCE TO MINUTES
         AR    R15,R0              ADVANCE THE GENERATED DATE
         LA    R1,WRKPTIME         --> CONVERSION SINK
         BAL   R14,MINSTIME        CNVRT MINUTES BACK TO TIMESTAMP
         SPACE 1
WDYFCHK  CLC   WRKPYMD,TIMETIME    IS THE GENERATED DATE TODAY?
         BL    DSCRRET0            NO, REJECT THE SFR; RETURN +0 (IT
*                                  MAY OR MAY NOT BE OBSOLETE. R14 IS
*                                  ALREADY SET).
         L     R14,SAVDATSC        (MAYBE, BUT IT DEFINITELY IS NOT -
         LA    R14,0(,R14)          OBSOLETE. INSURE THAT THE -
         ST    R14,SAVDATSC          "OBSOLETE" FLAG IS CLEAR)
         BH    DSCRRET0            NO, REJECT THE SFR; RETURN +0
         B     WDYFRAME            YES, GO MAKE FINAL TESTS
         SPACE 3
*************************************************************
*        THE WEEKDAY MODIFICATION IS BACKWARDS              *
*************************************************************
         SPACE 1
WDYBACK  LA    R1,WRKNTIME         --> EARLIEST FUTURE DATE
         BAL   R14,FINDMINS        CNVRT TO MINUTES SINCE SO-CENTURY
         LR    R0,R15              SAVE
         BAL   R14,FINDWKDY        CNVRT TO WEEKDAY ID NUMBER
         AH    R15,SFRWK           DISTANCE FROM THE SCHEDULED
*                                  WEEKDAY; IS THE DATE'S WEEKDAY THAT
*                                  DAY?
         BZ    WDYBCHK             YES, GO SEE IF THE DATE IS TODAY
         BP    WDYBRTRT            NO, THE SCHEDULED WEEKDAY FALLS
*                                  EARLIER IN THE WEEK THAN THE DATE'S
*                                  WEEKDAY; PROCEED
         LA    R15,7(,R15)         NO, THE SCHEDULED WEEKDAY FALLS
*                                  LATER IN THE WEEK THAN THE DATE'S
*                                  WEEKDAY. ADJUST THE DATE'S WEEKDAY
*                                  TO THE PRECEEDING WEEK
WDYBRTRT MH    R15,=Y(-60*24)      CNVRT THE DISTANCE TO MINUTES AND
*                                  COMPLEMENT
         AR    R15,R0              ADJUST THE DATE BACK IN TIME
         LA    R1,WRKNTIME         --> CONVERSION SINK
         BAL   R14,MINSTIME        CNVRT DATE BACK TO TIMESTAMP
         SPACE 1
WDYBCHK  CLC   WRKNYMD,TIMETIME    IS THE GENERATED DATE TODAY?
         BNE   DSCRRET0            NO, REJECT THIS SFR
         SPACE 3
*************************************************************
*        THE GENERATED DATE AS MODIFIED BY THE WEEKDAY      *
*        VALUE IS TODAY. BUT THAT IS NOT ENOUGH. IF THE     *
*        SFR'S DATE CONTAINS SPECIFIC VALUES FOR MONTH AND  *
*        YEAR, THEN THE WEEKDAY MODIFICATION MUST NOT       *
*        CHANGE THOSE VALUES.                               *
*************************************************************
         SPACE 1
WDYFRAME SR    R1,R1               CLEAR FOR INSERTS
         ICM   R1,3,SFRYR          IS A SPECIFIC YEAR ASSIGNED?
         BZ    WDYYROK             NO, SKIP
         CH    R1,TIMEYR           YES, CHANGED?
         BNE   DSCRRET0            YES, REJECT THIS SFR
         SPACE 1
WDYYROK  ICM   R1,3,SFRMO          NO, IS A SPECIFIC MONTH ASSIGNED?
         BZ    DSCRRET4            NO, ACCEPT THIS SFR
         CH    R1,TIMEMO           YES, CHANGED?
         BNE   DSCRRET0            YES, REJECT THIS SFR
*        FALL THROUGH              NO, ACCEPT THIS SFR
         SPACE 3
*************************************************************
*        ACCEPT THE SFR. CONSTRUCT THE SCHEDULED TIMESTAMP  *
*        IN WRKPTIME. GET THE SCHEDULED TIME, IN MINUTES,   *
*        INTO R15. RETURN +4 TO THE CALLER.                 *
*************************************************************
         SPACE 1
DSCRRET4 MVC   WRKPYMD,TIMEYMD     GET THE SCHEDULED DATE
         MVC   WRKPHM,SFRHM        APPEND THE SCHEDULED TIME
         SPACE 1
         LA    R1,WRKPTIME         --> TIMESTAMP
         BAL   R14,FINDMINS        CONVERT TO MINUTES IN R15
         SPACE 1
         L     R14,SAVDATSC        RESTORE R14 WITH OBSOLETE=0
         LM    R0,R2,SAVDATSC+8    RESTORE REGISTERS
         DROP  R2                  RELEASE TIMESTAMP BASE
         B     4(,R14)             RETURN +4 TO CALLER
         SPACE 3
*************************************************************
*        REJECT THE SFR. RETURN +0                          *
*************************************************************
         SPACE 1
DSCRRET0 LM    R14,R2,SAVDATSC     RESTORE REGISTERS
         BR    R14                 RETURN +0 TO CALLER
         TITLE 'SCHEDRUN -- FINDTIME/MINSTIME - TODC TO TIMESTAMP CONVE*
               RSION'
*************************************************************
*                                                           *
*        FINDTIME -- CONVERTS A TIME-OF-DAY CLOCK VALUE TO  *
*        A TIMESTAMP OF THE FORM YY/MM/DD/HH/MM.            *
*                                                           *
*        MINSTIME - CONVERTS A TIME VALUE GIVEN IN MINUTES  *
*        (SINCE THE START OF THE CENTURY) TO A TIMESTAMP.   *
*                                                           *
*        INPUTS (FINDTIME):                                 *
*              - R1 POINTS TO A TIMESTAMP OUTPUT AREA WHICH *
*                CONSISTS OF FIVE CONSECUATIVE HALFWORDS.   *
*              - DSAWORK CONTAINS A TOD CLOCK VALUE.        *
*              - R14 POINTS TO THE RETURN ADDRESS.          *
*                                                           *
*        INPUTS (MINSTIME):                                 *
*              - R1 POINTS TO A TIMESTAMP OUTPUT AREA.      *
*              - R14 POINTS TO A RETURN ADDRESS.            *
*              - R15 CONTAINS THE MINUTES VALUE TO BE       *
*                CONVERTED.                                 *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - THE CLOCK VALUE IS CONVERTED AND STORED    *
*                INTO THE AREA POINTED TO BY R1.            *
*              - ALL REGISTERS ARE RESTORED.                *
*                                                           *
*************************************************************
         SPACE 1
         USING TIME,R1             DCL TIME BASE
FINDTIME STM   R14,R0,SAVFTIME     SAVE REGISTERS
         LM    R14,R15,DSAWORK     LOAD TODC VALUE
         SRDL  R14,12              CNVRT TO MICROSECONDS
         D     R14,=F'60000000'    CNVRT TO MINUTES
         B     GOTMINUT            SKIP ALTERNATE ENTRY
         SPACE 3
MINSTIME STM   R14,R0,SAVFTIME     SAVE REGISTERS
GOTMINUT SR    R14,R14
         D     R14,=F'60'          GET +MM, HOURS
         STH   R14,TIMEMN          SAVE +MM
         SR    R14,R14
         D     R14,=F'24'          GET +HH, DAYS
         STH   R14,TIMEHR          SAVE +HH
         SPACE 1
         LA    R15,1(,R15)         PRETEND 1900 WAS A LEAPYEAR
         SR    R14,R14
         D     R14,=A(365*4+1)     GET +DAYS, QUADYEARS
         SLL   R15,2               GET YEARS (ALMOST)
         CH    R14,=H'366'         ANY RESIDUAL YEARS?
         BL    GOTYYDDD            NO, SKIP
         BCTR  R14,0               YES, DECR FOR LEAPDAY
         LR    R0,R15              SAVE QUADYEARS*4
         SRDL  R14,32              SHIFT +DAYS
         D     R14,=F'365'         GET +DAYS, +YEARS
         AR    R15,R0              GET +YEARS
GOTYYDDD LA    R15,1900(,R15)      GET YY
         STH   R15,TIMEYR          SAVE
         SPACE 1
         LA    R14,1(,R14)         CNVRT +DAYS TO 1-ORIGIN
         TM    TIMEYR+1,B'00000011' IN A LEAPYEAR?
         BNZ   NRMLYEAR            NO, PROCEED
         CH    R14,=Y(31+29)       YES, PAST THE LEAPDAY?
         BL    NRMLYEAR            NO, PROCEED
         BH    LEAPYEAR            YES, MUST ADJUST
         LA    R15,2               NO, ON THE LEAP DAY; GET MM
         LA    R14,29              GET DD
         B     GOTMMDD             DONE HERE
LEAPYEAR BCTR  R14,0               ADJUST FOR THE EXTRA (LEAP) DAY
NRMLYEAR LA    R15,MONTHSIZ-2      --> MONTH SIZES
         LR    R0,R15              (SAVE)
MONSIZLP LA    R15,2(,R15)         --> NEXT MONTH SIZE
         SH    R14,0(,R15)         DECR +DAYS; TOO FAR YET?
         BP    MONSIZLP            NO, KEEP LOOPING
         AH    R14,0(,R15)         YES, RESTORE CORRECT DD
         SR    R15,R0              GET MM*2
         SRL   R15,1               GET MM
GOTMMDD  STH   R15,TIMEMO          STORE MM
         STH   R14,TIMEDY          STORE DD
         SPACE 1
         LM    R14,R0,SAVFTIME     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R1                  RELEASE TIME BASE
         TITLE 'SCHEDRUN -- FINDMINS - TIMESTAMP TO MINUTES CONVERSION'
*************************************************************
*                                                           *
*        FINDMINS -- CONVERTS A TIMESTAMP VALUE TO MINUTES  *
*        SINCE THE START OF THE CENTURY.                    *
*                                                           *
*        INPUTS:                                            *
*              - R1 POINTS TO A TIMESTAMP.                  *
*              - R14 POINTS TO THE RETURN ADDRESS.          *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - R15 CONTAINS THE MINUTES VALUE.            *
*              - ALL OTHER REGISTERS ARE RESTORED.          *
*                                                           *
*************************************************************
         SPACE 1
         USING TIME,R1             DCL TIME BASE
FINDMINS STM   R14,R0,SAVFMINS     SAVE REGISTERS
         LH    R15,TIMEYR          GET YY
         SH    R15,=H'1900'        CNVRT TO +YEARS
         SR    R14,R14
         D     R14,=F'4'           CNVRT TO +YEARS, QUADYEARS
         MH    R15,=Y(365*4+1)     CNVRT QUADYEARS TO DAYS
         BCTR  R15,0               ADJUST FOR THE FACT THAT 1900 WAS
*                                  NOT A LEAPYEAR.
         LTR   R14,R14             ANY +YEARS?
         BZ    NORSDUYR            NO, SKIP
         MH    R14,=H'365'         YES, CNVRT TO +DAYS - 1 (LEAPDAY)
         LA    R15,1(R14,R15)      GET +DAYS (INCL LEAPDAY)
NORSDUYR DS    0H                  GOT YY CONVERTED TO DAYS
         SPACE 1
         LH    R14,TIMEMO          GET MM
         AR    R14,R14             CNVRT TO HWORD OFFSET
         LA    R14,MONTHSIZ-2(R14) --> SIZE OF THE MM
         LH    R0,TIMEDY           GET THE DD
         CH    R0,0(,R14)          IS IT TOO LARGE FOR THIS MM?
         BNH   FMDYOK              NO, PROCEED
         LH    R0,0(,R14)          YES, USE MAX DD
         TM    TIMEYR+1,B'00000011' IS THIS A LEAPYEAR?
         BNZ   FMDYOK              NO, GOT DD
         CLI   TIMEMO+1,2          YES, IS THIS FEBRUARY?
         BNE   FMDYOK              NO, GOT DD
         LA    R0,29               YES, (JESUS CHRIST.)
FMDYOK   BCTR  R0,0                CNVRT FROM 1-ORIGIN TO 0-ORIGIN
         AR    R15,R0              ADD DD TO DAYS
         SPACE 1
FMMSZLP  BCTR  R14,0               --> PREVIOUS -
         BCTR  R14,0                MONTH'S SIZE
         AH    R15,0(,R14)         ADD ITS SIZE TO DAYS
         CLI   1(R14),0            BACK PAST JANUARY YET?
         BNE   FMMSZLP             NO, KEEP LOOPING
         TM    TIMEYR+1,B'00000011' YES, IS THIS A LEAP YEAR?
         BNZ   FMNOLPYR            NO, GAT DAYS (FINALLY)
         CLI   TIMEMO+1,2          YES, IS MM PAST FEBRUARY?
         BNH   FMNOLPYR            NO, GOT DAYS
         LA    R15,1(,R15)         YES, ADJUST DAYS
FMNOLPYR DS    0H                  GOT DAYS SINCE START OF CENTURY
         SPACE 1
         MH    R15,=H'24'          CNVRT TO HOURS
         AH    R15,TIMEHR          INCLUDE HH
         MH    R15,=H'60'          CNVRT TO MINUTES
         AH    R15,TIMEMN          INCLUDE MM
         SPACE 1
         L     R14,SAVFMINS        RESTORE REGISTER
         L     R0,SAVFMINS+8       RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         DROP  R1                  RELEASE TIME BASE
         TITLE 'SCHEDRUN -- FINDWKDY - FROM GIVEN MINUTES'
*************************************************************
*                                                           *
*        FINDWKDY -- FINDS THE DAY OF THE WEEK ON WHICH A   *
*        TIME VALUE, GIVEN IN MINUTES, FALLS.               *
*                                                           *
*        INPUTS:                                            *
*              - R14 POINTS TO THE RETURN ADDRESS.          *
*              - R15 CONTAINS THE GIVEN TIME VALUE IN       *
*                MINUTES SINCE THE START OF THE CENTURY.    *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - R15 CONTAINS THE DAY OF THE WEEK.          *
*                (SUNDAY = 1).                              *
*              - ALL OTHER REGISTERS ARE RESTORED.          *
*                                                           *
*************************************************************
         SPACE 1
FINDWKDY ST    R14,SAVFWKDY        SAVE REGISTER
         SR    R14,R14
         D     R14,=A(60*24)       CNVRT MINUTES TO DAYS
         LA    R15,1(,R15)         ADJUST THE ORIGIN
         SR    R14,R14
         D     R14,=F'7'           GET THE WEEKDAY
         LA    R15,1(,R14)         COPY AND CNVRT TO 1-ORIGIN
         L     R14,SAVFWKDY        RESTORE
         BR    R14                 RETURN TO CALLER
         TITLE 'SCHEDRUN -- RCDLOCK - LOCK ONTO A SCHEDULE RECORD FOR U*
               PDATE'
*************************************************************
*                                                           *
*        RCDLOCK -- THIS ROUTINE LOCKS ONTO A SCHEDULE FILE *
*        RECORD SO THAT IT CAN BE UPDATED.                  *
*                                                           *
*        INPUTS:                                            *
*              - R14 POINTS TO A RETURN ADDRESS.            *
*              - SFRKEY CONTAINS THE KEY OF THE RECORD TO   *
*                BE LOCKED ONTO.                            *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - THE DESIRED RECORD HAS BEEN LOCKED ONTO    *
*                AND READ INTO THE SFR BUFFER.              *
*              - ALL REGISTERS ARE RESTORED.                *
*                                                           *
*        EXIT NEXTSFR:                                      *
*              - THE DESIRED RECORD DOES NOT EXIST IN THE   *
*                FILE. IT MAY HAVE BEEN DELETED JUST NOW BY *
*                SOMEONE ELSE.                              *
*              - R14, R15, R0, AND R1 ARE NOT RESTORED.     *
*              - ALL OTHER REGISTERS ARE UNCHANGED.         *
*                                                           *
*************************************************************
         SPACE 1
RCDLOCK  STM   R14,R1,SAVRLOCK     SAVE REGISTERS
         MVC   SAVEKEY,SFRKEY      SAVE THE DESIRED KEY
         SPACE 1
         GSAMCALL READ,OPTIONS=(DIR,UPDATE),MF=(E,GSB)
         LTR   R15,R15             GOT THE RECORD?
         BZ    LOCKDSFR            YES, PROCEED
         CH    R15,=Y(GSAMEKEY)    NO, RNF ERROR?
         #DIE  NE,'GSAM ACCESS ERROR (READ-UPDATE)'
         CLI   GSBVSAM+3,16        MAYBE, CHECK AGAIN
         BE    NEXTSFR             YES, LOOP FOR NEXT RECORD
         #DIE  'GSAM ACCESS ERROR (READ-UPDATE)'
         SPACE 1
LOCKDSFR CLC   SFRKEY,SAVEKEY      SAME RECORD GOTTEN?
         BE    RLOCKRET            YES, RETURN TO CALLER
         GSAMCALL RELEASE,MF=(E,GSB) NO, THE SFR BEING PROCESSED MUST  *
                                   HAVE BEEN DELETED BY SOMEONE ELSE
         B     NEXTSFR             LOOP FOR NEXT RECORD
         SPACE 1
RLOCKRET LM    R14,R1,SAVRLOCK     RESTORE REGISTERS
         BR    R14                 RETURN TO CALLER
         TITLE 'SCHEDRUN -- STATIC DATA AREA'
MASTER   SFR   MF=(L,M)
         SPACE 3
DELAYTIM DC    A(30*100)           30-SECOND INTERVAL
         SPACE 3
         DC    Y(0)
MONTHSIZ DC    Y(31,28,31,30,31,30,31,31,30,31,30,31)
         SPACE 3
         DC    20X'20',X'2020'     NO FORCED SIGNIFICANCE
EDMASKZ  EQU   *
         DC    C' '
         SPACE 3
SCHDPROT DC    Y(SCHDPROL,0)
         DC    C'$TASCHD,T=##.##,''$VS,''''S SCHEDRUN'''''' '
SCHDPROL EQU   *-SCHDPROT
         #TEST SIZE=(SCHDPROL,LE,SCHDCMDL)
         SPACE 3
         PRINT NOGEN
MODLDCB  DCB   DSORG=PS,MACRF=PM,RECFM=VB,LRECL=LOGRCDLN+4,            *
               BLKSIZE=4096,DDNAME=SCHEDLOG
         PRINT ON,GEN,NODATA
         SPACE 1
         OPEN  (*-*,OUTPUT),MF=L
MODLEN   EQU   *-MODLDCB
         SPACE 3
MERRWTOR WTOR  '*** RESCHEDULING OF SCHEDRUN HAS FAILED. REPLY U TO AKN*
               OWLEDGE ***',                                           *
               *-*,L'WREPLY,*-*,                                       *
               ROUTCDE=(1,2,9,10,11),                                  *
               DESC=(2,7),                                             *
               MF=L
MERRWTOL EQU   *-MERRWTOR
         SPACE 3
         DC    Y(LMHEADL+4,0)
LMHEADR  DC    C'ERROR   COMMAND   (SCHEDRUN EXECUTING AT '
LMHNOW   DC    C'MM/DD/YY HH:MM',C' '
LMHON    DC    C'ON '
LMHSYSID DC    XL(L'MYSYSID)'00',C'   LAST IPL WAS '
LMHIPL   DC    C'MM/DD/YY HH:MM',C')'
LMHEADL  EQU   *-LMHEADR
         #TEST SIZE=(LMHEADL,LE,LOGRCDLN)
         SPACE 3
         LTORG ,
         TITLE 'SCHEDRUN -- PASSGARD - SECURITY CONTROL ESTAE'
*************************************************************
*                                                           *
*        PASSGARD -- IF "SCHEDRUN" ABENDS, THEN THIS ESTAE  *
*        ROUTINE TURNS OFF THE "JSCBPASS" FLAG SO AS TO     *
*        CLOSE THE POSSIBILITY OF THE CALLER BEING GIVEN    *
*        "BYPASS PASSWORDS" AUTHORITY.                      *
*                                                           *
*        THIS ESTAE IS IN EFFECT ONLY WHEN NEEDED.          *
*                                                           *
*        INPUTS:                                            *
*              - R15 POINTS TO THE ENTRY LOCATION.          *
*              - R14 POINTS TO A RETURN ADDRESS.            *
*                                                           *
*        RETURN 0(,R14):                                    *
*              - THE "JSCBPASS" FLAG IS TURNED OFF.         *
*              - R15 IS SET TO 0 (SIGNALLING                *
*                "PERCOLATION").                            *
*              - NO OTHER REGISTERS ARE RESTORED.           *
*                                                           *
*************************************************************
         SPACE 1
PASSGARD LR    R12,R15             LOAD LOCAL BASE
         USING PASSGARD,R12        DECLARE IT
         SPACE 1
         L     R2,PSATOLD-PSA      --> MY TCB
         L     R2,TCBJSCB-TCB(,R2) --> MY JSCB
         L     R2,JSCBACT-IEZJSCB(,R2) --> THE ACTIVE JSCB
         MODESET KEY=ZERO          LOAD KEY-ZERO
         NI    JSCBSWT1-IEZJSCB(R2),255-JSCBPASS CLEAR THE FLAG
         SPACE 1
         SR    R15,R15             LOAD THE RETURN CODE
         BR    R14                 RETURN TO THE RTM
         DROP  ,                   RELEASE ALL BASES
         SPACE 3
         END   SCHEDRUN
