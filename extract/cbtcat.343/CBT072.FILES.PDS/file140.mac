*          DATA SET CBT276     AT LEVEL 001 AS OF 02/25/75
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
       MACRO
       DISCLAIM
       EJECT
*********************************************************************
*                                                                    *
*                      D I S C L A I M E R                           *
*                                                                    *
*                                                                    *
*   THE PROGRAMS HAVE BEEN USED SUCCESSFULLY BY CBT AND TO THE BEST  *
*   OF OUR KNOWLEDGE THE SYSTEM IS OPERATIONAL, HOWEVER NO WARRANTY  *
*   IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND  *
*   NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR  *
*   INDIRECTLY  CAUSED BY THE USE OF THE PROGRAMS.  IT IS THE USERS  *
*   RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL  *
*   SUPPLIED.                                                        *
*                                                                    *
*   CBT DOES NOT GUARANTEE TO KEEP ANY MATERIAL PROVIDED UP TO DATE  *
*   NOR DOES IT GUARANTEE TO PROVIDE ANY CORRECTIONS OR  EXTENSIONS  *
*   DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE  *
*   FUTURE BY CBT ITSELF.                                            *
*                                                                    *
*                                                                    *
*                                                                    *
*********************************************************************
       EJECT
       MEND
*          DATA SET CBT383     AT LEVEL 001 AS OF 05/01/77
*          DATA SET TEC730     AT LEVEL 004 AS OF 04/22/77
*
* THIS PROGRAM WILL PROCESS THE DATA IN FILE XXX OF THE MVSMODS TAPE
*
* THE JCL REQUIRED TO RUN THIS PROGRAM IS.
*
* //STEP01     EXEC    PGM=XXXXXXXX,REGION=192K
* //SORTLIB    DD      DSN=SYS1.SORTLIB,DISP=SHR
* //SORTIN     DD      FILE XXX FROM THE MVSMODS TAPE
* //SORTOUT    DD      DSN=&TEMP,UNIT=SYSDA,SPACE=(CYL,(2,2)),
* // SPACE=(CYL,(2,2)),DCB=(RECFM=FB,LRECL=80,BLKSIZE=800,BUFNO=1)
* //SORTWK01   DD      UNIT=SYSDA,SPACE=(CYL,(1,1))
* //SORTWK02   DD      UNIT=SYSDA,SPACE=(CYL,(1,1))
* //SORTWK03   DD      UNIT=SYSDA,SPACE=(CYL,(1,1))
* //SORTWK04   DD      UNIT=SYSDA,SPACE=(CYL,(1,1))
* //PRNTFILE   DD      DSN=OUTPUT,UNIT=SYSDA,DISP=(NEW,KEEP),
* //           DCB=(LRECL=80,BLKSIZE=800,RECFM=FBA,BUFNO=1),
* //           SPACE=(CYL,(1,1))
* //SYSOUT     DD      SYSOUT=C
* //CNTLCARD   DD      *
* MVS 3.7 7612
TEC730   SAVEALL REG=12
         BAL   R8,GETCTL
SORT     EQU   *                      SET UP SORT
         LA    R1,SORTPARM            PASS ADDRESS OF SORT PARMS
         LINK  EP=SORT                LINK TO SORT
         LTR   R15,R15                CHK IF SUCCESSFUL SORT
         BNZ   SORTERR                BRANCH IF NOT
         OPEN  (SORTDCB,(INPUT))
         B     WRITITLE
GETREC   EQU   *                      READ A RECORD
         GET   SORTDCB
         LA    R6,0(R6,R1)
         LA    R7,0(R7,R1)
         MVC   OUTPUT+1(8),0(R6)      SET UP FIRST COLUMN ENTRY
         MVC   OUTPUT+12(8),0(R7)     SET UP SECOND COLUMN ENTRY
         MVC   OUTPUT+23(44),22(R1)   SET UP DATASET NAME ENTRY
         BAL   R8,WRITE               WRITE CURRENT RECORD
         BCT   R4,GETREC              LOOP UNTILL FULL PAGE
WRITITLE EQU   *
         MVC   OUTPUT,TITLE           SET UP CURRENT TITLE
         AP    PAGE#,=P'1'            ADD 1 TO PAGE COUNTER
         ED    PAGENUM,PAGE#          PUT PAGE NUMBER IN HEADER
         BAL   R8,WRITE               WRITE TITLE
         MVC   OUTPUT,HEADER          SET UP THE COLUMN HEADERS
         BAL   R8,WRITE               WRITE COLUMN HEADERS
         MVI   OUTPUT,C' '            CLEAR OUTPUT LINE
         MVC   OUTPUT+1(79),OUTPUT
         BAL   R8,WRITE               SPACE BETWEEN BODY & HEADERS
         L     R4,LINECNT             SET UP PAGE LINE COUNT
         B     GETREC
         EJECT
******************************************************************
*******      O P E N   A N D   R E A D   R O U T I N E S   *******
******************************************************************
WRITE    EQU   *                      WRITE A RECORD
         LM    R6,R7,FIELDPL          GET FIELD DISPLACEMENTS
         PUT   PRINTDCB,OUTPUT
         BR    R8
GETCTL   EQU   *
         OPEN  (PRINTDCB,(OUTPUT),CNTLDCB,(INPUT))
         GET   CNTLDCB                GET CONTROL CARD INFO
         MVC   PTFLEVEL,0(R1)         PUT IT INTO TITLE RECORD
         CLOSE CNTLDCB
         SLR   R3,R3                  SET UP EOF INDEX DPL
         LM    R6,R7,FIELDPL          GET FIELD DISPLACEMENTS
         BR    R8
         EJECT
******************************************************************
*******     E N D    O F    F I L E    R O U T I N E S     *******
******************************************************************
SORTEOJ  EQU   *
         CLOSE SORTDCB
         B     *+4(R3)                BRANCH TO CURRENT EOF ROUTINE
         B     SETUP2                 AFTER FIRST EOF
         B     SETUP3                 AFTER SECOND EOF
         CLOSE PRINTDCB
         ENDALL
SETUP2   EQU   *
         MVC   TITLE1+6(6),=C'      '
         MVC   TITLE1(6),=C'MODULE'   SET UP SECOND TITLE
         MVC   SORTBEGN,SORT2         SET UP SORT 2 PARMS
         ZAP   PAGE#,=P'0'            ZERO PAGE COUNTER
         LA    R3,4(R3)               INCREMENT FOR NEXT EOF RTN
         B     SORT                   GO TO SORT ROUTINE
SETUP3   EQU   *
         MVC   TITLE1(6),=C'CSECT '   SET UP THIRD TITLE
         MVC   HEADERA1,=C'CSECT '    SET UP THIRD HEADERS
         MVC   HEADERB1,=C'MODULE'
         MVC   SORTBEGN,SORT3         SET UP SORT 3 PARMS
         LA    R6,0                   DISPLACEMENT OF CSECT NAME
         LA    R7,11                  DISPLACEMENT OF MODULE NAME
         STM   R6,R7,FIELDPL          SAVE NEW DISPLACEMENTS
         B     SETUP3-14
SORTERR  EQU   *
         ABEND 801,DUMP
         EJECT
******************************************************************
*******          D A T A    C O N S T A N T S              *******
******************************************************************
OUTPUT   DS    0CL80                  OUPUT RECORD
         DC    CL74' '
PAGENUM  DC    CL4' '                 EDIT CURRENT PAGE NUMBER
         DC    CL2' '
TITLE    DS    0CL80                  CURRENT TITLE RECORD
TITLECC  DC    C'1'                   DOUBLE SPACE
         DC    CL15' '                FILLER
         DC    CL12'IN ORDER BY'      COMMON CONSTANT
TITLE1   DC    CL12'LOAD LIBRARY'     SORT ORDER
         DC    CL5' '                 FILLER
PTFLEVEL DC    CL15' '                SUPPLIED BY CTL CARD
         DC    CL10' '                FILLER
         DC    C'PAGE'
         DC    X'40202120'            EDIT MASK FOR PAGE NUMBER
         DC    CL2' '                 END OF TITLE RECORD
HEADER   DS    0CL80                  CURRENT COLUMN HEADER RECORD
HEADERCC DC    C'0'                   DOUBLE SPACE THE HEADER
HEADERA1 DC    CL6'MODULE'            COLUMN ONE HEADER
         DC    CL6' '                 FILLER
HEADERB1 DC    CL6'CSECT'             COLUMN TWO HEADER
         DC    CL6' '                 FILLER
HEADERC1 DC    CL8'LIBRARY'           COLUMN THREE HEADER
         DC    CL47' '
PAGE#    DC    PL2'0'                 PAGE COUNTER
**********************************************************************
*******      A D D   C O N S T A N T S   A B O V E             *******
**********************************************************************
SORT2    DC    C' SORT FIELDS=(12,8,CH,A,1,8,CH,A,23,14,CH,A)'
SORT3    DC    C' SORT FIELDS=(1,8,CH,A,12,8,CH,A,23,14,CH,A)'
LINECNT  DC    F'52'                  NUMBER OF LINES PER PAGE
FIELDPL  DC    F'11',F'0'
         CNOP  0,8
SORTPARM DC    X'80',AL3(PARMLIST)    SET UP SORT PARMS
         DC    H'0'                   FILLER
PARMLIST DC    X'001C'
         DC    A(SORTBEGN)
         DC    A(SORTEND)
         DC    A(RECBEGN)
         DC    A(RECEND)
         DC    A(0),A(0)
         DC    X'FF',CL3' PC'
LISTEND  EQU   *
SORTBEGN DC    C' SORT FIELDS=(23,14,CH,A,12,8,CH,A,1,8,CH,A)'
SORTEND  DC    C' '
RECBEGN  DC    C' RECORD LENGTH=80,TYPE=F'
RECEND   DC    C' '
         LTORG
         EJECT
**********************************************************************
*******           D C B    I N F O R M A T I O N               *******
**********************************************************************
SORTDCB  DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=(GL),EODAD=SORTEOJ
CNTLDCB  DCB   DDNAME=CNTLCARD,DSORG=PS,MACRF=(GL),EODAD=SORTERR
PRINTDCB DCB   DDNAME=PRNTFILE,DSORG=PS,MACRF=(PM)
         END
