//SMP0001  JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00001) .
 APPLY S (SM00001) FORCE.
 ACCEPT S (SM00001) .
//SMPPTFIN DD  *
++ PTF (SM00001).
++ VER (Z037) PRE(UZ80700).
++ ZAP (ILRSLOTC) DISTLIB(AOSC5) .
 NAME ILRSLOTC
***   THIS ZAP WILL CHANGE THE VALUE OF THE CONSTANT THAT IS USED
***   TO CALCULATE THE RESERVE ADDRESS SPACE FOR EACH USER
***   ILRSLOTC IS FOR BATCH ADRESS SPACE SEE PG 236 INIT AND TUNING
 REP 0000 00000018
 NAME ILRSLOTV
 REP 0000 00000018

//SMP00002 JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC SMPPUT
//SMPCNTL DD *
 RECEIVE S (SM00002) .
  APPLY  S (SM00002) .
 ACCEPT S (SM00002) .
//SMPPTFIN DD  *
++PTF (SM00002) .
++VER (Z037) .
++ZAP (IEE20110) .
 NAME IEE20110
*  CHANGE DISPLAY UNITS DEFAULT FROM 100 TO 1
 VER 018A 9264
 REP 018A 9201

//SMP0003  JOB (9999,T009),TECZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE .
 APPLY S (SM00003) .
 ACCEPT S (SM00003) .
//SMPPTFIN DD *
++PTF (SM00003) .
++ VER (Z037) .
++ZAP (IEHDPASS) .
  NAME IEHDPASS
* ZAP TO ELIMINATE NEED FOR PASSWORD INFORMATION TO DUMP OR RESTORE
 VER 0254 4790B2E6
 REP 0254 47F0B2E6

//SMP004  JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//S1  EXEC  SMP
 UCLIN .
 DEL PTF (SM00004) .
 ENDUCL .
//S1  EXEC  SMP,LIB=ACDS
 UCLIN .
 DEL PTF (SM00004) .
 ENDUCL .
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP004NW
//STEP02   EXEC ASMBLR,SO=1
//STEP01   EXEC SMP
 RECEIVE S (SM00004).
   APPLY S (SM00004).
//SMPPTFIN DD *
++PTF (SM00004).
++MOD (IEFACTRT).
// DD DSN=&LOADSET,DISP=(OLD,DELETE),UNIT=SYSDA

//SMP00006 JOB (9999,T009),'TECZZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 DEL PTF (SM00006) .
 ADD PTF (SM00006) APPL ACPT MOD(AMDSADMP) DATE(76136) .
 ENDUCL .
//STEP01   EXEC ASMBLR,SO=1,OPT=DECK
//COM.SYSLIB   DD   DSN=SYS1.AMACLIB,DISP=SHR
MVSDUMP  AMDSADMP TYPE=HI,IPL=D3330,VOLSER=SYSLIB,ULABEL=NOPURGE,      X
               CONSOLE=(014,3277),SYSUT=SYSDA,OUTPUT=T3B4
         END
//STEP01   EXEC ASMBLR,OPT=DECK,SO=1
//COM.SYSLIB   DD  DSN=SYS1.AMACLIB,DISP=SHR
         CSECT
         AMDSADM2   TYPE2=HI,CONTYPE=3277,CONADDR=014,                 X
               OUTPUT2=T3B4,IPL2=D3330
         END
//LDMKER EXEC PGM=AMDSALDR,COND=(1,LE),
// PARM='IPL2=D,TYPE2=HI'
//SYSPRINT DD SYSOUT=1
//SYSUT1 DD DSN=&LOADSET,DISP=(OLD,DELETE)
//SYSUT2 DD DSN=SYS1.LINKLIB,DISP=SHR
//SYSUT3 DD DSN=&REALDUMP,DISP=(,PASS),UNIT=SYSDA,
// SPACE=(TRK,(5,1))
//SYSUT4 DD UNIT=DASD,DISP=(,CATLG),
// VOL=SER=DLIB01,DSN=SYS1.PAGEDUMP,
// SPACE=(6144,(45),,CONTIG),LABEL=EXPDT=99366
//DASDR EXEC PGM=IEHDASDR,COND=(1,LE)
//SYSPRINT DD SYSOUT=1
//IPLDEV DD DISP=OLD,UNIT=DASD,VOL=SER=DLIB01
//INPUT DD DSN=&REALDUMP,DISP=(OLD,DELETE)
//SYSIN DD *
          PUTIPL   FROMDD=INPUT,TODD=IPLDEV,PURGE=NO

//SMP00007 JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC PAN,SO=1,LIB1=SYS2
++WRITE WORK,SMP007
//STEP02   EXEC ASMBLR,OPT='DECK',SO=1
//COM.SYSPUNCH DD  DSN=SMP.SMP007.DATA,DISP=(,CATLG),UNIT=SYSDA,
//  DCB=(LRECL=80,BLKSIZE=1680,RECFM=FB),SPACE=(CYL,(4,2))
//COM.SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//             DD  DSN=MVS.PCFMACLB,DISP=SHR
//STEP01   EXEC SMP
 UCLIN .
 ADD PTF (SM00007) APPL DATE(76140)
 MOD(IKJEFT01,IKJEFT02,IKJSCAN,IEFW21SD,PCFTBLS,PCFAUTH,PCFSMF) .
 ENDUCL .
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(3,2))
//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(3,2))
//TAPE     DD  UNIT=TAPE,LABEL=(,NL),DSN=A5798.BBJ,
//             VOL=SER=PCF,DISP=OLD
//DISK     DD  UNIT=DASD,VOL=SER=DLIB01,DISP=(,CATLG),
//             DSN=MVS.PCFMACLB,SPACE=(CYL,(2,1,14)),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=1680)
 COPY OUTDD=DISK,INDD=TAPE
//STEP02   EXEC LISTPDS,V1=DLIB01,LIB='MVS.PCFMACLB'
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD  SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))
//APROCLIB DD  DSN=SYS1.APROCLIB,DISP=SHR
//PROCLIB DD  DSN=SYS1.PROCLIB,DISP=SHR
 COPY INDD=APROCLIB,OUTDD=PROCLIB
 S M=((ASMFCL,,R))
 S M=((LKED,,R))

//SMP00008 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 ADD PTF (SM00008) APPL ACPT MOD(IEHUCAT) DATE(76136) .
 ENDUCL .
//STEP01   EXEC TESTLINK,LIB='SYS2.LINKLIB',OPT=',DC,NCAL',SO=1
//LKED.SYSLIN  DD  *
 INCLUDE ASAMPLIB(IEHSETUP,IEHNLYZE,IEHPRINT)
 ENTRY IEHSETUP
 NAME IEHUCAT(R)
 INCLUDE ASAMPLIB(IEHMSG)
 NAME IEHMSG(R)
//ASAMPLIB DD  DSN=SYS1.ASAMPLIB,DISP=SHR

//SMP00009 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 ADD PTF (SM00009) APPL ACPT MOD(LISTCVOL) DATE(76136) .
 ENDUCL .
//STEP01   EXEC PGM=IEWL,PARM='LET,DC'
//SYSPRINT DD  SYSOUT=1
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSLMOD  DD  DSN=SYS1.LINKLIB,DISP=SHR
//SYSLIN   DD  DSN=SYS1.SAMPLIB(LISTCVOL),DISP=SHR
//STEP02   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))
//LINKLIB1 DD  DSN=SYS1.LINKLIB,DISP=SHR
//LINKLIB2 DD  DSN=SYS2.LINKLIB,DISP=SHR
 COPY INDD=LINKLIB1,OUTDD=LINKLIB2
 S M=((LISTCVOL,,R))

//SMP010  JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMPPUT
//SMPCNTL  DD   *
 UCLIN .
 DEL PTF (SM00010) .
 ENDUCL .
//STEP01   EXEC SMPPUTA
//SMPCNTL  DD   *
 UCLIN .
 DEL PTF (SM00010) .
 ENDUCL .
//STEP01   EXEC PAN,SO=1,LIB1=SYS2
++WRITE WORK,SMP010
//STEP02   EXEC ASMBLRH,SO=1
//STEP01   EXEC SMPPUT
//SMPCNTL  DD  *
 RECEIVE S (SM00010).
   APPLY S (SM00010).
 ACCEPT S (SM00010).
//SMPPTFIN DD *
++PTF (SM00010).
++MOD (IKJEFF10).
// DD DSN=&LOADSET,DISP=(OLD,DELETE),UNIT=SYSDA

//SMP00011 JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMPPUT
//SMPCNTL  DD   *
 UCLIN .
 ADD PTF (SM00011) APPL DATE(76264) MOD(IGG019WB) .
 ENDUCL .
//SMP011   JOB (9999,T009),BBDJP,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1,LIB1=SYS2
++WRITE WORK,SMP011
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC LINK,SO=1,OPT=',RENT'
//LKED.SYSLMOD DD   DSN=SYS1.LPALIB,DISP=SHR
 ALIAS SMP011
 NAME IGG019WB

//SMP0012  JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00012).
   APPLY S (SM00012).
 ACCEPT S (SM00012) .
//SMPPTFIN DD  *
++ PTF (SM00012).
++ VER (Z037) .
++ ZAP (IKJEBELE) .
 NAME  IKJEBELE
*** THIS ZAP WILL ADD THE AT SIGN '@' CHARACTER AS A TAB FOR 3270
*** THIS ZAP CONVERTS THE 2741 TAB CHARACTER OF X'05' TO AN AT SIGN '@'
 VER 06DA 9240
 VER 085A 7C7D
 REP 06DA 927C
 REP 085A 057D

//SMP0013  JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 ACCEPT S (SM00013) .
 RECEIVE S (SM00013) .
 APPLY   S (SM00013) FORCE.
//SMPPTFIN  DD  *
++ PTF     (SM00013) .
++ VER     (Z037) PRE(UZ80400,UZ80500,UZ80700).
++ ZAP     (IECIOSAM) .
*** COMMENT
*** IOS CHANNEL ROTATE ZAP  BASE 3.7 + SU'S 4,5,7
   NAME     IEANUC01 IECIOSCN
 VER 046E 58A0C010               L WRKA,LCHTCH(AT ITCH010-1)
 VER 1572 00000000,00000000,00000000,00000000,00000000,00000000
 REP 046E 47F08574               BR TO PATCH AT 1570
 REP 1572 58A0C010               L WRKA,LCHTCH
 REP 1576 9501C014               CLI LCHCHCNT,X'01'
 REP 157A 4780858E               BE BYPASS AT 158C
 REP 157E 4860A000               LH WRK6,ZERO
 REP 1582 D201A000,A002          MVC 0(2,TCHE),2(TCHE)
 REP 1588 4060A002               STH WRK6,2(TCHE)
 REP 158C 47F05472               BYPASS B ITCH010-8

//SMP0014  JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00014) .
   APPLY S (SM00014).
  ACCEPT S (SM00014).
//SMPPTFIN DD *
++PTF (SM00014).
++ZAP (IEBPPCH1).
 NAME IEBPPCH1
*  PREVENT THE SORTING OF MEMBER TTRS PRIOR TO
*  OUTPUTTING THE MEMBERS. THIS WILL ALLOW THE
*  PDS LIBRARIES TO BE PRINTED IN ALPHABETICAL ORDER.
 VER 0CEE 47809D26
 REP 0CEE 47F09D26

//SMP00018 JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMPPUT
//SMPCNTL  DD  *
 UCLIN .
 DEL PTF (SM00018) .
 ADD PTF (SM00018) APPL ACPT DATE(76254)
 MOD(UCS1HNB,UCS2HNB,FCB26,FCB28) .
 ENDUCL .
//STEP02   EXEC TESTLINK,LIB='SYS1.IMAGELIB',SO=1,
//       OPT=',AC=1,OL,RENT,REFR,NCAL'
//LKED.SYSLIN  DD *
 INCLUDE IMAGELIB(UCS1PCHN)
 NAME UCS1HNB(R)
//IMAGELIB     DD  DSN=SYS1.IMAGELIB,DISP=SHR
//STEP03    EXEC  PTFZAP,LIB='SYS1.IMAGELIB',V1=SYSLIB,SO=1
 NAME UCS1HNB
******  TO CHANGE HNB TRAIN TO INCLUDE '#@'
***** THE BASE TRAIN IS A PCHN
  VER 2E  6B60
  VER A6  6B60
  REP 2E  7B7C
  REP A6  7B7C
//STEP01 EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=A
//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(2,2))
//MVSYSB DD UNIT=DASD,VOL=SER=MVSYSB,DISP=OLD,DSN=SYS1.IMAGELIB
//SYSLIB DD UNIT=DASD,VOL=SER=SYSLIB,DISP=OLD,DSN=SYS1.IMAGELIB
 COPY INDD=MVSYSB,OUTDD=SYSLIB
 S M=((UCS1HNB,,R))
//TECJOB JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=J
//STEP01   EXEC ASMBLR
FCB28    CSECT
         DC    X'80'          DEFAULT IMAGE FOR SHORT STOCK FORM
         DC    AL1(69)       LENGTH - INCLUDES INDEX BYTE
         DC    X'81'         INDEX BYTE
         DC    X'11'         8 LINES PER INCH  LINE 1 CHANNEL 1
         DC    XL5'0'        LINES  2 THRU  6
         DC    X'02'         LINE  7 CHANNEL   2
         DC    XL5'0'        LINES  8 THRU 12
         DC    X'03'         LINE 13 CHANNEL   3
         DC    XL5'0'        LINES 14 THRU 18
         DC    X'04'         LINE 19 CHANNEL   4
         DC    XL5'0'        LINES 20 THRU 24
         DC    X'05'         LINE 25 CHANNEL   5
         DC    XL5'0'        LINES 26 THRU 30
         DC    X'06'         LINE 31 CHANNEL   6
         DC    XL5'0'        LINES 32 THRU 36
         DC    X'07'         LINE 37 CHANNEL   7
         DC    XL5'0'        LINES 38 THRU 42
         DC    X'08'         LINE 43 CHANNEL   8
         DC    XL5'0'        LINES 44 THRU 48
         DC    X'09'         LINE 49 CHANNEL   9
         DC    XL5'0'        LINES 50 THRU 54
         DC    X'0A'         LINE 55 CHANNEL  10
         DC    XL5'0'        LINES 56 THRU 60
         DC    X'0B'         LINE 61 CHANNEL  11
         DC    XL6'0'        LINES 62 THRU 67
         DC    X'1C'         LINE 68 CHANNEL  12
         END
//STEP02   EXEC TESTLINK,LIB='SYS1.IMAGELIB',OPT=',RENT,REUS',
// NAME=FCB28
//STEP01   EXEC ASMBLR
FCB26    CSECT
         DC    X'80'         DEFAULT IMAGE FOR 11-INCH FORMS
         DC    AL1(67)       LENGTH OF FORM
         DC    X'81'         INDEX BYTE
         DC    X'01'         6 LINES PER INCH   LINE 1 CHANNEL 1
         DC    XL5'0'        LINES  2 THRU  6
         DC    X'02'         LINE  7 CHANNEL   2
         DC    XL5'0'        LINES  8 THRU 12
         DC    X'03'         LINE 13 CHANNEL   3
         DC    XL5'0'        LINES 14 THRU 18
         DC    X'04'         LINE 19 CHANNEL   4
         DC    XL5'0'        LINES 20 THRU 24
         DC    X'05'         LINE 25 CHANNEL   5
         DC    XL5'0'        LINES 26 THRU 30
         DC    X'06'         LINE 31 CHANNEL   6
         DC    XL5'0'        LINES 32 THRU 36
         DC    X'07'         LINE 37 CHANNEL   7
         DC    XL5'0'        LINES 38 THRU 42
         DC    X'08'         LINE 43 CHANNEL   8
         DC    XL5'0'        LINES 44 THRU 48
         DC    X'09'         LINE 49 CHANNEL   9
         DC    XL5'0'        LINES 50 THRU 54
         DC    X'0A'         LINE 55 CHANNEL  10
         DC    XL5'0'        LINES 56 THRU 60
         DC    X'0B'         LINE 61 CHANNEL  11
         DC    XL4'0'        LINES 62 THRU 65
         DC    X'1C'         LINE 66 CHANNEL  12
         END
//STEP02   EXEC TESTLINK,LIB='SYS1.IMAGELIB',OPT=',RENT,REUS',
// NAME=FCB26

//SMP00020 JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN.
 ADD PTF (SM00020) APPL ACPT DATE(76139) MOD(SMPXREF SMPXREF1) .
 ENDUCL.
//STEP01   EXEC MVSMODS,FILE=18
//STEP01   EXEC PAN,SO=1
++ADD SMP020A,PL/I,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC MVSMODS,FILE=20
//STEP01   EXEC PAN,SO=1
++ADD SMP020B,ALC,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC MVSMODS,FILE=45
//STEP01   EXEC PAN,SO=1
++ADD SMP020Z,DATA,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC MVSMODS,FILE=46
//STEP01   EXEC PAN,SO=1
++ADD SMP020C,PL/I,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//SMP020A  JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP020A
//STEP02   EXEC PL1,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1,NAME=SMP020A,CC=8
//SMP020B  JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP020B
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1,NAME=SMP020B
//SMP020C  JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP020C
//STEP02   EXEC PL1,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1,NAME=SMP020C
//SMP020D  JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP020D
//STEP02   EXEC PL1,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1,NAME=SMP020D
//SYSCBTCP JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))
//SMP00021 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00021) .
 APPLY S (SM00021) .
 ACCEPT S (SM00021) .
//SMPPTFIN DD *
++PTF (SM00021) .
++ZAP (MSTRJCL) .
 NAME MSTRJCL
*** IT ALLOWS JES2 TO BE STARTED BY A COMMND IN PARMLIB
*** THIS ZAP WILL PREVENT JES2 FROM STARTING AUTOMATICALLY
 VER 000320 6161 40E2 E3C1 D9E3 40D1 C5E2 F240
 REP 0320 61615CE2
 DUMPT MSTRJCL ALL

//SMP00023 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01  EXEC  SMP
 RECEIVE .
 APPLY S (SM00023) .
 ACCEPT S (SM00023) .
//SMPPTFIN DD  *
++ PTF (SM00023) .
++ VER (Z037) .
++ ZAP (IEECVETC) .
 EXPAND IEECVETC(72)  X'3A0' TO X'3E8'
 NAME IEECVETC
*     IGC0007B IEECVETC     LEVEL = OS/VS2 RELEASE 2.0 FICHE.
 VER 01D4 96E09122         OI  DCMIOCM2,DCMBLENT+DCMBLWRL+DCMBLWRR
 VER 03A0 00000000 KSPATCH DC XL72'00'
 REP 01D4 47F0C39E         B  KSPATCH
 REP 03A0 96E09122 KSPATCH OI DCMIOCM2,DCMBLENT+DCMBLWRL+DCMBLWRR
 REP 03A4 58F09040         L  R15,DCMAENTR
 REP 03A8 D227F000C3BE     MVC 0(L'KSCMD,R15),KSCMD
 REP 03AE 41F0F002         LA  R15,2(,R15)
 REP 03B2 50F09054         ST  R15,DCMADOPN
 REP 03B6 58F09160         L   XFBRANCH,DCMNOPT1
 REP 03BA 58109050         L   X1PARM,DCMCXSVE
 REP 03BE 07FF             BR  XFBRANCH
*            KSCMD   DC  CL40'K S,CON=N,SEG=19,RNUM=19,RTME=01,DEL=RD'
 REP 03C0 D240E2        K S
 REP 03C3 6BC3D6D57E    ,CON=
 REP 03C8 D5            N
 REP 03C9 6BE2C5C77E    ,SEG=
 REP 03CE F1F9          19
 REP 03D0 6BD9D5E4D47E  ,RNUM=
 REP 03D6 F1F9          19
 REP 03D8 6BD9E3D4C57E  ,RTME=
 REP 03DE F0F1          01
 REP 03E0 6BC4C5D37E    DEL=
 REP 03E5 D9C4          RD
 REP 03E7 40            (BLANK)
 IDRDATA SM00023

//SMP00024 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00024) .
 APPLY S (SM00024)  .
  ACCEPT S (SM00024) .
//SMPPTFIN DD  *
++ PTF (SM00024) .
++VER (Z037) .
++ ZAP (IGC0002F) .
 NAME IGC0002F
*** ZAP TO ALLOW BLDG,BLDX,AND DLTX TO BE HONORED FOR OS CVOLS...
*** PROPER EXECUTION OF THESE FUNCTIONS REQUIRES A STEPLIB TO
*** A SVS VERSION OF THE IEHPROGM MODULE.
VER 03B6 D203C0F8C280,D403C0F8BC9E
VER 03C2 D503C0F8BCA9,4770B3C6,D200C0F8C280
VER 03D2 D400C0F8BCA7,D500C0F8BCA9,4780B3C6
VER 0CC2 327B
VER 0CF0 00000000,00000000,00000000,00000000
VER 0D00 00000000,00000000,00000000,00000000
VER 0D10 00000000,00000000,00000000,00000000,00000000
REP 03B6 58E0C280,54E0BC9E,4770B3C6,9108C280,4710B3BE,9164C281
 REP 03CE 4780B3C6,45E0B5D6,9200A012,9604A002,47F0BCCC
REP 0CC2 321B
REP 0CF0 41E0C2BC,41A0E00A,954BE000,4780B408,9540E000,4770BCF0
REP 0D08 924BE000,92E7E001,47F0B408,41E0E001,15EA,4740BCD4,47F0B408
//STEP01     EXEC SMP
 UCLIN .
 DEL PTF (SM00024) .
 ENDUCL .
//STEP01     EXEC SMP,LIB=ACDS
 UCLIN .
 DEL PTF (SM00024) .
 ENDUCL .

//SMP025  JOB (9999,T009),TECHZASM,CLASS=1,MSGCLASS=1
//S1   EXEC  PAN,SO=1,LIB1=SYS2
++WRITE WORK,SMP025
//S1  EXEC  ASMBLRH,SO=1
//COM.SYSPRINT DD DUMMY
//COM.SYSLIB DD DSN=SYS1.PVTMACS,DISP=SHR
//  DD  DSN=SYS1.MACLIB,DISP=SHR
//  DD  DSN=HNB.MACLIB,DISP=SHR
//  DD  DSN=SYS1.AMODGEN,DISP=SHR
//S2 EXEC LINK,SO=1,OPT=',RENT'
//LKED.SYSLMOD DD DSN=SYS1.SVCLIB(IEFUJV),DISP=SHR
//LKED.SYSLMOD DD DSN=SYS1.LPALIB(IEFUJV),DISP=SHR

//SMP00025  JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1
//STEP01  EXEC PGM=IMASPZAP
//SYSPRINT DD SYSOUT=1
//SYSLIB DD DSN=SYS2.LINKLIB,DISP=SHR
//SYSIN DD *
 NAME SMP025TA SMP025TA
 REP 0000 00
 REP 0000 FF

//SMP00025  JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1
//STEP01  EXEC  PAN,SO=1
++WRITE WORK,SMP025LS
//STEP02  EXEC  ASMBLR,OPT='NODECK',SO=1
//STEP03 EXEC TESTLINK,SO=1,NAME=SMP025LS,LIB='SYS2.LINKLIB'

//TECDUMP JOB (9999,T009),TECZZASM,CLASS=1,MSGCLASS=1
//S1  EXEC  PGM=IEBGENER
//SYSPRINT DD SYSOUT=1
//SYSIN DD DUMMY
//SYSUT1 DD DSN=TEC.SNAP,UNIT=DASD,VOL=SER=3330A1,
//  DISP=(OLD,DELETE,DELETE)
//SYSUT2  DD  SYSOUT=1

//SMP00025 JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//S1 EXEC SMP
 RECEIVE S (SM00025) .
 APPLY S (SM00025) .
//SMPPTFIN DD *
++ PTF (SM00025) .
++ VER (Z037) .
++ ZAP (IEFVHCB) .
 ACCEPT S (SM00025) .
 NAME IEFVHCB
*  USES PATCH AREA TO EXIT TO IEFUJV AT A POINT JUST BEFORE
* THE CONVERTED INTERNAL TEXT IS WRITTEN TO THE SPOOL
 VER 06BA 41D0C058
 VER 0788 00000000,00000000,00000000,00000000
 REP 06BA 47F0B786
 REP 0788 41D0C058
 REP 078C 5810C0EC
 REP 0790 91801018
 REP 0794 4780B6BC
 REP 0798 5810C280
 REP 079C 91201036
 REP 07A0 4780B6BC
 REP 07A4 50101040
 REP 07A8 4100B7BC
 REP 07AC 50001048
 REP 07B0 58F01024
 REP 07B4 41101040
 REP 07B8 05EF
 REP 07BA 47F0B6BC
 REP 07BE FF
/*

//TECCOPY JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//S1 EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=1
//SYSUT3 DD SPACE=(CYL,(5,1)),UNIT=SYSDA
//SYSUT4 DD SPACE=(CYL,(5,1)),UNIT=SYSDA
//SYSB DD DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSYSB
//SYSA DD DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSYSA
//SYSIN DD *
 COPY INDD=SYSA,OUTDD=SYSB
 S M=((IEFUJV,,R))
 S M=((IEFVH1,,R))
/*

//SMP00025  JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1
//S0  EXEC  PAN,SO=1,LIB1=SYS2
++WRITE WORK,SMP025TA
//S1  EXEC  ASMBLR,SO=1
//S1A  EXEC  ASMBLR,SO=1
//COM.SYSIN DD *
PASSWRD  CSECT
***
*** THE FOLLOWING IS THE COMPUTER TECH PASSWORD
***
LENGTH   DC    AL1(L'PASSWORD-1)        THIS MUST BE THE FIRST CARD
PASSWORD DC    C'AGSST'
         END
/*
//S2  EXEC  LINK,LIB1=SYS2,NAME=SMP025TA,SO=1,
//   OPT=',RENT'
//STEP01  EXEC PGM=SMP025LS
//STEPLIB DD DSN=SYS2.LINKLIB,DISP=SHR
//PRINT DD SYSOUT=1
//SYSUDUMP DD SYSOUT=1

//SMP00026 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 DEL PTF (SM00026) .
 ADD PTF (SM00026) APPL ACPT DATE(76137)
 MOD (AMDPRDMP,AMDPRECT,AMDPRINT,AMDPRIOS,AMDPRLOG,AMDPRRSM,AMDPRSM,
 AMDPRTRC,DUMPRSM,D68PRVTM,RTM1) .
 ENDUCL .
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT1   DD  DSN=D94.LOAD,DISP=OLD,UNIT=TAPE,VOL=SER=PEXITS,
// LABEL=(,NL)
//SYSUT2   DD  DSN=SYS2.LINKLIB,DISP=OLD
 COPY INDD=SYSUT1,OUTDD=SYSUT2
//STEP01   EXEC PTFZAP,LIB='SYS2.LINKLIB',V1=SYSLIB
 NAME AMDPRIOS
 VER 00A2 41050000
 VER 00BC 582F0000
 REP 00A2 58050000
 REP 00BC 412F0000

//SMP00027 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 DEL PTF (SM00027) .
 ADD PTF (SM00027) APPL ACPT MOD(SMP027 CHKDUMP) DATE(76136) .
 ENDUCL .
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP027
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1
 INCLUDE LINKLIB(AMDPRDMP)
 ALIAS CHKDUMP
 NAME SMP027(R)
//LINKLIB  DD  DSN=SYS1.LINKLIB,DISP=SHR
//STEP01   EXEC PGM=IEBGENER,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT1   DD  UNIT=TAPE,DISP=OLD,LABEL=(53,NL),DSN=FILE53,
// VOL=SER=MVSTAP,DCB=(RECFM=FB,LRECL=80,BLKSIZE=16000)
//SYSUT2   DD  DSN=&FILE53,SPACE=(CYL,(2,2)),UNIT=SYSDA,DISP=(,PASS),
// DCB=(RECFM=FB,LRECL=80,BLKSIZE=1680)
//SYSIN    DD  DUMMY
//STEP01A  EXEC PAN,SO=1
++ADD SMP027,ALC
// DD UNIT=SYSDA,DSN=&FILE53,DISP=(OLD,DELETE)
//SYSUT1   DD  UNIT=TAPE,DISP=OLD,LABEL=(54,NL),DSN=FILE54,
//SYSUT2   DD  DSN=&FILE54,SPACE=(CYL,(2,2)),UNIT=SYSDA,DISP=(,PASS),
++ADD SMP027ZP,DATA
// DD UNIT=SYSDA,DSN=&FILE54,DISP=(OLD,DELETE)

//SMP00029 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00029) .
   APPLY S (SM00029) .
 ACCEPT S (SM00029) .
//SMPPTFIN DD  *
++ PTF (SM00029) /* MOD TO MAKE BUFNO=1 THE DEFAULT IF VIO USED */ .
++VER (Z037) .
++ ZAP (IGG0196B) .
 NAME IGG0196B
 VER 00D8 9205,2014     OVLY      MVI   DCBBUFNO,GENDEF
 VER 0250 0000,0000     PATCH     DC    NF'0'
 REP 00D8 47F0,324E               B     PATCH
 REP 0250 9205,2014               MVI   DCBBUFNO,GENDEF
 REP 0254 5810,B020               L     RF,DEBSUCBA
 REP 0258 9180,1000               TM    0(RF),UCBVRDEV  VIO ?
 REP 025C 47E0,30DA               BZ    OVLY+4      NO - RETURN
 REP 0260 9201,2014               MVI   DCBBUFNO,X'01'   DEFAULT
 REP 0264 47F0,30DA               B     OVLY+4   RETURN

//SMP00031 JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00031) .
 APPLY S (SM00031) FORCE .
 ACCEPT S (SM00031) .
//SMPPTFIN DD *
++ PTF (SM00031).
++VER (Z037) .
++ ZAP (IEAVNIPM).
 NAME IEAVNIPM
*** MODIFY SPECIFY SYSTEM PARAMETERS IPL MESSAGE
 VER 0026A4 E2D7C5C3,C9C6E840,E2E8E2E3
 VER 0026B0 C5D440D7,C1D9C1D4,C5E3C5D9,E240C6D6
 VER 0026C0 D940D9C5,D3C5C1E2,C540
 REP 0026A4 5CE3C8C5,40C8D5C2,40D4E5E2
 REP 0026B0 40E3C5C1,D440D7D9,C5E2C5D5,E3E2407F
 REP 0026C0 E3C8C540,E2C3D77F,4040

//SMP00032 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 DEL PTF (SM00032) .
 ENDUCL .
//STEP02   EXEC SMP,LIB=ACDS
 UCLIN .
 DEL PTF (SM00032) .
 ENDUCL .
//STEP01   EXEC SMP
 RECEIVE S (SM00032) .
 APPLY   S (SM00032) FORCE .
 ACCEPT  S (SM00032) .
//SMPPTFIN  DD  *
++ PTF     (SM00032) .
++ VER (Z037) .
++ ZAP     (IFG0194F) .
   NAME     IFG0194F
*** ALLOW CURRENT TAPE DENSITY TO BE DEFAULTED TO 1600
*** MUST USE DEN=4 TO RUN AT 6250
VER 00DC 471030EA
REP 00DC 471030F6

//SMP00036 JOB (9999,T009),TECHX,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00036) .
 APPLY S (SM00036)  FORCE .
 ACCEPT S (SM00036) .
//SMPPTFIN  DD  *
++PTF (SM00036) .
++ VER (Z037) .
++ZAP (ILRRIM01)   DISTLIB(AOSC5) .
 NAME IEAVNP04
*** LOCAL MOD TO INCREASE ASM SERVICE BURST FROM 50,00 TO 100,00
*** ZAP 13.1 FROM MVS COOKBOOK
VER 1608 0000C350  50,000 MICROSECONDS
REP 1608 000186A0  100,000 MICROSECONDS

//SMP00037 JOB (9999,T009),'TECHX',CLASS=1,MSGCLASS=1,MSGLEVEL=(1,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00037) .
 APPLY   S (SM00037) .
 ACCEPT  S (SM00037) .
//SMPPTFIN  DD  *
++ PTF     (SM00037) .
++ VER (Z037) .
++ ZAP     (IKJEBECI) .
   NAME     IKJEBECI
*** ELIMINATE DOUBLE BLDL FOR EDIT SUB COMMANDS
VER 01F4 41100000
VER 035C 9280F000
REP 01F4 47F0B224
REP 035C 9200F000

//SMP00038 JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMPPUT
//SMPCNTL  DD   *
 RECEIVE S (SM00038) .
 APPLY S (SM00038) FORCE .
 ACCEPT S (SM00038) .
//SMPPTFIN DD  *
++PTF (SM00038) .
++VER (Z037) .
++ZAP (IEE0403D) .
 NAME IGC0003D IEE0403D
***  RENAME RESET COMMAND
 VER 037F D9C5E2C5E3C5
 REP 037F C2C5C1D9F100
 DUMPT IGC0003D IEE0403D
/*
//STEP01   EXEC PTFZAP,LIB='SYS1.LPALIB',V1=MVSYSB
//STEP01   EXEC PTFZAP,LIB='SYS1.LPALIB',V1=MVSYSA
//STEP01   EXEC PTFZAP,LIB='SYS1.AOSB3',V1=DLIB01
 NAME IEE0403D IEE0403D

//SMP041   JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++ADD SMP041,ALC,LIST
SMP041   CSECT
         SAVE  (14,12)
         LR    R3,R15              BASE REG
         USING SMP041,R3
         ST    R13,SAVE+4          SAVE AREA
         LA    R13,SAVE               CONVENTIONS
         L     R4,16               CVT ADDR
         L     R4,560(0,R4)        GDA ADDR
         L     R5,24(0,R4)         SQA SPQE
         L     R6,4(0,R5)          SQA DQE CHAIN START
         SPACE 3
DQESTART L     R12,12(0,R6)        LOAD FIRST DQE SIZE
         L     R7,4(0,R6)          NEXT DQE
         SPACE
DQELOOP  LTR   R7,R7               ANY MORE DQES
         BZ    PWAIT               NO, GO PRINT AND WAIT
         A     R12,12(0,R7)        ADD TO SQA SIZE
         L     R7,4(0,R7)          NEXT DQE ADDR
         B     DQELOOP             GO CHECK NEXT
         SPACE 3
PWAIT    C     R12,SQASIZE         SIZE CHANGE YET
         BE    WAIT                NO, NO MSG
         ST    R12,SQASIZE         SET NEW SQA SIZE
         SRL   R12,10              DIVIDE BY 1024
         CVD   R12,DOUBLE          CONVERT SIZE TO DECIMAL
         MVC   SQAWTO+37(6),=X'402021202020'
         ED    SQAWTO+37(6),DOUBLE+5
         EJECT
SQAWTO   WTO   'SMP041 -   CURRENT SQA SIZE - XXXXXK',DESC=2
         SPACE 3
WAIT     STIMER WAIT,DINTVL=TIME     WAIT 10 SECS
         B     DQESTART            CHECK SQA SIZE AGAIN
         EJECT
         LTORG
SAVE     DS    18F
         DS    0D
DOUBLE   DC    2F'0'
TIME     DC    C'00001000'           10 SECS
SQASIZE  DC    F'0'
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R14      EQU   14
R15      EQU   15
         END
++WRITE WORK,SMP041
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',SO=1,NAME=SMP041
 ALIAS SQAMONTR
//STEP01   EXEC SMP
 UCLIN .
 ADD PTF (SM00041) MOD(SMP041 SQAMONTR) DATE(76166) APPL ACPT    .
 ENDUCL .

//SMP046 JOB (9999,T009),BBDJP,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP046
//STEP02   EXEC ASMBLR,SO=1
//COM.SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//             DD   DSN=MVS.MACLIB,DISP=SHR
//             DD   DSN=SYS1.AMODGEN,DISP=SHR
//STEP03   EXEC LINK,SO=1,LIB1=SYS2,OPT=',AC=1'
 ALIAS DEBUGGER
 NAME SMP046(R)
 ADD PTF (SM00046) APPL MOD(DEBUGGER) DATE(76254) .

//SMP005  JOB (9999,T009),'BBDJP',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP005
//STEP02   EXEC ASMBLR,OPT='DECK,NOOBJECT',SO=1
//COM.SYSPUNCH DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DSN=&TCAM,DISP=(,PASS)
//STEP02A  EXEC PAN,SO=1
//SYSIN    DD   *
++UPDATE SMP005A,20,ALL
//         DD  DSN=&TCAM,DISP=(OLD,DELETE)
//STEP03   EXEC PAN,LIB1=SYS2,SO=1
++WRITE WORK,SMP005A
//STEP03A  EXEC ASMBLR,SO=1
//STEP03A  EXEC ASMBLRH,SO=1
//STEP04   EXEC TESTLINK,LIB='SYS1.LINKLIB',OPT=',AC=1',SO=1
//LKED.SYSLIN DD UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)
//       DD *
 ORDER IEDAYZ(P)
 ORDER IEDQKA01
 ORDER IEDQTCAM
 ORDER IEDNSAVT
 ORDER IEDQTNT
 ORDER IEDQTRMC
 ORDER IEDQOPT
 ORDER IEDQOPC
 ORDER IEDQSTCS
 ORDER IEDQSCBC
 ORDER IEDQGA
 ORDER IEDQMSGS
 ORDER IEDQUI
 ORDER IEDQBD
 ORDER IEDQAI
 ORDER IEDAYS
 ORDER IEDAYH
 ORDER IEDAYC
 ORDER IEDAYL
 ORDER IEDQAU
 ORDER IEDQAB
 ORDER IEDQA4
 ORDER IEDAYX
 ORDER IEDQA1
 ORDER IEDQAQ
 ORDER IEDQ25
 ORDER IEDQAE
 ORDER IEDQAW
 ORDER IEDAYR
 ORDER IEDQBT
 ORDER IEDAYI
 ORDER IEDAYE
 ORDER IEDAYO
 ORDER IEDAYA
 ORDER IEDAYF
 ORDER IEDAYD
 ORDER IEDAYB
 ORDER IEDAYW
 ORDER IEDQAX
 ORDER IEDAYP
 ORDER IEDAYM
 ORDER IEDQMISC
 ORDER IEDQHK
 ORDER IEDAYY
 ORDER IEDQAV
 ORDER IEDQAL
 ORDER IEDQNA
 ORDER IEDQHG
 ORDER FEVECTOR
 ORDER IEDAYT
 ENTRY IEDQTCAM
 NAME IEDQTCAM(R)
//STEP01   EXEC SMPPUT
//SMPCNTL  DD  *
 UCLIN .
 ADD PTF (SM00005) APPL MOD(IEDQTCAM) DATE(76133) .
 ENDUCL .
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//LINKLIBA DD UNIT=DASD,VOL=SER=MVSYSA,DISP=OLD,DSN=SYS1.LINKLIB
//LINKLIBB DD UNIT=DASD,VOL=SER=MVSYSB,DISP=OLD,DSN=SYS1.LINKLIB
 COPY INDD=LINKLIBB,OUTDD=LINKLIBA
 S M=((IEDQTCAM,,R))
//STEP01   EXEC PGM=IKJEFT01,REGION=8000K
//SYSPRINT DD  SYSOUT=E
//SYSUADS  DD  DSN=SYS1.UADS,DISP=OLD
//SYSLBC   DD  DSN=SYS1.BRODCAST,DISP=SHR
ACCOUNT
SYNC
END
//STEP01   EXEC PGM=IEHPROGM
//SYSPRINT DD  SYSOUT=A
//MVSRES   DD  UNIT=3330,VOL=SER=MVSRES,DISP=OLD
 SCRATCH DSNAME=SYS1.UADS,VOL=3330=MVSRES,PURGE
 SCRATCH DSNAME=SYS1.BRODCAST,VOL=3330=MVSRES,PURGE
//STEP02   EXEC PGM=IEFBR14
//UADS     DD  DSN=SYS1.UADS,SPACE=(CYL,(8,2,84),,CONTIG),
//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=800,DSORG=PO),
//         UNIT=3330,VOL=SER=MVSRES,DISP=(,KEEP)
//BRODCAST DD  DSN=SYS1.BRODCAST,SPACE=(CYL,(3),,CONTIG),
//         UNIT=3330,VOL=SER=MVSRES,DISP=(,KEEP)
//SYSUADN  DD  DSN=SYS1.UADS,DISP=SHR,UNIT=3330,VOL=SER=MVSGEN
UADSREFM

//SMP00015 JOB (9999,T009),'TECZZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00015) .
 APPLY S (SM00015).
//SMPPTFIN DD *
++ PTF (SM00015).
++VER (Z037) .
++ ZAP (IEFSDPPT).
 NAME IEFSDPPT
 VER 78 C4C6E2D4E5D9C3F06870FFFF       IMS
 VER 009C 00000000,00000000,6260FFFF
 VER 00A8 00000000,00000000,6260FFFF
 VER 00B4 00000000,00000000,6260FFFF
VER C0 00000000,00000000,6260FFFF
VER CC 00000000,00000000,6260FFFF
 REP 78 E5E2D4F0F0F040406260FFFF VSM MONITOR
  REP  009C  C4D2,D5D4,E3C1,E2D2,2000,FFFF       DKNMTASK
REP 00A8 C8C1E2D1C5E2E9E9,EE10     HASJESZZ
 REP 00B4 C4C6C8E2,C9D74040,2000FFFF    DFHSIP-(CICS)
REP C0 C5D9C2D4,C6D4C6C3,1800FFFF  ERBMFM63   RMF
REP CC E3C3C1D4C9404040,6260FFFF
//STEP01   EXEC PTFZAP,LIB='SYS1.LPALIB',V1=MVSYSA
 NAME IEFSD060 IEFSDPPT
 DUMPT IEFSD060 IEFSDPPT

//SMP00016 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 UCLIN .
 ADD PTF (SM00016) APPL MOD(IGC0025C IGG019WA IGC0024G) DATE(76136) .
 ENDUCL .
//UPD     EXEC PROC=DFHUPDVS
//SYSIN     DD *
./       ADD  NAME=MEMBER
         DFHCOVER  OS
         GBLA &VSDSECT DSECT PRINT OPTION
         GBLB &DLIGEN  DL/I SUPPORT
         GBLB &VS2     VS2 SUPPORT
         GBLB &VS22    MVS SUPPORT
         GBLB &VSAMSHR VSAM SHARED RESOURCES
         GBLC &VSEJECT DFHEJECT SUPPORT
&VS2     SETB 1   SET VS2
&VS22    SETB 1   SET MVS
&VSAMSHR SETB 1   VSAM SHARED RESOURCES
&VSDSECT SETA 1   PRINT NO DSECTS
&VSEJECT SETC '5'
         PRINT OFF
//ASM     EXEC PROC=DFHASMVS,LIST='LIST,XREF(SHORT),ALIGN'
//SYSIN     DD DSN=&TEMPPDS(MEMBER),DISP=(OLD,DELETE)
//          DD DSNAME=DFH.SOURCE.V111(DFHCSVC),DISP=SHR
//SVC     EXEC PROC=DFHLNKVS,LIST='LIST,XREF,LET,RENT,AC=1'
//LNK.SYSLMOD  DD  DSN=SYS1.LPALIB,DISP=SHR
//DFHLEIN      DD  *
       NAME    IGC0025C(R)
//UPD     EXEC PROC=DFHUPDVS
//SYSIN     DD *
./       ADD  NAME=MEMBER
         DFHCOVER  OS
         GBLA &VSDSECT DSECT PRINT OPTION
         GBLB &DLIGEN  DL/I SUPPORT
         GBLB &VS2     VS2 SUPPORT
         GBLB &VS22    MVS SUPPORT
         GBLB &VSAMSHR VSAM SHARED RESOURCES
         GBLC &VSEJECT DFHEJECT SUPPORT
&VS2     SETB 1   SET VS2
&VS22    SETB 1   SET MVS
&VSAMSHR SETB 1   VSAM SHARED RESOURCES
&VSDSECT SETA 1   PRINT NO DSECTS
&VSEJECT SETC '5'
         PRINT OFF
//ASM     EXEC PROC=DFHASMVS,LIST='LIST,XREF(SHORT),ALIGN'
//SYSIN     DD DSN=&TEMPPDS(MEMBER),DISP=(OLD,DELETE)
//          DD DSNAME=DFH.SOURCE.V111(DFHCAA70),DISP=SHR
//SVC     EXEC PROC=DFHLNKVS,LIST='LIST,XREF,LET,RENT,AC=1'
//LNK.SYSLMOD  DD  DSN=SYS1.LPALIB,DISP=SHR
//DFHLEIN      DD  *
       NAME    IGG019WA(R)
//UPD     EXEC PROC=DFHUPDVS
//SYSIN     DD *
./       ADD  NAME=MEMBER
         DFHCOVER  OS
         GBLA &VSDSECT DSECT PRINT OPTION
         GBLB &DLIGEN  DL/I SUPPORT
         GBLB &VS2     VS2 SUPPORT
         GBLB &VS22    MVS SUPPORT
         GBLB &VSAMSHR VSAM SHARED RESOURCES
         GBLC &VSEJECT DFHEJECT SUPPORT
         GBLB &DEBCHK  DEB CHECK
&VS2     SETB 1   SET VS2
&VS22    SETB 1   SET MVS
&VSAMSHR SETB 1   VSAM SHARED RESOURCES
&VSDSECT SETA 1   PRINT NO DSECTS
&VSEJECT SETC '5'
         PRINT OFF
&DEBCHK  SETB 1   SET DEBCHK
//ASM     EXEC PROC=DFHASMVS,LIST='LIST,XREF(SHORT),ALIGN'
//ASSEM.SYSLIB DD DSN=SYS1.MACLIB,DISP=(SHR,KEEP)
//         DD DSN=DFH.MACLIB.V111,DISP=SHR
//         DD DSN=DFH.SOURCE.V111,DISP=SHR
//         DD DSN=SYS1.AMODGEN,DISP=SHR
//SYSIN     DD DSN=&TEMPPDS(MEMBER),DISP=(OLD,DELETE)
//          DD DSNAME=DFH.SOURCE.V111(DFHDEB70),DISP=SHR
//SVC     EXEC PROC=DFHLNKVS,LIST='LIST,XREF,LET,RENT,AC=1'
//LNK.SYSLMOD  DD  DSN=SYS1.LPALIB,DISP=SHR
//DFHLEIN      DD  *
       NAME    IGC0024G(R)

//SMP00017 JOB (9999,T009),'TECZZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC TESTLINK,OPT=',SCTR,NCAL,SIZE=(256K,64K)',SO=1
//LKED.SYSLMOD DD   DSN=SYS1.NUCLEUS,DISP=SHR
//LKED.SYSLIN  DD    *
 INSERT IEAVNIP0
 INSERT IEAVFX00
   INCLUDE SYSLMOD(IEANUC01)
 REPLACE IGC249
  NAME IEANUC05(R)
//DOSLIB DD DSN=DUO.DOSLIB,DISP=SHR
//DELINK  EXEC PGM=DELINK,REGION=128K
//STEPLIB  DD  DSN=DUO.DOSLIB,DISP=SHR
//SYSPRINT DD  SYSOUT=1
//SYSLIB   DD  DSN=SYS1.NUCLEUS,DISP=SHR
//SYSPUNCH DD  DSN=&&TEMP,DISP=(,PASS),UNIT=SYSDA,SPACE=(80,(100,50))
//SYSIN    DD  *
 IEANUC05  TRSVC
//RENAME  EXEC PGM=IEWL,PARM='LIST,NCAL,XREF',REGION=256K
//SYSPRINT DD  SYSOUT=1
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(10,10))
//SYSLMOD  DD  DSN=&&TEMP2,DISP=(,PASS),UNIT=SYSDA,
//       SPACE=(TRK,(5,,1))
//SYSLIN   DD  *
 CHANGE    TRSVC(RLTRSVC)
 INCLUDE   TEMP
 NAME RLTRSVC
//TEMP     DD  DSN=&&TEMP,DISP=(OLD,DELETE)
//LINKNUC  EXEC PGM=IEWL,REGION=512K,
//             PARM='SCTR,LIST,LET,XREF,NCAL,SIZE=(320K,84K)'
//SYSPRINT DD  SYSOUT=1
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(20,20))
//SYSLMOD  DD  DSN=SYS1.NUCLEUS,DISP=SHR
//DOSLIB   DD  DSN=DUO.DOSLIB,DISP=SHR
//TEMP2    DD  DSN=&&TEMP2,DISP=(OLD,DELETE)
//SYSLIN   DD  *
 INSERT IEAANIP0
 INSERT IEAVFX00
 CHANGE DUO360T2(IGC249)
 INCLUDE DOSLIB(SVCMVSI)
 INCLUDE TEMP2(RLTRSVC)
 INCLUDE SYSLMOD(IEANUC05)
    NAME  IEANUC08(R)
  NAME  IEANUC01 IEAVESVC
****  BJ151   SFC4 AND OTHER ABENDS , INTEGTATED FILTER      7-27-75
  VER  005A  47709038      SU 7
  REP  005A  47009038     SU 7
  NAME  IEANUC08 IEAVESVC
  VER  007E  4770905C
  REP  007E  4700905C
//PROC#1 EXEC  PTFZAP,LIB='SYS1.NUCLEUS',V1=MVSYSA,SO=1
//STEP01   EXEC SMPPUT
//SMPCNTL  DD *
 UCLIN .
 DEL PTF (SM00017) .
 ADD PTF (SM00017) APPL MOD(IGC249 IEAVTRCE IEAVESVC) DATE(76193) .
 ENDUCL .
//TECCOPY JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//SYSPRINT DD SYSOUT=1
//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(2,2))
//MVSYSA   DD  DSN=SYS1.NUCLEUS,VOL=SER=MVSYSA,UNIT=DASD,DISP=SHR
//MVSGEN   DD  DSN=SYS1.NUCLEUS,VOL=SER=MVSGEN,UNIT=DASD,DISP=SHR
 COPY INDD=MVSGEN,OUTDD=MVSYSA
 S M=((IEANUC01,,R))
//STEP1 EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=1
//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(1))
//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(1))
//OLD DD DISP=SHR,DSN=SYS1.NUCLEUS
//NEW DD DISP=SHR,DSN=SYS1.NUCLEUS,UNIT=3330,VOL=SER=MVSYSB
//SYSIN DD *
 COPY OUTDD=NEW,INDD=OLD
 SELECT  MEMBER=((IEANUC01,,R))
 SELECT MEMBER=((IEANUC05,,R))
 SELECT MEMBER=((IEANUC08,,R))

//SMP00019 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP019A
//STEP02   EXEC ASMBLR,SO=1
//COM.SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//             DD  DSN=SYS1.AMODGEN,DISP=SHR
//STEP03   EXEC SMPCARD
 RECEIVE S (SM00019) .
 APPLY S (SM00019) .
 ACCEPT S (SM00019) .
//SMPPTFIN DD *
++PTF (SM00019) .
++MOD (IEECB800) .
// DD DSN=&LOADSET,DISP=(OLD,DELETE),UNIT=SYSDA
//STEP02   EXEC PAN,SO=1
//PAN.SYSIN   DD   *
++ADD SMP019A,ALC,LIST
//         DD   UNIT=TAPE,VOL=SER=MVSTAP,DISP=(OLD,PASS),
// DCB=(DEN=3,RECFM=FB,LRECL=80,BLKSIZE=16000),DSN=QAQ,LABEL=(44,NL)
//STEP01   EXEC SMPCARD
 UCLIN .
 DEL PTF(SM00019) .
 ENDUCL .
//STEP01   EXEC SMPCARD,LIB=ACDS
 UCLIN .
 DEL PTF(SM00019) .
 ENDUCL .

//SMP00019 JOB (9999,T009),'TECHZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC SMP
 RECEIVE S (SM00019) .
 APPLY S (SM00019) .
//SMPPTFIN DD  *
++PTF (SM00019) .
++VER (Z037) .
++ZAP (IEECB800) .
 EXPAND IEECB800(582)
NAME    IEECB800  IEECB800
BASE    000000    0012D9
   *                                   BASE1    EQU   11
   *                                   BASE2    EQU   4
   *                                   CSCBPTR  EQU   5
   *                                   EXREG    EQU   10
   *                                   JREGION  EQU   3
   *                                   JSIZE    EQU   9
   *                                   WPLPTR   EQU   8
   *                                   W1       EQU   JREGION
   *                                   W2       EQU   JSIZE
   *                                            USING CSCB,CSCBPTR
 VER    000016    05B0                          BALR  BASE1,0
   *                                            USING *,BASE1
   *                                            USING *+4095,BASE2
 VER    000018    4140,BFFF                     LA    BASE2,4095(,BASE1)
 VER    00037C    45E0,B694                     BAL   RET,JOBLINE
   *                                   JOBLINE  EQU   IEECB800+X'6AC'
 VER    000396    45E0,B702            BALLISTJ BAL   RET,LISTJOBS
   *                                   LISTJOBS EQU   IEECB800+X'71A'
 VER    0006B8    1FAA                          SLR   EXREG,EXREG
 VER    0006BA    43A0,BFE5                     IC    EXREG,JOBLGTH
 VER    0006BE    06A0                          BCTR  EXREG,0
 VER    0006C0    44A0,BECC                     EX    EXREG,SM03056
 VER    000754    43A0,4099                     IC    EXREG,JOBLGTHV
 VER    000758    06A0                          BCTR  EXREG,0
 VER    00075A    44A0,BED2            EX03058  EX    EXREG,SM03058
 VER    00075E    47F0,B756                     B     RC00546
 VER    00076E    45E0,B776            RC00546  BAL   RET,JOBLFILL
   *                                   JOBLFILL EQU   IEECB800+X'78E'
 VER    000808    5830,5034                     L     JREGION,CHRGNAD
 VER    00080C    5890,5030                     L     JSIZE,CHRGNSZ
 VER    000810    1FAA                          SLR   EXREG,EXREG
 VER    000820    1807                          LR    R0,R7
 VER    000822    8E00,0020                     SRDA  R0,32
 VER    000876    47E0,B866            B00606   BNO   RF00606
 VER    00087A    92E2,8027                     MVI   SWAPIND-JOBLISTV(W
   *                                            C'S'
   *                                   RF00606  EQU   *
 VER    000EBE    000E                 CH00948  DC    AL2(LWTOVR-LWTO)
 VER    000EC0    0028                 CH02850  DC    AL2(LWTO)
 VER    000EE4    D200,8000,BFC0       SM03056  MVC   0(0,WPLPTR),JOBTEX
 VER    000EEA    D200,8000,4071       SM03058  MVC   0(*-*,WPLPTR),JOBL
 VER    000F38    0000,0025            CF02848  DC    A(LJOBTEXT)
 VER    000F3C    0000,0062            CF03021  DC    A(7*(LWTOVR-LWTO))
 VER    000FD8    0025,0000            JOBTEXT  DC    AL2(LJOBTEXT,0)
 VER    000FDC    4040,40                       DC    CL3' '
 VER    000FDF    F0F0,F0F0,F040                DC    CL6'00000'
 VER    000FE5    D1D6,C2E2,4040,4040           DC    CL8'JOBS'
 VER    000FED    F0F0,F0F0,F040                DC    CL6'00000'
 VER    000FF3    C9D5,C9E3,C9C1,E3D6           DC    CL10'INITIATORS'
 VER    000FFB    D9E2
   *                                   LJOBTEXT EQU   *-JOBTEXT
 VER    000FFD    25                   JOBLGTH  DC    AL1(LJOBTEXT)
   *                                   LWTO     EQU   *-JOBLISTV
   *                                   LWTOVR   EQU   LWTO+14
 VER    0010B0    28                   JOBLGTHV DC    AL1(LWTO)
 VER    0012DC    0000,0000
 REP    000396    45E0,4465                     BAL   RET,PATCH1C
 REP    00075A    45E0,42FD                     BAL   RET,PATCH1
 REP    000876    47F0,B866                     B     RF00606
 REP    000EBE    0000                          DC    AL2(0)
 REP    000EC0    004A                          DC    AL2(LWTO-1+L'PAT1+
   *                                            2+L'PAT3)
 REP    000F38    0000,004A                     DC    A(LJOBTEXT+LHEADER
 REP    000F3C    0000,0000                     DC    A(0)
 REP    0012DC    C1C5,E3F0,F0F0,F1F0  PATCH1   PATCH (10,'AETNA D A WIT
 REP    0012E4    40F0,F5F1,F1F7,F640           INFO (R3.6/UZ02848)')
 REP    0012EC    C1C5,E3D5,C140,C440
 REP    0012F4    C140,E6C9,E3C8,40C1
 REP    0012FC    E2C3,C240,C9D5,C6D6
 REP    001304    404D,D9F3,4BF6,61E4
 REP    00130C    E9F0,F2F8,F4F8,5D
 REP    001314    5830,0010                     L     W1,CVTPTR
   *                                            USING CVT,W1
 REP    001318    5830,322C                     L     W1,CVTASVT
   *                                            USING ASVT,W1
 REP    00131C    4890,501E                     LH    W2,CHASID
 REP    001320    8990,0002                     SLL   W2,2
 REP    001324    5899,320C                     L     W2,ASVTENTY-4(W2)
   *                                            USING ASCB,W2
 REP    001328    1F00                          SLR   R0,R0
 REP    00132A    BF03,9026                     ICM   R0,3,ASCBSEQN
 REP    00132E    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    001332    D203,8027,44B9                MVC   LWTO-1(L'PAT3,WPLP
 REP    001338    DE03,8027,8006                ED    LWTO-1(L'PAT3,WPLP
   *                                            PLPTR)
 REP    00133E    5810,9042                     L     R1,ASCBEJST+2
 REP    001342    1F00                          SLR   R0,R0
 REP    001344    5D00,44D9                     D     R0,=A(10000/16)
 REP    001348    1831                          LR    W1,R1
 REP    00134A    1F00                          SLR   R0,R0
 REP    00134C    5810,90CA                     L     R1,ASCBSRBT+2
 REP    001350    5D00,44D9                     D     R0,=A(10000/16)
 REP    001354    1A13                          AR    R1,W1
 REP    001356    1F00                          SLR   R0,R0
 REP    001358    5D00,44DD                     D     R0,=A(100*60*60)
 REP    00135C    4C10,44E9                     MH    R1,=H'100'
 REP    001360    1831                          LR    W1,R1
 REP    001362    8C00,0020                     SRDL  R0,32
 REP    001366    5D00,44E1                     D     R0,=A(100*60)
 REP    00136A    1A13                          AR    R1,W1
 REP    00136C    4C10,44E9                     MH    R1,=H'100'
 REP    001370    1831                          LR    W1,R1
 REP    001372    8C00,0020                     SRDL  R0,32
 REP    001376    5D00,44E5                     D     R0,=A(100)
 REP    00137A    1A13                          AR    R1,W1
 REP    00137C    4C10,44E9                     MH    R1,=H'100'
 REP    001380    1A10                          AR    R1,R0
 REP    001382    4E10,8000                     CVD   R1,0(,WPLPTR)
 REP    001386    D20C,802B,44A6                MVC   LWTO-1+L'PAT3(L'PA
   *                                            TR),PAT1
 REP    00138C    DE0C,802B,8003                ED    LWTO-1+L'PAT3(L'PA
   *                                            TR),3(WPLPTR)
 REP    001392    1F00                          SLR   R0,R0
 REP    001394    BF03,9028                     ICM   R0,3,ASCBIOSM
 REP    001398    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    00139C    D205,8038,44B3                MVC   LWTO-1+L'PAT1+L'PA
   *                                            T2,WPLPTR),PAT2
 REP    0013A2    DE05,8038,8005                ED    LWTO-1+L'PAT1+L'PA
   *                                            T2,WPLPTR),5(WPLPTR)
 REP    0013A8    BF03,9098                     ICM   R0,3,ASCBFMCT
 REP    0013AC    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    0013B0    D205,803E,44B3                MVC   LWTO-1+L'PAT1+L'PA
   *                                            T3(L'PAT2,WPLPTR),PAT2
 REP    0013B6    DE05,803E,8005                ED    LWTO-1+L'PAT1+L'PA
   *                                            T3(L'PAT2,WPLPTR),5(WPLP
 REP    0013BC    BF03,9078                     ICM   R0,3,ASCBVSC
 REP    0013C0    1810                          LR    R1,R0
 REP    0013C2    BF03,907A                     ICM   R0,3,ASCBNVSC
 REP    0013C6    1E01                          ALR   R0,R1
 REP    0013C8    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    0013CC    D205,8044,44B3                MVC   LWTO-1+L'PAT1+2*L'
   *                                            PAT3(L'PAT2,WPLPTR),PAT2
 REP    0013D2    DE05,8044,8005                ED    LWTO-1+L'PAT1+2*L'
   *                                            PAT3(L'PAT2,WPLPTR),5(WP
 REP    0013D8    44A0,BED2                     EX    EXREG,SM03058
 REP    0013DC    48A0,BEA8                     LH    EXREG,CH02850
 REP    0013E0    40A0,8000                     STH   EXREG,0(,WPLPTR)
 REP    0013E4    5890,9090                     L     W2,ASCBOUCB
   *                                            USING OUCB,W2
 REP    0013E8    45A0,43E7                     BAL   EXREG,PATCH1A
 REP    0013EC    D202,8021,3000       BASE1A   MVC   JTEXT(3,WPLPTR),0(
 REP    0013F2    45A0,4437                     BAL   EXREG,PATCH1B
 REP    0013F6    D201,8025,3000       BASE1B   MVC   JTEXT+4(2,WPLPTR),
 REP    0013FC    07FE                          BR    RET
 REP    0013FE    D205,8021,44EB       PATCH1A  MVC   JTEXT(6,WPLPTR),=C
 REP    001404    4130,44C1                     LA    W1,=C'NSWPVLOUTGOO
   *                                            NQRT0'
 REP    001408    4100,0003                     LA    R0,3
 REP    00140C    9180,9011                     TM    OUCBSFL,OUCBNSW
 REP    001410    071A                          BOR   EXREG
 REP    001412    1A30                          AR    W1,R0
 REP    001414    9104,9011                     TM    OUCBSFL,OUCBPVL
 REP    001418    071A                          BOR   EXREG
 REP    00141A    1A30                          AR    W1,R0
 REP    00141C    9104,9010                     TM    OUCBQFL,OUCBOUT
 REP    001420    071A                          BOR   EXREG
 REP    001422    1A30                          AR    W1,R0
 REP    001424    9180,9010                     TM    OUCBQFL,OUCBGOO
 REP    001428    071A                          BOR   EXREG
 REP    00142A    1A30                          AR    W1,R0
 REP    00142C    9140,9010                     TM    OUCBQFL,OUCBGOI
 REP    001430    071A                          BOR   EXREG
 REP    001432    1A30                          AR    W1,R0
 REP    001434    9120,9010                     TM    OUCBQFL,OUCBGOB
 REP    001438    071A                          BOR   EXREG
 REP    00143A    1A30                          AR    W1,R0
 REP    00143C    9102,9011                     TM    OUCBSFL,OUCBENQ
 REP    001440    071A                          BOR   EXREG
 REP    001442    1A30                          AR    W1,R0
 REP    001444    9120,9013                     TM    OUCBAFL,OUCBRMA
 REP    001448    07EA                          BNOR  EXREG
 REP    00144A    41A0,43DF                     LA    EXREG,BASE1B
 REP    00144E    4130,44F1            PATCH1B  LA    W1,=C'MWLWNWCPCT'
 REP    001452    0600                          BCTR  R0,0
 REP    001454    9101,9015                     TM    OUCBEFL,OUCBMWT
 REP    001458    071A                          BOR   EXREG
 REP    00145A    1A30                          AR    W1,R0
 REP    00145C    9180,9015                     TM    OUCBEFL,OUCBLWT
 REP    001460    071A                          BOR   EXREG
 REP    001462    1A30                          AR    W1,R0
 REP    001464    9102,9013                     TM    OUCBAFL,OUCBNWT
 REP    001468    071A                          BOR   EXREG
 REP    00146A    1A30                          AR    W1,R0
 REP    00146C    9110,9013                     TM    OUCBAFL,OUCBCPL
 REP    001470    071A                          BOR   EXREG
 REP    001472    1A30                          AR    W1,R0
 REP    001474    9108,9012                     TM    OUCBYFL,OUCBCTU
 REP    001478    071A                          BOR   EXREG
 REP    00147A    07FE                          BR    RET
 REP    00147C    D224,8000,4481       PATCH1C  MVC   0(LHEADER,WPLPTR),
 REP    001482    4180,8000                     LA    WPLPTR,0(,WPLPTR)
 REP    001486    4B80,BFC0                     SH    WPLPTR,JOBTEXT
 REP    00148A    D201,8000,BF22                MVC   0(2,WPLPTR),CF0284
 REP    001490    5A80,BF20                     A     WPLPTR,CF02848
 REP    001494    47F0,B702                     B     LISTJOBS
 REP    001498    4040,40              HEADER   DC    CL3' '
 REP    00149B    D7D9,C940,40                  DC    CL5'PRI'
 REP    0014A0    C3D7,E440,C84B,D44B           DC    CL14'CPU H.M.S.T'
 REP    0014A8    E24B,E340,4040
 REP    0014AE    C961,D640                     DC    CL4'I/O'
 REP    0014B2    D7C1,C7C5,E240                DC    CL6'PAGES'
 REP    0014B8    E2D3,D6E3,E2                  DC    CL5'SLOTS'
   *                                   LHEADER  EQU   *-HEADER
 REP    0014BD    4020,2020,4B20,204B  PAT1     DC    X'402020204B20204B
 REP    0014C5    2120,4B20,20                  020'
 REP    0014CA    4020,2020,2120       PAT2     DC    X'402020202120'
 REP    0014D0    4021,2020            PAT3     DC    X'40212020'
 REP    0014D8    D5E2,E6D7,E5D3,D6E4
 REP    0014E0    E3C7,D6D6,C7D6,C9C7
 REP    0014E8    D6C2,C5D5,D8D9,E3F0
 REP    0014F0    0000,0271,0005,7E40
 REP    0014F8    0000,1770,0000,0064
 REP    001500    0064,C9D5,4040,4040
 REP    001508    D4E6,D3E6,D5E6,C3D7
 REP    001510    C3E3                          LTORG
   *                                            DS    0F
 REP    001514    C1C5,E340,C440,C140           DC    C'AET D A END'
 REP    00151C    C5D5,C4

//SMP00030 JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC TESTLINK,LIB='SYS1.LPALIB',SO=1,
// OPT=',REUS,RENT,REFR,NCAL'
//LKED.SYSLIN  DD   *
 REPLACE IEE6303D                 COMMAND ROUTER
 INCLUDE LINKLIB2(IGC0003D)       SYSTEM MODULE
 INCLUDE LINKLIB2(IEE6303D)       MVS COMMAND ROUTER  (#)
 INCLUDE LINKLIB2(IEESA03D)       1ST LOAD QCB TRACE  (# N)
 INCLUDE LINKLIB2(IEESB03D)       2ND LOAD QCB TRACE (# N)
 INCLUDE LINKLIB2(IEESC03D)       DISPLAY LINES   (# L)
 INCLUDE LINKLIB2(IEESD03D)       DUMP CORE/UCBS (# D)
 INCLUDE LINKLIB2(IEESE03D)       EXPANDED D A (# A)
 INCLUDE LINKLIB2(IEESF03D)  NUMBER OF PAGE FRAME ENTRIES  (# F)
 INCLUDE LINKLIB2(IEESH03D)       # S  COMMAND
 INCLUDE LINKLIB2(IEESI03D)       DISPLAY VOLUME # V
 CHANGE IEEXX03D(IEESG03D)        DUMMY # G
 INCLUDE LINKLIB2(IEEXX03D)     DUMMY MODULE
 INCLUDE LINKLIB2(IEEXX03D)           DUMMY MODULE
 CHANGE IEEXX03D(IEESJ03D)        DUMMY # J
 INCLUDE LINKLIB2(IEEXX03D)       DUMMY MODULE
 ALIAS IGG2103D,IGC0503D,IEE2103D,IEE0503D,IEE7603D
 ENTRY IEE0003D
 NAME IGC0003D(R)
//LINKLIB2 DD  DSN=SYS2.LINKLIB,DISP=SHR
//STEP01   EXEC SMPPUT
//SMPCNTL  DD  *
 UCLIN .
 DEL PTF (SM00030) .
 ENDUCL .
//STEP02   EXEC SMPACDS
 UCLIN .
 DEL PTF (SM00030) .
 ENDUCL .
//STEP03   EXEC SMPPUT
//SMPCNTL  DD   *
 RECEIVE S (SM00030) .
 APPLY S (SM00030) FORCE .
 ACCEPT S (SM00030) .
//SMPPTFIN DD  *
++PTF (SM00030) .
++VER (Z037) .
++ZAP (IEE0403D) .
 NAME IGC0003D IEE0403D
*** ZAP TO CHANGE MSGRT COMMAND TO #
 VER 0390 C59400D4E2C7D9E3D4D9         MSGRTMR
 REP 0390 869400C3D4C4D9D6E47B         CMDROU#
//STEP04   EXEC SMPPUT
//SMPCNTL  DD   *
 UCLIN .
 ADD PTF (SM00030) ACPT DATE(76193)
 MOD (IEE6303D IEESA03D IEESB03D IEESC03D IEESD03D IEESE03D IEESF03D
     IEESH03D,IEESI03D,IEEXX03D) .
 ENDUCL .

//SMP030A  JOB (9999,T009),TECZZ,CLASS=1,MSGCLASS=1
//SG11 EXEC LINKS,PARM='NCAL,LIST,XREF,LET,RENT',
//    UNIT='DASD',SER=SYSLIB,N=SYS2,NAME=LINKLIB,P1=' ',
//    MOD=,P2=' ',OBJ=MVSASM01,CLASS=1
//AOSB3 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSB3
//AOS00 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS00
//AOS21 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOS21
//AOSC5 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSC5
//AOSCE DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOSCE
//AOST4 DD DISP=SHR,VOLUME=(,RETAIN),DSNAME=SYS1.AOST4
//SYSLIN DD *
 INCLUDE AOSB3(IEE0003D)
 INCLUDE AOSB3(IEE0303D)
 INCLUDE AOSB3(IEE5403D)
 INCLUDE AOSB3(IEE0403D)
 INCLUDE AOSB3(IEE0503D)
 INCLUDE AOSB3(IEE0603D)
 INCLUDE AOSC5(IEE6503D)
 INCLUDE AOSC5(IEE6603D)
 INCLUDE AOSB3(IEE7703D)
 INCLUDE AOSB3(IEE7803D)
 INCLUDE AOSB3(IEE6903D)
 INCLUDE AOSB3(IEE6303D)
 INCLUDE AOSB3(IEE6403D)
 INCLUDE AOSB3(IEE3203D)
 INCLUDE AOSB3(IEE4703D)
 INCLUDE AOSB3(IEE4303D)
 INCLUDE AOS21(IED1303D)
 INCLUDE AOSB3(IEE5103D)
 INCLUDE AOSB3(IEE5503D)
 INCLUDE AOSB3(IEE7503D)
 INCLUDE AOSB3(IEE6703D)
 INCLUDE AOSB3(IEE6803D)
 INCLUDE AOSB3(IEE5903D)
 INCLUDE AOSB3(IEE5603D)
 INCLUDE AOSB3(IEE0703D)
 INCLUDE AOSB3(IEE1403D)
 INCLUDE AOSB3(IEE4103D)
 INCLUDE AOSB3(IEE7203D)
 INCLUDE AOSB3(IEE5703D)
 INCLUDE AOSB3(IEE0803D)
 INCLUDE AOSB3(IEE3503D)
 INCLUDE AOSB3(IEE1603D)
 INCLUDE AOSB3(IEE9403D)
 INCLUDE AOSC5(IEAVEMRQ)
 INCLUDE AOSC5(IEAVVRP1)
 INCLUDE AOSCE(IGF2503D)
 INCLUDE AOSCE(IGF2603D)
 INCLUDE AOSB3(IEE7103D)
 INCLUDE AOSB3(IEE3703D)
 INCLUDE AOST4(IKJ5803D)
 INCLUDE AOSB3(IEE2903D)
 INCLUDE AOSC5(IEEMB815)
 INCLUDE AOSB3(ISTCFF3D)
 INCLUDE AOSCE(IGFDE0)
 INCLUDE AOSCE(IGFDE1)
 INCLUDE AOSCE(IGFDV1)
 ORDER IEE0003D
 ORDER IEE0303D
 ORDER IEE5403D
 ORDER IEE0403D
 ORDER IEE7503D
 ORDER IEE5603D
 ORDER IEE5903D
 ORDER IEE6703D
 ORDER IEE7703D
 ORDER IEE6803D
 ORDER IEE6903D
 ORDER IEE6303D
 ORDER IEE6403D
 ALIAS IGG2103D,IGC0503D,IEE2103D,IEE0503D
 ALIAS IEE7603D
 ENTRY IEE0003D
 NAME IGC0003D(R)
//SMP00030 JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC PGM=IEBCOPY,REGION=128K
//** THIS COPY MUST BE DONE ONCE FOR THE SUBSEQUENT LINK EDIT STEP
//SYSPRINT DD  SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//LPALIB   DD  DSN=SYS1.LPALIB,DISP=SHR
//LINKLIB2 DD  DSN=SYS2.LINKLIB,DISP=SHR
 COPY INDD=LPALIB,OUTDD=LINKLIB2
 S M=((IGC0003D,,R))

//SMP00030 JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC ARNIEMOD,FILE=10
//STEP01   EXEC PAN,SO=1
++UPDATE SMP030ZP,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=11
//STEP02   EXEC PAN,SO=1
++UPDATE SMP030,4,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=12
//STEP03   EXEC PAN,SO=1
++UPDATE SMP030A,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=13
//STEP04   EXEC PAN,SO=1
++UPDATE SMP030B,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=14
//STEP05   EXEC PAN,SO=1
++UPDATE SMP030C,3,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=15
//STEP06   EXEC PAN,SO=1
++UPDATE SMP030D,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=16
//STEP07   EXEC PAN,SO=1
++UPDATE SMP030LK,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=35
//STEP02   EXEC PAN,SO=1
++UPDATE SMP030E,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=42
//STEP02   EXEC PAN,SO=1
++UPDATE SMP030F,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=43
//STEP01   EXEC PAN,SO=1
++ADD SMP030DM,ALC,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=47
//STEP01   EXEC PAN,SO=1
++UPDATE SMP030H,1,ALL
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=74
//STEP01   EXEC PAN,SO=1
++ADD SMP030I,ALC,LIST
//       DD    DSN=&MVSFILE,DISP=(OLD,DELETE)

//SMP00030 JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEE6303D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030A
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESA03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030B
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESB03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030C
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESC03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030D
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESD03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030E
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESE03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030F
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESF03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030H
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SYS2.LINKLIB',NAME=IEESH03D,SO=1,
//       OPT=',NCAL,RENT,REUS'
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP030I
//STEP02   EXEC ASMBLR,SO=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP034
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC TESTLINK,LIB='SMP.ACPTLIB',SO=1,OPT=',NCAL,RENT'
 NAME IEAVADDM(R)
//STEP01   EXEC PGM=IEBCOPY
//SYSPRINT DD  SYSOUT=1
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//SYSUT4   DD  UNIT=SYSDA,SPACE=(CYL,(2,2))
//LPAIN    DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSYSB
//LPAOUT   DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSYSA
 COPY INDD=LPAIN,OUTDD=LPAOUT
 S M=((IGC0005A,,R))
//TECTEST JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01 EXEC LISTPDS,LIB='SYS1.AMACLIB',V1=DLIB01
//SYSUDUMP DD SYSOUT=1
//TECMODS  JOB (9999,T009),TECHZ,CLASS=1,MSGCLASS=1
//STEP01 EXEC PGM=IEFBR14
//DD DD DSN=TEC.ARNIEMOD.DATA,DISP=(OLD,DELETE)
//STEP01   EXEC ARNIEMOD,FILE=39
//STEP01   EXEC ARNIEMOD,FILE=36
//STEP01   EXEC PTFZAP,LIB='SYS1.LPALIB',V1=MVSYSA
 NAME IGC0005A IEAVADDM
VER 020E 4B00C850
VER 0552 4110303D
REP 020E 47000000
REP 0552 4110503D

//SMP045  JOB (9999,T009),'TECZZ',CLASS=1,MSGCLASS=1,MSGLEVEL=(0,0)
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP045
//STEP02   EXEC ASMBLR,OPT='DECK,NOOBJECT',SO=1
//COM.SYSPUNCH DD  UNIT=SYSDA,SPACE=(CYL,(2,2)),DSN=&TCAM,DISP=(,PASS)
//STEP02A  EXEC PAN,SO=1
//SYSIN    DD   *
++ADD SMP045A,ALC
//         DD  DSN=&TCAM,DISP=(OLD,DELETE)
//STEP03   EXEC PAN,SO=1
++WRITE WORK,SMP045A
//STEP03A  EXEC ASMBLR,SO=1
//STEP04   EXEC TESTLINK,LIB='SYS1.LINKLIB',OPT=',AC=1',SO=1
//LKED.SYSLIN DD UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)
//       DD *
 ENTRY TCAMI
 NAME TCAMI(R)
//LKED.SYSLIB  DD   DSN=SYS1.TELCMLIB,DISP=SHR
//STEP01   EXEC SMPPUT
//SMPCNTL  DD  *
 UCLIN .
 ADD PTF (SM00045) APPL MOD(TCAMI) DATE(76200) .
 ENDUCL .
//STEP01   EXEC PGM=IEFBR14
//VTAMLST  DD  UNIT=DASD,VOL=SER=SYSLIB,LABEL=EXPDT=99350,
// DISP=(NEW,CATLG),SPACE=(CYL,(5,5,56)),DSN=SYS1.VTAMLST,
// DCB=(RECFM=F,LRECL=80,BLKSIZE=80)

//SMP243   JOB (9999,T009),BBDJP,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP243
//STEP02   EXEC ASMBLR,SO=1
//STEP03   EXEC LINK,SO=1,LIB1=SYS2,OPT=',RENT'
//LKED.SYSLMOD DD   DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=SYSRSA
 ALIAS IGC0024C
 NAME SMP243(R)
 ADD PTF (SM00243) APPL MOD(IGC0024C) DATE(76254) .

//SMP00248 JOB (9999,T009),BBDJP,CLASS=1,MSGCLASS=1
//STEP01   EXEC PAN,SO=1
++WRITE WORK,SMP248
//STEP02   EXEC ASMBLR,SO=1
//COM.SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//             DD   DSN=SYS1.PVTMACS,DISP=SHR
//             DD   DSN=MVS.MACLIB,DISP=SHR
//             DD   DSN=SYS1.AMODGEN,DISP=SHR
//STEP03   EXEC LINK,SO=1,LIB1=SYS2,OPT=',RENT'
//LKED.SYSLMOD DD   DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=SYSRSA
 ALIAS IGC0024H
 NAME SMP248(R)
