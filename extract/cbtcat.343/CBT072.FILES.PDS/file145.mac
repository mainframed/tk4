         TITLE 'TSTTLOOK - LOOK AT TRACE TABLE FOR DASD/ASID USAGE'
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
*        TSTTLOOK - SAMPLE O/S TRACE TABLE TO SEE WHO IS
*                   USING THE DISK DRIVES.
*
*        PURPOSE - FIND THE TURKEY WHO IS KILLING THE ON-LINE
*         SYSTEMS RESPONSE.
*
*        RUNS UNDER DCMS MONITOR.
*        DCMS MACROS: TRMIO, SFMT, FIELD, SFEND, IOCB, TDCB,
*                     XSTART.
*
*        FUTURE PROJECTS WITH PGM:
*         CALC AVG I/O TIME (IO TIME) - (SIO CC=0 TIME) BY DEVICE.
*         NUMB OF CTRL UNIT BUSYS (SIO CC=1) BY DEVICE.
*         SVC TIMINGS - EXCP SVC TIL SIO FOR A CPU.
*         TIME SLICE TIMES-DISPATCH TIL VOLUNTARY/INV. RELEASE CPU.
*         SRB TIMES - SRB DISPATCH TIL NEXT EVENT FOR A CPU.
*         MAP SVC USAGE BY ADDR SPACE.
*         MAP GETMAIN/FREEMAIN SIZE BY ADDR SPACE.
*         MAP PAGE FAULTS.
*         SIGP ACTIVITY.
*         ALLOW DYNAMIC CHANGE OF MINOR TIME, CYCLES TIL REPORT.
*         MULTIPLE DISPLAYS. EG DISPLAY A FOR 5 SEC, B 5 SEC,C,A...
*
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*
*        ANY QUESTIONS:   CLARK HUNTER
*                         CHRYSLER PARTS
*                         26311 LAWRENCE AVE.
*                         CENTERLINE, MICHIGAN 48015
*                         CIMS 426-10-17
*                         PHONE 313-497-0524/548/533.
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
TSTTLOOK CSECT
TSTTLOOK XSTART STAE=YES,LV=DSASIZE      BASING/DYNAMIC WORK
         USING DSA,R13             TELL ASM ABOUT DYNAMIC WORK
         MVC   DSTDCB,0(R1)        SAVE TDCB ADDR
         L     R1,84               TRACE TABLE ANCHOR
         LTR   R1,R1               IS TRACE ON
         BZ    RETURN              NO - EXIT
*->->-> GET STOR FOR COPIED TRACE TABLE
         LM    R2,R3,4(R1)         FIRST/LAST ENTRY
         SR    R3,R2               SIZE -32
         LA    R0,32(R3)           SIZE
         ST    R2,DSRTT            SAVE REAL TT START
         ST    R0,DSRTTSIZ         SAVE REAL TT L'
         ICM   R0,8,=X'01'         SUBPOOL 1
         GETMAIN R,LV=(0)          GET A LOCAL COPY AREA
         ST    R1,DSCTT            SAVE COPIED TRACE TABLE ADDR
         ST    R0,DSCTTSIZ         SAVE COPIED TT L'
*->->-> GET STOR FOR #DASD-ROW BY #ASIDS-COL. ARRAY
         L     R0,=A(DSXRSIZ)      ARRAY SIZE
         ICM   R0,8,=X'01'         SUBPOOL 1
         GETMAIN R,LV=(0)          ASK THE MAN
         ST    R1,DSXREF           SAVE ARRAY START
         BAL   R14,CLRIT           CLEAR TO LO-VALUES
*->->-> GET STOR FOR 3270 BUFR
         LA    R0,79*24            24 ROWS BY 79 COLUMNS
         ICM   R0,8,=X'01'         SUBPOOL 1
         GETMAIN R,LV=(0)          GET CRT AREA
         ST    R1,DSPRBUF          SAVE CRT AREA ADDR
         ST    R0,DSPRBUFS         SAVE CRT AREA L'
         XR    R1,R0               A LITTLE SLIGHT OF HAND
         XR    R0,R1                TO SWAP
         XR    R1,R0                 TWO REGS
         XR    R14,R14             CLEAR SEND REG
         XR    R15,R15             CLEAR SEND L'
         ICM   R15,8,=C' '         SEND FILL CHAR = BLANK
         MVCL  R0,R14              BLANK THE CRT AREA
         ST    R0,DSPRBUFE         R0 LEFT AT CRT AREA +1 AFTER MVCL
*
*->->-> SAMPLE TRACE TABLE
         L     R1,DSPRBUF          CRT AREA
         MVC   79*11+20(40,R1),=CL40'HIT ENTER TO START 1ST 8 SEC SAMPLE
               E'
         BAL   R2,WRITE            PUT OUT START-UP
TRCLOP1  DS    0H                  CLEAR FIELDS FOR A MAJOR CYCLE
*->->-> INIT MINOR CYCLE COUNT
         MVC   MINORCYC,MINORCT    #MINOR CYCLES TIL REPORT
         XC    LASTTIME,LASTTIME   CLEAR TIME STAMP HOLD AREA
TRCLOOP  DS    0H
*->->-> COPY TRACE TABLE TO LOCAL STOR
         LM    R0,R3,DSCTT          GET MVCL REGS
         LR    R4,R0                SAVE START
         MVCL  R0,R2                COPY TRACE TABLE
         LR    R3,R0                SAVE END
         LA    R2,32                SET BXLE INDEX
         SR    R3,R2                END-32 = LAST ENTRY
         L     R15,LASTTIME         GET LAST TIMESTAMP
TRFNDSIO DS    0H                   FIND A GOOD TT ENTRY
         CL    R15,28(R4)           OLD DATA
         BNL   TRFNDNXT             YES-ALREADY SAMPLED
         TM    2(R4),X'70'          SIO ENTRY
         BNZ   TRFNDNXT             NO
         TM    0(R4),X'30'          SIO CC = 0
         BZ    TRHIT                YES - ANALYZE
TRFNDNXT DS    0H                   NEXT TT ENTRY
         BXLE  R4,R2,TRFNDSIO       LOOP
         B     TRCKRPT              SEE IF TIME TO REPORT
TRHIT    DS    0H                   ANALYZE
*->->-> SAVE LAST TIME SO NO REDUNDANT DATA
         CLC   LASTTIME,28(R4)     SAVE OLDEST RECORD LOOKED AT
         BNL   *+10                EARLIER
         MVC   LASTTIME,28(R4)     UPDATE WITH NEW TIME
*->->-> CONVERT DEV ADR TO INDEX  (*-*-* USER DEPENDANT *-*-*)
         LH    R0,2(R4)            GET DEV ADDR
         BAL   R14,TRCONV          GO TO DEV-INDEX CONVERT RTN
         B     TRFNDNXT            +0 = NOT DASD
         MH    R0,=AL2(DSXRSIZ1)   INDEX * ROWSIZE = ROWINDEX
         LR    R14,R0              COPY
         A     R14,DSXREF          INDEX + BASE = ROWADDR
         LH    R0,22(R4)           GET ASID
         SLL   R0,2                * 4
         CH    R0,=AL2(#ASIDS*4-4) CHECK AGAINST LIMIT
         BNH   *+8                 IN LIMIT
         LH    R0,=AL2(#ASIDS*4-4) OVERRIDE TO MAX
         AR    R14,R0              ROWADDR + COLINDEX = ELEMENT
         LH    R0,2(R14)           ELEMENT+2 = MAJOR CYCLE HITS
         AH    R0,=H'1'            BUMP
         STH   R0,2(R14)           BY 1
         B     TRFNDNXT            NEXT TT ENTRY
*->->-> EITHER WAIT OR REPORT
TRCKRPT  DS    0H
         LH    R0,MINORCYC         GET CYCLES TIL REPORT
         BCT   R0,TRWAIT           BRANCH IF MORE LEFT
         B     TRRPT               NONE LET - REPORT
TRWAIT   DS    0H
         STH   R0,MINORCYC         SAVE NEW VALUE
         STIMER  WAIT,BINTVL=MINORTIM        WAIT A LITTLE WHILE
         B     TRCLOOP             SAMPLE TRACE TABLE AGAIN
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*->->-> CONVERT DEV ADDR IN R0 TO INDEX 0-(#DASD-1)
*
*->->-> USER DEPENDANT - USER DEPENDANT - USER DEPENDANT
*
TRCONV   DS    0H
         CLM   R0,2,=X'04'         OPTIONAL DASD CHANNEL
         BNE   *+8                 NO - CONTINUE
         ICM   R0,2,=X'02'         YES- OVERRIDE TO PRIMARY
         SH    R0,=AL2(DASDLO)     SUBRACT LOWEST DASD IN SYS
         BM    TRCOBAD             NEG. - NOT A DASD
         CH    R0,=AL2(#DASD)      CHECK AGAINST # OF DASDS
         BL    4(R14)              LO-DASD, R0=INDEX(0:#DASDS-1)
TRCOBAD  DS    0H                  NOT A DASD
         BR    R14                 +0 RETURN = NOT DASD
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*->->-> CLEAR STORAGE AFTER GETMAIN
CLRIT    DS    0H
         XR    R0,R1               SWAP THE REGS AFTER GETMAIN
         XR    R1,R0               "
         XR    R0,R1               "
         XR    R15,R15             CLEAR SEND FIELD L' AND FILLER
         MVCL  R0,R14              FILL WITH LO-VALUES
         BR    R14                 RETURN
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
*->->-> TIME TO REPORT
TRRPT    DS    0H
*->->-> CLEAR 3270 BUFFER TO BLANKS
         LM    R0,R1,DSPRBUF       GET BUFFER AND L'
         XR    R2,R2               CLEAR SEND ADDR
         LR    R3,R2               CLEAR SEND L'
         ICM   R3,8,=C' '          SET FILL TO BLANK
         MVCL  R0,R2               BLANK 3270 BUFFER
         XC    DSASUSE(#ASIDS),DSASUSE
*->->-> SETUP TO REPORT
         LA    R2,DSLNMAX          GET # OF 3270 DISPLAY LINES
         L     R3,DSPRBUF          GET 3270 BUFFER
         L     R4,DSXREF           GET USAGE ARRAY
         LA    R5,#DASD            GET # OF DASDS IN SYS
         MVC   0(26,R3),=CL26'DASD USAGE BY ASID-AVG USE'
         LA    R3,79(R3)           BUMP PAST TITLE
*->->-> LOOK FOR A NON-ZERO ROW
TRRPLOOP DS    0H
         STM   R2,R5,DSPRLN#       SAVE CURRENT INFO
         OC    0(DSXRSIZ1,R4),0(R4)  SEE IF ROW ZERO
         BZ    TRRPNXTD            YES-UNUSED DASD - SKIP
*->->-> FORMAT DASD ADDR          (*-*-* USER DEPENDANT *-*-*)
         LA    R0,#DASD            # OF DASDS IN SYS
         SR    R0,R5               #DASDS - COUNTDOWN = INDEX
         AH    R0,=AL2(DASDLO)     + LOW DASD ADDR = DASD ADDR
         STH   R0,WD               STOR
         UNPK  WD(5),WD(3)         ZONE THE DASD ADDR
         NC    WD(4),=4X'0F'       KNOCK OFF ZONE PART OF BYTES
         TR    WD(4),=C'0123456789ABCDEF'    XLATE TO PRINTABLE
         MVC   0(3,R3),WD+1        PUT TO CRT BUFFER
*->->-> LOOK THRU ROW
         LA    R2,#ASIDS           GET MAX ASIDS
         LA    R5,(79-4)/7         CALC # OF ENTRIES/LINE
         LA    R3,4(R3)            SKIP OVER DEV ADDR
TRRPASID DS    0H                  LOOK FOR NON-ZERO ASID ELEMENTS
         OC    0(4,R4),0(R4)       ZERO
         BZ    TRRPNXAS            YES-SKIP
         LA    R15,#ASIDS          CALC ASID - MAX
         SR    R15,R2              MINUS COUNTDOWN INDEX = ASID
         CVD   R15,WD              CONVERT TO PRINTABLE
         LA    R14,DSASUSE(R15)    SET BYTES ON TO GIVE ASID-JOBNAME
         MVI   0(R14),1               SUMMARY ON BOTTOM OF TUBE
         UNPK  0(2,R3),WD+6(2)     MAKE ASID PRINTABLE
         OI    1(R3),C'0'          FIX SIGN
         MVI   2(R3),C'-'          CONNECTOR
         LH    R15,0(R4)           GET PREVIOUS AVERAGE USAGE
         AH    R15,2(R4)            PLUS TWICE CURRENT
         AH    R15,2(R4)
         LA    R15,1(R15)          ROUND
         XR    R14,R14             CLEAR WORK
         D     R14,=F'3'           DIVIDE BY 3
         STH   R15,0(R4)           SAVE NEW MOVING AVERAGE
         XC    2(2,R4),2(R4)       CLEAR MAJOR CYCLE HIT COUNT
         CVD   R15,WD              PRINT AVERAGE
         UNPK  3(3,R3),WD+6(2)     "
         OI    5(R3),C'0'          "
         LA    R3,7(R3)            NEXT SLOT ON LINE
         BCT   R5,TRRPNXAS         SEE IF MORE ROOM ON LINE
         B     TRRPNXDA            NO-TERMINATE AND GOTO NEXT DASD
TRRPNXAS DS    0H                  NEXT COL
         LA    R4,4(R4)            NEXT HALF-WORD PAIR
         BCT   R2,TRRPASID         SEE IF MORE ASIDS
TRRPNXDA DS    0H                  NO-NEXT DASD ROW
         LM    R2,R5,DSPRLN#       RESTORE WORK REGS
         LA    R3,79(R3)           NOW BUMP TO NXT 3270 ROW
         BCT   R2,TRRPNXTD         SEE IF MORE LINES LEFT ON CRT
         B     TRRPTEND            NO-FORMAT JOBNAME SUMMARY LINE
TRRPNXTD DS    0H
         STM   R2,R3,DSPRLN#       STOR NEW DASD CTR, 3270 LINE ADR
         LA    R4,DSXRSIZ1(R4)     BUMP R4 TO NEXT ROW
         BCT   R5,TRRPLOOP         SEE IF MORE DASDS
TRRPTEND DS    0H                  NO-FORMAT JOBNAME SUMMARY
         LA    R4,DSASUSE          GET ASID USAGE MAP
         LA    R2,#ASIDS           GET # ASIDS
         L     R3,DSPRBUF          GET 3270 BUFFER
         LA    R3,79*22(R3)        GET ROW 23
         LA    R5,79/12            GET # JOBNAMES ON A ROW
         STM   R2,R5,DSPRLN#       SAVE WORK DATA
TRRAASID DS    0H                  SEE IF ASID USED ANY DASD
         CLI   0(R4),0             SEE IF ASID USED ANY DASD
         BE    TRRANXAS            NO-SKIP FORMAT
         LA    R0,#ASIDS           MAX ASIDS
         SR    R0,R2               MAX - COUNTDOWN CTR = INDEX
         CVD   R0,WD               MAKE PRINTABLE
         UNPK  0(2,R3),WD+6(2)     "
         OI    1(R3),C'0'          "
         MVI   2(R3),C'-'          CONNECTOR
         SLL   R0,2                ASID * 4
         L     R14,16              CVT
         L     R14,556(R14)        ASVT
         LA    R14,524(R14)        ASVT
         AR    R14,R0              ASVTQ
         L     R15,0(R14)          GET ASCB
         LTR   R15,R15             IS IT THERE NOW
         BZ    TRRABMP             NO - NONAME
         L     R14,172(R15)        PTR TO JOBNAME FOR BATCH
         LTR   R14,R14             BATCH
         BZ    TRRASML             NO-TRY START/MOUNT/LOGON
         MVC   3(8,R3),0(R14)      MOVE JOBNAME IN
         B     TRRABMP             JUMP
TRRASML  DS    0H
         L     R14,176(R15)        PTR TO JOBNAME
         LTR   R14,R14             IS IT THERE
         BZ    TRRABMP             NO-LEAVE JOBNAME BLANK
         MVC   3(8,R3),0(R14)      MOVE IT
TRRABMP  DS    0H
         LA    R3,12(R3)           NEXT COLUMN IN 3270 ROW
         BCT   R5,TRRANXAS         NEXT JOBNAME FOR ROW
         B     TRRANXLN            OUT OF ROW
TRRANXAS DS    0H
         LA    R4,1(R4)            NEXT ASID BYTE
         BCT   R2,TRRAASID         CHECK NEXT ASID BYTE
         B     TRRAEND             PUT OUT SCREEN
TRRANXLN DS    0H
         L     R3,DSPRLN@          RESTORE R3 TO START OF ROW
         LA    R3,79(R3)           BUMP TO NEXT ROW
         C     R3,DSPRBUFE         OFF END OF BUFFER
         BNL   TRRAEND             YES-WRITE SCREEN
         ST    R3,DSPRLN@          SAVE CURRENT ROW ADDR
         L     R5,DSPRCOL#         GET # JOBNAMES ON ROW
         B     TRRANXAS            BUMP ASID BYTE AND FORMAT
TRRAEND  DS    0H
         L     R3,DSPRBUF          GET 3270 BUFFER
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=0(R3)
         L     R1,DSTDCB           GET TDCB
         CLI   TDCBAID-TDCB(R1),AIDPA1
         BNE   TRCLOP1             NO PA1, NO END
RETURN   DS    0H                  RETURN TO SELECT
         L     R13,4(R13)          PREV SAVE
         RETURN (14,12),RC=0       RETURN
WRITE    DS    0H                  CONVERSATIONAL WRITE
         L     R3,DSPRBUF          3270 BUFFER
         TRMIO IOCB,FORMAT=SCR1,IMAGE=0(R3),BEEP=YES
         L     R1,DSTDCB           GET TDCB
         MVI   TDCBAID-TDCB(R1),0  CLEAR AID
         BR    R2                  RETURN
*->->-> S T A T I C
         LTORG
MINORTIM DC    F'50'               1/2 SEC BETWEEN MINOR SAMPLES
MINORCT  DC    AL2(#MINOR)         # OF MINOR CYCLES BEFORE REPORT
SCR1     SFMT                      SCREEN FORMAT
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79,CURSOR=YES
         SFEND
IOCB     IOCB
         TDCB
*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*
DSA      DSECT                     DYNAMIC STORAGE AREA
         DS    9D                  O/S SAVE AREA
DSCTT    DS    F                   COPIED TT ADDR
DSCTTSIZ DS    F                   L' COPIED TT
DSRTT    DS    F                   REAL TRACE TABLE ADDR
DSRTTSIZ DS    F                   L' REAL TT (SAME AS COPIED)
DSCTIM   DS    F                   OVERRIDE TIME BETWEEN SAMP.(SOMEDAY)
MINORCYC DS    H                   # OF MINOR CYCLES TIL REPORT
LASTTIME DS    F                   SEQ. CHECK ENTRIES(NO DUPS)
DASDLO   EQU   X'240'              *-*-*USER DEP.*-*-* LOWEST DASD ADDR
DASDHI   EQU   X'25F'              *-*-*USER DEP.*-*-* HIGHEST DASD ADR
#ASIDS   EQU   48                  MAX ASIDS MONITORED
#DASD    EQU   DASDHI-DASDLO+1     # OF DASDS IN SYS
#MINOR   EQU   16                  # OF MINOR CYCLES TIL REPORT
DSXREF   DS    F                   ADDR OF DEV/ASID USAGE ARRAY
DSXRSIZ1 EQU   #ASIDS*4+4          LENGTH OF A ROW,EXTRA FOR 0 INDEXING
DSXRSIZ  EQU   #DASD*DSXRSIZ1      LENGTH OF WHOLE ARRAY
DSPRBUF  DS    F                   3270 BUFFER 24 ROWS BY 79 CHAR. COLS
DSPRBUFS DS    F                   SIZE OF 3270 BUFFER
DSPRBUFE DS    F                   1 BYTE BEYOND END OF 3270 BUFR
WD       DS    D                   DOUBLE WORD WORKER
DSPRLN#  DS    F                   COUNT DOWN CTR. FOR 3270 ROW
DSPRLN@  DS    F                   ADDR OF 3270 BUFFER ROW
DSPRROW  DS    F                   ADDR OF DASD/ASID ARRAY ROW
DSPRCOL# DS    F                   COUNTDOWN CTR FOR ARRAY ROW
DSLNMAX  EQU   21                  MAX DISPLAY LINES FOR ARRAY
DSTDCB   DS    F                   TDCB FROM CALLER
DSASUSE  DS    (#ASIDS)X           1 IF ASID APPEARS IN MAIN DISPLAY
DSASIZE  EQU   *-DSA               SIZE OF DSA
         END
