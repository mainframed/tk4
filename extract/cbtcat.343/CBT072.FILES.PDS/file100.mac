*          DATA SET ANBMONU    AT LEVEL 001 AS OF 12/07/76
         TITLE 'MONU - MONITOR SELECTED UCBS'
MONU     CSECT
         B     ENTRY-MONU(15)
         DC    X'06',CL7'MONU'
ENTRY    EQU   *
*
**  ROUTINE MONITORS UCBS - LINKAGE IS
**  MONU(INPUT,MONRT,TOD,FNDVAL,FNDPRS,FNDTXT)
*
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
         ST    13,SAVE+4
         LR    RW3,13
         LA    13,SAVE
         ST    13,8(RW3)
*
         LM    RW3,RW5,0(1)            LOAD PARAMS ADDRESSES
         MVC   ADRT(4),0(RW4)          ADDESSOF MONRT
         MVC   TOD(4),0(RW5)           TIME OF DAY
*
**  FIRST TIME THRU?
*
         TM    FIRST,X'FF'             TEST FLAG
         BNZ   NOTFIRST
         MVI   FIRST,X'FF'             SET FLAG
         L     RW3,0(RW3)              ADDRESS OF INPUT
         LM    RW4,RW6,12(1)           OTHER PARAMS
         L     RW4,0(RW4)              FNDVAL
         L     RW5,0(RW6)              FNDTXT
         SR    RW6,RW6                 ZERO INDEX
READIN   EQU   *
*
**  READ IN NEXT CARD
*
         LA    RW1,ARGLST              POINT AT PARAM LIST
         LR    RW15,RW3                INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,IFLAG               LOAD EOF FLAG
         LTR   RW7,RW7                 TEST
         BNZ   ENDATA                  BRANCH IF EOF
*
**  LOOK FOR JOB=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,4                   LOAD KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY4                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOTJOB                  NO,BRANCH
*
**  JOBNAME FOUND - FIND ASID
*
         L     RW7,16                  CVT
         L     RW7,556(RW7)            ASVT
         LA    RW7,528(RW7)            ASCB QUEUE
NXTASCB  EQU   *
         L     RW8,0(RW7)              ASCB ADDRESS
         LA    RW8,0(RW8)              REMOVE TOP BYTE
         LTR   RW8,RW8                 ZERO?
         BZ    READIN                  YES,TRY NEXT CARD
         TM    0(RW7),X'80'            ASCB IN USE?
         BNZ   INCASCB                 NO,BRANCH
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   NAMEOK                  NO,BRANCH
         L     RW9,176(RW8)            LOAD OTHER POINTER
NAMEOK   EQU   *
         CLC   VALUE(8),0(RW9)         CORRECT JOBNAME?
         BE    GOTJOB                  YES,BRANCH
INCASCB  EQU   *
         LA    RW7,4(RW7)              INCREMENT POINTER
         B     NXTASCB                 TRY NEXT ASCB
GOTJOB   EQU   *
         LH    RW7,36(RW8)             PICK UP ASID
         STH   RW7,ASIDS(RW6)          STORE IN OPTIONS
         B     NOASID
NOTJOB   EQU   *
*
**  LOOK FOR ASID=
*
         LA    RW7,5                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY3                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW4                FNDVAL
         BALR  14,15                   LINK TO ROUTINE
         L     RW7,THERE
         LTR   RW7,RW7                 TEST PRESENT?
         BZ    NOASID                  BRANCH IF NOT THERE
*
**  ASID= FOUND - STORE IN OPTIONS
*
         L     RW7,VALUE               LOAD ASID
         STH   RW7,ASIDS(RW6)          STORE ASID
NOASID   EQU   *
*
**  LOOK FOR TYPE=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,5                   KEY LENGTH
         ST    RW7,KEYLEN              STORE
         LA    RW7,KEY5                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOTYPE                  NO,BRANCH
*
**  TYPE= FOUND - SET UP MASK
*
         LA    RW7,TAPE                POINT AT FIRST TYPE
         SR    RW8,RW8                 ZERO COUNTER
NXTYPE   EQU   *
         CLC   VALUE(4),0(RW7)         THIS TYPE?
         BE    GOTYPE                  YES,BRANCH
         LA    RW8,1(RW8)              INCREMENT COUNTER
         LA    RW7,4(RW7)              INCREMENT POINTER
         C     RW8,=F'8'               END?
         BL    NXTYPE                  NO,BRANCH
         B     READIN                  TRY NEXT CARD
GOTYPE   EQU   *
*
**  TYPE FOUND - SET MASK
*
         SR    RW9,RW9
         IC    RW9,MASK(RW8)           INSERT MASK
         STH   RW9,TYPE(RW6)           STORE MASK
NOTYPE   EQU   *
*
**  LOOK FOR UNIT=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,KEY1                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOUNIT                  NO,BRANCH
         L     RW7,VALUE               PICK UP UNIT
         SLL   RW6,1                   DOUBLE INDEX
         ST    RW7,UNIT(RW6)           STORE UNIT
         SRL   RW6,1                   RESET INDEX
NOUNIT   EQU   *
*
**  LOOK FOR VOLSER
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW7,7                   KEY LENGTH
         ST    RW7,KEYLEN              STORE LENGTH
         LA    RW7,KEY2                POINT AT KEY
         ST    RW7,KEYAD               STORE IN PARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    NOVOLS                  NO,BRANCH
*
**  VOLSER FOUND
*
         LA    RW7,VOLSER              POINT AT VOLSER
         AR    RW7,RW6                 ADD INDEX
         AR    RW7,RW6
         AR    RW7,RW6
         MVC   0(6,RW7),VALUE          MOVE IN VOLSER
NOVOLS   EQU   *
*
**  INCREMENT POINTERS AND READ NEXT CARD
*
         LA    RW6,2(RW6)              INCREMENT INDEX
         L     RW7,ICT                 LOAD COUNTER
         LA    RW7,1(RW7)              INCREMENT
         ST    RW7,ICT                 STORE
         C     RW7,=F'10'              LIMIT?
         BL    READIN                  NO,GET NEXT CARD
*
**  LIMIT REACHED
*
ENDATA   EQU   *
         MVI   ANY,X'FF'               SET FLAG
         L     RW7,ICT                 LOAD COUNTER
         LTR   RW7,RW7                 TEST
         BNZ   NOTFIRST                NO,BRANCH
         MVI   ANY,X'00'               SET FLAG TO NONE
NOTFIRST EQU   *
         TM    ANY,X'FF'               ANY SELECTED?
         BZ    RETURN
*
**  FIND START OF UCB TABLE
*
         L     RW3,16                  ADDRESS OF CVT
         L     RW3,40(RW3)             POINTER TO UCB LOOKUP TABLE
*
**  CYCLE THRU TABLE LOGGING UCBS
*
NXTUCB   EQU   *
         LH    RW4,0(RW3)              AADRESS OF NEXT UCB
         LTR   RW4,RW4                 END?
         BM    RETURN
         LTR   RW4,RW4                 VALID?
         BZ    INCUCB
         LA    RW6,11                  LOAD LENGTH OD DATA
         MVC   UCBDAT(24),0(RW4)       MOVE UCB
         L     RW5,20(RW4)             ADDRESS OF UCB EXT
         LA    RW5,0(RW5)              REMOVE TOP BYTE
         MVC   UCBEXT(16),0(RW5)       MOVE UCB EXT
         TM    18(RW4),X'A0'           DA/TAPE DEVICE?
         BZ    NOTDD
*
**  DEVICE DEPENDANT SECTION - DA TAPE
*
         MVC   UCBDDS(24),24(RW4)      DEVICE DEPENDANT SECTION
         LA    RW6,17                  LOAD DATA LENGTH
NOTDD    EQU   *
         ST    RW6,LENGTH              STORE DATA LENGTH
*
**  CHECK IF UCB REQUIRED
*
         L     RW4,ICT                 NO OF OPTIONS
         SR    RW5,RW5                 INDEX
NXTOPT   EQU   *
*
**  TEST ASID
*
         LH    RW6,ASIDS(RW5)          PICK UP ASID
         LTR   RW6,RW6                 TEST
         BM    ALLASID                 ALL REQUIRED
         CH    RW6,UCBEXT+14           CORRECT ASID?
         BNE   INCOPT                  NO,BRANCH
ALLASID  EQU   *
*
**  TEST TYPE
*
         LH    RW6,TYPE(RW5)           LOAD TYPE MASK
         LTR   RW6,RW6                 TEST
         BM    ALLTYPE                 ALL REQUIRED
         SR    RW7,RW7
         IC    RW7,UCBDAT+18           INSERT UCB TYPE
         SRL   RW7,8                   SHIFT TO BOTTOM OF REGISTER
         NR    RW7,RW6                 AND WITH MASK
         CR    RW7,RW6                 CORRECT?
         BNE   INCOPT                  YES,BRANCH
ALLTYPE  EQU   *
*
**  TEST UNIT
*
         SLL   RW5,1                   SHIFT INDEX
         LA    RW6,UNIT(RW5)           POINT AT UNIT
         SRL   RW5,1                   RESET INDEX
         CLC   0(3,RW6),NULL           SET?
         BE    ALLUNIT                 NO,BRAMCH
         CLC   0(3,RW6),UCBDAT+13      CORRECT UNIT?
         BNE   INCOPT                  NO,BRANCH
ALLUNIT  EQU   *
*
**  TEST VOLSER
*
         LA    RW6,VOLSER(RW5)         GET ADDRESS OF
         AR    RW6,RW5                 VOLSER
         AR    RW6,RW5
         CLC   0(6,RW6),NULL           SET?
         BE    WANTED                  NO,WANTED
         TM    UCBDAT+18,X'A0'         DA OR TAPE?
         BZ    INCOPT                  NO,BRANCH
         CLC   0(6,RW6),UCBDDS+4         CORRECT VOLSER?
         BE    WANTED                  YES BRANCH
INCOPT   EQU   *
*
**  NOT WANTED THIS OPTION - TRY NEXT
*
         LA    RW5,2(RW5)              INCREMENT INDEX
         BCT   RW4,NXTOPT              TRY NEXT
         B     NOTHIS                  NOT WANTED
WANTED   EQU   *
*
**  WRITE RECORD
*
         LA    RW1,ADARGS              POINT AT PARAMS
         L     RW15,ADRT               GET ADDRESS OF MONRT
         BALR  14,15                   LINK TO MONRT
NOTHIS   EQU   *
*
**  POINT AT NEXT UCB
*
INCUCB   EQU   *
         LA    RW3,2(RW3)              INCREMENT POINTER
         B     NXTUCB
*
**  RETURN
*
RETURN   EQU   *
         L     13,4(13)
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  STORAGE AND CONSTANTS
*
SAVE     DS    18F
ADRT     DS    F
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TOD)
         DC    A(FLAG)
NAME     DC    CL8'MONU'
LENGTH   DS    F
FLAG     DC    F'0'
TOD      DS    F
UCBDAT   DS    6F
UCBEXT   DS    4F
UCBDDS   DS    6F
ARGLST   DC    A(NAME)
         DC    A(BUFFER)
         DC    A(IFLAG)
BUFFER   DC    CL80' '
IFLAG    DC    F'0'
ARGS     DC    A(LENBUF)
         DC    A(BUFFER)
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
ICT      DC    F'0'
LENBUF   DC    F'80'
KEYLEN   DS    F
THERE    DS    F
VALUE    DS    2F
NULL     DC    CL8' '
KEY1     DC    CL8'UNIT='
KEY2     DC    CL8'VOLSER='
KEY3     DC    CL8'ASID='
KEY4     DC    CL8'JOB='
KEY5     DC    CL8'TYPE='
ASIDS    DC    10H'-1'
TYPE     DC    10H'-1'
UNIT     DC    10CL4' '
VOLSER   DC    10CL6' '
TAPE     DC    CL4'TAPE'
         DC    CL4'COMM'
         DC    CL4'DA'
         DC    CL4'DISP'
         DC    CL4'UREC'
         DC    CL4'CHAR'
         DC    CL4'CTCA'
MASK     DC    X'80402010080441'
FIRST    DC    X'00'
ANY      DC    X'00'
         END
