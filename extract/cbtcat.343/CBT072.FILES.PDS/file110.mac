*          DATA SET CBT455     AT LEVEL 001 AS OF 06/19/77
*          DATA SET CBT455     AT LEVEL 009 AS OF 04/11/77
//TEC101 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C
//ASMBLR       PROC OBJ=NODECK,K=256,CC=4,SO=D,P=IEV90
//COM          EXEC PGM=&P,REGION=&K.K,COND=(&CC,LT),
//             PARM='LOAD,LINECNT=76,&OBJ'
//SYSLIB       DD   DISP=SHR,DSN=CFMS.MAC
//             DD   DISP=SHR,DSN=SYS1.MACLIB
//             DD   DISP=SHR,DSN=CBT.MACLIB
//SYSPRINT     DD   SYSOUT=&SO,
//             DCB=(RECFM=FBM,LRECL=121,BLKSIZE=12221)
//SYSPUNCH     DD   SYSOUT=B,DCB=(RECFM=FB,LRECL=80,BLKSIZE=12240)
//SYSUT1       DD   UNIT=SYSDA,SPACE=(CYL,(30,2))
//SYSLIN       DD   DSN=&LOADSET,UNIT=SYSDA,SPACE=(CYL,(5,1)),
//             DISP=(MOD,PASS),DCB=BLKSIZE=12240
//SYSIN        DD   DISP=(OLD,DELETE),DSN=&WORK
//SYSABEND  DD SYSOUT=&SO
// PEND
//TESTLINK     PROC OPT=,NAME=RUN,CC=4,SO=D,LIB='TEST.LOAD'
//LKED         EXEC PGM=IEWL,REGION=256K,COND=(&CC,LT),
//             PARM='XREF,LIST&OPT',DPRTY=(13,0)
//SYSPRINT     DD   SYSOUT=&SO
//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(TRK,(10,5)),
//             DCB=OPTCD=C
//SYSLMOD      DD   DISP=SHR,DSN=&LIB.(&NAME)
//SYSABEND  DD  SYSOUT=C
//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)
//             DD   DDNAME=SYSIN
//SYSLIB       DD   DISP=SHR,DSN=SYS1.COBLIB
//             DD   DISP=SHR,DSN=PROD.UTIL
//             DD   DISP=SHR,DSN=SYS1.TELCMLIB
//             DD   DISP=SHR,DSN=SYS1.FORTLIB
//             DD   DISP=SHR,DSN=SYS2.LINKLIB
//PRODLIB      DD   DISP=SHR,DSN=PROD.LOAD
//TESTLIB      DD   DISP=SHR,DSN=TEST.LOAD
// PEND
//STEP01 EXEC ASMBLR,SO=C
         TITLE 'IGC0905A -   ABEND/SNAP USER EXIT'
         MACRO
&NAME    ABMSG &S
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
         AIF   ('&S' EQ 'S').SPACE
         MEXIT
.SPACE   ANOP
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
         MEND
         EJECT
*   ---------------------   IGC0905A   ----------------------------
*
*                       VERSION     2.1
*
*                       APRIL  11, 1977
*
*        FUNCTION -    TO FORMAT DATA MANAGEMENT CONTROL BLOCKS USING
*                      THE SNAP/ABDUMP EXIT PROVIDED BY IBM.  FOR
*                      DOCUMENTATION ON THIS INTERFACE SEE SUPERVISOR
*                      PERFORMANCE # 1 NEWSLETTER  (VS2.03.805).
*                      TNL GN28-2725 UPDATE TO GC28-0627-1  OS/VS
*                      SYSTEM PROGRAMMING LIBRARY -  JOB MANAGEMENT.
*
*        OPERATION -   IGC0905A OPERATES IN AN ESTAE ENVIRONMENT TO
*                      TRAP OUT ERRORS IN FORMATTING CONTROL BLOCKS.
*                      IF DATA MANAGEMENT CONTROL BLOCK PRINTING IS NOT
*                      DESIRED A SPECIAL DD CARD CAN BE ADDED TO ANY
*                      STEP TO BYPASS PRINTING.
*                      THE DD CARD HAS THE FOLLOWING FORMAT -
*
*                            //NODMDUMP  DD  DUMMY
*
*                      ABEND CODE CHECKING IS DONE, AND FOR THE CODES
*                      IN THE TABLE, THE CORE PRINT FOLLOWING THE
*                      FORMATTED CONTROL BLOCKS IS SUPPRESSED.
*                      TO BYPASS SUPPRESSION OF THE DUMP FOR A
*                      PARTICULAR STEP, A SPECIAL DD CARD CAN BE ADDED.
*                      THE DD CARD HAS THE FOLLOWING FORMAT -
*
*                            //NOCCDUMP DD DUMMY
*
*                      THE FORMAT OF THE OUTPUT OF THIS ROUTINE IS
*                      BEST DOCUMENTED BY TAKING SAMPLE DUMPS.
*
*        COMMENTS  -   IF YOU HAVE ANY PROBLEMS WITH VABDUMP PLEASE
*                      CONTACT ARNOLD CASINGHINO AT THE BELOW
*                      ADDRESS. IF YOU HAVE ANY COMMENTS OR SUGGESTIONS
*                      ON HOW TO IMPROVE THE CODE OR ADDITIONAL
*                      ENHANCEMENTS YOU WOULD LIKE TO SEE PLEASE
*                      FORWARD TO THE BELOW ADDRESS
*                      IF YOU MAKE ANY MODIFICATIONS TO THE CODE
*                      WE WOULD VERY MUCH APPREICATE A COPY OF SAME
*
*                      ARNOLD CASINGHINO
*                      CONNECTICUT BANK & TRUST COMPANY
*                      TECHNICAL SUPPORT SECTION
*                      99 FOUNDERS PLAZA
*                      EAST HARTFORD,
*                      CONNECTICUT   06108
*
*                      1-203-244-4657 OR 1-203-244-4470
*
*
*********************************************************************
         EJECT
IGC0905A CSECT
         SAVE  (14,12)
         LR    R3,R15
         LA    R5,4095(0,R3)       NEXT BASE ADDR
         LA    R5,1(0,R5)
         USING IGC0905A,R3,R5
         LR    R2,R1               SAVE PARM ADDR
         L     R0,SIZE             LOAD GETMAIN SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         ST    R13,4(0,R1)
         LR    R13,R1              ADDRESS WORK AREA
         USING SAVE,R13
         L     R4,0(0,R2)          LOAD TCB ADDR
         L     R11,8(0,R2)         PRINT AREA ADDR
         L     R1,12(0,R2)         LOAD PRINT ROUTINE ADDR
         ST    R1,PENTRY           SAVE PRINT ROUTINE ADDR
         BAL   R10,DUMPCHK
         BAL   R10,HDRPRINT        GO PRINT HEADERS
         EJECT
         LR    R10,R13
         ESTAE ESTAEXIT,CT,PARAM=(10)
         XC    ESTAECNT,ESTAECNT
         LA    R1,RETURN           LOAD RETURN ADDR
         STM   R0,R15,ESTAESAV     SAVE RETURN REGS
         L     R6,8(0,R4)          LOAD ADDR 1ST DEB
         LA    R6,0(0,R6)
         LTR   R6,R6               ANY DEBS
         BNZ   DEBCHK              YES
         MVC   0(60,R11),NOCBMSG   NO DM CTL BLOCKS
         ABMSG S
         ABMSG S
         EJECT
RETURN   LA    R1,RETURN1          NEXT RETURN POINT
         LA    R7,USERAREA         LOAD USER ROUTINE WORKAREA ADDR
         LA    R8,FORMAT           LOAD FORMAT ROUTINE ADDR
         ST    R8,FENTRY           SAVE FORMAT ROUTINE ADDR
         STM   R0,R15,ESTAESAV     SAVE ALL REGS
         L     R15,=V(USERFORM)    LOAD USER CONTROL BLOCK FORMAT RTN
         LTR   R15,R15             ANY ROUTINE
         BZ    RETURN1             NO, CONTINUE
         BALR  R14,R15             GO TO IMS EXIT
         LM    R0,R15,ESTAESAV
         SPACE 3
RETURN1  CLI   CCFLAG,X'00'        BYPASS COMPLETION CODE CHECK
         BE    TERMINAT            YES, EXIT
         LA    R6,ABENDTAB         ABEND SUPPRESSION TABLE
         SPACE 3
RETURN2  CLC   0(3,R6),=F'0'       END OF TABLE ENTRIES
         BE    RETURN3             YES, EXIT
         CLC   0(3,R6),17(R4)      COMPLETION CODE MATCH
         BE    RETURN4             YES, BYPASS DUMP
         LA    R6,3(0,R6)          NEXT TABLE ENTRY
         B     RETURN2
         EJECT
RETURN3  MVI   CCFLAG,X'00'        ALLOW REST OF DUMP
         B     TERMINAT            EXIT
         SPACE 3
RETURN4  MVC   0(60,R11),NODMPMSG
         ABMSG S
         MVC   0(60,R11),SUPPMSG
         ABMSG S
         ABMSG S
         SPACE 3
TERMINAT ESTAE 0
         SR    R9,R9               LOAD
         IC    R9,CCFLAG              RETURN CODE
         LR    R1,R13
         L     R13,SAVE+4
         L     R0,SIZE             LOAD GETMAIN SUBPOOL AND LENGTH
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R9              LOAD RETURN CODE
         RETURN (14,12),RC=(15)
         EJECT
DUMPCHK  SR    R14,R14
         L     R15,12(0,R4)        TIOT ADDR
         LA    R15,24(0,R15)       DD ENTRIES
         MVI   CCFLAG,X'04'        COMPLETION CODE FLAG SET
         SPACE 3
DUMPCHK1 CLC   4(8,R15),=CL8'NODMDUMP'  NO DUMP DD ENTRY
         BE    DUMPCHK3            YES, CONTINUE
         CLC   4(8,R15),=CL8'NOCCDUMP'  NO COMP CODE CHECK DD
         BE    DUMPCHK4            YES, CONTINUE
         SPACE 3
DUMPCHK2 IC    R14,0(0,R15)        DD ENTRY LENGTH
         LTR   R14,R14             TIOT END
         BCR   8,R10               YES, EXIT
         AR    R15,R14             NEXT ENTRY ADDR
         B     DUMPCHK1
         SPACE 3
DUMPCHK3 CLC   18(2,R15),=X'0000'  DUMMY, DYNAM, OR JES2
         BNE   DUMPCHK2            NO, CHECK NEXT
         TM    3(R15),X'12'        DYNAM OR JES2
         BNZ   DUMPCHK2            YES, CHK NEXT
         B     RETURN3             EXIT
         SPACE 3
DUMPCHK4 MVI   CCFLAG,X'00'        SET NO COMP CODE CHECK
         B     DUMPCHK2            CONTINUE
         EJECT
DEBCHK   TM    24(R6),X'0F'        DEBID VALID
         BO    DEBCHK3             YES
         SPACE 3
DEBCHK1  MVC   0(60,R11),BADEBMSG
         ABMSG S
         ABMSG S
         SPACE 3
DEBCHK2  L     R6,4(0,R6)          NEXT DEB
         LA    R6,0(0,R6)
         LTR   R6,R6               ANY MORE DEBS
         BZ    RETURN              NO
         B     DEBCHK
         EJECT
DEBCHK3  L     R7,24(0,R6)         DCB ADDR
         LA    R7,0(0,R7)
         LTR   R7,R7
         BZ    DEBCHK1             NO DCB ADDR, ERROR MSG
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DDFORM          FORMAT DD INFO
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DEBFORM         FORMAT DEB
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,DCBFORM         FORMAT DCB
         BAL   R10,ESTAESET
         BAL   R10,JFCBFORM        GO FORMAT JFCB
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,UCBFORM         FORMAT UCB
         BAL   R10,ESTAESET
         BAL   R10,RECFORM         GO FORMAT CURRENT RECORD
         CLI   0(R7),X'A0'         ACB
         BE    DEBCHK4             YES, NO IOB MSG
         TM    26(R7),X'62'        PS, DA, OR PO
         BZ    DEBCHK4             NO, NO IOB MSG
         BAL   R10,ESTAESET        SET UP ESTAE RETURN
         BAL   R10,IOBFORM         FORMAT IOB
         ABMSG S
         B     DEBCHK2
         SPACE 3
DEBCHK4  MVC   0(60,R11),IOBHDR
         ABMSG S
         MVC   0(60,R11),NOIOBMSG
         ABMSG S
         ABMSG S
         ABMSG S
         B     DEBCHK2             NEXT DEB
         EJECT
DDFORM   LH    R2,40(0,R7)         TIOT OFFSET
         SR    R8,R8               CLEAR UCB ADDR
         MVC   DDMSG,DDMSGX
         MVC   DCBMSG,DCBMSGX
         MVC   EXTMSG,EXTMSGX
         MVC   UNITMSG,UNITMSGX
         MVC   CCHHMSG,CCHHMSGX
         LTR   R2,R2
         BP    DDFORM1             DCB OPEN, CONTINUE
         MVC   0(60,R11),DDNOPMSG
         ABMSG S
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM1  L     R1,12(0,R4)         TIOT ADDR
         LA    R2,0(R2,R1)         OFFSET INTO TIOT
         MVC   DDNAME(8),4(R2)     DDNAME TO MSG
         MVC   RECLEN(4),=6C'*'
         MVC   LRECL(5),=6C'*'
         MVC   BLKSIZE(5),=6C'*'
         XC    JFCBADDR,JFCBADDR
         MVC   JFCBADDR+1(3),12(R2) SAVE JFCB ADDR
         L     R1,JFCBADDR         LOAD JFCB ADDR
         LTR   R1,R1               ANY JFCB PRESENT
         BZ    DDFORM1A            NO,BYPASS PRINT
         LA    R1,16(0,R1)         POINT TO REAL JFCB START
         ST    R1,JFCBADDR         SAVE ACTUAL ADDR
         MVC   DSNAME(44),0(R1)    MOVE DSNAME TO MSG
         LH    R14,104(0,R1)       LRECL
         CVD   R14,DOUBLE
         UNPK  LRECL(5),DOUBLE+5(3)
         OI    LRECL+4,X'F0'
         LH    R14,102(0,R1)       BLKSIZE
         CVD   R14,DOUBLE
         UNPK  BLKSIZE(5),DOUBLE+5(3)
         OI    BLKSIZE+4,X'F0'
         EJECT
DDFORM1A TM    3(R2),X'02'         SUB-SYS DATASET
         BZ    DDFORM2             NO, CONTINUE
         MVC   DDUNIT,=C'JES'
         MVC   DDVOL,=C'IN/OUT'
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM2  TM    3(R2),X'10'         DD DYNAM
         BZ    DDFORM3             NO, CONTINUE
         MVC   DDUNIT,=C'DYN'
         MVC   DDVOL,=CL6'ALLOC'
         B     DDFORM5             GO FORMAT DCB INFO
         EJECT
DDFORM3  CLC   18(2,R2),=X'0000'   DUMMY
         BNE   DDFORM4             NO, CONTINUE
         MVC   DDUNIT,=C'***'
         MVC   DDVOL,=CL6'DUMMY'
         B     DDFORM5             GO FORMAT DCB INFO
         SPACE 3
DDFORM4  MVI   DDUNIT,X'FF'        INDICATE REAL UNIT TO PROCESS
         SPACE 3
DDFORM5  MVC   DSORG,=C'PS'
         TM    26(R7),X'40'        PS
         BO    DDFORM6
         MVC   DSORG,=C'PO'
         TM    26(R7),X'02'        PO
         BO    DDFORM6
         MVC   DSORG,=C'IS'
         TM    26(R7),X'80'        IS
         BO    DDFORM6
         MVC   DSORG,=C'DA'
         TM    26(R7),X'20'        DA
         BO    DDFORM6
         MVC   DSORG,=C'CX'
         TM    26(R7),X'10'        CX
         BO    DDFORM6
         MVC   DSORG,=C'AM'
         TM    26(R7),X'08'        AMB
         BO    DDFORM6
         MVC   DSORG,=C'TX'
         TM    27(R7),X'40'        TX
         BO    DDFORM6
         MVC   DSORG,=C'TQ'
         TM    27(R7),X'20'        TQ
         BO    DDFORM6
         MVC   DSORG,=C'TR'
         TM    27(R7),X'04'        TR
         BO    DDFORM6
         MVC   DSORG,=C'AC'
         TM    27(R7),X'08'        ACB
         BO    DDFORM6
         MVC   DSORG,=C'**'
         EJECT
DDFORM6  CLI   0(R7),X'A0'         ACB
         BE    DDFORMA1            YES, GO PROCESS
         MVI   RECFM,C'*'          SET DEFAULT RECFM
         CLI   0(R7),X'40'         AMB
         BE    DDFORMA3
         TM    36(R7),X'C0'
         BZ    DDFORM7             NO RECFM
         MVI   RECFM,C'U'          UNDEFINED
         BO    DDFORM7
         MVI   RECFM,C'F'          FIXED
         TM    36(R7),X'80'
         BO    DDFORM7
         MVI   RECFM,C'V'          VARIABLE
         SPACE 3
DDFORM7  LA    R1,RECFM+1          POINT TO NEXT BYTE
         TM    36(R7),X'10'        BLOCKED
         BZ    DDFORM8             NO
         LA    R1,RECFM+2
         MVI   RECFM+1,C'B'
         SPACE 3
DDFORM8  MVI   0(R1),C'S'
         TM    36(R7),X'08'        SPANNED
         BO    DDFORM9
         MVI   0(R1),C'A'
         TM    36(R7),X'04'        ASA
         BO    DDFORM9
         MVI   0(R1),C'M'
         TM    36(R7),X'02'        MACHINE
         BO    DDFORM9
         MVI   0(R1),C' '
         EJECT
DDFORM9  TM    26(R7),X'C2'        PS,PO,IS
         BZ    DDFORM9A
         LH    R2,82(0,R7)         LRECL
         CVD   R2,DOUBLE
         UNPK  RECLEN(5),DOUBLE+5(3)
         OI    RECLEN+4,X'F0'
         TM    26(R7),X'40'        PS
         BZ    DDFORM9A
         MVC   EROPT(3),=C'ACC'
         TM    84(R7),X'80'        ACC
         BO    DDFORM9A
         MVC   EROPT(3),=C'SKP'
         TM    84(R7),X'40'        SKP
         BO    DDFORM9A
         MVC   EROPT(3),=C'ABE'
         SPACE 3
DDFORM9A SR    R2,R2
         IC    R2,20(0,R7)         BUFNO
         CVD   R2,DOUBLE
         UNPK  BUFNO(2),DOUBLE+6(2)
         OI    BUFNO+1,X'F0'
         LH    R2,24(0,R7)         BUFL
         CVD   R2,DOUBLE
         UNPK  BUFL(5),DOUBLE+5(3)
         OI    BUFL+4,X'F0'
         SPACE 3
DDFORM10 SR    R1,R1
         IC    R1,16(0,R6)         # OF EXTENTS
         CVD   R1,DOUBLE
         UNPK  EXTENT(2),DOUBLE+6(2)
         OI    EXTENT+1,X'F0'
         SPACE 3
DDFORM11 CLI   42(R7),X'00'        INPUT
         BE    DDFORM13            NO, UNKNOWN
         TM    43(R7),X'40'        QSAM,QISAM,TCAM,QTAM
         BO    DDFORM15
         TM    43(R7),X'20'        BSAM,BPAM,BISAM,BDAM,BTAM
         BO    DDFORM16
         SPACE 3
DDFORM13 MVC   MACRF(5),=C'*UNK*'
         B     DDFORM20
         SPACE 3
DDFORM14 MVC   MACRF(5),=CL5'EXCP'
         B     DDFORM20
         SPACE 3
DDFORM15 MVC   MACRF(5),=CL5'QSAM'
         TM    26(R7),X'40'        PS
         BO    DDFORM30
         MVC   MACRF(5),=CL5'QISAM'
         TM    26(R7),X'80'        IS
         BO    DDFORM40
         MVC   MACRF(5),=CL5'QTAM'
         TM    26(R7),X'10'        CX
         BO    DDFORM20
         MVC   MACRF(5),=CL5'TCAM'
         TM    27(R7),X'64'        TX,TQ,TR
         BNZ   DDFORM20
         B     DDFORM13
         SPACE 3
DDFORM16 MVC   MACRF(5),=CL5'BSAM'
         TM    26(R7),X'40'        PS
         BO    DDFORM30
         MVC   MACRF(5),=CL5'BPAM'
         TM    26(R7),X'02'        PO
         BO    DDFORM30
         MVC   MACRF(5),=CL5'BISAM'
         TM    26(R7),X'80'        IS
         BO    DDFORM40
         MVC   MACRF(5),=CL5'BDAM'
         TM    26(R7),X'20'        DA
         BO    DDFORM50
         MVC   MACRF(5),=CL5'BTAM'
         TM    26(R7),X'10'        CX
         BO    DDFORM20
         B     DDFORM13
         EJECT
DDFORM20 UNPK  OPTCD(3),52(2,R7)
         NC    OPTCD(2),=8X'0F'
         TR    OPTCD(2),TAB
         MVI   OPTCD+2,C' '
         B     DDFORMMS
         SPACE 3
DDFORM30 LA    R1,PSOPTCD
         B     DDFORM60
         SPACE 3
DDFORM40 LA    R1,ISOPTCD
         B     DDFORM60
         SPACE 3
DDFORM50 LA    R1,DAOPTCD
         B     DDFORM60
         EJECT
DDFORM60 LA    R2,8                MAX NO. OF BITS
         LA    R9,OPTCD            OPTCD OUTPUT AREA
         ST    R1,OPTTAB           SAVE ADDR OF OPTCD TABLE
         MVI   OPTCD,C'0'          DEFAULT OPTCD
         SR    R14,R14
         SR    R15,R15
         IC    R14,52(0,R7)        DCBOPTCD
         SPACE 3
DDFORM61 SRDL  R14,1               SHIFT 1 BIT INTO REG 15
         LTR   R15,R15             WAS BIT ON
         BNZ   DDFORM62            YES, CONTINUE
         BCT   R2,DDFORM61         CHECK NEXT
         B     DDFORMMS
         SPACE 3
DDFORM62 LA    R15,8
         SR    R15,R2
         L     R1,OPTTAB           LOAD ADDR OF OPTCD TABLE
         LA    R1,0(R1,R15)        POINT TO PRINT OPTCD
         MVC   0(1,R9),0(R1)
         LA    R9,1(0,R9)          NEXT OPTCD PRINT POSITION
         SR    R15,R15
         BCT   R2,DDFORM61         CHECK NEXT
         B     DDFORMMS
         EJECT
DDFORM70 SR    R2,R2
         IC    R2,16(0,R6)         # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BCR   8,R10               YES, EXIT
         LA    R9,32(0,R6)         1ST EXTENT
         TM    26(R7),X'80'        ISAM
         BZ    DDFORM71            NO
         LA    R9,16(0,R9)         1ST ISAM EXTENT
         BCTR  R2,0                ADJUST # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BCR   8,R10               YES, EXIT
         SPACE 3
DDFORM71 SR    R8,R8
         IC    R8,2(0,R9)          LOAD
         SLL   R8,8                   UCB
         IC    R8,3(0,R9)                ADDR
         MVC   DDUNIT,13(R8)       UNIT ADDR
         MVC   DDVOL(6),=6C'*'
         LA    R1,DEVTAB           DEVICE TABLE ADDR
         MVI   TPSW,X'00'          CLEAR TP SWITCH
         TM    18(R8),X'50'        COMM OR GRAPHICS
         BZ    DDFORM72            NO, CONTINUE
         MVI   TPSW,X'FF'          SET TP SWITCH
         MVC   DDDEVT(8),=CL8'COMM'
         TM    18(R8),X'40'        COMM
         BO    DDFORM74            YES, CONTINUE
         MVC   DDDEVT(8),=CL8'GRAPHICS'
         B     DDFORM74
         SPACE 3
         EJECT
DDFORM72 CLC   0(4,R1),16(R8)      MATCH DEVTYPE
         BE    DDFORM73            YES, CONTINUE
         LA    R1,4(0,R1)          NEXT TABLE ENTRY
         CLC   0(4,R1),=F'0'       END OF TABLE
         BNE   DDFORM72            NO, CHECK NEXT
         MVC   DDDEVT(8),=CL8'UNKNOWN'
         B     DDFORM74
         SPACE 3
DDFORM73 MVC   DDDEVT(8),4(R1)
         TM    18(R8),X'A0'        TAPE OR DISK
         BZ    DDFORM74            NO, NO VOLSER
         MVC   DDVOL(6),28(R8)
         SPACE 3
DDFORM74 MVC   0(72,R11),UNITMSG
         TM    18(R8),X'20'        DISK
         BO    DDFORM76
         SPACE 3
DDFORM75 EQU   *
         ABMSG S
         LA    R9,4(0,R9)          NEXT NON-DASD EXTENT
         TM    18(R8),X'20'        DASD UCB
         BZ    *+8                 NO
         LA    R9,12(0,R9)         NEXT DASD EXTENT
         BCT   R2,DDFORM71
         ABMSG S
         BR    R10
         EJECT
DDFORM76 TM    18(R8),X'20'        DISK
         BZ    DDFORM75            NO, EXIT
         UNPK  CCHH(9),6(5,R9)
         MVI   CCHH+8,C'-'
         NC    CCHH(8),=8X'0F'
         TR    CCHH(8),TAB
         UNPK  CCHH+9(9),10(5,R9)
         MVI   CCHH+17,C' '
         NC    CCHH+9(8),=8X'0F'
         TR    CCHH+9(8),TAB
         LA    R1,19               TRACKS PER CYLINDER
         CLI   19(R8),X'09'        3330
         BE    DDFORM77
         CLI   19(R8),X'0D'        3330-1
         BE    DDFORM77
         LA    R1,30               TRACKS PER CYLINDER
         CLI   19(R8),X'0B'        3350
         BE    DDFORM77
         B     DDFORM75
         SPACE 3
DDFORM77 LH    R14,14(0,R9)        LOAD NUMBER OF TRKS IN EXTENT
         SRDL  R14,32              SHIFT AND CLEAR FOR DIVIDE
         DR    R14,R1              CALCULATE CYLS AND TRKS
         CVD   R15,DOUBLE          CYLS
         UNPK  CYLS(3),DOUBLE+6(2)
         OI    CYLS+2,X'F0'
         CVD   R14,DOUBLE          TRKS
         UNPK  TRKS(2),DOUBLE+6(2)
         OI    TRKS+1,X'F0'
         MVC   72(48,R11),CCHHMSG
         B     DDFORM75
         EJECT
DDFORMMS MVC   0(80,R11),DDMSG
         ABMSG S
         MVC   0(88,R11),EXTMSG
         ABMSG S
         CLI   TPSW,X'FF'          TP DEVICE
         BE    DDFORMM1            YES, NO DCB MSG
         MVC   0(90,R11),DCBMSG
         ABMSG S
         SPACE 3
DDFORMM1 CLI   DDUNIT,X'FF'        DEB EXTENT FORMAT
         BE    DDFORM70            YES, CONTINUE
         MVC   0(72,R11),UNITMSG
         ABMSG S
         ABMSG S
         ABMSG S
         BR    R10
         EJECT
DDFORMA1 MVI   RECFM,C'J'
         TM    24(R7),X'80'        JES FORMAT
         BO    DDFORMA2
         MVI   RECFM,C'*'
         SPACE 3
DDFORMA2 MVI   RECFM+1,C'A'
         TM    25(R7),X'04'        ASA
         BO    DDFORMA3
         MVI   RECFM+1,C'M'
         TM    25(R7),X'02'        MACHINE
         BO    DDFORMA3
         MVI   RECFM+1,C' '
         SPACE 3
DDFORMA3 MVC   BUFNO(2),=6C'*'
         MVC   BUFNO(2),=6C'*'
         MVC   BUFL(5),=6C'*'
         MVC   OPTCD(4),=6C'*'
         MVC   DDDEVT(4),=6C'*'
         MVC   EROPT(3),=6C'*'
         CLI   RECFM,C'*'          FILLED IN
         BNE   DDFORMA4
         MVI   RECFM,C'V'          VSAM
         EJECT
DDFORMA4 SR    R1,R1
         IC    R1,16(0,R6)         # OF EXTENTS
         CVD   R1,DOUBLE
         UNPK  EXTENT(2),DOUBLE+6(2)
         OI    EXTENT+1,X'F0'
         SPACE 3
DDFORMA5 MVC   MACRF(5),=CL5'VTAM'
         CLI   43(R7),X'60'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'SBSYS'
         CLI   43(R7),X'41'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'TCAM'
         CLI   43(R7),X'31'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JRCI'
         CLI   43(R7),X'23'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JRTAM'
         CLI   43(R7),X'22'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'JJAM'
         CLI   43(R7),X'21'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'VSAM'
         CLI   43(R7),X'11'
         BE    DDFORMMS
         MVC   MACRF(5),=CL5'*UNK*'
         B     DDFORMMS
         EJECT
DEBFORM  ST    R6,FADDR
         SR    R1,R1
         IC    R1,16(0,R6)         NO. OF EXTENTS
         SLL   R1,2                TIMES 4
         LA    R1,9(0,R1)          ADD BASE DEB LENGTH
         TM    26(R7),X'80'        ISAM
         BZ    *+8                 NO, BYPASS
         LA    R1,4(0,R1)          ADD ISAM SECTION WORDS
         ST    R1,FWORDS           SAVE # OF WORDS
         MVC   0(60,R11),DEBHDR
         ABMSG S
         B     FORMAT
         EJECT
JFCBFORM L     R1,JFCBADDR         LOAD JFCB ADDR
         LTR   R1,R1               ANY JFCB ADDR
         BCR   8,R10               NO, EXIT
         ST    R1,FADDR
         MVC   FWORDS(4),=F'44'
         MVC   0(60,R11),JFCBHDR
         ABMSG S
         B     FORMAT              GO FORMAT JFCB
         EJECT
DCBFORM  ST    R7,FADDR
         CLI   0(R7),X'A0'         ACB
         BE    ACBFORM             YES, GO PROCESS
         CLI   0(R7),X'40'         AMB
         BE    ACBFORM             YES, GO PROCESS
         LA    R1,26
         TM    26(R7),X'80'        ISAM DCB =26 WORDS
         BO    DCBFORM1
         LA    R1,63
         TM    26(R7),X'20'        BDAM DCB =63 WORDS
         BO    DCBFORM1
         LA    R1,24               NORMAL DCB =24 WORDS
         SPACE 3
DCBFORM1 ST    R1,FWORDS
         MVC   0(60,R11),DCBHDR
         ABMSG S
         B     FORMAT
         EJECT
ACBFORM  ST    R7,FADDR            SAVE ACB ADDR
         SR    R1,R1
         IC    R1,2(0,R7)          LOAD
         SLL   R1,8                   ACB
         IC    R1,3(0,R7)                LENGTH
         SRL   R1,2                DIVIDE BY 4
         ST    R1,FWORDS           # OF WORDS
         MVC   0(60,R11),ACBHDR
         CLI   0(R7),X'40'         AMB
         BNE   ACBFORM1            NO, ACB
         MVC   0(60,R11),AMBHDR
         SPACE 3
ACBFORM1 EQU   *
         ABMSG S
         B     FORMAT
         EJECT
UCBFORM  ST    R10,UCBSAV10
         MVC   0(60,R11),UCBHDR
         ABMSG S
         XC    FADDR(4),FADDR
         SR    R2,R2
         IC    R2,16(0,R6)         # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BZ    UCBFORM3            YES, EXIT
         LA    R8,32(0,R6)         1ST EXTENT
         TM    26(R7),X'80'        ISAM
         BZ    UCBFORMA            NO
         LA    R8,16(0,R8)         1ST ISAM EXTENT
         BCTR  R2,0                ADJUST # OF EXTENTS
         LTR   R2,R2               ZERO EXTENTS
         BZ    UCBFORM3            YES, EXIT
         SPACE 3
UCBFORMA SR    R1,R1
         IC    R1,2(0,R8)          LOAD
         SLL   R1,8                   UCB
         IC    R1,3(0,R8)                ADDR
         C     R1,FADDR            UCB ADDR MATCH
         BE    UCBFORM2            YES, BYPASS FORMAT
         ST    R1,FADDR
         LA    R15,12              # OF WORDS
         TM    18(R1),X'A0'        TAPE OR DISK
         BNZ   UCBFORM1
         LA    R15,7               # OF WORDS
         TM    18(R1),X'08'        UNIT RECORD
         BNZ   UCBFORM1
         LA    R15,10              DEFAULT # OF WORDS
         EJECT
UCBFORM1 ST    R15,FWORDS
         BAL   R10,FORMAT
         SPACE 3
UCBFORM2 SR    R1,R1
         IC    R1,2(0,R8)          LOAD
         SLL   R1,8                   UCB
         IC    R1,3(0,R8)                ADDR
         LA    R8,4(0,R8)          NEXT NON-DASD EXTENT
         TM    18(R1),X'20'        DASD UCB
         BZ    *+8                 NO
         LA    R8,12(0,R8)         NEXT DASD EXTENT
         BCT   R2,UCBFORMA         CHECK NEXT
         L     R10,UCBSAV10
         BR    R10
         SPACE 3
UCBFORM3 MVC   0(60,R11),NOUCBMSG
         ABMSG S
         ABMSG S
         BR    R10
         EJECT
RECFORM  CLC   MACRF(4),=C'QSAM'   QSAM FILE
         BCR   7,R10               NO, EXIT
         LH    R2,82(0,R7)         LRECL
         LTR   R2,R2               LRECL 0
         BCR   8,R10               YES, EXIT
         SRL   R2,2
         LA    R2,2(0,R2)          ADJUST DISPLAY LENGTH
         L     R9,76(0,R7)         LOAD RECORD ADDRESS
         LA    R9,0(0,R9)
         LTR   R9,R9               ZERO ADDRESS
         BCR   8,R10               YES, EXIT
         CH    R9,=H'1'            ADDRESS EQUAL 1
         BCR   8,R10               YES, EXIT
         ST    R2,FWORDS           SAVE # OF WORDS
         ST    R9,FADDR            SAVE DUMP ADDR
         LRA   R14,0(0,R9)         VERIFY RECORD START
         BZ    RECFORM1            ADDRESS O.K.
         SPACE 3
RECFORM0 SH    R9,82(0,R7)         BACK UP 1 RECORD
         LRA   R14,0(0,R9)         VERIFY RECORD START
         BCR   7,R10               EXIT IF BAD
         EJECT
RECFORM1 LA    R15,0(0,R2)         LOAD
         SLL   R15,2                  ADJUSTED RECORD LENGTH
         LA    R14,0(0,R9)         LOAD
         SRL   R14,2                  ADJUSTED
         SLL   R14,2                     RECORD ADDRESS
         LA    R15,0(R14,R15)      POINT TO LAST BYTE
         BCTR  R15,0                  TO BE DISPLAYED
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BZ    RECFORM2            ADDRESS O.K.
         SH    R15,=H'4'           ADJUST ADDRESS AND LENGTH
         BCTR  R2,0                   BACK 4 BYTES
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BZ    RECFORM2            ADDRESS O.K.
         SH    R15,=H'4'           ADJUST ADDRESS AND LENGTH
         BCTR  R2,0                   BACK 4 BYTES
         LRA   R14,0(0,R15)        VERIFY ADDRESS
         BNZ   RECFORM3            ADDRESS NO GOOD
         SPACE 3
RECFORM2 ST    R2,FWORDS           # OF WORDS
         ST    R9,FADDR            DUMP ADDR
         MVC   0(60,R11),RECHDR
         ABMSG S
         B     FORMAT
         SPACE 3
RECFORM3 L     R2,FWORDS           RELOAD # OF WORDS
         C     R9,FADDR            PREVIOUS RECORD TRIED YET
         BE    RECFORM0            NO, GO TRY IT
         BR    R10                 YES, EXIT
         EJECT
IOBFORM  SR    R2,R2
         TM    52(R7),X'20'        OPTCD=C
         BO    IOBFORM1
         L     R1,68(0,R7)         IOB ADDR
         MVI   ICBSW,X'00'         NORMAL SCHEDULING
         SPACE 3
IOBFORM1 MVC   0(60,R11),IOBHDR
         ABMSG S
         ST    R1,FADDR
         LA    R1,0(0,R1)
         CH    R1,=H'1'            DUMMY FIELD
         BE    *+10                YES, NO IOB
         LTR   R1,R1               IOB PRESENT
         BNZ   IOBFORM2            YES, CONTINUE
         MVC   0(60,R11),NOIOBMSG
         ABMSG S
         ABMSG S
         BR    R10
         EJECT
IOBFORM2 ST    R10,IOSAV10         SAVE RETURN ADDR
         BAL   R10,FORMAT          FORMAT BASE IOB
         CLI   ICBSW,X'00'         CHAINED SCHEDULING
         BNE   ICBFORM             YES, GO FORMAT ICBS
         BCT   R2,IOBFORM4         NEXT IOB
         SPACE 3
IOBFORM3 L     R10,IOSAV10         LOAD RETURN ADDR
         BR    R10
         SPACE 3
IOBFORM4 L     R1,FADDR
         L     R1,0(0,R1)          NEXT IOB
         ST    R1,FADDR
         BAL   R10,FORMAT
         BCT   R2,IOBFORM4         GET NEXT
         B     IOBFORM3
         EJECT
ICBFORM  MVC   0(60,R11),ICBHDR
         ABMSG S
         L     R1,FADDR            IOB
         L     R1,8(0,R1)          1ST ICB
         ST    R1,FADDR
         LA    R14,10              # OF WORDS
         LA    R15,40(0,R1)        1ST CCW IN ICB
         SPACE 3
ICBFORM1 TM    4(R15),X'C0'        COMMAND OR DATA CHAINING
         BZ    ICBFORM3            NO, GO CHK FOR TIC
         TM    4(R15),X'40'        CMD CHAIN
         BO    ICBFORM2            YES, CONTINUE
         LA    R14,2(0,R14)        ADJUST FOR
         LA    R15,8(0,R15)           DATA CHAINING
         SPACE 3
ICBFORM2 LA    R14,2(0,R14)        ADD 2 WORDS
         LA    R15,8(0,R15)        INCR INTO CCWS
         B     ICBFORM1
         SPACE 3
ICBFORM3 CLI   0(R15),X'08'        TIC
         BE    ICBFORM2
         CLI   0(R15),X'88'        TIC MT
         BE    ICBFORM2
         LA    R14,2(0,R14)
         ST    R14,FWORDS          # OF WORDS
         SPACE 3
ICBFORM4 BAL   R10,FORMAT
         L     R1,FADDR
         L     R1,0(0,R1)          NEXT ICB
         ST    R1,FADDR
         BCT   R2,ICBFORM4
         L     R10,IOSAV10
         BR    R10
         EJECT
FORMAT   ST    R10,FRETURN         SAVE RETURN ADDR
         ST    R2,IOSAV2           SAVE REG 2
         ST    R9,IOSAV9           SAVE REG 9
         L     R1,FRETURN          LOAD RETURN ADDRESS
         L     R15,FADDR           LOAD DUMP ADDR
         L     R2,FWORDS
         L     R9,FADDR            DUMP FROM ADDR
         SRL   R9,2                ROUND ADDRESS BACK
         SLL   R9,2                   TO PREVIOUS FULLWORD
         ST    R9,TADDR            DUMP ADDR
         UNPK  0(7,R11),FADDR+1(4)
         MVI   6(R11),C' '
         NC    0(6,R11),=8X'0F'
         TR    0(6,R11),TAB
         LR    R1,R9               LOAD DUMP ADDR
         SLL   R1,27               CALCULATE WORDS
         SRL   R1,29                  TO SHIFT TO RIGHT
         ST    R1,TSHIFT           DUMP SHIFT WORDS
         CH    R1,=H'4'            4 OR OVER
         BNL   FORMATA1            YES, 1 SEGMENT
         LA    R14,2               2 SEGMENTS
         LA    R15,4
         SR    R15,R1              NO. OF WORDS  1ST SEGMENT
         B     FORMATA2
         SPACE 3
FORMATA1 LA    R14,1               1 SEGMENT
         LA    R15,8
         SR    R15,R1              NO. OF WORDS IN SEGMENT
         SPACE 3
FORMATA2 LR    R10,R1              LOAD WORDS TO SHIFT
         MH    R10,=H'9'           NO. OF BYTES TO SHIFT
         LA    R10,9(R10,R11)      DISPLAY START ADDR
         CH    R1,=H'4'            4 OR OVER
         BL    FORMAT2             NO, BYPASS ADJUST
         LA    R10,3(0,R10)        ADJUST FOR EXTRA SPACES
         B     FORMAT2             GO FORMAT
         SPACE 3
FORMAT1  LA    R10,9(0,R11)        DISPLAY START ADDR
         LA    R14,2               # OF SEGMENTS PER LINE
         LA    R15,4               # OF WORDS PER SEGMENT
         ST    R9,DOUBLE           STORE ADDRESS DUMPED
         ST    R9,TADDR            DUMP ADDR
         XC    TSHIFT,TSHIFT       NO SHIFT
         UNPK  0(7,R11),DOUBLE+1(4)
         MVI   6(R11),C' '
         NC    0(6,R11),=8X'0F'
         TR    0(6,R11),TAB
         EJECT
FORMAT2  MVC   DOUBLE(4),0(R9)
         UNPK  0(9,R10),DOUBLE(5)
         MVI   8(R10),C' '
         NC    0(8,R10),=8X'0F'
         TR    0(8,R10),TAB
         LA    R9,4(0,R9)          NEXT WORD TO TRANSLATE
         LA    R10,9(0,R10)        NEXT DISPLAY ADDR
         BCTR  R2,0
         LTR   R2,R2               END OF FORMAT
         BNP   FORMAT3             YES, EXIT
         BCT   R15,FORMAT2         NEXT WORD
         LA    R10,3(0,R10)        ADJUST FOR EXTRA SPACES
         LA    R15,4
         BCT   R14,FORMAT2         NEXT SEGMENT
         L     R1,TSHIFT           # OF WORDS TO SHIFT
         L     R14,TADDR           DUMP ADDR
         LA    R10,86(0,R11)       TRANSLATE AREA
         MVI   0(R10),C'*'         BRACKET IN
         MVI   33(R10),C'*'           ASTERISKS
         LA    R10,1(0,R10)        1ST TRANSLATE POSITION
         LA    R15,8               MAX WORDS
         SR    R15,R1              ACTUAL WORDS
         SLL   R15,2               ACTUAL CHARACTERS
         BCTR  R15,0               ADJUST LENGTH FOR EXECUTE
         SLL   R1,2                CALCULATE SHIFT
         LA    R10,0(R1,R10)
         EX    R15,TMOVE           MOVE DATA
         EX    R15,TTRANS          TRANSLATE DATA
         ABMSG
         B     FORMAT1
         SPACE 3
TMOVE    MVC   0(0,R10),0(R14)
TTRANS   TR    0(0,R10),FORMTAB
         EJECT
FORMAT3  LR    R15,R10             CURRENT DISPLAY ADDR
         LA    R14,9(0,R11)        BEGIN OF FORMAT
         SR    R15,R14             TOTAL FORMATTED
         SRL   R15,3               DIVIDE BY 8
         CH    R15,=H'6'           ROUNDING ERROR AFTER 5 WORDS
         BL    *+6                 NO, BYPASS ADJUST
         BCTR  R15,0               ADJUST # OF WORDS
         SLL   R15,2               # OF BYTES
         BCTR  R15,0               ADJUST LENGTH FOR EXECUTE
         L     R14,TADDR           DUMP ADDR
         LA    R10,86(0,R11)       TRANSLATE AREA
         MVI   0(R10),C'*'         BRACKET IN
         MVI   33(R10),C'*'           ASTERISKS
         LA    R10,1(0,R10)        1ST TRANSLATE POSITION
         EX    R15,TMOVE           MOVE DATA
         EX    R15,TTRANS          TRANSLATE DATA
         ABMSG S
         ABMSG S
         L     R10,FRETURN         LOAD RETURN ADDR
         L     R2,IOSAV2           LOAD REG 2
         L     R9,IOSAV9           LOAD REG 9
         BR    R10
         EJECT
HDRPRINT EQU   *
         ABMSG S
         MVI   0(R11),C'*'
         MVC   1(119,R11),0(R11)
         ABMSG
         MVC   0(60,R11),HDRMSG
         ABMSG
         MVI   0(R11),C'*'
         MVC   1(119,R11),0(R11)
         ABMSG S
         ABMSG S
         ABMSG S
         BR    R10
         EJECT
ESTAESET LA    R1,4(0,R10)         RETURN ADDR
         STM   R0,R15,ESTAESAV     SAVE RETURN REGS
         BR    R10
         SPACE 3
ESTAETRY LR    R13,R1              RELOAD WORK ADDR
         LM    R0,R15,ESTAESAV     RELOAD USUABLE REGS
         MVC   0(68,R11),ESTAEMSG
         ABMSG S
         ABMSG S
         L     R14,ESTAECNT        LOAD RETRY COUNT
         LA    R14,1(0,R14)        ADD 1
         ST    R14,ESTAECNT        SAVE NEW COUNT
         C     R14,ESTAELIM        LIMIT REACHED
         BH    RETURN3             YES, EXIT
         BR    R1                  RETURN TO NEXT ROUTINE
         SPACE 3
         USING *,R15
ESTAEXIT CH    R0,=H'12'           SDWA GOTTEN
         BE    ESTAEX1             NO, FORCE RETURN
         L     R2,ESTAERET         LOAD RETRY ADDR
         SETRP RC=4,RETADDR=(2),FRESDWA=YES,DUMP=NO
         SPACE 3
ESTAEX1  L     R0,ESTAERET         LOAD RETRY ADDR
         LA    R15,4               FORCE RETRY
         BR    R14
         DROP  R15
         EJECT
         LTORG
         EJECT
         DS    0F
SIZE     DC    X'F1000280'
ESTAELIM DC    F'50'
ESTAERET DC    A(ESTAETRY)
TAB      DC    C'0123456789ABCDEF'
PSOPTCD  DC    C'JTZQOCUW'
ISOPTCD  DC    C'RL*YIMUW'
DAOPTCD  DC    C'RX*AFE*W'
         EJECT
*                      THE FOLLOWING TABLE CONTAINS 3 BYTE ENTRIES
*                      WHICH ARE COMPARED AGAINST THE TCB COMPLETION
*                      CODE FIELD.  IF A MATCH IS FOUND THE REMAINDER
*                      OF THE DUMP IS SUPPRESSED.  ENTRIES FOR BOTH
*                      SYSTEM AND USER COMPLETION CODES ARE POSSIBLE.
*                      THE FIRST ZERO ENTRY FOUND TERMINATES THE TABLE
*                      SCAN FOR MATCHES.
*
         SPACE 3
ABENDTAB DS    0XL3
         DC    X'046000' TCAM MCP HAS TERMINATED BUT MESSAGE         *
*                        PROCESSING PROGRAM IS STILL RUNNING         *
         DC    X'047000' AN UNAUTHORIZED PGM REQUESTED RESTRICED SVC *
         DC    X'522000' TASK WAS IN AN SVC WAIT STATE FOR TIME      *
*                        SPECIFIED IN THE JSW PARAMETER              *
         DC    X'622000' TSO TASK WAS TERMINATED                     *
         DC    X'80A000' MORE STORAGE REQUESTED THAN WAS AVAILABLE   *
         DC    X'804000' MORE STORAGE REQUESTED THAN WAS AVAILABLE   *
         DC    X'806000' MODULES ACCESSED NOT FOUND                  *
         DC    X'822000' REGION REQUIRED TO RUN STEP NOT AVAILABLE   *
         DC    X'B23000' WTOR UNANSWERED WHEN COMM TASK ABENDED      *
         DC    X'B37000' DATA SET OUT OF SECONDARY SPACE             *
         DC    X'D37000' DATA SET OUT OF PRIMAY SPACE NO SECONDARY   *
         DC    X'E37000' PDS DATA SET OUT OF DIRECTORY BLOCKS        *
         SPACE 3
         DC    19XL3'00'           ZAPABLE ENTRIES
         EJECT
         DS    0F
DEVTAB   DS    0CL12
         DC    X'30502009',CL8'3330'
         DC    X'30702009',CL8'3330'
         DC    X'3050200D',CL8'3330-1'
         DC    X'3070200D',CL8'3330-1'
         DC    X'3050200B',CL8'3350'
         DC    X'3070200B',CL8'3350'
         DC    X'32108003',CL8'3400'
         DC    X'34208003',CL8'3400-DD'
         DC    X'10800808',CL8'1403'
         DC    X'10800809',CL8'3211'
         DC    X'50000804',CL8'2501'
         DC    X'10000810',CL8'2671'
         DC    X'1011080C',CL8'3525'
         DC    X'1021080C',CL8'3525'
         DC    X'10010806',CL8'3505'
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         DC    X'00000000',CL8' '
         SPACE 3
FORMTAB  DS    0CL256
         DC    64C'.'
         DC    C' '
         DC    128C'.'
         DC    C'ABCDEFGHI'
         DC    7C'.'
         DC    C'JKLMNOPQR'
         DC    8C'.'
         DC    C'STUVWXYZ'
         DC    6C'.'
         DC    C'0123456789'
         DC    6C'.'
         EJECT
HDRMSG   DC    CL60'DATA MANAGEMENT CONTROL BLOCKS -   VERSION 2.1'
         SPACE 1
NOCBMSG  DC    CL60'D-M CONTROL BLOCK BYPASSED, NO OPEN DATASETS'
         SPACE 1
BADEBMSG DC    CL60'DEB DCB ADDRESS INVALID OR ZEROS, DD BYPASSED'
         SPACE 1
NOIOBMSG DC    CL60'NO IOB ADDRESS FOUND,  DISPLAY BYPASSED'
         SPACE 1
NOUCBMSG DC    CL60'NO UCB ADDRESS FOUND,  DISPLAY BYPASSED'
         SPACE 1
DDNOPMSG DC    CL60'DATA SET NOT OPEN -   DD INFO BYPASSED'
         SPACE 1
ESTAEMSG DC    CL68'ERROR ENCOUNTERED DURING DUMP FORMATTING, CURRENT FX
               UNCTION BYPASSED'
         SPACE 1
NODMPMSG DC    CL60'DUMP NOT REQUIRED FOR THIS COMPLETION CODE,'
         SPACE 1
SUPPMSG  DC    CL60'REMAINDER OF DUMP SUPPRESSED BY ABEND/SNAP USER EXIX
               T'
         SPACE 3
DEBHDR   DC    CL60'----- DATA EXTENT BLOCK   (DEB) -----'
         SPACE 1
DCBHDR   DC    CL60'----- DATA CONTROL BLOCK  (DCB) -----'
         SPACE 1
JFCBHDR  DC    CL60'----- JOB FILE CONTROL BLOCK  (JFCB) -----'
         SPACE 1
UCBHDR   DC    CL60'----- UNIT CONTROL BLOCK  (UCB) -----'
         SPACE 1
RECHDR   DC    CL60'----- CURRENT OR NEXT RECORD -----'
         SPACE 1
IOBHDR   DC    CL60'----- I/O CONTROL BLOCK   (IOB) -----'
         SPACE 1
ICBHDR   DC    CL60'----- INTERRUPT CONTROL BLOCK  (ICB) -----'
         SPACE 1
ACBHDR   DC    CL60'----- ACCESS METHOD CONTROL BLOCK  (ACB) -----'
         SPACE 1
AMBHDR   DC    CL60'----- ACCESS METHOD BLOCK  (AMB) -----'
         EJECT
DDMSGX   DS    0CL80
         DC    CL9'******',C'DDNAME= ',CL8' ',CL3' ',C'DSNAME= '
         DC    CL44' '
         SPACE 3
EXTMSGX  DS    0CL88
         DC    CL9'******',C'EXTENTS -  ',CL2' ',CL4' '
         DC    C'ACCESS METHOD -  ',CL5' ',CL4' ',C'OPTCD -  ',CL11' '
         DC    C'RECLEN -  ',CL5' ',C' '
         SPACE 3
DCBMSGX  DS    0CL90
         DC    CL9'******',C'DCB=(DSORG=',CL2' ',C',RECFM=',CL3' '
         DC    C',LRECL=',CL5' '
         DC    C',BLKSIZE=',CL5' ',C',BUFNO=',CL2' '
         DC    C',BUFL=',CL5' ',C',EROPT=',CL3' ',CL2') '
         SPACE 3
UNITMSGX DS    0CL72
         DC    CL9'******',C'UNIT ADDRESS -  '
         DC    CL3' ',CL4' ',C'VOLSER -  ',CL6' ',C' '
         DC    CL3' ',C'DEVTYPE -  ',CL8' ',CL1' '
         SPACE 3
CCHHMSGX DS    0CL48
         DC    CL3' ',C'EXTENT -  ',CL23' ',C'CYLS',CL4' ',C'TRKS'
         EJECT
WORK     DSECT
SAVE     DS    18F
ESTAESAV DS    16F
DOUBLE   DS    2F
         SPACE 3
USERAREA DS    0CL40
PENTRY   DS    F
FADDR    DS    F
FWORDS   DS    F
FENTRY   DS    F
UWORK    DS    CL24
JFCBADDR DS    F
TADDR    DS    F
TSHIFT   DS    F
FRETURN  DS    F
IOSAV9   DS    F
IOSAV10  DS    F
UCBSAV10 DS    F
IOSAV2   DS    F
OPTTAB   DS    F
ESTAECNT DS    F
ICBSW    DS    C
TPSW     DS    C
CCFLAG   DS    C
         EJECT
DDMSG    DS    0CL80
         DS    CL17
DDNAME   DS    CL8
         DS    CL3
         DS    CL8
DSNAME   DS    CL44
         SPACE 3
DCBMSG   DS    0CL90
         DS    CL20
DSORG    DS    CL2
         DS    CL7
RECFM    DS    CL3
         DS    CL7
LRECL    DS    CL5
         DS    CL9
BLKSIZE  DS    CL5
         DS    CL7
BUFNO    DS    CL2
         DS    CL6
BUFL     DS    CL5
         DS    CL7
EROPT    DS    CL3
         DS    CL2
         EJECT
         DS    C
         DS    CL3
         SPACE 3
UNITMSG  DS    0CL72
         DS    CL25
DDUNIT   DS    CL3
         DS    CL14
DDVOL    DS    CL6
         DS    CL15
DDDEVT   DS    CL8
         DS    CL1
         SPACE 3
CCHHMSG  DS    0CL48
         DS    CL13
CCHH     DS    CL17
         DS    CL2
CYLS     DS    CL3
         DS    CL6
TRKS     DS    CL2
         DS    CL5
         EJECT
         IHASDWA
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//STEP02 EXEC ASMBLR,SO=C
*          DATA SET CBT452     AT LEVEL 001 AS OF 11/02/76
         TITLE 'USER CONTROL BLOCK FORMAT ROUTINE'
         MACRO
&NAME    ABMSG &S
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
         AIF   ('&S' EQ 'S').SPACE
         MEXIT
.SPACE   ANOP
         L     R15,PENTRY          LOAD MSG ROUTINE ADDRESS
         BALR  R14,R15             GO PRINT
         MEND
         SPACE 3
         MACRO
&NAME    FORMAT
         L     R15,FENTRY            LOAD FORMAT ROUTINE ADDR
         BALR  R10,R15             BR TO FORMAT ROUTINE
         MEND
         EJECT
*
*
*        REGISTER USAGE
*
*        ON ENTRY -
*        R0 - R2                   UNPREDICTABLE
*        R3                        MAIN MODULE BASE REG 1
*        R4                        TCB ADDRESS OF ABENDING TASK
*        R5                        MAIN MODULE BASE REG 2
*        R6                        UNPREDICTABLE
*        R7                        USER FORMAT ROUTINE ADDR
*              +0                  PRINT ROUTINE ADDR
*              +4                  ADDR OF AREA TO BE FORMATTED
*              +8                  NUMBER OF FULLWORDS TO FORMAT
*              +12                 24 BYTE WORK AREA
*        R8 - R10                  UNPREDICTABLE
*        R11                       PRINT AREA ADDRESS  (120 BYTES)
*        R12                       PRINT ROUTINE ADDRESS
*        R13                       SAVE AREA ADDRESS OF MAIN MODULE
*        R14                       RETURN ADDRESS
*        R15                       ENTRY POINT ADDRESS
*
*
*        FOR FORMAT ROUTINE -
*        R0 - R1                   WORK REGISTERS
*        R2                        NOT USED BY FORMAT ROUTINE
*        R3                        BASE REGISTER MAIN MODULE
*        R4                        NOT USED BY FORMAT ROUTINE
*        R5                        BASE REGISTER MAIN MODULE
*        R6 - R9                   NOT USED BY FORMAT ROUTINE
*        R10                       RETURN ADDRESS FROM FORMAT ROUTINE
*        R11 - R13                 SAME AS ON ENTRY
*        R14 - R15                 WORK REGISTERS
*
*
         EJECT
*
*
*        TO USE FORMAT ROUTINE -
*        STORE THE AREA TO BE FORMATTED AND THE LENGTH IN FULLWORDS
*        AT FADDR AND FWORDS, RESPECTIVELY,
*        AND ISSUE THE FORMAT MACRO.
*
*
*        PRIOR TO ENTRY TO THE USER CONTROL BLOCK FORMAT ROUTINE
*        AN ESTAE ENVIRONMENT IS ESTABLISHED,  CONSEQUENTLY IF
*        THE USER ROUTINE FAILS NO SYSTEM MALFUNCTION SHOULD OCCUR
*        HOWEVER, PLEASE NOTE THAT REGISTER 13 SHOULD NOT BE ALTERED
*        FOR ANY REASON.  ALTERATION MAY CAUSE A SYSTEM LOOP ON RETURN
*        TO THE MAIN MODULE.  ALSO IT IS WORTH NOTING THAT THE USER
*        ROUTINE IS ENTERED IN PROTECT KEY ZERO,  EXERCISE CAUTION.
*
*
*        A SAMPLE PROGRAM TO PRINT THE RTM2 WORK AREA FOLLOWS
*
*
         EJECT
USERFORM CSECT
         LR    R6,R15
         USING USERFORM,R6
         USING USERAREA,R7
         ST    R14,URETURN
         MVC   0(60,R11),RTMHDR
         ABMSG S
         SPACE 3
RTMA     L     R8,224(0,R4)        RTM WORK AREA ADDR
         LA    R2,10               MAX AREAS TO PRINT
         SPACE 3
RTMB     LA    R8,0(0,R8)
         LTR   R8,R8               ANY AREA ADDR
         BZ    EXIT                NO, EXIT
         ST    R8,FADDR            DUMP ADDRESS
         LH    R1,10(0,R8)         DUMP LENGTH
         SRL   R1,2                # OF FULLWORDS TO DUMP
         ST    R1,FWORDS
         FORMAT
         L     R8,368(0,R8)        NEXT RTM2WA ADR
         BCT   R2,RTMB
         SPACE 3
EXIT     L     R14,URETURN         RETURN ADDR
         BR    R14
         EJECT
         LTORG
RTMHDR DC CL60'----- RECOVERY TERMINATION WORK AREA  (RTM2WA) -----'
         SPACE 3
USERAREA DSECT
PENTRY   DS    F
FADDR    DS    F
FWORDS   DS    F
FENTRY   DS    F
URETURN  DS    F
         DS    CL20
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//STEP03 EXEC TESTLINK,SO=C,NAME=IGC0905A,LIB='SYS1.LPALIB',
// OPT=',REUS,RENT,REFR,LIST,XREF,MAP'
//SYSLMOD DD UNIT=DASD,VOL=SER=MVSRES
