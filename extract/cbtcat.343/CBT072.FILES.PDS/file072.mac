*          DATA SET CBT371     AT LEVEL 002 AS OF 06/26/77
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//*
//* THIS IS THE INSTALLATION OF VABDUMP
//*
//STEP02 EXEC CBT372,SO='(A,INTRDR)',P=CBT455
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00001) /* CHANGE THE NUMBER OF DEVICES THAT A D U DISPLAYS
         FROM 100 TO 1 */ .
++ VER (Z037) .
++ ZAP (IEE20110) .
 NAME IEE20110
 VER 00E0 9264,C085               MVI   NODIVICES+ONE,NODEVDEF
 VER 018A 9264,C085               MVI   NODIVICES+ONE,NODEVDEF
 REP 00E0 9201,C085               MVI   NODIVICES+ONE,X'01'
 REP 018A 9201,C085               MVI   NODIVICES+ONE,X'01'
/*
 RECEIVE S (CB00001).
 APPLY   S (CB00001).
//SMPPTFIN DD *
++PTF (CB00002).
++VER (Z037)     /*
*
* * * * * * * * * * * * * * * * * * * * * * * * * * *
*
* SUPERZAP LINKAGE EDITOR TO ALLOW FULL TRACK BLOCKING
* FOR SYSLIN AND SYSUT1
*
* NOTE THAT THIS INCREASES THE LINKAGE EDITOR
*
* MINIMUM REGION SIZE - ESTIMATE - 160 K
*
* * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*               */.
++ZAP (HEWLFINT)     DISTLIB(AOS04).
 NAME HEWLFINT
 VER 0B28 0C80              LINESIZE=3200                  7702
 REP 0B28 2FD0              LINESIZE=12240                 7702
 VER 0F3A 0028              MAXBF = 40                     7702
 REP 0F3A 0099              MAXBF = 153                    7702
++ZAP (HEWLFAPT)   DISTLIB(AOS04).
 NAME HEWLFAPT
 VER 022E 0028              MAXFB = 40
 REP 022E 0099              MAXBF = 153
/*
 REJECT S (CB00002).
 RECEIVE S (CB00002).
 APPLY   S (CB00002) FORCE.
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC PGM=IEBCOPY,REGION=256K
//SYSPRINT DD SYSOUT=C
//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(3,3))
//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(3,3))
//IN DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
//OUT DD DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0025E,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024H,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024G,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024C,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024B,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024A,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0024{,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0023I,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0023H,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0023G,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0023E,R))
 COPY INDD=IN,OUTDD=OUT
 S M=((IEFBR14,IGC0023D,R))
//
//SMP001R0 JOB 527TEC000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC PAN,SO=C
++WRITE WORK,IEFSDPPT
// EXEC ASMBLR,SO=C
// EXEC SMPACC,SO=C,V1=MVSRES,SYS=7
 ACCEPT S (CB00004).
// EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF(CB00004).
++VER (Z037)        /*
*
*   ADD JOBS TO THE PPT
*
*         */.
++MOD (IEFSDPPT).
//   DD    DSN=&LOADSET,DISP=(OLD,DELETE)
   RECEIVE S (CB00004).
 APPLY S (CB00004) FORCE.
//

//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF (CB00005) .
++VER (Z037)     /*
*
* IBM IN ITS INFINITE WISDOM HAS CORRECTED THIS APAR (QUESTION MARK)
* BY GIVING YOU A PARM FIELD TO SPECIFY SO AS TO BYPASS THE 19
* IDR RECORD CHECK THE ONLY THING WRONG IS THAT NO ONE TOLD
* THE SMP GROUP SO THERE IS STILL A PROBLEM WITH SMP AND 19
* IDR RECORDS
* THIS ZAP WAS ORIINALLY WORKED UP BY JOHN FRANCIS ON
* JAN 14. 1976 FOR 1.7B TO SAY THE PARM IS ALWAYS PRESENT
* TO BYPASS THE 19 IDR RECORD CHECK.
* LUCKILY THE ZAP FITS 3.6B ERGO WE WILL JUST WHIP IT ON
*
*
* SMP FAILS TO APPLY S/ZAP FIXES, EVEN WHEN FORCE IS
* SPECIFIED, IF THE SMP-SUPPLIED AND INVOKED VERSION
* OF SUPERZAP FINDS ALL 19 IDRDATA SPACES
* EXHAUSTED. THIS MAKES SUCCESSFUL USE OF THE FORCE
* FEATURE OF SMP CONDITIONAL AND PLACES IDRDATA
* INTEGRITY AT A HIGHER PRIORITY THAN SYSTEM INTEGRITY.
*
* THIS IS A RESTRICTION TO SUPERZAP BUT IN THE
* INTERIM, INVOKING SMP WITH JOBLIB TO ANOTHER COPY
* OF SUPERZAP WITH THE ATTACHED ZAP APPLIED
* WILL PROVIDE THE NECESSARY CAPABILITY.
*
* THIS ZAP IF AGAINST MVS REL 3.7 WITH SU'S ON
*
* THIS ZAP IS A RETROFIT FROM VS2 RELEASE 1.7 AY07509
*
*         */.
++ZAP (AMASPZAP)    DISTLIB(AOS12).
  NAME AMASPZAP
 VER 004C 4780,C052
 REP 004C 47F0,C052
/*
 RECEIVE S (CB00005).
 APPLY   S (CB00005).
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC PAN,SO=C
++WRITE WORK,CBT347
// EXEC ASMBLR,SO=C
// EXEC TESTLINK,SO=C,NAME=IGC0025C,LIB='SYS1.LPALIB',
// OPT=',RENT,REFR'
//SYSLMOD DD UNIT=DASD,VOL=SER=MVSRES
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF (CB00009).
++VER (Z037)     /*
*
* ZAP TO COMMAND TABLE TO CHANGE MSGRT COMMADN TO #
*
      */.
++ZAP (IEE0403D)   DISTLIB(AOSB3).
 NAME             IEE0403D
    VER  040A  C59400
    REP  040A  869400
    VER  040D  D4E2,C7D9,E3D4,D9       MSPRTMR
    REP  040D  C3D4,C4D9,D6E4,7B       CMDROU#
/*
 RECEIVE S (CB00009).
 APPLY   S (CB00009).
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C
// EXEC SMPRST,SO=C,V1=MVSRES,SYS=7
 RESTORE S (CB00008).
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF (CB00008)          /*
*
*  CHANGE ABDUMP TO PRINT 86 LINES PER PAGE
*     */.
++ZAP (IEAVAD11).
 NAME IGC0005A IEAVAD11
 VER     0092  43B0,710F           IC PCAPREG,ABDPCAP GET PAGE CAPACITY
 REP     0092  41B0,0056           LA  11,86      86 LINES/PAGE
/*
 RECEIVE S (CB00008).
 APPLY   S (CB00008).
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//*
//*      THIS IS THE AUDIO APPENDAGE
//*
// EXEC PAN,SO=C
++WRITE WORK,VOR102T
// EXEC ASMBLR,SO=C
// EXEC TESTLINK,SO=C,NAME=IGE00221,OPT=',REUS,AC=1',
// LIB='SYS1.LPALIB'
//SYSLMOD DD UNIT=DASD,VOL=SER=MVSRES
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00010) /* MOD TO ALLOW ALL SYSTEM COMMANDS TO BE USED
         AS SUBCOMMANDS OF THE OPERATOR COMMAND. THERE IS CURRENTLY
         ONE PROBLEM WITH THIS MODIFICATION - THE END SUBCOMMAND
         WILL SOMETIMES ABEND AND ONE MUST EXIT OPERATOR VIA AN
         ATTN INTERUPT. THIS DOES NOT SEEM TO OCCUR WHEN UNDER TEST
         AND CONSEQUENTLY HAS NOT BEEN LOOKED INTO VERY MUCH. */ .
++ VER (Z037) .
++ ZAP (IKJEE100) .
 NAME IKJEE100
 VER 0406 4770,85E4               B     ERROR MESSAGE
 VER 0416 58A0,C0F0               CHECK WHERE WE ARE GOING
 REP 0406 4770,83F6               GO ISSUE WTO AND SVC 34
 VER 09BC 0660          NOP OUT THE BCTR TO KEEP OPERAND-LESS COMMANDS
 REP 09BC 0700          FROM WIPING OUT OUR WORK AREA BY TRANS FF BYTES
++ ZAP (IKJEFF00) .
 NAME IKJEFF00
 VER 0400 4780,C408               BE             RT00282     (CMDVALID)
 REP 0400 47F0,C408               B     @RT00282     (CMDVALID)
 VER 044C 4780,C440               BE             RT00295
 VER 048E 4780,C5A8               CHECK BRANCH ADDRESS FOR SVC34
 REP 044C 47F0,C5A8               B     SVC34
/*
 RECEIVE S (CB00010).
 APPLY   S (CB00010).
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF (CB00012) .
++ VER (Z037) .
++ZAP (IEHDPASS) .
  NAME IEHDPASS
* ZAP TO ELIMINATE NEED FOR PASSWORD INFORMATION TO DUMP OR RESTORE
 VER 0270 4790,B302
 REP 0270 47F0,B302
/*
 RECEIVE S (CB00012).
 APPLY   S (CB00012) FORCE.
//
 RESTORE S (CB00013).
// EXEC PAN,SO=C
++WRITE WORK,IKJEFF1T
// EXEC ASMBLR,SO=C
//SYSLIN DD DCB=BLKSIZE=80
// EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++PTF (CB00013).
++VER (Z037)          /*
*
* THIS IS OUR TSO SUBMIT EXIT
*
*        */.
++MOD (IKJEFF10) LEPARM(RENT) .
// DD DSN=&LOADSET,DISP=(OLD,PASS)
 RECEIVE S (CB00013).
 APPLY S (CB00013).
//
++WRITE WORK,IKJEFF1T
//
//SMP001R0 JOB 527TEC000S0003,TEC,CLASS=C,MSGCLASS=1
// EXEC SMP2SMP
// EXEC PAN,SO=1
++WRITE WORK,IKJEBMVS
// EXEC ASMBLR,SO=1
//SYSLIN DD DCB=BLKSIZE=80
// EXEC SMPRST,SO=1,V1=DAGEN1,SYS=7
 RESTORE S (CB00014).
//STEPLIB DD DSN=SYS2.TLINKLIB,DISP=SHR
// EXEC SMPREC,SO=1,V1=DAGEN1,SYS=7
//SMPPTFIN DD *
++PTF (CB00014).
++VER (Z037)      /*
*
* THIS IS OUR VERSION OF IKJEBMA9. THE LIST OF SUBCOMMANDS
* VALID UNDER EDIT.
*
*          */.
++MOD (IKJEBEMA) DISTLIB(ACMDLIB).
// DD DSN=&LOADSET,DISP=(OLD,DELETE)
 RECEIVE S (CB00014).
 APPLY   S (CB00014) FORCE.
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=C
//SYSUT3 DD UNIT=SYSDA,SPACE=(CYL,(10,10))
//SYSUT4 DD UNIT=SYSDA,SPACE=(CYL,(10,10))
//IN     DD DSN=SYS1.CMDLIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
//OUT    DD DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
   COPY INDD=IN,OUTDD=OUT
//
 RESTORE S (CB00016).
// EXEC PAN,SO=C
++WRITE WORK,CBT345
// EXEC ASMBLR,SO=C
//SYSLIN DD DCB=BLKSIZE=80
// EXEC SMPREC,SO=C,V1=DAGEN1,SYS=7
//SMPPTFIN DD *
++PTF (CB00016).
++VER (Z037)          /*
*
* PROGRAM TO DO SELECTION OF SMF RECORDS THAT
* WE WILL OR WILL NOT WIRTE
*
*           */.
++MOD (IEFU83) LEPARM(RENT) .
// DD DSN=&LOADSET,DISP=(OLD,DELETE)
 RECEIVE S (CB00016).
 APPLY   S (CB00016).
// EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//
//SMPPTFIN DD *
++ PTF (CB00018) /* NOT REALY NECESSARY TO DO VALIDITY CHECK ON SMF.
         THIS ZAP TURNS OFF THE OPTCD=W BIT FOR THE SMF DCBS TO
         REDUCE THE IO LOAD TO THESE DATA SETS. */ .
++ VER (Z037) .
++ ZAP (IEEMB822) .
 NAME IEEMB822
 VER 03B4 E2D4C6D4C1D5E7
 VER 03C0 80000001
 VER 041C 80000001
 REP 03C0 00
 REP 041C 00
/*
 RECEIVE S (CB00018).
 APPLY   S (CB00018) FORCE.
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD  *
++ PTF (CB00020).
++ VER (Z037) .
++ ZAP (IKJEBELE) .
 NAME  IKJEBELE
*** THIS ZAP WILL ADD THE AT SIGN '@' CHARACTER AS A TAB FOR 3270
*** THIS ZAP CONVERTS THE 2741 TAB CHARACTER OF X'05' TO AN AT SIGN '@'
 VER 06DA 9240
 VER 085A 7C7D
 REP 06DA 927C
 REP 085A 057D
/*
 RECEIVE S (CB00020).
 APPLY   S (CB00020).
//SMPPTFIN DD *
++PTF (CB00021).
++ZAP (IRARMEVT).
 NAME IRARMEVT
*
* MODIFICATION TO PREVENT RANDOM TAPE ALLOCATION
*
* FORCES SRM TO PICK FIRST CANDIDATE IN LIST
*
 VER 117C 5840,20A4
 REP 117C 4140,0000
/*
 RECEIVE S (CB00021).
 APPLY   S (CB00021).
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//*
//SMPPTFIN DD *
++PTF (CB00022) .
++ZAP (MSTRJCL) .
 NAME MSTRJCL
*** IT ALLOWS JES2 TO BE STARTED BY A COMMND IN PARMLIB
*** THIS ZAP WILL PREVENT JES2 FROM STARTING AUTOMATICALLY
 VER 000320 6161 40E2 E3C1 D9E3 40D1 C5E2 F240
 REP 0320 61615CE2
 DUMPT MSTRJCL ALL
/*
 RECEIVE S (CB00022).
 APPLY   S (CB00022).
//
//*
//SMPPTFIN DD  *
++ PTF (CB00023) .
++ VER (Z037) .
++ ZAP (IEECVETC) .
 EXPAND IEECVETC(72)  X'3A0' TO X'3E8'
 NAME IEECVETC
*     IGC0007B IEECVETC     LEVEL = OS/VS2 RELEASE 2.0 FICHE.
 VER 01D4 96E09122         OI  DCMIOCM2,DCMBLENT+DCMBLWRL+DCMBLWRR
 VER 03A0 00000000 KSPATCH DC XL72'00'
 REP 01D4 47F0C39E         B  KSPATCH
 REP 03A0 96E09122 KSPATCH OI DCMIOCM2,DCMBLENT+DCMBLWRL+DCMBLWRR
 REP 03A4 58F09040         L  R15,DCMAENTR
 REP 03A8 D227F000C3BE     MVC 0(L'KSCMD,R15),KSCMD
 REP 03AE 41F0F002         LA  R15,2(,R15)
 REP 03B2 50F09054         ST  R15,DCMADOPN
 REP 03B6 58F09160         L   XFBRANCH,DCMNOPT1
 REP 03BA 58109050         L   X1PARM,DCMCXSVE
 REP 03BE 07FF             BR  XFBRANCH
*            KSCMD   DC  CL40'K S,CON=N,SEG=19,RNUM=19,RTME=01,DEL=RD'
 REP 03C0 D240E2        K S
 REP 03C3 6BC3D6D57E    ,CON=
 REP 03C8 D5            N
 REP 03C9 6BE2C5C77E    ,SEG=
/*
 RECEIVE S (CB00023).
 APPLY S (CB00023)   FORCE.
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00024) /* CHANGE THE DEFAULT TSO ALLOCATION DISP TO SHR */ .
++ VER (Z037) .
++ ZAP (IKJEFD30) .
 NAME IKJEFD30
 VER 021A D201,A00C,C41E
 REP 021A 9202,A00D,0700
/*
 RECEIVE S (CB00024).
 APPLY   S (CB00024).
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF(CB00027) /* MOD TO BYPASS BLDL VERIFY OF TSO EDIT SUBCMDS.
         THIS ALLOWS SYS1.CMDLIB TO BE REMOVED FROM LNKLST00 IF
         ALL TSO COMMANDS HAVE BEEN MOVED TO SYS1.LPALIB. */ .
++ VER (Z037) .
++ ZAP (IKJEBECI) .
 NAME IKJEBECI
 VER 01FC 0A12          BLDL SVC
 REP 01FC 18FF          SR    15,15
 VER 035C 9280          SET DE BIT IN ATTACH
 REP 035C 9200          DON'T SET DE BIT IN ATTACH
/*
 RECEIVE S (CB00027).
 APPLY   S (CB00027).
//
//SMPPTFIN DD  *
++PTF (CB00028).
++VER (Z037) .
++ZAP (IEECB800) .
 EXPAND IEECB800(582)
NAME    IEECB800  IEECB800
BASE    000000    0012D9
   *                                   BASE1    EQU   11
   *                                   BASE2    EQU   4
   *                                   CSCBPTR  EQU   5
   *                                   EXREG    EQU   10
   *                                   JREGION  EQU   3
   *                                   JSIZE    EQU   9
   *                                   WPLPTR   EQU   8
   *                                   W1       EQU   JREGION
   *                                   W2       EQU   JSIZE
   *                                            USING CSCB,CSCBPTR
 VER    000016    05B0                          BALR  BASE1,0
   *                                            USING *,BASE1
   *                                            USING *+4095,BASE2
 VER    000018    4140,BFFF                     LA    BASE2,4095(,BASE1)
 VER    00037C    45E0,B694                     BAL   RET,JOBLINE
   *                                   JOBLINE  EQU   IEECB800+X'6AC'
 VER    000396    45E0,B702            BALLISTJ BAL   RET,LISTJOBS
   *                                   LISTJOBS EQU   IEECB800+X'71A'
 VER    0006B8    1FAA                          SLR   EXREG,EXREG
 VER    0006BA    43A0,BFE5                     IC    EXREG,JOBLGTH
 VER    0006BE    06A0                          BCTR  EXREG,0
 VER    0006C0    44A0,BECC                     EX    EXREG,SM03056
 VER    000754    43A0,4099                     IC    EXREG,JOBLGTHV
 VER    000758    06A0                          BCTR  EXREG,0
 VER    00075A    44A0,BED2            EX03058  EX    EXREG,SM03058
 VER    00075E    47F0,B756                     B     RC00546
 VER    00076E    45E0,B776            RC00546  BAL   RET,JOBLFILL
   *                                   JOBLFILL EQU   IEECB800+X'78E'
 VER    000808    5830,5034                     L     JREGION,CHRGNAD
 VER    00080C    5890,5030                     L     JSIZE,CHRGNSZ
 VER    000810    1FAA                          SLR   EXREG,EXREG
 VER    000820    1807                          LR    R0,R7
 VER    000822    8E00,0020                     SRDA  R0,32
 VER    000876    47E0,B866            B00606   BNO   RF00606
 VER    00087A    92E2,8027                     MVI   SWAPIND-JOBLISTV(W
   *                                            C'S'
   *                                   RF00606  EQU   *
 VER    000EBE    000E                 CH00948  DC    AL2(LWTOVR-LWTO)
 VER    000EC0    0028                 CH02850  DC    AL2(LWTO)
 VER    000EE4    D200,8000,BFC0       SM03056  MVC   0(0,WPLPTR),JOBTEX
 VER    000EEA    D200,8000,4071       SM03058  MVC   0(*-*,WPLPTR),JOBL
 VER    000F38    0000,0025            CF02848  DC    A(LJOBTEXT)
 VER    000F3C    0000,0062            CF03021  DC    A(7*(LWTOVR-LWTO))
 VER    000FD8    0025,0000            JOBTEXT  DC    AL2(LJOBTEXT,0)
 VER    000FDC    4040,40                       DC    CL3' '
 VER    000FDF    F0F0,F0F0,F040                DC    CL6'00000'
 VER    000FE5    D1D6,C2E2,4040,4040           DC    CL8'JOBS'
 VER    000FED    F0F0,F0F0,F040                DC    CL6'00000'
 VER    000FF3    C9D5,C9E3,C9C1,E3D6           DC    CL10'INITIATORS'
 VER    000FFB    D9E2
   *                                   LJOBTEXT EQU   *-JOBTEXT
 VER    000FFD    25                   JOBLGTH  DC    AL1(LJOBTEXT)
 VER    001088    0028,0000,4040       JOBLISTV DC    AL2(LWTO,0),CL2' '
 VER    00108E    E2E3,C1D9,E3C9,D5C7           DC    2CL9'STARTING'
 VER    001096    40E2,E3C1,D9E3,C9D5
 VER    00109E    C740
 VER    0010A0    4040,4040,4040,4040           DC    CL9' '
 VER    0010A8    40
 VER    0010A9    40E5,7EE5,4040       VEQV     DC    CL6' V=V'
   *                                   JTEXT    EQU   VEQV-JOBLISTV
 VER    0010AF    40                   SWAPIND  DC    CL1' '
   *                                   LWTO     EQU   *-JOBLISTV
   *                                   LWTOVR   EQU   LWTO+14
 VER    0010B0    28                   JOBLGTHV DC    AL1(LWTO)
 VER    0012DC    0000,0000
 REP    000396    45E0,4465                     BAL   RET,PATCH1C
 REP    00075A    45E0,42FD                     BAL   RET,PATCH1
 REP    000876    47F0,B866                     B     RF00606
 REP    000EBE    0000                          DC    AL2(0)
 REP    000EC0    004A                          DC    AL2(LWTO-1+L'PAT1+
   *                                            2+L'PAT3)
 REP    000F38    0000,004A                     DC    A(LJOBTEXT+LHEADER
 REP    000F3C    0000,0000                     DC    A(0)
 REP    0012DC    C1C5,E3F0,F0F0,F1F0  PATCH1   PATCH (10,'AETNA D A WIT
 REP    0012E4    40F0,F5F1,F1F7,F640           INFO (R3.6/UZ02848)')
 REP    0012EC    C1C5,E3D5,C140,C440
 REP    0012F4    C140,E6C9,E3C8,40C1
 REP    0012FC    E2C3,C240,C9D5,C6D6
 REP    001304    404D,D9F3,4BF6,61E4
 REP    00130C    E9F0,F2F8,F4F8,5D
 REP    001314    5830,0010                     L     W1,CVTPTR
   *                                            USING CVT,W1
 REP    001318    5830,322C                     L     W1,CVTASVT
   *                                            USING ASVT,W1
 REP    00131C    4890,501E                     LH    W2,CHASID
 REP    001320    8990,0002                     SLL   W2,2
 REP    001324    5899,320C                     L     W2,ASVTENTY-4(W2)
   *                                            USING ASCB,W2
 REP    001328    1F00                          SLR   R0,R0
 REP    00132A    BF03,9026                     ICM   R0,3,ASCBSEQN
 REP    00132E    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    001332    D203,8027,44B9                MVC   LWTO-1(L'PAT3,WPLP
 REP    001338    DE03,8027,8006                ED    LWTO-1(L'PAT3,WPLP
   *                                            PLPTR)
 REP    00133E    5810,9042                     L     R1,ASCBEJST+2
 REP    001342    1F00                          SLR   R0,R0
 REP    001344    5D00,44D9                     D     R0,=A(10000/16)
 REP    001348    1831                          LR    W1,R1
 REP    00134A    1F00                          SLR   R0,R0
 REP    00134C    5810,90CA                     L     R1,ASCBSRBT+2
 REP    001350    5D00,44D9                     D     R0,=A(10000/16)
 REP    001354    1A13                          AR    R1,W1
 REP    001356    1F00                          SLR   R0,R0
 REP    001358    5D00,44DD                     D     R0,=A(100*60*60)
 REP    00135C    4C10,44E9                     MH    R1,=H'100'
 REP    001360    1831                          LR    W1,R1
 REP    001362    8C00,0020                     SRDL  R0,32
 REP    001366    5D00,44E1                     D     R0,=A(100*60)
 REP    00136A    1A13                          AR    R1,W1
 REP    00136C    4C10,44E9                     MH    R1,=H'100'
 REP    001370    1831                          LR    W1,R1
 REP    001372    8C00,0020                     SRDL  R0,32
 REP    001376    5D00,44E5                     D     R0,=A(100)
 REP    00137A    1A13                          AR    R1,W1
 REP    00137C    4C10,44E9                     MH    R1,=H'100'
 REP    001380    1A10                          AR    R1,R0
 REP    001382    4E10,8000                     CVD   R1,0(,WPLPTR)
 REP    001386    D20C,802B,44A6                MVC   LWTO-1+L'PAT3(L'PA
   *                                            TR),PAT1
 REP    00138C    DE0C,802B,8003                ED    LWTO-1+L'PAT3(L'PA
   *                                            TR),3(WPLPTR)
 REP    001392    1F00                          SLR   R0,R0
 REP    001394    BF03,9028                     ICM   R0,3,ASCBIOSM
 REP    001398    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    00139C    D205,8038,44B3                MVC   LWTO-1+L'PAT1+L'PA
   *                                            T2,WPLPTR),PAT2
 REP    0013A2    DE05,8038,8005                ED    LWTO-1+L'PAT1+L'PA
   *                                            T2,WPLPTR),5(WPLPTR)
 REP    0013A8    BF03,9098                     ICM   R0,3,ASCBFMCT
 REP    0013AC    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    0013B0    D205,803E,44B3                MVC   LWTO-1+L'PAT1+L'PA
   *                                            T3(L'PAT2,WPLPTR),PAT2
 REP    0013B6    DE05,803E,8005                ED    LWTO-1+L'PAT1+L'PA
   *                                            T3(L'PAT2,WPLPTR),5(WPLP
 REP    0013BC    BF03,9078                     ICM   R0,3,ASCBVSC
 REP    0013C0    1810                          LR    R1,R0
 REP    0013C2    BF03,907A                     ICM   R0,3,ASCBNVSC
 REP    0013C6    1E01                          ALR   R0,R1
 REP    0013C8    4E00,8000                     CVD   R0,0(,WPLPTR)
 REP    0013CC    D205,8044,44B3                MVC   LWTO-1+L'PAT1+2*L'
   *                                            PAT3(L'PAT2,WPLPTR),PAT2
 REP    0013D2    DE05,8044,8005                ED    LWTO-1+L'PAT1+2*L'
   *                                            PAT3(L'PAT2,WPLPTR),5(WP
 REP    0013D8    44A0,BED2                     EX    EXREG,SM03058
 REP    0013DC    48A0,BEA8                     LH    EXREG,CH02850
 REP    0013E0    40A0,8000                     STH   EXREG,0(,WPLPTR)
 REP    0013E4    5890,9090                     L     W2,ASCBOUCB
   *                                            USING OUCB,W2
 REP    0013E8    45A0,43E7                     BAL   EXREG,PATCH1A
 REP    0013EC    D202,8021,3000       BASE1A   MVC   JTEXT(3,WPLPTR),0(
 REP    0013F2    45A0,4437                     BAL   EXREG,PATCH1B
 REP    0013F6    D201,8025,3000       BASE1B   MVC   JTEXT+4(2,WPLPTR),
 REP    0013FC    07FE                          BR    RET
 REP    0013FE    D205,8021,44EB       PATCH1A  MVC   JTEXT(6,WPLPTR),=C
 REP    001404    4130,44C1                     LA    W1,=C'NSWPVLOUTGOO
   *                                            NQRT0'
 REP    001408    4100,0003                     LA    R0,3
 REP    00140C    9180,9011                     TM    OUCBSFL,OUCBNSW
 REP    001410    071A                          BOR   EXREG
 REP    001412    1A30                          AR    W1,R0
 REP    001414    9104,9011                     TM    OUCBSFL,OUCBPVL
 REP    001418    071A                          BOR   EXREG
 REP    00141A    1A30                          AR    W1,R0
 REP    00141C    9104,9010                     TM    OUCBQFL,OUCBOUT
 REP    001420    071A                          BOR   EXREG
 REP    001422    1A30                          AR    W1,R0
 REP    001424    9180,9010                     TM    OUCBQFL,OUCBGOO
 REP    001428    071A                          BOR   EXREG
 REP    00142A    1A30                          AR    W1,R0
 REP    00142C    9140,9010                     TM    OUCBQFL,OUCBGOI
 REP    001430    071A                          BOR   EXREG
 REP    001432    1A30                          AR    W1,R0
 REP    001434    9120,9010                     TM    OUCBQFL,OUCBGOB
 REP    001438    071A                          BOR   EXREG
 REP    00143A    1A30                          AR    W1,R0
 REP    00143C    9102,9011                     TM    OUCBSFL,OUCBENQ
 REP    001440    071A                          BOR   EXREG
 REP    001442    1A30                          AR    W1,R0
 REP    001444    9120,9013                     TM    OUCBAFL,OUCBRMA
 REP    001448    07EA                          BNOR  EXREG
 REP    00144A    41A0,43DF                     LA    EXREG,BASE1B
 REP    00144E    4130,44F1            PATCH1B  LA    W1,=C'MWLWNWCPCT'
 REP    001452    0600                          BCTR  R0,0
 REP    001454    9101,9015                     TM    OUCBEFL,OUCBMWT
 REP    001458    071A                          BOR   EXREG
 REP    00145A    1A30                          AR    W1,R0
 REP    00145C    9180,9015                     TM    OUCBEFL,OUCBLWT
 REP    001460    071A                          BOR   EXREG
 REP    001462    1A30                          AR    W1,R0
 REP    001464    9102,9013                     TM    OUCBAFL,OUCBNWT
 REP    001468    071A                          BOR   EXREG
 REP    00146A    1A30                          AR    W1,R0
 REP    00146C    9110,9013                     TM    OUCBAFL,OUCBCPL
 REP    001470    071A                          BOR   EXREG
 REP    001472    1A30                          AR    W1,R0
 REP    001474    9108,9012                     TM    OUCBYFL,OUCBCTU
 REP    001478    071A                          BOR   EXREG
 REP    00147A    07FE                          BR    RET
 REP    00147C    D224,8000,4481       PATCH1C  MVC   0(LHEADER,WPLPTR),
 REP    001482    4180,8000                     LA    WPLPTR,0(,WPLPTR)
 REP    001486    4B80,BFC0                     SH    WPLPTR,JOBTEXT
 REP    00148A    D201,8000,BF22                MVC   0(2,WPLPTR),CF0284
 REP    001490    5A80,BF20                     A     WPLPTR,CF02848
 REP    001494    47F0,B702                     B     LISTJOBS
 REP    001498    4040,40              HEADER   DC    CL3' '
 REP    00149B    D7D9,C940,40                  DC    CL5'PRI'
 REP    0014A0    C3D7,E440,C84B,D44B           DC    CL14'CPU H.M.S.T'
 REP    0014A8    E24B,E340,4040
 REP    0014AE    C961,D640                     DC    CL4'I/O'
 REP    0014B2    D7C1,C7C5,E240                DC    CL6'PAGES'
 REP    0014B8    E2D3,D6E3,E2                  DC    CL5'SLOTS'
   *                                   LHEADER  EQU   *-HEADER
 REP    0014BD    4020,2020,4B20,204B  PAT1     DC    X'402020204B20204B
 REP    0014C5    2120,4B20,20                  020'
 REP    0014CA    4020,2020,2120       PAT2     DC    X'402020202120'
 REP    0014D0    4021,2020            PAT3     DC    X'40212020'
 REP    0014D8    D5E2,E6D7,E5D3,D6E4
 REP    0014E0    E3C7,D6D6,C7D6,C9C7
 REP    0014E8    D6C2,C5D5,D8D9,E3F0
 REP    0014F0    0000,0271,0005,7E40
 REP    0014F8    0000,1770,0000,0064
 REP    001500    0064,C9D5,4040,4040
 REP    001508    D4E6,D3E6,D5E6,C3D7
 REP    001510    C3E3                          LTORG
   *                                            DS    0F
 REP    001514    C1C5,E340,C440,C140           DC    C'AET D A END'
 REP    00151C    C5D5,C4
/*
 RECEIVE S (CB00028).
 APPLY   S (CB00028).
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC PAN,SO=C
++WRITE WORK,IGG019WA
// EXEC ASMBLR,SO=C
// EXEC TESTLINK,SO=C,NAME=IGG019WA,LIB='SYS1.SVCLIB',
// OPT=',RENT,REFR'
//SYSLMOD DD UNIT=DASD,VOL=SER=MVSRES
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC PGM=IEBCOPY,REGION=128K
//*
//*   COPY IN THE FDR SVC
//*
//SYSPRINT  DD  SYSOUT=C
//SYSUT3    DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSUT4    DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//IN        DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSSYS
//OUT       DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
   COPY INDD=IN,OUTDD=OUT
   S M=((IGG019YZ,,R))
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC PAN,SO=C
++WRITE WORK,IGC0025D
// EXEC ASMBLR,SO=C
// EXEC TESTLINK,SO=C,NAME=IGC0025D,LIB='SYS1.LPALIB',
// OPT=',RENT,REFR'
//SYSLMOD DD UNIT=DASD,VOL=SER=MVSRES
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC PGM=IEBCOPY,REGION=128K
//*
//*   COPY IN THE SYNC-SORT SVC
//*
//SYSPRINT  DD  SYSOUT=C
//SYSUT3    DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//SYSUT4    DD  UNIT=SYSDA,SPACE=(CYL,(5,5))
//IN        DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSSYS
//OUT       DD  DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=MVSRES
   COPY INDD=IN,OUTDD=OUT
 S M=((IGX00012,,R))
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
// EXEC IEBCOPY,SO=C
//IN DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=DASD,VOL=SER=DAGEN1
//OT DD DSN=SYS1.LPALIB,DISP=SHR,UNIT=DASD,VOL=SER=DAGEN1
 COPY INDD=IN,OUTDD=OT
 S M=((IDCRI04,,R))
 S M=((IDCCDDL,,R))
 S M=((IDCTSDL0,,R))
 S M=((IDCTSTP0,,R))
 S M=((IDCTSUV0,,R))
 S M=((IDCTSLC0,,R))
 S M=((IDCTSEX0,,R))
 S M=((IDCDL01,,R))
 S M=((IDCRILT,,R))
 S M=((IDCLC01,,R))
 S M=((IDCCDLC,,R))
 S M=((IDCIO04,,R))
 S M=((IDCTSLC1,,R))
//
//

//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00034) /* CHANGE DEFAULT PAGE AND VIO SLOT GAURENTEE
                    VALUES FROM 1/4 TO 1/24. */ .
++ VER (Z037).
++ ZAP (ILRSLOTC) .
 NAME ILRSLOTC
 REP 0000 00000018
 NAME ILRSLOTV
 REP 0000 00000018
/*
 RECEIVE S (CB00034).
 APPLY   S (CB00034).
//
//SMP001R0 JOB 527SMP000S0003,TEC,CLASS=C,MSGCLASS=C
// EXEC SMPREC,SO=C,V1=DAGEN1,SYS=7
//SMPPTFIN DD *
++PTF (CB00036).
++ VER (Z037)
        /*
**********************************************************************
*
*              THIS MODIFICATION IS BEING MADE TO THE SCRATCH        *
*        AND RENAME SVC'S TO ELIMINATE ONE OF THE SECURITY CHECKS    *
*        CURRENTLY BEING MADE.   WHILE IN OPERATION THIS MOD WILL    *
*        ALLOW A USER OF IEHPROGM AND THE SCRATCH AND RENAME         *
*        MACRO INSTRUCTIONS TO EXECUTE ON A DATASET THAT IS ALREADY  *
*        OPENED BY ANOTHER JOB OR TASK.                              *
*              THE BASIC APPROACH IS CHANGING THE MAJOR NAME FOR     *
*        THE SCRATCH AND RENAME SVC'S FROM SYSVTIOT AND SYSDSN TO    *
*        CBTZTIOT AND CBTDSN.   PLEASE NOTE THAT THIS MOD IS A       *
*        SECURITY VIOLATION TO MVS IN THAT THE POSSIBILITY EXISTS    *
*        FOR SIMULTANEOUS UPDATE OF A DATASET.                       *
*
**********************************************************************
*
*
*
    ZAP FOR RENAME AND SCRATCH SVC       */.
++ZAP (IGC0002I).
    NAME IGC0002I IGC0002I
 VER 063A E2E8,E2E9      TIOTMJR  DC CL8'SYSZTIOT'
 REP 063A C3C2E3E9       TIOTMJR DC CL8 'CBTZTIOT'
 VER 0642 E2E8,E2C4      DSNMJR DC CL8 1SYSDSN'
 REP 0642 C3C2,E3C4      DSNMJR DC CL8 'CBTDSN'
++ZAP (IGC00030).
   NAME IGC00030 IGC00030
   VER 04FC 40E2E8E2   /*  SYS  */
   VER 0504 E3E2E8E2   /*  SYS  */
   REP 04FC 40C3C2E3   /*  CBT  */
   REP 0504 E3C3C2E3   /*  CBT  */
++ZAP (IGG03001).
   NAME IGG03001
 VER 076C E2E8,E2E9      TIOTMJR  DC CL8'SYSZTIOT'
 REP 076C C3C2E3E9       TIOTMJR DC CL8 'CBTZTIOT'
 VER 0774 E2E8,E2C4      DSNMJR DC CL8 1SYSDSN'
 REP 0774 C3C2,E3C4      DSNMJR DC CL8 'CBTDSN'
++ZAP (IGG0290D).
   NAME IGC0002I IGG0290D
 VER 0578 E2E8,E2E9      TIOTMJR  DC CL8'SYSZTIOT'
 REP 0578 C3C2E3E9       TIOTMJR DC CL8 'CBTZTIOT'
 VER 0580 E2E8,E2C4      DSNMJR DC CL8 1SYSDSN'
 REP 0580 C3C2,E3C4      DSNMJR DC CL8 'CBTDSN'
/*
 REJECT S (CB00036).
 RECEIVE S (CB00036).
 VER 06B4 90EC,B13C
 REP 06B4 07FE,0700
/*
 RECEIVE S (CB00037).
 APPLY   S (CB00037).
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00038) /* MOD TO MAKE PROFILE OF WTP IN EFFECT FOR ALL
         TSO USERS (BYPASS CHECK IF WTP BIT IS ON) */ .
++ VER (Z037) .
++ ZAP (IGC0203E) .
 NAME IGC0203E
 VER 020E 4780,B214
 VER 021A 47E0,B214
 REP 020E 4700,B214
 REP 021A 4700,B214
/*
 RECEIVE S (CB00038).
 APPLY   S (CB00038).
//
//SMP001R0 JOB 527TSO000S0003,TEC,CLASS=C,MSGCLASS=C,PRTY=10
//STEP01 EXEC SMPREC,SO=C,V1=MVSRES,SYS=7
//SMPPTFIN DD *
++ PTF (CB00039) /* INCREASE THE FETCH BUFFER SIZE TO 24K */ .
++ VER (Z037) .
++ ZAP (IEWFETCH) DISTLIB (ALPALIB) .
 NAME IEWFETCH
 VER 0C64 0000,4800            FIXLIMTM DC F'18432'
 REP 0C64 0000,6000
 VER 1560 0000,4800            FIXLIMIT DC F'18432'
 REP 1560 0000,6000
/*
 RECEIVE S (CB00039).
 APPLY   S (CB00039).
//
//
 VER 1550 0000,4800            FIXLIMIT DC F'18432'
 REP 1550 0000,6000
//
