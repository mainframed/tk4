*          DATA SET CBT332     AT LEVEL 006 AS OF 04/03/77
*          DATA SET CBT332     AT LEVEL 005 AS OF 05/06/76
*          DATA SET CBT332     AT LEVEL 004 AS OF 05/05/76
         TITLE '# V  OPERATOR COMMAND TO INTERROGATE DEVICE STATUS'
***********************************************************************
*
*        # V IS INTENDED TO BE USED TO DISPLAY THE STATUS OF DEVICES.
*        THE DEVICES MAY BE SPECIFIED EITHER BY UNIT ADDRESS OR BY
*        SERIAL NUMBER OF THE VOLUME MOUNTED ON THE DEVICE.
*        EXAMPLES..
*                  # V U=250        DISPLAYS  STATUS OF UCB '250'
*                  # V U=25X      DISPLAYS STATUS OF UCB'S 250 THRU 257
*                  # V S=DAPROD     DISPLAYS  STATUS OF UCB ON WHICH
*                                  VOLUME SERIAL DAPROD IS MOUNTED.
*                  # V 25X,36X,47X  (SHORT FORM FOR 'U=' OPTION)
*                  # V D=C.DATASET  DISPLAYS VOLSERS ON WHICH
*                                  DATA SET C.DATASET IS CATALOGED
*
*        FORMAT OF DISPLAY FOR UCB'S..
*                  UUU SSSSSS AA,FF,BB,MM   ASID
*                       UUU DENOTES UNIT ADDRESS
*                       SSSSSS DENOTES SERIAL NUMBER.
*                              (OR ****** IF NO VOLUME IS MOUNTED)
*                       AA DENOTES STATUS A
*                       FF DENOTES FLAG 1
*                       BB DENOTES STATUS B
*                       MM DENOTES DATA MANAGEMENT COUNT
*                     ASID DENOTES ASID ALLOCATED TO DEVICE
*
*                  EXAMPLE..
*                       250 DAPROD 88,10,01,01   0005
*
*
*  NEW COMMAND - # V - PROCESSOR
*
*
*
***********************************************************************
*
IEESI03D CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SQS      EQU   253                 SQS SUBPOOL USED FOR WORK AREAS
         BALR  R12,0               ESTABLISH BASE
         USING *,R12
         LR    R8,R2               SAVE XSA BASE
         USING XSA,R8              'USE' XSA BASE
         USING WTO,R10             'USE' WTO AREA BASE
         GETMAIN R,LV=LWRK,SP=SQS  GET WTO AREA
         LR    R10,R1              PUT WTO ADDR IN WTO BASE
         ST    R14,SAVRET     SAVE THE REGISTER                AXC
         MVC   WTOCTL(5),WTHINGYS  INITIALIZE
         MVC   WTOCTL+5(LWTO-5),WTOCTL+4  WTO AREA
         L     R7,XAL              GET PTR TO INPUT PARM
         LA    R7,0(R7)            CLEAR HI BYTE
         LTR   R7,R7               IS THERE A PARM ?
         BZ    NOTHING             NO
         CLI   1(R7),C'='          IS OUT BOY USING KEYWORDS ?
         BNE   UNIT                NO, ASSUME HE WANTS UNITS
         CLI   0(R7),C'U'          IS REQUEST BY UNIT ?
         BE    SETUNIT             YES
         CLI   0(R7),C'S'          IS REQUEST BY SERIAL ?
         BE    SERIAL              YES
         CLI   0(R7),C'D'          IS THIS REQ. TO LOCATE DATA SET ?
         BE    LOCATE              YES
         B     GOOF                ERROR
*
*
SERIAL   LA    R5,EXSER            SET FOR SERIAL SEARCH
         BAL   R14,UCBSRCH         GO TRY TO FIND THE SERIAL NO.
         LTR   R13,R13             DID WE FIND IT ?
         BZ    EXIT                YEP
         B     GOOF                NOPE
*
*
SETUNIT  LA    R7,2(R7)            SKIP THE 'U='
UNIT     EQU   *
         MVI   WCU,X'00'           INITIALIZE GHOST SUPPRESSOR
         LA    R5,EXUCB            SET FOR SEARCH FOR SPECIFIC UCB
         CLI   2(R7),C'X'          IS THIS REQ. FOR 'ALL' UCB'S
         BNE   DOIT                NO
         LA    R5,EXUCBX           SET SEARCH FOR 'ALL' UCB'S
DOIT     BAL   R14,UCBSRCH         GO TRY TO FIND THE UCB
         LTR   R13,R13             DID WE SUCCEED ?
         BNZ   GOOF                ERROR IN REQUEST
         CLI   3(R7),C','          ARE THERE MORE UNITS ?
         BNE   EXIT                NO
         LA    R7,4(R7)            BUMP TO NEXT UNIT
         B     UNIT                PROCESS NEW UNIT
GOOF     MVC   WUNIT(9),0(R7)      SEARCH FAILED
NOTHING  MVC   WUNIT+9(17),FERN                  SET
         SR    R0,R0                              UP
         IC    R0,XAU                                 ERROR
         WTO   MF=(E,(R10))                           MESSAGE
EXIT     LR    R1,R10
         L     R14,SAVRET     RESTORE THE REG                  AXC
         FREEMAIN R,LV=LWRK,SP=SQS,A=(1)  FREE WTO AREA
*        SVC   3                   EXIT ..                     AXC
         SR    R15,R15        CLEAR REG                        AXC
         BR    R14            RETURN                           AXC
*
UCBSRCH  EQU   *
         LA    R13,4               ASSUME BAD RETURN
         L     R4,16               GET CVT PTR
         L     R4,40(0,R4)        GET UCB HALFWORD VECTOR
UCBLOOP  LH    R3,0(R4)            GET NEXT UCB ADDR.
         LTR   R3,R3               IS THERE A UCB ?
         BZ    NEXTUCB             NULL UCB
         BCR   4,R14               END OF UCB VECTOR
         EX    0,0(R5)             COMPARE SOMETHING IN THE UCB
         BE    AHIT                BRANCH IF WE LIKED IT
NEXTUCB  LA    R4,2(R4)            BUMP PTR TO NEXT UCB
         B     UCBLOOP             CONTINUE SEARCH
AHIT     EQU   *
         CLC   WUNIT,13(R3)        IS THIS AN OPCHAN GHOST ?
         BE    NEXTUCB             YES, EXORCISE IT AND CONTINUE
         CLI   0(R7),C'S'          IS IT A SEARCH BY SERIAL ?
         BE    MVUNAME             YES
         CLC   WCU,5(R3)           IS THIS AN OPCHAN GHOST ?
         BCR   2,R14               YES, EXORCISE IT AND QUIT
         MVC   WCU,5(R3)           SAVE LAST UNIT ADDR FOR COMPARE
MVUNAME  MVC   WUNIT,13(R3)        MOVE UNIT ADDR TO WTO AREA
         TM    18(R3),X'A0'        IS IT TAPE OR DISK ?
         BZ    MVSTAT              NEITHER
         MVC   WSER,28(R3)         MOVE VOLSER
         CLI   WSER,X'00'          IS THERE A VOLSER
         BNE   *+10                YES
         MVC   WSER(6),FERN        INSERT 'NO VOLSER' INDICATOR
MVSTAT   UNPK  WSTA(3),3(2,R3)     SET UP STATUS A
         UNPK  WST1(3),6(2,R3)     SET UP FLAG 1
         UNPK  WSTB(3),34(2,R3)    SET UP STATUS B
         UNPK  WDMCT(3),35(2,R3)   SET UP DATA MGMNT COUNT
         UNPK  WUSER(3),38(2,R3)   SET UP USER COUNT
         TR    WSTA(14),TABLE      CONVERT TO 'HEX'
         MVI   WC1,C','
         MVI   WC2,C','
         MVI   WC3,C','
         MVI   WC4,C','
         MVI   WC5,C' '
         MVI   WC6,C' '
         MVI   WC7,C' '
         L     R11,20(0,R3)        UCB EXTENTION ADDR
         UNPK  WASID(5),14(3,R11)  TRANSLATE ASID
         TR    WASID(4),TABLE
         MVI   WC8,C' '
WRITEIT  SR    R0,R0               CLEAR R0
         IC    R0,XAU              GET UCMID IF REQUESTING CONSOLE
         WTO   MF=(E,(R10))        WRITE THE MESSAGE
         SR    R13,R13             SET ZERO RET CODE
         CLI   0(R7),C'S'          IS IT A REQ. BY SERIAL ?
         BE    NEXTUCB       YES, CONTINUE SEARCH IN CASE OF DUPLICATES
         CLI   2(R7),C'X'          IS 9T&A REQ FOR ALL UNITS
         BE    NEXTUCB             YES, GET THE REST OF THE UCB'S
         BR    R14                 RETURN
*
*
*
LOCATE   EQU   *
         GETMAIN R,LV=LOCWK,SP=SQS   GET LOCATE WORK AREAS
         LR    R6,R1               SET UP
         USING LOCATEWK,R6             WORK AREA BASE
         XC    CAMLST(16),CAMLST     CLEAR OUT THE CAMLST
         MVI   LDSNAME,C' '        BLANK OUT THE
         MVC   LDSNAME+1(43),LDSNAME         DSNAME FIELD
         L     R1,XAR              GET PTR TO PARM LENGTH
         LH    R2,0(R1)            LOAD PARM LENGTH
         SH    R2,=H'7'            ADJ FOR MOVE
         LTR   R2,R2               IS THE LENGTH BAD
         BNP   BADLOC              YES, GET OUT QUICK..
         LA    R1,43               SET UP COMPARE CONST.
         CR    R2,R1               IS LENGTH TOO GREAT
         BNH   *+6                 NO, USE IT
         LR    R2,R1               FORCE REASONABLE LENGTH
         EX    R2,EXMVDSN          PUT DSNAME IN 44 BYTE WORK AREA
         MVI   CAMLST,X'44'        SET
         LA    R1,LDSNAME            UP
         ST    R1,CAMLST+4             THE
         LA    R1,LVOLS                  CAMLST
         ST    R1,CAMLST+12                FOR A
         LR    R1,R6                           LOCATE
         SVC   26                  LOCATE THE DSNAME IN CATALOG
         LR    R13,R15             SAVE RETURN CODE
         MVC   WDEVICE,=C'DSN='     SET UP MESSAGE
         MVC   WVLIST(44),LDSNAME     FOR OPERATOR TO SEE DSNAME
         SR    R0,R0                           AFTER LOCATE
         IC    R0,XAU              INSERT UCMID OF REQUESTING CONSOLE
         WTO   MF=(E,(R10))        TELL IT LIKE IT IS
         MVC   WVLIST(44),WVLIST-1     BLANK OUT WTO AREA
*
         LTR   R13,R13             DID LOCATE SUCCEED
         BNZ   BADLOC              NO, GO BUILD SAD MESSAGE
         MVC   WDEVICE,=C'TAPE'    ASSUME TAPE DEVICE
         CLI   LVOLS+4,X'80'       DID WE GUESS RIGHT ?
         BE    GETVOLS             YES
         MVC   WDEVICE,=C'DASD'    ASSUME DASD
         CLI   LVOLS+4,X'20'       DID WE GET IT THIS TIME ?
         BE    GETVOLS             YES
         MVC   WDEVICE(4),FERN     ADMIT WE DON'T KNOW WHAT IS IS
GETVOLS  EQU   *
         LH    R1,LVOLS            GET VOLUME COUNT
         LTR   R1,R1               DO WE HAVE ANY VOLUMES ?
         BZ    LOCDONE             NO
         CH    R1,=H'9'            MAX VOLS WE HANDLE IS 9
         BNH   *+8                 IF GREATER,
         LA    R1,9                        FORCE IT TO 9
         LA    R2,LVOLS+6          SET UP REGISTERS
         LA    R3,WVLIST               FOR VOLSER LOOP
         B     VOLMOVE             JUMP INTO IT
VOLOOP   MVI   6(R3),C','          INSERT A COMMA
         LA    R3,7(R3)            BUMP WTO POINTER TO NEXT SLOT
VOLMOVE  MVC   0(6,R3),0(R2)       STICK VOLSER INTO WTO TEXT
         LA    R2,12(R2)       BUMP PTR TO NEXT VOLSER IN LOC AREA
         BCT   R1,VOLOOP           GET THE REST OF THE VOLSERS
LOCDONE  SR    R0,R0
         IC    R0,XAU              GET UCMID FOR REQ. CONSOLE
         WTO   MF=(E,(R10))        TELL OPERATOR ALL ABOUT IT
         LR    R1,R6               GET RID OF THE
         FREEMAIN R,LV=LOCWK,SP=SQS,A=(1)   WORK AREA
         B     EXIT
*
BADLOC   MVC   WDEVICE(24),=C'* NOT FOUND IN CATALOG *'
         B     LOCDONE
*
*
WTHINGYS DC    AL2(LWTO)           LENGTH OF WTO AREA
         DC    X'6000'             MCS FLAGS
         DC    C' '                ONE BLANKIE
TABLE    EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
*
*                        EXECUTED COMPARE COMMANDS
EXUCB    CLC   13(3,R3),0(R7)      FIND SPECIFIC UCB
EXUCBX   CLC   13(2,R3),0(R7)      FIND ALL UCB'S FOR A GIVEN CTL UNIT
EXSER    CLC   28(6,R3),2(R7)      FIND UCB BY SERIAL NO.
EXMVDSN  MVC   LDSNAME(0),2(R7)    MOVE DATA SET NAME TO CAMLIST
FERN     DC    C'****** IS A LOSER'
         LTORG
WTO      DSECT
WTOCTL   DS    CL4
WUNIT    DS    CL3
         DS    CL1
WSER     DS    CL6
         DS    CL1
WSTA     DS    CL2
WC1      DS    CL1
WST1     DS    CL2
WC2      DS    CL1
WSTB     DS    CL2
WC3      DS    CL1
WDMCT    DS    CL2
WC4      DS    CL1
WUSER    DS    CL2
WC5      DS    CL1
WC6      DS    CL1
WC7      DS    CL1
WASID    DS    CL4
WC8      DS    CL1
         ORG   WUNIT
WDEVICE  DS    CL4
         DS    CL1
WVLIST   DS    9CL7                LIST OF VOLSERS THAT WE FOUND
LWTO     EQU   *-WTO
WCU      DS    CL1
SAVRET   DS    F                                               AXC
         DS    0D
LWRK     EQU   *-WTO
*
LOCATEWK DSECT
CAMLST   CAMLST NAME,LDSNAME,,LVOLS
LVOLS    DS    CL272               WORK AREA FOR LOCATE SVC
LDSNAME  DS    CL44                'LOCATED' DSNAME
         DS    0D
LOCWK    EQU   *-LOCATEWK
*
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         END
