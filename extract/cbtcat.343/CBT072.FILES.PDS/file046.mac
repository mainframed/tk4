//S1  EXEC  PL1LFCG,REGION=256K,PARM='LOAD,NODECK,XREF'
//PL1L.SYSUT1  DD  SEP=,DCB=BLKSIZE=1024
//PL1L.SYSIN  DD  *
  BEGIN: PROC OPTIONS(MAIN);
 /* P.C. JURMAIN     IBM    617-236-7313     08/20/75     */
     DCL  REC_IN     CHAR (80);
     DCL  REC_OUT    CHAR (80);
     DCL  RECS_IN     FIXED (6,0) INIT (0);
     DCL  RECS_OUT    FIXED (6,0) INIT (-1);
     DCL SPACES     CHAR (80) INIT ((80) ' ');
     DCL ASTRSK     CHAR (71) INIT ((71) '*');
     DCL PTF_TST    CHAR (10) INIT ('PTF NUMBER');
     DCL 1 TAPE,
          2 F1     CHAR (1) INIT (' '),
          2 F2     CHAR (48) INIT ((48) '*'),
          2 F3     CHAR (12) INIT (' PTF TAPE = '),
          2 ID     CHAR (4)  INIT ((4) ' '),
          2 F4     CHAR (1)  INIT (' '),
          2 F5     CHAR (6)  INIT ((6) '*'),
          2 F6     CHAR (8) INIT ((8) ' ');
     DCL TAPE_NAME     CHAR (80) DEF TAPE;
     DCL IN1 FILE RECORD INPUT SEQUENTIAL BUFFERED;
     OPEN FILE (IN1) RECORD SEQUENTIAL;
     ON ENDFILE (IN1) GO TO EOJ;
  HSKP:
     DISPLAY ('ENTER PTF TAPE NUMBER .... XXXX')
     REPLY (TAPE.ID);
     GO TO NEW_PAGE;
  READ1:
     READ FILE (IN1) INTO (REC_IN);
     RECS_IN = RECS_IN + 1;
     SUBSTR(REC_IN,1,1) = SPACES;
     SUBSTR(REC_IN,73,8) = SPACES;
     DO I = 3 TO 5;
          IF SUBSTR(REC_IN,I,10) = PTF_TST
               THEN GO TO NEW_PAGE;
     END;
  PRINT_REC:
     REC_OUT = REC_IN;
     PUT EDIT (REC_OUT)  (COLUMN(10),A(80),SKIP(1));
     RECS_OUT = RECS_OUT + 1;
     GO TO READ1;
  NEW_PAGE:
     REC_OUT = SPACES;
     SUBSTR(REC_OUT,2,71) = ASTRSK;
     PUT EDIT (REC_OUT)  (PAGE,COLUMN(10),A(80),SKIP(1));
     PUT EDIT (REC_OUT) (COLUMN(10),A(80),SKIP(1));
     PUT EDIT (REC_OUT) (COLUMN(10),A(80),SKIP(1));
     REC_OUT = TAPE_NAME;
     PUT EDIT (REC_OUT) (COLUMN(10),A(80),SKIP(1));
     REC_OUT = SPACES;
     SUBSTR(REC_OUT,2,71) = ASTRSK;
     PUT EDIT (REC_OUT) (COLUMN(10),A(80),SKIP(1));
     PUT EDIT (REC_OUT) (COLUMN(10),A(80),SKIP(1));
     GO TO PRINT_REC;
  EOJ:
     CLOSE FILE (IN1);
     PUT EDIT ('TOTAL RECS READ = ',RECS_IN,
               'TOTAL RECS WRITTEN = ',RECS_OUT)
              (PAGE,SKIP(5),COLUMN(10),A(18),F(6,0),
                            COLUMN(35),A(21),F(6,0));
    END BEGIN;
/*
//GO.IN1  DD  DISP=(OLD,KEEP),UNIT=2400,LABEL=(2,NL),
//  DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),VOL=SER=PTFTAP
//
//S3  EXEC  PLIXCG,REGION=192K,
// PARM='AG,A,DU,ESD,GS,STMT,MAP,NEST,OF,OPT(2),STG,X,MI(''$'')'
//SYSIN  DD  *
 /*  XREF LISTS OF MODULES HAVING PTFS APPLIED TO THEM           */
 XREFPTF:  PROC OPTIONS(MAIN);
 /* L.C. SCANNELL    MITRE   617-271-2019    07/28/75   */
 /* P.C. JURMAIN     IBM    617-236-7313     08/20/75     */
 DCL ASTERISK       CHAR(4)  DEF LINEO POS(2);
  DCL HLD_HD(7) CHAR (121);
  DCL LAST_PTF_DATE CHAR (17) INIT ((17) ' ');
   DCL LAST_TYPE CHAR(10)  INIT(' ');
  DCL SPACES CHAR (121) INIT ((121) ' ');
 DCL BLANKS         CHAR(  1) INIT(' ');
 DCL DATEIND        BIT(1)    INIT('0'B);
 DCL EOF            BIT(1)    INIT('0'B);
  DCL EOFA BIT (1) INIT ('0'B);
  DCL EOFP BIT (1) INIT ('0'B);
 DCL EOFS           BIT(1)    INIT('0'B);
 DCL EOFT           BIT(1)    INIT('0'B);
 DCL 1 HEAD1,
       2 ASA        CHAR(  1) INIT(' '),
       2 TITLE1     CHAR( 30) INIT('MODULE/'),
       2 TITLE2     CHAR( 45) INIT('PTFS BY DATE'),
       2 TITLE3     CHAR( 20) INIT('PTFS BY PTF NUMBER');
 DCL 1 HEAD2,
       2 ASA        CHAR(  1) INIT('+'),
       2 TITLE1     CHAR( 12) INIT(' '),
       2 TITLE2(51) CHAR(  1) INIT((48)(1)'_',(3)(1)' '),
       2 TITLE3(51) CHAR(  1) INIT((48)(1)'_',(3)(1)' ');
 DCL 1 HEAD3,
       2 ASA        CHAR(  1) INIT(' '),
       2 TITLE1     CHAR( 17) INIT(' MACRO'),
       2 TITLE2     CHAR( 49) INIT('DATE    PTF NO.        STATUS
 TYPE'),
       2 TITLE3     CHAR( 49) INIT('PTF NO.    DATE          STATUS
   TYPE');
 DCL 1 HD           DEFINED LINEO,
       2 NORMAL     CHAR(115),
       2 PAGENO     CHAR(  4);
 DCL 1 HD2          DEFINED LINEO,
       2 BLANK1     CHAR(103),   /*119 ORIGINALLY */
       2 ORDER      CHAR( 18);
 DCL IP             PIC'9999' DEF OUT(1) POS(109);
  DCL IP2 PIC'9999' DEF HLD_HD(1) POS (116);
 DCL IPCNT          FIXED BIN(15)  INIT(0);
 DCL LINES          FIXED BIN(15)  INIT(0);
 DCL LINEO          CHAR(121) INIT(' ');
     DCL LINETEST CHAR(80) DEF LINEO POS(40);
 DCL 1 LINE1        DEFINED LINEO,
       2 ASA        CHAR(  1) ,          /*   ASA CC        */
       2 PTF_NO     CHAR(  7) ,          /*   PTF NUMBER    */
       2 BLANK1     CHAR(  4) ,          /*                 */
       2 DATEPTF    CHAR(  6) ,          /*   DATE OF PTF   */
       2 BLANK2     CHAR(  3) ,          /*                 */
       2 STATUS(3)  CHAR(  6) ,          /*   STATUS OF PTF */
       2 SUPNO      CHAR(  7) ,          /*   SUPERCEDED BY */
       2 BLANK3     CHAR(  5) ,          /*                 */
       2 TYPE       CHAR( 10) ,          /*   TYPE OF MOD   */
       2 MODMAC(6)  CHAR( 10) ;          /*   MODULE/MACRO  */
 DCL 1 LINE2        DEFINED LINEO,
       2 BLANK12    CHAR( 51),
       2 TYPE12     CHAR( 10),
       2 MADMAC(6)  CHAR( 10);
 DCL LISTPTF        FILE INPUT     RECORD; /* LIST PTF SMP OUTPUT    */
 DCL ODATE          CHAR(  4) INIT('DATE');
 DCL OHEAD1         CHAR( 96) DEF HEAD1;
 DCL OHEAD2         CHAR(115) DEF HEAD2;
 DCL OHEAD3         CHAR(116) DEF HEAD3;
 DCL OMODULE        CHAR( 14) INIT('ORDER: MODULE');
 DCL OPTFNO         CHAR( 14) INIT('ORDER: PTF NO.');
  DCL ORDER_BY_DATE  CHAR(11)  INIT('ORDER: DATE');
 DCL OTP            FILE OUTPUT    RECORD; /* LIST PTF IN MODULE ORD */
 DCL OUT(9)         CHAR(121) ;
 DCL PAG2           CHAR(  4) INIT('0002');
 DCL 1 PRINT1,
       2 ASA        CHAR(  1) INIT('0'),
       2 MOD        CHAR( 12),
       2 BAR1       CHAR(  3) INIT(' '),
       2 ORDER_DATE,
         3 DATEPTF  CHAR(  9),
         3 PTF_NO   CHAR( 10),
         3 STATUS(3) CHAR( 6),
         3 BLANK    CHAR(  1) INIT(' '),
         3 TYPE     CHAR(  9) INIT(' '),
       2 BAR2       CHAR(  4) INIT(' '),
       2 ORDER_PTF,
         3 PTF_NO   CHAR( 10),
         3 DATEPTF  CHAR(  9),
         3 STATUS(3) CHAR( 6),
         3 BLANK1   CHAR(  1) INIT(' '),
         3 TYPE     CHAR(  5);
 DCL RETCODE        FIXED BIN(31)  INIT(0);
 DCL RECTYP         CHAR( 25) INIT(' RECORD TYPE=F,LENGTH=42 ');
  DCL RECTYP3 CHAR (26) INIT (' RECORD TYPE=F,LENGTH=121 ');
 DCL SAVMOD         CHAR( 8)  INIT(' ');
 DCL SIZE           FIXED BIN(31)  INIT(96000);
 DCL 1 SORT,
       2 ASA        CHAR( 1)  INIT(' '),
       2 MOD        CHAR( 8),
       2 DATEPTF    CHAR( 6),
       2 PTF_NO     CHAR( 7),
       2 STATUS(3)  CHAR( 5),
       2 TYPE       CHAR( 5);
 DCL SRTFLD1        CHAR( 25) INIT
                    (' SORT FIELDS=(2,21,CH,A) ');
 DCL SRTFLD2        CHAR( 46) INIT
                    (' SORT FIELDS=(2,08,CH,A,16,07,CH,A,10,6,CH,A) ');
     DCL SRTFLD3 CHAR (66) INIT
 (' SORT FIELDS=(13,6,CH,D,2,7,CH,A,22,1,CH,D,52,10,CH,D,112,8,CH,D) ');
 DCL PORTIN         FILE           RECORD;
 DCL PORTOUT        FILE           RECORD;
 DCL SORTIN         FILE           RECORD;
 DCL SORTOUT        FILE           RECORD;
 DCL SYS2           FILE OUTPUT    RECORD;  /*LIST PTF BY DATE*/
 DCL SYS            FILE OUTPUT    RECORD; /* LIST PTF IN PTFNO ORDER*/
 DCL TOPLINE        CHAR(  4) DEF LINEO POS(7);
 DCL 1 TORT         LIKE SORT;
 DCL TORTIN         FILE           RECORD;
 DCL TORTOUT        FILE           RECORD;
 HEAD:   PROC;
         LINES=0;                  /*   RESET LINE COUNT              */
         IPCNT= IPCNT + 1;         /*   INCREMENT PAGE NUMBER         */
         IP = IPCNT;               /*   SET PAGE # INTO PRINT LINE    */
         DO I = 1 TO 9;
            WRITE FILE (OTP) FROM (OUT(I));  /* PRINT HEADINGS        */
         END;
         PRINT1.MOD = SAVMOD;
         RETURN;
         END HEAD;
  SMPHD:  PROC;
     LINES = 0;
     IPCNT = IPCNT + 1;
     IP2 = IPCNT;
     DO I = 1 TO 7;
          WRITE FILE (SYS2) FROM (HLD_HD(I));
     END;
     RETURN;
     END SMPHD;
     /**************************************************/
     /**************************************************/
     OPEN FILE (LISTPTF) INPUT;
     ON ENDFILE (LISTPTF) EOFA = '1'B;
     OPEN FILE (PORTIN) OUTPUT;
     DO WHILE (PAGENO ^= PAG2);
          READ FILE (LISTPTF) INTO (LINE1);
     END;
     HLD_HD(1) = LINEO;
     DO I = 2 TO 7;
          READ FILE (LISTPTF) INTO (HLD_HD(I));
     END;
     SUBSTR(HLD_HD(4),104,11) = ORDER_BY_DATE;
     READ FILE (LISTPTF) INTO (LINE1);
     DO WHILE (^EOFA & ASTERISK ^= '****');
          IF TOPLINE = ODATE
               THEN DATEIND = '1'B;
          DO I = 1 TO 7 WHILE (DATEIND & ^EOFA & ASTERISK ^= '****');
               READ FILE (LISTPTF) INTO (LINE1);
               END;
          DATEIND = '0'B;
          IF LINE1.PTF_NO = SPACES
               THEN IF LINETEST = SPACES
                    THEN;
                    ELSE DO;
                    SUBSTR(LINEO,2,17) = LAST_PTF_DATE;
                    IF LINE1.TYPE = SPACES
                         THEN LINE1.TYPE = LAST_TYPE;
                         ELSE LAST_TYPE = LINE1.TYPE;
                    WRITE FILE (PORTIN) FROM (LINE1);
                    END;
               ELSE DO;
               LAST_PTF_DATE = SUBSTR(LINEO,2,17);
               LAST_TYPE = LINE1.TYPE;
               WRITE FILE (PORTIN) FROM (LINE1);
               END;
          READ FILE (LISTPTF) INTO (LINE1);
     END;
     CLOSE FILE (PORTIN) , FILE (LISTPTF);
     /*********************************************/
     /*  SORT LISTPTF BE DATE AND PTF WITHIN DATE  */
     /**********************************************/
     CALL PLIRETC(8);
     CALL PLISRTA(SRTFLD3,RECTYP3,SIZE,RETCODE,'PO','AP');
     IF RETCODE ^= 0 THEN DO;
          PUT EDIT ('PORTIN FILE - SORT FAILED, RETURN CODE = ',RETCODE)
                   (SKIP(2),A,P'ZZ999');
          STOP;
          END;
     /*********************************************/
     /*********************************************/
     OPEN FILE (PORTOUT) INPUT;
     ON ENDFILE (PORTOUT) EOFP = '1'B;
     OPEN FILE (SYS2) OUTPUT;
     LINES = 100;
     READ FILE (PORTOUT) INTO (LINE1);
     DO WHILE ( ^EOFP );
          LINES = LINES + 1;
          IF LINES > 50
               THEN CALL SMPHD;
          IF LAST_PTF_DATE = SUBSTR(LINEO,2,17)
               THEN DO;
                    SUBSTR(LINEO,2,17) = SPACES;
                    IF LAST_TYPE = LINE1.TYPE
                         THEN LINE1.TYPE = SPACES;
                         ELSE LAST_TYPE = LINE1.TYPE;
                    END;
               ELSE DO;
                    LAST_PTF_DATE = SUBSTR(LINEO,2,17);
                    LAST_TYPE = LINE1.TYPE;
                    END;
          WRITE FILE (SYS2) FROM (LINE1);
          READ FILE (PORTOUT) INTO (LINE1);
     END;
     CLOSE FILE (PORTOUT) , FILE (SYS2);
     IPCNT = 0;
     OPEN FILE (LISTPTF) INPUT;
       ON ENDFILE (LISTPTF) EOF = '1'B;
       READ FILE (LISTPTF) INTO (LINE1);
       DO WHILE (PAGENO ^= PAG2);            /* PRINT FIRST  PAGE OF */
          WRITE FILE(SYS) FROM (LINE1);      /* SMP LIST PTF. OUTPUT */
          READ FILE (LISTPTF) INTO (LINE1);
       END;
       DO I = 1 TO 10;
          IF I=4 THEN ORDER=OMODULE;
          IF I <8 THEN OUT(I) = LINEO;
          IF I=1  THEN DO;             /* SETUP HEADING FOR XREF    */
             SUBSTR(OUT(1),39,46) ='            HMASMP PTFS';
             SUBSTR(OUT(1),104,17)='PAGE';
          END;
                                             /* PRINT 2ND PAGE OF    */
          IF I=4 THEN ORDER=OPTFNO;          /* SMP LIST PTF. OUTPUT */
          WRITE FILE (SYS) FROM (LINE1);     /* AND 1ST PAGE OF      */
                                             /* MODULE ORDER OUTPUT  */
          IF I=1 THEN IP=1;   ELSE
          IF I = 3 THEN ORDER=OMODULE;
          READ FILE (LISTPTF) INTO (LINE1);
       END;
       OPEN FILE (SORTIN) OUTPUT;
       OPEN FILE (TORTIN) OUTPUT;

       DO WHILE (^EOF & ASTERISK ^='****');
          IF TOPLINE = ODATE THEN DO;
             DATEIND ='1'B;
             SUBSTR(LINEO,104,18)=SUBSTR(LINEO,111,9);
          END;
          WRITE FILE (SYS) FROM (LINE1);
          DO I = 1 TO 7  WHILE (DATEIND & ^EOF & ASTERISK ^='****' );
             READ FILE (LISTPTF) INTO (LINE1);     /* PRINT HEADING */
             IF I=4 THEN ORDER =OPTFNO;            /* ON REG  SMP   */
             WRITE FILE (SYS) FROM (LINE1);        /*  LISTPTF      */
          END;
          DATEIND = '0'B;
          IF BLANK12  ^= ' ' THEN SORT = LINE1, BY NAME;
                             ELSE  IF TYPE12 ^= ' ' THEN
                                   SORT.TYPE = TYPE12;
          DO I = 1 TO 6  WHILE (MODMAC(I) ^=' ' &  ^EOF &
                                ASTERISK ^='****');    /*  FILL SORT  */
             SORT.MOD = MODMAC(I);                     /*  STRUC WITH */
             WRITE FILE (SORTIN) FROM (SORT);          /* MOD - DATE  */
             WRITE FILE (TORTIN) FROM (SORT);          /* MOD -PTFNO  */
          END;
          READ FILE (LISTPTF) INTO (LINE1);
       END;
       WRITE FILE(SYS) FROM (LINE1);      /* LIST REQUEST COMPLETED */
       CLOSE FILE(SORTIN), FILE(TORTIN);
       /* SORT PTF MODULES  BY DATE WITHIN MODULE              */
       CALL PLIRETC( 8);
       CALL PLISRTA(SRTFLD1,RECTYP,SIZE,RETCODE,'SO');
       IF RETCODE ^= 0 THEN DO;
          PUT EDIT ('SORTIN FILE - SORT FAILED, RETURN CODE = ',
                    RETCODE)(SKIP(2),A,P'ZZ999');
          STOP;
       END;
       /* SORT PTF MODULES BY PTF # WITHIN MODULE              */
       CALL PLIRETC( 8);
       CALL PLISRTA(SRTFLD2,RECTYP,SIZE,RETCODE,'TO');
       IF RETCODE ^= 0 THEN DO;
          PUT EDIT ('RORTIN FILE - SORT FAILED, RETURN CODE = ',
                    RETCODE)(SKIP(2),A,P'ZZ999');
          STOP;
       END;
       OUT( 6) = OHEAD1;
       OUT( 7) = OHEAD2;
       OUT( 8) = OHEAD3;
       OUT( 9) = BLANKS;
       ORDER   = OMODULE;

       OPEN FILE (SORTOUT) INPUT;
       OPEN FILE (TORTOUT) INPUT;
       ON ENDFILE (SORTOUT) EOFS = '1'B;
       ON ENDFILE (TORTOUT) EOFT = '1'B;
       LINES=100;
       READ FILE (SORTOUT) INTO (SORT);
       READ FILE (TORTOUT) INTO (TORT);
       PRINT1.ORDER_DATE = SORT, BY NAME;
       SAVMOD  = SORT.MOD;    PRINT1.MOD = SORT.MOD;
       PRINT1.ORDER_PTF  = TORT, BY NAME;
       DO WHILE (^EOFS & ^EOFT);
          DO WHILE    (SAVMOD = SORT.MOD & ^EOFS);
             LINES  = LINES + 1;
             IF LINES > 50 THEN CALL HEAD;
             WRITE FILE (OTP) FROM (PRINT1);
             PRINT1.MOD = ' ';     PRINT1.ASA =' ';
             READ FILE (SORTOUT) INTO (SORT);
             READ FILE (TORTOUT) INTO (TORT);
             PRINT1.ORDER_DATE  =  SORT,  BY NAME;
             PRINT1.ORDER_PTF   =  TORT,  BY NAME;
          END;
          LINES  = LINES + 1;
          PRINT1.MOD = SORT.MOD;
          SAVMOD     = SORT.MOD;
          PRINT1.ASA = '0';
       END;
       END XREFPTF;
/*
//GO.SYSUDUMP  DD  SYSOUT=A
//GO.PLIDUMP  DD  SYSOUT=A
//GO.SYSOUT  DD  SYSOUT=A
//GO.SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
//GO.PORTWK01 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.PORTWK02 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.PORTWK03 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.SORTWK01 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.SORTWK02 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.SORTWK03 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.TORTWK01 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.TORTWK02 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.TORTWK03 DD SPACE=(CYL,2,,CONTIG),UNIT=SYSDA
//GO.PORTIN    DD DSN=&&PORTIN,DISP=(,PASS),UNIT=DISK,
//  DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210),
//  SPACE=(TRK,(10,5),RLSE)
//GO.PORTOUT   DD DSN=&&PORTOUT,DISP=(,PASS),UNIT=DISK,
//  DCB=(RECFM=FB,LRECL=121,BLKSIZE=1210),
//  SPACE=(TRK,(10,5),RLSE)
//GO.SORTIN    DD DSN=&&SORTIN,DISP=(,PASS),UNIT=DISK,
//             DCB=(RECFM=FB,LRECL=42,BLKSIZE=4200),
//             SPACE=(TRK,(10,5),RLSE)
//GO.LISTPTF  DD  DSN=LMS0.LISTPTF,DISP=SHR,UNIT=3330-1,
//  VOL=SER=GTE011
//GO.SYS2      DD SYSOUT=A,DCB=(RECFM=VBA,LRECL=137,BLKSIZE=141)
//GO.SYS       DD SYSOUT=A,DCB=(RECFM=VBA,LRECL=137,BLKSIZE=141)
//GO.OTP       DD SYSOUT=A,DCB=(RECFM=VBA,LRECL=137,BLKSIZE=141)
/*
//
//
