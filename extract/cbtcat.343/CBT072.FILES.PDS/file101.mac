*          DATA SET ANBDECVB   AT LEVEL 002 AS OF 02/08/76
         TITLE 'DECVB - CONVERT TOD TO BINARY'
DECVB    START
         B     ENTRY-DECVB(15)
         DC    X'06',CL7'DECVB'
ENTRY    EQU   *
*
*   LINKAGE IS CALL DECVB(IDEC,IBIN)
*   IDEC CONTAINS UNSIGNED PACKED DECIMAL DIGITS
*   WHICH ARE THE TOD IN THE FORM HHMMSSTH
*   THE BINARY VALUE OF IDEC IS RETURNED IN IBIN
*
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
*
         STM   14,12,12(13)
         BALR  RB2,0
         USING *,RB2
         LR    RW3,13
         ST    13,SAVE+4
         LA    13,SAVE
         ST    13,8(RW3)
*
         L     RW3,4(1)                ADDRESS OF IBIN
         L     RW5,0(1)                ADDRESS OF IBEC
         L     RW5,0(RW5)              IDEC
         ST    RW5,IDEC                STORE IDEC
         SR    RW4,RW4
         SR    RW5,RW5
         IC    RW5,IDEC                INSERT HH INTO REGISTER
         SLDL  RW4,4
         A     RW5,TWELVE              ADD IN SIGN
         STM   RW4,RW5,BCD             STORE IN DOUBLE WORD
         CVB   RW5,BCD                 CONVERT # HOURS TO BINARY
         M     RW4,SIXTY               CONVERT TO MINUTES
         ST    RW5,TIME
         SR    RW5,RW5
         IC    RW5,IDEC+1              INSERT MM INTO REGISTER
         SLDL  RW4,4
         A     RW5,TWELVE              ADD IN SIGN
         STM   RW4,RW5,BCD             STORE IN DOUBLE WORD
         CVB   RW5,BCD                 CONVERT # MINUTES TO BINARY
         A     RW5,TIME                ADD IN HOURS
         M     RW4,SIX000              CONVERT TO HUNDREDTHS
         ST    RW5,TIME
         SR    RW5,RW5
         LH    RW5,IDEC+2              LOAD SSTH INTO REGISTER
         SLDL  RW4,4
         A     RW5,TWELVE              ADD IN SIGN
         STM   RW4,RW5,BCD             STORE IN DOUBLE WORD
         CVB   RW5,BCD                 CONVERT TO BINARY
         A     RW5,TIME                ADD IN MINS AND HOURS
         ST     RW5,0(RW3)             STORE IN IBIN
         L     13,4(13)
         LM    14,12,12(13)
         BR    14
*
SAVE      DS    18F
TWELVE   DC    F'12'
SIXTY    DC    F'60'
SIX000   DC    F'6000'
IDEC     DS    F
TIME     DS    F
BCD      DS    D
         LTORG
         END
ZA06AS   CSECT
*###### 12/04/73 LAST LIBRARY UPDATE
         BC    15,12(15)     BRANCH AROUND IDENTIFIER
         DC    X'06'
         DC    CL7'ZA06AS '
         MVI   FLAG-ZA06AS(15),X'00'   FLAG=0 FOR NUMERIC FIELD
         B     MENTRY-ZA06AS(15)
         ENTRY ZA06BS
ZA06BS   BC    15,12(15)     BRANCH AROUND IDENTIFIER
         DC    X'06'
         DC    CL7'ZA06BS '
         MVI   FLAG-ZA06BS(15),X'01'   FLAG=1 FOR TEXT
         B     MENTRY-ZA06BS(15)
         ENTRY ZA06CS
ZA06CS   BC    15,12(15)     BRANCH AROUND IDENTIFIER
         DC    X'06'
         DC    CL7'ZA06CS '
         MVI   FLAG-ZA06CS(15),X'02'   FLAG=2 FOR KEYWORD ONLY
*
*******************************************************************
*
*         THIS ROUTINE CAN BE USED TO EXTRACT INFORMATION FROM
*      THE PARMLIST GIVEN ON AN EXEC CARD. THERE ARE THREE ENTRY POINTS
*      POINTS.
*      1/      ZA06AS(N,KEY,M,VALUE)
*         THIS WILL RETURN THE INTEGER VALUE OF ENTRIES IN THE
*      PARMLIST OF THE FORM ....,KEYWORD=VALUE,.... N AND KEY ARE
*      SET BY THE USER. KEY WILL CONTAIN THE KEYWORD ( INCLUDING
*      THE '=' SIGN ) AND N WILL GIVE THE NUMBER OF CHARACTERS
*      IN KEY.
*         THE ROUTINE WILL RETURN IN M THE NUMBER OF DIGITS IN
*      THE VALUE ( NOT INCLUDING THE SIGN ) AND IF M > 0 THE
*      BINARY VALUE IN VALUE.
*      2/      ZA06BS(N,KEY,M,TEXT)
*         THIS WILL RETURN THE TEXT VALUE OF AN ENTRY OF THE FORM
*      ....,KEYWORD=TEXT,.... N AND KEY ARE AS FOR ZA06AS.
*         THE ROUTINE WILL RETURN IN M THE NUMBER OF CHARACTERS
*      IN THE TEXT VALUE AND IF M > 0 TEXT WILL CONTAIN THE TEXT
*      VALUE.
*      3/      ZA06CS(N,KEY,L)
*         THIS WILL INDICATE THE PRESENCE OF AN ENTRY OF THE FORM
*      ....,KEYWORD,.... N AND KEY ARE AS ZA06AS EXCEPT THAT
*      IN GENERAL KEY WILL CONTAIN NO '=' CHARACTER. IF THE
*      KEYWORD IN KEY IS FOUND IN THE PARMLIST THE 3RD ARGUMENT
*      L IS SET TO 1 (.TRUE.) AND IF IT IS NOT FOUND IT IS SET TO
*      ZERO (.FALSE.).
*         ONLY REGISTERS 14,15,0-7 ARE SAVED AND RESTORED. THUS
*      8-13 ARE UNALTERED.
*                                    JANUARY 1970
*
*******************************************************************
*
MENTRY   STM   14,7,12(13)   SAVE REGISTERS
         LM    3,6,0(1)      PICK UP ARGUMENTS
         BALR  7,0           ESTABILISH .....
         USING *,7           ..... BASE REGISTER
         SR    0,0           PICK UP LENGTH ......
         IC    0,3(3)        .... OF KEYWORD
         LTR   3,0           TEST FOR ......
         BNZ    BR8          .... ZERO LENGTH
         LR    2,3           EXIT .....
         B     BR5           .... IF ZERO
BR8      CLI   FLAG3,X'00'   HAVE WE QLREADY ......
         BE     BR9          .... GOT PARMLIST ADDRESS ?
         L     1,PARMAD      YES: PUT IT INTO REGISTER 1
         B     BR10          GO AND SEARCH PARMLIST
*
*      GET PARMLIST.
*
BR9      L     1,16          CVT
         L     1,0(1)        TCB POINTERS
         L     1,4(1)        CURRENT TCB
         L     1,112(1)      FIRST SAVE AREA
         L     15,16(1)        POINT AT ENTRY POINT
         CLC   5(8,15),LOADER   IS IT THE LOADER ?
         BNE   BR11            NO: USE FIRST SAVE AREA
         L     1,8(1)          YES: USE LOADERS SAVE AREA
BR11     L     1,24(1)       POINTER TO PARMLIST
         L     1,0(1)        PARMLIST
         ST    1,PARMAD      SAVE ADDRESS
*
*      INITIALIZE AND SET UP FOR SEARCH.
*
BR10     SR    2,2
         CLC   0(2,1),HZERO  IS PARMLIST EMPTY ?
         BE    BR5           YES: FINISH THEN
         MVI   FLAG2,X'00'   PUT FOUND FLAG OFF
         BCTR  3,0           MODIFY .......
         STC   3,KEYTEST+1   .... COMPARE INSTRUCTION .....
         STC   3,INCR+3      ... AND INCREMENT INSTRUCTION
         LA    3,1(3)        RESTORE TO PROPER VALUE
         LH    0,0(1)        PICK UP PARMLIST LENGTH
         LA    1,2(1)        POINT AT PARMLIST PROPER
         AR    0,1           POINT AT END OF PARMLIST
         BCTR  1,0           REDUCE TO ENTER LOOP
         B     KEYTEST       GO AND TEST FOR KEYWORD
*
*      KEYWORD SEARCH
*
COMMA    CLI   FLAG2,X'00'   HAS KEYWORD BEEN FOUND ?
         BNE   ENDSRCH       YES: GO AND FINISH OFF
KEYTEST  CLC   0(0,4),1(1)   IS IT THE KEYWORD ?
         BNE   NXTCOMA       NO: GO AND LOOK FOR NEXT COMMA
         LA    1,1(1)        YES: POINT AT KEYWORD
         ST    1,KEYWORD     SAVE POINTER TO KEYWORD
         MVI   FLAG2,X'FF'   MARK AS FOUND
INCR     LA    1,0(1)        MOVE POINTER TO END OF KEYWORD
         B     NXTCOMA       GO AND LOOK FOR NEXT COMMA
COMATEST CLI   0(1),C','     IS IT A COMMA ?
         BE    COMMA         YES: BRANCH THEN
NXTCOMA  LA    1,1(1)        UPDATE PARMLIST POINTER
         CR    1,0           LOOP TILL .....
         BL    COMATEST      ..... END OF PARMLIST
         CLI   FLAG2,X'00'   HAS KEYWORD BEEN FOUND ?
         BE    BR5           NO: FINISH THEN
*
*      END OF SEARCH
*
ENDSRCH  S     1,KEYWORD     LENGTH OF KEYWORD FIELD
         SR    1,3           LENGTH OF KEYWORD VALUE
         CLI   FLAG,X'02'    DID WE COME .....
         BNE   BR1           .... IN AT ZA06CS ?
         LTR   1,1           YES: ARE THE LENGTHS .....
         BZ    BR7           .... THE SAME ?
         MVI   FLAG2,X'00'   NO: SET NOT FOUND
         L     1,KEYWORD     PICK UP POSITION IN PARMLIST ....
         B     INCR          ... AND GO AND HAVE ANOTHER TRY
BR7      LA    2,1           SET THIRD ARGUMENT TRUE
BR5      ST    2,0(5)        SET THIRD ARGUMENT
         B     FINISH
BR1      LTR   2,1
         BZ    BR5
         L     14,KEYWORD    POINT AT ....
         LA    14,0(14,3)    .... VALUE FIELD
         CLI   FLAG,X'00'    DID WE COME IN .....
         BNE   BR6           .... AT ZA06AS ?
         BCTR  1,0           YES: ONE OFF FOR PACK
         CLI   0(14),C'-'    IS THE NUMBER .....
        BNE    BR2           .... NEGATIVE
         LA    14,1(14)      YES: MOVE POINTER UP ONE
         BCTR  1,0           REDUCE LENGTH AGAIN
         EX    1,PACK        PACK AND CONVERT ......
         CVB   4,BUF         .... VALUE TO BINARY
         LNR   4,4           MAKE VALUE NEGATIVE
         B     BR3
BR2      EX    1,PACK        PACK AND CONVERT .....
         CVB   4,BUF         .... VALUE TO BINARY
BR3      ST    4,0(6)        SET FOURTH ARGUMENT
         LA    2,1(1)        NO. OF DIGITS
         B     BR5           GO AND FINISH OFF
BR6      LR    2,1           LENGTH OF TEXT
         BCTR  1,0           ONE OFF FOR MOVE
         EX    1,MOVE
         ST    2,0(5)        SET THIRD ARGUMENT
*
*      RETURN TO CALLER
*
FINISH   LM    14,7,12(13)   RESTORE REGISTERS
         MVI   12(13),X'FF'  SET TRACE RETURN
         BR    14
*
*      WORK AREA.
*
BUF      DC    D'0'          CVB WORKSPACE
LOADER   DC    C'IEWLCTRL'     USED TO IDENTIFY FAST LOADER
KEYWORD  DC    A(0)          ADDRESS OF KEY WORD IN PARMLIST
PARMAD   DC    A(0)          ADDRESS OF PARMLIST
PACK     PACK  BUF(8),0(0,14)
MOVE     MVC   0(0,6),0(14)
FLAG     DC    X'00'         ENTRY INDICATOR
FLAG2    DC    X'00'         KEYWORD FOUND INDICATOR
FLAG3    DC    X'00'         PARMLIST ALREADY AVAILABLE INDICATOR
HZERO    DC    H'0'
         END
