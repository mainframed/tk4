*          DATA SET SMP020     AT LEVEL 001 AS OF 12/30/76
SMPLISTR TITLE '      NASA/GSFC  SMP-CDS  INFO  LISTER'
*----------------------------------------------------------------------
*
* SMPLISTR -- NASA/GSFC SMP-CDS INFORMATION LISTER
*
* THIS ROUTINE WAS DEVELOPED BY GENE CZARCINSKI, NASA/GSFC.
*
* STATUS --  (SEE VERSION ID IN 'TITLE') --
*        1.0 - 10OCT75, GENE CZARCINSKI.
*        1.1 - 24MAY76, GENE CZARCINSKI -- FIXUP FOR PEMAX
*
*        2.0 - 15SEP76, GENE CZARCINSKI ...
*         . ADD CODE TO SUPPORT LISTING OF THE SMP LOG (HLDS)
*         . ADD GETMAIN/FREEMAIN AND SET SORTSIZE DEPENDING ON
*           AVAILABLE CORE
*         . ADD CODE TO SUPPORT LISTING 'MOD' AND 'LMOD' INFO
*         . ADD CODE TO SUPPORT XREF LISTING ONLY AS OPTION
*         . ADD CODE TO SUPPORT SORTED LIST OF PTF/APAR SUPERSEDES
*         . ADD CODE TO SUPPORT MOD,LMOD,DLIB,MAC+ASM INFO LIST
*         . ADD CODE TO SUPPORT MULTI-COLUMN PRINTOUT
*        2.1 - 16SEP76, GENE CZARCINSKI ...
*         . REDO THE EXIT CODE FOR MORE BASE ADDRESSABILITY
*         . ADD AN FUNCTION INDEX (PAGE NO.) AS TRAILER PAGE
*        2.2 - 29SEP76, GENE CZARCINSKI, FIX BUG IN DIR-I/O
*
* THE PUROPSE OF THIS PROGRAM IS TO PERFORM INFORMATION
* LIST FUNCTIONS ON THE SMP CDS AND ACDS.  IT HAS BEEN
* DESIGNED FOR HIGH PERFORMANCE (LOW OVERHEAD) OPERATION
* AND ATTEMPTS TO MINIMIZE THE ELAPSED TIME TO LIST
* CDS/ACDS INFO.
*
* FUNCTIONS IMPLEMENTED --
*         1. LIST THE PTFS AND THERE RELEATED INFO.
*
* THE FOLLOWING JCL IS REQUIRED TO RUN THIS PROGRAM
*    // EXEC PGM=SMPLISTR,REGION=100K
*    //STEPLIB DD  IF THE PROGRAM IS IN A PRIVATE LIB
*    //SYSPRINT DD SYSOUT=A,DCB=BLKSIZE=3509
*    //SMPCDS DD DISP=SHR,DSN=SYS1.SMPCDS  (OR ACDS)
*    //SMPLOG DD DISP=SHR,DSN=...  (OPTIONAL..NEEDED FOR 'LOG')
*    //SYSUT1 DD UNIT=DISK,SPACE=(CYL,(1,1),DCB=BLKSIZE=3520
*    //SORTLIB  DD  DISP=SHR,DSN=SYS1.SORTLIB
*    //SORTWK01 DD SPACE=(CYL,1),UNIT=(DISK,SEP=(SYSUT1))
*    //SORTWK02 DD SPACE=(CYL,1),UNIT=(DISK,SEP=(SYSUT1,SORTWK01))
*    //SORTWK03 DD SPACE=(CYL,1),UNIT=(DISK,SEP=(SYSUT1,SORTWK01,
*                  SORTWK02))
*
* NOTE - THE GOTTEN AREA USED TO CONSTRUCT THE DIRECTORY + DATA
*        AREA FOR PROCESSING A PTF ENTRY IS DEPENDANT ON THE
*        VALUE OF 'PEMAX'.  IF A PTF WAS PROCESSED BY SMP WITH
*        A LARGE VALUE FOR PEMAX AND THEN THE UCLIN/REP FUNCTION
*        WAS USED TO REDUCE THE VALUE OF PEMAX, UNPREDICTABLE
*        RESULTS CAN OCCUR IN SMPLISTR (E.G, ABEND60A).  IN ORDER
*        TO CIRCUMVENT THE PROBLEM, A NEW VALUE ('PEMIN') HAS BEEN
*        ADDED TO SMPLISTR (1.1).  THE GOTTEN AREA SIZE NOW
*        IS DEPENDANT ON THE GREATER OF 'PEMIN' OR THE VALUE
*        OF 'PEMAX' IN THE CDS.
*
* EXEC PARMS ...
*      . LINECNT=XX (DEFAULT=80) SET SYSPRINT PAGESIZE
*      . PTF/NOPTF    LIST BASIC PTF INFO
*      . XREF/NOXREF    LIST MODULE/MACRO XREF BY PTF
*      . SUPNO/NOSUPNO - LIST SUPERSEDED PTFS
*      . LOG     LIST THE SMP LOG
*      . SUPREF/NOSUPREF - SORTED LIST OF PTFS AND SUPERSEDES
*      . MOD   - LIST MODULE INFO
*      . LMOD  - LIST LOAD MODULE INFO
*      . DLIB  - LIST TOTAL-COPY DLIB LIBRARIES
*      . MAC   - LIST MACRO INFO
*      . ASM   - LIST ASSEMBLED MODULE INFO
*      . CHRONO - LIST PTFS IN CHRONOLOGICAL ORDER
*      . MODREF - XREF (SORTED) LISTING OF LMOD/MOD
*----------------------------------------------------------------------
 EJECT
*----------------------------------------------------------------------
*        LOCALLY DEFINED MACROS
*----------------------------------------------------------------------
         MACRO
&L       PROCPTF &C,&T,&A,&B
&L.00    LA    R7,LINEA6            INITIALIZE
         LA    R6,7
         LR    R5,R8
         LR    R3,R4                   SCAN FOR TYPE
&L.10    CLI   0(R5),X'FF'
         BE    &L.90
         CLI   8(R5),&T
         BE    &L.20
&L.15    LA    R5,9(,R5)
         SH    R3,=H'9'
         BP    &L.10
         B     &L.90                   FOR PRINT
&L.20    MVC   0(8,R7),0(R5)
         LA    R7,9(,R7)
         BCT   R6,&L.25
         MVC   LINEA5,=CL6&C
         BAL   R10,PRNT
         LA    R7,LINEA6
         LA    R6,7                    FOR UT1
&L.25    TM    SW,SW1           TEST FOR XREF
         BZ    &L.15            NO XREF
         MVI   RECTYPE,&A
         MVC   RECFLD1,0(R5)
         MVC   RECFLD4,=CL6&C
         BAL   R10,PUTREC
         AIF   ('&B' EQ '').A
         MVI   RECTYPE,&B
         BAL   R10,PUTREC
.A       ANOP  ,
         B     &L.15
&L.90    CH    R6,=H'7'                COMPLETE FOR THIS TYPE
         BE    &L.99
         MVC   LINEA5,=CL6&C
         BAL   R10,PRNT
&L.99    EQU   *
         MEND
*
         MACRO
&L       X1    &A,&B,&C,&D,&E,&F,&G
&L       TM    &A,&B
         BZ    &C
         CLC   SUBTTL1A,&D
         BE    Z&SYSNDX           ALREADY PROCESSING THIS DATA
         BAL   R10,FLUSH      CLEAR BUFFER
         LA    R1,&F          SET COL. LENGTH
         ST    R1,BUFFER5
         BAL   R10,REINIT
         MVC   SUBTTL1A,&D        SUBTITLE FOR THIS DATA
         SETPAGE &D
         L     R15,=A(&E)
         ST    R15,SUBTITLE
Z&SYSNDX EQU   *
         MEND
*
         MACRO
&L       CMPR  &A,&B,&C,&D,&E,&F,&G,&H
         LCLA  &I
&I       SETA  K'&A
&L       CLC   =C'&A',0(R1)             IS THIS PARM SPECIFIED?
         BNE   Z&SYSNDX
         LA    R1,&I.(,R1)
         AIF   ('&B' EQ 'SET').A
         NI    &C,255-&D
         AGO   .B
.A       OI    &C,&D               SET THE SWITCH
.B       B     PRMA                CONTINUE WITH NEXT PARM
Z&SYSNDX EQU   *
         MEND  ,
*
         MACRO
&L       LST1  &A,&B,&C,&D
         LCLA  &I
&I       SETA  K'&A
&L       MVC   LINE+15(&I),=C'&A'
         MVC   LINE+25(30),&D
&I       SETA  &I+3
         TM    &B,&C
         BZ    Y&SYSNDX
         LH    R0,&D.-2
         LTR   R0,R0
         BM    Z&SYSNDX
         CVD   R0,DBLWORK
         MVC   LINE+5(6),=X'402020202120'
         ED    LINE+5(6),DBLWORK+5
         B     Z&SYSNDX
Y&SYSNDX MVC   LINE+13(2),=C'NO'
Z&SYSNDX BAL   R10,PRNT
         MEND  ,
*
         MACRO
&L       LISTPTF &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K
&L.00    CLI   OLDE35TP,0
         BE    &L.02
         CLI   OLDE35TP,&A
         BE    &E
         BAL   R10,FLUSH
&L.02    LA    R1,&B
         ST    R1,BUFFER5
         BAL   R10,REINIT
         L     R1,=A(&C)
         ST    R1,SUBTITLE
         MVC   SUBTTL1A,&D
         SETPAGE &D
         MVI   OLDE35TP,&A
         XC    OLDE35NM,OLDE35NM
         B     &E
         MEND
*
         MACRO
&L       X2    &A,&B,&C,&D
         LCLA  &I
&I       SETA  K'&D
&L       TM    &A,&B
         BZ    Z&SYSNDX
         MVC   &C.(&I),=C'&D'
Z&SYSNDX EQU   *
         MEND
*
         MACRO
&L       $DC   &A
         DC    H'-1'         PAGE NUMBER
&L       DC    CL30&A
         MEND  ,
*
         MACRO
&L       SETPAGE &A
&L       LH    R0,PAGENUM
         AH    R0,=H'1'
         STH   R0,&A.-2
         MEND
 EJECT
SMPLISTR START 0
*
*        SORT RECORD TYPES
TYP1     EQU   2               FOR MACRO PTF
TYP2     EQU   4               FOR ALL APAR/PTF/LOCAL-MOD UPDATES
TYP3     EQU   6               SORT BY SUPNO
TYP4     EQU   8               CHRONOLOGICAL SORT OF PTFS
TYP5     EQU   10              SORT BY LMOD/MOD
*        SMP PTF ENTRY TYPES
SMPTYP0  EQU   0               MACRO
SMPTYP1  EQU   1               MOD
SMPTYP2  EQU   2               S/ZAP
SMPTYP3  EQU   3               X/ZAP (EXPAND AND ZAP)
*        GENERAL REGISTER USAGE
R0       EQU   0             TEMP/WORK REGISTER
R1       EQU   1             TEMP/WORK REGISTER
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10            LOCAL LINK REGISTER
R11      EQU   11            BASE REGISTER NO. 2
R12      EQU   12            BASE REGISTER NO. 1
R13      EQU   13            SAVE AREA POINTER
R14      EQU   14
R15      EQU   15
*        CVT USAGE
CVTPTR   EQU   16
CVTPCNVT EQU   X'1C'
*
         SAVE  (14,12),,*
         LR    R11,R15                  SETUP BASE REG
         LA    R12,2048
         AR    R12,R12
         AR    R12,R11
         USING SMPLISTR,R11,R12
         LA    R15,SAVEAREA            INIT SAVE AREA
         ST    R15,8(R13)
         ST    R13,4(R15)
         LR    R13,R15
         L     R15,=A(PRM)         GO PROCESS THE EXEC-PARM
         BALR  R14,R15
         B     PARMOK
         WTO   'SMPLISTR: PARM ERROR',ROUTCDE=11
         MVI   RETX,4          SET WARNING RETURN CODE
PARMOK   L     R1,16       A(CVT)
         L     R1,196(,R1) A(SMCA)
         MVC   SUBTTL1F(2),18(R1)
         MVC   SUBTTL1F+3(2),16(R1)
         GETMAIN VU,LA=MEM1,A=MEM2
         FREEMAIN V,A=MEM2
*----------------------------------------------------------------------
*        DETERMINE AND FORMAT THE DATE/TIME FOR THE PRINTOUT HEADING
*----------------------------------------------------------------------
         TIME  DEC
         ST    R0,XTIME
         ST    R1,XDATE
         L     R15,=A(FTIME)
         BALR  R14,R15
         L     R15,=A(FDATE)
         BALR  R14,R15
         MVC   TITLE1,XTIME1
         MVC   TITLE2,XDATE1
*----------------------------------------------------------------------
*        PERFORM PRINT-FILE AND UTILITY FILE INITIALIZATION
*----------------------------------------------------------------------
INIT0    OPEN  (SYSPRINT,OUTPUT)
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    ABEND1
*------- ALLOC THE PAGE-BUFFER
         LH    R0,MAXLINE
         SH    R0,=H'7'
         LR    R1,R0
         SH    R1,=H'10'
         ST    R1,BUFFER4+16
         MH    R0,=Y(L'LINE)      BYTES PER LINE
         ST    R0,BUFFER4
         GETMAIN R,LV=(0)
         ST    R1,BUFFER4+4
         A     R1,BUFFER4
         ST    R1,BUFFER4+8
*------- INIT THE UTILITY FILE
         TM    SW,SW0         ANY PTF PROCESSING
         BZ    LST            NO.
         OPEN  (SYSUT1,OUTPUT)
         TM    SYSUT1+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    ABEND3
*----------------------------------------------------------------------
* PERFORM CDS-FILE INITIALIZATION
         BAL   R10,OPENCDS
         TM    SYSTEM1,X'80'
         BZ    *+10
         MVC   SUBTTL1D,=C'TSO'
         MVC   SUBTTL1B,SYSTEM1+1
         MVC   SUBTTL1C,SYSTEM1+5
         LH    R0,PEMAX
         CVD   R0,DBLWORK
         OI    DBLWORK+7,X'0F'
         UNPK  SUBTTL1E,DBLWORK
         BAL   R10,GBUF    ALLOC THE MEMBER-DATA BUFFER
*----------------------------------------------------------------------
*        MAIN 'CONTROL' FOR CDS (READ) PROCESSING
*----------------------------------------------------------------------
*
*        INITIALIZE FOR PTF LISTING WHILE READING CDS
         MVC   SUBTTL1A,SUBTTLA1
         SETPAGE SUBTTLA1
*
*        GET THE NEXT DIRECTORY ENTRY AND PERFORM APPROPRIATE PROCESS
MAIN10   BAL   R10,GETNTRY
         LR    R9,R1
         CLI   0(R9),X'FF'
         BE    MAIN15
         CLI   0(R9),C'9'
         BE    PTF110
         CLI   0(R9),X'F0'
         BNL   MAIN10
         TM    0(R9),B'11000000'
         BO    MAIN20
         B     MAIN10
MAIN15   BAL   R10,CLOSCDS
         BAL   R10,FBUF       FREE THE DATA BUFFER
         MVC   MSG(L'MSG2),MSG2
         BAL   R10,PRNTMSG
         CLOSE SYSUT1
         FREEPOOL SYSUT1
         B     DOSORT
*------- PROCESS DATA FOR LMOD/MOD XREF
MAIN20   TM    SW,SW6
         BZ    MAIN10     NOT ENABLED
         BAL   R10,LOAD
         MVI   RECTYPE,TYP5
         MVC   RECFLD3(8),0(R9)
         SH    R4,=H'9'
         BNP   MAIN10
         MVC   RECFLD4(7),2(R8)
         LA    R8,9(,R8)
MAIN22   CLI   0(R8),X'FF'
         BE    MAIN10
         MVC   RECFLD1,0(R8)
         BAL   R10,PUTREC
         LA    R8,8(,R8)
         SH    R4,=H'8'
         BP    MAIN22
         B     MAIN10
*----------------------------------------------------------------------
*        PROCESS (LIST) A PTF ENTRY FROM THE CDS
*----------------------------------------------------------------------
PTF110   MVC   LINEA1,1(R9)         PUT PTF/MEMBER NAME IN MSG
         UNPK  DBLWORK(5),13(3,R9)
         MVC   LINEA2(2),DBLWORK
         MVI   LINEA2+2,C'.'
         MVC   LINEA2+3(3),DBLWORK+2
         TM    SW,SW5       CHRONO SORT?
         BZ    PTF114       NO.
         MVI   RECTYPE,TYP4 YES, FORMAT AND WRITE THE RECORD
         MVC   RECFLD1(8),LINEA2
         MVC   RECFLD3(7),1(R9)
         MVI   RECFLD3+7,C' '
         XC    RECFLD4,RECFLD4
         TM    12(R9),B'00010000'   IF SUPERSEDED, SAVE THE ID
         BZ    PTF112
         MVC   RECFLD4(7),16(R9)
PTF112   BAL   R10,PUTREC
PTF114   TM    12(R9),B'00010000'
         BZ    PTF120
         TM    SW,SW2          TEST FO SUPNO
         BZ    PTF115          NO
         MVC   LINEA4,16(R9)
         BAL   R10,PRNT
PTF115   TM    SW,SW4          SUPNO SORT NEEDED?
         BZ    MAIN10          NO.
         MVI   RECTYPE,TYP3    YES, FORMAT THE REC.
         MVC   RECFLD4(6),LINEA2              PUT DATE IN RECORD
         MVC   RECFLD3(7),1(R9)
         MVC   RECFLD1(7),16(R9)
         MVI   RECFLD1+7,C' '
         BAL   R10,PUTREC
         B     MAIN10
PTF120   TM    12(R9),B'10000000'
         BZ    PTF121
         MVC   LINEA30,=C'APPL'
PTF121   TM    12(R9),B'01000000'
         BZ    PTF122
         MVC   LINEA31,=C'ACPT'
         SH    R4,=H'4'
PTF290   MVC   RECFLD3(7),1(R9)
         MVI   RECFLD3+7,C' '
*------- PROCESS MACRO ENTRIES
PTF3     PROCPTF 'MACRO',SMPTYP0,TYP1,TYP2
*------- PROCESS MOD ENTRIES
PTF4     PROCPTF 'MOD',SMPTYP1,TYP2
*------- PROCESS S/ZAP ENTRIES
PTF5     PROCPTF 'S/ZAP',SMPTYP2,TYP2
*------- PROCESS EXPAND/ZAP (X/ZAP)
PTF6     PROCPTF 'X/ZAP',SMPTYP3,TYP2
*        WRAPUP PROCESSING THIS PTF ENTRY
PTF900   CLI   LINEA1,C' '
         BE    MAIN10
         MVI   LINEA6,C'*'
         MVC   LINEA6+1(L'LINEA6-1),LINEA6
         BAL   R10,PRNT
         B     MAIN10
*----------------------------------------------------------------------
*        SETUP AND LINK-TO SORT TO PROCESS THE CDS INFO
*----------------------------------------------------------------------
DOSORT   TM    SW,SW1+SW4+SW5+SW6      IS SORT NEEDED?
         BZ    LST                 NO, SKIP IT.
         OPEN  (SYSUT1,INPUT)
         GETMAIN VU,LA=MEM1,A=MEM2
         FREEMAIN V,A=MEM2
         L     R1,MEM2+4
         SRL   R1,10         CONVERT TO 'K'
         SH    R1,=H'8'      LEAVE AT LEAST 8K
         MH    R1,=H'1024'   BACK TO BYTES
         ST    R1,SORTSIZE   PLUG INTO SORT PARM
         LA    R1,SORTPARM
         LINK  EP=SORT,MF=(E,(1))
         LTR   R15,R15
         BZ    LST
         MVC   MSG(L'ERR7),ERR7
         BAL   R10,PRNTMSG
         MVI   RETX,12
*----------------------------------------------------------------------
*        LIST CDS INFO
*----------------------------------------------------------------------
LST      TM    SWA,SWA0+SWA1+SWA2+SWA3+SWA4
         BZ    LOG
         BAL   R10,OPENCDS
         BAL   R10,GBUF     ALLOC THE DATA BUFFER
         L     R1,BUFFER4+4
         ST    R1,BUFFER5+4    INIT PAGE BUFFER
         XC    SUBTTL1A,SUBTTL1A
LST100   BAL   R10,GETNTRY
         LR    R9,R1
         L     R2,DIR1      ENTRY LENGTH
         SH    R2,=H'12'    NOW IS USER-DATA LENGTH
         CLI   0(R9),X'FF'
         BE    LST190
         CLI   0(R9),X'F0'
         BE    LST200
         BH    LST190
         TM    0(R9),B'11000000'
         BZ    LST300
         BO    LST600
         TM    0(R9),B'10000000'
         BO    LST500
         B     LST400
LST190   BAL   R10,CLOSCDS
         BAL   R10,FBUF
         BAL   R10,FLUSH
         B     LOG
*------- LIST 'DLIB' INFO
LST200   X1    SWA,SWA2,LST100,SUBTTLH1,SUBTTL72,40
         MVC   DBLWORK(7),1(R9)
         BAL   R10,HMAUNPK
         MVC   LINE(8),DBLWORK
         MVC   LINEA1+10(8),12(R9)
         SH    R2,=H'8'
         BNP   LST210
         MVC   LINEA1+20(8),20(R9)
LST210   BAL   R10,ADDPRT
         B     LST100
*------- LIST ASM INFO
LST300   X1    SWA,SWA4,LST100,SUBTTLJ1,SUBTTL70,30
         MVC   LINEA1(8),0(R9)
         OI    LINEA1,X'C0'
         BAL   R10,ADDPRT
         B     LST100
*------- LOAD MODULE INFO
LST400   X1    SWA,SWA1,LST100,SUBTTLG1,SUBTTL74,40
         MVC   LINE(8),0(R9)
         OI    LINE,X'C0'
         SH    R2,=H'2'
         BNP   LST410
         CLI   14(R9),X'FF'
         BE    LST410
         MVC   LINE+14(8),14(R9)
         SH    R2,=H'8'
         BNP   LST410
         CLI   22(R9),X'FF'
         BE    LST410
         MVC   LINE+23(9),22(R9)
LST410   MVC   LINE+9(4),=C'COPY'     ASSUME 'COPY'
         TM    13(R9),B'10000000'
         BO    LST490                 YES..IT IS A COPY
         MVC   LINE+9(4),=C'LINK'     NOT COPIED..IT IS LINKED
         BAL   R10,ADDPRT
         CLI   12(R9),0          'STD'
         BNE   LST420            NO.
         MVC   LINE+9(3),=C'STD'
         B     LST490
LST420   X2    12(R9),B'00000010',LINE+9,DC
         X2    12(R9),B'00000001',LINE+12,NE
         TM    12(R9),B'11100100'
         BZ    LST430
         X2    12(R9),B'10000000',LINE+15,AC1
         X2    12(R9),B'01000000',LINE+19,RENT
         X2    12(R9),B'00100000',LINE+24,REUS
         X2    12(R9),B'00000100',LINE+29,REFR
         BAL   R10,ADDPRT
         TM    12(R9),B'00011000'
         BZ    LST100
LST430   X2    12(R9),B'00010000',LINE+15,SCTR
         X2    12(R9),B'00001000',LINE+20,OVLY
LST490   BAL   R10,ADDPRT
         B     LST100
*------- MACRO INFO
LST500   X1    SWA,SWA3,LST100,SUBTTLI1,SUBTTL71,30
         MVC   LINE(8),0(R9)
         OI    LINE,X'C0'
         MVC   LINE+9(2),12(R9)
         SH    R2,=H'2'
         BNP   LST550
         LA    R3,14(,R9)
LST510   MVC   LINE+12(8),0(R3)
         SH    R2,=H'8'
         BNP   LST550
         LA    R3,8(,R3)
         CLI   0(R3),X'FF'
         BE    LST550
         BAL   R10,ADDPRT
         B     LST510
LST550   BAL   R10,ADDPRT
         B     LST100
*------- MOD INFO
LST600   X1    SWA,SWA0,LST100,SUBTTLF1,SUBTTL73,40
         MVC   LINE(8),0(R9)
         OI    LINE,X'C0'
         MVC   LINE+9(2),12(R9)
         SH    R2,=H'2'
         BNP   LST650
         MVC   DBLWORK(7),14(R9)
         BAL   R10,HMAUNPK
         MVC   LINE+12(8),DBLWORK
         BAL   R10,LOAD
         SH    R4,=H'9'
         BNP   LST650
         LA    R8,9(,R8)
LST610   CLI   0(R8),X'FF'
         BE    LST650
LST620   CLI   0(R8),X'FF'
         BE    LST100
         MVC   LINE+21(8),0(R8)
         LA    R8,8(,R8)
         BAL   R10,ADDPRT
         SH    R4,=H'8'
         BP    LST620
         B     LST100
LST650   BAL   R10,ADDPRT
         B     LST100
*----------------------------------------------------------------------
*        LIST THE SMP-LOG (HLDS)
*----------------------------------------------------------------------
LOG      TM    SW,SW3
         BZ    ALLDONE
         XC    JFCB(176),JFCB
         RDJFCB SMPLOG
         CLI   JFCB,0
         BE    LOG$
         MVC   TITLE4,JFCB
         MVC   TITLE3(6),JFCB+118
         OPEN  (SMPLOG,INPUT),TYPE=J
         TM    SMPLOG+DCBOFLGS-IHADCB,DCBOFOPN
         BO    LOGA
LOG$     MVC   MSG(L'ERR8),ERR8
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
LOGA     LA    R1,999       SET FOR PAGE EJECT
         STH   R1,LINENUM
         L     R1,=A(SUBTTL4)
         ST    R1,SUBTITLE
         MVC   SUBTTL1A,SUBTTLD1
         SETPAGE SUBTTLD1
LOG1     GET   SMPLOG
         LR    R3,R1
         MVC   DBLWORK(2),0(R1)
         LH    R4,DBLWORK
         CLC   LOGDATE1,4(R3)
         BE    LOG1A
         MVC   LOGDATE1,4(R3)
         MVC   XDATE,LOGDATE
         L     R15,=A(FDATE)
         BALR  R14,R15
         MVC   LINE(L'XDATE1),XDATE1
LOG1A    CLC   LOGTIME(3),7(R3)
         BE    LOG1B
         MVC   LOGTIME(3),7(R3)
         MVC   XTIME,LOGTIME
         L     R15,=A(FTIME)
         BALR  R14,R15
         MVC   LINE+L'XDATE1+1(L'XTIME1),XTIME1
LOG1B    LA    R3,10(,R3)      POSITION TO MESSAGES
         SH    R4,=H'10'
         BNP   LOG4
LOG2     LA    R5,LINE+L'XDATE1+L'XTIME1+2
         LA    R15,LINE+L'LINE
         SR    R15,R5
         CR    R4,R15
         BH    LOG2A
         LR    R15,R4
         B     LOG3
LOG2A    LR    R0,R15
        LA    R1,0(R3,R15)
         CLI   1(R1),C' '
         BE    LOG3
LOG2B    CLI   0(R1),C' '
         BE    LOG2C
         BCTR  R1,0
         BCT   R0,LOG2B
         B     LOG3
LOG2C    CH    R0,=H'20'
         BL    LOG3
         LR    R15,R0
LOG3     SR    R4,R15
         BCTR  R15,0
         EX    R15,LOGMVC
         LA    R3,1(R3,R15)
LOG4     BAL   R10,PRNT
         LTR   R4,R4
         BP    LOG2
         B     LOG1
LOGMVC   MVC   0(*-*,R5),0(R3)
LOGEOF   CLOSE SMPLOG
         FREEPOOL SMPLOG
         MVC   LINE(L'MSG4),MSG4
         BAL   R10,PRNT
*------- PROCESSING COMPLETE .. GO TO WRAPUP AND EXIT
ALLDONE  L     R15,=A(EXIT)
         BR    R15
*----------------------------------------------------------------------
*        ERROR TERMINATIONS
*----------------------------------------------------------------------
ABEND1   ABEND 1
ABEND2   MVC   MSG(L'ERR2),ERR2
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
ABEND3   MVC   MSG(L'ERR3),ERR3
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
ABEND4   MVC   MSG(L'ERR4),ERR4
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
ABEND5   MVC   MSG(L'ERR5),ERR5
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
ABEND6   MVC   MSG(L'ERR6),ERR6
         BAL   R10,PRNTMSG
         MVI   RETX,16
         B     ALLDONE
 EJECT
*------- UNPACK THE SMP 6/8 BIT DDNAME PACKING
HMAUNPK  CLI   DBLWORK,X'FE'
         BE    HMAUNPK0
         MVI   DBLWORK+7,C' '
         BR    R10
HMAUNPK0 STM   R14,R12,12(R13)     SAVE ALL REGS
         MVC   DBLWORK(7),DBLWORK+1
         L     R1,DBLWORK
         LM    R14,R15,DBLWORK
         SLDL  R14,24
         LA    R2,2
         LA    R4,DBLWORK
HMAUNPK1 LA    R3,4
HMAUNPK2 XR    R0,R0
         SLDL  R0,6
         STC   R0,0(,R4)
         O     R0,=A(X'C0')
         CLI   0(R4),X'1B'
         BNE   *+8
         LA    R0,C'$'
         CLI   0(R4),X'3B'
         BNE   *+8
         LA    R0,C'#'
         CLI   0(R4),X'3C'
         BNE   *+8
         LA    R0,C'@'
         STC   R0,0(,R4)
         LA    R4,1(,R4)
         BCT   R3,HMAUNPK2
         BCT   R2,*+8
         B     HMAUNPK9
         LR    R1,R14
         B     HMAUNPK1
HMAUNPK9 LM    R14,R12,12(R13)
         CLC   DBLWORK(7),=CL8'SYSPUNCH'
         BNER  R10
         MVI   DBLWORK+7,C'H'
         BR    R10
*----------------------------------------------------------------------
*   CDS (DIRECTORY AND MEMBER) I/O SUBROUTINES                        *
*----------------------------------------------------------------------
*
*------- CLOSE THE CDS
CLOSCDS  CLOSE SMPCDS
         LM    R0,R1,BUFFER1
         FREEMAIN R,LV=(0),A=(1)
         LM    R0,R1,BUFFER2
         FREEMAIN R,LV=(0),A=(1)
         BR    R10
*
*------- OPEN THE CDS
OPENCDS  XC    JFCB,JFCB
         RDJFCB SMPCDS
         CLI   JFCB,0
         BE    ABEND2
         MVC   TITLE4,JFCB
         MVC   TITLE3(6),JFCB+118
         OPEN  (SMPCDS,INPUT),TYPE=J
         TM    SMPCDS+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    ABEND2
         OBTAIN VTOC
         XR    R2,R2
         IC    R2,DSCB+31
         STH   R2,DIRCNT
         LR    R1,R2
         MH    R2,=H'8'
         LA    R2,16(,R2)
         MH    R1,=H'272'
         AR    R1,R2
         ST    R1,BUFFER1
         LR    R0,R1
         GETMAIN R,LV=(0)
         ST    R1,BUFFER1+4
         AR    R2,R1
         ST    R2,BUFFER1+8
         LH    R0,SMPCDS+DCBBLKSI-IHADCB
         ST    R0,BUFFER2
         GETMAIN R,LV=(0)
         ST    R1,BUFFER2+4
*------- BUILD THE DIRECTORY-READ CHANNEL PROGRAM
         LH    R15,DIRCNT
         L     R1,BUFFER1+4
         L     R2,BUFFER1+8
         XC    0(16,R1),0(R1)
         LA    R0,CCHHR       BUILD THE SHA AND TIC
         ST    R0,0(,R1)
         MVI   0(R1),X'39'
         MVI   4(R1),X'40'
         MVI   7(R1),4
         ST    R1,8(,R1)
         MVI   8(R1),X'08'
         MVI   12(R1),X'40'
         LA    R1,16(,R1)
         LA    R4,272
OPENCDS1 XC    0(8,R1),0(R1)            BUILD CCW'S FOR READING
         ST    R2,0(,R1)                A(DIR-BLK COUNT,KEY,DATA)
         MVI   0(R1),X'1E'              READ CKD
         MVI   4(R1),X'60'
         STH   R4,6(,R1)                LENGTH
         LA    R1,8(,R1)
         LA    R2,272(,R2)
         BCT   R15,OPENCDS1
         SH    R1,=H'4'           ALL DONE..BACKUP UP 4
         NI    0(R1),X'BF'        AND TURN OFF CHAINING
         L     R1,BUFFER1+4
         ST    R1,ACP
*------- INITIALIZE THE I/O CONTROL VARIABLES
OPENCDS8 LA    R1,X'100'
         ST    R1,TRACK
         XC    DIR1(5*4),DIR1
         LA    R1,999
         ST    R1,DIR1
         LH    R0,PEMAX
         LTR   R0,R0
         BNZR  R10          ALL DONE
         BLDL  SMPCDS,SYSTEM   FIRST TIME .. GET SYSTEM INFO
         LTR   R15,R15
         BNZ   ABEND4
         MVC   PEMAX,SYSTEM1+6
         BR    R10
*------- INIT/LOAD MEMBER DATA (IF ANY)
LOAD     LA    R8,12(,R9)        ASSUME ALL IN DIR.
         L     R4,DIR1
         SH    R4,=H'12'
         TM    11(R9),B'10000000' TEST FOR ALIAS
         BOR   R10                YES, ALL DONE
         L     R7,BUFFER3         NO, READIN
         L     R8,BUFFER3+4
         LR    R6,R8
         READ  RMEMX,SF,SMPCDS,(R2),'S'
         CHECK RMEMX
         L     R15,RMEMX+16
         LH    R1,SMPCDS+DCBBLKSI-IHADCB
         SH    R1,14(,R15)
         ST    R1,BUFFER2+8
LOAD10   LA    R15,80(,R6)    TEST FOR ENOUGH SPACE
         C     R15,BUFFER3+8
         BNL   LOAD80
         MVC   0(80,R6),0(R2)
         LA    R4,80(,R4)
         LA    R2,80(,R2)
         LA    R6,80(,R6)
         SH    R1,=H'80'
         BP    LOAD10
         B     LOAD05
LOAD80   SH    R6,=H'9'
         MVI   0(R6),X'FF'
EOF      BR    R10          END-OF-FILE RETURN
*--- ALLOC THE DATA BUFFER
GBUF     LH    R3,PEMAX
         MH    R3,=H'9'
         XR    R2,R2
         D     R2,=F'80'
         LA    R3,1(,R3)       ROUND UP
         MH    R3,=H'80'
         ST    R3,BUFFER3
         LR    R0,R3
         GETMAIN R,LV=(0)
         ST    R1,BUFFER3+4
         LA    R1,0(R3,R1)  CALC. END ADDR
         ST    R1,BUFFER3+8
         BR    R10
LOADMVC  MVC   0(*-*,R6),0(R2)
*--- FREE THE DATA BUFFER
FBUF     LM    R0,R1,BUFFER3
         FREEMAIN R,LV=(0),A=(1)
         BR    R10
*------- GET THE NEXT DIRECTORY ENTRY AND RETURN THE POINTER TO IN
*------- IN R1 ... THIS ROUTINE USES R2,R3,R4,R5 ARE WORK REGS.
GETNTRY  LM    R1,R5,DIR1
         SR    R2,R1
         BNP   GETNTRY1
         AR    R4,R1
         B     GETNTRYZ
GETNTRY1 SH    R3,=H'1'
         BNP   GETNTRY2
         LA    R5,272(,R5)
         B     GETNTRYW
***READ IN A NEW TRACK OF DIRECTORY BLOCKS
GETNTRY2 STM   R14,R12,12(R13)
         L     R0,TRACK
         LH    R1,TRACK
         LA    R1,1(,R1)
         STH   R1,TRACK
         L     R1,SMPCDS+DCBDEBAD-IHADCB
         LA    R2,MBB
         L     R15,CVTPTR
         L     R15,CVTPCNVT(,R15)
         LR    R3,R13
         BALR  R14,R15
         LR    R13,R3
         LM    R14,R12,12(R13)
         L     R1,BUFFER1+8          CLEAR FIRST BYTES IN INP AREA
         LH    R15,DIRCNT
GETNTRYA XC    0(20,R1),0(R1)
         LA    R1,272(,R1)
         BCT   R15,GETNTRYA
         XC    ECB,ECB
         EXCP  IOB
         WAIT  1,ECB=ECB
         CLI   ECB,X'7F'
         BE    GETNTRYX
         CLI   ECB,X'42'
         BE    ABEND6
         LH    R1,DIRCNT
         L     R15,BUFFER1+8
         XR    R3,R3
GETNTRY3 CLC   =XL5'0',0(R15)
         BE    GETNTRYY
         CLC   =H'0',6(R15)
         BE    GETNTRYY
         CLC   =X'0100',6(R15)
         BNE   ABEND5
         LA    R15,272(,R15)
         LA    R3,1(,R3)
         BCT   R1,GETNTRY3
*
GETNTRYX LH    R3,DIRCNT
GETNTRYY L     R5,BUFFER1+8
GETNTRYW LA    R4,18(,R5)
         MVC   DBLWORK(2),16(R5)
         LH    R2,DBLWORK
         SH    R2,=H'2'
GETNTRYZ XR    R1,R1
         IC    R1,11(,R4)
         N     R1,=A(X'1F')
         SLL   R1,1
         LA    R1,12(,R1)
         STM   R1,R5,DIR1
         LR    R1,R4
         BR    R10
*----------------------------------------------------------------------
*        PRINTOUT SUBROUTINES
*----------------------------------------------------------------------
*
*        OUTPUT A RECORD TO THE UTILITY FILE
PUTREC   PUT   SYSUT1
         MVC   0(L'REC,R1),REC
         BR    R10
*
*        UPDATE THE PAGE NUMBER
PAGEUPD  LH    R1,PAGENUM
         LA    R1,1(,R1)
         STH   R1,PAGENUM
         CVD   R1,DBLWORK
         OI    DBLWORK+7,X'0F'
         UNPK  PAGENO,DBLWORK
         BR    R14
*------- PRINT A MESSAGE
PRNTMSG  LH    R1,LINENUM
         LA    R1,1(,R1)
         STH   R1,LINENUM
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE(L'MSG),MSG
         MVI   LINE0,C'0'
*------- PRINT A LINE
PRNT     LH    R1,LINENUM              OUTPUT A LINE
         LA    R1,1(,R1)
         CH    R1,MAXLINE
         BL    PRNTA
         BAL   R14,PAGEUPD
         PUT   SYSPRINT,TITLE
         PUT   SYSPRINT,SUBTTL1
         L     R0,SUBTITLE
         LTR   R0,R0
         BNZ   *+8
         L     R0,=A(SUBTTL$$)
         PUT   SYSPRINT,(0)
         MVI   LINE0,C'0'
         LA    R1,7
PRNTA    STH   R1,LINENUM
         PUT   SYSPRINT,LINE0
         MVI   LINE0,C' '
         MVC   LINE,LINE0
         BR    R10
*------- ADD DATA TO THE PAGE BUFFER
ADDPRT   LM    R14,R15,BUFFER5
         BCTR  R14,0
         EX    R14,ADDPRTM1
         MVI   LINE0,C' '
         MVC   LINE,LINE0
         LA    R15,1(R14,R15)
         ST    R15,BUFFER5+4
         C     R15,BUFFER4+8
         BNL   FLUSH
         BR    R10
ADDPRTM1 MVC   0(*-*,R15),LINE
FLUSHM1  MVC   0(*-*,R1),0(R15)
FLUSHM2  MVC   LINE(*-*),0(R9)
*------- PAGE BUFFER IS FULL (OR TO BE FLUSHED OUT)
FLUSH    STM   R9,R10,BUFFER5+12    SAVE USED REGS
         L     R9,BUFFER4+4         A(BUFFER START)
         L     R15,BUFFER5+4
         SR    R15,R9
         BNP   FLUSH8
         LA    R1,999
         STH   R1,LINENUM
         XR    R14,R14
         D     R14,BUFFER5    NO. OF ENTRIES
         C     R15,BUFFER4+16
         BNH   FLUSH6         CAN FIT IN 1 COL.
         XR    R0,R0
         LA    R1,L'LINE
         D     R0,BUFFER5    ENTRIES PER LINE
         XR    R14,R14
         DR    R14,R1        GROUPS
         LTR   R14,R14
         BZ    *+8
         LA    R15,1(,R15)   ROUND UP
         CH    R15,=H'20'    MIN COL. SIZE
         BNL   *+8
         LH    R15,=H'20'
         MH    R15,BUFFER5+2
         ST    R15,BUFFER5+8
         AR    R15,R9
         ST    R15,BUFFER5+4
FLUSH1   LA    R1,LINE
         LR    R15,R9
         L     R14,BUFFER5
         AR    R9,R14
         BCTR  R14,0
FLUSH1A  EX    R14,FLUSHM1
         LA    R1,1(R14,R1)
         A     R15,BUFFER5+8
         C     R1,=A(LINE+L'LINE)
         BL    FLUSH1A
         LA    R1,LINE-2
         LA    R15,L'LINE-5
         S     R15,BUFFER5
         BNP   FLUSH3
FLUSH2   LR    R14,R1              PUT IN THE COLUMN SEPARATORS
         A     R14,BUFFER5
         MVI   0(R14),C'*'
         A     R1,BUFFER5
         S     R15,BUFFER5
         BP    FLUSH2
FLUSH3   BAL   R10,PRNT
         C     R9,BUFFER5+4
         BL    FLUSH1
         B     FLUSH8
FLUSH6   L     R14,BUFFER5
         BCTR  R14,0
         EX    R14,FLUSHM2
         BAL   R10,PRNT
         A     R9,BUFFER5
         C     R9,BUFFER5+4
         BL    FLUSH6
FLUSH8   LM    R9,R10,BUFFER5+12     RELOAD USED REGS
*------- RE-INITIALIZE THE PAGE-BUFFER VALIABLES
REINIT   L     R15,BUFFER4+4
         ST    R15,BUFFER5+4
REINITA  MVI   0(R15),C' '
         MVC   1(L'LINE-1,R15),0(R15)
         LA    R15,L'LINE(,R15)
         C     R15,BUFFER4+8
         BL    REINITA
         BR    R10
*----------------------------------------------------------------------
*        DCB EXITS
*----------------------------------------------------------------------
         USING DCBEXIT1,R15
         USING IHADCB,R1
DCBEXIT1 LH    R3,DCBBLKSI             SYSPRINT EXIT
         LTR   R3,R3
         BNZ   *+8
         LA    R3,3509
         XR    R2,R2
         LH    R0,DCBLRECL
         DR    R2,R0
         MH    R3,DCBLRECL
         STH   R3,DCBBLKSI
         BR    R14
         USING DCBEXIT2,R15
DCBEXIT2 LH    R3,DCBBLKSI             SYSUT1 EXIT
         LTR   R3,R3
         BNZ   *+8
         LA    R3,2000
         XR    R2,R2
         LH    R0,DCBLRECL
         DR    R2,R0
         MH    R3,DCBLRECL
         STH   R3,DCBBLKSI
         BR    R14
         DROP  R1,R15
 EJECT
*----------------------------------------------------------------------
*        SORT DATA-INPUT EXIT
*----------------------------------------------------------------------
         DROP  R11,R12
         USING E15,R15
E15      SAVE  (14,12),,*
         LM    R11,R12,=A(SMPLISTR,SMPLISTR+4096)
         DROP  R15
         USING SMPLISTR,R11,R12
         LA    R15,SAVE15
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         GET   SYSUT1
         L     R13,4(,R13)
         LM    R14,R0,12(R13)
         LM    R2,R12,28(R13)
         LA    R15,12                'ADD RECORD'
         BR    R14
*        END OF FILE DETECTED ON SYSUT1
E15EOF   CLOSE SYSUT1
         FREEPOOL SYSUT1
         L     R13,4(,R13)
         RETURN (14,12),,RC=8
*----------------------------------------------------------------------
*        SORT DATA-OUTPUT EXIT
*             RECTYPE=0 FOR MACRO XREF
*             RECTPYE=4 FOR PTF XREF
*----------------------------------------------------------------------
         DROP  R11,R12
         USING E35,R15
E35      SAVE  (14,12),,*
         LM    R11,R12,=A(SMPLISTR,SMPLISTR+4096)
         DROP  R15
         USING SMPLISTR,R11,R12
         LA    R15,SAVE35
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         L     R9,0(,R1)              ADDR OF OUTPUT RECORD
         LA    R9,0(,R9)              CLEAR TYPE BYTE
         LM    R2,R5,SAVE35A          LOAD THE WORK REGS
         LTR   R9,R9                  TEST FOR END
         BZ    E35Z                   END OF DATA
         MVC   REC,0(R9)              COPY TO WORK AREA
         CLI   RECTYPE,TYP1           CHECK RECORD TYPES
         BE    E35100
         CLI   RECTYPE,TYP2
         BE    E35200
         CLI   RECTYPE,TYP3
         BE    E35300
         CLI   RECTYPE,TYP4
         BE    E35400
         CLI   RECTYPE,TYP5
         BE    E35500
         B     E35X1                  THIS TYPE NOT PROCESSED, IGNORE.
*------- MACRO XREF PROCESSING
E351     LISTPTF TYP1,30,SUBTTL3,SUBTTLB1,E35PRNT
*------- PTF XREF PROCESSING
E352     LISTPTF TYP2,30,SUBTTL3,SUBTTLC1,E35PRNT
*------- SORTED SUPNO PROCESSING
E353     LISTPTF TYP3,30,SUBTTL5,SUBTTLE1,E35PRNT
*------- SORTED CHRONOLOGICAL DATA
E354     LISTPTF TYP4,30,SUBTTL6,SUBTTLK1,E354P
E354P    CLC   OLDE35NM,RECFLD1
         BE    E354P1
         MVC   OLDE35NM,RECFLD1
         MVC   LINE(6),RECFLD1
E354P1   MVC   LINE+7(7),RECFLD3
         CLI   RECFLD4,0     IS THIS PTF SUPERSEDED?
         BE    E354P2        NO.
         MVC   LINE+15(7),RECFLD4
E354P2   BAL   R10,ADDPRT
         B     E35X1
E355     LISTPTF TYP5,30,SUBTTL8,SUBTTLL1,E35520
E35520   CLC   OLDE35NM,RECFLD1
         BE    E35530
         MVC   OLDE35NM,RECFLD1
         MVC   LINE(8),RECFLD1
E35530   MVC   LINE+9(8),RECFLD3
         MVC   DBLWORK(8),RECFLD4
         BAL   R10,HMAUNPK
         MVC   LINE+18(8),DBLWORK
         BAL   R10,ADDPRT
         B     E35X1
*------- PRINT TYPES 1,2,3
E35PRNT  CLC   OLDE35NM,RECFLD1
         BE    E35PRNT1
         MVC   OLDE35NM,RECFLD1
         MVC   LINE(8),RECFLD1
E35PRNT1 MVC   LINE+10(6),RECFLD4
         MVC   LINE+18(8),RECFLD3
         BAL   R10,ADDPRT
         B     E35X1
*------- THIS RECORD IS DONE, RETURN TO SORT
E35X1    STM   R2,R5,SAVE35A
         L     R13,4(,R13)
         RETURN (14,12),,RC=4
*------- END OF DATA, RETURN TO SORT AND CANCEL FURTHER ENTRY
E35Z     BAL   R10,FLUSH
         L     R13,4(,R13)
         RETURN (14,12),,RC=8
         DROP  R11,R12
 EJECT
*----------------------------------------------------------------------
*  CONSTANTS, STORAGE AREAS, ETC.                                     *
*----------------------------------------------------------------------
DBLWORK  DC    D'0'
SAVEAREA DC    18F'0'
SAVE15   DC    18F'0'
SAVE35   DC    18F'0'
SAVE35A  DC    4F'0'
SUBTITLE DC    A(SUBTTL2)
TTR      DC    F'0'
TRACK    DC    0F'0',Y(0),X'0100'
DIR1     DC    F'999',4F'0'
ECB      DC    F'0'
IOB      DC    0F'0'                  FOR READING THE DIRECTORY
         DC    X'42',X'000000',A(ECB)
CSW      DC    XL8'0'
ACP      DC    A(0),A(SMPCDS)
         DC    A(0),Y(0),Y(0)
MBB      DC    XL3'0'
CCHHR    DC    XL5'0'
BUFFER1  DC    4F'0'                   LENGTH, ADDR FOR DIRECTORIES
BUFFER2  DC    3F'0'                   LENGTH, ADDR FOR PDS-MEMBER
BUFFER3  DC    3F'0'
BUFFER4  DC    6F'0'       FOR FULL-PAGE BUFFER
BUFFER5  DC    6F'0'      MORE FULL-PAGE BUFFER
DIRCNT   DC    Y(0)
PAGENUM  DC    Y(0)
LINENUM  DC    Y(999)
MAXLINE  DC    Y(80)                MAX LINES/PAGE
PEMAX    DC    Y(0)
RETCODE  DC    Y(0)
RETX     EQU   RETCODE+1
SYSTEM   DC    Y(1,22),CL8'1SYSTEM',XL6'0'
SYSTEM1  DC    XL10'0'
*
SW       DC    B'10000000' 1/0
SW0      EQU   B'10000000' PTF/NOPTF
SW1      EQU   B'01000000' XREF/NOXREF
SW2      EQU   B'00100000' SUPNO/NOSUPNO
SWA4     EQU   B'00001000' ASM
*
REC      DC    XL25'0'
         ORG   REC
RECTYPE  DC    X'00'
RECFLD1  DC    CL8' '
RECFLD3  DC    CL8' '
RECFLD4  DC    CL6' '
         ORG   ,
OLDE35NM DC    CL8' '
OLDE35TP DC    X'00'
OLDE35T2 DC    X'00'
MEM1     DC    A(40*1024,200*1024)   MIN/MAX FOR SORTSIZE
MEM2     DC    A(0,0)                ADDR AND SIZE OF CORE
SORTPARM DC    0F'0',X'80',AL3(SORTPRM),Y(0)
SORTPRM  DC    Y(SORTPRML)
         DC    A(SORT,SORTEND)
         DC    A(RECORD,RECORDE)
         DC    A(E15)                   ADDR OF E15 EXIT
         DC    A(E35)                   ADDR OF E35 EXIT
SORTSIZE DC    A(60*1024)                CORE SIZE FOR SORT
         DC    X'FF00',C'AP'
SORTPRML EQU   *-SORTPRM-2
SORT     DC    C' SORT FIELDS=(1,17,CH,A)'
SORTEND  DC    C' '
RECORD   DC    C' RECORD TYPE=F,LENGTH=(25)'
RECORDE  DC    C' '
         DC    0D'0'
         LTORG
LOGDATE  DC    F'0'
         ORG   *-3
LOGDATE1 DC    XL3'0'
LOGTIME  DC    F'0'
XDATE    DC    F'0'
XTIME    DC    F'0'
         DC    C'0'     FOR EDIT
XTIME1   DC    C'HH.MM.SS'
XDATE1   DC    C'YY.DDD/WWW/MMM DD, 19YY'
TITLE    DC    CL121'1'
         ORG   TITLE+1
         DC    C'SMPLISTR 2.2  '
TITLE1   DC    C'HH.MM.SS',C' '
TITLE2   DC    C'YY.DDD/WWW/MMM DD, 19YY',C' - VOL='
TITLE3   DC    CL6'VOLSER',C'/DSN='
VOLSER   EQU   TITLE3
TITLE4   DC    CL44' '
         ORG   TITLE+111
         DC    C'PAGE  '
PAGENO   DC    C'NNNN'
         ORG
SUBTTL1  DC    CL121'0'
         ORG   SUBTTL1+1
SUBTTL1A DC    CL30' ',CL10' ',C'SYSTEM/RELEASE='
SUBTTL1B DC    C'XXXX',C' '
SUBTTL1F DC    C'XX-XX'    FROM 'SMCA'
         ORG   SUBTTL1+71
         DC    C'DEFAULT NUCLEUS=IEANUC0'
SUBTTL1C DC    C'0',CL3' '
SUBTTL1D DC    CL3' '
         DC    CL8' ',C'PEMAX='
SUBTTL1E DC    C'NNNNNN'
         ORG
SUBTTLA1 $DC   'APAR/PTF/LOCAL-MOD LISTING'
SUBTTLB1 $DC   'MACRO CROSS REFERENCE BY NAME'
SUBTTLC1 $DC   'MACRO/MODULE X-REF BY NAME'
SUBTTLD1 $DC   'LISTING OF SMP-LOG (HLDS)'
SUBTTLE1 $DC   'SUPERSEDED PTF ENTRIES'
SUBTTLF1 $DC   'MODULE LISTING'
SUBTTLG1 $DC   'LOAD MODULES'
SUBTTLH1 $DC   'COPIED DLIB LIBRARIES'
SUBTTLI1 $DC   'MACRO INFO'
SUBTTLJ1 $DC   'ASSEMBLED MODULES'
SUBTTLK1 $DC   'CHRONOLOGICAL ACTIVITY'
SUBTTLL1 $DC   'LMOD/MOD XREF'
MSG      DC    CL80' '
LINE0    DC    C' '
LINE     DC    CL120' '
         ORG   LINE
LINEA1   DS    CL7,CL2
LINEA2   DS    CL6,CL2
LINEA30  DS    CL4,CL1
LINEA31  DS    CL4,CL1
LINEA32  DS    CL5,CL1
LINEA33  DS    CL5,CL2
LINEA4   DS    CL7,CL2
LINEA5   DS    CL5,CL3
LINEA6   DS    CL63
         ORG   LINE
LINEB1   DS    CL8,CL2
LINEB3   DS    CL5,CL3
LINEB2   DS    CL99
LINEB2N  EQU   11
LINEB2L  EQU   9
         ORG   LINE
LINEC1   DC    CL7' ',C' '     SUPERSEDING PTF NO.
LINEC2   DC    7CL16' '
LINEC2N  EQU   7
LINEC2L  EQU   16
         ORG
MSG1     DC    C'** PROCESSING COMPLETE **'
MSG2     DC    C'** END OF PTF LISTING **'
MSG3     DC    C'** END OF PTF CROSS-REFERENCE LISTING **'
MSG4     DC    C'** END OF LOG **'
*
ERR2     DC    C'** ERROR OPENING SMPCDS **'
ERR3     DC    C'** ERROR OPENING THE UTILITY FILE SYSUT1 **'
ERR4     DC    C'** ERROR LOCATING THE ''SYSTEM'' CDS ENTRY **'
ERR5     DC    C'** CDS DIRECTORY BLK LENGTH ERROR **'
ERR6     DC    C'** I/O ERROR READING THE CDS DIRECTORY **'
ERR7     DC    C'** SORT ERROR, RC NOT ZERO **'
ERR8     DC    C'** OPEN ERROR FOR SMPLOG **'
ERR9     DC    C'** PTF DATA EXCEEDS PEMAX..DATA LOST'
*----------------------------------------------------------------------
VTOC     CAMLST SEARCH,VTOCDSN,VOLSER,DSCB
VTOCDSN  DC    44X'04'
DSCB     DC    0D'0',XL148'0'
*----------------------------------------------------------------------
JFCB     DC    0F'0',XL176'0'
EXLST1   DC    0F'0',X'87',AL3(JFCB)
EXLST2   DC    0F'0',X'85',AL3(DCBEXIT1)
EXLST3   DC    0F'0',X'85',AL3(DCBEXIT2)
*
         PRINT NOGEN
SMPLOG   DCB   DSORG=PS,MACRF=GL,DDNAME=SMPLOG,EODAD=LOGEOF, +++++++++++
               EXLST=EXLST1
SMPCDS   DCB   DSORG=PO,MACRF=R,DDNAME=SMPCDS,EXLST=EXLST1,EODAD=EOF
SYSPRINT DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,                    +
               RECFM=FBA,LRECL=121,EXLST=EXLST2
SYSUT1   DCB   DSORG=PS,MACRF=(PL,GL),DDNAME=SYSUT1,                   +
               RECFM=FB,LRECL=25,EXLST=EXLST3,EODAD=E15EOF
         DCBD  DSORG=(PO,QS),DEVD=(DA)
         PRINT GEN
*----------------------------------------------------------------------
SMPLISTR CSECT ,
SUBTTL$$ DC    CL121'0'
SUBTTL2  DC    C'0',120C'-'
         ORG   SUBTTL2+1
         DC    CL9'PTF NO.',CL8' DATE',C'-------STATUS'
         ORG   *+8
         DC    CL2' ',CL9' SUPNO',CL8'TYPE'
         DC    C'-------------------- MACRO/MODULE NAME(S) '
         ORG   ,
SUBTTL3  DC    C'0',4CL30'--NAME--  TYPE    UPDATE'
SUBTTL4  DC    C'0',120C'-'
         ORG   SUBTTL4+1
         DC    C'DATE',19C'-',C' ',C'--TIME--',C' '
         DC    C'----------------- LOG INFORMATION '
         ORG   ,
SUBTTL5  DC    C'0',4CL30'--PTF--   DATE    SUPER.'
SUBTTL6  DC    C'0',4CL30'DATE   UPDATE  SUPER.'
SUBTTL70 DC    C'0',4CL30'NAME'
SUBTTL71 DC    C'0',4CL30'-MACRO-- ID ASM-NAME(S)'
SUBTTL72 DC    C'0',3CL40'FROM      TO'
SUBTTL73 DC    C'0',3CL40'DMOD---- ID DLIB---- LMOD----'
SUBTTL74 DC    C'0',3CL40'LMOD---- OPER TO-LIB(S)'
SUBTTL8  DC    C'0',4CL30'--LMOD-- --DMOD-- --LIB---'
 EJECT
*----------------------------------------------------------------------
*        PROCESS THE EXEC-PARM
*----------------------------------------------------------------------
SMPLISTR CSECT ,
         USING SMPLISTR,R11,R12
         USING PRM,R15
PRM      DC    0H'0'
         L     R1,0(,R1)
         LH    R2,0(,R1)
         LA    R1,2(,R1)
         LTR   R2,R2
         BNP   PRM9
         LA    R2,0(R1,R2)        A(END OF PARM)
PRMA     CR    R1,R2              TEST FOR END
         BNL   PRM9
         CLI   0(R1),C','         SKIP OVER COMMAS
         BNE   PRMB
         LA    R1,1(,R1)
         B     PRMA
PRMB     CLC   =C'LINECNT=',0(R1)
         BE    PRMI
 CMPR PTF,SET,SW,SW0
 CMPR NOPTF,RESET,SW,(SW0+SW1+SW2+SW4)
 CMPR XREF,SET,SW,SW0+SW1
 CMPR NOXREF,RESET,SW,SW1
 CMPR SUPNO,SET,SW,SW0+SW2
 CMPR NOSUPNO,RESET,SW,SW2
 CMPR LOG,SET,SW,SW3
 CMPR SUPREF,SET,SW,SW0+SW4
 CMPR NOSUPREF,RESET,SW,SW4
 CMPR CHRONO,SET,SW,SW0+SW5
 CMPR MODREF,SET,SW,SW0+SW6
 CMPR MODREF,RESET,SW,SW6
 CMPR MOD,SET,SWA,SWA0
 CMPR LMOD,SET,SWA,SWA1
 CMPR DLIB,SET,SWA,SWA2
 CMPR MAC,SET,SWA,SWA3
 CMPR ASM,SET,SWA,SWA4
         B     4(R14)            ERROR RETURN
PRMI     LA    R1,8(,R1)        'LINECNT='
         XC    MAXLINE,MAXLINE
PRMI1    CR    R1,R2
         BNL   PRMI9
         CLI   0(R1),C'0'
         BL    PRMI9
         LH    R0,MAXLINE
         MH    R0,=H'10'
         STH   R0,MAXLINE
         IC    R0,0(,R1)
         N     R0,=F'15'
         AH    R0,MAXLINE
         STH   R0,MAXLINE
         LA    R1,1(,R1)
         B     PRMI1
PRMI9    LH    R0,MAXLINE
         CH    R0,=H'40'
         BNL   *+8
         CH    R0,=H'999'     MAX
         BL    *+8
         LH    R0,=H'999'
         LH    R0,=H'40'
         STH   R0,MAXLINE
         B     PRMA
PRM9     BR    R14                     NORMAL RETURN
         DROP  R15
         DC    0D'0'
*
*------- WRAPUP/EXIT ROUTINE
*
EXIT     BALR  R9,0          LOCAL BASE REG
         USING *,R9
         TM    SMPCDS+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    EXIT1
         CLOSE SMPCDS
EXIT1    TM    SYSUT1+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    EXIT2
         CLOSE SYSUT1
         FREEPOOL SYSUT1
EXIT2    LM    R0,R1,BUFFER4
         LTR   R0,R0
         BZ    EXIT3
         FREEMAIN R,LV=(0),A=(1)
*------- FORMAT AND PRINT THE TRAILER PAGE
EXIT3    LA    R1,999
         STH   R1,LINENUM
         XC    SUBTITLE,SUBTITLE
         MVC   SUBTTL1A,=CL30'PRINTOUT INDEX'
         MVC   LINE(8),=C'LINECNT='
         LH    R0,MAXLINE
         CVD   R0,DBLWORK
         OI    DBLWORK+7,X'F'
         UNPK  LINE+8(3),DBLWORK
         MVC   LINE+11(30),=CL30', PARMS IN EFFECT ARE --'
         BAL   R10,PRNT
         BAL   R10,PRNT
         MVC   LINE+7(11),=CL11'PAGE   PARM'
         MVC   LINE+25(10),=CL10'SUB TITLE'
         BAL   R10,PRNT
         BAL   R10,PRNT
 LST1 PTF,SW,SW0,SUBTTLA1
 LST1 XREF,SW,SW1,SUBTTLB1
 LST1 XREF,SW,SW1,SUBTTLC1
 LST1 SUPNO,SW,SW2,SUBTTLA1
 LST1 LOG,SW,SW3,SUBTTLD1
 LST1 SUPREF,SW,SW4,SUBTTLE1
 LST1 CHRONO,SW,SW5,SUBTTLK1
 LST1 MODREF,SW,SW6,SUBTTLL1
 LST1 MOD,SWA,SWA0,SUBTTLF1
 LST1 LMOD,SWA,SWA1,SUBTTLG1
 LST1 DLIB,SWA,SWA2,SUBTTLH1
 LST1 MAC,SWA,SWA3,SUBTTLI1
 LST1 ASM,SWA,SWA4,SUBTTLJ1
         BAL   R10,PRNT
         MVC   LINE(L'MSG1),MSG1
         BAL   R10,PRNT
         BAL   R10,PRNT
         CLOSE SYSPRINT
         FREEPOOL SYSPRINT
         L     R13,4(,R13)
         LH    R15,RETCODE
         RETURN (14,12),T,RC=(15)
         LTORG
         DROP  R9
*----------------------------------------------------------------------
*        SUBROUTINES TO FORMAT THE DATE AND TIME
*----------------------------------------------------------------------
         USING FTIME,R15
FTIME    MVC   XTIME1(8),=X'21204B20204B2020'
         ED    XTIME1-1(9),XTIME
         BR    R14
         USING FDATE,R15
*        FORMAT TODAY'S DATE
FDATE    UNPK  DBLWORK(5),XDATE+1(3)
         MVC   XDATE1(2),DBLWORK
         MVC   XDATE1+3(3),DBLWORK+2
         MVC   XDATE1+21(2),DBLWORK
         XC    DBLWORK,DBLWORK
         MVC   DBLWORK+5(3),XDATE+1
         MVO   DBLWORK+5(3),DBLWORK+4(2) MAKE 00YYDDDS INTO 00000YYS
         CVB   R0,DBLWORK
         ST    R0,BINYEAR
         MVI   MONMSK+10,28
         TM    BINYEAR+3,X'03'    IS IT A LEAP YEAR?
         BNZ   FDATE1             NO.
         MVI   MONMSK+10,29       YES, CORRECT TABLE
FDATE1   XC    DBLWORK,DBLWORK
         MVC   DBLWORK+6(2),XDATE+2
         CVB   R2,DBLWORK
         ST    R2,BINDAYS         SAVE FOR LATER
         XR    R0,R0
         LA    R1,11
FDATE2   IC    R0,MONMSK(R1)
         SR    R2,R0
         BNP   FDATE3
         BCT   R1,FDATE2
         B     *+6
FDATE3   AR    R2,R0       CORRECT OVERDRAW
         CVD   R2,DBLWORK
         OI    DBLWORK+7,X'F'
         UNPK  XDATE1+15(2),DBLWORK
         MH    R1,=H'3'     CALC. MONTH
         LA    R1,MONTAB(R1)
         MVC   XDATE1+11(3),0(R1)
*        DAY OF WEEK
         L     R1,BINYEAR
         SH    R1,=H'69'
         BNP   FDATE9
         XR    R0,R0
         D     R0,=F'4'
         MH    R1,=H'5'
         AR    R0,R1
         A     R0,BINDAYS
         SRDA  R0,32
         D     R0,=F'7'
         MH    R0,=H'3'
         LR    R1,R0
         LA    R1,DAYTAB(R1)
         MVC   XDATE1+7(3),0(R1)
FDATE9   BR    R14
BINYEAR  DC    F'0'
BINDAYS  DC    F'0'
MONMSK   DC    YL1(31,30,31,30,31,31,30,31,30,31,28,31)
DAYTAB   DC    C'TUEWEDTHUFRISATSUNMON'
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'
         DC    0D'0'
         LTORG ,
*----------------------------------------------------------------------
         END   SMPLISTR
