*          DATA SET ANBSUBMAN  AT LEVEL 003 AS OF 30/06/76
SUBMAN   CSECT
         B     ENTRY-SUBMAN(15)
         DC    X'07',CL7'SUBMAN'
ENTRY    EQU   *
         ENTRY TIMER
*
**  MAIN DISPLAY ROUTINE FOR JES2 SUBTASK
**  ROUTINE PERFORMS I/O FOR DISPLAY ROUTINES
**  AND SUPPLIES THEM WITH THE ADDRESSES OF
**  ROUTINES TO EXTRACT DATA FROM THE OPTION
**  BUFFERS SUPPLIED TO THEM
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW15     EQU   15
*
         STM   14,12,12(13)              SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
BASE     EQU   *
         ST    13,SAVE+4
         LR    RW3,13
         LA    13,SAVE
         ST    13,8(RW3)                 CHAIN SAVE AREAS
*
**  SET UP DEFAULTS :
**  DISPLAY=SNAPSHOT,INTERVAL=10
**  REGISTER USAGE IS :
**  RW3  DISPLAY NO * 4
*
         SR    RW3,RW3                   SET DEFAULT DISPLAY
         OPEN  (VDU)
         TM    VDU+48,X'10'             OPEN?
         BNO   ERROR
NXTDSP   EQU   *
*
**  CLEAR SCREEN AREA TO BLANKS
*
         LM    RW4,RW7,CLEAR
         MVCL  RW4,RW6
*
**  CALL CURRENT DISPLAY
*
         LA    RW1,PARMLIST              POINT AT PARAM LIST
         L     RW15,=V(COMMON)           POINT AT PARAM AREA
         L     RW15,8(RW15)              POINT TO ROUTINE ADDRESSES
         AR    RW15,RW3                  ADD IN OFFSET...
         L     RW15,0(RW15)              ...AND PICK UP ROUTINE ADDRESS
         BALR  14,15
         ST    RW3,DISP         STORE DISPLAY NUMBER
*
**  TEST IF CLEAR NECESSARY
*
         XC    WECB(4),WECB
         TM    ERASE,X'FF'          ERASE NEEDED?
         BZ    NOERASE              NO,BRANCH
         MVI   SCREEN,X'C3'
         LA    RW3,CNTLEN1          DATA LENGTH
         B     BTAM
NOERASE  EQU   *
         MVI   SCREEN,X'C2'
         LA    RW3,CNTLEN2          DATA LENGTH
BTAM     EQU   *
*
**  ISSUE WRITE
*
         MVI   SCRNDAT,X'60'           SET SF=PROT
         WRITE WECB,TI,VDU,SCREEN,(RW3),,RLN
         LTR   15,15
         BNZ   RETRY                I/O ERROR - GOTO RETRY
         WAIT  ECB=WECB            WAIT FOR I/O
*
**  ISSUE READ AND STIMER
*
         XC    TIMER(4),TIMER           ZERO ECB
         L     RW3,=V(ENDINT)       TIMER POP ROUTINE
         STIMER REAL,(RW3),BINTVL=INTVAL
         L     RW3,DISP             RESTORE DISPLAY NO
REREAD   EQU   *
         XC    RECB(4),RECB          RESET READ ECB
         MVI   ERASE,X'00'           SET NO ERASE FLAG
         READ  RECB,TI,VDU,BUFFER,BUFLEN,,RLN
         LTR   15,15                 I/O OK?
         BNZ   RETRY                 NO,GOTO RETRY
         WAIT  ECBLIST=ECBS              WAIT FOR READ TO COMPLETE
*
**  CANCEL TIMER
*
         TTIMER CANCEL              CANCEL TIMER
*
**  CHECK IF TIMER HAS POPPED
*
         LTR   RW0,RW0            TIMER POPPED?
         BNZ   NOPOP
         RESETPL RECB,ATTENT
         C     RW15,=F'4'          ERROR?
         BP    RETRY              GOTO RETRY
         WAIT  ECB=RECB            WAIT FOR RESET
         B     NXTDSP
NOPOP    EQU   *
*
**  READ OCCURRED - PROCESS DATA
*
         TM    RECB,X'44'        READ INTERCEPTED?
         BE    NXTDSP            YES,IGNORE
         CLI   BUFFER,X'60'      OPERATOR ACTION?
         BE    NXTDSP            NO,IGNORE
         CLI   BUFFER,X'7D'      ENTER KEY?
         BE    GOTDATA           YES,BRANCH
*
**  KEY OTHER THAN ENTER PRESSED
**  ERASE SCREEN AND IGNORE
*
         CLI   BUFFER,X'6E'         CANCEL (PA2) ?
         BE    RETURN               YES STOP
         CLI   BUFFER,X'6C'        PA1?
         BE    ERROR               YES,ABEND
         MVI   ERASE,X'FF'
         B     NXTDSP
GOTDATA  EQU   *
         LA    RW4,83             BUFFER LENGTH-AID,CURSOR
         SH    RW4,RECB+18          SUBTRACT RESIDUAL COUNT
         LTR   RW4,RW4              POSITIVE READ
         BNP   NXTDSP               NO,IGNORE
         TM    FIRST,X'FF'
         BNZ   NOTFIRST
         MVC   STORE(86),BUFFER
         MVI   FIRST,X'FF'
NOTFIRST EQU   *
         LA    RW5,BUFFER+3
         ST    RW5,ADBUF
         ST    RW5,ADBUF2         STORE BUFFER ADDRESS
*
**  CHECK FOR SF & SBA IN TEXT
*
         LR    RW5,RW4
         LA    RW6,BUFFER+3
NXTCHAR  EQU   *
         CLI   0(RW6),X'1D'       SF?
         BNE   INCHAR             NO,BRANCH
         MVI   0(RW6),C','
         MVI   1(RW6),C','
INCHAR   EQU   *
         CLI   0(RW6),X'11'         SBA?
         BNE   INCHAR2
         MVI   0(RW6),C','          BLANK OUT WITH ,'S
         MVI   1(RW6),C','
         MVI   2(RW6),C','
INCHAR2  EQU   *
         LA    RW6,1(RW6)
         BCT   RW5,NXTCHAR
         ST    RW4,LEN
         TR    BUFFER(86),TRTABLE    TRANSLATE BUFFER
*
**  LOOK FOR PARAMETERS
*
         MVI   DATA,X'FF'         SET UP READ FLAG
         MVI   ERASE,X'FF'              SET TO ERASE SCREEN
*
**  LOOK FOR 'STOP'
*
         LA    RW5,4              KEYLENGTH
         ST    RW5,KEYLEN
         LA    RW5,KEY5
         ST    RW5,KEYAD
         LA    RW1,FNDLST         POINT AT PARAM LIST
         L     RW15,=V(FNDPRS)
         BALR  14,15
         L     RW5,THERE          PRESENT?
         LTR   RW5,RW5
         BNZ   RETURN
*
**  LOOK FOR 'HOLD'
*
         LA    RW5,KEY6
         ST    RW5,KEYAD
         BALR  14,15
         L     RW5,THERE
         LTR   RW5,RW5
         BNZ   REREAD
*
**  LOOK FOR 'PRINT' 'P'
*
***************************
         B     WRITE    *** TEMP FORCE WRITE ***
***************************
         LA    RW5,5           KEYLENGTH
         ST    RW5,KEYLEN
         LA    RW5,KEY7
         ST    RW5,KEYAD       KEY ADDRESS
         BALR  14,15
         L     RW5,THERE       PRESENT?
         LTR   RW5,RW5
         BNZ   WRITE
*
         LA    RW5,1           KEYLENGTH
         ST    RW5,KEYLEN
         LA    RW5,KEY8
         ST    RW5,KEYAD       KEY ADDRESS
         BALR  14,15
         L     RW5,THERE       PRESENT?
         LTR   RW5,RW5
         BZ    NOWRITE
WRITE    EQU   *
*
**  OPEN SYSPRINT IF CLOSED
*
         TM    OUTDCB+48,X'10'
         BO    OPEN
         OPEN  (OUTDCB,OUTPUT)
         TM    OUTDCB+48,X'10'
         BNO   NOWRITE
OPEN     EQU   *
*
**  WRITE OUT SCREEN
*
         MVI   SCRNDAT,C' '         BLANK OUT ATTR BYTE
         LA    RW5,21          NUMBER OF LINES
         LA    RW6,SCRNDAT     DATA
NXTLINE  EQU   *
         PUT   OUTDCB,(RW6)
         LA    RW6,80(RW6)
         BCT   RW5,NXTLINE
NOWRITE  EQU   *
*
**  READ COMPLETED - LOOK FOR PARAMETERS
**  DISPLAY,D,INTERVAL,I
*
         MVC   VALUE(8),NULL          BLANK OUT VALUE
*
**  LOOK FOR DISPLAY=
*
         LA    RW5,8                  KEYLENGTH 1
         ST    RW5,KEYLEN
         LA    RW5,KEY1
         ST    RW5,KEYAD              STORE KEY ADDRESS
         LA    RW1,FNDLST             POINT AT PARAM LIST
         L     RW15,=V(FNDTXT)
         BALR  14,15                  LINK TO ROUTINE
*
**  LOOK FOR D=
*
         LA    RW5,2                  KEYLENGTH 2
         ST    RW5,KEYLEN
         LA    RW5,KEY2
         ST    RW5,KEYAD              STORE KEY ADDRESS
         BALR  14,15                  LINK TO ROUTINE
         CLC   VALUE(8),NULL          CHANGED?
         BE    NODISP                 NO
*
**  LOOK FOR MATCHING DISPLAY NUMBER
*
         L     RW5,=V(COMMON)          POINT AT PARAM AREA
         L     RW6,12(RW5)             ---> TITLES
         L     RW7,4(RW5)              ---> OFFSETS
         L     RW5,0(RW5)              NO OF ENTRIES
NXTENT   EQU   *
         CLC   VALUE(8),0(RW6)        CORRECT ENTRY?
         BE    NEWDIS
         LA    RW6,8(RW6)             INCREMENT
         LA    RW7,2(RW7)
         BCT   RW5,NXTENT             DECREMENT
         B     NODISP                 NO MATCH - IGNORE
NEWDIS   EQU   *
         LH    RW7,0(RW7)             PICK UP DISPLAY NO
         LTR   RW7,RW7                VALID?
         BM    NODISP                 NO - IGNORE
         LR    RW3,RW7                SET NEW DISPLAY
NODISP   EQU   *
*
**  LOOK FOR I=
*
         XC    VALUE(4),VALUE         ZERO VALUE
         LA    RW5,KEY4
         ST    RW5,KEYAD              STORE KEY ADDRESS
         LA    RW1,FNDLST             POINT AT PARAM LIST
         L     RW15,=V(FNDVAL)        ROUTINE ADDRESS
         BALR  14,15                  LINK TO ROUTINE
*
**  LOOK FOR INTERVAL=
*
         LA    RW5,9                  KEYLENGTH 3
         ST    RW5,KEYLEN
         LA    RW5,KEY3
         ST    RW5,KEYAD              STORE KEY ADDRESS
         BALR  14,15                  LINK TO ROUTINE
         L     RW5,VALUE
         N     RW5,=F'1023'        MAX INTERVAL
         LTR   RW5,RW5             ZERO?
         BZ    NOINT               YES,IGNORE
         MH    RW5,=H'100'
         ST    RW5,INTVAL             STORE NEW INTERVAL
NOINT    EQU   *
         B     NXTDSP
*
**  ERROR - INCORRECT DCB FOR OPEN
*
ERROR    EQU   *
         ABEND 101,DUMP               ***** ERROR *****
*
**  RETRY - I/O ERROR - CLOSE AND REOPEN DCB
*
RETRY    EQU   *
         L     RW3,ERRCNT            LOAD ERROR COUNTER
         BCT   RW3,ERROK
         B     ERROR                 LIMIT REACHED - ABEND
ERROK    EQU   *
         ST    RW3,ERRCNT            RESTORE ERROR COUNTER
         TM    VDU+48,X'10'          OPEN?
         BNO   ERROR                 NO - ABEND
         CLOSE (VDU)                 CLOSE DCB
         TM    VDU+48,X'10'          CLOSED?
         BO    ERROR                NO - ABEND
         OPEN  (VDU)                REOPEN
         TM    VDU+48,X'10'         OK?
         BNO   ERROR                NO - ABEND
         L     RW3,DISP             RESTORE DISPLAY NUMBER
         MVI   ERASE,X'FF'          SET TO ERASE SCREEN
         B     NXTDSP               GO AND RETRY
*
**  RETURN
*
RETURN   EQU   *
         TM    OUTDCB+48,X'10'      OPEN?
         BNO   NOCLOSE
         CLOSE (OUTDCB)
NOCLOSE  EQU   *
         CLOSE (VDU)
         L     13,4(13)
         LM    14,12,12(13)
         BR    14                     EXIT
*
**  CONSTANTS AND VARIABLES
*
         LTORG
SAVE     DS    18F
ERRCNT   DC    F'10'          RETRY COUNT
PARMLIST DC    A(SCRNDAT)
         DC    A(DATA)
         DC    A(LEN)
ADBUF    DS    F
DATA     DC    X'00'
LEN      DS    F
RLN      EQU   1
ERASE    DC    X'FF'
FIRST    DC    X'00'
STORE    DC    86C' '
DISP     DC    F'0'
BUFLEN   EQU   86
BUFFER   DC    86C' '
CLEAR    DC    A(SCRNDAT)
         DC    F'1680'
         DC    F'0'
         DC    X'40',AL3(0)
SCREEN   DC    X'C31140401D'         WCC,SF=PROT,SBA=01,01
SCRNDAT  DC    1680C' '
CNTLEN2  EQU   *-SCREEN
         DC    X'115A50'         SBA=22,01
         DC    C'ENTER SUB-TASK COMMANDS :'
         DC    X'1DC1115B60'     SF=UNPROT,SBA=23,01
         DC    X'133C5D7F00'
CNTLEN1  EQU   *-SCREEN
KEY1     DC    CL8'DISPLAY='
KEY2     DC    CL8'D='
KEY3     DC    CL12'INTERVAL='
KEY4     DC    CL8'I='
KEY5     DC    CL8'STOP'
KEY6     DC    CL8'HOLD'
KEY7     DC    CL8'PRINT'
KEY8     DC    CL8'P'
FNDLST   DC    A(LEN)
ADBUF2   DS    F
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
KEYLEN   DS    F
THERE    DS    F
VALUE    DS    20F
NULL     DC    CL8' '
INTVAL   DC    F'1000'
*
TIMER    DS    F
ECBS     DC    X'00',AL3(RECB)
         DC    X'80',AL3(TIMER)
*
TRTABLE  DC    75C',',C'.',50C',',C'=,,'
         DC    C'ABCDEFGHI',7C','
         DC    C'JKLMNOPQR',8C','
         DC    C'STUVWXYZ',6C','
         DC    C'0123456789',7C','
         DC    C'ABCDEFGHI',7C','
ENDINT   CSECT
         B     ENTRY-ENDINT(15)
         DC    X'07',CL7'ENDINT'
ENTRY    EQU   *
*
**  TIMER INTERRUPT ROUTINE
*
RB2      EQU   2
RW3      EQU   3
*
         STM   14,12,12(13)
         BALR  RB2,0
         USING *,RB2
         L     RW3,=V(TIMER)       POINT AT TIMER FLAG
         POST  (RW3)
         LM    14,12,12(13)
         BR    14
*
         LTORG
*
         END
