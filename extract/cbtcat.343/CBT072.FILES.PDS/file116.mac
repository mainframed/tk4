#$#
         CMD SUB-SYSTEM INSTALLATION


         1.  ASSEMBLE AND LINK EACH COMMAND MODULE INTO SYS1.LPALIB,
             OR SYS1.LINKLIB IF YOU PLAN TO MLPA THEM.
             NOTE THAT IEESA03D AND IEESB03D MUST BE LINKEDITED
             TOGETHER AS IEESA03D.

         2.  ASSEMBLE AND LINK CMDSBINT AND CMDSBSYS INTO SYS1.LINKLIB
             OR ANY LNKLSTNN LIBRARY YOU WISH.

         3.  ASSEMBLE AND LINK A DUMMY MODULE CALLED  CMDDUMMY  INTO
             SYS1.LPALIB, OR SYS1.LINKLIB IF YOU WANT TO MLPA IT.
             CMDDUMMY MUST BE AT LEAST 1024 BYTES LONG AND MUST BE
             SPECIFIED IN AN IEALPANN MEMBER OF PARMLIB FOR WHICH YOU
             HAVE CREATED AN IEAFIXNN MEMBER OF PARMLIB TO CAUSE
             CMDDUMMY TO BE FIXED IN LOW CORE.
             AT SUB-SYSTEM INITIALIZATION CMDDUMMY IS OVERLAID IN LOW
             CORE WITH MODULE CMDSBSYS,  BY CMDSBINT THE COMMAND
             SUB-SYSTEM INITIALIZATION ROUTINE.

         4.  CREATE A PROC CALLED  CMD1  AND PUT IT IN SYS1.PROCLIB.

                 //CMD1    PROC
                 //CMD1    EXEC  PGM=CMDSBINT

         5.  SUPERZAP (OR SYSGEN IN SCHEDULER MACRO SUBSYS=CMD1),  THE
             SUB-SYSTEM NAME TABLE.

                 NAME IEEVIPL IEFJESNM
                 VER  0008  00000000
                 REP  0008  C3D4C4F1

         6.  SOME HELPFUL HINTS THAT MAY SAVE SOME PROBLEMS
             A. TO LINK THE QCB TRACE TOGETHER USE THE FOLLOWING
                (1).  INCLUDE LIBRARY(IEESA03D)
                (2).  INCLUDE LIBRARY(IEESB03D)
                (3).  ENTRY IEESA03D
                (4).  NAME IEESA03D(R)
             B. LINK CMDDUMMY WITH  REUS, RENT
             C. LINK CMDSBINT WITH  AC=1  (ONLY THAT ATTRIBUTE)
             D. LINK CMDSBYS  WITH  REUS,RENT
             E. BE SURE ALL # COMMANDS (IEES*03D) ARE NOT IN ANY
                LINKLIST LIBRARY THAT YOU ARE NOT MLPA'ING FROM.
#$#
         COMMAND  SUB-SYSTEM




               TO START  -


                           ISSUE COMMAND  (S CMD1)  WHICH WILL START
                           A JOB TO INITIALIZE AND CONNECT THE
                           COMMAND SUB-SYSTEM.



               TO END  -
                           ISSUE COMMAND  (#*)  WHICH WILL DISCONNECT
                           THE COMMAND SUB-SYSTEM.
#$#
        COMMAND SUB-SYSTEM COMMANDS  (#X)



             ALL OF THE FOLLOWING COMMANDS HAVE SOME COMMON SYNTAX
             RULES AND SOME COMMON OUTPUT.



        SYNTAX -


             1.    THERE MUST BE 1 BLANK OR NO BLANKS BETWEEN THE #
                   AND THE COMMAND ID.     (# X)  OR  (#X).

             2.    THERE MAY OR MAY NOT BE A SPACE OR SPACES
                   FOLLOWING THE COMMAND ID.    (#X Y)  OR  (#XY).

             3.    ,L=CC    PARAMETER FOR ANY COMMAND DIRECTS THE
                            OUTPUT OF THE COMMAND TO THE SPECIFIED
                            CONSOLE ID.   OMISSION OF THIS PARAMETER
                            CAUSES THE COMMAND OUTPUT TO RETURN TO
                            THE CONSOLE THAT ISSUED THE COMMAND.

             4.    IF THE  ,L=CC  PARAMETER IS SPECIFIED IT MUST BE -
                       A.   THE LAST PARAMETER IN THE COMMAND
                       B.   FOR A TWO DIGIT DECIMAL CONSOLE ID



        OUTPUT -


             FOR ALL COMMANDS A HEADER LINE IS PRINTED INDICATING
             THE COMMAND ID, ISSUING CONSOLE ID, SYSTEM ID AND DATE.
             SINCE ALL COMMAND OUTPUT IS ECHOED IN THE SYSTEM LOG,
             THIS PROVIDES AN EASY IDENTIFICATION METHOD FOR
             WHICH SYSTEM AND WHAT DATE THE SYSTEM LOG REPRESENTS.


             EXAMPLE -

                   ---  CMD SBSYS (#X)  L=10  K168  76.362  ---
#$#
      #A  COMMAND     (DISPLAY JOB STATUS -   EXPANDED  D A)



               #A   ASID       4 LINES OF OUTPUT FOR AN ASID


               #A   .JOBNAME   4 LINES OF OUTPUT FOR AN JOBNAME


               #A   $J         2 LINES OF OUTPUT FOR JOBS


               #A   $J,S       1 LINE OF OUTPUT FOR JOBS


               #A   $J,L       4 LINES OF OUTPUT FOR JOBS


               #A   $T         2 LINES OF OUTPUT FOR TSO USERS


               #A   $T,S       1 LINE OF OUTPUT FOR TSO USERS


               #A   $T,L       4 LINES OF OUTPUT FOR TSO USERS


               #A   $S         2 LINES OF OUTPUT FOR STARTED TASKS


               #A   $S,S       1 LINE OF OUTPUT FOR STARTED TASKS


               #A   $S,L       4 LINES OF OUTPUT FOR STARTED TASKS


               #A   $I         2 LINES OF OUTPUT FOR INITIATORS,
                               THAT DO NOT HAVE ANY JOBS ATTACHED
                               TO THEM


               #A   $I,S       1 LINE OF OUTPUT FOR INITIATORS,
                               THAT DO NOT HAVE ANY JOBS ATTACHED
                               TO THEM


               #A   $I,L       4 LINES OF OUTPUT FOR INITIATORS,
                               THAT DO NOT HAVE ANY JOBS ATTACHED
                               TO THEM


               #A              2 LINES FOR ALL ACTIVE TASKS


               #A   0000       4 LINES FOR ALL ACTIVE TASKS

#$#
                   E X A M P L E


    TEST00   (000B) DP(112) SWL(010/016) SWC(0001)
       PERF-NRS(0B/07/0B) DPRTY-NR(70/76) DMN(01)
       Q(00) S(80) Y(40) A(58) T(83) E(00) U(00)
       AS(FE2578) SR(06) OU(FE1080) A(0063/00000)



    1ST LINE -

         TEST00                JOBNAME
         (000B)                ASID
         DP(112)               DISPATCHING PRIORITY  (FROM ASCB)
         SWL(010/016)          SWAP LOAD IN DECIMAL PAGES  (IN/OUT)
         SWC(0001)             SWAP COUNT IN DECIMAL


    2ND LINE -

         PERF-NRS(0B/07/0B)    PERFORMANCE GROUP  (NEW/RESET/SPECIFIED)
         DPRTY-NR(70/76)       DISPATCHING PRIORITY  (FROM OUCB)
         DMN(01)               DOMAIN NUMBER


    3RD LINE -

         (OUCB FLAGS -   SEE DESCRIPTION BELOW)


    4TH LINE -

         AS(FE2578)            ASCB ADDRESS
         SR(06)                SWAP REASON CODE  (SEE TABLE BELOW)
         QP(01)                DISPATCHING QUEUE POSITION
         OU(FE1080)            OUCB ADDRESS
         A(0063/00000)         ADDRESS SPACE SLOTS/VIO SLOTS



         NOTE THAT IF THE SWAP REASON CODE IS  00,   QP(XX) WILL
         PRINT TO INDICATE THE DISPATCHING QUEUE POSITION.




    SWAP REASON CODES -


         01        TERMINAL WAIT -   OWAITHI
         02        TERMINAL WAIT -   INPUT
         03        LONG WAIT
         04        AUXILLARY STORAGE SHORTAGE
         05        REAL STORAGE SHORTAGE
         06        DETECTED WAIT
         07        REQUEST SWAP
         08        ENQ EXCHANGE SWAP
         09        EXCHANGE ON RECOMMENDATION VALUE
         0A        UNILATERAL SWAP
#$#
    OUCB FLAGS -



          Q(00)   IN HEX THE OUCBQFL   SWAP TRANSITION FLAGS

       1... ....   OUCBGOO     TRANSITIONING OUT OF CORE
       .1.. ....   OUCBGOI     TRANSITIONING INTO CORE
       ..1. ....   OUCBGOB     TRANSITIONING BETWEEN STATES
       ...1 ....   OUCBQF3     RESERVED
       .... 1...   OUCBOFF     REQUEST ENTER WAIT STATE
       .... .1..   OUCBOUT     REQUEST ENTER OUT STATE
       .... ..1.   OUCBQF6     RESERVED
       .... ...1   OUCBQF7     RESERVED


          S(80)   IN HEX THE OUCBSFL   SWAPOUT CONTINUATION FLAGS

       1... ....   OUCBNSW     NON-SWAPPBLE STATUS
       .1.. ....   OUCBCTI     CTL INHIBITS QUIESCE
       ..1. ....   OUCBBIB     BRING IN FOR CANCEL
       ...1 ....   OUCBINV     =1 IF OUCB IS INVALID
       .... 1...   OUCBSF4     RESERVED
       .... .1..   OUCBPVL     USER PROGRAM PRIVILEGED
       .... ..1.   OUCBENQ     ENQ RESIDENT STATUS
       .... ...1   OUCBSCN     SWAP CHAIN TERMINATION MARK


          Y(40)   IN HEX THE OUCBYFL   USER TYPE FLAGS

       1... ....   OUCBPSTE    POST ERROR
       .1.. ....   OUCBSTT     START CREATED USER
       ..1. ....   OUCBLOG     LOGON CREATED USER
       ...1 ....   OUCBMNT     MOUNT CREATED USER
       .... 1...   OUCBR01     RESERVED
       .... .1..   OUCBAXS     AUX SHORTAGE FORCED SWAP
       .... ..1.   OUCBDTA     DATA ACCUMULATION IMPACTED
       .... ...1   OUCBFXS     FIXED STORAGE SHORTAGE FORCED SWAP


          A(58)   IN HEX THE OUCBAFL   ALGORITHM STATUS FLAGS

       1... ....   OUCBAF0     RESERVED
       .1.. ....   OUCBAPG     APG ALGORITHM APPLICABLE
       ..1. ....   OUCBRMA     RMA ALGORITHM APPLICABLE
       ...1 ....   OUCBCPL     SIGNIFICANT CPU USER
       .... 1...   OUCBJSR     JOB SELECT RECEIVED
       .... .1..   OUCBR02     RESERVED
       .... ..1.   OUCBNWT     MSO DETECTED NON-SWAP WAIT
       .... ...1   OUCBASW     AUTHORIZED FOR DONT SWAP
#$#
          T(83)   IN HEX THE OUCBTFL   TRANSACTION STATUS FLAGS

       1... ....   OUCBATR     TRANSACTION IN EXISTENCE
       .1.. ....   OUCBSTR     TRANSACTION START PENDING
       ..1. ....   OUCBNTR     TRANSACTION STOP PENDING
       ...1 ....   OUCBRTR     TRANSACTION RESUME PENDING
       .... 1...   OUCBPCH     PG PERIOD CHANGE PENDING
       .... .1..   OUCBMAR     ACTIVITY RECORDING MINUS
       .... ..1.   OUCBINP     INITIATOR ATTACH PENDING
       .... ...1   OUCBINC     INITIATOR ATTACH CURRENT


          E(00)   IN HEX THE OUCBEFL   EVENT STATUS FLAGS

       1... ....   OUCBLWT     LONG WAIT STATUS
       .1.. ....   OUCBTRM     TERMINAL WAIT STATUS
       ..1. ....   OUCBOWT     OUTPUT TERMINAL WAIT
       ...1 ....   OUCBCIM     COMPOSITE INPUT MESSAGE
       .... 1...   OUCBNQF     ENQHOLD PROCESSED
       .... .1..   OUCBQSS     QSCEST PROCESSED
       .... ..1.   OUCBQSC     QSCEMP PROCESSED
       .... ...1   OUCBMWT     MSO DETECTED WAIT STATUS
       .... ...1   OUCBUF7     RESERVED


          U(00)   IN HEX THE OUCBUFL   USER TYPE FLAGS

       1... ....   OUCBJSFS    JOB SELECT DELAY - PAGE FRAME SHORTAGE
       .1.. ....   OUCBJSAS    JOB SELECT DELAY - AUX SLOT SHORTAGE
       ..1. ....   OUCBUF2     RESERVED
       ...1 ....   OUCBUF3     RESERVED
       .... 1...   OUCBUF4     RESERVED
       .... .1..   OUCBUF5     RESERVED
       .... ..1.   OUCBQF6     RESERVED
#$#
      #D  COMMAND     (DISPLAY AND ZAP CORE)



             FOR DUMPING CORE
                 #D  0000  (ADDRESS - IF ITS VIRTUAL IT WILL
                            BE OF THE MASTER SCHEDULER ADDRESS SPACE.)


             FOR DUMPING CORE FOR OTHER THAN 4 LINES  (64 BYTES)

                 #D 0000,NN          WHERE  NN  IS THE NUMBER OF LINES
                                     TO PRINT FROM 01 - 64.


             FOR DUMPING A UCB

                 #D  U280  (WILL DUMP THE 280 UCB)


             FOR ZAPPING CORE

                 #D  0ACD/FF000000/FF160000

                     0ACD     = ADDRESS TO BE ZAPPED
                     FF000000 = DATA TO BE VERIFIED
                     FF160000 = DATA TO BE ZAPPED IN
#$#
      #F  COMMAND     (DISPLAY PAGE FRAME ASSIGNMENTS)



             #F


             NUCLEUS       98
             TOT FIXED    130
             SQA FIXED     88
             CMN FIXED     12
             SYS PAGES    260
             AVAILABLE     24
             MASTER        16
             JES2          48
             FFGRI1        68
             TEST00        10
#$#
         #F MX   -        TO DISPLAY THE SPECIFIED MEGABYTE (M1 TO M9)
                          OF REAL STORAGE SHOWING FRAME ALLOCATION,
                          INCLUDING NUMBER OF FRAMES, OWNING ASID,
                          PFT FLAGS.


                          SEE  (#F R)  FOR DESCRIPTION OF OUTPUT.



                 NOTE -   MEGABYTE 0 CANNOT BE DISPLAYED AND WILL
                          CAUSE A PARM ERROR IF ATTEMPTED.
                          SINCE MEGABYTE 0 CANNOT BE VARIED
                          OFFLINE  (IT CONTAINS THE NUCLEUS),
                          THIS RESTRICTION SEEMS REASONABLE.
#$#
         #F OX  -     TO DISPLAY, FOR THE SPECIFIED MEGABYTE (O1 TO O9)
                      OF REAL STORAGE,  FRAME ALLOCATION FOR OFFLINE
                      INTERCEPTED FRAMES WHICH ARE NOT YET OFFLINE,
                      INCLUDING NUMBER OF FRAMES, OWNING ASID,
                      PFT FLAGS.


                      SEE  (#F R)  FOR DESCRIPTION OF OUTPUT.



             NOTE -   MEGABYTE 0 CANNOT BE DISPLAYED AND WILL
                      CAUSE A PARM ERROR IF ATTEMPTED.
                      SINCE MEGABYTE 0 CANNOT BE VARIED
                      OFFLINE  (IT CONTAINS THE NUCLEUS),
                      THIS RESTRICTION SEEMS REASONABLE.
#$#
     #F R   -       TO DISPLAY THE V=R AREA SHOWING FRAME
                    ALLOCATION,  INCLUDING NO. OF FRAMES,
                    OWNING ASID AND PFT FLAGS.



             EXAMPLE OUTPUT -

                               AND WITH THESE FLAGS IN DECIMAL.



             ASID COLUMN -     ASID OF ADDRESS SPACE LAST TO OWN
                               OR CURRENTLY OWNING THESE FRAMES.
                               FFFF INDICATES NO OWNER.



             FLAGS COLUMN -    THREE FLAG DIGITS WITH THE FOLLOWING
                               MEANINGS.  A - IN ANY FLAG DIGIT
                               INDICATES NO STATUS.


                   1ST DIGIT -    O     OFFLINE
                                  C     OFFLINE INTERCEPT
                                  R     V=R ALLOCATE
                                  I     V=R INTERCEPT
                                  A     AVAILABLE


                   2ND DIGIT -    B     BAD FRAME
                                  F     LONG TERM FIXED
                                  S     SQA/LSQA FRAME
                                  V     VIO FRAME


                   3RD DIGIT -    A     AVAILABLE QUEUE
                                  R     SQA RESERVED QUEUE
                                  C     COMMON QUEUE
                                  S     SQA QUEUE
                                  U     LOCAL QUEUE
                                  L     LSQA QUEUE
                                  N     NOT QUEUED
#$#
        #H  COMMAND      (DISPLAY  # COMMAND  HELP)



           #H         DISPLAYS COMMAND LIST


           #H X       DISPLAYS HELP FOR  COMMAND X
#$#
        #I  COMMAND      (DISPLAY IPS AND SWAP COUNTS)



               DISPLAYS CURRENT IPS MEMBER AND SWAP COUNTS
               BY REASON SINCE LAST IPL.



               CURRENT IPS -   IEAIPST2
               TERM WAIT - IN      (01)          0
               TERM WAIT - OUT     (02)          0
               LONG WAIT           (03)        304
               AUX STOR SHORTAGE   (04)          0
               REAL STOR SHORTAGE  (05)          0
               DETECTED WAIT       (06)        932
               REQUEST SWAP        (07)         82
               ENQ EXCHANGE        (08)        112
               WORKLOAD EXCHANGE   (09)         89
               UNILATERAL SWAP     (0A)        243
#$#
         #I A      (DISPLAY ASM COUNTS)



         EXAMPLE  -

               ILRSLOTC            16
               ILRSLOTV            16
               AVAIL SLOTS        836
               TOTAL SLOTS      4,338
               VIO SLOTS            0
               ADSPC SLOTS        796
               BAD SLOTS            0



         NOTE  -      AVAIL SLOTS IS THE NUMBER OF UNRESERVED
                      LOCAL PAGE DATA SET SLOTS.
#$#
        #I P     (DISPLAY PAGE DATA SET USAGE)



        EXAMPLE -

             PLPA  MVKCAT  PLPAPAGE
             SIZE(1044) AVAIL(0197) USED(82%) BRST(019)
             COMN  333004  COMMPG2
             SIZE(0522) AVAIL(0438) USED(17%) BRST(021)
             LOCL  333004  LOCALP2
             SIZE(1566) AVAIL(1110) USED(30%) BRST(027)
             LOCL  333008  LOCALPG2
             SIZE(1566) AVAIL(1105) USED(30%) BRST(038)
             LOCL  333007  LOCALPG3
             SIZE(1566) AVAIL(1093) USED(31%) BRST(120)


             SIZE AND AVAILABLE FIGURES ARE DECIMAL NUMBER OF SLOTS.

             BRST IS THE PARERQTM VALUE DIVIDED BY 256, IN DECIMAL.
             IT REPRESENTS THE AVERAGE TIME REQUIRED TO
             TRANSFER 1 PAGE.
#$#
      #J  COMMAND      (MODIFIED DISPLAY ACTIVE REPLACEMENT)



          EXAMPLE  -


     *****   IN  QUEUE   *****     ASID DPRTY QP  FLAGS   CPU TIME
     JES2     JES2     IEFPROC     0002  253  02  NSW      1.33.01
     TEST00   STEP1                0004  117  04  IN CP    2.55.33
     TEST01   STEPX    ASMBLR      0005  119  03  IN       0.10.68
     TMSBKUP  FDR                  0006  112  05  IN       1.11.24
     *****   OUT  QUEUE   *****    ASID DPRTY SR  FLAGS   CPU TIME
     RMF      148      IEFPROC     0003  251  03  OUTLW    1.11.98


      WHERE -

         ASID    DPRTY    QP/SR    FLAGS    CPU TIME
        ------  -------  -------  -------  ----------

         NNNN     DDD     QQ/SS    XXXYY    MMM.SS.HH


        NNNN         IS THE ADDRESS SPACE IDENTIFICATION

        DDD          IS THE JOBS DISPATCHING PRIORITY

        QQ           IS THE JOBS ASCB QUEUE POSITION, WHICH IS
                     A RELATIVE DISPATCHING PRIORITY

        SS           IS THE SWAP REASON CODE AS DESCRIBED IN THE
                     DOCUMENTATION FOR THE  # A COMMAND.

        XXXYY        IS THE JOB STATUS AS DESCRIBED BELOW

        MMM.SS.HH    IS THE CPU AND SRB ACCUMULATED JOB STEP TIME



        XXX -

            IN  -   IN CORE - SWAPPED IN
            NSW -   NON-SWAPPABLE
            OUT -   SWAPPED OUT
            GOO -   IN PROCESS OF BEING SWAPPED OUT
            GOI -   IN PROCESS OF BEING SWAPPED IN
            GOB -   CURRENTLY CHANGING STATUS


        YY -

            LW  -   LONG WAIT STATUS -  EXPLICIT OR IMPLICIT
            MW  -   LONG WAIT STATUS DETECTED BY MSO (MS6)
            CP  -   SIGNIFICANT CPU USER - SET BY IRARMCPM
            A   -   AUXILLARY STORAGE SHORTAGE
            S   -   REAL STORAGE SHORTAGE
#$#
      #L  COMMAND     (DISPLAY LINES FOR TSO)



                #L        (WILL SHOW USERID, ASID AND TP LINE)

                       IBMUSER   (000C)  - 3F1
#$#
      #N  COMMAND     (DISPLAY ENQUE -   SEE ENQ/DEQ SUMMARY)



         #N   FORMAT IS AS FOLLOWS -

          #N XXXXXXXX/YYYYYYYY

             WHERE   -

                XXXXXXXX       IS THE 8 DIGIT MAJOR NAME OR  '*'
                YYYYYYYY       IS THE 1 - 44 DIGIT MINOR NAME OR  '*'


                 #N *

                 #N SYSDSN/*

                 #N SYSIEFSD/*

                 #N SYSDSN/SYS1.LINKLIB



                IN RESPONSE TO THE #N COMMAND THE CURRENT STATUS
                TYPES ARE:

                             SHR - SHARED USE ENQ
                             EXCL- EXCLUSIVE USE ENQ
                             RSVS- SHARED USE WITH A RESERVE
                             RSVX- EXCLUSIVE USE WITH A RESERVE
#$#
                       MVS  ENQ/DEQ  SUMMARY



     MAJOR NAME   MINOR NAME               DESCRIPTION
     ----------   ----------    -----------------------------------

     SYSDSN       -DSNAME       ENQ FOR USER OR SYSTEM DATA SETS

     SYSIEA01     IEA           ABEND IN PROGRESS

     SYSIEFSD     CHNGDEVS      UCB MANIPULATION

                  Q4            UCB MANIPULATION

                  Q6            PROTECT KEY ALTERATION

                  Q10           CSCB CHAIN MANIPULATION

                  RPLL          JOB JOURNAL DATA SET (CKPT/RSTRT)

                  STCQUE        STARTED TASK CONTROL

                  TSOQUE        TSO DATA SETS

     SYSIGGV1     MCATOPEN      MASTER CATALOG

     SYSIGGV2     -CATLGNAME    USER CATALOGS

     SYSIKJBC     -RBA          TSO BRODCAST DATA SET (REL BYTE ADDR)

     SYSIKJUA     OPENUADS      UADS DATA SET

                  -USERID       TSO USERS

     SYSLMOD      -DSNAME       LINKEDIT RESERVE

     SYSSJWTP     JSCBWTP       WRITE-TO-PROGRAMMER MESSAGES

                  -RPL+ASID     MESSAGE DATA SET PROCESSING
                                (REQUEST PARAMETER LIST + ASID)

     SYSSMF01     BUF           SMF BUFFER WRITE

     SYSZUSRL     -UCBADDR      USER LABEL PROCESSING

     SYSVSAM      -CCCCNNNX     VSAM DATA SET PROCESSING
                                (CCCC- ACB ADDR, NNN- CI NO., X- STAT)
#$#
     MAJOR NAME   MINOR NAME               DESCRIPTION
     ----------   ----------    -----------------------------------

     SYSVTOC      -VOLSER       VTOC RESERVE

     SYSZRBMF     ACTIVE        MF1 ACTIVE INDICATOR

     SYSZCAXW     CAXW          CAXWA (CATLG AUXILLARY WORK AREA)

     SYSZCSD      CSDCPUJS      CSD UPDATE

     SYSZEC16     PURGE         PURGE DATA SET PROCESSING

     SYSZIGGI     -ASID         TSB PROCESSING

     SYSZJES2     SPOOL         AWAITING SPOOL SPACE

     SYSZPCCB     PCCB          PCCP (PRIV CATLG CONTROL BLOCK)

     SYSZPGAD     PAGEADD       SERIALIZE FOR PAGEADD COMMAND

     SYSZPSWD     -DSNAME       PASSWORD DATA SET PROCESSING

     SYSZSIPS     IRARMSET      IPS SET

     SYSZTIOT     -ASID         TIOT PROCESSING

     SYSZVARY     CPU           RECONFIGURATION COMMANDS

                  VALIDATE      STORAGE VALIDATION PROCESSING

     SYSZVMV      -UCBADDR      VIRTUAL VOLUME PROCESSING

     SYSZVOLS     -VOLSER       ALL ALLOCATED VOLUMES
#$#
    #R  COMMAND   (DEVICE STATUS COMMAND)



     #R M              PENDING MOUNTS FOR TAPE

     #R T              TAPE BUSY AND PENDING MOUNTS

     #R D              DISK BUSY AND PENDING MOUNTS

     #R P              UNIT RECORD BUSY

     #R B              ALL DEVICE BUSY AND PENDING MOUNTS

     #R V              ALL PENDING VARIED OR UNLOADED DEVICES



     #R M=XXXXXXXX     PENDING MOUNTS FOR A JOB

     #R T=XXXXXXXX     ALLOCATED TAPE DEVICES FOR A JOB

     #R D=XXXXXXXX     ALLOCATED DISK DEVICES FOR A JOB

     #R P=XXXXXXXX     ALLOCATED UNIT RECORD DEVICES FOR A JOB

     #R B=XXXXXXXX     ALL ALLOCATED DEVICES FOR A JOB


         =XXXXXXXX     FOR ALL COMANDS IS EITHER A 4 DIGIT ASID OR A
                       1 - 8 DIGIT JOBNAME



     #R S=VVVVVV       DEVICE ON WHICH VOLUME VVVVVV IS MOUNTED


     #R U=NNN          DISPLAY SPECIFIED -

                           DEVICE          (NNN)
                           CONTROL UNIT    (NN)
                           CHANNEL         (N)
#$#
      #S  COMMAND     (DISPLAY LPA MODULES)



        #S PGMNAME   WILL DISPLAY LOAD MODULES IN FLPA, MLPA OR
        PLPA. THE VIRTUAL ADDRESS AND MODULES SIZE ARE DISPLAYED
        UNLESS THE MODULE  SPECIFIED IS REPRESENDED BY A MINOR
        CDE OR LPDE, IN WHICH CASE THE VIRUAL ADDRESS AND MAJOR
        NAME ARE DISPLAYED.


        #S *ADDR    WILL DISPLAY THE NAME OF THE LOAD MODULE
        AND ITS STARTING ADDRESS AND LENGTH.



           #S XXXXXXXX

           MODULE NOT FOUND


           #S IEFBR14

           IEFBR14      DF9C78    000020


           #S EDIT

           EDIT         EF6000    E


           #S E

           E            EF6000    001EB0


           #S *000002

           ADDRESS NOT FOUND


           #S *EF6010

           E            EF6000    001EB0
#$#
      #V  COMMAND     (DISPLAY UNIT)



            #V CUU         (DISPLAY SINGLE UNIT)

                EX.    #V 251


           #V CUX          (DISPLAY ALL UNITS BY CONTROL UNIT)

                EX.    #V 25X


           #V CUU,CUU...   (DISPLAY ALL UNITS IN LIST)

                EX.    #V 251,363,108,288


           #V CUX,CUX...   (DISPLAY ALL UNITS IN LIST BY C.U.)

           COMMAND OUTPUT IS AS FOLLOWS -


               CUU  VOLSER   AA,BB,CC,DD,EE   FFFF

           WHERE  -

               CUU  -       UNIT ADDRESS
               VOLSER -     VOLUME SERIAL IF APPLICABLE
               AA  -        UCBSTAT  (ONLINE,OFFLINE,ETC.)
               BB  -        UCBFLA   (BUSY, NOT READY, ETC.)
               CC  -        UCBSTAB  (PRIVATE, PUBLIC, ETC.)
               DD  -        UCBDMCT  (NO. OF OPEN DCBS THIS UNIT)
               EE  -        UCBUSER  (NO. OF CURRENT USERS)
               FFFF -       UCBASID  (ASID OF ALLOCATING MEMORY)

      NOTE -   NON-APPLICABLE FIELDS FOR DEVICES WILL CONTAIN
               UNPREDICTIBLE DATA (REFER TO FE HANDBOOK)
#$#

      #C  COMMAND     (DISPLAY CLOCK AND CALCULATOR)
              # C WILL DISPLAY CLOCK HIGH-ORDER WORD OR WORK AS A
                HEX-DECIMAL CALCULATOR

              # C          WILL DISPLAY CLOCK HIGH-ORDER WORD
              # C XXXX     CONVERT 1-8 DIGIT HEX VALUE TO DEC
              # C ,DDDD    CONVERT 1-8 DIGIT DEC VALUE TO HEX
              # C AAA0BBB  CALCULATOR MODE
                     AAA   IS 1-8 DIGIT HEX OR ,DEC VALUE
                     BBB   IS 1-8 DIGIT HEX OR ,DEC VALUE
                     0     IS ARITHMETIC OPERATOR
                           +    ADD
                           -    SUBTRACT
                           .    MULTIPLY
                           /    DIVIDE

