*              /* LEVEL=0001 */
PUSE     CSECT
*
**
***      EQUATE REGISTERS AND SET UP DYNAMIC SAVEAREA
**
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
         B     26(RF)                   BRANCH AROUND ID
         DC    AL1(21),CL8'PUSE'        PROGRAM NAME
         DC    CL8'&SYSDATE'            DATE
         DC    CL5'&SYSTIME'            TIME
         STM   RE,RC,12(RD)             SAVE REGS IN HI SAVE AREA
         LR    RC,RF                    SET UP BASE
         USING PUSE,RC                  OF R12
         USING SAVEAREA,RD              DYNAMIC SAVEAREA BASE + WORK
         LR    R2,R1                    SAVE PARAMS
         LR    RB,RD                    SAVE CALLERS SAVE AREA ADDR
         GETMAIN R,LV=GETSIZE1          GET SOME CORE
         LR    RD,R1                    SET DSECT BASE
         ST    RB,SAVE1+4               SAVE CALLERS SAVE AREA ADDR
         ST    RD,8(RB)                 SAVE OURS IN CALLERS
         EJECT
BEGIN    DS    0H
         L     R2,520         ADDR OF CPU-ID
         LA    R3,CPUS        GET CPU LIST ADDR
CPUSRCH  DS    0H
         CLC   1(5,R3),7(R2)  IS THIS THE CPU USED?
         BNH   FNDCPU         YES
         LA    R3,6(R3)       NO-UP TO NEXT CPU
         B     CPUSRCH        AND TRY AGAIN
FNDCPU   DS    0H
         MVC   SYS+8(1),0(R3) GET CPU-ID
         TIME  DEC
         IC    R0,X'C0'                 PACK SIGN
         SRL   R0,4                     DROP LEADING ZERO
         ST    R0,SYSTIM      GET SYSTEM TIME
         MVC   PRTIME,=X'402120204B20204B2020' MOVE TIME MASK IN
         ED    PRTIME,SYSTIM  TIME TO PRINT
         L     R2,16          POINT TO CVT
         L     R3,556(R2)               GET ASVT POINTER
         ST    R3,ASVTAD                AND SAVE IT
         L     R2,X'2C0'(R2)  POINT TO ASMVT FROM CVT-OFFSET
         L     R5,8(R2)                 GET PART ADDR
         L     R4,4(R2)                 GET SART ADDR
         LA    R3,X'70'(R2)             GET TOTAL ADDR
         L     R8,0(R3)                 SAVE OVERALL TOTAL
         S     R8,X'6C'(R2)
         SPACE 2
** GET TOTALS OF SLOT COUNTS FOR HEADING **
         SPACE 2
         LA    R11,3                    BCT COUNT REG
         LA    R10,T1                   POINT TO TOTALS IN HDING
         B     CNVTOT1
CNVTOT   S     R8,0(R3)
CNVTOT1  DS    0H
         L     R7,0(R3)                 TOTAL TO REG
         CVD   R7,DWD                   TOT TO DECIMAL
         MVC   0(6,R10),MASK            MASK TO PRINT
         ED    0(6,R10),DWD+5           TOTAL TO PRINT
         LA    R3,4(R3)                 NEXT TOTAL ADDR
         LA    R10,16(R10)              NEXT HDING POSITION
         BCT   R11,CNVTOT               AND PROCESS
         LR    R7,R8                    GET UNUSED RESERVED SLOTS
         LA    R1,RES
         BAL   R8,CNVT
         L     R7,X'6C'(R2)             GET UNRESERVED TOTAL
         LA    R1,UNRES
         BAL   R8,CNVT
         MVC   L1+1(L'HDING),HDING
         MVC   L2+1(L'HD2),HD2
         MVC   L3+1(L'PRTHED),PRTHED    PARTE HEADING TO BLOCK
         LA    R9,L4+2                  GET POINTER TO LINES
         SPACE 2
** PART INFO PROCESSED **
         SPACE 2
         L     R3,24(R5)                ADDR OF DSN LIST
         L     R10,4(R5)                TOTAL NBR PARTES
         LA    R6,80(R5)                ADDR OF PARTES
         B     TSTPRT
NXTLOT   DS    0H
         LA    R6,64(R6)                NEXT PARTE
NXTDSN   LA    R3,44(R3)                NEXT DSN
TSTPRT   DS    0H
         CLI   8(R6),X'20'              DUPLEX PARTE?
         BE    UPNXT                    YES GET NEXT PARTE & DSN
         CLI   0(R3),C' '               BLANK DSN
         BE    UPNXT                   YES GET NEXT DSN
         MVC   DSN(15),0(R3)            DSN TO PRINT
         BAL   R11,GETYPE               GET PAGE TYPE
         BAL   R11,ALLOC                GET SLOTS ALLOCED
         BAL   R11,SIZE                 GET DS SIZE IN SLOTS
         BAL   R11,WEIGHT               GET WEIGHTING
         BAL   R11,ERRORS               GET IO ERROR COUNT
         BAL   R11,PRUCB                GET UCB INFO
         BAL   R11,TOLINE               MOVE PRINT TO LINE
UPNXT    DS    0H
         BCT   R10,NXTLOT               AND PROCESS
         SPACE 2
** SARTE INFO PROCESSED **
         SPACE 2
         L     R10,4(R4)                NBR OF SARTES
         L     R3,24(R4)                POINT TO DSN LIST
         LA    R6,80(R4)                POINT TO SARTES
         B     TSTSRT
SRTNXT   DS    0H
         LA    R3,44(R3)                NEXT DSN
         LA    R6,48(R6)                NEXT SARTE
TSTSRT   DS    0H
         CLI   0(R3),C' '               IS DSN BLANK
         BE    UPSRT                    NO OK
         MVC   DSN(15),0(R3)            MOVE IN DSN
         MVC   TYP(4),=C'SWAP'          MOVE IN TYPE
         BAL   R11,ALLOC                GET SWAP SETS ALLOCED
         BAL   R11,SIZE                 GET DS SIZE
         BAL   R11,ERRORS               GET ERRORS COUNT
         BAL   R11,PRUCB                GET UCB INFO
         BAL   R11,TOLINE               MOVE INFO TO LINE
UPSRT    BCT   R10,SRTNXT
         SR    R6,R6                    CLEAR NON 8 CHAR BATCH COUNT
         SR    R7,R7                    CLEAR BATCH COUNT
         SR    R10,R10                    CLEAR TSO COUNT
         L     R1,ASVTAD                RESTORE ASVT ADDRESS
         L     R2,516(R1)               MAX NUMBER OF ADDRESS SPACES
         LA    R3,524(R1)               FIRST ASVT ENTRY MINUS 4
ASVTLOOP DS    0H
         LA    R3,4(R3)                 GET ASVT ENTRY
         ICM   R4,B'1111',0(R3)         IS HIG ORDER BIT ON
         BM    GETNXT                   ASID NOT ASSIGNED-GETNXT
         ICM   R5,B'1111',60(R4)        IS THERE A TSB ADR
         BNZ   TSOJOB                   YES -MUST BE TSO JOB
         L     R1,176(R4)               2ND JOB POINTER
         CLC   =C'INIT',0(R1)           IS NAME INIT
         BE    BATCH                    YES THERFORE BATCH JOB
         LA    R7,1(R7)                 UP STASK COUNT BY 1
         B     GETNXT                   AND GET NEXT ASCB
BATCH    DS    0H
         ICM   R14,B'1111',172(R4)
         BZ    GETNXT
         LA    R6,1(R6)                 UP BATCH COUNT BY 1
         B     GETNXT                   AND GET NEXT ASCB
TSOJOB   DS    0H
         LA    R10,1(R10)                 UP TSO COUNT
GETNXT   DS    0H
         BCT   R2,ASVTLOOP              AND ROUND AGAIN
         BCTR  R7,R0                    LOSE *MASTER*
         LA    R1,TYP+10                PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH STASK COUNT
         MVC   TYP(12),=C'STASK TOTAL-'
         LR    R7,R6                    GET BATCH TOTAL
         LA    R1,VOL+10                PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH BATCH COUNT
         MVC   VOL(12),=C'BATCH TOTAL-'
         LR    R7,R10                   GET TSO TOTAL
         LA    R1,SIZ+8                 PRINT POINTER
         BAL   R8,CNVT                  DEAL WITH TSO COUNT
         MVC   SIZ(10),=C'TSO TOTAL-'
         BCTR  R9,R0
         BCTR  R9,R0                       BACK TWO
         MVC   0(2,R9),=X'1DE8'            BRIGHT PRINT
         LA    R9,2(R9)
         BAL   R11,TOLINE
PRT      LA    R1,LINE
         LA    R0,SISE
         ICM   R1,8,TPUTFLG
         TPUT  (1),(0),R
         TGET  LI,1
         OI    LI,X'40'       UPPER CASE
         CLI   LI,C'E'        END?
         BE    WBRET
         B     BEGIN
CNVT     DS    0H
         CVD   R7,DWD                   TO DECIMAL
         MVC   0(6,R1),MASK             MOVE IN MASK
         ED    0(6,R1),DWD+5            EDIT IN TOTAL
         BR    R8
GETYPE   DS    0H
         CLI   8(R6),X'80'              PLPA DS?
         BNE   COMDS                    NO
         MVC   TYP(4),=C'PLPA'          MOVE IN DS TYPE
         BR    R11
COMDS    DS    0H
         CLI   8(R6),X'40'              COMMON DS?
         BNE   LOCLDS                   NO
         MVC   TYP(6),=C'COMMON'        MOVE IN DS TYPE
         BR    R11
LOCLDS   DS    0H
         CLI   8(R6),X'10'              LOCAL DS?
         BNE   NXTDSN                   NO GET NEXT DSN
         MVC   TYP(5),=C'LOCAL'         MOVE IN DS TYPE
         BR    R11
ALLOC    DS    0H
         LA    R1,ALC                   PRINT ADR
         L     R7,20(R6)                ALLOC COUNT
         BAL   R8,CNVT                  CONVERTED
         BR    R11
SIZE     DS    0H
         LA    R1,SIZ                   PRINT ADR
         L     R7,16(R6)                SIZE TOTAL
         BAL   R8,CNVT
         BR    R11
WEIGHT   DS    0H
         LA    R1,WGHT                  PRINT ADR
         L     R7,56(R6)                CORRECTION VALUE
         BAL   R8,CNVT
         BR    R11
ERRORS   DS    0H
         LA    R1,ERS                   PRINT ADR
         L     R7,24(R6)                ERROR COUNT
         BAL   R8,CNVT                  CONVERTED
         CLI   9(R6),X'40'              BAD DS?
         BNER  R11                      NO-CARRY ON
         MVI   0(R1),C'*'               YES-MARK DS WITH *
         BR    R11
PRUCB    DS    0H
         L     R7,44(R6)                UCB POINTER
         MVC   VOL(6),28(R7)            MOVE IN VOLSER
         MVC   DVADR,13(R7)             MOVE IN DEV ADR
         BR    R11
TOLINE   DS    0H
         MVC   0(L'PSLIN,R9),PSLIN      PRINT TO LINE
         LA    R9,81(R9)                NEXT LINE
         MVI   PSLIN,C' '
         MVC   PSLIN+1(61),PSLIN        PRINT CLEARED
         BR    R11
WBRET    DS    0H
         LA    R1,CLR
         LA    R0,L'CLR
         ICM   R1,8,TPUTFLG
         TPUT  (1),(0),R
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         LR    R1,RD                    ADDR OF AREA TO FREE
         L     RD,4(RD)                 HI SAVE AREA ADDR
         FREEMAIN R,LV=GETSIZE1,A=(1)   FREE UP CORE
         LM    RE,RC,12(RD)             RESORE CALLERS REGS
         BR    RE                       RETURN
TPUTFLG  DC    X'03'
CLR      DC    X'C71140403C40400011404013'
LINE     DC    X'27F5C71140403C4040001140401D40401DE8'
LI       DC    C' '
         DC    X'11C260'
L1       DC    CL80' '
L2       DC    CL80' '
L3       DC    CL80' '
L4       DC    X'1D60',CL78' '
L5       DC    X'1D60',CL78' '
L6       DC    X'1D60',CL78' '
L7       DC    X'1D60',CL78' '
L8       DC    X'1D60',CL78' '
L9       DC    X'1D60',CL78' '
LA       DC    X'1D60',CL78' '
LB       DC    X'1D60',CL78' '
LC       DC    X'1D60',CL78' '
LD       DC    X'1D60',CL78' '
LE       DC    X'1D60',CL78' '
LF       DC    X'1D60',CL78' '
L10      DC    X'1D60',CL78' '
L11      DC    X'1D60',CL78' '
L12      DC    X'1D60',CL78' '
L13      DC    X'1D60',CL78' '
L14      DC    X'1D60',CL78' '
         DC    X'1D401140C113'
SISE     EQU   *-LINE
PRTHED   DC    C'TYPE   DSN             VOLSER DVAD  AVAIL   SIZE ERRORC
               S   WGHT'
PSLIN    DS    0CL62
TYP      DS    CL6
         DS    CL1
DSN      DS    CL15
         DS    CL1
VOL      DS    CL6
         DS    CL1
DVADR    DS    CL3
         DS    CL2
ALC      DS    CL6
         DS    CL1
SIZ      DS    CL6
         DS    CL1
ERS      DS    CL6
         DS    CL1
WGHT     DS    CL6
SAVE11   DS    F
CPUS     DC    C'A71216D71181C71059?0000'
SYSTIM   DS    F
ASVTAD   DS    F
DWD      DS    D
HDING    DS    0CL73
         DC    CL4'TIME'
PRTIME   DS    CL10
SYS      DC    CL9' SYSTEM X'
         DC    CL1'  '
         DC    CL10'   SLOTS  '
T1       DS    CL6
         DC    CL10'     VIO  '
T2       DS    CL6
         DC    CL10'   NONVIO '
T3       DS    CL6
MASK     DC    X'402020202021'
HD2      DS    0CL52
         DC    CL17'SLOTS UNRESERVED '
UNRES    DS    CL6
         DC    CL4'    '
         DC    CL19'RESERVED BUT UNUSED'
RES      DS    CL6
*
**
***      DSECT FOR GETMAINED WORK AREA
**
*
SAVEAREA DSECT
SAVE1    DS    18F
GETEND1  DS    0D
GETSIZE1 EQU   GETEND1-SAVE1
         END
