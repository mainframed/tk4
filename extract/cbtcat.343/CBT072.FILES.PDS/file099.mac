*          DATA SET ANBMONT    AT LEVEL 001 AS OF 18/02/76
         TITLE 'MONT - MONITOR TRACE TABLE ENTRIES'
MONT     CSECT
         B     ENTRY-MONT(15)
         DC    X'06',CL7'MONT'
ENTRY    EQU   *
*
**  ROUTINE SAMPLES TRACE TABLE ENTRIES WRITING
**  SHORTENED FORMS TO THE LOG
**  LINKAGE IS MONT(INPUT,MONRT,TOD,FNDVAL,FNDPRS,FNDTXT)
*
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW15     EQU   15
*
         STM   14,12,12(13)            SAVE REGISTERS
         BALR  RB2,0
         USING *,RB2
         LR    RW3,13
         ST    13,SAVE+4
         LA    13,SAVE
         ST    13,8(RW3)               CHAIN SAVE AREAS
*
**  CHECK IF GTF IS ACTIVE
*
         L     RW3,16            CVT ADDRESS
         TM    236(RW3),X'80'    GTF ACTIVE?
         BNZ   RETURN
*
**  PICK UP PARAMETERS
*
         LM    RW3,RW5,0(1)            PICK UP PARAM ADDRESSES
         MVC   TOD(4),0(RW5)           MOVE TIME OF DAY
         MVC   ADRT(4),0(RW4)          MOVE ADDRESS OF MONRT
*
**  FIRST TIME THRU?
*
         TM    FIRST,X'FF'             TEST FLAG
         BNZ   NOTONE
         MVI   FIRST,X'FF'             SET FLAG
         L     RW3,0(RW3)              LOAD ADDRESS OF INPUT
         LM    RW4,RW6,12(1)           LOAD OTHER PARAMS
         L     RW4,0(RW4)              FNDVAL
         L     RW5,0(RW6)              FNDTXT
         SR    RW7,RW7                 ZERO POINTER
READIN   EQU   *
*
**  READ IN OTHER PARAMETERS
*
         LA    RW1,ARGLST              POINT AT PARAM LIST
         LR    RW15,RW3                POINT AT INPUT
         BALR  14,15                   LINK TO ROUTINE
         L     RW6,IFLAG               PICK UP EOF FLAG
         LTR   RW6,RW6                 TEST
         BNZ   ENDATA                  EOF REACHED
*
**  LOOK FOR TYPE=
*
         MVC   VALUE(8),NULL           ZERO RESULT FIELD
         LA    RW6,5                   KEY LENGTH
         ST    RW6,KEYLEN              STORE
         LA    RW6,KEY3                POINT AT KEY
         ST    RW6,KEYAD               STORE IN OARAM LIST
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           PRESENT?
         BE    NOTYPE                  NO,BRANCH
         SR    RW8,RW8                 ZERO COUNTER
         LA    RW9,SIO                 POINT AT FIRST TYPE
NXTYPE   EQU   *
         CLC   VALUE(3),0(RW9)         CORRECT TYPE?
         BE    GOTYPE                  YES,BRANCH
         LA    RW8,1(RW8)              INCREMENT COUNTER
         LA    RW9,3(RW9)              INCREMENT POINTER
         C     RW8,=F'8'               END OF TYPES?
         BL    NXTYPE                  NO,BRANCH
*
**  INCORRECT INPUT - IGNORE CARD
*
         B     READIN                  GO BACK FOR NEXT CARD
GOTYPE   EQU   *
*
**  TYPE FOUND - STORE IN OPTIONS
*
         STH   RW8,OPTIONS(RW7)        STORE OPTION
NOTYPE   EQU   *
*
**  LOOK FOR ASID=
*
         LA    RW6,KEY1                POINT AT KEY
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LR    RW15,RW4                FNDVAL
         BALR  14,15                   LINK TO ROUTINE
         L     RW6,THERE               PRESENT?
         LTR   RW6,RW6
         BZ    NOASID                  NO,BRANCH
*
**  ASID= FOUND - STORE IN IASID
*
         LA    RW6,IASID(RW7)          POINT AT ASID ENTRY
         MVC   0(2,RW6),VALUE+2        MOVE ACCROSS ASID
         B     INCREAD                 BRANCH ON
NOASID   EQU   *
*
**  LOOK FOR JOB=
*
         MVC   VALUE(8),NULL           ZERO RETURN FIELD
         LA    RW6,KEY2                POINT AT KEY
         ST    RW6,KEYAD               STORE IN PARAM LIST
         LA    RW6,4                   KEY LENGTH
         ST    RW6,KEYLEN              STORE
         LA    RW1,ARGS                POINT AT PARAM LIST
         LR    RW15,RW5                FNDTXT
         BALR  14,15                   LINK TO ROUTINE
         CLC   VALUE(8),NULL           SET?
         BE    INCREAD                 NO,BRANCH
*
**  JOBNAME FOUND - FIND ASID
*
         L     RW6,16                  CVT
         L     RW6,556(RW6)            ASVT
         LA    RW6,528(RW6)            ASCB QUEUE
NXTASCB  EQU   *
         L     RW8,0(RW6)              GET ASCB ADDRESS
         LA    RW8,0(RW8)              REMOVE TOP BYTE
         LTR   RW8,RW8                 ZERO?
         BZ    READIN                  JOBNAME NOT FOUND - NEXT CARD
         TM    0(RW6),X'80'            IN USE?
         BNZ   INCASCB                 NO,BRANCH
         L     RW9,172(RW8)            JOBNAME POINTER
         LTR   RW9,RW9                 ZERO?
         BNZ   NAMEOK                  NO,BRANCH
         L     RW9,176(RW8)            OTHER POINTER
NAMEOK   EQU   *
*
**  CHECK IF CORRECT ASCB FOUND
*
         CLC   VALUE(8),0(RW9)         CORRECT JOBNAME?
         BE    GOTNAM                  YES,BRANCH
INCASCB  EQU   *
         LA    RW6,4(RW6)              INCREMENT POINTER
         B     NXTASCB                 TRY NEXT ASCB
GOTNAM   EQU   *
*
**  JOBNAME FOUND - INSERT ASID
*
         LH    RW6,36(RW8)             PICK UP ASID
         STH   RW6,IASID(RW7)          STORE ASID
INCREAD  EQU   *
*
**  INCREMENT FOR NEXT CARD
*
         LA    RW7,2(RW7)              INCREMENT POINTER
         L     RW6,ICT                 LOAD COUNTR
         LA    RW6,1(RW6)              INCREMENT
         ST    RW6,ICT                 STORE COUNTER
         C     RW6,=F'10'              LIMIT?
         BL    READIN                  NO - GET NEXT CARD
ENDATA   EQU   *
*
**  SET UP POINTER TO ASVT QUEUE
*
         L     RW3,16                  CVT ADDRESS
         L     RW3,556(RW3)            ASVT ADDRESS
         LA    RW3,524(RW3)            ASCB QUEUE ADDRESS
         ST    RW3,ASVT                STORE ADDRESS
*
**  OPTIONS READ IN
*
         MVI   ANY,X'FF'               SET ANY FLAG
         L     RW3,ICT                 LOAD COUNTER
         LTR   RW3,RW3                 TEST
         BNZ   NOTONE                  SOME BRANCH
         MVI   ANY,X'00'               SET FLAG TO NONE
NOTONE   EQU   *
         TM    ANY,X'FF'               ANY?
         BZ    RETURN
*
**  PICK UP TRACE TABLE ADDRESSES
*
         L     RW3,84                  POINT AT TRACE TABLE HEADER
         LM    RW3,RW5,0(RW3)          PICK UP CURRENT FIRST AND LAST
         ST    RW3,NEWTTE              STORE CURRENT ADDRESS
         ST    RW4,FIRSTAD             STORE FIRST ADDRESS
         ST    RW5,LASTAD              STORE LAST ADDRESS
         L     RW6,28(RW3)             PICK UP TIME OF FIRST
         ST    RW6,NEWTIM              STORE FIRST TIME
         LA    RW6,100                 LOAD MAX NO OF ENTRIES
*
**  PICK UP DATA TYPE
*
NXTTE    EQU   *
         SR    RW7,RW7
         IC    RW7,2(RW3)              PICK UP TYPE FIELD
         SRL   RW7,4                   SHIFT TO BOTTOM OF WORD
         N     RW7,=F'7'               REMOVE TOP BIT
         STH   RW7,TYPE                STORE IN DATA AREA
         SLL   RW7,2                   SHIFT TO INDEX
         B     TABLE(RW7)
TABLE    EQU   *
         B     TYPE0                   TYPE0
         B     TYPE2                   TYPE1
         B     TYPE2                   TYPE2
         B     TYPE2                   TYPE3
         B     TYPE4                   TYPE4
         B     TYPE0                   TYPE5
         B     TYPE4                   TYPE6
         B     TYPE2                   TYPE7
*
**  MOVE REQUIRED AREAS INTO DATA AREA
*
TYPE0    EQU   *
         LA    RW7,8                   LOAD DATA LENGTH
         ST    RW7,LENGTH              STORE DATA LENGTH
         MVC   CSW(4),12(RW3)          MOVE HALF CSW
         B     MOVE
TYPE4    EQU   *
         LA    RW7,8                   LOAD DATA LENGTH
         ST    RW7,LENGTH              STORE DATA LENGTH
         SR    RW7,RW7
         LH    RW7,10(RW3)             LOAD ASID
         ST    RW7,CSW                 STORE IN DATA AREA
         B     MOVE
TYPE2    EQU   *
         LA    RW7,7                   LOAD DATA LENGTH
         ST    RW7,LENGTH              STORE DATA LENGTH
MOVE     EQU   *
         MVC   PSW(8),0(RW3)           MOVE PSW
         MVC   ASID(2),22(RW3)         MOVE IN ASID
         MVC   TIME(4),28(RW3)         MOVE IN TIME
*
**  FIDN JOBNAME
*
         LH    RW7,22(RW3)             PICK UP ASID
         SLL   RW7,2                   SHIFT FOR INDEX
         A     RW7,ASVT                POINT TO ASCB
         TM    0(RW7),X'80'            ASCB IN USE?
         BZ    INUSE                   YES,BRANCH
         LA    RW8,NULL                POINT AT BALNK
         B     GOTJOB                  BRANCH ROUND
INUSE    EQU   *
         L     RW7,0(RW7)              LOAD ASCB ADDRESS
         L     RW8,172(RW7)            JOBNAME POINTER
         LTR   RW8,RW8                 ZERO?
         BNZ   GOTJOB                  NO,BRANCH
         L     RW8,176(RW7)            LOAD JOBNAME POINTER
GOTJOB   EQU   *
         MVC   JOBNAME(8),0(RW8)       MOVE IN JOBNAME
*
**  CHECK IF THIS TTE WANTED
*
         L     RW4,ICT                 NO OF OPTIONS
         LA    RW5,OPTIONS             POINT AT OPTIONS
         LA    RW7,IASID
NXTOPT   EQU   *
         LH    RW8,0(RW7)              PICK UP ASID OPTION
         LTR   RW8,RW8                 TEST
         BM    ALLASID                 BRANCH,ALL REQUESTED
         CH    RW8,ASID                RIGHT ASID?
         BNE   INCOPT                  NO,BRANCH
ALLASID  EQU   *
         LH    RW8,0(RW5)              PICK UP TYPE
         LTR    RW8,RW8                TEST
         BM    WRITE                   BRANCH,ALL REQUIRED
         CH    RW8,TYPE                CORRECT TYPE?
         BE    WRITE                   YES,BRANCH
INCOPT   EQU   *
         LA    RW5,2(RW5)              INCREMENT POINTERS
         LA    RW7,2(RW7)
         BCT   RW4,NXTOPT              DECREMENT COUNT
         B     PRETTE                  TTE NOT WANTED
WRITE    EQU   *
*
**  WRITE OUT DATA
*
         LA    RW1,ADARGS              POINT AT PARAM LIST
         L     RW15,ADRT               ADDRESS OF MONRT
         BALR  14,15                   LINK TO MONRT
PRETTE   EQU   *
*
**  POINT AT PREVIOUS TTE
*
         C     RW3,FIRSTAD             FIRST ENTRY?
         BH    NOTFIRST                NO,BRANCH
         L     RW3,LASTAD              LOAD LAST ENTRY
NOTFIRST EQU   *
         S     RW3,=F'32'              DECREMENT POINTER
         C     RW3,OLDTTE              GET IT LAST TIME?
         BNE   BCTTE                   NO,BRANCH
         CLC   OLDTIM(4),28(RW3)       SAME TIME?
         BE    INCTTE                  YES END THIS LOOP
BCTTE    EQU   *
         BCT   RW6,NXTTE               GO BACK FOR MORE
INCTTE   EQU   *
         MVC   OLDTTE(4),NEWTTE        MOVE NEW FIRST ADDRESS
         MVC   OLDTIM(4),NEWTIM        MOVE NEW FIRST TIME
RETURN   EQU   *
*
**  RETURN
*
         L     13,4(13)
         LM    14,12,12(13)            RESTORE REGISTERS
         BR    14
*
**  LITERAL CONSTANTS
*
         LTORG
*
**  SAVE AREAS AND STORAGE
*
SAVE     DS    18F
ADRT     DS    F
ADARGS   DC    A(NAME)
         DC    A(LENGTH)
         DC    A(TOD)
         DC    A(FLAG)
NAME     DC    CL8'MONT'
LENGTH   DS    F
FLAG     DC    F'0'
TOD      DS    F
TYPE     DS    H
ASID     DS    H
TIME     DS    F
JOBNAME  DC    CL8' '
PSW      DS    2F
CSW      DS    F
NEWTIM   DS    F
NEWTTE   DS    F
OLDTIM   DC    F'0'
OLDTTE   DC    F'0'
FIRSTAD  DS    F
LASTAD   DS    F
ICT      DC    F'0'
OPTIONS  DC    10H'-1'
IASID    DC    10H'-1'
KEY1     DC    CL8'ASID='
KEY2     DC    CL8'JOB='
KEY3     DC    CL8'TYPE='
SIO      DC    CL3'SIO'
         DC    CL3'EXT'
         DC    CL3'SVC'
         DC    CL3'PGM'
         DC    CL3'ISD'
         DC    CL3'I/O'
         DC    CL3'SSR'
         DC    CL3'DSP'
ARGLST   DC    A(NAME)
         DC    A(BUFFER)
         DC    A(IFLAG)
BUFFER   DC    CL80' '
IFLAG    DC    F'0'
ARGS     DC    A(BUFLEN)
         DC    A(BUFFER)
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
THERE    DS    F
VALUE    DS    2F
KEYLEN   DS    F
BUFLEN   DC    F'80'
ASVT     DS    F
NULL     DC    CL8' '
FIRST    DC    X'00'
ANY      DC    X'00'
         END
