*          DATA SET CBT276     AT LEVEL 001 AS OF 02/25/75
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
       MACRO
       DISCLAIM
       EJECT
*********************************************************************
*                                                                    *
*                      D I S C L A I M E R                           *
*                                                                    *
*                                                                    *
*   THE PROGRAMS HAVE BEEN USED SUCCESSFULLY BY CBT AND TO THE BEST  *
*   OF OUR KNOWLEDGE THE SYSTEM IS OPERATIONAL, HOWEVER NO WARRANTY  *
*   IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND  *
*   NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR  *
*   INDIRECTLY  CAUSED BY THE USE OF THE PROGRAMS.  IT IS THE USERS  *
*   RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL  *
*   SUPPLIED.                                                        *
*                                                                    *
*   CBT DOES NOT GUARANTEE TO KEEP ANY MATERIAL PROVIDED UP TO DATE  *
*   NOR DOES IT GUARANTEE TO PROVIDE ANY CORRECTIONS OR  EXTENSIONS  *
*   DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE  *
*   FUTURE BY CBT ITSELF.                                            *
*                                                                    *
*                                                                    *
*                                                                    *
*********************************************************************
       EJECT
       MEND
*          DATA SET CBT224     AT LEVEL 002 AS OF 04/18/77
*          DATA SET CBT224T    AT LEVEL 001 AS OF 04/17/77
*          DATA SET CBT224     AT LEVEL 008 AS OF 09/10/74
*
*    THIS PROGRAM WILL READ AN INPUT FILE WHICH WILL LIST ALL THE DSN
*    WHICH SHOULD BE AMBLISTED.
*    IT WILL LINK TO AMBLIST AND THEN LINK TO CBT225
*
*    INPUT
*     SYSUT1   80 BYTE RECORD TO GIVE DDNAMES AND DSN OF THE
*              LIBRARY TO BE AMBLISTED
*
*              BYTES 01-02    RESERVED
*              BYTES 03-10    DDNAME
*              BYTES 11-27    RESERVED
*              BYTES 28-71    DSNAME
*              BYTES 72-80    RESERVED
*
*     SYSUT2   80 BYTE RECORD INPUT TO CBT225
*              BYTES 1-44 THE DSN OF THE LIBRARY BEING AMBLISTED.
*
*     SYSIN    80 BYTE RECORD WHICH IN THE CONTROL CARD TO AMBLIST
*
*
* THE JCL NECESSARY TO RUN THIS AND CBT225 IS AT THE END OF
* THIS PROGRAM. I LEAVE IT TO YOUR IMAGINATION TO GET IT OUT.
*
CBT224   SAVEALL   REG(2)        SAVE EVERYTHING BASE IS REG 2
         DISCLAIM                WASH OUR HAND OF EVERYTHING
         OPEN  (SYSUT1,(INPUT))  OPEN THE INPUT FILE
READ     GET   SYSUT1,INAREA     READY THE RECORD IN
         MVC   ODDN,IDDN         MOVE THE DDNAME
         MVC   MES+7(8),IDDN     MOVE THE DDNAME
         WTO   MF=(E,MES)        WTO TO KNOW WHERE WE ARE
         MVC   ODSN,IDSN         MOVE THE DSNAME
         OPEN  (SYSIN,(OUTPUT))  OPEN THE INPUT FILE FOR CBT225
         PUT   SYSIN,OUTAREA1    WRITE THE RECORD
         CLOSE SYSIN             CLOSE THE INPUT FILE FOR CBT225
         LINK  EP=AMBLIST        GO TO AMBLIST
         OPEN  (SYSUT2,(OUTPUT)) OPEN THE OTHER INPUT FOR CBT225
         PUT   SYSUT2,OUTAREA2   WRITE THE RECORD
         PUT   SYSUT2,OUTAREA2   WRITE THE RECORD
         PUT   SYSUT2,OUTAREA2   WRITE THE RECORD
         PUT   SYSUT2,OUTAREA2   WRITE THE RECORD
         CLOSE SYSUT2            CLOSE THE OTHER INPUT FOR CBT225
         LINK  EP=CBT225         GO TO CBT225
         B     READ              START THE CYCLE AGAIN
EOJ      CLOSE SYSUT1            CLOSE OUR INPUT FILE
         ENDALL                  THE END
         EJECT
SYSUT1   DCB   DSORG=PS,DDNAME=SYSUT1,MACRF=GM,EODAD=EOJ
         EJECT
SYSUT2   DCB   DSORG=PS,DDNAME=SYSUT2,MACRF=PM,LRECL=80,               X
               BLKSIZE=80,RECFM=FB
         EJECT
SYSIN    DCB   DSORG=PS,DDNAME=SYSIN,MACRF=PM,LRECL=80,                X
               BLKSIZE=80,RECFM=FB
         EJECT
MES      WTO   '**(NAME    STARTED TO BE AMBLISTED **',MF=L
OUTAREA1 DS    0CL80             OUTPUT FOR INPUT TO AMBLIST
         DC    CL13' LISTIDR DDN=' FIRST PART OF CONTROL CARD
ODDN     DC    CL8' '            OUTPUT DDNAME
         DC    CL59' '           BLANK
OUTAREA2 DS    0CL80             OUTPUT FOR INPUT TO CBT225
ODSN     DC    CL44' '           LIBRARY NAME
         DC    CL36' '           BLANK
INAREA   DS    0CL80             INPUT READ AREA
         DS    CL2               BLANK
IDDN     DS    CL8               INPUT DDNAME
         DS    CL17              RESERVED
IDSN     DS    CL44              INPUT DSNAME NAME
         DS    CL9               BLANK
         DS    CL10
         TITLE   'JCL NECESSARY TO RUN THIS'
*
* THIS IS SET UP FOR VS2 3.7 DLIBS
*
*'// EXEC PGM=CBT224,TIME=1440,REGION=1250K
*'//SYSUDUMP DD SYSOUT=X
*'//SYSIN DD UNIT=SYSDA,SPACE=(TRK,(1,1))
*'//SYSUT1 DD *,DCB=BLKSIZE=1680
*'  ACMDLIB  DD DISP=SHR,DSN=SYS1.ACMDLIB
*'  ALPALIB  DD DISP=SHR,DSN=SYS1.ALPALIB
*'  AOSA0    DD DISP=SHR,DSN=SYS1.AOSA0
*'  AOSBN    DD DISP=SHR,DSN=SYS1.AOSBN
*'  AOSB0    DD DISP=SHR,DSN=SYS1.AOSB0
*'  AOSB3    DD DISP=SHR,DSN=SYS1.AOSB3
*'  AOSCA    DD DISP=SHR,DSN=SYS1.AOSCA
*'  AOSCD    DD DISP=SHR,DSN=SYS1.AOSCD
*'  AOSCE    DD DISP=SHR,DSN=SYS1.AOSCE
*'  AOSC2    DD DISP=SHR,DSN=SYS1.AOSC2
*'  AOSC5    DD DISP=SHR,DSN=SYS1.AOSC5
*'  AOSC6    DD DISP=SHR,DSN=SYS1.AOSC6
*'  AOSD0    DD DISP=SHR,DSN=SYS1.AOSD0
*'  AOSD7    DD DISP=SHR,DSN=SYS1.AOSD7
*'  AOSD8    DD DISP=SHR,DSN=SYS1.AOSD8
*'  AOSG0    DD DISP=SHR,DSN=SYS1.AOSG0
*'  AOST3    DD DISP=SHR,DSN=SYS1.AOST3
*'  AOST4    DD DISP=SHR,DSN=SYS1.AOST4
*'  AOSU0    DD DISP=SHR,DSN=SYS1.AOSU0
*'  AOS00    DD DISP=SHR,DSN=SYS1.AOS00
*'  AOS03    DD DISP=SHR,DSN=SYS1.AOS03
*'  AOS04    DD DISP=SHR,DSN=SYS1.AOS04
*'  AOS05    DD DISP=SHR,DSN=SYS1.AOS05
*'  AOS06    DD DISP=SHR,DSN=SYS1.AOS06
*'  AOS07    DD DISP=SHR,DSN=SYS1.AOS07
*'  AOS10    DD DISP=SHR,DSN=SYS1.AOS10
*'  AOS11    DD DISP=SHR,DSN=SYS1.AOS11
*'  AOS12    DD DISP=SHR,DSN=SYS1.AOS12
*'  AOS20    DD DISP=SHR,DSN=SYS1.AOS20
*'  AOS21    DD DISP=SHR,DSN=SYS1.AOS21
*'/*
*'//SYSUT2 DD UNIT=SYSDA,SPACE=(TRK,(1,1))
*'//SYSUT3 DD DSN=SMP.CSECT,DISP=MOD,UNIT=3330,VOL=SER=DAB005
*'//SYSPRINT DD UNIT=SYSDA,SPACE=(CYL,(10,10)),DCB=BLKSIZE=2420
*'//ACMDLIB  DD DISP=SHR,DSN=SYS1.ACMDLIB
*'//ALPALIB  DD DISP=SHR,DSN=SYS1.ALPALIB
*'//AOSA0    DD DISP=SHR,DSN=SYS1.AOSA0
*'//AOSBN    DD DISP=SHR,DSN=SYS1.AOSBN
*'//AOSB0    DD DISP=SHR,DSN=SYS1.AOSB0
*'//AOSB3    DD DISP=SHR,DSN=SYS1.AOSB3
*'//AOSCA    DD DISP=SHR,DSN=SYS1.AOSCA
*'//AOSCD    DD DISP=SHR,DSN=SYS1.AOSCD
*'//AOSCE    DD DISP=SHR,DSN=SYS1.AOSCE
*'//AOSC2    DD DISP=SHR,DSN=SYS1.AOSC2
*'//AOSC5    DD DISP=SHR,DSN=SYS1.AOSC5
*'//AOSC6    DD DISP=SHR,DSN=SYS1.AOSC6
*'//AOSD0    DD DISP=SHR,DSN=SYS1.AOSD0
*'//AOSD7    DD DISP=SHR,DSN=SYS1.AOSD7
*'//AOSD8    DD DISP=SHR,DSN=SYS1.AOSD8
*'//AOSG0    DD DISP=SHR,DSN=SYS1.AOSG0
*'//AOST3    DD DISP=SHR,DSN=SYS1.AOST3
*'//AOST4    DD DISP=SHR,DSN=SYS1.AOST4
*'//AOSU0    DD DISP=SHR,DSN=SYS1.AOSU0
*'//AOS00    DD DISP=SHR,DSN=SYS1.AOS00
*'//AOS03    DD DISP=SHR,DSN=SYS1.AOS03
*'//AOS04    DD DISP=SHR,DSN=SYS1.AOS04
*'//AOS05    DD DISP=SHR,DSN=SYS1.AOS05
*'//AOS06    DD DISP=SHR,DSN=SYS1.AOS06
*'//AOS07    DD DISP=SHR,DSN=SYS1.AOS07
*'//AOS10    DD DISP=SHR,DSN=SYS1.AOS10
*'//AOS11    DD DISP=SHR,DSN=SYS1.AOS11
*'//AOS12    DD DISP=SHR,DSN=SYS1.AOS12
*'//AOS20    DD DISP=SHR,DSN=SYS1.AOS20
*'//AOS21    DD DISP=SHR,DSN=SYS1.AOS21
         END
