*          DATA SET CBT391     AT LEVEL 001 AS OF 04/05/77
./ ADD NAME=TOFF
TOFF     TITLE 'STAND-ALONE PROGRAM TO TURN TRACE ON'
XVT      CVT  DSECT=YES,LIST=YES
         EJECT
TOFF     PROLOG R,LV=196
         L     R3,16
         LA    R15,16
         USING CVT,R3
         CLC   CVTTRACE(4),=XL4'07FB07FB'
         BE    ALROFF
         CLC   CVTTRACE(2),=X'07FA'
         BE    ALRON
         CLC   CVTTRACE(2),=X'07FB'
         BE    ALROFF
         CLC   CVTTRACE(2),=X'0700'
         BE    DYNOFF
WHUT     WTO  'TRC001I TRACE STATUS WORD INVALID  ',ROUTCDE=(2,10,11)
         B    BYEBYE
ALRON    WTO  'TRC002I TRACE CURRENTLY      ACTIVE',ROUTCDE=(2,10,11)
         B    SWON
ALROFF   WTO  'TRC003I TRACE CURRENTLY    INACTIVE',ROUTCDE=(2,10,11)
         B    SWON
DYNOFF   WTO  'TRC004I TRACE DYNAMICALLY  INACTIVE',ROUTCDE=(2,10,11)
         B    SWON
WHOOPS   WTO  'TRC009I TRACE NOT SPECIFIED AT IPL ',ROUTCDE=(2,10,11)
         B    BYEBYE
SWON     EQU  *
         L    R1,X'54'       IS THERE A TRACE TABLE
         LA   R1,0(R1)          SOMEWHERE
         LTR  R1,R1                 IN
         BZ   WHOOPS                  THE SYSTEM
*
         MODESET KEY=ZERO
         MVC   CVTTRACE(2),=X'07FB'       TURN OFF THE TRACE
         MODESET KEY=NZERO
IZZON    WTO  'TRC000I MVS SYSTEM TRACE NOW INACTIVE',ROUTCDE=(2,10,11)
         SR    R15,R15
BYEBYE   EPILOG RC=(15)
         LTORG
         END
./ ADD NAME=TRACEOFF
//TRACEOFF PROC R=46K,SO=J
//IEFPROC EXEC PGM=HHLGTF,REGION=&R
//IEFJBLIB DD DISP=SHR,DSN=C.APFLIB(TRACEOFF)
//SYSUDUMP DD SYSOUT=&SO
//STEPLIB DD DISP=SHR,DSN=C.APFLIB
//SYSPRINT DD SYSOUT=&SO
./ ADD NAME=TON
TON      TITLE 'STAND-ALONE PROGRAM TO TURN TRACE ON'
XVT      CVT  DSECT=YES,LIST=YES
         EJECT
TON      PROLOG R,LV=196
         L     R3,16
         LA    R15,16
         USING CVT,R3
         CLC   CVTTRACE(4),=XL4'07FB07FB'
         BE    ALROFF
         CLC   CVTTRACE(2),=X'07FA'
         BE    ALRON
         CLC   CVTTRACE(2),=X'07FB'
         BE    ALROFF
         CLC   CVTTRACE(2),=X'0700'
         BE    DYNOFF
WHUT     WTO  'TRC001I TRACE STATUS WORD INVALID  ',ROUTCDE=(2,10,11)
         B    BYEBYE
ALRON    WTO  'TRC002I TRACE CURRENTLY      ACTIVE',ROUTCDE=(2,10,11)
         B    SWON
ALROFF   WTO  'TRC003I TRACE CURRENTLY    INACTIVE',ROUTCDE=(2,10,11)
         B    SWON
DYNOFF   WTO  'TRC004I TRACE DYNAMICALLY  INACTIVE',ROUTCDE=(2,10,11)
         B    SWON
WHOOPS   WTO  'TRC009I TRACE NOT SPECIFIED AT IPL ',ROUTCDE=(2,10,11)
         B    BYEBYE
SWON     EQU  *
         L    R1,X'54'       IS THERE A TRACE TABLE
         LA   R1,0(R1)          SOMEWHERE
         LTR  R1,R1                 IN
         BZ   WHOOPS                  THE SYSTEM
*
         MODESET KEY=ZERO
         MVC   CVTTRACE(2),=X'07FA'       TURN ON THE TRACE
         MODESET KEY=NZERO
IZZON    WTO  'TRC000I MVS SYSTEM TRACE NOW ACTIVE',ROUTCDE=(2,10,11)
         SR    R15,R15
BYEBYE   EPILOG RC=(15)
         LTORG
         END
./ ADD NAME=TRACEON
//TRACEON  PROC R=46K,SO=J
//IEFPROC EXEC PGM=HHLGTF,REGION=&R
//IEFJBLIB DD DISP=SHR,DSN=C.APFLIB(TRACEON)
//SYSUDUMP DD SYSOUT=&SO
//STEPLIB DD DISP=SHR,DSN=C.APFLIB
//SYSPRINT DD SYSOUT=&SO
./ ADD NAME=MACROS
         MACRO
&NAME    PROLOG &A,&LV=80,&SA=SAVEAREA,&BASE=12,&REGS=,                X
               &PARM=11,&WORK=IKXWORK
         COPY  GBLPAKA
         COPY  GBLPAKB
         COPY  GBLPAKC
         LCLA  &RNM
         LCLA  &RCT
         LCLA  &RLST
         LCLC  &CNM
         LCLA  &RDSP
&RCT     SETA  0
&RDSP    SETA  0
         AIF   (&LIST).LIST
         AGO   .LISTX
.LIST    ANOP
         EJECT
*                                                                     *
*                                                                     *
*        P R O L O G    M A C R O                                     *
*                                                                     *
*                                                                     *
         SPACE 4
*                                                                     *
*        FUNCTION:                                                    *
*                   CREATES INITIAL CODING (CSECT) FOR AN             *
*                   ASSEMBLY LANGUAGE MODULE:                         *
*                        1.   CSECT STATEMENT                         *
*                        2.   REGISTER SAVING                         *
*                        3.   ADDRESSABILITY                          *
*                        4.   NEW SAVE AREA  (GETMAIN)                *
*                                                                     *
*        FORMAT:                                                      *
*                                                                     *
*              NAME  PROLOG  TYPE,LV=NN                               *
*         OR                                                          *
*              NAME  PROLOG  TYPE,REGS=X,PARM=Y                       *
*                                                                     *
*                                                                     *
*                                                                     *
*                  -  WHERE  -                                        *
*                                                                     *
*                        NAME  IS THE CSECT NAME                      *
*                                                                     *
*                        TYPE  IS  R                                  *
*                                  RENT                               *
*                                  REENTRANT                          *
*                              FOR REENTERABLE CODE                   *
*                                                                     *
*                              OR  S                                  *
*                                  STD                                *
*                                  REUS                               *
*                                  BLANK                              *
*                              FOR REUSABLE CODE                      *
*                                                                     *
*                        LV    IS  NUMBER OF BYTES IN GETMAIN         *
*                                  GENERATED FOR REENTRANT            *
*                                  MODULES                            *
*                                                                     *
*                                                                     *
*                                                                     *
*                        REGS  IS  THE NUMBER OF REGISTERS TO BE      *
*                                  USED FOR ADDRESSABILITY IN         *
*                                  RE-ENTRANT MODULES.                *
*                                                                     *
*                        PARM  IS  THE REGISTER TO BE USED            *
*                                  TO SAVE R1 IN - RE-ENTRANT         *
*                                  MODULE CODE.                       *
*                                                                     *
*                                                                     *
*              NOTE THAT THIS MACRO MUST BE USED WITH THE             *
*              - EPILOG -  MACRO                                      *
*                                                                     *
         MEXIT
.LISTX   ANOP
&LVNUM   SETA  &LV
&RENT    SETB  0
&CSECT   SETC  '&NAME'
         AIF   ('&NAME' EQ '').MG1
         AIF   (&PLG).MG4
&PLG     SETB  1
         EQUREGS
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*         O S    S T A N D A R D    E N T R Y    L I N K A G E        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         AIF   ('&A' EQ '').NORENT
         AIF   ('&A' EQ 'R').RENT
         AIF   ('&A' EQ 'S').NORENT
         AIF   ('&A' EQ 'RENT').RENT
         AIF   ('&A' EQ 'REUS').NORENT
         AIF   ('&A' EQ 'STD').NORENT
         AIF   ('&A' EQ 'REENTRANT').RENT
         AGO   .MG3
.NORENT  ANOP
         SPACE 4
&NAME    CSECT
         USING *,15
         STM   14,12,12(13) .          SAVE ENTRY REGISTERS
         BAL   12,X&SYSNDX .           POINT TO SAVE AREA
&SA      DC    18F'0' .                SAVE AREA FOR CSECT
DOUBLE   DC    D'0' .                  DOUBLEWORD WORK AREA
X&SYSNDX EQU   *
         ST    13,4(12) .              FORWARD CHAIN SAVE AREAS
         ST    12,8(13) .               BACKWARD CHAIN SAVE AREAS
         LR    13,12
         USING &SA.,13
         DROP  15
&RNM     SETA  13
&CNM     SETC  '&SA.'
         AGO   .END
.RENT    ANOP
&RENT    SETB  1
         AIF   ('&WORK' EQ '').MG1
&DSECT   SETC  '&WORK'
         SPACE 2
****         ****
*   REENTRANT   *
****         ****
         SPACE 4
&NAME    CSECT
         USING *,15
         STM   14,12,12(13) .          SAVE ENTRY REGISTERS
         LR    &BASE,15
         USING &NAME,&BASE
&RNM     SETA  &BASE
&CNM     SETC  '&NAME.'
         DROP  15
         GETMAIN R,LV=&LV
         ST    13,4(1) .               FORWARD CHAIN SAVEAREAS
         ST    1,8(13) .               BACKWARD CHAIN SAVE AREAS
         LR    13,1
         L     &PARM,4(13)
         LM    15,1,16(&PARM.)
         AGO   .END
.END     ANOP
         AIF   ('&REGS' EQ '').DFRG
&RCT     SETA  &REGS
.DFRG    ANOP
         AIF   (&RCT LT 1).EXRG
         AIF   (&RCT LT 9).RGEN
         MNOTE 9,'MAXIMUM OF 8 BASE REGISTERS  EXCEEDED'
         MEXIT
.RGEN    ANOP
.*       GENERATION OF ADDITIONAL BASE REGISTERS                     *.
         AIF   (&RCT EQ 0).EXRG
&RLST    SETA  &RNM
&RNM     SETA  &RNM-1
&RCT     SETA  &RCT-1
&RDSP    SETA  &RDSP+4096
         LR    &RNM.,&RLST
         LA    &RNM.,2048(&RNM.)
         LA    &RNM.,2048(&RNM.)
         USING &CNM.+&RDSP.,&RNM
         AGO   .RGEN
.EXRG    ANOP
         SPACE 4
         MEXIT
.MG1     ANOP
         MNOTE 9,'NAME FIELD MISSING'
         MEXIT
.MG2     ANOP
         MNOTE 9,'NAME ENTRY MUST BE SEVEN CHARACTERS OR LESS'
         MEXIT
.MG3     ANOP
         MNOTE 9,'INVALID MODE PARAMETER SPECIFIED'
         MEXIT
.MG4     ANOP
         MNOTE 9,'AN EPILOG MACRO MUST APPEAR BETWEEN TWO SUCCESSIVE'
         MNOTE 9,'PROLOG MACRO CALLS'
         MEND
         MACRO
&NAME    EPILOG &RC=
         COPY  GBLPAKA
         COPY  GBLPAKB
         COPY  GBLPAKC
         AIF   (&LIST).LIST
         AGO   .LISTX
.LIST    ANOP
         EJECT
         SPACE 4
*                                                                     *
*                                                                     *
*        E P I L O G    M A C R O                                     *
*                                                                     *
*                                                                     *
         SPACE 4
*                                                                     *
*        FUNCTION:                                                    *
*                   CREATES TERMINAL CODING (EXIT) FOR AN             *
*                   ASSEMBLY LANGUAGE MODULE:                         *
*                        2.   REGISTER RESTORATION                    *
*                        1.   DELETE SAVE AREA (FREEMAIN)             *
*                        3.   RETURN TO CALLER                        *
*                                                                     *
*        FORMAT:                                                      *
*                                                                     *
*              NAME  EPILOG                                           *
*                                                                     *
*              NOTE THAT THIS MACRO MUST BE USED WITH THE             *
*              - PROLOG -  MACRO                                      *
*                                                                     *
*                                                                     *
         MEXIT
.LISTX   ANOP
         AIF   (&PLG).CONT
         MNOTE 9,'PROLOG MACRO MUST PRECEED EPILOG MACRO'
         MEXIT
.CONT    ANOP
&PLG     SETB  0
         AIF   ('&RC' EQ '').STOFF
&RCD     SETB  1
         AGO   .RCDX
.STOFF   ANOP
&RCD     SETB  0
.RCDX    ANOP
         AIF   ('&NAME' EQ '').RTS1
&NAME    EQU   *
.RTS1    ANOP
         AIF   (&RCD).GEN
         AGO   .GENX
.GEN     ANOP
         AIF   ('&RC' EQ 'ALL').GNALL
         AIF   ('&RC' EQ '(15)').GN15
         AIF   ('&RC' EQ '15').GN15
         AIF   ('&RC'(1,1) EQ '(').GNLMR
         AGO   .GENX
.GNLMR   ANOP
         L     11,4(13) .              GET OLD SA
         ST    &RC.,16(11) .           STORE RC
         AGO   .GENX
.GN15    ANOP
         L     11,4(13) .              GET OLD SA
         ST    15,16(11) .             STORE RC
         AGO   .GENX
.GNALL   ANOP
         L     11,4(13) .              GET OLD SA
         STM   15,1,16(11) .           STORE R0,R1,R15
.GENX    ANOP
         AIF   (&RENT).RENT
         AGO   .NORENT
.RENT    ANOP
         LR    1,13
         L     13,4(13)
         FREEMAIN R,LV=&LVNUM,A=(1)
         RETURN (14,12),T
         LTORG
         SPACE 4
****         ****
*   REENTRANT   *
****         ****
         SPACE 2
         AGO   .END
.NORENT  ANOP
         L     13,4(13)
         RETURN (14,12),T
         LTORG
         SPACE 4
         AGO   .END
.END     ANOP
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*         O S    S T A N D A R D    E X I T    L I N K A G E          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         MEND
         MACRO
         EQUREGS &R
         COPY  GBLPAKB
         AIF   (&EQU).END
&EQU     SETB  1
          AIF   (&LIST).LIST
          AGO   .LISTX
.LIST    ANOP
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*                                                                     *
*        S Y S T E M   G L O B A L   S Y M B O L S                    *
*                                                                     *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
.END     MEXIT
.LISTX    ANOP
         EJECT
         SPACE 8
         SPACE 8
         SPACE 4
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*                                                                     *
*              S T A N D A R D    S Y S T E M    S Y M B O L S        *
*                                                                     *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
         SPACE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*                                                                     *
*                                                                     *
*        F L A G   W O R D   B I T   E Q U A T E S                    *
*                                                                     *
*                                                                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 4
BIT00    EQU   1
BIT01    EQU   2
BIT02    EQU   4
BIT03    EQU   8
BIT04    EQU   16
BIT05    EQU   32
BIT06    EQU   64
BIT07    EQU   128
BIT08    EQU   1
BIT09    EQU   2
BIT10    EQU   4
BIT11    EQU   8
BIT12    EQU   16
BIT13    EQU   32
BIT14    EQU   64
BIT15    EQU   128
BIT16    EQU   1
BIT17    EQU   2
BIT18    EQU   4
BIT19    EQU   8
BIT20    EQU   16
BIT21    EQU   32
BIT22    EQU   64
BIT23    EQU   128
BIT24    EQU   1
BIT25    EQU   2
BIT26    EQU   4
BIT27    EQU   8
BIT28    EQU   16
BIT29    EQU   32
BIT30    EQU   64
BIT31    EQU   128
         EJECT
         SPACE 8
*                                                                     *
*                                                                     *
*              R E G I S T E R    U S A G E                           *
*                                                                     *
*                                                                     *
         SPACE 6
         AIF   ('&R' EQ 'SVC').SVC
         AIF   ('&R' EQ 'SPECIAL').SPEC
         AIF   ('&R' EQ 'NORM').NORM
         AIF   ('&R' EQ '').NORM
.MSG1    ANOP
         MNOTE 9,'INVALID USAGE SPECIFICATION '
         MEXIT
.SPEC    ANOP
         MEXIT
.NORM    ANOP
*                                                                     *
*                                                                     *
*                                                                     *
*        R0         PARAMETER REGISTER                                *
*        R1         PARAMETER LIST REGISTER                           *
*        R2         SUBROUTINE LINKAGE REGISTER                       *
*        R3         WORK REGISTER                                     *
*        R4         WORK REGISTER                                     *
*        R5         WORK REGISTER                                     *
*        R6         WORK REGISTER                                     *
*        R7         WORK REGISTER                                     *
*        R8         WORK REGISTER                                     *
*        R9         WORK REGISTER                                     *
*        R10        DSECT/WORK REGISTER                               *
*        R11        BASE/DSECT REGISTER                               *
*        R12        BASE REGISTER                                     *
*        R13        SAVE AREA REGISTE                                 *
*        R14        RETURN LINKAGE REGISTER                           *
*        R15        ENTRY POINT LINKAGE REGISTER                      *
*                                                                     *
*                                                                     *
*                                                                     *
         MEXIT
.SVC     ANOP
*                                                                     *
*                                                                     *
*                                                                     *
*        R0         PARAMETER REGISTER                                *
*        R1         PARAMETER REGISTER                                *
*        R2         WORK REGISTER                                     *
*        R3         C.V.T.  ADDRESS REGISTER                          *
*        R4         T.C.B.  ADDRESS REGISTER                          *
*        R5         S.V.R.B ADDRESS REGISTER                          *
*        R6         WORK REGISTER                                     *
*        R7         WORK REGISTER                                     *
*        R8         WORK REGISTER                                     *
*        R9         WORK REGISTER                                     *
*        R10        WORK REGISTER                                     *
*        R11        WORK REGISTER                                     *
*        R12        BASE ADDRESS REGISTER                             *
*        R13        PROBLEM PROGRAM SAVE AREA REGISTER                *
*        R14        RETURN ADDRESS REGISTER                           *
*        R15        PARAMETER REGISTER                                *
*                                                                     *
*                                                                     *
*                                                                     *
         MEND
