*              /* LEVEL=0002 */
XXBLDLSW TITLE 'PROGRAM TO START OR STOP DYNAMIC BLDL'
XXBLDLSW CSECT
*
**
***      EQUATE REGISTERS AND SET UP DYNAMIC SAVEAREA
**
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
RA       EQU   10
R11      EQU   11
RB       EQU   11
R12      EQU   12
RC       EQU   12
R13      EQU   13
RD       EQU   13
R14      EQU   14
RE       EQU   14
R15      EQU   15
RF       EQU   15
         B     26(RF)                   BRANCH AROUND ID
         DC    AL1(21),CL8'XXBLDLSW'    PROGRAM NAME
         DC    CL8'&SYSDATE'            DATE
         DC    CL5'&SYSTIME'            TIME
         STM   RE,RC,12(RD)             SAVE REGS IN HI SAVE AREA
         LR    RC,RF                    SET UP BASE
         USING XXBLDLSW,RC              OF R12
         USING SAVEAREA,RD              DYNAMIC SAVEAREA BASE + WORK
         LR    R2,R1                    SAVE PARAMS
         LR    RB,RD                    SAVE CALLERS SAVE AREA ADDR
         GETMAIN R,LV=GETSIZE1          GET SOME CORE
         LR    RD,R1                    SET DSECT BASE
         ST    RB,SAVE1+4               SAVE CALLERS SAVE AREA ADDR
         ST    RD,8(RB)                 SAVE OURS IN CALLERS
         EJECT
         L     R1,0(R2)                 POINT TO PARM FIELD
         CLI   2(R1),C'S'               IS IT START ?
         BE    START                    GO SET START
         CLI   2(R1),C'P'               IS IT STOP ?
         BNE   BADPARM                  NO - GO ISSUE MSG
         MVI   SW,X'F0'                 YES - SET STOP
         B     GO
         SPACE 2
START    DS    0H
         MVI   SW,X'E0'                 SET SWITCH START
GO       DS    0H
         L     R2,16                    CVT
         L     R2,X'C8'(R2)             SCVT
         L     R2,X'84'(R2)             SVCTABLE
         LA    R2,X'90'(R2)             BLDL ENTRY
         L     R2,0(R2)                 BLDL CODE STARTS HERE !
         CLC   $OFFSET1(16,R2),$CHECK1  CHECK IT OUT
         BNE   BADCODE                  NO GO HOMETIME
         CLC   $OFFSET2+1(1,R2),SW      CORRECT MODE
         BE    DONEBE4                  NO - ALREADY SET
         TM    SW,X'10'                 IS IT STOP
         BZ    VERSTART                 NO - GO CHECK OUR CODE
         CLC   $OFFSET2(4,R2),$CHECK2P  AND A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         CLC   $OFFSET3(4,R2),$CHECK3P  AND EVEN A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         B     GODIRTY                  GO OVERWRITE
VERSTART DS    0H
         CLC   $OFFSET2(4,R2),$CHECK2S  AND A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
         CLC   $OFFSET3(4,R2),$CHECK3S  AND EVEN A BIT MORE
         BNE   BADCODE                  THIS BIT NO GOOD
GODIRTY  DS    0H
         LA    R15,DIRTY1               OVERWRITE CODE PART ONE
         SVC   241                      TRAMPLE TRAMPLE
         TM    SW,X'10'                 WAS IT STOP ?
         BZ    MSGSTART                 NO - JUST GO ISSUE MSG
         LM    R3,R5,$OFFSET4(R2)       PICK UP R3 = START
*                                               R4 = ENTRY SIZE
*                                               R5 = LAST ENTRY
         LA    R7,($OFFSET4+12)(R2)     GET ADDR OF PRESENT ENTRY
         LR    R6,R5                    SAVE LAST ENTRY PTR
         AR    R5,R4                    POINT TO END OF TABLE
         LA    R4,8                     SIZE OF INCREMENT
         SR    R5,R4                    TABLE END -8
         SR    R1,R1                    ZEROISE R1
         LR    R2,R1                    ALSO R2
         LA    R15,DIRTY2               OVERWRITE CODE PART TWO
         SVC   241                      TRAMPLE TRAMPLE TRAMPLE
         WTO   'XXBLDLSW - DYNAMBLDL STOPPED. TABLE CLEARED'
         EJECT
*
**
***      FREE DYNAMIC SAVEAREA AND RETURN
**
*
RET      DS    0H
         LR    R1,RD                    ADDR OF AREA TO FREE
         L     RD,4(RD)                 HI SAVE AREA ADDR
         FREEMAIN R,LV=GETSIZE1,A=(1)   FREE UP CORE
         LM    RE,RC,12(RD)             RESORE CALLERS REGS
         BR    RE                       RETURN
         EJECT
MSGSTART DS    0H
         WTO   'XXBLDLSW - DYNAMBLDL STARTED.'
         B     RET
         EJECT
*
**
***      INCORRECT PARM FIELD
**
*
BADPARM  DS    0H
         WTO   'XXBLDLSW - INCORRECT PARM FIELD'
         B     RET
         EJECT
*
**
***      MODULE AT WRONG LEVEL
**
*
BADCODE  DS    0H
         WTO   'XXBLDLSW - INCORRECT CODE IN IGC018XX WRONG LEVEL'
         B     RET
         EJECT
*
**
***      FUNCTION REQUESTED ALREADY EXISTS
**
*
DONEBE4  DS    0H
         TM    SW,X'10'                 IS IT STOP ?
         BZ    DONES                    NO - ITS START
         WTO   'XXBLDLSW - STOP REJECTED ALREADY STOPPED'
         B     RET                      HOME
         SPACE 2
DONES    DS    0H
         WTO   'XXBLDLSW - START REJECTED ALREADY STARTED'
         B     RET                      HOME
         EJECT
*
**
***      CODE EXECUTED IN KEY ZERO TO OVERWRITE IGC018XX
**
*
DIRTY1   DS    0H
         MVC   $OFFSET2+1(1,R2),SW      RESET PRE CODE
         MVC   $OFFSET3+1(1,R2),SW      RESET POST CODE
         BR    R14
         SPACE 2
DIRTY2   DS    0H
         STM   R1,R2,0(R3)              ZEROISE 8 BYTES
         BXLE  R3,R4,*-4                UP TO NEXT 8 BYTES
         ST    R6,0(R7)                 STORE LAST ENTRY AS PRESENT
         BR    R14                      BE A GOOD GUY
         EJECT
*
**
***      CONSTANTS THESE NEED UPDATING IF IGC018XX IS MODIFIED.
**
*
$OFFSET1 EQU   X'4'
$OFFSET2 EQU   X'32'
$OFFSET3 EQU   X'11A'
$OFFSET4 EQU   X'318'
$CHECK1  DC    C'IGC018XX01-04-77'
$CHECK2P DC    X'47E090CE'
$CHECK3P DC    X'47E09106'
$CHECK2S DC    X'47F090CE'
$CHECK3S DC    X'47F09106'
         EJECT
*
**
***      DSECT FOR GETMAINED WORK AREA
**
*
SAVEAREA DSECT
SAVE1    DS    18F
SW       DS    X
GETEND1  DS    0D
GETSIZE1 EQU   GETEND1-SAVE1
         END
