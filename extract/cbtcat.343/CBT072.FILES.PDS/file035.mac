*          DATA SET CBT342     AT LEVEL 015 AS OF 05/10/76
*          DATA SET CBT342     AT LEVEL 014 AS OF 11/26/75
IEESE03D CSECT
         LR    R12,R15
         USING IEESE03D,R12
         L     R0,SIZE             LOAD GETMAIN AREA SIZE AND SUBPOOL
         GETMAIN R,LV=(0)
         LR    R13,R1
         USING WORK,R13
         ST    R14,SAVRET          SAVE RETURN ADDR
         MVC   PARM(4),=CL4' '     CLEAR PARM
         MVI   LISTIND,C'L'        SET LIST
         MVI   SCANRET,C' '        SET FOUND
         ST    R2,XSASAVE          SAVE XSA ADDR
         USING XSA,R2
         L     R3,XAL              LOAD LIST POINTER
         LA    R3,0(0,R3)          CLEAR HIGH ORDER
         LTR   R3,R3               PARM EXIST
         BZ    STAE                NO, ALL
         LR    R7,R3               SAVE PARM START
         LA    R4,5                MAX LENGTH
         EJECT
PARM1    CLI   0(R3),C' '          END OF PARM
         BE    PARM2               YES, USE IT
         LA    R3,1(0,R3)          INCR INTO PARM
         BCT   R4,PARM1            CHECK NEXT BYTE
         B     ERROR               PARM TOO LONG
         SPACE
PARM2    LA    R6,4                MAX LENGTH-1
         SR    R6,R4               ACTUAL LENGTH
         BZ    ERROR               ZERO LENGTH
         EX    R6,JOBMOVE          MOVE PARM INFO
         SPACE 3
STAE     STAE  STAEXIT,CT          ISSUE STAE
         B     JOBSCAN
         SPACE 3
JOBMOVE  MVC   PARM(0),0(R7)       MOVE PARM INFO
         EJECT
JOBSCAN  SR    R8,R8               CLEAR ASID
         XC    SCANTYPE(2),SCANTYPE CLEAR TYPE IND
         CLI   PARM,C' '           ALL REQUESTED
         BE    JOBOUTX             SET UP ALL, NO LIST
         CLI   PARM,C'$'           LIST REQUEST
         BNE   JOBSCAN1            NO, ONE JOB ONLY
         CLC   PARM+2(2),=C',L'    LIST REQUESTED
         BE    JOBSCAN0            YES, CONTINUE
         MVI   LISTIND,C' '        TURN OFF LIST
         SPACE
JOBSCAN0 MVI   SCANTYPE+1,X'04'    TSO USERS
         CLI   PARM+1,C'T'         IS REQUEST FOR TSO USERS
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'08'    JOBS
         CLI   PARM+1,C'J'         IS REQUEST FOR JOBS
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'0C'    STC
         CLI   PARM+1,C'S'         IS REQUEST FOR STC
         BE    JOBOUT              YES, GO PROCESS
         MVI   SCANTYPE+1,X'10'    INITS
         CLI   PARM+1,C'I'         IS REQUEST FOR INITS
         BE    JOBOUT              YES, GO PROCESS
         B     ERROR               ERROR
         SPACE
JOBSCAN1 LA    R4,PARM             ASID INPUT ADDR
         LA    R5,4                LOAD NUMBER OF DIGITS
         SPACE
JOBSCAN2 LA    R9,9                SET ADD BYTE
         CLI   0(R4),C'A'          VALID CHAR
         BL    ERROR               NO, ERROR
         CLI   0(R4),C'F'          VALID CHAR
         BNH   JOBSCAN3            YES, GO USE
         CLI   0(R4),C'0'          VALID CHAR
         BL    ERROR               NO, ERROR
         CLI   0(R4),C'9'          VALID CHAR
         BH    ERROR               NO, ERROR
         SR    R9,R9               CLEAR ADD BYTE
         SPACE
JOBSCAN3 IC    R7,0(0,R4)          INSERT ASID BYTE
         SLL   R7,28               SHIFT OUT JUNK
         SRL   R7,28               SHIFT BACK
         AR    R9,R7               ADD TO CALC ACTUAL DIGIT
         SLL   R9,28               SHIFT OVER DIGIT
         SLDL  R8,4                SHIFT DIGIT INTO ACCUMULATOR
         LA    R4,1(0,R4)          NEXT ASID BYTE
         BCT   R5,JOBSCAN2         GET NEXT
         B     JOBOUT
         EJECT
JOBOUTX  MVI   LISTIND,C' '
         SPACE
JOBOUT   MVC   JOBMSG1,JOBLINE1
         MVC   JOBMSG2,JOBLINE2
         LR    R5,R8               LOAD ASID
         LTR   R5,R5               ZERO ASID
         BZ    *+6                 YES, BYPASS ADJUST
         BCTR  R5,0                ADJUST ASID
         SLL   R5,2                MULTIPLY BY 4
         L     R4,16               CVT ADDR
         L     R4,556(0,R4)        ASVT ADDR
         LA    R4,524(R5,R4)       ASCB SLOT ADDR
         B     JOBOUT4
         SPACE
JOBOUT1  L     R5,0(0,R4)          ASCB ADDR
         L     R6,56(0,R5)         CSCB ADDR
         L     R7,144(0,R5)        LOAD OUCB ADDR
         LH    R9,SCANTYPE         LOAD INCR INTO TABLE
         B     *+4(R9)             BR INTO TABLE
         B     JOBOUT2             ALL TYPES
         B     TSO                 TS USERS
         B     JOB                 JOBS
         B     STC                 STARTED TASKS
         B     JOB                 INITS
         SPACE
JOBOUT2  BAL   R11,ASCBFORM        GO FORMAT ASCB INFO
         L     R6,144(0,R5)        OUCB ADDR
         L     R5,56(0,R5)         CSCB ADDR
         BAL   R11,CSCBFORM        GO FORMAT CSCB INFO
         BAL   R11,OUCBFORM        GO FORMAT OUCB INFO
         LA    R1,JOBMSG1          LOAD MSG1 ADDR
         BAL   R11,MSGRTN          GO PRINT MSG
         CLI   LISTIND,C' '        NO LIST REQUIRED
         BE    JOBOUT3             YES, BYPASS MSG2
         LA    R1,JOBMSG2          LOAD MSG2 ADDR
         BAL   R11,MSGRTN          GO PRINT MSG
         SPACE
JOBOUT3  LTR   R8,R8               ONE JOB ONLY
         BNZ   RETURN              YES, RETURN
         SPACE
JOBOUT4  LA    R4,4(0,R4)          INCR INTO ASVT
         CLC   1(3,R4),=F'0'       END OF ASVT
         BE    RETURN              YES, RETURN
         TM    0(R4),X'80'         AVAILABLE ENTRY
         BO    JOBOUT4             YES, CHECK NEXT
         B     JOBOUT1             GO USE IT
         EJECT
TSO      CLI   28(R6),X'01'        TSO USER
         BE    JOBOUT2             YES, USE IT
         B     JOBOUT4
         SPACE 3
JOB      CLI   28(R6),X'03'        JOB INIT
         BE    JOBOUT2             YES, USE IT
         B     JOBOUT4
         SPACE 3
STC      CLI   28(R6),X'00'        MASTER/AUXTM
         BE    JOBOUT2             YES, USE IT
         CLI   28(R6),X'03'        JOB INIT
         BE    JOBOUT4             YES, BYPASS
         TM    18(R7),X'50'        START/MOUNT
         BZ    JOBOUT4             NO, CHECK NEXT
         B     JOBOUT2             YES, USE IT
         EJECT
ASCBFORM LTR   R8,R8               ASID PRESENT
         BZ    ASCBFRM1            NO, CONTINUE
         SR    R14,R14             LOAD
         IC    R14,36(0,R5)
         SLL   R14,8                  ASID
         IC    R14,37(0,R5)
         CR    R14,R8              ASID MATCH
         BNE   JOBOUT4             NO, NO PRINT
         SPACE
ASCBFRM1 UNPK  DOUBLE(5),36(3,R5)
         NC    DOUBLE(4),=4X'0F'
         TR    DOUBLE(4),=C'0123456789ABCDEF'
         MVC   ASID(4),DOUBLE      SET ASID IN MSG
         SR    R9,R9
         IC    R9,43(0,R5)         DPRTY TO MSG
         CVD   R9,DOUBLE
         UNPK  DPRTY(3),DOUBLE+6(2)
         OI    DPRTY+2,X'F0'
         BR    R11
         EJECT
CSCBFORM CLI   28(R5),X'03'        INIT
         BNE   CSCBFRM3            NO, GO HANDLE
         CLI   PARM+1,C'S'         STC REQUEST
         BE    JOBOUT4             YES, EXIT
         LA    R9,0(0,R5)          SAVE CSCB ADDR
         SR    R10,R10             INSERT
         IC    R10,30(0,R5)
         SLL   R10,8               ASID
         IC    R10,31(0,R5)
         SPACE
CSCBFRM1 L     R5,0(0,R5)          NEXT CSCB
         LA    R5,0(0,R5)          CLEAR HIGH ORDER
         LTR   R5,R5               END OF CSCBS
         BNZ   *+10                NO, CONTINUE
         LR    R5,R9               LOAD CSCB ADDR
         B     CSCBFRM2            CONTINUE
         CR    R5,R9               SAME CSCB
         BE    CSCBFRM2            YES, USE IT
         CH    R10,30(0,R5)        SAME ASID
         BNE   CSCBFRM1            NO, CHECK NEXT
         CLI   PARM+1,C'I'         REQUEST FOR INITS
         BE    JOBOUT4             YES, BYPASS
         B     CSCBFRM3
         SPACE
CSCBFRM2 CLI   PARM+1,C'I'         REQUEST FOR INITS
         BNE   JOBOUT4             NO, BYPASS
         SPACE
CSCBFRM3 MVC   JOBNAME(8),8(R5)
         CLC   ASID(4),=C'0001'
         BNE   CSCBFRM4
         MVC   JOBNAME(8),=CL8'MASTER'
         BR    R11
         SPACE
CSCBFRM4 CLC   ASID(4),=C'0002'
         BCR   7,R11
         MVC   JOBNAME(8),=CL8'AUXSTM'
         BR    R11
         EJECT
OUCBFORM LH    R9,58(0,R6)         SWAP IN SIZE
         CVD   R9,DOUBLE
         UNPK  SWAPIN(3),DOUBLE+6(2)
         OI    SWAPIN+2,X'F0'
         LH    R9,56(0,R6)         SWAP OUT SIZE
         CVD   R9,DOUBLE
         UNPK  SWAPOUT(3),DOUBLE+6(2)
         OI    SWAPOUT+2,X'F0'
         LH    R9,72(0,R6)         WKL RECOMMENDATION
         CVD   R9,DOUBLE
         MVI   WKLR,C'+'
         UNPK  WKLR+1(3),DOUBLE+6(2)
         OI    WKLR+3,X'F0'
         TM    DOUBLE+7,X'01'      NEGATIVE
         BZ    *+8
         MVI   WKLR,C'-'
         LH    R9,84(0,R6)         RMA RECOMMENDATION
         CVD   R9,DOUBLE
         MVI   RMAR,C'+'
         UNPK  RMAR+1(3),DOUBLE+6(2)
         OI    RMAR+3,X'F0'
         TM    DOUBLE+7,X'01'      NEGATIVE
         BZ    *+8
         MVI   RMAR,C'-'
         LA    R9,16(0,R6)         OUCB FLAGS BEGIN
         LA    R10,QFL             OUTPUT FLAGS BEGIN
         LA    R7,6                NUMBER OF FLAG BYTES
         SPACE
OUCBFRM1 UNPK  0(3,R10),0(2,R9)    UNPACK A FLAG BYTE
         NC    0(2,R10),=4X'0F'
         TR    0(2,R10),=C'0123456789ABCDEF'
         MVI   2(R10),C')'            AND TRANSLATE IT
         LA    R9,1(0,R9)          NEXT FLAG BYTE
         LA    R10,6(0,R10)        NEXT OUTPUT AREA
         BCT   R7,OUCBFRM1         GET NEXT
         UNPK  SWP(5),30(3,R6)     SWP CNT
         NC    SWP(4),=4X'0F'
         TR    SWP(4),=C'0123456789ABCDEF'
         MVI   SWP+4,C')'
         UNPK  PFL(3),71(2,R6)     OUCBPFL
         NC    PFL(2),=4X'0F'
         TR    PFL(2),=C'0123456789ABCDEF'
         MVI   PFL+2,C')'
         BR    R11
         EJECT
         USING *,R15
STAEXIT  L     R0,=A(STAERTRY)     LOAD RETRY ADDRESS
         LA    R15,4
         BR    R14
         DROP  R15
         USING *,R15
STAERTRY L     R12,=A(IEESE03D)    LOAD ENTRY POINT ADDR
         DROP  R15
         LA    R1,STAEMSG          ADDRESSING ERROR
         L     R2,XSASAVE          RELOAD XSA ADDR
         LA    R11,RETURN          LOAD RET ADDR
         SPACE 3
MSGRTN   MVI   SCANRET,C'P'
         SR    R0,R0
         IC    R0,XAU              INSERT MCS ID
         SVC   35                  ISSUE WTO
         BR    R11
         SPACE 3
ERROR    LA    R11,RETURN          LOAD RET ADDR
         LA    R1,ERRMSG           PARM ERROR
         B     MSGRTN              GO ISSUE WTO
         SPACE 3
RETURN   CLI   SCANRET,C' '        ANY FOUND
         BE    NOTFOUND            NO, TELL OPERATOR
         L     R0,SIZE             LOAD GETMAIN SIZE AND SUBPOOL
         LR    R1,R13              LOAD GETMAIN AREA ADDR
         L     R14,SAVRET          RETURN ADDR
         FREEMAIN R,LV=(0),A=(1)
         SR    R15,R15
         BR    R14
         SPACE 3
NOTFOUND LA    R11,RETURN
         LA    R1,NFNDMSG
         B     MSGRTN
         EJECT
         LTORG
         DS    0F
SIZE     DC    X'F1',AL3(WORKEND-WORKSTRT)
         SPACE 3
JOBLINE1 DC    X'003A0100'
         DC    CL9' '
         DC    C'(    ) '
         DC    C'DP(   ) '
         DC    C'SW(   /   ) '
         DC    C'WR(    ) '
         DC    C'RR(    ) '
         SPACE 3
JOBLINE2 DC    X'003A0100'
         DC    C' '
         DC    C'Q(  ) S(  ) Y(  ) '
         DC    C'A(  ) T(  ) E(  ) '
         DC    C'SWAP(    )  P(  )'
         SPACE 3
         DS    0F
STAEMSG  DC    X'00360100'
         DC    CL50'ERROR ENCOUNTERED IN CONTROL BLOCKS, RETRY COMMAND'
         SPACE 3
         DS    0F
ERRMSG   DC    X'00360100'
         DC    CL50'PARAMETER ERROR'
         SPACE 3
         DS    0F
NFNDMSG  DC    X'00360100'
         DC    CL50'REQUESTED TYPE OR ASID NOT FOUND'
         EJECT
WORK     DSECT
WORKSTRT DS    0D
SAVRET   DS    18F
DOUBLE   DS    2F
XSASAVE  DS    F
PARM     DS    F
SCANTYPE DS    H
LISTIND  DS    C
SCANRET  DS    C
         SPACE 3
         DS    0F
JOBMSG1  DS    0CL58
         DS    F
JOBNAME  DS    CL8
         DS    CL2
ASID     DS    CL4
         DS    CL5
DPRTY    DS    CL3
         DS    CL5
SWAPIN   DS    CL3
         DS    C
SWAPOUT  DS    CL3
         DS    CL5
WKLR     DS    CL4
         DS    CL5
RMAR     DS    CL4
         DS    CL2
         SPACE 3
         DS    0F
JOBMSG2  DS    0CL58
         DS    F
         DS    CL3
QFL      DS    CL2
         DS    CL4
SFL      DS    CL2
         DS    CL4
YFL      DS    CL2
         DS    CL4
AFL      DS    CL2
         DS    CL4
TFL      DS    CL2
         DS    CL4
EFL      DS    CL2
         DS    CL4
         DS    CL3
SWP      DS    CL4
         DS    CL5
PFL      DS    CL2
         DS    C
         SPACE
WORKEND  DS    0F
         EJECT
XSA      DSECT
XAP      DS    F
XAD      DS    F
XAX      DS    D
XAE      DS    0C
XAR      DS    F
XAN      DS    0C
XAL      DS    F
XAV      DS    D
XAS      DS    D
XAU      DS    C
         DS    C
XAJ      DS    H
         DS    F
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
