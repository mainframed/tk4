*          DATA SET CBT276     AT LEVEL 001 AS OF 02/25/75
         MACRO
&NAME    SAVEALL    &RENT,&REG=3,&EQU=YES
         GBLB  &SAVRENT
         GBLB  &REGSW
         GBLB  &TIME
         GBLC  &SAVNDX
&SAVNDX  SETC  '&SYSNDX'
&NAME    CSECT
         AIF   ('&SAVRENT' EQ '1').NOTFREE
         AIF   ('&REGSW' EQ '1').NOEQU
         AIF   ('&EQU' NE 'YES').NOEQU
&REGSW   SETB  1
         SPACE 2
***********************************************************************
********           DEFINITION OF GENERAL REGISTERS             ********
***********************************************************************
R0       EQU   0    GENERAL REGISTER ZERO
R1       EQU   1    GENERAL REGISTER ONE
R2       EQU   2    GENERAL REGISTER TWO
R3       EQU   3    GENERAL REGISTER THREE
R4       EQU   4    GENERAL REGISTER FOUR
R5       EQU   5    GENERAL REGISTER FIVE
R6       EQU   6    GENERAL REGISTER SIX
R7       EQU   7    GENERAL REGISTER SEVEN
R8       EQU   8    GENERAL REGISTER EIGHT
R9       EQU   9    GENERAL REGISTER NINE
R10      EQU   10   GENERAL REGISTER TEN
R11      EQU   11   GENERAL REGISTER ELEVEN
R12      EQU   12   GENERAL REGISTER TWELVE
R13      EQU   13   GENERAL REGISTER THIRTEEN
R14      EQU   14   GENERAL REGISTER FOURTEEN
R15      EQU   15   GENERAL REGISTER FIFTEEN
         SPACE 1
RA       EQU   10   GENERAL REGISTER TEN
RB       EQU   11   GENERAL REGISTER ELEVEN
RC       EQU   12   GENERAL REGISTER TWELVE
RD       EQU   13   GENERAL REGISTER THIRTEEN
RE       EQU   14   GENERAL REGISTER FOURTEEN
RF       EQU   15   GENERAL REGISTER FIFTEEN
***********************************************************************
********             END OF REGISTER DEFINITIONS               ********
***********************************************************************
         SPACE 2
.NOEQU   ANOP
         SAVE  (14,12),,*
         AIF   ('&REG' EQ '').MESS
         BALR  &REG(1),0
         AIF   (N'&REG EQ 1).A
         AIF   (N'&REG EQ 2).B
         AIF   (N'&REG EQ 3).C
         AIF   (N'&REG EQ 4).D
         AIF   (N'&REG EQ 5).E
         MNOTE *****,'EXCESSIVE BASE REGISTERS -- 5 ASSUMED *****'
         AGO   .E
.MESS    MNOTE 12,'***** NO BASE REGISTER SPECIFIED *****'
         MEXIT
.NOTFREE MNOTE 12,'***** ENDALL NOT ISSUED PRIOR TO NEW SAVEALL *****'
         MEXIT
.E       USING *,&REG(1),&REG(2),&REG(3),&REG(4),&REG(5)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         L     &REG(5),=A(Q&SYSNDX+16384)
         AGO   .END
.D       USING *,&REG(1),&REG(2),&REG(3),&REG(4)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         L     &REG(4),=A(Q&SYSNDX+12288)
         AGO   .END
.C       USING *,&REG(1),&REG(2),&REG(3)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTERS
         L     &REG(3),=A(Q&SYSNDX+8192)
         AGO   .END
.B       USING *,&REG(1),&REG(2)
Q&SYSNDX L     &REG(2),=A(Q&SYSNDX+4096)     LOAD BASE REGISTER
         AGO   .END
.A       USING *,&REG(1)
.END     ANOP
         AIF   ('&RENT' NE 'RENT').NORENT
&SAVRENT SETB  1
         GETMAIN    R,LV=72        GET STORAGE FOR SAVE AREA
         ST    13,4(1)             SET UP FORWARD CHAIN
         ST    1,8(13)             SET UP BACKWARD CHAIN
         L     0,20(0,13)          RESET REGISTER 0
         L     1,24(0,13)          RESET REGISTER 1
         L     13,8(0,13)          LOAD SAVE AREA ADDRESS
         AGO   .RENT
.NORENT  ANOP
&TIME    SETB  1
         ST    13,SAVE&SYSNDX+4    SET UP FORWARD CHAIN
         LA    1,SAVE&SYSNDX
         ST    1,8(0,13)           SET UP BACKWARD CHAIN
         L     1,24(0,13)          RESET REGISTER 1
         LA    13,SAVE&SYSNDX
         B     J&SYSNDX           BRANCH AROUND BASE REGISTER CONST
SAVE&SYSNDX DC 18F'0'
.RENT    ANOP
         LTORG
J&SYSNDX DS    0H
         EJECT
         MEND
         MACRO
&NAME    ENDALL &CODE=
         GBLB  &TIME
         GBLB  &SAVRENT
         GBLC  &SAVNDX
         AIF   ('&CODE' GT '4095').MESS1
&NAME    DS    0H
         AIF   (NOT &SAVRENT).NOTRENT
&SAVRENT SETB  0
         LR    1,13                LOAD SAVE AREA ADDRESS
         L     13,4(0,13)          RE-LOAD REGISTER 13
         LA    0,72                LOAD NUMBER OF BYTES TO BE FREED
         FREEMAIN   R,LV=(0),A=(1) FREE SAVE AREA STORAGE
         AGO   .RENT
.NOTRENT ANOP
         AIF   (NOT &TIME).NOSAVE
&TIME    SETB  0
         L     13,SAVE&SAVNDX+4    RE-LOAD REGISTER 13
.RENT    ANOP
         AIF   ('&CODE' EQ '(15)').ENDIT
         AIF   ('&CODE' EQ '').COND1
         LA    15,&CODE           LOAD CODE TO REG 15
         AGO   .ENDIT
.MESS1   MNOTE 12,'***** RETURN CODE PASSED GREATER THAN 4095 *****'
         MEXIT
.NOSAVE  MNOTE 12,'***** SAVEALL NOT ISSUED PRIOR TO ENDALL *****'
         MEXIT
.COND1   LA    15,0               LOAD ZERO (NO CODE) TO REG 15
.ENDIT   ANOP
         RETURN     (14,12),T,RC=(15)
         MEND
       MACRO
       DISCLAIM
       EJECT
*********************************************************************
*                                                                    *
*                      D I S C L A I M E R                           *
*                                                                    *
*                                                                    *
*   THE PROGRAMS HAVE BEEN USED SUCCESSFULLY BY CBT AND TO THE BEST  *
*   OF OUR KNOWLEDGE THE SYSTEM IS OPERATIONAL, HOWEVER NO WARRANTY  *
*   IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND  *
*   NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR  *
*   INDIRECTLY  CAUSED BY THE USE OF THE PROGRAMS.  IT IS THE USERS  *
*   RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL  *
*   SUPPLIED.                                                        *
*                                                                    *
*   CBT DOES NOT GUARANTEE TO KEEP ANY MATERIAL PROVIDED UP TO DATE  *
*   NOR DOES IT GUARANTEE TO PROVIDE ANY CORRECTIONS OR  EXTENSIONS  *
*   DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE  *
*   FUTURE BY CBT ITSELF.                                            *
*                                                                    *
*                                                                    *
*                                                                    *
*********************************************************************
       EJECT
       MEND
*          DATA SET CBT225     AT LEVEL 002 AS OF 11/19/74
*          DATA SET CBT225     AT LEVEL 001 AS OF 09/09/74
*
*    THE PROGRAM WILL READ THE OUTPUT FROM AMBLIST AND PRODUCE A LIST
*    OF ALL CSECTS FOR EACH LOAD MODULE IN THE LIBRARY AGAINIST WHICH
*    THE AMBLIST WAS RUN. THE OUTPUT OF THIS PROGRAM WILL THEN BE
*    BE SORTED VARIOUS WAYS.
*
*    INPUT
*     SYSUT2   80 BYTED RECORDS. BYTES 1-44 THE DSNAME
*              OF THE LIBRARY BEING AMBLISTED.
*
*     SYSPRINT THE OUTPUT OF AN AMBLIST PROGRAM
*
*    OUTPUT
*     SYSUT3   OUTPUT TO BE SORTED. 80 BYTE RECORD TO BE SORTED
*              BYTES 01-08    CSECT NAME
*              BYTES 09-11    BLANK
*              BYTES 12-19    MODULE NAME
*              BYTES 20-22    BLANK
*              BYTES 23-66    LIBRARY NAME
*              BYTES 67-69    BLANK
*              BYTES 70-80    RESERVED
*
*
CBT225   SAVEALL  REG(2)         SAVE EVERYTHING BASE IS REGISTER 2
         DISCLAIM                WASH OUR HANDS OF EVERYTHING
         OPEN  (SYSUT2,(INPUT))  OPEN THE INPUT FILE
         GET   SYSUT2,INAREA     READ IN THE LIBRARY DSNAME
         CLC   BLANKS,INAREA     IS THE CARD BLANK
         BE    ENDSYSIN          YES THE CARD IS BLANK, END IT
         MVC   OLIB,INAREA       MOVE LIB DSN TO THE OUTPUT
         CLOSE SYSUT2            CLOSE SYSUT2 AND CONTINUE
         OPEN  (SYSPRINT,(INPUT)) OPEN THE AMBLIST FILE
         OPEN  (SYSUT3,(OUTPUT)) OPEN THE OUTPUT FILE
READ     GET   SYSPRINT,INAREA   READ THE FILE IN
         CLC   INAREA+44(24),LISTIDR IS IT AN IDR HEADER
         BNE  READ               NO IT IS NOT
CONT     MVC   OMOD,INAREA+68    YES IT IS MOVE      NAME TO OUTPUT
RDAGAIN  GET   SYSPRINT,INAREA   LOOK FOR THE CSECT HEADER
         CLC   INAREA+44(24),LISTIDR IS IT AN IDR HEADER
         BE    CONT              YES IT IS AN IDR HEADER
         CLC   INAREA+11(24),CSECTRAN  IS IT A CSECT HEADER
         BNE   RDAGAIN           GO READ AGAIN
READ2    GET   SYSPRINT,INAREA   LOOK FOR THE SCECT NAMES
         CLC   INAREA+1(4),HYPHENS DID WE FINISH ALL THE CSECTS
         BE    READ              YES WE DID
         CLC   INAREA+11(8),BLANKS NO NAME
         BE    READ2             YES
         CLC   INAREA+11(8),=C'$PRIVATE' PRIVATECSECT YES-NO
         BE    READ2             YES - BYPASS THIS CSECT GET A NEW REC
         MVC   OCSECT,INAREA+11  MOVE CSECT NAME TO THE OUTPUT RECORD
         PUT   SYSUT3,OUTPUT     WRITE THE OUTPUT RECORD
         B     READ2             LET US CONTINUE
EOJ      CLOSE SYSPRINT          CLOSE THE INPUT FILE
         CLOSE SYSUT3            CLOSE THE OUTPUT FILE
ENDSYSIN ENDALL
         EJECT
SYSUT2   DCB   DSORG=PS,DDNAME=SYSUT2,MACRF=GM,EODAD=ENDSYSIN
         EJECT
SYSPRINT DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=GM,EODAD=EOJ
         EJECT
SYSUT3   DCB   DSORG=PS,DDNAME=SYSUT3,MACRF=PM,LRECL=80,RECFM=FB
         EJECT
LISTIDR  DC    CL24'LISTIDR FOR LOAD MODULE '
CSECTRAN DC    CL24'CSECT        TRANSLATOR '
HYPHENS  DC    CL4'----'
INAREA   DC    CL133' '          INPUT READ AREA
BLANKS   DC    CL44' '           A CONSTANT OF 44 BLANKS
OUTPUT   DS    0CL80             OUTPUT RECORD
OCSECT   DC    CL8' '            CSECT NAME
         DC    CL3' '            BLANK AREA
OMOD     DC    CL8' '            MODULE NAME
         DC    CL3' '            BLANK AREA
OLIB     DC    CL44' '           LIBRARY NAME
         DC    CL3' '            BLANK AREA
ORES     DC    CL11' '           RESERVED AREA
         END
