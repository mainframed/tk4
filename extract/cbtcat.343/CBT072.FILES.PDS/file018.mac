        /* DATA SET SMP004     AT LEVEL 001 AS OF 01/15/75    */
 /*   S M P X R E F   ---   C D S   C R O S S   R E F E R E N C E   */
0SMPXREF :
    PROCEDURE
       OPTIONS (MAIN)
       REORDER ;
0    DECLARE GRAGAR                ENTRY RETURNS( CHARACTER(8) );
0    DECLARE SORTOUT               FILE RECORD INPUT ;
0    DECLARE OLD_MOD               CHARACTER (8) STATIC INIT( ' ' ) ,
             1 RECORD              STATIC ,
               2 NEW_MOD           CHARACTER (8) ,
               2 LOADMOD           CHARACTER (8) ,
               2 IOPPIND_1         CHARACTER (1) ,
               2 IOPPIND_2         CHARACTER (1) ,
               2 FLAGS             BIT (8) ,
               2 PTF_DATE          FIXED DECIMAL (5) ,
             COL                   FIXED BINARY (15) STATIC ,
             PAGE                  FIXED DECIMAL (4) STATIC INIT( 0 ) ,
             WHICH                 FIXED BINARY (15) STATIC INIT( 1 ) ,
             TODAYS_DATE           CHARACTER (8) STATIC ,
             TIME_OF_DAY           CHARACTER (8) STATIC ,
           ( TIME, DATE,
             SUBSTR, MOD )         BUILTIN,
             MACRO                 CHARACTER (1) DEFINED MACRO_B ,
             MODULE                CHARACTER (1) DEFINED MODULE_B ,
             S_ZAP                 CHARACTER (1) DEFINED S_ZAP_B ,
             X_ZAP                 CHARACTER (1) DEFINED X_ZAP_B ,
             LMOD                  CHARACTER (1) DEFINED LMOD_B ,
             SUP_PTF               CHARACTER (1) DEFINED SUP_PTF_B ,
             SUP_PTF_B             BIT (8) STATIC INIT( '00000100'B ) ,
             LMOD_B                BIT (8) STATIC INIT( '00000001'B ) ,
             MACRO_B               BIT (8) STATIC INIT( '00000010'B ) ,
             MODULE_B              BIT (8) STATIC INIT( '00000011'B ) ,
             S_ZAP_B               BIT (8) STATIC INIT( '00000010'B ) ,
             X_ZAP_B               BIT (8) STATIC INIT( '00000011'B ) ;
1 GRAGAR: PROCEDURE (  JULIAN  )  RETURNS( CHARACTER(8) ) ;
0    DECLARE DAY                   FIXED BINARY (15) STATIC ,
             MONTH                 FIXED BINARY (15) STATIC ,
             YEAR                  FIXED BINARY (15) STATIC ,
             DAYS_PER_MONTH (0:12) FIXED BINARY (15) STATIC
                                   INIT(   0,  31,  60,  91, 121,
                                         152, 182, 213, 244, 274,
                                         305, 335, 366 ) ,
             I                     FIXED BINARY (15) STATIC ,
             JULIAN                FIXED DECIMAL (5) ,
             DATE                  CHARACTER (8) STATIC
                                   INIT( 'MM/DD/YY' ) ;
0    YEAR= JULIAN / 1000 ;
     DAY= MOD( JULIAN, 1000 ) ;
     MONTH= 1 ;
     I= (  MOD( 1900+YEAR, 4 ) ^= 0  ) & (  DAY > 59  ) ;
     DO WHILE (  DAY > DAYS_PER_MONTH(MONTH) - I  ) ;
0       MONTH= MONTH + 1 ;
0    END ;
0    DAY= DAY - DAYS_PER_MONTH(MONTH-1) + I ;
     PUT STRING( DATE )
         EDIT( MONTH, '/', DAY, '/', YEAR )
             ( P'99', A, P'99', A, P'99' ) ;
0    RETURN (  DATE  ) ;
0 END  GRAGAR ;
1    ON ENDPAGE( SYSPRINT )  BEGIN ;
0          PAGE= PAGE + 1 ;
           PUT PAGE
               EDIT( 'DATE', TODAYS_DATE, 'TIME', TIME_OF_DAY,
                     'CROSS-REFERENCE LISTING OF SMP CDS DATASET',
                     'PAGE', PAGE )
                   ( COLUMN(5), A, X(1), A, X(5), A, X(1), A, X(10), A,
                     COLUMN(111), A, F(5) ) ;
           IF  WHICH = 1
              THEN  DO ;
0                PUT SKIP( 2 )
                     EDIT( 'LOADMOD', (45)'-', '  MODULES  ',
                           (45)'-' )
                          ( COLUMN(5), A, COLUMN(20), 3 A ) ;
                 PUT SKIP( 2 ) ;
0             END ;
              ELSE  DO ;
0                PUT SKIP( 2 ) ;
                 IF  WHICH = 2
                    THEN  PUT EDIT( 'MACROS' ) ( COLUMN(5), A ) ;
                    ELSE  DO ;
0                      IF  WHICH = 3
                          THEN  PUT EDIT( 'MODULES' )
                                        ( COLUMN(5), A ) ;
                          ELSE  PUT EDIT( 'SUPERSEDING','PTF NO.' )
                                              ( COLUMN(5), A,
                                                COLUMN(5), A ) ;
0                   END ;
0                PUT EDIT( (45)'-', '  PTF NO.  ', (45)'-' )
                         ( COLUMN(20), 3 A ) ;
                 PUT SKIP( 2 ) ;
0             END ;
0       END ;
1    TIME_OF_DAY= TIME ;
     TIME_OF_DAY= SUBSTR( TIME_OF_DAY, 1, 2 ) ×× '.' ××
                  SUBSTR( TIME_OF_DAY, 3, 2 ) ×× '.' ××
                  SUBSTR( TIME_OF_DAY, 5, 2 ) ;
     TODAYS_DATE= DATE ;
     TODAYS_DATE= SUBSTR( TODAYS_DATE, 3, 2 ) ×× '/' ××
                  SUBSTR( TODAYS_DATE, 5, 2 ) ×× '/' ××
                  SUBSTR( TODAYS_DATE, 1, 2 ) ;
0    SIGNAL ENDPAGE( SYSPRINT ) ;
0    ON ENDFILE( SORTOUT )  GOTO FINI ;
0    DO WHILE(  '1'B  ) ;
0       READ FILE( SORTOUT ) INTO( RECORD ) ;
        IF  ( WHICH <= 3 )  &  ( SUP_PTF = IOPPIND_1 )
           THEN  DO ;
0             WHICH= 4 ;
              PAGE= 0 ;
              SIGNAL ENDPAGE( SYSPRINT ) ;
0          END ;
0       IF  ( WHICH <= 2 )  &  ( MODULE = IOPPIND_1 )
           THEN  DO ;
0             WHICH= 3 ;
              PAGE= 0 ;
              SIGNAL ENDPAGE( SYSPRINT ) ;
0          END ;
0       IF  ( WHICH = 1 )  &  ( MACRO = IOPPIND_1 )
           THEN  DO ;
0             WHICH= 2 ;
              PAGE= 0 ;
              SIGNAL ENDPAGE( SYSPRINT ) ;
0          END ;
0       IF  OLD_MOD ^= LOADMOD
           THEN  DO ;
0             COL= 20 ;
              OLD_MOD= LOADMOD ;
              PUT EDIT( LOADMOD ) ( COLUMN(5), A ) SKIP( 1 ) ;
0          END ;
0       IF  COL > 110
           THEN  COL= 20 ;
        IF  WHICH = 3
           THEN  DO ;
0             IF  IOPPIND_2 = LMOD
                 THEN  PUT EDIT( 'MOD' ) ( COLUMN( COL ), A ) ;
              IF  IOPPIND_2 = S_ZAP
                 THEN  PUT EDIT( 'S/ZAP' ) ( COLUMN( COL ), A ) ;
              IF  IOPPIND_2 = X_ZAP
                 THEN  PUT EDIT( 'X/ZAP' ) ( COLUMN( COL ), A ) ;
              IF IOPPIND_2 ^= LMOD & IOPPIND_2 ^= S_ZAP &
                 IOPPIND_2 ^= X_ZAP
                 THEN   PUT EDIT( 'MACRO' ) ( COLUMN( COL ), A ) ;
0             PUT EDIT( SUBSTR( NEW_MOD, 2, 7 ), GRAGAR( PTF_DATE ) )
                      ( COLUMN( COL+7 ), A, COLUMN( COL+16 ), A ) ;
              COL= COL + 28 ;
0          END ;
0          ELSE  DO ;
0             IF  WHICH = 1
                 THEN  DO ;
0                   PUT EDIT( NEW_MOD ) ( COLUMN( COL ), A ) ;
                    COL= COL + 10 ;
0                END ;
0                ELSE  DO ;
0                   PUT EDIT( SUBSTR( NEW_MOD, 2, 7 ),
                              GRAGAR( PTF_DATE ) )
                            ( COLUMN( COL ), A, COLUMN( COL+9 ), A ) ;
                    COL= COL + 20 ;
0                END ;
0          END ;
0    END ;
0 FINI:
    END
 SMPXREF ;
