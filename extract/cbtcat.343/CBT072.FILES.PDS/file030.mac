*          DATA SET CBT320     AT LEVEL 002 AS OF 10/20/75
 TITLE 'FREEALL ALIAS(FA) FREE ALL DYNAMICALLY ALLOCATED DATASETS(TSO)'
***********************************************************************
*       FREEALL  ALIAS FA          (NO OPERANDS EXPECTED)             *
*                                                                     *
*       THIS COMMAND PROCESSOR IS USED TO FREE ALL DYNAMICALLY        *
*       ALLOCATED DATA SET WHICH HAVE BEEN ALLOCATED BY A GIVEN TSO   *
*       USER.                                                         *
*                                                                     *
*       IT WILL FREE ALL DATA SET WHICH:                              *
*         1. HAVE BEEN DYNAMICALLY ALLOCATED                          *
*         2. ARE NOT CURRENTLY IN USE.                                *
*         3. ARE NOT CURRENTLY OPEN.                                  *
*                                                                     *
*                                                                     *
*      BASIC LOGIC:                                                   *
*      GET CVT ADDRESS;GET TCB ADDRESS;GET CURRENT JSCB ADDRESS;      *
*      GET POINTER TO QDB; GET POINTER TO DSAB CHAIN FROM QDB;        *
*      FOLLOW DSAB CHAIN LOOKING FOR CANDIDATES TO FREE; WHEN FOUND   *
*      BUILD DAIR (IKJDAP18) PARAMETER LIST AND ISSUE LINK TO IKJDAIR *
*      WHO FREES THE DATA SET; WHEN AT END OF CHAIN TERMINATE EXECUTIO*
*                                                                     *
*                                                                     *
*  THE ASSEMBLY OF THIS MODULE REQUIRES SYS1.MACLIB AND SYS1.AMODGEN  *
*                                                                     *
***********************************************************************
FREEALL  CSECT
         EQUATE
         STM   R14,R12,12(R13)     SAVE REGS
         BALR  R12,0
         USING *,R12
         B     AROUND
         DC    CL8'FREEALL'   MODULE NAME
*        DC    CL8'&SYSDATE'  DATE MODULE COMPILED
*        DC    CL6'&SYSTIME'  TIME MODULE COMPILED
AROUND   EQU   *
         LR    R8,R1
         USING CPPL,R8
         GETMAIN R,LV=LDYNAMIC
         LR    R11,R1
         USING WORKAREA,R11
         LA    R9,SAVEAREA
         ST    R13,SAVEAREA+4
         ST    R9,8(,R13)
         LR    R13,R9
         L     R1,CPPLUPT
         L     R2,CPPLECT
         LA    R3,ECB
         L     R4,CPPLPSCB
         LA    R5,DAPB
         DROP  R8
         STM   R1,R5,DAPL
         XC    ECB,ECB
         EJECT
         L     R2,CVTPTR      CVT ADDR
         USING CVTMAP,R2
         L     R2,CVTTCBP     TCB-TCB ADDR   (TCBHEAD)
         L     R2,4(,R2)      TCB ADDR       (CURRENT TCB)
         USING TCB,R2
         L     R2,TCBJSCB     JOB STEP CONTROL BLOCK ADDR
         USING IEZJSCB,R2
         L     R2,JSCDSABQ    LOAD ADDRESS OF QDB FOR DSAB CHAIN
         CLC   8(4,R2),=F'0'  ZERO DATA SETS FOR THIS USER
         BE    RETURN         IF HE DONT HAVE ANY WE CANT FREE EM
         L     R2,12(R2)      LOAD ADDRESS OF FIRST DSAB
         USING DSAB,R2
INLOOP   EQU   *
         TM    DSABFLG1,DSABDALC   DATA SET DYNAMICALLY ALLOCATED
         BZ    NOFREE0        NO, GO LOOK AT NEXT ONE
         TM    DSABFLG1,DSABNUSE   DATA SET IN USE
         BO    NOFREE1        YES DONT FREE IT
         MVI   FMB1,C' '
         MVI   FMB2,C' '
         MVI   FMB3,C' '
         L     R3,DSABTIOT    LOAD ADDRESS OF TIOT ENTRY
         USING TIOELNGH,R3    SET ADDRESSABILITY TO TIOT ENTRY
         MVC   FMDDN,TIOEDDNM MOVE IN DDNAME FROM TIOT
         L     R4,TIOEJFCB    LOAD ADDRESS OF JFCB
         SRL   R4,8           SHIFT OFF UNWANTED BYTE
         LA    R4,16(R4)      SKIP OVER PREFIX
         USING INFMJFCB,R4
         MVC   FMDSN,JFCBDSNM  MOVE IN DSNAME
         CLC   JFCBELNM,=CL8' '    MEMBER NAME PRESENT
         BE    NOMBR
         LA    R5,FMDSN       GET START OF DSN
         LA    R6,34          DSN LENGTH - (XXXXXXXX)
MBRLOOP1 EQU   *
         CLI   0(R5),C' '     BLANK FOUND
         BE    MBRBLANK       GOT FIRST BLANK
         LA    R5,1(R5)       INCREMENT ADDRESS
         BCT   R6,MBRLOOP1    GO DO IT AGAIN
MBRBLANK EQU   *
         MVI   0(R5),C'('     MOVE IN L PAREN
         MVC   1(8,R5),JFCBELNM  MOVE IN MEMBER NAME
         LA    R5,2(R5)       SKIP OVER ( AND FIRST CHAR OF MEMBER
         LA    R6,7           MAX LENGTH OF MEMBER NAME
MBRLOOP2 EQU   *
         CLI   0(R5),C' '     BLANK FOUND
         BE    MBREND         GOT BLANK AFTER MEMBER NAME
         LA    R5,1(R5)       INCREMENT INDEX
         BCT   R6,MBRLOOP2    GO FIND END
MBREND   EQU   *
         MVI   0(R5),C')'
NOMBR    EQU   *
         DROP  R4
         MVC   FMVOL,=CL6' '    BLANK VOL SER
         L     R4,TIOEFSRT-1    LOAD UCB ADDRESS
         LA    R4,0(R4)       CLEAR HIGH ORDER BYTE
         LTR   R4,R4          ZERO ?
         BE    NOVOL
         USING UCBOB,R4
         CLI   UCBTBYT3,UCB3DACC
         BNE   NOVOL
         MVC   FMVOL,UCBVOLI  MOVE IN VOL SER
         DROP  R4
NOVOL    EQU   *
         MVC   DAPB(DAPB18L),DAPB18C INITIALIZE DAPB
         LA    R8,DAPB        MAKE DAIR 18 ADDRESSABLE
         USING DAPB18,R8
         MVC   DA18DDN,TIOEDDNM MOVE IN DDNAME FROM TIOT
         LA    R1,DAPL        ADDRESS OF DAPL
         LINK  EP=IKJDAIR     FREE DSE
         B     *+4(R15)       TEST RC
         B     FREEOK         0 RC - OK
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
         B     ERROR
*  ABOVE TO BE REPLACED BY ERROR MESSAGES
FREEOK   EQU   *
         MVC   FMTEXT,=CL17'SUCESSFULLY FREED'
         LA    R1,FMMSG       LOAD ADDRESS OF MESSAGE TO TERMINAL
         TPUT  (1),78
         B     INCRE
NOFREE0  EQU   *
NOFREE1  EQU   *
NOFREE2  EQU   *
INCRE    EQU   *
         L     R2,DSABFCHN    LOAD POINTER TO NEST DSAB ENTRY
         LTR   R2,R2          END OF CHAIN
         BNE   INLOOP         NO GO DO THE REST OF EM
         DROP  R2,R3
RETURN   LR    R1,R13         DYNAMIC AREA ADDR IN R1
         LA    R0,LDYNAMIC    SIZE OF AREA
         L     R13,4(,R13)    PREV SAVE AREA
         LA    R1,0(,R1)      CLEAR HI ORDER
         SVC   10             FREEMAIN
         LM    14,12,12(13)   RESTORE REGS
         LA    15,0           RETURN CODE
         MVI   12(13),X'FF'   INDICATE RETURN
         BR    R14
ERROR    DS    0H
         LR    R3,R15
         TPUT  MSG,50,HOLD,BREAKIN
         ABEND 400,DUMP
MSG      DC    CL50'ERROR FROM DAIR, PLEASE SEND DUMP TO SOFTWARE'
         EJECT
DAPB18C  DS    0F
         DC    X'0018'        DA18CD
         DC    H'0'           DA18FLG
         DC    H'0'           DA18DARC
         DC    H'0'           DA18CTRC
         DC    A(0)           DA18PDSN
         DC    CL8' '         DA18DDN
         DC    CL8' '         DA18MNM
         DC    CL2' '         DA18SCLS
         DC    X'00'          DA18DSP2
         DC    X'10'          DA18CTL  -  RLSE PERM ALLOC
         DC    CL8' '         DA18JBNM
DAPB18L  EQU   *-DAPB18C      LENGTH
         EJECT
WORKAREA DSECT
SAVEAREA DS    18F
DAPB     DS    0F
         ORG   DAPB+DAPB18L
DAPL     DS     5F
ECB      DS     F
FMMSG    DS    0CL78           MESSAGE TO USER
FMDDN    DS    CL8             DDNAME
FMB1     DS    CL1
FMDSN    DS    CL44            DSNAME
FMB2     DS    CL1
FMVOL    DS    CL6             VOL SER (IF DASD)
FMB3     DS    CL1
FMTEXT   DS    CL17            ACTION CODE
         DS    0D
LDYNAMIC EQU   *-WORKAREA
         EJECT
         IKJDAP18
         EJECT
         IKJCPPL
         EJECT
         CVT
         EJECT
         IKJTCB
         EJECT
         IEZJSCB
         EJECT
DSAB     IHADSAB
         EJECT
         DSECT
         IEFUCBOB LIST=YES
         EJECT
         DSECT
         IEFJFCBN LIST=YES
         EJECT
TIOT     DSECT
         IEFTIOT1
         END   FREEALL
