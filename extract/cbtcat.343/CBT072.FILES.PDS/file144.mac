*          DATA SET ANBDISPJ   AT LEVEL 003 AS OF 30/06/76
DISPS    XSTART STAE=YES
         LA    RB2,DWD
         USING DWD,RB2
         L     R5,0(R1)       GET TDCB
         ST    R5,TDCBADDR    SAVE IT
         BAL   R9,WRITE
LOOP     DS    0H
RW0      EQU   0
RW1      EQU   1
RB2      EQU   2
RW3      EQU   3
RW4      EQU   4
RW5      EQU   5
RW6      EQU   6
RW7      EQU   7
RW8      EQU   8
RW9      EQU   9
RW10     EQU   10
RW11     EQU   11
RW12     EQU   12
RW13     EQU   13
RW14     EQU   14
RW15     EQU   15
*
**  SET UP INTERVAL AND TIME
*
         TIME  BIN
         LR    RW1,RW0            SAVE TIME
         S     RW0,LAST           GET INTERVAL
         LTR   RW0,RW0            TEST...
         BP    VALID              ...AND BRANCH IF POSITIVE
         LA    RW0,1              LOAD DEFAULT
VALID    EQU   *
         ST    RW0,INTVAL         STORE INTERVAL
         ST    RW1,LAST           ...AND LAST TIME
*
**  INSERT TOD INTO SCREEN
*
         TIME DEC
         ST    RW0,TOD               STORE TOD
         MVC   PACK(4),TOD           INSERT SIGN
         MVC   HEADING(12),=X'F021204B20204B20204B2020' MASK
         ED    HEADING(12),PACK       ...AND EDIT
         MVI   HEADING,X'40'          BLANK OUT FILL CHAR
         LA    RW4,BUFFER           SET POINTER
         LA    RW5,(WARNLINE-BUFFER) SIZE OF AREA
         XR    RW0,RW0               FROM ADDR NULL
         XR    RW1,RW1               FROM LEN NULL
         ICM   RW1,8,=C' '          FILL CHAR BLANK
         MVCL  RW4,RW0               BLANK SCREEN
*        FORMAT TAPE USAGE
         MVC   WARNLINE(55),=CL55'TAPE 0-OL,1-OL,2-OL,3-OL,4-OL,5-OL,6-O
               OL,7-OL,8-OL,9-OL'
         L     R1,16          CVT
         L     R1,40(R1)      UCB LOOKUP
         XR    R14,R14        CLEAR
TAPELOOP DS    0H             LOOK FOR TAPES
         LA    R1,2(R1)       NEXT UCB (1ST NOT A TAPE ANYWAY)
         CLC   =X'FFFF',0(R1) END
         BE    TAPEEXIT       YES
         ICM   R14,3,0(R1)    UCB
         LTR   R14,R14        HOLE
         BZ    TAPELOOP       YES
         TM    18(R14),X'80'  TAPE
         BZ    TAPELOOP       NO
         TM    3(R14),X'08'   ALLOCATED
         BZ    TAPELOOP       NO
         L     R15,20(R14)    UCB EXT
         LH    R0,14(R15)     ASID
         CVD   R0,DWD         DEC
         IC    R0,5(R14)      DEV #
         N     R0,=F'15'
         MH    R0,=H'5'       PRINT ELEMENT
         LA    R15,WARNLINE+7 STRT OF 190
         AR    R15,R0         + INDEX
         UNPK  0(2,R15),DWD+6(2)
         OI    1(R15),C'0'    SIGN
         B     TAPELOOP
TAPEEXIT DS    0H
         LA    RW4,BUFFER           RESET R4 AFTER MVCL
*
**  RW4 POINTS TO SCREEN BUFFER
**  RW3 WILL POINT TO ASCB Q IN ASVT
**  RW5 WILL POINT TO CURRENT ASCB
**  RW6 WILL POINT TO CURRENT OUCB
*
         L     RW3,16           CVT POINTER
         L     RW3,556(RW3)     ASVT POINTER
         LA    RW3,524(RW3)     ASVT Q
         L     RW5,VALUE        PICK UP START ASID...
         SLL   RW5,2            ...AND SHIFT TO INDEX
         AR    RW3,RW5          INTO ASVTQ
         LA    RW5,20           MAX LIMIT FOR SCREEN...
*
NXTONE   EQU   *
*
         ST    RW5,COUNTER      ...INTO STORE
         L     RW5,0(RW3)       ASCB ADDRESS
         LA    RW5,0(RW5)       REMOVE TOP BYTE
         LTR   RW5,RW5          TEST FOR END OF Q
         BZ    REPORT           YES,GIVE REPORT
         TM    0(RW3),X'80'     IN USE?
         BZ    INCPTR           YES,BRANCH
NOASCB   EQU   *
         LA    RW3,4(RW3)       INCREMENT POINTER IN ASVT
         L     RW5,COUNTER      PICK UP COUNTER
         B     NXTONE           TRY AGAIN
INCPTR   EQU   *
         CLC   0(4,RW5),=C'ASCB'         ASCB?
         BNE   NOASCB
         L     RW6,144(RW5)              OUCB ADDRESS
         CLC   0(4,RW6),=C'OUCB'         OUCB?
         BNE   NOASCB
*
**  GET JOBNAME
*
         L     RW7,172(RW5)           BATCH JOBNAME POINTER
         LTR   RW7,RW7                VALID?
         BZ    SML                    NO,BRANCH
         MVC   0(8,RW4),0(RW7)     JOBNAME
*                        JOBNAME IS AT CSCB + 8
         MVC   9(8,RW4),64-8(RW7)  STEPNAME
         MVC   18(8,RW4),32-8(RW7) PROCSTEP
         B     NONAME
SML      DS    0H                  START/MOUNT/LOGON
         L     RW7,176(RW5)           START/MOUNT/LOGON POINTER
         LTR   RW7,RW7                VALID?
         BZ    NONAME                 NO,IGNORE
         MVC   0(8,RW4),0(RW7)        MOVE IN JOBNAME
         L     RW7,X'38'(RW5)      CSCB
         LTR   RW7,RW7             THERE
         BZ    NONAME              NO
         MVC   9(8,RW4),16(RW7)    STEPNAME
         MVC   18(8,RW4),32(RW7)   PROCNAME
NONAME   EQU   *
*
**  ELAPSED TIME
*
         L     RW8,16              CVT
         L     RW8,X'25C'(RW8)     RMCT
         L     RW8,X'7C'(RW8)      CURR TIME
         S     RW8,X'48'(RW6)       - TRAN. START
         SRDL  RW8,32+10           SHIFT + DIVIDE BY 1024
         D     RW8,=F'3600'        GET HOUR
         CVD   RW9,DWD             PACK
         UNPK  27(2,RW4),DWD+6(2)
         OI    28(RW4),C'0'
         MVI   29(RW4),C':'
         SRDL  RW8,32              SHIFT
         A     RW9,=F'30'          ROUND
         D     RW8,=F'60'          GET MIN
         CVD   RW9,DWD             PACKED
         UNPK  30(2,RW4),DWD+6(2)  DISPLAY
         OI    31(RW4),C'0'
*
**  TEST FOR NS/R IN OR OUT
*
         TM    17(RW6),X'80'               NS/R?
         BZ    NOTNS                       NO,BRANCH
         MVC   33(2,RW4),=C'NS'
         B     NONSWP
NOTNS    EQU   *
         MVC   33(2,RW4),=C'IN'            SET TO IN
         TM    16(RW6),X'04'               OUT?
         BZ    NONSWP                      NOO,BRANCH
         MVC   33(2,RW4),=C'OT'
         LA    RW3,4(RW3)          DO NOT DISPLAY OUT OF CORE USERS
         B     NXTONE              SKIP THIS TURKEY
NONSWP   EQU   *
*
**  CONVERT ASID
*
         LH    RW7,36(RW5)          PICK UP ASID
         CVD   RW7,DWD              CONVERT TO DECIMAL...
         UNPK  36(2,RW4),DWD+6(2)
         OI    37(RW4),C'0'
*
**  CONVERT DISPATCHING PRIORITY
*
         SR    RW7,RW7
         IC    RW7,43(RW5)         INSERT DPRTY
         CVD   RW7,DWD             CONVERT TO DECIMAL...
         MVC   39(3,RW4),EDIT+2       ...AND INSERT EDIT PATTERN
         ED    38(4,RW4),DWD+6       EDIT
*
**  GET SWAP COUNT
*
         LH    RW7,38(RW6)           GET SWAP COUNT
         CVD   RW7,DWD               CONVERT TO DECIMAL...
         MVC   43(3,RW4),EDIT+2       ...AND INSERT EDIT PATTERN
         ED    42(4,RW4),DWD+6       EDIT
         TM    17(RW6),X'80'         NS/R?
         BZ    OKSWP
         MVC   43(3,RW4),INVAL+2
OKSWP    EQU   *
*
**  GET TIME LEFT
*
         SR    RW8,RW8
         L     RW9,80(RW5)        STEP TIME
         S     RW9,64(RW5)
         S     RW9,200(RW5)       SRB TIME
         SLDL  RW8,4
         M     RW8,CONVERT        CONVERT TO TRUE SECS
         LTR   RW9,RW9            TEST FRACTION
         BNM   NORND2
         LA    RW8,1(RW8)         ROUND UP
NORND2   EQU   *
         CVD   RW8,DWD            CONVERT TO DECIMAL...
         MVC   53(5,RW4),EDIT             ...AND INSERT EDIT PATTERN
         ED    52(6,RW4),DWD+5          EDIT
         TM    103(RW5),X'80'         VALID TIMING?
         BZ    OKTIME
         MVC   53(5,RW4),INVAL
OKTIME   EQU   *
*
**  GET TIME GONE
*
         SR    RW8,RW8
         L     RW9,64(RW5)        STEP TIME
         A     RW9,200(RW5)       ADD SRB TIME
         SLDL  RW8,4
         M     RW8,CONVERT        CONVERT TO TRUE SECS
         LTR   RW9,RW9            TEST FRACTION
         BNM   NORND3
         LA    RW8,1(RW8)         ROUND UP
NORND3  EQU   *
         CVD   RW8,DWD            CONVERT TO DECIMAL...
         MVC   47(5,RW4),EDIT               ...INSERT EDIT PATTERN
         ED    46(6,RW4),DWD+5            EDIT
*
**  GET ASID AS INDEX
*
         ICM   RW9,15,65(RW5)      STEP TIME
         ICM   RW8,15,201(RW5)     SRB TIME
         AR    RW8,RW9
         LR    RW9,RW8
         LH    RW7,36(RW5)         GET ASID...
         SLL   RW7,2              ...AND SHIFT FOR INDEX
         S     RW9,TIME(RW7)      SUBTRACT LAST VALUE
         LTR   RW9,RW9            TEST THAT POSITIVE
         BP    NOTNEW             BRANCH IF OK
         SR    RW9,RW9
NOTNEW   EQU   *
         ST    RW8,TIME(RW7)      STORE NEW VALUE
         SR    RW8,RW8
         M     RW8,=A(4096/100)   MULT BY 4096,DIV BY 100 = SEC
         SR    RW8,RW8
         D     RW8,INTVAL         GET PERCENTAGE
         SLL   RW8,1              MULTIPLY REMAINDER
         C     RW8,INTVAL
         BL    NORND4
         LA    RW9,1(RW9)         ROUND UP
NORND4   EQU   *
         CVD   RW9,DWD            CONVERT TO DECIMAL...
         UNPK  59(2,RW4),DWD+6(2)
         OI    60(RW4),C'0'
*
**  GET I/O REQUESTS
*
         LH    RW8,40(RW5)              NO OF I/O REQUESTS
         CVD   RW8,DWD                  CONVERT TO DECIMAL
         MVC   62(5,RW4),EDIT            ...INSERT EDIT PATTERN
         ED    61(6,RW4),DWD+5          EDIT
         LR    RW9,RW8                  SAVE VALUE
         S     RW9,IO(RW7)              GET CHANGE
         ST    RW8,IO(RW7)              AND STORE NEW VALUE
         MVC   72(4,RW4),=CL4' '
         LTR   RW9,RW9                  CHECK THAT POSITIVE
         BP    OKIO                     YES BRANCH
         SR    RW9,RW9
         CLC   59(2,RW4),=C'05'    USING ONLY CPU
         BNH   OKIO                NOT RUNNING
         MVC   72(4,RW4),=C'LOOP' POSSIBLE CPU LOOP
OKIO     EQU   *
         SR    RW8,RW8
         MH    RW9,=H'100'              SCALE UP
         D     RW8,INTVAL               GET RATE
         SLL   RW8,1                     MULTIPLY REMAINDER
         C     RW8,INTVAL
         BL    NORND5
         LA    RW9,1(RW9)               ROUND UP
NORND5   EQU   *
         CVD   RW9,DWD                  CONVERT TO DECIMAL
         MVC   68(3,RW4),EDIT+2         ...INSERT EDIT PATTERN
         ED    67(4,RW4),DWD+6        EDIT
**       FORMAT # OF TAPES USED
         ZAP   DWD,=P'0'
         LA    R15,WARNLINE+7 GET TAPE LINE
         LA    R14,10         MAX # OF TAPES
TAPEASID DS    0H
         CLC   36(RW4),0(R15) ASIDS MATCH
         BNE   TAPEBUMP       NO
         AP    DWD,=P'1'
TAPEBUMP DS    0H
         LA    R15,5(R15)     NEXT TAPE
         BCT   R14,TAPEASID   NEXT
         CP    DWD,=P'0'      ANY HITS
         BE    TAPESKIP
         UNPK  72(2,RW4),DWD+6(2)
         OI    73(RW4),C'0'
TAPESKIP DS    0H
*
**  INCREMENT POINTERS
*
         LA    RW3,4(RW3)              NEXT ASVT ENTRY
         LA    RW4,79(RW4)             NEXT SCREEN ENTRY
         L     RW5,COUNTER             PICK UP COUNTER
         BCT   RW5,NXTONE             GO BACK FOR MORE
REPORT   DS    0H
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=HEADING
         STIMER WAIT,BINTVL==F'1500'
         L     R1,TDCBADDR
         CLI   TDCBAID-TDCB(R1),AIDPA1
         BNE   LOOP
*
**  RETURN
*
RETURN   EQU   *
         L     13,4(13)
         LM    14,12,12(13)        RESTORE REGISTERS
         XR    R15,R15             RC=0
         BR    14
WRITE    DS    0H
         TRMIO IOCB,FORMAT=SCR1,IMAGE=HEADING
         L     R1,TDCBADDR
         MVI   TDCBAID-TDCB(R1),0
         BR    R9
*
**  LITERALS AND CONSTANTS
*
         LTORG
*
SAVE     DS    18F
SCR1     SFMT
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 79,ALPHA,INTEN=HI,CURSOR=AFTER
         SFEND
FNDLST   DS    2F
         DC    A(KEYLEN)
KEYAD    DS    F
         DC    A(THERE)
         DC    A(VALUE)
KEYLEN   DS    F
THERE    DS    F
CONVERT  DC    F'281474976'
TDCBADDR DS    F
VALUE    DC    F'1'
KEY1     DC    CL8'A='
KEY2     DC    CL8'ASID='
KEY3     DC    CL8'RESET'
KEY4     DC    CL8'R'
HEADING  DC    X'F021204B20204B20204B2020'
         DC    CL14'AL''S MONITOR',C'REAL',18C' ',C'CPU TIME'
         DC     6C' ',C'I/O REQ',10C' '
         DC    C'JOBNAME  STEPNAME PROCSTEP HH:MM ST ID PTY SWP'
         DC    C' USED  LEFT RTE TOTAL RTE',8C' '
BUFFER   DC    20CL79' '
WARNLINE DC    CL79' '
INPTLINE DC    CL79' '
DWD      DS    D
PKAREA   DS    D
TOD      DS    F
PACK     DC    X'000000000C'
EDIT     DC    X'2020202120'
INVAL    DC    C'    -'
COUNTER  DC    F'0'
LAST     DC    F'0'
INTVAL   DC    F'0'
TIME     DC    255F'0'
IO       DC    255F'0'
SERVICE  DC    255F'0'
IOCB     IOCB
         TDCB
         END
