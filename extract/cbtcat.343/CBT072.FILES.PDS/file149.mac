./  CHANGE NAME=$JQE
JQEDNAME DS    CL8                 NAME FROM CNTL/BEF/AFT.     MBJ20026
JQERESRT DS    BL3                 RESOURCE ROUTING.           MBJ20026
JQEFLAG3 DS    BL1                 MORE JOBQ FLAGS             MBJ20026
QUEDNAME EQU   JQEDNAME-JQEDSECT   JOB DEP/CNTL NAME           MBJ20026
QUERESRT EQU   JQERESRT-JQEDSECT   RESOURCE ROUTING.           MBJ20026
QUEFLAG3 EQU   JQEFLAG3-JQEDSECT   MORE JOBQ FLAGS             MBJ20026
         SPACE 2                                               MBJ20026
*                                  JQEFLAG3                    MBJ20026
         SPACE 2                                               MBJ20026
QUEAFT   EQU   X'08'               AFTER CARD USED             MBJ20026
QUEEXC   EQU   X'04'               CNTL,EXC   USED             MBJ20026
QUECNTL  EQU   X'02'               CNTL,SHR   USED             MBJ20026
QUEBEF   EQU   X'01'               BEFORE CARD USED            MBJ20026
./       CHANGE NAME=$QSE
QSERESTB DS    BL3                RESOURCE ROUTING TABLE       MBJ20026
         DS    0D                 BOUNDARY ALIGNMENT           MBJ20026
QSENEXT  EQU   *                  BEGIN NEXT QSE               MBJ20026
QSELNGTH EQU   *-QSEDSECT         LENGTH OF QSE CSECT          MBJ20026
./      CHANGE NAME=$RDRWORK
RQUEDNAM DS    CL8                 DEPENDENT/CNTL NAME         MBJ20026
RQUERESR DS    BL3                 RESOURCE ROUTING BITS       MBJ20026
RQUEFLG3 DS    BL1                 MORE JQE FLAGS              MBJ20026
./       CHANGE NAME=HASPCOMM
         BAL   R0,COFJRES          ADD RESOURCE ROUTINGS       MBJ20026
         BAL   R0,COFJRES          ADD RESOURCE ROUTINGS       MBJ20026
************************************************************** MBJ20026
*        ADD RESOURCE ROUTINGS TO JOB MESSAGE.               * MBJ20026
************************************************************** MBJ20026
COFJRES  STM   WA,WC,COMWREGS      SAVE REGISTERS WA,WB,WC     MBJ20026
         LA    R15,COFJOB+L'COMMAND-9  MAXIMUM MESSAGE LENGTH  MBJ20026
         SR    R14,R14             CLEAR R14                   MBJ20026
         IC    R14,COFLNGTH        GET MESSAGE LENGTH          MBJ20026
         LA    R14,COFJOB+1(R14)   AND POINT TO MESSAGE END    MBJ20026
         LA    WA,$RESTAB          GET RESOURCE TABLE          MBJ20026
         SR    WB,WB               CLEAR WB                    MBJ20026
         ICM   WB,14,JQERESRT      GET JOBS RESOURCE ROUTINGS  MBJ20026
         BZ    COFJRES6            IF NONE, MAKE QUICK EXIT    MBJ20026
COFJRES1 DS    0H        CC INDICATES RESOURCE STATUS          MBJ20026
         BP    COFJRES4            HIGH BIT 0-NOT ROUTED TO IT MBJ20026
         BZ    COFJRES5            ALL BITS 0-NO MORE ROUTINGS MBJ20026
         MVC   0(8,R14),0(WA)      MOVE RESOURCE NAME INTO MSG MBJ20026
         LA    R14,7(,R14)         POINT TO LAST CHAR OF NAME  MBJ20026
COFJRES2 CLI   0(R14),C' '         Q. BLANK                    MBJ20026
         BNE   COFJRES3            A. NO-POLISH IT UP          MBJ20026
         BCT   R14,COFJRES2        ELSE BACK UP AND TRY AGAIN  MBJ20026
COFJRES3 DS    0H                  SEPARATE RESOURCES BY COMMA MBJ20026
         LA    R14,2(,R14)         AND BUMP TO NEXT AREA       MBJ20026
         CR    R14,R15             Q. NEAR END OF MESSAGE AREA MBJ20026
         BNH   COFJRES4            A. NO-CONTINUE BUILDING     MBJ20026
         LA    R15,COFJOB          GET MSG START               MBJ20026
         SR    R14,R15             CALCULATE MSG LENGTH        MBJ20026
         STC   R14,COFLNGTH        AND STORE FOR WTOER         MBJ20026
         LR    R15,R0              SAVE RETURN ADDRESS IN R15  MBJ20026
         BAL   R14,COFJWTO         AND ISSUE MESSAGE           MBJ20026
*  NOTE- ONE BAL TO COFJWTO MAY RESULT IN TWO WTO'S            MBJ20026
*        WHERE SUBSEQUENT LINES BEGIN AT COFQUE.               MBJ20026
         LR    R0,R15              RESTORE RETURN ADDRESS      MBJ20026
         LA    R15,COFJOB+L'COMMAND-9  MAXIMUM MESSAGE LENGTH  MBJ20026
         LA    R14,COFQUE          START OF SUBSEQUENT MSGS    MBJ20026
COFJRES4 LA    WA,$RESLEN(,WA)     BUMP TO NEXT RESOURCE NAME  MBJ20026
         SLL   WB,1                AND JOB'S NEXT ROUTING BIT  MBJ20026
         LTR   WB,WB               SET CONDITION CODE.         MBJ20026
         B     COFJRES1            GO CHECK THIS RESOURCE      MBJ20026
COFJRES5 LA    R15,COFQUE          GET REAL START OF 2ND MSGS  MBJ20026
         CR    R14,R15             Q. 2ND LINE WITH NO NAMES   MBJ20026
         BE    COFJRES6            A. YES-NO WTO               MBJ20026
         BCTR  R14,0               BACK UP ONE                 MBJ20026
         MVI   0(R14),C' '         AND PUT BLANK-SHOULD BE ',' MBJ20026
         LA    R15,COFJOB-1        GET MESSAGE START-1         MBJ20026
         SR    R14,R15             AND CALCULATE LENGTH        MBJ20026
         STC   R14,COFLNGTH        STORE FOR WTO               MBJ20026
COFJRES6 LR    R15,R0              GET RETURN ADDRESS          MBJ20026
         LM    WA,WC,COMWREGS      RESTORE WORK REGS WA,WB,WC  MBJ20026
         BR    R15                 AND RETURN TO CALLER        MBJ20026
         SPACE 2                                               MBJ20026
         TITLE 'HASP COMMAND PROCESSOR - SYSTEM RESOURCE TABLE' BJ20026
         $RESTABL                 GENERATE JES2 RESOURCE TABLE MBJ20026
         SPACE 5                                               MBJ20026
************************************************************** MBJ20026
*        TABLE FOR TRANSLATION OF JQETYPE TO OFFSET TO       * MBJ20026
*        JOB QUEUE HEADER (HERE USED TO TRANSLATE TO AN      * MBJ20026
*        OFFSET TO A COUNTER AREA)                           * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
$QINDEX  DC    AL1(2)              $PURGE                      MBJ20026
         DC    AL1(4)              $HARDCPY                    MBJ20026
         DC    AL1(6,0)            $OUTPUT                     MBJ20026
         DC    AL1(8,0,0,0)        $RECEIVE                    MBJ20026
         DC    AL1(10),7AL1(0)     $SETUP                      MBJ20026
         DC    AL1(12),15AL1(0)    $XMIT                       MBJ20026
         DC    AL1(14),31AL1(0)    $INPUT                      MBJ20026
         DC    AL1(16)             $XEQ (CONVERSION)           MBJ20026
         DC    AL1(24,26,28,30,32,34,36,38,40),6AL1(0)    XEQ A-I 20026
         DC    AL1(20-20)                                 STC     20026
         DC    AL1(42,44,46,48,50,52,54,56,58),6AL1(0)    XEQ I-R 20026
         DC    AL1(22-22,0)                               TSU     20026
         DC    AL1(60,62,64,66,68,70,72,74),6AL1(0)       XEQ S-Z 20026
         DC    AL1(76,78,80,82,84,86,88,90,92,94),6AL1(0) XEQ 0-9 20026
         DC    AL1(16),127AL1(0)                          $DUMMY  20026
         SPACE 5                                               MBJ20026
         $COMTAB DB,HASPCJB5,REJECT=COMR   DISPLAY SYS BACKLOG MBJ20026
         $COMTAB DC,HASPCRES,REJECT=COMR    DISPLAY CONFLICTS  MBJ20026
         $COMTAB DR,HASPCRES,REJECT=COMR    DISPLAY RESOURCES  MBJ20026
COMTBLQ  $COMTAB QA,HASPCRES,REJECT=COMR+COMS    ADD RESOURCE  MBJ20026
         $COMTAB QD,HASPCRES,REJECT=COMR+COMS    DROP RESOURCE MBJ20026
         $COMTAB QJ,HASPCJB2,REJECT=COMR    INFO JOB JCL FILE. MBJ20026
         DC    C'Q',AL3(COMTBLQ)   ENTRY FOR 'Q' VERBS         MBJ20026
HASPCJB1 $COMGRUP AA,AQ,DA,DN,DQ,HA,HQ  JOB QUEUE COMMANDS     MBJ20026
./       DELETE SEQ1=K1894500,SEQ2=K2209000                    MBJ20026
***************************************************************MBJ20026
*                                                             *MBJ20026
*        $DN -- DISPLAY INFORMATION ON EACH QUEUED JOB.       *MBJ20026
*                                                             *MBJ20026
*        SEE $DQ FOR FORMAT OF OPERANDS.                      *MBJ20026
*                                                             *MBJ20026
*        NOTE: $DN,ALL IS NOT ALLOWED... IT WILL RECIEVE      *MBJ20026
*              ONLY A SPOOL UTILIZATION MESSAGE AS RESPONSE.  *MBJ20026
*                                                             *MBJ20026
***************************************************************MBJ20026
         SPACE 1                                               MBJ20026
CDN      NULL  ,                                               MBJ20026
         MVI   CDNFLAG,CDNBIT      REMEMBER $DN                MBJ20026
         B     CDQBREAK            AND JOIN WITH $DQ           MBJ20026
         SPACE 5                                               MBJ20026
***************************************************************MBJ20026
*                                                             *MBJ20026
*        $DQ -- DISPLAY COUNT OF QUEUED JOBS.                 *MBJ20026
*                                                             *MBJ20026
*        FORMAT OF OPERANDS (SAME FOR $DN) -                  *MBJ20026
*                                                             *MBJ20026
*        $DX,SID,N1-N2,QTYPE                                  *MBJ20026
*          SID - JOBS WITH AFFINITY FOR THIS SYSTEM           *MBJ20026
*                'ANY' - AFFINITY FOR ANY SYSTEM.             *MBJ20026
*                '68#X'- AFFINITY FOR THE SPECIFIC SYSTEM.    *MBJ20026
*          N1  - RJE #                                        *MBJ20026
*          N2  - RJE # (2ND OPTIONAL) - TOGETHER WITH N1 FORM *MBJ20026
*                A RANGE OF RJE #S. ALL JOBS WITH OUTPUT      *MBJ20026
*                ROUTED TO THESE RJE'S WITH BE PROCESSED.     *MBJ20026
*          QTYPE - SPECIFIC JOB STATUS QUEUE ENTRIES.         *MBJ20026
*              ALL  - ALL JOBS IN ALL QUEUES - $DQ ONLY       *MBJ20026
*              CON  - ALL JOBS IN CONVERSION QUEUE.           *MBJ20026
*             *XEQ  - ALL JOBS AWAITING EXECUTION.            *MBJ20026
*             *RES  - ALL JOBS AWAITING EXECUTION, WITH       *MBJ20026
*                     SOME SPECIFIC RESOURCE ROUTING.         *MBJ20026
*              HELD - JOBS AWAITING EXECUTION OR CONVERSION   *MBJ20026
*                     WHICH ARE HELD FOR ANY REASON.          *MBJ20026
*              OUT  - ALL JOBS AWAITING THE OUTPUT PROCESSOR. *MBJ20026
*              PPU  - ALL JOBS AWAITING PRINT/PUNCH.          *MBJ20026
*                                                             *MBJ20026
*           * - A SPECIFIC JOB CLASS MAY BE REQUESTED,        *MBJ20026
*               OR STC OR TSU.                                *MBJ20026
*                                                             *MBJ20026
*        NOTE- $DQ WITH NO OPERANDS IS SAME AS $DQ,ALL        *MBJ20026
*                                                             *MBJ20026
***************************************************************MBJ20026
         SPACE 1                                               MBJ20026
CDQ      NULL  ,                                               MBJ20026
         MVI   CDQFLAG,CDQBIT      REMEMBER $DQ                MBJ20026
         USING CDQDSECT,WB         $DQ ADDRESSABILITY OF CRESAREA 20026
         EJECT                                                 MBJ20026
CDQBREAK NULL  ,                   SCAN OPERANDS               MBJ20026
         LR    R0,WD               SAVE OPERAND REGISTER       MBJ20026
         L     WA,=A(CRESAREA)     POINT TO WORKAREA           MBJ20026
         LA    WB,CDQLEN           SET LENGTH TO CLEAR         MBJ20026
         SR    WD,WD               SET LENGTH2 AND PAD TO X'00' BJ20026
         MVCL  WA,WC               CLEAR WORKAREA TO X'00'     MBJ20026
         LR    WD,R0               RESTORE FIRST OPERAND REGISTER 20026
         MVI   CDQCPU,QUESYSAF     SET DEFAULT SYSTEM ID 'ANY' MBJ20026
         MVI   CDQRMLO,0           SET DEFAULT LOW REMOTE      MBJ20026
         LH    WA,$NUMRJE         GET NUMBER OF RMTS           MBJ20026
         STCM  WA,1,CDQRMHI       GET DEFAULT HIGH REMOTE      MBJ20026
         TM    COMFLAG,CMBFLAGR   Q. REMOTE ISSUER            MBJ20026
         BZ    CDQLOCAL            A. NO  - DEFAULTS OK        MBJ20026
         IC    WA,COMUCM           A. YES - GET HIS ROUTCODE   MBJ20026
         STC   WA,CDQRMLO          REMOTE ISSUER - SET LIMIT   MBJ20026
         STC   WA,CDQRMHI          FOR ONLY HIS JOBS           MBJ20026
CDQLOCAL NULL  ,                                               MBJ20026
         LA    WA,HCTDSECT         POINT TO HCT                MBJ20026
         L     WA,($RATABLE-HCTDSECT)(,WA) POINT TO RAT ORIGIN MBJ20026
         USING RATDSECT,WA         ADDRESS THE RAT             MBJ20026
         LA    R10,1               START WITH REMOTE 1         MBJ20026
         LA   WC,4                 START WITH OFFSET = 4       MBJ20026
         L     WB,=A(CRESAREA)     POINT TO WORKAREA           MBJ20026
CDQBLDRM LH    R0,RATROUTE         GET REMOTE ROUTCODE         MBJ20026
         STH   R0,CDQRMTAB+2(WC)   SAVE IN TABLE               MBJ20026
         STH   R10,CDQRMTAB(WC)    PUT REMOTE # IN TOO         MBJ20026
         LA    WC,4(,WC)           BUMP TO NEXT TABLE ENTRY    MBJ20026
         LH    R0,$NUMRJE         GET NUMBER OF REMOTES        MBJ20026
         CR    R10,R0             Q. ANY MORE REMOTES          MBJ20026
         BNL   CDQBUILT            A. NO - TABLE IS BUILT      MBJ20026
         LA    R10,1(,R10)         NEXT RJE NUMBER             MBJ20026
         LA    WA,RATEND           POINT TO NEXT RAT           MBJ20026
         B     CDQBLDRM            AND LOOP                    MBJ20026
CDQBUILT MVC   CDQRMEND,=F'-1'     SET END OF TABLE            MBJ20026
         XC    CDQHEADS,CDQHEADS   SET HI/LO JQE HEADERS TO 0  MBJ20026
         BXH   WD,WE,CDQNOPER      NEXT OPERAND (IF ANY)       MBJ20026
         L     R1,0(,WD)           GET NEXT OPERAND ADDRESS    MBJ20026
         CLC   0(3,R1),=C'ANY'     Q. REQUEST FOR ANY          MBJ20026
         BE    CDQOPER2            A. YES - SET AND GET NEXT   MBJ20026
         L     WA,$QSE1            POINT TO FIRST QSE          MBJ20026
         USING QSEDSECT,WA         ADDRESS THE QSE             MBJ20026
CDQCKSID CLC   QSESID,0(R1)        Q. THIS SYS REQUESTED       MBJ20026
         BE    CDQSYSID            A. YES - GO SET AFFINITY    MBJ20026
         TM    QSEFLAGS,QSELAST    Q. WAS THIS THE LAST QSE    MBJ20026
         BO    CDQCKRMT            A. NO - MAY BE A REMOTE REQ MBJ20026
         LA    WA,QSENEXT          POINT TO NEXT QSE           MBJ20026
         B     CDQCKSID            AND LOOP                    MBJ20026
CDQSYSID MVC   CDQCPU,QSESIAFF     SET REQUESTED AFFINITIES    MBJ20026
         DROP  WA                  DROP QSE ADDRESSABILITY     MBJ20026
CDQOPER2 OI    CDQFLAG,CDQSPEC     REMEMBER SPECIAL REQUEST    MBJ20026
         BXH   WD,WE,CDQNOPER      GET NEXT OPERAND (IF ANY)   MBJ20026
CDQCKRMT NULL  ,                   CHECK FOR REMOTE REQUESTS   MBJ20026
        $CFCVB POINTER=(WD),NOK=CDQOPER3,NUM=2                 MBJ20026
         TM    COMFLAG,CMBFLAGR    Q. LOCAL REQUESOR           MBJ20026
         BNZ   CDQRMOUT            A. NO - DONT SET THEM THEN  MBJ20026
         STC   R1,CDQRMLO          A. YES - SET LOW REQUESTED  MBJ20026
         STC   R0,CDQRMHI                   SET HIGH REQUESTED MBJ20026
CDQRMOUT BXLE  WD,WE,CDQOPER3      GET NEXT OPERAND AND SCAN IT BJ20026
CDQNOPER TM    CDQFLAG,CDQBIT      Q. WAS IT $DQ,ALL           MBJ20026
         BZ    CDQEND              A. NO - JUST SPOOL UTILIZATIMBJ20026
         OI    CDQFLAG,CDQALL      REMEMBER $DQ,ALL            MBJ20026
         MVI   CDQHEADL,CDQALLL    SET LOW HEADER OFFSET       MBJ20026
         MVI   CDQHEADH,CDQALLH    SET HIGH HEADER OFFSET      MBJ20026
         LA    WF,CDQXEQ           SET INITIAL SUBPROC.        MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQOPER3 L     R1,0(,WD)           GET LAST OPERAND            MBJ20026
         CLC   0(3,R1),=C'ALL'     A. REQUEST FOR ALL          MBJ20026
         BE    CDQNOPER            A. YES - SAME AS NO REQUEST MBJ20026
         SPACE 1                                               MBJ20026
CDQCONT  CLC   0(3,R1),=C'CON'     Q. REQUEST FOR 'CON'        MBJ20026
         BNE   CDQXEQT             A. NO - MAYBE 'XEQ'         MBJ20026
         MVI   CDQHEADL,CDQCONL    SET LOW HEADER OFFSET       MBJ20026
         MVI   CDQHEADH,CDQCONH    SET HIGH HEADER OFFSET      MBJ20026
         LA    WF,CDQCON           SET INITIAL SUBPROC.        MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQXEQT  CLC   0(3,R1),=C'XEQ'     Q. REQUEST FOR 'XEQ'        MBJ20026
         BNE   CDQREST             A. NO - MAYBE 'RES'         MBJ20026
         LA    WF,CDQXEQ           SET INITIAL SUBPROC.        MBJ20026
         CLI   3(R1),C' '          Q. SPECIFIC JOB CLASS REQUESMBJ20026
         BNE   CDQCLREQ            A. YES - SET LIMITS BY JOB CMBJ20026
         MVI   CDQHEADL,CDQXEQL    SET LOW HEADER OFFSET       MBJ20026
         MVI   CDQHEADH,CDQXEQH    SET HIGH HEADER OFFSET      MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQREST  CLC   0(3,R1),=C'RES'     Q. REQUEST FOR 'RES'        MBJ20026
         BNE   CDQHLDT             A. NO - MAYBE HOLD          MBJ20026
         LA    WF,CDQRES           SET INITIAL SUBPROC.        MBJ20026
         CLI   3(R1),C' '          Q. SPECIFIC CLASS REQUESTED MBJ20026
         BNE   CDQCLREQ            A. YES - SET LIMITS BY JOB CMBJ20026
         MVI   CDQHEADL,CDQRESL    SET LOW HEADER OFFSET       MBJ20026
         MVI   CDQHEADH,CDQRESH    SET HIGH HEADER OFFSET      MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQHLDT  CLC   0(4,R1),=C'HOLD'    Q. REQUEST FOR 'HOLD'       MBJ20026
         BNE   CDQOUTT             A. NO - MAYBE 'OUT'         MBJ20026
         MVI   CDQHEADL,CDQHLDL    SET LOW HEADER LIMIT        MBJ20026
         MVI   CDQHEADH,CDQHLDH    SET HIGH HEADER LIMIT       MBJ20026
         LA    WF,CDQHLD           SET INITIAL SUBPROC.        MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQOUTT  CLC   0(3,R1),=C'OUT'     Q. REQUEST FOR 'OUT'        MBJ20026
         BNE   CDQPPUT             A. NO - MAYBE 'PPU'         MBJ20026
         MVI   CDQHEADL,CDQOUTL    SET LOW HEADER LIMIT        MBJ20026
         MVI   CDQHEADH,CDQOUTH    SET HIGH HEADER LIMIT       MBJ20026
         LA    WF,CDQOUT           SET INITIAL SUBPROC.        MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
         SPACE 1                                               MBJ20026
CDQPPUT  CLC   0(3,R1),=C'PPU'     Q. REQUEST FOR 'PPU'        MBJ20026
         BNE   CDQABEND            A. NO - ASSUME NO OPERANDS  MBJ20026
         MVI   CDQHEADL,CDQPPUL    SET LOW HEADER LIMIT        MBJ20026
         MVI   CDQHEADH,CDQPPUH    SET HIGH HEADER LIMIT       MBJ20026
         LA    WF,CDQPPU           SET INITIAL SUBPROC.        MBJ20026
         B     CDQSTART            AND START SCAN              MBJ20026
CDQABEND CLC   0(4,R1),=C'$0C1'   DO WE DIE                    MBJ20026
         BNE   CDQNOPER           NO LET IT GO                 MBJ20026
OC1      DC    XL4'00000000'      0C1 HERE                     MBJ20026
CDQCLREQ NULL  ,                   SPECIFIC JOB CLASS REQUESTEDMBJ20026
         CLC   3(3,R1),=C'STC'     Q. STC REQUEST              MBJ20026
         BE    CDQCLSTC            A. YES - SET LINITS         MBJ20026
         CLI   3(R1),C'$'          Q. SHORTHAND FOR STC        MBJ20026
         BNE   CDQTSREQ            A. NO - MAYBE TSU           MBJ20026
CDQCLSTC MVI   CDQHEADL,CDQSTCL    SET LOW HEADER LIMIT        MBJ20026
         MVI   CDQHEADH,CDQSTCH    SET HIGH HEADER LIMIT       MBJ20026
         B     CDQSTART            AND START SCAN OF JOBQ      MBJ20026
CDQTSREQ CLC   3(3,R1),=C'TSU'     Q. TSU REQUESTED            MBJ20026
         BE    CDQCLTSU            A. YES - GO SET LIMITS      MBJ20026
         CLI   3(R1),C'@'          Q. SHORTHAND FOR TSU        MBJ20026
         BNE   CDQCLCHR            A. NO - MUST BE VALID CHARACT J20026
CDQCLTSU MVI   CDQHEADL,CDQTSUL    SET LOW HEADER LIMIT        MBJ20026
         MVI   CDQHEADH,CDQTSUH    SET HIGH HEADER LIMIT       MBJ20026
         B     CDQSTART            AND START JOBQ SCAN         MBJ20026
CDQCLCHR NULL  ,                                               MBJ20026
         SPACE 2                                               MBJ20026
         NI    3(R1),X'7F'         CLEAR ACTIVE BIT            MBJ20026
         SR    WB,WB               CLEAR WB FOR INSERT         MBJ20026
         IC    WB,3(R1)            GET CLASS INTO WB           MBJ20026
         IC    WB,$QINDEX(WB)      GET JQE HEADER OFFSET       MBJ20026
         LTR   WB,WB               Q. VALIE JOB CLASS          MBJ20026
         BZ    CDQNOPER            A. NO - DEFAULT TO ALL      MBJ20026
         STC   WB,CDQHEADH         SET AS HIGH HEADER          MBJ20026
         BCTR  WB,0                - 2 FOR                     MBJ20026
         BCTR  WB,0                    LOW HEADER              MBJ20026
         STC   WB,CDQHEADL         SET AS LOW HEADER           MBJ20026
         CLI   4(R1),C'-'          Q. RANGE OF CLASSES         MBJ20026
         BNE   CDQSTART            A. NO - LETS GO             MBJ20026
         NI    5(R1),X'7F'         CLEAR HI BIT                MBJ20026
         IC    WB,5(R1)            GET CLASS IN WB             MBJ20026
         IC    WB,$QINDEX(WB)      GET HEADER OFFSET           MBJ20026
         LTR   WB,WB               Q. VALID CLASS              MBJ20026
         BZ    CDQSTART            A. NO - START WITHOUT IT    MBJ20026
         CLM   WB,1,CDQHEADL       Q. HIGHER THAN FIRST        MBJ20026
         BNH   CDQSTART            A. NO - START WITHOUT IT    MBJ20026
         STC   WB,CDQHEADH         A. YES - USE AS HIGH HEADER MBJ20026
         B     CDQSTART            START SCAN                  MBJ20026
         EJECT                                                 MBJ20026
*************************************************************  MBJ20026
***                                                       ***  MBJ20026
***    TABLE FOR SETTING OF LOW AND HIGH HEADER VALUES    ***  MBJ20026
***                                                       ***  MBJ20026
***                   LOW      HIGH     INITIAL           ***  MBJ20026
***          QTYPE   HEADER   HEADER   SUBPROCESSOR       ***  MBJ20026
***          -----   ------   ------   ------------       ***  MBJ20026
***           ALL       4       94      CDQXEQ            ***  MBJ20026
***           PPU       2        4      CDQPPU            ***  MBJ20026
***           OUT       4        6      CDQOUT            ***  MBJ20026
***           CON      14       16      CDQCON            ***  MBJ20026
***           XEQ     *24      *94      CDQXEQ            ***  MBJ20026
***           XEQSTC   20       22      CDQXEQ            ***  MBJ20026
***           XEQTSU   22       24      CDQXEQ            ***  MBJ20026
***           RES     *24      *94      CDQRES            ***  MBJ20026
***           HOLD     14       94      CDQHLD            ***  MBJ20026
***                                                       ***  MBJ20026
***    * - DEPENDENT UPON POSSIBLE REQUEST FOR A          ***  MBJ20026
***        PARTICULAR JOB CLASS.                          ***  MBJ20026
***                                                       ***  MBJ20026
*************************************************************  MBJ20026
         SPACE 2                                               MBJ20026
CDQSTART NULL  ,                   START JOBQ SCAN             MBJ20026
         LA    WC,CDNCTR           ASSUME $DN                  MBJ20026
         TM    CDQFLAG,CDQBIT      Q. WAS IT $DQ               MBJ20026
         BZ    *+8                 A. NO - ASSUMPTION WAS RIGHTMBJ20026
         LA    WC,CDQCTR           A. YES- CHANGE TO $DQ       MBJ20026
         SPACE 1                                               MBJ20026
CDQNHEAD NULL  ,                   START A NEW JQE HEADER      MBJ20026
         LH    R15,CDQHIGH         GET CURRENT HEADER          MBJ20026
         BCTR  R15,0               DECREMENT TO                MBJ20026
         BCTR  R15,0                 NEXT LOWER HEADER         MBJ20026
         STH   R15,CDQHIGH         AND RESET AS CURRENT        MBJ20026
         LA    R1,$JQHEADS-(JQECHAIN-JQEDSECT)(R15)            MBJ20026X
                                   SET R1 TO LOOK LIKE A JQE   MBJ20026
         SPACE 1                                               MBJ20026
CDQNEXT  NULL  ,                   GET THE NEXT JQE ON CHAIN   MBJ20026
         LH    R1,JQECHAIN         GET OFFSET TO NEXT          MBJ20026
         N     R1,=A(X'0000FFFF')  CLEAR UPPER BYTES           MBJ20026
         BZ    CDQENDCH            IF 0, END OF CHAIN          MBJ20026
         SLL   R1,2                * 4 FOR TRUE OFFSET         MBJ20026
         AL    R1,$JOBQPTR         CALCULATE JQE ADDRESS (ABSOLMBJ20026
         B     4(,WF)              BRANCH TO SUB-PROCESSOR     MBJ20026
         SPACE 1                                               MBJ20026
CDQENDCH NULL  ,                   END OF A CHAIN SEGMENT      MBJ20026
         CLC   CDQHIGH,CDQLOW      Q. WAS THAT THE LAST SEGMENTMBJ20026
         BNH   0(,WF)              A. YES-BRANCH TO EDITOR     MBJ20026
         B     CDQNHEAD            A. NO - GET NEXT HEADER     MBJ20026
         SPACE 5                                               MBJ20026
CDQXEQ   B     CDQXEQE       *** GENERAL ENTRY TO EDITOR ***   MBJ20026
         CLI   JQETYPE,$XEQ        Q. AT END OF XEQ JQE'S      MBJ20026
         BE    CDQXEQE             A. YES - 2ND ENTRY TO EDITORMBJ20026
         TM    JQETYPE,$XEQ        Q. IN ANNY EXECUTION QUEUE  MBJ20026
         BZ    CDQXEQE             A. NO - EDIT THE COUNT      MBJ20026
         BR    WC                  A. NO - ENTER JQE PROCESSOR MBJ20026
         SPACE 1                                               MBJ20026
CDQXEQE  TM    CDQFLAG,CDQBIT      Q. $DQ                      MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL   MBJ20026
         L     WB,=A(CRESAREA)     POINT TO WORKAREA           MBJ20026
         MVC   COMMAND(17),=C'EXECUTION BACKLOG'   TITLE       MBJ20026
         LR    WD,R1               SAVE JQE REG OVER CALLS     MBJ20026
        $CWTO  L=17                                            MBJ20026
         LR    R1,WD               RESTORE JQE POINTER         MBJ20026
         TM    CDQFLAG,CDQSPEC     Q. SPECIAL SYSTEM REQUESTED MBJ20026
         BNO   *+12                A. NO - GO AHEAD WITH DISPLAY J20026
         CLI   CDQCPU,QUESYSAF     Q. WAS THE REQUEST FOR ANY  MBJ20026
         BNE   CDQXEQE1            A. NO - GO CHECK EACH SYSTEM BJ20026
         MVC   COMMAND(4),=CL4'ANY '          SUB-TITLE        MBJ20026
         MVC   COMMAND+4(L'COMMAND-4),COMMAND+3   CLEAR        MBJ20026
         LA    WD,CDQANYCT         POINT TO BUCKET FOR 'ANY'   MBJ20026
         BAL   WA,CDQCLASS         PROCESS IT                  MBJ20026
CDQXEQE1 LA    WD,CDQCPUCT         POINT TO BUCKET FOR CPU1    MBJ20026
         L     WC,$QSE1            POINT TO QSE FOR CPU1       MBJ20026
         USING QSEDSECT,WC         QSE ADDRESSABILITY          MBJ20026
CDQXEQE2 TM    CDQFLAG,CDQSPEC     Q. SPECIAL SYSTEM REQUESTED MBJ20026
         BNO   *+14                A. NO - CONTINE WITH DISPLAY BJ20026
         CLC   CDQCPU,QSESIAFF     Q. WAS THIS SYSTEM REQUESTED BJ20026
         BNE   CDQXEQE4            A. NO - GO CHECK NEXT SYSTEM BJ20026
         MVC   COMMAND(4),QSESID   SUB-TITLE                   MBJ20026
         MVI   COMMAND+4,C' '                  CLEAR LINE      MBJ20026
         MVC   COMMAND+5(L'COMMAND-5),COMMAND+4  TO BLANKS     MBJ20026
         BAL   WA,CDQCLASS         PROCESS CPU'S QUEUE         MBJ20026
         BO    CDQRESE2            A. YES - BR ENTER $DQ,RES EDMBJ20026
         B     CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         SPACE 1                                               MBJ20026
CDQRES   B     CDQRESE        *** GENERAL ENTRY TO EDITOR ***  MBJ20026
         ICM   WA,8+4+2,JQERESRT   Q. ANY RESOURCES REQUESTED  MBJ20026
         BZ    CDQNEXT             A. NO - NEXT JQE            MBJ20026
         BR    WC                  A. YES - PROCESS HIM        MBJ20026
         SPACE 1                                               MBJ20026
CDQRESE  TM    CDQFLAG,CDQBIT      Q. $DQ                      MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         L     WB,=A(CRESAREA)     GET WORKAREA ADDRESS        MBJ20026
CDQRESE2 NULL  ,  *** BRANCH ENTRY FROM XEQ EDITOR IF $DQ,ALL *MBJ20026
         LA    WD,CDQRESCT         RESOURCE BUCKET             MBJ20026
         LA    WC,$NOLEFT          NUMBER OF RESOURCES         MBJ20026
         LA    WB,$RESTAB          RESOURCE TABLE (DROP WORKAREMBJ20026
CDQRESE3 MVC   COMMAND(8),0(WB)    PUT RESOURCE NAME IN MSG    MBJ20026
         MVI   COMMAND+8,C' '      CLEAR                       MBJ20026
         MVC   COMMAND+9(L'COMMAND-9),COMMAND+8                MBJ20026
         BAL   WA,CDQCLASS         PRINT MSG BY CLASS          MBJ20026
         LA    WD,(38*2)(,WD)      TO NEXT RESOURCE BUCKET     MBJ20026
         LA    WB,$RESLEN(,WB)     TO NEXT $RESTAB ENTRY       MBJ20026
         BCT   WC,CDQRESE3         LOOP                        MBJ20026
         TM    CDQFLAG,CDQALL      Q. $DQ,ALL                  MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         LA    WC,CDQCTR           RE-ESTABLISH PROCESSOR $DQ  MBJ20026
         LA    WF,CDQCON           SET UP NEXT SUB-PROC.       MBJ20026
         B     4(,WF)              AND BRANCH TO HIM           MBJ20026
         SPACE 2                                               MBJ20026
CDQCON   B     CDQCONE       *** GENERAL ENTRY TO EDITOR ***   MBJ20026
         CLI   JQETYPE,$XEQ        Q. AWAITING CONV.           MBJ20026
         BER   WC                  A. YES - PROCESS HIM        MBJ20026
CDQCONE  TM    CDQFLAG,CDQBIT      Q. $DQ                      MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         L     WB,=A(CRESAREA)     GET WORKAREA ADDRESS        MBJ20026
         LH    R0,CDQCONCT         GET COUNT                   MBJ20026
         LTR   R0,R0               Q. ZERO                     MBJ20026
         BZ    CDQNOCON            A. YES - NO MSG             MBJ20026
         LR    WD,R1               SAVE JQE REG OVER CALLS     MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   COMMAND(21),=C'CONVERSION BACKLOG - '           MBJ20026
         MVC   COMMAND+21(4),COMDWORK+1 COUNT IN MSG           MBJ20026
        $CWTO  L=25                                            MBJ20026
         LR    R1,WD               RESTORE JQE REGISTER        MBJ20026
CDQNOCON TM    CDQFLAG,CDQALL      Q. $DQ,ALL                  MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         LA    WC,CDQCTR           RE-ESTABLISH PROCESSOR $DQ  MBJ20026
         LA    WF,CDQOUT           A. YES - SETUP NEXT SUB-PROCMBJ20026
         B     4(,WF)              AND BRANCH TO HIM           MBJ20026
         SPACE 2                                               MBJ20026
CDQOUT   B     CDQOUTE        *** GENERAL ENTRY TO EDITOR ***  MBJ20026
         CLI   JQETYPE,$OUTPUT     Q. AWAITING $OUTPUT         MBJ20026
         BER   WC                  A. YES - PROCESS HIM        MBJ20026
CDQOUTE  TM    CDQFLAG,CDQBIT      Q. $DQ                      MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         L     WB,=A(CRESAREA)     GET WORKAREA ADDRESS        MBJ20026
         LH    R0,CDQOUTCT         GET COUNT                   MBJ20026
         LTR   R0,R0               Q. ZERO                     MBJ20026
         BZ    CDQNOOUT            A. YES - NO MSG             MBJ20026
         LR    WD,R1               SAVE JQE REG OVER CALLS     MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   COMMAND(17),=C'OUTPUT BACKLOG - '               MBJ20026
         MVC   COMMAND+17(4),COMDWORK+1                        MBJ20026
        $CWTO  L=21                                            MBJ20026
         LR    R1,WD               RESTORE JQE REGISTER        MBJ20026
CDQNOOUT TM    CDQFLAG,CDQALL      Q. $DQ,ALL                  MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         LA    WC,CDQCTR           RE-ESTABLISH PROCESSOR $DQ  MBJ20026
         LA    WF,CDQPPU           A. YES - SETUP NEXT SUB-PROCMBJ20026
         B     4(,WF)              AND BRANCH TO HIM           MBJ20026
         SPACE 2                                               MBJ20026
CDQPPU   B     CDQPPUE       *** GENERAL ENTRY TO EDITOR ***   MBJ20026
         TM    JQETYPE,$HARDCPY    Q. AWAITING $HARDCPY        MBJ20026
         BOR   WC                  A. YES - PROCESS HIM        MBJ20026
CDQPPUE  TM    CDQFLAG,CDQBIT      Q. $DQ                      MBJ20026
         BZ    CDQEND              A. NO - FINISH WITH SPOOL UTMBJ20026
         L     WB,=A(CRESAREA)     GET WORKAREA ADDRESS        MBJ20026
         SPACE 1                                               MBJ20026
         LH    R9,$NUMRJE         GET NUMBER OF RMT LINES      MBJ20026
         SLL   R9,1               MULTIPLY BY 2                MBJ20026
         STCM  R9,1,CDQPPULN+1    USE FOR LENGTH               MBJ20026
CDQPPULN OC    CDQPPUCT(1),CDQPPUCT Q. ANYTHING THERE          MBJ20026
         BZ    CDQNOPPU            Q. NO - NO MSG              MBJ20026
         SPACE 1                                               MBJ20026
         MVC   COMMAND(19),=C'PRINT/PUNCH BACKLOG'   TITLE     MBJ20026
        $CWTO  L=19                                            MBJ20026
         MVI   COMMAND,C' '        CLEAR                       MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND                  MBJ20026
         LA    R9,COMMAND+1        START OF MSG GENERATING     MBJ20026
         SR    R0,R0               CLEAR FOR INSERTS           MBJ20026
         SR    WE,WE               INITIALIZE REMOTE COUNTER   MBJ20026
         ICM   R0,2+1,CDQPPUCT     GET COUNT AWAITING CENTRAL  MBJ20026
         BZ    CDQNOCEN            ...IF NONE, SKIP IT         MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT INTO MSG                MBJ20026
         MVC   4(8,R9),=C'-CENTRAL'  SUB-TITLE                 MBJ20026
         LA    R9,13(,R9)          BUMP PAST MSG               MBJ20026
CDQNOCEN LA    R15,COMMAND+$MAXMSG END OF MSG GENERATING       MBJ20026
         LA    WD,CDQPPUCT         POINT TO PPU BUCKET         MBJ20026
CDQNEWRM NULL  ,   START HERE FOR EACH NEW REMOTE              MBJ20026
         LA    WE,1(,WE)           BUMP REMOTE COUNTER         MBJ20026
         LH    R0,$NUMRJE         GET NUMBER OF RMTS           MBJ20026
         CR    WE,R0              Q. PAST END OF REMOTES       MBJ20026
         BH    CDQENDRM            A. YES - BRANCH OUT OF LOOP MBJ20026
         SLL   WE,1                * 2 = OFFSET TO REMOTE COUNTMBJ20026
         LH    R0,0(WE,WD)         GET REMOTE COUNT R          MBJ20026
         SRL   WE,1                BACK TO REMOTE #            MBJ20026
         LTR   R0,R0               Q. ANY FOR THIS REMOTE      MBJ20026
         BZ    CDQNEWRM            A. NO - TRY NEXT REMOTE     MBJ20026
        $CFCVE ,                   A. YES - CONVERT TO EBCDIC  MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT INTO MSG                MBJ20026
         MVC   4(3,R9),=C'-RM'     SUB-TITLE SKELETON          MBJ20026
         LR    R0,WE               GET REMOTE #                MBJ20026
        $CFCVE ,                   AND CONVERT TO EBCDIC       MBJ20026
         MVC   7(1,R9),COMDWORK+4  MOVE IN ONE DIGIT           MBJ20026
         CLI   COMDWORK+3,C' '     Q. WERE THERE 2             MBJ20026
         BE    *+10                A. NO - MSG IS OK           MBJ20026
         MVC   7(2,R9),COMDWORK+3  A. YES - PUT THEM BOTH IN   MBJ20026
         LA    R9,10(,R9)          BUMP PAST THAT              MBJ20026
         CR    R9,R15              Q. ROOM FOR MORE MSG        MBJ20026
         BNH   CDQNEWRM            A. YES - NEXT REMOTE        MBJ20026
         LA    R15,COMMAND         A. NO - CALCULATE           MBJ20026
         SR    R9,R15                       MESSAGE LENGTH     MBJ20026
         LR    R0,R9                        IN R0.             MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND   CLEAR          MBJ20026
         LA    R9,COMMAND+1        RESET MSG                   MBJ20026
         LA    R15,COMMAND+$MAXMSG  BOUNDARIES                 MBJ20026
         B     CDQNEWRM            AND CONTINUE REMOTE SCAN    MBJ20026
CDQENDRM LA    R15,COMMAND+1       MINIMUM MSG                 MBJ20026
         SR    R9,R15              CALCULATE LENGTH - 1        MBJ20026
         BZ    CDQNOPPU            IF ZERO, NO MSG.            MBJ20026
         LA    R0,1(,R9)           ELSE, GET IN R0             MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
CDQNOPPU NULL  ,      *** EXIT FROM EDITOR ***                 MBJ20026
         B     CDQEND              CAN'T BE ANYTHING MORE      MBJ20026
         SPACE 1                                               MBJ20026
CDQHLD   B     CDQHLDE    *** GENERAL ENTRY TO EDITOR ***      MBJ20026
         TM    JQEFLAGS,QUEHOLDA+QUEHOLD1+QUEHOLD2             MBJ20026X
                                   Q. JOB HELD FOR ANY REASON  MBJ20026
         BZ    CDQNEXT             A. NO - NEXT JQE            MBJ20026
         BR    WC                  A. NO - PROCESS HIM         MBJ20026
CDQHLDE  TM    CDQFLAG,CDQBIT      Q. $DQ ISSUED               MBJ20026
         BZ    CDQEND              A. NO - FINISH MESSAGE      MBJ20026
         L     WB,=A(CRESAREA)     POINT TO WORKAREA           MBJ20026
         MVC   COMMAND(23),=C'HELD AWAITING EXECUTION'         MBJ20026
        $CWTO  L=23                ISSUE HEADER MESSAGE        MBJ20026
         TM    CDQFLAG,CDQSPEC     Q. SPECIFIC SID REQUEST     MBJ20026
         BZ    *+12                A. NO - SKIP NEXT CHECK     MBJ20026
         CLI   CDQCPU,QUESYSAF     Q. WAS REQUEST FOR 'ANY'    MBJ20026
         BNE   CDQHLDE1            A. NO - GO CHECK EACH SYSTEM BJ20026
         MVC   COMMAND(4),=CL4'ANY '   TITLE                   MBJ20026
         MVC   COMMAND+4(L'COMMAND-4),COMMAND+3  CLEAR         MBJ20026
         LA    WD,CDQANYCT         POINT TO BUCKET FOR 'ANY'   MBJ20026
         BAL   WA,CDQCLASS         AND PROCESS                 MBJ20026
         B     CDQHLDE3                                        MBJ20026
CDQHLDE1 LA    WD,CDQCPUCT         POINT TO FIRST CPU BUCKET   MBJ20026
         L     WC,$QSE1            POINT TO FIRST QSE          MBJ20026
         USING QSEDSECT,WC         ADDRESSABILITY FOR QSE'S    MBJ20026
CDQHLDE2 TM    CDQFLAG,CDQSPEC     Q. SPECIFIC SID REQUEST     MBJ20026
         BZ    *+14                A. NO - SKIP NEXT CHECK     MBJ20026
         CLC   CDQCPU,QSESIAFF     Q. WAS THIS THE SID REQUESTED J20026
         BNE   CDQHLDE4            A. NO - GO TRY NEXT SYSTEM  MBJ20026
         MVC   COMMAND(4),QSESID   A. YES- PUT SID IN MESSAGE  MBJ20026
         MVI   COMMAND+4,C' '      CLEAR REST                  MBJ20026
         MVC   COMMAND+5(L'COMMAND-5),COMMAND+4  TO BLANKS     MBJ20026
         BAL   WA,CDQCLASS         PROCESS THIS CPU            MBJ20026
CDQHLDE4 LA    WD,(38*2)(,WD)      POINT TO NEXT CPU BUCKET    MBJ20026
         TM    QSEFLAGS,QSELAST    Q. WAS THAT THE LAST CPU    MBJ20026
         BO    CDQHLDE3            A. YES - END LOOP           MBJ20026
         LA    WC,QSELNGTH(,WC)    A. NO - POINT TO NEXT QSE   MBJ20026
         B     CDQHLDE2               AND LOOP                 MBJ20026
         DROP  WC                  DROP QSE ADDRESSABILITY     MBJ20026
CDQHLDE3 LH    R0,CDQCONCT         GET HELD AWAIT CONV.        MBJ20026
         LTR   R0,R0               Q. ZERO                     MBJ20026
         BZ    CDQEND              A. YES - FINISH WITH SPOOL UMBJ20026
        $CFCVE ,                   A. NO - CONVERT TO EBCDIC   MBJ20026
         MVC   COMMAND(27),=C'HELD AWAITING CONVERSION - ' TITLMBJ20026
         MVC   COMMAND+27(4),COMDWORK+1 PUT IN COUNT           MBJ20026
        $CWTO  L=31                                            MBJ20026
         B     CDQEND              EXIT WITH SPOOL UTILIZATION MBJ20026
         SPACE 1                                               MBJ20026
*                                                              MBJ20026
*    CDQEND - COMMON EXIT FROM $DQ/$DN... DISPLAY SPOOL UTILIZAMBJ20026
*                                                              MBJ20026
CDQEND   NULL  ,                                               MBJ20026
         B     *+4         *** GENERAL ENTRY TO EDITOR ***     MBJ20026
         L     R15,$SSVT               GET SSVT POINTER        MBJ20026
         L     R1,$SVTGALC-SSVT(,R15)  GET TRACK GROUPS ALLOC. MBJ20026
         M     R0,=F'100'              ALLOW FOR PERCENTAGE    MBJ20026
         D     R0,$SVTGTOT-SSVT(,R15)  DIVIDE BY TOTAL         MBJ20026
        $CFCVE VALUE=(R1)              CONVERT TO EBCDIC       MBJ20026
         MVC   COMMAND(3),COMDWORK+2   PLACE IN MSG            MBJ20026
         MVC   COMMAND+3(26),=C' PERCENT SPOOL UTILIZATION'    MBJ20026
        $CRET  L=29                    RETURN WITH LAST MSG    MBJ20026
         SPACE 5                                               MBJ20026
CDQCHECK TM    JQEFLAGS,QUEBUSY    Q. JOB ACTIVE               MBJ20026
         BNZ   CDQCTREX            A. YES- GET NEXT JQE        MBJ20026
         TM    CDQFLAG,CDQSPEC     Q. WAS THERE A SPECIAL REQUEST 20026
         BZ    CDQOKCPU            A. NO - DON'T CHECK CPU ROUTE J20026
         IC    WB,CDQCPU           GET SYS AFFINITIES          MBJ20026
         EX    WB,CDQTM            Q. ROUTED TO REQUESTED CPU  MBJ20026
         BNO   CDQCTREX            A. NO - GET NEXT JQE        MBJ20026
CDQOKCPU SR    WB,WB               CLEAR WB FOR INSERT         MBJ20026
         CLC   JQEPRTRT,=X'0100'  IS IT LOCAL                  MBJ20026
         BNH   *+8                YES, USE LOCAL               MBJ20026
         ICM   WB,3,JQEPRTRT      INSERT ROUTE CODE            MBJ20026
         L     WC,=A(CRESAREA)     POINT TO LOCAL WORKAREA     MBJ20026
         LA    WC,CDQRMTAB-CDQDSECT(,WC)    POINT TO ROUTING TABLE 0026
CDQRMCOM CH    WB,2(,WC)           Q. ROUTE CODES MATCH        MBJ20026
         BE    CDQRMNXT            A. YES - GO CHECK REQUEST   MBJ20026
         LA    WC,4(,WC)           POINT TO NEXT TABLE ENTRY   MBJ20026
         CLI   0(WC),X'FF'         Q. END OF TABLE             MBJ20026
         BNE   CDQRMCOM            A. NO - LOOP                MBJ20026
         B     CDQCTREX            A. YES - NO MATCH-NEXT JQE  MBJ20026
CDQRMNXT LH    WB,0(,WC)           GET REMOTE NUMBER           MBJ20026
         CLM   WB,1,CDQRMLO        Q. IN REQUESTED RANGE       MBJ20026
         BL    CDQCTREX            A. NO - NEXT JQE            MBJ20026
         CLM   WB,1,CDQRMHI        Q. IN RANGE REQUESTED       MBJ20026
         BH    CDQCTREX            A. NO - NEXT JQE            MBJ20026
         LM    WB,WC,CDQREGWB      A. YES - RESTORE WORK REGS  MBJ20026
         BR    WA                     AND RETURN TO SUB-PROC   MBJ20026
CDQTM    TM    JQEFLAG2,0          --- EXECUTE ONLY ---        MBJ20026
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*   'CDQCLASS' ROUTINE                                       * MBJ20026
*        R0-   COUNT REGISTER                                * MBJ20026
*        WA-   LINKAGE                                       * MBJ20026
*        WD-   POINTER TO COUNTER BUCKET(INPUT)              * MBJ20026
*        WE-   INDEX FOR CLASSES                             * MBJ20026
*        R9-   POINTER FOR MSG GENERATION                    * MBJ20026
*        R15-  MAXIMUM MSG DELIMITER                         * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDQCLASS NULL  ,                                               MBJ20026
         STM   R15,WF,CDQREGSV     SAVE WORK REGISTERS         MBJ20026
         LA    R9,COMMAND+9        MESSAGE START               MBJ20026
         LA    R15,COMMAND+$MAXMSG MESSAGE END                 MBJ20026
         LA    WE,70               OFFSET TO LAST CLASS COUNT  MBJ20026
CDQNEWCL LH    R0,0(WE,WD)         GET COUNT FOR THIS CLASS    MBJ20026
         LTR   R0,R0               Q. ANYTHING THERE           MBJ20026
         BZ    CDQNONE             A. NO - BRANCH              MBJ20026
        $CFCVE ,                   A. YES- CONVERT TO EBCDIC   MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT INTO MSG                MBJ20026
         MVI   4(R9),C'-'          PUT IN SEPARATOR            MBJ20026
         SRL   WE,1                WE=RELATIVE CLASS #         MBJ20026
         IC    R0,CDQCLS(WE)       GET EBCDIC CLASS            MBJ20026
         ALR   WE,WE               WE=CLASS OFFSET, AGAIN      MBJ20026
         STC   R0,5(,R9)           PUT CLASS INTO MSG          MBJ20026
         LA    R9,7(,R9)           BUMP PAST THAT              MBJ20026
         CR    R9,R15              Q. ROOM FOR MORE            MBJ20026
         BNH   CDQNONE             A. YES - CONTINUE           MBJ20026
         LA    R15,COMMAND         CALCULATE                   MBJ20026
         SR    R9,R15               TRUE LENGTH                MBJ20026
         LR    R0,R9                 IN R0.                    MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         MVI   COMMAND,C' '        CLEAR                       MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND   MESSAGE        MBJ20026
         LA    R9,COMMAND+9        MESSAGE START               MBJ20026
         LA    R15,COMMAND+$MAXMSG MESSAGE END                 MBJ20026
CDQNONE  SH    WE,=H'2'            BACK UP TO NEXT CLASS       MBJ20026
         BNM   CDQNEWCL            LOOP IF NOT DONE            MBJ20026
         LH    R0,72(,WD)          GET STC COUNT               MBJ20026
         LTR   R0,R0               Q. ANY STC WAITING          MBJ20026
         BZ    CDQTSUCL            A. NO - MAYBE SOME TSU      MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT INTO MSG                MBJ20026
         MVC   4(4,R9),=C'-STC'    PUT IDENTIFIER IN           MBJ20026
         LA    R9,9(,R9)           BUMP MSG POINTER            MBJ20026
CDQTSUCL LH    R0,74(,WD)          GET TSU COUNT               MBJ20026
         LTR   R0,R0               Q. ANY TSU WAITING          MBJ20026
         BZ    CDQMSGCL            A. NO - FINISH MESSAGE      MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT INTO MSG                MBJ20026
         MVC   4(4,R9),=C'-TSU'    PUT IDENTIFIER IN           MBJ20026
         LA    R9,9(,R9)           BUMP MSG POINTER            MBJ20026
CDQMSGCL LA    R15,COMMAND+9       POINT TO MESSAGE START      MBJ20026
         SR    R9,R15              Q. ACTUAL LENGTH = 0        MBJ20026
         BZ    CDQNOWTO            A. YES - NO $CWTO           MBJ20026
         LA    R0,9(,R9)           TRUE LENGTH IN R0           MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
CDQNOWTO LM    R15,WF,CDQREGSV     RESTORE WORK REGISTERS      MBJ20026
         BR    WA                  AND RETURN                  MBJ20026
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        $DN - JQE PROCESSOR                                 * MBJ20026
*              DISPLAY A MSG WITH JOB INFORMATION            * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDNCTR   NULL  ,                                               MBJ20026
         STM   R15,WF,CDQREGSV     SAVE WORK REGISTERS         MBJ20026
         BAL   WA,CDQCHECK         GO CHECK SYSTEM & REMOTE    MBJ20026
         LR    WD,R1               SAVE JQE ADDRESS OVER MSG DIMBJ20026
        $CFJMSG OPT=COFQ           DISPLAY IF QUEUED           MBJ20026
         NOP   *-*                 SPACER TO PREVENT FUTURE ERRMBJ20026
         SPACE 1                                               MBJ20026
*                                                              MBJ20026
*        SINCE $CWTO MAY ISSUE A $WAIT, IT IS NECESSARY        MBJ20026
*        TO VERIFY THAT THE JOB QUEUE HAS NOT CHANGED          MBJ20026
*        THEREFORE WE SHALL LOOK FOR THE JQE ON THE SAME       MBJ20026
*        CHAIN SEGMENT AS IT WAS BEFORE... IF WE DON'T         MBJ20026
*        FIND IT, A MESSAGE 'LIST INCOMPLETE' WILL BE          MBJ20026
*        ISSUED INDICATING SUCH.                               MBJ20026
*                                                              MBJ20026
         SPACE 1                                               MBJ20026
         LH    R15,CDQHIGH         GET CURRENT HEADER          MBJ20026
         LA    R1,$JQHEADS-(JQECHAIN-JQEDSECT)(R15)            MBJ20026X
                                   MAKE R1 LOOK LIKE A JQE.    MBJ20026
CDQNEXT2 LH    R1,JQECHAIN         GET NEXT JQE OFFSET         MBJ20026
         N     R1,=A(X'0000FFFF')  CLEAR UPPER BYTES TO 0      MBJ20026
         BZ    CDQBROKE            IF 0, END OF CHAIN          MBJ20026
         SLL   R1,2                * 4 = TRUE OFFSET           MBJ20026
         AL    R1,$JOBQPTR         CALCULATE ABS JQE ADDR      MBJ20026
         CR    WD,R1               Q. SAME AS JUST DISPLAYED   MBJ20026
         BE    CDQCTREX            A. YES - COMMON EXIT TO MAIN BJ20026
         B     CDQNEXT2            A. NO - CONTINUE THIS SCAN  MBJ20026
         SPACE 1                                               MBJ20026
CDQBROKE NULL  ,    *** CHAIN WAS BROKEN OVER $CWTO ***        MBJ20026
         MVC   COMMAND(15),=C'LIST INCOMPLETE' MSG             MBJ20026
        $CRET  L=15                RETURN WITH INCOMPLETE MSG  MBJ20026
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        $DQ - JQE PROCESSOR - COUNT JQE BY QUEUE.           * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDQCTR   NULL  ,                   COUNTER FOR EACH JQE        MBJ20026
         STM   R15,WF,CDQREGSV     SAVE WORK REGISTERS         MBJ20026
         BAL   WA,CDQCHECK         GO CHECK SYSTEM & REMOTE    MBJ20026
         L     WB,=A(CRESAREA)     GET WORKAREA ADDRESS        MBJ20026
         SPACE 2                                               MBJ20026
         CLI   JQETYPE,$XEQ        Q. AWAITING CONVERSION      MBJ20026
         BNE   CDQCTRX             A. NO - TRY XEQ             MBJ20026
         LH    WE,CDQCONCT            ELSE GET CURRENT COUNT   MBJ20026
         LA    WE,1(,WE)              + 1                      MBJ20026
         STH   WE,CDQCONCT            AND REPLACE              MBJ20026
         B     CDQCTREX            COMMON EXIT                 MBJ20026
         SPACE 2                                               MBJ20026
CDQCTRX  TM    JQETYPE,$XEQ        Q. AWAITING XEQ             MBJ20026
         BNO   CDQCTRO             A. NO - TRY OUT             MBJ20026
         CLC   JQEJOBNO,=H'10000'  Q. BATCH JOB                MBJ20026
         BL    CDQCTRX0            A. YES - BRANCH             MBJ20026
         LA    WE,72                  ASSUME ITS A STC         MBJ20026
         CLC   JQEJOBNO,=H'20000'  Q. IS IT AN STC             MBJ20026
         BL    *+8                 A. YES - SKIP NEXT          MBJ20026
         LA    WE,74               A. NO  - POINT TO TSU COUNTER J20026
         B     CDQCTRX1            GO COUNT THE JOB            MBJ20026
CDQCTRX0 SR    WE,WE               CLEAR WE FOR INSERT         MBJ20026
         IC    WE,JQETYPE          GET JOB CLASS               MBJ20026
         IC    WE,$QINDEX(WE)      GET OFFSET INTO JQE HEADS   MBJ20026
         LTR   WE,WE               Q. VALID CLASS              MBJ20026
         BZ    CDQCTREX            A. NO - EXIT                MBJ20026
         SH    WE,=H'24'           RELATIVE TO XEQ COUNTER     MBJ20026
CDQCTRX1 TM    JQEFLAG2,QUESYSAF   Q. ANY SPECIAL SYS AFFINITY MBJ20026
         BNO   CDQCTRX2            A. YES - CHECK THEM         MBJ20026
         LH    WA,CDQANYCT(WE)        GET COUNT FOR 'ANY' CPU  MBJ20026
         LA    WA,1(,WA)              + 1                      MBJ20026
         STH   WA,CDQANYCT(WE)        REPLACE                  MBJ20026
         B     CDQCTRR             GO SEE IF IT HAS RESOURCES  MBJ20026
         SPACE 2                                               MBJ20026
CDQCTRX2 SR    WA,WA               CLEAR FOR INSERT            MBJ20026
         LA    WD,6*38*2(,WE)      COUNTER IN LAST BUCKTE      MBJ20026
         ICM   WA,8,JQEFLAG2       GET SYSTEM AFFINITIES       MBJ20026
CDQCTRX3 SLL   WA,1                SHIFT FOR TEST              MBJ20026
         LTR   WA,WA               Q. AFFINITY FOR THIS SYSTEM MBJ20026
         BP    CDQCTRX4            A. NO - TRY NEXT SYSTEM     MBJ20026
         BZ    CDQCTRR             A. NO MORE - EXIT           MBJ20026
         LH    R10,CDQCPUCT(WD)    GET THIS CPU'S COUNT        MBJ20026
         LA    R10,1(,R10)         + 1                         MBJ20026
         STH   R10,CDQCPUCT(WD)    REPLACE                     MBJ20026
CDQCTRX4 SH    WD,=H'76'           DOWN TO NEXT CPU'S BUCKET   MBJ20026
         B     CDQCTRX3            AND LOOP TO TEST BIT        MBJ20026
         SPACE 2                                               MBJ20026
CDQCTRR  NULL  ,                   COUNTER FOR JQE W/ RESOURCESMBJ20026
         SR    WA,WA               CLEAR FOR INSERT            MBJ20026
         ICM   WA,8+4+2,JQERESRT   GET RESOURCE ROUTINGS       MBJ20026
CDQCTRR2 LTR   WA,WA               Q. ROUTED TO THIS RESOURCE  MBJ20026
         BP    CDQCTRR3            A. NO - TRY NEXT            MBJ20026
         BZ    CDQCTREX            A. NO MORE ROUTINGS - EXIT  MBJ20026
         LH    WD,CDQRESCT(WE)     GET COUNT FOR THIS RES      MBJ20026
         LA    WD,1(,WD)           + 1                         MBJ20026
         STH   WD,CDQRESCT(WE)     REPLACE                     MBJ20026
CDQCTRR3 LA    WE,(38*2)(,WE)      TO NEXT RESOURCE BUCKET     MBJ20026
         SLL   WA,1                SHIFT LEFT 1 FOR NEXT TEST  MBJ20026
         B     CDQCTRR2            AND LOOP THROUGH TEST       MBJ20026
         SPACE 2                                               MBJ20026
CDQCTRO  NULL  ,                   COUNTER FOR OUTPUT JQE'S    MBJ20026
         TM    JQETYPE,$OUTPUT     Q. AWAITING OUTPUT PROCESSORMBJ20026
         BZ    CDQCTRP             A. NO - TRY PRINT/PUNCH     MBJ20026
         LH    WE,CDQOUTCT            GET COUNT                MBJ20026
         LA    WE,1(,WE)              + 1                      MBJ20026
         STH   WE,CDQOUTCT            REPLACE                  MBJ20026
         B     CDQCTREX            COMMON EXIT                 MBJ20026
         SPACE 2                                               MBJ20026
CDQCTRP  NULL  ,                   COUNTER FOR PRINT/PUNCH JQE'S J20026
         TM    JQETYPE,$HARDCPY    Q. AWAITING PRINT/PUNCH     MBJ20026
         CLI   0(WD),X'FF'         Q. END OF TABLE             MBJ20026
         LA    WD,4(,WD)              ASSUME NOT... GET NEXT   MBJ20026
         BNE   CDQCTRP1            A. NO - LOOP FOR NEXT       MBJ20026
         B     CDQCTREX            A. YES-INVALID ROUTE...EXIT MBJ20026
CDQCTRP2 LH    WE,0(,WD)           GET REMOTE NUMBER           MBJ20026
CDQCTRP4 NULL  ,                   COUNTER - WE=RJE #          MBJ20026
         AR    WE,WE               * 2 = OFFSET INTO BUCKET    MBJ20026
         LH    WD,CDQPPUCT(WE)     GET COUNT                   MBJ20026
         LA    WD,1(,WD)           + 1                         MBJ20026
         STH   WD,CDQPPUCT(WE)     REPLACE                     MBJ20026
         B     CDQCTREX            COMMON EXIT                 MBJ20026
         SPACE 4                                               MBJ20026
CDQCTREX NULL  ,     *** CDQCTR COMMON EXIT ***                MBJ20026
         LM    R15,WF,CDQREGSV     RESTORE REGISTERS           MBJ20026
         B     CDQNEXT             AND LOOP THROUGH JQE CHAIN  MBJ20026
         DROP  WB                  DROP CRESAREA ADDRESSABILITY BJ20026
         EJECT                                                 MBJ20026
CDQDATA  EQU   *                                               MBJ20026
         SPACE 1                                               MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        TABLE FOR LOW/HIGH HEADER SETTINGS                  * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDQALLL  EQU   2                   $DQ,ALL     LOW/            MBJ20026
CDQALLH  EQU   94                  $DQ,ALL       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQPPUL  EQU   2                   $DQ,PPU     LOW/            MBJ20026
CDQPPUH  EQU   4                   $DQ,PPU       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQOUTL  EQU   4                   $DQ,OUT     LOW/            MBJ20026
CDQOUTH  EQU   6                   $DQ,OUT       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQCONL  EQU   14                  $DQ,CON     LOW/            MBJ20026
CDQCONH  EQU   16                  $DQ,CON       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQXEQL  EQU   22                  $DQ,XEQ     LOW/            MBJ20026
CDQXEQH  EQU   94                  $DQ,XEQ       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQRESL  EQU   22                  $DQ,RES     LOW/            MBJ20026
CDQRESH  EQU   94                  $DQ,RES       /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQSTCL  EQU   18                  $DQ,XEQSTC  LOW/            MBJ20026
CDQSTCH  EQU   20                  $DQ,XEQSTC    /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQTSUL  EQU   20                  $DQ,XEQTSU  LOW/            MBJ20026
CDQTSUH  EQU   22                  $DQ,XEQTSU    /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQHLDL  EQU   14                  $DQ,HOLD    LOW/            MBJ20026
CDQHLDH  EQU   94                  $DQ,HOLD      /HIGH         MBJ20026
         SPACE 1                                               MBJ20026
CDQHEADS EQU   COMPNTER+64,4       --- JQE HEADER OFFSETS ---  MBJ20026
CDQLOW   EQU   COMPNTER+64,2       LOW HEAD FOR JQE SCAN       MBJ20026
CDQHEADL EQU   COMPNTER+65,1       --- FOR MVI ---             MBJ20026
CDQHIGH  EQU   COMPNTER+66,2       HIGH HEAD FOR JQE SCAN      MBJ20026
CDQHEADH EQU   COMPNTER+67,1       --- FOR MVI ---             MBJ20026
         SPACE 1                                               MBJ20026
CDQCPU   EQU   COMPNTER+68,1       SYSTEM AFFINITY REQUESTED   MBJ20026
CDQFLAG  EQU   COMPNTER+69,1       FLAG BYTE                   MBJ20026
CDNFLAG  EQU   CDQFLAG             SAME FLAG FOR $DN/$DQ       MBJ20026
CDQRMLO  EQU   COMPNTER+70,1       LOW REMOTE ROUTCODE         MBJ20026
CDQRMHI  EQU   COMPNTER+71,1       HIGH REMOTE ROUTCODE        MBJ20026
         SPACE 1                                               MBJ20026
CDQREGSV EQU   COMPNTER+24,36   ---SAVE AREA FOR 9 REGISTERS   MBJ20026
CDQREG15 EQU   CDQREGSV+00,4       SAVE FOR R15                MBJ20026
CDQREG0  EQU   CDQREGSV+04,4       SAVE FOR R0                 MBJ20026
CDQREG1  EQU   CDQREGSV+08,4       SAVE FOR R1                 MBJ20026
CDQREGWA EQU   CDQREGSV+12,4       SAVE FOR WA                 MBJ20026
CDQREGWB EQU   CDQREGSV+16,4       SAVE FOR WB                 MBJ20026
CDQREGWC EQU   CDQREGSV+20,4       SAVE FOR WC                 MBJ20026
CDQREGWD EQU   CDQREGSV+24,4       SAVE FOR WD                 MBJ20026
CDQREGWE EQU   CDQREGSV+28,4       SAVE FOR WE                 MBJ20026
CDQREGWF EQU   CDQREGSV+32,4       SAVE FOR WF                 MBJ20026
         SPACE 1                                               MBJ20026
CDQBIT   EQU   X'80'     --- A $DQ WAS ISSUED                  MBJ20026
CDNBIT   EQU   X'40'     --- A $DN WAS ISSUED                  MBJ20026
CDQALL   EQU   X'20'     --- A $DQ,ALL WAS ISSUED              MBJ20026
CDQSPEC  EQU   X'10'     --- A $DQ,SID WAS ISSUED              MBJ20026
         SPACE 1                                               MBJ20026
CDQCLS   DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'         MBJ20026
         SPACE 1                                               MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        CDQDSECT - A MAPPING OF HOW THE RESIDENT            * MBJ20026
*                   WORKAREA 'CRESAREA' IS USED IN           * MBJ20026
*                   $DQ/$DN.                                 * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDQDSECT DSECT                                                 MBJ20026
CDQCONCT DS    H              --- $DQ,CON --- CONVERSION ANY   MBJ20026
CDQANYCT EQU   *              --- $DQ,XEQ --- ANY CPU          MBJ20026
         DS    38H                 1 PER CLASS + STC + TSU     MBJ20026
CDQCPUCT EQU   *              --- $DQ,XEQ --- SPECIFIC CPU     MBJ20026
         DS    (7*38)H                    38 FOR EACH CPU      MBJ20026
CDQRESCT EQU   *              --- $DQ,RES --- XEQ RESOURCE     MBJ20026
         DS    ($NOLEFT*38)H              38 FOR EACH RESOURCE MBJ20026
CDQOUTCT DS    H              --- $DQ,CON --- OUTPUT           MBJ20026
CDQPPUCT DS    41H     - $NUMRJE+1 -  --- DQ,PPU --- PRPU      MBJ20026
CDQRMTAB DS    40F     - $NUMRJE -   TABLE FOR REMOTE RTCDES   MBJ20026
CDQRMEND DS    F                   LAST ENTRY IN TABLE         MBJ20026
CDQLEN   EQU   *-CDQDSECT          DSECT LENGTH FOR CLEAR      MBJ20026
         SPACE 5                                               MBJ20026
HASPCOMA CSECT REVERT TO CSECT                                 MBJ20026
         LTORG                                                 MBJ20026
./      DELETE SEQ1=K2210000,SEQ2=K2212500                     MBJ20026
         TITLE 'HASP COMMAND PROCESSOR HASPCJB5 - JOB QUEUE DISPLAYS'
HASPCJB5 $COMGRUP DB,DF            JOB QUEUE DISPLAYS          MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        $DB   DISPLAY BACKLOG ON ALL CPU'S                  * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDB      NULL  ,                                               MBJ20026
         L     WF,=A(CRESAREA)     ADDRESS                     MBJ20026
         USING CDBWORK,WF           RESIDENT WORK AREA         MBJ20026
         USING CDBENTRY,WB         ADDRESS EACH ENTRY FROM 'WB' BJ20026
         LA    WA,CDBWORK          START OF AREA TO BE CLEARED MBJ20026
         LA    WB,CDBQWORK-CDBWORK LENGTH OF AREA TO BE CLEARED BJ20026
         SR    WD,WD               SET FROM LENGTH=0, PAD=X'00' BJ20026
         MVCL  WA,WC               CLEAR AREA TO X'00'         MBJ20026
         LA    WA,CDBQWORK-CDBWORK SET FREE POINTER            MBJ20026
         STH   WA,CDBFREE          TO INITIAL VALUE.           MBJ20026
         SPACE 4                                               MBJ20026
        $CFJSCAN PROCESS=CDBPROC,NEXT=CDBNEXT                  MBJ20026
         B     CDBPRINT            AT END, GO PRINT RESULTS    MBJ20026
CDBPROC  LA    WC,CDBBATCH         POINT TO BATCH COUNTER      MBJ20026
         CLC   JQEJOBNO,=H'10000'  Q. BATCH JOB                MBJ20026
         BL    CDBTOTAL            A. YES - GO TOTAL THEM      MBJ20026
         LA    WC,CDBSTC           POINT TO STC COUNTER        MBJ20026
         CLC   JQEJOBNO,=H'20000'  Q. STC JQE                  MBJ20026
         BL    CDBTOTAL            A. YES - GO TOTAL THEM      MBJ20026
         LA    WC,CDBTSU           A. NO - MUST BE TSU         MBJ20026
CDBTOTAL LH    WB,0(,WC)           GET CURRENT COUNT           MBJ20026
         LA    WB,1(,WB)             + 1                       MBJ20026
         STH   WB,0(,WC)           RESTORE AS NEW              MBJ20026
         TM    JQETYPE,$XEQ        Q. IN XEQ QUEUE             MBJ20026
         BO    CDBXEQ              A. YES - GO CHECK IT        MBJ20026
         TM    JQETYPE,$OUTPUT+$HARDCPY Q. IN OUTPUT STAGE     MBJ20026
         BZ    CDBNEXT             A. NO - THEN NEXT JQE       MBJ20026
         TM    JQETYPE,$OUTPUT     Q. AWAITING OUTPUT PROCESSOR BJ20026
         BO    CDBWAITO            A. YES - SAME AS AWAITING PRINT 0026
         LA    WB,CDBACTCT          POINT TO HEAD OF OUTPUT QUEUE 20026
         LR    WC,R1               SAVE JQE OVER $CFJDCT CALL  MBJ20026
        $CFJDCT ,                                              MBJ20026
         B     *+8                 NOT FOUND, AWAITING P/P     MBJ20026
         B     CDBADD              FOUND, GO ADD TO QUEUE      MBJ20026
         LR    R1,WC               RESTORE JQE POINTER         MBJ20026
CDBWAITO CLC   JQEJOBNO,=H'10000'  Q. TSU OR STC               MBJ20026
         BH    CDBWAITS            A. YES - BRANCH             MBJ20026
         SR    WE,WE              ASSUME LOCAL ROUTING         MBJ20026
         SR    WB,WB              CLEAR FOR INSERT             MBJ20026
         CLC   JQEPRTRT,=X'0100'  IS IT LOCAL                  MBJ20026
         BNH   CDBWAIT3           YES GO COUNT                 MBJ20026
         LH    WB,JQEPRTRT        GET RMT PRINT ROUTE          MBJ20026
         B     CDBWAIT0           GO COUNT                     MBJ20026
CDBWAIT0 LA    WC,HCTDSECT         GET HCT  POINTER            MBJ20026
         L     WC,($RATABLE-HCTDSECT)(,WC) GET RAT ORIGIN      MBJ20026
         USING RATDSECT,WC         ADDRESS THE RAT             MBJ20026
         LH    WE,$NUMRJE          GET # RJE FOR LOOP          MBJ20026
CDBWAIT1 CH    WB,RATROUTE         Q. ROUTED TO THIS RJE       MBJ20026
         BE    CDBWAIT2            A. YES - EXIT LOOP          MBJ20026
         LA    WC,RATEND           A. NO - TRY NEXT RAT        MBJ20026
         BCT   WE,CDBWAIT1         LOOP FOR EACH RJE           MBJ20026
         SR    WE,WE               DOESNT MATCH ANY...MAKE LOCAL J20026
         B     CDBWAIT3            AND COUNT                   MBJ20026
CDBWAIT2 SH    WE,=H'41'  -$NUMRJE+1- CALCULATE RJE # INVERSE  MBJ20026
         LCR   WE,WE               GET ABSOLUTE RJE #          MBJ20026
         AR    WE,WE               RJE # * 2 IS OFFSET         MBJ20026
CDBWAIT3 LH    WC,CDBOUTCT(WE)     GET CURRENT COUNT           MBJ20026
         LA    WC,1(,WC)           ADD 1                       MBJ20026
         STH   WC,CDBOUTCT(WE)     AND RESTORE                 MBJ20026
         B     CDBNEXT                                         MBJ20026
CDBWAITS LA    WB,CDBSTCCT         POINT TO STC COUNTER        MBJ20026
         CLC   JQEJOBNO,=H'20000'  Q. TSU                      MBJ20026
         BL    *+8                 A. NO - SKIP                MBJ20026
         LA    WB,CDBTSUCT         A. YES - POINT TO TSU COUNTER J20026
         LH    WC,0(,WB)           GET CURRENT COUTN           MBJ20026
         LA    WC,1(,WC)            Q 1                        MBJ20026
         STH   WC,0(,WB)           AND RESTORE                 MBJ20026
         B     CDBNEXT             NEXT JQE                    MBJ20026
         EJECT                                                 MBJ20026
CDBXEQ   CLC   JQEJOBNO,=H'10000'  Q. TSU OR STC               MBJ20026
         BH    CDBNEXT             A YES - DONT COUNT          MBJ20026
         SR    WB,WB               CLEAR FOR INSERT            MBJ20026
         IC    WB,JQETYPE          GET JOB CLASS               MBJ20026
         N     WB,=A(127)          CLEAR ACTIVE BIT            MBJ20026
         CLM   WB,1,=AL1($XEQ)     Q. CONVERSION               MBJ20026
         BNE   *+12                A. NO - BRANCH              MBJ20026
         LA    WB,CDBXEQCT         A. YES - CANT USE $QINDEX   MBJ20026
         B     CDBBUSY                GO CHECK BUSY BIT        MBJ20026
         IC    WB,$QINDEX(WB)      GET CLASS OFFSET(FOR HALFWORD) 20026
         AR    WB,WB               CONVERT TO FULLWORK OFFSET  MBJ20026
         BZ    CDBNEXT             SKIP IF INVALID CLASS       MBJ20026
         LA    WB,CDBXEQCT-44(WB)  POINT TO COUNTER FOR CLASS  MBJ20026
CDBBUSY  LR    WC,R1               SAVE JQE FOR CDBADD ROUTINE MBJ20026
         TM    JQEFLAGS,QUEBUSY    Q. ACTIVE SOMEWHERE         MBJ20026
         BNZ   CDBADD              A. YES - ADD TO ACTIVE QUEUE BJ20026
         LH    WC,CDBCOUNT         A. NO  - ADD TO COUNT       MBJ20026
         LA    WC,1(,WC)            + 1                        MBJ20026
         STH   WC,CDBCOUNT         AND RESTORE                 MBJ20026
         B     CDBNEXT             DO NEXT JQE                 MBJ20026
         SPACE 4                                               MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        CDBADD - ADD A JOB # TO THE QUEUE.                  * MBJ20026
*                                                            * MBJ20026
*        WB -  INPUT=POINTER TO QUEUE HEAD                   * MBJ20026
*              USAGE=BASE FOR QUEUE ENTRIES                  * MBJ20026
*        WC -  INPUT=JQE POINTER                             * MBJ20026
*              USAGE=QUEUE SCANNING                          * MBJ20026
*        WD -  JOB #                                         * MBJ20026
*        WF -  BASE FOR CDBWORK                              * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CDBADD   NULL  ,                                               MBJ20026
         LR    R1,WC               RESTORE JQE POINTER         MBJ20026
         LH    WD,JQEJOBNO         GET JOB #                   MBJ20026
CDBADD0  NULL  ,                                               MBJ20026
         LH    WC,CDBFLINK         POINT TO NEXT ENTRY         MBJ20026
         SR    WB,WF               WB=OFFSET TO HEAD           MBJ20026
CDBADDNX LTR   WC,WC               Q. END OF QUEUE             MBJ20026
         BZ    CDBADD1             A. YES - ADD AT END         MBJ20026
         LR    WB,WC               A. NO  - USE WB TO ADDRESS  MBJ20026
         LH    WC,CDBFLINK(WF)     GET NEXT ENTRY OFFSET       MBJ20026
         CH    WD,(CDBJOBNO-CDBENTRY)(WC,WF) Q. THIS JOB # FIT MBJ20026
         BNL   CDBADDNX            A. NO  - TRY NEXT ENTRY     MBJ20026
CDBADD1  NULL  ,     WB=OFFSET OF ENTRY AFTER WHICH TO ADD     MBJ20026
*                    WC=LINK(WB),THE NEXT ENTRY IN THE QUEUE   MBJ20026
         LH    WD,CDBFREE          GET A FREE ENTRY            MBJ20026
         STH   WC,(CDBFLINK-CDBENTRY)(WD,WF) LINK(NEW)=LINK(OLD) J20026
         STH   WD,(CDBFLINK-CDBENTRY)(WB,WF) LINK(OLD)=NEW     MBJ20026
         LA    WB,0(WD,WF)         POINT TO NEW ENTRY          MBJ20026
         MVC   CDBJOBNO,JQEJOBNO   MOVE JOB # INTO ENTRY       MBJ20026
         LA    WD,4(,WD)           NEW FREE POINTER            MBJ20026
         STH   WD,CDBFREE          SET IT                      MBJ20026
         B     CDBNEXT             GET NEXT JQE                MBJ20026
         EJECT                                                 MBJ20026
CDBPRINT OC    CDBXEQCT(CDBXEQLN),CDBXEQCT Q. ANY FOR XEQ      MBJ20026
         BZ    CDBOUTPR                    A. NO - TRY OUT     MBJ20026
         MVC   COMMAND(32),=CL32'AWAITING,  CLASS. JOBS EXECUTING' 0026
        $CWTO  L=32                                            MBJ20026
         SR    WC,WC               CLEAR WC                    MBJ20026
         LA    WD,CDBXEQCT         POINT TO FIRST XEQ HEADER   MBJ20026
CDBXEQPR OC    0(4,WD),0(WD)       Q. ANYTHING IN THAT CLASS Q MBJ20026
         BZ    CDBNONEX            Q. NO - TRY NEXT CLASS      MBJ20026
         MVI   COMMAND,C' '                    CLEAR           MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND  MESSAGE         MBJ20026
         LA    R9,COMMAND+18            SET LIMITS             MBJ20026
         LA    R15,COMMAND+$MAXMSG-4    FOR MESSAGE            MBJ20026
         LH    R0,(CDBCOUNT-CDBENTRY)(,WD) GET AWAITING COUNT  MBJ20026
        $CFCVE ,                                               MBJ20026
         MVC   COMMAND+2(4),COMDWORK+1 PUT INTO MESSAGE        MBJ20026
         IC    WE,CDBCLASS(WC)     GET EBCDIC CLASS            MBJ20026
         STC   WE,COMMAND+13       AND PUT INTO MESSAGE        MBJ20026
         LR    WB,WD               POINT TO ENTRY FOR ADDRESSING J20026
         SR    WB,WF               CALCULATE OFFSET            MBJ20026
CDBNJOB  LH    WB,CDBFLINK(WF)     GET NEXT QUEUE ENTRY        MBJ20026
         LTR   WB,WB               Q. END OF QUEUE             MBJ20026
         BZ    CDBWTO              A. YES - FINISH MESSAGE     MBJ20026
         LH    R0,CDBJOBNO(WF)     GET JOB #                   MBJ20026
         CH    R0,=H'10000'        Q. STC OR TSU               MBJ20026
         BL    CDBCVE              A. NO - CONVERT             MBJ20026
         SH    R0,=H'10000'        RELATIVIZE                  MBJ20026
         CH    R0,=H'10000'        Q. TSU                      MBJ20026
         BL    CDBCVE              A. NO - CONVERT             MBJ20026
         SH    R0,=H'10000'        A. YES - RELATIVIZE         MBJ20026
CDBCVE  $CFCVE ,                                               MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT JOB # IN MESSAGE        MBJ20026
         LA    R9,5(,R9)           BUMP FOR NEXT JOB #         MBJ20026
         CR    R9,R15              Q. ROOM FOR MORE            MBJ20026
         BNH   CDBNJOB             A. YES - CONTINUE SCANNING Q BJ20026
         LA    R15,COMMAND         CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         LR    R0,R9                 IN R0                     MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND CLEAR            MBJ20026
         LA    R9,COMMAND+18       RESET BOUNDARIES            MBJ20026
         LA    R15,COMMAND+$MAXMSG-4   FOR MESSAGE             MBJ20026
         B     CDBNJOB             AND CONTINUE SCANNING QUEUE MBJ20026
         SPACE 1                                               MBJ20026
CDBWTO   LA    R15,COMMAND         CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         LR    R0,R9                 IN R0                     MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
CDBNONEX LA    WD,CDBELEN(,WD)     POINT TO NEXT HEADER        MBJ20026
         LA    WC,1(,WC)           POINT TO NEXT CLASS         MBJ20026
         CH    WC,=H'37'           Q. END OF CLASSES           MBJ20026
         BL    CDBXEQPR            A. NO - CONTINUE            MBJ20026
         SPACE 1                                               MBJ20026
CDBOUTPR MVC   COMMAND(10),=CL10'OUTPUTING' TITLE              MBJ20026
         MVC   COMMAND+10(L'COMMAND-10),COMMAND+9  CLEAR MSG   MBJ20026
         LA    WB,CDBACTCT-CDBWORK GET OFFSET TO HEAD IN WB    MBJ20026
         OC    CDBACTCT,CDBACTCT   Q. ANYTHING IN OUTPUTING QUEUE 20026
         BZ    CDBAWOUT            A. NO - TRY AWAITING OUT QUEUE 20026
CDBLINE2 LA    R9,COMMAND+12            SET MESSAGE            MBJ20026
         LA    R15,COMMAND+$MAXMSG-4    LIMITS                 MBJ20026
CDBNJOB2 LH    WB,CDBFLINK(WF)     GET NEXT ENTRY              MBJ20026
         LTR   WB,WB               Q. END OF QUEUE             MBJ20026
         BZ    CDBWTO2             A. YES - FINISH MESSAGE     MBJ20026
         LH    R0,CDBJOBNO(WF)     GET JOB #                   MBJ20026
         CH    R0,=H'10000'        Q. BATCH JOB                MBJ20026
         BL    CDBCVE2             A. YES - GO CONVERT         MBJ20026
         MVI   4(R9),C'T'          IDENTIFY AS TSU             MBJ20026
         SH    R0,=H'20000'        ELIMINATE BIG NUMBERS       MBJ20026
         BP    CDBCVE2             IF +, THEN TSU              MBJ20026
         MVI   4(R9),C'S'          ELSE, IDENTIFY AS STC       MBJ20026
         AH    R0,=H'10000'        AND MAKE JOB # POSITIVE AGAIN J20026
CDBCVE2 $CFCVE ,                                               MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT JOB # INTO MESSAGE      MBJ20026
         LA    R9,6(,R9)           BUMP TO NEXT FIELD          MBJ20026
         CR    R9,R15              Q. ROOM FOR MORE            MBJ20026
         BNH   CDBNJOB2            A. YES - CONTINUE SCANNING Q BJ20026
         LA    R15,COMMAND         CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         LR    R0,R9                 IN R0                     MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         MVI   COMMAND,C' '                    CLEAR           MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND  MESSAGE         MBJ20026
         B     CDBLINE2            RESET LIMITS AND CONT SCAN  MBJ20026
         EJECT                                                 MBJ20026
CDBWTO2  LA    R15,COMMAND+12      CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         BZ    CDBAWOUT            IF 0, NO MSG                MBJ20026
         LA    R0,12(,R9)          GET TRUE LENGTH IN R0       MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         SPACE 4                                               MBJ20026
CDBAWOUT SR    WC,WC               INDEX=0                     MBJ20026
         OC    CDBOUTCT(CDBOUTLN),CDBOUTCT Q. ANY IN WAIT OUT Q BJ20026
         BZ    CDBPRTOT                    A. NO - PRINT TOTAL MBJ20026
         MVC   COMMAND(16),=CL16'AWAITING OUTPUT' TITLE        MBJ20026
         MVC   COMMAND+16(L'COMMAND-16),COMMAND+15 CLEAR MSG   MBJ20026
         LA    R9,COMMAND+17            SET MESSAGE            MBJ20026
         LA    R15,COMMAND+$MAXMSG-9    BOUNDARIES             MBJ20026
         LH    R0,CDBOUTCT(WC)     GET CENTRAL COUNT           MBJ20026
         LTR   R0,R0               Q. ANY THING FOR CENTRAL    MBJ20026
         BZ    CDBNRMT             A. NO - TRY REMOTES         MBJ20026
        $CFCVE ,                                               MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT # INTO MSG              MBJ20026
         MVC   4(6,R9),=CL6'-LOCAL'   TITLE                    MBJ20026
         LA    R9,11(,R9)          BUMP FOR NEXT AREA          MBJ20026
CDBNRMT  LA    WC,2(WC)            INDEX TO NEXT HEADER        MBJ20026
         CH    WC,=H'70'  -$NUMRJE X 2 -  Q. END OF REMOTES    MBJ20026
         BH    CDBPRSTC            A. YES - FINISH MESSAGE     MBJ20026
         LH    R0,CDBOUTCT(WC)     GET COUNT FOR REMOTE        MBJ20026
         LTR   R0,R0               Q. ANY THING FOR IT         MBJ20026
         BZ    CDBNRMT             A. NO - NEXT REMOTE         MBJ20026
        $CFCVE ,                                               MBJ20026
         MVC   0(4,R9),COMDWORK+1  PUT # INTO MSG              MBJ20026
         MVC   4(3,R9),=C'-RM'     TITLE                       MBJ20026
         LR    R0,WC               GET INDEX                   MBJ20026
         SRL   R0,1                CONVERT TO REMOTE #         MBJ20026
        $CFCVE ,                                               MBJ20026
         MVC   7(1,R9),COMDWORK+4  ASSUME 1 DIGIT REMOTE       MBJ20026
         CLI   COMDWORK+3,C' '     Q. REALLY 2 DIGITS          MBJ20026
         BE    *+10                A. 1 DIGIT - SKIP NEXT INST MBJ20026
         MVC   7(2,R9),COMDWORK+3  A. 2 DIGITS- MOVE BOTH INTO MSG 0026
         LA    R9,10(,R9)          BUMP TO NEXT AREA           MBJ20026
         CR    R9,R15              Q. ROOM FOR MORE            MBJ20026
         BNH   CDBNRMT             A. YES - NEXT REMOTE        MBJ20026
         LA    R15,COMMAND         CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         LR    R0,R9                 IN R0                     MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         MVI   COMMAND,C' '                    CLEAR           MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND  MESSAGE         MBJ20026
         LA    R9,COMMAND+17                RESET MESSAGE      MBJ20026
         LA    R15,COMMAND+$MAXMSG-9         BOUNDARIES        MBJ20026
         B     CDBNRMT             AND CONTINUE SCANNING QUEUE MBJ20026
CDBPRSTC LH    R0,CDBSTCCT         GET TOTAL STC'S             MBJ20026
         LTR   R0,R0               Q. ZERO                     MBJ20026
         BZ    CDBPRTSU            A. YES - PRINT TSU          MBJ20026
         MVC   4(4,R9),=C'-STC'    SUB-TITLE                   MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   0(4,R9),COMDWORK+1   INTO MESSAGE               MBJ20026
         LA    R9,9(,R9)           BUMP TO NEXT FIELD          MBJ20026
CDBPRTSU LH    R0,CDBTSUCT         GET TOTAL TSU'S             MBJ20026
         LTR   R0,R0               Q. ZERO                     MBJ20026
         BZ    CDBWTO3             A. YES - WRITE THE MESSAGE  MBJ20026
         MVC   4(4,R9),=C'-TSU'    SUB-TITLE                   MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   0(4,R9),COMDWORK+1   INTO MESSAGE               MBJ20026
         LA    R9,8(,R9)           TO END OF MESSAGE           MBJ20026
CDBWTO3  LA    R15,COMMAND+17      CALCULATE                   MBJ20026
         SR    R9,R15               LENGTH                     MBJ20026
         BZ    CDBPRTOT            IF 0, NO MSG                MBJ20026
         LA    R0,17(,R9)          GET TRUE LENGTH IN R0       MBJ20026
        $CWTO  L=(R0)                                          MBJ20026
         SPACE 4                                               MBJ20026
CDBPRTOT MVC   COMMAND(39),=C'TOTAL JOBS     -BATCH     -STC     -TSU'
         LH    R0,CDBBATCH         GET BATCH COUNT             MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   COMMAND+11(4),COMDWORK+1  INTO MESSAGE          MBJ20026
         LH    R0,CDBSTC           GET STC TOTAL               MBJ20026
        $CFCVE ,                   CONVERT TO EBCDIC           MBJ20026
         MVC   COMMAND+22(4),COMDWORK+1  INTO MESSAGE          MBJ20026
         LH    R0,CDBTSU           GET TSU TOTAL               MBJ20026
$MAXMSG  EQU   44                  MAXIMUM MESSAGE LENGTH      MBJ20026
CDBENTRY DSECT                                                 MBJ20026
CDBJOBNO DS    0H                  JOB #                       MBJ20026
CDBCOUNT DS    H                   COUNT, IF AWAITING          MBJ20026
CDBFLINK DS    H                   OFFSET TO NEXT ENTRY IN Q   MBJ20026
CDBELEN  EQU   *-CDBENTRY          ENTRY LENGTH                MBJ20026
         SPACE 3                                               MBJ20026
CDBWORK  DSECT                                                 MBJ20026
CDBFREE  DS    H                   OFFSET TO FIRST FREE ELEMENT BJ20026
CDBSTCCT DS    H                   STC'S AWAITING OUT          MBJ20026
CDBTSUCT DS    H                   TSU'S AWAITING OUT          MBJ20026
CDBACTCT DS    F       HEADER ENTRY FOR ACTIVE OUTPUTING       MBJ20026
CDBOUTCT DS    36H  -$NUMRJE+1-   COUNTERS FOR AWAITING OUT    MBJ20026
CDBOUTLN EQU   *-CDBOUTCT          LENGTH OF COUNTER AREA      MBJ20026
CDBXEQCT DS    37F     HEADER ENTRY FOR 36 CLASSES + '*'       MBJ20026
CDBXEQLN EQU   *-CDBXEQCT          LENGTH OF COUNTER AREA      MBJ20026
CDBBATCH DS    H                   TOTAL BATCH JOBS            MBJ20026
CDBSTC   DS    H                   TOTAL STC                   MBJ20026
CDBTSU   DS    H                   TOTAL TSU                   MBJ20026
CDBQWORK DS    0F        BEGINNING OF AREA FOR QUEUE ENTRIES   MBJ20026
         DROP  WF,WB               DROP LOCAL ADDRESSING       MBJ20026
HASPCOMA CSECT           REVERT TO CSECT HASPCOMA              MBJ20026
         EJECT                                                 MBJ20026
HASPCJB2 $COMGRUP AJ,AS,AT,CJ,CS,CT,DJ,DS,DT,EJ,HJ,HS,HT,IJ,LJ,LS,LT, 6C
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        DISPLAY JOBCARD AND JES CONTROL CARDS FOR A JOB     * MBJ20026
*        $QJX    $QJX-X   $QJX,X,X,X,X                       * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
CQJ      DS    0H                                              MBJ20026
         STM   WA,WE,COMREGSV+4    SAVE REGISTERS.             MBJ20026
         MVI   COMMAND,X'40'       CLEAR FIRST CHACACTER       MBJ20026
         MVC   COMMAND+1(L'COMMAND-1),COMMAND CLEAR REST.      MBJ20026
         MVC   COMMAND(3),=C'JOB'  SHOW JOB.                   MBJ20026
         LH    R0,JQEJOBNO         GET JOB NO.                 MBJ20026
         $CFCVE VALUE=(R0)         CONVERT IT.                 MBJ20026
         MVC   COMMAND+3(5),COMDWORK MOVE TO MESSAGE.          MBJ20026
         MVI   COMMAND+8,C'#'     DEFAULT PRINT                MBJ20026
         MVC   COMMAND+10(8),JQEJNAME MOVE IN JOBNAME          MBJ20026
         CLI   JQETYPE,$PURGE     IS IT AWAITING PURGE         MBJ20026
         BE    CLCNOTXQ            YES, CANNOT $QJ IT.         MBJ20026
         TM    JQETYPE,$XEQ        IS IT IN EXECUTION Q?       MBJ20026
         BO    *+8                YES. BYPASS PRT INDICATOR    MBJ20026
         MVI   CLCJOBS1,C'P'      SHOW FOR PRINT               MBJ20026
         CLC   JQEJOBNO,=H'10000'  JOB IN NORMAL BATCH RANGE   MBJ20026
         BNL   CLCNOTXQ            NO, CANNOT $QJ STC,TSU JOB  MBJ20026
*    AT THIS POINT WE HAVE FINALLY AGREED WE HAVE A VALID JQE. MBJ20026
         MVI   CLCJOBSW,0          SET TO NO JOBCARD FOUND     MBJ20026
         L     WA,=A(CRESAREA)     POINT TO RESIDENT WORK AREA MBJ20026
         ST    WA,COMREGSV         SAVE FOR LATER.             MBJ20026
         LA    WB,4095             LENGTH TO CLEAR.            MBJ20026
         LA    WC,=C' '            SET TO MOVE SPACES.         MBJ20026
         LA    WD,1                LENGTH OF FROM FIELD.       MBJ20026
         ICM   WD,8,=C' '          FILL CHARACTER.             MBJ20026
         MVCL  WA,WC               SPACE OUT CRESAREA.         MBJ20026
         CLI   CLCJOBS1,C'P'      IS IT FOR PRINT              MBJ20026
         BE    CLCPRT1            YES FORGET JOBCLASS          MBJ20026
         MVC   COMMAND+8(1),JQETYPE MOVE IN JOBCLASS           MBJ20026
         OI    COMMAND+8,X'80'     MAKE PRINTABLE              MBJ20026
CLCPRT1  EQU   *                                               MBJ20026
         MVI   COMMAND+18,C' '     BLANK ANOTHER CHARACTER     MBJ20026
         LR    WA,R1               SAVE JQE ADDRESS.           MBJ20026
         LA    WB,PCEDADCT         POINT TO DA DCT.            MBJ20026
         $GETBUF CLCNOBUF          GET A BUFFER FOR I/O        MBJ20026
         LR    WC,R1               SAVE BUFFER ADDRESS         MBJ20026
         USING BUFDSECT,WC         ADDRESS BUFFER.             MBJ20026
         MVI   PCEDEVTP,PCEDARD    INDICATE READ REQUEST       MBJ20026
         ST    WC,PCEBUFAD         SET BUFFER ADDRESS          MBJ20026
         L     R15,QUETRAK(WA)     GET JCT TRACK ADDRESS       MBJ20026
         ST    R15,PCESEEK         SET TRACK ADDRESS           MBJ20026
         LA    R15,IOBCCW1         START OF CCW'S              MBJ20026
         ST    R15,IOBSTART        STORE IN BUFFER             MBJ20026
         $EXCP (WB)                READ IN THE JCT             MBJ20026
CLCEXCP1 $WAIT IO                  WAIT FOR COMPLETION         MBJ20026
         TM    BUFECBCC,X'7F'      TEST COMPLETION             MBJ20026
         BZ    CLCEXCP1            NOT COMPLETE, GO WAIT.      MBJ20026
         BM    CLCIOERR            IO ERROR INDICATED          MBJ20026
*    AT THIS POINT WE HAVE SUCCESSFULLY READ THE JCT.          MBJ20026
         LR    JCT,WC              PUT JCT ADDR IN JCT REG.    MBJ20026
         USING JCTDSECT,JCT       ADDRESS THE JCT              MBJ20026
         L     R0,$JOBQPTR         GET ADDR OF HASP JOBQ       MBJ20026
         AL    R0,JCTJQE           ADD JQE OFFSET FROM JCT     MBJ20026
         CLR   R0,WA               TEST JCT VALIDITY.          MBJ20026
         BNE   CLCIOERR            BR IF INVALID.              MBJ20026
*    AT THIS POINT WE HAVE A VALID JCT FOR THE JOB.            MBJ20026
         CLI   CLCJOBS1,C'P'      IS IT FOR PRT                MBJ20026
         BE    CQJPRT             YES. GO PROCESS JCT          MBJ20026
         L     R15,JCTIOT          GET FIRST IOT TRAK ADDR     MBJ20026
         ST    R15,PCESEEK         SET FOR READ.               MBJ20026
         $EXCP (WB)                READ IN IOT                 MBJ20026
CLCEXCP2 $WAIT IO                  WAIT FOR COMPLETION         MBJ20026
         TM    BUFECBCC,X'7F'      TEST COMPLETION.            MBJ20026
         BZ    CLCEXCP2            NOT COMPLETE GO WAIT AGAIN. MBJ20026
         BM    CLCIOERR            IO ERROR INDICATED.         MBJ20026
*    AT THIS POINT WE HAVE SUCCESSFULLY READ THE IOT.          MBJ20026
*    NOW ATTEMPT TO GET INPUT PDDB S.                          MBJ20026
         L     JCT,$IOTPDDB       POINT TO                     MBJ20026
         LA    JCT,IOTPDBOJ(JCT,WC)  JCL PDDB                  MBJ20026
         L     R15,PDBMTTR-PDBDSECT(JCT) POINT TO JCL TRACK    MBJ20026
CLCEXCPL ST    R15,PCESEEK         SET FOR READ                MBJ20026
         $EXCP (WB)                READ THE PDDB.              MBJ20026
CLCWAIT  $WAIT IO                  WAIT FOR POST.              MBJ20026
         TM    BUFECBCC,X'7F'      GOOD COMPLETION.            MBJ20026
         BZ    CLCWAIT             NOT COMPLETE GO WAIT.       MBJ20026
         BM    CLCIOERR            IO ERROR INDICATED          MBJ20026
*   AT THIS POINT WE HAVE A PDDB FOR THE JOB.                  MBJ20026
         LA    WD,BUFSTART+10      POINT TO DATA.              MBJ20026
         SR    WE,WE               CLEAR FOR WORK              MBJ20026
CLCGETCD IC    WE,0(,WD)           GET LENGTH                  MBJ20026
         CLI   CLCJOBSW,1          JOB CARD FOUND?             MBJ20026
         BNE   CLCJOBCD            NO, GO DO IT.               MBJ20026
         CLC   3(3,WD),=C'//*'     IT JES CONTROL CARD.        MBJ20026
         BNE   CLCNEXTC            NO, IGNORE IT.              MBJ20026
         LA    R15,CLCTABEN        NO. OF ENTRIES IN TABLE     MBJ20026
         LA    R14,CLCTABST        BEGINNING OF TABLE.         MBJ20026
*    AT THIS POINT WE HAVE A JES CONTROL CARD. SEARCH TABLE.   MBJ20026
CLCLOOP  CLC   6(4,WD),0(R14)      HIT?                        MBJ20026
         BE    CLCJESCD            YES, GO PROCESS             MBJ20026
         LA    R14,7(,R14)         BUMP POINTER                MBJ20026
         BCT   R15,CLCLOOP         TRY AGAIN.                  MBJ20026
CLCNEXTC LA    WD,3(WD,WE)         POINT TO NEXT CARD          MBJ20026
         CLI   0(WD),X'FF'         END OF BUFFER               MBJ20026
         BE    CLCNEXTB            YES, GET NEXT ONE.          MBJ20026
         CLI   1(WD),X'FF'         TEST NEXT BYTE FOR END.     MBJ20026
         BE    CLCNEXTB            YES, GET NEXT ONE.          MBJ20026
         B     CLCGETCD            DO NEXT CARD.               MBJ20026
CLCJOBCD DS    0H                                              MBJ20026
         MVI   CLCJOBSW,1          SHOW JOB CARD DONE.         MBJ20026
CLCJESCD L     R15,COMREGSV        PICKUP OUTPUT POINTER       MBJ20026
         BCTR  WE,0                DOWN ONE FOR COMPARE.       MBJ20026
         EX    WE,CQJMVCRD         MOVE CARD FOR DESIRED LENGTH BJ20026
         LA    WE,1(WE)            BACK UP ONE.                MBJ20026
         LA    R15,70(R15)         POINT TO NEXT SLOT.         MBJ20026
         ST    R15,COMREGSV        SAVE IT.                    MBJ20026
         B     CLCNEXTC            GO GET NEXT CARD.           MBJ20026
CLCNEXTB DS    0H                                              MBJ20026
         ICM   R15,15,HDBNXTRK      NEXT BUFFER ADDRESS        MBJ20026
         BNZ   CLCEXCPL            END OF CHAIN IF ZERO        MBJ20026
         L     R15,COMREGSV        GET SAVE POINTER.           MBJ20026
         MVI   0(R15),X'FF'        SHOW END OF CARDS.          MBJ20026
         L     WD,=A(CRESAREA)     POINT TO BEGINNING OF CARDS MBJ20026
         ST    WA,COMREGSV         SAVE Q POINTER.             MBJ20026
*    AT THIS POINT WE HAVE PROCESSED ALL CARDS AND ARE READY   MBJ20026
*    TO PRINT THEM TO OPERATOR.                                MBJ20026
CLCPRTCD MVC   COMMAND+10(70),0(WD) MOVE IN A CARD             MBJ20026
         LA    R0,80               MESSAGE LENGTH              MBJ20026
         $CWTO L=(R0)              WTO IT.                     MBJ20026
         LA    WD,70(WD)           POINT TO NEXT CARD          MBJ20026
         CLI   0(WD),X'FF'         END OF CARDS.               MBJ20026
         BNE   CLCPRTCD            NO, GO PRINT OTHER CARD     MBJ20026
*                                                              MBJ20026
CLCCLEAN $FREEBUF (WC)             FREE THE BUFFER.            MBJ20026
CQJREST  LM    R1,WE,COMREGSV      RESTORE Q POINTER & REGS 2-6MBJ20026
         B     CAJNEXT             GO GET NEXT JOB.            MBJ20026
         SPACE 2                                               MBJ20026
CLCNOBUF DS    0H                                              MBJ20026
         $CRET MSG=CLCBUFNO,L=L'CLCBUFNO RETURN TO BUFFER      MBJ20026
         SPACE 1                                               MBJ20026
CLCIOERR DS    0H                                              MBJ20026
         ST    WA,COMREGSV         SAVE Q POINTER.             MBJ20026
         $IOERROR (WC)             IO ERROR MESSAGE.           MBJ20026
         MVC   COMMAND+5(L'CLCERROR),CLCERROR MOVE ERROR MSG.  MBJ20026
         LA    R0,L'CLCERROR+6     SET LENGTH                  MBJ20026
         $CWTO L=(R0)              WTO IT.                     MBJ20026
         B     CLCCLEAN            GO CLEAN UP FOR NEXT JOB    MBJ20026
         SPACE 1                                               MBJ20026
CQJPRT   EQU   *                                               MBJ20026
         MVC   COMMAND+19(21),PRTMSG MOVE SKELETON RESPONSE    MBJ20026
         MVC   COMMAND+42(21),PUNMSG MOVE SKELETON RESPONSE    MBJ20026
         L     R15,JCTLINES       GET # OF LINES FROM JCT      MBJ20026
         CVD   R15,QJWORK         CONVERT TO DECIMAL           MBJ20026
         ED    COMMAND+19(10),QJWORK+4 EDIT INTO MSG AREA      MBJ20026
         L     R15,JCTPUNCH       GET # OF CARDS FROM JCT      MBJ20026
         CVD   R15,QJWORK         CONVERT TO DECIMAL           MBJ20026
         ED    COMMAND+42(10),QJWORK+4 EDIT INTO MSG AREA      MBJ20026
         LA    R0,80              SHOW LENGTH                  MBJ20026
         $CWTO L=(R0)             WTO IT                       MBJ20026
         B     CLCCLEAN           GO RETURN                    MBJ20026
CLCNOTXQ DS    0H                                              MBJ20026
         ST    R1,COMREGSV         SAVE Q POINTER.             MBJ20026
         MVC   COMMAND+19(L'CLCNOTEX),CLCNOTEX ERROR MESSAGE   MBJ20026
         LA    R0,L'CLCNOTEX+19    SET LENGTH                  MBJ20026
         $CWTO L=(R0)              WTO IT.                     MBJ20026
         B     CQJREST             GO CLEANUP AND LEAVE.       MBJ20026
         SPACE 3                                               MBJ20026
PRTMSG   DC    X'40206B2020206B202120',CL11'PRINT LINES'       MBJ20026
PUNMSG   DC    X'40206B2020206B202120',CL11'PUNCH CARDS'       MBJ20026
CLCJOBSW EQU   COMEWORK,1          JOB CARD SWITCH.            MBJ20026
CLCJOBS1 EQU   COMEWORK+1,1       PRINT JOB INDICATOR          MBJ20026
QJWORK   EQU   COMDWORK,8         JCT VALUE WORK AREA          MBJ20026
CLCTABST DS    0H                  TABLE START.                MBJ20026
         DC    CL7'ROUTE'          POSSIBLE                    MBJ20026
         DC    CL7'MESSAGE'          CURRENT                   MBJ20026
         DC    CL7'OUTPUT'             JES2                    MBJ20026
         DC    CL7'JOBPARM'              SHRSPL                MBJ20026
         DC    CL7'CNTL'                   CONTROL             MBJ20026
         DC    CL7'BEFORE'                   CARD              MBJ20026
         DC    CL7'AFTER'                      TABLE.          MBJ20026
CLCTABEN EQU   (*-CLCTABST)/7      NO. OF ENTRIES IN TABLE.    MBJ20026
CLCERROR DC    C'I/O ERROR, $QJ ABORTED *' ERROR MESSAGE       MBJ20026
CLCBUFNO DC    C'NO BUFFER AVAILABLE, TRY $QJ AGAIN' NOBUF MSG MBJ20026
CLCNOTEX DC    C' IS TSU, STC, OR NOT EXEC.'                   MBJ20026
*                                                              MBJ20026
*                                                              MBJ20026
*     *********   EXECUTE ONLY.     $$$$$$$$$$$$$$             MBJ20026
CQJMVCRD MVC   0(*-*,R15),3(WD)    MOVE IN CARD.               MBJ20026
         DROP  WC                  GIVE UP ADDRESS.            MBJ20026
         DROP  JCT                GIVE UP ADDRESS              MBJ20026
         EJECT                                                 MBJ20026
./   DELETE SEQ1=K5430000,SEQ2=K5430500                        MBJ20026
         TITLE 'HASP COMMAND PROCESSOR - HASPCRES - RESOURCE CONTROL   C
               COMMANDS'
HASPCRES $COMGRUP DC,DR,QA,QD  RESOURCE TABLE COMMANDS         MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        RESOURCE TABLE SUBPROCESSOR                         * MBJ20026
*                                                            * MBJ20026
* FORM 1-$QX RES,SID                                         * MBJ20026
*              = HASP VERB CODE (RESOURCE Q)                 * MBJ20026
*        X     = OPERATION (A-ATTACH,D=DETACH                * MBJ20026
*        RES   = RESOURCE (REQ'D) - ANY VALID JES2 RESOURCE  * MBJ20026
*        SID   = SYSTEM ID (OPTIONAL) - ANY VALID CPU ID     * MBJ20026
*                   IN FORM 68#X                             * MBJ20026
*        DEFAULTS                                            * MBJ20026
*              SID=SYSTEM IN WHICH COMMAND WAS ISSUED        * MBJ20026
*                                                            * MBJ20026
* FORM 2-$DX SID                                             * MBJ20026
*        $D    = HASP VERB CODE (DISPLAY)                    * MBJ20026
*        X     = OPERATION (R-RESOURCE,C=CONFLICT)           * MBJ20026
*              = 'C'  DISPLAY JOBS WITH RESOURCE ROUTINGS    * MBJ20026
*                     INCOMPATIBLE WITH ANY CPU.             * MBJ20026
*              = 'R'  DISPLAY THE RESOURCES ATTACHED TO      * MBJ20026
*                     THE SPECIFIED CPU.                     * MBJ20026
*        SID   = SAME AS FORM1.(ONLY FOR $DR), OR 'ALL'      * MBJ20026
*        DEFAULTS                                            * MBJ20026
*              SID=ALL ACTIVE CPUS                           * MBJ20026
*                                                            * MBJ20026
*        NOTES - $Q COMMAND EXIT NORMALLY WITH A BRANCH      * MBJ20026
*                EXIT TO $DR.AND $DC                         * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
         SPACE 1                                               MBJ20026
CQA      NULL  ,         $QA RESOURCE                          MBJ20026
         OI    CQFLAG,CQATTACH     SET ATTACH RESOURCE FLAG    MBJ20026
         B     CQPROC              AND PROCESS                 MBJ20026
CQD      NULL  ,         $QD RESOURCE                          MBJ20026
         OI    CQFLAG,CQDETACH     SET DETACH RESOURCE FLAG    MBJ20026
CQPROC   NULL  ,         COMMON $RESTAB UPDATE                 MBJ20026
         BXH   WD,WE,CQ0OPER       Q. ANY OPERANDS             MBJ20026
         LM    WA,WB,0(WD)         A. YES GET THEM IN REGS     MBJ20026
         LR    WC,WB                  WC=2ND OPER              MBJ20026
         SR    WC,WA                  WC=LENGTH 1ST OPER + 1   MBJ20026
         BCTR  WC,0                   WC=LENGTH 1ST OPER       MBJ20026
         BCTR  WC,0                   WC=VALUE FOR MVC         MBJ20026
         LA    R1,7                MAXIMUM LENGTH              MBJ20026
         NR    WC,R1               GUARANTEE LENGTH LE 8       MBJ20026
         MVI   CQRESNAM,C' '       CLEAR RESOURCE              MBJ20026
         MVC   CQRESNAM+1(7),CQRESNAM  NAME TO BLANKS          MBJ20026
         EX    WC,CQRESMVC         MOVE RESOURCE IN            MBJ20026
*    NOW HAVE FIRST OPERAND (RESOURCE NAME) AT CQRESNAM        MBJ20026
         MVC   CQCPUID(4),$SID     SET DEFAULT SYSTEM ID       MBJ20026
         L     WA,$QSE1            GET FIRST QSE               MBJ20026
         BXH   WD,WE,CQ1OPER       Q. ANOTHER OPERAND          MBJ20026
*                                  A. NO - USE DEFAULT         MBJ20026
         CLC   0(3,WB),$SID        Q. FORM 68#X                MBJ20026
         BNE   CQINVCPU            A. NO - ERROR - BRANCH      MBJ20026
         MVC   CQCPUID(4),0(WB)    A. YES- USE AS CPU ID       MBJ20026
         SPACE 1                                               MBJ20026
CQ1OPER  SR    WC,WC               CLEAR WC                    MBJ20026
         IC    WC,CQCPUID+3        GET 68#.IN EBCDIC           MBJ20026
         LA    WB,7                GET MAXIMUM CPU             MBJ20026
         NR    WC,WB               STRIP DOWN TO BINARY CPU    MBJ20026
         BCTR  WC,0                RELATIVE CPU #              MBJ20026
         MH    WC,CQQSELEN         OFFSET TO QSE               MBJ20026
CQQSELEN EQU   CDRQSELN            =H'QSELNGTH'                MBJ20026
         ALR   WC,WA               ADD TO GET REAL POINTER     MBJ20026
         USING QSEDSECT,WC         AND ESTABLISH ADDRESSABILITYMBJ20026
         CLC   CQCPUID(4),QSESID   Q. IS CPU ACTIVE            MBJ20026
         BNE   CQINVCPU            A. NO - ERROR - BRANCH      MBJ20026
         SPACE 1                                               MBJ20026
         LA    R15,$NOLEFT         GET # OF RESOURCES          MBJ20026
         L     R1,CQHIBIT          GET X'80000000' IN R1       MBJ20026
         LA    WA,$RESTAB          GET RESOURCE TABLE          MBJ20026
CQRESLOP CLC   CQRESNAM(8),0(WA)   Q. MATCH TABLE ENTRY        MBJ20026
         BE    CQRESMAT            A. YES-BRANCH OUT OF LOOP   MBJ20026
         SRL   R1,1                A. NO -MOVE BIT OVER 1      MBJ20026
         LA    WA,$RESLEN(,WA)        POINT TO NEXT TABLE ENTRYMBJ20026
         BCT   R15,CQRESLOP           AND LOOP THROUGH TABLE   MBJ20026
         B     CQINVRES            NOT FOUND-INVALID RESOURCE  MBJ20026
         SPACE 1                                               MBJ20026
CQRESMAT LR    WD,R1               SAVE RESOURCE ID            MBJ20026
         L     WE,QSERESTB         GET CURRENT RESOURCES       MBJ20026
         TM    CQFLAG,CQATTACH     Q. RESOURCE BEING ATTACHED  MBJ20026
         BO    CQADDRES            A. YES - BRANCH             MBJ20026
         NR    WD,WE               Q. RESOURCE ALREADY DETACHEDMBJ20026
         BZ    CQEXIT              A. YES - DONT ALTER CKPT    MBJ20026
         $QSUSE  ,                    GET CKPT RECORD          MBJ20026
         X     R1,QSERESTB         TURN OFF RESOURCE BIT       MBJ20026
         STCM  R1,8+4+2,QSERESTB   AND PUT BACK IN QSE         MBJ20026
         B     CQEXIT              AND EXIT FROM $QD           MBJ20026
         SPACE 1                                               MBJ20026
CQADDRES NR    WD,WE               Q. RESOURCE ALREADY ATTACHEDMBJ20026
         BNZ   CQEXIT              A. YES-DONT ALTER CKPT      MBJ20026
         $QSUSE  ,                    GET CKPT RECORD          MBJ20026
         O     R1,QSERESTB            TURN ON RESOURCE BIT     MBJ20026
         STCM  R1,8+4+2,QSERESTB      AND REPLACE IN QSE       MBJ20026
         B     CQEXIT              EXIT FROM $QA               MBJ20026
         DROP  WC                  DROP QSE ADDRESSABILITY     MBJ20026
         SPACE 1                                               MBJ20026
CQ0OPER  $CRET MSG='NO OPERANDS'                               MBJ20026
         SPACE 1                                               MBJ20026
CQINVCPU $CRET MSG='INVALID SYSTEM ID'                         MBJ20026
         SPACE 1                                               MBJ20026
CQINVRES $CRET MSG='INVALID RESOURCE'                          MBJ20026
         SPACE 1                                               MBJ20026
CQEXIT   $POST $HASPECF,JOB POST CPUS-NEW SYSTEM CONFIGURATION MBJ20026
         OI    CQFLAG,CQCMD        TELL $DR THAT WERE COMING   MBJ20026
         B     CDRENTRY            BRANCH ENTER $DR            MBJ20026
         SPACE 1                                               MBJ20026
*                                                              MBJ20026
* LOCAL DEFINITIONS FOR $QA AND $QD.                           MBJ20026
*                                                              MBJ20026
*     EXECUTE INSTRUCTIONS                                     MBJ20026
CQRESMVC MVC   CQRESNAM(0),0(WA)   VARIABLE RESOURCE NAME MOVE MBJ20026
*                                                              MBJ20026
*     FLAGS & FIELDS                                           MBJ20026
CQCPUID  EQU   COMEWORK,4          CPU ID                      MBJ20026
CQRESNAM EQU   COMDWORK,8          RESOURCE NAME               MBJ20026
CQFLAG   EQU   COMNULOP,1          FLAG BYTE                   MBJ20026
CQATTACH EQU   128                 BIT0                        MBJ20026
CQDETACH EQU   64                  BIT1                        MBJ20026
CQCMD    EQU   32                  BIT2                        MBJ20026
         DS    0F                                              MBJ20026
CQHIBIT  DC    X'80000000'                                     MBJ20026
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        DISPLAY RESOURCES ATTACHED TO EACH CPU.             * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
CDR      NULL  ,         DISPLAY RESOURCES                     MBJ20026
         MVC   CDRCPULO(4),=C'68#0' DEFAULT CPU IS 'ALL'       MBJ20026
         BXH   WD,WE,CDRENTRY      IF NO OPERANDS BR.          MBJ20026
         L     WD,0(WD)            GET FIRST OPERAND           MBJ20026
         CLC   0(3,WD),=C'ALL'     Q. REQUEST ALL              MBJ20026
         BE    CDRENTRY            A. YES - ALREADY SET UP     MBJ20026
         CLC   0(3,WD),CDRCPULO    Q. FORM 68#                 MBJ20026
         BNE   CDRINVCP            A. NO - INVALID CPU         MBJ20026
         MVC   CDRCPULO(4),0(WD)   A. YES- SET UP FOR DISPLAY  MBJ20026
CDRENTRY MVC   CDRCPUHI(4),CDRCPULO   SET HIGH=LOW             MBJ20026
         CLI   CDRCPULO+3,C'0'     Q. ALL SPECIFIED            MBJ20026
         BNE   CDRSETUP            A. NO - START DISPLAY       MBJ20026
         MVI   CDRCPULO+3,C'1'        ALL - LOW=1              MBJ20026
         MVI   CDRCPUHI+3,C'8'        ALL - HIGH=8             MBJ20026
CDRSETUP L     WD,$QSE1            GET FIRST QSE               MBJ20026
         MVI   COMMAND,C' '             CLEAR                  MBJ20026
         MVC   COMMAND+1(133),COMMAND   BUFFER                 MBJ20026
         USING QSEDSECT,WD                                     MBJ20026
         SR    WA,WA               CLEAR WA                    MBJ20026
         LA    WE,7                GET MASK FOR CPUID          MBJ20026
         IC    WA,CDRCPUHI+3       GET CPU ID (HIGH)           MBJ20026
         BCTR  WA,0                MAKE IT RELATIVE TO 0       MBJ20026
         NR    WA,WE               MASK OFF ZONE               MBJ20026
         MH    WA,CDRQSELN         CONVERT TO OFFSET           MBJ20026
         LA    WF,0(WA,WD)         WF=HIGH QSE                 MBJ20026
         SR    WA,WA               CLEAR WA                    MBJ20026
         IC    WA,CDRCPULO+3       GET CPU ID (LOW)            MBJ20026
         BCTR  WA,0                MAKE RELATIVE TO 0          MBJ20026
         NR    WA,WE               MASK OFF ZONE               MBJ20026
         MH    WA,CDRQSELN         CONVERT TO OFFSET           MBJ20026
         LA    WD,0(WA,WD)         WD=LOW QSE                  MBJ20026
         LA    WE,QSELNGTH         WD/WE/WF SETUP FOR BXLE LOOPMBJ20026
CDRQSELN EQU   *-2       USE LAST HALF OF INST FOR HALFWORD    MBJ20026
*                        MULTIPLIER IN ABOVE INSTRUCTIONS.     MBJ20026
         LA    WA,$RESTAB          GET RESOURCE TABLE FIRST    MBJ20026
         LA    WB,$NOLEFT*$RESLEN(,WA)  AND LAST ENTRIES       MBJ20026
         LR    WC,WA               SAVE TABLE START            MBJ20026
CDRLOOP0 MVI   COMMAND+5,C'-'                                  MBJ20026
         LA    R15,COMMAND+7       FIRST RESOURCE IN MSG       MBJ20026
         MVC   COMMAND(4),QSESID   MOVE CPUID IN               MBJ20026
         CLC   QSESID(3),$SID      Q. ACTIVE CPU               MBJ20026
         BNE   CDRNEQSE            A. NO - NEXT QSE            MBJ20026
         SPACE 1                                               MBJ20026
         SR    R1,R1               CLEAR R1                    MBJ20026
         ICM   R1,8+4+2,QSERESTB   GET RESOURCE FLAGS          MBJ20026
CDRBRC   BP    CDRNORES            THIS RESOURCE NOT ATTACHED  MBJ20026
         BZ    CDRWRITE            NO MORE RESOURCES           MBJ20026
         MVC   0(8,R15),0(WA)      MOVE RESOURCE NAME          MBJ20026
         LA    R15,$RESLEN+1(,R15) NEXT OUTPUT AREA            MBJ20026
CDRNORES LA    WA,$RESLEN(,WA)     NEXT RESOURCE               MBJ20026
         SLL   R1,1                CHECK NEXT BIT              MBJ20026
         LTR   R1,R1               SET CONDITION CODE.         MBJ20026
         B     CDRBRC              BRANCH TO CHECKER           MBJ20026
CDRWRITE LA    R1,COMMAND          ADDRESS OF COMMAND          MBJ20026
         SR    R15,R1              CALCULATE MSG LENGTH        MBJ20026
         LR    R0,R15              LENGTH IN 0                 MBJ20026
         $CWTO L=(R0)              REPLY TO OPERATOR           MBJ20026
CDRNEQSE LR    WA,WC               RESTORE $RESTAB START       MBJ20026
*                                                              MBJ20026
*                                                              MBJ20026
CDRCPULO EQU   COMEWORK,4          SID OF START CPU FOR $DR    MBJ20026
CDRCPUHI EQU   COMDWORK,4          SID OF END CPU FOR $DR      MBJ20026
CDRFLAG  EQU   COMNULOP,1          FLAG BYTE                   MBJ20026
         EJECT                                                 MBJ20026
************************************************************** MBJ20026
*                                                            * MBJ20026
*        SCAN JOBQ FOR JOBS WHOSE RESOURCE ROUTINGS          * MBJ20026
*        CANNOT BE FULFILLED BY ANY CPU.                     * MBJ20026
*                                                            * MBJ20026
************************************************************** MBJ20026
CDC      NULL  ,                                               MBJ20026
         USING JQEDSECT,R1        ADDRESS THE JQE              MBJ20026
         MVI   CDCFLAG,0           SET FLAGS OFF               MBJ20026
         $CFJSCAN PROCESS=CDCUSE,NEXT=CDCJQE   SCAN JOB QUEUE  MBJ20026
         TM    CDCFLAG,CDCCONF     Q. DID ANY CONFLICTS EXIT   MBJ20026
         BO    CDC2RET             A. YES-BRANCH               MBJ20026
CDC1RET  $CRET MSG='$ NO CONFLICTS EXIST'                      MBJ20026
CDC2RET  $CRET MSG='$ END OF CONFLICTS'                        MBJ20026
         SPACE 1                                               MBJ20026
CDCUSE   TM    JQEFLAGS,QUEBUSY    Q. IS JOB EXECUTING         MBJ20026
         BNZ   CDCJQE              A. YES-NEXT JQE             MBJ20026
         TM    JQETYPE,$XEQ        Q. AWAITING XEQ             MBJ20026
         BZ    CDCJQE              A. NO-NEXT JQE              MBJ20026
         CLI   JQETYPE,$XEQ        JOB IN CONVERTER?           MBJ20026
         BE    CDCJQE              YES, GET NEXT JQE.          MBJ20026
         SR    WC,WC               CLEAR FOR COMPARE.          MBJ20026
         CLM   WC,14,JQERESRT      ANY RESOURCES FOR JOB?      MBJ20026
         BE    CDCJQE              IF EQUAL, NO RESOURCES.     MBJ20026
         L     WA,$QSE1            GET FIRST QSE               MBJ20026
         TM    JQEFLAG2,QUESYSAF   Q. CPU ROUTINGS             MBJ20026
         BZ    CDCNOCPU            A. NO-SET SPECIAL AFFINITY  MBJ20026
         IC    WC,JQEFLAG2         GET AFFINITIES              MBJ20026
         N     WC,=A(X'0000007F')  TURN OFF QUEINDAF           MBJ20026
         B     CDCLOOP2            BRANCH TO CHECKER           MBJ20026
CDCNOCPU LA    WC,255-QUEINDAF     SET AFFINITY TO ALL         MBJ20026
         SPACE 1                                               MBJ20026
         USING QSEDSECT,WB                                     MBJ20026
CDCLOOP2 LR    WB,WA               GET FIRST QSE               MBJ20026
         B     CDCLOOP0            BYPASS SHIFT ON FIRST PASS  MBJ20026
CDCLOOP1 SRL   WC,1                SHIFT IMPORTANT BIT DOWN    MBJ20026
CDCLOOP0 STC   WC,CDCTESTC         STORE FOR COMPARE.          MBJ20026
         TM    CDCTESTC,X'01'      IS A CPU BIT ON.            MBJ20026
         BZ    CDCQSE              IF ZERO, NO CPU BYPASS TEST MBJ20026
         BAL   WF,CDCTEST          ELSE, GO CHECK RESOURCES    MBJ20026
CDCQSE   TM    QSEFLAGS,QSELAST    CONFLICT EXISTS-WAS IT LAST MBJ20026
         BO    CDCONMSG            IF LAST, NO CPU FOR ROUTING MBJ20026
         LA    WB,QSELNGTH(,WB)    ELSE, GET NEXT QSE          MBJ20026
         B     CDCLOOP1            AND CHECK IT.               MBJ20026
CDCTEST  NULL  ,                   R1=JQE, WB=QSE              MBJ20026
         L     WD,JQERESRT         GET JOBS ROUTING            MBJ20026
         SRL   WD,8                  INTO BYTES 1-3            MBJ20026
         L     WE,QSERESTB         GET CPUS RESOURCES          MBJ20026
         SRL   WE,8                  INTO BYTES 1-3            MBJ20026
         NR    WE,WD               CLEAR UNIMPORTANT BITS      MBJ20026
         CR    WE,WD               Q. ROUTING=RESOURCES        MBJ20026
         BE    CDCJQE              A. YES-NEXT JQE             MBJ20026
         BR    WF                    ELSE RETURN               MBJ20026
         SPACE 1                                               MBJ20026
CDCONMSG OI    CDCFLAG,CDCCONF     TURN CONFLICT BIT ON        MBJ20026
         $CFJMSG ,                 ISSUE JOB MSG               MBJ20026
         B     CDCJQE              NEXT JQE                    MBJ20026
         DROP  R1                                              MBJ20026
*                                                              MBJ20026
*  LOCAL DATA AREAS FOR $DC                                    MBJ20026
*                                                              MBJ20026
CDCFLAG  EQU   COMNULOP,1          FLAG BYTE                   MBJ20026
CDCTESTC EQU   COMNULOP+1,1        CPU TEST BYTE.              MBJ20026
CDCCONF  EQU   X'80'               CONFLICT BIT                MBJ20026
         LTORG ,                                               MBJ20026
         TITLE 'HASP COMMAND PROCESSOR HASPCRM1 - REMOTE JOB ENTRY COMMC
               ANDS'                                           MBJ20026
         LTORG                                                 MBJ20026
CRESAREA DS    CL4096              WORKAREA FOR $LC            MBJ20026
./       CHANGE NAME=HASPNUC
*        $PATCHSP 64               NO PATCH SPACE DESIRED      MBJ20026
         SPACE 1                                               MBJ20026
* * * NOW CHECK FOR RESOURCE ROUTING IN XEQ JOB.               MBJ20026
         TM    JQETYPE,$XEQ        IS IT XEQ JOB               MBJ20026
         BNO   $QGETRES            NO, DON'T BOTHER            MBJ20026
         CLI   JQETYPE,$XEQ        IS IT FOR CONVERSION        MBJ20026
         BE    $QGETRES            YES, DON'T BOTHER           MBJ20026
         L     R15,$AQSE           GET THIS SYSTEMS QSE        MBJ20026
         LA    R15,0(R15)          HIGH ORDER OFF              MBJ20026
         MVC   QRESORCE,QSERESTB-QSEDSECT(R15) MOVE FOR AND    MBJ20026
         NC    QRESORCE,JQERESRT   TURN OFF UNREQ RESOURCES    MBJ20026
         CLC   QRESORCE,JQERESRT   DOES SYSTEM HAVE REQ RESOR  MBJ20026
         BNE   QNEXT               NO, IGNORE JOB.             MBJ20026
         SPACE 1                                               MBJ20026
* * * NOW CHECK FOR BEFORE, AFTER, CNTL SPECIFICATIONS.        MBJ20026
         STM   WA,WC,PCEWA         SAVE R2,3,4 FOR WORK        MBJ20026
         LA    WA,$JQTYPES*2       SET NUMBER OF QUEUES        MBJ20026
         LA    WB,$JQTYPES-7      NUMBER OF QUEUES TO SEARCH   MBJ20026
QGET001  DS    0H                  SCAN A JOBQ                 MBJ20026
         LA    WC,$JQHEADS-2-(JQECHAIN-JQEDSECT)(WA) PT TO QUE MBJ20026
QDEPSRCH DS    0H                  PICK UP NEXT JOB            MBJ20026
         LH    WC,JQECHAIN-JQEDSECT(WC) GET NEXT JQE           MBJ20026
         N     WC,=A(X'0000FFFF')  INSURE OFFSET POSITIVE      MBJ20026
         BZ    QGET003             END QUE, SEARCH FOR MORE    MBJ20026
         SLL   WC,2                COMPUTE ACTUAL OFFSET *4    MBJ20026
         AL    WC,$JOBQPTR         COMPUTE JQE ADDRESS         MBJ20026
         TM    JQETYPE-JQEDSECT(WC),$XEQ IS IT XEQ Q?          MBJ20026
         BNO   QDEPSRCH            NO, GO GET NEXT             MBJ20026
*       WE NOW HAVE A JQE IN THE EXECUTION QUE.                MBJ20026
         CLR   R1,WC               IS IT OUR JQE?              MBJ20026
         BE    QDEPSRCH            GO GET NEXT JQE             MBJ20026
         TM    JQEFLAG3,QUECNTL    DID SELECTED JOB USE CNTL   MBJ20026
         BZ    QAFTER              NO, GO SEE IF AFTER CARD    MBJ20026
         TM    QUEFLAG3(WC),QUECNTL DID OTHER JOB USE CNTL     MBJ20026
         BZ    QBEFORE             NO, GO SEE IF BEFORE CARD   MBJ20026
*       BOTH JOBS USED CNTL CARD NOW SEE IF SAME NAME          MBJ20026
         CLC   JQEDNAME(8),QUEDNAME(WC) SAME NAME?             MBJ20026
         BNE   QDEPSRCH            NO, GO GET ANOTHER JQE      MBJ20026
         TM    QUEFLAGS(WC),QUEBUSY IS OTHER GUY ACTIVE?       MBJ20026
         BZ    QDEPSRCH            NO, GET NEXT JQE.           MBJ20026
         TM    JQEFLAG3,QUEEXC     DID SELECTED JQE HAVE EXC   MBJ20026
         BO    QRESTORE            YES, GO SELECT ANOTHER JQE  MBJ20026
         TM    QUEFLAG3(WC),QUEEXC DID OTHER JOB USE EXC?      MBJ20026
         BO    QRESTORE            YES GO SELECT ANOTHER JQE.  MBJ20026
         B     QDEPSRCH            NO, GO CHECK ANOTHER JQE.   MBJ20026
         SPACE 1                                               MBJ20026
QAFTER   DS    0H                                              MBJ20026
         TM    JQEFLAG3,QUEAFT     SELECTED JOB AFTER          MBJ20026
         BZ    QBEFORE             NO, GO CHECK FOR BEFORE     MBJ20026
         CLC   JQEDNAME(8),QUEJNAME(WC) OT JQE NAME IN SEL JQE MBJ20026
         BE    QRESTORE            YES GO GET NEW JQE          MBJ20026
QBEFORE  DS    0H                                              MBJ20026
         TM    QUEFLAG3(WC),QUEBEF OTHER JOB USE BEFORE        MBJ20026
         BZ    QDEPSRCH            NO, GO GET ANOTHE JQE       MBJ20026
         CLC   JQEJNAME(8),QUEDNAME(WC) SEL NAME IN OTHER JQE  MBJ20026
         BNE   QDEPSRCH            NO, GO GET NEXT JQE.        MBJ20026
         SPACE 1                                               MBJ20026
*    HERE WE HAVE DETERMINED THAT SELECTED JOB IS INELIGIBLE   MBJ20026
*    TO STARTED YET BECAUSE OF ONE OF THE PREVIOUS CHECKS.     MBJ20026
*    WILL NOW RETURN TO ATTEMPT NEW SELECTION.                 MBJ20026
         SPACE 1                                               MBJ20026
QRESTORE DS    0H                                              MBJ20026
         LM    WA,WC,PCEWA         RESTORE WA-WC               MBJ20026
         B     QNEXT               GO SELECT NEW JOB.          MBJ20026
         SPACE 1                                               MBJ20026
QGET003  BCT   WB,QGET004          CONTINUE IF NOT ZERO        MBJ20026
         LM    WA,WC,PCEWA         RESTORE WA-WC               MBJ20026
         B     $QGETRES            SELECTED A JOB, CONTINUE.   MBJ20026
QGET004  DS    0H                                              MBJ20026
         BCTR  WA,0                COMPUTE NEXT LOWER          MBJ20026
         BCTR  WA,0                QUEUE OFFSET.               MBJ20026
         B     QGET001             GO TRY NEXT Q               MBJ20026
         SPACE 1                                               MBJ20026
$QGETRES DS    0H                                              MBJ20026
QRESORCE DC    BL3'0'              RESOURE COMPARE FIELD       MBJ20026
./       CHANGE NAME=HASPRDR
         DC    AL1(4),AL3(RCNTCARD),CL8'CNTL'     HASP CNTL    MBJ20026
         DC    AL1(6),AL3(RBEFCARD),CL8'BEFORE'   HASP BEFORE  MBJ20026
         DC    AL1(5),AL3(RAFTCARD),CL8'AFTER'    HASP AFTER   MBJ20026
*                                                              MBJ20026
*                                                              MBJ20026
*                                                              MBJ20026
*                             HASP  BEFORE, AFTER, CNTL CARD   MBJ20026
*                                           PROCESSING ROUTINE MBJ20026
*                                                              MBJ20026
         SPACE 3                                               MBJ20026
RBEFCARD NULL  ,                                               MBJ20026
         LTR   JCT,JCT             TEST FOR JOB                MBJ20026
         BZ    RILLCCRD            IGNORE BEFORE CARD IF NOT   MBJ20026
         OI    RCARDLRC,LRC1INUL+RDLMSKIP SHOW SUPERFLOUS      MBJ20026
         BAL   RL1,RPUT            ADD CARD TO OUTPUT FILE     MBJ20026
         TM    RDRSW,RJCLSW        TEST STATUS                 MBJ20026
         BO    *+12                BRANCH IF JCL FILE          MBJ20026
         BAL   RL1,RPUT            TERMINATE DATASET           MBJ20026
         OI    RDRSW,RJCLSW        SET JCL SWITCH              MBJ20026
         MVC   JCTWORK(79),0(RPI)  SAVE CARD IMAGE             MBJ20026
         OI    RQUEFLG3,QUEBEF     SET TO BEFORE CARD          MBJ20026
         NI    RQUEFLG3,255-QUEEXC-QUECNTL-QUEAFT NO CNTL/AFT  MBJ20026
         LA    R15,8(,RPI)         START OF SCAN               MBJ20026
RMVENAM  LA    R14,50              MAX POSITIONS TO SEARCH     MBJ20026
RFINDCAR CLI   0(R15),C'A'         FIND START OF JOBNAME       MBJ20026
         BL    RFINDCON            NOT IN GOOD RANGE           MBJ20026
         CLI   0(R15),C'Z'         TRY OTHER SIDE              MBJ20026
         BNH   RPUTNAM             THIS IS GOOD                MBJ20026
RFINDCON LA    R15,1(,R15)         POINT TO NEXT POSITION      MBJ20026
         BCT   R14,RFINDCAR        LOOP TILL END               MBJ20026
         NI    RQUEFLG3,255-QUEBEF-QUEAFT SET OFF FLAGS        MBJ20026
         B     RILLBADC            ILLEGAL BEFORE/AFTER CARD   MBJ20026
RPUTNAM  MVC   RQUEDNAM(8),0(R15)  PUT NAME IN                 MBJ20026
RENDALL  B     RMSSHIFT            GO TERMINATE NORMALLY       MBJ20026
         SPACE 3                                               MBJ20026
RAFTCARD NULL  ,                                               MBJ20026
         LTR   JCT,JCT             TEST FOR JOB                MBJ20026
         BZ    RILLCCRD            IGNORE AFTER CARD IF NOT    MBJ20026
         OI    RCARDLRC,LRC1INUL+RDLMSKIP SHOW SUPERFLOUS      MBJ20026
         BAL   RL1,RPUT            ADD CARD TO OUTPUT FILE     MBJ20026
         TM    RDRSW,RJCLSW        TEST STATUS                 MBJ20026
         BO    *+12                BRANCH IF JCL FILE          MBJ20026
         BAL   RL1,RPUT            TERMINATE DATASET           MBJ20026
         OI    RDRSW,RJCLSW        SET JCL SWITCH              MBJ20026
         MVC   JCTWORK(79),0(RPI)  SAVE CARD IMAGE             MBJ20026
         OI    RQUEFLG3,QUEAFT     SET TO AFTER CARD           MBJ20026
         NI    RQUEFLG3,255-QUEEXC-QUECNTL-QUEBEF NO CNTL/BEF  MBJ20026
         LA    R15,7(,RPI)         SET START OF SCAN           MBJ20026
         B     RMVENAM             TREAT LIKE BEFORE           MBJ20026
         SPACE 3                                               MBJ20026
RCNTCARD NULL  ,                                               MBJ20026
         LTR   JCT,JCT             TEST FOR JOB                MBJ20026
         BZ    RILLCCRD            IGNORE CNTL CARD IF NOT     MBJ20026
         OI    RCARDLRC,LRC1INUL+RDLMSKIP SHOW SUPERFLOUS      MBJ20026
         BAL   RL1,RPUT            ADD CARD TO OUTPUT FILE     MBJ20026
         TM    RDRSW,RJCLSW        TEST STATUS                 MBJ20026
         BO    *+12                BRANCH IF JCL FILE          MBJ20026
         BAL   RL1,RPUT            TERMINATE DATASET           MBJ20026
         OI    RDRSW,RJCLSW        SET JCL SWITCH              MBJ20026
         MVC   JCTWORK(79),0(RPI)  SAVE CARD IMAGE             MBJ20026
         OI    RQUEFLG3,QUECNTL    SET TO CNTL CARD            MBJ20026
         NI    RQUEFLG3,255-QUEEXC-QUEBEF-QUEAFT NO EX/AFT/BEF MBJ20026
         LA    R15,6(,RPI)         SET START OF SCAN           MBJ20026
         LA    R0,30               MAX FOR SEARCH              MBJ20026
RCTLFIND CLI   0(R15),C' '         NON BLANK                   MBJ20026
         BNE   RCTLGOT             YEP, GOT IT.                MBJ20026
         LA    R15,1(,R15)         BUMP TO NEXT POSITION       MBJ20026
         BCT   R0,RCTLFIND         CONTINUE                    MBJ20026
         B     RILLBADC            ERROR IF HERE               MBJ20026
RCTLGOT  LA    R0,8                MAX FOR SEARCH              MBJ20026
         LR    R14,R15             SAVE STARTING POINT         MBJ20026
REXCFIND CLI   1(R14),C','         FIND , EXC  ,SHR            MBJ20026
         BE    REXCGOT             GOT IT                      MBJ20026
         LA    R14,1(,R14)         POINT TO NEXT POSITION      MBJ20026
         BCT   R0,REXCFIND         CONTINUE                    MBJ20026
         B     RPUTNAM             NO SPEC IF HERE, MOVE 8.    MBJ20026
REXCGOT  CLC   2(3,R14),=C'EXC'    EXCLUSIVE CONT DESIRED      MBJ20026
         BNE   RTRYSHR             NO TRY SHR                  MBJ20026
         OI    RQUEFLG3,QUEEXC     SET TO EXCLUSIVE            MBJ20026
REXCPUT  SR    R14,R15             GET LENGTH-1                MBJ20026
         MVI   RQUEDNAM,C' '       BLANK OUT NAME              MBJ20026
         MVC   RQUEDNAM+1(7),RQUEDNAM BLANK REST               MBJ20026
         STC   R14,*+L'*+1         SAVE LENGTH FOR MVC         MBJ20026
         MVC   RQUEDNAM(*-*),0(R15) MOVE IN CNTL NAME          MBJ20026
         B     RENDALL             GO END NORMALLY             MBJ20026
RTRYSHR  CLC   2(3,R14),=C'SHR'    IS IT SHR                   MBJ20026
         BE    REXCPUT             YES, MOVE NAME AND EXIT     MBJ20026
         SPACE 3                                               MBJ20026
RILLBADC NULL  ,                                               MBJ20026
         MVI   0(RPI),C'0'         FORCE DOUBLE SPACE          MBJ20026
         MVI   1(RPI),C'*'         FILL OUT CARD IMAGE         MBJ20026
         MVC   2(78,RPI),1(RPI)    WITH ASTERISKS              MBJ20026
         MVC   (81-46)/2(46,RPI),RSHRVLID+4 MV IN ERROR MSG    MBJ20026
         MVI   RCARDLRC,LRC1CCTL+LRC1TASA ASA CONT CHAR        MBJ20026
         BAL   RL1,RPUT            ADD TO ADD TO OUTPUT FILE   MBJ20026
         $WTO  RSHRVLID,L'RSHRVLID,JOB=YES,  ISSUE ERR         MBJ20026C
               ROUTE=$LOG+$UR,CLASS=$TRIVIA,PRI=$ST    MSG     MBJ20026
         BAL   RL1,RJOBKILL        KILL JOB                    MBJ20026
         LA    RL2,RFLTEST         ADDRESS OF EXIT             MBJ20026
         $RETURN                   AND RETURN                  MBJ20026
         EJECT                                                 MBJ20026
         LR    R1,RPI         USE R1 FOR SCANNING              MBJ20026
         LA    RL1,5          SET SCAN LENGTH                  MBJ20026
RROUTSCN CLC   8(6,R1),RPRINT       IS IT PRINT                MBJ20026
         BE    RPROUTE        YES                              MBJ20026
         CLC   8(6,R1),RPUNCH       IS IS PUNCH                MBJ20026
         BE    RPUNCHY        YES                              MBJ20026
         CLC   8(3,R1),=C'XEQ'     IS IT SHRSPL XEQ            MBJ20026
         BE    RXEQCARD            YES, GO PROCESS             MBJ20026
         LA    R1,1(,R1)      POINT TO NEXT POSITION           MBJ20026
         BCT   RL1,RROUTSCN   TRY AGAIN                        MBJ20026
         B     RILLROUT       ILLEGAL ROUTE CARD               MBJ20026
RPUNCHY  LA    RW,JCTPUOUT    SET FOR PUNCH ROUTING            MBJ20026
RPROUTE  LA    R1,14(,R1)                                      MBJ20026
         LA    RL1,5          SET SCAN LENGTH                  MBJ20026
MRDESTSN CLI   0(R1),C' '     LOOK FOR SPACE                   MBJ20026
         BNE   *+16           NOT EQUAL - GO CHECK DEST        MBJ20026
         LA    R1,1(,R1)      TO NEXT POSITION                 MBJ20026
         BCT   RL1,MRDESTSN   TRY AGAIN                        MBJ20026
         B     RILLROUT       IF NOT YET FOUND, ILLEGAL        MBJ20026
         CLC   0(3,R1),=C'CPU'     IS IT CPU                   MBJ20026
         BE    RILLROUT            YES, OLD SHRSPL CRD, REJECT MBJ20026
         BAL   RL1,RDESTSCN       CONVERT DESTINATION TO RTCDE  BJ20026
ROUTEXIT LA    RL2,RJCLCARD   LOAD ADDRESS OF EXIT             MBJ20026
RXEQCARD NULL  ,                                               MBJ20026
         LA    WA,12(,R1)          SET FOR THIRD OPERAND       MBJ20026
         LA    R1,64               MAXIMUM FOR SEARCH          MBJ20026
RRCOMP3  CLI   0(WA),C' '          CHARACTER YET               MBJ20026
         BNE   RXEQOP3             YES DO THIRD OPERAND        MBJ20026
         LA    WA,1(WA)            STEP TO NEXT                MBJ20026
         BCT   R1,RRCOMP3          LOOP TILL END               MBJ20026
         B     RILLROUT            ERROR IF END OF CARD        MBJ20026
RXEQOP3  CLC   0(3,WA),=C'CPU'     CPU ROUTING?                MBJ20026
         BNE   ROUTHERE            NO TRY HERE                 MBJ20026
         IC    WE,3(WA)            GET DIGIT                   MBJ20026
         SLL   WE,28               GET RID OF ZONES            MBJ20026
         SRL   WE,28               PUT BACK                    MBJ20026
         STC   WE,RCPUCOMP+1       STORE FOR COMPARE           MBJ20026
         L     R15,$QSE1           POINT TO FIRST QSE          MBJ20026
         USING QSEDSECT,R15        ADDRESS IT                  MBJ20026
RCPUCOMP CLI   QSESIBSY,*-*        IS IT THIS QSE?             MBJ20026
         BE    ROUTCPU             YES CONTINUE                MBJ20026
         TM    QSEFLAGS,QSELAST    IS IT LAST QSE?             MBJ20026
         BO    RILLROUT            YES, ERROR                  MBJ20026
         LA    R15,QSELNGTH(,R15)  NO, GO TO NEXT QSE          MBJ20026
         B     RCPUCOMP            GO TRY COMPARE AGAIN        MBJ20026
ROUTCPU  DS    0H                                              MBJ20026
         MVI   RDRSIAFF,0          CLEAR ANY CPU ROUTING.      MBJ20026
         OC    RDRSIAFF,QSESIAFF   SET CPU AFFINITY            MBJ20026
         B     ROUTEXIT            GO EXIT.                    MBJ20026
ROUTHERE CLC   0(4,WA),=C'HERE'    IS IT ROUTHERE              MBJ20026
         BNE   ROUTRES             NO, GO TRY RESOURCES.       MBJ20026
         LA    R15,$SIDAFF-(QSESIAFF-QSEDSECT) POINT TO QSE    MBJ20026
         MVI   RDRSIAFF,0          CLEAR ANY CPU ROUTING.      MBJ20026
         OC    RDRSIAFF,QSESIAFF   SET CPU AFFINITY            MBJ20026
         B     ROUTEXIT            GO EXIT                     MBJ20026
ROUTRES  LA    WE,1                SET ONE BIT ON IN MASK      MBJ20026
         SLL   WE,24-1             SHIFT OVER MAXRES-1         MBJ20026
         LA    R15,$RESTAB         POINT TO RESOURCE TABLE     MBJ20026
         LA    R1,24               MAXIMUM RESOURCES           MBJ20026
RRCOMP4  CLC   0($RESLEN,WA),0(R15) CMPARE FOR RESOURCE EQUAL  MBJ20026
         BE    RFINDRES            BR IF HIT.                  MBJ20026
         LA    R15,$RESLEN(,R15)   GO TO NEXT TABLE ENTRY      MBJ20026
         SRL   WE,1                SHIFT MASK 1 BIT            MBJ20026
         BCT   R1,RRCOMP4          GO TRY AGAIN.               MBJ20026
         B     RILLROUT            NO HIT, ERROR               MBJ20026
RFINDRES LA    R15,24/8            NO. OF BYTES IN MASK        MBJ20026
         LA    R1,RQUERESR+(24/8)-1 ADDR OF LAST BYTE OF -     MBJ20026
*                                   RESOURCE MASK IN JQE       MBJ20026
RRESTOP  STC   WE,RSAVE1           SAVE A BYTE FOR OR'ING      MBJ20026
         OC    0(1,R1),RSAVE1      OR IN A BYTE OF RESOURCE    MBJ20026
         SRL   WE,8                SHIFT TO NEXT BYTE OF MASK  MBJ20026
         BCTR  R1,0                BACKUP RQUERER POINTER      MBJ20026
         BCT   R15,RRESTOP         GO PUT IN NEXT BYTE         MBJ20026
         MVC   RMESSAGE(L'ROUTRESM),ROUTRESM MOVE IN MSG.      MBJ20026
         MVC   RMESSAGE+25($RESLEN),0(WA) MOVE IN RESOURCE     MBJ20026
         $WTO  RMESSAGE,L'ROUTRESM,JOB=YES,   PUT OUT          MBJ20026C
               ROUTE=$LOG+$MAIN,CLASS=$ACTION,PRI=$ST THE MSG  MBJ20026
         B     ROUTEXIT            GO EXIT.                    MBJ20026
ROUTRESM $MSG  118,'-- RESOURCE ROUTING -- ******** '          MBJ20026
RSHRVLID $MSG  114,'-- INVALID /*BEFORE AFTER OR CNTL SPECIFICATION ' 6
         $RESTABL                  GENERATE RESOURCE TABLE.    MBJ20026
         SPACE 3                                               MBJ20026
         MVC   RQUEDNAM(8),=CL8' ' BLANK OUT NAME              MBJ20026
         XC    RQUERESR(4),RQUERESR CLEAR REMAINING            MBJ20026
         MVC   JQEDNAME(12),RQUEDNAM PUT IN ANY RESOURCE STUFF MBJ20026
*   THESE 2 INSTRUCTIONS DELETED TO ALLOW REQUE OF JOBS TO     MBJ20026
*   KEEP THEIR ORIGINAL CPU ROUTINGS.                          MBJ20026
./       ADD   NAME=$RESTABL
         MACRO -- $RESTABL -- EXECUTION RESOURCE TABLE.        MBJ20026
         $RESTABL &DUMMY
*                                                              MBJ20026
*        DO NOT CHANGE THE ORDER OF THESE RESOURCES AFTER THEY MBJ20026
*        HAVE BEEN ATTACHED.........                           MBJ20026
*                                                              MBJ20026
*        THE FOLLOWING APPLIES ONLY TO MELLON BANK -           MBJ20026
*        WHEN RESOURCES ARE ADDED OR DELETED FROM THIS TABLE   MBJ20026
*        BESURE TO UPDATE TSO HELP RESOURCE MEMBER.            MBJ20026
$RESLEN  EQU   8                                               MBJ20026
$RESTAB  DS    0H                                              MBJ20026
         DC    CL8'DUALD'          DUALD DENSITY DRIVE         MBJ20026
         DC    CL8'TAPE7'          7 TRACK TAPE DRIVES.        MBJ20026
         DC    CL8'SCANNER'        OCR SCANNER.                MBJ20026
         DC    CL8'3525'           3525 PUNCH/INTERPRET        MBJ20026
         DC    CL8'NOINQ'          ANYWHERE BUT INQUIRY.       MBJ20026
         DC    CL8'ARCHIVE'                                    MBJ20026
         DC    CL8'GIS'            GIS PACKS.                  MBJ20026
         DC    CL8'TSO'            TIME SHARING SYSTEM.        MBJ20026
         DC    CL8'INQUIRY'        ONLINE INQUIRY SYSTEM.      MBJ20026
         DC    CL8'TRIMS'          TRUST IMS DATABASE.         MBJ20026
         DC    CL8'IMS'                                        MBJ20026
         DC    CL8'OVERNITE'                                   MBJ20026
         DC    CL8'CHECKWTR'       UTILITY CHECK WRITER.       MBJ20026
         DC    CL8'MSS'           MASS STORAGE                 MBJ20026
         DC    CL8'AUTODIAL'      OLS-370                      MBJ20026
         DC    CL8'EMPTY5'                                     MBJ20026
         DC    CL8'EMPTY6'                                     MBJ20026
         DC    CL8'EMPTY7'                                     MBJ20026
         DC    CL8'EMPTY8'                                     MBJ20026
$NOLEFT  EQU   (*-$RESTAB)/$RESLEN NUMBER OF ENTRIES.          MBJ20026
         MEND                                                  MBJ20026
