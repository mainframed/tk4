//C4SYSDMA JOB EDPCSBS1,'SMF90',MSGCLASS=X,CLASS=S,NOTIFY=ED115DM
//* XA FORMAT
//SAS     EXEC SAS,OPTIONS='NODATE'
//*ATLIB  DD DSN=SYS1.MAN1,DISP=SHR
//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=OLD
//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=OLD
//*ATLIB  DD DSN=C4H1.PROD.SMFDAILY.COPY1,DISP=OLD,UNIT=TAPE,
//*       VOL=SER=702786
//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.CPY,DISP=OLD
//SYSIN   DD *
TITLE 'SMF 90';
  DATA
 STARTER (KEEP = SMF30JBN TIMEOUT          SMFXXSID
                 SMF30RES
                 SMF30POF
                 SMF30PLN SMF30PON  SMF30DOF  SMF30DLN
                 SMF30DON
        )
  PRODUCT (KEEP = SMF90TID TIMEOUT SMF30JBN
                  SMF90RVN SMF90PNM)
  SELF    (KEEP = SMF90OSM SMF90LSM SMF90NSM SMF90ODA
                  SMF90LDA SMF90NDA SMF90OWK SMF90LWK
                  SMF90NWK SMF90OOT SMF90LOT SMF90NOT TIMEOUT SMF30JBN)
  SETS    (KEEP = SMF90MAX SMF90STA SMF90JWT SMF90SYI
                  SMF90BUF SMF90BUM SMF90SWT SMF90RV7
                  SMF90REL SMF90IIT SMF90IDT TIMEOUT SMF30JBN
                  SMD90DSN)
  SUBSYS  (KEEP = SMF90WKN SMF90DTL SMF90RV9 SMF90SVL
                  SMF90SY1 SMF90SY2 SMF90SY3 SMF90SY4
                  SMF90EXN TIMEOUT SMF30JBN)
  SWITCH  (KEEP = SMF90SWO SMF90SWN SMF90IT  SMF90DT
                  TIMEOUT SMF30JBN)
  IPL     (KEEP = SMF90DTM SMF90RSN SMF90OPR SMF90ITM SMF90DTT
                  TIMEOUT SMF30JBN)
  SETDATE (KEEP = SMF90OTM SMF90ODT SMF90NTM SMF90NDT
                  TIMEOUT SMF30JBN)
  SETIPS  (KEEP = SMF90TIP SMF90IPO SMF90IPN
                  TIMEOUT SMF30JBN)
  SETDMN  (KEEP = SMF90DDT SMF90DMM SMF90DFG SMF90NMI
                  SMF90NMA SMF90NWT SMF90NAO SMF90NDO SMF90WKL
                  TIMEOUT SMF30JBN)
  SRM     (KEEP = SMF90IPT SMF90IPS SMF90OPT SMF90ICS
                  TIMEOUT SMF30JBN)
  OPT     (KEEP = SMF90TOP SMF90OPO SMF90OPN TIMEOUT SMF30JBN)
  ICS     (KEEP = SMF90TIC SMF90ICO SMF90ICN TIMEOUT SMF30JBN)
  MPF     (KEEP = SMF90TMP SMF90MPO SMF90MPN SMF90MPC TIMEOUT SMF30JBN)
  DAE     (KEEP = SMF90DAT SMF90DAO SMF90DAN TIMEOUT SMF30JBN)
                  ;
  RETAIN V;
  INFILE DATLIB JFCB=JF;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  INPUT   TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  INFILE DATLIB;
  IF SMFXXRTY = 90;
  INPUT SMF90BLK PIB2.   SMF90POF PIB4. SMF90PLN PIB2.
        SMF90PON PIB2.   SMF90DOF PIB4. SMF90DLN PIB2.  SMF90DON PIB2.
        @;
   IF SMF90PON > 0 THEN DO;
      DO I = 0 TO (SMF90PON - 1);
        OFF = SMF90POF -3 + I*SMF90PLN;
        INPUT @OFF SMF90TID PIB2.      SMF90RVN $CHAR2.
        SMF90PNM $CHAR8.
        @ ;
        OUTPUT PRODUCT;
      END;
                        END;
   IF SMF90TID = 5 OR SMF90TID = 9 OR SMF90TID = 13
                 OR SMF90TID = 15 THEN
DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90OSM PIB4.    SMF90LSM PIB2.    SMF90NSM PIB2.
                   SMF90ODA PIB4.    SMF90LDA PIB2.    SMF90NDA PIB2.
                   SMF90OWK PIB4.    SMF90LWK PIB2.    SMF90NWK PIB2.
                   SMF90OOT PIB4.    SMF90LOT PIB2.    SMF90NOT PIB2.
        @ ;
        OUTPUT SELF;
      END;
                        END;
      IF SMF90NSM > 0 THEN DO;
         DO I = 0 TO (SMF90NSM - 1);
         OFF = SMF90OSM -3 + I*SMF90LSM;
         INPUT @OFF SMF90MAX $CHAR4.  SMF90STA $CHAR6.  SMF90JWT $CHAR4.
                    SMF90SYI $CHAR4.  SMF90BUF PIB1.    SMF90BUM PIB1.
                    SMF90SWT PIB1.    SMF90RV7 PIB3.    SMF90REL $CHAR4.
                    SMF90IIT PIB4.    SMF90IDT PD4.
                    @ ;
                        IF SMF90NDA > 0 THEN DO;
                           DO I = 0 TO (SMF90NDA - 1);
                           OFF = SMF90ODA -3 + I*SMF90LDA;
                           INPUT @OFF SMF90DSN $CHAR10.
                                      @ ;
                           END;
                                             END;
        OUTPUT SETS;
        END;
                           END;
END;
   IF SMF90TID = 5 OR SMF90TID = 9 OR SMF90TID = 15 THEN DO;
   IF SMF90NWK > 0 THEN DO;
      DO I = 0 TO (SMF90NWK - 1);
        OFF = SMF90OWK -3 + I*SMF90LWK;
        INPUT @OFF SMF90WKN $CHAR4.  SMF90DTL PIB1.   SMF90RV9 PIB3.
                   SMF90SVL TODSTAMP. SMF90SY1 PIB8.   SMF90SY2 PIB8.
                                     SMF90SY3 PIB8.   SMF90SY4 PIB8.
                                     SMF90EXN $CHAR120.
                                     @ ;
      OUTPUT SUBSYS;
      END;
                       END;
                                                         END;
   IF SMF90TID = 6 OR SMF90TID = 7 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90SWO $CHAR10. SMF90SWN $CHAR10. SMF90IT  PIB4.
                   SMF90DT  PD4.
                                     @ ;
        OUTPUT SWITCH;
      END;
                        END;
                                        END;
   IF SMF90TID = 8 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90DTM $CHAR8.  SMF90RSN $CHAR65. SMF90OPR $CHAR20.
                   SMF90ITM PIB4.    SMF90DTT PD4.
                                     @ ;
      OUTPUT IPL;
      END;
                       END;
                       END;
   IF SMF90TID = 1 OR SMF90TID = 2 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90OTM PIB4.    SMF90ODT PIB4     SMF90NTM PIB4.
                   SMF90NDT PIB4.
                                     @ ;
     OUTPUT SETDATE;
     END;
                        END;
                                        END;
   IF SMF90TID = 4 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90TIP MSEC8.   SMF90IPO $CHAR8.  SMF90IPN $CHAR8.
                                     @ ;
        OUTPUT SETIPS;
     END;
                        END;
                        END;
   IF SMF90TID = 3 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90DDT PIB8.    SMF90DMM PIB1.    SMF90DFG PIB1.
                   SMF90NMI PIB1.    SMF90NMA PIB1.    SMF90NWT PIB1.
                   SMF90NAO PIB1.    SMF90NDO PIB1.    SMF90WKL PIB1.
                                     @ ;
        OUTPUT SETDMN;
      END;
                        END;
                        END;
   IF SMF90TID = 10 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90IPT PIB8.    SMF90IPS $CHAR8.  SMF90OPT $CHAR8.
                   SMF90ICS $CHAR8.
                                     @ ;
      OUTPUT SRM;
      END;
                        END;
                         END;
   IF SMF90TID = 11 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90TOP PIB8.    SMF90OPO $CHAR8.  SMF90OPN $CHAR8.
                                     @ ;
        OUTPUT OPT;
      END;
                       END;
                        END;
   IF SMF90TID = 12 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90TIC PIB8.    SMF90ICO $CHAR8.  SMF90ICN $CHAR8.
                                     @ ;
      OUTPUT ICS;
      END;
                        END;
                         END;
   IF SMF90TID = 14 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90TMP MSEC8.   SMF90MPO $CHAR8.  SMF90MPN $CHAR8.
                   SMF90MPC $CHAR8.
                                     @ ;
     OUTPUT MPF;
     END;
                        END;
                         END;
   IF SMF90TID = 16 THEN DO;
   IF SMF90DON > 0 THEN DO;
      DO I = 0 TO (SMF90DON - 1);
        OFF = SMF90DOF -3 + I*SMF90DLN;
        INPUT @OFF SMF90DAT PIB8.    SMF90DAO $CHAR8.  SMF90DAN $CHAR8.
                                     @ ;
     OUTPUT DAE;
     END;
                        END;
                         END;
RETURN;
PROC PRINT DATA=STARTER;
TITLE 'STARTER SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=PRODUCT;
TITLE 'PRODUCT SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SELF;
TITLE 'SELF DEFINING SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SETS;
TITLE 'IPL/SMF SECTION';
FORMAT TIMEOUT DATETIME.;
FORMAT SMF90IIT TIME.;
FORMAT SMF90IDT DATE.;
PROC PRINT DATA=SUBSYS;
TITLE 'SUBSYSTEM SECTION';
FORMAT TIMEOUT DATETIME.;
FORMAT SMF90SVL TIME.;
FORMAT SMF90SY1 HEX8.;
FORMAT SMF90SY2 HEX8.;
FORMAT SMF90SY3 HEX8.;
FORMAT SMF90SY4 HEX8.;
PROC PRINT DATA=SWITCH;
TITLE 'SWITCH SMF SECTION';
FORMAT TIMEOUT DATETIME.;
FORMAT SMF90IT TIME.;
FORMAT SMF90DT DATE.;
PROC PRINT DATA=IPL;
TITLE 'IPL PROMPT SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SETDATE;
TITLE 'SET DATE SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SETIPS;
TITLE 'SET IPS SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SETDMN;
TITLE 'SET DOMAIN SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=SRM;
TITLE 'SRM COMMAND SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=OPT;
TITLE 'SET OPT SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=ICS;
TITLE 'SET IPS SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=MPF;
TITLE 'SET MPF SECTION';
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DAE;
TITLE 'SET DAE SECTION';
FORMAT TIMEOUT DATETIME.;
