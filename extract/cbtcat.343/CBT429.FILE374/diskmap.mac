//C4SYSDMM JOB C4SYS000,'DMAP',MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM,
//  MSGLEVEL=(0,0)
//*MAIN PROC=C4
//*
//SAS     EXEC EDSAS609,OPTIONS='NODATE NOSOURCE NONOTES'
//VTOC    DD DSN=VTOC,UNIT=3380,VOL=SER=C48095,DISP=SHR
//SYSIN   DD *
*-------------------------------- MAPDISK ----------------------------*
×  THIS CODE READS IN THE DSCBS OF THE VTOC AND PRODUCES A LISTING    ×
×  OF ALL DATA SETS WITH THEIR ATTRIBUTES AND ALLOCATION DATA.        ×
×                                                                     ×
×  A VTOC DD STATEMENT SHOULD BE IN THE JCL LIKE:                     ×
×     //VTOC DD DSN=VTOC,VOL=SER=THISVOL,UNIT=DISK,DISP=SHR           ×
×                                                                     ×
*---------------------------------------------------------------------*
×                                                                     ×
× THE CCHHR OPTION ON THE INFILE STATEMENT BRINGS IN THE COUNT        ×
× FIELD AS WELL AS THE KEY AND DATA IN THE RECORD.  THIS IS WHY       ×
× OFFSETS ARE 5 MORE THAN INDICATED IN THE SYSTEMS CONTROL BLOCKS.    ×
×                                                                     ×
× THE DATA SET SERIAL NUMBER AT TUCC IS USED TO STORE THE USAGE       ×
× COUNT AND DATE OF LAST USE.                                         ×
×                                                                     ×
×  DATA SETS WITH MORE THAN 3 EXTENTS HAVE EXTENSION DSCVS.           ×
×  FORMAT 1 AND FORMAT 2 DSCBS THAT POINT TO FORMAT 3 DSCBS ARE OUTPUT×
×  TO SEPARATE DATASETS SO THAT THEY CAN BE MERGED TO FIND OUT        ×
×  ALL THE ALLOCATION DATA.                                           ×
×                                                                     ×
*---------------------------------------------------------------------*;

DATA DSN(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT
              EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE
              LRECL SECALOC TT R TRACKS VOLSER)
     TRACKM(KEEP=CCLO HHLO CCHI HHHI DSNAME FRST LST CCHHR)
     FREE(KEEP=LOC CYL TRACK TOTAL RECN TRKCYL)
     FMT1(KEEP=DSNAME CREATED EXPIRES LASTUSE COUNT
      EXTENTS DSORG1 RECFM1-RECFM4 ALOC BLKSIZE
      LRECL SECALOC TT R TRACKS CCHHR VOLSER)
     FMT2(KEEP=CCHHR TOCCHHR)
     FMT3(KEEP=CCHHR ALLOC3);  LENGTH DEFAULT=4;
     LENGTH DSNAME $ 44;

*--------------------- READ DSCB AND DETERMINE WHICH FORMAT --------*;
INFILE VTOC VTOC CVAF CCHHR COLUMN=COL;
INPUT @50 DSCBTYPE ?1. @;
     IF DSCBTYPE=1 THEN GOTO FORMAT1;
ELSE IF DSCBTYPE=2 THEN GOTO FORMAT2;
ELSE IF DSCBTYPE=3 THEN GOTO FORMAT3;
ELSE IF DSCBTYPE=5 THEN GOTO FORMAT5;
ELSE IF DSCBTYPE=4 THEN DO;
                        INPUT @70 TRKCYL PIB2. @111 @;
                        DSNAME = '** VTOC **';
       INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;
      *IF IND=0 THEN RETURN;
       FRST=CCLO*TRKCYL+HHLO;
       LST=CCHI*TRKCYL+HHHI;
       OUTPUT TRACKM;
                        END;
ELSE IF DSCBTYPE=. THEN NULL+1; _ERROR_=0;
     IF NULL>500 THEN STOP; RETURN;
RETAIN TRKCYL;

FORMAT1:                                 *-- REGULAR DCB TYPE --*;
  INPUT DSNAME $CHAR44.
        @81 YU PIB1.  DAYU PIB2.  COUNT PIB2.  IND PIB1.
        @59 YC PIB1.  DAYC PIB2.
            YE PIB1.  DAYE PIB2.
         EXTENTS PIB1. @88 DSORG PIB1. @90 RECFM0 PIB1.
         @92 BLKSIZE PIB2. LRECL PIB2. KEYLENG PIB1.
         @100 ALO PIB1. SECALOC PIB3. TT PIB2. R PIB1. @ ;

IF YC>0 THEN CREATED=DATEJUL(1000*YC+DAYC);
IF YE>0 THEN EXPIRES=DATEJUL(1000*YE+DAYE);
IF YU>0 THEN LASTUSE=DATEJUL(1000*YU+DAYU);
FORMAT CREATED EXPIRES LASTUSE DATE7.;
*--------------- COUNT AND LAST USE ARE TUCC SPECIALS ----------;
IF NOT (IND=0 × IND=64) THEN COUNT=.;
IF NOT (IND=0 × IND=64) THEN LASTUSE=.;
*--------- DSORG RECODING ----------; DSORG1='  ';
IF MOD(INT(DSORG/2),2) THEN DSORG1='PO';
IF DSORG>=32 THEN DSORG1='DA'; IF DSORG>=64 THEN DSORG1='PS';
IF DSORG>=128 THEN DSORG1='IS';
*---------- RECFM RECODING ------------;
RECFM1=' '; Z=INT(RECFM0/64);
IF Z=1 THEN RECFM1='V'; IF Z=2 THEN RECFM1='F';
IF Z=3 THEN RECFM1='U';
RECFM2=' '; IF MOD(INT(RECFM0/16),2) THEN RECFM2='B';
RECFM3=' '; IF MOD(INT(RECFM0/4),2) THEN RECFM3='A';
RECFM4=' '; IF MOD(INT(RECFM0/8),2) THEN RECFM4='S';

*---------- ALLOC TYPE RECODING -------------;
ALOC='   '; Z=INT(ALO/64);     IF Z=1 THEN ALOC='BLK';
IF Z=2 THEN ALOC='TRK';        IF Z=3 THEN ALOC='CYL';
*---------- ALLOCATED SPACE ---------;
IF EXTENTS>3 THEN INPUT @141 CCHHR $5. @; ELSE CCHHR='     ';
INPUT @111@;
TRACKS=0; DO I=1 TO 3; LINK EXL; END;
IF EXTENTS>3 THEN DO;  INPUT CCHHR $5. ;
    OUTPUT FMT1;
    END;
 ELSE
 OUTPUT DSN;
RETURN;

*------- ROUTINES TO COLLECT EXTENT INFORMATION --------*;
EXL:   INPUT IND PIB1. +1 (CCLO HHLO CCHI HHHI) (PIB2.) @ ;
       IF IND=0 THEN RETURN;
       FRST=CCLO*TRKCYL+HHLO;
       LST=CCHI*TRKCYL+HHHI;
       OUTPUT TRACKM;
       TRACKS+  TRKCYL  *(CCHI-CCLO)+HHHI-HHLO+1;
       RETURN;

FORMAT2:                                 *----- ISAM DSCB -------*;
       INPUT @1 CCHHR $CHAR5. @141 TOCCHHR $CHAR5.
                              @141 Z IB5. ;
       IF Z^=0 THEN OUTPUT FMT2; RETURN;

FORMAT3:  TRACKS=0;                       *----- CONTINUATION DSCB --*;
       DSNAME='000000';
       INPUT @1 CCHHR $CHAR5. @10@;
       DO I=1 TO 13;
         IF I=5 THEN INPUT +1 @;
         LINK EXL;
         IF IND<=0 THEN I=13;
         END;
       ALLOC3=TRACKS; OUTPUT FMT3; RETURN;
       FORMAT CCHHR $HEX10.;

FORMAT5: INPUT @10@; RECN+1;          *----- FREE SPACE EXTENTS ----*;
EXT:  INPUT LOC PIB2. CYL PIB2. TRACK PIB1. @ ;
      IF LOC=0 THEN RETURN; IF COL=50 THEN INPUT +1@;
      TOTAL=TRKCYL*CYL+TRACK;
      OUTPUT FREE;
      CCLO=INT(LOC/TRKCYL);
      HHLO=MOD(LOC,TRKCYL);
      LOC=LOC+TOTAL-1;
      CCHI=INT(LOC/TRKCYL);
      HHHI=MOD(LOC,TRKCYL);
      DSNAME='* * * * * FREE SPACE * * * * *';
      CCHHR='     ';
       FRST=CCLO*TRKCYL+HHLO;
       LST=CCHI*TRKCYL+HHHI;
      OUTPUT TRACKM;
      IF COL<140 THEN GOTO EXT;
  RETURN;

PROC SORT DATA=TRACKM; BY CCHHR DSNAME;
DATA DMAP;
RETAIN DAS;
SET TRACKM;
IF DSNAME = '000000' THEN DSNAME=DAS ;
ELSE DAS=DSNAME;
PROC SORT DATA=DMAP; BY CCLO HHLO;
DATA _NULL_;
SET DMAP;
  FILE PRINT HEADER=H;
  TRKS=LST-FRST+1;
  PUT @1 DSNAME
                @50 CCLO 4. @55 CCLO HEX4.  @65 HHLO 4.  @70 HHLO HEX4.
                @80 CCHI 4. @85  CCHI HEX4. @95  HHHI 4. @100 HHHI HEX4.
                @110 FRST 5. @116 LST 5. @122 TRKS 5.
                 ;
  RETURN;
H:
  PUT @1 'DATASET NAME ------------------------------'
      @50 '-- LO CYL ------ LO TRACK --'
      @80 '-- HI CYL ------ HI TRACK --'
      @110 'FIRST'
      @116 ' LAST'
      @122 '#TRKS'
      ;
  RETURN;
  RUN;

PROC PRINT DATA=FREE; TITLE3 FREE SPACE EXTENTS;

PROC SORT DATA=DSN; BY DSNAME;
*----- COMBINE FMT1 AND FMT2 TO GET REFERENCE TO FMT3 -----*;
PROC SORT DATA=FMT1; BY CCHHR;
PROC SORT DATA=FMT2; BY CCHHR;
DATA FMT1;
     MERGE FMT1(IN=I1) FMT2(IN=I2); BY CCHHR;
     IF I2 THEN CCHHR=TOCCHHR;
     IF I1;   DROP TOCCHHR;     RUN;
*------- COMBINE NEW FMT1 WITH FMT3 TO GET REST OF ALLOCATION INFO --*;
PROC SORT DATA=FMT1; BY CCHHR;
PROC SORT DATA=FMT3; BY CCHHR;
DATA FMT1;  MERGE FMT1(IN=I1) FMT3; BY CCHHR;
     IF I1; TRACKS=TRACKS+ALLOC3;  RUN;
*------ COMBINE FMT1 WITH DSN DATASETS (INTERLEAVE)------*;
PROC SORT DATA=FMT1; BY DSNAME;
DATA DSN; SET DSN FMT1; BY DSNAME;
RUN;

*------- WRITE THE REPORTS FOR THE VOLUME ----------*;
TITLE3 ALPHABETICAL LISTING OF DATA SETS AND THEIR ATTRIBUTES;
DATA _NULL_; SET DSN END=EOF; FILE PRINT HEADER=H; M=-1;
     PUT DSNAME $44. +1 DSORG1 $2. +2
      (RECFM1-RECFM4) (:$1.+M)
      @55 (LRECL BLKSIZE) (5. +1) +1
     (CREATED EXPIRES LASTUSE) (DATE7.+1) +1
     COUNT 5. +2 ALOC $3.+1 SECALOC 4. +2
     EXTENTS 5.+1 TRACKS 6. TT 5. R 4.;
     TOTAL+TRACKS;
     IF EOF THEN PUT // 'TOTAL NUMBER OF DATASETS =' _N_
                      / 'TOTAL NUMBER OF TRACKS   =' TOTAL;
     RETURN;

H:   PUT 'VOL=SER=' VOLSER $6.;
     PUT / 'DATA SET NAME'
     @43 'DSORG RECFM LRECL BLKSZ CREATED EXPIRES LASTUSE '
     ' USES SECONDARY'
     @108 'EXTENTS TRACKS   TT---R' /; RETURN; RUN;

