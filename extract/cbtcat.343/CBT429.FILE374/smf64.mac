//E0115DMS JOB EDPCSBS1,'SMF64',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM
//*
//SAS    EXEC  EDSAS608,OPTIONS=NODATE
//DATLIB  DD DSN=SYS1.MAN4,DISP=SHR
//*ATLIB  DD DSN=EDH1.PROD.SMFDUMPW,DISP=SHR
//SYSIN   DD *
TITLE SMF 64;
  DATA SMF64 (KEEP =
           TIMEOUT
      SMFXXSID
        SMF64JBN             SMF64RST               SMF64RSD
        SMF64JIF             SMF64RIN               SMF64DTY
        SMF64CNM             SMF64DNM               SMF64NTR
        SMF64CHR             SMF64ESL
        )
  XTENT (KEEP =  SMF64FCC           SMF64TCC
                 SMF64VSN           SMF64CUU
                                    SMF64IND
                 SMF64UTY           SMF64RV1
           TIMEOUT
  )
  STATS (KEEP =
           TIMEOUT
        SMF64SLN         SMF64NIL          SMF64NEX
        SMF64NLR         SMF64NDE          SMF64NIN
        SMF64NUP         SMF64NRE          SMF64NFS
        SMF64NCS         SMF64NAS          SMF64NEP
                         SMF64DIL          SMF64DEX
        SMF64DLR         SMF64DDE          SMF64DIN
        SMF64DUP         SMF64DRE          SMF64DFS
        SMF64DCS         SMF64DAS          SMF64DEP
        SMF64DBS         SMF64DCI          SMF64DLS
        SMF64DKL         SMF64DDN
        )
    ;
  RETAIN V;
  INFILE DATLIB JFCB=JF MISSOVER;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  INPUT    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  IF SMFXXRTY = 64;
  INPUT SMF64JBN $CHAR8.     SMF64RST  PIB4.        SMF64RSD PD4.
        SMF64JIF $CHAR8.     SMF64RIN  PIB1.        SMF64DTY PIB1.
        SMF64CNM $CHAR44.    SMF64DNM  $CHAR44.     SMF64NTR PIB2.
        SMF64CHR PIB4.       SMF64ESL  PIB2.
        @ ;
   N = SMF64ESL/26;
   IF N > 0 THEN
      DO I = 0 TO (N - 1);
      INPUT      SMF64FCC PIB4.     SMF64TCC PIB4.
                 SMF64VSN $CHAR6.   SMF64CUU PIB2.
                                    SMF64IND PIB2.
                 SMF64UTY PIB4.     SMF64RV1 PIB4.
                 @ ;
      OUTPUT XTENT;
      END;
OUTPUT SMF64;
  INPUT SMF64SLN PIB4.   SMF64NIL PIB4.    SMF64NEX PIB4.
        SMF64NLR PIB4.   SMF64NDE PIB4.    SMF64NIN PIB4.
        SMF64NUP PIB4.   SMF64NRE PIB4.    SMF64NFS PIB4.
        SMF64NCS PIB4.   SMF64NAS PIB4.    SMF64NEP PIB4.
                         SMF64DIL PIB4.    SMF64DEX PIB4.
        SMF64DLR PIB4.   SMF64DDE PIB4.    SMF64DIN PIB4.
        SMF64DUP PIB4.   SMF64DRE PIB4.    SMF64DFS PIB4.
        SMF64DCS PIB4.   SMF64DAS PIB4.    SMF64DEP PIB4.
        SMF64DBS PIB4.   SMF64DCI PIB4.    SMF64DLS PIB4.
        SMF64DKL PIB2.   SMF64DDN $CHAR8.
        @;
OUTPUT STATS;
RETURN;
PROC PRINT DATA=SMF64;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=XTENT;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=STATS;
FORMAT TIMEOUT DATETIME.;
