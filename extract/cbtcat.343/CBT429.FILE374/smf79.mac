//C4SYSDM9 JOB EDPCSBS1,'RMF79',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM
//** XA FORMAT
//*
//SAS     EXEC SAS,OPTIONS=NODATE
//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR
//DATLIB  DD DSN=SYS1.MAN2,DISP=SHR
//SYSIN   DD *
TITLE 'SMF 79';
DATA T79 (KEEP = TIMEOUT SMFXXSID
        SMF79SSI          SMF79STY        SMF79TRN
        SMF79RV1          SMF79PRS        SMF79PRL
        SMF79PRN          SMF79MCS        SMF79MCL
        SMF79MCN          SMF79ASS        SMF79ASL
        SMF79ASN          SMF79DCS        SMF79DCL
        SMF79DCN)
     PRODUCT (KEEP = TIMEOUT
             SMF79MFV          SMF79PRD           SMF79IST
             SMF79DAT          SMF79INT           SMF79MFL
             SMF79SAM          SMF79RV2           SMF79FLA
             SMF79RLS          SMF79CYC           SMF79MVS
             SMF79IML          SMF79RV9
             )
     M2CNTL (KEEP = TIMEOUT
  R79GTOD           R79LF2            R79PAR
  R79RV1            R79SES            R79RSV
  R79USER           R79RID            R79CTXTL
  R79CTEXT          R79DTXTL          R79DTEXT
  R79IST
             )
     DSUB1    (KEEP = TIMEOUT
  R791ASID                   R791JBN
  R791DMN                    R791NPG
  R791PGP                    R791TTOD
  R791CL                     R791TAS
  R791SRC                    R791DP
  R791SEQN                   R791FMCT
  R791WSS                    R791SWC
  R791SWMR                   R791SCRV
  R791SIOC                   R791WMS
  R791TCPU                   R791SSRV
             )
     DSUB2    (KEEP = TIMEOUT
  R792ASID                   R792JBN
  R792DMN                    R792NPG
  R792CL                     R792TAS
  R792TRC                    R792TTOD
  R792PRFX                   R792ARS
  R792SVAR                   R792TCPU
  R792PSS1                   R792PSS2
  R792EJST                   R792TSRM
  R79RTM                     R792EXCP
  R792CMNI                   R792PNV
  R792PVIO                   R792FXBL
  R792PSWP                   R792LPAI
  R792CSAI                   R792LSQA
  R792NQF                    R792TDEV
  R792TWSS                   R792TPIN
  R792TRTM                   R792FLG
             )
     DSUB3    (KEEP = TIMEOUT
  R793AFC                    R793CRI
  R793SQA                    R793CMNF
  R793CMFF                   R793PRFX
  R793CPUU                   R793DQ
  R793INC                    R793OUTU
  R793LCU                    R793ASMQ
  R793LPAF                   R793CSAF
  R793LPFX                   R793CSFX
  R793LSQA                   R793NLQF
  R793LOUT
             )
     DSUB4    (KEEP = TIMEOUT
  R794CMNI                   R794CMNO
  R794CMNR                   R794SWPI
  R794PSPI                   R794PSPO
  R794PRVI                   R794PRVO
  R794PRVR                   R794VIO
  R794AFC                    R794CRI
  R794ACRI                   R794RV1
  R794LPAI                   R794CLSAI
  R794LPAR                   R794CSAR
  R794TWSS
             )
     DSUB5    (KEEP = TIMEOUT
  R795ASID                   R795JBN
  R795DMN                    R795NPG
  R795PGP                    R795TTOD
  R795CL                     R795TAS
  R795TROD                   R795TCNT
  R795SWC                    R795CPUS
  R795MSOS                   R795IOCS
  R795WMS                    R795TOTL
  R795TOT                    R795SRBS
             )
     DSUB6    (KEEP = TIMEOUT
  R796ASID                   R796MAJ
  R796MIN                    R796JBN
  R796VOLS                   R796UCB
  R796REQ                    R796MINL
  R796FLG                    R796SID
             )
     DSUB7    (KEEP = TIMEOUT
  R797MAJ
  R797MIN                    R797FLG
  R797MINL                   R797OWN
  R797EXCW                   R797SHRW
  R797REQ                    R797JBN
  R797ASID                   R797SCOP
  R797RES                    R797SID
             )
     DSUB8    (KEEP = TIMEOUT
  R798ICSI                   R798IPSI
  R798PGN                    R798PGP
  R798SYS                    R798TTX
  R798TTM                    R798CLS
  R798USR                    R798NAM
  R798FL1
             )
     DSUB9    (KEEP = TIMEOUT
  R799NUM                    R799LCU
  R799RVO                    R799CNF
  R799SER                    R799TYP
  R799NUX                    R799SSC
  R799MEC                    R799CNN
  R799PEN                    R799ATV
  R799DIS                    R799QUE
  R799UTL                    R799RSV
  R799DSO                    R799ALC
             )
     DSUB10   (KEEP = TIMEOUT
  R79ATWSR                   R79AMPLT
  R79ARUA                    R79AGOOU
  R79ACMPL                   R79AOUTU
  R79AINCU                   R79ATCTL
  R79ACIDX                   R79ANSW
  R79ADMNO                   R79ADMLO
  R79ADMHI                   R79ATYPE
  R79AIPS                    R79ACPU
  R79AIOS                    R79AMSO
  R79ASRB                    R79ATWET
  R79ARESV
             )
     DSUB11C  (KEEP = TIMEOUT
  R79BETYPE                  R79BRV1
             )
     DSUB11D  (KEEP = TIMEOUT
  R79BSALC                   R79BSAVL
  R79BSLBD                   R79BSUSE
  R79BSIOS                   R79BREQS
  R79BFLG                    R79BDEV
  R79BDADR                   R79BVSER
  R79BDSN                    R79BFL2E
  R79BRES1                   R79BRES2
  R79BRES3
             )
     DSUB12   (KEEP = TIMEOUT
             )
     DSUB13   (KEEP = TIMEOUT
             )
          ;
  RETAIN V;
  INFILE DATLIB JFCB=JF MISSOVER;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  IF SMFXXRTY = 79;
  INPUT    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  INPUT SMF79SSI $CHAR4.  SMF79STY PIB2.  SMF79TRN PIB2.
        SMF79RV1 PIB2.    SMF79PRS PIB4.  SMF79PRL PIB2.
        SMF79PRN PIB2.    SMF79MCS PIB4.  SMF79MCL PIB2.
        SMF79MCN PIB2.    SMF79ASS PIB4.  SMF79ASL PIB2.
        SMF79ASN PIB2. @;
  INPUT SMF79DCS PIB4.    SMF79DCL PIB2.  SMF79DCN PIB2. @;
  OUTPUT T79;
  DO I=1 TO SMF79PRN;
  OFF = V -3 + SMF79PRS + (I-1)*SMF79PRL;
  INPUT @OFF SMF79MFV $CHAR2.  SMF79PRD $CHAR8.   SMF79IST PD4.
             SMF79DAT PD4.     SMF79INT RMFDUR.   SMF79MFL PIB2.
             SMF79SAM PIB4.    SMF79RV2 PIB2.     SMF79FLA PIB2.
             SMF79RLS $CHAR4.  SMF79CYC PD4.      SMF79MVS $CHAR8.
             SMF79IML PIB1.    SMF79RV9 PIB3.
  @;
  OUTPUT PRODUCT;
  END;
  DO I=1 TO SMF79MCN;
  OFF = V -3 + SMF79MCS + (I-1)*SMF79MCL;
  INPUT @OFF
  R79GTOD  PD4.     R79LF2   PIB1.    R79PAR   PIB1.
  R79RV1   PIB1.    R79SES   $CHAR2.  R79RSV   PIB2.
  R79USER  PIB2.    R79RID   $CHAR8.  R79CTXTL PIB2.
  R79CTEXT $CHAR32. R79DTXTL PIB2.    R79DTEXT $CHAR32.
  R79IST   PD4.
  @;
  OUTPUT M2CNTL;
  END;
  IF SMF79STY = 1 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R791ASID    PIB2.          R791JBN $CHAR8.
  R791DMN     PIB2.          R791NPG PIB2.
  R791PGP     PIB2.          R791TTOD PIB4.
  R791CL      $CHAR2.        R791TAS  PIB2.
  R791SRC     $CHAR2.        R791DP   PIB2.
  R791SEQN    PIB2.          R791FMCT PIB2.
  R791WSS     PIB2.          R791SWC  PIB2.
  R791SWMR    PIB2.          R791SCRV PIB2.
  R791SIOC    PIB2.          R791WMS  PIB4.
  R791TCPU    PIB4.          R791SSRV PIB2.
  @;
  OUTPUT DSUB1;
  END;
  IF SMF79STY = 2 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R792ASID    PIB2.          R792JBN $CHAR8.
  R792DMN     PIB2.          R792NPG PIB2.
  R792CL      $CHAR2.        R792TAS  PIB2.
  R792TRC     PIB2.          R792TTOD PIB4.
  R792PRFX    PIB4.          R792ARS  PIB2.
  R792SVAR    PIB4.          R792TCPU PIB4.
  R792PSS1    PIB4.          R792PSS2 PIB4.
  R792EJST    PIB4.          R792TSRM PIB4.
  R79RTM      PIB4.          R792EXCP PIB2.
  R792CMNI    PIB4.          R792PNV  PIB4.
  R792PVIO    PIB4.          R792FXBL PIB4.
  R792PSWP    PIB4.          R792LPAI PIB4.
  R792CSAI    PIB4.          R792LSQA PIB4.
  R792NQF     PIB4.          R792TDEV PIB4.
  R792TWSS    PIB4.          R792TPIN PIB4.
  R792TRTM    PIB4.          R792FLG  PIB2.
  @;
  OUTPUT DSUB2;
  END;
  IF SMF79STY = 3 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R793AFC     PIB2.          R793CRI PIB2.
  R793SQA     PIB2.          R793CMNF PIB2.
  R793CMFF    PIB2.          R793PRFX PIB2.
  R793CPUU    PIB2.          R793DQ   PIB2.
  R793INC     PIB2.          R793OUTU PIB2.
  R793LCU     PIB2.          R793ASMQ PIB2.
  R793LPAF    PIB2.          R793CSAF PIB2.
  R793LPFX    PIB2.          R793CSFX PIB2.
  R793LSQA    PIB2.          R793NLQF PIB2.
  R793LOUT    PIB2.
  @;
  OUTPUT DSUB3;
  END;
  IF SMF79STY = 4 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R794CMNI    PIB4.          R794CMNO PIB4.
  R794CMNR    PIB4.          R794SWPI PIB4.
  R794PSPI    PIB4.          R794PSPO PIB4.
  R794PRVI    PIB4.          R794PRVO PIB4.
  R794PRVR    PIB4.          R794VIO  PIB4.
  R794AFC     PIB2.          R794CRI  PIB2.
  R794ACRI    PIB2.          R794RV1  PIB2.
  R794LPAI    PIB4.          R794CLSAI PIB4.
  R794LPAR    PIB4.          R794CSAR PIB4.
  R794TWSS    PIB2.
  @;
  OUTPUT DSUB4;
  END;
  IF SMF79STY = 5 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R795ASID    PIB2.          R795JBN  $CHAR8.
  R795DMN     PIB2.          R795NPG  PIB2.
  R795PGP     PIB2.          R795TTOD PIB4.
  R795CL      $CHAR2.        R795TAS  PIB2.
  R795TROD    PIB4.          R795TCNT PIB2.
  R795SWC     PIB2.          R795CPUS PIB4.
  R795MSOS    PIB4.          R795IOCS PIB4.
  R795WMS     PIB4.          R795TOTL PIB4.
  R795TOT     PIB4.          R795SRBS PIB4.
  @;
  OUTPUT DSUB5;
  END;
  IF SMF79STY = 6 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R796ASID    PIB2.          R796MAJ  $CHAR8.
  R796MIN     $CHAR44.       R796JBN  $CHAR6.
  R796VOLS    $CHAR6.        R796UCB  $CHAR3.
  R796REQ     $CHAR2.        R796MINL PIB2.
  R796FLG     PIB1.          R796SID  $CHAR8.
  @;
  OUTPUT DSUB6;
  END;
  IF SMF79STY = 7 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R797MAJ     $CHAR8.
  R797MIN     $CHAR44.       R797FLG  PIB1.
  R797MINL    PIB4.          R797OWN  PIB2.
  R797EXCW    PIB2.          R797SHRW PIB2.
  R797REQ     $CHAR2.        R797JBN  $CHAR8.
  R797ASID    PIB2.          R797SCOP $CHAR4.
  R797RES     $CHAR2.        R797SID  $CHAR8.
  @;
  OUTPUT DSUB7;
  END;
  IF SMF79STY = 8 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R798ICSI    $CHAR2.        R798IPSI $CHAR2.
  R798PGN     PIB2.          R798PGP  PIB2.
  R798SYS     $CHAR4.        R798TTX  PIB4.
  R798TTM     PIB4.          R798CLS  $CHAR10.
  R798USR     $CHAR10.       R798NAM  $CHAR10.
  R798FL1     PIB1.
  @;
  OUTPUT DSUB8;
  END;
  IF SMF79STY = 9 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R799NUM     PD2.           R799LCU  PIB2.
  R799RVO     PIB1.          R799CNF  PIB1.
  R799SER     $CHAR6.        R799TYP  PIB4.
  R799NUX     PIB4.          R799SSC  PIB4.
  R799MEC     PIB4.          R799CNN  PIB4.
  R799PEN     PIB4.          R799ATV  PIB4.
  R799DIS     PIB4.          R799QUE  PIB4.
  R799UTL     PIB4.          R799RSV  PIB4.
  R799DSO     PIB4.          R799ALC  PIB4.
  @;
  OUTPUT DSUB9;
  END;
  IF SMF79STY = 10 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R79ATWSR    PIB4.          R79AMPLT PIB2.
  R79ARUA     PIB2.          R79AGOOU PIB2.
  R79ACMPL    PIB2.          R79AOUTU PIB2.
  R79AINCU    PIB2.          R79ATCTL PIB2.
  R79ACIDX    PIB2.          R79ANSW  PIB2.
  R79ADMNO    PIB1.          R79ADMLO PIB1.
  R79ADMHI    PIB1.          R79ATYPE PIB1.
  R79AIPS     $CHAR2.        R79ACPU  $CHAR4.
  R79AIOS     $CHAR4.        R79AMSO  $CHAR4.
  R79ASRB     $CHAR4.        R79ATWET PIB4.
  R79ARESV    PIB4.
  @;
  OUTPUT DSUB10;
  END;
  IF SMF79STY = 11 THEN
  IF SMF79ASN > 0 THEN
  DO I=1 TO SMF79ASN;
  OFF = V -3 + SMF79ASS + (I-1)*SMF79ASL;
  INPUT @OFF
  R79BETYPE   $CHAR1.        R79BRV1  PIB3.
  OUTPUT DSUB11C;
  INPUT
  R79BSALC    PIB4.          R79BSAVL PIB4.
  R79BSLBD    PIB4.          R79BSUSE PIB4.
  R79BSIOS    PIB4.          R79BREQS PIB4.
  R79BFLG     PIB1.          R79BDEV  PIB1.
  R79BDADR    $CHAR3.        R79BVSER $CHAR6.
  R79BDSN     $CHAR44.       R79BFL2E PIB1.
  R79BRES1    PIB4.          R79BRES2 PIB4.
  R79BRES3    PIB4.
  @;
  OUTPUT DSUB11D;
  END;
RETURN;
PROC PRINT DATA=T79;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=PRODUCT;
FORMAT TIMEOUT DATETIME.;
FORMAT SMF79INT TIME.;
PROC PRINT DATA=M2CNTL;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB1;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB2;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB3;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB4;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB5;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB6;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB7;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB8;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB9;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB10;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB11;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB12;
FORMAT TIMEOUT DATETIME.;
PROC PRINT DATA=DSUB13;
FORMAT TIMEOUT DATETIME.;
