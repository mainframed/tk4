//C4SYSDMS JOB EDPCSBS1,'TSO72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM
//*********************************************************************
//* DOC:   SAS INSTALLATION
//* REFER: C4S1.PROD.SAS.CNTL(BTSAS)
//* DATE:  30/09/1983          AK
//*********************************************************************
//*
//*
//SAS    EXEC VSAS,OPTIONS='NODATE NOSOURCE'
//*ATLIB  DD DSN=C4H1.PROD.SMFDUMPW,DISP=SHR
//DATLIB  DD DSN=C4H1.PROD.SMFDUMPW.HOLD,DISP=SHR
//*ATLIB  DD DSN=SYS1.MAN3,DISP=SHR
//SYSIN   DD *
TITLE SMF 72;
  DATA PGPDS (KEEP= PP SDEV XXX H N1 N2 N3 N4
                   TIMEOUT              SMFXXSID    SMF72SIZ
       SMF72IST     SMF72DAT     SMF72INT
       SMF72RV0     SMF72SUB     SMF72SAM     SMF72MFV
       SMF72RV1     SMF72RLS     SMF72CYC
           SMF72SWC         SMF72PGP         SMF72SPD
           SMF72HGP         SMF72IPS         SMF72IRF
           SMF72CRF         SMF72ERF         SMF72ISD
           SMF72CSD         SMF72MSD         SMF72SSD
           SMF72OPT         SMF72ICS         SMF72SYS
         SMF72CLS           SMF72USR         SMF72NAM
           SMF72TTX       SMF72ACT       SMF72SER
           SMF72TTM       SMF72LEV       SMF72MTS
           SMF72ITS       SMF72CTS       SMF72TAT
           SMF72SPP       SMF72CDN       SMF72PON
           SMF72TSG       SMF72STS       SMF72ET1
           SMF72ET2 )
         ;
      ;
  V=0; *4 VSAM , 0 NVSAM;
  RETAIN N1 0 N2 0 N3 0 N4 0;
  INFILE DATLIB;
  INPUT @1+V SMFXXFLG PIB1.    SMFXXRTY PIB1.    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  IF SMFXXRTY ^= 72 THEN DELETE;
      INPUT SMF72SIZ PIB2. SMF72IST PD4. SMF72DAT PD4.
      SMF72INT RMFDUR. SMF72RV0 PIB1.
      SMF72FG1 PIB1.   SMF72SUB PIB2. SMF72SAM PIB4.  SMF72MFV $CHAR2.
      SMF72RV1 PIB2.   SMF72RLS $CHAR4.
      SMF72CYC PD4. @ ;
     INPUT SMF72SWC PIB2.   SMF72PGP PIB2.   SMF72SPD PIB2.
           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.
           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.
           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.
           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.
         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.
      @ ;
 IF SMF72SUB >= 200;
   DO PP = 1 TO SMF72PGP;
      INPUT  SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.
           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.
           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.
           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.
           SMF72TSG PIB1. SMF72STS PIB4. SMF72ET1 PIB4.
           SMF72ET2 PIB4.
       @ ;
       IF SMF72TTX ^=0 THEN DO;
       IF PP=1 THEN N1+SMF72TTX; ELSE
       IF PP=2 THEN N2+SMF72TTX; ELSE
       IF PP=3 THEN N3+SMF72TTX; ELSE
       IF PP=4 THEN N4+SMF72TTX;
       SMF72SER = SMF72SER / SMF72TTX;
       SMF72CTS = SMF72CTS / SMF72TTX;
       SMF72ITS = SMF72ITS / SMF72TTX;
       SMF72MTS = SMF72MTS / SMF72TTX;
       SMF72STS = SMF72STS / SMF72TTX;
       RT = SMF72TTM / SMF72TTX;
       SMF72TTM = SMF72TTM * 1024 /1000000;
       SMF72TAT = SMF72TAT * 1024 /1000000;
       SMF72ACT = SMF72ACT * 1024 /1000000;
       SMF72TTM = SMF72TTM / SMF72TTX;
       SMF72TAT = SMF72TAT / SMF72TTX;
       SMF72ACT = SMF72ACT / SMF72TTX;
       SMF72LEV = SMF72LEV / 256;
     * SMF72LEV = SMF72LEV / SMF72TTX;
       SMF72SPP = SMF72SPP / SMF72TTX;
       SDEV     = SMF72ET1*(2**32) + SMF72ET2;
       SDEV     = SDEV     / SMF72TTX;
       SDEV = SQRT(SDEV - RT**2);
       SDEV = SDEV *1024 / 1000000;
       XXX = '   ';
       IF PP = 1 AND SMF72SER > 200 THEN XXX = '***'; ELSE
       IF PP = 2 AND SMF72SER > 2000 THEN XXX = '***'; ELSE
       IF PP = 3 AND SMF72SER > 12000 THEN XXX = '***';
       H = HOUR(TIMEOUT);
       IF SMF72SER > 20000 THEN DELETE;
       DO  I=1 TO SMF72TTX;
       OUTPUT PGPDS;
       END;
       END;
   END;
DELETE;
*ROC PRINT;
*ORMAT TIMEOUT DATETIME.;
*ROC SORT DATA=PGPDS; BY PP;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE TOTAL SERVICE UNITS';
HBAR SMF72SER / MIDPOINTS = 100 TO 10000 BY 100;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE CPU SERVICE UNITS';
HBAR SMF72CTS / MIDPOINTS = 100 TO 10000 BY 100;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE IO SERVICE UNITS';
HBAR SMF72ITS / MIDPOINTS = 100 TO 10000 BY 100;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE MSO SERVICE UNITS';
HBAR SMF72MTS / MIDPOINTS = 100 TO 10000 BY 100;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE SRB SERVICE UNITS';
HBAR SMF72STS / MIDPOINTS = 100 TO 10000 BY 100;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE ACTIVE TIME IN SECONDS';
HBAR SMF72ACT;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE ELAPSED TIME IN SECONDS';
HBAR SMF72TTM / MIDPOINTS = 0.1 TO 30.0 BY 0.1;
PROC CHART DATA=PGPDS;
TITLE 'STANDARD DEVIATION OF ELAPSED TIME IN SECONDS';
HBAR SDEV;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE TRANSACTION RESIDENCY TIME IN SECONDS';
HBAR SMF72TAT;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE WORKLOAD LEVEL';
HBAR SMF72LEV;
PROC CHART DATA=PGPDS;
TITLE 'AVERAGE SWAPS PER TRANSACTION';
HBAR SMF72SPP;
PROC CHART DATA=PGPDS;
TITLE 'DOMAIN NUMBER';
HBAR SMF72CDN;
PROC CHART DATA=PGPDS;
TITLE 'PERFORMANCE OBJECTIVE NUMBER';
HBAR SMF72PON;
*ROC PLOT DATA=PGPDS;
*ITLE 'CUMULATIVE NUMBER OF TRANSACTIONS IN PP';
*LOT N1*H='1';
*LOT N2*H='2';
*LOT N3*H='3';
*LOT N4*H='4';
