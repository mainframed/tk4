//ED115DMX JOB EDPCSBS1,'SMFXT',MSGCLASS=X,CLASS=2,NOTIFY=ED115DM
//*
//SAS     EXEC SAS,OPTIONS=NODATE
//DATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR
//SYSIN   DD *
DATA SPMS (KEEP = TIMEOUT SMFXXSID
        SSID         SRTP
        LEN1       NVOL       CTLT         RSV1
        LEN2       NEXT       VSER         DTYP         RSV2
          )
    S6880 (KEEP = TIMEOUT SMFXXSID
        LEN3       EXTS         ESQN         RSV3
        NSAMP
         EL1         EL2          EL3
         SL1         SL2
          )
    S6100 (KEEP = TIMEOUT SMFXXSID
        LEN3       EXT1 EXT2    ESQN         HRWR
        NSAMP
         NAC         NRH          NRM         NWTH
        NWBH         SAC          SRH          SRM
        SWTH         SWBH         PSC         PRSC
        FEMC         ICLC         BCC         ATBC
        WBC
          );
  RETAIN V;
  INFILE DATLIB JFCB=JF MISSOVER;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  INPUT    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  INPUT SSID $CHAR4. SRTP PIB2. @;
  INPUT LEN1 PIB2. NVOL PIB2. CTLT PIB1. RSV1 $CHAR1. @;
  INPUT LEN2 PIB2. NEXT PIB2. VSER $CHAR6. DTYP PIB1. RSV2 $CHAR1. @;
  OUTPUT SPMS;
  IF CTLT = 3 THEN DO;
  INPUT LEN3 PIB2. EXT1 PIB3. EXT2 PIB3. ESQN PIB1. RSV3 $CHAR13.
        NSAMP PIB4. @;
  INPUT  NAC PIB4.   NRH  PIB4.   NRM  PIB4.  NWTH  PIB4.
        NWBH PIB4.   SAC  PIB4.   SRH  PIB4.   SRM  PIB4.
        SWTH PIB4.   SWBH PIB4.   PSC  PIB4.  PRSC  PIB4.
        FEMC PIB4.   ICLC PIB4.   BCC  PIB4.  ATBC  PIB4.
        WBC  PIB4.   @;
        IF NAC = 0 THEN HRWR = . ; ELSE
        HRWR = NRH / NAC;
  OUTPUT S6100;
                   END;
  IF CTLT = . THEN DO;
  INPUT LEN3 PIB2. EXTS PIB6. ESQN PIB1. RSV3 $CHAR13.
        NSAMP PIB4. @;
  INPUT  EL1 PIB4.   EL2  PIB4.   EL3  PIB4.
         SL1 PIB4.   SL2  PIB4.
                     @;
  OUTPUT S6880;
                   END;
RETURN;
*;
PROC SORT  DATA=SPMS; BY TIMEOUT;
PROC PRINT DATA=SPMS SPLIT='*'; BY TIMEOUT;
FORMAT TIMEOUT DATETIME.;
*;
PROC SORT  DATA=S6100; BY TIMEOUT;
PROC PRINT DATA=S6100 SPLIT='*'; BY TIMEOUT;
FORMAT EXT1 HEX6.;
FORMAT EXT2 HEX6.;
FORMAT TIMEOUT DATETIME.;
LABEL HRWR = 'HIT/ACC*RATIO';
LABEL NAC = 'NORMAL I/O*TRACK*ACCESS COUNT';
LABEL NRH = 'NORMAL I/O*READ*HIT COUNT';
LABEL NRM = 'NORMAL I/O*READ MISS*STAGING COUNT';
LABEL NWTH= 'NORMAL I/O*WRITE-THRU*HIT COUNT';
LABEL NWBH= 'NORMAL I/O*WRITE-BACK*HIT COUNT';
LABEL SAC = 'SEQUENTIAL*I/O TRACK*ACCESS COUNT';
LABEL SRH = 'SEQUENTIAL*I/O READ*HIT COUNT';
LABEL SRM = 'SEQUENTIAL*I/O READ MISS*STAGING COUNT';
LABEL SWTH= 'SEQUENTIAL*I/O WRITE-THRU*HIT COUNT';
LABEL SWBH= 'SEQUENTIAL*I/O WRITE-BACK*HIT COUNT';
LABEL PSC = 'PRE-STAGING*COUNT';
LABEL PRSC= 'PRE-STAGING*RE-USE*HIT COUNT';
LABEL FEMC= 'FRONT-END*PARTIAL*MISS COUNT';
LABEL ICLC= 'INHIBIT CACHE*LOADING COUNT';
LABEL BCC = 'BYPASS*CACHE*LOADING COUNT';
LABEL ATBC= 'ALLOCATED*TRACK*BLOCK COUNT';
LABEL WBC = 'WRITE-BACK*COUNT';
*;
PROC PRINT DATA=S6880 SPLIT='*';
FORMAT EXT1 HEX6.;
FORMAT EXT2 HEX6.;
FORMAT TIMEOUT DATETIME.;
LABEL EL1 = 'ACCESS*COUNT';
LABEL EL2 = 'HIT*COUNT';
LABEL EL3 = 'WRITE-THRU*COUNT';
LABEL SL1 = 'PRE-STAGE*COUNT';
LABEL SL2 = 'PRE-STAGE*REUSE HIT*COUNT';
