//C4SYSDML JOB C4SYS000,'LOD1',MSGCLASS=X,CLASS=Q,NOTIFY=C4SYSDM
//*
//SAS     EXEC   SAS609,OPTIONS=NODATE
//LIB     DD DISP=SHR,DSN=HEDBT.DOBIS.LOADLIB
//*IB     DD DSN=EDI1.TEST.PGMLIB,DISP=SHR
//*IB     DD DSN=EDED.PROD.ADFLOAD,DISP=SHR
//SYSIN   DD *
*------------------- LOADMAP -----------------------------------------*
× THIS SAMPLE CODE READS IN THE ESD AND RLD RECORDS OF A LOAD MODULE, ×
× AND CREATES: (1) A MODULE MAP ALMOST IDENTICAL TO THE ONE PRODUCED  ×
× BY THE LINKAGE EDITOR, (2) THE OVERLAY STATEMENTS NECESSARY TO      ×
× RECREATE THE LOAD MODULE, AND (3) CROSS REFERENCES BY CALLER AND    ×
× CALLEE. TO USE THIS CODE FOR ANY PARICULAR MODULE, JUST CHANGE      ×
× THE INFILE STATEMENT AND INCLUDE THE FOLLOWING DD CARD:             ×
×                                                                     ×
× //LIB DD SAS.LIBRARY,DISP=SHR                                       ×
*---------------------------------------------------------------------*;
TITLE SAS LOAD MODULE;
  DATA
  ESD   (KEEP=NAME TYPE ESDID ADDR SEGMENT LENGTH HEXLENG ALIGN ID)
  RLD   (KEEP=RESDID PESDID RLDTYPE OFFSET LENG SIGN);
  INFILE LIB(DBSFILES) COLUMN=COL;
  INPUT RECTYPE PIB1. +3 ESDID PIB2. LREC PIB2. @ ;
        IF RECTYPE=32 THEN GOTO ESD;
        IF RECTYPE=1  THEN GOTO CNTL;
        IF RECTYPE=2 × RECTYPE=6 × RECTYPE=14
         × RECTYPE=3 × RECTYPE=7 × RECTYPE=15 THEN GOTO RLD;
        RETURN;
CNTL: INPUT; INPUT; RETURN; * SEQUENCE PAST TEXT RECORD;
ESD:; *------- EXTERNAL SYMBOL DICTIONARY RECORD;
      MAXCOL=LREC+8;
LOOP: INPUT NAME $8. ESDTYPE PIB1. ADDR PIB3. SEGMENT PIB1.
      LENGTH  IB3. @;
      HEXLENG=LENGTH;  ESDTYPE=MOD(ESDTYPE,32);
      TYPE='  ';
      IF ESDTYPE=0 THEN TYPE='SD';   IF ESDTYPE=1 THEN TYPE='LD';
      IF ESDTYPE=2 THEN TYPE='ER';   IF ESDTYPE=3 THEN TYPE='LR';
      IF ESDTYPE=4 THEN TYPE='PC';   IF ESDTYPE=5 THEN TYPE='CM';
      IF ESDTYPE=6 THEN TYPE='PR';   IF ESDTYPE=10 THEN TYPE='WX';
      IF ESDTYPE=7 × ESDTYPE>15 THEN GOTO ESDN;
      IF TYPE='LR' THEN ID=LENGTH/256; IF TYPE='LR' THEN LENGTH=.;
      ALIGN=.; IF TYPE='PR' THEN ALIGN=SEGMENT;
      IF TYPE='PR' THEN SEGMENT=.;
      OUTPUT ESD;
ESDN: ESDID=ESDID+1;
      IF COL<=MAXCOL THEN GOTO LOOP;
      RETURN;
RLD: ; *------------ RELOCATION DICTIONARY RECORD;
      MAXCOL=LREC+16;
      INPUT @17 @;
ES:  INPUT (RESDID PESDID) (PIB2.) @;
RPT: INPUT FLAG PIB1.  OFFSET PIB3. @;
     RLDTYPE=' '; Z=INT(FLAG/16);
     *UT FLAG 6.  +5 Z 6.;
     IF Z=0 THEN RLDTYPE='A';  IF Z=1 THEN RLDTYPE='V';
     IF Z=2 THEN RLDTYPE='D';  IF Z=3 THEN RLDTYPE='C';
     LENG=MOD(INT(FLAG/4),4)+1;
     SIGN=MOD(INT(FLAG/2),2);  * 1 FOR NEGATIVE;
     NXT=MOD(FLAG,2);
     OUTPUT RLD;
     IF NXT=1 THEN GOTO RPT;
     IF COL<MAXCOL THEN GOTO ES;
     IF MOD(RECTYPE,2) THEN LINK CNTL;
FORMAT ADDR HEXLENG OFFSET HEX6.;
DATA;  SET ESD; IF TYPE='SD' × TYPE='LR' × TYPE='PR';
       IF TYPE='PR' THEN SEGMENT=100; * TO SORT HIGH;
PROC SORT OUT=ESDS; BY SEGMENT ADDR DESCENDING TYPE;
RUN;
 *----------------------- PRINT THE MODULE MAP --------*;
DATA _NULL_; SET ESDS; BY SEGMENT; RETAIN;
    FILE PRINT HEADER=HEAD NOTITLES; OPTIONS PS=56;
    IF FIRST.SEGMENT & _N_>1 THEN PUT /;
    IF TYPE='PR' THEN GOTO PR;
    IF TYPE='LR' THEN GOTO LR;
*----------- PROCESS SD TYPE ENTRYS (CSECTS);
    IF COL>41 THEN PUT;
    PUT +2    NAME $8. @13 ADDR HEX6. @21 LENGTH HEX6. SEGMENT 6.;
    COL=41; RETURN;
*----------- PROCESS LR TYPE ENTRYS (ENTRYPOINTS);
LR:  PUT @COL NAME $8. +2 ADDR HEX6. @; COL=COL+20;
     IF COL<110 THEN RETURN; COL=41; PUT; RETURN;
*----------- PROCESS PR TYPE ENTRYS (PSEUDO REGISTERS);
PR:  NPR=SUM(NPR,1); IF NPR>1 THEN GOTO PRNXT;
     PUT ' PSEUDO REGISTERS' /; LINK PRHEAD;
PRNXT: PUT @COL NAME $8. +5 ADDR HEX3. +6 LENGTH HEX2. @;
       COL=COL+30; IF COL<=110 THEN RETURN; PUT; COL=3;
       RETURN;
*------------ ROUTINE TO PRINT PAGE HEADINGS;
HEAD: IF NPR>0 THEN GOTO PRHEAD;
      IF _N_<=1 THEN PUT @55 'MODULE MAP'// @4 'CONTROL SECTION'
       @41 'ENTRY';
      PUT / '    NAME    ORIGIN  LENGTH  SEG. NO.  '
          4*'    NAME   LOCATION ' /;
      COL=41; RETURN;
*---------------- PAGE HEADINGS FOR PSEUDO REGISTER PRINT OUT;
PRHEAD: PUT 4*'    NAME    ORIGIN  LENGTH    ' //;
        COL=3; RETURN;
*-------------------- CREATE OVERLAY STATEMENTS ------------*;
DATA _NULL_; SET ESDS; BY SEGMENT;
      IF SEGMENT=1 × TYPE='SD' THEN RETURN;
      FILE PRINT COLUMN=COL HEADER=HH;
      TITLE 'OVERLAY STATEMENTS FOR LOAD MODULE';
      IF ^FIRST.SEGMENT THEN GOTO INSERT;
      PUT;
      PUT @7 'OVERLAY'   @16 'X' ADDR HEX6.
      /   @7 'INSERT'    @16 @@;
INSERT:
      IF COL<=60 THEN GOTO INS;
      PUT @72 '*' / @16 @@;
INS:  PUT NAME @@; C=COL-1; PUT @C @@;
      IF ^LAST.SEGMENT THEN PUT ',' @@;
      RETURN;
HH:   PUT // 8*'1234567890' /; RETURN;
*------------------- DO THE CROSS REFERENCE ------------------*;
DATA ESDD; SET ESDS; IF TYPE='SD' THEN SD=NAME;
                     IF TYPE='PR' THEN SD=' ';
                     RETAIN;
PROC SORT DATA=ESDD OUT=ESDD; BY ESDID;
*ROC PRINT DATA=RLD;
DATA RLD; SET RLD; IF RLDTYPE='V';
    IF PESDID*RESDID;
PROC SORT DATA=RLD OUT=RLDP; BY PESDID;
DATA RLDP;
     MERGE ESDD (KEEP=ESDID NAME SEGMENT
        RENAME=(ESDID=PESDID NAME=PNAME SEGMENT=PSEGMENT))
      RLDP (IN=R); BY PESDID; IF R THEN OUTPUT;
*ROC PRINT DATA=RLDP;
PROC SORT DATA=RLDP OUT=RLDR; BY RESDID;
DATA RLDR;
   MERGE ESDD (KEEP=ESDID NAME SEGMENT SD
         RENAME=(ESDID=RESDID NAME=RNAME SEGMENT=RSEGMENT))
      RLDR(IN=R) ; BY RESDID; IF R THEN OUTPUT;
*ROC PRINT DATA=RLDR;
*ROC PRINT DATA=ESDD;
PROC SORT OUT=RLDR1; BY RSEGMENT SD PSEGMENT PNAME;
*ROC PRINT DATA=RLDR1;
DATA _NULL_; SET; BY RSEGMENT SD PSEGMENT PNAME;
    IF ^FIRST.PNAME THEN RETURN;
    FILE PRINT COLUMN=COL HEADER=H;
    IF FIRST.SD THEN PUT / SD $8. RSEGMENT 3. +2 @;
    IF COL>122 THEN PUT / @14 @;
    PUT +1 PNAME $8. PSEGMENT 3. +1 @;  RETURN;
H:  PUT 'CSECT   SEG' / 'WAS CALLED BY' 9*' CSECT   SEG ' /; RETURN;
    TITLE CROSS REFERENCE BY CALLEE;
PROC SORT DATA=RLDR1; BY PSEGMENT PNAME RSEGMENT SD;
DATA _NULL_; SET; BY PSEGMENT PNAME RSEGMENT SD;
  IF ^FIRST.SD THEN RETURN;
  FILE PRINT COLUMN=COL HEADER=H;
  IF FIRST.PNAME THEN PUT / PNAME $8. PSEGMENT 3. +2 @;
  IF COL>122 THEN PUT  / @14 @;
  PUT +1 SD $8. RSEGMENT 3. +1 @; RETURN;
H: PUT 'CSECT   SEG' / 'DOES CALLS TO' 9*' CSECT   SEG '/; RETURN;
TITLE CROSS REFERENCE BY CALLER;
