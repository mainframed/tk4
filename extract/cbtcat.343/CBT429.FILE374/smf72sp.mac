//C4SYSDM2 JOB EDPCSBS1,'RMF72',MSGCLASS=X,CLASS=B,NOTIFY=ED115DM
//** XA FORMAT
//*
//SAS     EXEC SAS,OPTIONS=NODATE,WORK='99,2'
//*ATLIB  DD DSN=ED115DM.PROD.SMFDUMPW,DISP=SHR
//*ATLIB  DD DSN=SYS1.MAN2,DISP=SHR
//DATLIB  DD DSN=C4H1.PROD.RMFDEC87,DISP=SHR
//SYSIN   DD *
TITLE SMF 72;
  DATA T72 (KEEP =
      TIMEOUT
      SMFXXSID SMF72SSI SMF72STY SMF72TRN SMF72PRS SMF72PRL
      SMF72PRN SMF72WLS SMF72WLL SMF72WLN SMF72PGS SMF72PGL SMF72PGN)
      PRODUCT (KEEP = TIMEOUT SMF72MFV      SMF72PRD
      SMF72IST         SMF72DAT
      SMF72INT         SMF72MFL       SMF72SAM
      SMF72RV2         SMF72FLA       SMF72RLS
      SMF72CYC         SMF72MVS       SMF72IML   SMF72RV3 )
      WORKLOAD (KEEP = TIMEOUT SMFXXSID SMF72ADJ)
         PG (KEEP = TIMEOUT
             SMF72TTX       SMF72ACT       SMF72SER
           SMF72TTM         SMF72LEV         SMF72MTS
           SMF72ITS       SMF72CTS       SMF72TAT
           SMF72SPP       SMF72CDN       SMF72PON
           SMF72TSG       SMF72STS       SMF72ETI
           SMF72ET2
  );
  RETAIN V;
  INFILE DATLIB JFCB=JF MISSOVER;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  IF SMFXXRTY = 72;
  INPUT    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  INPUT SMF72SSI $CHAR4.  SMF72STY PIB2.  SMF72TRN PIB2.
        SMF72RV1 PIB2.    SMF72PRS PIB4.  SMF72PRL PIB2.
        SMF72PRN PIB2.    SMF72WLS PIB4.  SMF72WLL PIB2.
        SMF72WLN PIB2.    SMF72PGS PIB4.  SMF72PGL PIB2.
        SMF72PGN PIB2. @;
 *OUTPUT T72;
  DO I=1 TO SMF72PRN;
  OFF = V -3 + SMF72PRS + (I-1)*SMF72PRL;
  INPUT @OFF SMF72MFV $CHAR2.  SMF72PRD $CHAR8.   SMF72IST PD4.
             SMF72DAT PD4.     SMF72INT RMFDUR.   SMF72MFL PIB2.
             SMF72SAM PIB4.    SMF72RV2 PIB2.     SMF72FLA PIB2.
             SMF72RLS $CHAR4.  SMF72CYC PD4.      SMF72MVS $CHAR8.
             SMF72IML PIB1.    SMF72RV9 PIB3.
  @;
 *OUTPUT PRODUCT;
  END;
   DO I = 0 TO (SMF72WLN-1);
     OFF = V - 3 + SMF72WLS + I * SMF72WLL;
     INPUT @OFF SMF72FGI PIB1.   SMF72RV3 PIB1.   SMF72SUB PIB2.
           SMF72HGP PIB2.   SMF72IPS $CHAR8. SMF72IRF $CHAR3.
           SMF72CRF $CHAR3. SMF72ERF $CHAR6. SMF72ISD $CHAR4.
           SMF72CSD $CHAR4. SMF72MSD $CHAR4. SMF72SSD $CHAR4.
           SMF72OPT $CHAR8. SMF72ICS $CHAR8. SMF72SYS $CHAR4.
         SMF72CLS $CHAR10. SMF72USR $CHAR10. SMF72NAM $CHAR10.
         SMF72ADJ PIB4.
      @ ;
       OUTPUT WORKLOAD;
   END;
   DO I = 0 TO (SMF72PGN-1);
     OFF = V - 3 + SMF72PGS + I * SMF72PGL;
      INPUT @OFF SMF72TTX PIB4. SMF72ACT PIB4. SMF72SER PIB4.
           SMF72TTM PIB4.   SMF72LEV PIB4.   SMF72MTS PIB4.
           SMF72ITS PIB4. SMF72CTS PIB4. SMF72TAT PIB4.
           SMF72SPP PIB4. SMF72CDN PIB2. SMF72PON PIB1.
           SMF72TSG PIB1. SMF72STS PIB4. SMF72ETI PIB4.
           SMF72ET2 PIB4.
       @ ;
      *OUTPUT PG;
   END;
RETURN;
 PROC SORT DATA=WORKLOAD; BY SMFXXSID TIMEOUT SMF72ADJ;
 DATA;
 RETAIN LASTSP 0;
 SET;
 IF LASTSP ^= SMF72ADJ THEN OUTPUT;
 LASTSP = SMF72ADJ;
 RETURN;
 PROC PRINT;
 FORMAT TIMEOUT DATETIME.;
