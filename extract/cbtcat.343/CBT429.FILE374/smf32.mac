//E0115DMA JOB EDPCSBS1,'SASD',MSGCLASS=X,CLASS=1,NOTIFY=ED115DM
//*
//SAS     EXEC SAS,OPTIONS=NODATE
//*ATLIB  DD DSN=ESYS1.SMFDUMPW.TEST,DISP=SHR
//DATLIB  DD DSN=SYS1.MAN1,DISP=SHR
//SYSIN   DD *
TITLE SMF 32;
  DATA;
  RETAIN V;
  INFILE DATLIB JFCB=JF MISSOVER;
  IF _N_ = 1 THEN DO;
                  INPUT @;
                  IF INDEX(JF,'SYS1.MAN') ^=0 THEN V=4; ELSE V=0;
                  END;
  IF V=4 THEN
      INPUT    SMFXXLEN PIB2. SMFXXSEG PIB2. @ ;
  INPUT    SMFXXFLG PIB1. SMFXXRTY PIB1.
                       @;
  IF SMFXXRTY = 212 THEN DO;
                        *PUT '212 DETECTED - SKIPPING';
                         DELETE;
                         END;
  INPUT    TIMEOUT SMFSTAMP8.
      SMFXXSID $CHAR4. @;
  IF SMFXXRTY = 32;
  INPUT SMF32WID $CHAR4. SMF32F1 PIB2.  SMF32POF PIB4.  SMF32PLN PIB2.
        SMF32PON PIB2.   SMF32IOF PIB4. SMF32ILN PIB2.  SMF32ION PIB2.
        SMF32COF PIB4.   SMF32CLN PIB2. SMF32CON PIB2.
        @;
    PUT SMF32WID +5 SMF32F1   +5  SMF32POF +5  SMF32PLN +5
        SMF32PON +5 SMF32IOF  +5  SMF32ILN +5  SMF32ION +5
        SMF32COF +5 SMF32CLN  +5   SMF32CON
        ;
   IF SMF32PON > 0 THEN DO;
      DO I = 0 TO (SMF32PON - 1);
        OFF = SMF32POF -3 + I*SMF32PLN +V;
        INPUT @OFF SMF32TYP PIB2. SMF32RVN $CHAR2.
        SMF32PNM $CHAR8.
        @ ;
          PUT SMF32TYP +5 SMF32RVN +5
        SMF32PNM
         ;
      END;
   END;
   IF SMF32ION > 0 THEN DO;
      DO I = 0 TO (SMF32ION - 1);
        OFF = SMF32IOF -3 + I*SMF32ILN +V;
        INPUT @OFF SMF32JBN $CHAR8. SMF32PGM $CHAR8. SMF32STM $CHAR8.
                   SMF32UIF $CHAR8. SMF32JNM $CHAR8. SMF32STN PIB2.
                   SMF32ND1 PIB2.   SMF32PGN PIB2.
                   SMF32JPT PIB2.   SMF32AST PIB4.   SMF32PPS PIB4.
                   SMF32SIT PIB4.   SMF32STD PD4.    SMF32RST PIB4.
                   SMF32RSD PD4.    SMF32RET PIB4.   SMF32RED PD4.
                  SMF32USR $CHAR20. SMF32GRP $CHAR8. SMF32RUD $CHAR8.
                   SMF32TID $CHAR8.
        @ ;
          PUT      SMF32JBN +1      SMF32PGM +1      SMF32STM +1
                   SMF32UIF +1      SMF32JNM +1      SMF32STN +1
                   SMF32ND1 +1      SMF32PGN +1
                   SMF32JPT +1      SMF32AST +1      SMF32PPS +1
                   SMF32SIT +1      SMF32STD +1      SMF32RST ;
          PUT      SMF32RSD +1      SMF32RET +1      SMF32RED +1
                   SMF32USR +1      SMF32GRP +1      SMF32RUD +1
                   SMF32TID
          ;
      END;
   END;
   IF SMF32CON > 0 THEN DO;
      DO I = 0 TO (SMF32CON - 1);
        OFF = SMF32COF -3 + I*SMF32CLN +V;
        INPUT @OFF SMF32CMD $CHAR8. SMF32CNT PIB4. @ ;
          PUT      SMF32CMD +5      SMF32CNT ;
        IF (SMF32TYP =3) × (SMF32TYP =4) THEN DO;
              INPUT  SMF32TCB PIB4. SMF32SRB PIB4. SMF32TGT PIB4.
                     SMF32TPT PIB4. SMF32TRN PIB4. SMF32EXP PIB4.
             PUT @20 SMF32TCB +5    SMF32SRB +5    SMF32TGT +5
                     SMF32TPT +5    SMF32TRN +5    SMF32EXP
          ;
        END;
      END;
   END;
