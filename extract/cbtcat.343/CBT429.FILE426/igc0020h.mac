IGC      TITLE 'CONTROL CROSS MEMORY COMMUNICATION'         *HMD 10/80*
***********************************************************************
*                                                                     *
*                                                                     *
*                              IGC0020H                               *
*                                                                     *
*                                                                     *
* ABSTRACT: CONTROL CROSS MEMORY (ADDRESS SPACE) COMMUNICATION.       *
*                                                                     *
*                                                                     *
* FUNCTION: IGC0020H (SVC 208) EXECUTES CALLER SPECIFIED CODE UNDER   *
*           A CALLER SPECIFIED ADDRESS SPACE. IGC0020H PASSES THE     *
*           CODE A COPY OF CALLER SPECIFIED DATA (IN CSA), A WORK     *
*           AREA (IN CSA) OF CALLER SPECIFIED LENGTH, AND A RETURN    *
*           AREA (IN CSA) OF CALLER SPECIFIED LENGTH. UPON RETURN     *
*           FROM THE CALLER SPECIFIED CODE, IGC0020H COPIES THE       *
*           INFORMATION IN THE CSA RETURN AREA TO A CALLER SPECIFIED  *
*           RETURN AREA.                                              *
*                                                                     *
*           THE CALLER SPECIFIED CODE MUST RESIDE IN A COMMON AREA    *
*           (EITHER LPA OR CSA), AND IGC0020H ATTEMPTS A VALIDITY     *
*           CHECK OF THIS BY COMPARING THE ADDRESS OF THE CALLER      *
*           SPECIFIED CODE TO THE BEGINNING OF THE COMMON SERVICE     *
*           AREA (CSA). IF THE ADDRESS OF THE CODE IS LOWER THAN THE  *
*           BEGINNING OF CSA, IGC0020H RETURNS CONTROL TO ITS CALLER  *
*           WITH A RETURN CODE OF 12.                                 *
*                                                                     *
*           IGC0020H GETS A WORK AREA FOR ITSELF AND RECEVSRB IN CSA. *
*                                                                     *
*           IGC0020H CALLS FINDASCB TO LOCATE THE ADDRESS OF THE ASCB *
*           OF THE ADDRESS SPACE NAMED BY THE CALLER. IF FINDASCB IS  *
*           UNABLE TO LOCATE AN ASCB CORRESPONDING TO THE CALLER      *
*           SPECIFIED ADDRESS SPACE NAME, IGC0020H RETURNS CONTROL TO *
*           ITS CALLER WITH A RETURN CODE OF 4.                       *
*                                                                     *
*           IGC0020H BUILDS A SERVICE REQUEST BLOCK (SRB) IN SUBPOOL  *
*           245 SPECIFYING THE ADDRESS OF RECEVSRB AS THE SERVICE     *
*           REQUEST ENTRY POINT. IGC0020H PASSES RECEVSRB THE CURRENT *
*           ASCB (SO RECEVSRB CAN POST US BACK), THE ADDRESS OF THE   *
*           CALLER SPECIFIED CODE (SO RECEVSRB CAN CALL THE CODE),    *
*           AND AN ECB (WHICH RECEVSRB WILL POST TO WAKE US UP) IN    *
*           THE CSA WORK AREA PREVIOUSLY GOTTEN.                      *
*                                                                     *
*           IGC0020H COPIES CALLER SPECFIED DATA INTO CSA. THE COPIED *
*           DATA, A ZEROED WORK AREA IN CSA, AND A ZEROED RETURN AREA *
*           IN CSA ARE ALL PASSED TO RECEVSRB SO THAT RECEVSRB CAN    *
*           PASS THEM TO THE CALLER SPECIFIED CODE.                   *
*                                                                     *
*           IGC0020H SCHEDULES RECEVSRB'S EXECUTION VIA THE SCHEDULE  *
*           MACRO AND WAITS ON THE ECB TO BE POSTED BY RECEVSRB AFTER *
*           THE CALLER SPECIFIED CODE HAS BEEN EXECUTED.              *
*                                                                     *
*           UPON WAKE UP BY RECEVSRB, IGC0020H COPIES THE INFORMATION *
*           IN THE CSA RETURN AREA TO A CALLER SPECIFIED RETURN AREA. *
*           THE RETURN AREA, WORK AREA, AND COPIED DATA AREA ARE ALL  *
*           FREED FROM CSA. THE SRB STORAGE IS FREED FROM SUBPOOL     *
*           245 AND THE WORK AREA IS FREED FROM CSA.                  *
*                                                                     *
*           IF THE RETURN CODE FROM THE CALLER SPECIFIED CODE IS 0,   *
*           IGC0020H RETURNS CONTROL TO ITS CALLER WITH A RETURN CODE *
*           OF 0. OTHERWISE, IGC0020H RETURNS CONTROL TO ITS CALLER   *
*           WITH A RETURN CODE OF 8, AND THE CALLER SPECIFIED CODE'S  *
*           RETURN CODE IN R0.                                        *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
* INPUT: R1 -> A(CL8'TARGET ADDRESS SPACE NAME')                      *
*              A(CODE TO BE EXECUTED UNDER THE TARGET ADDRESS SPACE)  *
*              A(F'LENGTH OF DATA TO BE PASSED',DATA TO BE PASSED)    *
*              A(H'LENGTH OF WORK AREA TO BE PROVIDED')               *
*              A(F'LENGTH OF THE RETURN AREA',RETURN AREA)            *
*                                                                     *
*                                                                     *
* OUTPUT: RETURN AREA <- INFORMATION SET BY CALLER SPECIFIED CODE     *
*                                                                     *
*                                                                     *
* RETURN CODES: R15 = 0 => THE CALLER SPECIFIED CODE WAS EXECUTED.    *
*                     4 => THE CALLER SPECIFIED ADDRESS SPACE COULD   *
*                          NOT BE FOUND.                              *
*                     8 => THE CALLER SPECIFIED CODE RETURNED A NON-  *
*                          ZERO RETURN CODE (R0 = THE CODE'S RETURN   *
*                          CODE).                                     *
*                    12 => THE CALLER SPECIFIED CODE IS NOT IN CSA    *
*                          OR LPA.                                    *
*                    16 => THE CALLER SPECIFIED CODE ABENDED.         *
*                                                                     *
*                                                                     *
* EXTERNAL REFERENCES: FINDASCB                                       *
*                      RECEVSRB                                       *
*                                                                     *
*                                                                     *
* DATA AREAS: CVT (READ)                                              *
*             SRB (CREATED)                                           *
*                                                                     *
*                                                                     *
* MACROS USED: GETMAIN                                                *
*              SCHEDULE                                               *
*              WAIT                                                   *
*              FREEMAIN                                               *
*              REGS (USER)                                            *
*              CVT                                                    *
*              IHASRB                                                 *
*              HACSAW (USER)                                          *
*                                                                     *
*                                                                     *
* ATTRIBUTES: REENTRANT, SVC, RESIDENT                                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
IGC0020H CSECT                SVC 208 - HAC SRB CROSS MEMORY INTERFACE
         BALR  RBASE,R0       A(*+2)
         USING *,RBASE        ADDRESSABILITY
         B     STARTER        BRANCH AROUND THE HEADER
         DC    C'IGC0020H_&SYSDATE_&SYSTIME' HEADER
         USING CVT,RCVT       ON INPUT R3 -> CVT
STARTER  LR    RETAD,R14      SAVE THE RETURN ADDRESS
         SR    RCODE0,RCODE0  ZERO THE RETURN CODE REGISTER
         LR    RPARMS,R1      A(INPUT PARAMETER LIST)
         USING PARMS,RPARMS   ADDRESSABILITY
         CLC   CVTSHRVM+1(3),TARGETEP+1 TARGET CODE AT LEAST IN CSA?
         BNH   OKEP           YES => GIVE IT A TRY
         LA    R15,12         TELL OUR CALLER WE'VE BEEN
*                             PASSED BAD CODE
         BR    RETAD          RETURN TO OUR CALLER
OKEP     GETMAIN R,LV=CSAWORKL,SP=SPCSA GET THE CSA COMM AREA
         LR    RCSA,R1        A(OUR CSA WORK AREA)
         USING CSAWORK,RCSA   ADDRESSABILITY
         MVC   CSAIDP,=C'HACSAW  '                          *HMD 04/85*
*                             IDENTIFY THE WORK AREA        *HMD 04/85*
         MVC   FNDASBPL(4),ASCBNAME PASS FINDASCB THE A(ASCB NAME)
         LA    R1,TRGTASCB    A(WORD TO RECEIVE A(TARGET ASCB))
         ST    R1,FNDASBPL+4  PASS IT TO FINDASCB
         LA    R1,FNDASBPL    A(FINDASCB'S PARAMETER LIST)
         LA    R13,FNDASBSV   A(SAVE AREA FOR FINDASCB)
         L     R15,FNDASBAD   V(FINDASCB)
         BALR  R14,R15        FIND THE ASCB FOR THE SPECIFIED NAME
         LTR   R15,R15        ASCB FOR THE SPECIFIED NAME FOUND?
         BNZ   RETURN         NO => TELL OUR CALLER
         GETMAIN R,LV=SRBSIZE,SP=245 GET SPACE FOR OUR SRB
         LR    RSRB,R1        A(THE SRB)
         USING SRBSECT,RSRB   ADDRESSABILITY
         XC    SRB(SRBSIZE),SRB ZERO THE WHOLE SRB
         MVC   SRBID,SRBLANK  PUT IN 'SRB '
         MVC   SRBASCB,TRGTASCB PUT IN THE TARGET ASCB
         ST    RASCB,CSASCB   PASS RECEVSRB OUR ASCB
         L     R1,RECEVAD     V(RECEVSRB)
         ST    R1,SRBEP       ENTRY POINT FOR SRB
         ST    RCSA,SRBPARM   PASS IT TO RECEVSRB
         MVC   CSAEP,TARGETEP PASS RECEVSRB THE TARGET CODE'S EP
         XC    CSAECB,CSAECB  ZERO THE ECB
         EJECT
         L     RWORK,TRGTDATA A(DATA AREA TO BE PASSED TO THE TARGET)
         L     R0,0(RWORK)    LENGTH OF THE DATA TO BE PASSED
         AL    R0,CSASP       REQUEST CSA
         GETMAIN R,LV=(0)     GET CSA SPACE FOR THE DATA COPY
         ST    R1,CSARECPL    PASS THE A(DATA) TO THE SRB TARGET
         LR    R14,RWORK      A(DATA TO BE PASSED)
         L     R15,0(R14)     LENGTH OF THE DATA
         LR    R0,R1          A(CSA STORE WHERE THE DATA'S GOING)
         LR    R1,R15         AMOUNT TO COPY
         MVCL  R0,R14         COPY THE DATA INTO CSA
         L     RWORK,WORKLNTH A(H'WORK AREA LENGTH')
         LH    R0,0(RWORK)    LENGTH OF WORK AREA FOR SRB TARGET
         AL    R0,CSASP       PUT IT IN CSA
         GETMAIN R,LV=(0)     GET THE SRB TARGET A WORK AREA
         ST    R1,CSARECPL+4  PASS IT TO THE SRB TARGET
         LR    R0,R1          A(WORK AREA IN CSA)
         LH    R1,0(RWORK)    H'LENGTH OF THE WORK AREA'
         SR    R14,R15        ZERO
         SR    R15,R15        OUT
         MVCL  R0,R14         THE WORK AREA
         L     RWORK,INFORETA A(RETURN INFO AREA)
         L     R14,0(RWORK)   LENGTH OF THE RETURN INFO AREA
         LR    R0,R14         DITTO
         AL    R0,CSASP       COPY OF IT WILL BE IN CSA
         GETMAIN R,LV=(0)     GET A RET AREA FOR THE SRB TARGET
         ST    R14,0(R1)      SAVE ITS LENGTH IN THE 1ST WORD
         ST    R1,CSARECPL+8  PASS THE SRB TARGET THE RET AREA
         LA    R0,4(R1)       A(4 BYTES INTO THE RETURN INFO AREA)
         LA    R1,4           LENGTH OF LENGTH FIELD IN 1ST WORD
         LCR   R1,R1          R1 <- LENGTH OF THE RETURN
         AR    R1,R14         INFO AREA - 4
         SR    R14,R15        ZERO
         SR    R15,R15        OUT THE
         MVCL  R0,R14         RETURN INFO AREA
         EJECT
         SCHEDULE SRB=(RSRB),SCOPE=LOCAL ATTACH THE SRB
         WAIT  ECB=CSAECB     WAIT FOR THE SRB TO COMPLETE
         EJECT
         L     R14,INFORETA   A(WHERE CALLER WANTS RET INFO)
         L     R15,0(R14)     LENGTH OF THIS AREA
         L     R0,CSARECPL+8  A(WHERE SRB TARGET RETURNED INFO)
         LR    R1,R15         AMOUNT TO BE COPIED
         MVCL  R14,R0         COPY THE SRB TARGET'S RETURN INFO
*                             INTO THE CALLER'S RETURN AREA
         L     R1,CSARECPL+8  A(SRB TARGET'S RETURN AREA)
         L     R0,0(R1)       LENGTH OF THE RETURN AREA
         AL    R0,CSASP       IT'S IN CSA
         FREEMAIN R,LV=(0),A=(1) FREE THE SRB TARGET'S RET AREA
         L     R1,CSARECPL+4  A(SRB TARGET'S WORK AREA)
         L     RWORK,WORKLNTH A(H'SRB TARGET'S WORK AREA LENGTH')
         LH    R0,0(RWORK)    LENGTH OF THIS WORK AREA
         AL    R0,CSASP       ITS IN CSA AS WELL
         FREEMAIN R,LV=(0),A=(1) FREE THE SRB TARGET'S WORK AREA
         L     R1,CSARECPL    A(SRB TARGET'S INPUT DATA)
         L     R0,0(R1)       LENGTH OF THE INPUT DATA
         AL    R0,CSASP       IT WAS COPIED INTO CSA
         FREEMAIN R,LV=(0),A=(1) FREE THE SRB TARGET'S INPUT DATA
         FREEMAIN R,LV=SRBSIZE,SP=245,A=(RSRB) FREE OUR SRB
         L     RCODE0,CSAECB   SRB RETURN CODE
         LA    RCODE0,0(RCODE0) CLEAR THE HIGH-ORDER BYTE
         CH    RCODE0,TWO56   RECEVSRB SAY THE CALLER'S CODE ABENDED?
         BNE   CHKRC0         NO => SEE IF IT'S A 0 RETURN CODE
         LA    R15,16         INDICATE CALLER SPECIFIED CODE ABEND
         B     RETURN         RETURN TO OUR CALLER
CHKRC0   LTR   R15,RCODE0     SRB COMPLETE NORMALLY?
         BZ    RETURN         YES => RETURN TO OUR CALLER
         LA    R15,8          INDICATE SRB NON-ZERO RETURN CODE
RETURN   LR    RCODE,R15      SAVE THE RETURN CODE
         FREEMAIN R,LV=CSAWORKL,SP=SPCSA,A=(RCSA) FREE THE CSA COMM
         LR    R15,RCODE      OUR RETURN CODE
         LR    R0,RCODE0      PASS THE TARGET'S RC IN R0
         BR    RETAD          RETURN TO OUR CALLER
         EJECT
TWO56    DC    H'256'         RECEVSRB RC => CALLER CODE ABEND
SRBLANK  DC    CL4'SRB '      SRB ID
FNDASBAD DC    V(FINDASCB)    FIND'S AN ASCB BY NAME
RECEVAD  DC    V(RECEVSRB)    INTERFACES THE SRB CODE
SPCSA    EQU   241            SUBPOOL NUMBER FOR CSA
CSASP    DC    AL1(SPCSA),AL3(0) DITTO
         EJECT
         REGS  ,
RBASE    EQU   R2             A(IGC0020H+2)
RCVT     EQU   R3             A(CVT) - ESTABLISHED BY CALLER
RPARMS   EQU   R4             A(INPUT PARAMETER LIST)
RSRB     EQU   R5             A(SRB)
RCSA     EQU   R6             A(OUR CSA WORK AREA)
RASCB    EQU   R7             A(OUR ASCB) - ESTABLISHED BY CALLER
RCODE    EQU   R8             RETURN CODE
RCODE0   EQU   R9             TARGET CODE'S RETURN CODE
RETAD    EQU   R10            RETURN ADDRESS
RWORK    EQU   R11            WORK REGISTER
         EJECT
         IHASRB
         EJECT                                              *HMD 12/79*
         CVT   DSECT=YES,LIST=YES
         EJECT
PARMS    DSECT                INPUT PARAMETER LIST
ASCBNAME DS    A              A(TARGET ASCB NAME)
TARGETEP DS    A              A(CODE TO BE EXECUTED UNDER THE ASCB)
TRGTDATA DS    A              A(DATA AREA TO BE PASSED TO TARGET)
WORKLNTH DS    A              A(H'LENGTH OF WORK AREA TO BE PROVIDED')
INFORETA DS    A              A(RETURN INFO AREA FROM TARGET)
         EJECT
         HACSAW
FNDASBPL EQU   CSARECPL       FINDASCB'S PARAMETER LIST
TRGTASCB EQU   CSARECPL+8     A(TARGET ASCB)
FNDASBSV EQU   CSASAVE        SAVE AREA FOR FINDASCB
         END
