         TITLE '*----NSP011----*  JCL XREF -- ROOT PHASE JCL INPUT ANAL*
               ISIS'
***********************************************************************
*                                                                     *
*     DSNAME CROSS REFERENCE PROGRAM - 'NSP011'                       *
*                                                                     *
*                                                                     *
*     THIS PROGRAM WILL PRODUCE A DSNAME CROSS REFERENCE LISTING      *
*     FROM 1 OR 2 PROCLIB'S.                                          *
*                                                                     *
*     THE PROCLIB DDNAME'S MUST BE ENTERED BY A 16 BYTE PARM.         *
*     IF ONLY 1 PROCLIB IS TO BE PROCESSED, THE 2ND DDNAME MUST       *
*     BE 'DUMMY'                                                      *
*     IF NO PARM IS ENTERED, THE DEFAULT IS 'PROCLIB1PROCLIB2'.       *
*                                                                     *
*     PROC, EXEC AND DD STATEMENTS ARE USED.                          *
*     JOB, COMMENT AND PEND STATEMENTS ARE DISCARDED.                 *
*                                                                     *
*     PROGRAM 'NSP012' IS USED TO READ THE PROCLIB'S.                 *
*                                                                     *
*     GENERAL FLOW:                                                   *
*                        IN  - PROCLIBS                               *
*                        OUT - SORTIN    - DSNAME RECORDS             *
*                        OUT - SYSPRINT  - EXCEPTION LIST             *
*                                                                     *
*          1. BUILD 1 JCL STATEMENT FROM 1 OR MORE INPUT RECORDS.     *
*                                                                     *
*          2. IF PROC STATEMENT, STORE SYMBOLICS IN TABLE.            *
*                                                                     *
*          3. IF EXEC OF DD STATEMENT,                                *
*                     RESOLVE SYMBOLICS,                              *
*                     SEARCH FOR KEYWORDS,                            *
*                     STORE IN OUTPUT RECORD.                         *
*                                                                     *
*          4. SORT BY  (DSN, O/I, PROC, STEP)                         *
*                                IN  - SORTIN                         *
*                                OUT - SORTOUT                        *
*                                                                     *
*          5. 'NSP013'  -  PRINT BY DSNAME                            *
*                                IN  - SORTOUT                        *
*                                OUT - A60NXDSN  (REPORT)             *
*                                                                     *
*          6. 'NSP014'  -  PRINT TAPES WITH NO EXPDT                  *
*                                IN  - SORTOUT                        *
*                                WRK - SYSUT1                         *
*                                OUT - A60NDSNC  (REPORT)             *
*                                                                     *
*          8. 'NSP015'  -  SORT BY PROGRAM AND PRINT PGM CROSS REF    *
*                                IN  - SORTIN   (OUTPUT FROM A60PDSNA)*
*                                OUT - SORTOUT                        *
*                                IN  - SORTOUT                        *
*                                OUT - A60NDSNE                       *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN
         GENESIS  CSECT=NSP011,                                        *
               ID=NSP011,                                              *
               EQU=Y,                                                  *
               BASE=(R13,R12)
*                                                                     *
HEX00    EQU   X'00'                    EQUATES
HEX20    EQU   X'20'
HEX40    EQU   X'40'
HEX80    EQU   X'80'
HEXF0    EQU   X'F0'
HEXFF    EQU   X'FF'
*                                                                     *
CHR0     EQU   C'0'
CHR1     EQU   C'1'
CHRI     EQU   C'I'
CHRO     EQU   C'O'
*                                                                     *
AMPER    EQU   C'&&'
ASTR     EQU   C'*'
BLANK    EQU   C' '
COMMA    EQU   C','
EQUAL    EQU   C'='
LEFTP    EQU   C'('
MINUS    EQU   C'-'
NULL     EQU   X'00'
PLUS     EQU   C'+'
POINT    EQU   C'.'
QUOTE    EQU   C''''
RIGHTP   EQU   C')'
*                                                                     *
         EJECT
         L     R2,0(,R1)                GET PARM ADDR
         LH    R3,0(,R2)                GET PARM LENGTH
         LTR   R3,R3                    IS IT ZERO
         BZ    A06                      YES
         MVC   PDSNAME1(16),2(R2)       SAVE PDS DDNAMES
         CH    R3,=H'17'                IS THERE A MAY DIV QUALIFIER
         BL    A06
         MVC   PDSPARM,18(R2)           SAVE THE QUALIFIED FOR NSP012
*                                                                     *
A06      EQU   *
         OPEN  (PRTFILE,(OUTPUT),OUTFILE,(OUTPUT))
         BAL   R10,HEADER10
         LOAD  EP=NSP012                LOAD PDS ROUTINE
         ST    R0,PDSENTRY              SAVE ENTRY ADDR
         L     R15,PDSENTRY
         CALL  (15),(PDSOPEN,PDSNAME1),VL     OPEN 1ST PDS
*                                                                     *
A10      EQU   *
         BAL   R10,CLEAR10              CLEAR WORK AREA
         BAL   R10,GET10                GET INPUT RECORD
         C     R15,=F'4'                IS IT END OF FILES
         BE    INEOF                    YES
*                                                                     *
A20      EQU   *                        LOOK FOR JOB-PROC-EXEC-DD
         LA    R5,INREC                 AND BUILD 1 RECORD
         CLC   0(3,R5),=C'//*'          IS IT COMMENT
         BE    A10
         CLC   0(2,R5),=C'//'           IS IT '//'
         BNE   A10
         L     R0,=F'70'                SET LOOP CTR TO 70
         A     R5,=F'2'
         CLI   0(R5),BLANK              IS CHAR BLANK
         BE    A42
A30      EQU   *
         BAL   R10,SCAN30               FIND NAME
         C     R1,=F'8'                 IS NAME > 8
         BNH   A40                      NO
         B     ERROR10                  YES - ERROR
A40      EQU   *
         MVC   W1NAME,FOUND             MOVE FOUND NAME
A42      EQU   *
         BAL   R10,SCAN20               SCAN FOR NON-BLANK
         C     R0,=F'54'                DID SCAN GO PAST COL 16
         BH    A50                      NO
         B     ERROR20                  YES - ERROR
A50      EQU   *
         BAL   R10,SCAN30               SCAN FOR STAT IDNT
         C     R1,=F'4'                 IS IDNT > 4
         BNH   A60                      NO
         B     ERROR30                  YES - ERROR
A60      EQU   *
         MVC   W1IDNT,FOUND             MOVE FOUND STAT IDNT
         BAL   R10,SCAN20               SCAN FOR NON-BLANK
         C     R0,=F'20'                DID SCAN GO PAST COL 50
         BH    A70                      NO
         B     A200                     YES - END OF STAT
A70      EQU   *
         BAL   R10,SCAN40               SCAN FOR '-----' OR BLANK
         LTR   R15,R15                  DID SCAN GO PAST COL 71
         BNZ   ERROR60                  YES
         LA    R6,W1STAT
         BCTR  R1,0                     SUBTRACT 1 FROM LENGTH
         EX    R1,MVC10                 EX MOVE
* MVC10  MVC   0(0,R6),FOUND                                          *
         A     R1,=F'1'
         AR    R6,R1                    BUMP TO END FOR NXT STAT
         BCTR  R5,0                     BACKUP 1 CHAR
         CLI   0(R5),COMMA              WAS LAST CHAR ','
         BE    A80                      YES - CONTINUE ON NXT RECORD
         B     A200                     NO - END OF STAT
A80      EQU   *
         BAL   R10,GET10                GET NXT RECORD
         C     R15,=F'4'                IS IT END OF FILES
         BE    INEOF                    YES
         LA    R5,INREC                 POINT R5 TO RECORD
         CLC   0(3,R5),=C'//*'          IS IT COMMENT
         BE    A80                      YES
         CLC   0(3,R5),=C'// '          IS IT //BLANK
         BE    A90                      YES
         B     ERROR40                  NO - ERROR
A90      EQU   *
         A     R5,=F'2'                 POINT R5 TO COL 3
         L     R0,=F'70'                SET BCT CTR TO 70
         BAL   R10,SCAN20               SCAN FOR NON-BLANK
         C     R0,=F'54'                ARE WE PAST COL 16
         BH    A100                     NO
         B     ERROR50                  YES - ERROR
A100     EQU   *
         BAL   R10,SCAN40               SCAN FOR '-----' OR BLANK
         LTR   R15,R15                  DID SCAN GO PAST COL 71
         BNZ   ERROR60                  YES
         BCTR  R1,0
         EX    R1,MVC20                 MOVE FOUND TO STAT
* MVC20  MVC   0(0,R6),FOUND                                          *
         A     R1,=F'1'
         AR    R6,R1                    BUMP TO END OF STAT
         BCTR  R5,0
         CLI   0(R5),COMMA              IS IT END OF STATEMENT
         BE    A80                      NO
         B     A200                     YES
*                                                                     *
A200     EQU   *
         L     R0,=F'2048'              SET MAX LENGTH OF STAT
         CLC   W1IDNT,=CL4'JOB'         IS IT JOB STATEMENT
         BE    A300
         CLC   W1IDNT,=CL4'PROC'        IS IT PROC STATEMENT
         BE    PROC10
         CLC   W1IDNT,=CL4'PEND'        IS IT PROC END STATEMENT
         BE    A300
         CLC   W1IDNT,=CL4'EXEC'        IS IT EXEC STATEMENT
         BE    EXEC10
         CLC   W1IDNT,=CL4'DD'          IS IT DD STATEMENT
         BE    DD10
*                                       ERROR                         *
         B     A300
*                                                                     *
A300     EQU   *
         CLC   XDSN,BLANKS              WAS DSNAME FOUND
         BE    A304                     NO
         PUT   OUTFILE,XREC             PUT OUTPUT RECORD TO SORT
A304     EQU   *
         BAL   R10,CLEAR30              CLEAR KEYWORD RETURN CODES
         MVC   XDSN(L'XDSN+1),XDSN-1    CLEAR RECORD
         MVI   XRELGEN,BLANK
         MVC   XRELGEN+1(65),XRELGEN
         B     A10
*                                                                     *
A310     EQU   *
         CLC   XDSN,BLANKS              WAS DSNAME FOUND
         BE    A314                     NO
         PUT   OUTFILE,XREC             PUT OUTPUT RECORD TO SORT
A314     EQU   *
         BAL   R10,CLEAR30              CLEAR KEYWORD RETURN CODES
         B     A10
*                                                                     *
INEOF    EQU   *
         CLOSE (PRTFILE,,OUTFILE)
*                                                                     *
         LA    R1,SORTLST1
         LINK  EP=SORT                  SORT BY DSNAME
*                                                                     *
         LINK  EP=NSP013                PRINT BY DSNAME
*                                                                     *
         LINK  EP=NSP014                PRINT TAPES WITH NO EXPDT
*                                                                     *
         LINK  EP=NSP015                SORT AND PRINT BY PROGRAM
*                                                                     *
         EXODUS RC=0
         EJECT
***********************************************************************
*                                                                     *
*              //PS50    EXEC PGM=A50PWTRA,PARM='GO'                  *
*                                                                     *
***********************************************************************
EXEC10   EQU   *                        EXEC ROUTINE
         BAL   R10,SYM10                RESOLVE SYMBOLICS
         BAL   R10,KEYWD10              LOOK FOR 'PGM='
         B     A310
         SPACE 3
***********************************************************************
*                                                                     *
*                                                                     *
*              //A60NXREF  DD DSN=SWL.APA60.ARAPXOUT,.... ETC.        *
***********************************************************************
DD10     EQU   *                        DD ROUTINE
         BAL   R10,SYM10                RESOLVE SYMBOLICS
         BAL   R10,KEYWD10              LOOK FOR KEYWORDS
         B     A300
*                                                                     *
KEYWD10  EQU   *                        SEARCH FOR KEYWORKS
         ST    R10,KEYWDSVE             SAVE RETURN
         L     R9,=A(KEYWORDS)          POINT R9 TO KEYWORK TABLE
         USING KEYWORDS,R9
KEYWD20  EQU   *
         L     R0,=F'500'               SET MAX LENGTH OF STATEMENT
         SR    R1,R1
         IC    R1,KWLEN                 PICK UP KEYWORD LENGTH
         CLI   KWLEN,HEXFF              IS IT END OF TABLE
         BE    KEYWD90
         L     R5,=A(W1STAT)            POINT R5 TO STATEMENT
         BCTR  R1,0
KEYWD30  EQU   *
         EX    R1,KEYWDCLC              COMPARE KEYWORD TO STATEMENT
         BE    KEYWD40
         A     R5,=F'1'                 BUMP TO NEXT CHAR
         CLI   0(R5),BLANK              IS IT END OF STATEMENT
         BE    KEYWD50
         B     KEYWD30
KEYWDCLC CLC   KWNAME(0),0(R5)
KEYWD40  EQU   *
         L     R1,=F'4'
         STC   R1,KWRC                  SET RC TO 4 (FOUND)
         L     R2,KWADDR                LOAD ADDR OF KEYWORD ROUTINE
         BALR  R10,R2                   BAL TO ROUTINE
KEYWD50  EQU   *
         LA    R9,KEYWORDL(,R9)         BUMP TO NEXT KEYWORD
         B     KEYWD20
KEYWD90  EQU   *
         L     R10,KEYWDSVE             LOAD RETURN
         BR    R10
KEYWDSVE DC    F'0'
*                                                                     *
         DROP  R9
         EJECT
***********************************************************************
*                                                                     *
*              B U I L D    S Y M B O L I C    T A B L E              *
*                                                                     *
***********************************************************************
PROC10   EQU   *
         L     R9,=A(SYMTAB)
         USING SYMTAB,R9
         BAL   R10,CLEAR20              CLEAR SYM TABLE
         MVI   SYML1,HEXFF              MARK END OF TABLE
         L     R0,=F'2048'              SET MAX LENGTH OF STAT
         LA    R5,W1STAT
PROC20   EQU   *
         CLI   0(R5),BLANK              IS IT END OF PROC STAT
         BE    PROC90
         BAL   R10,SCAN115              SCAN FOR '=' OR BLANK
         CLI   0(R5),EQUAL              IS IT '='
         BE    PROC30
*                                       NO - ERROR                    *
PROC30   EQU   *
         MVC   SYMNAME,FOUND            MOVE NAME TO TABLE
         STC   R1,SYML2                 MOVE NAME LENGTH TO TABLE
         A     R5,=F'1'                 BUMP PAST '='
         CLI   0(R5),BLANK              IS IT END OF PROC STAT
         BE    PROC60
         CLI   0(R5),COMMA              IS IT END OF SYMBOLIC
         BE    PROC60
         CLI   0(R5),QUOTE              IS IT QUOTE
         BE    PROC50
         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK
PROC40   EQU   *
         STC   R1,SYML3                 MOVE LENGTH OF EQUATE TO TABLE
         BCTR  R1,0
         EX    R1,PROCMVC               MOVE EQUATE TO TABLE
         A     R1,=F'1'
PROC42   EQU   *
         A     R1,=F'11'                COMPUTE TOTAL ENTRY LENGTH
         STC   R1,SYML1                 MOVE TO TABLE
         AR    R9,R1                    BUMP TO END OF TABLE
         MVI   SYML1,HEXFF              MARK END OF TABLE
         CLI   0(R5),BLANK              IS IT END OF PROC STAT
         BE    PROC90
         A     R5,=F'1'                 BUMP PAST ','
         B     PROC20
PROCMVC  MVC   SYMEQU(0),FOUND
PROC50   EQU   *
         A     R5,=F'1'                 BUMP PAST QUOTE
         BAL   R10,SCAN140              SCAN FOR QUOTE
         STC   R1,SYML3                 MOVE LENGTH OF EQUATE TO TABLE
         BCTR  R1,0
         EX    R1,PROCMVC               MOVE EQUATE TO TABLE
         A     R1,=F'12'                COMPUTE TOTAL ENTRY LENGTH
         STC   R1,SYML1                 MOVE TO TABLE
         AR    R9,R1                    BUMP TO END OF TABLE
         MVI   SYML1,HEXFF              MARK END OF TABLE
         A     R5,=F'1'                 BUMP PAST QUOTE
         CLI   0(R5),BLANK              IS IT END OF PROC STAT
         BE    PROC90
         A     R5,=F'1'                 BUMP PAST COMMA
         B     PROC20
PROC60   EQU   *
         SR    R1,R1                    NO SYMBOLIC EQUATE
         STC   R1,SYML3                 ( LIB=, ) OR ( LIB= )
         B     PROC42
PROC90   EQU   *
         B     A300
         DROP  R9
         EJECT
***********************************************************************
*                                                                     *
*              R E S O L V E    S Y M B O L I C S                     *
*                                                                     *
*              &PGM10                                                 *
*              DUMMY.,DSN=SWL.APA60.                                  *
*              SWL.&LIB..USRLIB                                       *
*              UNIT=&DISK,                                            *
*              SPACE=(&SPC10)                                         *
*              PARM='&PARM10'                                         *
*              DSN=&OUTPUT(&OUTGEN),                                  *
*                                                                     *
***********************************************************************
SYM10    EQU   *
         L     R9,=A(SYMTAB)            POINT R9 TO SYMBOLIC TABLE
         USING SYMTAB,R9
         MVC   W2STAT,W2STAT-1          BLANK RECEIVING AREA
         MVC   W2STAT2,W2STAT
         LA    R4,W2STAT                POINT R4 TO RECEIVING AREA
         LA    R5,W1STAT                POINT R5 TO SENDING AREA
         L     R0,=F'500'               SET MAX LOOP CTR
SYM20    EQU   *
         CLI   0(R5),AMPER              IS IT '&'
         BE    SYM40
         CLI   0(R5),BLANK              IS IT END OF STATEMENT
         BE    SYM110
SYM30    EQU   *
         MVC   0(1,R4),0(R5)            MOVE CHAR
         A     R4,=F'1'                 BUMP TO NXT CHAR
         A     R5,=F'1'
         BCT   R0,SYM20                 LOOP
         B     ERROR70                  ERROR - STAT TOO LONG
SYM40    EQU   *
         CLI   1(R5),AMPER              IS NXT CHAR '&'
         BNE   SYM50                    NO
         MVC   0(1,R4),0(R5)            YES - ASSUME TEMP DSN
         A     R4,=F'1'                 BUMP TO NXT CHAR
         A     R5,=F'1'
         BCT   R0,SYM30                 LOOP
         B     ERROR70                  ERROR - STAT TOO LONG
SYM50    EQU   *
         L     R9,=A(SYMTAB)            START AT BEGINNING OF TABLE
SYM60    EQU   *
         CLI   SYML1,HEXFF              IS IT END OF TABLE
         BE    SYM30                    YES
         SR    R3,R3
         IC    R3,SYML2                 PICKUP LENGTH OF SYM
         BCTR  R3,0
         EX    R3,SYMCLC                COMPARE TABLE ENTRY TO STAT
         BE    SYM70
         IC    R3,SYML1                 PICKUP LENGTH OF ENTRY
         AR    R9,R3                    BUMP TO NXT ENTRY
         B     SYM60
SYMCLC   CLC   SYMNAME(0),1(R5)
SYM70    EQU   *
         IC    R3,SYML3                 PICKUP LENGTH OF EQUATE
         LTR   R3,R3                    IS LENGTH ZERO
         BZ    SYM80                    YES
         BCTR  R3,0
         EX    R3,SYMMVC                MOVE EQUATE TO STATEMENT
         A     R3,=F'1'
         AR    R4,R3                    BUMP TO END OF EQUATE
SYM80    EQU   *
         A     R5,=F'1'                 SCAN FOR END OF SYMBLOIC
         CLI   0(R5),BLANK              IS IT BLANK
         BE    SYM90
         CLI   0(R5),COMMA              IS IT ','
         BE    SYM90
         CLI   0(R5),LEFTP              IS IT '('
         BE    SYM90
         CLI   0(R5),RIGHTP             IS IT ')'
         BE    SYM90
         CLI   0(R5),AMPER              IS IT '&'
         BE    SYM90
         CLI   0(R5),QUOTE              IS IT QUOTE
         BE    SYM90
         CLI   0(R5),POINT              IS IT '.'
         BE    SYM100
         BCT   R0,SYM80                 LOOP
         B     ERROR70                  ERROR - STAT TOO LONG
SYMMVC   MVC   0(0,R4),SYMEQU
SYM90    EQU   *
         B     SYM20                    END OF SYMBOLIC
SYM100   EQU   *
         A     R5,=F'1'                 BUMP PAST '.'
         B     SYM20                    END OF SYMBOLIC
SYM110   EQU   *
         MVC   W1STAT,W2STAT            END OF STATEMENT
         MVC   W1STAT2,W2STAT2
         BR    R10
         DROP  R9
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              D S N A M E   R O U T I  N E                           *
*                                                                     *
*              DSN=SWL.APA60.ADAP2000                                 *
*              DSN=SWL.APA60.ADAP2000(PRIME)  INDEX OR OVFLOW         *
*              DSN=SWL.AXX.SYSIN(A60I2000)                            *
*              DSN=SWL.APA60.ADAP2000(+1)                             *
*                                                                     *
***********************************************************************
DSN10    EQU   *
         A     R5,=F'4'                 BUMP PAST 'DSN='
         B     DSN30
DSN20    EQU   *
         A     R5,=F'7'                 BUMP PAST 'DSNAME='
DSN30    EQU   *
         ST    R5,DSNSVE5
         ST    R10,DSNSVE10             SAVE RETURN
         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK
         MVC   XDSN,FOUND
         LA    R5,XDSN                  POINT R5 TO DSNAME
         BAL   R10,SCAN180              SCAN FOR '(' OR BLANK
         CLI   0(R5),BLANK              IS IT BLANK
         BE    DSN90                    YES - DONE, GET OUT
         CLC   1(5,R5),=C'PRIME'        IS IT 'PRIME'
         BE    DSN50
         CLC   1(5,R5),=C'INDEX'        IS IT 'INDEX'
         BE    DSN50
         CLC   1(6,R5),=C'OVFLOW'       IS IT 'OVFLOW'
         BE    DSN50
         CLI   1(R5),PLUS               IS IT '+'
         BE    DSN40
         CLI   1(R5),MINUS              IS IT '-'
         BE    DSN40
         TM    1(R5),HEXF0              IS IT NUMERIC
         BO    DSN40
         B     DSN90
DSN40    EQU   *
         MVC   DWRD,0(R5)               SAVE RELATIVE GEN
         MVC   XDSN,FOUND               MOVE UP TO '(' TO XDSN
         LA    R5,DWRD                  POINT R5 TO RELATIVE GEN
         A     R5,=F'1'                 BUMP PAST '('
         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK
         MVC   XRELGEN,FOUND            SAVE RELATIVE GEN NO.
         A     R5,=F'1'                 BUMP PAST ')'
         B     DSN90
DSN50    EQU   *
         B     DSN90
DSN90    EQU   *
         L     R5,DSNSVE5
         L     R10,DSNSVE10             LOAD RETURN
         BR    R10                      RETURN
DSNSVE5  DC    F'0'
DSNSVE10 DC    F'0'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              P R O G R A M    N A M E    R O U T I N E              *
*                                                                     *
***********************************************************************
PGM10    EQU   *
         ST    R10,PGMSVE
         A     R5,=F'4'                 BUMP PAST 'PGM='
         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK
         MVC   XPGM,FOUND               MOVE TO XREC
         MVC   XSTEP,W1NAME             MOVE STEP NAME TO XREC
         L     R10,PGMSVE
         BR    R10
*                                                                     *
PGMSVE   DC    F'0'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              D I S P    R O U T I N E                               *
*                                                                     *
*              DISP=OLD                                               *
*              DISP=(OLD,KEEP)                                        *
*              DISP=(OLD,DELETE,KEEP)                                 *
*              DISP=(,CATLG,DELETE)                                   *
*                                                                     *
***********************************************************************
DISP10   EQU   *
         ST    R10,DISPSVE
         A     R5,=F'5'                 BUMP PAST 'DISP='
         CLI   0(R5),LEFTP              IS IT LEFT PAREN
         BE    DISP20
         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK
         MVC   XDISP1,FOUND             MOVE TO DISP #1
         B     DISP60
DISP20   EQU   *
         A     R5,=F'1'                 BUMP PAST LEFT PAREN
         CLI   0(R5),COMMA              IS FIRST DISP OMITTED
         BE    DISP50
         BAL   R10,SCAN190              SCAN FOR ','  RIGHT PAREN,BLK
         MVC   XDISP1,FOUND             MOVE TO DISP #1
         CLI   0(R5),RIGHTP             IS IT RIGHT PAREN
         BE    DISP60
DISP30   EQU   *
         A     R5,=F'1'                 BUMP PAST ','
         CLI   0(R5),COMMA              IS IT ','
         BE    DISP60
         BAL   R10,SCAN190              SCAN FOR ','  RIGHTP OR BLANK
         MVC   XDISP2,FOUND             MOVE TO DISP #2
         CLI   0(R5),RIGHTP             IS IT RIGHT PAREN
         BE    DISP80
DISP40   EQU   *
         A     R5,=F'1'                 BUMP PAST ','
         CLI   0(R5),COMMA              IS THIRD DISP OMITTED
         BE    DISP80
         BAL   R10,SCAN194              SCAN FOR RIGHT PAREN OR BLK
         MVC   XDISP3,FOUND             MOVE TO DISP #3
         A     R5,=F'1'                 BUMP PAST RIGHT PAREN
         B     DISP90
DISP50   EQU   *
         MVC   XDISP1,=CL5'NEW'         FIRST DISP DEFAULT = NEW
         B     DISP30
DISP60   EQU   *
         CLC   XDISP1,=CL5'NEW'         IS FIRST DISP = NEW
         BE    DISP70
         MVC   XDISP2,=CL5'KEEP'        SECOND DISP DEFAULT = KEEP
         B     DISP80
DISP70   EQU   *
         MVC   XDISP2,=CL5'DELETE'      SECOND DISP DEFAULT = DELETE
         B     DISP80
DISP80   EQU   *
         MVC   XDISP3,XDISP2            THIRD DISP DEFAULT = SECOND
         B     DISP90
DISP90   EQU   *
         CLC   XDISP1,=CL5'NEW'         IS IT INPUT DATASET
         BE    DISP92                   YES
         MVI   XIO,CHRI                 NO - MARK AS OUTPUT
         B     DISP94
DISP92   EQU   *
         MVI   XIO,CHRO                 MARK AS INPUT
DISP94   EQU   *
         SR    R15,R15
         STC   R15,KWRC                 STORE RC
         L     R10,DISPSVE
         BR    R10
*                                                                     *
DISPSVE  DC    F'0'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              U N I T    R O U T I N E                               *
*                                                                     *
*              UNIT=SYSDA                                             *
*              UNIT=(SYSDA)                                           *
*              UNIT=(AFF,DISK)                                        *
*                                                                     *
***********************************************************************
UNIT10   EQU   *
         ST    R10,UNITSVE
         A     R5,=F'5'                 BUMP PAST 'UNIT='
         CLI   0(R5),LEFTP              IS IT LEFT PAREN
         BNE   UNIT20
         A     R5,=F'1'                 BUMP PAST RIGHT PAREN
UNIT20   EQU   *
         CLC   0(3,R5),=C'AFF'          IS IT UNIT=AFF
         BE    UNIT90
         CLI   0(R5),COMMA              IS UNIT OMITTED
         BE    UNIT90
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XUNIT,FOUND              MOVE TO XREC
         B     UNIT90
UNIT90   EQU   *
         L     R10,UNITSVE
         BR    R10
*                                                                     *
UNITSVE  DC    F'0'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              E X P D T / R E T P D    R O U T I N E                 *
*                                                                     *
*              LABEL=EXPDT=99000                                      *
*              LABEL=(EXPDT=99000)                                    *
*              LABEL=(,SL,,,EXPDT=99000)                              *
*                                                                     *
***********************************************************************
EXPDT10  EQU   *
         A     R5,=F'6'                 BUMP PAST 'EXPDT=' OR 'RETPD='
         CLI   0(R5),LEFTP              DOES IT BEGIN WITH LEFT PAREN
         BNE   EXPDT20                  NO
         A     R5,=F'1'                 YES - BUMP PAST RIGHT PAREN
EXPDT20  EQU   *
         ST    R10,EXPDTSVE
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XEXPDT,FOUND             MOVE TO XREC
         L     R10,EXPDTSVE
         BR    R10
*                                                                     *
EXPDTSVE DC    F'0'
*                                                                     *
         EJECT
***********************************************************************
*                                                                     *
*              S P A C E    R O U T I N  E                            *
*                                                                     *
*              SPACE=CYL=10             SPACE=CYL=10                  *
*              SPACE=(CYL,10)           SPACE=(CYL,10)                *
*              SPACE=(CYL,(10,5),RLSE,CONTIG)                         *
*                                                                     *
***********************************************************************
SPACE10  EQU *
         ST    R10,SPCSVE10
         A     R5,=F'6'                 BUMP PAST 'SPACE='
         CLI   0(R5),LEFTP              IS IT '('
         BE    SPACE20
         BAL   R10,SCAN125              SCAN FOR ',' OR BLANK
         MVC   XSPACE,FOUND             MOVE TO XREC
         B     SPACE100                 GET OUT
SPACE20  EQU   *
         A     R5,=F'1'                 BUMP PAST '('
         ST    R5,SPCSVE5
         BAL   R10,SCAN196              SCAN FOR '('  ')' OR BLANK
         CLI   0(R5),RIGHTP             IS IT ')'
         BE    SPACE30                  YES (ONLY 1 SET OF PARENS)
         CLI   0(R5),LEFTP              IS IT '('
         BE    SPACE40                  YES (2 SETS OF PARENS)
         B     SPACE60                  ERROR - BLANK FOUND
SPACE30  EQU   *
         MVC   XSPACE,FOUND             MOVE TO XREC
         B     SPACE100                 GET OUT
SPACE40  EQU   *
         A     R5,=F'1'                 BUMP PAST 2ND '('
         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK
         CLI   0(R5),RIGHTP             IS IT 1ST ')'
         BE    SPACE50                  YES
         B     SPACE60                  NO - ERROR - MOVE WHAT WE HAVE
SPACE50  EQU   *
         A     R5,=F'1'                 BUMP PAST ')'
         BAL   R10,SCAN194              SCAN FOR ')' OR BLANK
         B     SPACE60                  GO MOVE WHAT WE HAVE
SPACE60  EQU   *
         LR    R1,R5                    LOAD ADDR OF ENDING POS
         L     R2,SPCSVE5               LOAD ADDR OF BEGINNNING POS
         SR    R1,R2                    COMPUTE LENGTH
         BCTR  R1,0
         EX    R1,SPCMVC                MOVE TO XREC
         B     SPACE70                  GO TO BLANK ENDING ')'
SPCMVC   MVC   XSPACE(0),0(R2)
SPACE70  EQU   *
         LA    R1,XSPACE+L'XSPACE       LOAD ADDR OF END OF XSPACE
         LA    R2,XSPACE                LOAD ADDR OF START OF XSPACE
         LR    R0,R1                    COMPUTE BCT REG
         SR    R0,R2
SPACE80  EQU   *
         CLI   0(R1),RIGHTP             IS IT ')'
         BE    SPACE90                  YES - GO BLANK IT
         CLI   0(R1),BLANK              IS IT BLANK
         BNE   SPACE100                 NO - GET OUT
         S     R1,=F'1'                 BACK UP 1 CHAR
         BCT   R0,SPACE80               LOOP
         B     SPACE100                 GET OUT
SPACE90  EQU   *
         MVI   0(R1),BLANK              BLANK OUT ENDING ')'
         B     SPACE100
SPACE100 EQU   *
         L     R10,SPCSVE10
         BR    R10
*                                                                     *
SPCSVE5  DC    F'0'
SPCSVE10 DC    F'0'
*                                                                     *
         EJECT
DCB10    EQU   *
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*              D S O R G    R O U T I N  E                            *
*                                                                     *
*              DSORG=PS                                               *
*                                                                     *
***********************************************************************
DSORG10  EQU   *
         ST    R10,DSORGSVE
         A     R5,=F'6'                 BUMP PAST 'DSORG='
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XDSORG,FOUND             MOVE TO XREC
         L     R10,DSORGSVE
         BR    R10
*                                                                     *
DSORGSVE DC    F'0'
         EJECT
***********************************************************************
*                                                                     *
*                                                                     *
*              R E C F M    R O U T I N E                             *
*                                                                     *
*              RECFM=FB                                               *
*                                                                     *
***********************************************************************
RECFM10  EQU   *
         ST    R10,RECFMSVE
         A     R5,=F'6'                 BUMP PAST 'RECFM='
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XRECFM,FOUND             MOVE TO XREC
         L     R10,RECFMSVE
         BR    R10
*                                                                     *
RECFMSVE DC    F'0'
         EJECT
***********************************************************************
*                                                                     *
*              L R E C L    R O U T I N E                             *
*                                                                     *
*              LRECL=133                                              *
*                                                                     *
***********************************************************************
LRECL10  EQU   *
         ST    R10,LRECLSVE
         A     R5,=F'6'                 BUMP PAST 'LRECL='
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XLRECL,FOUND             MOVE TO XREC
         L     R10,LRECLSVE
         BR    R10
*                                                                     *
LRECLSVE DC    F'0'
         EJECT
***********************************************************************
*                                                                     *
*              B L K S I Z E    R O U T I N E                         *
*                                                                     *
*              BLKSIZE=1330                                           *
*                                                                     *
***********************************************************************
BLKSIZ10 EQU   *
         ST    R10,BLKSVE
         A     R5,=F'8'                 BUMP PAST 'BLKSIZE='
         BAL   R10,SCAN190              SCAN FOR ','  ')' OR BLANK
         MVC   XBLKSIZE,FOUND           MOVE TO XREC
         L     R10,BLKSVE
         BR    R10
*                                                                     *
BLKSVE   DC    F'0'
*                                                                     *
         EJECT
CLEAR10  EQU   *                        CLEAR WKAREA1
         STM   R2,R5,CLEARSVE
         L     R2,=A(WKAREA1)
         L     R3,WKAR1LEN
         LA    R4,BLANKS
         L     R5,MVCLLEN
         MVCL  R2,R4
         B     CLEAR90
*                                                                     *
CLEAR20  EQU   *                        CLEAR SYMTAB
         STM   R2,R5,CLEARSVE
         L     R2,=A(SYMTAB)
         L     R3,SYMTLEN
         LA    R4,BLANKS
         L     R5,MVCLLEN
         MVCL  R2,R4
         B     CLEAR90
*                                                                     *
CLEAR30  EQU   *                        CLEAR KEYWORD RETURN CODES
         STM   R2,R5,CLEARSVE
         L     R9,=A(KEYWORDS)
         USING KEYWORDS,R9
CLEAR32  EQU   *
         MVI   KWRC,HEX00
         LA    R9,KEYWORDL(,R9)
         CLI   KWLEN,HEXFF
         BE    CLEAR38
         B     CLEAR32
CLEAR38  EQU   *
         B     CLEAR90
         DROP  R9
*                                                                     *
CLEAR90  EQU   *
         LM    R2,R5,CLEARSVE
         BR    R10
*                                                                     *
CLEARSVE DC    4F'0'
*                                                                     *
         EJECT
ERROR10  EQU   *                        STAT NAME > 8 CHARS
         MVC   PRTMESS,MESS10
         B     ERROR200
ERROR20  EQU   *                        STAT OP NOT FOUND
         MVC   PRTMESS,MESS20
         B     ERROR200
ERROR30  EQU   *                        STAT OP > 4 CHARS
         MVC   PRTMESS,MESS30
         B     ERROR200
ERROR40  EQU   *                        CONT STAT NOT FOUND
         MVC   PRTMESS,MESS40
         B     ERROR200
ERROR50  EQU   *                        CONT DOES NOT START BEFORE 17
         MVC   PRTMESS,MESS50
         B     ERROR200
ERROR60  EQU   *
         MVC   PRTMESS,MESS60           SCAN WENT PAST COL 71
         B     ERROR200
ERROR70  EQU   *
         MVC   PRTMESS,MESS70           STATEMENT TOO LONG
         B     ERROR200
ERROR200 EQU   *                        PRINT ERROR
         MVC   PRTMBR,PDSMBR
         MVC   PRTSTAT,INREC
         MVI   PRTCC,CHR0               DOUBLE SPACE
         PUT   PRTFILE,PRTREC
         MVC   PRTREC,PRTREC-1
         L     R1,LINECTR
         A     R1,=F'1'                 BUMP LINE CTR
         ST    R1,LINECTR
         C     R1,=F'54'                IS LINECTR < 54
         BL    ERROR290
         BAL   R10,HEADER10             PRINT HEADER
ERROR290 EQU   *
         B     A300
*                                                                     *
HEADER10 EQU   *                        HEADER ROUTINE
         PUT   PRTFILE,HDR1
         PUT   PRTFILE,HDR2
         SR    R1,R1
         ST    R1,LINECTR               ZERO LINECTR
         BR    R10
*                                                                     *
         EJECT
SCAN10   EQU   *                        SCAN FOR BLANK
         SR    R1,R1
SCAN12   CLI   0(R5),BLANK              IS IT BLANK
         BE    SCAN18
         A     R1,=F'1'
         A     R5,=F'1'
         BCT   R0,SCAN12                LOOP
*                                       ERROR                         *
SCAN18   BR    R10
*                                                                     *
SCAN20   EQU   *                        SCAN FOR NON-BLANK
         SR    R1,R1
SCAN22   CLI   0(R5),BLANK
         BNE   SCAN28
         A     R1,=F'1'
         A     R5,=F'1'
         BCT   R0,SCAN22                LOOP
*                                       ERROR                         *
SCAN28   BR    R10
*                                                                     *
SCAN30   EQU   *                        SCAN FOR BLANK AND SAVE
         SR    R1,R1
         LA    R2,FOUND
         MVC   FOUND,FOUND-1
SCAN32   CLI   0(R5),BLANK
         BE    SCAN38
         MVC   0(1,R2),0(R5)
         A     R1,=F'1'
         A     R2,=F'1'
         A     R5,=F'1'
         BCT   R0,SCAN32                LOOP
*                                       ERROR                         *
SCAN38   BR    R10
*                                                                     *
SCAN40   EQU   *                        SCAN FOR '-----' OR BLANK
         SR    R1,R1
         LA    R2,FOUND
         MVC   FOUND,FOUND-1
SCAN42   CLI   0(R5),QUOTE
         BE    SCAN46
         CLI   0(R5),BLANK
         BE    SCAN49
SCAN44   EQU   *
         MVC   0(1,R2),0(R5)
         A     R1,=F'1'
         A     R2,=F'1'
         A     R5,=F'1'
         BCT   R0,SCAN42
         B     SCAN48
SCAN46   EQU   *
         MVC   0(1,R2),0(R5)
         A     R1,=F'1'
         A     R2,=F'1'
         A     R5,=F'1'
         CLI   0(R5),QUOTE
         BE    SCAN44
         BCT   R0,SCAN46
*                                                                     *
SCAN48   L     R15,=F'4'                SET RC TO 4
         BR    R10
SCAN49   SR    R15,R15                  SET RC TO 0
         BR    R10
*                                                                     *
SCAN100  EQU   *                        SCAN   CHARS AND SAVE
         MVI   SCANCHR1,BLANK           BLANK-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN110  EQU   *
         MVI   SCANCHR1,EQUAL           EQUAL-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN115  EQU   *
         MVI   SCANCHR1,EQUAL           EQUAL-BLANK
         MVI   SCANCHR2,BLANK
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN120  EQU   *
         MVI   SCANCHR1,COMMA           COMMA-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN125  EQU   *
         MVI   SCANCHR1,COMMA           COMMA-BLANK
         MVI   SCANCHR2,BLANK
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN130  EQU   *
         MVI   SCANCHR1,POINT           POINT-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN140  EQU   *
         MVI   SCANCHR1,QUOTE           QUOTE-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN150  EQU   *
         MVI   SCANCHR1,BLANK           BLANK-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN160  EQU   *
         MVI   SCANCHR1,AMPER           AMPER-NULL
         MVI   SCANCHR2,NULL
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN170  EQU   *
         MVI   SCANCHR1,POINT           POINT-COMMA
         MVI   SCANCHR2,COMMA
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN180  EQU   *
         MVI   SCANCHR1,LEFTP           LEFT PAREN-BLANK
         MVI   SCANCHR2,BLANK
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN190  EQU   *
         MVI   SCANCHR1,RIGHTP          RIGHT PAREN-COMMA-BLANK
         MVI   SCANCHR2,COMMA
         MVI   SCANCHR3,BLANK
         B     SCAN200
SCAN194  EQU   *
         MVI   SCANCHR1,RIGHTP          RIGHT PAREN-BLANK
         MVI   SCANCHR2,BLANK
         MVI   SCANCHR3,NULL
         B     SCAN200
SCAN196  EQU   *
         MVI   SCANCHR1,RIGHTP          RIGHTP PAREN-LEFT PAREN-BLK
         MVI   SCANCHR2,LEFTP
         MVI   SCANCHR3,BLANK
         B     SCAN200
SCAN200  EQU   *
         SR    R1,R1
         LA    R2,FOUND                 POINT R2 TO FOUND
         MVC   FOUND,FOUND-1            BLANK FOUND
SCAN210  EQU   *
         CLC   SCANCHR1,0(R5)           IS IT CHAR 1
         BE    SCAN230
         CLC   SCANCHR2,0(R5)           IS IT CHAR 2
         BE    SCAN230
         CLC   SCANCHR3,0(R5)           IS IT CHAR 3
         BE    SCAN230
         MVC   0(1,R2),0(R5)            MOVE CHAR TO FOUND
         A     R1,=F'1'
         A     R2,=F'1'                 BUMP CTRS
         A     R5,=F'1'
         BCT   R0,SCAN210               LOOP
*                                       ERROR                         *
SCAN230  BR    R10
*                                                                     *
         EJECT
GET10    EQU   *
         TM    PDSSW,HEX40              DO WE HAVE MEMBER NAME
         BO    GET20                    YES
         L     R15,PDSENTRY
         CALL  (15),(PDSGETD,PDSMBR),VL     GET MEMBER NAME
         C     R15,=F'4'                IS IT END OF DIRECTORY
         BE    GET60                    YES
         OI    PDSSW,HEX40              WE HAVE MEMBER NAME
GET20    EQU   *
         TM    PDSSW,HEX20              HAVE WE FOUND MEMBER
         BO    GET30                    YES
         L     R15,PDSENTRY
         CALL  (15),(PDSFIND,PDSMBR),VL     FIND MEMBER
         C     R15,=F'4'                WAS MEMBER FOUND
         BE    GET40                    NO
         OI    PDSSW,HEX20              YES - WE HAVE FOUND MEMBER
         MVC   XPGM,BLANKS
         MVC   XSTEP,BLANKS
GET30    EQU   *
         L     R15,PDSENTRY
         CALL  (15),(PDSGETM,INREC),VL      GET MBR RECORD
         C     R15,=F'4'                IS IT END OF MEMBER
         BE    GET40
         MVC   XPROC,PDSMBR             MOVE MBR NAME TO XREC
         B     GET90
GET40    EQU   *
         NI    PDSSW,HEX80              RESET SWITCHES
         B     GET10                    GO TO GET NEXT MEMBER
GET60    EQU   *
         TM    PDSSW,HEX80              ARE WE AT END OF 2ND PDS
         BO    GET80                    YES
         CLC   PDSNAME2,=CL8'DUMMY'     IS 2ND PDS DUMMY
         BE    GET80                    YES
         L     R15,PDSENTRY
         CALL  (15),(PDSCLOSE),VL       CLOSE 1ST FILE
         L     R15,PDSENTRY
         CALL  (15),(PDSOPEN,PDSNAME2),VL     OPEN 2ND FILE
         OI    PDSSW,HEX80              TURN SW ON
         B     GET10
GET80    EQU   *
         L     R15,PDSENTRY
         CALL  (15),(PDSCLOSE),VL       CLOSE FILE
         L     R15,=F'4'                SET RC TO 4
         BR    R10
GET90    EQU   *
         SR    R15,R15                  SET RC TO 0
         BR    R10
*                                                                     *
         EJECT
         LTORG
         EJECT
*                                                                     *
SYSPDCB  DS    0F
PRTFILE  DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,                      X
               RECFM=FBA,LRECL=133,BLKSIZE=3990
*                                                                     *
SORTIDCB DS    0F
OUTFILE  DCB   DDNAME=SORTIN,DSORG=PS,MACRF=PM,                        X
               RECFM=FB,LRECL=135,BLKSIZE=2700
*                                                                     *
         EJECT
PDSENTRY DC    F'0'                     NSP012 ENTRY POINT
PDSOPEN  DC    F'0'                     PDS OP CODES
PDSGETD  DC    F'4'
PDSFIND  DC    F'8'
PDSGETM  DC    F'12'
PDSCLOSE DC    F'16'
PDSNAME1 DC    CL8'PROCLIB1'
PDSNAME2 DC    CL8'PROCLIB2'
PDSMBR   DC    CL8' '
PDSSW    DC    X'00'
PDSPARM  DC    C' '           INFO PASSED FROM PARM OF EXEC CARD
*                                                                     *
MVC10    MVC   0(0,R6),FOUND
MVC20    MVC   0(0,R6),FOUND
*                                                                     *
SCANCHR1 DC    C' '                     SCAN CHARS
SCANCHR2 DC    C' '
SCANCHR3 DC    C' '
*                                                                     *
DWRD     DS    D
LINECTR  DC    F'0'
WKAR1LEN DC    A(WKAREA1E-WKAREA1)      LENGTH OF WKAREA1
SYMTLEN  DC    A(SYMTABE-SYMTAB)        LENGTH OF SYMTAB
MVCLLEN  DC    X'40000001'
*                                                                     *
         EJECT
INREC    DS    0CL80                    INPUT RECORD
         DC    CL80' '
*                                                                     *
         DC    C' '
PRTREC   DS    0CL133                   PRINT RECORD
PRTCC    DC    CL1' '                   CARR CONTROL
PRTMBR   DC    CL8' '
         DC    CL5' '
PRTSTAT  DC    CL80' '
         DC    CL5' '
PRTMESS  DC    CL30' '
         DC    CL4' '
*                                                                     *
HDR1     DS    0CL133                   HEADER 1
         DC    CL133'1     DSNAME CROSS REFERENCE EXCEPTION LIST'
*                                                                     *
HDR2     DS    0CL133                   HEADER 2
         DC    CL133' '
*                                                                     *
MESS10   DC    CL30'STAT NAME GREATER THAN 8 CHAR'
MESS20   DC    CL30'STAT OP NOT FOUND'
MESS30   DC    CL30'STAT OP GREATER THAN 4 CHARS'
MESS40   DC    CL30'CONTINUATION NOT FOUND'
MESS50   DC    CL30'CONTINUATION PAST COL 16'
MESS60   DC    CL30'SCAN PAST COL 71'
MESS70   DC    CL30'STATEMENT TOO LONG'
*                                                                     *
BLANKS   DC    CL80' '
         DC    C' '
FOUND    DC    CL80' '
*                                                                     *
         DC    C' '
W2STAT   DC    CL256' '
W2STAT2  DC    CL256' '
*                                                                     *
         EJECT
         DS    0F
SORTLST1 DC    X'80',AL3(SORTPRM1)
         DC    H'0'
SORTPRM1 DC    AL2(PARMEND1-PARMBEG1)
PARMBEG1 EQU   *
         DC    A(SORT1,SORTEND1,REC1,RECEND1,0,0)
SORTSIZ1 DC    F'100000'
SORTMSG1 DC    X'FF00'
         DC    C'AP'
PARMEND1 EQU   *
*                                                                     *
SORT1    DS    0H
*                              DSNAME    I/O       PROC      STEP     *
         DC    C' SORT FIELDS=(1,44,CH,A,45,1,CH,D,46,8,CH,A,62,8,CH,A'
         DC    C'),SIZE=E40000 '
SORTEND1 EQU   *-1
*                                                                     *
REC1     DS    0H
         DC    C' RECORD LENGTH=135,TYPE=F '
RECEND1  EQU   *-1
*                                                                     *
         EJECT
         DC    C' '
XREC     DS    0CL135                   XREF RECORD
XDSN     DC    CL44' '                  DSNAME
XIO      DC    CL1' '                   INPUT/OUTPUT
XPROC    DC    CL8' '                   PROC
XPGM     DC    CL8' '                   PROGRAM
XSTEP    DC    CL8' '                   STEP
XRELGEN  DC    CL4' '                   RELATIVE GEN
XDISP    DS    0CL9                     DISP
XDISP1   DC    CL3' '
XDISP2   DC    CL3' '
XDISP3   DC    CL3' '
XUNIT    DC    CL8' '                   UNIT
XEXPDT   DC    CL5' '                   EXPDT/RETPD
XSPACE   DC    CL25' '                  SPACE
XDCB     DS    0CL15                    DCB
XDSORG   DC    CL2' '                        DSORG
XRECFM   DC    CL3' '                        RECFM
XLRECL   DC    CL5' '                        LRECL
XBLKSIZE DC    CL5' '                        BLKSIZE
         DC    CL15' '                  FILLER
*                                                                     *
KEYWORDS DS    0F                       KEYWORDS TO SCAN FOR
KWLEN    DC    X'04'                    KEYWORD LENGTH
KWNAME   DC    CL9'DSN='                KEYWORD
KWRC     DC    X'00'                    RETURN CODE
         DC    X'00'
KWADDR   DC    A(DSN10)
KEYWORDL EQU   *-KEYWORDS               ENTRY LENGTH
         DC    X'07',CL9'DSNAME=',X'0000',A(DSN20)
         DC    X'04',CL9'PGM=',X'0000',A(PGM10)
         DC    X'05',CL9'DISP=',X'0000',A(DISP10)
         DC    X'05',CL9'UNIT=',X'0000',A(UNIT10)
         DC    X'06',CL9'EXPDT=',X'0000',A(EXPDT10)
         DC    X'06',CL9'RETPD=',X'0000',A(EXPDT10)
         DC    X'06',CL9'SPACE=',X'0000',A(SPACE10)
         DC    X'04',CL9'DCB=',X'0000',A(DCB10)
         DC    X'06',CL9'DSORG=',X'0000',A(DSORG10)
         DC    X'06',CL9'RECFM=',X'0000',A(RECFM10)
         DC    X'06',CL9'LRECL=',X'0000',A(LRECL10)
         DC    X'08',CL9'BLKSIZE=',X'0000',A(BLKSIZ10)
         DC    X'FF'                    END OF TABLE
*                                                                     *
WKAREA1  DS    0CL2048                  INPUT STATMENT
W1NAME   DC    CL8' '                   JOBNAME-PROCNAME-STEP-DDNAME
W1IDNT   DC    CL4' '                   JOB-PROC-EXEC-DD
W1STAT   DC    CL256' '                STATMENT
W1STAT2  DC    CL256' '
         DC    6CL256' '
WKAREA1E EQU   *
*                                                                     *
SYMTAB   DS    0CL2048                  SYMBOLIC TABLE
SYML1    DC    CL1' '                   ENTRY LENGTH
SYML2    DC    CL1' '                   NAME LENGTH
SYMNAME  DC    CL8' '                   ENTRY NAME
SYML3    DC    CL1' '                   EQUATE LENGTH
SYMEQU   DC    CL10' '                  EQUATE
         DC    8CL256' '
SYMTABE  EQU   *
*                                                                     *
         END
