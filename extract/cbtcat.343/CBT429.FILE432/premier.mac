*
* CE PROGRAMME VERIFIE SI UN NOMBRE DE 10 CHIFFRES EST PREMIER
* APPEL EN BATCH :   //  EXEC PGM=PREMIER,PARM=NNNNNNNNNN
*
PREMIER  CSECT
*
* INSTRUCTIONS DE CHAINAGE APPELANT/APPELE
*
        USING   *,R15     R15 REGISTRE DE BASE TEMPORAIRE
        SAVE (14,12),,PREMIER-&SYSDATE-&SYSTIME-FALISSARD
        DROP R15          R15 N'EST PLUS REGISTRE DE BASE
        LR   R12,R15      INITIALISER R12 REGISTRE DE BASE
        USING PREMIER,R12
        LR   R11,R13      R11 POINTE SUR SAVE AREA DE L'APPELANT
        LA   R13,SAVE     R13 POINTE SUR NOTRE SAVE AREA
        ST   R13,8(R11)   SAUVER ADRESSE DE NOTRE SAVE CHEZ L'APPELANT
        ST   R11,4(R13)   SAUVER ADRESSE SAVE DE L'APPELANT CHEZ NOUS
*
* CONTROLE SUR LE NOMBRE (10 CHIFFRES) ET CONVERSION EN BINAIRE
*
        L    R2,0(R1)     RECUPERER LE PARAMETRE PASSE EN PARM= DU JCL
        MVC  NOMBRE,2(R2) NOTER LE NOMBRE (SAUTER 2 OCTETS DE LONGUEUR)
        CLC  NOMBRE,MAXI  VERIFIER SI NOMBRE PAS TROP GRAND
        BH   FIN          SI OUI, FINI
        PACK NBREP,NOMBRE CONVERSION DECIMAL ETENDU -> PACKE
        CVB  R4,NBREP     CONVERSION PACKE -> BINAIRE
        ST   R4,NBRE      MEMORISER DANS "NBRE"
*
        LA   R6,2         PREMIER DIVISEUR A TESTER : 2
*
* BOUCLE POUR TESTER LA DIVISIBILITE
* ON TESTE TOUS LES DIVISEURS POSSIBLES, DE 2 JUSQU'A RACINE DU NOMBRE
*
LOOP    DS   0H
* VERIFIER GRANDEUR DU DIVISEUR
        XR   R8,R8        FORCER R8 A 0
        LR   R9,R6        CHARGER LE DIVISEUR
        MR   R8,R6        LE MULTIPLIER PAR LUI-MEME
        C    R9,NBRE      CARRE DU DIVISEUR DOIT ETRE < NOMBRE
        BH   PREM         SINON TERMINE, LE NOMBRE EST PREMIER
*
        XR   R4,R4        FORCER R4 A 0
        L    R5,NBRE      CHARGER LE NOMBRE
        DR   R4,R6        DIVISER
        LTR  R4,R4        RESTE DE LA DIVISION = 0 ?
        BZ   NONPREM      OUI, NON PREMIER
        LA   R6,1(0,R6)   DIVISEUR SUIVANT (ON AJOUTE 1 A R6)
        B    LOOP         TESTER LE DIVISEUR SUIVANT
*
* NOMBRE NON PREMIER,ON A TROUVE UN DIVISEUR, ON L'AFFICHE A LA CONSOLE
*
NONPREM DS   0H
        CVD  R6,NBREP     CONVERSION BINAIRE -> PACKE
        UNPK NOMBRE,NBREP CONVERSION EN DECIMAL ETENDU
        OI   NOMBRE+L'NOMBRE-1,X'F0' NORMALISER LE SIGNE
        WTO  '** NOMBRE NON PREMIER, UN DIVISEUR EST :',ROUTCDE=11
        MVC  WTO001+8(10),NOMBRE    METTRE LE NOMBRE DANS LE MESSAGE
WTO001  WTO '                                           ',ROUTCDE=11
*
* FIN D'EXECUTION
*
FIN     L    R13,4(R13)
        RETURN   (14,12),T,RC=0
*
* NOMBRE PREMIER, ON N'A PAS TROUVE DE DIVISEUR
*
PREM    WTO  '** LE NOMBRE EST PREMIER **',ROUTCDE=11
        B    FIN
*
* DONNEES
*
NOMBRE  DC   CL10' '              NOMBRE RECU EN PARAMETRE
MAXI    DC   CL10'2147483647'     CONTENU MAXI D'UN MOT BINAIRE
NBRE    DC   F'0'                 NOMBRE EN BINAIRE
        CNOP 0,8                 FRONTIERE DE DOUBLE-MOT
NBREP   DC   PL8'0'               NOMBRE EN DECIMAL PACKE
SAVE    DS   18F                  SAVE AREA 18 MOTS
R0      EQU  0
R1      EQU  1
R2      EQU  2
R3      EQU  3
R4      EQU  4
R5      EQU  5
R6      EQU  6
R7      EQU  7
R8      EQU  8
R9      EQU  9
R10     EQU  10
R11     EQU  11
R12     EQU  12
R13     EQU  13
R14     EQU  14
R15     EQU  15
        END
