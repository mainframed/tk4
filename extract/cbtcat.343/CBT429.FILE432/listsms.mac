*
*        LISTING THE SMS CONFIGURATION
* PUBLISHED BY XEPHON - MVS UPDATE - OCTOBER 1995
*
*THIS PROGRAM ENABLES YOU TO LIST THE ONLINE SMS CONFIGURATION USING A
*BATCH JOB. PRESENTLY, THE ONLY METHOD TO GET A DETAILED DISPLAY OF
*YOUR CURRENT SMS PARAMETERS IS THROUGH ISMF UNDER TSO ; THE MVS
*COMMAND "DISPLAY SMS" GIVES ALSO SOME BASIC INFORMATION. BUT TO GET IT
*FROM A USER PROGRAM OR TO SEND ALL THIS TO A PRINTER IS STILL A
*BIG PROBLEM ×
*A DESCRIPTION OF THE CURRENT SMS CONFIGURATION CAN BE FOUND IN THE SMS
*ADDRESS-SPACE IN EXTENDED PRIVATE, BUT THE STANDARD WAY TO GET IT IS
*THROUGH THE SSI INTERFACE.  THIS PROGRAM OBTAINS ALL INFORMATION ABOUT
*THE BASE CONFIGURATION, DATA CLASSES, STORAGE CLASSES, MANAGEMENT
*CLASSES AND STORAGE GROUPS. IT WAS WRITTEN IN A DFP 3.2 ENVIRONMENT
*(DATA RELATED TO OAM IN STORAGE GROUPS WAS NEGLECTED). DSECTS IGDBCD,
*IGDDCD, IGDSCD, IGDMCD, IGDSGD DESCRIBING THE SMS CONSTRUCTS HAD BEEN
*PROVIDED BY IBM WITH DFP 3.1, BUT NOW EVERY ONE IS "OCO" (YOU SHOULD
*TRY AND GET FROM IBM AN OLD PTF, UY42039, SHOULD YOU WANT THE
*ORIGINAL DSECTS).
*THE PROGRAM CAN BE FURTHER ADAPTED FOR MORE RECENT DFP
*RELEASES, BY CODING AN ABEND AFTER THE IEFSSREQ CALL AND EXAMINING THE
*BUFFER POINTED BY REGISTER 7 ; THEN YOU SHALL TRY AND GUESS WHAT DO
*THE NEW FIELDS MEAN.
*
*
* LIST THE SMS CONFIGURATION, DATA / STOR / MGMT CLASSES, STORGROUPS
* JCL :  //LISTSMS  EXEC  PGM=LISTSMS           <--- MUST BE AUTHORIZED
*        //SYSPRINT DD SYSOUT=*,LRECL=80,RECFM=FB
*
         IEFSSSA  ,                 SSOB EXTENSION FOR SMS SSI REQUESTS
         IEFJESCT ,                 MANDATORY FOR IEFSSREQ REQUEST
         CVT   DSECT=YES            MANDATORY FOR IEFSSREQ REQUEST
* THIS MACRO CONVERTS A BINARY FULLWORD TO DECIMAL
         MACRO
         EXTENDW &BIN,&ETEND
         XR    R1,R1                SET REGISTER TO ZERO
         ICM   R1,15,&BIN           LOAD BINARY ZONE
         CVD   R1,DBLEWORD          CONVERT TO DECIMAL
         MVC   &ETEND.(10),MASK2    LOAD MASK FOR ED INSTRUCTION
         ED    &ETEND.(10),PACKED5  CONVERSION FROM PACKED TO DECIMAL
         MEND
* THIS MACRO CONVERTS A BINARY HALFWORD TO DECIMAL
         MACRO
         EXTEND  &BIN,&ETEND
         XR    R1,R1                SET REGISTER TO ZERO
         ICM   R1,3,&BIN            LOAD BINARY ZONE
         CVD   R1,DBLEWORD          CONVERT TO DECIMAL
         MVC   &ETEND.(6),MASK1     LOAD MASK FOR ED INSTRUCTION
         ED    &ETEND.(6),PACKED3   CONVERSION FROM PACKED TO DECIMAL
         MEND
* THIS MACRO PERFORMS A MOVE CONDITIONAL, BASED ON VALUES OF &TEST ZONE
         MACRO
&NLA     MVCCASE &TO=,&TEST=,&TSTCOD=CLI,&FAILCOD=BNE,&IF=,&MOVE=
&NLA     DS    0H
         LCLA  &NBR,&I
&NBR     SETA  N'&IF                 HOW MANY VALUES TO TEST ?
&I       SETA  1
.LOOP    &TSTCOD  &TEST,&IF(&I)      TEST FOR VALUE
         &FAILCOD NO&SYSNDX.&I
         MVC   &TO,&MOVE(&I)         MATCH, MOVE THE VALUE
         B     ENDM&SYSNDX           AND GO OUT
NO&SYSNDX.&I   DS    0H
&I       SETA  &I+1
         AIF   (&I LE &NBR).LOOP
ENDM&SYSNDX    DS    0H
         MEXIT
         MEND
*
LISTSMS  CSECT
* BASE REGISTERS : 12 11 6
         STM   R14,R12,12(R13)        SAVE REGISTERS
         LR    R12,R15
         LA    R11,4095(0,R15)
         LA    R11,1(0,R11)
         LA    R6,4095(0,R11)
         LA    R6,1(0,R6)
         USING LISTSMS,R12,R11,R6   R12 + R11 + R6 = BASE REGISTERS
         ST    R13,SAVE+4
         LA    R13,SAVE
* GET A BUFFER FOR THE SSI ; OPEN SYSPRINT
         L     R9,SIZE              SIZE OF SMS BUFFER
         GETMAIN  R,LV=(9)
         LR    R7,R1                SAVE ADDRESS OF ACQUIRED ZONE
         ST    R7,ADDZONE           SAVE ADDRESS OF ACQUIRED ZONE
         OPEN  (SYSPRINT,(OUTPUT))
         LA    R8,EXTE
         USING IEFSSSA,R8
* TITLE OF THE REPORT
         MVC   RECORD,TITLE
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
*----------------------------------------------------------------*
* SMS CONFIGURATION ('IGDBCD' BLOCK)                             *
*----------------------------------------------------------------*
         MVI   SSSA1TYP,SSSA1CON    RETURN THE CONFIGURATION
         BAL   R10,CALLSSI
         CLC   =CL8'IGDBCD',0(R7)   BCDPID ID IS CORRECT ?
         BNE   ERROR5
* BASE CONFIG : PRINT THE TITLE
         MVC   RECORD,$SPACES
         MVC   RECTITLE,=CL30' BASE CONFIGURATION           '
         BAL   R10,PUTREC
* BASE CONFIG : PRINT SCDS
         MVC   RECTITLE,=CL30'   CDS NAME=                 '
         MVC   RECDATA+2(44),X'150'(R7)    BCDSCDSN (NAME OF SCDS)
         BAL   R10,PUTREC
* BASE CONFIG : PRINT SCDS STATUS
         MVC   RECTITLE,=CL30'   CDS STATUS=               '
         MVC   RECDATA+2(8),=CL8'      ??'
         MVCCASE TEST=268(R7),TO=RECDATA+2(8),IF=(1,2,3),              X
               MOVE=(=C'   VALID',=C' INVALID',=C' UNKNOWN')  BCDSTAT
         BAL   R10,PUTREC
* BASE CONFIG : PRINT THE DESCRIPTION
         MVC   RECTITLE,=CL20'   DESCRIPTION=     '
         MVC   RECORD+20(60),88(R7)      BCDFDESC
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVC   RECORD+20(60),148(R7)     BCDFDESC+60
         BAL   R10,PUTREC
* BASE CONFIG : PRINT DEFAULT MANAGEMENT CLASS
         MVC   BCMGMT,$SPACES
         LH    R1,212(R7)              BCDMCLEN   LENGTH OF CLASS
         BCTR  R1,0
         EX    R1,MOVDMC
         MVC   RECTITLE,=CL30'   DEFAULT MANAGEMENT CLASS=  '
         MVC   RECDATA+2(L'BCMGMT),BCMGMT
         BAL   R10,PUTREC
* BASE CONFIG : PRINT DEFAULT UNIT
         MVC   RECTITLE,=CL30'   DEFAULT UNIT=              '
         MVC   RECDATA+2(8),252(R7)    BCDDUNIT
         BAL   R10,PUTREC
* BASE CONFIG : PRINT TRACK SIZE
         EXTENDW 244(R7),BCTRKSZ       BCDTRKSZ  TRACK SIZE IN BYTES
         MVC   RECTITLE,=CL30'   DEFAULT TRACK SIZE (BYTES)='
         MVC   RECDATA(L'BCTRKSZ),BCTRKSZ
         BAL   R10,PUTREC
* BASE CONFIG : PRINT TRACKS/CYLINDER
         EXTENDW 248(R7),BCCYLCP       BCDCYLCP  CYL CAPACITY (TRK/CYL)
         MVC   RECTITLE,=CL30'   DEFAULT TRACKS / CYLINDER= '
         MVC   RECDATA(L'BCCYLCP),BCCYLCP
         BAL   R10,PUTREC
* BASE CONFIG : PRINT SYSTEMS
         MVC   BCSYST,$SPACES
         LA    R1,BCSYST
         LA    R2,X'110'(R7)            BCDFSYSN  SYSTEM NAMES
         LA    R3,8                     8 SYSTEMS
LOOPBCSY MVC   0(8,R1),=CL8'       -'
         CLC   0(8,R2),$SPACES
         BE    BCSYS1
         CLC   0(8,R2),$ZEROES
         BE    BCSYS1
         MVC   0(8,R1),0(R2)
BCSYS1   LA    R1,9(0,R1)               NEXT SYSTEM
         LA    R2,8(0,R2)               NEXT SYSTEM
         BCT   R3,LOOPBCSY
         MVC   RECTITLE,=CL30'   SYSTEMS=                   '
         MVC   RECDATA+2(L'BCSYST),BCSYST
         BAL   R10,PUTREC
* BASE CONFIG : PRINT LAST UPDATE  INFORMATION
         LA    R7,24(,R7)                SKIP FOR LAST MOD. INFORMATION
         BAL   R4,LASTMOD                PRINT LAST MOD. INFORMATION
* PRINT SEPARATOR
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
*----------------------------------------------------------------*
* SMS DATA CLASSES ('IGDDCD' BLOCK)                              *
*----------------------------------------------------------------*
         MVI   SSSA1TYP,SSSA1DCL    RETURN ALL DATA CLASSES
         BAL   R10,CALLSSI
         CLC   =CL8'IGDDCD',0(R7)   DCDPID  ID IS CORRECT ?
         BNE   ERROR1
         L     R5,12(R7)            DCDPCNT HOW MANY CLASSES ?
         MVC   ELGTH,20(R7)         DCDPLEN LENGTH OF AN ENTRY
         LA    R7,24(0,R7)          SKIP PREFIX,  ACCESS TO 1ST ENTRY
* PROCESS ONE ENTRY IN DATA CLASS TABLE
LOOPDC   MVC   DCNAME,$SPACES
         LH    R1,0(R7)             DCDNMLEN  LENGTH NAME OF CLASS
         BCTR  R1,0
         EX    R1,MOVDCN
* DATA CLASS : SPACE INFORMATION (PRIMARY SPACE, SECONDARY, DIRECTORY)
         MVC   SPPRIM,=C'         -'    TEST DCDSPEC :
         TM    188(R7),B'00000001'      SPACE PRIMARY SPECIFIED ?
         BNO   NOSPPRIM                 NO
         EXTENDW 196(R7),SPPRIM     DCDSPPRI SPACE PRIMARY
NOSPPRIM MVC   SPSECO,=C'         -'    TEST DCDSPEC+1 :
         TM    189(R7),B'10000000'      SPACE SECONDARY SPECIFIED ?
         BNO   NOSPSEC                  NO
         EXTENDW 200(R7),SPSECO     DCDSPSEC SPACE SECONDARY
NOSPSEC  MVC   SPDIR,=C'         -'
         TM    189(R7),B'01000000'      SPACE DIRECTORY SPECIFIED ?
         BNO   NOSPDIR                 NO
         EXTENDW 204(R7),SPDIR      DCDDIBLK SPACE BLOCKS OF DIRECTORY
* DATA CLASS : AVGREC
NOSPDIR  MVI   AVGREC,C'-'
         TM    189(R7),B'00010000'     AVGREC SPECIFIED ?
         BNO   NOAVGR                    NO
         MVI   AVGREC,C'?'
         MVCCASE TEST=208(R7),TO=AVGREC,TSTCOD=TM,FAILCOD=BNO,         X
               IF=(1,2,3),MOVE=(=C'U',=C'K',=C'M')
* RECORG
NOAVGR   MVC   RECORG,=C' -'
         MVCCASE TEST=184(R7),TO=RECORG,        TEST DCDRCORG          X
               IF=(1,2,4,8),MOVE=(=C'KS',=C'ES',=C'LS',=C'RR')
* PDS / LIBRARY
         MVC   TYPEDS,=C'      -'
         MVCCASE TEST=239(R7),TO=TYPEDS,        TEST DCDDSTYP          X
               IF=(1,2),MOVE=(=C'    PDS',=C'LIBRARY')
* DATA CLASS, INDEX OPTIONS : IMBED, REPLICATE
GOODTYP  MVI   IMBED,C'-'
         TM    190(R7),B'00100000'     IMBED OPTION SPECIFIED ?
         BNO   NOIMBD
         MVI   IMBED,C'Y'
         TM    234(R7),X'80'             DCDVINDX  IMBED = Y ?
         BO    NOIMBD
         MVI   IMBED,C'N'
NOIMBD   MVI   REPLI,C'-'
         TM    190(R7),B'00010000'     REPLICATE OPTION SPECIFIED ?
         BNO   NOREPLI
         MVI   REPLI,C'Y'
         TM    234(R7),X'40'             DCDVINDX  REPLICATE = Y ?
         BO    NOREPLI
         MVI   REPLI,C'N'
* DATA CLASS, CARRIAGE CONTROL : ANSI, MACHINE
NOREPLI  MVI   RECFM2,C' '               CARRIAGE CONTROL: TEST DCDCNTL
         MVCCASE TEST=187(R7),TO=RECFM2,IF=(1,2),MOVE=(=C'A',=C'M')
* RECFM
GOODCC   MVC   RECFM,=C'  -'
         TM    188(R7),B'00100000'       RECFM SPECIFIED ?
         BNO   GOODRECF
         MVC   RECFM,=C'???'             TEST DCDRECFM
         MVCCASE TEST=185(R7),TO=RECFM,IF=(1,2,3,4,5,6,7,8,9),         X
               MOVE=(=C'  U',=C'  V',=C' VS',=C' VB',=C'VBS',          X
               =C'  F',=C' FS',=C' FB',=C'FBS')
GOODRECF MVC   AVGVAL,=C'         -'
         TM    189(R7),B'00100000'       AVGVALUE SPECIFIED ?
         BNO   NOAVGV
         EXTENDW 212(R7),AVGVAL          DCDAUNIT AVERAGE VALUE
NOAVGV   MVC   LRECL,=C'         -'
         TM    188(R7),B'01000000'       LRECL SPECIFIED ?
         BNO   NOLRECL
         EXTENDW 220(R7),LRECL           DCDLRECL LRECL
NOLRECL  MVC   VOLCT,=C'     -'
         TM    189(R7),B'00001000'       VOL COUNT SPECIFIED ?
         BNO   NOVOLCT
         EXTEND 236(R7),VOLCT            DCDVOLCT VOL COUNT
NOVOLCT  MVC   KEYOFF,=C'     -'
         TM    188(R7),B'00001000'       KEYOFF SPECIFIED ?
         BNO   NOKEYOFF
         EXTEND 192(R7),KEYOFF           DCDKOFF  KEY OFFSET
NOKEYOFF MVC   FREECI,=C'     -'
         TM    189(R7),B'00000010'       CI % SPECIFIED ?
         BNO   NOFREECI
         EXTEND 228(R7),FREECI           DCDCIPCT FREE SPACE CI %
NOFREECI MVC   FREECA,=C'     -'
         TM    189(R7),B'00000001'       CA % SPECIFIED ?
         BNO   NOFREECA
         EXTEND 230(R7),FREECA           DCDCAPCT FREE SPACE CA %
NOFREECA MVC   CISIZE,=C'         -'
         TM    189(R7),B'00000100'       CISIZE SPECIFIED ?
         BNO   NOCISIZE
         EXTENDW 224(R7),CISIZE          DCDCISZ  CI SIZE
NOCISIZE MVC   RETPD2,=C'     -'
         TM    188(R7),B'00000010'       RETPD SPECIFIED ?
         BNO   NORETPD2
         EXTEND 242(R7),RETPD2           DCDEXPDY RETPD
         B     NORETPD1
NORETPD2 MVC   RETPD1,=C'      '
         TM    188(R7),B'00000100'       EXPDT SPECIFIED ?
         BNO   NORETPD1
         EXTEND 240(R7),RETPD1           DCDEXPYR EXPDT YEAR
         EXTEND 242(R7),RETPD2           DCDEXPDY EXPDT DAY OF YEAR
NORETPD1 MVC   KEYLEN,=C'     -'
         TM    188(R7),B'00010000'       KEYLEN SPECIFIED ?
         BNO   NOKEYLEN
         XC    HALFWORD,HALFWORD         ZEROISE HALFWORD
         MVC   HALFWORD+1,194(R7)        DCDKLEN        KEYLEN
         EXTEND HALFWORD,KEYLEN          KEYLEN
NOKEYLEN MVI   SHR2,C'-'
         TM    190(R7),B'10000000'       SHROPT CROSS-REGION SPECIFIED?
         BNO   NOSHRXR
         MVC   SHR2,233(R7)              DCDXREG              SHROPT
         OI    SHR2,X'F0'                SHROPT CHANGED TO DECIMAL
NOSHRXR  MVI   SHR1,C'-'
         TM    190(R7),B'01000000'     SHROPT CROSS-SYSTEM SPECIFIED?
         BNO   NOSHRXS
         MVC   SHR1,232(R7)              DCDXSYS              SHROPT
         OI    SHR1,X'F0'                SHROPT CHANGED TO DECIMAL
* DATA CLASS : PRINT ALL INFORMATION
NOSHRXS  MVC   RECTITLE,=CL30' DATA CLASS=                  '
         MVC   RECDATA(L'DCNAME),DCNAME
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL20' DESCRIPTION=       '
         MVC   RECORD+20(60),64(R7)                 DCDDESC
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVC   RECORD+20(60),124(R7)                DCDDESC+60
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RECORG=                    '
         MVC   RECDATA+8(L'RECORG),RECORG
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RECFM=                     '
         MVC   RECDATA+7(L'RECFM),RECFM
         MVC   RECDATA+L'RECFM+7(L'RECFM2),RECFM2
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   LRECL=                     '
         MVC   RECDATA(L'LRECL),LRECL
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   KEYLEN=                    '
         MVC   RECDATA+4(L'KEYLEN),KEYLEN
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   KEYOFF=                    '
         MVC   RECDATA+4(L'KEYOFF),KEYOFF
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AVGREC=                    '
         MVC   RECDATA+9(L'AVGREC),AVGREC
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AVERAGE VALUE=             '
         MVC   RECDATA(L'AVGVAL),AVGVAL
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SPACE PRIMARY=             '
         MVC   RECDATA(L'SPPRIM),SPPRIM
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SPACE SECONDARY=           '
         MVC   RECDATA(L'SPSECO),SPSECO
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SPACE DIRECTORY=           '
         MVC   RECDATA(L'SPDIR),SPDIR
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   DATASET NAME TYPE=         '
         MVC   RECDATA+3(L'TYPEDS),TYPEDS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RETPD / EXPDT=             '
         MVC   RECDATA-2(L'RETPD1),RETPD1
         MVC   RECDATA+L'RETPD1-2(L'RETPD2),RETPD2
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   VOLUME COUNT=              '
         MVC   RECDATA+4(L'VOLCT),VOLCT
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   IMBED=                     '
         MVC   RECDATA+9(L'IMBED),IMBED
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   REPLICATE=                 '
         MVC   RECDATA+9(L'REPLI),REPLI
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   CI SIZE DATA=              '
         MVC   RECDATA(L'CISIZE),CISIZE
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   % FREE SPACE CI=           '
         MVC   RECDATA+4(L'FREECI),FREECI
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   % FREE SPACE CA=           '
         MVC   RECDATA+4(L'FREECA),FREECA
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SHARE XREGION=             '
         MVC   RECDATA+9(L'SHR2),SHR2
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SHARE XSYSTEM=             '
         MVC   RECDATA+9(L'SHR1),SHR1
         BAL   R10,PUTREC
         BAL   R4,LASTMOD                PRINT LAST MOD. INFORMATION
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
         A     R7,ELGTH                  ACCESS NEXT DATA CLASS ENTRY
         BCT   R5,LOOPDC
*----------------------------------------------------------------*
* SMS STORAGE CLASSES ('IGDSCD' BLOCK)                           *
*----------------------------------------------------------------*
         MVI   SSSA1TYP,SSSA1SCL    RETURN ALL STORAGE CLASSES
         BAL   R10,CALLSSI
         CLC   =CL8'IGDSCD',0(R7)        SCDPID ID IS CORRECT ?
         BNE   ERROR2
         L     R5,12(R7)                 SCDPCNT NUMBER OF CLASSES
         MVC   ELGTH,20(R7)              SCDPLEN LGTH OF 1 DEFINITION
         LA    R7,24(0,R7)               ACCESS 1ST ENTRY
* PROCESS ONE ENTRY IN STORAGE CLASS TABLE
LOOPSC   MVC   SCNAME,$SPACES
         LH    R1,0(R7)                  SCDNMLEN  LENGTH OF NAME
         BCTR  R1,0
         EX    R1,MOVSCN                 GET NAME OF CLASS
* STORAGE CLASS : DIRECT MSR
         MVC   DIRMSR,=C'         -'
         TM    184(R7),B'00100000'       DIRECT MSR SPECIFIED ?
         BNO   NODIRMSR
         EXTENDW X'BC'(R7),DIRMSR        SCDDIRR  DIRECT MSR
* STORAGE CLASS : SEQUENTIAL MSR
NODIRMSR MVC   SEQMSR,=C'         -'
         TM    184(R7),B'00001000'       SEQ MSR SPECIFIED ?
         BNO   NOSEQMSR
         EXTENDW X'C0'(R7),SEQMSR        SCDSEQR  SEQUENTIAL MSR
* STORAGE CLASS : INIT ACCESS RESPONSE
NOSEQMSR MVC   INIMSR,=C'         -'
         TM    184(R7),B'00000001' ?     INIT ACCESS RESP SPECIFIED ?
         BNO   NOINIMSR
         EXTENDW X'C8'(R7),INIMSR        SCDINITM INIT ACCESS MSR
* STORAGE CLASS : DIRECT BIAS
NOINIMSR MVI   DIRBIAS,C'-'
         TM    184(R7),B'00010000'       DIRECT BIAS SPECIFIED ?
         BNO   DIRBGOOD
         MVI   DIRBIAS,C'?'              TEST SCDDIRB
         MVCCASE TEST=X'C5'(R7),TO=DIRBIAS,IF=(1,2),MOVE=(=C'R',=C'W')
* STORAGE CLASS : SEQUENTIAL BIAS
DIRBGOOD MVI   SEQBIAS,C'-'
         TM    184(R7),B'00000100'       SEQ BIAS SPECIFIED ?
         BNO   SEQBGOOD
         MVI   SEQBIAS,C'?'              TEST SCDSEQB
         MVCCASE TEST=X'C6'(R7),TO=SEQBIAS,IF=(1,2),MOVE=(=C'R',=C'W')
* STORAGE CLASS : AVAILABILITY (CONTINUOUS,STANDARD)
SEQBGOOD MVC   AVAIL,=C'??????????'
         MVCCASE TEST=X'C4'(R7),TO=AVAIL,IF=(1,2),   TEST SCDAVAIL     X
               MOVE=(=C'  STANDARD',=C'CONTINUOUS')
* STORAGE CLASS : FLAGS GUARANTEED SPACE & GUARANTEED SYNCHRONOUS WRITE
AVAILGD  MVI   GARSPA,C'Y'
         TM    184(R7),B'10000000'
         BO    GARSPAGD
         MVI   GARSPA,C'N'
GARSPAGD MVI   GARSYW,C'Y'
         TM    184(R7),B'00000010'
         BO    GARSYWGD
         MVI   GARSYW,C'N'
* STORAGE CLASS : PRINT ALL INFORMATION
GARSYWGD MVC   RECTITLE,=CL30' STORAGE CLASS=               '
         MVC   RECDATA(L'SCNAME),SCNAME
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL20'   DESCRIPTION=     '
         MVC   RECORD+20(60),64(R7)             SCDDESC
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVC   RECORD+20(60),124(R7)            SCDDESC+60
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   DIRECT RESPONSE (MSEC)=    '
         MVC   RECDATA(L'DIRMSR),DIRMSR
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   DIRECT BIAS=               '
         MVC   RECDATA+9(L'DIRBIAS),DIRBIAS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SEQUENTIAL RESPONSE (MSEC)='
         MVC   RECDATA(L'SEQMSR),SEQMSR
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SEQUENTIAL BIAS=           '
         MVC   RECDATA+9(L'SEQBIAS),SEQBIAS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   INIT ACC RESPONSE=         '
         MVC   RECDATA(L'INIMSR),INIMSR
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AVAILABILITY=              '
         MVC   RECDATA(L'AVAIL),AVAIL
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   GUARANTEED SPACE=          '
         MVC   RECDATA+9(L'GARSPA),GARSPA
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   GUARANTEED SYNC WRITE=     '
         MVC   RECDATA+9(L'GARSYW),GARSYW
         BAL   R10,PUTREC
         BAL   R4,LASTMOD                PRINT LAST MOD. INFORMATION
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
         A     R7,ELGTH                  ACCESS NEXT STORCLASS ENTRY
         BCT   R5,LOOPSC
*----------------------------------------------------------------*
* SMS MANAGEMENT CLASSES ('IGDMCD' BLOCK)                        *
*----------------------------------------------------------------*
         MVI   SSSA1TYP,SSSA1MCL    RETURN ALL MANAGEMENT CLASSES
         BAL   R10,CALLSSI
         CLC   =CL8'IGDMCD',0(R7)        MCDPID ID IS CORRECT ?
         BNE   ERROR3
         L     R5,12(R7)                 MCDPCNT NUMBER OF CLASSES
         MVC   ELGTH,20(R7)              MCDPLEN LGTH OF 1 DEFINITION
         LA    R7,24(0,R7)               ACCESS 1ST ENTRY
* PROCESS ONE ENTRY IN MANAGEMENT CLASS TABLE
LOOPMC   MVC   MCNAME,$SPACES
         LH    R1,0(R7)                  MCDNMLEN LENGTH OF NAME
         BCTR  R1,0
         EX    R1,MOVMCN                 GET NAME OF CLASS
* MANAGEMENT CLASS : EXPIRE NON-USAGE
         MVC   EXPNOUS,=C'   NOLIMIT'
         TM    X'CC'(R7),B'10000000'     EXPIRE NON-USAGE = NOLIMIT ?
         BO    NOEXPDYU                  YES, FINISHED WITH IT
         MVC   EXPNOUS,=C'         -'
         TM    X'B9'(R7),B'00000100'     EXPIRE NON-USAGE SPECIFIED ?
         BNO   NOEXPDYU                  NO, NO VALUE SPECIFIED
         EXTENDW X'D0'(R7),EXPNOUS       MCDEXPDY EXP. AFTER DAYS NOUSE
* MANAGEMENT CLASS : EXPIRE DATE / DAYS
NOEXPDYU MVC   EXPMYEAR,=C'   NOLIMIT'
         MVC   EXPMDAY,=C'      '
         TM    X'CC'(R7),B'01000000'     EXPIRE = NOLIMIT ?
         BO    NOEXPDY                   YES, FINISHED WITH IT
         MVC   EXPMYEAR,=C'         -'
         TM    X'B9'(R7),B'00001000'     EXPIRE DATE/DAYS SPECIFIED ?
         BNO   NOEXPDY                   NO, NO VALUE SPECIFIED
         TM    205(R7),1                 VALUE IS A DATE ?
         BNO   YEXPDAT                   NO
         EXTEND 214(R7),EXPMYEAR+4       MCDEYEAR - EXPIRE DATE YYYYDDD
         EXTEND 212(R7),EXPMYEAR         MCDEYEAR - EXPIRE DATE YYYYDDD
         MVI   EXPMYEAR+6,C'/'           FORMAT YYYY/DDD
         B     NOEXPDY                   GO ON
YEXPDAT  TM    205(R7),2                 VALUE IS A NUMBER OF DAYS ?
         BNO   NOEXPDY                   UNKNOWN FORMAT
         EXTEND  214(R7),EXPMDAY         MCDEDAY - EXPIRE AFTER DAYS
         XC    EXPMYEAR,EXPMYEAR         NO DATE SPECIFIED
* MANAGEMENT CLASS : RETENTION LIMIT
NOEXPDY  MVC   RETLIMT,=C'   NOLIMIT'
         TM    X'F0'(R7),B'10000000'     MCDMRETF  RETLIMIT = NOLIMIT ?
         BO    NORETLIM                  YES, FINISHED WITH IT
         MVC   RETLIMT,=C'          '
         EXTEND  X'F2'(R7),RETLIMT2      MDCMRTDY - RETENTION LIMIT
* MANAGEMENT CLASS : PARTIAL RELEASE   ?? Y / COND/ Y IMM /COND IMM/NO
NORETLIM MVC   PARTREL,=C'        NO'    TEST MCDFLAGS
         MVCCASE TEST=X'B8'(R7),TO=PARTREL,TSTCOD=TM,FAILCOD=BNO,      X
               IF=(B'10100000',B'01100000',B'01000000',B'10000000'),   X
               MOVE=(=C' YES_IMMED',=C'COND_IMMED',=C'CONDITIONL',     X
               =C'       YES')
* MANAGEMENT CLASS : PRIMARY DAYS
         MVC   PRIMDAYS,=C'     -'
         TM    X'B9'(R7),B'00000010'     PRIMARY DAYS SPECIFIED ?
         BNO   NOPRIMDY                  NO, NO VALUE SPECIFIED
         EXTEND X'BE'(R7),PRIMDAYS       MCDPRDY - PRIMARY DAYS
* MANAGEMENT CLASS : LEVEL 1 DAYS
NOPRIMDY MVC   L1DAYS,=C'     -'
         TM    X'BA'(R7),B'10000000'     LEVEL 1 DAYS SPECIFIED ?
         BNO   NOL1DY                    NO, NO VALUE SPECIFIED
         EXTEND X'C0'(R7),L1DAYS         MCDL1DY - LEVEL 1 DAYS
* MANAGEMENT CLASS : CMD/AUTO MIGRATE
NOL1DY   MVC   CMAUMIG,=C'        ??'
         MVCCASE TEST=X'C2'(R7),TO=CMAUMIG,IF=(0,1,2),   TEST MCDCMAU  X
               MOVE=(=C'      NONE',=C'   COMMAND',=C'      BOTH')
* MANAGEMENT CLASS : # GDG ON PRIMARY
         MVC   NGDGPRIM,=C'     -'
         TM    X'BA'(R7),B'00100000'     GDG ON PRIMARY SPECIFIED ?
         BNO   NOGDGPR                   NO, NO VALUE SPECIFIED
         EXTEND X'C6'(R7),NGDGPRIM       MCDPELEM - GDG ELTS ON PRIM
* MANAGEMENT CLASS : ROLLED-OFF GDG ACTION
NOGDGPR  MVC   ROFFGDG,=C'         -'
         TM    X'BA'(R7),B'01000000'     ROLLED-OFF GDG ACT SPECIFIED ?
         BNO   NOROFFGD
         MVC   ROFFGDG,=C'    EXPIRE'
         TM    X'C4'(R7),B'10000000'   ROLLED-OFF GDG ACTION = MIGRATE
         BNO   NOROFFGD                  (MCDGDGFL)
         MVC   ROFFGDG,=C'   MIGRATE'
* MANAGEMENT CLASS : BACKUP FREQUENCY
NOROFFGD MVC   BKUPFREQ,=C'     -'
         TM    X'BA'(R7),B'00010000'     BACKUP FREQUENCY SPECIFIED ?
         BNO   NOBKFREQ
         EXTEND X'DC'(R7),BKUPFREQ       MCDBKFQ - BACKUP FREQUENCY
* MANAGEMENT CLASS : # BACKUP VERSIONS (DS EXISTS)
NOBKFREQ MVC   BKUPVERS,=C'     -'
         TM    X'B9'(R7),B'10000000'     BACKUP VERSIONS SPECIFIED ?
         BNO   NOBKVERS
         EXTEND X'DE'(R7),BKUPVERS       MCDBKVS - BACKUP FREQUENCY
* MANAGEMENT CLASS : # BACKUP VERSIONS (DS DELETED)
NOBKVERS MVC   BKUPVRD,=C'     -'
         TM    X'B9'(R7),B'01000000'     BACKUP VERSIONS SPECIFIED ?
         BNO   NOBKVRD
         EXTEND X'E0'(R7),BKUPVRD        MCDBVRD - BACKUP FREQUENCY
* MANAGEMENT CLASS : RETAIN DAYS ONLY BACKUP
NOBKVRD  MVC   BKUPRDOB,=C'   NOLIMIT'   TEST MCDBKUPF
         TM    X'D8'(R7),B'10000000'    RETAIN DAYS ONLY BK = NOLIMIT ?
         BO    NOBKRDOB
         MVC   BKUPRDOB,=C'         -'
         TM    X'B9'(R7),B'00010000'    RETAIN DAYS ONLY BK SPECIFIED ?
         BNO   NOBKRDOB
         MVC   BKUPRDOB,=C'          '
         EXTEND X'E4'(R7),BKUPRDO2       MCDBKNP - RET DAYS ONLY BACKUP
* MANAGEMENT CLASS : RETAIN DAYS EXTRA BACKUP
NOBKRDOB MVC   BKUPRDEB,=C'   NOLIMIT'  TEST MCDBKUPF
         TM    X'D8'(R7),B'01000000'    RETAIN DAYS EXTRA BK= NOLIMIT ?
         BO    NOBKRDEB
         MVC   BKUPRDEB,=C'         -'
         TM    X'B9'(R7),B'00100000'    RETAIN DAYS EXTRA BK SPECIFIED?
         BNO   NOBKRDEB
         MVC   BKUPRDEB,=C'          '
         EXTEND X'E2'(R7),BKUPRDE2      MCDBKDY - RET DAYS EXTRA BACKUP
* MANAGEMENT CLASS : ADM/USER BACKUP
NOBKRDEB MVC   ADUSBKUP,=C'        ??'
         MVCCASE TEST=X'E6'(R7),TO=ADUSBKUP,IF=(0,1,2),   TEST MCDBADU X
               MOVE=(=C'      NONE',=C'     ADMIN',=C'      BOTH')
* MANAGEMENT CLASS : AUTO BACKUP
         MVC   BKUPAUTO,=C'        NO'
         TM    X'D8'(R7),B'00010000'     AUTO BACKUP ?
         BNO   NOBKAUTO
         MVC   BKUPAUTO,=C'       YES'
* MANAGEMENT CLASS : PRINT ALL INFORMATION
NOBKAUTO MVC   RECTITLE,=CL30' MANAGEMENT CLASS=            '
         MVC   RECDATA(L'MCNAME),MCNAME
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL20'   DESCRIPTION=     '
         MVC   RECORD+20(60),64(R7)              MCDDESC
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVC   RECORD+20(60),124(R7)             MCDDESC+60
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   EXPIRE NON-USAGE=          '
         MVC   RECDATA(L'EXPNOUS),EXPNOUS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   EXPIRE DATE/DAYS=          '
         OC    EXPMYEAR,EXPMYEAR                 EXPIRE DATE ?
         BZ    NOXPY                             NO
         MVC   RECDATA(L'EXPMYEAR),EXPMYEAR      EXPIRE DATE
         B     PUTEXPD
NOXPY    MVC   RECDATA+4(L'EXPMDAY),EXPMDAY        EXPIRE DAYS
PUTEXPD  BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RETENTION LIMIT=           '
         MVC   RECDATA(L'RETLIMT),RETLIMT
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   PARTIAL RELEASE=           '
         MVC   RECDATA(L'PARTREL),PARTREL
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   PRIMARY DAYS=              '
         MVC   RECDATA+4(L'PRIMDAYS),PRIMDAYS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   LEVEL 1 DAYS=              '
         MVC   RECDATA+4(L'L1DAYS),L1DAYS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   CMD/AUTO MIGRATE=          '
         MVC   RECDATA(L'CMAUMIG),CMAUMIG
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   # GDG ON PRIMARY=          '
         MVC   RECDATA+4(L'NGDGPRIM),NGDGPRIM
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   ROLLED-OFF GDS ACTION=     '
         MVC   RECDATA(L'ROFFGDG),ROFFGDG
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   BACKUP FREQUENCY=          '
         MVC   RECDATA+4(L'BKUPFREQ),BKUPFREQ
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   # BACKUPS (DS EXISTS)=     '
         MVC   RECDATA+4(L'BKUPVERS),BKUPVERS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   # BACKUPS (DS DELETED)=    '
         MVC   RECDATA+4(L'BKUPVRD),BKUPVRD
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RETAIN DAYS ONLY BACKUP=   '
         MVC   RECDATA(L'BKUPRDOB),BKUPRDOB
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   RETAIN DAYS EXTRA BACKUP=  '
         MVC   RECDATA(L'BKUPRDEB),BKUPRDEB
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   ADM/USER BACKUP=           '
         MVC   RECDATA(L'ADUSBKUP),ADUSBKUP
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO BACKUP=               '
         MVC   RECDATA(L'BKUPAUTO),BKUPAUTO
         BAL   R10,PUTREC
         BAL   R4,LASTMOD                PRINT LAST MOD. INFORMATION
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
         A     R7,ELGTH                  ACCESS NEXT MGMTCLASS ENTRY
         BCT   R5,LOOPMC
*----------------------------------------------------------------*
* SMS STORAGE GROUPS     ('IGDSGD' BLOCK)                        *
*----------------------------------------------------------------*
         MVI   SSSA1TYP,SSSA1SGL    RETURN ALL STORAGE GROUPS
         BAL   R10,CALLSSI
         CLC   =CL8'IGDSGD',0(R7)        SGDPID ID IS CORRECT ?
         BNE   ERROR4
         L     R5,12(R7)                 SGDPCNT NUMBER OF CLASSES
         MVC   ELGTH,20(R7)              SGDPLEN LGTH OF 1 DEFINITION
         LA    R7,24(0,R7)               ACCESS 1ST ENTRY
* PROCESS ONE ENTRY IN STORAGE GROUP TABLE
LOOPSG   MVC   SGNAME,$SPACES
         LH    R1,0(R7)                  SGDNMLEN LENGTH OF NAME
         BCTR  R1,0
         EX    R1,MOVSGN                 GET NAME OF GROUP
* STORAGE GROUP : TYPE
         MVC   SGTYPE,=CL13'           ??'
         MVCCASE TEST=X'B9'(R7),TO=SGTYPE,IF=(0,1,2,3,4), TST SGDFTYPE X
               MOVE=(=C'         POOL',=C'          VIO',              X
               =C'        DUMMY',=C'       OBJECT',=C'OBJECT BACKUP')
* STORAGE GROUP : VIO MAXSIZE
         MVC   SGVIOM,=CL10'         -'
         MVC   SGVIOU,=CL4'   -'
         CLI   X'B9'(R7),X'01'           SGDFTYPE - SG TYPE = VIO ?
         BNE   NOSGVIOM
         EXTENDW X'BC'(R7),SGVIOM        SGDFVMAX - VIO MAXSIZE
         MVC   SGVIOU,X'C0'(R7)          SGDFVUNT - VIO UNIT
* STORAGE GROUP : AUTO MIGRATE
NOSGVIOM MVC   SGAUTM,=CL10'         -'
         CLI   X'B9'(R7),X'01'           SGDFTYPE - SG TYPE = VIO ?
         BE    NOSGAUTM
         CLI   X'B9'(R7),X'02'           SGDFTYPE - SG TYPE = DUMMY ?
         BE    NOSGAUTM
         MVC   SGAUTM,=CL10'  INTERVAL'
         TM    X'B8'(R7),B'00000010' SGDFLAGS AUTO MIGRATE = INTERVAL ?
         BO    NOSGAUTM
         MVC   SGAUTM,=CL10'       YES'
         TM    X'B8'(R7),B'01000000' SGDFLAGS AUTO MIGRATE = YES ?
         BO    NOSGAUTM
         MVC   SGAUTM,=CL10'        NO'
* STORAGE GROUP : AUTO MIGRATE SYSTEM
NOSGAUTM MVC   SGAUTMS,=CL8'       -'
         CLC   X'106'(8,R7),$SPACES      TEST SGDAMSYS
         BE    NOSGAUTS
         MVC   SGAUTMS,X'106'(R7)
* STORAGE GROUP : AUTO BACKUP
NOSGAUTS MVC   SGAUTB,=CL10'         -'
         CLI   X'B9'(R7),X'01'           SGDFTYPE - SG TYPE = VIO ?
         BE    NOSGAUTB
         CLI   X'B9'(R7),X'02'           SGDFTYPE - SG TYPE = DUMMY ?
         BE    NOSGAUTB
         MVC   SGAUTB,=CL10'       YES'
         TM    X'B8'(R7),B'10000000' SGDFLAGS AUTO BACKUP = YES ?
         BO    NOSGAUTB
         MVC   SGAUTB,=CL10'        NO'
* STORAGE GROUP : AUTO BACKUP SYSTEM
NOSGAUTB MVC   SGAUTBS,=CL8'       -'
         CLC   X'F6'(8,R7),$SPACES      TEST SGDABSYS
         BE    NOSGAUBS
         MVC   SGAUTBS,X'F6'(R7)
* STORAGE GROUP : AUTO DUMP
NOSGAUBS MVC   SGAUTD,=CL10'         -'
         CLI   X'B9'(R7),X'01'           SGDFTYPE - SG TYPE = VIO ?
         BE    NOSGAUTD
         CLI   X'B9'(R7),X'02'           SGDFTYPE - SG TYPE = DUMMY ?
         BE    NOSGAUTD
         MVC   SGAUTD,=CL10'       YES'
         TM    X'B8'(R7),B'00100000' SGDFLAGS AUTO DUMP = YES ?
         BO    NOSGAUTD
         MVC   SGAUTD,=CL10'        NO'
* STORAGE GROUP : AUTO DUMP SYSTEM
NOSGAUTD MVC   SGAUTDS,=CL8'       -'
         CLC   X'FE'(8,R7),$SPACES      TEST SGDADSYS
         BE    NOSGAUDS
         MVC   SGAUTDS,X'FE'(R7)
* STORAGE GROUP : HIGH AND LOW THRESHOLDS
NOSGAUDS MVC   SGHIGH,=CL6'     -'
         MVC   SGLOW,=CL6'     -'
         TM    X'B8'(R7),B'00010000'    SGDFLAGS THRESHOLDS SPECIFIED ?
         BNO   NOSGTHRE
         XC    HALFWORD,HALFWORD
         MVC   HALFWORD+1,X'C4'(R7)      SGDFHTHR - HIGH THRESHOLD
         EXTEND HALFWORD,SGHIGH
         XC    HALFWORD,HALFWORD
         MVC   HALFWORD+1,X'C5'(R7)      SGDFLTHR - LOW  THRESHOLD
         EXTEND HALFWORD,SGLOW
* STORAGE GROUP : DUMP CLASSES
NOSGTHRE MVC   SGDUMP,$SPACES
         LA    R1,SGDUMP
         LA    R2,X'C6'(R7)             SGDDMPCL - DUMP CLASSES
         LA    R3,5                     5 DUMP CLASSES
LOOPSGDM MVC   0(8,R1),=CL8'       -'
         CLC   0(8,R2),$SPACES
         BE    SGDMP1
         CLC   0(8,R2),$ZEROES
         BE    SGDMP1
         MVC   0(8,R1),0(R2)
SGDMP1   LA    R1,9(0,R1)               NEXT DUMP CLASS
         LA    R2,8(0,R2)               NEXT DUMP CLASS
         BCT   R3,LOOPSGDM
* STORAGE GROUP : STATUS ON EACH PROCESSOR
         MVC   SGSTATUS,$SPACES
         LA    R1,SGSTATUS
         LA    R2,X'EE'(R7)            SGDFPRST STATUS ON 8 PROCESSORS
         LA    R3,8                     8 STATUS
LOOPSGST MVC   0(6,R1),=CL6'    ??'
         MVCCASE TEST=0(R2),TO=0(6,R1),IF=(0,1,2,3,4,5),               X
               MOVE=(=C'     -',=C'ENABLE',=C'QUIALL',                 X
               =C'QUINEW',=C'DISALL',=C'DISNEW')
SGNEXTST LA    R1,7(0,R1)                NEXT STATUS
         LA    R2,1(0,R2)                NEXT STATUS
         BCT   R3,LOOPSGST
* STORAGE GROUP : GUARANTEED BACKUP FREQ
         MVC   SGBAKFR,=C'   NOLIMIT'
         TM    X'B8'(R7),B'00000100' SGDFLAGS BACKUP FREQ = NOLIMIT ?
         BO    NOSGBKFR                  YES, FINISHED WITH IT
         MVC   SGBAKFR,=C'         -'
         TM    X'B8'(R7),B'00001000' SGDFLAGS BACKUP FREQ SPECIFIED ?
         BNO   NOSGBKFR                  NO, FINISHED WITH IT
         EXTENDW X'120'(R7),SGBAKFR        SGDGBKUF  GUAR. BKUP FREQ
* STORAGE GROUP : PRINT ALL INFORMATION
NOSGBKFR MVC   RECTITLE,=CL30' STORAGE GROUP=               '
         MVC   RECDATA(L'SGNAME),SGNAME
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL20'   DESCRIPTION=     '
         MVC   RECORD+20(60),64(R7)          SGDFDESC
         BAL   R10,PUTREC
         MVC   RECORD,$SPACES
         MVC   RECORD+20(60),124(R7)         SGDFDESC+60
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   SG TYPE=                   '
         MVC   RECDATA-3(L'SGTYPE),SGTYPE
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   VIO MAXSIZE (KILOBYTES)=   '
         MVC   RECDATA(L'SGVIOM),SGVIOM
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   VIO UNIT=                  '
         MVC   RECDATA+6(L'SGVIOU),SGVIOU
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO MIGRATE=              '
         MVC   RECDATA(L'SGAUTM),SGAUTM
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO MIGRATE SYSTEM=       '
         MVC   RECDATA+6(L'SGAUTMS),SGAUTMS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO BACKUP=               '
         MVC   RECDATA(L'SGAUTB),SGAUTB
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO BACKUP SYSTEM=        '
         MVC   RECDATA+6(L'SGAUTBS),SGAUTBS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO DUMP=                 '
         MVC   RECDATA(L'SGAUTD),SGAUTD
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   AUTO DUMP SYSTEM=          '
         MVC   RECDATA+6(L'SGAUTDS),SGAUTDS
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   MIGRATION HIGH (%)=        '
         MVC   RECDATA+4(L'SGHIGH),SGHIGH
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   MIGRATION LOW (%)=         '
         MVC   RECDATA+4(L'SGLOW),SGLOW
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   DUMP CLASSES=              '
         MVC   RECDATA+2(L'SGDUMP),SGDUMP
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   GUARANTEED BACKUP FREQ=    '
         MVC   RECDATA(L'SGBAKFR),SGBAKFR
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   STATUS ON ALL SYSTEMS=     '
         MVC   RECDATA+4(L'SGSTATUS),SGSTATUS
         BAL   R10,PUTREC
         BAL   R4,LASTMOD                PRINT LAST MOD. INFORMATION
         MVI   RECORD,C'*'
         BAL   R10,PUTREC
         A     R7,ELGTH                  ACCESS NEXT STORGROUP ENTRY
         BCT   R5,LOOPSG
THEEND   CLOSE   (SYSPRINT)                                   01-06-93
         L     R10,ADDZONE
         L     R9,SIZE
         FREEMAIN  R,LV=(9),A=(10)
         L       R13,4(R13)
         RETURN  (14,12),T,RC=0
ERROR1   ABEND 1,DUMP         NO "IGDDCD" BLOCK ENCOUNTERED
ERROR2   ABEND 2,DUMP         NO "IGDSCD" BLOCK ENCOUNTERED
ERROR3   ABEND 3,DUMP         NO "IGDMCD" BLOCK ENCOUNTERED
ERROR4   ABEND 4,DUMP         NO "IGDSGD" BLOCK ENCOUNTERED
ERROR5   ABEND 5,DUMP         NO "IGDBCD" BLOCK ENCOUNTERED
*
* SUBROUTINE TO PUT A RECORD
PUTREC   PUT   SYSPRINT,RECORD
         MVC   RECORD,$SPACES
         BR    R10
*
* SUBROUTINE TO GET LAST MODIF INFO (USERID, DATE, TIME)
LASTMOD  MVC   RECTITLE,=CL30'   LAST MOD. USERID=          '
         MVC   RECDATA+3(8),32(R7)               *CDUSER
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   LAST MOD. DATE=            '
         MVC   RECDATA(10),40(R7)                *CDDATE
         BAL   R10,PUTREC
         MVC   RECTITLE,=CL30'   LAST MOD. TIME=            '
         MVC   RECDATA+5(8),56(R7)               *CDTIME
         BAL   R10,PUTREC
         BR    R4
*
* SUBROUTINE TO CALL SSI TO GET REQUIRED SMS INFORMATION
CALLSSI  MVC   SSSALEN,=H'1000'
         MVC   SSSAID,=CL4'SSSA'         IDENTIFIER
         MVC   SSSASFN,=H'1'             SUBFUNCTION CODE (SSSAACTV)
         MVC   SSOBFUNC,=H'55'           FUNCTION CODE (SSOBSSSM)
         MVC   SSSAVER,=H'1'             VERSION       (SSOBSSVR)
* TELL SSI WHERE REQUIRED DATA CAN BE PUT
         MVC   SSSA1LEN,SIZE             LENGTH OF AREA
         L     R7,ADDZONE                SAVE ADDRESS OF ACQUIRED ZONE
         ST    R7,SSSA1PTR               ADDRESS OF AREA
         L     R2,ADDZONE
         L     R3,SIZE
         XR    R0,R0
         XR    R1,R1
         MVCL  R2,R0                     ERASE THE GETMAINED ZONE
         MODESET MODE=SUP,KEY=ZERO
         LA    R1,PARAM
         OI    PARAM,X'80'
         IEFSSREQ                        CALL SUBSYSTEM INTERFACE
         ST    R15,RETCODE
         MODESET MODE=PROB,KEY=NZERO
         CLC   RETCODE,=F'0'             SSI REQUEST SUCCESSFUL ?
         BER   R10
* THE CALL TO THE SSI INTERFACE WAS UNSUCCESSFUL
         EXTENDW  RETCODE,RC
         MVC   WTO1+32(10),RC
         EXTENDW  SSOBRETN,RC
         MVC   WTO1+53(10),RC
         EXTENDW  SSSARSN,RC
         MVC   WTO1+74(10),RC
WTO1     WTO  'LISTSMS- SSI ERROR, R15=XXXXXXXXXX, SSOBRETN=XXXXXXXXXX,X
               , SSSARSN=XXXXXXXXXX'
         ABEND 999,DUMP
ADDZONE  DC    F'0'           ADDRESS OF GETMAINED ZONE
RETCODE  DC    F'0'
ELGTH    DC    F'0'           LENGTH OF 1 ENTRY
PARAM    DC    A(SSOB)
RC       DC    CL10' '        RETURN CODE DECIMAL
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM
MOVDMC   MVC   BCMGMT(1),X'D6'(R7)       BCDMCNAM   DEFAULT MC
MOVDCN   MVC   DCNAME(1),2(R7)           DCDNAME    NAME OF DC
MOVSGN   MVC   SGNAME(1),2(R7)           SGDFNAME   NAME OF SG
MOVMCN   MVC   MCNAME(1),2(R7)           MCDNAME    NAME OF MC
MOVSCN   MVC   SCNAME(1),2(R7)           SCDNAME    NAME OF SC
SSOB     DS    0F
         DC    C'SSOB',H'20'  IDENTIFIER FOR SSOB + LENGTH OF SSOB
SSOBFUNC DC    H'0'           FUNCTION
SSOBSSIB DC    A(SSIB)        SSIB ADDRESS
SSOBRETN DC    F'0'           SUBSYSTEM RETURN CODE
         DC    A(EXTE),D'0'   EXTENSION ADDRESS + 2 WORK WORDS FOR SSI
* DATA FOR ONE DATA CLASS
DCNAME   DS    CL30
SPPRIM   DS    CL10
SPSECO   DS    CL10
SPDIR    DS    CL10
AVGREC   DS    CL1
VOLCT    DS    CL6
FREECI   DS    CL6
FREECA   DS    CL6
KEYOFF   DS    CL6
KEYLEN   DS    CL6
RETPD1   DS    CL6
RETPD2   DS    CL6
AVGVAL   DS    CL10
LRECL    DS    CL10
CISIZE   DS    CL10
RECORG   DS    CL2
TYPEDS   DS    CL7
SHR1     DS    CL1
SHR2     DS    CL1
RECFM    DS    CL3
RECFM2   DS    CL1
REPLI    DS    CL1
IMBED    DS    CL1
* DATA FOR ONE STORAGE CLASS
SCNAME   DS    CL30
DIRBIAS  DS    CL1
SEQBIAS  DS    CL1
GARSPA   DS    CL1
GARSYW   DS    CL1
DIRMSR   DS    CL10
SEQMSR   DS    CL10
INIMSR   DS    CL10
AVAIL    DC    C'??????????'
* DATA FOR ONE MANAGEMENT CLASS
MCNAME   DS    CL30
EXPNOUS  DS    CL10
EXPMYEAR DS    CL10
EXPMDAY  DS    CL6
RETLIMT  DS   0CL10
         DS    CL4
RETLIMT2 DS    CL6
PARTREL1 DS   0CL2
PARTREL  DS    CL10
PRIMDAYS DS    CL6
L1DAYS   DS    CL6
CMAUMIG  DS    CL10
NGDGPRIM DS    CL6
ROFFGDG  DS    CL10
BKUPFREQ DS    CL6
BKUPVERS DS    CL6
BKUPVRD  DS    CL6
BKUPRDOB DS   0CL10
         DS    CL4
BKUPRDO2 DS    CL6
BKUPRDEB DS   0CL10
         DS    CL4
BKUPRDE2 DS    CL6
ADUSBKUP DS    CL10
BKUPAUTO DS    CL10
* DATA FOR ONE STORAGE GROUP
SGNAME   DS    CL30
SGTYPE   DS    CL13
SGVIOM   DS    CL10
SGVIOU   DS    CL4
SGAUTM   DS    CL10
SGAUTMS  DS    CL8
SGAUTB   DS    CL10
SGAUTBS  DS    CL8
SGAUTD   DS    CL10
SGAUTDS  DS    CL8
SGHIGH   DS    CL6
SGLOW    DS    CL6
SGDUMP   DS    CL44
SGSTATUS DS    CL55
SGBAKFR  DS    CL10
* DATA FOR BASE CONFIGURATION
BCMGMT   DS    CL30
BCTRKSZ  DS    CL10
BCCYLCP  DS    CL10
BCSYST   DS    CL72
*
SIZE     DC    F'200000'           200 K FOR THE BUFFER
SSIB     DC    CL4'SSIB',AL2(36),X'0000',C'SMS ',CL8'SMS',CL8' ',2F'0'
* WORK ZONES
DBLEWORD DS    D                   DOUBLE WORD FOR INSTRUCTION CVD
         ORG   DBLEWORD+5
PACKED3  DS    PL3
         ORG   DBLEWORD+3
PACKED5  DS    PL5
HALFWORD DS    H
* SAVE AREA
SAVE     DS    18F                 MY SAVE AREA
MASK1    DC    X'402020202121'              MASK FOR PACKED LENGTH 3
MASK2    DC    X'40202020202020202121'      MASK FOR PACKED LENGTH 5
$SPACES  DC    CL80' '
$ZEROES  DC    X'0000000000000000'
TITLE    DC    CL80'*             - LIST OF DEFINED SMS CONSTRUCTS -'
RECORD   DS    0CL80
RECTITLE DS    CL30
RECDATA  DS    CL50
         LTORG
         DS    0F
EXTE     DS    CL1000              SSOB EXTENSION FOR SMS FUNCTIONS
         END
