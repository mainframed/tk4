* WARNING : DON'T CALL THE LOAD-MODULE "CONSOLE", THIS NAME IS ALREADY
* USED BY IBM FOR THE "CONSOLE" COMMAND PROCESSOR.
*
* PUBLISHED IN XEPHON - MVS UPDATE - DECEMBER 1990
*
*     BRINGING THE MVS MASTER CONSOLE UNDER ISPF
*
*SOMETIMES IT MIGHT BE INTERESTING TO INSPECT THE PRESENT
*CONTENTS OF THE MVS CONSOLE DISPLAY AS THEY APPEAR TO THE
*OPERATOR.  WITH THE FOLLOWING PROGRAM, CONSOLE, YOU CAN
*MONITOR THE RETAINED MESSAGES (EG PENDING MOUNT REQUESTS,
*WTORS, ETC); ISSUE MVS OR JES COMMANDS, OBSERVING THEIR
*EFFECTS AS IF YOU WERE SAT IN FRONT OF THE REAL MVS CONSOLE; TRAP
*THE LAST COMMAND ENTERED BY THE OPERATOR; AND SEND HIM A HIGH-
*INTENSITY MESSAGE.  YOU CAN ALSO STOP AND HOT-RESTART JES
*WITHOUT HAVING TO GO INTO THE CONSOLE ROOM (YOU CAN'T DO THIS
*WITH SDSF AS JES IS NOT RUNNING).  OF COURSE, THE PROGRAM
*DOES NOT GIVE YOU COMPLETE AUTHORITY LIKE A REAL MVS MASTER
*CONSOLE (EG YOU WON'T HAVE SUFFICIENT AUTHORITY TO ISSUE THE
*FORCE COMMAND) ALTHOUGH IN SOME CASES IT MAY PROVE TO BE
*MORE USEFUL (ALTHOUGH LESS TALKATIVE) THAN THE SDSF LOG
*DISPLAY.
*THE PROGRAM OBTAINS THE CONSOLE DISPLAY FROM THE CONSOLE
*ADDRESS SPACE.  IT ISSUES THE MVS COMMANDS YOU ENTER,
*KEEPING IN MEMORY THE LAST FOUR, WHICH YOU CAN RECALL BY
*ENTERING '&', '&1', '&2', OR '&3' AS APPROPRIATE.  YOU SEND A
*MESSAGE TO THE OPERATOR BY PRECEDING IT WITH 'WTO'.  HITTING
*ENTER WITHOUT ANY DATA REFRESHES THE SCREEN WITH THE
*MESSAGES THAT HAVE APPEARED ON THE CONSOLE MOST RECENTLY.
*THE PROGRAM LISTS THE LAST 20 LINES DISPLAYED ON THE MVS
*MASTER CONSOLE.  IT ASSUMES YOU HAVE AN AUTHORIZATION SVC
*(SVC 235 IN THIS CASE) INSTALLED TO RESET THE JSCBAUTH FLAG
*WHEN NECESSARY.
*THIS PROGRAM HAS BEEN SUCCESSFULLY TESTED UNDER MVS/XA 2.2
*AND MVS/ESA 3.1.3.  IN ADDITION, I THINK THERE ARE SOME
*TECHNIQUES USED IN THE PROGRAM THAT WILL INTEREST THE NOVICE
*SYSTEMS PROGRAMMER.  FOR EXAMPLE:
*   -  AN ISPEXEC MACRO WHICH SIMULATES THE ISPEXEC CLIST COMMAND.
*   -  CROSS-MEMORY ACCESS TO ANOTHER ADDRESS SPACE.
*   -  ADDRESS MODE SWITCHING.
*   -  THE USE OF THE MGCR MACRO.
*---------------------------------------------------*
* THIS MACRO CONVERTS A BINARY HALFWORD TO DECIMAL  *
*---------------------------------------------------*
         MACRO
         EXTEND  &BIN,&ETEND
         LCLA  &LEN
         AIF   (T'&ETEND NE 'U').FOLLOW
         B     EXPR&SYSNDX
&ETEND   DC    CL6'0'               CREATE THE ZONE IF IT DOESN'T EXIST
.FOLLOW  ANOP
EXPR&SYSNDX    DS  0H
         XR    R1,R1                SET REGISTER TO ZERO
         ICM   R1,3,&BIN            LOAD BINARY ZONE
         CVD   R1,DBLEWORD          CONVERT TO DECIMAL
         MVC   &ETEND,MASK1         LOAD MASK FOR ED INSTRUCTION
         ED    &ETEND.(6),PACKED3   CONVERSION FROM PACKED TO DECIMAL
         MEND
*-----------------------------------------*
* THIS MACRO INVOKES ISPLINK INTERFACE    *
*-----------------------------------------*
         MACRO
&LABEL   ISPEXEC   &FONC
.*
.* 1ST  PARAMETER IS NAME OF SERVICE TO BE INVOKED
.*      OTHERS ARE PARAMETERS TO BE PASSED TO IT
.*
         LCLA  &NBR
         LCLA  &N
         LCLC  &ADRE
&LABEL   DS   0H
&NBR     SETA  N'&SYSLIST
         CNOP 0,4
         BAL  1,ISPX&SYSNDX              ADRESSABILITY OF PARAMETERS
         AIF (&NBR GT 1).PARM2
.*
.* ONLY 1 PARAMETER : FUNCTION NAME
.*
         DC   B'10000000'
         DC   AL3(FCTI&SYSNDX)
         AGO .APPEL
.*
.* MORE THAN 1 PARAMETER
.*
.PARM2   ANOP
         DC   A(FCTI&SYSNDX)              1ST PARAMETER : FUNCTION
&N       SETA  2
.LOOP    ANOP                            LOOP
         AIF (&N LT &NBR).CONT
         DC   X'80',AL3(&SYSLIST(&N))     ADRESSE OF LAST PARAMETER
         AGO .APPEL
.CONT    ANOP
         DC   A(&SYSLIST(&N))             ADRESSE OF PARAMETER
&N       SETA &N+1
         AGO  .LOOP
.*
.* CALLING ISPEXEC PROCESSOR
.*
.APPEL   ANOP
FCTI&SYSNDX  DC CL8'&FONC'               ISPEXEC FUNCTION NAME
ISPX&SYSNDX  DS  0H
         L   15,=V(ISPLINK)              LOAD ADDRESS OF ISPLINK
         BALR  14,15                     CALL ISPLINK
         MEXIT
         MEND
*---------------------------------------------------*
* THIS MACRO SETS A ZONE TO ALL SPACES              *
*---------------------------------------------------*
         MACRO
&NLA     SPACES  &ZONE
         MVI   &ZONE,C' '                  FIRST BYTE SET TO SPACE
         MVC   &ZONE+1(L'&ZONE-1),&ZONE    PROPAGATE TO ALL BYTES
         MEND
*
* DSECTS NEEDED
*
        CVT   DSECT=YES
        IEECUCM
        IEECDCM
*======================================================================
*
* MVS MASTER CONSOLE SIMULATION UNDER TSO      TESTED UNDER MVS/XA 2.2
*                                                           MVS/ESA 3.1
*
* CONTROL BLOCKS CHAINING TO GET THE IMAGE OF THE MVS MASTER CONSOLE :
* CVT -> UCM BASE -> UCM PREFIX -> UCME OF MSTCONS -> RDCM -> TDCM
*
* NB : RDCM & TDCM ARE IN LSQA OF ADDRESS-SPACE 'CONSOLE'
*      WE GET THEM BY CROSS-MEMORY INSTRUCTION "MVCP"
*      RDCM & TDCM ARE DESCRIBED IN 'DEBUGGING HANDBOOK, DATA AREAS'
*
* BEWARE : WE USE AN "AUTHORIZATION" SVC (SVC 235) TO GET AUTHORIZED
* UNDER TSO/ISPF (BY TURNING 'JSCBAUTH' FLAG)
*
*======================================================================
R0  EQU 0
R1  EQU 1
R2  EQU 2
R3  EQU 3
R4  EQU 4
R5  EQU 5
R6  EQU 6
R7  EQU 7
R8  EQU 8
R9  EQU 9
R10 EQU 10
R11 EQU 11
R12 EQU 12
R13 EQU 13
R14 EQU 14
R15 EQU 15
CONSOLE  CSECT
         SAVE (14,12),,CONSOLE-&SYSDATE-&SYSTIME
         LR   R12,R15
         USING CONSOLE,R12       R12 BASE REGISTER
         ST   R13,SAVE+4         SAVE OLD R13
         LA   R13,SAVE           R13 POINTS TO OUR SAVE AREA
* FIND THE TSO/ISPF USERID
         ISPEXEC VDEFINE,LIST0,USERID,CHAR,L7    DEFINE THE ZUSER VAR
         LTR  R15,R15            CALL TO ISPEXEC SUCCESSFUL ?
         BNZ  THEEND             NO, PROBABLY WE WERE NOT UNDER ISPF
         ISPEXEC VGET,LIST0,SHARED               GET USERID NAME
         ISPEXEC CONTROL,ERRORS,RETURN           DON'T STOP IF ERRORS
* DEFINE ALL THE ISPF VARIABLES
         ISPEXEC VDEFINE,LISTVAR,SCREEN,CHAR,L80
* ACCESS TO CVT
         L    R1,CVTPTR          ADDRESS OF CVT
         USING CVT,R1            CVT ADDRESSABILITY
         L    R1,CVTCUCB         POINTS TO UCM BASE
         DROP R1
* ACCESS TO UCM BASE
         USING UCM,R1            UCM BASE ADDRESSABILITY
         LH   R2,UCMCTID         TAKE ASID OF 'CONSOLE' ADDRESS-SPACE
         ST   R2,ASID            STORE IN OUR PROGRAM
         DROP R1
* ACCESS TO UCM PREFIX
         SH   R1,=H'4'           4 BYTES BACK
         L    R1,0(R1)           TO TAKE ADDRESS OF THE UCM MCS PREFIX
         L    R1,0(R1)           AND OF UCM MASTERCONS (UCMMCENT)
* ACCESS TO UCME OF MASTER CONSOLE ("UCM INDIVIDUAL DEVICE ENTRY MAP")
         USING UCMECB,R1
         L    R4,UCMXB           TAKE RDCM ADDRESS
         DROP R1
* ACCESS TO RDCM IN "CONSOLE" ADDRESS-SPACE
         BAL  R10,CROSS1         SET CROSS-MEMORY LINKAGE
         XR   R2,R2              R2 = 0
         LA   R2,4               4 BYTES TO MOVE
         XR   R1,R1              R1 = 0
         MVCP ADDRTDCM(R2),0(R4),R1     TAKE ADDRESS OF TDCM
         BAL  R10,CROSS2         DELETE CROSS-MEMORY LINKAGE
         B    GOON
* DISPLAY ISPF PANEL
LOOPPAN  DS   0H
         ISPEXEC DISPLAY,PANEL   DISPLAY ISPF PANEL SHOWING CONSOLE
         LTR  R15,R15            PFK3 OR OTHER
         BNZ  THEEND             THEN TERMINATE
* SET SCREEN ZONE TO ALL SPACES
         LA   R8,SCREEN
         LA   R9,1600            20 LINES X 80 CHARACTERS
         XR   R0,R0
         XR   R1,R1
         IC   R1,=C' '           FILL TO ALL SPACES
         SLL  R1,24              SHIFT 24 BITS LEFT
         MVCL R8,R0              FILL TO SPACES
* RE-DISPLAY LAST USER COMMAND (THE 4 LAST COMMANDS ARE KEPT IN MEMORY)
         CLC  =X'5040',CMDUSER   '&'  RE-DISPLAY LAST COMMAND ?
         BNE  NORAP0
         MVC  CMDUSER,OLDCMD
         B    GOON
NORAP0   CLC  =X'50F1',CMDUSER   '&1' RE-DISPLAY COMMAND -1
         BNE  NORAP1
         MVC  CMDUSER,OLDCMD1
         B    GOON
NORAP1   CLC  =X'50F2',CMDUSER   '&2' RE-DISPLAY COMMAND -2
         BNE  NORAP2
         MVC  CMDUSER,OLDCMD2
         B    GOON
NORAP2   CLC  =X'50F3',CMDUSER   '&3' RE-DISPLAY COMMAND -3
         BNE  TRAITCMD
         MVC  CMDUSER,OLDCMD3
         B    GOON
* MANAGE USER COMMAND
TRAITCMD DS   0H
         CLI  CMDUSER,X'00'      IF 1ST CHARACTER OF USER COMMAND ZONE
         BE   GOON
         CLI  CMDUSER,C' '       IS BINARY ZERO, OR SPACE, OR '*'
         BE   GOON
         CLI  CMDUSER,C'*'       THEN, WE DON'T TAKE IT INTO ACCOUNT
         BE   GOON
* CONTROLLING THE COMMAND
         CLI  CMDUSER,C'Z'       WE DON'T PERMIT 'HALT' COMMANDS
         BE   REFUSE
         CLC  =C'HALT ',CMDUSER
         BE   REFUSE
* CONTROLLING USERID AUTHORITY TO ISSUE MVS COMMANDS : EXAMPLE
*        CLC  =C'SY',USERID          ONLY SYSTEMS GROUP USERS PERMITTED
*        BE   PERMITTD
*        B    REFUSE                 OTHER USERS MAY NOT ISSUE COMMANDS
* KEEP TRACK OF OLD COMMANDS ENTERED BY THE USER
PERMITTD DS   0H
         MVC  OLDCMD3,OLDCMD2        KEEP IN MEMORY PREVIOUS COMMANDS
         MVC  OLDCMD2,OLDCMD1        KEEP IN MEMORY PREVIOUS COMMANDS
         MVC  OLDCMD1,OLDCMD         KEEP IN MEMORY PREVIOUS COMMANDS
         MVC  OLDCMD,CMDUSER         KEEP IN MEMORY LAST COMMAND
         CLC  =C'WTO',CMDUSER        WTO COMMAND ENTERED ?
         BNE  NORMAL
* SEND A HIGH INTENSITY MESSAGE TO THE OPERATOR CONSOLE
         MVC  WTO2M+8(75),CMDUSER+5  OVERLAYING WTO CODE WITH THE MSG
WTO2M    WTO  '                                                        *
                                                            ',DESC=(11)
         SPACES CMDUSER
         B    GOON
* ISSUE THE MVS COMMAND
NORMAL   DS   0H
         LA   R0,1              AUTHORIZE MY TSO SESSION
         SVC  235               CALL AUTHORIZATION SVC
         MODESET KEY=ZERO,MODE=SUP   GET INTO KEY 0, SUPERVISOR MODE
         LA   R1,MGCRPARM       ADDRESSING SVC PARAMETERS
         XR   R0,R0             R0 = 0
         MVC  CMDUSER2,CMDUSER  MOVE MVS COMMAND
         MGCR MGCRPARM          CALL SVC 34 TO ADD COMMAND IN QUEUE
         MODESET KEY=NZERO,MODE=PROB  RETURN INTO KEY 8, PROBLEM MODE
         XR   R0,R0             RESET AUTHORIZATION
         SVC  235               CALL AUTHORIZATION SVC
         SPACES CMDUSER
         B    GOON
REFUSE   MVC  CMDUSER,PROHIBE
*-----------------------------------------------------*
* ROUTINELY EXECUTED CODE ON EVERY "ENTER"            *
* TO GET THE IMAGE OF THE MVS MASTER CONSOLE          *
*-----------------------------------------------------*
GOON     DS   0H
* GET % CPU UTILIZATION FROM "CCT" CONTROL BLOCK
* SET ADDRESSING MODE TO 31 BITS (SOME BLOCKS ARE ABOVE THE LINE)
         L    R1,AMODE31A
         BSM  0,R1             GET INTO 31-BITS ADDRESSING MODE
AMODE31A DC   A(AMODE31B+X'80000000')
AMODE31B DS   0H
         L    R1,CVTPTR        LOAD CVT ADDRESS
         USING CVT,R1
         L    R1,CVTOPCTP      LOAD RMCT (SRM CONTROL TABLE) ADDRESS
         DROP R1
         L    R1,4(R1)         LOAD CPU CONTROL TABLE (CCT) ADDRESS
         MVC  CPUUSE,102(R1)   MOVE CPU UTILIZATION
* SET ADDRESSING MODE BACK TO 24 BITS
         LA   R1,AMODE24
         BSM  0,R1
AMODE24  DS   0H
         EXTEND CPUUSE,CPUUTIL
* ACCESS TO TDCM IN CONSOLE ADDRESS-SPACE
         BAL  R10,CROSS1        CREATE CROSS-MEMORY LINK
         L    R5,ADDRTDCM       TDCM ADDRESS IN CONSOLE ADDRESS-SPACE
* GET IN 'TDCM' BLOCK ALL THE LINES DISPLAYED UPON CONSOLE
         LA   R2,4              AN ADDRESS IS ALWAYS 4 BYTES LONG
         XR   R1,R1
         MVCP ADDR2(R2),X'34'(R5),R1      COPY ADDRESS OF LAST LINE
         LA   R2,4              AN ADDRESS IS ALWAYS 4 BYTES LONG
         XR   R1,R1             R1 = 0
         MVCP ADDR1(R2),X'30'(R5),R1      COPY ADDRESS OF 1ST LINE
         LA   R2,2              HALFWORD TO BE COPIED
         XR   R1,R1             R1 = 0
         MVCP LINELEN(R2),X'104'(R5),R1   COPY LENGTH OF 1 LINE
* LOOP TO GET OTHER LINES OF DISPLAY CONSOLE
         LA   R8,SCREEN         BEGINNING OF SCREEN ON ISPF PANEL
         LA   R7,20             20 LINES TO BE SET
         L    R6,ADDR1          ADDRESS OF 1ST LINE OF SCREEN
         SH   R6,LINELEN        GET BACK IN THE BUFFER
         SH   R8,=H'80'         GET BACK IN MY ISPF SCREEN
LOOPLINE DS   0H
         AH   R6,LINELEN        GET FORWARD IN THE BUFFER
         LA   R8,80(0,R8)       GET FORWARD IN MY SCREEN
         LA   R2,80             LINE WITH 80 CHARACTERS
         XR   R1,R1             R1 = 0
         C    R6,ADDR2          END LINE PASSED ?
         BH   ENDCONSL          YES, ALL LINES COPIED
         MVCP 0(R2,R8),4(R6),R1 COPY ONE LINE OF DATA
         BCT  R7,LOOPLINE       LOOP TO GET REMAINING LINES
* GET LAST COMMAND ISSUED BY THE CONSOLE OPERATOR
ENDCONSL DS   0H
         LA   R2,128            LENGTH OF COMMAND
         XR   R1,R1             R1 = 0
         MVCP LASTCMD(R2),640(R5),R1    COPY LAST ISSUED COMMAND
* BOTTOM LINE OF CONSOLE DISPLAY       (IEE163I MODE = RD ...)
         LA   R2,4              AN ADDRESS IS ALWAYS 4 BYTES LONG
         XR   R1,R1             R1 = 0
         MVCP ADDR3(R2),X'210'(R5),R1    COPY ADDRESS OF BOTTOM LINE
         LA   R2,80             LENGTH OF LINE
         XR   R1,R1             R1 = 0
         L    R7,ADDR3
         MVCP LINE0000(R2),0(R7),R1    COPY LAST LINE
         BAL  R10,CROSS2        DELETE CROSS-MEMORY LINKAGE
* INSERT % CPU UTILIZATION IN BOTTOM LINE
         MVC  LINE0000+70(3),CPUUTIL+3     CPU UTILIZATION
         MVC  LINE0000+73(6),=C' % CPU'    '% CPU'
         B    LOOPPAN
*
THEEND   L       R13,4(R13)
         RETURN  (14,12),T,RC=0
*-----------------------------------------------------------*
* CROSS-MEMORY ROUTINE 1 :                                  *
* ESTABLISH CROSS-MEMORY LINK WITH "CONSOLE" ADDRESS-SPACE  *
*-----------------------------------------------------------*
CROSS1   DS    0H
         LA    R0,1              AUTHORIZE MY TSO SESSION
         SVC   235               CALL AUTHORIZATION SVC
         MODESET KEY=ZERO,MODE=SUP   GET INTO KEY 0, SUPERVISOR MODE
         XR    R2,R2
         ESAR  R2                OBTAIN OUR ASID
         ST    R2,MYASID         KEEP IT
         LA    R2,1
         AXSET AX=(R2)           ADDRESS-SPACE AUTORISATION
         L     R2,ASID
         SSAR  R2                ESTABLISH A SECONDARY ADDRESS-SPACE
         BR    R10
*--------------------------*
* CROSS-MEMORY ROUTINE 2 : *
* DELETE CROSS-MEMORY LINK *
*--------------------------*
CROSS2   L     R2,MYASID
         SSAR  R2
         XR    R2,R2
         AXSET AX=(R2)           ADDRESS-SPACE AUTORISATION
         MODESET KEY=NZERO,MODE=PROB  RETURN INTO KEY 8, PROBLEM MODE
         XR    R0,R0             RESET AUTHORIZATION
         SVC   235               CALL AUTHORIZATION SVC
         BR    R10
*
USERID   DC   CL7'USERID'        TSO/ISPF USERID
CPUUSE   DC   H'0'               % CPU UTILIZATION
LINELEN  DC   H'0'               LONGUEUR LIGNE SCREEN
ASID     DC   F'0'               ASID OF "CONSOLE" ADDRESS-SPACE
MYASID   DC   F'0'               ASID NUMBER OF OUR ADDRESS-SPACE
ADDRTDCM DC   F'0'               ADDRESS OF TDCM
ADDR1    DC   F'0'               ADDRESS OF FIRST LINE OF SCREEN
ADDR2    DC   F'0'               ADDRESS OF LAST LINE OF SCREEN
ADDR3    DC   F'0'               ADDRESS OF BOTTOM LINE (MODE=RD)
SHARED   DC   CL8'SHARED'        ISPF KEYWORD
CHAR     DC   CL8'CHAR'          ISPF KEYWORD
DISPLAY  DC   CL8'DISPLAY'       ISPF KEYWORD
RETURN   DC   CL8'RETURN'        ISPF KEYWORD
ERRORS   DC   CL8'ERRORS'        ISPF KEYWORD
OLDCMD3  DC   CL80' ** COMMAND NOT FOUND **'
OLDCMD2  DC   CL80' ** COMMAND NOT FOUND **'
OLDCMD1  DC   CL80' ** COMMAND NOT FOUND **'
OLDCMD   DC   CL80' ** LAST COMMAND NOT FOUND **'
PROHIBE DC    CL80' ** YOU CANNOT ISSUE THIS MVS COMMAND **'
*
MGCRPARM DS   0F                 PARAMETERS FOR MGCR
         DC   H'80'              COMMAND 80 CHARACTERS LONG
         DC   H'00'              FLAGS
CMDUSER2 DS   CL80               MVS COMMAND
L80      DC   F'80'
L7       DC   F'7'
PANEL    DC   CL8'CONSOLE'       NAME OF ISPF PANEL SIMULATING CONSOLE
* ISPF VARIABLE NAMES
LIST0    DC   C'(ZUSER) '
LISTVAR  DC   C'(CNSL1 CNSL2 CNSL3 CNSL4 CNSL5 CNSL6 CNSL7 CNSL8       *
               CNSL9 CNSL10 CNSL11 CNSL12 CNSL13 CNSL14 CNSL15         *
               CNSL16 CNSL17 CNSL18 CNSL19 CNSL20 CNSL00 CNSLCM        *
               CNSLCMD)  '
SAVE     DS   18F                SAVE AREA
* WORK ZONES FOR 'EXTEND' MACRO
MASK1    DC   X'402020202020'    MASK FOR PACKED LENGTH 3
DBLEWORD DS   D                  DOUBLE WORD FOR INSTRUCTION CVD
         ORG  DBLEWORD+5
PACKED3  DS   PL3
         LTORG
* FOLLOWING ARE ISPF DATA MAPPING 'LISTVAR' VARIABLES,
* DO NOT CHANGE THE ORDER
SCREEN   DS   CL1600             20 LINES X 80 CHARACTERS
LINE0000 DS   CL80               SCREEN BOTTOM LINE
CMDUSER  DS   CL80               MVS COMMAND
         ORG  CMDUSER            DEFAULT DISPLAY WHEN FIRST ACCESS
         DC   C' ** ENTER A MVS/JES2 COMMAND OR ',X'50',C' TO RECALL TH*
               E LAST ONE'
         ORG
LASTCMDD DS   0CL80
LASTCMD  DS   CL128              LAST COMMAND ISSUED BY THE OPERATOR
         END
