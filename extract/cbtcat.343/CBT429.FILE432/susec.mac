  /*           REXX                                                  */
  /* LISTING ACTIVE PROCESSORS IN THE COMPLEX AND THE MIPS AVAILABLE */
  CVT      = STORAGE(10,4)
  SAY 'CVT AT' C2X(CVT)
  /* ACCESSING RMCT                                                  */
  RMCT = STORAGE(D2X(C2D(CVT)+604),4)
  SAY 'RMCT AT' C2X(RMCT)
  /* COMPUTING THE SU/SEC FACTOR                                     */
  SU   = STORAGE(D2X(C2D(RMCT)+64),4)
  SU   = 16000000/C2D(SU)
  SAY  'SU/SEC FACTOR IS' SU ,
      '(1 CPU SECOND EQUALS' SU 'SERVICE UNITS)'
  /* ACCESSING PCCA VECTOR TABLE                                     */
  CVTPCCAT = STORAGE(D2X(C2D(CVT)+764),4)
  SAY 'PCCA VECTOR TABLE AT' C2X(CVTPCCAT)
  I = 0                         /*    PROCESSOR NUMBER               */
  P = 0                         /*    TOTAL NUMBER OF PROCESSORS     */
  SAY '----------------------------------------'
  SAY ' PROC   VERSION  CPUID   MODEL    PCCA  '
  SAY 'NUMBER    CODE                   ADDRESS'
  SAY '----------------------------------------'
  /* PROCESSING EVERY PCCA FOR EVERY PROCESSOR                       */
  DO WHILE I < 16
  PCCA     = STORAGE(D2X(C2D(CVTPCCAT)+I*4),4)
  IF     PCCA  \= '00000000'X THEN DO       /* PROCESSOR EXISTS      */
     PCCAPCCA = STORAGE(D2X(C2D(PCCA)),4)
     PCCAVC   = STORAGE(D2X(C2D(PCCA)+4),2)
     PCCACPID = STORAGE(D2X(C2D(PCCA)+6),6)
     PCCAMDL  = STORAGE(D2X(C2D(PCCA)+12),4)
     IF PCCAPCCA = 'PCCA' THEN DO           /* PCCA SEEMS CORRECT    */
        SAY ' ' I '     ' PCCAVC '   ' PCCACPID ,
            ' '××PCCAMDL ' ' C2X(PCCA)
        P = P + 1
        END
     END
  I = I + 1
  END
  SAY
  IF P > 1 THEN PROCS = 'PROCESSORS'
           ELSE PROCS = 'PROCESSOR'
  SAY
  SAY P PROCS 'IN THIS COMPLEX'
  /* ESTIMATING MIPS POWER OF THE COMPLEX                            */
  /* 30-10-96 DEDUCTION DU NOMBRE DE MIPS */
  /* (EMPIRIQUE, OBTENU D'APRES TABLEAU DE CORRESPONDANCE C.WATSONS */
  MIPS = SU/48.5
  SAY
  SAY '** TOTAL EVALUATED MIPS         :' MIPS*P
  IF P > 1 THEN SAY '** EQUIVALENT UNIPROCESSOR MIPS :' MIPS
  /*                                           */
  /*  MSU EVALUATION                           */
  /*                                           */
  MSU = SU*P*3600/1000000
  SAY FORMAT(MSU,,0) 'MSU (FOR PSLC PRICING -' ,
              'NOT APPLICABLE TO AMDAHL)'
