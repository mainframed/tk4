         MACRO
&NLA     CONVERT  &FROMP=,&FROMZ=,&FROMB=,                             X
               &TOP=,&TOZ=,&TOB=,&RENT=NO,                             X
               &FROMLEN=,&TOLEN=,&WORKREG=0,                           X
               &LZERO=ZERO
.*
.* FROMP= ZONE PACKEE ORIGINE, A CONVERTIR        *
.* FROMZ= ZONE DEC ZONEE ORIGINE, A CONVERTIR     * MUTUELMT EXCLUSIFS
.* FROMB= ZONE BINAIRE ORIGINE, A CONVERTIR       *
.* TOP=   ZONE PACKEE RECEPTRICE             *
.* TOZ=   ZONE DEC ZONEE RECEPTRICE          * MUTUELLEMENT EXCLUSIFS
.* TOB=   ZONE BINAIRE RECEPTRICE            *
.*
.*        LES PARAMETRES QUI SUIVENT SONT FACULTATIFS :
.* FROMLEN= LONGUEUR ZONE ORIGINE
.* TOLEN=   LONGUEUR ZONE DESTINATION RECEPTRICE
.* WORKREG= REGISTRE DE TRAVAIL
.* LZERO=   ZERO OU BLANK SELON QUE RESULTAT DECIMAL ZONE AVEC ZEROS OU
.*          BLANCS EN-TETE (UNIQUEMENT SI PARAMETRE TOZ UTILISE)
.* RENT=    NO OU YES SELON QUE ZONES DE TRAVAIL CREEES OU FOURNIES
.*        SI REENTRANCE SOUHAITEE, CREER UNE DSECT CONTENANT LES ZONES:
.*                    MSKPZTMP    DS    CL16 (INSTRUCTION ED)
.*                    DBLEWRK$    DS    D    (CVB ET CVD)
.*
.*
.* LIMITATIONS : ZONES BINAIRES<=4C    PACKEES<=8C     DEC ZONEES<=16C
.*
.*
.*
&NLA     DS    0H
         LCLC  &FL,&TL       LONGUEUR FROM ET TO
.*
.* OBTENIR LONGUEURS ZONES : ZONE ORIGINE
.*
         AIF   ('&FROMLEN' NE '').NOFL
&FL      SETC  'L''&FROMP&FROMZ&FROMB'     LONGUEUR EN OCTETS ZONE
         AGO   .NOFL2
.NOFL    ANOP
&FL      SETC   '&FROMLEN'
.NOFL2   ANOP
.*
.* OBTENIR LONGUEURS ZONES : ZONE DESTINATION
.*
         AIF   ('&TOLEN' NE '').NOTL
&TL      SETC  'L''&TOP&TOZ&TOB'        LONGUEUR EN OCTETS ZONE
         AGO   .NOTL2
.NOTL    ANOP
&TL      SETC   '&TOLEN'
.NOTL2   ANOP
.*
.* CONTROLER QU'IL N'Y AIT PAS TROP DE PARAMETRES FROM INDIQUES
.*
         AIF  ('&FROMP' NE '' AND '&FROMZ' NE '').ERR1
         AIF  ('&FROMP' NE '' AND '&FROMB' NE '').ERR1
         AIF  ('&FROMZ' NE '' AND '&FROMB' NE '').ERR1
.*
.* CONTROLER QU'IL N'Y AIT PAS TROP DE PARAMETRES TO INDIQUES
.*
         AIF  ('&TOP' NE '' AND '&TOZ' NE '').ERR2
         AIF  ('&TOP' NE '' AND '&TOB' NE '').ERR2
         AIF  ('&TOZ' NE '' AND '&TOB' NE '').ERR2
.*
.* CONTROLER COHERENCE FROM ET TO
.*
         AIF  ('&FROMP' NE '' AND '&TOP' NE '').ERR4
         AIF  ('&FROMZ' NE '' AND '&TOZ' NE '').ERR4
         AIF  ('&FROMB' NE '' AND '&TOB' NE '').ERR4
.*
.* CONTROLER VALEUR DE &LZERO
.*
         AIF  ('&LZERO' NE 'ZERO' AND '&LZERO' NE 'BLANK').ERR3
.*
.* CONTROLER VALEUR DE &RENT
.*
         AIF  ('&RENT' NE 'YES' AND '&RENT' NE 'NO').ERR5
.*--------------------------------------------------------------*
.* FROMP TOZ      PACKE 8C -> DECIMAL ZONE 16C                  *
.*--------------------------------------------------------------*
         AIF  ('&FROMP' EQ '' OR '&TOZ' EQ '').NOTPZ
         AIF  ('&LZERO' EQ 'BLANK').PZ001
         UNPK  &TOZ.(&TL),&FROMP.(&FL)      UNPACK PACKED DATA
         OI    &TOZ+&TL-1,X'F0'             SIGN TO BE NORMALIZED
         AGO   .PZ002
.PZ001   ANOP
         MNOTE '         ** LEADING ZEROES WILL BECOME BLANKS **'
         AIF   (T'MSKPZ010 NE 'U').MSKDEF
         B     DFMK&SYSNDX
MSKPZ010 DC    X'40202020202020202020202020202020'   MASK FOR ED INSTR.
         AIF   ('&RENT' EQ 'YES').RENT1
MSKPZTMP DC    CL16' '     TEMPORARY ZONE FOR ED INSTRUCTION
.RENT1   ANOP
DFMK&SYSNDX  DS  0H
.MSKDEF  ANOP
         MVC   MSKPZTMP,MSKPZ010           MOVE MASK FOR ED INSTRUCTION
         ED    MSKPZTMP(&FL+&FL),&FROMP     UNPACK BY EDIT
     MNOTE '         ** BEWARE, &TOZ MUST BE DOUBLE-LENGTH OF &FROMP'
         MVC   &TOZ.(&TL),MSKPZTMP         MOVE RESULT IN "TO" ZONE
.PZ002   ANOP
         AGO   .END
.*
.NOTPZ   ANOP
.*--------------------------------------------------------------*
.* FROMP TOB      PACKE <=8C -> BINAIRE <= 4C                   *
.*--------------------------------------------------------------*
         AIF  ('&FROMP' EQ '' OR '&TOB' EQ '').NOTPB
         AIF   ('&RENT' EQ 'YES').RENT2
         AIF   (T'DBLEWRK$ NE 'U').DBLDEF
         B     DFTM&SYSNDX
DBLEWRK$ DC    D'0'        TEMPORARY ZONE FOR CVB/CVD
DFTM&SYSNDX  DS  0H
.DBLDEF  ANOP
.RENT2   ANOP
         XC    DBLEWRK$,DBLEWRK$           SET TEMP DOUBLE-WORD TO 0
         MVC   DBLEWRK$+8-&FL.(&FL),&FROMP  MOVE FROM ZONE (PACKED)
         MNOTE '         ** WORK REGISTER IS NUMBER &WORKREG **'
         CVB   &WORKREG,DBLEWRK$           CONVERT TO BINARY
         ST    &WORKREG,DBLEWRK$           STORE RESULT IN 1ST WORD
         XC    &TOB.(&TL),&TOB             DESTINATION ZONE SET TO 0
         MVC   &TOB.(&TL),DBLEWRK$+4-&TL   MOVE RESULT
         AGO   .END
.NOTPB   ANOP
.*--------------------------------------------------------------*
.* FROMZ TOP      ZONE 16C   -> PACKE  8C                       *
.*--------------------------------------------------------------*
         AIF  ('&FROMZ' EQ '' OR '&TOP' EQ '').NOTZP
         AIF   ('&RENT' EQ 'YES').RENT3
         AIF   (T'DBLEWRK$ NE 'U').DBLDEF2
         B     DFTM&SYSNDX
DBLEWRK$ DC    D'0'        TEMPORARY ZONE FOR CVB/CVD
DFTM&SYSNDX  DS  0H
.DBLDEF2 ANOP
.RENT3   ANOP
         PACK  DBLEWRK$(8),&FROMZ.(&FL)    PACK INTO DOUBLE-WORD
         ZAP   &TOP.(&TL),DBLEWRK$(8)      MOVE TO ZONE (PACKED)
         AGO   .END
.NOTZP   ANOP
.*--------------------------------------------------------------*
.* FROMZ TOB      ZONE 16C   -> BINAIRE 4C                      *
.*--------------------------------------------------------------*
         AIF  ('&FROMZ' EQ '' OR '&TOB' EQ '').NOTZB
         AIF   ('&RENT' EQ 'YES').RENT4
         AIF   (T'DBLEWRK$ NE 'U').DBLDEF3
         B     DFTM&SYSNDX
DBLEWRK$ DC    D'0'        TEMPORARY ZONE FOR CVB/CVD
DFTM&SYSNDX  DS  0H
.DBLDEF3 ANOP
.RENT4   ANOP
         PACK  DBLEWRK$(8),&FROMZ.(&FL)    PACK INTO DOUBLE-WORD
         MNOTE '         ** WORK REGISTER IS NUMBER &WORKREG **'
         CVB   &WORKREG,DBLEWRK$           CONVERT TO BINARY
         ST    &WORKREG,DBLEWRK$           STORE RESULT IN 1ST WORD
         XC    &TOB.(&TL),&TOB             DESTINATION ZONE SET TO 0
         MVC   &TOB.(&TL),DBLEWRK$+4-&TL   MOVE RESULT
         AGO   .END
.NOTZB   ANOP
.*--------------------------------------------------------------*
.* FROMB TOP      BINAIRE 4C   -> PACKE 8C
.*--------------------------------------------------------------*
         AIF  ('&FROMB' EQ '' OR '&TOP' EQ '').NOTBP
         AIF   ('&RENT' EQ 'YES').RENT5
         AIF   (T'DBLEWRK$ NE 'U').DBLDEF4
         B     DFTM&SYSNDX
DBLEWRK$ DC    D'0'        TEMPORARY ZONE FOR CVB/CVD
DFTM&SYSNDX  DS  0H
.RENT5   ANOP
.DBLDEF4 ANOP
         XC    DBLEWRK$,DBLEWRK$           RESET TO BINARY ZEROES
         MVC   DBLEWRK$+4-&FL.(&FL),&FROMB MOVE BINARY ZONE IN WORK
         MNOTE '         ** WORK REGISTER IS NUMBER &WORKREG **'
         ICM   &WORKREG,15,DBLEWRK$        LOAD BINARY NUMBER IN REG
         CVD   &WORKREG,DBLEWRK$           CONVERT TO PACKED
         ZAP   &TOP,DBLEWRK$               MOVE RESULT
         AGO   .END
.NOTBP   ANOP
.*--------------------------------------------------------------*
.* FROMB TOZ      BINAIRE 4C   -> ZONE 16C
.*--------------------------------------------------------------*
         AIF  ('&FROMB' EQ '' OR '&TOZ' EQ '').NOTBZ
         AIF   ('&RENT' EQ 'YES').RENT6
         AIF   (T'DBLEWRK$ NE 'U').DBLDEF5
         B     DFTM&SYSNDX
DBLEWRK$ DC    D'0'        TEMPORARY ZONE FOR CVB/CVD
DFTM&SYSNDX  DS  0H
.RENT6   ANOP
.DBLDEF5 ANOP
         XC    DBLEWRK$,DBLEWRK$           RESET TO BINARY ZEROES
         MVC   DBLEWRK$+4-&FL.(&FL),&FROMB MOVE BINARY ZONE IN WORK
         MNOTE '         ** WORK REGISTER IS NUMBER &WORKREG **'
         ICM   &WORKREG,15,DBLEWRK$        LOAD BINARY NUMBER IN REG
         CVD   &WORKREG,DBLEWRK$           CONVERT TO PACKED
.*
         AIF  ('&LZERO' EQ 'BLANK').BZ001
         UNPK  &TOZ.(&TL),DBLEWRK$         UNPACK PACKED DATA
         OI    &TOZ+&TL-1,X'F0'            SIGN TO BE NORMALIZED
         AGO   .BZ002
.BZ001   ANOP
         MNOTE '         ** LEADING ZEROES WILL BECOME BLANKS **'
         AIF   (T'MSKPZ010 NE 'U').MSKDEF2
         B     DFMK&SYSNDX
MSKPZ010 DC    X'40202020202020202020202020202020'   MASK FOR ED INSTR.
         AIF   ('&RENT' EQ 'YES').RENT7
MSKPZTMP DC    CL16' '     TEMPORARY ZONE FOR ED INSTRUCTION
.RENT7   ANOP
DFMK&SYSNDX  DS  0H
.MSKDEF2 ANOP
         MVC   MSKPZTMP,MSKPZ010           MOVE MASK FOR ED INSTRUCTION
         ED    MSKPZTMP,DBLEWRK$           UNPACK BY EDIT
         MVC   &TOZ.(&TL),MSKPZTMP+16-&TL  MOVE RESULT IN "TO" ZONE
.BZ002   ANOP
         AGO   .END
.NOTBZ   ANOP
         MNOTE 8,'** NOT ENOUGH PARAMETERS, NO CODE GENERATED **'
.*
.END     ANOP
.* NORMAL END OF MACRO
         MEXIT
.*
.*--------------------------------------------------------------*
.* ERREURS
.*--------------------------------------------------------------*
ERR1     MNOTE 8,'** TOO MANY FROM= PARAMETERS'
         MEXIT
ERR2     MNOTE 8,'** TOO MANY TO= PARAMETERS'
         MEXIT
ERR3     MNOTE 8,'** LZERO=&LZERO INCORRECT, MUST BE ZERO OR BLANK'
         MEXIT
ERR4     MNOTE 8,'** UNABLE TO CONVERT FROM A FORMAT TO SAME FORMAT ×'
         MEXIT
ERR5     MNOTE 8,'** RENT=&RENT INCORRECT, MUST BE YES OR NO'
         MEXIT
         MEND
