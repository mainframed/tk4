/*REXX*/
SAY '------------------------------------------------------------'
SAY 'WHEN U WANT THE STRING TO BE SEARCHED ON ALL DATASETS OF A -'
SAY ' VOLUME PRMG04 THEN ENTER OPT. 1 AND PRMG04 WHEN PROMPTED   '
SAY '------------------------------------------------------------'
SAY 'WHEN U WANT THE STRING TO BE SEARCHED IN DATASETS BEGINNING '
SAY 'WITH ANYNAME.* ON VOLUME PRMG04 THEN ENTER OPT. 2 AND ENTER '
SAY 'PRMG04 ANYNAME.* WHEN PROMPTED                              '
SAY '------------------------------------------------------------'
SAY 'WHEN U WANT THE STRING TO BE SEARCHED IN DATASETS BEGINNING '
SAY 'WITH ANYNAME.* THEN ENTER OPT. 3 AND ENTER ANYNAME.*        '
/*------------------------------------------------------------------*/
/* THIS JOB IS FOR FINDING A STRING DEPENDING UPON GIVEN VOLUME OR  */
/* DATASET PATTERN . IT USES ISPF LM UTILITIES AND REXX .           */
/* LMDLIST IS USED TO FETCH ALL THE DATASET GETTING QUALIFIED FOR   */
/*         GIVEN INPUT .                                            */
/* LMMLIST IS USED FOR GETTING ALL THE MEMBERS OF A PARTITIONED     */
/*   IT TAKES A STRING AND 'PATTERN OF DATASET OR VOLUME' AS        */
/*   INPUT AND LIST ALL DATASETS MATCHING THE PATTERN OR GIVEN      */
/*   VOLUME . IF ORGANISATION OF DATASET IS 'PO' IT LIST ALL        */
/*   THE MEMBERS AND FIND GIVEN STRING IN THEM . IT SEARCHES ALL    */
/*   SEQUENTIAL AND PARTITIONED DATA SET MATCHING A GIVEN PATTERN OR*/
/*   VOLUME .                                                       */
/* DATASET PATTERN CAN BE GIVEN LIKE USERID.*.* OR ANYNAME.P*.Q*    */
/*------------------------------------------------------------------*/
STR = ' '
SAY '----------------------------------------------------'
SAY 'PLEASE ENTER STRING AND DATASET WITHOUT QUOTES      '
SAY '----------------------------------------------------'
SAY 'ENTER THE STRING TO BE SEARCHED '
PULL STR
SAY 'PLEASE ENTER 1 TO FIND STRING ON BASIS OF VOLUME'
SAY 'PLEASE ENTER 2 TO FIND STRING ON BASIS OF VOL AND PATTERN'
SAY 'PLEASE ENTER 3 TO FIND STRING ON BASIS OF DS PATTERN ONLY'
SAY 'PLEASE ENTER 4 TO QUIT'
PARSE PULL OPTION

  SELECT
      WHEN OPTION = 1 THEN DO
        SAY 'PLEASE ENTER THE VOLUME'
        PARSE PULL VOLNM
         IF VOLNM = ' ' THEN EXIT
      END

      WHEN OPTION = 2 THEN DO
        SAY 'PLEASE ENTER VONUME AND DATASET PATTERN SEPARATED BY BLANK'
        PARSE PULL TEMP1
        IF WORDS(TEMP1) /= 2 THEN
          DO
           SAY 'PARAMETERS NOT SUPPLIED'
           EXIT
          END
       ELSE
        PARSE VAR TEMP1 VOLNM DSNM
      END
      WHEN OPTION = 3 THEN DO
        SAY 'PLEASE ENTER DATASET PATTERN'
        PARSE PULL DSNM
        IF DSNM = ' ' THEN
         DO
          SAY 'DATASET PATTERN OR NAME NOT SUPPLIED'
          EXIT
         END
      END

      WHEN OPTION = 4 THEN DO
        SAY 'ENDING THE PROGRAM'
        EXIT
      END

      OTHERWISE
        NOP
  END

  SELECT

    WHEN OPTION = 1 THEN DO         /* GET DATASET ID FOR LMDLIST */
       ADDRESS ISPEXEC 'LMDINIT LISTID(ID) VOLUME('VOLNM')'
           IF RC \= 0 THEN EXIT
    END

    WHEN OPTION = 2 THEN DO
      ADDRESS ISPEXEC 'LMDINIT LISTID(ID) VOLUME('VOLNM') LEVEL('DSNM')'
           IF RC \= 0 THEN EXIT
    END

    WHEN OPTION = 3 THEN DO
      ADDRESS ISPEXEC 'LMDINIT LISTID(ID) LEVEL('DSNM')'
           IF RC \= 0 THEN EXIT
    END

    OTHERWISE
     NOP
  END

   DSVAR = ' '
   RETRC = 0

    DO WHILE RETRC = 0

       CALL GETDATASET

        IF RETRC /= 0 THEN
           LEAVE

        IF ZDLDSORG = 'PO' THEN  /* THIS DIALOGUE VAR GIVES DS ORG.*/
            CALL GETPO           /* DATA SET IS PARTITIONED        */
         ELSE
           IF ZDLDSORG = 'PS' THEN
            CALL GETSEQ          /* DATA SET IS SEQUENTIAL         */
          ELSE
            NOP

    END

       ADDRESS ISPEXEC 'LMDFREE LISTID('ID')'


   GETDATASET : /* SUBROUTINE FOR GETTING QUALIFIED DATASETS
                              FROM LIST IN VARIABLE 'DSVAR'  */

      ADDRESS ISPEXEC 'LMDLIST LISTID('ID') OPTION(LIST) ,
                DATASET(DSVAR) STATS(YES)'

      RETRC = RC

      IF RETRC = 4 THEN

       DO
        SAY 'NO DATA SET FOUND ON BASIS OF VOLUME OR PATTERN'
        EXIT
       END

      RETURN

   GETPO :      /* SUBROUTINE FOR GETTING ALL THE MEMBERS OF DATASET */

      RETPO = 0
      MEM   = ' '
    ADDRESS ISPEXEC
      "LMINIT DATAID(DID) DATASET('"DSVAR"')" /*GET DS ID FOR LMMLIST*/
      "LMOPEN DATAID(&DID) OPTION(INPUT)"    /* OPEN DATASET         */

   DO WHILE RETPO = 0
      ADDRESS ISPEXEC   /* GET ALL THE MEMBERS OF A DATASET IF 'PO' */
        "LMMLIST DATAID(&DID) OPTION(LIST) MEMBER(MEM)"

      RETPO = RC
        IF RETPO = 0 THEN
           CALL GETSTR
   END

      ADDRESS ISPEXEC "LMMLIST DATAID(&DID) OPTION(FREE)"
      ADDRESS ISPEXEC "LMCLOSE DATAID(&DID)"

     RETURN

    GETSTR :

        ADDRESS TSO  /* CONCATENATE THE MEMBER WITH DATASET NAME */

        DDNM = DSVAR××'('××STRIP(MEM)××')'

            "ALLOC DA('"DDNM"') FI(PODATA) SHR REU"
            "EXECIO * DISKR PODATA(FINIS"

             NUMBER = QUEUED()

           DO SE = 1 TO NUMBER

              PULL PODATA

              IF INDEX(PODATA,STR) /= 0 THEN
                DO
                 SAY 'DSNAME : ' DDNM
                 SAY 'DATA   : ' PODATA
                 SAY '--------------------------------------------'
                END
           END
            RETURN

  GETSEQ :

        ADDRESS TSO
            "ALLOC DA('"DSVAR"') FI(SEQDATA) SHR REU"
             SEQRC = RC
             IF SEQRC /= 0 THEN
              DO
               SAY 'FILE' DSVAR 'COULD NOT BE ALLOCATED FOR SEARCH'
               SAY 'RETURN CODE =' SEQRC
               RETURN
              END

            "EXECIO * DISKR SEQDATA(FINIS"

             SEQNUM = QUEUED()

           DO SE = 1 TO SEQNUM

              PULL SEQDATA

              IF INDEX(SEQDATA,STR) /= 0 THEN
                DO
                 SAY 'DSNAME : ' DSVAR
                 SAY 'DATA   : ' SEQDATA
                 SAY '--------------------------------------------'
                END
           END
            "FREE FI(SEQDATA)"
            RETURN
