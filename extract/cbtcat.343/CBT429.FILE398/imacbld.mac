/* REXX
 ×
 × Name: IMACBLD
 ×
 × Author: David Alcock
 ×         davea@ticnet.com
 ×
 × Purpose: This exec rebuilds the IMAC edit macro when Gilbert
 ×          Saint-flour's FILE183(HANDBOOK) changes.
 ×
 × Requirements: This program reads in an edited version of
 ×               the CBT tape FILE183(HANDBOOK).  These are the
 ×               statements that look like:
 ×
 ×               //ACB    EXEC ASMMAC,MBR=ACB
 ×                        IFGACB
 ×                        END
 ×               //ACEE   EXEC ASMMAC,MBR=ACEE
 ×                        IHAACEE
 ×                        END
 ×
 ×               If you want the Rexx Exec to work in a 80 column
 ×               Fixed Block dataset, you should edit out the
 ×               comment lines.
 ×
 × Disclaimer: This REXX exec is FREEWARE.  Use at your own risk.  It
 ×             is provided for your enjoyment and neither David
 ×             Alcock or his employer provides any warranty for it's
 ×             use.  I'd like to hear how it works on your system.
 */

address TSO

/*---------------------------------------------------------------------
 × Read in the edited FILE183(HANDBOOK) statements
 ------------------------------------------------------------------- */

arg sysut1_dsn
if sysut1_dsn == "" then ,
   sysut1_dsn = 'dave.sdsf(@imac)'  /* Edited FILE183(HANDBOOK */

x = LISTDSI(sysut1_dsn)
if x <> 0 then do
   say "Error accessing DSN:" sysut1_dsn
   say "> "sysmsglvl1
   say "> "sysmsglvl2
   say "> SYSREASON: "sysreason
   exit
   end

sysut1_pdsn = sysdsname
parse value sysut1_dsn with . "(" member ")" .
if member <> "" then do
   sysut1_pdsn = sysut1_pdsn"("strip(member)")"
   end
say "Processing input file "sysut1_pdsn

sysut1_dd = "SYU1"random()
"ALLOCATE FILE("sysut1_dd") DA('"sysut1_pdsn"') SHR REUSE"
"EXECIO * DISKR "sysut1_dd" (FINIS STEM sysut1_file."
"FREE FILE("sysut1_dd")"

/*---------------------------------------------------------------------
 × Create the output file
 ------------------------------------------------------------------- */

sysut2_dsn = sysvar(sysuid)".@SYSUT2"
say "Writing to DSN="sysut2_dsn
"DELETE '"sysut2_dsn"'"
"ALLOCATE FILE(SYSUT2) DA('"sysut2_dsn"')",
         "UNIT(SYSDA) NEW REUSE SPACE(5 5) TRACKS",
         "LRECL(137) BLKSIZE(32760) RECFM(V B)"

"NEWSTACK"               /* Place to put SYSUT2 output */

/*---------------------------------------------------------------------
 × Write out the select statements
 ------------------------------------------------------------------- */

queue "/* Start of IMACBLD generated code - - - - - - - - - - - - */"
queue "    "
queue "select"
do i = 1 to sysut1_file.0
   if substr(sysut1_file.i,1,2) == "//" then do
      mac = strip(substr(sysut1_file.i,3,7))
      queue "  when rmac = '"mac"' then do"
      iterate
      end
   if word(sysut1_file.i,1) = "END" then do
      queue "       end"
      iterate
      end

   aline = strip(sysut1_file.i)

   /* if makes "IFGACB" into "IFGACB  ," - fancy smancy */
   if words(aline) == 1 then do
      aline = left(aline,8)" ,"
      end

   aline = "'         "aline"'"
   queue "       aline = "aline
   queue "       'VPUT (ALINE)'"
   queue "       'ISREDIT LINE_AFTER 'zdest' = DATALINE (ALINE)'"
   end

/*---------------------------------------------------------------------
 × Write out the otherwise statements
 ------------------------------------------------------------------- */

queue "otherwise"
j = 0
line = ""
queue "  say 'Macro 'rmac' is not supported by IMAC.  We support:'"
queue "  say ' ' "

do i = 1 to sysut1_file.0
   if substr(sysut1_file.i,1,2) == "//" then do
      line = line ××substr(sysut1_file.i,3,7)
      j = j + 1
      if j = 9 then do
         queue "  say '"line"'"
         j = 0
         line = ""
         end
      iterate
      end
   end
if line <> "" then queue "  say '"line"'"
queue "  end"
queue "/* End of IMACBLD generated code - - - - - - - - - - - - - */"

/*---------------------------------------------------------------------
 × The fat lady starts singing now
 ------------------------------------------------------------------- */

queue ''      /* add null line to indicate End-Of-File */
"EXECIO * DISKW SYSUT2 (FINIS"
"DELSTACK"
"FREE FILE(SYSUT2)"
exit 0
