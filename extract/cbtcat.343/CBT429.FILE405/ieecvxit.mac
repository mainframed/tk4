//NTS0991A JOB (0991,TSG),'* IEECVXIT *',MSGCLASS=X,
//  NOTIFY=NTS0991,MSGLEVEL=(1,1),CLASS=6
//IEFUTL1 EXEC PGM=IEV90,
// PARM='XREF(SHORT),LIST,LINECOUNT(55)),DECK,RENT'
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DISP=SHR,DSN=LOCL.USEROBJ(IEECVXIT)
//SYSLIB   DD DISP=SHR,DSN=SYS1.SMPMTS
//         DD DISP=SHR,DSN=LOCL.USERSRC
//         DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.AMODGEN,UNIT=3350,VOL=SER=DLB85A
//         DD DISP=SHR,DSN=SYS1.AGENLIB,UNIT=3350,VOL=SER=DLB85A
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT2   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT3   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSIN    DD *
         TITLE 'IEECVXIT - MCS USER EXIT'
IEECVXIT CSECT
***********************************************************************
*                                                                     *
*      THIS CODE HAS BEEN EXTENSIVELY MODIFIED FROM THE USER EXIT AS  *
* DISTRIBUTED ON THE CBT MODS TAPE. THE SIGNIFICANT CHANGE IS THAT IT *
* IS TABLE DRIVEN RATHER THAN CONTAINING MESSAGES/REPLIES CODED INLINE*
* AND THEREFORE THE SELECTION CRITERIA FOR CONSOLE TRAFFIC CAN BE     *
* MODIFIED BY THE SYSTEMS PROGRAMMER ON THE FLY WITHOUT AN IPL.       *
*                                                                     *
*                                    MARV CRUZAN                      *
*                                    DEFENSE LOGISTICS AGENCY         *
*                                    DLA SYSTEMS AUTOMATION CENTER    *
*                                    DSAC-TSG                         *
*                                    P O BOX P1605                    *
*                                    COLUMBUS, OH  43216-5002         *
*                                    (614) 238-9409                   *
*                                                                     *
* CHANGE LOG:                                                         *
*       13JAN86 - CBT MODS TAPE VERSION MODIFIED - M CRUZAN           *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* THIS PROGRAM IS USED AS A USER MCS EXIT TO TRAP SPECIFIC MESSAGES   *
* AND: SUPPRESS THE MESSAGE,                                          *
*      CHANGE THE MESSAGE TO ROLL OR NO-ROLL,                         *
*      ISSUE A REPLY TO THE MESSAGE,                                  *
*      ISSUE ANOTHER COMMAND AS A RESULT OF THE MESSAGE.              *
*                                                                     *
* REG1=======> +----/ /----+-----------+-----------+                  *
*              × UCMMSTXT  × UCMROUTC  × UCMDESCD  ×                  *
*              × 128 BYTES ×  4  BYTES ×  4  BYTES ×                  *
*              +----/ /----+-----------+-----------+                  *
*                                                                     *
* ROUTING CODES:                                                      *
*                                                                     *
*      1 MASTER CONSOLE ACTION          9  SYSTEM SECURITY            *
*      2 MASTER CONSOLE INFO            10 SYSTEM ERROR/MAINTENANCE   *
*      3 TAPE POOL                      11 PROGRAMMER INFORMATION     *
*      4 DASD POOL                      12 EMULATORS                  *
*      5 TAPE LIBRARY                   13 RESERVED FOR CUSTOMER      *
*      6 DASD LIBRARY                   14 RESERVED FOR CUSTOMER      *
*      7 UNIT RECORD POOL               15 RESERVED FOR CUSTOMER      *
*      8 TELEPROCESSING CONTROL         16 RESERVED FOR IBM           *
*                                                                     *
* DESCRIPTOR CODES:                                                   *
*                                                                     *
*      1 SYSTEM FAILURE                 9  OPERATOR REQUEST           *
*     *2 IMMEDIATE ACTION REQUIRED      10 DYNAMIC STATUS DISPLAYS    *
*     *3 EVENTUAL ACTION REQUIRED      *11 CRITICAL EVENTUAL ACTION   *
*      4 SYSTEM STATUS                  12 RESERVED                   *
*      5 IMMEDIATE COMMAND RESPONSE     13 RESERVED                   *
*      6 JOB STATUS                     14 RESERVED                   *
*      7 APPLICATION PROGRAM/PROCESSOR  15 RESERVED                   *
*      8 OUT-OF-LINE MESSAGE            16 RESERVED                   *
*  (*)NO ROLL DESCRIPTOR CODES                                        *
*                                                                     *
* COLOUR CODES (BASED ON DESCRIPTOR CODE):                            *
*                                                                     *
*      1, 11      RED                                                 *
*      2, WTOR'S  WHITE                                               *
*      8          BLUE                                                *
*      ALL OTHERS GREEN                                               *
*                                                                     *
***********************************************************************
          EJECT
***********************************************************************
*                                                                     *
* ATTRIBUTES:                                                         *
*      RE-ENTRANT,RESIDENT IN PLPA.                                   *
*                                                                     *
* ENTRY BY BALR FROM IEAVVWTO IN LMOD IGC0003E.                       *
*                                                                     *
* RETURN TO CALLER VIA BR14.                                          *
*                                                                     *
* NO SUBPROGRAM CALLS.                                                *
*                                                                     *
* INPUT IS THE UCM PARAMETER LIST POINTED TO BY REG1.                 *
*                                                                     *
*      REG5+X'74' ===> VPARMAD IN THE SVRB EXTENTION.                 *
*      VPARMAD+4 ===> WTOR ECB.                                       *
*                                                                     *
* TWO INTERNAL ROUTINES:                                              *
*     IEECVSRB - AN SRB SCHEDULED TO THE FIRST READY TCB ON THE ASCB  *
*                FOR CMD1.                                            *
*     IEECVIRB - AN IRB BELONGING TO CMD1.                            *
*                                                                     *
* RELATED CODE:                                                       *
*     IEAVNP99 - NIP USER EXIT.                                       *
*     DLACMD00 - MESSAGE ENTRY TABLE IN CSA.                          *
*     IEECVENT - MACRO TO CREATE DLACMD00 ENTRIES.                    *
*     IEECVUSR - MAPPING MACRO FOR DLACMD00.                          *
*     CMD1     - STC THAT EXECUTES DSACTASK THAT LOADS AND ANCHORS    *
*                IEECVUSR IN THE CVTVERID.                            *
*                                                                     *
***********************************************************************
*                                                                     *
*      IEECVXIT LOOKS FOR THE IEECVUSR TABLE WHICH IS ANCHORED IN THE *
* CVTVERID USER CVT PREFIX BY CMD1 AT INITIALIZATION.  THE TABLE IS   *
* MADE UP OF ENTRIES OF SELECTED MESSAGES TO ACT UPON, FLAGS AND/OR   *
* TEXT FOR RESPONSES. WHEN A HIT IS MADE, THE FLAGS ARE TESTED TO DE- *
* TERMINE IF IEECVXIT WILL ALTER THE MESSAGE DIRECTLY OR SCHEDULE     *
* IEECVSRB TO ISSUE SOME SUBSEQUENT RESPONSE.                         *
*                                                                     *
*      THE SRB IS NEEDED BECAUSE A REPLY NUMBER MAY NOT HAVE BEEN GEN-*
* ERATED AND IEECVXIT CANNOT ISSUE A WAIT BECAUSE THAT WOULD HALT THE *
* PROCESSING OF THE WTOR.  THIS CANNOT BE SUBTASKED EITHER BECAUSE    *
* THE TASK MAY END BEFORE THE SUBTASK. THEREFORE, IEECVXIT RUNS UNDER *
* THE MESSAGE INVOKER'S ASID AND THE SRB IS DISPATCHED TO CMD1'S AD-  *
* DRESS SPACE.                                                        *
*                                                                     *
***********************************************************************
         EJECT
R0       EQU   0
R1       EQU   1                       ADDRESS OF SUPPLIED PARAMETERS
M1       EQU   1                       ICM MASK
R2       EQU   2                       ADDRESS OF EXIT PARAMETERS
M2       EQU   2                       ICM MASK
R3       EQU   3                       ADDRESS OF CVT
R4       EQU   4                       ADDRESS OF UCB LOOKUP TABLE
R5       EQU   5                       ADDRESS OF UCB
R6       EQU   6
R7       EQU   7                       ADDRESS IN OPTIONAL MSG TABLE
M7       EQU   7                       ICM MASK
R8       EQU   8                       INCREMENT FOR MSG TABLE
R9       EQU   9                       END ADDRESS OF MSG TABLE
R10      EQU   10
R11      EQU   11
R12      EQU   12                      BASE REGISTER
R13      EQU   13                      SAVE AREA POINTER
R14      EQU   14                      RETURN ADDRESS
R15      EQU   15                      ENTRY ADDRESS
M15      EQU   15                      ICM MASK
CVTLOC   EQU   16                      LOCATION OF CVT
         USING *,R15                   EST. ADDRESSABILITY
         B     PROLOG                  BYPASS PROLOGUE
         DC    C'IEECVXIT &SYSDATE..&SYSTIME' NAME AND DATE/TIME STAMP
         DS    0H                      ALLIGNMENT
PROLOG   SAVE  (14,12)                 SAVE CALLERS REGS
         LR    R12,R15                 SAVE ENTRY ADRESS
         DROP  R15                     LOSE OLD BASE
         USING IEECVXIT,R12            REAL BASE ADDRESS=R12
         L     R2,0(R1)                SET ADDR TO IEECUCM DSECT
         USING UCMEXIT,R2              EST. ADDR TO IEECUCM DSECT
       GETMAIN R,LV=WORKAL,SP=250    GET CORE FROM SP=250
         LR    R10,R1                  SAVE THE ADDRESS
         USING WORKAREA,R10            GET ADDRESSABILITY
         ST    R13,SAVE1+4             SETUP
         ST    R10,8(R13)                  SAVEAREA
         LR    R13,R10                         CHAIN
*                                      GET VPARMAD FROM ORIGINAL
         L     R8,X'74'(R5)            SVRB EXTENTION
         MVC   $ECB,4(R8)              SAVE HIS ECB ADDRESS
         TITLE 'IEECVXIT - SCAN FOR CONSOLE TRAFFIC'
***********************************************************************
*                                                                     *
*        LOOK FOR MESSAGES.                                           *
*                                                                     *
***********************************************************************
         L     R7,16              GET THE CVT
         S     R7,=A(CVTMAP-CVTFIX) BACKUP TO USER PREFIX
         USING CVTFIX,R7
         LA    R7,CVTVERID        AND GET USER AREA
         DROP  R7
         USING CVTVER,R7
         TM    DSACFLG1,NP99TBLD  IS THE TABLE LOADED?
         BZ    RETURN             NO - EXIT
         TM    DSACFLG1,NP99TBIU  IS IT AVAILABLE?
         BZ    RETURN             NO - DONT WAIT AROUND
         ICM   R8,M15,DSACTCMD    GET TABLE ENTRY
         BZ    RETURN             SHOULDNT HAPPEN
         USING IEECVUSR,R8
MSGLOOP  DS    0H
         SR    R9,R9              CLEAR WORK REG9
MSGLOOP1 DS    0H
         IC    R9,IEECVSNG        LOOK FOR TABLE END
         LTR   R9,R9                TEST IT
         BZ    RETURN             THIS MSG NOT ON TABLE
         BCTR  R9,0               DECREMENT FOR EXECUTE
         EX    R9,MSGCLC          COMPARE WITH UCM
         BE    MSGFOUND           GOTCHA!
         IC    R9,IEECVLNG        GET ENTRY LENGTH
         LA    R8,0(R9,R8)        AND BUMP TO IT
         B     MSGLOOP1           GO BACK AROUND
MSGCLC   CLC   IEECVTXT(0),UCMMSTXT
MSGFOUND DS    0H
         TM    IEECVFLG,IEECVACT+IEECVRPL   ISSUE START OR REPLY?
         BNZ   SCHEDULE           - YES
         TM    IEECVFLG,IEECVSUP  SUPPRESS?
         BO    SUPPRESS           -YES
         TM    IEECVFLG,IEECVROL  MAKE IT ROLL?
         BO    ROLL               -YES
         TM    IEECVFLG,IEECVNRL  MAKE IT NO ROLL?
         BO    NOROLL             -YES
         TM    IEECVFLG,IEECVNRD  MAKE IT NO ROLL WITH DELETE?
         BO    NOROLLD            -YES
         B     RETURN             ELSE A NULL ENTRY
SUPPRESS DS    0H
         XC    UCMROUTC(4),UCMROUTC GOING NOWHERE,
         XC    UCMDESCD(4),UCMDESCD   ...TRASH IT
         B     RETURN
ROLL     DS    0H
         NC    UCMROUTC(2),=B'0111111111111111' ROUTCDE NOT 1
         NC    UCMDESCD(2),=B'1001111111011111' DESC NOT 2,3,11
         B     RETURN
NOROLL   DS    0H
         NC    UCMROUTC(2),=B'0111111111111111' ROUTCDE 1 OFF
         OC    UCMROUTC(2),=B'0100000000000000' ROUTCDE=(2,...)
         OC    UCMDESCD(2),=B'0100000000000000' DESC=(2,...)
         B     RETURN
NOROLLD  DS    0H
* SAME AS NOROLL BUT MSG IS DELETED WHEN TASK/ADDRESS SPACE TERMINATES
         NC    UCMROUTC(2),=B'0111111111111111' ROUTCDE 1 OFF
         OC    UCMROUTC(2),=B'0100000000000000' ROUTCDE=(2,...)
         OC    UCMDESCD(2),=B'0100001000000000' DESC=(2,7,...)
         B     RETURN
         TITLE 'IEECVXIT - CREATE AND PREPARE TO SCHEDULE SRB'
***********************************************************************
*                                                                     *
* CREATE AND SCHEDULE AN SRB HERE.  WORKAREA IS COPIED FROM           *
* SP250 (INVOKERS ADDRESS SPACE) TO SP245 (SQA).  THE ASVT IS         *
* SEARCHED FOR THE ASID OF THE STC "CMD1" AND THE SRB IS SCHEDULED    *
* TO THE FIRST READY TCB.                                             *
*                                                                     *
***********************************************************************
SCHEDULE DS    0H
         L     R1,CVTLOC        PTR CVT ADDRESS
         L     R1,0(R1)         CVT ADDRESS
         L     R1,12(R1)        ASCB ADDRESS
         MVC   $ASID,36(R1)     SAVE ASID FROM ASCB
         ST    R8,$MSG          SAVE TABLE ENTRY POINTER
       GETMAIN R,LV=WORKAL,SP=245   GET CORE FROM SP=245
         LR    R3,R1            SAVE AREA ADDRESS
         SPACE
***********************************************************************
*                                                                     *
* COPY THE WORKAREA TO SQA.                                           *
*                                                                     *
***********************************************************************
         MVC   0(WORKAL-L'WTOAREA,R3),WORKAREA  COPY WORKAREA
         PUSH  USING
         DROP  R10
         USING WORKAREA,R3
         XC    SRB(SRBSIZE),SRB  ZERO OUT OUR SRB
         MVC   SRBID,=CL4'SRB '  MOVE IN THE SRB IDENTIFER
         L     R2,CVTLOC         PTR CVT ADDRESS
         S     R2,=A(CVTMAP-CVTFIX) BACKUP TO PREFIX
         EJECT
***********************************************************************
*                                                                     *
* GET ASVT FROM CVT.                                                  *
*                                                                     *
***********************************************************************
FNDASCB  DS    0H
         DROP  R2
         USING CVTFIX,R2
         L     R2,CVTASVT        POINT TO ASVT
         DROP  R2
         USING ASVT,R2
         LA    R14,ASVTENTY-4    POINT TO FIRST ENTRY MINUS FOUR
         L     R15,ASVTMAXU      LOAD NUMBER OF ASID'S
         SPACE
***********************************************************************
*                                                                     *
* LOOK FOR CMD1 ADDRESS SPACE.                                        *
*                                                                     *
***********************************************************************
$NEXT    DS    0H
         BCTR  R15,R0            DECR NUMBER OF ASIDS
         LTR   R15,R15           LAST TIME ?
         BZ    RETURN            RETURN ASID NOT FOUND
         LA    R14,4(R14)        POINT TO NEXT ASVTENTY ENTRY
         USING ASVTENTY,R14
         ICM   R2,15,ASVTENTY    LOAD ASCB ADDR
         BM    $NEXT             BR IF NOT ACTIVE
         DROP  R2
         USING ASCB,R2
         ICM   R7,15,ASCBJBNS    LOAD TASK NAME
         BZ    CHKJOB            YES. CHECK JOB NAME
         CLC   =CL8'INIT',0(R7)  IS IT 'INIT' ?
         BNE   CHKIT             NO. SEE WHAT THE TASK NAME IS
CHKJOB   ICM   R7,15,ASCBJBNI    JOB NAME ADDR
         BZ    $NEXT
CHKIT    CLC   0(8,R7),=CL8'CMD1   ' IS THIS THE JOBNAME
         BNE   $NEXT             NO, LOOK AT NEXT ASCB
         ST    R2,SRBASCB        CMD1'S ASCB
         TITLE 'IEECVXIT - SCHEDULE SRB TO CMD1'
***********************************************************************
*                                                                     *
* SET UP SRB FOR SCHEDULING.                                          *
*                                                                     *
***********************************************************************
         MVC   SRBPTCB,ASCBTNEW  SAVE FIRST READY TCB ADDRESS
         MVC   SRBPASID,ASCBASID SAVE CMD1'S ASID
         DROP  R2
         LA    R1,IEECVSRB       SRB ENTRY POINT
         ST    R1,SRBEP          SAVE IN SRB
         LA    R1,SRBCLEAN       SRB ABNORMAL TERMINATION ROUTINE
         ST    R1,SRBRMTR        SAVE IN SRB
         ST    R3,SRBPARM        SEND WORK AREA AS THE PARAMETER
         SPACE
      SCHEDULE SRB=SRB,SCOPE=LOCAL
         SPACE
         POP   USING
         B     RETURN            ALL DONE SRB IS SCHEDULED
         SPACE
***********************************************************************
*                                                                     *
*        AN SRB ABEND.                                                *
*                                                                     *
***********************************************************************
SRBCLEAN BR    R14               SRB ERROR ROUTINE
         TITLE 'IEECVXIT - RETURN TO MCS'
***********************************************************************
*                                                                     *
*        FREE THE WORKAREA IN THE INVOKERS ADDRESS SPACE AND          *
*        RETURN TO MCS.                                               *
*                                                                     *
***********************************************************************
RETURN   DS    0H     RETURN TO MCS
         LR    R1,R13                  GET AREA ADDRESS
         L     R13,4(,R13)             POINT TO OLD SAVEAREA
      FREEMAIN R,A=(1),LV=WORKAL,SP=250 INVOKE FREEMAIN
         LM    R14,R12,12(R13)         RESTORE ENTRY REGISTERS
         LA    R15,0                   SET RETURN CODE
         BR    R14                     RETURN TO MCS
         SPACE
         LTORG
         DROP
         TITLE 'IEECVXIT - BUILD IRB AND IQE FOR CMD1'
***********************************************************************
*                                                                     *
*        THIS IS THE SRB CODE.                                        *
*                                                                     *
***********************************************************************
IEECVSRB DS    0H
         BALR  R10,R0         ESTABLISH BASE REGISTER
         USING *,R10
         LR    R7,R14         SAVE SRB RETURN ADDRESS
         LR    R2,R1          GET PARAMETER ADDRESS
         USING WORKAREA,R2
         SPACE
$GLOCK SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,MODE=UNCOND,                 C
               RELATED=$FLOCK
         SPACE
         L     R4,SRBPTCB       GET TCB ADDRESS FOR CIRB
         SPACE
         CIRB  EP=IEECVIRB,KEY=SUPR,MODE=PP,BRANCH=YES,SVAREA=YES,     C
               STAB=(DYN),RETIQE=NO,WKAREA=30
         SPACE
         LR    R3,R1            ADDRESS OF IRB IN R3
         USING RBBASIC,R3
         L     R1,RBNEXAV       ADDRESS OF IQE IN R1
         USING IQESECT,R1
         ST    R3,IQEIRB        ADDRESS OF IRB IN IQEIRB
         ST    R2,IQEPARAM      PARM LIST FOR USER
         ST    R4,IQETCB        ADDRESS OF TCB IN IQETCB
         LCR   R1,R1            COMPLEMENT REGISTER R1
         L     R12,CVTLOC       CVTADDRESS
         S     R12,=A(CVTMAP-CVTFIX) BACK UP TO PREFIX
         USING CVTFIX,R12
         EJECT
***********************************************************************
*                                                                     *
*        CALL THE STAGE TWO EXIT EFFECTOR                             *
*                                                                     *
***********************************************************************
         L     R14,CVT0EF00     ADDR OF STAGE TWO EXIT EFFECTOR
         BALR  R14,R14          GO SCHEDULE THE IQE
         DROP  R12
         SPACE
***********************************************************************
*                                                                     *
*        FREE THE LOCKS AND RETURN TO POST                            *
*                                                                     *
***********************************************************************
         SPACE
$FLOCK SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,RELATED=$GLOCK
         SPACE
         LR    R14,R7           RESTORE REG 14.
         BR    R14              RETURN TO DISPACHER
         DROP
         TITLE 'IEECVXIT - DISPATCH AN IRB TO CMD1'
***********************************************************************
*                                                                     *
*        IRB TO BE SCHEDULED.                                         *
*                                                                     *
***********************************************************************
IEECVIRB SAVE  (14,12)       SAVE CALLERS REGISTERS
         LR    R12,R15       SETUP BASE REGISTER
         USING IEECVIRB,R12  GET NEW BASE REGISTER
         LR    R10,R1        SAVE ENTRY CODE
         USING WORKAREA,R10  GET ADDRESSABILITY
         ST    R13,SAVE1+4   SETUP
         ST    R10,8(R13)         SAVEAREA
         LR    R13,R10                 CHAIN
         SPACE
        STIMER WAIT,BINTVL=TWOSEC GIVE A LITTLE DELAY
         SPACE
         XC    MGCR(128),MGCR CLEAR MESSAGE AREA
         SR    R9,R9         CLEAR WORK REG9
         L     R8,$MSG       ENTRY LIST POINTER TO REG8
         USING IEECVUSR,R8   AND ADDRESS IT
         LR    R7,R8         AND INTO R7
         IC    R9,IEECVSNG TEXT MSG LENGTH TO REG9
         LA    R7,L'IEECVHDR(R9,R8) AND BUMP TO START OF TEXT
         TM    IEECVFLG,IEECVACT AN ACTION COMMAND?
         BO    GIVECMD       - YES, ISSUE IT
         TM    IEECVFLG,IEECVRPL IS A REPLY NEEDED?
         BO    AUTOREP       - YES, GIVE IT
         B     $EXIT         SHOULDNT HAPPEN
         TITLE 'IEECVXIT - AUTOMATIC REPLIES SET UP HERE'
***********************************************************************
*                                                                     *
*        PREPARE AUTO REPLY; REG7 @ REPLY TEXT, REG8 @ IEECVUSR       *
*                                                                     *
***********************************************************************
AUTOREP  DS    0H
         LA    R3,5          ALLOW 5 COMPLETE SEARCHES THRU THE RQE'S
FNDRQE   DS    0H
         LA    R2,20         SEARCH COUNTER - TWENTY RQE'S MAX
         L     R1,CVTLOC     PLACE THE CVT ADDRESS IN REG. 1
         L     R1,100(R1)    ADDRESS OF UCM
         L     R1,28(R1)     FIRST RQE ADDRESS
GETRQE   DS    0H
         LA    R1,0(R1)      ZERO HIGH ORDER BYTE
         CLC   $ASID,24(R1)  DOES THE ASID IN THE RQE MATCH $ASID ?
         BNE   NEXTRQE       NO GET NEXT RQE
         L     R6,20(R1)     USERS ECB ADDRESS FROM RQE
         LA    R6,0(R6)      CLEAR NOISE
         C     R6,$ECB       COMPARE THE ECB IN THE RQE WITH $ECB
         BE    FOUND         GREAT IT'S OURS !!
NEXTRQE  DS    0H
         L     R1,0(R1)      GET ADDRESS OF NEXT RQE
         LTR   R1,R1         WAS IT THE LAST RQE ?
         BZ    ENDLOOK       YES, LAST RQE - TEST WAIT COUNTER
         BCT   R2,GETRQE     EXAMINE RQE FIELDS
ENDLOOK  DS    0H
        STIMER WAIT,BINTVL=TWOSEC WAIT FOR MCS TO CATCH UP
         BCT   R3,FNDRQE     WAIT A FEW SECONDS AND TRY AGAIN
         B     $EXIT         NEVER FOUND THE RQE - LEAVE
         SPACE
FOUND    DS    0H
         SR    R9,R9                CLEAR WORK REG9
         IC    R9,IEECVANG          TEXT LENGTH TO REG9
         BCTR  R9,0                 DECREMENT FOR EXECUTE
         EX    R9,MVCMSG            AND MOVE TEXT
         MVC   MGCR+6(2),4(R1)      MOVE IN REPLY NUMBER FROM RQE
         LA    R9,5(,R9)            ADJUST MSG LENGTH
         STH   R9,MGCR              AND SAVE FOR SVC 34
         OI    MGCR+2,X'80'         INSTALL MCS FLAG
         LA    R1,MGCR              SETUP FOR SVC 34
         SR    R0,R0                SHOW SYSTEM ISSUE
         MGCR  (1)                  AND ISSUE
         B     $EXIT                   THEN EXIT
         EJECT
***********************************************************************
*                                                                     *
*        INITIATE AN ACTION BASED ON SOME CONSOLE TRAFFIC.            *
*                                                                     *
***********************************************************************
GIVECMD  DS    0H
         SR    R9,R9                CLEAR WORK REG9
         IC    R9,IEECVANG          TEXT LENGTH TO REG9
         BCTR  R9,0                 DECREMENT FOR EXECUTE
         EX    R9,MVCMSG            AND MOVE TEXT
         LA    R9,5(,R9)            ADJUST MSG LENGTH
         STH   R9,MGCR              AND SAVE FOR SVC 34
         LA    R1,MGCR              SETUP FOR SVC 34
         SR    R0,R0                SHOW SYSTEM ISSUE
         MGCR  (1)                  AND ISSUE
         B     $EXIT                - LEAVE
MVCMSG   MVC   MGCR+4(0),0(R7)      EXECUTED MVC
$EXIT    DS    0H
         LR    R1,R13            GET ADDRESS OF WORKAREA
         L     R13,SAVE1+4       ADDRESS OF PREVIOUS SAVE AREA
      FREEMAIN R,A=(1),LV=WORKAL,SP=245   FREE UP GOTTEN CORE
         LM    R14,R12,12(R13)   RESTORE THE REGISTERS
         LA    R15,0(0,0)        SET RC=0
         BR    R14               RETURN TO THE DISPACHER
         SPACE
         LTORG
         TITLE 'IEECVXIT - WORKAREA AND DSECTS'
TWOSEC   DC    A(2*100)
         SPACE
WORKAREA DSECT
SAVE1    DS    18F                     SAVE AREA
$ECB     DS    A                       WTOR ECB ADDRESS
$MSG     DS    A                       TABLE ENTRY POINTER
$ASID    DS    H                       ISSUERS ASID
         DS    H
SCRATCH  DS    0F'0',CL130
         ORG   SCRATCH
SRB      DS    0A
SRBID    DS    CL4                      EBCDIC ACRONYM   FOR SRB
SRBFLNK  DS    A                        FORWARD CHAIN FIELD
SRBASCB  DS    A                        PTR TO ASCB OF ADDRESS SPACE
*                                         SRB IS TO BE DISPATCHED TO
SRBFLC   DS    0CL8                     SRB AREA MOVED TO LOW CORE
SRBCPAFF DS    BL2                      CPU AFFINITY MASK
SRBPASID DS    H                        PURGEDQ ASID IDENTIFIER
SRBPTCB  DS    A                        PURGEDQ TCB IDENTIFIER
SRBEP    DS    A                        ENTRY POINT OF ROUTINE
SRBRMTR  DS    A                        ADDRESS OF RESOURCE MGR RTN
SRBPARM  DS    A                        USER PARAMETER
SRBSAVE  DS    A                        SAVE AREA POINTER
SRBPKF   DS    B                        PROTECT KEY INDICATION
SRBPRIOR DS    0B                       PRIORITY LEVEL INDIC
SRBFLGS  DS    B                        SRB OPTION FLAGS
SRBLLREQ EQU   X'80'                    LOCAL LOCK REQUIRED
SRBLLHLD EQU   X'40'                    LOCAL LOCK HELD
SRBFRREQ EQU   X'20'                    FRR REQUESTED
SRBFRRCL EQU   X'10'                    CLEAR FRR PARM AREA
SRBSUSP  EQU   X'08'                    SUSPENDED SRB ONLY ON FOR
*                                         SSRB
SRBPNONQ EQU   X'04'                    NON QUIESCABLE SRB
SRBRESV3 EQU   X'02'                    RESERVED FLAG
SRBRESV4 EQU   X'01'                    RESERVED FLAG
SRBPSYS  EQU   X'00'                    SYSTEM PRIORITY LEVEL
SRBHLHI  DS    BL1                      INDICATION OF SUSPEND LOCKS
*                                         HELD AT SRB SUSPENSION
         DS    BL1                      RESERVED
SRBFRRA  DS    A                        FRR ROUTINE ADDRESS
SRBEND   DS    0H                       END OF SRB
SRBSIZE  EQU   SRBEND-SRB               SIZE OF SRB
WTOAREA  EQU   SRB                      WORK AREA FOR WTO -MUST BE LAST
         ORG   SRB
MGCR     DS    A(0),CL124               FOR MGCR SVC 34 P-LIST
         ORG
WORKEND  EQU  *
WORKAL   EQU  WORKEND-WORKAREA
       TITLE 'IEECVXIT - DSECTS FOR MAPPING'
       DSACCVTV                    USER CVT PREFIX
       SPACE
       IEECUCM FORMAT=NEW          UCM MAP
       SPACE
       IEECVUSR                    USER TABLE MAP
       SPACE
       IHAASVT                     ASVT MAP
       SPACE
       IHAPSA                      PSA MAP
       SPACE
       IHARB                       SRB MAP
       SPACE
       IHAIQE                      IQE MAP
       SPACE
       IHAASCB                     ASCB MAP
       SPACE
       CVT   DSECT=YES,PREFIX=YES  CVT MAP
       END
/*
//*
//IEWL1 EXEC PGM=IEWL,
// PARM='LIST,RENT,REUS,XREF,LET'
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1),DCB=BUFNO=1
//USEROBJ  DD DISP=SHR,DSN=LOCL.USEROBJ
//SYSLMOD  DD DISP=SHR,DSN=SYS1.LPALIB,UNIT=3330-1,VOL=SER=RES1N4
//SYSLIN   DD *
     ORDER IEAVVWTO(P)
     ORDER IEAVMWTO
     ORDER IGC0203E
     ORDER IEECVXIT(P)
     INCLUDE USEROBJ(IEECVXIT)
     INCLUDE SYSLMOD(IGC0003E)
     ENTRY IEAVVWTO
     NAME IGC0003E(R)
/*
//
