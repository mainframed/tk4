MODULES-----------------------------------------------------------------

1) DSACTASK
Started as CMD1 to manage the operation of DYNABLDL  (dynamic BLDL)  and
to provide a task for IEECVXIT to dispatch an IRB against  when  console
traffic indicates a reply is needed or an action  is  required.  Locates
the DLACMD00 module in the linklist, loads it into CSA and anchors it in
CVTVERID at DSACTCMD for accessing by both IEECVXIT when running in  the
console message invoker's address space and by the IRB dispatched by the
SRB when running in DSACTASK's  address  space.  Communicates  with  the
operator via the MODIFY operator command.
     P CMD1              terminate DSACTASK
     F CMD1,STOP         terminate DSACTASK
     F CMD1,DISPLAY      show DYNABLDL status
     F CMD1,BLDL         stops/starts DYNABLDL to refresh dynamic BLDL
     F CMD1,MOD=modname  refreshes single module in dynamic BLDL list
     F CMD1,AUTOREPLY    refreshes DLACMDxx table in CSA
     F CMD1,AUTOREPLY=yy refreshes DLACMDxx table with DLACMDxx table

2) DYNABLDL
Adapted from CBT tape V-242, modified to include support for UZ70861 and
to provide for single module refresh without having to stop and restart.
Invoked and managed by DSACTASK.

3) IEAVNP99
User NIP exit.  Enabled by creating an entry in the  NIP  initialization
module table in IEAVNIPM.  Validates O/S checkpoint volumes and initial-
izes the CVTVERID user CVT prefix.  Uses NIPDPMLB to read  SYS1.PARMLIB.
Valid replies during IPL are:
     R 00,yes            to enable Autoreply facility
     R 00,no             to disable Autoreply facility
     R 00,yy             to override default DLACMDxx with DLACMDyy
A reply of "no" will disable Autoreply for the life of the IPL.  A reply
of "xx" will override the PARM= of the starting procedure.  By  replying
with a non-existent "xx",  Autoreply will come up enabled but  inactive.
Note that if you have any sort of OEM SP assist code, the application of
the TCMD100 function should cause an SMP/E regression report on IEAVNIPM
where the cross memory instructions are usually replaced with NOPR's.

4) IEECVXIT
User MCS exit.  Used to suppress messages, change messages to roll mode,
schedule automatic replies to  WTOR's  or  initiate  some  action  if  a
specific message occurs.  Replies  and  other  commands  are  issued  by
scheduling an SRB which builds an IRB and IQE and invokes the Stage  Two
Exit Effector to dispatch the IRB in DSACTASK's address space.  Be  sure
to change SMP/E's JCLIN for  IGC0003E  to  specify  page  alignment  for
IEECVXIT (see member JCLIN).

5) IEFDB401
Dynamic allocation exit.  Finds the DLASIP00 CDE location  via  CVTVERID
and checks caller against a list of authorized  users  of  datasets  and
volumes.  The first invocation locates the CDE for DLASIP00 and  anchors
it in the CVT user prefix area.  Only the version of DLASIP00 loaded  by
NIP will be used by the exit.  That is the reason for anchoring the  CDE
rather than the table entry point.  If DLASIP00 is  not  loaded,  normal
dynamic allocation is allowed.

6) NIPDPMLB
A macro that expands into inline code  that  reads  SYS1.PARMLIB  during
user NIP exit processing.  It requires entry  by  BALR 14,15  and  based
addressing to the NVT and CVT.  Register 11 is  destroyed,  register  15
contains the return code and register 1 points to the record  just  read
or contains zeros if the read was not  successful.  Register  15  return
codes are:
       0    successful read, register 1 points to the record
       4    BLDL failed, the SYS1.PARMLIB member could not be found
       8    read failed, the NIP read ECB was not posted "7F"

7) IND$DAIR
A user replacement for IKJDAIR when invoked by IND$FILE, the IBM PC File
Transfer Program (5665-311, FMID HFX1102).  It writes user SMF type  253
records and a ROUTCDE=(9) message if an illegal dynamic  allocation  re-
quest is made. IND$FILE runs in conjunction with the 3270 emulation code
which is supported by the IBM PC people and  is  OCO.  Intercepting  the
IKJDAIR links seemed to be the safest and easiest way  to  gain  a  user
exit with a standard interface.

8) PLIBSMF0
Essentially the same as IND$FILE but written for the FTTSO file transfer
product (Digital Communications Associates, Inc.) which uses the IRMA PC
board.  This is written as a front-end since no real user  exit  exists.
This is also OCO and is written in PL/1 and assembler.

9) FCBSCAN
A utility that reports on FCB images in SYS1.IMAGELIB.  The FCB macro is
an adaptation of the old in-line $FCB macro from HASP 3.1.

TABLES------------------------------------------------------------------

1) DLACMD00
A table of console messages which require some  automatic  action.  Read
by IEECVXIT. Built by coding the IEECVENT macro, assembling and  linking
into a linklist library.  The module is loaded into CSA by DSACTASK  and
must be linkedited authorized with re-entrant attributes. This table can
be refreshed by issuing a modify command to CMD1.

2) DLASIP00
A table of authorized users of specific volumes and  datasets.  Read  by
IEFDB401.  Built by coding the REQUESTR and RESOURCE macros,  assembling
and linking into SYS1.LPALIB.  The CDE is  anchored  in  CVTVERID.  This
table requires an IPL with CLPA option to refresh.

SYS1.PARMLIB------------------------------------------------------------

1) CHKPOINT
Identifies volume(s) to manage as  containing  OS  checkpoint  datasets.
This can also be used to force a volume offline at IPL without doing  an
I/O gen.

SYS1.PROCLIB------------------------------------------------------------

1) CMD1
Procedure to start DSACTASK.  PARM= specifies an override to the default
DLACMD00 table name.

2) FCBPROC
Procedure to assemble and linkedit FCB macros into SYS1.IMAGELIB.

MACROS------------------------------------------------------------------

         IEAVNP99 DSACTASK IEECVXIT DLACMD00 DLASIP00 IEFDB401 DYNABLDL
#DIE ............................................................. X ..
#ENTER ........................................................... X ..
#PUT ............................................................. X ..
#REGS ............................................................ X ..
#SORT ............................................................ X ..
#TEST ............................................................ X ..
@ZAP ............................................................. X ..
DSACCVTV ... X ...... X ...... X ........................ X ...........
FCB ...................................................................
IEAPPNIP ... X ........................................................
IEECVENT .............................. X .............................
IEECVUSR ..................... X ......................................
IEFZBMAP ................................................ X ...........
IHAIQE ....................... X ......................................
IHANVT ..... X ........................................................
IHASVC ........................................................... X ..
NIPDPMLB ... X ........................................................
REQUESTR ........................................ X ...................
RESOURCE ........................................ X ...................

MISCELLANEOUS-----------------------------------------------------------

1) IEAVNIPM is zapped to create the user NIP exit entry.
2) IEAVVWTO is zapped so that IEECVXIT sees all console messages.
3) IHASVC, @ZAP, #REGS, #TEST, #PUT, #ENTER, #DIE and #SORT are unchang-
   ed from the CBT V-242 tape.
4) This code is written for MVS/370 but should adapt easily to XA.

All of this code is currently running in our installation.  The relevant
environment is a 3084QX normally in partition mode running MVS/SP 1.3.3,
JES2 1.3.4, ACF/VTAM V2R1, TSO/E V1R2. Our current CB/IPO is 85C.

Questions and/or problems can  be  addressed to:

                   Marvin C Cruzan
                   Defense Logistics Agency
                   DLA Systems Automation Center
                   DSAC-TSG
                   P O Box P1605
                   Columbus, OH  43216-5002

Telephone: (614) 238-9409; (Autovon) 850-9409
SHARE Installation code: DLO
