//NTS0991A JOB (0991,TAA),'* IND$DAIR *',MSGCLASS=X,CLASS=6,
//  NOTIFY=NTS0991,MSGLEVEL=(1,1)
//IEFUTL1 EXEC PGM=IEV90,
// PARM='XREF,LIST,LINECOUNT(55)),DECK'
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DISP=SHR,DSN=LOCL.USEROBJ(IND$DAIR)
//SYSLIB   DD DISP=SHR,DSN=SYS1.SMPMTS
//         DD DISP=SHR,DSN=LOCL.USERSRC
//         DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.HASPSRC,UNIT=3350,VOL=SER=DLB85A
//         DD DISP=SHR,DSN=SYS1.AMODGEN,UNIT=3350,VOL=SER=DLB85A
//         DD DISP=SHR,DSN=SYS1.AGENLIB,UNIT=3350,VOL=SER=DLB85A
//         DD DISP=SHR,DSN=SYS1.ATSOMAC,UNIT=3350,VOL=SER=DLB85A
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT2   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT3   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSIN    DD *
         TITLE 'IND$DAIR - LINKAGE AND HOUSEKEEPING'
IND$DAIR CSECT
         SPACE 3
***********************************************************************
*                                                                     *
*  MODULE CHARACTERISTICS:                                            *
*        RE-ENTRANT, RESIDENT IN PLPA AND IN MLPA                     *
*                                                                     *
***********************************************************************
*                                                                     *
*  NOTE:                                                              *
*  EXPECT A RETURN CODE OF 4 ON ASSEMBLY BECAUSE OF ALIGNMENT.        *
*                                                                     *
***********************************************************************
*                                                                     *
*  BE SURE IND$FILE AND IKJEFT25 ARE AC(1). ZAP THE LINKS TO IKJDAIR  *
*  IN IND$FILE TO IND$FILE.                                           *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS MODULE INTERCEPTS IKJDAIR IN CSECT INDFXFER IN LOAD MODULE    *
*  IND$FILE OF THE FILE TRANSFER PRODUCT (HFX1102).  IT IS INTENDED   *
*  TO PROVIDE AN AUDIT TRAIL FOR UP/DOWN LOADING TO/FROM THE MAIN-    *
*  FRAME VIA THE 3270PC CONTROL PROGRAM. AN SMF TYPE 253 RECORD IS    *
*  WRITTEN AND A ROUTE CODE 9 MESSAGE IS SENT TO SYSLOG.              *
*                                                                     *
*  ON ENTRY, REG1 POINTS TO THE DYNAMIC ALLOCATION PARAMETER LIST:    *
*        DAPL:                                                        *
*        @ UPT  - TSO USER PROFILE TABLE                              *
*        @ ECT  - TSO ENVIRONMENT CONTROL TABLE                       *
*        @ ECB  - DYNAMIC ALLOCATION EVENT CONTROL BLOCK              *
*        @ PSCB - TSO PROTECTED STEP CONTROL BLOCK                    *
*        @ DAPB - TSO DYNAMIC ALLOCATION PARAMETER BLOCK              *
*                                                                     *
*  ON EXIT:                                                           *
*        DAIR CODE 00 IF ALLOCATION IS ACCEPTABLE.                    *
*        DAIR CODE 34 IF REQUESTED BY NON-TSO USER.                   *
*        DAIR CODE 34 IF SMF CANNOT RECORD THE EVENT.                 *
*                                                                     *
*  MACROS USED:                                                       *
*        MODESET, TIME, SMFWTM, LINK                                  *
*                                                                     *
*  SVC 10 INVOKED DIRECTLY FOR GETMAIN/FREEMAIN                       *
*                                                                     *
*  MAPPING MACROS USED:                                               *
*        CVT, IKJDAPL, IKJPSCB, IJKDAP08, IEESMCA, IHAASCB, IKJTSB    *
*                                                                     *
*  USER SMF TYPE 253 RECORD WRITTEN                                   *
*                                                                     *
*  UPDATE LOG:                                                        *
*        16SEP85 - ORIGINALLY WRITTEN - M. CRUZAN.                    *
*        19DEC85 - TESTED AND ACCEPTED FOR ALL SITES - M CRUZAN.      *
*                                                                     *
*  A NOTE ON TESTING; IND$FILE CP BEHAVES DIFFERENTLY IF INVOKED IN   *
*  A TSO ENVIRONMENT FROM A 3270 THAN IF INVOKED FROM A PC RUNNING    *
*  3270PC SOFTWARE.  TESTING IS ADEQUATE ONLY IF DONE USING A PC.     *
*                                                                     *
*                          MARV CRUZAN                                *
*                          DEFENSE LOGISTICS AGENCY                   *
*                          DLA SYSTEMS AUTOMATION CENTER              *
*                          DSAC-TSG                                   *
*                          P O BOX P1605                              *
*                          COLUMBUS, OH  43216-5002                   *
*                          (614) 238-9409                             *
*                                                                     *
***********************************************************************
R0       EQU   0               LINKAGE REGISTER
R1       EQU   1               LINKAGE REGISTER
R2       EQU   2               WORK
R3       EQU   3               POINTER TO ASCB/TSB
R4       EQU   4               POINTER TO CVT/SMCA
R5       EQU   5               POINTER TO PSCB
R6       EQU   6               POINTER TO DAPB, MAPPED AS DAP08
R7       EQU   7               RETURN CODE SETUP REGISTER
M7       EQU   7               ICM MASK IF 24 BIT ADDRESSES
R8       EQU   8               WORK
R9       EQU   9               WORK
R10      EQU   10              SMF RECORD GETMAINED WORK AREA
R11      EQU   11              SAVE REG1 AROUND CALLS
R12      EQU   12              STANDARD BASE REGISTER
R13      EQU   13              SAVE AREA POINTER
R14      EQU   14              RETURN REGISTER
R15      EQU   15              LINKAGE REGISTER/RETURN CODE
M15      EQU   15              ICM MASK IF 31 BIT ADDRESSES
         EJECT
         USING IND$DAIR,R15    ENTRY ADDRESSABILITY
         B     DAIR00          BRANCH AROUND ID
         DC    C'IND$DAIR.&SYSDATE..&SYSTIME' IDENTIFIER
DAIR00   DS    0H
         STM   R14,R12,12(R13) SAVE CALLERS REGS
         DROP  R15             DROP ENTRY BASE REGISTER
         LR    R12,R15         LOAD BASE REGISTER
         USING IND$DAIR,R12    ESTABLISH ADDRESSABILITY
         LA    R0,72           LOAD LENGTH FOR SAVE AREA
         BAL   R1,*+4          INDICATE GETMAIN
         SVC   10              ISSUE GETMAIN FOR MY SAVE AREA
         ST    R13,4(R1)       STORE BACKWARD POINTER
         ST    R1,8(R13)       STORE FORWARD POINTER
         LR    R13,R1          POINT TO MY SAVE AREA
         L     R1,4(R13)       RESTORE REG 1
         L     R1,24(R1)       FOR PARAMETER LIST
         XR    R15,R15         ZERO REG15 FOR RETURN CODE
         TITLE 'IND$DAIR - SCREEN ALLOCATION REQUEST'
***********************************************************************
*                                                                     *
*    THE CALLERS ALLOCATION REQUEST IS SCREENED HERE. CSECT INDFXFER  *
*    IN LOAD MODULE IND$FILE (FILE TRANSFER PROGRAM) IS OCO AND       *
*    DISASSEMBLY INDICATES ONLY ALLOCATION CODES 08 AND 24 (HEX) ARE  *
*    CURRENTLY BEING USED. ALSO POSSIBLE FOR ALLOCATION ARE 0C AND    *
*    1C. REF: SC28-1136-1 SECTION 10                                  *
*                                                                     *
***********************************************************************
         SPACE 3
         LR    R11,R1      SAVE DAPL FOR IKJDAIR CALL
         USING DAPL,R1     ADDRESS PARAMETER LIST
         L     R5,DAPLPSCB     GET PSCB POINTER
         USING PSCB,R5     ADDRESS PROTECTED STEP CONTROL BLOCK
         L     R6,DAPLDAPB     GET DAPB POINTER
         USING DAPB08,R6   ADDRESS DYNAMIC ALLOCATION PARAMETER BLOCK
         L     R4,16           GET THE CVT
         USING CVT,R4          AND ADDRESS IT
         L     R4,CVTSMCA      FIND SMCA
         DROP  R4
         USING SMCABASE,R4     AND ADDRESS IT
         DROP  R1
***********************************************************************
*                                                                     *
* DAPL CODES: X'00' TEST FOR DS/DDNAME                                *
*             X'04' TEST FOR DSNAME                                   *
*             X'08' ALLOCATE BY DSNAME                                *
*             X'0C' CONCATENATE BY DDNAME                             *
*             X'10' DECONCATENATE BY DDNAME                           *
*             X'14' SEARCH FOR DSNAME QUALIFIERS                      *
*             X'18' FREE DATASET                                      *
*             X'1C' ALLOCATE DDNAME TO TERMINAL                       *
*             X'24' ALLOCATE BY DDNAME/DSNAME                         *
*             X'28' PERFORM LIST OF OPERATIONS                        *
*             X'2C' MARK DATASET NOT IN USE                           *
*             X'30' ALLOCATE SYSOUT                                   *
*             X'34' ASSOCIATE DCB CHARACTERISTICS WITH A NAME         *
* FROM: GUIDE TO WRITING A TMP.                                       *
* DONT CONFUSE THESE CODES WITH SVC99 CODES.                          *
*                                                                     *
***********************************************************************
         LH    R8,DA08CD       ALLOCATION REQUEST TYPE
         CH    R8,=H'8'        REQUEST DSNAME?
         BE    ALLOC0          - YES
         CH    R8,=H'36'       REQUEST DSNAME OR DDNAME?
         BE    ALLOC0          - YES
         B     PASS3           OTHERWISE PASS ON THROUGH
         TITLE 'IND$FILE - CHECK USERS REQUEST'
ALLOC0   DS    0H
***********************************************************************
*                                                                     *
*    IF YOU WANT TO RESTRICT THE USER TO SPECIFIC "STAGING" DATASETS  *
*    YOU CAN DO IT HERE. THIS BECAME QUITE A POLITICAL ISSUE WITH US  *
*    AND MANAGEMENT DELETED THE REQUIREMENT. HOWEVER I STILL GOT THE  *
*    LAST WORD BECAUSE I CAN CATCH ILLEGAL ALLOCATIONS IN IEFDB401.   *
*                                                                     *
***********************************************************************
         SPACE 3
         L     R3,548          GET CALLERS ASCB
         USING ASCB,R3         AND ADDRESS
         ICM   R3,M15,ASCBTSB  GET CALLERS TSB
         BNZ   ALLOC1
         B     EXIT1           EXIT WITH RC=34 IF NOT TSO USER
         DROP  R3
         USING TSB,R3          AND ADDRESS
         TITLE 'IND$DAIR - FAIL USER IF WRONG REQUEST'
ALLOC1   DS    0H
***********************************************************************
*                                                                     *
*    IF THE CALLER DOES NOT SPECIFY THE CORRECT DATA SET NAMES, HE    *
*    WILL BE FAILED WITH A DAIR RETURN CODE OF 52 AFTER A MESSAGE     *
*    HAS BEEN WRITTEN TO THE DSAC-LS SECURITY CONSOLE.                *
*                                                                     *
***********************************************************************
         SPACE 3
         LA    R0,WTOLEN       GET WTO LENGTH
         BAL   R1,*+4          INDICATE GETMAIN
         SVC   10              GETMAIN FOR WTO
         LR    R9,R1           SHIFT TO REG9
         LA    R7,WTOLEN
         BCTR  R7,0
         EX    7,MVCWTO        MOVE WTO LIST PARAMETERS
         TIME  DEC
         SRL   R0,4            SHIFT TO 0HHMMSST
         O     R0,=F'15'       OR TO 0HHMMSSF
         ST    R0,60(R9)       STORE TIMESTAMP
         UNPK  68(7,R9),60(4,R9) UNPACK HHMMSS
         MVC   35(2,R9),69(R9)     MOVE IN HOURS
         MVC   38(2,R9),71(R9)       MOVE IN MINUTES
         MVC   41(2,R9),73(R9)         MOVE IN SECONDS
         ST    R1,60(R9)       STORE DATESTAMP
         UNPK  44(5,R9),61(3,R9) AND UNPACK YYDDD
       MODESET KEY=ZERO,MODE=SUP
         MVC   21(8,R9),TSBTRMID MOVE IN LOGICAL TERMINAL NAME
       MODESET KEY=NZERO,MODE=PROB
         MVC   13(7,R9),PSCBUSER MOVE USERID TO MSG
         MVC   30(4,R9),SMCASID MOVE SYSID TO MSG
         L     R8,DA08PDSN     GET CALLERS DSNAME
         MVC   50(8,R9),DA08MNM MOVE MEMBER NAME TO MSG
         MVC   59(44,R9),2(R8) MOVE USER DATASET NAME TO MSG
         WTO   MF=(E,(9))
         LA    R0,WTOLEN       GET WTO WORKAREA LENGTH
         LR    R1,R9           AND POINT TO IT
         SVC   10              AND FREE IT
         TITLE 'IND$DAIR - BUILD SMF RECORD BEFORE LINK'
         DS    0H
***********************************************************************
*                                                                     *
*   THE PRELIMINARY PART OF THE SMF RECORD IS BUILT HERE.             *
*                                                                     *
***********************************************************************
         SPACE 3
         USING SMFFDREC,R10    ADDRESS GETMAINED AREA
         LA    R0,SMFLENTH     LENGTH FOR SMF RECORD WORK AREA
         BAL   R1,*+4          INDICATE GETMAIN
         SVC   10              ISSUE GETMAIN FOR SMF RECORD WORK AREA
         LR    R10,R1          SHIFT WORK AREA TO REG10
         LR    R1,R11          RESTORE REG1
         XC    SMFFDREC,SMFFDREC AND CLEAR IT
         LA    R2,SMFLENTH     GET SMF REC LENGTH
         STH   R2,SMFFDLEN     MOVE IN LENGTH
         MVI   SMFFDFLG,B'00000010' SHOW VS2 SYSTEM
         MVI   SMFFDRTY,SMFFDTYP INSTALL USER SMF RECORD TYPE
         MVC   SMFFDSID,SMCASID MOVE IN THE SYSTEM ID
         MVC   SMFFDUID,PSCBUSER MOVE IN USERID
         MVI   SMFFDUID+7,BLANK EIGTH CHARACTER IS ALWAYS BLANK
       MODESET KEY=ZERO,MODE=SUP
         MVC   SMFFDTID,TSBTRMID INSTALL LOGICAL TERMINAL NAME
       MODESET KEY=NZERO,MODE=PROB
         MVC   SMFFDALC,DA08CD INDICATE TYPE ALLOCATION
         MVC   SMFFDDSN,2(R8)   INSTALL NAME
         MVC   SMFFDMNM,DA08MNM MOVE IN MEMBER NAME
         TITLE 'IND$DAIR - PASS LINK THROUGH'
PASS1    DS    0H              FORCE CERTAIN ALLOCATION PARAMETERS
***********************************************************************
*                                                                     *
*    THE SMF RECORD IS TIME/DATE STAMPED AND WRITTEN TO THE SMF       *
*    BUFFER.  BUT IF THE SMF RECORD CANNOT BE WRITTEN (IF RECORD-     *
*    ING IS OFF, ETC.) THE ALLOCATION IS FAILED WITH RC52.            *
*                                                                     *
***********************************************************************
         SPACE 3
PASS2    DS    0H              ACCEPT USER ALLOCATION PARAMETERS
         LR    R1,R11          RESTORE REG1 WITH DAPL POINTER
         LINK  EP=IKJDAIR      LINK TO ALLOCATION INTERFACE
         LR    R7,R15          SAVE RETURN CODE FOR PASS-THROUGH
         LTR   R15,R15         CHECK RETURN
         BNZ   EXIT            AND RETURN IF SOMEBODY ELSE DISALLOWED
       MODESET KEY=ZERO        GET INTO KEY ZERO
         TIME  BIN,ZONE=LT     GET DATE/TIMESTAMP FOR SMF RECORD
         STM   R0,R1,SMFFDTME  AND INSTALL IN SMF RECORD
        SMFWTM (R10)           WRITE AUDIT TRAIL
         LTR   R15,R15         TEST SMF COMPLETION
         BNZ   EXIT1           AND EXIT WITH ERROR IF NOT DONE
       MODESET KEY=NZERO       RESTORE CALLER KEY
         LA    R0,SMFLENTH     GET SMF WORK AREA LENGTH
         LR    R1,R10          LOAD RECORD ADDRESS FOR FREEMAIN
         DROP  R10
         SVC   10              AND FREE IT
         LR    R1,R11          RESTORE CALLER PARAMETER REG
         LA    R7,DAIRF000     SHOW GOOD COMPLETION
         B     EXIT            AND LEAVE
         TITLE 'IND$DAIR - EXIT CODE'
PASS3    DS    0H              COME HERE USUALLY FOR DEALLOCATION
         LR    R1,R11          RESTORE REG1 WITH DAPL POINTER
         LINK  EP=IKJDAIR      LINK TO ALLOCATION INTERFACE
         LR    R7,R15          SAVE RETURN CODE FOR PASS-THROUGH
         B     EXIT            AND LEAVE
EXIT1    DS    0H
         LA    R7,DAIRF052     LOAD UP WITH DAIR FAIL CODE
         B     EXIT
EXIT     DS    0H
         LR    R1,R13          POINT TO MY SAVE AREA
         L     R13,4(R13)      POINT TO CALLERS SAVE AREA
         ST    R7,16(R13)      INSTALL RETURN CODE IN SAVE AREA
         LA    R0,72           LOAD LENGTH
         SVC   10              ISSUE FREEMAIN
         LM    R14,R12,12(R13) RESTORE REGISTERS
         BR    R14             AND RETURN TO CALLER
         TITLE 'IND$DAIR - CONSTANTS/EQUATES'
         LTORG
WTOLIST  WTO   'IND0001I UUUUUUU,TTTTTTTT,SSSS,HH:MM:SS,YYDDD,MMMMMMMM,C
               DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD',          C
               ROUTCDE=(9),DESC=(4),MF=L
WTOLEN   EQU   *-WTOLIST
         SPACE 3
MVCWTO   MVC   0(0,R9),WTOLIST
         SPACE 3
SMFFDTYP EQU   253               SMF USER RECORD TYPE
BLANK    EQU   X'40'
SMFLENTH EQU   SMFFDEND-SMFFDLEN EQU TO REC LENGTH
DAIRF000 EQU   0                 USER DAIR GOOD CODE
DAIRF052 EQU   52                USER DAIR FAIL CODE
         TITLE 'IND$DAIR - DSECTS AND DOCUMENTATION'
SMFFDREC DSECT UNUSED PARTS FOR OFFSET COMPATIBILITY WITH TYPE 14/15
SMFFDLEN DS    XL2             RECORD LENGTH (RDW)
SMFFDSEG DS    XL2             SEGMENT DESCRIPTOR FOR VBS
SMFFDFLG DS    XL1             FLAG FOR VS2=02
SMFFDRTY DS    XL1             RECORD TYPE IS 253
SMFFDTME DS    XL4             FROM TIME MACRO
SMFFDDTE DS    XL4             FROM TIME MACRO
SMFFDSID DS    XL4             SYSTEM ID FROM SMCA
         DS    XL8             NOT USED
SMFFDTID DS    XL8             USER LOGICAL TERMINAL ID FTOM TSB
SMFFDUID DS    XL8             USER ID FROM PSCB
SMFFDALC DS    XL2             ALLOCATION TYPE FROM DAPB
         DS    XL24            NOT USED
SMFFDDSN DS    XL44            DSNAME FROM DAPB
SMFFDMNM DS    XL8             MEMBER NAME FROM DAPB
SMFFDEND EQU   *
         EJECT
         IKJDAPL
         EJECT
         IKJPSCB
         EJECT
         IKJDAP08
         EJECT
         IEESMCA
         EJECT
         IHAASCB
         EJECT
         IKJTSB
         EJECT
         CVT   DSECT=YES
         TITLE 'IND$DAIR - FOR DOCUMENTATION ONLY'
         IKJDAP0C
         EJECT
         IKJDAP1C
         EJECT
         IKJDAP24
         END
/*
//*
//IEWL EXEC PGM=IEWL,
// PARM='LIST,NCAL,XREF,LET'
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1),DCB=BUFNO=1
//USEROBJ  DD DISP=SHR,DSN=LOCL.USEROBJ
//SYSLMOD  DD DISP=SHR,DSN=LOCL.CMDLIB
//SYSLIN   DD *
   INCLUDE USEROBJ(IND$DAIR)
   ENTRY IND$DAIR
   SETCODE AC(1)
 NAME  IND$DAIR(R)
/*
//
