FCBSCAN  CSECT
R0       EQU   0               LINKAGE REGISTER
R1       EQU   1               LINKAGE REGISTER
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12              STANDARD BASE REGISTER
R13      EQU   13              SAVE AREA POINTER
R14      EQU   14              RETURN REGISTER
R15      EQU   15              LINKAGE REGISTER
         USING FCBSCAN,R15     ENTRY ADDRESSABILITY
         B     FCBSCAN0        BRANCH AROUND ID
         DC    AL1(L'IDENT)    IDENTIFIER LENGTH
IDENT    DC    C'FCBSCAN.&SYSDATE..&SYSTIME..&SYSPARM' IDENTIFIER
FCBSCAN0 STM  R14,R12,12(R13) SAVE CALLERS REGS
         DROP  R15             DROP ENTRY BASE REGISTER
         LR    R12,R15         LOAD BASE REGISTER
         USING FCBSCAN,R12     ESTABLISH ADDRESSABILITY
         LA    R0,72           LOAD LENGTH FOR SAVE AREA
         BAL   R1,*+4          INDICATE GETMAIN
         SVC   10              ISSUE GETMAIN FOR MY SAVE AREA
         ST    R13,4(R1)       STORE BACKWARD POINTER
         ST    R1,8(R13)       STORE FORWARD POINTER
         LR    R13,R1          POINT TO MY SAVE AREA
         L     R1,4(R13)       RESTORE REG 1
         L     R1,24(R1)       FOR PARAMETER LIST
         EJECT
PARMSAVE DS    0H
         L     R1,0(R1)
         ST    R1,PARM             SAVE PARM IF ANY
         OPEN  (LIBRARY,,DIRECTRY,,SYSPRINT,(OUTPUT))
         L     R1,PARM  RETRIEVE PARM POINTER
         LH    R2,0(R1)  GET PARM LENGTH
         LTR   R2,R2    AND TEST IT
         BZ    ALLFCB   DEFAULT TO "ALL" IF NO PARM
         CLC   2(3,R1),=C'ALL'      OR REQUEST IS
         BE    ALLFCB             FOR ALL MEMBERS
         CH    R2,=H'4'   ELSE CHECK PARM LENGTH
         BH    PARMERR  CANNOT BE LONGER THAN FOUR CHARACTERS
         B     ONEFCB              PROCESS IT
         EJECT
ALLFCB   DS    0H
         OPEN  (DIRECTRY,(INPUT))
         OI    RELOOP+1,X'F0'
ALLFCB01 DS    0H
         BAL   R10,DIRGET
         MVC   FCBIMAGE,0(R3)
         CLC   FCBIMAGE(4),=C'FCB2'
         BNE   ALLFCB01
         B     ONEFCB00
         EJECT
ONEFCB   DS    0H
         BCTR  R2,0  DECREMENT FOR EX INSTR
         EX    R2,MVCPARM  AND MOVE IMAGE NAME
         B     ONEFCB00
MVCPARM  MVC   FCBIMAGE+4(0),2(R1)
ONEFCB00 DS    0H
         MVC   HDR1+2(8),FCBIMAGE
         LOAD  EPLOC=FCBIMAGE,DCB=LIBRARY
         LTR   R15,R15  TEST RETURN
         BNZ   FCBERR
         LR    R3,R0     SAVE ENTRY POINT
         LR    R5,R1  LENGTH
         LA    R4,1      INCREMENT
         BCTR  R5,0     DECREMENT FOR BXLE
         LA    R5,0(R3,R5)   CALCULATE LENGTH
         NI    FLAGS,JES
*                                                    3203       3211
         TM    0(R3),X'80'  DEFAULT FLAG           1ST BYTE   1ST BYTE
         BZ    ONEFCB01
         MVC   HDR1+11(4),=CL4' '
ONEFCB01 DS    0H
         LA    R3,1(R3)   BUMP TO NEXT BYTE
         IC    R6,0(R3)    IMAGE LENGTH            2ND BYTE   2ND BYTE
         STC   R6,ILENGTH
         LA    R3,1(R3)   BUMP TO NEXT BYTE
         TM    0(R3),X'80' INDEX/CHAN 1            3RD BYTE   3RD BYTE
         BZ    ONEFCB02
         IC    R6,0(R3)
         N     R6,MASK1
         STC   R6,IINDEX
         IC    R6,ILENGTH
         BCTR  R6,0    DECREMENT FOR 3211
         STC   R6,ILENGTH
         MVC   DEVICE,=C'3211'
         OI    FLAGS,D3211
         LA    R3,1(R3)
         B     ONEFCB03
ONEFCB02 DS    0H
         MVC   DEVICE,=C'3203'
         OI    FLAGS,D3203
ONEFCB03 DS    0H
         XR    R6,R6
         IC    R6,ILENGTH
         CVD   R6,DBLEWORD
         OI    DBLEWORD+7,X'0F'
         MVC   HDR2+19(3),=X'212020'
         ED    HDR2+19(3),DBLEWORD+6
         TM    0(R3),X'10'                          3RD BYTE  4TH BYTE
         BZ    ONEFCB04
         MVI   HDR3+19,C'8'
         B     ONEFCB05
ONEFCB04 DS    0H
         MVI   HDR3+19,C'6'
ONEFCB05 DS    0H
         CLC   DEVICE,=C'3203'
         BE    ONEFCB08
         XR    R6,R6
         IC    R6,IINDEX
         CVD   R6,DBLEWORD
         OI    DBLEWORD+7,X'0F'
         MVC   HDR4+9(3),=X'212020'
         ED    HDR4+9(3),DBLEWORD+6
ONEFCB08 DS    0H
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   HDR1+37(4),DEVICE
         MVC   PRINTLIN(L'HDR1),HDR1
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'HDR2),HDR2
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'HDR3),HDR3
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         CLC   DEVICE,=C'3203'
         BE    ONEFCB09
         MVC   PRINTLIN(L'HDR4),HDR4
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
ONEFCB09 DS    0H
         MVC   PRINTLIN(L'HDR5),HDR5
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'HDR6),HDR6
         PUT   SYSPRINT,PRINTLIN
         LA    R7,1
         XR    R6,R6    ZERO WORK REGISTER
         IC    R6,ILENGTH  GET IMAGE LENGTH
         BCTR  R6,0
         LA    R5,0(R6,R3)   AND INDEX TO END
         IC    R6,0(R3)   GET FIRST LINE BYTE
         N     R6,MASK      AND STRIP FLAGS
         CH    R6,=H'1'    IS IT CHANNEL ONE?
         BNE   ONEFCB15      NO
         OI    FLAGS,CH1LN1 ELSE SHOW SUITABLE FOR JES2
ONEFCB10 DS    0H
         TM    0(R3),X'10'  LOOK FOR END-OF-SHEET FLAG
         BZ    ONEFCB12
         OI    FLAGS,EOSFLG   AND MARK IT IF FOUND
ONEFCB12 DS    0H
         IC    R6,0(R3)   GET NEXT LINE BYTE
         N     R6,MASK      AND STRIP FLAGS
ONEFCB15 DS    0H
         LTR   R6,R6        IS THERE A CHANNEL
         BNZ   ONEFCB20   IF YES - PROCESS IT
         LA    R7,1(R7)       ELSE BUMP COUNTER
         BXLE  R3,R4,ONEFCB10   AND GO FOR NEXT ONE
         B     ONEFCB90     EXIT AT END
ONEFCB20 DS    0H
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN+2(11),=X'2120204040404040212020'
ONEFCB21 DS    0H
         N     R6,MASK
         CVD   R6,DBLEWORD
         OI    DBLEWORD+7,X'0F'
         ED    PRINTLIN+2(3),DBLEWORD+6
         CVD   R7,DBLEWORD
         OI    DBLEWORD+7,X'0F'
         ED    PRINTLIN+10(3),DBLEWORD+6
         PUT   SYSPRINT,PRINTLIN
         LA    R7,1(R7)
         BXLE  R3,R4,ONEFCB10
ONEFCB90 DS    0H
         BCTR  R3,0     BACK UP TO END OF IMAGE
         TM    0(R3),X'0F'   DOES LAST LINE HAVE A CHANNEL?
         BZ    ONEFCB92        NO - CHECK DEVICE TYPE
         OI    FLAGS,EOSCHN      ELSE SHOW CHANNEL PRESENT
ONEFCB92 DS    0H
         TM    FLAGS,D3203    IS THE DEVICE A 3203?
         BZ    ONEFCB94         NO
         TM    FLAGS,EOSFLG       ELSE IS THERE AN END-OF-SHEET?
         BO    ONEFCB93        YES - IMAGE IS OK - CHECK FOR CHANNEL
         MVI   PRINTLIN,C' '          ELSE PUT ERROR MESSAGE
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG2),MSG2
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '          ELSE PUT ERROR MESSAGE
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG3A),MSG3A
         PUT   SYSPRINT,PRINTLIN
ONEFCB93 DS    0H
         TM    FLAGS,EOSCHN      IS THERE ALSO A CHANNEL?
         BZ    ONEFCB94           NO - IMAGE IS OK
         MVI   PRINTLIN,C' '       ELSE PUT AN ERROR MESSAGE
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG2),MSG2
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG3B),MSG3B
         PUT   SYSPRINT,PRINTLIN
ONEFCB94 DS    0H
         TM    FLAGS,CH1LN1
         BO    RETURN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG1),MSG1
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,C' '
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN
         MVC   PRINTLIN(L'MSG1A),MSG1A
         PUT   SYSPRINT,PRINTLIN
         B     RETURN
         EJECT
DIRGET   DS    0H
         XR    R4,R4
DIRGET0  B     NOPREAD             FIRST TIME THRU
         L     R3,R3SAVE
         C     R3,USEBYTES         ANY REMAINING BYTES
         BL    DIRGETA             YES - PROCESS
NOPREAD  NI    DIRGET0+1,X'00'
         GET   DIRECTRY,DIRBLOCK   ELSE GET ANOTHER BLOCK
         LA    R3,DIRBLOCK         START OF BLOCK
         LH    R4,0(R3)            NUMBER OF BYTES USED
         LA    R4,0(R3,R4)         CALCULATE END OF BLOCK
         ST    R4,USEBYTES         AND SAVE IT
         LA    R3,2(R3)            PUSH R3 PAST BYTE COUNT
DIRGETA  DS    0H
         CLC   0(8,R3),=X'FFFFFFFFFFFFFFFF'
         BE    EOFDIRCT
         IC    R4,11(R3)           GET LENGTH OF ENTRY
         SLL   R4,27               AND CONVERT TO
         SRL   R4,26               A BYTE COUNT
         LA    R4,12(R4,R3)        AND PUSH R4 PAST IT
         ST    R4,R3SAVE           AND SAVE IT FOR NEXT TIME
         BR    R10                 AND RETURN TO CALLER
PRINTR   DS    0H
         PUT   SYSPRINT,HDR1       ELSE REPEAT HEADER
         MVI   PRINTLIN,C'-'       SET TO TRIPLE SPACE
PRINTX   DS    0H
         PUT   SYSPRINT,PRINTLIN
         MVI   PRINTLIN,X'40'      BLANK FIRST CHARACTER
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN AND PROPAGATE IT
         BR    R10                 THEN RETURN TO CALLER
         SPACE 2
         EJECT
EOFDIRCT DS    0H
         MVI   PRINTLIN,X'40'      BLANK FIRST CHARACTER
         MVC   PRINTLIN+1(L'PRINTLIN-1),PRINTLIN AND PROPAGATE IT
         MVC   PRINTLIN(24),=C'- ALL FCB IMAGES PRINTED'
         PUT   SYSPRINT,PRINTLIN
         B     RETURN01
FCBERR   DS    0H
         MVC   PRINTLIN(27),=C'1 UNABLE TO ACCESS XXXXXXXX'
         MVC   PRINTLIN+19(8),FCBIMAGE
         PUT   SYSPRINT,PRINTLIN
         B     RETURN
PARMERR  DS    0H
         MVC   PRINTLIN(25),=C'1 INVALID OR MISSING PARM'
         PUT   SYSPRINT,PRINTLIN
RETURN   DS    0H
RELOOP   NOP   ALLFCB01
RETURN01 DS    0H
         CLOSE (SYSPRINT,,LIBRARY,,DIRECTRY)
         LR    R1,R13          POINT TO MY SAVE AREA
         L     R13,4(R13)      POINT TO CALLERS SAVE AREA
         LA    R0,72           LOAD LENGTH
         SVC   10              ISSUE FREEMAIN
         LM    R14,R12,12(R13) RESTORE REGISTERS
         MVI   12(R13),X'FF'   INDICATE RETURN
         LA    R15,0           SET RETURN CODE
         BR    R14             AND RETURN TO CALLER
         EJECT
DEVICE   DC    CL4' '
IINDEX   DC    AL1(0)
ILENGTH  DC    AL1(0)
PRINTLIN DS    0CL133
CC       DC    X'40'
MSGLINE  DC    CL132' '
PARM     DC    F'0'
         SPACE 2
CONDCD   DC    F'0'
R3SAVE   DC    F'0'
USEBYTES DC    F'0'
DIRBLOCK DS    CL256
         DS    0F
HDR1     DC    C'1 MMMMMMMM NON-DEFAULT FCB IMAGE FOR DDDD'
HDR2     DC    C'  LINES PER PAGE = XXX'
HDR3     DC    C'  LINES PER INCH = X'
HDR4     DC    C'  INDEX =XXX PRINT POSITIONS'
HDR5     DC    C'  CHAN    LINE'
HDR6     DC    C'+ ____    ____'
HDR7     DC    C'  3203 END-OF-SHEET IN LAST LINE'
CHLN     DC    C'   XX     XXX'
MSG1     DC    C'- THIS IMAGE CANNOT BE USED UNDER JES2.'
MSG1A    DC    C'  JES2 REQUIRES A CHANNEL 1 IN LINE 1.'
MSG2     DC    C'- THIS IMAGE CANNOT BE USED WITH A 3203 DEVICE.'
MSG3A    DC    C'  LAST LINE DOES NOT HAVE END-OF SHEET X''10''.'
MSG3B    DC    C'  CHANNEL IN LAST LINE MAY CAUSE RUNAWAY FORMS.'
DBLEWORD DC    D'0'
FCBIMAGE DC    CL8'FCB2XXXX'
MASK     DC    X'0000000F'
MASK1    DC    X'0000003F'
FCBEP    DC    A(0)
FCBLN    DC    A(0)
FCBEND   DC    A(0)
WORK1    DC    XL3'000000'
FLAGS    DC    AL1(0)
JES      EQU   B'00000001'     INTENDED TO RUN UNDER JES2
D3203    EQU   B'00000010'     A 3203 PRINTER
D3211    EQU   B'00000100'     A 3211 PRINTER
CH1LN1   EQU   B'00001000'     A CHANNEL 1 IN LINE 1
EOSCHN   EQU   B'00010000'     ANY CHANNEL IN THE LAST LINE
EOSFLG   EQU   B'00100000'     END-OF-SHEET IN LAST LINE
         TITLE 'FCBSCAN - DCBS'
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=(PM),RECFM=FBA,DSORG=PS,          C
               LRECL=133,BLKSIZE=133
         EJECT
LIBRARY  DCB   DDNAME=SYSLIB,MACRF=(R),DSORG=PO,RECFM=U
         EJECT
DIRECTRY DCB   DDNAME=SYSLIB,MACRF=(GM),RECFM=F,LRECL=256,BLKSIZE=256, C
               DSORG=PS,EODAD=EOFDIRCT
         TITLE 'FCBSCAN - LITERAL POOL'
         LTORG
         END
