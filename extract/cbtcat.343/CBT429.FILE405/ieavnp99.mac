//NTS0991A JOB (0991,TSG),'* IEAVNP99 *',MSGCLASS=X,CLASS=A,
//  NOTIFY=NTS0991,MSGLEVEL=(1,1)
//IEFUTL1 EXEC PGM=IEV90,
// PARM='XREF(SHORT),LIST,LINECOUNT(55),DECK,SYSPARM(85A)'
//SYSPRINT DD SYSOUT=*
//SYSPUNCH DD DISP=SHR,DSN=LOCL.USEROBJ(IEAVNP99)
//SYSLIB   DD DISP=SHR,DSN=SYS1.SMPMTS
//         DD DISP=SHR,DSN=LOCL.USERSRC
//         DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYS1.AMODGEN,UNIT=3350,VOL=SER=DLB85A
//         DD DISP=SHR,DSN=SYS1.AGENLIB,UNIT=3350,VOL=SER=DLB85A
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT2   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSUT3   DD UNIT=VIO,SPACE=(CYL,(1,1)),DCB=BUFNO=1
//SYSIN    DD *
         PRINT ON
         TITLE 'IEAVNP99 - USER NIP EXIT'
IEAVNP99 CSECT
R0       EQU   0               LINKAGE REGISTER
R1       EQU   1               LINKAGE REGISTER
R2       EQU   2               NVT BASE
R3       EQU   3               CVT AT ENTRY, ADJUSTED TO CVT PREFIX
R4       EQU   4               CVTVERID BASE ADDRESSED AS CVTVER
R5       EQU   5               NOT USED
R6       EQU   6               NOT USED
R7       EQU   7               NOT USED
M7       EQU   7               ICM MASK
R8       EQU   8               NOT USED
R9       EQU   9               NOT USED
R10      EQU   10              NOT USED
R11      EQU   11              NOT USED
R12      EQU   12              STANDARD BASE REGISTER
R13      EQU   13              SAVE AREA POINTER
R14      EQU   14              RETURN REGISTER
R15      EQU   15              LINKAGE REGISTER/RETURN CODE
M15      EQU   15              ICM MASK
         EJECT
***********************************************************************
*/*                                                                   *
*/* ROUTINE -                                                         *
*/*     SYS1.NUCLEUS(IEAVNP99)                                        *
*/*                                                                   *
*/* FUNCTIONS -                                                       *
*/*   1. THIS ROUTINE IS CALLED DURING NIP PROCESSING TO CREATE AND   *
*/*      UPDATE THE CVTVERID FIELD OF THE CVT.                        *
*/*      IEAVNP99 ISSUES A WTOR TO THE OPERATOR DURING NIP TO DETER-  *
*/*      MINE IF THE IEECVXIT SHOULD BE TAKEN TO PROVIDE VARIOUS      *
*/*      AUTOMATIC RESPONSES TO CONSOLE MESSAGES.                     *
*/*                                                                   *
*/*   2. THIS MODULE READS THE CHKPOINT MEMBER OF SYS1.PARMLIB AND    *
*/*      UPDATES THE UCB OF A SPECIFIED VOLUME IN THAT LIST TO MARK   *
*/*      IT AS NOT SHARED.                                            *
*/*      IF THE VOLUME IS INDICATED AS NOT NATIVE TO THE SYSTEM, THE  *
*/*      VOLUME IS ALSO TAKEN OFF-LINE.                               *
*/*      VOLUMES WILL NOT BE ACCEPTED IF THEY:                        *
*/*                                                                   *
*/*         -  ARE THE SYSTEM RESIDENT VOLUME                         *
*/*         -  CONTAIN THE SYSTEM MASTER CATALOG                      *
*/*         -  CONTAIN ACTIVE PAGE/SWAP DATA SETS                     *
*/*                                                                   *
*/*      IF THE CHKPOINT MEMBER IS NOT FOUND, MESSAGE DLA0003I IS     *
*/*      WRITTEN TO THE MASTER CONSOLE.                               *
*/*                                                                   *
*/* ADDITIONAL FUNCTIONS ARE PLANNED SUCH AS PICKING UP TASKS FROM    *
*/*   UTA235 THAT CAN BE PERFORMED AT NIP TIME. THESE MIGHT INCLUDE   *
*/*   SOME OF THE YES/NO INITIALIZATION FUNCTIONS.                    *
*/*                                                                   *
*/* CALLED BY -                                                       *
*/*     IEAVNIPM VIA BALR.                                            *
*/*                                                                   *
*/* CALLS TO -                                                        *
*/*     IEAVNPM2 VIA BALR FOR WTO/WTOR FUNCTIONS.                     *
*/*                                                                   *
*/* ATTRIBUTES -                                                      *
*/*     SUPERVISOR MODE                                               *
*/*     PSW KEY ZERO                                                  *
*/*     UNLOCKED (THUS ENABLED)                                       *
*/*     SINGLE THREADED                                               *
*/*                                                                   *
*/* INPUT -                                                           *
*/*     STANDARD NIP INTERFACE:                                       *
*/*     R2  - ADDRESS OF NVT                                          *
*/*     R3  - ADDRESS OF CVT                                          *
*/*     R13 - STD SAVEAREA                                            *
*/*     R14 - RETURN ADDRESS                                          *
*/*     R15 - ENTRY POINT ADDRESS                                     *
*/*                                                                   *
*/* MESSAGES ISSUED -                                                 *
*/*     DLA0000I REPLY YES/NO TO ENABLE/DISABLE AUTOREPLY             *
*/*     DLA0001I AUTOREPLIES ENABLED(DISABLED)                        *
*/*     DLA0002I CVTVERID INITIALIZED - CBIPO XXX                     *
*/*     DLA0003I CHKPOINT MEMBER NOT READ FROM SYS1.PARMLIB           *
*/*     DLA0004E I/O ERROR READING SYS1.PARMLIB                       *
*/*     DLA0005E CHKPOINT SYNTAX ERROR - EEEEEEEE - IGNORED           *
*/*     DLA0006I CHKPOINT VOLUME VVVVVV INELIGIBLE AND WILL BE IGNORED*
*/*     DLA0006I CHKPOINT VOLUME VVVVVV SPECIFIED BUT NOT FOUND       *
*/*     DLA0006I CHKPOINT VOLUME VVVVVV PROCESSED FOR CHECKPOINT      *
*/*     DLA0007E SIP TABLE NOT LOADED                                 *
*/*                                                                   *
*/* NOTES -                                                           *
*/*     STANDARD NIP CALLING SEQUENCES FOR NIP SERVICES ARE           *
*/*     OBSERVED.  NIP MACROS ARE NOT USED DUE TO THE GENERAL         *
*/*     UNAVAILABILITY OF THESE MACROS. CHECK MICROFICHE DATA AREAS.  *
*/*                                                                   *
*/*     A ZAP TO IEAVNIPM (THE NIP RIM SCHEDULER) IS REQUIRED TO      *
*/*     CAUSE THAT ROUTINE TO INVOKE THIS ROUTINE.  THE ORDER IN      *
*/*     WHICH THIS ROUTINE IS INTENDED TO BE INVOKED IS TOWARD THE    *
*/*     END OF RIM PROCESSING; THE EXACT SEQUENCE IS UNIMPORTANT.     *
*/*                                                                   *
*/*           ATTRIBUTES FOR IEAVNIPM RIM TABLE:                      *
*/*                 ##@@ WHERE:  ## IS IEAVNP##                       *
*/*                              @@ IS ATTRIBUTE BYTES                *
*/*                 ATTRIBUTE BYTES ARE:                              *
*/*                            F0F0 - A NO-OP, NO BLDL WILL BE DONE.  *
*/*                            F0F1 - MODULE IS REQUIRED AND A WAIT   *
*/*                                   STATE PSW WILL BE LOADED IF NOT *
*/*                                   FOUND.                          *
*/*                            F0F3 - MODULE IS OPTIONAL AND A MSG    *
*/*                                   WILL BE ISSUED IF NOT FOUND.    *
*/*                                                                   *
*/*                 .... .... .... ...0 DONT LOOK FOR MODULE          *
*/*                 .... .... .... ...1 LOOK FOR MODULE               *
*/*                 .... .... .... ..0. MODULE IS REQUIRED            *
*/*                 .... .... .... ..1. MODULE IS OPTIONAL            *
*/*                                                                   *
*/*               × NOTE THAT CONVENTION CALLS FOR:                 × *
*/*               ×                                                 × *
*/*               ×         1111 0000 1111 00.. (OR "F0F.")         × *
*/*               ×                                                 × *
*/*               × BUT THE ACTUAL TEST IS A TEST-UNDER-MASK OF THE × *
*/*               × TWO LOW ORDER BITS. SAFEST TO PLAY BY THE RULES.× *
*/*                                                                   *
*/*   EXAMPLE OF TABLE ENTRY:                                         *
*/*                                                                   *
*/*                F9F9F0F3 MEANS IEAVNP99 IS AN OPTIONAL MODULE      *
*/*                               AND A MESSAGE WILL BE WRITTEN TO    *
*/*                               THE CONSOLE IF THE MODULE IS NOT    *
*/*                               FOUND.                              *
*/*                F1F5F0F1 MEANS IEAVNP15 IA REQUIRED AND THE SYSTEM *
*/*                               WILL BE PLACED IN A WAIT STATE IF   *
*/*                               THE MODULE IS NOT FOUND.            *
*/*                F8F9F0F0 MEANS IEAVNP89 DOES NOT HAVE TO EXIST     *
*/*                               AND NO ATTEMPT WILL BE MADE TO      *
*/*                               LOCATE IT.                          *
*/*                                                                   *
*/*   CHANGE LOG:                                                     *
*/*                                                                   *
*/*       01 NOV 85 - ORIGINAL VERSION FROM CBT MODS TAPE - CRUZAN.   *
*/*       15 JAN 86 - MODIFIED TO READ SYS1.PARMLIB - CRUZAN.         *
*/*       05 FEB 86 - CORRECTED PROBLEM IN UCB LOOKUP - CRUZAN.       *
*/*       10 MAR 86 - MODIFIED TO ALLOW ALTERNATE COMMAND             *
*/*                   TABLES - CRUZAN.                                *
*/*                                                                   *
***********************************************************************
         EJECT
         USING IEAVNP99,R15    ENTRY ADDRESSABILITY
         B     START           BRANCH AROUND ID
         DC    C'IEAVNP99.&SYSDATE..&SYSTIME' IDENTIFIER
START    STM   R14,R12,12(R13) SAVE CALLERS REGS
         DROP  R15             DROP ENTRY BASE REGISTER
         LR    R12,R15         LOAD BASE REGISTER
         USING IEAVNP99,R12    ESTABLISH ADDRESSABILITY
         LA    R0,72           LOAD LENGTH FOR SAVE AREA
         BAL   R1,*+4          INDICATE GETMAIN
         SVC   10              ISSUE GETMAIN FOR MY SAVE AREA
         ST    R13,4(R1)       STORE BACKWARD POINTER
         ST    R1,8(R13)       STORE FORWARD POINTER
         LR    R13,R1          POINT TO MY SAVE AREA
         L     R1,4(R13)       RESTORE REG 1
         L     R1,24(R1)       FOR PARAMETER LIST
         XR    R15,R15         ZERO REG15 FOR RETURN CODE
         SPACE
*********************************************************************
*                                                                   *
*  SHOW NIP REGISTERS IN USE AND INITIALIZE CVTVERID                *
*                                                                   *
*********************************************************************
         USING NVT,R2          ADDRESS THE NVT
         S     R3,=A(CVTMAP-CVTFIX) BACK UP TO START OF PREFIX
         USING CVTFIX,R3       ADDRESS THE CVT PREFIX
         LA    R4,CVTVERID     GET THE USER RESERVED PART
         USING CVTVER,R4       AND ADDRESS IT
         XC    CVTVER(16),CVTVER   CLEAR IT
         MVC   DSACRLSE,=C'&SYSPARM' MOVE IN USER SYSTEM RELEASE ID
         OI    DSACFLG1,NP99AUTO  AUTOREPLY DEFAULT IS ON
         EJECT
*********************************************************************
*                                                                   *
*  AUTOREPLIES ENABLE/DISABLE SOLICITATION MESSAGE                  *
*                                                                   *
*********************************************************************
WRITMSG0 DS    0H
         MVI   MSGRPLY,C' '
         MVC   MSGRPLY+1(L'MSGRPLY-1),MSGRPLY INIT TO BLANKS
         XC    MSG0PLST+4(4),MSG0PLST+4 BE SURE ECB IS RESET
*     IEAPMNIP TYPE=WTOR,PARAM=MSG0PLST
         LA    R1,MSG0PLST     GET MESSAGE PLIST
         L     R15,NVTWTOR     WTOR ENTRY POINT
         BALR  R14,R15         AND CALL
         CLC   =C'YES',MSG0RPLY IS REPLY YES?
         BE    WRITMSG1        DEFAULT IS YES
         CLC   =X'7D',MSG0RPLY IS REPLY {RETURN}?
         BE    WRITMSG1        DEFAULT IS YES
         CLC   =C'NO',MSG0RPLY IS IT NO?
         BNE   WRITMSG0        DEFAULT IS YES
         MVC   MSG1TEXT,=C'DISABLED' ELSE SAY NO
         NI    DSACFLG1,255-NP99AUTO SHOW AUTOREPLIES DISABLED
         B     WRITMSG1
*********************************************************************
*                                                                   *
*  AUTOREPLIES ENABLE/DISENABLE STATUS MESSAGE                      *
*                                                                   *
*********************************************************************
WRITMSG1 DS    0H
*     IEAPMNIP TYPE=WTO,PARAM=MSG1STRT
         LA    R1,MSG1STRT     GET MESSAGE
         L     R15,NVTWTO      WTO ENTRY POINT
         BALR  R14,R15         AND CALL
         B     CVTINIT
         EJECT
*********************************************************************
*                                                                   *
*  CVTVERID INITIALIZED MESSAGE                                     *
*                                                                   *
*********************************************************************
CVTINIT  DS    0H
*     IEAPMNIP TYPE=WTO,PARAM=MSG2STRT
         LA    R1,MSG2STRT     GET MESSAGE
         L     R15,NVTWTO      WTO ENTRY POINT
         BALR  R14,R15         AND CALL
         B     PARMLIB READ
         EJECT
*********************************************************************
*                                                                   *
*  PARMLIB READ ROUTINE FOR CHKPOINT MEMBER                         *
*                                                                   *
*********************************************************************
PARMLIB  DS    0H
READMBR  DS    0H
         L     R1,NVTPARMA
         MVC   16(8,R1),=C'CHKPOINT'
       GETMAIN RC,LV=256
         ST    R1,VOLTABL     SAVE TOP OF TABLE
         ST    R1,CURPTR
         XC    0(256,R1),0(R1) AND CLEAR IT
READLOOP DS    0H
         LA    R15,NIPDPMLB   ENTRY TO READ ROUTINE
*                             REG11 WILL BE DESTROYED
         BALR  R14,R15        AND GO THERE
         LTR   R15,R15
         BNZ   READERR        DID SOMETHING GO WRONG?
         LR    R7,R1          SHIFT POINTER TO R7
CHKOWNR  DS    0H          IS THIS A NATIVE VOLUME?  "C" OR BLANK
         CLI   6(R7),X'C3'    CHECK
         BE    CHKCOMA            THE
         CLI   6(R7),X'40'          SYNTAX
         BNE   SYNTAXER       TRASH IT IF SEVEN IS NOT "C" OR BLANK
CHKCOMA  DS    0H          IS THIS THE LAST ENTRY?  COMMA OR BLANK
         CLI   7(R7),X'6B'    CHECK
         BE    MOVEVOL            THE
         CLI   7(R7),X'40'          SYNTAX
         BNE   SYNTAXER       TRASH IT IF EIGHT IS NOT COMMA OR BLANK
MOVEVOL  DS    0H
         L     R5,CURPTR
         MVC   0(7,R5),0(R7)  SAVE VOLSER AND FLAG
         CLI   7(R7),X'40'    LAST ONE?
         BE    ENDLOOP
         LA    R5,7(R5)       BUMP CURRENT POINTER
         ST    R5,CURPTR      AND SAVE IT
         B     READLOOP       GET ANOTHER
SYNTAXER DS    0H
         MVC   BADVOL0,0(R7)  AND PUT IT IN MESSAGE
*     IEAPMNIP TYPE=WTO,PARAM=MSG5STRT
         LA    R1,MSG5STRT
         L     R15,NVTWTO
         BALR  R14,R15
         CLI   7(R7),X'6B'    ANY MORE?
         BE    READLOOP         CONTINUE ONLY IF EIGHT IS A COMMA
         B     ENDLOOP          ELSE MAKE NO ASSUMPTIONS
READERR  DS    0H
         B     *(R15)
         B     ERR04           IF BAD RC FROM BLDL
         B     ERR08           ANY OTHER READ ERROR
ERR04    DS    0H                       MEMBER NOT FOUND
*     IEAPMNIP TYPE=WTO,PARAM=MSG3STRT
         LA    R1,MSG3STRT
         L     R15,NVTWTO
         BALR  R14,R15
         B     EXIT0           SET RETURN CODE = 0
ERR08    DS    0H                       READ I/O ERROR
*     IEAPMNIP TYPE=WTO,PARAM=MSG4STRT
         LA    R1,MSG4STRT
         L     R15,NVTWTO
         BALR  R14,R15
         B     EXIT8           SET RETURN CODE = 8
         EJECT
ENDLOOP  DS    0H
*********************************************************************
*                                                                   *
*  THE UCB LIST IS SEARCHED FOR VOLUME LIST ENTRIES.                *
*                                                                   *
*********************************************************************
         L     R7,CVTILK2     GET UCB LOOKUP TABLE
         ST    R7,UCBPTR      AND SAVE IT
UCBLOOP  DS    0H
         L     R7,UCBPTR               GET CURRENT TABLE POINTER
         LA    R8,2(,R7)               INCREMENT AND SAVE FOR
         ST    R8,UCBPTR               THE NEXT TIME THROUGH
         LH    R7,0(R7)                GET NEXT UCB POINTER
         SLL   R7,16                   BE SURE TO SHIFT
         SRL   R7,16                   OUT THE HIGH ORDER BITS
         LTR   R7,R7                   IS IT ZERO?
         BZ    UCBLOOP                 YES - TRY ANOTHER
         C     R7,=F'65535'            IS IT THE END?
         BE    UCBEND                  YES - EXIT
         USING UCB,R7
         TM    UCBTBYT3,UCB3DACC  IS IT DIRECT ACCESS DEVICE?
         BNO   UCBLOOP                    NO -
         TM    UCBTBYT2,UCBRVDEV  IS IT A REAL DEVICE?  0=REAL
         BO    UCBLOOP                    NO -          1=VIRTUAL
*
         LA    R8,7           TABLE WIDTH
         L     R9,CURPTR      LAST ENTRY
         L     R10,VOLTABL    FIRST ENTRY
SRCHLOOP DS    0H
         TM    6(R10),X'F0'   HAVE WE SEEN IT BEFORE?
         BO    SRCHLOP1       YES - SKIP IT
         CLC   UCBVOLI,0(R10) ON THE LIST?
         BE    VOLFOUND       YES
SRCHLOP1 DS    0H
         BXLE  R10,R8,SRCHLOOP ELSE GO BACK
         B     UCBLOOP        UCB NOT FOUND ON LIST
VOLFOUND DS    0H
         TM    UCBSTAT,UCBSYSR
         BO    NOTALLOW       NOT THE SYSTEM RESIDENT VOLUME
         TM    UCBSTAB,UCBPGFL+UCBBNUL
         BNZ   NOTALLOW       NOT A PAGE/SWAP OR THE MASTER CATALOG
ALLOW1   DS    0H
*
         NI    UCBTBYT2,255-UCBRR   TURN OFF SHARE BIT
*
         CLI   6(R10),X'C3'        IS THE VOLUME NATIVE?
         BE    ALLOW2                  YES
*
         MVI   UCBJBNR,UCBDUC UNIT CHECK AT IPL
         NI    UCBFL5,255-(UCBDCC+UCBENVRD)
         NI    UCBSTAT,255-UCBONLI TAKE OFFLINE
         MVI   UCBCHM1,UCBSPA+UCBPTH1 NO PATH
         MVI   UCBFLC,UCBIVRR INTERVENTION REQUIRED
         XC    UCBVTOC(10),UCBVTOC NO VTOC OR VOLSER
*
ALLOW2   DS    0H
         MVI   6(R10),X'FF'   MARK VOLUME AS ACCEPTED
         B     SRCHLOP1          AND GET ANOTHER VOLUME
*
NOTALLOW DS    0H
         MVI   6(R10),X'FE'   MARK VOLUME AS NOT ACCEPTED
         B     SRCHLOP1          AND GET ANOTHER VOLUME
         EJECT
*********************************************************************
*                                                                   *
*  INELIGIBLE ENTRIES ARE LISTED AT THE CONSOLE.                    *
*                                                                   *
*********************************************************************
UCBEND   DS    0H
         LA    R8,7           TABLE WIDTH
         L     R9,CURPTR      LAST ENTRY
         L     R10,VOLTABL    FIRST ENTRY
LISTLOOP DS    0H
         CLI   6(R10),X'FE'   WAS VOLUME UNACCEPTABLE?
         BE    BADFOUND       YES - PUT OUT A MESSAGE
         CLI   6(R10),X'FF'   WAS VOLUME ACCEPTABLE?
         BE    GOODFOND       YES - PUT OUT A MESSAGE
*              IF A UCB WAS NOT FOUND FOR A
*              SPECIFIED VOLUME FALL THRU
*              AND TELL THE OPERATOR
         MVC   MISSVOL,0(R10)    LIST MISSING VOLSER
*     IEAPMNIP TYPE=WTO,PARAM=MSG7STRT
         LA    R1,MSG7STRT
         L     R15,NVTWTO
         BALR  R14,R15
LSTLOOP  DS    0H
         BXLE  R10,R8,LISTLOOP ELSE GO BACK
         B     LOOPEXIT       NOT HERE
BADFOUND DS    0H
         MVC   BADVOL1,0(R10)    LIST INELIGIBLE VOLSERS
*     IEAPMNIP TYPE=WTO,PARAM=MSG6STRT
         LA    R1,MSG6STRT
         L     R15,NVTWTO
         BALR  R14,R15
         B     LSTLOOP
GOODFOND DS    0H
         MVC   GOODVOL,0(R10)    LIST ELIGIBLE VOLSERS
*     IEAPMNIP TYPE=WTO,PARAM=MSG8STRT
         LA    R1,MSG8STRT
         L     R15,NVTWTO
         BALR  R14,R15
         B     LSTLOOP
*
LOOPEXIT DS    0H
         B     EXIT0
*
         EJECT
*********************************************************************
*                                                                   *
*  EXIT LINKAGE                                                     *
*                                                                   *
*********************************************************************
EXIT12   LA    R5,12          SET RC=12
         B     EXIT
EXIT8    LA    R5,8           SET RC=8
         B     EXIT
EXIT4    LA    R5,4           SET RC=4
         B     EXIT
EXIT0    LA    R5,0           SET RC=0
         B     EXIT
EXIT     DS    0H
         L     R1,VOLTABL      FREE THE WORK AREA
         LTR   R1,R1           IF ONE WAS OBTAINED
         BZ    EXITR
      FREEMAIN R,LV=256,A=(1)
EXITR    DS    0H
         LR    R1,R13          POINT TO MY SAVE AREA
         L     R13,4(R13)      POINT TO CALLERS SAVE AREA
         ST    R5,16(R13)      INSTALL RETURN CODE IN SAVE AREA
         LA    R0,72           LOAD LENGTH
         SVC   10              ISSUE FREEMAIN
         LM    R14,R12,12(R13) RESTORE REGISTERS
         BR    R14             AND RETURN TO CALLER
         TITLE 'IEAVNP99 - SYS1.PARMLIB READ ROUTINE'
*********************************************************************
*                                                                   *
*  THIS MACRO PROVIDES STANDARDIZED ACCESS TO SYS1.PARMLIB          *
*  DURING NIP PROCESSING. IT ESSENTIALLY DUPLICATES THE             *
*  UNDISTRIBUTED IBM CODE BUT WITHOUT ERROR RECOVERY. PLEASE        *
*  BE CAREFUL.                                                      *
*                                                                   *
*********************************************************************
         SPACE
      NIPDPMLB GENERATES INLINE CODE TO READ SYS1.PARMLIB.
         TITLE 'IEAVNP99 - WTO MESSAGES'
*********************************************************************
*                                                                   *
*  WTO/WTOR MESSAGES.                                               *
*                                                                   *
*********************************************************************
         SPACE 3
*MSG0PLST IEAPMNIP TYPE=PLIST,MSGST=MSG0STRT,RMSGL=3,RMSGST=MSGRPLY
MSG0PLST DC    A(MSGRPLY)               REPLY AREA
         DC    A(0)                     REPLY ECB
         DC    AL2(L'MSG0RPLY)          REPLY AREA LENGTH
         DC    AL1(0,0)                 NIP WTOR FLAGS
         DC    A(MSG0STRT)              POINTER TO MESSAGE HEADER
         SPACE 2
*MSG0STRT IEAPMNIP TYPE=HEADER,MSGST=MSG0STRT,MSGEND=MSG000IE
MSG0STRT DC    AL2(MSG000IE-MSG0STRT,0) MSG LENGTH/FLAGS
MSG000IS DC    C'DLA0000I REPLY YES/NO TO '
         DC    C'ENABLE/DISABLE AUTOREPLY'
MSG000IE EQU   *
         SPACE 2
MSGRPLY  DC    CL80' '                  WTOR REPLY AREA
         ORG   MSGRPLY
MSG0RPLY DS    CL3                      REPLY AREA FOR MSG0
         ORG
         SPACE 3
*MSG1STRT IEAPMNIP TYPE=HEADER,MSGST=MSG1STRT,MSGEND=MSG1END
MSG1STRT DC    AL2(MSG1END-MSG1STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0001I AUTOREPLIES '
MSG1TEXT DC    C'ENABLED '
MSG1END  EQU   *
         SPACE 3
*MSG2STRT IEAPMNIP TYPE=HEADER,MSGST=MSG2STRT,MSGEND=MSG2END
MSG2STRT DC    AL2(MSG2END-MSG2STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0002I CVTVERID INITIALIZED - CBIPO &SYSPARM'
MSG2END  EQU   *
         SPACE 3
*MSG3STRT IEAPMNIP TYPE=HEADER,MSGST=MSG3STRT,MSGEND=MSG3END
MSG3STRT DC    AL2(MSG3END-MSG3STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0003I CHKPOINT MEMBER '
         DC    C'NOT READ FROM SYS1.PARMLIB'
MSG3END  EQU   *
         SPACE 3
*MSG4STRT IEAPMNIP TYPE=HEADER,MSGST=MSG4STRT,MSGEND=MSG4END
MSG4STRT DC    AL2(MSG4END-MSG4STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0004E I/O ERROR READING SYS1.PARMLIB'
MSG4END  EQU   *
         SPACE 3
*MSG5STRT IEAPMNIP TYPE=HEADER,MSGST=MSG5STRT,MSGEND=MSG5END
MSG5STRT DC    AL2(MSG5END-MSG5STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0005E CHKPOINT SYNTAX ERROR - '
BADVOL0  DC    CL8' '
         DC    C' - IGNORED'
MSG5END  EQU   *
         SPACE 3
*MSG6STRT IEAPMNIP TYPE=HEADER,MSGST=MSG6STRT,MSGEND=MSG6END
MSG6STRT DC    AL2(MSG6END-MSG6STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0006I CHKPOINT VOLUME '
BADVOL1  DC    CL6' '
         DC    C' INELIGIBLE AND WILL BE IGNORED'
MSG6END  EQU   *
         SPACE 3
*MSG7STRT IEAPMNIP TYPE=HEADER,MSGST=MSG7STRT,MSGEND=MSG7END
MSG7STRT DC    AL2(MSG7END-MSG7STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0006I CHKPOINT VOLUME '
MISSVOL  DC    CL6' '
         DC    C' SPECIFIED BUT NOT FOUND'
MSG7END  EQU   *
         SPACE 3
*MSG8STRT IEAPMNIP TYPE=HEADER,MSGST=MSG8STRT,MSGEND=MSG8END
MSG8STRT DC    AL2(MSG8END-MSG8STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0006I CHKPOINT VOLUME '
GOODVOL  DC    CL6' '
         DC    C' PROCESSED FOR CHECKPOINT'
MSG8END  EQU   *
         SPACE 3
*MSG9STRT IEAPMNIP TYPE=HEADER,MSGST=MSG9STRT,MSGEND=MSG9END
MSG9STRT DC    AL2(MSG9END-MSG9STRT,0)  MSG LENGTH/FLAGS
         DC    C'DLA0007E SIP TABLE NOT LOADED'
MSG9END  EQU   *
         TITLE 'IEAVNP99 - CONSTANTS AND WORK AREAS'
VOLTABL  DC    A(0)  CHECKPOINT VOLUME TABLE
CURPTR   DC    A(0)  CURRENT VOLTABL ENTRY
UCBPTR   DC    A(0)  CURRENT UCB ADDRESS
         LTORG
         TITLE 'IEAVNP99 - USER CVTVER MAPPING'
         DSACCVTV
         TITLE 'IEAVNP99 - NIP VECTOR TABLE MAPPING'
         IHANVT
         TITLE 'IEAVNP99 - SYS1.PARMLIB PARAMETER LIST'
         IEAPPNIP
         TITLE 'IEAVNP99 - CDE DSECT'
         IHACDE
         TITLE 'IEAVNP99 - CVT INCLUDING THE PREFIX'
         CVT   DSECT=YES,PREFIX=YES,LIST=YES
         TITLE 'IEAVNP99 - UCB DSECT'
UCB      DSECT
         IEFUCBOB
         END
/*
//*
//IEWL EXEC PGM=IEWL,
// PARM='LIST,NCAL,XREF,LET,REUS'
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1),DCB=BUFNO=1
//USEROBJ  DD DISP=SHR,DSN=LOCL.USEROBJ
//SYSLMOD  DD DISP=SHR,DSN=SYS1.NUCLEUS,UNIT=3330-1,VOL=SER=RES1N4
//SYSLIN   DD *
   INCLUDE USEROBJ(IEAVNP99)
   ENTRY IEAVNP99
 NAME  IEAVNP99(R)
/*
//
