         TITLE 'SELECT  --  DCMS SELECTOR'
US1NG    OPSYN USING
USING    OPSYN
DR0P     OPSYN DROP
DROP     OPSYN
SELECT#  CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
* INITIALIZE THE SELECTOR
         SAVE  (14,12)                 SAVE SO TERMIO CAN FIND DCB
         LR    R11,R15                 PERMANEMT BASE
         USING SELECT#,R11
         L     R9,0(R1)                GET TDCB ADDRESS
         USING TDCB,R9
*    ALLOCATE THE WORK AREA
         GETMAIN R,LV=WORKLEN,SP=1
         LR    R10,R1
         USING WORKAREA,R10
         ST    R13,SAVE+4              LINK SAVE AREAS
         LA    R15,SAVE
         ST    R15,8(R13)
         LR    R13,R15                 USE NEW SAVE AREA
         EJECT
         INUSE
         LA    R1,SCR1                 GET NORMAL SCREEN FORMAT
         ST    R1,IOCBFMT
         LA    R1,IOAREA               GET SCREEN IMAGE
         ST    R1,IOCBIMG
*    ASK FOR PASSWORD IF FIRST TIME THRU. ELSE TELL COMPLETION CODE
         TM    TDCBCFLG,TDCBLOG        IS USER LOGGED ON
         BNZ   NOTFIRST                BR IF YES
         LA    R1,SCR2                 POINT AT FORMAT WITH ENTRY OFF
         ST    R1,IOCBFMT
         MVC   MSGLINE,FIRSTMSG        WELCOME THE USER
         MVC   TASKLINE,=CL79' '       NO PENDING TASKS YET
ASKPASS  MVC   PROMPT,PASSLINE         ASK FOR PASSWORD
ASKPASS2 MVC   INPLINE(18),=CL18' '    CLEAR THE INPUT LINE
         BAL   R2,DISPLAY              DISPLAY THE MESSAGES
         L     R8,TDCBACCT             POINT AT THE TACCT
         USING TACCT,R8
         L      R1,TDCBVECT        POINT AT VECTOR
         L      R1,16(,R1)
         LTR    R1,R1
         BZ     ALLOWLGN
         LA    R2,ACCTDEPT             POINT TO FIRST RECEIVING FIELD
         LA    R1,2                    SET NUMBER OF FIELDS
         LA    R7,INPLINE              POINT AT INPUT
LOGSCAN0 SR    R5,R5                   SET NUMBER OF CHARACTERS OK
         LA    R6,9                    SET NUMBER TO EXAMINE
         LA    R3,8                    SET LENGTH OF RECEIVING FIELD
LOGSCAN1 CLI   0(R7),C'A'
         BL    LOGSCAN2                LOOKING FOR ALPHA NUMERIC
         LA    R5,1(R5)
         LA    R7,1(,R7)               POINT AT NEXT BYTE
         BCT   R6,LOGSCAN1
         B     ASKPASS                 TOO LONG A FIELD
         SPACE 2
LOGSCAN2 CH    R1,=H'1'                WHICH PASS IS IT?
         BE    LOGSCAN3                SECOND, MUST HAVE A BLANK
         CLI   0(R7),C'/'              ELSE LOOK FOR A SLASH
         BE    SEPOK
         B     ASKPASS
         SPACE 1
LOGSCAN3 CLI   0(R7),C' '              IS SEPARATOR RIGHT
         BNE   ASKPASS                 NO, TELL HIM TO TRY AGAIN
         SPACE 2
SEPOK    LTR   R5,R5                   WERE ANY CHARACTERS OK
         BZ    ASKPASS
         LR    R4,R7
         SR    R4,R5                   POINT AT START OF FIELD
         ICM   R5,8,=CL18' '           SET FILL CHARACTER
         MVCL  R2,R4                   MOVE THE FIELD ACROSS
         LA    R7,1(,R7)               SKIP OVER THE SEPARATOR
         BCT   R1,LOGSCAN0             GO DO ANOTHER FIELD
         LA    R5,ACCTDEPT+1           POINT AT FIRST MAYBE BLANK
ACCTBSCN CLI   0(R5),C' '              IS THIS A BLANK
         BE    ACCTBFND                YES, GO ZERO IT
         LA    R5,1(,R5)               MOVE TO NEXT
         B     ACCTBSCN
         SPACE 2
ACCTBFND MVI   0(R5),C'0'              APPEND A ZERO FOR UADS
         ENQ   MF=(E,UADSENQ)
         LTR   R15,R15
         BZ    GOTUADS
         EX    0,*                     LOOK AT R15
GOTUADS  L     R1,TDCBVECT
         L     R2,16(R1)               POINT AT UADS DCB
         FIND  (R2),ACCTDEPT,D
         LTR   R15,R15
         BZ    ACTFND
         DEQ   MF=(E,UADSENQ)
         B     BADPASS
ACTFND   LA    R3,UADSDATA
         READ  UADSDECB,SF,(R2),(R3),4000
         CHECK UADSDECB
         DEQ   MF=(E,UADSENQ)
         LH    R2,UADSDATA+26          POINT AT PASSWORD BLOCK
NEXTPASS L     R3,UADSDATA+8(R2)       POINT AT DATA BLOCK
         LA    R4,UADSDATA(R3)         GET DATA ADDRESS
         CLC   ACCTPROG(8),4(R4)       CHECK PASSWORD
         BE    GOTPASS
         LA    R4,UADSDATA(R2)         GET PASSWORD BLOCK ADDRESS
         TM    0(R4),X'80'             ARE THERE MORE
         BO    BADPASS                 NO, COMPLAIN
         L     R2,UADSDATA(R2)         MOVE TO NEXT PASSWORD
         B     NEXTPASS
         SPACE 3
GOTPASS  L     R3,UADSDATA+4(R2)       POINT AT ACCOUNT BLOCK
         L     R3,UADSDATA+8(R3)       POINT AT ACCOUNT NUMBER DATA
         LA    R3,UADSDATA(R3)         GET ADDRESS OF ACCOUNT NUMBER
         B     ALLOWLGN                ALLOW HIM ON
         SPACE 3
BADPASS  MVC   PROMPT,BADLGN
         B     ASKPASS2                GO ASK AGAIN
         SPACE 4
ALLOWLGN XC    ACCTSTAT,ACCTSTAT       CLEAR STATISTICS
         XC    ACCTTIME(8),ACCTTIME    CLEAR LOGON TIME AND DATE
         MVC   ACCTDEPT(16),=CL18' '
         MVI   ACCTDEPT,C'D'
         MVC   ACCTDEPT+1(3),45(R3)
         MVC   ACCTPROG(3),48(R3)      GET PROGRAMMER ID
         MVC   ACCTFLGS(1),UADSDATA+16 GET PRIVILEDGE FLAGS
         MVC   OPMSG(LDOPMSG),DOPMSG
         MVC   OPMSG+4(8),ACCTPROG
         DROP  R8
         L      R1,TDCBVECT        POINT AT VECTOR
         L      R1,16(,R1)
         LTR    R1,R1
         BZ     ALL0
         WTO   MF=(E,OPMSG)
ALL0     EQU    *
         OI    TDCBCFLG,TDCBLOG        NOTE LOGON COMPLETE
         MVC   MSGLINE,LOGON           TELL HIM HE'S ON
         LA    R1,SCR1                 RESTORE NORMAL INPUT LINE
         ST    R1,IOCBFMT
         B     ASKSERV                 SEE WHAT WE CAN DO FOR THE USER
* TELL USER STATUS OF LAST SERVICE
NOTFIRST TM    TDCBCFLG,TDCBRETA       SEE IF FIRST ENTRY AFTER ABEND
         BO    RETRY                   BR IF YES
         CLC   =F'0',TDCBABND          SEE IF LAST SERVICE BAD COMP CO
         BNE   LASTABND                BR IF IT DID
         MVC   MSGLINE,SUCCESS         TELL USER IT WAS OK
         B     ASKSERV                 AND ASK FOR NEXT SERVICE
LASTABND MVC   MSGLINE,ABNDMSG         TELL USER THE BAD NEWS
         UNPK  TEMP(9),TDCBABND(5)     CONVER TO HEX ABEND CODE
         TR    TEMP(8),HEXTAB
         MVC   MSGLINE+36(8),TEMP      MOVE CODE TO OUTPUT LINE
         B     ASKSERV                 ASK AGAIN
RETRY    NI    TDCBCFLG,255-TDCBRETA   TURN OFF RETRY ENTRY FLAG
         MVC   MSGLINE,RETRYMSG        TELL USER ABOUT RETRY OPTION
         MVC   TASKLINE,=CL79' '       DON'T TELL ABOUT PENDING TASKS
         MVC   PROMPT,RETRYMS2         TELL USER OPTIONS
         L     R2,TDCBPEND             FAILED TASKS TDCB ADDR
         L     R3,TDCBSTWA-TDCB(R2)    GET STAE WORK AREA PNTR
         UNPK  TEMP(9),4(5,R3)         GET ABEND CODE
         TR    TEMP(8),HEXTAB          CONVERT TO HEX
         MVC   MSGLINE+22(8),TEMP      MOVE INTO MSG
         MVC   INPLINE(18),=CL18' '    CLEAR THE INPUT LINE
         BAL   R2,DISPLAY              ASK USER WHAT TO DO
         CLC   =C'YES',INPLINE         SAVE TASK STATUS
         BE    ASKSERV                 YES, JUST ASK FOR NEXT PGM
         CLC   =C'NO',INPLINE          CANCEL DYING TASK
         BNE   RETRY                   IF NOT, ASK AGAIN
         L     R2,TDCBPEND             GET STOPPED TASKS TDCB ADDR
         POST  TDCBSECB-TDCB(R2)       LET STOPPED TASK CONTINUE
         MVC   MSGLINE,FIRSTMSG
         B ASKSERV                     ASK FOR NEXT SERVICE
         EJECT
* ASK USER FOR SERVICE NAME
ASKSERV  MVC   PROMPT,SERVMSG          ASK FOR SERVICE NAME
         MVC   TASKLINE,=CL79' '       ASSUME NO PENDING TASKS
         SR    R1,R1                   PENDING TASK COUNTER
         LR    R15,R9                  INIT PEND COUNT LOOP
PENDLOOP ICM   R0,15,TDCBPEND-TDCB(R15) SEE IF PEND TASK EXISTS
         BZ    TASKNO                  IF NO MORE, INSPECT COUNT
         LA    R1,1(R1)                UP PENDING TASK COUNTER
         LR    R15,R0                  CONTINUE DOWN CHAIN
         B     PENDLOOP                CONTINUE COUNTING
TASKNO   LTR   R1,R1                   ANY PENDING TASKS
         BZ    NOPEND                  BR IF NONE
         CVD   R1,DWORD                CONVERT PEND COUNT
         MVC   TASKLINE,TASKMSG        PEND TASK MSG TO BUFFER
         ED    TASKLINE(4),DWORD+6     PUT PEND COUNT IN MSG
         BCT   R1,NOPEND               BR IF PLURAL MSG OK
         MVI   TASKLINE+9,C' '         ELSE REMOVE THE S
NOPEND   MVC   INPLINE(18),=CL18' '    CLEAR THE INPUT LINE
         BAL   R2,DISPLAY              DISPLAY AND READ TERMINAL
         CLC   INPLINE(4),=C'IBMB'     IS IT A TRANSIENT LIB MODULE
         BE    BADNAME                 YES, DON'T LOAD IT
         LA    R2,8                    MAX NAME LENGTH
         LA    R3,INPLINE              ADDR OF ANSWER
LOOP1    CLI   0(R3),C' '              LOOK FOR ENDING BLANK
         BE    BLANKOUT                BR IF FOUND
         CLI   0(R3),C'A'              SEE IF LEGAL CHAR
         BL    BADNAME                 MUST NOT BE SPECAIAL CHAR
         LA    R3,1(R3)                POINT TO NEXT BYTE
         BCT   R2,LOOP1                CHECK ALL 8 BYTES
* NOW SEE IF THE SERVICE EXISTS
BLDL     MVC   BLDLLIST(4),BLDLDATA    PARM LIST HEADER
         MVC   BLDLLIST+4(8),INPLINE   COPY SERVICE NAME
         BLDL  0,BLDLLIST              SEE IF SERVICE EXISTS
         LTR   R15,R15                 CHECK BLDL RETURN CODE
         BNZ   BADNAME                 NON-ZEOR MEANS NO MODULE
         CLI   BLDLLIST+16,2           WHICH LIBRARY WAS IT IN
         BL    BADNAME                 LINKLIB - WRONG PLACE
* COPY MOD NAME, FEEE WORK AREA, AND GO TO DESIRED SERVICE
         L    R13,SAVE+4               PREVIOUS SAVE AREA ADDR
         MVC   0(8,R13),INPLINE        COPY MODULE NAME TO SAVE AREA
         FREEMAIN R,LV=WORKLEN,SP=1,A=(R10)
         LM    14,12,12(R13)           RESTORE ORIGINAL REGS FOR FRITZ
         XC    8(8,R13),8(R13)         CLEAR XCTL PARM LIST
         XCTL  EPLOC=0(R13),DCB=0,SF=(E,8(R13))
* CLEAR TRAILING GARBAGE FROM NAME
LOOP2    MVI   0(R3),C' '              BLANK OUT NEXT BYTE
BLANKOUT LA    R3,1(R3)                POINT TO NEXT BYTE
         BCT   R2,LOOP2                CLEAR REST OF NAME
         B     BLDL                    GO LOOK FOR MODULE
BADNAME  MVC   MSGLINE,BADMSG          TELL USER NAME IS BAD
         MVC   MSGLINE(8),INPLINE      PUT NAME IN MESSAGE
         B     ASKSERV                 AND TRY AGAIN
         EJECT
* DISPLAY MSG, READ ANSWER, AND CHECK FOR END CONDITIONS
DISPLAY  TRMIO IOCB
         CLI   IOCBAID,AIDPA1          DID USER HIT PA1
         BE    ENDIT                   IF YES, LOGOFF
         CLI   IOCBAID,AIDENT          DID HE HIT ENTER
         BNE   DISPLAY                 IF NOT, DISPLAY AGAIN
         CLC   =C'END ',INPLINE        DID USER LOG OFF
         BNER  R2                      IF NOT, RETURN TO CALLER
ENDIT    TM    TDCBCFLG,TDCBLOG        IS HE LOGGED OFF
         BZ    DISPLAY                 YES, THAT'S NICE
         NI    TDCBCFLG,255-TDCBLOG    NO, BUT HE IS NOW
         OC    TDCBPEND,TDCBPEND       IS THIS THE LAST ONE
         BNZ   NOLOGOFF                NO, NO MESSAGE
*---------------------------------------------------------------
* IF THE USER SPECIFIED 'PARM=NOUADS' DONT DO THE WTO..
*---------------------------------------------------------------
         L     R1,TDCBVECT        POINT AT VECTOR
         L     R1,16(,R1)
         LTR   R1,R1
         BZ    NOLOGOFF            NO WTO NECESSARY
         MVC   OPMSG(LDOPMSG),DOPMSG   INITIALIZE WTO AREA
         L     R1,TDCBACCT
         USING TACCT,R1
         MVC   OPMSG+4(8),ACCTPROG
         MVC   OPMSG+13(3),=C'OFF'
         DROP  R1
         WTO   MF=(E,OPMSG)            NOTIFY THE OPERATOR
NOLOGOFF L    R13,SAVE+4               PREVIOUS SAVE AREA ADDR
         FREEMAIN R,LV=WORKLEN,SP=1,A=(R10)
         RETURN (14,12),RC=0
         EJECT
BLDLDATA DC    H'1,58'                 BLDL PARM LIST HEADR
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'     HEX CONVERSION TABLE
FIRSTMSG DC    CL80' '
PASSLINE DC    CL80'ENTER YOUR DCMS LOGON CODE:'
SYSUADS  DC    CL8'SYSUADS'
UADSENQ  ENQ   (SYSUADS,SYSUADS,E,8,STEP),MF=L
BADLGN   DC    CL80'INVALID USERID/PASSWORD.'
LOGON    DC    CL80'WELCOME TO DCMS'
RETRYMSG DC    CL79'SERVICE ABENDED CODE='
RETRYMS2 DC    CL79'SHOULD THE TASK BE PRESERVED? (YES OR NO)'
SUCCESS  DC    CL33' ',CL46'DCMS SELECTOR'
ABNDMSG  DC    CL80'SERVICE TERMINATED ABNORMALLY. CODE='
SERVMSG  DC    CL80'ENTER NAME OF SERVICE DESIRED. IF YOU DON''T KNOW, X
               ENTER "HELP".'
TASKMSG  DC    X'40202020',CL75' TASKS SUSPENDED'
BADMSG   DC    CL80'         IS NOT A VALID SERVICE NAME'
DOPMSG   WTO   '         ON  DCMS',ROUTCDE=8,DESC=6,MF=L
LDOPMSG  EQU   *-DOPMSG
* SCREEN FORMAT
SCR1     SFMT
MSGLINE  FIELD 79
TASKLINE FIELD 79
PROMPT   FIELD 79
INPLINE  FIELD 18,ALPHA,CURSOR=YES,ROW=23,COLUMN=1,INTEN=HI
         SFEND
* SCREEN FORMAT WITH INPUT BLANKED
SCR2     SFMT
         FIELD 79
         FIELD 79
         FIELD 79
         FIELD 18,ALPHA,CURSOR=YES,ROW=23,COLUMN=1,INTEN=OFF
         SFEND
WORKAREA DSECT
IOCB     IOCB
SAVE     DS    18F
DWORD    DS    D                       CVB WORK AREA
IOAREA   EQU   *
         DSGEN SCR1                    SCR2 IS THE SAME
BLDLLIST DS    31H                     BLDL PARM LIST AREA
TEMP     DS    CL9
OPMSG    WTO   '12345678 ON  DCMS',ROUTCDE=8,DESC=6,MF=L
UADSDATA DS    1000F
WORKLEN  EQU   *-WORKAREA
         TDCB
         TACCT
         END
