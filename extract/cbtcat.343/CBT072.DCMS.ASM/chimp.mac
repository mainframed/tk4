*  WAS ORIGINALLY -                                              AMDAHL
*          DATA SET CBT327     AT LEVEL 003 AS OF 11/28/75
DCMS     TITLE 'C H I M P - MAIN STORAGE MONITOR (REAL TIME) DCMS VERSIO
               ON'
CHIMP    CSECT
***********************************************************************
* IN CASE YOU ARE INTERESTED, THE SOURCE OF THE NAME (OR RATHER THE
* JUSTIFICATION FOR THE NAME) OF THIS SILLY PROGRAM IS/WAS:
*
*  COMPUTERIZED HEURISTIC INFORMATION MONITORING PROGRAM  (WHEW!)
* THIS COMMAND HAS SEVERAL DIFFERENT MODES OF DISPLAY:
*
*     I   - THIS MODE WILL DISPLAY ONLY THOSE MEMORIES WHICH ARE EITHER
*           SWAPPED IN AND RUNNING OR SWAPPED OUT BUT READY TO RUN.
*     O   - THIS MODE WILL DISPLAY ALL ACTIVE MEMORIES IN THE SYSTEM,
*           REGARDLESS OF LOCATION.
*
*   TO SWITCH BETWEEN MODES, TYPE EITHER I OR O.
*
*
*      YOU MAY ALSO ENTER OPTIONS TO RESTRICT THE OUTPUT TO ONLY
*      TSO MEMORIES (IN EITHER IN/OUT OR WAITING STATUS ACCORDING
*      TO YOUR USE OF THE I AND O OPTIONS ABOVE) OR ONLY STARTED
*      TASK/BATCH JOB MEMORIES:
*
*     T  - RESTRICTS THE OUTPUT TO ONLY TSO MEMORIES
*
*     B  - RESTRICTS THE OUTPUT TO STARTED TASK/BATCH MEMORIES
*
*     A  - RESETS THE TSO/STARTED TASK/BATCH JOB SELECTION.
*
*   TO EXIT FROM THIS COMMAND, SIMPLY TYPE S
*
*  GLOSSARY OF TERMS FOR OUTPUT DISPLAY:
*
*    JOB       JOB NAME OF MEMORY
*    STEP      FOR BATCH JOBS WILL ALWAYS BE INIT.
*              FIXED TO SHOW ACTUAL BATCH STEP NAME              AMDAHL
*              FOR TSO JOBS AND STARTED TASKS WILL BE ACTUAL STEP NAME.
*    P         REASON CODE FOR SWAP OUT FROM OUCBPFL.
*              THE FOLLOWING ARE THE REASON CODES DISPLAYED:
*                R  RESET VALUE.
*                W  MEMORY IS IN LONG WAIT OR INPUT TERMINAL WAIT.
*                T  MEMORY IS IN OUTPUT TERMINAL WAIT.
*                E  AN ENQHOLD HAS BEEN RECEIVED FOR THIS MEMORY.
*                V  MEMORY WAS SWAPPED OUT BY MS6 LONG WAIT DETECTION.
*                O  MEMORY WAS SWAPPED OUT TO MAKE ROOM FOR TSO TRIV.
*                P  INVOLUNTARY SWAPOUT USUALLY DUE TO PARTIAL ANAL.
*                S  SWAPOUT CAUSED BY REAL STORAGE SHORTAGE.
*                ?  UNABLE TO DETERMINE SWAPOUT REASON.
*    MEMORY    CURRENT AMOUNT OF MEMORY ALLOCATED TO THIS MEMORY.
*    WSS       SRM'S VIEW OF THE WORKING SET SIZE FOR THIS MEMORY.
*    T         TYPE OF MEMORY (S=STC OR MOUNT, T=TSO, B=BATCH)   AMDAHL
*    LOC       CURRENT LOCATION OF THIS MEMORY:
*                IN  SWAPPED IN AND ELIGIBLE TO RUN.
*                OUT SWAPPED OUT BUT READY TO RUN.
*                WT  SWAPPED OUT AND NOT READY TO RUN.
*                N/S SWAPPED IN AND V=R OR NON-SWAPPABLE STATUS.
*                <-> TRANSITIONING BETWEEN STATES.
*    DP        DISPATCHING PRIORITY OF MEMORY (IN HEX).
*    PG        PERFORMANCE GROUP.
*    SC        NUMBER OF TIMES THE MEMORY HAS BEEN SWAPPED IN THE
*              CURRENT TRANSACTION.
*    WMR       CURRENT SRM WORKLOAD MANAGER RECOMMENDATION VALUE.
*              (ACTUALLY THE WORKLOAD LEVEL AT WHICH THIS MEMORY IS
*               OPERATING).
*    SRV       SERVICE ACCUMULATED IN THE LAST SWAPPED IN PERIOD.
*    CPU       CPU TIME IN SECONDS USED BY THE MEMORY (SRB PLUS TASK).
*
*  MODIFIED TO RUN REAL TIME UNDER DCMS NOV  25, 1976 (HAPPY     AMDAHL
*  THANKSGIVING )                                                AMDAHL
*  - WHEN RUNNING UNDER DCMS THE FOLLOWING DIFFERENCES OCCUR     AMDAHL
*    . THE SCREEN IS UPDATED ON  AN INTERVAL SPECIFIED BY THE    AMDAHL
*      USER ( DEFAULT SET TO ONE SECOND )                        AMDAHL
*                                                                AMDAHL
*       3270                                                     AMDAHL
*        KEY     FUNCTION                                        AMDAHL
*      ________  ________________________________________________AMDAHL
*                                                                AMDAHL
*    .  -----                                                    AMDAHL
*      × PA1 ×   USED TO TERMINATE CHIMP                         AMDAHL
*      ×     ×                                                   AMDAHL
*       -----                                                    AMDAHL
*                                                                AMDAHL
*    .  -----                                                    AMDAHL
*      × PF1 ×   WHEN STRUCK CAUSES USER TO BE PROMPTED TO       AMDAHL
*      ×     ×   SWITCH MODES (AS DESCRIBED ABOVE)               AMDAHL
*       -----                                                    AMDAHL
*                                                                AMDAHL
*    .  -----                                                    AMDAHL
*      × PF2 ×   WHEN STRUCK CAUSES USER TO BE PROMPTED TO       AMDAHL
*      ×     ×   CHANGE THE UPDATE  TIME. TIME IS SPECIFIED      AMDAHL
*       -----    AS; SSTH SECONDS, TENTHS, HUNDREDTHS            AMDAHL
*                                                                AMDAHL
*    .  -----                                                    AMDAHL
*      ×CLEAR×   WILL GET THE USER OUT OF  CHIMP WHEN ALL        AMDAHL
*      ×     ×   ELSE FAILS                                      AMDAHL
*       -----                                                    AMDAHL
*                                                                AMDAHL
*  11/27/76 REPAIR DAMAGE TO OUCB LEFT BY SUPER 1 & 2 SU'S       SU7
*                                                                AMDAHL
*    ANY PROBLEMS, COMMENTS (NON-CAUSTIC), SUGGESTIONS ARE       AMDAHL
*    WELCOME:                                                    AMDAHL
*       FRED LUDDY                                               AMDAHL
*       AMDAHL CORP.                                             AMDAHL
*       1250 E. ARQUES                                           AMDAHL
*       SUNNYVALE CA. 95051                                      AMDAHL
*    PHONE:                                                      AMDAHL
*       (408) - 735 - 4011                                       AMDAHL
***********************************************************************
         EJECT
CHIMP    XSTART STAE=YES                                         AMDAHL
         L     R5,0(R5)            FIND TDCB                     AMDAHL
         ST    R5,TDCBADDR         AND SAVE IT FOR LATER         AMDAHL
         BAL   R9,WRITE            UGLY ?                        AMDAHL
FINDCVT  L     2,16             LOAD PTR TO CVT.
         L     2,556(,2)        TO ASVT
         L     3,516(,2)        MAXIMUM NUMBER OF ENTRIES
         LA    4,524(,2)        FIRST ENTRY MINUS 4.
         LA    1,BUFFER         LOAD ADDRESS OF OUTPUT BUFFER.
ASCBLOOP LA    4,4(,4)          BUMP BY FOUR.
         ICM   5,B'1111',0(4)   LOAD THE PTR.
         BM    NOGOOD           BRANCH IF BAD PTR.
         TM    102(5),X'04'     TEST FOR SWAPPED OUT.
INOROUT  BO    NOGOOD           BRANCH IF OUT AND NOT READY TO RUN.
         L     6,144(,5)         LOAD PTR TO OUCB FOR QUICK TSO CHK
         TM    18(6),X'20'      CHECK FOR TSO.
TSOORNO  BC    0,NOGOOD         TO BE FILLED IN IF BATCH ONLY.
BATCHORN BC    0,NOGOOD         TO BE FILLED IN LATER.
         MVI   LINE+2,C' '      CLEAR OUTPUT LINE TO BLANKS.
         MVC   LINE+3(77),LINE+2 DITTO.
         MVC   JOB(8),=CL8'STARTING' TO BYPASS GARBAGE
         USING ASCB,R5             JUST A LITTLE ADDRESSABILITY  AMDAHL
         L     R6,ASCBJBNI         IS THIS AN INITIATED JOB ?    AMDAHL
         LTR   R6,R6               ...                           AMDAHL
         BZ    NOTINIT             NO                            AMDAHL
         MVC   JOB(8),0(R6)        MOVE JOB NAME                 AMDAHL
*                                                                AMDAHL
* INITIATED JOBS DO NOT HAVE A CSCB PTR, BUT ASCBJBNI POINTS TO  AMDAHL
* CHKEY WHICH IS 8 INT THE CSCB.                                 AMDAHL
*                                                                AMDAHL
         LA    R0,8                                              AMDAHL
         LA    R6,0(R6)            CLEAR HI-ORDER GARBAGE        AMDAHL
         SR    R6,R0               FIND THE CSCB                 AMDAHL
         USING CSCB,R6                                           AMDAHL
         MVC   STEP(8),CHSTEP      MOVE THE STEPNAME             AMDAHL
         MVI   TYPE,C'B'           ADD BATCH TYPE                AMDAHL
         B     STEPOK              AN DAS AWL                    AMDAHL
         DROP  R6                                                AMDAHL
         SPACE 2                                                 AMDAHL
NOTINIT  EQU   *                                                 AMDAHL
         L     R6,ASCBJBNS         GET HIS NAME                  AMDAHL
         LTR   R6,R6                                             AMDAHL
         BZ    STEPOK              UNDECIDED ...                 AMDAHL
         MVC   JOB(8),0(R6)                                      AMDAHL
*                                                                AMDAHL
* S / M / L SHOULD ALWAYS HAVE A CSCB PTR.                       AMDAHL
*                                                                AMDAHL
         L     R6,ASCBCSCB                                       AMDAHL
         LTR   R6,R6                                             AMDAHL
         BZ    STEPOK              I GIVE UP                     AMDAHL
         USING CSCB,R6                                           AMDAHL
         MVC   STEP,CHCLS          MOVE THE STEP NAME            AMDAHL
         MVI   TYPE,C'T'           DEFAULT TSO                   AMDAHL
         CLI   CHTRKID,CHTSID      IS IT ?                       AMDAHL
         BE    STEPOK              YES.                          AMDAHL
         MVI   TYPE,C'S'           INDICATE STARTED TASK         AMDAHL
STEPOK   DS    0H
         LH    6,152(,5)         LOAD ALLOC FRAME COUNT.
         SLL   6,2              MULTIPLY BY FOUR.
         CVD   6,WORK           CONVERT TO DECIMAL FORMAT.
         MVC   SIZE(6),=X'2020202120D2' GET READY FOR EDIT.
         ED    SIZE-1(6),WORK+5 EDIT THE RESULT.
         L     6,144(,5)        PTR TO OUCB.
         LH    7,OUCBWSS-OUCB(R6) GET THE SRM'S IDEA OF WORKING  SU7
*                                  SET                           SU7
*        SLL   7,2              TIMES FOUR FOR K.
         CVD   7,WORK           CONVERT TO DECIMAL.
         MVC   XUCBWSS(6),=X'202020212040' MOVE IN THE EDIT MASK.
         ED    XUCBWSS-1(6),WORK+5 EDIT THE RESULT.
         MVC   WHERE,=CL3'IN'   DEFAULT MEMORY POSITION IS IN.
         MVI   LINE+1,X'E8'     FOR FULL SCREEN EDIT.
         TM    17(6),X'80'      TEST FOR NON-SWAP
         BZ    TRYWAIT          BRANCH IF NOT NON-SWAP.
         MVC   WHERE,=CL3'N/S'  MOVE IN NON-SWAP INDICATION.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYWAIT  DS    0H
         TM    16(6),X'08'      CHECK FOR WAIT
         BZ    TRYOUT           BRANCH IF NOT.
         MVC   WHERE,=CL3'WT'   MOVE IN WAIT POSITION INDICATION.
         MVI   LINE+1,X'60'     MOVE IN 3270 HI-INTENSITY ATTR BYTE.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYOUT   TM    16(6),X'04'      TRY OUT QUEUE
         BZ    TRYTRIV          IF NOT, GO TRY TRIVIAL QUEUE STATUS.
         MVC   WHERE,=CL3'OUT'  MOVE IN OUT QUEUE POSITION.
         MVI   LINE+1,X'60'     MOVE IN 3270 HI-INTENSITY ATTR BYTE.
         B     WHEREOK          BY-PASS REST OF POSITION PROCESSING.
TRYTRIV  TM    16(6),X'02'      CHECK FOR TRIVIAL QUEUE POSITION.
         BZ    WHEREOK          IF NOT, EXIT POSITION PROCESSING.
         MVC   WHERE,=CL3'TRV'  MOVE IN TRIVIAL QUEUE POSITION.
WHEREOK  DS    0H
         TM    16(6),X'E0'      CHECK FOR TRANSITIONING STATUS
         BZ    NOTTRANS         BRANCH IF MEMORY NOT TRANSITIONING.
         MVC   WHERE(3),=CL3'<->' INDICATE TRANSITIONING.
NOTTRANS DS    0H
         SR    7,7              PREPARE FOR THE INSERT CHARACTERS.
         IC    7,43(,5)         LOAD ASCBDP
         SRL   7,4              SHIFT OUT LOW ORDER NIBBLE.
         IC    8,HEX(7)         PICK THE EBCDIC CHARACTER.
         STC   8,DP             STORE INTO OUTPUT FIELD.
         IC    7,43(,5)         LOAD THE DISPATCHING PRIORITY AGN.
         N     7,=F'15'         TURN OFF HIGH ORDER NIBBLE.
         IC    8,HEX(7)         LOAD THE EBCDIC CHARACTER.
         STC   8,DP+1           STORE INTO OUTPUT LINE.
         SR    7,7              PREPARE FOR THE IC.
         IC    7,24(,6)         NEW PGN
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   XUCBPGN(3),=X'202120' MOVE IN THE EDIT MASK.
         ED    XUCBPGN-1(4),WORK+6 EDIT THE OUTPUT FIELD.
         LH    7,OUCBSWC-OUCB(R6) LOAD THE SRM'S SWAP COUNT      SU7
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   XUCBSWC(3),=X'202120' MOVE IN THE EDIT MASK.
         ED    XUCBSWC-1(4),WORK+6 EDIT THE OUTPUT FIELD.
         L     7,OUCBWMR-OUCB(R6) LOAD WKLD MGR RECCOMENDATION   SU7
         LTR   7,7              SEE IF HI-ORDER BIT IS ON
         BNM   WMROK             INDICATING WMR INVALID.
         MVC   XUCBWMR(5),=C'*N/A*' IF SO, MOVE IN NOT AVAIL INDIC.
         MVI   XUCBWMS+4,C'-'   AND BLANK OUT THE SERVICE COUNTER.
         B     NOWMS            BY-PASS THE SERVICE PROCESSING.
WMROK    DS    0H
         SRL   7,8              DIVIDE BY 256
         CVD   7,WORK           CONVERT IT TO DECIMAL.
         MVC   XUCBWMR(5),=X'2020202120' MOVE IN EDIT MASK.
         ED    XUCBWMR-1(6),WORK+5 EDIT THE RESULT.
         EJECT ,                                                 AMDAHL
WMROKA   DS    0H
         MVI   STATUS,C'I'         DEFAULT AS IN                 AMDAHL
         TM    102(5),X'04'        IS  ASID IN ?                 AMDAHL
         BNO   PFLDONE             YES.. LEAVE IN                AMDAHL
* SWAP REASON  CODE...
         XR    R15,R15             GET SET FOR THE IC            AMDAHL
         CLI   37(R6),10           IS IT OVER OUR LIMIT ?        AMDAHL
         LA    R15,C'*'            SHOW DEFAULT BEING OUT-OF-BOUNDS AHL
         BH    WMR0                GO AWAY IF HE'S IN-CORE OR    AMDAHL
*                                   OUT OF BOUNDS...             AMDAHL
         IC    R15,37(R6)          GET THE SWAP REASON CODE      AMDAHL
         IC    R15,AMDCODES(R15)   MAKE IT SOMEWHAT PRINTABLE    AMDAHL
WMR0     EQU   *                                                 AMDAHL
         STC   R15,STATUS          AN PLACE IN SCREEN BUFFER     AMDAHL
PFLDONE  DS    0H
         L     7,OUCBWMS-OUCB(R6)       LOAD SERVICE UNITS THIS  SU7
         CVD   7,WORK           CONVERT TO DECIMAL.
         MVC   XUCBWMS(5),=X'2020202120' MOVE IN THE EDIT MASK.
         ED    XUCBWMS-1(6),WORK+5 EDIT THE RESULT.
NOWMS    LM    8,9,64(5)        LOAD UP EJST (CPU TIME - TASK TYPE)
         SRDL  8,12             TO GET MICROSEC
         LM    10,11,200(5)     LOAD UP SRB TIME.
         SRDL  10,12            TO GET MICROSEC
         AR    9,11             ADD TOGETHER.
         CVD   9,WORK           CONVERT IT TO DECIMAL.
         MVC   CPUTIME(8),=X'20202021204B2020' MOVE IN THE EDIT MASK.
         ED    CPUTIME-1(9),WORK+2 EDIT THE RESULT.
         MVC   XUCBDMN(3),=X'202120'                             AMDAHL
         XR    R9,R9               GET SET
         IC    R9,OUCBDMN-OUCB(R6) GET THE DOMAIN NUMBER         AMDAHL
         CVD   R9,WORK             ...                           AMDAHL
         ED    XUCBDMN-1(4),WORK+6 ...                           AMDAHL
         MVC   0(78,1),LINE+2   MOVE THE LINE TO THE 3270 BUFFER.AMDAHL
         LH    7,SCRSIZE        BUMP BUFFER COUNTER.
         LA    7,79(,7)                                          AMDAHL
         STH   7,SCRSIZE
         LA    1,79(,1)         SEE IF THE BUFFER IS FULL YET.   AMDAHL
         C     1,ADBUF
         BE    PUTIT            IF YES, THE GO PUT THIS SCREEN.
NOGOOD   BCT   3,ASCBLOOP       BRANCH BACK TO LOOK AT NEXT MEMORY.
PUTIT    EQU   *                                                 AMDAHL
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=HEADING              AMDAHL
         STIMER WAIT,BINTVL=INTERVAL WAIT A WHILE                AMDAHL
         L     1,TDCBADDR          FIND USER INPUT KEY           AMDAHL
         USING TDCB,R1             FOR A SHORT WHILE             AMDAHL
         CLI   TDCBAID,0           ANYTHING ?                    AMDAHL
         BE    GOODGRIF            NO... SORRY                   AMDAHL
         CLI   TDCBAID,AIDPA1      REQUEST TO STOP ?             AMDAHL
         BE    EODAD               YUP...                        AMDAHL
         CLI   TDCBAID,AIDPF1      CHANGE MODES ?                AMDAHL
         BE    MODESET             YES                           AMDAHL
         CLI   TDCBAID,AIDPF2      CHANGE UPDT TIME ?            AMDAHL
         BE    CINTERVL                                          AMDAHL
         B     GOODGRIF            OTHERS.. IGNORE               AMDAHL
         DROP  R1                                                AMDAHL
         SPACE 1                                                 AMDAHL
TSO      EQU   *                                                 AMDAHL
         MVI   BATCHORN+1,X'80' RESET THE BRANCHES TO GET
         MVI   TSOORNO+1,X'00'     ONLY TSO MEMORIES.
         B     GOODGRIF         BY-PASS FURTHER INPUT CHECKING.
         SPACE 1                                                 AMDAHL
BATCH    EQU   *                                                 AMDAHL
         MVI   TSOORNO+1,X'10'  RESET THE BRANCHES TO GET
         MVI   BATCHORN+1,X'00'    ONLY BATCH (STC) MEMORIES.
         B     GOODGRIF         BY-PASS FURTHER INPUT CHECKING.
         SPACE 1                                                 AMDAHL
ALL      EQU   *                                                 AMDAHL
         MVI   TSOORNO+1,X'00'  IF EVERYTHING, NOP ALL THE
         MVI   BATCHORN+1,X'00'    SELECTION BRANCHES.
         B     GOODGRIF                                          AMDAHL
         SPACE 1                                                 AMDAHL
OUTQUE   EQU   *                                                 AMDAHL
         MVI   INOROUT+1,X'00'  NOP THE BRANCH
         MVI   MODESW,X'FF'     INDICATE CHANGE OF MODES.
         B     GOODGRIF
         SPACE 1                                                 AMDAHL
INQUE    EQU   *                                                 AMDAHL
         MVI   INOROUT+1,X'10'  TAKE THE BRANCH
         MVI   MODESW,X'FF'     INDICATE MODE SWITCH.
         SPACE 1                                                 AMDAHL
GOODGRIF DS    0H
         MVC   SCRSIZE,=H'0'    RESET SCREEN SIZE.
         LA    1,BUFFER         PREPARE
         LA    6,BUFFER            FOR
*        ICM   6,8,C' '            AN INTERESING INSTRUCTION !!  AMDAHL
         LA    7,BUFLEN                  MOVE
         LA    8,BUFFER                     CHARACTER
         SR    9,9                             LONG
         ICM   9,8,=C' '           I THINK THIS WHAT YOU MEAN    AMDAHL
         MVCL  6,8                                TO CLEAR BUFFER.
         CLI   MODESW,X'FF'     CHECK FOR CHANGE OF MODES.
         BNE   MODEOK           BRANCH IF SAME MODE.
         MVI   MODESW,X'00'     RESET MODE CHANGE.
         B     FINDCVT          START OVER FROM BEGINNING.
MODEOK   DS    0H
         LTR   3,3              CHECK TO SEE IF MORE MEMORIES TO PROCES
         BNZ   NOGOOD           BRANCH IF YES.
         B     FINDCVT          OTHERWISE, START OVER FROM THE TOP.
EODAD    DS    0H
BYEBY    EQU   *                                                 AMDAHL
         L     R13,4(R13)       LOAD CALLERS SAVE AREA POINTER.  AMDAHL
         RETURN (14,12),RC=0    AND AWAY WE GO...
         EJECT
         SPACE 2
MODESET  DS    0H                  CHANGE MODES                  AMDAHL
         MVI   WARNLINE,C' '             SET                     AMDAHL
         MVC   WARNLINE+1(157),WARNLINE   INITIAL                AMDAHL
         MVC   WARNLINE(L'MOWARN),MOWARN   ENVIRONMENT           AMDAHL
         MVC   INPTLINE(L'ENTER),ENTER  FOR THE READ             AMDAHL
         BAL   R9,WRITE            WRITE THE SCREEN              AMDAHL
         LA    R8,#VALID           NO. OF VALID RESPONSES        AMDAHL
         LA    R9,VALIDMOD         RESPONSES THEMSELVES          AMDAHL
MO1      EQU   *                                                 AMDAHL
         CLC   0(1,R9),INPTLINE+6  CHECK THIS ONE                AMDAHL
         BNE   MO2                 NOT THIS GUY                  AMDAHL
         L     R9,0(R9)            GET ROUTINE ADDRESS           AMDAHL
         BR    R9                  AND GO TO IT                  AMDAHL
MO2      EQU   *                                                 AMDAHL
         LA    R9,4(,R9)           GET NEXT RESPONSE             AMDAHL
         BCT   R8,MO1                                            AMDAHL
         B     MODESET             RETRY                         AMDAHL
         SPACE 1                                                 AMDAHL
MOWARN   EQU   *,66,C                                            AMDAHL
 DC C'VALID INPUT: S-STOP, T-TSO, B-BATCH, A-ALL, O-INCORE+OUT, I-INCORE
               E'                                                AMDAHL
         SPACE  4                                                AMDAHL
WRITE    DS    0H                                                AMDAHL
         TRMIO IOCB,FORMAT=SCR1,IMAGE=HEADING                    AMDAHL
         L     R1,TDCBADDR         RESET THE                     AMDAHL
         MVI   TDCBAID-TDCB(R1),0   CHEAP INPUT AREA             AMDAHL
         BR    R9                                                AMDAHL
         SPACE 4                                                 AMDAHL
CINTERVL DS    0H                  CHANGE UTME                   AMDAHL
         MVI   WARNLINE,C' '             SET                     AMDAHL
         MVC   WARNLINE+1(157),WARNLINE   INITIAL                AMDAHL
         MVC   WARNLINE(L'CIWARN),CIWARN   ENVIRONMENT           AMDAHL
         MVC   INPTLINE(L'ENTER),ENTER  FOR THE READ             AMDAHL
         BAL   R9,WRITE            WRITE THE SCREEN              AMDAHL
CI1      EQU   *                                                 AMDAHL
         LA    R8,4                VALIDATE INPUT                AMDAHL
         LA    R1,INPTLINE+6       ...                           AMDAHL
CI2      EQU   *                   ...                           AMDAHL
         CLI   0(R1),C'0'          ...                           AMDAHL
         BL    CIERR               ...                           AMDAHL
         CLI   0(R1),C'9'          ...                           AMDAHL
         BH    CIERR               ...                           AMDAHL
         LA    R1,1(,R1)           ...                           AMDAHL
         BCT   R8,CI2              ...                           AMDAHL
         PACK  WORK(8),INPTLINE+6(4) O.K. UP TILL NOW            AMDAHL
         CVB   R1,WORK             GET IT IN USEABLE FMT         AMDAHL
         LTR   R1,R1               WAS IT ZERO ?                 AMDAHL
         BNZ   CI3                 NO, OK...                     AMDAHL
         LA    R1,1                OTHERWISE ( FOR AVERAGING SAKEAMDAHL
CI3      ST    R1,INTERVAL         SAVE IT                       AMDAHL
         B     GOODGRIF                                          AMDAHL
         SPACE 2                                                 AMDAHL
CIERR    EQU   *                                                 AMDAHL
         MVC   WARNLINE(L'CIERTXT),CIERTXT                       AMDAHL
         MVC   WARNLINE+33(4),INPTLINE+6  WRITE BAD INPUT OUT    AMDAHL
         MVC   INPTLINE+6(4),=C'    '                            AMDAHL
         BAL   R9,WRITE            G I G O - DONT YOU KNOW ?     AMDAHL
         B     CI1                 SEE HOW HE DID                AMDAHL
         SPACE 2                                                 AMDAHL
CIERTXT  EQU   *                                                 AMDAHL
CIWARN   DC    C'ENTER INTERVAL AS SSTH'                         AMDAHL
MODESW   DC    X'00'  MODE CHANGE.
WORK     DS    D
INTERVAL DC    F'100'              DEFAULT 1 SECOND              AMDAHL
VALIDMOD DC    C'S',AL3(EODAD)     STOP COMMAND                  AMDAHL
         DC    C'T',AL3(TSO)       MONITOR TSO ADDRESS SPACES    AMDAHL
         DC    C'B',AL3(BATCH)     MONITOR BATCH ADDRESS SPACES  AMDAHL
         DC    C'A',AL3(ALL)       MONITOR ALL ADDRESS SPACES    AMDAHL
         DC    C'I',AL3(INQUE)     MONITOR SWAPPED IN  SPACES    AMDAHL
         DC    C'O',AL3(OUTQUE)    MONITOR ADDRESS SPACES        AMDAHL
#VALID   EQU   (*-VALIDMOD)/4      NUMBER OF RESPONSES           AMDAHL
HEX      DC    C'0123456789ABCDEF'
AMDCODES DC    C'IOTLASMRNEW'      SWAPOUT REASON CODES          AMDAHL
X        DC    CL80' '
         ORG   X
LINE     DC    X'4040'                                           AMDAHL
JOB      DC    CL8' '
         DC    C' '
         DC    C' '
STEP     DC    CL8' '
         DC    C' '
STATUS   DC    C' '
         DC    C' '
SIZE     DC    CL5' '
         DC    CL2' '
XUCBWSS  DC    CL5' '
         DC    CL2' '
TYPE     DC    C' '
         DC    C' '
WHERE    DC    CL3' '
         DC    C' '
DP       DC    CL2' '
         DC    C' '
XUCBPGN  DC    CL3' '
         DC    C' '
XUCBSWC  DC    CL3' '
         DC    C' '
         DC    C' '
         DC    C' '
XUCBWMR  DC    CL5' '
         DC    C' '
XUCBWMS  DC    CL5' '
         DC    C' '
CPUTIME  DC    CL8' '
         DC    C' '
XUCBDMN  DC    CL3' '              DOMAIN NUMBER                 AMDAHL
         ORG
SCRSIZE  DC    H'0'
TPUTFLG  DC    X'03'
ADBUF    DC    A(Z)
CLR      DC    X'C71140403C40400011404013'
CLEAR    DC    X'C71140403C4040001140401D4013'
         DC    X'401DE8'
HEADING  EQU   *
     DC  CL79'    JOB     STEP   P MEMORY   WSS  T LOC DP  PG  SC     WX
               MR   SRV     CPU   DMN'                           AMDAHL
BUFFER   DC    20CL79' '                                         AMDAHL
WARNLINE DC    CL79' '                                           AMDAHL
INPTLINE DC    CL79' '                                           AMDAHL
BUFLEN   EQU   *-BUFFER                                          AMDAHL
LENGTH   EQU   BUFFER-CLEAR
Z        DS    X
ENTER    DC    C'ENTER:'                                         AMDAHL
TDCBADDR DC    A(0)                                              AMDAHL
         LTORG ,                                                 AMDAHL
SCR1     SFMT                                                    AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79                                                AMDAHL
         FIELD 79,ALPHA,INTEN=HI,CURSOR=AFTER                    AMDAHL
         SFEND
IOCB     IOCB
         EJECT
         TDCB
         TITLE 'C H I M P  - MVS ASCB DSECT DEFINITION'
         IHAASCB
         TITLE 'C H I M P  - MVS OUCB DSECT DEFINITION'
         IRAOUCB
         TITLE 'C H I M P  - MVS CSCB DSECT DEFINITION'
CSCB     DSECT
         IEECHAIN
         END   CHIMP
