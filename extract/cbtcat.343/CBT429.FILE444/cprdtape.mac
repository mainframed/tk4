CPRDTAPE        CSECT
* EXCP-LEVEL MAGNETIC TAPE READ/WRITE/CONTROL ROUTINES
        PRINT   ON,NOGEN
* SUBROUTINE ENTRY POINTS AND INPUT/OUTPUT PARAMETERS
*
*       CPRDOPEN - TO OPEN THE TAPE DATA SET
*       CPROPN IS AN ALTERNATE ENTRY POINT NAME FOR THIS OPERATION
*        ANSWER (,DDNAME) INPUT TO ROUTINE. DDNAME DEFAULTS TO 'READIN'
*         IF (,DDNAME) IS OMITTED.  IF SUPPLIED, IT MUST BE A
*         CHARACTR STRING OF EIGHT BYTES, THE FIRST OF WHICH IS
*         ALPHABETIC (JUST LIKE THE DDNAME OF
*        THE JCL STATEMENT FOR THE INPUT TAPE).
*       CPRDCLS - TO CLOSE THE INPUT TAPE DATA SET.
*       CPRCLS IS AN ALTERNATE ENTRY NAME. NO PARAMETRS REQUIRED.
*       CPRD - READ ONE PHYSICAL BLOCK. ANSWER, DATA, COUNT
*       CPRDB - READ BACKWARDS. ANSWER, DATA, COUNT
*       CPSKRD - READ A BLOCK, SKIPPING SOME BYTES AT FIRST
*            ANSWER, DATA, COUNTS
*       CPFSF - FORWARD  SPACE  FILE.  ANSWER
*       CPBSF - BACKSPACE  ONE  FILE.  ANSWER
*       CPFSB - FORWARD SPACE ONE BLOCK.  ANSWER
*       CPBSB - BACKWARD SPACE ONE BLOCK. ANSWER
*       CPREW - REWIND TAPE.  ANSWER
*
* THE PARAMETER "ANSWER" IS FIVE WORDS, "COUNT(S)" ONE TO THREE
* WORDS. FIRST "COUNT" IS THE NUMBER OF BYTES READ, SECOND (IF MORE
* THAN ONE WORD IN ARRAY) IS NUMBER OF BYTES TO SKIP BEFORE READING,
* THIRD IS NUMBER TO READ AFTER SKIPPING.  "DATA" IS THE ADDRESS OF
* THE AREA TO HOLD THE DATA TO BE READ.  SINCE THE BACKWARDS READS
* PLACE THE DATA IN STORAGE IN DESCENDING ORDER OF ADDRESSES, THE
* ADDRESS USED FOR THOSE CALLS SHOULD BE THE END, NOT THE BEGINNING
* OF THE BUFFER IN MEMORY.  THE LIMIT FOR "COUNT" FOR DATA TRANSFER
* IS NINE (9) CCW'S OF 65K EACH, OR A TOTAL OF 589815 BYTES FOR ANY
* COMBINATION OF READS AND SKIPS (SKIP PLUS READ CAN'T BE MORE THAN
* 9*65K).
*
* THE FIRST WORD IN THE ANSWER ARRAY IS A PARTIAL COMPLETION
* INDICATOR WITH THE FOLLOWING MEANINGS:
*       0 = REQUEST WAS APPARENTLY SUCCESSFUL
*      -1 = EOF ENCOUNTERED ON READ  (EOT ON A WRITE, LOOK THERE)
*      -2 = DATA CHECK. JUST WHAT THE HARDWARE RETURNED AS STATUS
*      -3 = HARDWARE FAILURE.  SOMETHING REALLY SCREWED UP
* THE THIRD WORD IS A COUNT OF THE BYTES ACTUALLY READ FROM THE TAPE.
* THE FOURTH AND FIFTH WORDS CONTAIN THE UNIT STATUS BYTES AND SENSE
* BYTES RETURNED BY THE CHANNEL AND IOS IN CASE OF ERRORS.
* A 1 IN THE FIRST WORD OF ANSWER MEANS THE DCB COULD NOT BE OPENED
* FOR WHATEVER DDNAME WAS USED TO REQUEST THE TAPE AT HAND.
*
* ABEND CODES POSSIBLE:
*       44 = UNDECIPHERABLE ERROR STATUS ON READ
*       46 = MORE THAT 9 CCW'S REQUIRED FOR READ
*       56 = MORE THAT 9 CCW'S REQUIRED FOR READ BACKWARD
*       66 = MORE THAN 9 CCW'S REQUIRED FOR SKIP/READ COMBINATIONS
*
* NOTA BENE:
*       THIS ROUTINE CONSTRUCTS FORMAT 0 CCW'S ONLY, AND USES A
*       STANDARD O/S IOB; IT WILL NOT WORK UNDER ESA AS DEFINED BY
*       THE PRINCIPLES OF OPERATION MANUAL FOR MACHINES RUNNING IN
*       THAT MODE. IF IT IS TO BE USED UNDER ESA, THE APPROPRIATE
*       CONTROL BLOCKS MUST BE BUILT/USED AND POSSIBLE FORMAT 1
*       CCW'S CONSTRUCTED.
*
        ENTRY   CPRDOPEN,CPRDCLS,CPFSF,CPBSF,CPRD,CPRDB,CPREW
        ENTRY   CPROPN,CPRCLS
        ENTRY   CPFSB,CPBSB,CPSKRD,CPSKBR
*
CPRD    STM     14,12,12(13) READ ONE PHYSICAL BLOCK FORWARD DIRECTION
        LR      12,15        DO CHAIN OF SA'S, SET GPR12 AS BASE ALWAYS
        USING   CPRD,12
        USING   ANSWER,11    USER'S INFO/ERROR STORE AREA
        USING   IHADCB,9     FUNKY PLACES IN THE DCB FROM IOS
        BAL     15,COMENTRY  PERFORM ALL COMMON SETUP/ENTRY STUFF
        LM      2,3,4(1)     2=@DATA, 3=@COUNT
        LA      2,0(,2)      ZERO HIGH ORDER BYTE FOR FORMAT 0 CCW ADDR
        L       4,ACCWD
        ST      4,ACCW2      MONSTER ADDRESS (24-BIT)
        LA      4,1(,0)      SET TO INCREMENT BLOCK COUNT IN IOB 4 O/S
        STH     4,IOBRDBCI   CHUNK TO IOB FIELD
        LA      4,9(,0)      COUNT FOR MAX CCW'S TO BE BUILT
        MVI     IOBRD,X'02'  NOT CD OR CC - NO RELATED CCW'S ASSUMED
        L       3,0(,3)      3=VAL(COUNT) - BYTES TO READ FROM TAPE
CPRDLOOP CR     3,5          MORE THAN 65K TO READ FROM TAPE?
        BC      12,CPRDLAST    LAST CCW TO BE CONSTRUCTED
        OI      IOBRD,X'80'  TURN ON DATA CHAINING IN IOB
        L       8,RDN        1ST HALF OF A CCW TO READ 65K
        OR      8,2          CHAIN ADDRESS PORTION OF CCW
        ST      8,0(,6)        INTO CCW ARRAY
        L       8,RDN+4      BUILD 2ND HALF OF CCW
        ST      8,4(,6)        & IT, TOOM TO THE CCW ARRAY
        SR      3,5          DECREMENT REQUESTED BYTE COUNT
        LA      6,8(,6)      INCREMENT CHANPROG ARRAY POINTER
        AR      2,5          INCREMENT DATA POINTER BY 65K
        BCT     4,CPRDLOOP   BUILD ANOTHER IF POSSIBLE
        ABEND   46,DUMP,STEP  TRIED TO BUILD TOO MANY CCW'S
*
CPRDLAST L      8,RDF        LAST CCW TO BUILD FOR READ
        OR      8,2
        ST      8,0(,6)      @DATA INTO THAT CCW
        L       8,RDF+4      SET TO BUILD ND HALF OF CCW
        OR      8,3          VAL(COUNT) INTO LAST CCW (OR ONLY)
        ST      8,4(,6)
        LA      8,10(,0)     CALC HOW MANY CCW'S
        SR      8,4
        ST      8,NUMCCW
        BAL     10,EXCPR     GO EXECUTE THE CP(S) BUILT
*
CPRDLST1 C      1,FM2        IF HW FAILURE, CLEAR TRANSFERRED COUNT
        BC      4,CLEAR
        L       2,IOBRDCSW   PICK UP PART OF CHANNEL STATUS WORD
        LA      2,0(,2)      ZERO (CLEAR) HIGH-ORDER BYTE
        S       2,F8         POINT TO LAST CCW USED
CPRDLST LR      3,2
        L       1,IOBRDCSW+4  GET CSW FROM LAST CCW USED
        N       1,MASK       ZERO ALL BUT BYTE COUNT BITS
        LA      6,CP         POINT TO BEGINNING OF CCW CHAIN
        SR      3,6
        SRA     3,3(0)       EXECUTED CCS'S - 1
        MR      4,3          R5 = BYTES EXCEPT LAST CCW USED
        L       4,4(,2)      BYTE COUNT FROM PARTIALLY USED CCW
        N       4,MASK       BYTES POSSIBLE IN LAST CCW
        SR      4,1
        AR      4,5
        ST      4,APARTIAL   FINAL COUNT OF BYTES READ TO USER AREA
        LA      4,1(,0)
        ST      4,APART
*
RETURN  L       13,SAVERD+4  COMMON EXIT FOR ALL FUNCTIONS
        LM      14,12,12(13) STANDARD O/S CONVENTION
        MVI     12(13),X'FF'  MAY BE A LIE, BUT SAY BEEN HERE
        BCR     15,14        N.B: NOT!!! ESA CONVENTION
        SPACE   3
CPSKRD  STM     14,12,12(13)  FORWARD READ AFTER SKIP ROUTINE
        USING   CPSKRD,15
        L       12,ACPRD     GRAB REAL BASE ADDRESS
        DROP    15
        BAL     15,COMENTRY  PERFORM SA CHAIN, ETC.
        LM      2,3,4(1)       @DATA, @3-WORD COUNT ARRAY
        LA      2,0(,2)      MAKE 24-BIT ADDR. VALUE
        LA      4,1
        STH     4,IOBRDBCI   BLOCK COUNT INCREMENT
        LA      4,10         MAX # CCW'S (9 IF NOT SKIPPING)
        MVI     IOBRD,X'82'  ALWAYS HAVE DATA CHAIN IF SKIPPING
        L       7,4(,3)      VAL(SKIP COUNT)
*
CPSKLP1 CR      7,5          MORE THAT 65K?
        BC      12,CPSKLAST  NO, BUILD LAST CCW
        L       8,RDN        START WITH SKELETON ORDINARY READ
        OR      8,2          R8:=@DATA SAME CELL
        ST      8,0(,6)
        L       8,RDN+4      MAKE R8:=FLAGS, 65K COUNT
        ST      8,4(,6)
        MVI     4(6),X'B0'   SET CD, SLI AND SKIP FLAGS IN CCW
        SR      7,5          SKIP CT := SKIP CT - 65K
        LA      6,8(,6)      CP PTR := CP PTR + 8 (WALK THE ARRAY)
        BCT     4,CPSKLP1    TRY TO BUILD ANOTHER CCW
CPSKBABE ABEND  66,DUMP,STEP    TOO MANY CCW'S NEEDED
*
CPSKLAST L      8,RDF        LAST FRAGMENT TO SKIP
        OR      8,2          R8 := @DATA (SAME CELL)
        ST      8,0(,6)
        L       8,RDF+4
        OR      8,7          R8 := FLAGS, FRAG COUNT
        ST      8,4(,6)
        MVI     4(6),X'B0'   SET ALL THOSE FLAGS ALSO
        L       3,8(,3)      VAL(COUNT TO READ) AFTER SKIP
        LA      6,8(,6)      NEXT PLACE IN CCW LIST
        B       CPRDLOOP     AND GO TREAT AS STRAIGHT READ FROM HERE ON
*
        SPACE   3
CPRDB   STM     14,12,12(13) READ BACKWARDS FUNCTION
        USING   CPRDB,15
        L       12,ACPRD
        DROP    15
        BAL     L5,COMENTRY  PERFORM STANDARD SA CHAIN, ETC.
        LM      2,3,4(1)       @DATA, @COUNT
        LA      2,0(,2)      FORM 24-BIT ADDRESS VALUE
        L       4,ACCWD
        ST      4,ACCW2
        LA      4,1(,0)
        STH     4,IOBRDBCI   SET TO INCREMENT BLOCK COUNT
        LA      4,9(,0)      MAX # CCW'S TO BUILD
        MVI     IOBRD,X'02'  NOT CD OR CC - NO RELATED CP'S
        L       3,0(,3)      VALUE (COUNT) BYTES TO READ
*
BRDLOOP CR      3,5          ARE WE FIXED TO READ ENOUGH?
        BC      12,BRDLAST   BIF CAN GO CONSTRUCT LAST CCW
        OI      IOBRD,X'80'  TURN ON CHAINING BIT IN IOB
        L       8,RDB        GET BACKWARD, CHAINING READ CCW
        OR      8,2          MAKE DATA ADDRESS
        ST      8,0(,6)        AND INTO THE CCW CHAIN
        L       8,RDB+4
        ST      8,4(,6)
        SR      3,5          DECREMENT AMOUNT TO READ BY 65K
        LA      6,8(,6)      INCREMENT PTR TO CCW CHAIN AREA
        SR      2,5          DECREMENT ADDRESS TO WHERE TO READ INFO
        BCT     4,BRDLOOP      & GO BUILD SOME MORE CCW'S
        ABEND   56,DUMP,STEP   TOO MANY CCW'S REQUIRED
*
BRDLAST L       8,RDBF       LAST CCW TO BUILD INTO CHAIN OF THEM
        OR      8,2          FIX UP FINAL CCW DATA ADDRESS
        ST      8,0(,6)
        L       8,RDBF+4     FIX FINAL BYTE COUNT IN THAT CCW
        OR      8,3          R8 := FLAGS, FRAGMENT COUNT
        ST      8,4(,6)       TO CP ARRAY
        LA      8,10(,0)     MAX + 1 #CCW'S
        SR      8,4          CALCULATE MAX USED
        ST      8,NUMCCW     SAVE FOR POSS. LATER USE
        LA      10,CPRDLST1  POINT TO STANDARD RETURN PROCESSOR
        B       EXCPR          & GO EXECUTE THE CP(S)
        SPACE   3
CPSKBR  STM     14,12,12(13) BACKWARD SKIP AND READ FUNCTION
        USING   CPSKBR,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STANDARD CHAIN SA'S ETC.
        LM      2,3,4(1)       @DATA, @3-WORD COUNT ARRAY
        LA      2,0(,2)      24-BIT ADDRESS FOR CCW ADDRESS FIELDS
        LA      4,1
        STH     4,IOBRDBCI   BLOCK COUNT INCREMENT
        LA      4,10         MAX # CCW'S IF SKIPPING
        MVI     IOBRD,X'82'  ALWAYS CHAINING IF SKIPPING
        L       7,4(,3)      SKIP COUNT VALUE
SPSKBL1 CR      7,5          MORE THAT 65K?
        BC      12,CPSKBLST  NO, JUST GO BUILD LAST IN SKIP CHAIN
        L       8,RDB        SKELETON READ BACKWARD CCW
        OR      8,2
        ST      8,0(,6)      FIRST HALF OF A CCW BUILT
        L       8,RDB+4
        ST      8,4(,6)      SKIP 65K WITH EACH CCW
        MVI     4(6),X'B0'   CD, SLI, SKIP FLAGS GET TURNED ON
        SR      7,5          DECREMENT SKIP VALUE COUNT
        LA      6,8(,6)      NEXT IN ARRAY OF CCW'S TO BUILD
        BCT     4,CPSKBL1      (IF WE CAN)
CPSKBRAB ABEND  66,DUMP,STEP  TOO MANY CCW'S REQUIRED
*
CPSKBLST L      8,RDBF       LAST FRAGMENT OF 65K TO SKIP
        OR      8,2
        ST      8,0(,6)
        L       8,RDBF+4
        OR      8,7          COUNT VALUE
        ST      8,4(,6)
        MVI     4(6),X'B0'   SET CD, SLI, SKIP FLAGS FOR IT TOO
        L       3,8(,3)      VALUE OF READ DATA AFTER SKIP COUNT
        LA      6,8(,6)      NEXT SPOT IN CP ARRAY
        B       BRDLOOP      AND PROCESS AS ORDINARY BACKWARD READ
*
***** END OF READ FUNCTIONS OF EXCP ROUTINES *****
*
CPFSF   STM     14,12,12(13) FORWARD SPPPACE FILE CONTROL FUNCTION
        USING   CPFSF,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STNDARD CHAIN SA'S, ETC.
        LD      0,FSF        MOVE PROPER FORWARD SP. FILE CCW
        STD     0,CP         TO EXECUTED ARRAY OF CHAN.CMDS
        LA      9,DCBRD      @IHADCB DSECT
        SR      4,4          MUST CLEAR BLOCK COUNT IN DCB
        ST      4,DCBBLKCT
        STH     4,IOBRDBCI   & NO INCREMENT IN IOB
        MVI     IOBRD,X'02'
        BAL     10,EXCPR     GO DO THE DIRTY WORK
        SPACE   3
CLEAR   SR      2,2          COMMON EXIT FOR SPACING, H/W ERRORS
        ST      2,APARTIAL
        LA      2,1(,2)
        ST      2,APART      SET PARTIAL. COMP. IND. TO CALLER
        B       RETURN       REST IS ALL THE SAME
        SPACE   3
COMENTRY LR     2,13         COMMON ENTRY PROC; CHAIN SA'S ETC.
        LA      L3,SAVERD
        ST      13,8(,2)
        ST      2,SAVERD+4
        L       11,0(,1)     SET BASE FOR USER'S ANSWER ARRAY
        L       5,MAX        COMPARAND REG FOR LIMIT ON CCW COUNTS
        LA      6,CP         ALWAYS BASE OF CP ARRAY (ACTIVE CCW'S)
        BR      15           BACK TO WHATEVER MAINLINE CODE
        SPACE   3
CPBSF   STM     14,12,12(13) BACKSPACE ONE FILE FUNCTION
        USING   CPBSF,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY
        LD      0,BSF        USE FPR TO MOVE CCWS
        STD     0,CP
        LA      9,DCBRD      @IHADCB TO KEEP IOS HAPPY
        SR      4,4
        ST      4,DCBBLKCT   CLEAR FIELD IN DCB
        STH     4,IOBRDBCI     AND IN INCR. FIELD IN IOB
        MVI     IOBRD,X'02'  NOT CD OR CC - NO RELATED CHANNEL PROGS
        LA      10,CLEAR     SET RETURN TO THERE, NOT HERE
        B       EXCPR        GO DO IT TO THE TAPE
        SPACE   3
CPFSB   STM     14,12,12(13) FORWARD SPACE BLOCK FUNCTION
        USING   CPFSB,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STANDARD CHAINS, ETC.
        LA      4,1(,0)      SET BLK.INCR. IN IOB
        STH     4,IOBRDBCI
        MVI     IOBRD,X'02'  NO RELATED CP'S TO IOB
        LD      0,FSB
        STD     0,CP         PLUG IN THE RIGHT CCW TO THE ARRAY
        LA      10,CLEAR     SAY COME BACK THERE
        B       EXCPR        GO PERFORM FUNCTION
        SPACE   3
CPBSB   STM     14,12,12(13) BACKSPACE ONE BLOCK FUNCTION
        USING   CPBSB,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STANDARD HOUSEKEEPING
        L       4,FM1        GET A NEGATIVE ONE
        STH     4,IOBRDBCI   FOR BLOCK INCREMENT (DECREMENT)
        MVI     IOBRD,X'02'  SAY NO RELATED CP
        LD      0,BSB        CCW TO BACKSPACE A RECORD
        STD     0,CP
        LA      10,CLEAR     COME BACK THERE TO FINISH
        B       EXCPR        GO DO THE I/O STUFF
*
        SPACE   3
CPREW   STM     14,12,12(13) REWIND TO BOT MARKER ON PHYSICAL TAPE
        USING   CPREW,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STANDARD HOUSEKEEPING
        LA      9,DCBRD      @IHADB
        SR      4,4          SET TO CLEAR ALL BLOCK COUNTS
        ST      4,DCBBLKCT   IN DCB FIELD
        STH     4,IOBRDBCI   AND SAY NO INCREMENT IN IOB
        MVI     IOBRD,X'02'  SAY NO RELATED CHAN PROGS
        LD      0,REW
        STD     0,CP         MAKE REWIND TAPE CHAN. CMD.
        LA      10,CLEAR     COMMON END PROCESSING
        B       EXCPR
*
        SPACE   3
CPRDOPEN STM    14,12,12(13) OPEN THE INPUT TAPE DCB
CPROPN  EQU     CPRDOPEN     FORTRAN WON'T ALLOW 8 CHARACTER NAMES
        USING   CPRDOPEN,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  STANDARD HOUSEKEEPING
        LA      9,DCBRD      @IHADCB
        OI      DCBIFLG,X'0C' SET SO DON'T DO ERROR RCVRY IN IOS WE DO!
        SR      5,5          TO CLEAR DCBBLKCT, AIER
        LTR     11,11        ONLY ONE ITEM IN CALL PARMLIST?
        BC      4,DEFAULT    ONLY ONE ARG, USE DEFAULT DDNAME
        L       2,4(,1)      GET @NAME SUPPLIED FOR DDNAME
OPN2    MVC     DCBDDNAM(8),0(2)  MOVE WHATEVER TO DCB DDNAME FLD
        OPEN    (DCBRD,(INPUT))
        TM      DCBOFLGS,X'10'  DID OPEN SUCCEED?
        BC      8,OPNE          BIF IT FAILED FOR SOME REASON
        ST      5,DCBBLKCT      BLOCK COUNT TO ZERO
        OI      DCBIFLGS,X'0C'  AGAIN SET NO IOS ERROR RECOVERY TRIES
OPN3    ST      5,AIER          RETURN WHATEVER STATUS OF OPEN
        B       RETURN
OPNE    LA      5,1(,0)         TELL USER OPEN FAILED
        B       OPN3            NOT MUCH ELSE CAN SAY OR DO
DEFAULT LA      2,DFLTDDNM   POINT TO 'READIN  ' FOR DCB INPUT DDNAME
        B       OPN2
*
        SPACE   3
CPRDCLS STM     14,12,12(13) CLOSE INPUT TAPE DCB
CPRCLS  EQU     CPRDCLS      AND ALTERNATE FORTRAN-USABLE NAME
        USING   CPRDCLS,15
        L       12,ACPRD
        DROP    15
        BAL     15,COMENTRY  PERFORM STANDARD HOUSEKEPING
        CLOSE   DCBRD
        B       RETURN       AND THAT'S ALL THERE IS TO THAT!
*
        SPACE   3
EXCPR   SR      1,1          ACTUALLY USE SOME CCW'S TO DO WORK!
        ST      1,ECBRD      MAKE ECB SAY "NOT BUSY"
        LA      9,DCBRD      @IHADCB FOR SURE
        EXCP    IOBRD        REQUEST EXECUTION OF CP(S)
*
        WAIT    ECB=ECBRD    HANG AROUND FOR COMPLETION OF REQUEST
        CLI     ECBRD,X'7F'  EQUAL SAYS REQUEST DONE AOK
        BC      8,EXCPR6     - NORMAL EXIT, NO PROBLEMS
        TM      IOBRDCSW+4,X'0C'  CHANNEL AND DEVICE END?
        BC      1,EXCPR2          YES, BOTH HAPPENED
EXCPR1  L       1,FM3        NO, SET TOSHOW HARDWARE FAILURE
        B       EXCPR7       GO POST WHATEVER
EXCPR2  TM      IOBRDCSW+4,X'04'  UNIT CHECK?
        BC      8,EXCPR4          NONE DETECTED
*  OK, SO WHAT MAY HAVE HAPPENED?
        TM      IOBRD+2,X'F7'     EQUIPMENT MALFUNCTION?
        BC      5,EXCPR1          AFRAID SO
*
        TM      IOBRD+2,X'08'     DATA CHECK?
        BC      8,EXCPR3     NO, LOOKS OK
        L       1,FM2        SET TO SHOW DATA CHECK
        ST      1,AIER       & POST RETURN CODE IN ANSWER ARRAY
*
***** A SENSE TO OBTAIN 5 SENSE BYTES FOR ANALYSIS OF A DATA ERROR
*
        SR      1,1
        ST      1,ECBRD      RESET ECB TO NON-BUSY STATUS
        ST      1,ASTATUS    CLEAR USER'S ANSWER AREA
        ST      1,ASTATUS+4      *
        MVC     ASTATUS(1),IOBRDCSW+4  STATUS BYTE
        MVC     OLDCSW(8),IOBRDCSW     SAVE READ CSW
        LD      0,SENSE           BUILD NEW CP FOR SENSE COMMAND
        STD     0,CP
        LA      1,ASTATUS+1-ANSWER(11) ADDR FOR 5 STATUS BYTES
        O       1,CP
        ST      1,CP         SET ADDRESS IN CP
        MVI     IOBRD,X'02'  SAY NO RELATED CHAN PROGS
        NI      DCBIFLGS,X'3F'  TURN OFF ERROR BITS, LEAVE REST ALONE
*
        EXCP    IOBRD        ISSUE THE SENSE CHANNEL CMD. WORD
        WAIT    ECB=ECBRD
        NI      DCBIFLGS,X'3F'  TURN OFF ERROR BITS AGAIN
        MVC     ASTATUS+6(1),IOBRDCSW+4  SENSE STATUS BYTE
        MVC     SENSECSW(8),IOBRDCSW     STORE SENSE CSW
        MVC     IOBRDCSW(8),OLDCSW       RESET READ CSW
        CLI     ECBRD,X'7F'              TEST FOR ADDITIONAL ERRORS
        BCR     8,10                     BRANCH IF NONE
        MVI     ASTATUS+7,X'03'   SAY NOT PERFECT COMPLETION OF SENSE
        BR      10                BACK TO WHOEVER CALLED THIS ROUTINE
*
EXCPR3  TM      IOBRD+3,X'08'   TEST FOR LOAD POINT IN CASE OF BSF, BSB
        BC      1,EXCPR5        OR A READ BACKWARDS.
*       NEVER SEE EOT REFLECTIVE MARKER ON READ FORWARD    *
        ABEND   44,DUMP,STEP    KILL IF IS UNDECIPHERABLE STUFF
*
EXCPR4  TM      IOBRDCSW+4,X'01'         UNIT EXCEPTION?
        BC      1,EXCPR5                 BRANCH IF SO
*
        B       EXCPR6     NOT PERFECT COMPLETION, BUT NO ERRS NOW
EXCPR5  L       1,FM1        SET TO SHOW EOF (TM) ENCOUNTERED
        B       EXCPR7
EXCPR6  SR      1,1
EXCPR7  ST      1,AIER       WHATEVER BACK TO USER'S ANSWER ARRAY
        NI      DCBIFLGS,X'3F'           CLEAR EXCEPTION BITS IN DCB
        MVC     ASTATUS(1),IOBRDCSW+4    SENSE BITS IF UNIT CHECK
        MVC     ASTATUS+1(2),IOBRD+2
        BR      10
*
        EJECT
ACPRD   DC      A(CPRD)    BASE ADDRESS FOR ALL INTERNAL ROUTINES
SAVERD  DS      9D         STANDARD OS SAVE AREA FOR GPRS
CP      DC      10D'0'     STRING FOR ALL THE CCWS WE MAY BUILD
FM1     DC      F'-1'      CONSTANTS FOR VARIOUS USES
FM2     DC      F'-2'
FM3     DC      F'-3'
F8      DC      F'8'
MASK    DC      XL4'0000FFFF'    A HALF-WORD FILTER
MAX     DC      F'65535'         MOST BYTES CCW CAN HAVE IN COUNT FLD
NUMCCW  DC      F'0'             HOW MANY CCWS IN CHAIN
DFLTDDNM DC     CL8'READIN  '    DEFAULT DDNAME FOR INPUT TAPE IN JCL
ACCW2   DC      A(0)
ACCW3   DC      A(0)
ACCWD   DC      A(16777215)
*
***** CONTROL BLOCKS FOR READ OPERATIONS *****
*
ECBRD   DC      F'0'             EVENT CONTROL BLOCK
IOBRD   DC      F'0'             IOB FOR READS
        DC      A(ECBRD)         @ECB FOR THIS IOB
IOBRDCSW DC     2F'0'            SLOTS FOR CHANNEL STATUS WORDS
IOBRDACP DC     A(CP)            ADDR. OF CHANNEL PROGRAM ARRAY
IOBRDDCB DC     A(DCBRD)         ADDRESS OF THE DCB WE USE
        DC      F'0'             IOBRESTR (PURGE CHAIN/CCHH/COMMAND,
*                                  CHANPROG)
IOBRDBCI DC     H'1'             BLOCK COUNT INCREMENT
IOBRDECT DC     H'0'             ERROR COUNTS
SENSECSW DS     2F           CSW FOR THE SENSE CMD WE MAY HAVE USED
*
OLDCSW  DS      2F           CSW FOR READ WHILE DOING SENSE (HOLDER)
*
***** SKELETON CHANNEL COMMAND WORDS *****
*
RDN     DC      X'02'        READ CMD FOR TAPE UNIT (MAX COUNT)
        DC      AL3(0)       SKELETON READ ADDRSS FOR DATA
        DC      X'A0'        CD, SLI FLAG BITS
        DC      AL3(65535)   MAX CCW DATA COUNT FIELD
*  NOTE THAT THE MAXIMUM TRANSFER COUNT IS X'FFFF',  -NOT - 7FFF !!!
RDF     DC      X'02'        MT READ, SKEL. ADDR, BYTE COUNT
        DC      AL3(0)       DATA ADDRESS
        DC      X'20'        SLI BIT ONLY
        DC      AL3(0)       VALID COUNT WILL BE BUILT FOR THIS
RDB     DC      X'0C'        READ BACKWARDS COMMAND
        DC      AL3(0)       @DATA
        DC      X'A0'        CD, SLI FLAG BITS
        DC      AL3(65535)   MAX DATA COUNT
RDBF    DC      X'0C'        TAPE READ BACKWARDS, SKEL. CNT.
        DC      AL3(0)       DATA ADDRESS SKELETON
        DC      X'20'        SLI BIT
        DC      AL3(0)       SKEL BYTE COUNT
FSF     DC      X'3F'        CONTROL- FORWARD SPACE FILE MARK
        DC      AL3(CP)      DUMMY, BUT CCW MUST HAVE ADDR VALUE
        DC      X'20'        SLI BIT ONLY
        DC      AL3(1)       CHAN REQUIRES MIN 1 BYTE COUNT
BSF     DC      X'2F'        CONTROL - BACKSPACE ONE FILE MARK
        DC      AL3(CP)      AGAIN, JUST A REQUIRED NONSENSE
        DC      X'20'        SLI BIT ONLY
        DC      AL3(L)       CHANNEL REQUIREMENT
FSB     DC      X'37'        CONTROL - FORWARD SPACE ONE BLOCK
        DC      AL3(CP)      DUMMY
        DC      X'20'        SLI
        DC      AL3(1)       CHAN. REQUIREMENT
BSB     DC      X'27'        CONTROL - BACKSPACE ONE PHYSICAL BLOCK
        DC      AL3(CP)      DUMMY
        DC      X'20'        SLI
        DC      AL3(1)       CHAN REQUIREMENT
SENSE   DC      X'04'        CONTROL/QUERY - SENSE COMMAND
        DC      AL3(0)
        DC      X'20'        SLI
        DC      AL3(5)       REQUEST 5 SENSE BYTES FROM CHAN/DEVICE
REW     DC      X'07'        CONTROL - REWIND TAPE TO BOT
        DC      AL3(CP)      DUMMY
        DC      X'20'        SLI
        DC      AL3(1)       CHANNEL REQUIREMENT
*
***** INTERFACES TO O/S AND USER *****
*
DCBRD   DCB     MACRF=(E),DEVD=TA,DSORG=PS,IOBAD=IOBRD,DDNAME=NONE,
                                                    OPTCD=Z
* OPTCD=Z REQUESTS REDUCED ERROR RECOVERY
*
ANSWER  DSECT
AIER    DS      F            ERROR CODE FOR CALLER OF PACKAGE
APART   DS      F            PARTIAL COMPLETION INDICATOR
APARTIAL  DS    F            BYTES ACTUALLY READ FROM TAPE
ASTATUS DS      2F          UNIT STATUS AND SENSE BYTES
        DCBD    DSORG=PS,DEVD=TA
        END     CPRDTAPE
