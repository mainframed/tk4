LOG0MSG  TITLE ' - LOG A MESSAGE INTO THE ISPF LOG'
***********************************************************************
*    BOB ZIMMERMAN                                                    *
*    CNA INSURANCE                                                    *
*    (312) 822-5719                                                   *
*    LAST MODIFIED 8503                                               *
*                                                                     *
***********************************************************************
*                                                                     *
*    THIS PROGRAM ALLOWS THE USER TO LOG A MESSAGE IN THE ISPF LOG.   *
*    THIS IS HELPFUL IN TESTING. YOU ARE ABLE TO MARK YOUR LOG        *
*    DURING A TRACE. SEE THE INSTALLTION PDS FOR MEMBER LOGMSG.       *
***********************************************************************
         EJECT
LOG0MSG  CSECT
         ISPF  SET,LEVEL=1
***********************************************************************
*              STANDARD ENTRY CODE FOR RE-ENTRANT PROGRAM
*                 REGISTER 12 IS ONLY BASE REGISTER
***********************************************************************
         USING *,15                     TEMPORARY BASE REGISTER
         B     PASSLIT                  BRANCH AROUND LITERALS
         DC    C'LOG0MSG '              CSECT NAME
         DC    C'02/23/85 '             DATE WRITTEN
         DC    C'VERSION 1.1 '          VERSION NUMBER
         DC    C'&SYSDATE '             DATE ASSEMBLED
         DC    C'&SYSTIME '             TIME ASSEMBLED
PASSLIT  DS    0H
         STM   14,12,12(13)             SAVE CALLERS REGISTERS
         LR    11,1                     SAVE PARAMETERS PASSED
         LR    12,15                    REGISTER 12 IS BASE REGISTER
         DROP  15                       END TEMPORARY ADDRESSING
         USING LOG0MSG,12               PERMANENT ADDRESSING
         SPACE
         GETMAIN R,LV=WSLEN,SP=0        GET WORKING STORAGE AREA
         SPACE
         ST    1,8(13)                  SET FORWARD CHAIN IN SAVEAREA
         ST    13,4(1)                  SET BACKWARD CHAIN
         LM    13,1,8(13)               RESTORE CLOBBERED REGISTERS
         LR    2,1                      SAVE PARMS PASSED
         USING WORKSTOR,13              SETUP WORKING STORAGE
         SPACE 3
***********************************************************************
*              INITALIZATION SECTION:
*                   LOAD ISPLINK
*                   VDEFINE THE LOG MESSAGE AREAS (UMSG30 LMSG30)
***********************************************************************
         ISPF  LOAD                     LOAD THE ISPLINK MODULE
         SPACE
         CONTROL ERRORS,CANCEL          SET ISPF ERROR MODE
         SPACE
         VDEFINE '(UMSG30 UMSG31)',UMSG30,CHAR,24,MF=E
         SPACE
         VDEFINE '(LMSG30)',LMSG30,CHAR,78,MF=E
         SPACE 3
         VDEFINE '(LMSG31)',LMSG31,CHAR,78,MF=E
         SPACE
***********************************************************************
*              CHECK LOG MODE:
*                  IF ANY PARMS PASSED  - LOG THOSE PARMS AND EXIT
*                  IF NO PARMS PASSED -  DISPLAY PANEL TO GET DATA
***********************************************************************
         L     2,0(2)                   ADDRESS PARMS RECEIVED
         LH    3,0(2)                   GET LENGTH OF PARMS
         LA    2,2(2)                   BUMP TO POINT TO DATA
         LTR   3,3                      WERE ANY PARMS PASSED
         BZ    DISPLOOP                 IF NOT - DISPLAY PANEL
         LA    10,EXITPGM               EXIT PROGRAM AFTER LOGGING MSG
         SETMSG 'DTSM031'               LET USER KNOW LOG WORKED
         SPACE
         B     LOGLOOP                  GO WRITE MESSAGE
         SPACE 3
***********************************************************************
*              DISPLAY PANEL TO GET MESSAGE FOR LOGGING
*              IF PF3 HIT - EXIT
*              OTHERWISE - COPY VARIABLE LOGMSG TO LOG
*              LOG THE MESSAGE AND LOOP TO DISPLAY
***********************************************************************
DISPLOOP DS    0H
         DISPLAY 'LOGDMSG'              DISPLAY PANEL CALLED LOGDMSG
         SPACE
         LTR   15,15                    CHECK RETURN CODE
         BNZ   EXITPGM                  IF END COMMAND - EXIT
         VCOPY '(LOGMSG)',VCOPYLEN,LOGMSG,LOCATE,MF=E
         SPACE
         L     3,VCOPYLEN               GET LENGTH OF MESSAGE
         L     2,LOGMSG                 GET ADDRESS OF MESSAGE
         LA    10,DISPLOOP              SET LOOP ADDRESS
         SETMSG 'DTSM031'               LET USER KNOW LOG WORKED
         SPACE
         B     LOGLOOP                  GO LOG MESSAGE
         SPACE 3
***********************************************************************
*              THIS ROUTINE LOGS VARIABLE LENGTH MESSAGES
*              FIRST CHECK IF MESSAGE LENGTH IS ZERO
*              IF NOT - IS MESSAGE AT LEAST 78 BYTES
*                       IF YES LOG FIRST 78 BYTES AND BUMP
*              IF LESS- LOG WHAT REMAINS
***********************************************************************
LOGLOOP  DS    0H
         LTR   3,3                      IS LENGTH ZERO
         BZR   10                       IF SO EXIT
         C     3,=F'78'                 IS LENGTH 78
         BL    LOGLAST                  IF LESS BRANCH TO END ROUTINE
         MVC   LMSG30,0(2)              MOVE THE LONG MESSAGE
         LOG   'DTSM030'                LOG THE MESSAGE
         SPACE
         LA    2,78(2)                  BUMP PAST THESE 78 BYTES
         S     3,=F'78'                 REDUCE LENGTH BY 78
         B     LOGLOOP                  CONTINUE LOGGING
         SPACE
LOGLAST  DS    0H
         BCTR  3,0                      SUBTRACT 1 FROM MSG LENGTH
         MVC   LMSG30,SPACES            INIT MESSAGE TO SPACES
         MVC   LMSG30(*-*),0(2)         DUMMY MVC
         EX    3,*-6                    EXECUTE PREVIOUS MVS
         LOG   'DTSM030'                LOG THE MESSAGE
         SPACE
         BR    10                       RETURN
         SPACE 3
***********************************************************************
*              EXITPGM - EXIT PROGRAM SUBROUTINE
***********************************************************************
EXITPGM  VRESET ,                       DELETE ALL FUNCTION VARIABLES
         SPACE
         ISPF  DELETE                   DELETE ISPLINK MODULE
         SPACE
         LR    1,13                     GET ADDRESS FOR FREEMAIN
         L     13,WORKSTOR+4            GET CALLERS SAVE AREA
         FREEMAIN R,A=(1),LV=WSLEN,SP=0 FREE WORKING STORAGE
         SPACE
         SR    15,15                    SET RETURN CODE
         L     14,12(,13)               RESTORE RETURN ADDRESS
         LM    0,12,20(13)              RESTORE REMAINING REGISTERS
         MVI   12(13),X'FF'             FLAG AS RETURNED FOR SNAP SVC
         BR    14                       RETURN TO CALLER
         TITLE ' - WORKING STORAGE'
***********************************************************************
*              WORKING STORAGE
***********************************************************************
SPACES   DC    CL78' '                  LITERAL OF SPACES
UMSG30   DC    CL24'LOG MESSAGE REQUEST'
UMSG31   DC    CL24'MESSAGES LOGGED'
LMSG31   DC    CL78'YOUR REQUEST TO LOG MESSAGES TO THE ISPF LOG COMPLE*
               TED SUCCESSFULLY'
         SPACE
WORKSTOR DSECT                          WORKING STORAGE DSECT
SAVEAREA DS    18F                      PROGRAM SAVE AREA
         DS    0D                       DOUBLE WORD ALIGN
         SPACE
         ISPF  PARMS                    GENERATE WS FOR ISPF MACROS
         SPACE
VCOPYLEN DS    F                        LENGTH OF VCOPY
LOGMSG   DS    A                        ADDRESS OF LOGMSG VARIABLE
LMSG30   DS    CL78                     LONG ERROR MESSAGE
         DS    0D
WSLEN    EQU   *-WORKSTOR               LENGTH OF WORKING STORAGE
LOG0MSG  CSECT ,                        RESUME CSECT
         END   LOG0MSG
