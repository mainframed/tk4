TSO0     TITLE ' - ISPF/PDF REVISED TSO OPTION'
***********************************************************************
*   BOB ZIMMERMAN
*   CNA INSURANCE
*   (312) 822-5719
*   LAST MODIFIED 8503
***********************************************************************
*   THIS PROGRAM REPLACES THE CURRENT OPTION 6 DELIVERED WITH THE ISPF
*   FOR  MVS SYSTEMS.
*
*   THE SIGNIFICANT MODIFICATIONS TO THE IBM SCREEN ARE:
*      1)  THIS OPTION WILL REMEMBER THE LAST TSO COMMAND TYPED
*      2)  ALLOWS TWO DATA ENTRY LINES; ONE FOR ISPF AND ONE FOR TSO
*      3)  ALLOWS STACKING OF COMMANDS ON EITHER DATA ENTRY LINE
*      4)  THE 'CANCEL' PRIMARY COMMAND WILL NOT SAVE THE LAST TSO CMD
*          THE NEXT TO THE LAST COMMAND WILL BE SAVED
*      5)  WHEN STACKING TSO COMMANDS, IF A COMMAND ENDS WITH A
*          NON-ZERO RETURN CODE, THE USER WILL BE NOTIFIED AND
*          PROMPTED (DOES HE WANT TO CONTINUE OR NOT)
***********************************************************************
*    VERSION 2 MODIFICATIONS:                                         *
*        THIS FUNCTION, WHEN STARTING, WILL CHECK TO SEE IF A         *
*        VARIABLE IN THE SHARED POOL CALLED TSOSCMD, CONTAINS ANY     *
*        VALID DATA. IF IT DOES, IT WILL INVOKE THAT AS THE TSO       *
*        COMMAND IMMEDIATELY.                                         *
*        THIS IS DESIGNED TO MAKE USE OF THE TSOCMD COMMAND ENCLOSED  *
*        WITH THIS TAPE.                                              *
*                                                                     *
*    VERSION 2.1 AND 2.2 MODIFICATIONS:                               *
*        CLEANED UP PROBLEM OF SOME TSO COMMAND ERRORS WERE NOT       *
*        HIGHLIGHTED TO THE USER. THE CURSOR WOULD JUST REMAIN ON     *
*        THE TSO COMMAND LINE. NOW ALL ERRORS ARE CORRECTLY           *
*        DISPLAYED TO THE USER.                                       *
***********************************************************************
         EJECT
TSO0     CSECT
         ISPF  SET,LEVEL=1
***********************************************************************
*        STANDARD ENTRY CODE FOR A RE-ENTRANT PROGRAM
*                 REGISTER 12 IS ONLY BASE REGISTER
***********************************************************************
         USING *,15                     TEMPORARY BASE REGISTER
         B     PASSLIT                  BRANCH AROUND LITERALS
         DC    C'TSO0 '                 CSECT NAME
         DC    C'02/21/85 '             DATE WRITTEN
         DC    C'VERSION 2.2 '          VERSION
         DC    C'&SYSDATE '             DATE ASSEMBLED
         DC    C'&SYSTIME '             TIME ASSEMBLED
PASSLIT  DS    0H
         STM   14,12,12(13)             SAVE CALLERS REGISTERS
         LR    11,1                     SAVE PARAMETERS PASSED
         LR    12,15                    REGISTER 12 IS BASE REGISTER
         DROP  15                       END TEMPORARY ADDRESSING
         USING TSO0,12                  PERMANENT ADDRESSING
         SPACE
         GETMAIN R,LV=WSLEN,SP=0        GET WORKING STORAGE AREA
         SPACE
         ST    1,8(13)                  SET FORWARD CHAIN IN SAVEAREA
         ST    13,4(1)                  SET BACKWARD CHAIN
         LM    13,1,8(13)               RESTORE CLOBBERED REGISTERS
         USING WORKSTOR,13              SETUP WORKING STORAGE
         SPACE 3
***********************************************************************
*        INITALIZATION OF THE PROGRAM
*              1.  LOAD THE ISPLINK MODULE
*              2.  VDEFINE ALL VARIABLES
***********************************************************************
         ISPF  LOAD                     LOAD ISPLINK
         SPACE
         CONTROL ERRORS,                SET ISPF ERROR MODE            *
               RETURN                   IGNORE ANY RC OF 12 OR GREATER
         SPACE
         VDEFINE '(UMSG1)',             VARIABLE NAME                  *
               UMSG1,                   WORKING STORAGE ADDRESS        *
               CHAR,                    VARIABLE TYPE                  *
               24,                      LENGTH OF VARIABLE             *
               MF=E                     EXECUTE FORM OF MACRO
         SPACE
         VDEFINE '(LMSG1)',             VARIABLE NAME                  *
               LMSG1,                   WORKING STORAGE ADDRESS        *
               CHAR,                    VARIABLE TYPE                  *
               78,                      LENGTH OF VARIABLE             *
               MF=E                     EXECUTE FORM OF MACRO
         SPACE
         VDEFINE '(CMD1 CMD2 CMD3 CMD4 CMD5 CMD6 CMD7 CMD8 CMD9 CMD10 C*
               MD11 CMD12 CMD13 CMD14 CMD15 CMD16 CMD17 CMD18 CMD19 CMD*
               20 CMD21 CMD22 CMD23 CMD24 CMD25 CMD26)',               *
               TSOCMD,                  WORKING STORAGE ADDRESS        *
               CHAR,                    VARIABLE TYPE                  *
               255,                     LENGTH OF VARIABLE             *
               MF=E                     EXECUTE FORM OF MACRO
         TITLE 'CHECK FOR TSOSCMD COMMAND '
         VGET  '(TSOSCMD)',SHARED       IS VARIABLE IN SHARED POOL
         SPACE
         LTR   15,15                    CHECK RETURN CODE
         BNZ   PROCESS                  IF NOT KEEP GOING
         VCOPY '(TSOSCMD)',VCOPYLEN,TSOSCMD,LOCATE,MF=E
         SPACE
         L     2,VCOPYLEN               CHECK LENGTH OF DATA
         LTR   2,2                      WAS DATA RECEIVED
         BZ    PROCESS                  IF NONE KEEP GOING
         BCTR  2,0                      BUMP DOWN FOR MVC
         C     2,=F'254'                WAS DATA GREATER THAN 255
         BH    PROCESS                  IF SO BYPASS
         L     3,TSOSCMD                GET ADDRESS OF DATA
         CLC   0(0,3),SPACES            WAS SPACES FOUND
         EX    2,*-6                    COMPARE THE DATA
         BE    PROCESS                  IF SO BYPASS
         VREPLACE '(TSOTEXT)',VCOPYLEN,0(3),MF=E
         SPACE
         VREPLACE '(TSOSCMD)',1,SPACES
         SPACE
         VPUT  '(TSOSCMD)',SHARED
         SPACE
         CONTROL DISPLAY,LOCK
         SPACE
         TITLE 'DISPLAY PANEL AND ISSUE TSO COMMANDS'
***********************************************************************
*        DISPLAY PANEL TSOD
*        ISSUE EACH TSO COMMAND VIA ISPEXEC SELECT CMD
*        IF RETURN CODE NOT ZERO - PROMPT USER FOR WHAT TO DO
***********************************************************************
PROCESS  DS    0H
         DISPLAY 'TSOD',                PANEL NAME FOR DISPLAY IS TSOD *
               MESSAGE,                 MESSAGE FOR DISPLAY AT LABEL   *
               CURSOR,                  CURSOR FOR DISPLAY AT CURSOR   *
               MF=E                     EXECUTE FORM OF MACRO
         SPACE
         LTR   15,15                    WAS END COMMAND ENTERED
         BNZ   EXITPGM                  EXIT PROGRAM
         SPACE
         MVC   MESSAGE,SPACES           REINIT THE MESSAGE FIELD
         MVC   CURSOR,SPACES            REINIT THE CURSOR FIELD
         SPACE 3
***********************************************************************
*        REGISTER 3 WILL BE USED AS POINTER INTO TSO COMMAND TABLE
*        REGISTER 4 WILL BE USED TO COUNT THE NUMBER OF TABLE ENTRIES
***********************************************************************
         LA    3,TSOCMD                 POINT TO FIRST TSO COMMAND
         LA    4,26                     COUNT OF TSO COMMANDS
         SR    11,11                    SAVE RETURN CODE OF TSO CMDS
         SPACE
TSOLOOP  DS    0H
         CLC   0(255,3),SPACES          IS CURRENT COMMAND = SPACES
         BE    NEXTCMD                  BRANCH AROUND CMD CODE
         SPACE
         LTR   11,11                    CHECK RC FROM PREVIOUS CMD
         BZ    ISSUECMD                 IF ZERO - CONTINUE
         MVC   MSG(TPUTMSGL),TPUTMSG    INIT MESSAGE AREA
         CVD   11,DBLWORD               CVD THE RETURN CODE
         UNPK  MSG+TPUTMSGL(4),DBLWORD  UNPACK RETURN CODE
         OI    MSG+TPUTMSGL+3,X'F0'     UNSIGN THE FIELD
         TPUT  =C' ',1                  SPACE LINE
         SPACE
         TPUT  MSG,TPUTMSGL+4           WRITE ERROR MESSAGE
         SPACE
REISSUE  TPUTE 'ENTER "N" TO STOP -',PARMS=ASIS
         SPACE
         MVI   MSG,C' '                 INIT MSG TO SPACES
         TGET  MSG,75,,WAIT             GET ANSWER
         OI    MSG,X'40'                SET TO UPPERCASE
         CLI   MSG,C'N'                 WAS N ENTERED
         BE    PROCESS                  BRACH BACK TO LOOP
         CLI   MSG,C' '                 IS IT A SPACE
         BNE   REISSUE                  IF NOT - BAD RESPONSE
         TPUT  =C' ',1                  SPACE LINE
         SPACE
ISSUECMD SELECT 255,0(3),MF=E           ISSUE ISPEXEC SELECT CMD
         SPACE
         LR    11,15                    SAVE RETURN CODE
         C     11,=F'12'                WAS A BAD RETURN CODE ISSUED
         BL    NEXTCMD                  IF NOT - KEEP GOING
         VCOPY '(ZERRLM)',VCOPYLEN,UMSG1,LOCATE,MF=E
         SPACE
         CONTROL DISPLAY,SM,MF=E        SET ISPF LINE MODE ON
         SPACE
         L     1,UMSG1                  GET ADDRESS OF MESSAGE
         L     0,VCOPYLEN               GET ADDRESS OF MESSAGE
         TPUT  (1),(0)                  WRITE MESSAGE
         SPACE
         VREPLACE '(ZERRLM)',1,SPACES,MF=E
         SPACE
NEXTCMD  DS    0H
         LA    3,255(3)                 BUMP TO NEXT TSO CMD
         BCT   4,TSOLOOP                CHECK NUMBER OF TSO CMDS
         B     PROCESS                  REDISPLAY PANEL
         TITLE ' - EXITPGM - SUBROUTINE TO EXIT PROGRAM'
***********************************************************************
*        EXIT PROGRAM ROUTINE WILL
*              1.  DELETE ALL VDEFINE VARIABLES
*              2.  DELETE ISPLINK
*              3.  STANDARD EXIT CODE
***********************************************************************
EXITPGM  VRESET MF=E                    DELETE FUNCTION POOL VARIABLES
         SPACE
         ISPF  DELETE                   DELETE ISPLINK ADDRESS
         SPACE
         LR    1,13                     GET ADDRESS FOR FREEMAIN
         L     13,WORKSTOR+4            GET CALLERS SAVE AREA
         LR    10,15                    SAVE RETURN CODE
         FREEMAIN R,A=(1),LV=WSLEN,SP=0 FREE WORKING STORAGE
         SPACE
         LR    15,10                    GET RETURN CODE
         L     14,12(,13)               RESTORE RETURN ADDRESS
         LM    0,12,20(13)              RESTORE REMAINING REGISTERS
         MVI   12(13),X'FF'             FLAG AS RETURNED FOR SNAP SVC
         BR    14                       RETURN TO CALLER
         TITLE ' - WORKING STORAGE'
SPACES   DC    255C' '                  SPACE LITERAL
TPUTMSG  DC    C'PREVIOUS TSO COMMAND ENDED WITH CONDITION CODE '
TPUTMSGL EQU   *-TPUTMSG
         SPACE
***********************************************************************
*        WORKSTOR IS THE DSECT TO MAP GETMAIN AREA
*        REGISTER 13 IS USED AS WORKSTOR BASE
***********************************************************************
WORKSTOR DSECT                          WORKING STORAGE DSECT
SAVEAREA DS    18F                      PROGRAM SAVE AREA
         DS    0D                       DOUBLE WORD ALIGN
         SPACE
         ISPF  PARMS                    ISPF WORKING STORAGE
         SPACE
DBLWORD  DS    D
MESSAGE  DS    CL8                      MESSAGE FIELD FOR DISPLAY
CURSOR   DS    CL8                      CURSOR FIELD FOR DISPLAY
UMSG1    DS    CL24                     SHORT ISPF ERROR MESSAGE
LMSG1    DS    CL78                     LONG ISPF ERROR MESSAGE
MSG      DS    CL75                     TPUT/TGET MESSAGE AREA
VCOPYLEN DS    F                        LENGTH FIELD FOR VCOPY
TSOSCMD  DS    F                        ADDRESS OF COMMAND
TSOCMD   DS    26CL255                  TSO COMMANDS FROM DISPLAY
         DS    0D
WSLEN    EQU   *-WORKSTOR               LENGTH OF WORKING STORAGE
TSO0     CSECT ,                        RESUME CSECT
         SPACE
         END   TSO0
