*PROCESS;
 /*
   TITLE      -   TUTPRNT1

   FUNCTION   -   THIS PROGRAM DISPLAYS THE TUTORIAL PRINT OPTION PANEL

   SPECIFIER  -   CHRIS GERKEN
                  EXXON COMPANY, USA (EDPC)

   DEVELOPER  -   CHRIS GERKEN

   DATE       -   OCTOBER 10, 1984

   LANGUAGE   -   PLI

   PANVALET   -

   ENTRY      -   PLISTART

   LINKAGE    -   THIS PROGRAM IS SELECTED FROM AN SPF SELECT MENU

   EXT. REF.  -   ISPLINK

   DATA SETS  -   PDS'S CONTAINING ISPF PANEL DEFINITIONS

   SPF TABLES -   NONE

   SPF PANELS -   TUTPE010

   SPF MSGS   -   TUTP001

   UPDATES    -   NONE

 */
1TUTPRNT: PROC OPTIONS(MAIN);
0   DCL ISPLINK       EXTERNAL ENTRY OPTIONS(ASM RETCODE INTER),
        ISPEXEC       EXTERNAL ENTRY OPTIONS(ASM RETCODE INTER),
        PLIRETV       BUILTIN,
        RETCODD       FIXED BIN(31),
        RETCODE       FIXED BIN(31),
        LVAR          FIXED BIN(31);
0   DCL OPENED        BIT(1),
        LMINITED      BIT(1),
        EXIT          BIT(1),
        MEMBER        CHAR(8),
        TABLE         CHAR(8),
        MSGID         CHAR(8),
        FIELD         CHAR(8),
        DATAID        CHAR(8),
        TUTORTOP      CHAR(8),
        DSN           CHAR(46),
        ZENVIR        CHAR(32),
        NAMELIST      CHAR(100),
        BUFFER        CHAR(300),
        SUBSTR        BUILTIN;
0   DCL 1 LMINIT_BUF,
          2 COMMAND   CHAR(7)    INIT('LMINIT '),
          2 DATAID    CHAR(11)   INIT('DATAID(ID) '),
          2 PROJECT   CHAR(15)   INIT('               '),
          2 GROUP1    CHAR(14)   INIT('              '),
          2 GROUP2    CHAR(14)   INIT('              '),
          2 GROUP3    CHAR(14)   INIT('              '),
          2 GROUP4    CHAR(14)   INIT('              '),
          2 TYPE      CHAR(12)   INIT('            '),
          2 DSNAME    CHAR(14)   INIT('              '),
          2 DDNAME    CHAR(1)    INIT(' '),
          2 SERIAL    CHAR(1)    INIT(' '),
          2 ENQ       CHAR(9)    INIT('ENQ(SHR) ');
1   CALL ISPLINK('CONTROL ','ERRORS  ','RETURN  ');
0   LVAR = 8;
    CALL ISPLINK('VDEFINE ','(ZERRMSG) ', MSGID     ,'CHAR' , LVAR);
    CALL ISPLINK('VDEFINE ','(MEMBER)  ', MEMBER    ,'CHAR' , LVAR);
    CALL ISPLINK('VDEFINE ','(ID)      ', DATAID    ,'CHAR' , LVAR);
    CALL ISPLINK('VDEFINE ','(TUTORTOP)', TUTORTOP  ,'CHAR' , LVAR);
0   LVAR = 32;
    CALL ISPLINK('VDEFINE ','(ZENVIR)  ', ZENVIR    ,'CHAR' , LVAR);
0   LVAR = 46;
    CALL ISPLINK('VDEFINE ','(DSN)     ', DSN       ,'CHAR' , LVAR);
0   CALL GET_OPTIONS;
    IF ^EXIT
       THEN DO;
            LVAR = 14;
            BUFFER = 'CMD(%TUTPRINT)';
            CALL ISPLINK('SELECT  ', LVAR , BUFFER);
            END;
       ELSE;
0   CALL WRAPUP;
1GET_OPTIONS: PROC;
0   /*   WHAT ENVIRONMENT ARE WE RUNNING UNDER?                */
0   CALL ISPLINK('VGET    ','(ZENVIR)  ','SHARED  ');
    RETCODE = PLIRETV;
    IF RETCODE = 0
       THEN DO;
0           /* GET NAME(S) OF SOURCE DATA SET(S)         */
0           CALL ISPLINK('DISPLAY ','TUTPE010');
            RETCODE = PLIRETV;
            END;
       ELSE DO;
            CALL ISPLINK('SETMSG  ','TUTP017 ');
            RETCODE = 8;
            END;
    RETCODD = 8;
    LMINITED = '0'B;
    DO WHILE ((RETCODE = 0) & (RETCODD > 0));
       CALL LMINIT;
       IF RETCODD > 0
          THEN DO;
               CALL ISPLINK('DISPLAY ','        ', MSGID , FIELD);
               RETCODE = PLIRETV;
               END;
          ELSE;
       END;
0   IF LMINITED
       THEN DO;
            LVAR = 45;
            BUFFER = 'LMOPEN         DATAID(&ID)    OPTION(INPUT)  ';
            CALL ISPEXEC(LVAR , BUFFER);
            OPENED = '1'B;
            CALL ISPLINK('VPUT   ','(REMOT)' ,'SHARED  ');
            END;
       ELSE OPENED = '0'B;
0   EXIT = ^LMINITED × ^OPENED;
1LMINIT: PROC;
0   IF SUBSTR(DSN,1,1) = ' '
       THEN DO;
0           LMINIT_BUF.PROJECT = 'PROJECT(&PRJ1) ';
0           LMINIT_BUF.GROUP1 = 'GROUP1(&LIB1) ';
0           LVAR = 8;
            CALL ISPLINK('VCOPY   ','(LIB2)', LVAR , DSN ,'MOVE');
            IF LVAR > 0
               THEN LMINIT_BUF.GROUP2 = 'GROUP2(&LIB2) ';
               ELSE;
0           LVAR = 8;
            CALL ISPLINK('VCOPY   ','(LIB3)', LVAR , DSN ,'MOVE');
            IF LVAR > 0
               THEN LMINIT_BUF.GROUP3 = 'GROUP3(&LIB3) ';
               ELSE;
0           LVAR = 8;
            CALL ISPLINK('VCOPY   ','(LIB4)', LVAR , DSN ,'MOVE');
            IF LVAR > 0
               THEN LMINIT_BUF.GROUP4 = 'GROUP4(&LIB4) ';
               ELSE;
0           LMINIT_BUF.TYPE = 'TYPE(&TYP1) ';
            FIELD = 'PRJ1    ';
            END;
       ELSE DO;
            LMINIT_BUF.DSNAME = 'DATASET(&DSN) ';
            FIELD = 'DSN     ';
            END;
    LVAR = 126;
    CALL ISPEXEC (LVAR , LMINIT_BUF);
    RETCODD = PLIRETV;
0   IF RETCODD = 0
       THEN DO;
            LMINITED = '1'B;
            CALL ISPLINK('VPUT    ','(ID)','SHARED  ');
            END;
       ELSE LMINITED = '0'B;
0   IF RETCODD = 0
       THEN DO;
            CALL ISPLINK('LMOPEN  ', DATAID ,'INPUT   ');
            CALL ISPLINK('LMMLIST ', DATAID ,'LIST','D1 ');
            RETCODD = PLIRETV;
            IF RETCODE = 0
               THEN DO;
                    CALL ISPLINK('LMMFIND ', DATAID , TUTORTOP);
                    RETCODD = PLIRETV;
                    IF RETCODD > 0
                       THEN DO;
                            MSGID = 'TUTP001 ';
                            FIELD = 'TUTORTOP';
                            END;
                       ELSE;
                    END;
               ELSE;
            IF RETCODE = 0
               THEN CALL ISPLINK('LMMLIST ', DATAID ,'FREE');
               ELSE;
            CALL ISPLINK('LMCLOSE ', DATAID);
            END;
       ELSE;
0END LMINIT;
0END GET_OPTIONS;
1WRAPUP: PROC;
0   /*   WRAP UP THIS PROGRAM, CLOSE FILES, ETC.               */
0   IF OPENED
       THEN DO;
            LVAR = 30;
            BUFFER = 'LMCLOSE        DATAID(&ID)    ';
            CALL ISPEXEC(LVAR , BUFFER);
            END;
       ELSE;
0   IF LMINITED
       THEN DO;
            LVAR = 30;
            BUFFER = 'LMFREE         DATAID(&ID)    ';
            CALL ISPEXEC(LVAR , BUFFER);
            END;
       ELSE;
0END WRAPUP;
0END TUTPRNT;
