         MACRO
&NAME    SECTION &DUMMY,           ALLOWS COMMENT ONLY                 C
               &STDEXIT=,          SET TO 'NO' IF REQUIRED             C
               &MAXREG=11,         REGS 2 - &MAXREG WILL BE RESTORED...C
               &RESTORE=Y          . IF &RESTORE IS SET TO 'Y'
*                                                                     *
         GBLC  &GPROG              PROGRAM NAME
         GBLC  &GSECT,&WSECT       LOCATION COUNTER NAMES
         GBLC  &GBASE,&GLINK       EXTRACT PRESET BASE AND LINK REGS
         GBLC  &GRETN,&GSKIP       RETURN AND SKIP TAGS
         GBLC  &NSECT              SET NAME FOR POSSIBLE PERFORM STMT
         GBLB  &VERROR             SET BY VERSION MACRO
         LCLC  &X                  WORK CELL
&X       SETC  '&SYSNDX'           FOR UNIQUE TAGS
         VERSION 2
         AIF   (NOT &VERROR).OK02 TEST FOR VERSION ERROR
         MEXIT                     GIVE UP ALL HOPE IF YES
.OK02    AIF   ('&NAME' NE 'FILE').TSTWS GO IF NOT FILE SECTION
         DC    0D'0',C'*** &GPROG   **** FILE SECTION *'
         MEXIT
.TSTWS   AIF   ('&NAME' NE 'WORKING_STORAGE').TSTLS TEST FOR LINKAGE
         DC    0D'0',C'*** &GPROG   **** WORKING-STORAGE SECTION '
         MEXIT
.TSTLS   AIF   ('&NAME' NE 'LINKAGE').PROC MUST BE SECTION IN PROC DIV
         MEXIT
.PROC    AIF   ('&GRETN' EQ '').SKIP010 GO IF NO SECTION TO TERMINATE
         ENDSECT ,                 TERMINATE PREVIOUS SECTION
.SKIP010 AIF   (K'&RESTORE EQ 1).SKIP020
         MNOTE 8,'INVALID RESTORE VALUE ''&RESTORE'': MACRO TERMINATED'
         MEXIT
.SKIP020 ANOP
&NSECT   SETC  '&NAME'             TAG FOR ADCON WITHIN PERFORM
         AIF   ('&NSECT' NE '').SKIP20
&NSECT   SETC  'SECT&X'            INTERNALLY GENERATED NAME
.SKIP20  $ASECT &NSECT             ADD NAME TO LIST
&GRETN   SETC  'RETN&X'            UNIQUE TAG FOR EXIT
&GSKIP   SETC  'SKIP&X'            UNIQUE TAG FOR END OF SECTION
         AIF   ('&STDEXIT' EQ 'NO').NOEXIT
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
.* FALL THROUGH TO THIS ENTRANCE                                      *
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         BASR  &GBASE,0            INITIALIZE BASE REGISTER
         USING *,&GBASE            TELL ASSEMBLER
         MVI   $WITCH_&X,C'N'      DO NOT RESTORE REGS AT EXIT
         L     &GLINK,$NEXT_&X     SET ADDR EXIT TO BEG OF NEXT SECTION
         B     &NSECT              ENTER MAINLINE OF SECTION
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
.* ENTRANCE FOR 'GOTO' MACRO                                          *
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         BASR  &GBASE,0            INITIALIZE BASE REGISTER
         USING *,&GBASE            TELL ASSEMBLER
         L     &GLINK,$AVE_&X      SET EXIT ADDR TO PREVIOUS EXIT
         B     &NSECT              ENTER MAINLINE OF SECTION
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
.* ENTRANCE FOR 'PERFORM' MACRO                                       *
.**=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*
         BASR  &GBASE,0            INITIALIZE BASE REGISTER
         USING *,&GBASE            TELL ASSEMBLER
         MVI   $WITCH_&X,C'&RESTORE' DO/DO NOT RESTORE REGS AT EXIT Y/N
&NSECT   DC    0H'0'               BEGINNING OF SECTION PROPER
         USING &NSECT,&GBASE       SHOW BASE REG
         BASR  &GBASE,0            INITIALIZE BASE REGISTER
         BCTR  &GBASE,0            BACK IT UP ONE
         BCTR  &GBASE,0            BACK IT UP ANOTHER
         ST    &GLINK,$AVE_&X      SAVE LINK REGISTER
         STM   2,11,REG$_&X        SAVE REGS 2 - 11
         B     &NSECT._BEGIN        . AND B TO SECTION PROPER
RETN&X   L     &GLINK,$AVE_&X      RESTORE LINK REGISTER
         CLI   $WITCH_&X,C'Y'      DO IF WE NEED TO
         BNE   8(,&GLINK)          RETURN IF WE DON'T
         LM    2,&MAXREG,REG$_&X   RESTORE USER REGS
         B     8(,&GLINK)           AND RETURN
         $WA                       ESTABLISH WORKING_STORAGE
$AVE_&X  DC    A(0)                SAVE AREA FOR LINK REGISTER
REG$_&X  DC    10A(0)              SAVE AREA FOR REGS 2 - 11
$NEXT_&X DC    A(&GSKIP-8)         DEFAULT EXIT ADDR (SET TO -8 SINCE
*                                  . RETURN BRANCH IS TO +8)
$WITCH_&X DC   C' '                CONTROLS RESTORING REGS
         $IA                       ESTABLISH PROCEDURE DIVISION
&NSECT._BEGIN DC 0H'0'             START OF SECTION
         MEXIT
.NOEXIT  BASR  &GBASE,0            INITIALIZE BASE REGISTER
         USING *,&GBASE            TELL ASSEMBLER
         NOP   *+4                 'FILLER' FOR COMPATIBILITY
&NSECT   BASR  &GBASE,0            INITIALIZE BASE REGISTER
         USING *,&GBASE            TELL ASSEMBLER
         B     *+10                 . AND B TO SECTION PROPER
RETN&X   LA    1,&SYSNDX           CREATE UNIQUE ABEND CODE
         SVC   13                  ABEND THE SUCKER
         MEND
