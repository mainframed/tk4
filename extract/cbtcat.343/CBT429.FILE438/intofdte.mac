INTOFDTE CSECT ,                   ENTRY POINT FOR GREGORIAN CONVERSION
         USING *,R15               INFORM ASSEMBLER
         MVI   DATETYPE,C'G'       SET TO PROCESS 'G'REGORIAN
         B     CONTINUE            SKIP AROUNT MARKERS
         ENTRY INTOFDAY
         PRINT NOGEN
INTOFDAY DS    0H                  ENTRY POINT FOR JULIAN CONVERSION
         USING *,R15               INFORM ASSEMBLER
         MVI   DATETYPE,C'J'       SET TO PROCESS 'J'ULIAN
         B     CONTINUE            SKIP AROUNT MARKERS
         DROP  R15                 FORGET IT
         DC    C'********        '
         DC    C'INTOFDTE ASSEMBLED ON '
         DC    C'&SYSDATE AT &SYSTIME'
         DC    C'        ********'
CONTINUE DS    0H
         STM   R14,R12,12(R13)     SAVE REGS
         BASR  R12,0               COMMON BASE
         USING *,R12               MAKE USEABLE
         SLR   R15,R15             ASSUME R/C ZERO
         ST    R15,16(,R13)        STUFF R/C BACK INTO SAVEAREA
         LA    R14,SAVEAREA        POINT TO MY SAVE AREA
         ST    R14,8(,R13)         FORWARD CHAIN
         ST    R13,4(,R14)         BACK CHAIN
         LR    R13,R14             SET UP MY SAVEAREA
         LM    R10,R11,0(R1)       PARM POINTERS
         USING YYYYMMDD,R10        INPUT PARM
         USING USERDAYS,R11        CALCULATED
         MVC   TESTAREA,YYYYMMDD   COPY
         TR    TESTAREA,VALIDTBL   CHECK EACH DIGIT FOR NUMERIC
         IF    (CLI,DATETYPE,C'J',E),THENDO IF 'J'ULIAN THEN
           IF    (CLC,TESTAREA(7),YYYYMMDD,NE),THENDO TEST 7 POSITIONS
             UNPK  USERDAYS,=Z'1'  FAILED - FLAG ERROR
             B     ERREXIT         AND AMSCRAY
           ENDIF ,
         ELSE  ,                   MUST BE 'G'REGORIAN
           IF    (CLC,TESTAREA(8),YYYYMMDD,NE),THENDO TEST 8 POSITIONS
             UNPK  USERDAYS,=Z'2'  FAILED - FLAG ERROR
             B     ERREXIT         AND AMSCRAY
           ENDIF ,
         ENDO  ,
         IF    (CLC,YYYYMMDD(4),=C'1601',L),THENDO SAME AS COBOL
           UNPK  USERDAYS,=Z'3'
           B     ERREXIT         FLUNK IF NECESSARY
         ENDIF ,
         MVI   ISITLEAP,C' '       START WITH 'NULL'
         PACK  DIVIDEND,YYYYMMDD(4) SLIP INTO SOMETHING COMFORTABLE
         SP    DIVIDEND,=P'1601'   CALC OFFSET YEAR COUNT
         DP    DIVIDEND,=PL3'400'  GET COUNT OF 400-YEAR GROUPS
         ZAP   ANSWER,QUOTIENT     COPY TO ANSWER CELL
         IF    (CP,REMAINDER,=P'399',E),THENDO EVERY 400TH
           MVI   ISITLEAP,C'L'                 . IS A LEAP YEAR
         ENDIF ,
         PACK  DIVIDEND,YYYYMMDD(4) COPY
         SP    DIVIDEND,=P'1601'    OFFSET
         DP    DIVIDEND,=PL3'100'   GET COUNT OF 100-YEAR GROUPS
         SP    ANSWER,QUOTIENT      ACCUMULATE
         IF    (CLI,ISITLEAP,C' ',E),AND,        REMAINING 100TH       X
               (CP,REMAINDER,=P'99',E),THENDO    . YEARS ARE
           MVI   ISITLEAP,C'S'                   . NOT LEAP YEARS
         ENDIF ,
         PACK  DIVIDEND,YYYYMMDD(4) GET APPROX. COUNT OF
         SP    DIVIDEND,=P'1601'    . LEAP YEARS SINCE
         DP    DIVIDEND,=PL3'4'     . 1601
         AP    ANSWER,QUOTIENT     ADD APPROX. LEAP YEAR ADJUSTMENT
         IF    (CLI,ISITLEAP,C' ',E),THENDO      REMAINING 4TH YEARS
           IF    (CP,REMAINDER,=P'3',E),THENDO   . ARE
             MVI   ISITLEAP,C'L'                 . LEAP YEARS
           ELSE  ,                               . BUT
             MVI   ISITLEAP,C'S'                 . THE REST AREN'T
           ENDIF ,
         ENDIF ,
         IF    (CLI,DATETYPE,C'J',E),THENDO IF 'J'ULIAN THEN...
           IF    (CLI,ISITLEAP,C'S',E),AND, IF STD YEAR  *AND*         X
               (CLC,YYYYMMDD+4(3),=C'365',H),OR, > 365 *OR*            X
               (CLC,YYYYMMDD+4(3),=C'366',H),THENDO LEAP AND > 366 THEN
             UNPK  USERDAYS,=Z'4'
             B     ERREXIT      FLUNK IF BAD JULIAN DAY COUNT
           ENDIF ,
         ELSE  ,
           IF  (CLC,YYYYMMDD+4(2),=C'00',E),OR,    MM CAN'T BE 00      X
               (CLC,YYYYMMDD+4(2),=C'12',H),OR,    . OR > 12           X
               (CLC,YYYYMMDD+6(2),=C'00',E),OR,    . DD CAN'T BE 00    X
               (CLC,YYYYMMDD+6(2),=C'31',H),THENDO . OR > 31
             UNPK  USERDAYS,=Z'5'
             B     ERREXIT         FLUNK IF NECESSARY
           ENDIF ,
           IF    ((CLC,YYYYMMDD+4(2),=C'04',E),OR,   APRIL             X
               (CLC,YYYYMMDD+4(2),=C'06',E),OR,    JUNE                X
               (CLC,YYYYMMDD+4(2),=C'09',E),OR,    SEPTEMBER           X
               (CLC,YYYYMMDD+4(2),=C'11',E)),AND,  AND NOVEMBER        X
               (CLC,YYYYMMDD+6(2),=C'30',H),THENDO FOR > 30
             UNPK  USERDAYS,=Z'6' TSK TSK TSK
             B     ERREXIT        FLUNK IF 31 IN APR MAY SEP OR NOV
           ENDIF ,
           IF    (CLC,YYYYMMDD+4(2),=C'02',E),THENDO  IF MONTH IS FEB..
             IF    (CLI,ISITLEAP,C'S',E),AND, IF STD YEAR  *AND*       X
               (CLC,YYYYMMDD+6(2),=C'28',H),OR, > 28 *OR*              X
               (CLC,YYYYMMDD+6(2),=C'29',H),THENDO  > 29 THEN...
               UNPK  USERDAYS,=Z'7' TSK TSK TSK
               B     ERREXIT      29 OR 30 IN STD OR 30 IN LEAP
             ENDIF ,
           ENDIF ,
         ENDIF ,
         PACK  DIVIDEND,YYYYMMDD(4) CONVERT
         SP    DIVIDEND,=P'1601'   GET YEAR OFFSET
         MP    DIVIDEND,=P'365'    GET DAY COUNT
         AP    ANSWER,DIVIDEND     ACCUMULATE
         IF    (CLI,DATETYPE,C'J',E),THENDO DO IF 'J'ULIAN SPECIFIED
           PACK  WS_PL2,YYYYMMDD+4(3) GET JULIAN DAYS
           AP    ANSWER,WS_PL2     AND ADD IT IN
         ELSE  ,                   DARN !!! - MUST BE GREGORIAN
           PACK  DOUBLE,YYYYMMDD+4(2)    GET MONTH COUNT
           CVB   R2,DOUBLE         BINARY IT
           SLL   R2,1              DOUBLE IT FOR 2-BYTE DAY COUNTS
           IF    (CLI,ISITLEAP,C'L',E),THENDO DO IF LEAP YEAR
             LA    R2,LEAPDAYS-2(R2) POINT TO ELEMENT IN LEAP TABLE
           ELSE  ,                 DO IF NOT LEAP YEAR
             LA    R2,STDDAYS-2(R2) POINT TO ELEMENT IN STD TABLE
           ENDIF ,
           AP    ANSWER,0(2,R2)    ADD IN DAY COUNT OF PRECEDING MONTHS
           PACK  WS_PL2,YYYYMMDD+6(2) GET DAY COUNT
           AP    ANSWER,WS_PL2        . AND ADD IT IN
         ENDIF ,
         OI    ANSWER+7,X'0F'      NORMALIZE SIGN
         UNPK  USERDAYS,ANSWER     GIVE BACK TO CALLER
         B     RETURN              COMMON EXIT
ERREXIT  DS    0H
         UNPK  USERDAYS,=X'0F'     SET CALLER AREA TO ZEROS
RETURN   DS    0H                  PROVIDE STD RETURN LINKAGE
         L     R13,4(,R13)         BACK CHAIN
         LM    R14,R12,12(R13)     RESTORE REGS
         DROP  R12                 NEGATE ADDRESSABILITY
         BR    R14                 RETURN
SAVEAREA DC    18F'0'              STD REG SAVE AREA
DOUBLE   DC    D'0'                WORK AREA FOR CVB
LEAPDAYS DC    PL2'0,31,60,91,121,152,182,213,244,274,305,335'
STDDAYS  DC    PL2'0,31,59,90,120,151,181,212,243,273,304,334'
ISITLEAP DC    C' '                LOGIC SETS TO 'L'EAP OR 'S'TANDARD
DATETYPE DC    C' '                'J' FOR JULIAN
DIVIDEND DC    PL8'0' TOTAL DIVIDEND AREA  -->×\
QUOTIENT EQU   DIVIDEND+0,5,C'P'           -->× > KEEP TOGETHER
REMAINDER EQU  DIVIDEND+5,3,C'P'           -->×/
ANSWER   DC    PL8'0'              ...
WS_PL2   DC    PL2'0'              SCRATCHPAD
TESTAREA DC    CL8' '
VALIDTBL DC    256AL1(0)           NUMERIC TEST TABLE
         ORG   VALIDTBL+C'0'
         DC    C'0123456789'
         ORG   ,
SPACES   DC    CL133' '
DSECT1   DSECT                     MAPPING DSECT
YYYYMMDD DS    CL8                 USERS STARTING POINT
DSECT2   DSECT                     MAPPING DSECT
USERDAYS DS    CL8                 CREATED FOR CALLER
INTOFDTE CSECT                     BACK TO MAIN
         EQUATE ,                  EQUATE REGISTERS
         END   ,                   REQUIRED END STATEMENT
