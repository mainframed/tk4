         MACRO
&NAME    DO    &VAR,&WHILE=,&UNTIL=,&TEST=BEFORE
         COPY  $MGBLDEF            BRING IN THE CLOWNS
         LCLA  &Y
         LCLC  &X
         AIF   ('&TEST' EQ 'BEFORE').TEST10
         AIF   ('&TEST' EQ 'AFTER').TEST10
         MNOTE 8,'''TEST=&TEST'' INVALID - ''BEFORE'' ASSUMED'
.TEST10  AIF   ('&WHILE' NE '').TEST20 GO IF &WHILE SPECIFIED
         AIF   ('&UNTIL' NE '').TEST22  GO IF &UNTIL SPECIFIED
         AIF   ('&VAR' NE '').OK30 GO IF &VAR SPECIFIED
 MNOTE 4,'NO ENDING CONDITION SPECIFIED - POSSIBLE UNENDING LOOP'
         AGO   .OK30               CONTINUE
.TEST20  AIF   ('&UNTIL' NE '').ERR90 GO IF &UNTIL SPECIFIED
.TEST22  AIF   ('&VAR' NE '').ERR90 GO IF &VAR SPECIFIED
         AIF   ('&WHILE' NE '').CONT50
.OK30    AIF   ('&UNTIL' NE '').CONT60
&$MDGLVL SETA  &$MDGLVL+1          INCREMENT LEVEL
         LEVELMSG
&$MDGSEQ(&$MDGLVL) SETC '&SYSNDX'
&$MIFELS(&$MDGLVL) SETC 'F'
&$MDGNAM(&$MDGLVL) SETC '&NAME'
&$MCVERB(&$MDGLVL) SETC 'DO'
         DC    0C'$MDGLVL &$MDGLVL $MDGNAM &$MDGNAM(&$MDGLVL)'
&$MNAME  SETC  '$MDG&SYSNDX'       SET TO SYNTHESIZED NAME
&$MLTAG(&$MDGLVL) SETC '&$MNAME'   SET LOOP RETURN TAG
         AIF   ('&VAR' EQ '').CLEAN99 GO IF NO &VAR SPECIFIED
         AIF   ('&VAR'(1,1) GE '0').SELF40 GO IF SELF-DEFINING
.*                                 - MUST BE PACKED DECIMAL
         AIF   ('&VAR' NE 'FOREVER').NEXT32 GO IF NOT FOREVER
         AIF   ('&NAME' EQ '').SKIP31
&NAME    DS    0H                  FALL THRU TO BEGINNING OF DO-GROUP
.SKIP31  ANOP
&$MNAME  DS    0H                  BEGINNING OF DO-GROUP
         AGO   .CLEAN99
.NEXT32  ANOP
&NAME    PACK  $MDV&SYSNDX,=Z'0'   START WITH 0 THEN ADD 1
         ZAP   $MDM&SYSNDX,&VAR    PROTECT VARIABLE FROM CHANGE
         AIF   ('&TEST' NE 'AFTER').SKIP35
         EX    0,*+8               BUMP BY 1
         B     $MDD&SYSNDX         EXECUTE GROUP AT LEAST ONE TIME
.SKIP35  ANOP
&$MNAME  AP    $MDV&SYSNDX,=P'1'   BUMP BY 1
&$MNAME  SETC  ''                  SET NAME TO NULL
&X       SETC  '$MDM&SYSNDX'       NAME FOR CELL FOR END VALUE
         CP    $MDV&SYSNDX,&X      FINISHED?
         BH    $MDF&SYSNDX         B IF YES
         $WA                       FOLLOWING CODE TO BE IN WORK AREA
&Y       SETA  L'&VAR              MAKE SURE OUR VARIABLE IS BIG ENOUGH
&X       DC    PL(&Y+1)'0'         CELL TO SAVE END VALUE
&X       SETC  '$MDV&SYSNDX'       MAKE IT PRETTY
&X       DC    PL(&Y+1)'0'         LOOP COUNTER
         $IA                       RESUME INSTRUCTION AREA
         AGO   .CLEAN99
.SELF40  ANOP
&NAME    PACK  $MDV&SYSNDX,=Z'0'   START WITH 0 THEN ADD 1
         AIF   ('&TEST' NE 'AFTER').SKIP46
         EX    0,*+8               BUMP BY 1
         B     $MDD&SYSNDX         EXECUTE GROUP AT LEAST ONE TIME
.SKIP46  ANOP
&$MNAME  AP    $MDV&SYSNDX,=P'1'   BUMP BY 1
&$MNAME  SETC  ''                  SET NAME TO NULL
         CP    $MDV&SYSNDX,=P'&VAR' FINISHED?
         BH    $MDF&SYSNDX         B IF YES
         $WA                       ENTER WORK AREA
&X       SETC  '$MDV&SYSNDX'       MAKE IT PRETTY
&X       DC    P'0&VAR'            LOOP COUNTER
         $IA                       RESUME INSTRUCTION AREA
         AGO   .CLEAN99
.CONT50  ANOP  &WHILE OPTION WAS SPECIFIED
&$MNAME  SETC  '&NAME'             SET TO GIVEN NAME
         AIF   ('&NAME' NE '').CONT52 NO TAG -> NO DC
&$MNAME  SETC  '$MDG&SYSNDX'       SET TO SYNTHESIZED NAME
.CONT52  ANOP
&Y       SETA  &$MDGLVL+1          SET TO NEXT HIGHER
&$MLTAG(&Y) SETC '&$MNAME'         SET TO LOOP NAME
         AIF   ('&TEST' NE 'AFTER').SKIP53
         B     $MDD&SYSNDX         EXECUTE GROUP AT LEAST ONE TIME
.SKIP53  AIF   ('&WHILE'(2,1) EQ '(').CONT54
&$MNAME  IF    &WHILE,THENDO       PASS PARMS TO 'IF'
         AGO   .CLEAN99            WRAP IT UP
.CONT54  ANOP
&$MNAME  IF    &WHILE(1),&WHILE(2),&WHILE(3),&WHILE(4),                C
               &WHILE(5),&WHILE(6),&WHILE(7),&WHILE(8),                C
               &WHILE(9),&WHILE(10),&WHILE(11),&WHILE(12),             C
               &WHILE(13),&WHILE(14),&WHILE(15),&WHILE(16),            C
               &WHILE(17),&WHILE(18),&WHILE(19),&WHILE(20),            C
               &WHILE(21),&WHILE(22),&WHILE(23),&WHILE(24)
         AGO   .CLEAN99
.CONT60  ANOP  &UNTIL OPTION WAS SPECIFIED
&$MNAME  SETC  '&NAME'             SET TO GIVEN NAME
         AIF   ('&NAME' NE '').CONT62 NO TAG -> NO DC
&$MNAME  SETC  '$MDG&SYSNDX'       SET TO SYNTHESIZED NAME
.CONT62  ANOP
&Y       SETA  &$MDGLVL+1          SET TO NEXT HIGHER
&$MLTAG(&Y) SETC '&$MNAME'         SET TO LOOP NAME
         AIF   ('&TEST' NE 'AFTER').SKIP63
         B     $MDD&SYSNDX         EXECUTE GROUP AT LEAST ONE TIME
.SKIP63  AIF   ('&UNTIL'(2,1) EQ '(').CONT64
&$MNAME  IF    &UNTIL,THENDO       PASS PARMS TO 'IF'
         B     $MDF&SYSNDX         CONDITION MET - EXIT LOOP
&X       SETC  '$MDF&$MDGSEQ(&$MDGLVL)' PREV 'FAILED' TAG
&X       DC    0H'0'               'UNTIL' FAILED - ENTER DO-GROUP
&$MDGSEQ(&$MDGLVL) SETC '&SYSNDX'  NEW UNIQUE TAG
         AGO   .CLEAN99            WRAP IT UP
.CONT64  ANOP
&$MNAME  IF    &UNTIL(1),&UNTIL(2),&UNTIL(3),&UNTIL(4),                C
               &UNTIL(5),&UNTIL(6),&UNTIL(7),&UNTIL(8),                C
               &UNTIL(9),&UNTIL(10),&UNTIL(11),&UNTIL(12),             C
               &UNTIL(13),&UNTIL(14),&UNTIL(15),&UNTIL(16),            C
               &UNTIL(17),&UNTIL(18),&UNTIL(19),&UNTIL(20),            C
               &UNTIL(21),&UNTIL(22),&UNTIL(23),&UNTIL(24)
         B     $MDF&SYSNDX         CONDITION MET - EXIT LOOP
&X       SETC  '$MDF&$MDGSEQ(&$MDGLVL)' PREV 'FAILED' TAG
&X       DC    0H'0'               'UNTIL' FAILED - ENTER DO-GROUP
&$MDGSEQ(&$MDGLVL) SETC '&SYSNDX'  NEW UNIQUE TAG
         AGO   .CLEAN99            WRAP IT UP
.ERR90   MNOTE 12,'MUTUALLY EXCLUSIVE PARAMETERS - MACRO ABORTED'
         AGO   .MEND
.CLEAN99 ANOP
         AIF   ('&TEST' NE 'AFTER').MEND
&X       SETC  '&SYSNDX'           FOR ALIGNMENT PURPOSES ONLY
$MDD&X   DC    0H'0'               BEGINNING OF DO-GROUP
.MEND    MEND
