         MACRO
&NAME    GO    &BASE=12,&LINK=14,&EQUATE=YES,&NBASE=,&ABEND=4,         C
               &BLATHER=MUM,&ERROR=8,&INTRO=YES
         COPY  $MGBLDEF
         LCLA  &TEMP,&TEMP2,&TEMP3,&I
         LCLC  &X,&Y,&Z,&PROGNAM
         VERSION 1
&PROGNAM SETC  '&NAME'
&$MERROR SETA  &ERROR
         AIF   ('&NAME' NE '').SKIPNAM
         MNOTE 4,'NO MODULE NAME SPECIFIED - ''TEMPNAME'' ASSUMED'
&PROGNAM SETC  'TEMPNAME'
.SKIPNAM ANOP
&$MABEND SETA  &ABEND              ABEND CODE FOR PROC ERROR
&$LINK   SETC  '&LINK'             UNIVERSAL LINK REGISTER
&$MPLVL  SETA  1                   PROC LEVEL
&$MSECT(1) SETC '&PROGNAM'         MAIN CSECT
&$MNBASE SETA  (N'&BASE)           MAX BASE REGS
&$MBLATH SETA  0
         AIF   ('&BLATHER' EQ 'NONE').CONT00
&$MBLATH SETA  1
         AIF   ('&BLATHER' EQ 'MUM').CONT00
&$MBLATH SETA  2
         AIF   ('&BLATHER' EQ 'QUIET').CONT00
&$MBLATH SETA  3
         AIF   ('&BLATHER' EQ 'MODERATE').CONT00
&$MBLATH SETA  4
         AIF   ('&BLATHER' EQ 'INFORMATIVE').CONT00
&$MBLATH SETA  5
         AIF   ('&BLATHER' EQ 'TALKATIVE').CONT00
&$MBLATH SETA  6
         AIF   ('&BLATHER' EQ 'SUBSTANTIAL').CONT00
&$MBLATH SETA  7
         AIF   ('&BLATHER' EQ 'GABBY').CONT00
&$MBLATH SETA  8
         AIF   ('&BLATHER' EQ 'VERBOSE').CONT00
&$MBLATH SETA  9
         AIF   ('&BLATHER' EQ 'PROLIFIC').CONT00
&$MBLATH SETA  1
.CONT00  ANOP
&PROGNAM CSECT                     PUT INSTRUCTIONS FIRST
DATAAREA CSECT                     DEFINE DATA AREA CSECT
SAVEAREA DC    18F'0'              STANDARD SAVE AREA
         AIF   ('&INTRO' EQ 'NO').SKINTR2
$INTRO   WTO   '&PROGNAM EXECUTING ON 11/11/11 AT 00.00.00',MF=L
&TEMP    SETA  K'&PROGNAM
         ORG   $INTRO+18+&TEMP
$EXDT    DC    CL8' '
         ORG   $INTRO+30+&TEMP
$EXTM    DC    CL8' '
         ORG   ,
.SKINTR2 ANOP
&PROGNAM CSECT                     BACK TO EXECUTABLE CSECT
         EQUATE
&TEMP    SETA  1                   FOR SETTING UP BASE REGS
         AIF   ('&NBASE' EQ '').LOOP01 OK IF NULL
         AIF   (&NBASE LE N'&BASE).LOOP01 OK IF LE # OF BASE REGS
&I       SETA  N'&BASE
         MNOTE 4,'*    NUMBER OF BASE REGS REQUESTED (&NBASE) IS GREATEC
               R THAN NUMBER'
         MNOTE 0,'*    PROVIDED (&I); &I WILL BE INITIALIZED.'
.LOOP01  AIF   ('&BASE(&TEMP)' EQ '0').ERR1
         AIF   ('&BASE(&TEMP)' EQ 'R0').ERR1
         AIF   ('&BASE(&TEMP)' EQ '1').ERR1
         AIF   ('&BASE(&TEMP)' EQ 'R1').ERR1
         AIF   ('&BASE(&TEMP)' EQ '13').ERR1
         AIF   ('&BASE(&TEMP)' EQ 'R13').ERR1
         AIF   ('&BASE(&TEMP)' EQ '14').ERR1
         AIF   ('&BASE(&TEMP)' EQ 'R14').ERR1
         AIF   ('&BASE(&TEMP)' EQ '15').ERR1
         AIF   ('&BASE(&TEMP)' EQ 'R15').ERR1
         AGO   .OK01
.ERR1    MNOTE 12,'''&BASE(&TEMP)'' IS INVALID AS BASE REGISTER'
         MNOTE *,'MACRO ABORTED'
         MEXIT
.OK01    ANOP
&TEMP2   SETA  1
.LOOP02  AIF   (&TEMP2 EQ &TEMP).OK02
         AIF   ('&BASE(&TEMP)' EQ '&BASE(&TEMP2)').ERR1
&TEMP2   SETA  &TEMP2+1
         AGO   .LOOP02
.OK02    ANOP
&$BASE(&TEMP) SETC '&BASE(&TEMP)'  MOVE TO GLOBAL SET SYMBOL
&TEMP    SETA  &TEMP+1             BUMP
         AIF   (&TEMP LE &$MNBASE).LOOP01 BACK IF MORE TO DO
&TEMP    SETA  (&$MNBASE)          SET TO MAX # OF BASE REGS
         AIF   (&$MNBASE EQ 1).SKIP02
         AIF   ('&NBASE' EQ '').SKIP02 SKIP IF NOT SPECIFIED
&TEMP    SETA  (&NBASE)            SET TO NUMBER FOR MAIN CSECT
         AIF   (N'&BASE GE &NBASE).SKIP02 SKIP IF OK
&TEMP    SETA  (N'&BASE)           LIMIT TO NUMBER PROVIDED
.SKIP02  ANOP
&$BASE(1) SETC '&BASE(1)'          SET FIRST GLOBAL BASE
         STM   R14,R12,12(R13)     SAVE CALLER'S REGS
         AIF   (&TEMP EQ 1).SETUP1 GO IF ONLY 1 BASE REG
         LR    &BASE(1),R15        SET UP FIRST BASE REGISTER
         DEFPGMID ,                STD PROG ID DEFINITION
&$USING(1)  SETC  '&BASE(1)'       MOVE IN FIRST REG
         LA    &BASE(&TEMP),2048   SET UP AN INCREMENT
&TEMP2   SETA  2                   SET TEMP2 TO SECOND BASE
.BASELUP AIF   (&TEMP2 GE &TEMP).FINBASE BRANCH IF DONE
&TEMP3   SETA  &TEMP2-1            POINT TO PREVIOUS BASE
&X       SETC  '&BASE(&TEMP2)'
&Y       SETC  '&BASE(&TEMP3)'
&Z       SETC  '&BASE(&TEMP)'
         LA    &X,2048(&Y,&Z)      INITIALIZE ANOTHER BASE
&$USING(1)  SETC  '&$USING(1),&BASE(&TEMP2)' ADD ADDITIONAL REG
&TEMP2   SETA  &TEMP2+1            BUMP TO NEXT BASE
         AGO   .BASELUP
.FINBASE ANOP
&TEMP2   SETA   &TEMP2-1           BACK UP TO NEXT-TO-LAST REG
&X       SETC  '&BASE(&TEMP)'
&Y       SETC  '&BASE(&TEMP2)'
         LA    &X,2048(&Y,&X)      INITIALIZE LAST BASE
&$USING(1) SETC '&$USING(1),&X'    FINAL BASE INTO USING
         USING &PROGNAM,&$USING(1) ADDRESSABILITY FOR MAIN CSECT
         AGO   .DONEBAS            GO SAVE REGS
.SETUP1  LR    &BASE,R15           SET UP ONE BASE
         DEFPGMID ,                STD PROG ID DEFINITION
&$USING(1)  SETC  '&BASE(1)'       MOVE IN FIRST REG
.DONEBAS XC    16(4,R13),16(R13)   SET DEFAULT ZERO RETURN CODE
         L     R14,$MSAVEAD        GET ADDRESS OF DATAAREA CSECT
         L     R1,0(,R1)           POINT TO PARM
         LH    R15,0(,R1)          PARM LENGTH
         STH   R15,PARMLEN         SAVE PARM LENGTH
         LA    R15,1(,R15)         INCLUDE LENGTH
         EX    R15,PARMMOVE        DO THE DIRT
         ST    R14,8(,R13)         CHAIN
         ST    R13,4(,R14)         . SAVE
         LR    R13,R14             . AREAS
         USING DATAAREA,R13        SET UP SECONDARY BASE
         AIF   ('&INTRO' EQ 'NO').SKINTRO
         FIRST 1
           WTO   '&PROGNAM ASSEMBLED ON &SYSDATE AT &SYSTIME'
           TIME  DEC
           DTM   $EXTM,$EXDT
           WTO   MF=(E,$INTRO)
         ENDO  ,
.SKINTRO ANOP
         L     R1,SAVEAREA+4       POINT TO PREV SAVE AREA
         L     R1,24(,R1)          RESET R1 FOR PARM PASSING
         MEND
