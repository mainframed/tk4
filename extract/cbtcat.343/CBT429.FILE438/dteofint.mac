DTEOFINT TITLE 'COMPUTE YYYYMMDD FROM DAY COUNT SINCE 01/01/1601'
*
* IF ROUTINE 'DTEOFINT' IS CALLED, THEN
* THE 'YYYYMMDD' CALCULATED BY THIS SUBROUTINE WILL MATCH THE
* DATE PROVIDED BY THE COBOL FUNCTION 'DATE-OF-INTEGER'
*
* IF ROUTINE 'DAYOFINT' IS CALLED, THEN
* THE 'YYYYDDD' CALCULATED BY THIS SUBROUTINE WILL MATCH THE
* DATE PROVIDED BY THE COBOL FUNCTION 'DAY-OF-INTEGER'
*
* CALLER MUST PASS: (IF DTEOFINT IS CALLED)
* DAY_COUNT    DC     ZL8'00000000' PROVIDED BY CALLER
* GREGDATE     DC     CL8'YYYYMMDD' SET BY THIS ROUTINE
*
* CALLER MUST PASS: (IF DAYOFINT IS CALLED)
* DAY_COUNT    DC     ZL8'00000000' PROVIDED BY CALLER
* JULDATE      DC     CL7'YYYYDDD' SET BY THIS ROUTINE
* *                        END OF USER PROVIDED PARAMETERS
*
         PRINT NOGEN
*
DTEOFINT CSECT ,                   ENTRY FOR GREGORIAN PROCESSING
         USING *,R15               INFORM ASSEMBLER
         MVI   DATETYPE,C'G'       SET 'G'REGORIAN
         B     CONTINUE            SKIP AROUNT MARKERS
DAYOFINT DS    0H                  ENTRY FOR JULIAN PROCESSING
         ENTRY DAYOFINT
         USING *,R15               INFORM ASSEMBLER
         MVI   DATETYPE,C'J'       SET 'J'ULIAN
         B     CONTINUE            SKIP AROUNT MARKERS
         DROP  R15                 FORGET IT
         DC    C'********        '
         DC    C'DTEOFINT ASSEMBLED ON '
         DC    C'&SYSDATE AT &SYSTIME'
         DC    C'        ********'
CONTINUE DS    0H
         STM   R14,R12,12(R13)     SAVE REGS
         BASR  R12,0               COMMON BASE
         USING *,R12               MAKE USEABLE
         SLR   R15,R15             ASSUME R/C ZERO
         ST    R15,16(,R13)        STUFF R/C BACK INTO SAVEAREA
         LA    R14,SAVEAREA        POINT TO MY SAVE AREA
         ST    R14,8(,R13)         FORWARD CHAIN
         ST    R13,4(,R14)         BACK CHAIN
         LR    R13,R14             SET UP MY SAVEAREA
         LM    R10,R11,0(R1)       PASSED PARAMETERS
         USING DAYCOUNT,R10        MAKE IT ADDRESSABLE
         USING YYYYMMDD,R11        MAKE IT ADDRESSABLE
         MVC   YYYYMMDD,=C'        ' SPACEOUT
         MVC   TESTAREA,DAYCOUNT   COPY
         TR    TESTAREA,VALIDTBL   CHECK EACH DIGIT FOR NUMERIC
         IF    (CLC,TESTAREA,DAYCOUNT,NE),OR, IF NOT NUMERIC - OR -    X
               (CLC,DAYCOUNT,=C'03067671',H),THENDO GT 12/31/9999 THEN
           UNPK  YYYYMMDD,=X'0F'   SET CALLER AREA TO ZEROS
           B     RETURN            . AND RETURN
         ENDIF ,                   END OF INVALID DATE PROCESSING
         MVI   ISITLEAP,C' '       SET 'NULL' TO START
         PACK  DIVIDEND,DAYCOUNT   GET READY FOR DIVINE (SIC)
         SP    DIVIDEND,=P'1'      GET OFFSET # OF DAYS
         DP    DIVIDEND,=PL5'146097' # OF DAYS IN 400 YEARS
         MVC   DV146097(10),QUOTIENT SAVE QUOTIENT AND REMAINDER
         IF    (CP,RM146097,=P'145730',H),THENDO # OF DAYS IN 399 YEARS
           MVI   ISITLEAP,C'L'     IT'S THE 400TH YEAR
         ENDIF ,
* IF THIS IS THE LAST DAY OF THE 400TH YEAR OF THE GROUP, THEN IT IS
* 12/31/2000 OR 12/31/2400 ETC (WHICH ** IS ** A LEAP YEAR) AND WE
* MUST OVERRIDE THE QUOTIENT (4) AND REMAINDER (0) THAT WOULD HAVE
* BEEN CALCULATED IN THE NEXT STEP:
         IF    (CP,RM146097,=P'146096',E),THENDO DAYS IN 400 YEARS - 1
           PACK  DV036524,=Z'3'      FORCE # OF CENTURIES
           PACK  RM036524,=Z'36524'  . AND REMAINING DAYS
         ELSE  ,
           ZAP   DIVIDEND,RM146097  CALC YEAR AND DAY COUNTS
           DP    DIVIDEND,=PL5'036524' # OF DAYS IN 100 YEARS
           MVC   DV036524(10),QUOTIENT SAVE ANSWERS
         ENDIF ,
         IF    (CLI,ISITLEAP,C' ',E),AND, IF NOT YET SET *AND*         X
               (CP,RM036524,=P'36158',H),THENDO AT LEAST 99 YEARS THEN
           MVI   ISITLEAP,C'S'     IT'S 100TH BUT NOT 400TH
         ENDIF ,
         ZAP   DIVIDEND,RM036524   HANDLE 4-YEAR TYPE LEAP YEARS
         DP    DIVIDEND,=PL5'001461' # OF DAYS IN 4 YEARS
         MVC   DV001461(10),QUOTIENT  SAVE ANSWERS
         IF    (CLI,ISITLEAP,C' ',E),THENDO IF NOT YET SET THEN
           IF    (CP,RM001461,=P'1094',H),THENDO # OF DAYS IN 3 YEARS
             MVI   ISITLEAP,C'L'   IT'S 4TH BUT NOT 100TH OR 400TH
           ELSE  ,
             MVI   ISITLEAP,C'S'   OK ALREADY - SO ITS NOT A LEAP YEAR
           ENDIF ,
         ENDIF ,
* IF THIS IS THE LAST DAY OF THE 4TH YEAR OF THE GROUP, THEN IT IS
* 12/31/1992 OR 12/31/1996 ETC (WHICH ** IS ** A LEAP YEAR) AND WE
* MUST OVERRIDE THE QUOTIENT (4) AND REMAINDER (0) THAT WOULD HAVE
* BEEN CALCULATED IN THE NEXT STEP:
         IF    (CP,RM001461,=P'1460',E),THENDO # OF DAYS IN 4 YEARS - 1
           PACK  DV000365,=Z'3'    FORCE YEAR # 4 (RANGE IS 0 - 3)
           PACK  RM000365,=Z'365'  . AND DAY # 365
         ELSE  ,                   NOT LAST DAY OF RANGE
           ZAP   DIVIDEND,RM001461 FIND YEAR #
           DP    DIVIDEND,=PL5'365'  . AND DAY #
           MVC   DV000365(10),QUOTIENT SAVE ANSWERS
         ENDIF ,
         AP    RM000365,=P'1'      GET BACK TO 'REAL' DATE
* CALCULATE NUMBER OF YEARS SINCE 1601
         MP    DV146097,=P'400'    # OF YEARS IN 400-YEAR GROUPT
         MVC   QUOTIENT,DV146097   COPY # OF 400-YEAR GROUPS
         MP    DV036524,=P'100'    # OF 100-YEAR GROUPS (0 - 3)
         AP    QUOTIENT,DV036524   ADD IT IN
         MP    DV001461,=P'4'      # OF 4-YEAR GROUPS (0 - 24)
         AP    QUOTIENT,DV001461   ADD IT IN
         AP    QUOTIENT,DV000365   ADD # OF YEARS (RANGE IS 0 - 3)
         AP    QUOTIENT,=P'1601'   GET YYYY
         UNPK  YYYYMMDD(4),QUOTIENT SMASH INTO OUTPUT FIELD
         OI    YYYYMMDD+3,C'0'     FIX SIGN POSITION
         IF    (CLI,DATETYPE,C'J',NE),THENDO IF NOT 'J'ULIAN THEN...
           IF    (CLI,ISITLEAP,C'L',E),THENDO IF 'IS' LEAP THEN...
             PACK  MONTHTBL+2(2),=Z'29' FIX FEBRUARY
           ELSE  ,                 ELSE IF 'NOT' LEAP THEN...
             PACK  MONTHTBL+2(2),=Z'28' FIX FEBRUARY
           ENDIF ,
           LA    R2,MONTHTBL       POINT TO TABLE
* BUMP THROUGH DAYS-OF-MONTH TABLE, SUBTRACTING AS WE GO, UNTIL
* THERE ARE FEWER DAYS LEFT THAN ARE IN 'THIS' MONTH
           PACK  MONTH,=Z'1'       RUNNING COUNTER
           DO    UNTIL=(CP,RM000365,0(2,R2),NH) BUMP THRU TABLE
             SP    RM000365,0(2,R2) SUB DAYS IN 'THIS' MONTH
             LA    R2,2(,R2)       INCREMENT
             AP    MONTH,=P'1'     COUNT MONTH
           ENDO  ,
           UNPK  YYYYMMDD+4(2),MONTH SMASH MONTH INTO OUTPUT FIELD
           OI    YYYYMMDD+5,C'0'   FIX SIGN
           UNPK  YYYYMMDD+6(2),RM000365 SMASH DAY
           OI    YYYYMMDD+7,C'0'   FIX SIGN
         ELSE  ,
           UNPK  YYYYMMDD+4(3),RM000365 FORMAT JULIAN DATE
           OI    YYYYMMDD+6,C'0'        . AND FIX SIGN
         ENDIF ,
RETURN   DS    0H                  PROVIDE STD RETURN LINKAGE
         L     R13,4(,R13)         BACK CHAIN
         LM    R14,R12,12(R13)     RESTORE REGS
         DROP  R12                 NEGATE ADDRESSABILITY
         BR    R14                 RETURN
SAVEAREA DC    18F'0'              STD REG SAVE AREA
MONTHTBL DC    PL2'31,28,31,30,31,30,31,31,30,31,30,31'
DV000365 DC    PL5'0'
RM000365 DC    PL5'0'
DV001461 DC    PL5'0'
RM001461 DC    PL5'0'
DV036524 DC    PL5'0'
RM036524 DC    PL5'0'
DV146097 DC    PL5'0'
RM146097 DC    PL5'0'
ISITLEAP DC    C' '                LOGIC SETS TO 'L' OR 'S'
DATETYPE DC    C' '                LOGIC SETS TO 'G' OR 'J'
*
DIVIDEND DC    0PL10'0' TOTAL DIVIDEND AREA -->×\
QUOTIENT EQU   DIVIDEND+0,5,C'P'            -->× > KEEP TOGETHER
REMAINDER EQU  DIVIDEND+5,5,C'P'            -->×/
*
MONTH    DC    PL2'0'
TESTAREA DC    CL8' '
VALIDTBL DC    256AL1(0)           NUMERIC TEST TABLE
         ORG   VALIDTBL+C'0'
         DC    C'0123456789'
         ORG   ,
DSECTA   DSECT                     MAPPING DSECT
DAYCOUNT DS    CL8                 USER-PROVIDED DAY COUNT
DSECTB   DSECT                     MAPPING DSECT
YYYYMMDD DS    CL8                 COMPUTED FOR CALLER
DTEOFINT CSECT
         EQUATE ,                  REGISTER EQUATES
         END   ,                   REQUIRED END STATEMENT
