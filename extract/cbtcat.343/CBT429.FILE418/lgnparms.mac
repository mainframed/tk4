*          DATA SET LGNPARMS   AT LEVEL 001 AS OF 10/24/85
LGNPARMS CSECT
**********************************************************************
* NAME       -   LGNPARMS                                            *
*                                                                    *
* AUTHOR     -   T. BRYANT                                           *
*                                                                    *
* FUNCTION   -   THE LOGON PARAMETER EXIT (LGNPARMS) ALLOWS AN       *
*                INSTALLATION TO EXAMINE AND ALTER THE LOGONID       *
*                PARAMETERS THROUGH ACF2.  IN OUR CASE, THE TSO      *
*                PROJECT CODE ENTERED BY THE TSO USER WILL BE        *
*                APPENDED TO THE IN-STORAGE TSO ACCOUNTING FIELD     *
*                (FLDACCT).  ACF2 WILL THEN USE THIS INFORMATION     *
*                TO BUILD THE JCL IN THE LOGON WORK AREA (LWA).      *
* INPUT                                                              *
* PARAMETER                                                          *
* REGISTER   -   R1  -    ADDRESS OF THE ACFLDWA CONTROL BLOCK       *
*                                                                    *
* SYSTEM     -   MVS/SP AND MVS/XA                                   *
*                                                                    *
* DATE       -   10/24/85                                            *
*                                                                    *
* MACROS     -   FREEMAIN,GETMAIN,STFSMODE,TGET,TPUT                 *
*                                                                    *
* REGISTERS  -   R0   -   *** USED BY MVS ***                        *
*                R1   -   ADDRESS OF LOGON WORK AREA                 *
*                R2   -   USED BY TRANSLATE AND TEST INSTRUCTION     *
*                R3   -   ADDRESS OF GETMAINED SCREEN STORAGE        *
*                R4   -   ADDRESS OF GETMAINED SCREEN STORAGE LENGTH *
*                R5   -   ADDRESS OF PROJECT CODE REPLY BUFFER       *
*                R6   -   ADDRESS OF ACFLDWA                         *
*                R7   -   LENGTH OF TSO PROJECT CODE                 *
*                R8   -   LGNPARMS RETURN CODE TO ACF2               *
*                R9   -   *** UNUSED BY THIS PROGRAM ***             *
*               R10   -   *** UNUSED BY THIS PROGRAM ***             *
*               R11   -   *** UNUSED BY THIS PROGRAM ***             *
*               R12   -   BASE REGISTER                              *
*               R13   -   SYSTEM SAVE AREA ADDRESS                   *
*               R14   -   RETURN ADDRESS                             *
*               R15   -   ENTRY POINT AND RETURN CODES               *
**********************************************************************
         USING LGNPARMS,R15            TEMPORARY ADDRESSABILITY
         B     STMREGS                 BRANCH AROUND EYECATCHER
         DC    C'LGNPARMS'             LGNPARMS PROGRAM
         DC    C' '
         DC    C'&SYSDATE'             GREGORIAN DATE
         DC    C' '
         DC    C'&SYSTIME'             GREGORIAN DATE
         DS    0H                      RE-ESTABLISH ALIGNMENT
STMREGS  EQU   *
         DROP  R15                     DONE WITH ADDRESSABILITY
*****************************************
*  PERFORM REENTRANT ENTRY              *
*  HOUSEKEEPING.                        *
*****************************************
         STM   R14,R12,12(R13)              SAVE REGISTERS
         LR    R12,R15                      SET BASE REGISTER
         USING LGNPARMS,R12                 SET ADDRESSABILITY
         GETMAIN R,LV=72                    GETMAIN OUR SAVE AREA
         ST    R13,4(R1)                    SYSTEM S/A INTO OUR S/A
         ST    R1,8(R13)                    OUR S/A INTO SYSTEM S/A
         LR    R13,R1                       OUR S/A ADDRESS IN R13
         L     R1,4(R13)                    RELOAD SYSTEM S/A ADDRESS
         LM    R0,R1,20(R1)                 RELOAD REGS 0 AND 1
*****************************************
*  SET ADDRESSABILITY TO THE ACFLDWA    *
*  LWA EXIT PARAMETER LIST.             *
*****************************************
         LR    R6,R1                        SAVE ACFLDWA ADDRESS
         USING ACFLDWA,R6                   SET ADDRESSABILITY TO IT
*****************************************
*  WAIT ONE SECOND TO ALLOW ACF01137    *
*  LAST LOGON ACCESS MESSAGE TO APPEAR. *
*****************************************
         STIMER WAIT,BINTVL=ONESEC          WAIT 1 SECOND
*****************************************
*  INFORM VTAM THAT WE ARE USING        *
*  3270 FULLSCREEN SUPPORT.  GETMAIN    *
*  WORK STORAGE TO BUILD SCREEN.        *
*****************************************
         STFSMODE ON,INITIAL=YES            SET VTAM FULLSCREEN MODE
         LA    R0,SCRLNTH                   SCREEN LENGTH
         GETMAIN R,LV=(0)                   GET STORAGE
         LR    R3,R1                        STORAGE ADDRESS
         MVC   0(SCRLNTH,R3),SCREEN         MOVE SCREEN FORMAT
         LA    R4,SCRLNTH                   SCREEN LENGTH
         LA    R5,PROJCDE(R3)               LOCATE PROJECT CODE
*****************************************
*  CHECK PROJECT CODE FOR VALID         *
*  ALPHANUMERIC FIELDS.  IF NOT BUILD   *
*  ERROR MESSAGE INTO CURRENT SCREEN    *
*  AND REISSUE SCREEN.                  *
*                                       *
*  FREE SCREEN STORAGE AFTER USER HAS   *
*  ENTERED PROJECT CODE.                *
*****************************************
FUL3270  TPUT  (3),(4),FULLSCR              ISSUE FULLSCREEN MESSAGE
         TGET  (5),12,EDIT,WAIT             WAIT FOR RESPONSE
         LTR   R8,R15                       WAS PA1 ENTERED?
         BNZ   EXIT                         FAIL LOGON NOW!
*****************************************
*  CHECK THE PROJECT CODE ENTERED TO SEE*
*  IF IT IS AT LEAST SIX (6) DIGITS IN  *
*  LENGTH AND VALID ALPHANUERMIC.  IF   *
*  NOT BUILD ERROR MESSAGE INTO CURRENT *
*  SCREEN AND REISSUE MESSAGE TO USER.  *
*****************************************
         SR    R2,R2             CLEAR TRT-USED REGISTER 2
         TRT   0(6,R5),TABLANK   LOOK FOR BLANK CHARACTER
         BNZ   LESS6             LESS THAN 6 POS - ISSUE MESSAGE
         OC    0(12,R5),UPPERCSE FLIP TO UPPER CASE
         TRT   0(12,R5),TABCDE ANY NON-ALPHANUMERICS FOUND?
         BZ    PROCESS           IF NONE - APPEND CODE TO FLDACCT
         B     NOALPHA            IF SOME FOUND THEN EXIT
*****************************************
*  APPEND THE PROJECT CODE TO THE       *
*  END OF THE IN-STORAGE LOGONID        *
*  FLDACCT FIELD.                       *
*****************************************
PROCESS  TPUT  CLRSCR,CLRSCRL,FULLSCR       FORCE CLEARING OF SCREEN
         STFSMODE ON,INITIAL=NO             SET VTAM LINE MODE
         SR    R7,R7                        CLEAR REGISTER 2
         LR    R15,R5                       ADDRESS OF PROJECT CODE
         LA    R14,12                       BCT VALUE
         BCTR  R15,0                        MINUS 1 FOR INCR LOOP
INCR     LA    R15,1(R15)                   POINT TO NEXT CHARACTER
         CLI   0(R15),BLANK                 VALUE OF X'40'?
         BNE   GOINCR                        NO, GET NEXT DIGIT
         B     APPEND                        YES, BUILD JCL AND SUBMIT
GOINCR   AH    R7,H1                        ADD 1
         BCT   R14,INCR                     GET NEXT DIGIT
*****************************************
*  AT THIS POINT WE HAVE A VALID TSO    *
*  PROJECT CODE.  APPEND THIS CODE ONTO *
*  THE END OF THE ACF2 IN-STORAGE       *
*  FLDACCT FIELD.                       *
*****************************************
APPEND   L     R15,FLDACCT                  IN-STORAGE LIDREC
         LA    R15,81+13(R15)               END OF FLDACCT
         MVI   0(15),T                      POS. 14 LETTER T
         LR    R1,R7                        GET PROJECT CODE LENGTH
         BCTR  R1,0                         DECREMENT FOR EXECUTE
         EX    R1,MVCACCT                   APPEND TO END OF FLDACCT
         SR    R8,R8                        INDICATE ZERO RETURN CODE
*****************************************
*  PERFORM REENTRANT EXIT HOUSEKEEPING. *
*  AND SET RETURN CODE FROM REGISTER 8. *
*****************************************
EXIT     FREEMAIN R,LV=(4),A=(3)            FREE WORK AREA
         LR    R1,R13                       LOAD OUR S/A ADDRESS
         L     R13,4(,R13)                  RESTORE SYSTEM S/A ADDRESS
         FREEMAIN R,LV=72,A=(1)             FREE S/A
         LR    R15,R8                       ==> SET RETURN CODE
         LM    R0,R12,20(R13)               RESTORE ALL EXCEPT 14,15
         L     R14,12(R13)                  RESTORE RETURN ADDRESS
         BR    R14                          RETURN TO CALLER
*******************************************************************
*        E X E C U T E D    I N S T R U C T I O N S               *
*******************************************************************
MVCACCT  MVC   1(0,R15),0(R5)               FLDACCT+14
*******************************************************************
*        E R R O R                                                *
*        R O U T I N E                                            *
*        S E C T I O N                                            *
*******************************************************************
*****************************************
*  THE TSO USER HAS ENTERED LESS THAN   *
*  A SIX (6) DIGIT PROJECT CODE.        *
*  BUILD ERROR MESSAGE INTO CURRENT     *
*  FULLSCREEN AND REISSUE SCREEN TO TSO *
*  USER.                                *
*****************************************
LESS6    LA    R1,ERRDSPL(R3)               ERROR MESSAGE BUFFER
         XC    0(L'PADCHAR,R1),0(R1)        SET TO BINARY ZEROES
         MVC   0(L6MSGL,R1),L6MSG           WRITE ERROR MESSAGE
         MVC   0(L'UPPERCSE,R5),UPPERCSE    INITIALIZE TO BLANKS
         B     FUL3270                      REFRESH FULLSCREEN MESSAGE
*****************************************
*  THE TSO USER HAS ENTERED AT LEAST    *
*  ONE (1) NON-ALPHANUMERIC FIELD.      *
*  BUILD ERROR MESSAGE INTO CURRENT     *
*  FULLSCREEN AND REISSUE SCREEN TO TSO *
*  USER SHOWING BAD VALUE TO CORRECT.   *
*****************************************
NOALPHA  LA    R1,ERRDSPL(R3)               ERROR MESSAGE BUFFER
         XC    0(L'PADCHAR,R1),0(R1)        SET TO BINARY ZEROES
         MVC   0(ALPHAMGL,R1),ALPHAMG       WRITE ERROR MESSAGE
         MVC   ALPHACDL(12,R1),0(R5)        SHOW BAD PROJECT CODE
         MVC   0(L'UPPERCSE,R5),UPPERCSE    INITIALIZE TO BLANKS
         B     FUL3270                      REFRESH FULLSCREEN MESSAGE
*******************************************************************
*        M E S S A G E                                            *
*        S E C T I O N                                            *
*******************************************************************
H1       DC    H'1'
ONESEC   DC    F'100'    1 SECOND DELAY
*****************************************
*  TSO PROJECT CODE PROMPT SCREEN.      *
*****************************************
SCREEN   DS    0F                             ALIGN SCREEN TO FULLWORD
         DC    X'F1'                          WCC-ERASE WRITE
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'4040'                        SBA AT ROW 1  COLUMN 1
         DC    X'3C'                          REPEAT TO ADDR (CLEAR)
         DC    X'5D7F'                        ROW 24 COLUMN 80
         DC    X'00'                          FILL CHARACTER
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'4A5A'                        ROW 9  COLUMN 27
         DC    X'13'                          INSERT CURSOR FOR CLEAR
*****************************************
*  TUTORIAL FOR PROJECT CODE.           *
*****************************************
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'C5C1'                        ROW 5 COLUMN 3
         DC    X'1D'                          START FIELD
         DC    X'F0'                          ATTRIB-(P S)
         DC    C'PROJECT CODE MUST BE AN ALPHANUMERIC VALUE'
         DC    X'1D'                          START FIELD
         DC    X'F8'                          ATTRIB-(P S H)
         DC    C'6'
         DC    X'1D'                          START FIELD
         DC    X'F0'                          ATTRIB-(P S)
         DC    C'TO'
         DC    X'1D'                          START FIELD
         DC    X'F8'                          ATTRIB-(P S H)
         DC    C'12'
         DC    X'1D'                          START FIELD
         DC    X'F0'                          ATTRIB-(P S)
         DC    C'DIGITS'
         DC    X'1D'                          START FIELD
         DC    X'F8'                          ATTRIB-(P S H)
         DC    C' (A-Z 0-9 # OR -)'
**********************************************
*  ASK USER FOR PROJECT CODE.                *
**********************************************
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'4AC1'                        ROW 9 COLUMN 2
         DC    X'1D'                          START FIELD
         DC    X'F0'                          ATTRIB-(P S)
         DC    C'ENTER PROJECT CODE ===>'
         DC    X'1D'                          START FIELD
         DC    X'C8'                          ATTRIB-(U S H)
PROJCDE  EQU   *-SCREEN                PROJECT CODE DISPLACEMENT
         DC    12X'40'                        PROJECT CODE
         DC    X'1D'                          START FIELD
         DC    X'F0'                          ATTRIB-(P S)
ERRDSPL  EQU   *-SCREEN                ERROR MESSAGE DISPLACEMENT
PADCHAR  DC    XL70'00'                       ** PAD CHARACTERS **
*
SCRLNTH  EQU   *-SCREEN             SCREEN LENGTH DISPLACEMENT
UPPERCSE DC    XL12'404040404040404040404040'
*****************************************
* CLEAR TSO PROJECT CODE PROMPT SCREEN. *
*****************************************
CLRSCR   DS    0F                             ALIGN SCREEN TO FULLWORD
         DC    X'F1'                          WCC-ERASE WRITE
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'4040'                        SBA AT ROW 1  COLUMN 1
         DC    X'3C'                          REPEAT TO ADDR (CLEAR)
         DC    X'5D7F'                        ROW 24 COLUMN 80
         DC    X'00'                          FILL CHARACTER
         DC    X'11'                          SET BUFFER ADDRESS
         DC    X'4040'                        ROW 1  COLUMN  1
         DC    X'13'                          INSERT CURSOR FOR CLEAR
CLRSCRL  EQU   *-CLRSCR
*******************************************************************
*        E R R O R                                                *
*        M E S S A G E S                                          *
*******************************************************************
L6MSG    DC    X'1150D11DF8',C'PROJECT CODE MUST BE AT LEAST '
         DC    C'6 DIGITS IN LENGTH'
L6MSGL   EQU   *-L6MSG
ALPHAMG  DC    X'1150D11DF8',C'PROJECT CODE              NOT A VALID'
         DC    C' ALPHANUMERIC VALUE'
ALPHAMGL EQU   *-ALPHAMG
ALPHACDL EQU   18                   PROJECT CODE MESSAGE DISPLACEMENT
*******************************************************************
*        E M E R G E N C Y                                        *
*        M E S S A G E S                                          *
*******************************************************************
TABCDE   DC    256X'FF'         *** REVERSE TRANSLATE TABLE ***
         ORG   TABCDE+X'40'                     BLANK CHARACTER
         DC    X'00'
         ORG   TABCDE+X'60'                     -   CHARACTER
         DC    X'00'
         ORG   TABCDE+X'7B'                     #   CHARACTER
         DC    X'00'
         ORG   TABCDE+X'C1'                     A-I CHARACTERS
         DC    9X'00'
         ORG   TABCDE+X'D1'                     J-R CHARACTERS
         DC    9X'00'
         ORG   TABCDE+X'E2'                     S-Z CHARACTERS
         DC    8X'00'
         ORG   TABCDE+X'F0'                     0-9 CHARACTERS
         DC    10X'00'
         ORG
TABLANK  DC    256X'00'         *** TRANSLATE TABLE TO CHECK BLANK ***
         ORG   TABLANK+X'40'
         DC    X'FF'
         ORG
BLANK    EQU   X'40'
*******************************************************************
*        D S E C T S                                              *
*******************************************************************
         TITLE 'LGNPARMS: PARAMETER LIST FOR LWAEXIT'
         ACFLDWA DSECT
         TITLE 'LGNPARMS: IN-STORAGE LOGONID'
         LIDREC DSECT=YES
         REGISTER            REGISTER EQUATES
T        EQU    C'T'         LETTER T IN POSITION 14
         END    LGNPARMS
