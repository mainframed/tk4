*          DATA SET LGNPXIT    AT LEVEL 001 AS OF 07/07/86
LGNPXIT  TITLE 'ACF2 LOGON POST-VALIDATION EXIT'
***********************************************************************
*                                                                     *
*       PURPOSE                                                       *
*               TO VALIDATE LOGONID AGAINST RESOURCE 'TSO' WHICH      *
*       WILL SPECIFY A VTAM LUNAME USED FOR TSO DIAL-UP ACCESS ONLY.  *
*                                                                     *
*       MODULE  - LGNPXIT           03/24/85  TOM BRYANT              *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        LGNPXIT  ENTERS HERE                                         *
*                                                                     *
*       PROCESSING -                                                  *
*                                                                     *
*  TO VALIDATE TSO LOGON SOURCE AGAINST GENERALIZED                   *
*  RESOURCE RULES WITH A TYPE OF 'RTSO'.                              *
*  THIS WILL ALLOW THE CONTROL OF TSO DIALUPS WITHOUT HAVING TO       *
*  MAINTAIN LARGE DEFINITIONS OF SOURCE GROUPS.                       *
*                                                                     *
*  FOR EXAMPLE: THE FOLLOWING RULE WOULD ALLOW ANY USER WITH THE      *
*  PROPER UID STRING TO LOGON FROM SOURCE CAPC****. ALL OTHER LOGONS  *
*  WOULD BE PREVENTED. IF NO RULE EXISTS THE LOGON IS ALLOWED.        *
*                                                                     *
*          $KEY(CAPC****) TYPE(TSO)                                   *
*             UID(****************SS-) ALLOW                          *
*             UID(-) PREVENT                                          *
*                                                                     *
*  NOTE: TO USE MASKING IN THE RESOURCE KEY SPECIFY @RESDIR (R,TSO)   *
*        IN THE ACF2 FIELD DEFINITION RECORD                          *
*                                                                     *
*  REGISTERS UPON ENTRY.                                              *
*    R0  = THE ADDRESS OF THE ACVALD PARAMETER LIST.                  *
*                                                                     *
*    R1  = THE ADDRESS OF THE LOGON WORK AREA (LWA), AS IT IS         *
*          NORMALLY PASSED TO IKJEFLD BY TSO.                         *
*                                                                     *
*    R13 = A SAVE AREA ADDRESS.                                       *
*                                                                     *
*    R14 = THE RETURN ADDRESS..                                       *
*                                                                     *
*    R15 = THE ENTRY ADDRESS.                                         *
*                                                                     *
*  REGISTERS UPON RETURN.                                             *
*    R15 = RETURN CODE.                                               *
*                                                                     *
*  RETURN CODES FROM THIS EXIT ARE:                                   *
*    0 = ALLOW LOGON TO CONTINUE, USING ANY MODIFIED DATA.            *
*                                                                     *
*   >0 = CANCEL TSO SESSION.                                          *
***********************************************************************
LGNPXITX CSECT
         USING LGNPXITX,R15            TEMPORARY ADDRESSABILITY
         B     STMREGS                 BRANCH AROUND EYECATCHER
         DC    C'LGNPXITX'             LGNPXITX PROGRAM
         DC    C' '
         DC    C'&SYSDATE'             GREGORIAN DATE
         DC    C' '
         DC    C'&SYSTIME'             GREGORIAN DATE
         DS    0H                      RE-ESTABLISH ALIGNMENT
STMREGS  EQU   *
         DROP  R15                     DONE WITH ADDRESSABILITY
         EJECT
         STM   R14,R12,12(R13)         SAVE CALLING REGISTER
         LR    R11,R15                 SET FIRST BASE REGISTER
         USING LGNPXIT,R11             SET ADDRESSIBLITY
         LR    R9,R0                   SAVE "ACVALD" ACF FIELD
         USING ACVALD,R9               MAP ACF CONTROL BLOCK
         SPACE
***********************************************************************
*        GETMAIN A WORK AREA  . . .                                   *
***********************************************************************
         LA    R0,WKALEN               GET LENGTH TO GET
         GETMAIN R,LV=(0)              AND GET SOME STORAGE
         SPACE
         USING WKADSCT,R13             SET ADDRESSIBLITY TO IT
         LA    R2,0(R1)                GET ADDRESS TO CLEAR
         LA    R4,0(R1)                SET IT AGAIN
         LA    R3,WKALEN               SET LENGTH TO CLEAR
         XR    R5,R5                   SET SECOND LENGTH TO ZERO
         MVCL  R2,R4                   CLEAR STORAGE
         ST    R13,4(R1)               SAVE SAVE AREA ADDRESS
         ST    R1,8(R13)               SET MY SAVE AREA ADDRESS
         LR    R13,R1                  SET SAVE AREA POINTER
         EJECT
         SPACE
**********************************************************************
*                                                                    *
*        THIS SECURITY ID IS EXEMPT FROM ACF2 LOGON SOURCE VALIDATION*
*        THIS LID WOULD BE USED IF A RULE PREVENTING ALL TSO USERS   *
*        FROM LOGGING ONTO ALL SOURCES WAS ACCIDENTALLY BUILT.       *
*                                                                    *
**********************************************************************
         CLC   =C'SSTPB1',ACVLID   IS IT THE SOFTWARE SECURITY LID ?
         BE    RETURN00            YES - SKIP ACF2 LOGON SOURCE VALID.
**********************************************************************
*                                                                    *
*        CLEAR AND INITIALIZE ENTRY/RESOURCE PARAMETER BLOCK.        *
*                                                                    *
**********************************************************************
         XC    ACGRSRC(ACGRSLEN),ACGRSRC  ZERO PARM BLOCK
         MVI   ACGRNAME,C' '              CLEAR RESOURCE NAME
         MVC   ACGRNAME+1(L'ACGRNAME-1),ACGRNAME
         SPACE
**********************************************************************
*                                                                    *
*        GET THE ACUCB CONTROL BLOCK                                 *
*                                                                    *
**********************************************************************
         ACFINCVT R3,NONE=RETURN00      GET ACF2 CVT
         USING ACCVT,R3                 MAP ACF2 CVT
         SPACE
**********************************************************************
*                                                                    *
*        BUILD DUMMY ACUCB                                           *
*                                                                    *
**********************************************************************
         LA    R14,ACUCB              GET FIRST BYTE
         LA    R15,ACULEN             LENGTH OF ACUCB
         XR    R1,R1                  LENGTH, FILLER
         MVCL  R14,0                  ZERO ACUCB
         MVC   ACULID,ACVLID          GET LOGONID
         MVC   ACUUIDP,ACVUIDB        ADDRESS OF UID
         MVC   ACULRECP,ACVRECB       ADDRESS OF LIDREC
*
         L     R1,CVTPTR              GET THE CVT ADDRESS
         L     R1,CVTSMCA-CVT(R1)     GET SMF CPUID
         MVC   ACUSCPU,SMCASID-SMCABASE(R1)   COPY IT TO ACUCB
*
         ACF$TCB REG=R1,TCB=GET,MODE=CVT  GET CURRENT CVT ADDRESS
         L     R1,TCBTIO-TCB(R1)      NOW GET TIOT ADDRESS
         MVC   ACUSJOBN,0(R1)         COPY JOBNAME TO ACUCB
         MVC   ACUSTEP,8(R1)          COPY STEPNAME TO ACUCB
*
         TIME  BIN                    GET TIME/DATE
         STCM  R0,15,ACUSMTIM         DEFINE TIME STAMP
         STCM  R1,15,ACUSMDAT          AND DATE STAMP FOR SMF
         MVC   ACUSRTIM(8),ACUSMTIM   SET "READER TIME/DATE"
*
         MVC   ACUSUIF,=CL8' '        SMF USER IDENTIFICATION
         MVC   ACUJESID,=CL8' '       JES2 JOB NUMBER
*        MVC   ACUTIDNT,ACVSRCE       SOURCE ID
**********************************************************************
*        IN ACF2 3.1.3, THE ACVSRCE FIELD WAS FOUND TO HAVE GARBAGE  *
*        IN IT, THE TSO/VTAM LOGICAL UNIT (LU) NAME WILL BE READ VIA *
*        THE TIMESHARING CONTROL BLOCK (TSB) OFF OF THE ADDRESS      *
*        SPACE CONTROL BLOCK (ASCB).                                 *
*                                                                    *
*        FROM THE GENERALIZED RESOURCE LOGGING AND VIOLATION REPORTS,*
*        MASTER JCL PROGRAM PROCESSING (MSTJCL00) ATTACHES THIS EXIT *
*        IN AN UNAUTHORIZED STATE.  DUE TO THIS FACT IS IS NECESSARY *
*        TO USE THE SOFTWARE AUTHORIZATION SVC TO TURN ON THE        *
*        JSCBAUTH BIT TO ALLOW MODESET PROCESSING.   TOM BRYANT      *
**********************************************************************
         LA    R0,1                   LOAD VALUE TO SVC 255
         SVC   255                    TO GET AUTHORIZED
         MODESET KEY=ZERO,MODE=SUP    SUPERVISOR STATE - KEY 0
         LA    R1,16                  CVT ADDRESS
         L     R1,0(R1)               BEGINNING OF CVT
         L     R1,0(R1)               GET CVTTCBP LIST
         L     R2,8(R1)               GET CURRENT ASCB ADDRESS
         USING ASCB,R2                DSECT ASCB
         L     R2,ASCBTSB             GET TSB ADDRESS
         DROP  R2                     DONE WITH ASCB DSECT NOW
         USING TSB,R2                 DSECT TSB
         MVC   ACVSRCE,TSBTRMID       TERMINAL SYMBOLIC NAME
         DROP  R2                     DONE WITH TSB DSECT NOW
         SLR   R0,R0                  LOAD VALUE TO SVC 255
         SVC   255                    TO GET UNAUTHORIZED
         MODESET KEY=NZERO,MODE=PROB  KEY 8
         MVC   ACUTIDNT,ACVSRCE       SOURCE ID
         MVC   ACUPGM,=C'LOGON'       PROGRAM NAME
         MVC   ACUSPGM,ACUPGM         COPY TO CURRENT PROGRAM NAME
         MVC   ACUSLIB,=CL44'SYS1.LINKLIB'  DEFAULT TO LINKLIST
         MVC   ACUSLVOL,=CL8' '       BLANKS FOR LINKLIST
         MVI   ACUT2FLG,ACUT2JOB      PGM/LIB IS CURRENT
         MVC   ACUSKEY,=CL8' '        DSNAME HIGH LEVEL INDEX
**********************************************************************
*                                                                    *
*        SET UP RESOURCE ENTRY/RESOURCE PARAMETER BLOCK.             *
*                                                                    *
**********************************************************************
         LA    R4,ACUCB                 ADDRESS OF THE ACUCB
         ST    R4,ACGUCB                ADDRESS OF ACUCB FOR RES. CALL
         MVI   ACGFCN,4                FUNCTION CODE
         MVI   ACGSFCN,ACGSINP         SUB FUNCTION - INTERPRET
         MVI   ACGRFLGS,0              INIT RETURN FLAGS
         LA    R1,MESSAGE              MESSAGE AREA ADDRESS
         ST    R1,ACGMSG
         LA    R1,RULEDATA             RULE DATA AREA ADDRESS
         ST    R1,ACGREDTA
         LA    R1,L'RULEDATA           RULE DATA AREA LENGTH
         ST    R1,ACGREDTL
         MVC   ACGRTYPE,RESTYPE        RESOURCE TYPE = RTSO
         MVC   ACGMODID,=CL8'LGNPXIT ' MODULE NAME FOR SMF RECORDING
         SPACE
**********************************************************************
*                                                                    *
*        OBTAIN THE LOGICAL SOURCE NAME FROM THE ACVALD PARM LIST    *
*                                                                    *
**********************************************************************
         MVC   ACGRNAME(L'ACVSRCE),ACVSRCE  MOVE SOURCE NAME
         EJECT
**********************************************************************
*                                                                    *
*        ISSUE ACF2 RESOURCE VALIDATION CALL                         *
*                                                                    *
**********************************************************************
         ACFSVC ACGRSRC,TYPE=A,CVT=HAVE,NONE=RETURN00
         LTR   R15,R15                 WAS ACF2 SVC CALL SUCCESSFULL!
         DROP  R3                      DONE WITH ACCVT ADDRESSABILITY!
         BZ    CHKFLG                  YES, CHECK RESOURCE FLAG
         SPACE
**********************************************************************
*                                                                    *
*        IF NO RULE WAS FOUND (RULE DATA LENGTH IS X'FFFF'), THEN    *
*        ALLOW ACCESS. THIS IS TO ELIMINATE THE REQUIREMENT FOR A    *
*        GLOBAL RULE OF THE FORM:                                    *
*                                                                    *
*              $KEY(********) TYPE(TSO)                              *
*                ALLOW                                               *
*                                                                    *
*            NOTE:   FOR A SPECIFICATION OF 'LOG' THE ACF2 SVC HAS   *
*                    ALREADY LOGGED THE ENTRY BEFORE WE CHECK THE    *
*                    RULE BUFFER ADDRESS.                            *
**********************************************************************
         L     R1,ACGREDTA             LOAD ADDRESS OF RULE BUFFER
         CLC   FOXES,0(R1)             ANY RULE FOUND?
         BE    RETURN00                NO RULE FOUND, ALLOW ACCESS
**********************************************************************
*                                                                    *
*        ACF2 SVC CALL WAS SUCCESSFULL (R15=0)                       *
*                                                                    *
*        IF THE RULE SPECIFIES ALLOW - ALLOW THE ACCESS              *
*                                                                    *
*        IF THE RULE SPECIFIED LOG THE LOGGING OPERATION HAS         *
*         ALREADY COMPLETED  (SEE NOTE IN ABOVE SECTION              *
*                                                                    *
*        IF THE RULE SPECIFIES VERIFY  - ABORT AND LOG THE ACCESS    *
*                                                                    *
*        IF THE RULE SPECIFIES PREVENT - ABORT AND LOG THE ACCESS    *
*                                                                    *
**********************************************************************
CHKFLG   CLI   ACGRFLGS,0               DID ACF2 ALLOW ACCESS?
         BE    RETURN00                 IF SO, ALLOW ACCESS
         B     ABORT                    IF NOT 0 ABORT ACCESS
         EJECT
**********************************************************************
*                                                                    *
*        CONVERT ACF2 MESSAGE TO WTO FORMAT AND ISSUE WTO            *
*        SETUP FOR TPUT ERROR MESSAGE                                *
*                                                                    *
*        BRANCH TO TPUT ROUTINE                                      *
*                                                                    *
**********************************************************************
ABORT    LH    R1,MESSAGE               GET MESSAGE LENGTH
         LA    R1,MESSAGE(R1)           NEXT AVAILABLE BYTE IN MSG
         MVC   0(L'ROUTE,R1),ROUTE      ADD ROUTING CODES
         MVI   MESSAGE+1,X'80'          AND MCS FLAG
         WTO   MF=(E,MESSAGE)           ISSUE THE WTO
         LM    R3,R5,=A(SRCEB,SRCEMSGL,SRCEE) SETUP OF MULTI TPUT
RESTLUP  LR    R1,R3                    SET MESSAGE ADDRESS
         LR    R0,R4                    SET MESSAGE LENGTH
         TPUT  (1),(0),R                SEND THE MESSAGE
         BXLE  R3,R4,RESTLUP            SEND ALL MESSAGES
         STIMER WAIT,BINTVL=READMSG     ALLOW USER TO READ MULTI TPUT
         LA    R15,8                    SET TO KILL USER
         B     RETURN                   RETURN WITH BAD RC
         SPACE
***********************************************************************
*        FREEMAIN WORK AREA AND RETURN TO USER WITH PRE-SET RETURN CDE*
***********************************************************************
RETURN00 SR    R15,R15                 SET ZERO RETURN CODE
RETURN   L     R11,4(R13)              GET SAVE AREA ADDRESS
         LR    R2,R15                  GET RETURN CODE
         LA    R0,WKALEN               GET LENGTH
         LR    R1,R13                  GET ADDRESS TO FREE
         FREEMAIN R,LV=(0),A=(1)       AND FREE IT
         LR    R13,R11                 RE-SET SAVE AREA POINTER
         LR    R15,R2                  SET RETURN CODE
         L     R14,12(R13)             GET RETURN POINT
         LM    R0,R12,20(R13)          GET THE REST
         BR    R14                     AND RETURN
         EJECT
***********************************************************************
*        CONSTANTS WORKAREAS AND DSECTS  . . . . .                    *
***********************************************************************
RESTYPE  DC    C'RTSO'                 RESOURCE TYPE
FOXES    DC    X'FFFFFFFF'             NO RECORD INDICATOR
ROUTE    DC    X'000080A0'             WTO ROUTING CODES
READMSG  DC    F'500'                  5 SECONDS TO READ MULTI TPUT
         SPACE
***********************************************************************
*        TPUT ERROR MESSAGES                                          *
***********************************************************************
         SPACE
SRCEB    DC   C'                                                   '
SRCEMSGL EQU  *-SRCEB
         DC   C' ##################################################'
         DC   C' # YOU ARE NOT AUTHORIZED FOR TSO DIAL-UP ACCESS! #'
         DC   C' #                                                #'
         DC   C' # PLEASE CONTACT YOUR SECURITY ADMINISTRATOR     #'
         DC   C' # FOR AN AUTHORIZATION REQUEST.                  #'
         DC   C' ##################################################'
SRCEE    EQU  *-2
         SPACE
         LTORG
         EJECT
***********************************************************************
*        DSECT WORK AREA FOR THE PROGRAM   . . . .                    *
***********************************************************************
WKADSCT  DSECT
WKSAVEA  DS    9D                      SAVE AREA FOR PROGRAM
         SPACE
*        ACF2 ACGRSCR CONTROL BLOCK
         ACGRSRC DSECT=NO              RESOURCE PARM BLOCK
*        ACF2 ACUCB   CONTROL BLOCK
         ACUCB   DSECT=NO              ACF2 USER CONTROL BLOCK
         SPACE
*        ACF2 RULE DATA AREA
RULEDATA DS    CL132                   RULE DATA AREA
*        RULE DATA AREA: (HALFWORD LENGTH $USERDATA + $USERDATA) +
*                        (HALFWORD LENGTH RULE DATA + RULE DATA) =
*                        (2 + 64) + (2 + 64) = 132
**********************************************************************
         SPACE
*        ACF2 MESSAGE AREA
MESSAGE  DS    CL128                   MESSAGE AREA
*        DEBUG WORK AREA
*        DEBUGWRK
WKALEN   EQU   *-WKADSCT               CALC LENGTH
         SPACE
         IHAASCB
         IKJTSB
***********************************************************************
*           ACF2 VALIDATION CONTROL BLOCK AND LOGONID RECORD          *
***********************************************************************
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - ACVALD'
         ACVALD DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - ACCVT'
         ACCVT  DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - ACFASVT'
         ACFASVT DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - LIDREC'
         LIDREC DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - CVT'
         CVT    DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - IKJTCB'
         IKJTCB DSECT=YES
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT - IEESMCA'
         IEESMCA
         PRINT GEN
         TITLE 'ACF2 LOGON POST-VALIDATION EXIT'
         REGISTER
         END   LGNPXIT
