 TITLE 'SMF IEFUTL FOR CONTINUOUS JOB WAIT TIME LIMIT'
**********************************************************************
* NAME       -   IEFUTL                                              *
*                                                                    *
* AUTHOR     -   T. BRYANT                                           *
*                                                                    *
* FUNCTION   -   ALLOW CONTROL OF CONTINUOUS WAIT TIME (FROM         *
*                SMFPRMXX JWT PARAMETER) FROM THIS PROGRAM.          *
*                SEE GENERAL LOGIC BELOW.                            *
*                                                                    *
* INPUT          R0   -    BINARY VALUE AS FOLLOWS:                  *
* REGISTER                                                           *
* VALUES                   0 - JOB CPU TIME LIMIT EXPIRED            *
*                          4 - STEP CPU TIME LIMIT EXPIRED           *
*                          8 - CONTINUOUS WAIT TIME LIMIT FOR THE    *
*                              JOB EXPIRED (SMFPRMXX JWT PARAMETER)  *
*                                                                    *
*                R1   -    COMMON EXIT PARAMETER LIST (MAPPED BY     *
*                              IEFJMR)                               *
*                                                                    *
* OUTPUT         R15  -    BINARY VALUE AS FOLLOWS:                  *
* RETURN                                                             *
* CODES                    0 - JOB PROCESSING IS TO BE CANCELLED     *
*                          4 - JOB PROCESSING IS TO BE CONTINUED     *
*                              WITH A TIME EXTENSION IN TIMER UNITS  *
*                          8 - JOB PROCESSING IS TO BE CONTINUED     *
*                              WITH A TIME EXTENSION IN SECONDS.     *
*                                                                    *
*                R1   -    BINARY VALUE OF TIME EXTENSION            *
**********************************************************************
         EJECT
**********************************************************************
* SYSTEM     -   MVS/XA                                              *
*                                                                    *
* DATE       -   07/29/87                                            *
*                                                                    *
* MACROS     -   GETMAIN,FREEMAIN,EXTRACT,LOCASCB                    *
*                                                                    *
* DSECTS     -   CVT,IHAASCB,IEESMCA,IEFJMR,IEFUCBOB,IHAPSA          *
*                REGISTER                                            *
*                                                                    *
* REGISTERS  -   R0   -   INPUT PARAMETER REGISTER                   *
*                R1   -   INPUT PARAMETER REGISTER                   *
*                R2   -   TRT AND WORK REGISTER                      *
*                R3   -   COMMON EXIT PARAMETER LIST ADDRESS         *
*                R4   -   ADDRESS OF OUR ASCB                        *
*                R5   -   ADDRESS OF TSO USERID OR BATCH JOBNAME     *
*                R6   -   NUMBER OF OUR LOOKUP TABLE ENTRIES         *
*                R7   -   ADDRESS OF A TABLE ENTRY                   *
*                R8   -   NUMBER OF SECONDS FOR EXTENSION            *
*                R9   -   ADDRESS OF PSA                             *
*               R10   -   ADDRESS OF SAVE/WORK AREA FOR PACK         *
*               R11   -   ** UNUSED **                               *
*               R12   -   BASE REGISTER                              *
*               R13   -   SYSTEM SAVE AREA ADDRESS                   *
*               R14   -   RETURN ADDRESS                             *
*               R15   -   ENTRY POINT ADDRESS/RETURN CODE            *
*                                                                    *
* LANGUAGE   -    OS/VS ASSEMBLER                                    *
*                                                                    *
* ATTRIBUTES -    REENTRANT,REFRESHABLE SUPERVISOR STATE KEY 0       *
**********************************************************************
         EJECT
**********************************************************************
*                                                                    *
* GENERAL    -    TEST REGISTER 0 FOR 8 (CONTINUOUS WAIT TIME        *
* LOGIC           LIMIT EXCEEDED FOR JOB).                           *
*                                                                    *
*                 IF REGISTER 0 IS NOT EQUAL TO 8 THEN LEAVE EXIT.   *
*                                                                    *
* ×               IF THE JOB IS NOT A TSO SESSION (JMRFIND BIT       *
* ×               SETTING OFF IN JMRINDC) THEN CHECK TO SEE IF       *
* ×               THERE ARE ANY TAPE MOUNTS PENDING.  IF SO, THEN    *
* ×               EXTEND JOB WAIT TIME BY DEFAULT VALUE.  IF NOT,    *
* ×               ISSUE ABEND 522 IMMEDIATELY.                       *
*                                                                    *
**********************************************************************
*                                                                    *
*                 IF THE FIRST BYTE OF THE JMRUSEID FIELD IS         *
*                 A X'40', THEN SET IT TO A C'1' TO INDICATE THAT    *
*                 WE ARE GOING THROUGH THIS EXIT FOR THE FIRST TIME. *
*                                                                    *
*                 R15 = 8 AND EXIT PROGRAM.                          *
*                                                                    *
*                 IF THE FIRST BYTE OF THE JMRUSEID FIELD IS         *
*                 A C'1', THEN SET IT TO A C'X' TO INDICATE THAT     *
*                 A 522 ABEND WILL RESULT.                           *
*                                                                    *
*                 R15 = 0 AND EXIT PROGRAM.                          *
*                                                                    *
**********************************************************************
*                                                                    *
*  TIME EXTENSION                                                    *
*  LOGIC:                                                            *
*                 LOAD THE SMF JWTIME INITIALIZATION PARAMETER IN    *
*                 FIELD SMCASJWT IN THE SMCA.                        *
*                                                                    *
*                 SUBTRACT THE SMF JWTIME INTIALIZATION PARAMETER    *
*                 TIME FROM THE STORAGE TABLE JOB WAIT TIME FIELD.   *
*                                                                    *
*                 EXTEND THE JOB BY THE DIFFERENCE.                  *
*                                                                    *
**********************************************************************
         EJECT
************************************************************
*   PERFORM REENTRANT HOUSEKEEPING.                        *
************************************************************
IEFUTL   CSECT
         USING IEFUTL,R15           TEMPORARY ADDRESSABILITY
         B     BYPASS               BRANCH AROUND EYECATCHER
         DC    C'IEFUTL'            IEFUTL PROGRAM
         DC    C' '
         DC    C'&SYSDATE'          GREGORIAN DATE
         DC    C' '
         DC    C'&SYSTIME'          GREGORIAN DATE
BYPASS   DS    0H                   RE-ESTABLISH ALIGNMENT
         DROP  R15                  DONE WITH TEMP BASE NOW
         STM   R14,R12,12(R13)      SAVE REGISTERS
         LR    R12,R15              SET BASE REGISTER
         USING IEFUTL,R12           SET ADDRESSABILITY
************************************************************
*   ONLY PROCESS IF CONTINUOUS WAIT TIME EXCEEDED.         *
************************************************************
         CH    R0,CONTWAIT          CONTINUOUS WAIT TIME EXCEEDED?
         BNE   NOTIMEOT               IF NOT, CANCEL JOB
************************************************************
*   GET SAVE AND WORK AREA.                                *
************************************************************
         LA    R0,WORKL             SAVE AND WORK AREA
         GETMAIN R,LV=(0)           STORAGE FOR SAVE AREA
         ST    R13,4(R1)            SYSTEM S/A INTO OUR S/A
         ST    R1,8(R13)            OUR S/A INTO SYSTEM S/A
         LR    R13,R1               OUR S/A ADDRESS IN R13
         L     R1,4(R13)            RELOAD SYSTEM S/A ADDRESS
         LM    R0,R1,20(R1)         RELOAD REGS 0 AND 1
         SR    R9,R9                SET TO ADDRESS LOCATION 0
         USING PSA,R9               SET ADDRESSABILITY TO IT
************************************************************
*   HAVE WE BEEN THROUGH THIS EXIT BEFORE.                 *
*                                                          *
*   EXTRACT MVS/XA JWT FROM SMCA.                          *
************************************************************
         L     R3,0(R1)             COMMON EXIT PARAMETER LIST
         USING JMR,R3               SET ADDRESSABILITY
         CLC   JMRUSEID(1),CHAR1    2ND TIME IN THIS EXIT
         BE    EXIT522              SORRY, A 522 ABEND WILL RESULT
         L     R1,CVTLOC            GET CVT ADDRESS
         USING CVT,R1               DSECT CVT
         L     R1,CVTSMCA           GET SMCA ADDRESS
         DROP  R1                   DONE WITH DSECT NOW!
         USING SMCABASE,R1          DSECT SMCA
         LR    R10,R13              ADDRESS OF S/A
         USING WORKA,R10            DSECT IT
         MVC   PACKSJWT+7(1),=X'0C' MAKE SURE IT IS PACKED
         PACK  PACKSJWT,SMCASJWT    GET IN PACKED FORMAT
         DROP  R1                   DONE WITH DSECT NOW!
************************************************************
*   CHECK TO SEE IF THIS IS A TSO SESSION OR A BATCH JOB.  *
************************************************************
         TM    JMRINDC,JMRFIND      TSO SESSION?
         BO    TSOSESS                YES, GO PROCESS
*    WTO  'IEFUTL: BATCH JOB PROCESSING SECTION',ROUTCDE=1,DESC=1
*
*
*
************************************************************
* B A T C H    J O B    P R O C E S S I N G  S E C T I O N *
************************************************************
*
************************************************************
*  GET THE JOBNAME AND SEARCH ALL ONLINE TAPE UNITS FOR    *
*  TAPE MOUNT PENDINGS USING MVS/XA IOSVSUCB SERVICE       *
*  ROUTINE FOR OUR JOBNAME.                                *
*                                                          *
*  IF THERE ARE ANY TAPE MOUNTS PENDING, EXTEND THE JOB    *
*  BY THE DEFAULT JOB WAIT TIME.                           *
*                                                          *
*  IF THERE ARE NO TAPE MOUNTS PENDING, ISSUE ABEND 522    *
*  IMMEDIATELY.                                            *
************************************************************
BATCHJOB L     R1,CVTLOC           GET CVT ADDRESS
         USING CVT,R1              DSECT CVT
         L     R1,CVTUCBSC         LOAD UCB SCAN SERVICE ROUTINE
         ST    R1,OURUCBSC         SAVE IN OUR WORK AREA
         DROP  R1                  DONE WITH DSECT NOW!
         L     R4,PSAAOLD          CURRENT ASCB ADDRESS
         USING ASCB,R4             SET ADDRESSABILITY
         L     R5,ASCBJBNI         ADDRESS OF BATCH JOB
         DROP  R4                  DONE WITH DSECT NOW!
************************************************************
*   INITIALIZE OUR IOSVSUCB WORK AREA.                     *
*   BUILD OUR PARMLIST FOR THE IOSVSUCB ROUTINE.           *
************************************************************
         TR    UCBWRK,TRTAB        SET TO BINARY ZEROES
         LA    R1,UCBWRK           OUR 100-BYTE WORK AREA
         ST    R1,UCBWRKA          SAVE IN PARMLIST
         LA    R1,UCBDEVT          OUR DEVICE CLASS
         ST    R1,UCBDEVTA         SAVE IN PARMLIST
         MVI   UCBDEVT,UCB3TAPE    INDICATE TAPE UCBS ONLY
         LA    R1,UCBADDR          OUR UCB ADDRESS POINTER
         ST    R1,UCBADDRA         SAVE IN PARMLIST
         OI    UCBADDR,X'80'       TURN ON HIGH-ORDER BIT
************************************************************
*   GO EXECUTE THE IOSVSUCB ROUTINE.                       *
************************************************************
TAPEUCB  LA    R1,UCBWRKA          ADDRESS OF PARAMETER LIST
         L     R15,OURUCBSC        GET SCAN SERVICE ADDRESS
         BALR  R14,R15             EXECUTE IT
         LTR   R15,R15             NO MORE TAPE UCBS?
         BNZ   EXIT522             IF NONE, THEN ISSUE 522 ABEND
************************************************************
*   WE HAVE GOT A TAPE UCB.  CHECK TO SEE IF TAPE UCB      *
*   IS STANDARD UCB AND NOT UCB EXTENSION.  ALSO CHECK FOR *
*   ONLINE AND A MOUNT PENDING STATUS.                     *
************************************************************
         L     R2,UCBADDR          GET RETURNED TAPE UCB ADDR
         USING UCB,R2              DSECT IT
         CLI   UCBID,X'FF'         A STANDARD UCB ?
         BNE   TAPEUCB                IF NOT, GET ANOTHER UCB
         TM    UCBSTAT,UCBONLI     IS TAPE UNIT ONLINE ?
         BNO   TAPEUCB                IF NOT, GET ANOTHER UCB
         TM    UCBDMCT,UCBMOUNT    IS TAPE MOUNT PENDING ?
         BNO   TAPEUCB                IF NOT, GET ANOTHER UCB
************************************************************
*   GET THE ASID OF THE ADDRESS SPACE USING THIS TAPE      *
*   UCB FROM THE UCB EXTENSIONS AREA.  CHECK THE ASCB      *
*   AND GET THE JOBNAME.  SEE IF IT IS OUR JOBNAME.        *
************************************************************
         L     R1,UCBEXTPT         GET UCB TAPE EXTENSION
         USING UCBCMEXT,R1         SET ADDRESSABILITY
         LH    R1,UCBASID          GET ASID FOR THIS TAPE UCB
         DROP  R1,R2               DONE WITH ADDRESSABILITY
         LOCASCB ASID=(R1)         GET ASCB FOR THIS TAPE UCB
         LTR   R1,R1               DO WE HAVE A VALID ASCB?
         BP    GOTASCB               IF SO, GET ITS JOBNAME
         B     TAPEUCB               IF NOT, GET NEXT UCB
GOTASCB  LR    R2,R1               SAVE ASCB ADDRESS
         USING ASCB,R2             SET ADDRESSABILITY
         L     R1,ASCBJBNI         POINTER TO BATCH JOBNAME
         CLC   0(8,R1),0(R5)       TAPE JOBNAME = OUR JOBNAME?
         BE    DEFAULT               IF SO THEN SET DEFAULT WAIT TIME
         B     TAPEUCB               IF NOT, GET NEXT UCB
*
*
************************************************************
*  T S O    S E S S I O N   P R O C E S S I N G            *
*           S E C T I O N                                  *
************************************************************
*
************************************************************
*  EXTRACT ADDRESS OF TSO USERID FROM CURRENT ASCB.        *
************************************************************
TSOSESS  L     R1,CVTLOC            GET CVT ADDRESS
         USING CVT,R1               DSECT CVT
         DROP  R1                   DONE WITH DSECT NOW!
         L     R4,PSAAOLD           CURRENT ASCB ADDRESS
         USING ASCB,R4              SET ADDRESSABILITY
         L     R5,ASCBJBNS          ADDRESS OF TSO USERID
         DROP  R4                  DONE WITH DSECT NOW!
************************************************************
*  OUR TABLE JOB WAIT TIME MINUS THE MVS/XA SYSTEM JOB     *
*  WAIT TIME.                                              *
************************************************************
         LA    R6,AUTHENT           NUMBER OF TABLE ENTRIES
         LA    R7,AUTHTBL           ADDRESS OF LOOKUP TABLE
AUTHLOOP CLC   0(2,R5),0(R7)        MATCH ON 2 DIGIT AREA CODE?
         BE    LOADVAL              ===> A MATCH - PROCESS
         BCT   R6,AUTHLOOP          IF OUT OF LOOP - CONTINUE
************************************************************
*  IF THE TSO SESSION IS NOT FOUND IN THE TABLE - USE A    *
*  DEFAULT JOB WAIT TIME OF 30 MINUTES (FOR BATCH DEFAULT  *
*  ALSO).                                                  *
************************************************************
DEFAULT  LA    R8,30                DEFAULT OF 30 MINUTES
         B     GETJWT               FIGURE SMF JWT TIME
LOADVAL  LH    R8,2(R7)             GET LAST TWO BYTE TIME VALUE
GETJWT   CVB   R15,PACKSJWT         PUT SMF JWTIME IN R15
         DROP  R10                  DONE WITH DSECT NOW
         SR    R8,R15               SUBTRACT IBM SMF JWTIME VALUE
         BP    TIMELEFT             IF POSITIVE, MULTIPLY BY 60
         B     EXIT522              IF NEGATIVE, ISSUE 522 ABEND
************************************************************
*  THE TABLE JWTIME MINUS THE IBM JWTIME HAS YIELDED A     *
*  POSITIVE RESULT SO ALLOW ONE EXTENSION.                 *
************************************************************
TIMELEFT MH    R8,SIXTY             CONVERT TO SECONDS
         MVC   JMRUSEID(1),CHAR1    ONE AND ONLY TIME EXTENSION
         LA    R0,WORKL             SAVE AREA LENGTH
         LR    R1,R13               LOAD OUR S/A ADDRESS
         L     R13,4(R13)           RESTORE SYSTEM S/A ADDRESS
         FREEMAIN R,LV=(0),A=(1)    FREE SAVE AREA
         LR    R15,R8               SAVE NUMBER OF SECONDS TO EXTEND
         LM    R0,R12,20(R13)       RESTORE REGISTERS 0 THRU 12
         LR    R1,R15          ==>  RESET NUMBER OF SECONDS TO EXTEND
         L     R14,12(R13)          RESTORE RETURN ADDRESS
         LA    R15,8           ==>  A SECONDS TYPE EXTENSION RC=8
         BR    R14                  RETURN TO CALLER
************************************************************
*  THE TABLE JWTIME MINUS THE IBM JWTIME HAS YIELDED A     *
*  NEGATIVE RESULT INDICATING THAT A 522 ABEND SHOULD      *
*  RESULT.                                                 *
************************************************************
EXIT522  MVC   JMRUSEID(1),CHARX    WE'VE BEEN HERE BEFORE
         LA    R0,WORKL             SAVE AREA LENGTH
         LR    R1,R13               LOAD OUR S/A ADDRESS
         L     R13,4(R13)           RESTORE SYSTEM S/A ADDRESS
         FREEMAIN R,LV=(0),A=(1)    FREE SAVE AREA
NOTIMEOT LM    R0,R12,20(R13)       RESTORE REGISTERS 0 THRU 12
         L     R14,12(R13)          RESTORE RETURN ADDRESS
         SLR   R15,R15         ==>  INDICATE 522 ABEND RC=0
         BR    R14                  RETURN TO CALLER
************************************************************
*        C O N S T A N T S
************************************************************
CHAR1    DC    C'1'
CHARX    DC    C'X'
BINZERO  EQU   0                    A BINARY 0
SIXTY    DC    H'60'                SECONDS INDICATOR
CONTWAIT DC    H'8'                 CONTINUOUS WAIT
CVTLOC   EQU   16                   CVT ADDRESS OFFSET
TRTAB    DC    256X'00'             BINARY ZERO TRANSLATE TABLE
         LTORG
************************************************************
*        T S O    S E S S I O N    L O O K U P             *
*        T A B L E                                         *
************************************************************
AUTHTBL  DS    0H
         DC    CL2'SS',AL2(10)   SS TSO IDS 10 MINUTE JOB WAIT
         DC    CL2'ZZ',AL2(05)   ZZ TSO IDS 05 MINUTE JOB WAIT
         DC    CL2'ZZ',AL2(05)   ZZ TSO IDS 05 MINUTE JOB WAIT
AUTHENT  EQU   (*-AUTHTBL)/4     NO. OF TABLE ENTRIES
************************************************************
*        D S E C T S                                       *
************************************************************
WORKA    DSECT
SAVEAREA DS    18F
         DS    0D            FORCE DOUBLEWORD ALIGNMENT
PACKSJWT DS    PL8           PACKED SMCASJWT VALUE
         DS    0F            FORCE FULLWORD ALIGNMENT
OURUCBSC DS    F             LOADED FROM CVTUCBSC CVT VCON
UCBWRKA  DS    F             ADDRESS OF UCBWRK 100-BYTE WORK AREA
UCBDEVTA DS    F             ADDRESS OF DEVICE CLASS BYTE
UCBADDRA DS    F             ADDRESS OF WORD TO CONTAIN UCB ADDRESS
UCBADDR  DS    F             ADDRESS OF WORD TO CONTAIN UCB ADDRESS
         DS    0D            FORCE DOUBLEWORD ALIGNMENT
UCBWRK   DS    XL100         IOSVSUCB 100-BYTE WORK AREA
UCBDEVT  DS    XL1           DEVICE CLASS BYTE - TAPE
WORKL    EQU   *-WORKA
         CVT    DSECT=YES,LIST=NO
         IHAPSA DSECT=YES,LIST=NO
         IHAASCB
         IEESMCA
         IEFJMR
UCB      DSECT
         IEFUCBOB LIST=YES,PREFIX=NO
         REGISTER
         END     IEFUTL
