ACFVIOS  CSECT
 TITLE 'ACF2 AUTOMATIC HANDLING OF VIOLATION COUNTERS'
**********************************************************************
* NAME       -   ACFVIOS                                             *
*                                                                    *
* AUTHOR     -   T. BRYANT                                           *
*                                                                    *
* FUNCTION   -   THIS PROGRAM WILL PERFORM AUTOMATIC HANDLING OF     *
*                THE USER-DEFINED ACF2 VIOLATION COUNTERS.           *
*                                                                    *
* INPUT      -   ACF2 PRIMARY SEQUENTIAL BACKUP DATABASE             *
*                                                                    *
* OUTPUT     -   NONE                                                *
*                                                                    *
* SYSTEM     -   MVS/XA 2.1.7.                                       *
*                                                                    *
* DATE       -   11/29/87                                            *
*                                                                    *
* MACROS     -   ACFINCVT,ACFSVC,CLOSE,GET,OPEN,MODESET,WTO          *
*                                                                    *
* DSECTS     -   ACCVT,LIDREC                                        *
*                                                                    *
*                                                                    *
* REGISTERS  -   R0    -  ***  UNUSED BY MVS ***                     *
*                R1    -  ***  UNUSED BY MVS ***                     *
*                R2    -  ***  UNUSED   ***                          *
*                R3    -  ACF2 CVT ADDRESS                           *
*                R4    -  LIDREC ADDRESS                             *
*                R5    -  SEC-VIO LOAD HALFWORD VALUE                *
*                R6    -  ANY VALUE INDICATES LEAP YEAR              *
*                R7    -  ADDRESS OF ACALT ERRMSG                    *
*                R8    -  ***  UNUSED   ***                          *
*                R9    -  ***  UNUSED   ***                          *
*                R10   -  ***  UNUSED   ***                          *
*                R11   -  ***  UNUSED   ***                          *
*                R12   -  BASE REGISTER                              *
*                R13   -  SYSTEM SAVE AREA ADDRESS                   *
*                R14   -  RETURN TO MVS BRANCH ADDRESS               *
*                R15   -  ACFVIOS PROGRAM ENTRY POINT ADDRESS        *
*                                                                    *
* LANGUAGE   -    OS/VS ASSEMBLER                                    *
*                                                                    *
* PRIVILEGES -    NONE                                               *
*                                                                    *
* ATTRIBUTES -    SUPERVISOR KEY 0 FOR ACF2 DATABASE UPDATE ROUTINE. *
*                 AND ISSUANCE OF F ACF2,BACKUP OPERATOR COMMAND.    *
*                 PROBLEM KEY 8 FOR REMAINDER OF PROGRAM.            *
*                                                                    *
**********************************************************************
**********************************************************************
*                                                                    *
* PROGRAM FUNCTIONAL DESCRIPTION:                                    *
*                                                                    *
*                                                                    *
*               1.) ACFVIOS READS THE ACF2 PRIMARY SEQUENTIAL BACKUP *
*                   LOGONID DATABASE AND GETS THE ACF2 SECURITY      *
*                   VIOLATION COUNTER (SEC-VIO).                     *
*                                                                    *
*                                                                    *
*               2.) THE AMOUNT IN SEC-VIO SHOULD BE ADDED TO THE     *
*                   CONTENTS OF THESE TWO FIELDS:                    *
*                                                                    *
*                   VIOS-MTD     ===>  MONTH-TO-DATE VIOLATIONS      *
*                                                                    *
*                   VIOS-CUM     ===>  TOTAL VIOLATIONS SINCE        *
*                                      LOGONID WAS CREATED           *
*                                                                    *
*                                                                    *
*               3.) SUSPEND ALL NON-RESTRICT,NON-STC LOGONIDS WITH   *
*                   MORE THAN 5 VIOLATIONS IN THE SEC-VIO FIELD.     *
*                                                                    *
*                                                                    *
*               4.) ZERO-OUT THE SEC-VIO FIELD FOR ALL LOGONIDS.     *
*                                                                    *
*                                                                    *
*               5.) AFTER ALL LOGONIDS PROCESSED, ISSUE THE          *
*                   'F ACF2,BACKUP' OPERATOR COMMAND AND NOTIFY      *
*                   OPERATOR VIA WTO (IN WHITE) THAT BACKUP WAS      *
*                   INITIATED.                                       *
*                                                                    *
**********************************************************************
*********************************************
*   CREATE PROGRAM EYECATCHER FOR A DUMP.   *
*********************************************
         USING ACFVIOS,R15              TEMP ADDRESSABILITY
         B     ICATCHER                 BRANCH AROUND EYECATCHER
         DC    C'ACFVIOS'               ACFVIOS PROGRAM
         DC    C' '
         DC    C'&SYSDATE'              GREGORIAN DATE
         DC    C' '
         DC    C'&SYSTIME'              GREGORIAN TIME
         DS    0H                       RE-ESTABLISH ALIGNMENT
ICATCHER EQU   *
         DROP  R15                  DONE WITH TEMP ADDRESSABILITY NOW
*********************************************
*   PERFORM ENTRY LOGIC.                    *
*********************************************
         STM   R14,R12,12(R13)          SAVE REGISTERS
         LR    R12,R15                  ENTRY POINT ADDRESS LOAD
         USING ACFVIOS,R12              SET ADDRESSABILITY
         LR    R3,R13                   SAVE SYSTEM ADDRESS
         ST    R13,SAVEAREA+4           SYSTEM ADDR IN MY SAVEAREA
         LA    R13,SAVEAREA             ADDRESS OF MY SAVEAREA
         ST    R13,8(R3)                MY SAVEAREA PUT IN SYSTEM
*********************************************
*   IF ACF2 IS ACTIVE, GET THE ACCVT        *
*   ADDRESS AND SET ADDRESSABILITY TO IT    *
*   FOR CVT=HAVE USE OF ACFSVC.             *
*********************************************
        ACFINCVT R3,NONE=NOACF2         GET ACF2 CVT (INLINE CODE)
        USING  ACCVT,R3                 SET ADDRESSABILITY
*********************************************
*   PERFORM EDIT CHECKING TO SEE IF WE ARE  *
*   GOING TO EXPIRE ANY LOGONIDS.           *
*********************************************
         OPEN  (LIDS,(INPUT))           OPEN BACKUP DATABASE
         TM    LIDS+48,GOODOPEN         WAS OPEN SUCCESSFULL?
         BZ    LIDSNO                   IF NOT, ISSUE MSG AND END
READID   GET   LIDS                     R1 HAS ADDRESS OF INPUT AREA
         LR    R4,R1                    SAVE IT IN REGISTER 3
         LA    R4,4(R4)                 BUMP PAST 4 BYTE RDW
         USING LIDREC,R4                SET ADDRESSABILITY
*********************************************
*   THIS IS THE RESTRICTION LIST FOR THIS   *
*   PROGRAM:                                *
*                                           *
*   1.)  NO SS LOGONIDS WILL GO THROUGH     *
*        THIS CODE.                         *
*                                           *
*   2.)  DO NOT PROCESS CANCELLED LOGONIDS  *
*                                           *
*   3.)  DO NOT PROCESS SUSPENDED LOGONIDS  *
*                                           *
*   4.)  DO NOT PROCESS EXPIRED LOGONIDS    *
*********************************************
         CLC   LIDLID(2),SSPGMR         A SYSTEMS SUPPORT LOGONID
         BE    READID                   IF SO, BYPASS PROCESSING
         TM    LIDCFLAG,LIDCCAN+LIDCSUS CANCELLED OR SUSPENDED
         BM    READID                   IF SO, BYPASS PROCESSING
         CP    LIDEXPDT,PZERO4          LOGONID EXPIRED
         BNE   READID                   IF SO, BYPASS PROCESSING
*********************************************
*   ADD THE SEC-VIO VALUE TO THE FOLLOWING  *
*   FIELDS:                                 *
*                                           *
*   VIOS-MTD (LIDVMTD)   MONTH-TO-DATE      *
*   VIOS-CUM (LIDVCUM)   TOTAL FOR LOGONID  *
*                                           *
*   THE RESULTING TOTALS SHOULD BE REPLACED *
*   IN THE ACF2 DATABASE.                   *
*********************************************
CHKLID   XC    SECVIOV,SECVIOV          INITIALIZE EXTENDED ARE FIELD
         XC    VIOMTDV,VIOMTDV          INITIALIZE EXTENDED ARE FIELD
         XC    VIOCUMV,VIOCUMV          INITIALIZE EXTENDED ARE FIELD
         XC    SUSPDV,SUSPDV            SET DEFAULT TO NOSUSPEND
         LH    R5,LIDSECV               LOAD SEC-VIO
         LTR   R5,R5                    ANY VALUE IN SEC-VIO?
         BZ    READID                   IF NO VALUE THEN READ NEXT ID
         LH    R1,LIDVMTD               LOAD VIOS-MTD
         AR    R1,R5                    ADD SEC-VIO TO IT
         ST    R1,VIOMTDV               SAVE IN XARE
         LH    R1,LIDVCUM               LOAD VIOS-CUM
         AR    R1,R5                    ADD SEC-VIO TO IT
         ST    R1,VIOCUMV               SAVE IN ALTER REQUEST ENTRY
*********************************************
*   BUILD STATIC PORTION OF TYPE=A ACF2     *
*   DATABASE ALTERATION PARAMETER LIST.     *
*********************************************
         MVI   ACAFCN,2                 SET LID UPDATE FUNCTION
         MVI   ACASFCN,ACASALT          ALTER LOGONID RECORD
         MVC   ACALID,LIDLID            SET LOGONID TO BE UPDATED
         MVC   ACAUCB,WORDFFFF          SET FOR SUPERCALL
         LA    R1,ERRMSG                OUR ERROR MESSAGE WORK AREA
         ST    R1,ACAMSG                STORE IN ACALT CONTROL BLOCK
*********************************************
*   INVOKE TYPE=A DATABASE ALTERATION SVC   *
*   TO REPLACE THE VIOS-MTD AND VIOS-CUM    *
*   WITH OUR COMPUTED VALUES.               *
*********************************************
         LA    R1,VIOMTD                ADDRESS OF FIRST XARE
         ST    R1,ACAAREB               SET IN ACALT BLOCK
         LA    R1,VIOMTDL+VIOCUML       TOTAL XARE LENGTHS
         ST    R1,ACAAREL               SET IN ACALT BLOCK
         MODESET MODE=SUP,KEY=ZERO      SUPERVISOR STATE KEY 0
         ACFSVC ACALT,TYPE=A,NONE=ENDLIDS,CVT=HAVE    UPDATE FIELDS
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO    PROBLEM STATE KEY 8
         LTR   R2,R2                    WAS RETURN CODE GOOD?
         BZ    SUSPPROC                 IF SO, CONTINUE
         LA    R7,WTOMSG+4              SET ACF2 BUILD WTO
         WTO   MF=(E,(R7))              ISSUE ACF2 ERROR MESSAGE
*********************************************
*   INVOKE TYPE=A DATABASE ALTERATION SVC   *
*   TO SUSPEND THE LOGONID IF THE LOGONID   *
*   DOES NOT HAVE THE 'RESTRICT' OR 'STC'   *
*   ATTRIBUTE AND HAS MORE THAN 5 SECURITY  *
*   VIOLATIONS (SEC-VIO).                   *
*********************************************
SUSPPROC TM    LIDMFLG,LIDMRST+LIDMSTC  RESTRICT OR STC ONLY
         BNZ   SECPROC                  IF SO, DO NOT SUSPEND!
         CH    R5,H5                    DO WE HAVE 5 VIOLATIONS?
         BNH   SECPROC                  IF NOT, GO ZERO OUT SEC-VIO
         LA    R1,SUSPD                 ADDRESS OF FIRST XARE
         ST    R1,ACAAREB               SET IN ACALT BLOCK
         LA    R1,SUSPDL                TOTAL XARE LENGTHS
         ST    R1,ACAAREL               SET IN ACALT BLOCK
         MVI   SUSPDV,SUSPNDID          INDICATE LOGONID SUSPENSION
         MODESET MODE=SUP,KEY=ZERO      SUPERVISOR STATE KEY 0
         ACFSVC ACALT,TYPE=A,NONE=ENDLIDS,CVT=HAVE    UPDATE FIELDS
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO    PROBLEM STATE KEY 8
         LTR   R2,R2                    WAS RETURN CODE GOOD?
         BZ    SECPROC                  IF SO, CONTINUE
         LA    R7,WTOMSG+4              SET ACF2 BUILD WTO
         WTO   MF=(E,(R7))              ISSUE ACF2 ERROR MESSAGE
*********************************************
*   INVOKE TYPE=A DATABASE ALTERATION SVC   *
*   TO REPLACE THE SEC-VIO ACF2 FIELD WITH  *
*   OUR VALUE IN ORDER TO ZERO IT OUT.      *
*********************************************
SECPROC  LA    R1,SECVIO                ADDRESS OF FIRST XARE
         ST    R1,ACAAREB               SET IN ACALT BLOCK
         LA    R1,SECVIOL               TOTAL XARE LENGTHS
         ST    R1,ACAAREL               SET IN ACALT BLOCK
         MODESET MODE=SUP,KEY=ZERO      SUPERVISOR STATE KEY 0
         ACFSVC ACALT,TYPE=A,NONE=ENDLIDS,CVT=HAVE    UPDATE FIELDS
         LR    R2,R15                   SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO    PROBLEM STATE KEY 8
         LTR   R2,R2                    WAS RETURN CODE GOOD?
         BZ    NEXTLID                  IF SO, CLOSE INPUT FILE
         LA    R7,WTOMSG+4              SET ACF2 BUILD WTO
         WTO   MF=(E,(R7))              ISSUE ACF2 ERROR MESSAGE
NEXTLID  B     READID                   GET NEXT LOGONID
*********************************************
*   AFTER ALL LOGONID PROCESSING, ISSUE     *
*   THE 'F ACF2,BACKUP' OPERATOR COMMAND    *
*   TO UPDATE THE BACKUP SEQUENTIAL         *
*   DATABASE.                               *
*********************************************
ENDLIDS  CLOSE (LIDS)                   CLOSE SEQUENTIAL DATABASE
         WTO   'ACFVIOS:  ACF2 BACKUP INITIATED',ROUTCDE=1,DESC=2
         MODESET MODE=SUP,KEY=ZERO      SUPERVISOR STATE KEY 0
         LA    R1,OPERCMD               ADDRESS OF MESSAGE
         SR    R0,R0                    ZERO REGISTER 0
         SVC   34                       ISSUE OPERATOR COMMAND
         MODESET MODE=PROB,KEY=NZERO    PROBLEM STATE KEY 8
*********************************************
*   PERFORM EXIT LOGIC.                     *
*********************************************
FINIS    L     R13,SAVEAREA+4           SYSTEM SAVE AREA ADDRESS
         SR    R15,R15                  SET GOOD RETURN CODE
         LM    R0,R12,20(R13)           RESTORE ALL EXCEPT 14,15
         L     R14,12(R13)              RESTORE RETURN ADDRESS
         BR    R14                      RETURN TO CALLER
*********************************************
*   ERROR ROUTINES.                         *
*********************************************
NOACF2   WTO  'ACFVIOS: ACF2 IS NOT ACTIVE',                           +
               ROUTCDE=1,DESC=2
         B     FINIS
LIDSNO   WTO  'ACFVIOS: LIDS INPUT FILE OPEN FAILED',                  +
               ROUTCDE=1,DESC=2
         B     FINIS
*********************************************
*        C O N S T A N T S                  *
*********************************************
SAVEAREA DS    18F
WORDFFFF DC    XL4'FFFFFFFF'  INDICATE SUPERCALL FUNCTION
H5       DC    H'5'
X1       DC    X'1'
USEREXP  DS    XL1            REPORT INDICATOR BYTE
PZERO4   DC    PL4'0'         PACKED VALUE OF 0 LENGTH OF 4
SSPGMR   DC    C'SS'          SYSTEMS SUPPORT PROGRAMMER
OPERCMD  DC    0D'0'
         DC    AL2(L'BKPCMD+4)           4 BYTES PLUS COMMAND LENGTH
         DC    XL2'00'                   FILLER
BKPCMD   DC    C'F ACF2,BACKUP'          OPERATOR COMMAND
*********************************************
*        D C B    DEFINITIONS               *
*********************************************
LIDS     DCB   DDNAME=LIDS,DSORG=PS,MACRF=GL,EODAD=ENDLIDS
*********************************************
*  LOGONID DATABASE UPDATE PARAMETER LIST   *
*********************************************
         ACALT DSECT=NO           PARM LIST FOR LID UPDATE FUNCTION
*********************************************
*                                           *
*  EXTENDED ALTER REQUEST ENTRIES FOR:      *
*                                           *
*  VIOS-MTD      MONTH-TO-DATE VIOLATIONS   *
*  VIOS-CUM      CUMULATIVE VIOLATIONS      *
*                                           *
*********************************************
         DS    0H                 ROUND UP TO HALFWORD BOUNDARY
VIOMTD   DC    AL2(VIOMTDL)       LENGTH OF ALTER REQUEST ENTRY
         DC    X'00'              MORE ENTRIES FOLLOW
         DC    AL1(AREBREP)       REPLACE BINARY FIELD
         DC    CL8'VIOS-MTD'      NAME OF FIELD TO MODIFY
         DC    X'1000'            INDICATES AN EXTENDED ARE
         DC    AL2(VIOMTDF-VIOMTD) LENGTH OF FIXED SECTION
         DC    AL2(VIOMTDF-VIOMTD) OFFSET TO VALUE SECTION
VIOMTDF  DC    XL2'4'             MUST BE 4 FOR AREBREP
VIOMTDV  DS    XL4                MOVE BINARY VALUE HERE
VIOMTDL  EQU   *-VIOMTD           TOTAL LENGTH OF VIOMTD
         DS    0H                 ROUND UP TO HALFWORD BOUNDARY
VIOCUM   DC    AL2(VIOCUML)       LENGTH OF ALTER REQUEST ENTRY
         DC    X'80'              INDICATES LAST ALTER REQUEST ENTRY
         DC    AL1(AREBREP)       REPLACE BINARY FIELD
         DC    CL8'VIOS-CUM'      NAME OF FIELD TO MODIFY
         DC    X'1000'            INDICATES AN EXTENDED ARE
         DC    AL2(VIOCUMF-VIOCUM) LENGTH OF FIXED SECTION
         DC    AL2(VIOCUMF-VIOCUM) OFFSET TO VALUE SECTION
VIOCUMF  DC    XL2'4'             MUST BE 4 FOR AREBREP
VIOCUMV  DS    XL4                MOVE BINARY VALUE HERE
VIOCUML  EQU   *-VIOCUM           TOTAL LENGTH OF VIOCUM
*********************************************
*                                           *
*  EXTENDED ALTER REQUEST ENTRIES FOR:      *
*                                           *
*  SUSPEND       LOGONID SUSPEND INDICATOR  *
*                                           *
*********************************************
         DS    0H                 ROUND UP TO HALFWORD BOUNDARY
SUSPD    DC    AL2(SUSPDL)        LENGTH OF ALTER REQUEST ENTRY
         DC    X'80'              INDICATES LAST ALTER REQUEST ENTRY
         DC    AL1(ARESREP)       REPLACE SWITCH FIELD
         DC    CL8'SUSPEND'       NAME OF FIELD TO MODIFY
         DC    X'1000'            INDICATES AN EXTENDED ARE
         DC    AL2(SUSPDF-SUSPD)  LENGTH OF FIXED SECTION
         DC    AL2(SUSPDF-SUSPD)  OFFSET TO VALUE SECTION
SUSPDF   DC    XL2'1'             MUST BE 1 FOR ARESREP
SUSPDV   DS    XL1                MOVE SWITCH VALUE HERE
SUSPDL   EQU   *-SUSPD            TOTAL LENGTH OF SUSPD
*********************************************
*                                           *
*  EXTENDED ALTER REQUEST ENTRY FOR:        *
*                                           *
*  SEC-VIO       ACF2 SECURITY VIOLATION    *
*                COUNTER                    *
*                                           *
*********************************************
         DS    0H                 ROUND UP TO HALFWORD BOUNDARY
SECVIO   DC    AL2(SECVIOL)       LENGTH OF ALTER REQUEST ENTRY
         DC    X'80'              INDICATES LAST ALTER REQUEST ENTRY
         DC    AL1(AREBREP)       REPLACE BINARY FIELD
         DC    CL8'SEC-VIO'       NAME OF FIELD TO MODIFY
         DC    X'1000'            INDICATES AN EXTENDED ARE
         DC    AL2(SECVIOF-SECVIO) LENGTH OF FIXED SECTION
         DC    AL2(SECVIOF-SECVIO) OFFSET TO VALUE SECTION
SECVIOF  DC    XL2'4'             MUST BE 4 FOR AREBREP
SECVIOV  DS    XL4                MOVE BINARY VALUE HERE
SECVIOL  EQU   *-SECVIO           TOTAL LENGTH OF SECVIO
*********************************************
*  EXPANSION OF WRITE-TO-OPERATOR (WTO)     *
*  MESSAGE FOR ACALT MESSAGE AREA           *
*********************************************
WTOMSG   DS    0F
         DC    AL2(WTOMSGL-4)
MCSFLAG  DC    B'1000000000000000'
ERRMSG   DS    CL128              ACALT MESSAGE AREA
DESCFLG  DC    B'1000000000000000'
ROUTFLG  DC    B'0000000000100000'
WTOMSGL  EQU   *-WTOMSG
*********************************************
*        D S E C T S   AND                  *
*        E Q U A T E S                      *
*********************************************
AREBREP  EQU   1                  INDICATES REPLACE BINARY FIELD
ARESREP  EQU   6                  INDICATES REPLACE SWITCH FIELD
SUSPNDID EQU   X'10'
GOODOPEN EQU   X'10'
HEXFF    EQU   X'FF'
         REGISTER
         ACCVT
         LIDREC DSECT=YES
         END  ACFVIOS
