         TITLE 'MTSSVT  - SSVT MODIFY  '
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*      MTSS - MODIFY TRANSIENT SUBSYSTEM                              *
*                                                                     *
*                                                                     *
*      THIS PROGRAM WAS DESIGNED AS A TOOL FOR DEVELOPING AND         *
*      TESTING SUBSYSTEMS.  ITS INTENDED FUNCTION IS TO BE ABLE,      *
*      WHEN USED IN CONJUNCTION WITH THE MODREP PROGRAM, TO           *
*      ACTIVATE AND DE-ACTIVATE PRU-DEVELOPED SUBSYSTEMS WITHOUT      *
*      HAVING TO IPL MVS.                                             *
*                                                                     *
*                                                                     *
*      NORMALLY ANY SUBSYSTEM WHOSE NAME IS DEFINED IN LINKLIB        *
*      MEMBER IEFJSSNT WILL BE INITIALIZED DURING MASTER SCHED-       *
*      ULER INITIALIZATION IF THE IEFJSSNT ENTRY CONTAINS THE         *
*      NAME OF AN INITIALIZATION ROUTINE TO BE EXECUTED.  WHEN        *
*      PERFORMING A START FUNCTION THIS PROGRAM EMULATES THE          *
*      MASTER SCHEDULER BY PLACING THE MACHINE IN KEY ZERO SUPER-     *
*      VISOR STATE, CONTRUCTING THE SAME PARAMETER LIST THAT          *
*      THE MASTER SCHEDULER CONTRUCTS (THE ADDRESS OF THE SUB-        *
*      SYSTEM'S SSCT), THEN LOADING AND EXECUTING THE INITIALIZATION  *
*      ROUTINE.  BY DEFINITION, A SUBSYSTEM IS ACTIVE WHEN THE        *
*      SSCT CONTRUCTED BY THE MASTER SCHEDULER AT IPL TIME CON-       *
*      TAINS THE ADDRESS OF THE SUBSYSTEM'S SSVT.  THE MAJOR          *
*      FUNCTION AND IN FACT THE  ONLY REQUIRED FUNCTION OF A          *
*      SUBSYSTEM INITIALIZATION ROUTINE IS THAT IT BUILD AN SSVT      *
*      AND CHAIN IT OFF THE SSCT.  THAT IS ALL MOST PRU-DEVELOPED     *
*      SUBSYSTEM INIT ROUTINES DO.  TO DE-ACTIVATE A                  *
*      SUBSYSTEM ALL THAT IS REQUIRED IS THAT THE SSCT POINTER TO     *
*      THE SUBSYSTEM'S SSVT BE ZEROED OUT.  THAT IS ALL THIS PRO-     *
*      GRAM DOES WHEN STOPPING A SUBSYSTEM.  THAT IS ALL THAT         *
*      ANY SUBSYSTEM MODIFIED BY THIS PROGRAM SHOULD REQUIRE.         *
*                                                                     *
*                                                                     *
*      THIS PROGRAM IS RE-ENTRANT, REFRESHABLE, AND AUTHORIZED.       *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        PGM INITIALIZATION                                           *
*                                                                     *
*---------------------------------------------------------------------*
MTSSVT   AMODE 31
MTSSVT   RMODE 24
MTSSVT   CSECT
         STM   R14,R12,12(R13)           SAVE REGISTERS
         LR    R12,R15                   LOAD BASE
         USING MTSSVT,R12                DECLARE BASE
         B     MTSS0000                  BRANCH AROUND MODULE ID
         DC    C'MTSSVT &SYSDATE'
MTSS0000 DS    0H
         LR    R5,R1                     SAVE PTR TO PARM ADDRESS
         L     R6,XXXMTSSS               GET WKAREA SUBPOOL AND SIZE
         GETMAIN R,LV=(6)                GET THE WORKAREA
         LR    R2,R1                     A(AREA) FOR MVCL
         LA    R3,MTSWKL                 L'WKAREA
         SR    R14,R14                   NO SOURCE
         SR    R15,R15                   NO SOURCE LENGTH
         MVCL  R2,R14                    ZERO THE AREA
         ST    R13,4(,R1)                CHAIN THE
         ST    R1,8(,R13)                   SAVE AREAS
         LR    R13,R1                    NEW SAVE AREA
         USING MTSSWK,R13                BASE FOR WORK AREA
         MVC   MTSID,=C' MTSSWK '        LABEL WORKAREA
         ST    R5,MTSPRMAD               SAVE R1 ENTRY PARM
         ST    R6,MTSSS                  SUBPOOL AND SIZE TO WKAREA
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*       CHECK OUT THE PARM                                            *
*                                                                     *
*---------------------------------------------------------------------*
PRM00000 DS    0H
         LA    R0,START                  DEFAULT OPT = START
         MVC   MTSSID,BLANKS             SUBSYSTEM NAME = BLANKS
         MVC   MTSLMOD,BLANKS            ENTRY POINT NAME = BLANKS
         L     R5,0(R5)                  GET A(PARM)
         LH    R3,0(R5)                  GET PARM LENGTH
         LTR   R3,R3                     IS THERE A PARM
         BZ    PRM02000                  NO, SUBSYS NAME = JOBNAME
         LA    R2,2(R5)                  POINT TO PARM TEXT
         SR    R14,R14                   NO COMPARATOR
         LA    R15,X'40'                 PAD = BLANK AND
         SLL   R15,24                    NO COMPARATOR LENGTH
LEN      EQU   R1                        REGISTER FOR FIELD LENGTH
*
*        LOOK FOR A KEYWORD IN PARM - EXECUTE VALIDATION ROUTINE
*
PRM01000 DS    0H
         CLCL  R2,R14                    FIND NON-BLANK CHAR
         BE    ERR01000                  ALL BLANKS THEN ERROR
         LA    R6,KWDTBL                 A(KEYWORD TABLE)
         USING KWDENTRY,R6               TABLE ADDRESSIBILITY
PRM01020 DS    0H
         SLR   LEN,LEN                   CLEAR FOR LENGTH
         ICM   LEN,B'0001',KWDLEN        GET KEY LENGTH...
         BZ    ERR01000                  ...ZERO, BAD PARM
         CR    R3,LEN                    REMAINING BYTES LT L'ENTRY?
         BL    PRM01021                  ...YES, TRY ANOTHER ENTRY
         LR    R7,LEN                    R7 = L'ENTRY
         BCTR  R7,0                      REDUCE FOR EXECUTE
         EX    R7,PRM0100I               CAN WE IDENTIFY THE KEYWORD?
         BE    PRM01010                  YES...PROCESS IT
PRM01021 DS    0H
         LA    R6,KWDKEY+3(LEN)          NO...POINT TO NEXT ENTRY...
         SRL   R6,2                      ENTRIES ARE ALIGNED
         SLL   R6,2                      ON FULLWORD BOUNDARIES
         B     PRM01020                  KEYWD = NEXT ENTRY?
PRM01010 DS    0H
         IC    R7,KWDFLG                 YES...GET KEYWORD FLAG
         EX    R7,PRM0101I               FOUND IT BEFORE?
         BO    ERR01000                  YES...BAD PARM
         OC    MTSPFLGS,KWDFLG           SET KEYWORD FLAG
         LA    R4,C'='                   FIND '='
         BAL   R5,PRM01400               NXT CHAR MUST BE '='
         TM    MTSPFLGS,FIND             FIND IT?
         BNO   ERR01000                  NO - ERROR
         CLCL  R2,R14                    FIND NON-BLANK CHAR
         BE    ERR01000                  ALL BLANKS IS ERROR
         ICM   R7,B'1111',KWDRTN         YES...GET A(VALIDATION RTN)
         BZ    ERR01000                  IF ADDR = ZERO, BAD PARM
         BALR  R5,R7                     EXECUTE VALIDATION ROUTINE
         LA    R4,C','                   CHAR = COMMA
         BAL   R5,PRM01400               NXT CHAR MUST BE COMMA
         TM    MTSPFLGS,FIND             FIND IT?
         BNO   PRM01END                  NO, DONE WITH PARM
         B     PRM01000                  NEXT KEYWORD
         SPACE
PRM0100I CLC   00(00,R2),KWDKEY          PARM KEYWD = TBL KEYWD?
PRM0101I TM    MTSPFLGS,X'00'            KEYWORD BEEN FOUND BEFORE?
         DROP  R6
         SPACE
*
*        SUBROUTINE: LOCATE SPECIFIC CHARACTER
*
PRM01400 DS    0H
         NI    MTSPFLGS,X'FF'-FIND       TURN OFF FLAGS
         AR    R2,LEN                    POINT PAST LAST FIELD
         SR    R3,LEN                    ADJUST REMAINING BYTES
         BNP   PRM01410                  NO REMAINING BYTES, RETURN
         CLCL  R2,R14                    FIND NON-BLANK CHAR
         BE    PRM01410                  ALL BLANKS = RETURN TO CALLER
         CLM   R4,B'0001',0(R2)          CHAR = CALLER'S CHAR?
         BNE   PRM01410                  NO, RETURN TO CALLER
         OI    MTSPFLGS,FIND             YES, SET FLAG
         LA    R2,1(,R2)                 POINT PAST BYTE
         BCTR  R3,0                      ADJUST REMAINING BYTES
PRM01410 DS    0H
         SR    LEN,LEN                   CLEAR LENGTH REGISTER
         BR    R5                        RETURN TO CALLER
         SPACE
*
*        SUBROUTINE: LOOK FOR DELIMITER
*
PRM01600 DS    0H
         CLI   0(R2),C','                LOOK FOR DELIMITER:
         BER   R5                             COMMA
         CLI   0(R2),X'40'                     OR
         BER   R5                             BLANK
         LA    LEN,1(,LEN)               COUNT FIELD LENGTH
         LA    R2,1(R2)                  POINT TO NEXT BYTE
         BCTR  R3,0                      REDUCE REMAINING BYTES
         LTR   R3,R3                     IF NO BYTES REMAINING END
         BZR   R5                           SEARCH FOR DELIMITER
         B     PRM01600                     ELSE, CONTINUE
         SPACE
*
*        KEYWORD = OPT
*
PRM01200 DS    0H
         ST    R5,MTSLNK0                SAVE RETURN ADDRESS
         LA    LEN,5                     FIELD LENGTH = 5
         CR    R3,LEN                    AT LEAST 5 BYTES REMAINING
         BL    PRM01210                  NO, TRY ANOTHER
         CLC   0(5,R2),=C'START'         OPTION = START?
         BE    PRM01500                  YES, NEXT KEYWD, DEFAULT
PRM01210 DS    0H
         LA    LEN,4                     FIELD LENGTH = 4
         CR    R3,LEN                    AT LEAST 4 BYTES REMAINING
         BL    ERR01000                  NO, ERROR
         LA    R0,STOP                   ASSUME STOP
         CLC   0(4,R2),=C'STOP'          OPTION = STOP?
         BE    PRM01500                  YES, NEXT KEYWORD?
         B     ERR01000                  NO, ERROR
         SPACE
*
*        KEYWORD = SYSID
*
PRM01300 DS    0H
         ST    R5,MTSLNK0                SAVE RETURN ADDRESS
         BAL   R5,PRM01600               LOCATE DELIMITER
         LTR   LEN,LEN                   IF LENGTH LESS THAN 1
         BNP   ERR01000                  OR
         LA    R4,4                      GREATER THAN 4
         CR    LEN,R4                    THEN
         BH    ERR01000                  ERROR.
         SR    R2,LEN                    POINT TO START OF FIELD
         BCTR  LEN,R0                    REDUCE FOR EXECUTE
         EX    LEN,MVCSSID               MOVE TO WORKING STORAGE
         LA    R2,1(LEN,R2)              RESTORE R2 POINTER
         SR    LEN,LEN                   CLEAR LEN (R2,R3 UPDATED)
         B     PRM01500                  NEXT KEYWORD?
MVCSSID  MVC   MTSSID(0),0(R2)           EXECUTED INSTRUCTION
         SPACE
*
*        KEYWORD = EP
*
PRM01700 DS    0H
         ST    R5,MTSLNK0                SAVE RETURN ADDRESS
         BAL   R5,PRM01600               LOCATE DELIMITER
         LTR   LEN,LEN                   IF LENGTH LESS THAN 1
         BNP   ERR01000                  OR
         LA    R4,8                      GREATER THAN 8
         CR    LEN,R4                    THEN
         BH    ERR01000                  ERROR.
         SR    R2,LEN                    POINT TO START OF NAME
         BCTR  LEN,R0                    REDUCE FOR EXECUTE
         EX    LEN,MVCEP                 MOVE TO WORKING STORAGE
         LA    R2,1(LEN,R2)              RESTORE R2 POINTER
         SLR   LEN,LEN                   CLEAR LEN (R2,R3 UPDATED)
         B     PRM01500                  NEXT KEYWORD?
MVCEP    MVC   MTSLMOD(0),0(R2)          EXECUTED INSTRUCTION
         SPACE
*
*        COMMON KEYWORD VALIDATION ROUTINE EXIT
*
PRM01500 DS    0H
         L     R5,MTSLNK0                GET RETURN ADDRESS
         BR    R5                        RETURN
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        IF SSID NOT SPECIFIED GET SSID FROM JOBNAME                  *
*                                                                     *
*---------------------------------------------------------------------*
PRM01END DS    0H
PRM02000 DS    0H
         STC   R0,MTSOPT                 SAVE OPTION
         TM    MTSPFLGS,PSSID            WAS SSID PROVIDED?
         BO    PRM02END                  YES, NO NEED TO LOOK AT JOBNM
         L     R1,CVTPTR                 A(CVT)
         L     R1,CVTTCBP-CVT(R1)        A(TCB POINTERS)
         L     R1,4(,R1)                 A(CURRENT TCB)
         L     R1,TCBTIO-TCB(R1)         A(TIOT)
         USING TIOT,R1                   TIOT ADDRESSIBILITY
         MVC   MTSSID,TIOCNJOB           SSID = 1ST 4 CHAR OF JOBNAME
*---------------------------------------------------------------------*
*                                                                     *
*        IF EP PARM NOT SPECIFIED THEN                                *
*        SET ENTRY POINT NAME TO SSID + 'INIT'                        *
*                                                                     *
*---------------------------------------------------------------------*
PRM02END DS    0H
PRM03000 DS    0H
         TM    MTSPFLGS,PEP              WAS EP PROVIDED?
         BO    PRM03END                  YES, NO NEED TO CONSTRUCT ONE
         LA    R0,3                      INDEX
         SR    LEN,LEN                   LENGTH FOR EXECUTE
         LA    R2,MTSSID+1               SSID+1
PRM03100 DS    0H                        LOCATE END OF SUBSYS NAME
         CLI   0(R2),X'40'               A BLANK?
         BE    PRM03200                  YES, EXIT LOOP
         LA    LEN,1(,LEN)               COUNT
         LA    R2,1(,R2)                 NEXT BYTE
         BCT   R0,PRM03100               LOOP OR EXIT
PRM03200 DS    0H                        CONCATENATE NAME + INIT
         EX    LEN,MVCSSID2              SSID TO EP NAME
         LA    R2,MTSLMOD+1              POINT TO LOAD MOD NAME
         AR    R2,LEN                    POINT PAST SSID
         MVC   0(4,R2),=C'INIT'          CONCAT 'INIT'
         B     PRM03END                  LOCATE SSVT
MVCSSID2 MVC   MTSLMOD(LEN),MTSSID       EXECUTED INSTRUCTION
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*        ARE WE AUTHORIZED TO MODIFY THE SUBSYSTEM?                   *
*                                                                     *
*        IF SO, THEN LOCATE THE SUBSYSTEM SSCVT                       *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
PRM03END DS    0H
SCT00000 DS    0H
         CLC   MTSSID(3),JESID           IF SUBSYSTEM NAME IS 'MSTR'
         BE    ERR02200                  OR 'JES' THEN ERROR,
         CLC   MTSSID,MSTRID             INVALID MODIFY REQUEST
         BE    ERR02200
         L     R1,TSSTABLE               GET A( SS NAME TABLE )
         USING TSSTBL,R1                 TABLE ADDRESSIBILITY
SCT01000 DS    0H
         CLC   TSSNAME,ZERO              IF ENTRY ZEROES...
         BE    SCT01100                  ...TRY NEXT ONE
         CLC   TSSNAME,BLANKS            IF ENTRY BLANK...
         BE    SCT01100                  ...TRY NEXT ONE
         CLC   TSSNAME,HEXFF             IF END OF TABLE...
         BE    ERR02200                  ...NOT AUTHORIZED
         CLC   TSSNAME,MTSSID            AUTHORIZED TO MODIFY?
         BE    SCT02000                  ...YES, LOCATE SSCVT
SCT01100 DS    0H                        ...NO, NEXT ENTRY
         LA    R1,TSSTBL+TSSLEN          POINT TO NEXT ENTRY
         B     SCT01000                  CHECK IT OUT
         SPACE
SCT02000 DS    0H
         L     R1,CVTPTR                 A(CVT)
         L     R1,CVTJESCT-CVT(R1)       A(JES CONTROL TABLE)
         L     R1,JESSSCT-JESCT(R1)      A(1ST SSCT)
         USING SSCT,R1                   SSCT ADDRESSIBILITY
         L     R1,SSCTSCTA               SKIP PRIMARY JES SSCT
         L     R1,SSCTSCTA               SKIP MASTER SUBSYSTEM SSCT
SCT02100 DS    0H
         CLC   SSCTSNAM,MTSSID           SUBSYSTEM NAMES EQUAL?
         BE    SCT03000                  YES, EXIT LOOP
         ICM   R1,B'1111',SSCTSCTA       GET A(NEXT SSCT)
         BZ    ERR02100                  IF ZERO SUBSYSTEM NOT FOUND
         B     SCT02100                  NEXT SSCT
               SPACE
SCT03000 DS    0H
         ICM   R1,B'1000',=X'80'         TURN ON HI-ORDER BIT
         ST    R1,MTSSCTAD               SAVE A(SSCT)
               EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*        IF STOP REQUEST                                              *
*            STOP THE SUBSYSTEM                                       *
*            ELSE                                                     *
*            START THE SUBSYSTEM                                      *
*        THEN                                                         *
*            EXIT                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         TM    MTSOPT,STOP               STOP REQUEST?
         BO    MTSS0200                  YES, BRANCH
         SPACE
*
*        START - LINK TO INIT ROUTINE EMULATING MASTER SCHEDULER
*
MTSS0100 DS    0H
         ICM   R0,B'1111',SSCTSSVT       IF SUBSYSTEM ACTIVE
         BNZ   ERR03000                  ...THEN ERROR
         LA    R0,MTSLMOD                A(ENTRY POINT NAME)
         LA    R2,LDERRET                A(ERROR ROUTINE)
         LOAD  EPLOC=(0),ERRET=(2)       LOAD INITIALIZATION MODULE
         ST    R0,MTSLMODA               SAVE A(ENTRY POINT)
         MODESET KEY=ZERO,MODE=SUP       SUPERVISOR STATE
         LA    R1,MTSSCTAD               POINT TO A(SSCT)
         L     R15,MTSLMODA              INIT ROUTINE ADDRESS
         BALR  R14,R15                   DO INITIALZATION
         MODESET KEY=NZERO,MODE=PROB     KILL SUPERVISOR STATE
         SR    R15,R15                   RETURN CODE = ZERO
         B     RETURN                    EXIT
         SPACE 2
*
*        STOP - CLEAR SSCT POINTER TO SSVT
*
MTSS0200 DS    0H
         MODESET KEY=ZERO,MODE=SUP       SUPERVISOR STATE
         L     R1,MTSSCTAD               A(SSCT)
         OC    SSCTSSVT,SSCTSSVT         IS THERE A PTR TO SSVT?
         BZ    ERR04000                  ...NO, ERROR.
         XC    SSCTSSVT,SSCTSSVT         CLEAR PTR TO SSVT
         MODESET KEY=NZERO,MODE=PROB     KILL SUPERVISOR STATE
         MVC   MTSMSG(M01L),M01          MSG TO WORKAREA
         MVC   MTSMSG+M01P1(L'MTSSID),MTSSID
         WTO   MF=(E,MTSMSG)             PUT OUT MESSAGE
         SR    R15,R15
         SPACE
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*        EXIT PROGRAM                                                 *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
RETURN   DS    0H
         LR    R5,R15                    SAVE RETURN CODE
         L     R6,MTSAVE+4               GET A(CALLER'S RSA)
         L     R0,MTSSS                  GET WKAREA SUBPOOL AND SIZE
         FREEMAIN R,LV=(0),A=(13)         FREE WKAREA
         LR    R15,R5                    RESTORE RETURN CODE
         LR    R13,R6                    R13 = CALLER'S RSA
         RETURN (14,12),RC=(15)          EXIT
         EJECT
*---------------------------------------------------------------------*
*        ERROR ROUTINES                                               *
*---------------------------------------------------------------------*
         SPACE
ERR01000 DS    0H                        BAD PARM
         MVC   MTSMSG(E01L),E01          MSG TO WORKAREA
         B     ERREXIT
         SPACE 2
ERR02100 DS    0H                        SUBSYSTEM NOT DEFINED
         MVC   MTSMSG(E02L),E02          MSG TO WORKAREA
         MVC   MTSMSG+E02P1(L'MTSSID),MTSSID   SUBSYS NAME TO MSG
         B     ERREXIT
         SPACE 2
ERR02200 DS    0H                        INVALID SUBSTEM FOR MODIFY
         MVC   MTSMSG(E03L),E03          MSG TO WORKAREA
         MVC   MTSMSG+E03P1(L'MTSSID),MTSSID   SUBSYS NAME TO MSG
         B     ERREXIT
         SPACE 2
LDERRET  DS    0H                        INIT MODULE NOT FOUND
         MVC   MTSMSG(E04L),E04          MSG TO WORKAREA
         MVC   MTSMSG+E04P1(L'MTSSID),MTSSID   SUBSYS NAME TO MSG
         MVC   MTSMSG+E04P2(L'MTSLMOD),MTSLMOD     EP TO MESSAGE
         B     ERREXIT
         SPACE 2
ERR03000 DS    0H
         MVC   MTSMSG(E05L),E05          MSG TO WORKAREA
         MVC   MTSMSG+E05P1(L'MTSSID),MTSSID   SUBSYS NAME TO MSG
         B     ERREXIT
         SPACE 2
ERR04000 DS    0H
         MODESET KEY=NZERO,MODE=PROB     OUT OF SUPERVISOR STATE
         MVC   MTSMSG(E06L),E06          MSG TO WORKAREA
         MVC   MTSMSG+E06P1(L'MTSSID),MTSSID   SUBSYS NAME TO MSG
         SPACE 2
ERREXIT  DS    0H
         WTO   MF=(E,MTSMSG)             PUT OUT MESSAGE
         LA    R15,4
         B     RETURN
         EJECT
*---------------------------------------------------------------------*
*        PROGRAM DATA AREAS                                           *
*---------------------------------------------------------------------*
         SPACE
         PRINT NOGEN
         SPACE
E01      WTO  'MTSS03E - SUBSYSTEM MODIFY FAILED - INVALID PARM',      X
               ROUTCDE=(2,11),DESC=4,MF=L
E01L     EQU  *-E01
         SPACE 3
E02      WTO  'MTSS04E - SUBSYSTEM XXXX NOT FOUND',ROUTCDE=(2,11),     X
               DESC=4,MF=L
E02L     EQU  *-E02
E02P1    EQU  4+20
         SPACE 3
E03      WTO  'MTSS05E - SUBSYSTEM XXXX - MODIFY NOT VALID ',          X
               ROUTCDE=(2,11),DESC=4,MF=L
E03L     EQU  *-E03
E03P1    EQU  4+20
         SPACE 3
E04      WTO  'MTSS06E - XXXX INITIALIZATION MODULE, XXXXXXXX, NOT FOUNX
               D',ROUTCDE=(2,11),DESC=4,MF=L
E04L     EQU  *-E04
E04P1    EQU  4+10
E04P2    EQU  4+38
         SPACE 3
E05      WTO  'MTSS07E - SUBSYSTEM XXXX - NOT STARTED, ALREADY ACTIVE',X
               ROUTCDE=(2,11),DESC=4,MF=L
E05L     EQU  *-E05
E05P1    EQU  4+20
         SPACE 3
E06      WTO  'MTSS08E - SUBSYSTEM XXXX - NOT STOPPED, NOT ACTIVE',    X
               ROUTCDE=(2,11),DESC=4,MF=L
E06L     EQU  *-E06
E06P1    EQU  4+20
         SPACE 3
M01      WTO  'MTSS02I - SUBSYSTEM XXXX IS NOW INACTIVE',              X
               ROUTCDE=(2,11),DESC=4,MF=L
M01L     EQU  *-M01
M01P1    EQU  4+20
         SPACE 3
TSSTABLE DC    V(TSSNAMES)
XXXMTSSS DS   0F
         DC    AL1(MTSPOOL)
         DC    AL3(MTSWKL)
BLANKS   DC    CL8' '
ZERO     DC    X'00000000'
HEXFF    DC    X'FFFFFFFF'
MSTRASID DC    X'0001'
JESID    DC    C'JES'
MSTRID   DC    C'MSTR'
         SPACE
KWDTBL   DS   0F                    PROGRAM OPTION - OPT
         DC    A(PRM01200)
         DC    AL1(POPT)
         DC    AL1(L'OPT)
OPT      DC    C'OPT'
         SPACE
         DS   0F                    SUBSYSTEM ID - SSID
         DC    A(PRM01300)
         DC    AL1(PSSID)
         DC    AL1(L'SSID)
SSID     DC    C'SSID'
         SPACE
         DS   0F                    ENTRY POINT NAME - EP
         DC    A(PRM01700)
         DC    AL1(PEP)
         DC    AL1(L'EP)
EP       DC    C'EP'
         SPACE
         DS   0F                    END OF TABLE ENTRY
         DC    A(0)
         DC    AL1(0)
         SPACE
         LTORG
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*        SUBSYSTEM VALIDATION TABLE                                   *
*                                                                     *
*        NON-EXECUTABLE CSECT                                         *
*                                                                     *
*        ONLY THE SUBSYSTEMS WHOSE NAMES APPEAR IN                    *
*        THIS TABLE MAY BE MODIFIED BY THIS PROGRAM                   *
*                                                                     *
*        EACH ENTRY IS FOUR BYTES AND CONTAINS THE NAME               *
*        OF A SUBSYSTEM.  BLANK AND HEX ZERO ENTRIES ARE              *
*        IGNORED.  THE LAST ENTRY MUST CONTAIN X'FF'S.                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
TSSNAMES AMODE 31
TSSNAMES RMODE 24
TSSNAMES CSECT
         DC   C'CCSS'
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   C'    '             AVAILABLE ENTRY
         DC   X'FFFFFFFF'         END OF TABLE
         SPACE 5
*---------------------------------------------------------------------*
*        DSECT FOR VALIDATION TABLE                                   *
*---------------------------------------------------------------------*
TSSTBL   DSECT
TSSNAME  DS   CL4
TSSLEN   EQU  *-TSSTBL
         EJECT
*---------------------------------------------------------------------*
*        DSECT FOR PROGRAM WORK AREAS                                 *
*---------------------------------------------------------------------*
         SPACE
MTSSWK   DSECT
MTSAVE   DS  18F                         REGISTER SAVE AREA
MTSID    DS    CL8                       WORKAREA LABEL
MTSPRMAD DS    F                         A(CALLER'S PARM)
MTSSS    DS    F                         WKAREA SUBPOOL AND SIZE
MTSSID   DS    CL4                       SUBSYSTEM ID
MTSSCTAD DS    F                         A(SUBSYSTEM SCT)
MTSLMOD  DS    CL8                       LOAD MODULE EP
MTSLMODA DS    F                         A(LMOD EP)
MTSPFLGS DS    BL1                       PARM FLAGS
FIND     EQU   X'80'                       LOCATE CHAR SUBROUTINE FLAG
PEP      EQU   X'04'                       EP KEYWORD FOUND
PSSID    EQU   X'02'                       SSID KEYWORD FOUND
POPT     EQU   X'01'                       OPT KEYWORD FOUND
MTSOPT   DS    BL1                       OPTION FLAGS
START    EQU   X'01'                       START,INITIALIZE SUBSYSTEM
STOP     EQU   X'02'                       STOP,REMOVE SUBSYSTEM
RESET    EQU   X'03'                       STOP THEN START SUBSYSTEM
         DS   0F
MTSLNK0  DS    F                         SUBROUTINE LINKAGE SAVEARAEA
MTSMSG   DS    XL100
MTSWKL   EQU   *-MTSSWK
MTSPOOL  EQU   00
         SPACE
*---------------------------------------------------------------------*
*        DSECT FOR KEYWORD TABLE                                      *
*---------------------------------------------------------------------*
KWDENTRY DSECT
KWDRTN   DS   A                          A(VERIFICATION ROUTINE)
KWDFLG   DS   AL1                        VALUE OF PARM FLAG
KWDLEN   DS   AL1                        LENGTH OF KEYWORD
KWDKEY   DS  0C                          KEYWORD  (VARIABLE LENGTH)
*                                                                     *
*        ENTRIES ARE ALIGNED ON FULLWORDS                             *
*                                                                     *
         EJECT
*        PRINT NOGEN
*---------------------------------------------------------------------*
*        DSECT FOR TIOT                                               *
*---------------------------------------------------------------------*
         SPACE
TIOT     DSECT
         IEFTIOT1
         SPACE
*---------------------------------------------------------------------*
*        DSECT FOR TCB                                                *
*---------------------------------------------------------------------*
         SPACE
         IKJTCB
         SPACE
*---------------------------------------------------------------------*
*        DSECT FOR CVT
*---------------------------------------------------------------------*
         SPACE
         CVT   DSECT=YES
         SPACE
*---------------------------------------------------------------------*
*        DSECT FOR SSCT                                               *
*---------------------------------------------------------------------*
         SPACE
         IEFJSCVT
*---------------------------------------------------------------------*
*        DSECT FOR JESCT                                              *
*---------------------------------------------------------------------*
         SPACE
         IEFJESCT
         EJECT
*---------------------------------------------------------------------*
*        MISCELLANEOUS EQUATES                                        *
*---------------------------------------------------------------------*
         SPACE
R0       EQU       0
R1       EQU       1
R2       EQU       2
R3       EQU       3
R4       EQU       4
R5       EQU       5
R6       EQU       6
R7       EQU       7
R8       EQU       8
R9       EQU       9
R10      EQU      10
R11      EQU      11
R12      EQU      12
R13      EQU      13
R14      EQU      14
R15      EQU      15
         END
