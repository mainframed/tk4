)PANEL KEYLIST (ISRHLP2 ISR)
)ATTR
  Ö TYPE(TEXT)    INTENS(LOW)  COLOR(YELLOW)
  ! TYPE(TEXT)    INTENS(LOW)  COLOR(WHITE)
  + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
  @ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
  # AREA(SCRL) EXTEND(ON)
)BODY EXPAND(¼¼) DEFAULT($|_)
ÖMXI - HELP - SVC Command ----------------------------------------------
!Option ===>_ZCMD
#MXIHAREA
#
#
#
#
#
#
#
#
#
#
#
#
#
#
+
)AREA MXIHAREA
!Function
+  Displays the current SVC table entries. This command can be used to d
+  the Extended SVC Router functions and SVC Update Recording Table entr
+
!Command Syntax
+ @SVC num-mask
+
!Keywords      +
  @num-mask    +An optional decimal number that filters the displayed li
               +all or part of the decimal SVC number.
               +The wildcard character of '*' and a placeholder characte
               +can be used.
               +The default value for num-mask is '*'.
+
!Example
+ @SVC       +  - List all SVCs.
+ @SVC 23    +  - List SVC 23 Information.
+ @SVC 2%%   +  - List SVC 200-255.
+
!Considerations
+  The data display has various formats depending on the SVC number
+  chosen and the type of SVC:
+  (a) All SVCs
+  (b) Single SVC (with or without SVC Update Recording information)
+  (c) Extended Router SVC
+
!Output Panel Fields (Multiple SVCs)
  @SVC Dec Hex     +- Decimal and Hexadecimal SVC Number
  @Module Name     +- SVC Module Name
  @Macro  Name     +- Macro associated with the SVC
  @Entry Point     +- Entry point address of the module
  @Location        +- Storage location of the module
  @Typ             +- SVC Type (1,2,3/4,6)
  @APF             +- SVC requires APF authorisation
  @ESR             +- SVC is an Extended Router SVC
  @ASF             +- SVC uses SVC assist
  @AR              +- SVC can be issued in AR mode
  @UP              +- SVC has been updated
  @NP              +- SVC is non-preemptive
  @Locks           +- Locks required for SVC :
                     ÖL+: Local
                     ÖC+: Cross Memory Services (CMS)
                     ÖO+: Optimizer
                     ÖD+: Dispatcher
                     ÖS+: Space Alloc
+
!Output Panel Fields (Single SVC)
+The output is split into two sections
+
!Current SVC Information
  @Number (Dec)    +- Decimal SVC Number
  @SVC Type        +- SVC Type (1,2,3/4,6)
  @Number (Hex)    +- Hex SVC Number
  @Entry Point     +- Entry point address of the module
  @Location        +- Storage location of the module
  @Module Name     +- SVC Module Name
  @Macro  Name     +- Macro associated with the SVC
  @APF Authorized  +- SVC requires APF authorisation (Yes/No)
  @Non-Preemptive  +- SVC is non-preemptive (Yes/No)
  @AR Mode Capable +- SVC can be issued in AR mode (Yes/No)
  @Assisted        +- SVC uses SVC assist facility (Yes/No)
  @Locks Required  +- Locks required for SVC
+
!SVC Update Information
  @Update Count    +- Number of times SVC has been updated
  @Method          +- Last Method used to update the SVC
  @Date            +- Date of last update (yyyy/mm/dd)
  @Julian Date     +- Julian Date of last update (yyddd)
  @Old Entry Point +- Entry point address of the SVC prior to update
  @Location        +- Storage location of the SVC module prior to update
  @Old Module Name +- SVC Module Name prior to update
  @Type            +- SVC Type (1,2,3/4,6) prior to update
  @APF Authorized  +- SVC required APF authorisation (Yes/No)
  @Non-Preemptive  +- SVC was non-preemptive (Yes/No)
  @AR Mode Capable +- SVC could be issued in AR mode (Yes/No)
  @Assisted        +- SVC used SVC assist facility (Yes/No)
  @Locks Required  +- Locks required for SVC
+
!Output Panel Fields (Extended Router SVC)
  @Function Dec    +- Decimal SVC Function Code
  @Function Hex    +- Hex SVC Function Code
  @Module Name     +- SVC Function Module Name
  @Entry Point     +- Entry point address of the function module
  @Location        +- Storage location of the module
  @Type            +- SVC Type (1,2,3/4,6)
  @APF             +- SVC requires APF authorisation
  @ASF             +- SVC uses SVC assist
  @AR              +- SVC can be issued in AR mode
  @NP              +- SVC is non-preemptive
  @Locks           +- Locks required for SVC :
                     ÖL+: Local
                     ÖC+: Cross Memory Services (CMS)
                     ÖO+: Optimizer
                     ÖD+: Dispatcher
                     ÖS+: Space Alloc
+
)INIT
.ATTRCHAR(Ö)  = 'COLOR(&M7CC) HILITE(&M7CH) INTENS(&M7CI)'
.ATTRCHAR(!)  = 'COLOR(&M08C) HILITE(&M08H) INTENS(&M08I)'
.ATTRCHAR(+)  = 'COLOR(&M06C) HILITE(&M06H) INTENS(&M06I)'
.ATTRCHAR(@)  = 'COLOR(&M09C) HILITE(&M09H) INTENS(&M09I)'
)PROC
 &ZUP   = MXIHTOC
 &ZCONT = MXIHSYM0
)END
