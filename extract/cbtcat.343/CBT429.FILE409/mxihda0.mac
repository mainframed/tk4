)PANEL KEYLIST (ISRHLP2 ISR)
)ATTR
  Ö TYPE(TEXT)    INTENS(LOW)  COLOR(YELLOW)
  ! TYPE(TEXT)    INTENS(LOW)  COLOR(WHITE)
  + TYPE(TEXT)    INTENS(LOW)  COLOR(GREEN)
  @ TYPE(TEXT)    INTENS(LOW)  COLOR(TURQ)
  # AREA(SCRL) EXTEND(ON)
)BODY EXPAND(¼¼) DEFAULT($|_)
ÖMXI - HELP - DA Command -----------------------------------------------
!Option ===>_ZCMD
#MXIHAREA
#
#
#
#
#
#
#
#
#
#
#
#
#
#
+
)AREA MXIHAREA
!Function
+  Displays the active address spaces in the system.
+
!Command Syntax
+ $DA jobmask   ONLY(type) NOT(type)
+ $   A=asid
+
!Keywords
+ $jobmask   +An optional masking pattern that can be used to filter the
+            +displayed list on all or part of the address space name.
+            +A wildcard character of '*' and a placeholder character of
+            +can be used.
+            +The default value for jobmask is '*'.
+ $A=asid    +An alternative specification to jobmask that uses the hexa
+            +address space id (ASID) rather than the jobname. Note that
+            +four hexadecimal digits MUST be specified and that wildcar
+            +cannot be used. Use this form when there is more than one
+            +of an address space with the same name.
+ $ONLY(type)+Restrict the display to only show address spaces of a part
+             type:
+            ÖSTC+= Started Tasks and System Address Spaces
+            ÖJOB+= Batch Jobs
+            ÖTSU+= TSO Users
+            ÖIN += Address spaces that are swapped in
+            ÖOUT+= Address spaces that are swapped out
+ $NOT(type) +Restrict the display to not show address spaces of a parti
+             type:
+            ÖSTC+= Started Tasks and System Address Spaces
+            ÖJOB+= Batch Jobs
+            ÖTSU+= TSO Users
+            ÖIN += Address spaces that are swapped in
+            ÖOUT+= Address spaces that are swapped out
+
!Examples
+ $DA                    +Show all address spaces
+ $DA ONLY(STC)          +Show all started tasks
+ $DA CIC* NOT(TSU)      +Show all address spaces that start 'CIC' that
+                        +TSO users.
+ $DA * ONLY(JOB) NOT(IN)+Show all batch jobs that are not swapped in
+ $DA * NOT(STC)         +Show all TSO users and batch jobs
+ $DA A=002C             +Show address space id x'002C'
+
+
+When more than one address space matches the specified pattern, a summa
+of address spaces is displayed.
+
+The title line shows the following values :
+
+  ÖUIC nnn     +The highest UIC value
+  ÖCPU xxx/yyy +The MVS and LPAR view of system CPU percentage usage.
+                Note that the LPAR view (yyy) could be considerably les
+                the MVS view (xxx) for LPARs with low weighting.
+
!Output Panel Fields (Multiple Address Spaces)
  @Address Space   +- The address space name.
  @Step            +- The name of the current step.
  @ProcStep        +- The name of the current procedure step.
  @JES Jobid       +- JES assigned job identifier (if available)
  @C               +- Job Class
  @ASID            +- The address space identifier in hex.
  @Working Set (K) +- The size of the working set in kilobytes
  @EXCP-Count      +- The number of EXCPs for this step
  @SIO             +- The number of EXCPs per second
  @CPU%            +- The address space CPU usage percent. This is calcu
                   +  without LPAR adjustment and weighting.
  @Pos             +- The position of the address space:
                       ÖIN  +- Swapped in
                       ÖOUT +- Swapped out
                       ÖN/S +- Non-Swappable
                       Ö<-> +- In transition
  @SW              +- The reason for the address space being swapped out
                       ÖAW +APPC wait
                       ÖDW +Detected wait
                       ÖEX +Exchange
                       ÖIC +Improve central storage
                       ÖIP +Improve system paging
                       ÖIW +Input wait
                       ÖLW +Long wait
                       ÖMR +Make room
                       ÖNQ +Enqueue exchange
                       ÖOW +Output wait
                       ÖRQ +Requested swap
                       ÖRS +Central storage shortage
                       ÖTI +Terminal input wait
                       ÖTO +Terminal output wait
                       ÖTS +Transition swap
                       ÖUS +Unilateral
                       ÖXS +Auxiliary storage shortage
+
!Output Panel Fields (Single Address Space)
+When only one address space matches the specified pattern, a more
+detailed display is shown. This is split into four sections :
+
!Identification
  @Address Space   +- The address space name.
  @ASID (Hex)      +- The address space identifier in hex.
  @Step Name       +- The name of the current step.
  @ASID (Dec)      +- The address space identifier in hex.
  @Procedure Step  +- The name of the current procedure step.
  @JES Jobid       +- JES assigned job identifier (if available).
  @Class           +- Job Class
  @Userid          +- Assigned userid for the address space
  @Start Date      +- The date (yyyy/mm/dd) that the address space was s
  @Start Time      +- The time (hh.mm.ss) that the address space was sta
  @ASCB Address    +- The address of the ASCB for this address space.
+
!Resource Consumption
  @TCB CPU Time    +- The number of TCB CPU Seconds used in this step.
  @Position        +- The position of the address space.
  @SRB CPU Time    +- The number of SRB CPU Seconds used in this step.
  @Priority        +- The dispatching priority of the address space.
  @Total CPU Time  +- The number of CPU (TCB+SRB) seconds used in this s
  @EXCP-Count      +- The number of EXCPs for this step.
  @Pos             +- The position of the address space.
  @CPU Time Limit  +- The maximum CPU seconds that this job can use or N
  @EXCP Rate       +- The number of EXCPs per second.
  @CPU Percentage  +- The address space CPU usage percent. This is calcu
                   +  without LPAR adjustment and weighting.
+
!Storage Usage
  @Real Frames     +- The number of Real storage frames used.
  @Working Set (K) +- The size of the working set in kilobytes.
  @Expanded Frames +- The number of Expanded storage frames used.
  @Fixed Frames    +- The number of fixed frames used.
  @Non-VIO Slots   +- The number of non-VIO auxiliary storage slots.
  @Dataspace       +- The number of user key dataspace blocks (4K).
  @Hiperspace      +- The number of hiperspace pages in expanded storage
  @UIC xxx->yyy    +- The number of frames in the UIC range xxx to yyy.
  @CSA             +- The amount of CSA allocated in bytes.
  @Extended CSA    +- The amount of Extended CSA allocated in bytes.
  @SQA             +- The amount of SQA allocated in bytes.
  @Extended SQA    +- The amount of Extended SQA allocated in bytes.
+
!Enqueues Held
  @Major Name      +- The major name used to enqueue the resource
  @Minor Name      +- The minor name used to enqueue the resource
  @RQ              +- The status of the enqueue :
                +      ÖS   +: Job has shared control of the resource
                +      ÖE   +: Job has exclusive control of the resource
                +      ÖSW  +: Job is waiting for shared control
                +      ÖEW  +: Job is waiting for exclusive control
                +      ÖSO  +: Job has shared control of the resource an
                +              other jobs are waiting for exclusive cont
                +      ÖEO  +: Job has exclusive control of the resource
                +              other jobs are waiting for exclusive or s
                +              control
                +      ÖxxR +: Enqueue is in fact a RESERVE
                +      ÖxxG +: RESERVE has been converted to a Global En
+
)INIT
.ATTRCHAR(Ö)  = 'COLOR(&M7CC) HILITE(&M7CH) INTENS(&M7CI)'
.ATTRCHAR(!)  = 'COLOR(&M08C) HILITE(&M08H) INTENS(&M08I)'
.ATTRCHAR(+)  = 'COLOR(&M06C) HILITE(&M06H) INTENS(&M06I)'
.ATTRCHAR($)  = 'COLOR(&M09C) HILITE(&M09H) INTENS(&M09I)'
)PROC
 &ZUP   = MXIHTOC
 &ZCONT = MXIHDSD0
)END
