CREATING AND USING THE MXI SECURITY RULES TABLE
================================================

Associated members in this dataset :

o $MXISEC   - This member
o $SECASM   - Sample JCL to assemble and link the sample MXI security
              rules table.
o MXIAUTH   - MXI Macro that defines the security rules
o MXISECTB  - Sample MXI security rules table. This is the source to
              the default MXISECTB shipped with MXI.


Creating The Security Rules Table
=================================

The security rules that can be defined to MXI take the format of a
sequence of assembler statements that use the MXIAUTH macro. These
must be assembled and linked into a load library that is available to
MXI.

The statements are very easy to code and does not require any extensive
knowledge of the assembler language.


Defining the start of the security rules
----------------------------------------

The first non-comment statement in the security rules member must be
in the following format :

   MXIAUTH START,NOENTRY=(DENY/ALLOW)

This statement is used to specify the start of the table and also to
assign a general access level for any authorised commands that are not
explicitly specifed in the following rules.

For example, the supplied MXISECTB source has the following :

   MXIAUTH START,NOENTRY=DENY


Defining the security rules
---------------------------

The syntax of the statement to define a security rules is as follows :

   MXIAUTH SET,
         CMD=mxicmd_name,
         USER=userid,
         GROUP=group,
         ACCESS=(ALLOW/DENY)

Keywords
--------

   CMD=mxicmd_name
      Specifies the MXI authorised command that is to be protected
      Valid values are :

      CF    - Coupling facility display
      DDNS  - Cross memory facility of the DDNS command
      DYNX  - Dynamic exits
      HSMQ  - DFHSM request queue
      MAKE  - Change address space swap-ability (*)
      NET   - VTAM major nodes
      PLEX  - Sysplex information
      PPT   - Program properties table
      UCB   - UCB addresses
      XCFM  - XCF members
      XCFS  - XCF structures
      /     - Issue operator command (*)

      SEC reccommends that the commands marked (*) should be carefully
      protected. Please note that the supplied MXISECTB module allows
      access to these commands for all users.

   USER=userid
      Identifies the userid pattern mask whose access is to be set.
      This value is matched against the ACEEUSRI field in the ACEE.

      You can use a placeholder character of '%' or a wildcard of '*'
      in the userid field.

      The USER keyword is mutually exclusive with the GROUP keyword.

   GROUP=group
      Identifies the group pattern mask whose access is to be set.
      This value is matched against the ACEEGRPN field in the ACEE.

      You can use a placeholder character of '%' or a wildcard of '*'
      in the group.

      The GROUP keyword is mutually exclusive with the USER keyword.

   ACCESS=(ALLOW/DENY)
      Specifies if access is to be granted (ALLOW) or not (DENY) to
      the specified USER or GROUP.

Examples
--------

(1) Allow members of group SYS1 to use the DYNX command

    MXIAUTH SET,CMD=DYNX,GROUP=SYS1,ACCESS=ALLOW

(2) Allow all users that start 'TECH' to use the "/" command

    MXIAUTH SET,CMD=/,USER=TECH*,ACCESS=ALLOW

(3) Disallow all members of group SYS1 access to the MAKE command apart
    from IBMUSER

    MXIAUTH SET,CMD=MAKE,GROUP=SYS1,ACCESS=DENY
    MXIAUTH SET,CMD=MAKE,USER=IBMUSER,ACCESS=ALLOW

Considerations
--------------

(1) If you continue an MXIAUTH statement over more than one line, you
    must place a continuation character in column 72 and start the next
    line in column 16.

(2) The logic for security checking is fairly basic and is as follows :

    (a)  If entry is found for the command, the user gets the access
         specified of the NOENTRY keyword.
    (b)  If a entry is found for the command, but no match is found for
         either the USER or GROUP, the access is DENIED.
    (c)  If a entry is found for the command, and an EXACT match for the
         USER is found (ie no '%' or '*' characters), the specified
         access on the rule is given immediately and NO FURTHER RULES
         ARE CHECKED.
    (d)  If a entry is found for the command, and a pattern match for
         USER or any match for the GROUP is found, the access given
         will be as specified on the last matching rule.

Defining the end of the security rules
--------------------------------------

The last non-comment statement in the security rules member must be
in the following format :

   MXIAUTH END

This statement is used to denote the end of the member and calculate
the number of rules defined.


Making The Security Rules Table Available To MXI
=================================================

Before MXI can use the security rules table, it must be assembled and
linked and then placed into a dataset that MXI can use a LOAD macro
to access.

Assembling and linking
----------------------
Use the sample JCL in member $SECASM to assemble and link the security
rules source. Note that you must include the dataset that contains the
MXIAUTH macro in the SYSLIB for the assemble.

Using the MXISECTB member
-------------------------
Once linked, the MXISECTB member can only be made available to MXI
when placed in either the STEPLIB, JOBLIB or Linklist. The MXISECTB
is only referenced when MXI is running authorised - so there is no
LIBDEF support for this member.

