//YOURJOB  JOB CARD
//*------------------------------------------------------------------
//*
//*     PGM = SORTTRAK
//*     THE SOURCE CODE FOR THE DATE CONVERSION SUBROUTINES
//*     (SUYYDDDF AND SUDATE) AND FOR THE TIME CONVERSION
//*     SUBROUTINE (SUTIME) IS NOT INCLUDED AS EVERYBODY IS USING
//*     OWN STANDARDS. ANY HOME WRITTEN CONVERSION SUBROUTINES
//*     MAY BE IMPLEMENTED.
//*
//*------------------------------------------------------------------
//ASM     EXEC PGM=IEV90,PARM=(NODECK,OBJECT)
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.AMODGEN,DISP=SHR
//         DD DSN=SYS1.ICEUSER,DISP=SHR
//SYSUT1   DD  DSN=&SYSUT1,SPACE=(1024,(120,120),,,ROUND),UNIT=VIO,
//             DCB=BUFNO=1
//SYSPUNCH DD  DUMMY
//SYSPRINT DD  SYSOUT=T
//SYSLIN   DD  DSN=&OBJ,SPACE=(CYL,(2,1),,,ROUND),UNIT=VIO,
//             DISP=(NEW,PASS)
//SYSIN    DD *
***********************************************************************
*                                                                     *
*    THIS PROGRAM IS THE SORTTRAK  26.06.1997 11.00                   *
*                                                                     *
***********************************************************************
*
* MODULE NAME                : SORTTRAK
* CSECT  NAME                : SORTTRAK
* ALIIAS NAMES               : NONE
*
* CALLS                      :
*                              CALL  CONVER08,(NUMBER,RESULT8),VL
*                              CALL  CONVER10,(NUMBER,RESULT),VL
*                              CALL  SUYYDDDF,(SMFDATE,STAMP),VL
*                              CALL  SUDATE,(DATE),VL
*                              CALL  SUTIME,(TIME,TIMESTAM),VL
*
* MACROS USED                : RETURN,
*                              GETMAIN, FREEMAIN, OPEN, CLOSE, PUT,
*                              DCB
*
* S.P.F. SERVICES            : NONE
*
* ASSEMBLER OPTIONS          : STANDARD
*
* LINKAGE EDITOR OPTIONS     : STANDARD
*
* OTHER REQUIREMENTS         : NONE
*
* AUTHOR                     : SZCZEPAN (STEVE) KOWALSKI
*                            : THE JOHANNESBURG STOCK EXCHANGE
*                            : 17 DIAGONAL ST., JOHANNESBURG
*                            : REPUBLIC OF SOUTH AFRICA
*                            : EMAIL: STEVEK@JSE.CO.ZA
*       C COPYRIGHT SZCZEPAN KOWALSKI 1996. ALL RIGHTS RESERVED.
*
* DATE                       :  8/05/90
*
* AMENDMENTS                 :
*
*.....................................................................
* FUNCTION                   : READ SMF RECORDS TYPE 16
*.....................................................................
* PROCESSING                 : X
*......................................................................
*INPUT DESCRIPTION           : SMF RECORDS
*
*......................................................................
*OUTPUT DESCRIPTION          : CONTENTS OF THE RECORD TYPE 16
*
*......................................................................
*RETURN CODES VIA REG15      : 0 - O.K.
*
*
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT GEN
SORTTRAK CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
*
*                   GETMAIN
*
GETMATD  GETMAIN R,LV=40000
         LR    R9,R1 (R9) = ADDR. OF THE ALLOCATED VIRTUAL STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         LA    R15,4
         B     FINI
*
OKGETMAT EQU   *
         ST    R9,R9SAVE
*
         OPEN  (PRINTDCB,(OUTPUT))
         OPEN  (REPORDCB,(OUTPUT))
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(40),=C'SORTTRAK STARTED                        '
         PUT   PRINTDCB,PRINT
*
         CALL  SUDATE,(DATE),VL
*
         OPEN  (SMFREDCB,(INPUT))
         USING ICERDW,R9
*
CATNEXT  EQU   *
         GET   SMFREDCB,ICERDW
         CLI   ICERTYP,X'10'   TEST IF RECORD TYPE 16
         BE    OKSID
*
         B     CATNEXT
*
OKSID    EQU   *
         MVC   SMFID(4),ICESID
         CLOSE (SMFREDCB)
         DROP  R9
*
         BAL   R8,BLOCKPAG             WRITE TRAILER
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+1(24),=C'STEVE KOWALSKI 26 NOV 96'
         MVC   PRINT+40(11),=C'SYSTEM ID :'
         MVC   PRINT+52(4),SMFID
         MVC   PRINT+111(22),=C'MVS TOOLBOX: MVS 5.2.2'
         PUT   REPORDCB,PRINT
*
         BAL   R8,EXPLANAT             WRITE EXPLANATION
*
         LA    R7,0
         ST    R7,R16TOTAL         EST. COUNTER
         OPEN  (SMFREDCB,(INPUT))
         USING ICERDW,R9
         XR    R5,R5
         LA    R5,50               EST. LINES PER PAGE NUMBER
         XR    R4,R4
         LA    R4,1                EST. LINES PER PAGE COUNTER
         BAL   R7,NEWPAGE
*
GETSMFRE EQU   *
         GET   SMFREDCB,ICERDW
         CLI   ICERTYP,X'10'   TEST IF RECORD TYPE 16
         BE    OKRECTYP
*
         B     NOTSMF16
*
OKRECTYP EQU   *
         L     R7,R16TOTAL
         A     R7,=F'1'        INCREASE COUNTER
         ST    R7,R16TOTAL
*
         MVC   SORTRECO(132),BLANK
         MVC   JOBNAME(8),ICEJOBNM
         XR    R1,R1
         LH    R1,ICESPGN
         ST    R1,NUMBER
         CALL  CONVER08,(NUMBER,RESULT8),VL
         MVC   PERFGRNU(4),RESULT8+4
*
         LR    R8,R9
         L     R1,ICEDATA
         AR    R8,R1
         USING ICESMFD,R8
         MVC   SMFDATE(4),ICEDATES
         CALL  SUYYDDDF,(SMFDATE,STAMP),VL
         MVC   SORTDATE(9),DAYNO
         MVC   TIME(4),ICETIMES
         CALL  SUTIME,(TIME,TIMESTAM),VL
         MVC   SORTTIME(11),TIMESTAM
         MVC   STEPNAME(8),ICESTPNM
         MVC   NUMBER(4),ICERCDS
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   NURECSOR(10),RESULT
         MVC   NUMBER(4),ICECPUT
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   SORTCPUT(10),RESULT
         XR    R1,R1
         IC    R1,ICESTN
         ST    R1,NUMBER
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   STEPNUMB(3),RESULT+7
*
         XR    R1,R1
         ST    R1,NUMBER
         MVC   NUMBER+2(2),ICEWEXE
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   FINAEXTE(2),RESULT+8
*
         MVC   NUMBER(4),ICEWALLE     FINAL ALLOC WORK TRKS
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   FINATRKS(10),RESULT
*
         MVC   NUMBER(4),ICEWBLK      TOTAL NUMB OF WORK TRKS USED
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   TOTATRKS(10),RESULT
*
         TM    ICEFLBY2,ICESORT
         BZ    NOTSORT
*
         MVI   TYPEOPER,C'S'      A SORT WAS SPECIFIED
NOTSORT  EQU   *
         TM    ICEFLBY2,ICEMERG
         BZ    NOTMERGE
*
         MVI   TYPEOPER+1,C'M'      A MERGE WAS SPECIFIED
NOTMERGE EQU   *
         TM    ICEFLBY2,ICECOPY
         BZ    NOTCOPY
*
         MVI   TYPEOPER+2,C'C'      A COPY WAS SPECIFIED
NOTCOPY  EQU   *
*
         TM    ICEFLBY3,ICEHSSRT  TEST IF HIPERSORTING WAS USED ?
         BZ    NOTHIPER
*
         MVI   HIDASWOR,C'H'         HIPERSORTING WAS USED
NOTHIPER EQU   *
         TM    ICEFLBY3,ICEDSSRT  TEST IF DATA SPACE WAS USED ?
         BZ    NOTDASPA
*
         MVI   HIDASWOR+1,C'D'       DATA SPACE WAS USED
NOTDASPA EQU   *
         TM    ICEFLBY3,ICEWDS    TEST IF WORK DATA SETS USED ?
         BZ    NOTWORKD
*
         MVI   HIDASWOR+2,C'W'       WORK DATA SETS WERE USED
NOTWORKD EQU   *
         TM    ICEFLBYT,ICEINMEM  SORTING COMPLETED IN MEMORY ?
         BZ    NOTINMEM
*
         MVC   SINMEMOR(4),=C'INME'      SORTING COMPLETED IN MEMORY
NOTINMEM EQU   *
         XR    R1,R1
         ST    R1,NUMBER
         MVC   NUMBER+2(2),ICEHSPN
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   NHIPCREA(5),RESULT+5
         MVC   NUMBER(4),ICEHSPU
         CALL  CONVER10,(NUMBER,RESULT),VL
         MVC   NHIPPAGU(10),RESULT
*
         TM    ICEWKFLG,ICEWKDYN  SORTWK TRACKS WERE DYN ALLOCATED?
         BZ    NOTWKDYN
*
         MVI   SORTWKFL,C'D'      YES, DYNALLOC
NOTWKDYN EQU   *
         TM    ICEWKFLG,ICEWKCW   CACHE FAST WRITE WAS USED ?
         BZ    NOTCFWRI           NO
*
         MVI   SORTWKFL+2,C'C'      YES, CFW WAS USED
NOTCFWRI EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(132),SORTRECO
         PUT   REPORDCB,PRINT
*
         CR    R4,R5           TEST IF PAGE IS FULL
         BNE   PAGENFUL        NOT
*
         XR    R4,R4
         BAL   R7,NEWPAGE
*
PAGENFUL EQU   *
         A     R4,=F'1'
NOTSMF16 EQU   *
         B     GETSMFRE
*
ENDATA   EQU   *
         CLOSE (SMFREDCB)
*
         BAL   R8,BLOCKPAG             WRITE TRAILER
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+1(24),=C'STEVE KOWALSKI 26 NOV 96'
         MVC   PRINT+111(22),=C'MVS TOOLBOX: MVS 5.2.2'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(40),=C'TOTAL NUMBER OF RECORDS TYPE 16 =       '
         CALL  CONVER08,(R16TOTAL,RESULT8),VL
         MVC   PRINT+40(8),RESULT8
         PUT   PRINTDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(40),=C'SORTTRAK ENDED                          '
         PUT   PRINTDCB,PRINT
*
         CLOSE (PRINTDCB)
         CLOSE (REPORDCB)
*
FINI     EQU   *
*
         L     R13,4(R13)
         L     R9,R9SAVE
         FREEMAIN  R,LV=40000,A=(R9)
*
         LA    R1,0
         LA    R7,0
         LR    R15,R7
         RETURN (14,12),RC=(15)
*---------------------------------------------------------------------
BLOCKPAG EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   REPORDCB,PRINT
         LA    R5,1
         MVC   CHARFIEL(9),=C'SORTTRAK '
NEWLOOPS EQU   *
         LA    R7,12
         LA    R6,1
         ST    R6,LINECOUN
LOOPIEFS EQU   *
         MVI   CONSAREA,C' '
         MVC   CONSAREA+1(L'CONSAREA-1),CONSAREA
         LA    R1,PARMLIST
         CALL  IEFSD095
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(132),CONSAREA
         PUT   REPORDCB,PRINT
         LA    R1,1
         AR    R6,R1
         ST    R6,LINECOUN
         BCT   R7,LOOPIEFS
         LA    R1,1
         AR    R5,R1
         LA    R1,5
         CR    R5,R1
         BE    ENDBLOCK
         LA    R1,2
         CR    R5,R1
         BE    SECONLIN
         LA    R1,3
         CR    R5,R1
         BE    THIRDLIN
         LA    R1,4
         CR    R5,R1
         BE    FOURTLIN
SECONLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C' DFSORT  '
         B     NEWLOOPS
THIRDLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C' TUNING  '
         B     NEWLOOPS
FOURTLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   REPORDCB,PRINT
         MVC   CHARFIEL(9),=C'REPORTER '
         B     NEWLOOPS
ENDBLOCK EQU   *
         BR    R8
*---------------------------------------------------------------------
EXPLANAT EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   REPORDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+22(38),=C'TERMS AND ABBREVIATIONS USED:         '
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+22(38),=C'  PGN = PERFORMANCE GROUP NUMBER      '
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(33),=C'OP  = TYPE OF OPERATION PERFORMED'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(8),=C'S - SORT'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(9),=C'M - MERGE'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(8),=C'C - COPY'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(33),=C'HDSW - METHOD OF SORTING USED    '
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(14),=C'H - HIPERSPACE'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(14),=C'D - DATA SPACE'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(17),=C'W - WORK DATA SET'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(31),=C'IN MEMO - SORTING WAS COMPLETED'
         MVC   PRINT+56(9),=C'IN MEMORY'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(10),=C'DYNA CFW -'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(37),=C'D - SORT WORK TRACKS WERE DYNAMICALLY'
         MVC   PRINT+68(9),=C'ALLOCATED'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVC   PRINT+30(29),=C'C - CACHE FAST WRITE WAS USED'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(33),=C'EXTENTS - FINAL NUMBER OF EXTENTS'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(39),=C'FINAL SORTWORK TRACKS - FINAL NUMBER OF'
         MVC   PRINT+64(24),=C'SORTWORK DATA SET TRACKS'
         PUT   REPORDCB,PRINT
*
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+24(38),=C'TOTAL WORK TRACKS USED - TOTAL NUMBER '
         MVC   PRINT+62(28),=C'OF WORK DATA SET TRACKS USED'
         PUT   REPORDCB,PRINT
*
         BR    R8
*---------------------------------------------------------------------
NEWPAGE  EQU   *
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C'1'
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+2(38),=C'SORTTRAK DFSORT TUNING REPORTER FOR   '
         MVC   PRINT+40(38),=C'                THE JOHANNESBURG STOCK'
         MVC   PRINT+78(38),=C' EXCHANGE                REPORT DATE: '
         MVC   PRINT+38(4),SMFID
         MVC   PRINT+116(3),DATENAME
         MVC   PRINT+120(2),DATEDAY
         MVC   PRINT+123(3),DATEMONT
         MVC   PRINT+127(4),DATEYEAR
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+2(38),=C'JOBNAME     STEP      PGN    DFSORT ST'
         MVC   PRINT+40(38),=C'ARTED        NUMBER    SORT CPU O   HD'
         MVC   PRINT+78(38),=C'SW  IN  DYNA   #OF     #OFHIP EXT   FI'
         MVC   PRINT+116(16),=C'NAL       TOTAL '
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+2(38),=C'        NAME   NUMBER          PROCESS'
         MVC   PRINT+40(38),=C'ING        OF RECORDS    TIME   P     '
         MVC   PRINT+78(38),=C'   MEMO CFW  HIPERSPAC  PAGES TEN  SOR'
         MVC   PRINT+116(17),=C'TWORK   WORK TRKS'
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+2(38),=C'                             DATE     '
         MVC   PRINT+40(38),=C'  TIME       SORTED    0.01 SEC       '
         MVC   PRINT+78(38),=C'             CREATED     USED TS    TR'
         MVC   PRINT+116(16),=C'ACKS       USED '
         PUT   REPORDCB,PRINT
*
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   REPORDCB,PRINT
*
         BR    R7
*
*---------------------------------------------------------------------
SAVE3    DS    18F
NUMBER   DS    F
R16TOTAL DS    F
SMFID    DS    CL4
RESULT8  DS    CL8
RESULT   DS    CL10
PRINT    DS    CL133
BLANK    DC    CL133' '
*
STAMP    DS   0CL12
DAY      DS   CL3      BLANK
DAYNO    DS   CL2      BLANK
MONTH    DS   CL3      BLANK
YEAR     DS   CL2      19
YEAR1    DS   CL2      BLANK
*
TIME     DS    F
*---------------------------------------------------------------------
DATE     DS    0CL12
DATENAME DS    CL3
DATEDAY  DS    CL2
DATEMONT DS    CL3
DATEYEAR DS    CL4
*
*---------------------------------------------------------------------
TIMESTAM DS   0CL11
HH       DS   CL2      BLANK
         DS   CL1      BLANK
MM       DS   CL2      BLANK
         DS   CL1      BLANK
SS       DS   CL2      BLANK
         DS   CL1      BLANK
DD       DS   CL2      BLANK
*--------------------------------------------------------------------
PARMLIST DS    0D
WORD1    DC    A(CHARFIEL)   ADDRESS OF THE FIELD CONT. CHARS STRING
WORD2    DC    A(LINECOUN)   ADDRESS OF LINE COUNT FIELD
WORD3    DC    A(CONSAREA)   ADDRESS OF A CONSTRUCION AREA
WORD4    DC    A(NUMCHARA)   ADDRESS OF THE NUMBER OF CHARACTERS
*
CHARFIEL DS    CL9
LINECOUN DC    F'1'     FOR THE FIRST ENTRY TO IEFSD095
CONSAREA DC    CL132' ' CONSTRUCTION AREA
NUMCHARA DC    F'9'     NUMBER OF CHARACTERS INM THE STRING
*---------------------------------------------------------------------
SORTRECO DS   0CL132
JOBNAME  DS   CL8      JOBNAME
         DS   CL1      FILLER
STEPNAME DS   CL8      STEPNAME
         DS   CL1      FILLER
STEPNUMB DS   CL3      STEP NUMBER
         DS   CL1      FILLER
PERFGRNU DS   CL4      PERFORMANCE GROUP NUMBER
         DS   CL1      FILLER
SORTDATE DS   CL9      DATE
         DS   CL1      FILLER
SORTTIME DS   CL11     TIME
         DS   CL1      FILLER
NURECSOR DS   CL10     NUMBER OF RECORDS SORTED
         DS   CL1      FILLER
SORTCPUT DS   CL10     SORT CPU TIME
         DS   CL1      FILLER
TYPEOPER DS   CL3      TYPE OF OPERATION: SORT, MERGE, COPY
         DS   CL1      FILLER
HIDASWOR DS   CL4      HIPERSORTING, DATA SPACE OR WORK DATA SETS
         DS   CL1      FILLER
SINMEMOR DS   CL4      SORTING COMPLETED IN MEMORY INDICATOR
         DS   CL1      FILLER
SORTWKFL DS   CL4      SORTWK FLAGS BYTE
         DS   CL1      FILLER
NHIPCREA DS   CL5      NUMBER OF HIPERSPACES CREATED
         DS   CL1      FILLER
NHIPPAGU DS   CL10     NUMBER OF HIPERSPACE PAGES USED
         DS   CL1      FILLER
FINAEXTE DS   CL2      FINAL NUMBER OF EXTENTS
         DS   CL1      FILLER
FINATRKS DS   CL10     FINAL NUMBER SORTWORK DATA SET TRACKS
         DS   CL1      FILLER
TOTATRKS DS   CL10     TOTAL NUMBER OF WORK DATA SET TRKS USED
         DS   CL1      FILLER
FILLER   DS   CL90     FILLER
*---------------------------------------------------------------------
         DS    0D
PRINTDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,BLKSIZE=133,DSORG=PS,      *
               DDNAME=PRINTOUT
REPORDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,BLKSIZE=133,DSORG=PS,      *
               DDNAME=REPORT
SMFREDCB DCB   MACRF=GM,DSORG=PS,RECFM=VBS,DDNAME=SMFDATA,EODAD=ENDATA
*---------------------------------------------------------------------
PACKFIEL DS    D
INPUDATE DS    F
SMFDATE  DS    F
R9SAVE   DS    F
*--------------------------------------------------------------------
         LTORG  LTORG LTORG LTORG LTORG LTORG LTORG LTORG
*---------------------------------------------------------------------
*   DUMMY SECTIONS   DUMMY SECTIONS   DUMMY SECTIONS
         ICESMF
*---------------------------------------------------------------------
         END
//*------------------------------------------------------------------
//LINK    EXEC PGM=IEWL,COND=(5,LT,ASM),
//             PARM='LET,XREF'
//SYSLIB   DD DSN=YOUR.LOAD.LIBRARY,DISP=SHR
//         DD DSN=SYS1.AOSB0,DISP=SHR
//SYSLMOD  DD DSN=YOUR.LOAD.LIBRARY,DISP=SHR
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,(1,1))
//SYSPRINT DD  SYSOUT=T
//SYSLIN   DD DSN=&&OBJ,DISP=(OLD,DELETE)
//     DD  *
  NAME SORTTRAK(R)
/*
//SORTTRAK EXEC PGM=SORTTRAK
//STEPLIB DD DSN=YOUR.LOAD.LIBRARY,DISP=SHR
//SMFDATA  DD DSN=YOUR.SMF.RECORD.TYPE16.FILE,DISP=OLD
//PRINTOUT DD SYSOUT=*
//REPORT   DD SYSOUT=K
//*
//* THE  SOURCE CODE FOR CONVER10 AND FOR CONVER08
***********************************************************************
*                                                                     *
*    THIS PROGRAM IS THE CONVER10   16.05.94   8.30                   *
*    MAX NUMBER X"7FFFFFFF"                                           *
*    10 DECIMAL CHARACTERS                                            *
*                                                                     *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
CONVER10 CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
*
         LR    R2,R1  (R2) = POINTER TO ADDRESS OF THE PARM LIST
*
GETMATD  GETMAIN R,LV=500
         LR    R9,R1  (R9)= ADDR. OF THE ALLOCATED VIRT. STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         B     FINI
*
OKGETMAT EQU   *
*
         USING SVC34DSE,R9        ESTABLISH ADDRESSABILITY
*
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
*
         L     R3,0(R2)     (R3) = ADDRESS OF THE FIRST PARAMETER
         LA    R1,FIXNUMBE
         MVC   0(4,R1),0(R3)     MOVE FIXNUMBE
*
         L     R1,FIXNUMBE
         CVD   R1,PACKFIEL
*
         MVC   COPYPATE(12),PATTERN
         ED    COPYPATE(12),PACKFIE2
*
         L     R3,4(R2)     (R3) = ADDRESS OF THE SECOND PARAMETER
         LA    R1,COPYPATE
         MVC   0(10,R3),2(R1)  MOVE RESULT
*
*   END OF PROGRAM
*
FINI     EQU   *
*********************************************************************
FREEM    EQU   *
         FREEMAIN R,LV=500,A=(R9)
         L     R13,4(R13)
         LR    R15,R7
         RETURN (14,12),RC=(15)
**********************************************************************
*   CONSTANTS
BLANK    DC    CL133' '    BLANK
PATTERN  DC    XL12'402020202020202020202120'
*---------------------------------------------------------------------
         LTORG
*---------------------------------------------------------------------
SVC34DSE DSECT
SAVE3    DS    18F
PACKFIEL DS    0PL8
         DS    PL2
PACKFIE2 DS    PL6
FIXNUMBE DS    F
COPYPATE DS    CL12
         END
***********************************************************************
*                                                                     *
*    THIS PROGRAM IS THE CONVER08   17.02.87  11.30                   *
*                                                                     *
***********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*        PRINT NOGEN
         EJECT
CONVER08 CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
*
         LR    R2,R1  (R2) = POINTER TO ADDRESS OF THE PARM LIST
*
*                   GETMAIN
*
GETMATD  GETMAIN R,LV=500
         LR    R9,R1  (R9)= ADDR. OF THE ALLOCATED VIRT. STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         B     FINI
*
OKGETMAT EQU   *
*
         USING SVC34DSE,R9        ESTABLISH ADDRESSABILITY
*
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
*
         L     R3,0(R2)     (R3) = ADDRESS OF THE FIRST PARAMETER
         LA    R1,FIXNUMBE
         MVC   0(4,R1),0(R3)     MOVE FIXNUMBE
*
*            CONVERT
*
         L     R1,FIXNUMBE
         CVD   R1,PACKFIEL
         MVC   COPYPATE(10),PATTERN
         ED    COPYPATE(10),PACKFIE2
*
         L     R3,4(R2)     (R3) = ADDRESS OF THE SECOND PARAMETER
         LA    R1,COPYPATE
         MVC   0(8,R3),2(R1)  MOVE RESULT
*
*   END OF PROGRAM
FINI     EQU   *
FREEM    EQU   *
         FREEMAIN R,LV=500,A=(R9)
         L     R13,4(R13)
         LR    R15,R7
         RETURN (14,12),RC=(15)
**********************************************************************
*   CONSTANTS
PATTERN  DC    XL10'40202020202020202120'
         LTORG
*---------------------------------------------------------------------
SVC34DSE DSECT
SAVE3    DS    18F
PACKFIEL DS    0PL8
         DS    PL3
PACKFIE2 DS    PL5
FIXNUMBE DS    F
COPYPATE DS    CL10
*
*---------------------------------------------------------------------
         END
