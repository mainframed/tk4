//IBMUSERA JOB ACCT,'JAN JAEGER',NOTIFY=IBMUSER,CLASS=A,MSGCLASS=X
//ASMA90   EXEC PGM=ASMA90,PARM='DECK,NOOBJ,XREF(SHORT)'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,10)
//SYSPUNCH DD  DSN=&&PUNCH,DISP=(NEW,PASS),
//          UNIT=SYSALLDA,SPACE=(CYL,10)
RAWSTAPE TITLE 'Convert file from AWSTAPE format'
*---------------------------------------------------------------------*
* Function:                                                           *
*        This program converts an AWSTAPE format file to RECFM=U      *
*        SYSUT1 is converted reblocked according to the AWS           *
*        header records.  The blocksize of SYSUT2 can be reset        *
*        using IEBGENER                                               *
*        The parm field indicates the filenumber to be extracted,     *
*        this number has the same value as when using BLP in JCL.     *
*---------------------------------------------------------------------*
RAWSTAPE CSECT
         LR    R12,R15                  Load base register
         USING RAWSTAPE,R12             Establish addressability
         L     R2,0(,R1)                PARM=
         LH    R3,0(,R2)                L'PARM
         LTR   R3,R3
         BZ    NOPARM                   No parm field
         BCTR  R3,0                     Reduce to Machine length
         EX    R3,EXPACK
         CVB   R3,DWORD
         ST    R3,FILENUM               Filenumber to be read
NOPARM   DS    0H
         OPEN  (SYSUT1,INPUT)           Open input DCB
         TM    SYSUT1+48,X'10'          Is DCB open?
         BZ    EXIT020                  No, exit with RC=20
         OPEN  (SYSUT2,OUTPUT)          Open output DCB
         TM    SYSUT2+48,X'10'          Is DCB open?
         BZ    EXIT020                  No, exit with RC=20
         LA    R2,BUFFER
         SLR   R3,R3                    Total number of bytes in buffer
         LA    R5,1                     We start at file 1
READBLK  DS    0H
         LA    R2,BUFFER(R3)
         GET   SYSUT1,(2)               Get input block
         AH    R3,SYSUT1+82             R3=total bytes in buffer
GETNEXT  DS    0H
         CH    R3,=Y(L'HEADER)          Do we at least have the header
         BM    READBLK
         TM    HDRFLAG1,HDRF1TMK        Take mark?
         BZ    NOEOF
         LA    R5,1(,R5)                Increment file number
         C     R5,FILENUM               Beyond requested file?
         BH    EXIT000
NOEOF    DS    0H
         SLR   R4,R4                    Logical block length
         ICM   R4,B'0001',HDRCURLN      Load low-order length byte
         ICM   R4,B'0010',HDRCURLN+1    Load high-order length byte
         LA    R1,L'HEADER(,R4)
         CR    R3,R1                    Full block yet?
         BM    READBLK                  No: Fetch another
         C     R5,FILENUM               Is this the file we want?
         BNE   NOPUT
         TM    HDRFLAG1,HDRF1BOR+HDRF1EOR
         BM    EXIT016
         BNO   NOPUT
         LA    R2,DATA                  Skip AWS header
         STH   R4,SYSUT2+82             Store block size
         PUT   SYSUT2,(2)               Write block
NOPUT    DS    0H
         AH    R4,=Y(L'HEADER)          Remove header
         SLR   R3,R4                    Remove block
         LA    R2,BUFFER                Back to start
         LR    R6,R2                    Move remainder to beginning
         LA    R8,0(R4,R2)              Point past block
         LR    R7,R3                    Set length
         LR    R9,R3
         MVCL  R6,R8                    Move block
         B     GETNEXT
*
EXIT000  DS    0H
         CLOSE (SYSUT1,,SYSUT2)         Close DCBs
         SR    R15,R15                  Zeroize return code
         SVC   3                        Exit with RC=0
EXIT012  DS    0H
         LA    R15,12                   Premature EOF
         SVC   3                        Exit with RC=12
EXIT016  DS    0H
         LA    R15,16                   Invalid record type
         SVC   3                        Exit with RC=16
EXIT020  DS    0H
         LA    R15,20                   DD statement missing
         SVC   3                        Exit with RC=20
*
* EXecuted
*
EXPACK   PACK  DWORD,2(0,2)
         DROP  R12                      Drop base register
*
* Variables
*
FILENUM  DC    F'1'
DWORD    DS    D
*
* Data Control Blocks
*
         PRINT NOGEN
SYSUT1   DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1,EODAD=EXIT012,          X
               RECFM=U,LRECL=0,BLKSIZE=32760
SYSUT2   DCB   DSORG=PS,MACRF=PM,DDNAME=SYSUT2,                        X
               RECFM=U,LRECL=0,BLKSIZE=32760
         LTORG
*
BUFFER   DS    0C
*
* AWSTAPE block header
*
HEADER   DS    0CL6                     Block header
HDRCURLN DS    XL2                      Current block length
HDRPRVLN DS    XL2                      Previous block length
HDRFLAG1 DS    X'00'                    Flags byte 1...
HDRF1BOR EQU   X'80'                    ...beginning of record
HDRF1TMK EQU   X'40'                    ...tape mark
HDRF1EOR EQU   X'20'                    ...end of record
HDRFLAG2 DS    X'00'                    Flags byte 2
*
* Data
*
DATA     DS    0C
         DS    65536C
*
* Register equates
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
//IEWL     EXEC PGM=IEWL
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,10)
//SYSLMOD  DD  DSN=IBMUSER.LOAD(TEMPNAME),DISP=SHR
//SYSLIN   DD  DSN=&&PUNCH,DISP=(OLD,DELETE)
//*
//CONVERT  EXEC PGM=*.IEWL.SYSLMOD,PARM=1
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  DISP=SHR,DSN=IBMUSER.SADUMP.AWS
//SYSUT2   DD  DSN=IBMUSER.SADUMP,DISP=(NEW,CATLG),
//          UNIT=SYSALLDA,SPACE=(TRK,900,RLSE)
//*
//SETDCB   EXEC PGM=IEBGENER
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSUT1   DD  DUMMY,
//          DCB=(DSORG=PS,RECFM=FBS,LRECL=4160,BLKSIZE=29120)
//SYSUT2   DD  DISP=MOD,DCB=(*.SYSUT1),DSN=IBMUSER.SADUMP
