



              Partitioned Data Set Punch Utility



                          PDSPUNCH


 January 4, 2000                    Freeware from Steli Inc.

1                      TABLE OF CONTENTS

 INTRODUCTION                                              3

 EXECUTION JCL                                             4

 CONTROL CARDS                                             5

 CHANGING DEFAULTS                                         6

 SAMPLE JCL                                                7

 SAMPLE OUTPUT                                             8

 PACKAGE CONTENTS                                          9

1                        INTRODUCTION                   Page 3

 This document is intended to provide user information for
 the Partitioned Data Set Punch utility (PDSPUNCH). Some
 understanding of Job Control Language (JCL) is required as
 well as knowledge of how programs are executed.

 PDSPUNCH is mainframe freeware. You do not need to register
 to use PDSPUNCH. It may be placed on any archive, web site
 or bulletin board without restraint.  It may be distributed
 by any means, provided that no charge is made other than for
 reasonable distribution costs.

 PDSPUNCH is intended for MVS compatible systems to turn the
 members of one or more partitioned data sets (PDS's) into a
 sequential stream of 80 byte records with IEBUPDTE ./ ADD cards
 preceding each member in alphabetical order.  It will process
 concatenated PDS's up to the number currently allowed by the
 operating system and data of any size or type, fixed, variable
 or unformatted.  Options may be specified through free form
 control cards.

 PDSPUNCH through its options will also:
    - Punch duplicate members, i.e. process members with the
      same name that are in one or more PDS's in the concatenation
      (DUPS)
    - Punch only members that have duplicates within the
      concatenation (DUPS(ONLY))
    - Punch only a portion of each member (FIRST(.))
    - Allow a range of members to be selected  (>MEMBER(.)
      and <MEMBER(.))

 Steli Inc. has made its best effort to provide working,
 tested code.  However, nothing is perfect - there may be
 flaws and there certainly could be improvements.  All
 questions, concerns, problems and suggestions are welcome;
 STELI Inc. has a web site, WWW.STELI.COM, where the source
 is available and mail may be sent to the webmaster,
 or mail may be sent to:
                     Steli Inc.
                     PDSPUNCH Team
                     27 Half Hollow Turn
                     Monroe, NY  10950-4118

1                        EXECUTION JCL                  Page 4

The job control language (JCL) for PDSPUNCH is:
           //   EXEC   PGM=PDSPUNCH ( ,REGION=0M )
           //STEPLIB     DD   DISP=SHR,DSN=...
           //SYSPUNCH    DD   ...
           //SYSUT1      DD   DISP=SHR,DSN=PDS1
         ( //            DD   DISP=SHR,DSN=PDS2 )
         (    ...   optionally, as many         )
         (    ...      concatenated PDS's       )
         (    ...         as allowed in MVS/ESA )
         ( //SYSIN       DD   *                 )
         (        control cards . . .           )

 Optional control language elements are shown in brackets.
 The name of the program  may be changed as desired providing
 that the actual program is linked with the appropriate name
 or alias.

 REGION is optional but PDSPUNCH requires approximately 216,000
 bytes (system required resources may increase this amount).  In
 most cases the default region size is adequate to meet these
 requirements.  STEPLIB may be optional if PDSPUNCH is placed in
 the system's link list but otherwise simply points to where
 PDSPUNCH is stored.

 The SYSPUNCH file may be directed to any output class or may
 be sent to a new or existing file.  The DCB attributes of
 SYSPUNCH will be record format FB and LRECL 80.  The BLKSIZE
 parameter may be specified on the JCL for it.

 SYSUT1 points to the one or more concatenated PDS's to be
 processed.  SYSIN contains control information and may be
 omitted, set to //SYSIN DD DUMMY or simply be empty.  Full
 control card descriptions are shown below.

 The DD names may be changed as desired in the defaults section
 of the source code.  If an incorrect name is specified, the
 program will terminate returning the code received from opening
 the data set (the system will generally indicate the missing DD
 name).

1                        CONTROL CARDS                  Page 5

 The control card values may be specified free form in the first
 72 columns of the records in the SYSIN file in any order and may
 be separated by commas, blanks or simply concatenated together.
 Each option must be contained on one input line, however, as
 continuation is not supported. Blank lines may be interspersed
 as desired for readability.

 The specific keywords are sought and anything else is ignored.
 Keywords must be in upper case but any FOOTING data may be any
 case.  Also, options which require parentheses but where no
 closing parenthesis is supplied will be ignored, as will values
 which require numeric values but are not supplied as such.  The
 last specified value is the one used if the same option is
 repeated.  To change the defaults, please see the section below
 called CHANGING DEFAULTS.

 Control card parameters are:

      DUPS      Indicate that members with duplicate
                names in concatenated PDS's are to be punched
                and shown in the index.  The alternative,
                NODUPS, is the default.  DUPS(ONLY) may be
                specified to have only the members that exist
                as duplicates within the concatenation.

      FIRST(#)  Only the first # of lines of each member
                will be punched.  The default is to punch
                every line of a member.  Note this is NOT
                record count, but literally punches the
                indicated number of lines.

      >MEMBER(member) Indicates the 1 to 8 byte member name,
                to be used as an lower bound - no member
                alphabetically lower then this member will be
                punched.  The default is to punch the first
                member and all following members.

      <MEMBER(member) Indicates the 1 to 8 byte member name,
                to be used as an upper bound - no member
                alphabetically higher then this member will
                be punched.  The default is to punch all
                members from the starting member onward.

1                      CHANGING DEFAULTS                Page 6

 To change the default behavior of PDSPUNCH, simple changes
 may be made to the assembler source code and the program
 will need to be re-assembled and re-linked.

 To change the default, simply find the variable in the
 PDSPUNCH source as shown below and change it from `N' to `Y'
 or vice versa.  BLKSIZE, FIRST and LINECNT require a numeric
 value.  The same concept applies to the DD names shown.

 ************************************************************
 *    DEFAULT OPTION VALUES                                 *
 ************************************************************

 &DDOPTS       SETC  'SYSIN'      DDNAME FOR OPTIONS FILE
 &DDPDS        SETC  'SYSUT1'     DDNAME FOR PARTITIONED d/s
 &DDPUNCH      SETC  'SYSPUNCH'   DDNAME FOR PUNCHED FILE

 &DEF1ST       SETA  999999999    FIRST OPTION CHOSEN DEFAULT

 &DEFDUPS      SETC  'N'          DUPS DEFAULT
 &DEFDUPSO     SETC  'N'          DUPS ONLY DEFAULT
                       00000000
 &DEFMEMGT     SETC   '00000000'  FIRST MEMBER SELECTED (HEX 0'S)
                       FFFFFFFF
 &DEFMEMLT     SETC   'FFFFFFFF'  LAST MEMBER SELECTED (HEX F'S)

1                         SAMPLE JCL                    Page 7

 An example of JCL that may be used is:
      //PUNCHGAS  EXEC  PGM=PDSPUNCH,REGION=0M
      //SYSIN       DD    *
            >MEMBER($GAS0000)   <MEMBER($GAS9999)
      //STEPLIB      DD        DISP=SHR,DSN=SYS4.LINKLIB
      //SYSPUNCH     DD        DISP=(,CATLG),DSN=RECOVERED.MEMBERS,
      //             UNIT=SYSDA,SPACE=(CYL,(10,10),RLSE),
      //             DCB=(BLKSIZE=27920,BUFNO=24)
      //SYSUT1       DD        DISP=SHR,DSN=SYS4.USER.PROCLIB

 The above step will punch all the restored members (see PDSGAS)
 of the user PROCLIB.  This would allow removal of the "gas"
 members while still retaining them in a sequential file.  Note
 the control data is free form and does not need to be aligned in
 any way.

 Another example is:
      //PNCHPDSS  EXEC  PGM=PDSPUNCH
          DUPS(ONLY)
      //STEPLIB      DD        DISP=SHR,DSN=SYS4.LINKLIB
      //SYSPUNCH    DD         SYSOUT=*
      //SYSUT1       DD        DISP=SHR,DSN=APPLIC.COPYLIB1
      //             DD        DISP=SHR,DSN=APPLIC.COPYLIB2
      //             DD        DISP=SHR,DSN=APPLIC.COPYLIB3
      //             DD        DISP=SHR,DSN=APPLIC.COPYLIB4

 This step will provide a sequential file with all the duplicate
 members within the 4 COPYLIBs.

1                        SAMPLE OUTPUT                  Page 8

 Given the following 2 partitioned data sets, PDS.A and
 PDS.B, which contain:

      PDS.A
           Member A -- 10 lines of 10 A's
           Member B -- 10 lines of 10 B's
           Member C -- 10 lines of 10 C's
      PDS.B
           Member B --10 lines 0f 10 2's
           Member D --10 lines of 10 D's

 The JCL immediately following will produce the results
 below:
      //PDSPUNCH   EXEC     PGM=PDSPUNCH,REGION=0M
      //SYSIN   DD   *
           DUPS
           FIRST(03)
      /STEPLIB       DD       DISP=SHR,DSN=USER.LOADLIB
      //SYSPUNCH   DD       SYSOUT=*
      //SYSUT1            DD       DISP=SHR,DSN=PDS.A
      //                  DD       DISP=SHR,DSN=PDS.B

 ./  ADD  NAME=A
 AAAAAAAAAA
 AAAAAAAAAA
 AAAAAAAAAA
 ./  ADD  NAME=B
 BBBBBBBBBB
 BBBBBBBBBB
 BBBBBBBBBB
 ./  ADD  NAME=B
 2222222222
 2222222222
 2222222222
 ./  ADD  NAME=C
 CCCCCCCCCC
 CCCCCCCCCC
 CCCCCCCCCC
 ./  ADD  NAME=D
 DDDDDDDDDD
 DDDDDDDDDD
 DDDDDDDDDD


1                      PACKAGE CONTENTS                 Page 9

 PDSPUNCH is generally distributed as a ZIP file, but the
 files distributed easily fit on a 1.4 meg floppy.  The files
 are:

     - PUNCHASM   the assembler source code wrapped in JCL
                  to assemble and link it
     - PUNCH      sample execution JCL
     - PUNCHDOC   this document

 PDSPUNCH was assembled using IBM's High Level Assembler.
 Assembler H may be used although any blank lines in the
 source will have to be removed.  The JCL supplied in
 PUNCHASM does not use procedures since many have local
 changes precluding use of specific step names for DD name
 over-rides.  To change from High Level Assembler to
 Assembler H, simply change the program name from ASMA90 to
 IEV90.  The JCL will accommodate either.

