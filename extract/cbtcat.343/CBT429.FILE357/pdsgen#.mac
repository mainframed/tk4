



 Partitioned Data Set Image Generation Utility - Version 1.1



                        PDSGEN


 December 13, 1998                   Freeware from Steli Inc.

1                    TABLE OF CONTENTS

 INTRODUCTION                                              3

 DISCLAIMER                                                5

 EXECUTION JCL                                             6

 CONTROL CARDS                                             7

 CHANGING DEFAULTS                                         9

 SAMPLE JCL                                               10

 SAMPLE OUTPUT                                            11

 SUGGESTED USES                                           12

 LIMITATIONS                                              13

 PACKAGE CONTENTS                                         14

1                        INTRODUCTION                   Page 3

 You do not need to register to use PDSGEN, nor buy a licence
 to use it.  PDSGEN may be placed on any archive, web site or
 bulletin board without restraint.  It may be distributed by
 any means, provided that the original files as supplied by
 Steli Inc remain intact and no charge is made other than for
 reasonable distribution costs.

 This document is intended to provide a technical description
 of the Partitioned Data Set Image Generation Utility
 (PDSGEN) as well as user documentation. Use of this document
 requires some understanding of Job Control Language (JCL) as
 well as knowledge as to how programs are executed.

 PDSGEN is intended to be used on MVS compatible systems to
 generate a given set of card images for each selected
 member, replacing member name and/or data set name tokens.
 It will process concatenated PDS's up to the number
 currently allowed by the operating system.  It has a number
 of control options which may be selected through free form
 control parameters.

 Any %MEMBER% or %DSNAME% tokens  in the SYSGEN stream will
 be replaced by the member name or data set name (of the
 selected member) respectively.  If the member name is less
 than 8 bytes long, the characters to the right will be
 shifted left and the right padded with blanks.  %DSNAME%
 will be treated the same for lengths less than 8 or will be
 expanded for lengths over 8 bytes.  The characters to the
 right will be truncated accordingly up to the size of the
 card taking part in the shift (please see the GENCARDSIZE
 and GENCOUNT options below for a discussion of their
 additional constraints).  Note the %DSNAME% token will not
 be replaced if the data set name string would go beyond the
 card image.

 Similarly, #MEMBER# and #DSNAME# strings will be overlaid by
 the 8 byte member name and the 44 byte data set name
 respectively.  The former will not shift leftwards if the
 member name is less than 8 and the latter will overlay a
 full 44 characters with the data set name, both having
 blanks on the right if they are less than the full length.
 The token characters surrounding MEMBER and DSNAME may be
 changed via control options.  #MEMBER#, %MEMBER%, #DSNAME#
 and %DSNAME% tokens may be combined on and input and
 repeated on the same input.

 PDSGEN shows the PDS's processed in the index (if the index
 option is selected) as well as a member list. An ASCII
 control character prefixes the 120 characters to minimize
 output.

1                        INTRODUCTION (Continued)       Page 4

 PDSGEN through its control card options will also:
    - Provide an index to the members as well as indicating
      where each member resides
    - Allow a range of members to be selected as either or
      both a lower and upper bound
    - Process duplicate members, i.e. generate data for
      members with the same name that are in one or more PDS's in
      the concatenation
    - Process only members that have duplicates within the
      concatenation
    - Allow setting of the token strings, e.g. #MEMBER# may
      be replaced by !MEMBER! (either or both % and # can be
      replaced by other characters)
    - Restructure only the first 72 columns or the entire 80
      byte card image

1                         DISCLAIMER                    Page 5

 Steli Inc. has made its best effort to provide working,
 tested code.  However, given changes in the systems'
 environment, flaws in documentation, or even possible
 errors in the code, there may be problems running PDSGEN.
 Steli Inc. has a vested interest as well as a professional
 intent to provide a working program but can't warranty the
 code absolutely.  Steli Inc. may be reached at the
 following address, or at its WWW.STELI.COM web site, and
 all questions, concerns, problems and suggestions are
 welcome:

           Steli Inc.
           PDSGEN Team
           27 Half Hollow Turn
           Monroe, NY  10950-4118

1                        EXECUTION JCL                  Page 6

 The Job Control Language (JCL) required to execute the
 Partitioned Data Set Image Generation utility (PDSGEN) is:

      //STEPNAME   EXEC   PGM=PDSGEN ( ,REGION=0M )
      //STEPLIB      DD     DISP=SHR,DSN=...
      //SYSPRINT     DD     SYSOUT=*
      //SYSUT1       DD     DISP=SHR,DSN=PDS1
    ( //             DD     DISP=SHR,DSN=PDS2     )
    (      ...            optionally, as many     )
    (      ...            concatenated PDS's      )
    (      ...            allowed in MVS/ESA      )
      //SYSIN        DD   *
    (           control cards . . .               )
      //SYSGEN       DD   *
                card images to be generated for each member
      //SYSOUT       DD   SYSOUT=* or DSN=.,etc

 Optional control language elements are shown in brackets.
 The name of the program, while not optional, may be changed
 as desired providing that the actual program is linked with
 the appropriate name or alias.  The entry point specified
 in the link edit, PDSGEN, should remain the same.

 STEPNAME is optional.  REGION is also optional but PDSGEN
 requires approximately 62,000 bytes plus at least 2 buffers for
 the data as well as 16 bytes for each member (system required
 resources may increase this amount).  In most cases the default
 region size is adequate to meet these requirements.  STEPLIB may
 be optional if PDSGEN is placed in the system's link list but
 otherwise simply points to where PDSGEN is stored.  SYSUT1 points
 to the one or more concatenated PDS's.

 SYSPRINT receives any "printed" output from PDSGEN.  The SYSPRINT
 file may be DUMMY'd out or be directed to any output class or may
 be sent to a new or existing file.  The DCB attributes of
 SYSPRINT will be record format FBA and LRECL 121.  The BLKSIZE
 may be set through the BLKSIZE control card option within PDSGEN
 but will default to 121 (since JES re-blocked any other size to
 unblocked).

 SYSIN contains any control information that takes PDSGEN
 beyond the defaults and is required to be present although
 it may be //SYSIN DD DUMMY or not have any control cards
 specified (that is, be empty).  The DD names may be changed
 as desired in the source code.  If an incorrect name is
 specified, the program will terminate returning the code
 received from opening the data set (the system will
 generally indicate the missing DD name).  Full control card
 descriptions are shown below.

 SYSGEN contains the card images to be scanned and generated for
 each member selected.  SYSOUT contains the generated card images
 with the tokens, if any, replaced.  SYSOUT is defined with record
 format fixed blocked and record size 80; any block size may be
 specified (DCB=BLKSIZE=6160 for example) as long as it's a
 multiple of 80.

1                        CONTROL CARDS                  Page 7

 The control card values may be specified in the first 72
 columns of the records in the SYSIN file in any order and
 may be separated by commas, blanks or simply concatenated
 together.  Each option must be contained on one input line,
 however, as continuation is not supported. Blank lines may
 be interspersed as desired for readability.

 The specific keywords are sought and all extraneous data is
 ignored.  Keywords must be in upper case.  Also, options
 which require an opening parenthesis but where no closing
 parenthesis is supplied will be ignored, as will values
 which require numeric values but are not supplied as such.
 The last specified value is the one used if the same keyword
 is repeated.  If it is desired to change the defaults,
 please see the section below called CHANGING DEFAULTS.

 Control card parameters are:

      BLKSIZE(#)  Indicates the block size to be used for
                the SYSPRINT file output.  It must be a
                multiple of 121.  The default is
                BLKSIZE(121).

      DUPS      Indicates that members with duplicate
                names in concatenated PDS's are to be
                printed.  The alternative is NODUPS which is
                the default.  DUPS(ONLY) may be specified to
                have only the members that exist as
                duplicates within the concatenation listed.

      FIXEDINDICATOR(x)   may be used to change the #
                characters which are used in #MEMBER# and
                #DSNAME#  replaceable tokens.  Please also
                see VARIABLEINDICATOR(x) below.

      GENCARDSIZE(#)  indicates the area of the card image to
                be restructured.  # may be 72 or 80, 72 being
                the default.  72 implies only the first 72
                columns will be shifted left or right.  A
                value of 80 implies the entire card will be
                shifted.

      GENCOUNT(#)  may be used to specify the maximum number
                of cards to accept as input from SYSGEN.  The
                default is 1,000.  Any cards input beyond the
                number specified will  be ignored.

      INDEX     Indicates that an index of member names
                is to be printed at the end of the listing.
                This list will show all members in the
                selected range including those not printed
                (e.g. if NODUPS is chosen).  The alternative
                is NOINDEX which simply causes no index to be
                listed.  NOINDEX is the default.

1                        CONTROL CARDS (Continued)      Page 8

      VARIABLEINDICATOR(x)  may be used to change the %
                characters which are used in %MEMBER% and
                %DSNAME%  replaceable tokens.  Please also
                see FIXEDINDICATOR(x) above.

      <MEMBER(mem) Indicates the 1 to 8 byte member name,
                "mem", which will be used as an upper bound -
                no member alphabetically higher then this
                member will be selected.  The default is to
                select all members from the starting member
                onward.  This option may be used with the
                >MEMBER option to specify a range.

      >MEMBER(mem) Indicates the 1 to 8 byte member name,
                "mem", which will be used as an lower bound -
                no member alphabetically lower then this
                member will be selected.  The default is to
                select the first member and all following
                members, up to the last member to be printed.
                This option may be used with the <MEMBER
                option to specify a range.

1                      CHANGING DEFAULTS                Page 9

 To change the default behavior of PDSGEN, simple changes
 may be made to the assembler source code and the program
 will need to be re-assembled and re-linked.  Care should be
 taken to back up the code before making the changes.

 To change the default, simply find the variable in the
 PDSGEN source as shown below and change it from 'N' to 'Y'
 or vice versa (some options requiring a numeric value):

     -    PARMD  DC   CL1'N'          * DUPS default
     -    PARMI  DC   CL1'N'          * INDEX default
     -    PARMDO DC   CL1'N'          * DUPS ONLY default

 GENNOREQ is set with 1000 and GENSZREQ with 80000 as the
 number of cards to be stored and the size of the area used.
 These may also be changed but GENSZREQ must be 80 times the
 value in GENNOREQ.

1                         SAMPLE JCL                    Page 10

 An example of JCL that may be used is:

      //GENPRCS  EXEC  PGM=PDSGEN,REGION=0M
      //SYSIN      DD    *
            DUPS            INDEX
      //STEPLIB    DD    DISP=SHR,DSN=SYS4.LINKLIB
      //SYSPRINT   DD    SYSOUT=C
      //SYSUT1     DD    DISP=SHR,DSN=SYS1.PROCLIB
      //           DD    DISP=SHR,DSN=SYS2.PROCLIB
      //           DD    DISP=SHR,DSN=SYS4.USER.PROCLIB
      //SYSGEN     DD    *
      DELETE  '%DSNAME%(%MEMBER%)'
      //SYSOUT     DD    DSN=CLEANUP.CLIST,DISP=(,CATLG),
      //           UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=6160

 The above step will generate DELETE cards for the 3
 PROCLIBs' members including duplicates, a data set list, and
 an index of all the members.  Note the control card data is
 free form and does not need to be aligned in any way..

 Another example is:

      //GENPDSS  EXEC  PGM=PDSGEN
           DUPS
      //STEPLIB      DD        DISP=SHR,DSN=SYS4.LINKLIB
      //SYSPRINT     DD        SYSOUT=*
      //SYSUT1       DD        DISP=SHR,DSN=APPLIC.LOADLIB1
      //             DD        DISP=SHR,DSN=APPLIC.LOADLIB2
      //             DD        DISP=SHR,DSN=APPLIC.LOADLIB3
      //             DD        DISP=SHR,DSN=APPLIC.LOADLIB4
      //SYSGEN       DD   *
        #MEMBER#  %DSNAME%
      //SYSOUT  DD   SYSOUT=*

 This step will provide a list of the members of the 4 load
 module data set names input and the data set in which each
 member is stored.  Note we took advantage of the system's
 allowing data in the stream being assigned to SYSIN.

1                        SAMPLE OUTPUT                  Page 11

 Given the following 2 partitioned data sets, PDS.A and
 PDS.B, which contain:

      PDS.A
           Member A -- 10 lines of 10 A's
           Member B -- 10 lines of 10 B's
           Member C -- 10 lines of 10 C's
      PDS.B
           Member B --10 lines 0f 10 2's
           Member D --10 lines of 10 D's

 The JCL immediately following will produce the results
 below:

      //PDSGEN    EXEC     PGM=PDSGEN,REGION=0M
      //SYSIN      DD   *
           INDEX
      /STEPLIB     DD       DISP=SHR,DSN=USER.LOADLIB
      //SYSPRINT   DD       SYSOUT=*
      //SYSUT1     DD       DISP=SHR,DSN=PDS.A
      //           DD       DISP=SHR,DSN=PDS.B
      //SYSGEN     DD       DATA
      //   DD   DSN=%DSNAME%(%MEMBER%),DISP=SHR
      /* * *     Note this closes out the SYSGEN file   * * *
      //SYSOUT     DD       DSN=SAVED.CONCAT,DISP=(,CATLG),
      //           UNIT=SYSDA,SPACE=(TRK,(20,20)),DCB=BLKSIZE=24000

 The generated images are:
      //   DD   DSN=PDS.A(A),DISP=SHR
      //   DD   DSN=PDS.A(B),DISP=SHR
      //   DD   DSN=PDS.A(C),DISP=SHR
      //   DD   DSN=PDS.B(D),DISP=SHR

 The printed output will consist of:

    PDS#      DATA SET NAME                 VOLUME
    ----------------------------------------------
     1              PDS.A                   TEST27
     2              PDS.B                   TEST29

 and

    MEMBER    PAGE#    PDS       MEMBER    PAGE#    PDS . . .
       A                1
       B                1
       B                2
       C                1
       D                2

 Note the dup member B is only shown for PDS.A since DUPS was
 not made an option.

1                       SUGGESTED USES                  Page 12

 When an application project goes into maintenance, members
 often need to be copied or deleted.  PDSGEN can generate
 SELECT cards for IEBCOPY or DELETE cards to be fed into
 IDCAMS.  PDSGEN with INDEX will list the members and the
 range options <MEMBER(x) and >MEMBER(x) may be useful in
 refining the output.

 PDSGEN may be used to generate the JCL to concatenate all or
 some of the members (as shown above in the sample output).
 The >MEMBER and <MEMBER options may again be used to refine
 this.  Note that this tactic works whatever the record size
 of the concatenated PDS's. A perfect use is to clear $GAS####
 members after running PDSGAS to restore deleted members.

 If you have a large number of members in two different
 concatenations and you'd like to see the difference, simply
 generate #MEMBER# with #DSNAME# for each member in the two
 sets.  The resultant data sets may then be compared with
 SUPERC or some other compare utility (they may require a
 sort to get the data set names in proper order).  See the
 second set of sample JCL for a very similar example.

1                         LIMITATIONS                   Page 13

 The addressing and residency modes are 24 and 24 (that is,
 AMODE=24 and RMODE=24).  The access method required for
 partitioned data, BPAM, has a problem with going above the
 16 megabyte line.  Until such time as the system allows
 this, the program will need to be run below the line.

 PDSGEN is not dependent on date usage - it does acquire and
 list the date in headings and it has been tested with a 2000
 date under simulation without any bad side effects.

1                      PACKAGE CONTENTS                 Page 14

 The files are:

    - GENASM   the assembler source code
    - GEN      sample execution JCL
    - GENDOC   this document

 PDSGEN was assembled using IBM's High Level Assembler.
 Assembler H (or F for that matter) may be used.  The JCL
 supplied in PDSGEN.CMP does not use procedures since many
 have local changes precluding use of specific step names
 for DD name over-rides.  To change from High Level
 Assembler to Assembler H, simply change the program name
 from ASMA90 to IEV90.  The JCL will accommodate either.

