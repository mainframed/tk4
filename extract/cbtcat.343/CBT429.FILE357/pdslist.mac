//***
//***  PARTITIONED DATA SET LIST UTILITY ASSEMBLY AND LINK
//***
//***    ( CHANGE -YOUR-STEPLIB- TO YOUR LOAD MOD LIBRARY )
//***
//A          EXEC     PGM=ASMA90,REGION=4M,
//             PARM='RENT'
//SYSLIB       DD       DSN=SYS1.MACLIB,DISP=SHR

         TITLE '***  PDSLIST  --  FREEWARE  --  STELI INC. 1999  ***'

*  PDSLIST IS FREEWARE AND MAY BE USED AT NO COST.  NEITHER A LICENCE
*  NOR REGISTRATION IS REQUIRED.  YOU MAY INDICATE TO STELI THAT YOU'RE
*  A PDSLIST USER VIA WWW.STELI.COM OR BY MAIL.  SUGGESTIONS, QUESTIONS
*  OR PROBLEMS ARE WELCOME.
*      STELI INC.
*      PDSLIST TEAM
*      27 HALF HOLLOW TURN
*      MONROE, NY  10950-4118

***********************************************************************
*    DEFAULT OPTION VALUES
***********************************************************************

&DDOPTS  SETC  'SYSIN'            DDNAME FOR OPTIONS FILE
&DDPDS   SETC  'SYSUT1'           DDNAME FOR PARTITIONED DATA SET
&DDPRINT SETC  'SYSPRINT'         DDNAME FOR LISTING FILE

&DEFALIAS SETC 'N'                ALIAS DEFAULT
&DEFBLKSI SETA 121                SYSPRINT BLOCK SIZE DEFAULT
&DEFDUPS  SETC 'N'                DUPS DEFAULT
&DEFDUPSO SETC 'N'                DUPS ONLY DEFAULT
&DEFEJECT SETC 'N'                EJECT DEFAULT
&DEFFOOT  SETC 'N'                FOOTER USED
&DEFHEX   SETC 'N'                HEX DEFAULT
&DEFINDX  SETC 'N'                INDEX DEFAULT
&DEFINDXO SETC 'N'                INDEX ONLY DEFAULT
&DEFOPTNS SETC 'N'                LIST OPTIONS DEFAULT
&DEFPGSZ  SETA 58                 DATA PAGE SIZE DEFAULT
&DEFTRANS SETC 'N'                TRANSLATE DEFAULT
&DEFVAR   SETC 'Y'                VARIABLE SEQUENCE DEFAULT
&DEF1ST   SETA 99999999           FIRST OPTION CHOSEN DEFAULT
&DEFMEMGT SETC '
&DEFMEMLT SETC 'ÿÿÿÿÿÿÿÿ'         HIGHEST MEMBER TO BE SELECTED-HEX F'S

***********************************************************************
*    PROGRAM ENTRY
***********************************************************************

PDSLIST  AMODE 31
PDSLIST  RMODE ANY

R0       EQU    0                 VARIED USAGE - ROUTINE DEPENDENT
R1       EQU    1                   "      "        "        "
R2       EQU    2                   "      "        "        "
R3       EQU    3                   "      "        "        "
R4       EQU    4                   "      "        "        "
R5       EQU    5                   "      "        "        "
R6       EQU    6                   "      "        "        "
R7       EQU    7                   "      "        "        "
R8       EQU    8                   "      "        "        "
R9       EQU    9                   "      "        "        "
R10      EQU   10                 BASE REGISTER
R11      EQU   11                 BASE REGISTER
R12      EQU   12                 RETURN REGISTER FOR SUBROUTINES
R13      EQU   13                 SAVE AREA & MISCELLANEOUS STORAGE
R14      EQU   14                 OCCASIONAL RETURN REGISTER (PRINTRET)
R15      EQU   15                 SHORT TERM WORK REGISTER

PDSLIST  CSECT                    ENTRY POINT
         STM   R14,R12,12(R13)
         LR    R10,R15
         LA    R11,4095
         LA    R11,1(R10,R11)
         USING PDSLIST,R10,R11
         LA    R0,DYNAML+WORKL
         STORAGE  OBTAIN,LENGTH=(0),LOC=BELOW
         ST    R1,8(R13)
         ST    R13,4(R1)
         LM    R0,R1,20(R13)
         L     R13,8(R13)
         USING WORKAREA,R13       R13 -> SAVEAREA + DYNAMIC STORAGE
         USING IHADCB,R7          PERIODIC USE - REQUIRES LOCAL LOAD

***********************************************************************
*    MAIN LINE
***********************************************************************

         BAS   R12,INITSTOR       INITIALIZE OBTAINED MEMORY
         BAS   R12,OPENDSS        OPEN FILES
         BAS   R12,GETOPTNS       READ AND SET UP PARMS
         BAS   R12,LSTOPTNS       DISPLAY THE OPTIONS USED
         BAS   R12,READDIR        BUILD THE DIRECTORY LIST
         BAS   R12,DETDUPS        DETERMINE WHICH ARE DUPS
         BAS   R12,PRINTMEM       PRINT THE MEMBER DATA
         BAS   R12,PRTDSNS        PRINT THE CONCATENATED DSN'S
         BAS   R12,PRTINDEX       PRINT THE INDEX
         BAS   R12,CLOSERTN       CLOSE ALL FILES
EXITALL  EQU   *
         L     R15,FINALRC        SET LAST RETURN CODE
         LR    R1,R13             TERMINATE PROGRAM
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14

***********************************************************************
*    INITIALIZE THE OBTAINED STORAGE WITH STARTING VALUES OR WITH
*    I/O MACRO EXPANSIONS
***********************************************************************

INITSTOR EQU   *

         XC    FINALRC,FINALRC    INITIALIZE FINAL RETURN CODE TO 0

         LA    R0,WKINGSTG        INITIALIZE DYNAMIC STORAGE AREA
         LA    R1,DYNAML
         LA    R14,DYNAMA
         LA    R15,DYNAML
         MVCL  R0,R14

         LA    R14,JFCBAREA       SET UP READ JFCB CONNECTIONS
         ST    R14,EXLST
         MVI   EXLST,X'87'
         LA    R14,EXLST
         LA    R7,DIR
         ST    R14,EXLSTPTR
         MVC   DCBEXLSA(3),EXLSTPTR+1

         TIME  DEC                GET DATE FOR HEADER(S)
         ST    1,DW
         MVC   HDRDATE,DATEFMT
         ED    HDRDATE,DW+1
         MVC   PRTLINE,BLANKS

         L     R0,DSNASIZE        GET STORAGE FOR DATA SET NAMES
         STORAGE  OBTAIN,LENGTH=(0),LOC=ANY
         ST    R1,DSNAREA

         BR    R12

***********************************************************************
*    OPEN THE DCBS FROM THE GETMAINED AREAS
***********************************************************************

*  R1 -> OPEN MACRO
*  R5 -> DCB
*  R6 -> DCB
*  R7 -> DCB

OPENDSS  EQU   *
         LA    R1,OPEN
         LA    R5,DIR
         LA    R6,PDS
         LA    R7,SYSPRINT
         OPEN  ((R5),,(R6),,(R7),OUTPUT),MF=(E,(R1)),MODE=31
         LTR   R15,R15
         BZ    OPENOK01
         ST    R15,FINALRC
         B     EXITALL

OPENOK01 EQU   *
         LA    R1,OPENSYSI
         LA    R5,SYSIN
         OPEN  ((R5)),MF=(E,(R1)),MODE=31
         LTR   R15,R15
         BZ    OPENOK02
         MVI   SYSINOK,C'N'

OPENOK02 EQU   *
         BR    R12

***********************************************************************
*    GET ANY SYSIN PARAMETERS
***********************************************************************

*  R0 -> REMAINDER AFTER DIVIDE; STORAGE LENGTH
*  R1 -> QUOTIENT AFTER DIVIDE; RETURNED STORAGE ADDRESS
*  R2 -> TRT CLOBBERS IT UNDER SOME CIRCUMSTANCES
*  R5 -> END OF OPTION CARD (COL 72)
*  R6 -> LENGTH REMAINING
*  R7 -> IHADCB; TRT REGISTER (OPTNUMCK)
*  R8 -> MOVING POINTER TO OPTION CARD

GETOPTNS EQU   *
         CLI   SYSINOK,C'Y'       SYSIN PROVIDED?
         BNE   OPTNEXIT

         GET   SYSIN
         LA    R5,71(R1)          POINT TO END OF CARD
         LR    R8,R1
OPTNSCAN EQU   *
         LR    R6,R5              CALCULATE LENGTH REMAINING
         SR    R6,R8
         LA    R6,1(R6)
         C     R6,FW2             CHECK IF ANY POSSIBLE DATA
         BL    GETOPTNS
         CLC   OPTNO,0(R8)        CHECK FOR 'NO'
         BE    OPTNNO
         C     R6,FW3             CHECK FOR APPROPRIATE LENGTHS
         BL    GETOPTNS
         BE    OPTL3
         C     R6,FW4
         BNH   OPTL4
         C     R6,FW5
         BNH   OPTL5
         C     R6,FW6
         BNH   OPTL6
         C     R6,FW7
         BNH   OPTL7
         C     R6,FW8
         BNH   OPTL8
         C     R6,FW9
         BNH   OPTL9
         C     R6,FW10
         BNH   OPTL10
         CLC   OPTINDXO,0(R8)     CHECK FOR INDEX(ONLY)
         BNE   OPTL10
         MVI   DEFIO,C'Y'
         MVI   DEFI,C'Y'
         LA    R8,L'OPTINDXO(R8)
         B     OPTNSCAN

OPTL10   EQU   *
         CLC   OPTBLKSI,0(R8)     CHECK FOR BLKSIZE(...)
         BNE   OPTL1D
         LA    R8,L'OPTBLKSI(R8)
         LR    R14,R8
OPTL1BA  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1BB
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1BA
OPTL1BB  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         C     R14,FW5
         BH    OPTNEXT
         BCTR  R14,0
         LR    R7,R8
         EX    R14,OPTNUMCK
         BNZ   OPTNEXT
         EX    R14,OPTPACK
         CVB   R15,DW
         C     R15,FW32670
         BH    OPTNEXT
         SR    R0,R0
         LR    R1,R15
         D     R0,FW121
         LTR   R0,R0
         BNZ   OPTNEXT
         LA    R7,SYSPRINT
         STH   R15,DCBBLKSI
         OI    DCBRECFM,X'10'
         LA    R8,0(R14,R8)
         B     OPTNSCAN

OPTL1D   EQU   *
         CLC   OPTDUPO,0(R8)      CHECK FOR DUPS(ONLY)
         BNE   OPTL1F
         MVI   DEFDO,C'Y'
         MVI   DEFD,C'Y'
         LA    R8,L'OPTDUPO(R8)
         B     OPTNSCAN

OPTL1F   EQU   *
         CLC   OPTFOOT,0(R8)      CHECK FOR FOOTING(...)
         BNE   OPTL1L
         LA    R8,L'OPTFOOT(R8)
         LR    R14,R8
OPTL1FA  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1FB
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1FA
OPTL1FB  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         MVI   DEFF,C'Y'
         MVI   FOOTLINE,C'0'
         MVC   FOOTLINE+1(120),BLANKS
         LA    R15,120
         SR    R15,R14
         SRL   R15,1
         ST    R15,FOOTOFFS
         LA    R15,FOOTLINE+1(R15)
         BCTR  R14,0
         EX    R14,MVCFOOT
         LA    R8,2(R14,R8)
         B     OPTNSCAN

OPTL1L   EQU   *
         CLC   OPTLC,0(R8)        CHECK FOR LINECNT(...)
         BNE   OPTL1X
         LA    R8,L'OPTLC(R8)
         LR    R14,R8
OPTL1LA  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1LB
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1LA
OPTL1LB  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         C     R14,FW7
         BH    OPTNEXT
         BCTR  R14,0
         LR    R7,R8
         EX    R14,OPTNUMCK
         BNZ   OPTNEXT
         EX    R14,OPTPACK
         CVB   R15,DW
         C     R15,FW4
         BH    OPTL1LC
         L     R15,FW4
OPTL1LC  EQU   *
         ST    R15,DEFP
         LA    R8,0(R14,R8)
         B     OPTNSCAN

OPTL1X   EQU   *
         CLC   OPTGTMEM,0(R8)     CHECK FOR >MEMBER(...)
         BNE   OPTL1Z
         LA    R8,L'OPTGTMEM(R8)
         LR    R14,R8
OPTL1XA  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1XB
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1XA
OPTL1XB  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         BCTR  R14,0
         MVC   DEFMEMG,BLANKS
         EX    R14,MVCMEMGT
         LA    R8,0(R14,R8)
         B     OPTNSCAN

OPTL1Z   EQU   *
         CLC   OPTLTMEM,0(R8)     CHECK FOR <MEMBER(...)
         BNE   OPTL9
         LA    R8,L'OPTLTMEM(R8)
         LR    R14,R8
OPTL1YA  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1YB
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1YA
OPTL1YB  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         BCTR  R14,0
         MVC   DEFMEML,BLANKS
         EX    R14,MVCMEMLT
         LA    R8,0(R14,R8)
         B     OPTNSCAN

OPTL9    EQU   *
         CLC   OPTTRANS,0(R8)     CHECK FOR TRANSLATE
         BNE   OPTL8
         MVI   DEFT,C'Y'
         LA    R8,L'OPTTRANS(R8)
         B     OPTNSCAN

OPTL8    EQU   *
         CLC   OPTFIRST,0(R8)     CHECK FOR FIRST(...)
         BNE   OPTL7
         LA    R8,L'OPTFIRST(R8)
         LR    R14,R8
OPTL1FJ  EQU   *
         CLI   0(R14),C')'
         BE    OPTL1FK
         LA    R14,1(R14)
         CR    R14,R5
         BH    OPTNEXT
         B     OPTL1FJ
OPTL1FK  EQU   *
         CR    R8,R14
         BE    OPTNEXT
         SR    R14,R8
         BCTR  R14,0
         LR    R7,R8
         EX    R14,OPTNUMCK
         BNZ   OPTNEXT
         EX    R14,OPTPACK
         CVB   R15,DW
         ST    R15,DEF1
         LA    R8,1(R14,R8)
         B     OPTNSCAN

OPTL7    EQU   *
         CLC   OPTOPTNS,0(R8)     CHECK FOR OPTIONS
         BNE   OPTL6
         MVI   DEFO,C'Y'
         LA    R8,L'OPTOPTNS(R8)
         B     OPTNSCAN

OPTL6    EQU   *
         CLC   OPTVARS,0(R8)      CHECK FOR VARSEQ
         BNE   OPTL5
         MVI   DEFV,C'Y'
         LA    R8,L'OPTVARS(R8)
         B     OPTNSCAN

OPTL5    EQU   *
         CLC   OPTEJECT,0(R8)     CHECK FOR EJECT
         BNE   OPTL5A
         MVI   DEFE,C'Y'
         LA    R8,L'OPTEJECT(R8)
         B     OPTNSCAN

OPTL5A   EQU   *
         CLC   OPTINDEX,0(R8)     CHECK FOR INDEX
         BNE   OPTL5B
         MVI   DEFI,C'Y'
         LA    R8,L'OPTINDEX(R8)
         B     OPTNSCAN

OPTL5B   EQU   *
         CLC   OPTALIAS,0(R8)     CHECK FOR ALIAS
         BNE   OPTL4
         MVI   DEFA,C'Y'
         LA    R8,L'OPTALIAS(R8)
         B     OPTNSCAN

OPTL4    EQU   *
         CLC   OPTDUPS,0(R8)      CHECK FOR DUPS
         BNE   OPTL3
         MVI   DEFD,C'Y'
         LA    R8,L'OPTDUPS(R8)
         B     OPTNSCAN

OPTL3    EQU   *
         CLC   OPTHEX,0(R8)       CHECK FOR HEX
         BNE   OPTNEXT
         MVI   DEFH,C'Y'
         LA    R8,L'OPTHEX(R8)
         B     OPTNSCAN

OPTNEXT  LA    R8,1(R8)
         B     OPTNSCAN

OPTNNO   EQU   *                  CHECK FOR "NO" OPTIONS
         LA    R8,2(R8)
         BCTR  R6,0
         BCTR  R6,0
         C     R6,FW3             CHECK FOR APPROPRIATE LENGTHS
         BNH   OPTN3
         C     R6,FW4
         BNH   OPTN4
         C     R6,FW5
         BNH   OPTN5
         C     R6,FW6
         BNH   OPTN6
         C     R6,FW7
         BNH   OPTN7
         C     R6,FW9
         BNH   OPTN9

OPTN9    EQU   *
         CLC   OPTTRANS,0(R8)     CHECK FOR NEGATIVE TRANSLATE
         BNE   OPTN7
         MVI   DEFT,C'N'
         LA    R8,L'OPTTRANS(R8)
         B     OPTNSCAN

OPTN7    EQU   *
         CLC   OPTOPTNS,0(R8)     CHECK FOR NEGATIVE OPTIONS
         BNE   OPTN6
         MVI   DEFO,C'N'
         LA    R8,L'OPTOPTNS(R8)
         B     OPTNSCAN

OPTN6    EQU   *
         CLC   OPTVARS,0(R8)      CHECK FOR NEGATIVE VARSEQ
         BNE   OPTN5
         MVI   DEFV,C'N'
         LA    R8,L'OPTVARS(R8)
         B     OPTNSCAN

OPTN5    EQU   *
         CLC   OPTEJECT,0(R8)     CHECK FOR NEGATIVE EJECT
         BNE   OPTN5A
         MVI   DEFE,C'N'
         LA    R8,L'OPTEJECT(R8)
         B     OPTNSCAN

OPTN5A   EQU   *
         CLC   OPTINDEX,0(R8)     CHECK FOR NEGATIVE INDEX
         BNE   OPTN5B
         MVI   DEFI,C'N'
         LA    R8,L'OPTINDEX(R8)
         B     OPTNSCAN

OPTN5B   EQU   *
         CLC   OPTALIAS,0(R8)     CHECK FOR NEGATIVE ALIAS
         BNE   OPTN4
         MVI   DEFA,C'N'
         LA    R8,L'OPTALIAS(R8)
         B     OPTNSCAN

OPTN4    EQU   *
         CLC   OPTDUPS,0(R8)      CHECK FOR NEGATIVE DUPS
         BNE   OPTN3
         MVI   DEFD,C'N'
         LA    R8,L'OPTDUPS(R8)
         B     OPTNSCAN

OPTN3    EQU   *
         CLC   OPTHEX,0(R8)       CHECK FOR NEGATIVE HEX
         BNE   OPTNEXT
         MVI   DEFH,C'N'
         LA    R8,L'OPTHEX(R8)
         B     OPTNSCAN

OPTNEXIT EQU   *
         L     R14,DEFP
         BCTR  R14,0
         ST    R14,DEFP
         CLI   DEFF,C'Y'
         BNE   OPTNEX99
         L     R14,DEFP
         S     R14,FW2
         ST    R14,DEFP
OPTNEX99 EQU   *
         BR    R12

***********************************************************************
*    DISPLAY THE OPTIONS CHOSEN AND THOSE DEFAULTED
***********************************************************************

*  R3 -> PAGE SIZE
*  R4 -> DESCRIPTION ARRAY POINTER
*  R5 -> VALUE ARRAY POINTER

LSTOPTNS EQU   *
         CLI   DEFO,C'Y'
         BNE   LSTOPTEX

         MVC   OPTNVALS,BLANKS
         LA    R5,OPTNVALS        ALIAS VALUE
         MVC   0(3,R5),YES
         CLI   DEFA,C'Y'
         BE    LSTOPTAY
         MVC   0(3,R5),NO
LSTOPTAY EQU   *

         LA    R5,8(R5)           DUPS OR DUPS(ONLY) VALUE
         MVC   0(3,R5),YES
         CLI   DEFD,C'Y'
         BE    LSTOPTDY
         MVC   0(3,R5),NO
LSTOPTDY EQU   *
         CLI   DEFDO,C'Y'
         BNE   LSTOPTDX
         MVC   0(4,R5),ONLY
LSTOPTDX EQU   *

         LA    R5,8(R5)           EJECT VALUE
         MVC   0(3,R5),YES
         CLI   DEFE,C'Y'
         BE    LSTOPTEY
         MVC   0(3,R5),NO
LSTOPTEY EQU   *

         LA    R5,8(R5)           FIRST VALUE
         L     R14,DEF1
         CVD   R14,DW
         UNPK  0(8,R5),DW+3(5)
         OI    7(R5),X'F0'

         LA    R5,8(R5)           FOOTING VALUE
         MVC   0(3,R5),NO
         CLI   DEFF,C'Y'
         BNE   LSTOPTFN
         MVC   0(8,R5),OPTFOOT    SET PRELIMINARY VALUE
LSTOPTFN EQU   *

         LA    R5,8(R5)           HEX VALUE
         MVC   0(3,R5),YES
         CLI   DEFH,C'Y'
         BE    LSTOPTHY
         MVC   0(3,R5),NO
LSTOPTHY EQU   *

         LA    R5,8(R5)           INDEX OR INDEX(ONLY) VALUE
         MVC   0(3,R5),YES
         CLI   DEFI,C'Y'
         BE    LSTOPTIY
         MVC   0(3,R5),NO
LSTOPTIY EQU   *
         CLI   DEFIO,C'Y'
         BNE   LSTOPTIX
         MVC   0(4,R5),ONLY
LSTOPTIX EQU   *

         LA    R5,8(R5)           LINECNT VALUE
         L     R14,DEFP
         LA    R14,1(R14)
         CLI   DEFF,C'Y'
         BNE   LSTOPTLX
         LA    R14,2(R14)
LSTOPTLX EQU   *
         CVD   R14,DW
         UNPK  0(8,R5),DW+3(5)
         OI    7(R5),X'F0'

         LA    R5,8(R5)           TRANSLATE VALUE
         MVC   0(3,R5),YES
         CLI   DEFT,C'Y'
         BE    LSTOPTTY
         MVC   0(3,R5),NO
LSTOPTTY EQU   *

         LA    R5,8(R5)           VARSEQ VALUE
         MVC   0(3,R5),YES
         CLI   DEFV,C'Y'
         BE    LSTOPTVY
         MVC   0(3,R5),NO
LSTOPTVY EQU   *

         LA    R5,8(R5)           >MEMBER VALUE
         MVC   0(8,R5),LOVALUES
         CLC   DEFMEMG,EIGHTX00
         BE    LSTOPTGN
         MVC   0(8,R5),DEFMEMG
LSTOPTGN EQU   *

         LA    R5,8(R5)           <MEMBER VALUE
         MVC   0(8,R5),HIVALUES
         CLC   DEFMEML,EIGHTXFF
         BE    LSTOPTLN
         MVC   0(8,R5),DEFMEML
LSTOPTLN EQU   *

         LA    R4,OPTNDESC        POINT TO DESCRIPTIONS ARRAY
         LA    R5,OPTNVALS        POINT TO VALUE ARRAY
         MVC   OPTNHDR,BLANKS     SET UP HEADER AND DISPLAY VALUES
         MVC   OPTNHDR+1(11),HDR+1
         MVC   OPTNHDR+53(15),OPTNTIT
         MVC   PRTLINE,BLANKS

LSTOPT10 EQU   *
         L     R3,DEFP            PAGE SIZE
         PUT   SYSPRINT,OPTNHDR
         PUT   SYSPRINT,UNDER
LSTOPT20 EQU   *
         MVC   PRTLINE+4(9),0(R4)
         MVC   PRTLINE+14(8),0(R5)
         CLC   0(8,R5),OPTFOOT
         BNE   LSTOPT30
         L     R14,FOOTOFFS
         LA    R14,FOOTLINE(R14)
         MVC   PRTLINE+13(63),0(R14)
LSTOPT30 EQU   *
         PUT   SYSPRINT,PRTLINE
         CLC   0(7,R4),OPTLTMEM
         BE    LSTOPT99
         LA    R4,9(R4)
         LA    R5,8(R5)
         MVC   PRTLINE,BLANKS
         BCT   R3,LSTOPT20
         CLI   DEFF,C'Y'
         BNE   LSTOPT10
         PUT   SYSPRINT,FOOTLINE
         B     LSTOPT10

LSTOPT99 EQU   *
         CLI   DEFF,C'Y'
         BNE   LSTOPTEX
         PUT   SYSPRINT,FOOTLINE

LSTOPTEX EQU   *
         BR    R12

***********************************************************************
*    READ THE DIRECTORY(S)
***********************************************************************

*  R2 -> NUMBER OF SLOTS LEFT
*  R3 -> END OF DIR ENTRY
*  R4 -> MEMBER IN DIR ENTRY
*  R5 -> DSN AREA (FROM DSNAREA)
*  R6 -> NEW SLOT POINTER
*  R7 -> IHADCB
*  R8 -> CURRENT MEMBER IN SLOT LIST
*  R9 -> NEXT MEMBER IN SLOT LIST

READDIR  EQU   *
         LA    R2,1
         L     R5,DSNAREA
         LA    R7,DIR
         LA    R8,EIGHTXFF
         LR    R9,R8

RDDIR010 EQU   *
         RDJFCB  DIR,MF=(E,RDJFCB)  GET DSN & VOLSER
         MVC   0(44,R5),JFCBAREA
         MVC   44(6,R5),JFCBAREA+118
         LA    R5,50(R5)

RDDIR020 EQU   *
         GET   (R7)               GET A DIRECTORY BLOCK
         LH    R3,0(R1)
         LA    R4,2(R1)
         LA    R3,0(R1,R3)

RDDIR030 EQU   *
         CR    R4,R3              END OF BLOCK?
         BNL   RDDIR020
         CLC   EIGHTXFF,0(R4)     TERMINATING ENTRY FOR A PDS?
         BNE   RDDIR040
         L     R14,CATCNT         GET READY FOR NEXT PDS (IF ANY)
         LA    R14,1(R14)
         ST    R14,CATCNT
         FEOV  DIR
         B     RDDIR010

RDDIR040 EQU   *
         CLC   DEFMEMG,0(R4)      SHOULD THIS MEMBER BE SELECTED?
         BH    RDDIR110
         CLC   DEFMEML,0(R4)
         BL    RDDIR110
         BCT   R2,RDDIR050
         L     R0,FW12288         LOAD SLOT AREA SIZE FOR GETMAIN
         STORAGE  OBTAIN,LENGTH=(0),LOC=ANY
         LR    R6,R1              SAVE POINTER TO MEMBER SLOT AREA
         LA    R2,614

RDDIR050 EQU   *
         MVC   SLOTOFFM(11,R6),0(R4)  SAVE DIRECTORY DATA INTO LIST
         MVC   SLOTOFFC(1,R6),CATCNT+3
         MVC   SLOTOFFX(L'DEFSLOT,R6),DEFSLOT
         TM    11(R4),X'80'       CHECK IF ALIAS
         BNO   RDDIR055
         MVI   SLOTOFFA(R6),C'Y'

RDDIR055 EQU   *
         SR    R14,R14
         IC    R14,11(R4)
         SLL   R14,27             POINT TO NEXT DIRECTORY ENTRY
         SRL   R14,26
         LA    R4,12(R14,R4)

RDDIR070 EQU   *
         CLC   SLOTOFFM(8,R6),SLOTOFFM(R8)  PUT NEW MEMBER INTO CHAIN
         BNL   RDDIR090
         L     R8,FIRSTMEM
         CLC   SLOTOFFM(8,R6),SLOTOFFM(R8)
         BL    RDDIR080
         L     R8,12(R8)
         L     R9,12(R8)
         CLC   SLOTOFFM(8,R6),SLOTOFFM(R8)  CHECK IF HIGHER THAN 2ND
         BNL   RDDIR090
         LR    R9,R8
         L     R8,FIRSTMEM
         B     RDDIR090

RDDIR080 EQU   *
         ST    R8,SLOTOFFN(R6)    NEW FIRST MEMBER
         LR    R9,R8
         ST    R6,FIRSTMEM
         LR    R8,R6
         LA    R6,SLOTSIZE(R6)
         B     RDDIR030

RDDIR090 EQU   *
         CLC   SLOTOFFM(8,R6),SLOTOFFM(R9)  BETWEEN CURRENT AND NEXT?
         BL    RDDIR100
         LR    R8,R9
         L     R9,12(R8)
         B     RDDIR090

RDDIR100 EQU   *
         ST    R6,SLOTOFFN(R8)    STORE AS NEW BETWEEN
         LR    R8,R6
         ST    R9,SLOTOFFN(R6)
         LA    R6,SLOTSIZE(R6)
         B     RDDIR030

RDDIR110 EQU   *
         SR    R14,R14
         IC    R14,11(R4)
         SLL   R14,27             POINT TO NEXT DIRECTORY ENTRY
         SRL   R14,26                WHEN MEMBER NOT SELECTED
         LA    R4,12(R14,R4)
         B     RDDIR030

RDDIREOF EQU   *
         BR    R12

***********************************************************************
*    DETERMINE WHICH ARE DUPS (FOR DUPS/DUPS(ONLY) USAGE
***********************************************************************

*  R8 -> CURRENT MEMBER IN SLOT LIST
*  R9 -> NEXT MEMBER IN SLOT LIST

DETDUPS  EQU   *
         CLI   DEFD,C'Y'
         BNE   DETDEXIT
         L     R8,FIRSTMEM
         L     R9,12(R8)

DEFD010  EQU   *
         CLC   SLOTOFFM(8,R8),EIGHTXFF
         BE    DETDEXIT
         CLC   SLOTOFFM(8,R8),SLOTOFFM(R9)
         BNE   DEFD040
         MVI   SLOTOFFD(R8),C'Y'
         MVI   SLOTOFFD(R9),C'Y'

DEFD040  EQU   *
         LR    R8,R9
         L     R9,SLOTOFFN(R8)
         B     DEFD010

DETDEXIT EQU   *
         BR    R12

***********************************************************************
*    PRINT MEMBER DATA
***********************************************************************

*  R2 -> LRECL SIZE
*  R3 -> INPUT PDS MEMBER BUFFER
*  R4 -> LINES OUTPUT
*  R5 -> PAGE SIZE
*  R6 -> FIND MEMBER POINTER, END OF DATA
*  R7 -> IHADCB
*  R8 -> CURRENT MEMBER IN SLOT LIST
*  R9 -> DATA POINTER
*  R14-> SHORT TERM RETURN POINTER (SAVED IN PRINTRET)

PRINTMEM EQU   *
         CLI   DEFIO,C'Y'         INDEX ONLY?
         BE    PRINT990
         MVC   PRTLINE,BLANKS
         LA    R7,PDS
         LH    R0,DCBBLKSI
         STORAGE  OBTAIN,LENGTH=(0),LOC=ANY
         LR    R3,R1
         MVI   HDR,C'-'
         CLI   DEFE,C'Y'
         BNE   PRINT010
         MVI   HDR,C'1'

PRINT010 EQU   *
         L     R8,FIRSTMEM
         MVC   LASTMEMP,EIGHTX00

PRINT020 EQU   *
         CLC   SLOTOFFM(8,R8),EIGHTXFF  LAST MEMBER PROCESSED?
         BE    PRINT990
         CLI   DEFDO,C'Y'         CHECK FOR DUP ONLY STATUS
         BNE   PRINT030
         CLI   SLOTOFFD(R8),C'Y'
         BNE   PRINT025
         B     PRINT040

PRINT025 EQU   *
         MVC   SLOTOFFP(3,R8),EIGHTXFF
         B     PRINTE70

PRINT030 EQU   *
         CLI   DEFD,C'Y'          CHECK FOR DUP STATUS
         BE    PRINT040
         CLC   SLOTOFFM(8,R8),LASTMEMP  FOR NODUPS, ELIM DUP MEMBERS
         BE    PRINT025

PRINT040 EQU   *
         LA    R6,SLOTOFFT(R8)
         FIND  PDS,(R6),C
         LA    R5,1               DO INITIAL SET OF LINES LEFT
         SR    R4,R4              SET LINES PRINTED SO FAR TO 0
         MVC   SLOTOFFP(3,R8),PAGECNT+1

PRINT060 EQU   *
         READ  PDSDECB,SF,(R7),(R3),'S',MF=E
         CHECK PDSDECB
         LR    R9,R3
         L     R14,PDSDECB+16     FIGURE DATA LENGTH ACTUALLY READ
         LH    R6,DCBBLKSI
         SH    R6,14(R14)
         TM    DCBRECFM,DCBRECU
         BO    PRINTU
         TM    DCBRECFM,DCBRECV
         BO    PRINTV

PRINTF   EQU   *                  FIXED RECFM
         LA    R6,0(R6,R9)
         MVI   PRTEDLEN,C'N'

PRINTF10 EQU   *
         LH    R2,DCBLRECL
         C     R2,FW100
         BH    PRINTF40
         BCTR  R2,0
         ST    R2,PRTLEN
         EX    R2,MVCDATA
         BAS   R14,PRINTRTN
         LA    R9,1(R2,R9)
         CR    R9,R6
         BL    PRINTF10
         B     PRINT060

PRINTF40 EQU   *
         MVC   PRTLINE+10(100),0(R9)

         CLI   PRTEDLEN,C'Y'
         BE    PRINTF70
         MVI   PRTEDLEN,C'Y'
         CVD   R2,DW
         UNPK  PRTLINE+1(5),DW+5(3)
         OI    PRTLINE+5,X'F0'

PRINTF70 EQU   *
         MVC   PRTLEN,FW99
         BAS   R14,PRINTRTN
         S     R2,FW100
         LA    R9,100(R9)
         B     PRINTF10

PRINTU   EQU   *                  UNFORMATTED RECFM
         LR    R2,R6
         LA    R6,0(R6,R9)
         CVD   R2,DW
         UNPK  PRTLINE+1(5),DW+5(3)
         OI    PRTLINE+5,X'F0'

PRINTU10 EQU   *
         C     R2,FW100
         BH    PRINTU40
         BCTR  R2,0
         ST    R2,PRTLEN
         EX    R2,MVCDATA
         BAS   R14,PRINTRTN
         B     PRINT060

PRINTU40 EQU   *
         MVC   PRTLINE+10(100),0(R9)

         MVC   PRTLEN,FW99
         BAS   R14,PRINTRTN
         S     R2,FW100
         LA    R9,100(R9)
         B     PRINTU10

PRINTV   EQU   *                  VARIABLE RECFM
         LH    R6,0(R9)
         LA    R6,0(R6,R9)
         LA    R9,4(R9)

PRINTV05 EQU   *
         LH    R2,0(R9)
         C     R2,FW12
         BL    PRINTV10
         CLI   DEFV,C'Y'
         BNE   PRINTV10
         LR    R14,R2
         TRT   4(8,R9),NUMTABLE
         BNZ   PRINTV07
         MVC   PRTLINE+113(8),4(R9)
         LR    R2,R14
         LA    R9,8(R9)
         S     R2,FW8
         B     PRINTV10

PRINTV07 EQU   *
         LR    R2,R14

PRINTV10 EQU   *
         LA    R9,4(R9)
         S     R2,FW4
         CVD   R2,DW
         UNPK  PRTLINE+1(5),DW+5(3)
         OI    PRTLINE+5,X'F0'

PRINTV20 EQU   *
         C     R2,FW100
         BH    PRINTV60
         BCTR  R2,0
         ST    R2,PRTLEN
         EX    R2,MVCDATA
         BAS   R14,PRINTRTN
         LA    R9,1(R2,R9)
         CR    R9,R6
         BL    PRINTV05
         B     PRINT060

PRINTV60 EQU   *
         MVC   PRTLINE+10(100),0(R9)

         MVC   PRTLEN,FW99
         BAS   R14,PRINTRTN
         S     R2,FW100
         LA    R9,100(R9)
         B     PRINTV20

PRINTEOF EQU   *                  END OF INDIVIDUAL MEMBER DATA
         LTR   R4,R4
         BNZ   PRINTE50
         MVC   HDRMEM,SLOTOFFM(R8)
         SR    R14,R14
         IC    R14,SLOTOFFC(R8)
         MH    R14,HW50
         L     R15,DSNAREA
         LA    R14,0(R14,R15)
         MVC   HDRDSN,0(R14)
         MVC   HDRVOL,44(R14)
         L     R14,PAGECNT
         MVC   HDRPAGE#,PAGEFMT
         CVD   R14,DW
         ED    HDRPAGE#,DW+3
         LA    R14,1(R14)
         ST    R14,PAGECNT
         MVC   HDRALIAS,BLANKS
         CLI   SLOTOFFA(R8),C'Y'
         BNE   PRINTE30
         MVC   HDRALIAS,OPTALIAS

PRINTE30 EQU   *
         PUT   SYSPRINT,HDR
         PUT   SYSPRINT,UNDER

PRINTE50 EQU   *
         CLI   DEFF,C'Y'
         BNE   PRINTE70
         PUT   SYSPRINT,FOOTLINE

PRINTE70 EQU   *
         MVC   LASTMEMP,SLOTOFFM(R8)
         L     R8,SLOTOFFN(R8)
         B     PRINT020

PRINT990 EQU   *                  EXIT FROM PRINT MEMBER ROUTINE
         BR    R12

***********************************************************************
*   GENERAL PRINT ROUTINE FOR MEMBER DATA - REGISTERS ARE THE
*   SAME AS FOR PRINTMEM PLUS R14 IS USED TO RETURN TO PRINTMEM
***********************************************************************

PRINTRTN EQU   *
         ST    R14,PRINTRET
         BCT   R5,PRINTR60

         L     R5,DEFP            HEADING GENERATION
         CLI   DEFF,C'Y'
         BNE   PRINTR20
         LTR   R4,R4              PUT FOOTING IF PREVIOUS LINES
         BZ    PRINTR20
         PUT   SYSPRINT,FOOTLINE

PRINTR20 EQU   *
         MVC   HDRMEM,SLOTOFFM(R8)
         SR    R14,R14
         IC    R14,SLOTOFFC(R8)
         MH    R14,HW50
         L     R15,DSNAREA
         LA    R14,0(R14,R15)
         MVC   HDRDSN,0(R14)
         MVC   HDRVOL,44(R14)
         L     R14,PAGECNT
         MVC   HDRPAGE#,PAGEFMT
         CVD   R14,DW
         ED    HDRPAGE#,DW+3
         LA    R14,1(R14)
         ST    R14,PAGECNT
         MVC   HDRALIAS,BLANKS
         CLI   SLOTOFFA(R8),C'Y'
         BNE   PRINTR40
         MVC   HDRALIAS,OPTALIAS

PRINTR40 EQU   *
         PUT   SYSPRINT,HDR
         PUT   SYSPRINT,UNDER

PRINTR60 EQU   *
         MVC   SAVEPRT,PRTLINE+10
         CLI   DEFT,C'Y'
         BNE   PRINTR61
         L     R14,PRTLEN
         EX    R14,TRDATA

PRINTR61 EQU   *
         PUT   SYSPRINT,PRTLINE
         MVC   PRTLINE+10(100),SAVEPRT
         LA    R4,1(R4)
         C     R4,DEF1          CHECK IF REACHED LINES TO BE PUT OUT
         BNL   PRINTEOF
         CLI   DEFH,C'Y'
         BNE   PRINTR99
         MVC   PRTLINE+1(9),BLANKS
         MVC   PRTLINE+110(10),BLANKS
         BCT   R5,PRINTR75
         L     R5,DEFP
         CLI   DEFF,C'Y'
         BNE   PRINTR65
         LTR   R4,R4
         BZ    PRINTR65
         PUT   SYSPRINT,FOOTLINE

PRINTR65 EQU   *
         MVC   HDRMEM,SLOTOFFM(R8)
         SR    R14,R14
         IC    R14,SLOTOFFC(R8)
         MH    R14,HW50
         L     R15,DSNAREA
         LA    R14,0(R14,R15)
         MVC   HDRDSN,0(R14)
         MVC   HDRVOL,44(R14)
         L     R14,PAGECNT
         MVC   HDRPAGE#,PAGEFMT
         CVD   R14,DW
         ED    HDRPAGE#,DW+3
         LA    R14,1(R14)
         ST    R14,PAGECNT
         MVC   HDRALIAS,BLANKS
         CLI   SLOTOFFA(R8),C'Y'
         BNE   PRINTR70
         MVC   HDRALIAS,OPTALIAS

PRINTR70 EQU   *
         PUT   SYSPRINT,HDR
         PUT   SYSPRINT,UNDER

PRINTR75 EQU   *
         MVC   SAVEPRT,PRTLINE+10
         L     R14,PRTLEN
         EX    R14,TRHEX1                PRINT 1ST HEX LINE
         PUT   SYSPRINT,PRTLINE
         LA    R4,1(R4)
         C     R4,DEF1
         BNL   PRINTEOF
         MVC   PRTLINE+10(100),SAVEPRT
         BCT   R5,PRINTR90
         L     R5,DEFP
         CLI   DEFF,C'Y'
         BNE   PRINTR80
         LTR   R4,R4
         BZ    PRINTR80
         PUT   SYSPRINT,FOOTLINE

PRINTR80 EQU   *
         MVC   HDRMEM,SLOTOFFM(R8)
         SR    R14,R14
         IC    R14,SLOTOFFC(R8)
         MH    R14,HW50
         L     R15,DSNAREA
         LA    R14,0(R14,R15)
         MVC   HDRDSN,0(R14)
         MVC   HDRVOL,44(R14)
         L     R14,PAGECNT
         MVC   HDRPAGE#,PAGEFMT
         CVD   R14,DW
         ED    HDRPAGE#,DW+3
         LA    R14,1(R14)
         ST    R14,PAGECNT
         MVC   HDRALIAS,BLANKS
         CLI   SLOTOFFA(R8),C'Y'
         BNE   PRINTR85
         MVC   HDRALIAS,OPTALIAS

PRINTR85 EQU   *
         PUT   SYSPRINT,HDR
         PUT   SYSPRINT,UNDER

PRINTR90 EQU   *
         L     R14,PRTLEN
         EX    R14,TRHEX2                PRINT 2ND HEX LINE
         PUT   SYSPRINT,PRTLINE
         LA    R4,1(R4)
         C     R4,DEF1
         BNL   PRINTEOF

PRINTR99 EQU   *
         MVC   PRTLINE,BLANKS
         L     R14,PRINTRET
         BR    R14

***********************************************************************
*    PRINT LIST OF CONCATENATED DATA SET INPUT NAMES
***********************************************************************

*  R5 -> PAGE SIZE
*  R8 -> DSN TO BE PROCESSED
*  R9 -> CONCAT COUNT

PRTDSNS  EQU   *
         CLI   DEFI,C'Y'
         BNE   PRTDSNSX

         MVC   PRTLINE,BLANKS     PRINT DATASET NAME CONCATENATION LIST
         L     R5,DEFP
         L     R8,DSNAREA
         L     R9,CATCNT
         ZAP   DW,P1
         B     PRTCAT30

PRTCAT20 EQU   *
         BCT   R5,PRTCAT40
         L     R5,DEFP
         CLI   DEFF,C'Y'
         BNE   PRTCAT30
         PUT   SYSPRINT,FOOTLINE

PRTCAT30 EQU   *
         PUT   SYSPRINT,DSCATHDR
         PUT   SYSPRINT,UNDER

PRTCAT40 EQU   *
         MVC   PRTLINE+10(44),0(R8)
         MVC   PRTLINE+61(6),44(R8)
         MVC   PRTLINE+1(4),CATFMT
         ED    PRTLINE+1(4),DW+6
         PUT   SYSPRINT,PRTLINE
         LA    R8,50(R8)
         AP    DW+6(2),P1
         BCT   R9,PRTCAT20

         CLI   DEFF,C'Y'
         BNE   PRTCAT90
         PUT   SYSPRINT,FOOTLINE
PRTCAT90 EQU   *

PRTDSNSX EQU   *
         BR    R12

***********************************************************************
*    PRINT INDEX LIST
***********************************************************************

*  R2 -> TOP 1ST COLUMN
*  R3 -> TOP 2ND COLUMN
*  R4 -> TOP 3RD COLUMN
*  R5 -> TOP 4TH COLUMN
*  R8 -> NEXT MEMBER IN LIST
*  R9 -> COLUMN SIZE

PRTINDEX EQU   *
         CLI   DEFI,C'Y'
         BNE   PRTEXIT

         L     R8,FIRSTMEM        GET MEMBERS FOR EACH OF 4 COLUMNS
PRTCOL00 EQU   *
         LA    R2,EIGHTXFF
         LA    R3,EIGHTXFF
         LA    R4,EIGHTXFF
         LA    R5,EIGHTXFF
         CLC   EIGHTXFF,0(R8)
         BE    PRTEXIT
         L     R9,DEFP            FIGURE COLUMN SIZE (LENGTH)
         CLI   DEFDO,C'Y'
         BNE   PRTCOL10
PRTCOL05 EQU   *
         CLC   EIGHTXFF,0(R8)
         BE    PRTEXIT
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL10
         L     R8,SLOTOFFN(R8)
         B     PRTCOL05
PRTCOL10 EQU   *
         LR    R2,R8              SET HEAD OF COLUMN 1
         L     R8,SLOTOFFN(R8)
         BCTR  R9,0
PRTCOL15 EQU   *
         CLC   EIGHTXFF,0(R8)     CHECK FOR REST OF COLUMN 1
         BE    PRTIDX00
         CLI   DEFDO,C'Y'
         BNE   PRTCOL20
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL20
         L     R8,SLOTOFFN(R8)
         B     PRTCOL15
PRTCOL20 EQU   *
         L     R8,SLOTOFFN(R8)
         BCT   R9,PRTCOL15

         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         L     R9,DEFP            FIGURE COLUMN SIZE (LENGTH)
         CLI   DEFDO,C'Y'
         BNE   PRTCOL35
PRTCOL30 EQU   *
         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL35
         L     R8,SLOTOFFN(R8)
         B     PRTCOL30
PRTCOL35 EQU   *
         LR    R3,R8              SET HEAD OF COLUMN 2
         L     R8,SLOTOFFN(R8)
         BCTR  R9,0
PRTCOL40 EQU   *
         CLC   EIGHTXFF,0(R8)     CHECK FOR REST OF COLUMN 2
         BE    PRTIDX00
         CLI   DEFDO,C'Y'
         BNE   PRTCOL45
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL45
         L     R8,SLOTOFFN(R8)
         B     PRTCOL40
PRTCOL45 EQU   *
         L     R8,SLOTOFFN(R8)
         BCT   R9,PRTCOL40

         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         L     R9,DEFP            FIGURE COLUMN SIZE (LENGTH)
         CLI   DEFDO,C'Y'
         BNE   PRTCOL60
PRTCOL55 EQU   *
         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL60
         L     R8,SLOTOFFN(R8)
         B     PRTCOL55
PRTCOL60 EQU   *
         LR    R4,R8              SET HEAD OF COLUMN 3
         L     R8,SLOTOFFN(R8)
         BCTR  R9,0
PRTCOL65 EQU   *
         CLC   EIGHTXFF,0(R8)     CHECK FOR REST OF COLUMN 3
         BE    PRTIDX00
         CLI   DEFDO,C'Y'
         BNE   PRTCOL70
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL70
         L     R8,SLOTOFFN(R8)
         B     PRTCOL65
PRTCOL70 EQU   *
         L     R8,SLOTOFFN(R8)
         BCT   R9,PRTCOL65

         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         L     R9,DEFP            FIGURE COLUMN SIZE (LENGTH)
         CLI   DEFDO,C'Y'
         BNE   PRTCOL85
PRTCOL80 EQU   *
         CLC   EIGHTXFF,0(R8)
         BE    PRTIDX00
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL85
         L     R8,SLOTOFFN(R8)
         B     PRTCOL80
PRTCOL85 EQU   *
         LR    R5,R8              SET HEAD OF COLUMN 4
         L     R8,SLOTOFFN(R8)
         BCTR  R9,0
PRTCOL90 EQU   *
         CLC   EIGHTXFF,0(R8)     CHECK FOR REST OF COLUMN 4
         BE    PRTIDX00
         CLI   DEFDO,C'Y'
         BNE   PRTCOL95
         CLI   SLOTOFFD(R8),C'Y'
         BE    PRTCOL95
         L     R8,SLOTOFFN(R8)
         B     PRTCOL90
PRTCOL95 EQU   *
         L     R8,SLOTOFFN(R8)
         BCT   R9,PRTCOL90

PRTIDX00 EQU   *
         L     R9,DEFP
         PUT   SYSPRINT,INDEXHDR
         PUT   SYSPRINT,UNDER
PRTIDX10 EQU   *
         MVC   PRTLINE,BLANKS
         CLC   EIGHTXFF,SLOTOFFM(R2)  FILL FIRST COLUMN
         BE    PRTEXIT
         CLI   DEFDO,C'Y'
         BNE   PRTIDX20
         CLI   SLOTOFFD(R2),C'Y'
         BE    PRTIDX20
         L     R2,SLOTOFFN(R2)
         B     PRTIDX10
PRTIDX20 EQU   *
         SR    R14,R14
         MVC   PRTLINE+PRTOFFM1(8),SLOTOFFM(R2)
         CLI   DEFA,C'Y'
         BNE   PRTIDX22
         CLI   SLOTOFFA(R2),C'Y'
         BNE   PRTIDX22
         MVI   PRTLINE+PRTOFFA1,C'A'
PRTIDX22 EQU   *
         IC    R14,SLOTOFFC(R2)
         LA    R14,1(R14)
         CVD   R14,DW
         MVC   PRTLINE+PRTOFFC1(4),CATFMT
         ED    PRTLINE+PRTOFFC1(4),DW+6
         CLI   DEFIO,C'Y'
         BE    PRTIDX23
         CLC   SLOTOFFP(3,R2),EIGHTXFF
         BE    PRTIDX23
         MVC   PAGECNT+1(3),SLOTOFFP(R2)
         L     R14,PAGECNT
         MVC   PRTLINE+PRTOFFP1(12),PAGEFMT
         CVD   R14,DW
         ED    PRTLINE+PRTOFFP1(12),DW+3
PRTIDX23 EQU   *
         L     R2,SLOTOFFN(R2)

PRTIDX25 EQU   *
         CLC   EIGHTXFF,SLOTOFFM(R3)  FILL SECOND COLUMN
         BE    PRTIDX60
         CLI   DEFDO,C'Y'
         BNE   PRTIDX30
         CLI   SLOTOFFD(R3),C'Y'
         BE    PRTIDX30
         L     R3,SLOTOFFN(R3)
         B     PRTIDX25
PRTIDX30 EQU   *
         SR    R14,R14
         MVC   PRTLINE+PRTOFFM2(8),SLOTOFFM(R3)
         CLI   DEFA,C'Y'
         BNE   PRTIDX32
         CLI   SLOTOFFA(R3),C'Y'
         BNE   PRTIDX32
         MVI   PRTLINE+PRTOFFA2,C'A'
PRTIDX32 EQU   *
         IC    R14,SLOTOFFC(R3)
         LA    R14,1(R14)
         CVD   R14,DW
         MVC   PRTLINE+PRTOFFC2(4),CATFMT
         ED    PRTLINE+PRTOFFC2(4),DW+6
         CLI   DEFIO,C'Y'
         BE    PRTIDX33
         CLC   SLOTOFFP(3,R3),EIGHTXFF
         BE    PRTIDX33
         MVC   PAGECNT+1(3),SLOTOFFP(R3)
         L     R14,PAGECNT
         MVC   PRTLINE+PRTOFFP2(12),PAGEFMT
         CVD   R14,DW
         ED    PRTLINE+PRTOFFP2(12),DW+3
PRTIDX33 EQU   *
         L     R3,SLOTOFFN(R3)

PRTIDX35 EQU   *
         CLC   EIGHTXFF,SLOTOFFM(R4)  FILL THIRD COLUMN
         BE    PRTIDX60
         CLI   DEFDO,C'Y'
         BNE   PRTIDX40
         CLI   SLOTOFFD(R4),C'Y'
         BE    PRTIDX40
         L     R4,SLOTOFFN(R4)
         B     PRTIDX35
PRTIDX40 EQU   *
         SR    R14,R14
         MVC   PRTLINE+PRTOFFM3(8),SLOTOFFM(R4)
         CLI   DEFA,C'Y'
         BNE   PRTIDX42
         CLI   SLOTOFFA(R4),C'Y'
         BNE   PRTIDX42
         MVI   PRTLINE+PRTOFFA3,C'A'
PRTIDX42 EQU   *
         IC    R14,SLOTOFFC(R4)
         LA    R14,1(R14)
         CVD   R14,DW
         MVC   PRTLINE+PRTOFFC3(4),CATFMT
         ED    PRTLINE+PRTOFFC3(4),DW+6
         CLI   DEFIO,C'Y'
         BE    PRTIDX43
         CLC   SLOTOFFP(3,R4),EIGHTXFF
         BE    PRTIDX43
         MVC   PAGECNT+1(3),SLOTOFFP(R4)
         L     R14,PAGECNT
         MVC   PRTLINE+PRTOFFP3(12),PAGEFMT
         CVD   R14,DW
         ED    PRTLINE+PRTOFFP3(12),DW+3
PRTIDX43 EQU   *
         L     R4,SLOTOFFN(R4)

PRTIDX45 EQU   *
         CLC   EIGHTXFF,SLOTOFFM(R5)  FILL FOURTH COLUMN
         BE    PRTIDX60
         CLI   DEFDO,C'Y'
         BNE   PRTIDX50
         CLI   SLOTOFFD(R5),C'Y'
         BE    PRTIDX50
         L     R5,SLOTOFFN(R5)
         B     PRTIDX45
PRTIDX50 EQU   *
         SR    R14,R14
         MVC   PRTLINE+PRTOFFM4(8),SLOTOFFM(R5)
         CLI   DEFA,C'Y'
         BNE   PRTIDX52
         CLI   SLOTOFFA(R5),C'Y'
         BNE   PRTIDX52
         MVI   PRTLINE+PRTOFFA4,C'A'
PRTIDX52 EQU   *
         IC    R14,SLOTOFFC(R5)
         LA    R14,1(R14)
         CVD   R14,DW
         MVC   PRTLINE+PRTOFFC4(4),CATFMT
         ED    PRTLINE+PRTOFFC4(4),DW+6
         CLI   DEFIO,C'Y'
         BE    PRTIDX53
         CLC   SLOTOFFP(3,R5),EIGHTXFF
         BE    PRTIDX53
         MVC   PAGECNT+1(3),SLOTOFFP(R5)
         L     R14,PAGECNT
         MVC   PRTLINE+PRTOFFP4(12),PAGEFMT
         CVD   R14,DW
         ED    PRTLINE+PRTOFFP4(12),DW+3
PRTIDX53 EQU   *
         L     R5,SLOTOFFN(R5)

PRTIDX60 EQU   *
         PUT   SYSPRINT,PRTLINE
         BCT   R9,PRTIDX10
         CLI   DEFF,C'Y'
         BNE   PRTIDX70
         PUT   SYSPRINT,FOOTLINE
PRTIDX70 EQU   *
         B     PRTCOL00

PRTEXIT  EQU   *
         BR    R12

***********************************************************************
*    CLOSE ALL DCBS AND FREE ANY OBTAINED STORAGE
***********************************************************************

*  R1 -> CLOSE MACRO
*  R5 -> DCB
*  R6 -> DCB
*  R7 -> DCB

CLOSERTN EQU   *
         LA    R1,CLOSE           CLOSE FILES
         LA    R5,DIR
         LA    R6,PDS
         LA    R7,SYSPRINT
         CLOSE ((R5),,(R6),,(R7)),MF=(E,(R1)),MODE=31
         CLI   SYSINOK,C'Y'
         BNE   CLOSEOUT
         LA    R1,CLOSSYSI
         LA    R5,SYSIN
         CLOSE ((R5)),MF=(E,(R1)),MODE=31

CLOSEOUT EQU   *
         BR    R12

***********************************************************************
*    OFFSETS FOR SLOT LIST
***********************************************************************

SLOTSIZE EQU   20                 SLOT SIZE

SLOTOFFM EQU    0                 MEMBER NAME
SLOTOFFT EQU    8                 PDS TTR (INITIALLY)
SLOTOFFP EQU    8                 STARTING PAGE IN LISTING (FOR PRINT)
SLOTOFFC EQU   11                 PDS CONCATENATION COUNT
SLOTOFFN EQU   12                 NEXT SLOT LIST MEMBER
SLOTOFFX EQU   16                 ATTRIBUTES OF MEMBER
SLOTOFFA EQU   16                 ALIAS
SLOTOFFD EQU   17                 DUPLICATE

***********************************************************************
*    OFFSETS FOR INDEX PRINT LINE
***********************************************************************

PRTOFFM1 EQU    1                 COLUMN 1 MEMBER NAME
PRTOFFP1 EQU    9                 COLUMN 1 MEMBER PAGE NUMBER
PRTOFFC1 EQU   21                 COLUMN 1 DATA SET CONCATENATION #
PRTOFFA1 EQU   27                 COLUMN 1 ALIAS INDICATOR

PRTOFFM2 EQU   32                 COLUMN 2 MEMBER NAME
PRTOFFP2 EQU   40                 COLUMN 2 MEMBER PAGE NUMBER
PRTOFFC2 EQU   52                 COLUMN 2 DATA SET CONCATENATION #
PRTOFFA2 EQU   58                 COLUMN 2 ALIAS INDICATOR

PRTOFFM3 EQU   63                 COLUMN 3 MEMBER NAME
PRTOFFP3 EQU   71                 COLUMN 3 MEMBER PAGE NUMBER
PRTOFFC3 EQU   83                 COLUMN 3 DATA SET CONCATENATION #
PRTOFFA3 EQU   89                 COLUMN 3 ALIAS INDICATOR

PRTOFFM4 EQU   94                 COLUMN 4 MEMBER NAME
PRTOFFP4 EQU  102                 COLUMN 4 MEMBER PAGE NUMBER
PRTOFFC4 EQU  114                 COLUMN 4 DATA SET CONCATENATION #
PRTOFFA4 EQU  120                 COLUMN 4 ALIAS INDICATOR

***********************************************************************
*    STATIC DATA
***********************************************************************

OPTALIAS DC    CL5'ALIAS'
OPTBLKSI DC    CL8'BLKSIZE('
OPTDUPO  DS   0CL10
OPTDUPS  DC    CL4'DUPS'
         DC    CL1'('
ONLY     DC    CL4'ONLY'
         DC    CL1')'
OPTEJECT DC    CL5'EJECT'
OPTFIRST DC    CL6'FIRST('
OPTFOOT  DC    CL8'FOOTING('
OPTHEX   DC    CL3'HEX'
OPTINDXO DS   0CL11
OPTINDEX DC    CL5'INDEX'
         DC    CL6'(ONLY)'
OPTLC    DC    CL8'LINECNT('
OPTOPTNS DC    CL7'OPTIONS'
OPTTRANS DC    CL9'TRANSLATE'
OPTVARS  DC    CL6'VARSEQ'
OPTLTMEM DC    CL8'<MEMBER('
OPTGTMEM DC    CL8'>MEMBER('

EIGHTX00 DS    CL08'0000000000000000'
EIGHTXFF DS   0D   *****  LEAVE BEFORE NUMTABLE  *****
NUMTABLE DC    240X'FF',010X'00',006X'FF'
PRTTABLE DC    XL16'40404040404040404040404040404040'  00 - 0F
         DC    XL16'40404040404040404040404040404040'  10 - 1F
         DC    XL16'40404040404040404040404040404040'  20 - 2F
         DC    XL16'40404040404040404040404040404040'  30 - 3F
         DC    XL16'40404040404040404040404B4C4D4E4F'  40 - 4F
         DC    XL16'504040404040404040405A5B5C5D5E5F'  50 - 5F
         DC    XL16'606140404040404040406A6B6C6D6E6F'  60 - 6F
         DC    XL16'404040404040404040407A7B7C7D7E7F'  70 - 7F
         DC    XL16'40818283848586878889404040404040'  80 - 8F
         DC    XL16'40919293949596979899404040404040'  90 - 9F
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'  A0 - AF
         DC    XL16'B0404040404040404040BABB40404040'  B0 - BF
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'  C0 - CF
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'  D0 - DF
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'  E0 - EF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'  F0 - FF
TR1TABLE DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'  00 - 0F
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'  10 - 1F
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'  20 - 2F
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'  30 - 3F
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'  40 - 4F
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'  50 - 5F
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'  60 - 6F
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'  70 - 7F
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'  80 - 8F
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'  90 - 9F
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'  A0 - AF
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'  B0 - BF
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'  C0 - CF
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'  D0 - DF
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'  E0 - EF
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'  F0 - FF
TR2TABLE DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  00 - 0F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  10 - 1F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  20 - 2F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  30 - 3F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  40 - 4F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  50 - 5F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  60 - 6F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  70 - 7F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  80 - 8F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  90 - 9F
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  A0 - AF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  B0 - BF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  C0 - CF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  D0 - DF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  E0 - EF
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'  F0 - FF

DSNASIZE DC    F'11264'
FW10     DC    F'10'
FW100    DC    F'100'
FW12     DC    F'12'
FW121    DC    F'121'
FW12288  DC    F'12288'
FW2      DC    F'2'
FW3      DC    F'3'
FW32670  DC    F'32670'
FW4      DC    F'4'
FW5      DC    F'5'
FW6      DC    F'6'
FW7      DC    F'7'
FW8      DC    F'8'
FW9      DC    F'9'
FW99     DC    F'99'

HW50     DC    H'50'
MVCDATA  MVC   PRTLINE+10(1),0(R9)
MVCFOOT  MVC   0(1,R15),0(R8)
MVCMEMGT MVC   DEFMEMG(1),0(R8)
MVCMEMLT MVC   DEFMEML(1),0(R8)
OPTPACK  PACK  DW,0(1,R7)
OPTNUMCK TRT   0(1,R7),NUMTABLE
TRDATA   TR    PRTLINE+10(1),PRTTABLE
TRHEX1   TR    PRTLINE+10(1),TR1TABLE    PREP 1ST HEX LINE
TRHEX2   TR    PRTLINE+10(1),TR2TABLE    PREP 2ND HEX LINE

CATFMT   DC    XL4'40202021'
DATEFMT  DC    XL6'212061202020'
DEFSLOT  DC    CL4'NNNN'
DSCATHDR DC    CL61'1PDS#     DATA SET NAME'
         DC    CL60'VOLUME'
INDEXHDR DC    CL1'1',3CL31' MEMBER      PAGE#   PDS AL    '
         DC    CL27' MEMBER      PAGE#   PDS AL'
HIVALUES DC    CL8'HEX F''S '
LOVALUES DC    CL8'HEX 0''S '
OPTNTIT  DC    CL15'PDSLIST OPTIONS'
PAGEFMT  DC    XL12'402020206B2020206B202021'
BLANKS   DC    CL121' '
UNDER    DC    CL1'+',120C'_'

OPTNDESC EQU   *
         DC    CL09'ALIAS    '
         DC    CL09'DUPS     '
         DC    CL09'EJECT    '
         DC    CL09'FIRST    '
         DC    CL09'FOOTING  '
         DC    CL09'HEX      '
         DC    CL09'INDEX    '
         DC    CL09'LINECNT  '
         DC    CL09'TRANSLATE'
         DC    CL09'VARSEQ   '
         DC    CL09'>MEMBER  '
         DC    CL09'<MEMBER  '

YES      DC    CL3'YES'
OPTNO    DS   0CL2
NO       DC    CL3'NO '

P1       DC    PL1'1'

***********************************************************************
*    LIST FORM OF I/O MACRO INSTRUCTIONS AND OTHER DYNAMIC DATA
*    TO BE COPIED TO OBTAINED STORAGE
***********************************************************************

DYNAMA   DS    0D

         PRINT NOGEN
XPEN     OPEN  (XIR,(INPUT),XDS,(INPUT),XYSPRINT,(OUTPUT)),MF=L,MODE=31

XPENSYSI OPEN  (XYSIN,(INPUT)),MF=L,MODE=31

XRDJFCB  RDJFCB  (XIR),MF=L

XLOSE    CLOSE (XIR,,XDS,,XYSPRINT),MF=L,MODE=31

XLOSSYSI CLOSE (XYSIN),MF=L,MODE=31

XEADPDS  READ  XDSDECB,SF,XDS,0,'S',MF=L

XIR      DCB   DSORG=PS,MACRF=GL,DDNAME=&DDPDS,                        *
               RECFM=F,LRECL=256,BLKSIZE=256,                          *
               DCBE=XIRE
XIRE     DCBE  RMODE31=BUFF,EODAD=RDDIREOF

XDS      DCB   DSORG=PO,MACRF=R,DDNAME=&DDPDS,                         *
               DCBE=XDSE
XDSE     DCBE  RMODE31=BUFF,EODAD=PRINTEOF

XYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=&DDOPTS,                       *
               RECFM=FB,LRECL=80,DCBE=XYSINE
XYSINE   DCBE  RMODE31=BUFF,EODAD=OPTNEXIT

XYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=&DDPRINT,                      *
               RECFM=FA,LRECL=121,BLKSIZE=&DEFBLKSI
         PRINT GEN

         DS    0D
XIRSTMEM DC    A(EIGHTXFF)
XATCNT   DC    F'0'
XAGECNT  DC    F'1'

*  OPTIONS CHOSEN OR DEFAULTED

XDEFP    DC    F'&DEFPGSZ'        LISTING PAGE SIZE
XDEF1    DC    F'&DEF1ST'         FIRST # OF LINES
XDEFA    DC    CL1'&DEFALIAS'     ALIAS
XDEFD    DC    CL1'&DEFDUPS'      DUPS
XDEFDO   DC    CL1'&DEFDUPSO'     DUPS ONLY
XDEFE    DC    CL1'&DEFEJECT'     EJECT
XDEFF    DC    CL1'&DEFFOOT'      FOOTER USED
XDEFH    DC    CL1'&DEFHEX'       HEX
XDEFI    DC    CL1'&DEFINDX'      INDEX
XDEFIO   DC    CL1'&DEFINDXO'     INDEX ONLY
XDEFO    DC    CL1'&DEFOPTNS'     LIST OPTIONS
XDEFT    DC    CL1'&DEFTRANS'     TRANSLATE
XDEFV    DC    CL1'&DEFVAR'       VARIABLE SEQUENCE
XDEFMEMG DC    CL8'&DEFMEMGT'     FIRST MEMBER SELECTED
XDEFMEML DC    CL8'&DEFMEMLT'     LAST MEMBER SELECTED

XDR      DC    CL32'-DATE=YY/DDD   VOL=VVVVVV   DSN=',CL55' '
         DC    CL34'MEMBER=MMMMMMMM   PAGE ###,###,###'

XYSINOK  DC    CL1'Y'             SYSIN OPENED OK

DYNAML   EQU   *-DYNAMA

***********************************************************************
*    DSECTS
***********************************************************************

WORKAREA DSECT

SAVEAREA DS    9D

DW       DS    D
FINALRC  DS    F                  FINAL RETURN CODE
DSNAREA  DS    F                  DSN AREA POINTER
EXLST    DS    F                  EXIT LIST FOR READ JFCB
EXLSTPTR DS    F                  NEED TO MOVE 3 BYTE ADDR TO DCBEXLSA
FOOTOFFS DS    F                  OFFSET INTO PRTLINE FOR FOOTING
PRINTRET DS    A                  RETURN ADDRESS FOR PRINT SUBROUTINE
PRTLEN   DS    F                  ACTUAL DATA LENGTH FOR HEX TRANSLATE
*                                    AND CHARACTER TRANSLATE
JFCBAREA DS    CL176
LASTMEMP DS    CL008              LAST MEMBER NAME PRINTED
OPTNVALS DS    CL096              OPTION VALUES FOR OPTIONS DISPLAY

FOOTLINE DS    CL121
OPTNHDR  DS    CL121
PRTEDLEN DS    CL1                CHECK FIELD FOR LENGTH PRINT OUT
PRTLINE  DS    CL121
SAVEPRT  DS    CL100

WORKL    EQU   (*-WORKAREA)

WKINGSTG DS    0D  *  BEGIN DYNAMIC AREA REQUIRING INITIALIZATION -----

         PRINT NOGEN
OPEN     OPEN  (DIR,(INPUT),PDS,(INPUT),SYSPRINT,(OUTPUT)),MF=L,MODE=31

OPENSYSI OPEN  (SYSIN,(INPUT)),MF=L,MODE=31

RDJFCB   RDJFCB  (DIR),MF=L

CLOSE    CLOSE (DIR,,PDS,,SYSPRINT),MF=L,MODE=31

CLOSSYSI CLOSE (SYSIN),MF=L,MODE=31

READPDS  READ  PDSDECB,SF,0,0,'S',MF=L

DIR      DCB   DSORG=PS,MACRF=GL,DDNAME=&DDPDS,                        *
               RECFM=F,LRECL=256,BLKSIZE=256,                          *
               DCBE=DIRE
DIRE     DCBE  RMODE31=BUFF,EODAD=RDDIREOF

PDS      DCB   DSORG=PO,MACRF=R,DDNAME=&DDPDS,                         *
               DCBE=PDSE
PDSE     DCBE  RMODE31=BUFF,EODAD=PRINTEOF

SYSIN    DCB   DSORG=PS,MACRF=GL,DDNAME=&DDOPTS,                       *
               RECFM=FB,LRECL=80,DCBE=SYSINE
SYSINE   DCBE  RMODE31=BUFF,EODAD=OPTNEXIT

SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=&DDPRINT,                      *
               RECFM=FA,LRECL=121,BLKSIZE=&DEFBLKSI
         PRINT GEN

         DS    0D
FIRSTMEM DS    A
CATCNT   DS    A
PAGECNT  DS    F

*  OPTIONS CHOSEN OR DEFAULTED

DEFP     DS    F                  PAGE SIZE (LESS 2 IF DEFF = 'Y' &
*                                    ALWAYS LESS 1 FOR THE HEADER)
DEF1     DS    F                  FIRST # OF LINES
DEFA     DS    CL1                ALIAS
DEFD     DS    CL1                DUPS
DEFDO    DS    CL1                DUPS ONLY
DEFE     DS    CL1                EJECT
DEFF     DS    CL1                FOOTER USED
DEFH     DS    CL1                HEX
DEFI     DS    CL1                INDEX
DEFIO    DS    CL1                INDEX ONLY
DEFO     DS    CL1                LIST OPTIONS
DEFT     DS    CL1                TRANSLATE
DEFV     DS    CL1                VARIABLE SEQUENCE
DEFMEMG  DS    CL8                FIRST MEMBER SELECTED
DEFMEML  DS    CL8                LAST MEMBER SELECTED

HDR      DS    0CL121
         DS    CL06
HDRDATE  DS    CL06
         DS    CL07
HDRVOL   DS    CL06
         DS    CL07
HDRDSN   DS    CL44
         DS    CL03
HDRALIAS DS    CL05
         DS    CL10
HDRMEM   DS    CL08
         DS    CL07
HDRPAGE# DS    CL12

SYSINOK  DS    CL1

*  END OF DYNAMIC AREA ------------------------------------------------

***********************************************************************

         PRINT NOGEN
         DCBD  DSORG=(PS,PO),DEVD=DA

         END   PDSLIST
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(5,2),,CONTIG)
//SYSPRINT     DD       SYSOUT=*,
//             DCB=(RECFM=FM,LRECL=121,BLKSIZE=121)
//SYSLIN       DD       DSN=&&LOADSET,DISP=(MOD,PASS),
//             UNIT=VIO,SPACE=(2960,(111,12)),DCB=BLKSIZE=2960
//***
//***
//L          EXEC     PGM=IEWL,
//             PARM='RENT,AMODE(31),RMODE(ANY),XREF,LIST,LET,DCBS',
//             REGION=4M,COND=(5,LE)
//SYSUT1       DD       UNIT=VIO,
//             SPACE=(CYL,(5,2),,CONTIG)
//SYSPRINT     DD       SYSOUT=*
//SYSLMOD      DD       DSN=-YOUR-STEPLIB-,
//             DISP=OLD
//SYSLIN       DD       DSN=&&LOADSET,DISP=(OLD,DELETE,DELETE)
//             DD       *
  SETSSI   99101400
  ENTRY    PDSLIST
  NAME     PDSLIST(R)
//***
