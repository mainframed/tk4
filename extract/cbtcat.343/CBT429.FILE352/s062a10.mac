*          DATA SET S062A10    AT LEVEL 001 AS OF 03/09/77
*          DATA SET S062A10    AT LEVEL 002 AS OF 10/22/76
R062A10  CSECT
         SPACE 1
***********************************************************************
*                                                                     *
* THIS MODULE WILL FUNCTION ONLY IN OS/VS2 RELEASE 2 AND LATER        *
* RELEASES (IE. MVS).                                                 *
*                                                                     *
* THIS MODULE WILL ALLOW THE USER TO PERFORM ANY ONE OF THE FOLLOWING *
* OPERATIONS:                                                         *
*                                                                     *
*        1.    DYNAMICALLY ALLOCATE AN EXISTING DISK DATA SET.  ANY   *
*                          DISK DATA SET, INCLUDING AN ISAM DATA SET, *
*                          MAY BE ALLOCATED.                          *
*        2.    DYNAMICALLY ALLOCATE A NEW DISK DATA SET.  ANY VALID   *
*                          DISK DATA SET ORGANIZATION EXCEPT ISAM     *
*                          MAY BE SPECIFIED.                          *
*        3.    DYNAMICALLY ALLOCATE A 'DD DUMMY' DATA SET.            *
*        4.    DYNAMICALLY DE-ALLOCATE A PREVIOUS ALLOCATION.         *
*                                                                     *
* IT IS ASSUMED THAT THE USER OF THIS MODULE HAS A GOOD WORKING       *
* KNOWLEDGE OF OS/VS2 JCL AS DESCRIBED IN THE OS/VS2 JCL MANUAL       *
* (GC28-0692).  THE USER OF THIS MODULE WILL BUILD A LIST OF          *
* PARAMETERS IN MUCH THE SAME WAY AS HE WOULD FILL OUT A 'DD CARD'.   *
* THE INFORMATION IN THE PARAMETER LIST WILL BE USED TO DO THE        *
* REQUESTED FUNCTION.                                                 *
*                                                                     *
* THE LINKAGE TO THIS MODULE CAN BE MADE WITH A STANDARD OS 'CALL',   *
* 'LINK' OR 'ATTACH'.  THE ADDRESS LIST SPECIFIED IN THE 'CALL' (OR   *
* 'LINK' OR 'ATTACH') MUST ALWAYS INCLUDE THE ADDRESS OF THE          *
* PARAMETER LIST (DESCRIBED BELOW) AS ITS FIRST OR ONLY ENTRY.  THE   *
* SECOND (OPTIONAL) ADDRESS IN THE LIST MUST BE THE ADDRESS OF 2      *
* CONSECUTIVE FULLWORDS IN THE CALLER'S PROGRAM.  R13 MUST CONTAIN    *
* THE ADDRESS OF A STANDARD OS SAVE AREA.  EXAMPLES OF CALL'S ARE     *
* SHOWN BELOW.                                                        *
*                                                                     *
*        CALL R062A10,(PARMLIST),VL                                   *
*        CALL R062A10,(PARMLIST,RCODES),VL                            *
*                                                                     *
* UPON RETURN FROM THIS MODULE, R0 AND R15 WILL CONTAIN CODES         *
* INDICATING HOW THE REQUEST COMPLETED.  IF THE SECOND ITEM IS NAMED  *
* IN THE ADDRESS LIST, THEN THE VALUES PLACED IN R0 AND R15 WILL      *
* ALSO BE STORED IN ITS FIRST AND SECOND WORDS, RESPECTIVELY.  THIS   *
* WILL ALLOW PROGRAMS WRITTEN IN COBOL OR OTHER HIGH LEVEL LANGUAGES  *
* TO USE THIS MODULE.  DETAILED INFORMATION ABOUT THE RETURN CODES IS *
* GIVEN FOLLOWING THE INFORMATION ABOUT THE PARAMETER LIST.           *
*                                                                     *
* THIS MODULE IS RE-ENTERABLE.                                        *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
* THE PARAMETER LIST ..........                                       *
*                                                                     *
* UNLESS OTHERWISE NOTED, THE FOLLOWING IS TRUE FOR ALL INFORMATION   *
* YOU PLACE IN THE PARAMETER LIST.                                    *
*                                                                     *
*        1.    CODING A PARAMETER IN THE PARAMETER LIST HAS THE SAME  *
*              EFFECT AS CODING THE SAME PARAMETER IN A JCL DDCARD.   *
*                                                                     *
*        2.    IF A PARAMETER IS TO BE OMITTED, ITS CORRESPONDING     *
*              FIELD SHOULD BE LEFT BLANK.                            *
*                                                                     *
*        3.    OMITTING A PARAMETER FROM THE LIST HAS THE SAME EFFECT *
*              AS OMITTING THE SAME PARAMETER FROM A JCL DDCARD.  IN  *
*              PARTICULAR, IF OMITTING A PARAMETER FROM A JCL DDCARD  *
*              WOULD CAUSE A DEFAULT TO BE TAKEN, THEN OMITTING THE   *
*              PARAMETER FROM THE LIST WILL CAUSE THE SAME DEFAULT TO *
*              BE TAKEN.                                              *
*                                                                     *
*        4.    ALL PARAMETERS SHOULD BE LEFT JUSTIFIED AND PADDED     *
*              WITH BLANKS.  NUMERIC VALUES MAY CONTAIN LEADING       *
*              ZEROS.                                                 *
*                                                                     *
*        5.    FIELDS WITHIN THE PARAMETER LIST WILL BE UNCHANGED     *
*              BY THIS MODULE.                                        *
*                                                                     *
*   FIELD NAME   LENGTH       DESCRIPTION AND COMMENTS                *
*                (BYTES)                                              *
*    DDNAME         8      REQUIRED FOR ALL FUNCTIONS.  THIS MUST BE  *
*                          THE SAME AS THE DDNAME PARAMETER OF THE    *
*                          ACB OR DCB THAT WILL BE USED TO PROCESS    *
*                          THE DATA SET.                              *
*                                                                     *
*    DSNAME        44      THIS FIELD MUST BE FILLED IN WITH THE      *
*                          CORRECT DSNAME WHEN ALLOCATING AN EXISTING *
*                          DATA SET OR WHEN CREATING A NEW PERMANENT  *
*                          DATA SET.  WHEN ALLOCATING A NEW TEMPORARY *
*                          DATA SET IT MAY BE LEFT BLANK OR FILLED IN *
*                          WITH AN '&&DSNAME' IN A MANNER IDENTICAL   *
*                          TO REQUESTING A TEMPORARY DATA SET IN JCL. *
*                          IF 'NULLFILE' IS USED AS A DSNAME, A DUMMY *
*                          DATA SET IS ALLOCATED.  IF THIS FIELD IS   *
*                          FILLED IN WITH ALL X'00', A PREVIOUSLY     *
*                          ALLOCATED DATA SET WITH THE SAME DDNAME    *
*                          WILL BE DE-ALLOCATED.  THE DATA SET NAME   *
*                          SPECIFIED IN THIS FIELD MUST NOT BE A      *
*                          'BACKWARD REFERENCE' (IE. MUST NOT BE      *
*                          *.DDNAME, *.STEPNAME.DDNAME OR             *
*                          *.STEPNAME.PROCSTEPNAME.DDNAME).  THIS     *
*                          FIELD SHOULD NOT CONTAIN A MEMBER NAME OR  *
*                          A GENERATION NUMBER.  USE THE DSMEMBER     *
*                          FIELD TO SPECIFY THAT INFORMATION.         *
*                                                                     *
*                          NOTE: WHEN ALLOCATION IS FOR A DUMMY FILE  *
*                                (IE. WHEN DSNAME IS 'NULLFILE') ONLY *
*                                THE 'DDNAME', 'DSNAME', 'DSFREE' AND *
*                                DCB INFORMATION IS USED BY THIS      *
*                                MODULE.  ANY OTHER INFORMATION IS    *
*                                IGNORED.                             *
*                                WHEN DE-ALLOCATION IS REQUESTED (IE. *
*                                WHEN DSNAME IS ALL X'00') ONLY THE   *
*                                'DDNAME' AND 'DSNAME' INFORMATION IS *
*                                USED BY THIS MODULE.  ANY OTHER      *
*                                INFORMATION IS IGNORED.              *
*                                                                     *
*    DSMEMBER       8      USE THIS FIELD TO SPECIFY A MEMBER OF A    *
*                          PDS OR TO SPECIFY THE GENERATION NUMBER    *
*                          OF A GENERATION DATA SET GROUP.  DO NOT    *
*                          USE PARENTHESES.  (EG. SPECIFY +1 NOT      *
*                          (+1) ).                                    *
*                                                                     *
*    PASSWORD       8      USE THIS FIELD TO SPECIFY THE PASSWORD FOR *
*                          AN EXISTING PASSWORD PROTECTED DATA SET.   *
*                          THERE IS NO JCL EQUIVALENT FOR THIS        *
*                          PARAMETER.                                 *
*                                                                     *
*    DSSTATUS       8      THIS FIELD IS EQUIVALENT TO THE STATUS     *
*                          SUBPARAMETER OF THE JCL 'DISP' PARAMETER.  *
*                          VALID VALUES ARE 'NEW', 'OLD', 'SHR' AND   *
*                          'MOD'.                                     *
*                                                                     *
*    DSNDISP        8      THIS FIELD IS EQUIVALENT TO THE NORMAL     *
*                          TERMINATION DISPOSITION SUBPARAMETER OF    *
*                          THE JCL 'DISP' PARAMETER EXCEPT THAT       *
*                          'PASS' MAY NOT BE SPECIFIED FOR THIS       *
*                          FIELD.  VALID VALUES ARE 'KEEP', 'CATLG',  *
*                          'UNCATLG' AND 'DELETE'.                    *
*                                                                     *
*    DSADISP        8      THIS FIELD IS EQUIVALENT TO THE ABNORMAL   *
*                          TERMINATION DISPOSITION SUBPARAMETER OF    *
*                          THE JCL 'DISP' PARMETER.  VALID VALUES ARE *
*                          'KEEP', 'CATLG', 'UNCATLG' AND 'DELETE'.   *
*                                                                     *
*    DSUNIT         8      USE THIS FIELD TO SPECIFY THE UNIT         *
*                          ADDRESS, GENERIC NAME OR ESOTERIC NAME.    *
*                          (EG. '450', '3330-1', 'SYSDA').            *
*                                                                     *
*       **          8      THIS FIELD IS RESERVED FOR FUTURE USE.  IT *
*                          MUST BE LEFT BLANK.                        *
*                                                                     *
*    DSVOLSER       6      USE THIS FIELD TO SPECIFY THE VOLUME       *
*                          SERIAL NUMBER.  (EG. 'FCITS6').  THIS      *
*                          FIELD MAY ALSO BE SET TO ALL X'00'.  IN    *
*                          THAT CASE THIS MODULE WILL SET THIS FIELD  *
*                          TO THE DATA SET VOLUME SERIAL NUMBER.      *
*                                                                     *
*       **         40      THIS FIELD IS RESERVED FOR FUTURE USE.  IT *
*                          MUST BE LEFT BLANK.                        *
*                                                                     *
*    DSVOLREF      44      SPECIFYING A DSNAME IN THIS FIELD IS       *
*                          EQUIVALENT TO CODING 'VOL=REF=DSNAME' IN   *
*                          A JCL DDCARD.  NOTE THAT THE VALUE GIVEN   *
*                          HERE MUST ALWAYS BE A CATALOGUED DATA SET. *
*                          (IE. IT CANNOT BE A 'PASSED' DATA SET NOR  *
*                          CAN IT BE A BACKWARD REFERENCE SUCH AS     *
*                          *.DDNAME, *.STEPNAME.DDNAME OR             *
*                          *.STEPNAME.PROCSTEPNAME.DDNAME).           *
*                                                                     *
*                          NOTE THAT THE DSVOLSER AND DSVOLREF FIELDS *
*                          ARE MUTUALLY EXCLUSIVE EXCEPT WHEN         *
*                          DSVOLSER HAS BEEN CODED AS ALL X'00'.      *
*                                                                     *
*    DSFREE         8      THIS FIELD IS EQUIVALENT TO THE 'FREE'     *
*                          PARAMETER OF A JCL DDCARD.  VALID VALUES   *
*                          ARE 'END' AND 'CLOSE'.                     *
*                                                                     *
*    DSLABEL        4      USE THIS TO SPECIFY A VALID DISK LABEL     *
*                          TYPE.  VALID VALUES ARE 'SL' AND 'SUL'.    *
*                                                                     *
*    DSINOUT        4      THIS FIELD SHOULD BE CODED WHERE           *
*                          'LABEL=(,,,IN)' OR 'LABEL=(,,,OUT)' WOULD  *
*                          BE CODED IN A JCL DDCARD.  VALID VALUES    *
*                          ARE 'IN' AND 'OUT'.                        *
*                                                                     *
*       **         16      THIS FIELD IS RESERVED FOR FUTURE USE.  IT *
*                          MUST BE LEFT BLANK.                        *
*                                                                     *
*    .... THE NEXT GROUP OF FIELDS ARE APPLICABLE TO 'NEW' DATA SETS  *
*         ONLY.  INFORMATION IN THESE FIELDS WILL BE IGNORED IF THEY  *
*         HAVE BEEN CODED FOR OTHER THAN 'NEW' DATA SETS.             *
*                                                                     *
*    DSPWDLBL       8      SPECIFYING THIS FIELD IS EQUIVALENT TO     *
*                          CODING EITHER 'LABEL=(,,PASSWORD)' OR      *
*                          'LABEL=(,,NOPWREAD)' IN YOUR JCL.  VALID   *
*                          VALUES ARE 'PASSWORD' AND 'NOPWREAD'.      *
*                                                                     *
*    DSDATE        12      SPECIFYING THIS FIELD IS EQUIVALENT TO     *
*                          CODING EITHER 'LABEL=EXPDT=YYDDD' OR       *
*                          'LABEL=RETPD=NNNN' IN YOUR JCL.  VALID     *
*                          VALUES ARE 'EXPDT=YYDDD' AND 'RETPD=NNNN'. *
*                                                                     *
*    DSALLOC        5      THIS FIELD SPECIFIES HOW SPACE IS TO BE    *
*                          ALLOCATED.  VALID VALUES ARE 'TRK', 'CYL'  *
*                          AND 'NNNNN' WHERE THE VALUE OF 'NNNNN' IS  *
*                          THE AVERAGE BLOCK LENGTH.                  *
*                                                                     *
*    DSPRI          6      THIS FIELD SPECIFIES THE PRIMARY           *
*                          ALLOCATION QUANTITY.                       *
*                                                                     *
*    DSSEC          6      THIS FIELD SPECIFIES THE SECONDARY         *
*                          ALLOCATION QUANTITY.                       *
*                                                                     *
*    DSDIR          5      THIS FIELD SPECIFIES THE NUMBER OF         *
*                          DIRECTORY BLOCKS FOR A PDS.                *
*                                                                     *
*    DSRLSE         8      SPECIFYING THIS PARAMETER HAS THE SAME     *
*                          EFFECT AS SPECIFYING THE 'RLSE'            *
*                          SUBPARAMETER OF THE JCL 'SPACE' PARAMETER. *
*                          THE VALID VALUE IS 'RLSE'.                 *
*                                                                     *
*    DSCONTIG       8      SPECIFYING THIS PARAMETER HAS THE SAME     *
*                          EFFECT AS SPECIFYING THE 'CONTIG'          *
*                          SUBPARAMETER OF THE JCL 'SPACE' PARAMETER. *
*                          THE VALID VALUE IS 'CONTIG'.               *
*                                                                     *
*    DSROUND        8      SPECIFYING THIS PARAMETER HAS THE SAME     *
*                          EFFECT AS SPECIFYING THE 'ROUND'           *
*                          SUBPARAMETER OF THE JCL 'SPACE' PARAMETER. *
*                          THE VALID VALUE IS 'ROUND'.                *
*                                                                     *
*       **         24      THIS FIELD IS RESERVED FOR FUTURE USE.  IT *
*                          MUST BE LEFT BLANK.                        *
*                                                                     *
*    .... EXCEPT AS NOTED, THE FOLLOWING INFORMATION IS THE SAME AS   *
*         THAT CONTAINED IN THE JCL 'DCB' PARAMETER.                  *
*                                                                     *
*    DSBLKSI        5      BLOCK SIZE VALUE.  MUST BE NUMERIC.        *
*                                                                     *
*    DSORG          8      FOR NEW DATA SETS, THIS FIELD SPECIFIES    *
*                          THE DESIRED DATA ORGANIZATION.  VALID      *
*                          VALUES ARE 'DA', 'DAU', 'PO', 'POU', 'PS', *
*                          'PSU' AND 'VSAM'.  EXCEPT FOR 'VSAM', THIS *
*                          FIELD IS EQUIVALENT TO THE 'DSORG' JCL     *
*                          SUBPARAMETER.  SPECIFYING 'VSAM' IS        *
*                          EQUIVALENT TO CODING  AMP='AMORG'  IN THE  *
*                          DDCARD.  NOTE THAT ISAM DATA SETS MAY NOT  *
*                          BE ALLOCATED NEW.                          *
*                                                                     *
*                          FOR EXISTING DATA SETS, THIS FIELD MAY BE  *
*                          SPECIFIED AS ALL X'00'.  IN THAT CASE THE  *
*                          ORGANIZATION OF THE DATA SET WILL BE       *
*                          PLACED IN THIS FIELD BY THIS MODULE.  THE  *
*                          VALUE THAT WILL BE RETURNED WILL BE ONE OF *
*                          THE FOLLOWING: 'DA', 'DAU', 'IS', 'ISU',   *
*                          'PO', 'POU', 'PS', 'PSU' OR 'VSAM'.  IF    *
*                          THIS MODULE CANNOT DETERMINE THE DATA SET  *
*                          ORGANIZATION, IT WILL NOT CHANGE THE       *
*                          FIELD.                                     *
*                                                                     *
*    DSKEYLEN       3      THE DATA SET KEYLENGTH.  THE VALUE MUST BE *
*                          NUMERIC.                                   *
*                                                                     *
*    DSLRECL        5      THE DATA SET LOGICAL RECORD LENGTH.  VALID *
*                          VALUES ARE THE NUMERIC VALUE FOR LRECL     *
*                          AND 'X'                                    *
*                                                                     *
*    DSRECFM1       1      THE RECORD FORMAT.  VALID VALUES ARE       *
*                          'F', 'V' AND 'U'.                          *
*                                                                     *
*    DSRECFM2       1      SPECIFIES DATA SET BLOCKING.  THE VALID    *
*                          VALUE IS 'B'.                              *
*                                                                     *
*    DSRECFM3       1      SPECIFIES STANDARD BLOCKS (IF DSRECFM1=F)  *
*                          OR SPANNED RECORDS (IF DSRECFM1=V).  THE   *
*                          VALID VALUE IS 'S'.                        *
*                                                                     *
*    DSRECFM4       1      SPECIFIES TRACK OVERFLOW.  THE VALID VALUE *
*                          IS 'T'.                                    *
*                                                                     *
*    DSRECFM5       1      SPECIFIES THE CARRIAGE CONTROL CHARACTER.  *
*                          VALID VALUES ARE 'A' AND 'M'.              *
*                                                                     *
*    DSRECFM6       1      RESERVED FOR FUTURE USE.  MUST BE BLANK.   *
*                                                                     *
*    DSRECFM7       1      RESERVED FOR FUTURE USE.  MUST BE BLANK.   *
*                                                                     *
*    DSRECFM8       1      RESERVED FOR FUTURE USE.  MUST BE BLANK.   *
*                                                                     *
*    DSDCBDS       44      SPECIFYING A DATA SET NAME HERE IS         *
*                          EQUIVALENT TO CODING 'DCB=DSNAME' IN THE   *
*                          JCL.  NOTE THAT A BACKWARD REFERENCE       *
*                          CANNOT BE CODED.                           *
*                                                                     *
*       **         24      THIS FIELD IS RESERVED FOR FUTURE USE.  IT *
*                          MUST BE LEFT BLANK.                        *
*                                                                     *
***********************************************************************
***********************************************************************
*                                                                     *
* RETURN CODES ................                                       *
*                                                                     *
* THIS MODULE USES THE DYNAMIC ALLOCATION ROUTINE DESCRIBED IN THE    *
* OS/VS2 SYSTEMS PROGRAMMING LIBRARY: JOB MANAGEMENT MANUAL           *
* (GC28-0627).  THIS MODULE DOES SOME PRELIMINARY EDITING PRIOR TO    *
* REQUESTING DYNAMIC ALLOCATION.  IF IT FINDS SOME ERROR WHICH        *
* PREVENTS COMPLETION OF THE REQUEST, IT WILL PLACE 15 (DECIMAL) IN   *
* R15.  R0 WILL CONTAIN AN OFFSET FROM THE BEGINNING OF THE PARAMETER *
* LIST TO SHOW WHICH FIELD IS IN ERROR.  FOR EXAMPLE, IF THE          *
* 'DSNDISP' FIELD CONTAINS 'PASS' (WHICH IS INVALID), R0 WILL CONTAIN *
* 76 (DECIMAL) AND R15 WILL CONTAIN 15 (DECIMAL).                     *
*                                                                     *
* UNLESS THIS MODULE DETECTS AN ERROR, IT WILL MAKE A REQUEST TO THE  *
* DYNAMIC ALLOCATION ROUTINE.  THE DYNAMIC ALLOCATION ROUTINE ISSUES  *
* A RETURN CODE IN R15 AND ALSO GIVES AN 'ERROR REASON CODE' AND AN   *
* 'INFORMATIONAL REASON CODE'.  EACH OF THE TWO 'REASON CODES' IS 2   *
* BYTES LONG.  THIS MODULE WILL PLACE THE 'ERROR REASON CODE' IN THE  *
* FIRST 2 BYTES OF R0 AND THE 'INFORMATIONAL REASON CODE' IN THE      *
* SECOND 2 BYTES OF R0.  THIS MODULE WILL LEAVE THE DYNAMIC           *
* ALLOCATION RETURN CODE IN R15.  THE MEANING OF THESE CODES CAN BE   *
* FOUND IN THE MANUAL (GC28-0627) MENTIONED ABOVE.                    *
*                                                                     *
* IT WILL ALWAYS BE POSSIBLE TO KNOW THE MEANING OF AN R0 RETURN CODE *
* (IE. DOES IT CONTAIN AN OFFSET OR DOES IT CONTAIN 'REASON CODES'),  *
* SINCE THE DYNAMIC ALLOCATION ROUTINE NEVER ISSUES A 15 (DECIMAL)    *
* RETURN CODE.  THEREFORE, WHEN R15 CONTAINS 15 (DECIMAL), R0 MUST    *
* CONTAIN AN OFFSET.                                                  *
*                                                                     *
* IF THE PROGRAM THAT INVOKES THIS MODULE PASSES 2 ADDRESSES IN ITS   *
* ADDRESS LIST, THIS MODULE WILL PLACE THE CONTENTS OF R0 AND R15 IN  *
* THE FIRST AND SECOND FULLWORDS, RESPECTIVELY, OF THE SECOND ITEM IN *
* THE ADDRESS LIST.                                                   *
*                                                                     *
***********************************************************************
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7        HAS OFFSET OF CURRENT ENTRY OF PARMLIST
R8       EQU   8        ADDRESS OF CURRENT TEXT POINTER
R9       EQU   9        ADDRESS OF CURRENT TEXT UNIT
R10      EQU   10       ADDRESS OF REQUEST BLOCK
R11      EQU   11       ADDRESS OF CALLER'S PARAMETER LIST
R12      EQU   12       BASE REGISTER
R13      EQU   13       WORKAREA ADDRESS (SAVEAREA IS FIRST 72 BYTES)
R14      EQU   14
R15      EQU   15
         EJECT
         USING *,R12
         SAVE  (14,12),,*
         LR    R12,R15
         L     R11,0(0,R1)         PICK UP PARAMETER LIST ADDRESS.
         USING PARMLIST,R11
         L     R0,WORKLEN
GET1     GETMAIN RU,LV=(0),RELATED='FREE1' WORK AREA STORAGE
         LR    R2,R13
         LR    R13,1
         USING WORKAREA,R13
         LR    R14,R1              SET UP FOR CLEAR OF WORK AREA.
         L     R15,WORKLEN
         SR    R0,R0
         SR    R1,R1
         MVCL  R14,R0              CLEAR WORK AREA TO ALL X'00'
         ST    R2,SAVEAREA+4
         ST    R13,8(0,R2)
         LA    R10,DYNWORK
         USING S99RB,R10
         ST    R10,REQBKPTR        POINT TO REQUEST BLOCK.
         OI    REQBKPTR,X'80'
         LA    R1,S99RBEND-S99RB   LENGTH OF REQUEST BLOCK.
         STC   R1,S99RBLN
         CLC   DSNAME,NULLS        CHECK FOR UNALLOCATION REQUEST.
         BNE   *+12
         MVI   S99VERB,S99VRBUN    REQUEST UNALLOCATION.
         B     *+12
         MVI   S99VERB,S99VRBAL    REQUEST ALLOCATION.
         OI    S99FLG11,S99NOCNV+S99NOMNT
         LA    R8,S99RBEND         PICK UP ADDRESS FOR TEXT POINTERS
         ST    R8,S99TXTPP
         L     R9,TXPTRSPC         PICK UP SPACE RESERVED FOR TEXT PTRS
         ALR   R9,R8               POINT TO FIRST TEXT UNIT.
         USING S99TUNIT,R9
         SPACE 1
* DDNAME **************************
         SPACE 1
         LA    R7,DDNAME-PARMLIST  INIT 'OFFSET' REGISTER.
         CLI   S99VERB,S99VRBUN    HAS UNALLOCATION BEEN REQUESTED?
         BNE   *+12
         LA    R1,DUNDDNAM
         B     *+8
         LA    R1,DALDDNAM
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         LA    R14,DDNAME          FIND OUT ACTUAL LENGTH OF DDNAME.
         LA    R15,L'DDNAME
         BAL   R1,PP000
         LTR   R15,R15
         BNP   QQ000
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DDNAME.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         CLI   S99VERB,S99VRBUN    HAS UNALLOCATION BEEN REQUESTED?
         BE    MM000               GO DO REQUEST.
         SPACE 1
* DSNAME **************************
         SPACE 1
         LA    R7,DSNAME-PARMLIST  OFFSET
         CLC   DSNAME,=CL44'NULLFILE ' CHECK FOR DUMMY ALLOCATION.
         BNE   AA100
         LA    R1,DALDUMMY
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
         B     AA190
AA100    EQU   *
         LA    R14,DSNAME
         LA    R15,L'DSNAME
         BAL   R1,PP000            GET DSNAME LENGTH.
         LTR   R15,R15
         BNP   AA110
         LA    R1,DALDSNAM
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DSNAME.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* DSMEMBER ************************
         SPACE 1
AA110    EQU   *
         LA    R7,DSMEMBER-PARMLIST
         LA    R14,DSMEMBER
         LA    R15,L'DSMEMBER
         BAL   R1,PP000            GET DSMEMBER LENGTH.
         LTR   R15,R15
         BNP   AA120
         LA    R1,DALMEMBR
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DSMEMBER.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* PASSWORD ************************
         SPACE 1
AA120    EQU   *
         LA    R7,PASSWORD-PARMLIST
         LA    R14,PASSWORD
         LA    R15,L'PASSWORD
         BAL   R1,PP000            GET PASSWORD LENGTH
         LTR   R15,R15
         BNP   AA130
         LA    R1,DALPASSW
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE PASSWORD.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* DSSTATUS ************************
         SPACE 1
AA130    EQU   *
         LA    R7,DSSTATUS-PARMLIST
         LA    R14,DSSTATUS
         LA    R15,L'DSSTATUS
         BAL   R1,PP000            GET DSSTATUS LENGTH
         LTR   R15,R15
         BNP   AA140
         LA    R1,DALSTATS
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSSTATUS,=CL8'OLD '
         BNE   *+12
         MVI   S99TUPAR,X'01'
         B     AA135
         CLC   DSSTATUS,=CL8'MOD '
         BNE   *+12
         MVI   S99TUPAR,X'02'
         B     AA135
         CLC   DSSTATUS,=CL8'NEW '
         BNE   *+12
         MVI   S99TUPAR,X'04'
         B     AA135
         CLC   DSSTATUS,=CL8'SHR '
         BNE   QQ000
         MVI   S99TUPAR,X'08'
AA135    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSNDISP *************************
         SPACE 1
AA140    EQU   *
         LA    R7,DSNDISP-PARMLIST
         LA    R14,DSNDISP
         LA    R15,L'DSNDISP
         BAL   R1,PP000            GET DSNDISP LENGTH
         LTR   R15,R15
         BNP   AA150
         LA    R1,DALNDISP
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSNDISP,=CL8'UNCATLG '
         BNE   *+12
         MVI   S99TUPAR,X'01'
         B     AA145
         CLC   DSNDISP,=CL8'CATLG   '
         BNE   *+12
         MVI   S99TUPAR,X'02'
         B     AA145
         CLC   DSNDISP,=CL8'DELETE  '
         BNE   *+12
         MVI   S99TUPAR,X'04'
         B     AA145
         CLC   DSNDISP,=CL8'KEEP    '
         BNE   QQ000
         MVI   S99TUPAR,X'08'
AA145    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSADISP *************************
         SPACE 1
AA150    EQU   *
         LA    R7,DSADISP-PARMLIST
         LA    R14,DSADISP
         LA    R15,L'DSADISP
         BAL   R1,PP000            GET DSADISP LENGTH
         LTR   R15,R15
         BNP   AA160
         LA    R1,DALCDISP
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSADISP,=CL8'UNCATLG '
         BNE   *+12
         MVI   S99TUPAR,X'01'
         B     AA155
         CLC   DSADISP,=CL8'CATLG   '
         BNE   *+12
         MVI   S99TUPAR,X'02'
         B     AA155
         CLC   DSADISP,=CL8'DELETE  '
         BNE   *+12
         MVI   S99TUPAR,X'04'
         B     AA155
         CLC   DSADISP,=CL8'KEEP    '
         BNE   QQ000
         MVI   S99TUPAR,X'08'
AA155    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSUNIT **************************
         SPACE 1
AA160    EQU   *
         LA    R7,DSUNIT-PARMLIST
         LA    R14,DSUNIT
         LA    R15,L'DSUNIT
         BAL   R1,PP000            GET DSUNIT LENGTH
         LTR   R15,R15
         BNP   AA170
         LA    R1,DALUNIT
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DSUNIT.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* $RESERV1 ************************
         SPACE 1
AA170    EQU   *
         LA    R7,$RESERV1-PARMLIST
         CLC   $RESERV1,BLANKS
         BNE   QQ000
         SPACE 1
* DSVOLSER ************************
         SPACE 1
AA170A   EQU   *
         LA    R7,DSVOLSER-PARMLIST
         CLC   DSVOLSER,NULLS
         BNE   AA172
         LA    R1,DALRTVOL         SET UP TO HAVE VOLSER RETURNED TO US
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,6
         MVC   S99TUPAR(6),BLANKS
         LA    R1,S99TUPAR
         ST    R1,WKRTNVOL         SAVE ADDRESS OF PARAMETER FIELD.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+6       NEXT TEXT UNIT.
         B     AA180
AA172    EQU   *
         LA    R14,DSVOLSER
         LA    R15,L'DSVOLSER
         BAL   R1,PP000            GET DSVOLSER LENGTH.
         LTR   R15,R15
         BNP   AA180
         LA    R1,DALVLSER
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DSVOLSER.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* $RESERV2 ************************
         SPACE 1
AA180    EQU   *
         LA    R7,$RESERV2-PARMLIST
         CLC   $RESERV2,BLANKS
         BNE   QQ000
         SPACE 1
* DSVOLREF ************************
         SPACE 1
AA180A   EQU   *
         LA    R7,DSVOLREF-PARMLIST
         LA    R14,DSVOLREF
         LA    R15,L'DSVOLREF
         BAL   R1,PP000            GET DSVOLREF LENGTH.
         LTR   R15,R15
         BNP   AA190
         CLC   DSVOLSER,BLANKS     CHECK TO SEE THAT DSVOLREF DOES NOT
         BE    AA184                   CONFLICT WITH DSVOLSER.
         CLC   DSVOLSER,NULLS
         BNE   QQ000
AA184    EQU   *
         LA    R1,DALVLRDS
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE DSVOLREF.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* DSFREE **************************
         SPACE 1
AA190    EQU   *
         LA    R7,DSFREE-PARMLIST
         LA    R14,DSFREE
         LA    R15,L'DSFREE
         BAL   R1,PP000            GET DSFREE LENGTH.
         LTR   R15,R15
         BNP   AA198
         CLC   DSFREE,=CL8'END   '
         BE    AA198
         CLC   DSFREE,=CL8'CLOSE '
         BNE   QQ000
         LA    R1,DALCLOSE
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
AA198    EQU   *
         CLC   DSNAME,=CL44'NULLFILE ' CHECK FOR DUMMY ALLOCATION.
         BE    CC100               GO DO DCB PARAMETERS.
         SPACE 1
* DSLABEL *************************
         SPACE 1
AA200    EQU   *
         LA    R7,DSLABEL-PARMLIST
         LA    R14,DSLABEL
         LA    R15,L'DSLABEL
         BAL   R1,PP000            GET DSLABEL LENGTH.
         LTR   R15,R15
         BNP   AA210
         LA    R1,DALLABEL
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSLABEL,=CL4'SL  '
         BNE   *+12
         MVI   S99TUPAR,X'02'
         B     AA205
         CLC   DSLABEL,=CL4'SUL '
         BNE   QQ000
         MVI   S99TUPAR,X'08'
AA205    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSINOUT *************************
         SPACE 1
AA210    EQU   *
         LA    R7,DSINOUT-PARMLIST
         LA    R14,DSINOUT
         LA    R15,L'DSINOUT
         BAL   R1,PP000            GET DSINOUT LENGTH
         LTR   R15,R15
         BNP   AA220
         LA    R1,DALINOUT
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSINOUT,=CL4'IN  '
         BNE   *+12
         MVI   S99TUPAR,X'80'
         B     AA215
         CLC   DSINOUT,=CL4'OUT '
         BNE   QQ000
         MVI   S99TUPAR,X'40'
AA215    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* $RESERV3 ************************
         SPACE 1
AA220    EQU   *
         LA    R7,$RESERV3-PARMLIST
         CLC   $RESERV3,BLANKS
         BNE   QQ000
         SPACE 3
         CLC   DSSTATUS,BLANKS     CHECK FOR NEW ALLOCATION.
         BE    BB100
         CLC   DSSTATUS,=CL8'NEW '
         BNE   CC100               GO DO DCB PARAMETERS.
         EJECT
* DSPWDLBL ************************
         SPACE 1
BB100    EQU   *
         LA    R7,DSPWDLBL-PARMLIST
         LA    R14,DSPWDLBL
         LA    R15,L'DSPWDLBL
         BAL   R1,PP000            GET DSPWDLBL LENGTH.
         LTR   R15,R15
         BNP   BB110
         LA    R1,DALPASPR
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSPWDLBL,=CL8'PASSWORD'
         BNE   *+12
         MVI   S99TUPAR,X'10'
         B     BB105
         CLC   DSPWDLBL,=CL8'NOPWREAD'
         BNE   QQ000
         MVI   S99TUPAR,X'30'
BB105    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSDATE **************************
         SPACE 1
BB110    EQU   *
         LA    R7,DSDATE-PARMLIST
         LA    R14,DSDATE
         LA    R15,L'DSDATE
         BAL   R1,PP000            GET DSDATE LENGTH.
         LTR   R15,R15
         BNP   BB120
         CLC   DSDATE(6),=C'EXPDT=' CHECK FOR DATE TYPE.
         BNE   BB114
         SH    R15,=H'6'
         CH    R15,=H'5'           CHECK FOR VALID LENGTH.
         BNE   QQ000
         LA    R14,6(0,R14)        BUMP POINTER FOR MVCPARM
         LA    R1,DALEXPDT
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM         MOVE EXPDT DATE.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         B     BB120
         SPACE 1
BB114    EQU   *
         CLC   DSDATE(6),=C'RETPD='
         BNE   QQ000               ERROR
         SH    R15,=H'6'
         BNP   QQ000
         CH    R15,=H'4'
         BH    QQ000
         LA    R14,6(0,R14)        BUMP POINTER TO START OF NUMBER.
         BAL   R1,PP100            EDIT AND CONVERT RETPD.
         LA    R1,DALRETPD
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,2
         STH   R15,S99TUPAR        PLACE RETPD VALUE IN TEXT UNIT.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+2       NEXT TEXT UNIT.
         SPACE 1
* DSALLOC *************************
         SPACE 1
BB120    EQU   *
         LA    R7,DSALLOC-PARMLIST
         LA    R14,DSALLOC
         LA    R15,L'DSALLOC
         BAL   R1,PP000            GET DSALLOC LENGTH.
         LTR   R15,R15
         BNP   QQ000               ERROR
         CLC   DSALLOC,=CL5'TRK '  CHECK FOR TRACK ALLOCATION.
         BNE   BB122
         LA    R1,DALTRK
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
         B     BB130
         SPACE 1
BB122    EQU   *
         CLC   DSALLOC,=CL5'CYL '  CHECK FOR CYLINDER ALLOCATION.
         BNE   BB124
         LA    R1,DALCYL
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
         B     BB130
         SPACE 1
BB124    EQU   *
         BAL   R1,PP100            CHECK FOR AVERAGE BLOCK ALLOCATION.
         LA    R1,DALBLKLN
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,3
         STCM  R15,B'0111',S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+3       NEXT TEXT UNIT.
         SPACE 1
* DSPRI ***************************
         SPACE 1
BB130    EQU   *
         LA    R7,DSPRI-PARMLIST
         LA    R14,DSPRI
         LA    R15,L'DSPRI
         BAL   R1,PP000            GET DSPRI LENGTH.
         LTR   R15,R15
         BNP   QQ000
         BAL   R1,PP100            CHECK FOR PRIMARY QUANTITY.
         LA    R1,DALPRIME
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,3
         STCM  R15,B'0111',S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+3       NEXT TEXT UNIT.
         SPACE 1
* DSSEC ***************************
         SPACE 1
BB140    EQU   *
         LA    R7,DSSEC-PARMLIST
         LA    R14,DSSEC
         LA    R15,L'DSSEC
         BAL   R1,PP000            GET DSSEC LENGTH.
         LTR   R15,R15
         BNP   BB150
         BAL   R1,PP100            CHECK FOR SECONDARY QUANTITY.
         LA    R1,DALSECND
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,3
         STCM  R15,B'0111',S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+3       NEXT TEXT UNIT.
         SPACE 1
* DSDIR ***************************
         SPACE 1
BB150    EQU   *
         LA    R7,DSDIR-PARMLIST
         LA    R14,DSDIR
         LA    R15,L'DSDIR
         BAL   R1,PP000            GET DSDIR LENGTH.
         LTR   R15,R15
         BNP   BB160
         BAL   R1,PP100            CHECK FOR DIRECTORY QUANTITY.
         LA    R1,DALDIR
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,3
         STCM  R15,B'0111',S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+3       NEXT TEXT UNIT.
         SPACE 1
* DSRLSE **************************
         SPACE 1
BB160    EQU   *
         LA    R7,DSRLSE-PARMLIST
         LA    R14,DSRLSE
         LA    R15,L'DSRLSE
         BAL   R1,PP000            GET DSRLSE LENGTH.
         LTR   R15,R15
         BNP   BB170
         CLC   DSRLSE,=CL8'RLSE '
         BNE   QQ000
         LA    R1,DALRLSE
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
         SPACE 1
* DSCONTIG ************************
         SPACE 1
BB170    EQU   *
         LA    R7,DSCONTIG-PARMLIST
         LA    R14,DSCONTIG
         LA    R15,L'DSCONTIG
         BAL   R1,PP000            GET DSCONTIG LENGTH.
         LTR   R15,R15
         BNP   BB180
         LA    R1,DALSPFRM
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLC   DSCONTIG,=CL8'CONTIG '
         BNE   QQ000
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSROUND *************************
         SPACE 1
BB180    EQU   *
         LA    R7,DSROUND-PARMLIST
         LA    R14,DSROUND
         LA    R15,L'DSROUND
         BAL   R1,PP000            GET DSROUND LENGTH.
         LTR   R15,R15
         BNP   BB190
         CLC   DSROUND,=CL8'ROUND '
         BNE   QQ000
         LA    R1,DALROUND
         STH   R1,S99TUKEY
*                                  S99TUNUM SET TO X'0000' BY WORKAREA
*                                      CLEAR.
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUENT         NEXT TEXT UNIT.
         SPACE 1
* $RESERV4 ************************
         SPACE 1
BB190    EQU   *
         LA    R7,$RESERV4-PARMLIST
         CLC   $RESERV4,BLANKS
         BNE   QQ000
         EJECT
* DSBLKSI *************************
         SPACE 1
CC100    EQU   *
         LA    R7,DSBLKSI-PARMLIST
         LA    R14,DSBLKSI
         LA    R15,L'DSBLKSI
         BAL   R1,PP000            GET DSBLKSI LENGTH.
         LTR   R15,R15
         BNP   CC110
         BAL   R1,PP100            CHECK FOR BLKSIZE VALUE.
         CH    R15,=H'32767'       CHECK FOR MAXIMUM BLOCKSIZE.
         BH    QQ000               ERROR.
         LA    R1,DALBLKSZ
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,2
         STH   R15,S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+2       NEXT TEXT UNIT.
         SPACE 1
* DSORG ***************************
         SPACE 1
CC110    EQU   *
         LA    R7,DSORG-PARMLIST
         CLC   DSORG,NULLS
         BNE   CC112
         LA    R1,DALRTORG         SET UP TO HAVE DSORG RETURNED TO US
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,2
         MVC   S99TUPAR(2),NULLS
         LA    R1,S99TUPAR
         ST    R1,WKRTDSRG         SAVE ADDRESS OF PARAMETER FIELD
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+2       NEXT TEXT UNIT.
         B     CC120
CC112    EQU   *
         LA    R14,DSORG
         LA    R15,L'DSORG
         BAL   R1,PP000            GET DSORG LENGTH
         LTR   R15,R15
         BNP   CC120
         LA    R1,DALDSORG
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,2
         CLC   DSORG,=CL8'VSAM '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'0008'
         B     CC115
         CLC   DSORG,=CL8'PO   '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'0200'
         B     CC115
         CLC   DSORG,=CL8'POU  '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'0300'
         B     CC115
         CLC   DSORG,=CL8'DA   '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'2000'
         B     CC115
         CLC   DSORG,=CL8'DAU  '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'2100'
         B     CC115
         CLC   DSORG,=CL8'PS   '
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'4000'
         B     CC115
         CLC   DSORG,=CL8'PSU  '
         BNE   QQ000               ERROR
         MVC   S99TUPAR(2),=XL2'4100'
CC115    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+2       NEXT TEXT UNIT.
         SPACE 1
* DSKEYLEN ************************
         SPACE 1
CC120    EQU   *
         LA    R7,DSKEYLEN-PARMLIST
         LA    R14,DSKEYLEN
         LA    R15,L'DSKEYLEN
         BAL   R1,PP000            GET DSKEYLEN LENGTH.
         LTR   R15,R15
         BNP   CC130
         BAL   R1,PP100            CHECK FOR KEYLENGTH QUANTITY.
         CH    R15,=H'255'         CHECK FOR MAX KEYLENGTH.
         BH    QQ000               ERROR
         LA    R1,DALKYLEN
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         STC   R15,S99TUPAR
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSLRECL *************************
         SPACE 1
CC130    EQU   *
         LA    R7,DSLRECL-PARMLIST
         LA    R14,DSLRECL
         LA    R15,L'DSLRECL
         BAL   R1,PP000            GET DSLRECL LENGTH.
         LTR   R15,R15
         BNP   CC140
         LA    R1,DALLRECL
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,2
         CLC   DSLRECL,=CL5'X '    CHECK FOR SPANNED RECORDS.
         BNE   *+14
         MVC   S99TUPAR(2),=XL2'8000'
         B     CC134
         BAL   R1,PP100            CHECK FOR LRECL QUANTITY.
         CH    R15,=H'32767'
         BH    QQ000
         STH   R15,S99TUPAR
CC134    EQU   *
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+2       NEXT TEXT UNIT.
         SPACE 1
* DSRECFM1 THRU DSRECFM8 **********
         SPACE 1
CC140    EQU   *
         LA    R7,DSRECFM1-PARMLIST
         CLC   DSRECFM,BLANKS      CHECK FOR NO INFORMATION
         BE    CC180
         LA    R1,DALRECFM
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         MVI   S99TULNG+1,1
         CLI   DSRECFM1,C' '
         BE    CC144
         CLI   DSRECFM1,C'V'
         BNE   *+12
         OI    S99TUPAR,X'40'
         B     CC144
         CLI   DSRECFM1,C'F'
         BNE   *+12
         OI    S99TUPAR,X'80'
         B     CC144
         CLI   DSRECFM1,C'U'
         BNE   QQ000               ERROR
         OI    S99TUPAR,X'C0'
         SPACE 1
CC144    EQU   *
         LA    R7,DSRECFM2-PARMLIST
         CLI   DSRECFM2,C' '
         BE    CC148
         CLI   DSRECFM2,C'B'
         BNE   QQ000               ERROR
         OI    S99TUPAR,X'10'
         SPACE 1
CC148    EQU   *
         LA    R7,DSRECFM3-PARMLIST
         CLI   DSRECFM3,C' '
         BE    CC152
         CLI   DSRECFM3,C'S'
         BNE   QQ000               ERROR
         OI    S99TUPAR,X'08'
         SPACE 1
CC152    EQU   *
         LA    R7,DSRECFM4-PARMLIST
         CLI   DSRECFM4,C' '
         BE    CC156
         CLI   DSRECFM4,C'T'
         BNE   QQ000               ERROR
         OI    S99TUPAR,X'20'
         SPACE 1
CC156    EQU   *
         LA    R7,DSRECFM5-PARMLIST
         CLI   DSRECFM5,C' '
         BE    CC160
         CLI   DSRECFM5,C'M'
         BNE   *+12
         OI    S99TUPAR,X'02'
         B     CC160
         CLI   DSRECFM5,C'A'
         BNE   QQ000               ERROR
         OI    S99TUPAR,X'04'
         SPACE 1
CC160    EQU   *
         LA    R7,DSRECFM6-PARMLIST
         CLI   DSRECFM6,C' '
         BNE   QQ000               ERROR
         SPACE 1
CC164    EQU   *
         LA    R7,DSRECFM7-PARMLIST
         CLI   DSRECFM7,C' '
         BNE   QQ000               ERROR
         SPACE 1
CC168    EQU   *
         LA    R7,DSRECFM8-PARMLIST
         CLI   DSRECFM8,C' '
         BNE   QQ000               ERROR
         SPACE 1
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1       NEXT TEXT UNIT.
         SPACE 1
* DSDCBDS *************************
         SPACE 1
CC180    EQU   *
         LA    R7,DSDCBDS-PARMLIST
         LA    R14,DSDCBDS
         LA    R15,L'DSDCBDS
         BAL   R1,PP000            GET DSDCBDS LENGTH.
         LTR   R15,R15
         BNP   CC190
         LA    R1,DALDCBDS
         STH   R1,S99TUKEY
         MVI   S99TUNUM+1,1
         STH   R15,S99TULNG
         BCTR  R15,0
         EX    R15,MVCPARM
         ST    R9,0(0,R8)          SAVE THIS TEXT UNIT ADDRESS.
         LA    R8,4(0,R8)          NEXT TEXT POINTER.
         LA    R9,S99TUPAR+1(R15)  NEXT TEXT UNIT.
         SPACE 1
* $RESERV5 ************************
         SPACE 1
CC190    EQU   *
         LA    R7,$RESERV5-PARMLIST
         CLC   $RESERV5,BLANKS
         BNE   QQ000
         B     MM000               GO DO REQUEST
         SPACE 3
MVCPARM  MVC   S99TUPAR(0),0(R14)
         EJECT
MM000    EQU   *
         SH    R8,=H'4'            BACK UP TO LAST USED TEXT POINTER.
         OI    0(R8),X'80'         INDICATE END OF LIST.
         LA    R1,REQBKPTR         GET THE BEGINNING OF THIS MESS.
         DYNALLOC
         L     R0,S99RSC           PICK UP REASON CODES.
         LTR   R15,R15             CHECK FOR ERRORS.
         BNZ   ZZ000
         L     R1,WKRTNVOL         CHECK FOR VOLSER RETURN REQUEST.
         LTR   R1,R1
         BZ    MM010
         MVC   DSVOLSER,0(R1)      GIVE CALLER INFO.
MM010    EQU   *
         L     R1,WKRTDSRG         CHECK FOR DSORG RETURN REQUEST.
         LTR   R1,R1
         BZ    MM020
         CLC   0(2,R1),=XL2'0008'
         BNE   *+14
         MVC   DSORG,=CL8'VSAM '
         B     MM020
         CLC   0(2,R1),=XL2'0200'
         BNE   *+14
         MVC   DSORG,=CL8'PO   '
         B     MM020
         CLC   0(2,R1),=XL2'0300'
         BNE   *+14
         MVC   DSORG,=CL8'POU  '
         B     MM020
         CLC   0(2,R1),=XL2'2000'
         BNE   *+14
         MVC   DSORG,=CL8'DA   '
         B     MM020
         CLC   0(2,R1),=XL2'2100'
         BNE   *+14
         MVC   DSORG,=CL8'DAU  '
         B     MM020
         CLC   0(2,R1),=XL2'4000'
         BNE   *+14
         MVC   DSORG,=CL8'PS   '
         B     MM020
         CLC   0(2,R1),=XL2'4100'
         BNE   *+14
         MVC   DSORG,=CL8'PSU  '
         B     MM020
         CLC   0(2,R1),=XL2'8000'
         BNE   *+14
         MVC   DSORG,=CL8'IS   '
         B     MM020
         CLC   0(2,R1),=XL2'8100'
         BNE   MM020
         MVC   DSORG,=CL8'ISU  '
MM020    EQU   *
         B     ZZ000
         EJECT
PP000    EQU   *                   ROUTINE TO DETERMINE LENGTH OF
         LTR   R15,R15                 NON-BLANK CHARACTERS IN FIELD.
         BNP   PP030                   AT ENTRY R1 CONTAINS THE RETURN
         ALR   R15,R14                 ADDRESS.  R14 CONTAINS FIELD
PP010    EQU   *                       ADDRESS.  R15 CONTAINS LENGTH
         BCTR  R15,0                   OF FIELD.  AT EXIT R15 WILL BE
         CLI   0(R15),C' '             ALTERED TO CONTAIN LENGTH OF
         BNE   PP020                   NON-BLANK CHARACTERS IN FIELD.
         CLR   R15,R14
         BH    PP010
         SR    R15,R15
         B     PP030
PP020    EQU   *
         SLR   R15,R14
         LA    R15,1(0,R15)
PP030    EQU   *
         BR    R1
         SPACE 3
PP100    EQU   *                   ROUTINE TO EDIT EBCDIC NUMERIC
         LTR   R15,R15                 DATA AND, IF VALID, TO CONVERT
         BNP   PP120                   IT TO BINARY.
         ST    R15,DBLWORD             AT ENTRY R1 CONTAINS THE RETURN
         ALR   R15,R14                 ADDRESS.  R14 CONTAINS DATA
PP110    EQU   *                       ADDRESS.  R15 CONTAINS LENGTH
         BCTR  R15,0                   OF DATA.  AT NORMAL EXIT, R15
         CLI   0(R15),C'0'             WILL BE ALTERED TO CONTAIN THE
         BL    QQ000                   BINARY EQUIVALENT OF THE NUMBER.
         CLI   0(R15),C'9'
         BH    QQ000                   AN ABNORMAL EXIT WILL BE TAKEN
         CLR   R15,R14                 TO THE COMMON ERROR ROUTINE IF
         BH    PP110                   DATA IS NOT NUMERIC.
         L     R15,DBLWORD
         BCTR  R15,0
         EX    R15,PACKNUM
         CVB   R15,DBLWORD
PP120    EQU   *
         BR    R1
         SPACE 1
PACKNUM  PACK  DBLWORD,0(0,R14)
         EJECT
QQ000    EQU   *
         LR    R0,R7               SET UP RETURN CODES
         LA    R15,15
         B     ZZ000
         SPACE 3
ZZ000    EQU   *
         LR    R1,R13              PREPARE FOR FREEMAIN.
         L     R13,SAVEAREA+4
         LTR   R11,R11             CHECK TO SEE IF PARAMETER LIST IS
         BNP   ZZ010                   ONLY ENTRY IN CALLER'S ADDRESS
         L     R2,24(0,R13)            LIST.
         L     R2,4(0,R2)          GET SECOND ADDRESS IN LIST.
         ST    R0,0(0,R2)          PUT REGISTER INFORMATION IN LIST.
         ST    R15,4(0,R2)
ZZ010    EQU   *
         LR    R2,R0               SAVE CONTENTS OF REGISTERS.
         LR    R3,R15
         L     R0,WORKLEN
FREE1    FREEMAIN RU,LV=(0),A=(1),RELATED='GET1'
         LR    R0,R2
         LR    R15,R3
         L     R14,12(0,R13)
         RETURN (1,12),RC=(15)
WORKLEN  DC    F'1024'
TXPTRSPC DC    A(4*40)             RESERVE SPACE FOR 40 TEXT POINTERS.
BLANKS   DC    CL44' '
NULLS    DC    XL44'00'
         LTORG
         EJECT
PARMLIST DSECT
DDNAME   DS    CL8
DSNAME   DS    CL44
DSMEMBER DS    CL8
PASSWORD DS    CL8
DSSTATUS DS    CL8
DSNDISP  DS    CL8
DSADISP  DS    CL8
DSUNIT   DS    CL8
$RESERV1 DS    CL8
DSVOLSER DS    CL6
$RESERV2 DS    CL40
DSVOLREF DS    CL44
DSFREE   DS    CL8
DSLABEL  DS    CL4
DSINOUT  DS    CL4
$RESERV3 DS    CL16
DSPWDLBL DS    CL8
DSDATE   DS    CL12
DSALLOC  DS    CL5
DSPRI    DS    CL6
DSSEC    DS    CL6
DSDIR    DS    CL5
DSRLSE   DS    CL8
DSCONTIG DS    CL8
DSROUND  DS    CL8
$RESERV4 DS    CL24
DSBLKSI  DS    CL5
DSORG    DS    CL8
DSKEYLEN DS    CL3
DSLRECL  DS    CL5
DSRECFM  DS    0CL8
DSRECFM1 DS    C
DSRECFM2 DS    C
DSRECFM3 DS    C
DSRECFM4 DS    C
DSRECFM5 DS    C
DSRECFM6 DS    C
DSRECFM7 DS    C
DSRECFM8 DS    C
DSDCBDS  DS    CL44
$RESERV5 DS    CL24
PARMEND  EQU   *
         SPACE 3
WORKAREA DSECT
SAVEAREA DS    18F
REQBKPTR DS    F
WKRTNVOL DS    F
WKRTDSRG DS    F
         DS    F
DBLWORD  DS    D
         DS    4F
DYNWORK  EQU   *
         EJECT
         IEFZB4D0
         EJECT
         IEFZB4D2
         END
