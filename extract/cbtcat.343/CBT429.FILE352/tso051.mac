*          DATA SET TSO051     AT LEVEL 006 AS OF 04/09/83
*          DATA SET TSO051     AT LEVEL 005 AS OF 04/13/82
*          DATA SET TSO051     AT LEVEL 002 AS OF 06/29/81
GETINFO  TITLE 'GET TSO USER STUFF FROM JCT INTO CLIST VARIABLES-V1M0'
         PRINT OFF    MACROS BE HERE
*          DATA SET MODESET    AT LEVEL 002 AS OF 01/15/82
         MACRO
&LABEL   MODESET &KEY=,&MF=,&RET=R14,&MODE=     CHANGE NAME TO MODESET
.*
.* CHANGE MACRO NAME TO FMODESET TO ALLOW USE OF REAL MODESET
.*
         LCLC    &PRINT         ******TO ALLOW USE OF MAGIC SVC  KT
&PRINT   SETC    'OFF'
         AIF     ('&MF(1)' EQ 'E').CODE
         AIF     ('&KEY' EQ 'ZERO').GOSUP
         AIF     ('&MODE' EQ 'SUP').GOSUP
         AIF     ('&KEY' EQ 'NZERO').GOPROB
         AIF     ('&MODE' EQ 'PROB').GOPROB
 MNOTE 8,'MODESET (NTL) OF &KEY NOT RECOGNIZED'
         MEXIT
.GOSUP   ANOP
*
&LABEL   ICM   R0,B'1111',=X'ABCFEDAD'  GET CODE
         SR    1,1              INDICATE KEY=0
         SVC   254              DOIT PLEASE
         AIF   ('&MF' NE 'L').FIN1                                 NTL*
         BR    &RET             RETURN TO MAINLINE
*
.FIN1    ANOP  ,                                                   NTL*
         MEXIT
.GOPROB  ANOP
*
&LABEL   ICM   R0,B'1111',=X'ABCFEDAD'  GET CODE
         SVC   254                IF YOU PLEASE.....
         AIF   ('&MF' NE 'L').FIN2                                 NTL*
         BR    &RET             RETURN TO CALLER
*
.FIN2    ANOP  ,                                                   NTL*
         MEXIT
.CODE    ANOP
         AIF   ('&MF(1)' NE 'E').OOPS
&LABEL   BAL   &RET,&MF(2)      INVOKE ROUTINE
*
         MEXIT
.OOPS    ANOP
 MNOTE 12,'NTL MODESET MF NOT=L OR (E,ADDR)   MF=&MF'
         MEND
         MACRO
         REGEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         MACRO
&LAB     LEAVER &WR=R13,&WL=WORKLEN
&LAB     LR    R1,&WR             WORKAREA ADDR FOR FREEMAIN
         LA    R0,&WL             WORKAREA LEN   "    "
         L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         LR    R11,R15            SAVE RETURN CODE
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R11            RESTORE RETURN CODE
         RETURN (14,12),RC=(15)
         MEND
         MACRO
&LAB     LEAVENR
&LAB     L     R13,4(R13)         GET CALLERS SAVEAREA ADDR
         RETURN (14,12),RC=(15)
         MEND
         MACRO
&LAB     KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
*                  DEFAULT OPERANDS :
*        KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA
*                            CPPL IS THE REGISTER CONTAINING THE
*                                 POINTER TO THE COMMAND PROCESSOR
*                                 PARAMETER LIST.
*                            ANS  IS A FULLWORD WHERE PARSE RETURNS
*                                 THE POINTER TO HIS ANSWER (IKJPARMD).
*                            ECB  IS A FULLWORD.
*                            PCL  IS THE NAME OF THE PARSE CONTROL
*                                 LIST CSECT (IKJPARM).
*                            PPLA IS A 7 FULLWORD AREA USED FOR
*                                 THE PARSE PARAMETER LIST.
*
*        KKPARSE             USES REGS R14,R15,R1,&CPPL REG
*
         USING CPPL,&CPPL         POINTS TO CPPL (PARM LIST)
*
&LAB     LA    R1,&PPLA           R1->PPL AREA
         USING PPL,R1             TELL ASSEMBLER POINTS TO PPL AREA
*
*                         CONSTRUCT PARSE PARAMETER LIST
*                                           FOR IKJPARS :
*
         MVC   PPLUPT,CPPLUPT     UPT
         MVC   PPLECT,CPPLECT     ECT
         LA    R15,&ECB           ECB
         ST    R15,PPLECB
         L     R15,=V(&PCL.)      PCL
         ST    R15,PPLPCL
         LA    R15,&ANS           ANS
         ST    R15,PPLANS
         MVC   PPLCBUF,CPPLCBUF   CBUF
         XC    PPLUWA,PPLUWA
*
         DROP  R1
         EJECT
*        CALLTSSR EP=IKJPARS      CALL PARSE:
         CALLTSSR EP=IKJPARS      CALL PARSE:
         EJECT
*
*                        DSECTS NEEDED BY PARSE:
*
*CPPL    IKJCPPL
CPPL     IKJCPPL
*PPL     IKJPPL
PPL      IKJPPL
*
CVTMAP   DSECT
         ORG   CVTMAP+524
CVTPARS  DS    F
CVTPTR   EQU   16
*
*
&SYSECT  CSECT
         MEND
         MACRO
&LAB1    ENTERR &SA=SAVEAREA,&WA=WORKAREA,&WL=WORKLEN
&LAB1    START
         SAVE  (14,12),,*         HO-HUM
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR
         LA    R0,&WL             R0=GET LENGTH
         GETMAIN R,LV=(0)         R1->WORKAREA
         LR    R11,R13            R11->CALLERS SAVEAREA
         LR    R13,R1             R13->WORKAREA
         USING &WA.,R13
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13
*                       WORKAREA ADDR IS STILL R13 FOR
*                       THE ASSEMBLER - IF DIFFERENT FROM R13
*                       THEN USE: DROP R13 AND USING &WA.,R11
         LR    R1,R10             RESTORE PARM PTR PTR
         REGEQU
         MEND
         MACRO
&LAB1    ENTERNR &SA=SAVEAREA
&LAB1    START
         SAVE  (14,12),,*         HO-HUM
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING
         USING &LAB1,R12
         ST    R13,&SA.+4         SAVE HIS SAVEAREA PTR
         LR    R11,R13            SAVE THE SAVE POINTER
         LA    R13,&SA            R13->SAVEAREA (MINE)
         ST    R13,8(,R11)        MINE IN HIS
         B     ENTEX
&SA      DS    18F
         REGEQU
ENTEX    DS    0H
         MEND
         MACRO
&LAB1    COMMENT &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K
         MEND
         MACRO  ,
&LABEL   STUFFIT &FIELD,&KEYWD,&PDE
         LCLC   &S
&S       SETC   '&SYSNDX'
         SPACE  1
         AIF   (T'&KEYWD EQ 'O').NOCHK
&LABEL   TM    &KEYWD+1,X'FF'  WAS FIELD REQUESTED?               NTL1
         BZ    SKPA&S          NO..SPLIT
         AGO   .FINCHK
.NOCHK   ANOP  ,
&LABEL   L     R7,&PDE         (R7)= ADDR OF PARSE DESCRIPTOR ENTRY
         AGO   .SKP1
.FINCHK  ANOP  ,
         L     R7,&PDE         (R7)= ADDR OF PARSE DESCRIPTOR ENTRY
.SKP1    ANOP  ,
         LH    R6,&PDE+4       (R6)= LENGTH OF ELEMENT
         BAL   R14,LOCVAR      GO FIND THE CLIST VARIABLE
         LTR   R1,R1           ANY LUCK?
         BZ    SKPA&S          NO.. SPLIT
         SPACE 1
         LA    R15,&FIELD      GET ADDR OF FIELD TO STUFF
         LH    R0,=AL2(L'&FIELD)   GET LENGTH OF FIELD TO STUFF   INTEL
         BAL   R14,SETVAR      GO STUFF IT AWAY INTO CLIST VAR
SKPA&S   DS    0H
         SPACE 1
         MEND  ,
         MACRO ,                                                    NTL
&LABEL   STUFFITN &NUMB,&KEYWD,&PDE                                 NTL
         SPACE 1                                                    NTL
         LCLA  &L                                                   NTL
&L       SETA  L'&NUMB         GET LENGTH OF NUMBER                 NTL
         SR    R1,R1           CLEAR NUMBER REGISTER                NTL
         AIF   (&L NE 1).NOT1                                       NTL
&LABEL   IC    R1,&NUMB        GET NUMBER (1 BYTE)                  NTL
         AGO   .DOIT                                                NTL
.NOT1    ANOP  ,                                                    NTL
         AIF   (&L NE 2).NOT2                                       NTL
&LABEL   LH    R1,&NUMB        GET NUMBER (HALFWORD)                NTL
         AGO   .DOIT                                                NTL
.NOT2    ANOP  ,                                                    NTL
         AIF   (&L NE 4).NOT4                                       NTL
&LABEL   L     R1,&NUMB        GET NUMBER (FULLWORD)                NTL
         AGO   .DOIT                                                NTL
.NOT4    ANOP  ,                                                    NTL
 MNOTE 8,'STUFFITN - LENGTH OF &NUMB IS &L - MUST BE 1,2 OR 4'      NTL
         MEXIT ,                                                    NTL
.DOIT    ANOP  ,                                                    NTL
         BAL   R14,FITINUM                                          NTL
 MNOTE '        STUFFIT NUMBER,&KEYWD,&PDE   INVOKE STUFFIT'        NTL
         STUFFIT NUMBER,&KEYWD,&PDE                                 NTL
         MEND  ,                                                    NTL
         PRINT ON   END OF INSTREAM MACROS
*
* TSO COMMAND   G E T I N F O
*
*     PURPOSE: STUFF JUNK FROM THE OS JCT/ACF2 JCT INTO CLIST
*              VARIABLES OF YOUR CHOICE.
*
*   SYNTAX - (ALL OPERANDS ARE OPTIONAL)
*                                 LENGTH  DESCRIPTION
*      GETINFO  PGMRNAME(VAR1) /*  20     PROGRAMMER NAME            */
*               BIN(VAR2)      /*   4     BIN NUMBER (SECOND ACNT FLD*/
*               PHONE(VAR3)    /*  12     USER PHONE NUMBER- ACF2    */
*               DEST(VAR4)     /*   8     DEFAULT SYSOUT DEST        */
*               JOBCLASS(VAR5) /*   1     ACF2 DFT-SUBC              */
*               MSGCLASS(VAR6) /*   1     ACF2 DFT-SUBM              */
*               SYSOUT(VAR7)   /*   1     ACF2 DFT-SOUT              */
*               PROJECT(VAR8)  /*   4     FIRST 4 CHARS OF ACNT FIELD*/
*               SRNUM(VAR9)    /*   4     LAST  4 CHARS OF ACNT FIELD*/
*               JOBNUM(VAR10)  /*   8     JES2 JOB NUMBER            */
*               LINE(VAR11)    /*   8     LOGON TERMAINAL NAME       */
*               DAY(VAR12)     /*   9     DAY OF THE WEEK FOR TODAY  */
*               JDATE(VAR13)   /*   6     JULIAN DATE IN YY.DDD FORM */
*               DATE(VAR14)    /*  13     DATE IN 'MON. DD, 19YY'    */
*               ROWS(VAR15)    /*   8     CUR # LINES/SCREEN         */
*               COLS(VAR16)    /*   8     CUR # CHARS/LINE           */
*               PROWS(VAR17)   /*   8     PRIMARY # LINES/SCREEN     */
*               PCOLS(VAR18)   /*   8     PRIMARY # CHARS/LINE       */
*               AROWS(VAR19)   /*   8     ALTERNATE # LINES/SCREEN   */
*               ACOLS(VAR20)   /*   8     ALTERNATE # CHARS/LINE     */
*               ATTR(VAR21)    /*   4    ='YES'-PROGRAM SYMB OK ELSE */
*                              /*        ='NO' -NO PROGRAM SYMB FEAT.*/
*               ENVIRON(VAR22) /*   8    ='BATCH', 'TSO' OR 'TONE4'  */
*               NOCOMPR        /*  KEYWORD- NO TRIM OF TRAILING BLNKS*/
*
         GBLB  &TONE4          TONE4 MVS DEPENDENT CODE             NTL
&TONE4   SETB  0               =1 - DO TONE 4 MODS                  NTL
*                              =0 - NO TONE4 MODS                   NTL
         GBLB  &SP3        SP1.3 VERSION OF JES2                  INTEL
&SP3     SETB  1           1=YES, 0=NO                            INTEL
         GBLC  &ACF2JCT    ACF 3.1.3                              INTEL
          EJECT  ,                                                  NTL
*   VAR1-VAR22 ARE CLIST VARIABLE NAMES (WITHOUT THE & IN FRONT)    NTL
*   ALL VARIABLES MUST HAVE BEEN INITIALIZED BY A 'SET' STATMENT BEFORE
*   GET INFO IS INVOKED.
*
*   EXAMPLE:   RETURN PROGRAMMER NAME AND PHONE NUMBER:
*
*        SET &PHON = &STR(            )
*        SET &PRGN = &STR(                    )
*        GETINFO PGMR(PRGN) PHONE(PHON)
*
*
* RETURN-CODES : GETINFO RETURNS CODES IN CLIST VAR &LASTCC AS FOLLOWS;
*
*                       0 - NORMAL COMPLETION
*              X'20' = 32 - VARIABLE TRUNCATED - TOO SHORT FOR FIELD
*              X'40' = 64 - VARIABLE NOT FOUND
*              X'80' =128 - NOT RUNNING UNDER CONTROL OF CLIST
*                     256 - PARSE ERROR
*              NOTE: VALUES ARE ADDITIVE:
*                 A RETURN CODE OF 96 =X'60' INDICATES AT LEAST ONE
*                 VARIABLE WAS TRUNCATED, AND ANOTHER WAS NOT FOUND.
*
*  HISTORY:
*  V1.0    K TRUE     25 JUN 81  - INTEL CORP.
*      BASED ON 'KOMM' FROM KERMIT KISER OF WASHINTON STATE DP
*            SERVICE CENTER (WDPSC).  STOLEN FROM COMM WERE MACROS
*            AND MANIPULATION OF CLIST VARIABLES ROUTINES.
*                                                                   NTL
*  V1.1   K  TRUE     12 APR 82  - INTEL CORP                       NTL
*      ADDED KEYWORDS:                                              NTL
*            ROWS,COLS,PROWS,PCOLS,AROWS,ACOLS,ATTR,ENVIRON         NTL
*      ADDED TONE4 SUPPORT VIA &TONE4 GBLB VARIABLE.. CODE FOR      NTL
*            EXTRACTION OF TONE4 LINE IS BY BILL WILLIAMS (FROM     NTL
*            TSO043(WHODIS) COMMAND)                                NTL
*      INCLUDED MODESET LOCAL MACRO AS INSTREAM SO MAGIC SVC COULD  NTL
*            BE USED, OR REAL MODESET (AS YOU WISH)                 NTL
*  V1.2  K  TRUE     13 MAR 83   - INTEL CORP                       NTL
*      ADDED &SP3 FLAG FOR SP1.3 JES2...NEW ACF2 CONTROL BLOCKS..   NTL
*                                                                   NTL
* ORIGINAL SOURCE WAS:                                              NTL
*          DATA SET CBT934     AT LEVEL 001 AS OF 02/25/79
*    FROM THE CBT MODS TAPE.                                        NTL
*                                                                   NTL
*                                                                   NTL
         EJECT
*.....................................................................*
*        STANDARD COMMAND PROCESSOR LINKAGE                           *
*.....................................................................*
         SPACE
GETINFO  ENTERR                   R13 -> WORKAREA
*                                 R12 -> GETINFO ADDRESSABILITY
         XC    RETCODE,RETCODE
         EJECT
*.....................................................................*
*        PARSE THE INPUT BUFFER                                       *
*.....................................................................*
         SPACE
         LR    R11,R1             SAVE THE PARM POINTER
*                                 R11 -> CPPL
DOPARSE  KKPARSE
*
*
         DROP  R11
ANALR    LTR   R15,R15            RC = 0? PARSE WENT OK?
         BNZ   PARSERR            NO. -> GO TO PARSE ERR
         L     R10,ANS            R10 -> IKJPARMD
         USING IKJPARMD,R10
         EJECT
*.....................................................................*
*        FIND JCT                                                     *
*.....................................................................*
         SPACE 1
JCT      EQU   R11           NEEDED BY $JCT MACRO FOR
         AIF   (&SP3).$SKIP01                                     INTEL
BUFDSECT EQU   *                 MAPPING OF THE
BUFSTART EQU   *+X'58'                GLORIOUS J C T
         AGO   .$SKP01E                                           INTEL
.$SKIP01 ANOP  ,                SP 1.3 JES2                       INTEL
         #ACFJES2    ,          ESTABLISH OFFSETS TO USE          INTEL
.$SKP01E ANOP  ,                                                  INTEL
         SPACE 1
FINDJCT  $FINDCB ASCB=R2,JCT=R11   FIND THE JCT AND ASCB ADDRESS
         EJECT ,                                                  INTEL
         ST    R2,ADDRASCB         SAVE FOR POSSIBLE LATER USE
         USING JCTDSECT,JCT        ESTABLIST ADDRESSABILITY TO JCT
         SPACE 1                                                  INTEL
         AIF   (NOT &SP3).$SKIP02                                 INTEL
         ICM   R9,15,&ACF2JCT      TEST, GET ACF2 AREA OFFSET     INTEL
         LA    R9,0(JCT,R9)        CALCULATE ADDRESS              INTEL
         USING #ACFJCTX,R9         ADDRESSING                     INTEL
.$SKIP02 ANOP  ,                                                  INTEL
         CLC   JCTID,=CL4'JCT'     IS THIS THE REAL JCT?            NTL
         BE    BEGIN               YES.....GO FOR IT                NTL
         OI    RETCODE+2,X'02'     SET RC=512                       NTL
         B     GETOUT              AND SPLIT                        NTL
         EJECT
*.....................................................................*
*        PROCESS THE PARMS                                            *
*.....................................................................*
         SPACE
BEGIN    STUFFIT  LIDNAME,PGMRNAME,PGMRDD
         STUFFIT  JCTROOMN,BINNUMB,BINDD
         STUFFIT  LIDPHONE,PHONE,PHONDD
         EJECT   ,
         STUFFIT  LIDTDRMT,DEST,DESTDD
         STUFFIT  LIDTSUBC,JOBCLASS,JOBCDD
         STUFFIT  LIDTSUBM,MSGCLASS,MSGCDD
         EJECT   ,
         STUFFIT  LIDTSOUT,SYSOUT,SYSODD
         STUFFIT  NTLPROJ,PROJECT,PROJDD
         STUFFIT  NTLSRNUM,SRNUM,SRNUDD
         EJECT   ,
         STUFFIT  JCTJOBID,JOBNUMB,JOBNDD
         BAL      R14,GETLINE#
         STUFFIT  LINEAREA,LINE,LINEDD
         STUFFIT  VLOGMODE,LOGMODE,LMODDD                           NTL
         EJECT   ,
         STUFFITN TTYPE,TERMTYPE,TTYPDD                             NTL
NOLINE   DS       0H
         TM       DAY+1,X'FF'      WAS DAY OF WEEK REQUESTED
         BZ       NODAY
         BAL      R14,DATERTN
         STUFFIT  LEFTDAY,,DAYXDD
NODAY    DS       0H
         EJECT
         TM       JDATEV+1,X'FF'   WAS JULIAN DATE REQUESTED?
         BZ       NOJDATE
         BAL      R14,DATERTN
         STUFFIT  JDATE,,JDATDD
NOJDATE  DS       0H
         SPACE
         TM       GDATEV+1,X'FF'  WAS GREGORIAL DATE REQUESTED?
         BZ       NOGDATE
         BAL      R14,DATERTN
         STUFFIT  CDATE,,DATEDD
NOGDATE  DS       0H
*
         EJECT
*.....................................................................*
*        TERMINAL CHARACTERISTICS                                     *
*.....................................................................*
         SPACE
         MVC      WHERAMI,=CL8'TSO'   INDICATE UNDER TSO            NTL
         L        R1,ADDRASCB         GET ASCB ADDRESS WE SAVED OFF NTL
         CLI      ASCBTSB-ASCB(R1),X'C0' IS THIS TONE4 LAND?        NTL
         BNE      NOTTONE4                                          NTL
         MVC      WHERAMI,=CL8'TONE4' THIS IS TONE                  NTL
         B        STUFFAMI                                          NTL
NOTTONE4 CLC      ASCBTSB-ASCB(,R1),=XL4'00' NO POINTER?            NTL
         BNE      STUFFAMI            SOME POINTER..MUST BE TSO     NTL
         MVC      WHERAMI,=CL8'BATCH' MUST BE BATCH....             NTL
STUFFAMI STUFFIT  WHERAMI,ENVIRON,ENVDD  PUT ENVIRONMENT AWAY       NTL
         XC       PRMSZE(CLRITL),PRMSZE                             NTL
         GTSIZE   ,  GET CURRENT ROWS/COLS FOR TERMINAL             NTL
         STC      R0,CURROWS     SAVE CURRENT # LINES PER SCREEN    NTL
         STC      R1,CURCOLS     SAVE # CHARS/LINE                  NTL
         LA       R15,PRMSZE                                        NTL
         ST       R15,GTTERM                                        NTL
         LA       R15,ALTSZE                                        NTL
         ST       R15,GTTERM+4                                      NTL
         LA       R15,ATTRIB                                        NTL
         ST       R15,GTTERM+8                                      NTL
         MVI      GTTERM+8,X'80'                                    NTL
         GTTERM   MF=(E,GTTERM)                                     NTL
         STC      R15,GTTERMRC   SAVE OFF RETURN CODE               NTL
         EJECT    ,                                                 NTL
         STUFFITN CURROWS,ROWS,ROWSDD                               NTL
         STUFFITN CURCOLS,COLS,COLSDD                               NTL
         EJECT    ,                                                 NTL
*        OC       GTTERMRC,GTTERMRC   GTTERM WORK OK?               NTL
*        BNZ      GETOUT              NO...CANCEL                   NTL
         STUFFITN PRMROWS,PROWS,PROWSDD                             NTL
         STUFFITN PRMCOLS,PCOLS,PCOLSDD                             NTL
         EJECT    ,                                                 NTL
         STUFFITN ALTROWS,AROWS,AROWSDD                             NTL
         STUFFITN ALTCOLS,ACOLS,ACOLSDD                             NTL
         EJECT    ,                                                 NTL
         MVC      ATTRYORN,=CL4'NO'                                 NTL
         OC       ATTRIB+3(1),ATTRIB+3 CHECK OUT EXTENDED SYMBOLS   NTL
         BZ       STUFFATT                                          NTL
         MVC      ATTRYORN,=CL4'YES'  SET UP EXTENDED ATTRIBUTES    NTL
STUFFATT STUFFIT  ATTRYORN,ATTR,ATTRDD                              NTL
         SPACE   2
*.....................................................................*
*        EXIT                                                         *
*.....................................................................*
         SPACE
GETOUT   L     R15,RETCODE
         LEAVER                   EXIT REENTRANT ROUTINE
         SPACE 2
*
*       GETINFO SUBROUTINES HERE
*
PARSERR  EQU   *
         OI    RETCODE+2,X'01'    RC=256
         B     GETOUT
*
         EJECT
*.....................................................................*
*  SUBROUTINE LOCVAR:                                                 *
*  PURPOSE: LOCATE ADDRESS OF VARABLE IN CLIST TO POKE STUFF INTO.    *
*                                                                     *
*  ENTER WITH :                                                       *
*                                                                     *
*       (R7) = ADDR PARSE VARIABLE ENTRY (LABEL ON IKJIDENT FOR       *
*              SUBFIELD TO BE EXAMINED).                              *
*       (R6) = LENGTH OF VARIABLE TO EXAMINE                          *
*                                                                     *
*       BAL R14,LOCVAR                                                *
*                                                                     *
* ON RETURN:  (R1) = 0   NOT FOUND                                    *
*             (R1) ^=0   (R1) = ADDR OF CLIST VARIABLE ELEMENT        *
*                                                                     *
*   REGISTERS USED:  R3,R4,R5,R6,R7,R8 (RESTORED)                     *
*                    R1                (NOT RESTORED)                 *
*.....................................................................*
         SPACE
LOCVAR   STM   R3,R8,SAVEREGS
         L     R5,ECTADDR         R5->ECT
         L     R5,4(,R5)          R5->IOSRL
         L     R4,0(,R5)          R4->TOP OF STACK
CKCLIST  TM    0(R4),X'08'        CLIST ELEMENT?
         BO    GOTCL              YES->WE HAVE A CLIST
         S     R4,=F'4'           R4=R4-4 (NEXT ELEMENT DOWN ON STACK)
         C     R4,4(,R5)          R4<BOTTOM OF STACK PTR?
         BNL   CKCLIST            NO ->STILL IN STACK; GO CHECK IT
         OI    RETCODE+3,X'80'    YES->SET RC=128
         LA    R1,0               NO POINTER FOR THE WICKED
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R14                EXIT LOCVAR WITH ERROR
         SPACE 1
GOTCL    DS    0H                 R7->VARIABLE NAME
*                                 R6=VAR LENGTH FOR LENGTH COMPARE
         L     R5,0(,R4)          R5->LSD
         L     R5,12(,R5)         R5->EXECDATA
         L     R5,0(,R5)          R5->SNTAB
         L     R4,8(,R5)          R4==USED TABLE LENGTH
         LA    R4,0(R4,R5)        R4->END OF TABLE USED
         LA    R3,12(,R5)         R3->FIRST SNTAB ENTRY
         LR    R1,R6              R1=R6  VARIABLE NAME LENGTH
         BCTR  R1,R0              R1=R1-1 FOR EXECUTED COMPARE
         EJECT ,
RLOOP    LH    R2,6(,R3)          R2=NAME LENTH
         CR    R6,R2              SAME LENGTH?
         BNE   LOOPCHK            NO -> CHECK DONE
         EX    R1,EXCLC           COMPARE NAMES
         BE    GOTIT
LOOPCHK  LA    R3,8(R2,R3)        POINT TO NEXT ENTRY
         CR    R3,R4              DONE?
         BL    RLOOP              NO->CONTINUE
         SPACE 1
RERR     LA    R1,0               SET NO FOUND AND SPLIT
         OI    RETCODE+3,X'40'    YES->SET RC=64
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R14                EXIT LOCVAR WITH ERROR
         SPACE 1
GOTIT    EQU   *
         L     R1,0(,R3)          GET VALUE ADDR
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS
         BR    R14                RETURN
         SPACE 1
EXCLC    CLC   0(0,R7),8(R3)      EXECUTED
         EJECT
*.....................................................................*
* SUBROUTINE SETVAR:                                                  *
*                                                                     *
* PURPOSE:  MOVE STUFF FROM DESIRED FIELD INTO CLIST VARIABLE FIELD   *
*                                                                     *
* ON ENTRY (R1) = ADDR CLIST VAR POINTER                              *
*          (R15)= ADDRESS OF INPUT FIELD (THE MOVEE...)               *
*          (R0) = LENGTH OF INPUT FIELD (L'MOVEE......)               *
*                                                                     *
*   BAL  R14,SETVAR                                                   *
*                                                                     *
*   ON RETURN:                                                        *
*                                                                     *
*.....................................................................*
         SPACE
*
SETVAR   DS    0H                 R1->VALUE TABLE ENTRY
         STM   R2,R4,SAVEREGS
         ST    R14,SETVR14        SAVE RETURN ADDRESS             INTEL
         LR    R14,R0             LOAD LENGTH INTO WORK REGISTER  INTEL
ROOMCHK  CH    R14,2(,R1)         ROOM FOR INPUT?                 INTEL
         BNH   SM                 YES->MOVE IT.
         OI    RETCODE+3,X'20'    SET RC=32
         LH    R14,2(,R1)         NO ->GET HIS LENGTH
SM       BCTR  R14,0              R14=R14-1 = MACHINE LENGTH
         SPACE 1
         TM    NOCOMPR+1,X'FF'    WAS NO COMPRESS WANTED?
         BNZ   SKIPCPRS           ..DONT DO COMPRESS
DEBLANK  LA    R2,0(R15,R14)      POINT TO LAST CHARACTER TO MOVE
         CLI   0(R2),C' '         IS THIS ONE A BLANK
         BNE   SKIPCPRS           NO..FINISHED WITH THIS ONE
         BCT   R14,DEBLANK        LOOP UNTIL DONE
SKIPCPRS DS    0H
         SPACE 1
         CLI   0(R15),C' '        IS FIRST CHAR A BLANK?
         BE    SETNULL            YEP...SKIP MOVE AND SET LENG=0
         EX    R14,SMOVE          MOVE IT
         LA    R14,1(,R14)        BUMP REAL COUNT
UPDTCNT  STH   R14,0(,R1)         AND SAVE COUNT AWAY
         LM    R2,R4,SAVEREGS
         LR    R0,R14             PASS BACK LENGTH USED           INTEL
         L     R14,SETVR14        RESTORE RETURN ADDRESS          INTEL
         BR    R14
         SPACE 1
SETNULL  SR    R14,R14
         B     UPDTCNT
         SPACE 1
SMOVE    MVC   4(0,R1),0(R15)     EXECUTED
         EJECT
*.....................................................................*
* SUBROUTINE: GETLINE#                                                *
*                                                                     *
* PURPOSE: GET TCAM UCB ADDRESS OR VTAM TERMINAL ID FOR THIS ADDRESS  *
*          SPACE                                                      *
*                                                                     *
* ENTER WITH (ASCBADDR) CONTAINING THE ASCB ADDRESS                   *
*                                                                     *
*      BAL   R14,GETLINE#                                             *
*                                                                     *
* RETURNS WITH 'LINEAREA' FILLED IN                                   *
*                                                                     *
*.....................................................................*
         SPACE
GETLINE# STM   R3,R8,SAVEREGS
         ST    R14,GETLR14          SAVE RETURN ADDRESS           INTEL
         MVC   VLOGMODE,BLANKS                                      NTL
         XC    TTYPE,TTYPE                                          NTL
         L     R7,ADDRASCB        RETRIEVE ASCB ADDRESS
         USING ASCB,R7
         AIF   (NOT &TONE4).$SKP10                                TONE4
*                                                                 TONE4
*     THE FOLLOWING WILL CHECK ASCBTSB IF MARKED BY TONE 4.       TONE4
*     IF ITS A TONE ADDRESS SPACE THEN IT WILL GET THE USER PROC  TONE4
*     FROM THE TIOT AND DROP ADDRESS TO ASCB CSCB, LOCATE THE     TONE4
*     THE TONE CREATED ASCB CSCB FOR THIS USER AND ENSURE         TONE4
*     ADDRESSABILITY. W WILLIAMS - APRIL 82 - INTEL CORP          TONE4
*                                                                 TONE4
         CLI   ASCBTSB,X'C0'      IS IT A TONE ADDRESS SPACE      TONE4
         BNE   NOTONE             NO                              TONE4
         $FINDCB TCB=R5           GET CURRENT TCB                 TONE4
         CLI   TCBUSER(R5),C'T'   MARKED BY ATTACH                TONE4
         BNE   NOTONE             NO....                          TONE4
         L     R5,TCBJSTCB(,R5)   GET JOBSTEP TCB                 TONE4
         CLI   TCBUSER(R5),C'T'   MARKED BY ATTACH                TONE4
         BNE   NOTONE             NO....                          TONE4
         ICM   R5,7,TCBUSER+1(R5) GET TCBUSER                     TONE4
         BNZ   ITSTONE            WE GOT SOMETHING....            TONE4
         B     NOTONE             NO ONE HOME...                  TONE4
         SPACE 2                                                  TONE4
         USING ISCCHAIN,R5        ADDRESS CHAINING BLOCK          TONE4
ITSTONE  CLC   ISCTSKID,=CL8'TONE'      IS THIS TPCDATA           TONE4
         BNE   NOTONE                   NO....                    TONE4
         CLC   ISCBLKID,=CL8'TPCDATA'   IS THIS BLOCK TPCDATA     TONE4
         BNE   NOTONE                   NO....                    TONE4
         ICM   R5,7,ISCBLOCK      GET TPCDATA ADDRESS             TONE4
         BZ    NOTONE             NO ONE HOME....                 TONE4
         SPACE 1                                                    NTL
         USING TPCDATA,R5         ADDRESS TPCDATA                 TONE4
         L     R8,TPCASCB         GET TONES ASCB FOR OUR TONE SESSTONE4
         MVC   LINEAREA(8),TPCLTERM  OK... GET LINE FROM TONE     TONE4
         B     LINEFIN                                            TONE4
         SPACE 1                                                  TONE4
TCBUSER  EQU   X'0A8',4          TCBUSER FIELD FROM TCB           TONE4
TCBJSTCB EQU   X'07C',4          TCBJSTCB FIELD FROM TCB          TONE4
         SPACE 1                                                  TONE4
NOTONE   DS    0H                                                 TONE4
.$SKP10  ANOP  ,                                                  TONE4
         L     R7,ASCBTSB         GET ADDRESS OF TSB FOR LINE ADDR
         USING TSB,R7             USE THE ADDRESS
*                                                                   NTL
* JUST FOR CHUCKLES....SEE IT THIS IS BATCH                         NTL
*                                                                   NTL
         LTR   R7,R7              ANY TSB ADDRESS THERE?            NTL
         BNZ   DOSTAX             YES..CONTINUE                     NTL
         MVC   LINEAREA(8),BLANKS NO LINE HERE                      NTL
         B     LINEFIN                                              NTL
         SPACE 1                                                    NTL
DOSTAX   STAX  MF=(E,DEFER)       HOLD ALL CALLS PLEASE....
         MODESET MF=(E,SUPER)
         ST    1,OLDKEY
         TM    TSBFLG5,TSBVTAM    SEE IF THIS IS A TSO/VTAM TSB
         BO    ITSVTAM            YES....GO GET TSB EXTENSION
ITSTCAM  UNPK  TCAMUCB(5),TSBLINE(3) UNPACK THE TSO LINE ADDRESS
         NC    TCAMUCB,HEXMASK
         TR    TCAMUCB,HEXTAB
         MVC   LINEAREA(3),=C'UCB'
         MVI   TCAMUCB,C'='       FIX IT UP PRETTY
         MVI   TCAMUCB+4,C' '
         B     FINSUPR
         SPACE 1
ITSVTAM  L     R8,TSBEXTNT         GET ADDRESS OF TSB EXTENSION
         USING TSBX,R8             ESTABLISH ADDRESSABILITY TO TSBX
         TM    TSBXFLG1,TSBXWREC   SEE IF TERMINAL AWAITING RECON
         BNO   GETSYM              NO.....GO GET SYMBOLIC NAME
         MVC   LINEAREA(8),DISCON  MOVE IN DISCON'D
         B     FINSUPR             GO MODESET AND RESTORE OLD KEY
GETSYM   MVC   LINEAREA(8),TSBTRMID MOVE IN TERMINAL SYMBOLIC NAME
         MVC   VLOGMODE,TSBXLMOD   SAVE LOGMODE NAME                NTL
         MVC   TTYPE,TSBXTMTP      SAVE TERMINAL TYPE               NTL
*
         DROP  R8
FINSUPR  DS    0H
         L     R1,OLDKEY
         MODESET MF=(E,PROBLEM)
         STAX  MF=(E,RESUME)      OK TO HAVE ATTENTIONS NOW...
*
         DROP  R7
LINEFIN  LM    R3,R8,SAVEREGS
         L     R14,GETLR14          RESTORE RETURN ADDRESS        INTEL
         BR    R14
         EJECT ,
***********************************************************************
*
* FORMAT DATE TIME  HEADING FROM SMF30TME/SMF30DTE
*   R0=TIME IN 100THS OF SECOND SINCE MIDNIGHT
*   R1=DATE IN 00YYDDDS FORMAT
*
* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY HH:MM:SS.TH
*                E.G.       07JUL80 (189) MON 13:45:24.56
*                           123456789.123456789.123456789
*
***********************************************************************
DATERTN  CLI   JDATE,C'0'   HAVE WE BEEN HERE BEFORE
         BHR   R14           ALREADY DONE THIS STUFF...KISS OFF
         STM   R14,R3,SAVEREGS
         MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA
         TIME  BIN ,
         ST    R1,DATE                 SAVE DATE FOR LATER
         CVD   R0,WRKD                GET TIME IN DEC 100TH/SEC
         DP    WRKD(8),DEC6000(3) /6000 : REM IS SS.TH
         DP    WRKD(5),DEC60(2)       /60   : REM IS MM
         MVC   EDITWORK(L'HHMASK),HHMASK   SETUP MULT EDIT MASK
         ED    EDITWORK(L'HHMASK),WRKD EDIT HH,MM,SS
FINTIME  MVC   CHH(2),EDITWORK+4      MOVE IN HOURS
         MVC   CMM(2),EDITWORK+8      MOVE IN MM
         MVC   CSS(5),EDITWORK+12     MOVE IN SS.TH
*
***FORMAT THE DATE INTO THE OUTPUT MSG
*
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.
         XC    WRKD,WRKD
         MVC   WRKD+4(4),WORKWORD      CNVT YEAR TO BIN
         CVB   R0,WRKD
         ST    R0,BINYEAR              AND SAVE
         TM    BINYEAR+3,X'03'         LEAP YEAR?
         BNZ   MON1                    NO.
         MVI   MONMSK+10,29            YES, CORRECT
MON1     XC    WRKD,WRKD               CNVT DAYS TO BIN
         MVC   WRKD+6(2),DATE+2
         CVB   R3,WRKD
         ST    R3,BINDAYS              SAVE FOR LATER
         XR    R1,R1
         LA    R15,11
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY
         SR    R3,R1
         BNP   MONOVR
         BCT   R15,MON2
         B     *+6
         EJECT ,
MONOVR   AR    R3,R1                   CORRECT OVERDRAW
         CVD   R3,WRKD                 FORMAT DAY
         UNPK  CDAYN(2),WRKD+6(2)
         OI    CDAYN+1,X'F0'           FIX UP SIGN
         MH    R15,=H'3'               GET TABLE OFFSET
         LA    R15,MONTAB(R15)         AND POINT AT MONTH
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG
***DAY OF WEEK
         L     R15,BINYEAR
         SH    R15,=H'69'
         BNP   OUTT                    MUST BE GREATER OR BAD
         XR    R14,R14                 CLEAR DAY REG
         D     R14,=F'4'
         MH    R15,=H'5'
         AR    R14,R15
         A     R14,BINDAYS
         SRDA  R14,32
         D     R14,=F'7'               MODULO 7 FOR WEEK
         MH    R14,=H'09'
         LR    R0,R14                  SAVE THIS FOR LATER
         LA    R14,DAYTAB(R14)         POINT AT TODAY
         MVC   CDAY(09),0(R14)         INSERT IN MSG
         LR    R14,R0
         LA    R14,DAYTAB1(R14)        POINT AT TODAY-LEFT JUSTIFIED
         MVC   LEFTDAY,0(R14)          INSERT IN MSG
***
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'
         ED    JDATE-1(7),DATE+1
         MVI   JDATE-1,C'('          RESTORE NICE FORMAT....
         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE
*
*
DATEFIND LM    R14,R3,SAVEREGS
         BR    R14                     RETURN TO MAINLINE
*
OUTT     MVC   CDAY(9),=CL9'(UNKNOWN)'
         B     MOVEJD
         EJECT ,
*...................................................................NTL
*                                                                   NTL
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT            NTL
*                                                                   NTL
* ENTER WITH <R1>  = NUMBER IN BINARY                               NTL
*            BAL   R14,FITINUM                                      NTL
*                                                                   NTL
*                                                                   NTL
*       USES R1,R14,R15                                             NTL
*.................................................................. NTL
FITINUM  CVD   R1,WRKD        CONVERT TO PACKED DECIMAL             NTL
FITINUM1 MVC   EDITWORK(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT NTL
         MVC   NUMBER,BLANKS  CLEAR OUT NUMBER                      NTL
         LA    R1,EDITWORK+SIGNORM IN CASE OF ZEROES                NTL
         EDMK  EDITWORK(L'NORMAL),WRKD+2 CONVERT TO EBCDIC          NTL
         ST    R14,FITNR14     SAVE RETURN ADDRESS                INTEL
         LA    R14,EDITWORK+L'NORMAL-1 A(END OF CONVERTED NUMBER)   NTL
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1    NTL
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG             NTL
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                   NTL
         L     R14,FITNR14    RESTORE RETURN ADDRESS              INTEL
         BR    R14            RETURN TO OUR CALLER                  NTL
         SPACE 3                                                    NTL
MVNUMBER MVC   NUMBER(0),0(R1) MOVE NUMBER TO 'NUMBER' AREA         NTL
         SPACE 2                                                    NTL
NORMAL   DC    X'402020202020202020202020' EDIT MASK                NTL
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                  NTL
         EJECT ,
***********************************************************************
*
*       CONSTANTS FOR DATE ROUTINE USAGE
*
***********************************************************************
         SPACE ,
HHMASK   DC    X'40202021202022212020222120204B2020'
DEC60    DC    X'060C'
DEC6000  DC    X'06000C'
DEC50    DC    X'050C'
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES
*
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )
         DC    CL1' '                                          )
*                                                              )
*                 YY.DDD XXXXXXXXX, MON. DD, 19NN    L  T      )
*                0123456789.123456789.123456789.12   E  O      )
         DC    C' YY.DDD XXXXXXXXX, MON. DD, 19NN)'  A  G      )
         DC    CL3' ',C'  '                          E  E      )
         DC    CL2' ',C':'                           V  T      )
         DC    CL2' ',C':'                           E  H      )
         DC    CL5'SS.TH',C'  '                         E      )
*                                                       R      )
MVCLEN   EQU   *-XMONMSK
*
***********************************************************************
DAYTAB   DC    CL09'  TUESDAY'
         DC    CL09'WEDNESDAY'
         DC    CL09' THURSDAY'
         DC    CL09'   FRIDAY'
         DC    CL09' SATURDAY'
         DC    CL09'   SUNDAY'
         DC    CL09'   MONDAY'
DAYTAB1  DC    CL09'TUESDAY'
         DC    CL09'WEDNESDAY'
         DC    CL09'THURSDAY'
         DC    CL09'FRIDAY'
         DC    CL09'SATURDAY'
         DC    CL09'SUNDAY'
         DC    CL09'MONDAY'
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'
         SPACE
* OTHER  CONSTANTS                                                    *
         SPACE
HEXMASK  DC    4X'0F'
HEXTAB   DC    C'0123456789ABCDEF'
STARTING DC    CL8'STARTING'
DISCON   DC    CL8'DISCON''D'
BLANKS   DC    CL24' '       A BLANK LINE......                     NTL
         PRINT OFF
         DS    0F
CODE     DC    X'ABCFEDAD'
         PRINT ON
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
         DS    0F
DEFER    STAX  DEFER=YES,MF=L            HOLD DEM ATTENTIONS...
         SPACE 2
RESUME   STAX  DEFER=NO,MF=L             RESUME ATTENTION HANDLING..
         SPACE 2
GTTERME  GTTERM ATTRIB=*-*,PRMSZE=*-*,ALTSZE=*-*,MF=L               NTL
         SPACE 2                                                    NTL
SUPER    MODESET KEY=ZERO,MF=L                                      NTL
         SPACE 2                                                    NTL
PROBLEM  MODESET KEY=NZERO,MF=L                                     NTL
         EJECT
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE
         LTORG
         EJECT
*.....................................................................*
*        DYNAMIC STORAGE AREA -- GETMAINED                            *
*.....................................................................*
         SPACE
WORKAREA DSECT
SAVEAREA DS    18F
SAVEREGS DS    16F
RETCODE  DS    F
SETVR14  DS    F        RETURN REGISTER FOR SETVAR                INTEL
GETLR14  DS    F        RETURN REGISTER FOR GETLINE#              INTEL
FITNR14  DS    F        RETURN REGISTER FOR FITINUM               INTEL
*
ANS      DC    F'0'
ECB      DC    F'0'
PPLA     DS    7F
ECTADDR  EQU   PPLA+4,4
*
VLOGMODE DS    CL8                                                  NTL
TTYPE    DS    XL2                                                  NTL
LINEAREA DS    CL8,CL2 PLUS PADDING....
TCAMUCB  EQU   LINEAREA+3,8
ADDRASCB DS    F
*
OLDKEY   DC    F'0'
LEFTDAY  DC    CL9' '
PRMSZE   DS    0H                                                   NTL
PRMROWS  DS    AL1                                                  NTL
PRMCOLS  DS    AL1                                                  NTL
ALTSZE   DS    0H                                                   NTL
ALTROWS  DS    AL1                                                  NTL
ALTCOLS  DS    AL1                                                  NTL
GTTERMRC DS    X                                                    NTL
         DS    X                                                    NTL
CURROWS  DS    AL1                                                  NTL
CURCOLS  DS    AL1                                                  NTL
ATTRIB   DS    F                                                    NTL
CLRITL   EQU   *-PRMSZE   FOR XC CLEAR                              NTL
ATTRYORN DS    CL4                                                  NTL
WHERAMI  DS    CL8                                                  NTL
GTTERM   GTTERM ATTRIB=*-*,PRMSZE=*-*,ALTSZE=*-*,MF=L               NTL
GTTERML  EQU   *-GTTERM                                             NTL
WRKD     DC    D'0'
NUMBER   DS    CL8            FINAL PRODUCT OF CONVERT              NTL
         DS    CL8            FOR EXTRA STUFF                       NTL
BINYEAR  DC    F'0'
BINDAYS  DC    F'0'
DATE     DC    F'0'
WORKWORD DC    2F'0'
EDITWORK DC    12H'0'
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES
*
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )
         DC    CL1' '                                          )
*                                                              )
*                 YY.DDD XXXXXXXXX, MON. DD, 19NN    L         )
*                0123456789.123456789.123456789.12   E         )
CDATMSG  DC    C' YY.DDD XXXXXXXXX, MON. DD, 19NN)'  A         )
JDATE    EQU   CDATMSG+01,6                          V         )
CDAY     EQU   CDATMSG+08,9                          E         )
CMON     EQU   CDATMSG+19,3                                    )
CDAYN    EQU   CDATMSG+24,2                          T         )
CYR      EQU   CDATMSG+30,2                          O         )
CDATE    EQU   CDATMSG+19,13
*                                                    G         )
CJDAY    DC    CL3' ',C') '                          E         )
CHH      DC    CL2' ',C':'                           T         )
CMM      DC    CL2' ',C':'                           H         )
CSS      DC    CL5'SS.TH',C' )'                      E         )
*                                                    R         )
***********************************************************************
LEN      EQU   *-CDATMSG
WORKLEN  EQU   *-WORKAREA
         SPACE
GETINFO  CSECT
         EJECT
*.....................................................................*
*        PARSE PARAMETER LIST - KEYWORDS                              *
*.....................................................................*
         SPACE
*
         PRINT     NOGEN
PCL      IKJPARM
PGMRNAME IKJKEYWD
         IKJNAME   'PGMRNAME',SUBFLD=PGMFLD
BINNUMB  IKJKEYWD
         IKJNAME   'BIN',SUBFLD=BINFLD
PHONE    IKJKEYWD
         IKJNAME   'PHONE',SUBFLD=PHONFLD
DEST     IKJKEYWD
         IKJNAME   'DEST',SUBFLD=DESTFLD
JOBCLASS IKJKEYWD
         IKJNAME   'JOBCLASS',SUBFLD=JOBCFLD
MSGCLASS IKJKEYWD
         IKJNAME   'MSGCLASS',SUBFLD=MSGCFLD
SYSOUT   IKJKEYWD
         IKJNAME   'SYSOUT',SUBFLD=SYSOFLD
PROJECT  IKJKEYWD
         IKJNAME   'PROJECT',SUBFLD=PROJFLD
SRNUM    IKJKEYWD
         IKJNAME   'SRNUM',SUBFLD=SRNUFLD
JOBNUMB  IKJKEYWD
         IKJNAME   'JOBNUMB',SUBFLD=JOBNFLD
LINE     IKJKEYWD
         IKJNAME   'LINE',SUBFLD=LINEFLD
DAY      IKJKEYWD
         IKJNAME   'DAY',SUBFLD=DAYXFLD
JDATEV   IKJKEYWD
         IKJNAME   'JDATE',SUBFLD=JDATFLD
GDATEV   IKJKEYWD
         IKJNAME   'DATE',SUBFLD=DATEFLD
NOCOMPR  IKJKEYWD  ,
         IKJNAME   'NOCOMPR'
         EJECT
ROWS     IKJKEYWD
         IKJNAME   'ROWS',SUBFLD=ROWSFLD
COLS     IKJKEYWD
         IKJNAME   'COLS',SUBFLD=COLSFLD
PROWS    IKJKEYWD
         IKJNAME   'PROWS',SUBFLD=PROWSFLD
PCOLS    IKJKEYWD
         IKJNAME   'PCOLS',SUBFLD=PCOLSFLD
AROWS    IKJKEYWD
         IKJNAME   'AROWS',SUBFLD=AROWSFLD
ACOLS    IKJKEYWD
         IKJNAME   'ACOLS',SUBFLD=ACOLSFLD
ATTR     IKJKEYWD
         IKJNAME   'ATTR',SUBFLD=ATTRFLD
LOGMODE  IKJKEYWD
         IKJNAME   'LOGMODE',SUBFLD=LMODFLD
TERMTYPE IKJKEYWD
         IKJNAME   'TERMTYPE',SUBFLD=TTYPFLD
ENVIRON  IKJKEYWD
         IKJNAME   'ENVIRON',SUBFLD=ENVFLD
         EJECT
*.....................................................................*
*        PARSE PARAMETER LIST - SUBFIELDS                             *
*.....................................................................*
         SPACE
PGMFLD   IKJSUBF
PGMRDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
BINFLD   IKJSUBF
BINDD    IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
PHONFLD  IKJSUBF
PHONDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
DESTFLD  IKJSUBF
DESTDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
JOBCFLD  IKJSUBF
JOBCDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
MSGCFLD  IKJSUBF
MSGCDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
SYSOFLD  IKJSUBF
SYSODD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
PROJFLD  IKJSUBF
PROJDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
SRNUFLD  IKJSUBF
SRNUDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
JOBNFLD  IKJSUBF
JOBNDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
LINEFLD  IKJSUBF
LINEDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
DAYXFLD  IKJSUBF
DAYXDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
JDATFLD  IKJSUBF
JDATDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
DATEFLD  IKJSUBF
DATEDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
          EJECT   ,                                                 NTL
ROWSFLD  IKJSUBF
ROWSDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
COLSFLD  IKJSUBF
COLSDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
PROWSFLD IKJSUBF
PROWSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
PCOLSFLD IKJSUBF
PCOLSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
AROWSFLD IKJSUBF
AROWSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
ACOLSFLD IKJSUBF
ACOLSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
ATTRFLD  IKJSUBF
ATTRDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
LMODFLD  IKJSUBF
LMODDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
TTYPFLD  IKJSUBF
TTYPDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
ENVFLD   IKJSUBF
ENVDD    IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR
         IKJENDP
         PRINT     GEN
         EJECT
*.....................................................................*
*        JCT MAPPING MACRO                                            *
*.....................................................................*
         SPACE
         SPACE 2                                                  INTEL
         AIF   (NOT &SP3).$$SKP9                                  INTEL
TSO051   CSECT   ,                                                INTEL
         $BUFFER   ,                                              INTEL
         #ACFJCTX  ,       ACF2 3.1.3                             INTEL
TSO051   CSECT   ,                                                INTEL
         AGO   .$$SKP9A                                           INTEL
.$$SKP9  ANOP  ,                                                  INTEL
.$$SKP9A ANOP  ,                                                  INTEL
         $JCT  DOC=YES
         SPACE 2
*.....................................................................*
*        OVERLAY DEFINITIONS FOR JOB ACCOUNT NUMBER                   *
*.....................................................................*
         SPACE
NTLPROJ  EQU   LIDACCT,4
NTLSRNUM EQU   LIDACCT+4,4
         EJECT
*.....................................................................*
*       MAPPING MACROS                                                *
*.....................................................................*
         SPACE
         PRINT NOGEN                                              INTEL
         IHAASCB
         IKJTSB   LIST=YES,EXT=YES
         AIF   (NOT &TONE4).$SKP99                                TONE4
         TPCDATA  ,                                               TONE4
.$SKP99  ANOP  ,                                                  TONE4
         END ,
