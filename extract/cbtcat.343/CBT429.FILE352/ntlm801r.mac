*          DATA SET NTLM801R   AT LEVEL 001 AS OF 06/25/82
PDSREAD  TITLE 'NTLM801R - READ PDS LOGICAL RECORD SUBROUTINE V1M0'
*.....................................................................*
*                                                                     *
* PROGRAM: NTLM801R                                                   *
*                                                                     *
* PURPOSE: READ AND RETURN THE NEXT SEQUENTIAL RECORD OF A BLOCKED    *
*          PDS MEMBER.                                                *
*                                                                     *
* INVOKED BY: NTLM801 - TRANSPARENT LOADER SUBROUTINE                 *
*                                                                     *
* NTLM801 CALLING SEQUENCE (ASM):                                     *
*                                                                     *
*   CALL  NTLM801,(DDNMBR,RETCODE,RECORD),VL=1                        *
*                                                                     *
*   WHERE:                                                            *
*   -------------------+----------------------+--------------------   *
*   DDNMBR  DS  0F     ×  RETCODE    DS  F    ×  RECORD   DS  CL80    *
*   DDN     DC  CL8' ' ×                      ×                       *
*   MBR     DC  CL8' ' ×                      ×                       *
*   FILL2   DS  F      ×                      ×                       *
*   FILL3   DS  F      ×                      ×                       *
*   -------------------+----------------------+--------------------   *
*                                                                     *
*   DDN=DDNAME FOR DD CARD POINTING TO PDS TO READ                    *
*   MBR=NAME OF MEMBER IN PDS POINTED TO BY <DDN> TO BE READ          *
*       NOTE: SET TO 8X'FF' (COBOL "HIGH-VALUE") TO END OPERATIONS    *
*             WHICH WILL CLOSE THE PDS FOR ACCESS.                    *
*   RECORD=80 BYTE NEXT RECORD FROM PDS MEMBER                        *
*                                                                     *
*   ON RETURN:                                                        *
*                                                                     *
*     R15, AND RETCODE=0 - NO PROBLEMS                                *
*     R15, AND RETCODE=4 - END OF DIRECTORY                           *
*     R15, AND RETCODE=8 - SERIOUS ERROR                              *
*                                                                     *
* KEN TRUE - 25 JUNE 82 - FROM O051A801 FROM MIKE FARMER              *
*                                                                     *
*                                                                     *
*.....................................................................*
         SPACE
         PRINT  OFF   LOCAL MACROS BE HERE --CODE STARTS ABOUT LINE 451
         MACRO
&TAG     FMSTART  &BASE=R12,&RETURN=RETURN,&RC=,&T=,&PRINT=NO,&PREF=,  X
               &GM=GMLENG,&ZAP=30,&SP=39,&SA=SAVEAREA,&LNK=,           X
               &MBR=NEEDED
         GBLC  &FMGSA,&FMGGM      COMMUNICATE TO THE WORK ENTRIES
         LCLA  &SX                ABBREVIATION OF SYSNDX
         LCLA  &X,&Y              FOR STDSUB CHAINING TO FIND GM AREA
         LCLB  &NORENT,&SUBSYS,&SVRSYS,&RENT,&STDSUB  TYPES OF GEN
         LCLB  &STDSWK            MORE GEN TYPES
&SX      SETA  &SYSNDX            TRUNCATE THE ZEROES OFF TAGS
&Y       SETA  3                  AN OBVIOUS WRONG ANSWER
         AIF   (T'&PREF EQ 'O').NOPREF NO PREFIX GIVEN - USE DEFAULT
.NOPREF  ANOP                     END OF PREFIX ROUTINE
.*
         AIF   (T'&T NE 'O').A100
&NORENT  SETB  1
         AGO   .A999
.A100    AIF   ('&T' NE 'SUBSYS').A200
         AIF   (T'&LNK NE 'O' AND T'&GM NE 'O').A110
         MNOTE  8,'NEED LNK AND GM'
         AGO   .EXIT
.A110    ANOP
&SUBSYS  SETB  1
         AGO   .A999
.A200    AIF   ('&T' NE 'SVRSYS').A300
         AIF   (T'&LNK NE 'O' AND T'&GM NE 'O'AND T'&MBR NE 'O').A210
         MNOTE  8,'NEED LNK ,GM AND MBR'
         AGO   .EXIT
.A210    ANOP
&SVRSYS  SETB  1
         AGO   .A999
.A300    AIF   ('&T' NE 'RENT').A400
         AIF   (T'&GM NE 'O').A310
         MNOTE  8,'GM FOR RENT'
         AGO   .EXIT
.A310    ANOP
&RENT    SETB  1
         AGO   .A999
.A400    AIF   ('&T' NE 'STDSUB').A500
         AIF   (T'&LNK(1) NE 'O').A410
         MNOTE 8,'NEED  NUMERICS FOR LNK WITH STDSUB'
         AGO   .EXIT
.A410    ANOP
&X       SETA  &LNK(1)
         AIF   (T'&LNK(2) EQ 'O').A420
&Y       SETA  &LNK(2)
.A420    ANOP
         AIF   (T'&GM NE 'O').A430
         MNOTE  8,'NEED GM FOR STD SUBROUTINES'
         AGO   .EXIT
.A430    ANOP
&STDSUB  SETB  1
         AGO   .A999
.A500    AIF   ('&T' NE 'STDSWK').A600
         AIF   (T'&LNK(1) NE 'O' AND T'&LNK(2) NE 'O').A510
         MNOTE 8,'NEED 2 NUMERICS FOR LNK WITH STDSWK'
         AGO   .EXIT
.A510    ANOP
&X       SETA  &LNK(1)
&Y       SETA  &LNK(2)
         AIF   (T'&GM NE 'O').A520
         MNOTE  8,'NEED GM FOR STD SUBROUTINES'
         AGO   .EXIT
.A520    ANOP
&STDSWK  SETB  1
         AGO   .A999
.*             HAVE DEFINED A PROBLEM HERE
.A600    ANOP
         MNOTE 8,'T MUST BE ONE OF THE STANDARD SET'
         AGO   .EXIT
.A999    ANOP
.*
.*
&TAG     CSECT
         B     STR&SX-&TAG.(,R15)
         USING &TAG,&BASE(1)
         DC    AL1(ZAP&SX-*-1),CL8'&TAG'   LENGTH AND ID
         FMCREDT
ZAP&SX   DC    &ZAP.S(*)          ZAP AREA
         PUSH  PRINT
         AIF   ('&PRINT' NE 'NO').NP1X
         PRINT NOGEN
.NP1X    ANOP
.*
.*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
.*
.*                   THE CONSTANTS AS NEEDED BY VARIOUS POSSIBILITIES
         AIF   (&NORENT).INTSA
.*                   THINGS FOR ALL EXCEPT THE NON-REENTRANT ONES
&FMGSA   SETC  '&SA'              PASS DSECT NAME OF WORKAREA/SAVEAREA
&FMGGM   SETC  '&GM'              LENGTH OF GOTTEN MAIN AREA, IF ANY
         AGO   .NORX
.INTSA   ANOP
&SA      DC    9D'0'             SAVEAREA
.NORX    ANOP
.*
.*
         AIF   (NOT &RENT AND NOT &STDSUB AND NOT &STDSWK).NOGMS
GMS&SX   DC    0F'0',AL1(&SP),AL3(&GM)  GETMAIN SUBPOOL/SIZE
.NOGMS   ANOP
.*
         AIF   (NOT &SVRSYS).NOMBR
NLM&SX   DC    CL8'&MBR'          NAME OF THE WORKAREA
.NOMBR   ANOP
.*
         AIF   (N'&BASE EQ 1).BAS1X
BAS2&SX  DC    A(&TAG+4096)       FOR SECOND BASE
         AIF   (N'&BASE EQ 2).BAS1X
BAS3&SX  DC    A(&TAG+8192)       AND THE THIRD
         AIF   (N'&BASE LE 3).BAS1X
         MNOTE  8,'THREE BASES SHOULD BE ENOUGH.....'
         AGO   .EXIT
.BAS1X   ANOP
.*
         AIF   (T'&RETURN EQ 'O').ENDRT ANY RETURN LOGIC WANTED
&RETURN  DS    0H
         AIF   (T'&RC EQ 'O').RCSET
         LA    R15,&RC            INSERT PRESET RETURN CODE
.RCSET   ANOP
.*                   IF THE NORMAL NON-REENTRANT IS IN VOGUE
         AIF   (NOT &NORENT).B100
         L     R13,4(,R13)        POINT BACK ONE SAVEAREA
         AGO   .B999
.*                   SUBSYSTEM EXIT
.B100    AIF   (NOT &SUBSYS).B200
         ST    R13,&LNK.(,R11)     FREE THIS SAVEAREA
         L     R13,4(,R13)        BACK UP ONE SAVEAREA
         AGO   .B999
.*                   SUBSYSTEM SUPERVISOR EXIT
.B200    AIF   (NOT &SVRSYS).B300
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         LR    R3,R0
         LR    R2,R15
         LA    R0,NLM&SX          NAME OF THE WORKAREA
         SVC   9                  DELETE THE LITTLE FELLA
         LR    R0,R3
         LR    R15,R2
         L     R1,24(,R13)        PICK UP ORIGINAL R1
         L     R2,&X.(,R1)        PICK UP PREDEFINED POINTER
         XC    &Y.(4,R2),&Y.(R2)  CLEAR THE GM POINTER
         AGO   .B999
.*                   STD REENTRANT - FREE THE SAVE/WORK
.B300    AIF   (NOT &RENT).B400
         LR    R3,R0              SAVE THE RETURN CODES
         LR    R2,R15             .
         L     R0,GMS&SX          LENGTH/SUBPOOL VALUE
         LR    R1,R13             START OF THE GOTTEN STUFF
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         SVC   10                 FREE THE GOTTEN CORE
         LR    R0,R3              RESET THE RETURN CODES
         LR    R15,R2             .
         AGO   .B999
.*                  STANDARD SUBROUTINE - CONDITIONAL FREEING
.B400    AIF   (NOT &STDSUB).B500
         CLI   0(R13),X'FF'       CODE FOR ALL OVER
         BE    *+12               YES - TO SPECIAL FREEING
         L     R13,4(,R13)        NORMAL RETURN SO FAR
         B     SSBX&SX            TO STD RETURN
         L     R0,GMS&SX          FREE THE GOTTEN MAIN
         LA    R1,0(,R13)         CLEAN POINTER TO THE MAIN
         L     R13,4(,R13)        BACK OUT OF SAVE/WORK
         LR    R3,R0              SAVE THE RETURN CODES
         LR    R2,R15             .
         SVC   10                 FREE THE GOTTEN CORE
         L     R15,24(,R13)       THE ORIGINAL R1
         L     R15,&X.(,R15)      FOLLOW THE POINTER CHAIN
         AIF   (&Y EQ 3).B410
         L     R15,&Y.(,R15)      TO ITS SAVEAREA POINTER
.B410    ANOP
         XC    0(4,R15),0(R15)    CLEAR SAVE/AREA POINTER
         LR    R0,R3
         LR    R15,R2
SSBX&SX  EQU   *
         AGO   .B999
.*                   FOR THE SPECIAL SUBROUTINE TYPE - WITH SA
.B500    AIF   (NOT &STDSWK).B600
         L     R13,4(,R13)        POINT BACK ONE SAVEAREA
         AGO   .B999
.*                   WELL - SEEMS TO BE AN INTERNAL ERROR HERE
.B600    ANOP
         MNOTE  12,'NO INDICATOR SET FOR TYPE OF GEN'
         AGO   .EXIT
.*
.B999    ANOP
         L     R14,12(,R13)
         LM    R1,R12,24(R13)
         MVI   12(R13),X'FF'      EXIT INDICATOR
         BR    R14
.ENDRT   ANOP
.*
.*                                THE START OF THE ENTRY LOGIC
STR&SX   STM   R14,R12,12(R13)
         LR    &BASE(1),R15
         AIF   (N'&BASE EQ 1).BAS2X
         L     &BASE(2),BAS2&SX
         USING &TAG+4096,&BASE(2)
         AIF   (N'&BASE EQ 2).BAS2X
         L     &BASE(3),BAS3&SX
         USING &TAG+8192,&BASE(3)
.BAS2X   ANOP
.*
         AIF   (NOT &NORENT).C100
         LA    R15,&SA            POINTER TO DEFINED SAVEAREA
         XC    12(60,R15),12(R15)   CLEAR THE SAVEAREA
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15
         AGO   .C999
.*                   IF THIS IS FOR A SUBSYSTEM POINTER SETUP
.C100    AIF   (NOT &SUBSYS AND NOT &SVRSYS).C200
         LR    R2,R13             SAVE CURRENT SA FOR R15/R2 RELOAD
         AIF   (&SUBSYS).C110     NORMAL TYPE - JUST RECHAIN SA
.*                   SUBSYSTEM SVR - LOAD THE WORKAREA
         LA    R0,NLM&SX          POINT TO THE MEMBER NAME
         SR    R1,R1              NO DCB ALLOWED
         SVC   8                  LOAD THE MODULE
         LR    R11,R0             ADDRESS THAT WORKAREA
.C110    ANOP                     STACK DOWN THE SAVEAREAS
         L     R15,&LNK.(,R11)    POINTER TO START OF OPEN AREA
         ST    R13,4(,R15)        CROSS-CHAIN THE SAVE-AREAS
         ST    R15,8(,R13)        .
         LR    R13,R15            HAVE THE NEW SAVE-AREA
         LA    R15,&GM+31         REQUESTED WORKAREA SIZE
         SRL   R15,5              ALIGN ON CORE-DUMP BOUNDARY
         SLL   R15,5              .
         LA    R15,0(R15,R13)     POINT TO END OF WORKAREA
         C     R15,&LNK+4(,R11)   STILL INSIDE WORKAREA
         BNH   CLR&SX+6           SO FAR, SO GOOD
         EX    R0,*               OOPS
CLR&SX   XC    12(0,R13),12(R13)
         ST    R15,&LNK.(,R11)     SHOW NEW END OF SAVEAREA
         LA    R15,&GM-13
         LA    R14,255            OTHER ALTERNATIVE CLEARING SIZE
         CR    R15,R14
         BL    *+6                SELECT THE LESSER OF TWO IEWAALSS
         LR    R15,R14
         EX    R15,CLR&SX
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R15,R2,16(R2)      REESTABLIST THE CRITICAL POINTERS
         AGO   .C999
.*                   HOW ABOUT THE STRAIGHT REENTRANT VERSION
.C200    AIF   (NOT &RENT).C300
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4
         SVC   10
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R15,R13            SAVE THE OLD SA POINTER
         LR    R13,R1             NEW SA POINTER SET
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R15,R1,16(R15)     RESET THE CRITICAL POINTERS
         AGO   .C999              AND ON TO FINAL GENERATION
.*                   CODE FOR STANDARD SUBROUTINE ENTRY
.C300    AIF   (NOT &STDSUB).C400
         AIF   (&Y EQ 3).C310     SPECIAL ONE-POINTER CASE
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         L     R15,&Y.(,R15)      HOW FAR INTO AREA IS SAVEAREA POINTER
         LTR   R15,R15            IS THERE ANYTHING THERE
         BNZ   SSBS&SX            YES - USE IT
         L     R2,&X.(,R1)        REPOINT TO THE ENTRY
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4             INDICATE GETMAIN
         SVC   10                 AND ISSUE THE SVC
         ST    R1,&Y.(,R2)        RECORD THIS POINTER FOR EVER
         AGO   .C320
.C310    ANOP                     FOR THE SINGLE-POINTER CASE
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         LTR   R15,R15            IS THERE ANYTHING THERE
         BNZ   SSBS&SX            YES - USE IT
         LA    R2,&X.(,R1)        REPOINT TO THE ENTRY
         L     R0,GMS&SX          SUBPOOL AND LENGTH
         BAL   R1,*+4             INDICATE GETMAIN
         SVC   10                 AND ISSUE THE SVC
         ST    R1,0(,R2)          RECORD THIS POINTER FOR EVER
.C320    ANOP                     REJOIN NORMAL PATH...
         LR    R15,R1             REPOINT PROPERLY
         MVC   72(8,R15),5(R12)   MOVE PGM NAME TO WORKAREA
         LM    R0,R2,20(R13)      REESTABLISH THOSE DESTROYED REGISTERS
SSBS&SX  EQU   *
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15            NEW SA POINTER SET
         MVI   0(R13),X'00'       CLEAR POSSIBLE EXIT POINTER
         USING &SA,R13            ADDRESS THE WORKAREA
         AGO   .C999
.*                   CODE FOR STANDARD SUBROUTINE WITH SAVEAREA PASSED
.C400    AIF   (NOT &STDSWK).C500
         L     R15,&X.(,R1)       HOW FAR OFF R1 IS THE POINTER
         LA    R15,&Y.(,R15)      HOW FAR INTO AREA IS SAVEAREA POINTER
         ST    R13,4(,R15)
         ST    R15,8(,R13)
         LR    R13,R15            NEW SA POINTER SET
         USING &SA,R13            ADDRESS THE WORKAREA
         MVC   72(8,R13),5(R12)   MOVE PGM NAME TO WORKAREA
         AGO   .C999
.*
.C500    ANOP                     LOOKS LIKE A PROBLEM
         MNOTE  12,'INTERNAL ERROR IN GENERATION TYPE'
         AGO   .EXIT
.C999    ANOP
.*
.*
.EXIT    ANOP
         POP   PRINT
         MEND
         MACRO
         FMCREDT
         DC    C' &SYSDATE &SYSTIME INTEL-CIS '
         MEND
         MACRO
&TAG     FMBLOCK &P,&RENT=YES
         GBLC  &FMGPREF(50)       SAVE ROOM FOR PREFIXES
         GBLA  &FMGSUB            POINTER TO NEXT PREFIX
         LCLC  &PF                THE PREFIX DECIDED UPON FOR THIS ONE
         LCLA  &WPF               USED IN GENERATING THE RENT=REGS
.*
         AIF   ('&RENT' NE 'REGS').GBLK      GENERATE NORMAL BLOCK
         AIF   (&FMGSUB NE 0).GREGS          GEN REGS IF ANY NEEDED
         MNOTE *,'       NO ENTRIES'
         AGO   .EXIT2
.GREGS   ANOP                     GENERATE THE REG SAVE-WORDS
&WPF     SETA  &WPF+1             POINT ON TO NEXT ENTRY
&PF      SETC  '&FMGPREF(&WPF)'   NAME OF THE NEXT PREFIX
&PF.R14  DS    F
         AIF   (&WPF LT &FMGSUB).GREGS AND DO THEM ALL
&FMGSUB  SETA  0                  RE-CLEAR THE VALUE
         AGO   .EXIT2             END OF RENT=REGS GENERATION
.*
.*
.GBLK    ANOP
         AIF   (T'&P EQ 'O').DEFLP DEFAULT THE PREFIX
         AIF   (K'&P LE 4).PLNOK  LENGTH OF PROVIDED IS OK
         MNOTE 8,'ONLY 4 CHARACTERS MAX FOR PREFIX'
         AGO   .EXIT
.PLNOK   ANOP
&PF      SETC  '&P'               USE PROVIDED PREFIX
         AGO   .PFSET
.DEFLP   ANOP                     BUILD DEFAULT PREFIX ID
         AIF   (K'&TAG LE 4).SMALTAG
&PF      SETC  '&TAG'(1,4)        USE FIRST FOUR CHARS OF TAG
         AGO   .PFSET
.SMALTAG ANOP                     USE FULL TAG AS PREFIX
&PF      SETC  '&TAG'
.PFSET   ANOP                     THE PREFIX IS DECIDED UPON.....
         AIF   ('&RENT' EQ 'YES').HAVRENT
         AIF   (&FMGSUB NE 0).HAVRENT
&PF.R14  DC    F'0'               HOLD RETURN ADDR
         AGO   .GENCODE
.HAVRENT ANOP
&FMGSUB  SETA  &FMGSUB+1
&FMGPREF(&FMGSUB)  SETC  '&PF'    SAVE PREFIX IN TABLE FOR LATER
.*
.GENCODE ANOP
&PF.EXIT L     R14,&PF.R14        RETURN ADDR
         MVI   &PF.R14,X'FF'      SHOW EXIT
         BR    R14                EXIT
&TAG     ST    R14,&PF.R14        SAVE RETURN
.*
.EXIT    ANOP
         SPACE 1
.EXIT2   ANOP
         MEND
         MACRO
         FMWORK1
         GBLC  &FMGSA,&FMGGM
&FMGSA   DSECT
         DS    18F                SAVEAREA
         DS    CL8                IDENTIFIER OF THE OWNER OF THIS
         FMBLOCK  RENT=REGS
         MEND
         MACRO
         FMWORK2  &ROUND
         GBLC  &FMGSA,&FMGGM
         LCLA  &RD,&SX
&RD      SETA  32                 DEFAULT AMOUNT TO ROUND
&SX      SETA  &SYSNDX            TO ABBREVIATE THE SUFFIX
         AIF   (T'&ROUND EQ 'O').RDSET
         AIF   ('&ROUND' EQ 'DUMP').RDSET   ALIGN TO DUMP SIZE
         AIF   ('&ROUND' NE 'PAGE').RDNUM
&RD      SETA  4096               SET TO PAGE SIZE
         AGO   .RDSET
.RDNUM   ANOP                     GAVE AN ACTUAL NUMBER
&RD      SETA  &ROUND
.RDSET   ANOP
ETL&SX   EQU   *-&FMGSA           LENGTH OF ALLOCATED PART
ELX&SX   EQU   &RD*(1+ETL&SX/&RD)-ETL&SX
         DS    CL(ELX&SX)         FILLER
&FMGGM   EQU   *-&FMGSA           LENGTH OF WORKAREA
         MEND
         PRINT  ON
         EJECT
NTLM801R FMSTART   T=STDSUB,GM=WKLENG,LNK=(0,16),PRINT=YES
         EJECT
         LR    R10,R1             SAVE THE PARM POINTER
         USING PASSWORK,R9
         L     R9,0(,R10)         ADDRESS THE WORK BLOCK
*
         CLC   WKDDNAM,PWKDDNAM   DDNAMES MATCH?
         BE    *+8                YES - CARRY ON
         BAL   R14,NEWDDNAM       NO - POSSIBLE INITIALIZATION HERE
         CLC   PWKMBR,WKMBR       IS THE MEMBER STILL THE SAME
         BE    *+8                YES - CARRY ON WITH IT
         BAL   R14,NEWMEMBR       POINT FOR THIS NEW MEMBER
*
         LM    R4,R6,WKRSAV       PICK UP PROPER POINTERS
         BXLE  R6,R4,HAVNEXT      LOOP THROUGH THIS BUFFER
*                    EXHAUSTED CURRENT BUFFER - READ NEXT ONE
         XC    WKRDECB,WKRDECB
         READ  WKRDECB,SF,MF=E
         CHECK WKRDECB
*                   AND WE NOW HAVE A SHINY NEW BLOCK
         L     R6,WKBUFFR         RESET POINTER TO START
         L     R2,WKRDECB+16      PICK UP IOB POINTER
         LH    R2,14(,R2)         PLUCK OUT THE RESIDUAL COUNT
         LH    R5,DCBBLKSI-IHADCB+WKDCB  PICK UP THE BLOCKSIZE
         SR    R5,R2              AND THIS IS THE AMOUNT READ
         LA    R5,0(R6,R5)        POINT TO END OF IT
         LA    R4,80              SIZE OF A LOGICAL RECORD
         SR    R5,R4              POINT TO START OF LAST CARD
*
HAVNEXT  EQU   *                  THE NEXT RECORD IS READY
         STM   R4,R6,WKRSAV       SAVE THEM ALL BACK
         L     R1,8(,R10)         HIS RECEIVING BUFFER POINTER
         MVC   0(80,R1),0(R6)     MOVE OVER THE LOGICAL RECORD
         SR    R15,R15            THE PROPER RETURN CODE
         B     SETRC
*
ENDOFILE EQU   *                  END OF THIS MEMBER REACHED
         LA    R15,4
         XC    WKRSAV(12),WKRSAV  CLEAR THE POINTER AREA
         B     SETRC
         EJECT
*                   HE HAS CHANGED THE DDNAME - ASSUME A COMPLETE
*                   RESTART.
*
NEWDDNAM FMBLOCK  NDD
         TM    WKDCB+48,X'10'     IS ONE NOW OPEN
         BZ    NDDCLOZD
         L     R1,WKBUFFR         POINT TO OLD BUFFER ADDRESS
         L     R0,WKBUFFR+4
         FREEMAIN  R,LV=(0),A=(1)
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'
         CLOSE  MF=(E,WKOPEN)
NDDCLOZD EQU   *
*
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'       OPEN FOR INPUT
         MVC   WKDCB(LBPAMDCB),BPAMDCB SET IN THE DCB
         MVC   DCBDDNAM-IHADCB+WKDCB,PWKDDNAM  INSERT THE DDNAME
         MVC   WKDDNAM,PWKDDNAM   UPDATE INTERNAL RECORDS, TOO
         OPEN  MF=(E,WKOPEN)
         LH    R1,DCBBLKSI-IHADCB+WKDCB
         ST    R1,WKBUFFR+4       BUFFER LENGTH
         MVI   WKBUFFR+4,8        SUBPOOL NUMBER FOR BUFFER
         L     R0,WKBUFFR+4       SUBPOOL AND LENGTH
         GETMAIN R,LV=(0)
         ST    R1,WKBUFFR         RECORD LOCATION OF THE BUFFER
         ST    R1,WKRDECB+12      SAVE AREA ADDRESS IN THE DECB
         LA    R1,WKDCB           SET DCB POINTER INTO THE DECB
         ST    R1,WKRDECB+8       INTO THE DECB PROPERLY
         LA    R1,ENDOFILE        THE END OF MEMBER ADDRESS
         ST    R1,DCBEODAD-IHADCB+WKDCB INTO THE DCB
         XC    WKMBR,WKMBR        CLEAR THE MEMBER NAME TO TRIGGER NEXT
         B     NDDEXIT
         EJECT
*                    THE MEMBER NAME HAS CHANGED -
*                    SET UP FOR THE NEW ENTRY WITH A REFIND
*
NEWMEMBR FMBLOCK  NMBR
         CLC   PWKMBR,GOAWAY      IS THIS THE FINAL CALL
         BE    NMBRGOAW           YES - GO
         FIND  WKDCB,PWKMBR,D
         LTR   R15,R15            IT BETTER BE THERE
         BNZ   NMBRMISS
         XC    WKRSAV(12),WKRSAV
         LA    R1,1               SET AN INCREMENT TO MISS WITH
         ST    R1,WKRSAV          TO FORCE THE READ
         MVC   WKMBR,PWKMBR      THIS IS NOW THE ACTIVE MEMBER
         SR    R15,R15
         B     NMBREXIT
*
NMBRMISS EQU   *
         LA    R15,8              CODE FOR SOMETHING SERIOUS
         B     SETRC              AND GET OUT OF HERE
*
NMBRGOAW EQU   *                  EOF CALL - CLEAR OUT
         TM    WKDCB+48,X'10'     IS ONE NOW OPEN
         BZ    NMBRNOPN
         L     R1,WKBUFFR         POINT TO OLD BUFFER ADDRESS
         L     R0,WKBUFFR+4
         FREEMAIN  R,LV=(0),A=(1)
         LA    R2,WKDCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'
         CLOSE  MF=(E,WKOPEN)
NMBRNOPN EQU   *
         MVI   0(R13),X'FF'       TELL ENTER TO EXIT
         LA    R15,4              CODE FOR EOF WITH EMPHASIS
         B     SETRC              AND TO THE FINAL SOLUTION
         SPACE 2                                                    NTL
SETRC    L     R1,4(,R10)         GET ADDRESS OF RETURN CODE        NTL
         STCM  R15,B'1111',0(R1)  SAVE AWAY RETURN CODE             NTL
         B     RETURN             AND SPLIT BACK TO CALLER          NTL
         EJECT
*                    CONSTANTS OF USE IN THE PROCESS
GOAWAY   DC    8X'FF'
         READ  PORDECB,SF,BPAMDCB,0,MF=L
LREAD    EQU   *-PORDECB
*
         LTORG
*
BPAMDCB  DCB   DDNAME=NEEDED,DSORG=PO,MACRF=R,RECFM=FB
LBPAMDCB EQU   *-BPAMDCB
*
         EJECT
PASSWORK DSECT
PWKDDNAM DS    CL8                DDNAME OF THE PDS TO READ
PWKMBR   DS    CL8                MEMBER NAME OF INTEREST
PWKGETMN DS    F                  ADDRESS OF THE GOTTEN MAIN
PWKFILL  DS    F                  ADDITIONAL FILLER IN ANCHOR AREA
PWKLENG  EQU   *-PASSWORK
         EJECT
         FMWORK1
WKMBR    DS    CL8                NAME OF THE MEMBER BEING READ
WKDDNAM  DS    CL8                DDNAME OF THE FILE WORKED OVER
WKBUFFR  DS    2F                 START AND LENGTH OF THE BUFFER
WKOPEN   DS    F                  FOR LIST FORM OF THE OPEN
WKRSAV   DS    3F
WKRDECB  DS    0D,CL(LREAD)          FOR THE READ EXPANSION
WKDCB    DS    0D,CL(LBPAMDCB)
         FMWORK2
         EJECT
         PRINT NOGEN
         IHADCB  DSORG=PO,DEVD=DA
         END
