*          DATA SET TSO034     AT LEVEL 003 AS OF 07/22/81
*          DATA SET TSO034     AT LEVEL 002 AS OF 07/22/81
*          DATA SET TSO034     AT LEVEL 001 AS OF 09/15/77
         PRINT OFF
         MACRO
&NAME    PGM   &BASE=R12,&SAVE=$$SAVE,&START=$$START,&EOJ=$$EOJ,&RC=16
&NAME    CSECT
         B     14(0,R15)           BRANCH AROUND PROGRAM ID.
         DC    AL1(8)              CSECT NAME LENGTH.
         DC    CL8'&NAME'          CSECT IDENTIFIER.
         DC    X'FF'               FILLER.
         STM   R14,R12,12(R13)     STORE THE REGISTERS.
         BALR  &BASE,0             ESTABLISH ADDRESSABILITY.
         USING *,&BASE             TELL ASSEMBLER ABOUT BASE REGISTER.
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         LA    R15,&SAVE           ADDRESS OF OUR SAVE AREA.
         ST    R13,4(R15)          BACKWARD SAVE AREA CHAIN.
         ST    R15,8(R13)          FORWARD SAVE AREA CHAIN.
         LR    R13,R15             POINT R13 TO CURRENT SAVE AREA.
         B     &START              BRANCH TO ENTRY CODE.
&EOJ     CH    R15,$$RC            IS RETURN CODE HIGHER THAN &RC?
         BNH   *+6                 YES - LETS ZERO R15.
         SR    R15,R15             ZERO OUT REGISTER 15.
         L     R13,&SAVE+4         POINT R13 TO PREVIOUS SAVE AREA.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE REGISTERS.
         BR    R14                 RETURN TO OS.
&SAVE    DS    18F                 OUR SAVE AREA.
$$RC     DC    H'&RC'              RETURN CODE.
$$START  DS    0H                  DEFAULT ENTRY POINT.
         MEND
         PRINT ON
TSO034   TITLE 'SYSMAINT - PGM TO CALLRTM TO ZAP ADDRESS SPACES'
*.....................................................................*
*                                                                     *
*                                                                     *
* SYSMAINT PROGRAM - TO CALL RECOVERY TERMINATION MANAGER TO          *
*  'NAIL' A DISCONNECTED (GHOST) TSO USER AND CAUSE MEMORY TERMINATION*
*                                                                     *
* K TRUE     15DEC76   MVS3.7.0                                       *
*            18AUG77 15 SEP 77                                        *
* B WILLIAMS 22JUL81   MVS3.8 (SE2) ACF/VTAM                          *
*                                                                     *
*  REQUIRES MACROS FROM SYS1.AMODGEN (CVT,CSCB,ASCB,ASVT,TSBX)        *
*  RUNS UNDER TSO (FOR OPER PRIVLEDGE USER) OR AS STC.                *
*.....................................................................*
         SPACE
TSO034   PGM    ,   SYSMAINT PGM....
         EJECT
LINKREG  EQU   6                   LINK REGISTER
         EXTRACT MF=(E,EXTRACT)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         TM    TSOFLAG,X'80'        ARE WE ONLINE
         BNO   INITAL                 NO..GO GO INITIALIZE
         EXTRACT MF=(E,EXTRPSCB)      YES..CHECK FOR OPER PRIVLEDGE
         L     R1,ANSWER
         USING PSCB,R1
CHKOPER  TM    PSCBATR1,PSCBCTRL      DOES USER HAVE OPER PRIVLEDGE
         BO    INITAL                 YES..GO ALLOW OPERATION
         DROP  R1
         LA    R1,EMSG3
         BAL   LINKREG,PUTMSG
         B     $$EOJ
         EJECT
*.....................................................................*
*                                                                     *
*  ISSUE LOAD MACROS FOR THE OTHER MODULES WHICH MAY BE INVOKED.      *
*     THIS WILL SAVE TIME LATER WHEN INVOKING THEM.                   *
*.....................................................................*
         SPACE 2
INITAL   LOAD  EP=DJOBS
         ST    R0,$DJOBS        SAVE ENTRY POINT ADDRESS
         SPACE 2
* PULL THIS COMMENT WHEN DTSO DTAPES AND WHOGOT IS INSTALLED..... BW
*        LOAD  EP=DTSO
*        ST    R0,$DTSO         SAVE ENTRY POINT ADDRESS
*        SPACE 2
*        LOAD  EP=DTAPES
*        ST    R0,$DTAPES       SAVE ENTRY POINT ADDRESS
*        SPACE 2
*        LOAD  EP=WHOGOT
*        ST    R0,$WHOGOT       SAVE ENTRY POINT ADDRESS
*.....................................................................*
*                                                                     *
*  MAIN LOOP ROUTINE.. PROMPT FOR ACTION AND PARSE REPLY.             *
*                                                                     *
*.....................................................................*
         SPACE
PROMPT   MVI   REPLY,C' '
         MVC   REPLY+1(L'REPLY-1),REPLY  CLEAR OUT THE REPLY AREA
         LA    R1,WTOR1
         BAL   LINKREG,PUTGET      GO PROMPT THE USER/OPER FOR CMD
*
         CLC   =C'EOJ ',REPLY      QUIT?
         BE    $$EOJ               YEP..GO QUIT
         CLC   =CL10' ',REPLY      NULL REPLY
         BE    BOZORPLY            YEP..GO PROD EM
         CLC   =CL10'U',REPLY      HOWABOUT GOOD OLE 'U'
         BE    BOZORPLY
         CLC   =C'ASID=',REPLY     HOWABOUT ASID GIVEN
         BE    DOASID              YEP...GO TRY IT
         CLC   =C'U=',REPLY        HOWABOUT JOBNAME/USERID
         BE    DOFIND
* PULL THIS COMMENT WHEN DTSO DTAPES AND WHOGOT IS INSTALLED..... BW
*        CLC   =C'DTS',REPLY       WANT A TSO DISPLAY?
*        BNE   CHKPR2               NO CHECK AGAIN
         B     CHKPR2               PULL IF DTS IS INSTALL........BW
         L     R15,$DTSO           LOAD ENTRY POINT ADDRESS
         LTR   R15,R15              ANYONE HOME
         BNP   PROMPT               NO..SKIP THE CALL
         XR    R1,R1
         BALR  R14,R15             CALL THE MODULE
         B     PROMPT                  AND GO GET A PROMPT
CHKPR2   CLC   =C'DJ',REPLY        WANT A JOB DISPLAY?
* PULL THIS COMMENT WHEN DTSO DTAPES AND WHOGOT IS INSTALLED..... BW
*        BNE   CHKPR3               NO CHECK AGAIN
         BNE   BOZORPLY             PULL IF OTHER PGMS INSTALL... BW
         L     R15,$DJOBS          LOAD ENTRY POINT ADDRESS
         LTR   R15,R15              ANYONE HOME
         BNP   PROMPT               NO..SKIP THE CALL
         XR    R1,R1
         BALR  R14,R15             CALL THE MODULE
         B     PROMPT                  AND GO GET A PROMPT
CHKPR3   CLC   =C'DT',REPLY        WANT A TAPE DISPLAY?
         BNE   CHKPR4               NO CHECK AGAIN
         L     R15,$DTAPES         LOAD ENTRY POINT ADDRESS
         LTR   R15,R15              ANYONE HOME
         BNP   PROMPT               NO..SKIP THE CALL
         XR    R1,R1
         BALR  R14,R15             CALL THE MODULE
         B     PROMPT                  AND GO GET A PROMPT
CHKPR4   CLC   =C'WHO',REPLY       WANT WHOGOT?
         BNE   BOZORPLY             NO OUT OF IDEAS..GRIPE
         TM    TSOFLAG,X'80'       IS THIS TSO?
         BZ    DOWHOGOT
         LA    R1,EMSG8            SAY CANT INVOKE DSN(WHOGOT)
         BAL   LINKREG,PUTMSG       ONLINE IN THIS MANNER
         B     PROMPT
DOWHOGOT L     R15,$WHOGOT         LOAD ENTRY POINT ADDRESS
         LTR   R15,R15              ANYONE HOME
         BNP   PROMPT               NO..SKIP THE CALL
         XR    R1,R1
         BALR  R14,R15             CALL THE MODULE
         B     PROMPT                  AND GO GET A PROMPT
*
         EJECT
*.....................................................................*
*                                                                     *
* FIND A USER/JOB BY SCANNING THE ASVT LOOKING FOR JOB/STC/TSU        *
*    JOBNAME.   HANDLE 'STARTING' AS SPECIAL TSO CASE.                *
*                                                                     *
*.....................................................................*
DOFIND   DS    0H
         L     R9,CVTPTR          (R9)=ADDR CVT
         USING CVT,R9
         L     R9,CVTASVT         (R9)= ADDR ASVT
         DROP  R9
         USING ASVT,R9
         L     R5,ASVTMAXU        (R5)=MAX NUMB OF ASCB ENTRIES
         LA    R5,2(R5)              +2 SO WE CAN SCAN ENTIRE ASVT..
         LA    R9,ASVTFRST-4      (R9)= ADDR-4 OF FIRST ASCB ENTRY
         DROP  R9
         B     NEXTONE            GO GET ASCB
         SPACE 2
LOOP1    BAL   LINKREG,GETUSER    GO GET THE GOODS ON THE USER
         B     NEXTONE            IF NO ASID..GET ANOTHER
*                                   GETUSER RETURNS HERE IF SUCCESS
         CLC   JOBNAME,ZAPJOB     IS THIS OUR BOY.
         BE    CHKNAIL            YES=>..GO CHECK FOR NAIL..
*
*   HERE WE BUMP AND GRIND THRU THE ASVT...
*
NEXTONE  BCT   R5,DOINCR          CHECK COUNT
         B     FINASVT            NO MORE..SPLIT
*
DOINCR   LA    R9,4(0,R9)         INCR INTO ASVT
         L     R8,0(0,R9)         LOAD ASCB ADDR
         LTR   R8,R8              END OF ASCBS?
         BZ    FINASVT            YES->EXIT
         TM    0(R9),X'80'        ASID ASSIGNED?
         BO    NEXTONE            NO-> TRY AGAIN.
         B     LOOP1              YES->SEE IF WE LIKE IT
         SPACE 1
FINASVT  DS    0H                 END OF ASVT..DIDN'T FIND IT
*
NOGOT    MVC   E1JOB,JOBNAME       MOVE IN THE JOBNAME
         LA    R1,EMSG1
         BAL   LINKREG,PUTMSG      AND GO POKE OUT THE MESSAGE
         B     PROMPT                AND RETRY
         EJECT
*.....................................................................*
*                                                                     *
*     HERE WE DO THE BAD GOODIES.....PROMPT THE OPER FOR VERIFICATION *
*     OF THE USER TO ZAP...IF HE GIVES THE MAGIC WORD, THEN POOF      *
*                                                                     *
*.....................................................................*
         SPACE
CHKNAIL  LA    R2,ABENDCDE
         LH    R3,ASID
         CH    R3,=H'2'            NAIL FOR USER ASID<=2?
         BH    CONFIRM
         MVC   E6ASID,ZAPASID      MOVE ASID TO MESSAGE
         LA    R1,EMSG6
         BAL   LINKREG,PUTMSG      PRINT IT
         B     PROMPT
CONFIRM  MVI   REPLY,C' '
         MVC   REPLY+1(L'REPLY-1),REPLY  CLEAR OUT THE REPLY AREA
         LA    R1,WTOR2            ASK THE OPER FOR CONFIRMATION
         BAL   LINKREG,PUTGET       TO ZAP THE TURKEY
         CLC   REPLY,MAGICWRD      IS THIS THE RIGHT WORD?
         BE    NAILEM
         LA    R1,EMSG5
         BAL   LINKREG,PUTMSG
         B     PROMPT
NAILEM   TM    TSOFLAG,X'80'       UNDER TSO?
         BNO   NAIL01                IF NOT..SKIP DEFER OF ATTENTIONS
         STAX  MF=(E,DEFER)              HOLD DEM ATTENTIONS...
NAIL01   ST    R13,R13SAVE               SAVE ADDR OF OUR SAVE AREA
         LA    R13,RTMWORK               LOAD ADDR OF 18 WRD WORK AREA
         PRINT OFF
GOSUPER  L     0,CODE
         SR    1,1
         SVC   254
         ST    1,OLDKEY
         PRINT ON
         EJECT
CALLRTM  CALLRTM TYPE=MEMTERM,COMPCOD=(R2),ASID=(R3)
         PRINT OFF
         LM    0,1,CODE                   RETURN TO ORIGINAL KEY
         SVC   254
FINSUPER DS    0H
         PRINT ON
         L     R13,R13SAVE                RESTORE OUR SAVE AREA PTR
         TM    TSOFLAG,X'80'              UNDER TSO?
         BNO   NAIL02                      NO .. SKIP RESUME OF ATTNS
         STAX  MF=(E,RESUME)              LET ATTENTIONS HAVE FUN..
NAIL02   MVC   M1ASID,ZAPASID             MOVE ASID TO MESSAGE
         MVC   M1USER,ZAPTYPE             MOVE JOB STEP PROCSTEP
         CLC   ZAPLHEAD,BLANKS            ANY LINE GIVEN
         BE    NAIL03                     NO..SKIP MOVE
         MVC   M1LINE,ZAPLHEAD            MOVE IN LINE
NAIL03   LA    R1,MSG1                     AND GO PRINT IT
         BAL   LINKREG,PUTMSG               VIA THE IOS SUBROUTINE
         B     PROMPT                     GO BACK AND ASK FOR MORE
*
BOZORPLY MVC   E4REPLY,REPLY              MOVE THE REPLY TO THE MESSAGE
         LA    R1,EMSG4
         BAL   LINKREG,PUTMSG
         B     PROMPT
         EJECT
*.....................................................................*
*        EXTRACT ASID FROM ASID= COMMAND                              *
*.....................................................................*
         SPACE
DOASID   DS    0H
         LA    R1,INASID       START OF SEARCH
         LA    R0,5            LENGTH OF MAX ASID (5 TO CATCH A BOZO)
         BAL   LINKREG,HEXCNVT GO CONVERT TO HEX
         B     NFGHEX          ERROR EXIT..GO GRIPE
STORASID STH   R0,ASID         SAVE ASID
         L     R9,CVTPTR          (R9)=ADDR CVT
         USING CVT,R9
         L     R9,CVTASVT         (R9)= ADDR ASVT
         DROP  R9
         USING ASVT,R9
         L     R5,ASVTMAXU        (R5) = MAX # USERS
         CR    R0,R5              IS OURS WITHIN RANGE?
         BH    NOTTHERE           NO->GRIPE AND SPLIT
         SLL   R0,2               (R0)=ASID*4
         LA    R9,ASVTFRST        (R9)= ADDR OF FIRST ASCB ENTRY
         AR    R9,R0              (R9)=ADDR OF ADDR OF ASCB FOR ASID
         L     R8,0(0,R9)         LOAD ASCB ADDR
         N     R8,=X'00FFFFFF'    MASK OFF ASSIGNED BIT
         LTR   R8,R8              END OF ASCBS?
         BZ    NOTTHERE           YES->EXIT
         TM    0(R9),X'80'        ASID ASSIGNED?
         BO    NOTTHERE           NO-> GRIPE AND QUIT
         DROP  R9
         BAL   LINKREG,GETUSER    GO FIND DATA ON USER....
         B     NOTTHERE           NO FIND EXIT..
         B     CHKNAIL            FIND EXIT.
*
*
NOTTHERE UNPK  E2ASID(5),ASID(3)       TRANSLATE ASID
         NC    E2ASID,HEXMASK             TO PRINTABLE
         TR    E2ASID,HEXTAB                 HEXADECIMAL
         MVI   E2ASID+4,C' '                   FORMAT
         LA    R1,EMSG2
         BAL   LINKREG,PUTMSG
         B     PROMPT               AND RETURN
         SPACE 2
NFGHEX   MVC   E7REPLY,REPLY
         LA    R1,EMSG7
         BAL   LINKREG,PUTMSG
         B     PROMPT
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE TO EXTRACT THE GOODS ON AN ASID..           *
*.....................................................................*
         SPACE
*
*     ENTER WITH (R8) = ADDR OF ASCB TO DECODE
*     BAL   LINKREG,GETUSER
*       ON RETURN..FIELDS FILLED IN FOR YOU...HEE HEE
*           RETURN TO BAL+8 IF GOT ONE..
*                     BAL+4 IF NOT A GOOD ASID
*
GETUSER  DS    0H
         USING ASCB,R8
*
         L     R10,ASCBCSCB       LOAD CSCB ADDR
         USING CSCB,R10
         MVC   ZAPLHEAD,BLANKS
         MVC   ZAPLINE,BLANKS
         MVC   USRJOB,BLANKS
         XC    USRLINE,USRLINE
DOASID2  TM    CHTRKID,CHINITID   IS IT AN INIT OR BATCH
         BO    DOASID4            YES-> GO TRY IT OUT
*
         TM    CHTRKID,CHTSID     IS IT A TSO SESSION?
         BNO   DOASID3            NOPE-> MUST BE STC
         L     R4,ASCBJBNS        GET ADDR OF TSO USERID
         MVC   ZAPTYPE,=C'TSU'    INDICATE TIMESHARING USER
         MVC   ZAPJOB,STARTING    MOVE IN STARTING
         MVC   ZAPPROC,STARTING   MOVE IN STARTING
         LTR   R4,R4              ANY JOBNAME SPECED?
         BNP   MVCTSO             IF NOT..ASSUME STARTING
*
*   FOUND THE TSO USER
*
         MVC   ZAPJOB,0(R4)       MOVE IN JOBNAME FROM CSCB VIA ASCB
         MVC   ZAPPROC,8(R4)      MOVE IN PROCNAME FROM CSCB VIA ASCB
         MVC   M1VTAM,=CL8'(UNKNWN)'  BLANK IT OUT               NTL1
MVCTSO   MVC   ZAPSTEP,=CL8' '    CLEAR STEPNAME
         MVC   ASID,ASCBASID      SAVE ASID
         L     R7,ASCBTSB         GET ADDRESS OF TSB FOR LINE ADDR
         USING TSB,R7             USE THE ADDRESS               NTL1
         STAX  MF=(E,DEFER)       HOLD ALL CALLS PLEASE....
         PRINT OFF
         L     0,CODE
         SR    1,1
         SVC   254
         ST    1,OLDKEY
         PRINT ON
         EJECT
         TM    TSBFLG5,TSBVTAM       SEE IF THIS IS A TSO/VTAM TSB NTL1
         BO    ITSVTAM               YES.... FO GET TSB EXTENTION  NTL1
ITSTCAM  UNPK  ZAPLINE(5),82(3,R7)   UNPACK THE TSO LINE ADDRESS   NTL1
         MVC   USRLINE,82(R7)        AND SAVE THE LINE ADDRESS
*        PRINT OFF
*        LM    0,1,CODE                   RETURN TO ORIGINAL KEY
*        SVC   XXX
*        PRINT ON
*        STAX  MF=(E,RESUME)      OK TO HAVE ATTENTIONS NOW...
         NC    ZAPLINE,HEXMASK
         TR    ZAPLINE,HEXTAB
         MVC   M1VTAM(3),=C'UCB'                                  NTL1
         MVI   ZAPLINE,C'='       FIX IT UP PRETTY
         MVI   ZAPLINE+4,C' '
         MVC   ZAPLHEAD,=C'LINE'
         B     FINSUPR                                            NTL1
*
*        B     DOASID6            GO FINISH UP....
*
ITSVTAM  L     R1,TSBEXTNT         GET ADDRESS OF TSB EXTENSION    NTL1
         USING TSBX,R1             ESTABLISH ADDRESSABILITY TO TSBXNTL1
         TM    TSBXFLG1,TSBXWREC   SEE IF TERMINAL AWAITING RECON  NTL1
         BNO   GETSYM              NO.....GO GET SYMBOLIC NAME     NTL1
         MVC   M1VTAM(8),DISCON    MOVE IN DISCON'D                NTL1
         B     FINSUPR             GO MODESET AND RESTORE OLD KEY  NTL1
         DROP  R1                                                  NTL1
GETSYM   MVC   M1VTAM(8),TSBTRMID  MOVE IN TERMINAL SYMBOLIC NAME  NTL1
*
FINSUPR  DS    0H                                                  NTL1
         PRINT OFF
         LM    0,1,CODE                   RETURN TO ORIGINAL KEY
         SVC   254
         PRINT ON
         STAX  MF=(E,RESUME)      OK TO HAVE ATTENTIONS NOW...
*
         DROP  R7                                                  NTL1
         B     DOASID6            GO FINISH UP....
*
*
*
DOASID3  L     R4,ASCBJBNS        GET PTR TO JOBNAME FOR STC/LOGON/MNT
         LTR   R4,R4              ANYONE HOME?
         BZ    UNASSGND           NO-> KISS OFF
*
         MVC   ZAPTYPE,=C'STC'    INDICATE ITS A STARTED TASK
         MVC   ZAPJOB,CHCLS       MOVE IN JOBNAME  FROM CSCB
         MVC   ZAPPROC,CHKEY      MOVE IN STEPNAME FROM CSCB
         MVC   ZAPSTEP,CHPROCSN   MOVE IN STEPNAME OF PROC
         B     DOASID6            GO DO ASID
*
*
DOASID4  L     R4,ASCBJBNI        GET PTR TO JOBNAME
         LTR   R4,R4              IS IT A JOB?
         BZ    UNASSGND           OOPS..DRY INITIATOR...GET ANOTHER
         MVC   ZAPTYPE,=C'JOB'    YES-> INDICATE BATCH JOB
*
*
*  HERE WE GET  SNEAKY..A HONEST TO GOD JOB'S CSCB IS NOT POINTED TO
*    BY ASCBCSCB,  BUT INSTEAD, ASCBJBNI (JOBNAME) REALLY POINTS TO
*    THE CHKEY  IN THE CSCB FOR THE JOB. WE'LL GET OUR GOODIES
*    IN THE INDIRECT  ROUTE........
*
         DROP  R10
         USING CSCB,R4
DOASID5  S     R4,=F'8'           ADJUST FOR SNEAKINESS..
         MVC   ZAPJOB,CHKEY       MOVE IN JOBNAME
         MVC   ZAPPROC,CHSTEP     MOVE IN STEPNAME INVOK PROC
         MVC   ZAPSTEP,CHPROCSN   MOVE IN STEPNAME OF PROC
         DROP  R4
         USING CSCB,R10           PUT BACK ADDRESSABILITY TO
*                                    'REAL' CSCB..
         EJECT
DOASID6  UNPK  ZAPASID(5),ASCBASID(3)  TRANSLATE ASID
         NC    ZAPASID,HEXMASK            TO PRINTABLE
         TR    ZAPASID,HEXTAB                HEXADECIMAL
         MVI   ZAPASID+4,C' '                  FORMAT
         MVC   ASID,ASCBASID      MOVE ASID TO SAVE AREA
         B     4(LINKREG)         INDICATE SUCCESSFUL RETURN
*
*
*
UNASSGND UNPK  E2ASID(5),ASID(3)       TRANSLATE ASID
         NC    E2ASID,HEXMASK             TO PRINTABLE
         TR    E2ASID,HEXTAB                 HEXADECIMAL
         MVI   E2ASID+4,C' '                   FORMAT
         BR    LINKREG            INDICATE NO FIND..
         DROP  R8
         DROP  R10
*
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE TO CONVERT EBCDIC TO HEX                    *
*.....................................................................*
         SPACE
*
*  (R1) = ADDR OF SCAN THING
*  (R0) = LENGTH OF STR TO SCAN (MAX=8)
*  BAL  LINKREG,HEXCNVT
*
*  RETURNS TO BAL+8 IF SUCCESS
*             BAL+4 IF FAILURE
*
HEXCNVT  XR    R4,R4           CLEAR WORK REGISTER
         LR    R2,R1           SAVE SEARCH START ADDR
FINDLEN  DS    0H
         CLI   0(R1),C' '      IS IT A BLANK?
         BE    LENEND          YES-> END OF SEARCH
         LA    R1,1(,R1)        NEXT COMPARE
         LA    R4,1(,R4)        INCR LENGTH
         BCT   R0,FINDLEN
LENEND   DS    0H
         CH    R4,=H'1'        CHECK FOR 1 TO 8 CHARACTERS
         BL    BOZOHEX
         CH    R4,=H'8'
         BH    BOZOHEX
         XR    R0,R0           CLEAR WORK REGISTER
         LR    R1,R2
HEXLOOP  BCTR  R4,0
         IC    R1,0(R2)        GET THE CHARACTER
         CLI   0(R2),C'0'      MAKE SURE IT IS '0' TO 'F'
         BNL   HEX2            GOT TO BE NUMERIC..GO DO IT
         CLI   0(R2),C'A'      MAKE SURE A-F
         BL    BOZOHEX           NO..GO GRIPE
         CLI   0(R2),C'F'      ONCE MORE
         BH    BOZOHEX           NO..AGAIN WITH THE GRIPE
         LA    R1,9(R1)        GET RIGHT 4 BITS + 9
HEX2     SLL   R1,28           SHIFT LEFT
         LA    R2,1(R2)
         SLDL  R0,4            AND ACCUMULATE IT
         LTR   R4,R4           ANY MORE?
         BP    HEXLOOP         YEP-> GO GET ANOTHER
GOODHEX  B     4(LINKREG)      SAY GOOD EXIT
BOZOHEX  BR    LINKREG         SAY NO GOOD AND EXIT
*
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES R14 FOR WORK
*
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    R14,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,R14)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    R14,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
         L     R1,0(,R14)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,R14)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,R14)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         EJECT
*.....................................................................*
*        MESSAGES - OPER QUERIES AND RESPONSES FOR GOOD WORK          *
*.....................................................................*
         SPACE
WTOR1    WTOR  'SYSMAINT - ENTER U=XXXXXXXX OR ASID=XXXX TO ZAP OR ''EOX
               J''',                                                   X
               REPLY,10,WTORECB,ROUTCDE=(11),MF=L
*
WTOR2    WTOR  'SYSMAINT - OK TO ZAP XXX=........ ........ ........ ASIX
               D=XXXX LINE=XXX  UCB=...   ',                           X
               REPLY,10,WTORECB,ROUTCDE=(9),MF=L
         ORG   WTOR2+33
ZAPTYPE  DS    CL3
         ORG   WTOR2+37
ZAPJOB   DS    CL8
         ORG   WTOR2+46
ZAPPROC  DS    CL8
         ORG   WTOR2+55
ZAPSTEP  DS    CL8
         ORG   WTOR2+69
ZAPASID  DS    CL4
         ORG   WTOR2+74
ZAPLHEAD DS    CL4
         ORG   WTOR2+78
ZAPLINE  DS    CL4
         ORG   WTOR2+83                                           NTL1
M1VTAM   DS    CL8                                                NTL1
         ORG
         SPACE
MSG1     WTO   'SYSMAINT - ASID=XXXX XXX=XXXXXXXX XXXXXXXX XXXXXXXX PROX
               CESSED',                                                X
               ROUTCDE=(11),MF=L
         ORG   MSG1+20
M1ASID   DS    CL4
         ORG   MSG1+25
M1USER   DS    CL30
         ORG   MSG1+47
M1LINE   DS    CL8
         ORG
         EJECT
*.....................................................................*
*        MESSAGES - BOZO RESPONSES                                    *
*.....................................................................*
         SPACE
EMSG1    WTO   'SYSMAINT - JOB/USER XXXXXXXX NOT FOUND',               X
               ROUTCDE=(11),MF=L
         ORG   EMSG1+24
E1JOB    DS    CL8
         ORG
         SPACE
EMSG2    WTO   'SYSMAINT - ASID=XXXX NOT ASSIGNED',                    X
               ROUTCDE=(11),MF=L
         ORG   EMSG2+20
E2ASID   DS    CL4
         ORG
         SPACE
EMSG3    WTO   'SORRY...SYSMAINT IS ONLY AVAILABLE TO OPER PRIV USERS',X
               ROUTCDE=(11),MF=L
         SPACE
EMSG4    WTO   'SYSMAINT - INVALID REPLY - XXXXXXXXXX - RETRY',        X
               ROUTCDE=(11),MF=L
         ORG   EMSG4+31
E4REPLY  DS    CL10
         ORG
         EJECT
EMSG5    WTO   'SYSMAINT - ZAP NOT CONFIRMED..SKIPPING ZAP...',        X
               ROUTCDE=(11),MF=L
EMSG6    WTO   'SYSMAINT - ZAP OF ASID=XXXX NOT ALLOWED..IPL INSTEAD', X
               ROUTCDE=(11),MF=L
         ORG   EMSG6+27
E6ASID   DS    CL4
         ORG
EMSG7    WTO   'SYSMAINT - INVALID ASID SPEC ''..........'' RETRY',    X
               ROUTCDE=(11),MF=L
         ORG   EMSG7+34
E7REPLY  DS    CL10
         ORG
         SPACE 1
EMSG8    WTO   'SYSMAINT - SORRY..WHOGOT CANNOT BE INVOKED ONLINE',    X
               ROUTCDE=(11),MF=L
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE
ABENDCDE EQU   X'F22'
ASID     DC    H'0'
*
REPLY    DC    CL10' '
         ORG   REPLY+2
JOBNAME  DS    CL8
         ORG   REPLY+5
INASID   DS    CL4
         ORG
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
USRJOB   DC    CL8' '
USRLINE  DC    XL2'00'
         DS    0F
         PRINT OFF
CODE     DC    X'ABCFEDAD'
OLDKEY   DC    F'0'
         PRINT ON
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
WTORECB  DC    F'0'
         SPACE 2
$DTSO    DC    F'0'
$DJOBS   DC    F'0'
$DTAPES  DC    F'0'
$WHOGOT  DC    F'0'
         SPACE 2
R13SAVE  DC    F'0'
RTMWORK  DC    18F'0'
WRKD     DC    D'0'
SAVEREGS DC    4F'0'
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE 2
HEXMASK  DC    4X'0F'
HEXTAB   DC    C'0123456789ABCDEF'
MAGICWRD DC    CL10'YES$'
BLANKS   DC    CL8' '
STARTING DC    CL8'STARTING'
DISCON   DC    CL8'DISCON''D'                                      NTL1
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
DEFER    STAX  DEFER=YES,MF=L            HOLD DEM ATTENTIONS...
         SPACE 2
RESUME   STAX  DEFER=NO,MF=L             RESUME ATTENTION HANDLING..
         SPACE 2
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         SPACE 2
EXTRPSCB EXTRACT ANSWER,'S',FIELDS=(PSB),MF=L
         EJECT
CVT      DSECT
         CVT   SYS=VMS,TSO=YES
         EJECT
CSCB     DSECT
         IEECHAIN
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
         IKJPSCB
         EJECT
         IKJTSB   LIST=YES,EXT=YES                                 NTL1
*
         END
