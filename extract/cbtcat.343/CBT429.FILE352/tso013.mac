*          DATA SET TSO013     AT LEVEL 001 AS OF 04/16/86
TSO013   TITLE 'DTAPES COMMAND - LIST UNIT STATUS         VERSION 1.0'
*
**********************************************************************
*                                                                    *
* THIS IS THE 'DTAPES' COMMAND, OTHERWISE KNOWN AT INTEL AS TSO013   *
*                                                                    *
* THE COMMAND WILL DISPLAY THE STATUS AND VOLSERS OF ALL TAPE UNITS. *
* THE COMMAND SYNTAX IS:                                             *
*     DTAPES            <---- THIS DISPLAYS 'ALL' TAPE DRIVES.       *
*    OR                                                              *
*     DTAPES ONLINE     <---- THIS DISPLAYS ONLY ONLINE TAPE DRIVES  *
*    OR                                                              *
*     DTAPES OFFLINE    <---- THIS DISPLAYS ONLY OFFLINE TAPE DRIVES *
*                                                                    *
*                                                                    *
*--------------  C H A N G E    H I S T O R Y  ----------------------*
*                                                                    *
* 15 APR 86 - STEVE BROWN / INTEL CORPORATION:    ** MVS/XA **       *
*             THIS COMMAND WAS ADAPTED FROM THE 'DUNITS' COMMAND (XA)*
*             AND MODIFIED TO LOOK LIKE THE 'DTAPES' COMMAND THAT    *
*             INTEL WAS RUNNING ON MVS/SP1.3.3 .                     *
*            *THIS VERSION OF 'DTAPES' COMMAND RUNS ON MVS/XA ONLY.  *
*                                                                    *
**********************************************************************
*
         MACRO
&LABEL   CHK   &FIELD,&MASK,&LIT,&PTR=R4,&EXIT=
         LCLA  &LEN
         LCLC  &IDX,&EXADR
&IDX     SETC  '&SYSNDX'
&LEN     SETA  K'&LIT-2
&EXADR   SETC  '&EXIT'
         AIF   (K'&EXIT GT 0).GOTLBL
&EXADR   SETC  'SKP&IDX'
.GOTLBL  ANOP
         SPACE
&LABEL   TM    &FIELD,&MASK     CHECK THE FIELD FOR USE
         BNO   SKP&IDX          BIT(S) DONT MATCH..SKIP IT
         AIF   (&LEN EQ 1).SHORT
         MVC   0(&LEN,&PTR),=C&LIT     MOVE TEXT INTO STRING
         LA    &PTR,&LEN.(&PTR)    BUMP LENGTH TO AFTER STRING
         B     &EXADR           EXIT TO DESIRED LOCATION
         AGO   .MACFIN
.SHORT   ANOP
         MVI   0(&PTR),C&LIT    MOVE IN THE CHARACTER
         LA    &PTR,1(&PTR)     BUMP COUNT
         B     &EXADR              AND EXIT
.MACFIN  ANOP
SKP&IDX  DS    0H
         SPACE 2
         MEND
         EJECT
TSO013   CSECT
         SAVE  (14,12),,TSO013_V1M0_&SYSDATE_&SYSTIME
         LR    R12,R15                  PROGRAM BASE
         USING TSO013,R12               PROGRAM ADDRESSABILITY
         LR    R2,R1                    SAVE PARM POINTER
         GETMAIN R,LV=CORENEED          OBTAIN DYNAMIC CORE
         ST    R13,D4(R1)               CHAIN
         ST    R1,D8(R13)                SAVE
         LR    R13,R1                     AREAS
         LR    R11,R13                  CORE ADDR.
         USING CORE,R11
         MVC   EXTRACT1(EXTRACTL),EXTRACT MOVE IN EXTRACT LIST FORM
         LA    R1,ANSWER          LOAD ADDR OF ANSWER
         ST    R1,EXTRACT1          AND SAVE IT IN THE MACRO
         EXTRACT MF=(E,EXTRACT1)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         SPACE
         MVI   SW1,X'00'                INIT PRINT HDR SWITCH
         MVI   SW2,X'00'                INIT ONLINE/OFFLINE SWITCH
         LR    R1,R2                    CPPL OR PARM PTR(BATCH)
         LA    R3,PPLAREA               PPL ADDR.
         USING PPL,R3                   PPL ADDRESSABILITY
TSTSETUP TM    TSOFLAG,X'80'        IS IT TSO?
         BO    SETUPTSO             YES-> SETUP FOR PARSE
*                                   NO -> INIT PPL WITH DMY TSO CB
         EJECT
SETUPSTC XC    DMYUPT,DMYUPT        CLEAR OUT OUR UPT
         LA    R1,DMYUPT            LOAD ADDR OF OUR UPT
         ST    R1,PPLUPT            SAVE ADDRESS
         USING UPT,R1
         MVI   UPTSWS,UPTNPRM+UPTMID+UPTWTP
         DROP  R1
         XC    DMYECT,DMYECT        CLEAR OUT OUR ECT
         LA    R1,DMYECT            LOAD ADDR OF OUR ECT
         ST    R1,PPLECT            SAVE ADDRESS
         USING ECT,R1
         MVC   ECTPCMD,=CL8'DTAPES'
         MVC   ECTSCMD,=CL8' '
         DROP  R1
         MVI   DMYCMD,C' '
         MVC   DMYCMD+1(L'DMYCMD-1),DMYCMD
         XC    DMYCMD(4),DMYCMD
         LA    R1,DMYCMD            LOAD ADDR OF OUT CMD BUFF
         ST    R1,PPLCBUF           AND SAVE ADDR IN PPL
         L     R2,0(R2)             (R2) = PTR TO PARM FIELD
         LH    R1,0(R2)             (R1) = LENGTH OF PARM FIELD
         LTR   R1,R1                ANYONE HOME?
         BZ    GENPPL                NO-> FINISH UP
         BCTR  R1,0                 COMPUTE MACHINE LENGTH
         EX    R1,MOVECMD           MOVE COMMAND IN
         AH    R1,=H'4'             SAY CMD IS LONGER BY 3
         STH   R1,DMYCMD            SAVE LENGTH OF CMD FOR PARSE
         B     GENPPL
*
MOVECMD  MVC   DMYCMD+4(*-*),2(R2)  EXECUTED CMD -
*
SETUPTSO DS    0H
         USING CPPL,R1                  CPPL ADDRESS
         MVC   PPLUPT,CPPLUPT           COPY UPT ADDR.
         MVC   PPLECT,CPPLECT           COPY ECT ADDR.
         MVC   PPLCBUF,CPPLCBUF         COPY COMMAND BUFFER ADDR.
         DROP  R1
         EJECT
GENPPL   LA    R0,ECB                   ECB ADDR.
         ST    R0,PPLECB                COPY ECB ADDR.
         MVC   PPLPCL,PCL               COPY PCL ADDR.
         LA    R0,ANS                   ANSWER AREA ADDR.
         ST    R0,PPLANS                COPY ADDR.
         XC    PPLUWA,PPLUWA            ZERO UWA POINTER
         XC    ECB(D4),ECB              CLEAR ECB
         LA    R1,PPL                   PPL ADDR.
         DROP  R3
DOPARSE  CALLTSSR  EP=IKJPARS,MF=(E,(R1))     INVOKE PARSE (FAST!)
         SPACE 2
         LTR   R15,R15                  Q/PARSE FAILURE
         BNZ   PARSFAIL                 YES
         L     R6,ANS                   DSECT ADDR.
         USING IKJPARMD,R6              DSECT ADDRESSABILITY
         LA    R14,VOLUMES              ADDR OF VOLUME LIST
         EJECT
VOLUME   MVI   VOL,BLANK                CLEAR VOL
         MVC   VOL+1(L'VOL-1),VOL       PROPAGATE
         L     R7,D0(R14)               VOLUME SER ADDR.
         LH    R8,D4(R14)               VOLUME SER LENGTH
         ST    R14,PDEPTR               SAVE CURRENT PDE ADDRESS
         BCTR  R8,R0                    COMPUTE MACHINE LENGTH
         LR    R5,R8
         LA    R10,VOL                  VOLUME ADDR.
         EX    R8,MOVE                  MOVE VOLUME SER
*
         NI    SW1,NOTFOUND             SET NOTFOUND SW FOR GRIPE MSG
         CLC   VOL,ONLINE               SEE IF 'ONLINE' OPTION DESIRED
         BNE   CHK4OFF                  NO, CHK FOR 'OFFLINE' OPTION
         OI    SW2,DOONLINE             YES, SET SW2 TO SELECT 'ONLINE'
         OI    SW1,DOALLVOL                  ALSO, SET SWITCH TO DO ALL
         B     STARTSCN                 GO START THE SCAN
CHK4OFF  CLC   VOL,OFFLINE              SEE IF 'OFFLINE' OPTION DESIRED
         BNE   CHK4ALL                  NO, CHK FOR 'ALL' OPTION
         OI    SW2,DOOFFLIN             YES, SET SW2 TO SELECT OFFLINE
         OI    SW1,DOALLVOL                  ALSO, SET SWITCH TO DO ALL
         B     STARTSCN                 GO START THE SCAN
CHK4ALL  CLC   VOL,ALLVOL               SEE IF 'ALL' OPTION DESIRED
         BNE   STARTSCN                 NO -> GO DO THE SCAN
         OI    SW1,DOALLVOL             YES-> SET SWITCH TO DO ALL
         SPACE 2
         USING PSA,R0
*
*  SET UP ENVIRONMENT FOR   'IOS UCB SCAN'               (IOSVSUCB)
*                           'UNIT VERIFICATION SERVICES' (IEFEB4UV)
*
STARTSCN DS    0H
         L     R1,FLCCVT
         USING CVT,R1
         L     R1,CVTUCBSC              LOAD ADDRESS OF 'IOSVSUCB' RTN
         ST    R1,UCBRTN                    ...AND SAVE IT
         DROP  R1
*
         XC    IOSWORK,IOSWORK               CLEAR THE IOS WORK AREA
         XC    IOSDVCLS,IOSDVCLS             CLEAR DEVICE CLS INDICATOR
         XC    IOSUCB,IOSUCB                 CLEAR UCB POINTER FIELD
         OI    IOSDVCLS,UCB3TAPE             SCAN 'TAPE' UCBS ONLY
*
*
*  SET UP PARAMETER LIST FOR  'IOS UCB SCAN' RTN...IOSVSUCB
*
         LA    R1,IOSWORK                    R1 = A(WORK AREA)
         ST    R1,WADR                           STORE IN PARM LIST
         LA    R1,IOSDVCLS                   R1 = A(DEVICE CLASS FIELD)
         ST    R1,CLSADDR                        STORE IN PARM LIST
         LA    R1,IOSUCB                     R1 = A(UCB POINTER)
         ST    R1,UCBADDR                        STORE IN PARM LIST
         OI    UCBADDR,X'80'                 INDICATE LAST PARAMETER
*
*
*  SET UP PARAMETER LIST FOR  'UNIT VERIFICATION' RTN...IEFEB4UV
*
         LA    R1,UNITABL                    R1 = A(PARAMETER TABLE)
         ST    R1,TBLADR                         STORE IN PARM LIST
         LA    R1,UNITFLAG                   R1 = A(OPTION FLAG)
         ST    R1,FLGADR                         STORE IN PARM LIST
         OI    FLGADR,X'80'                  INDICATE LAST PARAMETER
*
*
*  NOW, SCAN THE UCBS, LOOKING FOR A VOLUME MATCH
*
CYCLE    LA    R1,IOSPARM               R1 = ADDRESS OF PARAMETER LIST
         L     R15,UCBRTN               R15 = ADDRESS OF UCB SCAN RTN
         BALR  R14,R15                  BRANCH TO UCB SCAN ROUTINE
*
         LTR   R15,R15                  DID WE GET A UCB ADDRESS
         BNZ   SCANEND                  NOPE, EITHER ALL UCBS SCANNED,
*                                           OR AN ERROR HAS OCCURED.
         L     R8,IOSUCB                R8 = ADDR OF UCB COMMON SEGMENT
         USING UCBSECT,R8
         CLI   UCBID,UCBSTND            IS UCB STANDARD?
         BNE   INDEX                    NO, ERROR
         SPACE
         TM    SW2,X'80'                LOOKING FOR ONLINE TAPES?
         BNO   DEVSTAT2                 NO, GO CHK OFFLINE TAPES
         TM    UCBSTAT,UCBONLI          YES, IS THIS DRIVE ONLINE?
         BNO   INDEX                    NO, KEEP LOOKING...
         B     DOGENMSG                 YES, GO FORMAT OUTPUT.
DEVSTAT2 TM    SW2,X'08'                LOOKING FOR OFFLINE TAPES?
         BNO   CHKALL                   NO, GO CHK 'ALL' TAPES
         TM    UCBSTAT,UCBONLI          YES, IS THIS DRIVE OFFLINE?
         BO    INDEX                    NO, KEEP LOOKING...
         B     DOGENMSG                 YES, GO FORMAT OUTPUT.
CHKALL   TM    SW1,DOALLVOL             Q/'ALL' TAPES TO BE DISPLAYED
         BO    DOGENMSG                 YES
         EX    R5,COMP                    CHK FOR OUR VOLUME
         BNE   INDEX                    NO
         SPACE
DOGENMSG TM    SW1,HEADING              HAVE WE WRITTEN THE HEADER?
         BZ    WRTFMT                   ->NO-GO WRITE HEADINGS
CALLIT   BAL   LINKREG,GENMSG           GO GENERATE UNIT STATUS MESSAGE
         SPACE
JUSTMSG  LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,FOUND                SAY WE FOUND A VOL...
         SPACE
INDEX    B     CYCLE                    GO GET ANOTHER UCB
         SPACE
SCANEND  TM    SW1,DOALLVOL             Q/DISPLAY OF ALL VOLUMES WANTED
         BO    RLSE                     YES, END OF LIST..EXIT
         TM    SW1,FOUND                DID WE FIND ONE?
         BO    NEXTPDE                  YEP->NO GRIPE..GET NEXT PDE
         MVC   MSG(WTOMSGL),WTOMSG      INIT MESSAGE AREA
         MVC   MSGNVOL,VMSG             MOVE MESSAGE
         MVC   MSGIVOL,VOL              INSERT VOLUME SERIAL NUMBER
         LA    R1,MSG                   MESSAGE ADDR.
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         SPACE
NEXTPDE  L     R14,PDEPTR               GET PTR TO CURRENT PDE
         L     R14,D8(R14)              NEXT PDE ADDR.
         LA    R14,D0(R14)              CLEAR BYTE
         LTR   R14,R14                  Q/ANY PDE
         BNZ   VOLUME                    YES-> GO TRY AGAIN ON NEXT VOL
         EJECT
*.....................................................................*
*     FINIS..FREE UP CORE AND CLEANUP                                 *
*.....................................................................*
RLSE     IKJRLSA ANS
         LR    R1,R11                   CORE ADDR.
         L     R13,D4(R13)
         SPACE 2
THEEND   FREEMAIN R,LV=CORENEED,A=(1)   FREE DYNAMIC CORE
         XC    D16(D4,R13),D16(R13)
         LM    R14,R12,D12(R13)
         XR    R15,R15                  SET RC=0
         BR    R14                      RETURN
         SPACE 2
PARSFAIL LA    R1,PARSMSG               ISSUE ERROR MESSAGE
         BAL   LINKREG,PUTMSG           ISSUE NOT FOUND MESSAGE
         B     THEEND                   GO QUIT
         EJECT
*.....................................................................*
*     WRITE HEADINGS                                                  *
*.....................................................................*
WRTFMT   LA    R1,FMTMSG1               WRITE HEADERS....
         BAL   LINKREG,PUTMSG           ISSUE MESSAGE
*        LA    R1,FMTMSG2
*        BAL   LINKREG,PUTMSG           ISSUE MESSAGE
         OI    SW1,HEADING              SAY WE WROTE THE HEADERS
         B     CALLIT
         SPACE 3
*.....................................................................*
*        LOCAL SUBROUTINE TO DECODE UCB INFO AND STATUS               *
*                                                                     *
*  BAL  LINKREG,GENMSG                                                *
*                                                                     *
*       R8=ADDR OF UCB                                                *
*                                                                     *
*  OUTPUT ARE FIELDS IN MSG                                           *
*                                                                     *
*.....................................................................*
         SPACE
GENMSG   MVC   MSG(WTOMSGL),WTOMSG      CLEAR OUT MESSAGE
         MVC   MSGUNIT,UCBNAME          COPY UNIT ADDRESS
         CLI   UCBVOLI,X'00'            ANY VOLSER IN UCBVOLI?
         BE    NOVOLSER                 NO, SKIP MOVE OF VOLSER
         MVC   MSGVOL,UCBVOLI           COPY VOLUME SERIAL NUMBER
*
NOVOLSER TM    UCBSTAT,UCBONLI          IS DRIVE ONLINE?
         BNO   NOTON                    NO, GO MARK MSG AS OFFLINE.
         MVC   MSGSTAT,ONLINE           YES, MARK MSG AS ONLINE.
         B     CHKVARY
NOTON    MVC   MSGSTAT,OFFLINE          YES, MARK MSG AS OFFLINE
*
CHKVARY  TM    UCBSTAT,UCBCHGS          IS DRIVE CHANGING ON/OFF?
         BNO   CHKDEN                   NO, GO CHECK DENSITY.
         MVC   MSGVARY,VARY             YES, SAY SO.
CHKDEN   TM    UCBTBYT2,UCBDUDN1        IS IT 800/1600 BPI?
         BNO   CHKDEN1                  NO, KEEP LOOKING.
         MVC   MSGDENS,DDEN1            YES, MARK MSG AS 800/1600 BPI
         B     CHKMODL                  GO CHK MODEL TYPE.
CHKDEN1  TM    UCBTBYT2,UCBDUDN2        IS IT 1600/6250 BPI?
         BNO   CHKDEN2                  NO, KEEP LOOKING.
         MVC   MSGDENS,DDEN2            YES, MARK MSG AS 800/1600 BPI
         B     CHKMODL                  GO CHK MODEL TYPE.
CHKDEN2  TM    UCBTBYT1,UCBD1600        IS IT 1600 BPI ONLY?
         BNO   CHKDEN3                  NO, KEEP LOOKING.
         MVC   MSGDENS,DEN1600          YES, MARK MSG AS 1600 BPI
         B     CHKMODL                  GO CHK MODEL TYPE.
CHKDEN3  TM    UCBTBYT1,UCBD6250        IS IT 6250 BPI ONLY?
         BNO   CHKDEN4                  NO, KEEP LOOKING.
         MVC   MSGDENS,DEN6250          YES, MARK MSG AS 1600 BPI
         B     CHKMODL                  GO CHK MODEL TYPE.
CHKDEN4  TM    UCBTBYT4,UCB3480         IS DEVTYPE A 3480?
         BNO   NODEN                    NO, DON'T KNOW DENSITY...
         MVC   MSGDENS,DEN38K           YES, MARK MSG AS 38000 BPI
         B     CHKMODL                  GO CHK MODEL TYPE.
NODEN    MVC   MSGDENS,=C' ??????? '    MARK MSG AS UNKNOWN(????)
*
         EJECT
*
***
***  INVOKE IEFEB4UV TO GET 'UNIT NAME' FOR THIS UCB'S DEVTYPE
***
CHKMODL  DS 0H
         XC    UNITABL,UNITABL               CLEAR PARAMETER TABLE
         MVC   UNITTYPE,UCBTYP               SET UCB 'DEVICE TYPE'
         MVC   UNITFLAG,=X'2100'             SET SCAN OPTIONS
*
         LA    R1,IEFPARM                    R1 = A(PARAMETER LIST)
         LINK  EP=IEFEB4UV
         MVC   MSGMODL,UNITNAME         MOVE MODEL TYPE TO PRINT
*
GETWHO   XR    R10,R10
         L     R10,UCBEXTPT             GET EXTENTION TO UCB
         LTR   R10,R10                  ANYTHING THERE?
         BZ    NOASID                   NO->SPLIT
         LA    R10,14(R10)              GET UCBASID ADDRESS
         LH    R10,0(R10)               AND GET THE ASID
         N     R10,=X'0000FFFF'          PLUS MASK OFF RESIDUE..
         LTR   R10,R10                  ANY BODY THERE?
         BZ    NOASID                   NO->SIGH,ALL THAT FOR NAUGHT..
*
GOTASID  L     R4,CVTPTR                GET ADDR OF CVT
         USING CVT,R4                    AND ADDRESS YOURSELF TO IT..
         L     R4,CVTASVT               GET ADDR OF ASVT..
         DROP  R4
         USING ASVT,R4                  AND ESTAB ADDRESSABILITY
         SLL   R10,2                    ADJUST ASID..TO USE AS INDEX
         L     R10,ASVTFRST(R10)        R10=ADDR(ASCB) FOR ASID
         DROP  R4
         USING ASCB,R10                 GOTCHA
         L     R4,ASCBJBNI              IS IT A JOB
         LTR   R4,R4
         BZ    ITSTSO
         MVC   MSGUSER,0(R4)            MOVIN JOBNAME
         B     NOASID
ITSTSO   L     R4,ASCBJBNS              ITS START/MOUNT/LOGON
         LTR   R4,R4
         BZ    NOASID
         MVC   MSGUSER,0(R4)            MOVEIN USERID
NOASID   DS    0H
*
         BR    LINKREG
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES RXX FOR WORK
*
LINKREG  EQU   9
RXX      EQU   10
*
PUTMSG   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    RXX,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,RXX)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    RXX,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
         L     R1,0(,RXX)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,RXX)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         SPACE 2
         EJECT
*.....................................................................*
*        EXECUTED INSTRUCTIONS                                        *
*.....................................................................*
         SPACE 2
MOVE     MVC   D0(D0,R10),D0(R7)        EXECUTED INSTRUCTION
COMP     CLC   VOL(0),UCBVOLI           EXECUTED INSTRUCTION
         EJECT
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE
EXTRACT  EXTRACT *-*,'S',FIELDS=(TSO),MF=L
EXTRACTL EQU   *-EXTRACT
         SPACE
WTOMSG   WTO   '                                                       X
                                ',ROUTCDE=(11),MF=L LEN=72
WTOMSGL  EQU   *-WTOMSG
PARSMSG  WTO   'DTAPES - PARSE FAILED',ROUTCDE=(11),MF=L
FMTMSG1  WTO   ' UNIT VOLUME STATUS  USER          DENSITY   MODEL     X
                     ',ROUTCDE=(11),MF=L
FMTMSG2  WTO   'VOLUME UNIT TYPE   STATE     CNT CNT STATUS            X
                     ',ROUTCDE=(11),MF=L
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE
PCL      DC    A(PARSECL)
TYP3330V DC    XL4'30582009'
X7F      DC    XL4'0000007F'
EDMASK   DC    XL4'40202120'
X00FF    DC    XL4'0000FFFF'                                      INTEL
ALLVOL   DC    CL6'ALL'
VMSG     DC    CL31'NO DRIVES FOUND TO MATCH       '
ONLINE   DC    CL7'ONLINE'
OFFLINE  DC    CL7'OFFLINE'
VARY     DC    CL4'VARY'
*
DDEN1    DC    CL9'800/1600'
DDEN2    DC    CL9'1600/6250'
DEN800   DC    CL9'800'
DEN1600  DC    CL9'1600'
DEN6250  DC    CL9'6250'
DEN38K   DC    CL9'  38000'
*
*.....................................................................*
*        PARAMETERS AND VARIABLES PASSED TO EXTERNAL ROUTINES         *
*.....................................................................*
         SPACE
         SPACE
         LTORG
         EJECT
*
* PROGRAM  E Q U A T E S
*
R0       EQU   0             WORK-MACROS
R1       EQU   1             WORK-MACROS
R2       EQU   2             WORK
R3       EQU   3             WORK
R4       EQU   4             WORK
R5       EQU   5             LENGTH OF CURRENT VOLSER
R6       EQU   6             IKJPARMD DSECT POINTER
R7       EQU   7             UCB LIST INDEX POINTER
R8       EQU   8             ADDRESS OF CURRENT UCB
R9       EQU   9             LINKREG FOR SUBROUTINE USAGE
R10      EQU   10            WORK REGISTER
R11      EQU   11            CORE DSECT ADDRESSABILITY
R12      EQU   12            PROGRAM BASE REGISTER
R13      EQU   13            SAVE AREA POINTER
R14      EQU   14            WORK - MACROS
R15      EQU   15            WORK - MACROS
*
D0       EQU   0
D1       EQU   1
D2       EQU   2
D4       EQU   4
D8       EQU   8
D12      EQU   12
D16      EQU   16
*
BLANK    EQU   C' '
HEADING  EQU   X'01'
FOUND    EQU   X'02'
NOTFOUND EQU   255-FOUND
SKIP     EQU   X'80'
NOSKIP   EQU   255-SKIP
DOALLVOL EQU   X'04'
DOONLINE EQU   X'80'
DOOFFLIN EQU   X'08'
CHARZERO EQU   C'0'
         EJECT
         PRINT NOGEN
PARSECL  IKJPARM
VOLUMES  IKJIDENT 'VOL',LIST,                                          X
               MAXLNTH=7,FIRST=ALPHANUM,OTHER=ALPHANUM,                X
               HELP=('VOL SERS FIND UCB STATUS OR ''ALL'' ',           X
               'VOL MAY BE COMPLETE OR GENERIC VOLUME SERIAL #'),      X
               DEFAULT='ALL   '
         IKJENDP
         PRINT GEN
         EJECT
         IKJCPPL
         SPACE 2
         IKJPPL
PPLL     EQU   *-PPL
         EJECT
         IKJECT
         EJECT
         IKJUPT
         EJECT
         CVT   DSECT=YES,SYS=VMS,TSO=YES
         IHAPSA
         EJECT
UCBSECT  DSECT
         IEFUCBOB
         EJECT
         IHAASCB
         EJECT
         IHAASVT
         EJECT
*
* DYNAMIC WORK AREA FOR PROGRAM
*
CORE     DSECT
         DS    18F
ANS      DS    F
ECB      DS    F
PDEPTR   DS    F
PPLAREA  DS    (PPLL/4)F
MSG      DS    CL84           WTO MESSAGE AREA + PADDING
MSGL     EQU   *-MSG
MSGEND   EQU   *
*
         ORG   MSG+4
         DS    CL1
MSGUNIT  DS    CL3
         DS    CL1
MSGVOL   DS    CL6
         DS    CL2
MSGSTAT  DS    CL7
         DS    CL1
MSGUSER  DS    CL8
         DS    CL1
MSGVARY  DS    CL4
         DS    CL1
MSGDENS  DS    CL9
         DS    CL1
MSGMODL  DS    CL8
*
         ORG   MSG+4                    NEW OVERLAY FOR ERROR MESSAGE
MSGNVOL  DS    CL31
         ORG   MSG+29                     FOR NO VOLUME FOUND
MSGIVOL  DS    CL6
*
         ORG   MSGEND
*
VOL      DS    CL6                      TO SAVE THE TARGET FOR COMPARES
SW1      DS    1C
SW2      DS    1C
TSOFLAG  DS    X                   ='80' IF TSO. '00' IF NOT TSO
ANSWER   DS    F                   ADDRESS POINTER FOR EXTRACT
DBLW     DS    4D
         ORG   DBLW
EXTRACT1 DS    4D
         DS    0D
DMYECT   DS    XL60                     DUMMY ECT FOR BATCH
         DS    0D
DMYUPT   DS    CL24                     DUMMY UPT FOR BATCH
         DS    0D
DMYCMD   DS    CL124                    DUMMY COMMAND FOR BATCH
         SPACE 2
*
IEFPARM  DS    0D                       *  THESE THREE FIELDS        *
TBLADR   DS    A(UNITABL)               *     MAKE UP THE PARAMETER  *
FLGADR   DS    A(UNITFLAG+X'80000000')  *         LIST FOR IEFEB4UV  *
*
UNITABL  DS    0CL20                    *  THESE FIELDS COMPRISE     *
UNITNAME DS    XL8'4040404040404040'    *     THE ACTUAL PARAMETERS  *
UNITTYPE DS    XL4'00000000'            *         PASSED TO IEFEB4UV *
FILLER   DS    XL8'0'                   *             ..             *
UNITFLAG DS    X'2100'                  *             ..             *
*
UCBRTN   DS    F         ADDRESS OF 'IOSVSUCB' (FROM FIELD CVTUCBSC)
*
IOSPARM  DS    0D                       *  THESE FOUR FIELDS         *
WADR     DS    A(IOSWORK)               *     MAKE UP THE PARAMETER  *
CLSADDR  DS    A(IOSDVCLS)              *          LIST PASSED TO    *
UCBADDR  DS    A(IOSUCB+X'80000000')    *              IOSVSUCB      *
*
IOSWORK  DS    CL100                    *  THESE THREE FIELDS ARE    *
IOSDVCLS DS    X'00'                    *     THE ACTUAL PARAMETERS  *
IOSUCB   DS    F'0'                     *         USED BY IOSVSUCB   *
*
CORENEED EQU   *-CORE
*
         END
