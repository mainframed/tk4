*          DATA SET PSNRFPRC   AT LEVEL 001 AS OF 10/30/80
         TITLE 'PSNRFPRC - REFORMAT THE PROC STATEMENT'
PSNRFPRC PSNMSTRT  SASIZ=WKLENG
         EJECT
*                    TO REFORMAT THE PROC STATEMENT, SORTING AND
*                    ALIGNING THE KEYWORDS, AND INSERTING THE
*                    PROPER HEADING COMMENT AT THE TOP
*
*
         BAL   R14,PUTCOMNT       PUT OUT THE HEADING COMMENT
*
         BAL   R14,SRTPROC        SORT THE KEYWORDS INTO ORDER
*
         BAL   R14,PROCNAME       PUT OUT THE PROC NAME FIRST
         LTR   R15,R15            ANY MORE TO SUBSTITUTE
         BNZ   RETURN
*
NEXTWORD EQU   *
         BAL   R14,DOWORD         PUT OUT THE NEXT KEYWORD
         LTR   R15,R15
         BZ    NEXTWORD           AND DO THEM ALL
         B     RETURN             FINAL EXIT FROM ROUTINE
         EJECT
*                    TO INSERT THE COMMENT IN THE TOP OF THE PROC
*                    USING THE ONE THERE, OR BUILD A PATTERN FOR
*                    THEM TO BUILD ON
*
PUTCOMNT PSNMBLOK  PCM,RENT=YES
         L     R9,PSWHEADC        ADDRESS THE HEADING COMMENT
         USING COMMENT,R9         AND ADDRESS IT
         LTR   R9,R9              IS THERE A COMMENT
         BZ    PCMDEFLT           NO - BUILD OUR OWN
         TM    CMTIND1,CMTI1AST   IS THE FIRST ALL ****
         BO    PCMBUILD           YES - CARRY ON WITH IT
         L     R15,PSWWRITE       BUILD THE STARS LINE
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PART
         MVC   3(68,R15),2(R15)   ROLL OVER THE *****'S
*
PCMBUILD EQU   *                  BUILD EACH OF THE LINES
         L     R15,PSWWRITE       FETCH BACK NEXT BUFFER
         BALR  R14,R15
         LR    R8,R15             THIS IS THE BUFFER ADDRESS
         MVI   2(R8),C'*'         STANDARD COMMENT STARTER
         MVI   70(R8),C'*'        STANDARD BACK FRAMING
         TM    CMTIND1,CMTI1AST   IS IT A FULL STRING OF ***
         BO    PCMALLST           ALL STARS - HANDLE IT
         TM    CMTIND1,CMTI1BLK   HOW ABOUT A BLANK LINE
         BO    PCMNEXT            YES - HAVE DONE THAT ALREADY
*                    PUT THE COMMENT IN ON COLUMN 12
         LH    R1,CMTLENGC        THE LENGTH OF THE TEXT
         BCTR  R1,0               FOR THE EX MOVE
         LA    R0,58              MAXIMUM LENGTH ALLOWED - THIS FORMAT
         CR    R1,R0              WILL IT FIT
         BNH   *+10               BIF IT ALL FITS
         LR    R1,R0              NO FIT - USE MAX ALLOWED
         MVI   70(R8),C'+'        SHOW WAS MORE TO COMMENT
         EX    R1,PCMMOVE         MOVE COMMENT TO LINE
         B     PCMNEXT
PCMMOVE  MVC   11(0,R8),CMTTEXT   MOVE TEXT TO OUTPUT LINE
*
PCMALLST EQU   *
         MVC   3(67,R8),2(R8)     ROLL DOWN THE *
*
PCMNEXT  EQU   *
         L     R1,CMTNEXT         CHECK - IS THERE ANOTHER COMMENT
         LTR   R1,R1              .
         BZ    PCMLAST            LAST ONE - SPECIAL CHECK FOR FRAMING
         LR    R9,R1              ADDRESS THE NEXT COMMENT BLOCK
         B     PCMBUILD           AND BACK TO REBUILD IT
*
PCMLAST  EQU   *                  WAS LAST ONE A STARS LINE
         TM    CMTIND1,CMTI1AST   WELL, WAS IT....
         BO    PCMEXIT            YES - THATS REALLY COMMENDABLE
         L     R15,PSWWRITE       BUILD THE STARS LINE
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PART
         MVC   3(68,R15),2(R15)   ROLL OVER THE *****'S
         B     PCMEXIT
         DROP  R9
*
*                    IF NO COMMENT - PROVIDE A PATTERN
PCMDEFLT EQU   *
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVC   3(68,R15),2(R15)   ROLL DOWN THE *
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(8,R15),PSWMNEWN INSERT THE PROC NAME
         MVC   19(15,R15),=C' - TITLE OF JOB'
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(11,R15),=C'PURPOSE  - '   LITERAL TO START FILL-IN
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVI   70(R15),C'*'       END OF THE LINE FRAMING
         MVC   11(11,R15),=C'RESTART  - '   LITERAL TO START FILL-IN
*
         L     R15,PSWWRITE       ADDRESS THE WRITER
         BALR  R14,R15            REQUEST THE BUFFER
         MVI   2(R15),C'*'        PUT IN THE STANDARD PREFIX
         MVC   3(68,R15),2(R15)   ANOTHER START LINE FOR THE END
*
         B     PCMEXIT            THE DEFAULT BOX IS BUILT
*
         LTORG
         EJECT
*                    TO SORT THE KEYWORDS IN THE PROC STATEMENT IN
*                    ASCENDING ORDER, IN KEEPING WITH EASE OF
*                    REFERENCE EVEN THOUGH THE STANDARD IS MUTE
*                    ON THIS POINT.
*
SRTPROC  PSNMBLOK  SRP
         L     R9,PSWASYM+12      THE START OF THE SYMBOLS LIST
         ST    R9,PSWCHSYM        IS SYMBOL CHAIN START....
*
SRPREORD EQU   *                  START DOWN THE CHAIN
         LA    R7,PSWCHSYM        ADDRESS THE BASE OF THE CHAIN
         L     R9,PSWCHSYM        AND POINT TO FIRST/CURRENT ENTRY
         USING SYMBOL,R9
         SR    R6,R6              COUNTER FOR NUMBER OF SUBSTITUTIONS
SRPLOOP  EQU   *                  MATCH ADJACENTS FOR PROPER ORDER
         L     R8,SYMNEXT         LOOK ON TO NEXT ENTRY
         LTR   R8,R8              WAIT - IS THER ANOTHER ONE THERE
         BZ    SRPENDC            NO - END OF THE CHAIN
         CLC   SYMVALU,SYMVALU-SYMBOL(R8) MATCH CURRENT TO NEXT
         BH    SRPSWAP            OUT OF ORDER - RECHAIN THEM
         LR    R7,R9              CHANGE CURRENT TO PREVIOUS POINTER
         LR    R9,R8              MAKE NEXT THE CURRENT ONE
         B     SRPLOOP            AND BACK TO TRY NEXT ONE
*
SRPSWAP  EQU   *                  RECHAIN TO SWAP THE TWO ENTRIES
         L     R1,0(,R8)          THE FORWARD POINTER FROM NEXT
         ST    R8,0(,R7)          RECHAIN NEXT TO CURRENT
         ST    R9,0(,R8)          CHANGE CURRENT TO NEXT
         ST    R1,0(,R9)          THIS IS NOW FORWARD POINTER FROM NEXT
         LR    R7,R8              THE NEW PRIOR POINTER
         LA    R6,1(,R6)          AND RECORD A SWAP HAPPENNED.
         B     SRPLOOP            BACK TO CARRY ON DOWN THE CHAIN
*
SRPENDC  EQU   *                  END OF THE CHAIN REACHED
         LTR   R6,R6              WERE ANY SWAPS MADE
         BNZ   SRPREORD           YES - BETTER TRY AGAIN
         SR    R15,R15            NO - ALL DONE
         B     SRPEXIT            THE CHAIN IS REORDERED.
         EJECT
*                    TO INSERT THE NAME OF THE PROC, AND THE
*                    LITERAL 'PROC' INTO THE FIRST REAL LINE
*
PROCNAME PSNMBLOK  PNM
         L     R15,PSWWRITE       PICK UP THE NEXT OUTPUT BUFFER
         BALR  R14,R15
         LR    R8,R15             ADDRESS THE BUFFER
         MVC   2(8,R8),PSWMNEWN   NEWNAME TO THE PROC NAME
         MVC   11(4,R8),PSWCPROC  INCLUDE THE LITERAL
         LA    R7,70(,R8)         POINT TO END OF  LINE
         L     R9,PSWCHSYM        ADDRESS THE FIRST SYMBOLIC
         CLC   SYMBOL(SYMBLENG),PSWHEXZ  IS IT A NULL ENTRY
         BE    PNMNONE            YES - SKIP REST OF IT
         LA    R8,16(,R8)         POINT TO INSERT POINT
         BAL   R14,MOVESYM        AND MOVE IN THE SYMBOL
         L     R9,SYMNEXT         ON TO THE NEXT ONE
         LTR   R9,R9              ARE THERE ANY MORE
         BZ    PNMNONE            NO MORE - SKIP IT
         SR    R15,R15
         B     PNMEXIT
*
PNMNONE  EQU   *                  NO MORE SYMBOLICS TO REFORMAT
         LA    R15,4
         B     PNMEXIT
         EJECT
*                  TO BUILD THE POINTERS FOR THE NORMAL INSERTION
*                  ROUTINE - ONE TO A LINE
*
DOWORD   PSNMBLOK  DWD
         L     R15,PSWWRITE
         BALR  R14,R15            PROCURE THE BUILDING AREA
         LA    R7,70(,R15)        POINT TO END OF IT
         LA    R8,15(,R15)        AND THE START OF IT
         BAL   R14,MOVESYM        AND DO THE WORK
         SR    R15,R15            PRESET CONTINUATION RETURN CODE
         L     R9,SYMNEXT         LOOK ON TO NEXT BLOCK
         LTR   R9,R9              IS THERE ONE
         BNZ   DWDEXIT            YES - CARRY STRAIGHT ON
         LA    R15,4              CODE FOR END OF THE STRING
         B     DWDEXIT
*
         EJECT
*                    GIVEN R8 POINTS TO WHERE TO START THE BUILD,
*                    AND R7 POINTS TO LAST USEABLE CHARACTRER ON
*                    THE LINE, R9 POINTS TO THE SYM ENTRY;  MOVE THE
*                    VALUE, AND ITS SUBSTITUTION VALUE TO THE
*                    PRINT LINE
*
MOVESYM  PSNMBLOK  MSY
         MVC   0(8,R8),SYMVALU    PUT IN THE VALUE ITSELF
         AH    R8,SYMLVALU        POINT PAST THE WORD
         MVI   0(R8),C'='         PUT BACK THE DELIMITER
         LA    R8,1(,R8)          ADVANCE THE POINTER
         LH    R1,SYMLSUBS        LENGTH OF THE SUBSTITUTION VALUE
         LTR   R1,R1              IS THERE ANYTHING THERE
         BNP   MSYNONE            NOPE - SKIP IT
         BCTR  R1,0
         EX    R1,MSYMOVE         MOVE IN THE VALUE ITSELF
         LA    R8,1(R1,R8)        COLUMN PAST THE VALUE
MSYNONE  EQU   *
         L     R1,SYMNEXT         IS THERE ANOTHER ENTRY PAST THIS
         LTR   R1,R1              .
         BZ    *+12               NO - CARRY ON WITH LAST ENTRY
         MVI   0(R8),C','         STILL MORE - SHOW THE CONTINUE
         LA    R8,1(,R8)          INDEX UP THE EOL POINTER
*                    R8 POINTS TO FIRST BLANK,  R7 TO LAST USEABLE
         L     R15,SYMCOMNT       PICK UP THE COMMENT POINTER
         LTR   R15,R15            IS THERE A COMMENT
         BZ    MSYEXIT            NO - END OF THE WORD PROCESS
*
*                    PUT IN THE COMMENT - NOTE IT IS RIGHT JUSTIFIED -
*                    THERE ARE OTHER WAYS TO DO IT;  THIS WAS SIMPLY
*                    THE FIRST WAY TO TRY OUT - UNDOUBTEDLY IT WILL
*                    BE CHANGED AS THE DECISION-MAKING PROCESS
*                    CONTINUES.
*
         SR    R14,R14            TO CAPTURE THE LENGTH OF COMMENT
         IC    R14,SYMCOMNT       .
         BCTR  R14,0              PREPARED FOR THE MOVE
         LA    R1,0(,R7)          BUILD POINTER TO RECEIVING AREA
         SR    R1,R14             AS END LESS COMMENT LENGTH
         CR    R8,R1              UNLESS IT OVERFLOWS, THAT IS
         BL    MSYCOMOK           ALL PROPER - IT WILL FIT
         LA    R1,1(,R8)          NEW TARGET FOR COMMENT MOVE
         LA    R14,0(,R7)         THIS IS END OF RECEIVING AREA
         SR    R14,R1             SO THIS IS LENGTH TO MOVE
         BCTR  R14,0              RECOMPUTE FOR THE EXEC, OF COURSE
         MVI   0(R7),C'+'         SHOW COMMENT WAS TRUNCATED
MSYCOMOK EQU   *                  AND MOVE IN THE COMMENT
         EX    R14,MSYMVCOM       MOVE COMMENT TO JCL LINE
         LA    R15,4              SHOW A COMMENT WENT INTO LINE
         B     MSYEXIT
*
MSYMOVE  MVC   0(0,R8),SYMSUBS    MOVE SUBST DATA TO LINE
MSYMVCOM MVC   0(0,R1),0(R15)     MOVE COMMENT TO LINE
         EJECT
         PSNMSYM
         SPACE 3
         PSNMCMT
         EJECT
WORKAREA DSECT
         DS    18F
         DS    X
         PSNMBLOK  RENT=REGS
WKLENG   EQU   *-WORKAREA
         EJECT
         PSNMWORK
         END
