        /* DATA SET S963P00A   AT LEVEL 001 AS OF 05/24/78    */
 /* GETCOM - GET LOGICAL COMMAND RECORD                  */
 /*                                                      */
 /*          CALLED BY: GET_PARAM                        */
 /*                                                      */
 GETCOM: PROC(COMMAND_NO,COMREC,EOF_FLAG,TOOLONG,CONTINUE_FLAG);
      DCL CONTROL         FILE INPUT RECORD ENV(CONSECUTIVE),
          COMMAND_NO      FIXED BIN(15),
          COMREC          CHAR(1024) VARYING,
          CONTINUE_FLAG   BIT(1),
          EOF_FLAG        BIT(1),
          FIRST           BIT(1) INIT(1B),
          INREC           CHAR(80) INIT(' '),
          OUTLINE         CHAR(120),
          QUOTE           BIT(1) INIT(0B),
          TOOLONG         BIT(1),
          BLDCOM          EXTERNAL ENTRY,
          CARDRPT         EXTERNAL ENTRY;
                       /*                                             */
      TOOLONG=0B;
      CONTINUE_FLAG=0B;
      ON ENDFILE (CONTROL) EOF_FLAG=1B;
                             /*                            */
                             /* READ CONTROL RECORDS TIL EOF */
                             /*   OR IF COMMAND CONTINUED  */
                             /*                            */
      DO WHILE (^EOF_FLAG & CONTINUE_FLAG × FIRST);
         INREC=' ';
         DO WHILE (INREC=' ' & ^EOF_FLAG);
            READ FILE (CONTROL) INTO (INREC);
         END;
         FIRST=0B;
         IF ^EOF_FLAG THEN DO;
            PUT STRING (OUTLINE) EDIT (COMMAND_NO,INREC)
                                      (X(4),P'ZZZ9',X(11),A(80));
            CALL CARDRPT(OUTLINE);
                      /*                                  */
                      /* IF LOGICAL COMMAND REC TOO LONG, */
                      /*     DONT BUILD ANY MORE OF IT.   */
                      /*                                  */
            IF ^TOOLONG THEN DO;
               CALL BLDCOM
                  (COMMAND_NO,INREC,COMREC,CONTINUE_FLAG,QUOTE,TOOLONG);
            END;
         END;
               /*                                                    */
               /* IF EOF BUT LAST REC CONTINUED, FLAG AS ERROR       */
               /*                                                    */
         ELSE IF CONTINUE_FLAG THEN DO;
            OUTLINE='*** WARNING *** EXPECTED CONTINUATION CARD ' ××
                    'NOT FOUND.  WILL ATTEMPT TO EXECUTE.';
            CALL CARDRPT (OUTLINE);
         END;
      END;
 END GETCOM;
* PROCESS;
 /* BLDCOM -           BUILD LOGICAL COMMAND RECORD        */
 /*                    CALLED BY GETCOM                    */
 /*                                                        */
 BLDCOM: PROC(COMMAND_NO,INREC,COMREC,CONTINUE_FLAG,QUOTE,TOOLONG);
      DCL COMMAND_NO       FIXED BIN(15),
          COMREC           CHAR(1024) VARYING,
          CONTINUE_FLAG    BIT(1),
          INREC            CHAR(80),
          NULL_FLAG        BIT(1),
          OUTLINE          CHAR(120),
          QUOTE            BIT(1),
          RECLEN           FIXED BIN(15),
          TOOLONG          BIT(1),
          BLANKER          EXTERNAL ENTRY,
          CARDRPT          EXTERNAL ENTRY,
          NOSEMI           EXTERNAL ENTRY;
                                        /* BLANK OUT SEQUENCE #  */
      SUBSTR(INREC,73,8)=' ';
                                    /*                                */
                                    /* IF ALL BLANKS, ITS A NULL REC  */
                                    /*                                */
      I=VERIFY(INREC,' ');
      IF I ^= 0 THEN DO;
         INREC=SUBSTR(INREC,I);
                          /*                                          */
                          /* REMOVE TRAILING ; AND TRUNCATE SYSIN REC */
                          /*                                          */
         CALL NOSEMI(INREC,CONTINUE_FLAG,RECLEN);
                           /*                                         */
                           /* COMPRESS MULTI BLANKS TO A SINGLE BLANK */
                           /*                                         */
         CALL BLANKER(INREC,QUOTE,RECLEN);
                          /*                                          */
                          /* MERGE SYSIN REC INTO LOGICAL COMMAND REC */
                          /*                                          */
         IF LENGTH(COMREC)+RECLEN <= 1024 THEN DO;
            COMREC=COMREC ×× SUBSTR(INREC,1,RECLEN);
            TOOLONG=0B;
         END;
         ELSE DO;
            OUTLINE='***ERROR *** LOGICAL COMMAND RECORD EXCEEDS ' ××
                    '1024 CHARACTERS.  WILL ATTEMPT TO EXECUTE';
            CALL CARDRPT(OUTLINE);
            TOOLONG=1B;
         END;
     END;
 END BLDCOM;
* PROCESS;
 /* BLANKER               COMPRESS MULTIPLE BLANKS TO SINGLE BLANK */
 /*                       CALLED BY BLDCOM                         */
 /*                                                                */
 BLANKER: PROC(INREC,QUOTE,RECLEN);
      DCL BLANK_FLAG         BIT(1) INIT(1B),
          DUMREC             CHAR(80) INIT(' '),
          DUMSTART           FIXED BIN(15) INIT(1),
          INREC              CHAR(80),
          LASTCHAR           CHAR(1) INIT('X'),
          QUOTE              BIT(1),
          RECLEN             FIXED BIN(15),
          THECHAR            CHAR(1);
                     /*                                           */
                     /* SCAN RECORD FROM LEFT TO RIGHT FOR BLANKS */
                     /*                                           */
      DO I = 1 TO RECLEN;
         THECHAR=SUBSTR(INREC,I,1);
         IF ^QUOTE  & THECHAR=' ' THEN DO;
            IF ^BLANK_FLAG THEN DO;
               BLANK_FLAG=1B;
               IF LASTCHAR ^= ',' THEN DO;
                  LASTCHAR=' ';
                  DUMSTART=DUMSTART+1;
               END;
            END;
         END;
                /*                                                   */
                /* NON-BLANK CHAR. MOVE IT INTO TEMP BUFFER 'DUMREC' */
                /*                                                   */
         ELSE DO;
            BLANK_FLAG=0B;
            IF THECHAR=',' & LASTCHAR=' ' THEN DUMSTART=DUMSTART-1;
            LASTCHAR,SUBSTR(DUMREC,DUMSTART,1)=THECHAR;
            DUMSTART=DUMSTART+1;
            IF THECHAR='''' THEN QUOTE=^QUOTE;
         END;
      END;
                       /*                          */
                       /* ASSIGN NEW RECORD LENGTH */
                       /*                          */
      RECLEN=DUMSTART-1;
               /*                                                 */
               /* MOVE TEMP RECORD BACK INTO SYSIN BUFFER (INREC) */
               /*                                                 */
      INREC=DUMREC;
 RETURN;
 END BLANKER;
* PROCESS;
 /* NOSEMI - REPLACE TRAILING ; WITH A BLANK ON COMMAND       */
 /*                                                           */
 /*          CALLED BY: BLDCOM                                */
 /*                                                           */
 NOSEMI: PROC(INREC,CONTINUE_FLAG,RECLEN);
      DCL CONTINUE_FLAG BIT(1),
          INREC         CHAR(80),
          RECLEN        FIXED BIN(15);
          /*                                                     */
          /*      BLANK OUT SEQUENCE # IN COL 73-80. THEN        */
          /* SCAN RECORD FROM RIGHT TO LEFT FOR FIRST NON-BLANK */
          /*                                                     */
      SUBSTR(INREC,73,8)=' ';
      DO I=72 TO 1 BY -1 WHILE (SUBSTR(INREC,I,1)=' ');
      END;
      /*                                                        */
      /* IF NON-BLANK CHAR A SEMICOLON, REPLACE IT WITH A BLANK */
      /*         SET CONTINUE_FLAG = 1B                         */
      /*                                                        */
      IF SUBSTR(INREC,I,1)=';' THEN DO;
         SUBSTR(INREC,I,1)=' ';
         CONTINUE_FLAG=1B;
         RECLEN=I-1;
      END;
      ELSE DO;
         CONTINUE_FLAG=0B;
         RECLEN=I;
      END;
 END NOSEMI;
* PROCESS;
 /* CARDRPT -           PRINT CONTROL CARD REPORT           */
 /*    CALLED BY:                                           */
 /*               BLDCOM    GET_PARMS GETCOM                */
 /*                                                         */
 CARDRPT: PROC(OUTLINE);
      DCL REPORT         FILE PRINT,
          OUTLINE CHAR(120);
                                   /*                                 */
                                   /*    PRINT OUTPUT LINE            */
                                   /*                                 */
      PUT FILE (REPORT) SKIP EDIT
          (OUTLINE)
          (X(3),A(120));

 END CARDRPT;
