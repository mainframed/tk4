        /* DATA SET S963P35    AT LEVEL 001 AS OF 05/24/78    */
 P963P35: /* DASD MONITOR SYSTEM - ELIMINATE DUPLICATE MSS VOLS V1M0 */
          PROC OPTIONS(MAIN) REORDER;
 /*                                                                  */
 /*  READ IN AND SORT THE MONVOLS OUTPUT FROM P963P30 TO ELIMINATE   */
 /*  DUPLICATE VOLUME SERIAL NUMBERS.  THE OUTVOLS DATASET IS        */
 /*  GIVEN TO MAPDISK TO MOUNT AND MAP EACH VOLUME LISTED.           */
 /*                                                                  */
 /*                                                                  */
 /* KEN TRUE      V1M0    13 FEB 78                                  */
 /*                                                                  */
 /* PROGRAM RETURNS RC=1000   NORMAL (NO PROBLEMS)                   */
 /*                 RC=1016   NO MSSVOLS TO MONITOR                  */
 /*                                                                  */
 DCL R941X11 EXTERNAL ENTRY            /* GREGORIAN TO JULIAN DATE*/
             OPTIONS(ASSEMBLER,INTER);


 DCL (DATE,TIME)    BUILTIN;


 DCL INVOLS   FILE  RECORD SEQUENTIAL INPUT  ENV(CONSECUTIVE);
 DCL OUTVOLS  FILE  RECORD SEQUENTIAL OUTPUT ENV(CONSECUTIVE);
 DCL REPORT   FILE  STREAM PRINT OUTPUT;


 DCL INREC    CHAR(80)    INIT(' ');


 DCL (VOLS_IN,VOLS_OUT,VOLS_BYPASSED,
      RPTPAGENO,
      I,J,K)
                     FIXED BIN(15,0) INIT(0);

 DCL RETURN_CODE     FIXED BIN(31,0) INIT(0);

  DCL EOF_INVOLS     BIT(1)   INIT('0'B),
      FINISHED       BIT(1)   INIT('0'B);


  DCL INDATE         CHAR(6)     INIT(' '),
      YY             CHAR(2) DEF(INDATE) POS(1),
      MM             CHAR(2) DEF(INDATE) POS(3),
      DD             CHAR(2) DEF(INDATE) POS(5);

  DCL TODAY   CHAR(5),
      TODAY_JDATE    PIC'99999'      INIT(0),
      THRESH_JDATE_C PIC'99999'      INIT(0),
      THRESH_JDATE   FIXED DEC(5)    INIT(0);

  DCL HEADING         CHAR(130),
      RPTNO           CHAR(3)       DEF(HEADING) POS(  6),
      RUN_DATE        PIC'Z9/99/99' DEF(HEADING) POS( 95),
      RUN_JDATE       PIC'99.999'   DEF(HEADING) POS(105),
      RUN_TIME        PIC'Z9.99.99' DEF(HEADING) POS(113),
      PAGENO          PIC'ZZ9'      DEF(HEADING) POS(128),
      SUBTITLE        CHAR(112)  VAR INIT(''),
      HEADING2        CHAR(130),
      HEADING3        CHAR(130),
      BLANKLINE       CHAR(130) INIT((130)' ');

1/*  INITIALIZATION OF VARIABLES                                    */

  HEADING =   'L963-035 FAIRCHILD CAMERA AND INSTRUMENT       ' ××
              '   DASD MONITOR SYSTEM  VER(V1M0)      ' ××
              'RUN ON: 99/99/99 (99.999) 99.99.99  PAGE 999';

  HEADING2 =  '';
  HEADING3 =  '';
  INDATE   = DATE;
  RUN_DATE = MM ×× DD ×× YY;
  RUN_TIME = SUBSTR(TIME,1,6);
  TODAY = JULIAN(INDATE);
  TODAY_JDATE = TODAY;
  RUN_JDATE   = TODAY;

  OPEN FILE(INVOLS)   INPUT,
       FILE(OUTVOLS)  OUTPUT,
       FILE(REPORT) OUTPUT LINESIZE(130);

  ON ENDPAGE(REPORT)
     CALL FIN_PAGE(REPORT,'035',HEADING3,RPTPAGENO);

  ON FINISH
    BEGIN;
      CLOSE FILE(INVOLS),
            FILE(OUTVOLS),
            FILE(REPORT);
    END;

  HEADING3 =  '  ACTION TAKEN           VOLUME  DEVICE    MSVGP    ' ××
              ' OWNER       DESCRIPTION                   ';
  /*            OOOOOOOOOO  XXXXXZZZZZXXXXXZZZZZXXXXXZZZZZ          */
  /*           *BYPASSED AS DUPLICATE*  XXXXXX  XXXXXXXX  XXXXXXXX  */
  /*           SELECTED FOR MONITORING                              */

  SUBSTR(HEADING2,52,27) =
             'DUPLICATE VOLUME ELIMINATOR';


  SIGNAL ENDPAGE(REPORT);              /* WRITE REPORT HEADINGS       */

  ON ENDFILE(INVOLS) EOF_INVOLS = '1'B;



1 /*  INVOKE SORT TO SORT THE VOLUME LIST */




 CALL PLISRTD(' SORT FIELDS=(1,6,CH,A,32,5,CH,D) ',
              ' RECORD TYPE=F,LENGTH=(80) ',
              45000,RETURN_CODE,E15X,E35X,
              '','NO');

   CALL SUMMARY;     /* OUTPUT SUMMARY REPORT */


   PUT FILE(REPORT) SKIP(2) EDIT
         ('**** END OF REPORT L963-035 ****')
         (A);

   IF VOLS_OUT = 0      THEN RETURN_CODE = 16;

   CALL PLIRETC(RETURN_CODE);


   STOP;

 /* END OF MAIN PROGRAM */

1/* SORT E15 EXIT:  READ RECORDS FROM INVOLS AND PASS TO SORT   */


 E15X: PROC RETURNS(CHAR(80));
   DCL
     INREC CHAR(80),
     OUTREC CHAR(80) INIT(' ');


 ON ENDFILE(INVOLS) BEGIN;

   CALL PLIRETC(8);
   GOTO ENDE15;
                  END;

   READ FILE(INVOLS) INTO(INREC);

   OUTREC = INREC;
   VOLS_IN = VOLS_IN + 1;
 ENDE15: RETURN(OUTREC);
 END E15X;

1/* SORT E35 EXIT:  GET SORTED RECORDS AND COMPARE FOR DUPLICATES */

 E35X: PROC (RECORD);
     DCL  RECORD  CHAR(80);
     DCL  COMMENT CHAR(23) INIT(' ');

 DCL 1 OUTREC   BASED(@OUTREC),        /*  OUTPUT RECORD FOR MAPDISK*/
       2 VOLSER      CHAR(6)   INIT(' '),
       2 UNIT        CHAR(8)   INIT(' '),   /* ESOTERIC UNIT TYPE */
       2 GROUP       CHAR(8)   INIT(' '),   /* MSVGP              */
       2 FREESPC     PIC'ZZZZ9' INIT(0),    /* TOT CYLS AVAIL     */
       2 AVAIL       PIC'ZZZZ9' INIT(0),    /* MAX CONTIG CYLS    */
       2 EXTENTS     PIC'ZZZZZ' INIT(0),    /* # EXTENTS FREE     */
       2 DESCR       CHAR(30)  INIT(' '),   /* FROM GROUP OR VOL  */
       2 OWNER       CHAR(10)  INIT(' '),   /*   "    "   "   "   */
       2 FILLER      CHAR(3)   INIT(' ');

     DCL LASTVOL  CHAR(6) STATIC INIT(' ');

     @OUTREC = ADDR(RECORD);

     IF OUTREC.VOLSER = LASTVOL THEN
       DO;
         COMMENT = '*BYPASSED AS DUPLICATE*';
         VOLS_BYPASSED = VOLS_BYPASSED + 1;
       END;
      ELSE
       DO;
         WRITE FILE(OUTVOLS) FROM(OUTREC);
         COMMENT = 'SELECTED FOR MONITORING';
         VOLS_OUT = VOLS_OUT + 1;
         LASTVOL = OUTREC.VOLSER;    /* REMEMBER THIS VOLUME */
       END;

         PUT FILE(REPORT) SKIP EDIT
           (COMMENT)                                (A)
           (OUTREC.VOLSER)                          (COL(26),A)
           (OUTREC.UNIT)                            (COL(34),A)
           (OUTREC.GROUP)                           (COL(44),A)
           (OUTREC.OWNER)                           (COL(54),A)
           (OUTREC.DESCR)                           (COL(66),A);

      CALL PLIRETC(4);

 END E35X;

1/* PERFORM PAGE HEADER ROUTINE */

 FIN_PAGE: PROC(PRNT,RPT,HEADER,PAGE);

  DCL PRNT       FILE,
      RPT        CHAR(3),
      HEADER     CHAR(*),
      PAGE FIXED BIN(15,0);

      PAGE = PAGE + 1;
      PAGENO = PAGE;

      RPTNO = RPT;


      PUT FILE(PRNT)          EDIT
        (HEADING)    (PAGE,LINE(1),A)
        (HEADING2)   (LINE(2),A)
        (HEADER)     (LINE(4),A)
        (BLANKLINE)  (LINE(5),A);


     RETURN;
  END FIN_PAGE;

1/* PRINT SUMMARY PROGRAM STATISTICS   */
 SUMMARY: PROC;


   PUT FILE(REPORT) SKIP(3) EDIT
         (VOLS_IN,       'VOLUME RECORDS READ IN',
          VOLS_BYPASSED, 'VOLUME RECORDS BYPASSED AS DUPLICATES',
          VOLS_OUT,      'VOLUME RECORDS OUTPUT FOR MONITORING')
         (( 3)(P'ZZ,ZZZ,ZZ9',X(2),A,SKIP));



   RETURN;

 END SUMMARY;


1 JULIAN : PROC (DATEX) RETURNS (CHAR(5));
0 DCL DATEX CHAR (6);
  DCL DATEY CHAR (5), NDAYS PICTURE '999'  INIT (0);
0 DCL MTHS (12) FIXED BIN (15) INIT
       (31,28,31,30,31,30,31,31,30,31,30,31);
  IF MOD ( SUBSTR (DATEX,1,2) , 4 ) = 0
  THEN MTHS (2) = 29;
  SUBSTR (DATEY,1,2) = SUBSTR (DATEX,1,2);
- DO I = 1 TO SUBSTR (DATEX,3,2) - 1;
     NDAYS = NDAYS + MTHS (I);
  END;
  NDAYS = NDAYS + SUBSTR (DATEX,5,2);
0 SUBSTR (DATEY,3,3) =      NDAYS;
0 RETURN (DATEY);
  END JULIAN;

 END P963P35;
