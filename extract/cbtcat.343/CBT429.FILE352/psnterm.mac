*          DATA SET PSNTERM    AT LEVEL 002 AS OF 10/30/80
         TITLE 'PSNTERM - CLEAN UP AFTER EDITING THE PROCS'
PSNTERM   PSNMSTRT SASIZ=WKSIZ
         EJECT
*                    THE TERMINATION ROUTINE FROM THE PROCSCAN SET OF
*                    PROCESSORS  THIS HAS THE RESPONSIBILITY TO CLOSE
*                    ANY OPEN FILES,  DELETE ALL LOADED MODULES, AND
*                    PRINT OUT AS MANY TOTALS AS CAN BE FOUND.
*
*
         BAL   R14,PREPARE        SETUP FOR TERMINATION
*
         BAL   R14,DUMPCTRS       WRITE OUT THE COUNTERS MAINTAINED
*
         BAL   R14,ERRORCTR       WRITE THE ERROR COUNTERS
*
         BAL   R14,DELETMOD       DELETE THE MODULES LOADED
*
         BAL   R14,FREEMAIN       FREE THE MAIN IN THE WORKAREAS
*
         BAL   R14,CLOSEFIL       CLOSE ALL OF THE FILES IN PSW
*
         SR    R15,R15            THIS LOOKS GOOD TO ME
         B     RETURN
         EJECT
*                    TO DO THE PREPARATION FOR TERMINATION - SETUP
*                    FOR THE LAST TIME AROUND
*
PREPARE  PSNMBLOK  PREP,RENT=YES
         ZAP   PSWLINUM,PSWPZERO  CLEAR THE LINE NUMBER
         MVC   PSWPNAME,=CL8' '                                     NTL
         MVC   PSWRMODE,=CL11'RUN STATS'                            NTL
         LA    R1,999             RESET THE LINE COUNTER
         STH   R1,PSWLINCT        FOR ANOTHER NEW PAGE
         B     PREPEXIT
         EJECT
*                    TO WRITE OUT THE COUNTERS MAINTAINED DURING
*                    THE RUN - WRITE TO THE ERROR DATASET AS
*                    EXCEPTIONAL TOTALS....
*
DUMPCTRS PSNMBLOK DCT
         LM    R3,R5,PSWCOUNT     THE COUNTER POINTERS
         LA    R6,1               FLIP-FLOP FOR 3-UP LISTING
*
DCTRLOOP EQU   *
         L     R7,0(,R3)          PICK UP THE COUNTER
         LTR   R7,R7              CHECK IT FOR ZERO
         BZ    DCTRNEXT           NO NEED TO PRINT IT
         BCT   R6,DCTREDIT        TO ACHIEVE TWO PER LINE
         PSNMREPT                 ADDRESS THE PRINT PROCESSOR
         LA    R8,1(,R15)         POINT TO FIRST CANDIDATE
         LA    R6,3               RESET FLIP-FLOP TO FLOP
*                    THIS COUNTER DETERMINES HOW MANY ON A LINE
DCTREDIT EQU   *
         MVC   0(13,R8),CTRMASK   MOVE IN EDIT MASK
         MVC   13(28,R8),4(R3)    MOVE COUNTER DESCRIPTOR
         CVD   R7,WKDOUBL
         ED    0(10,R8),WKDOUBL+4
         LA    R8,40(,R8)         INDEX DOWN THE LINE
DCTRNEXT EQU   *
         BXLE  R3,R4,DCTRLOOP AND BACK FOR THE REST
         SR    R15,R15            RETURN - ALL IS WELL
         B     DCTEXIT
         EJECT
*                    TO WRITE OUT THE ERROR COUNTERS - MAINTAINED
*                    BY THE ERROR PROCESSOR IN THE ERROR TABLES
*
ERRORCTR PSNMBLOK ECT
         SR    R15,R15            NORMAL EXIT
         B     ECTEXIT
*                    ERROR COUNTERS NOT YET IMPLEMENTED
         EJECT
*                    TO DELETE ANY OF THE MODULES LOADED BY THE
*                    RUN - NOTE THE LOADING IS DYNAMIC AS NEEDED
*                    DURING THE RUN - NOT PRELOADED.
*
DELETMOD PSNMBLOK DMOD
         LM    R3,R5,PSWAMODS     POINTER TO START OF THE LIST
*
DMODLOOP EQU   *                   SCAN THE LOAD LIST
         CLI   12(R3),X'FF'        DID THE BLDL WORK FOR THIS ONE
         BNE   DMODNEXT            NO - SKIP THE DELETE ON IT
*                  BLDL WORKED - MUST ASSUME IT WAS LOADED
         L     R2,12(,R3)          POINTER BACK TO THE LOAD LIST
         L     R1,0(,R2)          JUST TO DOUBLE-CHECK
*                    IF NOT LOADED, R1 POINTS BACK TO R3
         CR    R1,R3              IF A MATCH - MODULE NOT LOADED
         BE    DMODNEXT
*                    THIS HAS BEEN LOADED - DELETE HIM
         LA    R0,4(,R3)          POINT TO THE MEMBER NAME
         DELETE EPLOC=(0)
         ST    R3,0(,R2)          POINT BACK TO THIS LOADER.
         MVI   12(R3),X'FF'       CLEAR THE BLDL INDICATOR
DMODNEXT EQU   *
         BXLE  R3,R4,DMODLOOP     CLEAR THEM ALL OUT
*
         B     DMODEXIT           ALL MODULES HAVE BEEN DELETED.
         EJECT
*                    FREE THE VARIOUS GOTTEN-MAINED AREAS
*                    NOW THAT THE END IS NEAR
*
FREEMAIN PSNMBLOK  FRE
         LA    R3,PSWGCORE
         LA    R4,PSWGMLNG        LENGTH OF EACH ENTRY
         LA    R5,PSWCOREX        LAST VALID ENTRY
*
FRELOOP  EQU   *
         LM    R0,R1,8(R3)        PICK UP THE ADDRESS OF THE MAIN
         LTR   R1,R1              IF IT IS THERE....
         BZ    FRENEXT            IF NOT GOTTEN, NO FREE
         FREEMAIN  R,LV=(0),A=(1)
         XC    0(8,R3),0(R3)      CLEAR THE ADDRESS BACK
         XC    12(4,R3),12(R3)    CLEAR THE ADDRESS BACK
FRENEXT  EQU   *
         BXLE  R3,R4,FRELOOP
         SR    R15,R15            ALL HAS BEEN CLEARED
         B     FREEXIT
         EJECT
*                    CLOSE ANY OF THE DCBS THAT HAVE BEEN
*                    WORKED OVER DURING THE RUN
*
CLOSEFIL PSNMBLOK CLOS
         LA    R3,PSWDCBS         POINT TO THE START OF THE DCBS
         LA    R4,4               LENGTH OF A POINTER ENTRY
         LA    R5,PSWDCBX         LAST POSSIBLE DCB POINTER
*
CLOSLOOP EQU   *
         L     R2,0(,R3)          THE ADDRESS OF A DCB
         LTR   R2,R2              IS THERE EVEN ONE THERE
         BZ    CLOSNEXT           NO - SKIP THE IDEA
         TM    48(R2),X'10'       IS THIS THING OPEN?
         BZ    CLOSNEXT           NO - CARRY STRAIGHT ON
*                    AN EXISTANT, OPEN DCB - CLOSE IT
         ST    R2,WKCLOSE
         MVI   WKCLOSE,X'80'      SHOW END OF THIS LIST
         CLOSE   MF=(E,WKCLOSE)
CLOSNEXT EQU   *
         BXLE  R3,R4,CLOSLOOP
         SR    R15,R15            NORMAL COMPLETION, OF COURSE
         B     CLOSEXIT           AND THAT IS THE END OF THAT
         EJECT
CTRMASK  DC    X'40206B2020206B202120',C' - '    MASK FOR COUNTERS
*
         LTORG
         EJECT
*                    THE COMMON WORK AREA FOR THIS MODULE
WORKAREA DSECT
         DS    18F
WKDOUBL  DS    D                  WORK AREA FOR CVD
WKCLOSE  CLOSE  (,),MF=L          RESERVE SPACE FOR PATTERN
         PSNMBLOK RENT=REGS
WKSIZ    EQU   *-WORKAREA
         EJECT
         PSNMWORK
         END
