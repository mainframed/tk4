*          DATA SET PSNWRITE   AT LEVEL 001 AS OF 10/30/80
         TITLE 'PSNWRITE - WRITE MEMBER TO THE PDS'
PSNWRITE  PSNMSTRT  SASIZ=WKLENG
         EJECT
*                    TO WRITE BACK THE MEMBER TO A PDS - EITHER
*                    DEFAULT DD AND NAME OR ACCEPT THOSE SPECIFIED
*                    ON THE TRANSACTION
*
         TM    PSWWFLAG,PSWWFEOF+PSWWFOPN WHAT KIND OF REQUEST IS THIS
         BZ    WRITE              NORMAL ONE - WRITE THE RECORD
         TM    PSWWFLAG,PSWWFOPN  SO - IS THIS THE OPEN ONE
         BO    OPENUP             REQUEST TO OPEN AND OBTAIN BUFFERS
         B     FINALCAL           MEMBER IS DONE - STOW IT
*
*                    FOR THE NORMAL EVERYDAY WRITE REQUEST
WRITE    EQU   *
         LM    R6,R9,PSWWPTR      PICK UP THE WRITE POINTERS
         TM    PSWMFLG1,PSWM1NOL  NO LISTING OF NEW MBR
         BO    WRBLOCK            TRU - SKIP THE WRITE
         LTR   R6,R6              IS THERE SOMETHING THERE
         BZ    WRBLOCK            NO - SKIP IT
         L     R15,PSWERROR       ADDRESS THE WRITE SPECIALIST
         SR    R1,R1              CODE FOR NO ERROR - RETURN BUFFER
         BALR  R14,R15
         MVC   1(80,R15),0(R6)    MOVE IN LAST RECORD               NTL
*
WRBLOCK  EQU   *
         LR    R6,R7              THIS IS THE RECORD PASSED BACK
         BXLE  R7,R8,WRDONE       AND COUNT DOWN THE BUFFER
*                    END OF BUFFER - WRITE IT OUT
         XC    PSWWDECB,PSWWDECB
         WRITE PSWWDECB,SF,MF=E
         CHECK PSWWDECB
*                    REPOINT AND REJOIN
         L     R7,PSWAWBUF        ADDRESS OF THE OUTPUT BUFFER
         B     WRBLOCK            AND BACK TO PICK UP PROPER POINTERS
*
WRDONE   EQU   *
         MVC   0(80,R6),PSWBLANK  CLEAR THE BUFFER FIELD
         MVC   0(2,R6),PSWSJCL    PUT IN THE //
         UNPK  72(8,R6),PSWLINUM  INSERT THE LINE NUMBER
         OI    79(R6),X'F0'       IN READABLE ORDER
         AP    PSWLINUM,PSWMINCR  AND UP LINE NUMBER FOR NEXT TIME
*
         STM   R6,R7,PSWWPTR      SAVE POINTER TO START OF OPEN AREA
         LR    R15,R6             PASS BACK THE NEXT ADDRESS
         B     RETURN
         EJECT
*                    TO INITIATE THE PROCESS FOR A GIVEN MEMBER
*                    CHECK FOR SAME-AS-BEFORE AND SET THE
*                    ENVIRONMENT.
*
OPENUP   EQU   *
         CLC   PSWMDDOT,PSWWDD    ALREADY ON OUR OWN DD?
         BE    OPUDONE            YES - OPEN IS ALL BUT DONE
*                    SO - HE SWITCHED DD'S ON US
         L     R2,PSWPDOUT        POINTER TO THE OUTPUT DCB
         TM    48(R2),X'10'       HAS IT BEEN OPENED
         BZ    OPUCLOZD           NO - NO NEED TO CLOSE IT, THEN
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'       FILL IN THE CLOSE LIST
         CLOSE  MF=(E,WKOPEN)
OPUCLOZD EQU   *
         MVC   PSWWDD,PSWMDDOT    THIS IS OUT DDNAME, NOW
         MVC   DCBDDNAM-IHADCB(8,R2),PSWWDD     PLUG DDNAME INTO DCB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'8F'       OPEN FOR OUTPUT
         OPEN  MF=(E,WKOPEN)
*
         LH    R3,PSWAWBUF+10     THE CURRENT SIZE OF GOTTEN-MAIN
         CH    R3,DCBBLKSI-IHADCB(,R2)     AGAINST CURRENT NEEDS
         BE    OPUDONE            A MATCH - USE CURRENT MAIN
         LTR   R3,R3              IS THERE ANY AT ALL?
         BZ    OPUGETBF           NO - SKIP THE FREE, OF COURSE
         FREEMAIN  R,LV=(0),A=(1)
*
*
OPUGETBF EQU   *                  NOW OBTAIN BUFFERS FOR THE WRITING
         LH    R0,DCBBLKSI-IHADCB(,R2)     PICK UP THE BLOCKSIZE
         STH   R0,PSWAWBUF+10     INTO THE GOTTEN MAIN AREA
         L     R0,PSWAWBUF+8      PICK UP THE SUBPOOL, TOO
         GETMAIN  R,LV=(0)
         ST    R1,PSWAWBUF+12     RECORD START OF IT
         ST    R1,PSWAWBUF        AND CURRENT START, AS WELL
         ST    R1,PSWWDECB+12     PUT BUFFER ADDRESS INTO THE DECB
         AH    R1,PSWAWBUF+10     NOW POINT TO END OF BUFFER
         ST    R1,PSWAWBUF+4      TO SHOW END OF THE AREA
         LA    R0,80              LENGTH OF A LOGICAL RECORD
         STM   R0,R1,PSWWPTR+8    AND UPDATE THE OTHER TWO POINTERS
OPUDONE  EQU   *
         SR    R1,R1              CLEAR FOR NO CURRENT REC INDICATOR
         ST    R1,PSWWPTR         SHOW NO CURRENT RECORD
         L     R1,PSWAWBUF        PICK UP START OF BUFFER AGAIN
         ST    R1,PSWWPTR+4       PRIME THE POINTER TO FREE AREA
         MVI   PSWWFLAG,X'00'     CLEAR THE REQUEST FLAG
         SR    R15,R15
         B     RETURN
         EJECT
*                    THE FINAL CALL FOR A GIVEN MEMBER -
*                    STOW THE DIRECTORY ENTRY AND WRITE SHORT BLOCK
*
FINALCAL EQU   *
         L     R6,PSWWPTR         PICK UP THE POINTER TO LAST RECORD
         TM    PSWMFLG1,PSWM1NOL  NO LISTING OF NEW MBR
         BO    FCBLOCK            TRU - SKIP THE WRITE
         LTR   R6,R6              IS THERE SOMETHING THERE
         BZ    FCBLOCK            NO - SKIP IT
         L     R15,PSWERROR       ADDRESS THE WRITE SPECIALIST
         SR    R1,R1              CODE FOR NO ERROR - RETURN BUFFER
         BALR  R14,R15
         MVC   1(78,R15),0(R6)    MOVE IN LAST RECORD
*
FCBLOCK  EQU   *
         L     R2,PSWPDOUT        THE OUTPUT DCB POINTER
         L     R1,PSWWPTR+4       CURRENT OPEN AREA POINTER
         S     R1,PSWAWBUF        COMPUTE USED PART OF THIS BUFFER
         BZ    FCWRITX            ZERO - LAST BUFFER WAS FULL AND EVEN
         LH    R3,DCBBLKSI-IHADCB(,R2) SAVE THE REAL BLOCKSIZE
         STH   R1,DCBBLKSI-IHADCB(,R2) MAKE THIS BLOCKSIZE FOR NOW
         XC    PSWWDECB,PSWWDECB  CLEAR FOR THE WRITE
         WRITE PSWWDECB,SF,MF=E
         CHECK  PSWWDECB
         STH   R3,DCBBLKSI-IHADCB(,R2)   RESTORE PROPER BLOCKSIZE
FCWRITX  EQU   *
*
*                    AND NOW UPDATE THE DIRECTORY
         MVC   PSWWMBR,PSWMNEWN   PLUG IN THE NEW NAME GIVEN
         STOW  (R2),PSWWMBR,R
         XC    PSWWPTR(8),PSWWPTR CLEAR THE REBLOCKING POINTERS
         MVI   PSWWFLAG,X'00'     CLEAR THE REQUEST FLAG
         SR    R15,R15            PASS NORMAL GOOD JOB BACK
         B     RETURN
         EJECT
WORKAREA DSECT
         DS    18F
WKOPEN   DS    F
WKLENG   EQU   *-WORKAREA
         EJECT
         PSNMWORK
         SPACE 3
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         END
