*          DATA SET PSNINIT    AT LEVEL 002 AS OF 10/30/80
         TITLE 'PSNINIT - ESTABLISH ENVIRONMENT FOR PROCSCAN'
         MACRO
         MFMONTH  &DAYS,&MONL,&RESET=NO
.*                   TO DEFINE AN ENTRY IN THE MONTH
.*                   TABLE FOR MFDATEC - CARRIES EVERYTHING
.*                   YOU NEVER WANTED TO KNOW ABOUT A MONTH
.*
         GBLA  &SDAY,&SMON
         LCLC  &ZERO              FOR A FILL CHARACTER, IF NEEDED.
         LCLA  &SDAY2
         AIF   ('&RESET' NE 'YES').XRESET
&SDAY    SETA  0
&SMON    SETA  0
.XRESET  ANOP
.*
&SMON    SETA  &SMON+1            MONTH COUNTER STARTS AT ONE
&ZERO    SETC  ''
         AIF   (&SMON GT 9).XMONZ
&ZERO    SETC  '0'
.XMONZ   ANOP
&SDAY2   SETA  &SDAY+&DAYS
         DC    PL2'&SDAY',CL2'&ZERO&SMON',PL2'&SDAY2',CL2' '
&SDAY    SETA  &SDAY2             LOOP AROUND THE YEAR
.EXIT    ANOP
         MEND
         EJECT
PSNINIT  PSNMSTRT  SASIZ=WKLENG
         EJECT
*                    THE INITIALIZE ROUTINE OF THE PROCSCAN SERIES
*                    TO OPEN FILES, OBTAIN CORE, DEFINE CURRENT
*                    DATE, AND IN GENERAL BE SURE ALL IS READY
*                    TO BEGIN THE REAL WORK OF THE PROCESS
*
         BAL   R14,GETPARM        PROCESS THE PARM VALUES, IF ANY
*
         BAL   R14,OPENOUT        OPEN THE OUTPUT(ERROR) DATASETS
*
         BAL   R14,OPENIN         OPEN INPUT (CONTROL AND LIBRARY)
*
         BAL   R14,GETMAINS       GET SOME MAIN FOR THE WORKAREAS
*
         BAL   R14,CHAIN          REDO THE POINTERS AS NEEDED
*
         BAL   R14,IPLDATE        DETERMINE WHAT DAY IT IS
*
         B     RETURN
         EJECT
*                    TO OBTAIN MAIN FOR THE WORKAREAS
GETMAINS PSNMBLOK  GM,RENT=YES
         LA    R3,PSWGCORE        POINT TO FIRST OF CORE VECTORS
         LA    R4,PSWGMLNG        LENGTH OF A VECTOR ENTRY
         LA    R5,PSWCOREX
*
GMLOOP   EQU   *
         L     R0,8(,R3)          PICK UP SUBPOOL AND LENGTH
         LTR   R0,R0              IS THERE ANYTHING THERE
         BZ    GMNEXT             NO - A DUMMY ENTRY
         GETMAIN  R,LV=(0)
         ST    R1,12(,R3)         RECORD START OF THE AREA
         ST    R1,0(,R3)          PUT IT IN LAST ENTRY POINTER, TOO
         L     R15,8(,R3)         USE THIS LENGTH
         LA    R15,0(R1,R15)      TO COMPUTE END OF IT
         ST    R15,4(,R3)         SAVE THIS FOR THE BUILDERS
GMNEXT   EQU   *
         BXLE  R3,R4,GMLOOP       AND DO ALL OF THEM
         SR    R15,R15
         B     GMEXIT
         EJECT
*                    OPEN THE OUTPUT DATASETS - EITHER IS OPTIONAL
*                    BUT NOT BOTH OF THEM - SEARCH THE TIOT TO BE
*                    SURE THE DD STATEMENT IS IN PLACE BEFORE TRYING
*                    TO OPEN
*
OPENOUT  PSNMBLOK  OPNO
PSATOLD  EQU   X'218'
TCBTIO   EQU   12
TIOELNGH EQU   24
         LA    R3,2               NUMBER NEEDED TO EXIT THE OPEN SEARCH
         L     R1,PSATOLD         FIND THE TIOT
         L     R1,TCBTIO(,R1)     .
         LA    R2,TIOELNGH(,R1)   POINT TO FIRST DD ENTRY
*
OPNONEXT EQU   *                  LOOK ON AT NEXT ENTRY
         CLC   4(3,R2),PSWDDTRM   IS THIS ONE OF OURS
         BE    OPNOHIT            POSSIBLY - EXAMINE IT
OPNOINCR EQU   *                  LOOK ON TO NEXT ENTRY
         SR    R1,R1              PICK UP LENGTH OF THIS ENTRY
         IC    R1,0(,R2)          PICK UP LENGTH OF THIS ENTRY
         LA    R2,0(R1,R2)        LOOK ON TO NEXT ENTRY
         CLI   0(R2),X'00'        IS THIS THE LAST ONE
         BNE   OPNONEXT           STILL IN IT - LOOK ON
         B     OPNOEND            END OF TIOT - CHECK RESULTS
OPNOHIT  EQU   *                  HAVE FOUND A POSSIBLE CANDIDATE
         L     R4,PSWSTERM        LOAD POINTER TO DCB
         CLC   4(8,R2),PSWDDTRM   IS THIS THE ONE
         BE    OPNOTHIS           YES - OPEN SYSTERM
         L     R4,PSWSYPRT        TRY AGAIN WITH SYSPRINT
         CLC   4(8,R2),PSWDDPRT   AND CHECK THIS ONE
         BE    OPNOTHIS           THAT WAS THE ONE
         B     OPNOINCR           NOT A MATCH - KEEP LOOKING
OPNOTHIS EQU   *
         MVC   DCBDDNAM-IHADCB(8,R4),4(R2) MOVE DDNAME TO DCB
         ST    R4,WKOPEN          SET UP FOR THE REENTRANT OPEN
         MVI   WKOPEN,X'8F'       OPEN FOR OUTPUT
         OPEN  MF=(E,WKOPEN)
         TM    48(R4),X'10'       DID IT REALLY OPEN
         BZ    OPNONOT            NO - THIS IS A PROBLEM
         BCT   R3,OPNOINCR         COUNT OPENS AND LOOK ON
         SR    R15,R15            HAVE OPENED THEM BOTH - CLEAR
         B     OPNOEXIT           TO GO BACK
*                    SOME BUT NOT ALL HAVE OPENED
OPNOEND  EQU   *
         SR    R15,R15            PRESET GOOD RETURN
         LA    R1,1               MINIMUM NUMBER OF UNOPENED FILES
         CR    R3,R1              HOW DOES IT MATCH UP
         BNH   OPNOEXIT           GOOD ENOUGH
*                    HAVE NO REPORTING OUTPUT FILE OOPS.
         PSNMERR  ERRNOOUT        ERROR - NO OUTPUT FILE
         B     OPNOEXIT
*                    AND IF THE FILE DID NOT OPEN PROPERLY
OPNONOT  EQU   *
         LA    R3,4(,R2)          POINT TO DDNAME IN TIOT
         PSNMERR  ERRNOPEN,((R3),8)   DDNAME DID NOT OPEN
         B     OPNOEXIT
         EJECT
*                    TO OPEN THE INPUT DATASETS - THESE
*                    MUST OPEN OR THERE IS A REAL PROBLEM
*
OPENIN   PSNMBLOK  OIN
         L     R2,PSWSYSIN        POINT TO THE SYSIN
         MVC   DCBDDNAM-IHADCB(8,R2),PSWDDSIN
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'
         OPEN  MF=(E,WKOPEN)
         TM    48(R2),X'10'
         BZ    OINSINX            BAD SYSIN OPEN
*
         L     R2,PSWSYLIB        THE SYSLIB DATASET - PROCLIB
         MVC   DCBDDNAM-IHADCB(8,R2),PSWDDSLB
         ST    R2,WKOPEN
         MVI   WKOPEN,X'80'       OPEN SYSLIB FOR UPDATE - READONLY..
*
*                    READ THE JFCB TO OBTAIN THE DSNAME
         RDJFCB MF=(E,WKOPEN)
         LTR   R15,R15            IS THE DCB IN PLACE, AND ALL
         BNZ   OINSLBX            NO - PROBLEM HERE
         L     R1,DCBEXLST-IHADCB(,R2) OBTAIN EXLIST POINTER
         L     R1,0(,R1)          ADDRESS OF THE JFCB READ-IN AREA
         MVC   PSWDSNAM,0(R1)     AND PLUG IN THE DSNAME
*
         OPEN  MF=(E,WKOPEN)
         TM    48(R2),X'10'
         BZ    OINSLBX            SYSLIB DID NOT OPEN
         LH    R1,DCBBLKSI-IHADCB(,R2)  PICK UP THE BLOCKSIZE
         STH   R1,PSWABUFR+10     THIS IS AMOUNT TO GETMAIN
*
*
*                    OPEN THE SNAP DATASET, BUT NOT TO WORRY IF
*                    THERE IS SOME PROBLEM
         L     R2,PSWSNAPD
         MVC   DCBDDNAM-IHADCB(8,R2),PSWDDSNP
         ST    R2,WKOPEN
         MVI   WKOPEN,X'8F'       OPEN FOR OUTPUT
         OPEN  MF=(E,WKOPEN)
*
         B     OINEXIT
*
OINSINX  EQU   *
         PSNMERR  ERRNOPEN,PSWDDSIN
         B     OINEXIT
*
OINSLBX  EQU   *
         PSNMERR  ERRNOPEN,PSWDDSLB
         B     OINEXIT
         EJECT
*                  TO CHAIN TOGETHER CERTAIN BLOCKS OBTAINED
*                   THROUGH COMMON ROUTINES
*
CHAIN    PSNMBLOK  CHN
         L     R2,PSWABUFR        THE ADDRESS OF THE BUFFER
         ST    R2,PSWRDECB+12     INTO THE LIST FORM OF THE READ
*
         B     CHNEXIT
         EJECT
*                    TO DETERMINE THE IPL DATE FOR FUTURE
*                    REPORTING REQUIREMENTS
*
IPLDATE  PSNMBLOK  IPD
         LA    R1,2
         SVC   11
         ST    R1,WKDOUBL
         MVI   WKYEAR+3,X'0C'     SETTING UP FOR YEAR
         MVO   WKYEAR,WKDOUBL+1(1) YEAR IS IN PLACE
         MVC   PSWDATE,SLASHM     PUT IN THE MASK
         UNPK  PSWDATE+6(2),WKYEAR     SAVE THIS YEAR IN OUTPUT FIELD
         ZAP   WKDAY,WKDOUBL+2(2) AND DAY OF YEAR, TOO
*
*                    THE MONTH-TABLE LOOKUP ROUTINES TO DEFINE WHICH
*                    TABLE ENTRY IS FOR THIS MONTH
         LM    R3,R5,MTABNORM     ASSUME A NORMAL YEAR
         CP    WKYEAR,PSWPZERO    IS IT YEAR 2000?
         BE    JMLEAP             YES - IS A LEAP YEAR
         DP    WKYEAR,CONP4       CHECKING FOR THE LEAP YEAR
         CLI   WKYEAR+3,X'0C'     CHECK FOR ZERO REMAINDER
         BNE   *+8                BIF NOT A LEAP YEAR
JMLEAP   EQU   *
         LM    R3,R5,MTABLEAP     RELOAD FROM LEAP POINTERS
         LR    R7,R3              CHANGE THE WORK POINTER
         USING MONTABL,R7
*
JMNEXT   EQU   *                  KEEP LOOKING FOR THE MATCH
         CP    WKDAY,MTJULHI      HAS HIGHEST DAY IN MONTH
         BNH   JMHIT              FIRST TIME IN RANGE - HIT
         BXLE  R7,R4,JMNEXT       AND LOOK ON FOR MORE
         EX    R0,*               BAD TABLE OR LOGIC
*
JMHIT    EQU   *
         SP    WKDAY,MTPDAYS      COMPUTE CALENDAR DATE FROM TABLE
         UNPK  PSWDATE+3(2),WKDAY BUILD THE OUTPUT DATE
         MVC   PSWDATE(2),MTMONUM .
         OC    PSWDATE,SLASHM     MAKE ALL NUMERICS
         B     IPDEXIT            THE DATE IS SET
         DROP  R7
*
         EJECT
GETPARM  PSNMBLOK  GPR
*                    TO OBTAIN AND EVALUATE THE PARM FIELD AS IT
*                    MIGHT APPLY TO THE PROCESS AT HAND
*
         L     R1,PSATOLD         PICK UP OUR OWN TCB ADDRESS
TCBFSA   EQU   X'70'              FIRST SAVE AREA ADDRESS
         L     R1,TCBFSA(,R1)     POINT TO FIRST SAVE AREA
         L     R1,24(,R1)         RECAPTURE HIS ORIGINAL R1
         L     R1,0(,R1)          PICK UP POINTER TO THE PARM FIELD
         LH    R3,0(,R1)          LENGTH OF THE FIELD
         LTR   R3,R3              IS THERE ANY AT ALL
         BZ    GPREXIT            NO - SKIP THIS FOLLY
*
         LA    R4,2(,R1)          POINT TO START OF THE PARM
         LA    R3,2(R1,R3)        AND TO THE END OF PARM
*                    EXAMINE THE PARM FIELD
         PSNMSCAN (R4),(R3),KEYLIST,PSWWSCAN,GPRERROR,GPRSPED
*
*                    DETERMINE THE OUTCOME
         LA    R9,12              THE CONDITION CODES POSSIBLE
         CR    R15,R9             HOW DOES IT MATCH UP
         BL    GPREXIT
         BE    *+8
         EX    R0,*               TABLE ERROR OR INTERNAL SCANNING
         PSNMERR   ERRQUIT
         LA    R15,4              CODE TO QUIT THIS PROCESS
         B     RETURN
         EJECT
GPRERROR EQU   *                  IF A KEYWORD GOES WRONG
         ST    R14,WKERSAVE       STORE THIS RETURN ADDRESS
         LR    R9,R0              PREPARE TO INDEX TO CAUSE TABLE
         SLL   R9,3
         LA    R9,GPRCAUSE-8(R9)
         PSNMERR  ERRPARM,((R9),8),((R15),(R1))
         L     R14,WKERSAVE
         BR    R14                BACK INTO THE INTERPRETATION
*
GPRCAUSE DS    0D                 LIST OF THE POSSIBLE CAUSES OF ERROR
         DC    CL8'NOVALUE',CL8'ENDING',CL8'KEYWORD',CL8'VALUE'
         DC    CL8'VALUE2',CL8'LENGTH',CL8'DATA',CL8'ENTRY'
*
*
GPRSPED  DC    A((GPRSPEND-*-4)/4)  NUMBER OF EDITS
         DC    A(GPRMOD)          FIND AND CHANGE MODULE NAME
         DC    A(GPRERR)          FIND AND CHANGE ERROR DISPOSITION
GPRSPEND EQU   *
*                    RETURN POINTS FOR SPECIAL PROCESSORS
GPRGOOD  EQU   *
         L     R14,WKGPSAVE       RECAPTURE THE RETURN ADDRESS
         LA    R2,4               ALL DONE - HAVE DONE THE MOVING
         BR    R14
GPRERRSP EQU   *
         L     R14,WKGPSAVE       RECAPTURE THE RETURN ADDRESS
         LA    R2,8               ERROR IN DATA FOUND - STOP THE MUSIC
         BR    R14
         EJECT
*
*                    TO PROVIDE ANOTHER NAME FOR A PROCESSING MODULE
GPRMOD   EQU   *                  FIRST SPECIAL EDIT
         ST    R14,WKGPSAVE
         LA    R3,14              MAXIMUM LENGTH OF THE PARM
         CR    R2,R3              AGAINST ITS ACTUAL VALUE
         BH    GPRERRSP           WRONG - RETURN
         LA    R3,4               AND THE SHORTEST
         CR    R2,R3
         BL    GPRERRSP           THIS IS BAD, TOO
         LR    R15,R1             SAVE THE VALUE POINTER
         LR    R3,R2              SAVE THE LENGTH-1
         L     R2,PSWTRKEY        LOOK FOR DELIMITERS
         EX    R3,GPRMTRT         .
         BZ    GPRERRSP           REALLY NEED THAT DELIMITER
         LR    R2,R15             SAVE START POINTER
         LR    R4,R1              THE DELIMITER POINTER
         SR    R4,R2              NOW LENGTH OF IDENTIFIER
         BCTR  R4,0               LESS ONE, OF COURSE
         LM    R15,R1,PSWAMODS    SEARCH DOWN THE MODULES
GPRMLP   EQU   *                  LOOP THROUGH THE MODULES
         EX    R4,GPRMCLC         IS THIS THE MATCH
         BE    GPRMHIT            THE VERY ONE
         BXLE  R15,R0,GPRMLP      CARRY ON
         B     GPRERRSP           BUT NOT FOREVER
GPRMHIT  EQU   *
         LA    R2,2(R4,R2)        POINT TO NEW VALUE
         SR    R3,R4              LESS LENGTH OF OLD VALUE
         SH    R3,PSWHALF2        LESS 2 MORE
         MVC   4(8,R15),PSWBLANK  CLEAR THE NAME TO SPACES, FIRST
         EX    R3,GPRMMOV         PUT NEW NAME IN PLACE
         B     GPRGOOD            ON TO COMMON GOOD RETURN
GPRMMOV  MVC   4(0,R15),0(R2)     MOVE IN NEW PROGRAM NAME
GPRMCLC  CLC   7(0,R15),0(R2)     MATCH ON PROGRAM NAME
GPRMTRT  TRT   0(0,R15),0(R2)     FIND THE BREAK CHARACTER
         EJECT
*                  SPECIAL ROUTINE TO CHANGE DISPOSITION OF AN ERROR
GPRERR   EQU   *
         ST    R14,WKGPSAVE
         LR    R4,R2              SAVE THE LENGTH OF THE FIELD
         LR    R3,R1              SAVE THE VALUE POINTER
         L     R15,PSWTRNUM       LOOK FOR END OF ERROR NUMBER
         TRT   0(5,R3),0(R15)     WITH NUMERIC CHECK
         BZ    GPRERRSP           INVALID DATA HERE....
         LR    R2,R1              SAVE START OF KEYWORD
         SR    R1,R3              LENGTH OF THE NUMERIC PART
         SR    R4,R1              R4 HAS LENGTH-1 OF THE KEY PART
         BCTR  R1,0               NOW SUITED TO CAPTURE NUMERICS
         EX    R1,GPREPACK        CAPTURE THE ERROR NUMBER
         CVB   R1,WKDOUBL
*                    DIVE INTO THE ERROR TABLE
         L     R15,PSWERLST
         BALR  R14,R15            RETURNS POINTERS TO ERROR LIST
         LM    R15,R0,0(R15)      RETRIEVE POINTERS TO FIRST AND LAST
GPRESRCH EQU   *
         USING ERRTABL,R15
         CH    R1,ERDERRNO        IS THIS THE PROPER ERROR NUMBER
         BE    GPREHIT            THIS IS THE ONE
         AH    R15,ERDLENG        ON TO THE NEXT ONE
         CR    R15,R0             CHECK FOR END OF LIST
         BL    GPRESRCH           KEEP LOOKING
         B     GPRERRSP           INVALID ERROR NUMBER
GPREHIT  EQU   *
         DROP  R15
         LR    R3,R15             NOW ADDRESS TABLE ENTRY WITH R3
         USING ERRTABL,R3
         LM    R15,R1,GPRETBL     SCAN THE ACTION TABLE
GPRELOP2 EQU   *
         EX    R4,GPREKEY         IS THIS THE ACTION NAME
         BE    GPRETBLH           YES - DO WHAT IT SAYS
         BXLE  R15,R0,GPRELOP2    KEEP SEARCHING
         B     GPRERRSP
GPRETBLH EQU   *                  HAVE FOUND THE ACTION ENTRY
         EX    R0,12(,R15)        DO WHATEVER THE TABLE SAYS
         B     GPRGOOD            AND ROUND IT OUT
*
GPREPACK PACK  WKDOUBL,0(0,R3)    TO CAPTURE THE NUMERICS
GPREKEY  CLC   0(0,R15),0(R2)     FIND PROPER ACTIONWORD
*
*                    TABLE OF ACTION WORDS AND THEIR INSTRUCTIONS
GPRETBL  DC    A(*+12,16,GPRETX)
         DC    CL12'NOSNAP'
         NI    ERDOPT1,255-ERD1SNAP
         DC    CL12'SNAP'
         OI    ERDOPT1,ERD1SNAP
         DC    CL12'NOP'
         MVI   ERDOPT1,ERD1NOP
         DC    CL12'NOERR'
         NI    ERDOPT1,255-ERD1ERR
GPRETX   EQU   *-16               POINTER TO LAST ENTRY
         DROP  R3
         EJECT
*
*                    THE CONSTANTS OF SOME USE IN COMPUTATION
         DS    0F                 ALIGN TO START WITH
SLASHM   DC    C'00/00/00'        MASK FOR SLASH DATE
CONP4    DC    P'4'
*
*
*                    THE TABLE OF POSSIBLE KEYS ON THE PARM FIELD
KEYLIST  DS    0D
         PSNMKEY NOABEND,PSWGFLG1,OPTION=BITON,BIT=PSWM1NAB
         PSNMKEY FULLPDS,PSWGFLG1,OPTION=BITON,BIT=PSWM1PDS
         PSNMKEY INTRO,PSWGFLG1,OPTION=BITON,BIT=PSWM1INT
         PSNMKEY REFORM,PSWGFLG1,OPTION=BITON,BIT=PSWM1REF
         PSNMKEY NOLIST,PSWGFLG1,OPTION=BITON,BIT=PSWM1NOL
         PSNMKEY NOCOLS,PSWGFLG1,OPTION=BITON,BIT=PSWM1NCL          NTL
         PSNMKEY NOCOMM,PSWGFLG1,OPTION=BITON,BIT=PSWM1NCM          NTL
         PSNMKEY NOTRIVIA,PSWGFLG1,OPTION=BITON,                    NTL*
               BIT=PSWM1NCL+PSWM1NCM                                NTL
         PSNMKEY MOD,PSWAMODS,SP=1,OPTION=CHAR
         PSNMKEY SEV,PSWGSEV,OPTION=HALF
         PSNMKEY INCR,PSWGINCR,OPTION=PACK
         PSNMKEY NEW1,PSWGNEW1,OPTION=PACK
         PSNMKEY LIBDD,PSWDDOUT,OPTION=CHAR
         PSNMKEY ERR,PSWERLST,SP=2,OPTION=CHAR
         PSNMKEY MASK,PSWMMEMB,OPTION=CHAR                          NTL
         PSNMKEY  END
         LTORG
*                    THE MONTH TABLES USED TO SEMI-QUICKLY CONVERT
*                    FROM ONE TYPE OF DATE TO ANOTHER
*
*                   THE POINTERS TO THE TABLES
MTABNORM DC    A(MONTHNOR,LMON,ENDMNOR-LMON)
*
MTABLEAP DC    A(MONTHLEP,LMON,ENDMLEP-LMON)
*
*                    THE TABLE FOR NORMAL (NON-LEAP) YEARS
MONTHNOR DS    0D
         MFMONTH  31,JANUARY,RESET=YES
LMON     EQU   *-MONTHNOR         LENGTH OF EACH ENTRY
         MFMONTH  28,FEBRUARY
         MFMONTH  31,MARCH
         MFMONTH  30,APRIL
         MFMONTH  31,MAY
         MFMONTH  30,JUNE
         MFMONTH  31,JULY
         MFMONTH  31,AUGUST
         MFMONTH  30,SEPTEMBER
         MFMONTH  31,OCTOBER
         MFMONTH  30,NOVEMBER
         MFMONTH  31,DECEMBER
ENDMNOR  EQU   *
*
MONTHLEP DS    0D
         MFMONTH  31,JANUARY,RESET=YES
         MFMONTH  29,FEBRUARY
         MFMONTH  31,MARCH
         MFMONTH  30,APRIL
         MFMONTH  31,MAY
         MFMONTH  30,JUNE
         MFMONTH  31,JULY
         MFMONTH  31,AUGUST
         MFMONTH  30,SEPTEMBER
         MFMONTH  31,OCTOBER
         MFMONTH  30,NOVEMBER
         MFMONTH  31,DECEMBER
ENDMLEP  EQU   *
         EJECT
WORKAREA DSECT
         DS    18F
WKDOUBL  DS    D
WKOPEN   DS    F
WKERSAVE DS    F                  SAVE R14 IN SCAN ERROR ROUTINE
WKGPSAVE DS    F                  SAVE R14 IN PARM SPECIAL ROUTINES
WKDAY    DS    PL2                WORK AREA FOR DAY
WKYEAR   DS    PL4                FOR YEAR COMPUTE OF LEAPYEAR
         PSNMBLOK  RENT=REGS
WKLENG   EQU   *-WORKAREA
         EJECT
*                    DESCRIPTION OF THE KEYWORD DESCRIPTION TABLE
         PSNMKEYD
         EJECT
*                    DESCRIPTION OF THE ERROR TABLE ENTRY
         PSNMERMD
         EJECT
*                    DESCRIPTION OF A MONTH-TABLE ENTRY
*
MONTABL  DSECT
MTPDAYS  DS    PL2                PRIOR DAYS BEFORE MONTH
MTMONUM  DS    CL2                MONTH NUMBER IN DISPLAY
MTJULHI  DS    PL2                HIGHEST JULIAN DATE THIS MONTH
         DS    CL2
MTLENG   EQU   *-MONTABL          LENGTH OF A MONTH-TABLE ENTRY
*                    END OF THE MONTH TABLE ENTRY
         EJECT
         PSNMWORK
         PRINT NOGEN
         IHADCB  DSORG=PO,DEVD=DA
*
         END
