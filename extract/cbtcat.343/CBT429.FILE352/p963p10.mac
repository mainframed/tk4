        /* DATA SET S963P10    AT LEVEL 002 AS OF 05/24/78    */
        /* DATA SET S963P10    AT LEVEL 001 AS OF 11/15/77    */
 P963P10: /* DASD MONITOR SYSTEM   REGEN SCRLOG FROM OUTLOG  V1M0    */
          PROC OPTIONS(MAIN) REORDER;
 /*                                                                  */
 /* THIS PROGRAM GENERATES THE SCRLOG DATASET FROM THE OUTLOG        */
 /*  PRODUCED BY P963P00.                                            */
 /*                                                                  */
 /* KEN TRUE      V1M0    10 NOV 77                                  */
 /*                                                                  */
 /*                                                                  */
 DCL R941X11 EXTERNAL ENTRY            /* GREGORIAN TO JULIAN DATE*/
             OPTIONS(ASSEMBLER,INTER);

 DCL R941X12 EXTERNAL ENTRY            /* JULIAN TO GREGORIAN DATE*/
             OPTIONS(ASSEMBLER,INTER);

 DCL (DATE,TIME)    BUILTIN;


 DCL INLOG    FILE  RECORD SEQUENTIAL INPUT  ENV(CONSECUTIVE);
 DCL OUTSCR   FILE  RECORD SEQUENTIAL OUTPUT ENV(CONSECUTIVE);
 DCL REPORT   FILE  STREAM PRINT OUTPUT;

 DCL 1 MERGELOG,                   /* MERGED DSNLOG:GRANT RECORD     */
       2 DSNAME      CHAR(44)         INIT(' '),
       2 VOLUME      CHAR(6)          INIT(' '),
       2 DISKTYPE    CHAR(1)          INIT(' '),
       2 EXTNTS      BIT(8)           INIT((8)'0'B),
       2 DSORG       CHAR(3)          INIT(' '),
       2 RECFM       CHAR(4)          INIT(' '),
       2 SALLC_TYPE  CHAR(1)          INIT(' '),
       2 SALLC_QTY   FIXED BIN(15,0)  INIT(0),
       2 LRECL       FIXED BIN(15,0)  INIT(0),
       2 BLKSIZE     FIXED BIN(15,0)  INIT(0),
       2 TRK_ALLOC   FIXED BIN(15,0)  INIT(0),
       2 TRK_USED    FIXED BIN(15,0)  INIT(0),
       2 DIR_ALLOC   FIXED BIN(15,0)  INIT(0),
       2 DIR_USED    FIXED BIN(15,0)  INIT(0),
       2 USE_COUNT   FIXED BIN(15,0)  INIT(0),
       2 DAYS_UNUSED FIXED BIN(15,0)  INIT(0),
       2 CREATED     FIXED DEC(5)     INIT(0),
       2 LAST_USED   FIXED DEC(5)     INIT(0),
       2 LAST_MOD    FIXED DEC(5)     INIT(0),
       2 LAST_MOD_TIME BIT(16)        INIT((16)'0'B),
       2 MOD_USER    CHAR(8)          INIT(' '),
       2 BILL_TO     CHAR(8)          INIT(' '),
       2 DSNFLAGS    CHAR(8)          INIT(' '),
       2 SCRFLAG     CHAR(1)          INIT(' '),
       2 PC_USED     FIXED DEC(5)     INIT(0),
       2 EXPIRES     PIC'ZZZZZZ'      INIT(0),
       2 COMMENT     CHAR(8)          INIT(' ');

  DCL  FLAG16        BIT(16)          INIT((16)'0'B);




 DCL 1 SCRLOG,             /* SCRATCH LOG  USED BY P963P02           */
       2 DSNAME      CHAR(44)     INIT(' '),
       2 VOLUME      CHAR(6)      INIT(' '),
       2 FLAGS       CHAR(2)      INIT(' '),
       2 BILL_TO     CHAR(8)      INIT(' '),
       2 LAST_USED   PIC'ZZZZZ'   INIT(0),
       2 MOD_USER    CHAR(8)      INIT(' '),
       2 FILL1       CHAR(7)      INIT(' ');


 DCL 1 SCRPARMS,           /* FIRST RECORD IN OUTSCR DATASET         */
       2 FILL1       CHAR(1)      INIT(' '),
       2 HEAD1       CHAR(8)      INIT('MON RUN='),
       2 $RUN_DATE   PIC'Z9/99/99' INIT(0),
       2 FILL2       CHAR(1)      INIT(' '),
       2 $RUN_TIME   PIC'Z9.99.99' INIT(0),
       2 HEAD2       CHAR(9)      INIT(' SCRATCH='),
       2 $SCR_DATE   PIC'Z9/99/99' INIT(0),
       2 HEAD3       CHAR(8)      INIT(' REASON='),
       2 $SCR_CODES  CHAR(8)      INIT(' '),
       2 FILL3       CHAR(21)     INIT(' ');


 DCL (INREC_LOG,OUTREC_SCR,SCR_BYPASSED,
      RPTPAGENO,
      I,J,K)
                     FIXED BIN(15,0) INIT(0);

 DCL (RETURN_CODE)
                  FIXED BIN(31,0) INIT(0);

  DCL EOF_INLOG      BIT(1)   INIT('0'B),
      FINISHED       BIT(1)   INIT('0'B),
      BIT16          BIT(16)  INIT('0'B);

  DCL PRNTRC      PIC'999'    INIT(0),
      REASON      CHAR(80) VAR INIT('');


  DCL INDATE         CHAR(6)     INIT(' '),
      YY             CHAR(2) DEF(INDATE) POS(1),
      MM             CHAR(2) DEF(INDATE) POS(3),
      DD             CHAR(2) DEF(INDATE) POS(5);

  DCL TODAY   CHAR(5),
      TODAY_JDATE    PIC'99999'      INIT(0),
      THRESH_JDATE_C PIC'99999'      INIT(0),
      THRESH_JDATE   FIXED DEC(5)    INIT(0);

  DCL HEADING         CHAR(130),
      RPTNO           CHAR(3)       DEF(HEADING) POS(  6),
      RUN_DATE        PIC'Z9/99/99' DEF(HEADING) POS( 95),
      RUN_JDATE       PIC'99.999'   DEF(HEADING) POS(105),
      RUN_TIME        PIC'Z9.99.99' DEF(HEADING) POS(113),
      PAGENO          PIC'ZZ9'      DEF(HEADING) POS(128),
      SUBTITLE        CHAR(112)  VAR INIT(''),
      HEADING2        CHAR(130),
      HEADING3        CHAR(130),
      BLANKLINE       CHAR(130) INIT((130)' ');

 DCL  DSNHEAD         CHAR(63) INIT(' '),
      PRNTDSN         CHAR(44) INIT(' ');

1/*  INITIALIZATION OF VARIABLES                                    */

  HEADING =   'L963-005 FAIRCHILD CAMERA AND INSTRUMENT       ' ××
              '   DASD MONITOR SYSTEM  VER(V1M0)      ' ××
              'RUN ON: 99/99/99 (99.999) 99.99.99  PAGE 999';

  HEADING2 =  '';
  HEADING3 =  '';
  INDATE   = DATE;
  RUN_DATE = MM ×× DD ×× YY;
  RUN_TIME = SUBSTR(TIME,1,6);
  TODAY = JULIAN(INDATE);
  TODAY_JDATE = TODAY;
  RUN_JDATE   = TODAY;

  SCRPARMS.$RUN_DATE = RUN_DATE;
  SCRPARMS.$RUN_TIME = RUN_TIME;
  SCRPARMS.$SCR_DATE = 0;

  SCRPARMS.$SCR_CODES = 'IC     ';


  OPEN FILE(INLOG)    INPUT,
       FILE(OUTSCR)   OUTPUT,
       FILE(REPORT) OUTPUT LINESIZE(130);

  ON ENDPAGE(REPORT)
     CALL FIN_PAGE(REPORT,'005',DSNHEAD,HEADING3,RPTPAGENO);

  ON FINISH
    BEGIN;
      CLOSE FILE(INLOG),
            FILE(OUTSCR),
            FILE(REPORT);
    END;


  HEADING3 =  'CODE    D S N A M E';
  SUBSTR(HEADING3,50,20) = 'ACTION TAKEN/REMARKS';


  HEADING2 = '';
  SUBSTR(HEADING2,54,23) = 'GENERATE SCRLOG UTILITY';


  SIGNAL ENDPAGE(REPORT);              /* WRITE REPORT HEADINGS       */

  ON ENDFILE(INLOG)   EOF_INLOG   = '1'B;

  READ FILE(INLOG) INTO(MERGELOG);    /* SET UP FOR PROCESING.. READ  */
  FINISHED = EOF_INLOG;
  IF ^EOF_INLOG THEN INREC_LOG = INREC_LOG + 1;

1 /*    MAIN LOOP TO PROCESS  DATASETS          */

 DO WHILE(^FINISHED);

   IF MERGELOG.SCRFLAG ^= ' '
     THEN CALL GEN_SCRATCH;
     ELSE SCR_BYPASSED = SCR_BYPASSED + 1;

   READ FILE(INLOG) INTO(MERGELOG);
   IF ^EOF_INLOG THEN INREC_LOG = INREC_LOG + 1;

   FINISHED = EOF_INLOG ;

 END;                           /* END OF MAIN LOOP                 */

   CALL SUMMARY;                /*  PERFORM SUMMARY REPORTING       */


   PUT FILE(REPORT) SKIP(2) EDIT
         ('END OF REPORT L963-005')
         (A);

   CALL PLIRETC(RETURN_CODE);


   STOP;
0 /*    END OF MAIN PROGRAM LOOP                */

1/* GENERATE SCRLOG CARDS FOR LATER USE BY P963P02                    */

 GEN_SCRATCH: PROC ;

   DCL SCRHEAD    CHAR(40)   INIT(' ');

   SCRHEAD = 'DATASET FLAGS=' ×× MERGELOG.DSNFLAGS;

   SCRLOG = MERGELOG, BY NAME;

   FLAG16 = '';
   DO I = 1 TO 8;
     IF SUBSTR(MERGELOG.DSNFLAGS,I,1) ^= ' ' THEN
        SUBSTR(FLAG16,I,1) = '1'B;
   END;


   SCRLOG.FLAGS = SUBSTR(CNVTHX(FLAG16),1,2);

   SCRLOG.FILL1 = '';

   IF OUTREC_SCR = 0 THEN WRITE FILE(OUTSCR) FROM(SCRPARMS);

   WRITE FILE(OUTSCR) FROM(SCRLOG);

   DSNHEAD = '    ' ×× SCRLOG.DSNAME ×× ' ON VOL=' ××
              SCRLOG.VOLUME;

   PUT FILE(REPORT) SKIP EDIT
       (DSNHEAD,SCRHEAD)
       (A,A);

   OUTREC_SCR = OUTREC_SCR + 1;

   RETURN;


 END GEN_SCRATCH;

1/* PERFORM PAGE HEADER ROUTINE */

 FIN_PAGE: PROC(PRNT,RPT,DSN_HEADER,HEADER,PAGE);

  DCL PRNT       FILE,
      RPT        CHAR(3),
      HEADER     CHAR(*),
      DSN_HEADER CHAR(*),
      PAGE FIXED BIN(15,0);

      PAGE = PAGE + 1;
      PAGENO = PAGE;

      RPTNO = RPT;


      PUT FILE(PRNT)          EDIT
        (HEADING)    (PAGE,LINE(1),A)
        (HEADING2)   (LINE(2),A)
        (HEADER)     (LINE(4),A)
        (BLANKLINE)  (LINE(5),A);


     RETURN;
  END FIN_PAGE;

1/* PERFORM SUMMARY CALCULATIONS AND REPORTING */
 SUMMARY: PROC;


   PUT FILE(REPORT) SKIP(3) EDIT
         (INREC_LOG,     'MERGED LOG RECORDS READ IN',
          OUTREC_SCR,    'SCRLOG RECORD GENERATED',
          SCR_BYPASSED,  'DATASETS BYPASSED (NO SCRATCH)')
         ((3)(P'ZZ,ZZZ,ZZ9',X(2),A,SKIP));



   RETURN;

 END SUMMARY;

1/* CNVTHX - PROCEDURE TO CONVERT 16 BIT TO 4 CHAR HEX */

 CNVTHX: PROC(N) RETURNS(CHAR(4));

 DCL N  BIT(16),
     (HEXOUT,XOUT) CHAR(4) INIT(' '),
     CH(0:15) CHAR(1) STATIC INIT(
       '0','1','2','3','4','5','6','7',
       '8','9','A','B','C','D','E','F'  ),
     NUM BIT(16),
     (II,J,K)  FIXED BIN(15,0);

 NUM = UNSPEC(N);
 DO K = 1 TO 4;
   J = (K-1)*4+1;
   UNSPEC(II) = (12)'0'B ×× SUBSTR(NUM,J,4);
   SUBSTR(XOUT,K,1) = CH(II);
 END;
 HEXOUT = XOUT;
 RETURN (HEXOUT);
 END CNVTHX;


1 JULIAN : PROC (DATEX) RETURNS (CHAR(5));
0 DCL DATEX CHAR (6);
  DCL DATEY CHAR (5), NDAYS PICTURE '999'  INIT (0);
0 DCL MTHS (12) FIXED BIN (15) INIT
       (31,28,31,30,31,30,31,31,30,31,30,31);
  IF MOD ( SUBSTR (DATEX,1,2) , 4 ) = 0
  THEN MTHS (2) = 29;
  SUBSTR (DATEY,1,2) = SUBSTR (DATEX,1,2);
- DO I = 1 TO SUBSTR (DATEX,3,2) - 1;
     NDAYS = NDAYS + MTHS (I);
  END;
  NDAYS = NDAYS + SUBSTR (DATEX,5,2);
0 SUBSTR (DATEY,3,3) =      NDAYS;
0 RETURN (DATEY);
  END JULIAN;

 END P963P10;
