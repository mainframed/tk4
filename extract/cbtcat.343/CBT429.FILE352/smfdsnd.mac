        /* DATA SET SMFDSND    AT LEVEL 002 AS OF 07/16/82    */
        /* DATA SET SMFDSND    AT LEVEL 002 AS OF 10/15/80    */
 SMFDSND: PROC OPTIONS(MAIN) REORDER;
 /*********************************************************************/
 /* READ TYPE 14/15 RECORDS TO FIND USERS/JOBS   ACCESSING A DATASET. */
 /*    11AUG77      K TRUE                                            */
 /* ADD GOODIES FOR TYPE17 RECS TOO.. KMT 9 MAY 79                    */
 /*********************************************************************/
 DCL INPUT FILE
            INPUT
            RECORD
            ENV (CONSECUTIVE);
 DCL OUTPUT FILE RECORD OUTPUT ENV(CONSECUTIVE);
 DCL DUMPREC FILE RECORD OUTPUT ENV(CONSECUTIVE);
 DCL SYSPRINT FILE
              STREAM
              OUTPUT
              PRINT;
 DCL SYSIN   FILE RECORD INPUT  ENV(CONSECUTIVE);
 DCL VERSION CHAR(17) INIT('VER 1.2 (13OCT80)');
 DCL LENGTH        FIXED BIN (15,0);
 DCL ONCHAR        BUILTIN ;
 DCL REC14         FIXED BIN(15) INIT(0);
 DCL REC15         FIXED BIN(15) INIT(0);
 DCL REC17         FIXED BIN(15) INIT(0);
 DCL PAGENO        FIXED BIN(15) INIT(0);
 DCL TYPE14        BIT(8) INIT ('00001110'B ) ;
 DCL TYPE15        BIT(8) INIT ('00001111'B ) ;
 DCL TYPE17        BIT(8) INIT ('00010001'B ) ;
 DCL 1 COMP(20),
     2 DSN         CHAR(44) INIT((44)' '),
     2 DSNLEN      FIXED BIN(15,0) INIT(0),
     2 INMODE      FIXED BIN(15,0) INIT(0),
     2 OUTMODE     FIXED BIN(15,0) INIT(0),
     2 SCRMODE     FIXED BIN(15,0) INIT(0);
 DCL RECORD        CHAR(80) INIT(' '),
     NDSN          FIXED BIN(15) INIT(0),
     INDX          FIXED BIN(15) INIT(0),
     (I,J,K)       FIXED BIN(15) INIT(0),
     START_DATE    FIXED DEC(7) INIT(76001),
     END_DATE      FIXED DEC(7) INIT(99365),
     MIN_DATE      FIXED DEC(7) INIT(99365),
     MIN_TIME      FIXED BIN(31) INIT(9999999),
     MAX_DATE      FIXED DEC(7) INIT(0),
     MAX_TIME      FIXED BIN(31) INIT(0);

 DCL PACK5         PIC'99999'    INIT(0),
     PACK6         PIC'999999'   INIT(0),
     PDATE         PIC'Z9/99/99' INIT(0),
     R941X12  EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);

 DCL RUNDATE       CHAR(8)       INIT(' '),
     RUNTIME       CHAR(8)       INIT(' '),
     DATTIM   EXTERNAL ENTRY OPTIONS(ASSEMBLER,INTER);

 DCL EOFIN         BIT(1) INIT('0'B);

 DCL MYBUFFER      CHAR(32766) VAR INIT('');

 DCL 1 RECIN BASED (PTR),            /* INPUT RECORD */
       2 FILLER              CHAR(2),    /* SPACE FOR RDW */
       2 INRZER              BIT(8),
       2 INRREC              BIT(8),
       2 INRTIME             BIT(32),
       2 INRDATE             FIXED DEC(7),
       2 INRID               CHAR(2),
       2 INRSYS              CHAR(2),
       2 INRJOB              CHAR(8),
       2 INRTME              BIT(32),
       2 INRDTE              FIXED DEC(7),
       2 INRUI               CHAR(8),
       2 INRRES(1024)        CHAR(1);
 DCL (PTR,PTR2) POINTER;
 DCL 1 SMFREC14 BASED(PTR),      /*  SMF RECORD 14/15 DATASET RECORD */
       2 FILLER1             CHAR(2),    /* SPACE FOR RDW */
       2 SMF14FLG       BIT(8),
       2 SMF14RTY       BIT(8),
       2 SMF14TME       BIT(32),
       2 SMF14DTE       FIXED DEC(7),
       2 SMF14SID       CHAR(4),
       2 SMF14JBN       CHAR(8),
       2 SMF14RST       BIT(32),
       2 SMF14RSD       FIXED DEC(7),
       2 SMF14UID       CHAR(8),
       2 SMF14RIN       BIT(16),
       2 SMF14SDC       BIT(8),
       2 SMF14NUC       BIT(8),
       2 SMF14SUC       BIT(8),
       2 SMF14SET       BIT(8),
       2 SMF14RV1       BIT(32),
       2 SMFTIOE1       BIT(8),
       2 SMFTIOE2       BIT(8),
       2 SMFTIOE3       BIT(8),
       2 SMFTIOE4       BIT(8),
       2 SMFTIOE5       CHAR(8),
       2 SMFTIOE6       BIT(24),
       2 SMFTIOE7       BIT(8),
       2 SMFJFCBDSN     CHAR(44),
       2 SMFJFCB1R      CHAR(132),
       2 SMFDCBOR       BIT(16),
       2 SMFDCBRF       BIT(8),
       2 SMFDCBMF       BIT(16),
       2 SMFDCBFL       BIT(8),
       2 SMFDCBOP       BIT(8),
       2 SMF14RSV2      BIT(8),
       2 SMFDEBFL       BIT(8),
       2 SMFDEBOP       BIT(8);

 DCL 1 SMFREC17 BASED(PTR),      /*  SMF RECORD 17 NON-VSAM SCRATCH  */
       2 FILLER1             CHAR(2),    /* SPACE FOR RDW */
       2 SMF17FLG       BIT(8),
       2 SMF17RTY       BIT(8),
       2 SMF17TME       BIT(32),
       2 SMF17DTE       FIXED DEC(7),
       2 SMF17SID       CHAR(4),
       2 SMF17JBN       CHAR(8),
       2 SMF17RST       BIT(32),
       2 SMF17RSD       FIXED DEC(7),
       2 SMF17UID       CHAR(8),
       2 SMF17RIN       BIT(16),
       2 SMF17DSN       CHAR(44),
       2 SMF17RV1       CHAR(3),
       2 SMF17NVL       BIT(8) ;
  /*   2 SMF17VLS       CHAR(),  */

 DCL 1 OUTREC,
       2 PJOBNAME       CHAR(8),
       2 JOBDAT         PIC'99.999' INIT(0),
       2 JOBTIM         PIC'99.99.99' INIT(0),
       2 MODE1          CHAR(6) INIT(' '),
       2 DDNAME         CHAR(8) INIT(' '),
       2 ODSNAME        CHAR(44);
 DCL TEMP31 FIXED BIN(31);
 DCL HH FIXED BIN(15) ,
     MM FIXED BIN(15) ,
     SS FIXED BIN(15)  ;
     ON ERROR BEGIN;
     ON ERROR SYSTEM;
     PUT DATA;
     END;
     ON ENDFILE(INPUT) STOP;
     ON FINISH BEGIN ;
        SIGNAL ENDPAGE(SYSPRINT);
        PUT FILE(SYSPRINT) SKIP(2) EDIT
            ('DSNAME','INPUT','OUTPUT','SCRATCH','TOTAL')
            (COL(20),A(44),COL(70),A,COL(80),A,COL(90),A,COL(100),A)
            ((DSN(I),INMODE(I),OUTMODE(I),SCRMODE(I),
            INMODE(I)+OUTMODE(I)+SCRMODE(I)
              DO I = 1 TO NDSN))
            (SKIP,COL(20),A,COL(70),F(5),COL(80),F(5),COL(90),F(5),
                  COL(100),F(5));
        PUT FILE(SYSPRINT) SKIP(2) EDIT
            (REC14,' TYPE 14 RECORDS SELECTED (INPUT,RDBACK)',
             REC15,' TYPE 15 RECORDS SELECTED (OUTPUT,OUTIN,INOUT,ETC)',
             REC17,' TYPE 17 RECORDS SELECTED (SCRATCH)',
      REC17+ REC14+REC15,' TOTAL DATASET RECORDS PROCESSED')
            ((3)(F(9),A,SKIP));
        CLOSE FILE (INPUT),
              FILE (OUTPUT),
              FILE (DUMPREC),
              FILE (SYSIN),
              FILE (SYSPRINT) ;
     END ;
     ON  ENDPAGE(SYSPRINT) BEGIN;
         PAGENO = PAGENO + 1;
         PUT FILE(SYSPRINT) PAGE EDIT
            ('SMF DSNAME SCANNER ',VERSION,
             ' START=',START_DATE,
             ' END=',END_DATE,
             RUNDATE,RUNTIME,
             ' PAGE',PAGENO)
            (A,A,(2)(A,P'Z99.999'),COL(90),A,X(2),A,
            COL(115),A,F(4));
         PUT FILE(SYSPRINT) SKIP(2);
                           END;
     OPEN FILE (INPUT)  INPUT,
          FILE (OUTPUT) OUTPUT,
          FILE (DUMPREC) OUTPUT,
          FILE (SYSIN)  INPUT,
          FILE (SYSPRINT) PRINT LINESIZE(125);

     ON ENDFILE(SYSIN) EOFIN='1'B;

     CALL DATTIM(RUNDATE,RUNTIME);

     PUT FILE(SYSPRINT) SKIP EDIT
         ('SMF DSN SCAN/DUMP PGM-',VERSION,'    CONTROL CARD LOG ',
         RUNDATE,RUNTIME)
         (A,A,A,COL(90),A,X(2),A);
     PUT FILE(SYSPRINT) SKIP(2);
     DO WHILE(^EOFIN & NDSN < DIM(COMP.DSN,1));
       READ FILE(SYSIN) INTO(RECORD);
       IF ^EOFIN THEN
         DO;
           PUT FILE(SYSPRINT) SKIP EDIT
               (RECORD)
               (X(20),A(80),SKIP);
           I = INDEX(RECORD,'START=');
           J = INDEX(RECORD,'END=');
           IF I = 0 & J = 0 & RECORD ^= (80)' ' THEN
             DO;
               NDSN = NDSN + 1;
               J=VERIFY(RECORD,' ');
               K=INDEX(SUBSTR(RECORD,J),' ');
               IF K=0 THEN K=80;
                      ELSE K = K+J;
               L=K-J;
               IF L > 44 THEN L = 44;
               DSN(NDSN) = SUBSTR(RECORD,J,L);
               DSNLEN(NDSN) = 44;
               IF SUBSTR(RECORD,J+L-2,1) = '*' THEN
                 DSNLEN(NDSN) = L-2;
    /*  PUT SKIP DATA(RECORD,J,L,DSN(NDSN),DSNLEN(NDSN)); */
             END;
         END;
     END;
     IF NDSN ^> 0 THEN
       DO;
         PUT FILE(SYSPRINT) SKIP(3) EDIT
          ('**** NO DATASETS TO SCAN WERE INPUT VIA SYSIN ***')
          (A);
         STOP;
       END;
     PUT FILE(SYSPRINT) SKIP(2) EDIT
       (NDSN,' DATASETS TO BE SELECTED') (COL(20),F(4),A,SKIP);
     SIGNAL ENDPAGE(SYSPRINT);

     PTR = ADDR(MYBUFFER);

 /*---------------------------------------------*/
 READFD:   /* READ INPUT SMF RECORD FROM INPUT */
 /*---------------------------------------------*/
     READ FILE(INPUT) INTO(MYBUFFER) ;     /* DEBUG ,THIS LOOP CAN   */
     IF INRZER ^= '00000010'B
        THEN GO TO READFD;                 /* ELIMINATE NON VS2 REC  */
     IF START_DATE > SMF14DTE × END_DATE < SMF14DTE THEN GOTO READFD;
     IF INRREC = TYPE17 THEN GOTO CHK17;
     IF INRREC ^= TYPE14 & INRREC ^= TYPE15
        THEN GOTO READFD;
     DO INDX = 1 TO NDSN;
       L = DSNLEN(INDX);
       IF SUBSTR(SMFJFCBDSN,1,L) = SUBSTR(DSN(INDX),1,L)
          THEN GOTO FOUND;
     END;
     GOTO READFD;
   CHK17:;
     DO INDX = 1 TO NDSN;
       L = DSNLEN(INDX);
       IF SUBSTR(SMF17DSN,1,L) = SUBSTR(DSN(INDX),1,L)
          THEN GOTO FOUND;
     END;
     GOTO READFD;
  FOUND:
     IF INRREC = TYPE17 THEN CALL SCRREC;
                        ELSE CALL DSNREC;
     PUT FILE(SYSPRINT) SKIP EDIT
        (PJOBNAME,PDATE,JOBTIM,' MODE=',MODE1,' DDNAME=',DDNAME,
         ODSNAME)
        ((3)(X(3),A),A,A,X(2),A,A,X(2),A);

     WRITE FILE(OUTPUT) FROM(OUTREC);
     WRITE FILE(DUMPREC) FROM(MYBUFFER);
     GO TO READFD ;
1/*------------------------------------------------------------*/
 DSNREC: PROC ;              /* SMF REC TYPE14/15 DSN RECORDS    */
 /*------------------------------------------------------------*/
     PJOBNAME = SMF14JBN;
     ODSNAME =  SMFJFCBDSN;
     JOBDAT = SMF14DTE;
     TEMP31 = SMF14TME;
     HH = TEMP31 / 360000 ;
     MM = TEMP31 / 6000 - 60 * HH ;
     SS = TEMP31 /100 - 3600 * HH - 60 * MM ;
     JOBTIM = HH * 10000 + MM * 100 + SS;
     PACK5 = SMF14DTE;
     CALL R941X12(PACK5,PACK6);
     IF PACK6 ^= 0 THEN PDATE = PACK6;
                   ELSE PDATE = 000000;

     MODE1 = '';
     DDNAME  = SMFTIOE5;
     IF INRREC = TYPE14 THEN
       DO;
         REC14 = REC14 + 1;
         INMODE(INDX) = INMODE(INDX) + 1;
       END;
      ELSE
     IF INRREC = TYPE15 THEN
       DO;
         REC15 = REC15 + 1;
         OUTMODE(INDX) = OUTMODE(INDX) + 1;
       END;

     SMFDEBOP = SMFDEBOP & '00001111'B;
     IF SMFDEBOP = '00000000'B THEN MODE1 = 'INPUT'; ELSE
     IF SMFDEBOP = '00001111'B THEN MODE1 = 'OUTPUT'; ELSE
     IF SMFDEBOP = '00000011'B THEN MODE1 = 'INOUT'; ELSE
     IF SMFDEBOP = '00000111'B THEN MODE1 = 'OUTIN'; ELSE
     IF SMFDEBOP = '00000001'B THEN MODE1 = 'RDBACK'; ELSE
     IF SMFDEBOP = '00000100'B THEN MODE1 = 'UPDATE'; ELSE

     RETURN ;
 END DSNREC ;
1/*------------------------------------------------------------*/
 SCRREC: PROC ;              /* SMF REC 17 RECORD SCRATCH      */
 /*------------------------------------------------------------*/
     PJOBNAME = SMF17JBN;
     ODSNAME = SMF17DSN;
     JOBDAT = SMF17DTE;
     TEMP31 = SMF17TME;
     HH = TEMP31 / 360000 ;
     MM = TEMP31 / 6000 - 60 * HH ;
     SS = TEMP31 /100 - 3600 * HH - 60 * MM ;
     JOBTIM = HH * 10000 + MM * 100 + SS;
     PACK5 = SMF17DTE;
     CALL R941X12(PACK5,PACK6);
     IF PACK6 ^= 0 THEN PDATE = PACK6;
                   ELSE PDATE = 000000;

     MODE1 = 'SCRTCH';
     DDNAME  = '********';
     REC17 = REC17 + 1;
     SCRMODE(INDX) = SCRMODE(INDX) + 1;

     RETURN ;
 END SCRREC ;
     END SMFDSND ; /* END OF MAIN PROGRAM */
