*          DATA SET PSNMKEY    AT LEVEL 002 AS OF 10/30/80
         MACRO
&TAG     PSNMKEY &KEY,&RECV,&OPTION=,&BIT=,&SP=,&R=,&V=
.*                   TO DEFINE A GIVEN KEYWORD THAT MNAY BE ENTERED
.*                   AS A CONTROL PARM, AND THE EDITING TO BE DONE
.*                   ON THAT PARM, AND WHERE TO PUT THE RESULT.
.*
.*
         GBLA  &PSNGKNM           INTERNAL FIELD NUMBER - BOOKKEEPING
.*
         LCLC  &OP(32)            THE ALLOWABLE OPTION VALUES
         LCLB  &B(32)             BIT SETTINGS FOR OPTIONS
         LCLA  &I1,&I2            USED IN OPTION PROCESSING
         LCLC  &CB1,&CB2,&CB3,&CB4 FOR GENERATION OF BITSTRING
         LCLA  &LK                LENGTH OF KEY-1
         LCLA  &SX                ABBREVIATION OF SYSNDX FOR LEGIBILITY
         LCLA  &RTN               PROPOSED ROUTINE NUMBER FOR MOVE
         LCLC  &L                 TO BE SET TO L-QUOTE (L''')
.*
&SX      SETA  &SYSNDX            ABBREVIATED SETTING OF SUFFIX.
&L       SETC  'L'''              TO GENERATE LENGTH ATTRIBUTE
.*
         AIF   ('&KEY' NE 'END').ENDX CHECK FOR ENDING VALUE
         DC    XL4'00'            END OF THE TABLE
         AGO   .EXIT              AND EXIT THIS PROCESSING NOW...
.ENDX    ANOP
&PSNGKNM SETA  &PSNGKNM+1         MAINTAIN INTERNAL KEY NUMBER
.*
.*                   DEFINE THE POSSIBLE MEANINGS OF OPTION
&OP(1)   SETC  'CHAR'             INPUT IS CHARACTER
&OP(2)   SETC  'PACK'             PACK INPUT DATA INTO THE FIELD
&OP(3)   SETC  'MULTI'            INPUT MAY BE ENTERED MULTI TIMES
&OP(4)   SETC  'DATE'             MDY OR *+-TODAY DATE FORM
&OP(5)   SETC  'DATEJ'            JULIAN DATE IS INPUT
&OP(6)   SETC  'REQD'             INPUT IS A REQUIRED FIELD
&OP(7)   SETC  'ALPHA'            INPUT EDITED FOR ALPHABETIC
&OP(8)   SETC  'NUM'              INPUT EDITTED FOR NUMERIC
&OP(9)   SETC  'AN'               INPUT IS NON-SPECIAL CHARACTER
&OP(10)  SETC  'NONUM'            DO NOT EDIT FOR NUMERIC
&OP(11)  SETC  'BITON'            TURN ON INDICATED BIT
&OP(12)  SETC  'BITOF'            TURN OFF THE INDICATED BIT
&OP(13)  SETC  'DSN'              INPUT IS A DSNAME
&OP(14)  SETC  'VALUE' (INTERNAL) A VALUE IS REQUIRED FOR THIS ONE
&OP(15)  SETC  'SPEDIT' (INTERNAL) SPECIAL EDITS INCLUDED
&OP(16)  SETC  'HALF'             MAKE A HALFWORD OF THIS
&OP(17)  SETC  'FULL'             STORE AS A FULLWORD
.*
.*                   TURN THE OPTIONS INTO A BIT STRING
         AIF   (T'&OPTION EQ 'O').OPTX  NO OPTIONS GIVEN - EXIT
.OPTN    ANOP                     LOOP THROUGH THE OPTIONS
&I2      SETA  &I2+1              ON TO NEXT INPUT OPTION
         AIF   (&I2 GT N'&OPTION).OPTX END OF THE STRING
&I1      SETA  1                  POINT TO FIRST OF POSSIBILITIES
.OPTL    ANOP
         AIF   ('&OPTION(&I2)' EQ '&OP(&I1)').OPTM   MATCHED
&I1      SETA  &I1+1              INDEX ON TO NEXT ONE
         AIF   (&I1 LE 32).OPTL
         MNOTE  8,'INVALID OPTION - &OPTION(&I2)'
         AGO   .OPTN              ON TO THE NEXT OPTION
.OPTM    ANOP                     HAVE A MATCH - REPEATED?
         AIF   (NOT &B(&I1)).OPTS CHECK FOR DUPLICATION
         MNOTE  4,'&OPTION(&I2) ENTERED TWICE IN OPTION'
.OPTS    ANOP
&B(&I1)  SETB  1                  SHOW THIS OPTION IS RECOGNIZED
         AGO   .OPTN
.OPTX    ANOP                     END OF OPTION DECODING
.*
.*                   IN CASE THE SPECIAL EDIT WAS REQUESTED
         AIF   (T'&SP EQ 'O').SPIX
&B(15)   SETB  1
.SPIX    ANOP
.*
.*                   DEFINE ROUTINE NUMBER AND DECODING REQUIREMENTS
         AIF   (&B(11) OR &B(12)).HAVBIT    BIT-SETTINGS PROCESSED
.*                   ALL OTHERS NEED A VALUE WITH IT
&B(14)   SETB  1                  SHOW NEED FOR A VALUE
         AIF   (&B(4) OR &B(5)).HAVDATE     DATE FIELD INPUT GIVEN
.*
.*                   ROUTINE MUST BE PACK OR CHAR, THEN
&RTN     SETA  1                  PREGUESS THE MOVE ROUTINE
         AIF   (&B(1)).HAVRTN     IT WAS A CHAR - ALL SET
&RTN     SETA  2                  REQUESS THE PACK ROUTINE
         AIF   (&B(2)).HAVRTN     PACKED ROUTINE IT IS...
&RTN     SETA  3                  REQUESS THE PACK ROUTINE
         AIF   (&B(16)).HAVRTN    HALFWORD CONVERSION
&RTN     SETA  4                  REQUESS THE PACK ROUTINE
         AIF   (&B(17)).HAVRTN    FULLWORD CONVERSION
.*
.*                   NO OTHER POSSIBILITIES AT THIS TIME
         MNOTE 8,'INVALID COMBINATION IN OPTION'
&RTN     SETA  0                  FORCE INVALID ROUTINE NUMBER
         AGO   .HAVRTN            GENERATE THE REST ANYWAY
.*
.*
.*             INPUT IS A BIT SETTING
.HAVBIT  ANOP
         AIF   (T'&BIT NE 'O').BITOK   CHECK FOR A MASK
         MNOTE 8,'PLEASE PROVIDE A MASK SETTING, TOO'
&RTN     SETA  0                  AGAIN, THE DEFAULT FOR ROUTINE
         AGO   .HAVRTN
.BITOK   ANOP
&RTN     SETA  6                  ASSUME THE BIT-ON ROUTINE
         AIF   (&B(11)).HAVRTN    AND IT WAS - ODDS WERE GOOD
&RTN     SETA  7                  SET FOR BIT-OFF ROUTINE
         AGO   .HAVRTN
.*
.*
.*             THE DATE ROUTINES......
.HAVDATE ANOP
         MNOTE 8,'DATE CONVERSIONS NOT YET SUPPORTED'
&RTN     SETA  0                  PROVIDE THE DUMMY ROUTINES
         AGO   .HAVRTN
.*
.*
.*             GENERATE THE FIRST PART OF TABLE ENTRY
.HAVRTN  ANOP
&CB1     SETC  '&B(1)&B(2)&B(3)&B(4)&B(5)&B(6)&B(7)&B(8)'
&CB2     SETC  '&B(9)&B(10)&B(11)&B(12)&B(13)&B(14)&B(15)&B(16)'
&CB3     SETC  '&B(17)&B(18)&B(19)&B(20)&B(21)&B(22)&B(23)&B(24)'
&CB4     SETC  '&B(25)&B(26)&B(27)&B(28)&B(29)&B(30)&B(31)&B(32)'
.*
&LK      SETA  K'&KEY-1           LENGTH OF THE KEY
&TAG     DC    AL2(END&SX-*,&LK,&RTN),S(&RECV),AL2(&PSNGKNM),CL8'&KEY'
         DC    B'&CB1&CB2&CB3',X'00'
.*
         AIF   (NOT &B(11) AND NOT &B(12)).SBITX    NO BIT MASK
         AIF   (&B(11)).SBITON    MASK TO TURN ON A BIT
.*                   GENERATE MASK TO TURN OFF BIT
         DC    AL1(255-&BIT)
         AGO   .EXIT
.SBITON  ANOP
         AIF   ('&BIT'(1,1) EQ 'X').SBITHX   MASK IS IN HEX!!!
         DC    AL1(&BIT)
         AGO   .EXIT
.SBITHX  ANOP
         DC    &BIT
         AGO   .EXIT
.SBITX   ANOP
.*
.*
.*             GENERATE THE LENGTH FIELDS FOR THE MOVES
         AIF   (T'&RECV(2) EQ 'O').RLNON   NO EXPLICIT LENGTH GIVEN
&LK      SETA  &RECV(2)           OVERRIDE LENGTH OF RECEIVER
         AIF   (&B(2)).RLGPAK     CHECK IF OUTPUT IS PACKED
         DC    AL2(&LK-1)
         AGO   .RLX               LENGTH FIELD IS SET
.RLGPAK  ANOP                     PACKED VALUE NEEDS TWO LENGTHS
         DC    AL1(2*(&LK-1),&LK-1)
         AGO   .RLX
.*                   AND IF NO LENGTH IS GIVEN - USE LENGTH ATTRIB
.RLNON   ANOP
         AIF   (&B(2)).RLNPAK     BIF PACKED AND NO LENGTH
         DC    AL2(&L&RECV-1)
         AGO   .RLX
.*
.RLNPAK  ANOP                     LENGTH GIVEN - OUTPUT IS PACKED
         DC    AL1(2*(&L&RECV-1),&L&RECV-1)
.RLX     ANOP                     LENGTH FIELD IS GENNED
.*
.*
.*                   CHECK FOR RANGE, VALUE, AND SPECIAL EDITS....
         AIF   (T'&V NE 'O' OR T'&R NE 'O').GSP1
         AIF   (T'&SP EQ 'O').EXIT
.GSP1    ANOP                     GENERATE SOMETHING SPECIAL
.*                   GENERATE THE SPECIAL EDIT NUMBERS
&I1      SETA  0                  DEFAULT NUMBER
         AIF   (T'&SP EQ 'O').SP1X
&I1      SETA  &SP
.SP1X    ANOP
         DC    AL2(&I1)
.*
.*
.*                    PROCESS THE RANGE OR VALUE, NOT BOTH
         AIF   (T'&R EQ 'O' AND T'&V EQ 'O').EXIT
         AIF   (T'&RECV(2) EQ 'O').GRVLN   CHECK FOR SPECIFIED LENGTH
LN&SX    EQU   &RECV(2)           LENGTH FOR LIST
         AGO   .GRVLX
.GRVLN   ANOP
LN&SX    EQU   &L&RECV            LENGTH FOR THE LIST
.GRVLX   ANOP
.*
&I1      SETA  1                  READY TO STEP THRU LIST OF R/V
         AIF   (T'&V NE 'O').GV   BIF GENERATE VALUE
         DC    C'R'               A RANGE LIST OF PAIRS
.GENR    ANOP
         DC    CL(LN&SX)'&R(&I1)',CL(LN&SX)'&R(&I1+1)'
&I1      SETA  &I1+2
         AIF   (&I1 LE N'&R).GENR  UNTIL LIST IS EXHAUSTED
         DC    CL(LN&SX)'00'      END OF LIST
         AGO   .EXIT
.*
.GV      ANOP                     GENERATE THE VALUE LIST - SIMPLER
         AIF   (T'&R EQ 'O').GV2  CHECK FOR REQUESTING BOTH
         MNOTE 8,'BIT CHANCY - RANGE AND VALUE....'
.GV2     ANOP
         DC    C'V'               A VALUE LIST
.GENV    ANOP
         DC    CL(LN&SX)'&V(&I1)'
&I1      SETA  &I1+1
         AIF   (&I1 LE N'&V).GENV
         DC    XL(LN&SX)'00'      END OF LIST
         AGO   .EXIT
.*
.*
.*             COMMON EXIT POINT IN ALL CASES
.EXIT    ANOP
END&SX   DS    0H
         SPACE 2
         MEND
