*          DATA SET OZPDSUNL   AT LEVEL 008 AS OF 02/24/82
*          DATA SET OZPDSUNL   AT LEVEL 007 AS OF 02/23/82
*          DATA SET OZPDSUNL   AT LEVEL 002 AS OF 11/02/81
         TITLE 'O Z P D S U N L*** UNLOAD RECFM=VB PDS CONTAINING INFO/X
               MVS RECORDS INTO A SEQ. DATASET'
         PRINT OFF
         MACRO
&NAME    PGM   &BASE=R12,&SAVE=$$SAVE,&START=$$START,&EOJ=$$EOJ,&RC=16
         LCLC  &BASE2,&BASE1
&BASE1   SETC  '&BASE(1)'
&BASE2   SETC  '&BASE(2)'
&NAME    CSECT
         SAVE  (14,12),,&NAME_&SYSDATE_&SYSTIME
         LR    &BASE1,R15          ESTABLISH ADDRESSABILITY.
         USING &NAME,&BASE1         TELL ASSEMBLER ABOUT BASE REGISTER.
         AIF   (T'&BASE(2) EQ 'O').NOBAS2
         LA    &BASE2,4095(,&BASE1)    ESTABLISH SECOND BASE
         LA    &BASE2,1(,&BASE2)       OFF OF FIRST BASE REGISTER
         USING &NAME+4096,&BASE2
.NOBAS2  ANOP
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         LA    R15,&SAVE           ADDRESS OF OUR SAVE AREA.
         ST    R13,4(R15)          BACKWARD SAVE AREA CHAIN.
         ST    R15,8(R13)          FORWARD SAVE AREA CHAIN.
         LR    R13,R15             POINT R13 TO CURRENT SAVE AREA.
         B     &START              BRANCH TO ENTRY CODE.
&EOJ     CH    R15,$$RC            IS RETURN CODE HIGHER THAN &RC?
         BNH   *+6                 YES - LETS ZERO R15.
         SR    R15,R15             ZERO OUT REGISTER 15.
         L     R13,&SAVE+4         POINT R13 TO PREVIOUS SAVE AREA.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE REGISTERS.
         BR    R14                 RETURN TO OS.
&SAVE    DS    18F                 OUR SAVE AREA.
$$RC     DC    H'&RC'              RETURN CODE.
$$START  DS    0H                  DEFAULT ENTRY POINT.
         MEND
         MACRO
&NAME    PRINTX &DCB,&TITLE,&BUFFER,&LINES,&NOPAGE,&SIZE=132
         LCLC  &A,&B,&C,&D,&E,&A1,&F
         LCLA  &S,&NTITLE,&I
&S       SETA  &SIZE-1
&NTITLE  SETA  N'&TITLE
&I       SETA  0
&A       SETC  '$$A'.'&SYSNDX'
&A1      SETC  '$#A'.'&SYSNDX'
&B       SETC  '$$B'.'&SYSNDX'
&C       SETC  '$$C'.'&SYSNDX'
&D       SETC  '$$D'.'&SYSNDX'
&E       SETC  '$$E'.'&SYSNDX'
&F       SETC  '$$F'.'&SYSNDX'
         SPACE
&NAME    BAL   R14,&F              GO EXAMINE LINE FOR ASA
*                                  RETURN WITH R15=LINE COUNT
         CH    R15,=AL2(&LINES)    WILL THIS HAVE OVFLWED THE PAGE?
         BNH   &A                  NO - PRINT A REGULAR LINE.
         SR    R15,R15             CLEAR REGISTER 15.
         STH   R15,&B              STORE LINES COUNTER.
         AIF   ('TITLE(1)' EQ '').$$LINE
         AIF   ('NOPAGE' EQ '').NOPAGE
         MVC   &TITLE(1)+&S-12(12),&E PAGE CONSTANT.
         ED    &TITLE(1)+&S-7(6),&D.+5 UNPACK PAGE NUMBER
         CVB   R15,&D              CURRENT PAGE COUNTER.
         LA    R15,1(R15)          INCREMENT BY ONE.
         CVD   R15,&D              CONVERT TO PACK FORMAT.
.NOPAGE  ANOP
         PUT   &DCB,&TITLE(1)      PRINT TITLE.
         AIF   (&NTITLE LE 1).$$LINE
&I       SETA  1
.$$LOOP  ANOP
&I       SETA  &I+1
         AIF   (&I GT &NTITLE).$$LINE
         PUT   &DCB,&TITLE(&I)     PRINT SUBTITLE NUMBER &I
         AGO   .$$LOOP
.$$LINE  ANOP
         LH    R15,&B              GET CURRENT LINES PRINTED
         LA    R15,&NTITLE         BUMP BY NUMBER OF TITLE LINES
         STH   R15,&B
         MVI   &BUFFER,C' '        MAKE SURE STARTS WITH NO EXTRA SKIPS
*
&A       PUT   &DCB,&BUFFER        PRINT A REGULAR LINE.
         BAL   R14,&F              GO CHECK OUT LINE COUNT
         STH   R15,&B              SAVE LINE COUNT
         B     &C                  GO EXIT
         SPACE 1
*
*  CHECK OUT ASA CONTROL CHARACTER FOR CARRIAGE COUNT
*
&F       LH    R15,&B              CURRENT LINES PRINTED.
         CLI   &BUFFER,C'+'        IS IT A OVERPRINT?
         BE    &A1                       YES..NO BUMP
         LA    R15,1(R15)          INCREMENT BY ONE. ..
         CLI   &BUFFER,C' '        IS IT A BLANK?
         BE    &A1
         LA    R15,1(R15)
         CLI   &BUFFER,C'0'        IS IT A DOUBLE SPACE?
         BE    &A1
         LA    R15,1(R15)
* NOTE...TRIPLE SPACE ASSUMED C'-'
&A1      BR    R14                 EXIT OUT.
         SPACE 1
         AIF   ('NOPAGE' EQ '').SKIPD
         DS    0D                  DOUBLE WORD ALIGNMENT..
&D       DC    PL8'+1'             TITLE PAGE COUNTER.
&E       DC    C' PAGE ',X'202020202140' CONST.  IN HEADING.&L
.SKIPD   ANOP
&B       DC    AL2(&LINES)         NUMBER OF LINES PRINTED ON PAGE.
&C       DS    0H                  EXIT OUT.
         MEND
         PRINT ON
         MACRO
         LEN   &N
         ORG   TABLE+&N/2
         DC    C'N'
         DS    1C
         DC    C'Y'
         MEND
*.....................................................................*
* PROGRAM : OZPDSUNL                                                  *
*                                                                     *
* PURPOSE: READ DIRECTORY OF RECFM=VB PDS AND UNLOAD ALL NON-ALIAS    *
*          MEMBERS INTO A SEQUENTIAL VB DATASET.                      *
*                                                                     *
* AUTHOR:  KEN TRUE - INTEL CORP - 21 OCT 81                          *
*                                                                     *
*   JCL :  //DOIT    EXEC  PGM=OZPDSUNL                               *
*          //SYSPRINT DD  SYSOUT=*                                    *
*          //INPUT    DD  DSN=VBPDS.TO.UNLOAD,DISP=SHR                *
*          //OUTPUT   DD  DSN=NEW.SEQ.DSN,...DCB=(RECFM=VB...)        *
*                                                                     *
* CHANGE HISTORY:                                                     *
*   VER 1.0   -  PRODUCED FROM AMALGAM OF 'SYSJOB', AND 'LISTMEM'     *
*                SOURCES.   KMT  21OCT81                              *
*   VER 1.1   -  CONVERTED TO 'OZPDSUNL' TO SUPPORT PDS STORAGE OF    *
*                INFO/MVS FORMAT RECORDS.  UNLOADS ALL RECORDS        *
*                STARTING WITH 'G', 'H', OR 'U'.  USES SPF STATS      *
*                TO PROVIDE 'H' RECORDS IN 'G' AND 'U' FILES IF       *
*                KEY IS ******** . INSERTS A 'K' LINE WITH MOD DATE   *
*                AND MOD TSO USER.  FOR ALL NON BLANK LINES IN TEXT   *
*                BODY WITH A MOD LEVEL=MOD LEVEL OF MEMBER, INSERTS   *
*                A '×' IN COL 80 OF LINE (REV LEVEL CHANGE).          *
*                K TRUE- 2 NOV 81 - INTEL CORP.                       *
*   VER 1.2   -  ADDED PROCESSING FOR 'M' (MESSAGE) FILE ENTRIES.     *
*                K TRUE- 9 NOV 81 - INTEL CORP                        *
*                                                                     *
*.....................................................................*
         EJECT
OZPDSUNL PGM     BASE=(R12,R11)    PROGRAM INITIALIZATION.
         EJECT
*.....................................................................*
*        GET THE GOODS ON THE PDS                                     *
*.....................................................................*
         SPACE
         RDJFCB (PDSDCB)           READ THE PDS JFCB.
         MVC   DSNAME,JFCB         MOVE DSNAME TO TITLE.
         SPACE
*.....................................................................*
*        OPEN AND PREPARE TO BOOGIE                                   *
*.....................................................................*
         SPACE
         OPEN  (PDSDCB,,SYSPRINT,OUTPUT,INPUT,,OUTPUT,OUTPUT)
         SPACE
*.....................................................................*
*        READ A FRESH DIRECTORY BLOCK                                 *
*.....................................................................*
         SR    R2,R2               CLEAR REGISTER TWO.
READ     READ  DECB1,SF,PDSDCB,AREA READ A DIRECTORY BLOCK.
         CHECK DECB1               WAIT FOR READ COMPLETION.I
         LA    R2,1(R2)            INCREMENT DIRECTORY COUNTER.
         LA    R7,AREA+10          BEGGINING OF MEMBERS.
         EJECT
*.....................................................................*
*        PROCESS ONE MEMBER                                           *
*.....................................................................*
         SPACE
NOMEM    ZAP   RECOUT,=P'0'
         ZAP   BLKIN,=P'0'
         LTR   R7,R7               ANY MORE MEMBERS?
         BZ    READ                NO - GO READ THE NEXT BLOCK.
         CLC   ONES,0(R7)          OTHERWISE- IS IT END OF FILE?
         BE    COUNTDX             YES- GO COUNT THE DIRECTORY BLOCKS.
         MVC   MEMBER,0(R7)        ELSE - PICK UP THE MEMBER NAME.
         MVC   POINT(3),8(R7)      SAVE OFF TTR FOR POINT USAGE
         MVC   AFLAG,11(R7)        SAVE OFF ALIAS INDICATOR
         NI    AFLAG,F#ALIAS       MASK OFF TRASH--INITIALIZE FOR MEMBR
         BAL   R10,ISITOURS        GO SEE IF WE SHOULD UNLOAD IT
         SPACE 1
NOMEM1   MVO   TTRX,8(3,R7)        MOVE THE TTR AROUND.
         UNPK  TTR,TTRX            UNPACK TTR DATA.
         OI    TTR+5,X'F0'         FIX CHARACTER.
         TR    TTR,HEXTAB          FIX UP HEX CHARACTERS.
         SR    R5,R5               CLEAR REGISTER FIVE.
         IC    R5,11(R7)           PICK UP ENTRY-LENGTH.
         N     R5,MASK             GET RID OF USERDATA AND ALIAS BITS.
         LA    R6,TABLE(R5)        POINT TO ADDRESS IN TABLE.
         SLL   R5,1                MULTIPLY REGISTER FIVE BY TWO.
         BAL   R14,GENSPFM         GO GENERATE SPF INFO FROM DIRECTORY
         LA    R7,8(R5,R7)         POINT TO SSI ADDRESS.
         CLI   0(R6),C'Y'          DOES MEMBER HAVE AN SSI?
         BE    GOTSSI              YES.
         MVC   SSI,BLANKS          CLEAR FIELD WITH BLANKS.
         LA    R7,4(R7)            INCREMENT TO NEXT MEMBER.
         B     GOREADIT            PRINT THE MEMBER DATA.
GOTSSI   MVO   SSIX,0(4,R7)        MOVE SSI AROUND.
         LA    R7,4(R7)            POINT REGISTER 7 PASS THE SSI.
         UNPK  SSI,SSIX            UNPACK SSI.
         OI    SSI+7,X'F0'         FIX CHARACTER.
         TR    SSI,HEXTAB          TRANSLATE HEX CHARACTERS.
GOREADIT BAL   R14,READMEM         GO READ AND POKE THE MEMBER
         BAL   R10,DOSTATS         GO GENERATE THE STATISTICS
         BAL   R10,PRINTX          GO PRINT THE DATA
         SPACE 1
         CLC   AREA(8),MEMBER      LAST MEMBER IN THE BLOCK?
         BNE   NOMEM               NO - KEEP PROCESSING.
         B     READ                ELSE - GO READ ANOTHER BLOCK.
         EJECT
*.....................................................................*
*        COUNT REMAINING DIRECTORY BLOCKS (IF ANY)                    *
*.....................................................................*
         SPACE
COUNTDX  CVD   R2,DOUBLE           DIR-USED COUNTER.
         UNPK  UDIR,DOUBLE         UNPACK DIRECTORIES IN USE.
         OI    UDIR+3,X'F0'        FIX CHARACTER.
         SPACE 1
RDECB2   READ  DECB2,SF,PDSDCB,AREA  KEEP READING THE DIRECTORY.
         CHECK DECB2               WAIT FOR GOOD READ.
         LA    R2,1(R2)            KEEP COUNTER GOING.
         B     RDECB2              KEEP PROCESSING.
         SPACE 1
DIRECTX  CVD   R2,DOUBLE           NUMBER OF DIRECTORIES.
         UNPK  ADIR,DOUBLE         UNPACK ALLOCATED DIRECTORIES.
         OI    ADIR+3,X'F0'        FIX CHARACTER.
         MVI   LINE,C'0'           BUILD
         MVC   LINE+1(L'LINE-1),BLANKS   TOTALS
         MVC   MEMBER,=CL8' *TOTAL* '       LINE
         MVC   LINEERR,STATPATT
         ED    STATBLKS,TOTBLK      EDIT TOTALS
         ED    STATRECS,TOTREC
         BAL   R10,PRINTX
         MVC   LINE,DLINE          MOVE IN LINE TO PRINT
         BAL   R10,PRINTX
         SPACE 1
         CLOSE (PDSDCB,,SYSPRINT,,INPUT,,OUTPUT)
         B     $$EOJ               EXIT OUT.
         EJECT
*.....................................................................*
*        READMEM SUBROUTINE                                           *
*.....................................................................*
         SPACE
READMEM  STM   R0,R15,SAVEREGS
         MVC   SPFAREA,BLANKS
         TM    AFLAG,F#ALIAS       IS THIS AN ALIAS?
         BZ    NOTALIAS
         MVC   LINEERR,EMSG4       SAY ITS AN ALIAS
         B     READMEMR
NOTALIAS TM    AFLAG,F#UNLOAD      UNLOAD THIS ONE?
         BO    DOPOINT
         MVC   LINEERR,EMSG5       SAY ITS NOT ONE OF OURS
         B     READMEMR            AND SPLIT
         SPACE 1
DOPOINT  POINT INPUT,POINT         SEE IF THE MEMBER IS AROUND
         SPACE
         LTR   R15,R15             GOT IT?
         BZ    READ00
         MVC   LINEERR,EMSG1
         BAL   R10,PRINTX
         B     READMEMR
         EJECT
**********************************************************************
* OBJECT OF THIS EXERCISE..:                                         *
*  1) READ MEMBER BLOCK INTO BUFIN                                   *
*  2) MANUALLY DEBLOCK INTO VB RECORDS, AND                          *
*  3) USE QSAM PUT TO SHOVEL THE RECORDS OFF TO OUTPUT               *
**********************************************************************
*
* READ DATA BLOCK
*
READ00   EQU   *
         LA    R5,BUFIN            BLK ADDR
         L     R6,BLKMAX           MAX BLK SIZE
         READ  DECBX,SF,INPUT,(R5),(R6)
         CHECK DECBX
         AP    BLKIN,P1            COUNT I/P BLKS
         L     R15,DECBX+16        IOB ADDR
         SH    R6,14(R15)          COMPUTE BYTES READ
         C     R6,BLKMAX           SEE IF TOO BIG A BLOCK
         BNH   BUILD00             NO..GO DEBLOCK
         MVC   LINEERR,EMSG2
         BAL   R10,PRINTX
         B     READMEMR                GO EXIT
         EJECT
READ10   EQU   *
*
* DEBLOCK INPUT     R5 - I/P BLK PTR
*  BLOCK TO VB      R6 - TOTAL BYTES IN CURRENT BLOCK
*  RECORDS.         R3 - ADDRESS OF END OF CURRENT BLOCK
*
BUILD00  EQU   *
         CH    R6,0(R5)    COMPARE BDW TO DECB RECORD LENGTH
         BE    PUTBEGIN    ITS OK......NO PROBLEM
         MVC   LINEERR,EMSG3
         BAL   R10,PRINTX
         B     READMEMR     AND EXIT
         SPACE
PUTBEGIN LA    R3,BUFIN    GET ADDRESS OF BUFFER
         LA    R3,0(R6,R3)      (R3) = END ADDRESS
         LA    R5,4(R5)    POINT TO FIRST RECORD
         CLC   RECOUT,=PL4'0'
         BNE   PUTLOOP
         TM    AFLAG,F#SPFOK       SPFSTATS ON OUR RECOD?
         BNO   PUTLOOP         NO..SKIP
         CLC   12(10,R5),=C'H ********' DO THEY WANT US TO USE OURS?
         BNE   PUTLOOP
         OI    AFLAG,F#MODIFY      SAY..DO OUR STUFF WITH THIS ONE  NTL
DOHDR    PUT   OUTPUT,HEADEREC PUT OUR HEADER OUT INSTEAD
         MVC   WORD,0(R5)
         LH    R2,WORD            GET RECORD LENGTH
         LA    R5,0(R2,R5)        POINT TO NEXT RECORD
         AP    RECOUT,P1
         SPACE 2
         PRINT NOGEN
PUTLOOP  TM    AFLAG,F#MODIFY+F#SPFOK SPFSTATS AND OUR MEMBER?
         BNO   CHKFORK
         CLC   0(2,R5),=AL2(4+8+4)   RDW + LINENUMBER + L'$EOM
         BL    CHKFORK
         CLC   12(4,R5),=C'$EOM'   END?
         BNE   CHKFORK
         SPACE 1
DOPUTS   PUT   OUTPUT,BLANKREC    PUT OUT SPF STATS REC
         PUT   OUTPUT,HISTREC1
         PUT   OUTPUT,HISTREC2
         AP    RECOUT,=P'3'
         B     POKEREC            JUST GO PUT OUT THE EOM RECORD
         EJECT
CHKFORK  TM    AFLAG,F#MODIFY+F#SPFOK+F#DIDK
         BO    CHKFBLNK           HAVE WE BEEN HERE BEFORE?
         CLI   12(R5),C'K'        IS THIS THE FIRST K RECORD?
         BE    ITSAK              NO...SKIP THIS MESS
         CLI   12(R5),C' '        HOW ABOUT A BLANK HERE?
         BNE   CHKFBLNK           NO LUCK....
ITSAK    OI    AFLAG,F#DIDK       SAY FIRST K FOUND
         TM    AFLAG,F#MODIFY+F#SPFOK IS THIS ONE WE WANT TO MODIFY?
         BNO   CHKFBLNK           NOT ON YOUR LIFE...
         PUT   OUTPUT,TITLEREC    PUT OUT OUR TITLE RECORD
         AP    RECOUT,P1
         SPACE 1
CHKFBLNK TM    AFLAG,F#SEENIT     HAVE WE FOUND THE FIRST BLANK LINE?
         BO    CHKMODF             YES..SKIP THIS STUFF
         TM    AFLAG,F#MODIFY+F#SPFOK IS THIS ONE OF OURS?
         BNO   RESETSKP
         CLI   12(R5),C' '        IS THIS A BLANK?
         BNE   CHKMODF
         PUT   OUTPUT,KEYREC
         AP    RECOUT,P1
RESETSKP OI    AFLAG,F#SEENIT
         SPACE 1
CHKMODF  TM    AFLAG,F#MODIFY+F#SPFOK+F#SEENIT  PROCESSED?
         BNO   POKEREC                   RECORDS
         CLC   10(2,R5),$MODLVL   IS THIS ONE OF THE RECENT MODS
         BNE   POKEREC            NO..JUST PUT IT OUT
         SR    R2,R2
         ICM   R2,B'0011',0(R5)   GET THE BYTE COUNT
         CH    R2,=H'84'            IS TOO BIG?
         BNH   OKSIZE
         LH    R2,=H'84'
OKSIZE   S     R2,=F'5'             MAKE AS MACHINE LENGTH
         MVC   TEMPLINE,BLANKS
         EX    R2,MOVETEMP        MOVE THE RECORD INTO OUR MEMORY
         CLC   TEMPLINE+8(L'TEMPLINE-8),BLANKS IS RESULT FIELD BLANKS?
         BE    POKEREC            YES...SKIP OUR STUFF
         MVI   TEMPLINE+71+8,C'×'   INDICATE CHANGED
         PUT   OUTPUT,TEMPREC     PUT IT OUT
         B     POKEREC1           AND SKIP THIS PUT
         SPACE 1
POKEREC  PUT   OUTPUT,(R5) PUT OUT THE RECORD POINTED TO
POKEREC1 AP    RECOUT,P1
         MVC   WORD,0(R5)
         LH    R2,WORD            GET RECORD LENGTH
         LA    R5,0(R2,R5)        POINT TO NEXT RECORD
         CR    R5,R3              IS THIS THE END?
         BL    PUTLOOP
         PRINT GEN
         SPACE 1
         B     READ00
READMEMR LM    R0,R15,SAVEREGS
         BR    R14
         SPACE 1
MOVETEMP MVC   TEMPLINE(*-*),4(R5)   MOVE RECORD TO WORK AREA
         EJECT
*.....................................................................*
*        GENERATE STATICSTICS LINE                                    *
*.....................................................................*
         SPACE
DOSTATS  TM    AFLAG,F#ALIAS      IS THIS AN ALIAS?
         BO    ITSALIAS           IF NOT..BYPASS THIS STUFF
         TM    AFLAG,F#UNLOAD     DID WE DO THIS ONE?
         BZ    ITSALIAS           NOT ACTUALLY.....
         SPACE 2
         MVC   LINEERR,STATPATT   MOVE IN THE EDIT AREA
         ED    STATBLKS,BLKIN     EDIT THE BLOCK COUNT
         ED    STATRECS,RECOUT    EDIT IN RECORDS DONE
         AP    TOTBLK,BLKIN       ACCUMULATE BLOCKS
         AP    TOTREC,RECOUT      ACCUMULATE RECORDS
         SPACE 2
         TM    AFLAG,F#SPFOK      SPF STATS OK?
         BZ    ITSALIAS
         MVC   SPFAREA(L'SPFMSG),SPFMSG MOVE SPF STUFF TO AREA
         SPACE 2
ITSALIAS ZAP   BLKIN,=P'0'
         ZAP   RECOUT,=P'0'
         BR    R10
         EJECT
*.....................................................................*
*        PRINTX SUBROUTINE                                            *
*.....................................................................*
         SPACE
PRINTX   PRINTX SYSPRINT,(HEAD1,HEAD2),LINE,55 PRINT THE DATA.
         BR    R10
         EJECT
*.....................................................................*
*        GENSPFM SUBROUTINE                                           *
* GENERATE DECODED SPF STATISTICS IN THE 'SPFSTAT' LINE FOR LATER USE *
* ENTERED VIA BAL R14,GENSPFM                                         *
*                                                                     *
*   WITH  <R5> = COUNT OF BYTES IN USERDATA AREA OF DIR BLK           *
*         (R7) = ADDR OF DIRECTORY BLOCK ENTRY TO DECODE              *
*                                                                     *
*   RETURN WITH 'SPFSTAT' LINE FILLED IN FOR LATER USAGE              *
*.....................................................................*
         SPACE
GENSPFM  STM   R0,R15,SAVEREG2
         MVC   SPFSTAT,SPFINIT MOVE IN GOOD SPF BLOCK
         CH    R5,=H'30'       IS THIS A SUSPECTED SPF FORMAT BLOCK?
         BNE   SPFRETRN        NO WAY...SPLIT
         USING SPFBLK,R7
         CLC   #BLANKS,BLANKS   BLANKS WHERE WE WANT THEM?
         BNE   SPFRETRN
         TM    #JCREATE+3,X'0F'  SIGN WHERE IT SHOULD BE?
         BNO   SPFRETRN
         TM    #JMODIFY+3,X'0F'  SIGN WHERE IT SHOULD BE?
         BNO   SPFRETRN
         SPACE 1
DOIT     MVC   $WHOMOD,#WHOMOD     MOVE OVER WHODONIT LAST
         MVC   K$WHOMOD,#WHOMOD    MOVE OVER WHODONIT LAST TO KEY
         SPACE 1
         SR    R1,R1
         ICM   R1,B'0111',#JCREATE+1   LOAD CREATE DATE
         BAL   R10,DATEFRMT        GO CONVERT TO PRINTABLE
         MVC   $CREATED,CDAYN      MOVE IN THE NEW DATE
         SPACE 1
         ICM   R1,B'0111',#JMODIFY+1   LOAD MODIFY DATE
         BAL   R10,DATEFRMT
         MVC   $MODIFY,CDAYN       MOVE IT IN TO MESSAGE
         MVC   K$DATE,CDAYN        MOVE INTO KEY AREA
         MVC   T$DATE,CDAYN        MOVE INTO EXTRA TITLE LINE
         SPACE 1
         SR    R1,R1               CLEAR A REGISTER                 NTL
         IC    R1,#REV             GET REV LEVEL                    NTL
         MH    R1,=H'100'          MULTIPLY FOR SCALE               NTL
         XC    WORKWORD,WORKWORD
         MVC   WORKWORD+3(1),#REV+1 GET .MOD VERSION
         A     R1,WORKWORD         ADD TO WHAT VERSION NUMBER       NTL
         CVD   R1,WORKWORD         CONVERT TO DECIMAL               NTL
         MVC   NUMBER(07),=X'402021204B2020'                        NTL
         ED    NUMBER(07),WORKWORD+5                                NTL
         MVC   $VERSION,NUMBER+2                                    NTL
         EJECT
         XC    WORKWORD,WORKWORD
         MVC   WORKWORD(2),#MODTIME GET MODIFIED TIME
         OI    WORKWORD+2,X'0F'    PUT A SIGN IN IT
         MVC   NUMBER(07),=X'4021207A202020'
         ED    NUMBER(07),WORKWORD
         MVC   $MODTIME,NUMBER+1
         SPACE 1
         MVC   H$MEMBER,MEMBER   SAVE MEMBER NAME FOR HEADER
         MVC   H$DATE,$MODIFY+2  SAVE MODIFICATION MONYR
         MVC   $LINES,BLANKS
         LA    R15,$LINES
         SR    R1,R1
         ICM   R1,B'0011',#CURNTLN
         BAL   R10,FITINUM
         LR    R2,R15            SAVE NEXT ADDRESS IN HISTREC2
         OI    AFLAG,F#SPFOK
         SPACE 1
         LA    R15,H$LINES
         MVC   H$LINES,BLANKS
         BAL   R10,FITINUM1      MOVE LINES TO AREA
         SPACE 1
         LR    R15,R2            RESTORE NEXT ADDR IN HISTREC2
         MVC   0(03,R15),=C' I=' SET UP INITIAL NUMBER OF LINES
         LA    R15,3(,R15)
         SR    R1,R1
         ICM   R1,B'0011',#INITLN
         BAL   R10,FITINUM
         SPACE 1
         MVC   0(03,R15),=C' M='  SET UP MODIFIED # LINES
         LA    R15,3(,R15)
         SR    R1,R1
         ICM   R1,B'0011',#MODCNT
         BAL   R10,FITINUM
         SPACE 1
         DROP  R7
SPFRETRN LM    R0,R15,SAVEREG2
         BR    R14
         EJECT
*.....................................................................*
*        SET FLAGS FOR PROCESSING MEMBER                              *
*.....................................................................*
         SPACE
ISITOURS CLI   MEMBER,C'G'       IS IT A GENERAL MEMBER
         BE    YESOURS
         CLI   MEMBER,C'H'       IS IT A HELP MEMBER
         BE    OURSBUT
         CLI   MEMBER,C'M'       IS IT A MESSAGE MEMBER            NTL
         BE    YESOURS                                             NTL
         CLI   MEMBER,C'U'       IS IT A USER MEMBER
         BE    YESOURS
NOTOURS  BR    R10
YESOURS  OI    AFLAG,F#UNLOAD    OK TO UNLOAD
         BR    R10
OURSBUT  OI    AFLAG,F#UNLOAD    YES..UNLOADIT, BUT NO FIDDLING WITH IT
         BR    R10
         SPACE  3
*.....................................................................*
*        FITINUM SUBROUTINE                                           *
* ENTER WITH:                                                         *
*        <R1> = NUMBER TO DISPLAY                                     *
*        (R15)= ADDR TO POKE NUMBER                                   *
*        BAL  R10,FININUM                                             *
*.....................................................................*
         SPACE
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL
FITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT
         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES
         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC
         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)
         BR    R10            RETURN TO OUR CALLER
         SPACE 3
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED
         SPACE 2
NORMAL   DC    X'402020202020202020202120' EDIT MASK
SIGNORM  EQU   11             OFFSET TO LAST DIGIT
         EJECT ,
***********************************************************************
*                                                                     *
* FORMAT DATE                                                         *
*   R1=DATE IN 00YYDDDS FORMAT                                        *
*   BAL R10,DATEFRMT                                                  *
*                                                                     *
* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY                         *
*                E.G.       07JUL80 (189) MON                         *
*                           123456789.1234567                         *
*                                                                     *
***********************************************************************
DATEFRMT MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA
*
         ST    R1,DATE                 SAVE DATE FOR LATER
*                                                                     *
***FORMAT THE DATE INTO THE OUTPUT MSG                                *
*                                                                     *
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.        *
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                   *
         XC    DOUBLEWD,DOUBLEWD                                      *
         MVC   DOUBLEWD+4(4),WORKWORD  CNVT YEAR TO BIN               *
         CVB   R0,DOUBLEWD                                            *
         ST    R0,BINYEAR              AND SAVE                       *
         TM    BINYEAR+3,X'03'         LEAP YEAR?                     *
         BNZ   MON1                    NO.                            *
         MVI   MONMSK+10,29            YES, CORRECT                   *
MON1     XC    DOUBLEWD,DOUBLEWD       CNVT DAYS TO BIN               *
         MVC   DOUBLEWD+6(2),DATE+2                                   *
         CVB   R3,DOUBLEWD                                            *
         ST    R3,BINDAYS              SAVE FOR LATER                 *
         XR    R1,R1                                                  *
         LA    R15,11                                                 *
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY              *
         SR    R3,R1                                                  *
         BNP   MONOVR                                                 *
         BCT   R15,MON2                                               *
         B     *+6                                                    *
MONOVR   AR    R3,R1                   CORRECT OVERDRAW               *
         CVD   R3,DOUBLEWD             FORMAT DAY                     *
         UNPK  CDAYN(2),DOUBLEWD+6(2)                                 *
         OI    CDAYN+1,X'F0'           FIX UP SIGN                    *
         MH    R15,=H'3'               GET TABLE OFFSET               *
         LA    R15,MONTAB(R15)         AND POINT AT MONTH             *
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG             *
         EJECT ,                                                      *
***DAY OF WEEK                                                        *
         L     R15,BINYEAR                                            *
         SH    R15,=H'69'                                             *
         BNP   OUTT                    MUST BE GREATER OR BAD         *
         XR    R14,R14                 CLEAR DAY REG                  *
         D     R14,=F'4'                                              *
         MH    R15,=H'5'                                              *
         AR    R14,R15                                                *
         A     R14,BINDAYS                                            *
         SRDA  R14,32                                                 *
         D     R14,=F'7'               MODULO 7 FOR WEEK              *
         MH    R14,=H'3'                                              *
         LA    R14,DAYTAB(R14)         POINT AT TODAY                 *
         MVC   CDAY(3),0(R14)          INSERT IN MSG                  *
***                                                                   *
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                          *
         ED    JDATE-1(7),DATE+1                                      *
         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE           *
*                                                                     *
*                                                                     *
DATERTN  BR    R10                     RETURN TO MAINLINE             *
*                                                                     *
OUTT     MVC   CDAY(3),=CL3'???'                                      *
         B     MOVEJD                                                 *
         SPACE 2                                                      *
         EJECT ,                                                      *
***********************************************************************
*                                                                     *
*       CONSTANTS FOR DATE ROUTINE USAGE                              *
*                                                                     *
***********************************************************************
         SPACE ,                                                      *
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES          *
*                                                                     *
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )      *
         DC    CL1' '                                          )      *
         DC    C'XX.XXX'                           L           )      *
*                                                  E  F        )      *
         DC    CL2' '                              A  I  T     )      *
         DC    CL3' '                              V  E  O  F  )      *
         DC    CL2' ',C' ('                        E  L  G  O  )      *
         DC    CL3' ',C') '                           D  E  R  )      *
         DC    CL3' ',C' '                            S  T     )      *
*                                                           T  )      *
MVCLEN   EQU   *-XMONMSK                                              *
*                                                                     *
***********************************************************************
DAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                               *
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'                *
         EJECT
*.....................................................................*
*        OPEN EXIT                                                    *
*.....................................................................*
         SPACE
*
* OPEN EXIT TO MAKE SURE THAT A BLOCK SIZE IS GIVEN BY SOMEONE
*    FOR OUTPUT
*
         USING BLKEXIT,R15
BLKEXIT  CLC   DCBBLKSI-IHADCB(,R1),=H'0' ANY BLOCK SIZE SPECIFIED?
         BNE   CHKLRECL             YES-> USE IT
         MVC   DCBBLKSI-IHADCB(,R1),=H'6233'
CHKLRECL CLC   DCBLRECL-IHADCB(,R1),=H'0' ANY LRECL SPECIFIED?
         BNER  R14                  YES-USEIT
         MVC   DCBLRECL-IHADCB(,R1),=H'084'
         BR    R14                  AND RETURN
         SPACE 1
*.....................................................................*
*        DCB DEFINITIONS                                              *
*.....................................................................*
         SPACE
         PRINT NOGEN
         SPACE 2
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,BLKSIZE=1320,         X
               RECFM=FBA,LRECL=132
         SPACE 2
PDSDCB   DCB   DDNAME=INPUT,DSORG=PS,MACRF=R,EODAD=DIRECTX,            X
               KEYLEN=8,LRECL=256,BLKSIZE=256,RECFM=F,EXLST=EXLIST
         SPACE 2
INPUT    DCB   DDNAME=INPUT,DSORG=PO,RECFM=U,MACRF=R,BLKSIZE=19070,    X
               EODAD=READMEMR,BUFNO=2
         SPACE 2
OUTPUT   DCB   DDNAME=OUTPUT,DSORG=PS,MACRF=(PM),RECFM=VB,             X
               EXLST=EXLSTB
         PRINT GEN
         EJECT
*.....................................................................*
*        CONSTANTS                                                    *
*.....................................................................*
         SPACE
ONES     DC    X'FFFFFFFFFFFFFFFF'
MASK     DC    X'0000001F'
EXLIST   DC    0F'0',X'87',AL3(JFCB)
EXLSTB   DC    0F'0',X'85',AL3(BLKEXIT)
HEXTAB   EQU   *-X'F0'
         DC    C'0123456789ABCDEF'
BLKMAX   DC    F'19070'
P1       DC    X'1C'               CONSTANT
EDMASK   DC    X'4020202020202120'
TABLE    DC    CL50'   '                 FOR CHECKING OUT SSI INFO..
         LEN   0
         LEN   22
         LEN   30
         LEN   40
SPFINIT  DC    CL80'99999999XX.XX DDMMMYY DDMMMYY HH:MM XXXXXXX L= '
BLANKS   DC    CL133' '
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE
AFLAG    DS    X
F#ALIAS  EQU   X'80' '1.......' = ALIAS MEMBER
F#UNLOAD EQU   X'40' '.1......' = OK TO UNLOAD MEMBER
F#MODIFY EQU   X'20' '..1.....' = OK TO SCAN/MODIFY MEMBER
F#SPFOK  EQU   X'10' '...1....' = SPF STATS EXIST
F#SEENIT EQU   X'08' '....1...' = SEEN THIS MEMBER BEFORE
F#DIDK   EQU   X'04' '.....1..' = SEEN FIRST K RECORD
*
DOUBLE   DS    D
DOUBLEWD DS    D
NUMBER   DS    CL16           FINAL PRODUCT OF CONVERT
SAVEREGS DS    18F
SAVEREG2 DS    18F
WORD     DC    F'0'                WORK FLD
POINT    DC    F'0'        STORE TTR FOR MEMBER
JFCB     DS    CL176
AREA     DS    CL264
*
TTRX     DC    XL4'0C'
SSIX     DC    XL4'0C'
DXCOUNT  DS    CL4
*
RECOUT   DC    PL4'0'              O/P DATA REC COUNT
BLKIN    DC    PL4'0'              I/P BLK COUNT
TOTBLK   DC    PL4'0'
TOTREC   DC    PL4'0'
         EJECT
*.....................................................................*
*  OUTPUT RECORD DEFINITIONS                                          *
*.....................................................................*
         SPACE
BLANKREC DC    H'13',H'0',C'99999997 '
         SPACE 1
TITLEREC DC    0H'0',AL2(ETITL-TITLEREC),H'0'
*                   0....×....1....×....2....×....3....×....4....×....5
TITLELNE DC       C'00010000T                                          X
                            UPDATED: DDMMMYY'
*              ....×....6....×....7....×....
ETITL    EQU   *
T$DATE   EQU   TITLELNE+73,7
         SPACE 1
HISTREC1 DC    0H'0',AL2(EHIS1-HISTREC1),H'0'
*                   0....×....1....×....2....×....3....×....4....×....5
         DC       C'99999998-VER- CREATED --MODIFIED--- MOD-BY  LINES(CX
               UR/INIT/MOD)'
EHIS1    EQU   *
HISTREC2 DC    0H'0',AL2(ESPF-SPFSTAT+4),H'0'
*                   0....×....1....×....2....×....3....×....4....×....5
SPFSTAT  DC    CL80'99999999XX.XX DDMMMYY DDMMMYY HH:MM XXXXXXX L= '
ESPF     EQU   *
RSVD     DC    CL20' '
SPFMSG   EQU   SPFSTAT+8,72
$VERSION EQU   SPFSTAT+08,5
$MODLVL  EQU   SPFSTAT+11,2
$CREATED EQU   SPFSTAT+14,7
$MODIFY  EQU   SPFSTAT+22,7
$MODTIME EQU   SPFSTAT+30,5
$WHOMOD  EQU   SPFSTAT+36,7
$LINES   EQU   SPFSTAT+46,14
         SPACE 1
HEADEREC DC    0H'0',AL2(EHDR-HEADEREC),H'0'
*                   0....×....1....×....2....×....3....×....4....×....5
HEADRLNE DC    CL50'00000001H MMMMMMMM D=MMMYY S=INTEL L= '
EHDR     EQU   *
H$MEMBER EQU   HEADRLNE+10,8
H$DATE   EQU   HEADRLNE+21,5
H$LINES  EQU   HEADRLNE+37,10
         SPACE 1
KEYREC   DC    0H'0',AL2(EKEY-KEYREC),H'0'
*                   0....×....1....×....2....×....3....×....4....×....5
KEYLINE  DC    CL50'00100001K DDMMMYY XXXXXXX'
EKEY     EQU   *
K$DATE   EQU   KEYLINE+10,7
K$WHOMOD EQU   KEYLINE+18,7
         SPACE 1
TEMPREC  DC    0H'0',AL2(ETMP-TEMPREC),H'0'
TEMPLINE DC    CL80' '
ETMP     EQU   *
         EJECT
BINYEAR  DC    F'0'                                                   *
BINDAYS  DC    F'0'                                                   *
DATE     DC    F'0'                                                   *
WORKWORD DC    2F'0'                                                  *
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES          *
*                                                                     *
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )      *
         DC    CL1' '                                          )      *
*        0123456789.1234567                                    )      *
*        DDMONYY (DDD) DAY                                     )      *
*                                                              )      *
JDATE    DC    C'XX.XXX'                           L           )      *
*                                                  E  F        )      *
CDAYN    DC    CL2' '                              A  I  T     )      *
CMON     DC    CL3' '                              V  E  O  F  )      *
CYR      DC    CL2' ',C' ('                        E  L  G  O  )      *
CJDAY    DC    CL3' ',C') '                           D  E  R  )      *
CDAY     DC    CL3' ',C' '                            S  T     )      *
*                                                           T  )      *
***********************************************************************
LEN      EQU   *-CDAYN                                                *
         EJECT
*.....................................................................*
*        PRINT LINES                                                  *
*.....................................................................*
         SPACE
LINE     DC    CL133'  '
MEMBER   EQU   LINE+1,8
TTR      EQU   LINE+11,6
SSI      EQU   LINE+19,8
LINEERR  EQU   LINE+29,40
STATBLKS EQU   LINE+29,8
STATRECS EQU   LINE+38,8
SPFAREA  EQU   LINE+47,80
STATPATT DS    CL40' '
         ORG   STATPATT
         DC    X'4020202020202120',C' ',X'4020202020202120',C' '
         ORG
         SPACE 2
DLINE    DC    CL133'0OF THE XXXX DIRECTORY BLOCKS ALLOCATED, XXXX ARE X
               IN USE    '
ADIR     EQU   DLINE+8,4
UDIR     EQU   DLINE+41,4
         SPACE 2
HEAD1    DC    CL133'1OZPDSUNL VER 1.2 DSN='
DSNAME   EQU   HEAD1+22,44
         ORG   HEAD1+68
CO       DC    C'INTEL CIS'
         ORG
*                     XXXXXXXX  XXXXXX  XXXXXXXX  .NNNNNNN .NNNNNNN XXX
*                              1         2         3         4
*                    0123456789.123456789.123456789.123456789.123456789
HEAD2    DC    CL133'0MEMBER    TTR       SSI       BLOCKS  RECORDS -VEX
               R- CREATED ---MODIFIED-- MOD-BY  LINES(CUR/INIT/MOD) '
EMSG1    DC    CL40'POINT FAILED ON MEMBER- BYPASSED'
EMSG2    DC    CL40'BLOCK READ > 19070 BYTES'
EMSG3    DC    CL40'BLOCK BDW ^= DECB BYTE COUNT'
EMSG4    DC    CL40'MEMBER IS AN ALIAS..BYPASSED'
EMSG5    DC    CL40'MEMBER NOT ''G'' ''H'' ''M'' OR ''U''..BYPASSED'
         EJECT
*.....................................................................*
*       LITERAL POOL                                                  *
*.....................................................................*
         SPACE
         LTORG
         EJECT
*.....................................................................*
*       BIG STUFF TO LEAVE AT BACK                                    *
*.....................................................................*
         SPACE
*
* I/P BUFFER
*
BUFIN    DC    19070X'00'
         EJECT
*.....................................................................*
*        DSECT DEFINITIONS                                            *
*.....................................................................*
         SPACE
SPFBLK   DSECT ,DEFINITION OF A SPF FORMAT DIRECTORY USERDATA BLOCK
#MEMBER  DS    CL8
#STUFF   DS    CL4
#REV     DS    XL2
#MOD     DS    XL2
#JCREATE DS    PL4
#JMODIFY DS    PL4
#MODTIME DS    XL2
#CURNTLN DS    H
#INITLN  DS    H
#MODCNT  DS    H
#WHOMOD  DS    CL8
#BLANKS  DS    CL2
         SPACE 2
         PRINT NOGEN
         DCBD  DSORG=PO,DEVD=DA
         SPACE 2
JFCBD    DSECT
         IEFJFCBN
         END
