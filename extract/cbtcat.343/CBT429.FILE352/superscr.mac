*          DATA SET SUPERSCR   AT LEVEL 003 AS OF 06/03/81
*          DATA SET SUPERSCR   AT LEVEL 005 AS OF 06/02/81
         MACRO
&NAME    REGS
R0       EQU   0                   REGISTER 0.
R1       EQU   1                   REGISTER 1.
R2       EQU   2                   REGISTER 2.
R3       EQU   3                   REGISTER 3.
R4       EQU   4                   REGISTER 4.
R5       EQU   5                   REGISTER 5.
R6       EQU   6                   REGISTER 6.
R7       EQU   7                   REGISTER 7.
R8       EQU   8                   REGISTER 8.
R9       EQU   9                   REGISTER 9.
R10      EQU   10                  REGISTER 10.
R11      EQU   11                  REGISTER 11.
R12      EQU   12                  REGISTER 12.
R13      EQU   13                  REGISTER 13.
R14      EQU   14                  REGISTER 14.
R15      EQU   15                  REGISTER 15.
         MEND
         MACRO
&NAME    PRINTX &DCB,&TITLE,&BUFFER,&LINES,&NOPAGE
.*--------------------------------------------------------------------*
.*       MAURICE SALINAS                                              *
.*       THIS MACRO WAS DESIGNED WITH THE INTENTION OF PROVIDING      *
.*       THE ASSEMBLY LANGUAGE PROGRAMMER WITH AN EASY WAY TO CREATE  *
.*       A REPORT BY JUST LETTING "PRINTX" GENERATE THE CODE TO DO IT.*
.*                                                                    *
.*       SYMBOL  × PRINTX × DCB,     DATA CONTROL BLOCK.              *
.*               ×        × TITLE,   TITLE,(TITLE,SUBTITLE), OR OMIT  *
.*               ×        × BUFFER,  REGULAR PRINT RECORD.            *
.*               ×        × LINES,   LINES PER PAGE TO BE PRINTED.    *
.*               ×        × NOPAGE   OPTIONAL. IF CODED PAGE COUNT IS *
.*                                   SUPPRESS.                        *
.*--------------------------------------------------------------------*
         LCLC  &A,&B,&C,&D,&E
&A       SETC  '$$A'.'&SYSNDX'
&B       SETC  '$$B'.'&SYSNDX'
&C       SETC  '$$C'.'&SYSNDX'
&D       SETC  '$$D'.'&SYSNDX'
&E       SETC  '$$E'.'&SYSNDX'
&NAME    LA    R15,&LINES          NUMBER OF LINES PER PAGE.
         CH    R15,&B              HAVE WE PRINTED A FULL PAGE?
         BNZ   &A                  NO - PRINT A REGULAR LINE.
         SR    R15,R15             CLEAR REGISTER 15.
         STH   R15,&B              STORE LINES COUNTER.
         AIF   ('TITLE(1)' EQ '').$$LINE
         AIF   ('NOPAGE' EQ '').NOPAGE
         MVC   &TITLE(1)+120(6),&E PAGE CONSTANT.
         UNPK  &TITLE(1)+126(4),&D UNPACK PAGE NUMBER
         OI    &TITLE(1)+129,X'F0' FIX SIGN.
         CVB   R15,&D              CURRENT PAGE COUNTER.
         LA    R15,1(R15)          INCREMENT BY ONE.
         CVD   R15,&D              CONVERT TO PACK FORMAT.
.NOPAGE  ANOP
         PUT   &DCB,&TITLE(1)      PRINT TITLE.
         AIF   ('&TITLE(2)' EQ '').$$LINE
         PUT   &DCB,&TITLE(2)      PRINT SUBTITLE.
.$$LINE  ANOP
&A       PUT   &DCB,&BUFFER        PRINT A REGULAR LINE.
         LH    R15,&B              CURRENT LINES PRINTED.
         LA    R15,1(R15)          INCREMENT BY ONE.
         STH   R15,&B              STORE CURRENT COUNTER.
         B     &C                  EXIT OUT.
         AIF   ('NOPAGE' EQ '').SKIPD
         DS    0D                  DOUBLE WORD ALIGNMENT..
&D       DC    PL8'+1'             TITLE PAGE COUNTER.
&E       DC    C' PAGE '           PAGE CONSTANT IN HEADING.&L
.SKIPD   ANOP
&B       DC    H'&LINES'           NUMBER OF LINES PER PAGE.
&C       DS    0H                  EXIT OUT.
         MEND
*          DATA SET SUPERSCR   AT LEVEL 004 AS OF 06/15/79
*          DATA SET SUPERSCR   AT LEVEL 003 AS OF 03/16/78
         TITLE 'S U P E R S C R *** DISK PACK/SYSCTLG CLEAN-UP UTILITY'
*-----------------------------------------------------------------*
* SUPERSCR IS A UTILITY PROGRAM WRITTEN TO PROVIDE SOME MANAGEMENT*
* IN DISK DATA SETS. THIS PROGRAM AFTER ASSEMBLED, IT MUST BE     *
* LINK-EDITED IN AN AUTHORIZED LIBRARY WITH AUTHORIZATION CODE 1. *
* CERTAIN DATA SETS ARE NOT AFFECTED BY THIS PROGRAM AS FOLLOWS:  *
*        A) SYS1.XXXXXXXX                                         *
*        B) SYSCTLG                                               *
*        C) DSNAMES FURNISHED IN THE SYSIN DD CARD AT EXECUTION   *
*        D) DSNAMES THAT FIT THE CONTROL CARD FORMAT IN THE       *
*           SYSUT1 DD CARD                                        *
* DATA SETS NOT NAMED IN THE ABOVE CONVENTION OR SOURCE WILL BE   *
* SCRATCHED AFTER THE FOLLOWING CONDITIONS:                       *
*        A) IF THE PACK VOLUME SERIAL WHERE THE DATA SET RESIDES  *
*           WAS INCLUDED IN THE PARM FIELD OF THE EXEC JCL CARD   *
*        B) IF SUPERSCR ALREADY IN A PREVIOUS RUN MARKED THE DATA *
*           SET FOR THE 8  HOUR COUNTDOWN PERIOD                  *
*        C) IF AFTER PASSING THE PREVIOUS TEST THE DATA SET IS    *
*           NOT BEEN USED FOLLOWING A ENQ                         *
*        D) IF A USER CODES THE VOLUME SERIAL NUMBER IN A DD CARD *
*           STARTING WITH "SUPERXXX"                              *
*                                                                 *
* CONTROL CARD FORMAT(S):                                         *
*        A) SYSIN DD CARD                                         *
*           COLUMNS 01-44    COMPLETE DATA SET NAME               *
*        B) SYSUT1 DD CARD                                        *
*           COLUMN  01       RECORD FORMAT INDICATOR              *
*                        N = FULL DATA SET NAME FOLLOWS           *
*                        P = PREFIX OR FIRST LEVEL DSN INDEX      *
*           COLUMNS 02-45    COMPLETE DATA SET NAME OR/           *
*                            DATA SET PREFIX                      *
*                                                                 *
* AUTHOR: UNKNOWN                                                 *
* MODIFIED, DOCUMENTED, AND APPLICATION OF GENERAL REGITERS EQUA- *
* TIONS, SYSTEM CONTROL MACROS, LISTINGS AND MESSAGES, CATALOG    *
* OPERATIONS: MAURICE SALINAS                                     *
*                                                                 *
* MOD  KEN TRUE  13 JUNE 79 - CHK FOR NON ZERO RETURN ON READJFCB,*
*        AND DCB NOT OPENED.                                      *
*                                                                 *
* MOD  B WILLIAMS 2 JUNE 81 - CHK FOR 8 HOUR HOLD BEFORE SCRATCH, *
*        CHANGE REPORTING TITLES AND MESSAGE CODES (NTL).         *
*                                                                 *
*-----------------------------------------------------------------*
         EJECT
SUPERSCR CSECT
         SAVE (14,12),,*              SAVE THE REGISTERS
         BALR  R12,0                  ESTABLISH ADDRESSABILITY
         USING *,R12                  TELL ASSEMBLER ABOUT R12
         USING *+4096,R11             ABOUT R11
         USING *+8192,R10             AND ABOUT R10
INITIAL  LM    R10,R11,SETREGS        LOAD MULTIPLE BASE REGS
         B     SAVE                   BRANCH
SETREGS  DC    A(INITIAL+8192)        THIRD BASE
         DC    A(INITIAL+4096)        SECOND BASE
SAVE     LA    R15,SAVEAREA           PICK UP OUR SAVE AREA
         ST    R13,4(R15)             CHAIN OLD SAVE-AREA
         ST    R15,8(R13)             CHAIN NEW SAVE-AREA
         LR    R13,R15                POINT R13 TO CURRENT
         L     R1,0(R1)               POINTER TO PARM
         LH    R3,0(R1)               LENGTH OF PARM
         SR    R5,R5                  CLEAR REGISTER 5
         LTR   R3,R3                  WAS THERE ANY PARM?
         BZ    NOPARM                 IF NO,THEN
         LA    R4,2(R1)               ADDRESS OF PARAMETER DATA
         GETMAIN R,LV=(3)             GET LIST AREA
         ST    R1,LIST                SAVE LIST ADDRESS
         ST    R3,PARMLEN             SAVE LIST LENGTH
         SR    R0,R0                  CLEAR R0
         LA    R2,7                   INSERT A SEVEN IN R2
         LA    R3,1(R3)               INCREMENT R3 BY 1
MOVEPARM MVC   0(6,R1),0(R4)          PICK A VOLUME SERIAL
         LA    R5,1(R5)               BUMP VOLUME COUNT
         LA    R1,6(R1)               BUMP LIST ADDR
         LA    R4,6(R4)               BUMP PARM-FIELD POINTER
         SR    R3,R2                  SUBTRACT 7 FROM R3
         LTR   R3,R3                  ARE WE STILL IN BUSSINESS?
         BZ    NOMORE                 NO
         CLI   0(R4),C','             DO WE HAVE A "," IN BETWEEN?
         BNE   NOPARM                 NO - THEN IT IS INVALID
         LA    R4,1(R4)               INDEX PASS THE COMMA
         B     MOVEPARM               KEEP PROCESSING THE PARM
NOPARM   MVI   PSWITCH,1              INDICATE PARM OMITTED.
         L     R3,PARMLEN             CONSTANT CORE SIZE
         GETMAIN R,LV=(3)             LETS BUY THE CORE
         ST    R1,LIST                STORE FOR LATER USE
         ST    R1,LISTP               SET POINTER FOR LATER USE
NOMORE   ST    R5,PARMNO              SAVE NUMBER OF VOLUMES
         OPEN  (DCBPRT,OUTPUT,LISTDCB,OUTPUT) PRINT FILES
         EJECT
         L     R3,CVTPTR           CVT POINTER
         USING CVTDSECT,R3         ADDRESS CVT
         L     R4,CVTTCBP          LAST AND CURRENT TCB ADDRESSES
         L     R4,4(R4)            POINTER TO OUR TCB
         L     R4,12(R4)           POINTER TO TIOT
         LA    R4,24(R4)           POINTER TO DD ENTRY IN TIOT
TIOTSRCH SR    R5,R5               CLEAR R5
         IC    R5,0(R4)            GET LENGTH OF CURRENT DD ENTRY
         LTR   R5,R5               ANY MORE DD ENTRIES?
         BZ    NOMOREDD            NO -
         ST    R5,R10SAV           SAVE INDEX DD COUNT
         LA    R5,4(R4)            DDNAME IN DD ENTRY
         CLI   PSWITCH,1           WAS PARM FIELD OMITTED?
         BNE   TSTOTHER            NO - IT WAS PRESENT
         CLC   0(5,R5),SUPERDD     ELSE,IS THIS AN SPECIAL DD CARD?
         BE    SETPARM             YES - LETS EXTRACT THE VOLUME
TSTOTHER CLC   0(8,R5),DEVDDNAM    IS DDNAME 'DEVICE'
         BE    DEVNAM              YES - GET UCB PNTR FOR THIS DD ENTRY
         CLC   0(8,R5),UT1DDNAM    IS DDNAME 'SYSUT1'
         BE    UT1NAM              YES - GET UCB PNTR FOR THIS DD ENTRY
         CLC   0(8,R5),LOGDDNAM    IS DDNAME 'STATLOG'
         BNE   NEXTNAME            NO - CHECK NEXT TIOT ENTRY
         OI    FLAGS,X'01'         YES - SET FLAG FOR PURGE RECORD
         OPEN  (DCBSTATL,OUTPUT)   OPEN LOG FILE
         B     NEXTNAME            KEEP PROCESSING
UT1NAM   OI    FLAGS,X'02'         SET FLAG FOR SYSUT1 PROTECTION
         B     NEXTNAME            KEEP PROCESSING
DEVNAM   LA    R5,18(R4)           ADDRESS OF UCB POINTER IN TIOT
         ST    R5,TIOTUCB          STORE IT FOR LATER USE
NEXTNAME L     R5,R10SAV           LOAD DD INDEX COUNT
         AR    R4,R5               BUMP TIOT POINTER
         B     TIOTSRCH            KEEP ON TRUCKING
SETPARM  STM   R5,R7,PARMSAVE      SAVE WORKING REGISTERS
         L     R6,LISTP            VOLUME LIST POINTER
         LH    R5,COUNTP           PICK UP VOLUME COUNT
         LH    R7,18(R4)           UCB ADDRESS IN CURRENT DD ENTRY
         USING UCBDSECT,R7         ADDRESS UCB FIELDS
         MVC   0(6,R6),UCBVOLI     MOVE VOLUME ID TO STORAGE
         DROP  R7                  FREE UP R7
         LA    R6,6(R6)            INCREMENT FOR NEXT ENTRY
         ST    R6,LISTP            SAVE FOR LATER
         LA    R5,1(R5)            INCREMENT VOLUME COUNT
         STH   R5,COUNTP           AND SAVE FOR LATER
         LM    R5,R7,PARMSAVE      RESTORE WORKING REGISTERS
         B     TSTOTHER            KEEP PROCESSING
NOMOREDD CLI   PSWITCH,1           WAS PARM FIELD OMITTED?
         BNE   GODOIT              YES.
         LH    R5,COUNTP           PICK UP VOLUME COUNT
         LTR   R5,R5               WAS THERE ANY SPECIAL DD CARDS?
         BNZ   SETFLDS             YES - WE FOUND THEM
         LA    R15,16              ELSE - SET BAD RETURN CODE
         STH   R15,RC              AND STORE IN RETURN CODE SAVE
         WTO   'IEH603I INVALID PARM VALUE',ROUTCDE=11
         B     ENDJOB              NOW - LETS EXIT OUT
SETFLDS  ST    R5,PARMNO           SET VOLUME COUNT IN CONSTANT
GODOIT   L     R4,CVTSYSAD         SYS-RES UCB
         USING UCBDSECT,R4         ADDRESS UCB
         TIME  DEC                 GET THE TIME
         SRL   R0,R4               REMOVE HUNDREDTHS
         ST    R0,DOUBLE+4         STORE R0
         OI    DOUBLE+7,X'0F'      SET THE SIGN PLUS
         SP    DOUBLE+4(4),TIME2   SUBTRACT LIMIT CONSTANT FOR SCRATCH
         BP    TODAY               IF POSITIVE THEN
         AP    DOUBLE+4(4),TIME3(4) ADD 24 HOURS
         UNPK  NTIME(7),DOUBLE+4(4) ELSE UNPACK IT
         OI    NTIME+6,X'F0'       SET A SIGN
         MVI   NTIME,C'T'          SET AN INDICATOR
         SR    R7,R7               CLEAR R7
         IC    R7,CVTDATE+1        GET YEAR
         LR    R6,R7               MOVE R7 TO R6
         SLA   R7,4                SHIFT ARUND
         LA    R7,15(R7)           POINT TO 15 PAST
         ST    R7,DOUBLE+4         STORE R7
         CVB   R7,DOUBLE           CONVERT TO BINARY
         ST    R7,YEARS            SAVE THE CONTENTS
         LH    R3,CVTDATE+2        GET DAY
         DROP  R3                  FREE UP R3
         ST    R3,DOUBLE+4         STORE R3
         CVB   R3,DOUBLE           CONVERT DAY TO BINARY
         BCTR  R3,0                DECREMENT BY ONE
         LTR   R3,R3               IS IT ZERO?
         BP    FULLYEAR            NO - IT IS NOT
         BCTR  R7,0                DECR YEARS
         ST    R7,YEARS            STORE THE YEARS
         LR    R6,R7               SAVE R7 INTO R6
         TM    YEARS+3,X'03'       LEAP YEAR
         BZ    LEAPYR              GO TO LEAP YEAR CODE
         A     R3,=F'365'          SET REGULAR YEAR TO 365 DAYS
         B     FULLYEAR            AND EXECUTE REGULAR CODE
TODAY    UNPK  NTIME(7),DOUBLE+4(4)
         OI    NTIME+6,X'F0'
         MVI   NTIME,C'T'
         ST    R1,TEMP
         MVC   DOUBLE+4(4),TEMP
         B     TODAY2
LEAPYR   A     R3,=F'366'
FULLYEAR ST    R3,DAYS
         CVD   R3,DOUBLE
         STC   R6,DOUBLE+5
TODAY2   UNPK  NEW(5),DOUBLE+5(3)
         OI    NEW+4,X'F0'
         MVC   EXPDAT(5),NEW          FINAL
         MVC   EXPDAT+5(6),NTIME+1    EXP DATE FOR COMPARE
*BUILD A TWO DAY EXPD FOR  PERM DS WITHOUT A TIME STAMP
         L     R3,CVTPTR               CVT POINTER
         USING CVTDSECT,R3             ADDRESS CVT
         MVC   DATSAV,CVTDATE         DATE IN PACKED DECIMAL
         DROP  R3                      FREE R3
         CLC   DATSAV+2(2),=X'001F'   IS DAY ONE
         BE    NEWYEAR
         CLC   DATSAV+2(2),=X'002F'     IS DAY TWO
         BE    NEWYEAR
         MVC   WORK+3(3),DATSAV+1
         SP    WORK+4(2),=X'002F'     SUBTRACT TWO
         OI    WORK+5,X'0F'
         UNPK  PDSXP(5),WORK+3(3)
         B     LBL2
NEWYEAR  MVO   DWORD,DATSAV+1(1)
         OI    DWORD+7,X'0F'
         CVB   R3,DWORD
         S     R3,=F'1'       SUBTRACT ONE FROM YEAR
         ST    R3,TEMP
         TM    TEMP+3,X'03'  IS IT LEAP YEAR
         BZ    LEAP2         YES
         CVD   R3,DWORD
         OI    DWORD+7,X'0F'
         UNPK  PDSXP-1(3),DWORD+7(2)  YEAR DONE
         CLC   DATSAV+2(2),=X'001F'   IS DAY 2
         BNE   LBL1          NO
         MVC   PDSXP+2(3),=C'365'
         B     LBL2
LBL1     MVC   PDSXP+2(3),=C'364'
         B     LBL2
LEAP2    DS    0H
         CVD   R3,DWORD
         OI    DWORD+7,X'0F'
         UNPK  PDSXP-1(3),DWORD+7(2)  YEAR DONE
         CLC   DATSAV+2(2),=X'001F'   IS DAY 2
         BNE   LBL3
         MVC   PDSXP+2(3),=C'366'
         B     LBL2
LBL3     MVC   PDSXP+2(3),=C'365'
*PDSXP NOW CONTAINS THE TWO DAY OLD EXP DATE FOR PERM DS THAT
*DO NOT YET HAVE A TIME STAMP
LBL2     MVC   IPLDEV(3),UCBNAME    IPL DEVICE NAME
         DROP  R4                   CLEAR R4
         L     R3,CVTPTR            CVT POINTER
         USING CVTDSECT,R3          ADDRESS CVT
         UNPK  YEAR(5),CVTDATE+1(3) UNPACK DATE YYDDD
         DROP  R3                   FREE UP R3
         OI    DAY+2,X'F0'          FIX SIGN
         MVC   DATE+25(3),DAY       FORMAT DAY
         MVC   DATE+29(2),YEAR      FORMAT YEAR
         EJECT
*        THIS  SECTION READS INPUT FROM EITHER OF TWO SOURCES -
*        (1)  SYSIN    DD  *
*        (2)  DATA SET NAMED ON SYSUT1 DD CARD
*
         LA    R7,CLIST             PROTCTD DATASET TABLE
         SR    R6,R6                CLEAR R6
         ST    R6,ECBGO             CLEAR ECB
         OPEN  (DCBSYSIN,INPUT)     OPEN SYSIN DATA
SYSIN    GET   DCBSYSIN,AREA        READ A CONTROL CARD
         BAL   R2,CHECKLIN          CHECK CARD IMAGE FORMAT
         B     SYSIN                KEEP READING
ENDSYSIN CLOSE DCBSYSIN             AT END CLOSE SYSIN DCB
         TM    FLAGS,X'02'          WAS SYSUT1 DD CARD SUPPLIED
         BZ    SETCOUNT             NO
         OPEN  (DCBSYSUT,INPUT)     OPEN SYSUT1 DCB
SYSUT1   GET   DCBSYSUT,AREA        READ A SYSUT1 RECORD
         BAL   2,CHECKLIN           CHECK CARD IMAGE FORMAT
         B     SYSUT1               KEEP READING
ENDSYSUT CLOSE DCBSYSUT             CLOSE SYSUT1 DCB
         B     SETCOUNT             START PROCESSING
         EJECT
*        THIS SUBROUTINE SCANS INPUT CARD IMAGES TO DETECT BLANK INPUT
*        OR INPUT THAT DOES NOT BEGIN IN CARD COLUMN ONE.  SUPERSCR
*        PROCESSING DOES NOT TERMINATE IF SUCH A CONDITION IS DETECTED.
CHECKLIN EQU   *
         SR    R5,R5                CLEAR R5
         LA    R3,80                SET CARD COLUMN COUNT
         LA    R4,AREA              CARD IMAGE AREA
CHKBLNK1 CLI   0(R4),C' '           IS THIS COLUMN BLANK?
         BNE   NOTBLNK              NO
         LA    R4,1(R4)             POINT TO NEXT COLUMN
         BCT   R3,CHKBLNK1          DO THIS UNTIL THE END-OF-CARD
         BR    R2                   ELSE RETURN AND SKIP THIS CARD
NOTBLNK  LR    R8,R4                SAVE AREA POINTER
CHKBLNK2 CLI   0(R4),C' '           IS THIS A BLANK?
         BE    QUITLOOK             IF YES - THEN QUIT
         LA    R5,1(R5)             INCREMENT COUNT BY ONE
         LA    R4,1(R4)             INCREMENT TO NEXT COLUMN
         BCT   R3,CHKBLNK2          DO UNTIL COLUMN 80
QUITLOOK LA    R9,45                ADDRESS COLUMN 45
         CR    R5,R9                ARE WE PASS COLUMN 45?
         BH    TOOMUCH              YES - THEN SKIP
MOVEIN   BCTR  R5,0                 DECREMENT R5 BY 1
         EX    R5,MOVEXX            EXECUTE THE SAVING
         LA    R6,1(R6)             INDICATE PR-DSN COUNT=+1
         LA    R7,45(R7)            UPDATE TABLE BY 45 BYTES
         BR    R2                   RETURN
TOOMUCH  LR    R5,R9                INSERT A 45 IN R5
         B     MOVEIN               AND START THE PROCESS
         EJECT
*        THIS SUBROUTINE SCANS UCB ADDRESS TABLE FOR DEVICES THAT ARE
*        DIRECT ACCESS AND ONLINE.  THE UCB ADDRESS TABLE IS PROCESSED
*        SERIALLY WITH THE CURRENT PNTR IN R 3.  RETURN IS AS FOLLOWS -
*        R 4 = PNTR TO NEXT AVAILABLE UCB
*        R 4 = ZERO IF NO MORE UCB'S ARE TO BE PROCESSED
*
DEVICE   STM   R3,R6,$UCBSAVE        STORE WORKING REGISTERS
         ST    R14,REG14SAV          SAVE RETURN ADDRESS
         L     R5,PARMNO             NUMBER OF VOLUMES IN PARM FIELD
         L     R6,LIST               PARM LIST POINTER
TSTVOL   CLI   0(R6),X'FF'           HAS THIS VOLUME BEEN PROCESSED?
         BNE   FINDUCB               NO - IT HASN'T
INDEXVOL LA    R6,6(R6)              ELSE, SKIP TO NEXT
         BCT   R5,TSTVOL             AND INDEX THRU VOLUME LIST
         LM    R3,R6,$UCBSAVE        RESTORE WORK REGISTERS
         SR    R4,R4                 INDICATE END OF JOB
         L     R14,REG14SAV          RESTORE R14 CONTENTS
         BR    R14                   AND RETURN TO CALLER
FINDUCB  L     R3,CVTPTR             CVT POINTER
         USING CVTDSECT,R3           ADDRESS CVT
         L     R3,CVTILK2            ADDRESS OF UCB LOOK-UP TABLE
         DROP  R3                    FREE UP R3
GETAUCB  LH    R4,0(R3)              PICK UP A UCB ADDRESS
         USING UCBDSECT,R4           ADDRESS UCB
         LTR   R4,R4                 IS THIS A GOOD UCB
         BM    BADVOL                IF THIS IS THE END- THEN
         BNZ   TESTUCB               ELSE THEN PROCESS IT
INDEXUCB LA    R3,2(R3)              OTHERWISE INDEX TO NEXT UCB
         B     GETAUCB               AND GO GET THE UCB
BADVOL   MVI   MESSTAB,C' '          INSERT A BLANK IN PRTLINE
         MVC   MESSTAB+1(132),MESSTAB AND SPREAD IT AROUND
         MVC   MESSTAB+1(30),MSG349  INSERT MESSAGE ID
         MVC   MESSTAB+32(6),0(R6)   INSERT VOLUME NOT FOUND
         BAL   R14,WRITE             GO WRITE THE MESSAGE
         MVI   0(R6),X'FF'           INDICATE ALREADY PROCESSED
         B     INDEXVOL              GO GET ANOTHER PACK
TESTUCB  TM    UCBSTAT,UCBONLI       IS THIS UCB ONLINE?
         BZ    INDEXUCB              NO - IT IS NOT
         CLI   UCBTBYT3,UCB3DACC     IS IT DIRECT ACCESS?
         BNE   INDEXUCB              IF NO - THEN BYPASS
VOLOK    CLC   UCBVOLI,0(R6)         IS THIS THE UCB WE WANT?
         BNE   INDEXUCB              NO - LETS GO FIND IT
         MVI   0(R6),X'FF'           ELSE NULL THIS VOLUME OUT
         ST    R4,MYSAV              SAVE REGISTER 4
         LM    R3,R6,$UCBSAVE        RESTORE THE REGISTERS
         L     R4,MYSAV              RESTORE UCB ADDRESS IN R4
AROUND   L     R9,TIOTUCB            TIOT UCB-ADDRESS  'DEVICE' DD CARD
         SR    R1,R1                 CLEAR R1
         L     R0,CODE               CODE WORD
         SVC   254                   ISSUE SVC 246
         ST    R1,OLDKEY             SAVE OLD PROTECT KEY
         STH   R4,0(R9)              INSERT CURRENT UCB IN TIOT
         LM    R0,R1,CODE            INSERT THE CODES
         SVC   254                   ISSUE THE SVC
         L     R14,REG14SAV          RESTORE REGISTER 14
         BR    R14                   RETURN
         DS    0F                    PROVIDE FULL-WORD ALIGMNT
CODE     DC    X'ABCFEDAD'
OLDKEY   DC    F'0'
PARMLEN  DC    F'100'
LIST     DC    F'0'
PARMSAVE DC    3F'0'
LISTP    DC    F'0'
RC       DC    H'0'
COUNTP   DC    H'0'
PARMNO   DC    F'0'
MYSAV    DC    2F'0'
R10SAV   DC    F'0'
REG14SAV DC    F'0'
$UCBSAVE DS    4F
         EJECT
*        THIS SECTION CHECKS TO SEE IF THERE IS INPUT TO SUPERSCR
*        SPECIFYING DSNAME PROTECTION.  IF NO SUCH INPUT EXISTS THE
*        OPERATOR IS NOTIFIED.  THE OPERATOR MUST REPLY 'U' IN ORDER
*        TO CONTINUE THE JOB.
SETCOUNT ST    R6,COUNTSET        NUMBER OF DSNAMES PROTECTED
         LTR   R6,R6              ARE ANY DSNAMES PROTECTED
         BNZ   RESUME             YES
         WTOR  'SUPERSCR - NO DATASETS PROTECTED, EXCEPT SYS1.XXX',    X
               GOORNOGO,1,ECBGO,ROUTCDE=(1,9,11),DESC=2
WELLRPLY WAIT  1,ECB=ECBGO        WAIT FOR OPERATOR REPLY
         XC    ECBGO(4),ECBGO     CLEAR ECB
         CLI   GOORNOGO,C'U'      DID OPERATOR REPLY 'U'?
         BE    RESUME             THEN LETS DO OUR THING
         CLI   GOORNOGO,C'C'      ELSE, DOES WE WANT TO CANCEL?
         BE    XCEPTION           YES - HE HAS CHICKEN-OUT
         WTOR  'SUPERSCR - REPLY U TO CONTINUE, C TO CANCEL',          X
               GOORNOGO,1,ECBGO,ROUTCDE=(1,9,11),DESC=2
         B     WELLRPLY           LETS CHECK IT AGAIN
         EJECT
*        THIS SECTION READS VTOC AND DETERMINES DATA SETS TO BE
*        SCRATCHED.  DSNAMES BEGINNING WITH 'SYS1.' AND 'SYSCTLG'
*        ARE PROTECTED.
*
RESUME   MVI   AREA,C' '              BLANK
         MVC   AREA+1(79),AREA        CLEAR AREA
         MVC   AREA+46(32),DATE       MOVE IN DATE
RESUME1  BAL   R14,DEVICE             GET NEXT DEVICE FOR PURGING
         ST    R4,POINTER             UCB ADDRESS FOR RESERVE
         LTR   R4,R4                  CHECK FOR END OF DEVICES
         BZ    ENDJOB                 AT END - TERMINATE
         USING UCBDSECT,R4            ADDRESS UCB
         MVC   VOLIST+2(4),UCBTYP     GET DEVICE TYPE
         RDJFCB (DCB)                 MODIFY THE JFCB
         LTR   R15,R15                CHECK THE RETURN CODE     KMT
         BZ    DOOPN                  OOPS...POST RETURN CODE   KMT
         CVD   R15,DWORD                                        KMT
         UNPK  E1CODE(2),DWORD        INSERT RC IN MESSAGE      KMT
         OI    E1CODE+1,X'F0'                                   KMT
         MVC   E1VOL,UCBVOLI          MOVE IN VOLSER            KMT
         WTO   MF=(E,E1MSG)                                     KMT
         LA    R15,20                 SET RETURN CODE           KMT
         STH   R15,RC                    TO INDICATE TROUBLE    KMT
         B     TEMPNOK                SKIP OVER THIS VOLUME     KMT
DOOPN    MVI   JF,X'04'               VTOC DSNAME
         MVC   JF+1(43),JF            SPREAD ACROSS THE DSNAME
         MVC   JF+118(6),UCBVOLI      MOVE IN VOLUME SERIAL
         OPEN  (DCB,UPDAT),TYPE=J     OPEN THE VTOC
         TM    DCB+48,X'10'           DID IT OPEN?              KMT
         BNZ   VOLUME                 YEP..GO DO IT..           KMT
         MVC   E2VOL,UCBVOLI          MOVE IN VOLSER            KMT
         WTO   MF=(E,E2MSG)           POST MESSAGE              KMT
         LA    R15,24                 SET RETURN CODE           KMT
         STH   R15,RC                    TO INDICATE TROUBLE    KMT
         B     TEMPNOK                SKIP OVER THIS VOLUME     KMT
         DROP  R4                     FREE UP R4
VOLUME   SR    R4,R4                  CLEAR REGISTER 4
         LA    R5,TABLE               BUILD PURGE FILE LIST
         MVC   RNAME,JFCB+118         VOLSER FOR ENQ
         RESERVE (QNAME,RNAME,E,6,SYSTEM),UCB=POINTER
         LTR   R15,R15                WELL- CAN WE DO OUR STUFF?
         BZ    READ                   YES- WE SURE CAN
         WTO   'SUPERSCR - BAD RETURN FROM RESERVE',ROUTCDE=11
         ABEND  98,DUMP               AND BLOW UP
*        SEARCH VTOC FOR FIRST FORMAT 0 OR LAST F0RMAT1 DSCB
READ     READ  DECB,SF,DCB,DATAAREA,MF=E   READ THE VTOC
         CHECK DECB                   WAIT FOR READ TO COMPLETE
         CLI   FORMAT,X'F1'           IS IT A FORMAT 1 DSCB?
         BE    FORMAT1A               YES
         CLI   FORMAT,X'00'           ELSE - IS IT A FORMAT 0?
         BNE   NEXTZ                  NO
         CLI   FMT0IND,1              Q/ DO WE WANT FORMAT 0
         BE    NEXTZ                  NO, GET NEXT DSCB
         MVC   FILEADDR,DCBVTOC+8     YES, SAVE FILE ADDRESS OF DSCB
         MVI   FMT0IND,1              SET INHIBIT FORMAT 0 INDICATOR
NEXTZ    CLI   FORMAT,X'F4'           CHECK FOR FORMAT 4 DSCB
         BNE   READ                   THEN KEEP READING
FORMAT4A MVC   TRKCYL(2),DATAAREA+64  MOVE IN TRACKS PER CYLINDER
         B     READ                   AND KEEP READING
FORMAT1A MVI   FMT0IND,1              SET INHIBIT FORMAT 0 INDICATOR
         MVC   FILEADDR,DCBVTOC+8     SAVE ADDRESS OF FORMAT 1 DSCB
         CLC   DATAAREA(5),SYS1       IS DATA SET SYS1?.
         BE    SKIPDSN                YES - BEAT IT
         CLC   DATAAREA(7),SYSCTLG    HOW ABOUT THE CATALOG
         BE    SKIPDSN                NO ACTION HERE
FIXIT    L     R7,COUNTSET            NUMBER OF DSNAMES PROTECTED
         LTR   R7,R7                  ARE ANY PROTECTED
         BZ    FILLIN                 NONE
         L     R6,CLISTAD         CONTROL CARD LIST ADDRESS
CYCLE    CLI   0(R6),C'C'         CLEAR ALL DATASETS
         BE    TEMPCHK            BR IF YES
         CLI   0(R6),C'I'         IPL CLEAN TEMP DATASETS ONLY
         BE    TEMPCHK            BR IF YES
         CLI   0(R6),C'P'         IS IT A PREFIX
         BNE   CYCLE2             ELSE CHECK OTHER FORMAT
         CLC   DATAAREA(4),1(R6)  CHECK PREFIX ONLY
         BE    SKIPDSN            ELSE SKIP IT
         B     MORE               DO SOME MORE CHECKING
CYCLE2   CLC   DATAAREA(44),1(6)  CHECK WHOLE NAME
         BE    SKIPDSN            ELSE SKIP IT
MORE     LA    R6,45(R6)          UPDATE TO NEXT CONTROL CARD DSN
         BCT   R7,CYCLE           AND LOOP THRU THEM
         CLC   FORMAT+61(10),=XL10'00' IS THIS A MODEL DSCB?
         BE    SKIPDSN            YES - LETS BYPASS IT
         CLC   DATAAREA+8(2),=C'.T'
         BNE   PERMDS             NOT TEMPORARY
         CLC   DATAAREA+16(3),=C'.RF'
         BNE   PERMDS             NOT TEMPORARY
         CLC   DATAAREA+24(6),=C'.SWADS'
         BE    SKIPDSN            SKIP SWADS
         MVC   DSDATE(5),DATAAREA+3   COMBINE DATE
         MVC   DSDATE+5(6),DATAAREA+10  AND TIME FOR COMPARE
         CLC   EXPDAT(11),DSDATE  IS DATASET TIME EXPIRED?
         BL    SKIPDSN            NO
         B     FILLIN             SCRATCH TEMP DS
TEMPCHK  L     1,POINTER          UCB ADRS
         TM    3(R1),X'50'        CHANGING STATUS
         BZ    TEMPOK             BR IF NO
TEMPNOK  TM    DCB+48,X'10'           DID IT OPEN?              KMT
         BNZ   RESUME1                SKIP OVER THIS VOLUME     KMT
         CLOSE DCB                NXT VOLUME
         B     RESUME1            KEEP PROCESSING
         SPACE 2
TEMPOK   CLC   28(4,R1),=C'WORK'  WORK VOLUME
         BNE   TEMPNOK            SKIP
         CLI   0(R6),C'C'         CLEAR PACKS
         BE    FILLIN             BR YES
*        TEMPORARY DATASET CHECK
         CLC   FORMAT+61(10),=XL10'0'  MODEL DSCB
         BE    SKIPDSN            SKIP
         CLC   DATAAREA(3),=C'SYS'  SYS TYPE DATASET
         BNE   SKIPDSN            SKIP
         CLC   DATAAREA+8(2),=C'.T'
         BNE   SKIPDSN            SKIP
         CLC   DATAAREA+16(3),=C'.SV'  SYSOUT DS
         BE    SKIPDSN            SKIP
         CLC   DATAAREA+16(3),=C'.RF'
         BNE   SKIPDSN            SKIP
         B     FILLIN             GO SCRATCH
PERMDS   CLC   DATAAREA+75(1),=X'FF'  IS TIME STORED IN DSCB?
         BE    CHECKRET           YES, GO CHECK IT
*IF  DS DOES NOT HAVE A TIME STAMP USE THE TWO DAY OLD EXP DATE
         MVC   TEMP,=XL4'00'
         MVC   TEMP+2(2),DATAAREA+54  DAT
         L     R0,TEMP
         CVD   R0,DWORD
         OI    DWORD+7,X'0F'
         UNPK  WORK+2(3),DWORD+6(2)
         MVC   TEMP,=XL4'00'
         MVC   TEMP+3(1),DATAAREA+53   YEAR
         L     R0,TEMP
         CVD   R0,DWORD
         OI    DWORD+7,X'0F'
         UNPK  WORK-1(3),DWORD+6(2)
*WORK NOW CONTAINS YYDDD CREATION DATE
         CLC   PDSXP,WORK    IS DS TWO DAYS OLD
         BL    ADDTIME
         B     FILLIN        YES  SCRATCH
ADDTIME  TIME  DEC
         SRL   R0,4           REMOVE TH
         ST    R0,TEMP
         OI    TEMP+3,X'0F'
         MVC   DATAAREA+76(4),TEMP    TIME TO DSCB
         MVC   DATAAREA+75(1),=X'FF'   FLAG AS POSTED
         L     R1,CVTPTR            CVT POINTER
         USING CVTDSECT,R1          ADDRESS CVT
         LH    R1,CVTDATE+2         GET PACKED DATA
         DROP  R1                   FREE UP R1
         XC    DOUBLE(8),DOUBLE     ZERO OUT
         ST    R1,DOUBLE+4          STORE IT
         CVB   R1,DOUBLE            CONVERT TO BINARY
         ST    R1,TEMP              STORE FOR MOVE
         MVC   DATAAREA+54(2),TEMP+2 MOVE TO DSCB
         L     R1,CVTPTR            DO THE SAME FOR THE YEAR
         USING CVTDSECT,R1          ADDRESS CVT
         LH    R1,CVTDATE           GET THE YEAR PORTION
         DROP  R1                   FREE UP R1
         SLA   R1,4
         LA    R1,15(R1)
         ST    R1,DOUBLE+4
         CVB   R1,DOUBLE
         ST    R1,TEMP
         MVC   DATAAREA+53(1),TEMP+3
         WRITE DECB,SF,DCBVTOC,DATAAREA,MF=E
         CHECK DECB
         B     SKIPDSN
CHECKRET TM    DATAAREA+78,X'0F'   SEE IF OPENED SINCE?
         BO    PERMDS+10    YES- USE CREATION DATE
         MVC   TEMP(4),DATAAREA+76    TIME FROM DSCB
         UNPK  WORK+4(7),TEMP(4)
         OI    WORK+10,X'F0'
         MVC   TEMP,=XL4'00'
         MVC   TEMP+2(2),DATAAREA+54  DAY OF YEAR
         L     R0,TEMP
         CVD   R0,DWORD
         OI    DWORD+7,X'0F'
         UNPK  WORK+2(3),DWORD+6(2) CREATION DAY
         MVC   TEMP,=XL4'00'
         MVC   TEMP+3(1),DATAAREA+53 YEAR  BINARY  YY
         L     R0,TEMP
         CVD   R0,DWORD
         OI    DWORD+7,X'0F'
         UNPK  WORK-1(3),DWORD+6(2) YEAR
*        WORK NOW CONTAINS YYDDDHHMMSS CREATION DATE
         CLC   EXPDAT(11),WORK      IS DSN TIME EXPIRED?
         BL    SKIPDSN              NO
FILLIN   MVI   SCRSW,1              TURN SCRATCH SWITH ON
         BAL   R14,LISTVTOC         LIST THE DATASET
         MVI   SCRSW,0              TURN SWITH OFF
         MVC   0(140,R5),DATAAREA    MOVE IN NAME OF DS TO DELETE
         LA    R5,140(R5)           INCREMENT TO NEXT
         LA    R4,1(R4) COUNT OF DSNAMES IN 'TABLE' FOR CURRENT VOLUME
         LA    R3,SIZESCR MAX NUM DATA SETS CAN BE SCRATCHED AT A TIME
         CR    R4,R3                CHECK FOR LIMIT REACHED
         BL    READ                 NOT REACHED
         BAL   R14,SCRATCH          LIMIT REACHED, SCRATCH MAX NUMBER
         B     VOLUME FINISH VOLUME
SKIPDSN  LA    R14,READ             SET REURN ADDRESS
         B     LISTVTOC             GO LIST THE DATASET
POINTER  DS    F
NTIME    DC    CL7' '
         DS    0F
CLISTAD  DC    A(CLIST)
TIME2    DC    X'0080000F'
TIME3    DC    X'0240000F'
EXPDAT   DS    3D
DSDATE   DS    3D
TEMP     DS    F
DUMMY    DS    D             THIS MUST PRECEED WORK
WORK     DS    2D
DWORD    DS    D
DATSAV   DS    F
         DC    CL1' '        FILL--MUST STAY IN FRONT OF PDSXP
PDSXP    DC    CL5' '
         WRITE DECB,SF,DCBVTOC,DATAAREA,MF=L
NOTESAV  DS    F
         LTORG
         EJECT
*        DIRECT ACCESS DEVICES CLOSE ISSUED HERE
EOV      EQU   *                         END OF EACH VOLUME
CLOSE1   CLOSE DCB                       CLOSE THE VTOC
         BAL   R14,SCRATCH               GO DO LEFT OVER SCRATCH
         L     R0,POINTER                CURRENT UCB POINTER
         LA    R1,AREA                   SVC 78 WORK AREA ADDRESS
         SVC   78                        FIND THE SPACE
         LTR   R15,R15                   DID IT WORKED?
         BZ    DSPACE                    YES- LETS PRINT IT
         MVI   MESSTAB,C' '              ELSE INSERT A BLANK IN PRTLINE
         MVC   MESSTAB+1(132),MESSTAB    AND SPREAD IT AROUND
         MVC   MESSTAB+1(34),NTL902      INSERT MESSAGE ID
         MVC   MESSTAB+36(6),JF+118      INSERT VOLUME SERIAL NUMBER
         B     SEPMSG                    GO PRINT THE MESSAGE
DSPACE   MVI   MESSTAB,C' '              INSERT A BLANK
         MVC   MESSTAB+1(132),MESSTAB    AND SPREAD IT ACCROSS
         MVC   MESSTAB(80),LISTLS        INSERT CONSTANTS
         MVC   MESSTAB+9(6),JF+118       VOLUME SERIAL NUMBER
         MVC   MESSTAB+24(4),AREA+16     FREE EXTENTS
         MVC   MESSTAB+34(4),AREA+6      FREE CYLINDERS
         MVC   MESSTAB+44(4),AREA+11     FREE TRACKS
         MVC   MESSTAB+56(4),AREA+21     CONTIG FREE CYLINDERS
         MVC   MESSTAB+68(4),AREA+26     CONTIG FREE TRACKS
SEPMSG   BAL   R14,WRITE                 WRITE FREE SPACE INFO
         LA    R14,RESUME1               PROCESSING ADDRESS
         ST    R14,RECSAVE               SAVE RETURN ADDRESS
         B     PRTLSV                    KEEP PROCESSING
         EJECT
*        THIS SUBROUTINE ISSUES THE SCRATCH SVC AND THEN ISSUES
*        A BAL 14,GETTRKS TO CALCULATE THE NUMBER OF TRACKS FREED
*        BY SCRATCHING ACTION.
*        GENERAL REGISTERS ARE SET AS FOLLOWS -
*        R 2 = USED BY GETTRKS
*        R 3 = USED BY GETTRKS
*        R 4 = NUMBER OF DATA SETS TO BE SCRATCHED FROM VOLUME
*        R 5 = ADDR OF DSNAME OF DATA SET TO BE SCRATCHED
*        R 6 = USED BY GETTRKS
*        R 7 = USED BY GETTRKS
*
SCRATCH  EQU   *
         ST    R14,SCRSAVE           SAVE RETURN ADDRESS
         DEQ   (QNAME,RNAME,6,SYSTEMS),RET=HAVE  DEQ VTOC DATA SET
         LTR   R4,R4                 NUMBER OF DATA SETS TO BE PURGED
         BZ    0(R14)                NONE
         LA    R5,TABLE              DSNAMES TO BE SCRATCHED
         MVC   VOLIST+6(6),JF+118    MOVE IN VOLUME SERIAL
AGAIN    MVC   DATAAREA(140),0(R5)   PICK UP CURRENT DSNAME
         LA    R5,140(R5)            NEXT POINTER
         SR    R0,R0                 CLEAR R0 FOR SCRATCH SVC
         MVC   MESSTAB+1(132),MESSTAB CLEAR MESSAGE AREA
         SCRATCH CAM                 SCRATCH THE DATA SET
         LTR   15,15                 TEST RETURN CODE
         BZ    PUTMSG                IF OK, THEN BRANCH
         MVC   MESSTAB+1(90),LIST2   SET IEF283I ERROR MESSAGE
         MVC   MESSTAB+9(44),DATAAREA SET DATA SET NAME
         MVC   MESSTAB+76(6),JF+118  SET VOLUME ID
         SR    R15,R15               CLEAR R15
         IC    R15,STCODE+1          PICK UP REASON CODE
         CVD   R15,DOUBLE            PICK UP REASON CODE
         UNPK  MESSTAB+83(1),DOUBLE  UNPACK INTO PRINT-LINE
         OI    MESSTAB+83,X'F0'      SET A GOOD SIGN
         BAL   R14,WRITE             WRITE THE MESSAGE
         B     LABEL                 KEEP ON TRUCKING
PUTMSG   TM    FLAGS,X'01'           ARE WE LOGGING THIS RECORD?
         BZ    SETAMSG               NO- WE ARE NOT
         BAL   R14,RECORD            ELSE - LET'S DO IT
SETAMSG  MVC   MESSTAB+1(110),LIST1  SET MESSAGE CONSTANT
         MVC   MESSTAB+9(44),DATAAREA PICK UP DATA SET NAME
         LOCATE LOC                  IS THIS A CATALOGUED DATA SET?
         LTR   R15,R15               WELL- IS IT OR NOT?
         BNZ   WRITEMSG              NO IT IS NOT.
         CLC   VOLSER(6),CBLOCK+6    CATLGD IN THE SAME VOLUME?
         BNE   WRITEMSG              NO.
         CATALOG RID                 ELSE - LETS UNCATALOG IT.
         LTR   R15,R15               WELL-WHAT HAPPENED?
         BZ    SETUNCAT              IF NOW UNCATLGED- THEN
         MVC   MESSTAB+62(7),IEH012I SET ERROR MESSAGE
         B     WRITEMSG              GO WRITE THE MESSAGE
SETUNCAT MVC   MESSTAB+62(12),UNCATMSG SET UNCAT MESSAGE
WRITEMSG LA    R6,DATAAREA+107       POINTER TO DSCB EXTENTS
         BAL   R14,GETTRKS           FIGURE OUT DSN SPACE
         CVD   R3,DOUBLE1            CONVERT TO HUMAN
         UNPK  TRACKS(4),DOUBLE1+6(2) MAKE IT READABLE
         OI    TRACKS+3,X'F0'        FIX THE SIGN
         MVC   MESSTAB+76(4),TRACKS  INSERT IN MESSAGE
         MVC   MESSTAB+101(6),JF+118 INSERT VOLUME SERIAL
         BAL   R14,WRITE             WRITE THE STATUS MESSAGE
LABEL    BCT   R4,AGAIN              LET'S DO THE NEXT DSN
         L     R14,SCRSAVE           RESTORE THE RETURN ADDRESS
         BR    R14                   EXIT OUT
         EJECT
*        THIS SUBROUTINE RECORDS IN SYS1.STATLOG THE
*        (1) DSNAME OF DATA SET SCRATCHED
*        (2) VOLUME SERIAL NUMBER INVOLVED
*        (3) DATE ACTION TAKEN
*        THE STATISTICAL INFORMATION CAN BE RETRIEVED THROUGH THE
*        USE OF DATA SET UTILITY 'IEBPTPCH'
RECORD   ST    R14,RECSAVE           SAVE RETURN
         MVC   AREA(44),DATAAREA     INSERT THE DSNAME
         MVC   AREA+61(6),JF+118     INSERT THE VOLUME SERIAL
         PUT   DCBSTATL,AREA         WRITE LOG RECORD
         L     R14,RECSAVE           RESTORE RETURN
         BR    R14                   EXIT OUT
         EJECT
*        THIS SUBROUTINE WILL CALCULATE TOTAL TRACKS ALLOCATED TO A
*        DATA SET.
GETTRKS  EQU   *
         MVC   CCA(8),0(R6)        PICK-UP CCHHCCHH PORTION
         LH    R3,CCA              LOAD BEGIN CYLINDER
         MH    R3,TRKCYL           MULTIPLY BY NUMBER OF TRACKS
         AH    R3,HHA              ADD HH PORTION
         STH   R3,TRKSA            SAVE BEGIN ADDRESS
         LH    R3,CCB              LOAD END CYLINDER
         MH    R3,TRKCYL           MULTIPLY BY NUMBER OF TRACKS
         AH    R3,HHB              ADD HH PORTION
         SH    R3,TRKSA            SUBTRACT BEGINNING AREA
         LA    R3,1(R3)            INCREMENT BY ONE
         STH   R3,PRIMARY          STORE IT
         CLI   8(R6),X'00'         EMPTY EXTENT DESCRIPTION
         BE    0(R14)              RETURN - SPACE NOW IN REG3
         LA    R6,10(R6)           2ND EXTENT DESCRIPTION
         MVC   CCA(8),0(R6)        PICK-UP CCHHCCHH PORTION
         LH    R3,CCA              LOAD BEGIN CYLINDER
         MH    R3,TRKCYL           MULTIPLY BY NUMBER OF TRACKS
         AH    R3,HHA              ADD HH PORTION
         STH   R3,TRKSA            SAVE BEGIN ADDRESS
         LH    R3,CCB              LOAD END CYLINDER
         MH    R3,TRKCYL           MULTIPLY BY NUMBER OF TRACKS
         AH    R3,HHB              ADD HH PORTION
         SH    R3,TRKSA            SUBTRACT BEGIN AREA
         LA    R3,1(R3)            INCREMENT BY ONE
         STH   R3,SECONDRY         STORE IT
         SR    R2,R2               CLEAR R2 FOR MULTIPLY
         SR    R7,R7               CLEAR REG 7
         IC    R7,DATAAREA+59      PICK UP NUMBER OF EXTENTS
         BCTR  R7,0                DECREMENT BY ONE
         MR    R2,R7               MULTIPLY 2ND-EXT BY EXTENTS-1
         AH    R3,PRIMARY          ADD FIRST EXTENT TO TOTAL
         BR    R14                 EXIT OUT
         EJECT
*        MESSAGE ISSUED HERE TO INDICATE THAT JOB WAS NOT COMPLETED
*        BECAUSE NO DATA SETS WERE PROTECTED AND OPERATOR DID NOT
*        REPLY 'U'.
XCEPTION MVI   MESSTAB,C' '
         MVC   MESSTAB+1(132),MESSTAB
         MVC   MESSTAB+1(24),LIST6
         BAL   R14,WRITE
         MVC   MESSTAB+1(78),LIST7
         BAL   R14,WRITE                 GO PRINT IT
         LH    R15,12                    SET BAD RETURN CODE
         STH   R15,RC                    SAVE FOR LATER
         B     ENDJOB                    EXIT OUT
         EJECT
*        THIS ROUTINE PROVIDES FOR STATISTICAL INFORMATION ABOUT
*        THE DATA SETS BEEN LOOKED TO IN EACH DISK PACK
LISTVTOC ST    R14,RECSAVE               SAVE RETURN ADDRESS
         MVI   MESSTAB,C' '              PUT A BLANK IN PRTLINE
         MVC   MESSTAB+1(132),MESSTAB    CLEAR PRINT AREA
         MVC   MESSTAB+1(44),DATAAREA    DATA SET NAME
         SR    R6,R6                     CLEAR REGISTER 6
         IC    R6,DATAAREA+53            CREATION YEAR
         CVD   R6,DOUBLE1                CONVERT TO DECIMAL
         UNPK  MESSTAB+46(2),DOUBLE1+6(2) UNPACK IN PRINT LINE
         OI    MESSTAB+47,X'F0'          FIX THE SIGN
         MVC   FULLONE+2(2),DATAAREA+54  CREATION DATE
         LH    R6,FULLONE+2              LOAD CREATION DATE
         CVD   R6,DOUBLE1                COVERT TO DECIMAL
         UNPK  MESSTAB+48(3),DOUBLE1+6(2) SET IN PRINT LINE
         OI    MESSTAB+50,X'F0'          AND FIX THE SIGN
         SR    R6,R6                     CLEAR R6 AGAIN
         IC    R6,DATAAREA+56            EXPIRATION DATE YEAR
         CVD   R6,DOUBLE1                CONVERT TO DECIMAL
         UNPK  MESSTAB+52(2),DOUBLE1+6(2) SET IN PRINT LINE
         OI    MESSTAB+53,X'F0'          AND MAKE IT PRINTABLE
         LH    R6,DATAAREA+57            DAY PORTION OF EXPDT
         CVD   R6,DOUBLE1                CONVERT TO DECIMAL
         UNPK  MESSTAB+54(3),DOUBLE1+6(2) SET IN PRINT LINE
         OI    MESSTAB+56,X'F0'          FIX THE SIGN
         TM    DATAAREA+82,X'80'         ISAM DATASET?
         BO    ISAM                      YES
         TM    DATAAREA+82,X'40'         SEQUENTIAL DATA SET?
         BO    SEQ                       YES
         TM    DATAAREA+82,X'20'         DIRECT ACCESS?
         BO    DIRECT                    YES
         B     SETEXTNT                  ELSE - GOD KNOWS
PART     MVC   MESSTAB+58(10),PARTACC    SET AS PARTIONED
         B     SETEXTNT                  FIND THE EXTENTS
ISAM     MVC   MESSTAB+58(10),ISAMACC    SET AS ISAM
         B     SETEXTNT                  FIND THE EXTENTS
SEQ      MVC   MESSTAB+58(10),SEQACC     SET SEQUENTIAL
         B     SETEXTNT                  FIND THE EXTENTS
DIRECT   MVC   MESSTAB+58(10),DIRACC     SET AS DIRECT ACCESS
SETEXTNT SR    R6,R6                     CLEAR REGISTER 6
         IC    R6,DATAAREA+59            PICK UP THE EXTENTS
         CVD   R6,DOUBLE1                CONVERT TO DECIMALS
         UNPK  MESSTAB+69(2),DOUBLE1+7(1) SET IN PRINT LINE
         OI    MESSTAB+70,X'F0'          FIX THE SIGN
         LA    R6,DATAAREA+107           EXTENT POINTER
         BAL   R14,GETTRKS               FIND DSN SPACE
         CVD   R3,DOUBLE1                CONVERT TO DECIMAL
         UNPK  TRACKS(4),DOUBLE1+6(2)    UNPACK IT
         OI    TRACKS+3,X'F0'            FIX THE SIGN
         MVC   MESSTAB+73(4),TRACKS      MOVE TO PRINT LINE
         MVC   MESSTAB+78(6),JF+118      VOLUME SERIAL
         CLI   SCRSW,1                   IS THE SCRATCH SWITCH ON
         BNE   PRTLSV                    NO
         MVI   MESSTAB+85,C'S'           ELSE INDICATE SCRATCH DSN
PRTLSV   MVI   TITLE,C'1'                ASA CHARACTER
         PRINTX LISTDCB,(TITLE,LSTITLE),MESSTAB,55
         L     R14,RECSAVE               LOAD RETURN ADDRESS
         BR    R14                       EXIT OUT
         EJECT
*
*        THIS SUBROUTINE HANDLES ALL SYSPRINT OUTPUT FOR SUPERSCR
*
WRITE    EQU   *
         ST    R14,WRITESAV              SAVE RETURN ADDRESS
         MVI   TITLE,C'1'                ASA CONTROL CHARACTER
         PRINTX DCBPRT,(TITLE,SUBTITLE),MESSTAB,55
LVWRITE  L     R14,WRITESAV              LOAD RETURN ADDRESS
         BR    R14                       RETURN
         EJECT
ENDJOB   MVC   MESSTAB+1(132),MESSTAB
         MVC   MESSTAB(80),LISTEND    INDICATE TERMINATION MESSAGE
         BAL   R14,WRITE              WRITE THE MESSAGE
         PUT   LISTDCB,MESSTAB        WRITE END MESSAGE
         CLOSE (DCBPRT,,LISTDCB,,DCBSTATL) CLOSE WORK FILES.
LEAVE    L     R13,SAVEAREA+4         RESTORE SAVE AREA
         L     R5,LIST                LOAD LIST ADDRESS
         L     R6,PARMLEN             LOAD LENGTH
         FREEMAIN R,A=(5),LV=(6)
         LH    R15,RC              INSERT RETURN CODE
         RETURN (14,12),RC=(15)    EXIT WITH GOOD RETURN
         EJECT
DCB      DCB   DDNAME=DEVICE,DSORG=PS,MACRF=(RP,W),DEVD=DA,KEYLEN=44,  X
               LRECL=96,BLKSIZE=96,RECFM=FS,EODAD=CLOSE1,EXLST=JOBFILE
DCBVTOC  EQU   DCB
DCBPRT   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,  C
               BLKSIZE=1330
LISTDCB  DCB   DDNAME=LISTVTOC,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,  X
               BLKSIZE=1330
DCBSYSIN DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,EODAD=ENDSYSIN
DCBSYSUT DCB   DSORG=PS,MACRF=GM,DDNAME=SYSUT1,EODAD=ENDSYSUT
DCBSTATL DCB   DDNAME=STATLOG,DSORG=PS,MACRF=PM
         EJECT
CBLOCK   DC    34D'0'
DOUBLE1  DC    D'0'
DOUBLE   DC    D'0'
YEARS    DC    F'0'
DAYS     DC    F'0'
NEWER    DC    F'0'
SYS      DC    C'SYS'
NEW      DC    C'99999'
         DC    C'.T'
QNAME    DC    CL8'SYSVTOC'
IEH012I  DC    CL7'IEH012I'
UNCATMSG DC    CL12'UNCATALOGED'
RNAME    DS    CL6
FMT0IND  DC    X'00'
FILEADDR DS    CL5
MOVEXX   MVC   0(*-*,R7),0(R8)
CAM      CAMLST SCRATCH,DATAAREA,,VOLIST,,OVRD
LOC      CAMLST NAME,DATAAREA,,CBLOCK
RID      CAMLST UNCAT,DATAAREA
SAVEAREA DS    18F
TRACKS   DC    F'0'
FULLZERO DC    F'0'
TIOTUCB  DC    F'0'
FULLONE  DC    F'0'
COUNTSET DC    F'0'
SCRSAVE  DC    F'0'
WRITESAV DC    F'0'
RECSAVE  DC    F'0'
PAGENUM  DC    F'0'
LINENUM  DC    F'0'
EOVBRCH  DC    F'0'
TOTTRK   DC    F'0'
TOTCYL   DC    F'0'
ECBGO    DC    F'0'
TRKCYL   DC    H'0'
PRIMARY  DC    H'0'
SECONDRY DC    H'0'
CCA      DC    H'0'
HHA      DC    H'0'
CCB      DC    H'0'
HHB      DC    H'0'
BLKDSCB  DC    H'0'
TRKSA    DC    H'0'
HALF     DC    H'0'
JOBFILE  DC    X'87'
JFCBPTR  DC    AL3(JF)
JFCB     DS    0C
JF       DS    44F
SYS2     DC    C'SYS2.'
AREA     DC    CL80'  '
DSCBAREA DS    0C
DATAAREA DC    CL44' '
FORMAT   DC    CL96' '
MEMBER   DC    CL8'SAVE    '
SYS1     DC    CL8'SYS1.'
SYSCTLG  DC    CL8'SYSCTLG'
DEVDDNAM DC    CL8'DEVICE  '
UT1DDNAM DC    CL8'SYSUT1'
LOGDDNAM DC    CL8'STATLOG'
FIRST    DC    CL12'PAGE     '
VOLIST   DC    H'1'
         DC    X'00000000'
VOLSER   DC    CL6' '
STCODE   DC    H'0'
CONIN    DC    AL2(BIN-CONIN)
         DC    AL2(*-*)
         DC    CL20'READ ERROR ON'
BIN      EQU   *
LISTLS   DC    CL80' NTL901I XXXXXX EXTENTS=XXXX CYLS=XXXX TRKS=XXXX C-X
               CYLS=XXXX C-TRKS=XXXX  '
NTL902   DC    C'NTL902I UNABLE TO COMPUTE SPACE ON   '
MESSTAB  DC    CL133'   '
TITLE    DC    CL133'1SUPERSCR - INTEL CORPORATION - DASD DATASET SCRATX
               CH UTILITY - VER 2.0'
SUBTITLE DC    CL133'0ACTION(S) TAKEN AND/OR INFORMATIONAL MESSAGES'
LSTITLE  DC    CL133'0DATA-SET-NAME(S).............................CDATX
               E.EDATE..DS-TYPE...EXT.TRKS.VOLSER '
LIST1    DC   CL110'IEF285I XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXC
               X DELETED             - XXXX TRACK(S) FREED FROM XXXXXX'
LIST2    DC    CL90'IEF283I XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXC
               X NOT DELETED 8 VOL SER=XXXXXX X '
LIST5    DC    CL56'AVAILABLE EXTENTS OF CONTIGUOUS TRACKS ON VOLUME   C
                   .'
LIST6    DC    CL24'OPERATOR TERMINATED JOB.'
MSG349   DC    C'IEH349I UNABLE TO MOUNT VOLUME  '
LIST7    DC    CL80'IF CONTINUED, ALL USER DATA SETS EXCEPT SYS1.(NAME)C
                WOULD HAVE BEEN SCRATCHED.'
LIST10   DC    CL68'THERE ARE      EMPTY CYLINDERS PLUS      EMPTY TRACC
               KS ON THIS VOLUME'
LIST11   DC    CL56'THERE ARE      BLANK DSCBS IN THE VTOC ON THIS VOLUC
               ME'
LISTEND  DC    CL80'0IEF142I SUPERSCR - STEP WAS EXECUTED - COND CODE 0X
               000   '
DATE     DC    CL32'SCRATCHED FROM XXXXXX ON DDD/YY.'
PARTACC  DC    CL10'PARTIONED '
ISAMACC  DC    CL10'ISAM      '
SEQACC   DC    CL10'SEQUENTIAL'
DIRACC   DC    CL10'DIRECT    '
         SPACE 2
E1MSG    WTO   'SUPERSCR - RDJFCB RC=XX ON VOL=XXXXXX .. VOLUME SKIPPEDX
                ',ROUTCDE=11,MF=L
         ORG   E1MSG+25
E1CODE   DS    CL2
         ORG   E1MSG+35
E1VOL    DS    CL6
         ORG
E2MSG    WTO   'SUPERSCR - VOLUME XXXXXX ..VTOC FAILED TO OPEN..BYPASSEX
               D ',ROUTCDE=11,MF=L
         ORG   E2MSG+22
E2VOL    DS    CL6
         ORG
         DS    0F
         LTORG
GOORNOGO DS    CL1
FENCE    DC    XL2'FFFF'
IPLDEV   DC    CL3'   '
YEAR     DC    CL2'YY'
DAY      DC    CL3'DDD'
SUPERDD  DC    C'SUPER'
FLAGS    DC    X'00'
PSWITCH  DC    X'00'
SCRSW    DC    X'00'
TABLE    EQU   *
         DS    25CL140
TABLEEND EQU   *
SIZESCR  EQU   (TABLEEND-TABLE)/140
DCBDEBAD EQU   44
CLIST    EQU   *
         DC    100CL45' '
CLISTEND EQU   *
SIZESAV  EQU   (CLISTEND-CLIST)/45
STRIKEND EQU   *
         REGS
         PRINT NOGEN
UCBDSECT DSECT
         IEFUCBOB
CVTDSECT DSECT
         CVT
TCBDSECT DSECT
         IKJTCB DSECT=NO
         END
