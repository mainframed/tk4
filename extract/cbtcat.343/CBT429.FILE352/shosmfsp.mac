*          DATA SET SHOWSMF    AT LEVEL 004 AS OF 08/26/81
*          DATA SET SHOWSMF    AT LEVEL 002 AS OF 06/23/81
*          DATA SET SHOWSMF    AT LEVEL 001 AS OF 05/06/81
         TITLE 'SHOWSMF - SHOW FATNESS OF SMF DATSETS - SE2 -'
*        ORIG SMFDS FROM LA MODS TAPE     K TRUE  5/5/81 INTEL CIS
*        FIXED TO RUN BATCH/TSO           K TRUE 6/22/81 INTEL CIS
*        FIXED AGAIN.. SHOW WHEN SMF INACT, AND FIX %FULL NUMBERS
*                                         K TRUE 8/26/81 INTEL CIS
SHOWSMF  CSECT
**********************************
*                                *
*        REGISTER EQUATES        *
*                                *
**********************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
**********************************
*                                *
*        STANDARD ENTRY LINKAGE  *
*                                *
**********************************
         SAVE  (14,12),,SHOWSMF_V1M0_&SYSDATE_&SYSTIME             NTL
         LR    R12,R15                 ESTABLIST BASE REGISTER     NTL
         USING SHOWSMF,R12             USE REG 12 AS BASE          NTL
         ST    R13,SAVE+4              CROSS
         LA    R15,SAVE                  CHAIN
         ST    R15,8(R13)                  SAVE
         LR    R13,R15                       AREAS
         EJECT
****************************************
*                                      *
*  START REAL CODE                     *
*    CHECK IF PARMS WERE PASSED TO     *
*    DETERMINE IF ANY MESSAGES         *
*    SHOULD BE WRITTEN                 *
*                                      *
****************************************
START    DS    0H                      START REAL CODE
         LR    R3,R1                   SAVE PASSED POINTER IN REG 3
         L     R3,0(R3)                GET PARM LINKAGE
LINKREG  EQU   6                   LINK REGISTER
RXX      EQU   14                  WORK REGISTER
         EXTRACT MF=(E,EXTRACT)
         L     R1,ANSWER            (R1)=ADDR OF TSO FLAG FROM EXTRACT
         MVC   TSOFLAG,0(R1)        MOVE IN THE ANSWER TO OUR FLAG
         SPACE
         CLC   2(4,R3),NORC            WAS RC=0 DESIRED?
         BNE   NORC0
         OI    FLAGS,X'80'             INDICATE RC=0 DESIRED
NORC0    DS    0H
         L     R10,CVTPTR              PUT CVTPTR INTO REG 10
         L     R10,SMCAADR(R10)        GET SMCA ADDR INTO REG 10
         LTR   R10,R10                 SE2 INSTALLED ?
         BZ    NOACTIVE
         BNM   NONSE2                  NO , BRANCH
         CLC   0(2,R3),NOPARMS         CHECK FOR NO PARMS
         BE    NOPARM                  IF NO PARMS, DO TPUT
         CLC   2(5,R3),NOMSG           CHECK FOR NOMSG
         BE    NOMESS                  IF YES, SKIP MESSAGE
         EJECT
****************************************
*                                      *
*  MESSAGES SHOULD BE WRITTEN          *
*    LOOP THROUGH ALL RDS'S AND        *
*    INDICATE THE STATUS OF EACH       *
*                                      *
****************************************
NOPARM   DS    0H                      NO PARM OR PARM NOT NOMSG
         SPACE 3                                                   NTL
         USING SMCABASE,R10            SMCA ADDRESSABILITY
         TM    SMCAMISC,SMCAMAN        SMF ACTIVE
         BNO   NOACTIVE                NO , BRANCH
         TM    SMCAFLGS,SMCADTLS       DATA LOST ?
         BZ    OKSMF                   YES , BRANCH
         MVC   WTOAREA,DATALOSM        SET MESSAGE                 NTL1
         BAL   LINKREG,PUTMSG            AND GO WRITE IT OUT       NTL1
OKSMF    L     R11,SMCAFRDS            GET FIRST RDS POINTER
         USING RDS,R11                 RDS ADDRESSABILITY
         MVC   WTOAREA,TITLE           SET MESSAGE                 NTL1
         BAL   LINKREG,PUTMSG            AND GO WRITE IT OUT       NTL1
         SPACE 3                                                   NTL
****************************************
*                                      *
*  GET THE NAME OF THE SMF DATA        *
*    SET AND THE VOLUME SERIAL         *
*    OF THE DEVICE ON WHICH IT RESIDES *
*                                      *
****************************************
LOOP     TM    RDSFLAG2,RDSLOST        DATA LOST RDS               NTL
         BO    NOMESS                  YES , BRANCH (DO NOT FORMAT)
         MVI   OUTLINE,C' '            CLEAR THE
         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE  OUTPUT LINE
         MVC   OUTNAME(L'RDSNAME),RDSNAME   MOVE DSNAME
         MVC   OUTVSER(L'RDSVOLID),RDSVOLID MOVE VOLID
         EJECT
****************************************
*                                      *
*  CALCULATE HOW THE FULL THE DATA     *
*    SET IS AND REPORT THIS AS A       *
*    PERCENTAGE                        *
*                                      *
****************************************
         L     R4,RDSCAPTY             GET CAPACITY OF DS
         L     R3,RDSNXTBL             GET NEXT BLOCK NUMBER
         BCTR  R3,0                    DECREMENT BY 1
         M     R2,ONETHOU              SCALE FOR PERCENT
         DR    R2,R4                   DIVIDE (R3 HAS RESULT)
         CVD   R3,DBLWORD1             CONVERT TO DECIMAL
         MVC   OUTPCNT,=XL8'40202021204B2040'                      NTLC
         ED    OUTPCNT,DBLWORD1+5      EDIT THE RESULT             NTLC
         MVI   OUTPCNT+L'OUTPCNT-1,C'%'  AND PUT IN THE PERCENT SGNNTLC
         SPACE 2                                                   NTL
****************************************
*                                      *
*  CALCULATE THE SIZE OF THE DATA      *
*    SET AND REPORT THIS IN BLOCKS     *
*    A BLOCK = X'1000' BYTES           *
*                                      *
****************************************
AROUND1  L     R4,RDSCAPTY             GET CAPACITY OF DS          NTL
         CVD   R4,DBLWORD1             CONVERT TO DECIMAL
         MVC   OUTSIZE,=XL7'4020206B202120'                        NTLC
         ED    OUTSIZE,DBLWORD1+5                                  NTLC
         SPACE 2
****************************************
*                                      *
*  DETERMINE THE STATUS OF THE DATA    *
*    SET. IE. ACTIVE , ALTERNATE ,     *
*    OR DUMP REQUIRED                  *
*                                      *
****************************************
AROUND2  C     R11,SMCASVCR            IS THIS DS ACTIVE ?
         BNE   NOTACTIV                NO , BRANCH
         MVC   OUTSTAT(L'ACTIVE),ACTIVE      INDICATE ACTIVE DS
         MVC   SUFFIX,24(R11)          GET LOCAL COPY OF SUFFIX
         B     TO@TPUT                 BRANCH AROUND
         SPACE 2
NOTACTIV DS    0H                      NOT ACTIVE DS
         TM    RDSFLAG1,RDSDUMP        DUMP REQUIRED ?
         BNO   ALT                     NO , BRANCH
         MVC   OUTSTAT(L'DUMPREQ),DUMPREQ    INDICATE DUMP REQUIRED
         B     TO@TPUT                 BRANCH AROUND
         SPACE 2
ALT      DS    0H
         MVC   OUTSTAT(L'ALTERNAT),ALTERNAT  INDICATE ALTERNATE DS
         SPACE 2                                                   NTL
****************************************
*                                      *
*  PUT OUT A LINE OF DATA              *
*                                      *
****************************************
TO@TPUT  DS    0H
         MVC   WTOAREA,OUTLINE         SET MESSAGE                 NTL1
         BAL   LINKREG,PUTMSG            AND GO WRITE IT OUT       NTL1
*        TPUT  OUTLINE,L'OUTLINE       WRITE PGMER MESSAGE
         L     R11,RDSNEXT             MOVE TO NEXT RDS
         C     R11,SMCARDSH            LAST POINTS TO HEADER
         BNE   LOOP                    CONTINUE LOOP
         SPACE 2
****************************************
*                                      *
*  DETERMINE APPROPRIATE RETURN CODE   *
*    1 = SYS1.MANA                     *
*    2 = SYS1.MANB                     *
*    36= SYS1.MAN9    ...   ETC.       *
*                                      *
****************************************
NOMESS   DS    0H                      DON'T WRITE MESSAGE
         LA    R6,SUFFIXS              POINT TO SUFFIXS ARRAY
         LA    R7,L'SUFFIXS            NUMBER OF SUFFIXES
         SLR   R15,R15                 ZERO INDEX AND RETURN CODE
         SPACE 5
CONTINUE DS    0H
         CLC   SUFFIX,0(R6)            SUFFIX MATCH ??
         BE    EXITX                   IF YES, EXIT WITH RC
         LA    R15,1(R15)              INCREMENT RETURN CODE
         LA    R6,1(R6)                INCREMENT INDEX
         BCT   R7,CONTINUE             CONTINUE LOOP
         LA    R15,100                 IF NOT FOUND  ..  BUG
         B     EXIT                    BRANCH TO EXIT
         EJECT
****************************************
*                                      *
*  NON SE2 SYSTEM                      *
*                                      *
****************************************
NONSE2   DS    0H
         IC    R10,35(R10)             GET SMCAXORY FROM SMCA
         STC   R10,XORY                STORE IN O/P MESSAGE
         CLC   0(2,R3),NOPARMS         ANY PARMS ENTERED
         BE    NOPARMS1                NO , BRANCH
         CLC   2(5,R3),NOMSG           CHECK FOR NOMSG
         BE    NOMESS1                 IF YES, SKIP MESSAGE
NOPARMS1 DS    0H
         MVI   WTOAREA,C' '                                        NTL1
         MVC   WTOAREA+1(L'WTOAREA-1),WTOAREA                      NTL1
         MVC   WTOAREA,MESS            SET MESSAGE                 NTL1
         BAL   LINKREG,PUTMSG            AND GO WRITE IT OUT       NTL1
*        TPUT  MESS,L'MESS             WRITE PGMER MESSAGE
NOMESS1  DS    0H
         LA    R15,1                   PRIME RETURN CODE FOR MANX
         CLI   XORY,EX                 CHECK FOR MANX
         BE    EXIT                    IF YES, EXIT WITH RC=1
         LA    R15,2                   IF MANY, MAKE IT RC=2
         B     EXIT                    BRANCH TO EXIT
         EJECT
****************************************
*                                      *
*  PUT OUT SMF NOT ACTIVE MESSAGE      *
*                                      *
****************************************
NOACTIVE DS    0H
         MVC   WTOAREA,NOACTIVM        SET MESSAGE                 NTL1
         BAL   LINKREG,PUTMSG            AND GO WRITE IT OUT       NTL1
*        TPUT  NOACTIVM,L'NOACTIVM     WRITE MESSAGE
         LA    R15,300                 INDICATE SMF NOT ACTIVE
         B     EXIT
         SPACE 5
EXITX    DS    0H
         LA    R15,1(R15)              RETCODE IS 1 GREATER THAN INDEX
EXIT     DS    0H
****************************************
*                                      *
*  STANDARD EXIT LINKAGE               *
*                                      *
****************************************
         TM    FLAGS,X'80'             WAS RC=0 DESIRED?
         BNO   EXIT01
         SR    R15,R15                 YES...CLEAR IT OUT
EXIT01   L     13,SAVE+4
         L     14,12(13)
         LM    1,12,20(13)
         BR    14
         EJECT
*.....................................................................*
*        LOCAL SUBROUTINE FOR IO TO OPER/USER                         *
*.....................................................................*
         SPACE
*
* ENTER WITH WTO,WTOR LIST FORM POINTED TO BY R1
*
*    BAL  LINKREG,PUTMSG    OR
*    BAL  LINKREG,PUTGET
*
*  USES RXX FOR WORK
*
*
PUTMSG   DS    0H
         LA    R1,WTOLIST                                          NTL1
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TPUTIT              YES-> GO DO TPUT
         SVC   35                  NO-> USE WTO
         BR    LINKREG
TPUTIT   DS    0H
         LH    R0,0(,R1)           GET LENGTH OF WTO MESSAGE
         S     R0,=F'4'            SUBTRACT OFF HEADER
         LA    R1,4(,R1)           BUMP MSG ADDRESS PAST HDR
         TPUT  (1),(0),R           DO THE TPUT
         BR    LINKREG
         SPACE 2
PUTGET   DS    0H
         TM    TSOFLAG,X'80'       IS IT TSO?
         BO    TSOIT               YES-> GO USE TGET
         LR    RXX,R1              NO-> USE WTOR .. SAVE MSG ADDRESS
         SVC   35                  DO THE WTOR...
         L     R1,4(,RXX)          GET ADDR OF ECB
         XC    0(4,R1),0(R1)       CLEAN OUT THE ECB....
         LA    R0,1
         SVC   1                   WAIT FOR WTOR TO COMPLETE
         B     PUTRET              RETURN
TSOIT    DS    0H
         LR    RXX,R1              SAVE
         LH    R0,8(,R1)           PUT LENGTH
         S     R0,=F'4'
         LA    R1,12(,R1)          PAST HDR
         TPUT  (1),(0),R
         SR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
         L     R1,0(,RXX)          GET REPLY ADRS
         LA    R1,0(,R1)
         ICM   R1,B'1000',=X'80'   INDICATE TGET...
         TGET  (1),(0),R
PUTRET   DS    0H
         L     R1,0(,RXX)          GET REPLY ADRS
         XR    R0,R0
         IC    R0,0(,RXX)          GET REPLY LENGTH
UPPER    DS    0H
         OI    0(R1),C' '          UPPER CASE
         LA    R1,1(,R1)           NXT
         BCT   R0,UPPER
         BR    LINKREG
         EJECT
*.....................................................................*
*        VARIABLES                                                    *
*.....................................................................*
         SPACE 2
TSOFLAG  DC    X'00'               ='80' IF TSO. '00' IF NOT TSO
ANSWER   DC    F'0'                ADDRESS POINTER FOR EXTRACT
         SPACE 2
*.....................................................................*
*        LIST FORMS OF MACROS                                         *
*.....................................................................*
         SPACE 2
EXTRACT  EXTRACT ANSWER,'S',FIELDS=(TSO),MF=L
         SPACE 2
*.....................................................................*
*        LITERAL POOL                                                 *
*.....................................................................*
         SPACE 2
         LTORG ,                                                   NTL
         EJECT
****************************************
*                                      *
*  CONSTANTS AND STORAGE FIELDS USED   *
*                                      *
****************************************
DBLWORD1 DC    D'0'
DBLWORD2 DC    D'0'
FULLWORD DC    F'0'
ONETHOU  DC    F'1000'
FLAGS    DC    X'00'                                               NTL1
MESS     DS    0CL9                    MESSAGE DC
         DC    C'SYS1.MAN'
XORY     DS    C
SUFFIX   DS    C
NOMSG    DC    C'NOMSG'
NORC     DC    C'NORC'                                             NTL1
NOPARMS  DC    X'0000'                 NO PARMS
SUFFIXS  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
ACTIVE   DC    C'ACTIVE       '
ALTERNAT DC    C'ALTERNATE    '
DUMPREQ  DC    C'DUMP REQUIRED'
NONSE2M  DC CL80'+++ SE2 OR SMF IS NOT ACTIVE IN THIS SYSTEM - SHOWSMF'
NOACTIVM DC CL80'+++ SMF IS NOT ACTIVE - SHOWSMF'
DATALOSM DC CL80'+++ SMF IS NOT RECORDING - SMF DATA LOST  - SHOWSMF'
TITLE    DC    CL80'DATASET NAME  VOLSER      SIZE  %USED    STATUS'
*                   012345678901234567890123456789012345678901234567890
*                   XXXXXXXXXXXX  XXXXXX    XXXXXX  XXXXX    XXXXXXXXXX
*                                          BNN,NNN                 NTLC
*                                                BB100.0%          NTLC
OUTLINE  DC    CL80' '
OUTNAME  EQU   OUTLINE+0
OUTVSER  EQU   OUTLINE+14
OUTSIZE  EQU   OUTLINE+23,7                                        NTL
OUTPCNT  EQU   OUTLINE+29,8                                        NTLC
OUTDOT   EQU   OUTLINE+34
OUTPCNTT EQU   OUTLINE+35
OUTPCNTS EQU   OUTLINE+36
OUTSTAT  EQU   OUTLINE+41
WTOLIST  WTO   '123456789.123456789.123456789.123456789.123456789.12345*
               6789.123456789.123456789.',                         NTL1*
               ROUTCDE=11,MF=L                                     NTL1
WTOAREA  EQU   WTOLIST+4,80            MESSAGE AREA                NTL1
CVTPTR   EQU   16                      POINTER TO THE CVT
SMCAADR  EQU   X'C4'                   OFFSET IN CVT OF THE SMCA PTR
EX       EQU   C'X'                    TO CHECK SUFFIX
         DC    C'SAVE AREA'
SAVE     DC    18F'0'
         EJECT ,                                                   NTLC
         IEESMCA
         EJECT
RDS      DSECT
******* START OF SPECIFICATIONS ***************************************
***                                                                  **
***  MACRO-NAME = IEEMBRDS                                           **
***                                                                  **
***  DESCRIPTIVE-NAME = SMF RECORDING DATA SET CONTROL BLOCK         **
***                                                                  **
***                                                                  **
***  FUNCTION = MAPPING FOR THE RDS.  AN RDS CONTAINS THE            **
***             DATA NECESSARY TO CONTROL AN SMF RECORDING           **
***             DATASET.  IT INCLUDES THE VSAM ACB AND RPL AND       **
***             OTHER FLAGS AND FIELDS DESCRIBING THE STATUS         **
***             OF THE DATASET.                                      **
***                                                                  **
******* END OF SPECIFICATIONS *****************************************
RDSID    DS    CL4           CONTROL BLOCK ID
RDSNEXT  DS    F             FORWARD CHAIN POINTER
RDSPREV  DS    F             BACKWARD CHAIN POINTER
RDSFLAG1 DS    XL1           DATASET STATUS INDICATORS
*                            XXX. ....  RESERVED
RDSFREE  EQU   X'10'         ...1 ....  NEED TO FREE DATASET AND RDS
RDSDUMP  EQU   X'08'         .... 1...  OPER HAS BEEN TOLD TO DUMP DS
RDSREADY EQU   X'04'         .... .1..  DS IS OPEN AND READY TO USE
RDSCLOSE EQU   X'02'         .... ..1.  DS NEEDS TO BE CLOSED
RDSNDOP  EQU   X'01'         .... ...1  DS NEEDS TO BE OPENED
RDSFLAG2 DS    XL1           DATASET STATUS INDICATORS
RDSLOST  EQU   X'80'         1... ....  DUMMY RDS FOR LOST DATA
RDSPHYER EQU   X'40'         .1.. ....  PHYSICAL I/O ERROR
RDSLOGER EQU   X'20'         ..1. ....  LOGICAL I/O ERROR
*                            ...X XXXX  RESERVED
RDSFLAG3 DS    XL1           RESERVED
RDSFLAG4 DS    XL1           RESERVED
RDSNAME  DS    CL10          DATASET NAME
RDSVOLID DS    CL6           VOLUME SERIAL
RDSDDN   DS    CL8           DDNAME RETURNED BY DYNAMIC ALLOC
RDSCAPTY DS    F             DATASET CAPACITY IN # OF BLOCKS
RDSNXTBL DS    F             NUMBER OF NEXT AVAILABLE BLOCK
RDSBQE   DS    A             ADDRESS OF BQE BEING WRITTEN
RDSAVSPC DS    F             AVAILABLE SPACE FROM SHOWCB
RDSENRBA DS    F             ENDRBA FROM SHOWCB
RDSCINV  DS    F             CONTROL INTERVAL SIZE
RDSDOMID DS    F             MSG # OF DUMP MSG
RDSRPL   DS    CL76          VSAM RPL
RDSACB   DS    CL76          VSAM ACB
         END   SHOWSMF
