*          DATA SET MSSAMS     AT LEVEL 002 AS OF 10/09/78
*          DATA SET MSSAMS     AT LEVEL 001 AS OF 10/09/78
MSSAMS TITLE 'MVS-IPO 3850 MSS - MSSAMS - SAMPLE AMS COMMAND SUBMITTER'
***********************************************************************
*                                                                     *
*             MODULE NAME = MSSAMS                                    *
*                                                                     *
*             DESCRIPTIVE NAME = IPO SUPPLIED EXAMPLE OF ENTERING     *
*                AMS MSS COMMANDS IN THE PARAMETER FIELD OF A         *
*                STARTED TASK ON THE OPERATOR CONSOLE.                *
*                                                                     *
*             COPYRIGHT = NONE                                        *
*                                                                     *
*             STATUS = RELEASE 01.0 OF IPO                            *
*                                                                     *
*             FUNCTION =                                              *
*                THE PROGRAM AVOIDS HAVING TO UPDATE A PROCLIB MEMBER *
*                WITH THE DESIRED COMMAND BEFORE STARTING A PROCEDURE *
*                INVOKING IDCAMS.                                     *
*                WITH SOME AMS VERBS (CREATEV FOR EXAMPLE,A WORKFILE  *
*                MUST BE SUPPLIED IN THE JCL.THIS ADDITIONAL DD CARD  *
*                IS DYNAMICALLY ADDED BY THE PROGRAM AND THE NECESSARY*
*                COMMAND PARAMETER TOO.                               *
*                ALL THE CONSTRUCTED JCL IS SENT TO AN INTERNAL READER*
*                                                                     *
*             OPERATION =                                             *
*                                                                     *
*             - REPLACE ANY + CHARACTER BY A QUOTE                    *
*               (BECAUSE YOU CAN'T TYPE A QUOTE IN THE PARM FIELD)    *
*             -  CONTROL THE AMS VERB PERTINENCE                      *
*             -  WRITE THE GENERATED DD AND SYSIN CARDS ON AN         *
*                   INTERNAL READER.                                  *
*                                                                     *
*             NOTES =                                                 *
*                DEPENDENCIES = CHARACTER SET IS EBCDIC.REASSEMBLE    *
*                   IF A DIFFERENT CHARACTER SET IS NEEDED.           *
*                RESTRICTIONS = NONE                                  *
*                REGISTER CONVENTIONS = STANDARD CONVENTIONS.         *
*                   REGISTERS 0 TO 1  = WORK REGISTERS                *
*                   REGISTER  2,3     = UNUSED                        *
*                   REGISTER  4 TO 10 = WORK REGISTERS                *
*                   REGISTER 11       = UNUSED                        *
*                   REGISTER 12       = ADDRESSABILITY TO MSSAMS      *
*                                       CSECT                         *
*                   REGISTER 13       = SAVE AREA REGISTER            *
*                   REGISTERS 14,15   = WORK REGISTERS                *
*                                                                     *
*                PATCH LABEL = NONE                                   *
*                                                                     *
*                MODULE TYPE = PROCEDURE                              *
*                   PROCESSOR = ASM                                   *
*                   MODULE SIZE = < 1K BYTES                          *
*                   ATTRIBUTED = PROBLEM PROGRAM STATE                *
*                                                                     *
*                ENTRY POINT = MSSAMS (ONLY ENTRY POINT)              *
*                   LINKAGE =                                         *
*                      FROM AN OPERATOR START COMMAND                 *
*                                                                     *
*                INPUT = REGISTER 1 POINTS ON THE PARAMETER LIST      *
*                   CONTAINING THE AMS COMMAND TO BE EXECUTED         *
*                                                                     *
*                OUTPUT = NONE                                        *
*                                                                     *
*                EXIT - NORMAL =AT PROGRAM END VIA BRANCH REGISTER 14 *
*                   OUTPUT = JCL AND SYSIN CARDS ON INTERNAL READER   *
*                   RETURN CODE = ZERO                                *
*                                                                     *
*                EXIT - ERROR = NONE                                  *
*                   OUTPUT = NONE                                     *
*                   RETURN CODE = ZERO                                *
*                                                                     *
*                EXTERNAL REFERENCES = NONE                           *
*                                                                     *
*                   DATA AREAS = NONE                                 *
*                   CONTROL BLOCKS= DCB                               *
*                                                                     *
*                                                                     *
*                TABLES = AMS VERBS TABLE AT SYMBOL TABLVERB          *
*                                                                     *
*                MACROS = OPEN,PUT,CLOSE,WTO                          *
*                                                                     *
*                CHANGE ACTIVITY = NONE                               *
*                                                                     *
*                MESSAGES = ERROR MESSAGES ARE ISSUED TO THE OPERATOR *
*                     CONSOLE.                                        *
*                                                                     *
*                                                                     *
*                PROCEDURE EXAMPLE =                                  *
*                                                                     *
*                   //MSSAMS     PROC,P='CHECKMSS'                    *
*                   //IEFPROC    EXEC PGM=MSSAMS,PARM='&P'            *
*                   //SYSOUT     DD SYSOUT=(A,INTRDR),                *
*                   //           DCB=(BLKSIZE=80,RECFM=F)             *
*                                                                     *
*                USE EXAMPLE =                                        *
*                   S MSSAMS,P='CREATEV VOL(MICHEL)'                  *
*                                                                     *
*                   PRODUCE THE FOLLOWING CARDS :                     *
*                                                                     *
*                   //CREATEV  JOB (ACCT#),'MSSAMS',                  *
*                   //             CLASS=I,MSGCLASS=A,MSGLEVEL=(1,1)  *
*                   //AMS      EXEC PGM=IDCAMS                        *
*                   //SYSPRINT DD   SYSOUT=A                          *
*                   //NEWV     DD   UNIT=(3330V,,DEFER),DISP=OLD,     *
*                   //              VOL=SER=DUMMYV                    *
*                   //SYSIN  DD *                                     *
*                     CREATEV VOL(MICHEL) FILE(NEWV)                  *
*                   /*                                                *
*                                                                     *
*                 ABEND CODES = NONE                                  *
*                                                                     *
***********************************************************************
         EJECT
MSSAMS   CSECT
         SAVE  (14,12),,MSSAMS_&SYSDATE  SAVE REGISTERS
         LR    R12,R15             INITIALIZE BASE REGISTER
         USING MSSAMS,R12          BASE REGISTER
         B     SAVE1+72            GO TO NEXT EXECUTABLE INSTRUCTION
SAVE1    DS    18F                 SAVE AREA FOR CALLED PROGRAM
         ST    R13,SAVE1+4         SAVE R13 OF CALLING PROGRAM
         LA    R15,SAVE1           R15=SAVE ADDRESS OF CALLED
         ST    R15,8(R13)          PROTECT SAVE AREA OF CALLED PROGRAM
         LR    R13,R15             R13=SAVE AREA ADDR OF CALLED
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
         LR    R10,R1              SAVE PARM POINTER
         SPACE 1
**********************************************************************
*          TAKE PARAMETER LIST AND FORCE CAPITAL LETTERS             *
**********************************************************************
         SPACE 1
         L     R10,0(R10)          PARAMETER ADDRESS
         LH    R0,0(R10)           PICK UP PARM LENGTH
         LR    R8,R0               PROTECT PARM LENGTH VALUE
         LA    R5,2(R10)           START OF TEXT
         LR    R9,R5               PROTECT START OF TEXT ADDR
CHNG     CLI   0(R5),C'+'          CHANGE +
         BNE   NOCHNG                       CHARACTER
         MVI   0(R5),C''''                            WITH
NOCHNG   LA    R5,1(R5)                                     A
         BCT   R0,CHNG                                        QUOTE
         LR    R0,R8               RESTORE
         LR    R5,R9                       ORIGINAL VALUES
SHIFT    OI    0(R5),X'40'         FORCE BLOCK LETTER
         LA    R5,1(R5)            NEXT CHARACTER
         BCT   R0,SHIFT            SHIFT ALL CHAIN
         LH    R4,0(R10)           PICK UP PARAMETER LENGTH
         LA    R6,2(R10)           JUMP OVER LENGTH
         LR    R7,R6               SAVE INITIAL VALUE
         LH    R9,0(R10)           PICK UP MAX CHAIN LENGTH
         BCTR  R9,0                MINUS 1
CHECVERB CLI   1(R6),X'40'         IS THIS END OF VERB ?
         BE    ENDVERB             BRANCH IF END OF VERB
         LA    R6,1(R6)            TRY WITH
         BCT   R9,CHECVERB                  NEXT CHARACTER
         SPACE 1
**********************************************************************
*                    SEARCH AMS VERB IN VERBS TABLE                  *
**********************************************************************
         SPACE 1
ENDVERB  SR    R6,R7               TAKE THE VERB LENGTH
         LA    R8,TABLVERB-16      PICK UP TABLE ORIGIN-16
TBLLOOP  LA    R8,16(R8)           NEXT ENTRY
         CLI   0(R8),X'FF'         IS IT END OF TABLE VERBS
         BE    ERROR2              NO VERB MATCH ... ERROR
         EX    R6,COMPARE          TRY TO LOCATE VERB ENTRY
         BE    VERBFND             BRANCH IF VERB MATCH
         B     TBLLOOP             TRY NEXT ENTRY
         SPACE 1
COMPARE  CLC   0(*-*,R8),2(R10)    COMPARE FOR MATCHING VERB
MOVE1    MVC   JCL+2(*-*),2(R10)   MOVE VERB COMMAND TO JOB NAME
MOVE2    MVC   SYSINCD+1(*-*),2(R10) MOVE COMMAND TO SYSIN CARD
MOVE3    MVC   0(*-*,R8),0(R5)     MOVE ADDITIONAL TEXT TO SYSIN
         SPACE 1
VERBFND  EQU   *                   *
         SPACE 1
         EX    R6,MOVE1            MOVE VERB TO JOBNAME
         LA    R7,8(R8)            POINT ON ADDITIONAL DD CARD #
         CLI   0(R7),X'FF'         IS VERB NOT SUPPORTED ?
         BE    ERROR3              BRANCH IF YES
         OPEN  (SYSOUT,(OUTPUT))   OPEN FILE SYSOUT
         SPACE 1
**********************************************************************
*                    PUT THE 4 FIRST DD CARDS ON INTRDR              *
**********************************************************************
         SPACE 1
         LA    R8,JCL              GET 1ST JCL CARD ADDRESS
         LA    R9,5                GET NUMBER OF JCL CARDS     KMT
JCLLOOP  PUT   SYSOUT,0(R8)        WRITE
         LA    R8,80(R8)                 ALL THE JCL
         BCT   R9,JCLLOOP                            CARDS
         IC    R9,0(R7)            PICK UP ADDITIONAL DD CARDS #
         LTR   R9,R9               IS THERE ANY ?
         BE    NOTDD               BRANCH IS NO ADDITIONAL DD CARD
         SPACE 1
**********************************************************************
*                    PUT THE REQUIRED ADDITIONAL DD CARDS            *
**********************************************************************
         SPACE 1
         L     R8,0(R7)            POINT ON 1ST ADDITIONAL DD CARD
DDLOOP   PUT   SYSOUT,0(R8)        WRITE
         LA    R8,80(R8)                 ALL THE ADDITIONAL
         BCT   R9,DDLOOP                                    DD CARDS
         SPACE 1
**********************************************************************
*                    PUT THE SYSIN DD * CARD                         *
**********************************************************************
         SPACE 1
NOTDD    PUT   SYSOUT,SYSINDD      WRITE THE SYSIN DD CARD
         BCTR  R4,0                GET PARM LENGTH-1
         SPACE 1
**********************************************************************
*                    CONSTRUCT THE SYSIN CARD                        *
**********************************************************************
         SPACE 1
         EX    R4,MOVE2            MOVE COMMAND TO SYSIN CARD
         LA    R4,1(R4)            RESTORE ORIGINAL LENGTH
         LA    R7,4(R7)            POINT ON ADDITIONAL CHAR CHAIN
         XR    R1,R1               CLEAR R1
         IC    R1,0(R7)            PICK UP ADDITIONAL CHAR CHAIN #
         LTR   R1,R1               IS THERE ANY ?
         BE    NOCHAR              BRANCH IF NOT
         LR    R9,R1               R9=ADDITIONAL CHAR LENGTH
         AR    R9,R4               PLUS ORIGINAL COMMAND LENGTH
         CH    R9,=H'70'           DOES IT FIT IN ONE CARD ?
         BH    TWOCARDS            BRANCH IF NOT
         LA    R8,SYSINCD+2        POINT ON END
         AR    R8,R4                            OF NORMAL COMMAND
SYSINPUT L     R5,0(R7)            R5=START OF ADDITIONAL TEXT
         BCTR  R1,0                MACHINE LENGTH OF ADDITIONAL TEXT
         EX    R1,MOVE3            MOVE ADDITIONAL TEXT TO SYSIN
         SPACE 1
**********************************************************************
*                          PUT THE SYSIN CARD(S)                     *
**********************************************************************
         SPACE 1
NOCHAR   PUT   SYSOUT,SYSINCD      WRITE CURRENT SYSIN CARD
         B     ENDPARM             CONTINUE PROCESSING
TWOCARDS LA    R8,SYSINCD+1        POINT ON LAST
         AR    R8,R4                             COMMAND CHAR
         MVI   0(R8),C'-'          SET AMS CONTINUATION CHAR
         PUT   SYSOUT,SYSINCD      WRITE 1ST SYSIN CARD
         MVC   SYSINCD+1(79),SYSINCD  CLEAR SYSIN CARD AREA
         IC    R1,0(R7)            PICK UP ADDITIONAL TEXT LENGTH
         LA    R8,SYSINCD+10       RECEIVING AREA
         B     SYSINPUT            WRITE ADDITIONAL SYSIN CARD
         SPACE 1
**********************************************************************
*                          PUT THE /*  CARD                          *
**********************************************************************
         SPACE 1
ENDPARM  PUT   SYSOUT,=CL80'/*'    WRITE END OF DATA CARD
         PUT   SYSOUT,AFTERCC      WRITE LAST STEP OUT
         PUT   SYSOUT,=CL80'//'    WRITE JCL NULL CARD
         CLOSE  SYSOUT
         B     CFINI
         SPACE 3
ERROR2   WTO   'VERB COMMAND NOT FOUND'
         B     CFINI
ERROR3   WTO   'VERB COMMAND NOT SUPPORTED'
         B     CFINI
CFINI    EQU   *                   *
         SPACE 5
         L     R13,SAVE1+4         RESTORE R13 OF CALLER
         LA    R15,0               SET
         ST    R15,16(R13)             RETURN CODE
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         MVI   12(R13),X'FF'       SHOW THAT WE ARE RETURNED
         BR    R14                 RETURN TO CALLER
         SPACE 5
         LTORG
         SPACE 5
**********************************************************************
*                   AMS VERBS  TABLE                                 *
**********************************************************************
         SPACE 1
TABLVERB DS    0F                  SUPPORTED AMS VERBS TABLE
         DC    CL8'ADDV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'AUDITMSS',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'CHECKMSS',AL1(2),AL3(WRKFILE1),AL1(16),AL3(CHKW)
         DC    CL8'COMPARET',AL1(4),AL3(WRKFILE1),AL1(24),AL3(COMW)
         DC    CL8'CMPT',AL1(4),AL3(WRKFILE1),AL1(24),AL3(COMW)
         DC    CL8'CONVERTV',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'CONV',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'COPYT',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'COPYV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'CREATEG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'CRG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'CREATEV',AL1(1),AL3(DUMDD),AL1(10),AL3(CREW)
         DC    CL8'CRV',AL1(1),AL3(DUMDD),AL1(10),AL3(CREW)
         DC    CL8'DUMPMSS',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'EJECTC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'EJECTV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'LISTDSET',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'LISTMSF',AL1(2),AL3(WRKFILE1),AL1(11),AL3(LISW)
         DC    CL8'LISTMSVI',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODIFYC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODIFYG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODIFYV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'MODV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'NULLIFYC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'NULLC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'RECOVERV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'RECV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'REMOVEVR',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'REMVR',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'REPAIRV',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'REPV',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'REPLACEC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'REPC',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SCRATCHG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SCRG',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SCRATCHV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SCRV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SCRDSET',AL1(255),AL3(0),AL1(0),AL3(0)
         DC    CL8'STOREV',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'SWAPT',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'TRACE',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    CL8'TUNE',AL1(0),AL3(0),AL1(0),AL3(0)
         DC    XL4'FFFFFFFF'   END  OF TABLE VERBS
         SPACE 5
CHKW     DC    CL16'WORKFILE(VSWKD1)'
COMW     DC    CL26'WORKFILES(VSWKD1,VSWKD2)'
CREW     DC    CL10'FILE(NEWV)'
LISW     DC    CL11'WDS(VSWKD1)'
         SPACE 2
         SPACE 1
**********************************************************************
*                   SUPPLEMENTARY DD CARDS                           *
**********************************************************************
         SPACE 1
WRKFILE1 DC    CL80'//VSWKD1 DD UNIT=SDG00,'
         DC    CL80'//             SPACE=(CYL,(40),,CONTIG)'
WRKFILE2 DC    CL80'//VSWKD2 DD UNIT=SDG00,'
         DC    CL80'//             SPACE=(CYL,(40),,CONTIG)'
DUMDD    DC    CL40'//NEWV DD UNIT=(3330V,,DEFER),DISP=OLD,V'
         DC    CL40'OL=SER=DUMMYV'
         SPACE 5
JCL      DC    CL80'//VERB     JOB (65003,B29),''MSSAMS GEN JOB'','
         DC    CL80'//             CLASS=Y,MSGCLASS=A,COND=(0,NE),  '
         DC    CL80'//             NOTIFY=$6TSMSS '
         DC    CL80'//AMS      EXEC  PGM=IDCAMS'
         DC    CL80'//SYSPRINT DD    SYSOUT=A'
SYSINDD  DC    CL80'//SYSIN    DD    *'
SYSINCD  DC    CL80' '
AFTERCC  DC    CL80'//AFTERCC  EXEC  PGM=IEFBR14   CHK COND CODE'
         SPACE 5
SYSOUT   DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSOUT
         SPACE 5
         END
