*          DATA SET PSNMWORK   AT LEVEL 002 AS OF 10/30/80
         MACRO
&TAG     PSNMWORK  &P=PSW,&T=D,&PRINT=OFF
         PUSH   PRINT                                               NTL
         PRINT  &PRINT                                              NTL
         GBLC  &PSNGTWK
&PSNGTWK SETC  '&T'               PASS TYPE OF GENERATION
         PSNMI001   &TAG,PSNWORK,&P,&T
&P.START DS    0D                 START OF GENERAL WORK AREA
         B     &P.TMX-&P.START(,15) STANDARD START OF A MODULE
         DC    AL1(&P.TMX-*-1),CL8'PSNWORK'
         PSNMI002
&P.TMX   EQU   *
         SR    15,15
         BR    14
*
*                    POINTERS SETS FOR GROUP RATES
         ORG   &P.START+X'40'     COMMON STARTING POSITION
&P.SAVE  DC    A(&P.SCRT,&P.SCRTX) POINTERS TO SCRATCHPAD AREA
&P.COUNT DC    A(&P.CTR,32,&P.CTRX)   THE COUNTERS
&P.AMODS DC    A(&P.MODLS,&P.LMODE,&P.MODX)  THE MODULES LOADED
         DC    3A(0)              EXPANSION OF POINTER SETS
         DC    3A(0)              EXPANSION OF POINTER SETS
         DC    3A(0)              EXPANSION OF POINTER SETS
         DC    3A(0)              EXPANSION OF POINTER SETS
*
*                    DEFINITION OF THE MANY GOTTEN-MAIN AREAS
&P.GCORE DS    0D
&P.ASYM  DC    2A(0)                      SYMBOLIC TABLE AREA
         DC    AL1(71),AL3(4*4096),A(0),CL8'SYMBOLS'                NTL
&P.GMLNG EQU   *-&P.GCORE         LENGTH OF AN ENTRY
&P.AEXEC DC    2A(0)                      EXECUTE ENTRIES
         DC    AL1(72),AL3(16*4096),A(0),CL8'EXEC'                  NTL
&P.ADDN  DC    2A(0)                      DDNAME ENTRIES
         DC    AL1(73),AL3(48*4096),A(0),CL8'DDNAMES'               NTL
&P.ALIT  DC    2A(0)                      LITERAL POOL
         DC    AL1(74),AL3(1*4096),A(0),CL8'LINE-CMT'
         DC    4A(0),CL8' '       CLEARED - NO BUILDING AREA
&P.ABUFR DC    2A(0)                      BUFFER DESCRIPTION
         DC    AL1(76),AL3(0),A(0),CL8'INBUFFER'
&P.ACOM  DC    2A(0)                      COMMENT LINES
         DC    AL1(77),AL3(20*4096),A(0),CL8'COMMENTS'              NTL
&P.ATEXT DC    2A(0)                      TEXT - STRAIGHT / SUBST
         DC    AL1(79),AL3(48*4096),A(0),CL8'TEXT'                  NTL
&P.AWBUF DC    2A(0)                      TEXT - STRAIGHT / SUBST
         DC    AL1(75),AL3(0),A(0),CL8'OUTBUFFR'
         DC    6A(0)              EXPANSION
         DC    6A(0)              EXPANSION
         DC    6A(0)              EXPANSION
&P.COREX EQU   *-&P.GMLNG
*
&P.DCBS  DS    0D                 THE DCBS IN THE PROCESS
&P.SYLIB DC    A(&P.ADSLB)        ADDRESS OF SYSUT1 DCB
&P.SYSIN DC    A(&P.ADSIN)        ADDRESS OF SYSIN DCB
&P.STERM DC    A(&P.ADTRM)        ADDRESS OF SYSTERM DCB - ABBREV MSGS
&P.SYPRT DC    A(&P.ADPRT)        ADDRESS OF SYSPRINT DCB - FULL MSGS
&P.SNAPD DC    A(&P.ADSNP)        ADDRESS OF SNAP DCB - DIAGNOSTICS
&P.SLDIR DC    A(&P.ASLDI)        DIRECTORY OF SYSUT1 DATASET
&P.PDOUT DC    A(&P.APOUT)        THE OUTPUT DCB FOR REFORMATTED
         DC    A(0)               EXPANSION
         DC    A(0)               EXPANSION
&P.DCBX  EQU   *-4
*
*                    POINTERS TO TRT TABLES FOR PARSING
&P.TRQOT DC    A(&P.DTRQT)        FOR COMMA AND BLANK
&P.TRPAR DC    A(&P.DTRPR)        FOR END OF SYMBOLIC SUBST
&P.TRKEY DC    A(&P.DTRKY)        SCANNING FOR NAME AND KEYWORDS
&P.TRBLK DC    A(&P.DTRBK)        SCANNING FOR FIRST NON-BLANK
&P.TRSYM DC    A(&P.DTRSY)        SCANNING FOR SYMBOLIC SUBSTITUTION
&P.TRSUB DC    A(&P.DTRSB)        SCAN FOR START OF A SYMBOLIC
&P.TRNUM DC    A(&P.DTRNM)        TRANSLATE FOR NUMERICS
&P.TRSPA DC    A(&P.DTRSP)        TRANSLATE FOR SUB-PARSING
         DC    A(0)               EXPANSION - MORE TRT TABLES
         DC    A(0)               EXPANSION - MORE TRT TABLES
         DC    A(0)               EXPANSION - MORE TRT TABLES
         DC    A(0)               EXPANSION - MORE TRT TABLES
*
*                    THE SERVICE ROUTINES - SELF-LOADING
&P.SETUP DC    A(&P.MSETU)        SETUP NEXT REQUEST
&P.TYPE  DC    A(&P.MTYPE)        DETERMINE TYPE OF CARD NEXT IN
&P.PROC  DC    A(&P.MPROC)        PROCESS THE PROC STATEMENT
&P.EXEC  DC    A(&P.MEXEC)        PROCESS THE EXEC STATEMENT
&P.DD    DC    A(&P.MDD)          PROCESS THE DD STATEMENT
&P.DDTAB DC    A(&P.MDDTB)        TABLE OF DD KEYWORDS
&P.COMNT DC    A(&P.MCOMN)        PROCESS THE COMMENT LINE
&P.ENDM  DC    A(&P.MENDM)        END OF MEMBER PROCESSING
&P.EDITS DC    A(&P.MEDTS)        EDIT THE STEP (EXEC PLUS DDS)
&P.EDITD DC    A(&P.MEDTD)        EDIT THE DD STATEMENT
&P.EDITP DC    A(&P.MEDTP)        EDIT THE ENTIRE PROC
&P.EDITX DC    A(&P.MEDTX)        EDIT THE EXECUTE STATEMENT
&P.SCAN  DC    A(&P.MSCAN)        SCAN FOR NEXT KEYWORD...
&P.SUBST DC    A(&P.MSUBS)        SUBSTITUTE STRINGS PROCESSOR
&P.ERROR DC    A(&P.MERR)         ERROR/MESSAGE ROUTINE
&P.ERLST DC    A(&P.MERLS)        ERROR MESSAGES TABLE
&P.READ  DC    A(&P.MREAD)        READ NEXT LOGICAL PROC CARD
&P.SUBOP DC    A(&P.MSUBO)        SUBOPERAND PARSING ROUTINE
&P.PDSR  DC    A(&P.MPDSR)        PDS READ ROUTINE FOR FULL PROCESSING
&P.REFMT DC    A(&P.MREFM)        REFORMAT SUPERVISOR
&P.WRITE DC    A(&P.MWRIT)        WRITE-BACK PROCESSOR FOR REFORMAT
&P.RFPRC DC    A(&P.MRPRC)        REFORMAT PROC STATEMENT
&P.RFEXC DC    A(&P.MREXC)        REFORMAT EXEC STATEMENT
&P.RFDD  DC    A(&P.MRDD)         REFORMAT DD STATEMENT
*
*
*                    RUN CONSTANT DATA
         ORG   &P.START+X'300'
&P.INIT  DC    A(*+8,0),CL8'PSNINIT'    LINKED-TO INITIALIZATION
&P.TERM  DC    A(*+8,0),CL8'PSNTERM'    LINKED-TO TERMINATION
&P.OPT   DC    A(*+8,0),CL8'PSNOPT'     LOADED - OPTIONS CSECT
         DC    A(*+8,0),CL8' '      EXPANSION OF LINKED-TO PROCESSORS
         DC    A(*+8,0),CL8' '      EXPANSION OF LINKED-TO PROCESSORS
*
&P.DDSLB DC    CL8'SYSLIB'        DDNAME OF PROCLIB                 NTL
&P.DDSIN DC    CL8'SYSIN'         DDNAME OF CONTROL DATASET
&P.DDTRM DC    CL8'SYSTERM'       DDNAME OF ABBREVIATED ERRORS
&P.DDPRT DC    CL8'SYSPRINT'      DDNAME OF FULL REPORT
&P.DDSNP DC    CL8'SYSUSNAP'      DDNAME OF SNAP OUTPUT FILE
&P.DDOUT DC    CL8'SYSUT2'        DDNAME OF THE OUTPUT REFORMAT FILE
         DC    CL8' '             EXPANSION DDNAME
         DC    CL8' '             EXPANSION DDNAME
         DC    CL8' '             EXPANSION DDNAME
*
&P.DSNAM DC    CL44' '            DSNAME OF THE SYSLIB DATASET
&P.DATE  DC    CL8' '             TODAYS DATE
*
*                    THE VALUES THAT CAN BE OVERRIDDEN FOR A SINGLE MBR
&P.GLOBL DS    0D                 START OF GLOBAL/MEMBER DATA FIELDS
&P.GFLG1 DC    X'00'              RUN OPTIONS FIRST - MOVED TO MFLG1
&P.GFLG2 DC    X'00'              ANOTHER BYTE OF RUN OPTIONS
&P.GSEV  DC    H'4'               HIGHEST SEVERITY ALLOWED FOR REFORMAT
&P.GINCR DC    PL5'10000'         INCREMENT A LA SPF
&P.GNEW1 DC    PL5'10000'         STARTING VALUE AS IN SPF
&P.GLBLL EQU   *-&P.GLOBL         LENGTH OF GLOBAL/MEMBER DATA
&P.UT2DS DC    CL44' '            DSNAME OF SYSUT2 DATASET          NTL
*
*
*                    MEMBER-CONSTANT DATA
         ORG   &P.START+X'400'
&P.PNAME DC    CL8' '             NAME OF THE PROC NOW PROCESSING
&P.PCID  DC    CL8' '             INTERNAL IDENTIFIER OF THE PROC
&P.HEADC DC    A(0)               POINTER TO COMMENT BLOCK AT PROC HEAD
*
&P.TIME  DC    CL5' '             CURRENT TIME IN HH.MM
         DC    C' '               OVERFLOW FROM TIME FIELD
&P.STAT1 DC    X'00'              STATUS BYTE FOR THE PROCESS
&P.S1PRC EQU   X'80'              HAVE A PROC STATEMENT
&P.S1EXC EQU   X'40'              HAVE AN EXEC CARD
&P.S1DD  EQU   X'20'              HAVE A DD CARD.....
&P.PDSFF DC    X'00'              SET TO FF FOR PDS END OF MEMBERS
*
*                    MEMBER OVERRIDE DATA FROM GLOBAL, OPTIONS, AND THE
*                    INDIVIDUAL MEMBER REQUESTS
&P.MDATA DS    0D
&P.MFLG1 DC    X'00'              FLAG ONE FOR MEMBER DATA
&P.M1NAB EQU   X'80'              DO NOT ABEND THIS RUN
&P.M1PDS EQU   X'40'              PROCESSING A FULL PDS THIS RUN
&P.M1INT EQU   X'20'              PROCESSING FROM INTROLIB
&P.M1REF EQU   X'10'              REFORMAT THIS ONE IF PROPER ENOUGH
&P.M1NOL EQU   X'08'              NO LISTING OF THE REFORMATTED ONE
&P.M1NCL EQU   X'04'              NO COLUMN CHECK MESSAGES          NTL
&P.M1NCM EQU   X'02'              NO BOZO COMMENT MESSAGES          NTL
*
&P.MFLG2 DC    X'00'              REQUEST FLAG TWO
&P.MSEV  DC    H'0'               SEVERITY ALLOWED FOR REFORMATTING
&P.MINCR DC    PL5'0'             INCREMENT FOR REFORMATTING
&P.MNEW1 DC    PL5'0'             STARTING SEQUENCE NUMBER
&P.MDATL EQU   *-&P.MDATA         LENGTH OF GLOBAL/MEMBER DATA FIELD
*
&P.MDDOT DC    CL8' '             DDNAME OF THE OUTPUT FILE
&P.MNEWN DC    CL8' '             MEMBER NAME OF THE OUTPUT MEMBER
&P.CHSYM DC    A(0)               ADDRESS OF SYMBOLICS CHAIN START
&P.ENDCM DC    A(0)               POINTER TO END-OF-PROC COMMENT CHAIN
*
*
*                    CHANGABLE DATE FROM INDIVIDUAL LINES/SCANS
         ORG   &P.START+X'450'
&P.TNAME DC    CL8' '             NAME FROM TYPE-SCAN SUBROUTINE
&P.RSTRT DC    A(0)               FIRST REAL CHARACTER ON CARD
&P.REND  DC    A(0)               LAST CHARACTER ON THE CARD
&P.CARDN DC    PL2'0'             CARD NUMBER OF ENTRY
&P.COLTP DC    H'0'               COLUMN NUMBER OF TYPE CODE
*                    AND THE CURRENT EXEC BLOCK
&P.EXCHN DC    A(0)               START OF EXECUTE BLOCK CHAIN
&P.EXEND DC    A(0)               LAST/CURRENT EXEC BLOCK
*                    TO THE LAST DD BLOCK OF CURRENT EXEC BLOCK
&P.DDLST DC    A(0)               CURRENT/LAST DD BLOCK USED
*                    NEXT ONES ARE POINTERS TO CURRENT COMMENT BLOCK
&P.THISC DC    A(0)               START OF CURRENT COMMENT BLOCK
&P.LASTC DC    A(0)               LAST ENTRY IN THE STRING
*
*
*                    SAVE/COMMUNICATION AREA FOR READER AND WRITER
         ORG   &P.START+X'500'
         READ  &P.RDECB,SF,&P.ADSLB,0,MF=L
&P.RSAV  DC    3F'0'                  SAVE MAIN POINTERS
&P.RNEXT DC    A(0)               POINTER TO THE RETURNED RECORD
&P.LINUM DC    PL5'0'             LINE NUMBER OF THIS ONE
*
*
         WRITE &P.WDECB,SF,&P.APOUT,0,MF=L
&P.WPTR  DC    4F'0'              POINTERS FOR THE REBLOCKING
&P.WDD   DC    CL8' '             DDNAME OF THE FILE NOW OPEN
*
&P.WFLAG DC    X'00'              REQUEST FLAG FOR THE WRITING
&P.WFOPN EQU   X'80'              OPEN UP THE MEMBER
&P.WFEOF EQU   X'40'              END OF MEMBER - STOW IT
*
*                    FOLLOWING FIELDS MAKE UP THE STOW LIST
&P.STLBT DC    0F'0',H'0,12'        LENGTH BYTE FOR THE STOW LIST
&P.WMBR  DC    CL8' '             MEMBER NAME IN THE STOW LIST
&P.STTTR DC    XL3'00'            TTR OF THE MEMBER
&P.STC   DC    X'00'              ATTRIBUTE BYTE - NO ALIAS, NO TTRSN
&P.STLNG EQU   *-&P.STLBT         NO USER DATA
&P.IREC# DC    PL5'0'             INPUT RECORD NUMBER OF THIS ONE
*
*
*                    THE COMMUNICATION AREA FOR THE ERROR PROCESSOR
         ORG   &P.START+X'580'
&P.ERREG DC    12F'0'  R1-R12     SAVE THE REGISTERS HERE UPON ENTRY..
&P.ERV1  DC    A(0)               ADDRESS OF FIRST INSERT FIELD
&P.ERV2  DC    A(0)               AND ON, AND ON
&P.ERV3  DC    A(0)
&P.ERV4  DC    A(0)
&P.ERV5  DC    A(0)
&P.ERV6  DC    A(0)
&P.POINT DC    H'0'               POINT TOTAL FOR THE PROC - ERROR SEV
&P.ABWTO WTO   'PSN903 - ERROR REQUESTED BY XXXXXXXX AT +YYY',         X
               ROUTCDE=11,MF=L
&P.ABWMD EQU   &P.ABWTO+32,8
&P.ABWDS EQU   &P.ABWTO+45,3
&P.SNAP  SNAP  DCB=PSWADSNP,ID=0,PDATA=(REGS,SAH,SPLS),                X
               LIST=&P.SNAPL,MF=L
&P.SNAPL DC    A(&P.START),X'80',AL3(&P.WEND)  SNAP ADDRESS LIST
         DC    2A(0)              EXPANSION OF THE SNAP LIST
         DC    2A(0)              EXPANSION OF THE SNAP LIST
         DC    2A(0)              EXPANSION OF THE SNAP LIST
&P.ECTRS DC    A(0)               POINTER TO THE ERROR COUNTERS
*                    BUILD AREA FOR THE MESSAGE
&P.ERSTM DC    C' '               SINGLE SPACE THESE MESSAGES
&P.ERMBR DC    CL8' '
&P.ERMSK DC    XL13'00'           EDIT MASK FOR THE LINE NUMBER
&P.EBILD DC    CL136' '           MESSAGE BUILDING AREA
&P.ERRSV DC    5F'0'  R14-R2      SAVE REGS IF CRITICAL
*
*
*
*                    WORK/HOLD AREA OF THE REPORT PRINTER
         ORG   &P.START+X'700'
&P.BUFSV DS    A(0)               SAVE ADDRESS OF LAST OUTPUT BUFFER
&P.SPARB DC    A(&P.XWORK)        ADDRESS OF SPARE WORK AREA
&P.LINCT DC    H'999'             LINE COUNTER
&P.MAXLN DC    H'58'              MAXIMUM LINES PER PAGE
&P.PAGE  DC    PL3'0'             PAGE NUMBER
&P.RMODE DC    CL11' '            MODE OF LISTING                   NTL
&P.RDSN  DC    CL44' '            REPORT DSNAME TO USE              NTL
*
*
*                    COMMUNICATION AREA FOR SCAN/SUBSTITUTE PROCESSORS
         ORG   &P.START+X'780'
&P.SCAND DS    0D
&P.SKEY  DC    A(0)               POINTER TO THE KEYWORD
&P.SDAT  DC    A(0)               POINTER TO THE OPERAND STRING
&P.SCOM  DC    A(0)               POINTER TO THE COMMENT STRING
*
&P.SKEYL DC    H'0'               LENGTH OF THE KEYWORD
&P.SDATL DC    H'0'               LENGTH OF THE OPERAND
&P.SCOML DC    H'0'               LENGTH OF THE COMMENT
&P.SCOLN DC    H'0'               COLUMN NUMBER OF START OF KEY
*
&P.SCANI DC    X'00'              SCAN INDICATOR
&P.SIEND EQU   X'80'              END OF SCAN - BLANK AT END
&P.SIVAL EQU   X'40'              HAVE A VALUE FOR THIS
&P.SIMOR EQU   X'20'              MORE DATA ON THIS LINE
&P.SICOM EQU   X'10'              HAVE A COMMENT ON THIS LINE
&P.SINOD EQU   X'08'              NO DATA AFTER AN EQUAL SIGN
&P.SIVQT EQU   X'04'              VALUE IS IN QUOTES
*
         DS    0F
&P.SCANL EQU   *-&P.SCAND         LENGTH OF THE SCAN DATA
*
*
         ORG   &P.START+X'7C0'
&P.SYMDT DS    0D
&P.SYEND DC    A(0)               NEW END OF OUTPUT AREA
&P.SYNUM DC    H'0'               COUNT OF SUBSTITUTIONS
&P.LSD   EQU   *-&P.SYMDT
*
*
*                    CONSTANTS OF PROBABLE USE IN THE PROCESS
         ORG   &P.START+X'800'
&P.HEXTR EQU   *-240
         DC    C'0123456789ABCDEF'
&P.BLANK DC    CL136' '           UTILITY BLANKING AREA
&P.HALF8 DC    H'8'               MAX LENGTH FOR 'THINGS'
&P.HALF4 DC    H'4'               FOR RETURN CODE CHECKING
&P.HALF2 DC    H'2'               FOR DOUBLE READJUSTMENT
&P.HEXZ  DC    XL30'00'           SOME HEX ZEROES
&P.PZERO DC    PL5'0'             UTILITY PACKED ZERO
&P.PONE  DC    P'1'               FOR ADDING TO PACKED THINGS
&P.SJCL  DC    C'//'              HOW JCL STATEMENTS START
&P.CPROC DC    C'PROC '           CONSTANT FOR PROC STATEMENT
&P.CEXEC DC    C'EXEC '           AND FOR THE EXEC STATEMENT
&P.CDD   DC    C'DD '             THE EVERPRESENT DD STATEMENT
&P.CZERO DC    32C'0'             CONSTANT CHARACTER ZEROES
*
*
*                    WORK/COMMUNICATION AREA FOR INTERNAL PARSER
         ORG   &P.START+X'A00'
&P.IPBEG DC    A(0)               BEGINNING OF TEXT TO SCAN
&P.IPEND DC    A(0)               LAST CHARACTER TO CONSIDER
&P.INTPS DS    0D                 START OF INTERNAL PARSE WORKAREA
&P.IPOP1 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP2 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP3 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP4 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP5 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP6 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP7 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP8 DC    AL1(0),AL3(0)      SUB-OPERAND
&P.IPOP9 DC    AL1(0),AL3(0)      SUB-OPERAND
*
&P.IPSB1 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPSB2 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPSB3 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPSB4 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPSB5 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPSB6 DC    AL1(0),AL3(0)      SUBLIST POINTER
&P.IPLNG EQU   *-&P.INTPS         LENGTH OF INTERNAL PARSE WORKAREA
*
*
*                    WORK AREA FOR THE SCAN PROCESSOR - KEYWORDS
         ORG   &P.START+X'A80'
&P.WSCAN DC    6D'0'              SCAN WORKAREA
*
*
*                    WORK AREA FOR KEYWORD SCANNING - CONTINUATION
         ORG   &P.START+X'B00'
&P.SCHLD DC    CL256' '           CONTINUATION BUILDING AREA
*              SOME CONTINUATIONS ARE QUITE LARGE....
*
*                    WORK/COMMUNICATION AREA FOR THE DIRECTORY READER
         ORG   &P.START+X'C00'
&P.IDENT DC    F'0'               FIRST-TIME SWITCH FOR PDS PROCESSOR
&P.IECB  DC    F'0'               ECB FOR DIRECTORY READS
&P.IIOB  DS    0D
&P.IFLAG DC    X'42000000'        FLAGS FOR THE READ
&P.IECBA DC    A(&P.IECB)         ADDRESS OF THE ECB
         DC    X'00'              FLAG 3
&P.ICSW  DC    XL7'00'            CHANNEL STATUS WORD RETURNED
&P.ICHNP DC    A(&P.ICCWS)        ADDRESS OF THE CHANNEL PROGRAM
&P.IDCBA DC    A(&P.ASLDI)        ADDRESS OF THE DCB
         DC    2F'0'
&P.ISEKA DC    XL8'00'            FULL SEEK ADDRESS
&P.IIOBL EQU   *-&P.IIOB          LENGTH OF THIS THING
*
&P.IPTRS DC    2F'0'              POINTERS FOR DEBLOCKING
&P.ICCWS DS    0D                 THE CHANNEL PROGRAM ITSELF
         CCW   X'31',&P.ISEKA+3,X'60',5    SEARCH ID EQUAL
         CCW   X'08',&P.ICCWS,X'60',1      TIC   *-8
         CCW   X'86',&P.IBUFR,X'60',256    MT READ DATA
         CCW   X'92',&P.ISEKA+3,X'20',5    MT READ COUNT OF NEXT BLOCK
*
&P.MNAME DC    CL8' '             WORK AREA FOR GENERIC PROCESSING  NTL
&P.MMASK DC    XL8'00'            MASK FOR MEMBER SELECTION         NTL
&P.MMEMB DC    CL8'********'      INPUT NAME FOR MEMBER SELECTION   NTL
         ORG   &P.START+X'C80'
&P.IBUFR DC    CL256' '           BUFFER FOR PDS DIRECTORY READS
*
*
*                    FURTHER WORKAREAS AS NEEDED
         ORG   &P.START+X'D80'
*
*
*
*
*
*                  LAST PART OF ADDRESSABLE - A SPARE NON-GUARANTEED
*                  WORK AREA
         ORG   &P.START+X'F00'
&P.XWORK DS    CL256' '           SPARE - MAY BE OVERWRITTEN ANY TIME
*
*                    START OF THE REMOTELY-ADDRESSED AREA
         ORG   &P.START+X'1000'
*
*                    THE FAMILY OF TRANSLATE AND TEST TABLES
*
*                    SCAN FOR THE QUOTE (ONLY)
&P.DTRQT DC    32D'0'             SCAN FOR JCL DELIMITERS
         ORG   &P.DTRQT+C''''
         DC    X'04'
         ORG
*
*                    TO SCAN FOR PARENTHESIS IN THE VALUE LIST
&P.DTRPR DC    32D'0'
         ORG   &P.DTRPR+C'('      ANOTHER NESTING OF PARENTHESIS
         DC    X'04'
         ORG   &P.DTRPR+C')'      EXITING A NESTING
         DC    X'08'
         ORG   &P.DTRPR+C' '      ENDED WITHOUT A FINAL ONE
         DC    X'0C'
         ORG
*
*                    TO SCAN FOR INTERNAL DATA INTERRUPTIONS
&P.DTRKY DC    32D'0'
         ORG   &P.DTRKY+C' '      THIS IS THE ONE NEEDED
         DC    X'04'
         ORG   &P.DTRKY+C','      THIS IS THE ONE NEEDED
         DC    X'08'
         ORG   &P.DTRKY+C'='      THIS IS THE ONE NEEDED
         DC    X'0C'
         ORG
*
*                   TO SCAN FOR FIRST NON-BLANK
&P.DTRBK DC    64F'-1'            ALL OF THEM ARE HITS
         ORG   &P.DTRBK+C' '      EXCEPT FOR THIS
         DC    X'00'
         ORG
*
*                   TO SCAN FOR END OF SYMBOLIC NAME
*                    00-NOSTOP  FF-SURESTOP  04-SHOULD NOT OCCUR
&P.DTRSY DC    32D'0'             IGNORE MOST OF THESE
         ORG   &P.DTRSY+C' '      EXCEPT FOR THIS
         DC    X'FF'
         ORG   &P.DTRSY+X'4A'
         DC    X'04FF04FFFF04FF'
         ORG   &P.DTRSY+X'5A'
         DC    X'0400FFFF0404FFFF'
         ORG   &P.DTRSY+X'6A'
         DC    X'04FF00040404'
         ORG   &P.DTRSY+X'7A'
         DC    X'040000FFFF04'
         ORG
*
*                    TO SCAN FOR START OF A SYMBOLIC SUBSTITUTION
&P.DTRSB DC    32D'0'
         ORG   &P.DTRSB+C'&&'     THIS IS THE ONE NEEDED
         DC    X'04'
         ORG
*
*                    TO TEST A FIELD FOR NUMERIC
&P.DTRNM DC    64F'-1'
         ORG   &P.DTRNM+C'0'
         DC    10X'00'            ALLOW THESE VALUES TO PASS
         ORG
*
*                    TO SCAN FOR INTERNAL PARSING OF AN EXPRESSION
&P.DTRSP DC    32D'0'
         ORG   &P.DTRSP+C''''     START/STOP THE SCAN FOR FULL LENGTH
         DC    X'04'
         ORG   &P.DTRSP+C','      STANDARD DELIMITER
         DC    X'08'
         ORG   &P.DTRSP+C'('      START OF INTERNAL LIST
         DC    X'0C'
         ORG   &P.DTRSP+C')'      END OF THIS SUBSIDERARY LIST
         DC    X'10'
         ORG
*
*                  THE AREA USED FOR SAVEAREA/WORKAREA BY ALL MODULES
&P.SCRT  DS    CL1024             THE SCRATCHPAD/SAVEAREA
&P.SCRTX EQU   *
*
*                   THE FAMILY OF COUNTERS
&P.CTR   DS    0D
&P.CREQ  DC    F'0',CL28'NUMBER OF MEMBER REQUESTS'
&P.CREPL DC    F'0',CL28'NUMBER OF REPLACED MEMBERS'
&P.CGOOD DC    F'0',CL28'PASSED ALL EDITS'
&P.CBAD  DC    F'0',CL28'FAILED ONE OR MORE EDITS'
&P.CTRX  EQU   *-32               END OF THE COUNTERS
*
.*
*
*                    THE MODULES LIST AND ATTRIBUTES
&P.MODLS DS    0D
&P.MERR  PSNMMOD   PSNERROR,&P.ERROR    COMMON ERROR PROCESSOR
&P.LMODE EQU   *-&P.MERR                LENGTH OF THE ENTRY
&P.MERLS PSNMMOD   PSNERLST,&P.ERLST    ERROR LIST
&P.MSETU PSNMMOD   PSNSETUP,&P.SETUP    SETUP NEXT MEMBER
&P.MREAD PSNMMOD   PSNREAD,&P.READ      READ NEXT LOGICAL PROC RECORD
&P.MPROC PSNMMOD   PSNPROC,&P.PROC      PROCESS THE PROC STATEMENT
&P.MSCAN PSNMMOD   PSNSCAN,&P.SCAN      SCAN FOR DELIMITERS
&P.MTYPE PSNMMOD   PSNTYPE,&P.TYPE      DETERMINE TYPE OF CARD NEXT
&P.MEXEC PSNMMOD   PSNEXEC,&P.EXEC      PROCESS THE EXEC STATEMENT
&P.MDD   PSNMMOD   PSNDD,&P.DD          PROCESS THE DD STATEMENT
&P.MCOMN PSNMMOD   PSNCOMNT,&P.COMNT    PROCESS THE COMMENT CARD
&P.MENDM PSNMMOD   PSNENDM,&P.ENDM      END OF MEMBER PROCESSING
&P.MEDTS PSNMMOD   PSNEDITS,&P.EDITS    EDIT THE STEP
&P.MEDTD PSNMMOD   PSNEDITD,&P.EDITD    EDIT THE DD STATEMENT
&P.MEDTP PSNMMOD   PSNEDITP,&P.EDITP    EDIT THE PROC - WHOLE THING
&P.MSUBS PSNMMOD   PSNSUBST,&P.SUBST    SUBSTITUTE SYMBOLICS PROCESSOR
&P.MEDTX PSNMMOD   PSNEDITX,&P.EDITX    EDIT THE EXECUTE STATEMENT
&P.MDDTB PSNMMOD   PSNDDTAB,&P.DDTAB    TABLE OF DD KEYWORDS
&P.MSUBO PSNMMOD   PSNSUBOP,&P.SUBOP    SUBOPERAND PARSING ROUTINE
&P.MPDSR PSNMMOD   PSNPDSR,&P.PDSR      PDS READ ROUTINE FOR SYSUT1
&P.MREFM PSNMMOD   PSNREFMT,&P.REFMT    REFORMAT SUPERVISOR
&P.MWRIT PSNMMOD   PSNWRITE,&P.WRITE    WRITE-BACK FOR REFORMAT
&P.MRPRC PSNMMOD   PSNRFPRC,&P.RFPRC    REFORMAT THE PROC STATEMENT
&P.MREXC PSNMMOD   PSNRFEXC,&P.RFEXC    REFORMAT THE EXECUTE STATEMENT
&P.MRDD  PSNMMOD   PSNRFDD,&P.RFDD      REFORMAT THE DD STATEMENT
&P.MODX  EQU   *-&P.LMODE               LAST ENTRY
.*
.*                   GENERATE THE READ DCBS AND ASSOCIATED
.*                   EXITS ONLY IF THIS IS THE CSECT
         AIF   ('&T' NE 'D').REALDCB
*
*
&P.ADSLB EQU   *
&P.ADSIN EQU   *
&P.ADTRM EQU   *
&P.ADPRT EQU   *
&P.ADSNP EQU   *
&P.ASLDI EQU   *
&P.APOUT EQU   *
&P.WEND  EQU   *
*
         PSNMERLS
         AGO   .DCBX
.*
.REALDCB ANOP
         DROP  15
         EJECT
*
*                    THE TRANSPARENT LOADING ROUTINE USED TO BRING
*                    EACH OF THE ABOVE IN AS REQUESTED.
&P.LOADR DS    0H
         STM   14,12,12(13)       FREE UP SOME REGISTERS
         BALR  12,0               AND MAKE ME A NEW BASE
         USING *,12               FOR ALL TO SEE
*                    R15 POINTS TO THE MODULE DEFINITION -
*                    SAVE AND USE THAT POINTER TO BLDL AND
*                    LOAD THE PROCESSOR, AND THEN GO TO THAT PROCESSOR
         LR    3,15               SAVE POINTER TO MODULE DEFINITION
         MVC   &P.BLDL+4(8),4(3)  MOVE NAME TO BLDL LIST
         BLDL  0,&P.BLDL
         LTR   15,15              WELL, DID IT WORK
         BNZ   &P.NOLOD           NO - SPECIAL SITUATION
         LA    0,&P.BLDL+4        POINT TO MEMBER NAME, NOW
         LOAD  DE=(0)             AND BRING IN THE SUCKER
         LR    15,0               EP OF MODULE IN PLACE
         L     1,12(,3)           ORIG ADDRESS OF THE COME-FROM
         ST    15,0(,1)           ADDRESS OF THE MODULE ITSELF, NOW
         MVI   12(3),X'FF'         SHOW THE MODULE LOADED
         L     14,12(,13)         RESTORE THE ORIG RETURN ADDR
         LM    0,12,20(13)        AND REST OF THE REGS, TOO
         BR    15                 AND GO THE THE LOADED MODULE
&P.BLDL  DC    AL2(1,60),CL8' ',XL52'00'    LIST FOR THE BLDL
*
*                    AND IF THE BLDL DID NOT WORK SO WELL
&P.NOLOD DS    0H
         MVC   &P.NLWTO+38(8),4(3)  MODULE NAME IN WTO
&P.NLWTO WTO   'PSN901-MODULE NOT AVAILABLE - XXXXXXXX - BLDL FAILED', X
               ROUTCDE=(1,2,11)
         L     14,12(,13)         RESTORE THE RETURN ADDRESS
         LA    15,20              A REALLY BAD RETURN CODE FROM THIS
         LM    0,12,20(13)        PLUCK BACK THE REST OF THEM
         BR    14
         DROP  12
.*
         EJECT
*  ADSLB DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R,W),RECFM=FB,
*              EXLST=&P.SLBXL
&P.ADSLB DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(R,W),RECFM=FB,            X
               EXLST=&P.SLBXL
         EJECT
*  ADSIN DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,RECFM=FB,LRECL=80,
*              EODAD=&P.SYSIN,EXLST=&P.BLKXL
&P.ADSIN DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,RECFM=FB,LRECL=80,       X
               EODAD=&P.SYSIN,EXLST=&P.BLKXL
         EJECT
*  ADTRM DCB   DDNAME=SYSTERM,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=81,
*              EXLST=&P.BLKXL
&P.ADTRM DCB   DDNAME=SYSTERM,DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=81,    X
               EXLST=&P.BLKXL
         EJECT
*  ADPRT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,RECFM=FBA,LRECL=136,
*              EXLST=&P.BLKXL
&P.ADPRT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,RECFM=FBA,LRECL=136,  X
               EXLST=&P.BLKXL
         EJECT
*  ADSNP DCB   DDNAME=SYSUSNAP,DSORG=PS,MACRF=(W),RECFM=VBA,LRECL=125,
*              BLKSIZE=1632
&P.ADSNP DCB   DDNAME=SYSUSNAP,DSORG=PS,MACRF=(W),RECFM=VBA,LRECL=125, X
               BLKSIZE=1632
         EJECT
*  ASLDI DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(E),DEVD=DA
&P.ASLDI DCB   DDNAME=SYSUT1,DSORG=PO,MACRF=(E),DEVD=DA
         EJECT
*  APOUT DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(R,W),RECFM=FB,
*              EXLST=&P.SLBXL
&P.APOUT DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=(R,W),RECFM=FB,            X
               EXLST=&P.SLBXL
         SPACE 3
*
&P.SLBXL DC    0F'0',X'07',AL3(&P.LJFCB) JFCB-READ FOR SYSUT1
&P.BLKXL DC    X'85',AL3(&P.LR2BK) FILL BLKSIZE FROM LRECL
*
&P.LR2BK DS    0H                 THE EXIT TO FILL IN BLOCKSIZE
         LH    2,62(,1)           PICK UP THE BLOCKSIZE
         LTR   2,2                TEST FOR ZERO BLOCKSIZE
         BNZR  14                 RETURN IF NON-ZERO
         MVC   62(2,1),82(1)      MOVE LRECL TO BLOCKSIZE
         BR    14                 AND BUG OUT
*
&P.LJFCB DC    0D'0',CL176' '     JFCB READIN AREA
.*                   AND ROUND OFF THE SIZE OF THIS ONE
&P.WEND  DS    0D                 END OF THIS AREA
&P.TL    EQU   *-&P.START
&P.ALX   EQU   4096*(1+&P.TL/4096)-&P.TL
         DS    CL(&P.ALX)         FILLER
.DCBX    ANOP
.*
.*
&P.LENG  EQU   *-&P.START
.EXIT    ANOP
         POP   PRINT                                                NTL
         MEND
