TTRL     TITLE '-- TRACE ADDRESS SPACE TCB-RB''S CHAIN --'
*---------------------------------------------------------------------*
*                                                                     *
* Purpose :    TSO command, program or routine to list the current    *
*              Address Space TCB-RB's chain.                          *
*              Note : normally the list is outputed to the terminal,  *
*                     but, when the TSO "PUTLINE" function is not     *
*                     available, a "SYSOUT" is dynamically allocated. *
*                     If a pre-allocated "TTRLLIST" FILE or DD-card   *
*                     is present, then, the list is outputed to it.   *
*              Test : pre-allocate a "TTRLTEST" FILE or DD-card to    *
*                     get also internal tables trace list.            *
*                                                                     *
* Syntax :     TSO command       = TTCBRB                             *
*              BATCH execution   = //LSTCB   EXEC PGM=TTCBRB          *
*              In Assembler, LINK or CALL as program or routine with  *
*              register 1 zero   = XR    R1,R1                        *
*                                  LINK  EP=TTCBRB or CALL  TTCBRB    *
*              Last but not least, in ISPF Edit = TRAP TTCBRB         *
*                                  (set the list in the Edit data)    *
*                                                                     *
* Author :     MOINIL P.A.                                            *
*              Computing Centre (TP 361)                              *
*              J.R.C. - Ispra Establishment                           *
*              21020 Ispra (VA), Italy                                *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE 1
*------- MISCELLANEOUS DEFINITIONS
         SPACE 1
&MXT     SETA  500                 ESTIMATED MAXIMUM NUMBER OF TCB'S
&MXR     SETA  500                 ESTIMATED MAXIMUM NUMBER OF RB'S
&SHC     SETC  'X'                 SYSOUT HOLD CLASS
         EJECT
TTCBRB   START 0
         SPACE 1
         PRINT OFF
LVTCBA   EQU   ((((&MXT+1)*LVTI)+7)/8)*8 LENGTH TCB'S WORK ADDRESSES
LVTCBI   EQU   ((((&MXT+1)*LVTB)+7)/8)*8 LENGTH TCB'S INFORMATION
LVTRBN   EQU   ((((&MXR+1)*LVTR)+7)/8)*8 LENGTH RB'S INFORMATION
LVTALL   EQU   LVTCBA+LVTCBI+LVTRBN LENGTH OF VECTOR WORK-AREA
         PRINT ON
         PRINT NOGEN
        $DEFREG
        $XENT  BASE=(R11,R12)
         XR    R10,R10
         LR    R2,R1               GET ENTRY REGISTER
        EXTRACT ATIOT,'S',FIELDS=(TIOT,TSO,PSB)
         ICM   R1,B'1111',APSCB    PSCB ADDRESS, TSO RUNNING ?
         BZ    SRDD                NO, BATCH
         LTR   R2,R2               YES, TRY CPPL ADDRESSABILITY?
         BZ    TSTSO               NONE (ZERO = CALL OR LINK)
         TM    0(R2),X'80'         R1 AS JCL EXEC PROGRAM?
         BO    TSTSO               YES
         USING CPPL,R2
         USING PSCB,R1
         CLC   PSCBUPT,CPPLUPT     CPPL+4 = UPT ADDRESS ?
         BNE   *+L'*+10            NO
         DROP  R1
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS ?
         BE    OK                  YES, TSO COMMAND
         LR    R1,R2
         USING IKJEBECA,R1
         L     R2,CAPTTMP          CPPL ADDRESS
         DROP  R1
         CLC   APSCB(L'APSCB),CPPLPSCB  CPPL+8 = PSCB ADDRESS ?
         BE    OK                  YES, TSO SUB-COMMAND
TSTSO    L     R1,ATSO             TSO-FLAG ADDRESS
         TM    0(R1),X'80'
         BZ    SRDD
         OI    SWITCH,SWFOR        SAY TSO FOREGROUND
         B     SRDD
OK       ST    R2,CPPLADDR         RETAIN CPPL ADDRESS
         DROP  R2
SRDD     L     R2,ATIOT            SEARCH DD
         USING TIODSECT,R2
SRDD1    CLC   =F'0',TIOELNGH
         BE    SRDD2
         CLC   DDNML,TIOEDDNM
         BNE   *+L'*+8
         OI    SWITCH,SWLIST
         B     *+L'*+14
         CLC   DDNMT,TIOEDDNM
         BNE   *+L'*+4
         OI    SWITCH,SWTEST
         XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R2,R1
         B     SRDD1
         DROP  R2
SRDD2    TM    SWITCH,SWLIST+SWTEST
         BO    GTDTTM
         BZ    *+L'*+18
         TM    SWITCH,SWLIST
         BO    GTDTTM
         MVC   DDNML,DDNMT
         B     GTDTTM
         OC    CPPLADDR,CPPLADDR   TSO PUTLINE AVAILABLE?
         BZ    *+L'*+8             NO
         OI    SWITCH,SWPTL        YES, USE IT
         B     GTWAS
         TM    SWITCH,SWFOR        HOW RUNNING?
         BO    *+L'*+12            TSO FOREGROUND
         LA    R1,WDTUP1           TSO BACKGROUND OR BATCH
         ST    R1,WDSTXTPP         ALLOCATE SYSOUT=*
         B     *+L'*+8
         LA    R1,WDTUP2           TSO FOREGROUND
         ST    R1,WDSTXTPP         ALLOCATE SYSOUT=X
         LA    R1,WD               REQUEST BLOCK ADDRESS
        DYNALLOC
         LTR   R15,R15             DYNAMIC ALLOCATION OK?
         BZ    DYNOK               YES
         CVD   R15,WORKD
         MVC   WORKD(4),=XL4'40202120'
         ED    WORKD(4),WORKD+L'WORKD-2
         MVC   MSGDAEC(L'MSGDAEC),WORKD
         UNPK  MSGDAER(2*L'WDSERROR+1),WDSERROR(L'WDSERROR+1)
         TR    MSGDAER(2*L'WDSERROR),TRHEX-C'0'
         MVI   MSGDAER+2*L'WDSERROR,C' '
         UNPK  MSGDAEI(2*L'WDSINFO+1),WDSINFO(L'WDSINFO+1)
         TR    MSGDAEI(2*L'WDSINFO),TRHEX-C'0'
         MVI   MSGDAEI+2*L'WDSINFO,C' '
        WTO    MF=(E,MSGDAE)       DIAGNOSE ERROR
         LA    R10,99              SET RC=99
         B     LEAVE
DYNOK    TM    SWITCH,SWFOR        HOW RUNNING?
         BZ    STDDN               TSO BACKGROUND OR BATCH
        WTO    MF=(E,MSGASM)       ADVICE SESSION ALLOCATION DONE
STDDN    MVC   DDNML,WDRTDDN
         B     GTDTTM
GTDTTM   MVC   DDNME,DDNML
        $GFDATE TLNED,WORKD
         LTR   R10,R15
         BZ    STTME
         MVC   LINE(29),=CL29'0 GFDATE routine error : CC ='
         CVD   R10,WORKD
         MVC   LINE+29(4),=XL4'40202120'
         ED    LINE+29(4),WORKD+L'WORKD-2
         MVI   LINE+33,C'.'
         B     SMERR
STTME    MVI   TLNED+L'TLNED-1,C'/'
         MVC   TLNEH(2),WORKD
         MVC   TLNEH+3(2),WORKD+2
         MVC   TLNEH+6(2),WORKD+4
GTWAS    L     R0,=A(LVTALL)       GET VECTORS WORK-AREAS
        GETMAIN RC,LV=(0)
         LTR   R15,R15
         BZ    GTMNOK
         MVC   LINE(14),=CL14'0 GETMAIN RC ='
         CVD   R15,WORKD
         MVC   LINE+14(4),=XL4'40202120'
         ED    LINE+14(4),WORKD+L'WORKD-2
         MVC   LINE+19(30),=CL30': storage not available (size='
         L     R0,=A(LVTALL)
         ST    R0,WORKD
         UNPK  LINE+49(9),WORKD(5)
         TR    LINE+49(8),TRHEX-C'0'
         MVC   LINE+57(2),=CL2').'
         B     SMERR
GTMNOK   ST    R1,AVTWAS
         LR    R5,R1
         LR    R0,R1
         L     R1,=A(LVTALL)
         BASR  R14,0
         XR    R15,R15
         MVCL  R0,R14
         USING VTI,R5
         LR    R6,R5
         AL    R6,=A(LVTCBA)
         ST    R6,AVTCBS
         USING VTB,R6
         LR    R14,R6
         AL    R14,=A(LVTCBI)
         ST    R14,AVTRBS
         LR    R15,R14
         AL    R15,=A(LVTRBN)
         XR    R7,R7
         USING PSA,R0
         L     R2,PSAAOLD          ASCB ADDRESS
         DROP  R0
         USING ASCB,R2
         MVC   WORKD+L'WORKD-3(L'ASCBASID),ASCBASID AS-ID NUMBER
         MVI   WORKD+L'WORKD-1,X'0F'
         UNPK  WORKD(5),WORKD+L'WORKD-3(3)
         TR    WORKD(4),TRHEX-C'0'
         MVC   HEADID(L'HEADID),WORKD
         L     R15,ASCBJBNI
         LTR   R15,R15
         BNZ   *+L'*+10
         L     R15,ASCBJBNS
         LTR   R15,R15
         BZ    *+L'*+6
         MVC   HEADNM(L'HEADNM),0(R15) GET CURRENT AS-NAME
         L     R3,ASCBASXB         ASXB ADDRESS
         DROP  R2
         USING ASXB,R3
         MVC   MAXTCBS,ASXBTCBS    NUMBER OF TCB'S
         CLC   MAXTCBS,=Y(&MXT)
         BNH   STCB
         MVC   LINE+30(3),=CL3'TCB'
         MVC   LINE+33(24),=CL24'''s overflow (MXT value).'
MXERR    MVC   LINE(29),=CL29'0 Estimated maximum number of'
SMERR    BAS   R9,STTL             SET TITLE
         DC    AL4(ERRM)
         BAS   R9,PRTL             PRINT LINE
         LR    R10,R15
         B     QUIT
STCB     L     R2,ASXBFTCB         POINTER TO FIRST TCB ON TCB QUEUE
         DROP  R3
         ST    R6,VTIV
         USING TCB,R2
         BAS   R9,MTCB
         XR    R8,R8
STCB1    ICM   R2,B'1111',TCBLTC
         BZ    STCB3
         AL    R5,=A(LVTI)
         AL    R7,=F'1'
STCB2    ST    R6,VTIV
         LR    R8,R6
         BAS   R9,MTCB
         B     STCB1
STCB3    LTR   R8,R8
         BZ    TTRC
         ICM   R2,B'1111',TCBNTC
         BZ    *+L'*+8
         ST    R8,VTNTC
         B     STCB2
         SL    R5,=A(LVTI)
         ICM   R1,B'1111',VTIV
         BZ    TTRC
         ST    R8,VTBQ-VTB(R1)
         LR    R8,R1
         L     R2,VTBT-VTB(R1)
         SL    R7,=F'1'
         B     STCB3
         DROP  R5
MTCB     ST    R7,VTBH             R9 = LINK REGISTER
         ST    R2,VTBT
         MVC   VTBN,TCBNTC
         MVC   VTBO,TCBOTC
         L     R3,TCBLTC
         ST    R3,VTBL
         LTR   R3,R3
         BNZ   *+L'*+12
         MVC   VTBQ,VTNTC
         XC    VTNTC,VTNTC
         USING VTR,R14
         L     R3,TCBRBP           RB FOR EXECUTING PROGRAM
         USING RBBASIC,R3
MTCB1    CLI   RBSTAB1,RBFTPRB     PRB?
         BE    MTCB2               YES, PROCESS IT
         TM    RBSTAB1,RBFTSVRB    SVRB?
         BNO   *+L'*+10            NO
         MVC   VTRN,=CL8' => SVRB'
         B     MTCB3
         TM    RBSTAB1,RBFTTIRB    TIRB?
         BNO   *+L'*+10            NO
         MVC   VTRN,=CL8' => TIRB'
         B     MTCB3
         TM    RBSTAB1,RBFTIRB     IRB?
         BZ    *+L'*+10            NO
         MVC   VTRN,=CL8' => IRB '
         B     MTCB3
         TM    RBSTAB1,RBFTSIRB    SIRB?
         BZ    *+L'*+10            NO
         MVC   VTRN,=CL8' => SIRB'
         B     MTCB3
         MVC   VTRN,=CL8'what RB?'
         B     MTCB3
MTCB2    TM    RBCDFLGS,RBCDSYNC   SYNCH RB?
         BZ    *+L'*+10            NO, SKIP
         MVC   VTRN,=CL8'SYNCH-RB'
         B     MTCB3
         L     R4,RBCDE            CDE POINTER
         USING CDENTRY,R4
         MVC   VTRN,CDNAME
MTCB3    ST    R3,VTRA             RB ADDRESS
         NI    VTRA,255-X'80'
         TM    RBSTAB1,RBWAITP
         BZ    *+L'*+4
         OI    VTRA,X'80'          AN ECB POINTS ON THIS RB
         TM    RBSTAB2,RBTCBNXT
         BO    MTCB4
         XR    R0,R0
         ICM   R0,B'0111',RBLINKB
         BZ    MTCB4
         CLR   R0,R2
         BE    MTCB4
         LR    R1,R14
         AL    R14,=A(LVTR)
         CLR   R14,R15
         BNL   MXROV
         ST    R1,VTRL
         LR    R3,R0
         B     MTCB1
MTCB4    ST    R14,VTBR
         DROP  R2,R3,R4,R6,R14
         AL    R14,=A(LVTR)
         CLR   R14,R15
         BNL   MXROV
         AL    R6,=A(LVTB)
         BR    R9                  RETURN
MXROV    MVC   LINE+30(2),=CL2'RB'
         MVC   LINE+32(24),=CL24'''s overflow (MXT value).'
         MVI   LINE+47,C'R'
         B     MXERR
         SPACE 1
TTRC     TM    SWITCH,SWTEST       "TEST" REQUESTED?
         BZ    LTCB                NO
         MVC   DDNME,DDNMT         YES
         MVC   HTRCID,HEADID
         MVC   HTRCNM,HEADNM
         BAS   R9,STTL             SET TITLE
         DC    AL4(HTRC)
         L     R2,AVTCBS
         USING VTB,R2
         LA    R7,LINE+2
         USING LNE,R7
         LR    R0,R2
         LA    R1,LNET
         LA    R15,=CL4'"Q"='
         BAS   R14,PADL
         L     R0,=A(LVTB)
         LA    R1,LNEN
         LA    R15,=CL4'L''Q='
         BAS   R14,PADL
         L     R0,AVTRBS
         LA    R1,LNEO
         LA    R15,=CL4'"R"='
         BAS   R14,PADL
         L     R0,=A(LVTR)
         LA    R1,LNEL
         LA    R15,=CL4'L''R='
         BAS   R14,PADL
         BAS   R9,PRTL             PRINT LINE
         BAS   R9,PRTL             LINE SPACE
TTRC1    LA    R7,LINE+2
         LA    R0,LLNE             APPLY LEVEL-SHIFT
         CL    R0,VTBH
         BL    *+L'*+4
         L     R0,VTBH
         ALR   R7,R0
         ALR   R7,R0
         L     R0,VTBT             SET TCB LINE(S)
         LA    R1,LNET
         LA    R15,=CL4'TCB='
         BAS   R14,PADL
         L     R0,VTBN
         LA    R1,LNEN
         LA    R15,=CL4'NTC='
         BAS   R14,PADL
         L     R0,VTBO
         LA    R1,LNEO
         LA    R15,=CL4'OTC='
         BAS   R14,PADL
         L     R0,VTBL
         LA    R1,LNEL
         LA    R15,=CL4'LTC='
         BAS   R14,PADL
         L     R8,VTBR
         LR    R0,R8
         LA    R1,LNEC
         LA    R15,=CL4'<R>='
         BAS   R14,PADL
         BAS   R9,PRTL             PRINT LINE
         L     R0,VTBQ
         LA    R1,LNEN
         LA    R15,=CL4'<Q>='
         BAS   R14,PADL
         USING VTR,R8
TTRC2    L     R0,VTRL
         LA    R1,LNEO
         LA    R15,=CL4'<R>='
         BAS   R14,PADL
         L     R0,VTRA
         SLL   R0,1
         SRL   R0,1
         LA    R1,LNEL
         LA    R15,=CL4' RB='
         TM    VTRA,X'80'
         BZ    *+L'*+4
         LA    R15,=CL4'WRB='
         BAS   R14,PADL
         LA    R1,LNEC
         USING POU,R1
         MVC   POU1,=CL4'CDE='
         MVC   POU2,VTRN
         BAS   R9,PRTL             PRINT LINE
         ICM   R8,B'1111',VTRL
         BNZ   TTRC2
         DROP  R1,R2,R7,R8
         AL    R2,=A(LVTB)
         CLR   R2,R6
         BL    TTRC1
         MVC   LINE(31),=CL31'0 End of Address Space TCB-RB''s'
         MVC   LINE+32(12),=CL12'trace (test)'
         MVC   LINE+45(5),=CL5'list.'
         BAS   R9,PRTL             PRINT LINE
         BAS   R9,STTL             SET TITLE
         DC    AL4(HSNP)
         MVI   LTLNE,TLNES
         BAS   R9,PRTL             LINE SPACE (FORCE TITLE)
         MVI   LTLNE,TLNEL
         L     R1,=V(#SNSW#)
         MVI   0(R1),1             REDUCE OUTPUT
         L     R2,AVTWAS
         LA    R3,=A(LVTALL)
        $SNAP  (R2),(R3),DDNME
         LTR   R10,R15
         BNZ   QUIT
         SPACE 1
LTCB     MVC   DDNME,DDNML
         BAS   R9,STTL             SET TITLE
         DC    AL4(HEAD)
         MVC   LINE+10(30),=CL30'Number of TCB''s ("ASCBTCBS") ='
         LH    R0,MAXTCBS          NUMBER OF TCB'S
         CVD   R0,WORKD
         MVC   LINE+40(6),=XL6'402020202120'
         ED    LINE+40(6),WORKD+L'WORKD-3
         MVI   LINE+46,C'.'
         BAS   R9,PRTL             PRINT LINE
         BAS   R9,PRTL             LINE SPACE
         L     R2,AVTCBS
         USING VTB,R2
LTCB1    LA    R7,LINE+2
         USING LNP,R7
         LA    R0,LLNP             APPLY LEVEL-SHIFT
         CL    R0,VTBH
         BL    *+L'*+4
         L     R0,VTBH
         ALR   R7,R0
         ALR   R7,R0
         L     R0,VTBT             SET TCB LINE(S)
         LA    R1,LNPT
         LA    R15,=CL4'TCB='
         BAS   R14,PADL
         L     R3,VTBR
         USING VTR,R3
LTCB2    L     R0,VTRA
         SLL   R0,1
         SRL   R0,1
         LA    R1,LNPA
         LA    R15,=CL4' RB='
         TM    VTRA,X'80'
         BZ    *+L'*+4
         LA    R15,=CL4'WRB='
         BAS   R14,PADL
         LA    R1,LNPC
         USING POU,R1
         MVC   POU1,=CL4'CDE='
         MVC   POU2,VTRN
         BAS   R9,PRTL             PRINT LINE
         ICM   R3,B'1111',VTRL
         BNZ   LTCB2
         ICM   R2,B'1111',VTBQ
         BNZ   LTCB1
         DROP  R1,R2,R3,R7
         MVC   LINE(31),=CL31'0 End of Address Space TCB-RB''s'
         MVC   LINE+32(5),=CL5'chain'
         MVC   LINE+38(5),=CL5'list.'
         BAS   R9,PRTL             PRINT LINE
         SPACE 1
QUIT     TM    SWITCH,SWPTL
         BO    FRWAS
        $PCLOSE
         LTR   R10,R10
         BNZ   FRWAS
         LR    R10,R15
FRWAS    ICM   R1,B'1111',AVTWAS
         BZ    LEAVE
         L     R0,=A(LVTALL)
        FREEMAIN R,A=(1),LV=(0)    FREE VECTORS WORK-AREAS
         PRINT NOGEN
LEAVE   $XRET  CC=(R10)
         PRINT GEN
         SPACE 1
PADL     ST    R0,WORKD            R14 = LINK REGISTER
         MVI   WORKD+4,X'0F'
         USING POU,R1
         MVC   POU1,0(R15)
         UNPK  POU2(L'POU2+1),WORKD(5)
         TR    POU2(L'POU2),TRHEX-C'0'
         MVI   POU2+L'POU2,C' '
         DROP  R1
         BR    R14                 RETURN
STTL     ICM   R1,B'1111',0(R9)    R9 = LINK REGISTER
         BCTR  R1,0
         MVC   TLNET(L'TLNET),TLNET-1
         LA    R0,L'TLNET
         XR    R15,R15
         IC    R15,0(R1)
         LTR   R15,R15
         BZ    4(R9)               NONE, RETURN
         CLR   R15,R0
         BNH   *+L'*+2
         LR    R15,R0
         TM    SWITCH,SWPTL
         BO    STTL1
         BCT   R15,*+L'*+6
         MVC   TLNET(*-*),1(R1)
         EX    R15,*-6
         ZAP   NPG,=PL1'+0'
         ZAP   NLN,=PL2'+99'
         B     4(R9)               RETURN
STTL1    LR    R0,R15
         LA    R15,0(R1,R15)
         LA    R1,1(R1)
         CLI   0(R15),C' '
         BNE   *+L'*+10
         BCTR  R15,0
         BCT   R0,*-10
         B     4(R9)               NONE, RETURN
         BAS   R14,PUTLNE          PUTLINE "TITLE"
         B     4(R9)               RETURN
PRTL     TM    SWITCH,SWPTL        R9 = LINK REGISTER
         BO    PRTL2
         CP    NLN,=PL2'+50'
         BL    PRTL1
         ZAP   NLN,=PL1'+0'
         AP    NPG,=PL1'+1'
         MVC   TLNEP,=XL6'402020202120'
         ED    TLNEP,NPG
        $PRINT TLNE,,DDNME         PRINT "TITLE"
         LTR   R10,R15
         BNZ   QUIT
        $PRINT SPCE,,DDNME         LINE SPACE
         LTR   R10,R15
         BNZ   QUIT
PRTL1   $PRINT LINE,,DDNME         PRINT "LINE"
         LTR   R10,R15
         BNZ   QUIT
         CLI   LINE,C'0'
         BNE   *+L'*+6
         AP    NLN,=PL1'+1'
         AP    NLN,=PL1'+1'
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R9                  RETURN
PRTL2    LA    R0,L'LINE-1
         LA    R1,LINE+1
         LA    R15,LINE+L'LINE-1
         CLI   0(R15),C' '
         BNE   *+L'*+8
         BCTR  R15,0
         BCT   R0,*-10
         BR    R9                  NONE, RETURN
         LA    R14,L'MSGOUT-2
         CLR   R0,R14
         BNH   PRTL3
         CLI   0(R1),C' '
         BNE   *+L'*+8
         LA    R1,1(R1)
         BCT   R0,*-12
         A     R0,=F'1'
         SL    R1,=F'1'
         MVI   0(R1),C'>'          INDICATE LINE SHIFTED
         CLR   R0,R14
         BNH   PRTL3
         LR    R0,R14              TRUNCATE LINE
PRTL3    BAS   R14,PUTLNE          PUTLINE "LINE"
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         BR    R9                  RETURN
         EJECT
*------- PUTLNE - PUTLINE ROUTINE
*        (REGISTERS R2-R10 AND R14 ARE SAVED/RESTORED BY ROUTINE)
*              R14 : LINK REGISTER
* ON ENTRY --- R0 : MESSAGE TEXT LENGTH
*              R1 : POINTS TO THE MESSAGE TEXT
         SPACE 1
PUTLNE   LTR   R0,R0
         BNPR  R14
         STM   R2,R10,SAVEREGS     SAVE CALLER'S REGS
         ST    R14,SAVEREGR
         LA    R2,L'MSGOUT
         CLR   R0,R2
         BNL   *+L'*+2
         LR    R2,R0
         MVI   MSGOUT,C' '         CLEAR BUFFER TO SPACES
         MVC   MSGOUT+1(L'MSGOUT-1),MSGOUT
         BCT   R2,*+L'*+6
         MVC   MSGOUT(*-*),0(R1)
         EX    R2,*-6
         XC    MSGCNTL,MSGCNTL     SET IN PUTLINE LINE LENGTH
         LA    R2,L'MSGCNTL+1(R2)
         STH   R2,MSGCNTL
         LA    R5,MSGWORK          ADDRESS OF MSG BUFFER
         L     R2,CPPLADDR         ADDRESS OF CPPL
         USING CPPL,R2
         L     R3,CPPLUPT          UPT ADDRESS
         L     R4,CPPLECT          ECT ADDRESS
         DROP  R2
         XC    ECBX,ECBX           CLEAR ECB TO ZEROS
         XC    PTPBX(PTPBLEN),PTPBX CLEAR PUT PARMLIST TO ZEROS
         XC    IOPLX(IOPLLEN),IOPLX CLEAR PARM LIST TO ZEROS
         LA    R1,IOPLX            ADDRESS OF LIST
        PUTLINE PARM=PTPBX,UPT=(R3),ECT=(R4),ECB=ECBX,                 X
               TERMPUT=(EDIT,WAIT,NOHOLD,NOBREAK),                     X
               OUTPUT=((R5),TERM,SINGLE,DATA),                         X
               MF=(E,(1))
         LTR   R15,R15             HOW COMPLETE ?
         LM    R2,R10,SAVEREGS     RESTORE CALLER'S REGS
         BNZ   QUIT                UNSUCCESSFULLY ...
         L     R14,SAVEREGR
         BR    R14                 RETURN TO CALLER
         EJECT
*------- CONSTANTS AND WORK-AREAS
         SPACE 1
WORKD    DC    D'0'
ATIOT    DC    A(*-*)
ATSO     DC    A(*-*)
APSCB    DC    A(*-*)
CPPLADDR DC    A(*-*)              PUTLINE USE
AVTWAS   DC    A(*-*)
AVTCBS   DC    A(*-*)
AVTRBS   DC    A(*-*)
VTNTC    DC    F'0'
SAVEREGS DC    9F'0'               SAVE REGS R2-R10 FOR PUTLINE
SAVEREGR DC    F'0'                SAVE REG R14 FOR PUTLINE
IOPLX    DC    0F'0',(IOPLLEN)X'0' I-O PARM LIST FOR PUTLINE
ECBX     DC    F'0'                ECB FOR PUTLINE
PTPBX    DC    0F'0',(PTPBLEN)X'0' PUTLINE PARM BLOCK
MSGWORK  EQU   MSGCNTL,84          PUTLINE WORK USE
MSGCNTL  DC    F'0'                     CONTROL WORD FOR PUTLINE
MSGOUT   DC    CL80' '                  PUTLINE TEXT
DDNME    DC    CL8' '
DDNML    DC    CL8'TTRLLIST'
DDNMT    DC    CL8'TTRLTEST'
TRHEX    DC    CL16'0123456789ABCDEF'
MAXTCBS  DC    H'0'
NLN      DC    PL2'+0'
NPG      DC    PL3'+0'
SWITCH   DC    XL1'0'
SWFOR    EQU   X'80'               FOREGROUND RUN
SWPTL    EQU   X'40'               TSO PUTLINE AVAILABLE
SWLIST   EQU   X'08'               DD-LIST PRESENT
SWTEST   EQU   X'04'               DD-TEST PRESENT
WD       DC    A(WDS+X'80000000')  POINTER TO REQUEST BLOCK
WDS      DS    0F                  REQUEST BLOCK
         DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    AL1(S99VRBAL)       VERB CODE (ALLOCATION)
         DC    AL1(S99NOCNV+S99NOMNT,0) FLAGS
WDSERROR DC    XL2'0'              ERROR REASON CODE
WDSINFO  DC    XL2'0'              INFORMATION REASON CODE
WDSTXTPP DC    A(*-*)              ADDR OF LIST OF TEXT UNIT PTRS
         DC    F'0'                ADDR OF REQ BLK EXTENSION
         DC    XL4'0'              FLAGS FOR AUTHORIZED FUNCTIONS
WDTUP1   DC    A(WDTU1)            TEXT UNIT POINTERS
         DC    A(WDTU4+X'80000000')
WDTUP2   DC    A(WDTU2)            TEXT UNIT POINTERS
         DC    A(WDTU3)
         DC    A(WDTU4+X'80000000')
WDTU1    DC    AL2(DALSYSOU,0)     SYSOUT=*
WDTU2    DC    AL2(DALSYSOU,1,1),C'&SHC' SYSOUT=X
WDTU3    DC    AL2(DALCLOSE,0)     FREE AT CLOSE
WDTU4    DC    AL2(DALRTDDN,1,L'WDRTDDN) RETURN DD-NAME
WDRTDDN  DC    CL8' '              DD-NAME
MSGASM  WTO    ' TTCBRB : Output dynamically allocated to TSO session aX
               s SYSOUT=&SHC ',ROUTCDE=11,DESC=7,MF=L
MSGDAE  WTO    ' TTCBRB : Dynamic allocation error - RC =     REASON=  X
                  INFO=     ',ROUTCDE=11,DESC=7,MF=L
MSGDAEC  EQU   45,4
MSGDAER  EQU   57,4
MSGDAEI  EQU   67,4
MSGDAEL  EQU   *-MSGDAE
         DC    AL1(L'ERRM)
ERRM     DC    C'Address Space TCB-RB''s scan process error message.'
         DC    AL1(HTRCL)
HTRC     DC    C'Address Space TCB-RB''s trace (test) list : '
HTRCNM   DC    CL8' ',CL2' ('
HTRCID   DC    CL4' ',CL2').'
HTRCL    EQU   *-HTRC
         DC    AL1(L'HSNP)
HSNP     DC    C'Snap (dump) all tables array : '
         DC    AL1(HEADL)
HEAD     DC    C'Address Space TCB-RB''s chain list : '
HEADNM   DC    CL8' ',CL2' ('
HEADID   DC    CL4' ',CL2').'
HEADL    EQU   *-HEAD
LTLNE    DC    AL1(TLNEL)
TLNE     DC    CL2'1 '
TLNET    DC    CL80' ',CL6' ---- '
TLNED    DC    CL20' ',CL1' '
TLNEH    DC    CL8'  :  :  ',CL7' - Page'
TLNES    EQU   (*-TLNE)-6
TLNEP    DC    CL6' ',CL1'.'
TLNEL    EQU   *-TLNE
         DC    AL1(L'LINE)
LINE     DC    CL131' '
         DC    AL1(L'SPCE)
SPCE     DC    CL2' '
         SPACE 1
        LTORG
         SPACE 1
VTI      DSECT
VTIV     DS    A                   TCBLTC FIELD VECTOR POINTER
LVTI     EQU   (((*-VTI)+3)/4)*4
         SPACE 1
VTB      DSECT
VTBH     DS    F                   TCB HIERARCHY
VTBQ     DS    A                   LOGICAL CHAINING ADDRESS (QUEUE)
VTBT     DS    A                   TCB ADDRESS
VTBN     DS    A                   TCBNTC FIELD
VTBO     DS    A                   TCBOTC FIELD
VTBL     DS    A                   TCBLTC FIELD
VTBR     DS    A                   VTR POINTER (1ST RB)
LVTB     EQU   (((*-VTB)+3)/4)*4
         SPACE 1
VTR      DSECT
VTRL     DS    A                   NEXT VTR ELEMENT POINTER
VTRA     DS    A                   RB ADDRESS
VTRN     DS    CL8                 CDE NAME
LVTR     EQU   (((*-VTR)+3)/4)*4
         SPACE 1
POU      DSECT
POU1     DS    CL4                 TEXT
POU2     DS    CL8                 ADDRESS/NAME
LPOU     EQU   *-POU
         SPACE 1
LNE      DSECT
LNET     DS    CL(LPOU)            TCB=ADDRESS
         DS    CL2
LNEN     DS    CL(LPOU)            NTC=ADDRESS / <Q>=ADDRESS
         DS    CL2
LNEO     DS    CL(LPOU)            OTC=ADDRESS / <R>=ADDRESS
         DS    CL2
LNEL     DS    CL(LPOU)            LTC=ADDRESS /  RB=ADDRESS
         DS    CL2
LNEC     DS    CL(LPOU)            <R>=ADDRESS / CDE=CDENAME
LLNE     EQU   (L'LINE-((*-LNE)+2))/2
         SPACE 1
LNP      DSECT
LNPT     DS    CL(LPOU)            TCB=ADDRESS
         DS    CL2
LNPA     DS    CL(LPOU)             RB=ADDRESS
         DS    CL2
LNPC     DS    CL(LPOU)            CDE=CDENAME
LLNP     EQU   (L'LINE-((*-LNP)+2))/2
         SPACE 1
         PRINT NOGEN
        IKJCPPL
        IKJPSCB
        IKJEBECA
TIODSECT DSECT
        IEFTIOT1
        IHAPSA LIST=YES
        IHAASCB LIST=YES
        IHAASXB LIST=YES
        IKJTCB LIST=YES
        IKJRB  LIST=YES
        IHACDE
        IKJIOPL
IOPLLEN  EQU   *-IOPL
        IKJPTPB
PTPBLEN  EQU   *-PTPB
        IEFZB4D0
        IEFZB4D2
         PRINT GEN
         SPACE 2
         END
