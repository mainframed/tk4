UJTB     TITLE '-- I E F U J V - MVS/SMF JOB VALIDATION EXIT TABLES --'
UJVTABLE START 0
         SPACE 1
* LIST OF ALL ACTUAL EXISTING DEFINED CLASSES :
* ---------------------------------------------
*
*        A - BATCH
*        B - BATCH
*        C - BATCH
*        D - BATCH
*        E - BATCH + SETUP
*        F - BATCH + SETUP
*        G - BATCH + SETUP
*        H - HEAVILY BATCH (+ SETUP)
*        I - HEAVILY BATCH (+ SETUP)
*        J - HEAVILY BATCH (+ SETUP)
*        Q - ADABAS INACTIVE
*        R - IMS INACTIVE
*        S - SYSTEM
*        T - SIBECA
*        X - BATCH + SETUP
*        Y - BATCH + SETUP
*        Z - BATCH + SETUP
*        1 - BATCH
*        2 - BATCH
*        3 - BATCH
*        4 - BATCH
*        5 - IMS-BATCH
*        6 - CICS
*        7 - ADABAS-BATCH
*        8 - ADABAS + IMS
*        9 - OPERATOR
         EJECT
        $UJVT
         EJECT
        $IDENT ,
* AUTHORIZATIONS TABLE FORMAT (BINARY VALUES) :
* ---------------------------------------------
*
* BY ELEMENT : 0 - 1   = AUTHORIZATION NUMBER.
*              2 - 3   = FIRST AUTHORIZED PROGRAMMER'S NUMBER.
*              4 - 5   = SECOND AUTHORIZED PROGRAMMER'S NUMBER.
*              ...       ...
*              N - N+1 = 0 (END OF ELEMENT).
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* PURPOSE :    IN ORDER TO ALLOW SYSTEM RUN AND ACCESS IN ANY WAY     *
* ---------    (I.E. WHEN THE ACCOUNTING INFORMATION DATA-SET IS      *
*              DESTROYED, READ OPERATIONS OR ACCOUNTING NUMBER        *
*              CONTROLS FAILS, OR CONTROL SUPPRESS IS FORCED), THE    *
*              TABLE BELOW (NAMED 'SYSAUT') WILL BE USED BY 'IEFUJV'  *
*              SMF-EXIT TO CHECK THE SYSTEM ACCOUNTING NUMBERS WHICH  *
*              ARE THOSE OF THE HIGH-SENSITIVE JOBS OR TSO LOGONS.    *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
SYSAUT   DS    0H
         DC    AL2(101,7777,9999,0)
         DC    AL2(103,9,47,91,1118,1497,1532,1690,1691,1884,0)
         DC    AL2(104,1119,0)
         DC    AL2(105,1118,1119,0)
         DC    AL2(106,1118,0)
         DC    AL2(1853,8,0)       ADABAS.
         DC    AL2(1854,8,0)       IMS.
         DC    AL2(1864,8,0)       CICS.
         DC    AL4(0)              END OF TABLE.
         EJECT
* BOXES TABLE FORMAT (BINARY VALUES) :
* ------------------------------------
*
* BY ELEMENT : 0 - 1   = BOX NUMBER.
*              2 - 3   = FIRST PROGRAMMER'S NUMBER.
*              4 - 5   = SECOND PROGRAMMER'S NUMBER.
*              ...       ...
*              N - N+1 = 0 (END OF ELEMENT).
* PURPOSE :    SET THE BOX (ROOM) NUMBER IF NOT SUPPLIED.
         SPACE 1
SYSBOX   DS    0H
         DC    AL2(2,1497,0)
         DC    AL2(22,8,9,47,91,1118,1532,1690,1691,1884,0)
         DC    AL2(38,1119,0)
         DC    AL2(777,7777,9999,0)
         DC    AL4(0)              END OF TABLE.
         SPACE 2
* AUTHORIZATIONS ALLOWED FOR TIME AND/OR I/O
* CONTROL SUPPRESS TABLE FORMAT (BINARY VALUES) :
* -----------------------------------------------
*
* BY ELEMENT : 0 - 1   = AUTHORIZATION NUMBER.
* PURPOSE :    ACCEPT TIME AND/OR I/O CONTROL SUPPRESS IF REQUESTED.
         SPACE 1
SYSIOS   DS    0H
         DC    AL2(101,103,105,106)
         DC    AL2(1853,1854,1864) ADABAS, IMS, CICS.
         DC    AL2(0)              END OF TABLE.
         SPACE 2
* AUTHORIZATIONS FOR SPECIAL TASKS/CLASS (BINARY VALUES) :
* --------------------------------------------------------
*
* BY ELEMENT : 0 - 1   = AUTHORIZATION NUMBER.
*              2 - 3   = PROGRAMMER NUMBER.
*              5       = CLASS.
* PURPOSE :    FORCE THE EXECUTION CLASS.
         SPACE 1
SYSPST   DS    0H
         DC    AL2(1853,8),CL1'8'  ADABAS.
         DC    AL2(1854,8),CL1'8'  IMS.
         DC    AL2(1864,8),CL1'6'  CICS.
         DC    AL2(0)              END OF TABLE.
         EJECT
* TABLE OF CLASS/EXEMPTIONS/FORCE PERF. GROUP :
* ---------------------------------------------
         SPACE 1
* LEVELS HIERARCHY (+1) :
*              IOXC = + PYSL + XCMN + XSTF.
*              PYSL = + XCMN + XSTF.
*              XCMN = + XSTF.
* FORCE PERFORMANCE GROUP (+2) :
*              0 - NO FORCE TO APPLY.
*              1 TO 255 - PERFORMANCE GROUP NUMBER.
         SPACE 1
SYSEXC   DS    0H
         DC    CL1'S',AL1(PYSL),AL1(0)       SYSTEM.
         DC    CL1'9',AL1(PYSL),AL1(0)       OPERATOR.
         DC    CL1'8',AL1(IOXC),AL1(0)       ADABAS, IMS.
         DC    CL1'7',AL1(XCMN),AL1(7)       ADABAS-BATCH.
         DC    CL1'6',AL1(IOXC),AL1(9)       CICS.
         DC    CL1'5',AL1(XCMN),AL1(7)       IMS-BATCH.
         DC    CL1'Q',AL1(XCMN),AL1(7)       ADABAS INACTIVE.
         DC    CL1'R',AL1(XCMN),AL1(7)       IMS INACTIVE.
         DC    CL1'X',AL1(XSTF),AL1(0)
         DC    CL1'Y',AL1(XSTF),AL1(0)
         DC    CL1'Z',AL1(XSTF),AL1(0)
         DC    CL1'E',AL1(XSTF),AL1(0)
         DC    CL1'F',AL1(XSTF),AL1(0)
         DC    CL1'G',AL1(XSTF),AL1(0)
         DC    CL1'H',AL1(XSTF),AL1(0)
         DC    CL1'I',AL1(XSTF),AL1(0)
         DC    CL1'J',AL1(XSTF),AL1(0)
         DC    AL1(0)              END OF TABLE.
         EJECT
* 1. SCHEDULING PRIORITY FOR JOB EXECUTION SELECTION :
* ----------------------------------------------------
*
*    TV(SEC) = CPU(SEC) + (PCOEFF * (I/O'S + LINES + CARDS))/1000
*
*    THE OBTAINED TV(SEC) VALUE IS THEN COMPARED FOR .LT. OR .EQ. WITH
*    THE FOLLOWING TABLE TO DETERMINE THE PRIORITY (0 TO "SCHPRN").
*
*        NOTE - I/O'S = SRB TIME.
         SPACE 1
SCHPRT   DC    A(1*60)             0 = 1 MIN.
         DC    A(2*60)             1 = 2 MIN.
         DC    A(4*60)             2 = 4 MIN.
         DC    A(8*60)             3 = 8 MIN.
         DC    A(15*60)            4 = 15 MIN.
         DC    A(30*60)            5 = 30 MIN.
         DC    A(60*60)            6 = 1 HOUR
         DC    A(120*60)           7 = 2 HOURS
*                                  8 = ...OVER
SCHPRN   EQU   (*-SCHPRT)/L'SCHPRT
*                                  CONTROLS (MUST BE 0).
CT1      EQU   (SCHPRN*L'SCHPRT)-(*-SCHPRT)
CT2      EQU   (*-SCHPRT)-(SCHPRN*L'SCHPRT)
         EJECT
* 2. JOB EXECUTION CLASS :
* ------------------------
*
*    I/O INDEX = THOUSANDS OF I/O'S (SRB TIME).
*
*    THE RESULTING I/O INDEX VALUE IS THEN COMPARED FOR .LT. WITH THE
*    FOLLOWING TABLE TO FIND THE I/O CATEGORY (0 TO "IOCN").
         SPACE 1
IOCS     DC    A(3)                0 = 2.000
         DC    A(11)               1 = 10.000
         DC    A(51)               2 = 50.000
*                                  3 = ...OVER
IOCT     EQU   *-L'IOCS
IOCN     EQU   (*-IOCS)/L'IOCS
*                                  CONTROLS (MUST BE 0).
CT3      EQU   (IOCN*L'IOCS)-((IOCT+L'IOCS)-IOCS)
CT4      EQU   ((IOCT+L'IOCS)-IOCS)-(IOCN*L'IOCS)
         SPACE 2
*    THE JOB REGION PARAMETER VALUE (IN K) IS COMPARED FOR .LT. OR .EQ.
*    WITH THE TABLE BELOW TO FIX THE MEMORY CATEGORY (0 TO "MEMCN").
         SPACE 1
MG       EQU   1024
MEMCT    DC    A(1*MG)             0 =  1 M
         DC    A(2*MG)             1 =  2 M
         DC    A(3*MG)             2 =  3 M
         DC    A(6*MG)             3 =  6 M
         DC    A(32*MG)            4 = 32 M
*                                  5 = ...OVER
MEMCN    EQU   (*-MEMCT)/L'MEMCT
*                                  CONTROLS (MUST BE 0).
CT5      EQU   (MEMCN*L'MEMCT)-(*-MEMCT)
CT6      EQU   (*-MEMCT)-(MEMCN*L'MEMCT)
         SPACE 2
*    WEIGHT = CPU(SEC)
*
*    THIS WEIGHT VALUE GIVES A WEIGHT INDEX (0 TO "JWGHN") BY COMPARE
*    FOR .LT. WITH THE TABLE BELOW.
         SPACE 1
JWGHT    DC    A(31)               0 = 30 SEC.
         DC    A(121)              1 = 2 MIN.
         DC    A(601)              2 = 10 MIN.
         DC    A(1801)             3 = 30 MIN.
         DC    A(7201)             4 = 2 HOURS
*                                  5 = ...OVER
JWGHN    EQU   (*-JWGHT)/L'JWGHT
*                                  CONTROLS (MUST BE 0).
CT7      EQU   (JWGHN*L'JWGHT)-(*-JWGHT)
CT8      EQU   (*-JWGHT)-(JWGHN*L'JWGHT)
         EJECT
*    THE JOB EXECUTION CLASS IS SET BY THE FOLLOWING TABLES USING TO
*    SELECT --->   TABLE     ---> WEIGHT INDEX
*                  ROW            I/O CATEGORY
*                  COLUMN         MEMORY CATEGORY
         SPACE 1
*               MEM.CAT. = 012345  I/O CAT.
SCHCLT   DC    CL(MEMCN+1)'AAA11H' 0         WEIGHT = 0
         DC    CL(MEMCN+1)'AAA11H' 1
         DC    CL(MEMCN+1)'22222H' 2
         DC    CL(MEMCN+1)'22222H' 3
SCHCLTLG EQU   *-SCHCLT
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'BBB22H' 0         WEIGHT = 1
         DC    CL(MEMCN+1)'BBB22H' 1
         DC    CL(MEMCN+1)'33333H' 2
         DC    CL(MEMCN+1)'33333H' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'CCC33H' 0         WEIGHT = 2
         DC    CL(MEMCN+1)'CCC33H' 1
         DC    CL(MEMCN+1)'44444H' 2
         DC    CL(MEMCN+1)'44444H' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'DDD44I' 0         WEIGHT = 3
         DC    CL(MEMCN+1)'DDD44I' 1
         DC    CL(MEMCN+1)'44444I' 2
         DC    CL(MEMCN+1)'44444I' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'EEEEEJ' 0         WEIGHT = 4
         DC    CL(MEMCN+1)'EEEEEJ' 1
         DC    CL(MEMCN+1)'FFFFFJ' 2
         DC    CL(MEMCN+1)'FFFFFJ' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'GGGGGJ' 0         WEIGHT = 5
         DC    CL(MEMCN+1)'GGGGGJ' 1
         DC    CL(MEMCN+1)'GGGGGJ' 2
         DC    CL(MEMCN+1)'GGGGGJ' 3
         SPACE 1
*                                       CONTROLS (MUST BE 0).
CT9      EQU   (((*-SCHCLT)/(MEMCN+1))/(JWGHN+1))-(IOCN+1)
CT10     EQU   (IOCN+1)-(((*-SCHCLT)/(MEMCN+1))/(JWGHN+1))
         EJECT
*    SETUP JOB EXECUTION CLASS TABLES (STRATEGY AS PREVIOUS).
         SPACE 1
*               MEM.CAT. = 012345  I/O CAT.
SCHCLTS  DC    CL(MEMCN+1)'XXXXXH' 0         WEIGHT = 0
         DC    CL(MEMCN+1)'XXXXXH' 1
         DC    CL(MEMCN+1)'XXXXXH' 2
         DC    CL(MEMCN+1)'XXXXXH' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'XXXXXH' 0         WEIGHT = 1
         DC    CL(MEMCN+1)'XXXXXH' 1
         DC    CL(MEMCN+1)'XXXXXH' 2
         DC    CL(MEMCN+1)'XXXXXH' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'YYYYYH' 0         WEIGHT = 2
         DC    CL(MEMCN+1)'YYYYYH' 1
         DC    CL(MEMCN+1)'YYYYYH' 2
         DC    CL(MEMCN+1)'YYYYYH' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'ZZZZZI' 0         WEIGHT = 3
         DC    CL(MEMCN+1)'ZZZZZI' 1
         DC    CL(MEMCN+1)'ZZZZZI' 2
         DC    CL(MEMCN+1)'ZZZZZI' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'EEEEEJ' 0         WEIGHT = 4
         DC    CL(MEMCN+1)'EEEEEJ' 1
         DC    CL(MEMCN+1)'EEEEEJ' 2
         DC    CL(MEMCN+1)'FFFFFJ' 3
*               MEM.CAT. = 012345  I/O CAT.
         DC    CL(MEMCN+1)'GGGGGJ' 0         WEIGHT = 5
         DC    CL(MEMCN+1)'GGGGGJ' 1
         DC    CL(MEMCN+1)'GGGGGJ' 2
         DC    CL(MEMCN+1)'GGGGGJ' 3
         SPACE 1
*                                       CONTROLS (MUST BE 0).
CT11     EQU   (((*-SCHCLTS)/(MEMCN+1))/(JWGHN+1))-(IOCN+1)
CT12     EQU   (IOCN+1)-(((*-SCHCLTS)/(MEMCN+1))/(JWGHN+1))
         EJECT
* 3. JOB PERFORMANCE GROUP NUMBER :
* ---------------------------------
*
*    USING THE JOB CLASS ('JCTJCLAS') AND THE WEIGHT INDEX, THE JOB
*    PERFORMANCE GROUP NUMBER IS FOUND IN THE FOLLOWING TABLE.
         SPACE 1
JPGNT    DS    0CL(JWGHN+2)
*                WEIGHT = 0 1 2 3 4 5
*                                            CPU BOUND JOBS.
         DC    CL1'1',AL1(1,1,1,1,1,1)
         DC    CL1'2',AL1(2,2,2,2,2,2)
         DC    CL1'3',AL1(3,3,3,3,3,3)
         DC    CL1'4',AL1(4,4,4,4,4,4)
*                                            LOW CPU BOUND JOBS.
         DC    CL1'A',AL1(1,1,1,1,1,1)
         DC    CL1'B',AL1(2,2,2,2,2,2)
         DC    CL1'C',AL1(3,3,3,3,3,3)
         DC    CL1'D',AL1(4,4,4,4,4,4)
         DC    CL1'E',AL1(5,5,5,5,5,5)
         DC    CL1'F',AL1(5,5,5,5,5,5)
*                                            HIGHLY CPU BOUND JOBS.
         DC    CL1'G',AL1(5,5,5,5,5,5)
*                                            HEAVILY BATCH JOBS.
         DC    CL1'H',AL1(5,5,5,5,5,5)
         DC    CL1'I',AL1(5,5,5,5,5,5)
         DC    CL1'J',AL1(5,5,5,5,5,5)
*                                            HIGHLY I/O BOUND JOBS.
         DC    CL1'X',AL1(7,7,7,7,7,7)
         DC    CL1'Y',AL1(7,7,7,7,7,7)
         DC    CL1'Z',AL1(7,7,7,7,7,7)
         DC    XL1'0',AL1(7)       END OF TABLE (DEFAULT).
         EJECT
* SPECIAL JOB CLASSES TABLE :
* ---------------------------
*
*    A NEW CLASS AND PERFORMANCE GROUP NUMBER IS ASSIGNED TO THE JOB(S)
*    USING SPECIFIC DATA-SET(S) NAME(S), UNLESS IN JOB-NAMES EXEMPTION
*    LIST. NO CONFLICT OCCURS WHEN MORE DATA-SETS ARE DETECTED IN THE
*    JCL OF A JOB, THE FIRST SEQUENTIAL MATCH IN THE TABLE WILL BE
*    THAT USED FOR ASSIGNMENT TO THE JOB, SO RANGE THE DATA-SETS NAMES
*    IN ORDER OF PRIORITY FOR CLASS DETERMINATION.
*
*    FORMAT :   DC  AL1(L'DSN..-1) OR AL1(255) AT END OF TABLE.
*               DC  CL1'...NEW CLASS...'
*               DC  AL1(...NEW PERFORMANCE GROUP NUMBER...)
*               DC  AL1((DSN..-*-1)/8) NO. OF JOB(S) NAME(S).
*               DC  CL8'...',CL8'...',... EXEMPTED JOB(S) NAME(S).
*        DSN..  DC  C'...DATA-SET NAME ...'
         SPACE 1
SDSNTB   EQU   *                   START OF TABLE.
         SPACE 1
         DC    AL1(L'DSN1-1),CL1'7',AL1(7)
         DC    AL1((DSN1-*-1)/8)
DSN1     DC    C'ADA.V411.ADALOAD'
         SPACE 1
         DC    AL1(L'DSN2-1),CL1'7',AL1(7)
         DC    AL1((DSN2-*-1)/8)
DSN2     DC    C'ADADBA.RUNV4.CNTL'
         SPACE 1
         DC    AL1(L'DSN3-1),CL1'5',AL1(7)
         DC    AL1((DSN3-*-1)/8)
DSN3     DC    C'IMSPROD.RESLIB'
         SPACE 1
         DC    AL1(L'DSN4-1),CL1'R',AL1(7)
         DC    AL1((DSN4-*-1)/8)
DSN4     DC    C'IMSNEW.RESLIB'
         SPACE 1
         DC    AL1(L'DSN5-1),CL1'T',AL1(7)
         DC    AL1((DSN5-*-1)/8)
DSN5     DC    C'S22VAN1.SIPO.NETFILE'
         SPACE 1
         DC    AL1(255)            END OF TABLE.
         SPACE 1
         DC    XL50'0'             SHORT PATCH AREA.
         EJECT
* IEFUJV - CONTROL SUPPRESS INDICATOR :
* -------------------------------------
         SPACE 1
UJVFSW   DC    CL1'0'              (SEE MODULE 'IEFUJV' FOR VALUE)
         SPACE 2
* ACCOUNTING DATA-SET DEFAULT NAME :
* ----------------------------------
         SPACE 1
ACCNME   DC    CL44'->.YOUR.ACCOUNT.CONTROL'
         SPACE 2
* SPECIAL ID-POINTER (SEE 'SUJVTA' ROUTINE) :
* -------------------------------------------
         SPACE 1
         CNOP  0,8
         DC    CL8'UJVT-PT=',A(UJVTABLE),CL4'UJVT'
         SPACE 2
         END
