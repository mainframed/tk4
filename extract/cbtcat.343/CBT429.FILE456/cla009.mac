A009     TITLE 'CLEAN-UP - SCHEDULE N-CAT./SPECIAL REQUESTS (A009).'
        PRINT  OFF
        COPY   CLMAC
        PRINT  ON
A009    @XS    ALIAS=SPECREQ
*        GET SCRATCH NOT-CATALOGED VOLUMES.
         SPACE 1
         L     R2,TBNVOL           ADDRESS OF N-CAT. VOL. TABLE
         MVI   0(R2),FMOFF         SET FINAL MARKER
         TM    WHAT,WHEOF          END-OF-FILE?
         BO    LK0                 YES
         TM    WHAT,WHCD           CARD ALREADY READ?
         BO    GNV1                YES
GNV0     NI    WHAT,255-WHCD
        $READ  MF=(E,RDIPLS)
         LTR   R15,R15
         BM    GNV13               EOF
         BNZ   ERR21               ERROR
GNV1     LM    R3,R5,SCIN          SET TO SCAN INPUT BUFFER
GNVSW1   NOP   GNV5
         CLI   0(R3),C' '          LOOK FOR FIRST NON-BLANK
         BNE   GNVSW2
GNV2     BXLE  R3,R4,*-8
         B     GNV0
GNVSW2   NOP   GNV4
         CLC   0(9,R3),=CL9'N-CAT.VOL'  IS IT 'N-CAT.VOL' KEYWORD?
         BNE   GNV12               NO
         LA    R3,8(R3)
         CLI   1(R3),C'.'
         BNE   GNV3
         LA    R3,1(R3)
GNV3     OI    GNVSW2+1,ON
         B     GNV2
GNV4     CLI   0(R3),C'('          START OF NAMES?
         BNE   ERR43               NO, ERROR
         OI    GNVSW1+1,ON
         BXLE  R3,R4,GNV5
         B     GNV0
GNV5     CLI   0(R3),C' '          LOOK FOR FIRST NON-BLANK
         BNE   GNV6
         BXLE  R3,R4,GNV5
         B     GNV0
GNV6     LR    R1,R3               SAVE STARTING POINTER
         LA    R0,7                MAX. LENGTH + 1 TO CONTROL
GNV7     CLI   0(R3),C' '          LOOK FOR FIRST BLANK
         BE    GNV9
         CLI   0(R3),C')'          END OF NAMES?
         BE    GNV9                YES
         BCT   R0,GNV8
         XR    R15,R15             > 6 CHAR. LONG
         B     ERR44
GNV8     BXLE  R3,R4,GNV7
GNV9     LR    R15,R3              COMPUTE VOL. SER. LENGTH
         SR    R15,R1
         BZ    GNV11               THIS IS THE END OF NAMES
         BCTR  R15,0               -1 FOR MOVE
         LA    R14,2(R15,R2)       COMPUTE SPACE IN TABLE
         CL    R14,TBNVOLE         ANY OVERFLOW?
         BL    GNV10               NO
         XR    R15,R15             YES
         B     ERR8
GNV10    STC   R15,0(R2)           STORE IN TABLE
         EX    R15,GNVMV           MOVE VOLUME PREFIX TO TABLE
         LR    R2,R14              ADVANCE IN TABLE
         MVI   0(R2),FMOFF         SET FINAL MARKER
         CLR   R3,R5               CARD SCAN ENDED?
         BH    GNV0                YES
         B     GNV5                GET NEXT VOLUME
GNVMV    MVC   1(*-*,R2),0(R1)     << EXECUTED >>
GNV11    NI    GNVSW1+1,OFF
         NI    GNVSW2+1,OFF
         B     GNV2
GNV12    OI    WHAT,WHCD           INDICATE "SYSIN" CARD ALREADY READ
         B     GLV0
GNV13    OI    WHAT,WHEOF          INDICATE "SYSIN" END-OF-FILE
         SPACE 1
*        LIST N-CAT. VOL. TABLE.
         SPACE 1
GLV0     L     R2,TBNVOL           START OF N-CAT. VOL. TABLE
         CLI   0(R2),FMOFF         EMPTY?
         BE    LK0                 YES
        @OUT   NCTIT,=PL2'+50',U
GLV1     LA    R4,LINE+6           STARTING ADDRESS IN LINE
         MVC   LINE+1(L'LINE-1),LINE    CLEAR LINE
         LA    R0,10               MAX. BY LINE
GLV2     XR    R3,R3               CLEAR REGISTER
         IC    R3,0(R2)            GET LENGTH OF NAME
         EX    R3,GLVMV            MOVE TO PRINT LINE
         LA    R1,5(R4)            REPLACE BLANKS IN LINE
GLV3     CLI   0(R1),C' '          BLANK?
         BNE   GLV4                NO
         MVI   0(R1),C'-'          REPLACE
         BCT   R1,GLV3             AND LOOP
GLV4     LA    R2,2(R2,R3)         ADVANCE IN TABLE
         CLI   0(R2),FMOFF         LAST ENTRY?
         BE    GLV6                YES
         BCT   R0,GLV5
         B     GLV6
GLVMV    MVC   0(*-*,R4),1(R2)     << EXECUTED >>
GLV5     LA    R4,L'UCBVOLI+4(R4)  ADVANCE IN LINE
         B     GLV2
GLV6     CLI   LINE+6,C' '         ANYTHING IN LINE?
         BE    LK0                 NO
        @OUT   LINE
         CLI   0(R2),FMOFF         LAST ENTRY?
         BNE   GLV1                NO, CONTINUE
         SPACE 1
*        CONTROL "NOT-CATALOGED" DATA-SETS.
         SPACE 1
LK0      TM    WHAT,WHCHECK        CHECK RUN REQUESTED?
         BO    SR0                 YES
         TM    RUNIND,RUCATMIS     ALL CATALOGS ARE PRESENT?
         BZ    LK1                 YES
        @OUT   SCRBYP              NO, BYPASS
         B     SR0
         SPACE 1
*        LOOK FOR NOT-CATALOGED DATA-SETS ON SELECTED
*        VOLUMES AND MARK THEM TO BE SCRATCHED.
         SPACE 1
LK1      L     R3,TBNVOL           START OF N-CAT. VOL. TABLE
         CLI   0(R3),FMOFF         EMPTY?
         BE    SR0                 YES
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
LK2      CLI   0(R2),FMOFF         END OF TABLE?
         BE    SR0                 YES
         CLI   DSACTION,0          ALREADY ANY ACTION?
         BNE   LK5                 YES, BYPASS
         CLI   DSUSE,0             MODEL GDG ,GDG OR NULL GDG INDEX?
         BNE   LK5                 YES, BYPASS
         CLI   DSTYPE,0            VSAM DATA-SET?
         BNE   LK5                 YES, BYPASS
         CLI   DSCAT,0             CATALOGED?
         BNE   LK5                 YES, O.K.
         OC    DSVOLSN,DSVOLSN     ON VOLUME?
         BZ    LK5                 NO, BYPASS
         L     R3,TBNVOL           START OF N-CAT. VOL. TABLE
LK3      XR    R1,R1
         IC    R1,0(R3)            GET LENGTH FOR COMPARE
         EX    R1,LKCL             ON DISK?
         BE    LK4                 YES, SCRATCH
         LA    R3,2(R1,R3)         NO, ADVANCE IN TABLE
         CLI   0(R3),FMOFF         END OF TABLE?
         BNE   LK3                 NO, CONTINUE
         B     LK5
LKCL     CLC   DSVOLSN(*-*),1(R3)  << EXECUTED >>
LK4      MVI   DSACTION,YS         INDICATE TO SCRATCH
LK5      LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     LK2                 CONTINUE
         DROP  R2
         SPACE 1
*        READ SPECIAL REQUESTS.
         SPACE 1
SR0      TM    WHAT,WHEOF          END-OF-FILE?
         BO    SRNI                YES
         TM    WHAT,WHCD           CARD ALREADY READ?
         BO    SR1                 YES
        $READ  MF=(E,RDIPLS)
         LTR   R15,R15             TEST RETURN CODE
         BM    SRNI                NO CONTROL STATEMENTS
         BNZ   ERR21
SR1     @OUT   SRINM,=PL2'+40',U   PRINT HEADER
         L     R6,DALIST
         USING DYNLIST,R6
SR2     @OUT   PRCAR               PRINT INPUT CARD
         LM    R3,R5,SCIN          SET TO SCAN INPUT CARD
         CLI   0(R3),C' '          SEARCH START OF A KEYWORD
         BNE   SR4
SR3      BXLE  R3,R4,*-8
        $READ  MF=(E,RDIPLS)       GET NEXT CARD
         LTR   R15,R15
         BM    SRCSE               END OF CONTROL CARDS
         BZ    SR2                 ANALYZE NEXT CARD
         B     ERR21
SR4      CLC   0(7,R3),=CL7'SCRATCH'    SCRATCH DISK REQUIRED?
         BNE   SR20                NO
         LA    R3,6(R3)
SR5      BXLE  R3,R4,*+L'*+4
         BAS   R14,SRR20
         CLI   0(R3),C' '          SEARCH START OF ARGUMENT
         BE    SR5
         CLI   0(R3),C'('
         BNE   SRERR
SR6      BXLE  R3,R4,*+L'*+4
         BAS   R14,SRR20
         CLI   0(R3),C' '          SEARCH START OF VOL. NAME
         BE    SR6
SR7      LA    R0,7
         LR    R1,R3
SR8      CLI   0(R3),C' '
         BE    SR9
         CLI   0(R3),C')'
         BE    SR9
         BCT   R0,*+L'*+4
         B     SRERR
         BXLE  R3,R4,SR8
SR9      LR    R14,R3
         SR    R14,R1
         BZ    SR3                 THIS IS THE END OF NAMES
         BCTR  R14,0
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
SR10     CLI   0(R2),FMOFF         END OF TABLE?
         BE    SR15                YES
         CLI   DSACTION,0          ALREADY ACTION ON THIS ONE?
         BNE   SR14                YES, FORGET IT
         OC    DSVOLSN,DSVOLSN     ON VOLUME?
         BZ    SR11                NO
         EX    R14,SRCL            ON THIS DISK?
         BNE   SR14                NO
         MVI   DSACTION,YD         YES, INDICATE
         B     SR13
SR11     EX    R14,SRCA            REFER THIS DISK?
         BNE   SR14                NO
         CLI   DSCAT,0             CATALOGED?
         BE    SR12                NO
         MVI   DSACTION,YU         INDICATE UNCATALOG
         B     SR13
SRCL     CLC   DSVOLSN(*-*),0(R1)  << EXECUTED >>
SRCA     CLC   DSALTVO(*-*),0(R1)  << EXECUTED >>
SR12     MVI   DSACTION,YR         INDICATE DELETE FROM RACF
SR13     MVI   DSRCVRY,0           RESET ANY RECOVERY
SR14     LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     SR10                LOOP
         DROP  R2
SR15     CLR   R3,R5               CARD SCAN ENDED?
         BNH   SR17                NO
SR16     BAS   R14,SRR20
SR17     CLI   0(R3),C')'          END?
         BE    SR3                 YES, GET NEXT KEYWORD
         CLI   0(R3),C' '
         BNE   SR7                 TO NEXT VOL. NAME
         BXLE  R3,R4,SR17
         B     SR16
SR20     CLC   0(6,R3),=CL6'EXEMPT'     EXEMPTION TABLE?
         BNE   SRERR               NO
         LA    R3,5(R3)
SR21     BXLE  R3,R4,*+L'*+4
         BAS   R14,SRR20
         CLI   0(R3),C' '          SEARCH START OF ARGUMENT
         BE    SR21
         CLI   0(R3),C'('
         BNE   SRERR
SR22     BXLE  R3,R4,*+L'*+4
         BAS   R14,SRR20
         CLI   0(R3),C' '          SEARCH START OF PO-DSNAME
         BE    SR22
         CLI   0(R3),C')'
         BE    SR3
         CLI   0(R3),C'*'
         BE    SR29
         CLI   0(R3),C'/'
         BNE   SR23
         CLI   DSNAME,C' '
         BNE   SR30                PO-DSNAME AS PREVIOUS
         B     SRERR
SR23     MVI   WORKDS,C' '
         MVC   WORKDS+1(L'WORKDS-1),WORKDS
         LA    R0,WORKDS+L'WORKDS
         LA    R1,WORKDS
SR24     CLI   0(R3),C'/'
         BE    SR25
         CLI   0(R3),C' '
         BE    SR25
         CLR   R1,R0
         BNL   SRERR
         MVC   0(1,R1),0(R3)       GET PO-DSNAME
         LA    R1,1(R1)
         BXLE  R3,R4,SR24
         BAS   R14,SRR20
SR25     CLC   DSNAME,WORKDS       SAME AS PREVIOUS?
         BE    SR28                YES
         TM    WHAT,WHPDSA         FIRST TIME?
         BZ    SR26                YES
         NI    WHAT,255-WHPDSO     NO, CLOSE AND FREE PREVIOUS
        $MCLOSE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR26
         NI    WHAT,255-WHPDSA
         XC    DSNAME,DSNAME
        $DYNALL (R6),,MF=(E,DYNPLS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    SR26
         ICM   R1,B'1111',=CL4'FREE'
         LA    R15,DDNAME
         BAS   R14,DYNFAIL
         B     ERR26
SR26     MVC   DSNAME,WORKDS
         B     SR28
SR27     BAS   R14,SRR20
SR28     CLI   0(R3),C'/'
         BE    SR30
         CLI   0(R3),C' '
         BNE   SRERR
         BXLE  R3,R4,SR28
         B     SR27
SR29     OI    STATUS,STCISI
SR30     BXLE  R3,R4,*+L'*+4
         BAS   R14,SRR20
         CLI   0(R3),C' '          SEARCH START OF VOL. NAME
         BE    SR30
         OI    SRSW+1,ON
SR31     LA    R0,7
         LR    R1,R3
SR32     CLI   0(R3),C' '
         BE    SR33
         CLI   0(R3),C')'
         BE    SR33
         BCT   R0,*+L'*+4
         B     SRSW
         BXLE  R3,R4,SR32
SR33     LR    R14,R3
         SR    R14,R1
         BZ    SR3                 THIS IS THE END OF NAMES
         BCTR  R14,0
         STC   R14,MEMBERL
         MVC   MEMBER+1,=CL7' '
         EX    R14,SRMO            DISK VOLSER = MEMBER NAME
         TM    STATUS,STCISI       INPUT STREAM?
         BO    SR55                YES
         TM    WHAT,WHPDSA         ALLOCATED?
         BO    SR35                YES
         MVC   DDNAME(6),=CL6'SYSPDS'
         MVC   DSSTATUS(3),=CL3'SHR'
         MVC   DSNDISP(4),=CL4'KEEP'
         MVC   DSADISP(4),=CL4'KEEP'
        $DYNALL (R6),,MF=(E,DYNPLS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    SR34
         ICM   R1,B'1111',=CL4'ALL.'
         LA    R15,DDNAME
         BAS   R14,DYNFAIL
         B     ERR23
SR34     OI    WHAT,WHPDSA
        $MOPEN MF=(E,MOPPLS)       OPEN PARTITIONNED
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR23
         OI    WHAT,WHPDSO
SR35     MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         MVC   LINE+9(8),MEMBER    SET MEMBER NAME = VOLSER
         MVI   LINE+18,C':'
        $MFIND MF=(E,SRMF)         FIND MEMBER IN DATA-SET
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR24
SR36    $MREAD MF=(E,MRDPLS)       READ CARD FROM MEMBER
         LTR   R15,R15
         BM    SR49                END OF FILE?
         BNZ   ERR25
        @OUT   LINE
         MVC   LINE+9(10),LINE+8
         LA    R1,LINE+20
         LM    R14,R15,LISCAN+4
         CLI   0(R1),C' '          SEARCH START OF DSNAME OR PREFIX
         BNE   SR38
SR37     BXLE  R1,R14,*-8
         B     SR36                GET NEXT CARD
SR38     LR    R0,R1               SET STARTING POSITION
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
         B     SR40
SR39     CLI   0(R1),C' '          TEST IF END OF DSNAME?
         BE    SR44                YES
SR40     CLI   0(R1),C'/'          TEST IF '/' PRESENT?
         BE    SR41                YES
         BXLE  R1,R14,SR39         GO FOR NEXT CHARACTER
         B     SR44                ASSUME END OF DSNAME
SR41     ST    R1,LISCAN           SAVE ACTUAL POINTER
         LR    R15,R0              START OF PREFIX POINTER
         SR    R1,R0               LENGTH OF PREFIX
         BNP   SR48                NO PREFIX, ONLY '/', SKIP IT
         CH    R1,=H'44'           OVER MAXIMUM?
         BH    ERR41               YES
         BCTR  R1,0                -1 FOR COMPARE
         IC    R14,MEMBERL
SR42     CLI   0(R2),FMOFF         END OF TABLE?
         BE    SR48                YES
         OC    DSVOLSN,DSVOLSN     ON VOLUME?
         BZ    SR43                NO
         EX    R1,SRCC             IS THIS PREFIX?
         BNE   SR43                NO
         EX    R14,SRCM            SAME DISK?
         BNE   SR43                NO
         MVI   DSACTION,YE         INDICATE EXEMPTED
         MVI   DSRCVRY,0           RESET ANY RECOVERY
SR43     LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     SR42
SRMO     MVC   MEMBER+1(*-*),0(R1) << EXECUTED >>
SRCC     CLC   DSNME(*-*),0(R15)   << EXECUTED >>
SRCM     CLC   DSVOLSN(*-*),MEMBER+1    << EXECUTED >>
SR44     ST    R1,LISCAN           SAVE ACTUAL POINTER
         LR    R15,R0              START OF DSNAME POINTER
         SR    R1,R0               LENGTH OF DSNAME
         CH    R1,=H'44'           OVER MAXIMUM?
         BH    ERR41               YES
         BCTR  R1,0                -1 FOR MOVE
         MVI   NAMEDSN,C' '
         MVC   NAMEDSN+1(L'NAMEDSN-1),NAMEDSN
         EX    R1,SRMV             SET DSNAME FOR COMPARE
         IC    R14,MEMBERL
SR45     CLI   0(R2),FMOFF         END OF TABLE?
         BE    SR47                YES
         OC    DSVOLSN,DSVOLSN     ON VOLUME?
         BZ    SR46                NO
         CLC   DSNME,NAMEDSN       IS THIS DSNAME?
         BNE   SR46                NO
         EX    R14,SRCM            SAME DISK?
         BNE   SR46                NO
         MVI   DSACTION,YE         INDICATE EXEMPTED
         MVI   DSRCVRY,0           RESET ANY RECOVERY
         B     SR48                TO NEXT MEMBER CARD
SR46     LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     SR45                GO TEST NEXT ONE
SRMV     MVC   NAMEDSN(*-*),0(R15) << EXECUTED >>
         DROP  R2
SR47    @OUT   NAMENF              DSNAME NOT FOUND
SR48     L     R1,LISCAN           RESTORE SCAN POINTERS
         LM    R14,R15,LISCAN+4
         CLR   R1,R15              CARD SCAN ENDED?
         BNH   SR37                NO
         B     SR36                TO NEXT MEMBER CARD
SR49     CLR   R3,R5               CARD SCAN ENDED?
         BNH   SR51                NO
SR50     BAS   R14,SRR20
SR51     CLI   0(R3),C')'          END?
         BE    SR3                 YES, GET NEXT KEYWORD
         CLI   0(R3),C' '
         BNE   SR52                TO NEXT VOL. NAME
         BXLE  R3,R4,SR51
         B     SR50
SR52     NI    SRSW+1,OFF
         B     SR31
SR55     NI    STATUS,255-STCISI
SRR0     BXLE  R3,R4,*+L'*+4       START SEARCH OF DSNAME OR PREFIX
SRR1     BAS   R14,SRR20
         CLI   0(R3),C' '
         BE    SRR0
         CLI   0(R3),C')'          END OF NAMES?
         BE    SR3                 YES
         LR    R1,R3               SET STARTING POSITION
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
         B     SRR3
SRR2     CLI   0(R3),C' '          TEST IF END OF DSNAME?
         BE    SRR7                YES
         CLI   0(R3),C')'          END OF NAMES?
         BE    SRR7                YES
SRR3     CLI   0(R3),C'/'          TEST IF '/' PRESENT?
         BE    SRR4                YES
         BXLE  R3,R4,SRR2          GO FOR NEXT CHARACTER
         B     SRR7                ASSUME END OF DSNAME
SRR4     LR    R15,R3              COMPUTE LENGTH OF PREFIX
         SR    R15,R1
         BNP   SRR11               NO PREFIX, ONLY '/', SKIP IT
         CH    R15,=H'44'          OVER MAXIMUM?
         BH    ERR41               YES
         BCTR  R15,0               -1 FOR COMPARE
         IC    R14,MEMBERL
SRR5     CLI   0(R2),FMOFF         END OF TABLE?
         BE    SRR11               YES
         EX    R15,SRRDSN          IS THIS PREFIX?
         BE    *+L'*+8             YES
         EX    R15,SRRDSA          IS THIS PREFIX?
         BNE   SRR6                NO
         EX    R14,SRRMVN          SAME DISK?
         BE    *+L'*+8             YES
         EX    R14,SRRMVA          SAME DISK?
         BNE   SRR6                NO
         MVI   DSACTION,YE         INDICATE EXEMPTED
         MVI   DSRCVRY,0           RESET ANY RECOVERY
SRR6     LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     SRR5
SRRDSN   CLC   DSNME(*-*),0(R1)    << EXECUTED >>
SRRDSA   CLC   DSANME(*-*),0(R1)   << EXECUTED >>
SRRMVN   CLC   DSVOLSN(*-*),MEMBER+1    << EXECUTED >>
SRRMVA   CLC   DSALTVO(*-*),MEMBER+1    << EXECUTED >>
SRR7     LR    R15,R3              COMPUTE LENGTH OF DSNAME
         SR    R15,R1
         CH    R15,=H'44'          OVER MAXIMUM?
         BH    ERR41               YES
         BCTR  R15,0               -1 FOR MOVE
         MVI   NAMEDSN,C' '
         MVC   NAMEDSN+1(L'NAMEDSN-1),NAMEDSN
         EX    R15,SRRMO           SET DSNAME FOR COMPARE
         IC    R14,MEMBERL
SRR8     CLI   0(R2),FMOFF         END OF TABLE?
         BE    SRR10               YES
         CLC   DSNME,NAMEDSN       IS THIS DSNAME?
         BE    *+L'*+10            YES
         CLC   DSANME,NAMEDSN      IS THIS DSNAME?
         BNE   SRR9                NO
         EX    R14,SRRMVN          SAME DISK?
         BE    *+L'*+8             YES
         EX    R14,SRRMVA          SAME DISK?
         BNE   SRR9                NO
         MVI   DSACTION,YE         INDICATE EXEMPTED
         MVI   DSRCVRY,0           RESET ANY RECOVERY
         B     SRR11               GO CONTINUE CARD SCAN
SRR9     LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     SRR8                GO TEST NEXT ONE
SRRMO    MVC   NAMEDSN(*-*),0(R1)  << EXECUTED >>
         DROP  R2
SRR10   @OUT   NAMENF              DSNAME NOT FOUND
SRR11    CLR   R3,R5               CARD SCAN ENDED?
         BH    SRR1                YES
         CLI   0(R3),C')'          END OF NAMES?
         BNE   SRR0                NO
         B     SR3
SRR20    ST    R14,SVRETCN         CONTINUATION
        $READ  MF=(E,RDIPLS)       GET NEXT CARD
         LTR   R15,R15
         BM    CNERR
         BNZ   ERR21
        @OUT   PRCAR               PRINT INPUT CARD
         LM    R3,R5,SCIN          SET TO SCAN INPUT CARD
         L     R14,SVRETCN
         BR    R14                 GO BACK
CNERR    LA    R1,CNERRMS
         B     CRERR
SRSW     B     SRERR
        @OUT   PRCAR               REPEAT FOR DIAGNOSE
SRERR    MVI   CARDIN,C' '
         MVC   CARDIN+1(L'CARDIN-1),CARDIN
         MVI   0(R3),C'$'          POSITION OF ERROR
        @OUT   PRCAR
         LA    R1,SRTERR           STATEMENT ERROR
CRERR   @OUT   (R1)
         XR    R15,R15
         B     ERR22
SRNI    @OUT   SRNOINM
         B     SRCSEND
SRCSE    TM    WHAT,WHPDSA         ALLOCATED?
         BZ    SRCSEND             NO
         NI    WHAT,255-WHPDSO
        $MCLOSE
         LTR   R15,R15
         BNZ   ERR26
         NI    WHAT,255-WHPDSA
         XC    DSNAME,DSNAME
        $DYNALL (R6),,MF=(E,DYNPLS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    SRCSEND
         ICM   R1,B'1111',=CL4'FREE'
         LA    R15,DDNAME
         BAS   R14,DYNFAIL
         B     ERR26
         DROP  R6
SRCSEND  NI    WHAT,255-WHIN-WHCD-WHEOF
        $RCLOSE
        @X     B013                PROCESS RACF GENERIC PROFILES
        @XE
         EJECT
SRMF    $MFIND MEMBER,MF=L
         SPACE 1
SVRETCN  DC    F'0'
         SPACE 1
MEMBERL  DC    AL1(*-*)
MEMBER   DC    CL8'E '
         DC    AL1(L'NCTIT)
NCTIT    DC    C'0N-CAT. VOLUMES CHECK LIST :'
         DC    AL1(L'SCRBYP)
SCRBYP   DC    C'0===== SCRATCH PROCESSING FOR ''NOT-CATALOGED'' BYPASSC
               ED DUE TO MISSING CATALOG ====='
         DC    AL1(L'SRNOINM)
SRNOINM  DC    C'0===== NO SPECIAL REQUESTS ====='
         DC    AL1(L'SRINM)
SRINM    DC    C'0SPECIAL REQUESTS :'
         DC    AL1(L'SRTERR)
SRTERR   DC    C' ===== SYNTAX ERROR ====='
         DC    AL1(L'CNERRMS)
CNERRMS  DC    C' ===== CONTINUATION MISSING ====='
         DC    AL1(NAMENFL)
NAMENF   DC    CL20' '
         DC    C'----- DATA-SET NOT FOUND ON VOLUME : '
NAMEDSN  DC    CL44' '
NAMENFL  EQU   *-NAMENF
         EJECT
        @SERV
         SPACE 1
        @COMM
         SPACE 2
         END
