AU90     TITLE '-- ROUTINE AUT90 - USERID/ACCOUNT SERVICE --'
AUT90    START 0
         SPACE 1
**********************************************************************
*        THIS SUBROUTINE ENABLE YOU TO GET THE ACCOUNTING            *
*        INFORMATION IN 'TSO-UADS'.                                  *
*        IT ASKS THE USERID AND IT RETURNS THE PROGRAMMER            *
*        NUMBER (CL4) AND THE USERID (CL7).                          *
*                                             M.SACRE  01 OCTOBRE 84 *
*                                        P.A.MOINIL  21 SEPTEMBRE 89 *
**********************************************************************
*        CALL AUT90,(PARM),VL                                        *
*        FUNCTION : SUBROUTINE TO GET THE ACCOUNTING OF A USERID     *
*                   FROM THE TSO-UADS, AND THEN PASS BACK THE        *
*                   ACCOUNTING NUMBER AND USERID.                    *
*        AT ENTRY : R1  = PARM. ADDRESS                              *
*                         PARM. --->   A(ACCNUSID) WHICH IS THE      *
*                                      ADDRESS OF AN 15-CHAR. FIELD. *
*                             FORMAT : CL15'AAAAPPPPUUUUUUU'         *
*                         WHERE UUUUUUU CAN BE :                     *
*                         - ALL BLANKS TO ASK A USERID OR            *
*                         - A USERID TO PROCESS OR                   *
*                         - XL1'FF' TO SET ERROR MSG AND RE-ASK      *
*                           THE USERID                               *
*         AT EXIT : R15 = 0 - NORMAL COMPLETION                      *
*                         4 - END REQUESTED                          *
*--------------------------------------------------------------------*
         SPACE 1
         PRINT NOGEN
        $DEFREG
        $XENT  BASE=R10
         SPACE 1
         NOP   BEGIN                   SWITCH MOD'S
         OI    *-3,X'F0'               THIS WAY DONE JUST ONCE
         L     R2,=V(MCLOSE)           NULLIFY WTO IN MODULE
         LA    R2,X'0160'(R2)          VERY NEAR DISPLACEMENT
         CLC   0(2,R2),=XL2'0A23'      NOW SEARCH THE WTO
         BE    *+L'*+8
         LA    R2,2(R2)
         B     *-14
         MVC   0(2,R2),=XL2'0700'      ZAP WITH NOPR
BEGIN    L     R9,0(R1)                LOAD ADDR OF PARM
         MVC   0(8,R9),=CL8' '         RESET ACCOUNT
         CLC   8(7,R9),=CL8' '         MUST ASK FOR USERID?
         BE    NEWASK                  YES
         CLI   8(R9),X'FF'             YES, PGRMER NUMBER NOT FOUND?
         BE    NEWASK                  YES
         MVC   RESPONSE(7),8(R9)       NO, GET NEW USERID
         B     TESTASK
NEWASK   MVI   ECRANM,C' '             NO, ASK FOR IT
         MVC   ECRANM+1(L'ECRANM-1),ECRANM
         MVC   ECRANZ,ECRANM
         CLI   8(R9),X'FF'             PGRMER NUMBER NOT FOUND?
         BNE   REASK                   NO
         MVC   ECRANM(L'MSGPN1),MSGPN1 SET PGRMER NUMBER NOT FOUND
REASK    MVC   8(7,R9),=CL8' '         RESET
         LA    R1,PECRAN
         L     R15,=V(AUT99)           ASK USERID
         BALR  R14,R15
         LTR   R15,R15                 NORMAL COMPLETION ?
         BNZ   LEAVE                   NO, END (ONLY 4)
         L     R15,=V(AUT99R)          GET USERID
         BALR  R14,R15
         LTR   R15,R15                 ONLY END OF TEXT ?
         BZ    QUIT                    YES
         LTR   R1,R1                   NO TEXT ?
         BZ    QUIT                    YES
         MVC   RESPONSE(L'RESPONSE),=CL8' '
         BCT   R1,*+L'*+6
         MVC   RESPONSE(*-*),3(R15)
         EX    R1,*-6
TESTASK  OC    RESPONSE(L'RESPONSE),=CL8' '  TRANSLATE TO UPPER CASE
         CLC   RESPONSE(L'RESPONSE),=CL8' '  IS RESPONSE BLANK ?
         BE    QUIT                    YES, ESCAPE FROM SUBR.
*------- ADD ZERO AT THE END OF THE USERID ENTERED
         MVI   ECRANM,C' '
         MVC   ECRANM+1(L'ECRANM-1),ECRANM
         MVC   ECRANZ,ECRANM
         MVC   USERID(L'USERID-1),RESPONSE  BUILD TSO-UADS MEMBER NAME
         MVI   USERID+L'USERID-1,C' '
         LA    R2,7
         LA    R3,USERID+L'USERID-2
         CLI   0(R3),C' '              IS CHARACTER BLANK ?
         BNE   *+L'*+6                 IF YES, ADD ZERO AT END
         BCTR  R3,0                    BACK NEXT CHAR
         BCT   R2,*-10                 IF NOT, CHECK FOLLOWING CHAR.
         MVI   1(R3),C'0'              ADD ZERO AT END OF USERID
         SPACE 1
*--------------------------------------------------------------------*
*        ALLOCATION DYNAMIQUE DU MEMBRE QUI DEFINI LE USER TSO.      *
*        CE FICHIER EST SOUS LA DD-NAME 'UADSSYS' (TSO-UADS).        *
*--------------------------------------------------------------------*
         SPACE 1
         L     R1,=V(AUT98U)
         MVC   DYNDSN(44),0(R1)        SET TSO-UADS DS-NAME
        $DYNALL DYNLIST                DYNAMIC ALLOC OF TSO-UADS
         LTR   R15,R15                 TEST RETURN CODE
         BZ    OKALL                   BRANCH IF OK
         MVC   ECRANM(L'MSGERR1),MSGERR1
         STM   R15,R0,DSD
         MVC   ECRANZ(L'ERRORRC),ERRORRC
         UNPK  ECRANZ+8(9),DSD(5)
         TR    ECRANZ+8(8),TRTAB-X'F0'
         MVI   ECRANZ+16,C' '
         UNPK  ECRANZ+22(9),DSD+4(5)
         TR    ECRANZ+22(8),TRTAB-X'F0'
         MVI   ECRANZ+30,C' '
         B     REASK
OKALL    XR    R4,R4                   SET SWITCH TO PROCESS
        $MOPEN URECL,DYNLIST           OPEN FILE UNDER UADSSYS DD
         LTR   R15,R15
         BZ    OKOPEN
         CVD   R15,DSD
         UNPK  DSD(5),DSD+6(3)
         MVC   ECRANM(L'MSGERR2),MSGERR2
         MVC   ECRANM+L'MSGERR2(2),DSD+1
RETOC    BCTR  R4,0
         B     FRUADS
OKOPEN  $MFIND USERID,DYNLIST          FIND USERID MEMBER
         LTR   R15,R15
         BZ    OKFIND
         CVD   R15,DSD
         UNPK  DSD(5),DSD+6(3)
         MVC   ECRANM(L'MSGERR3),MSGERR3
         MVC   ECRANM+L'MSGERR3(2),DSD+1
         MVI   ECRANM+L'MSGERR3+3,C'-'
         MVC   ECRANM+L'MSGERR3+5(L'USERID),USERID
         LA    R1,ECRANM+L'MSGERR3+L'USERID+4
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         MVC   0(4,R1),=CL4' ???'
RETOEC   BCTR  R4,0
         B     CLUADS
OKFIND   L     R2,=A(INPUT)
         LA    R3,20
LOOP    $MREAD (R2),DYNLIST
         LTR   R15,R15
         BM    EODUADS
         BNZ   ERREAD
         AL    R2,URECL
         BCT   R3,LOOP
         MVC   ECRANM(L'MSGERR4),MSGERR4
         MVC   ECRANM+L'MSGERR4(L'USERID),USERID
         LA    R1,ECRANM+L'MSGERR4+L'USERID-1
         B     RETERR
ERREAD   CVD   R15,DSD
         UNPK  DSD(5),DSD+6(3)
         MVC   ECRANM(L'MSGERR5),MSGERR5
         MVC   ECRANM+L'MSGERR5(2),DSD+1
         B     RETOEC
EODUADS  L     R2,=A(INPUT)
         USING DHED,R2
         L     R3,UADSPWD1
         LA    R3,UADSMHDR(R3)
         USING DPOB,R3
         L     R5,UADSPSUB
         DROP  R3
         LA    R5,UADSMHDR(R5)
         USING DNOB,R5
         ICM   R6,B'1111',UADSADAT
         BZ    NOACCT
         DROP  R5
         LA    R6,UADSMHDR(R6)
         USING DNOBD,R6
         CLI   UADSALEN,8              STANDARD EURATOM AUT/PGM ?
         BE    OKACCT                  BRANCH IF YES
NOACCT   MVC   ECRANM(L'MSGERR6),MSGERR6
         MVC   ECRANM+L'MSGERR6(L'USERID),USERID
         LA    R1,ECRANM+L'MSGERR6+L'USERID-1
RETERR   CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         MVI   0(R1),C')'
         B     RETOEC
OKACCT   MVC   INFO(8),UADSANUM        MOVE ACCOUNT INFO(AUT/PGM)
         DROP  R2,R6
         LA    R0,L'INFO
         LA    R1,INFO+L'INFO
         BCTR  R1,0
         CLI   0(R1),C'0'              TEST IF NUMERIC
         BL    WRANUM
         CLI   0(R1),C'9'
         BH    WRANUM
         BCT   R0,*-18
         MVC   0(8,R9),INFO            MOVE ACCOUNT IN RETURN
         MVC   8(7,R9),RESPONSE        MOVE USERID IN RETURN
CLUADS  $MCLOSE DYNLIST                CLOSE FILE BEFORE FREE
         LTR   R15,R15
         BZ    FRUADS
         LA    R2,ECRANM
         CLC   0(8,R2),=CL8' '
         BE    SETMSC
         LA    R2,ECRANZ
         CLC   0(8,R2),=CL8' '
         BNE   RETOC
SETMSC   CVD   R15,DSD
         UNPK  DSD(5),DSD+6(3)
         MVC   0(L'MSGERR8,R2),MSGERR8
         MVC   0+L'MSGERR8(2,R2),DSD+1
         B     RETOC
WRANUM   MVC   ECRANM(L'MSGERR7),MSGERR7
         MVC   ECRANM+L'MSGERR7(L'USERID),USERID
         B     RETERR
         SPACE 1
*--------------------------------------------------------------------*
*        FREE SYS1.UADS FILE                                         *
*--------------------------------------------------------------------*
         SPACE 1
FRUADS   XC    DYNDSN,DYNDSN
        $DYNALL DYNLIST                FREE FILE TSO-UADS
         LTR   R15,R15                 TEST RETURN CODE
         BZ    CALL                    IF ZERO, GO CALL SUBROUTINE
         LA    R2,ECRANM
         CLC   0(8,R2),=CL8' '
         BE    SETMSF
         LA    R2,ECRANZ
         CLC   0(8,R2),=CL8' '
         BNE   REASK
SETMSF   MVC   0(L'MSGERR9,R2),MSGERR9
         CLC   ECRANZ(8),=CL8' '
         BNE   REASK
         STM   R15,R0,DSD
         MVC   ECRANZ(L'ERRORRC),ERRORRC
         UNPK  ECRANZ+8(9),DSD(5)
         TR    ECRANZ+8(8),TRTAB-X'F0'
         MVI   ECRANZ+16,C' '
         UNPK  ECRANZ+22(9),DSD+4(5)
         TR    ECRANZ+22(8),TRTAB-X'F0'
         MVI   ECRANZ+30,C' '
         B     REASK
CALL     LTR   R4,R4                   ANYTHING WRONG ?
         BNZ   REASK                   YES
QUIT     XR    R15,R15                 NO, ALL RIGTH
LEAVE   $XRET  CC=(R15)                RETURN
         EJECT
*--------------------------------------------------------------------*
*        VARIABLES DE TRAVAIL                                        *
*--------------------------------------------------------------------*
         SPACE 1
DSD      DC    D'0'
PECRAN   DC    A(LECRAN,ECRAN)
URECL    DC    F'0'          LOGICAL RECORD LENGTH OF TSO-UADS
USERID   DC    CL8' '        MEMBER NAME
INFO     DC    CL8' '
RESPONSE DC    CL7' '
         SPACE 1
*--------------------------------------------------------------------*
*        DYNAMIC ALLOCATION PARAMETER LIST                           *
*--------------------------------------------------------------------*
         SPACE 1
DYNLIST  DC    C'UADSSYS '
DYNDSN   DC    XL44'0'
         DC    CL8' '        MEMBER NAME
         DC    CL8' '        PASSWORD
         DC    CL8'SHR'      STATUS
         DC    CL256' '      FILLER
         DC    CL88' '       FILLER
         SPACE 1
*--------------------------------------------------------------------*
*        MESSAGES D'ERREURS                                          *
*--------------------------------------------------------------------*
         SPACE 1
MSGPN1   DC    C'Programmer NOT FOUND - Account received from USERID'
MSGERR1  DC    C'TSO-UADS : dynamic allocation error.'
MSGERR2  DC    C'TSO-UADS : open data-set error - MOPEN RC='
MSGERR3  DC    C'TSO-UADS : USERID not found - MFIND RC='
MSGERR4  DC    C'TSO-UADS : input buffer overflow for USERID ('
MSGERR5  DC    C'TSO-UADS : read USERID error - MREAD RC='
MSGERR6  DC    C'TSO-UADS : account none or invalid for USERID ('
MSGERR7  DC    C'TSO-UADS : account not numeric for USERID ('
MSGERR8  DC    C'TSO-UADS : close data-set error - MCLOSE RC='
MSGERR9  DC    C'TSO-UADS : dynamic free error.'
ERRORRC  DC    C'    R15=........ - R0=........ - AUT90'
TRTAB    DC    C'0123456789ABCDEF'
         EJECT
*--------------------------------------------------------------------*
*        ECRAN D'OUTPUT                                              *
*--------------------------------------------------------------------*
         SPACE 1
ECRAN   $FS    CC=W,WCC=(KBR,RMDT),SBA=(24,80),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L        SET BUFFER/CLEAR.
        $FS    SBA=(1,1),SF=(PROT),MF=L
        $FS    SBA=(1,25),SF=(PROT,INT),MF=L
        $FS    TEXT='PROGRAMMER    U S E R - I D',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(2,25),SF=(PROT,INT),MF=L
        $FS    TEXT='===========================',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,10),SF=(PROT),MF=L
        $FS    TEXT='Enter Programmer USERID (7 char.max.)',MF=L
        $FS    SF=(PROT,INT),TEXT='===>',MF=L
        $FS    SF=(INT),TEXT=(' ',7),MF=L
        $FS    SF=(PROT),TEXT='<',MF=L
        $FS    SBA=(6,10),SF=(PROT),TEXT='or you may Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='ENTER',MF=L
        $FS    SF=(PROT),TEXT='to escape or',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-3',MF=L
        $FS    SF=(PROT),TEXT='to exit (emergency)',MF=L
        $FS    SBA=(22,1),SF=(PROT,INT),MF=L
ECRANM  $FS    TEXT=(' ',78),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(23,1),SF=(PROT,INT),MF=L
ECRANZ  $FS    TEXT=(' ',78),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(1,1),SF=(PT,IC),MF=L
LECRAN   EQU   *-ECRAN
         EJECT
*--------------------------------------------------------------------*
*        LITERAL POOL                                                *
*--------------------------------------------------------------------*
         SPACE 1
        LTORG
         SPACE 1
*--------------------------------------------------------------------*
*        BUFFER TO STORE RECORDS FROM TSO-UADS                       *
*--------------------------------------------------------------------*
         SPACE 1
INPUT    DS    20CL80                  (OUT OF BASE REGISTERS)
         SPACE 1
*--------------------------------------------------------------------*
*        DUMMY SECTIONS                                              *
*--------------------------------------------------------------------*
         SPACE 1
        IKJEFUAD DSPL,ALL
         SPACE 2
         END
