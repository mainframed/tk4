PVSD     TITLE 'PRINT VARIABLE SYSOUT DATA-SETS - TSO UTILITY.'
PVSD     START 0
         SPACE 2
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *   PRINT VARIABLE SYSOUT DATA-SETS   * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *            TSO UTILITY.             * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    QUEUE AN OUTPUT DATA-SET ON DISK FOR PRINT.            *
* ---------                                                           *
*                                                                     *
* CALL OF THE PROGRAM :                                               *
* ---------------------                                               *
*                                                                     *
*        //OUT       EXEC  PGM=PVSD                                   *
*        //SYSPRINT    DD  SYSOUT=A                                   *
*        //SYSVRIN     DD  --- DATA-SET TO BE QUEUED FOR PRINT ---    *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
LLG      EQU   133                 PRINT LINE LENGTH.
ON       EQU   X'F0'               CLOSE SWITCH.
OFF      EQU   X'0F'               OPEN SWITCH.
         EJECT
        $XENT  BASE=R12
         SPACE 1
        $VOPEN LGREC
         LTR   R15,R15
         BNZ   ERRVOP
         L     R2,LGREC            ROUND UP TO 8 THE MAX. LENGTH.
         LA    R2,7(R2)
         SRL   R2,3
         SLL   R2,3
         ST    R2,ALG
        GETMAIN    EC,LV=(2),A=AREC
         LTR   R15,R15
         BNZ   ERRGET
         L     R3,AREC             RECORD AREA ADDRESS.
         LA    R0,LLG              COMPUTE TRUE PRINT LINE LENGTH.
         CLR   R2,R0
         BNH   *+L'*+2
         LR    R2,R0
         BCTR  R2,0
         BCTR  R2,0
         SPACE 2
READ     MVI   0(R3),C' '          RESET TO BLANKS THE READ AREA.
         EX    R2,RESET
        $VREAD (R3)
         LTR   R15,R15
         BM    ENDR
         BNZ   ERRVRD
         SPACE 1
*        ASA CONTROL CHARACTERS.
         SPACE 1
         CLI   0(R3),C' '          ADVANCE ONE LINE BEFORE PRINTING.
         BE    PRNT
         CLI   0(R3),C'0'          ADVANCE TWO LINES BEFORE PRINTING.
         BE    PRNT
         CLI   0(R3),C'1'          ADVANCE TO FIRST LINE OF NEXT PAGE.
         BE    PRNT
         CLI   0(R3),C'+'          NO ADVANCE.
         BE    PRNT
         CLI   0(R3),C'-'          ADVANCE THREE LINES BEFORE PRINTING.
         BE    PRNT
         SPACE 1
*        MACHINE CONTROL CHARACTERS.
         SPACE 1
         CLI   0(R3),X'01'         WRITE, NO SPACE.
         BE    ASA3
         CLI   0(R3),X'09'         WRITE, SPACE 1 AFTER PRINT.
         BE    ASA1
         CLI   0(R3),X'11'         WRITE, SPACE 2 AFTER PRINT.
         BE    ASA5
         CLI   0(R3),X'19'         WRITE, SPACE 3 AFTER PRINT.
         BE    ASA6
         CLI   0(R3),X'89'         WRITE, SKIP TO CHANNEL 1 AFTER PRINT
         BE    ASA7
         CLI   0(R3),X'0B'         SPACE 1 IMMEDIATELY.
         BE    ASA1
         CLI   0(R3),X'13'         SPACE 2 IMMEDIATELY.
         BE    ASA2
         CLI   0(R3),X'1B'         SPACE 3 IMMEDIATELY.
         BE    ASA6
         CLI   0(R3),X'8B'         SKIP TO CHANNEL 1 IMMEDIATELY.
         BE    ASA4
ASA1     MVI   0(R3),C' '
         B     PRNT
ASA2     MVI   0(R3),C'0'
         B     PRNT
ASA3     MVI   0(R3),C'+'
         B     PRNT
ASA4     MVI   0(R3),C'1'
         B     PRNT
ASA5     MVI   LINE,C' '
         B     ASAP
ASA6     MVI   LINE,C'0'
         B     ASAP
ASA7     MVI   LINE,C'1'
ASAP     MVI   0(R3),C' '
         NI    SWASA+1,OFF
PRNT    $PRINT (R3),LGREC
         LTR   R15,R15
         BNZ   ERRPRT
SWASA    B     READ
         OI    SWASA+1,ON
        $PRINT LINE,LLGTH
         LTR   R15,R15
         BNZ   ERRPRT
         B     READ
         SPACE 1
RESET    MVC   1(*-*,R3),0(R3)     << EXECUTED >>
         SPACE 2
ERRVOP   MVC   DIAG+4(L'VOP),VOP
         B     DECODE
ERRGET   MVC   DIAG+4(L'GET),GET
         B     DECODE
ERRVRD   MVC   DIAG+4(L'VRD),VRD
         B     DECODE
ERRPRT   MVC   DIAG+4(L'PRT),PRT
DECODE   CVD   R15,CONV
         UNPK  DIAG+21(2),CONV+6(2)
         OI    DIAG+22,C'0'
        WTO    MF=(E,DIAG)
         LA    R10,16              SET CC = 16.
         B     ENDR+L'ENDR
ENDR     XR    R10,R10             SET CC = 0.
        $VCLOSE
         L     R2,ALG
        FREEMAIN   E,LV=(2),A=AREC
        $PCLOSE
         LR    R15,R10             SET RETURN CODE.
        $XRET  CC=(15)
         SPACE 1
         DROP  R12
         EJECT
        LTORG
         SPACE 2
*        CONSTANTS AND WORK AREAS.
         SPACE 1
CONV     DC    D'0'
AREC     DC    A(*-*)
ALG      DC    A(*-*)
LLGTH    DC    A(LLG)
LGREC    DC    F'0'
DIAG    WTO    '         - ERROR    DETECTED. -EXIT-',MF=L
LINE     DC    CL133' '
VOP      DC    C'VOPEN'
GET      DC    C'GETMAIN'
VRD      DC    C'VREAD'
PRT      DC    C'PRINT'
         SPACE 2
         END
