SERV     TITLE 'CLEAN-UP - SERVICES (SERV).'
        PRINT  OFF
        COPY   CLMAC
        PRINT  ON
        @SERV  M=SERVICES
         EJECT
*        SKIP PROCESSING ROUTINE (USED BY MACRO @XS).
         SPACE 1
SKIPT    TM    WHAT,WHCHECK        CHECK RUN REQUESTED?
         BOR   R14                 YES
         L     R15,TBSKP           START OF SKIP NAMES TABLE
SKIP1    CLI   0(R15),FMOFF        END OF TABLE?
         BER   R14                 YES
         TM    RUNIND,RUTEST       TEST RUN?
         BZ    *+L'*+10            NO, ONLY ALIAS NAME ACCEPTED
         CLC   0(8,R15),8(R8)      THIS NAME?
         BE    SKIP2               YES
         CLC   0(8,R15),16(R8)     THIS ALIAS NAME?
         BE    SKIP2               YES
         LA    R15,8(R15)          NEXT NAME IF ANY
         B     SKIP1
SKIP2    LM    R14,R12,12(R13)     RESTORE ENTRY REGISTERS
         MVI   12(R13),X'FF'       SET RETURN INDICATOR
         BR    R14                 RETURN
         EJECT
*        TIME PROCESSING ROUTINE (USED BY MACRO @XS).
         SPACE 1
TIMET    TM    RUNOPT,RUTMT        TIME REQUESTED?
         BZR   R14                 NO, SKIP INACTIVE
         STM   R14,R1,SVREGS       SAVE RETURN
        $GDATE FILLDT,WORKD,MF=(E,TIMEDT)
         MVC   TMTA(2),WORKD       TIME STAMP
         MVC   TMTA+3(2),WORKD+2
         MVC   TMTA+6(2),WORKD+4
         CLI   16(R8),C' '         MODULE HAS ALIAS NAME?
         BE    *+L'*+10            NO
         MVC   TMTB(L'TMTB),16(R8) YES, ALIAS NAME
         B     *+L'*+6
         MVC   TMTB(L'TMTB),8(R8)  MODULE NAME
        @OUT   TMT
         LM    R14,R1,SVREGS       RESTORE RETURN
         BR    R14                 RETURN
         SPACE 1
SVREGS   DC    4F'0'
TIMEDT  $GDATE ,,MF=L
         EJECT
*        OUTPUT ROUTINE : 'SYSPRINT', 'SYSLIST' OR 'SYSCOPY'.
*        ----------------
*
*              R1  - ADDRESS OF LINE TO BE OUTPUTED (THE LINE LENGTH
*                    MUST BE IN THE BYTE AT ADDRESS-1)
*              R14 - LINK REGISTER
*              R15 - ADDRESS OF SKIP PAGE CONTROL NUMBER, OPTIONAL
*                    (FORMAT : PL2)
*
*        NOTES : - THE ENTRIES "OUT", "OUTU" OUTPUTS ON SYSPRINT,
*                  "LIST", "LISTU" ON SYSLIST, AND "COPY", "COPYU"
*                  ON SYSCOPY.
*                - THE ENTRY ...U GENERATES AUTOMATICALLY A LINE
*                  WHICH UNDERLINES THE PREVIOUS TEXT.
*                - CARRIAGE REQUEST USE ASA CONTROL CHARACTERS
*                  (BLANK = SINGLE SPACE, 0 = DOUBLE SPACE,
*                  1 = SKIP PAGE).
*                - THE ROUTINE GENERATES AUTOMATICALLY THE HEADER
*                  WHEN REQUESTED SPECIFICALLY BY A SKIP PAGE OR
*                  AT THE END OF PAGE DETECTION.
*                - THE FOLLOWING MACROS MAY BE USED TO CALL IT :
*                  @OUT, @LIST OR @COPY XXXX,ZZZZ,U
*                                       (RX)
*                  WHERE : XXXX -----> LINE TO OUTPUT
*                          ZZZZ -----> SKIP PAGE CONTROL
*                             U -----> OPTION TO UNDERLINE
*                  THE MACRO @OUT OUTPUTS ON SYSPRINT, @LIST ON
*                  SYSLIST, AND @COPY ON SYSCOPY.
         SPACE 1
COPYU    OI    STATUS,STUNDER
COPY     STM   R14,R4,SVR14O
         TM    WHAT,WHCOPY         IS "SYSCOPY" ALLOCATED?
         BO    CPY14               YES
         STM   R5,R12,SVR14OX
         L     R6,DACOPY
         USING DYNLIST,R6
         SPACE 1
* NOTE - WHEN THE MASTER CATALOG IS VSAM OR ICF ('STEPCAT' PRESENT)
*        THE "CATLG" AT $DYNALL TIME ENDS WITH R15=04 AND ERC=5708.
*        TO BYPASS THE SITUATION, THE DATA-SET IS FIRST ALLOCATED
*        WITH "KEEP" AND THEN CATALOGED USING CATALOG MACRO (OS-CVOL)
*        OR INVOKING IDCAMS FUNCTION (ALIAS).
         SPACE 1
         L     R14,ATIOT
         USING TIODSECT,R14
         XR    R1,R1
CPY1     CLC   TIOELNGH(4),=XL4'0'
         BE    CPY3
         CLC   TIOEDDNM,=CL8'STEPCAT'
         BE    *+L'*+10
         IC    R1,TIOELNGH
         AR    R14,R1
         B     CPY1
         DROP  R14
         MVI   WORKDS,C' '
         MVC   WORKDS+1(L'WORKDS-1),WORKDS
         MVC   WORKDS(9),COPYDS
         LA    R0,WORKDS
         LA    R1,WORKDS+8
CPY2     CLI   0(R1),C'.'
         MVI   0(R1),C' '
         BE    CPY4
         BCTR  R1,0
         CLR   R1,R0
         BH    CPY2
CPY3     MVC   DSNDISP(5),=CL5'CATLG'
         B     CPY5
CPY4     XC    LOCAREA(256),LOCAREA
         XC    LOCAREA+256(LOCAREAL-256),LOCAREA+256
         LA    R1,WORKDS
         ST    R1,COPYCV+4
         LA    R1,LOCAREA
         ST    R1,COPYCV+12
        LOCATE COPYCV
         LTR   R15,R15
         BNZ   CPY3
         CLC   LOCAREA(2),=H'1'
         BNE   CPY3
         CLC   WORKDS(9),=CL9'SYSCTLG.V'
         BE    *+L'*+10
         MVC   COPYCNME,WORKDS
         B     *+L'*+6
         MVC   CPYCVOL(L'CPYCVOL),LOCAREA+6
         MVC   DSNDISP(4),=CL4'KEEP'
CPY5     MVC   DDNAME,DDCOPY
         MVC   DSNAME,COPYDS
         MVC   DSSTATUS(3),=CL3'NEW'
         MVC   DSADISP(6),=CL6'DELETE'
         MVC   DSUNIT(4),=CL5'DISK'
         MVC   DSVOLSER,CPYVOL
         MVC   DSALLOC(3),=CL3'CYL'
         MVI   DSPRI,C'3'
         MVI   DSSEC,C'1'
         MVC   DSBLKSI(4),=CL4'1330'
         MVC   DSORG(2),=CL2'PS'
         MVC   DSLRECL(3),=CL3'133'
         MVI   DSRECFM1,C'F'
         MVI   DSRECFM2,C'B'
         MVI   DSRECFM5,C'A'
        $DYNALL (R6),,MF=(E,DYNPLS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    CPY6
         NI    STATUS,255-STCOPY-STUNDER     SUPPRESS COPY
         MVC   SVR14OT(7*4),SVR14O SAVE AROUND DYNFAIL
         ICM   R1,B'1111',=CL4'ALL.'
         LA    R15,DDNAME
         BAS   R14,DYNFAIL
         LM    R14,R4,SVR14OT      RESTORE ORIGINAL REGISTERS
         LM    R5,R12,SVR14OX
         BR    R14                 RETURN
CPY6     CLC   DSNDISP(5),=CL5'CATLG'
         BE    CPY13
         DROP  R6
         L     R14,ATIOT
         USING TIODSECT,R14
         XR    R1,R1
CPY7     CLC   TIOELNGH(4),=XL4'0'
         BE    CPY8
         CLC   TIOEDDNM,DDCOPY
         BE    CPY9
         IC    R1,TIOELNGH
         AR    R14,R1
         B     CPY7
CPY8    WTO    '--- COPY : DD-SYSCOPY NOT FOUND IN TIOT.',             C
               ROUTCDE=11,DESC=7
         B     CPY12
CPY9     ICM   R1,B'0111',TIOEFSRT
         DROP  R14
         USING UCBDSECT,R1
         MVC   CPYVOL,UCBVOLI
         MVC   CPYTY,UCBTYP
         NI    CPYTY+1,255-UCBRR
         DROP  R1
         CLI   COPYCNME,C' '
         BNE   CPY10
         LA    R1,COPYDS
         ST    R1,COPYCA+4
         LA    R1,CPYCVOL
         ST    R1,COPYCA+8
         LA    R1,CPYCAT
         ST    R1,COPYCA+12
        CATALOG COPYCA
         B     CPY11
CPY10    LA    R1,COPYDS
         ST    R1,IDCDSN
         LA    R1,COPYCNME
         ST    R1,IDCPLS
         MVI   IDCFUN,C'C'
         MVC   SVR14OT(7*4),SVR14O SAVE AROUND CALL
        @X     C001                INVOKE IDCAMS FUNCTION
         MVC   SVR14O(7*4),SVR14OT RESTORE ORIGINAL REGISTERS
CPY11    LTR   R15,R15
         BZ    CPY13
        WTO    '--- COPY : CATALOG OF DATA-SET FAILED.',               C
               ROUTCDE=11,DESC=7
CPY12    OI    RUSREQ,RUSSCR       SET SCRATCH REQUESTED
         NI    STATUS,255-STCOPY-STUNDER     SUPPRESS COPY
         LM    R14,R4,SVR14O       RESTORE ORIGINAL REGISTERS
         LM    R5,R12,SVR14OX
         BR    R14                 RETURN
CPY13    OI    WHAT,WHCOPY         SET ALLOCATED
         LM    R14,R12,SVR14O
CPY14    LA    R3,DDCOPY
         LA    R4,PLINE
         B     OUT1
         SPACE 1
LISTU    OI    STATUS,STUNDER
LIST     STM   R14,R4,SVR14O
         LA    R3,DDLIST
         LA    R4,LLINE
         B     OUT1
         SPACE 1
OUTU     OI    STATUS,STUNDER
OUT      STM   R14,R4,SVR14O
         XR    R3,R3
         LA    R4,CLINE
OUT1     LR    R2,R1
         CLI   0(R2),C'1'          SKIP PAGE REQUESTED?
         BE    OUT2                YES
         LTR   R15,R15             SKIP PAGE CONTROL REQUESTED?
         BZ    *+L'*+10            NO
         CP    0(2,R4),0(2,R15)    SKIP PAGE NEEDED?
         BH    OUT2                YES
         CLI   0(R2),C'0'          DOUBLE SPACE?
         BNE   *+L'*+6             NO
         AP    0(2,R4),=PL1'+1'    YES, COUNT IT
         CP    0(2,R4),=PL2'+55'   PAGE OVERFLOW?
         BNH   OUT4                NO
OUT2     AP    2(3,R4),=PL1'+1'
         MVC   TITPAG,MASK
         ED    TITPAG,2(R4)
         LTR   R3,R3
         BZ    *+L'*+6
         MVC   TITCOM(13),=CL13'(DETAIL LIST)'
         NOP   OUTTT
         OI    *-3,ON
        $PRINT TIT,,,MF=(L,OUTTIT)
OUTTT   $PRINT ,,(R3),MF=(E,OUTTIT)     PAGE HEADER
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OUTERR
         LTR   R3,R3
         BZ    *+L'*+6
         MVC   TITCOM(13),TITCOM-1
         NOP   OUTSS
         OI    *-3,ON
        $PRINT SPACE,,,MF=(L,OUTSPC)
OUTSS   $PRINT ,,(R3),MF=(E,OUTSPC)     SPACE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OUTERR
         OC    SUBTLA,SUBTLA       SUB-TITLE REQUESTED?
         BZ    OUT3                NO
         L     R14,SUBTLA
         MVC   OUTCC1+1(1),0(R14)
         MVI   0(R14),C' '
        $PRINT (R14),,(R3),MF=(E,OUTPRT)     SEND REQUESTED TEXT
         ZAP   0(2,R4),=PL1'+1'
         L     R1,SUBTLA
OUTCC1   MVI   0(R1),*-*           RESTORE CARRIAGE
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OUTERR
OUT3     ZAP   0(2,R4),=PL1'+1'
         MVC   OUTCC2+1(1),0(R2)
         MVI   0(R2),C' '
         NI    OUTSW1+1,OFF
OUT4    $PRINT (R2),,(R3),MF=(E,OUTPRT) SEND REQUESTED TEXT
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OUTERR
         AP    0(2,R4),=PL1'+1'
OUTSW1   B     OUTSW2
         OI    OUTSW1+1,ON
OUTCC2   MVI   0(R2),*-*           RESTORE CARRIAGE
OUTSW2   TM    STATUS,STUNDER
         BZ    OUTEX
         NI    STATUS,255-STUNDER
         LA    R1,1(R2)            BUILD UNDERLINE
         BCTR  R2,0
         CLI   0(R2),2
         BL    OUTEX
         XR    R14,R14
         IC    R14,0(R2)
         LA    R15,0(R2,R14)
OUT5     CLI   0(R1),C' '
         BNE   *+L'*+14
         LA    R1,1(R1)
         CLR   R1,R15
         BNH   *-14
         B     OUTEX
         CLI   0(R15),C' '
         BNE   *+L'*+8
         BCTR  R15,0
         CLR   R15,R1
         BH    *-12
         MVC   UNDRL+1(L'UNDRL-1),UNDRL
         LR    R0,R15
         SR    R0,R2
         STC   R0,UNDRL-1
         SR    R15,R1
         SR    R1,R2
         LA    R1,UNDRL-1(R1)
         MVI   0(R1),C'-'
         LTR   R15,R15
         BNP   *+L'*+6
         BCTR  R15,0
         EX    R15,OUTMV
         NOP   OUTUU
         OI    *-3,ON
        $PRINT UNDRL,,,MF=(L,OUTUND)
OUTUU   $PRINT ,,(R3),MF=(E,OUTUND)     UNDERLINE TEXT
         LTR   R15,R15             TEST RETURN CODE
         BNZ   OUTERR
         AP    0(2,R4),=PL1'+1'
OUTEX    LM    R14,R4,SVR14O
         BR    R14                 RETURN
OUTMV    MVC   1(*-*,R1),0(R1)
OUTERR   LR    R9,R15
         LTR   R3,R3
         BZ    *+L'*+10
         MVC   OUTMSG1(L'OUTMSG1),0(R3)
         B     *+L'*+4
         OI    WHATS,WHPERR        SYSPRINT ERROR
        WTO    MF=(E,OUTMSG)
         LTR   R3,R3
         BZ    MAINABE
         CLC   0(L'DDCOPY,R3),DDCOPY
         BNE   MAINABE
         OI    STATUS,STSCPY       SET SCRATCH COPY
         NI    STATUS,255-STCOPY   RESET COPY REQUEST
         B     MAINABE
         EJECT
COPYCV  CAMLST NAME,*-*,,*-*
COPYCA  CAMLST CAT,*-*,*-*,*-*
         SPACE 1
OUTTIT  $PRINT ,,,MF=L             PAGE HEADER
OUTUND  $PRINT ,,,MF=L             UNDERLINE TEXT
OUTSPC  $PRINT ,,,MF=L             SPACE
OUTPRT  $PRINT ,,,MF=L             SEND REQUESTED TEXT
         EJECT
SVR14O   DC    7F'0'               R14-R4 / ---> THESE 2 AREAS MUST
SVR14OX  DC    8F'0'               R5-R12 /      BE IN SEQUENCE.
SVR14OT  DC    7F'0'
DDLIST   DC    CL8'SYSLIST'
DDCOPY   DC    CL8'SYSCOPY'
         SPACE 1
OUTMSG  WTO    '--- CLEAN ERROR : PRINT ON SYSPRINT ',                 C
               ROUTCDE=11,DESC=7,MF=L
OUTMSG1  EQU   OUTMSG+31,8
         SPACE 1
MASK     DC    XL6'402020202120'
         EJECT
*        FILL ROUTINE :
*        --------------
*
*              R0  - LENGTH OF FIELD DIVIDED BY 2
*              R1  - ADDRESS OF THE FIELD END MINUS 2
*              R14 - LINK REGISTER
*
*              NOTE - THE FOLLOWING MACRO MAY BE USED TO CALL IT :
*                            @FILL XXXX,ZZZZ
*                                  XXXX -----> FIELD TO BE FILLED
*                                  ZZZZ -----> FIELD OF EQUIVALENT
*                                              LENGTH
         SPACE 1
FILL     STM   R14,R1,SVR14X
         LA    R15,2
FILL1    CLC   0(2,R1),=CL2' '
         BNE   FILL2
         MVI   1(R1),C'-'
         SR    R1,R15
         BCT   R0,FILL1
FILL2    LM    R14,R1,SVR14X
         BR    R14
         SPACE 1
SVR14X   DC    4F'0'
         EJECT
*        IDCAMS INPUT-OUTPUT ALLOCATION ROUTINES :
*        -----------------------------------------
*
* AT ENTRY :   R14 - LINK REGISTER
*  AT EXIT :   R6  - DYNAM LIST POINTER
*              R15 - RETURN CODE : 0 = ALLOCATION DONE
*                                  4 = ALLOCATION FAILED
         SPACE 1
IDCIAR   XR    R15,R15             SET RC=0
         L     R6,DAIDIN
         USING DYNLIST,R6
         CLC   DDNAME(8),=CL8'XQIDIN'
         BER   R14                 RETURN IF ALREADY ALLOCATED
         MVC   DDNAME(8),=CL8'XQIDIN'
         MVC   DSNAME(6),=CL6'&&&&IDIN'
         MVI   DSPRI,C'5'
         MVC   DSBLKSI(3),=CL3'800'
         MVC   DSORG(2),=CL2'PS'
         MVC   DSLRECL(2),=CL2'80'
         MVI   DSRECFM1,C'F'
         MVI   DSRECFM2,C'B'
         B     IDCIOA
IDCOAR   XR    R15,R15             SET RC=0
         L     R6,DAIDOUT
         USING DYNLIST,R6
         CLC   DDNAME(8),=CL8'XQIDOUT'
         BER   R14                 RETURN IF ALREADY ALLOCATED
         MVC   DDNAME(8),=CL8'XQIDOUT'
         MVC   DSNAME(6),=CL6'&&&&IDOUT'
         MVC   DSPRI(2),=CL2'10'
IDCIOA   ST    R14,SVR14A
         MVC   DSSTATUS(3),=CL3'NEW'
         MVC   DSNDISP(6),=CL6'DELETE'
         MVC   DSADISP(6),=CL6'DELETE'
         MVC   DSUNIT(3),=CL3'VIO'
         MVC   DSALLOC(3),=CL3'TRK'
         MVI   DSSEC,C'5'
        $DYNALL (R6),,MF=(E,DYNPLS)
         LTR   R15,R15             TEST RETURN CODE
         BZ    IDCIOR              RETURN IF ALLOCATED
         ICM   R1,B'1111',=CL4'ALL.'
         LA    R15,DDNAME
         BAS   R14,DYNFAIL
         DROP  R6
         LA    R15,4               SET RC=4
IDCIOR   L     R14,SVR14A
         BR    R14
         SPACE 1
SVR14A   DC    F'0'
         EJECT
*        DYNAM FAIL ROUTINE :
*        --------------------
*
*              R1  - DYNAM OPERATION NAME ('ALL.' OR 'FREE')
*              R14 - LINK REGISTER
*              R15 - DYNAM DD-NAME POINTER
         SPACE 1
DYNFAIL  ST    R14,SVR14L
         STCM  R1,B'1111',DFOPER
         MVC   DFNAME(L'DFNAME),0(R15)
         UNPK  DFERC(L'DFERC+1),RCODES(3)
         MVI   DFERC+L'DFERC,C''''
         TR    DFERC(L'DFERC),TRTAB-X'F0'
         UNPK  DFINFO(L'DFINFO+1),RCODES+2(3)
         MVI   DFINFO+L'DFINFO,C''''
         TR    DFINFO(L'DFINFO),TRTAB-X'F0'
         UNPK  DFRC15(L'DFRC15+1),RCODES+4(5)
         MVI   DFRC15+L'DFRC15,C''''
         TR    DFRC15(L'DFRC15),TRTAB-X'F0'
        @OUT   DFMSG
         L     R14,SVR14L
         BR    R14                 RETURN
         SPACE 1
SVR14L   DC    F'0'
         EJECT
*        EXECUTE IDCAMS ROUTINE :
*        ------------------------
*
*              R14 - LINK REGISTER
*              R15 - IDCAMS RETURN CODE
         SPACE 1
XIDCAMS  ST    R14,SVR14I
        LINK   EP=IDCAMS,PARAM=(IDCOPT,IDCDDNM),VL=1
         L     R14,SVR14I
         BR    R14                 RETURN
         SPACE 1
SVR14I   DC    F'0'
IDCOPT   DC    H'0'
IDCDDNM  DC    AL2(IDCDDNML)
         DC    4XL8'0'
         DC    CL8'XQIDIN'
         DC    CL8'XQIDOUT'
IDCDDNML EQU   *-IDCDDNM
         EJECT
*        SNAPS ROUTINE : 'SYSSNAP'
*        ---------------
*
*              R14 - LINK REGISTER
*
*              CALL : ... BAS   R14,SNAPS
*                         DC    AL4(LLL),XL1'0',CL3'ZZZ'
*                         ...
*                     LLL DC    A(FIELD#1)
*                         DC    A(L'FIELD#1)
*                         DC    A(FIELD#2)
*                         DC    A(L'FIELD#2)
*                         ...
*                         DC    A(FIELD#N)
*                         DC    XL1'80',AL3(L'FIELD#N)
*
*              NOTE - THE FOLLOWING MACRO MAY BE USED TO CALL IT :
*                            @SNAPS XXX,YYY,ZZZ
*                                   XXX -----> INDICATOR SUFFIX
*                                   YYY -----> SNAP LIST
*                                   ZZZ -----> TEST FLAG IDENTIFIER
         SPACE 1
SNAPS    STM   R14,R4,SVSNAP       SAVE REGISTERS
         ICM   R2,B'1111',0(R14)   GET STARTING LIST ADDRESS
         MVC   SNAPTFI(3),5(R14)   GET TEST FLAG IDENTIFIER
         MVC   SNAPTFN,MNAME       GET MODULE NAME IDENTIFIER
         NOP   SNAPS1
         OI    *-3,ON
        $PRINT SNAPID,,DDSNAP,MF=(L,SNAPSP)
        $SNAP  ,,(R15),MF=(L,SNAPSS)
SNAPS1  $PRINT MF=(E,SNAPSP)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR47
         XR    R4,R4               SET INDICATOR
SNAPS2   L     R3,0(R2)            FIELD ADDRESS
         LA    R2,4(R2)            LENGTH ADDRESS
         IC    R4,0(R2)            GET FINAL INDICATOR
         MVI   0(R2),0             CLEAR IT FROM LENGTH
        $SNAP  (R3),(R2),,MF=(E,SNAPSS)
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR47
         LTR   R4,R4               END OF LIST?
         BNZ   *+L'*+8             YES
         LA    R2,4(R2)            NO, NEXT LIST
         B     SNAPS2
         MVI   0(R2),X'80'         RESTORE FINAL INDICATOR
         LM    R14,R4,SVSNAP       RESTORE REGISTERS
         B     8(R14)              RETURN
         SPACE 1
SNAPSP  $PRINT ,,,MF=L
SNAPSS  $SNAP  ,,,MF=L
         EJECT
*        DUMP A BYTE ROUTINES :
*        ----------------------
*
*              R0  - WORK REGISTER
*              R1  - LINE TARGET ADDRESS
*              R14 - LINK REGISTER
*              R15 - BYTE ADDRESS
         SPACE 1
DMPRTN   MVC   1(6,R1),=CL6'-X''  '''
         IC    R0,0(R15)
         STC   R0,5(R1)
         SRL   R0,4
         STC   R0,4(R1)
         NC    4(2,R1),=XL2'0F0F'
         TR    4(2,R1),TRTAB
         LA    R1,8(R1)
         BR    R14
         SPACE 1
DMPRTS   MVC   0(8,R1),=CL8'X''  '''
         IC    R0,0(R15)
         STC   R0,3(R1)
         SRL   R0,4
         STC   R0,2(R1)
         NC    2(2,R1),=XL2'0F0F'
         TR    2(2,R1),TRTAB
         BR    R14
         EJECT
*        AUDIT FLAG ANALYSIS ROUTINE :
*        -----------------------------
*
*              R3  - AUDIT FLAG BYTE POINTER
*              R5  - LINE TARGET ADDRESS
*              R14 - LINK REGISTER
         SPACE 1
AUDITF   TM    0(R3),X'80'         ALL?
         BZ    *+L'*+14            NO
         MVC   0(3,R5),=CL3'ALL'
         LA    R5,3(R5)
         B     AUDITF1
         TM    0(R3),X'40'         SUCCESS?
         BZ    *+L'*+14            NO
         MVC   0(7,R5),=CL7'SUCCESS'
         LA    R5,7(R5)
         B     AUDITF1
         TM    0(R3),X'20'         FAILURES?
         BZ    *+L'*+14            NO
         MVC   0(8,R5),=CL8'FAILURES'
         LA    R5,8(R5)
         B     AUDITF1
         TM    0(R3),X'10'         NONE?
         BZ    *+L'*+14            NO
         MVC   0(4,R5),=CL4'NONE'
         LA    R5,4(R5)
         B     AUDITF1
         MVC   0(2,R5),=CL2'**'
         LA    R5,2(R5)
AUDITF1  MVC   1(7,R5),=CL7'(Q.S. :'
         TM    0(R3),X'0C'         ALTER?
         BNO   *+L'*+14            NO
         MVC   9(5,R5),=CL5'ALTER'
         LA    R5,15(R5)
         B     AUDITF2
         TM    0(R3),X'08'         CONTROL?
         BZ    *+L'*+14            NO
         MVC   9(7,R5),=CL7'CONTROL'
         LA    R5,17(R5)
         B     AUDITF2
         TM    0(R3),X'04'         UPDATE?
         BZ    *+L'*+14            NO
         MVC   9(6,R5),=CL6'UPDATE'
         LA    R5,16(R5)
         B     AUDITF2
         MVC   9(4,R5),=CL4'READ'
         LA    R5,14(R5)
AUDITF2  MVC   0(8,R5),=CL8'- Q.U. :'
         TM    0(R3),X'03'         ALTER?
         BNO   *+L'*+14            NO
         MVC   9(5,R5),=CL5'ALTER'
         LA    R5,14(R5)
         B     AUDITF3
         TM    0(R3),X'02'         CONTROL?
         BZ    *+L'*+14            NO
         MVC   9(7,R5),=CL7'CONTROL'
         LA    R5,16(R5)
         B     AUDITF3
         TM    0(R3),X'01'         UPDATE?
         BZ    *+L'*+14            NO
         MVC   9(6,R5),=CL6'UPDATE'
         LA    R5,15(R5)
         B     AUDITF3
         MVC   9(4,R5),=CL4'READ'
         LA    R5,13(R5)
AUDITF3  MVI   0(R5),C')'
         BR    R14                 RETURN
         EJECT
        LTORG
         EJECT
*        ERROR DESCRIPTION MESSAGES TABLE.
         SPACE 1
ERRTAB   DC    A(MXCERR)
         DC    AL1(L'ERM1-1),AL3(ERM1)
         DC    AL1(L'ERM2-1),AL3(ERM2)
         DC    AL1(L'ERM3-1),AL3(ERM3)
         DC    AL1(L'ERM4-1),AL3(ERM4)
         DC    AL1(L'ERM5-1),AL3(ERM5)
         DC    AL1(L'ERM6-1),AL3(ERM6)
         DC    AL1(L'ERM7-1),AL3(ERM7)
         DC    AL1(L'ERM8-1),AL3(ERM8)
         DC    AL1(L'ERM9-1),AL3(ERM9)
         DC    AL1(L'ERM10-1),AL3(ERM10)
         DC    AL1(L'ERM11-1),AL3(ERM11)
         DC    AL1(L'ERM12-1),AL3(ERM12)
         DC    AL1(L'ERM13-1),AL3(ERM13)
         DC    AL1(L'ERM14-1),AL3(ERM14)
         DC    AL1(L'ERM15-1),AL3(ERM15)
         DC    AL1(L'ERM16-1),AL3(ERM16)
         DC    AL1(L'ERM17-1),AL3(ERM17)
         DC    AL1(L'ERM18-1),AL3(ERM18)
         DC    AL1(L'ERM19-1),AL3(ERM19)
         DC    AL1(L'ERM20-1),AL3(ERM20)
         DC    AL1(L'ERM21-1),AL3(ERM21)
         DC    AL1(L'ERM22-1),AL3(ERM22)
         DC    AL1(L'ERM23-1),AL3(ERM23)
         DC    AL1(L'ERM24-1),AL3(ERM24)
         DC    AL1(L'ERM25-1),AL3(ERM25)
         DC    AL1(L'ERM26-1),AL3(ERM26)
         DC    AL1(L'ERM27-1),AL3(ERM27)
         DC    AL1(L'ERM28-1),AL3(ERM28)
         DC    AL1(L'ERM29-1),AL3(ERM29)
         DC    AL1(L'ERM30-1),AL3(ERM30)
         DC    AL1(L'ERM31-1),AL3(ERM31)
         DC    AL1(L'ERM32-1),AL3(ERM32)
         DC    AL1(L'ERM33-1),AL3(ERM33)
         DC    AL1(L'ERM34-1),AL3(ERM34)
         DC    AL1(L'ERM35-1),AL3(ERM35)
         DC    AL1(L'ERM36-1),AL3(ERM36)
         DC    AL1(L'ERM37-1),AL3(ERM37)
         DC    AL1(L'ERM38-1),AL3(ERM38)
         DC    AL1(L'ERM39-1),AL3(ERM39)
         DC    AL1(L'ERM40-1),AL3(ERM40)
         DC    AL1(L'ERM41-1),AL3(ERM41)
         DC    AL1(L'ERM42-1),AL3(ERM42)
         DC    AL1(L'ERM43-1),AL3(ERM43)
         DC    AL1(L'ERM44-1),AL3(ERM44)
         DC    AL1(L'ERM45-1),AL3(ERM45)
         DC    AL1(L'ERM46-1),AL3(ERM46)
         DC    AL1(L'ERM47-1),AL3(ERM47)
         DC    AL1(L'ERM48-1),AL3(ERM48)
         DC    AL1(L'ERM49-1),AL3(ERM49)
         DC    AL1(L'ERM50-1),AL3(ERM50)
         DC    AL1(L'ERM51-1),AL3(ERM51)
         DC    AL1(L'ERM52-1),AL3(ERM52)
         DC    AL1(L'ERM53-1),AL3(ERM53)
         DC    AL1(L'ERM54-1),AL3(ERM54)
         DC    AL1(L'ERM55-1),AL3(ERM55)
         DC    AL1(L'ERM56-1),AL3(ERM56)
         DC    AL1(L'ERM57-1),AL3(ERM57)
         DC    AL1(L'ERM58-1),AL3(ERM58)
         DC    AL1(L'ERM59-1),AL3(ERM59)
         DC    AL1(L'ERM60-1),AL3(ERM60)
         DC    AL1(L'ERM61-1),AL3(ERM61)
         DC    AL1(L'ERM62-1),AL3(ERM62)
         DC    AL1(L'ERM63-1),AL3(ERM63)
         DC    AL1(L'ERM64-1),AL3(ERM64)
         DC    AL1(L'ERM65-1),AL3(ERM65)
         DC    AL1(L'ERM66-1),AL3(ERM66)
         DC    AL1(L'ERM67-1),AL3(ERM67)
         DC    AL1(L'ERM68-1),AL3(ERM68)
         DC    AL1(L'ERM69-1),AL3(ERM69)
         DC    AL1(L'ERM70-1),AL3(ERM70)
         DC    AL1(L'ERM71-1),AL3(ERM71)
         DC    AL1(L'ERM72-1),AL3(ERM72)
         DC    AL1(L'ERM73-1),AL3(ERM73)
         DC    AL1(L'ERM74-1),AL3(ERM74)
         DC    AL1(L'ERM75-1),AL3(ERM75)
         DC    AL1(L'ERM76-1),AL3(ERM76)
         DC    AL1(L'ERM77-1),AL3(ERM77)
         DC    AL1(L'ERM78-1),AL3(ERM78)
         DC    AL1(L'ERM79-1),AL3(ERM79)
         DC    AL1(L'ERM80-1),AL3(ERM80)
         SPACE 1
MXCERR   EQU   (*-ERRTAB)/4
         SPACE 1
ERM1     DC    C'"GDATE" OR "SDATE" ERROR'
ERM2     DC    C'EL.VOL. (...) NOT FOUND OR SYNTAX ERROR'
ERM3     DC    C'EL. VOL. NAME .GT. 6 CHAR. LONG'
ERM4     DC    C'EL. VOL. TABLE OVERFLOW (NEV)'
ERM5     DC    C'EL. VOL. TABLE EMPTY'
ERM6     DC    C'CAT.VOL. (...) NOT FOUND OR SYNTAX ERROR'
ERM7     DC    C'CAT. VOL. NAME NOT 6 CHAR. LONG'
ERM8     DC    C'CAT. OR N-CAT. VOL. TABLE OVERFLOW (NCV)'
ERM9     DC    C'CAT. VOL. TABLE EMPTY'
ERM10    DC    C'"DARSCA" ERROR'
ERM11    DC    C'DDNAME''S TABLE OVERFLOW (NDD)'
ERM12    DC    C'"DAUNTY" ERROR'
ERM13    DC    C'DDNAME''S TABLE EMPTY'
ERM14    DC    C'"DAVALL" ERROR'
ERM15    DC    C'VOLUME : ...... - "VTOCQO" ERROR'
ERM16    DC    C'VOLUME : ...... - "VTOCQR" ERROR'
ERM17    DC    C'DSNAME''S TABLE OVERFLOW (NRE)'
ERM18    DC    C'VOLUME : ...... - "VTOCQC" ERROR'
ERM19    DC    C'VOLUME : ...... - "CATSR" UNEXPECTED CAT. INDICATOR'
ERM20    DC    C'"ICHEINTY" (RACF READ) ERROR'
ERM21    DC    C'"READ" FROM ''SYSIN'' ERROR'
ERM22    DC    C'CONTROL CARD ERROR'
ERM23    DC    C'"DYNALL" OR "MOPEN" OF ''SYSPDS'' ERROR'
ERM24    DC    C'"MFIND" FROM ''SYSPDS'' ERROR'
ERM25    DC    C'"MREAD" FROM ''SYSPDS'' ERROR'
ERM26    DC    C'"MCLOSE" OR "DYNALL" OF ''SYSPDS'' ERROR'
ERM27    DC    C'VOLUME : ...... - "VTOCDO" ERROR'
ERM28    DC    C'VOLUME : ...... - "VTOCDR" ERROR'
ERM29    DC    C'FMT1 DSCB DSNAME MATCH ERROR'
ERM30    DC    C'VOLUME : ...... - "VTOCDW" ERROR'
ERM31    DC    C'VOLUME : ...... - "VTOCDC" ERROR'
ERM32    DC    C'JOB-NAME ERROR (MISSING)'
ERM33    DC    C'LOCATE BY TTR ERROR'
ERM34    DC    C'VOLUME : ...... - "CATSO" ERROR'
ERM35    DC    C'VOLUME : ...... - "CATSR" ERROR'
ERM36    DC    C'VOLUME : ...... - "CATSC" ERROR'
ERM37    DC    C'PARM. FIELD SYNTAX ERROR'
ERM38    DC    C'"INSORT" ERROR'
ERM39    DC    C'"GETMAIN" ERROR - REGION SPACE TOO SMALL'
ERM40    DC    C'"READ" FROM ''SYSCMD'' ERROR'
ERM41    DC    C'''EXEMPT'' - DSNAME .GT. 44 CHAR. LONG'
ERM42    DC    C'STACK SAVE AREAS ERROR'
ERM43    DC    C'N-CAT.VOL. (...) SYNTAX ERROR'
ERM44    DC    C'N-CAT. VOL. NAME .GT. 6 CHAR. LONG'
ERM45    DC    C'"EDITH" ERROR'
ERM46    DC    C'COMPUTED SPACE VALUE TOO BIG'
ERM47    DC    C'"SNAP" ERROR'
ERM48    DC    C'SKIP MODULE NAME .GT. 8 CHAR. LONG'
ERM49    DC    C'SKIP MODULE NAMES TABLE OVERFLOW (NSK)'
ERM50    DC    C'NOT-DECLARED VOL. TABLE OVERFLOW (NDV)'
ERM51    DC    C'N-LOC.VOL. NAME NOT 6 CHAR. LONG'
ERM52    DC    C'N-LOC.VOL. - DSNAME .GT. 44 CHAR. LONG'
ERM53    DC    C'BYPASS RACF NAME .GT. 44 CHAR. LONG OR SYNTAX ERROR'
ERM54    DC    C'BYPASS RACF NAMES TABLE OVERFLOW (NBR)'
ERM55    DC    C'VOLUME : ...... - "ICFSO" ERROR'
ERM56    DC    C'VOLUME : ...... - "ICFSR" ERROR'
ERM57    DC    C'VOLUME : ...... - "ICFSC" ERROR'
ERM58    DC    C'CATALOG VOLUME NOT FOUND - LOGIC ERROR'
ERM59    DC    C'"ACCOUNT" - ACC. VOL. TABLE OVERFLOW (NEV)'
ERM60    DC    C'"DYNALL" OR "PUNCH" TO ''SYSDATA'' ERROR'
ERM61    DC    C'COPY DSNAME MISSING OR .GT. 44 CHAR. LONG'
ERM62    DC    C'COPY START COMMAND TEXT ERROR OR TOO LONG'
ERM63    DC    C'UNEXPECTED DDNAME''S TABLE STATUS ERROR'
ERM64    DC    C'CVOL PTR. TABLE OVERFLOW (NGV)'
ERM65    DC    C'WRONG FIRST LEVEL INDEX (.................)'
ERM66    DC    C'VOLUME : ...... - "DYNALL" OF A CATALOG ERROR'
ERM67    DC    C'ALLOCATED ICF CATALOG IS NOT THAT REQUESTED'
ERM68    DC    C'UNEXPECTED ICF CATALOG INDICATOR RECEIVED'
ERM69    DC    C'"GETMAIN" ERROR - IDCAMS ARRAY(S) SPACE'
ERM70    DC    C'ICF CATALOG NAME NOT FOUND - IDCAMS GENERATE'
ERM71    DC    C'"DYNALL" OR "PUNCH" TO ''XQIDIN'' ERROR'
ERM72    DC    C'"DYNALL" OR "READ" TO ''XQIDOUT'' ERROR'
ERM73    DC    C'''XQIDOUT'' - INVALID LOGICAL RECORD LENGTH'
ERM74    DC    C'VOLUME : ...... - MULTIPLE FORMAT 4 DSCB ERROR'
ERM75    DC    C'HIGH-LEVEL QUALIFIER (HLQ) NAME TOO LONG'
ERM76    DC    C'HLQ NAMES TABLE OVERFLOW'
ERM77    DC    C'GENERIC NAMES TABLE OVERFLOW'
ERM78    DC    C'COPYVOL(...) ERROR - INVALID CODING'
ERM79    DC    C'INVOKE IDCAMS FUNCTION - INVALID FUNCTION CODE'
ERM80    DC    C'INVOKE IDCAMS FUNCTION - INVALID DEVICE TYPE'
         SPACE 2
        @COMM  M=SERVICES
         SPACE 2
TIODSECT DSECT
        IEFTIOT1
         SPACE 2
         END
