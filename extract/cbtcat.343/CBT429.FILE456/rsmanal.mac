RSMA     TITLE 'RSMANAL - RSM ANALYSIS.'
        PRINT  OFF
         MACRO           SAVE AREA'S TANK MANAGEMENT
&NAME   @ENTER &DUMMY
        CNOP   0,4
         USING &NAME,R11           SET LOCAL ADDRESSABILITY
&NAME    STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R11,R15             SET LOCAL BASE REGISTER
         CP    TANKNO,TANKMX       CONTROL TANK AVAILABILITY
         BNL   STOVER              OVERFLOW
         AP    TANKNO,TANKUP       UP TANKS NUMBER
         LA    R15,18*4(R13)       NEXT SAVE AREA
         XC    0(18*4,R15),0(R15)  CLEAR IT
         ST    R15,8(R13)          LINK SAVE AREAS
         ST    R13,4(R15)
         LR    R13,R15             ACTIVATE NEW SAVE AREA
         MEND
         MACRO           SAVE AREA'S TANK MANAGEMENT
&NAME   @EXIT  &DUMMY
&NAME    CP    TANKNO,TANKUP       CONTROL TANK AVAILABILITY
         BL    STUNDER             UNDERFLOW
         SP    TANKNO,TANKUP       DOWN TANKS NUMBER
         L     R13,4(R13)          PREVIOUS SAVE AREA
         ST    R15,16(R13)         SET REGISTER 15 (RC)
         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS
         MVI   12(R13),X'FF'       INDICATE RETURN EXECUTED
         BR    R14                 RETURN
         DROP  R11                 KILL LOCAL ADDRESSABILITY
         MEND
         MACRO           CALL ROUTINE
&NAME   @CALL  &WHERE
         AIF   ('&WHERE' EQ '').CO
&NAME    L     R15,=A(&WHERE)      GET ENTRY POINT
         BASR  R14,R15             GO TO ROUTINE
         MEXIT
.CO      ANOP
&NAME    BASR  R14,R15             GO TO ROUTINE
         MEND
         MACRO           GENERATE TABLE ENTRY
&NAME   @TPF   &Q,&I,&F
         AIF   ('&F' EQ '').NN
&NAME    DC    3F'0',XL1'&Q',AL1(&F),CL34&I
         MEXIT
.NN      ANOP
&NAME    DC    3F'0',XL1'&Q',AL1(0),CL34&I
         MEND
         MACRO           GENERATE TABLE ENTRY
&NAME   @TPE   &Q,&I
&NAME    DC    3F'0',XL1'&Q',AL1(0),CL34&I
         MEND
        PRINT  ON
         SPACE 1
RSMANAL  START 0
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *            RSM  ANALYSIS            * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    THIS PROGRAM PRODUCES A LISTING OF RSM INFORMATION     *
* ---------    FOR SPECIFIED STORAGE AREAS.                           *
*                                                                     *
* CALL OF THE PROGRAM :                                               *
* ---------------------                                               *
*                                                                     *
*        //LIST   EXEC  PGM=RSMANAL,PARM='...'                        *
*        //SYSPRINT DD  SYSOUT=A                                      *
*        //SYSSNAP  DD  SYSOUT=A (ONLY IF DEBUG NEEDED)               *
*                                                                     *
*        WHERE ... IS USED TO SPECIFY THE DESIRED STORAGE AREAS,      *
*              AND MAY BE ANY ONE OF THE FOLLOWING KEYWORDS :         *
*                   VSM  - VIRTUAL STORAGE MAP                        *
*                   PFTE - PAGE FRAME TABLE ENTRIES                   *
*                   ESTE - EXTENDED STORAGE TABLE ENTRIES             *
*              OR IF MORE THAN ONE DESIRED, THEY MUST BE SEPARATED    *
*              BY A COMMA.                                            *
*                   I.E. : PARM='PFTE,ESTE'                           *
*        ALSO ALTERNATE DD-NAMES MAY BE SPECIFIED FOR THE LIST OR     *
*              SNAP OUTPUT, AS SHOWN BELOW :                          *
*                   PARM='L=MYPRINT,S=MYSNAP'                         *
*        IF NO PARM= IS GIVEN, DEFAULT IS ASSUMED LIKE :              *
*                   PARM='PFTE,L=SYSPRINT,S=SYSSNAP'                  *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         SPACE 1
MXSTN    EQU   10                  MAXIMUM NUMBER OF SAVE-AREAS USE
*                                    TO BE GENERATED AS TANKS
WKLEN    EQU   (MXSTN*18)*4        SAVE AREAS TANKS
KB       EQU   1024                1K BYTES
         EJECT
        $DEFREG ,
        $XENT  BASE=R12,LV=WKLEN,TYPE=RENT
         EJECT
*------- INITIALIZATION
         SPACE 1
         ST    R13,SVFSVA          SAVE ADDRESS OF FIRST S.A.
         LA    R2,18*4(R13)        TANKS INITIALIZATION
         L     R3,=A(WKLEN-(18*4))
         LR    R4,R2
         XR    R5,R5
         MVCL  R2,R4
         LA    R2,MXSTN
         CVD   R2,DBLWRD
         MVC   TANKMX(L'TANKMX),DBLWRD+L'DBLWRD-L'TANKMX
         SPACE 1
*------- START PROCESSING
         SPACE 1
        @CALL  GETPARM             R1 = ADDRESS OF PARM=
        @CALL  DOVSM               DO VSM MAP
        @CALL  COLLAS              COLLECT AS-ID'S
         TM    SWSEL,SPFTE
         BZ    ESTERQ
        @CALL  PFTELS              PFTE'S LIST
ESTERQ   TM    SWSEL,SESTE
         BZ    SETRC
        @CALL  ESTELS              ESTE'S LIST
         SPACE 1
*------- TERMINATION
         SPACE 1
SETRC    XR    R10,R10
LEAVE   $PCLOSE
         ICM   R0,B'1111',LGASTB
         BZ    QUIT
         L     R1,SCASTB
        FREEMAIN R,A=(1),LV=(0)    FREE AREA
QUIT    $XRET  CC=(R10),LV=WKLEN,TYPE=RENT
         SPACE 1
*------- ERRORS DIAGNOSE
         SPACE 1
STOVER   XR    R0,R0
         B     STUNDER+L'STUNDER
STUNDER  LR    R0,R13
         MVC   MSGERRT(18),=CL18'SAVE AREA''S TANKS '
         LTR   R0,R0
         BNZ   *+L'*+10
         MVC   MSGERRT+18(33),=CL33'OVERFLOW (CHECK VALUE OF "MXSTN")'
         B     *+L'*+6
         MVC   MSGERRT+18(33),=CL33'UNDERFLOW *** S C R A M B L E ***'
         B     ERRMSG
ERRV    $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         MVC   MSGERRT(28),=CL28'AS-ID''S SPACE TABLE OVERFLOW'
         B     ERRMSG
ERRE     MVC   MSGERRT(24),=CL24'UNKNOWN ESTE QUEUE ID : '
         USING ESTE,R5
         UNPK  MSGERRT+24(3),ESTQID(2)
         DROP  R5
         B     ERRMTR
ERRP     MVC   MSGERRT(24),=CL24'UNKNOWN PFTE QUEUE ID : '
         USING PFTE,R5
         UNPK  MSGERRT+24(3),PFTQID(2)
         DROP  R5
ERRMTR   TR    MSGERRT+24(2),TRTAB-C'0'
         MVI   MSGERRT+26,C' '
         B     ERRMSG
ERRG     MVC   MSGERRT(19),=CL19'GFDATE ERROR / RC ='
         CVD   R15,DBLWRD          DISPLAY R.C.
         MVC   MSGERRT+19(4),=XL4'40202120'
         ED    MSGERRT+19(4),DBLWRD+6
         B     ERRMSG
ERRS     MVC   MSGERRT(17),=CL17'SNAP ERROR / RC ='
         CVD   R15,DBLWRD          DISPLAY R.C.
         MVC   MSGERRT+17(4),=XL4'40202120'
         ED    MSGERRT+17(4),DBLWRD+6
         B     ERRMSG
ERRX     MVC   MSGERRT(18),=CL18'PRINT ERROR / RC ='
         CVD   R15,DBLWRD          DISPLAY R.C.
         MVC   MSGERRT+18(4),=XL4'40202120'
         ED    MSGERRT+18(4),DBLWRD+6
         B     ERRMSG
ERRZ     MVC   MSGERRT(27),=CL27'INVALID PARAMETER SPECIFIED'
ERRMSG   L     R13,SVFSVA          BACK TO FIRST S.A.
        WTO    MF=(E,MSGERR)       LOG ERROR MESSAGE
         LA    R10,16
         ICM   R1,B'1111',RSMADDR
         BZ    LEAVE
         L     R0,RSMLGTH
        FREEMAIN R,A=(1),LV=(0)    FREE AREA
         B     LEAVE
         SPACE 1
*------- EDIT SIZE ROUTINE
*              R0 = NUMBER OF PAGES
*              R1 = WORK REGISTER
*              R2 = WORK REGISTER
*              R3 = TARGET EDIT FIELD (CL43) ADDRESS
*              R10 = LINK REGISTER
*              R14 = INTERNAL LINK REGISTER
         SPACE 1
EDSZ     MVI   0(R3),C' '
         MVC   1(42,R3),0(R3)
         LTR   R0,R0
         BP    *+L'*+6
         MVI   7(R3),C'0'
         BR    R10
         CVD   R0,DBLWRD
         MVC   0(8,R3),=XL8'4020202020202120'
         ED    0(8,R3),DBLWRD+4
         MVI   9(R3),C'('
         LA    R3,10(R3)
         XR    R1,R1
         SRDL  R0,8
         SRL   R1,22
         LR    R2,R1
         XR    R1,R1
         SRDL  R0,10
         SRL   R1,22
         LTR   R0,R0
         BNP   EDSZ1
         CVD   R0,DBLWRD
         BAS   R14,EDSZN
         MVI   0(R3),C'G'
EDSZ1    LTR   R1,R1
         BNP   EDSZ2
         CLI   0(R3),C' '
         BE    *+L'*+8
         MVI   1(R3),C'+'
         LA    R3,2(R3)
         CVD   R1,DBLWRD
         BAS   R14,EDSZN
         MVI   0(R3),C'M'
EDSZ2    LTR   R2,R2
         BNP   EDSZ3
         CLI   0(R3),C' '
         BE    *+L'*+8
         MVI   1(R3),C'+'
         LA    R3,2(R3)
         CVD   R2,DBLWRD
         BAS   R14,EDSZN
         MVI   0(R3),C'K'
EDSZ3    MVI   1(R3),C')'
         BR    R10
EDSZN    MVC   0(8,R3),=XL8'4020202020202120'
         ED    0(8,R3),DBLWRD+4
         CLI   0(R3),C' '
         BNE   *+L'*+10
         MVC   0(8,R3),1(R3)
         B     *-14
         LA    R3,1(R3)
         CLI   0(R3),C' '
         BNE   *-8
         BR    R14
         SPACE 1
*------- PRINT DATA ROUTINE
*              R2 = ADDRESS OF LINE TO BE PRINTED
*              R10 = LINK REGISTER
         SPACE 1
PLNE     CP    NLN,=PL2'+55'
         BL    PLNEN
         AP    NPG,=PL1'+1'
         MVC   TIT1D,=XL6'402020202120'
         ED    TIT1D,NPG
        $PRINT TIT1,,DDLIST
         LTR   R15,R15
         BNZ   ERRX
         ZAP   NLN,=PL1'+1'
         CLI   0(R2),C'0'
         BE    PLNEN
         MVI   0(R2),C'0'
         OI    SWITCH,PFDSP
PLNEN   $PRINT (R2),,DDLIST
         LTR   R15,R15
         BNZ   ERRX
         AP    NLN,=PL1'+1'
         CLI   0(R2),C'0'
         BNER  R10
         AP    NLN,=PL1'+1'
         TM    SWITCH,PFDSP
         BZR   R10
         MVI   0(R2),C' '
         NI    SWITCH,255-PFDSP
         BR    R10
         SPACE 1
*------- SNAP DATA ROUTINE
*              R2 = ADDRESS OF LINE TO BE PRINTED
*              R10 = LINK REGISTER
         SPACE 1
LSSNAP   CP    NLS,=PL2'+55'
         BL    LSNEN
         AP    LPG,=PL1'+1'
         MVC   TIT1D,=XL6'402020202120'
         ED    TIT1D,LPG
        $PRINT TIT1,,DDSNAP
         LTR   R15,R15
         BNZ   ERRS
         ZAP   NLS,=PL1'+1'
         CLI   0(R2),C'0'
         BE    LSNEN
         MVI   0(R2),C'0'
         OI    SWITCH,PFDSP
LSNEN   $PRINT (R2),,DDSNAP
         LTR   R15,R15
         BNZ   ERRS
         AP    NLS,=PL1'+1'
         CLI   0(R2),C'0'
         BNER  R10
         AP    NLS,=PL1'+1'
         TM    SWITCH,PFDSP
         BZR   R10
         MVI   0(R2),C' '
         NI    SWITCH,255-PFDSP
         BR    R10
         EJECT
*------- VIRTUAL STORAGE MEMORY MAP ADDRESSES TABLE
         SPACE 1
        CNOP   0,4
VSMA     EQU   0,4                 TABLE DISPLACEMENTS
VSMC     EQU   4,4
VSMV     EQU   8,4
VSMN     EQU   12,16
VSMSCAN  DC    A(L'VSMMAT,VSMMATE,VSMMAT)
VSMMAT   DS    0CL28
ALEPVT   DC    A(*-*,0,0)          LOWEST PRIVATE EXT. ADDRESS
         DC    CL16'Private Ext.'
ALECSA   DC    A(*-*,0,0)          LOWEST CSA EXT. ADDRESS
         DC    CL16'CSA Ext.'
ALEFLPA  DC    A(*-*,0,0)          LOWEST FLPA (MLPA+FLPA) EXT. ADDRESS
TTXE     DC    CL16' '
ALEPLPA  DC    A(*-*,0,0)          LOWEST PLPA EXT. ADDRESS
         DC    CL16'PLPA Ext.'
ALESQA   DC    A(*-*,0,0)          LOWEST SQA EXT. ADDRESS
         DC    CL16'SQA Ext.'
         DC    A(X'01000000',0,0)  LOWEST NUCLEUS EXT. ADDRESS
         DC    CL16'Nucleus Ext.'
ALNUC    DC    A(*-*,0,0)          LOWEST NUCLEUS ADDRESS
         DC    CL16'Nucleus'
ALSQA    DC    A(*-*,0,0)          LOWEST SQA ADDRESS
         DC    CL16'SQA'
ALPLPA   DC    A(*-*,0,0)          LOWEST PLPA ADDRESS
         DC    CL16'PLPA'
ALFLPA   DC    A(*-*,0,0)          LOWEST FLPA (FLPA+MLPA) ADDRESS
TTX      DC    CL16' '
ALCSA    DC    A(*-*,0,0)          LOWEST CSA ADDRESS
         DC    CL16'CSA'
ALPVTV   DC    A(*-*,0,0)          LOWEST PRIVATE V=V ADDRESS
         DC    CL16'Private V=V'
ALPVTR   DC    A(*-*,0,0)          LOWEST PRIVATE V=R ADDRESS
         DC    CL16'Private V=R'
         DC    A(0,0,0)            LOWEST PSA + SYSTEM ADDRESS
         DC    CL16'PSA + System'
VSMMATE  EQU   *-L'VSMMAT
         EJECT
DBLWRD   DC    D'0'                DOUBLE WORD WORK AREA
SVFSVA   DC    A(*-*)              ADDRESS OF FIRST S.A.
ATIOT    DC    A(*-*)
RSMLGTH  DC    F'0'
RSMADDR  DC    A(*-*)
SNADDR   DC    F'0'
SCASTB   DC    A(*-*,ASTBL,*-*)
LGASTB   DC    F'0'
DDLIST   DC    CL8'SYSPRINT'
DDSNAP   DC    CL8'SYSSNAP'
TRTAB    DC    CL16'0123456789ABCDEF'
TANKMX   DC    PL2'+0'
TANKNO   DC    PL2'+0'
TANKUP   DC    PL1'+1'
NPG      DC    PL3'+0'
NLN      DC    PL2'+0'
LPG      DC    PL3'+0'
NLS      DC    PL2'+0'
SWSEL    DC    AL1(SPFTE)
SVSMM    EQU   X'80'
SPFTE    EQU   X'40'
SESTE    EQU   X'20'
SWITCH   DC    XL1'0'
PFSNP    EQU   X'80'
PFDSP    EQU   X'08'
PFLFF    EQU   X'01'
STSEL    DS    0XL5
         DC    CL4'VSM ',AL1(SVSMM)
         DC    CL4'PFTE',AL1(SPFTE)
         DC    CL4'ESTE',AL1(SESTE)
NTSEL    EQU   (*-STSEL)/L'STSEL
         SPACE 1
         DC    AL1(TIT1L)
TIT1     DC    CL23'1 -- RSM : analysis of '
TIT1A    DC    CL4' ',CL4' -- '
TIT1B    DC    CL20' ',CL2'/ '
TIT1C    DC    CL8'  :  :  ',CL9' --- Page'
TIT1D    DC    CL6' ',CL3' --'
TIT1L    EQU   *-TIT1
         SPACE 1
         DC    AL1(LNTL)
LNT      DC    CL7' '
NPFTE    EQU   PFTEL/4
NESTE    EQU   ESTEL/4
LNTA     DC    (NPFTE)CL9' '       NPFTE = NESTE
LNTL     EQU   *-LNT
         SPACE 1
         DC    AL1(LNPL)
LNP      DC    CL5' '
LNPA     DC    CL2' ',CL2' '
LNPB     DC    CL34' ',CL1' '
LNPC     DC    CL43' '
LNPL     EQU   *-LNP
         SPACE 1
         DC    AL1(LNP1L)
LNP1     DC    CL5'0 ',CL39'Queue Type and Identification'
         DC    CL3' ',CL5'Count'
LNP1L    EQU   *-LNP1
         SPACE 1
         DC    AL1(LNP2L)
LNP2     DC    CL5'  '
         DC    39C'-',CL2' '
         DC    7C'-'
LNP2L    EQU   *-LNP2
         SPACE 1
         DC    AL1(LNUL)
LNU      DC    CL10' '
LNUA     DC    CL16' ',CL1' '
LNUB     DC    CL8' '
LNUC     DC    CL35' '
LNUL     EQU   *-LNU
         SPACE 1
         DC    AL1(LNU1L)
LNU1     DC    CL10'0 ',CL19'VSM location'
LNU1A    DC    CL4' ',CL2'''s'
LNU1L    EQU   *-LNU1
         SPACE 1
         DC    AL1(LNU2L)
LNU2     DC    CL10'  ',CL25'----------------  -------'
LNU2L    EQU   *-LNU2
         SPACE 1
MSGERR  WTO    '--- RSMANAL -                                          X
                              ',ROUTCDE=11,DESC=7,MF=L
MSGERRT  EQU   MSGERR+18,56
         EJECT
         LTORG
         EJECT
*------- HANDLE REQUEST(S)
         SPACE 1
GETPARM @ENTER ,
         L     R2,0(R1)            GET PARM= IF ANY
         LH    R1,0(R2)
         LTR   R1,R1
         BNP   NOPARM
         NI    SWSEL,255-SPFTE
         LA    R4,2(R2)
         LA    R3,1(R2,R1)
         LA    R2,1
SPNXT    LA    R5,DBLWRD
         MVC   DBLWRD(8),=CL8' '
         CLC   0(2,R4),=CL2'L='
         BNE   TSSNP
         LA    R6,DDLIST
         B     GTPRM
TSSNP    CLC   0(2,R4),=CL2'S='
         BNE   TSREQ
         LA    R6,DDSNAP
GTPRM    ALR   R4,R2
         BXLE  R4,R2,*+L'*+4
         B     ERRZ
         LA    R0,8+1
         BAS   R14,SCPRM
         MVC   0(8,R6),DBLWRD
         B     SPSKP
SCPRM    CLI   0(R4),C','
         BNE   *+L'*+12
         CLC   DBLWRD(4),=CL8' '
         BE    SPSKP
         BR    R14
         BCT   R0,*+L'*+4
         B     ERRZ
         MVC   0(1,R5),0(R4)
         LA    R5,1(R5)
         BXLE  R4,R2,SCPRM
         BR    R14
TSREQ    LA    R0,4+1
         BAS   R14,SCPRM
         LA    R0,NTSEL
         LA    R1,STSEL
         CLC   DBLWRD(4),0(R1)
         BE    STREQ
         LA    R1,L'STSEL(R1)
         BCT   R0,*-14
         B     ERRZ
STREQ    OC    SWSEL(1),4(R1)
SPSKP    BXLE  R4,R2,SPNXT
         CLI   SWSEL,0
         BE    ERRZ
NOPARM  EXTRACT ATIOT,'S',FIELDS=(TIOT)
         L     R1,ATIOT
         USING TIODSECT,R1
         XR    R0,R0
TSNDD    CLC   TIOELNGH(4),=F'0'
         BE    XGPARM
         CLC   TIOEDDNM(L'TIOEDDNM),DDSNAP
         BE    *+L'*+10
         IC    R0,TIOELNGH
         ALR   R1,R0
         B     TSNDD
         DROP  R1
         OI    SWITCH,PFSNP
XGPARM  @EXIT  ,
         SPACE 1
        LTORG
         EJECT
*------- DO VIRTUAL STORAGE MEMORY MAP
         SPACE 1
DOVSM   @ENTER ,
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,CVTPTR           GET CVT ADDRESS
         USING CVTMAP,R1
         L     R2,CVTSMEXT         GET STORAGE MAP EXTENSION ADDRESS
         DROP  R1
         USING CVTVSTGX,R2
         MVC   MLPAS,CVTMLPAS      START MLPA ADDRESS
         MVC   FLPAS,CVTFLPAS      START FLPA ADDRESS
         MVC   FLPAE,CVTFLPAE      END FLPA ADDRESS
         MVC   PLPAS,CVTPLPAS      START PLPA ADDRESS
         MVC   PLPAE,CVTPLPAE      END PLPA ADDRESS
         MVC   EPLPS,CVTEPLPS      START EXT. PLPA ADDRESS
         MVC   EPLPE,CVTEPLPE      END EXT. PLPA ADDRESS
         MVC   EFLPS,CVTEFLPS      START EXT. FLPA ADDRESS
         MVC   EFLPE,CVTEFLPE      END EXT. FLPA ADDRESS
         MVC   EMLPE,CVTEMLPE      END EXT. MLPA ADDRESS
         MVC   NUCSTR,CVTRWNS      START NUCLEUS ADDRESS
         MVC   NUCEND,CVTERWNE     END EXT. NUCLEUS ADDRESS
         DROP  R2
         LA    R2,256              BACK UP TO
         SR    R1,R2                 CVT PREFIX
         USING CVTFIX,R1
         L     R2,CVTGDA           GET GDA ADDRESS
         DROP  R1
         USING GDA,R2
         MVC   CSALOW,GDACSA       LOWEST CSA AREA ADDRESS
         MVC   CSASIZE,GDACSASZ    CSA AREA SIZE
         MVC   CSAELOW,GDAECSA     LOWEST CSA AREA EXT. ADDRESS
         MVC   CSAESIZE,GDAECSAS   CSA AREA EXTENDED SIZE
         MVC   SQALOW,GDASQA       BEGIN SQA AREA ADDRESS
         MVC   SQASIZE,GDASQASZ    SQA AREA SIZE
         MVC   SQAELOW,GDAESQA     BEGIN SQA AREA EXT. ADDRESS
         MVC   SQAESIZE,GDAESQAS   SQA AREA EXTENDED SIZE
         MVC   PVTLOW,GDAPVT       BEGIN PRIVATE AREA ADDRESS
         MVC   PVTSIZE,GDAPVTSZ    PRIVATE AREA SIZE
         MVC   PVTELOW,GDAEPVT     BEGIN PRIVATE AREA EXT. ADDRESS
         MVC   PVTESIZE,GDAEPVTS   PRIVATE AREA EXTENDED SIZE
         MVC   VRLOW,GDAVR         ADDRESS OF GLOBAL V=R AREA
         MVC   VRSIZE,GDAVRSZ      SIZE OF GLOBAL V=R AREA
         DROP  R2
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         MVC   ALEPVT,PVTELOW      FILL VSM TABLE
         MVC   ALECSA,CSAELOW
         MVC   ALEFLPA,EFLPS
         MVC   ALEPLPA,EPLPS
         MVC   ALESQA,SQAELOW
         MVC   ALNUC,NUCSTR
         MVC   ALSQA,SQALOW
         MVC   ALPLPA,PLPAS
         MVC   ALFLPA,MLPAS
         OC    ALFLPA,ALFLPA
         BNZ   *+L'*+6
         MVC   ALFLPA,FLPAS
         MVC   ALCSA,CSALOW
         L     R0,VRLOW
         A     R0,VRSIZE
         ST    R0,ALPVTV
         MVC   ALPVTR,VRLOW
         TM    SWSEL,SVSMM
         BZ    XDOVSM
        $GFDATE TIT1B,DBLWRD
         LTR   R15,R15
         BNZ   ERRG
         MVC   TIT1C(2),DBLWRD
         MVC   TIT1C+3(2),DBLWRD+2
         MVC   TIT1C+6(2),DBLWRD+4
         MVC   TIT1A(4),=CL4'VSM '
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR VSM MAP LIST
         LA    R4,10               SET R4 TO 10
         L     R5,=A(KB*KB)        LOAD 1M INTO R5
         MVC   FIVEBYTE,PVTELOW    LOWEST PVT AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EPVTL,TENBYTE+1
         L     R3,PVTELOW          LOWEST PVT AREA EXT. ADDRESS
         A     R3,PVTESIZE         SIZE OF PRIVATE AREA EXTENDED
         S     R3,=F'1'            HIGHEST PVT AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EPVTH,TENBYTE+1
         XR    R2,R2
         L     R3,PVTESIZE         SIZE OF PRIVATE AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #EPVTSM,EDIT1
         ED    #EPVTSM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #EPVTSK,EDIT2
         ED    #EPVTSK,DBLWRD+4
         MVC   FIVEBYTE,CSAELOW    LOWEST CSA AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #ECSAL,TENBYTE+1
         L     R3,CSAELOW          LOWEST CSA AREA EXT. ADDRESS
         A     R3,CSAESIZE         SIZE OF CSA AREA EXTENDED
         S     R3,=F'1'            HIGHEST CSA AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #ECSAH,TENBYTE+1
         XR    R2,R2
         L     R3,CSAESIZE         SIZE OF CSA AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #ECSASM,EDIT1
         ED    #ECSASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #ECSASK,EDIT2
         ED    #ECSASK,DBLWRD+4
         MVC   FIVEBYTE,EFLPS      START FLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EFLPAL,TENBYTE+1
         L     R3,EMLPE            END MLPA EXT. ADDRESS
         LTR   R3,R3               MLPA EXT. DEFINED ?
         BZ    *+L'*+16            NO
         MVC   #TXE(14),=CL14'MLPA+FLPA Ext.' SET TEXT
         MVC   TTXE(14),=CL14'MLPA+FLPA Ext.'
         B     *+L'*+16
         L     R3,EFLPE            END FLPA EXT. ADDRESS
         MVC   #TXE(14),=CL14'     FLPA Ext.' SET TEXT
         MVC   TTXE(14),=CL14'FLPA Ext.'
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EFLPAH,TENBYTE+1
         L     R3,EMLPE            END MLPA EXT. ADDRESS
         LTR   R3,R3               MLPA EXT. DEFINED ?
         BNZ   *+L'*+4             YES
         L     R3,EFLPE            END FLPA EXT. ADDRESS
         A     R3,=F'1'
         S     R3,EFLPS            COMPUTE SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #EFLPASM,EDIT1
         ED    #EFLPASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #EFLPASK,EDIT2
         ED    #EFLPASK,DBLWRD+4
         MVC   FIVEBYTE,EPLPS      START PLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EPLPAL,TENBYTE+1
         MVC   FIVEBYTE,EPLPE      END PLPA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #EPLPAH,TENBYTE+1
         L     R3,EPLPE            COMPUTE PLPA EXT. SIZE
         A     R3,=F'1'
         S     R3,EPLPS
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #EPLPASM,EDIT1
         ED    #EPLPASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #EPLPASK,EDIT2
         ED    #EPLPASK,DBLWRD+4
         MVC   FIVEBYTE,SQAELOW    LOWEST SQA AREA EXT. ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #ESQAL,TENBYTE+1
         L     R3,SQAELOW          LOWEST SQA AREA EXT. ADDRESS
         A     R3,SQAESIZE         SIZE OF SQA AREA EXTENDED
         S     R3,=F'1'            HIGHEST SQA AREA EXT. ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #ESQAH,TENBYTE+1
         XR    R2,R2
         L     R3,SQAESIZE         SIZE OF SQA AREA EXTENDED
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #ESQASM,EDIT1
         ED    #ESQASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #ESQASK,EDIT2
         ED    #ESQASK,DBLWRD+4
         MVC   FIVEBYTE,NUCEND     HIGHEST EXT. NUCLEUS ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #ENUCH,TENBYTE+1
         XR    R2,R2
         L     R3,NUCEND           HIGHEST EXT. NUCLEUS ADDRESS
         A     R3,=F'1'
         S     R3,=A(16*KB*KB)     COMPUTE EXT. NUCLEUS SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #ENUCSM,EDIT1
         ED    #ENUCSM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #ENUCSK,EDIT2
         ED    #ENUCSK,DBLWRD+4
         MVC   FIVEBYTE,NUCSTR     LOWEST NUCLEUS ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #NUCL,TENBYTE+1
         XR    R2,R2
         L     R3,=A(16*KB*KB)     HIGHEST NUCLEUS ADDRESS + 1
         S     R3,NUCSTR           COMPUTE NUCLEUS SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #NUCSM,EDIT1
         ED    #NUCSM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #NUCSK,EDIT2
         ED    #NUCSK,DBLWRD+4
         MVC   FIVEBYTE,SQALOW     LOWEST SQA AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #SQAL,TENBYTE+1
         L     R3,SQALOW           LOWEST SQA AREA ADDRESS
         A     R3,SQASIZE          SIZE OF SQA AREA
         S     R3,=F'1'            HIGHEST SQA AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #SQAH,TENBYTE+1
         XR    R2,R2
         L     R3,SQASIZE          SIZE OF SQA AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #SQASM,EDIT1
         ED    #SQASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #SQASK,EDIT2
         ED    #SQASK,DBLWRD+4
         MVC   FIVEBYTE,PLPAS      START PLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #PLPAL,TENBYTE+1
         MVC   FIVEBYTE,PLPAE      END PLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #PLPAH,TENBYTE+1
         L     R3,PLPAE            COMPUTE PLPA SIZE
         A     R3,=F'1'
         S     R3,PLPAS
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #PLPASM,EDIT1
         ED    #PLPASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #PLPASK,EDIT2
         ED    #PLPASK,DBLWRD+4
         L     R3,MLPAS            START MLPA ADDRESS
         LTR   R3,R3               MLPA DEFINED ?
         BZ    *+L'*+16            NO
         MVC   #TX(9),=CL9'FLPA+MLPA' SET TEXT
         MVC   TTX(9),=CL9'FLPA+MLPA'
         B     *+L'*+16
         L     R3,FLPAS            START FLPA ADDRESS
         MVC   #TX(9),=CL9'     FLPA' SET TEXT
         MVC   TTX(9),=CL9'FLPA'
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #FLPAL,TENBYTE+1
         MVC   FIVEBYTE,FLPAE      END FLPA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #FLPAH,TENBYTE+1
         L     R3,FLPAE            END FLPA ADDRESS
         A     R3,=F'1'
         OC    MLPAS,MLPAS         MLPA DEFINED ?
         BZ    *+L'*+8             NO
         S     R3,MLPAS            COMPUTE FLPA+MLPA SIZE
         B     *+L'*+4             NO
         S     R3,FLPAS            COMPUTE FLPA SIZE
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #FLPASM,EDIT1
         ED    #FLPASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #FLPASK,EDIT2
         ED    #FLPASK,DBLWRD+4
         MVC   FIVEBYTE,CSALOW     LOWEST CSA AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #CSAL,TENBYTE+1
         L     R3,CSALOW           LOWEST CSA AREA ADDRESS
         A     R3,CSASIZE          SIZE OF CSA AREA
         S     R3,=F'1'            HIGHEST CSA AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #CSAH,TENBYTE+1
         XR    R2,R2
         L     R3,CSASIZE          SIZE OF CSA AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #CSASM,EDIT1
         ED    #CSASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #CSASK,EDIT2
         ED    #CSASK,DBLWRD+4
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS PLUS
         A     R3,VRSIZE           SIZE OF V=R AREA
         STCM  R3,B'1111',FIVEBYTE LOWEST PVT AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #PVTL,TENBYTE+1
         L     R3,PVTLOW           LOWEST PVT AREA ADDRESS
         A     R3,PVTSIZE          SIZE OF PRIVATE AREA
         S     R3,=F'1'            HIGHEST PVT AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #PVTH,TENBYTE+1
         XR    R2,R2
         L     R3,PVTSIZE          SIZE OF PRIVATE AREA MINUS
         S     R3,VRLOW            LOWEST V=R AREA ADDRESS MINUS
         S     R3,VRSIZE           SIZE OF V=R AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #PVTSM,EDIT1
         ED    #PVTSM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #PVTSK,EDIT2
         ED    #PVTSK,DBLWRD+4
         MVC   FIVEBYTE,VRLOW      LOWEST V=R AREA ADDRESS
         UNPK  TENBYTE,FIVEBYTE    UNPACK
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #VRAL,TENBYTE+1
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS
         A     R3,VRSIZE           SIZE OF V=R AREA
         S     R3,=F'1'            HIGHEST V=R AREA ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #VRAH,TENBYTE+1
         XR    R2,R2
         L     R3,VRSIZE           SIZE OF V=R AREA
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #VRASM,EDIT1
         ED    #VRASM,DBLWRD+5
         SRA   R0,10               SIZE IN K
         CVD   R0,DBLWRD
         MVC   #VRASK,EDIT2
         ED    #VRASK,DBLWRD+4
         L     R3,VRLOW            LOWEST V=R AREA ADDRESS
         S     R3,=F'1'            HIGHEST PSA+SYSTEM ADDRESS
         STCM  R3,B'1111',FIVEBYTE
         UNPK  TENBYTE,FIVEBYTE
         TR    TENBYTE+1(8),TRTAB-C'0'
         MVC   #PSSH,TENBYTE+1
         XR    R2,R2
         L     R3,VRLOW            LOWEST V=R AREA ADDR = PSA+SYSTEM
         LR    R0,R3               SAVE FOR COMPUTATION IN K
         MR    R2,R4               MULTIPLY BY 10
         DR    R2,R5               DIVIDE BY 1M
         CVD   R3,DBLWRD
         MVC   #PSSSM,EDIT1
         ED    #PSSSM,DBLWRD+5
         SRA   R0,10               COMPUTE IT IN K
         CVD   R0,DBLWRD
         MVC   #PSSSK,EDIT2
         ED    #PSSSK,DBLWRD+4
         LA    R3,LMP-1
         XR    R4,R4
         LA    R2,1(R3)
         BAS   R10,PLNE
         IC    R4,0(R3)
         LA    R3,1(R3,R4)
         CLI   0(R3),0
         BNE   *-20
XDOVSM  @EXIT  ,
         SPACE 1
        LTORG
         SPACE 1
PVTELOW  DC    F'0'                LOWEST PVT AREA EXT. ADDRESS
PVTESIZE DC    F'0'                SIZE OF PRIVATE AREA EXTENDED
CSAELOW  DC    F'0'                LOWEST CSA AREA EXT. ADDRESS
CSAESIZE DC    F'0'                SIZE OF CSA AREA EXTENDED
EMLPE    DC    F'0'                HIGHEST MLPA EXT. ADDRESS
EFLPS    DC    F'0'                LOWEST FLPA EXT. ADDRESS
EFLPE    DC    F'0'                HIGHEST FLPA EXT. ADDRESS
EPLPS    DC    F'0'                LOWEST PLPA EXT. ADDRESS
EPLPE    DC    F'0'                HIGHEST PLPA EXT. ADDRESS
SQAELOW  DC    F'0'                LOWEST SQA AREA EXT. ADDRESS
SQAESIZE DC    F'0'                SIZE OF SQA AREA EXTENDED
NUCSTR   DC    F'0'                START NUCLEUS ADDRESS
NUCEND   DC    F'0'                END EXT. NUCLEUS ADDRESS
SQALOW   DC    F'0'                LOWEST SQA AREA ADDRESS
SQASIZE  DC    F'0'                SIZE OF SQA AREA
PLPAS    DC    F'0'                LOWEST PLPA ADDRESS
PLPAE    DC    F'0'                HIGHEST PLPA ADDRESS
FLPAS    DC    F'0'                LOWEST FLPA ADDRESS
FLPAE    DC    F'0'                HIGHEST FLPA ADDRESS
MLPAS    DC    F'0'                LOWEST MLPA ADDRESS
CSALOW   DC    F'0'                LOWEST CSA AREA ADDRESS
CSASIZE  DC    F'0'                SIZE OF CSA AREA
PVTLOW   DC    F'0'                LOWEST PVT AREA ADDRESS
PVTSIZE  DC    F'0'                SIZE OF PRIVATE AREA
VRLOW    DC    F'0'                GLOBAL V=R AREA ADDRESS
VRSIZE   DC    F'0'                SIZE OF GLOBAL V=R AREA
TENBYTE  DC    XL10'0'
FIVEBYTE DC    XL5'0'
EDIT1    DC    XL7'40202020214B20' EDIT PATTERN FOR SIZE IN M
EDIT2    DC    XL8'4020202020202120' EDIT PATTERN FOR SIZE IN K
         SPACE 1
         DC    AL1(LMPL)
LMP      DC    CL5'0 ',C'Virtual Storage Map :'
LMPL     EQU   *-LMP
         SPACE 1
         DC    AL1(LMPUL)
LMPU     DC    CL5' ',C'====================='
LMPUL    EQU   *-LMPU
         SPACE 1
         DC    AL1(LMPSL)
LMPS     DC    CL5'0 '
LMPSL    EQU   *-LMPS
         SPACE 1
         DC    AL1(LMP1L)
LMP1     DC    CL11'0 ',C'Private Ext.  '
#EPVTL   DC    CL8' ',CL3' - '
#EPVTH   DC    CL8' ',CL8'  Size ='
#EPVTSM  DC    CL7' ',CL4' M -'
#EPVTSK  DC    CL8' ',CL2' K'
LMP1L    EQU   *-LMP1
         SPACE 1
         DC    AL1(LMP2L)
LMP2     DC    CL15'0 ',C'CSA Ext.  '
#ECSAL   DC    CL8' ',CL3' - '
#ECSAH   DC    CL8' ',CL8'  Size ='
#ECSASM  DC    CL7' ',CL4' M -'
#ECSASK  DC    CL8' ',CL2' K'
LMP2L    EQU   *-LMP2
         SPACE 1
         DC    AL1(LMP3L)
LMP3     DC    CL9'0 '
#TXE     DC    CL16' '
#EFLPAL  DC    CL8' ',CL3' - '
#EFLPAH  DC    CL8' ',CL8'  Size ='
#EFLPASM DC    CL7' ',CL4' M -'
#EFLPASK DC    CL8' ',CL2' K'
LMP3L    EQU   *-LMP3
         SPACE 1
         DC    AL1(LMP4L)
LMP4     DC    CL14'0 ',C'PLPA Ext.  '
#EPLPAL  DC    CL8' ',CL3' - '
#EPLPAH  DC    CL8' ',CL8'  Size ='
#EPLPASM DC    CL7' ',CL4' M -'
#EPLPASK DC    CL8' ',CL2' K'
LMP4L    EQU   *-LMP4
         SPACE 1
         DC    AL1(LMP5L)
LMP5     DC    CL15'0 ',C'SQA Ext.  '
#ESQAL   DC    CL8' ',CL3' - '
#ESQAH   DC    CL8' ',CL8'  Size ='
#ESQASM  DC    CL7' ',CL4' M -'
#ESQASK  DC    CL8' ',CL2' K'
LMP5L    EQU   *-LMP5
         SPACE 1
         DC    AL1(LMP6L)
LMP6     DC    CL11'0 ',C'Nucleus Ext.  01000000 - '
#ENUCH   DC    CL8' ',CL8'  Size ='
#ENUCSM  DC    CL7' ',CL4' M -'
#ENUCSK  DC    CL8' ',CL2' K'
LMP6L    EQU   *-LMP6
         SPACE 1
         DC    AL1(LMP7L)
LMP7     DC    CL9'0 ',C'<'
         DC    26C'-',C' 16M line '
         DC    26C'-',C'>'
LMP7L    EQU   *-LMP7
         SPACE 1
         DC    AL1(LMP8L)
LMP8     DC    CL16'0 ',C'Nucleus  '
#NUCL    DC    CL8' ',CL19' - 00FFFFFF  Size ='
#NUCSM   DC    CL7' ',CL4' M -'
#NUCSK   DC    CL8' ',CL2' K'
LMP8L    EQU   *-LMP8
         SPACE 1
         DC    AL1(LMP9L)
LMP9     DC    CL20'0 ',C'SQA  '
#SQAL    DC    CL8' ',CL3' - '
#SQAH    DC    CL8' ',CL8'  Size ='
#SQASM   DC    CL7' ',CL4' M -'
#SQASK   DC    CL8' ',CL2' K'
LMP9L    EQU   *-LMP9
         SPACE 1
         DC    AL1(LMP10L)
LMP10    DC    CL19'0 ',C'PLPA  '
#PLPAL   DC    CL8' ',CL3' - '
#PLPAH   DC    CL8' ',CL8'  Size ='
#PLPASM  DC    CL7' ',CL4' M -'
#PLPASK  DC    CL8' ',CL2' K'
LMP10L   EQU   *-LMP10
         SPACE 1
         DC    AL1(LMP11L)
LMP11    DC    CL14'0 '
#TX      DC    CL11' '
#FLPAL   DC    CL8' ',CL3' - '
#FLPAH   DC    CL8' ',CL8'  Size ='
#FLPASM  DC    CL7' ',CL4' M -'
#FLPASK  DC    CL8' ',CL2' K'
LMP11L   EQU   *-LMP11
         SPACE 1
         DC    AL1(LMP12L)
LMP12    DC    CL20'0 ',C'CSA  '
#CSAL    DC    CL8' ',CL3' - '
#CSAH    DC    CL8' ',CL8'  Size ='
#CSASM   DC    CL7' ',CL4' M -'
#CSASK   DC    CL8' ',CL2' K'
LMP12L   EQU   *-LMP12
         SPACE 1
         DC    AL1(LMP13L)
LMP13    DC    CL12'0 ',C'Private V=V  '
#PVTL    DC    CL8' ',CL3' - '
#PVTH    DC    CL8' ',CL8'  Size ='
#PVTSM   DC    CL7' ',CL4' M -'
#PVTSK   DC    CL8' ',CL2' K'
LMP13L   EQU   *-LMP13
         SPACE 1
         DC    AL1(LMP14L)
LMP14    DC    CL12'0 ',C'Private V=R  '
#VRAL    DC    CL8' ',CL3' - '
#VRAH    DC    CL8' ',CL8'  Size ='
#VRASM   DC    CL7' ',CL4' M -'
#VRASK   DC    CL8' ',CL2' K'
LMP14L   EQU   *-LMP14
         SPACE 1
         DC    AL1(LMP15L)
LMP15    DC    CL11'0 ',C'PSA + System  00000000 - '
#PSSH    DC    CL8' ',CL8'  Size ='
#PSSSM   DC    CL7' ',CL4' M -'
#PSSSK   DC    CL8' ',CL2' K'
LMP15L   EQU   *-LMP15
         SPACE 1
         DC    AL1(0)              END OF LINES INDICATOR
         EJECT
*------- COLLECT ALL AS-ID'S
         SPACE 1
COLLAS  @ENTER ,
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,CVTPTR           GET ADDR OF CVT
         USING CVTMAP,R1
         L     R2,CVTASVT          GET ADDR OF ASVT
         DROP  R1
         USING ASVT,R2
         L     R4,ASVTMAXU         NUMBER OF ASCB'S
         LA    R5,ASVTENTY         ASCB'S ENTRY
         DROP  R2
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         XR    R2,R2
         LR    R3,R4
         M     R2,SCASTB+4
         LA    R0,7(R3)
         SRL   R0,3
         SLL   R0,3
         ST    R0,LGASTB
        GETMAIN R,LV=(0)           OBTAIN AREA
         ST    R1,SCASTB
         ALR   R1,R3
         SL    R1,SCASTB+4
         ST    R1,SCASTB+8
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         LM    R1,R3,SCASTB
         SLR   R1,R2
SCNASCB  TM    0(R5),ASVTAVAL
         BO    NXTASCB
         L     R6,0(R5)            ---> ASCB
         LA    R6,0(R6)
         LTR   R6,R6
         BZ    NXTASCB
         BXLE  R1,R2,*+L'*+4
         B     ERRV
         USING ASCB,R6
         XC    TIDC(L'TIDC+L'TIDV,R1),TIDC(R1)
         MVC   TIDA(L'ASCBASID,R1),ASCBASID
         ICM   R7,B'1111',ASCBJBNI
         BNZ   *+L'*+12
         ICM   R7,B'1111',ASCBJBNS
         BNZ   *+L'*+4
         LA    R7,=CL8'********'
         MVC   TIDN(L'TIOCNJOB,R1),0(R7)
         DROP  R6
NXTASCB  LA    R5,L'ASVTENTY(R5)
         BCT   R4,SCNASCB
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+10
         XC    0(ASTBL,R1),0(R1)
         B     *-14
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         TM    SWITCH,PFSNP
         BZ    XCOLLAS
        $GFDATE TIT1B,DBLWRD
         LTR   R15,R15
         BNZ   ERRG
         MVC   TIT1C(2),DBLWRD
         MVC   TIT1C+3(2),DBLWRD+2
         MVC   TIT1C+6(2),DBLWRD+4
         MVC   TIT1A(4),=CL4'ASCB'
         ZAP   NLS,=PL2'+99'       FORCE NEW PAGE FOR ASCB'S LIST
         LA    R2,LNS
         BAS   R10,LSSNAP
         LM    R3,R5,SCASTB
LSASI    MVI   LNRA,C' '
         MVC   LNRA+1(3*L'LNRA-1),LNRA
         LA    R0,3
         LA    R1,LNRA
LSASL    UNPK  0(5,R1),TIDA(3,R3)
         TR    0(4,R1),TRTAB-C'0'
         MVC   4(2,R1),=CL2' :'
         MVC   7(L'TIOCNJOB,R1),TIDN(R3)
         BXLE  R3,R4,*+L'*+4
         B     LSASP
         CLC   TIDA(L'TIDA,R3),=XL2'0'
         BNE   *+L'*+8
         LA    R3,0(R4,R5)
         B     LSASP
         LA    R1,L'LNRA(R1)
         BCT   R0,LSASL
LSASP    LA    R2,LNR
         BAS   R10,LSSNAP
         CLR   R3,R5
         BNH   LSASI
XCOLLAS @EXIT  ,
         SPACE 1
        LTORG
         SPACE 1
         DC    AL1(LNSL)
LNS      DC    CL18'0    ASCB''s list :'
LNSL     EQU   *-LNS
         SPACE 1
         DC    AL1(LNRL)
LNR      DC    CL10' '
LNRA     DC    3CL20' '
LNRL     EQU   *-LNR
         SPACE 1
TIDC     EQU   0,4                 TABLE DISPLACEMENTS
TIDV     EQU   4,4
TIDA     EQU   8,2                 = L'ASCBASID
TIDN     EQU   10,8                = L'TIOCNJOB
ASTBL    EQU   L'TIDC+L'TIDV+L'TIDA+L'TIDN
         EJECT
*------- LIST PFTE'S INFORMATION
         SPACE 1
PFTELS  @ENTER ,
        $GFDATE TIT1B,DBLWRD
         LTR   R15,R15
         BNZ   ERRG
         MVC   TIT1C(2),DBLWRD
         MVC   TIT1C+3(2),DBLWRD+2
         MVC   TIT1C+6(2),DBLWRD+4
         MVC   TIT1A(4),=CL4'PFTE'
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR PFTE'S LIST
         NI    SWITCH,255-PFLFF
         TM    SWITCH,PFSNP
         BZ    *+L'*+6
         ZAP   NLS,=PL2'+99'       FORCE NEW PAGE FOR PFTE'S SNAP
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,CVTPTR           GET ADDR OF CVT
         USING CVTMAP,R1
         L     R2,CVTPVTP          GET ADDR OF PVT
         DROP  R1
         USING PVT,R2
         L     R1,PVTRIT           GET ADDR OF RIT
         DROP  R2
         L     R2,RITFPFTE(R1)     FIRST PFTE
         ST    R2,SNADDR
         L     R7,RITLPFTE(R1)     LAST PFTE
         SLR   R7,R2
         LA    R3,PFTEL(R7)
         LA    R0,15(R3)
         SRL   R0,3
         SLL   R0,3
         ST    R0,RSMLGTH
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         L     R0,RSMLGTH
        GETMAIN R,LV=(0)           OBTAIN AREA
         ST    R1,RSMADDR
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,RSMADDR
         LR    R4,R1
         LR    R5,R3
         MVCL  R4,R2               COPY ALL PFTE'S
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         L     R5,RSMADDR
         LA    R6,PFTEL
         LR    R9,R7
         ALR   R9,R6
         XR    R8,R8
         DR    R8,R6
         LR    R8,R9
        $SORT  (R5),(R9),PFTEL,PFTQID-PFTE,L'PFTQID
         LR    R0,R8
         LA    R3,LNNA
         BAS   R10,EDSZ
         AL    R7,RSMADDR
         TM    SWITCH,PFSNP
         BZ    NSPFTE
         LA    R2,LNN
         BAS   R10,LSSNAP
         UNPK  LNNTA,SNADDR(5)
         TR    LNNTA(L'LNNTA-1),TRTAB-C'0'
         MVI   LNNTA+L'LNNTA-1,C' '
         LA    R2,LNNT
         BAS   R10,LSSNAP
         L     R5,RSMADDR
PFLSL    LA    R0,NPFTE
         LA    R1,LNTA
         LR    R2,R5
PFLSD    UNPK  0(9,R1),0(5,R2)
         TR    0(8,R1),TRTAB-C'0'
         MVI   8(R1),C' '
         LA    R2,4(R2)
         LA    R1,L'LNTA(R1)
         BCT   R0,PFLSD
         LA    R2,LNT
         BAS   R10,LSSNAP
         BXLE  R5,R6,PFLSL
NSPFTE   LA    R2,LNN
         BAS   R10,PLNE
         LA    R2,LNNU
         BAS   R10,PLNE
         L     R5,RSMADDR
         USING PFTE,R5
         LA    R2,NPFQT
         LA    R1,PFQTB
         CLC   PFTQID(L'PFTQID),PFQI(R1)
         BE    *+L'*+12
PFLSR    LA    R1,L'PFQTB(R1)
         BCT   R2,*-14
         B     ERRP
         ST    R5,PFQB(R1)
         XR    R0,R0
PFLSN    ST    R5,PFQE(R1)
         AH    R0,=H'1'
         BXLE  R5,R6,*+L'*+4
         B     *+L'*+10
         CLC   PFTQID(L'PFTQID),PFQI(R1)
         BE    PFLSN
         ST    R0,PFQC(R1)
         CLR   R5,R7
         BNH   PFLSR
         DROP  R5
         LA    R2,LNP1
         BAS   R10,PLNE
         LA    R2,LNP2
         BAS   R10,PLNE
         LA    R5,NPFQT
         LA    R4,PFQTB
PFLSF    XR    R0,R0
         IC    R0,PFQI(R4)
         STC   R0,LNPA+1
         SRL   R0,4
         STC   R0,LNPA
         OC    LNPA,=XL2'F0F0'
         TR    LNPA,TRTAB-C'0'
         MVC   LNPB(L'LNPB),PFQN(R4)
         L     R0,PFQC(R4)
         LA    R3,LNPC
         BAS   R10,EDSZ
         LA    R2,LNP
         BAS   R10,PLNE
         LA    R4,L'PFQTB(R4)
         BCT   R5,PFLSF
         MVC   LNU1A,=CL4'PFTE'
         LA    R3,NPFQT
         LA    R4,PFQTB
         OC    PFQC(L'PFQC,R4),PFQC(R4)
         BNZ   *+L'*+12
PFLUN    LA    R4,L'PFQTB(R4)
         BCT   R3,*-14
         B     PFLUX
         XR    R0,R0
         IC    R0,PFQI(R4)
         STC   R0,LNVA+1
         SRL   R0,4
         STC   R0,LNVA
         OC    LNVA,=XL2'F0F0'
         TR    LNVA,TRTAB-C'0'
         MVC   LNVB(L'LNVB),PFQN(R4)
         L     R5,PFQB(R4)
         LA    R6,PFTEL
         L     R7,PFQE(R4)
         STM   R3,R4,PFQSVR
         USING PFTE,R5
         LM    R2,R4,VSMSCAN
         XC    VSMC(L'VSMC+L'VSMV,R4),VSMC(R4)
         BXLE  R4,R2,*-6
         XC    PFSVIO,PFSVIO
PFLUL    LM    R2,R4,VSMSCAN
         CLC   PFTVSA(L'PFTVSA),VSMA(R4)
         BNL   *+L'*+4
         BXLE  R4,R2,*-10
         TM    PFTFLGS3,PFTVIORU
         BO    PFLUS
         L     R0,VSMC(R4)
         AH    R0,=H'1'
         ST    R0,VSMC(R4)
         B     PFLUE
PFLUS    L     R0,PFSVIO
         AH    R0,=H'1'
         ST    R0,PFSVIO
         L     R0,VSMV(R4)
         AH    R0,=H'1'
         ST    R0,VSMV(R4)
PFLUE    BXLE  R5,R6,PFLUL
         DROP  R5
         TM    SWITCH,PFLFF
         BZ    *+L'*+8
         NI    SWITCH,255-PFLFF
         B     *+L'*+10
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR PFTE'S USE LIST
         OI    SWITCH,PFLFF
         LA    R2,LNV
         BAS   R10,PLNE
         LA    R2,LNVU
         BAS   R10,PLNE
         LA    R2,LNU1
         BAS   R10,PLNE
         LA    R2,LNU2
         BAS   R10,PLNE
         LM    R4,R6,VSMSCAN
PFLUP    MVC   LNUA(L'LNUA),VSMN(R6)
         L     R0,VSMC(R6)
         LA    R3,LNUB
         BAS   R10,EDSZ
         LA    R2,LNU
         BAS   R10,PLNE
         BXLE  R6,R4,PFLUP
         OC    PFSVIO,PFSVIO
         BZ    PFLUZ
         MVI   LNU,C'0'
         MVC   LNUA,=CL16'===> VIO usage :'
         L     R0,PFSVIO
         LA    R3,LNUB
         BAS   R10,EDSZ
         LA    R2,LNU
         BAS   R10,PLNE
         MVI   LNU,C' '
         LM    R4,R6,VSMSCAN
PFLUV    ICM   R0,B'1111',VSMV(R6)
         BZ    PFLUW
         MVC   LNUA(L'LNUA),VSMN(R6)
         LA    R3,LNUB
         BAS   R10,EDSZ
         LA    R2,LNU
         BAS   R10,PLNE
PFLUW    BXLE  R6,R4,PFLUV
PFLUZ    LM    R3,R4,PFQSVR
         TM    PFQF(R4),QPFID
         BZ    PFLUN
        @CALL  LSPFAS
         B     PFLUN
PFLUX    LM    R0,R1,RSMLGTH
        FREEMAIN R,A=(1),LV=(0)    FREE AREA
         XC    RSMLGTH(L'RSMLGTH+L'RSMADDR),RSMADDR
        @EXIT  ,
         SPACE 1
        LTORG
         SPACE 1
         DC    AL1(LNNL)
LNN      DC    CL31'0    Page Frame Table Entries :'
LNNA     DC    CL43' '
LNNL     EQU   *-LNN
         SPACE 1
         DC    AL1(LNNTL)
LNNT     DC    CL29'       Table start address : '
LNNTA    DC    CL9' '
LNNTL    EQU   *-LNNT
         SPACE 1
         DC    AL1(LNNUL)
LNNU     DC    CL31'     =========================='
LNNUL    EQU   *-LNNU
         SPACE 1
         DC    AL1(LNVL)
LNV      DC    CL36'0    Page Frame Table Entries use :'
LNVA     DC    CL2' ',CL3' = '
LNVB     DC    CL34' '
LNVL     EQU   *-LNV
         SPACE 1
         DC    AL1(LNVUL)
LNVU     DC    CL36'     =============================='
LNVUL    EQU   *-LNVU
         SPACE 1
PFSVIO   DC    F'0'
PFQSVR   DC    2F'0'
PFQC     EQU   0,4                 TABLE DISPLACEMENTS
PFQB     EQU   4,4
PFQE     EQU   8,4
PFQI     EQU   12,1
PFQF     EQU   13,1
QPFID    EQU   X'80'
PFQN     EQU   14,34
PFQTB    DS    0XL48
        @TPF   08,'TOP Double Frame Queue'
        @TPF   09,'BOTTOM Double Frame Queue'
        @TPF   21,'SQA Frame Queue'
        @TPF   22,'Reserved SQA Frame Queue'
        @TPF   23,'REAL Storage Buffer Frame Queue'
        @TPF   24,'V=R waiting Frame Queue'
        @TPF   81,'Pageable Frame Queue',QPFID
        @TPF   82,'Fixed Frame Queue',QPFID
        @TPF   83,'Deferred FREEMAIN Frame Queue'
        @TPF   F0,'Unqueued ... DAT off Nucleus'
        @TPF   F1,'Unqueued ... READ only Nucleus'
        @TPF   F2,'Unqueued ... READ/WRITE Nucleus'
        @TPF   F3,'Unqueued ... IDA Frame'
        @TPF   F4,'Unqueued ... HW System Area'
        @TPF   F5,'Unqueued ... Absolute Zero Frame'
        @TPF   F6,'Unqueued ... Fixed LPA/BLDL'
        @TPF   FD,'A flawed PFTE'
        @TPF   FE,'Unqueued ... Uninitialized'
        @TPF   FF,'Unqueued PFTE'
NPFQT    EQU   (*-PFQTB)/L'PFQTB
         EJECT
*------- LIST PFTE'S BY ASID'S INFORMATION
*              R4 = CURRENT "PFQTB" POINTER
         SPACE 1
LSPFAS  @ENTER ,
         L     R5,PFQB(R4)
         LA    R6,PFTEL
         L     R9,PFQE(R4)
         ALR   R9,R6
         SLR   R9,R5
         XR    R8,R8
         DR    R8,R6
        $SORT  (R5),(R9),PFTEL,PFTVSA-PFTE,L'PFTVSA
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR DETAIL LIST
         NI    SWITCH,255-PFLFF
         XR    R0,R0
         IC    R0,PFQI(R4)
         STC   R0,LNAA+1
         SRL   R0,4
         STC   R0,LNAA
         OC    LNAA,=XL2'F0F0'
         TR    LNAA,TRTAB-C'0'
         MVC   LNAB(L'LNAB),PFQN(R4)
         LA    R2,LNA
         BAS   R10,PLNE
         LA    R2,LNB
         BAS   R10,PLNE
         LA    R2,LNC1
         BAS   R10,PLNE
         LA    R2,LNC2
         BAS   R10,PLNE
         L     R7,PFQE(R4)
         LA    R8,PFTEL
         USING PFTE,R7
         L     R6,VSMSCAN+8
ASLSR    L     R5,VSMC(R6)
         A     R5,VSMV(R6)
         BZ    ASLSV
         LM    R1,R3,SCASTB
         XC    TIDC(L'TIDC+L'TIDV,R1),TIDC(R1)
         BXLE  R1,R2,*-6
         XC    TCAS(L'TCAS+L'TVAS),TCAS
ASLSL    CLC   PFTASID(L'PFTASID),=XL2'0'
         BE    ASLSS
         CLC   PFTASID(L'PFTASID),=XL2'FFFF'
         BE    ASLSS
         LM    R1,R3,SCASTB
         CLC   PFTASID(L'PFTASID),TIDA(R1)
         BE    ASLSA
         BXLE  R1,R2,*-10
ASLSS    TM    PFTFLGS3,PFTVIORU
         BO    *+L'*+8
         LA    R2,TCAS
         B     ASLST
         LA    R2,TVAS
         B     ASLST
ASLSA    TM    PFTFLGS3,PFTVIORU
         BO    *+L'*+8
         LA    R2,TIDC(R1)
         B     ASLST
         LA    R2,TIDV(R1)
ASLST    ICM   R0,B'1111',0(R2)
         AH    R0,=H'1'
         STCM  R0,B'1111',0(R2)
         DROP  R7
         SLR   R7,R8
         BCT   R5,ASLSL
         MVC   LNCA(L'LNCA),VSMN(R6)
         L     R5,SCASTB
ASLSN    CLC   TIDA(L'TIDA,R5),=XL2'0'
         BE    ASLSC
         OC    TIDC(L'TIDC+L'TIDV,R5),TIDC(R5)
         BZ    ASLSB
         MVC   LNCB(L'LNCB),TIDN(R5)
         CLC   LNCB,=CL8'INIT'
         BE    *+L'*+10
         CLC   LNCB,=CL8'********'
         BNE   *+L'*+18
         UNPK  DBLWRD(5),TIDA(3,R5)
         TR    DBLWRD(4),TRTAB-C'0'
         MVC   LNCB+4(4),DBLWRD
         ICM   R0,B'1111',TIDC(R5)
         LA    R3,LNCC
         BAS   R10,EDSZ
         LA    R2,LNC
         BAS   R10,PLNE
         MVI   LNCA,C' '
         MVC   LNCA+1(L'LNCA-1),LNCA
         ICM   R0,B'1111',TIDV(R5)
         BZ    ASLSB
         MVC   LNCB,=CL8'-> VIO''s'
         LA    R3,LNCC
         BAS   R10,EDSZ
         LA    R2,LNC
         BAS   R10,PLNE
ASLSB    AL    R5,SCASTB+4
         CL    R5,SCASTB+8
         BNH   ASLSN
ASLSC    OC    TCAS(L'TCAS+L'TVAS),TCAS
         BZ    ASLSV
         MVC   LNCB,=CL8'System :'
         L     R0,TCAS
         LA    R3,LNCC
         BAS   R10,EDSZ
         LA    R2,LNC
         BAS   R10,PLNE
         MVI   LNCA,C' '
         MVC   LNCA+1(L'LNCA-1),LNCA
         ICM   R0,B'1111',TVAS
         BZ    ASLSV
         MVC   LNCB,=CL8'-> VIO''s'
         LA    R3,LNCC
         BAS   R10,EDSZ
         LA    R2,LNC
         BAS   R10,PLNE
ASLSV    AL    R6,VSMSCAN
         CL    R6,VSMSCAN+4
         BNH   ASLSR
        @EXIT  ,
         SPACE 1
        LTORG
         SPACE 1
TCAS     DC    F'0'
TVAS     DC    F'0'
         SPACE 1
         DC    AL1(LNAL)
LNA      DC    CL26'0    Detail on PFTE use :'
LNAA     DC    CL2' ',CL3' = '
LNAB     DC    CL34' '
LNAL     EQU   *-LNA
         SPACE 1
         DC    AL1(LNBL)
LNB      DC    CL36'     ===================='
LNBL     EQU   *-LNB
         SPACE 1
         DC    AL1(LNCL)
LNC      DC    CL10' '
LNCA     DC    CL16' ',CL2' '
LNCB     DC    CL8' ',CL1' '
LNCC     DC    CL8' '
LNCD     DC    CL35' '
LNCL     EQU   *-LNC
         SPACE 1
         DC    AL1(LNC1L)
LNC1     DC    CL10'0 ',CL35'VSM location        ASID     PFTE''s'
LNC1L    EQU   *-LNC1
         SPACE 1
         DC    AL1(LNC2L)
LNC2     DC    CL10'  ',CL35'----------------  --------  -------'
LNC2L    EQU   *-LNC2
         EJECT
*------- LIST ESTE'S INFORMATION
         SPACE 1
ESTELS  @ENTER ,
        $GFDATE TIT1B,DBLWRD
         LTR   R15,R15
         BNZ   ERRG
         MVC   TIT1C(2),DBLWRD
         MVC   TIT1C+3(2),DBLWRD+2
         MVC   TIT1C+6(2),DBLWRD+4
         MVC   TIT1A(4),=CL4'ESTE'
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR ESTE'S LIST
         NI    SWITCH,255-PFLFF
         TM    SWITCH,PFSNP
         BZ    *+L'*+6
         ZAP   NLS,=PL2'+99'       FORCE NEW PAGE FOR ESTE'S SNAP
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,CVTPTR           GET ADDR OF CVT
         USING CVTMAP,R1
         L     R2,CVTPVTP          GET ADDR OF PVT
         DROP  R1
         USING PVT,R2
         L     R1,PVTRIT           GET ADDR OF RIT
         DROP  R2
         L     R2,RITFESTE(R1)     FIRST ESTE
         ST    R2,SNADDR
         L     R7,RITLESTE(R1)     LAST ESTE
         SLR   R7,R2
         LA    R3,ESTEL(R7)
         LA    R0,15(R3)
         SRL   R0,3
         SLL   R0,3
         ST    R0,RSMLGTH
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         L     R0,RSMLGTH
        GETMAIN R,LV=(0)           OBTAIN AREA
         ST    R1,RSMADDR
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT MODE
         L     R1,RSMADDR
         LR    R4,R1
         LR    R5,R3
         MVCL  R4,R2               COPY ALL ESTE'S
        $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT MODE
         L     R5,RSMADDR
         LA    R6,ESTEL
         LR    R9,R7
         ALR   R9,R6
         XR    R8,R8
         DR    R8,R6
         LR    R8,R9
        $SORT  (R5),(R9),ESTEL,ESTQID-ESTE,L'ESTQID
         LR    R0,R8
         LA    R3,LNMA
         BAS   R10,EDSZ
         AL    R7,RSMADDR
         TM    SWITCH,PFSNP
         BZ    NSESTE
         LA    R2,LNM
         BAS   R10,LSSNAP
         UNPK  LNMTA,SNADDR(5)
         TR    LNMTA(L'LNMTA-1),TRTAB-C'0'
         MVI   LNMTA+L'LNMTA-1,C' '
         LA    R2,LNMT
         BAS   R10,LSSNAP
         L     R5,RSMADDR
ESLSL    LA    R0,NESTE
         LA    R1,LNTA
         LR    R2,R5
ESLSD    UNPK  0(9,R1),0(5,R2)
         TR    0(8,R1),TRTAB-C'0'
         MVI   8(R1),C' '
         LA    R2,4(R2)
         LA    R1,L'LNTA(R1)
         BCT   R0,ESLSD
         LA    R2,LNT
         BAS   R10,LSSNAP
         BXLE  R5,R6,ESLSL
NSESTE   LA    R2,LNM
         BAS   R10,PLNE
         LA    R2,LNMU
         BAS   R10,PLNE
         L     R5,RSMADDR
         USING ESTE,R5
         LA    R2,NESQT
         LA    R1,ESQTB
         CLC   ESTQID(L'ESTQID),ESQI(R1)
         BE    *+L'*+12
ESLSR    LA    R1,L'ESQTB(R1)
         BCT   R2,*-14
         B     ERRE
         ST    R5,ESQB(R1)
         XR    R0,R0
ESLSN    ST    R5,ESQE(R1)
         AH    R0,=H'1'
         BXLE  R5,R6,*+L'*+4
         B     *+L'*+10
         CLC   ESTQID(L'ESTQID),ESQI(R1)
         BE    ESLSN
         ST    R0,ESQC(R1)
         CLR   R5,R7
         BNH   ESLSR
         DROP  R5
         LA    R2,LNP1
         BAS   R10,PLNE
         LA    R2,LNP2
         BAS   R10,PLNE
         LA    R5,NESQT
         LA    R4,ESQTB
ESLSF    XR    R0,R0
         IC    R0,ESQI(R4)
         STC   R0,LNPA+1
         SRL   R0,4
         STC   R0,LNPA
         OC    LNPA,=XL2'F0F0'
         TR    LNPA,TRTAB-C'0'
         MVC   LNPB(L'LNPB),ESQN(R4)
         L     R0,ESQC(R4)
         LA    R3,LNPC
         BAS   R10,EDSZ
         LA    R2,LNP
         BAS   R10,PLNE
         LA    R4,L'ESQTB(R4)
         BCT   R5,ESLSF
         MVC   LNU1A,=CL4'ESTE'
         LA    R3,NESQT
         LA    R4,ESQTB
         OC    ESQC(L'ESQC,R4),ESQC(R4)
         BNZ   *+L'*+12
ESLUN    LA    R4,L'ESQTB(R4)
         BCT   R3,*-14
         B     ESLUX
         XR    R0,R0
         IC    R0,ESQI(R4)
         STC   R0,LNWA+1
         SRL   R0,4
         STC   R0,LNWA
         OC    LNWA,=XL2'F0F0'
         TR    LNWA,TRTAB-C'0'
         MVC   LNWB(L'LNWB),ESQN(R4)
         L     R5,ESQB(R4)
         LA    R6,ESTEL
         L     R7,ESQE(R4)
         STM   R3,R4,ESQSVR
         USING ESTE,R5
         LM    R2,R4,VSMSCAN
         XC    VSMC(L'VSMC+L'VSMV,R4),VSMC(R4)
         BXLE  R4,R2,*-6
         XC    ESSPTR,ESSPTR
ESLUL    TM    ESTFLGS2,ESTPFTEF
         BO    ESLUS
         LM    R2,R4,VSMSCAN
         CLC   ESTVSA(L'PFTVSA),VSMA(R4)
         BNL   *+L'*+4
         BXLE  R4,R2,*-10
         L     R0,VSMC(R4)
         AH    R0,=H'1'
         ST    R0,VSMC(R4)
         B     *+L'*+12
ESLUS    L     R0,ESSPTR
         AH    R0,=H'1'
         ST    R0,ESSPTR
         BXLE  R5,R6,ESLUL
         DROP  R5
         TM    SWITCH,PFLFF
         BZ    *+L'*+8
         NI    SWITCH,255-PFLFF
         B     *+L'*+10
         ZAP   NLN,=PL2'+99'       FORCE NEW PAGE FOR ESTE'S USE LIST
         OI    SWITCH,PFLFF
         LA    R2,LNW
         BAS   R10,PLNE
         LA    R2,LNU1
         BAS   R10,PLNE
         LA    R2,LNU2
         BAS   R10,PLNE
         LM    R4,R6,VSMSCAN
ESLUP    MVC   LNUA(L'LNUA),VSMN(R6)
         L     R0,VSMC(R6)
         LA    R3,LNUB
         BAS   R10,EDSZ
         LA    R2,LNU
         BAS   R10,PLNE
         BXLE  R6,R4,ESLUP
         OC    ESSPTR,ESSPTR
         BZ    ESLUZ
         MVI   LNU,C'0'
         MVC   LNUA,=CL16'===> PFTE Ptr. :'
         L     R0,ESSPTR
         CVD   R0,DBLWRD
         MVC   LNUB,=XL8'4020202020202120'
         ED    LNUB,DBLWRD+4
         MVI   LNUC,C' '
         MVC   LNUC+1(L'LNUC-1),LNUC
         LA    R2,LNU
         BAS   R10,PLNE
         MVI   LNU,C' '
ESLUZ    LM    R3,R4,ESQSVR
         B     ESLUN
ESLUX    LM    R0,R1,RSMLGTH
        FREEMAIN R,A=(1),LV=(0)    FREE AREA
        @EXIT  ,
         SPACE 1
        LTORG
         SPACE 1
         DC    AL1(LNML)
LNM      DC    CL35'0    Extended Store Table Entries :'
LNMA     DC    CL43' '
LNML     EQU   *-LNM
         SPACE 1
         DC    AL1(LNMTL)
LNMT     DC    CL29'       Table start address : '
LNMTA    DC    CL9' '
LNMTL    EQU   *-LNMT
         SPACE 1
         DC    AL1(LNMUL)
LNMU     DC    CL35'     =============================='
LNMUL    EQU   *-LNMU
         SPACE 1
         DC    AL1(LNWL)
LNW      DC    CL40'0    Extended Store Table Entries use :'
LNWA     DC    CL2' ',CL3' = '
LNWB     DC    CL34' '
LNWL     EQU   *-LNW
         SPACE 1
         DC    AL1(LNWUL)
LNWU     DC    CL40'     =================================='
LNWUL    EQU   *-LNWU
         SPACE 1
ESSPTR   DC    F'0'
ESQSVR   DC    2F'0'
ESQC     EQU   0,4                 TABLE DISPLACEMENTS
ESQB     EQU   4,4
ESQE     EQU   8,4
ESQI     EQU   12,1
ESQF     EQU   13,1
ESQN     EQU   14,34
ESQTB    DS    0XL48
        @TPE   E0,'On AEQ (never used)'
        @TPE   E1,'On an IN-use Queue'
        @TPE   E2,'On Virtual Fetch Queue'
        @TPE   FD,'A flawed ESTE'
        @TPE   FF,'Unqueued ESTE'
NESQT    EQU   (*-ESQTB)/L'ESQTB
         EJECT
RITFPFTE EQU   208                 FIRST PFTE
RITLPFTE EQU   212                 LAST PFTE
RITFESTE EQU   876                 FIRST ESTE
RITLESTE EQU   880                 LAST ESTE
        PRINT  NOGEN
        CVT    DSECT=YES,PREFIX=YES,LIST=YES
        IHAGDA
        IHAASVT
        IHAASCB
        IHAPVT
        IARPFTE
        IARESTE
TIODSECT DSECT
        IEFTIOT1
         SPACE 2
         END
