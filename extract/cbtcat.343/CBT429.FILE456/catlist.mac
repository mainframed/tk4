CTL      TITLE 'O.S. CATALOG LIST.'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *          O.S. CATALOG LIST          * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    THIS PROGRAM PRODUCES A LISTING OF AN ENTIRE O.S.      *
* ---------    CATALOG (DATA-SET 'SYSCTLG') RESIDING ON A VOLUME      *
*              WHICH IS A DIRECT-ACCESS STORAGE DEVICE CLASS          *
*              (UCBTYP+2 = X'20').                                    *
*                                                                     *
*              A DD-CARD, WRITTEN AS BELOW, IS NEEDED FOR EACH        *
*              VOLUME ON WHICH THE ANALYSIS IS DESIRED :              *
*                                                                     *
*              //CTDD...  DD  UNIT=...,VOLUME=SER=...,DISP=OLD        *
*                                                                     *
*                                                                     *
* CALL OF THE PROGRAM :                                               *
* ---------------------                                               *
*                                                                     *
*        //LIST   EXEC  PGM=CATLIST                                   *
*        //CTDD...  DD  UNIT=...,VOLUME=SER=...,DISP=OLD              *
*        //CTDD...  DD  --- --- --- --- --- --- --- ---               *
*        //CTDD...  DD  --- ANY NUMBER OF DD-CARDS. ---               *
*        //CTDD...  DD  --- --- --- --- --- --- --- ---               *
*        //SYSPRINT DD  SYSOUT=A                                      *
*                                                                     *
*                                                                     *
* RESTRICTION : BE CAREFULL TO RUN THIS PROGRAM ON VOLUMES WHICH      *
* ------------- ARE NOT INVOLVED BY O.S. CATALOG OPERATIONS DURING    *
*               THE ANALYSIS.                                         *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
CTLMAIN  START 0
         SPACE 1
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         SPACE 2
        PRINT  NOGEN
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
         SPACE 1
CTLMAIN  CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
        PRINT  GEN
         EJECT
        $XENT  BASE=(R11,R12)
        EXTRACT   ATIOT,'S',FIELDS=(TIOT)
         SPACE 2
         USING TIODSECT,R3
         L     R3,ATIOT            GET TIOT ADDRESS.
         XR    R1,R1
SRDDS    CLC   TIOELNGH(L'ZEROS),ZEROS  TEST END OF TIOT,
         BE    DDMS                BRANCH IF YES.
         CLC   TIOEDDNM(L'CTDD),CTDD
         BE    OPNSR               BRANCH IF CATALOG DD-NAME.
SRSR     IC    R1,TIOELNGH         NEXT DD ENTRY.
         AR    R3,R1
         B     SRDDS
OPNSR    MVC   DDNAM(L'TIOEDDNM),TIOEDDNM
         ST    R3,ATIOT
         OI    DDMS+1,ON
         DROP  R3
         EJECT
        $CATSO DDNAM,DVTYP
         LTR   R15,R15
         BNZ   ERCATSO
         MVC   MINIT+6(6),VOLUME
        $DAUNTY DVTYP+3,MINIT+14   GET UNIT TYPE NAME.
         LTR   R15,R15
         BNZ   ERDAUNTY
         LA    R1,MINIT
         BAS   R14,PRT             PRINT STARTING TITLE.
         MVI   MESSAGE,C' '
         MVC   MESSAGE+1(L'MESSAGE-1),MESSAGE
         MVI   MESSAGE+6,C'-'
         MVC   MESSAGE+7(L'MINIT-7),MESSAGE+6
         BAS   R14,PRTMS
         MVC   MESSAGE+2(L'MESSAGE-2),MESSAGE+1
         BAS   R14,PRTMS
         EJECT
NEXT     MVC   MESSAGE+2(L'MESSAGE-2),MESSAGE+1
        $CATSR CTYPE,VOLUME,WORK
         LTR   R15,R15
         BM    CATEND
         BNZ   ERCATSR
         CLI   CTYPE,255           TEST CONTINUATION.
         BE    CONT
         MVC   PTYPE,CTYPE
         CLI   CTYPE,1             TEST CVOL POINTER.
         BE    CVOL
         CLI   CTYPE,2             TEST DATA-SET NAME.
         BE    DSNM
         CLI   CTYPE,3             TEST ALIAS NAME.
         BE    ALSN
         CLI   CTYPE,128           TEST NULL INDEX.
         BE    NULL
         B     ERUNEXP
         SPACE 2
CVOL     MVC   MESSAGE+10(L'MCVPE1),MCVPE1
         MVC   MESSAGE+L'MCVPE1+11(8),DSNAME
CVOLC    MVC   MESSAGE+L'MCVPE1+20(L'MCVPE2),MCVPE2
         MVC   MESSAGE+L'MCVPE1+L'MCVPE2+21(L'VOLUME),VOLUME
         CLC   WORK,ZEROS
         BE    CVOLN
         MVC   MESSAGE+L'MCVPE1+L'MCVPE2+L'VOLUME+21(L'MCVPE3),MCVPE3
         LA    R1,L'WORK
         LA    R2,WORK
         LA    R3,MESSAGE+L'MCVPE1+L'MCVPE2+L'VOLUME+L'MCVPE3+22
         BAS   R14,EDIT
         MVI   0(R3),C'.'
         B     *+L'*+4
CVOLN    MVI   MESSAGE+L'MCVPE1+L'MCVPE2+L'VOLUME+21,C'.'
         BAS   R14,PRTMS
         B     NEXT
         SPACE 1
DSNM     LTR   R1,R1
         BNZ   DSNMG
         MVC   MESSAGE+10(L'MDSPE1),MDSPE1
         B     DSNMM
DSNMG    MVC   MESSAGE+10(L'MDSPE2),MDSPE2
DSNMM    MVC   MESSAGE+L'MDSPE1+11(L'DSNAME),DSNAME
DSNMC    MVC   MESSAGE+L'MDSPE1+L'DSNAME+12(L'MCVPE2),MCVPE2
         MVC   MESSAGE+L'MDSPE1+L'DSNAME+L'MCVPE2+13(L'VOLUME),VOLUME
         MVC   MESSAGE+L'MDSPE1+L'DSNAME+L'MCVPE2+L'VOLUME+13(L'MCVPE3)1
               ,MCVPE3
         LA    R1,L'WORK
         LA    R2,WORK
         LA    R3,MESSAGE+L'MDSPE1+L'DSNAME+L'MCVPE2+L'VOLUME+L'MCVPE3+1
               14
         BAS   R14,EDIT
         MVI   0(R3),C'.'
         BAS   R14,PRTMS
         B     NEXT
         SPACE 1
ALSN     MVC   MESSAGE+10(L'MAE1),MAE1
         MVC   MESSAGE+L'MAE1+11(8),DSNAME
         MVC   MESSAGE+L'MAE1+20(L'MAE2),MAE2
         MVC   MESSAGE+L'MAE1+L'MAE2+21(8),DSNAME+8
         MVI   MESSAGE+L'MAE1+L'MAE2+29,C'.'
         BAS   R14,PRTMS
         B     NEXT
         SPACE 1
NULL     LTR   R1,R1
         BZ    NULLSW
         MVC   MESSAGE+10(L'MNGDG),MNGDG
         NI    NULLSW+1,OFF
         MVC   GDGIX,DSNAME
NRL      LA    R14,GDGIX+L'GDGIX-1
         LA    R15,L'GDGIX
NRL1     CLI   0(R14),C' '
         BNE   NRL3
         BCTR  R14,0
         BCT   R15,NRL1
         B     NULLMV
NRL2     CLI   0(R14),C'.'
         BE    NULLMV
NRL3     MVI   0(R14),C' '
         BCTR  R14,0
         BCT   R15,NRL2
         B     NULLMV
NULLSW   B     NULLIX
         CLC   GDGIX,DSNAME
         BE    NRL
         OI    NULLSW+1,ON
NULLIX   MVC   MESSAGE+5(L'MEMPTY),MEMPTY
NULLMV   MVC   MESSAGE+L'MEMPTY+6(L'DSNAME),DSNAME
         BAS   R14,PRTMS
         B     NEXT
         SPACE 1
CONT     CLI   PTYPE,1
         BE    CVOLC
         CLI   PTYPE,2
         BE    DSNMC
ERUNEXP  LA    R1,UNEXP
         BAS   R14,PRT
         NI    SWRCC+1,OFF
         B     CATEND
ERCATSO  MVC   ERRM+6(L'RCATSO),RCATSO
         B     PMERR
ERCATSR  MVC   ERRM+6(L'RCATSR),RCATSR
         B     PMERR
ERDAUNTY MVC   ERRM+6(L'RDAUNTY),RDAUNTY
         B     PMERR
ERCATSC  MVC   ERRM+6(L'RCATSC),RCATSC
         NI    SWWG+1,OFF
PMERR    CVD   R15,CONV
         UNPK  ERRM+L'ERRM-3(2),CONV+6(2)
         OI    ERRM+L'ERRM-2,C'0'
         LA    R1,ERRM
         BAS   R14,PRT
SWWG     B     CATEND
         OI    SWWG+1,ON
         B     CATINF
         EJECT
CATEND  $CATSC VLSTBLK
         LTR   R15,R15
         BNZ   ERCATSC
CATINF   MVI   MESSAGE,C'0'
         MVC   MESSAGE+6(L'MVICE1),MVICE1
         LA    R1,L'VLSTBLK
         LA    R2,VLSTBLK
         LA    R3,MESSAGE+L'MVICE1+7
         BAS   R14,EDIT
         MVC   0(L'MVICE2,R3),MVICE2
         LA    R1,L'VCLSTBLK
         LA    R2,VCLSTBLK
         LA    R3,L'MVICE2+1(R3)
         BAS   R14,EDIT
         MVI   0(R3),C'.'
         BAS   R14,PRTMS
         MVC   MESSAGE+2(L'MESSAGE-2),MESSAGE+1
         MVC   MESSAGE+6(L'MVICE3),MVICE3
         LA    R1,L'VFHOLE
         LA    R2,VFHOLE
         LA    R3,MESSAGE+L'MVICE3+7
         BAS   R14,EDIT
         MVC   0(L'UPTTR,R3),UPTTR
         LA    R1,L'HIGHTTR
         LA    R2,HIGHTTR
         LA    R3,L'UPTTR+1(R3)
         BAS   R14,EDIT
         MVI   0(R3),C'.'
         BAS   R14,PRTMS
         MVC   ENDM+6(6),MINIT+6
         LA    R1,ENDM
         BAS   R14,PRT
         XR    R1,R1
         L     R3,ATIOT
         B     SRSR
         EJECT
DDMS     NOP   SWRCC
         LA    R1,MISM
         BAS   R14,PRT
SWRCC    B     RCC
         LA    R9,64               C.C. = 64. - - - - - - - - - - - -
         B     RCC+L'RCC
RCC      XR    R9,R9               C.C. = 0.  - - - - - - - - - - - -
        $PCLOSE
        $XRET  CC=(R9)
         EJECT
*        HEXADECIMAL OUTPUT ROUTINE.
*
*              R0  = WORK REGISTER.
*              R1  = INPUT FIELD LENGTH.
*              R2  = INPUT FIELD ADDRESS.
*              R3  = OUTPUT FIELD ADDRESS.
*              R4  = WORK REGISTER.
*              R14 = LINK REGISTER.
*              R15 = WORK REGISTER.
*
*        NOTE. AT EXIT, THE REGISTER 3 POINTS AT THE END+1 BYTE ADDRESS
*              OF THE OUTPUT FIELD.
         SPACE 1
EDIT     LR    R15,R1
         LR    R4,R3
         XR    R0,R0
ED1      IC    R0,0(R2)
         STC   R0,1(R3)
         NI    1(R3),X'0F'
         SRL   R0,4
         STC   R0,0(R3)
         LA    R2,1(R2)
         LA    R3,2(R3)
         BCT   R1,ED1
         SLL   R15,1
         BCTR  R15,0
         EX    R15,ED2
         BR    R14
ED2      TR    0(*-*,R4),TRTAB
         EJECT
*        PRINT ROUTINES.
*
*              R0  = WORK REGISTER.
*              R1  = MESSAGE ADDRESS (PRT ENTRY).
*              R14 = LINK REGISTER.
*              R15 = WORK REGISTER.
*
*        NOTE. MESSAGE ADDRESS POINTS TO THE MESSAGE TEXT (ASA
*              CONTROL CHARACTER), PRECEEDED BY THE ONE BYTE
*              MESSAGE TEXT LENGTH.
         SPACE 1
PRTMS    LA    R1,MESSAGE
PRT      ST    R14,SVLINK          SAVE LINK REGISTER.
         LR    R0,R1
        $PRINT (R0)
         LTR   R15,R15             TEST PRINT COMPLETION CODE,
         BNZ   ERRPRT              BRANCH IF ERROR DETECTED.
         L     R14,SVLINK          RESTORE LINK REGISTER.
         BR    R14                 RETURN.
         SPACE 1
ERRPRT   LR    R9,R15              C.C. = FROM 4 TO 20. - - - - - - -
         SLL   R9,2
        $CATSC
         B     RCC+L'RCC
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
CONV     DC    D'0'
ATIOT    DC    A(*-*)
SVLINK   DC    A(*-*)
WORK     DC    F'0'
ZEROS    DC    F'0'
DVTYP    DC    5F'0'
         DC    H'0'
VOLUME   DC    CL6' '
VLSTBLK  DC    F'0'
VCLSTBLK DC    F'0'
VFHOLE   DC    F'0'
HIGHTTR  DC    F'0'
         SPACE 1
PTYPE    DC    XL1'0'
CTYPE    DC    XL1'0'
DSNAME   DC    CL44' '
DDNAM    DC    CL8' '
GDGIX    DC    CL44' '
CTDD     DC    C'CTDD'
MVICE1   DC    C'TTR LAST OF VOL. INDEX ='
MVICE2   DC    C', TTR LAST OF SYSCTLG ='
MVICE3   DC    C'TTR FIRST UNUSED OF SYSCTLG ='
UPTTR    DC    C', UPPER TTR USED ='
MCVPE1   DC    C'CVOL PTR ='
MCVPE2   DC    C'- VOL.ID. ='
MCVPE3   DC    C', DEV.TYPE ='
MDSPE1   DC    C'DATA SET ='
MDSPE2   DC    C'GDG D.S. ='
MNGDG    DC    C'NULL GDG ='
MAE1     DC    C'ALIAS N. ='
MAE2     DC    C'- TRUE NAME ='
MEMPTY   DC    C'-- NULL INDEX ='
TRTAB    DC    C'0123456789ABCDEF'
         EJECT
         DC    AL1(L'MESSAGE)
MESSAGE  DC    CL132' '
         DC    AL1(L'MINIT)
MINIT    DC    C'1            (        ) VOLUME - CATALOG LIST.'
         DC    AL1(L'UNEXP)
UNEXP    DC    C'0          UNEXPECTED CATALOG INDICATOR RECEIVED.'
         DC    AL1(L'ENDM)
ENDM     DC    C'0            : END OF CATALOG LIST.'
         DC    AL1(L'MISM)
MISM     DC    C'1          CTDD.... DD-CARD MISSING.'
         DC    AL1(L'ERRM)
ERRM     DC    C'0              : RETURN CODE XX.'
         SPACE 1
RCATSO   DC    CL8'CATSO'
RCATSR   DC    CL8'CATSR'
RDAUNTY  DC    CL8'DAUNTY'
RCATSC   DC    CL8'CATSC'
         SPACE 2
        LTORG
         SPACE 2
         END
