UTL      TITLE '-- I E F U T L - MVS/SMF TIME LIMIT EXIT --'
IEFUTL   START 0
         SPACE 1
IEFUTL   AMODE 24
IEFUTL   RMODE 24
         SPACE 1
*            -----------------------------------------
*              S M F   T I M E   L I M I T   E X I T
*            -----------------------------------------
         SPACE 1
* AT ENTRY TO THE IEFUTL EXIT ROUTINE, REGISTER 1 POINTS TO THE
* --------     FOUR-BYTE ADDRESS OF THE COMMON EXIT PARAMETER AREA.
*              REGISTER 0 WILL HAVE A BINARY VALUE, AS FOLLOWS :
*                  0 - INDICATES THE JOB CPU TIME LIMIT EXPIRED.
*                  4 - INDICATES THE STEP CPU TIME LIMIT EXPIRED.
*                  8 - INDICATES THE CONTINUOUS WAIT TIME LIMIT FOR
*                      THE JOB EXPIRED.
         SPACE 1
* AT EXIT BEFORE THE IEFUTL EXIT ROUTINE RETURNS CONTROL TO THE
* -------      CONTROL PROGRAM, IT MUST PLACE A RETURN CODE IN
*              REGISTER 15, AS FOLLOWS :
*                  0 - INDICATES JOB PROCESSING IS TO BE CANCELED.
*                  4 - INDICATES JOB PROCESSING IS TO BE CONTINUED
*                      WITH A TIME EXTENSION IN TIMER UNITS.
*                  8 - INDICATES JOB PROCESSING IS TO BE CONTINUED
*                      WITH A TIME EXTENSION IN SECONDS.
*
*              YOU MUST PLACE THE TIME EXTENSION IN REGISTER 1 (YOU
*              CAN DETERMINE THE NUMBER OF TIMER UNITS BY THE
*              ALGORITHM : 1 SECOND = 38400 TIMER UNITS).
         SPACE 2
* AUTHOR :     A. COLOMBO (AMDAHL CONSULTANT)
* --------     P.A. MOINIL
*              COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
        $DEFREG
         EJECT
        $CEPA
         EJECT
        PRINT  NOGEN
         SPACE 2
        IHAPSA
         SPACE 1
        IHAASCB
         SPACE 1
        IRAOUCB
         SPACE 1
CSCB     DSECT
        IEECHAIN
         SPACE 1
        IKJTSB LIST=YES
         SPACE 1
        IEZMGCR
         SPACE 1
        CVT    DSECT=YES,TSO=YES,RPS=YES,LIST=YES
         SPACE 2
        PRINT  GEN
         EJECT
*              WORK AREAS.
         SPACE 1
AREA     DSECT - - - - - - - - - - START OF DSECT - - - - - - - - - - -
         SPACE 2
SAVAREA  DS    18F           SAVE AREA.
         SPACE 2
ENQCNTL  ENQ   (*-*,*-*,E,*-*,SYSTEM),RET=TEST,MF=L
STARTSND DC    F'0'                LENGTH & FLAGS.
STARTWTO DC    F'0'                LENGTH & FLAGS.
STARTMSG DC    CL13'--- IEFUTL - '      MODULE NAME.
TEXT     DC    CL60' '             MESSAGE TEXT.
TWTO     EQU   *-STARTMSG          TPUT LENGTH.
LWTO     EQU   *-STARTWTO          WTO LENGTH.
DCRC     DC    XL4'0'              DESC. & ROUTING CODES.
SCTEXT   DC    CL20' '             SEND COMMAND TEXT.
         SPACE 1
SWPR     DC    XL1'0'              PROCESSING SWITCHES.
PRSTC    EQU   X'01'                    SYSTEM TASK OR MOUNT.
PRTSU    EQU   X'02'                    TIME SHARING USER.
PRSTP    EQU   X'04'                    STEP TIME EXCEEDED.
PRWAIT   EQU   X'08'                    WAIT TIME EXCEEDED.
PRTIO    EQU   X'10'                    I/O EXCEEDED.
         SPACE 2
AREAL    EQU   (((*-AREA)+7)/8)*8
         SPACE 1
IEFUTL   CSECT                     RESTORE ORIGINAL CSECT.
         EJECT
* PROCESS :
* ---------
*
*        BUILD A MESSAGE TO EXPLAIN THE CANCEL REASON AND SEND IT TO
*        THE SYSTEM LOG IF BACKGROUND JOBS OR TO THE TERMINAL AND IN
*        THE MAILBOX (BROADCAST) FOR NEXT LOGON IF FOREGROUND JOBS.
         SPACE 1
         USING *,R11               ADDRESSABILITY.
         SPACE 1
         STM   R14,R12,12(R13)     SAVE REGISTERS.
         LA    R11,0(R15)          SET BASE REGISTER.
         L     R2,0(R1)            GET COMMON EXIT PARM. ADDRESS.
         B     START
         SPACE 1
         USING CEPA,R2
         SPACE 1
         DC    CL8'IEFUTL',C'-'    IDENTIFIER.
         DC    CL8'&SYSDATE',C'('  ASSEMBLY DATE.
         DC    CL5'&SYSTIME',C')'  ASSEMBLY TIME.
         SPACE 1
START    XC    24(4,R13),24(R13)   R1 = 0 : NO TIME EXTENSION.
         XC    16(4,R13),16(R13)   R15 = 0 : CANCEL JOB.
         LTR   R0,R0               JOB CPU TIME EXPIRED?
         BZ    PROCESS             YES.
         CH    R0,=H'4'            STEP CPU TIME EXPIRED?
         BE    PROCESS             YES.
         CH    R0,=H'8'            WAIT TIME LIMIT EXPIRED?
         BE    PROCESS             YES.
         SPACE 1
GOBACK   LM    R14,R12,12(R13)     RESTORE REGISTERS.
         BR    R14                 GO BACK.
         EJECT
*        IEFUTL WILL GIVE A MESSAGE WITH THE CANCEL REASON.
         SPACE 1
PROCESS  LR    R4,R0               SAVE  R0 FOR FURTHER PROCESSING.
        GETMAIN R,LV=AREAL,SP=255
         LR    R3,R1               SET BASE REGISTER FOR AREA.
         USING AREA,R3             ADDRESSABILITY.
         XC    SAVAREA(18*4),SAVAREA
         ST    R13,SAVAREA+4       LINK SAVE AREAS.
         ST    R3,8(R13)
         LR    R13,R3              ACTIVE MY SAVE AREA.
         SPACE 1
*        ANALYZE WHY IEFUTL HAS BEEN INVOLVED.
         SPACE 1
         MVI   SWPR,0              RESET PROCESSING SWITCHES.
        $TSWXA 31,EXPAND=ONLY      ENTER 31-BIT IF XA/24-BIT
         USING PSA,R0              PSA ADDRESSABILITY.
         L     R5,PSAAOLD          PSA ASCB OLD POINTER.
         USING ASCB,R5             ASCB ADDRESSABILITY.
         L     R6,ASCBOUCB         ASCB OUCB POINTER.
         USING OUCB,R6             OUCB ADDRESSABILITY.
         TM    OUCBYFL,OUCBLOG     LOGON CREATED?
         BO    JOBLOGON            YES, REMEMBER IT.
         TM    OUCBYFL,OUCBMNT     MOUNT CREATE?
         BO    JOBSTART            YES, IT IS LIKE A STARTED TASK.
         DROP  R6
         L     R6,ASCBCSCB         GET THE CSCB ADDRESS.
         LTR   R6,R6               IS THERE A CSCB?
         BZ    JOBSTART            NO, CSCB MISSING, SYSTEM TASK.
         USING CSCB,R6             CSCB ADDRESSABILITY.
         TM    CHTRKID,CHINITID    IS IT AN INITIATOR?
         BNO   JOBSTART            YES, MAY BE INIT OR JOB.
         DROP  R6
         L     R1,ASCBJBNI         GET THE JOBNAME POINTER.
         LTR   R1,R1               IS THERE A POINTER?
         BNZ   TESTWT              YES.
JOBSTART OI    SWPR,PRSTC          SYSTEM TASK OR MOUNT.
         B     TESTWT
JOBLOGON OI    SWPR,PRTSU          TIME SHARING USER.
TESTWT   CH    R4,=H'8'            WAIT TIME?
         BNE   TESTTE              NO.
         OI    SWPR,PRWAIT         WAIT TIME EXCEEDED.
         B     DSPLR
TESTTE   LTR   R4,R4               JOB TIME?
         BZ    SRBTCB              YES.
         CH    R4,=H'4'            STEP TIME?
         BNE   DSPLR               NO, SHOULD NEVER OCCUR.
         OI    SWPR,PRSTP          STEP TIME EXCEEDED.
SRBTCB   SR    R1,R1
         ICM   R1,B'0011',CEPAUCOM+2    SRB TIME VALUE REQUIRED.
         BZ    DSPLR               IF ZERO, MUST BE TCB TIME.
         L     R1,ASCBR15C         GET SRB TIME LIMIT.
         LTR   R1,R1               IS IT EXCEEDED?
         BNZ   DSPLR               BRANCH IF NOT.
         OI    SWPR,PRTIO          I/O NUMBER EXCEEDED.
         SPACE 1
*        BUILD THE MESSAGE WITH THE REASON OF CANCEL.
         SPACE 1
DSPLR   $TSWXA 24,EXPAND=ONLY      BACK TO 24-BIT
         MVC   STARTWTO(4),WTOLIST SET MESSAGE AREA.
         MVI   STARTWTO+1,LWTO
         MVC   STARTMSG(13),=CL13'--- IEFUTL - '
         MVC   TEXT(L'TEXT),TEXT-1
         MVC   DCRC(4),WTOLIST+6
         LA    R7,TEXT             START MESSAGE TEXT.
         TM    SWPR,PRSTC
         BO    M1A
         TM    SWPR,PRTSU
         BZ    M1B
         MVC   0(3,R7),=CL3'TSU'
         B     M1C
M1A      MVC   0(3,R7),=CL3'STC'
         B     M1C
M1B      MVC   0(3,R7),=CL3'JOB'
M1C      MVC   4(L'CEPAJOBN,R7),CEPAJOBN
         LA    R7,L'CEPAJOBN+3(R7)
         CLI   0(R7),C' '
         BNE   *+L'*+4
         BCT   R7,*-8
         LA    R7,2(R7)
         TM    SWPR,PRTIO
         BZ    M2C
         TM    SWPR,PRTSU
         BO    M2A
         MVC   0(3,R7),=CL3'JOB'
         LA    R7,4(R7)
         B     M2B
M2A      MVC   0(7,R7),=CL7'SESSION'
         LA    R7,8(R7)
M2B      MVC   0(3,R7),=CL3'I/O'
         LA    R7,4(R7)
         B     M2H
M2C      TM    SWPR,PRWAIT
         BZ    M2E
         TM    SWPR,PRTSU
         BO    M2D
         MVC   0(4,R7),=CL4'WAIT'
         LA    R7,5(R7)
         B     M2G
M2D      MVC   0(5,R7),=CL5'THINK'
         LA    R7,6(R7)
         B     M2G
M2E      TM    SWPR,PRSTP
         BZ    M2F
         MVC   0(4,R7),=CL4'STEP'
         LA    R7,5(R7)
         B     M2G
M2F      MVC   0(3,R7),=CL3'JOB'
         LA    R7,4(R7)
M2G      MVC   0(4,R7),=CL4'TIME'
         LA    R7,5(R7)
M2H      MVC   0(16,R7),=CL16'LIMIT EXCEEDED -'
         LA    R7,17(R7)
         TM    SWPR,PRTSU
         BZ    M3A
         MVC   0(7,R7),=CL7'SESSION'
         LA    R7,8(R7)
         B     M3B
M3A      MVC   0(3,R7),=CL3'JOB'
         LA    R7,4(R7)
M3B      MVC   0(8,R7),=CL8'CANCELED'
         SPACE 1
*        SEND THE MESSAGE TO LOG (WTO - BACKGROUND) OR TO THE
*        TERMINAL AND IN THE BROADCAST (TPUT/SEND - FOREGROUND).
         SPACE 1
         TM    SWPR,PRTSU          IS IT TSU?
         BO    SNDTSU              YES.
         MVC   ENQCNTL(LGENQ),ENQLIST
        ENQ   (QNME,RNME,E,L'RNME,SYSTEM),RET=TEST,MF=(E,ENQCNTL)
         LTR   R15,R15             ANY SYSTEM INTERLOCK MAY OCCUR?
         BNZ   FREE                YES, SKIP, ONLY ABEND MSG.
        WTO    MF=(E,STARTWTO)     SEND MESSAGE TO LOG.
         B     FREE
SNDTSU   L     R6,ASCBTSB          TSB POINTER.
         USING TSB,R6              TSB ADDRESSABILITY.
         TM    TSBSTAT,TSBDSPLY    IS IT A DISPLAY SCREEN?
         BZ    TSTNBF              NO
         TM    TSBFLG5,TSBVTAM     IS IT UNDER VTAM?
         BO    TOBRDC              YES, SKIP, MSG WILL BE UNVIEWABLE.
TSTNBF   CLI   TSBNOBF,0           ANY OUTPUT BUFFERS WAITING?
         BNE   TOBRDC              YES, SKIP, DO NOT WAIT.
         DROP  R6
SNDMSG  TPUT   STARTMSG,TWTO       SEND MESSAGE TO TERMINAL.
TOBRDC   MVC   STARTWTO,=CL4'SE '''     PLACE MESSAGE IN MAILBOX.
         MVI   DCRC,C' '
         MVC   DCRC+1(L'DCRC+L'SCTEXT-1),DCRC
         MVC   8(8,R7),=CL8''',USER=('
         MVC   16(L'CEPAJOBN,R7),CEPAJOBN    SET USER-ID.
         LA    R7,16+L'CEPAJOBN-1(R7)
         CLI   0(R7),C' '
         BNE   *+L'*+4
         BCT   R7,*-8
         MVC   1(6,R7),=CL6'),SAVE'
         LA    R7,L'STARTSND+8(R7)
         LA    R1,STARTSND
         SR    R7,R1
         USING MGCRPL,R1
         XC    MGCRPL(4),MGCRPL
         MVI   MGCRFLG1,MGCRFI     SET MGCRFLG2 VALID.
         STC   R7,MGCRLGTH         SET COMMAND LENGTH.
         DROP  R1
         XR    R0,R0               SETUP FOR SVC 34.
         LR    R15,R0
        MGCR   (1)                 ISSUE SEND COMMAND.
         DROP  R5
         SPACE 1
*        RELEASE ALL AND EXIT.
         SPACE 1
FREE     LR    R1,R3               ADDRESS OF AREA TO BE FREED.
         DROP  R3
         L     R3,4(R13)           PREVIOUS SAVE AREA ADDRESS.
        FREEMAIN R,LV=AREAL,A=(1),SP=255
         LR    R13,R3              RESTORE ORIGINAL SAVE AREA.
         B     GOBACK              RETURN.
         DROP  R2
         EJECT
*              CONSTANTS.
         SPACE 1
ENQLIST  ENQ   (*-*,*-*,E,*-*,SYSTEM),RET=TEST,MF=L
LGENQ    EQU   *-ENQLIST
QNME     DC    CL8'SYSSJWTP'
RNME     DC    CL7'JSCBWTP'
WTOLIST  WTO   '  ',MF=L,ROUTCDE=11,DESC=7
         SPACE 2
         LTORG
         SPACE 2
         END
