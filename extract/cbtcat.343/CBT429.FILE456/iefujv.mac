UJV      TITLE '-- I E F U J V - MVS/SMF JOB VALIDATION EXIT --'
IEFUJV   START 0
         SPACE 1
        PRINT  OFF
         LCLB  &SEX
         LCLB  &STE
         LCLB  &SCA
         LCLB  &STS
         LCLB  &SDU
&SEX     SETB  0
&STE     SETB  0
&SCA     SETB  0
&STS     SETB  0
&SDU     SETB  0
         AIF   ('&SYSPARM' NE 'EXIT').O0S0
&SEX     SETB  1
         AGO   .O0S99
.O0S0    AIF   ('&SYSPARM' NE 'TEST').O0S1
&STE     SETB  1
         AGO   .O0S99
.O0S1    AIF   ('&SYSPARM' NE 'CALL').O0S2
&SCA     SETB  1
         AGO   .O0S99
.O0S2    AIF   ('&SYSPARM' NE 'TSO').O0S3
&STS     SETB  1
         AGO   .O0S99
.O0S3    ANOP
&SDU     SETB  1
.O0S99  PRINT  ON
         SPACE 1
         AIF   (&SEX OR &STE OR &SDU).O1S2
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* A */
         PRINT ON
         EJECT
         AIF   (NOT &STS).O1S0
* CALLING SEQUENCE : CALL IEFUJV,(A,B,C,D,E,F),VL
* ------------------
*
*        WHERE : A - IS THE REGION SIZE EXPRESSED IN K (FORMAT F).
*                B - IS THE NUMBER OF I/O IN 1/1000 (FORMAT F).
*                C - IS THE CPU TIME IN SECONDS (FORMAT F).
*                D - IS THE OUTPUT FIELD FOR PRINT (FORMAT CL132, IT
*                    MUST NOT CONTAIN THE CARRIAGE CONTROL CHARACTER
*                    IN THE FIRST POSITION).
*                E - IS THE ADDRESS OF UJVTABLE (FORMAT A).
*                F - IS THE FLAGS REQUESTS BYTE (FORMAT XL1).
         AGO   .O1S1
.O1S0    ANOP
* CALLING SEQUENCE : CALL IEFUJV,(A,B,C,D,E),VL
* ------------------
*
*        WHERE : A - IS THE REGION SIZE EXPRESSED IN K (FORMAT F).
*                B - IS THE NUMBER OF I/O IN 1/1000 (FORMAT F).
*                C - IS THE CPU TIME IN SECONDS (FORMAT F).
*                D - IS THE OUTPUT FIELD FOR PRINT (FORMAT CL132, IT
*                    MUST NOT CONTAIN THE CARRIAGE CONTROL CHARACTER
*                    IN THE FIRST POSITION).
*                E - IS THE ADDRESS OF UJVTABLE (FORMAT A).
.O1S1    PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* B */
         PRINT ON
         AGO   .O1S3
.O1S2    EJECT
         PRINT OFF
** /* A */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
*            -------------------------------------------------
*              S M F   J O B   V A L I D A T I O N   E X I T
*            -------------------------------------------------
         SPACE 1
* AT ENTRY TO THE IEFUJV EXIT ROUTINE, REGISTER 1 POINTS TO A LIST OF
* --------     FOUR-BYTE ADDRESSES, AS FOLLOWS :
*
* +0  -  1. THE ADDRESS OF THE COMMON EXIT PARAMETER AREA.
*
* +4  -  2. THE ADDRESS OF AN 80-CHARACTER JCL STATEMENT IMAGE (IN
*           EBCDIC). JCL STATEMENTS ARE IDENTICAL TO THOSE LISTED IN
*           THE SYSOUT DATA SET. CONTROL STATEMENTS CONTAINING ONLY
*           COMMENTS AND RESOLVED VALUES FOR SYMBOLIC PARAMETERS,
*           HOWEVER, ARE NOT MADE AVAILABLE TO THIS EXIT ROUTINE.
*
* +8  -  3. THE ADDRESS OF A ONE-BYTE AREA THAT INDICATES THE TYPE
*           OF JCL STATEMENT BEING PASSED TO THIS EXIT ROUTINE. THE
*           INDICATOR WILL BE A BINARY VALUE, AS FOLLOWS :
*              0 - INDICATES A NULL STATEMENT.
*              1 - INDICATES A JOB STATEMENT.
*              2 - INDICATES AN EXEC STATEMENT.
*              4 - INDICATES A DD STATEMENT.
*              8 - INDICATES A PROC STATEMENT.
*             16 - INDICATES ALL JCL HAS BEEN CONVERTED.
*             32 - INDICATES ALL JCL HAS BEEN INTERPRETED AND ALL JCL
*                  HAS BEEN PASSED TO IEFUJV.
*            128 - INDICATES A //* COMMENT CARD (5785-GAK / CJS).
*
* +12 -  4. THE ADDRESS OF THE JES INITIALIZATION PARAMETERS THAT ARE
*           PASSED TO THE CONVERTER ROUTINE. THE ADDRESS POINTS TO THE
*           FIRST CONVERTER PARAMETER FIELD. THE FIELD IS A ONE-BYTE
*           CHARACTER THAT CAN HAVE ONE OF THE FOLLOWING MEANINGS
*           WHEN SET :
*              0 - NO ACCOUNT NUMBER OR PROGRAMMER NAME REQUIRED.
*              1 - PROGRAMMER NAME REQUIRED BUT NOT ACCOUNT NUMBER.
*              2 - ACCOUNT NUMBER REQUIRED BUT NOT PROGRAMMER NAME.
*              3 - ACCOUNT NUMBER AND PROGRAMMER NAME REQUIRED.
*           NOTE : THE ACCOUNT NUMBER MUST NOT BE REQUIRED IN THE EXIT
*                  FOR STARTED TASK JOB CARDS BECAUSE THERE IS NO WAY
*                  TO PUT AN ACCOUNT NUMBER ON A STARTED TASK JOB CARD.
         SPACE 1
* AT EXIT BEFORE THE IEFUJV ROUTINE RETURNS TO THE CONTROL PROGRAM, IT
* -------      MUST PLACE A RETURN CODE IN REGISTER 15, AS FOLLOWS :
*
*              0 - INDICATES JOB PROCESSING SHOULD BE CONTINUED.
*              4 - INDICATES JOB PROCESSING SHOULD BE CANCELED.
         EJECT
         AIF   (&SDU).O99S0
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* DUMMY */
         PRINT ON
         SPACE 1
* NOTE : TO USE INSTALLATION-DEFINED DATA SETS WITH THIS EXIT ROUTINE,
* ------ YOU MUST DEFINE THEM WITH A DD STATEMENT IN THE JOB ENTRY
*        SUBSYSTEM CATALOGED PROCEDURE. WHEN RUNNING JES2, YOU MUST
*        ALSO DEFINE THE DATA SETS WITH A DD STATEMENT IN THE INITIATOR
*        CATALOGED PROCEDURE.
*
*        THE FOLLOWING DD-CARD FORMAT MUST BE USED TO ACCESS THE
*        ACCOUNTING INFORMATION DATA-SET :
*
*          //SYSACC    DD DSN=...,DISP=SHR
*
*        OR :
*
*          //SYSACC    DD UNIT=...,VOL=SER=...,DSN=...,DISP=SHR
         SPACE 2
* CONTROL SUPPRESS (IT IS ALSO FORCED BY SETTING 'UJVFSW' IN MODULE
* ----------------  'UJVTABLE' TO VALUE BELOW)
*
*        1. WHEN USING THE FOLLOWING DD-CARD :
*
*              //SYSACC    DD DUMMY
*
*           ONLY THE SYSTEM GROUP ACCOUNTING NUMBERS ARE VERIFIED,
*           AND ALL OTHERS ARE REJECTED.
*
*        2. IF THERE IS NO DD-CARD (SYSACC DDNAME), ONLY THE SYSTEM
*           GROUP ACCOUNTING NUMBERS ARE VERIFIED, AND ALL OTHERS
*           ARE ACCEPTED WITHOUT CONTROL (THEY ARE JUST CHECKED FOR
*           A VALID ACCOUNTING FIELD FORMAT : 8 NUMERICS).
.O1S3    SPACE 2
         PRINT OFF
** /* B */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         AIF   (&SEX OR &STE).O2S0
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* C */
         PRINT ON
         SPACE 2
        $DEFREG
         EJECT
        $UJVT
         EJECT
         AIF   (NOT &STS).O1S4
         SPACE 1
WRKDSECT DSECT                     WORK AREAS DESCRIPTION.
         SPACE 1
SVA      DS    18F                 SAVE AREA.
         SPACE 1
CONV     DS    D
REGSZ    DS    F
NUMIO    DS    F
CPUTM    DS    F
FLRQ     DS    XL1                 REQUESTS.
SWSU     EQU   X'01'               SETUP COMPUTATIONS.
         SPACE 1
WRKL     EQU   (((*-SVA)+7)/8)*8   WORK AREAS LENGTH.
         SPACE 1
IEFUJV   CSECT                     RESTORE MAIN CSECT.
.O1S4    SPACE 2
LDES     DSECT                     LINE DSECRIPTION (D-ARGUMENT).
         SPACE 1
LINE     DC    0CL132' ',CL5' '
RGV      DC    XL8'4020202020202120',CL2' '
IOV      DC    XL8'4020202020202120',CL3' '
TMV      DC    XL4'40202120',C','
TSV      DC    CL2' ',CL10' '
PRIO     DC    CL1' ',CL2' '
IOX      DC    XL8'4020202020202120',CL2' '
WGV      DC    XL8'4020202020202120',CL3' '
CLV      DC    CL1' ',CL4' '
PGV      DC    XL4'40202120'
         SPACE 1
FILL     EQU   0+L'LINE-(*-LINE)
         DC    (FILL)C' '
         SPACE 1
IEFUJV   CSECT                     RESTORE MAIN CSECT.
         EJECT
* JOB STATEMENT PROCESS COMPUTATIONS :
* ------------------------------------
*
*        1. JOB SCHEDULING PRIORITY FOR EXECUTION SELECTION.
*
*        2. JOB EXECUTION CLASS.
*
*        3. JOB PERFORMANCE GROUP NUMBER.
         SPACE 1
         AIF   (&STS).O1S5
        $XENT  BASE=(R10,R11)
         AGO   .O1S6
.O1S5   $XENT  BASE=(R10,R11),LV=WRKL,TYPE=RENT
         LR    R8,R13
         USING WRKDSECT,R8
.O1S6    L     R12,16(R1)
         USING UVTDSECT,R12
         LM    R2,R4,0(R1)
         AIF   (NOT &STS).O1S7
         L     R9,20(R1)
         MVC   FLRQ(L'FLRQ),0(R9)
.O1S7    L     R9,12(R1)
         USING LDES,R9
         MVC   LINE,LDATA
         L     R0,0(R2)            EDIT REGION SIZE.
         ST    R0,REGSZ
         CVD   R0,CONV
         ED    RGV,CONV+4
         L     R0,0(R3)            EDIT I/O NUMBER.
         ST    R0,NUMIO
         MH    R0,THSND+2
         CVD   R0,CONV
         ED    IOV,CONV+4
         L     R1,0(R4)            EDIT CPU TIME.
         ST    R1,CPUTM
         C     R1,MSEC
         BL    NOMIN
         XR    R0,R0
         D     R0,MSEC
         CVD   R1,CONV
         ED    TMV,CONV+6
         B     EDSEC
NOMIN    LR    R0,R1
         MVC   TMV,TMZ
EDSEC    CVD   R0,CONV
         UNPK  TSV(2),CONV+6(2)
         OI    TSV+1,C'0'
         XR    R0,R0               COMPUTE SCHEDULING PRIORITY.
         L     R1,NUMIO
         MH    R1,THSND+2
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* D */
         PRINT ON
         AGO   .O9S2
.O2S0    EJECT
         PRINT OFF
** /* C */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
        $DEFREG
         EJECT
        $CEPA
         EJECT
        $UJVT
         EJECT
        $AIRD  SEC=YES
         AIF   (NOT &SEX).O2S1
         EJECT
        PRINT  NOGEN
         SPACE 2
         AGO   .O2S2
.O2S1   PRINT  OFF
.O2S2    ANOP
TIODSECT DSECT
         SPACE 1
        IEFTIOT1
         SPACE 1
IEFUJV   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 2
NELDSECT DSECT
         SPACE 1
        IEFNEL SUBCOM=C
         SPACE 1
IEFUJV   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 2
$MAXDA   EQU   253       MAX. NO. OF SPOOL VOLUMES ($HASPEQU) / $JCT
        IFGRPL ,         MVS ACB REQUEST PARAMETER LIST / $BUFFER
         SPACE 1
        $BUFFER
         SPACE 1
        $JCT
         SPACE 2
        DCBD   DSORG=DA
         SPACE 1
IEFUJV   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 2
         AIF   (NOT &SEX).O2S3
        PRINT  GEN
         AGO   .O2S4
.O2S3   PRINT  ON
.O2S4    TITLE '-- I E F U J V - MVS/SMF JOB VALIDATION EXIT --'
*              WORK AREAS.
         SPACE 1
AREA     DSECT - - - - - - - - - - START OF DSECT - - - - - - - - - - -
         SPACE 2
SAVAREA  DS    18F           SAVE AREA.
         SPACE 2
CONV     DS    D . . . . . . . . . START OF WORK DSECT . . . . . . .W.1
WORK     DS    F
DATE     DS    PL4
AUTN     DS    H
PRGN     DS    H
ERRSW    DS    XL1
PRCSW    DS    XL1
PFLNOC   EQU   X'01'
PFLNOF   EQU   X'02'
PFLECT   EQU   X'04'
PFLSCT   EQU   X'08'
         SPACE 2
COMMON   DS    0F  - - - - - - - - COMMON WORK AREA ORIGIN. - - - - - A
         SPACE 1
WCTL     DC    0F'0',AL2(L'WCTL+L'MSG,0)
MSG      DC    CL72' '             MESSAGE AREA.
         SPACE 2
AREAW    EQU   (((*-CONV)+7)/8)*8  END OF WORK DSECT . . . . . . . .W.1
         SPACE 2
         ORG   COMMON - - - - - - - - - - - - - - - - - - - - - - - - A
         SPACE 1
EXTLST  EXTRACT  *-*,'S',FIELDS=(TIOT),MF=L
         SPACE 2
         ORG   COMMON - - - - - - - - - - - - - - - - - - - - - - - - A
         SPACE 1
DCBSR   DCB    DSORG=DA,MACRF=(RIC),BFALN=D,BFTEK=S,KEYLEN=0,LIMCT=1,  1
               OPTCD=R,DDNAME=SYSACC
        READ   DECBSR,DI,MF=L
JOBFILE  DC    0F'0',XL1'87',AL3(*-*)
JF       DC    XL176'00'
         SPACE 2
OVERLAY  DS    0F  - - - - - - - - COMMON WORK AREA ORIGIN. - - - - - B
         SPACE 1
DSCBSR  CAMLST SEARCH,*-*,*-*,*-*
         DS    0D
WKA      DC    XL148'00'
         SPACE 2
         ORG   OVERLAY  - - - - - - - - - - - - - - - - - - - - - - - B
         SPACE 1
RECAI    DC    (AUTLGTH)X'00'
RECPI    DC    (PRGLGTH)X'00'
         SPACE 2
AREAL    EQU   (((*-AREA)+7)/8)*8
         SPACE 1
IEFUJV   CSECT                     RESTORE ORIGINAL CSECT.
         EJECT
**********************************************************************
*                                                                    *
* CONTROL BLOCKS FLOW BETWEEN IEFUJV (SMF) AND HASPCNVT (JES2) :     *
* ==============================================================     *
*                                                                    *
* AT ENTRY, REGISTER 1 (1) POINTS TO :                               *
* ------------------------------------                               *
*   (1) ---> + 0 : A. CEPA                                           *
*            + 4 : A. JCL STATEMENT                                  *
*            + 8 : A. ONE-BYTE INDICATOR                             *
*            +12 : A. JES INIT. PARM. ---> (2)                       *
*                                                                    *
* CONVERTER AND INTERPRETER ENTRANCE LIST :                          *
* -----------------------------------------                          *
*            NELLIST  : START OF DSECT                               *
*             ...                                                    *
*            NELJMR   : A. JMR ---> (3)                              *
*             ...                                                    *
*   (2) ---> NELPARMO : CONVERTER PARM. FIELD                        *
*             ...                                                    *
*                                                                    *
* HASP (JES2) JOB CONTROL TABLE :                                    *
* -------------------------------                                    *
*            JCTDSECT : START OF DSECT                               *
*             ...                                                    *
*            JCTSTART : START OF DATA WRITTEN TO SPOOL               *
*             ...                                                    *
*   (3) ---> JCTJMRST : START OF JMR AREA                            *
*             ...                                                    *
*                                                                    *
**********************************************************************
         EJECT
         USING *,R10,R11
         SPACE 1
         STM   R14,R12,12(R13)     SAVE REGISTERS.
         LA    R10,0(R15)          SET BASE REGISTER.
         LM    R2,R5,0(R1)         GET PARAMETERS ADDRESSES.
         B     START
         SPACE 1
         USING CEPA,R2
         SPACE 1
         DC    CL8'IEFUJV',C'-'    IDENTIFIER.
         DC    CL8'&SYSDATE',C'('  ASSEMBLY DATE.
         DC    CL5'&SYSTIME',C')'  ASSEMBLY TIME.
         SPACE 1
START    LA    R11,2048(R10)       SET ADDITIONAL BASE REGISTERS.
         LA    R11,2048(R11)
         SPACE 1
         CLI   0(R4),1             JOB STATEMENT?
         BNE   OTHER               NO, LOOK FURTHER.
         SPACE 1
         SH    R5,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R5
         TM    NELOPSWT,NELSMF     STARTED TASK (INITIATOR,...)?
         BZ    EXIT                YES.
         DROP  R5
         EJECT
* JOB STATEMENT PROCESS :
* -----------------------
*
*        1. VERIFY THE ACCOUNTING NUMBER AND SUPPLY THE BOX NUMBER
*           IF OMITTED, UNLESS THE ACCOUNT CONTROL IS SUPPRESSED.
*           COPY THE ACCOUNTING NUMBER IN THE FIELD 'CEPAUSER' (USER
*           IDENTIFICATION).
*
*        2. THE JOB TOTAL I/O'S NUMBER REQUEST (EXPRESSED IN 1/1000
*           I/O) IS INITIALIZED FOR 'IEFUJI' EXIT. AN I/O'S NUMBER
*           EQUAL TO OR LARGER THAN 7.200.000 (2 HOURS IN SECONDS /
*           SRB TIME) MEANS A REQUEST TO SUPPRESS THE I/O CONTROL,
*           BUT THIS IS EXHAUSTED ONLY IF THE JOB ACCOUNTING NUMBER
*           IS AUTHORIZED, OTHERWISE VALUE 7200 IS FORCED FOR THE JOB.
*           THE JOB TOTAL I/O'S NUMBER REQUEST IS PASSED IN THE FIELD
*           'JCTUSER0' BY HASP.
*           EXEMPTS : 1. THE SYSTEM AND THE OPERATOR CLASSES ARE
*           ---------    ALLOWED TO BE EXEMPTED FROM THE I/O CONTROL
*                        FOR JOBS WITH AN AUTHORIZED ACCOUNTING NUMBER.
*                     2. SPECIAL TASK (I.E., ADABAS, I.M.S., CICS, ...)
*                        CLASSES ARE ALSO EXEMPTED WHEN SUBMITTED WITH
*                        AN AUTHORIZED ACCOUNTING NUMBER.
*                     3. SOME PREDEFINED CLASS MEANS A JOB FOR WHICH
*                        ALL NORMAL COMPUTATIONS ARE PERFORMED, BUT NO
*                        NEW CLASS IS ASSIGNED (I.E., ADABAS-BATCH).
*                     4. SPECIAL JOB CLASS ASSIGNMENT (SEE EXEC, DD AND
*                        PROC STATEMENTS PROCESS).
*
*        3. PROCESS THE 'TIME' PARAMETER IF PRESENT. TIME=1440 IS ONLY
*           SYSTEM TASKS AND JOBS SPECIAL AUTHORIZATIONS ALLOWED.
*           IF ENCOUNTERED IN BACKGROUND OR FOREGROUND JOBS, IT IS
*           CHANGED TO A 10 HOURS VALUE.
*
*        4. PROCESS THE 'REGION' PARAMETER IF PRESENT.
         SPACE 1
* WORKING USER-COMMUNICATION FIELD USE DESCRIPTION :
* --------------------------------------------------
*
* CEPAUCOM   +0 - WORKING FLAGS AND PRIORITY INCREMENT (X'FI').
*          +1-3 - REGION SIZE IN K :
*                 0 (X'000000') = 0K OR 0M CODED IN JOB CARD,
*                 WHICH MEANS ALL AVAILABLE XA CORE STORAGE.
         SPACE 1
*                        WORKING FLAGS DEFINITION.
IOCSA    EQU   X'10'               ACCEPT TIME-I/O CONTROL SUPPRESS.
ETIME    EQU   X'20'               JOB CARD 'TIME' PARM. PROCESSED.
EREGION  EQU   X'40'               JOB CARD 'REGION' PARM. PROCESSED.
SCAN     EQU   X'80'               JOB CARD SCAN FLAG.
         EJECT
         L     R12,UJVTADDR
         USING UVTDSECT,R12
         LA    R5,2(R3)            SET SCAN REGISTERS VALUES.
         LA    R6,1
         LA    R7,71(R3)
         XR    R8,R8
         CLI   0(R5),C' '
         BE    *+L'*+8
         BXLE  R5,R6,*-8
         B     NOJOB
         CLI   0(R5),C' '
         BNE   *+L'*+8
         BXLE  R5,R6,*-8
         B     NOJOB
         CLC   0(L'JOBP,R5),JOBP   SEARCH JOB KEYWORD.
         BNE   CJOB
         MVC   CEPAUCOM,ZEROS      CLEAR (START OF JOB).
         LA    R5,L'JOBP(R5)
         CLI   0(R5),C' '          SEARCH START OF ACCOUNT NUMBER.
         BNE   GETA
         BXLE  R5,R6,*-8
NOJOB    LA    R8,EJOB
GETA     LR    R4,R13
         AIF   (NOT &SEX).O3S0
        GETMAIN    R,LV=AREAL,SP=230
         AGO   .O3S1
.O3S0   GETMAIN    R,LV=AREAL
.O3S1    LR    R9,R1               SET BASE REGISTER FOR AREA.
         USING AREA,R9
         LA    R13,SAVAREA
         XC    SAVAREA(18*4),SAVAREA
         ST    R13,8(R4)           LINK SAVE AREAS.
         ST    R4,4(R13)
         LTR   R8,R8
         BNZR  R8                  TAKE CHOOSEN EXIT.
         SPACE 1
         MVI   PRCSW,0             RESET PROCESS SWITCHES
         LA    R8,NOACC
         CLI   0(R5),C''''         BACKGROUND/FOREGROUND JOBS.
         BE    ACTP
         CLI   0(R5),C'('
         BNE   ACTT
         BXLE  R5,R6,*+L'*+4
         B     INVACT
         CLI   0(R5),C''''
         BNE   ACTT
ACTP     OI    CEPAUCOM,SCAN
         BXLE  R5,R6,ACTT
         B     INVACT
ACTT     MVC   CONV(L'CONV),MKZ
         MVZ   CONV(L'CONV),0(R5)
         XC    CONV(L'CONV),MKZ
         BNZ   INVACT
         PACK  CONV,0(4,R5)        CONVERT AUTHORIZATION'S NUMBER.
         NI    CONV+7,X'FC'
         CVB   R1,CONV
         LTR   R1,R1
         BZ    INVACT
         STH   R1,AUTN
         PACK  CONV,4(4,R5)        CONVERT PROGRAMMER'S NUMBER.
         NI    CONV+7,X'FC'
         CVB   R1,CONV
         LTR   R1,R1
         BZ    INVACT
         STH   R1,PRGN
         MVC   CEPAUSER(L'CEPAUSER),0(R5)    SET ACC.NO. IN ID FIELD.
         LA    R5,L'CONV(R5)
         LA    R8,CHKSYS
         OI    PRCSW,PFLNOC+PFLNOF
         XC    WORK,WORK           GET TIOT ADDRESS.
         MVC   EXTLST(EXTBLKL),EXTBLK
         LA    R1,WORK
         ST    R1,EXTLST
        EXTRACT  MF=(E,EXTLST)
         L     R4,WORK
         LTR   R4,R4
         BZ    ETIO                NO TIOT SUPPLIED.
         L     R1,UJVFSW
         CLI   0(R1),C'1'          FORCE CONTROL SUPPRESS IF SET.
         BE    SETECT
         CLI   0(R1),C'2'
         BE    SETSCT
         USING TIODSECT,R4
         MVC   COMMON(DCBSKL),DCBSK     DCB SKELETON.
         LA    R6,DCBSR
         USING IHADCB,R6
TLOOP    CLC   TIOELNGH(L'ZEROS),ZEROS  SEARCH DD-CARD IN TIOT.
         BE    SETSCT
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    DDFND
         XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R4,R1
         B     TLOOP
DDFND    CLI   TIOELINK,0          TEST DUMMY DD-CARD.
         BNE   TDEV
         CLC   TIOEFSRT(L'TIOEFSRT),ZEROS
         BE    SETECT
         DROP  R4
TDEV     LA    R7,MAXERR
         XC    CONV,CONV           CONTROL DEVICE TYPE.
        DEVTYPE  DCBDDNAM,CONV
         CLI   CONV+2,X'20'
         BNE   ERR1                NOT DIRECT-ACCESS DEVICE.
         XC    JF(L'JF),JF         BUILD JFCB EXIT LIST.
         LA    R0,JF
         LA    R1,JOBFILE
         ST    R0,0(R1)
         MVI   0(R1),X'87'
         XC    DCBEXLSA(L'DCBEXLSA),DCBEXLSA
         O     R1,DCBEXLSA-1
         ST    R1,DCBEXLSA-1
         LA    R1,0(R6)            READ THE JFCB.
         O     R1,JFCBSR
         ST    R1,WORK
        RDJFCB MF=(E,WORK)
         LTR   R15,R15
         BNZ   ERR2                JFCB READ ERROR.
         MVC   DSCBSR(DSCBSKL),DSCBSK   OBTAIN DSCB.
         LA    R1,JF
         ST    R1,DSCBSR+4
         LA    R1,JF+118           JFCBVOLS.
         ST    R1,DSCBSR+8
         LA    R1,WKA
         ST    R1,DSCBSR+12
         XC    WKA(L'WKA),WKA
        OBTAIN DSCBSR
         LTR   R15,R15
         BNZ   ERR3                DSCB OBTAIN ERROR.
         OI    JF+52,X'08'         INHIBIT WRITE BACK(JFCBTSDM).
         LA    R1,0(R6)            OPEN DCB.
         O     R1,OPENSR
         ST    R1,WORK
        OPEN   TYPE=J,MF=(E,WORK)
         TM    DCBOFLGS,DCBOFOPN
         BZ    ERR4                UNSUCCESSFULL OPEN.
         XC    DCBEXLSA(L'DCBEXLSA),DCBEXLSA CLEAR EXIT.
         MVC   DECBSR(DECBSKL),DECBSK   BUILD DECB AND READ RECORD.
         LH    R0,AUTN
         BCTR  R0,0
         ST    R0,WORK
         LA    R4,3                SET ERROR RETRY COUNT.
TRYAG    MVI   ERRSW,0             RESET ERROR SWITCH.
         LA    R1,DECBSR
         XC    RECAI(AUTLGTH),RECAI
        READ   (1),DI,(6),RECAI,'S',0,WORK+1,MF=E
        CHECK  DECBSR
         CLI   ERRSW,0             ANY ERROR DETECTED,
         BE    *+L'*+4             BRANCH IF NOT.
         BCT   R4,TRYAG            TRY AGAIN.
         CLI   ERRSW,0             PERMANENT ERROR?
         BNE   CLODS               YES.
         L     R1,4(R13)           BACK THRU SAVE AREAS.
         L     R1,24(R1)           RESTORE ENTRY REGISTER 1.
         L     R1,12(R1)
         SH    R1,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R1
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT(HASP).
         DROP  R1
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         ST    R4,CONV             SAVE JCT ADDRESS.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BE    *+L'*+8             YES.
         MVI   ERRSW,1
         B     CLODS
         CLI   JCTROOMN,0          PROGRAMMER'S ROOM NUMBER?
         BE    *+L'*+8             NOT SUPPLIED.
         CLI   JCTROOMN,C' '
         BNE   CLODS               OK, SUPPLIED.
         DROP  R4
         LH    R0,PRGN
         AH    R0,RELPOS
         ST    R0,WORK
         LA    R4,3                SET ERROR RETRY COUNT.
AGTRY    MVI   ERRSW,0             RESET ERROR SWITCH.
         LA    R1,DECBSR
         XC    RECPI(PRGLGTH),RECPI
        READ   (1),DI,(6),RECPI,'S',0,WORK+1,MF=E
        CHECK  DECBSR
         CLI   ERRSW,0             ANY ERROR DETECTED?
         BE    CLODS               BRANCH IF NOT.
         BCT   R4,AGTRY            TRY AGAIN.
CLODS    LA    R1,0(R6)            CLOSE DCB.
         O     R1,CLOSESR
         ST    R1,WORK
        CLOSE  MF=(E,WORK)
         DROP  R6
         CLI   ERRSW,0
         BE    *+L'*+12
         CLI   ERRSW,1
         BNE   ERR5                PERMANENT READ ERROR.
         B     EJCT
        TIME   BIN
         ST    R1,DATE             FORMAT = 0CYYDDDF.
         AP    DATE,YP1900
         L     R4,CONV             RESTORE JCT ADDRESS.
         USING JCTSTART,R4
         CLI   JCTROOMN,0          PROGRAMMER'S ROOM NUMBER?
         BE    *+L'*+8             NOT SUPPLIED.
         CLI   JCTROOMN,C' '
         BNE   CHKBOX              OK, SUPPLIED.
         LA    R6,RECPI
         USING PRGDSECT,R6
         CLC   PRGBXNO(L'PRGBXNO),MKZ
         BE    SETBLKS             NO BOX SUPPLIED.
         CLC   PRGBXNO(L'PRGBXNO),BLKS
         BE    SETBLKS             NO BOX SUPPLIED.
         CLC   PRGBXNO(L'PRGBXNO),ZEROS
         BE    SETBLKS             NO BOX SUPPLIED.
         MVC   JCTROOMN(L'PRGBXNO),PRGBXNO   SET BOX NUMBER.
         B     CHKBOX
         DROP  R6
SETBLKS  MVC   JCTROOMN(L'JCTROOMN),BLKS
CHKBOX   BAL   R14,CBOX            CHECK BOX NUMBER.
         DROP  R4
         LA    R6,RECAI
         USING AUTDSECT,R6
         LH    R1,AUTANO
         LTR   R1,R1
         BNP   CAUT                AUTHORIZATION CANCELED.
         XR    R1,R1
         ICM   R1,B'0111',AUTVSD
         CL    R1,YB99             WHICH FORMAT?
         BH    *+L'*+4             NEW FORMAT.
         AL    R1,YB1900           OLD FORMAT, ADJUST IT.
         CVD   R1,CONV
         CP    DATE,CONV+4(4)
         BL    EANA                AUTHORIZATION NOT YET ACTIVE.
         XR    R1,R1
         ICM   R1,B'0111',AUTVED
         CL    R1,YB99             WHICH FORMAT?
         BH    *+L'*+4             NEW FORMAT.
         AL    R1,YB1900           OLD FORMAT, ADJUST IT.
         CVD   R1,CONV
         CP    DATE,CONV+4(4)
         BH    EAUT                AUTHORIZATION EXPIRED.
         LA    R0,AUTNPNF
         LA    R1,AUTPNO
CTLPRN   CLC   0(L'PRGN,R1),PRGN
         BE    SETPRIO             PROGRAMMER IS ALLOWED, OK.
         LA    R1,L'AUTPNO(R1)
         BCT   R0,CTLPRN
         B     UNPR
SETPRIO  LA    R8,NORCV
         NI    PRCSW,255-PFLNOC-PFLNOF
         CLI   AUTPI,C'4'
         BE    SRIOC
         MVN   CEPAUCOM(L'AUTPI),AUTPI  GET PRIORITY INCR.
         B     SRIOC
         DROP  R6
SETECT   OI    PRCSW,PFLECT
         LA    R8,NORCV
         B     RSTPFL
SETSCT   OI    PRCSW,PFLSCT
         LA    R8,NORCV
         B     SRAUT
CHKSYS   LA    R8,RCVACC
RSTPFL   NI    PRCSW,255-PFLNOC-PFLNOF
SRAUT    L     R4,SYSAUT           CHECK IF SYSTEM
TSAUT    CLC   0(2,R4),ZEROS
         BNE   CHKAUT
         TM    PRCSW,PFLECT
         BO    ECTL
         TM    PRCSW,PFLSCT
         BO    SCTL
         LA    R8,CANCEL
         B     NOCTL
CHKAUT   CLC   0(2,R4),AUTN
         BE    TSPRG
NEXT     LA    R4,2(R4)
         CLC   0(2,R4),ZEROS
         BNE   NEXT
BUMP     LA    R4,2(R4)
         B     TSAUT
TSPRG    LA    R4,2(R4)
         CLC   0(2,R4),ZEROS
         BE    BUMP
         CLC   0(2,R4),PRGN
         BNE   TSPRG
RSTALL   NI    PRCSW,255-PFLNOC-PFLNOF-PFLECT-PFLSCT
SRIOC    L     R4,SYSIOS           LOOK FOR TIME AND I/O CONTROL
TSIOC    CLC   0(2,R4),ZEROS       SUPPRESS ACCEPTANCE.
         BE    NOTIOS
         CLC   0(2,R4),AUTN
         BE    SETIOC
         LA    R4,2(R4)
         B     TSIOC
SETIOC   OI    CEPAUCOM,IOCSA      ALLOW CONTROL SUPPRESS.
NOTIOS   L     R1,4(R13)           BACK THRU SAVE AREAS.
         L     R1,24(R1)           RESTORE ENTRY REGISTER 1.
         L     R1,12(R1)
         SH    R1,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R1
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT(HASP).
         DROP  R1
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BNE   EJCT                NO.
         L     R6,SYSPST           LOOK FOR SPECIAL TASKS/CLASS.
PSTEST   CLC   0(2,R6),ZEROS
         BE    NOTPST
         CLC   0(L'AUTN+L'PRGN,R6),AUTN
         BE    PSCNTL
         LA    R6,L'AUTN+L'PRGN+1(R6)
         B     PSTEST
PSCNTL   CLC   JCTJCLAS(1),L'AUTN+L'PRGN(R6) RIGHT CLASS SPECIFIED?
         BNE   INVCLS              NO.
NOTPST   CLI   JCTROOMN,0          PROGRAMMER'S ROOM NUMBER?
         BE    NSBOX               NONE, NOT SUPPLIED.
         BAL   R14,CBOX            OK, SUPPLIED, GO CHECK IT.
         BR    R8
NSBOX    L     R6,SYSBOX
TSBOX    CLC   0(2,R6),ZEROS
         BE    FORCE
         LR    R7,R6
TSBPR    LA    R6,2(R6)
         CLC   0(2,R6),ZEROS
         BE    TSBNX
         CLC   0(2,R6),PRGN
         BE    SETBOX
         B     TSBPR
TSBNX    LA    R6,2(R6)
         B     TSBOX
SETBOX   LH    R6,0(R7)
         CVD   R6,CONV
         UNPK  JCTROOMN,CONV+5(3)
         OI    JCTROOMN+3,C'0'
         BR    R8
FORCE    MVC   JCTROOMN,NSYSBOX    FORCE TO SYSTEM GROUP BOX.
         BR    R8
CBOX     CLC   JCTROOMN(L'JCTROOMN),BLKS     CHECK BOX NUMBER ROUTINE.
         BER   R14                 NO BOX SUPPLIED.
         LA    R0,4                CHECK BOX NUMBER.
         LA    R1,JCTROOMN
CBOX1    CLI   0(R1),0
         BE    CBOX2
         CLI   0(R1),C' '
         BNE   CBOX3
CBOX2    MVI   0(R1),C'0'
         LA    R1,1(R1)
         BCT   R0,CBOX1
         MVC   JCTROOMN(L'JCTROOMN),BLKS     NO BOX SUPPLIED.
         BR    R14
CBOX3    CLI   JCTROOMN+L'JCTROOMN-1,0
         BE    CBOX4
         CLI   JCTROOMN+L'JCTROOMN-1,C' '
         BNER  R14
CBOX4    MVC   CONV(L'CONV-L'JCTROOMN),MKZ
         MVC   CONV+L'CONV-L'JCTROOMN(L'JCTROOMN),JCTROOMN
         LA    R1,CONV+L'CONV-L'JCTROOMN
CBOX5    CLI   L'JCTROOMN-1(R1),0
         BE    CBOX6
         CLI   L'JCTROOMN-1(R1),C' '
         BNE   CBOX6+L'CBOX6
CBOX6    BCT   R1,CBOX5
         MVC   JCTROOMN(L'JCTROOMN),0(R1)
         BR    R14
         DROP  R4
RCVACC   MVC   MSG(L'LOGERR),LOGERR
         MVC   MSG+12(L'CEPAJOBN),CEPAJOBN   SET JOB NAME.
         MVC   MSG+L'LOGERR(L'MSGRCV),MSGRCV
         LA    R0,L'WCTL+L'LOGERR+L'MSGRCV
         SLL   R0,16
         ST    R0,WCTL
         AIF   (NOT &SEX).O4S0
        WTO    MF=(E,WCTL)
         AGO   .O4S1
.O4S0    MVC   TXWTO,MSG
         BAL   R14,PRWTO
.O4S1    ANOP
NORCV    LA    R8,NOACC
         B     NOCTL
         SPACE 1
RERR     MVI   ERRSW,255           SYNAD - SET ERROR SWITCH.
         BR    R14                 RETURN.
         SPACE 1
EJCT     MVC   MSG+L'LOGERR(L'JCTERR),JCTERR
         LA    R4,L'JCTERR
         B     TERM
UNPR     MVC   MSG+L'LOGERR(L'PRGERR),PRGERR
         LA    R4,L'PRGERR
         B     TERM
ETIO     MVC   MSG+L'LOGERR(L'TIOERR),TIOERR
         LA    R4,L'TIOERR
         B     TERM
SCTL     LA    R8,RSTALL
         MVC   MSG+L'LOGERR(L'CTLERR),CTLERR
         LA    R4,L'CTLERR
         B     TERM
ECTL     NI    PRCSW,255-PFLECT
         MVC   MSG+L'LOGERR(L'DUMERR),DUMERR
         LA    R4,L'DUMERR
         B     TERM
CAUT     MVC   MSG+L'LOGERR(L'INAERR),INAERR
         LA    R4,L'INAERR
         B     TERM
EANA     MVC   MSG+L'LOGERR(L'ANAERR),ANAERR
         LA    R4,L'ANAERR
         B     TERM
EAUT     MVC   MSG+L'LOGERR(L'ANEERR),ANEERR
         LA    R4,L'ANEERR
         B     TERM
INVACT   MVC   MSG+L'LOGERR(L'ACCERR),ACCERR
         LA    R4,L'ACCERR
         B     TERM
INVCLS   MVC   MSG+L'LOGERR(L'CLSERR),CLSERR
         LA    R4,L'CLSERR
         B     TERM
EJOB     MVC   MSG+L'LOGERR(L'JOBERR),JOBERR
         LA    R4,L'JOBERR
         B     TERM
         SPACE 1
ERR1     BCTR  R7,0                NOT DIRECT ACCESS DEVICE.
ERR2     BCTR  R7,0                JFCB READ ERROR.
ERR3     BCTR  R7,0                DSCB OBTAIN ERROR.
ERR4     BCTR  R7,0                UNSUCCESSFULL OPEN.
ERR5     BCTR  R7,0                PERMANENT READ ERROR.
         SPACE 1
MAXERR   EQU   ((*-ERR1)/2)+1
         SPACE 1
         MVC   MSG+L'LOGERR(L'MSGERR),MSGERR
         CVD   R7,CONV
         UNPK  MSG+L'LOGERR+L'MSGERR-4(3),CONV+6(2)
         OI    MSG+L'LOGERR+L'MSGERR-2,C'0'
         LA    R4,L'MSGERR
TERM     TM    PRCSW,PFLNOC
         BO    *+L'*+4
         LA    R8,CANCEL
         LA    R0,L'WCTL+L'LOGERR(R4)
         SLL   R0,16
         ST    R0,WCTL
         MVC   MSG(L'LOGERR),LOGERR
         MVC   MSG+12(L'CEPAJOBN),CEPAJOBN   SET JOB NAME.
         AIF   (NOT &SEX).O4S2
        WTO    MF=(E,WCTL)
         AGO   .O4S3
.O4S2    MVC   TXWTO,MSG
         BAL   R14,PRWTO
.O4S3    TM    PRCSW,PFLNOF
         BOR   R8
NOCTL    L     R4,4(R13)
         LR    R1,R9
         DROP  R9
         AIF   (NOT &SEX).O5S0
        FREEMAIN   R,LV=AREAL,A=(1),SP=230
         AGO   .O5S1
.O5S0   FREEMAIN   R,LV=AREAL,A=(1)
.O5S1    LR    R13,R4
         BR    R8                  TAKE CHOOSEN EXIT.
NOACC    XR    R9,R9
         L     R1,24(R13)          RESTORE ENTRY REGISTER 1.
         L     R1,12(R1)
         SH    R1,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R1
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT(HASP).
         DROP  R1
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BE    CIOT                YES.
         LA    R8,FJCT
         B     GETW
CIOT     TM    CEPAUCOM,IOCSA      IS CONTROL SUPPRESS ALLOWED?
         BZ    CIOTO               NO.
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
CIOTT    CLI   0(R1),0             END OF TABLE?
         BE    CIOTO               YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    CIOTX               YES.
         LA    R1,3(R1)
         B     CIOTT
CIOTX    TM    1(R1),IOXC          NO I/O CONTROL?
         BO    SIOS                YES.
CIOTO    L     R1,JCTUSER0         GET JOB I/O REQUEST.
         LTR   R1,R1
         BZ    TTYJ                NOTHING, USE DEFAULT.
         CL    R1,MAXIO            CONTROL SUPPRESS?
         BL    SSP                 NO, USE REQUEST.
         TM    CEPAUCOM,IOCSA      IS CONTROL SUPPRESS ALLOWED?
         BZ    SMAX                NO.
SIOS     MVC   JCTUSER0,ZEROS      CLEAR I/O NUMBER.
         MVI   JCTUSER0,255        INDICATE SUPPRESS I/O CONTROL.
         B     SSP
SMAX     MVC   JCTUSER0,MAXIO      SET MAXIMUM.
         B     SSP
TTYJ     TM    CEPAIND,X'01'       SET DEFAULT.
         BO    FG
         MVC   JCTUSER0,BGVAL      BACKGROUND.
         B     SSP
FG       MVC   JCTUSER0,FGVAL      FOREGROUND.
         DROP  R4
SSP      LA    R6,1
         LA    R7,71(R3)
         TM    CEPAUCOM,SCAN
         BO    SAPT
         B     STM
CJOB     XR    R9,R9
         TM    CEPAUCOM,SCAN
         BO    SAPT
         TM    CEPAUCOM,ETIME+EREGION
         BNO   TEST
SEJOB    CLI   1(R5),C' '          SEARCH END OF JOB STATEMENT.
         BE    *+L'*+8
         BXLE  R5,R6,SEJOB
         B     ADV+L'ADV
         CLI   0(R5),C','
         BE    ADV+L'ADV
         B     TJOB                GO TO END JOB STATEMENT PROCESS.
TEST     CLC   0(L'TMP-1,R5),TMP+1
         BE    FOUND               BRANCH IF TIME PARM.
         CLC   0(L'REGP-1,R5),REGP+1
         BE    FOUND               BRANCH IF REGION PARM.
         B     ADV
SAPS     OI    CEPAUCOM,SCAN
         BXLE  R5,R6,SAPT
         B     SCERR
SAPT     CLI   0(R5),C''''
         BNE   SAPNX
         CLI   1(R5),C''''
         BNE   SAPE
         BXLE  R5,R6,*+L'*+4
         B     SCERR
         BXLE  R5,R6,SAPT
SCERR    LA    R8,ERSC
         LTR   R9,R9
         BZ    GETW
         BR    R8
SAPNX    BXLE  R5,R6,SAPT
         B     OUTT
SAPE     NI    CEPAUCOM,255-SCAN
         BXLE  R5,R6,STM
         B     SCERR
STM      CLI   0(R5),C' '
         BE    TEND
         CLI   0(R5),C''''
         BE    SAPS
         CLC   0(L'TMP,R5),TMP
         BE    FOUND+L'FOUND       BRANCH IF TIME PARM.
         CLC   0(L'REGP,R5),REGP
         BE    FOUND+L'FOUND       BRANCH IF REGION PARM.
ADV      BXLE  R5,R6,STM
OUTT     LTR   R9,R9
         BZ    EXIT
         B     EXTS
TEND     BCTR  R5,0
         CLI   0(R5),C','          END OF JOB STATEMENT?
         BE    ADV+L'ADV           NO.
         B     TJOB                GO TO END JOB STATEMENT PROCESS.
FOUND    BCTR  R5,0
         XR    R8,R8
GETW     LTR   R9,R9               AREA ALREADY OBTAINED?
         BNZ   SKPG                YES, SKIP GETMAIN.
         AIF   (NOT &SEX).O6S0
        GETMAIN    R,LV=AREAW,SP=230
         AGO   .O6S1
.O6S0   GETMAIN    R,LV=AREAW
.O6S1    LR    R9,R1
         USING CONV,R9
SKPG     LTR   R8,R8
         BNZR  R8                  TAKE CHOOSEN EXIT.
         CLC   1(L'TMP-1,R5),TMP+1
         BNE   RGN                 BRANCH IF NOT TIME (REGION).
         LA    R5,L'TMP-1(R5)
         BXLE  R5,R6,*+L'*+4
         B     EFTM
         LA    R8,FTM10
         CLI   0(R5),C'('
         BNE   FTM0
         XR    R8,R8
         BXLE  R5,R6,FTM0
         B     EFTM
FTM0     CLC   0(L'NOTM,R5),NOTM   NO TIMING REQUESTED?
         BNE   FTM1                BRANCH IF NOT SUPPRESSED.
         TM    CEPAUCOM,IOCSA      IS CONTROL SUPPRESS ALLOWED?
         BO    FTM1                YES.
         MVC   0(L'TENH,R5),TENH   SET MAXIMUM.
FTM1     CLI   0(R5),C'0'
         BNL   FTM3
         CLI   0(R5),C','
         BNE   FTM2
         LTR   R8,R8
         BNZ   FTM11               'TIME=,' EQUAL NO TIME PARAMETER.
         XR    R0,R0
         B     FTM7
FTM2     LTR   R8,R8
         BZ    EFTM
         CLI   0(R5),C' '
         BE    TJOB                'TIME= ' EQUAL NO TIME PARAMETER.
         B     EFTM
FTM3     LA    R0,4                EXTRACT MINUTES.
         L     R1,MKZ
FTM4     SLL   R1,8
         IC    R1,0(R5)
         BXLE  R5,R6,FTM5
         LTR   R8,R8
         BZ    EFTM
         B     FTM6+L'FTM6
FTM5     CLI   0(R5),C','
         BE    FTM6+L'FTM6
         LTR   R8,R8
         BZ    *+L'*+8
         CLI   0(R5),C' '
         B     *+L'*+4
         CLI   0(R5),C')'
         BE    FTM6
         BCT   R0,FTM4
         B     EFTM
FTM6     LA    R8,FTM10
         ST    R1,WORK
         BAL   R14,CVBIN
         LTR   R0,R0
         BZ    *+L'*+4
         MH    R0,MSEC
         LTR   R8,R8
         BNZR  R8                  TAKE CHOOSEN EXIT.
FTM7     BXLE  R5,R6,*+L'*+4
         B     EFTM
         LA    R8,2                EXTRACT SECONDS.
         L     R1,MKZ
FTM8     SLL   R1,8
         IC    R1,0(R5)
         BXLE  R5,R6,*+L'*+4
         B     EFTM
         CLI   0(R5),C')'
         BE    FTM9
         BCT   R8,FTM8
         B     EFTM
FTM9     ST    R1,WORK
         LR    R1,R0
         BAL   R14,CVBIN
         CH    R0,MSEC
         BNL   EFTM
         AR    R0,R1
FTM10    LTR   R0,R0
         BZ    EFTM
         L     R1,24(R13)          RESTORE ENTRY REGISTER 1.
         L     R1,12(R1)
         SH    R1,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R1
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT(HASP).
         DROP  R1
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BNE   FJCT                NO.
         ST    R0,JCTETIME         STORE TIME (IN SEC.).
         DROP  R4
         OI    CEPAUCOM,ETIME
FTM11    TM    CEPAUCOM,EREGION
         BZ    STM
         BCTR  R5,0
         B     SEJOB
CVBIN    MVC   CONV(4),MKZ         CONVERT BINARY ROUTINE.
         MVZ   CONV(4),WORK
         XC    CONV(4),MKZ
         BNZ   EFTM
         PACK  CONV,WORK
         NI    CONV+7,X'FC'
         CVB   R0,CONV
         BR    R14
RGN      LA    R5,L'REGP-1(R5)     EXTRACT REGION PARAMETER VALUE.
         BXLE  R5,R6,*+L'*+4
         B     ERGN
         LM    R0,R1,MKZ
         LA    R4,LMKZL
RGN1     CLI   0(R5),C'0'
         BL    ERGN
         CLI   0(R5),C'9'
         BH    ERGN
         SLDL  R0,8
         IC    R1,0(R5)
         BXLE  R5,R6,*+L'*+4
         B     ERGN
         CLI   0(R5),C'K'
         BE    RGN2
         CLI   0(R5),C'M'
         BE    RGN2
         BCT   R4,RGN1
         B     ERGN
RGN2     STM   R0,R1,WORK
         PACK  CONV,WORK(LMKZL)
         NI    CONV+7,X'FC'
         CVB   R0,CONV
         LTR   R0,R0
         BZ    RGN4                0K OR 0M MEANS MAX.
         CLI   0(R5),C'K'
         BE    RGN3
         CL    R0,MAXREG
         BH    RGN4
         MH    R0,ONEMEG
RGN3     CL    R0,MAXREG
         BNH   *+L'*+L'RGN4
RGN4     L     R0,MAXREG
         ST    R0,WORK
         MVC   CEPAUCOM+1(3),WORK+1
         OI    CEPAUCOM,EREGION
         TM    CEPAUCOM,ETIME
         BZ    STM
         BCTR  R5,0
         B     SEJOB
         SPACE 1
FJCT     MVC   MSG+L'LOGERR(L'JCTERR),JCTERR
         LA    R4,L'JCTERR
         B     SEND
ERSC     MVC   MSG+L'LOGERR(L'SCNERR),SCNERR
         LA    R4,L'SCNERR
         B     SEND
ERGN     MVC   MSG+L'LOGERR(L'RGNERR),RGNERR
         LA    R4,L'RGNERR
         B     SEND
EFTM     MVC   MSG+L'LOGERR(L'ETMERR),ETMERR
         LA    R4,L'ETMERR
SEND     LA    R8,CANCEL           PROCESSING TO BE CANCELED.
         LA    R0,L'WCTL+L'LOGERR(R4)
         SLL   R0,16
         ST    R0,WCTL
         MVC   MSG(L'LOGERR),LOGERR
         MVC   MSG+12(L'CEPAJOBN),CEPAJOBN   SET JOBNAME.
         AIF   (NOT &SEX).O7S0
        WTO    MF=(E,WCTL)
         AGO   .O7S1
.O7S0    MVC   TXWTO,MSG
         BAL   R14,PRWTO
.O7S1    B     EXTS+L'EXTS
EXTS     LA    R8,EXIT
         LR    R1,R9
         DROP  R9
         AIF   (NOT &SEX).O8S0
        FREEMAIN   R,LV=AREAW,A=(1),SP=230
         AGO   .O8S1
.O8S0   FREEMAIN   R,LV=AREAW,A=(1)
.O8S1    BR    R8                  TAKE CHOOSEN EXIT.
         EJECT
* JOB STATEMENT PROCESS TERMINATION :
* -----------------------------------
*
*        1. SET THE JOB SCHEDULING PRIORITY FOR EXECUTION SELECTION.
*
*        2. SET THE JOB EXECUTION CLASS.
*
*        3. PREPARE THE USER COMMUNICATION FIELD (COMMON EXIT PARAMETER
*           AREA +32) WITH THE JOB TOTAL I/O'S NUMBER (LAST TWO BYTES)
*           EXPRESSED 1/1000 I/O (BINARY) OR ZERO IF THE I/O CONTROL
*           MUST BE INACTIVE.
*           THIS IS THE WAY VALUE IS PASSED TO 'IEFUJI' EXIT.
*
*        4. SET THE JOB PERFORMANCE GROUP NUMBER (1 TO 255 : THREE
*           DIGITS OF THE 'PERFORM=' KEYWORD BUILDED BY THE HASP JCL
*           CONVERSION PROCESSOR) IN THE FIRST BYTE OF THE 'JCTUSER0'
*           FIELD.
*           N.B. - 8 IS RESERVED TO OPERATORS HOLDING JOBS EXECUTION.
         SPACE 1
* FINAL USER-COMMUNICATION FIELD USE DESCRIPTION :
* ------------------------------------------------
*
* CEPAUCOM +0-1 - NOT USED.
*          +2-3 - JOB I/O REQUEST IN 1/1000 :
*                 0 (X'0000') = NO I/O NUMBER LIMIT,
*                 2 HOURS IN SEC. (X'1C20') = MAXIMUM.
         EJECT
TJOB     XR    R8,R8
         L     R1,24(R13)          RESTORE ENTRY REGISTER 1.
         L     R5,12(R1)
         SH    R5,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R5
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT(HASP).
         DROP  R5
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BNE   NJCT                NO.
         TM    CEPAIND,X'01'       IS IT A FOREGROUND JOB?
         BO    SIOC                YES.
         TM    CEPAUCOM,IOCSA      IS IT AUTHORIZED?
         BZ    CSP                 NO.
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
SPR      CLI   0(R1),0             END OF TABLE?
         BE    CSP                 YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    SPRT                YES.
         LA    R1,3(R1)
         B     SPR                 NO.
SPRT     TM    1(R1),PYSL+IOXC     PRIORITY SELECT?
         BZ    CSP                 NO.
         MVI   JCTPRIO,12*16
         B     SIOC
CSP      LTR   R9,R9               AREA ALREADY OBTAINED?
         BNZ   SJOB                YES, SKIP GETMAIN.
         AIF   (NOT &SEX).O9S0
        GETMAIN    R,LV=AREAW,SP=230
         AGO   .O9S1
.O9S0   GETMAIN    R,LV=AREAW
.O9S1    LR    R9,R1
         USING CONV,R9
SJOB     XR    R0,R0               COMPUTE SCHEDULING PRIORITY.
         ST    R0,CONV+4
         L     R1,MAXIO            DEFAULT.
         CLI   JCTUSER0,255        I/O CONTROL SUPPRESS REQUESTED?
         BE    *+L'*+4             YES.
         L     R1,JCTUSER0         GET I/O NUMBER REQUEST.
         ST    R1,CONV
         MH    R1,THSND+2
         A     R1,JCTESTLN         ADD EST. OUTPUT (LINES + CARDS).
         A     R1,JCTESTPU
         PRINT OFF
** /* D */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
.O9S2    LTR   R1,R1
         BZ    *+L'*+8
         M     R0,PCOEFF           COMPUTE (N * (I/O + OUTPUT))/1000.
         D     R0,THSND
         AIF   (&SCA OR &STS).O9S3
         L     R0,DEFTIME          DEFAULT.
         TM    CEPAUCOM,ETIME      JOB TIME SUPPLIED?
         BZ    *+L'*+4             NO.
         L     R0,JCTETIME         GET EST. TIME IN SECONDS.
         ST    R0,CONV+4
         AGO   .O9S4
.O9S3    L     R0,CPUTM            GET TIME IN SECONDS.
.O9S4    AR    R0,R1               SET CPU + (N * (I/O+OUTPUT))/1000.
         L     R1,SCHPRT           COMPUTE SCHEDULING PRIORITY.
         L     R5,SCHPRN
CSP1     CL    R0,0(R1)
         BNH   *+L'*+8
         LA    R1,4(R1)
         BCT   R5,CSP1
         AIF   (&SCA OR &STS).O9S5
         XR    R0,R0
         IC    R0,CEPAUCOM         APPLY PRIORITY INCREMENT IF ANY.
         LA    R1,255-IOCSA-ETIME-EREGION-SCAN
         NR    R0,R1               CLEAR OUT FLAGS.
         LTR   R0,R0
         BZ    CSP2
         SH    R0,FOUR
         AR    R5,R0
         LTR   R5,R5
         BNM   CSP2
         XR    R5,R5
CSP2     SLL   R5,4
         STC   R5,JCTPRIO          SET SCHEDULING PRIORITY.
         L     R1,CONV             COMPUTE I/O INDEX (CATEGORY).
         AGO   .O9S6
.O9S5    STC   R5,PRIO             SET SCHEDULING PRIORITY.
         OI    PRIO,C'0'
         L     R1,NUMIO            COMPUTE I/O INDEX (CATEGORY).
         CVD   R1,CONV
         ED    IOX,CONV+4
.O9S6    L     R0,IOCN
         L     R5,IOCT
CCL1     CL    R1,0(R5)
         BNL   CCL2
         SH    R5,FOUR
         BCT   R0,CCL1
CCL2     L     R5,SCHCLT           SELECT A STRING OF CLASSES.
         AIF   (&SCA).O9S8
         AIF   (&STS).O9S7A
         TM    JCTJBOPT,JCTSETUP   TEST FOR SETUP CARD?
         AGO   .O9S7B
.O9S7A   TM    FLRQ,SWSU           TEST SETUP COMPUTATIONS?
.O9S7B   BZ    *+L'*+4             NO.
         L     R5,SCHCLTS          USE SETUP JOB CLASSES TABLE.
.O9S8    LTR   R0,R0
         BZ    CCL3
         A     R5,SCHCLTL
         BCT   R0,*-4
CCL3     L     R0,MEMCN
         L     R1,MEMCT
         AIF   (&SCA OR &STS).O9S9
         MVC   WORK,ZEROS
         TM    CEPAUCOM,EREGION    JOB REGION SUPPLIED?
         BO    CCL4                YES.
         MVC   WORK+L'WORK-L'DEFREG(L'DEFREG),DEFREG
         B     CCL5
CCL4     MVC   WORK+1(3),CEPAUCOM+1
CCL5     CLC   WORK(4),0(R1)       COMPUTE MEMORY CATEGORY.
         AGO   .O9S10
.O9S9    ANOP
CCL5     CLC   REGSZ(L'REGSZ),0(R1) COMPUTE MEMORY CATEGORY.
.O9S10   BNH   CCL6
         LA    R1,4(R1)
         LA    R5,1(R5)
         BCT   R0,CCL5
         AIF   (&SCA OR &STS).O9S11
CCL6     L     R1,CONV+4           CPU.
         AGO   .O9S12
.O9S11   ANOP
CCL6     L     R1,CPUTM            CPU.
.O9S12   AIF   (&SEX OR &STE).O9S13
         CVD   R1,CONV
         ED    WGV,CONV+4
.O9S13   XR    R6,R6               COMPUTE JOB WEIGHT.
         L     R0,JWGHN
         L     R7,JWGHT
CWG1     CL    R1,0(R7)
         BL    CWG2
         LA    R6,1(R6)
         LA    R7,4(R7)
         BCT   R0,CWG1
CWG2     LTR   R7,R6
         BZ    *+L'*+8
         A     R5,SCHCLTLG
         BCT   R6,*-4
         AIF   (&SCA OR &STS).O9S14
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
CWGSC    CLI   0(R1),0             END OF TABLE?
         BE    CWGST               YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    CWGSJ               YES.
         LA    R1,3(R1)
         B     CWGSC
CWGSJ    TM    1(R1),XCMN          CLASS RETAIN?
         BO    CWGSK               YES, DON'T CHANGE CLASS.
CWGST    MVC   JCTJCLAS(1),0(R5)   SET NEW JOB CLASS.
CWGSK    MVC   JCTCLASS(1),JCTJCLAS     SET IT FOR SMF.
         MVC   CEPAJC(L'CEPAJC),JCTJCLAS
         TM    JCTJBOPT,JCTSETUP   TEST FOR SETUP CARD?
         BZ    STPNC               NO.
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
STPSC    CLI   0(R1),0             END OF TABLE?
         BE    NSTP                YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    STPSJ               YES.
         LA    R1,3(R1)
         B     STPSC
STPSJ    TM    1(R1),XSTF+XCMN     SETUP ACCEPT?
         BZ    NSTP                NO.
STPNC    EQU   *
         AGO   .O9S15
.O9S14   MVC   CLV(1),0(R5)        SET JOB CLASS.
.O9S15   L     R5,JPGNT            SELECT CLASS TABLE.
CWG3     CLI   0(R5),0
         BE    CWG4+L'CWG4
         AIF   (&SCA OR &STS).O9S16
         CLC   JCTJCLAS(1),0(R5)
         AGO   .O9S17
.O9S16   CLC   CLV(1),0(R5)
.O9S17   BE    CWG4
         A     R5,JPGNTL
         B     CWG3
CWG4     AR    R5,R7
         AIF   (&SEX OR &STE).O9S99
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* E */
         PRINT ON
         XR    R1,R1
         IC    R1,1(R5)            SET PERFORMANCE GROUP NUMBER.
         CVD   R1,CONV
         ED    PGV,CONV+6
         SPACE 1
         AIF   (&STS).O9S20
        $XRET  CC=0
         AGO   .O9S21
.O9S20  $XRET  CC=0,LV=WRKL,TYPE=RENT
.O9S21   EJECT
*              CONSTANTS.
         SPACE 1
         AIF   (&STS).O9S25
CONV     DC    D'0'
REGSZ    DC    F'0'
NUMIO    DC    F'0'
CPUTM    DC    F'0'
.O9S25   ANOP
TEN      DC    F'10'
MSEC     DC    F'60'
HUNDR    DC    F'100'
THSND    DC    F'1000'
FOUR     DC    H'4'
TMZ      DC    CL4'   0'
         SPACE 1
LDATA    DC    0CL132' ',CL5' '
         DC    XL8'4020202020202120',CL2' '
         DC    XL8'4020202020202120',CL3' '
         DC    XL4'40202120',C','
         DC    CL2' ',CL10' '
         DC    CL1' ',CL2' '
         DC    XL8'4020202020202120',CL2' '
         DC    XL8'4020202020202120',CL3' '
         DC    CL1' ',CL4' '
         DC    XL4'40202120'
         SPACE 1
FILLER   EQU   0+L'LDATA-(*-LDATA)
         DC    (FILLER)C' '
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* E N D */
         PRINT ON
         AGO   .O99S99
.O9S99   PRINT OFF
** /* E */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
         IC    R0,1(R5)            GET PERFORMANCE GROUP NUMBER.
         LA    R8,EXIT
         B     SIOC+L'SIOC
SIOC     XR    R0,R0
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
PGFT     CLI   0(R1),0             END OF TABLE?
         BE    IOCSR               YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    PGFS                YES.
         LA    R1,3(R1)
         B     PGFT
PGFS     CLI   2(R1),0             ANY FORCE TO APPLY?
         BE    IOCSR               NO.
         IC    R0,2(R1)            GET PERFORMANCE GROUP NUMBER.
IOCSR    CLI   JCTUSER0,255        I/O CONTROL SUPPRESS REQUESTED?
         BE    SIOR                YES.
         MVC   CEPAUCOM(2),ZEROS
         MVC   CEPAUCOM+2(2),JCTUSER0+2 SET I/O REQUEST (IN SEC.).
         B     TSEX
SIOR     MVC   CEPAUCOM,ZEROS      SUPPRESS I/O CONTROL.
TSEX     STC   R0,JCTUSER0         SET PERFORMANCE GROUP NUMBER.
         LTR   R8,R8
         BNZ   RELAR
         B     EXIT
NSTP     MVC   MSG+L'LOGERR(L'NSTERR),NSTERR
         MVC   MSG+L'LOGERR+L'NSTERR-2(1),JCTJCLAS
         LA    R1,L'NSTERR
         B     NMSGERR
         DROP  R4
NJCT     LTR   R9,R9               AREA ALREADY OBTAINED?
         BNZ   SJCT                YES, SKIP GETMAIN.
         AIF   (NOT &SEX).O10S0
        GETMAIN    R,LV=AREAW,SP=230
         AGO   .O10S1
.O10S0  GETMAIN    R,LV=AREAW
.O10S1   LR    R9,R1
         USING CONV,R9
SJCT     MVC   MSG+L'LOGERR(L'NJCERR),NJCERR
         LA    R1,L'NJCERR
NMSGERR  MVC   MSG(L'LOGERR),LOGERR
         MVC   MSG+12(L'CEPAJOBN),CEPAJOBN   SET JOBNAME.
         LA    R0,L'WCTL+L'LOGERR(R1)
         SLL   R0,16
         ST    R0,WCTL
         AIF   (NOT &SEX).O11S0
        WTO    MF=(E,WCTL)
         AGO   .O11S1
.O11S0   MVC   TXWTO,MSG
         BAL   R14,PRWTO
.O11S1   ANOP
RELAR    LR    R1,R9
         DROP  R9
         AIF   (NOT &SEX).O12S0
        FREEMAIN   R,LV=AREAW,A=(1),SP=230
         AGO   .O12S1
.O12S0  FREEMAIN   R,LV=AREAW,A=(1)
.O12S1   LTR   R8,R8
         BNZR  R8                  TAKE CHOOSEN EXIT.
         EJECT
* RETURN :
* --------
*
*        SET THE RETURN CODE IN REGISTER 15, AS FOLLOWS :
*
*        0 - INDICATES JOB PROCESSING SHOULD BE CONTINUED.
*        4 - INDICATES JOB PROCESSING SHOULD BE CANCELED.
         SPACE 1
CANCEL   MVC   CEPAUCOM,ZEROS      CLEAR ALL.
         MVC   CEPAUSER(L'CEPAUSER),BLKS
         LA    R15,4               RETURN CODE = CANCEL.
         B     EXIT+L'EXIT
         SPACE 1
EXIT     XR    R15,R15             RETURN CODE = OK.
         L     R14,12(R13)         RESTORE REGISTER 14.
         LM    R0,R12,20(R13)      RESTORE THE OTHER REGISTERS.
         BR    R14                 RETURN.
         EJECT
* EXEC, DD AND PROC STATEMENTS PROCESS :
* --------------------------------------
*
*        SCAN IT FOR SPECIFIC DATA-SET NAMES USE, AND ASSIGN FIXED
*        CLASS AND PERFORMANCE GROUP NUMBER TO THE JOB IF ANY MATCH,
*        UNLESS CLASS OR JOB NAME EXEMPTION.
         SPACE 1
OTHER    CLI   0(R4),2             EXEC STATEMENT?
         BE    OTT                 YES.
         CLI   0(R4),4             DD STATEMENT?
         BE    OTT                 YES.
         CLI   0(R4),8             PROC STATEMENT?
         BNE   CJSSCAN             NO, LOOK FURTHER.              -CJS-
         SPACE 1
OTT      TM    CEPAIND,X'01'       IS IT A FOREGROUND JOB?
         BO    EXIT                YES.
         SH    R5,ADNEL            CONVERTER/INTERPRETER ENTRY LIST.
         USING NELDSECT,R5
         TM    NELOPSWT,NELSMF     STARTED TASK (INITIATOR,...)?
         BZ    EXIT                YES.
         L     R4,NELJMR           JOB MANAGEMENT RECORD IN JCT (HASP).
         DROP  R5
         SH    R4,ADJCT            HASP JOB CONTROL TABLE.
         USING JCTSTART,R4
         CLC   JCTID,CKJCT         REALLY THE JCT?
         BE    OTSET               YES.
         XR    R8,R8               NO, CANCEL AFTER MESSAGE.
         LR    R9,R8
         B     NJCT
         SPACE 1
OTSET    L     R12,UJVTADDR
         L     R1,SYSEXC           CLASS/EXEMPTIONS/PG TABLE.
OTSRCT   CLI   0(R1),0             END OF TABLE?
         BE    OTSRCH              YES.
         CLC   JCTJCLAS(1),0(R1)   THIS CLASS?
         BE    OTSRCM              YES.
         LA    R1,3(R1)
         B     OTSRCT
OTSRCM   TM    1(R1),XCMN+PYSL+IOXC     CLASS RETAIN?
         BNZ   EXIT                YES.
OTSRCH   L     R8,SDSNTB           SPECIFIC DSNAMES TABLE.
         LA    R6,1                SET SCAN STEP VALUE.
OTNXN    CLI   0(R8),255           END OF TABLE?
         BE    EXIT                YES.
         CLC   JCTJCLAS(1),1(R8)   CLASS ALREADY ASSIGNED?
         BE    EXIT                YES.
         XR    R15,R15
         IC    R15,0(R8)           GET DATA-SET NAME LENGTH.
         XR    R0,R0
         IC    R0,3(R8)            GET NUMBER OF EXEMPTED JOB-NAMES.
         LTR   R9,R0
         BZ    OTNJN               NO JOB(S) EXEMPTED.
         SLL   R0,3                COMPUTE JOB-NAMES LENGTH.
         LA    R14,4(R8)           START OF JOB-NAMES.
OTJNT    CLC   CEPAJOBN(8),0(R14)  IS JOB EXEMPTED?
         BE    OTNXT               YES.
         LA    R14,8(R14)          NEXT ONE.
         BCT   R9,OTJNT            LOOP IF MORE.
OTNJN    LA    R14,2(R3)           SKIP // COL. 1-2.
         LA    R7,71(R3)           SET SCAN FINAL VALUE.
         SR    R7,R15              COMPUTE END OF SCAN COMPARE.
         LA    R9,4(R8)            COMPUTE DATA-SET NAME POINTER.
         AR    R9,R0
OTNMF    CLI   0(R14),C' '         SKIP NAME FIELD IF ANY.
         BE    OTST
         BXLE  R14,R6,OTNMF
         B     OTNXT
OTST     BXLE  R14,R6,OTTST        SEARCH START OF TYPE IF ANY OR TEXT.
         B     OTNXT
OTTST    CLI   0(R14),C' '
         BE    OTST
         CLC   0(L'EXECP,R14),EXECP     EXEC STATEMENT?
         BE    OTEXEC              YES.
         CLC   0(L'DDP,R14),DDP         DD STATEMENT?
         BE    OTDD                YES.
         CLC   0(L'PROCP,R14),PROCP     PROC STATEMENT?
         BNE   OTTDL               NO.
         LA    R14,L'PROCP(R14)    YES.
         B     OTSTX
OTEXEC   LA    R14,L'EXECP(R14)
         B     OTSTX
OTDD     LA    R14,L'DDP(R14)
OTSTX    CLI   0(R14),C' '         SEARCH START OF TEXT.
         BNE   OTTDL
         BXLE  R14,R6,OTSTX
         B     OTNXT
OTTDL    EX    R15,OTCLC           LOOK IF MATCH HERE?
         BNE   OTCNT               NO.
         LA    R1,1(R14,R15)       CORRECT DELIMITER?
         CLI   0(R1),C','
         BE    OTFND               YES.
         CLI   0(R1),C' '
         BE    OTFND               YES.
         CLI   0(R1),C''''
         BE    OTFND               YES.
         CLI   0(R1),C'('
         BE    OTFND               YES.
OTCNT    BXLE  R14,R6,OTTDL
OTNXT    LA    R8,5(R8,R15)        BUMP TABLE.
         AR    R8,R0
         B     OTNXN
OTCLC    CLC   0(*-*,R14),0(R9)
OTFND    MVC   JCTJCLAS(1),1(R8)   FORCE NEW JOB CLASS.
         MVC   JCTCLASS(1),JCTJCLAS     SET IT FOR SMF.
         MVC   CEPAJC(L'CEPAJC),JCTJCLAS
         MVC   JCTUSER0(1),2(R8)   FORCE NEW PERF. GROUP NUMBER.
         DROP  R4
         B     EXIT
         EJECT                                                    -CJS-
* //* COMMENTS STATEMENT PROCESS :                                -CJS-
* --------------------------------                                -CJS-
*                                                                 -CJS-
*        THESE STATEMENTS ARE SCANNED ONLY TO OBTAIN THE NET NAME -CJS-
*        FROM AN EVENTUAL CJS //*NET CONTROL CARD, AND STORE IT   -CJS-
*        IN THE WORDS JCTUSER1 AND JCTUSER2 FOR FURTHER USE BY    -CJS-
*        THE QSP TSO-COMMAND.                                     -CJS-
         SPACE 1                                                  -CJS-
CJSSCAN  CLI   0(R4),128           COMMENT STATEMENT?             -CJS-
         BNE   EXIT                NO.                            -CJS-
         SPACE 1                                                  -CJS-
         LR    R4,R5                                              -CJS-
         SH    R4,ADNEL            CONV./INTERP. ENTRY LIST.      -CJS-
         USING NELDSECT,R4                                        -CJS-
         TM    NELOPSWT,NELSMF     STARTED TASK (INITIATOR,...)?  -CJS-
         BZ    EXIT                YES.                           -CJS-
         L     R8,NELJMR           JOB MANAGEMENT REC. IN JCT.    -CJS-
         DROP  R4                                                 -CJS-
         SH    R8,ADJCT            HASP JOB CONTROL TABLE.        -CJS-
         USING JCTSTART,R8                                        -CJS-
         CLC   JCTID,CKJCT         REALLY JCT?                    -CJS-
         BNE   EXIT                NO.                            -CJS-
         SPACE 1                                                  -CJS-
         LA    R6,1                SET SCAN REGISTERS VALUE.      -CJS-
         LA    R7,71(R3)                                          -CJS-
         CLC   3(L'CJSSRC,R3),CJSSRC    CJS NET CONTROL CARD?     -CJS-
         BE    CJSNETC             YES.                           -CJS-
         CLI   3(R3),C' '          MAY BE A CONTINUATION?         -CJS-
         BE    EXIT                NO, GO BACK.                   -CJS-
         LA    R5,3(R3)                                           -CJS-
         B     CJSSC0                                             -CJS-
CJSNETC  LA    R5,L'CJSSRC+3(R3)                                  -CJS-
         CLI   0(R5),C' '                                         -CJS-
         BNE   CJSSC0                                             -CJS-
         BXLE  R5,R6,*-8                                          -CJS-
         B     EXIT                                               -CJS-
CJSSC0   CLC   0(L'CJSN,R5),CJSN   IS THAT NETID KEYWORD?         -CJS-
         BE    CJSSC1              YES.                           -CJS-
         CLC   0(L'CJSI,R5),CJSI   IS THAT ID KEYWORD?            -CJS-
         BE    CJSSC2              YES.                           -CJS-
CJSLOOP  CLI   0(R5),C' '                                         -CJS-
         BE    EXIT                                               -CJS-
         BXLE  R5,R6,CJSSC0                                       -CJS-
         B     EXIT                                               -CJS-
CJSSC1   LA    R5,L'CJSN(R5)                                      -CJS-
         B     CJSSC3                                             -CJS-
CJSSC2   LA    R5,L'CJSI(R5)                                      -CJS-
CJSSC3   CLR   R5,R7                                              -CJS-
         BH    EXIT                OUT OF RANGE, ERROR.           -CJS-
         LR    R3,R5                                              -CJS-
         LA    R0,9                                               -CJS-
CJSSC4   CLI   0(R5),C' '                                         -CJS-
         BE    CJSSC5                                             -CJS-
         CLI   0(R5),C','                                         -CJS-
         BE    CJSSC5                                             -CJS-
         BCT   R0,*+L'*+4                                         -CJS-
         B     EXIT                NET NAME IS TOO LONG, ERROR.   -CJS-
         BXLE  R5,R6,CJSSC4                                       -CJS-
CJSSC5   LR    R1,R5                                              -CJS-
         SR    R1,R3                                              -CJS-
         BNP   EXIT                NO NET NAME, ERROR.            -CJS-
         MVC   JCTUSER1(8),BLKS                                   -CJS-
         BCTR  R1,0                                               -CJS-
         EX    R1,CJSSCMV          SET NET NAME IN JCT.           -CJS-
         B     CJSLOOP             CONTINUE.                      -CJS-
CJSSCMV  MVC   JCTUSER1(*-*),0(R3)                                -CJS-
         DROP  R8                                                 -CJS-
         AIF   (NOT &STE).O13S0
         EJECT
*        SEND WTO MESSAGE TO OUTPUT PRINT.
         SPACE 1
PRWTO    STM   R13,R1,SVREGS
         ST    R13,SVAREA+4        LINK SAVE AREAS.
         LA    R13,SVAREA
         SRL   R0,16
         STC   R0,LGWTO
        $PRINT SDWTO
         LM    R13,R1,SVREGS
         BR    R14                 RETURN.
         SPACE 1
        LTORG
         SPACE 1
SVAREA   DC    18F'0'
SVREGS   DC    5F'0'
LGWTO    DC    XL1'0'
SDWTO    DC    CL4' '
TXWTO    DC    CL72' '
.O13S0   EJECT
*              CONSTANTS.
         SPACE 1
         AIF   (NOT &SEX).O13S1
UJVTADDR DC    V(UJVTABLE)
         AGO   .O13S2
.O13S1   CNOP  0,8
         ENTRY UJVTADDR
UJVTADDR DC    A(*-*)
.O13S2   ANOP
DSCBSK  CAMLST SEARCH,*-*,*-*,*-*
DSCBSKL  EQU   *-DSCBSK
         SPACE 1
        READ   DECBSK,DI,MF=L
DECBSKL  EQU   *-DECBSK
         SPACE 1
JFCBSR  RDJFCB (*-*),MF=L
OPENSR  OPEN   (*-*,(INPUT)),TYPE=J,MF=L
CLOSESR CLOSE  (*-*),MF=L
         SPACE 1
EXTBLK  EXTRACT  *-*,'S',FIELDS=(TIOT),MF=L
EXTBLKL  EQU   *-EXTBLK
         EJECT
DCBSK   DCB    DSORG=DA,MACRF=(RIC),BFALN=D,BFTEK=S,KEYLEN=0,LIMCT=1,  1
               OPTCD=R,SYNAD=RERR,DDNAME=SYSACC
DCBSKL   EQU   *-DCBSK
         SPACE 2
ZEROS    DC    F'0'
TEN      DC    F'10'
HUNDR    DC    F'100'
THSND    DC    F'1000'
BGVAL    DC    F'1'                BACKGROUND I/O DEFAULT VALUE.
FGVAL    DC    F'100'              FOREGROUND I/O DEFAULT VALUE.
YB99     DC    F'99999'            MAX. YYDDD.
YB1900   DC    F'1900000'
YP1900   DC    PL4'+1900000'
MAXIO    DC    A(2*60*60)          MAX. I/O = 2 HOURS IN SEC.
MKZ      DC    0F'0',CL8'00000000'
LMKZL    EQU   *-MKZ
ADNEL    DC    0H'0',AL2(NELPARMO-NELLIST)
ADJCT    DC    0H'0',AL2(JCTJMRST-JCTSTART)  = JCTJMRJN
RELPOS   DC    0H'0',AL2(NAUTNO-1)
FOUR     DC    H'4'
MSEC     DC    H'60'
ONEMEG   DC    H'1024'             1M = 1024K
MAXREG   DC    A(2*1024*1024)      2G = 2*1024M
         SPACE 2
LOGERR   DC    CL24'--- IEFUJV (        ) - '
         SPACE 1
* NOTE - THE FOLLOWING MESSAGES TEXT LENGTH MUST NOT EXCEED :
*              L'MSG - L'LOGERR
         SPACE 1
JOBERR   DC    C'UNEXPECTED JOB CARD ERROR.'
SCNERR   DC    C'JOB CARD SCAN ERROR.'
PRGERR   DC    C'UNAUTHORIZED PROGRAMMER.'
ANAERR   DC    C'AUTHORIZATION NOT YET ACTIVE.'
ANEERR   DC    C'AUTHORIZATION EXPIRED.'
INAERR   DC    C'UNDEFINED AUTHORIZATION.'
ACCERR   DC    C'INVALID ACCOUNTING DATA FIELD.'
CLSERR   DC    C'SPECIAL ACCOUNTING/CLASS MANDATORY.'
TIOERR   DC    C'TIOT NOT FOUND AT JOB CARD.'
CTLERR   DC    C'ACCOUNT CONTROL OFF (NO DD-CARD).'
DUMERR   DC    C'SYSTEM UNAVAILABLE TO USERS.'
MSGERR   DC    C'ACCOUNTING DATA-SET ERROR    .'
ETMERR   DC    C'JOB CARD TIME PARM. INVALID CODING.'
RGNERR   DC    C'JOB CARD REGION PARM. INVALID CODING.'
JCTERR   DC    C'JOB CARD NEL/JCT NOT FOUND.'
NJCERR   DC    C'ALL JCL CONV. NEL/JCT NOT FOUND.'
NSTERR   DC    C'SETUP NOT ALLOWED WITH CLASS 0.'
MSGRCV   DC    C'RECOVERY FORCED (UJVTABLE).'
         SPACE 1
BLKS     DC    CL10' '
JOBP     DC    C'JOB '
EXECP    DC    C'EXEC '
DDP      DC    C'DD '
PROCP    DC    C'PROC '
CKJCT    DC    CL4'JCT'
TMP      DC    C',TIME='
REGP     DC    C',REGION='
NOTM     DC    CL4'1440'
TENH     DC    CL4'0600'
NSYSBOX  DC    CL4'0022'           SYSTEM GROUP BOX NUMBER.
CJSSRC   DC    C'NET '                                            -CJS-
CJSN     DC    C'NETID='                                          -CJS-
CJSI     DC    C'ID='                                             -CJS-
         PRINT OFF
** ===>===>===>===>===>===>===>===>===>===>===>===>===>===> /* E N D */
         PRINT ON
         AGO   .O99S99
.O99S0   PRINT OFF
** /* DUMMY */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
        $DEFREG
*        IEFUJV - DUMMY EXIT.
         SPACE 1
         USING *,R15               ADDRESSABILITY.
         B     START
         DROP  R15                 KILL ADDRESSABILITY.
         SPACE 1
         DC    CL8'IEFUJV',C'-'    IDENTIFIER.
         DC    CL8'&SYSDATE',C'('  ASSEMBLY DATE.
         DC    CL5'&SYSTIME',C')'  ASSEMBLY TIME.
         SPACE 1
START    XR    R15,R15             SET C.C. TO ZERO.
         BR    R14                 RETURN.
         PRINT OFF
** /* E N D */ <===<===<===<===<===<===<===<===<===<===<===<===<===<===
         PRINT ON
.O99S99  SPACE 2
         END
