X008     TITLE 'JES2 - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* MODULE NAME : EXIT008                                               *
* DESCRIPTIVE NAME : JES2 EXIT 8 (HASPSSSM)                           *
*                    JCT READ/WRITE (USER)                            *
*                    (MAX COND CODE/ABEND CODE SUPPORT)               *
* PURPOSE :     THIS EXIT STORES EITHER THE MAXIMUM CONDITION CODE    *
*               OF ALL THE STEPS IN A JOB OR THE ABEND CODE OF THE    *
*               JOB IN A JCT USER FIELD (NAME IS 'JCTUSER3').     -EU-*
*               THIS INFORMATION WILL BE USED LATER IN EXIT016    -EU-*
*               TO BUILD THE TSO NOTIFY.                          -EU-*
* INVOCATION POINT : EXIT008                                          *
* ENTRY POINT : UEXIT008                                              *
* ENVIRONMENT : USER ADDRESS SPACE                                    *
*               EXIT MUST RESIDE IN COMMON STORAGE                -EU-*
* REGISTERS AT ENTRY :                                                *
*               R0 : A CODE PASSED BY JES2                            *
*                    =0, INDICATES THAT THE JCT HAS BEEN READ FROM    *
*                        SPOOL                                        *
*                    =4, INDICATES THAT THE JCT WILL BE WRITTEN TO    *
*                        SPOOL                                        *
*               R1 : ADDRESS OF THE JCT                               *
*               R2-R10 : N/A                                          *
*               R11 : ADDRESS OF THE SVT                              *
*               R12 : N/A                                             *
*               R13 : ADDRESS OF AN OS-STYLE SAVE AREA                *
*               R14 : RETURN ADDRESS                                  *
*               R15 : ENTRY ADDRESS                                   *
* REGISTERS ON RETURN :                                               *
*               R0-R1 : N/A                                           *
*               R15 : A RETURN CODE :                                 *
*                     =0, CONTINUE NORMAL PROCESSING                  *
*                     =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH    *
*                         NORMAL PROCESSING                           *
* LINKAGE EDITOR INFO :                                               *
*               ATTRIBUTES : REENTRANT, REUSEABLE, REFRESHABLE        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* AUTHOR :      VIC COZZOLI                                           *
*               WELLS FARGO BANK, N.A. (WFB)                          *
*               525 MARKET STREET, A.U. 8513                          *
*               SAN FRANCISCO, CALIFORNIA 94163                       *
*               PHONE : (415) 396-6376                                *
*                  DATE WRITTEN : NOVEMBER 1983                       *
*                  FMID : HJE2329 (MVS/SP-JES2 1.3.3)                 *
*               ORIGIN : JESMAXCC FROM CBT TAPE 89 FEB, FILE 325.     *
* UPDATES :     BY MOINIL P.A. FOR JES2 2.2.0, CHANGES ARE IDENTIFIED *
*               BY '-EU-' IN LINES.                                   *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* JES2PARM INITIALIZATION STATEMENTS :                                *
*               LOAD=J2XIT008                                         *
*               EXIT008 ROUTINE=UEXIT008,DISABLE,TRACE=YES            *
*                                        ENABLE        NO             *
* JES2 OPERATOR CONTROL COMMANDS :                                    *
*               $T EXIT008,DISABLE,TRACE=YES                          *
*                          ENABLE        NO                           *
*               $D EXIT008                                            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1                                                   -EU-
         PRINT OFF                                                 -EU-
         COPY  EUFAJCTB                                            -EU-
         PRINT ON                                                  -EU-
         EJECT
         COPY  $HASPGBL                COPY HASP GLOBALS
         SPACE 1
J2XIT008 $MODULE ENVIRON=USER,TITLE='JES2 - EXIT 008',             -EU-X
               CVT,                    REQ'D TO FIND OS JCT        -EU-X
               JSCB,                   REQ'D TO FIND OS JCT        -EU-X
               TCB,                    REQ'D TO FIND OS JCT        -EU-X
               RPL,                    REQ'D BY $BUFFER            -EU-X
               SSOB,                   REQ'D TO DETERMINE INVOKER      X
               $BUFFER,                REQ'D BY $JCT                   X
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       X
               $HFAME,                 REQ'D BY $SVT               -EU-X
               $JCT,                   REQ'D TO SAVE ABEND/COND CODE   X
               $MIT,                   REQ'D BY $MODEND, $HCT          X
               $PADDR,                 REQ'D BY $HCT               -EU-X
               $SCAT,                  REQ'D BY $SVT                   X
               $SJB,                   REQ'D TO DETERMINE INVOKER      X
               $SVT,                   REQ'D TO DETERMINE INVOKER      X
               $TQE,                   REQ'D BY $SJB                   X
               $XECB                   REQ'D BY $SVT
         TITLE 'JES2 - EXIT 008 - MAX COND CODE/ABEND CODE SUPPORT'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        INITIALIZATION.                                              *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
UEXIT008 $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE 1
         STM   R14,R12,12(R13)         SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         LR    R10,R1                  GET ADDRESS OF JCT
         XR    R15,R15                 SET DEFAULT RETURN CODE
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CHECK TO SEE IF THERE IS A JCT , IF IT IS FOR A BATCH JOB    *
*        AND IF NOTIFY WAS REQUESTED. IF NOT, RETURN.                 *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         LTR   R0,R0                   IS JCT BEING READ?
         BZ    RETURN                  YES, RETURN
         USING JCT,R10                 PROVIDE JCT ADDRESSABILITY  -EU-
         CLI   JCTJOBID,C'J'           IS THIS A BATCH JOB?
         BNE   RETURN                  NO, RETURN
         CLI   JCTTSUID,C' '           WAS NOTIFY REQUESTED?
         BE    RETURN                  NO, RETURN
         TM    JCTJBOPT,JCTXBACH       IS THIS AN X-BATCH MONITOR?
         BO    RETURN                  YES, RETURN
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        FIND THE SJB ON THE JOBS EXECUTING BY CLASS QUEUE THAT       *
*        BELONGS TO THIS JOB'S JCT. IF THE SJB INDICATES THE JOB      *
*        IS NOT IN TERMINATION, THEN RETURN.                          *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         USING SVT,R11                 PROVIDE SSVT ADDRESSABILITY -EU-
         L     R2,SVTJXCLS             GET EXECUTING SJB'S QUEUE   -EU-
         USING SJB,R2                  PROVIDE SJB ADDRESSABILITY  -EU-
GETSJB   LTR   R2,R2                   TEST FOR END OF QUEUE
         BZ    RETURN                  RETURN IF NO MATCH
         CLC   JCTJOBID(8),SJBJOBID    IS THIS THE SJB FOR THIS JCT?
         BE    FOUNDSJB                YES, PROCESS IT
         L     R2,SJBXQCHN             GET POINTER TO NEXT SJB
         B     GETSJB                  LOOP BACK THRU
FOUNDSJB CLI   SJBXQFN1+1,SSOBTERM     WAS EXIT INVOKED BY JOB TERM.?
         BNE   RETURN                  NO, RETURN (NOT HOSTERM)
         DROP  R2
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        FIND THE OS JCT FOR THIS JOB AND CHECK TO SEE IF THE JOB     *
*        ABENDED. IF IT DID ABEND, GET THE ABEND CODE.                *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         L     R2,CVTPTR               LOAD ADDR OF CVT POINTER
         USING CVTMAP,R2
         L     R2,CVTTCBP              LOAD ADDR OF NEXT/CURR TCB'S
         DROP  R2
         L     R2,4(R2)                LOAD ADDR OF OUR TCB
         XR    R3,R3
         USING TCB,R2
         ICM   R3,B'0111',TCBJSCBB       LOAD ADDR OF JSCB
         DROP  R2
         USING IEZJSCB,R3
         L     R2,JSCBACT              LOAD ADDR OF ACTIVE JSCB
         DROP  R3
         USING IEZJSCB,R2
         ICM   R3,B'0111',JSCBJCTA     LOAD ADDR OF OS JCT
         DROP  R2
         LA    R2,ZB502L(R3)                                       -EU-
         USING INJMJCT,R2              ESTABLISH OS JCT ADDRESSABILITY
         TM    JCTJSTAT,JCTABEND       DID JOB ABEND?
         BZ    GETMAXCC                NO, GET MAXIMUM CONDITION CODE
         L     R3,JCTACODE             YES, GET ABEND CODE
         B     SAVECODE                GO TO SAVE IT
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        IF THE JOB DID NOT ABEND, THEN SCAN THE SCT'S FOR THE JOB    *
*        AND FIND THE MAXIMUM CONDITION CODE OUT OF ALL JOB'S STEPS.  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
GETMAXCC L     R2,JCTSDKAD             GET FIRST SCT ADDRESS
         DROP  R2
         XR    R3,R3                   ZERO OUT WORK REGISTER
SCTLOOP  SRL   R2,8                    GET ADDRESS IN PROPER FORM
         LTR   R2,R2                   ARE THERE ANY MORE SCT'S?
         BZ    SAVECODE                NO, GO TO FINISH
         LA    R2,ZB502L(R2)                                       -EU-
         USING INSMSCT,R2              ESTABLISH SCT ADDRESSABILITY
         TM    SCTSTEND,SCTSTSRT+SCTSTPND   DID STEP RUN?          -EU-
         BNO   NEXTSCT                 NO, GET NEXT SCT
         CH    R3,SCTSEXEC             IS THIS STEP'S CC GT MAXIMUM?
         BNL   NEXTSCT                 NO, GET NEXT SCT
         LH    R3,SCTSEXEC             YES, SAVE NEW MAX COND CODE
NEXTSCT  L     R2,SCTANSCT             GET NEXT SCT
         B     SCTLOOP                 LOOP TO CHECK NEXT SCT
         DROP  R2
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        SAVE EITHER THE ABEND CODE OR THE MAXIMUM CONDITION CODE FOR *
*        ANY STEP OF THE JOB IN A JCT USER FIELD. THIS INFORMATION    *
*        WILL BE USED LATER IN EXIT016 - TSO NOTIFY.                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
SAVECODE ST    R3,JCTUSER3             SAVE ABEND/MAX COND CODE
         MVI   JCTUSER3,X'80'          MARK IT AS PROCESSED
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GO BYE-BYE.                                                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
RETURN   L     R14,12(R13)             LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)          RESTORE REGISTERS
         BR    R14                     RETURN
         EJECT
        LTORG
         SPACE 1                                                   -EU-
PATCH    DC    128S(*)                                             -EU-
         DC    CL8'ENDPATCH'
         SPACE 1                                                   -EU-
        PRINT  NOGEN                                               -EU-
         SPACE 1                                                   -EU-
        IEFZB502 ,                                                 -EU-
ZB502L   EQU   *-ZB502                                             -EU-
         SPACE 1
OSJCT    DSECT
        EUFAJCTB ,                     MODIFIED FROM SYS1.MODGEN   -EU-
         SPACE 1
SCTDSCT  DSECT
        IEFASCTB ,                                                 -EU-
         SPACE 1
        PRINT  GEN                                                 -EU-
J2XIT008 CSECT
         SPACE 1
        $MODEND
         SPACE 1
         END
