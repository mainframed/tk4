GDTU     TITLE 'GENERATE DSECT''S TABLES UTILITY.'
GDTUTIL  START 0
         SPACE 1
* PURPOSE :    THE MAIN GOAL OF THIS PROGRAM IS TO GENERATE DSECT'S
* ---------    TABLES WHICH IN TURN SHOULD BE AVAILABLE TO THE TSO
*        'VCOREZAP' COMMAND FOR DSECT'S FIELDS REFERENCES. NOTE THAT
*        THESE TABLES CAN BE ACCESSED BY ANY OTHER PROGRAMS IF DESIRED.
*
* AUTHOR :     MOINIL P.A. - COMPUTING CENTRE
* --------     J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
*
* CALL OF THE PROGRAM :
* ---------------------
*        //GDTU    EXEC PGM=GDTUTIL,PARM=...
*        //SYSLIB    DD DSN=SYS1.MACLIB,DISP=SHR
*        //          DD DSN=SYS1.MODGEN,DISP=SHR
*        //          DD DSN=...ANY OTHER MACLIB...,DISP=SHR
*        //SYSLMOD   DD ... OUTPUT LOAD-MODULES PARTITIONED LIBRARY ...
*        //SYSIN     DD ... INPUT DATA (DESIRED DSECTS) ...
*        //SYSMSG    DD SYSOUT=*
*        //SYSPRINT  DD SYSOUT=*
*
* PARM=... : EACH PARAMETER MUST BE SEPARATED FROM THE OTHER BY AT
* ---------- LEAST A COMMA. AVAILABLE OPTIONS ARE :
*            NOGEN - PRODUCE ONLY THE MACROS ASSEMBLY OUTPUT LIST
*                    (SUPPRESS GENERATE AND LINK-EDIT)
*            NOLINK - PRODUCE ONLY THE DSECTS TABLES ASSEMBLY OUTPUT
*                     LIST (SUPPRESS LINK-EDIT)
*            WC=... - CHANGE WORK-CONTROL SIZE (EXPRESSED IN BYTES, IT
*                     WILL BE ROUNDED TO THE UPPER DOUBLE-WORD).
*            WA=...K - CHANGE WORK-AREAS SIZE (EXPRESSED IN K-BYTES).
*
*     I.E. : PARM='NOLINK,WC=4096,WA=24K'
         SPACE 2
*        --------------------------
*        MISCELLANEOUS DEFINITIONS.
*        --------------------------
         SPACE 1
NKWA     EQU   16                  DEFAULT WORK-AREA SIZE IN K-BYTES,
*                                  USED TO STORE ALL DSECT SYSMBOLS
*                                  (INTERNAL TABLE ELEMENTS).
NBWC     EQU   2048                DEFAULT WORK-CONTROL SIZE IN BYTES,
*                                  USED TO MEMORIZE CONTROL REQUESTS.
         EJECT
* INPUT DATA (SYSIN) : ASSEMBLER STATEMENTS DEFINING THE DESIRED DSECTS
* -------------------- TO BE GENERATED AND EVENTUAL CONTROL STATEMENTS
*        (EQUAL SIGN IN COLUMN 1) TO REQUEST SOME CHANGES AS BELOW :
*
*        1. =  C  ...NAME1...  ...NAME2...
*              CREATE A NEW DSECT NAMED ...NAME1... BEFORE FIELD NAMED
*              ...NAME2... (USEFULL TO SEPARATE PREFIX PART).
*
*        2. =  A  ...NAME1...  ...NAME2...
*              ALIAS WITH NAME ...NAME1... THE DSECT NAME ...NAME2...
*              (I.E. DCB IS MORE EASIER THAN IHADCB).
*
*        3. =  D  ...NAME1...  ...NAME2...  ... ... ...
*              DELETE ONE OR MORE FIELD OR FLAG NAMES (UNDESIRABLE
*              NAMES IN THE DSECT TABLE).
*
*        4. =  F  ...NAME1...  ...NAME2...  ... ... ...
*              FORCE ONE OR MORE NAMES AS A DSECT FIELD NAME BUT WITH
*              A LENGTH OF ZERO (LENGTH SYMBOL).
*
*        5. =  L  ...NAME1...
*              LINK-EDIT A RESULTING DSECT TABLE WITH ...NAME1... AS
*              LOAD-MODULE NAME. THIS CONTROL STATEMENT IS ACCEPTED
*              ONLY ONCE BY DSECT.
*
*        6. =  M  ...NAME1...  ...NAME2...
*              MOVE ALL FLAGS NAMES DEFINITIONS WHICH FOLLOWS FIELD
*              ...NAME1... AFTER FIELD ...NAME2... (ALLOWS REORDERING
*              OF MULTIPLE DEFINITIONS IN THE DSECT).
*
*        NOTE : ALL ASSEMBLER STATEMENTS MUST BE GIVEN IN THE ORDER
*               NEEDED FOR ASSEMBLY, TEMINATING A DSECT INPUT BY AN
*               'END' STATEMENT. ALL CONTROL STATEMENTS RELATIVE TO
*               THE DSECT CAN BE SUPPLIED IN ANY ORDER AND ANYWHERE
*               BEFORE THE 'END' STATEMENT.
         EJECT
* INPUT EXAMPLE : (TRY IT AND SEE WHAT'S COMING OUT)
* ---------------
*
*              = A CVTMAP CVT
*              = C CVT CVTTCBP
*              = D CVTMAP
*              = L CVT
*                       CVT   PREFIX=YES,DSECT=YES,LIST=YES
*                       END
*              = A DCB IHADCB
*              = D DCBBIT0 DCBBIT1 DCBBIT2 DCBBIT3
*              = D DCBBIT4 DCBBIT5 DCBBIT6 DCBBIT7
*              = F DCBLNGXE DCBLNGDA DCBLNGBS
*              = F DCBLNGPO DCBLNGQS DCBLNGPS
*              = L DCB
*              = M DCBDVTBA DCBDEVT
*              = M DCBLNGDA DCBOPTCD
*                       DCBD  DSORG=(PS,PO,DA),DEVD=DA
*                       END
*              TIOT     DSECT
*                       IEFTIOT1
*                       END
*                       IHAASCB LIST=YES
*                       END
*              = F ASVTLEN ASVTULEN
*                       IHAASVT LIST=YES
*                       END
*              = A FLC PSA
*              = D FLC
*                       IHAPSA LIST=YES
*                       END
*              = C TCB TCBRBP
*              = D TCB
*              = F TCBPXLEN TCBMNLEN TCBX2LEN TCBLEN
*              = L TCB
*                       IKJTCB LIST=YES
*                       END
         EJECT
        $DEFREG
        $XENT  BASE=(R10,R11,R12)
         EJECT
*        PARM. FIELD ANALYSIS.
         SPACE 1
         L     R2,0(R1)
         XR    R0,R0
         ICM   R0,B'0011',0(R2)
         BZ    NOPARM
         LA    R1,2(R2)
PARMSC   CLI   0(R1),C','
         BNE   PARMSC1
         LA    R1,1(R1)
         BCT   R0,PARMSC
         B     NOPARM
PARMSC1  LR    R2,R1
         LA    R2,1(R2)
         BCT   R0,PARMSC2
         LR    R3,R2
         BCTR  R3,0
         B     PARMSC3
PARMSC2  CLI   0(R2),C','
         BNE   PARMSC1+L'PARMSC1
         LR    R3,R2
PARMSC3  SLR   R2,R1
         CH    R2,=H'6'
         BNE   PARMNG
         CLC   0(6,R1),=CL6'NOLINK'
         BNE   PARMNG
         OI    SWITCH,SWNL
         B     PARMNXT
PARMNG   CH    R2,=H'5'
         BL    PARMERR
         BH    PARMCA
         CLC   0(5,R1),=CL5'NOGEN'
         BNE   PARMCA
         OI    SWITCH,SWNG
         B     PARMNXT
PARMCA   XR    R4,R4
         CLC   0(3,R1),=CL3'WC='
         BE    *+L'*+12
         CLC   0(3,R1),=CL3'WA='
         BNE   PARMERR
         BCTR  R4,0
         LA    R1,3(R1)
         TM    0(R1),C'0'
         BNO   PARMERR
         XR    R14,R14
         LR    R15,R14
         LA    R5,15
PARMCA1  IC    R15,0(R1)
         NR    R15,R5
         AR    R14,R15
         LA    R1,1(R1)
         CLR   R1,R3
         BH    PARMCA2
         TM    0(R1),C'0'
         BNO   PARMCA2
         LTR   R14,R14
         BZ    PARMCA1
         MH    R14,=H'10'
         B     PARMCA1
PARMCA2  LTR   R14,R14
         BNP   PARMERR
         LTR   R4,R4
         BNZ   PARMCA3
         LA    R14,7(R14)
         SRL   R14,3
         SLL   R14,3
         ST    R14,WRKCL
         B     PARMCA4
PARMCA3  SLL   R14,10
         ST    R14,WRKAL
         CLR   R1,R3
         BH    PARMNXT
         CLI   0(R1),C'K'
         BNE   PARMCA5
         LA    R1,1(R1)
PARMCA4  CLR   R1,R3
         BH    PARMNXT
PARMCA5  CLI   0(R1),C','
         BNE   PARMERR
PARMNXT  LR    R1,R3
         LTR   R0,R0
         BP    PARMSC
         B     NOPARM
PARMERR  LA    R2,L'PFMFLD-3
         CLR   R0,R2
         BH    *+L'*+8
         BE    *+L'*+2
         LR    R2,R0
         XR    R0,R0
         BCT   R2,*+L'*+6
         MVC   PFMFLD(*-*),0(R1)
         EX    R2,*-6
         LTR   R0,R0
         BZ    *+L'*+10
         LA    R1,PFMFLD+1(R2)
         MVC   0(3,R1),=CL3'...'
         LA    R2,PFMERR
         BAS   R7,PMRTN
         B     EXPFE
         EJECT
*        INITIALIZATION.
         SPACE 1
NOPARM   ICM   R3,B'1111',WRKCL
         BNZ   *+L'*+16
         L     R3,=A(NBWC+7)
         SRL   R3,3
         SLL   R3,3
         ST    R3,WRKCL
         LR    R0,R3
        GETMAIN R,LV=(0)
         ST    R1,WRKC
         ALR   R1,R3
         BCTR  R1,0
         ST    R1,WRKC+4
         ICM   R3,B'1111',WRKAL
         BNZ   *+L'*+14
         XR    R3,R3
         ICM   R3,B'0011',=Y(NKWA)
         SLL   R3,10
         ST    R3,WRKAL
         LR    R0,R3
        GETMAIN R,LV=(0)
         ST    R1,WRKA
         XR    R2,R2
         D     R2,WRKA+4
         XR    R2,R2
         M     R2,WRKA+4
         SL    R3,WRKA+4
         AR    R1,R3
         ST    R1,WRKA+8
         L     R2,=A(DDLIN)
         BAS   R8,DARTN
         B     EXLIN
         L     R2,=A(DDUT1)
         BAS   R8,DARTN
         B     EXUT1
         L     R2,=A(DDWK1)
         BAS   R8,DARTN
         B     EXWK1
         L     R2,=A(DDWK2)
         BAS   R8,DARTN
         B     EXWK2
         L     R2,=A(DDWK3)
         BAS   R8,DARTN
         B     EXWK3
         EJECT
*        GET A DSECT AND PREPARE TO ASSEMBLY IT.
*              DDNAME OF INPUT = SYSIN
*              DDNAME OF OUTPUT = SYSWK1
         SPACE 1
LOOP     MVC   DDIN,=CL8'SYSWK1'
         ZAP   SEQN,=PL1'+0'
         NI    SWITCH,255-SWDS-SWPU
         MVC   MACNME,=CL8' '
         MVC   LNKNME,=CL8' '
         L     R2,WRKC
         LR    R6,R2
         L     R3,WRKCL
         XR    R14,R14
         LR    R15,R14
         MVCL  R2,R14
         L     R2,WRKA
         L     R3,WRKAL
         XR    R14,R14
         LR    R15,R14
         MVCL  R2,R14
INREAD  $READ  CARD
         LTR   R15,R15
         BM    INERR
         BZ    INPRS
         MVC   MSGETY,=CL2'IN'
         MVC   MSGEDD,=CL8'SYSIN'
         BAS   R8,EMRTN
         B     INERR
INPRS    CLI   CARD,C'*'
         BE    INREAD
         CLI   CARD,C'='
         BNE   INDATA
         TM    SWITCH,SWDS
         BO    INREAD
         MVC   CLSD(L'CLSD),CARD
         LA    R2,CLST
         BAS   R7,PMRTN
         LM    R3,R5,SCCRD
         CLI   0(R3),C' '
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     INSKIP
         CLI   0(R3),C'A'          ALIAS REQUEST
         BE    INAMCN
         CLI   0(R3),C'C'          CREATE REQUEST
         BE    INAMCN
         CLI   0(R3),C'D'          DELETE REQUEST
         BE    INDFTN
         CLI   0(R3),C'F'          FORCE REQUEST
         BE    INDFTN
         CLI   0(R3),C'L'          LINK REQUEST
         BE    INLNKN
         CLI   0(R3),C'M'          MOVE REQUEST
         BE    INAMCN
         LA    R2,UNKNOWN
         BAS   R7,PMRTN
         B     INREAD
INAMCN   MVC   CTLOPC(L'CTLOPC),0(R3)   SET REQUEST
         LA    R1,1+L'CTLOPC+L'CTLNME+L'TRGNME(R6)
         CL    R1,WRKC+4
         BH    INWCOV
         MVC   CTLNME,=CL8' '
         MVC   TRGNME,=CL8' '
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BNE   *-12
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BE    *-12
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BNE   *-12
         LR    R1,R3
         SR    R1,R2
         CH    R1,=H'8'
         BH    INSKIP
         BCT   R1,*+L'*+6
         MVC   CTLNME(*-*),0(R2)
         EX    R1,*-6
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BE    *-12
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         LR    R1,R3
         SR    R1,R2
         CH    R1,=H'8'
         BH    INSKIP
         BCT   R1,*+L'*+6
         MVC   TRGNME(*-*),0(R2)
         EX    R1,*-6
         CLC   CTLNME,TRGNME
         BE    INSKIP
         L     R1,WRKC
INSTCL   CLI   0(R1),0
         BE    INSTCT
         CLC   0(L'CTLOPC+L'CTLNME,R1),CTLOPC
         BE    INSKIP
         LA    R1,L'CTLOPC+L'CTLNME+L'TRGNME(R1)
         B     INSTCL
INSTCT   MVC   0(L'CTLOPC+L'CTLNME+L'TRGNME,R6),CTLOPC
         LA    R6,L'CTLOPC+L'CTLNME+L'TRGNME(R6)
         B     INREAD
INDFTN   MVC   CTLOPC(L'CTLOPC),0(R3)   SET REQUEST
         MVC   TRGNME,=CL8' '
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BNE   *-12
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BE    *-12
INDFTC   LA    R1,1+L'CTLOPC+L'CTLNME+L'TRGNME(R6)
         CL    R1,WRKC+4
         BH    INWCOV
         MVC   CTLNME,=CL8' '
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         LR    R1,R3
         SR    R1,R2
         CH    R1,=H'8'
         BH    INSKIP
         BCT   R1,*+L'*+6
         MVC   CTLNME(*-*),0(R2)
         EX    R1,*-6
         L     R1,WRKC
INDFSC   CLI   0(R1),0
         BE    INDFST
         CLC   0(L'CTLOPC+L'CTLNME+L'TRGNME,R1),CTLOPC
         BE    INDFNX
         LA    R1,L'CTLOPC+L'CTLNME+L'TRGNME(R1)
         B     INDFSC
INDFST   MVC   0(L'CTLOPC+L'CTLNME+L'TRGNME,R6),CTLOPC
         LA    R6,L'CTLOPC+L'CTLNME+L'TRGNME(R6)
INDFNX   CLR   R3,R5
         BNL   INREAD
         BXLE  R3,R4,*+L'*+4
         B     INREAD
         CLI   0(R3),C' '
         BE    *-12
         B     INDFTC
INLNKN   CLI   LNKNME,C' '         LINK NAME REQUEST
         BNE   INSKIP
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BNE   *-12
         BXLE  R3,R4,*+L'*+4
         B     INSKIP
         CLI   0(R3),C' '
         BE    *-12
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         LR    R1,R3
         SR    R1,R2
         CH    R1,=H'8'
         BH    INSKIP
         BCT   R1,*+L'*+6
         MVC   LNKNME(*-*),0(R2)
         EX    R1,*-6
         B     INREAD
INWCOV   LA    R2,IWCSOV
         BAS   R7,PMRTN
         B     INREAD
INSKIP   LA    R2,SKIPPED
         BAS   R7,PMRTN
         B     INREAD
INDATA   TM    SWITCH,SWDS
         BO    INSERT
         OI    SWITCH,SWDS+SWPU
         MVC   CSNM,=CL8'NDUKU'
         LA    R2,CSTR
         BAS   R8,PURTN
         B     INERR
INSERT   MVC   CLSD(L'CLSD),CARD
         LA    R2,CLST
         BAS   R7,PMRTN
         CLI   CARD,C' '
         BNE   INPCRD
         LM    R3,R5,SCCRD
         CLI   0(R3),C' '
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     INSKIP
         CLC   0(4,R3),=C'END '
         BE    INPEND
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         SR    R3,R2
         CH    R3,=H'8'
         BH    INSKIP
         MVC   MACNME,=CL8' '
         BCT   R3,*+L'*+6
         MVC   MACNME(*-*),0(R2)
         EX    R3,*-6
INPCRD   LA    R2,CARD
         BAS   R8,PURTN
         B     INERR
         B     INREAD
INPEND   LA    R2,CEND
         BAS   R8,PURTN
INERR    NI    SWITCH,255-SWDS
         TM    SWITCH,SWPU
         BZ    INTST
        $UCLOSE DDIN
         LTR   R15,R15
         BZ    INTST
         MVC   MSGETY,=CL2'OC'
         BAS   R8,PCRTN
INTST    TM    SWITCH,SWDS
         BZ    EXIT
         LA    R6,1(R6)
         ST    R6,WRKS
         XC    WRKS+4(4),WRKS+4
         EJECT
*        EXECUTE THE ASSEMBLY OF THE SELECTED DSECT.
*              DDNAME OF INPUT = SYSWK1
*              DDNAME OF OUTPUT = SYSWK2
         SPACE 1
         TM    SWITCH,SWNG
         BZ    *+L'*+10
         MVC   DDPRT,=CL8'SYSPRINT'
         B     *+L'*+6
         MVC   DDPRT,=CL8'SYSWK2'
        LINK   EP=IEV90,PARAM=(PARML,DDNML),VL=1
         LTR   R15,R15
         BZ    ASSDS
         ST    R15,WORKF
         UNPK  ADSERC(9),WORKF(5)
         TR    ADSERC(8),HEXTR-C'0'
         MVI   ADSERC+8,C')'
         LA    R2,ADSERR
         BAS   R7,PMRTN
         B     LOOP
ASSDS    TM    SWITCH,SWNG
         BO    LOOP
         EJECT
*        COLLECT THE DSECT'S SYMBOLS FROM ASSEMBLY LIST.
*              DDNAME OF INPUT = SYSWK2
         SPACE 1
         NI    SWITCH,255-SWDS-SWDF-SWCR-SWRL
         LM    R3,R5,WRKA
         USING ITB,R3
CDREAD  $READ  LINE,DDPRT
         LTR   R15,R15
         BM    CDEOF
         BP    CDERR
         TM    SWITCH,SWCR
         BO    CDCRFB
         CLC   LBL(22),=CL22'     CROSS REFERENCE  '
         BNE   CDSST
         OI    SWITCH,SWCR
         LR    R5,R3               SET END
         SL    R5,WRKA+4
         OC    WRKS+4(4),WRKS+4    ANYTHING PENDING?
         BZ    CDREAD              NO
CDRSP1   L     R14,WRKS
         NI    SWITCH,255-SWRL
CDRSP2   CLI   0(R14),0
         BE    CDRSP5
         L     R3,WRKA
CDRSP3   CLI   ITBET,ITBRSP
         BNE   *+L'*+10
         CLC   0(L'LBL,R14),ITBFNM
         BE    CDRSP4
         BXLE  R3,R4,CDRSP3
         B     CDRSP5
CDRSP4   LR    R15,R3
         CLC   0+L'LBL(L'LBL,R14),ITBFNM
         BE    *+L'*+8
         BXLE  R3,R4,*-10
         B     CDRSP5
         CLI   ITBET,ITBRSP
         BE    CDRSP5
         MVI   0(R14),0
         OI    SWITCH,SWRL
         CLI   ITBET,ITBBTY
         BNE   *+L'*+8
         MVI   ITBET-ITB(R15),ITBBTY
         B     *+L'*+4
         MVI   ITBET-ITB(R15),ITBFTY
CDRSP5   LA    R14,2*L'LBL(R14)
         CL    R14,WRKS+4
         BL    CDRSP2
         L     R14,WRKS
CDRSP6   CLI   0(R14),0            ALL SOLVED NOW?
         BNE   CDRSP7              NO
         LA    R14,2*L'LBL(R14)
         CL    R14,WRKS+4
         BL    CDRSP6
         B     CDREAD
CDRSP7   TM    SWITCH,SWRL
         BO    CDRSP1
         L     R14,WRKS
CDRSP8   CLI   0(R14),0
         BE    CDRSP9
         MVC   UNRESLVN(L'LBL),0(R14)
         ST    R14,SVSCAN
         LA    R2,UNRESLV
         BAS   R7,PMRTN
         L     R14,SVSCAN
CDRSP9   LA    R14,2*L'LBL(R14)
         CL    R14,WRKS+4
         BL    CDRSP8
         L     R3,WRKA
CDRSP10  CLI   ITBET,ITBRSP
         BNE   *+L'*+4
         OI    ITBET,ITBRES
         BXLE  R3,R4,CDRSP10
         B     CDREAD
CDSST    CLI   LBL,C'*'
         BE    CDREAD
         CLC   LOC(L'LOC),=CL8' '
         BNE   *+L'*+14
         CLC   INC(5),=CL5' EQU '
         BE    CDFEQU
         B     CDREAD
         TRT   LOC,HEXTB
         BNZ   CDREAD
         CLC   INC(7),=CL7' DSECT '
         BNE   CDFLD
         TM    SWITCH,SWDS         DSECT START
         BZ    *+L'*+4
         STCM  R3,B'1111',ITBDNP-ITB(R6)
         LR    R6,R3
         MVI   ITBET,ITBDTY
         MVC   ITBDNM,LBL
         OI    SWITCH,SWDS+SWDF
         L     R15,WRKC
CDLALS   TM    0(R15),X'FF'
         BZ    CDNEXT
         BO    CDLALN
         CLI   0(R15),C'A'
         BNE   CDLALN
         CLC   9(L'LBL,R15),LBL
         BE    *+L'*+8
CDLALN   LA    R15,1+L'LBL+L'ITBDNM(R15)
         B     CDLALS
         BXLE  R3,R4,*+L'*+4
         B     CDNEXT+L'CDNEXT
         MVI   ITBET,ITBDTY        ALIAS REQUEST
         MVC   ITBDNM(L'ITBDNM),1(R15)
         MVI   0(R15),X'FF'
         MVI   ITBDDS,X'FF'
         B     CDLALN
CDFLD    TM    SWITCH,SWDS
         BZ    CDREAD
         CLC   LBL,=CL8' '
         BE    CDREAD
         L     R15,WRKC
CDLRQS   TM    0(R15),X'FF'
         BZ    CDFLP
         BO    *+L'*+18
         CLI   0(R15),C'C'
         BNE   *+L'*+10
         CLC   9(L'LBL,R15),LBL
         BE    *+L'*+8
         LA    R15,1+L'LBL+L'ITBDNM(R15)
         B     CDLRQS
         STCM  R3,B'1111',ITBDNP-ITB(R6)     CREATE REQUEST
         LR    R6,R3
         MVI   ITBET,ITBDTY
         MVC   ITBDNM(L'ITBDNM),1(R15)
         MVC   ITBDDS(L'ITBDDS),LOC+2
         MVI   0(R15),X'FF'
         LR    R2,R3
         BXLE  R3,R4,*+L'*+4
         B     CDNEXT+L'CDNEXT
         L     R15,WRKC
CDALAD   TM    0(R15),X'FF'
         BZ    CDFLP
         BO    CDALAN
         CLI   0(R15),C'A'
         BNE   CDALAN
         CLC   9(L'ITBDNM,R15),ITBDNM-ITB(R2)
         BE    *+L'*+8
CDALAN   LA    R15,1+L'LBL+L'ITBDNM(R15)
         B     CDALAD
         MVI   ITBET,ITBDTY        ADD ALIAS REQUEST
         MVC   ITBDNM(L'ITBDNM),1(R15)
         MVI   0(R15),X'FF'
         MVI   ITBDDS,X'FF'
         BXLE  R3,R4,CDALAN
         B     CDNEXT+L'CDNEXT
CDFLF    MVC   ITBFDS(L'ITBFDS),AD2+1
         B     CDFLP+L'CDFLP
CDFLP    MVC   ITBFDS(L'ITBFDS),LOC+2   DSECT FIELD NAME
         MVI   ITBET,ITBFTY
         MVC   ITBFNM,LBL
CDNEXT   BXLE  R3,R4,CDREAD
         LA    R2,IWASOV
         BAS   R7,PMRTN
         B     CDRST
CDFEQU   TM    SWITCH,SWDS
         BZ    CDREAD
         CLC   LBL,=CL8' '
         BE    CDREAD
         LA    R14,INC+5
         CLI   0(R14),C' '
         BNE   *+L'*+8
         LA    R14,1(R14)
         B     *-12
         CLC   0(2,R14),=C'B'''
         BE    CDFLGP
         CLC   0(2,R14),=C'X'''
         BE    CDFLGP
         LR    R15,R14
         CLI   0(R14),C'('
         BNE   *+L'*+8
         LA    R14,1(R14)
         B     *-12
         CLI   0(R14),C'*'
         BE    CDFLF
         CLI   0(R15),C'0'
         BNL   CDFLGP
         LR    R15,R14
CDANAL   CLI   0(R15),C' '
         BE    CDALGET
         CLI   0(R15),C'-'
         BE    CDALGET
         CLI   0(R15),C'+'
         BE    CDALGET
         CLI   0(R15),C','
         BE    CDALGET
         LA    R15,1(R15)
         B     CDANAL
CDALGET  MVC   TRGNME,=CL8' '
         SLR   R15,R14
         BCT   R15,*+L'*+6
         MVC   TRGNME(*-*),0(R14)
         EX    R15,*-6
         LR    R5,R3
         L     R3,WRKA
CDALOOP  CLI   ITBET,ITBRSP
         BE    *+L'*+10
         CLC   ITBFNM,TRGNME
         BE    CDANALF
         BXLE  R3,R4,CDALOOP
         LR    R3,R5
         L     R5,WRKA+8
         ICM   R14,B'1111',WRKS+4
         BNZ   *+L'*+4
         L     R14,WRKS
         LA    R15,2*L'LBL(R14)
         CL    R15,WRKC+4
         BH    CDUNRSV
         MVC   0(L'LBL,R14),LBL
         MVC   0+L'LBL(L'LBL,R14),TRGNME
         ST    R15,WRKS+4
         MVI   ITBET,ITBRSP
         B     CDFLGP+L'CDFLGP
CDUNRSV  LA    R2,IWCSOV
         BAS   R7,PMRTN
         MVC   UNRESLVN,LBL
         LA    R2,UNRESLV
         BAS   R7,PMRTN
         B     CDREAD
CDANALF  CLI   ITBET,ITBBTY
         LR    R3,R5
         L     R5,WRKA+8
         BNE   CDFLF
CDFLGP   MVI   ITBET,ITBBTY        DSECT FLAG NAME
         MVC   ITBBNM,LBL
         MVC   ITBBVL(L'ITBBVL),AD2+1
         B     CDNEXT
CDERR    MVC   MSGETY,=CL2'IN'
         MVC   MSGEDD,DDPRT
         BAS   R8,EMRTN
CDRST    NI    SWITCH,255-SWDS
         B     CDEOF
CDCRFB   CLI   SLN,C'0'
         BNE   CDREAD
         CLC   SYM,=CL8' '
         BE    CDREAD
         L     R3,WRKA
CDSCN    CLI   ITBET,ITBFTY
         BE    *+L'*+8
         CLI   ITBET,ITBBTY
         BNE   *+L'*+10
         CLC   SYM,ITBFNM OR ITBBNM
         BE    *+L'*+8
         BXLE  R3,R4,CDSCN
         B     CDREAD
         L     R15,WRKC
CDFRSC   TM    0(R15),X'FF'
         BZ    CDSSL
         BO    *+L'*+18
         CLI   0(R15),C'F'
         BNE   *+L'*+10
         CLC   1(L'ITBBNM,R15),ITBBNM
         BE    *+L'*+8
         LA    R15,1+L'LBL+L'LBL(R15)
         B     CDFRSC
         MVI   ITBET,ITBFTY        SET AS FIELD WITH ZERO LENGTH
         MVC   ITBFLG(L'ITBFLG),=CL4'0000' OR ITBBLG
         MVI   0(R15),X'FF'
         B     CDREAD
CDSSL    MVC   ITBFLG(L'ITBFLG),SLN+1 OR ITBBLG
         B     CDREAD
CDEOF   $RCLOSE DDPRT
         LTR   R15,R15
         BZ    CDTST
         NI    SWITCH,255-SWDS
         MVC   MSGETY,=CL2'IC'
         MVC   MSGEDD,DDPRT
         BAS   R8,EMRTN
CDTST    TM    SWITCH,SWDS+SWDF
         BO    GNDST
         TM    SWITCH,SWDF
         BO    LOOP
         LA    R2,NODSCT
         BAS   R7,PMRTN
         B     LOOP
         EJECT
*        GENERATE THE DSECT'S TABLE SOURCE MODULE.
*              DDNAME OF OUTPUT = SYSWK3
         SPACE 1
GNDST    MVC   DDIN,=CL8'SYSWK3'
         ZAP   SEQN,=PL1'+0'
         NI    SWITCH,255-SWDS-SWDC-SWMV
         MVC   CDCR,=CL8' '
         XC    ADJVAL,ADJVAL
         L     R3,WRKA
         CLI   LNKNME,C' '         START OF MODULE
         BE    *+L'*+10
         MVC   MEMBR,LNKNME
         B     *+L'*+6
         MVC   MEMBR,ITBDNM
         MVC   CTDN,MEMBR
         MVI   CTNM,C' '
         MVC   CTNM+1(L'CTNM-1),CTNM
         MVC   CTNM(L'ITBDNM),ITBDNM
         LA    R1,CTNM+L'ITBDNM-1
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         MVC   2(13,R1),=CL13'DSECT TABLE.'''
         LA    R2,CTIT
         BAS   R8,PURTN
         B     GNERR
         MVC   CSNM,ITBDNM
         LA    R2,CSTR
         BAS   R8,PURTN
         B     GNERR
         LA    R2,CSPC
         BAS   R8,PURTN
         B     GNERR
         MVC   CIDN,MACNME
         LA    R2,CIDT
         BAS   R8,PURTN
         B     GNERR
         B     GNSTR
GNMOD    TM    SWITCH,SWMV
         BZ    GNNORM
         CLI   ITBET,ITBBTY
         BE    GNGEN
         ST    R3,SVINS3
         B     GNINS1
GNNORM   TM    ITBET,ITBRES
         BO    GNNEXT
         CLI   ITBET,ITBDTY
         BNE   GNGEN
         CLI   ITBDDS,X'FF'
         BE    GNALS
         TM    SWITCH,SWDC
         BZ    *+L'*+8
GNRST    L     R3,SVSCAN
         NI    SWITCH,255-SWDC
         LR    R2,R6
GNNSC    ICM   R1,B'1111',ITBDNP-ITB(R2)
         BZ    GNCLS
         CLC   ITBDNM-ITB(L'ITBDNM,R6),ITBDNM-ITB(R1)
         BE    *+L'*+6
         LR    R2,R1
         B     GNNSC
         MVC   ITBDNP-ITB(L'ITBDNP,R2),ITBDNP-ITB(R1)
         ST    R3,SVSCAN
         OI    SWITCH,SWDC
         LR    R3,R1
         OI    ITBET,ITBRES
         B     GNNEXT
GNCLS    XC    ADJVAL,ADJVAL
         LA    R2,CDCL             CLOSE A DSECT
         BAS   R8,PURTN
         B     GNERR
GNSTR    LA    R2,CSPC             START A DSECT
         BAS   R8,PURTN
         B     GNERR
         TM    SWITCH,SWDS
         BZ    *+L'*+6
         MVC   CDCR,ITBDNM
         OI    SWITCH,SWDS
         LR    R6,R3
         MVI   CDNX,C' '
         MVC   CDNX+1(L'CDNX-1),CDNX
         LA    R2,CDNX
         MVC   0(11,R2),=CL11'AL1(0),CL8'''
         MVC   11(L'ITBDNM,R2),ITBDNM
         LA    R2,11(R2)
GNSTR0   CLI   0(R2),C' '
         BE    *+L'*+8
         LA    R2,1(R2)
         B     GNSTR0
         CLI   ITBDDS,0
         BNE   *+L'*+14
         MVC   0(13,R2),=CL13''',XL4''0'',AL4('
         LA    R2,13(R2)
         B     GNSTR1
         MVC   0(10,R2),=CL10''',XL4''0000'
         MVC   10(L'ITBDDS,R2),ITBDDS
         MVC   10+L'ITBDDS(6,R2),=CL6''',AL4('
         LA    R2,16+L'ITBDDS(R2)
GNSTR1   ICM   R1,B'1111',ITBDNP
         BNZ   GNSTR2
         MVC   0(3,R2),=CL3'*-*'
         LA    R2,3(R2)
         B     GNSTR3
GNSTR2   MVC   0(L'ITBDNM,R2),ITBDNM-ITB(R1)
         CLI   0(R2),C' '
         BE    GNSTR3
         LA    R2,1(R2)
         B     GNSTR2+L'GNSTR2
GNSTR3   MVI   0(R2),C')'
         XR    R0,R0
         CLI   ITBDDS,0
         BE    GNSTR5
         LA    R1,ITBDDS
         LA    R2,15
         LA    R14,L'ITBDDS
         LR    R15,R0
GNSTR4   IC    R15,0(R1)
         NR    R15,R2
         TM    0(R1),C'0'
         BO    *+L'*+4
         LA    R15,9(R15)
         SLL   R0,4
         OR    R0,R15
         LA    R1,1(R1)
         BCT   R14,GNSTR4
GNSTR5   ST    R0,ADJVAL
         LA    R2,CDST
         BAS   R8,PURTN
         B     GNERR
         B     GNNEXT
GNALS    MVI   CALX,C' '
         MVC   CALX+1(L'CALX-1),CALX
         LA    R2,CALX
         MVC   0(11,R2),=CL11'AL1(0),CL8'''
         MVC   11(L'ITBDNM,R2),ITBDNM
         LA    R2,11(R2)
GNALS0   CLI   0(R2),C' '
         BE    *+L'*+8
         LA    R2,1(R2)
         B     GNALS0
         LA    R14,CDNX+11
GNALS1   CLI   0(R14),C''''
         BE    *+L'*+8
         LA    R14,1(R14)
         B     GNALS1
         LA    R15,CDNX+L'CDNX-9
         CLI   0(R15),C' '
         BNE   *+L'*+4
         BCT   R15,*-8
         SLR   R15,R14
         B     *+L'*+6
         MVC   0(*-*,R2),0(R14)
         EX    R15,*-6
         LA    R2,CALS
         BAS   R8,PURTN
         B     GNERR
         B     GNNEXT
GNGEN    L     R1,WRKC
         TM    0(R1),X'FF'
         BZ    GNFLD
         BO    *+L'*+18
         CLI   0(R1),C'D'
         BNE   *+L'*+10
         CLC   ITBFNM(L'ITBFNM),1(R1) OR ITBBNM
         BE    *+L'*+8
         LA    R1,1+L'LBL+L'LBL(R1)
         B     GNGEN+L'GNGEN
         MVI   0(R1),X'FF'         DELETE REQUEST
         B     GNTRES
GNFLD    CLI   ITBET,ITBFTY
         BNE   GNFLG
         MVC   CLNM,ITBFNM         DEFINE A DSECT FIELD
         OC    ADJVAL,ADJVAL
         BZ    GNFLD2
         XR    R0,R0
         LA    R1,ITBFDS
         LA    R2,15
         LA    R14,L'ITBFDS
         LR    R15,R0
GNFLD1   IC    R15,0(R1)
         NR    R15,R2
         TM    0(R1),C'0'
         BO    *+L'*+4
         LA    R15,9(R15)
         SLL   R0,4
         OR    R0,R15
         LA    R1,1(R1)
         BCT   R14,GNFLD1
         SL    R0,ADJVAL
         LA    R2,L'CVAL
         SRDL  R0,4
         SRL   R1,4
         BCT   R2,*-8
         STCM  R1,B'1111',CVAL
         TR    CVAL,HEXTR
         B     GNFLD2+L'GNFLD2
GNFLD2   MVC   CVAL,ITBFDS
         MVC   CLEN,ITBFLG
         MVI   CFTY,C'1'
         L     R1,WRKC
GNFLD3   TM    0(R1),X'FF'
         BZ    GNOUTF
         BO    GNFLD4
         CLI   0(R1),C'M'
         BNE   GNFLD4
         CLC   ITBFNM(L'ITBFNM),1(R1)
         BE    GNSKP
         CLC   ITBFNM(L'ITBFNM),9(R1)
         BE    GNINS
GNFLD4   LA    R1,1+L'LBL+L'LBL(R1)
         B     GNFLD3
GNSKP    LA    R2,CFLD
         BAS   R8,PURTN
         B     GNERR
GNSKP1   TM    SWITCH,SWDC
         BZ    *+L'*+4
         OI    ITBET,ITBRES
         BXLE  R3,R4,*+L'*+4
         B     GNNEXT+L'GNNEXT
         CLI   ITBET,ITBBTY
         BE    GNSKP1
         B     GNMOD
GNINS    ST    R1,SVINS1
         LA    R2,CFLD
         BAS   R8,PURTN
         B     GNERR
         TM    SWITCH,SWDC
         BZ    *+L'*+4
         OI    ITBET,ITBRES
         ST    R3,SVINS3
         L     R3,WRKA
GNINS1   CLI   ITBET,ITBFTY
         BE    *+L'*+8
         CLI   ITBET,ITBRES+ITBFTY
         BNE   GNINS4
         L     R1,SVINS1
         L     R15,WRKC
GNINS2   TM    0(R15),X'FF'
         BZ    GNINS4
         BO    GNINS3
         CLI   0(R15),C'M'
         BNE   GNINS3
         CLC   9(L'LBL,R15),9(R1)
         BNE   GNINS3
         CLC   1(L'ITBFNM,R15),ITBFNM
         BE    GNINS5
GNINS3   LA    R15,1+L'LBL+L'LBL(R15)
         B     GNINS2
GNINS4   BXLE  R3,R4,GNINS1
         L     R3,SVINS3
         TM    SWITCH,SWMV
         BZ    GNNEXT
         NI    SWITCH,255-SWMV
         B     GNNORM
GNINS5   TM    SWITCH,SWMV
         BO    GNINS10
         CL    R3,SVINS3
         BL    GNINS10
         OI    SWITCH,SWMV
         L     R3,SVINS3
         B     GNNEXT
GNINS10  MVI   0(R15),X'FF'
GNINS11  BXLE  R3,R4,*+L'*+4
         B     GNINS4+L'GNINS4
         CLI   ITBET,ITBBTY
         BE    *+L'*+8
         CLI   ITBET,ITBRES+ITBBTY
         BNE   GNINS15
         L     R1,WRKC
GNINS12  TM    0(R1),X'FF'
         BZ    GNINS13
         BO    *+L'*+18
         CLI   0(R1),C'D'
         BNE   *+L'*+10
         CLC   ITBBNM(L'ITBBNM),1(R1)
         BE    *+L'*+8
         LA    R1,1+L'LBL+L'LBL(R1)
         B     GNINS12
         MVI   0(R1),X'FF'         DELETE REQUEST
         B     GNINS14
GNINS13  MVC   CLNM,ITBBNM         DEFINE A DSECT FLAG
         MVC   CVAL,ITBBVL
         MVC   CLEN,ITBBLG
         MVI   CFTY,C'2'
         LA    R2,CFLD
         BAS   R8,PURTN
         B     GNERR
GNINS14  TM    SWITCH,SWDC+SWMV
         BZ    GNINS11
         OI    ITBET,ITBRES
         B     GNINS11
GNINS15  L     R1,SVINS1
         L     R15,WRKC
GNINS16  TM    0(R15),X'FF'
         BZ    GNINS4+L'GNINS4
         BO    GNINS17
         CLI   0(R15),C'M'
         BNE   GNINS17
         CLC   9(L'LBL,R15),9(R1)
         BE    GNINS1
GNINS17  LA    R15,1+L'LBL+L'LBL(R15)
         B     GNINS16
GNFLG    MVC   CLNM,ITBBNM         DEFINE A DSECT FLAG
         MVC   CVAL,ITBBVL
         MVC   CLEN,ITBBLG
         MVI   CFTY,C'2'
GNOUTF   LA    R2,CFLD
         BAS   R8,PURTN
         B     GNERR
GNTRES   TM    SWITCH,SWDC
         BZ    GNNEXT
         OI    ITBET,ITBRES
         DROP  R3
GNNEXT   BXLE  R3,R4,GNMOD
         TM    SWITCH,SWDC
         BO    GNRST
         LA    R2,CDCL             CLOSE THE LAST DSECT
         BAS   R8,PURTN
         B     GNERR
         LA    R2,CSPC             END OF MODULE
         BAS   R8,PURTN
         B     GNERR
         LA    R2,CEND
         BAS   R8,PURTN
GNERR    NI    SWITCH,255-SWDS
        $UCLOSE DDIN
         LTR   R15,R15
         BZ    GNTST
         NI    SWITCH,255-SWDS
         MVC   MSGETY,=CL2'OC'
         BAS   R8,PCRTN
GNTST    TM    SWITCH,SWDS
         BZ    LOOP
         EJECT
*        EXECUTE THE ASSEMBLY OF THE DSECT'S TABLE MODULE.
*              DDNAME OF INPUT = SYSWK3
*              DDNAME OF OUTPUT = SYSPRINT (LIST)
*                                 SYSLIN (OBJECT)
         SPACE 1
         MVC   DDPRT,=CL8'SYSPRINT'
        LINK   EP=IEV90,PARAM=(PARMX,DDNML),VL=1
         LTR   R15,R15
         BZ    LKED
         ST    R15,WORKF
         UNPK  ATBERC(9),WORKF(5)
         TR    ATBERC(8),HEXTR-C'0'
         MVI   ATBERC+8,C')'
         LA    R2,ATBERR
         BAS   R7,PMRTN
         B     LOOP
         EJECT
*        EXECUTE THE LINK-EDIT OF THE DSECT'S TABLE MODULE.
         SPACE 1
LKED     TM    SWITCH,SWNL
         BO    LOOP
        LINK   EP=HEWL,PARAM=(PARMLK,DDNMLK),VL=1
         LTR   R15,R15
         BZ    LKEXQ
         ST    R15,WORKF
         UNPK  LNKERC(9),WORKF(5)
         TR    LNKERC(8),HEXTR-C'0'
         MVI   LNKERC+8,C')'
         MVC   LNKMNM,MEMBR
         LA    R2,LNKERR
         BAS   R7,PMRTN
         B     LOOP
LKEXQ    MVC   MPRMNM,MEMBR
         LA    R2,MPRMSG
         BAS   R7,PMRTN
         EJECT
*        ADD THE ALIASES IF ANY IN THE DSECT'S TABLE MODULE.
         SPACE 1
         L     R3,WRKA
         USING ITB,R3
         NI    SWITCH,255-SWAL
ALSTST   CLI   ITBET,ITBDTY
         BNE   NOTALS
         CLC   ITBDNM,MEMBR
         BE    NOTALS
         TM    SWITCH,SWAL
         BO    ALSADD
        OPEN   (PDS,UPDAT)
         TM    PDS+(DCBOFLGS-IHADCB),DCBOFOPN
         BO    ALSBLD
         LA    R2,PDSMSG
         BAS   R7,PMRTN
         B     LOOP
ALSBLD   OI    SWITCH,SWAL
         MVC   BLDLNME,MEMBR
         XC    BLDLUSR,BLDLUSR
        BLDL   PDS,BLDLLIST
         LTR   R15,R15
         BZ    ALSFND
         ST    R15,WORKF
         UNPK  BLDMSGR(9),WORKF(5)
         TR    BLDMSGR(8),HEXTR-C'0'
         MVI   BLDMSGR+8,C'/'
         ST    R0,WORKF
         UNPK  BLDMSGC(9),WORKF(5)
         TR    BLDMSGC(8),HEXTR-C'0'
         MVI   BLDMSGC+8,C' '
         LA    R2,BLDMSG
         BAS   R7,PMRTN
         B     NOTALS+L'NOTALS
ALSFND   MVC   STOWTTR,BLDLTTR     BUILD THE STOW LIST WITH INFO
         XC    STOWUSR,STOWUSR       FROM BLDL LIST
         CLI   BLDLIND,X'2C'
         BE    USRBLD
         UNPK  BLIMSGI(3),BLDLIND(2)
         TR    BLIMSGI(2),HEXTR-C'0'
         MVI   BLIMSGI+2,C''''
         LA    R2,BLIMSG
         BAS   R7,PMRTN
         B     NOTALS+L'NOTALS
USRBLD   MVI   STOWIND,X'B1'
         MVC   STOWUSR(21),BLDLUSR
         MVC   STOWUSR+21(3),BLDLUSR+15
         MVC   STOWUSR+24(8),BLDLNME
         MVC   STOWUSR+32(2),BLDLUSR+21
ALSADD   MVC   STOWNME,ITBDNM
         XR    R15,R15
        STOW   PDS,STOWLIST,A
         LTR   R15,R15
         BNZ   ALSFLD
         MVC   ALSNME,STOWNME
         LA    R2,ALSMSG
         BAS   R7,PMRTN
         B     NOTALS
ALSFLD   ST    R15,WORKF
         UNPK  ALSERC(9),WORKF(5)
         TR    ALSERC(8),HEXTR-C'0'
         MVI   ALSERC+8,C')'
         MVC   ALSERM,STOWNME
         LA    R2,ALSERR
         BAS   R7,PMRTN
NOTALS   BXLE  R3,R4,ALSTST
         TM    SWITCH,SWAL
         BZ    LOOP
        CLOSE  PDS
         B     LOOP
         DROP  R3
         EJECT
*        PROCESSING TERMINATION.
         SPACE 1
EXIT    $RCLOSE
         ST    R15,RETCC
         L     R2,=A(DDWK3)
         BAS   R8,DFRTN
         NOP   0
EXWK3    L     R2,=A(DDWK2)
         BAS   R8,DFRTN
         NOP   0
EXWK2    L     R2,=A(DDWK1)
         BAS   R8,DFRTN
         NOP   0
EXWK1    L     R2,=A(DDUT1)
         BAS   R8,DFRTN
         NOP   0
EXUT1    L     R2,=A(DDLIN)
         BAS   R8,DFRTN
         NOP   0
EXLIN    L     R0,WRKCL
         L     R1,WRKC
        FREEMAIN R,A=(1),LV=(0)
         L     R0,WRKAL
         L     R1,WRKA
        FREEMAIN R,A=(1),LV=(0)
EXPFE   $PCLOSE
         L     R15,RETCC
        $XRET  CC=(R15)
         EJECT
*        DYNAMIC ALLOCATION ROUTINE.
         SPACE 1
         USING DYNLIST,R2
DFRTN    XC    DSNAME(L'DSNAME),DSNAME
DARTN   $DYNALL (R2)
         LTR   R15,R15
         BZ    4(R8)
         MVC   DYNEDD,DDNAME
         CLI   DSNAME,0
         BE    *+L'*+10
         MVC   DYNETY,=CL4'ALL.'
         B     *+L'*+6
         MVC   DYNETY,=CL4'FREE'
         ST    R0,WORKF
         UNPK  DYNER0(9),WORKF(5)
         TR    DYNER0(8),HEXTR-C'0'
         MVI   DYNER0+8,C'/'
         ST    R15,WORKF
         UNPK  DYNERF(9),WORKF(5)
         TR    DYNERF(8),HEXTR-C'0'
         MVI   DYNERF+8,C')'
         DROP  R2
         LA    R2,DYNERR
         BAS   R7,PMRTN
         BR    R8
         EJECT
*        PUNCH CARD ROUTINE.
         SPACE 1
PURTN    AP    SEQN,=PL1'+1'
         UNPK  72(8,R2),SEQN
         OI    79(R2),C'0'
        $PUNCH (R2),,DDIN
         LTR   R15,R15
         BZ    4(R8)
         MVC   MSGETY,=CL2'OU'
PCRTN    MVC   MSGEDD,DDIN
         SPACE 1
*        ERROR MESSAGE ROUTINE.
         SPACE 1
EMRTN    ST    R15,WORKF
         UNPK  MSGERF(9),WORKF(5)
         TR    MSGERF(8),HEXTR-C'0'
         MVI   MSGERF+8,C')'
         LA    R2,MSGERR
         BAS   R7,PMRTN
         BR    R8
         EJECT
*        PRINT/LOG MESSAGE ROUTINE.
         SPACE 1
PMRTN    TM    SWITCH,SWPE
         BO    PMRTN2+L'PMRTN2
         CP    NLN,=PL2'+50'
         BNH   PMRTN1
         ZAP   NLN,=PL1'+0'
         AP    NPG,=PL1'+1'
         MVC   PTITNP,=XL4'40202120'
         ED    PTITNP,NPG
        $PRINT PTIT,,DDMSG
         LTR   R15,R15
         BNZ   PMRTN2
         MVI   0(R2),C'0'
PMRTN1   AP    NLN,=PL1'+1'
        $PRINT (R2),,DDMSG
         MVI   0(R2),C' '
         LTR   R15,R15
         BZR   R7
PMRTN2   OI    SWITCH,SWPE
         BCTR  R2,0
         XR    R1,R1
         IC    R1,0(R2)
         LA    R2,1(R2)
         CLI   0(R2),C' '
         BNE   *+L'*+6
         BCT   R1,*-12
         BR    R7
         LA    R14,80
         CLR   R1,R14
         BNH   *+L'*+2
         LR    R1,R14
         MVI   PMERR+4,C' '
         MVC   PMERR+5(79),PMERR+4
         BCT   R1,*+L'*+6
         MVC   PMERR+4(*-*),0(R2)
         EX    R1,*-6
        WTO    MF=(E,PMERR)
         BR    R7
         SPACE 1
PMERR   WTO    '----+----1----+----2----+----3----+----4----+----5----+1
               ----6----+----7----+----8',ROUTCDE=11,DESC=7,MF=L
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
WRKA     DC    A(*-*,ITBL,*-*)
WRKAL    DC    F'0'
WRKC     DC    A(*-*,*-*)
WRKCL    DC    F'0'
WRKS     DC    2F'0'
RETCC    DC    F'0'
SVSCAN   DC    F'0'
SVINS1   DC    F'0'
SVINS3   DC    F'0'
SCCRD    DC    A(CARD+1,1,CARD+71)
        CNOP   2,4
PARML    DC    0H'0',AL2(L'PARMT)  ASS.H 1ST PARM. LIST
PARMT    DC    C'XREF,NODECK,NOOBJECT'
        CNOP   2,4
PARMX    DC    0H'0',AL2(L'PARMS)  ASS.H 2ND PARM. LIST
PARMS    DC    C'XREF(SHORT),NODECK,OBJECT'
        CNOP   2,4
PARMLK   DC    0H'0',AL2(L'PARMLKT)     LINK-EDIT PARM. LIST
PARMLKT  DC    C'SIZE=(384K,96K),XREF,LIST,OL'
        CNOP   0,8
WORKF    DC    F'0',H'0'
DDNML    DC    0H'0',AL2(DDNMLE)   ASS.H DD-NAMES LIST
         DC    XL8'0'              1 = SYSLIN
         DC    XL8'0'              2
         DC    XL8'0'              3
         DC    XL8'0'              4 = SYSLIB
DDIN     DC    XL8'0'              5 = SYSIN
DDPRT    DC    XL8'0'              6 = SYSPRINT
         DC    XL8'0'              7 = SYSPUNCH
         DC    XL8'0'              8 = SYSUT1
         DC    XL8'0'              9 = SYSTERM
DDNMLE   EQU   *-(DDNML+L'DDNML)
        CNOP   0,8
ADJVAL   DC    F'0',H'0'
DDNMLK   DC    0H'0',AL2(DDNMLKE)  LINK-EDIT DD-NAMES LIST
         DC    XL8'0'              1 = SYSLIN
MEMBR    DC    XL8'0'              2 = MEMBER NAME
         DC    XL8'0'              3 = SYSLMOD
         DC    XL8'0'              4 = SYSLIB
         DC    XL8'0'              5 =
         DC    XL8'0'              6 = SYSPRINT
         DC    XL8'0'              7 =
         DC    XL8'0'              8 = SYSUT1
         DC    XL8'0'              9 =
         DC    XL8'0'              10 =
         DC    XL8'0'              11 =
         DC    XL8'0'              12 = SYSTERM
DDNMLKE  EQU   *-(DDNMLK+L'DDNMLK)
         EJECT
BLDLLIST DC    0F'0',AL2(1,BLDLLEN)
BLDLNME  DC    CL8' '
BLDLTTR  DC    XL3'0',XL2'0'
BLDLIND  DC    XL1'0'
BLDLUSR  DC    XL62'0'
BLDLLEN  EQU   *-BLDLNME
         SPACE 1
STOWLIST DS    0F
STOWNME  DC    CL8' '              ALIAS NAME
STOWTTR  DC    XL3'0'              TTR
STOWIND  DC    XL1'0'
STOWUSR  DC    XL80'0'
         SPACE 1
        PRINT  NOGEN
PDS     DCB    DDNAME=SYSLMOD,DSORG=PO,MACRF=(R)
        PRINT  GEN
DDMSG    DC    CL8'SYSMSG'
MACNME   DC    CL8' '
LNKNME   DC    CL8' '
HEXTR    DC    CL16'0123456789ABCDEF'
HEXTB    DC    12XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    XL16'FF000000000000FFFFFFFFFFFFFFFFFF'       A-F
         DC    2XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    XL16'00000000000000000000FFFFFFFFFFFF'       0-9
NPG      DC    PL2'+0'
NLN      DC    PL2'+99'
SEQN     DC    PL5'+0'
SWITCH   DC    XL1'0'
SWDS     EQU   X'80'               A DSECT IS ACTIVE
SWAL     EQU   X'80'               AN ALIAS EXIST
SWDF     EQU   X'40'               A DSECT HAS BEEN FOUND
SWDC     EQU   X'40'               A DSECT CONTINUATION FOUND
SWCR     EQU   X'20'               CROSS REFERENCE SECTION
SWMV     EQU   X'20'               MOVE PROCESSING PENDING
SWRL     EQU   X'10'               RESOLVE LOOP CONTROL
SWPU     EQU   X'08'               PUNCH FILE ACTIVE
SWNG     EQU   X'04'               SUPPRESS GENERATE
SWNL     EQU   X'02'               SUPPRESS LINK-EDIT
SWPE     EQU   X'01'               ERROR ON SYSMSG OCCURED
CTLOPC   DC    CL1' '
CTLNME   DC    CL8' '
TRGNME   DC    CL8' '
         EJECT
LINE     DS    0CL121
         DC    CL1' '
SYM      DS    0CL8
LOC      DC    CL6' ',CL3' '
SLN      DC    CL5' ',CL14' '
AD2      DC    CL5' ',CL7' '
LBL      DC    CL8' '
INC      DC    CL72' '
         DC    AL1(L'CARD)
CARD     DC    CL80' '
         SPACE 1
         DC    AL1(L'CTIT)
CTIT     DS    0CL80
CTDN     DC    CL8' ',CL17' TITLE ''GENERATE '
CTNM     DC    CL55' '
         DC    AL1(L'CSTR)
CSTR     DS    0CL80
CSNM     DC    CL8' '
         DC    CL72' START 0'
         DC    AL1(L'CIDT)
CIDT     DS    0CL80
         DC    CL19'         DC    CL8'''
CIDN     DC    CL8' '
         DC    CL53''',C'' '',CL8''&&SYSDATE'',C'' '',CL6''&&SYSTIME'''
         DC    AL1(L'CFLD)
CFLD     DS    0CL80
         DC    CL19'         DC    AL1('
CFTY     DC    CL1' ',CL6'),CL8'''
CLNM     DC    CL8' ',CL6''',XL2'''
CVAL     DC    CL4' ',CL6''',AL2('
CLEN     DC    CL4' ',CL26') '
         DC    AL1(L'CDST)
CDST     DS    0CL80
CDCR     DC    CL8' ',CL7' DC '
CDNX     DC    CL65' '
         DC    AL1(L'CALS)
CALS     DS    0CL80
         DC    CL8' ',CL7' DC '
CALX     DC    CL65' '
         DC    AL1(L'CSPC)
CSPC     DC    CL80'         SPACE 1'
         DC    AL1(L'CDCL)
CDCL     DC    CL80'         DC    AL1(255)'
         DC    AL1(L'CEND)
CEND     DC    CL80'         END'
         EJECT
         DC    AL1(LPTIT)
PTIT     DC    CL112'1GDTU - GENERATE DSECT''S TABLES UTILITY.'
         DC    CL4'PAGE'
PTITNP   DC    CL4' ',C'.'
LPTIT    EQU   *-PTIT
         DC    AL1(LPFMERR)
PFMERR   DC    CL11' ',C'PARM.FIELD ERROR DETECTED AT : '
PFMFLD   DC    CL20' '
LPFMERR  EQU   *-PFMERR
         DC    AL1(LADSERR)
ADSERR   DC    CL11' ',C'ASSEMBLY DSECT ERROR (R15='
ADSERC   DC    CL10' '
LADSERR  EQU   *-ADSERR
         DC    AL1(LCLST)
CLST     DC    CL6' ',C'I -> '
CLSD     DC    CL72' '
LCLST    EQU   *-CLST
         DC    AL1(LUNKNOWN)
UNKNOWN  DC    CL11' ',C'UNKNOWN CONTROL CARD'
LUNKNOWN EQU   *-UNKNOWN
         DC    AL1(LIWCSOV)
IWCSOV   DC    CL11' ',C'INTERNAL WORK-CONTROL SPACE OVERFLOW'
LIWCSOV  EQU   *-IWCSOV
         DC    AL1(LSKIPPED)
SKIPPED  DC    CL11' ',C'SKIPPED CONTROL CARD'
LSKIPPED EQU   *-SKIPPED
         DC    AL1(LIWASOV)
IWASOV   DC    CL11' ',C'INTERNAL WORK-AREAS SPACE OVERFLOW'
LIWASOV  EQU   *-IWASOV
         DC    AL1(LUNRESLV)
UNRESLV  DC    CL11' ',C'UNRESOLVED NAME : '
UNRESLVN DC    CL8' ',C' - BYPASSED (EXPRESSION TOO COMPLEX)'
LUNRESLV EQU   *-UNRESLV
         DC    AL1(LNODSCT)
NODSCT   DC    CL11' ',C'NO DSECT''S SYMBOLS COLLECTED'
LNODSCT  EQU   *-NODSCT
         DC    AL1(LATBERR)
ATBERR   DC    CL11' ',C'ASSEMBLY TABLE ERROR (R15='
ATBERC   DC    CL10' '
LATBERR  EQU   *-ATBERR
         DC    AL1(LLNKERR)
LNKERR   DC    CL11' ',C'LINK-EDIT ERROR (R15='
LNKERC   DC    CL10' ',C'/ MODULE : '
LNKMNM   DC    CL8' '
LLNKERR  EQU   *-LNKERR
         DC    AL1(LMPRMSG)
MPRMSG   DC    CL11' ',C'PROCESSED DSECT TABLE : '
MPRMNM   DC    CL8' '
LMPRMSG  EQU   *-MPRMSG
         DC    AL1(LPDSMSG)
PDSMSG   DC    CL11' ',C'OPEN ERROR / UNABLE TO ADD ALIAS(ES)'
LPDSMSG  EQU   *-PDSMSG
         DC    AL1(LBLDMSG)
BLDMSG   DC    CL11' ',C'BLDL ERROR : R15='
BLDMSGR  DC    CL9' ',C'R0='
BLDMSGC  DC    CL10' '
LBLDMSG  EQU   *-BLDMSG
         DC    AL1(LBLIMSG)
BLIMSG   DC    CL11' ',C'UNEXPECTED INDICATOR BYTE : X'''
BLIMSGI  DC    CL3' ',C' IN PLACE OF X''2C'''
LBLIMSG  EQU   *-BLIMSG
         DC    AL1(LALSMSG)
ALSMSG   DC    CL11' ',C'          ALIAS ADDED : '
ALSNME   DC    CL8' '
LALSMSG  EQU   *-ALSMSG
         DC    AL1(LALSERR)
ALSERR   DC    CL11' ',C'ADD ALIAS ERROR (R15='
ALSERC   DC    CL10' ',C'/ ALIAS : '
ALSERM   DC    CL8' '
LALSERR  EQU   *-ALSERR
         DC    AL1(LDYNERR)
DYNERR   DC    CL11' '
DYNEDD   DC    CL8' ',C' / '
DYNETY   DC    CL4' ',C' ERROR (R0='
DYNER0   DC    CL9' ',C'R15='
DYNERF   DC    CL10' '
LDYNERR  EQU   *-DYNERR
         DC    AL1(LMSGERR)
MSGERR   DC    CL11' '
MSGEDD   DC    CL8' ',C' / '
MSGETY   DC    CL2' ',C'-ERROR (R15='
MSGERF   DC    CL10' '
LMSGERR  EQU   *-MSGERR
         SPACE 2
        LTORG
         SPACE 2
*- - - - - - - END OF BASE REGISTERS ADDRESSABILITY - - - - - - - - - *
         EJECT
DDLIN    DS    0D
         DC    CL8'SYSLIN'         DD-NAME
         DC    CL44'&&LDSET'       DATA-SET NAME
         DC    CL16' '
         DC    CL8'NEW'            STATUS
         DC    CL8'DELETE'         NORMAL TERMINATION
         DC    CL8'DELETE'         ABNORMAL TERMINATION
         DC    CL8'VIO'            UNIT
         DC    CL150' '
         DC    CL5'CYL'            SPACE UNIT
         DC    CL6'1'              PRIMARY QUANTITY
         DC    CL6'1'              SECONDARY QUANTITY
         DC    CL53' '
         DC    CL5'800'            BLOCK SIZE
RLIN     EQU   (DYNLGTH-(*-DDLIN))
         DC    CL(RLIN)' '
         SPACE 1
DDUT1    DS    0D
         DC    CL8'SYSUT1'         DD-NAME
         DC    CL44'&&SYSUT1'      DATA-SET NAME
         DC    CL16' '
         DC    CL8'NEW'            STATUS
         DC    CL8'DELETE'         NORMAL TERMINATION
         DC    CL8'DELETE'         ABNORMAL TERMINATION
         DC    CL8'VIO'            UNIT
         DC    CL150' '
         DC    CL5'CYL'            SPACE UNIT
         DC    CL6'2'              PRIMARY QUANTITY
         DC    CL6'1'              SECONDARY QUANTITY
RUT1     EQU   (DYNLGTH-(*-DDUT1))
         DC    CL(RUT1)' '
         EJECT
DDWK1    DS    0D
         DC    CL8'SYSWK1'         DD-NAME
         DC    CL44'&&DSWK1'       DATA-SET NAME
         DC    CL16' '
         DC    CL8'NEW'            STATUS
         DC    CL8'DELETE'         NORMAL TERMINATION
         DC    CL8'DELETE'         ABNORMAL TERMINATION
         DC    CL8'VIO'            UNIT
         DC    CL150' '
         DC    CL5'TRK'            SPACE UNIT
         DC    CL6'1'              PRIMARY QUANTITY
         DC    CL6'1'              SECONDARY QUANTITY
         DC    CL53' '
         DC    CL5'4000'           BLOCK SIZE
         DC    CL8'PS'             DATA ORGANIZATION
         DC    CL3' '
         DC    CL5'80'             LOGICAL RECORD LENGTH
         DC    CL8'FB'             RECORD FORMAT
RWK1     EQU   (DYNLGTH-(*-DDWK1))
         DC    CL(RWK1)' '
         SPACE 1
DDWK2    DS    0D
         DC    CL8'SYSWK2'         DD-NAME
         DC    CL44'&&DSWK2'       DATA-SET NAME
         DC    CL16' '
         DC    CL8'NEW'            STATUS
         DC    CL8'DELETE'         NORMAL TERMINATION
         DC    CL8'DELETE'         ABNORMAL TERMINATION
         DC    CL8'VIO'            UNIT
         DC    CL150' '
         DC    CL5'CYL'            SPACE UNIT
         DC    CL6'1'              PRIMARY QUANTITY
         DC    CL6'1'              SECONDARY QUANTITY
         DC    CL53' '
         DC    CL5'3993'           BLOCK SIZE
         DC    CL8'PS'             DATA ORGANIZATION
         DC    CL3' '
         DC    CL5'121'            LOGICAL RECORD LENGTH
         DC    CL8'FB  M'          RECORD FORMAT
RWK2     EQU   (DYNLGTH-(*-DDWK2))
         DC    CL(RWK2)' '
         EJECT
DDWK3    DS    0D
         DC    CL8'SYSWK3'         DD-NAME
         DC    CL44'&&DSWK3'       DATA-SET NAME
         DC    CL16' '
         DC    CL8'NEW'            STATUS
         DC    CL8'DELETE'         NORMAL TERMINATION
         DC    CL8'DELETE'         ABNORMAL TERMINATION
         DC    CL8'VIO'            UNIT
         DC    CL150' '
         DC    CL5'CYL'            SPACE UNIT
         DC    CL6'1'              PRIMARY QUANTITY
         DC    CL6'1'              SECONDARY QUANTITY
         DC    CL53' '
         DC    CL5'4000'           BLOCK SIZE
         DC    CL8'PS'             DATA ORGANIZATION
         DC    CL3' '
         DC    CL5'80'             LOGICAL RECORD LENGTH
         DC    CL8'FB'             RECORD FORMAT
RWK3     EQU   (DYNLGTH-(*-DDWK3))
         DC    CL(RWK3)' '
         SPACE 2
        $DYNLIST L=NO,R=NO
        PRINT  NOGEN
        DCBD   DSORG=PO,DEVD=DA
        PRINT  GEN
         EJECT
ITB      DSECT ,                   INTERNAL TABLE ELEMENT
ITBET    DS    XL1                 ELEMENT TYPE
ITBDTY   EQU   0                        DSECT NAME
ITBFTY   EQU   1                        FIELD NAME
ITBBTY   EQU   2                        FLAG NAME
ITBRSP   EQU   127                      RESOLVE PENDING
ITBRES   EQU   128 + ELEMENT TYPE       RESET (PROCESSED)
         SPACE 1
ITBDNM   DS    CL8                 DSECT NAME
ITBDNP   DS    AL4                 NEXT DSECT POINTER
ITBDDS   DS    CL4                 DSECT DISPLACEMENT
         ORG   ITBDNM
ITBFNM   DS    CL8                 FIELD NAME
ITBFDS   DS    CL4                 FIELD DISPLACEMENT
ITBFLG   DS    CL4                 FIELD LENGTH
         ORG   ITBDNM
ITBBNM   DS    CL8                 FLAG NAME
ITBBVL   DS    CL4                 FLAG VALUE
ITBBLG   DS    CL4                 FLAG NAME LENGTH
         SPACE 1
ITBL     EQU   *-ITBET             ELEMENT LENGTH
         SPACE 2
         END
