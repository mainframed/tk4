X016     TITLE 'JES2 - EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* MODULE NAME : EXIT016                                               *
* DESCRIPTIVE NAME : JES2 EXIT 16 (HASPHOPE)                          *
*                    NOTIFY (MAX COND CODE/ABEND CODE SUPPORT)        *
* PURPOSE :     THIS EXIT MODIFIES THE $HASP165 MESSAGE BY ADDING     *
*               EITHER THE MAXIMUM CONDITION CODE OF ALL THE STEPS    *
*               IN A JOB OR THE ABEND CODE OF THE JOB (SET BY     -EU-*
*               EXIT008 IN 'JCTUSER3' FIELD).                     -EU-*
* INVOCATION POINT : EXIT016                                          *
* ENTRY POINT : UEXIT016                                              *
* ENVIRONMENT : JES2 MAIN TASK                                        *
* REGISTERS AT ENTRY :                                                *
*               R0 : A CODE INDICATING IF THIS IS THE FIRST OR        *
*                    SUCCEEDING $HASP165 (JOB NNNNN ENDED - REASON    *
*                    TEXT) MESSAGE :                                  *
*                    =0, INDICATES THAT THIS IS THE FIRST (AND        *
*                        POSSIBLY ONLY) MESSAGE INDICATING THE END    *
*                        OF THE JOB                                   *
*                    =4, INDICATES THAT THIS IS NOT THE FIRST         *
*                        MESSAGE FOR THIS JOB GOING THROUGH THE       *
*                        OUPUT PROCESSOR                              *
*               R1 : ADDRESS OF 3-WORD PARAMETER LIST WITH THE        *
*                    FOLLOWING STRUCTURE :                            *
*                    WORD 1 (+0) ADDRESS OF THE MESSAGE THAT IS TO    *
*                                BE SENT                              *
*                    WORD 2 (+4) ADDRESS OF THE $WTO PARAMETER LIST   *
*                    WORD 3 (+8) ADDRESS OF THE JCT                   *
*               R2-R10 : N/A                                          *
*               R11 : ADDRESS OF THE HCT                              *
*               R12 : N/A                                             *
*               R13 : ADDRESS OF THE OUTPUT PROCESSOR PCE             *
*               R14 : RETURN ADDRESS                                  *
*               R15 : ENTRY ADDRESS                                   *
* REGISTERS ON RETURN :                                               *
*               R0 : N/A                                              *
*               R1 : ADDRESS OF THE 3-WORD PARAMETER LIST             *
*               R15 : A RETURN CODE :                                 *
*                     =0, CONTINUE NORMAL NOTIFY PROCESSING           *
*                     =4, IGNORE ANY OTHER EXITS AND CONTINUE WITH    *
*                         NORMAL NOTIFY PROCESSING                    *
*                     =8, TELLS JES2 NOT TO ISSUE THE NOTIFY $WTO     *
* LINKAGE EDITOR INFO :                                               *
*               ATTRIBUTES : REENTRANT, REUSEABLE, REFRESHABLE        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* AUTHOR :      VIC COZZOLI                                           *
*               WELLS FARGO BANK, N.A. (WFB)                          *
*               525 MARKET STREET, A.U. 8513                          *
*               SAN FRANCISCO, CALIFORNIA 94163                       *
*               PHONE : (415) 396-6376                                *
*                  DATE WRITTEN : NOVEMBER 1983                       *
*                  FMID : HJE2329 (MVS/SP-JES2 1.3.3)                 *
*               ORIGIN : JESMAXCC FROM CBT TAPE 89 FEB, FILE 325.     *
* UPDATES :     BY TOM LITNEY FOR JES2 2.1.5, CHANGES ARE IDENTIFIED  *
*               BY '-TL-' IN LINES (NOW REPLACED BY -EU-).            *
*               BY MOINIL P.A. FOR JES2 2.2.0, CHANGES ARE IDENTIFIED *
*               BY '-EU-' IN LINES.                                   *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* JES2PARM INITIALIZATION STATEMENTS :                                *
*               LOAD=J2XIT016                                         *
*               EXIT016 ROUTINE=UEXIT016,DISABLE,TRACE=YES            *
*                                        ENABLE        NO             *
* JES2 OPERATOR CONTROL COMMANDS :                                    *
*               $T EXIT016,DISABLE,TRACE=YES                          *
*                          ENABLE        NO                           *
*               $D EXIT016                                            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         EJECT
        COPY  $HASPGBL                 COPY HASP GLOBALS
         SPACE 1
J2XIT016 $MODULE TITLE='JES2 - EXIT 016',                          -EU-X
               RPL,                    REQ'D BY $BUFFER            -EU-X
               SSOB,                   REQ'D FOR FLAGS VALUES      -EU-X
               $BUFFER,                REQ'D BY $JCT                   X
               $CMB,                   REQ'D TO MAP $WTO PARM LIST     X
               $HASPEQU,               REQ'D FOR REG CONVENTIONS       X
               $HCT,                   REQ'D BY $SAVE, $RETURN, ETC.   X
               $JCT,                   REQ'D TO GET JOBNAME, ETC.      X
               $MIT,                   REQ'D BY $MODEND, $HCT          X
               $PADDR,                 REQ'D BY $HCT               -EU-X
               $PCE                    REQ'D TO GET PROCESSOR INFO
         TITLE 'JES2 - EXIT 016 - MAX COND CODE/ABEND CODE SUPPORT'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        INITIALIZATION.                                              *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
UEXIT016 $ENTRY BASE=R12               EXIT ROUTINE ENTRY POINT
         SPACE 1
        $SAVE  ,                       SAVE CALLER'S REGISTERS
         LR    R12,R15                 LOAD LOCAL BASE REGISTER
         L     R10,8(R1)               LOAD JCT ADDRESS
         USING JCT,R10                 ESTABLISH ADDRESSABILITY
         XR    R15,R15                 SET DEFAULT RETURN CODE
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CHECK TO SEE IF JOB'S ABEND CODE OR MAXIMUM CONDITION CODE   *
*        HAS BEEN SAVED. IF NOT, RETURN.                              *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CLI   JCTUSER3,X'80'          IS JOB'S ABEND/MAX CC SAVED?-EU-
         BNE   RETURN                  NO, RETURN
         TM    JCTJTFLG,SSJTJFAL       IS MESSAGE TO BE ALTERED?   -EU-
         BO    RETURN                  NO, SKIP, JOB HAS FAILED    -EU-
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        PREPARE TO ALTER THE NOTIFY MESSAGE.                         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         L     R4,4(R1)                GET ADDRESS OF $WTO PARM LIST
         USING CMBWTOPL,R4             ESTABLISH $CMD ADDRESSABILITY
         XR    R5,R5                   ZERO WORK REGISTER
         IC    R5,CMBML                GET MESSAGE LENGTH
         CH    R5,=H'70'               MSG TOO LONG TO UPDATE IN PLACE?
         BH    RETURN                  YES, RETURN (SHOULDN'T HAPPEN)
         L     R6,0(R1)                GET ADDRESS OF MESSAGE TEXT
         AR    R6,R5                   POINT PAST EXISTING MESSAGE TEXT
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CHECK TO SEE IF THE JOB ABENDED.                             *
*        IF IT DID, GET THE ABEND CODE (SYSTEM OR USER).           -EU-
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         TM    JCTJTFLG,SSJTABND       DID JOB ABEND?              -EU-
         BZ    MAXCONDC                NO, GO GET MAXIMUM COND CODE
         LA    R5,6(R5)                INCR. MSG LENGTH            -EU-
         STC   R5,CMBML                STORE NEW LEN IN CMB        -EU-
         MVC   0(6,R6),=CL6' XXXX'     ADD ABEND CODE TO MSG       -EU-
         XR    R2,R2                                               -EU-
         ICM   R2,B'0111',JCTUSER3+1   GET ABEND CODE              -EU-
         SRL   R2,12                   OBTAIN SYSTEM CODE
         LTR   R2,R2                   WAS IT A SYSTEM CODE ABEND?
         BZ    UABEND                  NO, GO PROCESS USER CODE ABEND
         MVI   1(R6),C'S'              SET SYSTEM ABEND IN MSG     -EU-
         B     CVHPRTBL                GO CONVERT TO HEX/PRINTABLE -EU-
UABEND   ICM   R2,B'0011',JCTUSER3+2   GET USER ABEND CODE         -EU-
         MVI   1(R6),C'U'              SET USER ABEND IN MSG       -EU-
CVHPRTBL SRDL  R2,12                   CONVERT IT TO HEX           -EU-
         XR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,2(R6)                       "                    -EU-
         XR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,3(R6)                       "                    -EU-
         XR    R2,R2                          "
         SLDL  R2,4                           "
         IC    R2,CONVTABL(R2)                "
         STC   R2,4(R6)                       "                    -EU-
         B     RETURN                  ALL DONE                    -EU-
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        IF THE JOB ENDED NORMALLY, COME HERE TO ALTER THE NOTIFY     *
*        MESSAGE TO INCLUDE THE MAXIMUM CONDITION CODE FOR ANY        *
*        STEP IN THE JOB.                                             *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
MAXCONDC LA    R5,15(R5)               INCR. MSG LENGTH            -EU-
         STC   R5,CMBML                STORE NEW LEN IN CMB        -EU-
         LH    R2,JCTUSER3+2           GET MAX CONDITION CODE      -EU-
         LA    R3,7(R6)                USE MSG AREA FOR WORK       -EU-
         SRL   R3,3                                                -EU-
         SLL   R3,3                                                -EU-
         CVD   R2,0(R3)                CONVERT TO DECIMAL          -EU-
         MVC   0(3,R6),5(R3)                                       -EU-
         OI    2(R6),X'0F'             SET SIGN                    -EU-
         MVC   3(6,R6),=XL6'402020202120'   SET EDIT MASK          -EU-
         ED    3(6,R6),0(R6)           EDIT FOUR LOW DIGITS        -EU-
         ICM   R2,B'1111',5(R6)        GET EDITED MAX CC           -EU-
         MVC   0(15,R6),=CL15' - MAX CC XXXX' ADD MAX CC TO MSG    -EU-
         STCM  R2,B'1111',10(R6)       SET MAX CC IN MSG           -EU-
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GO BYE-BYE.                                                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         DROP  R4                                                  -EU-
RETURN  $RETURN RC=(R15)               RETURN TO CALLER
         EJECT
CONVTABL DC    CL16'0123456789ABCDEF'  CONVERSION TABLE
         SPACE 1
        LTORG
         SPACE 1                                                   -EU-
PATCH    DC    128S(*)                                             -EU-
         DC    CL8'ENDPATCH'
         SPACE 1
        $MODEND
         SPACE 1
         END
