./     ADD     NAME=TUTGEN
./     NUMBER  NEW1=100,INCR=100
PROC     0 DSN(...ISPF-panels library...) MEM(ISR10000) -
         OUTDSN(&SYSUID..TUT.DATA) OUTMEM(TUTOBRWS) OPT(RUN) AT(NONE)
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
/* CLIST purpose : this procedure will be a help in preparing the   */
/*       TUTOLIST program input to produce a manual from the        */
/*       tutorials ISPF-panels.                                     */
/* Keywords parameters : the default keywords values are set to     */
/*       obtain the BROWSE - ISPF manual.                           */
/*       DSN - the ISPF-panels library name.                        */
/*       MEM - the starting tutorial panel name.                    */
/*       OUTDSN - the private output library name.                  */
/*       OUTMEM - the output member name (TUTOLIST program input).  */
/*       OPT - CLIST execution trace options (LIST, DEBUG or TEST   */
/*             may be specified).                                   */
/*       AT - panel-ID name for CLIST execution processing trace    */
/*             (it is handled only when OPT is not TEST).           */
/* Pre-requisite : MEMSTAT TSO-command must be installed.           */
/* Authors : COLOMBO A. (AMDAHL Italy)                              */
/*           MOINIL P.A. (J.R.C. Ispra/VA, Italy)                   */
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  */
         GLOBAL &ML &COUNT &LVL
         IF &OPT = TEST THEN CONTROL LIST SYMLIST CONLIST
         ELSE IF &AT ^= NONE THEN DO
           IF &AT = &MEM THEN CONTROL LIST SYMLIST CONLIST
           ELSE CONTROL NOLIST NOSYMLIST NOCONLIST
           END
         MEMSTAT '&DSN(&MEM)' NOLIST
         SET &CC = &LASTCC
         IF &CC ^= 0 THEN DO
           IF &CC = 4 THEN WRITE *** MEMBER &MEM NOT FOUND ***
           EXIT CODE(8)
           END
         SET &LVL = &LVL + 1                      /* UP LOCAL LEVEL */
         IF &LVL > 100 THEN DO
           WRITE *** LEVEL : &LVL (PROBABLE LOOP) ***
           SET &LVL = &LVL - 1                  /* DOWN LOCAL LEVEL */
           EXIT CODE(8)                            /* PROBABLE LOOP */
           END
         SET &NAM = &STR(&MEM)
FILL:    IF &LENGTH(&STR(&NAM)) < 8 THEN DO
           SET &NAM = &STR(&NAM)&STR(*)
           GOTO FILL
           END
         SET &MCOU = &LENGTH(&STR(&ML)) / 8
         SET &MNOW = 0
LOOPC:   IF &MNOW = &MCOU THEN GOTO ADDSTR
         SET &MNOW = &MNOW + 1
         SET &HIGH = &MNOW * 8
         SET &LOW  = &HIGH - 7
         IF &SUBSTR(&LOW:&HIGH,&ML) = &STR(&NAM) THEN GOTO TEND
         GOTO LOOPC
ADDSTR:  SET &ML = &STR(&ML)&STR(&NAM)
         SET &COUNT = &COUNT + 1
         IF (&OPT = LIST AND &COUNT//10 = 0) THEN WRITENR &COUNT
         SET &RP = )
         SET &C = &STR(&&)
         SET &ZHTOP = ZHTOP
         SET &ZIND = ZIND
         SET &ZUP = ZUP
         SET &ZCONT = ZCONT
         SET &ZSEL = ZSEL
         IF &OPT = DEBUG THEN WRITENR &MEM
         CONTROL NOMSG
         FREE F(TUT&LVL)
         CONTROL MSG
         ALLOC F(TUT&LVL) DA('&DSN(&MEM)') SHR
         ERROR DO
           SET &CC = &LASTCC
           WRITE *** ERROR-0 / CC : &CC (LEVEL : &LVL) ***
           WRITE *** *** *** MEMBER : &MEM (COUNT : &COUNT) ***
           GOTO OPNERR
           END
         OPENFILE TUT&LVL
         ERROR OFF
AFTER:   ERROR DO
           SET &CC = &LASTCC
           IF &CC EQ 400 THEN GOTO CLOSEUP
           WRITE *** ERROR-1 / CC : &CC (LEVEL : &LVL) ***
           WRITE *** *** *** MEMBER : &MEM (COUNT : &COUNT) ***
           GOTO CLOSEUP
           END
NEXTR:   GETFILE TUT&LVL
         SET &SYSDVAL = &C.TUT&LVL
         READDVAL V1,V2,V3
         IF &OPT = DEBUG THEN WRITE &V1 ^ &V2 ^ &V3
         IF &STR(&V1) = THEN GOTO NEXTR
         IF &STR(&V1) = &ZUP THEN GOTO NEXTR
         IF &STR(&V1) = &ZSEL THEN GOTO NEXTR
         IF &STR(&V1) = &ZHTOP THEN GOTO NEXTR
         IF &STR(&V1) = &ZCONT THEN GOTO TCONT
         IF &CHOICE = YES THEN GOTO INZONE
         IF &STR(&V1) ^= &STR(&RP.PROC) THEN GOTO NEXTR
         SET &CHOICE = YES
         GOTO NEXTR
INZONE:  IF &STR(&V1) = &STR(&RP.END) THEN GOTO CLOSEUP
         IF &STR(&V1) = &STR(&RP) THEN GOTO CLOSEUP
         IF &STR(&V1) = &STR(IF) THEN GOTO NEXTR
         IF &STR(&V1) = &ZIND THEN GOTO INDX
         IF &STR(&V1) = &ZUP THEN GOTO NEXTR
         IF &STR(&V2) = THEN GOTO NEXTR
         IF &SUBSTR(1:1,&V2) = &STR(?) THEN GOTO NEXTR
         IF &SUBSTR(1:1,&V2) = &STR(') THEN GOTO NEXTR
         IF &STR(&V1) = &ZCONT THEN GOTO TCONT
         IF &SUBSTR(1:1,&V2) = &STR(*) THEN DO
           SET &I2 = &LENGTH(&STR(&V2))
           SET &V2 = &SUBSTR(2:&I2,&V2)
           END
         SET &MBN = &STR(&V2)
         GOTO RCLL
TCONT:   IF &LENGTH(&STR(&V2)) > 1 THEN DO
           IF &SUBSTR(1:1,&V2) = &STR(=) THEN DO
             SET &I3 = &LENGTH(&STR(&V2))
             SET &V3 = &SUBSTR(2:&I3,&V2)
             END
           END
         IF &V3 = &ZHTOP THEN GOTO NEXTR
         IF &SUBSTR(1:1,&V3) = &STR(*) THEN DO
           SET &I3 = &LENGTH(&STR(&V3))
           SET &V3 = &SUBSTR(2:&I3,&V3)
           END
         SET &MBN = &STR(&V3)
RCLL:    IF &OPT = DEBUG THEN WRITE LEVEL &LVL ^ &V1 ^ &V2 ^ &V3
         ERROR OFF
         %TUTGEN DSN(&DSN) MEM(&MBN) OPT(&OPT) AT(&AT)
         SET &CC = &LASTCC
         IF &CC = 0 THEN GOTO AFTER
         WRITE *** ERROR-2 / CC : &CC (LEVEL : &LVL) ***
         WRITE *** *** *** MEMBER : &MEM (COUNT : &COUNT) ***
         GOTO LEAVE
INDX:    WRITE *** INDEX &MEM ***
         GOTO NEXTR
OPNERR:  ERROR OFF
LEAVE:   FREE F(TUT&LVL)
         GOTO TEND
CLOSEUP: ERROR OFF
         CLOSFILE TUT&LVL
         FREE F(TUT&LVL)
TEND:    IF &LVL = 1 THEN GOTO GENER
         SET &LVL = &LVL - 1                    /* DOWN LOCAL LEVEL */
         EXIT
GENER:   WRITE *** &COUNT PANELS SCANNED ***
         CONTROL NOMSG
         FREE F(TUTLIST)
         CONTROL MSG ASIS
         ALLOC F(TUTLIST) DA('&OUTDSN(&OUTMEM)') SHR
         OPENFILE TUTLIST OUTPUT
         IF &OPT = LIST THEN WRITE *** START OUTPUT GENERATION ***
         SET &SW1 = 0
         SET &SW2 = 0
         SET &RP = )
         SET &MCOU = &LENGTH(&STR(&ML)) / 8
         SET &MNOW = 0
LOOPOUT: IF &MNOW = &MCOU THEN GOTO ENDMEM
         SET &MNOW = &MNOW + 1
         SET &HIGH = &MNOW * 8
         SET &LOW = &HIGH - 7
         SET &NAM = &SUBSTR(&LOW:&HIGH,&ML)
AGAIN:   SET &HIGH = &LENGTH(&STR(&NAM))
         IF &SUBSTR(&HIGH,&NAM) = &STR(*) THEN DO
           SET &NAM =&SUBSTR(1:&HIGH-1,&NAM)
           GOTO AGAIN
           END
         CONTROL NOMSG
         FREE F(TUTPANEL)
         CONTROL MSG
         ALLOC F(TUTPANEL) DA('&DSN(&NAM)') SHR
         OPENFILE TUTPANEL
FLOOP:   GETFILE TUTPANEL
         SET &SYSDVAL = &TUTPANEL
         READDVAL V1,V2,V3,V4,V5,V6,V7,V8,V9,V10,V11
         IF &LENGTH(&STR(&V1)) < 5 THEN GOTO FLOOP
         IF &SUBSTR(1:5,&V1) = &STR(&RP.ATTR) THEN DO
           SET &ATTR = YES
           GOTO FLOOP
           END
         IF &SUBSTR(1:5,&V1) = &STR(&RP.BODY) THEN DO
           SET &ATTR = NO
           GOTO FLOOP
           END
         IF &ATTR = YES THEN GOTO FLOOP
         IF &STR(&V4) = THEN GOTO SETV5
         IF &LENGTH(&STR(&V4)) <= 1 THEN GOTO CHCKV5
         IF &SUBSTR(1:1,&V4) = &STR(-) THEN GOTO SETV4
CHCKV5:  IF &LENGTH(&STR(&V5)) <= 1 THEN GOTO CHCKV6
         IF &STR(&V5) = THEN GOTO SETV6
         IF &SUBSTR(1:1,&V5) = &STR(-) THEN GOTO SETV5
CHCKV6:  IF &LENGTH(&STR(&V6)) <= 1 THEN GOTO CHCKV7
         IF &STR(&V6) = THEN GOTO SETV7
         IF &SUBSTR(1:1,&V6) = &STR(-) THEN GOTO SETV6
CHCKV7:  IF &LENGTH(&STR(&V7)) <= 1 THEN GOTO CHCKV8
         IF &STR(&V7) = THEN GOTO SETV8
         IF &SUBSTR(1:1,&V7) = &STR(-) THEN GOTO SETV7
CHCKV8:  IF &LENGTH(&STR(&V8)) <= 1 THEN GOTO CHCKV9
         IF &STR(&V8) = THEN GOTO SETV9
         IF &SUBSTR(1:1,&V8) = &STR(-) THEN GOTO SETV8
CHCKV9:  IF &LENGTH(&STR(&V9)) <= 1 THEN GOTO CHCKV10
         IF &STR(&V9) = THEN GOTO SETV10
         IF &SUBSTR(1:1,&V9) = &STR(-) THEN GOTO SETV9
CHCKV10: IF &LENGTH(&STR(&V10)) <= 1 THEN GOTO CHCKV11
         IF &STR(&V10) = THEN GOTO SETV11
         IF &SUBSTR(1:1,&V10) = &STR(-) THEN GOTO SETV10
CHCKV11: IF &LENGTH(&STR(&V11)) <= 1 THEN GOTO WMEM
         IF &STR(&V11) = THEN GOTO WMEM
         IF &SUBSTR(1:1,&V10) = &STR(-) THEN GOTO SETV11
         GOTO WMEM
SETV4:   SET V4 =
SETV5:   SET V5 =
SETV6:   SET V6 =
SETV7:   SET V7 =
SETV8:   SET V8 =
SETV9:   SET V9 =
SETV10:  SET V10 =
SETV11:  SET V11 =
WMEM:    IF &OPT = LIST THEN DO
           WRITE &NAM: &V3 &V4 &V5 &V6 &V7 &V8 &V9 &V10 &V11
           END
         IF &SW1 = 1 THEN GOTO DONE
         SET &SW1 = 1
         IF &STR(&V3) = RESOURCE AND -
           &STR(&V4) = ACCESS AND -
           &STR(&V5) = CONTROL AND -
           &STR(&V6) = FACILITY THEN SET &VT = &STR(RACF)
         ELSE SET &VT = &STR(&V3)
         IF &LENGTH(&STR(&VT)) > 25 THEN GOTO NOXPN
EXPND:   SET &VX = &VX + 1
         SET &BUILD = &STR(&STR(&BUILD) &SUBSTR(&VX,&VT))
         IF &LENGTH(&STR(&VT)) > &VX THEN GOTO EXPND
         SET TUTLIST = &STR(*MNT&BUILD - ISPF)
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*HIX&BUILD - INDEX)
         GOTO STRMN
NOXPN:   SET TUTLIST = &STR(*MNT &VT - ISPF)
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*HIX &VT - INDEX)
STRMN:   PUTFILE TUTLIST
         SET TUTLIST = &STR(*VAR ZCMD)
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP 'OPTION  ===>   ')
         PUTFILE TUTLIST
         IF &VT = BROWSE THEN GOTO BRWS
         SET TUTLIST = &STR(*REP 'COMMAND ===>   ')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP '(continued on next page)')
         PUTFILE TUTLIST
         GOTO DONE
BRWS:    SET &SW2 = 1
         SET TUTLIST = &STR(*REP '&STR(&&)ZNONDSPX' '.')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP 'ZNONDSPX ' '        .')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP 'ZCHARCNL ' '     NOCC')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP '&STR(&&)ZCINFO' ' do not')
         PUTFILE TUTLIST
DONE:    SET &TUTLIST= &STR(*HDR &V3 &V4 &V5 &V6 &V7 &V8 &V9 &V10 &V11)
         IF &STR(&TUTLIST) = &STR(&OLDTIT) THEN GOTO ONLYMEM
         IF &STR(&TUTLIST) = THEN GOTO ONLYMEM
         SET &OLDTIT = &TUTLIST
         PUTFILE TUTLIST
ONLYMEM: SET &TUTLIST = &NAM
         PUTFILE TUTLIST
         IF &SW2 = 0 THEN GOTO CLOSP
         SET &SW2 = 0
         SET TUTLIST = &STR(*RZR)
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP 'OPTION  ===>   ')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP 'COMMAND ===>   ')
         PUTFILE TUTLIST
         SET TUTLIST = &STR(*REP '(continued on next page)')
         PUTFILE TUTLIST
CLOSP:   CLOSFILE TUTPANEL
         FREE F(TUTPANEL)
         GOTO LOOPOUT
ENDMEM:  CLOSFILE TUTLIST
         FREE F(TUTLIST)
         WRITE *** GENERATED OUTPUT IN ===> '&OUTDSN(&OUTMEM)' ***
         EXIT
./     ENDUP
