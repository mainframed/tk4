X001     TITLE 'JES2 - EXIT 001 - PRINT/PUNCH SEPARATORS'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* MODULE NAME : EXIT001                                               *
* DESCRIPTIVE NAME : JES2 EXIT 1 (HASPPRPU)                           *
*                    JES2 PRINT/PUNCH SEPARATORS                      *
*                    (LOCAL SEPARATORS)                               *
* PURPOSE :     THIS JES2 EXIT ALLOWS TO PRODUCE LOCAL PRINT/PUNCH    *
*               SEPARATORS AND TO CONTROL PRODUCTION OF STANDARD      *
*               PRINT/PUNCH SEPARATORS.                               *
* INVOCATION POINT : EXIT001                                          *
* ENTRY POINT : UEXIT001                                              *
* ENVIRONMENT : JES2 MAIN TASK                                        *
* REGISTERS AT ENTRY :                                                *
*               R0 : A CODE INDICATING WHETHER A HEADER PAGE OR CARD, *
*                    CONTINUATION PAGE, OR TRAILER PAGE IS BEING      *
*                    PROCESSED                                        *
*                    0 = A START-OF-JOB PAGE OR CARD                  *
*                    4 = A CONTINUATION-OF-JOB PAGE                   *
*                    8 = A TRAILER PAGE OR CARD                       *
*               R1 : ADDRESS OF THE PRINTER OR PUNCH DCT              *
*               R2-R9 : N/A                                           *
*               R10 : ADDRESS OF THE JCT                              *
*               R11 : ADDRESS OF THE HCT                              *
*               R12 : N/A                                             *
*               R13 : ADDRESS OF THE PCE                              *
*               R14 : RETURN ADDRESS                                  *
*               R15 : ENTRY ADDRESS                                   *
* REGISTERS ON RETURN :                                               *
*               R0-R1 : N/A                                           *
*               R15 : A RETURN CODE :                                 *
*                     =0, CONTINUE USING ANY ADDITIONAL EXITS AND     *
*                         PRODUCE STANDARD SEPARATOR IF IN EFFECT     *
*                     =4, CONTINUE WITHOUT USING ANY ADDITIONAL EXITS *
*                         AND PRODUCE STANDARD SEPARATOR IF IN EFFECT *
*                     =8, ALWAYS SUPPRESS STANDARD SEPARATOR          *
*                     =12, ALWAYS PRODUCE STANDARD SEPARATOR          *
* LINKAGE EDITOR INFO :                                               *
*               ATTRIBUTES : REENTRANT, REUSEABLE, REFRESHABLE        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* AUTHOR :      JOHN V. HOOPER                                        *
*               FIRST UNION NATIONAL BANK                             *
*               301 SOUTH TRYON STREET                                *
*               CHARLOTTE, N.C. 28288                                 *
*               (704) 374-2427                                        *
*               ORIGIN : J001$SP FROM CBT TAPE 89 FEB, FILE 381.      *
* CHANGES :     DONE BY MOINIL P.A.                                   *
*               THE ORIGINAL CODING HAS BEEN TAKEN AS BASIS TO        *
*               IMPLEMENT OUR LOCAL/REMOTE PRINT SEPARATOR.           *
*               MOST OF THE CODE HAS BEEN COPIED FROM THE ORIGINAL    *
*               IN JES2, AS BELOW :                                   *
*                    1. PRINTID : SEPARATOR PAGE ROUTINE              *
*                    2. PBLOCK : BLOCK LETTER ROUTINE                 *
*                    3. PPDATE : FORMAT DATE ROUTINE                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
* JES2PARM INITIALIZATION STATEMENTS :                                *
*               LOAD=J2XIT001                                         *
*               EXIT001 ROUTINE=UEXIT001,DISABLE,TRACE=YES            *
*                                        ENABLE        NO             *
*                                                                     *
* JES2 OPERATOR CONTROL COMMANDS :                                    *
*               $T EXIT001,DISABLE,TRACE=YES                          *
*                          ENEABLE       NO                           *
*               $D EXIT001                                            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         EJECT
         COPY  $HASPGBL
         SPACE 1
J2XIT001 $MODULE ENVIRON=JES2,TITLE='JES2 - EXIT 001',                 X
               $BUFFER,            GENERATE HASP BUFFER DSECT          X
               $DCT,               GENERATE HASP DCT DSECT             X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $HCT,               GENERATE HASP HCT DSECT             X
               $HFAME,             GENERATE HASP FAME DSECT            X
               $JCT,               GENERATE HASP JCT DSECT             X
               $JOE,               GENERATE HASP JOE DSECT             X
               $MIT,               GENERATE HASP MIT DSECT             X
               $PADDR,             GENERATE HASP PADDR DSECT           X
               $PCE,               GENERATE HASP PCE DSECT             X
               $PDDB,              GENERATE HASP PDDB DSECT            X
               $PPPWORK,           GENERATE HASP PPPWORK DSECT         X
               $RDT,               GENERATE HASP RDT DSECT             X
               $SCAT,              GENERATE HASP SCAT DSECT            X
               $SVT,               GENERATE HASP SSVT DSECT            X
               $XECB,              GENERATE HASP XECB DSECT            X
               RPL,                GENERATE MVS RPL DSECT              X
               UCB                 GENERATE MVS UCB DSECT
         TITLE 'JES2 - EXIT 001 - PRINT/PUNCH SEPARATORS'
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        EXIT MAIN ENTRY POINT.                                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
UEXIT001 $ENTRY BASE=R12
        $SAVE  ,                   SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD BASE REGISTER
         LR    R7,R0               SAVE INPUT PARAMETER
         LR    R9,R1               SAVE INPUT DCT ADDRESS
         USING DCT,R9              SET ADDRESSABILITY TO DCT
         USING JCT,R10             SET ADDRESSABILITY TO JCT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CHECK IF SEPARATOR MUST BE PRODUCED.                         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         TM    PCEID,PCEPUSID      SEE IF THIS IS A PUNCH
         BO    EXIT0               YES, GET OUT
         TM    DCTPPSW,DCTPPSWS    SEE IF SEPARATORS REQUESTED
         BO    EXIT0               NO, GET OUT
         XR    R6,R6
         IC    R6,$TPIDCT          REMOTE SEPARATOR LINE COUNT
         TM    PCEID,PCELCLID      TEST FOR LOCAL PRINTER
         BZ    *+L'*+4             BRANCH IF NOT
         IC    R6,$PRIDCT          LOCAL SEPARATOR LINE COUNT
         LTR   R6,R6               IS LINE COUNT ZERO?
         BNP   EXIT0               YES, GET OUT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GET A WORK BUFFER (FIX IN STORAGE).                          *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        $GETBUF TYPE=HASP,FIX=YES,WAIT=YES GET A WORK BUFFER
         LR    R8,R1               SAVE ADDRESS OF BUFFER
         USING WRKDSECT,R8         SET ADDRESSABILITY TO WORK-AREA
         LA    R14,WRKDSECT+(BUFSTART-BFPDSECT) SET 'TO' ADDRESS
         LH    R15,$BUFSIZE        SET 'TO' LENGTH
         XR    R0,R0               CLEAR 'FROM' ADDRESS
         XR    R1,R1               CLEAR 'FROM' LENGTH
         MVCL  R14,R0              CLEAR THE BUFFER
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        SEND A PDIR IN CASE IT IS AN SNA REMOTE                      *
*        (IF NOT, THE REQUEST IS IGNORED).                            *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        $SEPPDIR (R8)              SEND A PDIR FOR SNA RMT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GENERATE BLOCK LETTERS (1) OUTPUT.                           *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         MVI   CCMB,C' '           INITIALIZE TO BLANK
         CH    R7,=H'8'            TRAILER PAGE?
         BE    GBL1O1              YES, DON'T EJECT PAGE
         MVI   CCMC,X'8B'          EXECUTE AN EJECT PAGE
        $PRPUT DATA=CCM,LEN=L'CCM,COUNT=1,WAIT=YES,CC=M
GBL1O1   CLM   R6,B'0001',=AL1(21) AT LEAST 21 LINES AVAILABLE?
         BL    PDEST               BRANCH IF LESS
         LA    R0,13               ACCOUNT FOR BLOCK LETTERS (1)
         SLR   R6,R0
         MVC   SSRWK(4),JCTROOMN   GET ROOM NUMBER
         MVC   SSRWK+4(4),=CL8' '
         CLC   JCTROOMN,$ZEROES    IS ROOM MEANINGFUL?
         BNE   GBL1O3              IF YES, USE ROOM NUMBER
         CLI   JCTJOBID,C'J'       IS THIS A JOB?
         BNE   GBL1O2              IF NOT, USE SYSTEM ROOM NUMBER
         XR    R1,R1               CLEAR OUT REGISTER FOR CONVERSION
         MVI   SSRWK,C'N'          INDICATE NODE
         ICM   R1,B'0011',JCTRNODE USE NODE ORIGIN
         BZ    *+L'*+10            BRANCH IF NONE
         CLC   $OWNNODE,JCTRNODE   IS IT OURSELF
         BNE   *+L'*+12            BRANCH IF NOT
         MVI   SSRWK,C'R'          INDICATE REMOTE
         ICM   R1,B'0011',JCTRRMT  USE REMOTE ORIGIN
         BZ    GBL1O2              IF NONE, USE SYSTEM ROOM NUMBER
         CVD   R1,$DWORK           CONVERT ROUTING TO DECIMAL
         MVC   $DOUBLE(6),=XL6'402120202020' MOVE IN EDIT PATTERN
         ED    $DOUBLE(6),$DWORK+5 EDIT ROUTE FOR PRINTING
         MVC   SSRWK+2(4),$DOUBLE+2 MOVE IN PLACE ROUTE CODE
         B     GBL1O3              GO IN PEACE
GBL1O2   MVC   SSRWK(4),=C'0022'   SHOW TO SYSTEM PROGRAMMERS
GBL1O3   XC    LNCNTR,LNCNTR       SET START BLOCK LETTERS
         MVI   PBLOPT,0            SET NO SLANT - NO CENTERING
GBL1O4   BAS   R14,PBLOCK          CALL BLOCK ROUTINE
         LR    R5,R15              RETAIN LINE NUMBER
         CH    R5,=H'1'            FIRST LINE OF BLOCK LETTERS?
         BNE   *+L'*+10            BRANCH IF NOT
         MVC   BLLINFO(L'JCTPNAME),JCTPNAME SET PROGRAMMER NAME
         B     GBL1O5
         CH    R5,=H'3'            3RD LINE OF BLOCK LETTERS?
         BNE   GBL1O5              BRANCH IF NOT
         MVC   BLLINFO(10),=CL10'JOB NAME :'
         MVC   BLLINFO+11(L'JCTJNAME),JCTJNAME SET JOB NAME
GBL1O5  $PRPUT DATA=BLL,LEN=L'BLL,COUNT=1,WAIT=YES
         CH    R5,=H'12'           LAST LINE OF BLOCK LETTERS?
         BNE   GBL1O4              LOOP IF NOT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GENERATE BLOCK LETTERS (2) OUTPUT.                           *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CLM   R6,B'0001',=AL1(23) AT LEAST 23 LINES AVAILABLE?
         BL    PSKIP               BRANCH IF LESS
         LA    R0,15               ACCOUNT FOR BLOCK LETTERS (2)
         SLR   R6,R0
         MVI   CCMC,X'1B'          EXECUTE SPACE 3 LINES
        $PRPUT DATA=CCM,LEN=L'CCM,COUNT=1,WAIT=YES,CC=M
         MVC   SSRWK,=CL8' '
         MVC   SSRWK(1),JCTJOBID   GET JOB TYPE
         MVC   SSRWK+1(4),JCTJOBID+4 AND JOB NUMBER
         CLI   SSRWK+1,C' '        LEFT-
         BNE   *+L'*+10              JUSTIFY
         MVC   SSRWK+1(4),SSRWK+2      JOB
         B     *-14                      NUMBER
         L     R1,PPPWKJOE         ADDRESS WORK-JOE
         USING JOE,R1              ACTIVATE JOE ADDRESSABILITY
         MVC   SSRWK+6(1),JOECURCL GET SYSOUT CLASS
         DROP  R1
         XC    LNCNTR,LNCNTR       SET START BLOCK LETTERS
         MVI   PBLOPT,0            SET NO SLANT - NO CENTERING
GBL2O1   BAS   R14,PBLOCK          CALL BLOCK ROUTINE
         LR    R5,R15              RETAIN LINE NUMBER
        $PRPUT DATA=BLL,LEN=L'BLL,COUNT=1,WAIT=YES
         CH    R5,=H'12'           LAST LINE OF BLOCK LETTERS?
         BNE   GBL2O1              LOOP IF NOT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GENERATE BLOCK LETTERS (3) OUTPUT.                           *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CLM   R6,B'0001',=AL1(32) AT LEAST 32 LINES AVAILABLE?
         BL    PSKIP               BRANCH IF LESS
         LA    R0,24               ACCOUNT FOR BLOCK LETTERS (3)
         SLR   R6,R0
         LA    R5,4                FOUR TIMES
GBL3O1   MVI   CCMC,X'1B'          EXECUTE SPACE 3 LINES
        $PRPUT DATA=CCM,LEN=L'CCM,COUNT=1,WAIT=YES,CC=M
         BCT   R5,GBL3O1
         MVC   SSRWK,JCTJNAME      GET JOB NAME
         XC    LNCNTR,LNCNTR       SET START BLOCK LETTERS
         MVI   PBLOPT,PBLOSL       SET SLANT - NO CENTERING
GBL3O2   BAS   R14,PBLOCK          CALL BLOCK ROUTINE
         LR    R5,R15              RETAIN LINE NUMBER
        $PRPUT DATA=BLL,LEN=L'BLL,COUNT=1,WAIT=YES
         CH    R5,=H'12'           LAST LINE OF BLOCK LETTERS?
         BNE   GBL3O2              LOOP IF NOT
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GENERATE THE HEADER PRINT LINE OUTPUT.                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PSKIP    LA    R0,2                ACCOUNT FOR SPACE 2 LINES
         SLR   R6,R0
         MVI   CCMC,X'13'          EXECUTE SPACE 2 LINES
        $PRPUT DATA=CCM,LEN=L'CCM,COUNT=1,WAIT=YES,CC=M
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CONVERT JOEROUT TO EBCIDIC FOR PRINT SEPERATOR PAGES         *
*        THE ROUTE IS FIRST CHECKED TO SEE IF THERE IS A              *
*        DESTID THAT MATCHES THE ROUTE. IF A DESTID IS FOUND THEN     *
*        THAT NAME IS MOVED TO THE HEADER LINE. IF MORE THAN ONE      *
*        DESTID IS FOUND FOR A ROUTE THEN THE ROUTE IS CONVERTED      *
*        ACCORDING TO THE FOLLOWING FORMAT                            *
*              RNNNN (REMOTE)                                         *
*              UNNNN (SPECIAL LOCAL)                                  *
*              'LOCAL' (LOCAL DEVICE)                                 *
*              CCCCCCCC (DESTID)                                      *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PDEST    L     R1,$SVT             GET THE SVT ADDRESS AND
         LM    R14,R15,SVTRDT-SVT(R1) THEN FIRST/LAST DESTID
         L     R5,PPPWKJOE         ADDRESS WORK JOE
         USING JOE,R5              ACTIVATE JOE ADDRESSABILITY
         MVI   $DOUBLE,0           INDICATE NO DESTID YET
         USING RDT,R14             ACTIVATE RDT ADDRESSABILITY
PDESTLOP CLR   R14,R15             PAST THE END OF THE TABLE...
         BH    PDESTTR1            YES, BRANCH TO CONVERSION RTN
         L     R2,RDTROUTE         LOAD COMPLETE ROUTE CODE
         TM    RDTFLAG,RDTFLAGR    TEST FOR REMOTE
         BZ    PDESTNRT            BRANCH IF NOT REMOTE
         TM    RDTFLAG,RDTFLAGN    IS NODE SPECIFIED
         BO    PDESTNRT            YES THEN BYPASS
         ICM   R2,B'1100',$OWNNODE PROVIDE DEFAULT NODE
PDESTNRT CL    R2,JOEROUT          A DESTID FOR THIS JOE
         BNE   PDESTSKP            NO, GO CHECK THE NEXT ONE
         CLI   $DOUBLE,0           HAVE DESTID FOR JOE YET...
         BNE   PDESTTR             YES, GO FORM JOE DEST
         MVC   $DOUBLE,RDTNAME     NO, MOVE DESTID FROM RDT
PDESTSKP LA    R14,RDTSIZ(,R14)    GET ADDRESS OF NEXT RDT
         B     PDESTLOP            BRANCH TO CONTINUE CHECKING
         DROP  R14                 DROP RDT ADDRESSABILITY
PDESTTR1 CLI   $DOUBLE,0           SINGLE DESTID FOR JOE...
         BNE   BLKSKIP             YES, SKIP DEST FORMULATION
PDESTTR  CLC   JOEREMOT,$ZEROS     IS THIS A LOCAL JOE...
         BE    PDESTLOC            YES, BRANCH TO LOCAL CONVERSION
         LH    R15,JOEREMOT        PLACE ROUTE INTO REGISTER
         CVD   R15,$DOUBLE         CONVERT ROUTING TO DECIMAL
         MVC   $DWORK(6),=XL6'402120202020' MOVE IN PATTERN
         ED    $DWORK(6),$DOUBLE+5          AND EDIT ROUTING
         MVC   $DOUBLE(5),$DWORK+1            VALUE INTO
         MVC   $DOUBLE+5(3),$BLANKS             $DOUBLE
         CLC   JOERNODE,$ZEROS     CHECK FOR UNIT SPECIFICATION
         BE    PSPUNIT             BR TO MOVE IN 'U' LABEL
         MVI   $DOUBLE,C'R'        INDICATE ROUTED TO REMOTE
         B     BLKSKIP             MOVE ROUTE INTO HDRLINE
PSPUNIT  MVI   $DOUBLE,C'U'        INDICATE SPECIAL LOCAL ROUTINE
         B     BLKSKIP             GO MOVE ROUTE INTO HDRLINE
PDESTLOC MVC   $DOUBLE,=C'LOCAL   ' MOVE LOCAL TO WORK AREA
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        BUILD THE HEADER PRINT LINE.                                 *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
BLKSKIP  MVI   HDR,C' '            BLANK HEADER LINE
         MVC   HDR+1(L'HDR-1),HDR
         MVI   HDRFRAME,C'*'       SETUP FRAME CHARACTER
         MVC   HDRJROUT,$DOUBLE    SET JOE ROUTING INFO IN HDR
         MVC   HDRCLASS,JOECURCL   SYSOUT CLASS
         MVC   HDRJNAME,JOENAME    JOE OUTPUT NAME
         LH    R1,JOEID1           GET THE 1ST JOEID
         CVD   R1,SSRWK            CONVERT TO PRINTABLE FORM
         UNPK  HDRJID1,SSRWK+5(3)  SET NUMBER TO EBCDIC
         OI    HDRJID1+2,C'0'      SET SIGN TO EBCDIC
         LH    R1,JOEID2           GET THE 2ND JOEID
         CVD   R1,SSRWK            CONVERT TO PACKED DECIMAL
         UNPK  HDRJID2,SSRWK+5(3)  SET NUMBER TO EBCDIC
         OI    HDRJID2+2,C'0'      SET SIGN TO EBCDIC
         DROP  R5                  DROP JOE ADDRESSABILITY
         LTR   R7,R7               TEST FORM TYPE
         BNZ   GHPL1
         MVC   HDRFORM,=CL5'START' START-OF-JOB PAGE
         B     GHPL3
GHPL1    CH    R7,=H'4'            TEST FORM TYPE
         BNE   GHPL2
         MVC   HDRFORM,=CL5'CONT.' CONTINUATION-OF-JOB PAGE
         B     GHPL3
GHPL2    MVC   HDRFORM,=CL5' END ' TRAILER PAGE
GHPL3    MVC   HDRNUM,JCTJOBID     JOB NUMBER
         MVC   HDRNAME,JCTJNAME    JOB NAME
         MVC   HDRSYS,$SID         SYSTEM ID
         MVC   HDRPNAME,JCTPNAME   PROGRAMMER NAME
         MVC   HDRRKEY,=C'ROOM'    THE ROOM LABEL
         MVC   HDRROOM,JCTROOMN    ROOM NUMBER
        TIME   DEC                 GET TIME AND DATE
         MVC   HDRTIME,=XL11'21204B20204B202040C1D4' EDIT TIME MASK
         CL    R0,=A(X'12000000')  TEST TIME
         BL    PMORNING            BRANCH IF AM
         MVI   HDRAM,C'P'          CHANGE FROM AM TO PM
         SL    R0,=A(X'12000000')  SUBTRACT TWELVE HOURS
PMORNING ST    R0,SSRWK            STORE ADJUSTED TIME
         CLI   SSRWK,0             TEST FOR ZERO HOURS
         BNE   PADJERR             BR IF NOT TO TEST ADJUSTMENT ERROR
         MVI   SSRWK,X'12'         CONVERT ZERO TO TWELVE
PADJERR  TM    SSRWK,X'08'         TEST FOR ADJUSTMENT ERROR
         BZ    PEDTIME             BRANCH IF NO ERROR
         NI    SSRWK,X'09'         CORRECT FOR BINARY SUBTRACT ERROR
PEDTIME  ED    HDRPTTN,SSRWK       EDIT TIME INTO PROPER FIELD
         BAS   R14,PPDATE          CONVERT DATE TO ' DD MMM YY'
         MVC   HDRDATE,DDMMMYY+1   SET TO DD DAY MMM MONTH YY YEAR
         MVC   HDRDNAME,DCTDEVN    DEVICE NAME
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        CHECK FOR 2770 REMOTE TERMINAL WITHOUT THE BUFFER            *
*        EXPANSION FEATURES. SINCE ITS MAXIMUM LENGTH IS 120          *
*        BYTES, LEAVE ANY FIELDS PAST 120 BYTES AS BLANKS.            *
*        NOTE THAT BSC PUT PROCESSING TRUNCATES TRAILING BLANKS       *
*        SO THE SEPARATOR CCW STILL INDICATES A LENGTH OF 132.        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         TM    PCEID,PCERJEID      TEST PROCESSOR TYPE
         BNO   PRINORJE            BRANCH IF NOT REMOTE
         CLI   MDCTTYPE,DCTP2780   TEST TERMINAL TYPE
         BNL   PRINORJE            SKIP NEXT IF NOT 2770
         TM    MDCTFEAT,DCTPABEX   TEST 2770 BUFFER SIZE
         BO    PRINORJE            BRANCH IF 512
         TM    MDCTFEAT,DCTPBEXP   TEST 2770 BUFFER SIZE
         BO    PRINORJE            BRANCH IF 256
         B     PRIDOUT             ASSUME 128 BUFFER SIZE AND SKIP REST
PRINORJE MVC   HDRFORMX,HDRFORM    SET FORM TYPE
         MVC   HDRFRAMX(1),HDRFRAME SET END FRAME CHARACTER
         MVC   HDRCLASX,HDRCLASS   SET END CLASS
PRIDOUT  TM    $PRTOPTS,$PRTRANS   IF TRANSLATION NOT REQ'D,
         BZ    PRIDNTR             DON'T DO IT
         CLC   PPPDEVTP+2(2),=AL1(UCB3UREC,UCB3211) LOCAL 3211...
         BE    PRIDNTR             BRANCH IF YES
         CLC   PPPDEVTP+2(2),=AL1(UCB3UREC,UCB3800) 3800 PRINTER...
         BE    PRIDNTR             BRANCH IF YES
         CLC   PPPDEVB2(2),=AL1(UCB3UREC,UCB3203) LOCAL 3203...
         BE    PRIDNTR             BRANCH IF A 3203
         L     R15,DCTPRTRN        TRANSLATE UNPRINTABLES
         TR    HDR(L'HDR),0(R15)     TO BLANKS
PRIDNTR $PRPUT DATA=HDR,LEN=L'HDR,COUNT=1,WAIT=YES
         BCT   R6,PRIDNTR          GENERATE SEPARATOR PAGE HEADER
         TM    PPPFLAG1,PPP1NEWS   JES2-NEWS AVAILABLE...
         BO    EXIT8               SKIP EJECT IF YES
         CH    R7,=H'8'            TRAILER PAGE?
         BE    EXIT8               YES, DON'T EJECT PAGE
         MVI   CCMC,X'8B'          EXECUTE AN EJECT PAGE
        $PRPUT DATA=CCM,LEN=L'CCM,COUNT=1,WAIT=YES,CC=M
         B     EXIT8
         SPACE 1
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        GO BYE-BYE.                                                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
EXIT0    XR    R15,R15             SET RETURN CODE TO 0
        $RETURN RC=(R15)           RETURN TO JES2
         SPACE 1
EXIT8   $FREEBUF (R8)              FREE WORK BUFFER
         LA    R15,8               SET RETURN CODE TO 8
        $RETURN RC=(R15)           RETURN TO JES2
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        P B L O C K - BLOCK LETTERS ROUTINE.                         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        (IT GENERATES 12 LINES IN SEQUENCE)                          *
*              R1-R4 = WORK REGISTERS.                                *
*              R14 = LINK REGISTER.                                   *
*        AT ENTRY : LNCNTR = 0                                        *
*                   SSRWK = 1-8 CHARACTERS TO BE BLOCK LETTERED       *
*                   PBLOPT = DESIRED SLANT-CENTERING OPTIONS          *
*                   (MUST BE SET ONLY THE FIRST TIME, THEN MUST BE    *
*                   LEFT UNCHANGED UNTIL THE END OF BLOCK LETTERS)    *
*        AT EXIT : R15 = CURRENT LINE NUMBER (1-12)                   *
*                  BLL = GENERATED LINE                               *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PBLOCK   LH    R4,LNCNTR           GET CURRENT LINE COUNT
         LTR   R4,R4               TEST IF CURRENT LINE COUNT SET
         BNZ   PBL1                YES, CONTINUE
         MVC   BLKWK,SSRWK         SAVE TEXT
         OC    SSRWK(8),=8X'C0'    SHIFT ALL TEXT TO 4TH QUADRANT
         L     R15,=A(BLOCKTR)
         TR    SSRWK(8),0(R15)     TRANSLATE TO INDEX VALUE
PBL1     MVI   BLL,C' '            FILL LINE WITH BLANKS
         MVC   BLL+1(L'BLL-1),BLL
         MVI   BLLFRAME,C'*'       SET UP FRAME CHARACTERS
         MVI   BLLFRAMX,C'*'
         L     R1,PPPWKJOE         ADDRESS WORK-JOE
         USING JOE,R1              SET JOE ADDRESSABILITY
         MVC   BLLCLASS(1),JOECURCL SYSOUT CLASS
         DROP  R1                  DROP ADDRESSABILITY
         MVC   BLLCLASX(1),BLLCLASS REPEAT SYSOUT CLASS
         LA    R2,BLL+4            ASSUME NO CENTERING
         TM    PBLOPT,PBLOCN       CENTERING SPECIFIED...
         BNO   PBL4                NO, GO CHECK FOR SLANT
         LA    R3,7                SCAN FOR
PBL2     LA    R1,BLKWK(R3)          LAST
         CLI   0(R1),C' '              NON-
         BNE   PBL3                      BLANK
         BCT   R3,PBL2                     CHARACTER
PBL3     LA    R3,1(,R3)           COMPUTE
         MH    R3,=H'7'              BEGINNING
         SH    R3,=Y((L'BLL/2)-1)      PRINT POSITION
         LCR   R3,R3                     TO CENTER
         LA    R2,BLL(R3)                  BLOCK LETTERS
PBL4     TM    PBLOPT,PBLOSL       TEST FOR SLANTING OPTION
         BNO   PBL6                BRANCH IF NO
         TM    PBLOPT,PBLOCN       RE-TEST FOR CENTERING
         BO    PBL5                BRANCH IF CENTERING
         LA    R2,5(,R2)           ADD MORE ROOM FOR SLANT
PBL5     LA    R2,6(,R2)           SLANT
         SRL   R4,1                  BLOCK
         SLR   R2,R4                   LETTERS
PBL6     XR    R4,R4               SET FOR A LETTER INDEX OF 0
PBL7     XR    R1,R1               CLEAR REGISTER
         IC    R1,BLKWK(R4)        USE RELATIVE TEXT LETTER
         STC   R1,PBLCHR             TO FORM BLOCK TEXT
         IC    R1,SSRWK(R4)        GET TRANSLATED LETTER INDEX
         LTR   R1,R1               TEST IT
         BZ    PBL8                BRANCH IF INDEX ZERO
         BCTR  R1,0                DECREMENT BY ONE
         MH    R1,=Y(L'BLOCKTB)    CONVERT TO DISPLACEMENT
         AH    R1,LNCNTR           SELECT FOR LINE WITHIN LETTER
         AL    R1,=A(BLOCKTB)      LETTER MASK ADDRESS
         ICM   R1,B'1100',0(R1)    LETTER MASK BITS
PBL8     LA    R3,12               BLOCK WIDTH OF 12
PBL9     ALR   R1,R1               SHIFT LEFT AND TEST HIGH BIT
         BC    12,PBL10            BRANCH IF OFF
         MVC   0(1,R2),PBLCHR      OVERSTORE BLANK TO FORM BLOCK
PBL10    LA    R2,1(,R2)           INCREMENT COL NUMBER
         BCT   R3,PBL9             BRANCH TO FILL 12 COL'S
         LA    R2,2(,R2)           2 BLANKS BETWEEN BLOCKS
         LA    R4,1(,R4)           STEP TO NEXT LETTER INDEX
         CL    R4,=F'8'            TEST IF 8 BLOCKS DONE
         BL    PBL7                BRANCH IF NO
         LH    R4,LNCNTR           GET CURRENT LINE COUNTER
         LA    R4,2(,R4)           STEP TO NEXT LINE
         LR    R15,R4              PASS BACK CURRENT LINE NUMBER
         SRL   R15,1
         CH    R4,=H'24'           LAST LINE FINISHED
         BL    PBL11               BRANCH IF NO
         XR    R4,R4               RESET LINE COUNTER
         MVC   SSRWK,BLKWK         RESTORE TEXT
PBL11    STH   R4,LNCNTR           SET CURRENT LINE COUNTER
         BR    R14                 RETURN TO CALLER
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        P P D A T E - FORMAT DATE ROUTINE.                           *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*              R0 = WORK REGISTER                                     *
*              R15 = WORK REGISTER                                    *
*        AT ENTRY :                                                   *
*              R1  = DATE IN THE FORM 00YYDDDC                        *
*              R14 = RETURN ADDRESS                                   *
*        AT EXIT :                                                    *
*              DDMMMYY = FORMATTED DATE IN THE FORM ' DD MMM YY'      *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PPDATE   LTR   R1,R1               VALID DATE...
         BZR   R14                 RETURN IF NO
         ST    R1,$DOUBLE+4        STORE DATE
         L     R15,=A(PYEARTAB)    COPY DATE CONVERSION TABLE
         MVC   PMONTHS(12*4),0(R15)  FOR POSSIBLE UPDATE
         TM    $DOUBLE+5,X'01'     ADJUST
         BO    PTDEDYR               TABLE
         TM    $DOUBLE+5,X'12'         ON
         BM    PTDEDYR                   LEAP
         MVI   PFEB,29                     YEARS
PTDEDYR  MVC   DDMMMYY+7(3),=XL6'402120202020' GET PATTERN
         ED    DDMMMYY+8(3),$DOUBLE+5 AND EDIT THE YEAR (YY)
         MVC   $DOUBLE(6),$ZEROS   CLEAR ALL BUT JULIAN DAY
         XR    R0,R0               CLEAR FOR IC
         CVB   R1,$DOUBLE          CONVERT TO BINARY DAY
         LA    R15,PMONTHS-4       ADDR OF DATE CONVERSION TABLE
PTDATLUP SLR   R1,R0               CONVERT
         LA    R15,4(,R15)           JULIAN DAY
         IC    R0,0(,R15)              TO
         CLR   R0,R1                     STANDARD DAY
         BL    PTDATLUP                    *  (R1)
         CVD   R1,$DOUBLE          CONVERT TO DECIMAL DAY
         MVI   DDMMMYY,C' '        CLEAR 1ST BYTE OF AREA
         UNPK  DDMMMYY+1(2),$DOUBLE+6(2) PLACE DAY (DD)
         OI    DDMMMYY+2,C'0'           INTO MESSAGE
         MVI   DDMMMYY+3,C' '      INSERT DELIMITER
         MVC   DDMMMYY+4(3),1(R15) MOVE EBCDIC MONTH (MMM)
         BR    R14                 RETURN TO CALLER
         EJECT
        LTORG
         SPACE 1
PATCH    DC    128S(*)
         DC    CL8'ENDPATCH'
         SPACE 1
         DROP  R12                 KILL BASE ADDRESSABILITY
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        BLOCK LETTERS TABLES.                                        *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
BLOCKTR  EQU   *-X'C0'
*------------------ 0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F-----
         DC    AL1(00,01,02,03,04,05,06,07,08,09,00,00,00,00,00,00) -C0
         DC    AL1(00,10,11,12,13,14,15,16,17,18,00,19,00,00,00,00) -D0
         DC    AL1(00,00,20,21,22,23,24,25,26,27,00,00,00,00,00,00) -E0
         DC    AL1(28,29,30,31,32,33,34,35,36,37,00,38,39,00,00,00) -F0
         SPACE 1
BLOCKTB  EQU   *,24
*----------------01......05........10........15........20......24------
         DC    X'7FE0FFF0C030C030C030FFF0FFF0C030C030C030C030C030' A-01
         DC    X'FFE0FFF0C030C030C060FFC0FFC0C060C030C030FFF0FFE0' B-02
         DC    X'7FE0FFF0C030C000C000C000C000C000C000C030FFF07FE0' C-03
         DC    X'FF80FFC0C060C030C030C030C030C030C030C060FFC0FF80' D-04
         DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000FFF0FFF0' E-05
         DC    X'FFF0FFF0C000C000C000FF00FF00C000C000C000C000C000' F-06
         DC    X'7FE0FFF0C030C000C000C000C1F0C1F0C030C030FFF07FE0' G-07
         DC    X'C030C030C030C030C030FFF0FFF0C030C030C030C030C030' H-08
         DC    X'7FE07FE0060006000600060006000600060006007FE07FE0' I-09
         DC    X'3FF03FF0030003000300030003000300C300C300FF007E00' J-10
         DC    X'C030C060C0C0C180C300FE00FE00C300C180C0C0C060C030' K-11
         DC    X'C000C000C000C000C000C000C000C000C000C000FFF0FFF0' L-12
         DC    X'C030E070F0F0D9B0CF30C630C030C030C030C030C030C030' M-13
         DC    X'C030E030F030D830CC30C630C330C1B0C0F0C070C030C010' N-14
         DC    X'FFF0FFF0C030C030C030C030C030C030C030C030FFF0FFF0' O-15
         DC    X'FFE0FFF0C030C030C030FFF0FFE0C000C000C000C000C000' P-16
         DC    X'7FE0FFF0C030C030C030C030C030C330C1B0C0F0FFE07FB0' Q-17
         DC    X'FFE0FFF0C030C030C030FFF0FFE0C300C180C0C0C060C030' R-18
         DC    X'06007FE0FFF0C630E6007FC03FE00670C630FFF07FE00600' $-19
         DC    X'7FE0FFF0C030C000E0007FC03FE000700030C030FFF07FE0' S-20
         DC    X'FFF0FFF00600060006000600060006000600060006000600' T-21
         DC    X'C030C030C030C030C030C030C030C030C030C030FFF07FE0' U-22
         DC    X'C030C030C030C030C030C030C030606030C019800F000600' V-23
         DC    X'C030C030C030C030C030C030C630CF30D9B0F0F0E070C030' W-24
         DC    X'C030C030606030C019800F000F00198030C06060C030C030' X-25
         DC    X'C030C030606030C019800F00060006000600060006000600' Y-26
         DC    X'FFF0FFF0006000C001801FC01FC00C00180030007FF0FFF0' Z-27
         DC    X'3FC07FE0C0F0C1B0C330C630CC30D830F030E0307FE03FC0' 0-28
         DC    X'06000E001E0006000600060006000600060006007FE07FE0' 1-29
         DC    X'7FE0FFF0C0300030003000600180060018006000FFF0FFF0' 2-30
         DC    X'7FE0FFF0C0300030003001E001E000300030C030FFF07FE0' 3-31
         DC    X'038007800D80198031807FF0FFF001800180018001800180' 4-32
         DC    X'FFF0FFF0C000C000C000FF80FFC0006000300030FFF0FFE0' 5-33
         DC    X'7FE0FFF0C030C000C000FFE0FFF0C030C030C030FFF07FE0' 6-34
         DC    X'FFF0FFE0C0C0018003000600060006000600060006000600' 7-35
         DC    X'7FE0FFF0C030C03060603FC03FC06060C030C030FFF07FE0' 8-36
         DC    X'7FE0FFF0C030C030C030FFF0FFF000300030C030FFF07FE0' 9-37
         DC    X'30C030C0FFF0FFF030C030C030C030C0FFF0FFF030C030C0' #-38
         DC    X'3FC07FE0C030003000301E303F306330C330C3307FE03FC0' @-39
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        JULIAN TO DAY AND MONTH CONVERSION TABLE.                    *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
PYEARTAB DC    AL1(31),CL3'JAN'
         DC    AL1(28),CL3'FEB'
         DC    AL1(31),CL3'MAR'
         DC    AL1(30),CL3'APR'
         DC    AL1(31),CL3'MAY'
         DC    AL1(30),CL3'JUN'
         DC    AL1(31),CL3'JUL'
         DC    AL1(31),CL3'AUG'
         DC    AL1(30),CL3'SEP'
         DC    AL1(31),CL3'OCT'
         DC    AL1(30),CL3'NOV'
         DC    AL1(255),CL3'DEC'
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*        WORK-AREAS.                                                  *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
WRKDSECT DSECT
         DS    CL(BUFSTART-BFPDSECT) -------- RESERVED BY JES2 --------
         SPACE 1
SSRWK    DS    D                   BLOCK LETTERS TEXT
BLKWK    DS    D                   BLOCK LETTERS WORK AREA
PMONTHS  DC    12F'0'              AREA FOR COPY OF MONTHS-DAYS TABLE
PFEB     EQU   PMONTHS+4           ENTRY FOR FEBRUARY
LNCNTR   DS    H                   LINE COUNTER FOR BLOCK LETTERS
PBLCHR   DS    CL1                 BLOCK LETTERS SAVE CHARACTER
PBLOPT   DS    XL1                 BLOCK LETTERS OPTIONS
PBLOSL   EQU   X'80'                 SLANT
PBLOCN   EQU   X'40'                 CENTER
DDMMMYY  DS    XL10                FORMAT DATE ' DD MMM YY'
         SPACE 1
CCM      DS    0CL2                CONTROL COMMAND
CCMC     DS    XL1                 COMMAND CODE
CCMB     DS    XL1                 PP1 BLANK
         SPACE 1
BLL      DS    0CL132              LINE FOR BLOCK LETTERS
BLLFRAME DS    XL1                 PP1 FRAME CHARACTERS
BLLCLASS DS    XL1                 PP2 SYSOUT CLASS
         DS    XL98                PP3-100 BLANKS
BLLINFO  DS    XL20                PP101-120 INFORMATION
         DS    XL7                 PP121-127 BLANKS
BLLCLASX DS    XL1                 PP128 SYSOUT CLASS
BLLFRAMX DS    XL4                 PP129-132 FRAME CHARACTERS
         SPACE 1
HDR      DS    0CL132              LINE FOR HEADER
HDRFRAME DS    XL1                 PP1 FRAME CHARACTERS
HDRCLASS DS    XL1                 PP2 SYSOUT CLASS
         DS    X                   PP3 BLANK
HDRFORM  DS    XL5                 PP4-8 FORM TYPE START/CONT/END
         DS    X                   PP9 BLANK
HDRNUM   DS    XL8                 PP10-17 JOB NUMBER
         DS    X                   PP18 BLANK
HDRNAME  DS    XL8                 PP19-26 JOB NAME
         DS    X                   PP27 BLANK
HDRJNAME DS    XL8                 PP28-35 JOE NAME
         DS    X                   PP36 BLANK
HDRJID1  DS    XL3                 PP37-39 JOE ID1
         DS    X                   PP40 BLANK
HDRJID2  DS    XL3                 PP41-43 JOE ID2
         DS    X                   PP44 BLANK
HDRJROUT DS    XL8                 PP45-52 JOE ROUTE
         DS    X                   PP53 BLANK
HDRPNAME DS    XL20                PP54-73 PROGRAMMER NAME
         DS    X                   PP74 BLANK
HDRRKEY  DS    XL4                 PP75-78 'ROOM'
         DS    X                   PP79 BLANK
HDRROOM  DS    XL4                 PP80-83 ROOM NUMBER
         DS    X                   PP84 BLANK
HDRPTTN  DS    0XL9,X              PP85 BLANK USED AS FILL CHAR
HDRTIME  DS    0XL11,XL8           PP86-93 HH.MM.SS
         DS    X                   PP94 BLANK
HDRAM    DS    XL2                 PP95-96 AM/PM
         DS    X                   PP97 BLANK
HDRDATE  DS    XL9                 PP98-106 DD MMM YY
         DS    X                   PP107 BLANK
HDRDNAME DS    XL8                 PP108-115 DEVICE NAME
         DS    X                   PP116 BLANK
HDRSYS   DS    XL4                 PP117-120 SYSTEM NAME
         DS    X                   PP121 BLANK
*------- SINCE REMOTE PRINTERS CAN BE MAX OF 120 DUPLICATE INFO IS
*        SUPPLIED FOR PRINTERS WITH 132 LINE LENGTH.
HDRFORMX DS    XL5                 PP122-126 FORM
         DS    X                   PP127 BLANK
HDRCLASX DS    XL1                 PP128 SYSOUT CLASS
HDRFRAMX DS    XL4                 PP129-132 FRAME CHARACTERS
         SPACE 2
J2XIT001 CSECT ,                   RESTORE THE CSECT ENVIRONMENT
         SPACE 1
        $MODEND
         SPACE 1
         END
