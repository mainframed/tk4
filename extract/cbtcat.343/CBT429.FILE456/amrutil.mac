AMRU     TITLE '--- ASSEMBLER MACROS REFERENCES UTILITY ---'
AMRUTIL  START 0
         SPACE 1
         PRINT OFF
         GBLC  &PRS,&PRF
         AIF   ('&SYSPARM' EQ 'FULL').SF
         AIF   ('&SYSPARM' EQ 'SHORT').SS
&PRS     SETC  'NOGEN'
&PRF     SETC  'NOGEN'
         AGO   .ST
.SS      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'NOGEN'
         AGO   .ST
.SF      ANOP
&PRS     SETC  'GEN'
&PRF     SETC  'GEN'
.ST      PRINT ON
         SPACE 1
* CALL OF THE PROGRAM :
* ---------------------
*
*        //XEQ     EXEC PGM=AMRUTIL,PARM=...(OPTIONAL)...
*        //MAC....1  DD DSN=...1ST MACROS LIBRARY...,DISP=SHR
*        //MAC....2  DD DSN=...2ND MACROS LIBRARY...,DISP=SHR
*                           ...ANY NUMBER OF DD-CARDS...
*        //MAC....N  DD DSN=...NTH MACROS LIBRARY...,DISP=SHR
*        //SRC....1  DD DSN=...1ST SOURCES LIBRARY...,DISP=SHR
*        //SRC....2  DD DSN=...2ND SOURCES LIBRARY...,DISP=SHR
*                           ...ANY NUMBER OF DD-CARDS...
*        //SRC....N  DD DSN=...NTH SOURCES LIBRARY...,DISP=SHR
*        //TITPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=800,LRECL=80)
*        //MACPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=800,LRECL=80)
*        //SRCPRINT  DD SYSOUT=*,DCB=(RECFM=FBA,BLKSIZE=800,LRECL=80)
*        //SYSPRINT  DD SYSOUT=*
*
* AUTHOR :     MOINIL P.A.
* --------     COMPUTING CENTRE (TP 361)
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         PRINT &PRF
        $DEFREG
*------- DEFAULTS VALUES DEFINITIONS (CAN BE CHANGED THROUGH THE JCL
*              EXEC PARM= FIELD).
         SPACE 1
@LN      EQU   55        MAX. NUMBER OF LINES PER PAGE
@MD      EQU   10        MAX. NUMBER OF MACLIB'S DD'S
@SD      EQU   10        MAX. NUMBER OF SOURCE'S DD'S
@MM      EQU   1000      MAX. NUMBER OF MACLIB'S MEMBERS NAMES
@SM      EQU   2000      MAX. NUMBER OF SOURCE'S MEMBERS NAMES
@RN      EQU   5000      MAX. NUMBER OF REFERENCE ELEMENTS
*                        (A REFERENCE ELEMENT IS USED TO SET THE NUMBER
*                        OF TIMES A MACRO APPEARS IN A SOURCE MODULE.
*                        OBVIOUSLY NOT ALL MACROS ARE IN ALL MODULES)
@IM      EQU   100       MAX. NUMBER OF INTERNAL MACROS DEFINITIONS
*                        IN A SOURCE MODULE.
@UM      EQU   1000      MAX. NUMBER OF UNRESOLVED MACROS ENCOUNTERED
*                        IN A SOURCE MODULE.
@CM      EQU   50        MAX. NUMBER OF COPY MODULES NAMES (NOT
*                        STATEMENTS) IN A SOURCE MODULE.
@OC      EQU   500       MAX. NUMBER OF OPERATION CODES DEFINED IN
*                        MEMBER "GIMOPCDE" (SYS1.PARMLIB)
*========> SEE DEFINITIONS AT LABELS "OPCNME" AND "OPCDSN" <===========
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                      M A I N     P R O C E S S                      *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*              R10 = LOCAL BASE REGISTER                              *
*              R11 = 1ST MAIN BASE REGISTER                           *
*              R12 = 2ND MAIN BASE REGISTER                           *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
        $XENT  BASE=(R11,R12)
         L     R10,=A(INIT0)       INITIALIZATION
         BR    R10
INITX    L     R10,=A(SCAN0)       SCAN ALL DD'S
         BR    R10
SCANX    L     R10,=A(TRCE0)       INITIAL TRACE
         BR    R10
TRCEX    L     R10,=A(BOPC0)       BUILD OPERATION CODES TABLE
         BR    R10
BOPCX    L     R10,=A(GMMN0)       GET MEMBERS NAMES
         BR    R10
GMMNX    L     R10,=A(SCSM0)       SCAN SOURCE'S MEMBERS
         BR    R10
SCSMX    L     R10,=A(MAPR0)       MACROS PRINT
         BR    R10
MAPRX    L     R10,=A(FTRC0)       FINAL TRACE
         BR    R10
         SPACE 1
*------- THAT'S ALL FOLKS
         SPACE 1
LEAVE   $PCLOSE
         LTR   R2,R15              RC = 0
         BNZ   ERRPCL
         TM    SW2,SWERR
         BZ    QUIT+L'QUIT
QUIT     LA    R2,16               RC = 16
         ICM   R1,B'1111',WADDR
         BZ    EXIT
         L     R0,WSIZE
        FREEMAIN R,A=(1),LV=(0)
EXIT    $XRET  CC=(R2)
         SPACE 1
*------- SEND ERROR DIAGNOTICS
         SPACE 1
ERRPCL   STC   R15,PCLERR+47
         OI    PCLERR+47,C'0'
PCLERR  WTO    '"SYSPRINT" / CLOSE ERROR ($PCLOSE RC =  )',            X
               ROUTCDE=11,DESC=7
         B     QUIT
LSTERR   STC   R15,MERR1+42
         OI    MERR1+42,C'0'
         LA    R1,MERR1
         BAS   R9,PERR
         B     LEAVE
         SPACE 1
*------- SEND MESSAGE ROUTINE
*             R0-R1-R2-R14-R15  = WORK REGISTERS
*             R9 = LINK REGISTER
         SPACE 1
PERR     OI    SW2,SWERR
         TM    SW1,SWPRT
         BZ    PERR1
         MVC   WLNE(6),=CL6'0-M-> '
         MVC   WLNE+6(L'WLNE-6),WLNE+5
         LH    R15,0(R1)
         SH    R15,=H'5'
         EX    R15,PERRMV
         LR    R2,R1               SAVE AROUND PRINT
        $PRINT WLNE
         LTR   R15,R15
         BZR   R9
         NI    SW1,255-SWPRT
         STC   R15,PERRWT+46
         OI    PERRWT+46,C'0'
PERRWT  WTO    '"SYSPRINT" / PRINT ERROR ($PRINT RC =  )',             X
               ROUTCDE=11,DESC=7
         LR    R1,R2               RESTORE
PERR1   WTO    MF=(E,(1))
         BR    R9
PERRMV   MVC   WLNE+6(*-*),4(R1)   <<EXECUTED>>
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                       C O M M O N     D A T A                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
WORKD    DC    D'0'                DOUBLE-WORD WORK
ATIOT    DC    A(*-*)              TIOT POINTER
WADDR    DC    F'0'                AREA ADDRESS
WSIZE    DC    F'0'                AREA SIZE
VLLN     DC    A(@LN)              MAX. NO. OF LINES PER PAGE
VLMD     DC    A(@MD)              MAX. NO. OF MACLIB'S DD'S
VLSD     DC    A(@SD)              MAX. NO. OF SOURCE'S DD'S
VLMM     DC    A(@MM)              MAX. NO. OF MACLIB'S MEMBERS NAMES
VLSM     DC    A(@SM)              MAX. NO. OF SOURCE'S MEMBERS NAMES
VLRN     DC    A(@RN)              MAX. NO. OF REFERENCE ELEMENTS
VLIM     DC    A(@IM)              MAX. NO. OF SOURCE INTERNAL MACROS
VLUM     DC    A(@UM)              MAX. NO. OF SOURCE UNRESOLVED MACROS
VLCM     DC    A(@CM)              MAX. NO. OF COPY MODULES NAMES
VLOC     DC    A(@OC)              MAX. NO. OF OPERATION CODES
AMDS     DC    A(*-*)              START OF MACLIB'S DD'S
AMDN     DC    F'0'                MACLIB'S DD'S USED NUMBER
ASDS     DC    A(*-*)              START OF SOURCE'S DD'S
AMDE     EQU   ASDS                ALSO END OF 'MD'
ASDN     DC    F'0'                SOURCE'S DD'S USED NUMBER
AMMS     DC    A(*-*)              START OF MACLIB'S MEMBERS NAMES
ASDE     EQU   AMMS                ALSO END OF 'SD'
ASMS     DC    A(*-*)              START OF SOURCE'S MEMBERS NAMES
AMME     EQU   ASMS                ALSO END OF 'MM'
ARNS     DC    A(*-*)              START OF REFERENCE ELEMENTS
ASME     EQU   ARNS                ALSO END OF 'SM'
AIMS     DC    A(*-*)              START OF SOURCE INTERNAL MACROS
ARNE     EQU   AIMS                ALSO END OF 'RN'
AUMS     DC    A(*-*)              START OF SOURCE UNRESOLVED MACROS
AIME     EQU   AUMS                ALSO END OF 'IM'
ACMS     DC    A(*-*)              START OF COPY MODULES NAMES
AUME     EQU   ACMS                ALSO END OF 'UM'
AOCS     DC    A(*-*)              START OF OPERATION CODES TABLE
ACME     EQU   AOCS                ALSO END OF 'CM'
ELDA     DC    A(*-*)              END+1 OF LAST DEFINED AREA
AOCE     EQU   ELDA                ALSO END OF 'OC'
CRNPTR   DC    F'0'
PRVSMA   DC    F'0'
PRVDSN   DC    F'0'
MIMPTR   DC    F'0'
MUMPTR   DC    F'0'
MCMPTR   DC    F'0'
OCMPTR   DC    F'0'
SZMD     DC    F'0'                SIZE OF "MD"
SZSD     DC    F'0'                SIZE OF "SD"
SZMM     DC    F'0'                SIZE OF "MM"
SZSM     DC    F'0'                SIZE OF "SM"
SZRN     DC    F'0'                SIZE OF "RN"
SZIM     DC    F'0'                SIZE OF "IM"
SZUM     DC    F'0'                SIZE OF "UM"
SZCM     DC    F'0'                SIZE OF "CM"
SZOC     DC    F'0'                SIZE OF "OC"
OPCNME   DC    CL8'GIMOPCDE'       MEMBER NAME
TTLDD    DC    CL8'TITPRINT'
MCLDD    DC    CL8'MACPRINT'
SRLDD    DC    CL8'SRCPRINT'
PARMNME  DC    CL8' '
DDNME    DC    CL8' '
PVOPRF   DC    CL8' '
CPYMOD   DC    CL8' '
TRHEX    DC    CL16'0123456789ABCDEF'
EMDL     DC    Y(MDLGTH)
ESDL     DC    Y(SDLGTH)
EMML     DC    Y(MMLGTH)
ESML     DC    Y(SMLGTH)
ERNL     DC    Y(RNLGTH)
EIML     DC    Y(IMLGTH)
EUML     DC    Y(UMLGTH)
ECML     DC    Y(CMLGTH)
EOCL     DC    Y(OCLGTH)
MXLN1    DC    PL2'+0'
MXLN2    DC    PL2'+0'
MXLN3    DC    PL2'+0'
MXLN4    DC    PL2'+0'
MXLN5    DC    PL2'+0'
MCPG     DC    PL3'+0'
MCLN     DC    PL2'+0'
SRPG     DC    PL3'+0'
SRLN     DC    PL2'+0'
IXPG     DC    PL3'+0'
IXLN     DC    PL2'+0'
CTRL     DC    PL3'+0'
OCTIX    DC    8XL5'0',XL1'FF'     "OC" TABLE INDEX
CUROPL   DC    XL1'0'
SW1      DC    XL1'0'
SWPRT    EQU   X'80'               SYSPRINT DD PRESENT
SWTIT    EQU   X'40'               TITPRINT DD PRESENT
SWMAC    EQU   X'20'               MACPRINT DD PRESENT
SWSRC    EQU   X'10'               SRCPRINT DD PRESENT
SWMDD    EQU   X'08'               MAC..... DD(S) PRESENT
SWSDD    EQU   X'04'               SRC..... DD(S) PRESENT
SW2      DC    XL1'0'
SWERR    EQU   X'80'               ERROR RC=16 TO BE SET
SWTAV    EQU   X'40'               TRACE WORK-AREAS VALUES
SWFTR    EQU   X'20'               FORCE TRACE WORK-AREAS VALUES
SW3      DC    XL1'0'
SWMNP    EQU   X'80'               MODULE NAME PRINT
SWDSP    EQU   X'08'               DATA-SET NAME PRINT
SWCMP    EQU   X'04'               COPY MODULES NAMES PRINT
SWIMP    EQU   X'02'               INTERNAL MACROS PRINT
SWUMP    EQU   X'01'               UNRESOLVED MACROS PRINT
SW4      DC    XL1'0'
SWEQU    EQU   X'80'               PARM.FIELD SCAN USE
SWCNT    EQU   X'08'               SOURCE CONTINUATION CARD
         SPACE 1
*------- DATA PRINT LINES
         SPACE 1
         DC    AL1(L'WCRD)
WCRD     DC    CL80' '             READ WORK CARD
         DC    AL1(L'WLNE)
WLNE     DC    CL133' '            PRINT WORK LINE
         SPACE 1
         DC    AL1(L'COV1)
COV1     DS    0CL80
         DC    CL25'1A.M.R.   H A N D B O O K',CL55' '
         DC    AL1(L'COV2)
COV2     DS    0CL80
         DC    CL1'+',24C'_',CL55' '
         DC    AL1(L'COV3)
COV3     DS    0CL80
         DC    CL5' ',CL19' '
         DC    CL36'ASSEMBLER MACROS REFERENCES HANDBOOK'
         DC    CL20' '
         DC    AL1(L'COV4)
COV4     DS    0CL80
         DC    CL5' ',CL29' ',CL7'DATE :'
COVDATE  DC    CL10' ',CL29' '
         SPACE 1
         DC    AL1(L'IXT1)
IXT1     DS    0CL80
         DC    CL41'1A.M.R.   H A N D B O O K - INDEX SECTION'
         DC    CL14' ----- DATE : '
IXT1D    DC    CL10' ',CL9' - PAGE I'
IXT1P    DC    CL6' '
         DC    AL1(L'IXT1U)
IXT1U    DS    0CL80
         DC    CL1'+',79C'_'
         DC    AL1(L'IXT2)
IXT2     DS    0CL80
         DC    CL18'0  COUNTS TYPE    ',CL1' '
         DC    CL44'LIBRARY DATA-SET NAME ',CL1' '
         DC    CL6'VOLUME',CL1' '
         DC    CL7'PAGE   ',CL2' '
         DC    AL1(L'IXT2U)
IXT2U    DS    0CL80
         DC    CL19'+  _______________ ',44C'_'
         DC    CL17' ______ _______  '
         DC    AL1(L'IXT3)
IXT3     DS    0CL80
         DC    CL3' '
IXT3L    DC    CL15' ',CL1' '
IXT3D    DC    CL44' ',CL1' '
IXT3V    DC    CL6' ',CL1' '
IXT3T    DC    CL1' '
IXT3P    DC    CL6' ',CL2' '
         SPACE 1
         DC    AL1(L'MCT1)
MCT1     DS    0CL80
         DC    CL42'1A.M.R.   H A N D B O O K - MACROS SECTION'
         DC    CL13' ---- DATE : '
MCT1D    DC    CL10' ',CL9' - PAGE M'
MCT1P    DC    CL6' '
         DC    AL1(L'MCT1U)
MCT1U    DS    0CL80
         DC    CL1'+',79C'_'
         DC    AL1(L'MCT2)
MCT2     DS    0CL80
         DC    CL12'0DATA-SET : '
MCT2N    DC    CL44' ',CL6' ',CL12'ON VOLUME : '
MCT2V    DC    CL6' '
         DC    AL1(L'MCT2U)
MCT2U    DS    0CL80
         DC    CL1'+',10C'_',CL51' ',11C'_',CL7' '
         DC    AL1(L'MCT3)
MCT3     DS    0CL80
         DC    CL2'0',4CL19'   MACRO    COUNT  ',CL2' '
         DC    AL1(L'MCT3U)
MCT3U    DS    0CL80
         DC    CL2'+',4CL19'   ________ _____  ',CL2' '
         DC    AL1(L'MCT4)
MCT4     DS    0CL80
         DC    CL2' '
MCT4M    DC    4CL19' ',CL2' '
         DC    AL1(L'SRT1)
SRT1     DS    0CL80
         DC    CL43'1A.M.R.   H A N D B O O K - SOURCES SECTION'
         DC    CL12' --- DATE : '
SRT1D    DC    CL10' ',CL9' - PAGE S'
SRT1P    DC    CL6' '
         DC    AL1(L'SRT1U)
SRT1U    DS    0CL80
         DC    CL1'+',79C'_'
         DC    AL1(L'SRT2)
SRT2     DS    0CL80
         DC    CL12'0DATA-SET : '
SRT2N    DC    CL44' ',CL6' ',CL12'ON VOLUME : '
SRT2V    DC    CL6' '
         DC    AL1(L'SRT2U)
SRT2U    DS    0CL80
         DC    CL1'+',10C'_',CL51' ',11C'_',CL7' '
         DC    AL1(L'SRT3)
SRT3     DS    0CL80
         DC    CL2'0',4CL19'   MACRO    COUNT  ',CL2' '
         DC    AL1(L'SRT3U)
SRT3U    DS    0CL80
         DC    CL2'+',4CL19'   ________ _____  ',CL2' '
         DC    AL1(L'SRT4)
SRT4     DS    0CL80
         DC    CL2' '
SRT4M    DC    4CL19' ',CL2' '
         DC    AL1(L'SRT5)
SRT5     DS    0CL80
         DC    CL19'0==> MODULE NAME : '
SRT5N    DC    CL8' ',CL53' '
         DC    AL1(L'SRT6)
SRT6     DS    0CL80
         DC    CL6'  -> "'
SRT6N    DC    CL54' ',CL20' '
         DC    AL1(L'SRT7)
SRT7     DS    0CL80
         DC    CL26'  -> "COPY MODULE" NAMES :',CL54' '
         DC    AL1(L'SRT8)
SRT8     DS    0CL80
         DC    CL24'  -> "INTERNAL" MACROS :',CL56' '
         DC    AL1(L'SRT9)
SRT9     DS    0CL80
         DC    CL26'  -> "UNRESOLVED" MACROS :',CL54' '
         DC    AL1(L'MRT1)
MRT1     DS    0CL80
         DC    CL42'1A.M.R.   H A N D B O O K - MACROS SECTION'
         DC    CL13' ---- DATE : '
MRT1D    DC    CL10' ',CL9' - PAGE M'
MRT1P    DC    CL6' '
         DC    AL1(L'MRT1U)
MRT1U    DS    0CL80
         DC    CL1'+',79C'_'
         DC    AL1(L'MRT2)
MRT2     DS    0CL80
         DC    CL12'0DATA-SET : '
MRT2N    DC    CL44' ',CL6' ',CL12'ON VOLUME : '
MRT2V    DC    CL6' '
         DC    AL1(L'MRT2U)
MRT2U    DS    0CL80
         DC    CL1'+',10C'_',CL51' ',11C'_',CL7' '
         DC    AL1(L'MRT3)
MRT3     DS    0CL80
         DC    CL32'0     MACRO    COUNT   MODULE   '
         DC    CL44'DATA-SET ',CL4' '
         DC    AL1(L'MRT3U)
MRT3U    DS    0CL80
         DC    CL32'+     ________ _____   ________ ',44C'_'
         DC    CL4' '
         DC    AL1(L'MRT4)
MRT4     DS    0CL80
         DC    CL6' '
MRT4M    DC    CL8' '
MRT4C    DC    CL6' ',CL3' '
MRT4N    DC    CL8' ',CL1' '
MRT4D    DC    CL44' ',CL4' '
         SPACE 1
*------- DIAGNOTICS MESSAGES
         SPACE 1
         PRINT &PRF
GTMERR  WTO    'GETMAIN : STORAGE NOT AVAILABLE (SIZE=        )',      X
               ROUTCDE=11,DESC=7,MF=L
MERR1   WTO    '"        " / PRINT ERROR ($PRINT RC =  )',             X
               ROUTCDE=11,DESC=7,MF=L
MERR2   WTO    'TOO MANY       ''S MEMBERS NAMES (" M" VALUE OVERFLOW)'X
               ,ROUTCDE=11,DESC=7,MF=L
MERR3   WTO    '"        " / OPEN ERROR ($PDOPEN RC =  )',             X
               ROUTCDE=11,DESC=7,MF=L
MERR4   WTO    '"        " / READ ERROR ($PDREAD RC =  )',             X
               ROUTCDE=11,DESC=7,MF=L
MERR5   WTO    '"        " / CLOSE ERROR ($PDCLOSE RC =  )',           X
               ROUTCDE=11,DESC=7,MF=L
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                     I N I T I A L I Z A T I O N                     *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- GET NEW VALUES IF SUPPLIED BY JCL EXEC PARM= FIELD WHICH
*        MAY BE SPECIFIED AS SHOWN BELOW :
*        1. PARM='LN=..,MD=...,SD=...,MM=...,SM=...,RN=...,IM=...,
*                 UM=...,CM=...,OC=...,T'
*        2. PARM='LN=.. MD=... SD=... MM=... SM=... RN=... IM=...
*                 UM=... CM=... OC=... T'
*        3. PARM='LN .. MD ... SD ... MM ... SM ... RN ... IM ...
*                 UM ... CM ... OC ... T'
         SPACE 1
INIT0    L     R1,0(R1)            PARM.FIELD ADDRESS
         XR    R2,R2
         ICM   R2,B'0011',0(R1)    PARM.FIELD LENGTH
         BZ    NOPARM
         LA    R1,2(R1)            START OF PARM.FIELD TEXT
         AR    R2,R1               END+1 OF PARM.FIELD TEXT
PARM1    CLI   0(R1),C','
         BE    PARM2
         CLI   0(R1),C' '
         BNE   PARM3
PARM2    LA    R1,1(R1)            SEPARATOR
         CLR   R1,R2
         BL    PARM1
         B     NOPARM
PARM3    CLI   0(R1),C'T'
         BNE   *+L'*+8
         OI    SW2,SWTAV
         B     PARM2
         LA    R0,2(R1)
         CLR   R0,R2
         BH    ERRPARM
         CLC   0(2,R1),=CL2'LN'
         BNE   *+L'*+8
         LA    R3,VLLN
         B     PARM4
         CLC   0(2,R1),=CL2'MD'
         BNE   *+L'*+8
         LA    R3,VLMD
         B     PARM4
         CLC   0(2,R1),=CL2'SD'
         BNE   *+L'*+8
         LA    R3,VLSD
         B     PARM4
         CLC   0(2,R1),=CL2'MM'
         BNE   *+L'*+8
         LA    R3,VLMM
         B     PARM4
         CLC   0(2,R1),=CL2'SM'
         BNE   *+L'*+8
         LA    R3,VLSM
         B     PARM4
         CLC   0(2,R1),=CL2'RN'
         BNE   *+L'*+8
         LA    R3,VLRN
         B     PARM4
         CLC   0(2,R1),=CL2'IM'
         BNE   *+L'*+8
         LA    R3,VLIM
         B     PARM4
         CLC   0(2,R1),=CL2'UM'
         BNE   *+L'*+8
         LA    R3,VLUM
         B     PARM4
         CLC   0(2,R1),=CL2'CM'
         BNE   *+L'*+8
         LA    R3,VLCM
         B     PARM4
         CLC   0(2,R1),=CL2'OC'
         BNE   ERRPARM
         LA    R3,VLOC
PARM4    CLR   R0,R2
         BNL   NOPARM              NULL VALUE
         LR    R1,R0
         NI    SW4,255-SWEQU
PARM5    CLI   0(R1),C','
         BE    PARM2               SEPARATOR
         CLI   0(R1),C'='
         BNE   PARM6
         TM    SW4,SWEQU
         BO    ERRPARM
         OI    SW4,SWEQU
         B     *+L'*+8
PARM6    CLI   0(R1),C' '
         BNE   PARM7
         LA    R1,1(R1)
         CLR   R1,R2
         BL    PARM5
         B     NOPARM
PARM7    CLI   0(R1),C'0'
         BL    PARM3
         XR    R15,R15
PARM8    CLI   0(R1),C','
         BE    PARM9               SEPARATOR
         CLI   0(R1),C' '
         BE    PARM9               SEPARATOR
         CLI   0(R1),C'0'
         BL    ERRPARM
         CLI   0(R1),C'9'
         BH    ERRPARM
         XR    R14,R14
         ICM   R14,B'1000',0(R1)
         SLL   R14,4
         SRL   R14,28
         LTR   R15,R15
         BNP   *+L'*+4
         MH    R15,=H'10'
         AR    R15,R14
         LA    R1,1(R1)
         CLR   R1,R2
         BL    PARM8
PARM9    LTR   R15,R15
         BNP   *+L'*+4             NULL VALUE
         ST    R15,0(R3)           SET NEW VALUE
         CLR   R1,R2
         BL    PARM2
         SPACE 1
*------- GET AND INITIALIZE AREAS
         SPACE 1
NOPARM   L     R1,VLLN
         LA    R0,10
         CLR   R1,R0
         BL    ERRMXLN
         LA    R0,99
         CLR   R1,R0
         BH    ERRMXLN
         CVD   R1,WORKD
         SP    WORKD,=PL1'+3'
         ZAP   MXLN1,WORKD+L'WORKD-L'MXLN1(L'MXLN1)
         SP    WORKD,=PL1'+2'
         ZAP   MXLN2,WORKD+L'WORKD-L'MXLN2(L'MXLN2)
         SP    WORKD,=PL1'+1'
         ZAP   MXLN3,WORKD+L'WORKD-L'MXLN3(L'MXLN3)
         SP    WORKD,=PL1'+1'
         ZAP   MXLN4,WORKD+L'WORKD-L'MXLN4(L'MXLN4)
         SP    WORKD,=PL1'+1'
         ZAP   MXLN5,WORKD+L'WORKD-L'MXLN5(L'MXLN5)
         L     R2,VLMD
         LA    R1,1(R2)
         ST    R1,AMDN
         MH    R2,EMDL
         ST    R2,SZMD
         L     R3,VLSD
         LA    R1,1(R3)
         ST    R1,ASDN
         MH    R3,ESDL
         ST    R3,SZSD
         AR    R2,R3
         L     R3,VLMM
         MH    R3,EMML
         ST    R3,SZMM
         AR    R2,R3
         L     R3,VLSM
         MH    R3,ESML
         ST    R3,SZSM
         AR    R2,R3
         L     R3,VLRN
         MH    R3,ERNL
         ST    R3,SZRN
         AR    R2,R3
         L     R3,VLIM
         MH    R3,EIML
         ST    R3,SZIM
         AR    R2,R3
         L     R3,VLUM
         MH    R3,EUML
         ST    R3,SZUM
         AR    R2,R3
         L     R3,VLCM
         MH    R3,ECML
         ST    R3,SZCM
         AR    R2,R3
         L     R3,VLOC
         MH    R3,EOCL
         ST    R3,SZOC
         AR    R2,R3
         LA    R0,7(R2)
         SRL   R0,3
         SLL   R0,3
         ST    R0,WSIZE
        GETMAIN RC,LV=(0)
         LTR   R15,R15
         BNZ   ERRGTMN
         ST    R1,WADDR
         ST    R1,AMDS
         AL    R1,SZMD
         ST    R1,ASDS
         AL    R1,SZSD
         ST    R1,AMMS
         AL    R1,SZMM
         ST    R1,ASMS
         AL    R1,SZSM
         ST    R1,ARNS
         AL    R1,SZRN
         ST    R1,AIMS
         AL    R1,SZIM
         ST    R1,AUMS
         AL    R1,SZUM
         ST    R1,ACMS
         AL    R1,SZCM
         ST    R1,AOCS
         AL    R1,SZOC
         ST    R1,ELDA
         L     R2,WADDR
         L     R3,WSIZE
         XR    R5,R5
         BASR  R4,0
         MVCL  R2,R4
         B     INITX
ERRPARM  LA    R15,29(R1)
         CLR   R15,R2
         BL    *+L'*+4
         LR    R15,R2
         BCTR  R15,0
         SR    R15,R1
         EX    R15,PARMMV
PARMERR WTO    'PARM= ERROR AT :                                ',     X
               ROUTCDE=11,DESC=7
         B     QUIT
PARMMV   MVC   PARMERR+25(*-*),0(R1)
ERRGTMN  XR    R0,R0
         L     R1,WSIZE
         LA    R14,2*L'WSIZE
         LA    R15,GTMERR+42
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    GTMERR+42(8),=XL8'0F0F0F0F0F0F0F0F'
         TR    GTMERR+42(8),TRHEX
         OI    SW2,SWFTR
         B     INITX
ERRMXLN WTO    'PARM= ERROR ON : LN=.. (VALID RANGE IS 10 TO 99)',     X
               ROUTCDE=11,DESC=7
         B     QUIT
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                         S C A N - C H E C K                         *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- SCAN ALL DD'S
         SPACE 1
SCAN0   EXTRACT    ATIOT,'S',FIELDS=(TIOT)
         L     R2,ATIOT
         USING TIODSECT,R2
         TM    SW2,SWFTR
         BO    SCAN1
         L     R3,AMDS
         USING MDENT,R3
         L     R4,AMDN
         L     R5,ASDS
         USING SDENT,R5
         L     R6,ASDN
         XR    R9,R9
SCAN1    CLC   TIOELNGH(4),=XL4'0'
         BE    SCAN90
         TM    SW2,SWFTR
         BO    SCAN6
         CLC   TIOEDDNM(L'TTLDD),TTLDD
         BNE   SCAN2
         TM    SW1,SWTIT
         BO    *+L'*+8
         OI    SW1,SWTIT
         B     SCAN7
         MVC   MESC3+5(L'TTLDD),TTLDD
         LA    R1,MESC3
         BAS   R9,PERR
         B     SCAN7
SCAN2    CLC   TIOEDDNM(L'MCLDD),MCLDD
         BNE   SCAN3
         TM    SW1,SWMAC
         BO    *+L'*+8
         OI    SW1,SWMAC
         B     SCAN7
         MVC   MESC3+5(L'MCLDD),MCLDD
         LA    R1,MESC3
         BAS   R9,PERR
         B     SCAN7
SCAN3    CLC   TIOEDDNM(L'SRLDD),SRLDD
         BNE   SCAN4
         TM    SW1,SWSRC
         BO    *+L'*+8
         OI    SW1,SWSRC
         B     SCAN7
         MVC   MESC3+5(L'SRLDD),SRLDD
         LA    R1,MESC3
         BAS   R9,PERR
         B     SCAN7
SCAN4    CLC   TIOEDDNM(3),MCLDD
         BNE   SCAN5
         MVC   MDNME,TIOEDDNM
         BCT   R4,*+L'*+12
         LA    R1,MESC1
         BAS   R9,PERR
         B     LEAVE
         AH    R3,EMDL
         OI    SW1,SWMDD
         B     SCAN7
SCAN5    CLC   TIOEDDNM(3),SRLDD
         BNE   SCAN6
         MVC   SDNME,TIOEDDNM
         BCT   R6,*+L'*+12
         LA    R1,MESC2
         BAS   R9,PERR
         B     LEAVE
         AH    R5,ESDL
         OI    SW1,SWSDD
         B     SCAN7
SCAN6    CLC   TIOEDDNM(8),=CL8'SYSPRINT'
         BNE   SCAN7
         OI    SW1,SWPRT
SCAN7    XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R2,R1
         B     SCAN1
         DROP  R2,R3,R5
SCAN90   TM    SW2,SWFTR
         BZ    SCAN99
         TM    SW1,SWPRT
         BO    SCANX
        WTO    MF=(E,GTMERR)
         B     ERRPRT
SCAN99   TM    SW1,SWPRT+SWTIT+SWMAC+SWSRC+SWMDD+SWSDD
         BNO   ERRPRT
         L     R1,AMDN
         SR    R1,R4
         ST    R1,AMDN
         L     R1,ASDN
         SR    R1,R6
         ST    R1,ASDN
         L     R3,AMDS
         USING MDENT,R3
         L     R4,AMDN
         LR    R5,R3
CKDD1    LR    R6,R4
CKDD2    BCT   R6,*+L'*+4
         B     CKDD3
         AH    R5,EMDL
         CLC   MDNME,MDNME-MDENT(R5)
         BNE   CKDD2
         MVC   MESC3+5(L'MDNME),MDNME
         LA    R1,MESC3
         BAS   R9,PERR
         B     CKDD2
CKDD3    BCT   R4,*+L'*+4
         B     *+L'*+8
         AH    R3,EMDL
         B     CKDD1
         DROP  R3
         L     R3,ASDS
         USING SDENT,R3
         L     R4,ASDN
         LR    R5,R3
CKDD4    LR    R6,R4
CKDD5    BCT   R6,*+L'*+4
         B     CKDD6
         AH    R5,ESDL
         CLC   SDNME,SDNME-SDENT(R5)
         BNE   CKDD5
         MVC   MESC3+5(L'SDNME),SDNME
         LA    R1,MESC3
         BAS   R9,PERR
         B     CKDD5
CKDD6    BCT   R4,*+L'*+4
         B     *+L'*+8
         AH    R3,ESDL
         B     CKDD4
         DROP  R3
         LTR   R9,R9
         BNZ   LEAVE
         B     SCANX
ERRPRT   TM    SW1,SWPRT
         BO    ERRTIT
         MVC   MESC4+5(8),=CL8'SYSPRINT'
        WTO    MF=(E,MESC4)
         OI    SW2,SWERR
         TM    SW2,SWFTR
         BO    LEAVE
ERRTIT   TM    SW1,SWTIT
         BO    ERRMAC
         MVC   MESC4+5(L'TTLDD),TTLDD
         LA    R1,MESC4
         BAS   R9,PERR
ERRMAC   TM    SW1,SWMAC
         BO    ERRSRC
         MVC   MESC4+5(L'MCLDD),MCLDD
         LA    R1,MESC4
         BAS   R9,PERR
ERRSRC   TM    SW1,SWSRC
         BO    ERRMDD
         MVC   MESC4+5(L'SRLDD),SRLDD
         LA    R1,MESC4
         BAS   R9,PERR
ERRMDD   TM    SW1,SWMDD
         BO    ERRSDD
         MVC   MESC5+5(3),MCLDD
         LA    R1,MESC5
         BAS   R9,PERR
ERRSDD   TM    SW1,SWSDD
         BO    LEAVE
         MVC   MESC5+5(3),SRLDD
         LA    R1,MESC5
         BAS   R9,PERR
         B     LEAVE
         SPACE 1
MESC1   WTO    'TOO MANY "MAC....." DD''S ("MD" VALUE OVERFLOW)',      X
               ROUTCDE=11,DESC=7,MF=L
MESC2   WTO    'TOO MANY "SRC....." DD''S ("SD" VALUE OVERFLOW)',      X
               ROUTCDE=11,DESC=7,MF=L
MESC3   WTO    '"        " / JCL ERROR (DD ENCOUNTERED TWICE)',        X
               ROUTCDE=11,DESC=7,MF=L
MESC4   WTO    '"        " DD-CARD MISSING',                           X
               ROUTCDE=11,DESC=7,MF=L
MESC5   WTO    '"   ....." DD-CARD(S) MISSING',                        X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                     I N I T I A L     T R A C E                     *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- TRACE WORK-AREAS VALUES IF REQUESTED
         SPACE 1
TRCE0    TM    SW2,SWFTR
         BZ    TRCE1
         LA    R1,GTMERR
         BAS   R9,PERR
         TM    SW1,SWPRT
         BZ    LEAVE
         MVI   TRCM0,C'0'
TRCE1    TM    SW2,SWTAV
         BZ    TRCE5
        $PRINT TRCM0
         LTR   R15,R15
         BNZ   TRCERR
        $PRINT TRCM0U
         LTR   R15,R15
         BZ    TRCE4
TRCERR   STC   R15,PERRWT+46
         OI    PERRWT+46,C'0'
        WTO    MF=(E,PERRWT)
         OI    SW2,SWERR
         B     LEAVE
TRCE2    LR    R1,R2
         XR    R0,R0
         LA    R14,L'TRCM4A
         LA    R15,TRCM4A
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    TRCM4A,=XL8'0F0F0F0F0F0F0F0F'
         TR    TRCM4A,TRHEX
         SR    R3,R2
         LR    R1,R3
         XR    R0,R0
         LA    R14,L'TRCM4B
         LA    R15,TRCM4B
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    TRCM4B,=XL8'0F0F0F0F0F0F0F0F'
         TR    TRCM4B,TRHEX
         MVI   TRCM4C+16,C' '
         MVC   TRCM4C+17(L'TRCM4C-17),TRCM4C+16
         CVD   R3,WORKD
         MVC   TRCM4C(16),=XL16'40202020202020202020202020202120'
         ED    TRCM4C(16),WORKD
         LA    R0,15
         CLI   TRCM4C,C' '
         BNE   *+L'*+14
         MVC   TRCM4C(15),TRCM4C+1
         MVI   TRCM4C+15,C' '
         BCT   R0,*-18
         LA    R1,TRCM4C
         CLI   0(R1),C' '
         BE    *+L'*+8
         LA    R1,1(R1)
         B     *-12
         MVC   1(6,R1),=CL6'BYTES)'
        $PRINT TRCM4
         LTR   R15,R15
         BZR   R9
         B     TRCERR
TRCE3    LR    R1,R2
         XR    R0,R0
         LA    R14,L'TRCM3A
         LA    R15,TRCM3A
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    TRCM3A,=XL8'0F0F0F0F0F0F0F0F'
         TR    TRCM3A,TRHEX
         CVD   R2,WORKD
         MVC   TRCM3B(16),=XL16'40202020202020202020202020202120'
         ED    TRCM3B(16),WORKD
         LA    R0,15
         CLI   TRCM3B,C' '
         BNE   *+L'*+14
         MVC   TRCM3B(15),TRCM3B+1
         MVI   TRCM3B+15,C' '
         BCT   R0,*-18
         LA    R1,TRCM3B
         CLI   0(R1),C' '
         BE    *+L'*+8
         LA    R1,1(R1)
         B     *-12
         MVC   1(6,R1),=CL6'BYTES)'
        $PRINT TRCM3
         LTR   R15,R15
         BZR   R9
         B     TRCERR
TRCE4    L     R0,VLLN
         CVD   R0,WORKD
         MVC   TRCM1V,=XL6'402020202120'
         ED    TRCM1V,WORKD+L'WORKD-3
        $PRINT TRCM1
         LTR   R15,R15
         BNZ   TRCERR
         L     R0,VLMD
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'MD'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(13),=CL13'MACLIB''S DD''S'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,EMDL
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    AMDS,AMDS
         MVC   AMDE,SZMD
         L     R2,AMDS
         L     R3,AMDE
         BAS   R9,TRCE2
         L     R0,VLSD
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'SD'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(13),=CL13'SOURCE''S DD''S'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,ESDL
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    ASDS,ASDS
         MVC   ASDE,SZSD
         L     R2,ASDS
         L     R3,ASDE
         BAS   R9,TRCE2
         L     R0,VLMM
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'MM'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(22),=CL22'MACLIB''S MEMBERS NAMES'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,EMML
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    AMMS,AMMS
         MVC   AMME,SZMM
         L     R2,AMMS
         L     R3,AMME
         BAS   R9,TRCE2
         L     R0,VLSM
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'SM'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(22),=CL22'SOURCE''S MEMBERS NAMES'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,ESML
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    ASMS,ASMS
         MVC   ASME,SZSM
         L     R2,ASMS
         L     R3,ASME
         BAS   R9,TRCE2
         L     R0,VLRN
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'RN'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(18),=CL18'REFERENCE ELEMENTS'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,ERNL
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    ARNS,ARNS
         MVC   ARNE,SZRN
         L     R2,ARNS
         L     R3,ARNE
         BAS   R9,TRCE2
         L     R0,VLIM
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'IM'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(22),=CL22'SOURCE INTERNAL MACROS'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,EIML
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    AIMS,AIMS
         MVC   AIME,SZIM
         L     R2,AIMS
         L     R3,AIME
         BAS   R9,TRCE2
         L     R0,VLUM
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'UM'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(24),=CL24'SOURCE UNRESOLVED MACROS'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,EUML
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    AUMS,AUMS
         MVC   AUME,SZUM
         L     R2,AUMS
         L     R3,AUME
         BAS   R9,TRCE2
         L     R0,VLCM
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'CM'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(18),=CL18'COPY MODULES NAMES'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,ECML
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    ACMS,ACMS
         MVC   ACME,SZCM
         L     R2,ACMS
         L     R3,ACME
         BAS   R9,TRCE2
         L     R0,VLOC
         CVD   R0,WORKD
         MVC   TRCM2V,=XL6'402020202120'
         ED    TRCM2V,WORKD+L'WORKD-3
         MVC   TRCM2I,=CL2'OC'
         MVC   TRCM2N(L'TRCM2N),TRCM2N-1
         MVC   TRCM2N(15),=CL15'OPERATION CODES'
        $PRINT TRCM2
         LTR   R15,R15
         BNZ   TRCERR
         LH    R2,EOCL
         BAS   R9,TRCE3
         TM    SW2,SWFTR
         BZ    *+L'*+12
         XC    AOCS,AOCS
         MVC   AOCE,SZOC
         L     R2,AOCS
         L     R3,AOCE
         BAS   R9,TRCE2
         L     R2,WADDR
         L     R3,WSIZE
         AR    R3,R2
         MVI   TRCM4,C'0'
         MVC   TRCM4+6(12),=CL12'===> TOTAL -'
         BAS   R9,TRCE2
TRCE5    TM    SW2,SWFTR
         BO    LEAVE
         B     TRCEX
         SPACE 1
         DC    AL1(TRCM0L)
TRCM0    DC    C'1 CURRENT VALUE OF PARAMETERS AND '
         DC    C'WORK-AREAS SPACE :'
TRCM0L   EQU   *-TRCM0
         DC    AL1(TRCM0UL)
TRCM0U   DC    C'+ ________________________________'
         DC    C'__________________'
TRCM0UL  EQU   *-TRCM0U
         DC    AL1(TRCM1L)
TRCM1    DC    CL10'0     LN :'
TRCM1V   DC    CL6' ',C' - LINES PER PAGE'
TRCM1L   EQU   *-TRCM1
         DC    AL1(TRCM2L)
TRCM2    DC    CL6'0 '
TRCM2I   DC    CL2'  ',CL2' :'
TRCM2V   DC    CL6' ',C' - MAXIMUM NUMBER OF '
TRCM2N   DC    CL25' '
TRCM2L   EQU   *-TRCM2
         DC    AL1(TRCM3L)
TRCM3    DC    CL19' ',C'ELEMENT LENGTH : '
TRCM3A   DC    CL8' ',C' ('
TRCM3B   DC    CL24' '
TRCM3L   EQU   *-TRCM3
         DC    AL1(TRCM4L)
TRCM4    DC    CL19' ',C'AREA ADDRESS : '
TRCM4A   DC    CL8' ',C' LENGTH : '
TRCM4B   DC    CL8' ',C' ('
TRCM4C   DC    CL24' '
TRCM4L   EQU   *-TRCM4
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                   O P E R A T I O N     C O D E S                   *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- GET TODAY'S DATE AND BUILD OPERATION CODES TABLE
         SPACE 1
BOPC0   $GFDATE ,,WORKD            TODAY DATE
         LTR   R15,R15
         BZ    BOPC1
         STC   R15,MEGFD+42
         OI    MEGFD+42,C'0'
         LA    R1,MEGFD
         BAS   R9,PERR
         B     LEAVE
BOPC1    MVC   COVDATE(2),WORKD+2
         MVI   COVDATE+2,C'/'
         MVC   COVDATE+3(2),WORKD
         MVI   COVDATE+5,C'/'
         MVC   COVDATE+6(4),WORKD+4
         MVC   IXT1D,COVDATE
         MVC   MCT1D,COVDATE
         MVC   SRT1D,COVDATE
         MVC   MRT1D,COVDATE
BOPC2    L     R1,OPCTDSN          GET OPERATION CODES
         XR    R14,R14
         IC    R14,0(R1)
         LA    R15,1(R1)
         LA    R1,1(R1,R14)
         ST    R1,OPCTDSN
         CLI   0(R1),OPCDSNE
         BNE   *+L'*+8
         LA    R8,LEAVE
         B     *+L'*+4
         LA    R8,BOPC2
         BAS   R9,XDYNALL
         B     BOPC4               OK
         B     BOPC3               NOT DSORG=PO
         LA    R1,DYNERR           ERROR
         BAS   R9,PERR
         LA    R1,DYNDSN
         BAS   R9,PERR
         BR    R8
BOPC3    LA    R1,DYNNPO
         BAS   R9,PERR
         BR    R8
BOPC4    MVC   DDNME,ALLDDN
         MVC   PARMNME(L'PARMNME),ALLDSN+OPCNPTR
        $MOPEN WORKD,DDNME
         LTR   R15,R15
         BZ    BOPC5
         STC   R15,MEGO1+41
         OI    MEGO1+41,C'0'
         MVC   MEGO1+5(L'PARMNME),PARMNME
         LA    R1,MEGO1
         BAS   R9,PERR
         BR    R8
BOPC5    CLC   WORKD(4),=F'80'
         BE    BOPC6
         MVC   MEGO2+5(L'PARMNME),PARMNME
         LA    R1,MEGO2
         BAS   R9,PERR
         B     BOPC11
BOPC6    LA    R2,OPCNME
        $MFIND (R2),DDNME
         LTR   R15,R15
         BZ    BOPC10
         STC   R15,MEGO3+52
         OI    MEGO3+52,C'0'
         MVC   MEGO3+23(L'OPCNME),OPCNME
         MVC   MEGO3+5(L'PARMNME),PARMNME
         LA    R1,MEGO3
         BAS   R9,PERR
         B     BOPC11
BOPC10   L     R10,=A(ROPC0)       GO READ OPERATION CODES
         BR    R10
BOPC11  $MCLOSE DDNME
         LTR   R15,R15
         BZ    BOPC21
         STC   R15,MEGO4+43
         OI    MEGO4+43,C'0'
         MVC   MEGO4+5(L'PARMNME),PARMNME
         LA    R1,MEGO4
         BAS   R9,PERR
         BR    R8
BOPC21   TM    SW2,SWERR
         BO    R8
         B     BOPCX
         SPACE 1
*------- XDYNALL - EXECUTE DYNALLOC SUBROUTINE
*              R0-R1-R14-R15 = WORK REGISTERS
*              R9 = LINK REGISTER - RETURN +0 = OK
*                                          +4 = NOT DSORG=PO
*                                          +8 = ERROR
         SPACE 1
XDYNALL  LA    R0,L'ALLDDN
         STCM  R0,B'0011',ALLDDNL
         MVI   ALLDSN,C' '
         MVC   ALLDSN+1(L'ALLDSN-1),ALLDSN
         MVC   ALLDDN(L'ALLDDN),ALLDSN
         STCM  R14,B'0011',ALLDSNL
         BCT   R14,*+L'*+6
         MVC   ALLDSN(*-*),0(R15)  EXECUTED
         EX    R14,*-6
         XC    ALLDSORG(L'ALLDSORG),ALLDSORG
         LA    R1,ALLRB            RB POINTER
         USING S99RB,R1
         XC    S99ERROR(L'S99ERROR+L'S99INFO),S99ERROR
         DROP  R1
         LA    R1,ALLRBPTR         ALLOCATION PARM. LIST
        DYNALLOC ,                 EXECUTE SVC99
         LTR   R15,R15             HOW COMPLETE ?
         BNZ   XDYN1               ALLOCATION ERROR
         CLC   ALLDSORG(L'ALLDSORG),=AL1(DCBDSGPO,0)
         BER   R9                  OK
         MVI   DYNNPO+L'ALLDSN+14,C' '
         MVC   DYNNPO+L'ALLDSN+15(13),DYNNPO+L'ALLDSN+14
         MVC   DYNNPO+14(L'ALLDSN),ALLDSN
         XR    R1,R1
         ICM   R1,B'0011',ALLDSNL
         LA    R1,DYNNPO+14(R1)
         MVC   0(14,R1),=CL14'" NOT DSORG=PO'
         B     4(R9)
XDYN1    LA    R0,4
         LA    R1,DYNERR+24
         SLL   R15,16
         XR    R14,R14
         SLDL  R14,4
         STC   R14,0(R1)
         LA    R1,1(R1)
         BCT   R0,*-12
         NC    DYNERR+49(4),=XL4'0F0F0F0F'
         TR    DYNERR+49(4),TRHEX
         LA    R1,ALLRB            RB POINTER
         USING S99RB,R1
         UNPK  DYNERR+26(5),S99ERROR(3) SET ERROR CODE
         NC    DYNERR+26(4),=XL4'0F0F0F0F'
         TR    DYNERR+26(4),TRHEX
         MVI   DYNERR+30,C' '
         UNPK  DYNERR+38(5),S99INFO(3) SET INFO CODE
         NC    DYNERR+38(4),=XL4'0F0F0F0F'
         TR    DYNERR+38(4),TRHEX
         MVI   DYNERR+42,C' '
         DROP  R1
         MVC   DYNDSN+20(L'ALLDSN),ALLDSN
         B     8(R9)
         SPACE 1
OPCTDSN  DC    A(OPCDSN)
         SPACE 1
ALLRBPTR DC    A(X'80000000'+ALLRB)     SVC 99 REQUEST BLOCK POINTER
ALLRB    DS    0F                  SVC 99 REQUEST BLOCK
         DC    AL1(ALLRBLN)             RB LENGTH IN BYTES
         DC    AL1(S99VRBAL)            VERB CODE (DSNAME ALLOC.)
         DC    AL1(S99NOCNV+S99NOMNT,0) FLAGS 1
         DC    XL2'0'                   ERROR CODE
         DC    XL2'0'                   INFO CODE
         DC    A(ALLTUP)                POINTER TO TEXT UNIT POINTERS
         DC    XL4'0'                   RESERVED
         DC    XL4'0'                   FLAGS 2
ALLRBLN  EQU   *-ALLRB             RB LENGTH
ALLTUP   DS    0F                  TEXT UNIT POINTERS
         DC    A(ALLTUKY1)
         DC    A(ALLTUKY2)
         DC    A(ALLTUKY3)
         DC    A(ALLTUKY4)
         DC    A(X'80000000'+ALLTUKY5)
ALLTUKY1 DC    AL2(DALDSNAM),AL2(1)     DSNAME
ALLDSNL  DC    AL2(*-*)                 LENGTH OF DSNAME
ALLDSN   DC    CL44' '                  DSNAME
ALLTUKY2 DC    AL2(DALSTATS),AL2(1,1),XL1'08' SHR STATUS
ALLTUKY3 DC    AL2(DALCLOSE),AL2(0)     UNALLOC AT CLOSE
ALLTUKY4 DC    AL2(DALRTDDN),AL2(1)     DDNAME RETURN
ALLDDNL  DC    AL2(L'ALLDDN)            LENGTH OF DDNAME
ALLDDN   DC    CL8' '                   DDNAME
ALLTUKY5 DC    AL2(DALRTORG),AL2(1,2)   DSORG RETURN
ALLDSORG DC    XL2'0'                   DSORG
         SPACE 1
MEGFD   WTO    'TODAY DATE OBTAIN ERROR ($GFDATE RC =  )',             X
               ROUTCDE=11,DESC=7,MF=L
DYNNPO  WTO    'DATA-SET "                                             X
                            ',ROUTCDE=11,DESC=7,MF=L
DYNERR  WTO    'DYNALLOC ERROR : DARC=     / INFO=     / R15=     ',   X
               ROUTCDE=11,DESC=7,MF=L
DYNDSN  WTO    'DATA-SET NAME :                                        X
                     ',ROUTCDE=11,DESC=7,MF=L
MEGO1   WTO    '"        " / OPEN ERROR ($MOPEN RC =  )',              X
               ROUTCDE=11,DESC=7,MF=L
MEGO2   WTO    '"        " / DATA-SET IS NOT LRECL=80',                X
               ROUTCDE=11,DESC=7,MF=L
MEGO3   WTO    '"        " / FIND "        " ERROR ($MFIND RC =  )',   X
               ROUTCDE=11,DESC=7,MF=L
MEGO4   WTO    '"        " / CLOSE ERROR ($MCLOSE RC =  )',            X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         SPACE 1
*------- DATA-SET(S) - MEMBER DEFINITIONS
         SPACE 1
OPCDSN   DS    0XL1                DATA-SET(S) NAME(S)
         DC    AL1(L'OPCDSN1)
OPCNPTR  EQU   5,8                 -> SHORT NAME FOR DIAGNOSE
OPCDSN1  DC    C'SYS1.PARMLIB'
         DC    AL1(L'OPCDSN2)
OPCDSN2  DC    C'SYS1.APARMLIB'
OPCDSNE  EQU   X'FF'               END OF NAME(S)
         DC    AL1(OPCDSNE)        END OF NAME(S)
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                B U I L D     C O D E S     T A B L E                *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- OPERATION CODES TABLE
         SPACE 1
ROPC0    L     R5,AOCS
         LH    R6,EOCL
         L     R7,AOCE
         SR    R5,R6               ADJUST FOR BXLE
         SR    R7,R6
         USING OCENT,R5
ROPC1   $MREAD WCRD,DDNME
         LTR   R15,R15
         BM    ROPC10
         BZ    ROPC2
         STC   R15,MERO1+52
         OI    MERO1+52,C'0'
         MVC   MERO1+23(L'OPCNME),OPCNME
         MVC   MERO1+5(L'PARMNME),PARMNME
         LA    R1,MERO1
         BAS   R9,PERR
         B     ROPCX
ROPC2    LA    R1,WCRD             ANALYZE OP-CODE CARD
         LA    R2,1
         LA    R3,71(R1)
         CLI   0(R1),C' '
         BNE   *+L'*+8
         BXLE  R1,R2,*-8
         B     ROPC1               NONE, SKIP
         CLC   0(4,R1),=CL4'KEY='
         BNE   ROPC1               WHAT'S THAT, SKIP
         LA    R1,3(R1)
         BXLE  R1,R2,*+L'*+4
         B     ROPC1               NONE, SKIP
         CLI   0(R1),C' '
         BE    ROPC1               NONE, SKIP
         LA    R0,L'WORKD
         LA    R4,WORKD
         MVC   WORKD,=CL8' '
ROPC3    CLI   0(R1),C' '
         BE    ROPC4
         MVC   0(1,R4),0(R1)
         BXLE  R1,R2,*+L'*+4
         B     ROPC4
         LA    R4,1(R4)
         BCT   R0,ROPC3
         CLI   0(R1),C' '
         BNE   ROPC1               TOO LONG, SKIP
ROPC4    BXLE  R5,R6,*+L'*+12
ROPC5    LA    R1,MERO2
         BAS   R9,PERR
         B     ROPCX
         MVC   OCNME,WORKD
         LA    R0,WORKD+1          +1 FOR MACHINE LENGTH
         SLR   R4,R0
         STC   R4,OCNLG
         B     ROPC1               NEXT ONE
ROPC10   CL    R5,AOCS
         BNL   ROPC11
         MVC   MERO3+40(L'OPCNME),OPCNME
         MVC   MERO3+5(L'PARMNME),PARMNME
         LA    R1,MERO3
         BAS   R9,PERR
         B     ROPCX
ROPC11   LA    R0,NXTSS
         L     R1,=A(EXTASS)
         LTR   R0,R0
         BNP   ROPC20
ROPC12   L     R4,AOCS
ROPC13   CLC   0(OCLGTH,R1),0(R4)
         BE    ROPC14
         CLR   R4,R5
         BNL   *+L'*+6
         ALR   R4,R6
         B     ROPC13
         BXLE  R5,R6,*+L'*+4
         B     ROPC5
         MVC   OCNLG(OCLGTH),0(R1)
ROPC14   ALR   R1,R6
         BCT   R0,ROPC12
         DROP  R5
ROPC20   ST    R5,OCMPTR
         CL    R5,AOCS
         BE    ROPC21
         ALR   R5,R6
         L     R7,AOCS
         SLR   R5,R7
         XR    R4,R4
         DR    R4,R6
        $SORT  (R7),(R5),OCLGTH,0,OCLGTH
ROPC21   L     R5,AOCS
         LH    R6,EOCL
         L     R7,OCMPTR
         LA    R4,OCTIX
         USING OCENT,R5
ROPC22   MVC   0(L'OCNLG,R4),OCNLG
         STCM  R5,B'1111',1(R4)
         BXLE  R5,R6,*+L'*+4
         B     ROPC23
         CLC   0(L'OCNLG,R4),OCNLG
         BE    *-14
         LA    R4,L'OCTIX(R4)
         B     ROPC22
         DROP  R5
ROPC23   LA    R4,L'OCTIX(R4)
         MVI   0(R4),X'FF'
         SPACE 1
ROPCX    MVI   WCRD,C' '
         MVC   WCRD+1(L'WCRD-1),WCRD
         LA    R8,LEAVE
         L     R14,=A(BOPC0)
         USING BOPC0,R14
         LA    R15,BOPC11
         DROP  R14
         LR    R10,R14
         BR    R15
         SPACE 1
MERO1   WTO    '"        " / READ "        " ERROR ($MREAD RC =  )',   X
               ROUTCDE=11,DESC=7,MF=L
MERO2   WTO    'TOO MANY OPERATION CODES ("OC" VALUE OVERFLOW)',       X
               ROUTCDE=11,DESC=7,MF=L
MERO3   WTO    '"        " / NO OPERATION CODES IN "        " MEMBER)',X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         SPACE 1
*------- EXTRAS ASSEMBLER DEFINITIONS
         SPACE 1
EXTASS   DS    0XL(OCLGTH)         SEE OCENT DSECT
         DC    XL1'04',CL8'AMODE   '
         DC    XL1'04',CL8'AREAD   '
         DC    XL1'03',CL8'CCW0    '
         DC    XL1'03',CL8'CCW1    '
         DC    XL1'04',CL8'MHELP   '
         DC    XL1'04',CL8'RMODE   '
NXTSS    EQU   (*-EXTASS)/OCLGTH
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                G E T     M E M B E R S     N A M E S                *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- GET MACLIB'S MEMBERS NAMES
         SPACE 1
GMMN0    L     R4,AMMS
         USING MMENT,R4
         L     R5,AMDS
         L     R6,AMDN
         USING MDENT,R5
         MVC   MERR2+13(6),=CL6'MACLIB'
         MVI   MERR2+38,C'M'
GMMN1    LA    R3,MDNME
         LA    R2,MDDSN
        $PDOPEN (R2),(R3)
         LTR   R15,R15
         BNZ   *+L'*+8
         ST    R4,MDMMS
         B     GMMN3
         STC   R15,MERR3+42
         OI    MERR3+42,C'0'
         MVC   MERR3+5(L'MDNME),MDNME
         LA    R1,MERR3
         BAS   R9,PERR
         B     LEAVE
GMMN2    STC   R15,MERR4+42
         OI    MERR4+42,C'0'
         MVC   MERR4+4(L'MDNME),MDNME
         LA    R1,MERR4
         BAS   R9,PERR
         B     GMMN4
GMMN3   $PDREAD WLNE,(R3)
         LTR   R15,R15
         BP    GMMN2
         BM    GMMN4
         CL    R4,AMME
         BL    *+L'*+12
         LA    R1,MERR2
         BAS   R9,PERR
         B     GMMN4
         MVC   MMNME(L'MMNME),WLNE
         ST    R4,MDMME
         AH    R4,EMML
         B     GMMN3
GMMN4   $PDCLOSE (R3)
         LTR   R15,R15
         BZ    GMMN5
         STC   R15,MERR5+44
         OI    MERR5+44,C'0'
         MVC   MERR5+5(L'MDNME),MDNME
         LA    R1,MERR5
         BAS   R9,PERR
         B     LEAVE
GMMN5    TM    SW2,SWERR
         BO    LEAVE
         BCT   R6,*+L'*+4
         B     GSMN0
         AH    R5,EMDL
         CL    R4,AMME
         BL    *+L'*+12
         LA    R1,MERR2
         BAS   R9,PERR
         B     LEAVE
         AH    R4,EMML
         B     GMMN1
         DROP  R4,R5
         SPACE 1
*------- GET SOURCE'S MEMBERS NAMES
         SPACE 1
GSMN0    L     R4,ASMS
         USING SMENT,R4
         L     R5,ASDS
         L     R6,ASDN
         USING SDENT,R5
         MVC   MERR2+13(6),=CL6'SOURCE'
         MVI   MERR2+38,C'S'
GSMN1    LA    R3,SDNME
         LA    R2,SDDSN
        $PDOPEN (R2),(R3)
         LTR   R15,R15
         BNZ   *+L'*+8
         ST    R4,SDSMS
         B     GSMN3
         STC   R15,MERR3+42
         OI    MERR3+42,C'0'
         MVC   MERR3+5(L'SDNME),SDNME
         LA    R1,MERR3
         BAS   R9,PERR
         B     LEAVE
GSMN2    STC   R15,MERR4+42
         OI    MERR4+42,C'0'
         MVC   MERR4+5(L'SDNME),SDNME
         LA    R1,MERR4
         BAS   R9,PERR
         B     GSMN4
GSMN3   $PDREAD WLNE,(R3)
         LTR   R15,R15
         BP    GSMN2
         BM    GSMN4
         CL    R4,ASME
         BL    *+L'*+12
         LA    R1,MERR2
         BAS   R9,PERR
         B     GSMN4
         MVC   SMNME(L'SMNME),WLNE
         ST    R4,SDSME
         AH    R4,ESML
         B     GSMN3
GSMN4   $PDCLOSE (R3)
         LTR   R15,R15
         BZ    GSMN5
         STC   R15,MERR5+44
         OI    MERR5+44,C'0'
         MVC   MERR5+5(L'SDNME),SDNME
         LA    R1,MERR5
         BAS   R9,PERR
         B     LEAVE
GSMN5    TM    SW2,SWERR
         BO    LEAVE
         BCT   R6,*+L'*+4
         B     TTLP0
         AH    R5,ESDL
         CL    R4,ASME
         BL    *+L'*+12
         LA    R1,MERR2
         BAS   R9,PERR
         B     LEAVE
         AH    R4,ESML
         B     GSMN1
         DROP  R4,R5
         SPACE 1
*------- PRINT COVER (TITLE'S) PAGES
         SPACE 1
TTLP0    L     R3,VLLN
         LA    R1,2
         SR    R3,R1
         XR    R2,R2
         LA    R1,3
         DR    R2,R1
         AR    R2,R3
         BCTR  R3,0
         LA    R4,2                PRINT TWICE THE COVER PAGE
TTLP1   $PRINT COV1,,TTLDD
         LTR   R15,R15
         BZ    *+L'*+10
TTLPERR  MVC   MERR1+5(L'TTLDD),TTLDD
         B     LSTERR
        $PRINT COV2,,TTLDD
         LTR   R15,R15
         BNZ   TTLPERR
         LR    R5,R3
TTLP2   $PRINT WCRD,,TTLDD
         LTR   R15,R15
         BNZ   TTLPERR
         BCT   R5,TTLP2
        $PRINT COV3,,TTLDD
         LTR   R15,R15
         BNZ   TTLPERR
         LR    R5,R2
TTLP3   $PRINT WCRD,,TTLDD
         LTR   R15,R15
         BNZ   TTLPERR
         BCT   R5,TTLP3
        $PRINT COV4,,TTLDD
         LTR   R15,R15
         BNZ   TTLPERR
         BCT   R4,TTLP1
         B     GMMNX
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                      S C A N     M O D U L E S                      *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- SCAN SOURCE'S MEMBERS
         SPACE 1
SCSM0    L     R8,ASDS
         L     R7,ASDN
         USING SDENT,R8
         L     R1,ARNS
         SH    R1,ERNL
         ST    R1,CRNPTR
SCSM1    MVC   DDNME,SDNME
        $MOPEN WORKD,DDNME
         LTR   R15,R15
         BZ    SCSM2
         STC   R15,MESM1+41
         OI    MESM1+41,C'0'
         MVC   MESM1+5(L'DDNME),DDNME
         LA    R1,MESM1
         BAS   R9,PERR
         B     LEAVE
SCSM2    CLC   WORKD(4),=F'80'
         BE    SCSM3
         MVC   MESM2+5(L'DDNME),DDNME
         LA    R1,MESM2
         BAS   R9,PERR
         B     SCSM50
SCSM3    ZAP   SRLN,=PL2'+99'
         MVC   SRT2N,SDDSN
         MVC   SRT2V,SDVOL
         ZAP   SDIXP,SRPG
         AP    SDIXP,=PL1'+1'
         L     R6,SDSMS
         USING SMENT,R6
SCSM4    MVC   PVOPRF,=CL8' '
         L     R1,AIMS
         USING IMENT,R1
SCSM5    CLI   IMNME,0
         BE    *+L'*+18
         XC    IMNME(IMLGTH),IMNME
         AH    R1,EIML
         CL    R1,AIME
         BL    SCSM5
         DROP  R1
         L     R1,AUMS
         USING UMENT,R1
SCSM6    CLI   UMNME,0
         BE    *+L'*+18
         XC    UMNME(UMLGTH),UMNME
         AH    R1,EUML
         CL    R1,AUME
         BL    SCSM6
         DROP  R1
         L     R1,ACMS
         USING CMENT,R1
SCSM7    CLI   CMNME,0
         BE    *+L'*+18
         XC    CMNME(CMLGTH),CMNME
         AH    R1,ECML
         CL    R1,ACME
         BL    SCSM7
         DROP  R1
         LA    R2,SMNME
        $MFIND (R2),DDNME
         LTR   R15,R15
         BZ    SCSM10
         STC   R15,MESM3+52
         OI    MESM3+52,C'0'
         MVC   MESM3+23(L'SMNME),SMNME
         MVC   MESM3+5(L'DDNME),DDNME
         LA    R1,MESM3
         BAS   R9,PERR
         B     SCSM50
SCSM10   L     R10,=A(ASSC0)       GO SCAN SOURCE
         BR    R10
SCSM11   L     R5,AMDS             PRINT MODULE'S OCCURRENCES
         L     R4,AMDN
         USING MDENT,R5
         MVC   SRT5N,SMNME
         OI    SW3,SWMNP+SWCMP     FIRST COPY MODULES NAMES
         NI    SW3,255-SWUMP-SWIMP-SWDSP
         L     R3,ACMS
         USING CMENT,R3
         CLI   CMNME,0
         BE    SCSM20
SCSM12   LA    R1,4
         LA    R2,SRT4M
SCSM13   MVC   3(L'CMNME,R2),CMNME
         L     R0,CMCNT
         LTR   R0,R0
         BNP   SCSM14
         CVD   R0,WORKD
         MVC   11(6,R2),=XL6'402020202120'
         ED    11(6,R2),WORKD+L'WORKD-3
SCSM14   AH    R3,ECML
         CL    R3,ACME
         BNL   SCSM15
         CLI   CMNME,0
         BE    SCSM15
         BCT   R1,*+L'*+8
         BAS   R9,SRPRT
         B     SCSM12
         LA    R2,L'SRT4M(R2)
         B     SCSM13
         DROP  R3
SCSM15   CLI   SRT4M+3,C' '
         BE    SCSM20
         BAS   R9,SRPRT
SCSM20   OI    SW3,SWIMP           THEN INTERNAL MACROS
         NI    SW3,255-SWCMP
         L     R3,AIMS
         USING IMENT,R3
         CLI   IMNME,0
         BE    SCSM30
SCSM21   LA    R1,4
         LA    R2,SRT4M
SCSM22   MVC   3(L'IMNME,R2),IMNME
         L     R0,IMCNT
         LTR   R0,R0
         BNP   SCSM23
         CVD   R0,WORKD
         MVC   11(6,R2),=XL6'402020202120'
         ED    11(6,R2),WORKD+L'WORKD-3
SCSM23   AH    R3,EIML
         CL    R3,AIME
         BNL   SCSM24
         CLI   IMNME,0
         BE    SCSM24
         BCT   R1,*+L'*+8
         BAS   R9,SRPRT
         B     SCSM21
         LA    R2,L'SRT4M(R2)
         B     SCSM22
         DROP  R3
SCSM24   CLI   SRT4M+3,C' '
         BE    SCSM30
         BAS   R9,SRPRT
SCSM30   OI    SW3,SWUMP           THEN UNRESOLVED MACROS
         NI    SW3,255-SWIMP
         L     R3,AUMS
         USING UMENT,R3
         CLI   UMNME,0
         BE    SCSM40
SCSM31   LA    R1,4
         LA    R2,SRT4M
SCSM32   MVC   3(L'UMNME,R2),UMNME
         L     R0,UMCNT
         LTR   R0,R0
         BNP   SCSM33
         CVD   R0,WORKD
         MVC   11(6,R2),=XL6'402020202120'
         ED    11(6,R2),WORKD+L'WORKD-3
SCSM33   AH    R3,EUML
         CL    R3,AUME
         BNL   SCSM34
         CLI   UMNME,0
         BE    SCSM34
         BCT   R1,*+L'*+8
         BAS   R9,SRPRT
         B     SCSM31
         LA    R2,L'SRT4M(R2)
         B     SCSM32
         DROP  R3
SCSM34   CLI   SRT4M+3,C' '
         BE    SCSM40
         BAS   R9,SRPRT
SCSM40   NI    SW3,255-SWUMP       AND THEN  EXTERNAL MACROS
SCSM41   L     R3,MDMMS
         USING MMENT,R3
         MVI   SRT6N,C' '
         MVC   SRT6N+1(L'SRT6N-1),SRT6N
         MVC   SRT6N(L'MDDSN),MDDSN
         LA    R1,SRT6N+L'MDDSN-1
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         MVC   1(10,R1),=CL10'" MACROS :'
         OI    SW3,SWDSP
SCSM42   LA    R1,4
         LA    R2,SRT4M
SCSM43   L     R0,MMCNT
         LTR   R0,R0
         BNP   SCSM44
         MVC   3(L'MMNME,R2),MMNME
         CVD   R0,WORKD
         MVC   11(6,R2),=XL6'402020202120'
         ED    11(6,R2),WORKD+L'WORKD-3
         A     R0,MMDST
         ST    R0,MMDST
         XC    MMCNT,MMCNT
SCSM44   CL    R3,MDMME
         BNL   SCSM45
         AH    R3,EMML
         CLI   3(R2),C' '
         BE    SCSM43
         BCT   R1,*+L'*+8
         BAS   R9,SRPRT
         B     SCSM42
         LA    R2,L'SRT4M(R2)
         B     SCSM43
SCSM45   CLI   SRT4M+3,C' '
         BE    *+L'*+4
         BAS   R9,SRPRT
         AH    R5,EMDL
         BCT   R4,SCSM41
         DROP  R3,R5
         CL    R6,SDSME
         BNL   SCSM50
         AH    R6,ESML
         B     SCSM4
         DROP  R6
SCSM50  $MCLOSE DDNME
         LTR   R15,R15
         BZ    SCSM51
         STC   R15,MESM4+43
         OI    MESM4+43,C'0'
         MVC   MESM4+5(L'DDNME),DDNME
         LA    R1,MESM4
         BAS   R9,PERR
         B     LEAVE
SCSM51   TM    SW2,SWERR
         BO    LEAVE
         XR    R0,R0
         L     R5,AMDS
         L     R4,AMDN
         USING MDENT,R5
SCSM52   L     R3,MDMMS
         USING MMENT,R3
SCSM53   L     R2,MMTOT
         A     R2,MMDST
         ST    R0,MMDST
         ST    R2,MMTOT
         CL    R3,MDMME
         BNL   *+L'*+8
         AH    R3,EMML
         B     SCSM53
         AH    R5,EMDL
         BCT   R4,SCSM52
         DROP  R3,R5
         CP    SDIXP,SRPG
         BNH   *+L'*+6
         XC    SDIXP,SDIXP
         AH    R8,ESDL
         BCT   R7,SCSM1
         B     SCSMX
         DROP  R8
         SPACE 1
SRPRT    TM    SW3,SWMNP+SWCMP     SOURCES DETAILS PRINT SUBROUTINE
         BO    SRPRT1              R0-R1-R14-R15  = WORK REGISTERS
         TM    SW3,SWMNP+SWIMP     R9 = LINK REGISTER
         BO    SRPRT1
         TM    SW3,SWMNP+SWUMP
         BO    SRPRT1
         TM    SW3,SWMNP+SWDSP
         BO    SRPRT1
         BM    *+L'*+10
         CP    SRLN,MXLN2
         B     SRPRT2
         TM    SW3,SWMNP
         BO    *+L'*+10
         CP    SRLN,MXLN3
         B     SRPRT2
         CP    SRLN,MXLN4
         B     SRPRT2
SRPRT1   CP    SRLN,MXLN5
SRPRT2   BL    SRPRT3
         ZAP   SRLN,=PL1'+0'
         AP    SRPG,=PL1'+1'
         MVC   SRT1P,=XL6'402020202120'
         ED    SRT1P,SRPG
         MVI   SRT1P,C'/'
        $PRINT SRT1,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
        $PRINT SRT1U,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
        $PRINT SRT2,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
        $PRINT SRT2U,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
        $PRINT SRT3,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
        $PRINT SRT3U,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
SRPRT3   TM    SW3,SWMNP
         BZ    SRPRT4
         NI    SW3,255-SWMNP
        $PRINT SRT5,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+2'
SRPRT4   TM    SW3,SWDSP
         BZ    SRPRT5
         NI    SW3,255-SWDSP
        $PRINT SRT6,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+1'
SRPRT5   TM    SW3,SWCMP
         BZ    SRPRT6
         NI    SW3,255-SWCMP
        $PRINT SRT7,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+1'
         B     SRPRT8
SRPRT6   TM    SW3,SWIMP
         BZ    SRPRT7
         NI    SW3,255-SWIMP
        $PRINT SRT8,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+1'
         B     SRPRT8
SRPRT7   TM    SW3,SWUMP
         BZ    SRPRT8
         NI    SW3,255-SWUMP
        $PRINT SRT9,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+1'
SRPRT8  $PRINT SRT4,,SRLDD
         LTR   R15,R15
         BNZ   SRPRTX
         AP    SRLN,=PL1'+1'
         MVC   SRT4M(4*L'SRT4M),SRT4M-1
         BR    R9
SRPRTX   MVC   MERR1+5(L'SRLDD),SRLDD
         B     LSTERR
         SPACE 1
MESM1   WTO    '"        " / OPEN ERROR ($MOPEN RC =  )',              X
               ROUTCDE=11,DESC=7,MF=L
MESM2   WTO    '"        " / DATA-SET IS NOT LRECL=80',                X
               ROUTCDE=11,DESC=7,MF=L
MESM3   WTO    '"        " / FIND "        " ERROR ($MFIND RC =  )',   X
               ROUTCDE=11,DESC=7,MF=L
MESM4   WTO    '"        " / CLOSE ERROR ($MCLOSE RC =  )',            X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                       S C A N     S O U R C E                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- ASSEMBLER SOURCE SCAN
         SPACE 1
         USING SMENT,R6
ASSC0   $MREAD WCRD,DDNME
         LTR   R15,R15
         BM    ASSCX1
         BZ    ASSC1
         STC   R15,MEAS1+52
         OI    MEAS1+52,C'0'
         MVC   MEAS1+23(L'SMNME),SMNME
         MVC   MEAS1+5(L'DDNME),DDNME
         LA    R1,MEAS1
         BAS   R9,PERR
         B     ASSCX2
ASSC1    LA    R1,WCRD             ANALYZE SYMBOLIC SOURCE CARD
         LA    R2,1
         LA    R3,71(R1)
         CLI   0(R1),C'*'
         BE    ASSC0               COMMENT, SKIP
         CLC   0(2,R1),=CL2'.*'
         BE    ASSC0               MACRO COMMENT, SKIP
         TM    SW4,SWCNT           CONTINUATION ?
         BZ    *+L'*+16            NO
         CLI   0(R3),C' '          END OF CONTINUATION ?
         BNE   ASSC0               NO, RETAIN IT AND SKIP
         NI    SW4,255-SWCNT       YES, SAY IT AND SKIP
         B     ASSC0
         CLC   PVOPRF,=CL8'REPRO   ' WAS PREVIOUS A REPRO ?
         BE    ASSC0               YES, SKIP
         CLC   0(2,R1),=CL2'//'
         BE    ASSCX1              SCRAMBLE (JCL)
         CLC   0(2,R1),=CL2'/*'
         BE    ASSCX1              SCRAMBLE (JCL)
         CLC   0(2,R1),=CL2'./'
         BE    ASSCX1              SCRAMBLE (CONTROL)
         CLI   0(R1),C' '
         BL    ASSCX1              SCRAMBLE (BINARY)
         CLI   0(R1),C'0'
         BNL   ASSCX1              SCRAMBLE (DATA)
         CLI   0(R1),C' '          GET THE OPERATION FIELD
         BE    *+L'*+8
         BXLE  R1,R2,*-8
         B     ASSC0               NONE, SKIP
         BXLE  R1,R2,*+L'*+4
         B     ASSC0               NONE, SKIP
         CLI   0(R1),C' '
         BE    *-12
         MVC   WORKD,=CL8' '
         LA    R0,L'WORKD
         LA    R15,WORKD
ASSC2    MVC   0(1,R15),0(R1)
         LA    R15,1(R15)
         BXLE  R1,R2,*+L'*+4
         B     *+L'*+16
         CLI   0(R1),C' '
         BE    *+L'*+8
         BCT   R0,ASSC2
         B     ASSC0               LONGER THAN 8 CHARACTERS, SKIP
         CLI   WORKD,C'Z'
         BH    ASSCX1              SCRAMBLE (DATA)
         CLI   WORKD,C'A'
         BNL   ASSC3
         CLI   WORKD,C'$'
         BE    ASSC3
         CLI   WORKD,C'#'
         BE    ASSC3
         CLI   WORKD,C'@'
         BE    ASSC3
         CLI   WORKD,C'&&'
         BNE   ASSCX1              SCRAMBLE (DATA)
ASSC3    LA    R15,L'WORKD
         SR    R15,R0
         STC   R15,CUROPL          LENGTH (MACHINE)
         MVC   CPYMOD,=CL8' '
         CLC   WORKD,=CL8'COPY    ' IS IT A COPY STATEMENT ?
         BNE   ASSC5               NO
         BXLE  R1,R2,*+L'*+4       YES, GET COPY MODULE NAME
         B     ASSC5               NONE, SKIP
         CLI   0(R1),C' '
         BE    *-12
         LA    R0,L'CPYMOD
         LA    R15,CPYMOD
ASSC4    MVC   0(1,R15),0(R1)
         LA    R15,1(R15)
         BXLE  R1,R2,*+L'*+4
         B     ASSC5
         CLI   0(R1),C' '
         BE    ASSC5
         BCT   R0,ASSC4
         B     ASSC60              LONGER THAN 8 CHARACTERS, SKIP
ASSC5    CLI   0(R3),C' '          CONTINUATION ON NEXT CARD ?
         BE    *+L'*+4             NO
         OI    SW4,SWCNT           YES, SAY IT
         CLC   PVOPRF,=CL8'MACRO   ' WAS PREVIOUS A MACRO DEFINITION ?
         BNE   ASSC20              NO
         L     R1,AIMS             YES, KEEP/COUNT INTERNAL MACROS
         USING IMENT,R1
ASSC10   CLI   IMNME,0
         BE    ASSC11
         CLC   IMNME,WORKD
         BE    ASSC60              TWICE, WHAT'S THAT, SKIP
         AH    R1,EIML
         CL    R1,AIME
         BL    ASSC10
         LA    R1,MEAS3
         BAS   R9,PERR
         B     ASSCX2
ASSC11   MVC   IMNME,WORKD         RETAIN MACRO NAME
         CL    R1,MIMPTR
         BNH   *+L'*+4
         ST    R1,MIMPTR
         L     R14,AUMS            UPDATE WITH UNRESOLVED MACRO IF IN
         USING UMENT,R14
ASSC12   CLI   UMNME,0
         BE    ASSC60
         CLC   UMNME,WORKD
         BE    ASSC13
         AH    R14,EUML
         CL    R14,AUME
         BL    ASSC12
         B     ASSC60
ASSC13   MVC   IMCNT,UMCNT
         CL    R14,MUMPTR          AND CANCEL MACRO NOW RESOLVED
         BNH   ASSC14
         LR    R0,R14
         AH    R14,EUML
         L     R1,MUMPTR
         SLR   R1,R0
         LR    R15,R1
         MVCL  R0,R14
         L     R14,MUMPTR
ASSC14   XC    UMNME(UMLGTH),UMNME
         B     ASSC60
         DROP  R14
ASSC20   L     R1,AIMS             LOOK FIRST TO INTERNAL MACROS
ASSC21   CLI   IMNME,0
         BE    ASSC23
         CLC   IMNME,WORKD
         BNE   ASSC22
         L     R0,IMCNT
         AR    R0,R2
         ST    R0,IMCNT
         B     ASSC60
ASSC22   AH    R1,EIML
         CL    R1,AIME
         BL    ASSC21
         DROP  R1
ASSC23   LA    R15,OCTIX           THEN SCAN IF OPERATION CODES
ASSC24   CLI   0(R15),X'FF'
         BE    ASSC30
         CLC   CUROPL,0(R15)
         BE    *+L'*+8
         LA    R15,L'OCTIX(R15)
         B     ASSC24
         ICM   R1,B'1111',1(R15)
         USING OCENT,R1
ASSC25   CLC   OCNME,WORKD
         BNE   ASSC26
         CLC   WORKD,=CL8'COPY    ' IS IT A COPY STATEMENT ?
         BE    ASSC50              YES
         B     ASSC60              NO
ASSC26   AH    R1,EOCL
         CLC   OCNLG,CUROPL
         BE    ASSC25
         DROP  R1
ASSC30   L     R5,AMDS             THEN LOOK TO EXTERNAL MACROS
         L     R4,AMDN
         USING MDENT,R5
ASSC31   L     R3,MDMMS
         USING MMENT,R3
ASSC32   CLC   MMNME,WORKD
         BL    ASSC36
         BH    ASSC37
         LA    R0,1
         L     R1,MMCNT
         AR    R1,R0
         ST    R1,MMCNT
         ICM   R1,B'1111',MMPTR
         BNZ   ASSC33
         L     R1,CRNPTR
         AH    R1,ERNL
         CL    R1,ARNE
         BNL   ASSC35
         ST    R1,CRNPTR
         ST    R1,MMPTR
         B     ASSC34
ASSC33   LR    R2,R1
         USING RNENT,R2
         CL    R6,RNSMA
         BE    *+L'*+12
         ICM   R1,B'1111',RNCHN
         BNZ   *-14
         B     *+L'*+14
         L     R1,RNCNT
         AR    R1,R0
         ST    R1,RNCNT
         B     ASSC60
         L     R1,CRNPTR
         AH    R1,ERNL
         CL    R1,ARNE
         BNL   ASSC35
         ST    R1,CRNPTR
         ST    R1,RNCHN
ASSC34   LR    R2,R1
         ST    R6,RNSMA
         ST    R0,RNCNT
         B     ASSC60
         DROP  R2
ASSC35   LA    R1,MEAS2
         BAS   R9,PERR
         B     ASSCX2
ASSC36   CL    R3,MDMME
         BNL   ASSC37
         AH    R3,EMML
         B     ASSC32
ASSC37   AH    R5,EMDL
         BCT   R4,ASSC31
         DROP  R3,R5
         L     R1,AUMS             HERE IT IS AN UNRESOLVED MACRO
         USING UMENT,R1
ASSC40   CLI   UMNME,0
         BE    ASSC42
         CLC   UMNME,WORKD
         BE    ASSC41
         AH    R1,EUML
         CL    R1,AUME
         BL    ASSC40
         LA    R1,MEAS5
         BAS   R9,PERR
         B     ASSCX2
ASSC41   LA    R0,1                UPDATE UNRESOLVED MACRO COUNT
         A     R0,UMCNT
         ST    R0,UMCNT
         B     ASSC60
ASSC42   MVC   UMNME,WORKD         RETAIN UNRESOLVED MACRO NAME
         LA    R0,1
         ST    R0,UMCNT
         CL    R1,MUMPTR
         BNH   ASSC60
         ST    R1,MUMPTR
         DROP  R1
         B     ASSC60
ASSC50   L     R1,ACMS             KEEP/COUNT COPY MODULES NAMES
         USING CMENT,R1
ASSC51   CLI   CMNME,0
         BE    ASSC53
         CLC   CMNME,CPYMOD
         BE    ASSC52
         AH    R1,ECML
         CL    R1,ACME
         BL    ASSC51
         LA    R1,MEAS4
         BAS   R9,PERR
         B     ASSCX2
ASSC52   LA    R0,1                UPDATE COPY MODULE NAME COUNT
         A     R0,CMCNT
         ST    R0,CMCNT
         B     ASSC60
ASSC53   MVC   CMNME,CPYMOD        RETAIN COPY MODULE NAME
         LA    R0,1
         ST    R0,CMCNT
         CL    R1,MCMPTR
         BNH   ASSC60
         ST    R1,MCMPTR
         DROP  R1
ASSC60   MVC   PVOPRF,WORKD
         B     ASSC0
         DROP  R6
         SPACE 1
ASSCX2   LA    R15,8
         B     ASSCX0
ASSCX1   XR    R15,R15
ASSCX0   L     R14,=A(SCSM0)
         B     *+L'*(R15)
         USING SCSM0,R14
         LA    R15,SCSM11
         B     *+L'*+4
         LA    R15,SCSM50
         DROP  R14
         LR    R10,R14
         BR    R15
         SPACE 1
MEAS1   WTO    '"        " / READ "        " ERROR ($MREAD RC =  )',   X
               ROUTCDE=11,DESC=7,MF=L
MEAS2   WTO    'NOT ENOUGH REFERENCE ELEMENTS ("RN" VALUE OVERFLOW)',  X
               ROUTCDE=11,DESC=7,MF=L
MEAS3   WTO    'TOO MANY INTERNAL MACRO NAMES ("IM" VALUE OVERFLOW)',  X
               ROUTCDE=11,DESC=7,MF=L
MEAS4   WTO    'TOO MANY COPY MODULES NAMES ("CM" VALUE OVERFLOW)',    X
               ROUTCDE=11,DESC=7,MF=L
MEAS5   WTO    'TOO MANY UNRESOLVED MACROS ("UM" VALUE OVERFLOW)',     X
               ROUTCDE=11,DESC=7,MF=L
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                      M A C R O S     P R I N T                      *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- PRINT ALL MACLIB'S OCCURRENCES
*        (AND START TO PRINT INDEX)
         SPACE 1
MAPR0    ZAP   IXLN,=PL2'+99'
         MVC   IXT3L,=CL15'MACROS TOTALS'
         L     R5,AMDS
         L     R4,AMDN
         USING MDENT,R5
PRMO1    ZAP   MCLN,=PL2'+99'
         MVC   MCT2N,MDDSN
         MVC   MCT2V,MDVOL
         ZAP   CTRL,MCPG
         AP    CTRL,=PL1'+1'
         L     R3,MDMMS
         USING MMENT,R3
PRMO2    LA    R1,4
         LA    R2,MCT4M
PRMO3    MVC   3(L'MMNME,R2),MMNME
         L     R0,MMTOT
         LTR   R0,R0
         BNP   PRMO4
         CVD   R0,WORKD
         MVC   11(6,R2),=XL6'402020202120'
         ED    11(6,R2),WORKD+L'WORKD-3
PRMO4    CL    R3,MDMME
         BNL   PRMO5
         AH    R3,EMML
         BCT   R1,*+L'*+8
         BAS   R9,MCPRT
         B     PRMO2
         LA    R2,L'MCT4M(R2)
         B     PRMO3
PRMO5    BAS   R9,MCPRT
         CP    CTRL,MCPG
         BH    PRMO6
         MVC   IXT3D,MDDSN
         MVC   IXT3V,MDVOL
         MVI   IXT3T,C'M'
         MVC   IXT3P,=XL6'402020202120'
         ED    IXT3P,CTRL
         MVI   IXT3P,C'/'
         BAS   R9,IXPRT
         MVC   IXT3L+2(3),=CL3'" "'
PRMO6    AH    R5,EMDL
         BCT   R4,PRMO1
         DROP  R3,R5
         SPACE 1
*------- PRINT ALL MACROS REFERENCES
*        (AND CONTINUE TO PRINT INDEX)
         SPACE 1
         MVC   IXT3L,=CL15'MACROS DETAILS'
         L     R7,AMDS
         L     R6,AMDN
         USING MDENT,R7
PRMR1    ZAP   MCLN,=PL2'+99'
         MVC   MRT2N,MDDSN
         MVC   MRT2V,MDVOL
         ZAP   CTRL,MCPG
         AP    CTRL,=PL1'+1'
         L     R5,MDMMS
         USING MMENT,R5
PRMR2    ICM   R4,B'1111',MMPTR
         BZ    PRMR6
         MVC   MRT4M,MMNME
         USING RNENT,R4
PRMR3    L     R0,RNCNT
         CVD   R0,WORKD
         MVC   MRT4C,=XL6'402020202120'
         ED    MRT4C,WORKD+L'WORKD-3
         L     R3,RNSMA
         CL    R3,PRVSMA
         BE    *+L'*+10
         USING SMENT,R3
         MVC   MRT4N,SMNME
         ST    R3,PRVSMA
         L     R1,ASDN
         L     R2,ASDS
         USING SDENT,R2
         CL    R3,SDSME
         BNH   PRMR4
         AH    R2,ESDL
         BCT   R1,*-12
         MVC   MRT4D,=CL44'<<UNKNOWN>>'
         XC    PRVDSN,PRVDSN
         B     PRMR5
PRMR4    CL    R2,PRVDSN
         BE    PRMR5
         MVC   MRT4D,SDDSN
         ST    R2,PRVDSN
PRMR5    CLI   MRT4M,C' '
         BNE   *+L'*+6
         MVC   MRT4M+2(3),=CL3'" "'
         CLI   MRT4N,C' '
         BNE   *+L'*+6
         MVC   MRT4N+2(3),=CL3'" "'
         CLI   MRT4D,C' '
         BNE   *+L'*+6
         MVC   MRT4D+2(3),=CL3'" "'
         BAS   R9,MRPRT
         ICM   R4,B'1111',RNCHN
         BNZ   PRMR3
PRMR6    CL    R5,MDMME
         BNL   *+L'*+8
         AH    R5,EMML
         B     PRMR2
         CP    CTRL,MCPG
         BH    PRMR7
         MVC   IXT3D,MDDSN
         MVC   IXT3V,MDVOL
         MVI   IXT3T,C'M'
         MVC   IXT3P,=XL6'402020202120'
         ED    IXT3P,CTRL
         MVI   IXT3P,C'/'
         BAS   R9,IXPRT
         MVC   IXT3L+2(3),=CL3'" "'
PRMR7    AH    R7,EMDL
         BCT   R6,PRMR1
         DROP  R2,R3,R4,R5,R7
         SPACE 1
*------- TERMINATE TO PRINT INDEX
         SPACE 1
         MVC   IXT3L,=CL15'SOURCES DETAILS'
         L     R3,ASDS
         L     R2,ASDN
         USING SDENT,R3
PRIX1    CLC   SDIXP,=XL4'0'
         BE    PRIX2
         MVC   IXT3D,SDDSN
         MVC   IXT3V,SDVOL
         MVC   IXT3P,=XL6'402020202120'
         ED    IXT3P,SDIXP
         MVI   IXT3P,C'/'
         MVI   IXT3T,C'S'
         BAS   R9,IXPRT
         MVC   IXT3L+2(3),=CL3'" "'
PRIX2    AH    R3,ESDL
         BCT   R2,PRIX1
         B     MAPRX
         DROP  R3
         SPACE 1
MCPRT    CP    MCLN,MXLN2          MACROS TOTALS PRINT SUBROUTINE
         BL    MCPRT1              R0-R1-R14-R15  = WORK REGISTERS
         ZAP   MCLN,=PL1'+0'       R9 = LINK REGISTER
         AP    MCPG,=PL1'+1'
         MVC   MCT1P,=XL6'402020202120'
         ED    MCT1P,MCPG
         MVI   MCT1P,C'/'
        $PRINT MCT1,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
        $PRINT MCT1U,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
        $PRINT MCT2,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
        $PRINT MCT2U,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
        $PRINT MCT3,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
        $PRINT MCT3U,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
MCPRT1  $PRINT MCT4,,MCLDD
         LTR   R15,R15
         BNZ   MCPRTX
         AP    MCLN,=PL1'+1'
         MVC   MCT4M(4*L'MCT4M),MCT4M-1
         BR    R9
MCPRTX   MVC   MERR1+5(L'MCLDD),MCLDD
         B     LSTERR
         SPACE 1
MRPRT    CP    MCLN,MXLN2          MACROS DETAILS PRINT SUBROUTINE
         BL    MRPRT1              R0-R1-R14-R15  = WORK REGISTERS
         ZAP   MCLN,=PL1'+0'       R9 = LINK REGISTER
         AP    MCPG,=PL1'+1'
         MVC   MRT1P,=XL6'402020202120'
         ED    MRT1P,MCPG
         MVI   MRT1P,C'/'
        $PRINT MRT1,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
        $PRINT MRT1U,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
        $PRINT MRT2,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
        $PRINT MRT2U,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
        $PRINT MRT3,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
        $PRINT MRT3U,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
         CLI   MRT4N,C' '
         BNE   *+L'*+6
         USING SMENT,R3
         MVC   MRT4N,SMNME
         DROP  R3
         CLI   MRT4D,C' '
         BNE   *+L'*+6
         USING SDENT,R2
         MVC   MRT4D,SDDSN
         DROP  R2
MRPRT1  $PRINT MRT4,,MCLDD
         LTR   R15,R15
         BNZ   MRPRTX
         AP    MCLN,=PL1'+1'
         MVC   MRT4+1(L'MRT4-1),MRT4
         BR    R9
MRPRTX   MVC   MERR1+5(L'MCLDD),MCLDD
         B     LSTERR
         SPACE 1
IXPRT    CP    IXLN,MXLN1          INDEX PRINT SUBROUTINE
         BL    IXPRT1              R0-R1-R14-R15  = WORK REGISTERS
         ZAP   IXLN,=PL1'+0'       R9 = LINK REGISTER
         AP    IXPG,=PL1'+1'
         MVC   IXT1P,=XL6'402020202120'
         ED    IXT1P,IXPG
         MVI   IXT1P,C'/'
        $PRINT IXT1,,TTLDD
         LTR   R15,R15
         BNZ   IXPRTX
        $PRINT IXT1U,,TTLDD
         LTR   R15,R15
         BNZ   IXPRTX
        $PRINT IXT2,,TTLDD
         LTR   R15,R15
         BNZ   IXPRTX
        $PRINT IXT2U,,TTLDD
         LTR   R15,R15
         BNZ   IXPRTX
IXPRT1  $PRINT IXT3,,TTLDD
         LTR   R15,R15
         BNZ   IXPRTX
         AP    IXLN,=PL1'+1'
         MVC   IXT3+1(L'IXT3-1),IXT3
         BR    R9
IXPRTX   MVC   MERR1+5(L'TTLDD),TTLDD
         B     LSTERR
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
*                       F I N A L     T R A C E                       *
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*
         SPACE 1
         CNOP  0,8
         USING *,R10
         SPACE 1
*------- TRACE WORK-AREAS USE IF REQUESTED
         SPACE 1
FTRC0    TM    SW2,SWTAV
         BZ    LEAVE
        $PRINT FTRM0
         LTR   R15,R15
         BNZ   FTRERR
        $PRINT FTRM0U
         LTR   R15,R15
         BZ    FTRC2
FTRERR   STC   R15,PERRWT+46
         OI    PERRWT+46,C'0'
        WTO    MF=(E,PERRWT)
         OI    SW2,SWERR
         B     LEAVE
FTRC1    LR    R1,R2
         XR    R0,R0
         LA    R14,L'FTRM1A
         LA    R15,FTRM1A
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    FTRM1A,=XL8'0F0F0F0F0F0F0F0F'
         TR    FTRM1A,TRHEX
         SR    R3,R2
         LR    R1,R3
         XR    R0,R0
         LA    R14,L'FTRM1B
         LA    R15,FTRM1B
         SLDL  R0,4
         STC   R0,0(R15)
         LA    R15,1(R15)
         BCT   R14,*-12
         NC    FTRM1B,=XL8'0F0F0F0F0F0F0F0F'
         TR    FTRM1B,TRHEX
         MVI   FTRM1C+16,C' '
         MVC   FTRM1C+17(L'FTRM1C-17),FTRM1C+16
         CVD   R3,WORKD
         MVC   FTRM1C(16),=XL16'40202020202020202020202020202120'
         ED    FTRM1C(16),WORKD
         LA    R0,15
         CLI   FTRM1C,C' '
         BNE   *+L'*+14
         MVC   FTRM1C(15),FTRM1C+1
         MVI   FTRM1C+15,C' '
         BCT   R0,*-18
         LA    R1,FTRM1C
         CLI   0(R1),C' '
         BE    *+L'*+8
         LA    R1,1(R1)
         B     *-12
         MVC   1(6,R1),=CL6'BYTES)'
        $PRINT FTRM1
         LTR   R15,R15
         BZR   R9
         B     FTRERR
FTRC2    MVC   FTRM1W,=CL2'MD'
         L     R2,AMDS
         L     R3,AMDN
         MH    R3,EMDL
         AR    R3,R2
         LR    R4,R3
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'SD'
         L     R2,ASDS
         L     R3,ASDN
         MH    R3,ESDL
         AR    R3,R2
         LR    R5,R3
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'MM'
         L     R2,AMMS
         SH    R4,EMDL
         USING MDENT,R4
         L     R3,MDMME
         DROP  R4
         AH    R3,EMML
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'SM'
         L     R2,ASMS
         SH    R5,ESDL
         USING SDENT,R5
         L     R3,SDSME
         DROP  R5
         AH    R3,ESML
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'RN'
         L     R2,ARNS
         L     R3,CRNPTR
         AH    R3,RNLGTH
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'IM'
         L     R2,AIMS
         ICM   R3,B'1111',MIMPTR
         BNZ   *+L'*+6
         LR    R3,R2
         B     *+L'*+4
         AH    R3,EIML
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'UM'
         L     R2,AUMS
         ICM   R3,B'1111',MUMPTR
         BNZ   *+L'*+6
         LR    R3,R2
         B     *+L'*+4
         AH    R3,EUML
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'CM'
         L     R2,ACMS
         ICM   R3,B'1111',MCMPTR
         BNZ   *+L'*+6
         LR    R3,R2
         B     *+L'*+4
         AH    R3,ECML
         BAS   R9,FTRC1
         MVC   FTRM1W,=CL2'OC'
         L     R2,AOCS
         ICM   R3,B'1111',OCMPTR
         BNZ   *+L'*+6
         LR    R3,R2
         B     *+L'*+4
         AH    R3,EOCL
         BAS   R9,FTRC1
         B     LEAVE
         SPACE 1
         DC    AL1(FTRM0L)
FTRM0    DC    C'0 REAL USE OF WORK-AREAS SPACE :'
FTRM0L   EQU   *-FTRM0
         DC    AL1(FTRM0UL)
FTRM0U   DC    C'+ ______________________________'
FTRM0UL  EQU   *-FTRM0U
         DC    AL1(FTRM1L)
FTRM1    DC    CL2'0 '
FTRM1W   DC    CL2' ',C' - AREA ADDRESS : '
FTRM1A   DC    CL8' ',C' LENGTH : '
FTRM1B   DC    CL8' ',C' ('
FTRM1C   DC    CL24' '
FTRM1L   EQU   *-FTRM1
         SPACE 1
*------- LITERAL POOL
         SPACE 1
         PRINT &PRS
        LTORG
         PRINT &PRF
         SPACE 1
         DROP  R10
         EJECT
*------- DSECT'S
         SPACE 1
MDENT    DSECT                     MACLIB'S DD'S
MDNME    DS    CL8                 DD NAME
MDMMS    DS    A                   FIRST MEMBER POINTER
MDMME    DS    A                   LAST MEMBER POINTER
MDDSN    DS    CL44                DS-NAME
MDVOL    DS    CL6                 VOLUME NAME
MDLGTH   EQU   (((*-MDENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
SDENT    DSECT                     SOURCE'S DD'S
SDNME    DS    CL8                 DD NAME
SDSMS    DS    A                   FIRST MEMBER POINTER
SDSME    DS    A                   LAST MEMBER POINTER
SDDSN    DS    CL44                DS-NAME
SDVOL    DS    CL6                 VOLUME NAME
SDIXP    DS    PL3                 PAGE NUMBER FOR INDEX PRINT
SDLGTH   EQU   (((*-SDENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
MMENT    DSECT                     MACLIB'S MEMBERS NAMES
MMNME    DS    CL8                 MEMBER (MACRO) NAME
MMPTR    DS    A                   START POINTER TO REFERENCES
MMCNT    DS    F                   MODULE OCCURRENCES COUNT
MMDST    DS    F                   DATA-SET OCCURRENCES COUNT
MMTOT    DS    F                   TOTAL OCCURRENCES COUNT
MMLGTH   EQU   (((*-MMENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
SMENT    DSECT                     SOURCE'S MEMBERS NAMES
SMNME    DS    CL8                 MEMBER (MODULE) NAME
SMLGTH   EQU   (((*-SMENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
RNENT    DSECT                     REFERENCE ELEMENT
RNCHN    DS    A                   CHAINING POINTER OR ZERO (LAST)
RNSMA    DS    A                   SOURCE MEMBER ADDRESS
RNCNT    DS    F                   MACRO OCCURRENCES COUNT
RNLGTH   EQU   (((*-RNENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
IMENT    DSECT                     INTERNAL MACROS NAMES
IMNME    DS    CL8                 MACRO NAME
IMCNT    DS    F                   INTERNAL MACRO OCCURRENCES COUNT
IMLGTH   EQU   (((*-IMENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
UMENT    DSECT                     UNRESOLVED MACROS NAMES
UMNME    DS    CL8                 MACRO NAME
UMCNT    DS    F                   UNRESOLVED MACRO OCCURRENCES COUNT
UMLGTH   EQU   (((*-UMENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
CMENT    DSECT                     COPY MODULES NAMES
CMNME    DS    CL8                 COPY MODULE NAME
CMCNT    DS    F                   COPY MODULE OCCURRENCES COUNT
CMLGTH   EQU   (((*-CMENT)+3)/4)*4 ENTRY LENGTH
         SPACE 1
OCENT    DSECT                     OPERATION CODES NAMES
OCNLG    DS    XL1                 OPERATION CODE NAME LENGTH
OCNME    DS    CL8                 OPERATION CODE NAME
OCLGTH   EQU   *-OCENT             ENTRY LENGTH
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
        DCBD   DSORG=PO,DEVD=DA
        IEFZB4D0
        IEFZB4D2
         SPACE 1
         END
