SLAB     TITLE 'INITIALIZE 9-TRACKS TAPES VOLUMES.'
SLABEL   START 0
         SPACE 1
SLABEL  AMODE  24
SLABEL  RMODE  24
         SPACE 2
* MVS/XA :     MUST BE AMODE AND RMODE 24.
* --------
*
* AUTHOR :     P.A. MOINIL
* --------     COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         EJECT
* INITIALIZE 9-TRACKS TAPES VOLUMES :
* ===================================
*
*        THIS PROGRAM CAN BE USED TO INITIALIZE 9-TRACKS TAPES AT 800,
* 1600 OR 6250 BPI. IT OFFERS A MORE FLEXIBLE WAY TO PREPARE THE TAPES
* FOR O.S. WORK THAN THE 'IEHINITT' PROGRAM OF I.B.M. DO.
*
*        THE CONTROL STATEMENT(S) CAN BE ACCEPTED FROM THREE DIFFERENT
* INPUT SOURCES (INPUT STREAM, O.S. MODIFY COMMAND OR OPERATOR'S REPLY)
* SELECTABLE AT THE JOB LEVEL. A CONTROL STATEMENT IS COMPOSED OF ONE
* OR MORE COMMANDS INVOLVING ONE OR MORE TAPES INITIALIZATION. THE
* STATEMENTS, AND THUS COMMANDS, ARE FREE FORMAT (NO FIXED COLUMNS OR
* POSITIONS). EACH COMMAND IS SEPARATED FROM THE NEXT IN A STATEMENT
* BY A SLASH CHARACTER (/), AND A COMMAND CANNOT CONTINUE ON A NEW
* STATEMENT.
*
* COMMANDS DESCRIPTION :
* ======================
*
*   1. SL DDD . XXXXXX  : INITIALIZE TAPE STANDARD LABEL WITH THE
*                         VOLUME SERIAL NUMBER XXXXXX AT DENSITY DDD,
*                         WHERE DDD IS 800, 1600 OR 6250.
*                         (IF DDD IS OMITTED, THE DEFAULT DENSITY
*                         USED BY THE PROGRAM IS 6250).
*
*   2. SL DDD . AAAAAA, BBBBBB, ... , ZZZZZZ : INITIALIZE A LIST OF
*                         TAPES STANDARD LABELS WITH THE VOLUME SERIAL
*                         NUMBERS AAAAAA, BBBBBB, UNTIL ZZZZZZ AT
*                         DENSITY DDD.
*                         (THE TAPES ARE CALLED IN SERIAL MOUNTING,
*                         ONE AFTER THE OTHER).
*
*   3. SL DDD . AANNNN - XX : INITIALIZE XX TAPES STANDARD LABELS WITH
*                         THE GENERATED VOLUME SERIAL NUMBERS FROM
*                         AANNNN AND INCREMENTED EACH TIME BY +1.
*                         (THE DIGITS WHERE OCCURS THE ADDITION MUST
*                         BE NUMERICS OF COURSE).
*
*        ALL THESE THREE COMMAND FORMATS CAN BE ALSO APPLIED TO NL
*        (NO LABEL) TAPES BY REPLACING 'SL' BY 'NL'.
*
*        THE 'END' COMMAND IS USED TO STOP THE PROGRAM EXECUTION, AND
*        THUS IS NORMALLY THE LAST.
         EJECT
*        THE TWO STATEMENT EXAMPLES GIVEN BELOW ARE SELF-EXPLANATORIES
*        TO DESCRIBE HOW THE COMMANDS CAN BE MIXED.
*
*        STATEMENT 1 :
*
*        SL6250.EU0000,EU1001-20,EU2000/SL1600.EU3000/NL.EU4000-50
*
*        STATEMENT 2 :
*
*        NL800.EU5000,EU6000/SL1600.EU7000-10/SL800.EU8000/END
*
* NOTE : THE PROGRAM INITIALIZES THE TAPES USING ONLY ONE PHYSICAL
* ------ TAPE UNIT (THIS IS ALLOCATED BY THE 'SYSUTL' DD-CARD), AND
*        CONSEQUENTLY, BE CAREFULL WHEN MIXING DENSITIES REQUESTS,
*        SO THAT THE TAPE UNIT SUPPORT IT.
*
* CALL OF THE PROGRAM :
* =====================
*
*   1. ENTRY BY INPUT STREAM :
*   --------------------------
*
*        //INITTAPE JOB ... ... ...
*        //INIT    EXEC PGM=SLABEL
*        //SYSUTL    DD UNIT=(HTAPE,,DEFER),VOL=(PRIVATE),LABEL=(,BLP)
*        //SYSPRINT  DD SYSOUT=A
*        //SYSIN     DD *
*          ...
*          ... THE STATEMENTS CAN BE PUNCHED ANYWHERE IN THE CARDS,
*          ...          FROM COLUMN 1 TO COLUMN 72 INCLUDED.
*          ...
*        /*
*
*   2. ENTRY BY OPERATOR'S REPLY :
*   ------------------------------
*
*        //INITTAPE JOB ... ... ...
*        //INIT    EXEC PGM=SLABEL,PARM=0
*        //SYSUTL    DD UNIT=(HTAPE,,DEFER),VOL=(PRIVATE),LABEL=(,BLP)
*
*        AT THE EXECUTION TIME, THE PROGRAM CALLS THE OPERATOR TO
*        REPLY WITH A STATEMENT FROM THE MAIN CONSOLE.
*
*   3. ENTRY BY O.S. MODIFY COMMAND :
*   ---------------------------------
*
*        //INITTAPE JOB ... ... ...
*        //INIT    EXEC PGM=SLABEL,PARM=1
*        //SYSUTL    DD UNIT=(HTAPE,,DEFER),VOL=(PRIVATE),LABEL=(,BLP)
*
*        AT THE EXECUTION TIME, THE PROGRAM CALLS THE OPERATOR TO
*        SUPPLY THE STATEMENTS THROUGH THE O.S. MODIFY (F) COMMAND.
         EJECT
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
EL       EQU   X'80'               END OF LIST INDICATOR.
NLI      EQU   X'00'               NL INDICATOR.
SLI      EQU   X'01'               SL INDICATOR.
S800     EQU   X'02'               800 BPI TAPE DENSITY INDICATOR.
S1600    EQU   X'04'               1600 BPI TAPE DENSITY INDICATOR.
S6250    EQU   X'08'               6250 BPI TAPE DENSITY INDICATOR.
         EJECT
        PRINT  NOGEN
         SPACE 1
        DCBD   DSORG=PS,DEVD=TA
SLABEL   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
JFCDSECT DSECT
        IEFJFCBN LIST=YES
SLABEL   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
SLABEL   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
CIBDSECT DSECT
CIB     IEZCIB
SLABEL   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
        IEZIOB
SLABEL   CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
        PRINT  GEN
         EJECT
        $XENT  BASE=(R11,R12)
*        ANALYZE PARAMETER'S FIELD.
*        --------------------------
         SPACE 1
         L     R1,0(R1)            PARM. FIELD ADDRESS.
         LA    R2,1
         CH    R2,0(R1)
         BNE   GETIN               BRANCH IF ERROR OR NO PARM. FIELD.
         CLI   2(R1),C'1'          1 = BY O.S. MODIFY COMMAND.
         BE    OPER
         CLI   2(R1),C'0'          0 = BY WTOR TO MAIN CONSOLE.
         BE    WTOR
         SPACE 2
*        SEARCH SYSIN AND SYSPRINT DD-CARDS.
*        -----------------------------------
         SPACE 1
GETIN   EXTRACT    ATIOT,'S',FIELDS=(TIOT)
         L     R3,ATIOT            SEARCH SYSIN.
         USING TIODSECT,R3
LOOP     CLC   TIOELNGH(4),ZEROS
         BE    ETIOT               END OF TIOT SCAN.
         CLC   TIOEDDNM(L'DDIN),DDIN
         BNE   TOUT
         OI    SWITCH,INPUT
         B     TNXT
TOUT     CLC   TIOEDDNM(L'DDOUT),DDOUT
         BNE   TNXT
         OI    SWITCH,OUTPUT
TNXT     XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1               NEXT DD-CARD NAME POINTER.
         B     LOOP
         DROP  R3
ETIOT    TM    SWITCH,OUTPUT
         BZ    ERROUT              SYSPRINT DD-CARD MISSING.
         TM    SWITCH,INPUT
         BZ    ERR1IN              SYSIN DD-CARD MISSING.
         NI    SWITCH,255-OUTPUT-INPUT
         SPACE 2
*        OPEN SYSPRINT AND PRINT TITLE.
*        ------------------------------
         SPACE 1
        $PRINT TITLE1
         LTR   R10,R15
         BNZ   EXITP
        $PRINT TITLE2
         LTR   R10,R15
         BNZ   EXITP
         B     SUTL
         SPACE 2
*        SEARCH SYSUTL DD-CARD.
*        ----------------------
         SPACE 1
WTOR     OI    SWITCH,SWWTOR
         B     GETUT
OPER     OI    SWITCH,SWCONS
GETUT   EXTRACT    ATIOT,'S',FIELDS=(TIOT,COMM)
SUTL     LA    R2,DCBTAPE          SEARCH SYSUTL.
         USING IHADCB,R2
         L     R3,ATIOT
         USING TIODSECT,R3
SEARCH   CLC   TIOELNGH(4),ZEROS
         BE    ERR1UTL             SYSUTL DD-CARD NOT FOUND.
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM
         BE    FOUND               BRANCH IF SYSUTL FOUND.
         XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R3,R1               NEXT DD-CARD NAME POINTER.
         B     SEARCH
         DROP  R3
         SPACE 2
*        CONTROL SYSUTL DD-CARD CODING.
*        ------------------------------
         SPACE 1
FOUND   DEVTYPE    DCBDDNAM,DVTYP
         DROP  R2
         CLI   DVTYP+2,X'80'       TEST IF MAGNETIC TAPE DEVICE,
         BNE   ERR2UTL             BRANCH IF NOT.
         MVI   CCWSNS+7,6          ASSUME 2400 SERIES.
         CLI   DVTYP+3,X'01'       TEST IF 2400 SERIES,
         BE    *+L'*+12            BRANCH IF YES.
         MVI   CCWSNS+7,24         ASSUME 3400 SERIES.
         CLI   DVTYP+3,X'03'       TEST IF 3400 SERIES,
         BNE   ERR3UTL             BRANCH IF NOT.
         TM    DVTYP+1,X'80'       TEST IF 9-TRACKS,
         BO    ERR4UTL             BRANCH IF(7-TRACKS).
        RDJFCB (DCBTAPE)
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERR5UTL
         LA    R9,JF
         USING JFCDSECT,R9
         MVI   JFCBDSNM,C' '       FORCE DSNAME.
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         MVC   JFCBDSNM(L'DSN),DSN
         CLC   JFCBELNM(L'JFCBELNM),BLKS
         BNE   ERR6UTL
JLA      EQU   JFCBLTYP-JFCBTSDM
         OC    JFCBTSDM(JLA),JFCBTSDM
         BNZ   ERR6UTL
         CLI   JFCBLTYP,JFCBLP     TEST IF BLP.
         BNE   ERR6UTL
         CLI   JFCBUFOF,0
         BNE   ERR6UTL
         XR    R1,R1               TEST IF FILE SEQ. NR. = 0 OR 1.
         CH    R1,JFCBFLSQ
         BE    JFCBT1
         LA    R1,1(,R1)
         CH    R1,JFCBFLSQ
         BNE   ERR6UTL
JLB      EQU   JFCBCRDT-JFCBVLSQ-2
JFCBT1   OC    JFCBVLSQ(JLB),JFCBVLSQ
         BNZ   ERR6UTL
         CLI   JFCBFLG2,0          TEST IF OUTPUT MASK.
         BE    JFCBT2
         CLI   JFCBFLG2,JFCOUTOP
         BNE   ERR6UTL
JFCBT2   CLI   JFCBOPS2,0
         BNE   ERR6UTL
         OC    JFCBXPDT(L'JFCBXPDT),JFCBXPDT
         BNZ   ERR6UTL
         CLI   JFCBIND1,0
         BNE   ERR6UTL
         MVI   JFCBIND2,JFCNEW     FORCE NEW,KEEP.
         MVI   JFCDEN,0            CLEAR ANY DENSITY SETTING.
JLC      EQU   JFCBNVOL-JFCBUFNO
         OC    JFCBUFNO(JLC),JFCBUFNO
         BNZ   ERR6UTL
         CLI   JFCBNVOL,1          TEST IF NO. OF VOL.SER.NR. = 1.
         BNE   ERR6UTL
         CLC   JFCBVOLS+6(24),BLKS
         BNE   ERR6UTL
JLD      EQU   JFCBVLCT-JFCBEXTL
         OC    JFCBEXTL(JLD),JFCBEXTL
         BNZ   ERR6UTL
         CLI   JFCBVLCT,1          TEST IF VOL. COUNT = 1.
         BNE   ERR6UTL
         CLI   JFCBSPTN,0
         BNE   ERR6UTL
         DROP  R9
TCONS    TM    SWITCH,SWCONS
         BZ    TWTOR
         NI    SWITCH,255-SWEND
         SPACE 2
*        INITIALIZE CONSOLE COMMUNICATION.
*        ---------------------------------
         SPACE 1
         TM    SWITCH,SWIN
         BO    ANRESP
         L     R2,ATIOT            GET TIOT ADDRESS.
         MVC   MSGINI+47(8),0(R2)  MOVE JOB NAME IN MESSAGES.
         MVC   MSGINS+46(8),0(R2)
         MVC   MSGINP+46(8),0(R2)
         MVC   PREFIX+4(8),0(R2)
         LA    R3,MSGINP+53        COMPLETE MESSAGES.
         BASR  R2,0
         CLI   0(R3),C' '
         BNE   *+L'*+2
         BCTR  R3,R2
         MVC   1(L'MSGINPT,R3),MSGINPT
         LA    R3,PREFIX+L'PREFIX-1
         BASR  R2,0
         CLI   0(R3),C' '
         BNE   *+L'*+2
         BCTR  R3,R2
         MVC   2(3,R3),PREFIX
         LA    R3,4(,R3)
         LA    R2,PREFIX
         SLR   R3,R2
         STH   R3,LPRFIX
ANSIN    L     R3,ANSWER           GET ADDR. OF ECB COMMUNICATION AREA.
         L     R4,0(R3)            GET ECB ADDRESS.
         L     R5,4(R3)            GET CIB ADDRESS.
         LA    R5,0(,R5)           CLEAR HIGH BYTE.
         LA    R2,4(,R3)           SET ADDRESS OF CIB ADDRESS.
         LTR   R5,R5               TEST IF CURRENT CIB SET UP.
         BZ    EMPTY
        QEDIT  ORIGIN=(2),BLOCK=(5)
         B     ANSIN
EMPTY   QEDIT  ORIGIN=(2),CIBCTR=2
         ST    R4,ECBANS           ADDR. OF ECB FOR COMMUNICATION.
        WTO    MF=(E,MSGINI)
         ST    R1,MSGLIST          STORE MSG-ID NUMBER.
        WTO    MF=(E,MSGINS)
         ST    R1,MSGLIST+4        STORE MSG-ID NUMBER.
        WTO    MF=(E,MSGINP)
         ST    R1,MSGLIST+8        STORE MSG-ID NUMBER.
         OI    MSGLIST+8,EL        SET END OF LIST.
         OI    SWITCH,SWIN
         SPACE 2
*        READ STATEMENT FROM CONSOLE COMMAND.
*        ------------------------------------
         SPACE 1
ANALC    L     R1,ECBANS           GET ADDR. OF ECB FOR COMMUNICATION.
        WAIT   1,ECB=(1)
ANRESP   L     R3,ANSWER           GET ADDR. OF ECB COMMUNICATION AREA.
         L     R4,0(R3)            GET ECB ADDRESS.
         L     R5,4(R3)            GET CIB ADDRESS.
         LA    R5,0(,R5)           CLEAR HIGH BYTE.
         LA    R2,4(,R3)           SET ADDRESS OF CIB ADDRESS.
         LTR   R5,R5               TEST IF CURRENT CIB SET UP.
         BZ    NOCMD
         USING CIBDSECT,R5
         CLI   CIBVERB,CIBSTOP     IS IT STOP (P) COMMAND,
         BNE   NOTST               BRANCH IF NOT.
         XR    R10,R10             C.C. = 0.
         B     EXIT
NOTST    CLI   CIBVERB,CIBMODFY    IS IT MODIFY (F) COMMAND,
         BE    GETCMD              BRANCH IF YES.
SKIP     NI    SWITCH,255-SWCONT
NOCMD   QEDIT  ORIGIN=(2),CIBCTR=2
         ST    R4,ECBANS           ADDR. OF ECB FOR COMMUNICATION.
         TM    SWITCH,SWCONT
         BO    ANALC
         OI    SWITCH,SWCONT
         B     ANRESP
GETCMD   LH    R6,CIBDATLN         GET DATA FIELD LENGTH.
         LTR   R6,R6
         BNP   SKIP
         LA    R7,L'COMMAND
         CLR   R6,R7
         BNH   *+L'*+2
         LR    R6,R7               SET MAX. LENGTH.
         BCTR  R6,0
         MVI   COMMAND,C' '
         MVC   COMMAND+1(L'COMMAND-1),COMMAND
         EX    R6,MVDATA           MOVE AND UPPER CASE DATA.
        QEDIT  ORIGIN=(2),BLOCK=(5)
         LM    R1,R3,SCANF         SCAN COMMAND POINTERS.
         B     STANAL
MVDATA   OC    COMMAND(*-*),CIBDATA
         DROP  R5
         SPACE 2
*        READ STATEMENT FROM OPERATOR REPLY.
*        -----------------------------------
         SPACE 1
TWTOR    TM    SWITCH,SWWTOR
         BZ    READ
         TM    SWITCH,SWRIN
         BO    REQST
         OI    SWITCH,SWRIN
         L     R2,ATIOT            GET TIOT ADDRESS.
         MVC   PREFIX+4(8),0(R2)   PREPARE WTOR.
         LA    R3,PREFIX+L'PREFIX-1
         BASR  R2,0
         CLI   0(R3),C' '
         BNE   *+L'*+2
         BCTR  R3,R2
         MVC   2(3,R3),PREFIX
         LA    R3,4(,R3)
         LA    R2,PREFIX
         SLR   R3,R2
         STH   R3,LPRFIX
         EX    R3,MVPFIX
         LA    R3,MSGWOR+14(R3)
         MVC   0(L'STMSG,R3),STMSG
REQST    XC    COMMAND(L'COMMAND),COMMAND    CLEAR REPLY AREA.
         MVI   RECB,0              CLEAR ECB.
        WTOR   MF=(E,MSGWOR)
        WAIT   ECB=RECB
         MVI   LINE,C' '
         MVC   LINE+1(L'COMMAND-1),LINE
         OC    COMMAND(L'COMMAND),LINE  UPPER CASE DATA.
         LM    R1,R3,SCANF         SCAN COMMAND POINTERS.
         B     STANAL
MVPFIX   MVC   MSGWOR+12(*-*),PREFIX
         SPACE 2
*        READ STATEMENT FROM SYSIN.
*        --------------------------
         SPACE 1
READ    $READ  CARD
         LTR   R10,R15
         BP    EXITR
         BM    REOF
         LM    R1,R3,SCANC         SCAN CARD POINTERS.
         SPACE 2
*        STATEMENT ANALYSIS.
*        -------------------
         SPACE 1
STANAL   LA    R4,LINE+11
         MVI   LINE,C'0'
         MVI   LINE+1,C' '         CLEAR LINE.
         MVC   LINE+2(L'LINE-2),LINE+1
ELBK1    CLI   0(R1),C' '          TEST IF BLANK,
         BE    ELBK3               BRANCH IF YES.
         CLR   R1,R4               TEST IF ANY MOVE,
         BE    ELBK2               BRANCH IF NOT.
         MVC   0(1,R4),0(R1)       MOVE THIS CHARACTER.
ELBK2    LA    R4,1(,R4)           INCREMENT.
ELBK3    BXLE  R1,R2,ELBK1         INCREMENT AND TEST.
         TM    SWITCH,SWCONS+SWWTOR
         BNZ   NPRT
        $PRINT LINE
         LTR   R10,R15
         BNZ   EXITR
NPRT     L     R2,LTABL            RESET LABEL'S TABLE.
         SRDL  R2,8
         SRL   R3,24
         LA    R4,LTAB
         LTR   R2,R2
         BZ    LAST
         BASR  R1,0
         XC    0(256,R4),0(R4)
         LA    R4,256(,R4)
         BCTR  R2,R1
LAST     EX    R3,RESET
         LA    R1,LINE+11          START STATEMENT ANALYSIS.
         LA    R3,LINE+130
         LA    R4,LTAB
         B     ANAL1
RESET    XC    0(*-*,R4),0(R4)
ANAL0    LA    R4,L'LTAB(R4)
         CLI   0(R4),255           TEST END OF TABLE.
         BE    OVERFL
ANAL1    CLC   0(L'CEND,R1),CEND   TEST END.
         BE    ANAL17
         CLC   0(L'CNL,R1),CNL     TEST LABEL TYPE.
         BE    ANAL2
         CLC   0(L'CSL,R1),CSL
         BNE   INVCMD
         MVI   IND,SLI
         B     ANAL2+L'ANAL2
ANAL2    MVI   IND,NLI
         LA    R2,L'CNL
         BXLE  R1,R2,*+L'*+4
         B     INVCMD
         CLC   0(L'D800,R1),D800   TEST TAPE DENSITY.
         BE    ANAL3
         CLC   0(L'D6250,R1),D6250
         BE    ANAL3A
         CLC   0(L'D1600,R1),D1600
         BNE   ANAL3X
         OI    IND,S1600
         LA    R2,L'D1600
         B     ANAL3Y
ANAL3A   OI    IND,S6250
         LA    R2,L'D6250
         B     ANAL3Y
ANAL3    OI    IND,S800
         LA    R2,L'D800
ANAL3Y   BXLE  R1,R2,*+L'*+4
         B     INVCMD
ANAL3X   LA    R2,1
         CLI   0(R1),C'.'          TEST SEPARATOR.
         BNE   INVCMD
         B     ANAL5
ANAL4    LA    R4,L'LTAB(R4)
         CLI   0(R4),255           TEST END OF TABLE.
         BE    OVERFL
ANAL5    BXLE  R1,R2,*+L'*+4
         B     INVCMD
         LA    R5,LABEL            PICK UP VOLUME(S) SERIAL NUMBER(S).
         LA    R6,6
         MVC   LABEL(L'LABEL),BLKS
         CLI   0(R1),C'A'          ALPHAMERIC.
         BNL   ANAL6
         CLI   0(R1),C'@'          AT SIGN.
         BE    ANAL6
         CLI   0(R1),C'$'          DOLLAR SIGN.
         BE    ANAL6
         CLI   0(R1),C'#'          POUND SIGN.
         BE    ANAL6
         CLI   0(R1),C'-'          HYPHEN.
         BNE   INVCMD
ANAL6    MVC   0(1,R5),0(R1)
         LA    R5,1(,R5)
         BXLE  R1,R2,*+L'*+4
         B     ANAL7
         CLI   0(R1),C'A'          ALPHAMERIC.
         BNL   ANAL6A
         CLI   0(R1),C'@'          AT SIGN.
         BE    ANAL6A
         CLI   0(R1),C'$'          DOLLAR SIGN.
         BE    ANAL6A
         CLI   0(R1),C'#'          POUND SIGN.
         BE    ANAL6A
         CLI   0(R1),C'-'          HYPHEN.
         BNE   ANAL7
ANAL6A   BCT   R6,ANAL6
ANAL7    MVC   0(L'IND,R4),IND
         MVC   1(L'LABEL,R4),LABEL
ANAL8    CLI   0(R1),C','
         BE    ANAL4
         CLI   0(R1),C'/'          TEST END/START STATEMENT.
         BNE   ANAL9
         BXLE  R1,R2,ANAL0
         B     INVCMD
ANAL9    CLI   0(R1),C'-'
         BNE   ANAL18
         BXLE  R1,R2,*+L'*+4       REQUEST IS A RANGE OF TAPES.
         B     INVCMD
         XR    R5,R5
         TM    0(R1),X'F0'
         BNO   INVCMD
         MVC   WORK(1),0(R1)
         NI    WORK,X'0F'
         IC    R5,WORK
         BXLE  R1,R2,*+L'*+4
         B     ANAL10
         TM    0(R1),X'F0'
         BNO   ANAL10
         MH    R5,TEN
         XR    R0,R0
         MVC   WORK(1),0(R1)
         NI    WORK,X'0F'
         IC    R0,WORK
         AR    R5,R0
         LA    R1,1(,R1)
ANAL10   LTR   R5,R5
         BZ    ANAL12
         BCT   R5,ANAL13
ANAL11   CLI   0(R1),C'-'
         BE    INVCMD
         B     ANAL8
ANAL12   BCTR  R1,0
         B     INVCMD
ANAL13   LA    R4,L'LTAB(R4)
         CLI   0(R4),255           TEST END OF TABLE.
         BE    OVERFL
         LA    R6,LABEL+5
         LA    R7,6
ANAL14   CLI   0(R6),C' '
         BE    ANAL15
         TM    0(R6),X'F0'
         BNO   ANAL12
         TR    0(1,R6),TRADD-X'F0'
         CLI   0(R6),C'0'
         BNE   ANAL16
ANAL15   BCTR  R6,0
         BCT   R7,ANAL14
         B     ANAL12
ANAL16   MVC   0(L'IND,R4),IND
         MVC   1(L'LABEL,R4),LABEL
         BCT   R5,ANAL13
         B     ANAL11
ANAL17   MVI   0(R4),255           SET FINAL INDICATOR.
         OI    SWITCH,SWEND
         B     ANAL19+L'ANAL19
ANAL18   CLI   0(R1),C' '
         BNE   INVCMD
ANAL19   MVI   L'LTAB(R4),255      SET FINAL INDICATOR.
         SPACE 2
*        EXECUTE REQUEST(S).
*        -------------------
         SPACE 1
         LA    R5,DCBTAPE          SET TAPE DCB ADDRESSABILITY.
         USING IHADCB,R5
         USING JFCDSECT,R9
         LA    R6,LTAB             START REQ. TAPES LABELS TABLE.
NEXT     CLI   0(R6),255           TEST IF END OF TABLE,
         BE    TEND                BRANCH IF YES.
         TM    0(R6),S800          SET REQUESTED DENSITY.
         BO    SET800
         TM    0(R6),S1600
         BO    SET1600
         MVI   DCBDEN,DCBMTDN4
         B     SVOLS
SET800   MVI   DCBDEN,DCBMTDN2
         B     SVOLS
SET1600  MVI   DCBDEN,DCBMTDN3
SVOLS    MVC   JFCBVOLS(L'JFCBVOLS),1(R6)    MOVE VOL.SER.NO.
         MVC   VOLSER(L'VOLSER),BLKS
        OPEN   (DCBTAPE,(OUTPUT)),TYPE=J
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL,
         BZ    ERROPN              BRANCH IF NOT.
         LA    R7,CCWRWD
         BAS   R8,EXCPT            REWIND TAPE.
         TM    0(R6),SLI           TEST IF SL REQUESTED,
         BZ    NLREQ               BRANCH IF NOT (NL).
         MVC   VOLSER(L'VOLSER),1(R6)
         LA    R7,CCWVOL1
         BAS   R8,EXCPT            WRITE VOL1.
         LA    R7,CCWHDR1
         BAS   R8,EXCPT            WRITE DUMMY HDR1.
NLREQ    LA    R7,CCWWTM
         BAS   R8,EXCPT            WRITE TAPE-MARK.
CLOT    CLOSE  (DCBTAPE)
INCR     LA    R6,L'LTAB(R6)       BUMP POINTER.
         B     NEXT
         DROP  R5,R9
         SPACE 1
TEND     TM    SWITCH,SWEND
         BO    REOF
         B     TCONS
         SPACE 2
*        DIAGNOSTICS MESSAGES.
*        ---------------------
         SPACE 1
DIAG     LA    R2,EXCPM
         NI    SWITCH,255-SWRTN
         B     SENDG
ERROPN   LA    R2,OPENM
         OI    SWITCH,SWRTN
SENDG    MVI   LINE,C'0'           CLEAR LINE.
         MVI   LINE+1,C' '
         MVC   LINE+2(L'LINE-2),LINE+1
         MVC   LINE+6(4),0(R2)     PREPARE MESSAGE.
         MVC   LINE+11(L'ERRMSG),ERRMSG
         MVC   LINE+L'ERRMSG+4(6),1(R6)
         TM    SWITCH,SWCONS+SWWTOR
         BZ    PRT
         MVI   MSGERR+4,C' '       SEND MESSAGE TO MAIN CONSOLE.
         MVC   MSGERR+5(49),MSGERR+4
         LH    R1,LPRFIX
         EX    R1,MVPRFX
         LA    R1,MSGERR+6(R1)
         LA    R4,LINE+6
         LA    R5,10
         EX    R5,MVMSG
        WTO    MF=(E,MSGERR)
         MVC   MSGERR+4(L'BLKS),BLKS
         MVC   MSGERR+10(41),LINE+17
        WTO    MF=(E,MSGERR)
         B     TRTN
PRT     $PRINT LINE
         LTR   R10,R15
         BNZ   EXITW
        $SNAP  SIND,LSNAP
         LTR   R10,R15
         BNZ   EXITW
TRTN     TM    SWITCH,SWRTN
         BO    INCR
         NI    SWITCH,255-SWSNS
         XC    SENSE(L'SENSE),SENSE
         B     CLOT
         SPACE 2
*        ERROR MESSAGES.
*        ---------------
         SPACE 1
INVCMD   LA    R4,INVMSG
         LA    R5,L'INVMSG-1
         B     SENDERR
OVERFL   LA    R4,OVFMSG
         LA    R5,L'OVFMSG-1
SENDERR  LR    R6,R1               SAVE STATEMENT POINTER.
         TM    SWITCH,SWCONS+SWWTOR
         BZ    ENTRD
         MVI   MSGERR+4,C' '       SEND MESSAGE TO MAIN CONSOLE.
         MVC   MSGERR+5(49),MSGERR+4
         LH    R1,LPRFIX
         EX    R1,MVPRFX
         LA    R1,MSGERR+6(R1)
         EX    R5,MVMSG
        WTO    MF=(E,MSGERR)
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         B     TCONS
ENTRD    MVI   LINE,C' '           SEND MESSAGE TO SYSPRINT.
         MVC   LINE+1(L'LINE-1),LINE
         MVI   0(R6),C'$'
        $PRINT LINE
         LTR   R10,R15
         BNZ   EXITR
         MVI   0(R6),C' '
         LA    R1,LINE+L'LINE-1
         SLR   R1,R5
         CLR   R1,R6
         BNH   *+L'*+2
         LR    R1,R6
         EX    R5,MVMSG
        $PRINT LINE
         LTR   R10,R15
         BNZ   EXITR
         B     TCONS
MVPRFX   MVC   MSGERR+4(*-*),PREFIX
MVMSG    MVC   0(*-*,R1),0(R4)
         SPACE 2
ERR1IN   LA    R4,ERR1I
         B     ERRSD
ERR1UTL  LA    R4,ERR1U
         B     ERRSD
ERR2UTL  LA    R4,ERR2
         B     ERRSD
ERR3UTL  LA    R4,ERR3
         B     ERRSD
ERR4UTL  LA    R4,ERR4
         B     ERRSD
ERR5UTL  LA    R4,ERR5
         B     ERRSD
ERR6UTL  LA    R4,ERR6
ERRSD    LA    R1,R4               PREPARE MESSAGE.
         BCTR  R1,0
         XR    R5,R5
         IC    R5,0(R1)
         TM    SWITCH,SWCONS+SWWTOR
         BZ    GPRT
         MVI   MSGERR+4,C' '       SEND MESSAGE TO MAIN CONSOLE.
         MVC   MSGERR+5(49),MSGERR+4
         LA    R1,MSGERR+4
         EX    R5,MVMSG
        WTO    MF=(E,MSGERR)
         B     ERREX
GPRT     MVI   LINE,C'0'           CLEAR LINE.
         MVI   LINE+1,C' '
         MVC   LINE+2(L'LINE-2),LINE+1
         LA    R1,LINE+11
         EX    R5,MVMSG
        $PRINT LINE
         LTR   R15,R15
         BNZ   ERREX
        $SNAP  SIND,LSNAP
         B     ERREX
ERROUT  WTO    'SYSPRINT DD-CARD MISSING.',ROUTCDE=11,DESC=7
ERREX    LA    R10,16              C.C. = 16.
         B     EXIT
         SPACE 2
*        END OF PROGRAM EXECUTION.
*        -------------------------
         SPACE 1
EXITW    TM    DCBTAPE+DCBOFLGS-IHADCB,DCBOFOPN
         BZ    EXITR
        CLOSE  (DCBTAPE)
         B     EXITR
REOF     XR    R10,R10             C.C. = 0.
         TM    SWITCH,SWCONS+SWWTOR
         BNZ   EXIT
        $PRINT EOJ
         LR    R10,R15
EXITR   $RCLOSE
EXITP   $PCLOSE
EXIT     LR    R15,R10             SET C.C.
         TM    SWITCH,SWIN         ANY MESSAGES TO BE DELETED,
         BZ    LEAVE               BRANCH IF NOT.
        DOM    MSGLIST=MSGLIST
LEAVE   $XRET  CC=(R15)
         EJECT
*        EXECUTE CHANNEL PROGRAM ROUTINE.
*        --------------------------------
*
*              R4  = WORK REGISTER (IOB).
*              R7  = ADDRESS OF CHANNEL PROGRAM.
*              R8  = LINK REGISTER.
*
         SPACE 1
EXCPT    LA    R4,IOBTAPE          SET IOB ADDRESSABILITY.
         USING IOBSTDRD,R4
         ST    R7,IOBSTART
         XC    IOBCSW(L'IOBCSW),IOBCSW
         XC    ECB(L'ECB),ECB
        EXCP   (4)
        WAIT   ECB=ECB
         TM    SWITCH,SWSNS
         BO    DIAG
         CLI   ECB,X'7F'           TEST COMPLETION CODE.
         BER   R8                  O.K., RETURN.
         OI    SWITCH,SWSNS
         LA    R7,CCWSNS
         B     EXCPT+L'EXCPT
         DROP  R4
         SPACE 2
        LTORG
         EJECT
*        CONSTANTS AND WORK-AREAS.
*        -------------------------
         SPACE 1
SCANF    DC    A(COMMAND,1,COMMAND+119)
SCANC    DC    A(CARD,1,CARD+71)
ATIOT    DC    A(*-*)
ANSWER   DC    A(*-*)
ECBANS   DC    A(*-*)
LSNAP    DC    A(SENSE+L'SENSE-SIND)
LTABL    DC    A(ELTAB-LTAB-1)
RECB     DC    F'0'
DVTYP    DC    2F'0'
MSGLIST  DC    2F'0'
ZEROS    DC    F'0'
LPRFIX   DC    H'0'
TEN      DC    H'10'
IND      DC    X'0'
WORK     DC    X'0'
CNL      DC    C'NL'
CSL      DC    C'SL'
CEND     DC    C'END'
D800     DC    C'800'
D1600    DC    C'1600'
D6250    DC    C'6250'
MSGINPT  DC    C',...'
EXCPM    DC    C'EXCP'
OPENM    DC    C'OPEN'
LABEL    DC    CL6' '
CONS     DC    C'CONSOLE'
DSN      DC    C'INIT.TAPE'
TRADD    DC    C'1234567890......'
PREFIX   DC    C'---             '
STMSG    DC    C'ENTER STATEMENT.'
INVMSG   DC    C'INVALID COMMAND.'
OVFMSG   DC    C'LABEL''S TABLE OVERFLOW.'
DDIN     DC    CL8'SYSIN'
DDOUT    DC    CL8'SYSPRINT'
BLKS     DC    CL24' '
ERRMSG   DC    C'ERROR - PROCESSING INTERRUPTED FOR TAPE       .'
         DC    AL1(L'TITLE1)
TITLE1   DC    C'1          INITIALIZE 9-TRACKS TAPES VOLUMES PROGRAM.'
         DC    AL1(L'TITLE2)
TITLE2   DC    C'           ------------------------------------------'
         DC    AL1(L'EOJ)
EOJ      DC    C'0          END OF JOB.'
COMMAND  DC    0CL120' ',CL40' '
CARD     DC    CL80' '
LCMD     EQU   *-COMMAND
         DC    AL1(L'LINE)
LINE     DC    CL131' '
         EJECT
MSGINI  WTO    '/ TO INTERRUPT PROGRAM USE THE COMMAND = C          ', 1
               ROUTCDE=(2),DESC=(2),MF=L
MSGINS  WTO    '/ TO STOP THE PROGRAM USE THE COMMAND = P              1
                ',ROUTCDE=(2),DESC=(2),MF=L
MSGINP  WTO    '/ TO PASS A STATEMENT USE THE COMMAND = F              1
                ',ROUTCDE=(2),DESC=(2),MF=L
MSGERR  WTO    '                                                  ',   1
               ROUTCDE=(2),DESC=(6),MF=L
MSGWOR  WTOR   '                                 ',COMMAND,LCMD,RECB,  1
               ROUTCDE=(2),DESC=(2),MF=L
         EJECT
SIND     DC    0F'0',C'ECB='
ECB      DC    F'0'
         DC    0F'0',C'IOB='
IOBTAPE  DC    0F'0',X'42000000',A(ECB,0,0,*-*,DCBTAPE,0,0)
         SPACE 1
         DC    0F'0',C'DCB='
DCBTAPE  DCB   DSORG=PS,MACRF=(E),EXLST=JOBFILE,DDNAME=SYSUTL
         SPACE 1
         DC    0F'0',C'JFC='
JOBFILE  DC    0F'0',XL1'87',AL3(JF)
JF       DC    0F'0',(JFCBLGTH)X'0'
         SPACE 1
         DC    0F'0',C'SNS='
SENSE    DC    XL24'00'
         EJECT
CCWRWD   CCW   X'07',*,X'20',1
CCWVOL1  CCW   X'01',VOL1,X'20',80
CCWHDR1  CCW   X'01',HDR1,X'20',80
CCWWTM   CCW   X'1F',*,X'20',1
CCWSNS   CCW   X'04',SENSE,X'20',*-*
         SPACE 1
VOL1     DC    0F'0',C'VOL1'
VOLSER   DC    CL6' '
         DC    XL1'00',3CL10' ',CL10'EURATOM   ',CL29' '
HDR1     DC    0F'0',C'HDR1',XL76'00'
         SPACE 1
         DC    AL1(L'ERR1I-1)
ERR1I    DC    C'SYSIN DD-CARD MISSING.'
         DC    AL1(L'ERR1U-1)
ERR1U    DC    C'SYSUTL DD-CARD MISSING.'
         DC    AL1(L'ERR2-1)
ERR2     DC    C'SYSUTL NOT MAGNETIC TAPE DEVICE.'
         DC    AL1(L'ERR3-1)
ERR3     DC    C'SYSUTL UNKNOWED MAGNETIC TAPE DEVICE.'
         DC    AL1(L'ERR4-1)
ERR4     DC    C'SYSUTL 7-TRACKS TAPE NOT SUPPORTED.'
         DC    AL1(L'ERR5-1)
ERR5     DC    C'SYSUTL JFCB READ ERROR.'
         DC    AL1(L'ERR6-1)
ERR6     DC    C'SYSUTL DD-CARD INCORRECTLY CODED.'
         SPACE 2
SWITCH   DC    X'0'
         SPACE 1
SWIN     EQU   X'01'
SWRIN    EQU   X'02'
SWCONT   EQU   X'04'
SWRTN    EQU   X'08'
SWSNS    EQU   X'10'
SWEND    EQU   X'20'
SWWTOR   EQU   X'40'
SWCONS   EQU   X'80'
INPUT    EQU   X'40'
OUTPUT   EQU   X'80'
         SPACE 2
LTAB     DS    0CL7
         DS    100CL7
         DS    CL7
ELTAB    DC    AL1(255,255)
         SPACE 2
         END
