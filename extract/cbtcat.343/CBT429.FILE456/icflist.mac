ICFL     TITLE 'ICF CATALOG LIST.'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *          ICF CATALOG LIST.          * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    THIS PROGRAM PRODUCES A LISTING OF AN ENTIRE ICF       *
* ---------    CATALOG RESIDING ON A VOLUME WHICH IS A DIRECT-ACCESS  *
*              STORAGE DEVICE CLASS (UCBTYP+2 = X'20').               *
*                                                                     *
*              A DD-CARD, WRITTEN AS BELOW, IS NEEDED FOR EACH        *
*              CATALOG ON WHICH THE ANALYSIS IS DESIRED :             *
*                                                                     *
*              //ICDD...  DD  DSN=...CATALOG DS-NAME...,DISP=SHR      *
*                                                                     *
*                                                                     *
* CALL OF THE PROGRAM :                                               *
* ---------------------                                               *
*                                                                     *
*        //LIST   EXEC  PGM=ICFLIST                                   *
*        //ICDD...  DD  DSN=...CATALOG DS-NAME...,DISP=SHR            *
*        //ICDD...  DD  --- --- --- --- --- --- --- ---               *
*        //ICDD...  DD  --- ANY NUMBER OF DD-CARDS. ---               *
*        //ICDD...  DD  --- --- --- --- --- --- --- ---               *
*        //SYSPRINT DD  SYSOUT=A                                      *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
ICFLIST  START 0
         SPACE 1
        $DEFREG
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING
LV15     EQU   15                  SPECIAL LEVEL
         SPACE 1
PSWR    $MDL@IX
         EJECT
        $XENT  BASE=(R11,R12)
        EXTRACT   WORK,'S',FIELDS=(TIOT)
         SPACE 2
         L     R6,WORK             GET TIOT ADDRESS
         USING TIODSECT,R6
         XR    R1,R1
ICDDS    CLC   TIOELNGH(L'ZEROS),ZEROS  END OF TIOT?
         BE    DDMS                BRANCH IF YES
         CLC   TIOEDDNM(L'ICDD),ICDD
         BE    OPNIC               BRANCH IF CATALOG DD-NAME
ICSR     IC    R1,TIOELNGH         NEXT DD ENTRY
         AR    R6,R1
         B     ICDDS
OPNIC    MVC   DDNAM(L'TIOEDDNM),TIOEDDNM
         DROP  R6
         OI    DDMS+1,ON
         EJECT
        $EACM  REQAUT
         CLI   AUTH,LV15
         BE    *+L'*+4
         NI    ICFSW,255-ICFMSPW
        $ICFSO DDNAM,DVTYP,,ICFSW
         LTR   R15,R15
         BNZ   ERICFSO
         MVI   MINITT,C' '
         MVC   MINITT+1(L'MINITT-1),MINITT
         LA    R2,MINITT
         MVC   0(L'CATNAME,R2),CATNAME
         LA    R2,L'CATNAME-1(R2)
         CLI   0(R2),C' '
         BNE   *+L'*+4
         BCT   R2,*-8
         MVC   2(9,R2),=CL9'ON VOLUME'
         MVC   12(L'CATVOL,R2),CATVOL
         LA    R2,L'CATVOL+11(R2)
         CLI   0(R2),C' '
         BNE   *+L'*+4
         BCT   R2,*-8
         MVI   2(R2),C'('
         LA    R2,3(R2)
        $DAUNTY DVTYP+3,(R2)       GET DEVICE NAME
         LTR   R15,R15
         BZ    DVRCV               OK
         MVC   0(4,R2),=CL4'?RC='  ERROR, DISPLAY RC
         CVD   R15,WORKD
         UNPK  4(2,R2),WORKD+6(2)
         OI    5(R2),C'0'
         MVI   6(R2),C'?'
         LA    R0,7
DVRCV    ALR   R2,R0
         MVI   0(R2),C')'
         LA    R2,MINIT
         BAS   R10,PRT             PRINT STARTING TITLE
         MVI   MSG,C' '
         MVC   MSG+1(L'MSG-1),MSG
         MVI   MSG+6,C'-'
         MVC   MSG+7(L'MINIT-8),MSG+6
         LA    R2,MSG
         USING LLDSCT,R2
         BAS   R10,PRT
         MVC   MSG+2(L'MSG-2),MSG+1
         BAS   R10,PRT
         LA    R8,ERUNEXP
         OI    SWPRT+1,ON
         EJECT
NEXT     MVC   MSG+2(L'MSG-2),MSG+1
        $ICFSR CTYPE,VOLUME,WORK
         LTR   R15,R15
         BM    ICFEOF
         BNZ   ERICFSR
         CLI   CTYPE,255           CONTINUATION?
         BER   R8                  YES, GO TO CONTINUE PROCESS
SWPRT    B     *+L'*+8
         OI    SWPRT+1,ON
         BAS   R14,PRT
         LA    R1,TBTYPES          SCAN TYPES TABLE
SCANTB   CLI   0(R1),0             END OF TABLE?
         BE    ERUNEXP             YES, UNEXPECTED TYPE
         CLC   0(1,R1),CTYPE       THIS TYPE?
         BE    GOTO                YES
         LA    R1,L'TBTYPES(R1)    NO, NEXT ENTRY
         B     SCANTB
GOTO     ICM   R15,B'1111',1(R1)   GET ADDRESS TO PROCESS THIS TYPE
         BR    R15                 GO TO PROCESS IT
         SPACE 2
NONVSAM  MVC   LLTY,=CL8'NON-VSAM'
COMDS    BASR  R8,0
         MVC   LLNM,DSNAME
         MVC   LLVL,VOLUME
         OC    WORK,WORK
         BZ    COMDS2
         LA    R15,LLUN
        $DVTYUN WORK,(R15)         GET UNIT NAME
         LTR   R15,R15
         BZ    COMDS1              OK
         MVC   LLUN(4),=CL4'?RC='  ERROR, DISPLAY RC
         CVD   R15,WORKD
         UNPK  LLUN+4(2),WORKD+6(2)
         OI    LLUN+5,C'0'
         MVI   LLUN+6,C'?'
COMDS1   OC    FSEQ,FSEQ
         BZ    COMDS2
         XR    R0,R0
         ICM   R0,B'0011',FSEQ
         CVD   R0,WORKD
         MVC   LLSQ,=XL6'402020202120'
         ED    LLSQ,WORKD+5
COMDS2   BAS   R10,PRT
         B     NEXT
         SPACE 1
GDGDS    CLC   VOLUME,=CL6' '
         BE    *+L'*+10
         MVC   LLTY,=CL8'GDG D.S.'
         B     COMDS
         MVC   LLTY,=CL8'NULL GDG'
         B     COMDS
         SPACE 1
CLUSTER  MVC   LLTY(7),=CL7'CLUSTER'
         CLI   DSNAME,C' '
         BNE   COMCL
         TM    ICFSW,ICFMSPW
         BZ    COMCL+L'COMCL
         CLI   MSPW,0
         BE    *+L'*+8
         CLI   MSPW,255
         BNE   *+L'*+10
         MVC   LLNM(18),=CL18'NO MASTER PASSWORD'
         B     COMCL+L'COMCL
         MVC   LLNM(18),=CL18'MASTER PASSWORD : '
         MVC   LLNM+18(L'MSPW),MSPW
         XC    MSPW,MSPW
         B     COMCL+L'COMCL
COMCL    MVC   LLNM,DSNAME
         BAS   R10,PRT
         LA    R8,ERUNEXP
         B     NEXT
         SPACE 1
ALTIX    MVC   LLTY(3),=CL3'AIX'
         B     COMCL
         SPACE 1
DATA     MVC   LLST+2(4),=CL4'DATA'
         B     COMDS
         SPACE 1
INDEX    MVC   LLST+1(5),=CL5'INDEX'
         B     COMDS
         SPACE 1
PATH     MVC   LLTY(4),=CL4'PATH'
COMAS    MVC   LLNM,DSNAME
         LA    R3,LLNM+L'DSNAME-1
         CLI   0(R3),C' '
         BNE   *+L'*+4
         BCT   R3,*-8
         NI    SWPRT+1,OFF
         BAS   R8,NEXT+L'NEXT
         OI    SWPRT+1,ON
         BASR  R8,0
         MVI   2(R3),C'/'
         MVC   4(L'DSNAME,R3),DSNAME
         BAS   R10,PRT
         B     NEXT
         SPACE 1
ALIAS    MVC   LLTY(5),=CL5'ALIAS'
         B     COMAS
         SPACE 1
AIXTN    MVC   LLST+3(3),=CL3'AIX'
COMTN    MVC   LLTY(8),=CL8'TRUENAME'
         B     COMAS
         SPACE 1
DATATN   MVC   LLST+2(4),=CL4'DATA'
         B     COMTN
         SPACE 1
INDEXTN  MVC   LLST+1(5),=CL5'INDEX'
         B     COMTN
         SPACE 1
ICFCN    MVC   LLST+3(3),=CL3'ICF'
COMCN    MVC   LLTY(7),=CL7'CONNECT'
         B     COMDS
         SPACE 1
VSAMCN   MVC   LLST+2(4),=CL4'VSAM'
         B     COMCN
         SPACE 1
         DROP  R2
         EJECT
ERUNEXP  LA    R2,UNEXP
         BAS   R10,PRT
         NI    SWRCC+1,OFF
         B     ICFEND
ERICFSO  MVC   ERRM+6(5),=CL5'ICFSO'
         CH    R15,=H'2'
         BE    ORC2
         CH    R15,=H'9'
         BE    ORC9
ORCN     BAS   R8,PMERR
         B     NXICF
ORC2     BAS   R8,PMREG
         B     NXICF
ORC9     LTR   R0,R0
         BNZ   ORC2
         LTR   R1,R1
         BZ    ORCN
         B     ORC2
ERICFSR  MVC   ERRM+6(5),=CL5'ICFSR'
         CH    R15,=H'1'
         BE    RRC1
         BAS   R8,PMERR
         B     ICFEND
RRC1     BAS   R8,PMREG
         B     ICFEND
ERICFSC  MVC   ERRM+6(5),=CL5'ICFSC'
         CH    R15,=H'2'
         BE    CRC2
         BAS   R8,PMERR
         B     NXICF
CRC2     BAS   R8,PMREG
         B     NXICF
         EJECT
ICFEOF   LTR   R0,R0
         BNZ   *+L'*+6
         LTR   R1,R1
         BZ    ICFEND
         MVC   ERRM+6(5),=CL5'CLOSE'
         MVC   ERRM+L'ERRM-3(2),=CL2'-1'
         NI    SWPME+1,OFF
         BAS   R8,PMREG
ICFEND  $ICFSC NCTR
         LTR   R15,R15
         BNZ   ERICFSC
         MVC   STTMT,MINITT
         LA    R2,STTM
         BAS   R10,PRT
         LA    R2,MSG
         LA    R3,NCTR-L'NCTR
         LA    R4,NCTRT
         LA    R5,NCTRN
         MVI   MSG+1,C' '
         MVC   MSG+2(L'MSG-2),MSG+1
         B     LOOP+L'LOOP
LOOP     LA    R4,L'NCTRT(R4)
         LA    R3,L'NCTR(R3)
         MVC   MSG(1),0(R4)
         MVC   MSG+18(L'NCTRT-1),1(R4)
         L     R1,0(R3)
         CVD   R1,WORKD
         CLI   1(R4),C' '
         BE    ALTPR
         MVC   MSG+10(7),=XL7'20202020202120'
         ED    MSG+9(8),WORKD+4
         MVC   MSG+L'NCTRT+18(7),MSG+L'NCTRT+17
         B     LNEPR
ALTPR    MVC   MSG+L'NCTRT+18(7),=XL7'20202020202120'
         ED    MSG+L'NCTRT+17(8),WORKD+4
         MVC   MSG+10(7),MSG+9
LNEPR    BAS   R10,PRT
         BCT   R5,LOOP
         LA    R2,ENDM
         BAS   R10,PRT
NXICF    XR    R1,R1
         B     ICSR
         EJECT
DDMS     NOP   SWRCC
         LA    R2,MISM
         BAS   R10,PRT
SWRCC    B     *+L'*+8
         LA    R9,64               C.C. = 64. - - - - - - - - - - - -
         B     *+L'*+2
         XR    R9,R9               C.C. = 0.  - - - - - - - - - - - -
        $PCLOSE
LEAVE   $XRET  CC=(R9)
         EJECT
*        PRINT ROUTINES.
*              R0  = WORK REGISTER
*              R1  = WORK REGISTER
*              R2  = MESSAGE ADDRESS
*              R10 = LINK REGISTER
*              R14 = WORK REGISTER
*              R15 = WORK REGISTER
*        NOTE. MESSAGE ADDRESS POINTS TO THE MESSAGE TEXT (ASA
*              CONTROL CHARACTER), PRECEEDED BY THE ONE BYTE
*              MESSAGE TEXT LENGTH.
         SPACE 1
PRT     $PRINT (R2)
         LTR   R15,R15             PRINT COMPLETION CODE?
         BZR   R10                 OK, RETURN
         LR    R9,R15              C.C. = FROM 4 TO 20. - - - - - - -
         SLL   R9,2
        $ICFSC
         B     LEAVE
         EJECT
*        VSAM ERROR CODE ROUTINE.
*              R0  = VSAM CODE
*              R1  = VSAM CODE
         SPACE 1
PMREG    ST    R0,WORK
         UNPK  ERRMR0(9),WORK(5)
         TR    ERRMR0,TRTAB-X'F0'
         MVI   ERRMR0+L'ERRMR0,C'/'
         ST    R1,WORK
         UNPK  ERRMR1(9),WORK(5)
         TR    ERRMR1,TRTAB-X'F0'
         MVI   ERRMR1+L'ERRMR1,C')'
         LA    R0,L'ERRM+L'ERRMR
SWPME    B     PMERR+L'PMERR
         OI    SWPME+1,ON
         B     PMSTL
         SPACE 2
*        PRINT ERROR CODE ROUTINE.
*              R0  = WORK REGISTER
*              R1  = WORK REGISTER
*              R2  = WORK REGISTER
*              R8  = LINK REGISTER
*              R10 = WORK REGISTER
*              R14 = WORK REGISTER
*              R15 = ERROR CODE
         SPACE 1
PMERR    LA    R0,L'ERRM
         CVD   R15,WORKD
         UNPK  ERRM+L'ERRM-3(2),WORKD+6(2)
         OI    ERRM+L'ERRM-2,C'0'
PMSTL    STC   R0,ERRML
         MVC   ERRM+13(8),DDNAM
         LA    R2,ERRM
         BAS   R10,PRT
         NI    SWRCC+1,OFF
         BR    R8                  RETURN
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
WORKD    DC    D'0'
WORK     DC    F'0'
ZEROS    DC    F'0'
DVTYP    DC    5F'0'
         DC    H'0'
CATVOL   DC    CL6' '
CATNAME  DC    CL44' '
         SPACE 1
DDNAM    DC    CL8' '
ICDD     DC    C'ICDD'
VOLUME   DC    CL6' '
FSEQ     DC    XL2'0'
CTYPE    DC    XL1'0'
DSNAME   DC    CL44' '
TRTAB    DC    C'0123456789ABCDEF'
         SPACE 1
REQAUT   DC    0F'0',XL1'0',AL3(MDL@IX),AL4(AUTH)
AUTH     DC    XL1'0'
        $ICFSW ICFMSPW
MSPW     DC    XL8'0'
         SPACE 1
         DC    AL1(L'MSG)
MSG      DC    CL132' '
         DC    AL1(L'MINIT+L'MINITT)
MINIT    DC    C'1     ICF CATALOG LIST : '
MINITT   DC    CL80' '
         DC    AL1(L'STTM+L'STTMT)
STTM     DC    C'1     ICF CATALOG INFORMATION : '
STTMT    DC    CL80' '
         DC    AL1(L'ENDM)
ENDM     DC    C'0     END OF ICF CATALOG LIST.'
         DC    AL1(L'UNEXP)
UNEXP    DC    C'0         -- UNEXPECTED CATALOG INDICATOR RECEIVED --'
         DC    AL1(L'MISM)
MISM     DC    C'1         ICDD.... DD-CARD(S) MISSING.'
ERRML    DC    AL1(*-*)
ERRM     DC    C'0           (        ) : RETURN CODE   .'
ERRMR    DC    C'(R0/R1 :                   '
ERRMR0   EQU   ERRMR+9,8
ERRMR1   EQU   ERRMR+18,8
         EJECT
        LTORG
         EJECT
*                   ----+----1----+----2----+---
NCTRT    DC    CL28'0GETS ISSUED AGAINST THE BCS'      1
         DC    CL28'0NONVSAM ENTRIES'                  2
         DC    CL28' CLUSTER ENTRIES'                  3
         DC    CL28'   ALTERNATE INDEX ENTRIES :'      4
         DC    CL28'    DATA (CLUSTER) ENTRIES :'      5
         DC    CL28'   INDEX (CLUSTER) ENTRIES :'      6
         DC    CL28' GDG BASE ENTRIES'                 7
         DC    CL28'               GDG ENTRIES :'      8
         DC    CL28' PATH ENTRIES'                     9
         DC    CL28' ALIAS ENTRIES'                   10
         DC    CL28' TRUENAME ENTRIES'                11
         DC    CL28' ICF CONNECTOR ENTRIES'           12
NCTRN    EQU   (*-NCTRT)/L'NCTRT
         SPACE 1
NCTR     DC    (NCTRN)F'0'
         SPACE 2
TBTYPES  DS    0XL5                TABLE TYPES / PROCESS
         DC    AL1(1),AL4(NONVSAM)      NON-VSAM NAME
         DC    AL1(2),AL4(GDGDS)        GDG NAME
         DC    AL1(3),AL4(CLUSTER)      CLUSTER NAME
         DC    AL1(4),AL4(ALTIX)        ALT. INDEX NAME
         DC    AL1(5),AL4(DATA)         DATA NAME
         DC    AL1(6),AL4(INDEX)        INDEX NAME
         DC    AL1(7),AL4(PATH)         PATH NAME
         DC    AL1(8),AL4(ALIAS)        ALIAS NAME
         DC    AL1(9),AL4(AIXTN)        AIX TRUE-NAME
         DC    AL1(10),AL4(DATATN)      DATA TRUE-NAME
         DC    AL1(11),AL4(INDEXTN)     INDEX TRUE-NAME
         DC    AL1(12),AL4(ICFCN)       ICF CONNECT NAME
         DC    AL1(13),AL4(VSAMCN)      VSAM CONNECT NAME
         DC    AL1(0)              END TABLE INDICATOR
         EJECT
LLDSCT   DSECT                     LINE DESCRIPTION
LLCC     DS    CL1,CL9             ASA CC
LLTY     DS    CL8,CL2             TYPE
LLST     DS    CL6,CL2             SUB-TYPE
LLNM     DS    CL44,CL2            NAME
LLVL     DS    CL6,CL2             VOLUME SERIAL NUMBER
LLUN     DS    CL8,CL2             UNIT NAME
LLSQ     DS    CL6,CL2             FILE SEQUENCE NUMBER
         SPACE 2
        PRINT  NOGEN
TIODSECT DSECT
        IEFTIOT1
        PRINT  GEN
         SPACE 2
         END
