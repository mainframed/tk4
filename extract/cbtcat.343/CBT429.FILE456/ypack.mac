AIDR     TITLE 'ACCOUNTING INFORMATION DATA-SET SHORT PACKAGE.'
YOPEN    START 0
         SPACE 2
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *       ACCOUNTING INFORMATION        * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * *       DATA-SET SHORT PACKAGE        * * * * * * * * *
* * * * * * * * *                                     * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* AUTHOR :     P.A. MOINIL                                            *
* --------     COMPUTING CENTRE                                       *
*              J.R.C. - ISPRA ESTABLISHMENT                           *
*              21020 ISPRA (VA), ITALY                                *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*                                                                     *
* PURPOSE :    THIS IS A SHORT OPERATIONAL PACKAGE TO BE USED ONLY    *
* ---------    WHEN USER'S ACCOUNTING MUST BE CONTROLLED OR OBTAINED  *
*              (EXCLUSIVELY THE FIRST SECTION OF THE DATA-SET IS      *
*              REACHABLE BY THESE ROUTINES).                          *
*              THE ACCOUNTING INFORMATION DATA-SET IS ACCESSED        *
*              THROUGH A DD-CARD CODED AS BELOW :                     *
*                                                                     *
*              //SYSACC   DD  DSN=...,DISP=SHR                        *
*                                          OLD                        *
*                                                                     *
*        N.B. - THE KEY (ARGUMENT OR INDEX) LENGTH IS ASSUMED TO      *
*               BE TWO BYTES (HALFWORD) LONG, AND MAY OR NOT BE       *
*               INCLUDED IN THE ACCOUNTING INFORMATION RECORD.        *
*                                                                     *
* MVS/XA :     MUST BE AMODE AND RMODE 24.                            *
* --------                                                            *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         EJECT
* CALLING SEQUENCE : CALL YOPEN,(A,B),VL
* -------------------           (A)
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY). VALUE IS ALWAYS PLACED IN REGISTER 15
*                    AND CAN BE :
*                    0 (ZERO) - THE DATA-SET IS CORRECTLY OPENED.
*                    + (POSITIVE) - ERROR NUMBER. THE DATA-SET IS
*                                   NOT OPENED.
*
*                B - IS THE EVENTUAL KEYWORD 'DUMP' (FORMAT CL4) TO
*                    REQUEST A DUMP ON ERROR DETECTED BY THE ROUTINES
*                    (SYSUDUMP OR SYSABEND DD-CARD MUST BE PRESENT).
*                    THIS OPTION IS EFFECTIVE UNTIL THE CLOSE, AND
*                    THE ERROR NUMBER IS SET AS ABEND CODE.
*
* CALLING SEQUENCE : CALL YREAD,(A,B,C),VL
* ------------------
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY). VALUE IS ALWAYS PLACED IN REGISTER 15
*                    AND CAN BE :
*                    0 (ZERO) - THE DATA RECORD IS CORRECTLY READ.
*                    + (POSITIVE) - ERROR NUMBER.
*
*                B - IS THE ARGUMENT (FORMAT HALFWORD - H BOUNDARY).
*
*                C - IS THE DATA RECORD AREA (FORMAT CL... - SEE MACRO
*                    '$AIRD' FOR LENGTH).
         EJECT
* CALLING SEQUENCE : CALL YCLOSE,(A),VL
* ------------------
*
*        WHERE : A - IS THE INDICATOR RESPONSE (FORMAT FULLWORD - F
*                    BOUNDARY). VALUE IS ALWAYS PLACED IN REGISTER 15
*                    AND CAN BE :
*                    0 (ZERO) - THE DATA-SET IS CORRECTLY CLOSED.
*                    + (POSITIVE) - ERROR NUMBER.
*
* ERROR NUMBER :     1 - ROUTINE OR DATA-SET TABLE DESTROYED.
* --------------     2 - SYSACC DD-CARD IS MISSING.
*                    3 - SYSACC UNIT IS NOT A DIRECT-ACCESS STORAGE.
*                    4 - SYSACC JFCB READ ERROR.
*                    5 - SYSACC DD-CARD INCORRECTLY CODED.
*                    6 - OBTAIN ERROR WHILE PROCESSING SYSACC VOLUME.
*                    7 - SYSACC DSCB FORMAT 1 ERROR DETECTED.
*                   10 - SYSACC DATA-SET OPEN ERROR.
*                   13 - SYSACC DATA-SET IS ALREADY OPENED.
*                   14 - SYSACC DATA-SET IS NOT OPENED.
*                   15 - READ REQUEST - ARGUMENT NOT FOUND.
*                   16 - READ REQUEST - I/O ERROR.
*                   19 - ROUTINE CALLING SEQUENCE OR ARGUMENT ERROR.
*                   20 - SYSACC DATA-SET WRONGLY OR NOT CATALOGED.
*                   24 - UNAUTHORIZED ACCESS.
         EJECT
         SPACE 2
        $AIRD
         EJECT
        $DEFREG
         SPACE 1
*---------------------------------------------------------------------*
*        AUTHORITY LEVELS DEFINITIONS.                                *
*---------------------------------------------------------------------*
         SPACE 1
LV0      EQU   0         REJECT LEVEL
         SPACE 1
AUT98   $MDL@IX
         SPACE 1
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
OFF      EQU   X'0F'               NOP OPERATION SWITCH SETTING.
ON       EQU   X'F0'               BRANCH OPERATION SWITCH SETTING.
         EJECT
        PRINT  NOGEN
         SPACE 1
TIODSECT DSECT
        IEFTIOT1
         SPACE 1
JFCDSECT DSECT
        IEFJFCBN LIST=YES
         SPACE 1
DSCDSECT DSECT
        IECSDSL1 (1)
         SPACE 1
        DCBD   DSORG=DA,DEVD=DA
         SPACE 1
YOPEN    CSECT                     RESTORE ORIGINAL CSECT.
         SPACE 1
        PRINT  GEN
         SPACE 2
         ENTRY YREAD
         ENTRY YCLOSE
         SPACE 1
         USING *,R15
         MVI   WTGO+3,YPACK-*      SET ENTRY DISPLACEMENT (OPEN).
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
YREAD    MVI   WTGO+3,YPACK-*      SET ENTRY DISPLACEMENT (READ).
         B     WTGO                GO COMMON ENTRY.
         DROP  R15
         SPACE 1
         USING *,R15
YCLOSE   MVI   WTGO+3,YPACK-*      SET ENTRY DISPLACEMENT (CLOSE).
         DROP  R15
         SPACE 1
WTGO     LA    R15,*-*(R15)        SET COMMON ENTRY ADDRESS.
         EJECT
YPACK   $XENT  BASE=R12
         SPACE 1
         LH    R9,MAXERR           SET ERROR NUMBER REGISTER.
         MVC   INDRA,ZEROS         GET INDICATOR RESPONSE ADDRESS.
         TM    3(R1),X'03'
         BNZ   ERR19
         MVC   INDRA(4),0(R1)
         CLC   IND(L'INDTB),INDTB  CONTROL ROUTINE INTEGRITY.
         BNE   ERR1
         LR    R15,R12             COMPUTE WHERE TO GO?
         BCTR  R15,0
         XR    R14,R14
         IC    R14,0(R15)
         SRL   R14,1
         B     *+L'*-(YPACK-WTGO)+L'IND(R14) ENTER SELECTED ROUTINE.
         SPACE 1
IND      DC    XL2'0F0F'           IDENTIFIER.
         SPACE 1
         B     CLOSE               BRANCH ENTRIES VECTOR.
         B     READ
         EJECT
SWOPEN   NOP   OPEN
         LR    R2,R1               CHECK CALLER VALIDITY.
        $EACM  REQAUT
         LR    R1,R2               CHECK CALLER VALIDITY.
         CLI   AUTLVL,LV0
         BE    ERR24
         OI    SWOPEN+1,ON         CLOSE THIS WAY AFTER CONTROL DONE.
OPEN     NOP   ERR13               DATA-SET ALREADY OPENED.
         TM    0(R1),X'80'         IS THERE A SECOND PARM.
         BO    OP0                 BRANCH IF NOT.
         TM    4(R1),X'80'
         BZ    ERR19               TOO MANY ARGUMENTS.
         L     R2,4(R1)
         CLC   0(L'DEBUG,R2),DEBUG
         BNE   OP0
         NI    SWDP+1,OFF          SET DUMP SWITCH.
OP0     EXTRACT ATIOT,'S',FIELDS=(TIOT)
         LA    R8,DCBSR            SEARCH SYSACC DD-CARD.
         USING IHADCB,R8
         L     R2,ATIOT            GET TIOT ADDRESS.
         USING TIODSECT,R2
OP1      CLC   TIOELNGH(L'ZEROS),ZEROS  TEST END OF TIOT,
         BE    ERR2                DD-CARD NOT FOUND.
         CLC   TIOEDDNM(L'DCBDDNAM),DCBDDNAM TEST DD NAME,
         BE    OP2                 BRANCH IF THIS ONE.
         XR    R1,R1
         IC    R1,TIOELNGH
         ALR   R2,R1               NEXT DD ENTRY.
         B     OP1
         DROP  R2
OP2     DEVTYPE DCBDDNAM,DVTYP,DEVTAB
         DROP  R8
         CLI   DVTYP+2,X'20'       TEST DIRECT-ACCESS STORAGE,
         BNE   ERR3                BRANCH IF NOT.
        RDJFCB (DCBSR)
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERR4
         LA    R7,JF
         USING JFCDSECT,R7
         TM    JFCBIND2,JFCMOD     TEST DISP=OLD OR SHR CODED?
         BO    ERR5                BRANCH IF NOT.
         TM    JFCBIND2,JFCOLD
         BZ    ERR5                BRANCH IF NOT.
         TM    JFCBTSDM,255-JFCCAT CONTROL SYSACC DD-CARD CODE.
         BNZ   ERR5
JL1      EQU   JFCBLTYP-JFCFCBID
         OC    JFCFCBID(JL1),JFCFCBID
         BNZ   ERR5
JL2      EQU   JFCBCRDT-JFCBOTTR
         OC    JFCBOTTR(JL2),JFCBOTTR
         BNZ   ERR5
JL3      EQU   JFCBIND2-JFCBXPDT
         OC    JFCBXPDT(JL3),JFCBXPDT
         BNZ   ERR5
JL4      EQU   JFCBNVOL-JFCBUFNO
         OC    JFCBUFNO(JL4),JFCBUFNO
         BNZ   ERR5
JL5      EQU   JFCBVLCT-JFCBPQTY
         OC    JFCBPQTY(JL5),JFCBPQTY
         BNZ   ERR5
         CLI   JFCBVLCT,X'01'
         BNE   ERR5
         CLI   JFCBLTYP,JFCSL
         BNE   ERR5
         CLI   JFCBNVOL,X'01'
         BNE   ERR5
         CLI   JFCBSPTN,X'00'
         BNE   ERR5
         MVC   VOLNUM(L'VOLNUM),JFCBVOLS
         MVC   DSNM(L'JFCBDSNM),JFCBDSNM
         TM    JFCBTSDM,JFCCAT     IS DATA-SET CATALOGED?
         BZ    ERR20               BRANCH IF NOT.
         DROP  R7
        LOCATE CVLIST
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERR20
         CLC   VOLNUM(L'VOLNUM),LOCAREA+6 VOLUME MATCH?
         BNE   ERR20               BRANCH IF NOT.
        OBTAIN DSCBAR
         LTR   R15,R15             TEST COMPLETION CODE.
         BNZ   ERR6
         LA    R6,WORKAREA-L'DS1DSNAM   CONTROL THE DSCB'S DEFINITIONS.
         USING DSCDSECT,R6
         CLC   DS1VOLSQ(L'DS1VOLSQ),CH1
         BNE   ERR7
         CLI   DS1NOEPV,X'01'
         BNE   ERR7
         CLI   DS1EXT1+1,X'00'
         BNE   ERR7
         CLC   DS1SCALO+1(L'DS1SCALO-1),ZEROS
         BNE   ERR7
         CLI   DS1KEYL,X'00'
         BNE   ERR7
         CLC   DS1RKP(L'DS1RKP),ZEROS
         BNE   ERR7
         CLC   DS1DSORG(L'DS1DSORG),DAORG
         BNE   ERR7
         CLI   DS1RECFM,DCBRECF
         BNE   ERR7
         CLC   DS1BLKL(L'DS1BLKL),RCL
         BNE   ERR7
         CLC   DS1LRECL(L'DS1LRECL),RCL
         BNE   ERR7
         DROP  R6
         USING JFCDSECT,R7
         OI    JFCBTSDM,JFCNWRIT   INHIBIT WRITE BACK.
         DROP  R7
        OPEN   (DCBSR,(INPUT)),TYPE=J
         USING IHADCB,R8
         TM    DCBOFLGS,DCBOFOPN   TEST OPEN SUCCESSFULL,
         BZ    ERR10               BRANCH IF NOT.
         DROP  R8
         OI    OPEN+1,ON           SET OPEN SWITCHES.
         NI    READ+1,OFF
         NI    CLOSE+1,OFF
         XR    R9,R9               SET INDICATOR RESPONSE.
         B     EXIT
         EJECT
READ     B     ERR14               DATA-SET NOT OPENED.
         TM    0(R1),X'80'         TEST CALLING SEQUENCE.
         BO    ERR19
         TM    4(R1),X'80'
         BO    ERR19
         TM    8(R1),X'80'
         BZ    ERR19
         TM    7(R1),X'01'
         BNZ   ERR19
         LM    R7,R8,4(R1)         GET PARM. ADDRESSES.
         LH    R1,0(R7)            GET ARGUMENT.
         LTR   R1,R1               TEST IF ARGUMENT VALID,
         BNP   ERR19               BRANCH IF NOT.
         CLC   0(2,R7),NAUT        TEST IF AUT. NR. REQUEST.
         BL    OK
         BE    ERR19
         CLC   0(2,R7),NPRG        TEST IF PRG. NR. REQUEST.
         BNL   ERR19
         BCTR  R1,0                COMPUTE RECORD ADDRESS.
OK       BCTR  R1,0
         ST    R1,NREC
         LA    R1,DECBSR
        READ   (1),DI,DCBSR,(8),'S',0,NRECAD,MF=E
        CHECK  DECBSR
SWLRW    B     RDT                 I/O ERROR SWITCH.
         OI    SWLRW+1,ON          SET BRANCH OPERATION.
        WTO    MF=(E,LWTO)
         B     ERR16
RDT      CLC   0(2,R8),ZEROS       TEST IF AUT. NR. EXIST,
         BE    ERR15               BRANCH IF NOT, NOT FOUND.
         XR    R9,R9               SET INDICATOR RESPONSE.
         B     EXIT
         EJECT
CLOSE    B     ERR14               DATA-SET NOT OPENED.
         TM    0(R1),X'80'
         BZ    ERR19               TOO MANY ARGUMENTS.
        CLOSE  DCBSR
         NI    OPEN+1,OFF          SET CLOSE SWITCHES.
         OI    READ+1,ON
         OI    CLOSE+1,ON
         OI    SWDP+1,ON           RESET DUMP SWITCH.
         XR    R9,R9               SET INDICATOR RESPONSE.
         B     EXIT
         EJECT
*        COMPUTE ERROR NUMBER AND RETURN.
         SPACE 1
ERRM    NULL
         SPACE 1
ERR1     BCTR  R9,0      ROUTINE OR DATA-SET TABLE DESTROYED.
ERR2     BCTR  R9,0      SYSACC DD-CARD IS MISSING.
ERR3     BCTR  R9,0      SYSACC UNIT IS NOT A DIRECT-ACCESS STORAGE.
ERR4     BCTR  R9,0      SYSACC JFCB READ ERROR.
ERR5     BCTR  R9,0      SYSACC DD-CARD INCORRECTLY CODED.
ERR6     BCTR  R9,0      OBTAIN ERROR WHILE PROCESSING SYSACC VOLUME.
ERR7     BCTR  R9,0      SYSACC DSCB FORMAT 1 ERROR DETECTED.
         BCTR  R9,0
         BCTR  R9,0
ERR10    BCTR  R9,0      SYSACC DATA-SET OPEN ERROR.
         BCTR  R9,0
         BCTR  R9,0
ERR13    BCTR  R9,0      SYSACC DATA-SET IS ALREADY OPENED.
ERR14    BCTR  R9,0      SYSACC DATA-SET IS NOT OPENED.
ERR15    BCTR  R9,0      READ REQUEST - ARGUMENT NOT FOUND.
ERR16    BCTR  R9,0      READ REQUEST - I/O ERROR.
         BCTR  R9,0
         BCTR  R9,0
ERR19    BCTR  R9,0      ROUTINE CALLING SEQUENCE OR ARGUMENT ERROR.
ERR20    BCTR  R9,0      SYSACC DATA-SET WRONGLY OR NOT CATALOGED.
         BCTR  R9,0
         BCTR  R9,0
         BCTR  R9,0
ERR24    BCTR  R9,0      UNAUTHORIZED ACCESS.
         SPACE 1
ERRL     EQU   ((*-ERRM)/2)+1
         SPACE 1
SWDP     B     EXIT
         LR    R1,R9               SET ERROR NUMBER AS ABEND CODE(HEX).
        ABEND  (1),DUMP            DEBUG OPTION SELECTED BY OPEN.
         SPACE 1
EXIT     L     R1,INDRA            SET INDICATOR RESPONSE.
         LTR   R1,R1
         BZ    *+L'*+4
         ST    R9,0(R1)
        $XRET  CC=(R9)
         EJECT
RWERR   SYNADAF   ACSMETH=BDAM
         MVC   LWTO+4(72),56(R1)
         CLI   69(R1),C'*'         TEST UNSIGNIFICANT MESSAGE,
         BE    SYNAD2              BRANCH IF YES.
         CLI   8(R1),C' '          TEST IF BINARY INFORMATIONS,
         BE    SYNAD1              BRANCH IF NOT.
         UNPK  LWTO+4(7),9(4,R1)
         TR    LWTO+4(6),TRTAB-X'F0'
         MVI   LWTO+10,C','
         UNPK  LWTO+11(5),12(3,R1)
         TR    LWTO+11(4),TRTAB-X'F0'
         MVI   LWTO+15,C','
         B     SYNAD2
SYNAD1   MVC   LWTO+4(12),8(R1)    MOVE BLANKS.
SYNAD2  SYNADRLS
         NI    SWLRW+1,OFF         SET NOP OPERATION.
         BR    R14                 RETURN.
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
LOCAREA  DC    0D'0',XL120'00'     OVERLAP ON WORKAREA.
WORKAREA DC    0D'0',XL140'00',XL5'00',XL3'00'
DVTYP    DC    5F'0'
ATIOT    DC    A(*-*)
INDRA    DC    A(*-*)
ZEROS    DC    F'0'
REQAUT   DC    0F'0',BL1'00000000',AL3(MDL@IX),AL4(AUTLVL)
NREC     DC    0F'0',XL1'00'
NRECAD   DC    XL3'00'
JOBFILE  DC    0F'0',XL1'87',AL3(JF)
JF       DC    0F'0',XL176'00'
CVLIST  CAMLST NAME,DSNM,,LOCAREA
DSCBAR  CAMLST SEARCH,DSNM,VOLNUM,WORKAREA
LWTO    WTO    '                                                       1
                                ',ROUTCDE=11,DESC=7,MF=L
DSNM     DC    CL44' '
VOLNUM   DC    CL6' '
CH1      DC    H'1'
NAUT     DC    0H'0',AL2(NAUTNO+1)
NPRG     DC    0H'0',AL2(NAUTNO+NPRGNO+2)
DAORG    DC    0H'0',AL1(DCBDSGDA,0)
RCL      DC    0H'0',AL2(AUTLGTH)
MAXERR   DC    0H'0',AL2(ERRL)
TRTAB    DC    C'0123456789ABCDEF'
DEBUG    DC    C'DUMP'
AUTLVL   DC    XL1'0'
         EJECT
DCBSR   DCB    DSORG=DA,MACRF=(RIC),BFALN=D,BFTEK=S,KEYLEN=0,LIMCT=1,  1
               OPTCD=R,EXLST=JOBFILE,SYNAD=RWERR,DDNAME=SYSACC
         EJECT
        READ   DECBSR,DI,MF=L
         SPACE 2
INDTB    DC    XL2'0F0F'
         SPACE 2
         END
