SKAN     TITLE 'SEEK ANALYSIS PROGRAM.'
SEEKANAL START 0
         SPACE 1
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* *                                                                 * *
* *          S E E K     A N A L Y S I S     P R O G R A M          * *
* *                                                                 * *
* *            - SEEK DISTANCE                                      * *
* *            - SEEKED CYLINDERS                                   * *
* *            - RESPONSE TIME                                      * *
* *            - ONLY RECORDS WITH 0 SEEK LENGTH (PARM=Z)           * *
* *                                                                 * *
* * FILES :    SYSIN    - INPUT (GTF LIST).                         * *
* *            SYSPRINT - OUTPUT LIST.                              * *
* *            SYSPUNCH - WORK FILE (LOGICAL RECORD LENGTH MUST     * *
* *                       BE EQUAL TO THE LABEL 'LREC').            * *
* *                       USE PARM=N IF ALREADY EXIST.              * *
* *                                                                 * *
* * REWORKED BY : RAVARANI N. - MOINIL P.A.                         * *
* *               COMPUTING CENTRE - J.R.C. - ISPRA ESTABLISHMENT   * *
* *               21020 ISPRA (VA), ITALY                           * *
* *                                                                 * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         SPACE 2
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
MXCYL    EQU   900                 MAX. NUMBER OF CYLINDERS OF THE
*                                       LARGEST DEVICE TYPE TO BE
*                                       CONSIDERED BY SEEK ANALYSIS.
LTTIME   EQU   1000                MAX. THOUSANDS OF SECONDS INTERVAL
*                                       BETWEEN SIO AND IO INTERRUPT.
         EJECT
        $DEFREG
         SPACE 2
RECORD   DSECT                     WORK FILE RECORD DESCRIPTION
         SPACE 1
CODE     DS    CL3,C
SADDR    DS    0CL4,C
ADDR     DS    CL3,C
TIME     DS    CL13,C
CSWCC    DS    0CL4,C
SIOCC    DS    0CL2,C
CC       DS    CL2,C
SEEKADR  DS    CL4
         SPACE 1
LREC     EQU   *-RECORD            LOGICAL RECORD LENGTH (SYSPUNCH)
         SPACE 1
SEEKANAL CSECT                     RESTORE ORIGINAL CSECT
         EJECT
        $XENT  BASE=(R11,R12)
*        EXAMINE THE PARM. FIELD
         SPACE 1
         L     R1,0(R1)            PARM. FIELD ADDRESS
         LH    R2,0(R1)            PARM. FILED LENGTH
         LTR   R2,R2
         BNP   NOPARM              NO PARM. FIELD
PA0      CLI   2(R1),C'Z'          ONLY ZERO SEEK LENGTH REQUESTED?
         BNE   PA1                 NO
         OI    SWITCH,SWZR         YES
         B     PANXT
PA1      CLI   2(R1),C'N'          BYPASS EXTRACT REQUESTED?
         BNE   PASEP               NO
         OI    SWITCH,SWAN         YES, WORK FILE ALREADY EXIST
         B     PANXT
PASEP    CLI   2(R1),C','          SEPARATOR?
         BE    PANXT               YES
         LA    R10,8               SET ERROR PARM. FIELD R.C.
         B     LEAVE
PANXT    LA    R1,1(R1)            NEXT CHARACTER
         BCT   R2,PA0              LOOP IF MORE
NOPARM   TM    SWITCH,SWZR
         BO    *+L'*+10
         MVC   ZRL+1(L'ZRL-1),ZRL  CLEAR
         MVI   ZRL,C'.'
         EJECT
*        GET TABLES SPACE.
         SPACE 1
         L     R2,=A(MXCYL)        R2 = 'TABMOV'/'TABSEEK' LENGTH
         SLL   R2,2
         LR    R3,R2
         AR    R3,R2
         L     R1,=A(LTTIME)       R1 = 'TABTIME' LENGTH
         SLL   R1,2
         AR    R3,R1
         AH    R3,=H'7'
         SRL   R3,3
         SLL   R3,3                R3 = TOTAL LENGTH ROUNDED
         ST    R3,FREEARL
        GETMAIN R,LV=(R3)
         ST    R1,TABMOV           'TABMOV' START ADDRESS
         ALR   R1,R2
         ST    R1,TABSEEK          'TABSEEK' START ADDRESS
         ALR   R1,R2
         ST    R1,TABTIME          'TABTIME' START ADDRESS
         TM    SWITCH,SWAN
         BO    ANAL                GO TO SEEK ANALYSIS DIRECTLY
         EJECT
*        EXTRACT DATA FROM GTF LIST
*        (LOOK FOR IO AN SIO/SSCH LINES)
         SPACE 1
EXGTF    LA    R9,IOPRREC
         LA    R8,SIOPRREC
RGTF    $READ  GTFREC
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         TM    SWITCH,SWPR         DATE RECORD FOUND?
         BO    GO                  YES
         CLC   GTFREC+1(15),=CL15'*** DATE   DAY '
         BNE   RGTF
         OI    SWITCH,SWPR         SET SWITCH
         MVI   SIOPRREC,C' '
         MVC   SIOPRREC+1(L'SIOPRREC-1),SIOPRREC
         USING RECORD,R8
         MVC   CODE(L'CODE),GTFREC+12   MOVE DAY CHARS
         MVC   ADDR(L'ADDR),GTFREC+16   MOVE SERIAL DAY
         MVC   CSWCC(L'CSWCC),GTFREC+28 MOVE YEAR
         MVC   SEEKADR(L'SEEKADR),=CL4'0000' RESET FIELD
         DROP  R8
        $PUNCH SIOPRREC,LPU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PUNCH ERROR EXIT
         B     RGTF
GO       CLC   GTFREC+1(4),=CL4'SSCH'
         BE    RECSSCH
         CLC   GTFREC+1(3),=CL3'SIO'
         BE    RECSIO
         CLC   GTFREC+1(3),=CL3'IO '
         BNE   RGTF                NOTHING, CONTINUE WITH NEXT RECORD
         SPACE 1
*        IO RECORD FOUND, EXTRACT DATA
         SPACE 1
RECIO    L     R2,CRECIO
         AH    R2,=H'1'            COUNT RECORDS
         ST    R2,CRECIO
         CLI   SIOOK,X'FF'         WAS SIO RECORD OK?
         MVI   SIOOK,0
         BNE   RGTF                NO, DISCARD THIS
         MVI   IOPRREC,C' '
         MVC   IOPRREC+1(L'IOPRREC-1),IOPRREC
         USING RECORD,R9
         MVC   CODE(L'CODE),GTFREC+1    MOVE IO CHARS
         MVC   SADDR(L'SADDR),GTFREC+6  SIO ADDRESS
NIO1    $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(3),=CL3'IRB'   THIS LINE?
         BNE   NIO2                NO, LOOK FURTHER
         CLI   GTFREC+33,C'5'      STATUS AND BUSY CONDITION?
         BE    SMBUS               YES, SKIP THESE RECORDS
         MVC   CSWCC(L'CSWCC),GTFREC+33 CSW CC
         B     NIO3
NIO2     CLC   GTFREC+11(3),=CL3'CSW'   THIS LINE?
         BNE   NIO1                NO, CONTINUE
         CLI   GTFREC+25,C'5'      STATUS AND BUSY CONDITION?
         BE    SMBUS               YES, SKIP THESE RECORDS
         MVC   CSWCC(L'CSWCC),GTFREC+25 CSW CC
NIO3    $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(4),=CL4'TIME'  THIS LINE?
         BNE   NIO3                NO, GET NEXT ONE
         MVC   TIME(L'TIME),GTFREC+18
         DROP  R9
        $PUNCH SIOPRREC,LPU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PUNCH ERROR EXIT
        $PUNCH IOPRREC,LPU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PUNCH ERROR EXIT
         L     R2,RECOUT
         AH    R2,=H'1'            COUNT RECORD PAIRS WRITTEN
         ST    R2,RECOUT
         B     RGTF
SMBUS    L     R2,CSMBUS
         AH    R2,=H'1'            COUNT RECORDS IO SM + BUSY
         ST    R2,CSMBUS
         B     RGTF
         SPACE 1
*        SSCH RECORD FOUND, EXTRACT DATA
         SPACE 1
RECSSCH  L     R2,CRECSIO
         AH    R2,=H'1'            COUNT RECORDS
         ST    R2,CRECSIO
NEWSSCH  MVI   SIOPRREC,C' '
         MVC   SIOPRREC+1(L'SIOPRREC-1),SIOPRREC
         USING RECORD,R8
         MVC   CODE(L'CODE),=CL3'SIO'   MOVE SIO CHARS
         MVC   SADDR(L'SADDR),GTFREC+6  SIO ADDRESS
         CLI   GTFREC+98,C'2'      CHANNEL BUSY?
         BE    CCHBUSY             YES, DISCARD RECORD
         MVC   SIOCC(L'SIOCC),GTFREC+97 SIO CC
NSSCH1  $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(5),=CL5'SEEKA' THIS LINE?
         BNE   NSSCH1              NO, GET NEXT ONE
         MVC   SEEKADR(2),GTFREC+23     SEEK ADDRESS (CYL) 1ST BYTE
         MVC   SEEKADR+2(2),GTFREC+26   SEEK ADDRESS (CYL) 2ND BYTE
NSSCH2  $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(4),=CL4'TIME'  THIS LINE?
         BNE   NSSCH2              NO, GET NEXT ONE
         MVC   TIME(L'TIME),GTFREC+18
         DROP  R8
NSSCH3  $READ  GTFREC
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+1(3),=CL3'IO '
         BE    NOCCWCH
         CLC   GTFREC+1(3),=CL3'SIO'
         BE    NEWSSCH
         B     NSSCH3
         SPACE 1
*        SIO RECORD FOUND, EXTRACT DATA
         SPACE 1
RECSIO   L     R2,CRECSIO
         AH    R2,=H'1'            COUNT RECORDS
         ST    R2,CRECSIO
NEWSIO   MVI   SIOPRREC,C' '
         MVC   SIOPRREC+1(L'SIOPRREC-1),SIOPRREC
         USING RECORD,R8
         MVC   CODE(L'CODE),GTFREC+1    MOVE SIO CHARS
         MVC   SADDR(L'SADDR),GTFREC+6  SIO ADDRESS
NSIO1   $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(4),=CL4'FLGS'  THIS LINE?
         BNE   NSIO1               NO, GET NEXT ONE
         CLI   GTFREC+81,C'2'      CHANNEL BUSY?
         BE    CCHBUSY             YES, DISCARD RECORD
         MVC   SIOCC(L'SIOCC),GTFREC+80 SIO CC
         MVC   SEEKADR(2),GTFREC+65     SEEK ADDRESS (CYL) 1ST BYTE
         MVC   SEEKADR+2(2),GTFREC+68   SEEK ADDRESS (CYL) 2ND BYTE
NSIO2   $READ  GTFREC              NEXT RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(4),=CL4'TIME'  THIS LINE?
         BNE   NSIO2               NO, GET NEXT ONE
         MVC   TIME(L'TIME),GTFREC+18
         DROP  R8
NSIO3   $READ  GTFREC
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(9),=CL9'CCW CHAIN'  THIS LINE?
         BE    NSIO4
         CLC   GTFREC+1(3),=CL3'IO '
         BE    NOCCWCH
         CLC   GTFREC+1(3),=CL3'SIO'
         BE    NEWSIO
         B     NSIO3
NOCCWCH  MVI   SIOOK,X'FF'         SET SIO RECORD OK SWITCH
         B     RECIO
NSIO4   $READ  GTFREC
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDREAD             END OF LIST
         BNZ   EXIT                READ ERROR EXIT
         CLC   GTFREC+11(8),=CL8' '     BLANKS?
         BE    NSIO4               YES, NOT YET LINE
         SPACE 1
*        SHOULD BE FIRST CHANNEL PROGRAM
         SPACE 1
         CLC   GTFREC+21(2),=CL2'94'    DEVICE RELEASE?
         BE    DEVREL              YES, IGNORE
         MVI   SIOOK,X'FF'         SET SIO RECORD OK SWITCH
         B     RGTF
DEVREL   L     R2,CDEVREL
         AH    R2,=H'1'            COUNT RECORDS SIO DEVICE RELEASE
         ST    R2,CDEVREL
         B     RGTF
CCHBUSY  L     R2,CCHBUS
         AH    R2,=H'1'            COUNT RECORDS SIO CHANNEL BUSY
         ST    R2,CCHBUS
         B     RGTF
         EJECT
*        END OF SELECTION
         SPACE 1
ENDREAD $PRINT PSEND
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
        $PRINT PSENDU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         L     R1,CRECIO
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'IO RECORDS :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         L     R1,CRECSIO
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'SIO RECORDS :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         L     R1,CCHBUS
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'CHAN. BUSY :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         L     R1,CDEVREL
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'DEV RELEASE :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         L     R1,CSMBUS
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'S.M. + BUSY :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         L     R1,RECOUT
         CVD   R1,DW
         MVC   PSTATNR,MASK
         ED    PSTATNR,DW+4
         MVC   PSTATTX,=CL13'RECORDS OUT :'
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         BAL   R8,PUSTAT
         OC    RECOUT,RECOUT
         BNZ   CONT
        $PRINT PNORC
         LR    R10,R15             SET RETURN CODE
         B     EXIT
         USING RECORD,R9
PUSTAT   OC    RECOUT,RECOUT
         BZR   R8
         MVI   IOPRREC,C' '
         MVC   IOPRREC+1(L'IOPRREC-1),IOPRREC
         MVC   CODE,=CL3'STS'
         MVC   TIME,PSTATTX
         MVC   SIOCC(L'PSTATNR),PSTATNR
        $PUNCH IOPRREC,LPU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PUNCH ERROR EXIT
         BR    R8
         DROP  R9
CONT    $PRINT PEND
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
        $RCLOSE ,                  CLOSE READ
        $UCLOSE ,                  CLOSE PUNCH
         NI    SWITCH,255-SWPR     RESET SWITCH
         EJECT
*        ANALYZE INPUT DATA.
         SPACE 1
ANAL     LA    R8,IOPRREC
         USING RECORD,R8
READ    $READ  IOPRREC,WFILE       GET NEW RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    EOF                 END OF FILE
         BNZ   EXIT                READ ERROR EXIT
         CLC   CODE,=CL3'STS'      STATISTICS RECORDS?
         BE    EOF                 YES
         TR    SEEKADR,TRTAB-X'C0'
         TM    SWITCH,SWPR         FIRST SIO REC FOUND?
         BO    SK1                 YES
         CLC   CODE,=CL3'SIO'      THIS ONE?
         BNE   SK0                 NO
         MVC   VOLSD,ADDR          SET VOLUME IN LISTS
         MVC   VOLSA,ADDR
         MVC   VOLRT,ADDR
         OI    SWITCH,SWPR         SET SWITCH
         PACK  PACKZ,SEEKADR
         L     R2,PACKZ            GET SEEK ADDR
         SRL   R2,4                SHIFT OUT SIGN
         ST    R2,ARMPOS           SET FIRST ARM POSITION
         MVC   TMT(L'TMT),TIME     GET TIME STAMP OF SIO
         PACK  DW,TMT
         CVB   R3,DW               CONVERT TO BINARY
         SR    R2,R2
         D     R2,=F'3600'         COMPUTE HH.MM.SS
         CVD   R3,DW
         UNPK  HSTR(2),DW+6(2)
         OI    HSTR+1,C'0'
         LR    R3,R2
         SR    R2,R2
         D     R2,=F'60'
         CVD   R3,DW
         UNPK  HSTR+3(2),DW+6(2)
         OI    HSTR+4,C'0'
         CVD   R2,DW
         UNPK  HSTR+6(2),DW+6(2)
         OI    HSTR+7,C'0'
         B     READ                READ NEXT RECORD
SK0      CLC   CODE,=CL3'DAY'      IS IT DAY RECORD?
         BNE   READ                NO
         MVC   HDAY,ADDR           YES
         MVC   HYEAR,CSWCC
         B     READ
SK1      CLC   CODE,=CL3'SIO'      SIO RECORD?
         BNE   SK2                 NO
         MVC   TMT(L'TMT),TIME     RETAIN TIME STAMP OF SIO
         MVC   T(6),TIME           GET TIME STAMP OF SIO
         MVC   T+6(3),TIME+7
         PACK  DW,T
         CVB   R2,DW               CONVERT TO BINARY
         ST    R2,TSIO
         PACK  PACKZ,SEEKADR       GET SEEK ADDRESS
         L     R2,PACKZ
         SRL   R2,4                SHIFT OUT SIGN
         ST    R2,PACKZ            SAVE ADDRESS
         L     R3,ARMPOS           GET OLD POSTION
         CR    R3,R2               POS OR NEG SEEK?
         BH    SKPOS               POSITIVE
         SR    R2,R3               COMPUTE SEEK LENGTH
         B     ZEROL
SKPOS    SR    R3,R2               COMPUTE SEEK LENGTH
         LR    R2,R3               AND CHANGE REGISTER
ZEROL    TM    SWITCH,SWZR         ONLY ZERO SEEK LENGTH REQUESTED?
         BZ    SETTAB              NO, ALL
         LTR   R2,R2               ZERO SEEK LENGTH
         BZ    SETTAB
         MVC   ARMPOS,PACKZ        SET NEW ARM POS BUT ELIMINE VALUE
        $READ  IOPRREC,WFILE       ELIMINATED IO RECORD
         LTR   R10,R15             TEST RETURN CODE
         BM    EOF                 END OF FILE
         BNZ   EXIT                READ ERROR EXIT
         B     READ
SETTAB   CL    R2,=A(MXCYL)        CHECK DISPL.
         BH    ERRMOV              TOO LARGE
         SLL   R2,2                MULTIPLY BY 4 TO ALIGN ON FULLWORD
         L     R3,TABMOV           GET START ADDRESS OF TABLE
         L     R0,0(R2,R3)         GET OLD VALUE
         AH    R0,=H'1'            INCREMENT
         ST    R0,0(R2,R3)         AND STORE BACK
         L     R0,TOTMOV           INCREMENT TOTAL
         AH    R0,=H'1'
         ST    R0,TOTMOV
         L     R2,PACKZ            GET ADDR OF SEEK
         CL    R2,=A(MXCYL)        CHECK DISPL.
         SLL   R2,2                MULTIPLY BY 4 TO ALIGN ON FULLWORD
         BH    ERRSEEK             TOO LARGE
         L     R3,TABSEEK          GET START ADDRESS OF TABLE
         L     R0,0(R2,R3)         GET OLD VALUE
         AH    R0,=H'1'            INCREMENT
         ST    R0,0(R2,R3)         AND STORE BACK
         L     R0,TOTSEEK          INCREMENT TOTAL
         AH    R0,=H'1'
         ST    R0,TOTSEEK
         MVC   ARMPOS,PACKZ        SET NEW ARM POSITION
         B     READ                GET NEXT RECORD
SK2      CLC   CODE,=CL3'IO '
         BNE   READ
         MVC   TMT(L'TMT),TIME     RETAIN TIME STAMP OF IO
         MVC   T(6),TIME           GET TIME STAMP OF IO INTERRUPT
         MVC   T+6(3),TIME+7
         PACK  DW,T
         CVB   R2,DW               CONVERT TO BINARY
         S     R2,TSIO             MINUS SIO TIME
         CL    R2,=A(LTTIME)       CHECK DISPL.
         BH    READ                IGNORE
         SLL   R2,2                MULT BY 4 FOR DISPL.
         L     R3,TABTIME
         L     R0,0(R2,R3)         GET OLD VALUE
         AH    R0,=H'1'            BUMP
         ST    R0,0(R2,R3)         AND STORE BACK
         L     R0,TOTTIME          INCREMENT TOTAL
         AH    R0,=H'1'
         ST    R0,TOTTIME
         B     READ
         DROP  R8
         EJECT
*        PRINT GRAPHS.
         SPACE 1
EOF      PACK  DW,TMT
         CVB   R3,DW               CONVERT TO BINARY
         SR    R2,R2
         D     R2,=F'3600'         COMPUTE HH.MM.SS
         CVD   R3,DW
         UNPK  HEND(2),DW+6(2)
         OI    HEND+1,C'0'
         LR    R3,R2
         SR    R2,R2
         D     R2,=F'60'
         CVD   R3,DW
         UNPK  HEND+3(2),DW+6(2)
         OI    HEND+4,C'0'
         CVD   R2,DW
         UNPK  HEND+6(2),DW+6(2)
         OI    HEND+7,C'0'
         SR    R2,R2               FIRST CYL NUMBER
         L     R3,TABMOV           ADDRESS OF TABLE
         LA    R7,50               PAGE WIDTH
         L     R8,=A(MXCYL)        END VALUE
         BAL   R14,ADJUST
         MVC   COUNT,TOTMOV        GET TOTAL
NEWSD    MVC   HPG(L'HPG),=XL4'40202120'
         ED    HPG,NRPG
        $PRINT TIT                 PRINT TITLE LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         AP    NRPG,=PL1'+1'
        $PRINT LSD                 PRINT HEADER LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
NEWPG    L     R1,COUNT            TOTAL OF EVENTS
         CVD   R1,DW
         MVC   PNVALN,MASK
         ED    PNVALN,DW+4
        $PRINT PNVAL
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         MVI   SCALE,C'0'          SET DOUBLE SPACE
        $PRINT SCALE               PRINT HEADER LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         LA    R5,1                LOOP FOR CYL NO. PRINT
         LA    R6,0(R2,R7)         MAX. TO PAGE
LOOP     LR    R1,R2               CYL VALUE
         SLL   R1,2                MULTIPLY BY 4 FOR DISPL.
         L     R4,0(R1,R3)         GET LENGTH OF MOVE
         CLI   SWS,1               SECOND ROUND?
         BNE   DCY                 NO
         STH   R2,DW               HEXADECIMAL VALUE
         UNPK  DW+3(5),DW(3)
         CLI   DW+6,X'F0'
         BE    SCPR
         CLI   DW+6,X'F5'
         BE    SCPR
         CLI   DW+6,X'FA'
         BE    SCPR
         CLI   DW+6,X'FF'
         BNE   NOPR
SCPR     TR    DW+3(4),TRHEX-X'F0'
         MVC   CYLS(4),DW+3
         B     NOPR
DCY      BCT   R5,NOPR             PRINT VALUE?
         CVD   R2,DW               EDIT VALUE
         MVC   CYLS(4),=XL4'40202120'
         ED    CYLS(L'CYLS),DW+6
         LA    R5,5                RESET LOOP
NOPR     LTR   R4,R4               ZERO?
         BNP   STAMP               YES
         SR    R0,R0               COMPUTE PRECENTAGE
         LR    R1,R4
         M     R0,=F'1000'
         D     R0,COUNT
         LR    R14,R1
         SR    R0,R0
         AH    R1,=H'5'
         D     R0,=F'10'
         LTR   R1,R1               ZERO?
         BNP   *+L'*+2             YES, MOVE ONE
         BCTR  R1,0                -1 FOR MOVE
         EX    R1,MVCSTARS
         LA    R1,STARS+2(R1)
         MVC   0(FILLL,R1),FILL
         CVD   R4,DW
         ED    L'FILL-1(L'FILLM+1,R1),DW+4
         CVD   R14,DW
         MVC   TMT,=XL6'602020212020'
         ED    TMT,DW+5
         MVC   L'FILL+L'FILLM+1(L'FILLP,R1),TMT+2
         MVC   L'FILL+L'FILLM+L'FILLP+2(L'FILLD,R1),TMT+L'FILLP+2
         L     R1,CUMUL
         AR    R1,R4
         ST    R1,CUMUL
         SR    R0,R0               COMPUTE CUMULATIVE PRECENTAGE
         M     R0,=F'1000'
         D     R0,COUNT
         AH    R1,=H'5'
         CVD   R1,DW
         MVC   TMT,=XL6'402020212020'
         ED    TMT,DW+5
         MVC   CPC(L'CPC),TMT+2
         MVI   SPRTR,C'-'
STAMP   $PRINT LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         MVC   CPC(4),=CL4' '      CLEAR
         MVC   CYLS,=CL4' '
         MVI   STARS,C' '
         MVC   STARS+1(LLCLR-1),STARS   CLEAR LINE
         AH    R2,=H'1'            ADVANCE IN CYL NO.
         CLR   R2,R8               END?
         BNL   ASTMIN              YES
         CLR   R2,R6               NEW PAGE?
         BL    LOOP                NO
         MVI   SCALE,C' '          SET SINGLE SPACE
        $PRINT SCALE               PRINT TRAILER LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         CLI   SWS,255             LAST ROUND?
         BE    NEWRT               YES
         CLI   SWS,1               SECOND ROUND?
         BE    NEWSA               YES
         B     NEWSD               NO
MVCSTARS MVC   STARS(*-*),=100C'*' << EXECUTED >>
ASTMIN   MVI   SCALE,C' '          SET SINGLE SPACE
        $PRINT SCALE               PRINT TRAILER LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         XC    CUMUL,CUMUL
         CLI   SWS,255             LAST ROUND?
         BE    END                 YES
         CLI   SWS,1               SECOND ROUND?
         BE    SROUND              YES
         MVI   SWS,1               NO
         SR    R2,R2               FIRST CYL NUMBER
         L     R3,TABSEEK          ADDRESS OF TABLE
         LA    R7,X'30'            PAGE WIDTH
         L     R8,=A(MXCYL)        END VALUE
         BAL   R14,ADJUST
         MVC   COUNT,TOTSEEK       GET TOTAL
NEWSA    MVC   HPG(L'HPG),=XL4'40202120'
         ED    HPG,NRPG
        $PRINT TIT                 PRINT TITLE LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         AP    NRPG,=PL1'+1'
        $PRINT LSA
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         B     NEWPG
SROUND   MVI   SWS,255
         SR    R2,R2               STARTING RESPONSE TIME (MSEC)
         L     R3,TABTIME          ADDRESS OF TABLE
         LA    R7,50               PAGE WIDTH
         L     R8,=A(LTTIME)       END VALUE
         BAL   R14,ADJUST
         MVC   COUNT,TOTTIME       GET TOTAL
NEWRT    MVC   HPG(L'HPG),=XL4'40202120'
         ED    HPG,NRPG
        $PRINT TIT                 PRINT TITLE LINE
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         AP    NRPG,=PL1'+1'
        $PRINT LRT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
         B     NEWPG
         SPACE 1
ADJUST   LR    R1,R3               ADJUST END OF TABLE ROUTINE
         LR    R0,R8
         SLL   R0,2
         AR    R1,R0
ADJUST1  SH    R1,=H'4'
         CLR   R1,R3
         BNH   ADJUST2
         OC    0(4,R1),0(R1)
         BZ    ADJUST1
ADJUST2  AH    R1,=H'4'
         SR    R1,R3
         SRL   R1,2
         CLR   R1,R8
         BNLR  R14
         AR    R1,R7
         CLR   R1,R8
         BNLR  R14
         SR    R0,R0
         DR    R0,R7
         SR    R0,R0
         MR    R0,R7
         LR    R8,R1
         BR    R14
         EJECT
*        END OF WORK.
         SPACE 1
END      LA    R8,IOPRREC
         USING RECORD,R8
         CLC   CODE,=CL3'STS'      STATISTICS RECORDS?
         BNE   ENDWK               NO
         MVI   PSTEND,C'0'
        $PRINT PSEND
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
        $PRINT PSENDU
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
ENDPR    MVC   PSTATTX,TIME
         MVC   PSTATNR(L'PSTATNR),SIOCC
        $PRINT PSTAT
         LTR   R10,R15             TEST RETURN CODE
         BNZ   EXIT                PRINT ERROR EXIT
        $READ  IOPRREC,WFILE
         LTR   R10,R15             TEST RETURN CODE
         BM    ENDWK               END OF FILE
         BNZ   EXIT                READ ERROR EXIT
         CLC   CODE,=CL3'STS'      STATISTICS RECORDS?
         BE    ENDPR               YES
ENDWK   $PRINT PSTEND
         LR    R10,R15             SET RETURN CODE
EXIT    $RCLOSE ,                  CLOSE ALL - READ
        $UCLOSE ,                            - PUNCH
        $PCLOSE ,                            - PRINT
         L     R1,TABMOV
         L     R0,FREEARL
        FREEMAIN R,A=(1),LV=(0)
LEAVE   $XRET  CC=(R10)
         EJECT
*        ERROR DIAGNOSTICS.
         SPACE 1
ERRMOV  $PRINT ERMOVM
         B     ERREX
ERRSEEK $PRINT ERSEEKM
ERREX    LA    R10,16              SET ERROR R.C.
         B     EXIT
         EJECT
*        CONSTANTS AND WORK AREAS.
         SPACE 1
DW       DC    D'0'
TABMOV   DC    F'0'
TABSEEK  DC    F'0'
TABTIME  DC    F'0'
FREEARL  DC    F'0'
LPU      DC    A(LREC)
CRECIO   DC    F'0'
CRECSIO  DC    F'0'
CCHBUS   DC    F'0'
CDEVREL  DC    F'0'
CSMBUS   DC    F'0'
RECOUT   DC    F'0'
COUNT    DC    F'0'
CUMUL    DC    F'0'
ARMPOS   DC    F'0'
PACKZ    DC    F'0'
TSIO     DC    F'0'
TOTMOV   DC    F'0'
TOTSEEK  DC    F'0'
TOTTIME  DC    F'0'
         SPACE 1
SIOOK    DC    X'0'
SWS      DC    X'0'
SWITCH   DC    X'0'
SWZR     EQU   X'01'
SWAN     EQU   X'02'
SWPR     EQU   X'04'
WFILE    DC    CL8'SYSPUNCH'
MASK     DC    XL8'4020202020202120'
NRPG     DC    PL2'+1'
FILL     DC    CL3'<--'
FILLM    DC    XL7'20202020202120',CL1'-'
FILLP    DC    CL3' ',C','
FILLD    DC    CL1' ',C'%'
FILLL    EQU   *-FILL
TMT      DC    CL6' '
T        DC    CL9' '
TRHEX    DC    CL16'0123456789ABCDEF'
TRTAB    DC    XL7'000A0B0C0D0E0F',XL9'0'
         DC    XL16'0'
         DC    XL16'0'
         DC    XL10'00010203040506070809',XL6'0'
         EJECT
         DC    AL1(LTIT)
TIT      DC    C'1GTF ANALYSIS FROM '
HSTR     DC    CL8'  .  .  ',C' TO '
HEND     DC    CL8'  .  .  ',C' OF DAY '
HDAY     DC    CL3'...',C', YEAR '
HYEAR    DC    CL4'....',C'.'
FILLER   EQU   120-(*-TIT)
         DC    (FILLER)C' ',C'PAGE'
HPG      DC    CL4' ',C'.'
LTIT     EQU   *-TIT
         SPACE 1
         DC    AL1(LLSD)
LSD      DC    C'0SEEK DISTANCE ANALYSIS - DEVICE : '
VOLSD    DC    CL3' ',C', Y-AXIS : NUMBER OF CYLS.'
LLSD     EQU   *-LSD
         SPACE 1
         DC    AL1(LLSA)
LSA      DC    C'0SEEK ADDRESS ANALYSIS - DEVICE : '
VOLSA    DC    CL3' ',C', Y-AXIS : CYL. ADDRESS.'
LLSA     EQU   *-LSA
         SPACE 1
         DC    AL1(LLRT)
LRT      DC    C'0RESPONSE TIME ANALYSIS - DEVICE : '
VOLRT    DC    CL3' ',C', Y-AXIS : MILLISECONDS'
ZRL      DC    C' - ONLY ZERO SEEK LENGTH.'
LLRT     EQU   *-LRT
         SPACE 1
         DC    AL1(SCALEL)
SCALE    DC    CL5' C.% ',CL4' ',CL2' I'
         DC    C'----+----1----+----2----+----3----+----4----+----5'
         DC    C'----+----6----+----7----+----8----+----9----+----I'
SCALEL   EQU   *-SCALE
         SPACE 1
         DC    AL1(LLINE)
LINE     DC    CL1' '
CPC      DC    CL3' '
SPRTR    DC    CL1' '
CYLS     DC    CL4' ',CL2' I'
STARS    DC    CL100' ',(FILLL+1)C' '
LLCLR    EQU   *-STARS
LLINE    EQU   *-LINE
         SPACE 2
         DC    AL1(PSTATL)
PSTAT    DC    C'0',CL5' '
PSTATTX  DC    CL13' '
PSTATNR  DC    CL8' '
PSTATL   EQU   *-PSTAT
         SPACE 1
         DC    AL1(PNVALL)
PNVAL    DC    C' TOTAL NUMBER OF EVENTS IN THE ANALYZED PERIOD :'
PNVALN   DC    CL8' ',C'.'
PNVALL   EQU   *-PNVAL
         SPACE 1
         DC    AL1(L'PSEND)
PSEND    DC    C'1     EXTRACTED GTF DATA STATUS CHECK :'
         DC    AL1(L'PSENDU)
PSENDU   DC    C'      ---------------------------------'
         DC    AL1(L'PEND)
PEND     DC    C'0     --- GTF DATA EXTRACTED ---'
         DC    AL1(L'PNORC)
PNORC    DC    C'0     --- NO GTF DATA EXTRACTED. -EXIT-'
         DC    AL1(L'PSTEND)
PSTEND   DC    C'1     --- SEEK ANALYSIS END ---'
         SPACE 1
         DC    AL1(L'ERMOVM)
ERMOVM   DC    C'0 --- SEEK LENGTH TABLE TOO SMALL (MXCYL). -EXIT-'
         DC    AL1(L'ERSEEKM)
ERSEEKM  DC    C'0 --- SEEK ADDRESS TABLE TOO SMALL (MXCYL). -EXIT-'
         SPACE 1
IOPRREC  DC    (LREC)C' '
SIOPRREC DC    (LREC)C' '
GTFREC   DC    CL140' '
         SPACE 2
        LTORG
         SPACE 2
         END
