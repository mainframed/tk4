AU10     TITLE '-- TSO-CP AUT10 --'
AUT10    START 0
         SPACE 1
**********************************************************************
*        THIS CP PERMITS TO VISUALIZE IN A TRANSACTIONNAL            *
*        WAY THE ACCOUNTING FILE.                                    *
*        THIS CP IS GIVEN TO SUPPORT GROUP ALSO.                     *
*                                             M.SACRE  01 OCTOBRE 84 *
*                                        P.A.MOINIL  21 SEPTEMBRE 89 *
* REMARK : THE SCREEN DISPLAY IS ORGANIZED ON 25 LINES OF DATA FOR   *
*          25 NUMBERS OF PROGRAMMERS NO. FIELDS.                     *
NPL      EQU   25 = AUTNPNF IN AUTDSECT                              *
*          IF AUTNPNF IS REDEFINED HIGHER, TAKE CARE THAT THEN YOU   *
*          MUST CHANGE THE SCREEN DISPLAY LOGIC AND ORGANIZATION.    *
**********************************************************************
         SPACE 1
         PRINT NOGEN
        $DEFREG
        $XENT  BASE=(R10,R11,R12)
         SPACE 1
*------- CONTROL OF CALLER (USERID)
         XR    R0,R0                   NO HARDCOPY
         L     R15,=V(AUT98)
         BALR  R14,R15
         LTR   R15,R15
         BNZ   LEAVE                   BRANCH TO END OF CP
         SPACE 1
*--------------------------------------------------------------------*
*        USERID AUTORISE A UTILISER CETTE CP.                        *
*--------------------------------------------------------------------*
         SPACE 1
*------- ALLOCATION DYNAMIQUE DU FICHIER D'ACCOUNTING
*        QUI SE TROUVE SOUS LA DD-NAME SYSACC
         L     R1,=V(AUT98A)
         MVC   DYNDSN(44),0(R1)        SET ACCOUNT FILE DS-NAME
        $DYNALL DYNLIST                DYNAMIC ALLOC OF SYSACC
         LTR   R15,R15                 TEST RETURN CODE
         BNZ   ERALL                   B ON ERROR ALLOC IF NOT ZERO
        CALL   ZOPEN,(RETCD,XOPT),VL   OPEN FILE UNDER SYSACC DD
         LTR   R15,R15                 IS RETURN CODE 0?
         BNZ   ERRZOC                  IF NOT, ERROR AT OPEN
         L     R1,=V(AUT99I)
         MVC   0(4,R1),=V(AUT95)       SET PF-2 KEY ACTIVE
         EJECT
*--------------------------------------------------------------------*
*        FICHIER D'ACCOUNTING BIEN OUVERT.                           *
*--------------------------------------------------------------------*
         SPACE 1
*------- START PROCESSING.
DEMINIT  LA    R1,PECRIN               INITIAL DEMAND
         L     R15,=V(AUT99)
         BALR  R14,R15
         NOP   *+L'*+16                SWITCH ADVICE
         OI    *-3,X'F0'               THIS WAY DONE JUST ONCE
         MVC   OVRR(LPTIC),PTIC        CUT OUT THE ADVICE
         MVC   PECRIN,=A(LECRIN)
         MVI   ECRINM,C' '
         MVC   ECRINM+1(L'ECRINM-1),ECRINM
         LTR   R15,R15                 NORMAL COMPLETION ?
         BNZ   SEEWHAT                 NO
         L     R15,=V(AUT99R)          GET RESPONSE
         BALR  R14,R15
         LTR   R15,R15                 ONLY END OF TEXT ?
         BZ    FININER                 IF YES, ESCAPE
         LTR   R1,R1                   NO TEXT ?
         BZ    FININER                 YES
         MVC   RESPONSE(1),3(R15)
         OI    RESPONSE,C' '           TRANSLATE LOWER CASE IN UPPER
         CLI   RESPONSE,C'A'           IS RESPONSE = A ?
         BE    AUTHOR                  IF YES, GO TO AUTHOR
         CLI   RESPONSE,C'P'           IS RESPONSE = P ?
         BE    INPROG                  IF YES, ACCESS BY PROG NBR
         CLI   RESPONSE,C'U'           IS RESPONSE = U ?
         BE    INUSID                  IF YES, ACCESS BY USERID
         CLI   RESPONSE,C' '           IS RESPONSE = BLANK ?
         BE    FININER                 IF YES, CLOSE FILE, END
         MVC   ECRINM(L'MSGINV),MSGINV
         MVC   ECRINM+L'MSGINV-5(1),RESPONSE
         B     DEMINIT                 BACK TO DEMAND INITIAL
SEEWHAT  CH    R15,=H'4'
         BE    FININER                 END OF CP REQUESTED
         B     CLSZR                   ELSE EXIT
         EJECT
*--------------------------------------------------------------------*
*        ACCES DU FICHIER PAR LE USERID.                             *
*        ON VA ALLER CHERCHER L'ACCOUNTING NUMBER DANS LE TSO-UADS.  *
*        PUIS ON REPART DANS CE PROGRAMME.                           *
*--------------------------------------------------------------------*
         SPACE 1
INUSID   MVC   INFO(L'INFO),=CL25' '   ASK FOR USERID
        CALL   AUT90,(INFO),VL         CALL SUBROUTINE
         LTR   R15,R15
         BNE   FININER                 END OF CP REQUESTED
         CLC   INFO+8(7),=CL25' '      ESCAPE?
         BE    DEMINIT                 YES
        CALL   AUT11,(INFO),VL         CALL SUBROUTINE
         LTR   R15,R15
         BZ    *+L'*+12
         CH    R15,=H'4'               JUST END REQUESTED?
         BE    FININER                 YES
         B     CLSZR
         LTR   R1,R1
         BM    PNOTFD
         MVC   INFO+8(7),0(R1)         PASS NEW USERID
         CLC   INFO+8(7),=CL25' '      BUT MAY BE ESCAPE?
         BE    DEMINIT                 YES
         OC    INFO+8(7),=CL25' '      TRANSLATE LOWER CASE IN UPPER
         B     INUSID+L'INUSID
PNOTFD   MVI   INFO+8,X'FF'            SAY PGRMER NUMBER NOT FOUND
         B     INUSID+L'INUSID
         SPACE 1
*--------------------------------------------------------------------*
*        ACCES DU FICHIER PAR LE NUMERO DE PROGRAMMEUR.              *
*--------------------------------------------------------------------*
*                               ACCESS IN FILE BY PROGR. NUMBER
INPROG   XR    R1,R1                   TO SAY AT SUBROUTINE THERE
*                                      IS NO PARAMETERS.
        CALL   AUT11                   CALL SUBROUTINE
         LTR   R15,R15
         BZ    DEMINIT
         CH    R15,=H'4'               JUST END REQUESTED?
         BE    FININER                 YES
         B     CLSZR
         EJECT
*--------------------------------------------------------------------*
*        ACCES DU FICHIER PAR LE NUMERO D'AUTORISATION               *
*--------------------------------------------------------------------*
         SPACE 1
AUTHOR   BAL   R14,CLRVECT
         MVI   ECRAUM,C' '
         MVC   ECRAUM+1(L'ECRAUM-1),ECRAUM
REQAUT   LA    R1,PECRAU               ASK AUTHOR. NBRE
         L     R15,=V(AUT99)
         BALR  R14,R15
         LTR   R15,R15                 NORMAL COMPLETION ?
         BNZ   FININER                 NO, CLOSE FILE, END (ONLY 4)
         MVC   WCL4(4),=CL25' '
         L     R15,=V(AUT99R)          GET RESPONSE
         BALR  R14,R15
         LTR   R15,R15                 ONLY END OF TEXT ?
         BZ    DEMINIT                 IF YES, ESCAPE
         LTR   R1,R1                   NO TEXT ?
         BZ    DEMINIT                 YES
         BCT   R1,*+L'*+6
         MVC   WCL4(*-*),3(R15)
         EX    R1,*-6
         CLC   WCL4(4),=CL25' '        IS RESPONSE = BLANK ?
         BE    DEMINIT                 YES, ESCAPE
TESTAUT  MVI   ECRAUM,C' '
         MVC   ECRAUM+1(L'ECRAUM-1),ECRAUM
         LA    R0,L'WCL4
         LA    R1,WCL4+L'WCL4
         BCTR  R1,0
         CLI   0(R1),C'0'              TEST IF NUMERIC
         BL    WRAUTH
         CLI   0(R1),C'9'
         BH    WRAUTH
         BCT   R0,*-18
*------- ICI, NOUS SAVONS QUE L'INPUT EST NUMERIQUE
         PACK  DSD,WCL4                PACK AUTHOR. NUMBER
         CVB   R5,DSD                  CONVERT IN BINARY
         STH   R5,ARGUMAUT             STORE IN ARGUM. AUTHORIZ.
        CALL   ZREAD,(RETCD,ARGUMAUT,AREAR),VL  READ FILE
         LTR   R15,R15                 TEST RETURN CODE
         BZ    FNDRC                   IF ZERO, RECORD FOUND
         CH    R15,=H'15'              IS RETURN CODE 15 ?
         BNE   ERRZR                   IF NOT, GO DISPLAY Z... MESSAGE
         SPACE 1
*--------------------------------------------------------------------*
*        AUTH. NOT NUMERIC OR NOT FOUND. SEND MESSAGE.               *
*--------------------------------------------------------------------*
         SPACE 1
         MVC   ECRAUM(L'MSGAN2),MSGAN2 TELL THAT AUTH NOT FOUND
         B     REQAUT                  ASK OTHER AUT NBR
WRAUTH   MVC   ECRAUM(L'MSGAN1),MSGAN1 AUTHORIZATION NOT NUMERIC
         B     REQAUT                  BRANCH TO ASK AUTHOR.
         EJECT
*--------------------------------------------------------------------*
*        TROUVE L'AUTORISATION DANS LE FICHIER                       *
*--------------------------------------------------------------------*
         SPACE 1
*------- PREPARATION DE L'ECRAN D'OUTPUT
FNDRC    MVI   MSG1,C' '
         MVC   MSG1+1(L'MSG1-1),MSG1
         MVC   MSG2,MSG1
         MVI   SCRNOM,C' '
         MVC   SCRNOM+1(L'SCRNOM-1),SCRNOM
         LA    R2,AREAR                SET ADRESSABILITY OF AUTH DSECT
         USING AUTDSECT,R2
         LA    R3,AREAP                SET ADRESSABILITY OF PROG DSECT
         USING PRGDSECT,R3
         LH    R5,AUTANO               LOAD AUTHORIZATION NUMBER
         LTR   R5,R5                   SET CONDITION CODE
         BNM   RECOK                   IF NOT MINUS, RECORD OK
*------- ICI, LE RECORD TROUVE A ETE SUPPRIME. ON L'A FAIT
*        EN RENDANT LE NUMERO D'AUTHORISATION NEGATIF.
*        CELA VEUT DIRE QU'IL A ETE INVALIDE MAIS NON SUPPRIME ×××
         MVI   SCRSI,C'I'              PUT I IN OUTPUT FIELD
         B     *+L'*+4                 JUMP NEXT INSTRUCTION
RECOK    MVI   SCRSI,C' '              RECORD OK, CLEAR OUTPUT FIELD
         MVC   SCRAUT,WCL4             MOVE AUTH NUMBER FOR DISPLAY
         MVC   SCRFICH,AUTACNO         MOVE FICHE PROGRAM
*------- CONVERT NUMBER OF PROGR. RESPONSABLE
         LH    R5,AUTPMNO              PROGRAMMER RESPONS.
         CVD   R5,DSD                  CONVERT IN DECIMAL
         UNPK  SCRPR,DSD+5(3)          CONVERT IN EBCDIC
         OI    SCRPR+L'SCRPR-1,C'0'    SET LAST ZONING
*------- PRIORITY INCREMENT/DECREMENT
         CLI   AUTPI,0
         BE    *+L'*+10
         MVC   SCRPI,AUTPI
         B     *+L'*+4
         MVI   SCRPI,C'4'
*------- CONVERT DATE D'ENTREE FOR DISPLAY
         XR    R5,R5
         ICM   R5,B'0111',AUTVSD
         CL    R5,=F'99999'            WHICH FORMAT ?
         BH    *+L'*+4                 NEW FORMAT
         AL    R5,=F'1900000'          OLD FORMAT, ADJUST IT
         CVD   R5,DSD                  CONVERT IN PACKED
         UNPK  WCL7,DSD+4(4)           CONVERT IN CHAR YYYYDDD
         OI    WCL7+L'WCL7-1,C'0'      SET LAST ZONING AFTER UNPK
CALLDT  $GFDATE ,,MDY,WCL7
         LTR   R15,R15                 TEST RETURN CODE
         BZ    NORMC
         CLC   WCL7+4(3),=CL3'001'     IS DATE LOWER 001 ?
         BNL   *+L'*+16                IF NOT, DO NEXT TEST
         MVC   MSG1+30(7),WCL7         SAVE INVALID DATE
         MVC   WCL7+4(3),=CL3'001'     FORCE DATE
         B     SETDT
         CLC   WCL7+4(3),=CL3'365'     IS DATE GREATER 365 ?
         BNH   SDERR                   IF NOT, GO TO ERROR
         MVC   MSG1+30(7),WCL7         SAVE INVALID DATE
         MVC   WCL7+4(3),=CL3'365'     FORCE DATE
SETDT    MVC   MSG1(30),=CL30'Note : DATE de DEBUT invalide '
         B     CALLDT
*------- DISPLAY DU RETURN CODE DE GFDATE IF NOT ZERO
SDERR    CVD   R15,DSD
         UNPK  WCL4,DSD+5(3)
         OI    WCL4+L'WCL4-1,C'0'
         MVC   MSGGDTE+30(4),WCL4
         MVC   MSGGDTE+19(5),WCL7      DATE TO TRANSFORM YYDDD
         LA    R1,MSGGDTE
         LM    R2,R3,NGDT
         L     R15,=V(AUT97)
         BALR  R14,R15
         B     CLSZR
NORMC    MVC   SCRDTEI(2),MDY+2        RC OF GFDATE ZERO, MOVE DAYS
         MVI   SCRDTEI+2,C'/'          SEPARATOR
         MVC   SCRDTEI+3(2),MDY        MOVE MONTH
         MVI   SCRDTEI+5,C'/'          SEPARATOR
         MVC   SCRDTEI+6(4),MDY+4      MOVE YEAR
*------- CONVERT DATE DE SORTIE FOR DISPLAY
         XR    R5,R5
         ICM   R5,B'0111',AUTVED
         CL    R5,=F'99999'            WHICH FORMAT ?
         BH    *+L'*+4                 NEW FORMAT
         AL    R5,=F'1900000'          OLD FORMAT, ADJUST IT
         CVD   R5,DSD                  CONVERT IN PACKED
         UNPK  WCL7,DSD+4(4)           CONVERT IN CHAR YYYYDDD
         OI    WCL7+L'WCL7-1,C'0'      SET LAST ZONING AFTER UNPK
CALLGD  $GFDATE ,,MDY,WCL7
         LTR   R15,R15                 TEST RETURN CODE
         BZ    NORMR
         CLC   WCL7+4(3),=CL3'001'     IS DATE LOWER 001 ?
         BNL   *+L'*+16                IF NOT, DO NEXT TEST
         MVC   MSG2+30(7),WCL7         SAVE INVALID DATE
         MVC   WCL7+4(3),=CL3'001'     FORCE DATE
         B     SETGD
         CLC   WCL7+4(3),=CL3'365'     IS DATE GREATER 365 ?
         BNH   SDERR                   IF NOT, GO TO ERROR
         MVC   MSG2+30(7),WCL7         SAVE INVALID DATE
         MVC   WCL7+4(3),=CL3'365'     FORCE DATE
SETGD    MVC   MSG2(30),=CL30'Note : DATE de FIN invalide '
         B     CALLGD
NORMR    MVC   SCRDTEO(2),MDY+2        RC OF GFDATE ZERO, MOVE DAYS
         MVI   SCRDTEO+2,C'/'          SEPARATOR
         MVC   SCRDTEO+3(2),MDY        MOVE MONTH
         MVI   SCRDTEO+5,C'/'          SEPARATOR
         MVC   SCRDTEO+6(4),MDY+4      MOVE YEAR
*------- CONVERT NUMBERS OF PROGR. FOR THIS AUTHORIZATION.
         LA    R5,AUTPNO               ADDRESS OF BEGINNING OF LIST
         LA    R6,NPL                  NBR OF PROGRAMMER IN LIST
         LA    R8,NUM1                 PROGRAMMER NBR IN CHAR
         LA    R9,NAME1                PROGRAMMER' S NAME CORRESPONDING
         LA    R4,ASTER1               CORRESPONDING I IF PGM NBR < 0
*------- IF PGM NBR < 0 PUT A 'I' IN CORRESPONDING FIELD
LOOP     LH    R7,0(R5)                LOAD PROGRAMMER NUMBER
         LTR   R7,R7                   TEST SIGN
         BM    INVLD                   IF NEGATIF, HAS BEEN SUPPRESSED
         BZ    INCRM                   IF ZERO, JUMP THIS FIELD
         LR    R14,R7
         AH    R14,=Y(NAUTNO+1)        ADD NO. OF AUT. AT KEY
         STH   R14,ARGUMPRG            STORE KEY IN ARGUM.PROGRAM.
        CALL   ZREAD,(RETCD,ARGUMPRG,AREAP),VL  READ FILE
         LTR   R15,R15                 TEST RETURN CODE
         BZ    TSTINV                  IF ZERO, FOUND PROG'S NAME
         CH    R15,=H'15'              IS RETURN CODE 15 ?
         BNE   ERRZR                   IF NOT, GO DISPLAY Z... MESSAGE
         MVC   0(25,R9),MSGERR1        IF NOT, MSG AS NAME
         B     DOCNV                   INSTEAD OF NAME
TSTINV   LH    R15,PRGPNO              LOAD PROGRAMMER NUMBER
         LTR   R15,R15                 TEST SIGN
         BP    OKPRGNM                 IF POSITIVE, GET PROG'S NAME
*------- CAS OU LE PROGRAMMER NUMBER EST NEGATIF.
*        CELA VEUT DIRE QU'IL A ETE SUPPRIME.
*        ON MET 'I' DANS LA CASE CORRESPONDANTE DE L'AUTORISATION.
         MVC   0(25,R9),MSGERR3        MSG AS NAME
         B     SETINV
INVLD    LPR   R7,R7                   CONVERT IN POSITIVE
         MVC   0(25,R9),MSGERR2        MSG AS NAME
SETINV   MVI   0(R4),C'I'              BECAUSE WAS NEGATIVE
         B     DOCNV
OKPRGNM  MVC   0(25,R9),PRGPNME        MOVE NAME
*------- JUMP TO NEXT RECORD IN SCREEN
DOCNV    CVD   R7,DSD                  CONVERT IN PACKED
         UNPK  0(4,R8),DSD+5(3)        CONVERT IN CHAR IN SCREEN
         OI    3(R8),C'0'              SET LAST ZONING AFTER UNPK
         LA    R9,DX(R9)               JUMP TO NEXTS
         LA    R8,DX(R8)
         LA    R4,DX(R4)
INCRM    LA    R5,L'AUTPNO(R5)         JUMP TO NEXT PROGRAMMER
         BCT   R6,LOOP                 LOOP N... TIMES
         EJECT
*--------------------------------------------------------------------*
*        RECHERCHE DU NOM DU PROG. RESPONSABLE DE L'AUTORISATION.    *
*--------------------------------------------------------------------*
*    NB. ALL RECORDS OF PROGRAMMER HAVE A KEY .GE. NO. OF AUT. + 1
*        SO YOU MUST ADD NO.OF AUT. AT THE NBR YOU HAVE FOUND
*        IN RECORD OF AUTHORIZATION TO GET THE RIGHT ADDRESS.
         SPACE 1
         LH    R5,AUTPMNO              LOAD NUMBER OF PROG RESP.
         AH    R5,=Y(NAUTNO+1)         ADD NO. OF AUT. AT KEY
         STH   R5,ARGUMPRG             STORE KEY IN ARGUMENT
        CALL   ZREAD,(RETCD,ARGUMPRG,AREAP),VL  READ FILE
         LTR   R15,R15                 TEST RETURN CODE
         BZ    TSTPGRES                IF ZERO, FOUND PROG. RESP
         CH    R15,=H'15'              IS RETURN CODE 15 ?
         BNE   ERRZR                   IF NOT, GO DISPLAY Z... MESSAGE
         MVC   SCRNOM(L'MSGERR1),MSGERR1
         B     DSPLAY
TSTPGRES LH    R15,PRGPNO              LOAD PROGRAMMER NUMBER
         LTR   R15,R15                 TEST SIGN
         BP    OKPRGRES                IF POSITIVE, GET PROG'S NAME
*------- CAS OU LE PROGRAMMER NUMBER EST NEGATIF.
*        CELA VEUT DIRE QU'IL A ETE SUPPRIME.
         MVC   SCRNOM(L'MSGERR3),MSGERR3
         B     DSPLAY
*------- ICI, NOUS AVONS LE RECORD DU PROGRAMMEUR RESPONSABLE
OKPRGRES MVC   SCRNOM,PRGPNME          MOVE RESP. NAME FOR DISPLAY
DSPLAY   LA    R1,PECRAN               DISPLAY SCREEN
         L     R15,=V(AUT99)
         BALR  R14,R15
         LTR   R15,R15                 NORMAL COMPLETION ?
         BNZ   FININER                 NO, END CP (ONLY 4)
         MVC   WCL4(4),=CL25' '
         L     R15,=V(AUT99R)          GET RESPONSE
         BALR  R14,R15
         LTR   R15,R15                 ONLY END OF TEXT ?
         BZ    DEMINIT                 IF YES, ESCAPE
         LTR   R1,R1                   NO TEXT ?
         BZ    DEMINIT                 YES
         BCT   R1,*+L'*+6
         MVC   WCL4(*-*),3(R15)
         EX    R1,*-6
         CLC   WCL4(4),=CL25' '        IS RESPONSE = BLANK ?
         BE    DEMINIT                 YES, ESCAPE
         BAL   R14,CLRVECT
         B     TESTAUT
         SPACE 1
         DROP  R2,R3
         EJECT
*--------------------------------------------------------------------*
*        ERREUR AU MOMENT DE L'ALLOCATION DU FICHIER D'ACCOUNTING.   *
*--------------------------------------------------------------------*
         SPACE 1
ERALL    STM   R15,R0,DSD
        TPUT   ERROR1,L'ERROR1
         UNPK  ERROR1C+8(9),DSD(5)
         TR    ERROR1C+8(8),TRTAB-X'F0'
         MVI   ERROR1C+16,C' '
         UNPK  ERROR1C+22(9),DSD+4(5)
         TR    ERROR1C+22(8),TRTAB-X'F0'
         MVI   ERROR1C+30,C' '
        TPUT   ERROR1C,L'ERROR1C
         B     LEAVE
         SPACE 1
*--------------------------------------------------------------------*
*        ERREUR A L'UTILISATION DU FICHIER D'ACCOUNTING              *
*--------------------------------------------------------------------*
         SPACE 1
ERRZOC   LR    R0,R15
         XR    R1,R1
        CALL   ZYDIAG
         LA    R8,1(R15)
         XR    R9,R9
         BCTR  R15,0
         IC    R9,0(R15)
         BCTR  R9,0
        TPUT   (R8),(R9)
         B     FREACC
         SPACE 1
ERRZR    LR    R0,R15
         XR    R1,R1
         LM    R2,R3,NZRD
         L     R15,=V(AUT97)
         BALR  R14,R15
         B     CLSZR
         EJECT
*--------------------------------------------------------------------*
*        FIN DU TRAVAIL - SORTIE.                                    *
*--------------------------------------------------------------------*
         SPACE 1
FININER  XR    R1,R1                   EXIT FULLSCREEN
         L     R15,=V(AUT99)
         BALR  R14,R15
CLSZR   CALL   ZCLOSE,(RETCD),VL       CLOSE FILE UNDER SYSACC DD
         LTR   R15,R15                 IS RETURN CODE 0?
         BNZ   ERRZOC                  IF NOT, ERROR AT CLOSE
FREACC   XC    DYNDSN,DYNDSN
        $DYNALL DYNLIST                DYNAMIC DE-ALLOC OF SYSACC
LEAVE   $XRET  CC=0
         SPACE 1
*--------------------------------------------------------------------*
*        INIT SCREEN WITH BLANKS (ROUTINE - LINK = R14)              *
*--------------------------------------------------------------------*
         SPACE 1
CLRVECT  LA    R4,NPL
         LA    R6,NUM1
         LA    R7,ASTER1
         LA    R8,NAME1
LOOPCLR  MVC   0(4,R6),=CL25' '
         MVI   0(R7),C' '
         MVC   0(25,R8),=CL25' '
         LA    R6,DX(R6)
         LA    R7,DX(R7)
         LA    R8,DX(R8)
         BCT   R4,LOOPCLR
         BR    R14
         EJECT
*--------------------------------------------------------------------*
*        VARIABLES DE TRAVAIL                                        *
*--------------------------------------------------------------------*
         SPACE 1
DSD      DC    D'0'
PECRIN   DC    A(LECRIF,ECRIN)
PECRAU   DC    A(LECRAU,ECRAU)
PECRAN   DC    A(LECRAN,ECRAN)
RETCD    DC    F'0'          RETURN CODE FROM Z... ROUTINES
XOPT     DC    C'ONLY'       OPTION FOR Z... ROUTINES
NZRD     DC    0F'0',CL8'ZREAD'
NGDT     DC    0F'0',CL8'GFDATE'
AREAR    DC    (AUTLGTH)X'0' WORKA FOR READ FILE. RECORD AUTHOR.
AREAP    DC    (PRGLGTH)X'0' WORKA FOR READ FILE. RECORD PROGRAMMER
ARGUMAUT DC    H'0'          AUTORIZATION NUMBER TO CHAIN IN FILE
ARGUMPRG DC    H'0'          PROGRAMMER NUMBER TO CHAIN IN FILE
MDY      DC    CL8' '        MONTH, DAY, YEAR FROM GFDATE
WCL4     DC    CL4' '        WORK FIELD CHAR LENGTH 4
WCL7     DC    CL7' '        WORK FIELD CHAR LENGTH 7
INFO     DC    CL15' '
RESPONSE DC    C' '
         EJECT
*--------------------------------------------------------------------*
*        DYNAMIC ALLOCATION PARAMETER LIST                           *
*--------------------------------------------------------------------*
         SPACE 1
         DS    0F
DYNLIST  DC    CL8'SYSACC'
DYNDSN   DC    XL44'0'
         DC    CL8' '        MEMBER NAME
         DC    CL8' '        PASSWORD
         DC    CL8'SHR'      STATUS
         DC    CL256' '      FILLER
         DC    CL88' '       FILLER
         SPACE 1
*--------------------------------------------------------------------*
*        MESSAGES D'ERREURS                                          *
*--------------------------------------------------------------------*
         SPACE 1
ERROR1   DC    C'*** ACCOUNT file ALLOC error *** '
ERROR1C  DC    C'    R15=........ - R0=........ - AUT10 '
         DC    AL1(L'MSGGDTE)
MSGGDTE  DC    C' GFDATE error (Day=.......,RC=....)'
MSGINV   DC    C'Unknown option selected :   ???'
MSGAN1   DC    C'Authorization NOT Numeric or NOT 4 digits.'
MSGAN2   DC    C'Authorization NOT FOUND in File.'
MSGERR1  DC    CL25'Progr. Number NOT FOUND'
MSGERR2  DC    CL25'Progr. Number Invalidated'
MSGERR3  DC    CL25'Progr. Nr.REC Invalidated'
TRTAB    DC    C'0123456789ABCDEF'
         EJECT
*--------------------------------------------------------------------*
*        ECRANS D'OUTPUT                                             *
*--------------------------------------------------------------------*
         SPACE 1
ECRIN   $FS    CC=W,WCC=(AL,KBR,RMDT),SBA=(24,80),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L        SET BUFFER/CLEAR.
        $FS    SBA=(1,1),SF=(PROT),MF=L
        $FS    SBA=(1,25),SF=(PROT,INT),MF=L
        $FS    TEXT='AUTHORIZATION and/or PROGRAMMER',MF=L
        $FS    SBA=(2,25),SF=(PROT,INT),MF=L
        $FS    TEXT='   D   I   S   P   L   A   Y   ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(3,25),SF=(PROT,INT),MF=L
        $FS    TEXT='===============================',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,10),SF=(PROT),MF=L
        $FS    TEXT='You can display information for a Userid',MF=L
        $FS    SBA=(6,39),SF=(PROT),MF=L
        $FS    TEXT='or a Programmer Number',MF=L
        $FS    SBA=(7,38),SF=(PROT),MF=L
        $FS    TEXT='or an Authorization Number',MF=L
        $FS    SBA=(9,11),TEXT='Enter U, P or A',MF=L
        $FS    SF=(PROT,INT),TEXT='===>',MF=L
        $FS    SF=(INT),TEXT=' ',MF=L
        $FS    SF=(PROT),TEXT='<',MF=L
        $FS    SBA=(10,16),SF=(PROT),TEXT='or you may Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='ENTER',MF=L
        $FS    SF=(PROT),TEXT='or',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-3',MF=L
        $FS    SF=(PROT),TEXT='to exit (emergency)',MF=L
        $FS    SBA=(11,10),SF=(PROT),TEXT='Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-1',MF=L
        $FS    SF=(PROT),TEXT='to view ',MF=L
        $FS    TEXT='Authorizations/Programmers ',MF=L
        $FS    TEXT='MANAGEMENT Rules Summary',MF=L
        $FS    SBA=(12,10),SF=(PROT),TEXT='Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-2',MF=L
        $FS    SF=(PROT),TEXT='to view ',MF=L
        $FS    TEXT='the current Accounting data-set status',MF=L
        $FS    SBA=(14,1),SF=(PROT,INT),MF=L
ECRINM  $FS    TEXT=(' ',78),MF=L
        $FS    SF=(PROT),MF=L
LECRIN   EQU   (*-ECRIN)+LPTIC
OVRR    $FS    SBA=(20,1),SF=(PROT,INT),RA=(20,80,-),MF=L
        $FS    SBA=(21,2),TEXT='Remark :',MF=L
        $FS    SF=(PROT),TEXT='if desired, you can also enter ',MF=L
        $FS    TEXT='directly in this process typing',MF=L
        $FS    SBA=(22,11),TEXT='the TSO-command',MF=L
        $FS    SF=(PROT,INT),TEXT='AUT10',MF=L
        $FS    SF=(PROT),TEXT='at any time in your session.',MF=L
        $FS    SBA=(23,1),SF=(PROT,INT),RA=(23,80,-),MF=L
        PRINT  OFF
        $FS    SBA=(24,1),SF=(PROT,INT),TEXT='WELCOME',MF=L
        $FS    SF=(PROT),MF=L
        $FS    TEXT='to this up-grade CP implemented by ',MF=L
        $FS    TEXT='MOINIL P.A. ... your wizard ×',MF=L
        PRINT  ON
PTIC    $FS    SBA=(1,1),SF=(PT,IC),MF=L
LPTIC    EQU   *-PTIC
LECRIF   EQU   *-ECRIN
         SPACE 1
ECRAU   $FS    CC=W,WCC=(KBR,RMDT),SBA=(24,80),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L        SET BUFFER/CLEAR.
        $FS    SBA=(1,1),SF=(PROT),MF=L
        $FS    SBA=(1,25),SF=(PROT,INT),MF=L
        $FS    TEXT='AUTHORIZATION   D I S P L A Y',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(2,25),SF=(PROT,INT),MF=L
        $FS    TEXT='=============================',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,10),SF=(PROT),MF=L
        $FS    TEXT='Enter Authorization Number (4 numerics)',MF=L
        $FS    SF=(PROT,INT),TEXT='===>',MF=L
        $FS    SF=(INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),TEXT='<',MF=L
        $FS    SBA=(6,10),SF=(PROT),TEXT='or you may Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='ENTER',MF=L
        $FS    SF=(PROT),TEXT='to escape or',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-3',MF=L
        $FS    SF=(PROT),TEXT='to exit (emergency)',MF=L
        $FS    SBA=(23,1),SF=(PROT,INT),MF=L
ECRAUM  $FS    TEXT=(' ',78),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(1,1),SF=(PT,IC),MF=L
LECRAU   EQU   *-ECRAU
         SPACE 1
ECRAN   $FS    CC=W,WCC=(KBR,RMDT),SBA=(24,80),MF=L
        $FS    SBA=(1,1),RA=(1,1,00),MF=L        SET BUFFER/CLEAR.
        $FS    SBA=(1,1),SF=(PROT),MF=L
        $FS    SBA=(1,25),SF=(PROT,INT),MF=L
        $FS    TEXT='AUTHORIZATION   D I S P L A Y',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(2,25),SF=(PROT,INT),MF=L
        $FS    TEXT='=============================',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(3,1),SF=(PROT),MF=L
        $FS    TEXT='Authorization is invalidated if I --->',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRSI   $FS    TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(4,1),SF=(PROT),TEXT='Authorization Number :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRAUT  $FS    TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(4,41),SF=(PROT),TEXT='Fiche Programme :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRFICH $FS    TEXT=(' ',10),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,1),SF=(PROT),TEXT='DATE start :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRDTEI $FS    TEXT='  /  /    ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,25),SF=(PROT),MF=L
        $FS    TEXT='Responsible Programmer :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRPR   $FS    TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(5,60),SF=(PROT),MF=L
        $FS    TEXT='Priority level :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRPI   $FS    TEXT=' ',MF=L
        $FS    SBA=(6,6),SF=(PROT),TEXT='end   :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRDTEO $FS    TEXT='  /  /    ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(6,25),SF=(PROT),TEXT='Resp. Name :',MF=L
        $FS    SF=(PROT,INT),MF=L
SCRNOM  $FS    TEXT=(' ',40),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(7,1),SF=(PROT,INT),MF=L
MSG1    $FS    TEXT=(' ',37),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(7,41),SF=(PROT,INT),MF=L
MSG2    $FS    TEXT=(' ',37),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(8,1),SF=(PROT),MF=L
        $FS    TEXT='Programmers for this Authorization :',MF=L
        $FS    SBA=(9,2),SF=(PROT),MF=L
        $FS    TEXT='--->  I=invalidated',MF=L
        $FS    SBA=(9,42),SF=(PROT),MF=L
        $FS    TEXT='--->  I=Invalidated',MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 01 -*
SX       EQU   *
        $FS    SBA=(10,2),SF=(PROT,INT),MF=L
NUM1    $FS    TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),MF=L
ASTER1  $FS    TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),MF=L
NAME1   $FS    TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
DX       EQU   *-SX
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 02 -*
        $FS    SBA=(10,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 03 -*
        $FS    SBA=(11,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 04 -*
        $FS    SBA=(11,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 05 -*
        $FS    SBA=(12,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 06 -*
        $FS    SBA=(12,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 07 -*
        $FS    SBA=(13,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 08 -*
        $FS    SBA=(13,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 09 -*
        $FS    SBA=(14,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 10 -*
        $FS    SBA=(14,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 11 -*
        $FS    SBA=(15,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 12 -*
        $FS    SBA=(15,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 13 -*
        $FS    SBA=(16,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 14 -*
        $FS    SBA=(16,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 15 -*
        $FS    SBA=(17,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 16 -*
        $FS    SBA=(17,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 17 -*
        $FS    SBA=(18,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 18 -*
        $FS    SBA=(18,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 19 -*
        $FS    SBA=(19,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 20 -*
        $FS    SBA=(19,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 21 -*
        $FS    SBA=(20,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 22 -*
        $FS    SBA=(20,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 23 -*
        $FS    SBA=(21,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 24 -*
        $FS    SBA=(21,42),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 25 -*
        $FS    SBA=(22,2),SF=(PROT,INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT,INT),TEXT=' ',MF=L
        $FS    SF=(PROT),MF=L
        $FS    SF=(PROT),TEXT=(' ',25),MF=L
        $FS    SF=(PROT),MF=L
        $FS    SBA=(23,1),SF=(PROT),MF=L
        $FS    TEXT='Enter another Authorization Number ',MF=L
        $FS    TEXT='(4 numerics)',MF=L
        $FS    SF=(PROT,INT),TEXT='===>',MF=L
        $FS    SF=(INT),TEXT=(' ',4),MF=L
        $FS    SF=(PROT),TEXT='<',MF=L
        $FS    SBA=(24,1),SF=(PROT),TEXT='or you may Hit',MF=L
        $FS    SF=(PROT,INT),TEXT='ENTER',MF=L
        $FS    SF=(PROT),TEXT='to escape or',MF=L
        $FS    SF=(PROT,INT),TEXT='PF-3',MF=L
        $FS    SF=(PROT),TEXT='to exit (emergency)',MF=L
        $FS    SBA=(1,1),SF=(PT,IC),MF=L
LECRAN   EQU   *-ECRAN
         EJECT
*--------------------------------------------------------------------*
*        LITERAL POOL                                                *
*--------------------------------------------------------------------*
         SPACE 1
        LTORG
         EJECT
*--------------------------------------------------------------------*
*        DUMMY SECTIONS                                              *
*--------------------------------------------------------------------*
         SPACE 1
         PRINT GEN
        $AIRD  SEC=YES,R=NO
         SPACE 2
         END
