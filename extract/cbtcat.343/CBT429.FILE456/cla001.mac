A001     TITLE 'CLEAN-UP - INITIALIZATION (A001).'
        PRINT  OFF
        COPY   CLMAC
        PRINT  ON
A001    @XS
*        ANALYZE EXEC PARM. FIELD.
         SPACE 1
         XR    R15,R15
         L     R1,0(R1)            PARM. FIELD ADDRESS
         LH    R2,0(R1)            PARM. FIELD LENGTH
         LTR   R2,R2
         BNP   PA99
         LA    R3,1(R1,R2)         END OF PARM. FIELD TEXT
         LA    R2,2(R1)            START OF PARM. FIELD TEXT
PA0      LA    R0,4(R2)
         CLR   R0,R3
         BH    PA1
         CLC   0(5,R2),=CL5'CHECK'
         BNE   PA1
         LR    R2,R0
         B     PA3
PA1      LA    R0,3(R2)
         CLR   R0,R3
         BH    PA2
         CLC   0(4,R2),=CL4'TEST'
         BNE   PA2
         LR    R2,R0
         B     PA4
PA2      CLI   0(R2),C'T'
         BE    PA4
         CLI   0(R2),C'C'
         BNE   PA90
PA3      OI    WHAT,WHCHECK        SET CHECK RUN
         B     PA5
PA4      OI    RUNIND,RUTEST       SET TEST RUN
PA5      OI    RUNOPT,RUNOHT       SET HEADER-TRAILER PAGE SUPPRESS
         LA    R2,1(R2)
         CLR   R2,R3
         BH    PA99
PA90     CLI   0(R2),C','
         BNE   ERR37
         LA    R2,1(R2)
         CLR   R2,R3
         BNH   PA0
         SPACE 1
*        SET RUNNING TIME AND DATE.
         SPACE 1
PA99    $GDATE TITDAT,THMS,TODAYA,MF=(E,STWORK)   GET DATE AND TIME
         LTR   R15,R15
         BNZ   ERR1
         MVC   TITTIM(2),THMS
         MVC   TITTIM+3(2),THMS+2
         MVC   TITTIM+6(2),THMS+4
         LA    R1,TITDAT+L'TITDAT-1
         CLI   0(R1),C' '
         BNE   *+L'*+4
         BCT   R1,*-8
         MVI   1(R1),C'.'
        $SDATE TODAYA,SYDD,MF=(E,STWORK) GET THE SERIAL DATE (YYDDD)
         LTR   R15,R15
         BNZ   ERR1
         MVC   TODAYD(2),TODAYA+4  BUILD YYMMDD
         MVC   TODAYD+2(4),TODAYA
         MVC   TODAYA(2),TODAYD+4  BUILD DDMMYY
         MVC   TODAYA+2(2),TODAYD+2
         PACK  WORKD,SYDD          COMPUTE TODAY (SERIAL DAY - YDD)
         XR    R0,R0
         CVB   R1,WORKD            CONVERT TO BINARY
         D     R0,=F'1000'         GET 1000 TO FACTOR YEAR FROM DAY
         STC   R1,TYDD+1
         STH   R0,TYDD+2
         SPACE 1
*        SAY CLEAN-UP STARTED.
         SPACE 1
         LA    R2,ATIOT
        EXTRACT (R2),'S',FIELDS=(TIOT)
         L     R2,ATIOT
         USING TIODSECT,R2
         MVC   WORKD(L'TIOCNJOB),TIOCNJOB    GET JOB NAME
         XR    R1,R1
SC0      CLC   TIOELNGH(4),=XL4'0'
         BE    SJ0
         CLC   TIOEDDNM,DDSNAP     IS IT 'SYSSNAP' DD-CARD?
         BE    SC2                 YES
         CLC   TIOEDDNM,=CL8'SYSUDUMP'  IS IT 'SYSUDUMP' DD-CARD?
         BE    SC1                 YES
         CLC   TIOEDDNM,=CL8'SYSABEND'  IS IT 'SYSABEND' DD-CARD?
         BNE   SC10                NO
SC1      OI    RUSREQ,RUSABND      ALLOWS DUMP
         B     SC10
SC2      NI    SNAPS+1,OFF         ALLOWS SNAPS
SC10     IC    R1,TIOELNGH
         AR    R2,R1
         B     SC0
         DROP  R2
SJ0      LA    R0,WORKD
         LA    R1,WORKD+7
SJ1      CLI   0(R1),C' '
         BNE   SJ2
         BCTR  R1,0
         CLR   R1,R0
         BNL   SJ1
         B     ERR32
SJMV     MVC   0(*-*,R14),WORKD
SJ2      SR    R1,R0
         LA    R15,7
         SR    R15,R1
         SRL   R15,1
         LA    R14,CUST1(R15)
         EX    R1,SJMV              SET JOB NAME (CENTERED)
         STC   R1,JNMEL
         ST    R14,JNMEA
         CLC   CUST1,=CL8' '
         BE    SJ20
         TM    RUNOPT,RUNOHT        HEADER SUPPRESS?
         BO    SJ20                 YES
        @OUT   SPACE
        $EDITH MF=(E,CU1PLS)
         LTR   R15,R15              TEST RETURN CODE
         BNZ   ERR45
        $EDITH MF=(E,CU2PLS)
         LTR   R15,R15              TEST RETURN CODE
         BNZ   ERR45
         MVC   CLINE,=PL2'+60'      FORCE NEW PAGE
         SPACE 1
*        DISPLAY RUNNING CPU.
         SPACE 1
SJ20     L     R1,CVTPTR            GET CVT ADDRESS
         USING CVT,R1
         L     R2,CVTSMCA           ADDRESS OF SMCA
         DROP  R1
         LTR   R2,R2
         BZ    SJ21
         USING SMCABASE,R2
         MVC   VCPUS(L'VCPUS),SMCASID    SET SID
         DROP  R2
         B     SJ22
SJ21     MVC   VCPUD(VCPUL),VCPUN+L'VCPUN-1
SJ22     LA    R1,0(R1)
         SL    R1,=F'6'
         UNPK  VCPUN,0(3,R1)        SET CPU MODEL
         TR    VCPUN(L'VCPUN-1),TRTAB-C'0'
         MVI   VCPUN+L'VCPUN-1,C' '
        @OUT   VCPUM
        @OUT   VCPUU
         SPACE 1
*        VERIFY RACF ACTIVE AND USER DEFINED TO RACF.
         SPACE 1
        RACSTAT ,                   TEST FOR RACF ACTIVE
         LTR   R15,R15              ACTIVE?
         BNZ   SJ32                 NO
         L     R1,CVTPTR            GET CVT ADDRESS
         USING CVT,R1
         L     R2,CVTTCBP           GET ASCB ADDRESS
         DROP  R1
         L     R2,12(,R2)
         USING ASCB,R2
         L     R2,ASCBASXB          GET ASXB ADDRESS
         DROP  R2
         USING ASXB,R2
         L     R2,ASXBSENV          GET ACEE ADDRESS
         DROP  R2
         LA    R2,0(,R2)
         LTR   R2,R2                IS ADDRESS THERE?
         BZ    SJ31                 NOT RACF USER
         USING ACEE,R2
         CLC   ACEEACEE,=CL4'ACEE'  VALID ACRONYM?
         BNE   SJ30                 NO
         TM    ACEEFLG1,ACEERACF    RACF DEFINED USER?
         BO    SJ33                 YES
        @OUT   VRMND
         B     SJ50
SJ30    @OUT   VRMNV
         B     SJ50
SJ31    @OUT   VRMNU
         B     SJ50
SJ32    @OUT   VRMNA
         OI    STATUS,STBRACF       SET BYPASS RACF
         B     SJ50
SJMO     MVC   USID(*-*),ACEEUSRI   << EXECUTED >>
SJ33     XR    R1,R1
         IC    R1,ACEEUSRL          GET USERID LENGTH
         BCTR  R1,0
         EX    R1,SJMO              SET CURRENT USERID
         DROP  R2
         SPACE 1
SJ50    @X     B001                GET OPTIONS REQUESTS
         SPACE 1
*        GET STORAGE SPACE AND BUILD TABLES BOUNDARIES.
         SPACE 1
         L     R2,TOTSPCE
         LA    R3,TBEVOL
        GETMAIN EC,LV=(R2),A=(R3)
         LTR   R15,R15             STORAGE AVAILABLE?
         BNZ   ERR39               NO
         L     R1,TBEVOL           GET EL. VOL. TABLE ADDRESS
         MVI   0(R1),FMON          SET FINAL MARKER.
         A     R1,TBEVOLT
         ST    R1,TBEVOLE
         ST    R1,TBCVOL           SET CAT. VOL. TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBCVOLT
         ST    R1,TBCVOLE
         ST    R1,TBNVOL           SET N-CAT. VOL. TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBNVOLT
         ST    R1,TBNVOLE
         ST    R1,TBGVOL           SET CVOL PTR. TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBGVOLT
         ST    R1,TBGVOLE
         ST    R1,TBDVOL           SET NOT-D. VOL. TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBDVOLT
         ST    R1,TBDVOLE
         ST    R1,TBDDN            SET DDNAME'S TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBDDNT
         ST    R1,TBDDNE
         ST    R1,DALLS            SET DYNAMIC ALLOCATION AREAS
         LR    R2,R1
         L     R3,DALLT
         AR    R1,R3
         ST    R1,TBNIX            SET NULL INDEXES TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBNIXT
         ST    R1,TBNIXE
         ST    R1,TBSKP            SET SKIP NAMES TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBSKPT
         ST    R1,TBSKPE
         ST    R1,DSTAB            SET DSNAME'S TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,DSTABT
         ST    R1,TBBYR            SET BYPASS RACF NAMES TABLE ADDRESS
         MVI   0(R1),FMON          SET FINAL MARKER.
         A     R1,TBBYRT
         ST    R1,TBBYRE
         ST    R1,TBAVOL           SET ACC. VOL. TABLE ADDRESS
         MVI   0(R1),FMON          SET FINAL MARKER.
         A     R1,TBAVOLT
         ST    R1,TBAVOLE
         ST    R1,TBRGDS           SET HLQ NAMES TABLE ADDRESS
         MVI   0(R1),FMOFF         SET FINAL MARKER.
         A     R1,TBRGDST
         ST    R1,TBRGDSE
         ST    R1,TBVRGN           SET GENERIC NAMES TABLE ADDRESS
         MVI   0(R1),FMON          SET FINAL MARKER.
         A     R1,TBVRGNT
         ST    R1,TBVRGNE
         ST    R1,WK1A             SET 1ST RACF WORK AREA ADDRESS
         A     R1,WK1T
         ST    R1,WK2A             SET 1ST RACF WORK AREA ADDRESS
         LA    R4,*
         XR    R5,R5
         ICM   R5,B'1000',=C' '
         MVCL  R2,R4               BLANKS DYN. ALL. AREAS
         L     R2,WK1A             START OF RACF WORK AREAS
         L     R3,WK1T
         A     R3,WK2T
         XR    R5,R5
         MVCL  R2,R4               ZEROES WORK AREAS
         USING WKDS,R1
         L     R1,WK1A             INITIALIZE RACF WORK AREAS
         MVC   WORK,WK1T
         L     R1,WK2A
         MVC   WORK,WK2T
         DROP  R1
         LA    R1,DALLN-1          SET ALT. DYN. ALL. AREAS ADDRESSES.
         L     R2,DALLS
         LA    R3,DALLS+L'DALLS
         A     R2,=A(DYNLGTH)
         ST    R2,0(R3)
         LA    R3,L'DALLS(R3)
         BCT   R1,*-12
         TM    WHAT,WHCHECK        CHECK RUN?
         BZ    SJ51                NO
         MVC   TITTEST,=CL10'-- SCAN --'     INDICATE IT
         B     SJ52
SJ51     TM    RUNIND,RUTEST       TEST MODE?
         BZ    SJ52                NO
         MVC   TITTEST,=CL10'-- TEST --'     INDICATE IT
SJ52     LA    R1,TBEVOL
         ST    R1,STWAL
        @SNAPS SF,STWAL,TWA
        @XE
         EJECT
STWORK   DC    3F'0'
STWAL    DC    A(*-*)
         DC    XL1'80',AL3(TOTSL)
         SPACE 1
         DC    AL1(VCPUML)
VCPUM    DC    C'0RUNNING CPU MODEL : '
VCPUN    DC    CL5' '
VCPUD    DC    C'(SID : '
VCPUS    DC    CL4' ',C')'
VCPUL    EQU   *-VCPUD
VCPUML   EQU   *-VCPUM
         DC    AL1(L'VCPUU)
VCPUU    DC    C' -------------------'
         DC    AL1(L'VRMND)
VRMND    DC    C' ===== USER IS NOT RACF DEFINED ====='
         DC    AL1(L'VRMNV)
VRMNV    DC    C' ===== INVALID ACRONYM IN ACEE ====='
         DC    AL1(L'VRMNU)
VRMNU    DC    C' ===== NOT RACF USER (NO ACEE) ====='
         DC    AL1(L'VRMNA)
VRMNA    DC    C' ----> ALL RACF PROCESSES BYPASSED : RACF INACTIVE.'
         EJECT
        @SERV
         SPACE 1
        @COMM
         SPACE 1
        CVT    DSECT=YES,LIST=YES
        IHAASCB
        IHAASXB
        IEESMCA
TIODSECT DSECT
        IEFTIOT1
         EJECT
        PRINT  GEN
        #WKDS
         SPACE 2
         END
