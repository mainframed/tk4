MXIT     TITLE 'IEAVMXIT - COMMUNICATIONS TASK USER EXIT.'
        PRINT OFF
         MACRO           GENERATE TABLE MESSAGES ENTRIES.
&NAME   @GM    &MID,&AT=,&RPL=,&CMD=
         LCLC  &L,&S,&T
         AIF   (N'&SYSLIST EQ 0).MISS
         AIF   (T'&MID EQ 'O').MISS
         AIF   (N'&SYSLIST NE 1).TOO
&NAME    DC    CL8'&MID'
&T       SETC  'SUPRQ'
         AIF   ('&RPL' EQ '').A
&T       SETC  '&T'.'+RPLRQ'
.A       AIF   ('&CMD' EQ '').B
&T       SETC  '&T'.'+CMDRQ'
.B       AIF   ('&AT' EQ '').C
&T       SETC  '&T'.'+SPPRQ'
.C       DC    AL1(&T)
         AIF   ('&AT' EQ '').D
         DC    AL2(&AT-&SYSECT)
.D       AIF   ('&RPL' EQ '').F
&L       SETC  'JRC'.'&SYSNDX'.'R'
&S       SETC  '&RPL'
         AIF   ('&S'(1,1) EQ '''').E
         AIF   (K'&S GT 100).ERRR
         DC    AL1(L'&L-1)
&L       DC    C'&S'
         AGO   .F
.E       AIF   (K'&S GT 102).ERRR
         DC    AL1(L'&L-1)
&L       DC    C&S
.F       AIF   ('&CMD' EQ '').G
&L       SETC  'JRC'.'&SYSNDX'.'C'
&S       SETC  '&CMD'
         AIF   ('&S'(1,1) EQ '''').H
         AIF   (K'&S GT 100).ERRC
         DC    AL1(L'&L-1)
&L       DC    C'&S'
.G       AGO   .END
.H       AIF   (K'&S GT 102).ERRC
         DC    AL1(L'&L-1)
&L       DC    C&S
         AGO   .END
.MISS    MNOTE 8,' MID POSITIONAL OPERAND MISSING ******************* '
         AGO   .END
.TOO     MNOTE 8,' TOO MANY POSITIONAL OPERANDS ********************* '
         AGO   .END
.ERRR    MNOTE 8,' RPL KEYWORD OPERAND TOO LONG ********************* '
         AGO   .END
.ERRC    MNOTE 8,' CMD KEYWORD OPERAND TOO LONG ********************* '
.END     SPACE 1
         MEND
         MACRO           GENERATE TABLE MESSAGES ENTRIES.
&NAME   @GA    &MID,&AT=,&NRP=,&ARP=
         LCLC  &L,&S
         AIF   (N'&SYSLIST EQ 0).MISS
         AIF   (T'&MID EQ 'O').MISS
         AIF   (N'&SYSLIST NE 1).TOO
         AIF   ('&AT' EQ '').ERRT
         AIF   ('&NRP' EQ '').ERRN
         AIF   ('&ARP' EQ '').ERRA
&NAME    DC    CL8'&MID'
         DC    AL1(ALTRQ)
         DC    AL2(&AT-&SYSECT)
&L       SETC  'JRC'.'&SYSNDX'.'N'
&S       SETC  '&NRP'
         AIF   ('&S'(1,1) EQ '''').A
         AIF   (K'&S GT 100).ERRLN
         DC    AL1(L'&L-1)
&L       DC    C'&S'
         AGO   .B
.A       AIF   (K'&S GT 102).ERRLN
         DC    AL1(L'&L-1)
&L       DC    C&S
.B       ANOP
&L       SETC  'JRC'.'&SYSNDX'.'A'
&S       SETC  '&ARP'
         AIF   ('&S'(1,1) EQ '''').C
         AIF   (K'&S GT 100).ERRLA
         DC    AL1(L'&L-1)
&L       DC    C'&S'
         AGO   .END
.C       AIF   (K'&S GT 102).ERRLA
         DC    AL1(L'&L-1)
&L       DC    C&S
         AGO   .END
.MISS    MNOTE 8,' MID POSITIONAL OPERAND MISSING ******************* '
         AGO   .END
.TOO     MNOTE 8,' TOO MANY POSITIONAL OPERANDS ********************* '
         AGO   .END
.ERRT    MNOTE 8,' AT KEYWORD OPERAND MISSING *********************** '
         AGO   .END
.ERRN    MNOTE 8,' NRP KEYWORD OPERAND MISSING ********************** '
         AGO   .END
.ERRA    MNOTE 8,' ARP KEYWORD OPERAND MISSING ********************** '
         AGO   .END
.ERRLN   MNOTE 8,' NRP KEYWORD OPERAND TOO LONG ********************* '
         AGO   .END
.ERRLA   MNOTE 8,' ARP KEYWORD OPERAND TOO LONG ********************* '
.END     SPACE 1
         MEND
         MACRO           GENERATE TABLE JOB NAMES ENTRIES.
&NAME   @GJ
         LCLA  &N
         LCLC  &L,&S
         AIF   ('&NAME' EQ '').A
&NAME    EQU   *
.A       AIF   (N'&SYSLIST EQ 0).MISS
&N       SETA  1
.B       AIF   (T'&SYSLIST(&N) EQ 'O').C
&L       SETC  'JRC'.'&SYSNDX'.'&N'
&S       SETC  '&SYSLIST(&N)'
         DC    AL1(L'&L-1)
&L       DC    C'&S'
.C       AIF   (N'&SYSLIST EQ &N).END
&N       SETA  &N+1
         AGO   .B
.MISS    MNOTE 8,' JOB NAME POSITIONAL OPERAND MISSING ************** '
.END     MEND
         MACRO           GENERATE TABLE USER-ID'S ENTRIES.
&NAME   @GT
         LCLA  &N
         LCLC  &S
         AIF   ('&NAME' EQ '').A
&NAME    EQU   *
.A       AIF   (N'&SYSLIST EQ 0).MISS
&N       SETA  1
.B       AIF   (T'&SYSLIST(&N) EQ 'O').C
&S       SETC  '&SYSLIST(&N)'
         DC    CL8'&S'
.C       AIF   (N'&SYSLIST EQ &N).END
&N       SETA  &N+1
         AGO   .B
.MISS    MNOTE 8,' JOB NAME POSITIONAL OPERAND MISSING ************** '
.END     MEND
         MACRO           GENERATE TABLE HOLIDAY'S DATES ENTRIES.
&NAME   @GHDT  &D=,&M=,&Y=
         LCLA  &N,&NW
         LCLA  &TM(12)
&TM(1)   SETA  31                  JAN
&TM(2)   SETA  28                  FEB
&TM(3)   SETA  31                  MAR
&TM(4)   SETA  30                  APR
&TM(5)   SETA  31                  MAY
&TM(6)   SETA  30                  JUN
&TM(7)   SETA  31                  JUL
&TM(8)   SETA  31                  AUG
&TM(9)   SETA  30                  SEP
&TM(10)  SETA  31                  OCT
&TM(11)  SETA  30                  NOV
&TM(12)  SETA  31                  DEC
         AIF   ('&NAME' EQ '').A
&NAME    EQU   *
.A       AIF   ('&Y' EQ '').MISY
         AIF   ('&M' EQ '').MISM
         AIF   ('&D' EQ '').MISD
         AIF   (K'&Y NE 4).MINY
         AIF   (&Y LT 1582).MINY
         AIF   (&Y GT 4315).MINY
         AIF   (K'&M GT 2).MINM
         AIF   (&M LT 1).MINM
         AIF   (&M GT 12).MINM
         AIF   (K'&D GT 2).MIND
         AIF   (&D LT 1).MIND
&NW      SETA  (&Y/4)*4
         AIF   (&NW NE &Y).C
&NW      SETA  (&Y/100)*100
         AIF   (&NW NE &Y).B
&NW      SETA  (&Y/400)*400
         AIF   (&NW NE &Y).C
.B       ANOP
&TM(2)   SETA  29                  FEB
.C       AIF   (&D GT &TM(&M)).MIND
&N       SETA  1
&NW      SETA  &D
.D       AIF   (&N EQ &M).E
&NW      SETA  &NW+&TM(&N)
&N       SETA  &N+1
         AGO   .D
.E       DC    H'&Y',H'&NW'
         AGO   .END
.MIND    MNOTE 8,' D= OPERAND INVALID ******************************* '
         AGO   .END
.MINM    MNOTE 8,' M= OPERAND INVALID ******************************* '
         AGO   .END
.MINY    MNOTE 8,' Y= OPERAND INVALID ******************************* '
         AGO   .END
.MISD    MNOTE 8,' D= OPERAND MISSING ******************************* '
         AGO   .END
.MISM    MNOTE 8,' M= OPERAND MISSING ******************************* '
         AGO   .END
.MISY    MNOTE 8,' Y= OPERAND MISSING ******************************* '
.END     MEND
         MACRO           GENERATE MOVE SPECIFIC TEXT.
&NAME   @MV    &FROM,&LG,&POS
         LCLA  &N,&P
&N       SETA  &LG-1
&P       SETA  &POS-1
         MVC   STXT(&LG),&FROM
         MVC   SPOS(2),=AL1(&P,&N)
         MEND
        PRINT ON
         SPACE 1
* MODULE NAME : IEAVMXIT
*
* DESCRIPTIVE NAME : COMMUNICATIONS TASK USER EXIT FOR MESSAGES
*
* FUNCTIONS : ROUTES MESSAGES VIA ROUTING CODE, SUPPRESSES AND
*             REPLIES TO MESSAGES
*
* INPUT DATA : - REG.1 = ADDRESS OF THE CTXT
*              - REG.13 = ADDRESS OF STANDARD SAVE AREA
*              - REG.14 = RETURN ADDRESS
*              - REG.15 = ADDRESS OF ENTRY POINT
*              REGISTERS SAVED : REG.0 - REG.15
*              REGISTERS USAGE : - REG.0 = WORK REGISTER
*                                - REG.1 = WORK REGISTER
*                                - REG.2 = WORK REGISTER
*                                - REG.3 = WORK REGISTER
*                                - REG.4 = WORK REGISTER
*                                - REG.5 = WORK REGISTER
*                                - REG.6 = WORK REGISTER
*                                - REG.7 = POINTER TO CTXT
*                                - REG.8 = POINTER TO MSG ATTRIBUTES
*                                - REG.9 = INTERNAL LINK REGISTER
*                                - REG.11 = MODULE DATA REGISTER
*                                - REG.12 = MODULE BASE REGISTER
*                                - REG.13 = POINTER TO STANDARD SAVE
*                                           AREA
*                                - REG.14 = WORK REGISTER
*                                - REG.15 = WORK REGISTER
*              REGISTERS RESTORED : REG.0 - REG.15
*
* CONTROL BLOCKS : NAME  MACRO     REASON USED               USAGE
*                  ----  --------  ------------------------  -------
*                  CTXT  IEZVX100  USER EXIT PARAMETER LIST  R,W
*                  MGCR  IEZMGCR   SVC 34 PARAMETER LIST     C,D
*                  KEY : R-READ, W-WRITE, C-CREATE, D-DELETE
*
* MACROS : GETMAIN, FREEMAIN, MGCR, WTO
*
* BASE MATERIAL : IBM MANUAL GC28-1147
*
* ADAPTED BY :    MOINIL P.A., EURATOM COMPUTING CENTRE
*                 J.R.C. - ISPRA ESTABLISHMENT
*                 21020 ISPRA (VA), ITALY
         EJECT
***********************************************************************
***                                                                 ***
*** AFTER LINK-EDIT IN SYS1.LINKLIB, THE EXIT WILL BE ACTIVATED AS  ***
*** BELOW :                                                         ***
*** 1. - RE-IPL'ING THE SYSTEM, OR                                  ***
*** 2. - ENTERING AT CONSOLE THE FOLLOWING COMMANDS IN SEQUENCE :   ***
***            F LLA,REFRESH                                        ***
***            K M,UEXIT=N                                          ***
***            K M,UEXIT=Y                                          ***
***                                                                 ***
***********************************************************************
         SPACE 2
IEAVMXIT START 0
IEAVMXIT AMODE 31
IEAVMXIT RMODE ANY
         SPACE 2
SPINPRVT EQU   230                 SUBPOOL NUMBER
         SPACE 2
*---  MESSAGE PROCESSING REQUEST TYPES (FLAGS).
         SPACE 1
SUPRQ    EQU   X'00'               MESSAGE SUPPRESS
RPLRQ    EQU   X'01'               REPLY TO MESSAGE
CMDRQ    EQU   X'02'               SEND COMMAND TO MESSAGE
ALTRQ    EQU   X'04'               ALTERNATE REPLY TO MESSAGE
SPPRQ    EQU   X'08'               SPECIFIC PROCESS TO MESSAGE
         SPACE 2
*---  STANDARD ENTRY LINKAGE.
         SPACE 1
         USING *,R12
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LA    R12,0(R15)          ESTABLISH MODULE BASE REGISTER
         L     R7,0(R1)            ESTABLISH CTXT ADDRESSABILITY
         B     BEGIN               BRANCH AROUND IDENTIFICATION
         SPACE 1
         DC    CL8'IEAVMXIT',C'-'  IDENTIFIER
         DC    CL8'&SYSDATE',C'('  ASSEMBLY DATE
         DC    CL5'&SYSTIME',C')'  ASSEMBLY TIME
         EJECT
*---  LOOK IF MESSAGE MUST BE PROCESSED.
         SPACE 1
         USING CTXT,R7
BEGIN    L     R8,CTXTTXPJ         ESTABLISH ADDRESSABILITY TO THE
         USING CTXTATTR,R8              MESSAGE ATTRIBUTES
         LH    R0,CTXTTLEN         TEXT LENGTH
         LA    R1,CTXTTMSG         ADDRESS OF TEXT AREA
SCMSG    CLI   0(R1),C' '          SEARCH START OF TEXT
         BNE   FOUND                    (BECAUSE SOMEONE LIKE CJS
         LA    R1,1(R1)                  SETS A BLANK AHEAD)
         BCT   R0,SCMSG
         B     LEAVE               ALL TEXT IS BLANKS
         USING MSGTEXT,R1          BASE TEXT MAPPING
FOUND    L     R2,=A(MSGSTB-IEAVMXIT)   START MSGS TABLE DISPLACEMENT
         ALR   R2,R12
         XR    R4,R4
SEARCH   CLI   0(R2),X'FF'         END OF TABLE?
         BE    LEAVE               YES, NOTHING TO DO
         CLC   MSGID,0(R2)         THIS MESSAGE?
         BE    GOTO                YES, GO PROCESS IT
         LA    R3,L'MSGSTB(R2)     NO, POINT TO FLAGS BYTE
         LA    R2,L'MSGSTB+1(R2)   BUMP TABLE POINTER
         CLI   0(R3),SUPRQ         JUST SUPPRESS?
         BE    SEARCH              YES
         TM    0(R3),ALTRQ+SPPRQ   NO, ALTERNATE OR SPECIFIC?
         BZ    *+L'*+4             NO
         LA    R2,2(R2)            YES, SKIP AT=
         TM    0(R3),RPLRQ+ALTRQ   REPLY TEXT OR ALTERNATE?
         BZ    *+L'*+8             NO
         IC    R4,0(R2)            YES, GET REPLY TEXT LENGTH
         LA    R2,2(R4,R2)         BUMP TO COMMAND IF ANY
         TM    0(R3),CMDRQ+ALTRQ   COMMAND TEXT OR ALTERNATE?
         BZ    SEARCH              NO
         IC    R4,0(R2)            YES, GET COMMAND TEXT LENGTH
         LA    R2,2(R4,R2)         BUMP TO NEXT MESSAGE IN TABLE
         B     SEARCH
         DROP  R1
         EJECT
*---  DYNAMIC STORAGE FOR THIS MODULE IS BEING OBTAINED BELOW 16-MEG
*     LINE BECAUSE SVC 34 REQUIRES THE MGCR PARAMETER LIST TO BE IN
*     24-BIT ADDRESSABILITY STORAGE.
         SPACE 1
GOTO     LR    R6,R1               SAVE BASE TEXT MAPPING / GETMAIN
        GETMAIN RC,LV=DATAEND,SP=SPINPRVT,LOC=BELOW
         LTR   R15,R15             AREA RECEIVED?
         BZ    OK                  YES
        WTO    MF=(E,WTOMX)        NO, SIGNAL IT
         B     LEAVE               EXIT
OK       LR    R11,R1              ADDRESS RETURNED IN REG.1
         USING DATAAREA,R11        ADDRESSABILITY TO DYNAMIC STORAGE
         ST    R13,SAVEAREA+4      SET BACKWARD PTR
         LA    R15,SAVEAREA        GET ADDRESS OF SAVE AREA
         ST    R15,8(R13)          SET FORWARD PTR
         LR    R13,R15             STANDARD SAVE AREA
         XC    SPOS(2+L'STXT),SPOS INITIALIZE
         LR    R5,R2               POINT TO MESSAGE ID
         LA    R3,L'MSGSTB(R2)     POINT TO FLAGS BYTE
         LA    R2,L'MSGSTB+1(R2)   BUMP TABLE POINTER
         TM    0(R3),ALTRQ+SPPRQ   ALTERNATE OR SPECIFIC?
         BZ    PROCESS             NO
         XR    R4,R4
         ICM   R4,B'0011',0(R2)    YES, GET AT= LOCATION DISPLACEMENT
         LA    R2,2(R2)            BUMP TABLE POINTER (REPLY OR CMD)
         B     0(R4,R12)           GO TO IT
         EJECT
***********************************************************************
***                                                                 ***
*** AT ENTRY TO SPECIFIC PROCESSING FOR ANY MESSAGE, THE FOLLOWING  ***
*** POINTERS ARE SET AND MUST BE RETAINED UNLESS INDICATED :        ***
***                                                                 ***
***      R2    - REPLY TEXT IN MESSAGES PROCESSING TABLE            ***
***      R3    - FLAGS BYTE IN MESSAGES PROCESSING TABLE            ***
***      R5    - MESSAGE ID IN MESSAGES PROCESSING TABLE            ***
***      R6    - TRUE MESSAGE TEXT START ADDRESS (MAY BE DESTROYED) ***
***      R7    - COMM TASK EXIT PARAMETER LIST                      ***
***      R8    - COMM TASK EXIT MESSAGE ATTRIBUTES                  ***
***                                                                 ***
***********************************************************************
         SPACE 2
*---  DO SPECIFIC PROCESSING FOR MESSAGES $HASP102 AND $HASP103.
         SPACE 1
* PURPOSE :    SET THESE SETUP MESSAGES AS ACTION REQUIRED.
         SPACE 1
J2SETUP  OI    CTXTRFB1,CTXTRCDC   REQUEST TO CHANGE DESC. CODE
         L     R6,CTXTDCP          GET DESCRIPTOR CODES POINTER
         USING CTXTDESC,R6
         XC    CTXTDESC(L'CTXTDC1+L'CTXTDC2),CTXTDESC CLEAR ALL CODES
         OI    CTXTDC1,CTXTDC02    SET DESC. CODE 2 (ACTION)
         DROP  R6
         B     FINISH
         EJECT
*---  DO SPECIFIC PROCESSING FOR MESSAGE ICH802D.
         SPACE 1
ICH802D RACSTAT ,                  TEST RACF STATUS
         LTR   R15,R15             ACTIVE?
         BZ    FINISH              YES
         SPACE 1
* PURPOSE :    WHEN RACF BECOMES INACTIVE DUE TO AN EXCEPTIONAL EVENT,
*              ONLY OWNER RESOURCES ARE AVAILABLE AND FOR ALL OTHERS
*              THE SYSTEM INVOLVES OPERATOR WITH THE REPLY TO MESSAGE
*              ICH802D. SO UNTIL A RECOVERY OCCURS AND RESTORES THE
*              NORMAL RACF SITUATION, AUTOMATIC REPLIES 'N' OR 'Y' ARE
*              SUPPLIED HERE, BASED ON JOB OR TSU NAMES OF REQUESTOR
*              (ALL STC TASKS ARE FULLY AUTHORIZED).
* REMARK :     'IEAVMXIT' RUN IN THE 'CONSOLE' AS-ID, SO THIS ALLOWS
*              THE ACCESS TO THE OPERATOR REPLY ELEMENTS (ORE).
         SPACE 1
         L     R1,CVTPTR           NO, FIND WHO WANT THE RESOURCE
         USING CVT,R1
         L     R15,CVTCUCB
         USING UCM,R15
         L     R15,UCMRPYQ         FIRST ORE ADDRESS (REPLY-Q)
         DROP  R15
         LTR   R15,R15
         BZ    PROCESS             NO ORE CHAIN
         USING OREF,R15
ICH802D1 CLC   ORECBID,=CL4'ORE '
         BNE   PROCESS
         CLC   OREID,CTXTRPID      IS THIS THE REPLY ID?
         BE    ICH802D2            YES
         L     R15,ORELKP          LINKAGE POINTER
         LTR   R15,R15             END OF CHAIN?
         BNZ   ICH802D1            NO, CONTINUE
         B     PROCESS             YES, NOT FOUND
ICH802D2 MVC   ASID,OREASID        RETAIN THE AS-ID
         DROP  R15
         L     R1,CVTASVT          GET ASVT POINTER
         DROP  R1
         USING ASVT,R1
         L     R14,ASVTMAXU        NUMBER OF ASCB'S
         LA    R15,ASVTENTY        FIRST ENTRY ADDRESS
         DROP  R1
ICH802D3 TM    0(R15),ASVTAVAL     IS IT AN AVAILABLE ASID?
         BO    ICH802D4            YES, GO GET NEXT
         L     R1,0(R15)           GET ASCB ADDRESS
         USING ASCB,R1
         CLC   ASID,ASCBASID       IS IT THIS ONE?
         BE    ICH802D5            YES
ICH802D4 LA    R15,4(R15)          NEXT ENTRY
         BCT   R14,ICH802D3        LOOP UNTIL END
         B     PROCESS             NOT FOUND
ICH802D5 L     R15,ASCBJBNI
         LTR   R15,R15
         BZ    ICH802D7
         L     R14,=A(JOBSTB-IEAVMXIT)  JOB
         ALR   R14,R12
         XR    R4,R4
ICH802D6 CLC   0(2,R14),=XL2'00FF'
         BE    PROCESS
         IC    R4,0(R14)
         EX    R4,ICH802DZ
         BE    ICH802DA
         LA    R14,2(R4,R14)
         B     ICH802D6
ICH802DZ CLC   1(*-*,R14),0(R15)        <<EXECUTED>>
ICH802D7 L     R15,ASCBJBNS
         LTR   R15,R15
         BZ    PROCESS             NOT FOUND
         L     R0,ASCBTSB
         LTR   R0,R0
         BZ    ICH802DA            STC
         L     R14,=A(TSUSTB-IEAVMXIT)  TSU
         ALR   R14,R12
ICH802D8 CLI   0(R14),0
         BE    PROCESS
         CLC   0(L'TSUSTB,R14),0(R15)
         BE    ICH802DA
         LA    R14,L'TSUSTB(R14)
         B     ICH802D8
         DROP  R1
ICH802DA XR    R4,R4
         IC    R4,0(R2)            NORMAL REPLY TEXT LENGTH
         LA    R2,2(R4,R2)         POINT TO ALTERNATE REPLY
         B     PROCESS
         EJECT
*---  DO SPECIFIC PROCESSING FOR MESSAGE ICH70001I.
         SPACE 1
* PURPOSE :    SUPPRESS MESSAGE WHEN REFERING TO DMSJOBS ONLY.
         SPACE 1
         USING MSGTEXT,R6
ICH70001 CLC   JOBDATA(25),=CL25'I DMSJOBS  LAST ACCESS AT'
         BNE   FINISH              LET'S GO
         DROP  R6
         OI    CTXTRFB2,CTXTRDTM   SET NO HARDCOPY AND NO DISPLAY
         B     FINISH
         SPACE 2
*---  DO SPECIFIC PROCESSING FOR MESSAGE IEE043I.
         SPACE 1
* PURPOSE :    START THE SYSOUT WRITER AUTOMATICALLY.
         SPACE 1
IEE043I  L     R1,CVTPTR           GET ADDRESS OF CVT
         USING CVT,R1
         L     R15,CVTJESCT        GET ADDRESS OF JESCT
         DROP  R1
         USING JESCT,R15
         TM    JESJESFG,JESPSUBA   IS PRIMARY SUB-SYSTEM ACTIVE?
         BZ    FINISH              NO, LET MESSAGE
         L     R1,JESSSCT          YES, GET ADDRESS OF SSCVT FOR JES2
         DROP  R15
         USING SSCT,R1
         L     R15,SSCTSSVT        GET ADDRESS OF SSVT FOR JES2
         DROP  R1
         USING SVT,R15
         ICM   R1,B'1111',SVTIRASN ARE STC AND TSU INTRDR LOCKS?
         DROP  R15
         BM    FINISH              YES, JES2 IS COMING DOWN
         B     PROCESS             NO, GO DO START
         SPACE 2
*---  DO SPECIFIC PROCESSING FOR MESSAGE IEF176I.
         SPACE 1
* PURPOSE :    STOP THE SYSOUT WRITER AUTOMATICALLY.
         SPACE 1
         USING MSGTEXT,R6
IEF176I  CLC   JOBDATA(4),=CL4'WTR '    VERIFY TEXT
         BNE   PROCESS
         CLC   JOBDATA+7(9),=CL9' WAITING '
         BNE   PROCESS
        @MV    JOBDATA+4,3,3       HANDLE UNIT NAME XXX
         DROP  R6
         B     PROCESS
         EJECT
*---  COMMON PROCESSING FOR MESSAGES : IEC301A
*                                      IGF500D
         SPACE 1
* PURPOSE :    REPLY ONLY IF DURING
*              1. THE 24 HOURS NIGHT INTERVAL OF ANY DAY, EXACTLY
*                 FROM 10.00 TO 12.00 PM AND 00.00 TO 08.00 AM,
*              2. THE 24 HOURS OF THE SATURDAY OR SUNDAY,
*              3. THE 24 HOURS OF SOME HOLIDAYS DATES (NOT SATURDAY
*                 OR SUNDAY). NOTE - SEE TABLE 'HDTABLE'.
* WEEKDAY COMPUTATION : GREGORIAN CALENDAR (1582)          MOINIL P.A.
*        EACH FOURTH YEAR IS A LEAP YEAR, AND YEARS MARKING THE
*        CENTURY WILL NOT BE LEAP YEARS UNLESS DIVISIBLE BY 400.
*        I.E. : 1600 WAS A LEAP YEAR, BUT 1700, 1800, 1900 WERE NOT.
         SPACE 1
IEC301A  NULL
IGF500D  NULL
        TIME   DEC
         SRL   R0,8                R0 = 00HHMMSS
         CL    R0,=A(X'00220000')  PAST 10.00 PM?
         BH    COMTST01            YES, PROCESS
         CL    R0,=A(X'00080000')  BEFORE 08.00 AM?
         BL    COMTST01            YES, PROCESS
         XR    R0,R0               R1 = 0CYYDDDF
         ST    R0,DWORK
         SLDL  R0,16               R0 = 00000CYY
         SRL   R1,16               R1 = 0000DDDF
         ST    R1,DWORK+4
         CVB   R15,DWORK           R15 = DAY IN BINARY
         SLL   R0,4                R0 = 0000CYY0
         LA    R1,X'0F'            R1 = 0000000F
         OR    R1,R0               R1 = 0000CYYF
         ST    R1,DWORK+4
         AP    DWORK,=PL3'+1900'   ADD BASE CENTURY
         CVB   R1,DWORK            R1 = FULL YEAR IN BINARY
         LR    R14,R1
         XR    R0,R0
         BCTR  R1,0
         D     R0,=F'100'
         LR    R4,R1
         SRL   R1,2
         SR    R4,R1
         LR    R1,R14
         LR    R0,R1
         BCTR  R1,0
         SRL   R1,2
         AR    R1,R0
         AR    R1,R15
         SR    R1,R4
         XR    R0,R0
         D     R0,=F'7'
         LR    R1,R0
         SLA   R1,1
         AR    R1,R0
         LA    R1,DAYT(R1)
         CLC   0(L'DAYT,R1),NDSAT  TODAY IS SATURDAY?
         BE    COMTST01            YES, PROCESS
         CLC   0(L'DAYT,R1),NDSUN  TODAY IS SUNDAY?
         BE    COMTST01            YES, PROCESS
         SLL   R14,16
         OR    R14,R15
         L     R15,=A(HDTABLE)     CHECK IF HOLIDAY DATE
         CLC   0(L'HDTABLE,R15),=F'0'   END OF TABLE?
         BE    FINISH              YES, LETS DECIDE OPERATOR
         CL    R14,0(R15)          NO, MATCH TODAY?
         BE    COMTST01            YES, PROCESS
         LA    R15,L'HDTABLE(R15)  NO, POINT TO NEXT DATE
         B     *-22
COMTST01 CLC   0(8,R5),=CL8'IEC301A'    PROTECTION MESSAGE?
         BE    PROCESS             YES, PROCESS, OTHERWISE CHECK MORE
         EJECT
*---  COMMON PROCESSING FOR MESSAGES : IEA962A
*                                      IEF238D
*                                      IEF433D
         SPACE 1
* PURPOSE :    REPLY KEYWORD IF PRESENT IN MESSAGE.
         SPACE 1
         USING MSGTEXT,R6
IEA962A  CLC   JOBDATA(29),=CL29'MESSAGE FOR INACTIVE CONSOLE '
         BNE   FINISH              LET'S GO
         DROP  R6
IEF238D  NULL
IEF433D  NULL
         LH    R0,CTXTTLEN         TEXT LENGTH
         LA    R1,CTXTTMSG         ADDRESS OF TEXT AREA
         XR    R4,R4
         IC    R4,0(R2)            REPLY TEXT LENGTH
         CLI   0(R1),C''''         SEARCH KEYWORD
         BE    *+L'*+18
COMPRO01 LA    R1,1(R1)
         BCT   R0,*-12
         B     FINISH
         CLC   1(*-*,R1),1(R2)     <<EXECUTED>>
         CLR   R4,R0
         BNL   FINISH
         EX    R4,*-12
         BNE   COMPRO01
         LA    R1,2(R1,R4)
         SR    R0,R4
         SH    R0,=H'2'
         BNP   FINISH
         CLI   0(R1),C''''
         BNE   COMPRO01
         EJECT
*---  DO REQUESTED PROCESSING FOR A MESSAGE.
         SPACE 1
PROCESS  CLI   0(R3),SUPRQ         JUST SUPPRESS?
         BE    *+L'*+8             YES
         CLI   0(R3),SPPRQ         JUST SUPPRESS?
         BNE   *+L'*+8             NO
         OI    CTXTRFB2,CTXTRDTM   YES, SET NO HARDCOPY AND NO DISPLAY
         B     FINISH
         SPACE 1
*        POINTERS SET : R2 - REPLY TEXT
*                       R3 - FLAGS BYTE
*                       R5 - MESSAGE ID
         SPACE 1
         XR    R4,R4
         OI    CTXTRFB2,CTXTRHCO   SUPPRESS MESSAGE (HARDCOPY ONLY)
         TM    0(R3),RPLRQ+ALTRQ   REPLY OR ALTERNATE REQUESTED?
         BZ    PRCMD               NO
         XC    MGCRPL(MGCRLTH),MGCRPL   YES, CLEAR PARAMETER LIST
         MVC   COMMAND,=CL6'REPLY '     SET REPLY COMMAND IN BUFFER
         MVC   REPLY,CTXTRPID      INSERT THE REPLY ID
         MVC   REPLYMSG,=CL2','''
         IC    R4,0(R2)            REPLY TEXT LENGTH
         EX    R4,MVRTXT           MOVE REPLY TEXT
         LA    R1,REPLYTXT+1(R4)
         MVI   0(R1),C''''
         LA    R1,(MGCRTEXT-MGCRPL)+REPLYLTH+1(R4)
         LA    R6,REPLYTXT         REPLY TEXT FOR ECHO
         BAL   R9,SEND             GO DO IT
         LA    R2,2(R4,R2)         BUMP TO COMMAND IF ANY
PRCMD    TM    0(R3),CMDRQ         COMMAND REQUESTED?
         BZ    FINISH              NO
         IC    R4,0(R2)            YES, COMMAND TEXT LENGTH
         XC    MGCRPL(MGCRLTH),MGCRPL   CLEAR PARAMETER LIST
         MVI   MGCRFLG1,MGCRFI     SET MGCRFLG2 VALID
         EX    R4,MVCTXT           MOVE COMMAND TEXT
         TM    0(R3),SPPRQ         SPECIFIC REQUESTED?
         BZ    PRSCMD              NO
         CLI   STXT,0              YES, TEXT IN PLACE?
         BE    PRSCMD              NO, BYPASS
         XR    R1,R1               YES, SET IN PLACE PREPARED TEXT
         IC    R1,SLGT
         XR    R15,R15
         IC    R15,SPOS
         LA    R15,COMMAND(R15)
         EX    R1,MVSTXT
PRSCMD   LA    R1,(MGCRTEXT-MGCRPL)+1(R4)
         LA    R6,COMMAND          COMMAND TEXT FOR ECHO
         BAL   R9,SEND             GO DO IT
         EJECT
*---  STANDARD EXIT LINKAGE AND FREE DYNAMIC STORAGE.
         SPACE 1
FINISH   L     R13,4(R13)          RESTORE REG.13
        FREEMAIN RU,LV=DATAEND,A=(R11),SP=SPINPRVT
LEAVE    LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS
         BR    R14                 RETURN TO CALLER
         SPACE 1
MVRTXT   MVC   REPLYTXT(*-*),1(R2)      <<EXECUTED>>
MVCTXT   MVC   COMMAND(*-*),1(R2)       <<EXECUTED>>
MVSTXT   MVC   0(*-*,R15),STXT          <<EXECUTED>>
MVWTXT   MVC   WTOTXT+1(*-*),0(R6)      <<EXECUTED>>
         SPACE 2
*---  ROUTINE : EXECUTE REPLY/COMMAND AND ADVICE OPERATOR.
         SPACE 1
SEND     STC   R1,MGCRLGTH         SET LENGTH IN THE MGCRPL
         XR    R0,R0               CLEAR REGISTER ZERO
         XR    R15,R15             CLEAR REGISTER ZERO
        MGCR   MGCRPL              ISSUE COMMAND
         MVC   WTOLIST(WTOSKL),WTOSK    INITIALIZE WTO LIST
         MVC   WTOMSG,0(R5)        MOVE MSG ID
         MVI   WTOTXT,C'/'
         EX    R4,MVWTXT           MOVE REPLY/COMMAND TEXT
         LA    R1,WTOTXT+2(R4)
         MVC   0(4,R1),WTOSK+WTOSKL     SET DESC. AND ROUTE CODES
         LA    R1,WTOSKL+L'WTOMSG+2(R4)
         STH   R1,WTOLIST          SET WTO TEXT LENGTH
        WTO    MF=(E,WTOLIST)      ADVICE OPERATOR
         BR    R9                  RETURN
         SPACE 1
         DROP  R7,R8,R11,R12
         EJECT
*---  CONSTANTS AND SKELETONS.
         SPACE 1
WTOSK   WTO    'USER00I : ',ROUTCDE=2,DESC=4,MF=L
WTOSKL   EQU   (*-WTOSK)-4
WTOMX   WTO    'USER99I : GETMAIN FAILED ================== IEAVMXIT', 1
               ROUTCDE=1,DESC=3,MF=L
*DAY TABLE INDEX =  0      1  2  3  4  5  6
DAYT     DC    CL3'SAT',C'SUNMONTUEWEDTHUFRI'
NDSAT    EQU   DAYT+(1*L'DAYT),L'DAYT
NDSUN    EQU   DAYT+(2*L'DAYT),L'DAYT
         SPACE 2
        LTORG
         AIF   ('&SYSPARM' EQ 'LIST').LAGN
        PRINT  NOGEN
.LAGN    EJECT
*           -----------------------------
*        ---  MESSAGES PROCESSING TABLE  ---
*           -----------------------------
         SPACE 1
* MACRO SYNTAX :      @GM  MID,AT=,RPL=,CMD=
* --------------  OR  @GA  MID,AT=,NRP=,ARP=
*
* MACRO OPERANDS : 1. POSITIONAL OPERAND
* ----------------    MID : MESSAGE ID (I.E., IFB010D).
*                  2. KEYWORDS OPERANDS
*                     A. @GM MACRO
*                        AT=  : LABEL OF THE SPECIFIC PROCESS.
*                        RPL= : REPLY TEXT.
*                        CMD= : COMMAND TEXT.
*                        WHEN NONE OF THE KEYWORDS OPERANDS ARE CODED,
*                        THEN THE DEFAULT OPTION OF JUST SUPPRESS THE
*                        MESSAGE IS ASSUMED.
*                     B. @GA MACRO
*                        AT=  : LABEL OF THE SPECIFIC PROCESS.
*                        NRP= : NORMAL REPLY TEXT.
*                        ARP= : ALTERNATE REPLY TEXT.
*                        OPERANDS ARE MANDATORY.
*
* NOTE : THE TEXT KEYWORDS MUST BE CODED APPLYING THE ASSEMBLER RULES
*        AS FOR A CHARACTER CONSTANT, SO IF NEEDED, ENCLOSE IT BETWEEN
*        APOSTROPHES.
*
         SPACE 1
MSGSTB   DS    0CL8                START OF TABLE
         SPACE 1
*--- JES2 : $HASP102 AND $HASP103 ... SETUP MESSAGES
        @GM    $HASP102,AT=J2SETUP
        @GM    $HASP103,AT=J2SETUP
         SPACE 1
*--- RDE : IFB010D ENTER 'IPL REASON,SUBSYSTEM ID' OR 'U'
        @GM    IFB010D,RPL=U
         SPACE 1
*--- CJS : CJSI01D ENTER CJSM INIT OPTIONS
        @GM    CJSI01D,RPL=U
         SPACE 1
*--- RACF : ICH802D REPLY Y OR N TO THE REQUEST
        @GA    ICH802D,AT=ICH802D,NRP=N,ARP=Y
         SPACE 1
*--- RACF : ICH70001I DMSJOBS  LAST ACCESS AT ...
        @GM    ICH70001,AT=ICH70001
         SPACE 1
*--- SMF : IEE043I A SYSTEM LOG DATA SET HAS BEEN QUEUED TO
*              SYSOUT CLASS L
        @GM    IEE043I,AT=IEE043I,CMD='S XWTR'
         SPACE 1
*--- SMF : IEF176I WTR ??? WAITING FOR WORK, CLASS=L, DEST=LOCAL
        @GM    IEF176I,AT=IEF176I,CMD='P ???'
         SPACE 1
*--- STC : IEF238D JJJ - REPLY DEVICE NAME, 'WAIT' OR 'CANCEL'
        @GM    IEF238D,AT=IEF238D,RPL=WAIT
         SPACE 1
*--- STC : IEF433D JJJ - WAIT REQUESTED - REPLY 'HOLD' OR 'NOHOLD'
        @GM    IEF433D,AT=IEF433D,RPL=HOLD
         SPACE 1
*--- ZEKE : IEA962A MESSAGE FOR INACTIVE CONSOLE NN.
*              REPLY DELETE, OR OK'
        @GM    IEA962A,AT=IEA962A,RPL=DELETE
         SPACE 1
*--- STC : IGF500D  REPLY 'YES', DEVICE, OR 'NO'
        @GM    IGF500D,AT=IGF500D,RPL=YES
         SPACE 1
*--- MVS : IEC301A S JOB JJJ,... ... (PROTECTION MESSAGE)
        @GM    IEC301A,AT=IEC301A,RPL=NONE
         SPACE 1
         DC    XL1'FF'             END OF TABLE
         EJECT
*           -----------------------------
*        ---  J O B   N A M E S   TABLE  ---
*           -----------------------------
         SPACE 1
* MACRO SYNTAX :      @GJ  ...JOB NAMES LIST...
* --------------
*
* MACRO OPERANDS : JOB NAMES LIST (SEPARATED BY A COMMA).
* ----------------
         SPACE 1
JOBSTB   DS    0CL1                START OF TABLE
         SPACE 1
        @GJ    MAINT,ACCOUNT
        @GJ    RECOVER,OPER
        @GJ    DMS
         SPACE 1
         DC    XL2'00FF'           END OF TABLE
         DC    10XL8'0'            PATCH AREA
         EJECT
*           -----------------------------
*        ---  T S U   N A M E S   TABLE  ---
*           -----------------------------
         SPACE 1
* MACRO SYNTAX :      @GT  ...TSU NAMES LIST...
* --------------
*
* MACRO OPERANDS : TSU NAMES LIST (SEPARATED BY A COMMA).
* ----------------
         SPACE 1
TSUSTB   DS    0CL1                START OF TABLE
         SPACE 1
        @GT    WIZARD,MASTER
        @GT    PUPIL
         SPACE 1
         DC    X'0'                END OF TABLE
         DC    10XL8'0'            PATCH AREA
         EJECT
*           -----------------------------
*        ---  HOLIDAYS DATES  T A B L E  ---
*           -----------------------------
         SPACE 1
* MACRO SYNTAX :      @GHDT  D=,M=,Y=
* --------------
*
* MACRO OPERANDS : HOLIDAY'S DATES SUPPLIED AS FOLLOWS
* ----------------       D=DD IS THE DAY,
*                        M=MM IS THE MONTH, AND
*                        Y=YYYY IS THE YEAR.
         SPACE 1
HDTABLE  DS    0F                  START OF TABLE
         SPACE 1
        @GHDT  D=01,M=01,Y=1991     1 JAN 91 - TUE
        @GHDT  D=02,M=01,Y=1991     2 JAN 91 - WED
        @GHDT  D=29,M=03,Y=1991    29 MAR 91 - FRI
        @GHDT  D=01,M=04,Y=1991     1 APR 91 - MON
        @GHDT  D=25,M=04,Y=1991    25 APR 91 - THU
        @GHDT  D=01,M=05,Y=1991     1 MAY 91 - WED
        @GHDT  D=09,M=05,Y=1991     9 MAY 91 - THU
        @GHDT  D=10,M=05,Y=1991    10 MAY 91 - FRI
        @GHDT  D=20,M=05,Y=1991    20 MAY 91 - MON
        @GHDT  D=15,M=08,Y=1991    15 AUG 91 - THU
        @GHDT  D=01,M=11,Y=1991     1 NOV 91 - FRI
        @GHDT  D=24,M=12,Y=1991    24 DEC 91 - TUE
        @GHDT  D=25,M=12,Y=1991    25 DEC 91 - WED
        @GHDT  D=26,M=12,Y=1991    26 DEC 91 - THU
        @GHDT  D=27,M=12,Y=1991    27 DEC 91 - FRI
        @GHDT  D=30,M=12,Y=1991    30 DEC 91 - MON
        @GHDT  D=31,M=12,Y=1991    31 DEC 91 - TUE
        @GHDT  D=01,M=01,Y=1992     1 JAN 92 - WED
        @GHDT  D=02,M=01,Y=1992     2 JAN 92 - THU
         SPACE 1
         DC    F'0'                END OF TABLE
         DC    10F'0'              PATCH AREA
         EJECT
*---  STORAGE DEFINITIONS.
         SPACE 1
DATAAREA DSECT
SAVEAREA DS    18F                 STANDARD SAVE AREA
         SPACE 1
DWORK    DS    D
WTOLIST WTO    'USER00I : ',MF=L   WTO LIST
WTOMSG   DS    CL8                 WTO MSG ID
WTOTXT   DS    CL106               WTO REPLY TEXT
         DS    BL2                 DESCRIPTOR CODES
         DS    BL2                 ROUTING CODES
         SPACE 1
ASID     DS    XL2                 AS-ID
         SPACE 1
MGCR    IEZMGCR DSECT=NO
         ORG   MGCRTEXT
COMMAND  DS    CL6                 REPLY COMMAND
REPLY    DS    CL2                 REPLY ID
REPLYMSG DS    CL2                 WTOR RESPONSE
REPLYTXT DS    CL1                 WTOR TEXT ...
REPLYLTH EQU   *-COMMAND
         EJECT
         ORG
         SPACE 1
* MACRO SYNTAX :      @MV  FROM,LG,POS
* --------------
*
* MACRO OPERANDS : POSITIONAL OPERANDS
* ----------------    FROM : DESIRED TEXT ADDRESS.
*                     LG   : LENGTH OF THE DESIRED TEXT.
*                     POS  : POSITION WHERE THE DESIRED TEXT WILL
*                            BE INSERTED TO COMPLETE THE GENERATED
*                            OPERATOR COMMAND.
         SPACE 1
SPOS     DS    XL1                 COMMAND TEXT RELATIVE POSITION
SLGT     DS    XL1                 TEXT MOVE INSTRUCTION LENGTH
STXT     DS    XL20                TEXT TO BE INSERTED IN COMMAND
*                           NOTE : MAY BE LONGER IF NEEDED.
         SPACE 2
DATAEND  EQU   (((*-DATAAREA)+7)/8)*8
         EJECT
*---  MAPPING OF THE MESSAGE TEXT.
         SPACE 1
MSGTEXT  DSECT
MSGID    DS    CL8                 MESSAGE ID
JOBDATA  DS    CL8                 JOB DATA (ID AND NAME)
         ORG   MSGTEXT
         DS    CL4
WTORID   DS    CL8
         SPACE 2
        IEZVX100
         EJECT
         PRINT NOGEN
         SPACE 1
        CVT    DSECT=YES
        IEECUCM FORMAT=NEW
        IEFJESCT
        IEFJSCVT
        IHAORE
        IHAASVT
        IHAASCB
        $HASPEQU
        $HFAME
        $SCAT
        $XECB
        $SVT
         SPACE 2
         END
