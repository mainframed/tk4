UJVT     TITLE 'TEST IEFUJV COMPUTATIONS.'
UJVT     START 0
         SPACE 1
* INPUT COMMANDS : USE COLUMNS 1 TO 72 INCLUDED.
* ----------------
*
* SKELETON :   VERB  FROM  TO  BY
*
*              WHEN 'TO' AND/OR 'BY' ARE OMITTED, USE A ZERO (0) TO
*              RESET THE REMAINING VALUES IF DESIRED, OTHERWISE
*              THOSE PREVIOUSLY DEFINED ARE MAINTAINED.
*              MULTIPLE COMMANDS ARE ACCEPTED ON A CARD, BUT A
*              COMMAND CANNOT BE CONTINUED ON ANOTHER CARD.
*
* VERB :       R - SET REGION IN K.
*                  I.E. : R 100 1500 100
*              I - SET I/O NUMBER IN THOUSANDS.
*                  I.E. : I 2 20 2
*              T - SET CPU TIME IN SECONDS.
*                  I.E. : T 10 300 10
*              G - EXECUTE COMPUTATIONS WITH VALUES GIVEN BY THE
*                  PREVIOUS VERBS.
*              P '...TEXT...' COUNT - SKIP PAGE SETTING '...TEXT...'
*                  AS PAGE HEADER (OPTIONAL, MAX. LENGTH 50), AND
*                  CLEARING THE PAGE COUNT WITH THE GIVEN VALUE
*                  (OPTIONAL).
*                  I.E. : P 'TEST RUN.' 50
*              L - OUTPUT ON 'SYSPRINT' ONLY (DEFAULT).
*              C - SUSPEND L OR S COMMAND, MAP CLASSES OUTPUT
*                  ON 'SYSPRINT'.
*              M - SUSPEND L OR S COMMAND, MAP PERFORMANCE GROUP
*                  NUMBERS OUTPUT ON 'SYSPRINT'.
*              X - SUSPEND L OR S COMMAND, MAP PRIORITIES OUTPUT
*                  ON 'SYSPRINT'.
*              S - SUSPEND L OR ANY MAP COMMAND, OUTPUT ON 'SYSPUNCH'
*                  CARDS HAVING THE FOLLOWING FORMAT :
*                  COL.  4 - 10 = REGION IN K.
*                       14 - 20 = I/O NUMBER IN THOUSANDS.
*                       25 - 30 = CPU TIME IN MINUTES/SECONDS
*                                 (FORMAT : MMM,SS).
*                       34 - 40 = I/O INDEX VALUE.
*                       44 - 50 = WEIGHT VALUE.
*                            52 = PRIORITY.
*                            54 = CLASS.
*                       56 - 58 = PERFORMANCE GROUP NUMBER.
         EJECT
* REMARK : WHEN REQUESTING THE MAP OUTPUT, REMEMBER THAT THE VALUES
*          FOR 'T' AND 'I' ARE RESPECTIVELY TAKEN AS X AND Y
*          COORDINATES. THIS MEANS :
*          - 'T' IS NOT CONTROLED TO SEE IF IT EXCEEDS THE MAXIMUM
*            STEPS VARIATION. FOR EACH T VALUE, A ONE LINE POSITION
*            IS USED TO STORE THE COMPUTED CLASS OR PRIORITY (MAX. =
*            100), AND A FOUR LINE POSITIONS ARE USED TO STORE THE
*            COMPUTED PERFORMANCE GROUP NUMBER (MAX. = 25).
*          - A PAGE OVERFLOW OCCURS IF 'I' EXCEEDS ABOUT 50 STEPS
*            VARIATION (FOR EACH I VALUE, A LINE IS PRINTED).
         SPACE 1
* AUTHOR :     P.A. MOINIL
* -------      COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 2
        $DEFREG
         EJECT
*        MISCELLANEOUS DEFINITIONS.
*        --------------------------
         SPACE 1
OFF      EQU   X'0F'               SET NOP OPERATION.
ON       EQU   X'F0'               SET BRANCH OPERATION.
MCF      EQU   0                   MAP CLASSES.
MPF      EQU   4                   MAP PERFORMANCE GROUP NUMBERS.
MXF      EQU   8                   MAP PRIORITIES.
         SPACE 2
*        'IEFUJV' COMMUNICATION.
*        -----------------------
         SPACE 1
LDES     DSECT                     LINE DESCRIPTION (D-ARGUMENT).
         SPACE 1
LNE      DS    0CL132,CL5
RGV      DS    CL8,CL2
IOV      DS    CL8,CL3
TMV      DS    CL4,C
TSV      DS    CL2,CL10
PRIO     DS    CL1,CL2
IOX      DS    CL8,CL2
WGV      DS    CL8,CL3
CLV      DS    CL1,CL4
PGV      DS    CL4
         SPACE 1
FILL     EQU   0+L'LNE-(*-LNE)
         DS    (FILL)C
         SPACE 1
UJVT     CSECT                     RESTORE MAIN CSECT.
         EJECT
        $UJVT
         EJECT
        $XENT  BASE=R10
         L     R15,=V(SUJVTA)
         BASR  R14,R15
         LTR   R15,R15
         BZ    *+L'*+8
         LA    R9,256
         B     EXIT
         LR    R4,R1
         ZAP   PCNT,ONE
         ZAP   LCNT,RSL
         NI    SWSL+1,OFF
         NI    SWMP+1,OFF
        $PRINT TM1,,DDMSG
         LTR   R15,R15
         BNZ   EP
        $PRINT TM2,,DDMSG
         LTR   R15,R15
         BNZ   EP
         EJECT
READ    $READ  CARD
         LTR   R15,R15
         BM    END
         BP    ER
         MVI   CARD+72,C' '
         MVC   CARD+73(7),CARD+72
        $PRINT MSG,,DDMSG
         LTR   R15,R15
         BNZ   EP
         LM    R7,R9,SCAN          START COMMANDS SCANNING.
         CLI   0(R7),C' '
         BNE   *+L'*+8
S1       BXLE  R7,R8,*-8
         B     READ
S2       CLI   0(R7),C'T'          VERB'S TEST.
         BNE   *+L'*+8
         LA    R6,CPUTM
         B     S3
         CLI   0(R7),C'R'
         BNE   *+L'*+8
         LA    R6,REGSZ
         B     S3
         CLI   0(R7),C'I'
         BNE   *+L'*+8
         LA    R6,NUMIO
         B     S3
         CLI   0(R7),C'G'
         BE    GO
         CLI   0(R7),C'P'
         BE    PT
         CLI   0(R7),C'L'
         BE    LC
         CLI   0(R7),C'S'
         BE    SC
         CLI   0(R7),C'C'
         BE    MC
         CLI   0(R7),C'M'
         BE    MP
         CLI   0(R7),C'X'
         BE    MX
         B     EC
         SPACE 1
S3       BXLE  R7,R8,*+L'*+4       SET REGION, I/O AND TIME.
         B     EC
         CLI   0(R7),C' '
         BNE   EC
         BXLE  R7,R8,*+L'*+4
         B     EC
         CLI   0(R7),C' '
         BE    *-12
         BAS   R14,CVRT
         BXLE  R7,R8,*+L'*+4
         B     READ
         CLI   0(R7),C' '
         BE    *-12
         CLI   0(R7),C'0'
         BL    S2
         BAS   R14,CVRT
         BXLE  R7,R8,*+L'*+4
         B     READ
         CLI   0(R7),C' '
         BE    *-12
         CLI   0(R7),C'0'
         BL    S2
         BAS   R14,CVRT
         B     S1
         SPACE 1
LC       NI    SWSL+1,OFF          LIST.
         NI    SWMP+1,OFF
         B     S1
         SPACE 1
SC       OI    SWSL+1,ON           SUSPEND.
         NI    SWMP+1,OFF
         B     S1
         SPACE 1
MC       MVI   OPTM,MCF            MAP.
         B     MSS
MP       MVI   OPTM,MPF
         B     MSS
MX       MVI   OPTM,MXF
MSS      NI    SWSL+1,OFF
         OI    SWMP+1,ON
         ZAP   LCNT,RSL
         B     S1
         SPACE 1
PT       ZAP   LCNT,RSL            SKIP PAGE, SET HEADER AND COUNT.
         BXLE  R7,R8,*+L'*+4
         B     READ
         CLI   0(R7),C' '
         BE    *-12
         CLI   0(R7),C''''
         BNE   T4
         BXLE  R7,R8,*+L'*+4
         B     EC
         MVI   TITT,C' '
         MVC   TITT+1(L'TITT-1),TITT
         LA    R0,L'TITT
         LA    R1,TITT
T1       CLI   0(R7),C''''
         BE    T3
T2       MVC   0(1,R1),0(R7)
         BCT   R0,*+L'*+4
         B     EC
         LA    R1,1(R1)
         BXLE  R7,R8,T1
         B     EC
T3       BXLE  R7,R8,*+L'*+4
         B     READ
         CLI   0(R7),C''''
         BE    T2
         CLI   0(R7),C' '
         BNE   EC
         BXLE  R7,R8,*+L'*+4
         B     READ
         CLI   0(R7),C' '
         BE    *-12
T4       CLI   0(R7),C'0'
         BL    S2
         LA    R6,WORK
         BAS   R14,CVRT
         MVC   PCNT(L'PCNT),CONV+L'CONV-L'PCNT
         B     S1
         EJECT
GO       STM   R7,R9,SVSCAN        EXECUTE COMPUTATIONS.
         L     R7,REGSZ
         LTR   R7,R7
         BZ    EC
         L     R8,NUMIO
         LTR   R8,R8
         BZ    EC
         L     R9,CPUTM
         LTR   R9,R9
         BZ    EC
         SPACE 1
EXEC     STM   R7,R9,REGION
        CALL   IEFUJV,(REGION,IO,TIME,TEXT,(R4)),VL
         SPACE 1
SWSL     NOP   PCHL
SWMP     NOP   MAPL
         CP    LCNT,MAXL
         BNH   PRT
         MVC   TITP,MASK
         ED    TITP,PCNT
         AP    PCNT,ONE
         ZAP   LCNT,ONE
        $PRINT TIT0
         LTR   R15,R15
         BNZ   EP
        $PRINT TIT1
         LTR   R15,R15
         BNZ   EP
        $PRINT TIT2
         LTR   R15,R15
         BNZ   EP
PRT     $PRINT LINE
         LTR   R15,R15
         BNZ   EP
         AP    LCNT,ONE
         B     TTM
         SPACE 1
MAPL     CP    LCNT,MAXL
         BNH   LOOK
         ZAP   LCNT,ONE
         B     SPG
LOOK     CL    R8,IIO
         BE    TEST
LLN     $PRINT LMAP
         LTR   R15,R15
         BNZ   EP
         CL    R7,IRG
         BE    SMP
         LA    R14,ITFLS
         LA    R15,CPUTM
         LA    R2,3
LPED     MVC   1(3,R14),MASK+3
         L     R1,0(R15)
         C     R1,MSEC
         BL    NOM
         XR    R0,R0
         D     R0,MSEC
         CVD   R1,CONV
         ED    0(4,R14),CONV+6
         B     ESC
NOM      LR    R0,R1
         MVC   1(L'TMZ,R14),TMZ
ESC      CVD   R0,CONV
         UNPK  5(2,R14),CONV+6(2)
         OI    6(R14),C'0'
         LA    R14,L'ITFLS(R14)
         LA    R15,L'CPUTM(R15)
         BCT   R2,LPED
        $PRINT TIT6
         LTR   R15,R15
         BNZ   EP
         LTR   R7,R7
         BZ    GOBS
SPG      MVC   TITP,MASK
         ED    TITP,PCNT
         AP    PCNT,ONE
        $PRINT TIT0
         LTR   R15,R15
         BNZ   EP
         ST    R7,IRG
         LA    R14,TEXT
         USING LDES,R14
         MVC   TITR,RGV
         DROP  R14
        $PRINT TIT3
         LTR   R15,R15
         BNZ   EP
        $PRINT TIT4
         LTR   R15,R15
         BNZ   EP
        $PRINT TIT5
         LTR   R15,R15
         BNZ   EP
SMP      MVC   SMAP(L'SMAP),SMAP-1
         ST    R8,IIO
         LA    R14,TEXT
         USING LDES,R14
         MVC   LIO(L'LIO),IOV
         DROP  R14
         LA    R1,SMAP
         B     SET
TEST     L     R1,IX
         CL    R1,IXL
         BNL   TTM
SET      LA    R14,TEXT
         USING LDES,R14
         XR    R15,R15
         IC    R15,OPTM
         B     *+L'*(R15)
         B     SETC
         B     SETM
         B     SETX
SETC     MVC   0(1,R1),CLV
         B     SETOUT
SETM     MVC   0(L'PGV,R1),PGV
         LA    R1,L'PGV(R1)
         B     SETOUT+L'SETOUT
SETX     MVC   0(1,R1),PRIO
         DROP  R14
SETOUT   LA    R1,1(R1)
         ST    R1,IX
         B     TTM
GOL      XR    R7,R7
         B     LLN
         SPACE 1
PCHL     MVI   PCARD,C' '
         MVC   PCARD+1(L'PCARD-1),PCARD
         LA    R1,TEXT
         USING LDES,R1
         MVC   PREG,RGV
         MVC   PIO,IOV
         MVC   PCPU(L'PCPU),TMV
         MVC   PIOX,IOX
         MVC   PWG,WGV
         MVC   PPRIO,PRIO
         MVC   PCLASS,CLV
         MVC   PPGN,PGV
         DROP  R1
        $PUNCH PCARD
         LTR   R15,R15
         BNZ   EU
         SPACE 1
TTM      LM    R1,R2,CPUTM+L'CPUTM
         LTR   R1,R1
         BZ    TIO
         LTR   R2,R2
         BZ    TTM1
         AR    R9,R2
         CLR   R9,R1
         BNH   EXEC
         B     TTM2
TTM1     CLR   R9,R1
         BE    TTM2
         LR    R9,R1
         B     EXEC
TTM2     L     R9,CPUTM
TIO      LM    R1,R2,NUMIO+L'NUMIO
         LTR   R1,R1
         BZ    TRG
         LTR   R2,R2
         BZ    TIO1
         AR    R8,R2
         CLR   R8,R1
         BNH   EXEC
         B     TIO2
TIO1     CLR   R8,R1
         BE    TIO2
         LR    R8,R1
         B     EXEC
TIO2     L     R8,NUMIO
TRG      LM    R1,R2,REGSZ+L'REGSZ
         LTR   R1,R1
         BZ    TRG2
         LTR   R2,R2
         BZ    TRG1
         AR    R7,R2
         CLR   R7,R1
         BNH   EXEC
         B     TRG2
TRG1     CLR   R7,R1
         BE    TRG2
         LR    R7,R1
         B     EXEC
TRG2     TM    SWMP+1,ON
         BO    GOL
GOBS     LM    R7,R9,SVSCAN
         B     S1
         EJECT
EC       MVI   CARD,C' '
         MVC   CARD+1(L'CARD-1),CARD
         MVI   0(R7),C'$'
        $PRINT MSG,,DDMSG
         LTR   R15,R15
         BNZ   EP
        $PRINT INVC,,DDMSG
         LTR   R15,R15
         BNZ   EP
         LA    R9,16
         B     LEAVE
EU       LA    R9,12
         B     LEAVE
ER       LA    R9,8
         B     LEAVE
EP       LA    R9,4
         B     LEAVE
END      XR    R9,R9
         EJECT
LEAVE    L     R15,=V(DUJVTA)
         BASR  R14,R15
        $RCLOSE
        $PCLOSE
        $UCLOSE
EXIT    $XRET  CC=(R9)
         EJECT
* CONVERT ROUTINE (INTEGER NUMBER) :
* ----------------------------------
*
*        R0, R1, R2, R3 = WORK REGISTERS.
*        R6 = ADDRESS OF THE WORD INTO WHICH THE BINARY VALUE OF
*              THE NUMBER IS STORED. THIS ADDRESS IS INCREMENTED
*              BY FOUR (NEXT WORD ADDRESS) AT EXIT.
*        R7, R8, R9 = SCAN POINTERS (R7 POINTS ON THE FIRST DIGIT).
*        R14 = LINK REGISTER.
*
* AT EXIT : 'ZONE' CONTAINS THE NUMBER IN EBCDIC (RIGHT JUSTIFIED).
*           'CONV' CONTAINS THE NUMBER IN PACKED (RIGHT JUSTIFIED).
         SPACE 2
CVRT     XR    R1,R1
         LA    R0,L'ZONE
         B     CVRT1
CVRT0    CLI   0(R7),C' '
         BE    CVRT2
CVRT1    CLI   0(R7),C'0'
         BL    EC
         CLI   0(R7),C'9'
         BH    EC
         LA    R1,1(R1)
         CLR   R1,R0
         BH    EC
         BXLE  R7,R8,CVRT0
CVRT2    LR    R2,R7
         SR    R2,R1
         LA    R3,ZONE+L'ZONE
         SR    R3,R1
         MVC   ZONE,ZR
         BCTR  R1,0
         EX    R1,CVRTM
         PACK  CONV,ZONE
         CVB   R0,CONV
         ST    R0,0(R6)
         LA    R6,4(R6)
         BR    R14
CVRTM    MVC   0(*-*,R3),0(R2)
         EJECT
*        CONSTANTS AND WORK-AREAS.
         SPACE 1
CONV     DC    D'0'
WORK     DC    F'0'
SCAN     DC    A(CARD,1,CARD+71)
SVSCAN   DC    3F'0'
REGION   DC    F'0'
IO       DC    F'0'
TIME     DC    F'0'
IRG      DC    F'0'
IIO      DC    F'0'
IX       DC    F'0'
IXL      DC    A(SMAP+L'SMAP)
MSEC     DC    F'60'
REGSZ    DC    3F'0'
NUMIO    DC    3F'0'
CPUTM    DC    3F'0'
DDMSG    DC    CL8'SYSLIST '
ZONE     DC    CL10' '
ZR       DC    CL10'0000000000'
PCNT     DC    PL3'+0'
LCNT     DC    PL2'+0'
RSL      DC    PL2'+99'
MAXL     DC    PL2'+50'
ONE      DC    PL1'+1'
OPTM     DC    XL1'0'
TMZ      DC    C'  0'
MASK     DC    XL6'402020202120'
         SPACE 1
         DC    AL1(L'MSG+L'CARD)
MSG      DC    CL3' '
CARD     DC    CL80' '
         DC    AL1(L'LINE)
LINE     DC    0CL133' ',C' '
TEXT     DC    CL132' '
         DC    AL1(L'LMAP)
LMAP     DC    0CL133' ',CL6' '
LIO      DC    CL5' ',CL2' '
SMAP     DC    CL100' ',CL20' '
         DC    AL1(L'PCARD)
PCARD    DC    0CL80' ',CL2' '
PREG     DC    CL8' ',CL2' '
PIO      DC    CL8' ',CL3' '
PCPU     DC    CL7' ',CL2' '
PIOX     DC    CL8' ',CL2' '
PWG      DC    CL8' ',CL1' '
PPRIO    DC    CL1' ',CL1' '
PCLASS   DC    CL1' '
PPGN     DC    CL4' '
PFILL    EQU   0+L'PCARD-(*-PCARD)
         DC    (PFILL)C' '
         EJECT
         DC    AL1(TM1L)
TM1      DC    C'1  INPUT COMMANDS LIST :'
TM1L     EQU   *-TM1
         DC    AL1(TM2L)
TM2      DC    CL3' '
         DC    (TM1L-3)C'-'
TM2L     EQU   *-TM2
         DC    AL1(TIT0L)
TIT0     DC    C'1',CL2' '
TITT     DC    CL50' ',CL10' ',C'PAGE'
TITP     DC    CL6' '
TIT0L    EQU   *-TIT0
         DC    AL1(TIT1L)
TIT1     DC    C'0',CL4' ',C'REGION(K)       I/O  CPU(M,S)       PRIO'
         DC    C' I/O INDEX    WEIGHT CLASS   PGN'
TIT1L    EQU   *-TIT1
         DC    AL1(TIT2L)
TIT2     DC    C' ',CL4' ',C'---------  --------  --------       ----'
         DC    C' --------- --------- -----   ---'
TIT2L    EQU   *-TIT2
         DC    AL1(TIT3L)
TIT3     DC    C'0  REGION :'
TITR     DC    CL8' ',C'K.'
TIT3L    EQU   *-TIT3
         DC    AL1(L'TIT4)
TIT4     DC    C'0  I/O(1000)'
         DC    AL1(L'TIT5)
TIT5     DC    C'   ---------'
         DC    AL1(TIT6L)
TIT6     DC    C'0  CPU(M,S) : FROM'
ITFLS    DC    C' MMM,SS TO',C' MMM,SS BY MMM,SS.'
TIT6L    EQU   *-TIT6
         DC    AL1(L'INVC)
INVC     DC    C'   INVALID CODING.'
         SPACE 1
        LTORG
         SPACE 1
         END
