TUTO     TITLE 'TUTORIALS ISPF-PANELS LISTER.'
        PRINT  OFF
         MACRO
&LABEL  @T     &TNR,&TCC,&TXT
.*
.* MACRO : INTERNAL USE TO GENERATE 'MANUAL' TABLE.
.* ------- ARGUMENTS : TNR - PRINT LINE REPEAT NUMBER (DEFAULT = 1).
.*                     TCC - ASA CARRIAGE CONTROL CHARACTER (DEFAULT
.*                           IS SINGLE SPACE).
.*                     TXT - TEXT (DEFAULT IS A BLANK LINE).
.*
         LCLC  &N,&C
&N       SETC  '1'
&C       SETC  ' '
         AIF   (T'&TNR EQ 'O').L01
&N       SETC  '&TNR'
.L01     AIF   (T'&TCC EQ 'O').L02
&C       SETC  '&TCC'
.L02     AIF   (T'&TXT EQ 'O').L03
&LABEL   DC    AL1(&N,L'T&SYSNDX),CL1'&C'
T&SYSNDX DC    C&TXT
         MEXIT
.L03     ANOP
&LABEL   DC    AL1(&N,0),CL1'&C'
         MEND
        PRINT  ON
         SPACE 1
TUTOLIST START 0
         SPACE 1
* PURPOSE :    PRODUCE A LIST OF THE TUTORIALS FROM THE ISPF-PANELS.
*
* JCL :        //...    JOB  ...
*              //LIST   EXEC PGM=TUTOLIST,PARM=...
*              //SYSPDS   DD DSN=...ISPF PANELS LIBRARY...,DISP=SHR
*              //SYSINDEX DD ...INDEX DATA-SET OUTPUT IF REQUESTED...
*              //SYSPRINT DD ...LIST DATA-SET OUTPUT...
*              //SYSIN    DD *
*              ... CONTROL CARDS ...
*              /*
*
* CONTROL CARDS :
*          1 - HEADER CARDS : MUST CONTAIN '*HDR ' IN COLUMNS 1 TO 5
*              FOLLOWED BY A HEADER TEXT (COLUMNS 6 UP TO 72 MAXIMUM).
*              AN INDEX HEADER CARD ('*HIX ') IS ALSO ALLOWED AS
*              INPUT CONTROL CARD WHEN THE GENERAL INDEX IS REQUESTED
*              (PARM=I IS SPECIFIED), BUT IT MUST BE ENCOUNTERED
*              BEFORE ANY PANELS NAMES CARDS UNLESS IT IS NOT
*              CONSIDERED.
*          2 - MANUAL NAME CARD : MUST CONTAIN '*MNT ' IN COLUMNS 1 TO
*              5 FOLLOWED BY A MANUAL NAME TEXT (COLUMNS 6 UP TO 72
*              MAXIMUM). THIS CONTROL CARD MUST BE ENCOUNTERED BEFORE
*              ANY PANELS NAMES CARDS UNLESS IT IS NOT CONSIDERED.
*          3 - VARIABLES NAMES CARDS : MUST CONTAIN '*VAR ' IN COLUMNS
*              1 TO 5 FOLLOWED BY THE PANELS VARIABLES NAMES WHICH
*              MUST BE ELIMINATED FOR THE LIST. THE NAMES MAY BE CODED
*              INTO CARDS COLUMNS 6 UP TO 72 INCLUDED, AND THEY MUST
*              BE SEPARATED FROM EACH OTHER BY AT LEAST ONE BLANK. A
*              NAME MUST STAY ENTIRELY IN A CARD (DO NOT SPLIT IT IN
*              TWO CARDS).
*          4 - REPLACE TEXT CARDS : MUST CONTAIN '*REP ' IN COLUMNS 1
*              TO 5 FOLLOWED BY THE TEXT MATCH STRING AND THE TEXT
*              REPLACEMENT STRING. THE TEXT STRINGS MUST BE ENCLOSED
*              INTO APOSTROPHES (IF AN APOSTROPHE IS PART OF THE TEXT,
*              IT MUST BE DOUBLED). IF THE REPLACEMENT STRING IS NOT
*              SPECIFIED, IT IS ASSUMED AS A NULL STRING. ONLY ONE
*              REPLACEMENT IS ACCEPTED BY CONTROL CARD.
*          5 - PANELS NAMES CARDS : VARIABLE CODED INTO CARDS COLUMNS
*              1 TO 72 INCLUDED, THE NAMES MUST BE SEPARATED FROM EACH
*              OTHER BY AT LEAST ONE BLANK. A NAME MUST STAY ENTIRELY
*              IN A CARD (DO NOT SPLIT IT IN TWO CARDS).
*          6 - RESET CARDS : MUST CONTAIN '*RZV ' OR '*RZR ' IN COLUMNS
*              1 TO 5 AND ARE USED TO RESET RESPECTIVELY ALL VARIABLES
*              NAMES OR REPLACE TEXTS PREVIOUSLY DEFINED THROUGH THE
*              CORRESPONDING CONTROL CARDS.
         EJECT
* PARM FIELD : PARAMETERS CAN BE SPECIFIED IN ANY ORDER, BUT MUST BE
*              SEPARATED FROM EACH OTHER BY A COMMA.
*              N - MAY BE USED TO HAVE THE PANEL NAMES IN THE LIST
*              I - TO OBTAIN A GENERAL INDEX (AT EACH HEADER CARD
*                  THE CORRESPONDING PAGE NUMBER).
*
* AUTHOR  :    MOINIL P.A. - COMPUTING CENTRE
*              J.R.C. - ISPRA ESTABLISHMENT
*              21020 ISPRA (VA), ITALY
         SPACE 2
        $DEFREG
         EJECT
*        MISCELLANEOUS DEFINITIONS.
         SPACE 1
@OFF     EQU   X'0F'               SET SWITCH TO NOP
@ON      EQU   X'F0'               SET SWITCH TO BRANCH
         SPACE 2
        $XENT  BASE=(R11,R12)
         EJECT
         L     R2,0(R1)            ANALYZE PARM FIELD
         LH    R1,0(R2)
         LTR   R1,R1
         BNP   NOPARM
PRMLOOP  CLI   2(R2),C','          SEPARATOR ?
         BE    PRMNXT              YES
         CLI   2(R2),C'N'          PANELS NAMES ?
         BE    SETPNL              YES
         CLI   2(R2),C'I'          INDEX ?
         BE    SETPIX              YES
        WTO    MF=(E,MSGINV)
         LA    R10,4               EXIT CC = 4
         B     EXIT
SETPNL   OI    SWITCH,FPNML
         B     PRMNXT
SETPIX   OI    SWITCH,FPIXL
         OI    SWPRSS,FHIXA
PRMNXT   LA    R2,1(R2)
         BCT   R1,PRMLOOP
NOPARM   OI    SWPRSS,FMNTA
        $MOPEN LRECL               ISPF PANELS LIBRARY
         LTR   R10,R15
         BNZ   EXIT
         CLC   LRECL,=F'80'        VALID LOGICAL RECORD LENGTH
         BE    RCTL
        WTO    MF=(E,MSGLRL)
         LA    R10,8               EXIT CC = 8
         B     EXIT
RCTL    $READ  CARD                READ A CARD
         LTR   R10,R15
         BM    SWDTE               EOF
         BNZ   EXIT
         MVC   SCANPT,=A(CARD)
         LM    R3,R5,SCANPT
         CLC   CARD(5),=CL5'*HDR ' SET HEADER TEXT ?
         BE    SHDR                YES
         TM    SWPRSS,FMNTA        CAN ACCEPT MANUAL CARD ?
         BZ    THIXV               NO
         CLC   CARD(5),=CL5'*MNT ' SET MANUAL TEXT ?
         BE    SMNT                YES
THIXV    TM    SWPRSS,FHIXA        CAN ACCEPT INDEX HEADER CARD ?
         BZ    TSRZV               NO
         CLC   CARD(5),=CL5'*HIX ' SET HEADER TEXT FOR INDEX ?
         BNE   TSRZV               NO
         MVI   HXTXT,C' '
         MVC   HXTXT+1(L'HXTXT-1),HXTXT
         LA    R2,HXTXT
         B     SETH
SMNT    $GDATE DTDAY,,WORK
         LTR   R15,R15
         BZ    DTEOK
         LA    R10,100(R15)        EXIT CC = 10X
        WTO    MF=(E,MSGDTE)
         B     EXIT
DTEOK    MVC   DTDTE(2),WORK+2
         MVC   DTDTE+3(2),WORK
         MVC   DTDTE+6(2),WORK+4
         MVI   NTTXT,C' '
         MVC   NTTXT+1(L'NTTXT-1),NTTXT
         LA    R2,NTTXT
         NI    SWDTS+1,@OFF
         NI    SWDTE+1,@OFF
         B     SETH
SHDR     MVI   HDTXT,C' '
         MVC   HDTXT+1(L'HDTXT-1),HDTXT
         LA    R2,HDTXT
         NI    SWITCH,255-FLFLF
         TM    SWITCH,FPIXL
         BZ    *+L'*+4
         OI    SWITCH,FHDIX
SETH     LA    R3,5(R3)            SCAN TO HANDLE HEADER TEXT
         CLI   0(R3),C' '          SEARCH START TEXT
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     RCTL
         CLI   0(R5),C' '          SEARCH END TEXT
         BNE   *+L'*+4
         BCT   R5,*-8
         SLR   R5,R3               COMPUTE EX LENGTH OF TEXT
         EX    R5,*+L'*+4          MOVE HEADER TEXT
         B     RCTL
         MVC   0(*-*,R2),0(R3)    << EXECUTED >>
TSRZV    CLC   CARD(5),=CL5'*RZV ' RESET ALL VARIABLES NAMES ?
         BNE   TSVAR               NO
         L     R1,VARSTR           YES, SET CURRENT POINTER
         ST    R1,VARCUR             TO LOOK AT START ADDRESS
         B     RCTL
TSVAR    CLC   CARD(5),=CL5'*VAR ' VARIABLES NAMES DEFINITION ?
         BNE   TSRZR               NO
         ICM   R1,B'1111',VARCUR
         BNZ   VARSC
         L     R0,VARLGH           ACQUIRE SPACE
        GETMAIN R,LV=(0)
         ST    R1,VARSTR           START ADDRESS
         ST    R1,VARCUR           CURRENT POINTER
         LR    R0,R1
         AL    R1,VARLGH
         ST    R1,VAREND           END + 1 ADDRESS
         L     R1,VARLGH
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR TO ALL ZEROS
         L     R1,VARCUR
VARSC    LA    R3,5(R3)            SCAN TO EXTRACT VARIABLE NAMES
         CLI   0(R3),C' '          SEARCH A VARIABLE NAME
         BNE   *+L'*+8
VARSRC   BXLE  R3,R4,*-8
         B     RCTL
         LR    R2,R3               START OF A NAME
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         LR    R14,R3              COMPUTE NAME LENGTH
         SLR   R14,R2
         LA    R15,0(R1,R14)       SPACE NEEDED
         CL    R15,VAREND          MAY BE STORED ?
         BNL   VAROV               NO, SPACE OVERFLOW
         BCTR  R14,0
         STC   R14,0(R1)           STORE NAME EX LENGTH
         EX    R14,MVVAR           STORE NAME
         LA    R1,1(R15)
         ST    R1,VARCUR           NEW CURRENT POINTER
         B     VARSRC
MVVAR    MVC   1(*-*,R1),0(R2)     << EXECUTED >>
VAROV   WTO    MF=(E,MSGVOV)
         LA    R10,12              EXIT CC = 12
         B     EXIT
TSRZR    CLC   CARD(5),=CL5'*RZR ' RESET ALL TEXT STRINGS ?
         BNE   TSREP               NO
         L     R1,REPSTR           YES, SET CURRENT POINTER
         ST    R1,REPCUR             TO LOOK AT START ADDRESS
         B     RCTL
TSREP    CLC   CARD(5),=CL5'*REP ' TEXT STRINGS DEFINITION ?
         BNE   SCAN                NO
         ICM   R1,B'1111',REPCUR
         BNZ   REPSC
         L     R0,REPLGH           ACQUIRE SPACE
        GETMAIN R,LV=(0)
         ST    R1,REPSTR           START ADDRESS
         ST    R1,REPCUR           CURRENT POINTER
         LR    R0,R1
         AL    R1,REPLGH
         ST    R1,REPEND           END + 1 ADDRESS
         L     R1,REPLGH
         LA    R14,*
         XR    R15,R15
         MVCL  R0,R14              CLEAR TO ALL ZEROS
         L     R1,REPCUR
REPSC    LA    R3,5(R3)            SCAN TO EXTRACT TEXT STRINGS
         CLI   0(R3),C' '          SEARCH THE MATCH STRING
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     RCTL
         CLI   0(R3),C''''
         BNE   ERRITD
         BXLE  R3,R4,*+L'*+4
         B     ERRITD
         LR    R2,R3               START OF MATCH STRING
REPSC1   BXLE  R3,R4,*+L'*+4
         B     ERRITD
         CLI   0(R3),C''''
         BNE   REPSC1
         CLR   R3,R5
         BNL   ERRITD
         CLI   1(R3),C' '
         BE    REPSC2              END OF MATCH STRING
         CLI   1(R3),C''''
         BNE   ERRITD
         LR    R15,R5              DOUBLE APOSTROPHES, SHIFT
         SLR   R15,R3
         BCTR  R15,0
         EX    R15,SHIFT
         MVI   0(R5),C' '
         B     REPSC1
SHIFT    MVC   0(*-*,R3),1(R3)     << EXECUTED >>
REPSC2   LR    R14,R3              COMPUTE MATCH STRING LENGTH
         SLR   R14,R2
         BXLE  R3,R4,*+L'*+6       SEARCH THE REPLACE STRING
         XR    R0,R0               NULL REPLACE STRING
         B     REPSC5
         CLI   0(R3),C' '
         BE    *-14
         CLI   0(R3),C''''
         BNE   ERRITD
         BXLE  R3,R4,*+L'*+4
         B     ERRITD
         LR    R6,R3               START OF REPLACE STRING
REPSC3   BXLE  R3,R4,*+L'*+4
         B     ERRITD
         CLI   0(R3),C''''
         BNE   REPSC3
         CLR   R3,R5
         BNL   ERRITD
         CLI   1(R3),C' '
         BE    REPSC4              END OF REPLACE STRING
         CLI   1(R3),C''''
         BNE   ERRITD
         LR    R15,R5              DOUBLE APOSTROPHES, SHIFT
         SLR   R15,R3
         BCTR  R15,0
         EX    R15,SHIFT
         MVI   0(R5),C' '
         B     REPSC3
REPSC4   LR    R0,R3               COMPUTE REPLACE STRING LENGTH
         SLR   R0,R6
REPSC5   LA    R15,1(R14)          SPACE NEEDED
         ALR   R15,R0
         ALR   R15,R1
         CL    R15,REPEND          MAY BE STORED ?
         BNL   REPOV               NO, SPACE OVERFLOW
         BCTR  R14,0
         STC   R14,0(R1)           STORE TEXT MATCH EX LENGTH
         EX    R14,MVMTX           STORE TEXT MATCH
         LTR   R3,R0
         BP    *+L'*+8
         MVI   1(R1),X'FF'         INDICATE NULL REPLACEMENT STRING
         B     *+L'*+14
         LA    R2,3(R1,R14)
         BCTR  R3,0
         STC   R3,1(R1)            STORE TEXT REPLACE EX LENGTH
         EX    R3,MVRTX            STORE TEXT REPLACEMENT
         LA    R1,1(R15)
         ST    R1,REPCUR           NEW CURRENT POINTER
         B     RCTL
MVMTX    MVC   2(*-*,R1),0(R2)     << EXECUTED >>
MVRTX    MVC   0(*-*,R2),0(R6)     << EXECUTED >>
ERRITD  WTO    MF=(E,MSGITD)
         LA    R10,16              EXIT CC = 16
         B     EXIT
REPOV   WTO    MF=(E,MSGROV)
         LA    R10,20              EXIT CC = 20
         B     EXIT
SCAN     NI    SWPRSS,255-FMNTA-FHIXA
         CLI   0(R3),C' '          SEARCH A NAME
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     RCTL
         LR    R1,R3               START OF A NAME
         BXLE  R3,R4,*+L'*+4
         B     *+L'*+8
         CLI   0(R3),C' '
         BNE   *-12
         STM   R3,R5,SCANPT
         LR    R2,R3               COMPUTE LENGTH OF NAME
         SR    R2,R1
         CH    R2,=H'8'
         BNH   MVNM
         MVC   PNML(L'PNML),0(R1)
        WTO    MF=(E,MSGNML)
         LA    R10,24              EXIT CC = 24
         B     EXIT
MVNM     MVC   PNAME,=CL8' '
         BCT   R2,*+L'*+6
         MVC   PNAME(*-*),0(R1)    << EXECUTED >>
         EX    R2,*-6              GET NAME
        $MFIND PNAME               SET TO READ MEMBER
         LTR   R10,R15
         BNZ   EXIT
         L     R0,=A(PANEL)        RESET PANEL LINES POOL
         LR    R7,R0
         L     R1,=A(24*L'PANEL)
         LA    R14,*
         XR    R15,R15
         ICM   R15,B'1000',=CL8' '
         MVCL  R0,R14
         L     R6,=A(TRTAB)        RESET TRANSLATE TABLE
         XC    0(256,R6),0(R6)
         NI    SWITCH,255-FBODY-FATTR-FTRTB
RTXT    $MREAD TEXT                READ MEMBER TEXT
         LTR   R10,R15
         BM    SWDTS               NO MORE, END OF MEMBER TEXT
         BNZ   EXIT
         TM    SWITCH,FBODY        BODY SECTION CURRENT ?
         BO    PRBDY               YES
         TM    SWITCH,FATTR        ATTRIBUTE SECTION CURRENT ?
         BO    TBODY               YES
         CLC   TEXT(6),=CL6')ATTR '     ATTRIBUTE SECTION ?
         BNE   TBODY               NO
         OI    SWITCH,FATTR        YES
LDFLT    LM    R3,R5,TEXTPT        LOOK FOR DEFAULT
         CLI   0(R3),C' '
         BNE   *+L'*+8
SDFLT    BXLE  R3,R4,*-8
         B     RTXT
         CLC   0(8,R3),=CL8'DEFAULT('
         BE    HDFLT
         BXLE  R3,R4,*+L'*+4
         B     RTXT
         CLI   0(R3),C' '
         BNE   *-12
         B     SDFLT
HDFLT    LA    R3,8(R3)
         XR    R1,R1
         CLI   0(R3),C')'
         BE    *+L'*+12
         IC    R1,0(R3)
         STC   R1,0(R1,R6)
         BXLE  R3,R4,*-16
         OI    SWITCH,FTRTB        SAY TRANSLATE TABLE DEFAULTS BUILDED
         B     RTXT
TBODY    CLC   TEXT(6),=CL6')BODY '     BODY SECTION ?
         BNE   TEST                NO
         OI    SWITCH,FBODY        YES
         B     LDFLT
TEST     TM    SWITCH,FATTR        ATTRIBUTE SECTION CURRENT ?
         BZ    STBDY               NO
         LA    R3,TEXT             LOOK FOR DEFINITION
         LM    R4,R5,TEXTPT+4
         CLI   0(R3),C' '
         BNE   *+L'*+8
         BXLE  R3,R4,*-8
         B     RTXT
         LR    R15,R3
         CLI   1(R3),C' '          ONLY ONE CHARACTER ?
         BNE   RTXT                NO, BYPASS, UNKNOWN OR COMMENT
         BXLE  R3,R4,*+L'*+4
         B     RTXT
         CLI   0(R3),C' '
         BE    *-12
         CLC   0(5,R3),=CL5'TYPE('
         BNE   RTXT                BYPASS, UNKNOWN
         XR    R1,R1
         IC    R1,0(R15)
         STC   R1,0(R1,R6)
         B     RTXT
STBDY    OI    SWITCH,FBODY        SET BODY SECTION CURRENT
PRBDY    TM    SWITCH,FTRTB        TRANSLATE TABLE DEFAULTS BUILDED ?
         BO    MVINP               YES
         LA    R0,L'DEFLT          NO, BUILD IT WITH DEFAULTS
         XR    R1,R1
         LA    R15,DEFLT
         IC    R1,0(R15)
         STC   R1,0(R1,R6)
         LA    R15,1(R15)
         BCT   R0,*-12
         OI    SWITCH,FTRTB        SAY TRANSLATE TABLE DEFAULTS BUILDED
MVINP    CLI   TEXT,C')'           END OF BODY SECTION ?
         BE    SWDTS               YES
         LA    R1,TEXT
         LA    R15,L'TEXT
         XR    R2,R2
CLOOP    LR    R0,R1
         EX    R15,TRINP           CLEAN LINE
         BZ    EXREP               BRANCH LINE CLEANED
         BP    CLLAST              BRANCH IF LAST BYTE
         MVI   0(R1),C' '          CLEAN BYTE
         LR    R14,R1              COMPUTE NUMBER
         SLR   R14,R0                OF BYTES
         LA    R14,1(R14)              PROCESSED
         LA    R1,1(R1)            NEXT POINTER
         SLR   R15,R14             REMAINING BYTES
         XR    R2,R2               LOOK IF VARIABLE NAME
         ICM   R14,B'1111',VARSTR    TO BE ELIMINATED
         BZ    CLOOP
SCVART   CL    R14,VARCUR
         BNL   CLOOP
         IC    R2,0(R14)
         EX    R2,CLVNME
         BE    RSVAR
         LA    R14,2(R2,R14)
         B     SCVART
RSVAR    EX    R2,RSVNME
         LA    R2,1(R2)
         AR    R1,R2
         SR    R15,R2
         BP    CLOOP
         B     EXREP
TRINP    TRT   0(*-*,R1),0(R6)     << EXECUTED >>
CLVNME   CLC   0(*-*,R1),1(R14)    << EXECUTED >>
RSVNME   MVC   0(*-*,R1),=CL8' '   << EXECUTED >>
CLLAST   MVI   0(R1),C' '          CLEAN LAST BYTE
EXREP    L     R14,REPSTR
         CL    R14,REPCUR          LOOK IF STRING REPLACEMENTS
         BNL   MVTOPP              NO
         XR    R15,R15             YES, PROCESS
         IC    R15,0(R14)
         LA    R3,TEXT
         LM    R4,R5,TEXTPT+4
EXR1     CLI   0(R3),C' '
         BNE   EXR4
EXR2     BXLE  R3,R4,EXR1
         CLI   1(R14),X'FF'
         BNE   EXR3
         LA    R14,3(R14,R15)
         B     EXREP+L'EXREP
EXR3     XR    R1,R1
         IC    R1,1(R14)
         LA    R14,4(R14,R15)
         ALR   R14,R1
         B     EXREP+L'EXREP
EXR4     EX    R15,EXRCLC
         BNE   EXR2
         CLI   1(R14),X'FF'
         BNE   EXR5
         LA    R1,1(R3,R15)        NULL STRING = DELETE
         MVC   0(L'TEXT,R3),0(R1)
         B     EXR4
EXR5     XR    R1,R1
         IC    R1,1(R14)
         CLR   R15,R1
         BH    EXR6
         BL    EXR7
         LA    R2,3(R14,R15)       MATCH .EQ. REPLACE
         EX    R1,EXRMV1
         ALR   R3,R15
         B     EXR2
EXR6     LA    R2,3(R14,R15)       MATCH .GT. REPLACE
         EX    R1,EXRMV1
         LA    R2,1(R3,R15)
         LA    R3,1(R3,R1)
         MVC   0(L'TEXT,R3),0(R2)
         B     EXR1
EXR7     LR    R0,R1               MATCH .LT. REPLACE
         LA    R2,1(R3,R15)
         LR    R1,R5
         SLR   R1,R2
         EX    R1,EXRMV2
         STM   R1,R2,WORK
         LR    R1,R0
         LA    R2,3(R14,R15)
         EX    R1,EXRMV1
         LA    R3,1(R3,R1)
         LM    R1,R2,WORK
         EX    R1,EXRMV3
         MVI   TEXT+L'TEXT,C' '
         MVC   TEXT+L'TEXT+1(L'TEXT-1),TEXT+L'TEXT
         B     EXR2
EXRCLC   CLC   0(*-*,R3),2(R14)    << EXECUTED >>
EXRMV1   MVC   0(*-*,R3),0(R2)     << EXECUTED >>
EXRMV2   MVC   L'TEXT(*-*,R2),0(R2)     << EXECUTED >>
EXRMV3   MVC   0(*-*,R3),L'TEXT(R2)     << EXECUTED >>
MVTOPP   MVC   6(L'TEXT,R7),TEXT   MOVE LINE TO PANEL POOL
         AL    R7,PLGTH
         B     RTXT
SWDTS    B     PPNLL
         OI    SWDTS+1,@ON
         XR    R5,R5
         TM    SWITCH,FPIXL        INDEX REQUESTED ?
         BZ    *+L'*+4             NO
         LA    R5,DDIX
         BAS   R8,PMNTX
PPNLL    TM    SWITCH,FLFLF
         BO    HALFPG
         MVC   HDPGN,=XL6'4B2020202120'
         ED    HDPGN,PGN
         AP    PGN,=PL1'+1'
        $PRINT HDLINE,PLGTH        HEADER PAGE LINE
         LTR   R10,R15
         BNZ   EXIT
         MVI   PNLCC,C'0'          SET DOUBLE SPACE
         TM    SWITCH,FPIXL+FHDIX  INDEX REQUESTED ?
         BNO   HALFPG+L'HALFPG     NO OR NO HEADER CHANGE
         MVC   IXTXT,HDTXT         SET HEADER TEXT
         LA    R0,IXTXT
         LA    R1,IXTXT+L'IXTXT-2
PIXLN1   CLC   0(2,R1),=CL8' '
         BNE   PIXLN2
         MVI   1(R1),C'.'
         BCTR  R1,0
         BCTR  R1,0
         CLR   R1,R0
         BH    PIXLN1
         CLC   0(2,R1),=CL8' '
         BNE   PIXLN2
         MVC   0(2,R1),=CL2'??'
PIXLN2   MVC   IXPGN,HDPGN         SET WHERE PAGE NUMBER
         LA    R1,IXPGN
         CLI   0(R1),C'.'
         BNE   *+L'*+12
         MVI   0(R1),C' '
         LA    R1,1(R1)
         B     *-16
         CP    XLNE,=P'+55'
         BL    PIXLN3
         MVC   HXPGN,=XL6'4B2020202120'
         ED    HXPGN,XPGN
        $PRINT HXLINE,PLGTH,DDIX   INDEX HEADER LINE
         LTR   R10,R15
         BNZ   EXIT
        $PRINT TXLINE,PLGTH,DDIX   INDEX TITLE LINE
         LTR   R10,R15
         BNZ   EXIT
        $PRINT SXLINE,PLGTH,DDIX   INDEX UNDER LINE
         LTR   R10,R15
         BNZ   EXIT
         AP    XPGN,=P'+1'
         ZAP   XLNE,=P'+5'
         MVI   IXCC,C'0'           SET DOUBLE SPACE
PIXLN3  $PRINT IXLINE,PLGTH,DDIX   INDEX LINE
         LTR   R10,R15
         BNZ   EXIT
         AP    XLNE,=P'+1'
         MVI   IXCC,C' '           SET SINGLE SPACE
         NI    SWITCH,255-FHDIX
         B     HALFPG+L'HALFPG
HALFPG   MVI   PNLCC,C'-'          SET TRIPLE SPACE
         XI    SWITCH,FLFLF
         L     R2,=A(PANEL)        ADDRESS OF PANEL LINES
         TM    SWITCH,FPNML
         BZ    NOPNM
         MVC   PNLNM,PNAME
        $PRINT PNLINE,PLGTH        PANEL NAME LINE
         LTR   R10,R15
         BNZ   EXIT
         B     NOPNM+L'NOPNM
NOPNM    MVC   0(1,R2),PNLCC
         LA    R3,24
LOOP    $PRINT (R2),PLGTH          PANEL LINE
         LTR   R10,R15
         BNZ   EXIT
         AL    R2,PLGTH
         BCT   R3,LOOP
         LM    R3,R5,SCANPT
         B     SCAN
SWDTE    B     SETCC
         XR    R5,R5
         BAS   R8,PMNTX
SETCC    XR    R10,R10             EXIT CC = 0
EXIT     ICM   R1,B'1111',REPSTR
         BZ    FRVAR
         L     R0,REPLGH
        FREEMAIN R,A=(1),LV=(0)
FRVAR    ICM   R1,B'1111',VARSTR
         BZ    CLALL
         L     R0,VARLGH
        FREEMAIN R,A=(1),LV=(0)
CLALL   $MCLOSE
        $RCLOSE
        $PCLOSE
        $XRET  CC=(R10)
         SPACE 2
*        PRINT MANUAL PAGE ROUTINE.
         SPACE 1
PMNTX    NI    SWMNT+1,@OFF
PMNTX1   L     R2,=A(MANUAL)
         XR    R3,R3
         LR    R4,R3
PMNTX2   ICM   R3,B'0001',0(R2)
         BZ    PMNTX4
         MVC   MTCC(1),2(R2)
         MVI   MTTXT,C' '
         MVC   MTTXT+1(L'MTTXT-1),MTTXT
         ICM   R4,B'0001',1(R2)
         BZ    PMNTX3
         LR    R1,R4
         BCTR  R1,0
         EX    R1,PMNTXMV
PMNTX3  $PRINT MTLINE,PLGTH,(R5)
         LTR   R10,R15
         BNZ   EXIT
         BCT   R3,PMNTX3
         LA    R2,3(R4,R2)
         B     PMNTX2
PMNTX4  $PRINT NTLINE,PLGTH,(R5)
         LTR   R10,R15
         BNZ   EXIT
        $PRINT DTLINE,PLGTH,(R5)
         LTR   R10,R15
         BNZ   EXIT
SWMNT    BR    R8
         OI    SWMNT+1,@ON
         B     PMNTX1
PMNTXMV  MVC   MTTXT(*-*),3(R2)    << EXECUTED >>
         EJECT
*        CONSTANTS AND WORK AREAS.
*        -------------------------
         SPACE 1
SCANPT   DC    A(*-*,1,CARD+71)
TEXTPT   DC    A(TEXT+6,1,TEXT+79)
WORK     DC    2F'0'
VARSTR   DC    F'0'
VARCUR   DC    F'0'
VAREND   DC    F'0'
VARLGH   DC    F'1024'
REPSTR   DC    F'0'
REPCUR   DC    F'0'
REPEND   DC    F'0'
REPLGH   DC    F'1024'
LRECL    DC    F'0'
PLGTH    DC    A(L'PANEL)
         SPACE 1
CARD     DC    CL80' '
TEXT     DC    CL80' ',CL80' '
PNAME    DC    CL8' '
DDIX     DC    CL8'SYSINDEX'
         SPACE 1
MTLINE   DS    0CL86               (MUST MATCH L'PANEL)
MTCC     DC    CL6' '
MTTXT    DC    CL70' ',CL10' '
NTLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL13'0     NAME : '
NTTXT    DC    CL70' ',CL3' '
DTLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL13'0     DATE : '
DTDTE    DC    CL8'  /  /  ',CL4' (  '
DTDAY    DC    CL20' ',CL41') '
HDLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL6'1 '
HDTXT    DC    CL70' ',CL4'PAGE'
HDPGN    DC    CL6' '
PNLINE   DS    0CL86               (MUST MATCH L'PANEL)
PNLCC    DC    CL6'0 ',CL13'PANEL NAME :'
PNLNM    DC    CL8' ',CL59' '
HXLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL6'1 '
HXTXT    DC    CL70'GENERAL INDEX. ',CL4'PAGE'
HXPGN    DC    CL6' '
TXLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL6'0 ',CL70'CONTENTS ',CL4' ',CL6' PAGE '
SXLINE   DS    0CL86               (MUST MATCH L'PANEL)
         DC    CL6'  ',CL70'-------- ',CL4' ',CL6'------'
IXLINE   DS    0CL86               (MUST MATCH L'PANEL)
IXCC     DC    CL6' '
IXTXT    DC    CL70' ',CL4' '
IXPGN    DC    CL6' '
         EJECT
PGN      DC    PL3'+1'
XPGN     DC    PL3'+1'
XLNE     DC    PL2'+60'
DEFLT    DC    CL3'%+_'
         SPACE 1
SWITCH   DC    XL1'0'
FLFLF    EQU   X'01'               FLIP-FLOP, 2 PANELS PER PAGE
FBODY    EQU   X'02'               BODY SECTION
FATTR    EQU   X'04'               ATTRIBUTE SECTION
FTRTB    EQU   X'08'               TRANSLATE TABLE DEFAULTS BUILDED
FPNML    EQU   X'10'               PRINT PANEL NAME LINE
FPIXL    EQU   X'20'               PRINT GENERAL INDEX
FHDIX    EQU   X'40'               SET HEADER TO INDEX
SWPRSS   DC    XL1'0'
FMNTA    EQU   X'80'               ACCEPT MANUAL TEXT
FHIXA    EQU   X'40'               ACCEPT INDEX HEADER TEXT
         SPACE 1
        LTORG
         EJECT
        PRINT  NOGEN
MSGINV  WTO    '--- INVALID PARM= FIELD SPECIFIED.',                   1
               ROUTCDE=11,DESC=7,MF=L
MSGLRL  WTO    '--- SYSPDS   - LOGICAL RECORD LENGTH IS NOT 80.',      1
               ROUTCDE=11,DESC=7,MF=L
MSGITD  WTO    '--- SYSIN    - INVALID TEXT STRING DELIMITERS.',       1
               ROUTCDE=11,DESC=7,MF=L
MSGROV  WTO    '--- REPLACE TEXTS AREA OVERFLOW.',                     1
               ROUTCDE=11,DESC=7,MF=L
MSGVOV  WTO    '--- VARIABLES NAMES AREA OVERFLOW.',                   1
               ROUTCDE=11,DESC=7,MF=L
MSGNML  WTO    '--- SYSIN    -         ... NAME TOO LONG.',            1
               ROUTCDE=11,DESC=7,MF=L
PNML     EQU   MSGNML+19,8
MSGDTE  WTO    '--- GET CURRENT DAY ROUTINE ERROR.',                   1
               ROUTCDE=11,DESC=7,MF=L
         EJECT
         DS    0F  - - - - - - - - END OF BASE REGISTERS ADDRESSABLITY
TRTAB    DC    XL256'0'
PANEL    DC    24CL86' '
         SPACE 1
MANUAL   DS    0F
      @T ,1
      @T 5,0
      @T ,,' '
      @T ,,'                                    COMMISSION OF THE'
      @T ,,'               *                   EUROPEAN COMMUNITIES'
      @T ,,'          *         *'
      @T ,,' '
      @T ,,'      *                 *         J       R       C'
      @T ,,'                                   O       E       E'
      @T ,,'                                    I       S       N'
      @T ,,'    *                     *          N       E       T'
      @T ,,'                                      T       A       R'
      @T ,,'                                               R       E'
      @T ,,'      *                 *                       C'
      @T ,,'                                                 H'
      @T ,,'          *         *'
      @T ,,'               *'
      @T ,,'                                  - ISPRA ESTABLISHMENT -'
      @T ,,' '
      @T 5,0
         DC    AL1(0)              END INDICATOR
         SPACE 2
         END
