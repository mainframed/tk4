B009     TITLE 'CLEAN-UP - READ AN O.S. CATALOG CONTENTS (B009).'
        PRINT  OFF
        COPY   CLMAC
        PRINT  ON
B009    @XS
*        AT ENTRY :   R3 = CAT. VOL. ELEMENT POINTER
*                     R4 = DDNAME ELEMENT POINTER
         SPACE 1
         USING CVLT,R3
         USING DDNT,R4
CTRSW0   NOP   CTR0
         OI    CTRSW0+1,ON
         L     R6,DACTLG           ALLOCATED CATALOG
         USING DYNLIST,R6
        $CATSO DDNAME,MF=(L,CTRSOL)
         DROP  R6
        $CATSR CTYPE,,WORKD,MF=(L,CTRSRL)
        $DVTYUN WORKD,,MF=(L,CTRDV)
CTR0     L     R5,DSTABCT          DSNAME'S TABLE OVERFLOW CONTROL
         L     R6,TBNIX            START OF NULL INDEXES TABLE
         MVI   0(R6),FMOFF         INDICATE NONE
        $CATSO MF=(E,CTRSOL)       OPEN 'SYSCTLG'
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR34
         OI    CVLIND,CVLCSO       SET OPENED
         NI    CTRSW3+1,OFF
         LA    R7,LINE
         USING CLDSCT,R7
         MVC   CTRINFA,DDNVOL
         MVC   CTRINFB,DDNUTY
        @OUT   CTRINF,=PL2'+50'
         TM    RUNIND,RUNOLIST     DETAIL LIST REQUESTED?
         BO    CTR1                NO
         MVC   CTRINITA,CTRINFA
         MVC   CTRINITB,CTRINFB
         TM    RUNIND,RUCSH        CAT. SHORT LIST REQUESTED?
         BO    CTR1                YES
        @LIST  CTRINIT,,U
CTR1     MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
        $CATSR MF=(E,CTRSRL)       READ 'SYSCLTG'
         LTR   R15,R15             TEST RETURN CODE
         BM    CTR90               END OF CATALOG
         BNZ   ERR35
         CLI   CTYPE,255           CONTINUATION?
         BE    CTR2                YES
         STC   R1,GDGCC
         MVC   PTYPE,CTYPE
         CLI   CTYPE,1             CVOL POINTER?
         BE    CTRCV               YES
         CLI   CTYPE,2             DATA-SET NAME?
         BE    CTRDS               YES
         XC    ZERODSN,ZERODSN     CLEAR
         CLI   CTYPE,3             ALIAS NAME?
         BE    CTRAN               YES
         CLI   CTYPE,128           NULL INDEX?
         BE    CTRGN               YES
         B     ERR19
CTR2     OC    ZERODSN,ZERODSN     TEST EMPTY PREVIOUS?
         BZ    ERR19               YES, WHAT'S IN ...
         MVC   WORKDS,ZERODSN      RESTORE PREVIOUS
         CLI   PTYPE,1
         BE    CTRCV1
         CLI   PTYPE,2
         BNE   ERR19
         LH    R1,CTRMVL           MULTI-VOLUME COUNT
         LA    R1,1(R1)
         STH   R1,CTRMVL
         B     CTRDS1
         SPACE 1
CTRCV    MVC   CLTY(8),=CL8'CVOL-PTR'
         MVC   CLNM(8),WORKDS
        @FILL  CLNM,WORKDS
         MVC   ZERODSN,WORKDS      SAVE IN CASE OF CONTINUATION
         L     R1,TBGVOL           CVOL POINTERS TABLE
         CLI   0(R1),FMOFF         END OF TABLE?
         BE    *+L'*+8             YES
         LA    R1,CVPL(R1)         NO, NEXT ELEMENT
         B     *-12
         LA    R15,CVPL(R1)        FINAL ELEMENT
         CL    R15,TBGVOLE         ANY OVERFLOW?
         BL    *+L'*+6             NO
         XR    R15,R15             YES
         B     ERR64
         USING CVPDS,R1
         MVC   CVPNAME(L'CVPNAME),WORKDS
         MVC   CVPVOL,CTRVSN
         OI    CVPFL,CVPOS
         DROP  R1
         MVI   0(R15),FMOFF        SET FINAL MARKER
CTRCV1   MVC   CLVL,CTRVSN
         UNPK  CLDT(L'CLDT+1),WORKD(L'CLDT/2+1)
         MVI   CLDT+L'CLDT,C' '
         TR    CLDT(L'CLDT),TRTAB-X'F0'
         CLC   WORKD(4),=XL4'0'
         BE    CTRCV2
        $DVTYUN ,CLUN,MF=(E,CTRDV) GET UNIT NAME
         LTR   R15,R15
         BZ    CTRCV2
         MVC   CLUN(4),=CL4'?RC='
         CVD   R15,WORKD
         UNPK  CLUN+4(2),WORKD+6(2)
         OI    CLUN+5,C'0'
         MVI   CLUN+6,C'?'
CTRCV2   BAS   R14,CTRFLS          PRINT
         B     CTR1
         SPACE 1
CTRDS    MVC   CLTY(8),=CL8'DATA-SET'
         MVC   CLNM,WORKDS
        @FILL  CLNM,WORKDS
         MVC   ZERODSN,WORKDS      SAVE IN CASE OF CONTINUATION
         XC    CTRMVL,CTRMVL       RESET MULTI-VOLUME COUNT
CTRDS1   MVC   CLVL,CTRVSN
         UNPK  CLDT(L'CLDT+1),WORKD(L'CLDT/2+1)
         MVI   CLDT+L'CLDT,C' '
         TR    CLDT(L'CLDT),TRTAB-X'F0'
         CLC   WORKD(4),=XL4'0'
         BE    CTRDS2
        $DVTYUN ,CLUN,MF=(E,CTRDV) GET UNIT NAME
         LTR   R15,R15
         BZ    CTRDS2
         MVC   CLUN(4),=CL4'?RC='
         CVD   R15,WORKD
         UNPK  CLUN+4(2),WORKD+6(2)
         OI    CLUN+5,C'0'
         MVI   CLUN+6,C'?'
CTRDS2   BAS   R14,CTRFLS          PRINT
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
CTRDS5   CLI   0(R2),FMOFF         END OF TABLE?
         BE    CTRDS7              YES, NOT IN-LINE DATA-SET
         CLC   DSNME,WORKDS        IS IT THIS ONE?
         BNE   CTRDS6              NO
         CLC   DSVOLSN(L'DSVOLSN),CTRVSN     ON SAME VOLUME?
         BNE   CTRDS6              NO
         BAS   R14,CTRDS10         SET IN TABLE
         B     CTR1
CTRDS6   LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     CTRDS5
CTRDS7   BCT   R5,*+L'*+6          CONTROL
         XR    R15,R15             DSNAME'S TABLE OVERFLOW
         B     ERR17
         XC    0(DSTABL,R2),0(R2)  CLEAR
         MVC   DSNME,WORKDS        ENTER IN TABLE
         MVC   DSALTVO(L'DSALTVO),CTRVSN
         BAS   R14,CTRDS10         SET IN TABLE
         LA    R2,DSTABL(R2)
         MVI   0(R2),FMOFF         SET FINAL MARKER
         B     CTR1                GET NEXT ONE
CTRDS10  MVI   DSCAT,XCSR          INDICATE READ FROM O.S. CATALOG
         MVC   DSMVCNT,CTRMVL      SET MULTI-VOLUME COUNT
         CLC   DSMVCNT,=H'1'
         BH    CTRDS12
         BE    CTRDS11
         ST    R2,CTRPRDSE         THIS CAN BE START SEQ. 0
         B     CTRDS13
CTRDS11  L     R15,CTRPRDSE        GET ADDRESS OF START SEQ. 0
         DROP  R2
         USING DSTABDS,R15
         MVI   DSVORG,XOM          SET MULTI-VOLUMES
         DROP  R15
         USING DSTABDS,R2
CTRDS12  MVI   DSVORG,XOM          SET MULTI-VOLUMES
CTRDS13  MVC   DSCVOL,DDNVOL       RETAIN CAT. INFO VOLUME
         CLI   GDGCC,0             WAS IT A GDG NAME?
         BER   R14                 NO
         MVI   DSUSE,XUG           YES
         BR    R14
         DROP  R2
         SPACE 1
CTRAN    MVC   CLTY(8),=CL8'ALIAS N.'
         MVC   CLNM(8),WORKDS
         MVC   CLNM+9(13),=CL13'- TRUE NAME ='
         MVC   CLNM+23(8),WORKDS+8
         BAS   R14,CTRLS           PRINT
         B     CTR1
         SPACE 1
CTRGN    LA    R14,WORKDS+L'WORKDS-1    ADJUST NAME
         LA    R15,L'WORKDS
CTRGN1   CLI   0(R14),C' '
         BNE   CTRGN2
         BCTR  R14,0
         BCT   R15,CTRGN1
         B     CTR1
CTRGN2   CLI   0(R14),C'.'
         BNE   *+L'*+4
         MVI   0(R14),C' '
         CLI   GDGCC,0             IS IT A GDG INDEX?
         BNE   CTRGN3              YES
CTRSW1   B     CTRGN20
         CLC   GDGIX,WORKDS        LOWER LEVEL OF NULL GDG INDEX?
         BE    CTRGN10             YES
         OI    CTRSW1+1,ON         NO
         B     CTRGN20
CTRGN3   NI    CTRSW1+1,OFF
         L     R2,DSTAB            START OF DSNAME'S TABLE
         USING DSTABDS,R2          ESTABLISH ADDRESSABILITY
CTRGN4   CLI   0(R2),FMOFF         END OF TABLE?
         BE    CTRGN6              YES
         CLI   DSUSE,XUM           NO, MODEL GDG?
         BNE   CTRGN5              NO
         CLC   DSNME,WORKDS        YES, SAME DSNAME?
         BNE   CTRGN5              NO
         CLC   DSVOLSN,DDNVOL      YES, SAME VOLUME?
         BNE   CTRGN5              NO
         MVI   DSCAT,XCSR          INDICATE READ FROM O.S. CATALOG
         B     CTRGN10
CTRGN5   LA    R2,DSTABL(R2)       ADVANCE IN TABLE
         B     CTRGN4
CTRGN6   BCT   R5,*+L'*+6          CONTROL
         XR    R15,R15             DSNAME'S TABLE OVERFLOW
         B     ERR17
         XC    0(DSTABL,R2),0(R2)  CLEAR
         MVC   DSNME,WORKDS        ENTER IN TABLE
         MVC   DSALTVO(L'DSALTVO),DDNVOL
         MVI   DSUSE,XUI           INDICATE NULL GDG INDEX
         MVI   DSCAT,XCSR          INDICATE READ FROM O.S. CATALOG
         LA    R2,DSTABL(R2)
         MVI   0(R2),FMOFF         SET FINAL MARKER
         NI    CTRSW2+1,OFF
CTRGN10  MVC   GDGIX,WORKDS
         LA    R14,GDGIX+L'GDGIX-1 REDUCE TO LOWER LEVEL FOR CONTROL
         LA    R15,L'GDGIX
CTRGN11  CLI   0(R14),C' '
         BE    CTRGN12
         CLI   0(R14),C'.'
         MVI   0(R14),C' '
         BE    CTRSW2
CTRGN12  BCTR  R14,0
         BCT   R15,CTRGN11
CTRSW2   B     CTR1
         OI    CTRSW2+1,ON
         MVC   CLTY(8),=CL8'NULL GDG'
         MVC   CLNM,WORKDS
         BAS   R14,CTRLS           PRINT
         B     CTR1
CTRGN20  LA    R0,WORKDS
         LR    R1,R0
CTRGN21  CLI   0(R1),C'.'          DON'T LIST AND DELETE A 1ST LEVEL
         BE    CTRGN22                  INDEX WHEN IT IS PART OF A
         CLI   0(R1),C' '               MULTIPLE LEVELS INDEX.
         BE    CTRGN22
         LA    R1,1(R1)
         B     CTRGN21
CTRGNCL  CLC   CTRDELA(*-*),WORKDS << EXECUTED >>
CTRGN22  CLI   1(R1),C' '
         BNE   CTRGN23
         SR    R1,R0
         BNP   CTR1
         EX    R1,CTRGNCL
         BE    CTR1
CTRGN23  MVC   CLTY-5(13),=CL13'-- NULL INDEX'
         MVC   CLNM,WORKDS
         MVC   CTRDELA,WORKDS
CTRSW3   NOP   CTRGN24
         LA    R14,NIXL(R6)        CONTROL NULL INDEXES TABLE
         CL    R14,TBNIXE          ANY OVERFLOW?
         BL    CTRGN25             NO
         OI    CTRSW3+1,ON
        @OUT   CTRNIXM
CTRGN24  BAS   R14,CTRLS           PRINT
         B     CTR1
CTRGN25  MVC   0(L'DSNME,R6),WORKDS     STORE THIS NULL INDEX
         MVC   0+L'DSNME(L'DDNVOL,R6),DDNVOL
         LR    R6,R14
         MVI   0(R6),FMOFF         SET FINAL MARKER
         BAS   R14,CTRLS           PRINT
         B     CTR1
         DROP  R7
         SPACE 1
CTRFLS   TM    RUNIND,RUNOLIST     DETAIL LIST REQUESTED?
         BOR   R14                 NO
         TM    RUNIND,RUCSH        CAT. SHORT LIST REQUESTED?
         BOR   R14                 YES
         ST    R14,CTRSVLS
         B     CTRLS1
CTRLS    TM    RUNIND,RUNOLIST     DETAIL LIST REQUESTED?
         BOR   R14                 NO
         ST    R14,CTRSVLS
         TM    RUNIND,RUCSH        CAT. SHORT LIST REQUESTED?
         BZ    CTRLS1              NO
CTRSW4   NOP   CTRLS1
         OI    CTRSW4+1,ON
         MVI   CTRINIT,C'0'
        @LIST  CTRINIT,=PL2'+48',U
        @LIST  SPACE
CTRLS1  @LIST  LINE
         L     R14,CTRSVLS
         BR    R14
         SPACE 1
CTR90    NI    CVLIND,255-CVLCSO   SET CLOSED
        $CATSC MF=(E,CTRSCL)       CLOSE 'SYSCTLG'
         LTR   R15,R15             TEST RETURN CODE
         BNZ   ERR36
         TM    RUNIND,RUNOLIST     DETAIL LIST REQUESTED?
         BO    CTR92               NO
         TM    RUNIND,RUCSH        CAT. SHORT LIST REQUESTED?
         BZ    CTR91               NO
         TM    CTRSW4+1,ON
         BZ    CTR92
         NI    CTRSW4+1,OFF
CTR91   @LIST  CTRENDM
CTR92    XC    ZERODSN,ZERODSN     CLEAR
         UNPK  CTRINF1A(L'CTRINF1A+1),VLSTBLK+1(4)     CAT. INF.
         MVI   CTRINF1A+L'CTRINF1A,C' '
         TR    CTRINF1A,TRTAB-X'F0'
        @OUT   CTRINF1
         UNPK  CTRINF2A(L'CTRINF2A+1),VCLSTBLK+1(4)
         MVI   CTRINF2A+L'CTRINF2A,C' '
         TR    CTRINF2A,TRTAB-X'F0'
        @OUT   CTRINF2
         UNPK  CTRINF3A(L'CTRINF3A+1),VFHOLE+1(4)
         MVI   CTRINF3A+L'CTRINF3A,C' '
         TR    CTRINF3A,TRTAB-X'F0'
         UNPK  CTRINF3B(L'CTRINF3B+1),HIGHTTR+1(4)
         MVI   CTRINF3B+L'CTRINF3B,C' '
         TR    CTRINF3B,TRTAB-X'F0'
        @OUT   CTRINF3
         DROP  R3,R4
         ST    R5,DSTABCT          DSNAME'S TABLE OVERFLOW CONTROL
         SPACE 1
*        PURGE NULL INDEXES IF ANY.
         SPACE 1
         L     R6,TBNIX            START OF NULL INDEXES TABLE
         CLI   0(R6),FMOFF         NO NULL INDEXES?
         BE    CTX90               YES
         TM    RUNIND,RUTEST       TEST MODE?
         BZ    *+L'*+6             NO
         MVC   CTRINXTT,=CL16'SIMULATED (TEST)'
        @OUT   CTRINXT,=PL2'+40'
CTX1     MVC   CTRDELA(L'DSNME),0(R6)   GET THIS ONE
         MVC   CTRDELB(L'DDNVOL),0+L'DSNME(R6)
         MVC   CTRDELC,=CL4'O.K.'
         MVI   CTRDELLG,CTRDELLS
         XR    R15,R15             SET IN CASE OF TEST RUN
         TM    RUNIND,RUTEST       TEST MODE?
         BO    CTX2                YES
        INDEX  DLINDX              NO, DELETE ...
CTX2     LTR   R15,R15
         BZ    CTX3
         MVC   CTRDELC,=CL4'(RC='
         MVI   CTRDELLG,CTRDELLL
         MVC   CTRDELD,=CL2' '
         MVC   CTRDELE,=CL2' '
         MVC   CTRDELF,=CL2' '
         CVD   R15,WORKD           DELETE RETURN CODE
         UNPK  CTRDELD,WORKD+6(2)
         OI    CTRDELD+1,C'0'
         CH    R15,=H'8'
         BNE   CTX3
         LA    R1,0(R1)            CLEAR HI-BYTE
         CVD   R1,WORKD            DELETE/LOCATE RETURN CODE
         UNPK  CTRDELE,WORKD+6(2)
         OI    CTRDELE+1,C'0'
         CVD   R0,WORKD            DELETE/LOCATE NO. INDEXES
         UNPK  CTRDELF,WORKD+6(2)
         OI    CTRDELF+1,C'0'
CTX3    @FILL  CTRDELA
        @OUT   CTRDEL
         LA    R6,NIXL(R6)
         CLI   0(R6),FMOFF         END OF NULL INDEXES?
         BNE   CTX1                NO
CTX90   @XE
         EJECT
CTRSOL  $CATSO ,MF=L
CTRSRL  $CATSR ,CTRVSN,,MF=L
CTRSCL  $CATSC VLSTBLK,MF=L
CTRDV   $DVTYUN ,,MF=L
DLINDX  CAMLST DLTX,CTRDELA,CTRDELB
         SPACE 1
VLSTBLK  DC    F'0'
VCLSTBLK DC    F'0'
VFHOLE   DC    F'0'
HIGHTTR  DC    F'0'
CTRPRDSE DC    A(*-*)
CTRSVLS  DC    F'0'
CTRVSN   DC    CL6' '
CTRMVL   DC    H'0'
         SPACE 1
PTYPE    DC    XL1'0'
GDGCC    DC    XL1'0'
GDGIX    DC    CL44' '
         DC    AL1(CTRINFL)
CTRINF   DC    CL6'0 ',CL7'O.S. / '
CTRINFA  DC    CL6' ',C' ('
CTRINFB  DC    CL8' ',C') : SYSCTLG'
CTRINFL  EQU   *-CTRINF
         DC    AL1(CTRINF1L)
CTRINF1  DC    CL11' ',C'TTR LAST OF VOL. INDEX = '
CTRINF1A DC    CL6' ',C' '
CTRINF1L EQU   *-CTRINF1
         DC    AL1(CTRINF2L)
CTRINF2  DC    CL11' ',C'TTR LAST OF SYSCTLG = '
CTRINF2A DC    CL6' ',C' '
CTRINF2L EQU   *-CTRINF2
         DC    AL1(CTRINF3L)
CTRINF3  DC    CL11' ',C'TTR FIRST UNUSED OF SYSCTLG = '
CTRINF3A DC    CL6' ',C' - UPPER TTR USED = '
CTRINF3B DC    CL6' ',C' '
CTRINF3L EQU   *-CTRINF3
         DC    AL1(CTRINITL)
CTRINIT  DC    CL8'1O.S. / '
CTRINITA DC    CL6' ',C' ('
CTRINITB DC    CL8' ',C') CATALOG : SYSCTLG'
CTRINITL EQU   *-CTRINIT
         DC    AL1(L'CTRINXT+L'CTRINXTT)
CTRINXT  DC    C'0          INDEXES PROCESSING : '
CTRINXTT DC    CL16' '
CTRDELLG DC    AL1(*-*)
CTRDEL   DC    CL16' '
CTRDELA  DC    CL44' ',C' - VOLUME : '
CTRDELB  DC    CL6' ',C' - DELETE '
CTRDELC  DC    CL4' '
CTRDELLS EQU   *-CTRDEL
CTRDELD  DC    CL2' ',C'/LC='
CTRDELE  DC    CL2' ',C'/IX='
CTRDELF  DC    CL2' ',C').'
CTRDELLL EQU   *-CTRDEL
         DC    AL1(L'CTRNIXM)
CTRNIXM  DC    C'           ===== NULL INDEXES TABLE OVERFLOW ====='
         DC    AL1(L'CTRENDM)
CTRENDM  DC    C'0    END OF CATALOG LIST.'
         EJECT
        @SERV
         SPACE 1
        @COMM
         SPACE 1
        PRINT  GEN
         SPACE 1
CLDSCT   DSECT                     LINE DESCRIPTION
CLCC     DS    CL1,CL9             ASA CC
CLTY     DS    CL8,CL2             TYPE
CLNM     DS    CL44,CL2            NAME
CLVL     DS    CL6,CL2             VOLUME SERIAL NUMBER
CLUN     DS    CL8,CL2             UNIT NAME
CLDT     DS    CL8                 DEVICE TYPE
         SPACE 2
         END
