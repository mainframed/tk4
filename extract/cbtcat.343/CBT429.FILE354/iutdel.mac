//IUTDEL   JOB
/*ROUTE  PRINT  R7
//*
//*            DSN=CBT.SOURCE(IUTDEL)
//*
//S1        EXEC  HLASMCL,CLASS='*',
//   COND.LKED=(7,LT,ASM)
//ASM.SYSLIB DD DSN=SYS1.MACLIB
//   DD DSN=SYS1.MACLIB,DISP=SHR
//   DD DSN=IMSVS.GENLIB,DISP=SHR
//   DD DSN=IMSVS.GENLIBA,DISP=SHR
//   DD DSN=IMSVS.GENLIBB,DISP=SHR
//*  DD DSN=SYS1.HASPSRC,DISP=SHR
//   DD DSN=SYS1.AMODGEN,DISP=SHR
//ASM.SYSIN DD  *
*
*              JUNE18/91...ADDED  WILD CHAR FACILITY
*
*
*              THIS VERSION CREATES THE AUDIT DATASET NAME AS &VER.
*              IUTDEL.AUDIT(0) THEN DYNAMICALLY ALLOCATES IT.
*
*              IT ALSO JUST CHECKS FOR 'IMSVS.' TO DETERMINE IF WE
*              SHOULD ENQ TO PROTECT THE OUTDS DATASET.
*              THIS WAS DONE TO ACCOMADATE THE DEVL SYSTEM...
*
*              TO WORK PROPERLY,  THIS PROGRAM MUST BE IN A LINKLIST
*              DATASET, AND THE RACF PROFILE FOR IMSVS.TEST.PGMLIBA
*              MUST BE MODIFIED:
*                PERMIT 'IMSVS.TEST.PGMLIBA' CLASS(DATASET) ID(*) +
*                        ACCESS(UPDATE) WHEN(PROG(IUTDEL))
*
*              THE PROGRAM NAME MUST BE ADDED TO THE RACF CLASS
*              PROGRAM, VIA A RACF RDEF COMMAND, WHICH YOU MUST BE
*              SPECIAL TO RUN, UNLESS IT IS IN SYS1.BCSCLINK,
*              WHICH IS SET UP SO ANY MEMBER CAN BE RACF'D.
*                RDEF PROGRAM IUTDEL UACC(READ) +
*                     ADDMEM('SYS1.SEC.LOAD'/SYS005/NOPADCHK)
*
*              SYS1.BCSCLINK IS APF AND LINKLISTED.
*
         TITLE '******* EXECUTE PROGRAM IUTDEL ******'
         SPACE 3
IUTDEL   CSECT
         USING *,R15              SET TEMP BASE
         B     AROUND             BRANCH AROUND DUMP TITLE
         DC    AL1(EYELTH)
EYECATCH DC    C'IUTDEL '         PROGRAM NAME
         DC    C'&SYSDATE'        DATE WRITTEN
         DC    C' '               BLANK
         DC    C'&SYSTIME'        TIME WRITTEN
         DC    C' DYNAMICALLY ALLOCATE THE AUDIT DATASET'
EYELTH   EQU   *-EYECATCH         LTH OF EYE CATCHER
         SPACE 1
AROUND   DS    0H
         LA    R1,0(0,R1)         CLEAR HI-ORDER BYTE FOR 31 BIT
         LA    R13,0(0,R13)       CLEAR HI-ORDER BYTE FOR 31 BIT
         BSM   R14,0              SAVE CURRENT AMODE
         STM   R14,R12,12(R13)
         LR    R12,R15
         DROP  R15
         USING IUTDEL,R12,R11
         LA    R11,4095(0,R12)    LOAD 2ND BASE REG
         LA    R11,1(0,R11)       ''
         L     R2,0(0,R1)         R2 -> TO SYSTEM PARM
*        LR    R8,R1                   LOAD REGISTER 8 TO PRESERVE
*                                      POINTER TO COMMAND PROCESSOR
*                                      PARAMETER LIST
         GETMAIN R,LV=LDYNAMIC         GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  LOAD REGISTER 10 TO PRESERVE
*                                      POINTER TO WORKAREA
         ST    R13,4(R10)              STORE ADDRESS OF PREVIOUS
*                                      SAVEAREA
         ST    R10,8(,R13)             STORE ADDRESS OF CURRENT
*                                      SAVEAREA IN PREVIOUS SAVEAREA
         LR    R13,R10                 LOAD REGISTER 13 WITH ADDRESS OF
*                                      CURRENT SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY TO
*        ST    R13,SAVE+4
*        LA    R13,SAVE
*
***********************************************************************
*                                                                     *
*        SEE IF A PARM WAS PASSED....                                 *
*                                                                     *
***********************************************************************
*
         LH    R1,2(0,R2)         R1 = TO PARM LTH
         LTR   R1,R1              IS THERE A PARM?
         BZ    NOPARM             NO
         CLC   =X'0A15',STOWDEL+8 FIND SVC 21?
         BE    ZAPSVC             YES
         ABEND 21,,,USER          NO, ABEND
         SPACE 1
ZAPSVC   MVC   STOWDEL+8(2),=X'1BFF'  CHANGE SVC TO SR 15,15
         MVC   HEADER3W,=C'WOULD  BE '  CHANGE MSG 1
         MVC   NOTDEL,=C'NOT '          CHANGE MSG 2
*
NOPARM   DS    0H
         OPEN  (REPORT,(OUTPUT))  OPEN SYSPRINT FILE
         SPACE 1
*
*        GET DATE AND TIME
*
*        LOAD  EP=DAYDATE         LOAD DAYDATE ROUTINE
*        LR    R15,R0             PUT ITS ENTRY ADDRESS IN R15
         L     R15,=V(DAYDATE)    R15 -> TO DAYDATE ROUTINE
         CALL  (15),(TIMEDATE),VL CALL DAYDATE
         MVC   CTLDATE,TDDATE     PUT DATE IN AUDIT RECORD
         MVC   CTLTIME,TDTIME     PUT TIME IN AUDIT RECORD
*
*        GET THE //PGMLIB DATASET NAME
*
         RDJFCB PGMLIB            IS THERE A PGMLIB?
         LTR   R15,R15            WELL???
         BNZ   RETURN9            NO, NOTHING TO DELETE
*
*        CHECK PGMLIB DATASET NAME
*
         MVC   TPGMLIB,JFCBDSNM   SET UP DSN FOR ENQ
         CLC   JFCBDSNM(6),=C'IMSVS.' IS IT ONE OF OUR DATASETS?
         BNE   OPEN               NO, NO MORE TESTING
*
*        GET 1ST PART OF AUDIT DATASET NAME FROM PGMLIB
*
         LA    R15,JFCBDSNM+6     R15 -> TO DSN AFTER IMSVS.
         SPACE 1
FNDCMA0  DS    0H
         CLI   0(R15),C'.'        FOUND SECOND PERIOD?
         BE    GOTCMA0            YES
         LA    R15,1(0,R15)       NO, ADD 1 TO R15
         B     FNDCMA0            AND TRY AGAIN
         SPACE 1
GOTCMA0  DS    0H
         MVC   0(LAUDEND,R15),AUDEND END WITH OUR NAME
         MVC   AUDTDSN,JFCBDSNM   SAVE THE AUDIT DSNAME
         SPACE 1
*
*        CONVERT //AUDIT GDG RELATIVE TO ABSOLUTE
*
*              DO A LOCATE AND LET THE                              RH
*              SYSTEM EXTEND THE GDG NAME FOR (0) AS WELL AS (+1).  RH
*                                                                   RH
         MVC   CMLDSN(LAUD),AUDTDSN  SET UP LOCATE DSN              RH
         SPACE 1                                                    RH
         LOCATE CAMLOCM
         LTR   R15,R15             DID LOCATE WORK
         BNZ   LOCERR             NO, GIVE ERROR MSG                RH
         SPACE 1                                                    RH
LOCOK    DS    0H                                                   RH
         CLC   CMLDSN,AUDTDSN     DID LOCATE CHANGE DSN ?           RH
         BE    LOCERR             NO, SOMETHING IS WRONG            RH
         CLC   CMLDSN(8),=C'SYSCTLG.' CVOL POINTER NAME ?           RH
         BE    LOCERR             YES, SOMETHING IS WRONG           RH
         SPACE 1                                                    RH
NEWDSN   DS    0H                                                   RH
         MVC   TUPAR1,CMLDSN      NO, PUT NEW DSN IN TUPAR1         RH
*                                                                   RH
*              //AUDIT IS A GDG, SO                                 RH
*              LOCATE WILL HAVE EXPANDED THE                        RH
*              NAME. WE MUST RECALCULATE THE DSN LTH.               RH
*                                                                   RH
         LA    R3,TUPAR1+43       R3 -> TO END OF DSNAME            RH
         SPACE 1                                                    RH
CHKDSLTH DS    0H                                                   RH
         CLI   0(R3),C' '         FOUND END OF DSN ?                RH
         BNE   GOTDSLTH           YES, GO GET NEW LTH               RH
         BCT   R3,CHKDSLTH        CHECK NEXT PREV CHAR              RH
         SPACE 1                                                    RH
GOTDSLTH DS    0H                                                   RH
         LA    R4,TUPAR1-1        R4 -> TO DSNAME -1                RH
         SR    R3,R4              R3 = LTH OF LOCATED DSN           RH
         STH   R3,TULNG1          RESET DSNAME LTH FIELD            RH
         SPACE 1                                                    RH
DSOK     DS    0H                                                   RH
         SPACE 1                                                    RH
VOLOK    DS    0H                                                   RH
*
*        ALLOCATE AUDIT DATASET NAME SO WE CAN HAVE THE
*        SYSTEM ENQ THE AUDIT DSN WITH DISP=MOD.
*
         SPACE 1
DOSVC99A DS    0H
         LA    R1,S99RBPTR        R1 -> TO SVC 99 PARMS
         SVC   99
         LTR   R15,R15            WAS SVC OKAY ?
         BZ    AUDOPEN            YES, GO OPEN AUDIT DATASET
         SPACE 1
         CLC   LOOPCTR2,=X'000A'  DONE 10 LOOPS ALREADY?
         BH    BADLOOP            YES, TOO BAD
         SPACE 1
         LH    R1,LOOPCTR2        R1 = NBR OF TIMES LOOPED
         LA    R1,1(0,R1)         ADD 1
         STH   R1,LOOPCTR2        SAVE IT
         STIMER WAIT,BINTVL=WAITTIME   WAIT A BIT
         SPACE 1
         B     DOSVC99A           GO TRY AGAIN
         SPACE 1
BADAUDT  DS    0H
         MVC   HDR1(L'BADAUDTM),BADAUDTM  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
BADAUDTD DS    0H
         MVC   HDR1(L'BADAUDT2),BADAUDT2  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
BADAUDOP DS    0H
         MVC   HDR1(L'BAUDOP),BAUDOP    SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
*
*
AUDOPEN  DS    0H
*
*        OPEN AUDIT DATASET
*
         LA    R6,AUDIT           R6 -> TO DCB
         USING IHADCB,R6
         TM    DCBOFLGS,DCBOFOPN  TEST IF OPEN
         BNZ   SINOPEN          IF ALREADY OPEN
         OPEN  (AUDIT,(OUTPUT))
         TM    DCBOFLGS,DCBOFOPN  TEST IF OPEN
         BZ    BADAUDOP         IF CANNOT OPEN
         DROP  R6
*
*
SINOPEN  EQU   *
*
*
* SET UP THE AUDIT RECORD
*
*        GET JOBNAME, STEPNAME, PROCNAME, AND JOB NUMBER
*
GETJOBN  EQU   *
         L     R1,PSATOLD-PSA
         ST    R1,TCBHOLD        SAVE THE TCB ADDR
         L     R2,TCBTIO-TCB(0,R1)
         USING TIOT1,R2
         MVC   JOBNAME,TIOCNJOB
*        MVC   PROCNAME,TIOCSTEP
         MVC   STEPNAME,TIOCSTEP+8
*
*
***********************************************************************
*
* RETRIEVE THE USERS RACF USERID FROM THE ACEE.                       *
*
***********************************************************************
*
GETUSER  DS    0H
         L     R3,PSAAOLD-PSA          LOAD ADDRESS OF CURRENT ASCB
         L     R3,ASCBASXB-ASCB(R3)    LOAD ASXB ADDRESS
         L     R3,ASXBSENV-ASXB(R3)    LOAD ACEE ADDRESS
*        IC    R14,ACEEUSRL-ACEE(R3)   GET USERID LENGTH
*        SH    R14,=H'1'               SUB 1 FOR "EX" INSTRUCTION
         MVC   ACEEUSR,ACEEUSRI-ACEE(R3) PUT USERID IN AUDIT RECORD
*                                                                   RH
*
* GET THE JOB NUMBER
*
         DROP  R2
         L     R1,TCBHOLD        RESTORE THE TCB ADDR
         L     R2,TCBJSCB-TCB(0,R1)        -> JSCB
         L     R2,JSCBACT-IEZJSCB(0,R2)    -> ACTIVE JSCB
         L     R2,JSCBSSIB-IEZJSCB(0,R2)   -> SSIB
         MVC   JOBNUMBR,SSIBJBID-SSIB(R2) MOVE IN THE JOB NUMBER
         SPACE 1
*
* WRITE OUT THE AUDIT RECORD
*
         MVC   HDR180,CONTROL     PUT  AUDIT RECORD IN PRINT LINE
         LA    R1,AUDIT           R1 -> TO DCB
         TM    48(R1),DCBOFOPN    TEST IF OPEN
         BZ    NOAUDIT1           NO
         PUT   AUDIT,HDR1         WRITE AUDIT RECORD
         SPACE 1
NOAUDIT1 DS    0H
         MVI   HDR180,C' '        CLEAR PRINT LINE
         MVC   HDR180+1(79),HDR180 ''
         SPACE 1
OPEN     DS    0H
*        GETMAIN R,LV=LDYNAMIC         GETMAIN DYNAMIC WORKAREA
*        LR    R10,R1                  LOAD REGISTER 10 TO PRESERVE
*                                      POINTER TO WORKAREA
*        USING WORKAREA,R10            ESTABLISH ADDRESSABILITY TO
*                                      DYNAMIC WORKAREA
*
***********************************************************************
*                                                                     *
*        INITIALIZE OUTPUT DATA CONTROL BLOCKS IN WORKAREA            *
*                                                                     *
***********************************************************************
*
         MVC   OUTPUTA(OUTPUTAL),OUTPUTAC  MOVE ASA DCB CONSTANT INTO
*                                      ASA DCB IN WORKAREA
*        MVC   OUTPUTM(OUTPUTML),OUTPUTMC  MOVE MACHINE DCB CONSTANT
*                                      INTO MACHINE DCB IN WORKAREA
*
         OPEN  (SYSIN,(INPUT))    OPEN INPUT DCB
         LA    R14,SCROLLIT       SET R14 FOR 1ST TIME THRU
         SPACE 1
READSYS  DS    0H
         STM   R0,R15,SAVEALL     SAVE ALL REGS
         GET   SYSIN,MBRNAME           GET INPUT RECORD
         LA    R1,MBRNAME         R1 -> TO INPUT DATA
         LA    R2,MBRNAME         R2 -> TO INPUT DATA
         SPACE 1
         MVC   STARTMBR,BLANKS    CLEAR START MBR NAME
         MVC   ENDMBR,BLANKS      CLEAR END MEMBER NAME
         MVI   MBRTYPE,C' '       CLEAR FLAG BYTE
         XC    SMBRLTH,SMBRLTH    CLEAR START MBR LTH
         XC    EMBRLTH,EMBRLTH    CLEAR END MEMBER LTH
         XC    WILDSLTH,WILDSLTH  CLEAR NBR OF WILD CARDS (BACKSLASH)
         XC    WILDELTH,WILDELTH  CLEAR NBR OF WILD CARDS (BACKSLASH)
         SPACE 1
CHKBYTE  DS    0H
         CLI   0(R2),C' '         AT END OF DATA ?
         BE    END1               YES
         CLI   0(R1),C'A'         IF 1ST CHAR IS NOT ALPHA,
         BL    NXTBYTE            THIS MUST BE AN IMS FORMAT LIB
         CLI   0(R2),C'\'         FIND BACKSLASH WILD CHAR ?
         BE    GOTWILD            YES
         CLI   0(R2),C'*'         FIND * ?
         BE    GOTAST             YES
         CLI   0(R2),C'-'         FIND - ?
         BE    GOTDASH            YES
         SPACE 1
NXTBYTE  DS    0H
         LA    R2,1(0,R2)         R2 -> TO NEXT DATA CHAR
         B     CHKBYTE            GO CHECK IT
         SPACE 1
END1     DS    0H
         LR    R3,R2              SAVE R2
         SR    R2,R1              R2 = LTH OF DATA
         CH    R2,=H'8'           OVER 8?
         BH    BADATA             YES
         SPACE 1
*        CLI   MBRTYPE,C'-'       ARE WE PROCESSING 2ND MEMBER NAME ?
*        BE    GOTDASH2           YES
*        STH   R2,SMBRLTH         SAVE MBR LTH
         MVI   EMBRLTH+1,8        SET END MBR LTH TO 8
         BCTR  R2,0               R2 = HEX LTH
         STC   R2,MOVE1+1         SAVE MBR NAME LTH
MOVE1    MVC   ENDMBR(0),0(R1)    SAVE END MBR NAME
*OVE1    MVC   STARTMBR(0),0(R1)  SAVE START MBR NAME
         CLI   SMBRLTH+1,0        IS THERE A START MEMBER?
         BH    ENDREAD            YES, ON WE GO
         MVC   STARTMBR,ENDMBR    NO, SET UP START MBR NAME
         MVI   SMBRLTH+1,8        SET START MBR LTH TO 8
         B     ENDREAD            ON WE GO
         SPACE 1
GOTWILD  DS    0H
         CLI   MBRTYPE,C' '       ARE WE PROCESSING 2ND MEMBER NAME ?
         BNE   GOTWILD1           YES
         LH    R4,WILDSLTH        R4 = NBR START WILD CARDS
         LA    R4,1(0,R4)         ADD 1
         STH   R4,WILDSLTH        SAVE NBR
         B     NXTBYTE            GO CHECK NEXT BYTE...
         SPACE 1
GOTWILD1 DS    0H
         LH    R4,WILDELTH        R4 = NBR START WILD CARDS
         LA    R4,1(0,R4)         ADD 1
         STH   R4,WILDELTH        SAVE NBR
         B     NXTBYTE            GO CHECK NEXT BYTE...
         SPACE 1
GOTAST   DS    0H
         CLI   MBRTYPE,C' '       ARE WE PROCESSING 2ND MEMBER NAME ?
         BNE   GOTAST1            YES
         MVI   MBRTYPE,C'*'       SAY WE GOT * TYPE
         SPACE 1
GOTAST1  DS    0H
         LR    R3,R2              SAVE R2
         SR    R2,R1              R2 = LTH OF DATA
         CH    R2,=H'8'           OVER 8?
         BH    BADATA             YES
         SPACE 1
         CLI   SMBRLTH+1,0        IS THERE A START MEMBER?
         BH    GOTAST2            YES, ON WE GO
         STH   R2,SMBRLTH         SAVE MBR LTH
         BCTR  R2,0               R2 = HEX LTH
         STC   R2,MOVE2+1         SAVE MBR NAME LTH
MOVE2    MVC   STARTMBR(0),0(R1)  SAVE START MBR NAME
         CLI   1(R3),C'-'         NEXT CHAR DASH(-) ?
         BE    GOTEND1            YES
         MVC   ENDMBR,STARTMBR    SET UP END MBR NAME
         MVC   EMBRLTH,SMBRLTH    SET END MBR LTH
         B     ENDREAD            ON WE GO
         SPACE 1
GOTEND1  DS    0H
         LA    R1,2(0,R3)         R1 -> TO SECOND MEMBER
         LR    R2,R1              R2 -> TO SECOND MEMBER
         B     CHKBYTE            GO CHECK SECOND MEMBER NAME
         SPACE 1
GOTAST2  DS    0H
         STH   R2,EMBRLTH         SET END MBR LTH
         BCTR  R2,0               R2 = HEX LTH
         STC   R2,MOVE2A+1        SAVE MBR NAME LTH
MOVE2A   MVC   ENDMBR(0),0(R1)    SAVE END MBR NAME
         B     ENDREAD            ON WE GO
         SPACE 1
GOTDASH  DS    0H
         MVI   MBRTYPE,C'-'       SAY WE GOT - TYPE
         LR    R3,R2              SAVE R2
         SR    R2,R1              R2 = LTH OF DATA
         CH    R2,=H'8'           OVER 8?
         BH    BADATA             YES
         SPACE 1
*        STH   R2,SMBRLTH         SAVE MBR LTH
         BCTR  R2,0               R2 = HEX LTH
         STC   R2,MOVE3+1         SAVE MBR NAME LTH
MOVE3    MVC   STARTMBR(0),0(R1)  SAVE START MBR NAME
         MVI   SMBRLTH+1,8        SET START MBR LTH TO 8
         LA    R1,1(0,R3)         R1 -> TO SECOND MEMBER
         LR    R2,R1              R2 -> TO SECOND MEMBER
         B     CHKBYTE            GO CHECK SECOND MEMBER NAME
         SPACE 1
GOTDASH2 DS    0H
         LR    R3,R2              SAVE R2
         STH   R2,EMBRLTH         SAVE MBR LTH
         BCTR  R2,0               R2 = HEX LTH
         STC   R2,MOVE4+1         SAVE MBR NAME LTH
MOVE4    MVC   ENDMBR(0),0(R1)    SAVE END MBR NAME
*        B     ENDREAD            ON WE GO
         SPACE 1
ENDREAD  DS    0H
         LM    R0,R15,SAVEALL     RELOAD ALL REGS
         BR    R14                RETURN TO CALLER
         SPACE 1
BADATA   DS    0H
         ABEND 999
*
EOFREAD  DS    0H
         CLOSE (SYSIN)                 CLOSE INPUT DCB
         MVI   STARTMBR,X'FF'     SIGNAL END OF SYSIN
         B     ENDREAD            RETURN TO CALLER
*                                                                     *
***********************************************************************
*                                                                     *
*        OPEN THE DIRECTORY OF THE PDS                                *
*                                                                     *
***********************************************************************
*
SCROLLIT DS    0H
         CLI   STARTMBR,X'FF'     END OF SYSIN?
         BE    RETURN             YES, JUST RETURN
*        ST    R6,SAVER6               SAVE REGISTER 6
         LA    R8,DIRECT               LOAD POINTER TO DIRECTORY DCB
         USING IHADCB,R8               ESTABLISH ADDRESSABILITY TO DCB
         MVC   DIRECT(DIRECTL),DIRECTC MOVE DIRECTORY DCB CONSTANT INTO
*                                      DIRECTORY DCB IN WORKAREA
         MVC   OPENLST,OPENCLOS        MOVE OPEN(CLOSE) LIST CONSTANT
*                                      INTO OPEN LIST IN WORKAREA
         OPEN  ((R8),INPUT),MF=(E,OPENLST)  OPEN DIRECTORY DCB
         TM    DCBOFLGS,DCBOFOPN       SEE IF DCB OPENED SUCCESSFULLY
         BNO   NOTPMESS                NO.....GO PUT OUT NOT PRINTED
*                                      MESSAGE
         DROP  R8                      DROP ADDRESSABILITY TO DCB
*                                                                     *
***********************************************************************
*                                                                     *
*        GETMAIN MEMBER TABLE FOR STORAGE OF DIRECTORY NAMES, ETC.    *
*           INITIALIZE TABLE                                          *
*                                                                     *
***********************************************************************
*
         L     R0,MEMDATL              LOAD LENGTH OF GETMAIN FOR
*                                      MEMBER TABLE
         LR    R2,R0                   SAVE IN REGISTER 2
         GETMAIN R,LV=(0)              GETMAIN MEMBER TABLE STORAGE
         ST    R1,MEMTABLE             SAVE ADDRESS OF MEMBER TABLE
         ST    R1,PRESENT              ALSO SAVE ADDRESS AS TABLE
*                                      IN USE
         LA    R3,0(R2,R1)             LOAD ADDRESS OF END OF TABLE
         ST    R3,ENDTABLE             STORE ADDRESS OF TABLE END
         SLR   R4,R4                   ZERO REGISTER 4
         ST    R4,0(R1)                STORE AS FIRST WORD OF MEMBER
*                                      TABLE
         LA    R4,8(R1)                LOAD REGISTER 4 AS POINTER TO
*                                      THE FIRST ENTRY
         USING MEMDSECT,R4             ESTABLISH ADDRESSABILITY TO
*                                      MEMBER TABLE DSECT
         SLR   R5,R5                   INITIALIZE MEMBER COUNT TO ZERO
*                                                                     *
***********************************************************************
*                                                                     *
*        READ DIRECTORY AND BUILD MEMBER TABLE                        *
*                                                                     *
***********************************************************************
*
GETDIR   EQU   *
         GET   (R8),DATA               GET A DIRECTORY BLOCK
         CLC   DATA(2),HALF12          SEE IF BLOCK IS UNUSED
         BL    FREEBLK                 YES....GO HANDLE DIRECTORY END
         LA    R9,DATA+2               LOAD POINTER TO FIRST DIRECTORY
*                                      ENTRY
         SLR   R7,R7                   ZERO REGISTER 7 FOR INSERT
         ICM   R7,3,DATA               INSERT LENGTH USED OF THIS BLOCK
         LA    R7,DATA-1(R7)           LOAD LAST USED BYTE OF BLOCK
UNBLOCK  DS    0H
         MVC   MEMNTTR,0(R9)           PUT NAME AND TTR IN TABLE
         MVC   CFIELD,11(R9)           PUT C FIELD IN TABLE
         CLI   MEMBER,HEXFF            SEE IF LAST MEMBER
         BE    FREEBLK                 YES....GO HANDLE DIRECTORY END
         IC    R6,CFIELD               INSERT CFIELD INTO REGISTER 6
         SLL   R6,27                   SHIFT OUT HIGH ORDER BITS
         SRL   R6,26                   SHIFT RIGHT TO GET LENGTH OF
*                                      USER DATA
         LA    R6,12(R6)               ADD STANDARD ENTRY LENGTH
         SPACE 1
         LH    R1,SMBRLTH         R1 = START MEMBER NAME LTH
         LH    R14,WILDSLTH       R14 = NBR WILD CHARS IN START MBR
         LTR   R14,R14            ARE THERE ANY?
         BZ    NOWILDS            NO
         LA    R14,STARTMBR       R14 -> TO START MBR NAME
         LA    R10,STARTMBR       R10 -> TO END   MBR NAME
         LA    R15,MEMBER         R15 -> TO DIR MEMBER NAME
         SPACE 1
CHKWILD1 DS    0H
         CLI   0(R14),C'\'        WILD CARD?
         BNE   CHKWILD3           NO
         SPACE 1
CHKWILD2 DS    0H
         LA    R14,1(0,R14)       ADD 1 TO R14
         LA    R10,1(0,R10)       ADD 1 TO R10
         LA    R15,1(0,R15)       ADD 1 TO R15
         BCT   R1,CHKWILD1        CHECK FOR MORE....
         B     NOTWANT            DELETE THIS MEMBER...
         SPACE 1
CHKWILD3 DS    0H
         CLC   0(1,R15),0(R14)    IS THIS A CHAR WE WANT ?
         BL    NEXTNTRY           NO
         CLC   0(1,R15),0(R10)    IS THIS A CHAR WE WANT ?
         BH    NEXTNTRY           NO, BUT CHECK ALL MEMBERS....
*        BH    GETMBR             NO
         B     CHKWILD2           YES, CHECK NEXT BYTE...
         SPACE 1
NOWILDS  DS    0H
         BCTR  R1,0               R1 = HEX LTH
         STC   R1,CLC1+1          PUT IT IN CLC INST
CLC1     CLC   MEMBER,STARTMBR    DO WE WANT THIS MEMBER?
*LC1     CLC   0(0,R9),STARTMBR   DO WE WANT THIS MEMBER?
         BL    NEXTNTRY           NO
         SPACE 1
         LH    R1,EMBRLTH         R1 = END MEMBER NAME LTH
         BCTR  R1,0               R1 = HEX LTH
         STC   R1,CLC2+1          PUT IT IN CLC INST
CLC2     CLC   MEMBER,ENDMBR      DO WE WANT THIS MEMBER?
*LC2     CLC   0(0,R9),ENDMBR     DO WE WANT THIS MEMBER?
         BH    GETMBR             NO
         B     NOTWANT            YES, ON WE GO
         SPACE 1
GETMBR   DS    0H
         BAL   R14,READSYS        GO GET NEXT SYSIN CONTROL CARD
         CLI   STARTMBR,X'FF'     END OF SYSIN?
         BE    FREEBLK            YES, GO HANDLE DIRECTORY END
         B     UNBLOCK            NO, SEE IF WE WANT IT/THEM
         SPACE 1
NOTWANT  DS    0H
         LA    R4,MEMSECTN        LOAD POINTER TO NEXT TABLE ENTRY
         LA    R5,1(R5)                INCREMENT NUMBER OF MEMBERS IN
*                                      TABLE
         C     R4,ENDTABLE             SEE IF END OF TABLE
         BL    NEXTNTRY                LOW.....GO PROCESS NEXT ENTRY
         LR    R0,R2                   LOAD LENGTH OF TABLE FOR GETMAIN
         GETMAIN R,LV=(0)              GET NEXT TABLE
         L     R14,PRESENT             LOAD REGISTER 14 WITH ADDRESS OF
*                                      LAST TABLE
         ST    R1,0(R14)               CHAIN MEMBER TABLES TOGETHER
         ST    R1,PRESENT              ALSO SAVE ADDRESS AS TABLE
*                                      IN USE
         LA    R3,0(R2,R1)             LOAD ADDRESS OF TABLE END
         ST    R3,ENDTABLE             STORE ADDRESS OF TABLE END
         SLR   R4,R4                   ZERO REGISTER 4
         ST    R4,0(R1)                STORE AS FIRST WORD OF MEMBER
*                                      TABLE
         LA    R4,8(R1)                LOAD REGISTER 4 AS POINTER TO
*                                      THE FIRST ENTRY
         STH   R5,4(R14)               STORE MEMBER COUNT IN OLD TABLE
         SLR   R5,R5                   INITIALIZE MEMBER COUNT TO ZERO
NEXTNTRY DS    0H
         BXLE  R9,R6,UNBLOCK           INCREMENT REGISTER 9 WITH
*                                      REGISTER 6 AND BRANCH
*                                      LESS THAN OR EQUAL TO
*                                      REGISTER 7 TO UNBLOCK
         B     GETDIR                  NO.....GO GET NEXT DIRECTORY
*                                      BLOCK
         DROP  R4                      DROP ADDRESSABILITY TO TABLE
*
***********************************************************************
*                                                                     *
*        CLOSE PDS DIRECTORY                                          *
*        OPEN SYSPRINT DCB                                            *
*        OPEN PDS DATASET FOR OUTPUT WITH A MEMBER NAME OF 99999999   *
*        LIST MEMBERS IF:                                             *
*           LIST SPECIFIED OR                                         *
*           BOTH PRINT AND NOLIST WERE NOT SPECIFIED                  *
*                                                                     *
***********************************************************************
*
FREEBLK  DS    0H
         MVC   OPENLST,OPENCLOS        MOVE CONSTANT INTO CLOSE LIST
         CLOSE ((R8),),MF=(E,OPENLST)  CLOSE DIRECTORY DCB
         L     R2,PRESENT              LOAD POINTER TO LAST TABLE
         STH   R5,4(R2)                STORE COUNT OF MEMBERS
         L     R4,MEMTABLE             LOAD POINTER TO FIRST TABLE
         CLC   4(2,R4),HALF0           SEE IF THERE WERE ANY MEMBERS
         BE    ENDMEMB                 ZERO...GO FREE MEMBER TABLE
*
*              ENQ THE PGMLIB DATASET OLD FOR QNAME=SYSIEWLP
*
         XC    LOOPCTR2,LOOPCTR2  CLEAR LOOP COUNTER
         SPACE 1
PGMENQ   DS    0H
         ENQ   MF=(E,ENQL)        ENQ PGMLIB
         LTR   R15,R15            DID IT WORK
         BZ    ENQOK              YES
         SPACE 1
         CLC   LOOPCTR2,=X'000A'  DONE 10 LOOPS ALREADY?
         BH    BADENQ             YES, TOO BAD
         SPACE 1
         LH    R1,LOOPCTR2        R1 = NBR OF TIMES LOOPED
         LA    R1,1(0,R1)         ADD 1
         STH   R1,LOOPCTR2        SAVE IT
         STIMER WAIT,BINTVL=WAITTIME   WAIT A BIT
         SPACE 1
         B     PGMENQ             GO TRY AGAIN
*        BNZ   BADENQ             NO, TOO BAD FOR NOW
         SPACE 1
ENQOK    DS    0H
         MVI   ENQFLAG,X'FF'      SAY WE ENQUEUED
         LA    R8,INPUT                LOAD POINTER TO INPUT DCB
         USING IHADCB,R8               ESTABLISH ADDRESSABILITY TO DCB
         MVC   INPUT(INPUTL),INPUTC    MOVE INPUT DCB CONSTANT INTO
*                                      INPUT DCB IN WORKAREA
         MVC   OPENLST,OPENCLOS        MOVE OPEN(CLOSE) LIST CONSTANT
*                                      INTO OPEN LIST IN WORKAREA
         LA    R1,XLIST                LOAD ADDRESS OF EXIT LIST
         ST    R1,DCBEXLST             STORE ADDRESS OF EXIT LIST IN
*                                      DCB
         LA    R2,JFCBAREA             LOAD ADDRESS OF JFCBAREA
         ST    R2,XLIST                STORE ADDRESS IN EXIT LIST
         MVI   XLIST,X'87'             SET END OF LIST AND JFCB BYTE
         MVC   RDJL,OPENCLOS           MOVE OPEN(CLOSE) LIST CONSTANT
*                                      INTO READJFCB LIST IN
*                                      WORKAREA
         RDJFCB ((8),),MF=(E,RDJL)   READ JFCB INTO JFCBAREA
         MVC   JFCBELNM,=C'99999999'   MOVE MEMBER NAME INTO JFCB
         OI    JFCBIND1,JFCPDS         SET JFCB TO INDICATE PDS MEMBER
         MVI   JFCDSRG1,HEX00          SET JFCB TO REMOVE OTHER DSORG
*                                      INDICATORS
         OPEN  ((R8),(OUTPUT)),TYPE=J,MF=(E,OPENLST)  OPEN INPUT DCB
         MVC   HEADER,HEADERM          MOVE HEADER INTO DATA AREA
SUSEA    DS    0H
         LA    R5,OUTPUTA              LOAD ADDRESS OF OUTPUT DCB FOR
*                                      ASA CODE
         LA    R4,EJECTA               LOAD ADDRESS OF EJECT DATA
         TM    48(R5),DCBOFOPN         SEE IF DCB IS ALREADY OPEN
         BO    SPUTDSN                 YES....GO PUT OUT HEADERS
         LA    R3,PRINTA               LOAD POINTER TO PRINTA
         OPEN  ((R5),(OUTPUT)),MF=(E,OPENLST)
*        BAL   R14,ALLOCOUT            LOAD ADDRESS FOR RETURN AND GO
*                                      DO SYSOUT ALLOCATION
SPUTDSN  DS    0H
         PUT   (R5),(R4)               PUT OUT PAGE EJECT
         PUT   (R5),HEADER             PUT OUT PAGE 1 HEADER
         MVC   HEADER2,LDSNAME         MOVE LENGTH AND 'DSNAME=' INTO
*                                      INTO SECOND HEADER
         MVC   DSNAME,JFCBAREA         MOVE DSNAME INTO DATA AREA
         MVC   HEADER2+4(1),HDRCNTL    MOVE IN CONTROL BYTE
         MVI   OPENPRN,BLANK           BLANK OUT MEMBER NAME
         MVC   MEMNAME(9),OPENPRN      FINISH BLANKING OUT MEMBER NAME
         PUT   (R5),HEADER2            PUT OUT PAGE 1 HEADER 2
         PUT   (R5),HEADER3            PUT OUT PAGE 1 HEADER 3
         LA    R1,AUDIT           R1 -> TO DCB
         TM    48(R1),DCBOFOPN    TEST IF OPEN
         BZ    NOAUDIT2           NO
         LH    R1,HEADER2         R1 = LTH OF HEADER2
         SH    R1,=H'5'           MAKE LTH HEX -4
         STC   R1,MVC1+1          PUT LTH IN MVC CMD
MVC1     MVC   HDR1(0),HEADER2+4  PUT HEADER IN AUDIT LINE
         PUT   AUDIT,HDR1         PUT IT IN AUDIT TRAIL TOO
         LH    R1,HEADER3         R1 = LTH OF HEADER3
         SH    R1,=H'5'           MAKE LTH HEX -4
         STC   R1,MVC2+1          PUT LTH IN MVC CMD
MVC2     MVC   HDR1(0),HEADER3+4  PUT HEADER IN AUDIT LINE
         PUT   AUDIT,HDR1         PUT IT IN AUDIT TRAIL TOO
         SPACE 1
NOAUDIT2 DS    0H
         L     R2,MEMTABLE             LOAD ADDRESS OF FIRST TABLE
         MVC   LENGTH,HALF85           SET LENGTH TO 85 BYTES
         MVC   LENGTH+2,HALF0          ZERO RESERVED BYTES
         MVC   CNTLBYTE,HDRCNTL        MOVE IN HEADER CONTROL BYTE
*
***********************************************************************
*                                                                     *
*        DELETE AND LIST MEMBER NAMES                                 *
*                                                                     *
***********************************************************************
*
SCROLLER DS    0H
         LA    R10,LINECNT             LOAD LINE COUNT
         ST    R2,PRESENT              SAVE ADDRESS OF CURRENT TABLE
         LH    R7,4(R2)                LOAD NUMBER OF MEMBERS IN TABLE
         LTR   R7,R7                   SEE IF THERE ARE ENTRIES
         BZ    NOLIST                  NO.....END OF DELETE PROGRAM
         LA    R2,8(R2)                LOAD ADDRESS OF FIRST MEMBER
         USING MEMDSECT,R2             ESTABLISH ADDRESSABILITY TO
*                                      MEMBER TABLE ENTRY
LOOP1    DS    0H
         LA    R6,DATA                 LOAD ADDRESS OF OUTPUT BUFFER
         MVI   DATA,BLANK              BLANK OUT OUTPUT BUFFER
         MVC   DATA+1(79),DATA         FINISH BLANKING BUFFER
         SPACE 1
DEL1     DS    0H
         TM    CFIELD,HIGH             SEE IF THIS IS AN ALIAS
         BZ    NOTALIAS                NO.....CONTINUE WITH MAIN NAME
         BAL   R14,LOOKLOOP            GO LOOK FOR MAIN NAME
NOTALIAS DS    0H
*
*              DELETE MEMBER HERE
*
         LA    R8,INPUT           LOAD POINTER TO PDS DCB
STOWDEL  STOW  (8),MEMBER,D       DELETE MEMBER
         LTR   R15,R15            WAS DELETE OKAY?
         BNZ   NODEL1             NO, DON'T PUT NAME IN LIST
         MVC   2(8,R6),MEMBER          PUT MEMBER NAME IN OUTPUT BUFFER
         AP    DELETED,ONE        ADD 1 TO NBR DELETED
         SPACE 1
NODEL1   DS    0H
         ST    R2,SAVER2               SAVE REGISTER 2
         LA    R6,10(R6)               LOAD POINTER TO NEXT OUTPUT
         LA    R2,DATA+70         R2 -> TO LAST PRINT ENTRY
         CR    R6,R2              IS LINE FULL?
         BH    END2               YES, GO PRINT LINE
         L     R2,SAVER2               RELOAD REGISTER 2
         LA    R2,MEMSECTN             LOAD POINTER TO NEXT MEMBER NAME
*                                      BUFFER LOCATION
         BCT   R7,DEL1                 DECREMENT MEMBER COUNT FOR
*                                 CURRENT TABLE AND GO DELETE MBR
         B     LOOP3              GO GET NEXT TABLE, IF ANY
         SPACE 1
END2     DS    0H
         PUT   (R5),LINE               PUT OUT OUTPUT LINE
         LA    R1,AUDIT           R1 -> TO DCB
         TM    48(R1),DCBOFOPN    TEST IF OPEN
         BZ    NOAUDIT3           NO
         LH    R1,LINE            R1 = LTH OF LINE DATA
         SH    R1,=H'5'           MAKE LTH HEX -4
         STC   R1,MVC3+1          PUT LTH IN MVC CMD
MVC3     MVC   HDR1(0),LINE+4     PUT DATA IN AUDIT LINE
         PUT   AUDIT,HDR1         PUT OUTPUT LINE IN AUDIT TRAIL
         SPACE 1
NOAUDIT3 DS    0H
         LA    R6,DATA                 LOAD ADDRESS OF OUTPUT BUFFER
         MVI   DATA,BLANK              BLANK OUT OUTPUT BUFFER
         MVC   DATA+1(79),DATA         FINISH BLANKING BUFFER
         SPACE 1
         SPACE 1
END3     DS    0H
         L     R2,SAVER2               RELOAD REGISTER 2
         LA    R2,MEMSECTN             LOAD POINTER TO NEXT MEMBER NAME
         BCT   R10,MOREROW             DECREMENT ROW COUNT
         PUT   (R5),(R4)               PUT OUT PAGE EJECT WHEN ZERO
         LA    R10,LINECNT             LOAD LINE COUNT
         SPACE 1                       RESET COUNTERS
MOREROW  DS    0H
         BCT   R7,DEL1                 DECREMENT MEMBER COUNT FOR
*        BCT   R7,LOOP1                DECREMENT MEMBER COUNT FOR
*                                      CURRENT TABLE
LOOP3    L     R2,PRESENT              LOAD POINTER TO CURRENT TABLE
         L     R2,0(R2)                LOAD POINTER TO NEXT TABLE
         LTR   R2,R2                   SEE IF IT WAS THE LAST TABLE
         BZ    NOROLLER           YES
         ST    R2,PRESENT              SAVE ADDRESS OF CURRENT TABLE
         LH    R7,4(R2)                LOAD NUMBER OF MEMBERS IN TABLE
         LTR   R7,R7                   SEE IF THERE ARE ENTRIES
         BZ    NOROLLER                NO.....END OF DELETE PROGRAM
         LA    R2,8(R2)                LOAD ADDRESS OF FIRST MEMBER
         B     DEL1               GO DELETE MEMBERS
*        BNZ   SCROLLER                NO.....GO LIST OUT NEXT TABLE
*
NOROLLER DS    0H
         PUT   (R5),LINE               PUT OUT LAST OUTPUT LINE
         ED    DELCOUNT,DELETED   CONVERT DELETE COUNT TO DISPLAY
         PUT   (R5),HEADER4            PUT OUT NBR DELETED
         LA    R1,AUDIT           R1 -> TO DCB
         TM    48(R1),DCBOFOPN    TEST IF OPEN
         BZ    NOAUDIT4           NO
         LH    R1,LINE            R1 = LTH OF LINE DATA
         SH    R1,=H'5'           MAKE LTH HEX -4
         STC   R1,MVC4+1          PUT LTH IN MVC CMD
MVC4     MVC   HDR1(0),LINE+4     PUT DATA IN AUDIT LINE
         PUT   AUDIT,HDR1         PUT OUTPUT LINE IN AUDIT TRAIL
         SPACE 1
NOAUDIT4 DS    0H
*
***********************************************************************
*                                                                     *
*        END OF DELETE PROGRAM                                        *
*                                                                     *
***********************************************************************
*
NOTPMESS DS    0H
NOLIST   DS    0H
CONTPRT  DS    0H
         SPACE 1
ENDMEMB  DS    0H
         L     R2,MEMTABLE             LOAD POINTER TO FIRST TABLE
FREETABS DS    0H
         LR    R1,R2                   LOAD AREA TO BE FREED
         L     R2,0(R2)                LOAD POINTER TO NEXT TABLE
         L     R0,MEMDATL              LOAD SIZE OF AREA TO BE FREED
         FREEMAIN R,LV=(0),A=(1)       FREE STORAGE GETMAINED FOR TABLE
         LTR   R2,R2                   SEE IF THERE WAS ANOTHER TABLE
         BNZ   FREETABS                YES....GO FREE NEXT TABLE
         L     R6,SAVER6               RESTORE REGISTER 6
         LA    R8,INPUT                LOAD POINTER TO INPUT DCB
         USING IHADCB,R8               ESTABLISH ADDRESSABILITY TO DCB
         TM    DCBOFLGS,DCBOFOPN       SEE IF INPUT DCB IS STILL OPEN
         BNO   DEQPGM                  NO.....GO DO DEQ
         MVC   CLOSLST,OPENCLOS        MOVE OPEN(CLOSE) LIST CONSTANT
*                                      INTO CLOSE LIST IN WORKAREA
         CLOSE ((R8),),MF=(E,CLOSLST)  CLOSE INPUT DCB
         DROP  R8                      DROP ADDRESSABILITY TO DCB
         SPACE 1
DEQPGM   DS    0H
*
*              DEQ THE PGMLIB DATASET FROM QNAME=SYSIEWLP
*
         CLI   ENQFLAG,X'FF'      DID WE ENQ?
         BNE   RETURN             NO, THEN DON'T DEQ
         DEQ   MF=(E,ENQL)        DEQ PGMLIB
         B     RETURN                  RETURN
*                                                                     *
***********************************************************************
*                                                                     *
*        PUT OUT SYNAD ERROR MESSAGE,                                 *
*           GO FREE MEMBER TABLES, AND                                *
*           CONTINUE WITH NEXT DATASET                                *
*                                                                     *
***********************************************************************
*
SERRI    DS    0H
*        PUTLINE OUTPUT=(SYNADI,SINGLE,DATA),MF=(E,IOPLSECT)  PUT OUT
*                                      DATASET NOT PRINTED DUE TO SYNAD
*                                      ERROR ON INPUT DATASET MESSAGE
         B     ENDMEMB                 GO FREE MEMBER TABLES
*                                                                     *
***********************************************************************
*                                                                     *
*        SEARCH FOR MAIN NAME,                                        *
*           SAME TTR AND NOT AN ALIAS                                 *
*                                                                     *
***********************************************************************
*
LOOKLOOP DS    0H
         STM   R3,R4,SAVER3            SAVE REGISTERS 3 AND 4
         L     R3,MEMTABLE             LOAD ADDRESS OF FIRST TABLE
         USING MEMDSECT,R3             ESTABLISH ADDRESSABILITY TO
*                                      MEMBER ENTRY
LOOP4    DS    0H
         ST    R3,CURRENT              SAVE ADDRESS OF PRESENT TABLE
         LH    R4,4(R3)                LOAD NUMBER OF ELEMENTS IN TABLE
         LTR   R4,R4                   SEE IF THERE ARE ZERO ELEMENTS
         BZ    NOMAIN                  YES....GO HANDLE MAIN NOT FOUND
         LA    R3,8(R3)                LOAD ADDRESS OF FIRST MEMBER
LOOP5    DS    0H
         CLC   MEMTTR,8(R2)            SEE IF TTRS ARE THE SAME
         BE    SAMETTR                 YES....GO SEE IF IT IS AN ALIAS
ENDLP5   DS    0H
         LA    R3,MEMSECTN             LOAD ADDRESS OF NEXT MEMBER
         BCT   R4,LOOP5                DECREMENT MEMBER COUNT
         L     R3,CURRENT              LOAD ADDRESS OF THIS TABLE
         L     R3,0(R3)                LOAD ADDRESS OF NEXT TABLE
         LTR   R3,R3                   SEE IF IT WAS THE LAST TABLE
         BNZ   LOOP4                   NO.....GO CHECK NEXT TABLE
         B     NOMAIN                  GO HANDLE MAIN NOT FOUND
SAMETTR  DS    0H
         TM    CFIELD,HIGH             SEE IF THIS IS ALSO AN ALIAS
         BO    ENDLP5                  YES....GO LOOK FOR ANOTHER TTR
         MVC   11(8,R6),MEMBER         MOVE MEMBER NAME INTO OUTPUT
         B     ENDLOOK                 GO TO RETURN TO CALLER
NOMAIN   DS    0H
         MVC   11(8,R6),ALIAS          INDICATE THIS IS AN ALIAS
ENDLOOK  DS    0H
         LM    R3,R4,SAVER3            RESTORE REGISTERS 3 AND 4
         BR    R14                     RETURN TO CALLER
         DROP  R3                      DROP ADDRESSABILITY TO TABLE
*
*
***********************************************************************
*                                                                     *
*        CLEANUP AREAS GETMAINED,                                     *
*           SET RETURN CODE, RESTORE REGISTERS AND                    *
*           RETURN TO CALLER                                          *
*                                                                     *
***********************************************************************
*
RETURN   DS    0H
*        LA    R0,LDYNAMIC             LOAD LENGTH OF GETMAINED AREA
*        FREEMAIN R,LV=(0),A=(10)      FREE GETMAINED AREA
*
         SPACE 1
RETURN9  DS    0H
         CLOSE (REPORT)           CLOSE SYSPRINT FILE
         LA    R1,AUDIT           R1 -> TO DCB
         TM    48(R1),DCBOFOPN    TEST IF OPEN
         BZ    NOAUDIT9           NO
         CLOSE (AUDIT)            CLOSE AUDIT FILE
         SPACE 1
NOAUDIT9 DS    0H
         LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD ADDRESS OF PREVIOUS SAVE
*                                      AREA
         LA    R0,LDYNAMIC             LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMINED AREA
         SLR   R15,R15                 ZERO REGISTER 15.  RETURN CODE
*                                      CODE WILL ALWAYS BE ZERO
         L     R14,12(,R13)            LOAD REGISTER 14 WITH RETURN
*                                      ADDRESS
         LM    R0,R12,20(R13)          RESTORE REGISTERS
*
*              GET INTO PROPER MODE AND GO BACK TO CALLER           RH
         BSM   0,R14                                                RH
         SPACE 1
LOCERR   DS    0H
         MVC   HDR1(L'BADLOCM),BADLOCM  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
BADLOOP  DS    0H
         MVC   HDR1(LOOPLTH),LOOPMSG  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
PRINTHEX DS    0H
*        PUT   REPORT,HDR1        PRINT RC MESSAGE
         BAL   R5,PRINTLNE        PRINT RC MESSAGE
         SPACE 1
RET20    DS    0H
         L     R1,IMFLRC          PUT ABEND CODE IN R1
         ABEND (1),,,USER         ABEND WITH A SYSTEM CODE
         SPACE 1
         SPACE 1
BADENQ   DS    0H
BADSYSOP DS    0H
         MVC   HDR1(L'BADSYSP),BADSYSP    SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
PRINTLNE DS    0H
         PUT   REPORT,HDR1        PRINT RC MESSAGE
         MVI   HDR1,C' '          CLEAR PRINT LINE
         MVC   HDR1+1(120),HDR1      ''
         BR    R5                 RETURN TO CALLER
         SPACE 3
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
*        WORK AREAS
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
DUMPTITL DC    C'WORKING STORAGE SECTION'
DWORD    DC    D'0'
SAVE     DC    18F'-1'
CPKECB   DC    F'0'
IMFLRC   DC    F'0'
ATTTCB   DC    F'0'
TCBHOLD  DC    F'0'
         SPACE 1
ENQFLAG  DC    X'00'
TPGMLIB  DC    CL44'IMSVS.TEST.PGMLIBA'
BADLOCM  DC    C'0 AUDIT DATASET GDG NOT FOUND'
LOOPMSG  DC    C'0 TIMER EXPIRED.'
         DC    C' AUDIT DATASET IS IN USE. TRY AGAIN'
LOOPLTH  EQU   *-LOOPMSG
HDR1     DS    0CL121
         DC    C'0'
HDR180   DS    0CL80
HDR1RC   DC    C' IUTDEL RC IS '
BYTE1    DC    C' '
BYTE2    DC    C' '
SYSRC    DS    0CL3
BYTE3    DC    C' '
BYTE4    DC    C' '
BYTE5    DC    C' '
BYTE6    DC    C' '
BYTE7    DC    C' '
USRRC    DS    0CL3
BYTE8    DC    C' '
BYTE9    DC    C' '
         DC    CL(121-(*-HDR1))'  '
         SPACE 2
LOOPCTR  DC    H'00'
LOOPCTR2 DC    H'00'
         SPACE 1
WAITTIME DC    F'500'             WAIT FOR 5 SECONDS
MULTSEC  DC    H'100'             MULTIPLIER FACTOR TO GET TIMER UNITS
TESTDAT  DC    CL6'90.134'        TEST DATE....MAY 14/90            DT
*
CONTROL  DS    0CL80              AUDIT RECORD
CTLDATE  DC    CL6' '             DATE
         DC    C'/'               /
CTLTIME  DC    CL8' '             TIME
         DC    C' '
JOBNUMBR DC    CL8' '             JOB NUMBER
         DC    C' '
JOBNAME  DC    CL8' '             JOBNAME
         DC    C' '
STEPNAME DC    CL8' '             STEPNAME
*ROCNAME DC    CL8' '             PROC NAME
ACEEUSR  DC    CL8' '             ACEE USERID
DBSTATUS DC    CL2' '             COMMAND STATUS
AUDITCMD DC    CL20' '            COMMAND
         DC    CL(80-(*-CONTROL))' '
*
         LTORG
*                                        PLACE FOR TIME/DATE
TIMEDATE DS    0CL40              TIMEDATE2,
TDTIME   DS    CL8                TD_TIME
         DS    CL3                TD_FILL1
TDDATE   DS    0C                 TD_DATE,
TDYEAR   DS    CL2                TD_YEAR
TDDOT    DS    C                  TD_DOT
TDDAY    DS    CL3                TD_DAY
         DS    CL2                TD_FILL2
TDWKDAY  DS    CL8                TD_WEEK_DAY
         DS    CL13
*
         SPACE 2
ENQL     ENQ   (QNAME,TPGMLIB,E,44,SYSTEMS),MF=L
         SPACE 1
QNAME    DC    CL8'SYSIEWLP'            MAJOR QUEUE NAME
         SPACE 2
*UDTDSN  DC    C'IMSVS.IMSTEST.CHANGE.REPORT(0)'
*UDTDSN  DC    C'IMSVS.IMSTEST.CHANGE.SYSPRINT(0)'
         SPACE 1
AUDTDSN  DC    CL44'IMSVS.TEST.IUTDEL.AUDIT(0)'
LAUD     EQU   *-AUDTDSN
         SPACE 1
AUDEND   DC    C'.IUTDEL.AUDIT(0)'
LAUDEND  EQU   *-AUDEND
         SPACE 1
BADAUDTM DC    C'0 INVALID AUDIT DATASET NAME'
         AGO   .AUDIT3
NOAUDTM  DC    C'0 AUDIT DD STATEMENT MISSING'
.AUDIT3  ANOP
BADAUDT2 DC    C'0 AUDIT DD STATEMENT DISP MUST BE MOD'
BAUDOP   DC    C'0 AUDIT FILE  OPEN FAILED. CALL TECH SUPPORT'
         SPACE 1
NOSYSPM  DC    CL121'0 PDSPRINT DD STATEMENT MISSING'
BADSYSP  DC    C'0 PDSPRINT FILE OPEN FAILED. CALL TECH SUPPORT'
         SPACE 1
*              CONTROL BLOCKS FOR  SVC 99
         DS    0F                 PUT ON FULLWORD BOUNDARY
S99RBPTR DC    XL1'80'
         DC    AL3(S99RB)
S99RB    DS    0F
S99RBLN  DC    AL1(20)
S99VERB  DC    AL1(1)             ALLOCATE BY DSNAME
S99FLAG1 DC    XL2'2000'          DON'T MOUNT VOLS OR CONSIDER OFFLINES
S99ERROR DC    AL2(0)
S99INFO  DC    AL2(0)
S99TXTPP DC    A(S99TUPL)
S99RES1  DC    A(0)
S99FLAG2 DC    X'40000000'        WAIT FOR DSNAME
         SPACE 1
S99TUPL  DS    0F
TUPL1    DC    A(TUNIT1)          DSNAME
TUPL2    DC    A(TUNIT2)          DDNAME
TUPL4    DC    A(TUNIT4)          STATUS 1 = OLD
TUPL5    DC    XL1'80'            STATUS 2 = KEEP
         DC    AL3(TUNIT5)
         SPACE 1
TUNIT1   DS    0C
TUKEY1   DC    AL2(2)             ALLOCATE BY DSNAME
TUNUM1   DC    AL2(1)
TUENT1   DS    0C
TULNG1   DC    AL2(44)            LTH OF DSNAME
TUPAR1   DC    CL44' '            AUDIT DSNAME
*UPAR1   DC    CL44'IMSVS.IMSTEST.CHANGE.'    AUDIT DSNAME
         SPACE 1
TUNIT2   DS    0C
TUKEY2   DC    AL2(1)             ALLOCATE DDNAME
TUNUM2   DC    AL2(1)
TUENT2   DS    0C
TULNG2   DC    AL2(8)             LTH OF DDNAME
TUPAR2   DC    CL8'AUDIT  '       DDNAME
         SPACE 1
TUNIT4   DS    0C
TUKEY4   DC    XL2'0004'          STATUS OF DATA SET
TUNUM4   DC    AL2(1)
TUENT4   DS    0C
TULNG4   DC    AL2(1)             LTH OF STATUS
TUPAR4   DC    X'02'              STATUS = MOD
         DC    X'01'              STATUS = OLD
*        DC    X'02'              STATUS = MOD
*        DC    X'04'              STATUS = NEW
*        DC    X'08'              STATUS = SHR
         SPACE 1
TUNIT5   DS    0C
TUKEY5   DC    XL2'0005'          STATUS 2..DISP=(OLD,KEEP)
TUNUM5   DC    AL2(1)
TUENT5   DS    0C
TULNG5   DC    AL2(1)             LTH OF STATUS 2
TUPAR5   DC    X'08'              STATUS = KEEP
*        DC    X'04'              STATUS = DELETE
*        DC    X'02'              STATUS = CATLG
*        DC    X'01'              STATUS = UNCATLG
         SPACE 3
* ------ DCB'S                    ------------------------------------
         SPACE 3
REPORT   DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=(PM),LRECL=121,       XXXX
               EXLST=JFCBADD,RECFM=FBA,BLKSIZE=6292
         SPACE 1
AUDIT    DCB   DSORG=PS,DDNAME=AUDIT,MACRF=(PM),LRECL=121,          XXXX
               EXLST=JFCBADD,RECFM=FBA,BLKSIZE=6292
         SPACE 1
PGMLIB   DCB   DSORG=PS,DDNAME=PDS,MACRF=(GL),                      XXXX
               EXLST=JFCBADD
         SPACE 1
JFCBADD  DS    0F
         DC    X'87'              JFCB ADDRESS
         DC    AL3(JFCB)
         DS    0H                 PUT JFCB ON HALFWORD BOUNDARY
JFCB     DS    0CL176' '
         IEFJFCBN  LIST=NO
         SPACE 5
***********************************************************
**                                                       **
**   CAMLST - LOCATE A CATLG ENTRY BY DSNAME             **
**                                                       **
***********************************************************
CAMLOCM  CAMLST NAME,CMLDSN,,CMLRESP
*
CMLRESP  DS    0D                  CAMLST ANSWER AREA
CMLNVOL  DS    1H                         VOLUME COUNT
CMLDEVTY DS    CL4                        UNIT TYPE
CMLVOL1  DS    CL6                        FIRST VOLUME
CMLDSEQ  DS    CL6                        DS SEQ NO
         DS    CL(265-(*-CMLRESP))  EXTEND TO 265 CHAR CAMLST SIZE
CMLDSN   DC    CL44' '            WORK AREA FOR CAMLST DSN          RH
CMLSTWAL EQU   *-CMLRESP
*
*
***************************WORK AREAS *********************************
*
         SPACE 2
MBRTYPE  DC    C' '
STARTMBR DC    CL8' '
ENDMBR   DC    CL8' '
MBRNAME  DS    CL80
SMBRLTH  DC    H'0'
EMBRLTH  DC    H'0'
WILDSLTH DC    H'0'               NBR WILD CHARS IN 1ST NAME...
WILDELTH DC    H'0'               NBR WILD CHARS IN END NAME...
SAVEALL  DC    18F'0'
*
***************************** CONSTANTS *******************************
*
         SPACE 2
SYSIN    DCB   DSORG=PS,MACRF=(GM),EODAD=EOFREAD,                      +
               DDNAME=SYSIN
SYSINL   EQU   *-SYSIN
*
*NPUTC   DCB   DSORG=PS,MACRF=(GM),EODAD=EXIT,SYNAD=ERRI,DDNAME=PDS
*NPUTL   EQU   *-INPUTC
INPUTC   DCB   DSORG=PO,MACRF=(W),DDNAME=PDS
INPUTL   EQU   *-INPUTC
*
*UTPUTAC DCB   DSORG=PS,MACRF=(PM),SYNAD=ERRO,DDNAME=SYSPRINT,
OUTPUTAC DCB   DSORG=PS,MACRF=(PM),DDNAME=SYSPRINT,                    X
               LRECL=256,BLKSIZE=3120,RECFM=VBA
OUTPUTAL EQU   *-OUTPUTAC
*
*UTPUTMC DCB   DSORG=PS,MACRF=(PM),SYNAD=ERRO,DDNAME=SYSPRINT,         X
               LRECL=256,BLKSIZE=3120,RECFM=VBM
*UTPUTML EQU   *-OUTPUTMC
*
DIRECTC  DCB   DDNAME=PDS,MACRF=(GM),RECFM=U,BLKSIZE=256,              X
               SYNAD=SERRI,EODAD=FREEBLK,DSORG=PS
DIRECTL  EQU   *-DIRECTC
*
DELETED  DC    PL3'0'
ONE      DC    P'1'
*
OPENCLOS OPEN  (,),MF=L
         SPACE 2
HEADERC  DS    0F
         DC    H'48'
         DC    H'0'
HDRCNTLC DC    C' '
         DC    CL43'**** TSO FOREGROUND HARDCOPY ****'
HEADERM  DS    0F
         DC    H'62'              LTH OF DATA + 4
         DC    H'0'
         DC    C' '               DATA STARTS HERE
         DC    CL46'DIVERSIFIED DEVELOPMENTS DELETE MEMBER UTILITY'
         DC    CL11', VERSION 3'
HEADERML EQU   *-HEADERM
*        DC    CL43'*** TSO FOREGROUND MEMBER LIST **'
HEADER3  DS    0F
         DC    H'44'              LTH OF DATA + 4
         DC    H'0'
         DC    C' '               DATA STARTS HERE
*        DC    CL39'THE FOLLOWING MEMBERS HAVE BEEN DELETED'
         DC    C'THE FOLLOWING MEMBERS '
HEADER3W DC    C'HAVE BEEN'
         DC    C' DELETED'
HEADER3L EQU   *-HEADER3
HEADER4  DS    0F
         DC    H'32'              LTH OF DATA + 4
         DC    H'0'
         DC    C'0'               DATA STARTS HERE
DELCOUNT DC    X'402020202021'
*        DC    C' MEMBERS WERE DELETED'
         DC    C' MEMBERS '
NOTDEL   DC    C'WERE'
         DC    C' DELETED'
HEADER4L EQU   *-HEADER4
LDSNAME  DS    0CL12
         ORG   LDSNAME
         DC    H'66'
         DC    H'0'
         DC    CL8' DSNAME='
EJECTM   DS    0F
         DC    H'5'
         DC    H'0'
         DC    X'8B'
EJECTA   DS    0F
         DC    H'5'
         DC    H'0'
         DC    C'1'
SPACE    EQU   EJECTA
         SPACE 2
FULL0    DC    F'0'
FULL1    DC    F'1'
FULL4    DC    F'4'
FULL20   DC    F'20'
FULL28   DC    F'28'
FULL256  DC    F'256'
PRINTILN DC    H'12',H'0'
PRINTI   DC    CL8'PRINTI'
PRINTALN DC    H'12',H'0'
PRINTA   DC    CL8'PRINTA'
PRINTMLN DC    H'12',H'0'
PRINTM   DC    CL8'PRINTM'
BLANKS   DC    256CL1' '
ALIAS    DC    CL8' *ALIAS*'
ENDCHAIN DS    0F
         DC    X'FF000000'
MEMDATL  DC    X'00'                   SUBPOOL NUMBER
         DC    AL3(LINECNT*36+8)       CALC TABLE SPACE
LINECNT  EQU   50                      DEFAULT LINES PER PAGE FOR
*                                      MEMBER NAME LIST.  MODIFY
*                                      ABOVE STATEMENT TO CHANGE
*                                      NUMBER OF LINES PER PAGE
*                                      IN MEMBER NAME LIST.
HALF0    DC    H'0'
HALF1    DC    H'1'
HALF2    DC    H'2'
HALF6    DC    H'6'
HALF12   DC    H'12'
HALF85   DC    H'85'
HALF256  DC    H'256'
HEXFF    EQU   X'FF'
HIGH     EQU   X'80'
BLANK    EQU   X'40'
LOW      EQU   X'01'
*JFCPDS  EQU   X'01'
HEX00    EQU   X'00'
SCLSA    EQU   C'A'
SKIPM    EQU   X'09'
DSOPS    EQU   X'40'
DSOPO    EQU   X'02'
NOWTP    EQU   X'00'
         SPACE 2
****************************** MESSAGES *******************************
OPENMSG  DC    AL2(OPENMSGL),AL2(0)
         DC    C'OUPUT PROCESSING IS BEING TERMINATED.  AN ERROR WAS ENX
               COUNTERED ATTEMPTING TO OPEN THE OUTPUT DATASET ASSOCIATX
               ED WITH DDNAME: '
OPENMSGL EQU   *-OPENMSG
*
DSNMSG   DC    AL2(DSNMSGL),AL2(0)
         DC    C'PROCESSING HAS BEEN COMPLETED FOR DATASET: '
DSNMSGL  EQU   *-DSNMSG
*
MEMMSG   DC    AL2(MEMMSGL),AL2(0)
         DC    C' MEMBER: '
MEMMSGL  EQU   *-MEMMSG
*
SYNADI   DC    AL2(SYNADIL),AL2(0)
         DC    C'A SYNAD ERROR OCURRED READING YOU INPUT DATASET AND ONX
               LY PART OF YOUR DATASET MAY HAVE BEEN PRINTED.'
SYNADIL  EQU   *-SYNADI
*
SYNADO   DC    AL2(SYNADOL),AL2(0)
         DC    C'A SYNAD ERROR OCURRED WRITING THE OUTPUT DATASET AND NX
               O MORE DATASETS WILL BE PRINTED.'
SYNADOL  EQU   *-SYNADO
*
DSNISU   DC    AL2(DSNISUL),AL2(0)
         DC    C'DATASET HAS UNDEFINED RECORD LENGTH AND WILL NOT BE PRX
               INTED.'
DSNISUL  EQU   *-DSNISU
*
DSNISL   DC    AL2(DSNISLL),AL2(0)
         DC    C'DATASET HAS RECORD LENGTH GREATER THAN 256.'
DSNISLL  EQU   *-DSNISL
         SPACE 2
************************ DSECTS (MAPPING MACROS) **********************
MEMDSECT DSECT
MEMNTTR  DS    CL11
         ORG   MEMNTTR
MEMBER   DS    CL8
MEMTTR   DS    CL3
CFIELD   DS    CL1
MEMSECTN EQU   *
         EJECT
*********************** DSECT FOR DYNAMIC WORKAREA ********************
WORKAREA DSECT
SAVEAREA DS    18F
ALCSAVE  DS    12F
         DS    0D
DEC      DS    2F
RETNCD   DS    F
CONV     DS    2F
LINE     DS    0H
LENGTH   DS    H
         DS    H
CNTLBYTE DS    CL1
DATA     DS    CL256
         DS    0F
HEADER2  DS    CL12
DSNAME   DS    CL44
OPENPRN  DS    CL1
MEMNAME  DS    CL8
CLOSEPRN DS    CL1
         ORG   DSNAME-4
DSNLENP  DS    CL2
DSNLEN   DS    CL2
DSNBUF   DS    CL44
         ORG   MEMNAME-4
MEMNAMEL DS    CL2
         ORG
*EADER   DS    CL62               SAME LTH AS HEADERM
HEADER   DS    CL(HEADERML)       SAME LTH AS HEADERM
         ORG   HEADER+4
HDRCNTL  DS    CL1
DFID     DS    CL2
         ORG
VOLBIT   DS    CL1
VOLUME   DS    CL8
MEMTABLE DS    F
ENDTABLE DS    F
CURRENT  DS    F
PRESENT  DS    F
COLUMN   DS    F
XLIST    DS    F
RDJL     RDJFCB (,),MF=L
JFCBAREA DS    44F
         ORG   JFCBAREA+44
*FCBELNM DS    CL8
         ORG   JFCBAREA+86
*FCBIND1 DS    CL1
         ORG   JFCBAREA+98
*FCDSRG1 DS    CL1
         ORG
SAVER6   DS    F
SAVER2   DS    2F
SAVER3   DS    2F
*
         PRINT NOGEN
*
INPUT    DCB   DSORG=PS,MACRF=(GM),DDNAME=PRINTI
*
OUTPUTA  DCB   DSORG=PS,MACRF=(PM),DDNAME=PRINTA,RECFM=VBA,            +
               LRECL=256,BLKSIZE=3120
*
DIRECT   DCB   DDNAME=PRINTI,DSORG=PS,MACRF=(GM),RECFM=U,BLKSIZE=256,  X
               SYNAD=SERRI,EODAD=FREEBLK
*
OPENLST  OPEN  (,),MF=L
*
CLOSLST  CLOSE (,),MF=L
*
         PRINT GEN
*
RETCODE  DS    F
GFPARMP  DS    F
LDYNAMIC EQU   *-WORKAREA
         SPACE 1
         PRINT NOGEN
         DCBD  DEVD=DA,DSORG=(PS,PO)
*
         IHAPSA
         IKJTCB
         IEFTIOT1
         IEZJSCB
         IEFJSSIB
*        PARMBLK DSECT
         IHAACEE
         IHAASCB
         IHAASXB
*
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   IUTDEL
//LKED.SYSLMOD DD DSN=SYS1.BCSCLINK,DISP=SHR
//LKED.SYSLIN2 DD DSN=SYS9.IMSUTIL.LOAD,DISP=SHR
//LKED.SYSIN DD *
  INCLUDE SYSLIN2(DAYDATE)
  SETCODE AC(1)
  NAME IUTDEL(R)
/*
//
