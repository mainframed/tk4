.cm this is documentation for BACKDSNS.
.HY OFF;
.dc cont off
.pl 64      11.00i for page length
.tm 2       0.33i
.bm 4       0.66i  for page printers, not line printers
.ll 72      7.20i
.dc cont off
:gdoc sec='BACKDSNS Users Guide.'
:frontm.
:titlep.
:title.BACKDSNS Users Guide
:docnum.
:date.&date
:author.Randy Hall
:author.1151 Palmer Rd,
:author.Victoria, B.C.
:address.
:aline.Distribution List:
:aline.Anybody who wants it
:aline.Randy Hall
:eaddress.
:etitlep.
:toc.
:body.
.tm 3
.bm 1
.hy off;
.fo off
:h1        Preface

      This publication,   the BACKDSNS REFERENCE MANUAL,  8th          ×
      edition, October, 1998, describes how to use the BACKDSNS        ×
      dataset backup/restore utility program.

      This publication is provided by Diversified Developmemts to
      users of the  BACKDSNS dataset backup/restore utility program.

      Changes to this manual are indicated with a solid bar (×) on     ×
      the outside edge of the changed line.                            ×

:h1.Modification Log
.bx 1 9 23 75
:hp2.
 Rev no.     Date      Description of Revision  :ehp2.
.bx
   08     Oct    1998  Eighth issue ...Because of DFSMSRMM, the        ×
                       SYSUT2 dsn will again be used to create the     ×
                       backup dataset names. The name on tape will     ×
                       be the SYSUT2 DSN= with F001, F002, etc.        ×
                       added to the end to make a unique name. If      ×
                       the SYSUT2 dsn is too long, it will be          ×
                       shortened until it is valid.                    ×
                       The layout of the //RESTORE record had to be    ×
                       increased because of this.                      ×
.bx
   07     Aug    1997..Seventh issue ...Added 'IEBCOPY' parm to
                       force use of IEBCOPY, not PDSFAST, as PDSFAST
                       doesn't work under Y2K...
                       Use //STEPLIB of IMSVS.AUTHLIB1 rather than
                       HALL.LINKLIB to avoid IEBCOPY error messages.
                     ..If a //OUTDCB as well as a //DEBUG dd is used,
                       a dump of DCB's and JFCB's will occur.
.bx
   06     Sept   1996  Sixth issue ...documentation revision with
                       information on cataloging the 1st file.
                       See JCL COMMENTS for SYSUT2..
                       Also add more documentation on PARMs...
.bx
   05     June   1996  Fifth issue ...This revision uses the SYSUT2
                       DD information to create the first file on
                       the tape. This was necessary to use expiry
                       dates after system changes sometime before
                       June, 1996. The DSN can now be used to catalog
                       the backup tape. Also, the DSN must be a valid
                       dataset name. NONE is no longer valid if RACF
                       does dsn checking. The SYSUT2 dsn will no longer
                       be used to create the backup dataset names. The
                       name on tape will be the same as the disk file
                       name.
                       There is no FILE 0001 in the //REPORT listing.
                       It is now a control dataset created from the
                       //SYSUT2 jcl parameters.
.bx off
.pa
:h2.MODIFICATION LOG, continued...
.bx 1 9 23 72
:hp2.
 Rev no.     Date      Description of Revision  :ehp2.
.bx
   04     Feb    1990  Fourth issue ...This is a major revision
                       that handles multi-volume tape datasets, and
                       allows a parm to specify UNIT= and VOL=
                       for RESTORES.
.bx
   03     Feb    1990  Third issue ...This is a major revision
                       that includes documentation on the NEW
                       RESTORE option.
.bx
   02     June   1989  Second issue ...DSN=NONE and //RESTORE
.bx
   01     Feb    1989  First issue
.bx off
:h1.Copyright
                         Copyright 1989-1998 by                        ×
                       Diversified Developments,
                          1151 Palmer Road,
                            Victoria, B.C.
                              V8P 2H5

                          All Rights Reserved

                              8th Edition                              ×
                              October, 1998                            ×


                         Questions or comments?
            E-mail to randy.hall@i.am or randy.hall@usa.net

:h1.       Introduction

 The program BACKDSNS is used to backup datasets to tape, based on
 the dataset names contained in the //DSNS control stream.

 The program BACKDSNS is used to restore datasets from tape,
 based on the dataset names contained in the //DSNS control stream.

 BACKDSNS is written using standard IBM macros, and should run on
 any IBM mainframe running MVS software in 24 bit mode with RACF
 installed.
 Any IBM compatible disk or tape drive should be accessible.


 SEQUENTIAL datasets are copied using QSAM.
            IEBGENER could be used to restore these datasets.

 PARTITIONED datasets are copied using PDSFAST.
            PDSFAST could be used to restore these datasets.

 DIRECT access datasets are copied sequentially using QSAM.
            A BDAM load program would have to be used to
            restore these datasets.

 VSAM datasets are copied using IDCAMS EXPORT TEMPORARY.
            IDCAMS IMPORT could be used to restore these datasets.



 IEBGENER and IDCAMS are IBM utility programs.
 RACF is an IBM security system.
 PDSFAST is a Software Engineering of America utility program.




:h1. Program Description
BACKDSNS reads a dataset name from //DSNS to determine what dataset
to copy to the //SYSUT2 output tape.

The dataset is dynamically allocated to //SYSUT1 and is checked to see
if it is empty and if RACF will allow read access.

Selected datasets are copied to tape and a listing is produced showing
the disk dataset name, tape file number, tape volume serial number(s),
and tape dataset name for each disk dataset backed up.

An optional //RESTORE dataset can be produced showing the disk dataset
name, dataset type, tape volume serial number(s), tape file sequence
number, dcb information, disk volume, and tape dataset name.           ×
The primary purpose of this file is to contain information needed to
restore the dataset.

Note that from version 5 up, the first dataset is not shown in the     ×
//RESTORE file, as it is now used just for system information.


If this is a RESTORE operation, the data in //DSNS must be the data
created in the //RESTORE dataset in the backup job.
If the dataset does not exist, a new one will be created based on the
restore information.
If the dataset is a PDS, the directory will be erased before the copy
is done.
DIRECT access (BDAM) datasets CANNOT be restored with BACKDSNS. They
MUST be restored using a program specifically designed for the data.


The //SYSUT2 DCB attributes are set as follows:

 SEQUENTIAL datasets:
            BLKSIZE = SYSUT1 blksize
              LRECL = SYSUT1 lrecl
              RECFM = SYSUT1 recfm

 PARTITIONED datasets:
    PDSFAST BLKSIZE = 19089
              LRECL = 19085
              RECFM = VS

 DIRECT access datasets:
            BLKSIZE = SYSUT1 blksize or 32767 if blksize=0
              LRECL = SYSUT1 lrecl or blksize if lrecl=0
              RECFM = SYSUT1 recfm or U if no sysut1 recfm

:h2. PROGRAM DESCRIPTION, continued...
 VSAM datasets:
     EXPORT BLKSIZE = 23220
              LRECL = 516
              RECFM = VBS

For a more detailed description of the above DCB attributes, see the
IBM JCL manual.

If SYSUT2 becomes a multi-volume file, check the JOBLOG as well as
the REPORT file to make sure you have the volume serial numbers of
all the tapes used to backup/restore the disk datasets.


:h1. Program Parameters

BACKDSNS allows the following parameters:

    IEBCOPY...Use IEBCOPY, not PDSFAST to copy partitioned datasets.
              As of August 12, 1997, our version of PDSFAST cannot
              copy tapes created under the current date to a Y2K date.
              Use //STEPLIB of IMSVS.AUTHLIB1 rather than
              HALL.LINKLIB to avoid IEBCOPY error messages.

    RESTORE...This tells BACKDSNS that this is a restore run.

       VOL=...For a RESTORE run, all datasets that do not already
              exist will be allocated on the specified volume(s).
              Up to 4 volumes can be specified, as VOL=(v1,v2...).

      UNIT=...For a RESTORE run, all datasets that do not already
              exist will be allocated to the specified UNIT.
              The default is UNIT=SYSDA.

       KEEP...For a RESTORE run, all datasets created during a
              RESTORE will not be cataloged.

      ALLOC...When gathering size statistics, use allocated space,
              not used space.

     TUNIT=...For a RESTORE run, specify tape unit
              The default is TUNIT=TAPE.

:h1. Backup Jcl Example

The following JCL is required to run BACKDSNS to backup files:

//*
//*    backup datasets to tape
//*
//BACKDSNS EXEC PGM=BACKDSNS,REGION=4000K
//STEPLIB  DD DSN=HALL.LINKLIB,DISP=SHR
//REPORT   DD SYSOUT=*               FOR AUDIT TRAIL
//SYSPRINT DD SYSOUT=*               FOR PDSFAST/COPY
//SYSABEND DD SYSOUT=*               for a dump, if needed
//DEBUG    DD SYSOUT=*               for an internal module trace
//OUTDCB   DD SYSOUT=*               for a DCB/JFCB trace
//RESTORE  DD DSN=hli.RESTORE,       for a list of DSNS
//            DISP=SHR                    LRECL must be 200            ×
//SYSUT2   DD DSN=hli.BACKUP,
//            UNIT=(TAPE,,DEFER),
//            DISP=(,KEEP),LABEL=(1,SL,RETPD=nnn),
   and one of....
//            VOL=(,RETAIN)          for a new scratch tape, or...
//            VOL=(,RETAIN,SER=xxxxxx)    for a specific volser, or...
//            VOL=(,RETAIN,REF=*.STEP1.SYSUT2)  to refer to a prev step
   plus....
//SYSIN    DD *
 COPY  I=SYSUT1,O=SYSUT2
/*
    or, if the control statement is in a dataset:
//SYSIN    DD DSN=dsname,DISP=SHR
//*
        //DSNS is the list of dataset names to be backed up.....
               The DSN starts in column 1, and if specified,
               the VOLSER is in column 46.
               An asterisk (*) in column 1 is a comment.               ×


//DSNS     DD *
* THIS IS A COMMENT
HALL.ATS2.TEXT                                      this is a pds
HALL.BTSOUT                                         this is a seq dsn
IMSRCF1V.HALL.ALECON                         IMST80 volser of catalog
                                                    for vsam...
HALL.MASTER                                         this is a da file
HALL.AAAAAAAA.BBBBBBBB.CCCCCCCC.DDDDDDDD.EEE        max lth dsn
HALL.TEST.VOLSER                             USR800 uncat'd dsn vol
//

:h1. Restore Jcl Example

The following JCL is required to run BACKDSNS to restore files:

//*
//*    restore datasets from tape
//*
//BACKDSNS EXEC PGM=BACKDSNS,PARM=RESTORE,REGION=4000K
//STEPLIB  DD DSN=HALL.LINKLIB,DISP=SHR
//REPORT   DD SYSOUT=*               FOR AUDIT TRAIL
//SYSPRINT DD SYSOUT=*               FOR PDSFAST/COPY
//SYSABEND DD SYSOUT=*               for a dump, if needed
//DEBUG    DD SYSOUT=*               for an internal module trace
//OUTDCB   DD SYSOUT=*               for a DCB/JFCB trace
//DSNS     DD DSN=hli.RESTORE,       for a list of DSNS to RESTORE
//            DISP=SHR                   LRECL must be 200             ×
//*YSUT1   DD UNIT=(TAPE,,DEFER)     TO GET A TAPE DRIVE
//SYSUT1   DD  DSN=the name you used on the backup,
//             UNIT=(TAPE,,DEFER),VOL=SER=the volser,
//             DATACLAS=TAPEONLY,
//             DISP=(OLD,KEEP),
//             LABEL=(1,SL,EXPDT=99365) may not be needed...
//SYSIN    DD *
 COPY  I=SYSUT1,O=SYSUT2
/*
    or, if the control statement is in a dataset:
//SYSIN    DD DSN=dsname,DISP=OLD
//*
//

:h1. Rename dataset at restore

All datasets can be renamed at restore time EXCEPT vsam files.
To rename a dataset, change the name in the RESTORE file, columns 1-44.

To rename a VSAM file, you must use IDCAMS, with the NEWNAME option.
The following jcl is an example of how to RENAME a VSAM file at
restore time:

     //*
     //*   RESTORE A VSAM FILE, AND RENAME ALL ENTRIES
     //*
     //STEP1    EXEC PGM=IDCAMS
     //SYSPRINT DD SYSOUT=*
     //SYSUT1   DD  DISP=SHR,DSN=vsam.name.in.restore.file,UNIT=TAPE,
     //             VOL=SER=volser,LABEL=(seqno)
     //SYSIN DD *
          IMPORT INFILE(SYSUT1) -
                    OUTDATASET(new.vsam.csi.name) -
                    INTOEMPTY -
                    OBJECTS( -
                                 (old.vsam.csi.name     -
                          NEWNAME(new.vsam.csi.name))   -
                                 (old.vsam.data.name    -
                          NEWNAME(new.vsam.data.name))  -
                                 (old.vsam.index.name   -
                          NEWNAME(new.vsam.index.name)) -
                           )
     //

Note...The dsn, volser, and seqno in the //SYSUT1 is obtained from
       the //RESTORE file created when you backed up the files....


.pa
:h2. JCL COMMENTS

The STEPLIB  DD statement is not required if the BACKDSNS program is
                in a system linklist library.

The REPORT   DD statement will contain information on backed up or
                restored datasets.

The SYSPRINT DD statement will contain a list of members for PO datasets
                and the output from any IDCAMS calls for VSAM backups.
                The SYSPRINT statement could be DUMMY if a list of
                members is not required.

The DEBUG    DD statement will produce an internal trace of the program,
                and is used for error determination.
                The DEBUG statement is optional.

The OUTDCB   DD statement will produce an internal trace of the DCB and
                JFCB control blocks for SYSUT1 and SYSUT2.
                This is used for error determination.
                The OUTDCB statement is optional. If specified, the
                the DEBUG statement must also be specified.

The RESTORE  DD statement will contain a list of backed up datasets
                that can be used for restoring datasets.
                The RESTORE statement is optional but should be
                included if you intend to use BACKDSNS for restoring.
                The DCB attributes of RESTORE are:
                RECFM=FB,LRECL=200,BLKSIZE=mult of 200                 ×

The SYSUT2   DD statement defines the output tape.
                The  UNIT= MUST specify DEFER.
                The   VOL= MUST specify RETAIN.
                           If there are other files on the tape,
                           the REF= parameter can be specified.
                The LABEL= must be  specified to indicate the file
                           number.
                The  DISP= MUST be (NEW,KEEP).
                The   DSN= will be used for system information, such as
                           an EXPIRY DATE, or for CATALOGing the tape.

      NOTE..... DSN=NONE will no longer work if RACF does dsn checking.

      NOTE 2... DISP= MUST be (NEW,KEEP), because of the way the system
                handles cataloging functions. If you specify
                NEW,CATLG, the LAST file copied to the tape will be
                cataloged. If you  wish to catalog the FIRST file, you
                will have to add a 2nd step that references the first
                file with a disp of (OLD,CATLG).
                For example, use.......

                //CATALOG EXEC PGM=IEFBR14
                //MASTER DD DISP=(OLD,CATLG),UNIT=TAPE,
                //   VOL=REF=*.BACKDSNS.SYSUT2,
                //   DSN=*.BACKDSNS.SYSUT2


:h2. JCL COMMENTS, continued...
The SYSUT1   DD statement defines the input tape.
                This DD is only required in a RESTORE job.
                The UNIT= MUST specify DEFER.

The SYSIN    DD statement defines the IEBCOPY control statement file.
                The statement must be COPY  I=SYSUT1,O=SYSUT2

The DSNS     DD statement contains a list of the datasets to be backed
                up for a BACKUP job, or a list of datasets to be
                restored if this is a RESTORE job.
                The datasets can be PARTITIONED(PDS), SEQUENTIAL, VSAM,
                or DIRECT.
                DIRECT files are read as SEQUENTIAL files and are
                written to tape as a sequential file.
                If the data set is not catalogued, the volser can be
                specified starting in column 46.

       NOTE...  For a VSAM dataset, the volser of the CATALOG for the
                dataset MUST be specified for RACF access, and it must
                start in column 46.
                The dataset must reside on a disk volume.

:h1.Control Statements

The only control statement needed is the COPY statement for
PDSFAST/IEBCOPY.

The //DSNS file contains a list of dataset names starting in column 1,
and, optionally, the volser starting in column 46.

:h1.RESTORE record layout

NOTE...this had changed for version 6.0                                ×

The NEW record layout of the RESTORE dataset is as follows:            ×

    Columns           Usage
     1-44             This is the name of the DISK dataset.
       45             must be blank.
    46-47             Dataset type. This can be PO, PS, VS, or DA.
       48             must be blank.
    49-54             TAPE volser that contains the backup file.
       55             blank, or * to indicate multiple volume.
    56-59             File sequence number of the file on the tape.
       60             must be blank.
    61-64             The amount of space used by the disk dataset     ×
                      in TRACKS. If the dataset is to be created, this ×
                      can be changed.                                  ×
       65             must be blank.                                   ×
    66-69             This is the original secondary allocation        ×
                      specified for the disk dataset.                  ×
       70             must be blank.                                   ×
    71-74             If the disk dataset is a PDS, this is the number ×
                      of directory blocks allocated.                   ×
       75             must be blank.                                   ×
    76-80             Is the BLKSIZE of the file. If the dataset is to ×
                      be created, this can be changed.                 ×
       81             must be blank.                                   ×
    82-86             This is the LRECL of the file.                   ×
       87             must be blank.                                   ×
    88-90             This is the RECFM of the file.                   ×
       91             must be blank.                                   ×
    92-94             This shows the TYPE of space allocated. It can   ×
                      be TRK or CYL.                                   ×
       95             must be blank.                                   ×
    96-101            This is the volser if the disk dataset is not    ×
                      catalogued, OR if the disk file is VSAM, this is ×
                      the volser of the VSAM CATALOG that owns the     ×
                      VSAM file.                                       ×
      102             must be blank.                                   ×
   103-146            The TAPE dataset name of the backed up file.     ×
   147-200            reserved for future expansion.                   ×

For multiple volumes, the only item on the next record will be the
volume serial number.

.pa
The OLD record layout of the RESTORE dataset was:

    Columns           Usage
     1-44             This is the name of the DISK dataset.
       45             must be blank.
    46-47             Dataset type. This can be PO, PS, VS, or DA.
       48             must be blank.
    49-54             TAPE volser that contains the backup file.
       55             blank, or * to indicate multiple volume.
    56-59             File sequence number of the file on the tape.
       60             must be blank.
    61-77             The TAPE dataset name of the backed up file.
       78             must be blank.
    79-82             The amount of space used by the disk dataset
                      in TRACKS. If the dataset is to be created, this
                      can be changed.
       83             must be blank.
    84-87             This is the original secondary allocation
                      specified for the disk dataset.
       88             must be blank.
    89-92             If the disk dataset is a PDS, this is the number
                      of directory blocks allocated.
       93             must be blank.
    94-98             Is the BLKSIZE of the file. If the dataset is to
                      be created, this can be changed.
       99             must be blank.
   100-104            This is the LRECL of the file.
       105            must be blank.
   106-108            This is the RECFM of the file.
       109            must be blank.
   110-112            This shows the TYPE of space allocated. It can
                      be TRK or CYL.
       113            must be blank.
   114-119            This is the volser if the disk dataset is not
                      catalogued, OR if the disk file is VSAM, this is
                      the volser of the VSAM CATALOG that owns the
                      VSAM file

If you HAVE to restore from an old backup, you will have to convert
the old record layout above to the new record layout.
You must also change the tape dataset name to BACKUP.the.disk.dsn,
and the disk dataset name to a new one, such as the.disk.dsn.NEW.


:h1.BACKDSNS return codes

The following return codes and abends can occur:

       4 - An invalid //DSNS control card was found.
         - Racf access to a dataset was denied.
         - A dataset is empty and was not backed up.
         - A dataset is allocated to some other job.
         - An error was encountered processing a dataset.

      12 - An error occurred. See the //SYSPRINT file.                 ×

    0486 - A serious error occurred. RACF will not let you use NONE
           as the dataset name on the //SYSUT2 dd statement.

    1211 - A serious error occurred. BACKDSNS abended.

    1213 - The error trap ESTAE failed. Call BACKDSNS support.


:h1.BACKDSNS messages

The messages produced by BACKDSNS are self-explanatory and start
with DSB. An error will cause a non-zero return code.
The messages and their meanings are:

DSB000 - DIVERSIFIED DEVELOPMENTS BACKUP UTILITY STARTING -
                                                 yy.ddd hh&gml.mm&gml.ss
         BACKDSNS was started at yy.ddd  hh&gml.mm&gml.ss

DSB001 - PARM INFORMATION IS INVALID
         A parameter in the parm is incorrect.

DSB002 - NO DSNAME ON CONTROL CARD:                               ERROR
         A control card in //DSNS has no dataset name.

DSB003 - INVALID CONTROL CARD:                                    ERROR
         A control card in //DSNS is invalid.

DSB005 - ABEND, CANNOT OPEN SYSPRINT DD
         The //SYSPRINT dd statement is missing or is invalid.

DSB006 - ALLOCATE FAILED FOR DSN  volser                          ERROR
         The dsname in DSB043 could not be allocated to //SYSUT1
         on a backup, or to //SYSUT2 on a restore.

DSB007 - ERROR REASON CODE: xxx   INFORMATION REASON CODE: yyy    ERROR
         The DYNALLOC reason code for DSB006.

DSB008 - PROBABLE CAUSE:                                          ERROR
         The reason //SYSUT1 could not be allocated, for example,
         the dataset is allocated to another job as DISP=OLD.

DSB009 - DE-ALLOCATE FAILED FOR DSN: dsname
         DYNALLOC could not free //SYSUT1.

DSB010 - MAX OF 5 TAPES EXCEEDED. RUN AS 2 JOBS                   ERROR
         The datasets to be backed up need more than 5 tapes.
         BACKDSNS can only handle 5 tapes per run.

DSB011 - RACF READ ACCESS DENIED                                  ERROR
         You do not have RACF access to the dsname in DSB043.

DSB012 - DIRECTORY READ FAILED FOR DSNAME IN DSB043               ERROR
         The directory of the PDS listed in DSB043 could not be read.

DSB013 - LIBRARY EMPTY :                                          ERROR
         The dataset listed in DSB043 is empty.

.pa
DSB015 - RDJFCB OF SYSUT2 FAILED                                  ERROR
         The JFCB for //SYSUT2 could not be obtained.
         //SYSUT2 may be missing or is invalid.

DSB016 - OPEN FAILED FOR SYSUT2                                   ERROR
         The output file for //SYSUT2 could not be opened. There
         may be a problem with the tape, tape drive or jcl.

DSB017 - NON-ZERO RETURN CODE FROM ESTAE CANCEL. RC=              ERROR
         The error trap code failed. Call BACKDSNS support.

DSB018 - OPEN FAILED FOR SYSUT1                                   ERROR
         The dataset listed in DSB043 could not be opened for input.
         Processing will try to continue with the next dataset.

DSB019 - ABEND xxx, OFF=yyy IN CSECT name WHILE COPYING THE
                                                ABOVE DATASET     ERROR
         An xxx abend occurred at offset yyy in BACKDSNS csect name.
         Processing will try to continue with the next dataset.

DSB020 - SYSUT2 DD STATEMENT MISSING                              ERROR
         The //SYSUT2 dd statement MUST be specified. See the JCL
         section of this document.

DSB022 - RDJFCB OF SYSUT2 FAILED                                  ERROR
         The JFCB for //SYSUT2 could not be obtained. //SYSUT2 may
         be missing or is invalid.

DSB022T- RDJFCB OF SYSUT1 FAILED                                  ERROR
         The JFCB for //SYSUT1 could not be obtained. //SYSUT1 may
         be missing or is invalid.

DSB023 - SECOND READ OF SYSUT2 JFCB FAILED                        ERROR
         The JFCB for //SYSUT2 could not be obtained. //SYSUT2 may
         be missing or is invalid.

DSB024 - UCB NOT FOUND FOR SYSUT2                                 ERROR
         The //SYSUT2 DD does not specify UNIT=TAPE.

DSB025 - PDSFAST RETURN CODE ==> nnnnnnn
         PDSFAST ended with a return code of nnnnnn.

DSB026 - IDCAMS  RETURN CODE ==> nnnnnnn
         IDCAMS ended with a return code of nnnnnn.

DSB027T/
DSB027 - ERROR OPENING SYSUT2                                     ERROR
         The //SYSUT2 DD could not be opened. Check that
         DATACLAS=NOTMM is specified

DSB039 - DEBUG OPTION IN EFFECT - A TRACE WILL BE PRODUCED IN FILE
         'DEBUG'. You included a //DEBUG dd statement in your jcl.

.pa
DSB040 - DEBUG OPTION CANCELLED - OPEN ERROR ON FILE 'DEBUG'
         The DEBUG option was cancelled. The //DEBUG file could
         not be opened.

DSB041 - RESTORE OPTION CANCELLED - OPEN ERROR ON FILE 'RESTORE'
         The RESTORE option was cancelled. The //RESTORE file could
         not be opened.

DSB042 - UNABLE TO OPEN COPY CONTROL DDCARD ddname                ERROR
         The //DSNS file is missing or is invalid.

DSB043 - PROCESSING DATASET = dsname
         The dataset named dsname is being processed.

DSB06N - NO VOLSER IN JFCB FOR SYSUT2                             ERROR
         The volume for SYSUT2 was not specified, or could not
         be obtained from the UCB.

DSB060 - INITIAL READ OF JFCB FOR SYSUT2 FAILED                   ERROR
         The //SYSUT2 dd statement is missing or is invalid.

DSB061 - DATA SET BACKUP DONE
         BACKDSNS has ended.

DSB071 - SERIOUS ERROR PROCESSING USER LIBRARY                    ERROR
         A serious error has occurred. BACKDSNS is ended.

DSB098 - BACKDSNS VERSION COMPILED ON mm/dd/yy  hh&gml.mm
         The date and time BACKDSNS was assembled.

DSB100 - DATASET NOT COPIED. DSORG INVALID:                       ERROR
         The dataset organization was not PO, PS, DA, or VS.

DSB110 - EMPTY CHECK NOT DONE: dsname
         The dataset could not be checked to see if it was empty.

DSB120 - ABOVE dsorg DATASET COPIED TO FILE nnnn ON TAPE vvvvvv,
               DSN=tape.data.set.name
         The dataset was copied to file nnnn on tape vvvvvv with a
         dataset name of tape.data.set.name.

DSB120R - ABOVE dsorg DATASET RESTORED FROM FILE nnnn ON TAPE vvvvvv

DSB122 - FOR RESTORE, USE pgm to restore this file
         Indicates how the file could be restored.

DSB999 - DATA SET BACKUP UTILITY END  yy.ddd  hh&gml.mm&gml.ss RETURN
         CODE = 0000. The date, time and return code when BACKDSNS ended

CANTMSG- The dataset is a BDAM dataset, and cannot be restored with
         BACKDSNS.
:h1.Sample Backup output
    Note that FILE 0001 is now a control dataset created
    from the //SYSUT2 jcl parameters.

INFO01 - FILE 1 IS USED FOR SYSTEM INFORMATION LIKE CATALOG NAME,
INFO02 -        EXPIRY DATE, OR GDG NAME
INFO03 - PROCESSING DATASET = HALL.BACKUP (DSN= on //SYSUT2)
INFO04 - ABOVE PS DATASET CREATED IN FILE 0001 ON TAPE C12345

DSB000 - DATA SET BACKUP UTILITY STARTING -  97.224  12:38:39
DSB098 - BACKDSNS VERSION 6.0 COMPILED ON 01/10/98  11.09
DSB039 - DEBUG OPTION IN EFFECT - A TRACE WILL BE PRODUCED IN FILE 'DEBU

DSB043 - PROCESSING DATASET = HALL.ATS2.TEXT
DSB025 - PDSFAST RETURN CODE ==> 0000000
DSB120 - ABOVE PO FILE COPIED TO FILE 0002 ON TAPE C12345,
               DSN=HALL.BACKUP.F002                                    ×

DSB043 - PROCESSING DATASET = HALL.BTSOUT
DSB120 - ABOVE PS FILE COPIED TO FILE 0003 ON TAPE C12345,
               DSN=HALL.BACKUP.F003                                    ×

DSB043 - PROCESSING DATASET = IMSRCF1V.HALL.ALECON
DSB011 - RACF READ ACCESS DENIED                                    ERRO

DSB043 - PROCESSING DATASET = HALL.MASTER
DSB120 - ABOVE DA FILE COPIED TO FILE 0004 ON TAPE C12345,
               DSN=HALL.BACKUP.F004                                    ×
DSB122 - FOR RESTORE, USE A DIRECT ACCESS LOAD PROGRAM

DSB043 - PROCESSING DATASET = HALL.A0000000.BBBBBBBB.CCCCCCCC.DDDDDDDD.E
DSB120 - ABOVE PS FILE COPIED TO FILE 0005 ON TAPE C12345,
               DSN=HALL.BACKUP.F005                                    ×

DSB043 - PROCESSING DATASET = HALL.TEST.VOLSER
DSB120 - ABOVE DATASET COPIED TO FILE 0006 ON TAPE C12345,
               DSN=HALL.BACKUP.F006                                    ×

DSB999 - DATA SET BACKUP UTILITY END  90.039  12:39:19  RETURN CODE = 00

:h1.Sample Restore output

DSB000 - DATA SET BACKUP UTILITY STARTING -  97.224  12:38:39
DSB098 - BACKDSNS VERSION 6.0 COMPILED ON 01/10/98  13.09
DSB039 - DEBUG OPTION IN EFFECT - A TRACE WILL BE PRODUCED IN FILE 'DEBU

DSB043 - PROCESSING DATASET = HALL.ATS2.TEXT
DSB025 - PDSFAST RETURN CODE ==> 0000000
DSB120 - ABOVE PO FILE RESTORED FROM FILE 0002 ON TAPE C12345

DSB043 - CREATING   DATASET = HALL.BTSOUT
DSB006 - ALLOCATE FAILED FOR DSN                                    ERRO
DSB007 - ERROR REASON CODE: 1708   INFORMATION REASON CODE: 0002
LOCMSG - ALLOCATED SUCCESSFULLY ON SS19PA
DSB120R - ABOVE PS DATASET RESTORED FROM FILE 0003 ON TAPE C12345

DSB043 - PROCESSING DATASET = IMSRCF1V.HALL.ALECON
DSB025 - IDCAMS  RETURN CODE ==> 0000000
DSB120 - ABOVE VS DATASET RESTORED FROM FILE 0004 ON TAPE C12345

DSB043 - PROCESSING DATASET = HALL.MASTER
CANTMSG- DA FILES MUST BE RESTORED WITH A DA LOAD PROGRAM           ERRO
DSB100 - DATASET NOT COPIED. DSORG INVALID.

DSB043 - PROCESSING DATASET = HALL.A0000000.BBBBBBBB.CCCCCCCC.DDDDDDDD.E
DSB120 - ABOVE PS FILE RESTORED FROM FILE 0005 ON TAPE C12345

DSB043 - PROCESSING DATASET = HALL.TEST.VOLSER
DSB120 - ABOVE DATASET RESTORED FROM FILE 0006 ON TAPE C12345

DSB999 - DATA SET BACKUP UTILITY END  97.224  12:39:19 RETURN CODE = 000

