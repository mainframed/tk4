//GETDSNS   JOB
/*ROUTE  PRINT R7
//*
//*    DSN=CBT.SOURCE(GETDSNS)
//*
//*    THIS VERSION OF GETDSNS USES SUPER LOCATE TO SEARCH THE
//*    CATALOG.
//*
//*      THIS  VERSION ALSO HANDLES MIGRATED DATASETS
//*
//STEP1 EXEC HLASMCL,PARMC='ESD',PARML='LIST,LET,MAP'
//ASM.SYSLIB DD DSN=SYS1.MACLIB,
//   DISP=SHR
//   DD DSN=SYS1.AMODGEN,DISP=SHR
//   DD DSN=RH87944.SOURCE.CNTL,DISP=SHR
//ASM.SYSPRINT DD SYSOUT=*
//ASM.SYSIN DD *
*
*        PARM: ALL  SHOW ALL INFO
*              VOL  PUT VOLSERS IN POSITION 1 AND DSNAME IN 37
*              DISK LIST ONLY DATASETS ON DISK
*              ???  ANY OTHER PARM IS CONSIDERED TO BE THE HLI
*
SP       TITLE  'GET DATASET NAMES FROM CATALOG'
         MACRO
&LAB     PUTIT &MESS
         LCLC  &L
&L       SETC  'L'''
&LAB     MVC   MSG+45(&L.M&SYSNDX),M&SYSNDX  MOVE MSG TO PRINT
         B     PRINTMSG           GO PRINT IT
M&SYSNDX DC    C&MESS
         MEND
         MACRO
&LAB     TPUTIT &MESS
         LCLC  &L
&L       SETC  'L'''
&LAB     TPUT  M&SYSNDX,&L.M&SYSNDX
         B     RETURN
M&SYSNDX DC    C&MESS
         MEND
         MACRO
&LAB     PUTIT1 &MESS
&LAB     BAL   LINK,CLOSRDR
         STAX  DEFER=NO
         PUTIT &MESS
         MEND
*        COPY  MACROS
         EJECT
GETDSNS  CSECT
BASE     EQU   12
START    DS    0H
         STM    14,12,12(13)
         LR    BASE,15
         USING GETDSNS,BASE,R11
         LA    R11,4095(0,R12)   LOAD SECOND BASE REGISTER
         LA    R11,1(0,R11)      LOAD SECOND BASE REGISTER
         B     AROUND             BRANCH AROUND DUMP TITLE
         DC    C'GETDSNS  '       PROGRAM NAME
         DC    C'VERSION 2'       VERSION NUMBER
         DC    CL8'&SYSDATE'      DATE WRITTEN
         DC    CL6'&SYSTIME'      TIME WRITTEN
         DC    C' '
         DC    C'ADDED HLI OPTION TO PARM'
         SPACE 1
AROUND   DS    0H
         L     15,=A(SAVEAREA)
         ST    13,4(15)
         ST    15,8(13)
         LR    13,15
         B     SAVEAREA+72
SAVEAREA DC    18A(0)
         LR    R10,R1  SAVE PARM LIST
         ST    R10,CPPLADDR         SAVE A(CPPL)
         RDJFCB DSNS              GET DSNS JFCB
         LTR   R15,R15            WAS RDJFCB OKAY?
         BNZ   ABEND1             NO, ABEND
         OC    JFCBLKSI,JFCBLKSI  IS THERE A BLKSIZE IN JFCB?
         BNZ   *+4+6              YES
         MVC   JFCBLKSI,=H'6160'  NO, DEFAULT TO 6160
         OPEN  (DSNS,(OUTPUT)),TYPE=J   OPEN OUTPUT DSNS FILE
         TM    DSNS+48,X'10'      DID DSNS FILE OPEN ?              RH
         BZ    ABEND1             NO                                RH
         SPACE 1
         OPEN  (REPORT,(OUTPUT))
         TM    REPORT+48,X'10'    DID REPORT FILE OPEN ?            RH
         BZ    ABEND1             NO                                RH
         MVI   PRINTNOP+1,X'00'   YES, CHANGE B TO NOP              RH
         MVI   RETNOP+1,X'00'     YES, CHANGE B TO NOP              RH
         SPACE 1
******** ***** ****************** *********************************
*
*              CHECK FOR A PARM.  THE PARMS CAN BE:
*
*        PARM: ALL  SHOW ALL INFO
*              VOL  PUT VOLSERS IN POSITION 1 AND DSNAME IN 37
*              DISK LIST ONLY DATASETS ON DISK
*              ???  ANY OTHER PARM IS CONSIDERED TO BE THE HLI
*
******** ***** ****************** *********************************
         L     R7,0(0,R10)        R7 -> TO PARM
         LH    R2,0(0,R7)         R2 = LTH OF DSN
         LTR   R2,R2              IS THERE A PARM?
         BZ    OPENSYS            NO
*        BZ    GETIN              NO
         LA    R3,2(0,R7)         R3 -> TO DSN
         SPACE 1
CHKALL   DS    0H
         CLC   =C'ALL',0(R3)      IS PARM = ALL?
         BNE   NOTALL             NO, LOOK FOR VOL
         OI    SW3,SW380          YES, SAY SHOW ALL DSNAMES         RH
         LA    R3,4(R3,0)         R3 -> TO WHERE NEXT PARM WILL BE
H4       EQU   *-2                HALFWORD OF 4
         SH    R2,H4              R2 = LTH LEFT
         BNP   OPENSYS            NONE LEFT
*        BNP   GETIN              NONE LEFT
         SPACE 1
NOTALL   DS    0H
         CLC   =C'VOL',0(R3)      IS PARM = VOL?
         BNE   NOTVOL             NO, LOOK FOR DISK
         OI    SW3,SW310          YES, SAY PUT VOLS FIRST           RH
         LA    R3,4(R3,0)         R3 -> TO WHERE NEXT PARM WILL BE
         SH    R2,H4              R2 = LTH LEFT
         BP    CHKALL             CHECK NEXT PARM, IF ANY
         BNP   OPENSYS            NONE LEFT
*        BNP   GETIN              NONE LEFT
         SPACE 1
NOTVOL   DS    0H
         CLC   =C'DISK',0(R3)     IS PARM = DISK?
         BNE   NOTDISK            NO, ASSUME IT'S THE HLI....
         OI    SW3,SW320          YES, SAY SHOW ONLY DISK VOLSERS   RH
         LA    R3,5(R3,0)         R3 -> TO WHERE NEXT PARM WILL BE
H5       EQU   *-2                HALFWORD OF 5
         SH    R2,H5              R2 = LTH LEFT
         BP    CHKALL             CHECK NEXT PARM, IF ANY
         BNP   OPENSYS            NONE LEFT
*        BNP   GETIN              NONE LEFT
         SPACE 1
NOTDISK  DS    0H
         B     ENDLOOP2           GO PROCESS IT
         SPACE 1
OPENSYS  DS    0H
         OPEN  (SYSIN,(INPUT))    OPEN INPUT FILE                   RH
         TM    SYSIN+48,X'10'     DID SYSIN FILE OPEN ?             RH
         BZ    ABEND1             NO                                RH
*        BZ    USEPARM            NO                                RH
         OI    SW3,SW340          YES, SAY WE HAVE SYSIN            RH
         SPACE 1
GETIN    DS    0H
         GET   SYSIN              READ A RECORD
         LR    R2,R1              R2 -> TO DATASET NAME
         SPACE 1
BATLOOP1 DS    0H
         CLI   0(R2),C' '         END OF DSN ?
         BE    ENDLOOP1           YES
         LA    R2,1(0,R2)         R2 -> TO NEXT DSN CHAR
         B     BATLOOP1           CHECK IT
         SPACE 1
ENDLOOP1 DS    0H
         SR    R2,R1              R2 = LTH OF DSN
         LR    R3,R1              R3 -> TO DSN
         SPACE 1
ENDLOOP2 DS    0H
         LA    R4,LVLBUF+2        R4 -> TO WHERE DSN GOES
         MVC   LVLBUF(2),=XL2'00' LTH = 0
         MVI   0(R4),C' '         CLEAR DSN FIELD
         MVC   1(43,R4),0(R4)     ''
         MVC   DSNAME(44),0(R4)   CLEAR FIELD CALLED DSNAME
         B     BATCH0             CONTINUE
         SPACE 1
USEPARM  DS    0H
         L     R7,0(0,R10)        R7 -> TO PARM
         LA    R4,LVLBUF+2        R4 -> TO WHERE DSN GOES
         MVC   LVLBUF(2),=XL2'00' LTH = 0
         LH    R2,0(0,R7)         R2 = LTH OF DSN
         LA    R3,2(0,R7)         R3 -> TO DSN
         SPACE 1
BATCH0   DS    0H
         SH        R2,=H'1'
         EX        R2,XMOVE
*XMOVE   MVC   0(0,R4),0(R3)
         AH        R2,=H'1'
         AH        R2,LVLBUF
         STH       R2,LVLBUF
         SPACE 1
**  ENTRY HERE FOR PARTIAL INDEX SPECIFIED TO ORIG LOCATE
SCATDSN2 DS    0H                                               MVS
*        MVC   DSNAME,SAVPART+2   RESTORE DSNAME
         MVC   SUPERLVL(45),LVLBUF+1  SET UP NAME FOR SUPER LOCATE
         SR    R1,R1              CLEAR R1
         IC    R1,SUPERLVL        R1 = LTH OF DSN
*
*              SEE IF THERE IS A  PERIOD IN DSN ALREADY
*
         LA    R15,SUPERLVL+1     R15 -> TO DSNAME
         SPACE 1
SCATDSN3 DS    0H                                               MVS
         CLI   0(R15),C'.'        FIND A PERIOD?
         BE    SLOC               YES, LEAVE LTH ALONE
         LA    R15,1(0,R15)       R15 -> TO NEXT DSN CHAR
         BCT   R1,SCATDSN3        CHECK FOR PERIOD
         SPACE 1
SCATDSN4 DS    0H                 NO PERIOD FOUND               MVS
         IC    R1,SUPERLVL        R1 = LTH OF DSN
         LA    R15,1(0,R1)        R15 = LTH OF DSN + .
         STC   R15,SUPERLVL       SAVE NEW LTH
         LA    R15,SUPERLVL+1     R15 -> TO DSN
         LA    R15,0(R1,R15)      R15 -> TO END OF DSN
         MVI   0(R15),C'.'        PUT . AT END OF DSN
         SPACE 1
SLOC     DS    0H
         LOCATE SUPERLOC          GO GET ALL ENTRIES
         LTR   R15,R15            WAS SUPER LOCATE OKAY ?
         BZ    SHOWCAT            YES, GO PROCESS DSNS
         CH    R15,=H'40'         RC = 40 ?
         BE    GET#MORE           YES, IT'S OKAY TOO
         CH    R15,=H'44'         RC = 44 ?
         BNE   ERROR10            NO, SAY NOT CATALOGUED
*
*              LOAD THE CURRENT & REQUIRED WORKAREA SIZE
*
GET#MORE L     R1,WORKADDR
         L     R0,0(,R1)          R0 = CURRENT LTH
         L     R2,4(,R1)          R2 = REQUIRED LTH
*        LH    R0,0(,R1)
*        SR    R2,R2              CLEAR R2
*        ICM   R2,3,2(R1)         GET REQUIRED WORKAREA LTH
*
*              FREEMAIN THE CURRENT WORKAREA
*
*       FREEMAIN R,                                                    X
               A=(1),                                                  X
               LV=(0)
*
*              CHECK SIZE OF NEW WORKAREA
*
*        C     R2,=F'65524'       IS NEW SIZE = X'FFF4'?
*        BE    TOOBIG             YES, TOO MANY ENTRIES IN CAT
*
*              GETMAIN AN EXPANDED WORKAREA
*
*        LA    R2,1024(0,R2)      ADD 1K FOR GOOD MEASURE
        GETMAIN R,                                                     X
               LV=(2)
         LTR   R15,R15            DID WE GET OUR WORK AREA?
         BNZ   ERROR3             NO, ABEND
*
*              INITIALIZE THE WORKAREA ADDRESS & HEADER
*
*        SLL   R2,16
         ST    R2,0(,R1)          SAVE LTH IN WORKAREA
         LA    R2,8               R2 = 8
         ST    R2,4(0,R1)         SET ??? IN WORKAREA
         ST    R1,WORKADDR        SAVE A(WORKAREA) IN SUPERLOC AREA
*
         MVI   SUPERLOC+3,X'00'   TURN ALL RESERVED BITS OFF        RH
         XC    CTGFDBK,CTGFDBK    CLEAR FEEDBACK AREA               RH
*
*              GO ISSUE SUPERLOCATE AGAIN
*
         B     SLOC
         SPACE 2                                                MVS
TOOBIG   DS    0H                                               MVS
         PUTIT ' TOO MANY ENTRIES TO LIST. QUALIFY SEARCH WITH ANOTHER +
               LEVEL'
*        B     ANYMORE            SEE IF ANY MORE VOLS
         SPACE 2                                                MVS
SCATDSN0 DS    0H                                               MVS
         B     LOCVOL2             EXIT
         SPACE 2
*
***  ROUTINE TO PROCESS SUPER LOCATE WORK AREA
*
SHOWCAT  DS    0H
         OI    SW2,X'80'          TURN INDEX SWITCH ON
         OI    SWITCHWD,HLILIST   TURN HLI SWITCH ON
         SR    R5,R5              MAKE SURE R5 IS 0
*
         L     R2,WORKADDR        R2 -> TO SUPER WORK AREA
         L     R0,4(0,R2)         R0 = LTH OF WORKAREA USED
         LA    R14,8(0,R2)        R14 -> TO 1ST DSN
         SPACE 1
CHKCAT1  DS    0H
         LA    R14,45(0,R14)      SKIP PAST CATALOG NAME
         CLC   =X'000000',1(R14)  1ST ENTRY NULLS?
         BE    ERROR9             YES, NO HLI IN CAT
         SPACE 1
CHKCAT2  DS    0H
         CLC   =C'CATALOG',1(R14) 1ST ENTRY A CATALOG ?
         BNE   SCATGO0            NO
         SPACE 1
         CLC   =C'CATALOG',LVLBUF+2 DID HE WANT THE CATALOGS ?
         BNE   ERROR9             NO
         SPACE 1
SCATGO0  DS    0H
*        SR    R0,R0              R0 = 0                            RH
*        ICM   R0,3,2(R2)         R0 = LTH OF WORKAREA
*        LA    R14,4(0,R2)        R14 -> TO 1ST DSN
*        CLI   0(R14),C'X'        IS IT THE HLI POINTER
*        BNE   SCATGO             NO, SO MUST BE A DSN
*        LA    R14,45(0,R14)      YES, R14 -> TO NEXT DSN
         SPACE 1
SCATGO   DS    0H
         LA    R14,1(0,R14)       R14 -> PAST ID
         ST    R14,TCAMDSN        SAVE ADDR OF FIRST DSN
         MVC   OUTDSN(44),0(R14)  PUT DSN INTO OUTPUT LINE
*        MVC   OUTDSN+44(32),BLANKS  CLEAR MSG AREA
         LA    R15,0(0,R2)        R15 -> TO SUPER WORK AREA
         AR    R15,R0             R15 -> TO END OF DSNS
         CLC   =C'CATALOG',LVLBUF+2 DID HE WANT THE CATALOGS ?
         BE    SCATGO1            YES
         SH    R15,=H'45'         NO, TAKE OFF LAST ENTRY
         SPACE 1
SCATGO1  DS    0H
         ST    R15,LASTDSN        SAVE ADDR OF LAST DSN
         SPACE 1
SCATGO2  DS    0H
         BCTR  R14,0              R14 -> TO DSN TYPE
         CLI   0(R14),C'A'        IS THIS A NONVSAM DATASET?
         BE    SCATGO3            YES
*IGRAT4  NOP   ANYMORE            B IF ONLY WANT MIGRATED DSNS
         CLI   0(R14),C'B'        IS THIS A GDG BASE NAME?
         BE    GDGBASE            YES
         SPACE 1
SCATGO3  DS    0H
         LOCATE TCAML             FIND IT
         LTR   R0,R15              LOCATE OK?
         BNZ   ERROR9              BR IF NOT
         B     LOCVOL2             NOW GO AHEAD
         SPACE 1
NEXTDSNA DS    0H
         L     R14,TCAMDSN        R14 -> TO DSN WE JUST DID
         LA    R14,45(0,R14)      R14 -> TO NEXT DSN
         C     R14,LASTDSN        HAVE WE DONE LAST DSN ?
         BH    RETURN2            YES, END OF SEARCH
         ST    R14,TCAMDSN        PUT IT IN LOCATE LIST
         MVC   OUTDSN(44),0(R14)  PUT DSN INTO OUTPUT LINE
*        MVC   LVLBUF+2(44),0(R14) PUT DSN INTO PLI WORK AREA
         B     SCATGO2            GO GET IT
         SPACE  1
LOCVOL2  DS     0H
         LH    R5,VOLCNT          R5 = NBR VOLS FROM CATALOG
         LA    R6,TVOL            R6 -> TO VOLSERS
         LA    R8,OUTDSN+45       R8 -> TO WHERE VOLS GO
         LA    R9,5               R9 = MAX VOLS PER LINE
         CLI   TWORK+4,X'20'      IS DSN ON A DISK VOLUME?
         BNE   NOTDISK2           NO, GO SEE WHAT IT IS
*        MVC   OUTDSN+45(6),TWORK+6 PUT VOLSER IN OUTPUT LINE
         SPACE  1
VOLAA    DS    0H
         MVC   0(6,R8),0(R6)      PUT VOLSER IN OUTPUT
         BCT   R5,VOLBB           GET NEXT ONE, IF ANY
         B     PRINTDSN           ELSE PRINT THE LINE
         SPACE 1
VOLBB    DS    0H
         BCT   R9,VOLCC           B IF LINE NOT FULL
         B     PRINTDSN           ELSE PRINT THE LINE
         SPACE 1
VOLCC    DS    0H
         MVI   6(R8),C','         PUT IN A COMMA
         LA    R8,7(0,R8)         R8 -> TO WHERE NEXT VOL GOES
         LA    R6,12(0,R6)        R6 -> TO NEXT VOL
         B     VOLAA              GO PUT IT IN LINE
         SPACE  1
PRINTDSN DS     0H
         TM    SW3,SW310          PUT VOLS IN COL 1?                RH
         BZ    PRINTDS2           NO
         MVC   SAVEDSN,OUTDSN     SAVE DSNAME
         MVC   OUTDSN(35),OUTDSN+45 PUT VOLSERS FIRST
         MVI   OUTDSN+35,C' '     PUT IN A BLANK
         MVC   OUTDSN+36(44),SAVEDSN PUT DSN IN POSN 36
         SPACE  1
PRINTDS2 DS     0H
         PUT   DSNS,OUTDSN        PUT DSN INTO FILE
         MVC   OUTDSN(44),BLANKS  CLEAR DSN AREA
         MVC   OUTDSN+44(36),BLANKS  CLEAR MSG AREA
         LTR   R5,R5              ANY MORE VOLS?
         BZ    ANYMORE            NO, GO GET NEXT DSN
         LA    R8,OUTDSN+45       R8 -> TO WHERE VOLS GO
         LA    R9,5               R9 = MAX VOLS PER LINE
         B     VOLAA              GO SET UP VOLS                    RH
         SPACE 1
XMOVE    MVC   0(0,R4),0(R3)
         SPACE  1
DAIRLINK DS    0H
         SPACE 1
ANYMORE  DS    0H
         B         RETURN         NO
         SPACE 1
GDGBASE  DS    0H
         TM    SW3,SW380          SHOW ALL DSNAMES ?                RH
         BZ    ANYMORE            NO, SEE IF ANY MORE DSNS
         MVI   ABENDFLG,X'00'     SET ABEND FLAG TO CONTINUE
         MVC   ERRMSG,BASEMSG     MSG = GDG BASE
*        MVC   TUPAR1,=CL6' '     BLANK OUT VOLSER FIELD
         SR    R5,R5              MAKE SURE R5 IS 0
         B     VOLERR2            SET UP REST OF MSG
         SPACE 1
NOTDISK2 DS    0H
         TM    SW3,SW320          SHOW ONLY DISK VOLSERS ?          RH
         BO    ANYMORE            NO, SEE IF ANY MORE DSNS
         TM    SW3,SW380          SHOW ALL DSNAMES ?                RH
         BZ    VOLAA              NO, PUT VOL SER IN ANYWAY
*        BZ    ANYMORE            NO, SEE IF ANY MORE DSNS
         MVI   ABENDFLG,X'00'     SET ABEND FLAG TO CONTINUE
         CLC   =C'MIGRAT',TWORK+6 HAS DATASET BEEN MIGRATED?        RH
         BE    VOLERR             YES, SAY IT WAS MIGRATED          RH
         SPACE  1
         CLI   TWORK+4,X'80'      IS DSN ON A TAPE ?
         BNE   NOTTAPE            NO
         CLI   TWORK+5,X'80'      IS DSN ON A TAPE CARTRIDGE?
         BNE   NOTCART            NO
         MVC   ERRMSG,CARTMSG     MSG = CARTRIDGE TAPE DATASET
         B     VOLERR2            SET UP REST OF MSG
*
NOTCART  DS    0H
         MVC   ERRMSG,TAPEMSG     MSG = TAPE DATASET
         B     VOLERR2            SET UP REST OF MSG
*
NOTTAPE  DS    0H
         MVC   ERRMSG,UNKNMSG     MSG = UNKNOWN DEVICE TYPE
         B     VOLERR2            SET UP REST OF MSG
         SPACE 2
VOLERR   DS    0H
         MVC   ERRMSG,NTVALMSG    MSG = NOT VALID FOR YOUR USE
*        CLC   =C'MIGRAT',TUPAR1  WANT MIGRATED DATASETS            RH
*        BNE   VOLERR2            NO, SAY NOT VALID                 RH
         MVC   ERRMSG,MIGMSG      MSG = DATASET WAS MIGRATED BY HSM
         SPACE 1
VOLERR2  DS    0H
         MVC   OUTDSN+44(32),ERRMSG  PUT ERROR MSG BESIDE DSN
         B     PRINTDSN           GO PRINT LINE
**       MVC   ERRVOL,TUPAR1         MOVE BAD VOL TO MSG
*        MVC   ERRDSN,LVLBUF+2       MOVE DSN TO ERR MSG
*        MVC   MSG+1(L'VOLMSG),VOLMSG MOVE BAD VOL MSG TO PRINT
         SPACE 1
PRINTMSG DS    0H
PRINTNOP B     PRINTPUT           NOP IF SYSPRINT FILE OPEN         RH
         PUT   REPORT,INFO1       OUTPUT THE MSG
         SPACE 1
CLEARMSG DS    0H
         MVI   MSG,C' '           CLEAR PRINT LINE
         MVC   MSG+1(131),MSG     *
         CLI   ABENDFLG,X'FF'     SHOULD WE END DS CMD ?
         BE    RETURN             YES
         B     ANYMORE            NO, GO SEE IF ANY MORE PACKS
         SPACE 1
PRINTPUT DS    0H                                                   RH
         SPACE 5
RETURN   DS    0H
         TM    SW2,X'80'          DOING ALL DSNAMES BY CATLG ?
         BO    NEXTDSNA           YES, GET NEXT DSNAME ADDRESS
         SPACE 1
RETURN2  DS    0H
*
*              LOAD THE CURRENT WORKAREA SIZE
*
         L     R1,WORKADDR        R1 -> TO WORKAREA
         L     R0,0(,R1)          R0 = CURRENT LTH
*
*              FREEMAIN THE CURRENT WORKAREA
*
*       FREEMAIN R,                                                    X
               A=(1),                                                  X
               LV=(0)
*
*
*              INITIALIZE THE DEFAULT WORKAREA ADDRESS & HEADER
*
*        SLL   R2,16
         LA    R1,SWORK           R1 -> TO DEFAULT WORKAREA
         ST    R1,WORKADDR        SAVE A(WORKAREA) IN SUPERLOC AREA
         LA    R2,256             R2 = DEFAULT WORKAREA LTH
         ST    R2,0(0,R1)         SAVE LTH IN WORKAREA
         LA    R2,8               R2 = 8
         ST    R2,4(0,R1)         SET ??? IN WORKAREA
         XC    SWORKA,SWORKA      CLEAR WORK AREA                   RH
         MVI   SUPERLOC+3,X'00'   TURN ALL RESERVED BITS OFF        RH
         XC    CTGFDBK,CTGFDBK    CLEAR FEEDBACK AREA               RH
*
         TM    SW3,SW340          DOING BATCH WITH SYSIN ?
         BO    GETIN              YES, GET NEXT DSNAME
         SPACE 1                                                    RH
ENDBATCH DS    0H
         SPACE 1
RET0     DS    0H
RETNOP   B     NOCLOSE            NOP IF REPORT FILE OPEN           RH
         CLOSE (REPORT)           CLOSE OUTPUT FILE
         CLOSE (DSNS)             CLOSE DSNS FILE
         SPACE 1                                                    RH
NOCLOSE  DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=0
         SPACE 3
*        PRINT NOGEN
*
ERROR2   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' INCOMPLETE PARAMETERS'
*
ERROR3   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' NOT ENOUGH SPACE IN REGION'
*
ERROR4   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' INVALID PARAMETERS'
*
ABEND1   ABEND 1004,DUMP
ABEND2   EQU   ABEND1
*
ERROR5   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' NO TIOT ENTRIES AVAILABLE'
*
ERROR6   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' DDNAME NOT AVAILABLE'
*
ERROR7   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' DSNAME IS MEMBER OF CONCAT. DATA SET'
*
ERROR8   DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' SVC 99 ERROR'
*
ERROR9   DS    0H
         TM    SW3,SW380          SHOW ALL DSNAMES ?                RH
         BZ    ANYMORE            NO, SEE IF ANY MORE DSNS
         MVI   ABENDFLG,X'00'     SET ABEND FLAG TO CONTINUE
         MVC   MSG+1(44),SUPERLVL+1 PUT DSNAME INTO MSG             RH
*        MVC   MSG+40(44),LVLBUF+2 PUT DSNAME INTO MSG              RH
         B     ERROR14            GO PRINT MSG
*
ERROR10  DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         B     ERROR13            GO PRINT MSG
*
ERROR11  DS    0H
         MVI   ABENDFLG,X'FF'     SET ABEND FLAG TO ABEND
         PUTIT ' DATA SET HAS BEEN DELETED'
*
ERROR12  DS    0H
         MVI   ABENDFLG,X'00'     SET ABEND FLAG TO CONTINUE
         PUTIT ' REQUEST DENIED BY INSTALLATION EXIT'
*
ERROR13  DS    0H
         MVI   SW2,X'00'          TURN ALL CATLG BITS OFF
*
ERROR14  DS    0H
         PUTIT ' DATA SET NOT IN CATALOG'
         SPACE 2
         EJECT
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
*        WORK AREAS
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
DUMPTITL DC    C'WORKING STORAGE SECTION'
* ------ WORK  AREAS              ------------------------------------
VOLLTH2  DS    0F              LTH OF MSG
         DC    AL2(0)          TSID
         DC    AL2(L'VOLMSG)   BUFFER SIZE
VOLMSG   DS    0CL84
         DC    CL1' '
ERRVOL   DC    CL6' '
ERRMSG   DC    CL32' '
         DC    C' '
ERRDSN   DS    CL44
ERRLTH   EQU   *-ERRVOL
NTVALMSG DC    CL32'    NOT VALID FOR YOUR USE'
DATAMSG  DC    CL32'    VSAM DATA  OBJECT NAME'
INDEXMSG DC    CL32'    VSAM INDEX OBJECT NAME'
HSMMSG   DC    CL32'    ERROR READING HSM DATASET'
BASEMSG  DC    CL32'    GDG BASE'
CARTMSG  DC    CL32'    CARTRIDGE TAPE DATASET'
TAPEMSG  DC    CL32'    TAPE DATASET'
UNKNMSG  DC    CL32'    UNKNOWN DEVICE TYPE'
MIGMSG   DC    CL32'    DATASET WAS MIGRATED TO TAPE'
LASTDSN  DC    F'0'
         SPACE 2
*        TCAM   LIST
TCAML    DS     0F
TCFLGS   DC     X'44000000'              TCAM ON DSN
TCAMDSN  DC     A(0)                     A(DSN)
         DC     A(0)                     VOL POINTER
         DC     A(TWORK)                 A(256 BYTE WORK AREA)
         DS    0D                 PUT ON DOUBLE WORD BOUNDARY
TWORK    DS     0CL256
VOLCNT   DC     H'0'                     VOL COUNT
DEVTYP   DC     XL4'00'                  DEVICE TYPE
TVOL     DC     CL6' '                   FIRST VOL SER
         DC     CL244' '                 REST OF TCAML DATA
         DC     CL12' '                  REST OF TCAML DATA
         SPACE 2
*
*              SEE DEBUGGING HAND BOOK NBR1, SECTION 5, SVC 26,
*              FOR SUPERLOC WORK AREA, OR MACRO IEZCTGPL.
*
         DS    0F
SUPERLOC DC    X'05201100'
         DC    A(SUPERLVL)
         DC    A(0)
WORKADDR DC    A(SWORK)
         DC    X'04'
         DC    AL3(0)
CTGFDBK  DC    A(0)               SUPERLOCATE FEEDBACK AREA         RH
         DC    A(0)
         DC    A(0)
         SPACE 3
SWORK    DS    0F
         DC    H'0'
         DC    H'256'
         DC    H'0'
         DC    H'8'
SWORKA   DS    CL256
         SPACE 3
*        PARSE PARAMETER LIST
         SPACE 2
         ENTRY DDSNAML,DSNAME
*DDSNAML  DC    AL2(L'SPACDSN+L'DSPADSN)
DDSNAML  DC    AL2(44)
DDSNAM   DS    0CL44
DSNAME   DS    0CL44
DSPADSN  DC    C'            '
SPACDSN  DC    C'      '
         DC    CL(44-L'SPACDSN-L'DSPADSN)' '
PRTDSNL  DC    AL2(44)
PRTDSN   DC    CL44' '
*
         ENTRY LVLBUF
PLEVEL   DC    A(LVLBUF),H'44',X'8000'
LVLBUF   DC    AL2(*-*),CL44' '
SUPERLVL DC    AL1(*-*),CL45' '
SAVPART  DC    AL2(*-*),CL44' '
TUPAR1   DC    CL6' '
**
ABENDFLG DC    X'00'              FLAG FOR ABEND OR NOT
**
*
SWITCHWD DC    BL1'00000000'      DEFAULT IS TOTAL(NO)
HLILIST  EQU   B'00000100'        HIGH LEVEL INDEX SWITCH
HEADING  EQU   B'00000010'        PRINT HEADING ONLY SWITCH
TOTALS   EQU   B'00000001'        PRINT TOTALS ONLY SWITCH
*
SW2      DC         X'00'
SW280    EQU   X'80'              PROCESSING AN INDEX
SW240    EQU   X'40'              DSN IS OK
SW220    EQU   X'20'              PROCESSING A GDG
SW210    EQU   X'10'              PROCESSING A PARTIAL DSN
SW204    EQU   X'04'              SPECIFIED VOLUME NOT FOUND
*
SW3      DC         X'00'
SW380    EQU   X'80'              SHOW ALL DSNAMES
SW340    EQU   X'40'              THIS IS A BATCH RUN
SW320    EQU   X'20'              SHOW ONLY DISK VOLSERS
SW310    EQU   X'10'              PUT VOLSERS FIRST
*
         SPACE 1
CPPLADDR DC    A(0)
         SPACE 1
OUTDSN   DC    CL80' '            OUTPUT DSN AREA
BLANKS   DC    CL44' '            32 BLANKS
SAVEDSN  DC    CL44' '            SAVE AREA FOR DSNAME
         SPACE 1
INFO1    DS    0CL133
MSG      DC    CL44' '
         DC    CL89' '
         SPACE 2
*        DCB'S  FOR FILES
*
* ------ DCB'S                    ------------------------------------
         SPACE 1                                                    RH
DSNS     DCB   DSORG=PS,DDNAME=DSNS,MACRF=PM,RECFM=FB,              RH C
               LRECL=80,EXLST=JFCBADD  ,BLKSIZE=6160                RH
REPORT   DCB   DSORG=PS,DDNAME=SYSPRINT,LRECL=133,RECFM=FBA,        XXXX
               MACRF=(PM),BLKSIZE=133
SYSIN    DCB   DSORG=PS,DDNAME=SYSIN,LRECL=80,RECFM=FB,             XXXX
               MACRF=(GL),EODAD=ENDBATCH
         SPACE 1
         SPACE 1
JFCBADD  DS    0F
         DC    X'87'              JFCB ADDRESS
         DC    AL3(JFCB)
         DS    0H                 PUT JFCB ON HALFWORD BOUNDARY
JFCB     DS    0CL176' '
         IEFJFCBN  LIST=NO
         SPACE 1
PARMLST2 DS    3F                 PARMLIST MAPPING
         ORG   PARMLST2
PARMWA   DC    A(WORKAREA)        ADDRESS OF 100-BYTE WORKAREA
PARMDEVT DC    A(DEVCLASS)        ADDRESS OF BYTE CONTAINING
*                                 THE DEVICE TYPE TO BE SEARCHED
PARMUCB  DC    AL1(80)            ADDRESS OF WORD TO CONTAIN THE
         DC    AL3(ADDRUCB)       THE UCB ADDRESS
         SPACE 1
DEVCLASS DC    XL1'20'            BYTE CONTAINING DEVICE CLASS
*                                 TO BE SEARCHED FOR
*                                 X'20' IS DIRECT ACCESS
ADDRUCB  DS    F                  WORD IN WHICH UCBSCAN WILL
*                                 PLACE THE ADDRESS OF THE UCB
         DS    0D                 ALIGN TO DOUBLE-WORD BOUNDARY
*                                 THE WORKAREA FOR SCAN SERVICE
*                                 MUST BE ON A DOUBLE-WORD BOUNDARY
WORKAREA DS    CL100              WORKAREA
         SPACE 1
         LTORG
         SPACE 1
*
CHECKPTR EQU  3
CHECKPDE EQU  4
UT2      EQU  2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
         PRINT NOGEN
         DCBD  DSORG=(PS,PO),DEVD=DA
         IKJCPPL
         IKJPSCB
LVLDX    DSECT
LVLPTR   DS    A
LVLLTH   DS    H
LVLFLG   DS    BL2
LVLNXT   DS    A
*
         END
//LKED.SYSLMOD DD DSN=HALL.LINKLIB,DISP=SHR
//LKED.SYSIN DD *
    ENTRY GETDSNS
    NAME  GETDSNS(R)
/*
//
