//SETDATE  JOB
/*ROUTE  PRINT  R7
//*
//*            DSN=CBT.SOURCE(SETDATE)
//*
//S1        EXEC  HLASMCL,CLASS='*',
//   COND.LKED=(7,LT,ASM)
//ASM.SYSLIB DD DSN=SYS1.MACLIB
//   DD DSN=SYS1.MACLIB,DISP=SHR    ,UNIT=DISK,VOL=SER=FOOBAR
//   DD DSN=IMSVS.GENLIB,DISP=SHR
//   DD DSN=IMSVS.GENLIBA,DISP=SHR
//   DD DSN=IMSVS.GENLIBB,DISP=SHR
//*  DD DSN=SYS1.HASPSRC,DISP=SHR
//   DD DSN=SYS1.AMODGEN,DISP=SHR
//ASM.SYSIN DD  *
*
*              PUT DATE INTO A CONTROL RECORD IN A DATASET, OR
*              PASS IT BACK IN THE PARM.
*              THE DATASET CONTAINS ONLY 1 RECORD!!!
*
***********************************************************************
*
*   TO CALL SETDATE FROM PL/I, USE THE FOLLOWING.. ..
*
*/*
*        SINCE  SETDATE IS A NORMAL ASSEMBLER PROGRAM, IT MUST
*        HAVE THE OPTIONS(ASSEMBLER) PARM.
* */
*   DCL  SETDATE        EXTERNAL ENTRY(CHAR(16))         /* */
*                       OPTIONS(ASSEMBLER,INTER);
*
*      DECLARE
*         I_PTR
*                         POINTER ;
*   DECLARE
*      1 PARM,
*          3   PARM_LTH           FIXED BIN INIT(14) ,
*          3   PARM_DATA          CHARACTER(14)
*                         INIT('FMT=MM/DD/YYYY'),
*
*        SETDATE_PARM             BASED (I_PTR)
*                                 CHARACTER(32) ;
*
*              /* STEPLIB TO HALL.LINKLIB FOR SETDATE               */
*         FETCH SETDATE ;         /* LOAD SETDATE                   */
*
*/*
*              CALL SETDATE TO GET DATE
**/
*         I_PTR =  ADDR(PARM)     ;
*         CALL SETDATE(SETDATE_PARM) ;
*
*  AT THIS POINT, THE  MM/DD/YYYY AFTER FMT= IS TODAYS  DATE
*
***********************************************************************
*
         TITLE '******* EXECUTE PROGRAM SETDATE ******'
         SPACE 3
SETDATE  CSECT
SETDATE  AMODE 24
SETDATE  RMODE 24
         USING *,R15              SET TEMP BASE
         B     AROUND             BRANCH AROUND DUMP TITLE
         DC    AL1(EYELTH)
EYECATCH DC    C'SETDATE '        PROGRAM NAME
         DC    C'VERSION 1 '      VERSION
         DC    C'&SYSDATE'        DATE WRITTEN
         DC    C' '               BLANK
         DC    C'&SYSTIME'        TIME WRITTEN
EYELTH   EQU   *-EYECATCH         LTH OF EYE CATCHER
         SPACE 1
AROUND   DS    0H
         LA    R1,0(0,R1)         CLEAR HI-ORDER BYTE FOR 31 BIT
         LA    R13,0(0,R13)       CLEAR HI-ORDER BYTE FOR 31 BIT
         BSM   R14,0              SAVE CURRENT AMODE
         STM   R14,R12,12(R13)
         LR    R12,R15            SET BASE REG 1
         LA    R11,4095(0,R12)    SET BASE REG 2
         LA    R11,1(0,R11)       ''
         DROP  R15
         USING SETDATE,R12,R11
         ST    R13,SAVE+4
         LA    R13,SAVE
         L     R5,0(0,R1)         R5 -> TO SYSTEM PARM
         OPEN  (REPORT,(OUTPUT))  OPEN SYSPRINT FILE
         SPACE 1
***********************************************************************
*
*              SEE IF THERE IS A  PARM
*
*        VALID PARMS ARE:
*              POS=NNN   DECIMAL POSITION OF WHERE TO PUT MMDDYY(YY)
*              VAR='VARIABLE'  FIND 'VARIABLE' AND THEN PUT
*                              MMDDYY(YY) AFTER IT
*              FMT=MMDDYY      FORMAT FOR DATE FIELD.
*                  MMDDYYYY    IF NOT SPECIFIED, THE DEFAULT IS
*                  DDMMYY      MMDDYY(YY).
*                  DDMMYYYY
*                  MM/DD/YY
*                  MM/DD/YYYY
*                  DD/MM/YY
*                  DD/MM/YYYY
*                  DD MTH YYYY
*                  YYYY MTH DD  .....ETC....
*
*        ANY OTHER PARMS ARE INVALID
*        IF NO PARMS ARE SPECIFIED, THE DEFAULTS WILL BE
*              PARM='POS=1,FMT=MMDDYY'
*
*        IF THE //DATEREC FILE IS NOT SPECIFIED, I ASSUME SETDATE
*        IS CALLED BY ANOTHER PROGRAM, AND THE DATE IS PASSED BACK
*        IN THE PARM AT THE FMT= VARIABLE.
*
*
***********************************************************************
         SPACE 1
*              GET PARM, IF ANY
         SPACE 1
PARM0    DS    0H
         LA    R10,2(0,R5)        R10 -> TO PARM
         LH    R2,0(0,R5)         R2 = PARM LTH
         LTR   R2,R2              IS THERE A PARM ?
         BZ    ENDPARM            NO
         LR    R4,R10             YES, R4 -> TO PARM
         SPACE 1
PARM1    DS    0H
         CLC   =C'POS=',0(R4)     IS IT THE 'POS=' PARM?
         BNE   PARM2              NO, CHECK FOR NEXT PARM
         SPACE 1
         LA    R4,4(0,R4)         R4 -> PAST POS=
         SH    R2,=H'4'           R2 = LTH OF REST OF PARM
         BNP   PARM99             0 = BAD PARM
         LR    R5,R4              R5 -> TO PGM NAME
         SPACE 1
PARM1B   DS    0H
         CLI   0(R4),C','         AT END OF POSITION?
         BE    PARM1C             YES, GO GET NEXT PARM
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCT   R2,PARM1B          CHECK ALL CHARS LEFT
         SPACE 1
PARM1C   DS    0H
         LR    R6,R4              R6 -> TO END OF POSITION
         SR    R6,R5              R6 = LTH OF PGM NAME
         BCTR  R6,0               R6 = HEX LTH
*        MVC   PGMNAME,=CL8' '    CLEAR PGM NAME FIELD
         EX    R6,MVCPGM          PACK POSITION
         CVB   R6,DWORD           CONVERT TO HEX
         BCTR  R6,0               R6 = HEX OFFSET
         STH   R6,OFFSET          SAVE IT
         OI    FLAG,X'80'         SAY WE HAVE AN OFFSET
         B     NEXTPARM           GO CHECK FOR ANOTHER PARM
         SPACE 1
MVCPGM   PACK  DWORD(8),0(0,R5)   PACK POSITION
*VCPGM   MVC   PGMNAME(0),0(R5)   MOVE PGM NAME
         SPACE 1
PARM2    DS    0H
         CLC   =C'FMT=',0(R4)     IS IT THE 'FMT=' PARM?
         BNE   PARM3              NO, CHECK FOR NEXT PARM
         SPACE 1
         LA    R4,4(0,R4)         R4 -> TO FMT= PARM, IF ANY
         SH    R2,=H'4'           R2 = LTH OF REST OF PARM
         BNP   PARM99             0 = BAD PARM
         LR    R14,R2             R14 = PARM LTH LEFT
         LR    R5,R4              R5 -> TO FMT= PARM
         SPACE 1
PARM2MM  DS    0H
         CLC   =C'MM',0(R4)       PUT DECIMAL MONTH FIRST?
         BE    PARM2M2            YES
         CLC   =C'MTH',0(R4)      PUT CHARACTER MONTH FIRST?
         BNE   PARM2DD            NO
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         OI    FMTFLAG,CHARMTH    SAY HE WANTS CHAR MONTH
         SPACE 1
PARM2M2  DS    0H
         OI    FMTFLAG,MM1ST      SAY HE WANTS MONTH 1ST
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BZ    BADPARM            NO, BAD PARM
         B     PARM2SL            SEE IF HE WANTS /
         SPACE 1
PARM2DD  DS    0H
         CLC   =C'DD',0(R4)       PUT DAY FIRST?
         BNE   PARM2YY            NO
         OI    FMTFLAG,DD1ST      SAY HE WANTS DAY 1ST
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BZ    BADPARM            NO, BAD PARM
         B     PARM2SL            SEE IF HE WANTS /
         SPACE 1
PARM2YY  DS    0H
         CLC   =C'YY',0(R4)       PUT YEAR FIRST?
         BNE   BADPARM            IT'S GOTTA BE ONE OF THEM...
         OI    FMTFLAG,YY1ST      SAY HE WANTS YEAR 1ST
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BZ    BADPARM            NO, BAD PARM
         CLC   =C'YY',0(R4)       USE 4 DIGIT YEAR?
         BNE   PARM2SL            NO
         OI    FMTFLAG,YYYYFMT    SAY HE WANTS 4 DIGIT YEAR 1ST
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
*        BZ    NEXTPARM           NO
         BZ    BADPARM            NO, BAD PARM
         SPACE 1
PARM2SL  DS    0H
*        CLI   0(R4),C'/'         PUT / BETWEEN MM DD YY ?
*        BNE   PARM2MID           NO
         CLI   0(R4),C'D'         FIND DAY?
         BE    PARM2MID           YES, NOT A SEPARATOR
         CLI   0(R4),C'M'         FIND MONTH?
         BE    PARM2MID           YES, NOT A SEPARATOR
         CLI   0(R4),C'Y'         FIND YEAR?
         BE    PARM2MID           YES, NOT A SEPARATOR
         OI    FMTFLAG,ADDSEP     SAY HE WANTS SEPARATOR
         MVC   SEPCHAR,0(R4)      SAVE SEPARATOR CHAR
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
*        BZ    NEXTPARM           NO
         BZ    BADPARM            NO, BAD PARM
         SPACE 1
PARM2MID DS    0H
         OI    FMTFLAG,MM2ND      ASSUME MM IS IN THE MIDDLE
         CLC   =C'MM',0(R4)       MIDDLE CHARS MM?
         BE    PARM2END           YES
         CLC   =C'MTH',0(R4)      MIDDLE CHARS MTH?
         BNE   PARM2MI2           NO, MIDDLE IS DD
         OI    FMTFLAG,CHARMTH    SAY HE WANTS CHAR MONTH
         LA    R4,1(0,R4)         R4 -> TO NEXT PARM, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         B     PARM2END
         SPACE 1
PARM2MI2 DS    0H
         NI    FMTFLAG,255-MM2ND  SAY DD IS IN THE MIDDLE
         CLC   =C'DD',0(R4)       MIDDLE CHARS DD?
         BNE   BADPARM            NO, BAD PARM
         SPACE 1
PARM2END DS    0H
         LA    R4,2(0,R4)         R4 -> TO NEXT PARM, IF ANY
         SH    R2,=H'2'           R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BZ    BADPARM            NO, BAD PARM
*        CLI   0(R4),C'/'         PUT / BETWEEN MM YY ?
         CLC   0(1,R4),SEPCHAR    PUT SEPARATOR BETWEEN MM YY ?
         BNE   PARM2C             NO
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
*        BZ    NEXTPARM           NO
         BZ    BADPARM            NO, BAD PARM
         SPACE 1
PARM2C   DS    0H
         CLC   =C'DD',0(R4)       END CHARS DD?
         BE    PARM2C2            YES
         CLC   =C'MM',0(R4)       END CHARS MM?
         BE    PARM2C2            YES
         CLC   =C'YY',0(R4)       WE BETTER HAVE YEAR CODE HERE
         BNE   BADPARM            IT'S GOTTA BE ONE OF THEM...
         SPACE 1
PARM2C2  DS    0H
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BZ    PARM2Z             NO, NOT YYYY
         CLC   =C'YY',0(R4)       USE 4 DIGIT YEAR?
         BNE   BADPARM            NO, MUST BE YYYY...
         OI    FMTFLAG,YYYYFMT    SAY HE WANTS 4 DIGIT YEAR 1ST
         LA    R4,2(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         BCTR  R2,0               R2 = LTH OF REST OF PARM
*        LTR   R2,R2              ANY MORE PARM?
*        BZ    NEXTPARM           NO
*        BZ    BADPARM            NO, BAD PARM
         SPACE 1
PARM2Z   DS    0H
         SR    R14,R2             R14 = LTH OF DATE FORMAT
         ST    R14,SAVELTH        SAVE IT
         ST    R5,SAVEHERE        SAVE ADDR IN CASE NO DATEREC DD
         B     NEXTPARM           LOOK AT ALL CHARS IN PARM
         SPACE 1
PARM3    DS    0H
         CLC   =C'VAR=',0(R4)     IS IT THE 'VAR=' PARM?
         BNE   PARM4              NO, CHECK FOR NEXT PARM
         SPACE 1
         OI    FLAG,X'40'         SAY HE SPECIFIED VAR= PARM
         LA    R4,4(0,R4)         R4 -> TO VAR= PARM, IF ANY
         SH    R2,=H'4'           R2 = LTH OF REST OF PARM
         BNP   PARM99             0 = BAD PARM
         LR    R5,R4              R5 -> TO VAR= PARM
         SPACE 1
PARM3B   DS    0H
         CLI   0(R4),C','         AT END OF VAR= PARM?
         BE    PARM3Z             YES, GO SET UP FORMAT NAME
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BP    PARM3B             YES, GO CHECK IT
         SPACE 1
PARM3Z   DS    0H
         MVI   VARNAME,C' '       CLEAR TPGMLIB DSN
         MVC   VARNAME+1(43),VARNAME ''
         LR    R15,R4             R15 -> TO END OF PARM
         SR    R15,R5             R15 = LTH OF PARM
         BCTR  R15,0              R15 = HEX LTH
         EX    R15,MVCFMT         SET UP PART OF PGMLIB NAME
         STH   R15,VARLTH         SAVE VARIABLE'S HEX LTH
         B     NEXTPARM           LOOK AT ALL CHARS IN PARM
         SPACE 1
MVCFMT   MVC   VARNAME(0),0(R5)   SET UP FIRST PART OF PGMLIB NAME
*
*              SEE IF WE FIND HERE= AREA
*
         SPACE 1
PARM4    DS    0H
         AGO   .NO4
         CLC   =C'HERE=',0(R4)    IS IT THE 'HERE=' PARM?
         BNE   PARM99             NO, CHECK FOR NEXT PARM
         SPACE 1
         OI    FLAG,X'20'         SAY HE SPECIFIED HERE= PARM
         LA    R4,5(0,R4)         R4 -> TO HERE= PARM, IF ANY
         SH    R2,=H'5'           R2 = LTH OF REST OF PARM
         BNP   PARM99             0 = BAD PARM
         LR    R5,R4              R5 -> TO HERE= PARM
         SPACE 1
PARM4B   DS    0H
         CLI   0(R4),C','         AT END OF HERE= PARM?
         BE    PARM4Z             YES, GO SET UP FORMAT NAME
         LA    R4,1(0,R4)         R4 -> TO NEXT KEY BYTE, IF ANY
         BCTR  R2,0               R2 = LTH OF REST OF PARM
         LTR   R2,R2              ANY MORE PARM?
         BP    PARM4B             YES, GO CHECK IT
         SPACE 1
PARM4Z   DS    0H
*        MVI   HERENAME,C' '      CLEAR TPGMLIB DSN
*        MVC   HERENAME+1(43),HERENAME ''
         LR    R15,R4             R15 -> TO END OF PARM
         SR    R15,R5             R15 = LTH OF PARM
         ST    R5,SAVEHERE        SAVE A(FORDATE)
*        BCTR  R15,0              R15 = HEX LTH
*        EX    R15,MVCFMT         SET UP PART OF PGMLIB NAME
*        STH   R15,HERELTH        SAVE VARIABLE'S HEX LTH
.NO4     ANOP
         B     NEXTPARM           LOOK AT ALL CHARS IN PARM
         SPACE 1
PARM99   DS    0H
         B     BADPARM            PRINT BAD PARM MSG
         SPACE 1
NEXTPARM DS    0H
         LTR   R2,R2              ANY PARM LEFT?
         BNP   ENDPARM            NO
         CLI   0(R4),C','         COMMA?
         BE    NEXTPAR2           YES, DROP IT
         CLI   0(R4),C' '         BLANK?
         BNE   PARM1              NO, GO SEE WHAT IT IS
         SPACE 1
NEXTPAR2 DS    0H
         LA    R4,1(0,R4)         YES, R4 -> TO NEXT BYTE
         BCTR  R2,0               TAKE 1 OFF PARM LTH
         B     NEXTPARM           LOOK AT ALL CHARS IN PARM
         SPACE 1
ENDPARM  DS    0H
*
*        GET TODAYS DATE AND TIME
*
         TIME  DEC,SAVETIME,            GET THE SYS TIME            Y2 +
               LINKAGE=SYSTEM,DATETYPE=MMDDYYYY     IN THIS CASE    Y2
         UNPK  SAVEDATE(9),SAVETIME+8(5) UNPACK DATE
*
*        OPEN DATE DATASET AND GET FIRST AND ONLY RECORD
*
GOTTIME  DS    0H
         RDJFCB DATEREC           GET JFCB INFO
         LTR   R15,R15            DID WE FIND A DATEREC DD?
         BNZ   NODD               NO, NOTHING TO READ
*
         LA    R6,DATEREC         R6 -> TO DCB
         USING IHADCB,R6
         OPEN  (DATEREC,(INPUT))
         TM    DCBOFLGS,DCBOFOPN  TEST IF OPEN
         BO    OPENOK             IT OPENED...
*
NODD     DS    0H
         ICM   R6,15,SAVEHERE     R6 -> AT PARM SAVE AREA
         BZ    BADSYSOP           NO SAVE AREA, TOO BAD....
         SR    R15,R15            DEFAULT OFFSET = 0
         B     USEOFF4          IF CANNOT OPEN, ASSUME PUT IN PARM
*        BZ    BADSYSOP         IF CANNOT OPEN
         DROP  R6
         SPACE 1
OPENOK   DS    0H
         SR    R6,R6              R6 = 0
         SPACE 1
SYSOPEN4 DS    0H
         GET   DATEREC,CONTROL    GET DATE CHK RECORD. EOF=RETURN6
*        MVC   CONTROL,0(R1)      SAVE LAST RECORD
         LA    R6,CONTROL         R6 -> AT RECORD
         SPACE 1
RETURN6  DS    0H
         CLOSE (DATEREC)          CLOSE DATE FILE
         SPACE 1
         LTR   R6,R6              WAS DATASET EMPTY?
         BE    CANTRUN            YES, TOO BAD
         LA    R5,70              R5 = MAX CHARS TO CHECK
*
         TM    FLAG,X'40'         LOOK FOR A VARIABLE?
         BZ    USEOFF             NO, USE OFFSET
         LH    R15,VARLTH         R15 = VARIABLE'S HEX LTH
         B     FINDVAR            GO FIND VARIABLE
*
*              PUT DATE AT OFFSET
*
USEOFF   DS    0H
         SR    R15,R15            DEFAULT OFFSET = 0
         TM    FLAG,X'80'         DO WE HAVE AN OFFSET?
         BZ    USEOFF4            NO, USE DEFAULT OFFSET OF 0
         LH    R15,OFFSET         R15 = HEX OFFSET FOR VARIABLE
*
USEOFF4  DS    0H
         LA    R6,0(R15,R6)       R6 -> DATE FIELD
         B     A25                GO PUT DATE AT OFFSET
*
*              FIND VARIABLE
*
FINDVAR  DS    0H
         EX    R15,CLCVAR         CHECK FOR VARIABLE
         BE    A20                YES
         LA    R6,1(0,R6)         NO, R6 -> AT NEXT BYTE
         BCT   R5,FINDVAR         GO CHECK IT
         B     CANTRUN            NOT FOUND, DON'T LET JOB RUN
*
CLCVAR   CLC   0(0,R6),VARNAME    IS IT OUR VARIABLE?
*
A20      DS    0H
         LA    R6,1(R15,R6)       R6 -> DATE FIELD
*
A25      DS    0H
         CLI   FMTFLAG,X'00'      WAS A FORMAT SPECIFIED?
         BNE   FMTDATE            YES, GO SET IT UP
*
A27      DS    0H
         CLC   6(1,R6),=C' '      WANT CENTURY IN YEAR?
         BE    A40                NO, SET IT AS MMDDYY
         CLC   6(1,R6),=C','      WANT CENTURY IN YEAR?
         BE    A40                NO, SET IT AS MMDDYY
*
A30      DS    0H
         MVC   0(8,R6),SAVEDATE   PUT MMDDYYYY IN RECORD
         B     CHKOKAY            ON WE GO
*
A40      DS    0H
         MVC   0(4,R6),SAVEDATE   PUT MMDD IN RECORD
         MVC   4(2,R6),SAVEDATE+6 PUT YY IN RECORD
         B     CHKOKAY            ON WE GO
*        AGO   .NOB
*
*              PUT DATE AT R6 IN  FORMAT SPECIFIED
*
FMTDATE  DS    0H
*        SR    R15,R15            DEFAULT OFFSET = 0
         TM    FMTFLAG,MM1ST      PUT MONTH FIRST?
         BZ    B20                NO, CHECK FOR DAY
         MVC   0(2,R6),SAVEDATE   PUT MM IN RECORD
         TM    FMTFLAG,CHARMTH    WANT MONTH IN CHAR?
         BZ    B02                NO
         PACK  DWORD,SAVEDATE(2)  PACK MONTH
         CVB   R14,DWORD          CONVERT TO HEX
         MH    R14,=H'3'          TIMES ENTRY LTH
         LA    R14,MTHTAB(R14)    R14 -> AT CHAR MONTH
         MVC   0(3,R6),0(R14)     PUT CHAR MONTH IN DATE
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B02      DS    0H
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN MM AND DD?
         BZ    B10                NO
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*        LH    R15,OFFSET         R15 = HEX OFFSET FOR VARIABLE
*
B10      DS    0H
         MVC   0(2,R6),SAVEDATE+2 PUT DD IN RECORD
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
*        TM    FMTFLAG,ADDSEP     PUT / BETWEEN DD AND YY?
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN DD AND YY?
         BZ    B12                NO
*        MVI   0(R6),C'/'         PUT / IN RECORD
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B12      DS    0H
         MVC   0(2,R6),SAVEDATE+6 ASSUME WE WANT YY IN RECORD
         TM    FMTFLAG,YYYYFMT    WANT YYYY?
         BZ    CHKOKAY            NO, DATE IS SET UP
         MVC   0(4,R6),SAVEDATE+4 PUT YYYY IN RECORD
         B     CHKOKAY            DATE IS SET UP
*
B20      DS    0H
         TM    FMTFLAG,DD1ST      PUT DAY FIRST?
         BZ    B30                NO, CHECK FOR YEAR
         MVC   0(2,R6),SAVEDATE+2 PUT DD IN RECORD
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN DD AND MM?
         BZ    B22                NO
*        MVI   0(R6),C'/'         PUT / IN RECORD
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B22      DS    0H
         MVC   0(2,R6),SAVEDATE   PUT MM IN RECORD
         TM    FMTFLAG,CHARMTH    WANT MONTH IN CHAR?
         BZ    B23                NO
         PACK  DWORD,SAVEDATE(2)  PACK MONTH
         CVB   R14,DWORD          CONVERT TO HEX
         MH    R14,=H'3'          TIMES ENTRY LTH
         LA    R14,MTHTAB(R14)    R14 -> AT CHAR MONTH
         MVC   0(3,R6),0(R14)     PUT CHAR MONTH IN DATE
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B23      DS    0H
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN MM AND YY?
         BZ    B24                NO
*        MVI   0(R6),C'/'         PUT / IN RECORD
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B24      DS    0H
         MVC   0(2,R6),SAVEDATE+6 ASSUME WE WANT YY IN RECORD
         TM    FMTFLAG,YYYYFMT    WANT YYYY?
         BZ    CHKOKAY            NO, DATE IS SET UP
         MVC   0(4,R6),SAVEDATE+4 PUT YYYY IN RECORD
         B     CHKOKAY            DATE IS SET UP
*
*              SET UP DATE AS YY(YY)..ETC
*
B30      DS    0H
*        MVC   0(8,R6),SAVEDATE   PUT MMDDYYYY IN RECORD
*        B     CHKOKAY            ON WE GO
         TM    FMTFLAG,YY1ST      PUT YEAR FIRST?
         BZ    BADPARM            NO, WHAT'S GOING ON?
         MVC   0(2,R6),SAVEDATE+6 ASSUME WE WANT YY IN RECORD
         TM    FMTFLAG,YYYYFMT    WANT YYYY?
         BZ    B31                NO, DATE IS SET UP
         MVC   0(4,R6),SAVEDATE+4 PUT YYYY IN RECORD
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
*
B31      DS    0H
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN YY AND MM?
         BZ    B31A               NO
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B31A     DS    0H
         TM    FMTFLAG,MM2ND      PUT MM IN THE MIDDLE?
         BO    B34                YES
         MVC   0(2,R6),SAVEDATE+2 PUT DD IN RECORD
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN DD AND MM?
         BZ    B32                NO
*        MVI   0(R6),C'/'         PUT / IN RECORD
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B32      DS    0H
         MVC   0(2,R6),SAVEDATE   PUT MM IN RECORD
         TM    FMTFLAG,CHARMTH    WANT MONTH IN CHAR?
         BZ    B33                NO
         PACK  DWORD,SAVEDATE(2)  PACK MONTH
         CVB   R14,DWORD          CONVERT TO HEX
         MH    R14,=H'3'          TIMES ENTRY LTH
         LA    R14,MTHTAB(R14)    R14 -> AT CHAR MONTH
         MVC   0(3,R6),0(R14)     PUT CHAR MONTH IN DATE
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B33      DS    0H
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         B     B38                END OF DATE
*
B34      DS    0H
         MVC   0(2,R6),SAVEDATE   PUT MM IN RECORD
         TM    FMTFLAG,CHARMTH    WANT MONTH IN CHAR?
         BZ    B35                NO
         PACK  DWORD,SAVEDATE(2)  PACK MONTH
         CVB   R14,DWORD          CONVERT TO HEX
         MH    R14,=H'3'          TIMES ENTRY LTH
         LA    R14,MTHTAB(R14)    R14 -> AT CHAR MONTH
         MVC   0(3,R6),0(R14)     PUT CHAR MONTH IN DATE
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B35      DS    0H
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         TM    FMTFLAG,ADDSEP     PUT SEPARATOR BETWEEN MM AND DD?
         BZ    B36                NO
*        MVI   0(R6),C'/'         PUT / IN RECORD
         MVC   0(1,R6),SEPCHAR    PUT SEPARATOR IN RECORD
         LA    R6,1(0,R6)         R6 -> NEXT DATE BYTE
*
B36      DS    0H
         MVC   0(2,R6),SAVEDATE+2 PUT DD IN RECORD
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
         LA    R6,2(0,R6)         R6 -> NEXT DATE BYTE
*        B     B38                END OF DATE
*
B38      DS    0H
*
B40      DS    0H
         MVC   0(4,R6),SAVEDATE   PUT MMDD IN RECORD
         MVC   4(2,R6),SAVEDATE+6 PUT YY IN RECORD
         B     CHKOKAY            ON WE GO
.NOB     ANOP
*
CHKOKAY  DS    0H
*
*        OPEN DATEREC DATASET FOR OUTPUT
*
         RDJFCB DATEREC           GET JFCB INFO
         LTR   R15,R15            DID WE FIND A DATEREC DD?
         BZ    PUTREC             YES, GO WRITE IT
*
         L     R6,SAVEHERE        R6 -> PARM SAVE AREA
         L     R14,SAVELTH        LOAD DATE LTH
         BCTR  R14,0              R14 = HEX LTH
         EX    R14,MVCDATE        PUT DATE IN PRINT RECORD
         B     PRINTDAT           GO PRINT IT
MVCDATE  MVC   CONTROL(0),0(R6)   PUT IT IN PRINT AREA
*
PUTREC   DS    0H
         LA    R6,DATEREC         R6 -> TO DCB
         USING IHADCB,R6
         OPEN  (DATEREC,(OUTPUT))
         TM    DCBOFLGS,DCBOFOPN  TEST IF OPEN
         BZ    NOCHKOUT         IF CANNOT OPEN
*        BO    OPENOK2            IT OPENED...
*        ICM   R6,15,SAVEHERE     R6 -> AT PARM SAVE AREA
*        BZ    NOCHKOUT           NO SAVE AREA, TOO BAD....
*        SR    R15,R15            DEFAULT OFFSET = 0
*        B     PRINTDAT         IF CANNOT OPEN, ASSUME PUT IN PARM
         SPACE 1
OPENOK2  DS    0H
         DROP  R6
*
*
* WRITE OUT THE DATE RECORD
*
         PUT   DATEREC,CONTROL    WRITE RECORD
         CLOSE (DATEREC)          CLOSE FILE
*
* ALSO  PRINT IT ON SYSPRINT
*
PRINTDAT DS    0H
         MVC   HDR180,CONTROL     PUT RECORD IN PRINT LINE
         SPACE 1
         PUT   REPORT,HDR1        PRINT RECORD
         MVI   HDR180,C' '        CLEAR PRINT LINE
         MVC   HDR180+1(79),HDR180 ''
         BAL   R5,PRINTLNE        PRINT RC MESSAGE
         B     RETURN             WE ARE DONE
         SPACE 1
*
*              ERROR ROUTINES/MESSAGES
*
BADPARM  DS    0H
         MVC   HDR1(L'PARMMSG),PARMMSG  SET UP MSG
         MVC   HDR1+L'PARMMSG+1(40),0(R5)  SET UP MSG
         MVI   IMFLRC+3,36        RC= 36, AND RETURN
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
CANTRUN  DS    0H
         MVC   HDR1(BADLLTH),BADLOCM  SET UP MSG
         MVI   IMFLRC+3,16        SET RC=16
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
NOCHKOUT DS    0H
         MVC   HDR1(L'NOSYSPM),NOSYSPM  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
BADSYSOP DS    0H
         MVC   HDR1(L'BADSYSP),BADSYSP  SET UP MSG
         MVI   IMFLRC+3,40        SET RC=40
         B     PRINTHEX           PRINT MSG AND ABEND
         SPACE 1
PRINTHEX DS    0H
         BAL   R5,PRINTLNE        PRINT RC MESSAGE
         B     RETURN9            END FOR NOW....
         SPACE 1
         SPACE 1
PRINTLNE DS    0H
         PUT   REPORT,HDR1        PRINT RC MESSAGE
         MVI   HDR1,C' '          CLEAR PRINT LINE
         MVC   HDR1+1(120),HDR1      ''
         BR    R5                 RETURN TO CALLER
         SPACE 1
RETURN   DS    0H
         SPACE 1
RETURN9  DS    0H
         CLOSE (REPORT)           CLOSE SYSPRINT FILE
         L     R13,SAVE+4
         L     R15,IMFLRC         PUT RC IN R15
*        RETURN (14,12),RC=(15)
         ST    R15,16(0,R13)      PUT RC INTO CALLERS SAVE AREA     RH
         LM    R14,R12,12(R13)    RELOAD CALLERS REGS
*              GET INTO PROPER MODE AND GO BACK TO CALLER           RH
         BSM   0,R14                                                RH
         SPACE 3
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
*        WORK AREAS
* $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
DUMPTITL DC    C'WORKING STORAGE SECTION'
SAVE     DC    18F'-1'
DWORD    DC    D'0'
SAVEHERE DC    F'0'               ADDRESS AT WHICH TO SAVE DATE
SAVELTH  DC    F'0'               ADDRESS AT WHICH TO SAVE DATE
IMFLRC   DC    F'0'
OFFSET   DC    H'0'
VARLTH   DC    H'0'               LTH OF VARIABLE
VARNAME  DC    CL44' '            UP TO 44 BYTE VARIABLE NAME
SEPCHAR  DC    C' '               SEPARATOR CHARACTER
FLAG     DC    X'00'
*        EQU   X'80'              USE OFFSET
*        EQU   X'40'              FIND VARIABLE
*        EQU   X'20'              PUT DATE IN PARM
*
FMTFLAG  DC    X'00'
MM1ST    EQU   X'80'              MONTH IS 1ST
DD1ST    EQU   X'40'              DAY IS 1ST
YY1ST    EQU   X'20'              YEAR IS FIRST
YYYYFMT  EQU   X'10'              USE 4 DIGIT YEAR
ADDSEP   EQU   X'08'              PUT SEPARATOR BETWEEN FIELDS
MM2ND    EQU   X'04'              MM IS IN THE MIDDLE
CHARMTH  EQU   X'02'              MONTH IS CHARACTER
*        EQU   X'01'
*
*           THE TIME OF DAY IS RETURNED TO THE FIRST TWO WORDS OF
*           SAVETIME.  THE DATE IS RETURNED TO THE THIRD WORD IN
*           DECIMAL FORMAT (NOT PACKED DECIMAL)
*
SAVETIME DC    XL16'00'           TIME AND DATE
SAVEDATE DC    XL8'00'            DECIMAL DATE AS MMDDYYYY
         DC    XL1'00'            JUNK BYTE
*
MTHTAB   DS    0C
         DC    CL3'   '
         DC    CL3'JAN'
         DC    CL3'FEB'
         DC    CL3'MAR'
         DC    CL3'APR'
         DC    CL3'MAY'
         DC    CL3'JUN'
         DC    CL3'JUL'
         DC    CL3'AUG'
         DC    CL3'SEP'
         DC    CL3'OCT'
         DC    CL3'NOV'
         DC    CL3'DEC'
*
         SPACE 1
HDR1     DS    0CL121
         DC    C'0'
HDR180   DS    0CL80
         DC    CL(121-(*-HDR1))'  '
         SPACE 1
CONTROL  DC    CL80' '            DATE RECORD
*
         SPACE 1
PARMMSG  DC    C'0 INVALID PARM'
BADLOCM  DC    C'0 ERROR TRYING TO PUT DATE IN RECORD.'
BADLLTH  EQU   *-BADLOCM
*
NOSYSPM  DC    CL121'0 CANNOT OPEN DATEREC FOR OUTPUT'
BADSYSP  DC    C'0 DATEREC FILE OPEN FAILED.'
*
         LTORG
*
         SPACE 3
* ------ DCB'S                    ------------------------------------
         SPACE 3
REPORT   DCB   DSORG=PS,DDNAME=SYSPRINT,MACRF=(PM),LRECL=121,       XXXX
               EXLST=JFCBADD,RECFM=FBA,BLKSIZE=6292
         SPACE 1
DATEREC DCB    DSORG=PS,DDNAME=DATEREC,MACRF=(GM,PM),               XXXX
               EXLST=JFCBADD,EODAD=RETURN6
         SPACE 1
         SPACE 1
JFCBADD  DS    0F
         DC    X'87'              JFCB ADDRESS
         DC    AL3(JFCB)
         DS    0H                 PUT JFCB ON HALFWORD BOUNDARY
JFCB     DS    0CL176' '
         IEFJFCBN  LIST=NO
         SPACE 1
         LTORG
         SPACE 1
         PRINT NOGEN
         DCBD  DEVD=DA,DSORG=PS
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   SETDATE
//LKED.SYSLMOD DD DSN=HALL.LINKLIB,DISP=SHR
//*KED.SYSLMOD DD DSN=SYS9.IMSUTIL.LOAD,DISP=SHR
//LKED.SYSIN DD *
   ENTRY   SETDATE
   SETCODE AC(0)
   MODE    AMODE(24) RMODE(ANY)
   NAME    SETDATE(R)

/*
//
