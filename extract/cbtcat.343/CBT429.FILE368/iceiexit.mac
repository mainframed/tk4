ICEIEXIT CSECT
         ICEDIEX
***********************************************************************
*                                                                     *
*  ICEIEXIT - DFSORT INITIALIZATION ROUTINE TO REMOVE HIPERSPACES     *
*             DURING PEAKTIME AND ALLOW DURING NIGHTLY BATCH AND      *
*             DURING THE WEEKEND. GAINS CONTROL AT EACH SORT AREA     *
*             PROVIDED THAT ICEMAC HAS BEEN UPDATED WITH IEXIT=YES    *
*  OWNER      XXXXXXX XXXXXXXX XXXXXXX                                *
*  ORIGINAL   IBM                                                     *
*  CODER      JAMES  WILLIAMS   11-04-93                              *
*  MOD        JAMES  WILLIAMS   06-09-99  Y2K                         *
***********************************************************************
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
ICEIEXIT CSECT
         USING *,R12                   DECLARE BASE REGISTER
         STM   R14,R12,12(R13)         SAVE CALLERS REGS
         LR    R12,R15                 LOAD BASE REGISTER
         GETMAIN R,LV=DSECTLEN         GET MAIN TEMP AREA
         ST    R13,4(R1)               STORE BACKWARD CHAIN
         ST    R1,8(R13)               STORE FORWARD CHAIN
         L     R14,24(R13)             RESTORE PASSED PARM ADDRESS
         ST    R14,72(R1)              SAVE IN WORK AREA
         LR    R13,R1                  LOAD SAVE AREA ADDRESS
         USING SAVEAREA,R13            DECLARE SAVE AREA BASE
         L     R1,SAVEPARM             RESTORE PARM ADDRESS
         B     PROCESS                 BRANCH TO CODE
         DC    CL8'&SYSDATE'
         DC    CL8'&SYSTIME'
         DC    CL8'ICEIEXIT'
         DC    C' SORT INITIALIZATION EXIT'
         DC    C'TECH SUPPORT'
PROCESS  DS    0H
         USING ILMN,R1
         L     R2,ILMEXA
         USING ILEXL,R2
         L     R3,ILMINA
         USING ILINL,R3
         DROP  R1
NOMODULE DS    0H             DEFAULT MODULE NOT FOUND
         MVC   STORDAY(6),DEFAULTV    SO USE HARD CODED DEFAULTS
*===============================================================*
*==  DAYTEST   - UPGRADED THIS AGLORITHM TO SUPPORT           ==*
*==              Y2K PROCESSING                               ==*
*===============================================================*
DAYTEST  TIME  DEC,ZONE=LT            NOT DETERMINE DATE AND TIME
         ST    R0,HOUR                SAVE HOUR
         ST    R1,DATE                STORE 0CYYDDDF
         AP    DATE(4),=P'1900000'    GET YYYYDDDF
         LH    R5,DATE                GET YEAR
         SLL   R5,4                   SHIFT
         LA    R5,15(R5)              ADD SIGN BITS
         LH    R6,=P'19000'           EPOCH YEAR  1900
         SLL   R6,4                   SHIFT
         LA    R6,15(R6)              ADD SIGN BITS
         XC    WTOWORK,WTOWORK        CLEAR WORK AREA
         ST    R5,WTOWORK+4           SAVE PACKED DECIMAL CYEAR
         CVB   R5,WTOWORK             GET IN BINARY
         XC    WTOWORK,WTOWORK        CLEAR WORK AREA
         ST    R6,WTOWORK+4           SAVE PACKED DECIMAL 1900
         CVB   R6,WTOWORK             GET IN BINARY
         SR    R5,R6                  CURRENT YEAR - 1900
         ST    R5,SAVEREG             SAVE DIFFERENCE
         MH    R5,=H'365'             MULTIPLY YEARS SINCE 1900 BY 365
         ST    R5,SAVEREG+4           SAVE DAYS BEFORE LEAP YEAR ADDED
         L     R3,SAVEREG             PREPARE FOR LEAPCHK
         SR    R7,R7                  CLEAR FOR LEAPYEAR TOTAL
*===============================================================*
*==  LEAPCHK   - THIS SECTION OF CODE WILL DETERMINE          ==*
*==              ALL THE LEAPYEARS TO CURRENT                 ==*
*===============================================================*
LEAPCHK  DS    0H
         LR    R5,R6                  1900 ON FIRST RUN + 1 AFTER
* IF YYYY // 400 = 0 THEN LY = 1
         SR    R4,R4                  PREPARE REMAINDER AREA
         D     R4,=F'400'             DIVIDE BY FOUR
         C     R4,=F'0'               PASS LEAP YEAR TEST1
         BE    LEAPYR
* IF YYYY // 4 = 0 THEN LY = 1; ELSE LY = 0
CHECK1   SR    R4,R4                  PREPARE REMAINDER AREA
         LR    R5,R6                  1900 ON FIRST RUN + 1 AFTER
         D     R4,=F'4'             DIVIDE BY FOUR
         C     R4,=F'0'               PASS LEAP YEAR TEST1
         BNE   NLEAPYR
* IF YYYY // 100 = 0 THEN LY = 0
CHECK2   SR    R4,R4                  PREPARE REMAINDER AREA
         LR    R5,R6                  1900 ON FIRST RUN + 1 AFTER
         D     R4,=F'100'             DIVIDE BY FOUR
         C     R4,=F'0'               PASS LEAP YEAR TEST1
         BE    NLEAPYR
LEAPYR   DS    0H
         AH    R7,=H'1'               ADD 1 BECAUSE A LEAP
NLEAPYR  DS    0H
         AH    R6,=H'1'               ADD 1 TO YEAR FOR TEST
         BCTR  R3,0                   KEEP LOOPING UNTIL LEAPCHK DONE
         C     R3,=F'0'               CHECK FOR FINISH LOOP
         BE    LEAPDNE                YES, LEAP CHEAR DONE, TALLY
         B     LEAPCHK                NO,  CHECK YEAR FOR LEAP
LEAPDNE  DS    0H
         L     R5,SAVEREG+4           RELOAD DAYS BEFORE LEAP YEARS
         AR    R5,R7                  ADD LEAP YEARS TO YEARS*365
         LH    R4,DATE+2              CURRENT JULIAN
         XC    WTOWORK,WTOWORK        CLEAR WORK AREA
         ST    R4,WTOWORK+4           SAVE PACKED DECIMAL
         CVB   R4,WTOWORK             GET IN BINARY
         AR    R5,R4                  ADD CURRENT YEAR TO TOTAL
         XR    R4,R4                  CLEAR FOR WORK
         D     R4,=F'7'               DAYS IN A WEEK
         CL    R4,=F'6'               SATURDAY ?
         BE    OFFDAY                 YES - USE WEEK-END VALUES
         CL    R4,=F'0'               SUNDAY ?
         BE    OFFDAY                 YES - USE WEEK-END VALUES
         CLI   HOUR,X'08'             BEFORE 8AM
         BL    OFFSHIFT               YES - USE OFFSHIFT VALUES
         CLI   HOUR,X'17'             AFTER 5PM
         BNL   OFFSHIFT               YES - USE OFFSHIFT VALUES
         B     DAYSHIFT               OTHERWISE - USE DAYTIME VALUES
DAYSHIFT DS    0H                     SET DAY-TIME VALUES
         MVC   REASON,DAYTIME
         LH    R1,STORDAY
         B     HIPRMAX
OFFDAY   DS    0H                     SET WEEK-END VALUES
         MVC   REASON,WEEKEND
         LH    R1,STORWKND
         B     HIPRMAX
OFFSHIFT DS    0H                     SET NIGHT-TIME VALUES
         MVC   REASON,NITETIME
         LH    R1,STORNITE
         B     HIPRMAX
HIPRMAX  DS    0H                     TEST AGAINST INSTALLATION VALUES
         CH    R1,ILEXHIPR            COMPARE TO DEFAULTS
         BH    DSPSIZE                BEYOND DEFAULTS
         STH   R1,ILEXHIPR            ELSE SET NEW LIMIT
DSPSIZE  DS    0H                     TEST AGAINST INSTALLATION VALUES
         CH    R1,ILEXDSPZ            COMPARE TO DEFAULTS
         BH    DEFAULTS               BEYOND DEFAULTS
         STH   R1,ILEXDSPZ            ELSE SET NEW LIMIT
         B     RETURN                 RETURN IF DEFAULT IS LOWER
DEFAULTS DS    0H
         MVC   REASON,DEFAULT
         B     RETURN                 RETURN IF DEFAULT IS LOWER
RETURN   DS    0H
HSPWTO   MVC   STORMSG(WTOSKELL),WTOSKEL  MOVE TO MESSAGE AREA
         MVC   STORTYPE,HPRMESS       HIPERSPACE
         MVC   STORRESN,REASON        MOVE IN REASON
         LH    R1,ILEXHIPR            GET CURRENT LIMIT
         CVD   R1,WTOWORK             CONVERT TO DECIMAL
         MVC   STORMAX,WTOMASK        GET EDIT MASK FOR HIPRMAX
         ED    STORMAX,WTOWORK+4      FORMAT LIMIT
         WTO   MF=(E,STORMSG)         WRITE TO PROGRAMMER
DSPWTO   MVC   STORMSG(WTOSKELL),WTOSKEL  MOVE TO MESSAGE AREA
         MVC   STORTYPE,DSPMESS       DATASPACE
         MVC   STORRESN,REASON        MOVE IN REASON
         LH    R1,ILEXDSPZ            GET CURRENT LIMIT
         CVD   R1,WTOWORK             CONVERT TO DECIMAL
         MVC   STORMAX,WTOMASK        GET EDIT MASK FOR DATASPACE
         ED    STORMAX,WTOWORK+4      FORMAT LIMIT
         WTO   MF=(E,STORMSG)         WRITE TO PROGRAMMER
         LR    R1,R13                 ADDRESS WORK AREA
         L     R13,4(R13)             GET CALLERS SAVE AREA
         FREEMAIN R,LV=DSECTLEN,A=(1) FREE THE AREA
         RETURN (14,12),RC=0       EXIT
         EJECT
DEFAULTV DC    H'00'                  HIPRMAX=0 AND DSPSIZE=0
         DC    H'1000'                HIPERMAX=OPTIMAL AND DSPSIZE=MAX
         DC    H'1000'                HIPERMAX=OPTIMAL AND DSPSIZE=MAX
DAYTIME  DC    CL10'DAY TIME'
NITETIME DC    CL10'NON PEAK  '
WEEKEND  DC    CL10'WEEK-END  '
DEFAULT  DC    CL10'DEFAULT   '
HPRMESS  DC    CL7'HIPRMAX'
DSPMESS  DC    CL7'DSPSIZE'
WTOMASK  DC    X'4020202020202120'
WTOSKEL  WTO   'XXXXXXX SET TO ???????? MEGABYTES - REASON =           *
               ',ROUTCDE=11,MF=L
WTOSKELE EQU   *
WTOSKELL EQU   WTOSKELE-WTOSKEL
         LTORG
SAVEAREA DSECT
SAVE     DS    18F
SAVEPARM DS    F
VALUADDR DS    F
HOUR     DS    F
DATE     DS    D
DAYS     DS    F
SAVEREG  DS    4F
STORDAY  DS    H
STORNITE DS    H
STORWKND DS    H
WTOWORK  DS    D
REASON   DS    CL10
TYPE     DS    CL7
STORMSG  DS    0C
         ORG   STORMSG+4
STORTYPE DS    CL7
         ORG   STORMSG+19
STORMAX  DS    CL8
         ORG   STORMSG+49
STORRESN DS    CL8
         ORG   STORMSG+WTOSKELL
         DS    0D
DSECTLEN EQU   *-SAVE
         END   ICEIEXIT
