/*REXX*****************************************************************/
/*                                                                    */
/*    Name     - smf128ii                                             */
/*    Author   - James A. Williams                                    */
/*    Date     - 03/22/1995                                           */
/*    Purpose  - read user smf128typ to see who has bad jobcard       */
/*               as a part of phase ii                                */
/*    Invoke   - batch or foreground                                  */
/*                                                                    */
/**********************************************************************/
Arg infile

CHK_IN_DATASET:
X = outtrap('var.')
Infile = "'"××infile××"'"
Dummy  = listdsi(infile)
If dummy \= 0 then
  Do
    Say 'Dataset has problem or does not exits make sure it    '
    Say 'was created with the ifasmfdp utility parsing smf128ty'
    Exit 4
  End

READ_SMF_IN_ARRAY:
Status=msg('off')
"Alloc fi(smfin) dsname("infile") shr reuse"
"Execio * diskr smfin (stem smfrec. finis"
"Free fi(smfin)"
"Alloc fi(acffile) dsname('acf10.pn1000.acflids') shr reuse"
"Execio * diskr acffile (stem acfrec. finis"
"Free fi(acffile)"
Status=msg('on')
Allocrc = rc

SMF_DECLARES:
SM128PTR = 0                   /*  record pointer    */
SM128RTY = 0                   /*  record type       */
SM128TME = 0                   /*  time in binary    */
SM128DTE = 0                   /*  date in pack      */
SM128SID = ""                  /*  smfid             */
SM128UID = ""                  /*  LID of submitter  */
SM128JBN = ""                  /*  jobname           */
SM128CLS = ""                  /*  class submitted in*/
SM128JAC = ""                  /*  acct on jobcard   */
SM128AAC = ""                  /*  acct in acf2      */
SM128STA = ""                  /*  y or n for start  */

VAR_DECLARES:
SMF_CTR1 = 0
SMF_CTR2 = 0
SMF_CTR3 = 0
O        = 0
RPTID    = TECX0002
TOP      = '1'                                /*  Top of form    */
SUP      = '+'                                /*  suppress formf */
SK2      = '0'                                /*  skip 2 lines   */
SK3      = '-'                                /*  skip 3 lines   */
Pagenum  = 0
Linenum  = 0
Firstpass= YES
TSOfast  = G
TSOslow  = C
STCclass = F
CICclass = Q
CICclasp = 5
CICclast = 1
STCacct  = 7777
TSOacct  = 8888
CICacct  = 9999

CALL RPT_HEADING

SMF_PROCESS:
Do I = 1 to smfrec.0
  SM128RTY = substr(smfrec.i,sm128ptr+2,1)
  If SM128RTY \= '80'X
      Then
        Iterate
  SM128TME = substr(smfrec.i,sm128ptr+3,4)
  SM128DTE = substr(smfrec.i,sm128ptr+7,4)
  SM128SID = substr(smfrec.i,sm128ptr+11,4)
  SM128UID = substr(smfrec.i,sm128ptr+31,8)
  SM128JBN = substr(smfrec.i,sm128ptr+44,8)
  SM128CLS = substr(smfrec.i,sm128ptr+52,1)
  SM128JAC = substr(smfrec.i,sm128ptr+53,7)
  SM128AAC = substr(smfrec.i,sm128ptr+60,7)
  SM128STA = substr(smfrec.i,sm128ptr+100,1)
  SM128SUB = substr(smfrec.i,sm128ptr+101,4)
  If SM128AAC = 5555OPR
       Then
         Iterate
  If SM128UID = SM128JBN
       Then
         Iterate
  Select
   When STCACCT = SUBSTR(SM128AAC,1,4) then
    Do

     If SM128CLS = STCCLASS  & SM128JAC = SM128AAC
         Then
          Iterate
    End
   When TSOACCT = SUBSTR(SM128AAC,1,4) then
    Do
     Tmp = strip(SM128UID)
     L  = LENGTH(tmp)
     If tmp =  SUBSTR(SM128JBN,1,L)
         Then
          Gjob = YES
         Else
          Gjob = NO
     If SM128CLS = TSOFAST  & SM128JAC = SM128AAC
         Then
          Do
           If gjob = YES
            Then
             Iterate
          End
     If SM128CLS = TSOSLOW  & SM128JAC = SM128AAC
         Then
          Do
           If gjob = YES
            Then
             Iterate
          End
    End
   When CICACCT = SUBSTR(SM128AAC,1,4) then
    Do
     If SM128CLS = CICCLASS  & SM128JAC = SM128AAC
         Then
          Iterate
     If SM128CLS = CICCLASP  & SM128JAC = SM128AAC
         Then
          Iterate
     If SM128CLS = CICCLAST  & SM128JAC = SM128AAC
         Then
          Iterate
    End
   When SM128AAC = 1550SYS
     Then
      Nop
   Otherwise
    Iterate
  End
PROCESS:
  Parse var sm128tme temp
  TEMP = C2D(temp)
  HH = TEMP%360000
  L  = LENGTH(HH)
  MM = TEMP%6000-60*HH
  SS = TEMP%100-3600*HH-60*MM
  JOBTIM = HH*10000+MM*100+SS
  IF L = 1
    THEN
      SM128TME = 0××JOBTIM
  ELSE
      SM128TME = JOBTIM
  SM128TME = SUBSTR(SM128TME,1,2)××'.'××SUBSTR(SM128TME,3,2)
  Parse var sm128dte temp
  TEMP = c2X(temp)
  TEMP = SUBSTR(TEMP,3,5)
  TEMP = RDATE(TEMP GRE)
  X    = '/'
  TEMP = SUBSTR(TEMP,1,2)××X××SUBSTR(TEMP,3,2)××X××SUBSTR(TEMP,5,2)
  SM128DTE = TEMP
 CALL ACF_NAMES
 CALL BLD_OUTREC
 SMF_CTR1 = SMF_CTR1 + 1
 Linenum = Linenum + 1
 If linenum > 51 then
     Do
       LINENUM = 0
       CALL RPT_HEADING
     End
End

Call Tally_DATA
Call WRT_OUTREC
Exit 0

ACF_NAMES:
Do J = 1 TO ACFREC.0             /* CHECK ACF2 ARRAY FOR MATCH  */
Acfid = substr(acfrec.j,3,7)
IF SM128UID = ACFID THEN         /* IF NOT IN DBASE MOVE ON     */
    Do
      Username = substr(acfrec.j,45,20)
      Leave J
    End
End
Return

RPT_HEADING:
/*executil ts */
Pagenum = Pagenum + 1
O = O + 1
Heading1 = TOP××LEFT("REPORT ID:",12)××RPTID××,
       CENTER(XXXXXXX XXX XXXXX XXXXXXX,92,' ')××,
       LEFT("PAGE    : ",11)××PAGENUM
OUTREC.O = heading1
O = O + 1
Heading2 = SK2××CENTER(JOBCARD VIOLATION REPORT,132)
OUTREC.O = heading2
O = O + 1
OUTREC.O = SK3
O = O + 1
OUTREC.O = "     USER'S_____NAME",
           "     USERID       JOBNAME  JOBCLASS   JOBACCNT ACFACCNT ",
           "DATE       TIME   SUBSYS"
OUTREC.O = CENTER(OUTREC.O,132)
O = O + 1
OUTREC.O = "     ---------------",
           "     -------      -------- --------   -------  -------  ",
           "--------   -----  ------"
OUTREC.O = CENTER(OUTREC.O,132)
Return

BLD_OUTREC:
O = O + 1
OUTREC.O = "    "USERNAME"",
           ""SM128UID"     "SM128JBN"      "SM128CLS"     "SM128JAC"",
             " "SM128AAC"   "SM128DTE"   "SM128TME"  "SM128SUB""
OUTREC.O = center(OUTREC.O,132)
Return

WRT_OUTREC:
/* "Alloc fi(smfout) dsname('oprjaw0.smfout') shr reuse"   */
"Execio "o" diskw smfout (stem outrec. finis"
/* "Free fi(smfout)"   */
Return

TALLY_DATA:
O = O + 1
OUTREC.O = SK3
O = O + 1
OUTREC.O = TOP××center("-",132,"-")
O = O + 1
OUTREC.O = " TOTAL RECORDS READ:               "SMFREC.0""
O = O + 1
OUTREC.O = " TOTAL JOBS WITH INVALID JOBCARDS: "SMF_CTR1""
Return
