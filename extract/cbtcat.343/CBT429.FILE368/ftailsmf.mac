         TITLE 'FTAILSMF - FILE TAILORING FOF ISPF'
********************************************************
* NAME: FTAILSMF                                       *
*                                                      *
* PURPOSE:  THIS PROGRAM WILL TAKE INPUT FROM A PANEL  *
*           AND USE THAT TO TAILOR SMF SUBMIT JCL.     *
*           OF COURSE, THIS PROGRAM IS EASILY DONE     *
*           FROM REXX WHICH IS INCLUDED TO SHOW        *
*           THE CONTRAST. I WILL SOON BE ADDING MORE   *
*           FUNCTION TO IT.                            *
*                                                      *
* AUTHOR:   JAMES A. WILLIAMS                          *
*           TECH SUPPORT                               *
*                                                      *
* MACLIBS:  SYS1.AMODGEN AND SYS1.MACLIB               *
*                                                      *
* DIRECTIONS: ASSEMBLE PROGRAM AND LINK. COPY THE BELOW*
* PANEL TO AN ISPPLIB AND THE SKELTON TO AN ISPSLIB    *
********************************************************
         AMODE 31
         RMODE ANY
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
********************************************************
* STANDARD LINKAGE                                     *
********************************************************
FTAILSMF CSECT
         SAVE (14,12)
         LR    R12,R15
         USING FTAILSMF,R12
         ST    R13,SAVEAREA+4
         LA    R15,SAVEAREA
         ST    R15,8(,R13)
         LR    R13,R15
********************************************************
* TEST FOR A VALID ISPF ENVIRONMENT                    *
********************************************************
TESTISPF DS    0H
         CALL  ISPQRY
         LTR   R15,R15
         BZ    VDEFINEV
         TPUT  ERRMSG1,L'ERRMSG1
         TPUT  ERRMSG2,L'ERRMSG2
         B     EXIT
********************************************************
* DEFINE ALL THE ISPF VARIABLES WHICH WILL BE USED.    *
********************************************************
VDEFINEV DS    0H
         CALL  ISPLINK,(CONTROL,ERRORS,RETURN),VL
         CALL  ISPLINK,(VDEFINE,XDSNAME1,DSNAME1,CHAR,L44),VL
         CALL  ISPLINK,(VDEFINE,XDSNAME2,DSNAME2,CHAR,L44),VL
         CALL  ISPLINK,(VDEFINE,TEMPDSN,ZTEMPF,CHAR,L44),VL
         CALL  ISPLINK,(VDEFINE,XSMFTY1,SMFTY1,CHAR,L2),VL
         CALL  ISPLINK,(VDEFINE,XSMFTY2,SMFTY2,CHAR,L2),VL
         CALL  ISPLINK,(VDEFINE,DATAID,DATA,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,TEMPDDN,ZTEMPN,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,ZUSERX,ZUSER,CHAR,L7),VL
         CALL  ISPLINK,(VDEFINE,ZACCTNUX,ZACCTNUM,CHAR,L7),VL
         MVC   MSG,MSG1
********************************************************
* DISPLAY PANEL TO OBTAIN INPUT FROM THE USER.         *
********************************************************
DISPLAYP DS    0H
         CALL  ISPLINK,(DISPLAY,SMFPANEL,MSG),VL
         LTR   R15,R15
         BZ    FTAILOR
         C     R15,=F'8'
         BE    VDELETEV
********************************************************
* PERFORM FILE TAILORING IF  PROCESSES                 *
********************************************************
FTAILOR  DS    0H
*
         CALL  ISPLINK,(VGET,ZUSERX,SHARED),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(VGET,ZACCTNUX,SHARED),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(VGET,ZSTDYEAX,SHARED),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(VGET,ZSYSIDX,SHARED),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(FTOPEN,TEMP),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(FTINCL,SKELETON),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(FTCLOSE),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(VGET,TEMPDDN,SHARED),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(VCOPY,XDSNAME1,L44,TESTX,MOVE),VL
*
********************************************************
* USER LMF SEVICES TO EDIT THE DATASET                 *
********************************************************
*
         CALL  ISPLINK,(LMINIT,DATAID,B,B,B,B,B,B,B,ZTEMPN),VL
         LTR   R15,R15
         BNZ   EXIT
*
         CALL  ISPLINK,(EDIT,B,B,B,B,B,B,DATA),VL
         LTR   R15,R15
         C     R15,=F'4'
         BH    EXIT
*
         CALL  ISPLINK,(LMFREE,DATA),VL
         LTR   R15,R15
         BNZ   EXIT
********************************************************
* RETURN TO PANEL DISPLAY TO REPEAT PROCESS IF NEEDED  *
********************************************************
RDISPLAY DS    0H
         MVC   MSG,MSG2
         B     DISPLAYP
********************************************************
* CLEANUP TO PREPARE FOR EXIT                          *
********************************************************
VDELETEV DS    0H
         CALL  ISPLINK,(VDELETE,CLEANUP),VL
         CALL  ISPLINK,(SETMSG,MSGX),VL
********************************************************
* CODE TO EXIT FROM FTAILSMF                           *
********************************************************
EXIT     DS    0H
         SR    R15,R15
         L     R13,4(,R13)             RELOAD --> TO OLD SAVE
         RETURN (14,12),RC=(15)
********************************************************
* DEFINE CONSTANTS, DSECT AND ISPF VARIABLES           *
********************************************************
SAVEAREA DS    18F
ZUSER    DS    CL7
ZTEMPF   DS    CL44
ZTEMPN   DS    CL8
ZACCTNUM DS    CL8
DATA     DS    CL8
         LTORG
DISPLAY  DC    CL8'DISPLAY '
VDEFINE  DC    CL8'VDEFINE '
VDELETE  DC    CL8'VDELETE '
VGET     DC    CL8'VGET    '
VCOPY    DC    CL8'VCOPY   '
FTOPEN   DC    CL8'FTOPEN  '
FTINCL   DC    CL8'FTINCL  '
FTCLOSE  DC    CL8'FTCLOSE '
LMINIT   DC    CL8'LMINIT  '
EDIT     DC    CL8'EDIT    '
LMFREE   DC    CL8'LMFREE  '
SETMSG   DC    CL8'SETMSG  '
SHARED   DC    CL8'SHARED  '
CONTROL  DC    CL8'CONTROL '
ERRORS   DC    CL8'ERRORS  '
RETURN   DC    CL8'RETURN  '
MOVE     DC    CL8'        '
LOCATE   DC    CL8'        '
CHAR     DC    C'CHAR'
TEMP     DC    C'TEMP      '
MSG      DC    CL8' '
L2       DC    F'2'
L7       DC    F'7'
L8       DC    F'8'
L44      DC    F'44'
         LTORG
XSMFTY1  DC    C'(SMFTY1)'
XDSNAME1 DC    C'(DSNAME1)'
XSMFTY2  DC    C'(SMFTY2)'
XDSNAME2 DC    C'(DSNAME2)'
SMFTY1   DC    CL2' '
DSNAME1  DC    CL44' '
SMFTY2   DC    CL2' '
DSNAME2  DC    CL44' '
SMFPANEL DC    CL8'FTAILSMF'
SKELETON DC    CL8'FTAILSMF'
MSG1     DC    CL8'FTA001A '
MSG2     DC    CL8'FTA002A '
MSGX     DC    CL8'FTA003A '
B        DC    CL1' '
DATAID   DC    C'DATA    '
TESTX    DC    CL44' '
TEMPDDN  DC    C'(ZTEMPN)'
TEMPDSN  DC    C'(ZTEMPF)'
ZUSERX   DC    C'(ZUSER)'
ZACCTNUX DC    C'(ZACCTNUM)'
ZSTDYEAX DC    C'(ZSTDYEAR)'
ZSYSIDX  DC    C'(ZSYSID)'
CLEANUP  DC    C'(*)'
ERRMSG1  DC    C'ISPF IS NOT ACTIVE KNUCKLEHEAD'
ERRMSG2  DC    C'PLEASE INVOKE THIS PROGRAM FROM ISPF OPTION 6.'
*        CVT PREFIX=YES
         END FTAILSMF
*
*
*   PUT PANEL IN ISPPLIB AS FTAILSMF
*
)ATTR
  ~ TYPE(TEXT) INTENS(HIGH) COLOR(TURQ) HILITE(REVERSE)
  @ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
  % TYPE(TEXT) INTENS(HIGH) COLOR(BLUE)
  + TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
)BODY
+------------------------  SMF JCL Generator   -------------------------
+OPTION  ===>_ZCMD
%
+                                                       ~USERID - &ZUSER
~
+ ~SMF input  +%===>+ _dsname1                             +
+ ~SMF output +%===>+ _dsname2                             +
+ ~SMFTYPE    +%===>+ _smfty1+   (14,15,30,etc,)
~
+
%
+-----------------------------------------------------------------------
%
%  Enter+END%command to terminate from option line
)INIT
  .HELP = ISR00003
  .CURSOR = DSNAME1
  &DSNAME1 = ''
  &DSNAME2 = ''
  &SMFTY1  = ''
  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */
  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */
  &ZSCLMPRJ = &Z      /* TUTORIAL INDEX - 1ST PAGE     @L1A*/
  VPUT (ZHTOP,ZHINDEX,ZSCLMPRJ) PROFILE /*             @L1C*/

)PROC
  VER(&DSNAME1,LEN,NG,44)
  VER(&DSNAME1,NB,DSNAME)
  VER(&DSNAME2,LEN,NG,44)
  VER(&DSNAME2,NB,DSNAME)
  VER(&SMFTY1,NB,RANGE,1,255)
)END
*
*
*   PUT SKELETON IN ISPSLIB AS FTAILSMF
*
//&ZUSER.A JOB (&ZACCTNUM),'&ZUSER-SMFSTRIP',CLASS=Z,MSGCLASS=R,
//   NOTIFY=&ZUSER         ALL JOBS NEED ONE
//SMFSTRIP PROC
//SMFSTRIP EXEC PGM=IFASMFDP,REGION=32M
//DUMPIN   DD DSN=&DSNAME1,DISP=SHR,DCB=BUFNO=15
//DUMPOUT  DD DSN=&DSNAME2,DISP=SHR,DCB=BUFNO=15
//SYSPRINT DD SYSOUT=*
// PEND
//SMFRUN EXEC SMFSTRIP
//SYSIN  DD *
 INDD(DUMPIN,OPTIONS(DUMP))
 OUTDD(DUMPOUT,TYPE(&SMFTY1))
 DATE(&ZSTDYEAR.001,&ZSTDYEAR.366)
 SID(&ZSYSID)
*
*
*   REXX VERSION OF FTAILSMF
*
/*REXX*****************************************************************/
/*                                                                    */
/*    NAME     - FTAILSMF                                             */
/*    Author   - James A. Williams                                    */
/*    Date     - 09/15/1999                                           */
/*    Purpose  - PROTOTYPE FOR FTAILSMF                               */
/*    INVOKE   - TSO %FTAILSMF                                        */
/*                                                                    */
/**********************************************************************/
Executil TS
Address ISPEXEC
"Control errors return"
"Display panel(ftailsmf) msg(fta001a)"
If RC > 0 Then Exit 8
 "Ftopen temp"
 "Ftincl FTAILSMF"
 "Ftclose"
 "Vget ("ztempf")"
Say ""ztempf""
 "Vget ("ztempn")"
Say ""ztempn""
 "Lminit dataid(idvar) ddname("ZTEMPN")"
 "Edit dataid("idvar")"
 "Lmfree dataid("idvar")"
Exit


