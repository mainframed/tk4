GENERIC  TITLE 'MAKE DEVMASKT ENTRIES EQUIVALENT TO EDT'
***********************************************************************
*                                                                     *
*   MODIFY ENTRIES IN DEVMASKT TO BE EQUIVALENT TO THE SAME           *
*   ENTRIES IN THE ELIGIBLE DEVICE TABLE                              *
*                                                                     *
*   INVOKED AS A SUBPROGRAM FROM AN AUTHORIZED PROGRAM                *
*   PARM 1 - THE ELIGIBLE DEVICE TABLE                                *
*                                                                     *
*   DEVMASKT MUST BE IN THE PAGEABLE LINKPACK AREA (PLPA),            *
*      THE FIXED LINKPACK AREA (FLPA) OR THE MODIFIED                 *
*      LINKPACK AREA (MLPA). IF DEVMASKT IS IN PLPA,                  *
*      THE ALTERED AREAS WILL BE PAGE-FIXED.                          *
*                                                                     *
*   WRITTEN BY DOUGLAS MERCER, JULY 1980,                             *
*      FOR THE LOCKHEED-CALIFORNIA COMPANY                            *
*                                                                     *
*   MODIFIED BY DOUGLAS MERCER, MARCH 1982,                           *
*      FOR THE PLPA PROTECT FEATURE OF MVS                            *
*      (CORRECTED APRIL 1982)                                         *
*      (CORRECTED OCTOBER 1982)                                       *
*      (CORRECTED NOVEMBER 1982)                                      *
*                                                                     *
*        ATTRIBUTES - REENTRANT                                       *
*        TAB SETTINGS - 10 16 35 40 72                                *
*                                                                     *
***********************************************************************
         SPACE 3
GENERIC  START ,
         SAVE  (14,12),,GENERIC_&SYSDATE
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                  REMAINING DEVMASKT ENTRY COUNT
R10      EQU   10                 CURRENT DEVMASKT ENTRY
R11      EQU   11                 EDT POINTER
R12      EQU   12                 BASE REGISTER
R13      EQU   13                 WORK AREA POINTER
R14      EQU   14
R15      EQU   15
TCBJSTCB EQU   124,4,C'A'     POINTER TO JOB STEP TCB (TO CURRENT      *
                                   IF HIGHER THAN JOB STEP)
TCBJPQ   EQU   44,4,C'A'      ADDRESS OF LAST CDE IN JOB PACK
CDCHAIN  EQU   0,4,C'A'       ADDRESS OF NEXT CDE OR 0
CDNAME   EQU   8,8,C'C'       MODULE OR ALIAS NAME
CDATTR   EQU   28,1,C'X'      ATTRIBUTES
CDNIP    EQU   128            MODULE IS IN LINK PACK AREA
ASCBRSM  EQU   52,4,C'A'      REAL STORAGE MGR HDR             DM MAR82
RSMVSTO  EQU   0,4,C'A'       VIRTUAL ADDRESS OF SEGTAB        DM MAR82
         SPACE 3
         LR    R12,R15
         USING GENERIC,R12
         L     R11,0(,R1)         EDT
         SPACE ,
         L     R1,FLCCVT-PSA
         L     R1,CVTILK2-CVT(,R1)     UCB POINTERS
         SR    R2,R2
         SPACE
* COUNT THE NUMBER OF UCB POINTERS (INCLUDING ZEROS)
LOOP1    CLC   =H'-1',0(R1)
         BE    END1               DONE
         LA    R2,1(,R2)          COUNT THE POINTER
         LA    R1,2(,R1)
         B     LOOP1
         SPACE
END1     LA    R2,MASKRND(,R2)    COUNT HEADER AND SLACK BYTES
         SRA   R2,3               / 8 TO CONVERT BITS TO BYTES
         N     R2,=F'-4'          TRUNCATE TO FULLWORD
         LA    R0,WRKLNG1(,R2)    TOTAL LENGTH
         GETMAIN R,LV=(0)
         ST    R1,8(,R13)         LOWER SAVE AREA POINTER
         L     R14,=A(SAVEAREA)   INITIALIZE
         LA    R15,WRKLNG1             THE WORK
         LR    R4,R1                        AREA
         LR    R5,R0
         MVCL  R4,R14
         ST    R13,4(,R1)         HIGHER SAVE AREA POINTER
         LR    R13,R1
         USING SAVEAREA,R13
         ST    R0,GMLNG           SAVE THE LENGTH
         ST    R2,MASKLNG         MASK ENTRY LENGTH
         MODESET MODE=SUP         GET TO SUPERVISOR STATE      DM MAR82
         STCTL 0,0,CTLREG0        TO FIND SEGMENT SIZE         DM MAR82
         MODESET MODE=PROB        GET BACK TO PROB STATE       DM MAR82
         L     R0,=F'1048576'     1M SEGEMENT SIZE             DM MAR82
         TM    CTLREG0+1,CRSEG1M                               DM MAR82
         BO    *+8                                             DM MAR82
         L     R0,=F'65536'       64K SEGEMENTS                DM MAR82
         ST    R0,SEGSIZE                                      DM MAR82
         BCTR  R0,0               REDUCE BY 1                  DM MAR82
         ST    R0,SEGROUND                                     DM MAR82
         LNR   R0,R0              DEVELOP                      DM MAR82
         BCTR  R0,0                    TRUNCATION MASK         DM MAR82
         ST    R0,SEGTRUNC                                     DM MAR82
         LH    R0,=H'4096'        4K PAGE SIZE                 DM MAR82
         TM    CTLREG0+1,CRPAG4K                               DM MAR82
         BO    *+8                                             DM MAR82
         LH    R0,=H'2048'        2K PAGES                     DM MAR82
         ST    R0,PGSIZE                                       DM MAR82
         BCTR  R0,0               REDUCE BY 1                  DM MAR82
         ST    R0,PGROUND                                      DM MAR82
         LNR   R0,R0              DEVELOP                      DM MAR82
         BCTR  R0,0                    TRUNCATION MASK         DM MAR82
         ST    R0,PGTRUNC                                      DM MAR82
         SPACE ,
         MODESET KEY=ZERO
         L     R15,0(,R11)        GET ENTRY LENGTH FOR EACH EDT SECTION
         L     R0,4(,R15)
         STH   R0,EDTLKUPL        LOOK-UP SECTION LENGTH
         L     R15,4(,R11)
         L     R0,4(,R15)
         STH   R0,EDTGENRL        GENERIC SECTION LENGTH
         L     R15,20(,R11)
         L     R0,4(,R15)
         STH   R0,EDTGRPTL        GROUP POINTER SECTION LENGTH
         L     R15,8(,R11)
         L     R0,4(,R15)
         STH   R0,EDTGRPL         GROUP SECTION LENGTH
         L     R15,12(,R11)
         L     R0,4(,R15)
         STH   R0,EDTUCBPL        UCB POINTER SECTION LENGTH
         LOAD  EPLOC=DEVNAMET
         ST    R0,ADRNAMET
         LOAD  EPLOC=DEVMASKT
         ST    R0,ADRMASKT
         SPACE ,
* MAKE SURE THE MODULE IS IN LINK-PACK (OR MLPA)
         L     R1,PSATOLD-FLC     CURRENT TCB
         L     R1,TCBJSTCB(,R1)   JOB STEP TCB
         L     R1,TCBJPQ(,R1)     JOB PACK QUEUE (CDE'S)
         SPACE ,
CDELOOP  LTR   R1,R1              SEE IF END
         BZ    CDELAST            NOT IN JPA - OK
         CLC   CDNAME(,R1),DEVMASKT
         BE    CDEFOUND           THIS IS OUR MODULE
         L     R1,CDCHAIN(,R1)    NEXT CDE
         B     CDELOOP
         SPACE ,
CDEFOUND TM    CDATTR(R1),CDNIP
         BO    CDELAST            IN LPA/MLPA - OK
         WTO   'GENERIC - DEVMASKT NOT IN LPA/MLPA',ROUTCDE=1,DESC=2
         B     TERM           DON'T PROCESS
         SPACE ,
CDELAST  EQU   *
         SPACE 3
         L     R10,ADRMASKT       PROCESS THE DEVMASKT
         LH    R9,0(,R10)         ENTRY COUNT
         LA    R10,4(,R10)        FIRST ENTRY
         SPACE 2
LOOP2    SR    R0,R0
         SR    R1,R1
         LA    R14,MASKWRK        ZERO
         L     R15,MASKLNG             THE NEW
         MVCL  R14,R0                       ENTRY AREA
         MVC   MASKDEVT,4(R10)    DEVICE TYPE OR IDENTIFIER
         L     R14,ADRNAMET       FIND THE UNIT NAME
         L     R0,0(,R14)              BASED ON THE DEVICE
         LA    R14,4(,R14)                  TYPE OR IDENTIFIER
         SPACE ,
LOOP3    CLC   MASKDEVT,8(R14)
         BE    END3               FOUND
         LA    R14,12(,R14)       NEXT
         BCT   R0,LOOP3
         B     NOCHNG             NOT FOUND (SHOULD NEVER HAPPEN)
         SPACE ,
END3     L     R1,0(,R11)         FIND THE EDT LOOKUP ENTRY
         L     R0,0(,R1)               BASED ON THE DEVICE
         LA    R1,8(,R1)                    NAME
         SPACE ,
LOOP4    CLC   0(8,R1),0(R14)
         BE    END4               FOUND
         AH    R1,EDTLKUPL        NEXT
         BCT   R0,LOOP4
         B     NOCHNG             NOT FOUND (SHOULD BE RARE)
         SPACE ,
END4     BAL   R14,CHNGMASK       BUILD A NEW ENTRY (IN WORK AREA)
         LR    R0,R10             CURRENT ENTRY
         LA    R14,MASKWRK        NEW ENTRY
         L     R1,MASKLNG         SEE IF THE
         LR    R15,R1                  NEW ENTRY
         CLCL  R0,R14                       IS DIFFERENT
         BE    NOCHNG             NO - LEAVE AS IS
         LR    R2,R10             PAGE FIX
         BAL   R14,PAGEFIX             THE ENTRY (IF IN PLPA)
         BAL   R14,CHNGDEVT       CHANGE THE DEVMASKT ENTRY    DM MAR82
         SPACE ,
NOCHNG   A     R10,MASKLNG        NEXT DEVMASKT ENTRY
         BCT   R9,LOOP2
         SPACE 3
TERM     MODESET KEY=NZERO
         DELETE EPLOC=DEVMASKT
         DELETE EPLOC=DEVNAMET
         L     R0,GMLNG           FREE THE
         LR    R1,R13                  WORK AREA
         L     R13,4(,R13)        HIGHER SAVE AREA
         FREEMAIN R,LV=(0),A=(1)
         RETURN (14,12),RC=0
         EJECT ,
* MODIFY MASKBITS BASED ON THE EDT
* R1 POINTS TO THE EDT LOOKUP ENTRY, R14 IS RETURN
CHNGMASK STM   R14,R12,12(R13)
         LM    R3,R4,16(R1)       GENERIC COUNT & POINTER
         SPACE
CHNGMSK1 LM    R5,R6,4(R4)        GROUP POINTER COUNT & POINTER
         SPACE
CHNGMSK2 L     R7,0(,R6)          GROUP
         LM    R8,R9,4(R7)        UCB POINTER COUNT & POINTER
         SPACE
CHNGMSK3 LH    R14,0(,R9)         RELATIVE UCB LOOKUP
         LA    R1,X'80'
         SRDL  R14,3              SEPARATE
         SRL   R15,29                  BYTE/BIT
         LA    R14,MASKBITS(R14)  ADDRESS BYTE TO BE SET
         SRL   R1,0(R15)          SET BIT MASK
         EX    R1,SETMASK
         LA    R0,1               INCREMENT THE DEVICE COUNT
         A     R0,MASKCNT
         ST    R0,MASKCNT
         SPACE
         AH    R9,EDTUCBPL        NEXT UCB POINTER
         BCT   R8,CHNGMSK3
         SPACE
         AH    R6,EDTGRPTL        NEXT GROUP POINTER
         BCT   R5,CHNGMSK2
         SPACE
         AH    R4,EDTGENRL        NEXT GENERIC
         BCT   R3,CHNGMSK1
         LM    R14,R12,12(R13)
         BR    R14                RETURN
         SPACE 2
SETMASK  OI    0(R14),0           FOR EXECUTE
         EJECT ,                                               DM MAR82
* MODIFY DEVMASKT ENTRY FROM MASKWRK                           DM MAR82
* R10 POINTS TO THE DEVMASKT ENTRY, R14 IS RETURN              DM MAR82
CHNGDEVT STM   R14,R12,12(R13)                                 DM MAR82
         NI    SWA,255-LPAPROT                                 DM MAR82
         LR    R0,R10             DEVELOP OFFSET TO SEGMENT    DM MAR82
         SRDA  R0,32                 TABLE ENTRY FOR           DM MAR82
         D     R0,SEGSIZE               BEGINNING OF ENTRY     DM MAR82
         SLL   R1,2                        DEVMASKT ENTRY      DM MAR82
         LR    R2,R10             DEVELOP OFFSET TO SEGMENT    DM MAR82
         A     R2,MASKLNG            TABLE ENTRY FOR           DM MAR82
         BCTR  R2,0                     END OF DEVMASKT        DM MAR82
         SRDA  R2,32                       ENTRY               DM MAR82
         D     R2,SEGSIZE                                      DM MAR82
         SLL   R3,2                                            DM MAR82
         LR    R2,R1                                           DM MAR82
         L     R15,PSAAOLD-PSA    CURRENT ASCB                 DM MAR82
         L     R15,ASCBRSM(,R15)  REAL STORAGE MGR HDR         DM MAR82
         L     R15,RSMVSTO(,R15)  VIRTUAL ADDRESS OF SEGTAB    DM MAR82
         AR    R2,R15             DEVELOP ADDRESSES OF         DM MAR82
         AR    R3,R15                  SEGTAB ENTRIES          DM MAR82
         TM    3(R2),4            TEST STORE PROTECTION BIT    DM MAR82
         BZ    NOPROT1            NO PROTECTION                DM MAR82
         OI    SWA,LPAPROT        LPA PROTECT IS ON            DM MAR82
         NI    3(R2),255-4        TURN OFF                     DM MAR82
         NI    3(R3),255-4             PROTECTION              DM MAR82
         SPACE ,                                               DM NOV82
         MODESET MODE=SUP         GET IN SUPERVISOR STATE      DM NOV82
         PTLB  ,          PURGE TRANSLATION LOOK-ASIDE BUFFER  DM NOV82
         MODESET MODE=PROB        BACK TO PROBLEM STATE        DM NOV82
         SPACE ,                                               DM NOV82
NOPROT1  LR    R0,R10             CURRENT DEVMASKT ENTRY       DM MAR82
         LA    R14,MASKWRK        NEW DEVMASKT ENTRY           DM MAR82
         L     R1,MASKLNG         MOVE THE                     DM MAR82
         LR    R15,R1                  NEW ENTRY               DM MAR82
         MVCL  R0,R14                       TO THE CURRENT     DM MAR82
         TM    SWA,LPAPROT        SEE IF LPA PROTECTED         DM MAR82
         BZ    NOPROT2            NO - SKIP REPROTECT          DM MAR82
         OI    3(R2),4            TURN ON                      DM MAR82
         OI    3(R3),4                 PROTECTION              DM MAR82
NOPROT2  LM    R14,R12,12(R13)                                 DM MAR82
         BR    R14                RETURN                       DM MAR82
         EJECT
PAGEFIX  STM  R14,R12,12(R13)     SAVE ENTRY REGISTERS
         SPACE 1
***********************************************************************
* IN ORDER TO FACILITATE AN UNACCOUNTED FOR PAGEFIX, THE BRANCH       *
* ENTRY TO THE PAGE SERVICE INTERFACE ROUTINE (IEAVPSIB) MUST BE      *
* USED. THE FOLLOWING ARE THE REQUIREMENTS FOR THIS ROUTINE:          *
*    MODE:      SUPERVISOR                                            *
*    KEY:       ZERO                                                  *
*    LOCKS:     LOCAL                                                 *
*    REGISTERS: R0 - ECB ADDRESS, OR ZERO                             *
*               R1,R2 - IF R1, BYTE 0=1 THEN                          *
*                          R1=ADDRSS(VSL)                             *
*                          R2=N/A                                     *
*                       IF R1, BYTE 0, BIT 0=0                        *
*                          R1 - XL1(FLAG),AL3(START ADDR)             *
*                          R2 - XL1(FLAG),AL3(END ADDR +1)            *
*               R3 - N/A                                              *
*               R4 - TCB ADDRESS, OR ZERO - IF ZERO NO FOE WILL       *
*                                           BE BUILT - NO RLSE AT     *
*                                           END OF TASK               *
*               R5-R13 - N/A                                          *
*               R14 - RETURN ADDRESS                                  *
*               R15 - ENTRY POINT OF IEAVPSIB                         *
***********************************************************************
         SPACE 1
* ON ENTRY R2 - ADDR OF DEVMASKT ENTRY
         SPACE 1
         L     R1,FLCCVT-PSA
         CLM   R2,7,CVTLPDIR-CVT(R1)   SEE IF IN PLPA
         BL    PGFXRET            NO - ADDRESS TOO LOW
         LR    R4,R2              SET ENTRY START ADDRESS
         N     R4,=F'-4096'       TRUNCATE TO PAGE START
         LR    R5,R4
         AH    R5,=H'4096'        FIX 4096 BYTES
         A     R2,MASKLNG         END OF ENTRY
         CR    R2,R5              CHECK IF OVER END OF PAGE
         BNH   *+8                NO
         AH    R5,=H'4096'        FIX 8192 BYTES
         C     R4,FIXLOW
         BL    PAGEFIX1           BELOW LAST FIX
         C     R5,FIXHIGH
         BH    PAGEFIX1           ABOVE LAST FIX
         B     PGFXRET            THIS PAGE ALREADY FIXED
         SPACE ,
PAGEFIX1 STM   R4,R5,FIXLOW       SAVE NEW LIMITS
         ICM   R4,8,=X'42'        INDICATE LONG FIX
         ICM   R5,8,=X'80'        INDICATE LAST ENTRY
* R4 & R5 NOW CONTAIN VSL TO BE USED IN PAGE FIX
         MODESET MODE=SUP         GET TO SUPERVISOR STATE
         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE,               *
               RELATED=('LOCAL LOCK FOR IEAVPSIB')
         XC    FXECB,FXECB        CLEAR ECB
         LA    R0,FXECB           SET ECB ADDRESS
         LR    R1,R4              LOAD VSL INTO REGS 1 & 2
         LR    R2,R5              FROM REGS 4 & 5
         SR    R4,R4              SET R4=0, INDICATE NO TCB
         L     R15,16             GET CVT ADDRESS
         L     R15,CVTVPSIB-CVT(,R15) GET IEAVPSIB ADDRESS
         BALR  R14,R15            BRANCH ENTER PAGE SERVICES
         LR    R10,R15            SAVE RETURN CODE
         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE,                          *
               RELATED=('LOCAL LOCK FOR IEAVPSIB')
         MODESET MODE=PROB        GET BACK TO PROB STATE
         LTR   R10,R10            CHECK PGFIX RC
         BZ    PGFXRET            0 - FIX COMPLETE & OK
         WAIT  ECB=FXECB          WAIT FOR PAGE I/O COMPLETE
         CLI   FXECB+3,0          WAS FIX OK?
         BE    PGFXRET            YES, SET UP RETURN
         WTO   'GENERIC HAS FAILED TO PAGEFIX DEVMASKT',               *
               ROUTCDE=2
         SPACE 1
PGFXRET  LM    R14,R12,12(R13)    RESTORE REGS
         BR    R14                RETURN
         SPACE 3
DEVNAMET DC    CL8'DEVNAMET'
DEVMASKT DC    CL8'DEVMASKT'
         SPACE ,
         LTORG ,
         EJECT ,
* WORK AREA DEFINITION AND INITIALIZATION AREA
* R13 POINTS TO A GETMAIN AREA WHICH IS THEN INITIALIZED
* WITH THIS DATA
         CSECT ,
SAVEAREA DC    18F'0'             REGISTER SAVE AREA
GMLNG    DC    F'0'               LENGTH OF THIS AREA
MASKLNG  DC    F'0'               LENGTH OF ONE DEVMASKT ENTRY
         SPACE 1
FXECB    DS    F                  PAGE FIX ECB
FIXLOW   DC    A(0)               LOWER BOUND OF LAST PAGEFIX
FIXHIGH  DC    A(0)               UPPER BOUND OF LAST PAGEFIX
ADRNAMET DC    A(0)               ENTRY POINT OF DEVNAMET
ADRMASKT DC    A(0)               ENTRY POINT OF DEVMASKT
CTLREG0  DC    F'0'               CONTROL REGISTER 0           DM MAR82
* BYTE 0                                                       DM MAR82
CRBLKMUX EQU   128                BLOCK MULTIPLEXING CONTROL   DM MAR82
CRSSMSUP EQU   64                 SSM SUPPRESSION              DM MAR82
CRTODCTL EQU   32                 TOD-CLOCK SYNC               DM MAR82
CRLAPROT EQU   16                 LOW-ADDRESS PROTECTION       DM MAR82
CREXAUTH EQU   8                  EXTRACTION AUTHORITY         DM MAR82
CRSECSPC EQU   4                  SECONDARY ADDRESS SPACE CTL  DM MAR82
CRRSV1   EQU   2                  RESERVED                     DM MAR82
CRSKEXC  EQU   1                  STORAGE EXCEPTION CONTROL    DM MAR82
* BYTE 1                                                       DM MAR82
CRPAG4K  EQU   128                4K PAGES (DAT)               DM MAR82
CRPAG2K  EQU   64                 2K PAGES                     DM MAR82
CRRSV2   EQU   32                 RESERVED                     DM MAR82
CRSEG1M  EQU   16                 1-MEG SEGMENTS               DM MAR82
*                                 0 IS 64-K SEGMENTS           DM MAR82
CRRSV3   EQU   8                  RESERVED                     DM MAR82
CRPFASST EQU   4                  PAGE-FIX ASSIST              DM MAR82
CRRSV4   EQU   2                  RESERVED                     DM MAR82
CRRSV5   EQU   1                  RESERVED                     DM MAR82
* BYTE 2                                                       DM MAR82
CRMASUBM EQU   128                MALFUNCTION-ALERT SUBCLASS M DM MAR82
CRESSUBM EQU   64                 EMERGENCY-SIGNAL SUBCLASS MA DM MAR82
CRXCSUBM EQU   32                 EXTERNAL-CALL SUBBCLASS MASK DM MAR82
CRTODSYN EQU   16                 TOD-CLOCK SYNC-CHECK SUBCLAS DM MAR82
CRCCSUBM EQU   8                  CLOCK-COMPARATOR SUBCLASS MA DM MAR82
CRCPUSUB EQU   4                  CPU-TIMER SUBCLASS MASK      DM MAR82
CRSSSUBM EQU   2                  SERVICE-SIGNAL SUBCLASS MASK DM MAR82
CRRSV6   EQU   1                  RESERVED                     DM MAR82
* BYTE 3                                                       DM MAR82
CRITSUBM EQU   128                INTERVAL TIMER SUBCLASS MASK DM MAR82
CRIKSUBM EQU   64                 INTERRUPT-KEY SUBCLASS MASK  DM MAR82
CREXSUBM EQU   32                 EXTERNAL-SIGNAL SUBCLASS MAS DM MAR82
CRRSV7   EQU   16                 RESERVED                     DM MAR82
CRRSV8   EQU   8                  RESERVED                     DM MAR82
CRRSV9   EQU   4                  RESERVED                     DM MAR82
CRIUCVSM EQU   2                  IUCV SUBCLASS MASK (VM/370)  DM MAR82
CRVMCFSM EQU   1                  VMCF SUBCLASS MASK (VM/370)  DM MAR82
         SPACE ,                                               DM MAR82
SEGSIZE  DC    F'0'               SEGMENT LENGTH (64K OR 1M)   DM MAR82
SEGROUND DC    F'0'               SEGMENT ROUNDING FACTOR      DM MAR82
SEGTRUNC DC    F'0'               'AND' MASK TO TRUNCATE SGMNT DM MAR82
PGSIZE   DC    F'0'               PAGE LENGTH (2K OR 4K)       DM MAR82
PGROUND  DC    F'0'               PAGE ROUNDING FACTOR         DM MAR82
PGTRUNC  DC    F'0'               'AND' MASK TO TRUNCATE PAGE  DM MAR82
         SPACE
* THE FOLLOWING NUMBERS ARE THE LENGTHS OF EACH SECTION OF THE EDT
EDTLKUPL DC    H'32'              LOOK-UP SECTION
EDTGENRL DC    H'12'              GENERIC SECTION
EDTGRPTL DC    H'4'               GROUP POINTER SECTION
EDTGRPL  DC    H'12'              GROUP SECTION
EDTUCBPL DC    H'2'               UCB POINTER SECTION
         SPACE ,                                               DM MAR82
SWA      DC    X'0'               BIT SWITCHES                 DM MAR82
LPAPROT  EQU   128                LPA PROTECT IS ON            DM MAR82
         DC    0D'0'
WRKLNG1  EQU   *-SAVEAREA         FIXED PORTION OF AREA
MASKWRK  DS    0F
MASKCNT  DS    F                  NUMBER OF DEVICES IN THIS ENTRY
MASKDEVT DS    F                  DEVICE TYPE
MASKBITS EQU   *
MASKRND  EQU   7+8*(*-MASKWRK+3)  FACTOR TO CONVERT BITS IN            *
                                  DEVMASKT TO A NUMBER OF BYTES        *
                                  THAT IS A FULLWORD MULTIPLE
         SPACE 3
         CVT   DSECT=YES
         PUSH  PRINT
         PRINT ON,NOGEN
         IHAPSA ,
         POP PRINT
         END
