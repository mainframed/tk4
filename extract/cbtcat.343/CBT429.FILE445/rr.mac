RR       TITLE ' RR '
***********************************************************************
*                                                                     *
*  Module to format the parameters for RR and RRE format instructions *
*                                                                     *
*  input: addressed by R14                                            *
*    +0  - @ output buffer                                            *
*    +4  - instruction format                                         *
*    +5  - operand format (not used for RR/RRE instructions)          *
*    +6  - instruction length                                         *
*    +8  - instruction to format (2 bytes used, 6 reserved)           *
*    +16 - IC (3 byte instruction counter)                            *
*    +19 - instruction format from AXN table                          *
*    +20 - module returns to here                                     *
*                                                                     *
* history                                                             *
*   check BASR as well as BALR instructions for USING bases. may 1994 *
*   add SVC description to SVC calls                     CFK may 1994 *
*   gen SVC number correctly                             CFK apr 1999 *
*   Format RRE instructions                              CFK jun 1999 *
*   format all RR/RRE with only 1 reg needed             CFK jun 1999 *
*   ignore format E instructions (no operands)           CFK jun 1999 *
*                                                                     *
***********************************************************************
         FMTPARMS                 copy parameter map
RR       CSECT
         USING FMTPARMS,14        tell assembler about parms
         BALR  13,0               load base reg
         USING *,13               tell assembler
         EXTRN PAB                in PASS1 csect
         EXTRN USING              csect
         EXTRN BCV                csect
         ST    14,RR14            save @ parameters
         CLI   FMTFMT,FMTFE       E format ?
         BE    RET                branch if yes (no operands)
         MVC   RG+3(1),9(14)      copy registers to BCV parms
         CLI   8(14),X'40'        four byte instruction ?
         BL    NOTRRE             no - it's not RRE
         MVC   RG+3(1),11(14)     copy RRE registers to BCV parms
NOTRRE   DS    0H
         MVC   CRR+3(1),RG+3      copy registers to USING parms
         MVC   RG(3),Z3           clear rest of BCV parms
         CLI   8(14),X'0A'        SVC INSTR ?
         BE    DEC                BRANCH IF YES
         L     14,ABCV            CONVERT REGISTER TO
         ST    13,RG+4            BCD
         CNOP  2,4
         BALR  14,14              call BCV csect
RG       DC    F'0'
         DC    F'0'               callers r13 reloaded from here
         L     14,RR14            reload @ parms
         L     3,0(14)            get @ o/p buffer
         MVC   70(2,3),RG         copy register no (2 byte)
         CLI   RG,C'0'            reg 0-9 ?
         BNE   RRZ                if not leave 2 byte reg no.
         MVC   70(1,3),RG+1       else copy 1 byte reg no.
         MVI   71(3),C' '         put a space after it
         BCT   3,RRZ              dec pointer to o/p buffer
RRZ      CLI   FMTFMT,FMTFRR1     only 1 reg. needed ?
         BE    RET                if so finished
         MVI   72(3),C','         NO - add comma
         MVC   73(2,3),RG+2       add 2nd reg no.
         CLI   RG+2,C'0'          reg 0-9 ?
         BNE   RRZ2               if not leave 2 byte reg no.
         MVC   73(1,3),RG+3       else copy 1 byte reg no.
         MVI   74(3),C' '         and put a space after it.
RRZ2     DS    0H
         CLI   8(14),X'0D'        BASR inst ?
         BE    RRZ3               if so check USING
         CLI   8(14),X'05'        BALR INST ?
         BNE   RET                if not exit
RRZ3     DS    0H
         CLC   RG+2(2),ZER        balr x,0 ?
         BNE   RET                if not exit
         CLC   RG(2),ZER          balr 0,0 ?
         BE    RET                if so exit (reg 0 can't be a base)
         L     3,PCR              get @ PAB in pass1
         MVC   64(8,3),US         set next card to USING *,
         MVI   0(3),X'FF'         flag card inserted
         MVC   72(2,3),RG         add reg to USING card
         MVC   CRR+4(4),16(14)    pass IC to using
         MVC   CRR+2(1),9(14)     pass reg no.
         MVI   CRR,X'01'          flag insert
         L     3,CRR+4
         A     3,F12              add 512 to IC passed to USING
         ST    3,CRR+4
         L     14,AUSI            ENTER IC IN USING TABLE
         ST    13,CRR+8           save base reg
         CNOP  2,4
         BALR  14,14              call USING csect
CRR      DC    F'0'               x'01' flag, xl1'0', 2x'r0' reg no.
         DC    F'0'               IC (instruction counter ?)
         DC    F'0'               saved base reg
         B     RET                and exit
DEC      L     3,RG               output SVC no in decimal
         CVD   3,RGD
         L     3,0(14)            get @ o/p buffer
         MVC   CWRK,=X'40202120'  prepare to EDit
         LR    14,1               save r1
         LA    1,CWRK+3           prime r1
         EDMK  CWRK,RGD+6         generate SVC number
         MVC   70(3,3),0(1)       move it to output buffer
         LR    1,14               reload r1
         L     14,RG              get SVC number
         SLL   14,3               mul by svc table entry length (8)
         LA    14,SVCTAB(14)      @ svc description
         MVC   84(8,3),0(14)      copy SVC description
RET      L     14,RR14            reload @ parms
         BAL   14,20(14)          and exit
         DC    C'IMM='
         LTORG
ABCV     DC    A(BCV)             @ BCV csect
AUSI     DC    A(USING)           @ USING csect
PCR      DC    A(PAB)             @ PAB in PASS1
INSTR    DC    C'  '
CWRK     DC    CL4' '             work area for EDMK
         DC    CL2' '             continuation of work area
RGD      DC    D'0'               space to convert svc # to decimal
RR14     DC    F'0'               save area for r14
F12      DC    F'512'             constant
Z3       DC    F'0'               constant
ZER      DC    X'F0F0'
US       DC    C'USING *,'
         DS    0F
*   table of svc descriptions
SVCTAB   DC    CL8'EXCP    '       00            0
         DC    CL8'WAIT    '       01            1
         DC    CL8'POST    '       02            2
         DC    CL8'EXIT    '       03            3
         DC    CL8'GETMAIN '       04            4
         DC    CL8'FREEMAIN'       05            5
         DC    CL8'LINK    '       06            6
         DC    CL8'XCTL    '       07            7
         DC    CL8'LOAD    '       08            8
         DC    CL8'DELETE  '       09            9
         DC    CL8'GMN/FRMN'       0A           10
         DC    CL8'TIME    '       0B           11
         DC    CL8'SYNCH   '       0C           12
         DC    CL8'ABEND   '       0D           13
         DC    CL8'SPIE    '       0E           14
         DC    CL8'ERREXCP '       0F           15
         DC    CL8'PURGE   '       10           16
         DC    CL8'RESTORE '       11           17
         DC    CL8'BLDL    '       12           18
         DC    CL8'OPEN    '       13           19
         DC    CL8'CLOSE   '       14           20
         DC    CL8'STOW    '       15           21
         DC    CL8'OPEN J  '       16           22
         DC    CL8'CLOSE T '       17           23
         DC    CL8'DEVTYPE '       18           24
         DC    CL8'TRKBAL  '       19           25
         DC    CL8'LOCATE  '       1A           26
         DC    CL8'OBTAIN  '       1B           27
         DC    CL8'CVOL    '       1C           28
         DC    CL8'SCRATCH '       1D           29
         DC    CL8'RENAME  '       1E           30
         DC    CL8'FEOV    '       1F           31
         DC    CL8'ALLOC   '       20           32
         DC    CL8'IOHALT  '       21           33
         DC    CL8'QEDIT   '       22           34
         DC    CL8'WTO/WTOR'       23           35
         DC    CL8'WTL     '       24           36
         DC    CL8'SEGLD   '       25           37
         DC    CL8'RESERVED'       26           38
         DC    CL8'LABEL   '       27           39
         DC    CL8'EXTRACT '       28           40
         DC    CL8'IDENTIFY'       29           41
         DC    CL8'ATTACH  '       2A           42
         DC    CL8'CIRB    '       2B           43
         DC    CL8'CHAP    '       2C           44
         DC    CL8'OVLYBRCH'       2D           45
         DC    CL8'TTIMER  '       2E           46
         DC    CL8'STIMER  '       2F           47
         DC    CL8'DEQ     '       30           48
         DC    CL8'RESERVED'       31           49
         DC    CL8'RESERVED'       32           50
         DC    CL8'SNAP    '       33           51
         DC    CL8'RESTART '       34           52
         DC    CL8'RELEX   '       35           53
         DC    CL8'DISABLE '       36           54
         DC    CL8'EOV     '       37           55
         DC    CL8'ENQ/RSV '       38           56
         DC    CL8'FREEDBUF'       39           57
         DC    CL8'RELBUF  '       3A           58
         DC    CL8'OLTEP   '       3B           59
         DC    CL8'(E)STAE '       3C           60
         DC    CL8'IKJEGS6A'       3D           61
         DC    CL8'DETACH  '       3E           62
         DC    CL8'CHKPT   '       3F           63
         DC    CL8'RDJFCB  '       40           64
         DC    CL8'RESERVED'       41           65
         DC    CL8'BTAMTEST'       42           66
         DC    CL8'RESERVED'       43           67
         DC    CL8'SYNADAF '       44           68
         DC    CL8'BSP     '       45           69
         DC    CL8'GSERV   '       46           70
         DC    CL8'ASGNBFR '       47           71
         DC    CL8'CHATR   '       48           72
         DC    CL8'SPAR    '       49           73
         DC    CL8'DAR     '       4A           74
         DC    CL8'DQUEUE  '       4B           75
         DC    CL8'IFBSTAT '       4C           76
         DC    CL8'RESERVED'       4D           77
         DC    CL8'LSPACE  '       4E           78
         DC    CL8'STATUS  '       4F           79
         DC    CL8'RESERVED'       50           80
         DC    CL8'SETPRT  '       51           81
         DC    CL8'DASDR   '       52           82
         DC    CL8'SMFWTM  '       53           83
         DC    CL8'GRAPHICS'       54           84
         DC    CL8'DDRSWAP '       55           85
         DC    CL8'ATLAS   '       56           86
         DC    CL8'DOM     '       57           87
         DC    CL8'MOD88   '       58           88
         DC    CL8'RESERVED'       59           89
         DC    CL8'RESERVED'       5A           90
         DC    CL8'VOLSTAT '       5B           91
         DC    CL8'TCBEXCP '       5C           92
         DC    CL8'TGET/PUT'       5D           93
         DC    CL8'STCC    '       5E           94
         DC    CL8'SYSEVENT'       5F           95
         DC    CL8'STAX    '       60           96
         DC    CL8'TSO TEST'       61           97
         DC    CL8'PROTECT '       62           98
         DC    CL8'DYNALLOC'       63           99
         DC    CL8'IKJEFFIB'       64          100
         DC    CL8'QTIP    '       65          101
         DC    CL8'AQCTL   '       66          102
         DC    CL8'XLATE   '       67          103
         DC    CL8'TOPCTL  '       68          104
         DC    CL8'IMAGLIB '       69          105
         DC    CL8'RESERVED'       6A          106
         DC    CL8'MODESET '       6B          107
         DC    CL8'RESERVED'       6C          108
         DC    CL8'ESR TP 4'       6D          109
         DC    CL8'DSTATUS '       6E          110
         DC    CL8'SVCHAM  '       6F          111
         DC    CL8'PGRLSE  '       70          112
         DC    CL8'PGFX/FRE'       71          113
         DC    CL8'EXCPVR  '       72          114
         DC    CL8'RESERVED'       73          115
         DC    CL8'ESR TP 1'       74          116
         DC    CL8'DEBCHK  '       75          117
         DC    CL8'RESERVED'       76          118
         DC    CL8'TESTAUTH'       77          119
         DC    CL8'GMN/FRM '       78          120
         DC    CL8'VSAM    '       79          121
         DC    CL8'EVENTS  '       7A          122
         DC    CL8'PURGEDQ '       7B          123
         DC    CL8'TPIO    '       7C          124
         DC    CL8'EVENTS  '       7D          125
         DC    CL8'MSS INTF'       7E          126
         DC    CL8'RESERVED'       7F          127
         DC    CL8'RESERVED'       80          128
         DC    CL8'RESERVED'       81          129
         DC    CL8'RACHECK '       82          130
         DC    CL8'RACINIT '       83          131
         DC    CL8'RACLIST '       84          132
         DC    CL8'RACDEF  '       85          133
         DC    CL8'RESERVED'       86          134
         DC    CL8'RESERVED'       87          135
         DC    CL8'RESERVED'       88          136
         DC    CL8'ESR     '       89          137
         DC    CL8'PGSER   '       8A          138
         DC    CL8'CVAF Req'       8B          139
         DC    60CL8'RESERVED'                 140-199
         DC    56CL8'User SVC'     User SVCs   200-255
         END
*SVCPARM 109 - ESR 200                   ESF 10.0                   */ 0
*            - ESR 201                   ESF RESERVED               */ 0
*SVCPARM 202,REPLACE,TYPE(3)             NAVIGRAPH (RESERVED)       */ 0
*SVCPARM 203,REPLACE,TYPE(3) **IN USE**  MONITOR 9.2                */ 0
*SVCPARM 210,REPLACE,TYPE(3) **IN USE**  CA-1 5.0 - DYNAMIC         */ 0
*SVCPARM 211,REPLACE,TYPE(3) **IN USE**  CA-1 5.0 - DYNAMIC         */ 0
  SVCPARM 215,REPLACE,TYPE(6)          /* CICS 2.1.2 - HP            */
  SVCPARM 216,REPLACE,TYPE(2)          /* CICS 2.1.2 - DL/I          */
*SVCPARM 220,REPLACE,TYPE(4)             CA-7 (RESERVED)            */ 0
*SVCPARM 221,REPLACE,TYPE(4) **IN USE**  CA-7 3.0 - DYNAMIC         */ 0
*SVCPARM 222,REPLACE,TYPE(4) **IN USE**  CA-11                      */ 0
*SVCPARM 223,REPLACE,TYPE(4)             CA-11 (RESERVED)           */ 0
*SVCPARM 225,REPLACE,TYPE(6)             CICS (RESERVED)            */ 0
*SVCPARM 226,REPLACE,TYPE(2)             CICS (RESERVED)            */ 0
*SVCPARM 230,REPLACE,TYPE(3) **IN USE**  QFETCH 2.5 - DYNAMIC       */ 0
*SVCPARM 231,REPLACE,TYPE(3)             QFETCH (RESERVED)          */ 0
  SVCPARM 232,REPLACE,TYPE(4)          /* BETA92 2.2.0               */
*SVCPARM 233,REPLACE,TYPE(4)             BETA92 (RESERVED)          */ 0
  SVCPARM 234,REPLACE,TYPE(3)          /* FOCUS 6.0                  */
  SVCPARM 235,REPLACE,TYPE(3)          /* FOCUS 6.5                  */
  SVCPARM 236,REPLACE,TYPE(3)          /* TMON 8.0                   */
*SVCPARM 237,REPLACE,TYPE(3)             TMON (RESERVED)            */ 0
*SVCPARM 238,REPLACE,TYPE(5)             CA-ACF2 (RESERVED)         */ 0
*SVCPARM 239,REPLACE,TYPE(5)             CA-ACF2 (RESERVED)         */ 0
*SVCPARM 240,REPLACE,TYPE(5) **IN USE**  CA-ACF2 - DYNAMIC          */ 0
*SVCPARM 241,REPLACE,TYPE(5) **IN USE**  CA-ACF2 - DYNAMIC          */ 0
  SVCPARM 242,REPLACE,TYPE(2)          /* IMS/ESA 3.1.0              */
  SVCPARM 243,REPLACE,TYPE(4)          /* IMS/ESA 3.1.0 DBRC         */
*SVCPARM 248,REPLACE,TYPE(3)             SYNCSORT (RESERVED)        */ 0
  SVCPARM 249,REPLACE,TYPE(3)          /* SYNCSORT 3.5               */
  SVCPARM 252,REPLACE,TYPE(3)          /* SETAUTH MACRO              */
*SVCPARM 253,REPLACE,TYPE(3)             UTSEC (RESERVED)           */ 0
         END
