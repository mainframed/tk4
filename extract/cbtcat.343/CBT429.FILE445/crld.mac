CRLD     TITLE 'CRLD, Get logical address of next ADCON'
***********************************************************************
*                                                                     *
*  Get logical address of next ADCON                                  *
*                                                                     *
*  called by FTXTA                                                    *
*                                                                     *
*  parms @ R14:                                                       *
*    +0  - output 8 byte RLD entry                                    *
*    +4  - output logical address of next ADCON (part of RLD)         *
*    +8  - output 4 byte field, length of ADCON                       *
*    +12 - callers r13                                                *
*    +16 - return to here                                             *
*                                                                     *
***********************************************************************
CRLD     CSECT
         BALR  13,0               setup base register
         USING *,13               tell assembler
         ENTRY CF                 ref'ed by FTXTA
         ENTRY ARLDS              ref'ed by FTXTA
         EXTRN NBR                in RLD csect
         CLI   RLF,X'FF'          1st pass ?
         BE    BRLD               br if not 1st pass
         MVI   RLF,X'FF'          else indicate not 1st pass
         L     3,ARLDS            INITIALIZE, get RLD pointer
         MVC   RLB(4),0(3)        copy number of bytes in table
         LA    4,4(3)             get @ RLD data
         ST    4,ARLDS            save @ RLD data
         CLC   RLB(4),RLFF        ANY RLD ?
         BE    REN                br if no RLD
         MVC   ST82(4),RLFF       else clear
         MVC   ST82+4(4),RLFF      ST82 to zeroes
         MVC   ST83(8),0(4)       copy 1st RLD entry
         MVC   ST8G(8),ST83       make 2nd copy
         MVI   FF,X'00'           ind. highest RLD not found
BRLD     L     3,ARLDS            get RLD pointer
         MVI   CF,X'00'           flag not continued RLD entry
         SR    6,6                clear RLD bytes processed count.
ALOP2    TM    CF,X'01'           continuation of last RLD entry ?
         BO    HM                 br. if yes
         MVC   ST8(8),0(3)        NO CONTINUATION, copy new entry
         LA    3,8(3)             point @ next RLD entry
         LA    6,8(6)             incr. length processed so far
         B     FM                 br. round continuation code
HM       MVC   ST8+4(4),0(3)      CONTINUATION, copy just flags and len
         LA    3,4(3)             point @ next RLD entry
         LA    6,4(6)             incr. length processed so far
FM       L     4,CF               ) get length
         SLL   4,4                )  of this
         SRL   4,30               )   RLD entry
         LA    4,1(4)             CALCULATE LENGTH
         ST    4,TLA2             save length
         CLI   FF,X'00'           highest RLD found ?
         BNE   CLOPA              br. if yes
         CLC   ST8+5(3),ST8G+5    highest RLD adr. so far ?
         BNH   C66                br if not
         MVC   ST8G(8),ST8        else save new highest
C66      C     6,RLB              end of RLD table reached ?
         BL    ALOP2              loop back if not
         MVI   FF,X'FF'           ind. highest RLD entry found
         MVI   CF,X'00'           flag not continued entry
         MVC   ST83(8),ST8G       copy highest RLD entry
         B     BRLD               loop back
CLOPA    CLC   ST8+5(3),ST82+5
         BNH   RAC4
         CLC   ST8+5(3),ST83+5
         BH    RAC4
         MVC   ST83(8),ST8
         MVC   TLA3(4),TLA2       copy length of RLD entry
RAC4     C     6,RLB              end of RLD table reached ?
         BL    ALOP2              loop back if not
         BE    RAD3
RAD3     CLC   ST82(8),ST83       buffered RLD used ?
         BE    REN                yes, end really reached.
         MVC   8(4,14),TLA3       NO, copy ADCON length (2,3 or 4)
         MVC   0(8,14),ST83       copy RLD entry
         MVC   ST82(8),ST83       shuffle buffered
         MVC   ST83(8),ST8G        RLD entries down
         B     RRR                and return
REN      MVC   8(4,14),LRD        YES, pass dummy address of x'FFFFFF'
         MVI   CF,X'00'           flag no continuation
         SR    3,3                clear
         ST    3,RLFF              field
         MVC   ARLDS(4),ARLDE     reset RLD pointer to base value
         MVI   RLF,X'00'          indicate pointer reset
RRR      L     13,12(14)          RETURN
         BAL   14,16(14)
         DC    C'IMM='
ARLDS    DC    A(NBR)             @ NBR in RLD csect, also entry point
ARLDE    DC    A(NBR)             @ NBR in RLD csect, constant
FF       DC    F'0'               flag
ST8      DC    F'0'               8 byte field
CF       DC    F'0'               entry point, part of ST8,
RLB      DC    F'0'
RLF      DC    F'0'               flag, zeroed by FTXTA via CF
RLFF     DC    F'0'               constant ?, zeroed by FTXTA via CF
LRD      DC    X'0FFFFFFF'        constant
AIC      DC    F'0'               not used ?
ARLDT    DC    F'0'               not used ?
ARLDS2   DC    F'0'               not used ?
RLFF2    DC    F'0'               not used ?
RLFF3    DC    F'0'               not used ?
ST8G     DC    2F'0'
ST82     DC    F'0'               8 byte field
CF2      DC    F'0'               part of ST82
ST83     DC    F'0'               8 byte field
         DC    F'0'
TLA2     DC    F'0'               length of RLD entry
TLA3     DC    F'0'
AFL      DC    F'0'               not used ?
AFL2     DC    F'0'               not used ?
ERRA     DC    F'8'               not used ?
FRRA     DC    F'4'               not used ?
         END
