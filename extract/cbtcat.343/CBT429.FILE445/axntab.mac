         MACRO
         AXNTAB
***********************************************************************
*                                                                     *
*  DSECT to map the opcode table in AXN                               *
*                                                                     *
***********************************************************************
AXNTAB   DSECT
AXNAME   DS    CL5             Opcode mnemonic
AXNOPC   DS    0XL2            Opcode. If 1 byte padded with x'00'
AXNOPC1  DS    X               Opcode 1st byte.
AXNOPC2  DS    X               Opcode 2nd byte.
AXNFLG1  DS    X               Flag byte as in the original table
*  the high 4 bits are the instruction format as follows:
*  the low 4 bits depend on the instruction format as follows:
*              0                 invalid instruction (DC)
*XNFRR   EQU   1                 RR - R1,R1
*              11                   - F1,F2 (short)
*              12                   - F1,F2 (long)
*              13                   - R1
* *NEW*        14                E  - no operand
* *NEW*        15                RRE - R1,R2 4 byte instruction
* *NEW*        16                RRE - R1 4 byte instruction
*              1F                 terminating instruction.
*XNFRX   EQU   2                 RX - R1,D2(X2,B2)
*              20      references byte or no memory access
*              21          "      Halfword
*              22          "      signed Fullword
*              23          "      Doubleword
*              24          "      short Float
*              26          "      Fullword
*              27          "      unsigned Fullword
*              28          "      long Float (unnormalised)
*              2F                 terminating instruction
*XNFRS   EQU   3                 RS - R1,R3,D2(B2)
*              31                   - R1,D2(B2)
* *NEW*        32                RS - PLO, R1,D2(B2),R3,D4(B4)
*              3F                 terminating instruction
*XNFSI   EQU   4                 SI - D1(B1),I2
*              41                   - D1(B1)
* *NEW*        42                S  - (no operands)
*              4F                 terminating instruction
*XNFSS   EQU   5                 SS - 1 length, D1(L,B1),D2(B2)
*              51                SS - 2 lengths, D1(L1,B1),D2(L2,B2)
* *NEW*        52                SS - trailing reg, D1(R1,B1),D2(B2),R3
* *NEW*        53                SSE - D1(B1),D2(B2)
* *NEW*        54                SS - trailing len, D1(R1,B1),D2(B2),L3
AXNFMT   DS    X               Instruction format
*  the high 4 bits are the instruction format as follows
*  the low 4 bits are the instruction format subtype
AXNFCON  EQU   0                 Constant
AXNFRR   EQU   1                 RR - R1,R1 (or RRE)
*              11                   - R1    (or RRE)
*              12                E  - no parameters
AXNFRX   EQU   2                 RX - R1,D2(X2,B2)
AXNFRS   EQU   3                 RS - R1,R3,D2(B2)
*              31                   - R1,D2(B2)
*              32                RS - PLO, R1,D2(B2),R3,D4(B4)
AXNFSI   EQU   4                 SI - D1(B1),I2
*              41                   - D1(B1)
*              42                S  - (no operands)
AXNFSS   EQU   5                 SS - 1 length, D1(L,B1),D2(B2)
*              51                SS - 2 lengths, D1(L1,B1),D2(L2,B2)
*              52                SS - trailing reg, D1(R1,B1),D2(B2),R3
*              53                SSE - D1(B1),D2(B2)
*              54                SS - trailing len, D1(R1,B1),D2(B2),L3
AXNOPER  DS    X               Instruction operand format/length
*              0       references byte or no memory access
*              1           "      Halfword
*              2           "      signed Fullword
*              3           "      Doubleword
*              4           "      short Float
*              6           "      Fullword
*              7           "      unsigned Fullword
*              8           "      long Float (unnormalised)
*            254           "      code EXecuted
*            255           "      code (branch)
AXNFLG2  DS    X               Flag byte, new flags.
AXNFINT  EQU   B'00100000'       Interruptible instruction.
AXNFSCC  EQU   B'00010000'       Instruction sets CC.
AXNF2BYT EQU   B'00001000'       Two byte opcode.
AXNFTRM  EQU   B'00000100'       Terminating instruction.
AXNFPRV  EQU   B'00000010'       Privileged instruction.
AXNFSPRV EQU   B'00000001'       Semi-Privileged Instruction.
AXNVAL   DS    X               Extra validation routine number
*              0                 no extra validation
*              4                 register mask in 2nd byte of opcode
*              8                 len1 > len2 and len2 <8 (DP, MP)
*             12                 DXR, registers 0 and 4 only
*             16                 SRP, rounding digit must be valid
*             20                 CUSE, registers must be even
*             24                 SQxR, RRE with floating point regs
AXNUSECT DS    F               Instruction use counter.
AXNTOTCT DS    F               Instr. total use counter.
AXNENTLN EQU   *-AXNTAB        Length on one entry.
AXNNEXT  DS    0C              Next entry in table.
         MEND
