SPPR     TITLE 'SPPR'
***********************************************************************
*                                                                     *
*     SPPR csect                                                      *
*                                                                     *
*  called by PASS4                                                    *
*                                                                     *
*  parms addressed by r14:                                            *
*   input:                                                            *
*    +0  - 8 bytes output from FTXT,       copied to KEY4             *
*    +8  - 12 bytes output from FTXT,      copied to INST4            *
*    +20 - 8 bytes passed to decoding rtn, copied to LEN4 and RT4     *
*    +28 - 4 bytes @ decoding routine,     copied to ROUT4            *
*    +32 -                                                            *
*   output:                                                           *
*    +0 - 24 bytes                                                    *
*                                                                     *
*                                                                     *
*                                                                     *
*    +28 - flag returned, x'01' or x'02'                              *
*    +36 - return address                                             *
***********************************************************************
SPPR     CSECT
         BALR  13,0               establish base reg
         USING *,13               tell assembler
         ENTRY PLCB               ref'ed by PASS4
         EXTRN USING              csect
         EXTRN BSC                csect
         EXTRN BCV                csect
         EXTRN CDN                csect
         EXTRN PA                 in PASS1 csect (Print Area)
         EXTRN PRINT              csect
         EXTRN RFTXT              in FTXTA csect
         EXTRN ARL                csect
         EXTRN PAB                in PASS1 csect
         EXTRN SAVA               csect
         ST    14,SPP14           save @ parms
         MVC   KEY4(32),0(14)     copy parms
         CLI   FFC,X'FF'
         BE    FPLL
         CLI   FFC+3,X'00'
         BNE   FPLL1
         CLC   INST4+9(3),FFAD+1  FIRST FORTRAN INSTR
         BH    FPLL
         MVC   ICF+1(3),INST4+9
         L     4,ICF
         A     4,KEY4+4
         S     4,FFAD
         BM    FPLL
         MVI   KEY4+3,X'00'
         MVI   FFC+3,X'01'
         MVI   PLC+3,X'08'
         LTR   4,4
         BZ    FPLL
         ST    4,RFT
         B     LRFT
FPLL1    CLI   FFC+3,X'01'
         BNE   FPLL2
         CLI   CGOF,X'00'
         BE    CGO1
         CLI   CGOF,X'01'
         BE    CGO2
         CLI   CGOF,X'02'
         BE    CGO3
         CLI   CGOF,X'03'
         BNE   CGOL
         MVC   ICF+1(3),INST4+9
         LH    5,RT4
         SLL   5,1
         A     5,ICF
         LA    5,6(5)
         ST    5,FFAD
         MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         B     CGOL
CGO1     CLC   CGOS1(2),RT4        LH  2, ?
         BNE   CGOL                br. if not
         CLI   KEY4+3,X'02'
         BE    FPLL2
         MVI   CGOF,X'01'
         B     CGOM
CGO2     CLC   CGOS1+2(2),RT4      L   15, ?
         BNE   CGOL                br. if not
         MVI   CGOF,X'02'
         B     CGOM
CGO3     CLC   RT4(2),CGOS2        BALR 14,15 ?
         BNE   CGOL                br. if not
         MVI   CGOF,X'03'
         B     CGOM
CGOL     MVI   CGOF,X'00'
CGOM     BCR   0,0
         CLC   RT4(3),FSS1         BAL  14,8(15) ?
         BNE   FPLL3
         CLI   RT4+3,X'08'
         BE    MFFC
         CLI   RT4+3,X'0C'
         BE    MFFCL
         CLI   RT4+3,X'1C'
         BE    MFFC
         CLI   RT4+3,X'20'
         BE    MFFCL
         CLI   RT4+3,X'38'
         BE    PSF
         CLI   RT4+3,X'34'
         BNE   FPLL3
PSF      MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         MVC   ICF+1(3),INST4+9
         L     5,ICF
         LA    5,10(5)
         ST    5,FFAD
         B     FPLL3
MFFCL    MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         MVC   ICF+1(3),INST4+9
         L     5,ICF
         LA    5,12(5)
         ST    5,FFAD
         B     FPLL3
MFFC     MVI   FFC+3,X'02'
         MVI   KEY4+3,X'02'
         B     FPLL
FPLL2    CLI   FFC+3,X'02'
         BNE   FPLL4
         MVI   FFC+3,X'01'
         MVI   KEY4+3,X'00'
         B     FPLL
FPLL3    CLC   RT4(2),FSS2         BALR  15,0 ?
         BNE   FPLL
         MVI   FFC+3,X'03'
         B     FPLL
FPLL4    CLI   FFC+3,X'03'
         BNE   FPLL
         MVI   FFC+3,X'01'
         L     3,PABF4             get @ PAB in PASS1
         MVI   0(3),X'FF'          ind. card inserted
         MVC   64(10,3),DROP4      copy c'DROP',ZZ14
         ST    13,URF+8            put r13 where USING expects it
         L     14,US4              get @ USING csect
         MVI   URF+2,X'F0'         tell USING to drop r15
         CNOP  2,4
         BALR  14,14               call USING
URF      DC    F'0'
         DC    F'0'
         DC    F'0'                our r13
         B     FPLL
FPLL     BCR   0,0
         CLI   FORHF,X'FF'
         BE    FHN
         CLC   INST4+9(3),FFAD+1
         BNE   FHN
         CLI   FORHF,X'01'
         BE    FH2
         CLC   RT4(4),FHS1        B   12(15) ?
         BNE   FHC                br. if not
         MVI   FFC,X'FF'
         MVI   FORHF,X'01'
         MVI   COBF,X'00'
         MVI   KEY4+3,X'02'
         MVI   FHB+2,X'F0'        tell USING to drop r15
         MVI   FHB+7,X'01'
         MVC   FHB+4(3),FFAD+1
         ST    13,FHB+8           put r13 where USING expects it
         MVI   UREGH+2,X'F0'
         MVC   RGH13+1(3),FFAD+1
         BAL   9,USSH             call routine to output USING card
         B     FHA
         L     14,US4             get @ USING csect
         CNOP  2,4
         BALR  14,14              call USING
FHB      DC    3F'0'
FHA      L     3,FFAD
         LA    3,8(3)
         ST    3,FFAD
         B     FHN
FHC      MVI   KEY4+3,X'00'
         B     FHN
FH2      CLI   FORHF+3,X'00'
         BNE   FH3
         MVI   FORHF+3,X'01'
         MVI   KEY4+3,X'00'
         L     3,FFAD
         LA    3,12(3)
         ST    3,FFAD
         B     FHN
FH3      CLI   FORHF+3,X'01'
         BNE   FH4
         MVI   FORHF+3,X'02'
         CLI   RT4,X'18'
         BNE   FMAIN
         MVI   FORHF+3,X'03'
         L     3,FFAD
         LA    3,18(3)
         ST    3,FFAD
         CLI   RT4+2,X'41'
         BE    FHN
         MVI   FORHF+2,X'01'
         B     FHN
FMAIN    L     3,FFAD
         LA    3,22(3)
         ST    3,FFAD
         B     FHN
FH4      CLI   FORHF+3,X'02'
         BNE   FH5
         L     3,FFAD
         LA    3,22(3)
         ST    3,RGH13
         XC    FFAD(4),FFAD
         MVC   FFAD+2(2),RT4+2
         NI    FFAD+2,X'0F'
         A     3,FFAD
         ST    3,FFAD
* start of a loop
USTH     MVI   KEY4+3,X'02'
         MVI   FORHF+3,X'05'
         MVI   FFC,X'00'
         MVI   FFC+3,X'00'
         MVI   UREGH+2,X'C0'
         MVC   UREGH+4(3),ZZ4
         MVC   T13(4),RGH13
         MVC   RGH13(4),ZZ4
         LA    5,2               number of USING cards to write
* loop to output USING cards
USHL     ST    5,COBR            save counter
         MVI   UREGH,X'01'       tell USING to insert reg
         MVI   UREGH+7,X'01'
         ST    13,UREGH+8        put r13 where USING expects it
         BAL   9,USSH            call routine to output USING card
         L     14,US4            get @ USING csect
         CNOP  2,4
         BALR  14,14             call USING
UREGH    DC    F'0'
         DC    F'0'
         DC    F'0'              our r13 reloaded from here
         MVI   UREGH+2,X'D0'
         MVC   RGH13(4),T13
         MVC   UREGH+4(3),RGH13+1
         L     5,COBR            reload counter
         BCT   5,USHL            br. if more to generate
         B     FHN
FH5      CLI   FORHF+3,X'03'
         BNE   FH6
         MVI   FORHF+3,X'04'
         L     3,FFAD
         LA    3,2(3)
         ST    3,FFAD
         MVI   KEY4+3,X'02'
         B     FHN
FH6      CLI   FORHF+3,X'04'
         BNE   FH7
         CLI   FORHF+2,X'01'
         BNE   FHG
         MVC   RGH13(4),RT4
         MVI   FORHF+3,X'01'
         B     USTH
FH7      CLI   FORHF+3,X'05'
         BNE   FHN
         MVI   FORHF+3,X'06'
         CLI   FORHF+2,X'01'
         BNE   FHN
         MVC   FFAD(4),RT4
FHG      L     3,FFAD
         LA    3,8(3)
         ST    3,RGH13
         MVC   FFAD(4),RT4
         B     USTH
FHN      BCR   0,0
         CLI   COBF,X'01'
         BNE   COBAN
         CLC   ROUT4(4),ROUTAE       = @ ARL csect ?
         BNE   COBAR
         L     1,ACT
         LA    1,1(1)
         ST    1,ACT
         CLI   ACT+3,X'02'
         BNE   COBAR
         MVI   COBF+1,X'01'
         MVC   COBR+1(3),INST4
         MVC   COBRA(4),COBR
         L     5,COBR
         LA    5,4095(5)
         SR    4,4
         D     4,F100
         LA    5,1(5)            calc loop count
         MVC   COBA(4),ZZ4
         MVC   COBU+4(3),INST4
* start of a loop
RCOB     MVC   COBU+2(1),COBRG+3 pass reg. no. to USING
         MVC   RGH13+1(3),COBU+4
         ST    5,COBR            save loop counter
         MVI   COBU,X'01'        ind. insert call to USING
         MVI   COBU+7,X'01'
         ST    13,UREGH+8
         MVC   UREGH+2(1),COBU+2
         BAL   9,USSH            call routine to output USING card
         ST    13,COBU+8         put r13 where USING expects it
         L     14,US4            get @ USING csect
         CNOP  2,4
         BALR  14,14             call USING
COBU     DC    F'0'
         DC    F'0'
         DC    F'0'              our r13 reloaded from here
         SR    4,4
         IC    4,COBRG+3
         LA    4,16(4)
         STC   4,COBRG+3
         L     5,FFAD
         S     5,COBRA
         C     5,F100
         BNH   LCOB
         MVI   ACT+3,X'01'
         B     COBAN
LCOB     L     5,COBR            reload loop counter
         MVC   COBU+4(3),COBA+1
         L     4,COBA
         A     4,F100
         ST    4,COBA
         BCT   5,RCOB            loop if more to process
COBAR    CLI   COBF+1,X'01'
         BNE   COBAN
         CLI   COBF+3,X'01'
         BE    COBAC
         CLC   INST4+9(3),FFAD+1
         BL    COBAN
         CLC   RT4(2),CBLB        BALR 14,15 ?
         BNE   COBAN              br. if not
         CLI   RT4+2,X'04'
         BNE   COBAN
         MVI   KEY4+3,X'02'
         MVI   COBF+3,X'01'
         B     COBAN
COBAC    MVI   KEY4+3,X'00'
         MVI   COBF+3,X'00'
COBAN    BCR   0,0
         CLI   PLC+1,X'FF'        PL/I SUBSET
         BE    PLL                br to exit
         CLI   PLC+3,X'00'        YES
         BNE   PLI1
         CLC   INST4(2),PL1       BALR 13,0 ?
         BNE   PLI1
         MVI   PLC+3,X'01'
         B     PLL                go to exit
PLI1     CLI   PLC+3,X'01'
         BNE   PLI2
         CLC   INST4(2),PL2       ST 15,ZZZ15 ?
         BNE   MPFF
         MVI   PLC+3,X'02'
         B     PLL                go to exit
PLI2     CLI   PLC+3,X'02'
         BNE   PLI3
         CLC   INST4(2),PL3       STM 11,12,ZZZ12 ?
         BNE   MPFF
         MVI   PLC+3,X'03'
         B     PLL                go to exit
PLI3     CLI   PLC+3,X'03'
         BNE   PLI4
         CLC   INST4(2),PL4       LA 11,ZZZ12 ?
         BNE   MPFF
         L     3,PABF4            get @ PAB in PASS1
         L     4,APAP4            get @ PA in PASS1
         MVI   0(3),X'FF'         ind. card inserted
         MVC   64(5,3),USIN4      GENERATE USING
         MVC   70(8,3),73(4)      copy parms
         LA    5,80(4)
* start of loop to find last non blank char on card
USO2     CLI   0(5),C' '
         BNE   USV2               found non-blank char
         BCT   5,USN2             subtract 1 from r5
USN2     BCT   3,USO2
USV2     MVI   78(3),C','
         MVC   79(2,3),EAT        copy c'11'
         MVI   PLC+3,X'04'
         CLI   PAS45,X'00'        on 4th pass ?
         BE    MT5                br. if yes
         MVC   CD2+3(5),74(4)
         ST    13,CD2+8
         L     14,ACDN            CONVERT ADDRESS TO BCD
         CNOP  2,4
         BALR  14,14              call CDN
CD2      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT5      MVC   CR5(3),CD2+5
         MVC   CR5-4(4),RG11      copy USING parms
         ST    13,CR5+4           put our r13 where USING expects it
         L     14,FUSI            MAKE ENTRY IN USING TABLE
         CNOP  2,4
         BALR  14,14              call USING
         DC    F'0'
CR5      DC    F'0'
         DC    F'0'               our r13 reloaded from here
         B     PLL                go to exit
PLI4     CLI   PLC+3,X'04'
         BNE   PLI5
         CLC   INST4(2),PL5       L 12,ZZZ11 ?
         BNE   MPFF
         L     3,PABF4            get @ PAB in PASS1
         MVI   0(3),X'FF'         ind. card inserted
         MVC   64(5,3),USIN4      GENERATE USING
         CLI   PAS45,X'00'        on 4th pass ?
         BNE   NC14               br. if not
         MVC   CD14+3(5),ZZ14+1
         ST    13,CD14+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14              call CDN
CD14     DC    C'0000'
         DC    F'0'
         DC    F'0'
         MVC   BCD14(4),CD14+4
         ST    13,BCD14+8
         L     14,ABSC5           FIND BCD SYMBOL
         CNOP  2,4
         BALR  14,14              call BSC
BCD14    DC    F'0'
         DC    F'0'
         DC    F'0'
         CLI   BCD14,C' '
         BE    NC14
         MVC   ZZ14(8),BCD14
NC14     L     3,PABF4            get @ PAB in PASS1
         MVC   70(8,3),ZZ14       complete USING
         L     4,APAP4            get @ PA in PASS1
         LA    5,ZZ14+7
* start of loop
USO1     CLI   0(5),C')'
         BE    USV1
         CLI   0(5),C' '
         BE    ZB14
         LA    3,1(3)
         B     USV1
ZB14     BCT   5,USN1             subtract 1 from r5
USN1     BCT   3,USO1
USV1     MVI   77(3),C','
         MVC   78(2,3),EAT+2      copy c'12'
         CLI   PAS45,X'00'        on 4th pass ?
         BE    MT6                br. if yes
         MVC   CD3+3(5),74(4)
         ST    13,CD3+8
         L     14,ACDN            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14              call CDN
CD3      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT6      MVC   FZ14(4),CD3+4
         MVI   PLC+3,X'05'
         B     PLL                go to exit
PLI5     CLI   PLC+3,X'05'
         BNE   PLI6
         CLC   INST4(2),PL6       LA 4,ZZ1 ?
         BNE   PLL                go to exit if not
         L     3,APAP4            get @ PA in PASS1
         CLI   PAS45,X'00'        on 4th pass ?
         BE    MT7                br. if yes
         MVC   CD1+3(5),74(3)
         ST    13,CD1+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14              call CDN
CD1      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT7      MVC   FAD(4),CD1+4
         MVI   PLC+3,X'06'
         B     PLL                go to exit
MPFF     MVI   PLC+1,X'FF'
         B     PLL                go to exit
PLI6     CLI   PLC+3,X'06'
         BNE   PLI7
         CLC   INST4+9(3),FZ14+1  A(ZZZ14)
         BNE   PLI7
         L     3,APAP4            get @ PA in PASS1
         MVC   ZZ14(8),72(3)
         CLI   PAS45,X'00'        on 4th pass ?
         BE    MT8                br. if yes
         MVC   CD4+3(5),73(3)
         ST    13,CD4+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14              call CDN
CD4      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT8      MVC   CR4(3),CD4+5
         MVC   CR4-4(4),RG12      copy USING parms
         ST    13,CR4+4           put r13 where USING expects it
         L     14,FUSI            MAKE ENTRY IN USING TABLE
         CNOP  2,4
         BALR  14,14              call USING csect
         DC    F'0'
CR4      DC    F'0'
         DC    F'0'               our r13 reloaded from here
         MVI   PLC+3,X'07'
         B     PLL                go to exit
PLI7     CLI   PLC+3,X'07'
         BNE   PLI8               go to exit
         CLC   INST4+9(3),FAD+1   BALR 15,0
         BNL   PLL                go to exit
         L     4,FAD
         MVC   ICF+1(3),INST4+9
         L     4,ICF
         A     4,KEY4+4
         S     4,FAD
         BNP   PLL                go to exit
LRFT     L     14,ARFXT           get @ RFTXT in FTXTA
         ST    4,RFT
         CNOP  2,4
         BALR  14,14              call RFTXT
RFT      DC    F'0'
* RFTXT is a dummy routine, it just issues ABEND 60,DUMP
         MVI   PLC+3,X'08'
         L     4,LEN4
         S     4,RFT
         ST    4,LEN4
         L     3,APAP4            get @ PA in PASS1
         MVI   8(3),C' '
         MVC   9(80,3),8(3)
         CLC   LEN4(4),ZZ4
         BE    LFTXT4
         B     RF5
PLI8     BCR   0,0            duplicate exit ?
* exit from the program
PLL      BCR   0,0            exit program
         L     14,SPP14       reload @ parms
         MVC   0(24,14),KEY4  pass back ???
         B     36(14)         return
LFTXT4   L     14,SPP14       reload @ parms
         MVI   28(14),X'01'   set flag
         B     PLL            and exit
RF5      L     14,SPP14       reload @ parms
         MVI   28(14),X'02'   set flag
         B     PLL            and exit
* subroutine to output USING card
USSH     ST    9,AFF          save return address
         XC    REGU(3),REGU   clear work area
         MVC   REGU+3(1),UREGH+2   register number to print
         MVC   ASAV4(3),RGH13+1    address of using stmt
         MVI   ASAV4+3,X'60'  type of address
         ST    13,ASAV4+8     put r13 where SAVA expects it
         ST    13,REGU+4      put r13 where BCV expects it
         L     14,SAVZ4       get @ SAVA csect
         CNOP  2,4
         BALR  14,14          call SAVA
ASAV4    DC    F'0'           ) output label
         DC    F'0'           ) of this address
         DC    F'0'           r13 reloaded from here
         L     14,BCVF        get @ BCV csect
         CNOP  2,4
         BALR  14,14          call BCV
REGU     DC    F'0'           output reg number in decimal
         DC    F'0'           r13 reloaded from here
         CLI   PAS45,X'FF'    on 2nd pass ?
         BE    NPFH           br if yes
         L     14,PRH         get @ PRINT csect
         CNOP  2,4
         BALR  14,14          call PRINT
         DC    A(PA)          @ PA in PASS1
NPFH     L     4,APAP4        get @ PA in PASS1
         MVC   64(6,4),USIN4  copy c'USING'
         MVC   70(8,4),ASAV4  copy label to card
         LA    5,7            get max length - 1
         LA    3,77(4)        get @ end of label area
* loop to find end of label
CEF      CLI   0(3),C' '      ) find
         BNE   INSF           )  end
         BCTR  3,0            )   of
         BCT   5,CEF          )    label
INSF     MVI   1(3),C','      add ,
         MVC   2(2,3),REGU    add register number
         L     9,AFF          reload return address
         BR    9              and return to caller
*                     constant area
T13      DC    F'0'
SPP14    DC    F'0'           save callers r14
COBR     DC    F'0'
ACDN     DC    A(CDN)         @ CDN csect
ZZ4      DC    F'0'
ABSC5    DC    A(BSC)         @ BSC csect
US4      DC    A(USING)       @ USING csect
APAP4    DC    A(PA)          @ PA in PASS1 csect
SAVZ4    DC    A(SAVA)        @ SAVA csect
KEY4     DC    2F'0'          ) input
INST4    DC    3F'0'          )  parms
LEN4     DC    F'0'           )   put
RT4      DC    F'0'           )    here
ROUT4    DC    F'0'           )
CGOS1    DC    X'482058F0'    two 2 byte constants, LH  2, and L   15,
CGOS2    DC    X'05EF'        constant BALR 14,15
CBLB     DC    X'05EF'        constant BALR 14,15
CGOF     DC    F'0'
FAD      DC    F'0'
FSS1     DC    X'45E0F008'    constant BAL  14,8(15)
PL1      DC    X'05D0'        constant BALR 13,0
PL2      DC    X'50F0'        constant ST   15,
PL3      DC    X'90BC'        constant STM  11,12,
PL4      DC    X'41B0'        constant LA   11,
PL5      DC    X'58C0'        constant L    12,
PL6      DC    X'4140'        constant LA   4,
EAT      DC    C'1112'        two 2 byte constants
USIN4    DC    C'USING'       constant
ZZ14     DC    C'      '
         DC    C'  '
FSS2     DC    X'05F0'        constant, BALR 15,0
DROP4    DC    C'DROP'        constant
         DC    C'  15'
         DC    C'  '
FZ14     DC    F'0'
RG11     DC    X'0100B000'    constant
RG12     DC    X'0100C000'    constant
PABF4    DC    A(PAB)         @ PAB in PASS1
FUSI     DC    A(USING)       @ USING csect
RGH13    DC    F'0'
FHS1     DC    X'47F0F00C'    constant, B   12(15)
ICF      DC    F'0'
ARFXT    DC    A(RFTXT)       @ RFTXT in FTXTA csect
ROUTAE   DC    A(ARL)         @ ARL csect
BCVF     DC    A(BCV)         @ BCV csect
PRH      DC    A(PRINT)       @ PRINT csect
AFF      DC    F'0'           save return address from USSH routine
F100     DC    F'4096'        constant
COBRA    DC    F'0'
PLCB     DC    F'0'           entry point ref'ed by PASS4
PLC      DC    F'0'           ) all
COBRG    DC    F'48'          ) these
COBA     DC    F'0'           ) fields
ACT      DC    F'0'           ) set
COBF     DC    F'0'           ) by
FFAD     DC    F'0'           ) PASS4
FFC      DC    F'0'           )
FORHF    DC    F'0'           )
PAS45    DC    X'FF000000'    ) flag, 1st byte set to x'00' to
*                               indicate the 2nd use of PASS4
         END
