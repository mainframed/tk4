SI       TITLE 'SI '
***********************************************************************
*                                                                     *
*           format the parameters of a SI format instruction          *
*                                                                     *
*    eg  MVI   123(1),X'00'                                           *
*    or  LPSW  123(1)                                                 *
*                                                                     *
*  input addressed by R14:                                            *
*    +0  @ output buffer                                              *
*    +4  instruction format                                           *
*    +9  byte - immediate operand                                     *
*    +10 2 bytes passed to ADDR csect (1st adr call)                  *
*    +19 flag, passed to ADDR csect, x'41' if no immediate operand    *
*    +20 module returns to here                                       *
*                                                                     *
*  history:                                                           *
*    check instruction format for 2nd byte (fixes LPSW)  CFK jun 1999 *
*    handle format S instructions                        CFK jun 1999 *
*                                                                     *
***********************************************************************
         FMTPARMS                 copy parameter map
SI       CSECT
         USING FMTPARMS,14        tell assembler about parms
         BALR  13,0               set up base reg
         USING *,13               tell assembler
         EXTRN ADDR               csect
         EXTRN CXN                csect
         CLI   FMTFMT,FMTFS       S format instruction ?
         BE    SIET               branch if yes (no operands)
         ST    14,SI14            save @ parms
         MVC   SIG+15(1),19(14)   pass instr format to ADDR
         SR    2,2                )
         ST    2,SIG              ) clear ADDR parms
         ST    2,SIG+4            )
         MVC   SIG+2(2),10(14)    pass address to ADDR
         MVI   SIG+4,X'01'        flag type of address
         MVC   SIG+8(4),0(14)     pass @ output buffer
         MVC   CII(1),9(14)       byte to convert to bcd
         ST    13,CII+8           save base reg where CXN expects it
         L     14,CXNI            FIND IMMEDIATE
         CNOP  6,8                OPERAND
         BALR  14,14              call CXN csect
CII      DC    D'0'
         DC    F'0'               save R13
         L     14,ADDI            FIND ADDRESS
         ST    13,SIG+16          save base reg
         CNOP  6,8
         BALR  14,14              call ADDR csect
SIG      DC    D'0'
         DC    D'0'
         DC    F'0'               our r13
         L     14,SI14            reload @ parms
         L     4,0(14)            get @ output buffer
         L     3,SIG+12           load address length
         S     3,IONE             -1 for mvc
         EX    3,MVI              copy address to output buffer
         CLI   FMTFMT,FMTFSI1     got a second operand ?
         BE    SIET               br if not
         AR    4,3                allow for address
         MVC   71(3,4),CX         copy ",X'"
         MVC   74(2,4),CII        copy immed operand (hex)
         MVI   76(4),X'7D'        add final '
SIET     BAL   14,20(14)          return
MVI      MVC   70(1,4),SIG        EXecuted instruction
         DC    C'IMM='
ADDI     DC    A(ADDR)            @ ADDR csect
CXNI     DC    A(CXN)             @ CXN csect
IONE     DC    F'1'               constant 1
CX       DC    C',X'              constant ",X'"
         DC    X'7D40'            rest of constant, C''' '
SI14     DC    F'0'
         END
