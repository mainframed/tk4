PAS3     TITLE 'PASS3'
***********************************************************************
*                                                                     *
* called by PASS4                                                     *
*                                                                     *
***********************************************************************
PASS3    CSECT
         BALR  15,0                   establish base reg
         USING *,15                   tell assembler
         EXTRN COTR                   csect
         EXTRN AST                    in SAVA csect
         EXTRN NENT                   in ESD1 csect
         EXTRN NAST                   in SAVA csect
         EXTRN SAVA                   csect
         EXTRN PRINT                  csect
         EXTRN PA                     in PASS1 csect
         EXTRN READ                   in PRINT csect
         EXTRN PUNCH                  csect
         EXTRN PASS4                  csect
         EXTRN NAVBS                  in BSC csect
         EXTRN AST4                   in ART csect
         EXTRN CXN                    csect
         EXTRN BSC                    csect
         L     3,NENT3                get @ NENT in ESD1
         SR    2,2
         C     2,0(3)                 any ENTRY points read ?
         BE    PSLP3                  br if not
         LA    4,14(3)                else get at 1st ENTRY's address
         L     3,0(3)                 get number of entries
EYLP     STM   3,4,TP33               save registers
         MVC   SAVZ33(3),0(4)         pass ENTRY adr to SAVA
         MVI   SAVZ33+3,X'60'         ind. type of address ??
         L     14,SAVP3               get @ SAVA csect (save address)
         CNOP  2,4
         BALR  14,14                  call SAVA
SAVZ33   DC    F'0'                   input address
         DC    F'0'
         DC    F'0'
         LM    3,4,TP33               reload registers
         LA    4,13(4)                get @ next ENTRY
         BCT   3,EYLP                 br if more to process
PSLP3    L     3,LOOP                 get @ NAST in SAVA csect
         SR    2,2
         C     2,0(3)                 any addresses saved ?
         BE    LPS6                   br if not
         LR    4,3                    copy @ NAST in SAVA csect
         S     4,FOUR                 get @ NAST - 4
         MVI   0(4),X'FF'             set flag in SAVA
         MVC   NEL(4),0(3)            copy number of addresses
         SR    4,4
         ST    4,0(3)                 zero NAST
         LA    3,4(3)                 get @ first address
         ST    3,LOOP                 update @ NAST pointer
         ST    3,AB                   copy @ NAST+4
         ST    3,BB                   copy @ NAST+4
         L     4,NEL                  get number of addresses
         SLL   4,2                    mul by 4 (entry length)
         AR    3,4                    calc @ first free entry
         ST    3,LAB                  save @ first free entry
         ST    3,LB                   save @ first free entry
         S     3,LOOP+4               subtract 8
         ST    3,LOOP+8               save @ next to last entry
         LA    3,B                    get @ our table
         AR    3,4                    add len of entries
         ST    3,LA                   save result
         MVC   AA34(4),AB             copy @ first address
         MVC   AA5(4),AA33            copy @ our table, B
         LA    3,1
         C     3,NEL                  only 1 address ?
         BNL   A9                     br if yes
         LM    1,3,LOOP           load BXLE parms
A12      CLC   0(4,1),4(1)        ONE PASS BUBBLE SORT
         BNH   A13                br if not out of order
         MVC   TEP(4),0(1)        )
         MVC   0(4,1),4(1)        ) swap entries
         MVC   4(4,1),TEP         )
A13      BXLE  1,2,A12            br if more to process
         MVI   FL,X'00'
         LA    3,2
         C     3,NEL              only two addresses ?
         BE    A9                 br if yes
         LA    4,8
A8       MVC   LN2(4),AB          SORT-MERGE
         L     3,AA33             get @ our table, B
A7       L     1,LN2
         C     1,LAB
         BE    A9
         LR    6,1
         S     6,FOUR             subtract 4
         C     6,AB
         BL    A10
         CLC   0(4,6),0(1)
         BNH   A10
         MVI   FL,X'01'
A10      LR    2,1
         AR    2,4
         ST    2,LN1
         C     2,LAB
         BL    A2
         MVC   LN1(4),LAB
         MVC   LN2(4),LAB
         B     A5
A2       LR    5,2
         C     6,AB
         BL    A11
         CLC   0(4,6),0(5)
         BNH   A11
         MVI   FL,X'01'
A11      AR    5,4
         ST    5,LN2
         C     5,LAB
         BL    A3
         MVC   LN2(4),LAB
A3       CLC   0(4,1),0(2)
         BH    A1
         MVC   0(4,3),0(1)
         A     1,FOUR             add 4
         LA    3,4(3)
         C     1,LN1
         BE    A4
         B     A3
A1       MVC   0(4,3),0(2)
         A     2,FOUR             subtract 4
         LA    3,4(3)
         C     2,LN2
         BE    A5
         B     A3
A5       LR    2,1
         L     1,LN1
         B     A6
A4       L     1,LN2
A6       MVC   0(4,3),0(2)
         A     2,FOUR             subtract 4
         LA    3,4(3)
         CR    1,2
         BNE   A6
         MVC   AA5(4),AB
         MVC   AA34(4),AA33       copy @ our table, B
         B     A7
A9       CLI   FL,X'00'
         BNE   NP4
         LA    3,1
         C     3,NEL              more than 1 address ?
         BNL   LPS4               br if 1 or none
         L     3,NEL              else get number of addresses
         BCT   3,SNL1             subtract 1
SNL1     L     1,AA34             get @ first address
         L     2,AA34             get @ first address
         LA    4,1                start count of unique addresses
DLLP     CLC   0(3,1),4(2)        REMOVE DUPLICATE
         BE    NDL                ADDRESSES
         MVC   TEMS(4),4(2)       ) shuffle addresses down
         MVC   4(4,1),TEMS        ) if any duplicates removed
         LA    4,1(4)             bump unique adddress count
         LA    1,4(1)             get @ next output
NDL      LA    2,4(2)             get @ next input
         BCT   3,DLLP             loop until all scanned
         C     4,PS500            more than 500 ?
         BL    PSVV               br if LESS THAN 500 !!
         L     4,SPAP3            get @ print o/p area in PASS1
         MVC   0(24,4),LBEM       copy msg 'more than 500 labels'
         L     14,PPRT3           get @ PRINT csect
         CNOP  2,4
         BALR  14,14              call PRINT
SPAP3    DC    A(PA)              @ print o/p area in PASS1 csect
         L     4,PS500            assume only 500 labels
PSVV     ST    4,NEL              save number of unique addresses
LPS4     L     4,NEL              get number of addresses
         L     5,AA34             get @ first address
         L     6,AA5              get @ B
         L     3,SCOT             get @ COTR csect
         CLI   0(3),X'01'         'P' control card read ?
         BNE   LPS5               PUNCHED
PLP      MVC   CX3(4),0(5)        YES
         MVC   0(8,6),BL48
         LA    6,8(6)
         STM   4,6,PLP45          save registers
         L     3,CX3              get input address
         SRL   3,28               mask out high nybble
         LA    3,193(3)           make A-I
         STC   3,ADPN+9           put in output card
         L     14,CXN3            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14              call CXN
CX3      DC    F'0'
         DC    F'0'
         DC    F'0'
         MVC   ADPN+10(5),CX3+1   copy rest of address
         L     14,APUN            get @ PUNCH csect
         CNOP  2,4
         BALR  14,14              call PUNCH
         DC    A(ADPN)            @ output card
         LM    4,6,PLP45          reload registers
         LA    5,4(5)
         BCT   4,PLP
         LA    2,2
         MVC   ADPN+9(6),BEND     copy C'END   '
RPEN     L     14,APUN            get @ PUNCH csect
         CNOP  2,4
         BALR  14,14              call PUNCH
         DC    A(ADPN)            @ output card
         MVI   ADPN,C' '
         MVC   ADPN+1(79),ADPN
         BCT   2,RPEN
         B     LPS6
LPS5     L     3,SCOT             get @ COTR csect
         CLI   0(3),X'02'         'R' control card read ?
         BNE   LPS8               READ
         L     14,BREAD           YES - get @ READ in PRINT csect
         CNOP  2,4                READ
         BALR  14,14              call READ
         DC    A(ADPN)            @ buffer for card to go into
*  BCT loop starts here
LPS8     MVC   CXR3(4),0(5)       copy this address
         MVC   ABC+3(1),0(5)      copy this address
         STM   4,6,PLP45          save work registers
         L     14,CXN3            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14              call CXN
CXR3     DC    F'0'
         DC    F'0'
         DC    F'0'
         LM    4,6,PLP45          reload work registers
         LA    5,4(5)             get @ next address
         MVC   0(8,6),BL48        blank out
         L     3,SCOT             get @ COTR csect
         CLI   0(3),X'02'         'R' control card read ?
         BNE   LPS7               br. if not
         CLC   ADPN+10(5),CXR3+1
         BNE   LPS7
         L     3,ABC
         LA    3,193(3)
         STC   3,ABC+3
         CLC   ABC+3(1),ADPN+9
         BNE   LPS7
         MVC   0(8,6),ADPN        STORE SYMBOL IN
         LA    6,8(6)             TABLE
         L     14,BREAD           get @ READ in PRINT csect
         CNOP  2,4
         BALR  14,14              call READ
         DC    A(ADPN)            @ buffer card goes into
         CLC   ADPN+9(3),BEND     = c'END' ?
         BNE   BLPS8              br if not
         CLI   ADPN,X'02'
         BNE   BLPS8
         L     3,SCOT             get @ COTR csect
         MVI   0(3),X'00'         clear 'R' control card flag
BLPS8    BCT   4,LPS8             br if more addresses to process
         B     LPS6
LPS7     LA    6,8(6)             get @ next entry in B
         BCT   4,LPS8             loop if more addresses to process
LPS6     L     4,ASTA             get @ AST in SAVA csect
         MVC   0(4,4),4(4)
         L     4,NAV              get @ AST4 in ART csect
         MVC   0(4,4),AA34
         MVC   4(4,4),NEL         copy number of addresses
         MVC   8(4,4),AA5
         L     4,NAVS             get @ NAVBS in BSC csect
         MVC   0(4,4),AA34
         MVC   4(4,4),NEL         copy number of addresses
         MVC   8(4,4),AA5
         L     3,NENT3       SPECIAL PATCH TO PUT
         SR    2,2           ENTRIES IN SYMBOL
         C     2,0(3)        TABLE
         BE    LPS9
         LA    4,4(3)
         L     3,0(3)
EXLP     STM   3,4,TP33
         MVI   BSCL,X'00'
         MVC   BSCL+1(3),10(4)
         ST    13,BSCL+8          put our r13 where BSC expects it
         L     14,ABSC            get @ BSC csect (binary search)
         CNOP  2,4
         BALR  14,14              call BSC
BSCL     DC    3F'0'
         L     4,TP33+4
         MVC   0(8,3),0(4)   REG 3 IN BSC POINTS TO SYMBOL TABLE
         L     3,TP33        THIS IS SUPPOSED TO BE A TEMPORARY PATCH
         LA    4,13(4)       4/28/67
         BCT   3,EXLP        END OF PATCH
LPS9     L     3,APASS4               get @ PASS4 csect
         BR    3                      and go to it
NP4      MVI   FL,X'00'
         AR    4,4
         MVC   AB(4),AA33             copy @ our table, B
         MVC   AA33(4),BB
         MVC   BB(4),AB
         MVC   LAB(4),LA
         MVC   LA(4),LB
         MVC   LB(4),LAB
         B     A8                    br to sort-merge
         DC    C'IMM='
AA5      DC    F'0'
PLP45    DC    D'0'                   ) temp store for
         DC    F'0'                   )  reg 4,5,6
BREAD    DC    A(READ)                @ READ in PRINT csect
APASS4   DC    A(PASS4)               @ PASS4 csect
CXN3     DC    A(CXN)                 @ CXN csect
ABSC     DC    A(BSC)                 @ BSC csect
APUN     DC    A(PUNCH)               @ PUNCH csect
SAVP3    DC    A(SAVA)                @ SAVA csect
SCOT     DC    A(COTR)                @ COTR csect
ABC      DC    F'0'
PS500    DC    F'500'                 constant
PPRT3    DC    A(PRINT)               @ PRINT csect
NENT3    DC    A(NENT)                @ NENT in ESD1
TP33     DC    2F'0'                  temp store for reg. 3 and 4
ASTA     DC    A(AST)                 @ AST in SAVA csect
AA34     DC    F'0'
TEMS     DC    F'0'                   work space to swap addresses
NAV      DC    A(AST4)                @ AST4 in ART csect
NAVS     DC    A(NAVBS)               @ NAVBS in BSC csect
LOOP     DC    A(NAST)                @ NAST in SAVA csect
         DC    F'8'                   ) BXLE parms
         DC    F'0'                   )
AB       DC    F'0'
AA33     DC    A(B)
BB       DC    F'0'
FOUR     DC    F'4'                   constant
LA       DC    F'0'
LAB      DC    F'0'
LB       DC    F'0'
LN1      DC    F'0'
LN2      DC    F'0'
NEL      DC    F'0'
TEP      DC    F'0'
FL       DC    X'00'                  flag
LBEM     DC    C'**  MORE THAN 500 LABELS'
BL48     DC    C'        '            constant 8 blanks
BEND     DC    C'END     '
ADPN     DC    CL80' '                output card to be punched
B        DS    500D
         END
