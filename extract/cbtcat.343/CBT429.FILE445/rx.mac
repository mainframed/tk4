RX       TITLE 'RX '
***********************************************************************
*                                                                     *
*           Format parameters for a RX format instruction.            *
*                                                                     *
*    eg  LA  1,123(1,2)                                               *
*                                                                     *
*  input addressed by R14:                                            *
*    +0  @ output buffer                                              *
*    +4                                                               *
*    +8  instruction byte 1                                           *
*    +9  instruction byte 2                                           *
*    +10 2 bytes passed to ADDR csect (1st adr call)                  *
*    +19 instruction format from AXN                                  *
*    +20 module returns to here                                       *
*                                                                     *
***********************************************************************
RX       CSECT
         BALR  13,0               load base reg
         USING *,13               tell assembler
         EXTRN BCV                csect
         EXTRN ADDR               csect
         ST    14,RX14            save @ parms
         MVC   RADX+15(1),19(14)  pass instr format to ADDR
         SR    2,2                ) clear
         ST    2,RXG              )  BCV parms
         MVC   RADX+8(4),0(14)    pass @ output buffer to ADDR
         MVC   RXG+3(1),9(14)     pass reg number to BCV
         L     14,BCVX            CONVERT REGISTER
         ST    13,RXG+4           AND INCEX
         CNOP  2,4
         BALR  14,14              call BCV routine
RXG      DC    F'0'
         DC    F'0'               r13 reloaded from here
         L     14,RX14            reload @ parms
         SR    2,2                )
         ST    2,RADX             ) clear ADDR parms
         ST    2,RADX+4           )
         MVC   RADX+2(2),10(14)   pass address to ADDR
         MVC   RADX+6(2),RXG+2    pass index reg number to ADDR
         L     14,ADDX            FIND ADDRESS
         ST    13,RADX+16         pass r13 to ADDR
         CNOP  6,8
         BALR  14,14              call ADDR csect
RADX     DC    D'0'
         DC    D'0'
         DC    F'0'               our r13
         L     14,RX14            reload @ parms
         L     4,0(14)            get @ output buffer
         CLI   RXG,C'0'           reg 0-9 ?
         BNE   RX1                no
         MVC   70(1,4),RXG+1      yes - move 1 byte reg no.
         S     4,RONE             dec o/p buffer adr
         B     RX2                and continue
RX1      MVC   70(2,4),RXG        copy 2 byte reg no.
RX2      MVI   72(4),C','         add ,
         L     3,RADX+12          get address length
         S     3,RONE             -1 for mvc
         EX    3,MVR              copy address to o/p buffer
         BAL   14,20(14)          RETURN
MVR      MVC   73(1,4),RADX       EXecuted instruction
         DC    C'IMM='
ADDX     DC    A(ADDR)            @ ADDR csect
BCVX     DC    A(BCV)             @ BCV csect
RX14     DC    F'0'
RONE     DC    F'1'
         END
