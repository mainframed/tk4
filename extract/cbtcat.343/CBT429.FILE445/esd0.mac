ESD0     TITLE 'ESD0 '
***********************************************************************
*                                                                     *
*  process ESD type 0 entry, Section Description                      *
*                                                                     *
*  called by ESD                                                      *
*                                                                     *
*  parms @ r14:                                                       *
*    +0 - @ input card adjusted to make this ESD entry 1st            *
*    +4 - @ print area                                                *
*  @r11 - return address                                              *
*  @r2  - @ print area                                                *
*                                                                     *
*  This csect builds a table of the ESD entries for each csect in     *
*  the input deck.                                                    *
*                                                                     *
*  history:                                                           *
*    added section name to start message                  CFK may 1999*
*    added check for table overflow                       CFK jun 1999*
*    add ESD ID to message                                CFK jly 1999*
*    put whole ESD entry into table                       CFK jan 2000*
*                                                                     *
***********************************************************************
         ESDSDMAP                   map ESD table             CFK*JAN00
ESD0     CSECT
         BALR  13,0                 establish base reg
         USING *,13                 tell assembler
         ENTRY NPROG                reffed by PASS4
         EXTRN CXN                  csect
         EXTRN PRINT                csect
         ST    13,XL+8              pass callers R13 to CXN
         ST    14,T14               save R14
         STM   1,5,R15              save registers
         L     2,4(14)              get @ print area
         ST    2,PRL                pass @ print area to PRINT
         L     1,0(14)              get @ input
         L     3,NPROG              )
         LA    3,1(3)               ) increment nprog
         LA    4,MAXSECTS           get max number of sections FK*JUN99
         CR    3,4                  room for another          CFK*JUN99
         BNH   OK                   branch if OK              CFK*JUN99
         MVC   ERRESDID,29(1)       else copy section name    CFK*JUN99
         MVC   1(ERRMSGL,2),ERRMSG  copy error message        CFK*JUN99
         B     PRINTIT              and print it              CFK*JUN99
OK       DS    0H          we have room for another section   CFK*JUN99
         ST    3,NPROG              save new number of sections
         MH    3,=AL2(ESDENTLN)     multiply by entry length  CFK*JAN00
         A     3,APROGL             calc @ next entry
         USING ESDSDMAP,3           tell assembler            CFK*JAN00
         MVC   ESDENTRY,14(1)       copy ESD entry            CFK*JAN00
         MVC   BEG,16(1)            copy section name to message
         MVI   XL,X'00'             setup CXN input
         MVC   XL+1(3),25(1)        copy start address (bin)
         BAL   12,LCX               call CXN to make it printable
         MVC   ST(6),XL+2           copy start address to message
         L     1,R15                reload r1 from save area  CFK*JLY99
         XC    XL(2),XL             setup CXN input           CFK*JLY99
         MVC   XL+2(2),14(1)        copy ESD identifier       CFK*JLY99
         BAL   12,LCX               call CXN to make it printable JLY99
         MVC   ID,XL+4              copy ESDID to message     CFK*JLY99
         L     1,R15                reload r1 from save area
         MVI   XL,X'00'             setup CXN input
         MVC   XL+1(3),29(1)        copy section length
         BAL   12,LCX               call CXN to make it printable
         MVC   LE(6),XL+2           copy length to message
         L     2,PRL                get @ print area
         MVC   1(MSGLEN,2),MSG      copy start message
PRINTIT  DS    0H          print a message and exit
         L     14,EPRT0             get @ PRINT csect
         CNOP  2,4
         BALR  14,14                call PRINT
PRL      DC    F'0'                 @ print area
         LM    1,5,R15              reload registers
         L     14,T14               reload r14
         B     0(11)                and return
* subroutine to call CXN
LCX      L     14,ACXN              get @ CXN csect
         CNOP  2,4
         BALR  14,14                call CXN
XL       DC    3F'0'                CXN parms
         BR    12                   and return
         DC    C'IMM='
T14      DC    F'0'
R15      DC    5F'0'                save our work registers here
MSG      DC    C' '                 start of message          CFK*MAY99
BEG      DS    CL8                  section name              CFK*MAY99
         DC    C'  START '          start message
ST       DC    C'      '              start address
         DC    C'    '
         DC    C'LENGTH '
LE       DC    C'      '              length
         DC    C'   (HEX)  ID '                               CFK*JLY99
ID       DC    C'    '                SECTION id              CFK*JLY99
MSGLEN   EQU   *-MSG                                          CFK*JLY99
ERRMSG   DC    C'TWO MANY SECTIONS, '                         CFK*JUN99
ERRESDID DC    CL8' '               section name ignored      CFK*JUN99
         DC    C' IGNORED'                                    CFK*JUN99
ERRMSGL  EQU   *-ERRMSG             length of error message   CFK*JUN99
ACXN     DC    A(CXN)               @ cxn csext
EPRT0    DC    A(PRINT)             @ print csect
APROGL   DC    A(PROG1-ESDENTLN)    @ -1'th slot in table
NPROG    DC    F'0'                 entry point, number of csects read
PROG1    DS    15CL(ESDENTLN)       ESD table, mapped by ESDSDMAP JAN00
MAXSECTS EQU   (*-PROG1)/ESDENTLN   max no. of slots in table CFK*JUN99
         END
