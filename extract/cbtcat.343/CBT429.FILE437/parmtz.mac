./ ADD NAME=PARMTZ      01 00 98319 99319 160857 0158 0158 0000 IBMUSER
//IBMUSERA JOB T,PARMTZ,CLASS=A,NOTIFY=JJ,MSGCLASS=A
//ASMA90   EXEC PGM=ASMA90,PARM='DECK,NOOBJ'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSPUNCH DD  DSN=&&PUNCH,DISP=(NEW,PASS),UNIT=SYSALLDA,SPACE=(CYL,10)
 TITLE 'Retrieve active GMT offset'
***********************************************************************
*                                                                     *
* Justification:                                                      *
*   The TZ variable needs to be adjusted on a regular basis for       *
*   daylight saving.  under normal (non oe) circumstances this        *
*   is either done in SYS1.PARMLIB(CLOCKxx), or on a SYSPLEX timer.   *
*   This function will remove the need to update TZ separately        *
*   from CLOCKxx or the SYSPLEX timer                                 *
*                                                                     *
* Function:                                                           *
*   Retrieve the local date/time offset and present this in a manner  *
*   compatible with the TZ variable specifications.                   *
*                                                                     *
* Example:                                                            *
*   export TZ=CET`/usr/local/bin/parmtz`         (/etc/profile)       *
*                                                                     *
* Logic:                                                              *
*   Obtain workarea                                                   *
*   Retrieve offset from CVT in STCK format                           *
*   Convert to character format                                       *
*   Write resule to STDOUT                                            *
*   Release workarea                                                  *
*   Return to caller                                                  *
*                                                                     *
* Register usage                                                      *
*   R0     Not used                                                   *
*   R1-R2  Work                                                       *
*   R3     CVT                                                        *
*   R4     CVT extension                                              *
*   R5-R11 Not used                                                   *
*   R12    EPA and program base                                       *
*   R13    Save area and work area                                    *
*   R14    Return address                                             *
*   R15    Return code                                                *
*                                                                     *
* Attributes:                                                         *
*   AMODE(31),RMODE(ANY)                                              *
*                                                                     *
* History:                                                            *
*   Date       By              Comments                               *
*   15/11/98   Jan Jaeger      Initial version                        *
*                                                                     *
***********************************************************************
PARMTZ   RSECT ,
PARMTZ   AMODE 31
PARMTZ   RMODE ANY
         BAKR  R14,0
         BASR  R12,0
         USING *,R12
*
         STORAGE OBTAIN,               Obtain work and savearea        X
               LENGTH=WALEN
         LR    R13,R1
         MVC   4(4,R1),=C'F1SA'
         USING WORKAREA,R13
*
         L     R3,CVTPTR               Address CVT
         USING CVT,R3
         L     R4,CVTEXT2              and the extension that contains
         USING CVTXTNT2,R4               the timezone offset
*
         MVC   OUTPUT,FORMAT           Initialise output field
         MVC   OFFSETS,CVTLDTO
         TM    CVTLDTO,X'80'           Are we EAST or WEST
         BNO   ISPOS
         MVI   SIGN,C'+'               GMT is ahead of us (We are EAST)
         XC    OFFSETS,=8X'FF'         One's complement is good enough
ISPOS    DS    0H
*
         LM    R0,R1,OFFSETS           Add half a second to nullify
         AL    R1,HALFSEC                rounding errors
         BC    B'1100',NOOVF
         AL    R0,=F'1'
         ST    R0,OFFSETS
NOOVF    DS    0H
         ST    R1,OFFSETS+4
*
         STCKCONV STCKVAL=OFFSETS,     Convert STCK to HHMMSS          X
               CONVVAL=OFFSETP,                                        X
               TIMETYPE=DEC
         MVI   OFFSETO+3,X'0F'         Convert
         MVO   OFFSETO,OFFSETP(3)        packed
         UNPK  OFFSETC,OFFSETO             to
         OI    OFFSETC+5,C'0'                character
         MVC   HH,OFFSETC              Move
         MVC   MM,OFFSETC+2              into
         MVC   SS,OFFSETC+4                output field
*
         LA    R1,OUTPUT               Address of output field
         ST    R1,OUTAREA              Store for all to WRT
         CALL  BPX1WRT,                                                X
               (=A(STDOUT_FILENO),     File descriptor of STDOUT       X
               OUTAREA,                Buffer address                  X
               =A(0),                  Buffer alet                     X
               =A(L'OUTPUT),           Buffer length                   X
               RET,                    Bytes written or -1             X
               RC,                     Return code                     X
               RS),                    Reason code                     X
               VL,MF=(E,LCALL)
*
         L     R2,RC                   Save return code from BPX1WRT
         LR    R1,R13
         STORAGE RELEASE,                                              X
               LENGTH=WALEN,                                           X
               ADDR=(1)
*
         LR    R15,R2                  Pass return code back to caller
         PR    ,
*
HALFSEC  DC    XL4'7A120000'           Half a second
*
FORMAT   DC    X'604B4B7A4B4B7A4B4B15' +HH:MM:SS<NL>
*
         LTORG ,
*
WORKAREA DSECT
SAVEAREA DS    18F
OFFSETS  DS    1D             STCK format
OFFSETP  DS    XL16           X'HHMMSSthmiju0YYYYDDD'
OFFSETO  DS    XL4            X'0HHMMSSF'
OFFSETC  DS    CL6            C'HHMMSS'
LCALL    DS    7F             CALL BPX1WRT(....)
OUTAREA  DS    A              A(OUTPUT)
OUTPUT   DS    CL(L'FORMAT)
SIGN     EQU   OUTPUT,1,C'C'
HH       EQU   OUTPUT+1,2,C'C'
MM       EQU   OUTPUT+4,2,C'C'
SS       EQU   OUTPUT+7,2,C'C'
NL       EQU   OUTPUT+9,1,C'C'
RET      DS    F
RC       DS    F
RS       DS    F
WALEN    EQU   *-WORKAREA
*
         CVT   DSECT=YES
*
         BPXYCONS ,
         YREGS ,
*
         END   ,
//IEWL     EXEC PGM=HEWL,
//          PARM='AMODE=31,RMODE=ANY,CASE=MIXED,STORENX,MAP,XREF'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSLMOD  DD  PATH='/usr/local/bin'
//SYSLIB   DD  DSN=SYS1.CSSLIB,DISP=SHR
//SYSLIN   DD  DSN=&&PUNCH,DISP=(OLD,DELETE)
//         DD  *
 SETOPT PARM(PATHMODE(0,7,5,5))
 NAME ./parmtz
ü
