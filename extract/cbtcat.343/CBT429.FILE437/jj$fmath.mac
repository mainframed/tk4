./ ADD NAME=JJ$FMATH    01 00 94325 94325 165115 0149 0149 0000 T2JJ
IRXFMATH TITLE 'IRXFMATH - REXX LOCAL FUNCTION DIRECTORY'
IRXFMATH CSECT ,
IRXFMATH AMODE 31
IRXFMATH RMODE ANY
         ENTRY JJ$FMATH
         DC    C'IRXFMATH-&SYSDATE-&SYSTIME-J.JAEGER'
JJ$FMATH DS    0D
*
* DIRECTORY HEADER
*
HDR_B    DC    CL8'IRXFPACK'       IDENTIFY DIRECTORY
         DC    A(HDR_E-HDR_B)      LENGTH OF HEADER
         DC    A((ROW_L-ROW_S)/(ROW_E-ROW_S))   NUMBER OF ENTRIES
         DC    F'0'                RESERVED
         DC    A(ROW_E-ROW_S)      LENGTH OF EACH ENTRY
HDR_E    EQU   *
*
* FUNCTION ENTRIES
*
ROW_S    EQU   *                   FIRST ROW OF DIRECTORY
         DC    CL8'ACOS'           INVERSE (ARC) COSINE(RADIANS)
         DC    V(JJ$ACOS)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
ROW_E    EQU   *
*                                  NEXT ROW OF DIRECTORY
         DC    CL8'ASIN'           INVERSE (ARC) SINE(RADIANS)
         DC    V(JJ$ASIN)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'ATAN'           INVERSE (ARC) TANGENT(RADIANS)
         DC    V(JJ$ATAN)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'ATAND'          INVERSE TANGENT(DEGREES)
         DC    V(JJ$ATAND)         PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'ATANH'          INVERSE HYPERBOLIC TANGENT
         DC    V(JJ$ATANH)         PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'COS'            COSINE(RADIANS)
         DC    V(JJ$COS)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'COSD'           COSINE(DEGREES)
         DC    V(JJ$COSD)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'COSH'           HYPERBOLIC COSINE
         DC    V(JJ$COSH)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'ERF'            ERROR FUNCTION
         DC    V(JJ$ERF)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'ERFC'           ERROR FUNCTION COMPLEMENT
         DC    V(JJ$ERFC)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'EXP'            EXPONENTIAL BASE E
         DC    V(JJ$EXP)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'LOG'            NATURAL LOGARITHM
         DC    V(JJ$LOG)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'LOG10'          LOGARITHM BASE10
         DC    V(JJ$LOG10)         PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'LOG2'           LOGARITHM BASE2
         DC    V(JJ$LOG2)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'SIN'            SINE(RADIANS)
         DC    V(JJ$SIN)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'SIND'           SINE(DEGREES)
         DC    V(JJ$SIND)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'SINH'           HYPERBOLIC SINE
         DC    V(JJ$SINH)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'SQRT'           SQUARE ROOT
         DC    V(JJ$SQRT)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'TAN'            TANGENT(RADIANS)
         DC    V(JJ$TAN)           PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'TAND'           TANGENT(DEGREES)
         DC    V(JJ$TAND)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
         DC    CL8'TANH'           HYPERBOLIC TANGENT
         DC    V(JJ$TANH)          PRELOADED CODE
         DC    F'0'                RESERVED
         DC    CL8' '              MODULE NAME
         DC    CL8' '              SYS_DD FROM WHICH TO LOAD MODULE
*
ROW_L    EQU   *
         END   ,
