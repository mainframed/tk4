./ ADD NAME=IEFJFRQ     01 02 97217 97217 101829 0218 0206 0031 NLX1896
//NLX1896N JOB NL057100,'JAN JAEGER',NOTIFY=NLX1896
/*XEQ ZTMIST
//ASMA90   EXEC PGM=ASMA90,PARM='DECK,NOOBJ'
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//SYSPUNCH DD  DSN=&&PUNCH,DISP=(NEW,PASS),UNIT=SYSALLDA,SPACE=(CYL,10)
 TITLE 'IEFJFRQ - PROTECT SUBSYSTEM COMMANDS ISSUED THROUGH MGCR'
***********************************************************************
*                                                                     *
* JUSTIFICATION:                                                      *
*   MVS does not issue CMDAUTH's for commands that are being issued   *
*   through MGCR, but are processed by subsystems (such as DB2).      *
*   This exit will protect commands that use a command character.     *
*                                                                     *
* FUNCTION:                                                           *
*   This exit will issue a CMDAUTH for every possible command         *
*   character (such as !, @, # etc).                                  *
*                                                                     *
* LOGIC:                                                              *
*   Check if called in TCB mode, exit if SRB mode.                    *
*   Check function code, if not functioncode 10 then exit.            *
*   Lookup first character in table, if non-existent then exit.       *
*   Issue CMDAUTH to verify command access.                           *
*   If access ok then exit else set return code SSCMIMSG              *
*                                                                     *
* CONSTANTS:                                                          *
*   CommandCharacter -> profile conversion table                      *
*                                                                     *
* RACF:                                                               *
*   CLASS(OPERCMDS) PROFILE(CMDCHAR.*)                                *
*                                                                     *
* REGISTER USAGE:                                                     *
*   R0    WORK                                                        *
*   R1    PARMLIST                                                    *
*   R2-R7 WORK                                                        *
*   R8    MGCRPL                                                      *
*   R9    SSCM                                                        *
*   R10   SSOB                                                        *
*   R11   FRQP parmlist                                               *
*   R12   Base                                                        *
*   R13   FRQP DYNAREA                                                *
*   R14   RETURN ADDR                                                 *
*   R15   ENTRY POINT ADDRESS + RETURN CODE                           *
*                                                                     *
* ATTRIBUTES:                                                         *
*   AMODE(31),RMODE(ANY),REFR                                         *
*                                                                     *
* HISTORY:                                                            *
*   DATE       BY              COMMENTS                               *
*   23/01/96   JAN JAEGER      INITIAL VERSION                        *
*                                                                     *
***********************************************************************
IEFJFRQ  RSECT ,
IEFJFRQ  AMODE 31
IEFJFRQ  RMODE ANY
         B     SKIPHDR-*(,R15)         BRANCH AROUND EYE CATCHER
         DC    AL1(L'EYECATCH)
EYECATCH DC    C'IEFJFRQ-J.JAEGER-&SYSDATE.-&SYSTIME.'
SKIPHDR  DS    0H
         BAKR  R14,0                   Stack registers and set retaddr
         BASR  R12,0                   Set base register
         LA    R2,*-IEFJFRQ
         SLR   R12,R2
         USING IEFJFRQ,R12
         USING PSA,0
         USING FRQP_PLIST_AREA,R1
*
         L     R13,FRQP_DYNAREA@       Use WORKAREA
         MVC   4(4,R1),=CL4'F1SA'      Indicate linkage stack used
         USING WORKAREA,R13
*
         L     R11,FRQP_PLIST@
         USING FRQP,R11
         CLC   FRQPID,=A(FRQPCID)      Acronym check
         BNE   RETURNER
         CLC   FRQPVERS,=AL2(FRQPCVER) Version check
         BNE   RETURNER
         TM    FRQP_INPUT_FLAG1,FRQP_PRE_RQST  Pre-request
         BNO   RETURNOK
         L     R10,FRQP_SSOB@          SSOB pointer
         USING SSOB,R10
         CLC   SSOBID,=C'SSOB'         Acronym check
         BNE   RETURNER
         CLC   SSOBFUNC,=AL2(SSOBCMND) Function code 10
         BNE   RETURNOK
         L     R9,SSOBINDV             Pointer to extension
         USING SSCMBGN,R9
         CLC   SSCMACRN,=C'SSCM'       Acronym check
         BNE   RETURNER
         CLI   SSCMVRSN,SSCMVRID       Version Check
         BNE   RETURNER
         L     R8,SSCMBUFF             Pointer to MGCR parm list
         USING MGCRPL,R8
*
         CLC   =F'0',PSATOLD
         BE    RETURNOK                Cannot be in SRB mode
*
         SLR   R2,R2
         IC    R2,MGCRTEXT             Command character
         IC    R2,CHARTAB(R2)          Exists in special char table
         LTR   R2,R2
         BNZ   VRFYCMD                 Yes: verify access
*
* Return to caller
*
RETURNOK DS    0H
         LA    R15,FRQP_PROCEED
         PR    ,
*
* Invalid Parameter list
*
RETURNER DS    0H
         SDUMP HDR='IEFJFRQ INVALID PARAMETER LIST'
         LA    R15,FRQP_PROCEED
         PR    ,
*
VRFYCMD  DS    0H
         SLL   R2,4                    Multiply by 16
         LA    R2,NAMETAB-16(R2)       Use as index into suffix table
         MVC   PROFNAME(L'PREFIX),PREFIX
         MVC   PROFNAME+L'PREFIX(16),0(R2)
         MVC   PROFNAME+24,=CL15' '
*
         CMDAUTH ENTITY=PROFNAME,      Profile name                    X
               ATTR=READ,              ACCESS(READ)                    X
               CNTLBLK=(9),            SSCM base                       X
               CBLKTYPE=SSCM,                                          X
               MSGSUPP=YES,            BYPASS OW12696                  X
               MF=(E,CMDAUTH)
         LTR   R15,R15
         BZ    RETURNOK
*
RETURNNA DS    0H
         MVC   SSOBRETN,=A(SSCMIMSG)   Do not process command
         LA    R0,SSRTOK
         LA    R15,FRQP_STOP_EXIT_ROUTINE_CALLS
         PR    ,
*
CHARTAB  DC    256X'00'
         ORG   CHARTAB+X'4A'
         DC    AL1(1,2,3,4,5,6,7)          4A..50
         ORG   CHARTAB+X'5A'
         DC    AL1(8,9,10,11,12,13,14,15)  5A..61
         ORG   CHARTAB+X'6A'
         DC    AL1(16,17,18,19,20,21)      6A..6F
         ORG   CHARTAB+X'79'
         DC    AL1(22,23,24,25,26,27,28)   79..7F
         ORG   CHARTAB+X'A1'
         DC    AL1(29)                     A1
         ORG   CHARTAB+X'C0'
         DC    AL1(30)                     C0
         ORG   CHARTAB+X'D0'
         DC    AL1(31)                     D0
         ORG   CHARTAB+X'E0'
         DC    AL1(32)                     E0
         ORG   ,
*
NAMETAB  DC    CL16'CENT'                  >
         DC    CL16'PERIOD'                .
         DC    CL16'SMALLERTHEN'           <
         DC    CL16'BRACKETOPEN'           (
         DC    CL16'PLUS'                  +
         DC    CL16'VERTICALBARC'          |
         DC    CL16'AMPERSANT'             &
         DC    CL16'EXCLAMATION'           !
         DC    CL16'DOLLAR'                $
         DC    CL16'ASTERISK'              *
         DC    CL16'BRACKETCLOSE'          )
         DC    CL16'SEMICOLON'             ;
         DC    CL16'NOT'                   ^
         DC    CL16'MINUS'                 -
         DC    CL16'SLASH'                 /
         DC    CL16'VERTICALBARO'          ‡
         DC    CL16'COMMA'                 ,
         DC    CL16'PERCENT'               %
         DC    CL16'UNDERSCORE'            _
         DC    CL16'GREATERTHEN'           >
         DC    CL16'QUESTIONMARK'          ?
         DC    CL16'BACKQUOTE'             `
         DC    CL16'COLON'                 :
         DC    CL16'HASH'                  #
         DC    CL16'AT'                    @
         DC    CL16'QUOTE'                 '
         DC    CL16'EQUALS'                =
         DC    CL16'DOUBLEQUOTE'           "
         DC    CL16'TILDE'                 ~
         DC    CL16'PARENTOPEN'            {
         DC    CL16'PARENTCLOSE'           }
         DC    CL16'BACKSLASH'             \
*
PREFIX   DC    C'CMDCHAR.'
*
         LTORG ,
*
WORKAREA DSECT ,
SAVEAREA DS    18F                     Savearea must be first
         CMDAUTH MF=(L,CMDAUTH,NODSECT)
PROFNAME DS    CL39                    Profile name
WORKLEN  EQU   *-WORKAREA
         DS    XL(FRQP_DYNSIZE-WORKLEN)  Check workarea size
*
         IEZMGCR ,
         IEFJSSOB CM
         IEFJFRQP ,
         IHAPSA ,
         YREGS ,
*
         END   ,
//IEWL     EXEC PGM=HEWLKED,PARM='REFR,RENT,AMODE=31,RMODE=ANY'
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(CYL,10)
//*YSLMOD  DD  DSN=&&LOAD(TEMPNAME),DISP=(NEW,PASS),
//*         UNIT=SYSALLDA,SPACE=(TRK,(1,,1)),
//*         DCB=(SYS1.LINKLIB)
//SYSLMOD  DD  DSN=SYS1.MVS.LINKLIB(IEFJFRQ),DISP=SHR
//SYSLIN   DD  DSN=&&PUNCH,DISP=(OLD,DELETE)
