./ ADD NAME=#CUT     0102-89279-90152-1318-00033-00009-00000-$A1019
%TUTORIAL ---------------- CUT and PASTE Edit Macros ------------------
%Command ===>_ZCMD
%
%                           -----------------------
%                           × General Information ×
%                           -----------------------
%
+The%CUT+and%PASTE+edit macros allow you to copy or move data from one e
+session to another.
+
%CUT+copies or moves data from an edit session to a temporary ISPF table
%PASTE+copies or moves that data from the ISPF table into another edit s
+
+The edit sessions may be concurrent using split screen.
+Or data may be cut from an edit session and pasted during a later edit
+The temporary ISPF table is destroyed when you exit ISPF.
+
+The following topics are presented in sequence, or may be selected by n
%  1+- A simple example -- copy data from one screen to another
%  2+- An overview of CUT and PASTE
%  3+- The CUT edit macro -- copy/move data into a table
%  4+- The PASTE edit macro -- copy/move data from a table
%  5+- Nesting CUT and PASTE within another edit macro
)INIT
&ZUP = #CUT
)PROC
&ZSEL = TRANS(&ZCMD 1,CUTTUT1
                    2,CUTTUT2
                    3,CUTTUT3
                    4,CUTTUT4
                    5,CUTTUT5
                    *,?)
)END
./ ADD NAME=#PASTE   0102-89279-90152-1318-00033-00009-00000-$A1019
%TUTORIAL ---------------- CUT and PASTE Edit Macros ------------------
%Command ===>_ZCMD
%
%                           -----------------------
%                           × General Information ×
%                           -----------------------
%
+The%CUT+and%PASTE+edit macros allow you to copy or move data from one e
+session to another.
+
%CUT+copies or moves data from an edit session to a temporary ISPF table
%PASTE+copies or moves that data from the ISPF table into another edit s
+
+The edit sessions may be concurrent using split screen.
+Or data may be cut from an edit session and pasted during a later edit
+The temporary ISPF table is destroyed when you exit ISPF.
+
+The following topics are presented in sequence, or may be selected by n
%  1+- A simple example -- copy data from one screen to another
%  2+- An overview of CUT and PASTE
%  3+- The CUT edit macro -- copy/move data into a table
%  4+- The PASTE edit macro -- copy/move data from a table
%  5+- Nesting CUT and PASTE within another edit macro
)INIT
&ZUP = #CUT
)PROC
&ZSEL = TRANS(&ZCMD 1,CUTTUT1
                    2,CUTTUT2
                    3,CUTTUT3
                    4,CUTTUT4
                    5,CUTTUT5
                    *,?)
)END
./ ADD NAME=CUTPRMPT 0101-89275-90152-1318-00053-00029-00000-$A1019
%------------------------- CUT Edit Macro Parameters -------------------
%Command ===>_ZCMD
%
+Action%===>_CUT     +         (REPLACE, EXTEND, SHOW, DELETE, PROFILE,
+
+The following parameter is required for actions%REPLACE, EXTEND, SHOW,
+   Table name%===>_TABLE   +                   (alphanumeric, first cha
+
+The following optional parameters apply only to actions%REPLACE+and%EXT
+
+   Exclude status%===>_Z  +                    (X or NX)
+
+   Override column bounds:
+      Left column  %===>_Z  +                  (1 - 255)
+      Right column %===>_Z  +                  (1 - 255)
+
+   The following parameters may be used instead of line commands
+   (C, CC, Cn, or M, MM, Mn):
+      Range command%===>_Z   +                 (COPY or MOVE)
+      Top line     %===>_TCUT  +               (line label, e.g., .ZFIR
+      Bottom line  %===>_BCUT  +               (line label, e.g., .ZLAS
)INIT

 .ZVARS = '(STATUS LCUT RCUT CMDCUT)'
 .CURSOR = CUT
 .HELP = #CUT
 &CMDCUT = TRANS(TRUNC(&CMDCUT,1) C,COPY M,MOVE)

)PROC

 &CUT = TRANS(TRUNC(&CUT,1)
          R,REPLACE
          E,EXTEND
          S,SHOW
          D,DELETE
          P,PROFILE
          H,HELP
        '?','?'
          *,*)
 VER (&CUT,NONBLANK,LIST,REPLACE,EXTEND,SHOW,DELETE,PROFILE,HELP,'?')
 VER (&TABLE,NONBLANK,NAME)
 &STATUS = TRANS(TRUNC(&STATUS,1) N,NX X,X *,*)
 VER (&STATUS,NONBLANK,LIST,NX,X)
 VER (&LCUT,NUM) VER (&LCUT,RANGE,1,255)
 VER (&RCUT,NUM) VER (&RCUT,RANGE,1,255)
 IF  (&LCUT ^= &Z) VER (&RCUT,NONBLANK)
 IF  (&RCUT ^= &Z) VER (&LCUT,NONBLANK)
 &CMDCUT = TRUNC(&CMDCUT,1) VER (&CMDCUT,NONBLANK,LIST,C,M)
 &TEST = TRUNC(&TCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL  VER (&TEST
 &TEST = TRUNC(&BCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL  VER (&TEST
 IF  (&BCUT ^= &Z)  VER (&TCUT,NONBLANK)

)END
./ ADD NAME=CUTPROF  0101-89276-90152-1319-00056-00039-00000-$A1019
%------------------ CUT/PASTE Edit Macro Profile Parameters ------------
%Command ===>_ZCMD
%
+Default table name  %===>_TABLE   +            (alphanumeric, first cha
+
+CUT macro default parameters:
+   Action           %===>_CUT    +             (REPLACE, EXTEND, or PRO
+   Exclude status   %===>_STATUS     +         (X or NX)
+   Left column      %===>_Z  +                 (1 - 255)
+   Right column     %===>_Z  +                 (1 - 255)
+   Range command    %===>_Z   +                (COPY or MOVE)
+   Range top line   %===>_TCUT  +              (line label, e.g. .ZFIRS
+   Range bottom line%===>_BCUT  +              (line label, e.g. .ZLAST
+
+PASTE macro default parameters:
+   Action           %===>_PASTE +              (COPY, MOVE, or PROMPT)
+   At               %===>_AT +                 (1 - 255)
+   Left column      %===>_Z  +                 (1 - 255)
+   Right column     %===>_Z  +                 (1 - 255)
+   Range command    %===>_Z      +             (AFTER, BEFORE, or OVERL
+   Range top line   %===>_TPASTE+              (line label, e.g. .ZFIRS
+   Range bottom line%===>_BPASTE+              (line label, e.g. .ZLAST
)INIT

 .ZVARS = '(LCUT RCUT CMDCUT LPASTE RPASTE CMDPASTE)'
 .CURSOR = TABLE
 .HELP = #CUT
 &CMDCUT = TRANS(&CMDCUT C,COPY M,MOVE)
 &CMDPASTE = TRANS(&CMDPASTE A,AFTER B,BEFORE O,OVERLAY)

)PROC

 VER (&TABLE,NONBLANK,NAME)
 &CUT = TRANS(TRUNC(&CUT,1) R,REPLACE E,EXTEND P,PROMPT *,*)
 VER (&CUT,NONBLANK,LIST,REPLACE,EXTEND,PROMPT)
 &STATUS = TRANS(TRUNC(&STATUS,1) N,NX X,X *,*)
 VER (&STATUS,LIST,NX,X)
 VER (&LCUT,NUM) VER (&LCUT,RANGE,1,255)
 VER (&RCUT,NUM) VER (&RCUT,RANGE,1,255)
 &CMDCUT = TRANS(TRUNC(&CMDCUT,1) C,COPY M,MOVE *,*)
 VER (&CMDCUT,LIST,COPY,MOVE)
 &TEST = TRUNC(&TCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL VER (&TEST,
 &TEST = TRUNC(&BCUT,1) VER (&TEST,PICT,'.')  &TEST = .TRAIL VER (&TEST,
 &PASTE = TRANS(TRUNC(&PASTE,1) C,COPY M,MOVE P,PROMPT)
 VER (&PASTE,NONBLANK,LIST,COPY,MOVE,PROMPT)
 VER (&AT,NUM) VER (&AT,RANGE,1,255)
 VER (&LPASTE,NUM) VER (&LPASTE,RANGE,1,255)
 VER (&RPASTE,NUM) VER (&RPASTE,RANGE,1,255)
 VER (&CMDCUT,LIST,COPY,MOVE)
 &TEST = TRUNC(&TPASTE,1) VER (&TEST,PICT,'.') &TEST = .TRAIL VER (&TEST
 &TEST = TRUNC(&BPASTE,1) VER (&TEST,PICT,'.') &TEST = .TRAIL VER (&TEST

 IF  (&LCUT   > &RCUT  ) &TEMP = &LCUT   &LCUT   = &RCUT     &RCUT = &TE
 IF  (&LPASTE > &RPASTE) &TEMP = &LPASTE &LPASTE = &RPASTE &RPASTE = &TE

)END
./ ADD NAME=CUTTUT1  0100-89279-89283-1832-00024-00004-00000-$A1019
%TUTORIAL --------- CUT/PASTE Edit Macros: a Simple Example -----------
%Command ===>_ZCMD
%
+The following example shows two concurrent edit sessions using split sc
+Data will first be copied from the upper screen via the%CUT+macro,
+then copied into the lower screen via the%PASTE+macro.
+   --------------------------------------------------------------------
+   ×%COMMAND ===> cut
+   ×
+   × 000300
+   ×%CC+400 This block
+   × 000500            of three lines
+   ×%CC+600                           will be copied ...
+   × 000700
+   ×
+   ×%.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .
+   ×%COMMAND ===> paste
+   ×
+   × 000100
+   ×%A+0200 ... after this line.
+   × 000300
+   ×
+   --------------------------------------------------------------------
)END
./ ADD NAME=CUTTUT2  0100-89286-89290-1713-00026-00021-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
+The%CUT+and%PASTE+edit macros work together to transfer data from one e
+session to another. These sessions may be on different split screens. %
+similar to the edit primary commands CREATE and REPLACE, while%PASTE+is
+to COPY and MOVE.  However instead of using a data set,%CUT+and%PASTE+u
+shared temporary ISPF table.
+
%                               Parameter Syntax
+Parameter syntax is the same as other edit commands. All parameters are
+optional or have default values. Parameters may be abbreviated so long
+are unambiguous, and may be specified in lowercase.
+
%                              Copying and Moving
+Moving is the same as copying, except that the original information is
+after it is moved. The command%CUT REPLACE+copies/moves data to a table
+replacing any previous data (if any). %CUT EXTEND+leaves data already i
+table (if any) intact--it copies/moves at the end of the table. The com
%PASTE COPY+copies data from a table. The data may be pasted any number
+times. The command%PASTE MOVE+moves data, leaving the table empty.
+
+                          (Press ENTER to continue)
)PROC
 &ZCONT = CUTTUT2A
)END
./ ADD NAME=CUTTUT2A 0100-89286-89290-1723-00026-00023-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
%                  Specifying Line Location Via Line Commands
+
+There are two ways of specifying where lines of data are to be cut or p
+The first is via line commands. When you use the%CUT+command, you speci
+copying via the%C, CC,+or%Cn+line commands. You specify moving via the%
+or%Mn+commands.%C+and%M+specify a single line.%CC+and%MM+specify a firs
+last line.%Cn+and%Mn+specify a number of lines (e.g.,%C5+or%M12).+
+
+When you use the%PASTE+command, you specify the location to receive dat
+the%A, B, O, OO,+or%On+line commands.%A+specifies copying/moving after
+designated line. %B+specifies copying/moving before the designated line
%OO,+or%On+specify overlaying the designated line(s).
+
+
+
+
+
+
+
+                          (Press ENTER to continue)
)PROC
 &ZCONT = CUTTUT2B
)END
./ ADD NAME=CUTTUT2B 0100-90122-90122-1424-00028-00028-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
%                   Specifying Line Location Via Parameters
+
+The other way to specify where lines of data are to be cut or pasted is
+parameters on the%CUT+and%PASTE+commands. You may specify%CUT COPY rang
%CUT MOVE range. "Range"+is either one or two line labels (a label is a
+followed by a name in the line command area). The first line of data is
+automatically labeled .ZFIRST; the last line is automatically labeled .
+the line containing the cursor is automatically labeled .ZCSR. For exam
+might say%CUT REPLACE COPY .ZFIRST .ZCSR.+
+
+
+Similarly, you may specify%PASTE AFTER range, PASTE BEFORE range,+or
%PASTE OVERLAY range.+For example, you might say%PASTE COPY AFTER .ZLAST
%
+
+
+
+
+
+
+
+                          (Press ENTER to continue)
)PROC
 &ZCONT = CUTTUT2C
)END
./ ADD NAME=CUTTUT2C 0100-89286-89290-1710-00026-00020-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
%                           Specifying Column Bounds
+Rather than cutting and pasting entire lines, portions of lines may be
+specified. The default is to copy/move data within the current BOUNDS s
+The default BOUNDS setting is the entire line.  You can override your c
+BOUNDS via%CUT+parameters:%CUT col-1 col-2,+where%"Col-1"+and%"col-2"+a
+column numbers. For example,%CUT 1 72.%PASTE+without overlay honors the
+used by%CUT,+ignoring the current BOUNDS.
+
%                              PASTE With Overlay
+Overlay replaces portions of lines. The default is to overlay data with
+current BOUNDS columns. The original cut bounds are honored, and data o
+the current BOUNDS is truncated. You can override the current BOUNDS vi
+parameters:%PASTE col-1 col-2.+You can also override the original cut b
+two ways. One way is to place the cursor within the data at the column
+you wish the cut data to be placed. The other way is to use the%AT+para
+specify the desired column. For example%PASTE AT 17.
+
+
+
+                          (Press ENTER to continue)
)PROC
 &ZCONT = CUTTUT2D
)END
./ ADD NAME=CUTTUT2D 0100-89286-89290-1711-00026-00023-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
%                        Excluded and Nonexcluded Lines
+Normally all lines specified for%CUT+are copied/moved. However you can
+that only excluded or only nonexcluded lines will be copied/moved via t
%NX+parameters (i.e.,%CUT X+or%CUT NX).
+
%                               Multiple Tables
+You may use as many tables as you wish via the%TABLE+parameter. This al
+to have multiple pieces of cut data with easily remembered names.  The
+must be 1 to 8 alphanumeric characters, with the first character alphab
+The name must not be the same as any table in your table libraries. For
%CUT TABLE cutpaste+and%PASTE TABLE cutpaste.
+
%                            Displaying Table Data
+You may display the data in a table via%CUT SHOW.+The data will be disp
+edit NOTE lines, preceded by a MSG line containing the data set name, m
+name, and the bounds of the data.
+
+
+
+                          (Press ENTER to continue)
)PROC
 &ZCONT = CUTTUT2E
)END
./ ADD NAME=CUTTUT2E 0100-89286-89290-1712-00023-00017-00000-$A1019
%------------------- Overview of CUT and PASTE Edit Macros -------------
%Command ===>_ZCMD
%
%                             Deleting Table Data
+Data is automatically deleted via%CUT REPLACE+and%PASTE MOVE.+In additi
+may specify%CUT DELETE.+For example,%CUT DELETE TABLE example.
+
%                           Prompting for Parameters
+To make it easier to remember the parameters, you may specify%CUT PROMP
%PASTE PROMPT.+This will display a data entry panel on which you can ent
+parameters.
+
%                        Specifying Default Parameters
+You may specify your own default parameters by specifying%CUT PROFILE.+
+Will display a data entry panel on which you can enter parameters which
+remembered across ISPF sessions. The initial defaults are:
%                      CUT   REPLACE TABLE cutpaste COPY
%                      PASTE COPY    TABLE cutpaste AFTER
+
+
%                           Displaying this Tutorial
+This tutorial may be displayed via%CUT HELP, CUT ?, PASTE HELP,+or%PAST
)END
./ ADD NAME=CUTTUT3  0100-89279-89290-1714-00028-00026-00000-$A1019
%TUTORIAL ---------------------- CUT Edit Macro -----------------------
%Command ===>_ZCMD
%
%     CUT  <REPLACE >  <TABLE table>  <NX>  <col-1 col-2>  <COPY>  <rang
%          <EXTEND  >                 <X >                 <MOVE>
%          <SHOW    >
%          <DELETE  >
%          <PROMPT  >
%          <PROFILE >
%          <HELP × ?>
+
+All parameters are optional except that%REPLACE+and%EXTEND+require eith
%range+of lines or the following line commands:
+    %C, CC,+or%Cn+- to copy one or more lines to the table
+    %M, MM,+or%Mn+- to move one or more lines to the table
+
+Parameters may be specified in any order, and may be abbreviated.
+If a parameter is not specified, a default is taken from your CUT/PASTE
+profile (see the PROFILE parameter). The initial profile values are:
+     CUT REPLACE TABLE cutpaste COPY
+
+
+                   (Press ENTER for parameter definitions)
)PROC

 &ZCONT = CUTTUT3A

)END
./ ADD NAME=CUTTUT3A 0100-89279-89286-1702-00023-00019-00000-$A1019
%TUTORIAL ---------------- CUT Edit Macro Parameters ------------------
%Command ===>_ZCMD
%
%REPLACE    +Copy/move lines starting at the beginning of a table.
%EXTEND     +Copy/move lines starting at the end of a table.
%SHOW       +Display the contents of a table as edit note lines.
%DELETE     +Delete all lines from a table.
%PROMPT     +Display a parameter entry panel.
%PROFILE    +Set default parameter values.
%HELP or ?  +Display this tutorial.
%TABLE table+Name of a table to hold lines. You may have as many as you
+            but they must not duplicate names in your table library.
%NX         +Copy/move only nonexcluded lines.
%X          +Copy/move only excluded lines.
%col-1 col-2+Left and right column boundaries for copy/move (overrides B
%COPY       +Copy lines if specified by%range+into a table
+            (instead of%C, CC, Cn+line commands).
%MOVE       +Move lines if specified by%range+into a table
+            (instead of%M, MM, Mn+line commands).
%range      +One or two line labels which specify the top and bottom lin
+            copied/moved (e.g., .ZFIRST .ZLAST).  Used in conjunction w
+           %COPY+or%MOVE+parameter.
)END
./ ADD NAME=CUTTUT4  0100-89279-89290-1714-00028-00025-00000-$A1019
%TUTORIAL --------------------- PASTE Edit Macro ----------------------
%Command ===>_ZCMD
%
%   PASTE  <COPY    >  <TABLE table>  <AT at>  <col-1 col-2>  <AFTER  >
%          <MOVE    >                                         <BEFORE >
%          <PROMPT  >                                         <OVERLAY>
%          <HELP × ?>
+
+All parameters are optional except that%COPY+and%MOVE+require either a
%range+of lines or the following line commands:
+     %A           +- to put table lines after a specific line
+     %B           +- to put table lines before a specific line
+     %O, OO,+or%On+- to overlay lines with table lines
+
+Parameters may be specified in any order, and may be abbreviated.
+If a parameter is not specified, a default is taken from your CUT/PASTE
+profile (see the CUT PROFILE parameter). The initial profile values are
+      PASTE COPY TABLE cutpaste AFTER
+
+
+
+
+                   (Press ENTER for parameter definitions)
)PROC

 &ZCONT = CUTTUT4A

)END
./ ADD NAME=CUTTUT4A 0100-89282-89286-1705-00023-00017-00000-$A1019
%TUTORIAL --------------------- PASTE Edit Macro ----------------------
%Command ===>_ZCMD
%
%COPY       +Copy lines from a table.
%MOVE       +Move lines from a table.
%PROMPT     +Display a parameter entry panel.
%HELP or ?  +Display this tutorial.
%TABLE table+Name of table to hold lines. You may have as many as you li
+            they must not duplicate names in your table library.
%AT at      +Column number used instead of the left bound of the lines i
+            table.  As an alternative, place the cursor within the data
+            column to be used as the left bound.
%col-1 col-2+Left and right column boundaries for copy/move (overrides B
%AFTER      +Copy/move table lines after line specified by%range+
+            (instead of%A+line command).
%BEFORE     +Copy/move table lines before line specified by%range+
+            (instead of%B+line command).
%OVERLAY    +Overlay lines specified by%range+with lines copied/moved fr
+            (instead of%O, OO, On+line commands).
%range      +One or two line labels which specify the top and bottom lin
+            copied/moved (e.g., .ZFIRST .ZLAST).  Used in conjunction w
+           %AFTER, BEFORE,+or%OVERLAY+parameter.
)END
./ ADD NAME=CUTTUT5  0100-89300-89300-1652-00014-00014-00000-$A1019
%TUTORIAL ------ Nesting CUT and PASTE Within Other Edit Macros -------
%Command ===>_ZCMD
%
%CUT+and%PASTE+may be invoked from within an edit macro as follows:
+
%     ISREDIT CUT ... range
+
%     ISREDIT PASTE ... range
+
+Note that a%range+is required. In other words line commands are not use
+This is because%CUT+and%PASTE+do not specify ISREDIT PROCESS when they
+invoked as nested macros. Therefore the higher level macro(s) can proce
+own line commands without conflict with%CUT+and%PASTE.+
)END
./ ADD NAME=LOGHRECA 0100-90106-90106-1542-00008-00008-00000-$A1019
%------------------------- Recall of SYSLOG Data Set -------------------
%
%
+SYSLOG data set &DSNAME is being recalled by DFHSM.
+
+You may press your attention key to terminate waiting. The recall will
+proceed asynchronously.
)End
./ ADD NAME=LOGJCL   0100-90064-90078-1754-00041-00030-00000-$A1019
%-------------------------- Submit Batch LOGSCAN Job -------------------
%Command ===>_ZCMD
%
+Copies           %===>_Z  +                     (1-255)
+Sysout class     %===>_Z+                       (A-Z,0-9)
+Destination      %===>_LOGDEST +                (Overrides your default
+Output descriptor%===>_LOGOUT  +                (Duplex, Simplex, or Tu
+
+
+JOB Statement Information:
+
+  mask //jobname  JOB 'Name      MailDptGrp*DivAcct              lllfff
+ %===>_ZLLGJOB1
+  mask //             TIME=nnnn
+ %===>_ZLLGJOB2
+ %===>_ZLLGJOB3
+ %===>_ZLLGJOB4
)Init

 .ZVARS = '(LOGCOPY LOGCLASS)'
 .HELP = LOGTUT4
 &ZCMD = &Z
 If (&LOGCOPY = &Z) &LOGCOPY = 1
 If (&LOGCLASS = &Z) &LOGCLASS = A
 If (&LOGOUT = &Z) &LOGOUT = DUPLEX

)Proc

 Ver (&LOGCOPY,nonblank,num)
 Ver (&LOGCOPY,range,1,255)
 Ver (&LOGCLASS,nonblank,list,
      A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,
 Ver (&LOGDEST,name)
 &LOGOUT = trans(trunc(&LOGOUT,1) D,DUPLEX S,SIMPLEX T,TUMBLE *,*)
 Ver (&LOGOUT,list,DUPLEX,SIMPLE,TUMBLE)
 Ver (&ZLLGJOB1,nonblank)
 Ver (&ZLLGJOB2,nonblank)
 Vput (LOGCOPY,LOGCLASS,LOGDEST,LOGOUT,
       ZLLGJOB1,ZLLGJOB2,ZLLGJOB3,ZLLGJOB4) profile

)End
./ ADD NAME=LOGLIST  0100-90053-90106-1409-00027-00025-00000-$A1019
)Attr

 ! Type(input) intens(high) caps(on) pad('_') just(left)
 @ Type(output) intens(low) caps(off) just(asis)
 $ Type(text) intens(high) caps(off) color(turq) hilite(uscore)

)Body
%------------------- SYSLOG Console Message Logs for &CNTR -------------
%Command ===>_ZCMD                                            %Scroll ==
%Actions: B,BB=Browse L,LL=LOGSCAN R,RR=Recall; Press HELP (&HELP) for d
$Action+$Starting Date   $Time +    $Ending Date     $Time +    $Status
)Model
+ !Z +  @Z  @Z    @Z     @Z    +    @Z  @Z    @Z     @Z    +    @STATUS
)Init

 .ZVARS = '(ACTION SDAYNAME SDATE SJDATE STIME EDAYNAME EDATE EJDATE ETI
 .CURSOR = ACTION
 .HELP = LOGTUT0

 &ZCMD = &Z
 &HELP = pfk(help)

)PROC

 If (&ZTDSELS ^= 0000) ver (&ACTION,list,B,BB,L,LL,R,RR)

)End
./ ADD NAME=LOGPRINT 0100-90071-90074-1907-00040-00048-00000-$A1019
%---------------------------- Print LOGSCAN Output ---------------------
%Command ===>_ZCMD
%
+First line number%===>_LOGLINE1+
+Last line number %===>_LOGLINE2+
+Titles/page #    %===>_LOGTITLE                    (YES or NO)
+Page length      %===>_Z   +                       (6-4095)
+Copies           %===>_Z  +                        (1-255)
+Sysout class     %===>_Z+                          (A-Z,0-9)
+Destination      %===>_LOGDEST +                   (Overrides your defa
+Form definition  %===>_LOGFDEF +                   (Simplex, Duplex, or
)Init

 .ZVARS = '(LOGPAGE LOGCOPY LOGCLASS)'
 .HELP = LOGTUT4
 &ZCMD = &Z
 If (&LOGTITLE = &Z) &LOGTITLE = NO
 If (&LOGPAGE = &Z) &LOGPAGE = 60
 If (&LOGCOPY = &Z) &LOGCOPY = 1
 If (&LOGCLASS = &Z) &LOGCLASS = A
 If (&LOGFDEF = &Z) &LOGFDEF = DUPLEX

)Proc

 Ver (&LOGLINE1,num)
 Ver (&LOGLINE2,num)
 &LOGTITLE = TRANS(TRUNC(&LOGTITLE,1) Y,YES N,NO *,*)
 Ver (&LOGTITLE,nonblank,list,YES,NO)
 Ver (&LOGPAGE,nonblank,num)
 Ver (&LOGPAGE,range,6,4095)
 Ver (&LOGCOPY,nonblank,num)
 Ver (&LOGCOPY,range,1,255)
 Ver (&LOGCLASS,nonblank,list,
      A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,0,1,2,3,4,5,6,
 Ver (&LOGDEST,name)
 &LOGFDEF = trans(trunc(&LOGFDEF,1) S,SIMPLEX D,DUPLEX T,TUMBLE *,*)
 Ver (&LOGFDEF,list,DUPLEX,SIMPLE,TUMBLE)
 Vput (LOGTITLE,LOGPAGE,LOGCOPY,LOGCLASS,LOGDEST,LOGFDEF) profile

)End
./ ADD NAME=LOGSCAN  0100-90059-90081-1545-00048-00037-00000-$A1019
)Attr

 _ Type(input) caps(on)  intens(high)
 Ö Type(input) caps(off) intens(high)
 ^ Type(text)  skip(on)  intens(low)

)Body
%--------------- Scan SYSLOG Console Message Log(s) Via LOGSCAN --------
%Option ===>_ZCMD                                             %Scroll ==
%Options:  1=Foreground  2=Batch  3=Print  4=Browse  5=Clear
+
+Caps (ON or OFF)%===>_Z  ^                                     (Transla
+Starting time   %===>_Z   ^        Ending time %===>_Z   ^     (hhmm)
+
)Model
+DATA, OR, AND, NOT, /%===>_TYPE^   WORD, ABBR  %===>_PARM^
+Left margin          %===>_Z  ^    Right margin%===>_Z  ^      (1-126)
+Data%===>ÖDATA
+
)Init

 .ZVARS = '(CAPS TIME1 TIME2 MARGIN1 MARGIN2)'
 .CURSOR = ZCMD
 .HELP = LOGTUT4
 &ZCMD = &Z

)Proc

 Ver (&ZCMD,num)
 Ver (&ZCMD,range,1,5)
 If  (&ZCMD ^= &Z)
     Ver (&TIME1,pict,nnnn)
     Ver (&TIME2,pict,nnnn)
     &CAPS = trans(trunc(&CAPS,2) ON,ON OF,OFF *,*)
     Ver (&CAPS,nonblank,list,ON,OFF)
 If  (&ZTDSELS ^= 0000)
     &TYPE = trans(trunc(&TYPE,1) D,DATA O,OR A,AND N,NOT '/','/' *,*)
     If (&DATA ^= &Z) ver (&TYPE,nonblank)
     Ver (&TYPE,list,DATA,OR,AND,NOT,'/')
     &PARM = trans(trunc(&PARM,1) W,WORD A,ABBR *,*)
     Ver (&PARM,list,WORD,ABBR)
     Ver (&MARGIN1,num)
     Ver (&MARGIN1,range,1,126)
     Ver (&MARGIN2,num)
     Ver (&MARGIN2,range,1,126)
     If  (&TYPE = DATA,OR,AND,NOT)  ver (&DATA,NONBLANK)

)End
./ ADD NAME=LOGTUT0  0100-90072-90106-1418-00031-00001-00000-$A1019
%TUTORIAL --------------- SYSLOG Console Message Logs ---------------- T
%Command ===>_ZCMD
%
%SYSLOG+is a chronological log of operator console messages.
+31 days of SYSLOG data sets are maintained.
+
+The data sets may be browsed directly, or records with specific content
+selected with the LOGSCAN program.
+
+The following topics are presented in sequence, or may be selected by n
+
%1+List of available SYSLOG data sets
%2+Format and contents of SYSLOG records
%3+Browsing SYSLOG
%4+Selecting SYSLOG records via LOGSCAN
%5+Recalling migrated SYSLOG data sets
)Init

 &ZUP = LOGTUT0

)Proc

 &ZSEL = TRANS(&ZCMD 1,LOGTUT1
                     2,LOGTUT2
                     3,LOGTUT3
                     4,LOGTUT4
                     5,LOGTUT5
                     ' ',' '
                     *,?)

)End
./ ADD NAME=LOGTUT1  0100-90073-90074-1418-00029-00029-00000-$A1019
)Attr

 $ Type(text) intens(high) color(pink) hilite(uscore)

)Body
%TUTORIAL --------------- SYSLOG Console Message Logs ---------------- T
%Command ===>_ZCMD
%
+The initial SYSLOG panel lists all available SYSLOG data sets. Data set
+kept for 31 days, but there will generally be more than 31 data sets. Y
+scroll through this list and select one or more data sets.
+
+SYSLOG is initially a private sysout data set which belongs to the oper
+system. The WRITELOG (W) operator command closes the data set, queues i
+output, and opens a new one. An external writer then allocates a new on
+data set and copies the sysout data to it.
+
+The WRITELOG command is issued automatically on a periodic basis. It ma
+be issued manually at any time. In addition, a new SYSLOG data set is s
+whenever an IPL occurs.
+
$WARNING!+Occasionally multiple sysout data sets are queued. The externa
+will combine them all into a single data set, but they may be out of
+chronological order. This can also cause the date/time display to be wr
)Init

 &ZUP = LOGTUT0

)End
./ ADD NAME=LOGTUT2  0100-90074-90074-1945-00031-00030-00000-$A1019
%TUTORIAL ----------------- Format of SYSLOG Records ----------------- T
%Command ===>_ZCMD
%
+Most SYSLOG records are written by JES3 as follows:
+   ccc  nnnnnnnn yyddd hhmmsst ia <prefix> message
+
+Before JES3 is initialized SYSLOG records are written by MVS as follows
+   tcrrrrrrr sysname yyddd hh:mm:ss.th ident  msgflags  message
+   t                                                    message
+   t                                   lid              message
+
+Not all messages are logged:
+  . The CONSOLxx member of SYS1.PARMLIB controls which messages are log
+  . Logging may be prevented for individual messages via the MCSFLAG=NO
+    parameter on the WTO macro, and the MLG=NO parameter on the JES3 ME
+    macro.  These parameters are used primarily for security related me
+
+
+The following topics are presented in sequence, or may be selected by n
+
%1+JES3 SYSLOG format
%2+MVS SYSLOG format
)Init

 &ZUP = LOGTUT0

)Proc

 &ZSEL = TRANS(&ZCMD 1,LOGTUT2A 2,LOGTUT2B ' ',' ' *,?)

)End
./ ADD NAME=LOGTUT2A 0100-90073-90074-1428-00025-00028-00000-$A1019
)Body default($Ö_)
$TUTORIAL ----------------- Format of SYSLOG Records ----------------- T
$Command ===>_ZCMD
$
ÖJES3 SYSLOG records have the following format:
Ö   ccc  nnnnnnnn yyddd hhmmsst ia <prefix> message
$cccÖ      Console destination class
$nnnnnnnnÖ Console name
$yydddÖ    Julian date
$hhmmsstÖ  Time stamp: hours, minutes, seconds, tenths of a second
$iÖ        Warning indicator as follows:
Ö            $blankÖ   Normal output
Ö            $%Ö       Minimum track space situation
Ö            $=Ö       Marginal track space situation
Ö            $<Ö       Minimum JSAM buffer situation
$aÖ        Action prefix character as follows:
Ö            $blankÖ Normal message
Ö            $+Ö       JES3 command input
Ö            $-Ö       MVS command input
Ö            $*Ö       Operator action required
Ö            $&Ö       Suppressed message (does not appear on any consol
$prefixÖ   sysname R= jobname
Ö            $sysnameÖ Name of the main processor which issued the messa
Ö            $jobnameÖ The job name of the issuing program
)End
./ ADD NAME=LOGTUT2B 0100-90073-90074-1431-00025-00025-00000-$A1019
%1UTORIAL ----------------- Format of SYSLOG Records ----------------- T
%Command ===>_ZCMD
%
+MVS SYSLOG records have the following format:
+   tcrrrrrrr sysname yyddd hh:mm:ss.th ident  msgflags  message
+   t                                                    message
+   t                                   lid              message
+
%t+         Record type:
+             %D+ Data line of a multiple-line message
+             %E+ End line  or data-end line of a multiple-line message
+             %L+ Label line of a multiple-line message
+             %M+ First line of a multiple-line message
+             %N+ Single-line message that does not require a reply
+             %O+ Operator LOG command
+             %S+ Continuation of a single-line message
+             %W+ Single-line message that requires a reply
+             %X+ A log entry that is not from a LOG command or system m
+
+                           (Press ENTER to continue)
)Init

 &ZCONT = LOGTUT2C

)End
./ ADD NAME=LOGTUT2C 0100-90073-90074-1432-00028-00024-00000-$A1019
%1UTORIAL ----------------- Format of SYSLOG Records ----------------- T
%Command ===>_ZCMD
%
+MVS SYSLOG record format continued:
+   tcrrrrrrr sysname yyddd hh:mm:ss.th ident  msgflags  message
+   t                                                    message
+   t                                   lid              message
+
%c+            Indicates whether the line was generated because of a com
+                %C+     Command input
+                %R+     Command response
+                %I+     Command issued internally; job id is name of is
+                %blank+ Neither command input nor command response
+
%rrrrrrr+      Hexadecimal representation of the routing codes
+
%sysname+      System name from the IEASYSxx member of SYS1.PARMLIB
+
%yyddd+        Julian date
+
%hh:mm:ss.th+  Time stamp: hours, minutes, seconds, hundredths of a seco
+
+                           (Press ENTER to continue)
)Init

 &ZCONT = LOGTUT2D

)End
./ ADD NAME=LOGTUT2D 0100-90073-90074-1435-00022-00025-00000-$A1019
%1UTORIAL ----------------- Format of SYSLOG Records ----------------- T
%Command ===>_ZCMD
%
+MVS SYSLOG record format continued:
+   tcrrrrrrr sysname yyddd hh:mm:ss.th ident  msgflags  message
+   t                                                    message
+   t                                   lid              message
+
%ident+    If "c" is blank, then the%job identifier+
+          If "c" is C or R, then one of the following:
+            %nn+       A 2-digit console ID
+            %MASTER+   A message sent to the master console
+            %INTERNAL+ An internally generated command
+            %INSTREAM+ A command read from the input stream
+            %blanks+   The source or destination could not be determine
+
%lid+      Multiple-line ID for the second and succeeding lines of a
+          multiple-line message. In the first line, this field appears
+          the message text.
+
%msgflags+ &   indicates message was suppressed
)End
./ ADD NAME=LOGTUT3  0100-90074-90074-1226-00019-00019-00000-$A1019
%------------------------- Browsing SYSLOG Data Sets -------------------
%Command ===>_ZCMD
%
+One or more SYSLOG data sets may be browsed by specifying the%B+or%BB+l
+command(s) on the initial SYSLOG panel.
+
+If you specify a single data set, normal ISPF browse is used.
+
+More than one data set may be specified by multiple%B+commands or a pai
+commands.  When you specify multiple data sets they are concatenated.
+means, for example, that a FIND command can cross data set boundaries.
+Currently performance will be poor if you scroll backwards. The current
+technique requires closing the data sets, reopening them from the begin
+and reading forward to the desired record.
)Init

 &ZUP = LOGTUT0

)End
./ ADD NAME=LOGTUT4  0100-90074-90078-1800-00028-00013-00000-$A1019
%-------------------- Selecting SYSLOG Records Via LOGSCAN -------------
%Command ===>_ZCMD
%
+One or more data sets may be processed by LOGSCAN by specifying the%L+o
+line command(s) on the initial SYSLOG panel.
+
+When you specify multiple data sets they are concatenated.
+
%Options:+%1+Execute LOGSCAN in the foreground and browse the output
+         %2+Submit a batch job to execute LOGSCAN
+         %3+Print output previously generated by LOGSCAN (option 1)
+         %4+Browse output previously generated by LOGSCAN (option 1)
+         %5+Clear all LOGSCAN parameters to blank
+
%Caps:+   %ON+translates the data fields (see below) to uppercase.
+         %OFF+allows use of lowercase data fields.
+
%Starting time/Ending time:+Specifies the beginning and ending time peri
+         be selected. The time period may be specified alone, or may be
+         to limit the records scanned via data fields (see below).
+
+                           (Press ENTER to continue)
)Init

 &ZUP = LOGTUT0
 &ZCONT = LOGTUT4A

)End
./ ADD NAME=LOGTUT4A 0100-90074-90074-1433-00027-00027-00000-$A1019
%-------------------- Selecting SYSLOG Records Via LOGSCAN -------------
%Command ===>_ZCMD
%
+DATA, OR, AND, NOT, / ===>         WORD, ABBR   ===>
+Left margin           ===>         Right margin ===>           (1-126)
+Data ===>
+
%DATA:+select records with the specified "data".
%OR:+  select records specified via DATA%or+via another OR%or+with the
+      specified "data". DATA and OR are equivalent.
%AND:+ select records specified via DATA or OR%and+with the specified "d
%NOT:+ exclude records with the specified "data".
+Note: all DATAs and ORs are evaluated before, and must precede, all AND
+      NOTs.
%/:+   begins a new search argument. Each set of arguments between slash
+      applied separately. If a record is not selected under one argumen
+      may be selected under another argument.
+
%WORD:+requires the record "data" to be surrounded by blanks or punctuat
%ABBR:+requires the record "data" to be preceded by a blank or punctuati
+
+                           (Press ENTER to continue)
)Init

 &ZCONT = LOGTUT4B

)End
./ ADD NAME=LOGTUT4B 0100-90074-90074-1940-00019-00020-00000-$A1019
%-------------------- Selecting SYSLOG Records Via LOGSCAN -------------
%Command ===>_ZCMD
%
+DATA, OR, AND, NOT, / ===>         WORD, ABBR   ===>
+Left margin           ===>         Right margin ===>           (1-126)
+Data ===>
+
%Left margin:+ is the first character position to be scanned.
%Right margin:+is the last character position to be scanned. If omitted,
+              defaulted to the "left margin".
+Note: once specified, margins apply to all subsequent search parameters
+      respecified.
+
%Data:+specifies the data to be searched for. It should be surrounded by
+matching special characters.  If not, the data will be automatically su
+by single or double quote marks.
+
+You can create as many search parameters as you wish. Simply scroll dow
)End
./ ADD NAME=LOGTUT5  0100-90106-90106-1436-00020-00020-00000-$A1019
%-------------------- Recalling Migrated SYSLOG Data Sets --------------
%Command ===>_ZCMD
%
+SYSLOG data sets which have not been referenced for some time will be
+automatically migrated to tape.
+
+If you refer to one of these data sets via Browse or LOGSCAN it will be
+automatically recalled. However you will have to wait for the recall to
+complete. You may use your attention key to terminate the wait conditio
+recall will eventually complete).
+
+Alternatively, you may recall one or more migrated SYSLOG data sets
+asynchronously by specifying the%R+or%RR+line command(s) on the initial
+panel. The recall will complete without requiring you to wait. You will
+a message when the recall is complete.
)Init

 &ZUP = LOGTUT0

)End
./ ADD NAME=LOGWAIT  0100-90064-90072-1728-00013-00010-00000-$A1019
%------------------------ LOGSCAN Foreground Execution -----------------
%
%
+The LOGSCAN program is now scanning the selected SYSLOG console message
+
+
+You can reduce the CPU time required by specifying:
+    starting and ending time;
+    left and right margin.
+
+
+LOGSCAN always reads all records, even if time limits are specified.
)End
./ ADD NAME=PREP     0102-89202-89291-1212-00055-00012-00000-$A1019
%------------------------- Preprocessed Panel Utility ------------------
%Command ===>_ZCMD
%
+Panel input data set:
+   Data set name%===>_PREPINDS
+   Member       %===>_INMEMB  +         (Blank or pattern for member se
+                                         list, '*' for all members)
+   Volume serial%===>_Z     +           (If not cataloged)
+
+Panel output data set:
+   Data set name%===>_PREPOUDS
+   Member       %===>_OUTMEMB +         (Blank or member name)
+   Volume serial%===>_Z     +           (If not cataloged)
+
+Replace like-named members  %===>_RPO+  (YES or NO)
+
+Copy unpreprocessable panels%===>_CPY+  (YES or NO)
+
+Copy ISPF member statistics %===>_Z  +  (YES or NO)
+
+
+Note: messages documenting preprocessing will appear in your LOG (optio
)INIT

 .ZVARS   = '(PREPINVL PREPOUVL STATS)'

 &INMEMB  = &Z
 &OUTMEMB = &Z
 &INVOL   = &Z
 &OUTVOL  = &Z
 &PATTERN = NO

)PROC

 VER (&PREPINDS,NONBLANK,DSNAME)
 &TEST = TRUNC(&INMEMB,'*')
 IF  (&TEST ^= &INMEMB)  &PATTERN = YES
 VER (&TEST,NAME)
 VER (&PREPOUDS,NONBLANK,DSNAME)
 VER (&OUTMEMB,NAME)
 IF  (&OUTMEMB ^= &Z)  VER (&INMEMB,NONBLANK,NAME)
 &RPO = TRANS(TRUNC(&RPO,1) Y,YES N,NO *,*)
 VER (&RPO,NONBLANK,LIST,YES,NO)
 &CPY = TRANS(TRUNC(&CPY,1) Y,YES N,NO *,*)
 VER (&CPY,NONBLANK,LIST,YES,NO)
 &STATS = TRANS(TRUNC(&STATS,1) Y,YES N,NO *,*)
 VER (&STATS,NONBLANK,LIST,YES,NO)
 IF  (&PREPINVL = &Z) &INVOL = &Z
 ELSE                 &INVOL = ',INVOL(&PREPINVL)'
 IF  (&PREPOUVL = &Z) &OUTVOL = &Z
 ELSE                 &OUTVOL = ',OUTVOL(&PREPOUVL)'
 &REPLACE = TRANS(&RPO YES,REPLACE NO,NOREPL)
 VPUT (PREPINDS PREPINVL PREPOUDS PREPOUVL) PROFILE

)END
./ ADD NAME=PSTPRMPT 0101-89276-90152-1319-00044-00025-00000-$A1019
%------------------------ PASTE Edit Macro Parameters ------------------
%Command ===>_ZCMD
%
+Action%===>_PASTE   +                          (COPY, MOVE, HELP, ?)
+
+The following parameter is required for actions%COPY+and%MOVE:+
+   Table name  %===>_TABLE   +                 (alphanumeric, first cha
+
+The following optional parameters apply to actions%COPY+and%MOVE:+
+
+   Left table data bound%===>_AT +             (1 - 255)
+
+   Override column bounds:
+      Left column  %===>_Z  +                  (1 - 255)
+      Right column %===>_Z  +                  (1 - 255)
+
+   The following parameters may be used instead of line commands
+   (C, CC, Cn, or M, MM, Mn, or O, OO, On):
+      Range command%===>_Z      +              (COPY, MOVE, or OVERLAY)
+      Top line     %===>_TPASTE+               (line label, e.g., .ZFIR
+      Bottom line  %===>_BPASTE+               (line label, e.g., .ZLAS
)INIT

 .ZVARS = '(LPASTE RPASTE CMDPASTE)'
 .CURSOR = PASTE
 .HELP = #CUT
 &CMDPASTE = TRANS(TRUNC(&CMDPASTE,1) A,AFTER B,BEFORE O,OVERLAY)

)PROC

 &PASTE = TRANS(TRUNC(&PASTE,1) C,COPY M,MOVE H,HELP '?','?' *,*)
 VER (&PASTE,NONBLANK,LIST,COPY,MOVE,HELP,'?')
 VER (&TABLE,NONBLANK,NAME)
 VER (&AT,NUM) VER (&AT,RANGE,1,255)
 VER (&LPASTE,NUM) VER (&LPASTE,RANGE,1,255)
 VER (&RPASTE,NUM) VER (&RPASTE,RANGE,1,255)
 IF  (&LPASTE ^= &Z) VER (&RPASTE,NONBLANK)
 IF  (&RPASTE ^= &Z) VER (&LPASTE,NONBLANK)
 &CMDPASTE = TRUNC(&CMDPASTE,1) VER (&CMDPASTE,LIST,A,B,O)
 &TEST = TRUNC(&TPASTE,1) VER (&TEST,PICT,'.') &TEST = .TRAIL VER (&TEST
 &TEST = TRUNC(&BPASTE,1) VER (&TEST,PICT,'.') &TEST = .TRAIL VER (&TEST
 IF  (&BTASTE ^= &Z)  VER (&TPASTE,NONBLANK)

)END
