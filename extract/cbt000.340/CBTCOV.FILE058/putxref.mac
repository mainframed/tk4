******************************************************************  SBG
**********       PUTXREF - SMP FORFMID TOOL           ************  SBG
******************************************************************  SBG
*                                                                   SBG
*  PUTXREF PROGRAM - PRODUCE A REPORT SORTING ANY SYSMODS ON        SBG
*    A PUT TAPE OR APAR TAPE OR ANY SMPPTFIN FILE BY FMID.          SBG
*                                                                   SBG
******************************************************************  SBG
*                                                                   SBG
*  MODIFICATION RECORD - S. GOLOB - NEWSWEEK INC. - 04/26/88        SBG
*                                                                   SBG
*  MODIFIED APRIL 26, '88 BY SHMUEL GOLOB OF NEWSWEEK TO ONLY       SBG
*    LOOK FOR FMID KEYWORD IF YOU'RE LEGITIMATELY WITHIN A ++VER    SBG
*    STATEMENT.  LEFT ALL THE OTHER STUFF IN AS SAFETY CHECKS.      SBG
*    PLEASE INFORM ME AT NEWSWEEK (201) 316-2328 IF THIS VERSION    SBG
*    OF THE PROGRAM FAILS TO WORK.  (CODE CAN USE CLEANING UP.)     SBG
*                                                                   SBG
*  MODIFIED APRIL 25, '88 BY SHMUEL GOLOB OF NEWSWEEK TO FIX A FEW  SBG
*    BUGS.  THE PROGRAM CAN NOW DETECT IF THE FMID KEYWORD IS IN    SBG
*    A COMMENT AREA.  IT ALSO KNOWS THAT IN THE INSIDE OF JCLIN YOU SBG
*    CAN'T TEST FOR A COMMENT AREA, AND IT WON'T TEST FOR AN FMID   SBG
*    KEYWORD THERE EITHER.  ALSO FIXED BUG THAT 1ST CHARACTER       SBG
*    OF THE FMID WAS CHOPPED OFF IF THERE WERE AN ODD NUMBER OF     SBG
*    SPACES BETWEEN THE OPEN PAREN AFTER THE FMID KEYWORD, AND      SBG
*    THE FIRST NON-BLANK.  ANOTHER BUG WAS THAT THE FMID KEYWORD    SBG
*    IN A ++IF STATEMENT WAS IGNORED ONLY ON THE SAME LINE AS THE   SBG
*    ++IF, BUT NOT ON THE FOLLOWING LINES UNDER THE ++IF'S CONTROL. SBG
*                                                                   SBG
*  MODIFIED JUNE 26, 1986 BY SHMUEL GOLOB OF NEWSWEEK TO LOOK AT    SBG
*    ++APAR, ++USERMOD, AND ++FUNCTION IN ADDITION TO ++PTF.        SBG
*    ( I WANT TO KNOW WHAT FMIDS MY APARS AND USERMODS BELONG TO! ) SBG
*                                                                   SBG
*  THIS CODE WAS OBTAINED FROM FILE 118 OF THE CBT MVS MODS TAPE,   SBG
*    VERSION 260.  THE CODE THERE ONLY EXTRACTS PTFS.  I HAVE       SBG
*    MODIFIED IT IN THIS VERSION TO RECOGNIZE APARS, USERMODS, AND  SBG
*    FUNCTION SYSMODS ALSO.                                         SBG
*                                                                   SBG
*  MY PROGRAM, SMPFMUPV, ON FILE 428 OF THE CBT TAPE                SBG
*    CONVERTS THE OUTPUT OF THIS PROGRAM TO THE FORMAT:             SBG
*    ./  ADD  NAME=FMIDNAM                                          SBG
*          UZ11111  /*  FMID - FMIDNAM - FROM PUT TAPE - DATE  */   SBG
*                                                                   SBG
*    WHICH IS SUITABLE FOR INPUT TO AN SMP APPLY OR LIST            SBG
*    JOB.  THIS GETS A "FORFMID" EFFECT, GOOD ON ANY VERSION        SBG
*    OF SMP, BECAUSE IT'S ONLY DEPENDENT ON THE SMPPTFIN FILE,      SBG
*    AND NOT ON THE VERSION OF SMP WHICH WILL PROCESS THAT FILE.    SBG
*                                                                   SBG
*    PLEASE LOOK ON FILE 428 TO GET THE MOST MILEAGE FROM THIS      SBG
*    PROGRAM, AND FOR OTHER USEFUL SMP TOOLS.                       SBG
******************************************************************  SBG
PUTXREF  CSECT
         SAVE  (14,12),,*
         LR    R12,R15
         USING PUTXREF,R12         REG 12 IS BASE
         LA    R15,SAVE
         ST    R15,8(R13)
         ST    R13,SAVE+4
         LR    R13,R15
         OPEN  (SYSIN,INPUT)
         OPEN  (SORT,OUTPUT)
         SPACE 2
*---------------------------------------------------------------------*
*        THIS SECTION SEARCHES THE INPUT FOR ++PTF AND ++VER          *
*        STATEMENTS ON THE PUT TAPE. ALL OTHERS ARE REJECTED,         *
*        BUT A BAD PTF MIGHT CAUSE EXCESS SCANNING TO BE DONE.        *
*---------------------------------------------------------------------*
PX010    EQU   *
         BAL   R2,PXGET            LINK TO COMMON READ ROUTINE
         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?
         BNE   PX010               NO - BACK FOR ANOTHER
         NI    COMNTFLG,COMJCLOF   AT THIS POINT, EITHER BEGINNING  SBG
*                                  OR ENDING OF JCLIN. TURN FLAG OFFSBG
         NI    COMNTFLG,COMIFOF    NO LONGER IN CONTROL OF LAST     SBG
*                                  ++IF CARD.                       SBG
         NI    COMNTFLG,COMVEROF   NO LONGER IN CONTROL OF THE      SBG
*                                  ++VER CARD.                      SBG
         LA    R4,2(R4)            YES - POINT PAST THE ++
         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP
PX015    EQU   *
         CLI   0(R4),C' '          ANYTHING HERE YET?
         BNE   PX020               YES - GO CHECK IT OUT
         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION
         BCT   R3,PX015            LOOP DE LOOP
         BAL   R2,PXGET            WOOPS - OUT OF RECORD
         B     PX015               BACK AGAIN WITH ANOTHER RECORD
PX020    EQU   *
         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?
         BE    PX100               YES - GO GETPTF NUMBER
         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG
         BE    PX101               YES - GO GET APAR NUMBER         SBG
         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG
         BE    PX102               YES - GO GET USERMOD NUMBER      SBG
         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG
         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG
         CLC   0(3,R4),=C'VER'     NO - THEN IS IT A ++VER?
         BE    PX200               YES - THEN GO FIND THE FMID
         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG
         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG
         B     PX010               NO - THEN THIS IS NG - START OVER.
         EJECT
*---------------------------------------------------------------------*
*        THIS SECTION GETS THE PTF NUMBER FROM THE SMP CONTROL        *
*        CARDS. IT ASSUMES THIS TO BE THE FIRST NON-BLANK             *
*        CHARACTER AFTER THE FIRST LEFT PAREN AFTER                   *
*        THE KEYWORD 'PTF'                                            *
*---------------------------------------------------------------------*
PX100    EQU   *
         LA    R4,3(R4)            BUMP PAST PTF KEYWORD
         SH    R3,=H'3'            DECREMENT LOOP CONTROL
         C     R3,=F'0'            OUT OF RECORD?
         BH    PX110               NO - ON WITH THE SHOW
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE
         B     PX110               KEEP GOING                       SBG
PX101    EQU   *
         LA    R4,4(R4)            BUMP PAST APAR KEYWORD           SBG
         SH    R3,=H'4'            DECREMENT LOOP CONTROL           SBG
         C     R3,=F'0'            OUT OF RECORD?                   SBG
         BH    PX110               NO - ON WITH THE SHOW            SBG
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG
         B     PX110               KEEP GOING                       SBG
PX102    EQU   *
         LA    R4,7(R4)            BUMP PAST USERMOD KEYWORD        SBG
         SH    R3,=H'7'            DECREMENT LOOP CONTROL           SBG
         C     R3,=F'0'            OUT OF RECORD?                   SBG
         BH    PX110               NO - ON WITH THE SHOW            SBG
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG
         B     PX110               KEEP GOING                       SBG
PX103    EQU   *
         LA    R4,8(R4)            BUMP PAST FUNCTION KEYWORD       SBG
         SH    R3,=H'8'            DECREMENT LOOP CONTROL           SBG
         C     R3,=F'0'            OUT OF RECORD?                   SBG
         BH    PX110               NO - ON WITH THE SHOW            SBG
         BAL   R2,PXGET            YES - LINK TO COMMON GET ROUTINE SBG
PX110    EQU   *
         CLI   0(R4),C'('          THIS A LEFT PAREN?
         BE    PX150               YES - THEN GO SAVE PTF NUMBER
         LA    R4,1(R4)            NO - POINT TO NEXT POSITION
         BCT   R3,PX110            LOOP AGAIN
         BAL   R2,PXGET            OUT OF RECORD AGAIN
         B     PX110
PX150    EQU   *
         LA    R4,1(R4)            POINT PAST LEFT PAREN
         BCTR  R3,0                DECREMENT FOR THE PAREN
         CLI   0(R4),C' '          ANYTHING HERE?
         BNE   PX160               YES - THEN GO SAVE IT
         LA    R4,1(R4)            NO - POINT TO NEXT
         BCT   R3,PX150             AND LOOP (GETTING DIZZY YET?)
         BAL   R2,PXGET            OFF TO THE COMMONS AGAIN
         B     PX150
PX160    EQU   *
         MVC   OUTPTF(8),BLANKS    CLEAR AREA
         MVC   OUTPTF(7),0(R4)     SAVE PTF NUMBER
         B     PX010               BACK TO FIND THE FMID
PX170    DS    0H                  GET HERE ONLY IF ++JCLIN CARD    SBG
         OI    COMNTFLG,COMJCLON   FLAG THAT WE'RE IN JCLIN         SBG
         NI    COMNTFLG,COMENTOF   TURN OFF COMMENT FLAG INITIALLY  SBG
         B     PX010               NOT INTERESTED IN ANY OTHER FACT SBG
         EJECT
*---------------------------------------------------------------------*
*        THIS SECTION GETS THE FMID FROM THE ++VER STATEMENT. IT      *
*        ASSUMES THE FMID TO BE THE FIRST NON-BLANK CHARACTER         *
*        AFTER THE FIRST LEFT PAREN AFTER THE 'FMID' KEYWORD.         *
*        WHEN THIS IS LOCATED, A RECORD IS WRITTEN TO THE SORT FILE.  *
*---------------------------------------------------------------------*
PX200    OI    COMNTFLG,COMVERON   FLAG THAT WE ARE INSIDE OF ++VER SBG
         LA    R4,3(R4)            POINT PAST THE VER KEYWORD
         SH    R3,=H'3'            AND DECREMENT THE LOOP CONTROL
         C     R3,=F'0'            OUT OF RECORD?
         BH    PX210               NO - ON WITH THE SHOW
         BAL   R2,PXGET            YES - OFF AND GET ANOTHER
******************************************************************  SBG
*  AT THIS POINT IF YOU'RE LOOKING AT A FUNCTION SYSMOD, IT MAY     SBG
*   OR MAY NOT BE A DEPENDENT FMID.  IF IT ISN'T DEPENDENT AND SO   SBG
*   HAS NO FMID KEYWORD IN IT, WE WANT TO PREVENT THE PROGRAM       SBG
*   FROM LOOPING INTO THE NEXT SYSMOD ON THE FILE WHICH HAS AN      SBG
*   FMID KEYWORD.  WE THEREFORE TEST AT THIS POINT FOR ++PTF,ETC.   SBG
*   AND INITIALIZE PROCESSING IF FOUND.                             SBG
*                                                                   SBG
*  WE BREAK INTO THE LOOP AFTER THE PXGET, AND TEST FOR ++ ETC.     SBG
******************************************************************  SBG
PX210    EQU   *
         BAL   R2,COMMTEST         DETERMINE IF WE'RE IN A COMMENT  SBG
*-----------------------------------------------------------------  SBG
*  FIRST TEST IS FOR SAFETY ONLY. DON'T LOOK FOR FMID KEYWORD       SBG
*  INSIDE OF JCLIN OR ++IF OR IN A COMMENT AREA.                    SBG
*-----------------------------------------------------------------  SBG
         TM    COMNTFLG,COMENTON+COMIFON+COMJCLON                   SBG
*               ARE WE IN A COMMENT OR A ++IF OR INSIDE OF JCLIN ?  SBG
*               FMID KEYWORD IS NO GOOD IN ANY OF THESE 3 CASES.    SBG
         BNZ   PX210B              WE ARE. DON'T LOOK FOR FMID.     SBG
*-----------------------------------------------------------------  SBG
*  THIS IS THE LEGITIMATE TEST FOR FMID KEYWORD.  IT MUST LIE       SBG
*  WITHIN THE ++VER MODIFICATION CONTROL STATEMENT.                 SBG
*-----------------------------------------------------------------  SBG
         BAL   R2,VERTEST          TEST FOR PERIOD ENDING ++VER.    SBG
         TM    COMNTFLG,COMVERON   ARE WE STILL WITHIN ++VER STMT?  SBG
         BZ    PX210B              NO, FMID NOT LEGITIMATE KEYWORD  SBG
         CLC   0(4,R4),=C'FMID'    IS THIS THE FMID?
         BE    PX220               YES - THEN GO FIND THE ACTUAL FMID
PX210B   DS    0H                  JUST BUMP IF INVALID FMID KEYWD  SBG
         LA    R4,1(R4)            NO - POINT TO NEXT LITTLE DEVIL
         BCT   R3,PX210            WE'LL GET HIM YET
PX211    BAL   R2,PXGET            WOOPS OUT OF DATA                SBG
*************  BREAK IN *****************************************   SBG
         CLC   0(2,R4),=C'++'      IS THIS AN SMP CONTROL CARD?     SBG
         BNE   PX210               NO. STILL IN THIS SYSMOD.        SBG
******    WE HAVE A ++ CARD.  DO WE REINITIALIZE OR NOT?   ******   SBG
         NI    COMNTFLG,COMJCLOF   NO LONGER IN PREVIOUS ++JCLIN    SBG
         NI    COMNTFLG,COMIFOF    NO LONGER IN PREVIOUS ++IF       SBG
         NI    COMNTFLG,COMVEROF   NO LONGER IN PREVIOUS ++VER      SBG
         LA    R4,2(R4)            YES - POINT PAST THE ++          SBG
         SH    R3,=H'2'            DECREMENT LENGTH FOR LOOP        SBG
PX212    EQU   *                                                    SBG
         CLI   0(R4),C' '          ANYTHING HERE YET?               SBG
         BNE   PX215               YES - GO CHECK IT OUT            SBG
         LA    R4,1(R4)            NO - THEN POINT TO NEXT POSITION SBG
         BCT   R3,PX212            LOOP DE LOOP                     SBG
         BAL   R2,PXGET            END OF CARD IS ALL BLANKS        SBG
         B     PX212               BACK AGAIN WITH ANOTHER RECORD   SBG
PX215    EQU   *                                                    SBG
*   IF WE GET A HIT HERE, WE'RE IN THE NEXT SYSMOD, SO GO BACK.     SBG
         CLC   0(3,R4),=C'PTF'     IS THIS A ++PTF CARD?            SBG
         BE    PX100               YES - GO GET PTF NUMBER          SBG
         CLC   0(4,R4),=C'APAR'    IS THIS A ++APAR CARD?           SBG
         BE    PX101               YES - GO GET APAR NUMBER         SBG
         CLC   0(7,R4),=C'USERMOD' IS THIS A ++USERMOD CARD?        SBG
         BE    PX102               YES - GO GET USERMOD NUMBER      SBG
         CLC   0(8,R4),=C'FUNCTION' IS THIS A ++FUNCTION CARD?      SBG
         BE    PX103               YES - GO GET FUNCTION NUMBER     SBG
         CLC   0(5,R4),=C'JCLIN'   IS THIS A ++JCLIN CARD?          SBG
         BE    PX170               YES - GO SET JCLIN ON FLAG       SBG
         CLC   0(2,R4),=C'IF'      IS THIS A ++IF CARD?             SBG
         BE    PX217     YES - DON'T LOOK FOR FMID - YOU'RE FOOLED  SBG
         B     PX210               NO HIT, ++ IS IN THIS SYSMOD     SBG
PX217    OI    COMNTFLG,COMIFON    UNDER ++IF, FMID KEYWORD IS WRONGSBG
         B     PX211               LOOK FURTHER. THIS LINE HAS      SBG
*                                  NO VALID FMID KEYWORD.           SBG
*************  BREAK IN *****************************************   SBG
PX220    EQU   *
         LA    R4,4(R4)            POINT PAST THE KEYWORD
         SH    R3,=H'4'            DECREMENT THE LOOP CONTROL
         C     R3,=F'0'            OUT OF DATA?
         BH    PX230               NO - THEN FIND THE LITTLE DEVIL
         BAL   R2,PXGET            OUT OF DATA AGAIN
PX230    EQU   *
         BAL   R2,COMMTEST         DETERMINE IF PAREN IS IN COMMENT SBG
         TM    COMNTFLG,COMENTON   IF IT IS A COMMENT, IGNORE IT    SBG
         BO    PX230A              COMMENT. PAREN IS NOT REAL.      SBG
         CLI   0(R4),C'('          LEFT PAREN YET?
         BE    PX235               YES - ALMOST THERE               SBG
PX230A   DS    0H                  IF COMMENT, JUST KEEP BUMPING.   SBG
         LA    R4,1(R4)            POINT TO NEXT PLACE
         BCT   R3,PX230            LOOP DE LOOP
         BAL   R2,PXGET            WOOPS - THE SAFTEY VALVE AGAIN
         B     PX230               KEEP ON PLUGGIN.
PX235    LA    R4,1(,R4)           BUMP FOR INITIAL FMID NUMBER TRY SBG
         BCTR  R3,0                LOOP CONTROL FOR INITIAL TRY     SBG
         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER FMID(    SBG
         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG
         BO    PX235A              COMMENT. NOT LEGIT FMID NUMBER.  SBG
         CLI   0(R4),C' '          IS FIRST CHARACTER A BLANK ?     SBG
         BNE   PX250               NOPE. ASSUME WE'VE GOT THE FMID. SBG
PX235A   B     PX240               GO TO LOOP RTN TO FIND 1ST NONBLKSBG
PX240    EQU   *
         LA    R4,1(R4)            POINT PAST THE PAREN
         BAL   R2,COMMTEST         SEE IF COMMENT IS AFTER 'FMID( ' SBG
         TM    COMNTFLG,COMENTON   IF WE HAVE COMMENT, MUST GO ON   SBG
         BO    PX240A              COMMENT. NOT LEGIT FMID NUMBER.  SBG
******   BCTR  R3,0     ********   COMMENT OUT INSTRUCTION IN ERROR SBG
         CLI   0(R4),C' '          THEY DIDN'T SLIP IN ANOTHER BLANK?
         BNE   PX250               NOPE - THEN WE GOT IT ALL!!!!
******   LA    R4,1(R4) ********   COMMENT OUT INSTRUCTION IN ERROR SBG
PX240A   BCT   R3,PX240            LOOP ONE MORE TIME
         BAL   R2,PXGET            COMMONER AND COMMONER
         B     PX240
PX250    EQU   *
         MVC   OUTFMID,0(R4)       SAVE THE FMID NUMBER
         PUT   SORT,OUTPTF         WRITE THE RECORD
         B     PX010               BACK AND START AGAIN
               EJECT
*---------------------------------------------------------------------*
*        END OF DATA ROUTINE FOR THE PTF INPUT FILE  - DDNAME         *
*        IS INPUT.                                                    *
*---------------------------------------------------------------------*
EOF      EQU   *
         CLOSE SYSIN
         CLOSE SORT
         SPACE 3
*---------------------------------------------------------------------*
*        LINK TO SORT (THIS WAS DEVELOPED USING SYNCSORT)             *
*---------------------------------------------------------------------*
         LA    R1,SORTPARM         GET ADDRESS OF SORT PARMS
         LINK  EP=SORT             CALL THE SORT UTILITY
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   SORTERR             NO GOOD - ABEND
         EJECT
*---------------------------------------------------------------------*
*        THIS IS THE BEGINNING OF PHASE 2 - SETS UP THE               *
*        FILES, VERIFIES THE EXSISTANCE OF THE TITLES FILE, AND       *
*        WRITES THE FIRST SET OF HEADERS                              *
*---------------------------------------------------------------------*
         OPEN  (SORT,INPUT)
         OPEN  (TITLE,INPUT)
         OPEN  (PRINT,OUTPUT)
         LA    R5,TITLE            GET DCB ADDRESS
         TM    48(R5),X'10'        WAS OPEN SUCCESSFUL?
         BO    PX490               YES - BRANCH AROUND BAD OPEN
         OI    FLAG,NOTITLE        SHOW NOT TO READ THIS FILE
         WTO   'TITLE FILE OPEN UNSUCCESSFUL',ROUTCDE=(11),            X
               DESC=(7)
PX490    EQU   *
         BAL   R2,PXPUT            LINK TO HEADER PUT ROUTINE
         EJECT
*---------------------------------------------------------------------*
*        THIS SECTION FOOLS AROUND WITH THE SPECIAL HANDLING FOR      *
*        THE 1ST RECORD.                                              *
*---------------------------------------------------------------------*
         GET   SORT,OUTPTF         1ST READ ONLY
         MVC   HOLD,OUTFMID        SAVE FMID FOR COMPARISON
         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE
         LA    R5,OUTAREA+11       POINT TO FIRST PTF AREA
         LA    R6,12               SET UP LOOP FOR BCT
         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?
         BO    PX510               NO - WOOPS - FORGOT TO SAY
*                                         MOTHER MAY I
         LA    R7,PX499            SAVE RETURN POINT FOR EODAD
PX495    EQU   *
         GET   TITLE,INAREA        GET A TITLE RECORD
         CLC   INAREA+2(7),HOLD    DO FMID'S AGREE?
         BL    PX495               NO - LOWER, GO READ ANOTHER
         BH    PX499               NO - HIGHER, ERGO NO BRANCH, SKIP
         MVC   OUTAREA+21(34),INAREA+11 EQUAL - GET TITLE
PX499    EQU   *
         PUT   PRINT,LINE          WRITE HEADER
         MVI   OUTAREA+0,C' '      CLEAR LINE
         MVC   OUTAREA+1(131),OUTAREA+0
         AP    LINECNT,ONE         UPDATE LINE COUNT
*                       NOTE - PAGE OVERFLOW NOT POSSIBLE HERE
         B     PX510               BRANCH AROUND NORMAL READ
         EJECT
*---------------------------------------------------------------------*
*        THIS IS THE MAINLINE ROUTINE TO PRINT OUT THE CROSS          *
*        REFERENCE. IT READS THE SORTED INPUT, CHECKS TO SEE          *
*        IF IT IS THE SAME AS THE PREVIOUS FMID, AND BRANCHES         *
*        ACCORDINGLY.                                                 *
*---------------------------------------------------------------------*
PX500    EQU   *
         GET   SORT,OUTPTF         NORMAL READ
PX510    EQU   *
         CLC   HOLD,OUTFMID        SAME AS LAST RECORD?
         BNE   PX570               NO - GO WRITE PARTIAL LINE
PX520    EQU   *
         MVC   0(7,R5),OUTPTF      MOVE IN PTF NUMBER
         LA    R5,10(R5)           BUMP TO NEXT PRINT POSITION
         BCT   R6,PX500            LOOP IN HERE TOO.
         PUT   PRINT,LINE          END OF LOOP, WRITE LINE
         MVI   OUTAREA+0,C' '      BLANK OUT THE LINE
         MVC   OUTAREA+1(131),OUTAREA CLEAR DATA LINE
         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING
         LA    R6,12               RESET LOOP CONTROL
         AP    LINECNT,ONE         ADD ONE TO CURRENT NUMBER OF LINES
         CP    LINECNT,=P'60'      ENOUGH LINES FOR BREAK?
         BL    PX500               NO - BACK TO TOP
         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE
         B     PX500               BACK TO TOP
         SPACE 2
PX570    EQU   *
         PUT   PRINT,LINE          WRITE SHORT LINE
         PUT   PRINT,BLANK         WRITE SPACER
         AP    LINECNT,THREE       ADD IN LINE COUNT
         CP    LINECNT,=P'59'      ALMOST AT END OF PAGE?
         BL    PX572               NO - BRANCH AROUND HDR ROUTINE
         BAL   R2,PXPUT            OFF TO SEE THE WIZARD
PX572    EQU   *
         LA    R5,11(R5)           RESET POINTER
         LA    R6,12               RESET BCT LOOP
         MVI   OUTAREA+0,C' '      CLEAR OUTPUT
         MVC   OUTAREA+1(131),OUTAREA
         MVC   OUTAREA+1(7),OUTFMID SETUP 1ST LINE
         MVC   HOLD,OUTFMID        SAVE NEW FMID
         TM    FLAG,NOTITLE        CAN WE READ THE TITLE FILE?
         BO    PX580               NO - FORGET THIS NONSENSE
         LA    R7,PX580            YES - GET RETURN ADDRESS FOR EODAD
         CLC   INAREA+2(7),HOLD    CURRENT ONE RIGHT?
         BL    PX575               NO - LOW, GO GET NEXT ONE
         BH    PX580               NO - HIGH, STILL NOT RIGHT
         MVC   OUTAREA+21(34),INAREA+11   YES - THIS IS RIGHT ONE
         B     PX580               GO DIRECTLY TO PUT
PX575    EQU   *
         GET   TITLE,INAREA        READ THE FILE
         CLC   INAREA+2(7),HOLD    THIS THE RIGHT GUY?
         BL    PX575               NO - LOW, GO BACK AND READ AGAIN
         BH    PX580               NO - HIGH, NONE FOR THIS ONEADDRESS
         MVC   OUTAREA+21(34),INAREA+11  MOVE IN TITLE
PX580    EQU   *
         PUT   PRINT,LINE          WITE DATA
         MVI   OUTAREA+0,C' '      CLEAR OUTPUT
         MVC   OUTAREA+1(131),OUTAREA
         LA    R5,OUTAREA+11       POINT BACK TO BEGINNING
         LA    R6,12               RESET LOOP CONTROL
         AP    LINECNT,ONE         ADD TO CURRENT LINE COUNTER
         CP    LINECNT,=P'60'      ENOUGH FOR A NEW PAGE?
         BL    PX520               NO - BACK TO PROCESS NEW FMID
         BAL   R2,PXPUT            YES - LINK TO HEADER PUT ROUTINE
         B     PX520               BACK AND CONTINUE ON
         EJECT
*---------------------------------------------------------------------*
*        EODAD ROUTINE FOR THE TITLE FILE. SINCE THIS CAN BE ENTERED  *
*        FROM TWO PLACES, EACH SETS A RETURN ADDRESS, SO THAT         *
*        PROCESSING CAN CONTINUE AFTER EOF IS REACHED.                *
*---------------------------------------------------------------------*
PX590    EQU   *
         OI    FLAG,NOTITLE        SHOW NO MORE READS TO BE DONE
         BR    R7                  RETURN VIA PRESET REG 7
         SPACE 3
*---------------------------------------------------------------------*
*        EODAD FOR THE SORT FILE OUTPUT. WHEN YOU GET HERE ITS OVER.  *
*---------------------------------------------------------------------*
PX599    EQU   *
         PUT   PRINT,LINE          END OF LOOP, WRITE LINE
         CLOSE SORT
         CLOSE PRINT
         L     R13,SAVE+4
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
*---------------------------------------------------------------------*
*        THIS IS THE COMMON READ ROUTINE FOR THE INPUT PTF FILE       *
*        USED DURING PHASE ONE PROCESSING.                            *
*---------------------------------------------------------------------*
PXGET    EQU   *                   COMMON READ ROUTINE FOR SYSIN
         GET   SYSIN,INAREA
         LA    R3,72               SET UP REG 3 FOR BCT
         LA    R4,INAREA           POINT TO DATA
         BR    R2                  RETURN TO CALLER
         SPACE 2
*-------------------------------------------------------------------SBG
*        ROUTINE TO DETERMINE IF WE ARE INSIDE OF AN SMP COMMENT.   SBG
*        IF WE ARE, COMNTFLG IS ON AND IF */ OCCURS, TURN IT OFF.   SBG
*-------------------------------------------------------------------SBG
COMMTEST TM    COMNTFLG,COMJCLON   IS THIS INSIDE OF JCLIN?         SBG
         BO    COMMOFF             YES. /* CAN BE PART OF JCL.      SBG
         TM    COMNTFLG,COMENTON   ARE WE ALREADY INSIDE A COMMENT? SBG
         BO    CENDTEST            YES. SEE IF WE'RE ENDING IT NOW. SBG
         CLC   0(2,R4),COMSTART    COMPARE FOR START OF A COMMENT   SBG
         BNE   CENDTEST            NO. TEST FOR END OF COMMENT      SBG
         OI    COMNTFLG,COMENTON   FORCE FLAG ON. WE'RE IN COMMENT  SBG
         B     COMTEND             WE TURNED IT ON.  ENOUGH --      SBG
CENDTEST TM    COMNTFLG,COMENTON   ARE WE ALREADY IN A COMMENT?     SBG
         BZ    COMTEND             NO. THEREFORE CAN'T END COMMENT. SBG
         CLC   0(2,R4),COMMEND     COMPARE FOR END OF A COMMENT     SBG
         BNE   COMTEND             NO CHANGE IN STATUS.  EXIT.      SBG
COMMOFF  NI    COMNTFLG,COMENTOF   SIGNAL THE END OF THE COMMENT    SBG
COMTEND  BR    R2                  RETURN TO CALLER                 SBG
         SPACE 2                                                    SBG
*-------------------------------------------------------------------SBG
*        ROUTINE TO FIND LEGITIMATE PERIOD WHICH ENDS AN            SBG
*        SMP STATEMENT.  THIS SHOULD BE FIRST PERIOD WHICH          SBG
*        DOES NOT LIE WITHIN A COMMENT.                             SBG
*-------------------------------------------------------------------SBG
*        NOTE THAT COMMTEST MUST BE DONE BEFORE THIS ROUTINE.       SBG
VERTEST  TM    COMNTFLG,COMENTON   ARE WE INSIDE A COMMENT ?        SBG
         BO    VEREND              YES-THE PERIOD DONT MEAN NOTHIN  SBG
         CLI   0(R4),C'.'          THIS PERIOD IS LEGIT ?           SBG
         BNE   VEREND              NOT A PERIOD. GET OUT.           SBG
         NI    COMNTFLG,COMVEROF   YES. MARK THE ++VER AS FINISHED  SBG
VEREND   BR    R2                  BACK TO CALLER                   SBG
         SPACE 2                                                    SBG
*---------------------------------------------------------------------*
*        THIS IS THE COMMON HEADER WRITTING ROUTINE.                  *
*---------------------------------------------------------------------*
PXPUT    EQU   *
         AP    PAGE,ONE            ADD TO PAGE NUMBER
         MVC   NUM,PATRN           INSERT EDIT PATTERN
         ED    NUM,PAGE            MAKE THE NUMBER PRINTABLE
         PUT   PRINT,HDR1
         PUT   PRINT,HDR2
         PUT   PRINT,HDR3
         ZAP   LINECNT,FOUR        RESET PAGE LINE COUNTER
         BR    R2                  RETURN TO CALLER
         SPACE 2
*---------------------------------------------------------------------*
*        IF THE SORT RETURNS A NON-ZERO CONDITION CODE,               *
*        CONTROL IS PASSED TO THIS ABEND MACRO.                       *
*---------------------------------------------------------------------*
SORTERR  EQU   *
         ABEND 128,DUMP
         EJECT
         LTORG
         EJECT
SYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=INPUT,RECFM=FB,      X
               LRECL=80
         EJECT
SORT     DCB   DSORG=PS,MACRF=(PM,GM),DDNAME=SORTIN,RECFM=FB,LRECL=15, X
               BLKSIZE=1500,EODAD=PX599
         EJECT
PRINT    DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER,RECFM=VBA,LRECL=137,   X
               BLKSIZE=141
         EJECT
TITLE    DCB   DSORG=PS,MACRF=GM,DDNAME=TITLES,RECFM=FB,               X
               LRECL=80,EODAD=PX590
         EJECT
SAVE     DS    18F
HOLD     DS      CL7
BLANKS   DC      CL8' '                                             SBG
PAGE     DC      PL2'0'
LINECNT  DC      PL2'0'
ONE      DC      PL1'1'
THREE    DC      PL1'3'
FOUR     DC      PL1'4'
FLAG     DC      XL1'00'
NOTITLE  EQU     X'80'
COMNTFLG DC      XL1'00'          TEST IF WE'RE INSIDE A COMMENT    SBG
COMENTON EQU     X'01'            YES WE ARE.  IGNORE SMP KEYWORDS. SBG
COMENTOF EQU     X'FE'            NO WE AREN'T.  PROCESSING NORMAL. SBG
*                                 IF WE'RE INSIDE JCLIN, NOT COMMENTSBG
COMJCLON EQU     X'02'            YES WE ARE IN JCLIN. NOT A COMMENTSBG
COMJCLOF EQU     X'FD'            NO WE AREN'T. CAN BE A COMMENT.   SBG
COMIFON  EQU     X'04'         WE ARE IN A ++IF CARD. FMID NO GOOD. SBG
COMIFOF  EQU     X'FA'            WE AREN'T IN THE ++IF CARD NOW.   SBG
COMVERON EQU     X'80'            WE ARE LEGITIMATELY IN THE ++VER  SBG
COMVEROF EQU     X'7F'            WE ARE NOT IN ++VER LEGITIMATELY. SBG
COMSTART DC      CL2'/*'          BEGINNING OF A COMMENT            SBG
COMMEND  DC      CL2'*/'          END OF A COMMENT                  SBG
PATRN    DC      XL4'40202120'
INAREA   DS      CL80
OUTPTF   DC      CL8' '
OUTFMID  DC      CL7' '
         DS     0F
SORTPARM DC      X'80'
         DC      AL3(PARMLIST)
         DC      H'0'
PARMLIST DC      AL2(PARMEND-PARMLIST)
         DC      A(SORTCARD)
         DC      A(SORTEND)
         DC      A(RECCARD)
         DC      A(RECEND)
         DC      A(0)
         DC      A(0)
PARMEND  EQU   *
SORTCARD DC      C' SORT FIELDS=(9,7,CH,A,1,7,CH,A)'
SORTEND  DC      C' '
RECCARD  DC      C' RECORD LENGTH=15,TYPE=F'
RECEND   DC      C' '
HDR1     DC      H'133'
         DC      H'0'
         DC      CL1'1'
         DC    45CL1' '
         DC      C'SYSMOD BY FMID CROSS REFERENCE'
         DC    45CL1' '
         DC      CL4'PAGE'
NUM      DC      CL4'    '
HDR2     DC      H'135'
         DC      H'0'
         DC      CL1'0'
         DC      CL10'FMID'
*        DC    12CL10'PTF'
         DC    12CL10'SYSMOD'                                       SBG
HDR3     DC      H'135'
         DC      H'0'
         DC      CL1' '
         DC    13CL10'*******'
LINE     DC      H'137'
         DC      H'0'
OUTAREA  DC   133CL1' '
BLANK    DC      H'6'
         DC      H'0'
         DC      CL2'0 '
         EJECT
***********************************************************************
*              REGISTER EQUIVALENTS                                   *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
