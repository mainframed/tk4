./ ADD  NAME=$$DOC
************************************************************************
*                                                                      *
*              MILLER BREWING SPF/RACF INTERFACE                       *
*                  INSTALLATION INFORMATION                            *
*                                                                      *
************************************************************************

     INCLUDED IN THE SOURCE LIBRARY ARE SOME MACROS AND CODE WHICH ARE
     IN USE AT MILLER WHICH HAVE TO BE TAILORED AT OTHER INSTALLATIONS.
     THESE INCLUDE THE MACROS $PROLOG AND $EPILOG. THEY ARE MACROS WHICH
     SET UP STANDARD LINKAGE. IT ALSO INCLUDES THE ROUTINE CMNSUB WHICH
     CONVERTS JULIAN DATE TO GREGORIAN DATE. IN ADDITION WE HAVE IN-
     CLUDED A COPY OF OUR AUTHORIZATION SVC.  THIS SVC MAKES IT
     POSSIBLE FOR A PROGRAM TO GAIN APF AUTHORIZATION UNDER CONDITIONS.

     NOT INCLUDED HERE, ARE THE RACF MANAGER MACROS WHICH WILL BE
     REQUIRED TO ASSEMBLE THE SOURCE MODULES. THESE ARE SUPPLIED BY
     IBM ON THE RACF SOURCE OPTIONAL MATERIAL TAPE.  THIS TAPE MUST
     BE SPECIFICALLY ORDERED SINCE THE NORMAL DITRIBUTION MATERIALS
     INCLUDE ONLY OBJECT CODE.

     TO INSTALL THIS PACKAGE:

 A.  INSTALL THE OPTIONAL MATERIAL FOR RACF (WE NEED THE MACROS).

 B.  GLOBALLY CHANGE THE USER SVC NUMBER IN THIS FILE (CURRENTLY SET TO
     '???') TO ONE OF YOUR CHOSING.  BY DOING IT PRIOR TO INSTALL,
     ALL MEMBERS MAY BE CHANGED AT ONCE.

 C.  INSTALL THE THREE SPF FILES RACFALIB, RACFPLIB & RACFMLIB
        1 - ASSEMBLER SOURCE ............ ISP.RACF.ISPALIB (THIS ONE)
        2 - SPF PANELS .................. ISP.RACF.ISPPLIB
        3 - SPF MESSAGES ................ ISP.RACF.ISPMLIB

 D.  ASSEMBLE AND LINKEDIT THE MODULES AS DEFINED BY THE $$INST MEMBER.

 E.  INSTALL THE APPROPRIATE SVC INTO YOUR SYSTEM (MVSGPSVC OR AUTHSVC
     PROVIDED).

 F.  UPDATE YOUR EXISTING SPF LOGON PROCEDURE TO INCLUDE THE PANELS,
     MESSAGES AND LOAD LIBRARY.

 G.  UPDATE YOUR EXISTING OPTION MENUS (OR EXTENTION MENU).

./ ADD  NAME=$$INST
//TMSDS01A JOB (00000),RACF,
//             CLASS=A,NOTIFY=TMSDS01,MSGCLASS=X
//*
//*        INSTREAM PROC TO ASSEMBLE AND LINK FOLLOWS:
//*
//ASMRACF  PROC MEMBER=,LEPARM='MAP'
//ASM      EXEC PGM=IFOX00,PARM='OBJECT,NODECK,NOLIST,TERM'
//SYSLIB   DD   DISP=SHR,DSN=SYS1.MACLIB
//         DD   DISP=SHR,DSN=SYS1.AMODGEN
//         DD   DISP=SHR,DSN=SYS2.RACF.MACLIB <--- OPTIONAL MATERIAL
//         DD   DISP=SHR,DSN=ISP.RACF.ISPALIB <--- THIS LIBRARY
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSTERM  DD   SYSOUT=*
//SYSGO    DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//SYSIN    DD   DISP=SHR,DSN=ISP.RACF.ISPALIB(&MEMBER)
//*
//LKED     EXEC PGM=IEWL,COND=(0,NE),
//             PARM='RENT,REFR,REUS,MAP'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSLIB   DD   DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//         DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD(&MEMBER)
//SYSLIN   DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//         PEND
//*
//*        ALLOCATE THE REQUIRED DATASETS FOR USE IN PRIOR STEPS.
//*
//PRE      EXEC PGM=IEFBR14
//RACFISPA DD   DSN=ISP.RACF.ISPALIB,UNIT=SYSDA,VOL=SER=SYS421,
//             SPACE=(6160,(150,20,5),,,ROUND),
//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=3200)
//*
//POST     EXEC PGM=IEFBR14
//RACFISPM DD   DSN=ISP.RACF.ISPMLIB,VOL=REF=ISP.RACF.ISPALIB,
//             SPACE=(6160,(12,2,3),,,ROUND),
//             DCB=ISP.R1M0.ISPMLIB
//RACFISPP DD   DSN=ISP.RACF.ISPPLIB,VOL=REF=ISP.RACF.ISPALIB,
//             SPACE=(6160,(80,10,10),,,ROUND),
//             DCB=ISP.R1M0.ISPPLIB
//RACFOBJ  DD   DSN=ISP.RACF.OBJ,VOL=REF=ISP.RACF.ISPALIB,
//             SPACE=(3200,(50,50,5),,,ROUND),
//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=3200)
//RACFLOAD DD   DSN=ISP.RACF.ISPLOAD,VOL=REF=ISP.RACF.ISPALIB,
//             SPACE=(8368,(20,10,5),,,ROUND)
//*
//*        IEBUPDTE ADD THE THREE DISTRIBUTION MEMBERS TO EITHER
//*        EXISTING OR NEW DATASETS.
//*
//BUILDA   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DSN=ISP.RACF.ISPALIB,DISP=SHR
//SYSIN    DD   DSN=TS00000.SPFRACF.DATA(RACFISPA),DISP=SHR
//*
//BUILDM   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DSN=ISP.RACF.ISPMLIB,DISP=SHR
//SYSIN    DD   DSN=TS00000.SPFRACF.DATA(RACFISPM),DISP=SHR
//*
//BUILDP   EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DSN=ISP.RACF.ISPPLIB,DISP=SHR
//SYSIN    DD   DSN=TS00000.SPFRACF.DATA(RACFISPP),DISP=SHR
//*
//*        ASSEMBLE AND LINKEDIT THE SOURCE MODULES
//*
//CMNSUB   EXEC ASMRACF,MEMBER=CMNSUB
//CMNER10  EXEC ASMRACF,MEMBER=CMNER10
//CMNER11  EXEC ASMRACF,MEMBER=CMNER11
//CMNER12  EXEC ASMRACF,MEMBER=CMNER12
//CMNER13  EXEC ASMRACF,MEMBER=CMNER13
//CMNER14  EXEC ASMRACF,MEMBER=CMNER14
//CMNER15  EXEC ASMRACF,MEMBER=CMNER15
//CMNER16  EXEC ASMRACF,MEMBER=CMNER16
//CMNER17  EXEC ASMRACF,MEMBER=CMNER17
//CMNER18  EXEC ASMRACF,MEMBER=CMNER18
//CMNER20  EXEC ASMRACF,MEMBER=CMNER20
//CMNER21  EXEC ASMRACF,MEMBER=CMNER21
//CMNER22  EXEC ASMRACF,MEMBER=CMNER22
//CMNER23  EXEC ASMRACF,MEMBER=CMNER23
//CMNER24  EXEC ASMRACF,MEMBER=CMNER24
//CMNER30  EXEC ASMRACF,MEMBER=CMNER30
//CMNER31  EXEC ASMRACF,MEMBER=CMNER31
//CMNER32  EXEC ASMRACF,MEMBER=CMNER32
//CMNER33  EXEC ASMRACF,MEMBER=CMNER33
//CMNER34  EXEC ASMRACF,MEMBER=CMNER34
//CMNER40  EXEC ASMRACF,MEMBER=CMNER40
//CMNER41  EXEC ASMRACF,MEMBER=CMNER41
//CMNER42  EXEC ASMRACF,MEMBER=CMNER42
//CMNER43  EXEC ASMRACF,MEMBER=CMNER43
//CMNER44  EXEC ASMRACF,MEMBER=CMNER44
//CMNER50  EXEC ASMRACF,MEMBER=CMNER50
//CMNER51  EXEC ASMRACF,MEMBER=CMNER51
//CMNER52  EXEC ASMRACF,MEMBER=CMNER52
//CMNER53  EXEC ASMRACF,MEMBER=CMNER53
./ ADD  NAME=$$LINK
//TMSDS01A JOB (0000),URSULA,
//          CLASS=A,NOTIFY=TMSDS01,MSGCLASS=X
//*
//*        INSTREAM PROC TO ASSEMBLE AND LINK FOLLOWS:
//*
//KILL     EXEC PGM=PDSRESET
//SYSUDUMP DD   SYSOUT=*
//RESET    DD   DSN=ISP.RACF.ISPLOAD,DISP=OLD
//LINKRACF  PROC MEMBER=,LEPARM='MAP'
//LKED     EXEC PGM=IEWL,COND=(0,NE),
//             PARM='&LEPARM'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSLIB   DD   DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//         DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD(&MEMBER)
//SYSLIN   DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//         PEND
//CMNSUB   EXEC LINKRACF,MEMBER=CMNSUB,LEPARM='RENT,REFR,REUS,MAP'
//CMNER10  EXEC LINKRACF,MEMBER=CMNER10
//CMNER11  EXEC LINKRACF,MEMBER=CMNER11
//CMNER12  EXEC LINKRACF,MEMBER=CMNER12
//CMNER13  EXEC LINKRACF,MEMBER=CMNER13
//CMNER14  EXEC LINKRACF,MEMBER=CMNER14
//CMNER15  EXEC LINKRACF,MEMBER=CMNER15,LEPARM='RENT,REFR,REUS,MAP'
//CMNER16  EXEC LINKRACF,MEMBER=CMNER16,LEPARM='RENT,REFR,REUS,MAP'
//CMNER17  EXEC LINKRACF,MEMBER=CMNER17,LEPARM='RENT,REFR,REUS,MAP'
//CMNER18  EXEC LINKRACF,MEMBER=CMNER18,LEPARM='RENT,REFR,REUS,MAP'
//CMNER20  EXEC LINKRACF,MEMBER=CMNER20
//CMNER21  EXEC LINKRACF,MEMBER=CMNER21,LEPARM='RENT,REFR,REUS,MAP'
//CMNER22  EXEC LINKRACF,MEMBER=CMNER22,LEPARM='RENT,REFR,REUS,MAP'
//CMNER23  EXEC LINKRACF,MEMBER=CMNER23,LEPARM='RENT,REFR,REUS,MAP'
//CMNER24  EXEC LINKRACF,MEMBER=CMNER24,LEPARM='RENT,REFR,REUS,MAP'
//CMNER30  EXEC LINKRACF,MEMBER=CMNER30
//CMNER31  EXEC LINKRACF,MEMBER=CMNER31,LEPARM='RENT,REFR,REUS,MAP'
//CMNER32  EXEC LINKRACF,MEMBER=CMNER32,LEPARM='RENT,REFR,REUS,MAP'
//CMNER33  EXEC LINKRACF,MEMBER=CMNER33,LEPARM='RENT,REFR,REUS,MAP'
//CMNER34  EXEC LINKRACF,MEMBER=CMNER34,LEPARM='RENT,REFR,REUS,MAP'
//CMNER40  EXEC LINKRACF,MEMBER=CMNER40
//CMNER41  EXEC LINKRACF,MEMBER=CMNER41,LEPARM='RENT,REFR,REUS,MAP'
//CMNER42  EXEC LINKRACF,MEMBER=CMNER42,LEPARM='RENT,REFR,REUS,MAP'
//CMNER43  EXEC LINKRACF,MEMBER=CMNER43,LEPARM='RENT,REFR,REUS,MAP'
//CMNER44  EXEC LINKRACF,MEMBER=CMNER44,LEPARM='RENT,REFR,REUS,MAP'
//CMNER50  EXEC LINKRACF,MEMBER=CMNER50
//CMNER51  EXEC LINKRACF,MEMBER=CMNER51,LEPARM='RENT,REFR,REUS,MAP'
//CMNER52  EXEC LINKRACF,MEMBER=CMNER52,LEPARM='RENT,REFR,REUS,MAP'
//CMNER53  EXEC LINKRACF,MEMBER=CMNER53,LEPARM='RENT,REFR,REUS,MAP'
./ ADD  NAME=$EPILOG
         MACRO
&LABEL   $EPILOG &RC
&LABEL   LR    R1,R13              GET SAVEAREA ADDRESS
         L     R13,4(R13)          GET BACK CHAIN POINTER
         L     R0,16(R13)          GET SAVEAREA LENGTH
         ST    R15,16(R13)         SAVE REGISTER 15 (RETCODE)
         FREEMAIN R,LV=(0),A=(1)   FREE SAVEAREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         AIF   (T'&RC EQ 'O').SPEC
         LA    R15,&RC             SET RETURN CODE
.SPEC    ANOP
         BR    R14                 RETURN TO CALLER
         MEND
./ ADD  NAME=$PROLOG
         MACRO
&LABEL   $PROLOG &LV=0
.**********************************************************************
.*
.*       THIS MACRO WILL PROVIDE ENTRY LINKAGE AND OPTIONALLY
.*       MULTIPLE BASE REGISTERS.  ALSO, VIA THE 'LV=' KEYWORD
.*       PROVIDE ADDITIONAL USER STORAGE (APPENDED TO THE
.*       SAVE AREA) ADDRESSABLE FROM REG 13.  IF NO OPERANDS
.*       ARE CODED, REG 12 IS ASSUMED THE BASE. EXAMPLE:
.*              SECTNAME $PROLOG          = STANDARD REG 12 BASE
.*              SECTNAME $PROLOG 5        = STANDARD, REG 5 BASE
.*              SECTNAME $PROLOG 10,LV=20 = ADD 20 BYTES TO SAVE AREA
.*                                             REG 10 IS BASE
.*              SECTNAME $PROLOG R10,R11  = REGS 10 AND 11 ARE BASES
.*
.**********************************************************************
         LCLA  &AA,&AB,&AC
         GBLB  &PRORG
&AC      SETA  4096
&LABEL   CSECT
         B     32(R15)             BRANCH AROUND
         DC    AL1(26)
         DC    CL8'&LABEL'         CSECT NAME
         DC    C'-'
         DC    CL8'&SYSDATE'       COMPILE DATE
         DC    C'-'
         DC    CL8'&SYSTIME'       COMPILE TIME
         CNOP  0,4                 ALIGNMENT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             LOAD BASE REG
         USING &LABEL,R12          INFORM ASSEMBLER
         AIF   (&LV GT 4023).MERR
         LA    R0,&LV+72           LOAD REG 0 WITH LENGTH VARIABLE
         GETMAIN R,LV=(0)          GET CORE FOR SAVEAREA AND USER
         AIF   (&LV+72 LE 256).XC2
         AIF   (&LV+72 LE 512).XC1
         MVI   0(R1),X'00'         MOVE X'00' TO FIRST BYTE
         LR    R2,R1               SAVE POINTER IN EVEN REG
         LA    R4,1(R1)            SET RECEIVING POINTER
         LR    R5,R0               SET RECEIVING LENGTH
         BCTR  R5,R0               DECREMENT LENGTH
         LA    R5,0(R5)            CLEAR HIGH ORDER BYTE
         LA    R3,1                SET SENDING LENGTH
         MVCL  R4,R2               INSTRUCTION PADS WITH X'00'
         AGO   .STORE
.XC1     ANOP
         XC    256(&LV-184,R1),256(R1)  CLEAR SAVE AREA
         XC    0(256,R1),0(R1)          CLEAR SAVE AREA
         AGO   .STORE
.XC2     ANOP
         XC    0(&LV+72,R1),0(R1)       CLEAR SAVE AREA
.STORE   ANOP
         ST    R13,4(R1)           SAVE BACK CHAIN
         ST    R1,8(R13)           SET FORWARD CHAIN
         LR    R11,R1              SAVE NEW SAVEAREA ADDRESS
         L     R15,16(R13)         RESTORE REG 15
         ST    R0,16(R13)          SAVE SAVEAREA LENGTH
         LM    R0,R1,20(R13)       RESTORE REGS USED IN GETMAIN
         LR    R13,R11             SET SAVEAREA POINTER
         AIF   (N'&SYSLIST EQ 0).MEND
         AIF   ('&SYSLIST(1)' EQ 'R12').SKIPIT
         AIF   ('&SYSLIST(1)' EQ '12').SKIPIT
         LA    &SYSLIST(1),&LABEL  LOAD REQUESTED BASE REG
         DROP  R12                 DROP ASSUMED BASE REG
         USING &LABEL,&SYSLIST(1)  INFORM ASSEMBLER
.SKIPIT  ANOP
&AA      SETA  2
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).MEXIT
&AB      SETA  &AA-1
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB))  LOAD NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA))  LOAD NEXT BASE REG
         USING &LABEL+&AC,&SYSLIST(&AA) INFORM ASSEMBLER
&AC      SETA  &AC+4096
&AA      SETA  &AA+1
         AGO   .LOOP
.MEXIT   ANOP
         AIF   (&PRORG).MEX2
         SPACE
         $REGS
         SPACE
.MEX2    ANOP
&AA      SETA  &LV+72
         MNOTE *,'TOTAL STORAGE AREA RECEIVED = &AA'
         MEXIT
.MEND    ANOP
         MNOTE *,'NO REGISTER SPECIFIED - R12 ASSUMED'
         AGO   .MEXIT
.MERR    ANOP
         MNOTE 12,'LV > 4023 - REQUEST IGNORED'
         AGO   .MEXIT
         MEND
./ ADD  NAME=$REGS
         MACRO
         $REGS
         GBLB  &PRORG
         AIF   (&PRORG).MEX2
&PRORG   SETB  1
 SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
 SPACE
REG0     EQU   0
REG1     EQU   1
REG2     EQU   2
REG3     EQU   3
REG4     EQU   4
REG5     EQU   5
REG6     EQU   6
REG7     EQU   7
REG8     EQU   8
REG9     EQU   9
REG10    EQU   10
REG11    EQU   11
REG12    EQU   12
REG13    EQU   13
REG14    EQU   14
REG15    EQU   15
 SPACE
.MEX2    ANOP
       MEND
./ ADD  NAME=AUTHSVC
AUTHSVC  CSECT
***********************************************************************
*
*     THIS USER SVC (AUTHSVC) WILL PROVIDE MODESET
*     AUTHORIZATION UPON INVOCATION.  IT IS THEN THE USER'S
*     RESPONSIBILITY TO ISSUE A MODESET MACRO IN ORDER TO
*     GAIN SUPERVISOR STATE OR KEY ZERO.  REGISTER ONE MUST
*     POINT TO THE CHARACTERS 'AUTH' FOR MODESET CAPABILITY,
*     AND CAN POINT TO ANYTHING ELSE TO RELINQUISH THE
*     MODESET CAPABILITY.
*
***********************************************************************
         USING *,6                 ENTRY BASE IS REG 6
         L     R9,180(R4)          GET POINTER TO JSCB
         CLC   0(4,R1),=CL4'AUTH'  SET REQUEST
         BNE   RESET               NO, RESET USER AUTH
         L     R15,16              GET ADDR OF CVT
         USING CVT,R15
         L     R15,CVTGDA          GET ADDR OF GDA
         USING GDA,R15
         L     R7,PASTRT           GET BEGINNING OF PRIVATE AREA
         USING RBBASIC,R8          GET ADDRESSIBILITY TO RB
         LR    R8,R5               COPY ADDR OF CURRENT RB
         L     R8,RBLINK           GET CALLER'S RB
         L     R11,RBCDE           GET CALLER'S CDE
         USING CDENTRY,R11         SET UP ADDRESSIBILITY
         CLI   RBOPSW+3,X'??'      CHECK INTERUPT CODE
         BE    *+6
         DC    X'0700'
         L     R8,RBOPSW+4         GET INVOKER'S ADDRESS
         DROP  R8
         CR    R8,R7               IS INVOCATION FROM BELOW PRIVATE??
         BL    SET                 YES-- DO IT
         A     R7,PASIZE           GET END OF PRIVATE AREA
         CR    R8,R7               IS INVOCATION FROM ABOVE PRIVATE??
         BH    SET                 YES-- DO IT
         GETMAIN R,LV=RCHKLEN      GET SOME STORAGE
         LR    R10,R1              COPY ADDR
         MVC   0(RCHKLEN,R10),RCHKPAT  MOVE IN PATTERN FOR RACHECK
         LA    R11,CDNAME          GET NAME OF INVOKER
         DROP  R11
         RACHECK MF=(E,(R10)),ENTITY=((R11)) CHECK FOR AUTHORIZATION
         LTR   R8,R15              COPY RETURN CODE
         C     R8,=F'4'            WAS RESOURCE FOUND? ?
         BNE   FREEIT              YES- PROCEED
         USING RCHKPAT,R10
         MVC   NOTFND+17(8),0(R11) NO-- MOVE INTO MESSAGE
         WTO   MF=(E,NOTFND)
         LA    R8,0                NOP THIS INSTRUCTION TO ENFORCE
*                                  SVC231 USEAGE
FREEIT   FREEMAIN R,LV=RCHKLEN,A=(R10) GET RID OF PARM LIST
         LTR   R8,R8
         BNZ   *+8                 DON'T AUTHORIZE UNLESS RACHECK OK
SET      OI    236(R9),X'01'       PROVIDE AUTHORIZATION
         BR    R14                 RETURN
RESET    NI    236(R9),X'FE'       RESET AUTH BIT
         BR    R14                 RETURN TO SYSTEM
RCHKPAT  RACHECK MF=L,ATTR=READ,                                       X
               CLASS='$SVC231'
NOTFND   WTO   'RACHECK PROG(XXXXXXXX) CLASS($SVC231) - NOT FOUND',    X
               MF=L
RCHKLEN  EQU   *-RCHKPAT
         PRINT NOGEN
         IHACDE
         CVT DSECT=YES
         IHAGDA
         IHARB
         END
./ ADD  NAME=CMNER10
CMNER10  $PROLOG
 TITLE '**** SPF/RACF LIST COMMAND CONTROLLER       &SYSDATE &SYSTIME'
***********************************************************************
*        PROGRAM - CMNER10                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS NON REENTRANT MODULE WHICH ACTS AS A       *
*               CONTROLLER FOR THE SPF/RACF LIST FUNCTIONS. IT        *
*               DISPLAYS A SELECTION MENU AND SELECTS THE PROPER SUB- *
*               FUNCTIONS                                             *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
*
*        DEFINE PROGRAM VARIABLES TO DIALOG MANAGER
*
         CALL  ISPLINK,(VDEF,NAMES,MUSER,CHAR,LNG8),VL
         LTR   R15,R15
         BZ    DEFC
         ABEND 10,DUMP
VDEF     DC    CL8'VDEFINE'
NAMES    DC    C'(CMNERUID CMNERGRP)'
CHAR     DC    CL8'CHAR'
LNG      DC    F'4'
         SPACE 3
*
*        DEFINE PROGRAM CLASS AND RESOURCE VARIABLES
*
DEFC     EQU   *
         CALL  ISPLINK,(VDEF,CNAME,MCLASS,CHAR,LNG8),VL
         LTR   R15,R15
         BZ    DEFDS
         ABEND 10,DUMP
CNAME    DC    C'(CMNERCLS CMNERRES)'
LNG8     DC    F'8'
         SPACE 3
*
*        DEFINE PROGRAM DATA SET VARIABLE
*
DEFDS    EQU   *
         CALL  ISPLINK,(VDEF,DNAME,DSNM,CHAR,LNG44),VL
         LTR   R15,R15
         BZ    DEFVOL
         ABEND 10,DUMP
DNAME    DC    C'(CMNERDSN CMNERWDS)'
LNG44    DC    F'44'
         SPACE 3
*
*        DEFINE PROGRAM VOLUME VARIABLE
*
DEFVOL   EQU   *
         CALL  ISPLINK,(VDEF,VVOL,CMNERVOL,CHAR,LNG6),VL
         LTR   R15,R15
         BZ    DEFRC
         ABEND 10,DUMP
VVOL     DC    C'(CMNERVOL)'
LNG6     DC    F'6'
CMNERVOL DC    CL6' '
*
*        DEFINE RETURN CODE VARIABLE
*
DEFRC    EQU   *
         CALL  ISPLINK,(VDEF,VRC,CMNERRC,FIXED,LNG),VL
         LTR   R15,R15
         BZ    REDISPL
         ABEND 10,DUMP
VRC      DC    C'(CMNERRC)'
CMNERRC  DC    F'0'
FIXED    DC    CL8'FIXED'
*
*        CALL SPF DIALOG MANAGER TO DISPLAY LIST MENU
*
REDISPL  EQU   *
         CALL  ISPLINK,(DISPLAY,LIST,,CURSOR),VL
DISPCHK  CH    R15,=H'8'           PF3 ? ? ? ?
         BE    RETURN
         LTR   R15,R15
         BZ    DPARMS
         ABEND 1,DUMP
CURSOR   DC    CL8'CMNERUID'
DISPLAY  DC    CL8'DISPLAY'
LIST     DC    CL8'CMNER10'        MENU NAME
         SPACE 3
*
*        SELECT LIST USER
*
DPARMS   EQU   *
         CLC   MUSER,=CL8' '       USER ENTERED ? ? ? ? ?
         BE    TRYGRP              YES
         CALL  ISPLINK,(VPUT,NAMES),VL
         CALL  ISPLINK,(SELECT,SELBL,SELBUF),VL
         MVC   CURSOR,=CL8'CMNERUID'
         B     REDISPL
VPUT     DC    CL8'VPUT'
SELECT   DC    CL8'SELECT'
SELBL    DC    F'12'
SELBUF   DC    C'PGM(CMNER11)'
         SPACE 3
*
*        LINK TO LIST GROUP
*
TRYGRP   EQU   *
         CLC   MGROUP,=CL8' '      GROUP ENTERED ? ? ? ? ?
         BE    TRYGNL              NO
         CALL  ISPLINK,(VPUT,GRPVARS),VL
         CALL  ISPLINK,(SELECT,GRPBL,GRPBUF),VL
         MVC   CURSOR,=CL8'CMNERGRP'
         B     REDISPL
GRPVARS  DC    C'(CMNERGRP)'
GRPBL    DC    F'12'
GRPBUF   DC    C'PGM(CMNER14)'
         SPACE 3
*
*        LINK TO GENERALIZED RESOURCE DISPLAY
*
TRYGNL   EQU   *
         CLC   MGENERL(8),=CL8' '  RESOURCE SPECIFIED
         BE    CHKDSN              CHECK FOR DATA SET NAME
         CLC   MCLASS,=CL8' '      CHECK RESOURCE
         BNE   GR0010
         MVC   CURSOR,=CL8'CMNERCLS'
         CALL  ISPLINK,(DISPLAY,LIST,MSG02,CURSOR)
         B     DISPCHK
GR0010   CALL  ISPLINK,(VPUT,RESVARS),VL
         CALL  ISPLINK,(SELECT,RESBL,RESBUF),VL
         MVC   CURSOR,=CL8'CMNERRES'
         B     REDISPL
RESVARS  DC    C'(CMNERRES CMNERCLS)'
RESBUF   DC    C'PGM(CMNER13)'
RESBL    DC    F'12'
         SPACE 3
*
*        LINK TO DATA SET DISPLAY
*
CHKDSN   EQU   *
         CLI   DSNM,C' '           DATA SET NAME SPECIFIED
         BE    ERROR1              NO
         BAL   R10,QUAL            GO CHECK QUALIFICATION
         CLC   CMNERVOL,=CL6' '
         BE    DSN004              NO, THEN MUST DO LOCATE
         TRT   CMNERWDS,PARENTAB   CHECK FOR GDG ()
         BZ    DSN010              NO, THEN BYPASS LOCATE
DSN004   LOCATE CAMLIST            IF NOT ENTERED, SEARCH CATALOG
         LTR   R15,R15             FOUND
         BZ    DSN005              YES
         ST    R15,CMNERRC
         MVC   CURSOR,=CL8'CMNERVOL'
         CALL  ISPLINK,(DISPLAY,LIST,MSG03,CURSOR)
         B     DISPCHK
DSN005   MVC   CMNERVOL,WORK+6
DSN010   CALL  ISPLINK,(VPUT,DSNVARS),VL
         CALL  ISPLINK,(SELECT,DSNBL,DSNBUF),VL
         MVC   CURSOR,=CL8'CMNERDSN'
         B     REDISPL
ERROR1   MVC   CURSOR,=CL8'CMNERUID'
         CALL  ISPLINK,(DISPLAY,LIST,MSG01,CURSOR)
         B     DISPCHK
DSNBUF   DC    C'PGM(CMNER12)'
DSNBL    DC    F'12'
DSNVARS  DC    C'(CMNERWDS CMNERVOL)'
         DS    0D
RETURN   EQU   *
         $EPILOG
         SPACE 5
QUAL     EQU   *
         CLI   DSNM,C''''          DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL44' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,DSNM
         TRT   CMNERWDS+1(43),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(DISPLAY,LIST,MSG04,CURSOR)
         B     DISPCHK
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(43),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),DSNM
         DROP  R15
         EJECT
MUSER    DC    CL8' '
MGROUP   DC    CL8' '
MCLASS   DC    CL8' '
MGENERL  DC    CL8' '
DSNM     DC    CL44' '
CMNERWDS DC    CL44' '
MSG01    DC    CL8'CMNER100'       ENTER PARAMETERS
MSG02    DC    CL8'CMNER101'       ENTER CLASS
MSG03    DC    CL8'CMNER102'       ENTER VOLUME
MSG04    DC    CL8'CMNER103'       INVALID DATASET NAME
CAMLIST  CAMLST NAME,CMNERWDS,,WORK
         DS    0D
WORK     DS    CL265
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
         IHAACEE
         EJECT
         END
./ ADD  NAME=CMNER11
CMNER11  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER11                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - DISPLAY PANELS FOR THE LIST USER FUNCTION FOR THE  *
*               MILLER SPF/RACF INTERFACE. THIS MODULE IS NOT RE-     *
*               ENTRANT AND ISSUES NO RACF MANAGER MACROS.            *
*                                                                     *
*        PANELS - CMNER11                                             *
*               - CMNER19                                             *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         CALL ISPLINK,(VDEF,VRETCD,RETCD,FIXED,LNG4)
         LTR   R15,R15             CHECK RETURN
         BZ    L0005
         ABEND 10,DUMP
L0005    CALL ISPLINK,(VDEF,VNXTSW,NEXTSW,FIXED,LNG1),VL
         LTR   R15,R15
         BZ    L0010
         ABEND 11,DUMP
L0010    MVC   RETLN,LNG8
         CALL  ISPLINK,(VCOPY,VUNAME,RETLN,USERID,VMODE),VL
         LTR   R15,R15
         BZ    L0020
         ST    R15,RETCD           STORE RETURN CODE TO SHOW
         CALL  ISPLINK,(VDISPLAY,PUSER,RL97001,CURSOR),VL
         B     DONE
L0020    CLC   USERID,=CL8' '      CHECK FOR BEGININNING
         BNE   L0021               NO--
         OI    NEXTSW,X'01'        SET NEXT SWITCH
L0021    CALL  ISPLINK,(VPUT,VNXTSW),VL  PUT IT IN SHARED POOL
         CALL  ISPLINK,(VSELECT,LNG12,CMNER15)
         LTR   R15,R15
         BZ    L0022
         ABEND 22,DUMP
L0022    CALL  ISPLINK,(VGET,NAMELIST,SHARED),VL
         L     R15,RETCD           GET RETURN CODE FROM CMNER15
         C     R15,=F'12'          WAS USER FOUND? ?
         BNE   L0023               YES--
         CALL  ISPLINK,(VDISPLAY,PUSER,RL97002,CURSOR),VL
         B     DONE
L0023    MVC   RETLN,LNG8
         CALL  ISPLINK,(VCOPY,VUNAME,RETLN,USERID,VMODE),VL
         LTR   R15,R15
         BZ    L0027
         ST    R15,RETCD           STORE RETURN CODE TO SHOW
         CALL  ISPLINK,(VDISPLAY,PUSER,RL97001,CURSOR),VL
         B     DONE
L0027    BAL   R10,CKAUTH          CHECK AUTHORITY TO LIST
         LTR   R15,R15             SHOULD BE ZERO
         BNZ   DONE
         CALL  ISPLINK,(VDISPLAY,PUSER,,CURSOR),VL
         LTR   R15,R15
         BZ    L0030
         C     R15,=F'8'           CHECK FOR END KEY
         BE    DONE                YES, THEN GET OUT
         ST    R15,RETCD           STORE IT
         CALL  ISPLINK,(VDISPLAY,PUSER,RL97004,CURSOR),VL
         B     DONE
L0030    OI    NEXTSW,X'01'
         CALL  ISPLINK,(VCOPY,VUNAME,RETLN,USERADDR,VLOCATE),VL
         L     R2,USERADDR
         CLC   USERID,0(R2)        CHECK IF USER CHANGED
         BE    L0020               NO, THEN GET NEXT
         MVI   NEXTSW,X'00'
         CALL  ISPLINK,(VREPLACE,VUNAME,LNG4,(R2))
         LTR   R15,R15
         BZ    L0040
         ST    R15,RETCD
         CALL  ISPLINK,(VDISPLAY,PUSER,RL97005,CURSOR)
         B     DONE
L0040    CALL  ISPLINK,(VPUT,VPUNAME),VL
         B     L0020
DONE     MVI   NEXTSW,X'00'
         $EPILOG 0
         EJECT
*  CHECK AUTHORIZATION SUBROUTINE
CKAUTH   EQU   *
         L     R4,544              GET ADDR OF ASCB
         L     R4,108(R4)          GET ADDR OF ASXB
         L     R4,200(R4)          GET ADDR OF ACEE
         USING ACEE,R4
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   AM I SPECIAL
         BOR   R10                 YES, THEN OKAY
         XR    R8,R8               CLEAR R8
         IC    R8,ACEEUSRL         GET USER LENGTH
         BCTR  R8,0                REDUCE FOR COMPARE
         EX    R8,CLCUSR           IS IT MY ID
         BER   R10                 YES, THEN OKAY
         CALL ISPLINK,(VCOPY,VOWNER,RETLN,OWNADDR,VLOCATE)
         LTR   R15,R15
         BZ    CHKAUTH1
         ABEND 42,DUMP
CHKAUTH1 L     R1,OWNADDR         GET ADDR OF OWNER
         LA    R15,0
         CLC   ACEEUSRI(7),0(R1)   AM I THE OWNER? ?
         BER   R10                 YES, THEN OKAY
         CALL ISPLINK,(VDISPLAY,PANEL2,RL97003,)
         B     DONE
         EJECT
*  VARIABLE LENGTHS
LNG1     DC    F'1'
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG11    DC    F'11'
LNG12    DC    F'12'
RETLN    DC    F'0'
*  DIALOG MANAGER SERVICES
VDEF     DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VGET     DC    CL8'VGET'
VREPLACE DC    CL8'VREPLACE'
VLOCATE  DC    CL8'LOCATE'
VCOPY    DC    CL8'VCOPY'
VDISPLAY DC    CL8'DISPLAY'
VSELECT  DC    CL8'SELECT'
VMODE    DC    CL8'MOVE'
SHARED   DC    CL8'SHARED'
*  VARIABLE NAMES
VRETCD   DC    C'(CMNERRC)'
VUNAME   DC    CL8'CMNERUID'
VNXTSW   DC    C'(CMNERNXT)'
VPUNAME  DC    C'(CMNERUID)'
NAMELIST DC    C'(CMNERINT '
         DC    C'CMNERRC '
         DC    C'CMNERUID '
         DC    C'CMNERDEF '
         DC    C'CMNERLUD '
         DC    C'CMNERLCH '
         DC    C'CMNERGRP '
         DC    C'CMNEROWN '
         DC    C'CMNERGP1 '
         DC    C'CMNERGP2 '
         DC    C'CMNERGP3 '
         DC    C'CMNERGP4 '
         DC    C'CMNERGP5 '
         DC    C'CMNERCON '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3 '
         DC    C'CMNERDAT '
         DC    C'CMNERAUT '
         DC    C'CMNERUAC '
         DC    C'CMNERNAM '
         DC    C'CMNERONM '
         DC    C'CMNERAT1 '
         DC    C'CMNERAT2 '
         DC    C'CMNERAT3 '
         DC    C'CMNERAT4 '
         DC    C'CMNERAT5 '
         DC    C'CMNERAT6)'
*  VARIABLES
RETCD    DS    F
USERID   DS    CL8
USERADDR DS    A
*  VARIABLE TYPES
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
*  MESSAGES
RL97001  DC    CL8'CMNER110'
RL97002  DC    CL8'CMNER112'
RL97003  DC    CL8'CMNER113'
RL97004  DC    CL8'CMNER114'
RL97005  DC    CL8'CMNER115'
NEXTSW   DC    X'00'
*  PANELS
PUSER    DC    CL8'CMNER11 '
PANEL2   DC    CL8'CMNER19 '
CURSOR   DC    CL8'CMNERUID'
CMNER15  DC    C'PGM(CMNER15)'
CLCUSR   CLC   USERID(0),ACEEUSRI
VOWNER   DC    CL8'CMNEROWN'
OWNADDR  DS    A
         IHAACEE
         END
./ ADD  NAME=CMNER12
         TITLE '***** LIST DATASET FUNCTION *****'
CMNER12  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER12                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A NON REENTRANT ROUTINE WHICH DISPLAYS ALL *
*               RACF INFORMATION ABOUT DATASETS. IT DOES NOT REQUIRE  *
*               APF AUTHORIZATION.                                    *
*                                                                     *
*        PANELS USED - CMNER12                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER120 - CMNER123                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP
         B     P30030
P30010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P30030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,P50300)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         MVC   CMNERDSN,CMNERWDS
         L     R8,CMNERRC          GET RETURN CODE FROM FILL MODULE
         LTR   R8,R8
         BZ    P30035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R8,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG02,)
         B     P30099              AND GET OUT
P30035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P30099              IF NOT ZERO, THEN GET OUT
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,)
         LTR   R15,R15
         BZ    P30035A
         ABEND 5,DUMP
P30035A  ICM   R15,15,CMNERROW        CHECK NUMBER OF ROWS IN TABLE
         BNZ   P30035B
         CALL  ISPLINK,(VDISPLAY,CMNER01,,)
         B     P30036
P30035B  CALL ISPLINK,(VTBDISPL,TABLE,CMNER01,)
P30036   C     R15,=F'8'           WAS END KEY ENTERED? ? ?
         BE    P30099              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR GOOD RETURN
         BZ    P30040              YES, CONTINUE
         ABEND 3,DUMP              NO, SAY BYE
P30040   EQU   *
         MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         OC    CMNEROPT,=CL8' '    TRANSLATE TO UPPER CASE
         CLC   CMNEROPT,=CL8'NEXT' IS IT A REQUEST FOR THE NEXT DATASET
         BE    P30050              YES--
         ICM   R15,15,CMNERROW
         BNZ   P30045
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG04,)
         B     P30036
P30045   CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG04)
         B     P30036
P30050   MVI   CMNERNXT,X'01'      YES, THEN SET NEXT SWITCH
         CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VTBEND,TABLE)    REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         B     P30010
P30099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF 1ST LEVEL = USERID
         BER   R10                 YES, THEN RETURN
         EX    R3,CHK2             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST READ ACCESS
         RACHECK ENTITY=CMNERDSN,VOLSER=CMNERVOL,CLASS='DATASET',      X
               ATTR=READ
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER02,MSG03,)
         LA    R15,8
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         CALL  ISPLINK,(VDEF,VOPT,CMNEROPT,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,VDSN,CMNERDSN,CHAR,LNG44)
         CALL  ISPLINK,(VDEF,VVOL,CMNERVOL,CHAR,LNG6)
         CALL  ISPLINK,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1)
         CALL  ISPLINK,(VDEF,VRETCD,CMNERRC,FIXED,LNG4)
         CALL  ISPLINK,(VDEF,VOWN,CMNEROWN,CHAR,LNG8)
         CALL  ISPLINK,(VGET,LIST3,SHARED)
         MVC   CMNERDSN,CMNERWDS
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VTBQUERY DC    CL8'TBQUERY'
VDISPLAY DC    CL8'DISPLAY'
VROWNP   DC    CL8'CMNERROW'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG11    DC    F'11'
LNG12    DC    F'12'
LNG44    DC    F'44'
*
*  DIALOG MANAGER LISTS
*
VOPT     DC    C'(CMNEROPT)'
VDSN     DC    C'(CMNERDSN CMNERWDS)'
VVOL     DC    C'(CMNERVOL)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC CMNERROW)'
VOWN     DC    C'(CMNEROWN)'
LIST1    DC    C'(CMNERWDS '
         DC    C'CMNERRC '
         DC    C'CMNERVOL '
         DC    C'CMNEROWN '
         DC    C'CMNERUNI '
         DC    C'CMNERAUD '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERLUP)'
LIST2    DC    C'(CMNERTUI '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC)'
LIST3    DC    C'(CMNERWDS '
         DC    C'CMNERVOL)'
*
*  DIALOG MANAGER VARIABLES
*
CMNEROPT DC    CL8' '
CMNERDSN DS    CL44
CMNERWDS DS    CL44
CMNERVOL DC    CL6' '
CMNERRC  DS    F
CMNERROW DS    F
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER12'
CMNER02  DC    CL8'CMNER19'
P50300   DC    C'PGM(CMNER16)'
MSG01    DC    CL8'CMNER120'
MSG02    DC    CL8'CMNER121'
MSG03    DC    CL8'CMNER122'
MSG04    DC    CL8'CMNER123'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTDS'
*
*  MISCELLANEOUS FIELDS
*
         DS    0F
CHK1     CLC   CMNERDSN(0),ACEEUSRI
CHK2     CLC   CMNEROWN(0),ACEEUSRI
         IHAACEE
         END
./ ADD  NAME=CMNER13
CMNER13  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER13                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A NON REENTRANT ROUTINE WHICH DISPLAYS ALL *
*               RACF INFORMATION ABOUT GENERAL RESOURCES. IT DOES NOT *
*               REQUIRE APF AUTHORIZATION.                            *
*                                                                     *
*        PANELS USED - CMNER13                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER130 - CMNER132                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP
P30010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P30030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER18)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R8,CMNERRC          GET RETURN CODE FROM FILL MODULE
         LTR   R8,R8
         BZ    P30035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R8,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG01,)
         B     P30099              AND GET OUT
P30035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P30099              IF NOT ZERO, THEN GET OUT
         CALL  ISPLINK,(VDEF,VROW,CMNERROW,FIXED,LNG4)
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,)
         LTR   R15,R15
         BZ    P30035A
         ABEND 5,DUMP
P30035A  L     R15,CMNERROW        CHECK IF TABLE EMPTY
         CH    R15,=H'0'
         BNE   P30035B             NO, THEN CAN USE TABLE DISPLAY
         CALL ISPLINK,(VDISPLAY,CMNER01,,) OTHERWISE JUST USE DISPLAY
         B     P30036
P30035B  CALL ISPLINK,(VTBDISPL,TABLE,CMNER01,)
P30036   C     R15,=F'8'           WAS END KEY ENTERED? ? ?
         BE    P30099              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR GOOD RETURN
         BZ    P30040              YES, CONTINUE
         ABEND 3,DUMP              NO, SAY BYE
P30040   EQU   *
         MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         OC    CMNEROPT,=CL4' '    TRANSLATE TO UPPER CASE
         CLC   CMNEROPT,=CL8'NEXT' IS IT A REQUEST FOR THE NEXT DATASET
         BE    P30050              YES--
         ICM   R15,15,CMNERROW        GET NUM OF ROWS
         BNZ   P30045              ONLY USE TABLE SERVICE IF ROWS THERE
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG02,) OTHERWISE JUST DISPLAY
         B     P30036
P30045   CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG02)
         B     P30036
P30050   MVI   CMNERNXT,X'01'      YES, THEN SET NEXT SWITCH
         CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VTBEND,TABLE)    REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         B     P30010
P30099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST READ ACCESS
         MVC   WKCLASS,CMNERCLS
         RACHECK ENTITY=CMNERRES,CLASS=WKCLSLN,                        X
               ATTR=READ
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER02,MSG03,)
         LA    R15,8
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         CALL  ISPLINK,(VDEF,VOPT,CMNEROPT,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,VRES,CMNERRES,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1)
         CALL  ISPLINK,(VDEF,VRETCD,CMNERRC,FIXED,LNG4)
         CALL  ISPLINK,(VDEF,VOWN,CMNEROWN,CHAR,LNG8)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG11    DC    F'11'
LNG12    DC    F'12'
*
*  DIALOG MANAGER LISTS
*
VROW     DC    C'(CMNERROW)'
VOPT     DC    C'(CMNEROPT)'
VRES     DC    C'(CMNERRES CMNERCLS)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VOWN     DC    C'(CMNEROWN)'
LIST1    DC    C'(CMNERRES '
         DC    C'CMNERCLS '
         DC    C'CMNERRC '
         DC    C'CMNEROWN '
         DC    C'CMNERUAC '
         DC    C'CMNERDAT '
         DC    C'CMNERAUD '
         DC    C'CMNERCDT '
         DC    C'CMNERLUP)'
LIST2    DC    C'(CMNERTUI '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC)'
*
*  DIALOG MANAGER VARIABLES
*
CMNEROPT DC    CL8' '
CMNERRES DS    CL8
CMNERCLS DC    CL8' '
CMNERRC  DS    F
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
CMNERROW DC    F'0'
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER13'
CMNER02  DC    CL8'CMNER19'
CMNER18  DC    C'PGM(CMNER18)'
MSG01    DC    CL8'CMNER130'
MSG02    DC    CL8'CMNER131'
MSG03    DC    CL8'CMNER132'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
VROWNP   DC    CL8'CMNERROW'
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTRS'
WKCLSLN  DC    X'08'
WKCLASS  DC    CL8' '
*
*  MISCELLANEOUS FIELDS
*
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         IHAACEE
         END
./ ADD  NAME=CMNER14
         TITLE '***** LIST GROUP *****'
CMNER14  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER14                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A NON REENTRANT ROUTINE WHICH DISPLAYS ALL *
*               RACF INFORMATION ABOUT GROUPS .  IT DOES NOT REQUIRE  *
*               APF AUTHORIZATION.                                    *
*                                                                     *
*        PANELS USED - CMNER14                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER140 - CMNER142                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP
C14010   CALL  ISPLINK,(VGET,LIST1,SHARED)
C14015   CALL  ISPLINK,(VPUT,LIST1,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER17)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R8,CMNERRC          CHECK RETURN CODE
         LTR   R8,R8               IS IT ZERO? ?
         BZ    C14020              YES
         ST    R8,CMNERRC          NOT STORE AND PRINT
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C14999              AND GET OUT
C14020   BAL   R10,CHKAUTH         IS IT OKAY TO LIST? ? ?
         LTR   R15,R15
         BZ    C14022              OKAY
         B     C14999              AND GET OUT
C14022   CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,)
         L     R8,CMNERROW         GET CURRENT
         LTR   R8,R8
         BZ    C14025              NO ROWS IN TABLE
         CALL  ISPLINK,(VTBDISPL,TABLE,PANEL,)
         B     C14030              GO CHECK RETURN
C14025   CALL  ISPLINK,(VDISPLAY,PANEL,,)
C14030   CH    R15,=H'8'           WAS END ENTERED
         BE    C14999              YES, GET OUT
         LTR   R15,R15             CHECK RETURN
         BZ    C14035              GOOD
         ABEND 1,DUMP
C14035   OC    CMNEROPT,=CL8' '    PUT IN UPPER CASE
         MVI   CMNERNXT,X'01'      SET NEXT SWITCH
         CLC   CMNEROPT,=CL8'NEXT' WAS NEXT ENTERED
         BE    C14050              YES--
         ICM   R8,15,CMNERROW      NO, CHECK WHICH SERVICE TO USE
         BZ    C14040              NO ROWS
         CALL  ISPLINK,(VTBDISPL,TABLE,PANEL,MSG01)
         B     C14030
C14040   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C14030
C14050   CALL  ISPLINK,(VTBEND,TABLE)
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         B     C14015
         SPACE 5
C14999   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
         TM    CMNERMAU,X'01'      DOES USER HAVE JOIN OR CONNECT
         BOR   R10
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,PANEL2,MSG03,)
         LA    R15,8
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         CALL  ISPLINK,(VDEF,VOPT,CMNEROPT,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,VGRP,CMNERGRP,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1)
         CALL  ISPLINK,(VDEF,VRETCD,CMNERRC,FIXED,LNG4)
         CALL  ISPLINK,(VDEF,VOWN,CMNEROWN,CHAR,LNG8)
         CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG11    DC    F'11'
LNG12    DC    F'12'
*
*  DIALOG MANAGER LISTS
*
VOPT     DC    C'(CMNEROPT)'
VGRP     DC    C'(CMNERGRP)'
VNXTSW   DC    C'(CMNERNXT CMNERMAU)'
VRETCD   DC    C'(CMNERRC CMNERROW)'
VOWN     DC    C'(CMNEROWN)'
LIST1    DC    C'(CMNERGRP '
         DC    C'CMNERRC '
         DC    C'CMNEROWN '
         DC    C'CMNERUAC '
         DC    C'CMNERNOT '
         DC    C'CMNERNXT '
         DC    C'CMNERMAU '
         DC    C'CMNERSG1 '
         DC    C'CMNERSG2 '
         DC    C'CMNERSG3 '
         DC    C'CMNERSG4 '
         DC    C'CMNERSG5 '
         DC    C'CMNERSG6 '
         DC    C'CMNERSG7 '
         DC    C'CMNERSG8 '
         DC    C'CMNERSG9 '
         DC    C'CMNERSGA '
         DC    C'CMNERSGB '
         DC    C'CMNERSGX '
         DC    C'CMNERCDT '
         DC    C'CMNERSUG)'
LIST2    DC    C'(CMNERTUI '
         DC    C'CMNERTAC '
         DC    C'CMNERTCT '
         DC    C'CMNERTUA '
         DC    C'CMNERTAT)'
*
*  DIALOG MANAGER VARIABLES
*
CMNEROPT DC    CL8' '
CMNERGRP DS    CL8
CMNERRC  DS    F
CMNERROW DS    F
CMNERNXT DC    X'00'
CMNERMAU DC    X'00'
CMNEROWN DS    CL8
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
PANEL    DC    CL8'CMNER14'
PANEL2   DC    CL8'CMNER19'
CMNER17  DC    C'PGM(CMNER17)'
MSG01    DC    CL8'CMNER140'       ENTER END OR NEXT
MSG02    DC    CL8'CMNER141'       RACF ERROR
MSG03    DC    CL8'CMNER142'       NOT AUTHORIZED TO LIST
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTGP'
VROWNP   DC    CL8'CMNERROW'
*
*  MISCELLANEOUS FIELDS
*
PREVGRP  DC    CL8' '
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         IHAACEE
         END
./ ADD  NAME=CMNER15
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** FILL USER VARIABLES *****'
CMNER15  $PROLOG  R12
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER15                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF   *
*               AND FILLS ALL DIALOG MANAGER VARIABLES ASSOCAIATED    *
*               WITH A USER.                                          *
*                                                                     *
*        CHANGE LOG -                                                 *
*          09/02/81 - SUPPORT FOR THE USER 'CAPABILITIES' FACILITY    *
*               WAS ADDED. SEE DOCUMENTATION IN CMNER22.              *
*                                                                     *
*                                                                     *
***********************************************************************
         GETMAIN R,LV=DYNWKLN      GET SOME STORAGE
         LR    R8,R1
         LA    R2,DYNWK
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC WORKAREA
         LR    R3,R9               COPY IT
         MVCL  R8,R2               MOVE FROM PROGRAM TO DYNAMIC AREA
         LR    R8,R1               RESTORE POINTER TO DYNAMIC AREA
         USING DYNWK,R8            SET ADDRESSIBILITY
         CALL  ISPLINK,(,,RETCD,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,USERID,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,VGUID),MF=(E,ISPLNKB)
         CALL  ISPLINK,(,,NEXTSW,,),MF=(E,ISPLNK9)
*
*        ESTAE ABENDRT
*
         CALL  ISPLINK,(,VNXTSW),MF=(E,ISPLNKA)
         GETMAIN R,LV=400
         ST    R1,WORK2
         LA    R2,=A(400)
         ST    R2,0(R1)            LENGTH OF WORK AREA
         SPACE 3
         MVC   CMNERAUT,=CL8' '
         MVC   CMNERUAC,=CL8' '
         MVC   CMNERCL1,=CL8' '
         MVC   CMNERCL2,=CL8' '
         MVC   CMNERCL3,=CL8' '
         MVC   CMNERDAT,=CL30' '
         MVC   CMNERCA1,=CL3' '
         MVC   CMNERCA2,=CL3' '
         MVC   CMNERCA3,=CL3' '
         CALL  ISPLINK,(VPUT,VARIAB),VL
*
*        DEFINE PROGRAM VARIABLES TO DIALOG MANAGER
*
DEFNAMEX EQU   *
         CALL  ISPLINK,(,,MGROUP,,),MF=(E,ISPLNK3)
         LTR   R15,R15
         BZ    DEFNAME
         ABEND 41,DUMP
DEFNAME  EQU   *
         CALL  ISPLINK,(,,NAME,,),MF=(E,ISPLNK4)
         LTR   R15,R15
         BZ    DEFDATES
         ABEND 51,DUMP
DEFDATES EQU   *
         CALL  ISPLINK,(,,DEFINED,,),MF=(E,ISPLNK5)
         LTR   R15,R15
         BZ    DEFATTR
         ABEND 61,DUMP
DEFATTR  EQU   *
         CALL  ISPLINK,(,,ATTR1,,),MF=(E,ISPLNK6)
         LTR   R15,R15
         BZ    DEFINT
         ABEND 71,DUMP
         SPACE 3
DEFINT   EQU   *
         CALL  ISPLINK,(,,DAY,,),MF=(E,ISPLNK7)
         LTR   R15,R15
         BZ    DEF10
         ABEND 81,DUMP
LNG3     DC    F'3'
DEF10    CALL  ISPLINK,(,,CMNERAUT,,),MF=(E,ISPLNKC)
         LTR   R15,R15
         BZ    DEF20
         ABEND 81,DUMP
DEF20    CALL  ISPLINK,(,,CMNERDAT,,),MF=(E,ISPLNKD)
         LTR   R15,R15
         BZ    DEF30
         ABEND 82,DUMP
DEF30    CALL  ISPLINK,(,,CMNERCA1,,),MF=(E,ISPLNKE)
         LTR   R15,R15
         BZ    RACFINQ
         ABEND 82,DUMP
*
*        OBTAIN RACF INFORMATION ABOUT THIS USER
*
RACFINQ  EQU   *
         LA    R15,USERID
         MVI   USERL,L'USERID
         TRT   USERID,BLANKTAB     FIND TRUE LENGTH
         BZ    RFQ10               NO BLANKS, THEN MUST BE MAX
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,USERL            AND STORE IT
RFQ10    LA    R1,AUTH
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         TM    NEXTSW,X'01'        Q. NEXT?
         BZ    RACFINQ2            A. NO.
         ICHEINTY NEXT,MF=(E,LOCATE),ENTRY=USERL,WKAREA=WORK
         B     RACFINQ3
RACFINQ2 ICHEINTY LOCATE,MF=(E,LOCATE),ENTRY=USERL,WKAREA=WORK
RACFINQ3 LR    R14,R15
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    DISPL
         CH    R14,=H'12'          NOT FOUND ? ? ? ?
         BE    DISPLNF
         ABEND 91,DUMP
DISPLNF  EQU   *
         ST    R14,RETCD
         CALL  ISPLINK,(VPUT,VRETCD),MF=(E,ISPLNK8)
         B     RETURN1
         DS    0H
DISPL    EQU   *
         LA    R2,WORK+X'1C'       LENGTH OF FIRST FIELD (GROUP)
         LH    R3,0(R2)
         BCTR  R3,0
         EX    R3,MVCGRP
         LA    R2,3(R3,R2)         NEXT FIELD (OWNER)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCOWNER
         LA    R2,3(R3,R2)         NEXT FIELD(NAME)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCNAME
         LA    R2,3(R3,R2)         NEXT FIELD(DEFINED)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCDEF
         CALL  CMNSUB,(DEFPACK,DEFINED),MF=(E,CMNSUBL)
         LA    R2,3(R3,R2)         NEXT FIELD(LAST USED)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCDEF
         MVC   LDATE,DEFINED       MOVE IN DEFAULT
         MVC   WORKDAT,DEFPACK+1   MOVE IN WORK DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         LR    R11,R2
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   L0010
         MVC   WORKDAT,DEFPACK+1   MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     CHECK FOR PLUS
         BE    L0005               YES,OKAY
         CLI   WORKDAT+2,X'0F'     CHECK FOR UNSIGNED
         BNE   L0010               NO, THEN NO GOOD
L0005    CALL  CMNSUB,(DEFPACK,LDATE),MF=(E,CMNSUBL)
L0010    LR    R2,R11
         LA    R2,3(R3,R2)         NEXT FIELD(LCHNG)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCDEF
         MVC   LCHNG,DEFINED       MOVE IN DEFAULT
         MVC   WORKDAT,DEFPACK+1   MOVE IN WORK DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         LR    R11,R2
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   L0020
         CLI   WORKDAT,X'00'
         BE    L0020
         MVC   WORKDAT,DEFPACK+1   MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     CHECK FOR PLUS
         BE    L0015               YES,OKAY
         CLI   WORKDAT+2,X'0F'     CHECK FOR UNSIGNED
         BNE   L0020               NO, THEN NO GOOD
L0015    CALL  CMNSUB,(DEFPACK,LCHNG),MF=(E,CMNSUBL)
L0020    LR    R2,R11
         LA    R2,3(R3,R2)         NEXT FIELD(PASSINT)
         SR    R15,R15
         IC    R15,2(R2)           PASSWORD INTERVAL
         CVD   R15,DBLWRD
         MVC   DAYE(4),=X'40202020'
         ED    DAYE,DBLWRD+6
         MVC   DAY,DAYE+1
         LA    R2,3(R2)            NEXT FIELD(ATTR1)
         LA    R5,ATTR1            FIRST ATTRIBUTE
         MVI   ATTR1,C' '          CLEAR
         MVC   ATTR1+1(59),ATTR1
         TM    2(R2),X'80'         ADSP ? ? ? ?
         BNO   NATTR2
         MVC   0(10,R5),=CL10'ADSP'
         LA    R5,10(R5)           NEXT ATTRIBUTE
NATTR2   EQU   *
         LA    R2,3(R2)            ATTR2
         TM    2(R2),X'80'         SPECIAL ? ? ? ?
         BNO   NATTR3
         MVC   0(10,R5),=CL10'SPECIAL'
         LA    R5,10(R5)
NATTR3   EQU   *
         LA    R2,3(R2)            ATTR 3
         TM    2(R2),X'80'         OPERATIONS
         BNO   NATTR4
         MVC   0(10,R5),=CL10'OPERATIONS'
         LA    R5,10(R5)
NATTR4   EQU   *
         LA    R2,3(R2)            ATTR4
         TM    2(R2),X'80'         REVOKE ? ? ? ?
         BNO   NATTR5
         MVC   0(10,R5),=CL10'REVOKED'
         LA    R5,10(R5)
NATTR5   EQU   *
         LA    R2,3(R2)            ATTR5
         TM    2(R2),X'80'         GRPACC ? ? ? ?
         BNO   NATTR6
         MVC   0(10,R5),=CL10'GRPACC'
         LA    R5,10(R5)
NATTR6   EQU   *
         LA    R2,3(R2)            ATTR 6
         TM    2(R2),X'80'         AUDITOR ? ? ? ?
         BNO   NUMCONS
         MVC   0(10,R5),=CL10'AUDITOR'
NUMCONS  EQU   *
         LA    R2,3(R2)            NEXT FIELD(CLASS AUTHORIZATIONS)
         LH    R6,0(R2)            LENGTH OF CLASS NAMES
         LA    R15,2(R2)           POSITION TO FIRST CLASS NAME
         LA    R2,2(R2,R6)         POINT TO NUMBER OF CONNECTS LENGTH
         LTR   R6,R6               ARE THERE ANY CLASSES
         BZ    CONTCK              NO, THEN GO CHECK CONNECTS
         SRL   R6,3                DIVIDE BY 8 TO GET NUM OF AUTHS
         CH    R6,=H'3'            GREATER THAN MAX? ? ?
         BL    *+8                 NO, THEN CONTINUE
         LA    R6,3                SET MAX
         LA    R1,CMNERCL1         GET BEGINING CLASS
CL0010   MVC   0(8,R1),0(R15)      MOVE IN CLASS
         LA    R15,8(R15)          ADVANCE SOURCE POINTER
         LA    R1,8(R1)            ADVANCE TARGET POINTER
         BCT   R6,CL0010           AND LOOP UNTIL DONE
CONTCK   LH    R6,2(R2)            NUMBER OF CONNECTS
         LTR   R6,R6               ANY CONNECTS ? ? ? ?
         BZ    DAT010              NO
         CVD   R6,DBLWRD
         MVC   DAYE,=X'40202020'
         ED    DAYE,DBLWRD+6
         MVC   CON(3),DAYE+1
         LA    R3,4(R2)            FIRST CONNECT
         LA    R5,GRP1             FIRST DISPLAY
         CH    R6,=H'6'            LIMIT TO 5
         BL    OK5
         LA    R6,5
OK5      EQU   *
         MVC   0(8,R5),2(R3)
         LA    R5,L'GRP1(R5)       NEXT DISPLAY
         LA    R3,8(R3)         NEXT CONNECT
         BCT   R6,OK5
DAT010   EQU   *                   FILL USER DATA FIELD
         LH    R3,0(R2)            LENGTH OF NUMBER OF CONNECTS FIELD
         LA    R2,2(R3,R2)         ADVANCE TO CONNECT GROUPS
         LH    R3,0(R2)            LENGTH OF CONNECT GROUPS
         LA    R2,2(R3,R2)         ADVANCE TO INSTALLATION DATA
         MVI   CMNERDAT,C' '       CLEAR OUT DIALOG VARIBLE
         MVC   CMNERDAT+1(L'CMNERDAT-1),CMNERDAT
         MVC   CMNERCA1,=CL3'NO'
         MVC   CMNERCA2,=CL3'NO'   SET DEFAULT CAPABILITIES
         MVC   CMNERCA3,=CL3'NO'
         XR    R3,R3               CLEAR R3
         IC    R3,2(R2)            GET LENGTH OF DATA
         CH    R3,=H'31'           CHECK IF LESS THAN MAX
         BL    DAT020              YES--
         MVC   CMNERDAT,3(R2)      MOVE IN DATA
         CLI   33(R2),0            CHECK FOR CAPABILITY DELIMETER
         BNE   OWNAME              NOT THERE, THEN BYPASS
         CLI   34(R2),C'N'         CHECK FOR CAPABILITIES
         BE    DAT011
         MVC   CMNERCA1,=C'YES'
DAT011   CLI   35(R2),C'N'
         BE    DAT012
         MVC   CMNERCA2,=C'YES'
DAT012   CLI   36(R2),C'N'
         BE    OWNAME
         MVC   CMNERCA3,=C'YES'
         B     OWNAME
DAT020   LTR   R3,R3               CHECK TO SEE IF ZERO
         BZ    OWNAME              YES, THEN NOTHING THERE
         BCTR  R3,0                REDUCE FOR MOVE
         EX    R3,MVCDAT           MOVE IN USERDATA
OWNAME   EQU   *
         MVC   OWNERL+1(L'MOWNER),MOWNER
         LA    R15,MOWNER          COMPUTE TRUE LENGTH
         MVI   OWNERL,L'MOWNER     SET MAX
         TRT   MOWNER,BLANKTAB     FIND FIRST BLANK
         BZ    OWN0010
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,OWNERL
OWN0010  LA    R1,AUTH
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R2,WORK2
         ICHEINTY MF=(E,LOCATEO),ENTRY=OWNERL,WKAREA=(R2)
         LR    R14,R15
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    MOVEONM
         CH    R14,=H'12'          NOT FOUND ? ? ? ?
         BE    DISPLNFO
         ABEND 92,DUMP
DISPLNFO EQU   *
         MVC   ONAME,=CL20'**NOT FOUND**'
MOVEONM  EQU   *
         L     R2,WORK2
         LA    R2,X'1C'(R2)
         LH    R3,0(R2)            LENGTH
         BCTR  R3,0
         EX    R3,MVCONAME
*
*                                  GET UACC FROM CONNECT PROFILE
*
         MVI   CONKEY,17           SET MAX LENGTH
         MVC   CONKEY+1(17),=CL17' ' CLEAR IT
         MVC   CONKEY+1(L'USERID),USERID  MOVE IN USERIT
         TRT   CONKEY+1(L'USERID+1),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),0             MOVE IN X'00'
         MVC   1(L'MGROUP,R1),MGROUP
         TRT   CONKEY+1(17),BLANKTAB FIND END OF KEY
         BZ    INQ10               NOT FOUND, THEN MUST BE MAX
         LA    R15,CONKEY+1        FIRST BYTE
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,CONKEY
INQ10    L     R2,WORK2
         LA    R1,AUTH
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            GET AUTHORIATION
         ICHEINTY LOCATE,MF=(E,TY3),WKAREA=(R2),ENTRY=CONKEY
         LTR   R15,R15
         BZ    INQ20               OKAY
         ST    R15,RETCD           INFORM CMNER11 - NEXT NOT THERE
         CALL  ISPLINK,(VPUT,VRETCD),MF=(E,ISPLNK8)
         B     RETURN1
INQ20    LA    R2,X'1E'(R2)        GET ADDR OF UACC
         TM    0(R2),X'80'        SET UP GROUP'S UACC
         BNO   INQ21
         MVC   CMNERUAC,=CL8'ALTER'
         B     INQ30
INQ21    TM    0(R2),X'40'
         BNO   INQ22
         MVC   CMNERUAC,=CL8'CONTROL'
         B     INQ30
INQ22    TM    0(R2),X'20'
         BNO   INQ23
         MVC   CMNERUAC,=CL8'UPDATE'
         B     INQ30
INQ23    TM    0(R2),X'10'
         BNO   INQ24
         MVC   CMNERUAC,=CL8'READ'
         B     INQ30
INQ24    MVC   CMNERUAC,=CL8'NONE'
*
*                                  PROCESS GROUP PROFILE
*
INQ30    MVI   GRPLN,8             SET MAX GROUP LENGTH
         TRT   MGROUP,BLANKTAB     CHECK FOR ANY BLANKS
         BZ    INQ40               NONE, THEN MUST BE MAX
         LA    R15,MGROUP          OTHERWISE COMPUTE
         SR    R1,R15                       TRUE LENGTH
         STC   R1,GRPLN            AND STORE IT
         CNOP  0,4
INQ40    ICHEACTN TESTS=(TST1),MF=(E,ACTLSTG)  RELOCATE RACF STUFF
         CNOP  0,4
         ICHETEST FLDATA=(8,USERID),MF=(E,TST1)
         L     R2,WORK2
         ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=(R2),OPTIONS=(FLDEF),      X
               MF=(E,TY4),ACTIONS=ACTLSTG
         LR    R14,R15             PRESERVE RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14             CHECK RETURN
         BZ    INQ50
         ABEND 62,DUMP
INQ50    EQU   *
         LA    R2,X'1E'(R2)        GET TO ACCESS BYTE
         TM    0(R2),X'80'
         BNO   INQ51
         MVC   CMNERAUT,=CL8'JOIN' SET UP GROUP AUTHORITIES
         B     RETURN
INQ51    TM    0(R2),X'40'
         BNO   INQ52
         MVC   CMNERAUT,=CL8'CONNECT'
         B     RETURN
INQ52    TM    0(R2),X'20'
         BNO   INQ53
         MVC   CMNERAUT,=CL8'CREATE'
         B     RETURN
INQ53    TM    0(R2),X'10'
         BNO   INQ54
         MVC   CMNERAUT,=CL8'USE'
         B     RETURN
INQ54    MVC   CMNERAUT,=CL8'255255?'
DISP     EQU   *
RETURN   EQU   *
         ST    R15,RETCD
         CALL  ISPLINK,(VPUT,VARIAB),VL
         LTR   R15,R15
         BZ    RETURN1
         ABEND 99,DUMP
         DS    0H
RETURN1  SR    R1,R1               INSURE NOT AUTHORIZED ON EXIT
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
TERME    EQU   *
         L     R1,WORK2
         FREEMAIN R,LV=400,A=(1)
         FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         SPACE 3
         TITLE '***** CONSTANTS *****'
*   CONSTANT SECTION
*
*  DIALOG MANAGER SERVICES
*
VCOPY    DC    CL8'VCOPY'
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VDELETE  DC    CL8'VDELETE'
DISPLAY  DC    CL8'DISPLAY'
*
*  VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG      DC    F'4'
LNG8     DC    F'8'
LNG10    DC    F'10'
LNG12    DC    F'12'
LNG20    DC    F'20'
LNG21    DC    F'21'
LNG30    DC    F'30'
*
*  VARIABLE NAMES
*
VNXTSW   DC    C'(CMNERNXT)'
INTRL    DC    C'(CMNERINT)'
VRETCD   DC    C'(CMNERRC)'
VGUID    DC    C'(CMNERUID)'
VDAT     DC    C'(CMNERDAT)'
DEFINEL  DC    C'(CMNERDEF CMNERLUD CMNERLCH)'
NAMES    DC    C'(CMNERGRP '
         DC    C'CMNEROWN '
         DC    C'CMNERGP1 '
         DC    C'CMNERGP2 '
         DC    C'CMNERGP3 '
         DC    C'CMNERGP4 '
         DC    C'CMNERGP5 '
         DC    C'CMNERCON)'
VAUT     DC    C'(CMNERAUT '
         DC    C'CMNERUAC '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3)'
VCAP     DC    C'(CMNERCA1 '
         DC    C'CMNERCA2 '
         DC    C'CMNERCA3)'
NAMEL    DC    C'(CMNERNAM CMNERONM)'
ATTRL    DC    C'(CMNERAT1 '
         DC    C'CMNERAT2 '
         DC    C'CMNERAT3 '
         DC    C'CMNERAT4 '
         DC    C'CMNERAT5 '
         DC    C'CMNERAT6)'
VARIAB   DC    C'(CMNERGRP '
         DC    C'CMNEROWN '
         DC    C'CMNERNAM '
         DC    C'CMNERONM '
         DC    C'CMNERDEF '
         DC    C'CMNERLUD '
         DC    C'CMNERLCH '
         DC    C'CMNERAT1 '
         DC    C'CMNERAT2 '
         DC    C'CMNERAT3 '
         DC    C'CMNERAT4 '
         DC    C'CMNERAT5 '
         DC    C'CMNERAT6 '
         DC    C'CMNERAUT '
         DC    C'CMNERUAC '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3 '
         DC    C'CMNERDAT '
         DC    C'CMNERINT '
         DC    C'CMNERGP1 '
         DC    C'CMNERGP2 '
         DC    C'CMNERGP3 '
         DC    C'CMNERGP4 '
         DC    C'CMNERGP5 '
         DC    C'CMNERCA1 '
         DC    C'CMNERCA2 '
         DC    C'CMNERCA3 '
         DC    C'CMNERCON '
         DC    C'CMNERUID '
         DC    C'CMNERRC)'
VUNAME   DC    CL8'CMNERUID'
*
*  VARIABLE TYPES
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
*
*  SERVICE MODES
*
VLMODE   DC    CL8'LOCATE'
VMMODE   DC    CL8'MOVE'
*
*  MISCELLANEOUS CONTSANT FIELDS
*
MVCDAT   MVC   CMNERDAT(0),3(R2)
MVCCON   MVC   0(0,R5),2(R2)
MVCGRP   MVC   MGROUP(0),2(R2)
MVCOWNER MVC   MOWNER(0),2(R2)
MVCNAME  MVC   NAME(0),2(R2)
MVCONAME MVC   ONAME(0),2(R2)
MVCDEF   MVC   DEFPACK+1(0),2(R2)
AUTH     DC    C'AUTH'
PACKTAB  DC    10X'00'             00-09
         DC    6X'01'              0A-0F
         DC    10X'00'             10-19
         DC    6X'01'              1A-1F
         DC    10X'00'             20-29
         DC    6X'01'              2A-2F
         DC    10X'00'             30-39
         DC    6X'01'              3A-3F
         DC    10X'00'             40-49
         DC    6X'01'              4A-4F
         DC    10X'00'             50-59
         DC    6X'01'              5A-5F
         DC    10X'00'             60-69
         DC    6X'01'              6A-6F
         DC    10X'00'             70-79
         DC    6X'01'              7A-7F
         DC    10X'00'             80-89
         DC    6X'01'              8A-8F
         DC    10X'00'             90-99
         DC    6X'01'              9A-9F
         DC    96X'01'             A0-FF
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         EJECT
*
*        RACF MACROS
*
ACTLST1  ICHEACTN MF=L,FIELD=DFLTGRP
ACTLST2  ICHEACTN MF=L,FIELD=AUTHOR
ACTLST3  ICHEACTN MF=L,FIELD=PGMRNAME
ACTLST4  ICHEACTN MF=L,FIELD=AUTHDATE
ACTLST5  ICHEACTN MF=L,FIELD=LJDATE
ACTLST5A ICHEACTN MF=L,FIELD=PASSDATE
ACTLST5B ICHEACTN MF=L,FIELD=PASSINT
ACTLST6  ICHEACTN MF=L,FIELD=FLAG1
ACTLST7  ICHEACTN MF=L,FIELD=FLAG2
ACTLST8  ICHEACTN MF=L,FIELD=FLAG3
ACTLST9  ICHEACTN MF=L,FIELD=FLAG4
ACTLSTA  ICHEACTN MF=L,FIELD=FLAG5
ACTLSTB  ICHEACTN MF=L,FIELD=FLAG6
ACTLSTC  ICHEACTN MF=L,FIELD=CONGRPCT
ACTLSTD  ICHEACTN MF=L,FIELD=CONGRPNM
ACTLSTE  ICHEACTN MF=L,FIELD=CLNAME
ACTLSTF  ICHEACTN MF=L,FIELD=UACC
ACTLSTH  ICHEACTN MF=L,FIELD=INSTDATA
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
*
*  AREA TO BE DYNAMICALLY ACQUIRED
*
DYNWK    EQU   *
DBLWRD   DC    D'0'
DAYE     DC    X'40202020'
USERADDR DC    F'0'
RETCD    DS    F
WORK2    DC    F'0'
TIOT     DC    F'0'
OWNERL   DC    X'08'
         DC    CL8' '
USERL    DC    X'08'               USER LENGTH
USERID   DC    CL8' '
GRPLN    DS    X
MGROUP   DC    CL8' '
MOWNER   DC    CL8' '
GRP1     DC    CL8' '
GRP2     DC    CL8' '
GRP3     DC    CL8' '
GRP4     DC    CL8' '
GRP5     DC    CL8' '
CON      DC    CL8' '
NAME     DC    CL20' '
ONAME    DC    CL20' '
DEFINED  DC    CL12' '             DATE DEFINED
LDATE    DC    CL12' '             DATE LAST USED
LCHNG    DC    CL12' '             DATE LAST CHANGED
ATTR1    DC    CL10' '             ATTRIBUTES
         DC    CL10' '
         DC    CL10' '
         DC    CL10' '
         DC    CL10' '
         DC    CL10' '
CMNERCA1 DS    CL3
CMNERCA2 DS    CL3
CMNERCA3 DS    CL3
DAY      DC    CL3' '
CMNERAUT DC    CL8' '
CMNERUAC DC    CL8' '
CMNERCL1 DC    CL8' '
CMNERCL2 DC    CL8' '
CMNERCL3 DC    CL8' '
CMNERDAT DC    CL30' '
MESSAGE  DC    CL21' '
LDATA    EQU   *-MGROUP
DEFPACK  DC    PL4'0'              DATE DEFINED PACKED
WORKDAT  DC    CL3' '
NEXTSW   DC    X'00'
CONKEY   DS    CL18' '
WORK     DC    F'400'
         DC    400X'00'
LOCATEO  ICHEINTY LOCATE,MF=L,TYPE='USR',WKAREA=WORK,                  X
               ACTIONS=(ACTLST3,ACTLST7)
LOCATE   ICHEINTY LOCATE,MF=L,TYPE='USR',WKAREA=WORK,                  X
               ACTIONS=(ACTLST1,                                       X
               ACTLST2,                                                X
               ACTLST3,                                                X
               ACTLST4,                                                X
               ACTLST5,                                                X
               ACTLST5A,                                               X
               ACTLST5B,                                               X
               ACTLST6,                                                X
               ACTLST7,                                                X
               ACTLST8,                                                X
               ACTLST9,                                                X
               ACTLSTA,                                                X
               ACTLSTB,                                                X
               ACTLSTE,                                                X
               ACTLSTC,                                                X
               ACTLSTD,                                                X
               ACTLSTH)
TY3      ICHEINTY LOCATE,MF=L,TYPE='CON',ACTIONS=ACTLSTF
TY4      ICHEINTY LOCATE,MF=L,TYPE='GRP',ACTIONS=ACTLSTG
ACTLSTG  ICHEACTN MF=L,FIELD=USERACS,TESTS=(TST1)
TST1     ICHETEST MF=L,FIELD=USERID,COND=EQ
ISPLNK1  CALL  ,(VDEF,VRETCD,RETCD,FIXED,LNG),MF=L
ISPLNK2  CALL  ,(VDEF,VGUID,USERID,CHAR,LNG8),VL,MF=L
ISPLNK3  CALL  ,(VDEF,NAMES,MGROUP,CHAR,LNG8),VL,MF=L
ISPLNK4  CALL  ,(VDEF,NAMEL,NAME,CHAR,LNG20),VL,MF=L
ISPLNK5  CALL  ,(VDEF,DEFINEL,DEFINED,CHAR,LNG12),VL,MF=L
ISPLNK6  CALL  ,(VDEF,ATTRL,ATTR1,CHAR,LNG10),VL,MF=L
ISPLNK7  CALL  ,(VDEF,INTRL,DAY,CHAR,LNG3),VL,MF=L
ISPLNK8  CALL  ,(VPUT,VRETCD,SHARED),MF=L
ISPLNK9  CALL  ,(VDEF,VNXTSW,NEXTSW,FIXED,LNG1),VL,MF=L
ISPLNKA  CALL  ,(VGET,VNXTSW,),MF=L
ISPLNKB  CALL  ,(VGET,VGUID,),MF=L
ISPLNKC  CALL  ,(VDEF,VAUT,CMNERAUT,CHAR,LNG8),VL,MF=L
ISPLNKD  CALL  ,(VDEF,VDAT,CMNERDAT,CHAR,LNG30),VL,MF=L
ISPLNKE  CALL  ,(VDEF,VCAP,CMNERCA1,CHAR,LNG3),VL,MF=L
CMNSUBL  CALL  ,(DEFPACK,DEFINED),MF=L
DYNWKLN  EQU  *-DYNWK
         LTORG
ABENDRT  EQU  *
         LR    R12,R15
         DROP  R8
         USING ABENDRT,R12
         LR    R2,R1
         LR    R10,R14
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         SDUMP HDR='SPF RACF INTERFACE - ESTAE DUMP',SDATA=(LPA,CSA)
         SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         SETRP WKAREA=(R2),RC=0
         BR    R10
         LTORG
         IHASDWA
         END
./ ADD  NAME=CMNER16
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER16  $PROLOG R11,R12
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER16                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH LOCATES AND FILLS*
*               ALL VARIABLES RELATED TO RACF DATASETS. IT DOES NO    *
*               DISPLAYS AND MUST BE GIVEN CONTROL FROM SPF SELECT    *
*               SERVICES                                              *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R2,R1               COPY ADDR OF DYNAMIC STORAGE
         LA    R3,DYNWKLN          PREPARE TO MOVE STATIC TO DYNAMIC
         LA    R4,DYNWK
         LR    R5,R3
         MVCL  R2,R4               MOVE IT
         LR    R8,R1               SET ADDRESSIBILITY
         USING DYNWK,R8
         BAL   R10,SETUP           GO DO ALL DEFIE
         MVC    CMNEROWN,=CL8' '
         MVC    CMNERAUD,=CL8' '
         MVC    CMNERUNI,=CL8' '
         MVC    CMNERUAC,=CL8' '
         MVC    CMNERCDT,=CL12' '
         MVC    CMNERLUP,=CL12' '
         CALL  ISPLINK,(VPUT,LIST3),VL
         MVC   CMNERTUI,=CL8' '
         MVC   CMNERTAC,=CL8' '
         MVC   CMNERTAU,=CL8' '
         CALL  ISPLINK,(VPUT,LIST2),VL
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         MVI   DSNLN,44            SET MAX DATASET LENGTH
         TRT   CMNERWDS,BLANKTAB   CHECK FOR TRAILING BLANKS
         BZ    MN005               NONE, THEN CONTINUE
         LA    R4,CMNERWDS         GET BEGINING OF DSN
         SR    R1,R4               SUBTRACT FROM FIRST BLANK GIVING LEN
         STC   R1,DSNLN            STORE IT
MN005    TM    CMNERNXT,X'01'      IS THIS A REQUEST FOR NEXT
         BZ    MN010
         ICHEINTY NEXT,ENTRY=DSNLN,WKAREA=WORK1,VOLUME=CMNERVOL,       X
               MF=(E,TY1)
         B     MN020
MN010    ICHEINTY LOCATE,ENTRY=DSNLN,WKAREA=WORK1,VOLUME=CMNERVOL,     X
               MF=(E,TY1)
MN020    LTR   R15,R15             CHECK RETURN
         BZ    MN030               OKAY
         ST    R15,CMNERRC         NO-- STORE RETURN CODE
         CALL  ISPLINK,(VPUT,VRETCD,SHARED)
         B     MN900               AND RETURN
MN030    MVC   CMNEROWN,WOWN       MOVE IN OWNERER
         MVC   WORKDAT4+1(3),WLCRDT
         CALL  CMNSUB,(WORKDAT4,CMNERCDT),MF=(E,CMNSUB)
         MVC   CMNERLUP,CMNERCDT   SET DEFAULT LAST UPDATE
         MVC   WORKDAT,WLCHG       MOVE IN LAST CHANGE DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   MN040
         MVC   WORKDAT,WLCHG       MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     IS IT A PLUS
         BE    MN035               YES, THEN GO CONVERT
         CLI   WORKDAT+2,X'0F'     IS IT UNSIGNED
         BNE   MN040               NO, THEN MUST BE GARBAGE
MN035    MVC   WORKDAT4+1(3),WLCHG
         CALL  CMNSUB,(WORKDAT4,CMNERLUP),MF=(E,CMNSUB)
MN040    XR    R4,R4               CLEAR R4
         IC    R4,DSNLN            GET LENGTH OF DSN RETRIEVED
         LA    R5,CMNERWDS         GET ADDR OF DSN
         LA    R5,0(R4,R5)         GET FIRST BYTE BEYOND DATA
         LA    R6,44               SET MAX LENGTH
         SR    R6,R4               COMPUTE DIFFERENCE
         LTR   R6,R6               CHECK IF ZERO
         BZ    MN050               YES, THEN CONTINUE
MN045    MVI   0(R5),C' '
         LA    R5,1(R5)
         BCT   R6,MN045
MN050    MVC   CMNERVOL,WVOL       MOVE IN VOLUME
         MVC   CMNERUAC,=CL7'ALTER'
         TM    WUAC,X'80'          WAS ACCESS ALTER
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'CONTROL'
         TM    WUAC,X'40'          WAS ACCESS CONTROL
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'UPDATE'
         TM    WUAC,X'20'          WAS ACCESS UPDATE
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'READ'
         TM    WUAC,X'10'          WAS ACCESS READ
         BO    MN060
         MVC   CMNERUAC,=CL7'NONE'
MN060    TM    WAUD,X'80'          CHECK AUDIT FLAGS
         BNO   MN061
         MVC   CMNERAUD,=CL8'ALL'
         B     MN065
MN061    TM    WAUD,X'40'
         BNO   MN062
         MVC   CMNERAUD,=CL8'SUCCESS'
         B     MN065
MN062    TM    WAUD,X'20'
         BNO   MN063
         MVC   CMNERAUD,=CL8'FAILURES'
         B     MN065
MN063    MVC   CMNERAUD,=CL8'NONE'
MN065    EQU   *
         MVC   CMNERUNI,=CL8'UNKNOWN'
         CLC   WDEVTYPX,=8X'FF'      ANYTHING IN CHARACTER FIELD
         BE    MN065A              NO- THEN WILL HAVE TO TRANSALATE
         MVC   CMNERUNI,WDEVTYPX   YES, THEN MOVE IT IN AND GET OUT
         B     MN069
MN065A   CLC   WDEVTYP,=4X'FF'       ANYTHIN IN UCBTYP FIELD
         BE    MN069               NO- THEN GET OUT
         CLI   WDEVTYP+2,X'20'       IS THIS A DISK ? ? ?
         BE    MN065C              YES, THEN GO PROCESS TYPE
         CLI   WDEVTYP+2,X'80'       IS THIS A TAPE ? ? ?
         BNE   MN069               NO, THEN GIVE UP
         CLI   WDEVTYP+3,X'01'       IS THIS A 2400 TYPE
         BNE   MN065B              NO, THEN CHECK NEXT
         MVC   CMNERUNI,=CL8'2400'
         B     MN069
MN065B   CLI   WDEVTYP+3,X'03'       IS THIS A 3400 TYPE ? ? ?
         BNE   MN069               NO, THEN GIVE UP
         MVC   CMNERUNI,=CL8'3400'
         B     MN069
MN065C   CLI   WDEVTYP+3,X'09'       IS THIS A 3330 MODEL 1 OR 2
         BNE   MN065D              NO, THEN CHECK FURTHER
         MVC   CMNERUNI,=CL8'3330'
         B     MN069
MN065D   CLI   WDEVTYP+3,X'0B'       IS THIS A 3350? ? ?
         BNE   MN065E              NO, THEN CHECK FURTH
         MVC   CMNERUNI,=CL8'3350'
         B     MN069
MN065E   CLI   WDEVTYP+3,X'0D'       IS THIS A 3330 MOD 11 ? ? ?
         BNE   MN069               NO, THEN GIVE UP (WE DON'T HAVE ANY
*                                  OTHER TYPES)
         MVC   CMNERUNI,=CL8'3330-11'
MN069    LH    R5,WCT              GET NUMBER IN ACCESS LIST
         LTR   R5,R5               ANYBODY THERE?
         BZ    MN100               NOPE--
         M     R4,=F'11'           11 BYTES FOR EACH ENTRY IN LIST
         LA    R5,32(R5)           ADD 32 BYTES FOR WORK AREA IN FRONT
         LR    R0,R5
         GETMAIN R,LV=(0)          GET STORAGE FOR WORKAREA FOR LIST
         LR    R4,R1               COPY ADDR
         ST    R5,0(R4)
         ICHEINTY LOCATE,ENTRY=DSNLN,WKAREA=(R4),VOLUME=CMNERVOL,      X
               MF=(E,TY2)
         LTR   R15,R15             CHECK RETURN
         BZ    MN070               GOOD--
         ABEND 2,DUMP
MN070    LA    R6,11               LOAD INCREMENT
         LH    R3,X'1C'(R4)        GET LENGTH OF LIST
         LA    R7,X'1E'(R4,R3)     COMPUTE END OF LIST
         BCTR  R7,0                LAST BYTE OF LIST
         LA    R3,X'1E'(R4)
MN080    MVC   CMNERTUI,0(R3)      MOVE IN USERID
         MVC   CMNERTAC,9(R3)      MOVE IN ACCESS COUNT
         MVC   CMNERTAU,=CL7'ALTER'
         TM    8(R3),X'80'
         BO    MN090
         MVC   CMNERTAU,=CL7'CONTROL'
         TM    8(R3),X'40'
         BO    MN090
         MVC   CMNERTAU,=CL7'UPDATE'
         TM    8(R3),X'20'
         BO    MN090
         MVC   CMNERTAU,=CL7'READ'
         TM    8(R3),X'10'
         BO    MN090
         MVC   CMNERTAU,=CL7'NONE'
MN090    CALL  ISPLINK,(VTBADD,TABLE,LIST2)
         BXLE  R3,R6,MN080         LOOP THROUGH ACCESS LIST
         CALL  ISPLINK,(VTBTOP,TABLE)
         LR    R0,R5               FREE STORAGE
         FREEMAIN R,LV=(0),A=(R4)
MN100    CALL  ISPLINK,(,LIST3),MF=(E,ISPLNKB)
         FREEMAIN R,LV=DYNWKLN,A=(R8)
MN900    SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         $EPILOG
         TITLE '****** SETUP ROUTINE *******'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERWDS),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERVOL),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNEROWN),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERUAC),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERCDT),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERNXT),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTUI),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERTAU),MF=(E,ISPLNK9)
         CALL  ISPLINK,(,,CMNERTAC),MF=(E,ISPLNKA)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNKC)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK7)
         CALL  ISPLINK,(VTBTOP,TABLE)
         BR    R10                 RETURN
         TITLE '***** CONSTANT AREAS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VREPLACE DC    CL8'VREPLACE'
VTBTOP   DC    CL8'TBTOP'
VTBADD   DC    CL8'TBADD'
*
*  DIALOG MANAGER VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG12    DC    F'12'
LNG44    DC    F'44'
*
*  DIALOG MANAGER VARIABLES
*
VDSN     DC    C'(CMNERWDS)'
VTUID    DC    C'(CMNERTUI CMNERAUD CMNERUNI)'
VTAUTH   DC    C'(CMNERTAU)'
VTACC    DC    C'(CMNERTAC)'
VVOL     DC    C'(CMNERVOL)'
VOWN     DC    C'(CMNEROWN)'
VUAC     DC    C'(CMNERUAC)'
VDATS    DC    C'(CMNERCDT CMNERLUP)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERWDS CMNERNXT CMNERVOL)'
LIST2    DC    C'(CMNERTUI CMNERTAC CMNERTAU)'
LIST3    DC    C'(CMNERWDS '
         DC    C'CMNERVOL '
         DC    C'CMNEROWN '
         DC    C'CMNERRC '
         DC    C'CMNERAUD '
         DC    C'CMNERUNI '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERLUP '
         DC    C'CMNERNXT)'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
TABLE    DC    CL8'CMNERTDS'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=ACLCNT,MF=L
ACT3     ICHEACTN FIELD=UNIVACS,MF=L
ACT4     ICHEACTN FIELD=CREADATE,MF=L
ACT5     ICHEACTN FIELD=LCHGDAT,MF=L
ACT6     ICHEACTN FIELD=VOLSER,MF=L
ACT7     ICHEACTN FIELD=ACL,MF=L
ACT8     ICHEACTN FIELD=AUDIT,MF=L
ACT9     ICHEACTN FIELD=DEVTYP,MF=L
ACTA     ICHEACTN FIELD=DEVTYPX,MF=L
*
*
*
FIRSTSW  DC    X'00'
PACKTAB  DC    10X'00'             00-09
         DC    6X'01'              0A-0F
         DC    10X'00'             10-19
         DC    6X'01'              1A-1F
         DC    10X'00'             20-29
         DC    6X'01'              2A-2F
         DC    10X'00'             30-39
         DC    6X'01'              3A-3F
         DC    10X'00'             40-49
         DC    6X'01'              4A-4F
         DC    10X'00'             50-59
         DC    6X'01'              5A-5F
         DC    10X'00'             60-69
         DC    6X'01'              6A-6F
         DC    10X'00'             70-79
         DC    6X'01'              7A-7F
         DC    10X'00'             80-89
         DC    6X'01'              8A-8F
         DC    10X'00'             90-99
         DC    6X'01'              9A-9F
         DC    96X'01'             A0-FF
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         EJECT
         TITLE '***** DYNAMIC DATA AREAS *****'
DYNWK    EQU   *
DSNLN    DC    X'2C'
CMNERWDS DS    CL44
CMNERVOL DS    CL6
CMNEROWN DS    CL8
CMNERUAC DS    CL7
CMNERCDT DS    CL12
CMNERLUP DS    CL12
CMNERNXT DS    X
CMNERTUI DS    CL8
CMNERAUD DS    CL8
CMNERUNI DS    CL8
CMNERTAU DS    CL7
CMNERTAC DS    H
CMNERRC  DC    F'0'
WORKDAT  DS    PL3
WORKDAT4 DC    X'00'
         DC    XL3'000000'
CMNSUB   CALL ,(,,),MF=L
ISPLNK1  CALL ,(VDEF,VDSN,CMNERWDS,CHAR,LNG44),MF=L
ISPLNK2  CALL ,(VDEF,VVOL,CMNERVOL,CHAR,LNG6),MF=L
ISPLNK3  CALL ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK4  CALL ,(VDEF,VUAC,CMNERUAC,CHAR,LNG7),MF=L
ISPLNK5  CALL ,(VDEF,VDATS,CMNERCDT,CHAR,LNG12),MF=L
ISPLNK6  CALL ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK7  CALL ,(VGET,LIST1,SHARED),MF=L
ISPLNK8  CALL ,(VDEF,VTUID,CMNERTUI,CHAR,LNG8),MF=L
ISPLNK9  CALL ,(VDEF,VTAUTH,CMNERTAU,CHAR,LNG7),MF=L
ISPLNKA  CALL ,(VDEF,VTACC,CMNERTAC,FIXED,LNG2),MF=L
ISPLNKB  CALL ,(VPUT,LIST2,SHARED),MF=L
ISPLNKC  CALL ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
TY1      ICHEINTY LOCATE,MF=L,TYPE='DS',ACTIONS=(ACT1,ACT2,ACT3,       X
               ACT4,ACT5,ACT8,ACT9,ACTA,ACT6)
TY2      ICHEINTY LOCATE,MF=L,TYPE='DS',ACTIONS=(ACT7)
WORK1    DC    A(WRK1LEN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    H
WCT      DS    XL2
         DS    XL2
WUAC     DS    X
         DS    XL2
WLCRDT   DS    PL3
         DS    XL2
WLCHG    DS    PL3
         DS    XL2
WAUD     DS    X
         DS    XL2
WDEVTYP  DS    XL4
         DS    XL2
WDEVTYPX DS    XL8
         DS    XL2
WVOL     DS    10CL6
         DS    0F
WRK1LEN  EQU   *-WORK1
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER17
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** LIST GROUP REENTRANT MODULE *****'
CMNER17  $PROLOG R11,R12
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER17                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH LOCATES AND FILLS*
*               ALL VARIABLES RELATED TO RACF GROUPS.   IT DOES NO    *
*               DISPLAYS AND MUST BE GIVEN CONTROL FROM SPF SELECT    *
*               SERVICES                                              *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R2,R1               COPY ADDR OF DYNAMIC STORAGE
         LA    R3,DYNWKLN          PREPARE TO MOVE STATIC TO DYNAMIC
         LA    R4,DYNWK
         LR    R5,R3
         MVCL  R2,R4               MOVE IT
         LR    R8,R1               SET ADDRESSIBILITY
         USING DYNWK,R8
         BAL   R10,SETUP           GO DO ALL DEFIE
         MVC    CMNERTUI,=CL8' '
         MVC    CMNERTAC,=CL8' '
         MVC    CMNERTCT,=CL8' '
         MVC    CMNERTUA,=CL8' '
         MVC    CMNERTAT,=CL12' '
         CALL  ISPLINK,(VPUT,LIST2),VL
         MVC    CMNEROWN,=CL8' '
         MVC    CMNERUAC,=CL8' '
         MVC    CMNERMAU,=CL8' '
         MVC    CMNERSG1,=CL8' '
         MVC    CMNERSG2,=CL8' '
         MVC    CMNERSG3,=CL8' '
         MVC    CMNERSG4,=CL8' '
         MVC    CMNERSG5,=CL8' '
         MVC    CMNERSG6,=CL8' '
         MVC    CMNERSG7,=CL8' '
         MVC    CMNERSG8,=CL8' '
         MVC    CMNERSG9,=CL8' '
         MVC    CMNERSGA,=CL8' '
         MVC    CMNERSGB,=CL8' '
         MVC    CMNERSGX,=CL8' '
         MVC    CMNERNOT,=CL8' '
         MVC    CMNERCDT,=CL12' '
         MVC    CMNERSUG,=CL8' '
         CALL  ISPLINK,(VPUT,LIST3),VL
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         MVI   CMNERMAU,0
         MVI   GRPLN,8             SET MAX GROUP LENGTH
         TRT   CMNERGRP,BLANKTAB   CHECK FOR TRAILING BLANKS
         BZ    MN005               NONE, THEN CONTINUE
         LA    R4,CMNERGRP         GET BEGINING OF DSN
         SR    R1,R4               SUBTRACT FROM FIRST BLANK GIVING LEN
         STC   R1,GRPLN            STORE IT
MN005    TM    CMNERNXT,X'01'      IS THIS A REQUEST FOR NEXT
         BZ    MN010
         ICHEINTY NEXTC,ENTRY=GRPLN,WKAREA=WORK1,                      X
               MF=(E,TY1)
         B     MN020
MN010    ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=WORK1,                     X
               MF=(E,TY1)
MN020    LTR   R15,R15             CHECK RETURN
         BZ    MN030               OKAY
         ST    R15,CMNERRC         NO-- STORE RETURN CODE
         CALL  ISPLINK,(VPUT,VRETCD,SHARED)
         B     MN900               AND RETURN
MN030    MVC   CMNEROWN,WOWN       MOVE IN OWNER
         MVC   CMNERSUG,WLSGRP     MOVE IN SUPERIOR GROUP
         MVC   CMNERNOT,=CL3'NO'
         TM    WNOT,X'80'          CHECK FOR NO TERMUACC
         BO    MN035
         MVC   CMNERNOT,=CL3'YES'
MN035    MVC   WORKDAT4+1(3),WLCRDT
         CALL  CMNSUB,(WORKDAT4,CMNERCDT),MF=(E,CMNSUB)
MN040    XR    R4,R4               CLEAR R4
         IC    R4,GRPLN            GET LENGTH OF GRP RETRIEVED
         LA    R5,CMNERGRP         GET ADDR OF GRP
         LA    R5,0(R4,R5)         GET FIRST BYTE BEYOND DATA
         LA    R6,8                SET MAX LENGTH
         SR    R6,R4               COMPUTE DIFFERENCE
         LTR   R6,R6               CHECK IF ZERO
         BZ    MN050               YES, THEN CONTINUE
MN045    MVI   0(R5),C' '
         LA    R5,1(R5)
         BCT   R6,MN045
MN050    EQU   *
         MVC   CMNERUAC,=CL7'ALTER'
         TM    WUAC,X'80'          WAS ACCESS ALTER
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'CONTROL'
         TM    WUAC,X'40'          WAS ACCESS CONTROL
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'UPDATE'
         TM    WUAC,X'20'          WAS ACCESS UPDATE
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'READ'
         TM    WUAC,X'10'          WAS ACCESS READ
         BO    MN060
         MVC   CMNERUAC,=CL7'NONE'
MN060    LH    R5,WCT              GET NUMBER IN ACCESS LIST
         LTR   R5,R5               ANYBODY THERE?
         BZ    MN070               NOPE--
         M     R4,=F'11'           11 BYTES FOR EACH ENTRY IN LIST
MN070    MVI   CMNERMAU,X'00'      SET USER'S AUTHORITY
         LH    R3,WGCT             GET NUMBER OF SUB GROUPS
         LTR   R3,R3               ANY? ?
         BZ    MN080               NO-
         M     R2,=F'8'            8 BYTES FOR EACH SUB GROUP
MN080    AR    R3,R5               COMPUTE LENGTH OF WORK AREA
         LTR   R3,R3               DO WE NEED IT? ?
         BZ    MN800               NO, THEN GET OUT
         LA    R3,32(R3)           ADD 32 BYTES FO WORK AREA IN FRONT
         LR    R0,R3               SET UP FOR GETMAIN
         GETMAIN R,LV=(0)          GET WORK AREA
         LR    R9,R1               COPY ADDR OF STORAGE
         ST    R3,0(R9)            STORE FOR ICHEINTY
         ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=(R9),MF=(E,TY2)
         LTR   R15,R15             CHECK RETURN
         BZ    MN090               ONLY ZERO IS ACCEPTABLE
         ABEND 3,DUMP
MN090    MVI   CMNERSGX,C' '       SET DEFAULT SUB GROUP INDICATOR
         LA    R5,X'1E'(R9)        PT TO FIRST BYTE
         LH    R4,WGCT             GET NUMBER OF SUBGROUPS
         LTR   R4,R4               ARE THERE ANY? ? ?
         BZ    MN100               NO--
         MVC   CMNERSG1,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG2,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG3,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG4,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG5,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG6,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG7,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG8,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSG9,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSGA,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVC   CMNERSGB,0(R5)      MOVE IN SUBGROUP
         LA    R5,8(R5)            ADVANCE TO NEXT
         BCT   R4,*+8              REDUCE COUNT
         B     MN100               DONE
         MVI   CMNERSGX,C'+'       INDICATE THAT THERE IS MORE
         LH    R5,X'1C'(R9)        COMPUTE BEGINING
         LA    R5,X'1E'(R5,R9)     OF USERS IN GROUP
MN100    LH    R4,WCT
         LA    R5,2(R5)            PAST LENGTH
         LTR   R4,R4               ANY USERS IN GROUP
         BZ    MN130               NO--
MN105    MVC   CMNERTUI,0(R5)      MOVE IN USERID
         MVC   CMNERTAC,=CL7'JOIN' SET UP GROUP AUTHORITIES
         TM    8(R5),X'80'
         BO    MN110
         MVC   CMNERTAC,=CL7'CONNECT'
         TM    8(R5),X'40'
         BO    MN110
         MVC   CMNERTAC,=CL7'CREATE'
         TM    8(R5),X'20'
         BO    MN110
         MVC   CMNERTAC,=CL7'USE'
         TM    8(R5),X'10'
         BO    MN110
         MVC   CMNERTAC,=CL7'255255?'
MN110    CLC   MYID,0(R5)          DETERMIE IF I HAVE AT LEAST
         BNE   MN115
         TM    8(R5),X'C0'                JOIN OR CONNECT AUTHORITY
         BZ    MN115               NO--
         OI    CMNERMAU,X'01'      SET ON FLAG
MN115    MVC   CONID,0(R5)         MOVE IN CONNECT ID
         LA    R14,8               MAX ID LENGTH
         TRT   CONID,BLANKTAB      FIND OUT HOW LONG IT REALLY IS
         BZ    MN116               NO BLANKS, THEN MUST BE 8
         LA    R15,CONID           BEGINING
         SR    R1,R15              SUBTRACT FROM END
         LR    R14,R1              AND PUT IN R14
MN116    XR    R15,R15             CLEAR REG 15
         IC    R15,GRPLN           GET LENGTH OF CURRENT GROUP
         LA    R15,1(R14,R15)      LENGTH = LEN OF USER + LEN OF GRP +1
         STC   R15,CONKEY          STUFF IT FOR LOCATE
         LA    R15,CONID           GET BEGINING
         AR    R15,R14             1ST BYTE BEYOND USER ID
         MVI   0(R15),X'00'        MOVE IN ZEROS BETWEEN USER & GROUP
         MVC   1(L'CMNERGRP,R15),CMNERGRP  MOVE IN GROUP
         MVC   CMNERTAT,=CL12' '   CLEAR FIELDS
         MVC   CMNERTUA,=CL7' '
         ICHEINTY LOCATE,ENTRY=CONKEY,WKAREA=WORKCON,MF=(E,TY3)
         LTR   R15,R15
         BZ    MN120               GOOD
         CH    R15,=H'12'          NOT FOUND
         BE    MN117               OKAY
         ABEND 5,DUMP              ANYTHING ELSE, SAY BYE
MN117    BAL   R10,MNCLR           STUFF CURRENT VARIABLES IN TABLE
         B     MN128               AND GET OUT
MN120    LH    R1,WCINITCT         GET COUNT
         CVD   R1,DBLWD
         MVC   CMNERTCT,=X'4020206B202120'
         ED    CMNERTCT,DBLWD+5
         MVC   CMNERTUA,=CL7'ALTER'
         TM    WCUACC,X'80'        SET UP GROUP'S UACC
         BO    MN122
         MVC   CMNERTUA,=CL7'CONTROL'
         TM    WCUACC,X'40'
         BO    MN122
         MVC   CMNERTUA,=CL7'UPDATE'
         TM    WCUACC,X'20'
         BO    MN122
         MVC   CMNERTUA,=CL7'READ'
         TM    WCUACC,X'10'
         BO    MN122
         MVC   CMNERTUA,=CL7'NONE'
MN122    TM    WCFLG1,X'80'        CHECK ATTRIBUTES
         BNO   MN123
         MVC   CMNERTAT,=CL12'ADSP'
         BAL   R10,MNCLR           STUFF IN TABLE
MN123    TM    WCFLG2,X'80'
         BNO   MN124
         MVC   CMNERTAT,=CL12'SPECIAL'
         BAL   R10,MNCLR           STUFF IN TABLE
MN124    TM    WCFLG3,X'80'
         BNO   MN125
         MVC   CMNERTAT,=CL12'OPERATIONS'
         BAL   R10,MNCLR           STUFF IN TABLE
MN125    TM    WCFLG4,X'80'
         BNO   MN126
         MVC   CMNERTAT,=CL12'REVOKE'
         BAL   R10,MNCLR           STUFF IN TABLE
MN126    TM    WCFLG5,X'80'
         BNO   MN127
         MVC   CMNERTAT,=CL12'GRPACC'
         BAL   R10,MNCLR           STUFF IN TABLE
MN127    CLC   CMNERTUI,=CL8' '    WAS ANYTHING WRITTEN OUT YET? ? ?
         BE    MN128               YES--
         BAL   R10,MNCLR           NO, THEN GO ADD IT TO THE TABLE
MN128    LA    R5,11(R5)           ADVANCE TO NEXT IN LIST
         BCT   R4,MN105            AND LOOP
         SPACE 5
MN130    EQU   *
         CALL  ISPLINK,(VTBTOP,TABLE)
         LR    R0,R3               FREE STORAGE
         FREEMAIN R,LV=(0),A=(R9)
MN800    CALL  ISPLINK,(,LIST3),MF=(E,ISPLNK9)
         FREEMAIN R,LV=DYNWKLN,A=(R8)
MN900    SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         $EPILOG
         TITLE '****** SETUP ROUTINE *******'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERGRP),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNEROWN),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERUAC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERCDT),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERNXT),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERNOT),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNKA)
         CALL  ISPLINK,(,,CMNERSGX),MF=(E,ISPLNKB)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VTBTOP,TABLE)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   MYID,ACEEUSRI
         DROP  R4
         BR    R10                 RETURN
         TITLE '***** TABLE ADD ROUTINE *****'
MNCLR    EQU   *
         CALL  ISPLINK,(VTBADD,TABLE,LIST2)
         MVC   CMNERTUI,=CL8' '    CLEAR ALL TABLE VARIABLES
         MVC   CMNERTAC,=CL7' '
         MVC   CMNERTCT,=CL7' '
         MVC   CMNERTUA,=CL7' '
         MVC   CMNERTAT,=CL12' '
         BR    R10
         TITLE '***** CONSTANT AREAS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VREPLACE DC    CL8'VREPLACE'
VTBTOP   DC    CL8'TBTOP'
VTBADD   DC    CL8'TBADD'
*
*  DIALOG MANAGER VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG12    DC    F'12'
LNG75    DC    F'75'
*
*  DIALOG MANAGER VARIABLES
*
VFLG     DC    C'(CMNERSGX)'
VGRP     DC    C'(CMNERGRP CMNERTUI)'
VOWN     DC    C'(CMNEROWN '
         DC    C'CMNERSUG '
         DC    C'CMNERSG1 '
         DC    C'CMNERSG2 '
         DC    C'CMNERSG3 '
         DC    C'CMNERSG4 '
         DC    C'CMNERSG5 '
         DC    C'CMNERSG6 '
         DC    C'CMNERSG7 '
         DC    C'CMNERSG8 '
         DC    C'CMNERSG9 '
         DC    C'CMNERSGA '
         DC    C'CMNERSGB)'
VUAC     DC    C'(CMNERUAC CMNERTUA CMNERTAC CMNERTCT)'
VDATS    DC    C'(CMNERCDT CMNERTAT)'
VNXTSW   DC    C'(CMNERNXT CMNERMAU)'
VRETCD   DC    C'(CMNERRC)'
VNOT     DC    C'(CMNERNOT)'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERGRP CMNERNXT)'
LIST2    DC    C'(CMNERTUI '
         DC    C'CMNERTAC '
         DC    C'CMNERTCT '
         DC    C'CMNERTUA '
         DC    C'CMNERTAT)'
LIST3    DC    C'(CMNERGRP '
         DC    C'CMNEROWN '
         DC    C'CMNERRC '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERMAU '
         DC    C'CMNERSG1 '
         DC    C'CMNERSG2 '
         DC    C'CMNERSG3 '
         DC    C'CMNERSG4 '
         DC    C'CMNERSG5 '
         DC    C'CMNERSG6 '
         DC    C'CMNERSG7 '
         DC    C'CMNERSG8 '
         DC    C'CMNERSG9 '
         DC    C'CMNERSGA '
         DC    C'CMNERSGB '
         DC    C'CMNERSGX '
         DC    C'CMNERNOT '
         DC    C'CMNERSUG '
         DC    C'CMNERNXT)'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
TABLE    DC    CL8'CMNERTGP'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=ACLCNT,MF=L
ACT3     ICHEACTN FIELD=SUBGRPCT,MF=L
ACT4     ICHEACTN FIELD=UACC,MF=L
ACT5     ICHEACTN FIELD=AUTHDATE,MF=L
ACT6     ICHEACTN FIELD=SUPGROUP,MF=L
ACT7     ICHEACTN FIELD=NOTRMUAC,MF=L
ACT8     ICHEACTN FIELD=SUBGRPNM,MF=L
ACT9     ICHEACTN FIELD=ACL,MF=L
ACT10    ICHEACTN FIELD=FLAG1,MF=L
ACT11    ICHEACTN FIELD=FLAG2,MF=L
ACT12    ICHEACTN FIELD=FLAG3,MF=L
ACT13    ICHEACTN FIELD=FLAG4,MF=L
ACT14    ICHEACTN FIELD=FLAG5,MF=L
ACT15    ICHEACTN FIELD=INITCNT,MF=L
*
*
*
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         EJECT
         TITLE '***** DYNAMIC DATA AREAS *****'
DYNWK    EQU   *
GRPLN    DC    X'08'
CMNERGRP DS    CL8
CMNERTUI DS    CL8
CMNEROWN DS    CL8
CMNERSUG DS    CL8
CMNERSG1 DC    CL8' '
CMNERSG2 DC    CL8' '
CMNERSG3 DC    CL8' '
CMNERSG4 DC    CL8' '
CMNERSG5 DC    CL8' '
CMNERSG6 DC    CL8' '
CMNERSG7 DC    CL8' '
CMNERSG8 DC    CL8' '
CMNERSG9 DC    CL8' '
CMNERSGA DC    CL8' '
CMNERSGB DC    CL8' '
CMNERUAC DS    CL7
CMNERTUA DS    CL7
CMNERTAC DS    CL7
CMNERTCT DC    CL7' '
CMNERCDT DS    CL12
CMNERTAT DS    CL12
CMNERNXT DS    X
CMNERMAU DS    X
CMNERLIN DS    CL75
CMNERRC  DC    F'0'
CMNERNOT DC    CL3' '
CMNERSGX DC    C' '
WORKDAT  DS    PL3
WORKDAT4 DC    X'00'
         DC    XL3'000000'
DBLWD    DS    D
MYID     DS    CL8
CONKEY   DC    X'11'
CONID    DC    CL8' '
         DC    X'00'
CONGRP   DC    CL8' '
CMNSUB   CALL ,(,,),MF=L
ISPLNK1  CALL ,(VDEF,VGRP,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK2  CALL ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK3  CALL ,(VDEF,VUAC,CMNERUAC,CHAR,LNG7),MF=L
ISPLNK4  CALL ,(VDEF,VDATS,CMNERCDT,CHAR,LNG12),MF=L
ISPLNK5  CALL ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK6  CALL ,(VGET,LIST1,SHARED),MF=L
ISPLNK7  CALL ,(VDEF,VNOT,CMNERNOT,CHAR,LNG3),MF=L
ISPLNK9  CALL ,(VPUT,LIST3,SHARED),MF=L
ISPLNKA  CALL ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNKB  CALL ,(VDEF,VFLG,CMNERSGX,CHAR,LNG1),MF=L
TY1      ICHEINTY LOCATE,MF=L,TYPE='GRP',ACTIONS=(ACT1,ACT2,ACT3,      X
               ACT4,ACT5,ACT6,ACT7)
TY2      ICHEINTY LOCATE,MF=L,TYPE='GRP',ACTIONS=(ACT8,ACT9)
TY3      ICHEINTY LOCATE,MF=L,TYPE='CON',ACTIONS=(ACT15,ACT4,ACT10,    X
               ACT11,ACT11,ACT13,ACT14)
WORK1    DC    A(WRK1LEN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    H
WCT      DS    XL2
         DS    XL2
WGCT     DS    XL2
         DS    XL2
WUAC     DS    X
         DS    XL2
WLCRDT   DS    PL3
         DS    XL2
WLSGRP   DS    CL8
         DS    XL2
WNOT     DS    X
         DS    0F
WRK1LEN  EQU   *-WORK1
WORKCON  DC    A(WRKCONLN)
         DS    6F
         DS    H
WCINITCT DS    H
         DS    XL2
WCUACC   DS    X
         DS    XL2
WCFLG1   DS    X
         DS    XL2
WCFLG2   DS    X
         DS    XL2
WCFLG3   DS    X
         DS    XL2
WCFLG4   DS    X
         DS    XL2
WCFLG5   DS    X
         DS    0F
WRKCONLN EQU   *-WORKCON
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER18
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER18  $PROLOG R11,R12
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER18                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH LOCATES AND FILLS*
*               ALL VARIABLES RELATED TO RACF GENERAL RESOURCES. IT   *
*               DOES NO DISPLAYS AND MUST BE GIVEN CONTROL FROM SPF   *
*               SELECT SERVICES.                                      *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R2,R1               COPY ADDR OF DYNAMIC STORAGE
         LA    R3,DYNWKLN          PREPARE TO MOVE STATIC TO DYNAMIC
         LA    R4,DYNWK
         LR    R5,R3
         MVCL  R2,R4               MOVE IT
         LR    R8,R1               SET ADDRESSIBILITY
         USING DYNWK,R8
         BAL   R10,SETUP           GO DO ALL DEFINES
         MVC     CMNEROWN,=CL8' '
         MVC     CMNERUAC,=CL7' '
         MVC     CMNERCDT,=CL12' '
         MVC     CMNERLUP,=CL12' '
         MVC     CMNERDAT,=CL30' '
         MVC     CMNERAUD,=CL8' '
         CALL  ISPLINK,(VPUT,LIST3),VL
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         MVI   RESLN,8             SET MAX DATASET LENGTH
         TRT   CMNERRES,BLANKTAB   CHECK FOR TRAILING BLANKS
         BZ    MN005               NONE, THEN CONTINUE
         LA    R4,CMNERRES         GET BEGINING OF RESOURCE
         SR    R1,R4               SUBTRACT FROM FIRST BLANK GIVING LEN
         STC   R1,RESLN            STORE IT
MN005    TM    CMNERNXT,X'01'      IS THIS A REQUEST FOR NEXT
         BZ    MN010
         ICHEINTY NEXT,ENTRY=RESLN,WKAREA=WORK1,CLASS=CMNERCLS,        X
               MF=(E,TY1)
         B     MN020
MN010    ICHEINTY LOCATE,ENTRY=RESLN,WKAREA=WORK1,CLASS=CMNERCLS,      X
               MF=(E,TY1)
MN020    LTR   R15,R15             CHECK RETURN
         BZ    MN030               OKAY
         ST    R15,CMNERRC         NO-- STORE RETURN CODE
         CALL  ISPLINK,(VPUT,VRETCD,SHARED)
         B     MN900               AND RETURN
MN030    MVC   CMNEROWN,WOWN       MOVE IN OWNERER
         MVC   CMNERCDT,=CL12'UNKNOWN' SET DEFAULT CREATION DATAE
         MVC   WORKDAT,WLCRDT      MOVE IN LAST CHANGE DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   MN033
         MVC   WORKDAT,WLCRDT      MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     IS IT A PLUS
         BE    MN032               YES, THEN GO CONVERT
         CLI   WORKDAT+2,X'0F'     IS IT UNSIGNED
         BNE   MN033               NO, THEN MUST BE GARBAGE
MN032    MVC   WORKDAT4+1(3),WLCRDT
         CALL  CMNSUB,(WORKDAT4,CMNERCDT),MF=(E,CMNSUB)
MN033    MVC   CMNERLUP,CMNERCDT   SET DEFAULT LAST UPDATE
         MVC   WORKDAT,WLCHG       MOVE IN LAST CHANGE DATE
         NI    WORKDAT+2,X'F0'     REMOVE SIGN
         TRT   WORKDAT,PACKTAB     CHECK FOR NUMERICS
         BNZ   MN040
         MVC   WORKDAT,WLCHG       MOVE IN AGAIN
         NI    WORKDAT+2,X'0F'     REMOVE HIGH ORDER NUMERIC
         CLI   WORKDAT+2,X'0C'     IS IT A PLUS
         BE    MN035               YES, THEN GO CONVERT
         CLI   WORKDAT+2,X'0F'     IS IT UNSIGNED
         BNE   MN040               NO, THEN MUST BE GARBAGE
MN035    MVC   WORKDAT4+1(3),WLCHG
         CALL  CMNSUB,(WORKDAT4,CMNERLUP),MF=(E,CMNSUB)
MN040    XR    R4,R4               CLEAR R4
         IC    R4,RESLN            GET LENGTH OF RESOURCE RETRIEVED
         LA    R5,CMNERRES         GET ADDR OF RESPURCE
         LA    R5,0(R4,R5)         GET FIRST BYTE BEYOND DATA
         LA    R6,8                SET MAX LENGTH
         SR    R6,R4               COMPUTE DIFFERENCE
         LTR   R6,R6               CHECK IF ZERO
         BZ    MN050               YES, THEN CONTINUE
MN045    MVI   0(R5),C' '
         LA    R5,1(R5)
         BCT   R6,MN045
MN050    XR    R6,R6               CLEAR R6
         IC    R6,WDAT             GET LENGTH OF DATA
         MVC   CMNERDAT,=CL30' '
         LTR   R6,R6               CHECK IF 0
         BZ    MN056               YES, THEN BYPASS MOVE
         CH    R6,=H'30'           CHECK IF GREATER THAN 30
         BL    MN055               NO THEN MOVE WHOLE THING
         LA    R6,30               MAX FIELD SIZE IS 30
MN055    BCTR  R6,0                REDUCE FOR MOVE
         EX    R6,MOVEDATA         AND MOVE IT IN
MN056    MVC   CMNERUAC,=CL7'ALTER'
         TM    WUAC,X'80'          WAS ACCESS ALTER
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'CONTROL'
         TM    WUAC,X'40'          WAS ACCESS CONTROL
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'UPDATE'
         TM    WUAC,X'20'          WAS ACCESS UPDATE
         BO    MN060               YES--
         MVC   CMNERUAC,=CL7'READ'
         TM    WUAC,X'10'          WAS ACCESS READ
         BO    MN060
         MVC   CMNERUAC,=CL7'NONE'
MN060    TM    WAUD,X'40'          CHECK AUDITY OPTIONS
         BNO   MN061
         MVC   CMNERAUD,=CL8'SUCCESS'
         B     MN065
MN061    TM    WAUD,X'20'
         BNO   MN062
         MVC   CMNERAUD,=CL8'FAILURES'
         B     MN065
MN062    TM    WAUD,X'80'
         BNO   MN063
         MVC   CMNERAUD,=CL8'ALL'
         B     MN065
MN063    MVC   CMNERAUD,=CL8'NONE'
MN065    LH    R5,WCT              GET NUMBER IN ACCESS LIST
         LTR   R5,R5               ANYBODY THERE?
         BZ    MN100               NOPE--
         M     R4,=F'11'           11 BYTES FOR EACH ENTRY IN LIST
         LA    R5,32(R5)           ADD 32 BYTES FOR WORK AREA IN FRONT
         LR    R0,R5
         GETMAIN R,LV=(0)          GET STORAGE FOR WORKAREA FOR LIST
         LR    R4,R1               COPY ADDR
         ST    R5,0(R4)
         ICHEINTY LOCATE,ENTRY=RESLN,WKAREA=(R4),CLASS=CMNERCLS,       X
               MF=(E,TY2)
         LTR   R15,R15             CHECK RETURN
         BZ    MN070               GOOD--
         ABEND 2,DUMP
MN070    LA    R6,11               LOAD INCREMENT
         LH    R3,X'1C'(R4)        GET LENGTH OF LIST
         LA    R7,X'1E'(R4,R3)     COMPUTE END OF LIST
         BCTR  R7,0                LAST BYTE OF LIST
         LA    R3,X'1E'(R4)
MN080    MVC   CMNERTUI,0(R3)      MOVE IN USERID
         MVC   CMNERTAC,9(R3)      MOVE IN ACCESS COUNT
         MVC   CMNERTAU,=CL7'ALTER'
         TM    8(R3),X'80'
         BO    MN090
         MVC   CMNERTAU,=CL7'CONTROL'
         TM    8(R3),X'40'
         BO    MN090
         MVC   CMNERTAU,=CL7'UPDATE'
         TM    8(R3),X'20'
         BO    MN090
         MVC   CMNERTAU,=CL7'READ'
         TM    8(R3),X'10'
         BO    MN090
         MVC   CMNERTAU,=CL7'NONE'
MN090    CALL  ISPLINK,(VTBADD,TABLE,LIST2)
         BXLE  R3,R6,MN080         LOOP THROUGH ACCESS LIST
         CALL  ISPLINK,(VTBTOP,TABLE)
         LR    R0,R5               FREE STORAGE
         FREEMAIN R,LV=(0),A=(R4)
MN100    CALL  ISPLINK,(,LIST3),MF=(E,ISPLNKB)
         FREEMAIN R,LV=DYNWKLN,A=(R8)
MN900    SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         $EPILOG
         TITLE '****** SETUP ROUTINE *******'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERRES),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNEROWN),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERUAC),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERCDT),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERNXT),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTUI),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERTAU),MF=(E,ISPLNK9)
         CALL  ISPLINK,(,,CMNERTAC),MF=(E,ISPLNKA)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNKC)
         CALL  ISPLINK,(,,CMNERDAT),MF=(E,ISPLNKD)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK7)
         CALL  ISPLINK,(VTBTOP,TABLE)
         BR    R10                 RETURN
         TITLE '***** CONSTANT AREAS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VREPLACE DC    CL8'VREPLACE'
VTBTOP   DC    CL8'TBTOP'
VTBADD   DC    CL8'TBADD'
*
*  DIALOG MANAGER VARIABLE LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG12    DC    F'12'
LNG30    DC    F'30'
*
*  DIALOG MANAGER VARIABLES
*
VRES     DC    C'(CMNERRES CMNERCLS)'
VTUID    DC    C'(CMNERTUI)'
VTAUTH   DC    C'(CMNERTAU)'
VTACC    DC    C'(CMNERTAC)'
VOWN     DC    C'(CMNEROWN CMNERAUD)'
VUAC     DC    C'(CMNERUAC)'
VDATS    DC    C'(CMNERCDT CMNERLUP)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VDATA    DC    C'(CMNERDAT)'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERRES CMNERNXT CMNERCLS)'
LIST2    DC    C'(CMNERTUI CMNERTAC CMNERTAU)'
LIST3    DC    C'(CMNERRES '
         DC    C'CMNERCLS '
         DC    C'CMNEROWN '
         DC    C'CMNERRC '
         DC    C'CMNERUAC '
         DC    C'CMNERCDT '
         DC    C'CMNERLUP '
         DC    C'CMNERDAT '
         DC    C'CMNERAUD '
         DC    C'CMNERNXT)'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
TABLE    DC    CL8'CMNERTRS'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=ACLCNT,MF=L
ACT3     ICHEACTN FIELD=UACC,MF=L
ACT4     ICHEACTN FIELD=CREADATE,MF=L
ACT5     ICHEACTN FIELD=LCHGDAT,MF=L
ACT6     ICHEACTN FIELD=INSTDATA,MF=L
ACT7     ICHEACTN FIELD=ACL,MF=L
ACT8     ICHEACTN FIELD=AUDIT,MF=L
*
*
*
FIRSTSW  DC    X'00'
PACKTAB  DC    10X'00'             00-09
         DC    6X'01'              0A-0F
         DC    10X'00'             10-19
         DC    6X'01'              1A-1F
         DC    10X'00'             20-29
         DC    6X'01'              2A-2F
         DC    10X'00'             30-39
         DC    6X'01'              3A-3F
         DC    10X'00'             40-49
         DC    6X'01'              4A-4F
         DC    10X'00'             50-59
         DC    6X'01'              5A-5F
         DC    10X'00'             60-69
         DC    6X'01'              6A-6F
         DC    10X'00'             70-79
         DC    6X'01'              7A-7F
         DC    10X'00'             80-89
         DC    6X'01'              8A-8F
         DC    10X'00'             90-99
         DC    6X'01'              9A-9F
         DC    96X'01'             A0-FF
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
MOVEDATA MVC   CMNERDAT(0),WDAT+1
         LTORG
         EJECT
         TITLE '***** DYNAMIC DATA AREAS *****'
         DS    0D
DYNWK    EQU   *
RESLN    DC    X'08'
CMNERRES DS    CL8
CMNERCLS DS    CL8
CMNEROWN DS    CL8
CMNERAUD DS    CL8
CMNERUAC DS    CL7
CMNERCDT DS    CL12
CMNERLUP DS    CL12
CMNERNXT DS    X
CMNERTUI DS    CL8
CMNERTAU DS    CL7
CMNERDAT DC    CL30' '
CMNERTAC DS    H
CMNERRC  DC    F'0'
WORKDAT  DS    PL3
WORKDAT4 DC    X'00'
         DC    XL3'000000'
CMNSUB   CALL ,(,,),MF=L
ISPLNK1  CALL ,(VDEF,VRES,CMNERRES,CHAR,LNG8),MF=L
ISPLNK3  CALL ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK4  CALL ,(VDEF,VUAC,CMNERUAC,CHAR,LNG7),MF=L
ISPLNK5  CALL ,(VDEF,VDATS,CMNERCDT,CHAR,LNG12),MF=L
ISPLNK6  CALL ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK7  CALL ,(VGET,LIST1,SHARED),MF=L
ISPLNK8  CALL ,(VDEF,VTUID,CMNERTUI,CHAR,LNG8),MF=L
ISPLNK9  CALL ,(VDEF,VTAUTH,CMNERTAU,CHAR,LNG7),MF=L
ISPLNKA  CALL ,(VDEF,VTACC,CMNERTAC,FIXED,LNG2),MF=L
ISPLNKB  CALL ,(VPUT,LIST3,SHARED),MF=L
ISPLNKC  CALL ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNKD  CALL ,(VDEF,VDATA,CMNERDAT,CHAR,LNG30),MF=L
TY1      ICHEINTY LOCATE,MF=L,TYPE='GEN',ACTIONS=(ACT1,ACT2,ACT3,      X
               ACT4,ACT5,ACT8,ACT6)
TY2      ICHEINTY LOCATE,MF=L,TYPE='GEN',ACTIONS=(ACT7)
WORK1    DC    A(WRK1LEN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    H
WCT      DS    XL2
         DS    XL2
WUAC     DS    X
         DS    XL2
WLCRDT   DS    PL3
         DS    XL2
WLCHG    DS    PL3
         DS    XL2
WAUD     DS    X
         DS    XL2
WDAT     DS    XL256
         DS    0F
WRK1LEN  EQU   *-WORK1
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER20
         TITLE '***** ADD FUNCTION CONTROLLER *****'
CMNER20  $PROLOG
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER20                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS NON REENTRANT, NON APF AUTHORIZED MODULE   *
*               WHICH CONTROLS DISPLAY OF THE INTIAL 'ADD' SCREEN     *
*               AND CONTROLS THE SELECTION OF ADD SUB FUNCTIONS       *
*                                                                     *
*        PANELS - CMNER20                                             *
*                                                                     *
*        MESSAGES - CMNER200                                          *
*                   CMNER201                                          *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP           DEFINE DIALOG VARIABLES
C20000   CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR),VL
C20005   CH    R15,=H'8'           WAS END KEY ENTERED ? ? ?
         BE    C20999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C20010
         ABEND 1,DUMP
C20010   CALL ISPLINK,(VPUT,LIST5,SHARED)
         CLC   CMNERUID,=CL8' '    WAS USERID ENTERED
         BE    C20020              NO GO CHECK GROUP
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER22B)
         MVC   CURSOR,=CL8'CMNERUID'
         B     C20000
C20020   CLC   CMNERGRP,=CL8' '    WAS GROUP ENTERED
         BE    C20030              NO GO CHECK DSN
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER23B)
         MVC   CURSOR,=CL8'CMNERGRP'
         B     C20000
C20030   CLC   CMNERDSN,=CL44' '   WAS DSN ENTERED
         BE    C20040              NO, GO CHECK GENERAL RESOURCE
         BAL   R10,QUAL
         CLC   CMNERVOL,=CL6' '    WAS VOLUME ENTERED? ? ?
         BE    C20032              NO, THEN CHECK UNIT ALSO
         CLC   CMNERUNI,=CL8' '    WAS UNIT ENTERED? ? ?
         BNE   C20031              BOTH UNIT AND VOLUME WERE ENTERED
         MVC   CURSOR,=CL8'CMNERUNI' ONLY VOLUME ENTERED
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C20005
C20031   TRT   CMNERWDS,PARENTAB   IS THIS A GDG? ? ?
         BZ    C20039              NO, THEN NO NEED FOR LOCATE
         B     C20034              YES, THEN DO LOCATE EVEN IF VOLUME
*                                  AND UNIT WERE ENTERED
C20032   CLC   CMNERUNI,=CL8' '    WAS UNIT ENTERED? ?
         BE    C20034              NEITHER WERE ENTERED, THEN DO LOCATE
         MVC   CURSOR,=CL8'CMNERVOL'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         B     C20005
C20034   LOCATE CAMLIST            SEARCH CATALOG
         LTR   R15,R15             CHECK RETURN
         BZ    C20036              GOOD
         ST    R15,CMNERRC         NOT SO GOOD
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,CURSOR)
         B     C20005
C20036   MVC   CMNERVOL,=CL6' '    BLANK OUT VOLUME AND UNIT
         MVC   CMNERUNI,=CL8' '    WHICH INDICATES, THAT IT IS CTLGD
C20039   CALL  ISPLINK,(VPUT,LIST7,SHARED)
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER24B)
         MVC   CURSOR,=CL8'CMNERDSN'
         B     C20000
C20040   CLC   CMNERRES,=CL8' '    WAS RESOURCE ENTERED
         BE    C20060              NO, THEN ISSUE MESSAGE
         CLC   CMNERCLS,=CL8' '    WAS CLASS ENTERED
         BNE   C20050              YES, THE SELECT GENERAL RESOURCE ADD
         CALL ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C20005
C20050   CALL  ISPLINK,(VSELECT,CMNERBL,CMNER21B)
         MVC   CURSOR,=CL8'CMNERRES'
         B     C20000
C20060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C20000
C20999   CALL  ISPLINK,(VDELETE,LIST5)
         $EPILOG
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL44' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(43),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG06,CURSOR)
         B     C20005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(43),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(VDEF,LIST1,CMNERDSN,CHAR,LNG44)
         CALL  ISPLINK,(VDEF,LIST2,CMNERUID,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST3,CMNERRES,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST4,CMNERVOL,CHAR,LNG6)
         CALL  ISPLINK,(VDEF,LIST6,CMNERRC,FIXED,LNG4)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VDELETE  DC    CL8'VDELETE'
VDEF     DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VSELECT  DC    CL8'SELECT'
*
*  LENGTHS
*
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'44'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERDSN CMNERWDS)'
LIST2    DC    C'(CMNERUID CMNERGRP)'
LIST3    DC    C'(CMNERRES CMNERCLS CMNERUNI)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERDSN '
         DC    C'CMNERUID '
         DC    C'CMNERGRP '
         DC    C'CMNERRES '
         DC    C'CMNERCLS '
         DC    C'CMNERUNI '
         DC    C'CMNERVOL)'
LIST6    DC    C'(CMNERRC)'
LIST7    DC    C'(CMNERWDS)'
*
*  DIALOG MANAGER VARIABLES
*
CMNERDSN DC    CL44' '
CMNERWDS DC    CL44' '
CMNERUID DC    CL8' '
CMNERGRP DC    CL8' '
CMNERRES DC    CL8' '
CMNERCLS DC    CL8' '
CMNERUNI DC    CL8' '
CMNERVOL DC    CL6' '
CMNERRC  DC    F'0'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER20'
CURSOR   DC    CL8'CMNERUID'
CAMLIST  CAMLST NAME,CMNERWDS,,WORK
         DS    0D
WORK     DS    CL265
MSG01    DC    CL8'CMNER200'
MSG02    DC    CL8'CMNER201'
MSG03    DC    CL8'CMNER202'       ENTER UNIT
MSG04    DC    CL8'CMNER203'       ENTER VOLUME
MSG05    DC    CL8'CMNER204'       ENTER VOLUME & UNIT
MSG06    DC    CL8'CMNER205'       INVALID DATASET NAME
CMNERBL  DC    F'12'
CMNER21B DC    C'PGM(CMNER21)'
CMNER22B DC    C'PGM(CMNER22)'
CMNER23B DC    C'PGM(CMNER23)'
CMNER24B DC    C'PGM(CMNER24)'
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
         IHAACEE
         END
./ ADD  NAME=CMNER21
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** ADD GENERAL RESOURCE FUNCTION *****'
CMNER21  $PROLOG
***********************************************************************
*        PROGRAM - CMNER21                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A RDEF COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER21                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER210 - CMNER213                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)  DISPLAY 1ST PANEL
C21015   MVI   CMD+5,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+6(249),CMD+5
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'5'
         CH    R15,=H'8'           WAS END KEY ENTERED
         BE    C21999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR GOOD RETURN
         BZ    C21020              YES--
         ABEND 1,DUMP
C21020   CLC   CMNERRES,=CL8' '    IS IT BLANKS? ? ?
         BE    C21025              YES, THEN ISSUE ERROR MESSAGE
         CLC   CMNERCLS,=CL8' '    IS IT BLANKS? ? ?
         BE    C21025              YES, THEN ISSUE ERROR MESSAGE
         CLC   CMNEBRES,CMNERRES   DID RESOURCE CHANGE ?
         BNE   C21030              YES, THEN OKAY
         CLC   CMNEBCLS,CMNERCLS   DID CLASS CHANGE ?
         BNE   C21030              YES, THEN OKAY
C21025   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C21015              NO, DISPLAY ERROR AND TRY AGAIN
C21030   LA    R3,CMD+5            GET 1ST AVAILABLE BYTE IN COMMAND
         MVC   0(L'CMNERCLS,R3),CMNERCLS    MOVE IN CLASS
         TRT   0(L'CMNERCLS+1,R3),BLANKTAB SEARCH FOR BLANK
         BNZ   C21040              FOUND IT
         ABEND 2,DUMP              NOT FOUND
C21040   LA    R3,1(R1)            ADVANCE BEYOND 1ST BLANK
         MVC   0(L'CMNERRES,R3),CMNERRES    MOVE IN RESOURCE NAME
         TRT   0(L'CMNERRES+1,R3),BLANKTAB SEARCH FOR BLANK
         BNZ   C21050              FOUND IT
         ABEND 2,DUMP
C21050   LA    R3,1(R1)            ADVANCE BEYOND 1ST BLANK
         MVC   0(6,R3),=C'OWNER('  MOVE IN OWNER PARAMETER
         MVC   6(L'CMNEROWN,R3),CMNEROWN    MOVE IN OWNER FROM SCREEN
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR FIRST BLANK
         BNZ   C21060              FOUND IT
         ABEND 2,DUMP
C21060   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
         MVC   0(6,R3),=C'AUDIT('  MOVE IN AUDIT KEYWORD
         MVC   6(L'CMNERAUD,R3),CMNERAUD    MOVE IN AUDIT FROM SCREEN
         TRT   6(L'CMNERAUD+1,R3),BLANKTAB  SEARCH FOR FIRST BLANK
         BNZ   C21070              FOUND IT
         ABEND 2,DUMP
C21070   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
         MVC   0(5,R3),=C'UACC('   MOVE IN UACC KEYWORD
         MVC   5(8,R3),CMNERUAC    MOVE IN UACC FROM SCREEN
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK AFTER AUDIT
         BNZ   C21080              FOUND IT
         ABEND 2,DUMP
C21080   MVI   0(R1),C')'          MOVE CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYON
         CLC   CMNERDAT,=CL30' '   WAS DATA ENTERED? ? ?
         BE    C21090              NO, THEN BYPASS
         MVC   0(6,R3),=C'DATA(''' MOVE IN KEYWORD
         MVC   6(L'CMNERDAT,R3),CMNERDAT   MOVE IN DATA
         LA    R1,L'CMNERDAT+6(R3) ADVANCE POINTER
C21085   MVC   0(2,R1),=C''')'     MOVE IN CLOSING QUOTE AND PAREN
         LA    R3,3(R1)            ADVANCE BEYOND
C21090   CLC   CMNERAPP,=CL30' '   WAS APPLDATA ENTERED
         BE    C21100              NO, CONTINUE
         MVC   0(10,R3),=C'APPLDATA('''  MOVE IN KEYWORD
         MVC   10(L'CMNERAPP,R3),CMNERAPP  MOVE IN DATA
         LA    R1,L'CMNERAPP+10(R3) ADVANCE POINTER
C21095   MVC   0(2,R1),=C')'''     MOVE IN CLOSING QUOTE AND PAREN
         SPACE 5
*
*   BEGIN BUILDING THE CALL LIST TO ISPCAT
*
C21100   L     R2,X'21C'           TCBOLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE ARE PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK EYE CATCHER
         BE    C21110              GOOD
         ABEND 3,DUMP
C21110   ST    R2,ISPCATCL         STORE ADDR OF TLD
         LOAD  EP=ISPSUBS
         LR    R3,R0               STORE EP OF ISPSUBS
         LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8           IN DYNAMIC AREA
         LA    R4,CMDBUF
         ST    R4,ISPCATCL+4
         L     R15,X'2C'(R3)       GET ADDR OF ISPCAT ENTRY POINT
         LA    R1,ISPCATCL         GET PARAMETER LIST
         BALR  R14,R15             AND GO DO IT
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         L     R4,ISPCATRC         GET RETURN CODE
         LTR   R4,R4               CHECK IT
         BZ    C21120              GOOD
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C21015
C21120   MVC   CMNEBRES,CMNERRES    STORE BEFORE COPY
         MVC   CMNEBCLS,CMNERCLS
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C21015
         SPACE 5
C21999   EQU   *
         FREEMAIN R,LV=DYNWKLN,A=(R8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERRES,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERAUD,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERDAT,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,LIST1,),MF=(E,ISPLNK6)
         L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         MVC   CMNEROWN,ACEEUSRI   MOVE IN DEFAULT OWNER
         DROP  R4
         BR    R10
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERRES CMNERCLS)'
LIST2    DC    C'(CMNEROWN)'
LIST3    DC    C'(CMNERAUD CMNERUAC)'
LIST4    DC    C'(CMNERDAT CMNERAPP)'
LIST5    DC    C'(CMNERRC)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG30    DC    F'30'
*
*        DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
PANEL    DC    CL8'CMNER21'
MSG01    DC    CL8'CMNER210'
MSG02    DC    CL8'CMNER211'
MSG03    DC    CL8'CMNER212'
CURSOR   DC    CL8'CMNERRES'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
ISPCATRC DC    A(0)
ISPCATCL CALL  ,(,CMDBUF,ISPCATRC),MF=L
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERRES,CHAR,LNG8),MF=L
ISPLNK2  CALL   ,(VDEF,LIST2,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK3  CALL  ,(VDEF,LIST3,CMNERAUD,CHAR,LNG8),MF=L
ISPLNK4  CALL  ,(VDEF,LIST4,CMNERDAT,CHAR,LNG30),MF=L
ISPLNK5  CALL  ,(VDEF,LIST5,CMNERRC,FIXED,LNG4),MF=L
ISPLNK6  CALL  ,(VGET,LIST1,SHARED),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'5'
CMD      DC    CL255'RDEF'
CMNEBRES DC    CL8' '
CMNEBCLS DC    CL8' '
*
*        DIALOG MANAGER VARIABES
*
CMNERRES DS    CL8
CMNERCLS DS    CL8
CMNEROWN DS    CL8
CMNERAUD DC    CL8'FAILURES'
CMNERUAC DC    CL8'NONE'
CMNERDAT DC    CL30' '
CMNERAPP DC    CL30' '
CMNERRC  DS    F
         SPACE 5
DYNWKLN  EQU   *-DYNWK
         EJECT
         IHAACEE
         END
./ ADD  NAME=CMNER22
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** ADD USER FUNCTION *****'
CMNER22  $PROLOG
***********************************************************************
*        PROGRAM - CMNER22                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A ADDUSER COMMAND AND BRANCHES TO ISPCAT.      *
*               ISPCAT IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES*
*               TSO COMMANDS.                                         *
*                                                                     *
*        PANELS USED - CMNER22                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER220 - CMNER224                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          09/02/81 - MODIFIED TO ENCORPORATE UP TO THREE USER DEFINED*
*                     'CAPABILITIES'. THESE ARE SWITCHES WHICH ARE    *
*                     STORED IN THE INSTALLATION DATA AREA AND CAN BE *
*                     TESTED IN OTHER SPF FUNCTIONS TO DETERMINE IF   *
*                     A USER HAS THE ABILITY TO PERFORM A FUNCTION HE *
*                     WOULD NOT NORMALLY HAVE THE AUTHORITY TO DO. TO *
*                     ACCOMPLISH THIS REQUIRED A DEFINITION OF THE    *
*                     THE INSTALLATION DATA FIELD AS FOLLOWS          *
*                     COL 1 - 30 USER DESCRIPTION. THIS IS THE FIELD  *
*                              WHICH IS DISPLAYED UNDER THE HEADING   *
*                              'USER DATA'. THIS FIELD IS REQUIRED    *
*                     COL 31   X'00' WHICH SERVES AS A DELIMETER FOR  *
*                              THE CAPABILITY SWITCHES.               *
*                     COL 32-34 CAPABILITY SWITCHES. THREE ONE BYTE   *
*                              FIELDS CONTAINING EITHER THE VALUES    *
*                              'Y' OR 'N' WHICH CORRESSPOND TO THE    *
*                              DIALOG MANAGER VARIABLES CMNERCA1,     *
*                              CMNERCA2, CMNERCA3. THE FIRST SWITCH IS*
*                              USED TO DETERMINE IF A USER HAS THE    *
*                              CAPABILITY TO RESET PASSWORDS EVEN     *
*                              THOUGH HE DOES NOT HAVE THE SPECIAL    *
*                              ATTRIBUTE                              *
*          10/22/81 - MODIFIED TO ALLOW FOR UP TO 8 CHARACTERS FOR    *
*                     GROUP OR USER NAME.                             *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         LR    R8,R1
         USING DYNWK,R8
         BAL   R10,SETUP
         MVC   CURSOR,=CL8'CMNERNAM'
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)
C22005   CH    R15,=H'8'           WAS END KEY ENTERED
         BE    C22999              YES, THEN GET OUT
         LTR   R15,R15             CHECK RETURN
         BZ    C22010              GOOD
         ABEND 1,DUMP              NOPE
C22010   CLC   CMNERNAM,=CL20' '   WAS NAME ENTERED
         BNE   C22020              YES--OKAY
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C22005              GO CHECK RETURNS
C22020   LA    R3,CMD+3            GET FIRST AVAILABLE BYTE IN COMMAND
         MVI   CMD+3,C' '          CLEAR OUT
         MVC   CMD+4(251),CMD+3             COMMAND BUFFER
         MVC   CMDBUF(2),=H'256'
         MVC   CMDBUF+2(2),=H'3'
         MVC   0(8,R3),CMNERUID    MOVE IN USER ID TO BE ADDED
         LA    R3,9(R3)            MOVE BEYOND IT
         MVC   0(5,R3),=C'NAME('   MOVE IN KEYWORD
         MVC   5(20,R3),CMNERNAM   MOVE IN NAME
         TRT   0(26,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22030              FOUND IT
         ABEND 2,DUMP
C22030   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND
         MVC   0(6,R3),=C'OWNER('  MOVE IN OWNER NAME
         MVC   6(8,R3),CMNEROWN    MOVE IN OWNER
         TRT   0(15,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22050              FOUND IT
         ABEND 4,DUMP
C22050   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         MVC   0(8,R3),=C'DFLTGRP('
         MVC   8(8,R3),CMNERDFG    MOVE IN DEFAULT GROUP
         TRT   0(17,R3),BLANKTAB   FIND FIRST BLANK
         BNZ   C22060              FOUND IT
         ABEND 5,DUMP
C22060   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         MVC   0(10,R3),=C'AUTHORITY('  MOVE IN KEYWORD
         MVC   10(8,R3),CMNERGAU   MOVE IN GROUP AUTHORITY
         TRT   0(19,R3),BLANKTAB   CHECK FOR FIRST BLANK
         BNZ   C22070              FOUND IT
         ABEND 6
C22070   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            MOVE BEYOND IT
         CLC   CMNERCL1,=CL8' '    WAS CLASS1 ENTERED
         BE    C22090              NO, THEN NO CLASS AUTHORIZATIONS
         MVC   0(7,R3),=C'CLAUTH(' MOVE IN KEYWORD
         MVC   7(8,R3),CMNERCL1    MOVE IN CLASS
         TRT   0(19,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C22072              FOUND IT
         ABEND 7,DUMP
C22072   EQU   *
         CLC   CMNERCL2,=CL8' '    WAS CLASS2 ENTERED
         BE    C22080              NO, THEN CLOSE OFF CLAUTH PARM
         LA    R3,1(R1)            ADVANCE PAST BLANK
         MVC   0(8,R3),CMNERCL2    MOVE IN CLASS
         TRT   0(9,R3),BLANKTAB    SEARCH FOR FIRST BLANK
         BNZ   C22074              FOUND IT
         ABEND 8,DUMP
C22074   EQU   *
         CLC   CMNERCL3,=CL8' '    WAS CLASS3 ENTERED? ? ?
         BE    C22080              NO, THEN CLOSE OFF CLAUTH PARM
         LA    R3,1(R1)            ADVANCE PAST BLANK
         MVC   0(8,R3),CMNERCL3    MOVE IN CLASS
         TRT   0(9,R3),BLANKTAB    SEARCH FOR FIRST BLANK
         BNZ   C22080
         ABEND 9,DUMP
C22080   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
C22090   EQU   *
         CLI   CMNERDAT,C' '       CHECK FOR INSTALLATION DATA
         BNE   C22095              MUST BE NON BLANK
         MVC   CURSOR,=CL8'CMNERDAT'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,CURSOR)
         B     C22005
C22095   MVC   0(6,R3),=C'DATA('''
         MVC   6(L'CMNERDAT,R3),CMNERDAT   MOVE IN DATA
         LA    R3,L'CMNERDAT+6(R3)
         MVI   0(R3),0             MOVE IN CAPABILITY DELIMETER
         MVC   1(1,R3),CMNERCA1
         MVC   2(1,R3),CMNERCA2      MOVE IN CAPABILITY SWITCHES
         MVC   3(1,R3),CMNERCA3
         LA    R3,4(R3)
         MVC   0(2,R3),=C''')'     CLOSING QUOTE AND PAREN
         LA    R3,3(R3)
C22100   CLC   CMNERGAC,=CL3'YES'  GRPACC REQUIRED
         BNE   C22110              NO--
         MVC   0(6,R3),=C'GRPACC'
         LA    R3,7(R3)            ADVANCE POINTER
C22110   CLC   CMNERADS,=CL3'YES'  ADSP REQUIRED
         BNE   C22120              NO--
         MVC   0(4,R3),=C'ADSP'
         LA    R3,5(R3)            ADVANCE POINTER
C22120   CLC   CMNERSPC,=CL3'YES'  SPECIAL REQUIRED
         BNE   C22130              NO--
         MVC   0(7,R3),=C'SPECIAL'
         LA    R3,8(R3)            ADVANCE POINTER
C22130   CLC   CMNEROPN,=C'YES'    OPERATIONS REQUIRED
         BNE   C22140              NO--
         MVC   0(10,R3),=C'OPERATIONS'
         LA    R3,11(R3)           ADVANCE POINTER
C22140   CLC   CMNERAUD,=C'YES'    AUDITOR REQUIRED
         BNE   C22150              NO--
         MVC   0(7,R3),=C'AUDITOR'
C22150   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARMS
         L     R2,0(R2)            1ST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK TO MAKE SURE
         BE    C22160              YES
         ABEND 3,DUMP              TOO BAD
C22160   ST    R2,ISPCATCL         STORE IN LIST
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY ENTRY POINT
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO DO COMMAND
         L     R4,ISPCATRC
         SR    R1,R1               MAKE UNAUTHORIZED
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4
         BZ    C22170              GOOD, DISPLAY COMPLETE MESSAGE
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C22005
C22170   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C22005
C22999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE  '***** SET ROUTINE *****'
SETUP    CALL  ISPLINK,(,,CMNERUID),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERPAS),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERDAT),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERNAM),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERGAC),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERRC),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   CMNEROWN,ACEEUSRI   MOVE IN DEFAULT OWNER
         MVC   CMNERDFG,ACEEGRPN   MOVE IN DEFAULT GROUP
         BR    R10
         DROP  R4
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VDEF     DC    CL8'VDEFINE'
*
*  DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG20    DC    F'20'
LNG30    DC    F'30'
*
*  DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERUID)'
LIST2    DC    C'(CMNERUID CMNEROWN CMNERDFG)'
LIST3    DC    C'(CMNERPAS '
         DC    C'CMNERGAU '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3)'
LIST4    DC    C'(CMNERDAT)'
LIST5    DC    C'(CMNERNAM)'
LIST6    DC    C'(CMNERGAC '
         DC    C'CMNERADS '
         DC    C'CMNERSPC '
         DC    C'CMNEROPN '
         DC    C'CMNERAUD '
         DC    C'CMNERCA1 '
         DC    C'CMNERCA2 '
         DC    C'CMNERCA3)'
LIST7    DC    C'(CMNERRC)'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER22'
MSG01    DC    CL8'CMNER220'
MSG02    DC    CL8'CMNER221'
MSG03    DC    CL8'CMNER222'
MSG04    DC    CL8'CMNER223'
MSG05    DC    CL8'CMNER224'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
*
*  DIALOG MANAGER VARIABLS
*
CMNERUID DS    CL8
CMNEROWN DC    CL8' '
CMNERDFG DC    CL8' '
CMNERPAS DC    CL8'OLD'
CMNERGAU DC    CL8'USE'
CMNERCL1 DC    CL8' '
CMNERCL2 DC    CL8' '
CMNERCL3 DC    CL8' '
CMNERDAT DC    CL30' '
CMNERNAM DC    CL20' '
CMNERGAC DC    CL3'NO'
CMNERADS DC    CL3'NO'
CMNERSPC DC    CL3'NO'
CMNEROPN DC    CL3'NO'
CMNERAUD DC    CL3'NO'
CMNERCA1 DC    CL3'NO'
CMNERCA2 DC    CL3'NO'
CMNERCA3 DC    CL3'NO'
CMNERRC  DC    F'0'
PEVUID   DC    CL4' '
ISPLNK1  CALL ,(VDEF,LIST2,CMNERUID,CHAR,LNG8),MF=L
ISPLNK2  CALL ,(VDEF,LIST3,CMNERPAS,CHAR,LNG8),MF=L
ISPLNK3  CALL ,(VDEF,LIST4,CMNERDAT,CHAR,LNG30),MF=L
ISPLNK4  CALL ,(VDEF,LIST5,CMNERNAM,CHAR,LNG20),MF=L
ISPLNK5  CALL ,(VDEF,LIST6,CMNERGAC,CHAR,LNG3),MF=L
ISPLNK6  CALL ,(VDEF,LIST7,CMNERRC,FIXED,LNG4),MF=L
CURSOR   DC    CL8'CMNERUID'
CMDBUF   DC    H'256'
         DC    H'3'
CMD      DC    CL256'AU '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER23
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** ADD GROUP FUNCTION *****'
CMNER23  $PROLOG
***********************************************************************
*        PROGRAM - CMNER23                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A AG   COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER23                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER230 - CMNER233                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)  DISPLAY 1ST PANEL
C23015   MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(250),CMD+3
         MVC   CMDBUF(2),=H'255'   RESET LENGHTS
         MVC   CMDOFF(2),=H'3'
         CH    R15,=H'8'           WAS END KEY ENTERED
         BE    C23999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR GOOD RETURN
         BZ    C23020              YES--
         ABEND 1,DUMP
C23020   CLC   CMNEBGRP,CMNERGRP   DID GROUP CHANGE    ?
         BNE   C23030              YES, THEN OKAY
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C23015              NO, DISPLAY ERROR AND TRY AGAIN
C23030   LA    R3,CMD+3            GET 1ST AVAILABLE BYTE IN COMMAND
         MVC   0(8,R3),CMNERGRP    MOVE IN CLASS
         TRT   0(9,R3),BLANKTAB    SEARCH FOR BLANK AFTER CLASS
         BNZ   C23040              FOUND IT
         ABEND 2,DUMP              NOT FOUND
C23040   LA    R3,1(R1)            ADVANCE BEYOND 1ST BLANK
         MVC   0(6,R3),=C'OWNER('  MOVE IN OWNER PARAMETER
         MVC   6(L'CMNEROWN,R3),CMNEROWN    MOVE IN OWNER FROM SCREEN
         TRT   0(L'CMNEROWN+7,R3),BLANKTAB  CHECK FOR FIRST BLANK
         BNZ   C23050              FOUND IT
         ABEND 2,DUMP
C23050   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
         MVC   0(9,R3),=C'SUPGROUP('  MOVE IN SUPERIOR GROUP KEYWORD
         MVC   9(L'CMNERSUG,R3),CMNERSUG    MOVE IN SUPERIOR GROUP
         TRT   0(L'CMNERSUG+10,R3),BLANKTAB CHECK FOR FIRST BLANK
         BNZ   C23070              FOUND IT
         ABEND 2,DUMP
C23070   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE BEYOND
         CLC   CMNERNOT,=C'YES'    CHECK TERMUACC
         BE    C23080              DEFAULT--
         MVC   0(10,R3),=C'NOTERMUACC'
         SPACE 5
C23080   EQU   *
*
*   BEGIN BUILDING THE CALL LIST TO ISPCAT
*
         L     R2,X'21C'           TCBOLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE ARE PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK EYE CATCHER
         BE    C23110              GOOD
         ABEND 3,DUMP
C23110   ST    R2,ISPCATCL         STORE ADDR OF TLD
         LOAD  EP=ISPSUBS
         LR    R3,R0               STORE EP OF ISPSUBS
         LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8           IN DYNAMIC AREA
         LA    R4,CMDBUF
         ST    R4,ISPCATCL+4
         L     R15,X'2C'(R3)       GET ADDR OF ISPCAT ENTRY POINT
         LA    R1,ISPCATCL         GET PARAMETER LIST
         BALR  R14,R15             AND GO DO IT
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         L     R4,ISPCATRC         GET RETURN CODE
         LTR   R4,R4               CHECK IT
         BZ    C23120              GOOD
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C23015
C23120   MVC   CMNEBGRP,CMNERGRP    STORE BEFORE COPY
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C23015
         SPACE 5
C23999   EQU   *
         FREEMAIN R,LV=DYNWKLN,A=(R8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERGRP,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERNOT,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST1,),MF=(E,ISPLNK4)
         L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         MVC   CMNEROWN,ACEEUSRI   MOVE IN DEFAULT OWNER
         MVC   CMNERSUG,ACEEGRPN
         DROP  R4
         MVC   CMNERNOT,=C'YES'
         BR    R10
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERGRP CMNEROWN CMNERSUG)'
LIST2    DC    C'(CMNERNOT)'
LIST3    DC    C'(CMNERRC)'
*
*        DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG8     DC    F'8'
*
*        DIALOG MANAGER MISCELLANEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
PANEL    DC    CL8'CMNER23'
MSG01    DC    CL8'CMNER230'
MSG02    DC    CL8'CMNER231'
MSG03    DC    CL8'CMNER232'
CURSOR   DC    CL8'CMNERGRP'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
ISPCATRC DC    A(0)
ISPCATCL CALL  ,(,CMDBUF,ISPCATRC),MF=L
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK2  CALL   ,(VDEF,LIST2,CMNERNOT,CHAR,LNG3),MF=L
ISPLNK3  CALL  ,(VDEF,LIST3,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL  ,(VGET,LIST1,SHARED),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'3'
CMD      DC    CL255'AG '
CMNEBGRP DC    CL8' '
*
*        DIALOG MANAGER VARIABES
*
CMNERGRP DS    CL8
CMNEROWN DS    CL8
CMNERSUG DC    CL8' '
CMNERNOT DC    CL3'YES'
CMNERRC  DS    F
         SPACE 5
DYNWKLN  EQU   *-DYNWK
         EJECT
         IHAACEE
         END
./ ADD  NAME=CMNER24
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** ADD DATASET FUNCTION *****'
CMNER24  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER24                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               AND ISSUES AN ADDSD.                                  *
*               APF AUTHORIZATION.                                    *
*                                                                     *
*        PANELS USED - CMNER24                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER240 - CMNER124                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN      GET SOME STORAGE
         LR    R8,R1               COPY ADDR
         LA    R9,DYNWKLN          SET UP
         LR    R3,R9                     FOR MOVE
         LA    R2,DYNWK
         MVCL  R8,R2               AND MOVE IT
         LR    R8,R1               RESTORE TO BEGINING OF DYNAMIC AREA
         USING DYNWK,R8            ESTABLISH ADDRESSIBILITY
         BAL   R10,SETUP
C24005   BAL   R10,QUAL
         CLC   CMNERVOL,=CL6' '    WAS VOLUME ENTERED? ? ?
         BE    C24010              NO, THEN DO LOCATE
         CLC   CMNERUNI,=CL8' '    WAS UNIT ENTERED? ? ?
         BE    C24006              NO, THEN ISSUE MESSAGE
         TRT   CMNERWDS,PARENTAB   CHECK FOR GDG ()
         BNZ   C24010              FOUND ONE, THEN ISSUE THE LOCATE
         BZ    C24020              NOT A GDG, THEN BYPASS LOCATE
C24006   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         CH    R15,=H'8'           WAS END KEY PRESSED
         BE    C24999              YES
         OI    REDISPSW,X'01'      SET SWITCH
         LTR   R15,R15
         BZ    C24005              RECHECK THAT VOLUME/UNIT WERE ENTRED
         ABEND 1,DUMP
C24010   LA    R2,CMNERWDS         GET DSN
         ST    R2,CAMLIST+4        RELOCATE IT
         LA    R2,WORK             GET CATALOG WORK AREA
         ST    R2,CAMLIST+12       RELOCATE
         LOCATE CAMLIST
         LTR   R15,R15             CHECK RETURN
         BZ    C24015              GOOD
         ST    R15,CMNERRC         STORE RETURN FOR MESSAGE
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         CH    R15,=H'8'           WAS END ENTERED
         BE    C24999              YES
         LTR   R15,R15
         BZ    C24005              GO RECHECK VOLUME/UNIT
         ABEND 2,DUMP
C24015   MVC   CMNERVOL,WORK+6     MOVE IN FROM CATALOG
         MVC   CMNERUNI,=CL8' '    CLEAR UNIT FOR CATALOGED DSN
C24020   TM    REDISPSW,X'01'      ANY NEED TO DISPLAY PANEL? ? ?
         BO    C24030              NO--
         MVC   CURSOR,=CL8'CMNEROWN' YES, SET UP FOR DISPLAY
         CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR)
         CH    R15,=H'8'           CHECK RETURN
         BE    C24999              END ENTERED--
         LTR   R15,R15             GOOD? ?
         BZ    C24030              YES---
         ABEND 3,DUMP
C24030   MVI   REDISPSW,X'00'      TURN OFF REDISPLAY SWITCH
         MVC   CMDBUF(2),=H'512'
         MVC   CMDBUF+2(2),=H'3'
         MVI   CMD+4,C' '          CLEAR OUT COMMAND
         MVC   CMD+5(255),CMD+4                      BUFFER
         MVC   CMD+260(252),CMD+259
         LA    R3,CMD+4            GET FIRST AVAILABLE BYTE
         MVC   CMD+4(44),CMNERWDS  MOVE IN DATASET NAME
         TRT   0(45,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24040              FOUND IT
         ABEND 3,DUMP
C24040   MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         LA    R3,2(R1)            ADVANCE POINTER
         CLC   CMNERUNI,=CL8' '    CHECK IF UNIT REQUIRED
         BE    C24065              NO, BYPASS UNIT AND VOLUME
         MVC   0(5,R3),=C'UNIT('   MOVE IN KEYWORD
         MVC   5(8,R3),CMNERUNI    MOVE IN UNIT
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24045              FOUND IT
         ABEND 3,DUMP
C24045   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
C24050   MVC   0(7,R3),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(6,R3),CMNERVOL    MOVE IN VOLUME
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24060              FOUND IT
         ABEND 3,DUMP
C24060   MVI   0(R1),C')'          MOVE IN CLOSING QUOTE
         LA    R3,2(R1)            ADVANCE POINTER
C24065   MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN    MOVE IN OWNER
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24070              FOUND IT
         ABEND 3,DUMP
C24070   MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE POINTER
         MVC   0(5,R3),=C'UACC('   MOVE IN KEYWORD
         MVC   5(8,R3),CMNERUAC    MOVE UACC
         TRT   0(14,R3),BLANKTAB   SEARCH FOR FIRST BLANK
         BNZ   C24080              FOUND IT
         ABEND 3,DUMP
C24080   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
         MVC   0(6,R3),=C'AUDIT('  MOVE IN KEYWORD
         MVC   6(8,R3),CMNERAUD    MOVE AUDIT PARM
         TRT   0(15,R3),BLANKTAB   FIND FIRST BLANK
         BNZ   C24090              FOUND IT
         ABEND 3,DUMP
C24090   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE POINTER
         OC    CMNERSET,=CL3' '    TRANSLATE TO UPPER CASE
         CLC   CMNERSET,=C'YES'    WAS RESPONSE YES
         BE    C24100              YES, THEN TAKE THE DEFAULT
         MVC   0(5,R3),=C'NOSET'   OTHERWISE MOVE IN KEYWORD
C24100   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE ARE PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       CHECK EYE CATCHER
         BE    C24110              GOOD
         ABEND 4,DUMP
C24110   ST    R2,ISPCATCL         STORE ADDR OF TLD
         LOAD  EP=ISPSUBS
         LR    R3,R0               STORE EP OF ISPSUBS
         LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8           IN DYNAMIC AREA
         LA    R4,CMDBUF
         ST    R4,ISPCATCL+4
         L     R15,X'2C'(R3)       GET ADDR OF ISPCAT ENTRY POINT
         LA    R1,ISPCATCL         GET PARAMETER LIST
         BALR  R14,R15             AND GO DO IT
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         L     R4,ISPCATRC         GET RETURN CODE
         LTR   R4,R4               CHECK IT
         BZ    C24120              GOOD
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         MVI   REDISPSW,X'01'
         CH    R15,=H'8'
         BE    C24999
         B     C24005
C24120   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         MVI   REDISPSW,X'01'
         CH    R15,=H'8'
         BE    C24999
         B     C24005
         SPACE 5
C24999   EQU   *
         FREEMAIN R,LV=DYNWKLN,A=(R8)
         $EPILOG
         TITLE '***** QUALIFY SUBROUTINE *****'
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL44' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         MVI   CMNERDSN,C''''      MOVE IN FIRST QUOTE
         MVC   CMNERDSN+1(44),CMNERWDS MOVE IN FULLY QUALIFIED DSN
         TRT   CMNERDSN+1(45),BLANKTAB
         BNZ   QUAL05
         ABEND 15,DUMP
QUAL05   MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(45),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,CURSOR)
         B     C24005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(44),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** SETUP ROUTINE *****'
         DS    0D
SETUP    EQU   *
         CALL  ISPLINK,(,,CMNERDSN,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERVOL,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERUNI,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERSET,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(VGET,LIST7,SHARED)
         L     R4,544              ASCB
         L     R4,108(R4)          ASXB
         L     R4,200(R4)          ACEE
         USING ACEE,R4
         MVC   CMNEROWN,ACEEUSRI
         DROP  R4
         MVI   CMNERDSN,C''''      CREATE FULLY QUALIFIED DSN
         MVC   CMNERDSN+1(44),CMNERWDS
         TRT   CMNERDSN+1(45),BLANKTAB
         BNZ   SET10
         ABEND 15,DUMP
SET10    MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         BR    R10
         TITLE '***** CONSTANT AREAS *****'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
*
*  LISTS
*
LIST1    DC    C'(CMNERDSN CMNERWDS)'
LIST2    DC    C'(CMNERVOL)'
LIST3    DC    C'(CMNERUNI CMNERAUD CMNERUAC)'
LIST4    DC    C'(CMNERSET)'
LIST5    DC    C'(CMNERRC)'
LIST6    DC    C'(CMNEROWN)'
LIST7    DC    C'(CMNERWDS CMNERVOL CMNERUNI)'
*
*  SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VDEF     DC    CL8'VDEFINE'
*
*  LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'46'
*
*  MISCELLAEOUS FIELDS
*
FIXED    DC    CL8'FIXED'
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
PANEL    DC    CL8'CMNER24'
CURSOR   DC    CL8'CMNERDSN'
MSG01    DC    CL8'CMNER240'
MSG02    DC    CL8'CMNER241'
MSG03    DC    CL8'CMNER242'
MSG04    DC    CL8'CMNER243'
MSG05    DC    CL8'CMNER244'       INVALID DATASET
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
*
*  VARIABLES
*
CMNERDSN DS    CL46
CMNERWDS DS    CL46
CMNERVOL DS    CL6
CMNERUNI DS    CL8' '
CMNERAUD DC    CL8'FAILURES'
CMNERUAC DC    CL8'NONE'
CMNERSET DC    CL3'YES'
CMNERRC  DC    F'0'
CMNEROWN DC    CL8' '
*
*
*
ISPLNK1  CALL ,(VDEF,LIST1,CMNERDSN,CHAR,LNG44),MF=L
ISPLNK2  CALL ,(VDEF,LIST2,CMNERVOL,CHAR,LNG6),MF=L
ISPLNK3  CALL ,(VDEF,LIST3,CMNERUNI,CHAR,LNG8),MF=L
ISPLNK4  CALL ,(VDEF,LIST4,CMNERSET,CHAR,LNG3),MF=L
ISPLNK5  CALL ,(VDEF,LIST5,CMNERRC,FIXED,LNG4),MF=L
ISPLNK6  CALL ,(VDEF,LIST6,CMNEROWN,CHAR,LNG8),MF=L
*
*
*
CAMLIST  CAMLST NAME,CMNERDSN,,WORK
WORK     DS    0D
         DS    CL265
REDISPSW DC    X'00'
CMDBUF   DC    H'512'
         DC    H'3'
CMD      DC    CL256'AD '''
         DC    CL256' '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER30
CMNER30  $PROLOG
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER30                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS NON REENTRANT, NON APF AUTHORIZED MODULE   *
*               WHICH CONTROLS DISPLAY OF THE INTIAL 'DELETE' SCREEN  *
*               AND CONTROLS THE SELECTION OF ADD SUB FUNCTIONS       *
*                                                                     *
*        PANELS - CMNER30                                             *
*                                                                     *
*        MESSAGES - CMNER300                                          *
*                   CMNER301                                          *
*                   CMNER302                                          *
*                   CMNER303                                          *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP           DEFINE DIALOG VARIABLES
C30000   CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR),VL
C30005   CH    R15,=H'8'           WAS END KEY ENTERED ? ? ?
         BE    C30999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C30010
         ABEND 1,DUMP
C30010   CALL ISPLINK,(VPUT,LIST5,SHARED)
         CLC   CMNERUID,=CL8' '    WAS USERID ENTERED
         BE    C30020              NO GO CHECK GROUP
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER22B)
         B     C30000
C30020   CLC   CMNERGRP,=CL8' '    WAS GROUP ENTERED
         BE    C30030              NO GO CHECK DSN
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER23B)
         B     C30000
C30030   CLC   CMNERDSN,=CL46' '   WAS DSN ENTERED
         BE    C30040              NO, GO CHECK GENERAL RESOURCE
         BAL   R10,QUAL
         CLC   CMNERVOL,=CL6' '    WAS VOLUME ENTERED? ? ?
         BE    C30034              NO, THEN DO LOCATE
         TRT   CMNERWDS,PARENTAB   IS THIS A GDG? ? ?
         BZ    C30036              NO, THEN BYPASS LOCATE
C30034   LOCATE CAMLIST            SEARCH CATALOG
         LTR   R15,R15             CHECK RETURN
         BZ    C30035              GOOD
         ST    R15,CMNERRC         NOT SO GOOD
         MVC   CURSOR,=CL8'CMNERVOL'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C30005
C30035   MVC   CMNERVOL,WORK+6
C30036   CALL  ISPLINK,(VPUT,LIST7,SHARED)
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER24B)
         B     C30000
C30040   CLC   CMNERRES,=CL8' '    WAS RESOURCE ENTERED
         BE    C30060              NO, THEN ISSUE MESSAGE
         CLC   CMNERCLS,=CL8' '    WAS CLASS ENTERED
         BNE   C30050              YES, THE SELECT GENERAL RESOURCE ADD
         CALL ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C30005
C30050   CALL  ISPLINK,(VSELECT,CMNERBL,CMNER21B)
         B     C30000
C30060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C30000
C30999   CALL  ISPLINK,(VDELETE,LIST5)
         $EPILOG
         SPACE 5
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL46' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(45),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         B     C30005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(44),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(VDEF,LIST1,CMNERDSN,CHAR,LNG44)
         CALL  ISPLINK,(VDEF,LIST2,CMNERUID,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST3,CMNERRES,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST4,CMNERVOL,CHAR,LNG6)
         CALL  ISPLINK,(VDEF,LIST6,CMNERRC,FIXED,LNG4)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VDELETE  DC    CL8'VDELETE'
VDEF     DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VSELECT  DC    CL8'SELECT'
*
*  LENGTHS
*
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'46'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERDSN CMNERWDS)'
LIST2    DC    C'(CMNERUID CMNERGRP)'
LIST3    DC    C'(CMNERRES CMNERCLS)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERUID '
         DC    C'CMNERGRP '
         DC    C'CMNERRES '
         DC    C'CMNERCLS)'
LIST6    DC    C'(CMNERRC)'
LIST7    DC    C'(CMNERWDS CMNERVOL)'
*
*  DIALOG MANAGER VARIABLES
*
CMNERDSN DC    CL46' '
CMNERWDS DC    CL46' '
CMNERUID DC    CL8' '
CMNERGRP DC    CL8' '
CMNERRES DC    CL8' '
CMNERCLS DC    CL8' '
CMNERVOL DC    CL6' '
CMNERRC  DC    F'0'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER30'
CURSOR   DC    CL8'CMNERUID'
MSG01    DC    CL8'CMNER300'
MSG02    DC    CL8'CMNER301'
MSG03    DC    CL8'CMNER302'       DATASET NOT FOUND
MSG04    DC    CL8'CMNER303'       INVALID DATASET NAME
CMNERBL  DC    F'12'
CMNER21B DC    C'PGM(CMNER31)'
CMNER22B DC    C'PGM(CMNER32)'
CMNER23B DC    C'PGM(CMNER33)'
CMNER24B DC    C'PGM(CMNER34)'
CAMLIST  CAMLST NAME,CMNERWDS,,WORK
         DS    0D
WORK     DS    CL265
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
         IHAACEE
         END
./ ADD  NAME=CMNER31
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER31  $PROLOG
***********************************************************************
*        PROGRAM - CMNER31                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A RDEL COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER31                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER310 - CMNER313                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         CALL  ISPLINK,(,LIST1,CMNERRES),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         CALL  ISPLINK,(VDISPLAY,PANEL,,)  DISPLAY 1ST PANEL
C31005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C31999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C31010              OKAY
         ABEND 1,DUMP
C31010   MVI   CMD+5,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+6(251),CMD+5
         CLC   CMNERRES,=CL8' '    WAS RESOURCE ENTERED
         BE    C31030              NO, THEN ERROR
         CLC   CMNERCLS,=CL8' '    WAS CLASS ENTERED
         BE    C31030              NO, THEN ERROR
         MVC   CMD+5(8),CMNERCLS
         MVC   CMD+14(8),CMNERRES
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C31020
         ABEND 2,DUMP
C31020   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C31025
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C31999
C31025   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C31999
C31030   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C31005
C31999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERRES CMNERCLS)'
LIST2    DC    C'(CMNERRC)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG8     DC    F'8'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER31'
MSG01    DC    CL8'CMNER310'
MSG02    DC    CL8'CMNER311'
MSG03    DC    CL8'CMNER312'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
CMNERRES DS    CL8' '
CMNERCLS DS    CL8' '
CMNERRC  DS    F'0'
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERRES,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'5'
CMD      DC    CL255'RDEL '
CMNEBRES DC    CL8' '
CMNEBCLS DC    CL8' '
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER32
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** DELETE USER *****'
CMNER32  $PROLOG
***********************************************************************
*        PROGRAM - CMNER32                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A DU   COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER31                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER310 - CMNER313                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         CALL  ISPLINK,(,LIST1,CMNERUID),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         CALL  ISPLINK,(VDISPLAY,PANEL,,)  DISPLAY 1ST PANEL
C31005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C31999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C31010              OKAY
         ABEND 1,DUMP
C31010   MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(253),CMD+3
         CLC   CMNERUID,=CL8' '    WAS USER ENTERED
         BE    C31030              NO, THEN ERROR
         MVC   CMD+3(8),CMNERUID
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C31020
         ABEND 2,DUMP
C31020   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            MAKEEAUTHORIZEDZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C31025
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C31999
C31025   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C31999
C31030   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C31005
C31999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERUID)'
LIST2    DC    C'(CMNERRC)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG8     DC    F'8'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER32'
MSG01    DC    CL8'CMNER320'
MSG02    DC    CL8'CMNER321'
MSG03    DC    CL8'CMNER322'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
CMNERUID DS    CL8' '
CMNERRC  DS    F'0'
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERUID,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
CMDBUF   DC    H'256'
CMDOFF   DC    H'3'
CMD      DC    CL256'DU '
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER33
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** DELETE GROUP *****'
CMNER33  $PROLOG
***********************************************************************
*        PROGRAM - CMNER33                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A DG   COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER33                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER330 - CMNER333                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         CALL  ISPLINK,(,LIST1,CMNERGRP),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         CALL  ISPLINK,(VDISPLAY,PANEL,,)  DISPLAY 1ST PANEL
C33005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C33999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C33010              OKAY
         ABEND 1,DUMP
C33010   MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         CLC   CMNERGRP,=CL8' '    WAS GROUP ENTERED
         BE    C33030              NO, THEN ERROR
         MVC   CMD+3(L'CMNERGRP),CMNERGRP
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C33020
         ABEND 2,DUMP
C33020   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C33025
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C33999
C33025   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C33999
C33030   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C33005
C33999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERGRP)'
LIST2    DC    C'(CMNERRC)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG8     DC    F'8'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER33'
MSG01    DC    CL8'CMNER330'
MSG02    DC    CL8'CMNER331'
MSG03    DC    CL8'CMNER332'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
CMNERGRP DS    CL8' '
CMNERRC  DS    F'0'
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'3'
CMD      DC    CL255'DG '
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER34
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** DELETE DATASET *****'
CMNER34  $PROLOG
***********************************************************************
*        PROGRAM - CMNER34                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A DD   COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER34                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER340 - CMNER343                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         CALL  ISPLINK,(,LIST1,CMNERWDS),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST3,CMNERSET),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,LIST4,CMNERVOL),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,LIST5),MF=(E,ISPLNK2)
         MVC   CMNERDSN,CMNERWDS
         CALL  ISPLINK,(VDISPLAY,PANEL,,)  DISPLAY 1ST PANEL
C34005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C34999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C34010              OKAY
         ABEND 1,DUMP
C34010   MVI   CMD+4,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+5(250),CMD+4
         CLC   CMNERWDS,=CL44' '   WAS DATASET ENTERED
         BE    C34030              NO, THEN ERROR
         MVC   CMD+4(L'CMNERWDS),CMNERWDS
         TRT   CMD+4(L'CMNERWDS+1),BLANKTAB
         MVI   0(R1),C''''
         LA    R5,2(R1)            ADVANCE TO NEXT BLANK
         CLC   CMNERVOL,=CL6' '    WAS VOL ENTERED
         BE    C34015              NO
         MVC   0(7,R5),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(6,R5),CMNERVOL    MOVE IN VOLUME
         TRT   7(L'CMNERVOL+1,R5),BLANKTAB
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            ADVANCE TO NEXT BLANK
C34015   MVC   0(5,R5),CMNERSET
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C34020
         ABEND 2,DUMP
C34020   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            MAKE AUTHORIZED
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C34025
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C34999
C34025   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
         B     C34999
C34030   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C34005
C34999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERWDS CMNERDSN)'
LIST2    DC    C'(CMNERRC)'
LIST3    DC    C'(CMNERSET)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERWDS CMNERVOL)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG5     DC    F'5'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'46'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER34'
MSG01    DC    CL8'CMNER340'
MSG02    DC    CL8'CMNER341'
MSG03    DC    CL8'CMNER342'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
CMNERWDS DS    CL46'  '
CMNERDSN DS    CL46'  '
CMNERSET DC    CL5'SET'
CMNERVOL DC    CL6' '
CMNERRC  DS    F'0'
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERWDS,CHAR,LNG44),MF=L
ISPLNK2  CALL  ,(VGET,LIST5,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL  ,(VDEF,LIST3,CMNERSET,CHAR,LNG5),MF=L
ISPLNK5  CALL  ,(VDEF,LIST4,CMNERVOL,CHAR,LNG6),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'3'
CMD      DC    CL255'DD '''
DYNWKLN  EQU   *-DYNWK
         END
./ ADD  NAME=CMNER40
CMNER40  $PROLOG
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER40                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS NON REENTRANT, NON APF AUTHORIZED MODULE   *
*               WHICH CONTROLS DISPLAY OF THE INTIAL 'MODIFY' SCREEN  *
*               AND CONTROLS THE SELECTION OF ADD SUB FUNCTIONS       *
*                                                                     *
*        PANELS - CMNER40                                             *
*                                                                     *
*        MESSAGES - CMNER400                                          *
*                   CMNER401                                          *
*                   CMNER402                                          *
*                   CMNER403                                          *
*                                                                     *
*        CHANGE LOG -                                                 *
*          10/22/81 - MODIFIED TO ALLOW FOR 8 CHARACTERS FOR GROUP    *
*                     OR USER IDS.                                    *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP           DEFINE DIALOG VARIABLES
C40000   CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR),VL
C40005   CH    R15,=H'8'           WAS END KEY ENTERED ? ? ?
         BE    C40999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C40010
         ABEND 1,DUMP
C40010   CALL ISPLINK,(VPUT,LIST5,SHARED)
         CLC   CMNERUID,=CL8' '    WAS USERID ENTERED
         BE    C40020              NO GO CHECK GROUP
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER42B)
         B     C40000
C40020   CLC   CMNERGRP,=CL8' '    WAS GROUP ENTERED
         BE    C40030              NO GO CHECK DSN
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER43B)
         B     C40000
C40030   CLC   CMNERDSN,=CL46' '   WAS DSN ENTERED
         BE    C40040              NO, GO CHECK GENERAL RESOURCE
         BAL   R10,QUAL
         CLC   CMNERVOL,=CL6' '    WAS VOLUME SPECIFIED
         BE    C40037              NO, THEN MUST DO LOCATE
         TRT   CMNERWDS,PARENTAB   IS THIS A RELATIVE GDG
         BZ    C40038                  NO THEN CONTINUE
C40037   LOCATE CAMLIST
         LTR   R15,R15             CHECK RETURN
         BZ    C40036              GOOD
         ST    R15,CMNERRC
         MVC   CURSOR,=CL8'CMNERVOL'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C40005
C40036   MVC   CMNERVOL,CATWRK+6
C40038   CALL  ISPLINK,(VPUT,LIST7,SHARED)
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER44B)
         B     C40000
C40040   CLC   CMNERRES,=CL8' '    WAS RESOURCE ENTERED
         BE    C40060              NO, THEN ISSUE MESSAGE
         CLC   CMNERCLS,=CL8' '    WAS CLASS ENTERED
         BNE   C40050              YES, THE SELECT GENERAL RESOURCE ADD
         CALL ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C40005
C40050   CALL  ISPLINK,(VSELECT,CMNERBL,CMNER41B)
         B     C40000
C40060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C40000
C40999   CALL  ISPLINK,(VDELETE,LIST5)
         $EPILOG
         $EPILOG
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL46' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(45),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         B     C40005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(44),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(VDEF,LIST1,CMNERDSN,CHAR,LNG44)
         CALL  ISPLINK,(VDEF,LIST2,CMNERUID,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST3,CMNERRES,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST4,CMNERVOL,CHAR,LNG6)
         CALL  ISPLINK,(VDEF,LIST6,CMNERRC,FIXED,LNG4)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VDELETE  DC    CL8'VDELETE'
VDEF     DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VSELECT  DC    CL8'SELECT'
*
*  LENGTHS
*
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'46'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERDSN CMNERWDS)'
LIST2    DC    C'(CMNERUID CMNERGRP)'
LIST3    DC    C'(CMNERRES CMNERCLS)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERUID '
         DC    C'CMNERGRP '
         DC    C'CMNERRES '
         DC    C'CMNERCLS)'
LIST6    DC    C'(CMNERRC)'
LIST7    DC    C'(CMNERWDS CMNERVOL)'
*
*  DIALOG MANAGER VARIABLES
*
CMNERDSN DC    CL46' '
CMNERWDS DC    CL46' '
CMNERUID DC    CL8' '
CMNERGRP DC    CL8' '
CMNERRES DC    CL8' '
CMNERCLS DC    CL8' '
CMNERVOL DC    CL6' '
CMNERRC  DC    F'0'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER40'
CURSOR   DC    CL8'CMNERUID'
MSG01    DC    CL8'CMNER400'
MSG02    DC    CL8'CMNER401'
MSG03    DC    CL8'CMNER402'    ENTER VOLUME
MSG04    DC    CL8'CMNER403'    INVALID DSN
CMNERBL  DC    F'12'
CMNER41B DC    C'PGM(CMNER41)'
CMNER42B DC    C'PGM(CMNER42)'
CMNER43B DC    C'PGM(CMNER43)'
CMNER44B DC    C'PGM(CMNER44)'
CAMLIST  CAMLST NAME,CMNERWDS,,CATWRK
         DS    0D
CATWRK   DS    CL265
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
         IHAACEE
         END
./ ADD  NAME=CMNER41
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER41  $PROLOG
***********************************************************************
*        PROGRAM - CMNER41                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A RALT COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER41                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER410 - CMNER414                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
C41000   BAL   R10,FILL
         MVC   CMNEBRES,CMNERRES   STORE RESOURCE
         MVC   CMNEBCLS,CMNERCLS       AND CLASS
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,)  DISPLAY 1ST PANEL
C41005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C41999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C41010              OKAY
         ABEND 1,DUMP
         SPACE 5
C41010   CLC   CMNEBRES,CMNERRES   MAKE SURE RESOURCE AND
         BNE   C41000
         CLC   CMNEBCLS,CMNERCLS       CLASS WERE'NT CHANGED
         BNE   C41000
         MVI   CMD+5,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+6(249),CMD+5
         MVC   CMD+5(8),CMNERCLS
         MVC   CMD+14(8),CMNERRES
         LA    R3,CMD+23           ADVANCE PAST RESOURCE
         MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN MOVE IN OWNER
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C41011
         ABEND 3,DUMP
C41011   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         MVC   0(5,R3),=C'UACC('   MOVE IN KEYWORD
         MVC   5(L'CMNERUAC,R3),CMNERUAC
         TRT   5(L'CMNERUAC+1,R3),BLANKTAB
         BNZ   C41012
         ABEND 3,DUMP
C41012   MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE
         MVC   0(6,R3),=C'AUDIT('  MOVE IN KEYWORD
         MVC   6(L'CMNERAUD,R3),CMNERAUD MOVE IN AUDIT
         TRT   6(L'CMNERAUD+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C41013
         ABEND 3,DUMP
C41013   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         CLC   CMNERDAT,=CL30' '   WAS INST DATA ENTERED
         BE    C41014              NO--
         MVC   0(6,R3),=C'DATA(''' YES-- MOVE IN KEYWORD
         MVC   6(L'CMNERDAT,R3),CMNERDAT MOVE IN DATA
         LA    R3,L'CMNERDAT+6(R3) ADVANCE
         MVC   0(2,R3),=C''')'     MOVE IN CLOSING QUOTE AND PAREN
         LA    R3,3(R3)
C41014   CLC   CMNERAPP,=CL30' '   WAS APPL DATA ENTERED
         BE    C41020              NO
         MVC   0(10,R3),=C'APPLDATA(''' YES-- MOVE IN KEYWORD
         MVC   10(L'CMNERAPP,R3),CMNERAPP MOVE IN APPL DATA
         LA    R3,L'CMNERAPP+10(R3) ADVANCE
         MVC   0(2,R3),=C''')'     MOVE IN CLOSING QUOTE AND PAREN
         LA    R3,3(R3)
*
*
C41020   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C41030
         ABEND 2,DUMP
C41030   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C41035
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C41040
C41035   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
C41040   CH    R15,=H'8'           CHECK FOR END KEY
         BE    C41999              YES--
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C41050              YES--
         ABEND 1,DUMP
C41050   CLC   CMNERRES,=CL8' '
         BE    C41060              ISSUE ERROR MESSAGE
         CLC   CMNERCLS,=CL8' '
         BE    C41060              ISSUE ERROR MESSAGE
         CLC   CMNEBRES,CMNERRES   DID RESOURCE CHANGE ?
         BNE   C41000              YES, THEN GET INFO FOR NEW ONE
         CLC   CMNEBCLS,CMNERCLS   DID CLASS CHANGE ?
         BNE   C41000              YES, THEN GET INFO FOR NEW ONE
         B     C41010              OTHERISE MORE MODS TO THIS ONE
C41060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C41040
C41999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    CALL  ISPLINK,(,LIST1,CMNERRES),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST3,CMNERDAT),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         BR    R10
         TITLE '***** FILL VARIABLES WITH RACF DATA *****'
FILL     EQU   *
         MVI   RESLN,L'CMNERRES    SET MAX LENGTH
         TRT   CMNERRES,BLANKTAB   SEARCH FOR BLANK
         BZ    FILL10              NOT FOUND THEN MUST BE MAX LENGTH
         LA    R15,CMNERRES
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,RESLN            STORE IT
FILL10   LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=RESLN,WKAREA=WK1,CLASS=CMNERCLS,        X
               MF=(E,TY1)
         LR    R14,R15             STORE RETURN
         SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL30              OKAY
         CH    R14,=H'12'          CHECK FOR NOT FOUND
         BE    FILL20              ISSUE MESSAGE
         ABEND 5,DUMP              OTHERISE SAY BYE
FILL20   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,,)
         CH    R15,=H'8'           CHECK RETURN
         BE    C41999
         LTR   R15,R15
         BZ    FILL                TRY AGAIN
         ABEND 1,DUMP
FILL30   EQU   *
         L     R1,544              ADDR OF ASCB
         L     R1,108(R1)          ADDR OF ASXB
         L     R1,200(R1)          ADDR OF ACEE
         USING ACEE,R1             SET UP ADDRESSIBILITY
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BO    FILL31              YES, CONTINUE
         XR    R15,R15             CLEAR R3
         IC    R15,ACEEUSRL         GET LENGTH OF USER
         BCTR  R15,0                REDUCE FOR COMPARE
         EX    R15,CHK1             CHECK IF USERID = OWNERID
         BE    FILL31              YES, THEN CONTINUE
*
*                                  CHECK FOR AT LEAST READ ACCESS
         MVC   WKCLASS,CMNERCLS
         RACHECK ENTITY=CMNERRES,CLASS=WKCLSLN,                        X
               MF=(E,RCHKL)
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZ    FILL31              GOOD, THEN CONTINUE
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,PANEL2,MSG06,)
         B     C41999              SAY BYE
CHK1     CLC   WOWN(0),ACEEUSRI
         DROP  R1
FILL31   MVC   CMNEROWN,WOWN       MOVE IN OWNER
         TM    WUACC,X'80'
         BNO   FILL32              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'ALTER'
         B     FILL40
FILL32   TM    WUACC,X'40'
         BNO   FILL33              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'CONTROL'
         B     FILL40
FILL33   TM    WUACC,X'20'
         BNO   FILL34              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'UPDATE'
         B     FILL40
FILL34   TM    WUACC,X'10'
         BNO   FILL35              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'READ'
         B     FILL40
FILL35   MVC   CMNERUAC,=CL8'NONE'
FILL40   TM    WAUDIT,X'80'        FILL IN AUDIT FIELD
         BNO   FILL42
         MVC   CMNERAUD,=CL8'ALL'
         B     FILL50
FILL42   TM    WAUDIT,X'40'        FILL IN AUDIT FIELD
         BNO   FILL44
         MVC   CMNERAUD,=CL8'SUCCESS '
         B     FILL50
FILL44   TM    WAUDIT,X'20'        FILL IN AUDIT FIELD
         BNO   FILL46
         MVC   CMNERAUD,=CL8'FAILURES'
         B     FILL50
FILL46   MVC   CMNERAUD,=CL8'NONE'
FILL50   XR    R15,R15             CLEAR REG
         IC    R15,WINST           GET LENGTH OF INST DATA
         CH    R15,=H'30'          CHECK FOR LESS THAN MAX
         BL    FILL60              YES
         LA    R15,30              SET MAX
FILL60   MVC   CMNERDAT,=CL30' ' CLEAR INST DATA FIELD
         LTR   R15,R15             IS LENGTH ZERO
         BZ    FILL70              THEN, NO INST DATA
         BCTR  R15,0               REDUCE FOR MOVE
         EX    R15,MOVDAT1         MOVE IT
FILL70   LA    R15,WIDATL          GET BEGINNING ADDR
         LH    R14,0(R15)          GET LENGTH
         LA    R15,4(R14,R15)      POINT TO APPL DATA
         XR    R14,R14             CLEAR REG
         IC    R14,0(R15)          GET LENGTH OF APPL
         MVC   CMNERAPP,=CL30' '
         LTR   R14,R14             ZERO? ? ?
         BZ    FILL99              YES, THEN, DONE
         CH    R14,=H'30'          CHECK FOR MAX
         BL    FILL80              NOT GREATER
         LA    R14,30              SET MAX
FILL80   BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDAT2
FILL99   BR    R10                 RETURN
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERRES CMNERCLS CMNEROWN CMNERAUD CMNERUAC)'
LIST2    DC    C'(CMNERRC)'
LIST3    DC    C'(CMNERDAT CMNERAPP)'
*
*        DIALOG MANAGER LENGTHS
*
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG30    DC    F'30'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER41'
PANEL2   DC    CL8'CMNER19'
MSG01    DC    CL8'CMNER410'       COMMAND SUCCESSFUL
MSG02    DC    CL8'CMNER411'       COMMAND FAILED
MSG03    DC    CL8'CMNER412'       ENTER RESOURCE/CLASS
MSG04    DC    CL8'CMNER413'       NOT FOUND
MSG05    DC    CL8'CMNER414'       ENTER CHANGES
MSG06    DC    CL8'CMNER415'       AUTHORIZATION ERROR
MOVDAT1  MVC   CMNERDAT(0),WINST+1
MOVDAT2  MVC   CMNERAPP(0),1(R15)
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
*
*
*
ACT1     ICHEACTN FIELD=OWNER,MF=L
ACT2     ICHEACTN FIELD=UACC,MF=L
ACT3     ICHEACTN FIELD=AUDIT,MF=L
ACT4     ICHEACTN FIELD=INSTDATA,MF=L
ACT5     ICHEACTN FIELD=APPLDATA,MF=L
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
RESLN    DS    X
CMNERRES DS    CL8' '
CMNERCLS DS    CL8' '
CMNEROWN DS    CL8' '
CMNERAUD DS    CL8' '
CMNERUAC DS    CL8' '
CMNERRC  DS    F'0'
CMNERDAT DS    CL30' '
CMNERAPP DS    CL30' '
CMNEBRES DC    CL8' '
CMNEBCLS DC    CL8' '
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERRES,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL   ,(VDEF,LIST3,CMNERDAT,CHAR,LNG30),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'5'
CMD      DC    CL255'RALT '
WKCLSLN  DC    X'08'
WKCLASS  DC    CL8' '
*
*
*
RCHKL    RACHECK ENTITY=CMNERRES,CLASS=WKCLSLN,ATTR=READ,MF=L
TY1      ICHEINTY LOCATE,TYPE='GEN',MF=L,ACTIONS=(ACT1,ACT2,ACT3,ACT4, X
               ACT5)
WK1      DC    A(WK1LN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    XL2
WUACC    DS    X
         DS    XL2
WAUDIT   DS    X
WIDATL   DS    XL2
WINST    DS    XL255
         DS    XL2
         DS    XL255
         DS    0F
WK1LN    EQU   *-WK1
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER42
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** CHANGE USER FUNCTION ******'
CMNER42  $PROLOG
***********************************************************************
*        PROGRAM - CMNER42                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A ALU  COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER42                                        *
*                    - CMNER19                                        *
*                    - CMNER45                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER420 - CMNER426                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          09/02/81 - 1. SUPPORT WAS ADDED TO MAINTAIN USER CAPABILITY*
*             SWITCHES. FOR A DISCUSSION SEE THE CHANGE LOG IN CMNER22*
*                     2. SUPPORT WAS ADDED TO USE THE FIRST CAPABILITY*
*             SWITCH FOR PASSWORD ONLY CHANGES. THIS GIVES THE USER   *
*             THE ABILITY TO CHANGE ANOTHER USER'S PASSWORD, EVEN     *
*             THOUGH HE DOES NOT MEET THE RACF REQUIREMENTS TO DO SO. *
*             THE IS CONTROLLED BY THE SETTING OF CAPABILITY SWITCH 1.*
*             THIS IS IMPLEMENTED BY TEMPORARILY MAKING THE USER      *
*             SPECIAL AND ISSUING THE ALU COMMAND. WHEN THE COMMAND   *
*             IS COMPLETE, THE USER IS RESET TO HIS ORIGINAL STATE.   *
*             THE USER WITH THE PASSWORD ONLY CAPABILITY WILL SEE ONLY*
*             A SCREEN WITH THE USERID AND A FIELD TO ENTER THE PASS- *
*             WORD(MENU CMNER45).                                     *
*          10/22/81 - MODIFIED TO ACCEPT 8 CHARACTER USER AND GROUP   *
*             IDENTIFIERS.                                            *
*          01/19/82 - MODIFIED TO ONLY BUILD ALU PARAMETERS OF        *
*             FIELDS CHANGED ON PANEL, NOT ALL FIELDS.  URSULA        *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
C42000   BAL   R10,FILL
         MVC   CMNEBUID,CMNERUID   STORE USER ID
         MVC   CMNEBCL1,CMNERCL1   SAVE CLASS AUTHORIZATIONS
         MVC   CMNEBCL2,CMNERCL2
         MVC   CMNEBCL3,CMNERCL3
         MVC   CMNEBNAM,CMNERNAM   SAVE PANEL FIELDS TO SEE IF CHANGED
         MVC   CMNEBOWN,CMNEROWN
         MVC   CMNEBDAT,CMNERDAT
         MVC   CMNEBDFG,CMNERDFG
         MVC   CMNEBGAU,CMNERGAU
         MVC   CMNEBGAC,CMNERGAC
         MVC   CMNEBADS,CMNERADS
         MVC   CMNEBSPC,CMNERSPC
         MVC   CMNEBOPN,CMNEROPN
         MVC   CMNEBAUD,CMNERAUD
         MVC   CMNEBREV,CMNERREV
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,)  DISPLAY 1ST PANEL
C42005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C42999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C42010              OKAY
         ABEND 1,DUMP
         SPACE 5
C42010   CLC   CMNEBUID,CMNERUID   MAKE SURE USIERID WASN'T CHANGED
         BNE   C42000
         MVC   CMDBUF(2),=H'355'   SET/RESET LENGTH
         MVC   CMDBUF+2(2),=H'4'   AND OFFSET
         MVI   CMD+4,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+5(250),CMD+4
         MVI   CMD2,C' '           CLEAR SECOND PART OF COMMAND
         MVC   CMD2+1(99),CMD2
         MVC   CMD+4(8),CMNERUID
         LA    R3,CMD+13           ADVANCE PAST RESOURCE
         CLC   CMNERPAS,=CL8' '    WAS PASSWORD ENTERED
         BE    C42020              NO, THEN BYPASS IT
         MVC   0(9,R3),=C'PASSWORD(' MOVE IN KEYWORD
         MVC   9(L'CMNERPAS,R3),CMNERPAS  MOVE IN NEW PASSWORD
         TRT   9(L'CMNERPAS+1,R3),BLANKTAB  SEARCH FOR 1ST BLANK
         BNZ   C42015              FOUND IT
         ABEND 2,DUMP
C42015   MVI   0(R1),C')'          CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         CLC   PANEL,=CL8'CMNER45' IS THIS A PASSWORD ONLY USER
         BNE   C42022              NO, THEN CONTINUE WITH OTHER STUFF
         L     R5,ACEEADDR         GET ACEE ADDRESS
         USING ACEE,R5
         CLC   ACEEACEE,=C'ACEE'   CHECK TO MAKE SURE ITS REAL
         BE    C42A10              OKAY
         ABEND 300,DUMP            NOT OKAY
C42A10   MVC   HOLDFLG,ACEEFLG1    STORE ATTRIBUTE FLAG
         LA    R1,=C'AUTH'         GET AUTHORIZATION
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         MODESET KEY=ZERO          SWITCH KEYS
         OI    ACEEFLG1,ACEESPEC   MAKE HIM SPECIAL TEMPORARILY
         MODESET KEY=NZERO         GET BACK TO PROGRAM KEY
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         BAL   R10,ISSUE           GO ISSUE COMMAND
         LA    R1,=C'AUTH'         GET AUTHORIZATION
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         MODESET KEY=ZERO          SWITCH KEYS
         MVC   ACEEFLG1,HOLDFLG    RESET ATTRIBUTES
         DROP  R5
         MODESET KEY=NZERO         AND GET OUT OF KEY ZERO
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         B     C42210              AND SKIP THE REST OF THIS STUFF
C42020   CLC   PANEL,=CL8'CMNER45' IS THIS A PASSWORD ONLY USER
         BE    C42000              YES, THEN TELL HIM TO ENTER SOMETING
C42022   CLC   CMNERNAM,CMNEBNAM   WAS NAME CHANGED?
         BE    C42025              NO, CHECK OWNER
         CLC   CMNERNAM,=CL20' '   WAS NAME SPACES?
         BNE   C42023              NAME OK, CONTINUE
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG06,)
         B     C42005
C42023   EQU   *
         MVC   0(5,R3),=C'NAME('   MOVE IN KEYWORD
         MVC   5(20,R3),CMNERNAM   MOVE IN NAME
         MVI   25(R3),C')'         MOVE IN CLOSING PAREN
         LA    R3,27(R3)           ADVANCE POINTER
C42025   EQU   *
         CLC   CMNEROWN,CMNEBOWN   WAS OWNER CHANGED?
         BE    C42033              NO, CONTINUE
         MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN MOVE IN OWNER
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C42030
         ABEND 3,DUMP
C42030   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
C42033   EQU   *
         CLC   CMNERDFG,CMNEBDFG   WAS DEFAULT GROUP CHANGED?
         BE    C42040              NO
         MVC   0(8,R3),=C'DFLTGRP(' MOVE IN KEYWORD
         MVC   8(L'CMNERDFG,R3),CMNERDFG
         TRT   8(L'CMNERDFG+1,R3),BLANKTAB
         BNZ   C42035              OK
         ABEND 2,DUMP
C42035   MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE POINTER
C42040   EQU   *
         CLC   CMNERGAU,CMNEBGAU   WAS GROUP AUTHORITY CHANGED?
         BE    C42050              NO GROUP AUTHORITY ENTERED
         MVC   0(10,R3),=C'AUTHORITY(' MOVE IN KEYWORD
         MVC   10(L'CMNERGAU,R3),CMNERGAU
         TRT   10(L'CMNERGAU+1,R3),BLANKTAB SEARCH FOR FIRST BLANK
         BNZ   C42045              FOUND IT
         ABEND 2,DUMP
C42045   MVI   0(R1),C')'
         LA    R3,2(R1)
C42050   EQU   *
         CLC   CMNERDAT,CMNEBDAT   WAS USER DATA CHANGED?
         BE    C42060              NO
         MVC   0(6,R3),=C'DATA(''' YES-- MOVE IN KEYWORD
         MVC   6(L'CMNERDAT,R3),CMNERDAT MOVE IN DATA
         LA    R3,L'CMNERDAT+6(R3) ADVANCE
         MVI   0(R3),0             MOVE IN DELIMETER FOR CAPABILITIES
         MVC   1(1,R3),CMNERCA1    MOVE IN CAPABILITIES
         MVC   2(1,R3),CMNERCA2
         MVC   3(1,R3),CMNERCA3
         LA    R3,4(R3)            ADVANCE
         MVC   0(2,R3),=C''')'     MOVE IN CLOSING QUOTE AND PAREN
         LA    R3,3(R3)
C42060   EQU   *
         CLC   CMNERGAC,CMNEBGAC   WAS GRPACC CHANGED?
         BE    C42070              NO--
         CLC   CMNERGAC,=C'YES'    YES
         BNE   C42065
         MVC   0(6,R3),=C'GRPACC'  MOVE IN KEYWORD
         LA    R3,7(R3)            ADVANCE POINTER
         B     C42070
C42065   MVC   0(8,R3),=C'NOGRPACC'
         LA    R3,9(R3)
C42070   EQU   *
         CLC   CMNERADS,CMNEBADS   WAS ADSP CHANGED?
         BE    C42080              NO--
         CLC   CMNERADS,=C'YES'    YES
         BNE   C42075              OR NO
         MVC   0(4,R3),=C'ADSP'
         LA    R3,5(R3)
         B     C42080
C42075   MVC   0(6,R3),=C'NOADSP'
         LA    R3,7(R3)
C42080   EQU   *
         CLC   CMNERSPC,CMNEBSPC   WAS SPECIAL CHANGED?
         BE    C42090              SPECIAL? ?
         CLC   CMNERSPC,=C'YES'    YES
         BNE   C42085              OR NO
         MVC   0(7,R3),=C'SPECIAL'
         LA    R3,8(R3)
         B     C42090
C42085   MVC   0(9,R3),=C'NOSPECIAL'
         LA    R3,10(R3)
C42090   EQU   *
         CLC   CMNEROPN,CMNEBOPN   WAS OPERATIONS CHANGED?
         BE    C42100
         CLC   CMNEROPN,=C'YES'    YES
         BNE   C42095              OR NO
         MVC   0(10,R3),=C'OPERATIONS'
         LA    R3,11(R3)
         B     C42100
C42095   MVC   0(12,R3),=C'NOOPERATIONS'
         LA    R3,13(R3)
C42100   EQU   *
         CLC   CMNERAUD,CMNEBAUD   WAS AUDITOR CHANGED?
         BE    C42110
         CLC   CMNERAUD,=C'YES'    YES
         BNE   C42105              OR NO
         MVC   0(7,R3),=C'AUDITOR'
         LA    R3,8(R3)
         B     C42110
C42105   MVC   0(9,R3),=C'NOAUDITOR'
         LA    R3,10(R3)
C42110   EQU   *
         CLC   CMNERREV,CMNEBREV   WAS REVOKE/RESUME CHANGED?
         BE    C42120
         CLC   CMNERREV,=C'YES'
         BNE   C42115
         MVC   0(6,R3),=C'REVOKE'
         LA    R3,7(R3)
         B     C42120
C42115   MVC   0(6,R3),=C'RESUME'
         LA    R3,7(R3)
C42120   EQU   *
         MVC   NCLS,=CL26' '       BLANK OUT NCLAUTH AREA
         MVC   CLS,=CL26' '        BLANK OUT CLAUTH AREA
         LA    R6,NCLS             NCLS POINTERS
         LA    R15,0               NCLS LENGTH COUNT
         LA    R5,CLS              CLS POINTER
         LA    R14,0               CLS LENGTH COUNT
         CLC   CMNERCL1,CMNEBCL1   DID CLASS 1 CHANGE ? ?
         BE    C42130              NO, THEN CHECK CLASS 2
         CLC   CMNEBCL1,=CL8' '    WAS PREVIOUS CLASS 1, BLANK ? ? ?
         BE    C42125              YES, THEN CHECK CURRENT
         MVC   NCLS(8),CMNEBCL1    NO, THEN SET FOR NCLAUTH
         LA    R6,9(R6)            ADVANCE POINTER
         LA    R15,9(R15)          ADVANCE COUNT
C42125   CLC   CMNERCL1,=CL8' '    IS CURRENT CLASS 1, BLANK ? ? ?
         BE    C42130              YES, THEN CHECK CLASS 2
         MVC   CLS(8),CMNERCL1     NO, THEN SET FOR CLAUTH
         LA    R5,9(R5)            ADVANCE POINTER
         LA    R14,9(R14)          ADVANCE COUNT
C42130   EQU   *
         CLC   CMNEBCL2,CMNERCL2   DID CLASS 2 CHANGE
         BE    C42140              NO, THEN CHECK CLASS 3
         CLC   CMNEBCL2,=CL8' '    WAS PREVIOUS CLASS 2, BLANK ? ? ?
         BE    C42135              YES, THEN CHECK CURRENT
         MVC   0(8,R6),CMNEBCL2    NO, THEN SET FOR NCLAUTH
         LA    R6,9(R6)            ADVANCE POINTER
         LA    R15,9(R15)          ADVANCE COUNT
C42135   CLC   CMNERCL2,=CL8' '    IS CURRENT CLASS 2, BLANK ? ? ?
         BE    C42140              YES, THEN CHECK CLASS 3
         MVC   0(8,R5),CMNERCL2     NO, THEN SET FOR CLAUTH
         LA    R5,9(R5)            ADVANCE POINTER
         LA    R14,9(R14)          ADVANCE COUNT
C42140   EQU   *
         CLC   CMNEBCL3,CMNERCL3   DID CLASS 3 CHANGE
         BE    C42150              NO, THEN BUILD PARAMETER
         CLC   CMNEBCL3,=CL8' '    WAS PREVIOUS CLASS 3, BLANK ? ? ?
         BE    C42145              YES, THEN CHECK CURRENT
         MVC   0(8,R6),CMNEBCL3    NO, THEN SET FOR NCLAUTH
         LA    R15,8(R15)          ADVANCE COUNT
C42145   CLC   CMNERCL3,=CL8' '    IS CURRENT CLASS 3, BLANK ? ? ?
         BE    C42150              YES, THEN BUILD REST OF COMMAND
         MVC   0(8,R5),CMNERCL3     NO, THEN SET FOR CLAUTH
         LA    R14,8(R14)          ADVANCE COUNT
C42150   EQU   *
         LTR   R14,R14             ANY CLAUTH
         BZ    C42160              NO-- THEN TRY NOCLAUTH
         MVC   0(7,R3),=C'CLAUTH(' MOVE IN KEYWORD
         MVC   7(L'CLS,R3),CLS     MOVE IN CLASSES
         LA    R3,7(R3,R14)        ADVANCE POINTER
         MVI   0(R3),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R3)            ADVANCE TO NEXT AVAILABLE
C42160   EQU   *
         LTR   R15,R15             ANY NOCLAUTH
         BZ    C42170              NO-- PREPARE TO ISSUE COMMAND
         MVC   0(9,R3),=C'NOCLAUTH(' MOVE IN KEYWORD
         MVC   9(L'NCLS,R3),NCLS   MOVE IN CLASSES
         LA    R3,9(R3,R15)        ADVANCE POINTER
         MVI   0(R3),C')'          MOVE IN CLOSING PAREN
C42170   EQU   *
         BAL   R10,ISSUE
C42210   L     R4,ISPCATRC         GET RETURN
         LTR   R4,R4               CHECK IT
         BZ    C42220
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C42230
C42220   EQU   *
         MVC   CMNEBCL1,CMNERCL1   MOVE IN CLASSES FOR NEXT TIME
         MVC   CMNEBCL2,CMNERCL2
         MVC   CMNEBCL3,CMNERCL3
         MVC   CMNEBNAM,CMNERNAM   SAVE PANEL FIELDS TO SEE IF CHANGED
         MVC   CMNEBOWN,CMNEROWN
         MVC   CMNEBDAT,CMNERDAT
         MVC   CMNEBDFG,CMNERDFG
         MVC   CMNEBGAU,CMNERGAU
         MVC   CMNEBGAC,CMNERGAC
         MVC   CMNEBADS,CMNERADS
         MVC   CMNEBSPC,CMNERSPC
         MVC   CMNEBOPN,CMNEROPN
         MVC   CMNEBAUD,CMNERAUD
         MVC   CMNEBREV,CMNERREV
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,) PROCESSING COMPLETE
C42230   CH    R15,=H'8'           CHECK FOR END KEY
         BE    C42999              YES--
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C42240              YES--
         ABEND 1,DUMP
C42240   CLC   CMNERUID,=CL8' '
         BE    C42250              ISSUE ERROR MESSAGE
         CLC   CMNEBUID,CMNERUID   DID USERID CHANGE ?
         BNE   C42000              YES, THEN GET INFO FOR NEW ONE
         B     C42010              OTHERISE MORE MODS TO THIS ONE
C42250   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C42230
C42999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    CALL  ISPLINK,(,LIST4,CMNERUID),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST3,CMNERDAT),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,LIST5,CMNERNAM),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,LIST6,CMNERGAC),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         BR    R10
         TITLE '***** ISSUE TSO COMMAND SUBROUTINE *****'
ISSUE    L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    ISSUE10
         ABEND 2,DUMP
ISSUE10  ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         BR    R10                 RETURN
         TITLE '***** FILL VARIABLES WITH RACF DATA *****'
FILL     EQU   *
         MVC   CMNERCL1,=CL8' '
         MVC   CMNERCL2,=CL8' '    CLEAR OUT CLASSES
         MVC   CMNERCL3,=CL8' '
         MVI   UIDLN,L'CMNERUID    SET MAX LENGTH
         TRT   CMNERUID,BLANKTAB   SEARCH FOR BLANK
         BZ    FILL10              NOT FOUND THEN MUST BE MAX LENGTH
         LA    R15,CMNERUID
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,UIDLN            STORE IT
FILL10   LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=UIDLN,WKAREA=WK1,                       X
               MF=(E,TY1)
         LR    R14,R15             STORE RETURN
         SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL30              OKAY
         CH    R14,=H'12'          CHECK FOR NOT FOUND
         BE    FILL20              ISSUE MESSAGE
         ABEND 5,DUMP              OTHERISE SAY BYE
FILL20   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,,)
         CH    R15,=H'8'           CHECK RETURN
         BE    C42999
         LTR   R15,R15
         BZ    FILL                TRY AGAIN
         ABEND 1,DUMP
FILL30   EQU   *
         L     R15,544             ASCB
         L     R15,108(R15)        ADDR OF ASXB
         L     R15,200(R15)        ACEE
         ST    R15,ACEEADDR
         USING ACEE,R15
         TM    ACEEFLG1,ACEESPEC   AM I SPECIAL ? ?
         BO    FILL31              YES, THEN I CAN DO ANYTHING
         XR    R14,R14             CLEAR REG
         IC    R14,ACEEUSRL        GET LENGTH OF USER
         BCTR  R14,0               REDUCE FOR COMPARE
         EX    R14,MYCHK           IS IT MY ID ? ?
         BE    FILL31              YES, THEN I CAN AT LEAST LIST IT
         EX    R14,OWNCHK          AM I THE OWNERE? ? ?
         BE    FILL31              YES, THEN I CAN LIST AND MODIFY
         L     R14,ACEEINST        GET ADDR OF INST DATA
         XR    R1,R1               CLEAR R1
         IC    R1,0(R14)           GET LENGTH
         CH    R1,=H'30'           IF 30 OR LESS, THEN NO CAPABILITY
*                                  SWITCHES
         BL    FILL30B
         CLI   31(R14),0           CHECK FOR CAPABILITY DELIMETER
         BNE   FILL30B             NOT PRESENT
         CLI   32(R14),C'Y'        CHECK FOR CHANGE PASSWORD CAPABILITY
         BNE   FILL30B             NOPE--
         MVC   PANEL,=CL8'CMNER45' YES, RESET PANEL ID
         MVC   CMNERPAS,=CL8' '
         B     FILL99              AND SKIP REST OF STUFF
FILL30B  CALL  ISPLINK,(VDISPLAY,PANEL2,MSG07,)
         B     C42999              ON A SECURITY VIOLATION, SAY BYE
MYCHK    CLC   CMNERUID(0),ACEEUSRI
OWNCHK   CLC   WOWN(0),ACEEUSRI
         DROP  R15
FILL31   MVC   CMNEROWN,WOWN       MOVE IN OWNER
         MVC   CMNERPAS,=CL8' '    CLEAR PASSWORD
         MVC   CMNERNAM,WPGMR      MOVE IN PROGRAMMER NAME
         MVC   CMNERDFG,WDFLTGRP   MOVE IN DEFAULT GROUP
         MVC   CMNERGAC,=C'NO '    GRPACC
         TM    WFLAG5,X'80'
         BZ    FILL32
         MVC   CMNERGAC,=C'YES'
FILL32   MVC   CMNERADS,=C'NO '    ADSP
         TM    WFLAG1,X'80'
         BZ    FILL34
         MVC   CMNERADS,=C'YES'
FILL34   MVC   CMNERSPC,=C'NO '    SPECIAL
         TM    WFLAG2,X'80'
         BZ    FILL36
         MVC   CMNERSPC,=C'YES'
FILL36   MVC   CMNEROPN,=C'NO '    OPERATIONS
         TM    WFLAG3,X'80'
         BZ    FILL38
         MVC   CMNEROPN,=C'YES'
FILL38   MVC   CMNERAUD,=C'NO '    AUDITOR
         TM    WFLAG6,X'80'
         BZ    FILL40
         MVC   CMNERAUD,=C'YES'
FILL40   MVC   CMNERREV,=C'NO '    REVOKED
         TM    WFLAG4,X'80'
         BZ    FILL42
         MVC   CMNERREV,=C'YES'
FILL42   LA    R15,WCLCT           GET CLASS COUNT
         LH    R15,0(R15)
         LTR   R15,R15             ARE THERE ANY ? ?
         BZ    FILL50              NO--
         MVC   CMNERCL1,WCLS       MOVE IN CLASS 1
         BCT   R15,*+8             CONTINUE IF MORE
         B     FILL50
         MVC   CMNERCL2,WCLS+8     MOVE IN CLASS 2
         BCT   R15,*+8             CONTINUE IF MORE
         B     FILL50
         MVC   CMNERCL3,WCLS+16    MOVE IN CLASS 3
FILL50   LA    R14,WCLSLN          GET LENGTH OF CLASSES
         LH    R14,0(R14)
         LA    R14,WCLS(R14)       ADVANCE TO INSTALATION DATA
         MVC   CMNERDAT,=CL30' ' CLEAR INST DATA FIELD
         MVC   CMNERCA1,=CL3'NO'   SET DEFAULT CAPABILITIES
         MVC   CMNERCA2,=CL3'NO'
         MVC   CMNERCA3,=CL3'NO'
         XR    R15,R15             CLEAR R15
         IC    R15,2(R14)          GET LENGTH OF USER DATA
         CH    R15,=H'31'          CHECK FOR LESS THAN MAX
         BL    FILL60              YES
         MVC   CMNERDAT,3(R14)     MOVE IN DATA
         CLI   33(R14),0           CHECK FOR CAPABILITY DELIMETER
         BNE   FILL70              NOT FOUND, THEN CONTINUE
         CLI   34(R14),C'Y'        NOW CHECK CAPABLITIES
         BNE   FILL61
         MVC   CMNERCA1,=C'YES'
FILL61   CLI   35(R14),C'Y'
         BNE   FILL62
         MVC   CMNERCA2,=C'YES'
FILL62   CLI   36(R14),C'Y'
         BNE   FILL70
         MVC   CMNERCA3,=C'YES'
         B     FILL70
FILL60   LTR   R15,R15             IS LENGTH ZERO
         BZ    FILL70              THEN, NO INST DATA
         BCTR  R15,0               REDUCE FOR MOVE
         EX    R15,MOVDAT1         MOVE IT
         CNOP  0,4
FILL70   ICHEACTN TESTS=(TST1),MF=(E,ACT13)   RELOCATE RACF MACROS
         ICHETEST FLDATA=(8,CMNERUID),MF=(E,TST1)
         MVC   DFLTGRP,CMNERDFG
         MVI   DFLTLEN,L'DFLTGRP   MOVE IN MAX LEN
         TRT   DFLTGRP,BLANKTAB    FIND FIRST BLANK
         BZ    FILL72              NOT FOUND, THEN MUST BE MAX
         LA    R15,DFLTGRP         GET BEGININNING
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,DFLTLEN          STORE IT
FILL72   LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=DFLTLEN,WKAREA=WK2,ACTIONS=(ACT13),     X
               OPTIONS=(FLDEF),MF=(E,TY2)
         LR    R14,R15             STORE RETURN
         SR    R1,R1               UNAUTHORIZE
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL80
         ABEND 6,DUMP
FILL80   TM    W2ACS,X'80'         FILL IN GROUP AUTHORITY
         BNO   FILL82
         MVC   CMNERGAU,=CL8'JOIN'
         B     FILL99
FILL82   TM    W2ACS,X'40'
         BNO   FILL84
         MVC   CMNERGAU,=CL8'CONNECT'
         B     FILL99
FILL84   TM    W2ACS,X'20'
         BNO   FILL86
         MVC   CMNERGAU,=CL8'CREATE'
         B     FILL99
FILL86   MVC   CMNERGAU,=CL8'USE'
FILL99   BR    R10                 RETURN
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERUID)'
LIST2    DC    C'(CMNERRC)'
LIST3    DC    C'(CMNERDAT)'
LIST4    DC    C'(CMNERUID '
         DC    C'CMNERDFG '
         DC    C'CMNERGAU '
         DC    C'CMNEROWN '
         DC    C'CMNERCL1 '
         DC    C'CMNERCL2 '
         DC    C'CMNERCL3 '
         DC    C'CMNERPAS)'
LIST5    DC    C'(CMNERNAM)'
LIST6    DC    C'(CMNERGAC '
         DC    C'CMNERADS '
         DC    C'CMNERSPC '
         DC    C'CMNEROPN '
         DC    C'CMNERAUD '
         DC    C'CMNERREV '
         DC    C'CMNERCA1 '
         DC    C'CMNERCA2 '
         DC    C'CMNERCA3)'
*
*        DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG8     DC    F'8'
LNG20    DC    F'20'
LNG30    DC    F'30'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER42'
PANEL2   DC    CL8'CMNER19'
MSG01    DC    CL8'CMNER420'       COMMAND SUCCESSFUL
MSG02    DC    CL8'CMNER421'       COMMAND FAILED
MSG03    DC    CL8'CMNER422'       ENTER USERID
MSG04    DC    CL8'CMNER423'       NOT FOUND
MSG05    DC    CL8'CMNER424'       ENTER CHANGES
MSG06    DC    CL8'CMNER425'       NAME REQUIRED
MSG07    DC    CL8'CMNER426'       NOT AUTHORIZED
MOVDAT1  MVC   CMNERDAT(0),3(R14)
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=PGMRNAME,MF=L
ACT3     ICHEACTN FIELD=DFLTGRP,MF=L
ACT4     ICHEACTN FIELD=FLAG1,MF=L
ACT5     ICHEACTN FIELD=FLAG2,MF=L
ACT6     ICHEACTN FIELD=FLAG3,MF=L
ACT7     ICHEACTN FIELD=FLAG4,MF=L
ACT8     ICHEACTN FIELD=FLAG5,MF=L
ACT9     ICHEACTN FIELD=FLAG6,MF=L
ACT10    ICHEACTN FIELD=CLCNT,MF=L
ACT11    ICHEACTN FIELD=CLNAME,MF=L
ACT12    ICHEACTN FIELD=INSTDATA,MF=L
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
NCLS     DS    CL26
CLS      DS    CL26
*
*        DIALOG MANAGER VARIABLES
*
UIDLN    DS    X
CMNERUID DS    CL8' '
CMNERDFG DS    CL8' '
CMNERGAU DS    CL8' '
CMNEROWN DS    CL8' '
CMNERCL1 DS    CL8
CMNERCL2 DS    CL8
CMNERCL3 DS    CL8
CMNERPAS DS    CL8
CMNERRC  DS    F'0'
CMNERDAT DS    CL30' '
CMNERNAM DS    CL20' '
CMNERGAC DS    CL3
CMNERADS DS    CL3
CMNERSPC DS    CL3
CMNEROPN DS    CL3
CMNERAUD DS    CL3
CMNERREV DS    CL3
CMNERCA1 DS    CL3
CMNERCA2 DS    CL3
CMNERCA3 DS    CL3
CMNEBUID DC    CL8' '
CMNEBCL1 DC    CL8' '
CMNEBCL2 DC    CL8' '
CMNEBCL3 DC    CL8' '
CMNEBNAM DC    CL20' '       SAVE AREA FOR DIALOG FIELDS
CMNEBOWN DS    CL8' '
CMNEBDAT DS    CL30' '
CMNEBDFG DC    CL8' '        WAS DEFAULT GROUP ENTERED
CMNEBGAU DC    CL8' '
CMNEBGAC DC    CL3' '        WAS GRPACC ENTERED
CMNEBADS DC    CL3' '        WAS ADSP ENTERED
CMNEBSPC DC    CL3' '
CMNEBOPN DC    CL3' '        OPERATIONS
CMNEBAUD DC    CL3' '        AUDITOR
CMNEBREV DC    CL3' '        REVOKE/RESUME
HOLDFLG  DS    X
ACEEADDR DS    A
DFLTLEN  DC    X'00'
DFLTGRP  DC    CL8' '
*
*   LISTS
*
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERUID,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL   ,(VDEF,LIST3,CMNERDAT,CHAR,LNG30),MF=L
ISPLNK5  CALL   ,(VDEF,LIST5,CMNERNAM,CHAR,LNG20),MF=L
ISPLNK6  CALL   ,(VDEF,LIST6,CMNERGAC,CHAR,LNG3),MF=L
CMDBUF   DC    H'355'
CMDOFF   DC    H'4'
CMD      DC    CL255'ALU '
CMD2     DC    CL100' '
*
*
*
TY1      ICHEINTY LOCATE,TYPE='USR',MF=L,ACTIONS=(ACT1,ACT2,ACT3,ACT4, X
               ACT5,ACT6,ACT7,ACT8,ACT9,ACT10,ACT11,ACT12)
TY2      ICHEINTY LOCATE,TYPE='GRP',MF=L,ACTIONS=(ACT13),WKAREA=WK2
TST1     ICHETEST MF=L,FIELD=USERID,COND=EQ
ACT13    ICHEACTN MF=L,FIELD=ACL,TESTS=(TST1)
WK1      DC    A(WK1LN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    XL2
WPGMR    DS    XL20
         DS    XL2
WDFLTGRP DS    XL8
         DS    XL2
WFLAG1   DS    X
         DS    XL2
WFLAG2   DS    X
         DS    XL2
WFLAG3   DS    X
         DS    XL2
WFLAG4   DS    X
         DS    XL2
WFLAG5   DS    X
         DS    XL2
WFLAG6   DS    X
         DS    XL2
WCLCT    DS    XL2
WCLSLN   DS    XL2
WCLS     DS    20XL8
         DS    XL2
WINST    DS    XL255
         DS    XL2
         DS    XL255
         DS    0F
WK1LN    EQU   *-WK1
WK2      DC    A(WK2LN)
         DS    6F
         DS    H
         DS    CL8
W2ACS    DS    X
         DS    XL2
         DS    0D
WK2LN    EQU   *-WK2
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER43
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER43  $PROLOG
***********************************************************************
*        PROGRAM - CMNER43                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A RALT COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER43                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER430 - CMNER434                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
C43000   BAL   R10,FILL
         MVC   CMNEBGRP,CMNERGRP   STORE GROUP
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,)  DISPLAY 1ST PANEL
C43005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C43999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C43010              OKAY
         ABEND 1,DUMP
         SPACE 5
C43010   CLC   CMNEBGRP,CMNERGRP   MAKE SURE GROUP    AND
         BNE   C43000
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'4'
         MVI   CMD+4,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+5(250),CMD+4
         MVC   CMD+4(8),CMNERGRP   MOVE IN GROUP
         LA    R3,CMD+13           ADVANCE PAST GROUP
         MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN MOVE IN OWNER
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C43011
         ABEND 3,DUMP
C43011   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         MVC   0(9,R3),=C'SUPGROUP(' MOVE IN KEYWORD
         MVC   9(L'CMNERSUG,R3),CMNERSUG
         TRT   9(L'CMNERSUG+1,R3),BLANKTAB
         BNZ   C43012
         ABEND 3,DUMP
C43012   EQU   *
         MVI   0(R1),C')'
         LA    R3,2(R1)
         CLC   CMNERNOT,=CL3'NO'
         BE    C43014
         MVC   0(8,R3),=C'TERMUACC'
         B     C43020
C43014   MVC   0(10,R3),=C'NOTERMUACC'
*
*
C43020   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C43030
         ABEND 2,DUMP
C43030   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R4,R4               CHECK IT
         BZ    C43035
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C43040
C43035   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
C43040   CH    R15,=H'8'           CHECK FOR END KEY
         BE    C43999              YES--
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C43050              YES--
         ABEND 1,DUMP
C43050   CLC   CMNERGRP,=CL8' '
         BE    C43060              ISSUE ERROR MESSAGE
         CLC   CMNEBGRP,CMNERGRP   DID GROUP CHANGE ?
         BNE   C43000              YES, THEN GET INFO FOR NEW ONE
         B     C43010              OTHERISE MORE MODS TO THIS ONE
C43060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C43040
C43999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    CALL  ISPLINK,(,LIST1,CMNERGRP),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST3,CMNERNOT),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,LIST1),MF=(E,ISPLNK2)
         BR    R10
         TITLE '***** FILL VARIABLES WITH RACF DATA *****'
FILL     EQU   *
         MVI   GRPLN,L'CMNERGRP    SET MAX LENGTH
         TRT   CMNERGRP,BLANKTAB   SEARCH FOR BLANK
         BZ    FILL10              NOT FOUND THEN MUST BE MAX LENGTH
         LA    R15,CMNERGRP
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,GRPLN            STORE IT
FILL10   LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=WK1,                       X
               MF=(E,TY1)
         LR    R14,R15             STORE RETURN
         SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL30              OKAY
         CH    R14,=H'12'          CHECK FOR NOT FOUND
         BE    FILL20              ISSUE MESSAGE
         ABEND 5,DUMP              OTHERISE SAY BYE
FILL20   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,,)
         CH    R15,=H'8'           CHECK RETURN
         BE    C43999
         LTR   R15,R15
         BZ    FILL                TRY AGAIN
         ABEND 1,DUMP
FILL30   EQU   *
         L     R5,544              ADDR OF ASCB
         L     R5,108(R5)          ADDR OF ASXB
         L     R5,200(R5)          ADDR OF ACEE
         USING ACEE,R5             SET UP ADDRESSIBILITY
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BO    FILL31              YES, CONTINUE
         XR    R15,R15             CLEAR R3
         IC    R15,ACEEUSRL         GET LENGTH OF USER
         BCTR  R15,0                REDUCE FOR COMPARE
         EX    R15,CHK1             CHECK IF USERID = OWNERID
         BE    FILL31              YES, THEN CONTINUE
*
*                                  CHECK FOR AT LEAST JOIN OR CREATE
         ICHEACTN TESTS=(TST1),MF=(E,ACT13)   RELOCATE RACF MACROS
         XR    R11,R11             CLEAR R5
         IC    R11,ACEEUSRL
         ICHETEST FLDATA=((R11),ACEEUSRI),MF=(E,TST1)
         LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=GRPLN,WKAREA=WK2,ACTIONS=(ACT13),       X
               OPTIONS=(FLDEF),MF=(E,TY2)
         LR    R14,R15             STORE RETURN
         SR    R1,R1               UNAUTHORIZE
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL30A
         CH    R14,=H'52'          TEST NOT MET, IE. USER NOT ON LIST
         BE    FILL30B
         ABEND 6,DUMP              ANYTHING ELSE, SAY BYE
*
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
FILL30A  TM    W2ACS,X'C0'          AT LEAST JOIN OR CONNECT
         BC    7,FILL31            YES--
FILL30B  CALL  ISPLINK,(VDISPLAY,PANEL2,MSG06,)
         B     C43999              SAY BYE
CHK1     CLC   WOWN(0),ACEEUSRI
         DROP  R5
FILL31   MVC   CMNEROWN,WOWN       MOVE IN OWNER
         MVC   CMNERSUG,WSUG       MOVE IN SUPERIOR GROUPT
         MVC   CMNERNOT,=CL3'NO'   MOVE IN DEFAULT
         TM    WNOT,X'80'
         BO    FILL99              OKAY
         MVC   CMNERNOT,=CL3'YES'
FILL99   BR    R10                 RETURN
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERGRP CMNEROWN CMNERSUG)'
LIST2    DC    C'(CMNERRC)'
LIST3    DC    C'(CMNERNOT)'
*
*        DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG8     DC    F'8'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER43'
PANEL2   DC    CL8'CMNER19'
MSG01    DC    CL8'CMNER430'       COMMAND SUCCESSFUL
MSG02    DC    CL8'CMNER431'       COMMAND FAILED
MSG03    DC    CL8'CMNER432'       ENTER GROUP
MSG04    DC    CL8'CMNER433'       NOT FOUND
MSG05    DC    CL8'CMNER434'       ENTER CHANGES
MSG06    DC    CL8'CMNER435'       AUTHORIZATION FAILED
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=SUPGROUP,MF=L
ACT3     ICHEACTN FIELD=NOTRMUAC,MF=L
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
GRPLN    DS    X
CMNERGRP DS    CL8' '
CMNEROWN DS    CL8' '
CMNERSUG DS    CL8' '
CMNERRC  DS    F'0'
CMNERNOT DS    CL3' '
CMNEBGRP DC    CL8' '
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK2  CALL  ,(VGET,LIST1,SHARED),MF=L
ISPLNK3  CALL   ,(VDEF,LIST1,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL   ,(VDEF,LIST3,CMNERNOT,CHAR,LNG3),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'4'
CMD      DC    CL255'ALG '
*
*
*
TY1      ICHEINTY LOCATE,TYPE='GRP',MF=L,ACTIONS=(ACT1,ACT2,ACT3)
TY2      ICHEINTY LOCATE,TYPE='GRP',MF=L,ACTIONS=(ACT13),WKAREA=WK2
TST1     ICHETEST MF=L,FIELD=USERID,COND=EQ
ACT13    ICHEACTN MF=L,FIELD=ACL,TESTS=(TST1)
WK1      DC    A(WK1LN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    XL2
WSUG     DS    CL8
         DS    XL2
WNOT     DS    X
         DS    0F
WK1LN    EQU   *-WK1
WK2      DC    A(WK2LN)
         DS    6F
         DS    H
         DS    CL8
W2ACS    DS    X
         DS    XL2
         DS    0D
WK2LN    EQU   *-WK2
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER44
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
CMNER44  $PROLOG
***********************************************************************
*        PROGRAM - CMNER44                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT ROUTINE WHICH AUTHORIZES ITSELF*
*               BUILDS A ALD  COMMAND AND BRANCHES TO ISPCAT. ISPCAT  *
*               IS A SPF SUBROUTINE WHICH ATTACHES AND EXECUTES TSO   *
*               COMMANDS.                                             *
*                                                                     *
*        PANELS USED - CMNER44                                        *
*                      CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER440 - CMNER446                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
C44000   BAL   R10,FILL
         MVC   CMNEBDSN,CMNERDSN   STORE DATASET
         MVC   CMNEBVOL,CMNERVOL   STORE VOLUME
         MVC   CURSOR,=CL8'CMNERUNI'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG05,CURSOR)  DISPLAY 1ST PANEL
C44005   CH    R15,=H'8'           END ENTERED? ? ?
         BE    C44999              YES--
         LTR   R15,R15             CHECK RETURN
         BZ    C44010              OKAY
         ABEND 1,DUMP
         SPACE 5
C44010   CLC   CMNEBDSN,CMNERDSN   MAKE SURE DATASET  AND
         BNE   C44000
         CLC   CMNERVOL,CMNEBVOL   VOLUME HAVE NOT CHANGED
         BNE   C44000
         MVI   CMD+4,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+5(250),CMD+4
         MVI   CMD+4,C''''         BEGINING QUOTE
         MVC   CMD+5(L'CMNERWDS),CMNERWDS MOVE IN DATASET NAME
         TRT   CMD+5(L'CMNERWDS+1),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C''''         MOVE IN CLOSING BLANK
         LA    R3,2(R1)            POISITION R3
         MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN MOVE IN OWNER
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C44011
         ABEND 3,DUMP
C44011   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         MVC   0(5,R3),=C'UACC('   MOVE IN KEYWORD
         MVC   5(L'CMNERUAC,R3),CMNERUAC
         TRT   5(L'CMNERUAC+1,R3),BLANKTAB
         BNZ   C44012
         ABEND 3,DUMP
C44012   MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE
         MVC   0(6,R3),=C'AUDIT('  MOVE IN KEYWORD
         MVC   6(L'CMNERAUD,R3),CMNERAUD MOVE IN AUDIT
         TRT   6(L'CMNERAUD+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         BNZ   C44013
         ABEND 3,DUMP
C44013   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE
         MVC   0(7,R3),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(L'CMNERVOL,R3),CMNERVOL MOVE IN VOLUME
         TRT   7(L'CMNERVOL+1,R3),BLANKTAB SEARCH FOR FIRST BLANK
         BNZ   C44014              FOUND IT
         ABEND 3,DUMP
C44014   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE R3
         CLC   CMNERUNI,=CL8' '    IS UNIT BLANK
         BE    C44016              YES, GO CHECK SET OPTIONS
         MVC   0(5,R3),=C'UNIT('   MOVE IN KEYWORD
         MVC   5(L'CMNERUNI,R3),CMNERUNI MOVE IN UNIT
         TRT   5(L'CMNERUNI+1,R3),BLANKTAB SEARCH FOR BLANK
         BNZ   C44015              FOUND IT
         ABEND 3,DUMP
C44015   MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE R3
C44016   CLC   CMNERSET,=CL3'YES'  CHECK SET OPTION
         BE    C44020              DEFAULT DESIRED
         MVC   0(5,R3),=C'NOSET'
*
*
C44020   L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    C44030
         ABEND 2,DUMP
C44030   ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         L     R4,ISPCATRC         GET RETURN
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         MVC   CMDBUF(2),=H'255'   SET UP FOR NEXT TIME
         MVC   CMDBUF+2(2),=H'4'
         LTR   R4,R4               CHECK IT
         BZ    C44035
         ST    R4,CMNERRC
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,)
         B     C44040
C44035   CALL  ISPLINK,(VDISPLAY,PANEL,MSG01,)
C44040   CH    R15,=H'8'           CHECK FOR END KEY
         BE    C44999              YES--
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C44050              YES--
         ABEND 1,DUMP
C44050   CLC   CMNERWDS,=CL44' '
         BE    C44060              ISSUE ERROR MESSAGE
         CLC   CMNEBDSN,CMNERDSN   DID DATASET  CHANGE ?
         BNE   C44000              YES, THEN GET INFO FOR NEW ONE
         CLC   CMNEBVOL,CMNERVOL   DID VOLUME CHANGE ?
         BNE   C44000              YES, THEN GET INFO FOR A NEW ONE
         B     C44010              OTHERISE MORE MODS TO THIS ONE
C44060   CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,)
         B     C44040
C44999   FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         TITLE '***** SETUP ROUTINE *****'
SETUP    CALL  ISPLINK,(,LIST1,CMNERWDS),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,LIST2,CMNEROWN),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,LIST3,CMNERRC),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,LIST4,CMNERVOL),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,LIST5,CMNERSET),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,LIST6),MF=(E,ISPLNK6)
         MVI   CMNERDSN,C''''      CREATE FULLY QUALIFIED DSN
         MVC   CMNERDSN+1(44),CMNERWDS
         TRT   CMNERDSN+1(45),BLANKTAB
         BNZ   SET10
         ABEND 15,DUMP
SET10    MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         BR    R10
         TITLE '***** FILL VARIABLES WITH RACF DATA *****'
FILL     EQU   *
         ST    R10,SAVE10
         BAL   R10,QUAL
         L     R10,SAVE10
         CLC   CMNERVOL,=CL6' '    WAS VOLUME PROVIDED
         BE    FILL04              NO, DO LOCATE
         TRT   CMNERWDS,PARENTAB   CHECK FOR GDG
         BZ    FILL10              NO PARENS FOUND
FILL04   LA    R1,CMNERWDS         NO, DO LOCATE
         ST    R1,CAMLIST+4        RELOCATE PARAMETERS
         LA    R1,CATWRK
         ST    R1,CAMLIST+12
         LOCATE CAMLIST
         LTR   R15,R15             WAS IT GOOD
         BZ    FILL05              YES
         ST    R15,CMNERRC         STORE RETURN
         MVC   CURSOR,=C'CMNERVOL' POISITION CURSOR
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG06,)
         CH    R15,=H'8'           CHECK FOR END KEY
         BE    C44999              YES, THEN GET OUT
         CH    R15,=H'0'           OK, THEN MAKE SURE VOLUME IS THERE
         BE    FILL
         ABEND 5,DUMP              ANYTHING ELSE, SAY BYE
FILL05   MVC   CMNERVOL,CATWRK+6
FILL10   MVI   DSNLN,L'CMNERWDS    SET MAX LENGTH
         TRT   CMNERWDS,BLANKTAB   SEARCH FOR BLANK
         BZ    FILL15              NOT FOUND THEN MUST BE MAX LENGTH
         LA    R15,CMNERWDS
         SR    R1,R15              COMPUTE LENGTH
         STC   R1,DSNLN            STORE IT
FILL15   LA    R1,=C'AUTH'         MAKE AUTHORIZED
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         ICHEINTY LOCATE,ENTRY=DSNLN,WKAREA=WK1,VOLUME=CMNERVOL,       X
               MF=(E,TY1)
         LR    R14,R15             STORE RETURN
         SR    R1,R1
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         LTR   R14,R14
         BZ    FILL30              OKAY
         CH    R14,=H'12'          CHECK FOR NOT FOUND
         BE    FILL20              ISSUE MESSAGE
         CH    R14,=H'60'          RIGHT DSN, WRONG VOLUME
         BE    FILL20              ISSUE MESSAGE
         ABEND 5,DUMP              OTHERISE SAY BYE
FILL20   CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,,)
         CH    R15,=H'8'           CHECK RETURN
         BE    C44999
         LTR   R15,R15
         BZ    FILL                TRY AGAIN
         ABEND 1,DUMP
FILL30   L     R15,544             ADD OR ASCB
         L     R15,108(R15)        ADDR OF ASXB
         L     R15,200(R15)        ADDR OF ACEE
         USING ACEE,R15
         TM    ACEEFLG1,ACEESPEC   AM I SPECIAL ? ? ?
         BO    FILL30X             YES, THEN OKAY
         XR    R14,R14             CLEAR REG
         IC    R14,ACEEUSRL        GET LENGTH OF USER
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,CHK1            IS USERID = OWNERID ? ?
         BE    FILL30X             YES, THEN CONTINUE
         RACHECK MF=(E,RCHK1),ENTITY=CMNERWDS,VOLSER=CMNERVOL
         LTR   R15,R15             CHECK RETURN
         BZ    FILL30X
         CALL  ISPLINK,(VDISPLAY,PANEL1,MSG07,)
         B     C44999              AFTER A VIOLATION, GET OUT
FILL30X  MVC   CMNEROWN,WOWN       MOVE IN OWNER
         TM    WUACC,X'80'
         BNO   FILL32              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'ALTER'
         B     FILL40
FILL32   TM    WUACC,X'40'
         BNO   FILL33              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'CONTROL'
         B     FILL40
FILL33   TM    WUACC,X'20'
         BNO   FILL34              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'UPDATE'
         B     FILL40
FILL34   TM    WUACC,X'10'
         BNO   FILL35              FILL UACC FIELD
         MVC   CMNERUAC,=CL8'READ'
         B     FILL40
FILL35   MVC   CMNERUAC,=CL8'NONE'
FILL40   TM    WAUDIT,X'80'        FILL IN AUDIT FIELD
         BNO   FILL42
         MVC   CMNERAUD,=CL8'ALL'
         B     FILL50
FILL42   TM    WAUDIT,X'40'        FILL IN AUDIT FIELD
         BNO   FILL44
         MVC   CMNERAUD,=CL8'SUCCESS '
         B     FILL50
FILL44   TM    WAUDIT,X'20'        FILL IN AUDIT FIELD
         BNO   FILL46
         MVC   CMNERAUD,=CL8'FAILURES'
         B     FILL50
FILL46   MVC   CMNERAUD,=CL8'NONE'
FILL50   MVC   CMNERUNI,=CL8' '    CLEAR OUT UNIT
         CLC   WUNTYX,=8X'FF'      ANYTHING IN CHARACTER FIELD
         BE    FILL60              NO- THEN WILL HAVE TO TRANSALATE
         MVC   CMNERUNI,WUNTYX     YES, THEN MOVE IT IN AND GET OUT
         B     FILL99
FILL60   CLC   WUNTY,=4X'FF'       ANYTHIN IN UCBTYP FIELD
         BE    FILL99              NO- THEN GET OUT
         CLI   WUNTY+2,X'20'       IS THIS A DISK ? ? ?
         BE    FILL70              YES, THEN GO PROCESS TYPE
         CLI   WUNTY+2,X'80'       IS THIS A TAPE ? ? ?
         BNE   FILL99              NO, THEN GIVE UP
         CLI   WUNTY+3,X'01'       IS THIS A 2400 TYPE
         BNE   FILL62              NO, THEN CHECK NEXT
         MVC   CMNERUNI,=CL8'2400'
         B     FILL99
FILL62   CLI   WUNTY+3,X'03'       IS THIS A 3400 TYPE ? ? ?
         BNE   FILL99              NO, THEN GIVE UP
         MVC   CMNERUNI,=CL8'3400'
         B     FILL99
FILL70   CLI   WUNTY+3,X'09'       IS THIS A 3330 MODEL 1 OR 2
         BNE   FILL72              NO, THEN CHECK FURTHER
         MVC   CMNERUNI,=CL8'3330'
         B     FILL99
FILL72   CLI   WUNTY+3,X'0B'       IS THIS A 3350? ? ?
         BNE   FILL73              NO, THEN CHECK FURTH
         MVC   CMNERUNI,=CL8'3350'
         B     FILL99
FILL73   CLI   WUNTY+3,X'0D'       IS THIS A 3330 MOD 11 ? ? ?
         BNE   FILL99              NO, THEN GIVE UP (WE DON'T HAVE ANY
*                                  OTHER TYPES)
         MVC   CMNERUNI,=CL8'3330-11'
FILL99   MVC   CMNERSET,=C'YES'
         BR    R10                 RETURN
CHK1     CLC   ACEEUSRI(0),WOWN
         DROP  R15
         TITLE '***** QUALIFY SUBROUTINE *****'
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL44' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         MVI   CMNERDSN,C''''      MOVE IN FIRST QUOTE
         MVC   CMNERDSN+1(44),CMNERWDS MOVE IN FULLY QUALIFIED DSN
         TRT   CMNERDSN+1(45),BLANKTAB
         BNZ   QUAL05
         ABEND 15,DUMP
QUAL05   MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(45),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG08,CURSOR)
         B     C44005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(44),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** CONTANTS *****'
*
*        DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VDEF     DC    CL8'VDEFINE'
VDISPLAY DC    CL8'DISPLAY'
*
*        DIALOG MANAGER LISTS
*
LIST1    DC    C'(CMNERWDS CMNERDSN)'
LIST2    DC    C'(CMNEROWN CMNERAUD CMNERUAC CMNERUNI)'
LIST3    DC    C'(CMNERRC)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERSET)'
LIST6    DC    C'(CMNERWDS CMNERVOL)'
*
*        DIALOG MANAGER LENGTHS
*
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'46'
*
*        MISCELANEOUS VARIABLSE
*
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
PANEL    DC    CL8'CMNER44'
PANEL1   DC    CL8'CMNER19'
MSG01    DC    CL8'CMNER440'       COMMAND SUCCESSFUL
MSG02    DC    CL8'CMNER441'       COMMAND FAILED
MSG03    DC    CL8'CMNER442'       ENTER DATASET
MSG04    DC    CL8'CMNER443'       NOT FOUND
MSG05    DC    CL8'CMNER444'       ENTER CHANGES
MSG06    DC    CL8'CMNER445'       ENTER VOLUME
MSG07    DC    CL8'CMNER446'       AUTHOIZATION FAILED
MSG08    DC    CL8'CMNER447'       INVALID DATASET NAME
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
*
*
*
ACT1     ICHEACTN FIELD=AUTHOR,MF=L
ACT2     ICHEACTN FIELD=UNIVACS,MF=L
ACT3     ICHEACTN FIELD=AUDIT,MF=L
ACT4     ICHEACTN FIELD=DEVTYP,MF=L
ACT5     ICHEACTN FIELD=DEVTYPX,MF=L
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
         DS    0D
DYNWK    EQU   *
CURSOR   DC    CL8'CMNERDSN'
ISPCATRC DS    A(0)
ISPCATCL DS    3A(0)
*
*        DIALOG MANAGER VARIABLES
*
DSNLN    DS    X
CMNERWDS DS    CL46' '
CMNERDSN DS    CL46' '
CMNEROWN DS    CL8' '
CMNERAUD DS    CL8' '
CMNERUAC DS    CL8' '
CMNERUNI DS    CL8' '
CMNERVOL DS    CL6' '
CMNERRC  DS    F'0'
CMNERSET DS    CL3' '
CMNEBDSN DC    CL46' '
CMNEBVOL DC    CL6' '
ISPLNK1  CALL   ,(VDEF,LIST1,CMNERWDS,CHAR,LNG44),MF=L
ISPLNK2  CALL   ,(VDEF,LIST2,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK3  CALL   ,(VDEF,LIST3,CMNERRC,FIXED,LNG4),MF=L
ISPLNK4  CALL   ,(VDEF,LIST4,CMNERVOL,CHAR,LNG6),MF=L
ISPLNK5  CALL   ,(VDEF,LIST5,CMNERSET,CHAR,LNG3),MF=L
ISPLNK6  CALL  ,(VGET,LIST6,SHARED),MF=L
CMDBUF   DC    H'255'
CMDOFF   DC    H'4'
CMD      DC    CL255'ALD '
SAVE10   DS    F
*
*
*
RCHK1    RACHECK ENTITY=CMNERWDS,CLASS='DATASET',ATTR=READ,MF=L
TY1      ICHEINTY LOCATE,TYPE='DS',MF=L,ACTIONS=(ACT1,ACT2,ACT3,ACT4,  X
               ACT5)
WK1      DC    A(WK1LN)
         DS    6F
         DS    H
WOWN     DS    CL8
         DS    XL2
WUACC    DS    X
         DS    XL2
WAUDIT   DS    X
         DS    XL2
WUNTY    DS    XL4
         DS    XL2
WUNTYX   DS    XL8
         DS    0F
WK1LN    EQU   *-WK1
CAMLIST  CAMLST NAME,CMNERWDS,,CATWRK
         DS    0D
CATWRK   DS    CL265
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER50
         TITLE '***** PERMIT/CONNECT FUNTION CONTROLLER *****'
CMNER50  $PROLOG
         SPACE 5
***********************************************************************
*        PROGRAM - CMNER50                                            *
*        DATE WRITTEN - JULY 1981                                     *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS NON REENTRANT, NON APF AUTHORIZED MODULE   *
*               WHICH CONTROLS DISPLAY OF THE INTIAL 'PERMIT' SCREEN  *
*               AND CONTROLS THE SELECTION OF ADD SUB FUNCTIONS       *
*                                                                     *
*        PANELS - CMNER50                                             *
*                                                                     *
*        MESSAGES - CMNER500                                          *
*                   CMNER501                                          *
*                   CMNER502                                          *
*                   CMNER503                                          *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         BAL   R10,SETUP           DEFINE DIALOG VARIABLES
C50000   CALL  ISPLINK,(VDISPLAY,PANEL,,CURSOR),VL
C50005   CH    R15,=H'8'           WAS END KEY ENTERED ? ? ?
         BE    C50999              YES, THEN GET OUT
         LTR   R15,R15             CHECK FOR ZERO
         BZ    C50010
         ABEND 1,DUMP
C50010   CALL ISPLINK,(VPUT,LIST5,SHARED)
         CLC   CMNERGRP,=CL4' '    WAS GROUP ENTERED
         BE    C50020              NO GO CHECK DSN
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER53B)
         B     C50000
C50020   CLC   CMNERDSN,=CL44' '   WAS DSN ENTERED
         BE    C50030              NO, GO CHECK GENERAL RESOURCE
         BAL   R10,QUAL            GO QUALIFIY DATASET NAME
         CLC   CMNERVOL,=CL6' '    WAS VOLUME SPECIFIED
         BE    C50022              NO, THEN DO LOCATE
         TRT   CMNERWDS,PARENTAB   CHECK FOR GDG ()
         BZ    C50028              NO, THE CONTINUE
C50022   LOCATE CAMLIST
         LTR   R15,R15             CHECK RETURN
         BZ    C50026              GOOD
         ST    R15,CMNERRC
         MVC   CURSOR,=CL8'CMNERVOL'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG03,CURSOR)
         B     C50005
C50026   MVC   CMNERVOL,CATWRK+6
C50028   CALL  ISPLINK,(VPUT,LIST7,SHARED)
         CALL  ISPLINK,(VSELECT,CMNERBL,CMNER52B)
         B     C50000
C50030   CLC   CMNERRES,=CL8' '    WAS RESOURCE ENTERED
         BE    C50050              NO, THEN ISSUE MESSAGE
         CLC   CMNERCLS,=CL8' '    WAS CLASS ENTERED
         BNE   C50040              YES, THE SELECT GENERAL RESOURCE ADD
         CALL ISPLINK,(VDISPLAY,PANEL,MSG01,CURSOR)
         B     C50005
C50040   CALL  ISPLINK,(VSELECT,CMNERBL,CMNER51B)
         B     C50000
C50050   CALL  ISPLINK,(VDISPLAY,PANEL,MSG02,CURSOR)
         B     C50000
C50999   CALL  ISPLINK,(VDELETE,LIST5)
         $EPILOG
QUAL     EQU   *
         CLI   CMNERDSN,C''''      DOES IT START WITH QUOTE
         BE    QUAL10              YES, THEN REMOVE IT
         MVC   CMNERWDS,=CL44' '      CLEAR OUT WORK
         L     R15,544             ASCB
         L     R15,108(R15)        ASXB
         L     R15,200(R15)         ACEE
         USING ACEE,R15            ADDRESSIBILITY
         XR    R1,R1               CLEAR REG
         IC    R1,ACEEUSRL         GET LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVDSN1          MOVE IT
         LA    R15,CMNERWDS        GET BEGININING
         LA    R15,1(R1,R15)       POINT TO BYTE AFTER ID
         MVI   0(R15),C'.'         MOVE IN PERIOD
         LA    R14,44              GET MAX LENGTH
         LA    R1,2(R1)            ADVANCE TO NEXT BLANK
         SR    R14,R1              GET REMAINING LENGTH
         BCTR  R14,0               REDUCE FOR MOVE
         EX    R14,MOVDSN2         MOVE REST
         B     QUAL99              AND CONTINUE
QUAL10   MVC   CMNERWDS,CMNERDSN
         TRT   CMNERWDS+1(43),QUOTETAB SEARCH FOR SECOND QUOTE
         BNZ   QUAL20              FOUND IT
         MVC   CURSOR,=CL8'CMNERDSN'
         CALL  ISPLINK,(VDISPLAY,PANEL,MSG04,CURSOR)
         B     C50005
QUAL20   MVI   0(R1),C' '          REMOVE SECOND QUOTE
         MVC   CMNERWDS(43),CMNERWDS+1     REMOVE FIRST QUOTE
QUAL99   BR    R10
MOVDSN1  MVC   CMNERWDS(0),ACEEUSRI
MOVDSN2  MVC   1(0,R15),CMNERDSN
         DROP  R15
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
         CALL  ISPLINK,(VDEF,LIST1,CMNERDSN,CHAR,LNG44)
         CALL  ISPLINK,(VDEF,LIST2,CMNERGRP,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST3,CMNERRES,CHAR,LNG8)
         CALL  ISPLINK,(VDEF,LIST4,CMNERVOL,CHAR,LNG6)
         CALL  ISPLINK,(VDEF,LIST6,CMNERRC,FIXED,LNG4)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VDELETE  DC    CL8'VDELETE'
VDEF     DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VDISPLAY DC    CL8'DISPLAY'
VSELECT  DC    CL8'SELECT'
*
*  LENGTHS
*
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG8     DC    F'8'
LNG44    DC    F'44'
*
*  DIALOG MANAGER VARIABLE LISTS
*
LIST1    DC    C'(CMNERDSN CMNERWDS)'
LIST2    DC    C'(CMNERGRP)'
LIST3    DC    C'(CMNERRES CMNERCLS)'
LIST4    DC    C'(CMNERVOL)'
LIST5    DC    C'(CMNERGRP '
         DC    C'CMNERRES '
         DC    C'CMNERCLS)'
LIST6    DC    C'(CMNERRC)'
LIST7    DC    C'(CMNERWDS CMNERVOL)'
*
*  DIALOG MANAGER VARIABLES
*
CMNERDSN DC    CL44' '
CMNERWDS DC    CL44' '
CMNERGRP DC    CL8' '
CMNERRES DC    CL8' '
CMNERCLS DC    CL8' '
CMNERVOL DC    CL6' '
CMNERRC  DC    F'0'
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
SHARED   DC    CL8'SHARED'
CHAR     DC    CL8'CHAR'
FIXED    DC    CL8'FIXED'
PANEL    DC    CL8'CMNER50'
CURSOR   DC    CL8'CMNERGRP'
MSG01    DC    CL8'CMNER500'
MSG02    DC    CL8'CMNER501'
MSG03    DC    CL8'CMNER502'    LOCATE FAILED
MSG04    DC    CL8'CMNER503'    INVALID DATASET
CMNERBL  DC    F'12'
CMNER51B DC    C'PGM(CMNER51)'
CMNER52B DC    C'PGM(CMNER52)'
CMNER53B DC    C'PGM(CMNER53)'
CAMLIST  CAMLST NAME,CMNERWDS,,CATWRK
         DS    0D
CATWRK   DS    CL265
QUOTETAB DC    125X'00'
         DC    X'01'               7D
         DC    130X'00'
PARENTAB DC    77X'00'
         DC    X'01'               (
         DC    15X'00'
         DC    X'01'               )
         DC    162X'00'
         IHAACEE
         END
./ ADD  NAME=CMNER51
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** PERMIT GENERAL RESOURCE *****'
CMNER51  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER51                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT WHICH ALLOWS MODIFICATION OF   *
*               ACCESS LISTS FOR GENERAL RESOURCES. IT BUILDS A PERMIT*
*               COMMAND AND BRANCHES TO SPF SUBROUTINE ISPCAT         *
*                                                                     *
*        PANELS USED - CMNER51                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER510 - CMNER519                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
P51010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P51030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER18)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R15,CMNERRC         GET RETURN CODE FROM FILL MODULE
         LTR   R15,R15
         BZ    P51035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R15,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG01,)
         B     P51099              AND GET OUT
P51035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P51099              IF NOT ZERO, THEN GET OUT
         XR    R11,R11             CLEAR MSG REG
         BAL   R10,DISPSUB         GO DISPLAY SOMETHING
         SPACE 5
P51040   EQU   *                   CHECK SELECTION CRITERA
         CLI   CMNERSEL,C' '       WAS A SELECTION MADE
         BE    P51150              YES--GO TO COMMAND PROCESSING
         CLI   CMNERSEL,0          NULL OR BLANK MEAN NO SELECTION MADE
         BE    P51150
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVC   CMD+3(L'CMNERRES),CMNERRES      MOVE IN RESOURCE NAME
         MVC   CMD+12(6),=C'CLASS('   MOVE IN KEYWORD
         MVC   CMD+18(L'CMNERCLS),CMNERCLS     MOVE IN CLASS
         LA    R5,CMD+18           BEGINING  OF CLASS
         TRT   0(L'CMNERCLS+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            POSITION R5 TO NEXT AVAILABLE BYTE
         XR    R2,R2               CLEAR R2
         MVC   CMNERTMS,=CL10'**CHANGED'
         TRT   CMNERSEL,COMTAB     CHECK WHICH OPTION
         BNZ   P51050              FOUND IT
         LA    R11,MSG06
         BAL   R10,DISPSUB
         B     P51040
P51050   B     P51050(R2)
         B     P51060              (4 -> A)
         B     P51070              (8 -> C)
         B     P51080              (12 -> D)
         B     P51090              (16 -> N)
         B     P51100              (20 -> R)
         B     P51110              (24 -> U)
P51060   MVC   0(13,R5),=C'ACCESS(ALTER)'
         MVC   CMNERTAU,=CL8'ALTER'
         LA    R5,14(R5)
         B     P51120
P51070   MVC   0(15,R5),=C'ACCESS(CONTROL)'
         MVC   CMNERTAU,=CL8'CONTROL'
         LA    R5,16(R5)
         B     P51120
P51080   MVC   0(6,R5),=C'DELETE'
         MVC   CMNERTAU,=CL8' '
         MVC   CMNERTMS,=CL10'**DELETED'
         LA    R5,7(R5)
         B     P51120
P51090   MVC   0(12,R5),=C'ACCESS(NONE)'
         MVC   CMNERTAU,=CL8'NONE'
         LA    R5,13(R5)
         B     P51120
P51100   MVC   0(12,R5),=C'ACCESS(READ)'
         MVC   CMNERTAU,=CL8'READ'
         LA    R5,13(R5)
         B     P51120
P51110   MVC   0(14,R5),=C'ACCESS(UPDATE)'
         MVC   CMNERTAU,=CL8'UPDATE'
         LA    R5,15(R5)
P51120   MVC   0(3,R5),=C'ID('
         MVC   3(L'CMNERTUI,R5),CMNERTUI   MOVE IN ID
         TRT   3(L'CMNERTUI+1,R5),BLANKTAB
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         BAL   R10,ISSUE           GO ISSUE COMMAND
         CLC   ISPCATRC,=F'0'      CHECK FOR GOOD RETURN
         BE    P51140              YES-
         MVC   CMNERTMS,=CL10'**FAILED'
P51140   MVI   CMNERSEL,C' '
         CALL  ISPLINK,(VTBPUT,TABLE,LIST4)
         SPACE 5
P51150   EQU   *                   BEGIN
*                                       PROCESSING
*                                            COMMAND
*                                                LINE
*
         OC    CMNEROPT,=CL20' '
         CLC   CMNEROPT(4),=C'NEXT'
         BE    P51190              YES
         CLC   CMNEROPT(2),=C'A '  IS THIS AN ADD
         BE    P51160
P51152   MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         LA    R11,MSG02
         BAL   R10,DISPSUB
         B     P51040
P51160   EQU   *                   ADD NEW USER TO ACCESS LIST
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVC   CMD+3(8),CMNERRES      MOVE IN RESOURCE NAME
         MVC   CMD+12(6),=C'CLASS('   MOVE IN KEYWORD
         MVC   CMD+18(8),CMNERCLS     MOVE IN CLASS
         LA    R5,CMD+18           BEGINING  OF CLASS
         LA    R11,MSG07
         TRT   0(L'CMNERCLS+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            POSITION R5 TO NEXT AVAILABLE BYTE
         LA    R3,CMNEROPT+2       GET FIRST BYTE OF USERID
         CLI   0(R3),C' '          IS IT BLANK
         BE    P51185              YES, THEN ERROR
         TRT   0(L'CMNERTUI+1,R3),BLANKTAB FIND FIRST BLANK
         BZ    P51185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               GET LENGTH OF USER ID
         BCTR  R1,0                REDUCE FOR MOVE
         MVC   0(3,R5),=C'ID('     MOVE IN KEYWORD
         EX    R1,MOVEUID1         MOVE IN USER ID
         MVC   CMNERTUI,=CL8' '    CLEAR USER ID
         EX    R1,MOVEUID2         MOVE IN USER ID
         LA    R5,4(R1,R5)
         MVI   0(R5),C')'          CLOSING PAREN
         LA    R5,2(R5)
         MVC   0(7,R5),=C'ACCESS(' MOVE IN KEYWORD
         LA    R5,7(R5)
         LA    R3,2(R3,R1)         ADVANCE TO AUTHORITY
         CLI   0(R3),C' '          IS IT BLANK ? ?
         BE    P51185              YES, THEN ERROR
         TRT   0(8,R3),BLANKTAB    FIND FIRST BLANK
         BZ    P51185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               FIND LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVEAUT1         MOVE IN AUTHORITY
         MVC   CMNERTAU,=CL8' '
         EX    R1,MOVEAUT2         MOVE IN AUTHORITY
         LA    R5,1(R1,R5)
         MVI   0(R5),C')'
         BAL   R10,ISSUE           ISSUE COMMAND
         LA    R11,MSG08
         L     R4,ISPCATRC         CHECK RETURN FROM COMMAND
         LTR   R4,R4
         BNZ   P51185              COMMAND FAILED
         MVC   CMNERTMS,=CL10'**ADDED' COMMAND SUCCEEDED
         CALL  ISPLINK,(VTBMOD,TABLE,LIST4)  ADD NEW USER TO TABLE
         LA    R11,MSG09
         LTR   R15,R15
         BZ    P51185              MOD
         CH    R15,=H'8'
         BE    P51180              ADD
         ABEND 6,DUMP
P51180   CALL  ISPLINK,(VTBSKIP,TABLE,NEG15,)  REPOSITION CRP
         LTR   R15,R15
         BZ    P51185
         CH    R15,=H'8'           CRP AT TOP ? ? ?
         BE    P51185              OKAY
         ABEND 7,DUMP
P51185   BAL   R10,DISPSUB
         B     P51040
         SPACE
P51190   CLI   CMNERSEL,C' '       WAS ANYTHING SELECTED
         BE    P51195              NO, THEN NEXT OKAY
         CLI   CMNERSEL,0
         BNE   P51152
P51195   MVI   CMNERNXT,X'01'
         CALL  ISPLINK,(VTBEND,TABLE)    REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         B     P51030
P51099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST READ ACCESS
         MVC   WKCLASS,CMNERCLS
         RACHECK ENTITY=CMNERRES,CLASS=WKCLSLN,                        X
               MF=(E,RCHKL)
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER02,MSG03,)
         LA    R15,8
         BR    R10
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         DROP  R4
         TITLE '***** ISSUE TSO COMMAND (ISPCAT) *****'
ISSUE    EQU   *
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    ISSUE10
         ABEND 5,DUMP
ISSUE10  ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'3'   REINITIALIZE
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         BR    R10
         TITLE '***** DISPLAY SUBROUTINE *****'
DISPSUB  EQU   *
*        ON ENTRY
*              R10 -> RETURN
*              R11 -> MESSAGE
*
         MVI   CMNERSEL,C' '      CLEAR OUT INPUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,) GET NUM OF ROWS
         ICM   R15,15,CMNERROW
         BNZ   DISP10              NO ROWS IN TABLE
         CALL  ISPLINK,(,,(R11)),MF=(E,ISPLNKA)
         B     DISP90              GO CHECK RETURN
DISP10   CALL  ISPLINK,(,,,(R11)),MF=(E,ISPLNKB)
DISP90   CH    R15,=H'8'           END KEY ENTERED
         BE    P51099              YES
         CH    R15,=H'4'           TOO MANY ROWS
         BE    DISP95              YES, DISPLAY ERROR
         CH    R15,=H'0'           OKAY
         BE    DISP99              YES, RETURN
DISP95   MVI   CMNERSEL,C' '       CLEAR OUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG05)
         B     DISP90              GO CHECK RETURN
DISP99   XC    CMNERSEL,=C' '
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         CALL  ISPLINK,(,,CMNEROPT,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERRES,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERNXT,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERSEL,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTAU,,),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERTMS,,),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERROW,,),MF=(E,ISPLNK9)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
VTBTOP   DC    CL8'TBTOP'
VTBPUT   DC    CL8'TBPUT'
VTBGET   DC    CL8'TBGET'
VTBSCAN  DC    CL8'TBSCAN'
VTBADD   DC    CL8'TBADD'
VTBMOD   DC    CL8'TBMOD'
VTBSKIP  DC    CL8'TBSKIP'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG10    DC    F'10'
LNG11    DC    F'11'
LNG12    DC    F'12'
LNG20    DC    F'20'
NEG15    DC    F'-15'
*
*  DIALOG MANAGER LISTS
*
VSEL     DC    C'(CMNERSEL)'
VROW     DC    C'(CMNERROW)'
VOPT     DC    C'(CMNEROPT)'
VRES     DC    C'(CMNERRES CMNERCLS CMNERTUI)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VOWN     DC    C'(CMNEROWN)'
VMSG     DC    C'(CMNERTMS)'
VAUD     DC    C'(CMNERTAU)'
LIST1    DC    C'(CMNERRES '
         DC    C'CMNERCLS '
         DC    C'CMNERRC '
         DC    C'CMNEROWN '
         DC    C'CMNERDAT)'
LIST2    DC    C'(CMNERSEL '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
LIST3    DC    C'(CMNERTUI)'
LIST4    DC    C'(CMNERSEL '
         DC    C'CMNERTUI '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER51'
CMNER02  DC    CL8'CMNER19'
CMNER18  DC    C'PGM(CMNER18)'
MSG01    DC    CL8'CMNER510'       RACF ERROR
MSG02    DC    CL8'CMNER511'
MSG03    DC    CL8'CMNER512'       AUTHORIZATION ERROR
MSG04    DC    CL8'CMNER513'       ACCESS LIST EMPTY
MSG05    DC    CL8'CMNER514'       TOO MANY LINES MODIFIED
MSG06    DC    CL8'CMNER515'       INVALID SELECT CODE
MSG07    DC    CL8'CMNER516'       INVALID ADD
MSG08    DC    CL8'CMNER517'       ADD FAILED
MSG09    DC    CL8'CMNER518'       COMMAND COMPLETE
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
VROWNP   DC    CL8'CMNERROW'
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTRS'
*
*  MISCELLANEOUS FIELDS
*
COMTAB   DC    193X'00'            00-C0
         DC    X'04'               A
         DC    X'00'
         DC    X'08'               C
         DC    X'0C'               D
         DC    16X'00'
         DC    X'10'               N
         DC    3X'00'
         DC    X'14'               R
         DC    10X'00'
         DC    X'18'               U
         DC    27X'00'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
MOVEUID1 MVC   3(0,R5),0(R3)
MOVEUID2 MVC   CMNERTUI(0),0(R3)
MOVEAUT1 MVC   0(0,R5),0(R3)
MOVEAUT2 MVC   CMNERTAU(0),0(R3)
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
*
*  DIALOG MANAGER VARIABLES
*
CMNERSEL DC    C' '
CMNEROPT DC    CL20' '
CMNERRES DS    CL8
CMNERCLS DC    CL8' '
CMNERTUI DC    CL8' '
CMNERTAU DC    CL8' '
CMNERTMS DC    CL10' '
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
CMNERROW DC    F'0'
CMNERRC  DS    F
CMNERCRP DC    F'0'
*
*  CALL LISTS
*
ISPLNK1  CALL  ,(VDEF,VOPT,CMNEROPT,CHAR,LNG20),MF=L
ISPLNK2  CALL  ,(VDEF,VRES,CMNERRES,CHAR,LNG8),MF=L
ISPLNK3  CALL  ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK4  CALL  ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNK5  CALL  ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK6  CALL  ,(VDEF,VSEL,CMNERSEL,CHAR,LNG1),MF=L
ISPLNK7  CALL  ,(VDEF,VAUD,CMNERTAU,CHAR,LNG7),MF=L
ISPLNK8  CALL  ,(VDEF,VMSG,CMNERTMS,CHAR,LNG10),MF=L
ISPLNK9  CALL  ,(VDEF,VROW,CMNERROW,FIXED,LNG4),MF=L
ISPLNKA  CALL  ,(VDISPLAY,CMNER01,,),MF=L
ISPLNKB  CALL  ,(VTBDISPL,TABLE,CMNER01,),MF=L
RCHKL    RACHECK ENTITY=CMNERRES,CLASS=WKCLSLN,ATTR=READ,MF=L
*
*
WKCLSLN  DC    X'08'
WKCLASS  DC    CL8' '
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
CMDBUF   DC    H'255'
         DC    H'3'
CMD      DC    CL255'PE '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER52
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** PERMIT DATASET *****'
CMNER52  $PROLOG
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER52                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT WHICH ALLOWS MODIFICATION OF   *
*               ACCESS LISTS FOR GENERAL RESOURCES. IT BUILDS A PERMIT*
*               COMMAND AND BRANCHES TO SPF SUBROUTINE ISPCAT         *
*                                                                     *
*        PANELS USED - CMNER52                                        *
*                    - CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER520 - CMNER529                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
P52010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P52030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER16)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         MVC   CMNERDSN,CMNERWDS
         L     R15,CMNERRC         GET RETURN CODE FROM FILL MODULE
         LTR   R15,R15
         BZ    P52035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R15,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG01,)
         B     P52099              AND GET OUT
P52035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P52099              IF NOT ZERO, THEN GET OUT
         XR    R11,R11             CLEAR MSG REG
         BAL   R10,DISPSUB         GO DISPLAY SOMETHING
         SPACE 5
P52040   EQU   *                   CHECK SELECTION CRITERA
         CLI   CMNERSEL,C' '       WAS A SELECTION MADE
         BE    P52150              YES--GO TO COMMAND PROCESSING
         CLI   CMNERSEL,0          NULL OR BLANK MEAN NO SELECTION MADE
         BE    P52150
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVI   CMD+3,C''''         MOVE IN QUOTE
         MVC   CMD+4(L'CMNERWDS),CMNERWDS      MOVE IN DATASET
         TRT   CMD+4(L'CMNERWDS+1),BLANKTAB    SEARCH FOR FIRST BLANK
         MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         LA    R5,2(R1)            BEGINING  OF CLASS
         MVC   0(14,R5),=C'CLASS(DATASET)'
         LA    R5,15(R5)           ADVANCE TO NEXT BLANK
         MVC   0(7,R5),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(L'CMNERVOL,R5),CMNERVOL MOVE IN VOLUME
         TRT   7(L'CMNERVOL+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            ADVANCE TO NEXT BLANK
         XR    R2,R2               CLEAR R2
         MVC   CMNERTMS,=CL10'**CHANGED'
         TRT   CMNERSEL,COMTAB     CHECK WHICH OPTION
         BNZ   P52050              FOUND IT
         LA    R11,MSG06
         BAL   R10,DISPSUB
         B     P52040
P52050   B     P52050(R2)
         B     P52060              (4 -> A)
         B     P52070              (8 -> C)
         B     P52080              (12 -> D)
         B     P52090              (16 -> N)
         B     P52100              (20 -> R)
         B     P52110              (24 -> U)
P52060   MVC   0(13,R5),=C'ACCESS(ALTER)'
         MVC   CMNERTAU,=CL8'ALTER'
         LA    R5,14(R5)
         B     P52120
P52070   MVC   0(15,R5),=C'ACCESS(CONTROL)'
         MVC   CMNERTAU,=CL8'CONTROL'
         LA    R5,16(R5)
         B     P52120
P52080   MVC   0(6,R5),=C'DELETE'
         MVC   CMNERTAU,=CL8' '
         MVC   CMNERTMS,=CL10'**DELETED'
         LA    R5,7(R5)
         B     P52120
P52090   MVC   0(12,R5),=C'ACCESS(NONE)'
         MVC   CMNERTAU,=CL8'NONE'
         LA    R5,13(R5)
         B     P52120
P52100   MVC   0(12,R5),=C'ACCESS(READ)'
         MVC   CMNERTAU,=CL8'READ'
         LA    R5,13(R5)
         B     P52120
P52110   MVC   0(14,R5),=C'ACCESS(UPDATE)'
         MVC   CMNERTAU,=CL8'UPDATE'
         LA    R5,15(R5)
P52120   MVC   0(3,R5),=C'ID('
         MVC   3(L'CMNERTUI,R5),CMNERTUI   MOVE IN ID
         TRT   3(L'CMNERTUI+1,R5),BLANKTAB
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         BAL   R10,ISSUE           GO ISSUE COMMAND
         CLC   ISPCATRC,=F'0'      CHECK FOR GOOD RETURN
         BE    P52140              YES-
         MVC   CMNERTMS,=CL10'**FAILED'
P52140   MVI   CMNERSEL,C' '
         CALL  ISPLINK,(VTBPUT,TABLE,LIST4)
         SPACE 5
P52150   EQU   *                   BEGIN
*                                       PROCESSING
*                                            COMMAND
*                                                LINE
*
         OC    CMNEROPT,=CL20' '
         CLC   CMNEROPT(4),=C'NEXT'
         BE    P52190              YES
         CLC   CMNEROPT(2),=C'A '  IS THIS AN ADD
         BE    P52160
P52152   MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         LA    R11,MSG02
         BAL   R10,DISPSUB
         B     P52040
P52160   EQU   *                   ADD NEW USER TO ACCESS LIST
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         MVI   CMD+3,C''''         MOVE IN QUOTE
         MVC   CMD+4(L'CMNERWDS),CMNERWDS MOVE IN RESOURCE NAME
         TRT   CMD+4(L'CMNERWDS+1),BLANKTAB SEARCH FOR FIRST BLANK
         MVI   0(R1),C''''         MOVE IN CLOSING QUOTE
         LA    R5,2(R1)
         MVC   0(14,R5),=C'CLASS(DATASET)'   MOVE IN KEYWORD
         LA    R5,15(R5)           BEGINING  OF CLASS
         MVC   0(7,R5),=C'VOLUME(' MOVE IN KEYWORD
         MVC   7(L'CMNERVOL,R5),CMNERVOL MOVE IN VOLUME
         TRT   7(L'CMNERVOL+1,R5),BLANKTAB FIND FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R5,2(R1)            ADVANCE TO NEXT BLANK
         LA    R11,MSG07
         LA    R3,CMNEROPT+2       GET FIRST BYTE OF USERID
         CLI   0(R3),C' '          IS IT BLANK
         BE    P52185              YES, THEN ERROR
         TRT   0(L'CMNERTUI+1,R3),BLANKTAB FIND FIRST BLANK
         BZ    P52185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               GET LENGTH OF USER ID
         BCTR  R1,0                REDUCE FOR MOVE
         MVC   0(3,R5),=C'ID('     MOVE IN KEYWORD
         EX    R1,MOVEUID1         MOVE IN USER ID
         MVC   CMNERTUI,=CL8' '    CLEAR USER ID
         EX    R1,MOVEUID2         MOVE IN USER ID
         LA    R5,4(R1,R5)
         MVI   0(R5),C')'          CLOSING PAREN
         LA    R5,2(R5)
         MVC   0(7,R5),=C'ACCESS(' MOVE IN KEYWORD
         LA    R5,7(R5)
         LA    R3,2(R3,R1)         ADVANCE TO AUTHORITY
         CLI   0(R3),C' '          IS IT BLANK ? ?
         BE    P52185              YES, THEN ERROR
         TRT   0(8,R3),BLANKTAB    FIND FIRST BLANK
         BZ    P52185              NOT FOUND, THEN BAD ADD
         SR    R1,R3               FIND LENGTH
         BCTR  R1,0                REDUCE FOR MOVE
         EX    R1,MOVEAUT1         MOVE IN AUTHORITY
         MVC   CMNERTAU,=CL8' '
         EX    R1,MOVEAUT2         MOVE IN AUTHORITY
         LA    R5,1(R1,R5)
         MVI   0(R5),C')'
         BAL   R10,ISSUE           ISSUE COMMAND
         LA    R11,MSG08
         L     R4,ISPCATRC         CHECK RETURN FROM COMMAND
         LTR   R4,R4
         BNZ   P52185              COMMAND FAILED
         MVC   CMNERTMS,=CL10'**ADDED' COMMAND SUCCEEDED
         CALL  ISPLINK,(VTBMOD,TABLE,LIST4)  ADD NEW USER TO TABLE
         LA    R11,MSG09
         LTR   R15,R15
         BZ    P52185              MOD
         CH    R15,=H'8'
         BE    P52180              ADD
         ABEND 6,DUMP
P52180   CALL  ISPLINK,(VTBSKIP,TABLE,NEG15,)  REPOSITION CRP
         LTR   R15,R15
         BZ    P52185
         CH    R15,=H'8'           CRP AT TOP ? ? ?
         BE    P52185              OKAY
         ABEND 7,DUMP
P52185   BAL   R10,DISPSUB
         B     P52040
         SPACE
P52190   CLI   CMNERSEL,C' '       WAS ANYTHING SELECTED
         BE    P52195              NO, THEN NEXT OKAY
         CLI   CMNERSEL,0
         BNE   P52152
P52195   MVI   CMNERNXT,X'01'
         CALL  ISPLINK,(VTBEND,TABLE)    REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         B     P52030
P52099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST READ ACCESS
         RACHECK ENTITY=CMNERWDS,VOLSER=CMNERVOL,                      X
               MF=(E,RCHKL)
         LTR   R15,R15             CHECK RETURN FROM RACHECK
         BZR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER02,MSG03,)
         LA    R15,8
         BR    R10
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         DROP  R4
         TITLE '***** ISSUE TSO COMMAND (ISPCAT) *****'
ISSUE    EQU   *
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    ISSUE10
         ABEND 5,DUMP
ISSUE10  ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'3'   REINITIALIZE
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         BR    R10
         TITLE '***** DISPLAY SUBROUTINE *****'
DISPSUB  EQU   *
*        ON ENTRY
*              R10 -> RETURN
*              R11 -> MESSAGE
*
         MVI   CMNERSEL,C' '      CLEAR OUT INPUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,) GET NUM OF ROWS
         ICM   R15,15,CMNERROW
         BNZ   DISP10              NO ROWS IN TABLE
         CALL  ISPLINK,(,,(R11)),MF=(E,ISPLNKA)
         B     DISP90              GO CHECK RETURN
DISP10   CALL  ISPLINK,(,,,(R11)),MF=(E,ISPLNKB)
DISP90   CH    R15,=H'8'           END KEY ENTERED
         BE    P52099              YES
         CH    R15,=H'4'           TOO MANY ROWS
         BE    DISP95              YES, DISPLAY ERROR
         CH    R15,=H'0'           OKAY
         BE    DISP99              YES, RETURN
DISP95   MVI   CMNERSEL,C' '       CLEAR OUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG05)
         B     DISP90              GO CHECK RETURN
DISP99   OC    CMNERSEL,=C' '
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,LIST3,LIST2,NOWRITE,)
         CALL  ISPLINK,(,,CMNEROPT,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERWDS,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERNXT,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERSEL,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERTAU,,),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERTMS,,),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERROW,,),MF=(E,ISPLNK9)
         CALL  ISPLINK,(,,CMNERTUI,,),MF=(E,ISPLNKC)
         CALL  ISPLINK,(,,CMNERVOL,,),MF=(E,ISPLNKD)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
VTBTOP   DC    CL8'TBTOP'
VTBPUT   DC    CL8'TBPUT'
VTBGET   DC    CL8'TBGET'
VTBSCAN  DC    CL8'TBSCAN'
VTBADD   DC    CL8'TBADD'
VTBMOD   DC    CL8'TBMOD'
VTBSKIP  DC    CL8'TBSKIP'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG4     DC    F'4'
LNG6     DC    F'6'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG10    DC    F'10'
LNG11    DC    F'11'
LNG12    DC    F'12'
LNG20    DC    F'20'
LNG44    DC    F'44'
NEG15    DC    F'-15'
*
*  DIALOG MANAGER LISTS
*
VSEL     DC    C'(CMNERSEL)'
VROW     DC    C'(CMNERROW)'
VOPT     DC    C'(CMNEROPT)'
VDSN     DC    C'(CMNERWDS CMNERDSN)'
VTUI     DC    C'(CMNERTUI)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VOWN     DC    C'(CMNEROWN)'
VMSG     DC    C'(CMNERTMS)'
VAUD     DC    C'(CMNERTAU)'
VVOL     DC    C'(CMNERVOL)'
LIST1    DC    C'(CMNERWDS '
         DC    C'CMNERVOL '
         DC    C'CMNERRC '
         DC    C'CMNEROWN)'
LIST2    DC    C'(CMNERSEL '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
LIST3    DC    C'(CMNERTUI)'
LIST4    DC    C'(CMNERSEL '
         DC    C'CMNERTUI '
         DC    C'CMNERTAU '
         DC    C'CMNERTAC '
         DC    C'CMNERTMS)'
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER52'
CMNER02  DC    CL8'CMNER19'
CMNER16  DC    C'PGM(CMNER16)'
MSG01    DC    CL8'CMNER520'       RACF ERROR
MSG02    DC    CL8'CMNER521'
MSG03    DC    CL8'CMNER522'       AUTHORIZATION ERROR
MSG04    DC    CL8'CMNER523'       ACCESS LIST EMPTY
MSG05    DC    CL8'CMNER524'       TOO MANY LINES MODIFIED
MSG06    DC    CL8'CMNER525'       INVALID SELECT CODE
MSG07    DC    CL8'CMNER526'       INVALID ADD
MSG08    DC    CL8'CMNER527'       ADD FAILED
MSG09    DC    CL8'CMNER528'       COMMAND COMPLETE
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
VROWNP   DC    CL8'CMNERROW'
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTDS'
*
*  MISCELLANEOUS FIELDS
*
COMTAB   DC    193X'00'            00-C0
         DC    X'04'               A
         DC    X'00'
         DC    X'08'               C
         DC    X'0C'               D
         DC    16X'00'
         DC    X'10'               N
         DC    3X'00'
         DC    X'14'               R
         DC    10X'00'
         DC    X'18'               U
         DC    27X'00'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
MOVEUID1 MVC   3(0,R5),0(R3)
MOVEUID2 MVC   CMNERTUI(0),0(R3)
MOVEAUT1 MVC   0(0,R5),0(R3)
MOVEAUT2 MVC   CMNERTAU(0),0(R3)
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
*
*  DIALOG MANAGER VARIABLES
*
CMNERSEL DC    C' '
CMNEROPT DC    CL20' '
CMNERWDS DS    CL44
CMNERDSN DS    CL44
CMNERVOL DC    CL8' '
CMNERTUI DC    CL8' '
CMNERTAU DC    CL8' '
CMNERTMS DC    CL10' '
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
CMNERROW DC    F'0'
CMNERRC  DS    F
CMNERCRP DC    F'0'
*
*  CALL LISTS
*
ISPLNK1  CALL  ,(VDEF,VOPT,CMNEROPT,CHAR,LNG20),MF=L
ISPLNK2  CALL  ,(VDEF,VDSN,CMNERWDS,CHAR,LNG44),MF=L
ISPLNK3  CALL  ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK4  CALL  ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNK5  CALL  ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK6  CALL  ,(VDEF,VSEL,CMNERSEL,CHAR,LNG1),MF=L
ISPLNK7  CALL  ,(VDEF,VAUD,CMNERTAU,CHAR,LNG7),MF=L
ISPLNK8  CALL  ,(VDEF,VMSG,CMNERTMS,CHAR,LNG10),MF=L
ISPLNK9  CALL  ,(VDEF,VROW,CMNERROW,FIXED,LNG4),MF=L
ISPLNKA  CALL  ,(VDISPLAY,CMNER01,,),MF=L
ISPLNKB  CALL  ,(VTBDISPL,TABLE,CMNER01,),MF=L
ISPLNKC  CALL  ,(VDEF,VTUI,CMNERTUI,CHAR,LNG8),MF=L
ISPLNKD  CALL  ,(VDEF,VVOL,CMNERVOL,CHAR,LNG6),MF=L
RCHKL    RACHECK ENTITY=CMNERWDS,CLASS='DATASET',ATTR=READ,MF=L
*
*
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
CMDBUF   DC    H'255'
         DC    H'3'
CMD      DC    CL255'PE '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNER53
MVSGPSVC EQU   255     USER PROVIDED GP SVC NUMBER
         TITLE '***** CONNECT GROUP *****'
CMNER53  $PROLOG R12,R6
***********************************************************************
*                                                                     *
*        PROGRAM - CMNER53                                            *
*        DATE WRITTEN - AUGUST 1981                                   *
*        AUTHOR  - MILLER BREWING CO                                  *
*        PURPOSE - THIS IS A REENTRANT WHICH ALLOWS MODIFICATION OF   *
*               ACCESS LISTS FOR GENERAL RESOURCES. IT BUILDS A PERMIT*
*               COMMAND AND BRANCHES TO SPF SUBROUTINE ISPCAT         *
*                                                                     *
*        PANELS USED - CMNER53                                        *
*                      CMNER54                                        *
*                      CMNER55                                        *
*                      CMNER56                                        *
*                      CMNER19                                        *
*                                                                     *
*        ERROR MESSAGES - CMNER530 - CMNER539                         *
*                                                                     *
*        CHANGE LOG -                                                 *
*          MM/DD/YY -                                                 *
*                                                                     *
***********************************************************************
         EJECT
         GETMAIN R,LV=DYNWKLN
         LR    R8,R1               COPY ADDR OF GOTTEN STORAGE
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC AREA
         LR    R3,R9               COPY LENGTH FOR MOVE
         LA    R2,DYNWK            BEGINNING ADDR OF MOVE
         MVCL  R8,R2               MOVE INTO GOTTEN AREA
         USING DYNWK,R8
         LR    R8,R1               RESTORE TO BEGININNING
         BAL   R10,SETUP
P53010   CALL  ISPLINK,(VGET,LIST1,SHARED)
P53030   CALL  ISPLINK,(VPUT,VNXTSW,SHARED)
         CALL  ISPLINK,(VSELECT,LNG12,CMNER17)
         CALL  ISPLINK,(VGET,LIST1,SHARED)
         L     R15,CMNERRC         GET RETURN CODE FROM FILL MODULE
         LTR   R15,R15
         BZ    P53035              IF ZERO CONTINUE
*                                  OTHERWISE DISPLAY AN ERROR MSG
         ST    R15,CMNERRC
         CALL  ISPLINK,(VDISPLAY,CMNER01,MSG01,)
         B     P53099              AND GET OUT
P53035   BAL   R10,CHKAUTH         CHECK AUTHORIZATION
         LTR   R15,R15             CHECK RETURN CODE
         BNZ   P53099              IF NOT ZERO, THEN GET OUT
         XR    R11,R11             CLEAR MSG REG
         BAL   R10,DISPSUB         GO DISPLAY SOMETHING
         SPACE 5
P53040   EQU   *                   CHECK SELECTION CRITERA
         CLI   CMNERSEL,C' '       WAS A SELECTION MADE
         BE    P53150              YES--GO TO COMMAND PROCESSING
         CLI   CMNERSEL,0          NULL OR BLANK MEAN NO SELECTION MADE
         BE    P53150
         CLC   CMNERTUI,=CL8' '    CHECK IF VALID SELECT LINE
         BNE   P53145              OKAY
         LA    R11,MSG04           NO, ISSUE MESSAGE
         BAL   R10,DISPSUB
         B     P53040
P53145   MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         XR    R2,R2               CLEAR R2
         TRT   CMNERSEL,COMTAB     CHECK WHICH OPTION
         BNZ   P53050              FOUND IT
         LA    R11,MSG06
         BAL   R10,DISPSUB
         B     P53040
P53050   B     P53050(R2)
         B     P53060              (4 -> C)
         B     P53090              (8 -> D)
P53060   MVC   CMNERUID,CMNERTUI   SET UP FIELDS FOR DISPLAY
         MVC   CMNERGAU,CMNERTAC
         MVC   CMNERUAC,CMNERTUA
         MVC   CMNERGAC,=C'NO '    SET DEFAULT ATTRIBUTES
         MVC   CMNERADS,=C'NO '
         MVC   CMNERSPC,=C'NO '
         MVC   CMNEROPN,=C'NO '
         MVC   CMNERREV,=C'NO '
         BAL   R10,FILLATT         NOW, GO FILL ATTRIBUTES FOR DISPLAY
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,VCRPNP)
         CALL  ISPLINK,(VTBDEL,TABLE)  DELETE CURRENT ROW
         LTR   R15,R15             CHECK RETURN
         BZ    P53062              GOOD
         ABEND 13,DUMP
P53062   EQU   *
         L     R7,CMNERCRP         GET CURRENT CRP
P53063   C     R7,CMNERROW         IF SAME AS CURRENT NUM OF ROWNS THEN
*                                  WE ARE ON THE LAST ROW
         BE    P53070              AND THERE CAN'T BE ANY MORE
*                                  ATTRIBUTE ROWS
         CALL  ISPLINK,(VTBSKIP,TABLE,LNG1,) IF NOT ON LAST, SKIP AHEAD
         LTR   R15,R15             CHECK RETURN
         BZ    P53065              GOOD
         ABEND 10,DUMP
P53065   CLC   CMNERTUI,=CL8' '    CHECK IF THIS IS NEXT USER
         BNE   P53068              YES, THEN GO AND BACK UP ONE
         BAL   R10,FILLATT         NO, THEN MUST BE ATTRIBUTE ROW
         LA    R7,1(R7)            ADVANCE CRP COUNTER
         CALL  ISPLINK,(VTBDEL,TABLE) DELETE THIS ROW
         LTR   R15,R15             CHECK RETURN
         BZ    P53063              GOOD, THEN CHECK NEXT ROW
         ABEND 10,DUMP             NO GOOD, SAY BYE
P53068   CALL  ISPLINK,(VTBSKIP,TABLE,NEG1,)   BACK UP 1 ROW
         LTR   R15,R15             CHECK RETURN
         BZ    P53070              OKAY
         CH    R15,=H'8'           ARE WE AT TOP
         BE    P53070              YES, THEN OKAY
         ABEND 10,DUMP             NO, SAY BYE
P53070   CALL  ISPLINK,(VDISPLAY,CMNER02,,) DISPLAY CONNECT PANEL
         LTR   R15,R15
         BZ    P53072              IF GOOD CONTINUE
         CH    R15,=H'8'           END KEY ? ?
         BE    P53071              YES
         ABEND 11,DUMP             OTHERWISE-----------
P53071   BAL   R10,DISPSUB         REDISPLAY FIRST PANEL
         B     P53040
P53072   BAL   R10,BLDCON          GO BUILD CONNECT COMMAND
         MVC   CMNERTMS,=CL10'**CHANGED' MOVE IN DEFAULT MESSAGE
         B     P53120              GO ISSUE COMMAND
         SPACE 5
P53090   EQU   *                   PROCESS REMOVE COMMAND
         MVC   CMNERUID,CMNERTUI   MOVE IN SELECTED USER
         CALL  ISPLINK,(VDISPLAY,CMNER03,,) DISPLAY REMOVE PANEL
         LTR   R15,R15             CHECK RETURN
         BZ    P53095              GOOD
         CH    R15,=H'8'           END KEY? ? ?
         BE    P53092
         ABEND 2,DUMP
P53092   BAL   R10,DISPSUB         REDISPLAY GROUP MENU
         B     P53040
P53095   MVI   CMNERSEL,C' '
         MVC   CMD(2),=C'RE'       MOVE IN COMMAND
         MVC   CMD+3(L'CMNERUID),CMNERUID  MOVE IN USER ID
         LA    R3,CMD+L'CMNERUID+4 ADVANCE TO FIRST BLANK
         MVC   0(6,R3),=C'GROUP('  MOVE IN KEYWORD
         MVC   6(L'CMNERGRP,R3),CMNERGRP MOVE IN GROUP
         TRT   6(L'CMNERGRP+1,R3),BLANKTAB SEARCH FOR FIRST BLANK
         MVI   0(R1),C')'          MOVE IN CLOSING PAREN
         LA    R3,2(R1)            ADVANCE TO NEXT BLANK
         CLC   CMNEROWN,=CL8' '    WAS OWNER ENTERED
         BE    P53100              NO, THEN BYPASS IT
         MVC   0(6,R3),=C'OWNER('  MOVE IN KEYWORD
         MVC   6(L'CMNEROWN,R3),CMNEROWN MOVE IN OWNERE
         TRT   6(L'CMNEROWN+1,R3),BLANKTAB SEARCH FOR 1ST BLANK
         MVI   0(R1),C')'
P53100   MVC   CMNERTMS,=C'***DELETED'
P53120   BAL   R10,ISSUE           GO ISSUE COMMAND
         CLC   ISPCATRC,=F'0'      CHECK FOR GOOD RETURN
         BE    P53140              YES-
         MVC   CMNERTMS,=CL10'**FAILED'
P53140   CALL  ISPLINK,(VTBPUT,TABLE,)
         SPACE 5
P53150   EQU   *                   BEGIN
*                                       PROCESSING
*                                            COMMAND
*                                                LINE
*
         OC    CMNEROPT,=CL20' '
         CLC   CMNEROPT(4),=C'NEXT'
         BE    P53190              YES
         CLC   CMNEROPT(2),=C'A '  IS THIS AN ADD
         BE    P53160
P53152   MVI   CMNERNXT,X'00'      SET DEFAULT NEXT SWITCH
         LA    R11,MSG02
         BAL   R10,DISPSUB
         B     P53040
P53160   EQU   *                   ADD NEW USER TO ACCESS LIST
         MVI   CMD+3,C' '          CLEAR COMMAND BUFFER
         MVC   CMD+4(251),CMD+3
         CALL  ISPLINK,(VTBSKIP,TABLE,NEG1,) BACK UP ONE
         LTR   R15,R15             CHECK RETURN
         BZ    P53170              OKAY
         CH    R15,=H'8'           AT TOP OF TABLE
         BE    P53170              YES, THEN OKAY
         ABEND 12,DUMP             OTHERWISE, SAY BYE
P53170   MVC   CMNERGAC,=CL3'NO'   SET DEFAULTS
         MVC   CMNERADS,=CL3'NO'
         MVC   CMNERSPC,=CL3'NO'
         MVC   CMNEROPN,=CL3'NO'
         MVC   CMNERREV,=CL3'NO'
         MVC   CMNERUAC,=CL8'READ'
         MVC   CMNERUID,=CL8' '
         MVC   CMNERGAU,=CL8'USE'
         CALL  ISPLINK,(VDISPLAY,CMNER04,,)
         LTR   R15,R15             CHECK RETURN
         BZ    P53180
         CH    R15,=H'8'           WAS END KEY ENTERED? ?
         BE    P53075
         ABEND 10,DUMP
P53075   BAL   R10,DISPSUB
         B     P53040
P53180   BAL   R10,BLDCON          GO BUILD CONNECT COMMAND
         BAL   R10,ISSUE           NOW, ISSUE IT
         LA    R11,MSG08
         MVC   CMNERTMS,=CL10'**FAILED' SET MESSAGES
         CLC   ISPCATRC,=F'0'      CHECK RETURN
         BNE   P51185              GO DISPLAY
         LA    R11,MSG09
         MVC   CMNERTMS,=CL10'**ADDED'
P51185   CALL  ISPLINK,(VTBPUT,TABLE,)
         BAL   R10,DISPSUB
         B     P53040
         SPACE
P53190   CLI   CMNERSEL,C' '       WAS ANYTHING SELECTED
         BE    P53195              NO, THEN NEXT OKAY
         CLI   CMNERSEL,0
         BNE   P53152
P53195   MVI   CMNERNXT,X'01'
         CALL  ISPLINK,(VTBEND,TABLE)   REMOVE OLD TABLE
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         B     P53030
P53099   CALL  ISPLINK,(VTBEND,TABLE)
         $EPILOG
         TITLE '***** BUILD CONNECT COMMAND *****'
BLDCON   MVC   CMD(2),=C'CO'       MOVE IN COMMAND
         MVC   CMD+3(8),CMNERUID   MOVE IN USERID
         LA    R3,CMD+L'CMNERUID+4 ADVANCE TO FIRST BLANK
         MVC   0(6,R3),=C'GROUP('  MOVE IN KEYWORD
         MVC   6(L'CMNERGRP,R3),CMNERGRP
         TRT   6(L'CMNERGRP+1,R3),BLANKTAB
         MVI   0(R1),C')'
         LA    R3,2(R1)            ADVANCE PAST GROUP
         CLC   CMNERGAU,=CL8' '    CHECK FOR GROUP AUTHORITY
         BE    BLDCON10            NOT ENTERED
         MVC   0(10,R3),=C'AUTHORITY(' KEYWORD
         MVC   10(L'CMNERGAU,R3),CMNERGAU MOVE IN GROUP AUTHORITY
         TRT   10(L'CMNERGAU+1,R3),BLANKTAB CHECK FOR FIRST BLANK
         MVI   0(R1),C')'
         LA    R3,2(R1)
BLDCON10 CLC   CMNERUAC,=CL8' '    CHECK FOR UACC
         BE    BLDCON20            NOT ENTERED
         MVC   0(5,R3),=C'UACC('
         MVC   5(L'CMNERUAC,R3),CMNERUAC
         TRT   5(L'CMNERUAC+1,R3),BLANKTAB
         MVI   0(R1),C')'
         LA    R3,2(R1)
BLDCON20 XR    R4,R4               CLEAR COUNT REG
         MVC   CMNERTUI,CMNERUID   SET UP FOR TABLE ADD
         MVC   CMNERTAC,CMNERGAU
         MVC   CMNERTUA,CMNERUAC
         MVC   CMNERTAT,=CL12' '
         CLC   CMNERGAC,=C'YES'    CHECK ATTRIBUTES
         BE    BLDCON25
         MVC   0(8,R3),=C'NOGRPACC'
         LA    R3,9(R3)
         B     BLDCON30
BLDCON25 MVC   0(6,R3),=C'GRPACC'
         MVC   CMNERTAT,=CL12'GRPACC'
         LA    R3,7(R3)
         BAL   R5,ADDAROW
BLDCON30 EQU   *
         CLC   CMNERSPC,=C'YES'    CHECK ATTRIBUTES
         BE    BLDCON35
         MVC   0(9,R3),=C'NOSPECIAL'
         LA    R3,10(R3)
         B     BLDCON40
BLDCON35 MVC   0(7,R3),=C'SPECIAL'
         MVC   CMNERTAT,=CL12'SPECIAL'
         LA    R3,8(R3)
         BAL   R5,ADDAROW
BLDCON40 EQU   *
         CLC   CMNERADS,=C'YES'    CHECK ATTRIBUTES
         BE    BLDCON45
         MVC   0(6,R3),=C'NOADSP'
         LA    R3,7(R3)
         B     BLDCON50
BLDCON45 MVC   0(4,R3),=C'ADSP'
         MVC   CMNERTAT,=CL12'ADSP'
         LA    R3,5(R3)
         BAL   R5,ADDAROW
BLDCON50 EQU   *
         CLC   CMNEROPN,=C'YES'    CHECK ATTRIBUTES
         BE    BLDCON55
         MVC   0(12,R3),=C'NOOPERATIONS'
         LA    R3,13(R3)
         B     BLDCON60
BLDCON55 MVC   0(10,R3),=C'OPERATIONS'
         MVC   CMNERTAT,=CL12'OPERATIONS'
         LA    R3,11(R3)
         BAL   R5,ADDAROW
BLDCON60 EQU   *
         CLC   CMNERREV,=C'YES'    CHECK ATTRIBUTES
         BE    BLDCON65
         MVC   0(6,R3),=C'RESUME'
         LA    R3,7(R3)
         B     BLDCON70
BLDCON65 MVC   0(6,R3),=C'REVOKE'
         MVC   CMNERTAT,=CL12'REVOKE'
         LA    R3,7(R3)
         BAL   R5,ADDAROW
BLDCON70 LTR   R4,R4               CHECK IF ANY ROWS ADDED
         BNZ   BLDCON80            YES, THEN CHECK IF IN RIGHT POSITION
         BAL   R5,ADDAROW
BLDCON80 BCTR  R4,0                REDUCE FOR CURRENT ROW
         LTR   R4,R4               CHECK IF AT ZERO
         BZ    BLDCON99            YES, THEN WE'RE IN POSITION
BLDCON85 CALL  ISPLINK,(VTBSKIP,TABLE,NEG1,)  BACK UP TABLE
         LTR   R15,R15
         BZ    BLDCON86            ONLY ZERO IS ACCEPTABLE HERE
         ABEND 15,DUMP
BLDCON86 BCT   R4,BLDCON85         LOOP UNTIL WE'RE AT THE FIRST ROW
*                                  FOR THE USER BEING ADDED/CHANGED
BLDCON99 BR    R10                 AND RETURN
         TITLE '***** MISC SUBROUTINES *****'
FILLATT  EQU   *                   FILL ATTRIBUTE VARIABLES
         CLC   CMNERTAT,=CL12'GRPACC'
         BNE   FILLATT1
         MVC   CMNERGAC,=CL3'YES'
         B     FILLATT9
FILLATT1 CLC   CMNERTAT,=CL12'SPECIAL'
         BNE   FILLATT2
         MVC   CMNERSPC,=CL3'YES'
         B     FILLATT9
FILLATT2 CLC   CMNERTAT,=CL12'ADSP'
         BNE   FILLATT3
         MVC   CMNERADS,=CL3'YES'
         B     FILLATT9
FILLATT3 CLC   CMNERTAT,=CL12'OPERATIONS'
         BNE   FILLATT4
         MVC   CMNEROPN,=CL3'YES'
         B     FILLATT9
FILLATT4 CLC   CMNERTAT,=CL12'REVOKE'
         BNE   FILLATT9
         MVC   CMNERREV,=CL3'YES'
FILLATT9 BR    R10
         SPACE 5
ADDAROW  EQU   *
         MVC   CMNERTMS,=CL10' '   CLEAR MESSAGE
         MVI   CMNERSEL,C' '       CLEAR OUT ROW VARIABLES
         LTR   R4,R4               CHECK IF THIS IS THE FIRST ADD
         BZ    ADDAR10             YES, THEN DON'T CLEAR VARIABLES
         MVC   CMNERTUI,=CL8' '
         MVC   CMNERTAC,=CL8' '
         MVC   CMNERTUA,=CL8' '
ADDAR10  CALL  ISPLINK,(VTBADD,TABLE,)
         LA    R4,1(R4)            ADD ONE TO ROW COUNT
         BR    R5
         TITLE '***** CHECK AUTHORIZATION ROUTINE *****'
CHKAUTH  L     R4,544              ADDR OF ASCB
         L     R4,108(R4)          ADDR OF ASXB
         L     R4,200(R4)          ADDR OF ACEE
         USING ACEE,R4             SET UP ADDRESSIBILITY
         LA    R15,0               SET DEFAULT RETURN
         TM    ACEEFLG1,ACEESPEC   IS USER SPECIAL
         BOR   R10                 YES, THEN RETURN
         XR    R3,R3               CLEAR R3
         IC    R3,ACEEUSRL         GET LENGTH OF USER
         BCTR  R3,0                REDUCE FOR COMPARE
         EX    R3,CHK1             CHECK IF USERID = OWNERID
         BER   R10                 YES, THEN RETURN
*
*                                  CHECK FOR AT LEAST JOIN OR CONNECT
         TM    CMNERMAU,X'01'
         BOR   R10                 GOOD, THEN RETURN
*
*                                  IF NO GOOD, DISPLAY AUTHORIZATION
*                                  FAILED MSG
         CALL  ISPLINK,(VDISPLAY,CMNER05,MSG03,)
         LA    R15,8
         BR    R10
CHK1     CLC   CMNEROWN(0),ACEEUSRI
         DROP  R4
         TITLE '***** ISSUE TSO COMMAND (ISPCAT) *****'
ISSUE    EQU   *
         L     R2,X'21C'           TCB OLD
         L     R2,X'70'(R2)        ADDR OF 1ST SAVE AREA
         L     R2,X'18'(R2)        R1 IN 1ST SAVE AREA PTS TO PARM
         L     R2,0(R2)            FIRST PARM IS TLD
         CLC   =C'TLD',0(R2)       BE SURE
         BE    ISSUE10
         ABEND 5,DUMP
ISSUE10  ST    R2,ISPCATCL         STORE IN PARM LIST
         LA    R4,ISPCATRC         RELOCATE
         ST    R4,ISPCATCL+8               RETURN CODE
         LA    R4,CMDBUF           RELOCATE
         ST    R4,ISPCATCL+4               COMMAND BUFFER
         LOAD  EP=ISPSUBS
         LR    R3,R0               COPY EP OF ISPSUBS
         LA    R1,=C'AUTH'
         LA    R15,3               REQUEST AUTHORIZATION
         SVC   MVSGPSVC            REQUEST AUTHORIZATION
         L     R15,X'2C'(R3)       EP OF ISPCAT
         LA    R1,ISPCATCL
         BALR  R14,R15             GO TO IT
         MVC   CMDBUF(2),=H'255'
         MVC   CMDBUF+2(2),=H'3'   REINITIALIZE
         SR    R1,R1               REMOVE AUTHORIZATION
         LA    R15,4               REMOVE  AUTHORIZATION
         SVC   MVSGPSVC            REMOVE  AUTHORIZATION
         BR    R10
         TITLE '***** DISPLAY SUBROUTINE *****'
DISPSUB  EQU   *
*        ON ENTRY
*              R10 -> RETURN
*              R11 -> MESSAGE
*
         MVI   CMNERSEL,C' '      CLEAR OUT INPUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBQUERY,TABLE,,,VROWNP,,,) GET NUM OF ROWS
         ICM   R15,15,CMNERROW
         BNZ   DISP10              NO ROWS IN TABLE
         CALL  ISPLINK,(,,(R11)),MF=(E,ISPLNKA)
         B     DISP90              GO CHECK RETURN
DISP10   CALL  ISPLINK,(,,,(R11)),MF=(E,ISPLNKB)
DISP90   CH    R15,=H'8'           END KEY ENTERED
         BE    P53099              YES
         CH    R15,=H'4'           TOO MANY ROWS
         BE    DISP95              YES, DISPLAY ERROR
         CH    R15,=H'0'           OKAY
         BE    DISP99              YES, RETURN
DISP95   MVI   CMNERSEL,C' '       CLEAR OUT FIELDS
         MVC   CMNEROPT,=CL20' '
         CALL  ISPLINK,(VTBDISPL,TABLE,CMNER01,MSG05)
         B     DISP90              GO CHECK RETURN
DISP99   OC    CMNERSEL,=C' '
         BR    R10
         TITLE '***** SETUP ROUTINE *****'
SETUP    EQU   *
*
*  THIS ROUTINE PERFORMS ALL INTIAL DIALOG MANAGER SERVICES
*
         CALL  ISPLINK,(VTBCRET,TABLE,,LIST2,NOWRITE,)
         CALL  ISPLINK,(,,CMNEROPT,,),MF=(E,ISPLNK1)
         CALL  ISPLINK,(,,CMNERGRP,,),MF=(E,ISPLNK2)
         CALL  ISPLINK,(,,CMNERNXT,,),MF=(E,ISPLNK3)
         CALL  ISPLINK,(,,CMNERRC,,),MF=(E,ISPLNK4)
         CALL  ISPLINK,(,,CMNEROWN,,),MF=(E,ISPLNK5)
         CALL  ISPLINK,(,,CMNERSEL,,),MF=(E,ISPLNK6)
         CALL  ISPLINK,(,,CMNERGAU,,),MF=(E,ISPLNK7)
         CALL  ISPLINK,(,,CMNERTMS,,),MF=(E,ISPLNK8)
         CALL  ISPLINK,(,,CMNERROW,,),MF=(E,ISPLNK9)
         CALL  ISPLINK,(,,CMNERMAU,,),MF=(E,ISPLNKC)
         CALL  ISPLINK,(,,CMNERTAT,,),MF=(E,ISPLNKD)
         CALL  ISPLINK,(,,CMNERGAC,,),MF=(E,ISPLNKE)
         BR    R10
         TITLE '***** CONSTANTS *****'
*
*  DIALOG MANAGER SERVICES
*
VGET     DC    CL8'VGET'
VPUT     DC    CL8'VPUT'
VDEF     DC    CL8'VDEFINE'
VCOPY    DC    CL8'VCOPY'
VTBDISPL DC    CL8'TBDISPL'
VTBCRET  DC    CL8'TBCREATE'
VTBEND   DC    CL8'TBEND'
VSELECT  DC    CL8'SELECT'
VDISPLAY DC    CL8'DISPLAY'
VTBQUERY DC    CL8'TBQUERY'
VTBTOP   DC    CL8'TBTOP'
VTBPUT   DC    CL8'TBPUT'
VTBGET   DC    CL8'TBGET'
VTBSCAN  DC    CL8'TBSCAN'
VTBADD   DC    CL8'TBADD'
VTBMOD   DC    CL8'TBMOD'
VTBSKIP  DC    CL8'TBSKIP'
VTBDEL   DC    CL8'TBDELETE'
*
*  DIALOG MANGER LENGTHS
*
LNG1     DC    F'1'
LNG2     DC    F'2'
LNG3     DC    F'3'
LNG4     DC    F'4'
LNG7     DC    F'7'
LNG8     DC    F'8'
LNG10    DC    F'10'
LNG11    DC    F'11'
LNG12    DC    F'12'
LNG20    DC    F'20'
NEG1     DC    F'-1'
NEG15    DC    F'-15'
*
*  DIALOG MANAGER LISTS
*
VTAT     DC    C'(CMNERTAT)'
VMAU     DC    C'(CMNERMAU)'
VSEL     DC    C'(CMNERSEL)'
VROW     DC    C'(CMNERROW CMNERCRP)'
VOPT     DC    C'(CMNEROPT)'
VRES     DC    C'(CMNERGRP CMNERUID CMNERTUI)'
VNXTSW   DC    C'(CMNERNXT)'
VRETCD   DC    C'(CMNERRC)'
VOWN     DC    C'(CMNEROWN)'
VMSG     DC    C'(CMNERTMS)'
VGAU     DC    C'(CMNERGAU CMNERUAC CMNERTAC CMNERTUA)'
LIST1    DC    C'(CMNERGRP '
         DC    C'CMNERRC '
         DC    C'CMNEROWN '
         DC    C'CMNERMAU)'
LIST2    DC    C'(CMNERSEL '
         DC    C'CMNERTUI '
         DC    C'CMNERTAC '
         DC    C'CMNERTCT '
         DC    C'CMNERTUA '
         DC    C'CMNERTAT '
         DC    C'CMNERTMS)'
LIST3    DC    C'(CMNERGAC '
         DC    C'CMNERADS '
         DC    C'CMNERSPC '
         DC    C'CMNEROPN '
         DC    C'CMNERREV)'
*
*  DIALOG MANAGER PANELS, FUNCTIONS AND MESSAGES
*
CMNER01  DC    CL8'CMNER53'
CMNER02  DC    CL8'CMNER54'
CMNER03  DC    CL8'CMNER55'
CMNER04  DC    CL8'CMNER56'
CMNER05  DC    CL8'CMNER19'
CMNER17  DC    C'PGM(CMNER17)'
MSG01    DC    CL8'CMNER530'       RACF ERROR
MSG02    DC    CL8'CMNER531'
MSG03    DC    CL8'CMNER532'       AUTHORIZATION ERROR
MSG04    DC    CL8'CMNER533'       SELECT USERID
MSG05    DC    CL8'CMNER534'       TOO MANY LINES MODIFIED
MSG06    DC    CL8'CMNER535'       INVALID SELECT CODE
MSG07    DC    CL8'CMNER536'       INVALID ADD
MSG08    DC    CL8'CMNER537'       ADD FAILED
MSG09    DC    CL8'CMNER538'       COMMAND COMPLETE
*
*  DIALOG MANAGER MISCELLANEOUS FIELDS
*
VROWNP   DC    CL8'CMNERROW'
VCRPNP   DC    CL8'CMNERCRP'
FIXED    DC    CL8'FIXED'
CHAR     DC    CL8'CHAR'
SHARED   DC    CL8'SHARED'
NOWRITE  DC    CL8'NOWRITE'
TABLE    DC    CL8'CMNERTGP'
*
*  MISCELLANEOUS FIELDS
*
COMTAB   DC    193X'00'            00-C0
         DC    X'00'               A
         DC    X'00'
         DC    X'04'               C
         DC    X'08'               D
         DC    16X'00'
         DC    X'00'               N
         DC    3X'00'
         DC    X'00'               R
         DC    10X'00'
         DC    X'00'               U
         DC    27X'00'
BLANKTAB DC    64X'00'
         DC    X'01'
         DC    191X'00'
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
*
*  DIALOG MANAGER VARIABLES
*
CMNERSEL DC    C' '
CMNEROPT DC    CL20' '
CMNERGRP DS    CL8
CMNERUID DC    CL8' '
CMNERTUI DC    CL8' '
CMNERGAU DC    CL8' '
CMNERUAC DC    CL8' '
CMNERTAC DC    CL8' '
CMNERTUA DC    CL8' '
CMNERTAT DS    CL12' '
CMNERMAU DS    X
CMNERTMS DC    CL10' '
CMNERNXT DC    X'00'
CMNEROWN DS    CL8
DSNADDR  DS    A
CMNERROW DC    F'0'
CMNERCRP DC    F'0'
CMNERRC  DS    F
CMNERGAC DS    CL3
CMNERADS DS    CL3
CMNERSPC DS    CL3
CMNEROPN DS    CL3
CMNERREV DS    CL3
*
*  CALL LISTS
*
ISPLNK1  CALL  ,(VDEF,VOPT,CMNEROPT,CHAR,LNG20),MF=L
ISPLNK2  CALL  ,(VDEF,VRES,CMNERGRP,CHAR,LNG8),MF=L
ISPLNK3  CALL  ,(VDEF,VNXTSW,CMNERNXT,FIXED,LNG1),MF=L
ISPLNK4  CALL  ,(VDEF,VRETCD,CMNERRC,FIXED,LNG4),MF=L
ISPLNK5  CALL  ,(VDEF,VOWN,CMNEROWN,CHAR,LNG8),MF=L
ISPLNK6  CALL  ,(VDEF,VSEL,CMNERSEL,CHAR,LNG1),MF=L
ISPLNK7  CALL  ,(VDEF,VGAU,CMNERGAU,CHAR,LNG8),MF=L
ISPLNK8  CALL  ,(VDEF,VMSG,CMNERTMS,CHAR,LNG10),MF=L
ISPLNK9  CALL  ,(VDEF,VROW,CMNERROW,FIXED,LNG4),MF=L
ISPLNKA  CALL  ,(VDISPLAY,CMNER01,,),MF=L
ISPLNKB  CALL  ,(VTBDISPL,TABLE,CMNER01,),MF=L
ISPLNKC  CALL  ,(VDEF,VMAU,CMNERMAU,FIXED,LNG1),MF=L
ISPLNKD  CALL  ,(VDEF,VTAT,CMNERTAT,CHAR,LNG12),MF=L
ISPLNKE  CALL  ,(VDEF,LIST3,CMNERGAC,CHAR,LNG3),MF=L
*
*
ISPCATRC DC    A(0)
ISPCATCL DC    3A(0)
CMDBUF   DC    H'255'
         DC    H'3'
CMD      DC    CL255'PE '
DYNWKLN  EQU   *-DYNWK
         IHAACEE
         END
./ ADD  NAME=CMNSUB
CMNSUB   $PROLOG
 TITLE '***** SUBROUTINE TO CONVERT JULIAN TO GREGORIAN **** &SYSDATE '
MAINLINE EQU   *
         EJECT
INIT1    EQU   *
         LR    R4,R1               SAVE PARAMETERS POINTER
         GETMAIN R,LV=DYNWKLN      GET SOME STORAGE
         LR    R8,R1
         LA    R2,DYNWK
         LA    R9,DYNWKLN          LENGTH OF DYNAMIC WORKAREA
         LR    R3,R9               COPY IT
         MVCL  R8,R2               MOVE FROM PROGRAM TO DYNAMIC AREA
         LR    R8,R1               RESTORE POINTER TO DYNAMIC AREA
         USING DYNWK,R8            SET ADDRESSIBILITY
         L     R2,0(R4)               POINTER TO JULIAN DATE
         L     R2,0(R2)
         ST    R2,DBL
         SR    R0,R0
         ST    R0,DBL+4
         L     R2,4(R4)               RETURN GREGORIAN DATE FIELD
         ST    R2,RETFLD              SAVE
         UNPK  WORK+3(5),DBL+1(3)
         OI    WORK+7,X'F0'
         MVC   INITYEAR,WORK+3             SAVE YEAR
         MVC   INITDAY,WORK+5              SAVE DAY          YY.DDD
         SR    R1,R1                   FORMAT THE TIME
         IC    R1,DBL+4
         STC   R1,INITHR+1
         SRL   R1,4
         STC   R1,INITHR
         OI    INITHR+1,X'F0'
         OI    INITHR,X'F0'               HH.
         IC    R1,DBL+5
         STC   R1,INITMN+1
         SRL   R1,4
         STC   R1,INITMN
         OI    INITMN+1,X'F0'
         OI    INITMN,X'F0'               MM.
         IC    R1,DBL+6
         STC   R1,INITSC+1
         SRL   R1,4
         STC   R1,INITSC
         OI    INITSC+1,X'F0'
         OI    INITSC,X'F0'               SS.      TIME NOW HH.MM.SS
*
*        GET STANDARD CALENDAR DATE AS   DEC 99, 1999
*
         XC    DBL2,DBL2             ZERO IT OUT
         MVO   DBL2,DBL+1(1)
         OI    DBL2+7,X'0F'
         UNPK  INITGYR,DBL2
         CVB   R3,DBL2
         AH    R3,=H'1900'
         SR    R2,R2                SET UP FOR DIVIDE
         D     R2,=F'4'             CHECK IF LEAP YEAR
         MVI   INITMONS+11,X'8F'
         LTR   R2,R2                CHECK FOR REMAINDER
         BNZ   INITNLEP
         MVI   INITMONS+11,X'9F'       MUST BE A LEAP YEAR
INITNLEP ZAP   DBL2,DBL+2(2)
         LA    R2,INITMONS-6          BACKOFF FROM BEGINNING OF TABLE
INITMONX LA    R2,6(R2)
         SP    DBL2,4(2,R2)
         BP    INITMONX             COUNT DAYS UNTIL NEG
         AP    DBL2,4(2,R2)          ADD DAYS BACK IN
         OI    DBL2+7,X'0F'
         UNPK  INITGDAY,DBL2
         CLI   INITGDAY,X'F0'
         BNE   INITNODY
         MVI   INITGDAY,C' '            NO LEADING ZEROS
INITNODY MVC   INITGMO(4),0(R2)
RETURN   EQU   *
         L     R2,RETFLD              RETURN GREGORIAN DATE IN
         MVC   0(12,R2),GREGDATE      HIS PROGRAM
         FREEMAIN R,LV=DYNWKLN,A=(8)
         $EPILOG
         EJECT
*
*        CONSTANTS AND WORKAREAS
*
         LTORG
         TITLE '***** DYNAMIC AREAS *****'
DYNWK    EQU   *
RETFLD   DC    F'0'
DBL      DC    D'0'
DBL2     DC    D'0'
SAVERPT  DC   CL6'      '
SAVECOP  DC   CL2' '
SAVENAM  DC   CL30'                              '
DBL3     DC   D'0'
SAVEAREA DC   18F'0'
WORK     DC   CL8' '
BIT      DC   X'00'
SYR      DC   C'YY'
         DC   C'.'
SDA      DC   C'DDD'
         DC   C'  TIME : '
SHR      DC   C'HH'
         DC   C'.'
SMN      DC   C'MM'
         DC   C'.'
SSC      DC   C'SS'
         DC   C'  JOBNAME : '
GREGDATE DS    0CL12
INITGMO  DC    CL2'  '
INITGMO2 DC    CL2'  '
         DC    C' '
INITGDAY DC    C'  '
         DC    C',19'
INITGYR  DC    C'  '
         DS    F'0'
INITMONS DC    C'JAN '
         DC    X'031F'
         DC    C'FEB '
         DC    X'028F'
         DC    C'MAR '
         DC    X'031F'
         DC    C'APR '
         DC    X'030F'
         DC    C'MAY '
         DC    X'031F'
         DC    C'JUNE'
         DC    X'030F'
         DC    C'JULY'
         DC    X'031F'
         DC    C'AUG '
         DC    X'031F'
         DC    C'SEPT'
         DC    X'030F'
         DC    C'OCT '
         DC    X'031F'
         DC    C'NOV '
         DC    X'030F'
         DC    C'DEC '
         DC    X'031F'
         DS    0F'0'
INITYEAR DC    C'YY'
         DC    C'.'
INITDAY  DC    C'DDD'
INITTOD  DS    0CL8                    RUN TIME
INITHR   DC    C'HH'
         DC    C'.'
INITMN   DC    C'MM'
         DC    C'.'
INITSC   DC    C'SS'
INITHHR  EQU   INITHR+1
DYNWKLN  EQU  *-DYNWK
         LTORG
         END
./ ADD  NAME=CMNSUBO
CMNSUB   $PROLOG
 TITLE '***** SUBROUTINE TO CONVERT JULIAN TO GREGORIAN **** &SYSDATE '
MAINLINE EQU   *
         EJECT
INIT1    EQU   *
         L     R2,0(R1)               POINTER TO JULIAN DATE
         L     R2,0(R2)
         ST    R2,DBL
         SR    R0,R0
         ST    R0,DBL+4
         L     R2,4(R1)               RETURN GREGORIAN DATE FIELD
         ST    R2,RETFLD              SAVE
         UNPK  WORK+3(5),DBL+1(3)
         OI    WORK+7,X'F0'
         MVC   INITYEAR,WORK+3             SAVE YEAR
         MVC   INITDAY,WORK+5              SAVE DAY          YY.DDD
         SR    R1,R1                   FORMAT THE TIME
         IC    R1,DBL+4
         STC   R1,INITHR+1
         SRL   R1,4
         STC   R1,INITHR
         OI    INITHR+1,X'F0'
         OI    INITHR,X'F0'               HH.
         IC    R1,DBL+5
         STC   R1,INITMN+1
         SRL   R1,4
         STC   R1,INITMN
         OI    INITMN+1,X'F0'
         OI    INITMN,X'F0'               MM.
         IC    R1,DBL+6
         STC   R1,INITSC+1
         SRL   R1,4
         STC   R1,INITSC
         OI    INITSC+1,X'F0'
         OI    INITSC,X'F0'               SS.      TIME NOW HH.MM.SS
*
*        GET STANDARD CALENDAR DATE AS   DEC 99, 1999
*
         XC    DBL2,DBL2             ZERO IT OUT
         MVO   DBL2,DBL+1(1)
         OI    DBL2+7,X'0F'
         UNPK  INITGYR,DBL2
         CVB   R3,DBL2
         AH    R3,=H'1900'
         SR    R2,R2                SET UP FOR DIVIDE
         D     R2,=F'4'             CHECK IF LEAP YEAR
         MVI   INITMONS+11,X'8F'
         LTR   R2,R2                CHECK FOR REMAINDER
         BNZ   INITNLEP
         MVI   INITMONS+11,X'9F'       MUST BE A LEAP YEAR
INITNLEP ZAP   DBL2,DBL+2(2)
         LA    R2,INITMONS-6          BACKOFF FROM BEGINNING OF TABLE
INITMONX LA    R2,6(R2)
         SP    DBL2,4(2,R2)
         BP    INITMONX             COUNT DAYS UNTIL NEG
         AP    DBL2,4(2,R2)          ADD DAYS BACK IN
         OI    DBL2+7,X'0F'
         UNPK  INITGDAY,DBL2
         CLI   INITGDAY,X'F0'
         BNE   INITNODY
         MVI   INITGDAY,C' '            NO LEADING ZEROS
INITNODY MVC   INITGMO(4),0(R2)
RETURN   EQU   *
         L     R2,RETFLD              RETURN GREGORIAN DATE IN
         MVC   0(12,R2),GREGDATE      HIS PROGRAM
         $EPILOG
         EJECT
*
*        CONSTANTS AND WORKAREAS
*
RETFLD   DC    F'0'
DBL      DC    D'0'
DBL2     DC    D'0'
SAVERPT  DC   CL6'      '
SAVECOP  DC   CL2' '
SAVENAM  DC   CL30'                              '
DBL3     DC   D'0'
SAVEAREA DC   18F'0'
WORK     DC   CL8' '
BIT      DC   X'00'
SYR      DC   C'YY'
         DC   C'.'
SDA      DC   C'DDD'
         DC   C'  TIME : '
SHR      DC   C'HH'
         DC   C'.'
SMN      DC   C'MM'
         DC   C'.'
SSC      DC   C'SS'
         DC   C'  JOBNAME : '
GREGDATE DS    0CL12
INITGMO  DC    CL2'  '
INITGMO2 DC    CL2'  '
         DC    C' '
INITGDAY DC    C'  '
         DC    C',19'
INITGYR  DC    C'  '
         DS    F'0'
INITMONS DC    C'JAN '
         DC    X'031F'
         DC    C'FEB '
         DC    X'028F'
         DC    C'MAR '
         DC    X'031F'
         DC    C'APR '
         DC    X'030F'
         DC    C'MAY '
         DC    X'031F'
         DC    C'JUNE'
         DC    X'030F'
         DC    C'JULY'
         DC    X'031F'
         DC    C'AUG '
         DC    X'031F'
         DC    C'SEPT'
         DC    X'030F'
         DC    C'OCT '
         DC    X'031F'
         DC    C'NOV '
         DC    X'030F'
         DC    C'DEC '
         DC    X'031F'
         DS    0F'0'
INITYEAR DC    C'YY'
         DC    C'.'
INITDAY  DC    C'DDD'
INITTOD  DS    0CL8                    RUN TIME
INITHR   DC    C'HH'
         DC    C'.'
INITMN   DC    C'MM'
         DC    C'.'
INITSC   DC    C'SS'
INITHHR  EQU   INITHR+1
         END
./ ADD  NAME=MVSGPSVC
MVSGPSVC TITLE 'MVS GENERAL PURPOSE SVC   -   IGC00XXX '
***********************************************************************
*                                                                     *
*        FUNCTION.                                                    *
*              PERFORM SEVERAL FUNCTIONS AS AN SVC WHICH ARE          *
*              CONTROLLED BY ENTRY POINT INDICATOR PASSED IN          *
*              R15.                                                   *
*              R15=1  - USER SVC TEST VIA LOAD AND BRANCH             *
*              R15=2  - DATE, DAY OF WEEK, TIME                       *
*              R15=3  - SET APF AUTHORIZATION                         *
*              R15=4  - RESET APF AUTHORIZATION                       *
*              R15=5  - SMFWTM                                        *
*              R15=6  - UCB LOOKUP                                    *
*              R15=7  - JCT LOOKUP (CURRENT ASID ONLY), TSUID INFO    *
*              R15=8  - JES JOBID ADDRESS                             *
*              R15=9  - JES INPUT DEVICE ADDRESS                      *
*              R15=10 - FULL SCREEN TPUT CLEAR                        *
*                                                                     *
*        NOTE.                                                        *
*              BECAUSE WE ARE AN SVC, THERE IS NO NEED TO SAVE        *
*              THE USERS REGISTER (THE SYSTEM HAS ALREADY SAVED       *
*              THEM).  ALSO, CERTAIN REGISTERS HAVE BEEN PRIMED       *
*              FOR US AS FOLLOWS.                                     *
*              R0  = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)   *
*              R1  = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)   *
*              R2  = UNPREDICTABLE                                    *
*              R3  = CVT ADDRESS                                      *
*              R4  = TCB ADDRESS(CURRENT)                             *
*              R5  = SVRB ADDRESS (OURS)                              *
*              R6  = ENTRY POINT (OUR BASE REG)                       *
*              R7  = ASCB ADDRESS (CURRENT)                           *
*              R8  = UNPREDICTABLE                                    *
*              R9  = UNPREDICTABLE                                    *
*              R10 = UNPREDICTABLE                                    *
*              R11 = UNPREDICTABLE                                    *
*              R12 = UNPREDICTABLE                                    *
*              R13 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)   *
*              R14 = RETURN REGISTER (TO SVC RETURN HANDLER)          *
*              R15 = SAME AS WHEN SVC WAS ISSUED (AT ENTRY TO EXIT)   *
*        NOTE.                                                        *
*              THIS ROUTINE IS LINKEDITED AS AN SVC (TYPE 3) TO       *
*              BE INCLUDED VIA 'MLPA' AT IPL TIME.  BECAUSE THIS      *
*              IS AN SVC, IT MUST REMAIN RE-ENTERABLE.                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE CHECKS FOR A VALID ENTRY POINT INDICATOR        *
*        PASSED IN R15.  IF IT IS VALID, R6 IS SET TO THE             *
*        APPROPRIATE ENTRY POINT ADDRESS AND CONTROL IS PASSED        *
*        TO TO THE ROUTINE.  IF IT IS INVALID, IT MERELY RETURNS      *
*        VIA R14.                                                     *
*                                                                     *
***********************************************************************
         PRINT OFF
         COPY $HASPGEN
         PRINT ON
         EJECT
EPCNT    EQU   10                  NUMBER OF VALID ENTRY POINTS
         USING MVSGPSVC,R6         USE R6 FOR CSECT BASE REGISTER
MVSGPSVC CSECT
*
         TITLE 'JES CONTROL BLOCKS'
         PRINT NOGEN
         $CVT
         $JESCT
         $SSCT
         $ASCB
         $ASVT
         $TCB
         $RB
         $JSCB
         $PSCB
         $TIOT
         $UCB
         $SVT
         $SJB
         $BUFFER
         $JCT
*
         DROP  JCT                 USED IN $JCT DSECT
*
         LTR   R15,R15             CHECK FOR POSITIVE EP INDICATOR
         BNP   NOP                 IF NOT POSITIVE, GO TO NOP
         LA    R2,EPCNT            LOAD R2 WITH NO OF VALID EP'S
         CR    R15,R2              CHECK FOR VALID EP INDICATOR
         BH    NOP                 IF INVALID, GO TO NOP
         SLL   R15,2               MULTIPLY EP INDICATOR BY 4
         L     R6,EPTABLE-4(R15)   SET R6=A(ROUTINE ENTRY POINT)
         BR    R6                  GO TO APPROPRIATE ENTRY POINT
NOP      BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
EPTABLE  DC    A(SVCTEST)          SVCTEST ROUTINE
         DC    A(TIME)             TIME ROUTINE
         DC    A(AUTHSET)          AUTHSET ROUTINE
         DC    A(AUTHRSET)         AUTHRSET ROUTINE
         DC    A(SMFWTM)           SMFWTM ROUTINE
         DC    A(UCBLOOK)          UCBLOOK ROUTINE
         DC    A(JCTLOOK)          JCTLOOK ROUTINE
         DC    A(JESJOBID)         JESJOBID ROUTINE
         DC    A(JESINDEV)         JESINDEV ROUTINE
         DC    A(CLEAR)            CLEAR ROUTINE
         SPACE 1
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE SETS UP THE ENVIRONMENT TO TEST USER            *
*        WRITTEN SVC'S.  IN ORDER TO USE THIS FUNCTION, A DRIVER      *
*        PROGRAM MUST BE USED WHICH WILL POINT R1 AT A THREE          *
*        WORD AREA WHICH CONTAINS R1 AS IT SHOULD BE AT ENTRY TO      *
*        THE SVC, ENTRY POINT OF THE PRELOADED SVC MODULE, AND        *
*        R15 AS IT SHOULD BE AT ENTRY TO THE SVC.  THIS ROUTINE       *
*        MERELY LOADS R1 WITH WORD0, R6 WITH WORD1, R15 WITH          *
*        WORD2, AND BRANCHES ON R6.                                   *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = ADDRESS OF 3 WORD AREA, FULLWORD ALLIGNED        *
*              R15 = 1                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*              R0  = DETERMINED BY SVC UNDER TEST                     *
*              R1  = DETERMINED BY SVC UNDER TEST                     *
*              R15 = DETERMINED BY SVC UNDER TEST                     *
*                                                                     *
***********************************************************************
         SPACE 1
SVCTEST  DS    0H                  SVCTEST ENTRY
         USING SVCTEST,R6          USE R6 FOR SVCTEST BASE REGISTER
         L     R6,4(R1)            SET R6=A(PRELOADED SVC ENTRY POINT)
         L     R15,8(R1)           SET R15=R15 FOR SVC
         L     R1,0(R1)            SET R1=R1 FOR SVC
         BR    R6                  BRANCH TO PRELOADED SVC
         SPACE 1
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE SUPPLIES THE REQUESTOR WITH THE DATE, DAY       *
*        OF WEEK, AND TIME.  IF THE CURRENT TIME IS NEEDED, REG1      *
*        UPON ENTRY MUST BE A POSITIVE ADDRESS AND POINT TO A 5       *
*        WORD AREA ALLIGNED ON A DOUBLEWORD.  IF TIME IS TO BE        *
*        OBTAINED FROM A PREVIOUS STCK INSTRUCTION, REG1 UPON         *
*        ENTRY MUST BE NEGATIVE AND ITS COMPLIMENT MUST POINT TO      *
*        A 7 WORD AREA ALLIGNED ON A DOUBLEWORD, THE FIRST 2          *
*        WORDS CONTAINING THE STCK DATA.  THE STORAGE AREA            *
*        POINTED TO BY REG1 IS CHECKED FOR VALIDITY AND               *
*        ALLIGNMENT.                                                  *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*        CURRENT TIME REQUEST.                                        *
*              R0  = UNUSED                                           *
*              R1  = ADDRESS OF 5 WORD AREA, DOUBLEWORD ALLIGNED      *
*              R15 = 2                                                *
*        STCK DATA SUPPLIED.                                          *
*              R0  = UNUSED                                           *
*              R1  = COMPLIMENT OF ADDRESS OF 7 WORD AREA,            *
*                    DOUBLEWORD ALLIGNED                              *
*              R15 = 2                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*        AREA VALID AND PROPERLY ALLIGNED.                            *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 0                                                *
*              RETURN AREA.                                           *
*                   +0 = MM/DD/YY    DATE                             *
*                   +8 = X           DAY OF WEEK OFFSET (0=MONDAY)    *
*                   +9 = HH.MM.SS.TH TIME                             *
*        AREA NOT VALID OR NOT PROPERLY ALLIGNED.                     *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 8                                                *
*              RETURN AREA.                                           *
*                   UNCHANGED                                         *
*                                                                     *
***********************************************************************
         SPACE 1
TIME     DS    0H                  TIME ENTRY
         USING CVT,R3              USE R3 AS CVT DSECT BASE REG
         USING RBDSECT,R5          USE R5 AS RB DSECT BASE REG
         USING TIME,R6             USE R6 FOR TIME BASE REGISTER
         USING TWORK,R15           USE R15 FOR TWORK DSECT BASE REG
TIME1000 LR    R8,R1               SET R8=A(PASSED AREA)
         LR    R15,R1              SET R15=A(ANSWER AREA)
         LTR   R8,R8               CHECK FOR NEGATIVE
         BNM   TIME1100            IF NOT NEGATIVE, GO TO TIME1100
         LCR   R8,R8               SET ADDRESS POSITIVE
         LA    R15,8(R8)           SET R15=A(ANSWER AREA)
TIME1100 SR    R9,R9               RESET R9 FOR DOUBLE SHIFT
         SRDL  R8,3                SHIFT FOR ALLIGNMENT TEST
         LTR   R9,R9               CHECK R9 FOR ANY BITS ON
         BNZ   TIMERT08            IF ANY ON, NOT ALLIGNED, GO TO 8 RT
         SRDL  R8,29               SHIFT REST FOR USE AS ADDRESS
         L     R5,RBLINK           SET R5=A(PREVIOUS RB)
         IC    R8,RBOPSW+1         SET R9=REQUESTOR'S PROTECT KEY
         SRL   R8,3                SHIFT OUT UNUSED BITS
         BAL   R2,TIME1900         LINK TO VALIDITY CHECK ROUTINE
         LA    R9,23(R15)          SET R8=A(LAST BYTE IN AREA)
         BAL   R2,TIME1900         LINK TO VALIDITY CHECK ROUTINE
         B     TIME2000            GO TO TIME2000
TIME1900 LRA   R9,0(R9)            LOAD REAL ADDRESS INTO R9
         BNZ   TIMERT08            IF INVALID, GO TO 8 RETURN
         LTR   R8,R8               CHECK FOR REQUESTOR IN KEY0
         BZR   R2                  IF KEY0, RETURN TO INVOKING AREA
         SRL   R9,4                SHIFT TO ZERO UNWANTED REAL BITS
         SLL   R9,4                RESTORE WITH BITS 28-31=0
         SR    R10,R10             RESET R10 FOR SUBSEQUENT ISK
         ISK   R10,R9              INSERT STORAGE KEY INTO R10
         SRL   R10,3               SHIFT OUT UNUSED BITS FOR COMPARE
         CR    R8,R10              CHECK FOR KEY MATCH
         BER   R2                  IF EQUAL, RETURN TO INVOKING AREA
         B     TIMERT08            IF NO MATCH, GO TO 8 RETURN
TIME2000 LCR   R8,R1               SET R8=0-R1
         BNM   TIME2110            IF NOT NEG, R1 NEG, GO TO TIME2110
TIME2100 STCK  TW00L08             STORE CLOCK IN TW00L08
         L     R8,CVTTZ            SET R8=CVTTZ, TIME ZONE DIFFERENTIAL
         B     TIME2120            GO TO TIME2120
TIME2110 MVC   TW00L08,0(R8)       MOVE PASSED STCK DATA TO TW00L08
         SR    R8,R8               SET R8=0, TIME ZONE DIFFERENTIAL
TIME2120 A     R8,TW00L04          ADD STCK DATA WORD 0 TO R8
         L     R9,TW04L04          SET R9=STCK DATA WORD 1
         SRDL  R8,12               SET R8,R9=TIME IN MICROSECONDS
         AL    R9,CTIF5000         ADD 5000 MSECS FOR ROUNDING
         BC    12,TIME2130         IF NO CARRY, GO TO TIME2130
         AH    R8,CTIH0001         ADD 1 TO R8 FOR CARRY
TIME2130 D     R8,CTIF060M         SET R8=REM MSECS, R9=MINS
         SR    R10,R10             RESET R10 FOR SUBSEQUENT DIVIDE
         LR    R11,R8              SET R8=REM MSECS
         D     R10,CTIF010K        SET R11=HSECS
         CVD   R11,TW00L08         CONVERT HSECS TO DECIMAL
         UNPK  TW16L04,TW00L08     UNPACK INTO BYTE 16
         MVC   TW15L02,TW16L02     MOVE SECS TO ANSWER AREA
         SR    R8,R8               RESET R8 FOR SUBSEQUENT DIVIDE
         D     R8,CTIF0060         SET R8=REM MINS, R9=HRS
         CVD   R8,TW00L08          CONVERT MINS TO DECIMAL
         UNPK  TW12L02,TW00L08     UNPACK MINS INTO ANSWER AREA
         SR    R8,R8               RESET R8 FOR SUBSEQUENT DIVIDE
         D     R8,CTIF0024         SET R8=REM HRS, R9=DAYS
         CVD   R8,TW00L08          CONVERT HRS TO DECIMAL
         UNPK  TW09L02,TW00L08     UNPACK HRS INTO ANSWER AREA
TIME2200 SR    R10,R10             RESET R10 FOR SUBSEQUENT DIVIDE
         LR    R11,R9              SET R11=DAYS
         D     R10,CTIF0007        SET R10=DAY OF WEEK OFFSET
         STC   R10,TW08L01         SAVE BINARY OFFSET IN ANSWER AREA
TIME2300 SH    R9,CTIH0365         SUBTRACT 365 DAYS FOR 1900
         BNM   TIME2310            IF NOT NEG, GO TO TIME2310
         AH    R9,CTIH0365         ADD 365 DAYS FOR 1900
         SLDL  R8,32               SET R8=JDAY-1, R9=00, YEAR
         B     TIME2340            GO TO TIME2340
TIME2310 SR    R8,R8               RESET R8 FOR SUBSEQUENT DIVIDE
         D     R8,CTIF1461         SET R8=JDAY (4YR), R9=4YR COUNT-1
         SLL   R9,2                SET R9=YR-1
         LA    R9,1(R9)            SET R9=YR
         LA    R12,3               SET R12=3, BCT COUNT
TIME2320 SH    R8,CTIH0365         SUBTRACT 1 YR'S DAYS
         BM    TIME2330            IF NEG, GO TO TIME2330
         LA    R9,1(R9)            INCREMENT R9, YR
         BZ    TIME2340            IF R8=0, GO TO TIME2340
         BCT   R12,TIME2320        GO BACK TO TIME2320 AT MOST 2 TIMES
         B     TIME2340            AFTER 2ND TIME, GO TO TIME2340
TIME2330 AH    R8,CTIH0365         ADD TO MAKE NEG POS
TIME2340 LA    R8,1(R8)            MAKE JDAY RELATIVE TO 1
         CVD   R9,TW00L08          CONVERT YR TO DECIMAL
         UNPK  TW06L02,TW06L02     UNPACK YEAR
         ICM   R11,3,TW06L02       SAVE UNPACKED YR IN R11
         LA    R12,TDTBLNLP        SET R12=A(NON-LEAP YEAR TABLE)
         SLL   R9,30               SHIFT OUT BITS 0-29
         LTR   R9,R9               CHECK FOR ANY REMAINING BITS
         BNZ   TIME2350            IF ANY LEFT, GO TO TIME2350
         LA    R12,TDTBLLP         SET R12=A(LEAP YEAR TABLE)
TIME2350 SR    R10,R10             RESET R10 FOR SUBSEQUENT IC'S
TIME2360 IC    R10,0(R9,R12)       SET R10=DA/MO FROM TABLE
         LA    R9,1(R9)            INCREMENT R9, MONTH
         SR    R8,R10              SUBTRACT DA/MO FROM R8 DA
         BP    TIME2360            IF STILL POS, GO TO TIME2360
         AR    R8,R10              ADD DA/MO TO MAKE POS
         CVD   R8,TW00L08          CONVERT DA TO DECIMAL
         UNPK  TW06L02,TW06L02     UNPACK DA
         ICM   R11,12,TW06L02      SAVE UNPACKED DA IN R11
         CVD   R9,TW00L08          CONVERT MO TO DECIMAL
         UNPK  TW00L02,TW06L02     UNPACK MO INTO ANSWER AREA
         STCM  R11,12,TW03L02      STORE DA INTO ANSWER AREA
         STCM  R11,3,TW06L02       STORE YR INTO ANSWER AREA
         MVZ   TW01L19,TW00L19     MOVE ALL F ZONES TO ANSWER AREA
         MVI   TW02L01,C'/'        MOVE '/' BETWEEN DATE MM DD
         MVI   TW05L01,C'/'        MOVE '/' BETWEEN DATE DD YY
         NI    TW08L01,X'0F'       AND OFF F ZONE
         MVI   TW11L01,C'.'        MOVE '.' BETWEEN TIME HH MM
         MVI   TW14L01,C'.'        MOVE '.' BETWEEN TIME MM SS
         MVI   TW17L01,C'.'        MOVE '.' BETWEEN TIME SS TH
TIMERT00 SR    R15,R15             SET RETURN CODE=0
         BR    R14                 RETURN TO SVC HANDLER
TIMERT08 LA    R15,8               SET RETURN CODE=8
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
CTIF0007 DC    F'7'
CTIF0024 DC    F'24'
CTIF0060 DC    F'60'
CTIF1461 DC    F'1461'
CTIF5000 DC    F'5000'
CTIF010K DC    F'10000'
CTIF060M DC    F'60000000'
CTIH0001 DC    H'1'
CTIH0365 DC    H'365'
TDTBLLP  DC    AL1(31,29,31,30,31,30,31,31,30,31,30,31)
TDTBLNLP DC    AL1(31,28,31,30,31,30,31,31,30,31,30,31)
         SPACE 1
         DROP  R3                  DROP USE OF R3 DSECT BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R15                 DROP USE OF R15 DSECT BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROVIDE MODESET AUTHORIZATION.  IT IS      *
*        THEN THE USER'S RESPONSIBILITY TO ISSUE A MODESET MACRO      *
*        IN ORDER TO GAIN SUPERVISOR STATE OR KEY ZERO.  UPON         *
*        ENTRY REGISTER ONE MUST POINT TO THE CHARACTERS 'AUTH'.      *
*        FOR TIME SHARING USERS ONLY, THE ISSUER OF THE SVC           *
*        (CALLER) MUST EITHER HAVE OPER CAPABILITY OR RESIDE IN       *
*        THE LINK PACK AREA (OR MLPA).  THIS IS TO INSURE THAT        *
*        TSO USERS DO NOT ATTEMPT TO VIOLATE OUR SECURITY BY          *
*        INVOKING EITHER DIRECTLY OR UNDER TEST.                      *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = ADDRESS 'AUTH' LITERAL                           *
*              R15 = 3                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*        R1 UPON ENTRY ==> C'AUTH' AND (USER HAS OPER OR NON TSO)     *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 0                                                *
*              JSCBOPTS, BIT 7 SET                                    *
*        R1 UPON ENTRY NOT ==> C'AUTH' OR INVALID TSO USER            *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 8                                                *
*              VIOLATION MESSAGE WRITTEN TO OPERATOR                  *
*                                                                     *
***********************************************************************
         SPACE 1
AUTHSET  DS    0H                  AUTHSET ENTRY
         USING WTO,R1              USE R1 FOR WTO DSECT BASE REG
         USING CVT,R3              USE R3 FOR CVT DSECT BASE REG
         USING TCB,R4              USE R4 FOR TCB DSECT BASE REG
         USING RBDSECT,R5          USE R5 FOR RB DSECT BASE REG
         USING AUTHSET,R6          USE R6 FOR AUTHSET BASE REGISTER
         USING ASCB,R7             USE R7 FOR ASCB DSECT BASE REG
         USING PSCB,R10            USE R10 FOR PSCB DSECT BASE REG
         USING JSCB,R11            USE R11 FOR JSCB DSECT BASE REG
         USING TIOT,R12            USE R12 FOR TIOT DSECT BASE REG
         LR    R8,R0               SAVE R0 IN R8
         LR    R9,R1               SAVE R1 IN R9
         CLC   AUTH,0(R1)          CHECK FOR R1 POINTING AT 'AUTH'
         BNE   AUTSRT08            IF NOT, GO TO 8 RETURN
         L     R11,TCBJSCB         SET R11=A(JSCB)
         ICM   R15,15,ASCBTSB      SET R15=A(TSB)
         BZ    AUTSRT00            IF NOT TSO, GO TO 0 RETURN
         L     R10,JSCBPSCB        SET R10=A(PSCB)
         TM    PSCBATR1,X'80'      CHECK FOR OPER CAPABILITY
         BO    AUTSRT00            IF OPER, GO TO 0 RETURN
         L     R5,RBLINK           SET R5=A(PREVIOUS RB)
         CLC   RBOPSW+5(3),CVTSHRVM+1  CHECK FOR REQ FROM CSA OR ABOVE
         BNL   AUTSRT00            IF CSA OR ABOVE, GO TO 0 RETURN
         B     AUTSRT08            INVALID REQUESTOR, GO TO 8 RETURN
AUTSRT00 OI    JSCBOPTS,X'01'      SET MODESET AVAILABLE BIT
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
AUTSRT08 LA    R0,256              SET R0=256, GETMAIN LENGTH
         GETMAIN R,LV=(0)          GET STORAGE FOR WTO
         LR    R2,R1               SAVE AREA ADDRESS IN R2
         MVC   WTO(CAUWTOLN),CAUWTO    MOVE WTO DATA TO GOTTEN AREA
         L     R12,TCBTIO          SET R12=A(TIOT)
         MVC   WTOMSG+30(8),TIOCNJOB   MOVE JOBNAME TO WTOMSG
         WTO   MF=(E,(1))          ISSUE WTO
         LA    R0,256              SET R0=256, FREEMAIN LENGTH
         LR    R1,R2               SET R1=A(GOTTEN AREA)
         FREEMAIN R,LV=(0),A=(1)   FREE GOTTEN STORAGE
         LR    R0,R8               RESTORE ORIGINAL R0 FROM R8
         LR    R1,R9               RESTORE ORIGINAL R1 FROM R9
         LA    R15,8               SET R15=8, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
CAUWTO   DC    0F'0',AL2(CAUWTOLN-4),XL2'8000' TEXT LENGTH, MCS CODES
         DC    CL50'SECURITY VIOLATION ATTEMPT BY XXXXXXXX - NOTIFY TE'
         DC    CL15'CHNICAL SUPPORT'
         DC    XL4'4000C080'       DESCRIPTOR CODES, ROUT CODES
CAUWTOLN EQU   *-CAUWTO
AUTH     DC    CL4'AUTH'
         SPACE 1
         DROP  R1                  DROP USE OF R1 BASE REGISTER
         DROP  R3                  DROP USE OF R3 BASE REGISTER
         DROP  R4                  DROP USE OF R4 BASE REGISTER
         DROP  R5                  DROP USE OF R5 BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R7                  DROP USE OF R7 BASE REGISTER
         DROP  R10                 DROP USE OF R10 BASE REGISTER
         DROP  R11                 DROP USE OF R11 BASE REGISTER
         DROP  R12                 DROP USE OF R12 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL DISALLOW MODESET AUTHORIZATION.            *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = UNUSED                                           *
*              R15 = 4                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 0                                                *
*              JSCBOPTS, BIT 7 RESET                                  *
*                                                                     *
***********************************************************************
         SPACE 1
AUTHRSET DS    0H                  AUTHRSET ENTRY
         USING TCB,R4              USE R4 FOR TCB DSECT BASE REG
         USING AUTHRSET,R6         USE R6 FOR AUTHRSET BASE REGISTER
         USING JSCB,R11            USE R11 FOR ASCB DSECT BASE REG
         L     R11,TCBJSCB         SET R11=A(JSCB)
         NI    JSCBOPTS,X'FE'      RESET MODESET AVAILABLE BIT
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
         DROP  R4                  DROP USE OF R4 BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R11                 DROP USE OF R11 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE ISSUES THE SMFWTM (SMF WRITE MACRO) FOR A       *
*        SMF RECORD POINTED TO BY R1.  IT CAN BE USED BY ANY          *
*        MODULE WITHOUT HAVING TO BE AUTHORIZED TO OBTAIN             *
*        SUPERVISOR MODE.                                             *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = ADDRESS OF SMF RECORD                            *
*              R15 = 5                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 0  WRITTEN WITHOUT ERROR                         *
*              R15 = 4  NOT WRITTEN, WOULD NOT FIT IN EMPTY D.S.      *
*              R15 = 8  NOT WRITTEN, RDW LENGTH LESS THAN 18          *
*              R15 = 16 NOT WRITTEN, MAN=NONE OR BOTH D.S. FULL       *
*              R15 = 20 NOT WRITTEN, IEFU83 SUPPRESSED WRITE          *
*                                                                     *
***********************************************************************
         SPACE 1
SMFWTM   DS    0H                  SMFWTM ENTRY
         USING SMFWTM,R6           USE R6 FOR SMFWTM BASE REGISTER
         LR    R8,R0               SAVE R0 IN R8
         LR    R9,R1               SAVE R1 IN R9
         SMFWTM (1)                WRITE SMF RECORD POINTED TO BY R1
         LR    R0,R8               RESTORE R0 FROM R8
         LR    R1,R9               RESTORE R1 FROM R9
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE SUPPLIES THE REQUESTOR WITH THE UCB             *
*        ADDRESS OF THE UCB WHOSE EBCDIC VALUE IS PASSED IN THE       *
*        LOW ORDER THREE BYTES OF R0.                                 *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = EBCDIC UCB NAME                                  *
*              R1  = UNUSED                                           *
*              R15 = 6                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*        UCB FOUND AND IS PRIMARY PATH.                               *
*              R0  = EBCDIC UCB NAME IN LOW ORDER 3 BYTES             *
*              R1  = ADDRESS OF UCB                                   *
*              R15 = 0                                                *
*        UCB FOUND AND IS ALTERNATE PATH.                             *
*              R0  = EBCDIC PRIMARY UCB NAME IN LOW ORDER 3 BYTES     *
*              R1  = ADDRESS OF UCB                                   *
*              R15 = 4                                                *
*        UCB NOT FOUND.                                               *
*              R0  = 0                                                *
*              R1  = 0                                                *
*              R15 = 8                                                *
*        UCB NOT FOUND AND IS GREATER THAN HIGHEST UCB.               *
*              R0  = 0                                                *
*              R1  = 0                                                *
*              R15 = 12                                               *
*                                                                     *
***********************************************************************
         SPACE 1
UCBLOOK  DS    0H                  UCBLOOK ENTRY
         USING CVT,R3              USE R3 AS CVT DSECT BASE REG
         USING UCBLOOK,R6          USE R6 FOR SMFWTM BASE REGISTER
         USING UCBDSECT,R11        USE R11 FOR UCB DSECT BASE REG
UCBL1000 LR    R9,R0               SET R9=EBCDIC UCB NAME
         LA    R0,0(R9)            CLEAR HIGH ORDER R0 BYTE
         SLL   R9,8                SHIFT UCBNAME INTO HIGH ORDER
         SR    R10,R10             RESET R10 BINARY UCB NAME BUILD
         LA    R11,3               SET R11=3, BYTE BCT COUNT
UCBL1100 SR    R8,8                RESET R8 FOR SHIFT DOUBLE
         SLDL  R8,8                SHIFT NAME BYTE INTO R9
         CH    R8,CHARA            CHECK FOR LESS THAN C'A'
         BL    UCBLRT08            IF LESS, GO TO 8 RETURN ROUTINE
         CH    R8,CHARF            CHECK FOR GREATER THAN C'F'
         BNH   UCBL1200            IF NOT GREATER, GO TO UCBL1200
         CH    R8,CHAR0            CHECK FOR LESS THAN C'0'
         BL    UCBLRT08            IF LESS, GO TO 8 RETURN ROUTINE
         CH    R8,CHAR9            CHECK FOR GREATER THAN C'9'
         BNH   UCBL1300            IF NOT GREATER, GO TO UCBL1300
         B     UCBLRT08            IF GREATER, GO TO 8 RETURN ROUTINE
UCBL1200 L     R2,TRTAB2AD         SET R2=A(TRTAB2)
         B     UCBL1400            GO TO UCBL1400
UCBL1300 L     R2,TRTAB1AD         SET R2=A(TRTAB1)
UCBL1400 IC    R8,0(R2,R8)         SET R8=BINARY EQ OF EBCDIC
         SLL   R10,4               SHIFT TO MAKE ROOM FOR NEXT 4 BITS
         OR    R10,R8              MOVE BITS INTO R10
         BCT   R11,UCBL1100        GET ALL 3 BYTES
UCBL2000 LM    R8,R9,CVTILK1       SET R8,R9=A(CVTILK1,CVTILK2)
         LR    R12,R8              SET R12=A(CVTILK1)
UCBL2100 CLI   0(R12),X'FF'        CHECK FOR X'FF' AT END OF CVTILK1
         BE    UCBL2200            WHEN FOUND, GO TO UCBL2200
         LA    R12,1(R12)          INCREMENT R12, CVTILK1 POINTER
         B     UCBL2100            CONTINUE AT UCBL2100
UCBL2200 SR    R12,R8              SUBTRACT TO GET HIGHEST (ADDR+)1/256
         SLL   R12,8               SET R12=HIGHEST ADDRESS+1
         CR    R10,R12             CHECK FOR PASSED ADDR LESS
         BNL   UCBLRT12            IF NOT LESS, GO TO 12 RETURN
         LR    R11,R10             SET R11=DEV ADDRESS
         SRL   R11,8               SHIFT CH INTO LOW ORDER
         IC    R11,0(R8,R11)       SET R11=K VALUE FROM CVTILK1
         LTR   R11,R11             CHECK FOR 0 VALUE, UNUSED CHANNEL
         BZ    UCBLRT08            IF 0, GO TO UCBLRT08
         SLL   R11,1               SET R11=K*2
         LA    R12,X'00F0'         SET R12=NR MASK OF X'00F0', CU
         NR    R12,R10             AND CU INTO R12
         SRL   R12,3               SET R12=CU*2
         AR    R11,R12             SET R11=2(K+CU)
         AR    R11,R8              SET R11=ADDRESS IN CVTILK1, PART2
         CR    R11,R9              CHECK FOR STILL IN CVTILK1, PART2
         BNL   UCBLRT12            IF NOT, INVALID, GO TO 12 RETURN
         LH    R11,0(R11)          SET R11=L VALUE FROM CVTILK1, PART2
         LA    R12,X'000F'         SET R12=NR MASK OF X'000F', DEV ADR
         NR    R12,R10             AND DEV ADR INTO R12
         AR    R11,R12             SET R11=L+DEVADR
         SLL   R11,1               SET R11=2(L+DEV ADR)
         AR    R11,R9              SET R11=A(AL2(UCB))
         LR    R12,R9              SET R12=A(CVTILK2)
UCBL2300 CLI   0(R12),X'FF'        CHECK FOR X'FF' AT END OF CVTILK2
         BE    UCBL2400            WHEN FOUND, GO TO UCBL2400
         LA    R12,2(R12)          INCREMENT R12, CVTILK2 POINTER
         B     UCBL2300            CONTINUE CHECKING AT UCBL2300
UCBL2400 CR    R11,R12             CHECK FOR STILL IN CVTILK2
         BNL   UCBLRT12            IF NOT, INVALID, GO TO 12 RETURN
         ICM   R11,3,0(R11)        SET R11=A(UCB)
         BZ    UCBLRT08            IF 0, INVALID, GO TO 8 RETURN
         CLM   R0,7,UCBNAME        CHECK FOR UCBNAME MATCH(PRIMARY)
         BE    UCBLRT00            IF PRIMARY, GO 0 RETURN ROUTINE
         TM    UCBFL5,UCBALTPH     CHECK FOR ALT PATH UCB
         BO    UCBL2500            IF ALTERNATE PATH, GO TO UCBL2500
         CLC   UCBTYP+2(2),UTYP2305    CHECK FOR DRUM SPECIAL CASE
         BNE   UCBLRT08            IF NOT DRUM, GO TO 8 RETURN
UCBL2500 CLM   R10,1,UCBUA         CHECK FOR UNIT ADDRESS MATCH
         BNE   UCBLRT08            IF NOT, INVALID, GO TO 8 RETURN
         B     UCBLRT04            ALTERNATE, GO 4 RETURN ROUTINE
UCBLRT00 LA    R1,UCBDSECT         SET R1=A(UCB)
         LA    R15,0               SET R15=0, UCB FOUND
         BR    R14                 RETURN TO SVC HANDLER
UCBLRT04 ICM   R0,7,UCBNAME        SET R0=PRIMARY PATH EBCDIC UCBNAME
         LA    R1,UCBDSECT         SET R1=A(UCB)
         LA    R15,4               SET R15=4, UCB FOUND, BUT ALTERNATE
         BR    R14                 RETURN TO SVC HANDLER
UCBLRT08 SR    R0,R0               RESET R0, NOT VALID UCB NAME
         SR    R1,R1               RESET R1, NOT VALID UCB NAME
         LA    R15,8               SET R15=8, UCB NOT FOUND
         BR    R14                 RETURN TO SVC HANDLER
UCBLRT12 SR    R0,R0               RESET R0, NOT VALID UCB NAME
         SR    R1,R1               RESET R1, NOT VALID UCB NAME
         LA    R15,12              SET R15=12, UCB NOT FOUND, TOO HIGH
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
TRTAB1AD DC    A(TRTAB1-C'0')      ADDRESS OF TRTAB1
TRTAB2AD DC    A(TRTAB2-C'A')      ADDRESS OF TRTAB2
CHARA    DC    0H'0',AL2(C'A')
CHARF    DC    0H'0',AL2(C'F')
CHAR0    DC    0H'0',AL2(C'0')
CHAR9    DC    0H'0',AL2(C'9')
TRTAB1   DC    XL10'00010203040506070809'
TRTAB2   DC    XL06'0A0B0C0D0E0F'
UTYP2305 DC    XL2'2006'
         SPACE 1
         DROP  R3                  DROP USE OF R3 DSECT BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R11                 DROP USE OF R11 DSECT BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROVIDE THE JCT ADDRESS FOR A JOB,         *
*        PROVIDE THE ADDRESS OF THE 7 BYTE TSO USER ID IF THE         *
*        JOB CARD CONTAINS A NOTIFY= PARAMETER, AND CHECKS FOR        *
*        THAT USER BEING LOGGED ON.                                   *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = UNUSED                                           *
*              R15 = 7                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*        NOTIFY SPECIFIED, NOTIFY TSO USER LOGGED ON                  *
*              R0  = A(TSO TSU ID)                                    *
*              R1  = A(JCT)                                           *
*              R15 = 0                                                *
*        NOTIFY SPECIFIED, NOTIFY TSO USER NOT LOGGED ON              *
*              R0  = A(TSO TSU ID)                                    *
*              R1  = A(JCT)                                           *
*              R15 = 4                                                *
*        NOTIFY NOT SPECIFIED                                         *
*              R0  = 0                                                *
*              R1  = A(JCT)                                           *
*              R15 = 8                                                *
*                                                                     *
***********************************************************************
         SPACE 1
JCTLOOK  DS    0H                  JCTLOOK ENTRY
         USING SU,R1               USE R1 FOR SU DSECT BASE REG
         USING JESCT,R2            USE R2 FOR JESCT DSECT BASE REG
         USING CVT,R3              USE R3 FOR CVT DSECT BASE REG
         USING SSCT,R5             USE R5 FOR SSCT DSECT BASE REG
         USING JCTLOOK,R6          USE R6 FOR JCTLOOK BASE REGISTER
         USING ASCB,R7             USE R7 FOR ASCB DSECT BASE REG
         USING SSVT,R8             USE R8 FOR SSVT DSECT BASE REG
         USING SJBDSECT,R10        USE R10 FOR SJB DSECT BASE REG
         USING JCTDSECT,R11        USE R11 FOR JCT DSECT BASE REG
         USING ASVT,R12            USE R12 FOR ASVT DSECT BASE REG
         L     R1,CVTIHASU         SET R1=CVTIHASU, A(SU BIT STRING)
         SR    R13,R13             SET R13=0, NJE FLAG
         TM    SU16X23,SU23        CHECK FOR SU23 PRESENT (JES2 NJE)
         BZ    *+8                 IF NO SU23, SKIP NEXT INSTRUCTION
         LA    R13,1               SET R13=1, SU23 IN SYSTEM
         L     R2,CVTJESCT         SET R2=A(JESCT) FROM CVT
         L     R5,JESSSCT          SET R5=A(SSCT) FROM JESCT
         L     R8,SSCTSSVT         SET R8=A(SSVT) FROM SSCT
         L     R9,$SVHAVT          SET R9=A(JES2 HAVT) FROM SSVT
         LH    R15,ASCBASID        SET R15=ASID
         SLL   R15,2               SET R15=ASID*4, OFFSET TO HAVT PTRC
         AR    R9,R15              SET R9=A(OUR HAVT ENTRY)
         L     R10,0(R9)           SET R10=A(SJB) FROM JES2 HAVT
         ICM   R15,15,SJBSJB       SET R15=A(INIT'S DEPENDENT SJB)
         BZ    *+6                 IF ZERO, NOT BATCH, SKIP NEXT INST
         LR    R10,R15             SET R10=A(INIT'S DEPENDENT SJB)
         L     R11,SJBJCT          SET R11=A(JOB'S JCT)
         CLI   JCTTSUID,X'00'      CHECK FOR NO NOTIFY
         BE    JCTLRT08            IF NULL, NONE, GO TO 8 RETURN
JCTL1000 L     R12,CVTASVT         SET R12=A(ASVT) FROM CVT
         L     R0,ASVTMAXU         SET R0=MAX # OF ASCB'S FROM ASVT
JCTL1100 ICM   R7,15,ASVTENTY      SET R7=A(ASCB) FROM ASVT
         BM    JCTL1200            IF NOT ASSIGNED, GO TO JCTL1200
         ICM   R1,15,ASCBTSB       SET R1=A(TSB) FROM ASCB
         BZ    JCTL1200            IF 0, NOT TSO, GO TO JCTL1200
         L     R15,ASCBJBNS        SET R15=A(JOBNAME) FROM ASCB
         CLC   JCTTSUID,0(R15)     CHECK FOR TSO USER LOGGED ON
         BE    JCTLRT00            IF LOGGED ON, GO TO JCTLRT00
JCTL1200 LA    R12,4(R12)          INCREMENT R12, ASVT DSECT BASE
         BCT   R0,JCTL1100         CONTINUE CHECKING AT JCTL1100
         B     JCTLRT04            USER NOT LOGGED ON, GO TO JCTLRT04
JCTLRT00 EQU   *
         LA    R0,JCTTSUID         SET R0=A(NOTIFY TSUID)
         LA    R1,JCT              SET R1=A(JCT)
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
JCTLRT04 EQU   *
         LA    R0,JCTTSUID         SET R0=A(NOTIFY TSUID)
         LA    R1,JCT              SET R1=A(JCT)
         LA    R15,4               SET R15=4, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
JCTLRT08 SR    R0,R0               SET R0=0, NO NOTIFY
         LA    R1,JCT              SET R1=A(JCT)
         LA    R15,8               SET R15=8, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
         DROP  R1                  DROP USE OF R1 BASE REGISTER
         DROP  R2                  DROP USE OF R2 BASE REGISTER
         DROP  R3                  DROP USE OF R3 BASE REGISTER
         DROP  R5                  DROP USE OF R5 BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R7                  DROP USE OF R7 BASE REGISTER
         DROP  R8                  DROP USE OF R8 BASE REGISTER
         DROP  R10                 DROP USE OF R10 BASE REGISTER
         DROP  R11                 DROP USE OF R11 BASE REGISTER
         DROP  R12                 DROP USE OF R12 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROVIDE THE ADDRESS OF THE EIGHT           *
*        CHARACTER SYSTEM JOBNAME IN REGISTER 0 (TIOT) AND THE        *
*        ADDRESS OF THE EIGHT CHARACTER JES JOBID IN REGISTER 1.      *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = UNUSED                                           *
*              R15 = 8                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*              R0  = ADDRESS OF SYSTEM JOBNAME (TIOT)                 *
*              R1  = ADDRESS OF JES JOBID                             *
*              R15 = 0                                                *
*                                                                     *
***********************************************************************
         SPACE 1
JESJOBID DS    0H                  JESJOBID ENTRY
         USING SU,R1               USE R1 FOR SU DSECT BASE REG
         USING JESCT,R2            USE R2 FOR JESCT DSECT BASE REG
         USING CVT,R3              USE R3 FOR CVT DSECT BASE REG
         USING TCB,R4              USE R4 FOR TCB DSECT BASE REG
         USING SSCT,R5             USE R5 FOR SSCT DSECT BASE REG
         USING JESJOBID,R6         USE R6 FOR JESJOBID BASE REGISTER
         USING ASCB,R7             USE R7 FOR ASCB DSECT BASE REG
         USING SSVT,R8             USE R8 FOR SSVT DSECT BASE REG
         USING SJBDSECT,R10        USE R10 FOR SJB DSECT BASE REG
         USING JCTDSECT,R11        USE R11 FOR JCT DSECT BASE REG
         L     R1,CVTIHASU         SET R1=CVTIHASU, A(SU BIT STRING)
         SR    R13,R13             SET R13=0, NJE FLAG
         TM    SU16X23,SU23        CHECK FOR SU23 PRESENT (JES2 NJE)
         BZ    *+8                 IF NO SU23, SKIP NEXT INSTRUCTION
         LA    R13,1               SET R13=1, SU23 IN SYSTEM
         L     R2,CVTJESCT         SET R2=A(JESCT) FROM CVT
         L     R5,JESSSCT          SET R5=A(SSCT) FROM JESCT
         L     R8,SSCTSSVT         SET R8=A(SSVT) FROM SSCT
         L     R9,$SVHAVT          SET R9=A(JES2 HAVT) FROM SSVT
         LH    R15,ASCBASID        SET R15=ASID
         SLL   R15,2               SET R15=ASID*4, OFFSET TO HAVT PTRC
         AR    R9,R15              SET R9=A(OUR HAVT ENTRY)
         L     R10,0(R9)           SET R10=A(SJB) FROM JES2 HAVT
         ICM   R15,15,SJBSJB       SET R15=A(INIT'S DEPENDENT SJB)
         BZ    *+6                 IF ZERO, NOT BATCH, SKIP NEXT INST
         LR    R10,R15             SET R10=A(INIT'S DEPENDENT SJB)
         L     R11,SJBJCT          SET R11=A(JOB'S JCT)
JESJRT00 L     R0,TCBTIO           SET R0=A(TIOT)
         LA    R1,JCTJOBID         SET R1=A(JES JOB NUMBER)
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
JESJICCB DC    XL6'000200040006'
         SPACE 1
         DROP  R1                  DROP USE OF R1 BASE REGISTER
         DROP  R2                  DROP USE OF R2 BASE REGISTER
         DROP  R3                  DROP USE OF R3 BASE REGISTER
         DROP  R4                  DROP USE OF R4 BASE REGISTER
         DROP  R5                  DROP USE OF R5 BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R7                  DROP USE OF R7 BASE REGISTER
         DROP  R8                  DROP USE OF R8 BASE REGISTER
         DROP  R10                 DROP USE OF R10 BASE REGISTER
         DROP  R11                 DROP USE OF R11 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL PROVIDE THE ADDRESS OF THE JES INPUT       *
*        DEVICE IN REGISTER 1.                                        *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = UNUSED                                           *
*              R15 = 9                                                *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*        REMOTE INPUT DEVICE.                                         *
*              R0  = UNCHANGED                                        *
*              R1  = ADDRESS OF JES INPUT DEVICE                      *
*              R15 = 0                                                *
*        NOT REMOTE INPUT DEVICE.                                     *
*              R0  = UNCHANGED                                        *
*              R1  = ADDRESS OF JES INPUT DEVICE                      *
*              R15 = 4                                                *
*                                                                     *
***********************************************************************
         SPACE 1
JESINDEV DS    0H                  JESINDEV ENTRY
         USING SU,R1               USE R1 FOR SU DSECT BASE REG
         USING JESCT,R2            USE R2 FOR JESCT DSECT BASE REG
         USING CVT,R3              USE R3 FOR CVT DSECT BASE REG
         USING SSCT,R5             USE R5 FOR SSCT DSECT BASE REG
         USING JESINDEV,R6         USE R6 FOR JESINDEV BASE REGISTER
         USING ASCB,R7             USE R7 FOR ASCB DSECT BASE REG
         USING SSVT,R8             USE R8 FOR SSVT DSECT BASE REG
         USING SJBDSECT,R10        USE R10 FOR SJB DSECT BASE REG
         USING JCTDSECT,R11        USE R11 FOR JCT DSECT BASE REG
         L     R1,CVTIHASU         SET R1=CVTIHASU, A(SU BIT STRING)
         SR    R13,R13             SET R13=0, NJE FLAG
         TM    SU16X23,SU23        CHECK FOR SU23 PRESENT (JES2 NJE)
         BZ    *+8                 IF NO SU23, SKIP NEXT INSTRUCTION
         LA    R13,1               SET R13=1, SU23 IN SYSTEM
         L     R2,CVTJESCT         SET R2=A(JESCT) FROM CVT
         L     R5,JESSSCT          SET R5=A(SSCT) FROM JESCT
         L     R8,SSCTSSVT         SET R8=A(SSVT) FROM SSCT
         L     R9,$SVHAVT          SET R9=A(JES2 HAVT) FROM SSVT
         LH    R15,ASCBASID        SET R15=ASID
         SLL   R15,2               SET R15=ASID*4, OFFSET TO HAVT PTR
         AR    R9,R15              SET R9=A(OUR HAVT ENTRY)
         L     R10,0(R9)           SET R10=A(SJB) FROM JES2 HAVT
         ICM   R15,15,SJBSJB       SET R15=A(INIT'S DEPENDENT SJB)
         BZ    *+6                 IF ZERO, NOT BATCH, SKIP NEXT INST
         LR    R10,R15             SET R10=A(INIT'S DEPENDENT SJB)
         L     R11,SJBJCT          SET R11=A(JOB'S JCT)
         CLI   JCTINDEV,C'R'       CHECK FOR REMOTE INDEV
         BNE   JESIRT04            IF NOT, GO TO JESIRT04
         CLI   JCTINDEV+1,C'1'     CHECK FOR REMOTE INDEV
         BL    JESIRT04            IF NOT, GO TO JESIRT04
         CLI   JCTINDEV+2,C'.'     CHECK FOR REMOTE INDEV
         BE    JESIRT00            IF REMOTE, GO TO JESIRT00
         CLI   JCTINDEV+2,C'0'     CHECK FOR REMOTE INDEV
         BL    JESIRT04            IF NOT, GO TO JESIRT04
         CLI   JCTINDEV+3,C'.'     CHECK FOR REMOTE INDEV
         BE    JESIRT00            IF REMOTE, GO TO JESIRT00
         CLI   JCTINDEV+3,C'0'     CHECK FOR REMOTE INDEV
         BL    JESIRT04            IF NOT, GO TO JESIRT04
JESIRT00 LA    R1,JCTINDEV         SET R1=A(JES INPUT DEVICE)
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
JESIRT04 LA    R1,JCTINDEV         SET R1=A(JES INPUT DEVICE)
         LA    R15,4               SET R15=4, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
JESIICCB DC    XL6'000200040006'
         SPACE 1
         DROP  R1                  DROP USE OF R1 BASE REGISTER
         DROP  R3                  DROP USE OF R3 BASE REGISTER
         DROP  R2                  DROP USE OF R2 BASE REGISTER
         DROP  R5                  DROP USE OF R5 BASE REGISTER
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         DROP  R7                  DROP USE OF R7 BASE REGISTER
         DROP  R8                  DROP USE OF R8 BASE REGISTER
         DROP  R10                 DROP USE OF R10 BASE REGISTER
         DROP  R11                 DROP USE OF R11 BASE REGISTER
         EJECT
***********************************************************************
*                                                                     *
*        THIS ROUTINE WILL ISSUE A FULL SCREEN TPUT TO BLANK OUT      *
*        THE ENTIRE SCREEN.                                           *
*                                                                     *
*        REGISTERS UPON ENTRY.                                        *
*              R0  = UNUSED                                           *
*              R1  = UNUSED                                           *
*              R15 = 10                                               *
*                                                                     *
*        REGISTERS UPON RETURN.                                       *
*              R0  = UNCHANGED                                        *
*              R1  = UNCHANGED                                        *
*              R15 = 0                                                *
*                                                                     *
***********************************************************************
         SPACE 1
CLEAR    DS    0H                  JESINDEV ENTRY
         USING CLEAR,R6            USE R6 FOR CLEAR BASE REGISTER
         LR    R8,R0               SAVE R0 IN R8
         LR    R9,R1               SAVE R1 IN R9
         TPUT  CLEATPR,12,FULLSCR  CLEAR SCREEN
         LR    R0,R8               RESTORE ORIGINAL R0 FROM R8
         LR    R1,R9               RESTORE ORIGINAL R1 FROM R9
         SR    R15,R15             SET R15=0, RETURN CODE
         BR    R14                 RETURN TO SVC HANDLER
         SPACE 1
CLEATPR  DC    XL12'F1115D7E114040133C404000'
         SPACE 1
         DROP  R6                  DROP USE OF R6 BASE REGISTER
         EJECT
SU23     EQU   1
         SPACE 1
SU       DSECT
         DS    CL2
SU16X23  DS    CL1
         SPACE 1
TWORK    DSECT
TW00L19  DS    0CL19
TW00L08  DS    0CL8
TW00L04  DS    0CL4
TW00L02  DS    0CL2,CL1
TW01L19  DS    0CL19,CL1
TW02L01  DS    CL1
TW03L02  DS    0CL2,CL1
TW04L04  DS    0CL4,CL1
TW05L01  DS    CL1
TW06L02  DS    CL2
TW08L01  DS    CL1
TW09L02  DS    CL2
TW11L01  DS    CL1
TW12L02  DS    CL2
TW14L01  DS    CL1
TW15L02  DS    0CL2,CL1
TW16L04  DS    0CL4
TW16L02  DS    0CL2,CL1
TW17L01  DS    CL1,CL2
         SPACE 1
WTO      DSECT
WTOLNMCS DS    CL4
WTOMSG   DS    0CL252
         SPACE 1
         END
./ ADD  NAME=X
//TMSDS01A JOB (00000),RACF,
//            CLASS=A,NOTIFY=TMSDS01,MSGCLASS=X
//*
//*        INSTREAM PROC TO ASSEMBLE AND LINK FOLLOWS:
//*
//ASMRACF  PROC
//ASM      EXEC PGM=IFOX00,PARM='OBJECT,NODECK,NOLIST,TERM'
//SYSLIB   DD   DISP=SHR,DSN=SYS1.MACLIB
//         DD   DISP=SHR,DSN=SYS1.AMODGEN
//         DD   DISP=SHR,DSN=SYS2.RACF.MACLIB <--- OPTIONAL MATERIAL
//         DD   DISP=SHR,DSN=ISP.RACF.ISPALIB <--- THIS LIBRARY
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSUT2   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSUT3   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSTERM  DD   SYSOUT=*
//SYSGO    DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//SYSIN    DD   DISP=SHR,DSN=ISP.RACF.ISPALIB(&MEMBER)
//*
//LKED     EXEC PGM=IEWL,COND=(0,NE),
//             PARM='RENT,REFR,REUS,MAP'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSLIB   DD   DISP=SHR,DSN=SYS1.LPALIB
//         DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=SYSL.LINKLIB(&MEMBER)
//SYSLIN   DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//         PEND
//CMNER24  EXEC ASMRACF,MEMBER=CMNER42
./ ADD  NAME=Z
//TMSDS01A JOB (0000),URSULA,
//          CLASS=A,NOTIFY=TMSDS01,MSGCLASS=X
//*
//*        INSTREAM PROC TO ASSEMBLE AND LINK FOLLOWS:
//*
//LINKRACF  PROC MEMBER=,LEPARM='MAP'
//LKED     EXEC PGM=IEWL,COND=(0,NE),
//             PARM='&LEPARM'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,3))
//SYSLIB   DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD
//         DD   DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//SYSLMOD  DD   DISP=SHR,DSN=ISP.RACF.ISPLOAD(&MEMBER)
//SYSLIN   DD   DSN=ISP.RACF.OBJ(&MEMBER),DISP=SHR
//         PEND
//ER15  EXEC LINKRACF,MEMBER=CMNER15,LEPARM='RENT,REFR,REUS,MAP'
//ER15  EXEC LINKRACF,MEMBER=CMNER16,LEPARM='RENT,REFR,REUS,MAP'
//ER15  EXEC LINKRACF,MEMBER=CMNER17,LEPARM='RENT,REFR,REUS,MAP'
//ER15  EXEC LINKRACF,MEMBER=CMNER18,LEPARM='RENT,REFR,REUS,MAP'
