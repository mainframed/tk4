./ ADD  NAME=@INFO
************************************************************************
*                                                                      *
*                ALLEN BRADLEY SPF EXTENSIONS                          *
*                  INSTALLATION INFORMATION                            *
*                                                                      *
************************************************************************

   THIS FILE CONTAINS MEMBERS IN IEBUPDTE FORMAT.


   EACH MEMBER IS DESCRIBED BELOW:


   $INFO   -- THIS MEMBER

   DESCR   -- IS A MEMBER WHICH DESCRIBES THE HIERARCHY UPON WHICH
              THIS SYSTEM IS BUILT.  IF UNFAMILIAR WITH THIS HIERARCHY,
              IT IS IMPERATIVE THAT YOU FAMILIARIZE YOURSELF WITH IT.

   ALLOCATE - IS A JOB WHICH AFTER BEING TAILORED TO YOUR STANDARDS,
              WILL EFFECT ALLOCATION OF THE REQUIRED DATASETS TO
              CONTAIN THE CODE FOR THIS PACKAGE.  IT MUST ONLY BE
              EXECUTED THE FIRST TIME YOU INSTALL THE EXTENSIONS.

   INSTALL -- IS A JOB WHICH AFTER BEING TAILORED TO YOUR STANDARDS,
              WILL EFFECT INSTALLATION OF THIS PACKAGE BY LOADING
              THE CODE INTO 'EXISTING' DATASETS.

   PROC    -- IS A PROCEDURE TO BE INSTALLED IN THE INSTALLATION'S
              TSO PROCLIB.  THE DATASET NAMES IT REFERENCES (PREFIXED
              WITH 'ISP') SHOULD EXIST PRIOR TO USE BY LOGON.  NOTE
              THAT THE 'ISP' QUALIFIER SHOULD BE ADDED TO YOUR MASTER
              CATALOG SINCE IT WILL NOT CHANGE WITH FUTURE VERSIONS
              OF SPF.


     TO INSTALL THIS PACKAGE:
     CHANGE JOBCARDS AND DATASET NAMES (GLOBALLY) WITHING THIS MEMBER.
     CREATE A PDS DATASET NAMED 'SYS2.MSTR.ISPINFO' INTO WHICH THIS
     FILE SHOULD BE LOADED (IEBUPDTE) AS FOLLOWS:

//TS00000A JOB (934000TSG),'MSTR',
//             CLASS=I,NOTIFY=TS00000,MSGCLASS=X,MSGLEVEL=(0,0)
//*            USER=TS00000,PASSWORD=PASSWORD,
//*
//LOAD     EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DSN=SYS2.MSTR.ISPINFO,DISP=SHR
//SYSIN    DD   DSN=TS00000.ISPAIDS.DATA(MSTR$DOC),DISP=SHR

            ----  THEN  ----

 EXECUTE THE 'ALLOCATE' AND 'INSTALL' JOBS AND UPDATE THE LOGON PROC(S)

./ ADD  NAME=ALLOCATE
//TS00000M JOB  (934000TSG),'MSTR',
//             NOTIFY=TS00000,CLASS=I,MSGCLASS=X
//*            USER=TS00000,PASSWORD=PASSWORD,
//*
//*        THIS JOB CONTAINS A JOB TO ALLOCATE THE REQUIRED DATASETS
//*        IN PREPARATION FOR INSTALLING THE EXTENSIONS TO THE NEW SPF
//*        PRODUCT.  PRIOR TO EXECUTION, THE INSTALLATION MUST HAVE
//*        INSTALLED THE BASE SPF PRODUCT USING THE DISTRIBUTED NAMES
//*        AND THUS THE DEFAULTED HIGH LEVEL QUALIFIER 'ISP'.
//*
//*        ONCE THIS JOB HAS BEEN RUN, THE 'INSTALL' JOB MUST ALSO BE
//*        RUN WHICH WILL LOAD THE NEWLY CREATED DATASETS.
//*
//*--------------------------------------------------------------------
//*
//*        SPECIFICALLY THE STEPS IN THIS JOB CREATE:
//*
//*       'SYS2.MSTR.ISPALIB' TO CONTAIN THE ASSEMBLER /MACRO SOURCE
//*       'SYS2.MSTR.ISPCLIB' TO CONTAIN THE CLISTS
//*       'SYS2.MSTR.ISPMLIB' TO CONTAIN THE MESSAGES
//*       'SYS2.MSTR.OBJ'     TO CONTAIN THE OBJ MODULES
//*       'SYS2.MSTR.ISPPLIB' TO CONTAIN THE PANELS
//*       'SYS2.MSTR.ISPSLIB' TO CONTAIN THE SKELETONS
//*       'SYS2.MSTR.LOAD'    TO CONTAIN THE LOAD MODULES
//*
//*--------------------------------------------------------------------
//*
//*       ALLOCATE THE REQUIRED DATASETS ON THE SAME VOLUME AS
//*       THE ISPINFO DATASET (THIS ONE).
//*
//ISPALLOC EXEC PGM=IEFBR14
//ISPALIB  DD  DSN=SYS2.MSTR.ISPALIB,
//             SPACE=(6160,(100,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=SYS1.MACLIB   <==== ?????? ASM SOURCE ATTRIBUTES
//ISPCLIB  DD  DSN=SYS2.MSTR.ISPCLIB,
//             SPACE=(6160,(100,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=SYS2.CLIST    <==== ?????? CLIST LIBRARY ATTRIBUTES
//ISPMLIB  DD  DSN=SYS2.MSTR.ISPMLIB,
//             SPACE=(6160,(050,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=ISP.R1M0.ISPMLIB
//OBJ      DD  DSN=SYS2.MSTR.OBJ,
//             SPACE=(6160,(100,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=3200)
//ISPPLIB  DD  DSN=SYS2.MSTR.ISPPLIB,
//             SPACE=(6160,(100,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=ISP.R1M0.ISPPLIB
//ISPSLIB  DD  DSN=SYS2.MSTR.ISPSLIB,
//             SPACE=(6160,(050,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=ISP.R1M0.ISPSLIB
//LOAD     DD  DSN=SYS2.MSTR.LOAD,
//             SPACE=(6160,(100,10,54),RLSE,,ROUND),
//             VOL=VOL=REF=SYS2.MSTR.ISPINFO,DISP=(,CATLG,DELETE),
//             DCB=SYS1.LPALIB <===== SAME ATTRIBUTES AS LPALIB?
//*
//*        THATS ALL FOLKS..... ON TO THE INSTALL!
//*
./ ADD  NAME=DESCR
1



    THIS DOCUMENT DEFINES THE RULES AND THE HIERARCHY AS DEFINED
    FOR THE SYSTEM PRODUCTIVITY OPTION (SPF) PROGRAM PRODUCT BY
    THE MILWAUKEE USER GROUP.  IT PROVIDES FOR MULTIPLE SPF USER
    GROUPS WITHIN THE DATA-PROCESSING MAIN GROUP AND AS SUCH
    ALLOWS UNIQUE PROCESSING (AND SECURITY) BY GROUP.

    IN ORDER TO SUCCESSFULLY IMPLEMENT THIS GROUP/SUB-GROUP STRUCTURE,
    THE DEFAULT HIERARCHY (AND ITS LIMITATIONS) SHOULD BE UNDERSTOOD.
    FOLLOWING THAT DESCRIPTION, THE GROUP/SUB-GROUP HIERARCHY WILL BE
    DESCRIBED.



 ---------------   D E F A U L T   H I E R A R C H Y   -----------------

        THE DEFAULT HIERARCHY AS DEFINED BY SPF PROVIDES ONLY THE
        FOLLOWING LIMITED STRUCTURE:


        MENU-TYPE     ----------- FUNCTION -------------------------

        MASTER        PROVIDES THE ABILITY TO SELECT ANY SUBORDINATE
                      MENU (E.G. PROGRAM DEVELOPMENT OR A USER
                      WRITTEN APPLICATION).

        PROG-DEV      PROVIDES THE SAME BASIC SUPPORT FOR PROGRAM
                      DEVELOPMENT AS THE OLD SPF.

        USER-APPL     NOT PROVIDED.  THIS OPTION IF USED MUST BE
                      PROVIDED BY THE USER.


                        ------------------
                        ×                ×
                        ×                ×
                --------×   MASTER MENU  ×--------
                ×       ×                ×        ×
                ×       ×                ×        ×
                ×       ------------------        ×
                ×                                 ×
                ×                                 ×
               \×/                               \×/
        ------------------                ------------------
        ×                ×                ×                ×--
        ×    PROG-DEV    ×                ×   USER-APPLS   × ×--
        ×    (OLD SPF)   ×                × (NOT PROVIDED) × × ×
        ×                ×                ×                × × ×
        ------------------                ------------------ × ×
                                             ----------------- ×
                                               -----------------
1






        THIS LIMITED HIERARCHY ALLOWS THE USER TO SELECT WHICH
        APPLICATION TO INVOKE AND TO RE-SELECT ANOTHER APPLICATION
        AT WILL.  THIS CAUSED SOME PROBLEMS AS FOLLOWS:





        1) -- THERE IS NO PROVISION TO RESTRICT
              USERS 'SOLELY' TO PROGRAM DEVELOPMENT
              (OR ANOTHER APPLICATION).



        2) -- THE SPLIT KEY CAUSED DISPLAY OF THE 'MASTER' MENU AND
              THUS A SUBSEQUENT ACTION TO INTERFACE AT THE LOWER LEVEL.



        3) -- ANY EXTENSION OR MODIFICATION THAT WAS MADE WAS SHARED
              BY ALL USERS.  THIS MEANT THAT APPLICATION DEVELOPMENT
              USERS WOULD HAVE OPERATIONS AND SYSTEMS OPTIONS ON THEIR
              SCREENS ALTHOUGH THEY WERE NOT TO USE THEM (AND
              VISA-VERSA).  IT ALSO MEANT THAT BECAUSE OF THE NUMBER
              OF ADDITIONS USUALLY INCLUDED, THAT SELECTION MENUS
              BECAME VERY BUSY AND THAT MISMATCHED SELECTION CODES HAD
              TO BE USED.
1


 --------------   E X P A N D E D   H I E R A R C H Y   ----------------

    THE EXPANDED HIERARCHY IS DIVIDED INTO TWO LOGICAL LEVELS.  THE
    FIRST LEVEL IS SIMILAR TO THE SPF PROVIDED DEFAULT IN THAT THERE
    ARE THREE SECTIONS HOWEVER, SOME MODIFICATIONS HAVE BEEN MADE AS
    FOLLOWS:

    LEVEL-ONE:

        THE NEW HIERARCHY AS DEFINED BELOW LOGICALLY PRESERVES THE
        ORIGINAL STRUCTURE IN THAT ANY 'AUTHORIZED' USER MAY GAIN
        ACCESS TO ANY APPLICATION, HOWEVER IT CHANGES THE WAY IN WHICH
        IT IS DONE.  THE FOLLOWING DESCRIPTION SHOULD SUFFICE:


        MENU-TYPE     ----------- FUNCTION -------------------------

        MASTER        NOT-USED.  IF SPF IS INVOKED DIRECTLY, AN
                      ERROR MESSAGE WILL BE DISPLAYED.  THE ONLY
                      INTERFACE INTO SPF IS THROUGH A USER WRITTEN
                      COMMAND PROCESSOR, CLIST OR OUR 'SPX' COMMAND
                      (INCLUDED AS PART OF THIS PACKAGE).

        PROG-DEV      PROVIDES THE SAME BASIC SUPPORT FOR PROGRAM
                      DEVELOPMENT AS THE DEFAULT STRUCTURE.  HOWEVER,
                      MULTIPLE PROGRAM DEVELOPMENT ENVIRONMENTS MAY
                      DEFINED (IMS, MVS, CICS, APPLIC#1, APPLIC#2,
                      SECURITY, OPERATOR) EACH WITH IMPLIED UNIQUE
                      RESTRICTIONS OR OPTIONS BY GROUP/SUB-GROUP.

        USER-APPL     NOT PROVIDED (SAME AS THE DEFAULT HIERARCHY).
                      THESE USER WRITTEN APPLICATIONS MUST BE INVOKED
                      VIA A CLIST, COMMAND PROCESSOR OR THE ISPF
                      COMMAND AT LOGON TIME SINCE THE MASTER MENU HAS
                      BEEN DROPPED.  THIS ALSO IMPLIES THAT THESE
                      USERS MAY NOT USE PROGRAM DEVELOPMENT.

                        ------------------
                        ×                ×
                        ×    ORIGINAL    ×
                --------×   MASTER MENU  ×--------
                ×       ×                ×        ×
                ×       ×   (NOT-USED)   ×        ×
                ×       ×                ×        ×
                ×       ------------------        ×
                ×                                 ×
                ×                                 ×
               \×/                               \×/
        ------------------                ------------------
        ×                ×                ×                ×--
        ×    DP USERS    ×                ×  NON-DP USERS  × ×--
        ×                ×                ×                × × ×
        ×   (PROVIDED)   ×                × (NOT PROVIDED) × × ×
        ×                ×                ×                × × ×
        ------------------                ------------------ × ×
                                            ------------------ ×
                                              ------------------
1






    LEVEL-TWO:



        THE SECOND LEVEL OF OUR HIERARCHY APPLIES TO THE PROGRAM
        DEVELOPMENT AREA AND BEGINS WITH THE 'COMMON' PRIMARY OPTION
        MENU.  THIS COMMON MENU SPECIFIES BY USER GROUP (OR CLASS)
        WHICH FOREGROUND, BACKGROUND AND EXTENSIONS MENUS, IF ANY, ARE
        TO BE ALLOWED.  IMPLIED WITHIN THIS STRUCTURE IS THE ABILITY
        TO RESTRICT CERTAIN FUNCTIONS FROM GROUPS AND TO DUPLICATE
        SELECTION OPTIONS (SINCE THE OPTIONS ARE MENU DEPENDENT).




        ------------------                ------------------
        ×                ×                ×                ×--
        ×    COMMON      ×                ×    UNIQUE      × ×--
        ×    PRIMARY     ×----------------×    FOREGROUND  × × ×
        ×    MENU        ×----------------×    MENU        × × ×
        ×                ×----------------×                × × ×
        ------------------\\\             ------------------ × ×
                × × ×      \\\              ------------------ ×
                × × ×       \\\               ------------------
                × × ×        \\\
                × × ×         \\\
                × × ×          \\\
                × × ×           \\\
                × × ×            \\\
                × × ×             \\\
                × × ×              \\\
                × × ×               \\\
                × × ×                \\\
                × × ×                 \\\
        ------------------             \\\------------------
        ×                ×--            \\×                ×--
        ×    UNIQUE      × ×--           \×    UNIQUE      × ×--
        ×    EXTENSION   × × ×            ×    BACKGROUND  × × ×
        ×    MENU        × × ×            ×    MENU        × × ×
        ×                × × ×            ×                × × ×
        ------------------ × ×            ------------------ × ×
          ------------------ ×              ------------------ ×
            ------------------                ------------------
1




    REQUIREMENTS AND STANDARDS:

        IT WAS DETERMINED THAT THE NAME OF THE LOGON STEPNAME BE USED
        AS THE KEY TO THIS STRUCTURE SINCE IN MOST INSTALLATIONS THE
        SYSTEMS-PROGRAMMER MAINTAINS THE LOGON PROCEDURES.  IN
        ADDITION, IT WAS FELT THAT TO IMPOSE CERTAIN NAMING CONVENTIONS
        IN THIS AREA WOULD NOT BE A HARDSHIP ON MOST INSTALLATIONS.
        FOR THESE REASONS, CONVENTIONS HAVE BEEN DEFINED AND ARE
        APPLICABLE TO ALL MEMBERS WITHIN EACH PROVIDED DATASET
        INCLUDING: CLISTS, PANELS(MENUS), SKELETONS(PROCS), MESSAGES
        AND LOGON PROCEDURES.


        THE FOLLOWING PREFIX DEFINITIONS ARE USED TO IDENTIFY ADDED OR
        REPLACED MEMBERS WITHIN THE SPF DATASETS.  THIS ALLOWS SUPPORT
        FOR MULTIPLE GROUPS (AND SUB-GROUPS) VIA A SINGLE SPF 'USER
        INSTALLATION' DATASET.


        PREFIX FOR ALL MEMBERS: (SEE '***' BELOW)

        CMN        -  COMMON PREFIX FOR GENERAL (COMMON) MEMBERS
        PDA        -  PROGRAM DEVELOPMENT FOR APPLICATIONS
        PD1        -  PROGRAM DEVELOPMENT SUB-GROUP#1
        CIC        -  CICS SYSTEM PROGRAMMERS
        IMS        -  IMS SYSTEM PROGRAMMERS
        MVS        -  MVS SYSTEM PROGRAMMERS
        OPR        -  OPERATORS
        TPS        -  TELEPROCESSING PROGRAMMERS
        ???        -  (ANY OTHERS THE INSTALLATION WISHES)


        LOGON PROCS -

                  ALL LOGON PROCEDURES MUST BEGIN WITH A NATIONAL AT
                  SIGN (@) AND CONTAIN ONE OF THE ABOVE PREFIXES IN
                  COLUMNS 2 THROUGH 4 AS BELOW.  CHARACTER POSITIONS
                  5 THROUGH 8 MAY BE USED TO PROVIDE ADDITIONAL
                  SPECIALIZED PROCS WITHIN A GIVEN GROUP.

                  @***.... = PREFIX FOR ALL LOGON PROCEDURES.
                  @MVS.... = SPECIAL MVS SYSTEM PROGRAMMER
                  @IMS.... = SPECIAL IMS SYSTEM PROGRAMMER
                  @PDA.... = STANDARD APPLICATION PROGRAMMER
                  @PD?.... = NON-STANDARD APPLICATION PROGRAMMER
1




        SELECTION MENUS -


                  CMN@PRI = PRIMARY SELECTION MENU
                  ***@F00 = FOREGROUND SELECTION MENU
                  ***@B00 = BACKGROUND SELECTION MENU
                  ***@E00 = EXTENSIONS SELECTION MENU




        ENTRY PANELS (MENUS) -

                  ***MPPPT WHERE:

                     M     = SINGLE MENU RELATION CHARACTER (E.G. TYPE
                             OF SELECTION MENU FROM WHICH THIS FUNCTION
                             IS CALLED).
                             E = EXTENSIONS
                             F = FOREGROUND
                             B = BACKGROUND
                      PPP  = A THREE POSITION FIELD USED TO UNIQUELY IDE
                             A GIVEN PANEL.  THE FIRST CHARACTER SHOULD
                             ONE USED TO SELECT THE PRIMARY SUBFUNCTION.
                             LAST TWO SHOULD BE NUMERIC, STARTING WITH '
                         T = THE LAST CHARACTER IS USED TO IDENTIFY THE
                             TUTORIAL FOR A GIVEN FUNCTION (ONLY TUTORIA
                             MAY USE THE LAST CHARACTER).  THE FIRST 7
                             CHARACTERS WILL BE THE SAME AS THE NAME OF
                             FIRST PANEL FOR THE FUNCTION. (RANGE A THRU

                  EXAMPLE:
                  MVSFD00  WOULD BE THE NAME OF THE MVS FOREGROUND (...F
                           OPTION 'D' (....D..) AND WOULD BE THE FIRST
                           PANEL DISPLAYED BY THE FUNCTION (.....00).
                  MVSFD10  WOULD BE THE SECOND PANEL DISPLAYED FOR THE
                           ABOVE FUNCTION.
                  MVSFD00A WOULD BE THE NAME OF THE TUTORIAL PANEL FOR T
                           ABOVE FUNCTION.

                  VARIABLES NAMES AND SYMBOLS SHOULD START WITH THE FIRS
                  CHARACTERS OF THE PANEL WHICH THEY ARE ASSOCIATED WITH
                  FOR THOSE WHICH ARE COMMON TO BOTH FOREGROUND AND BACK
                  THE LETTER 'C' SHOULD BE USED AS THE FOURTH CHARACTER.
1


        SKELETONS (PROCS) AND CLISTS -

                  WHENVER POSSIBLE, BOTH SKELETONS AND CLISTS THAT
                  RELATE TO A GIVEN PANEL SHOULD BE NAMED IN LIKE
                  MANNER TO THE ABOVE.


        MESSAGE LIBRARY MEMBERS -

                  ***NN WHERE:

                     NN    = TENS MULTIPLIER OF THE MESSAGES CONTAINED
                             WITHIN.  FOR EXAMPLE, MESSAGES WITH AN ID
                             OF CMN100-CMN109 WOULD BE CONTAINED
                             WITHIN MEMBER CMN10.


    THE PROVIDED PRIMARY SELECTION MENU -

        THE COMMON PRIMARY OPTION MENU 'CMN@PRI' VALIDATES THE USER
        BY INSURING THAT THE FIRST CHARACTER OF THE LOGON PROC STEP-
        NAME IS A NATIONAL AT SIGN '@'.  THIS ALLOWS SOME MEASURE OF
        ASSURANCE OF INSTALLATION CORRECTNESS.  ONCE VERIFIED, THE
        2ND THROUGH 4TH CHARACTERS ARE USED TO IDENTIFY THE CLASS OR
        GROUP OF USER TO DETERMINE WHICH MENUS AND FUNCTIONS ARE TO
        BE ALLOWED.

        AS PROVIDED, ALL USERS ARE DIRECTED TO THE COMMON FOREGROUND
        AND BACKGROUND MENUS WITH SPECIFIC EXTENSIONS MENUS SPECIFIED
        BY USER GROUP/SUB-GROUP.  ALSO, OPTION-6 (TSO) HAS BEEN
        RESTRICTED FROM APPLICATIONS PROGRAMMERS AND THE NEW PANEL
        TESTING FUNCTION OPTION-7 HAS BEEN RESTRICTED TO THE 'MVS'
        SYSTEM PROGRAMMER ONLY.  IT WAS FELT THAT IF A USER NEEDS
        NATIVE TSO IT IS PROBABLY TO CALL A CLIST WHICH CAN INSTEAD BE
        PROVIDED THROUGH AN EXTENTIONS OR FOREGROUND MENU. IF HOWEVER,
        YOU WISH TO ALLOW FREE ACCESS TO OPTION-6 A SIMPLE CHANGE (ADD
        COMMENT) MAY BE MADE TO THE COMMON PRIMARY MENU TO PROVIDE IT
        TO SPECIFIC OR ALL USERS.

        PLEASE NOTE THAT THERE IS LITTLE DIFFERENCE BETWEEN OPTION-4
        AND OPTION-E IN THAT THEY BOTH FUNCTION INTERACTIVELY.  THE
        ONLY RULE (SUGGESTION) GOVERNING THE TWO OPTIONS IS THAT WE FELT
        THERE SHOULD BE SOME COMMONALITY BETWEEN THE FOREGROUND AND
        BACKGROUND FUNCTIONS (E.G. WHAT CAN BE DONE IN FOREGROUND
        SHOULD ALSO BE AVAILABLE IN BACKGROUND).  IF A FUNCTION IS TO
        BE ADDED AND IT IS INTERACTIVE BUT NOT ALSO BATCH, CONSIDER
        ADDING IT TO THE EXTENSION(S) MENUS.  GRAPHICALLY:
1







        0 - ........
        1 - ........
        2 - ........
        3 - ........
        4 - FOREGROUND ------------------------------------------
        5 - BACKGROUND --------------------\                   /
        6 - ........                         \ INTERCHANGABLE/
        7 - ........                           \           /
        E - EXTENSIONS ---                       \       /
        T - ........     ×                         \   /
        X - ........     ×                           ×
                         ×                           ×
                         ×                           ×
                        \×/                         \×/

                      A - ALLOCATE               A - COMPRESS
                      B - BROWSE PGMR AIDS       B - BTS
                      C - FREEALL                C - COMPILE
                      D - DISPLAY SYSTEM         D - SMP
                      E - LOCATE                 H - HARDCOPY PRINT
                      F - FINDQ                  L - LINK-EDIT
                      G - GRIPE                  R - RMF
                      H - STATE                  S - SYSOUT BROWSE/PRINT
                      I - INFO                   U - UTILITY
                      J - IPCS                   Z - ZAP
                      L - LISTSPC
                      P - PDS
                      Q - QUEUE
                      R - REPLY
                      S - STANDARDS
                      T - TMSTIQ
                      U - UADS
                      V - LIST VSAM CLUSTER
1



./ ADD  NAME=INSTALL
//TS00000M JOB  (934000TSG),'MSTR',
//             NOTIFY=TS00000,CLASS=I,MSGCLASS=X
//*            USER=TS00000,PASSWORD=PASSWORD,
//*
//*        NOTE..NOTE..NOTE.. IF PAN-SPF IS TO BE USED,
//*        ---- AFTER INSTALLING THIS UPDATE ----
//*        DELETE ISPPLIB MEMBER 'CMN@PRI' AND
//*        RENAME ISPPLIB MEMBER 'CMN@PRIP' -TO- 'CMN@PRI'
//*
//*
//*
//*        THIS JOB CONTAINS THE NECESSARY STEPS TO INSTALL THE
//*        ENHANCEMENTS TO THE NEW SPF PRODUCT.  PRIOR TO EXECUTION,
//*        INSURE THAT THE 'ALLOCATE' JOB HAS BEEN RUN (IF THIS IS THE
//*        FIRST INSTALL OF THIS PACKAGE).  THIS JOB MERELY UPDATES
//*        THOSE THAT ALREADY EXIST.
//*
//*        THIS INSTALL JOB IN NO WAY MODIFIES OR OTHERWISE AFFECTS
//*        THE FUNCTION OR CONTENT OF ANY ROUTINE OR DATASET PROVIDED
//*        BY THE IBM SPF PRODUCT TAPE.
//*        INSTEAD, THIS JOB WILL UPDATE ONLY THOSE DATASETS HEREIN
//*        REFERENCED WITH THE PREFIX 'ISP.MSTR' (OUR OWN NAME).
//*
//*        IF THIS IS THE FIRST INSTALL, THE INSTALLER MUST EDIT
//*        AND COPY THE LOGON 'PROC' FROM THE ISPINFO DATASET
//*        INTO THE USERS LOGON PROCLIB AND UPDATE THE UADS DATASET.
//*        CARE SHOULD BE TAKEN TO PRESERVE THE PROCEDURE NAME IN
//*        THE LOGON PROCLIB DATASET (SEE DESCR MEMBER OF INFO).
//*
//*        SPECIFICALLY THE STEPS IN THIS JOB:
//*
//*        RESET    --- RESET (EMPTY) THE MSTR DATASETS
//*        UPDATE#A --- LOAD THE ASM/MACROS INTO 'ISPALIB'
//*        UPDATE#C --- LOAD THE CLISTS     INTO 'ISPCLIB'
//*        UPDATE#M --- LOAD THE MESSAGES   INTO 'ISPMLIB'
//*        UPDATE#O --- LOAD THE OBJECT     INTO 'OBJ'
//*        UPDATE#P --- LOAD THE PANELS     INTO 'ISPPLIB'
//*        UPDATE#S --- LOAD THE SKELETONS  INTO 'ISPSLIB'
//*        LINKEDIT --- LINKEDIT THE NON-RENT OBJECT MODULES INTO
//*                     THE 'SYS2.MSTR.LOAD' DATASET
//*        LINKRENT --- LINKEDIT THE RENT OBJECT MODULES INTO
//*                     THE 'SYS2.MSTR.LOAD' DATASET
//*
//*--------------------------------------------------------------------
//*
//*
//*    INSTREAM PROC TO RE-LOAD 'EXISTING' ISP.MSTR DATASETS
//*
//*
//ISPUPDT  PROC
//ISPUPDT  EXEC PGM=IEBUPDTE,PARM=NEW
//SYSPRINT DD   DUMMY
//SYSUT2   DD   DISP=SHR,DSN=SYS2.MSTR.&M
//SYSIN    DD   DISP=SHR,DSN=TS00000.ISPAIDS.DATA(MSTR&FROM.LIB)
//         PEND
//*
//*--------------------------------------------------------------------
//*
//RESET    EXEC PGM=PDSRESET   <=== RESET ALL EXISTING 'MSTR' DATASETS
//RESETA   DD   DISP=SHR,DSN=SYS2.MSTR.ISPALIB
//RESETC   DD   DISP=SHR,DSN=SYS2.MSTR.ISPCLIB
//RESETM   DD   DISP=SHR,DSN=SYS2.MSTR.ISPMLIB
//RESETO   DD   DISP=SHR,DSN=SYS2.MSTR.OBJ
//RESETP   DD   DISP=SHR,DSN=SYS2.MSTR.ISPPLIB
//RESETS   DD   DISP=SHR,DSN=SYS2.MSTR.ISPSLIB
//RESETL   DD   DISP=SHR,DSN=SYS2.MSTR.LOAD
//*
//UPDATE#A EXEC ISPUPDT,FROM=A,M=ISPALIB <=== LOAD ASM/MACS
//UPDATE#C EXEC ISPUPDT,FROM=C,M=ISPCLIB <=== LOAD CLISTS
//UPDATE#M EXEC ISPUPDT,FROM=M,M=ISPMLIB <=== LOAD MSGS
//UPDATE#O EXEC ISPUPDT,FROM=O,M=OBJ     <=== LOAD OBJ
//UPDATE#P EXEC ISPUPDT,FROM=P,M=ISPPLIB <=== LOAD PANELS
//UPDATE#S EXEC ISPUPDT,FROM=S,M=ISPSLIB <=== LOAD SKELETONS
//*
//LINKEDIT EXEC PGM=IEWL,PARM='MAP,LIST'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,5))
//SYSLIB   DD   DISP=SHR,DSN=SYS1.AOS31
//SYSLMOD  DD   DISP=SHR,DSN=SYS2.MSTR.LOAD
//OBJ      DD   DISP=SHR,DSN=SYS2.MSTR.OBJ
//SYSLIN   DD   *
 INCLUDE OBJ(CMNBA00)
 NAME CMNBA00
 INCLUDE OBJ(CMNBC00)
 NAME CMNBC00
 INCLUDE OBJ(CMNBH00)
 NAME CMNBH00
 INCLUDE OBJ(CMNBL00) SKIP CMNCCS0 (LIBRARY MANAGER RETRIEVE (PLS))
 NAME CMNBL00
 INCLUDE OBJ(CMNEB00)
 NAME CMNEB00
 INCLUDE OBJ(CMNED00)
 NAME CMNED00
 INCLUDE OBJ(CMNED01)
 NAME CMNED01
 INCLUDE OBJ(CMNED02)
 NAME CMNED02
 INCLUDE OBJ(CMNEF00)
 NAME CMNEF00
 INCLUDE OBJ(CMNEMJCL)
 NAME CMNEMJCL
 INCLUDE OBJ(CMNEQ00)
 NAME CMNEQ00
 INCLUDE OBJ(CMNEUK0)
 NAME CMNEUK0
 INCLUDE OBJ(CMNEUM0)
 NAME CMNEUM0
 INCLUDE OBJ(CMNEUN0)
 NAME CMNEUN0
 INCLUDE OBJ(CMNEUS0)
 NAME CMNEUS0
 INCLUDE OBJ(CMNEVB0)
 NAME CMNEVB0
 INCLUDE OBJ(CMNEVN0)
 NAME CMNEVN0
 INCLUDE OBJ(CMNEVV0) SKIP CMNEXO0 (LIBRARY MANAGER DELETE (PLS))
 NAME CMNEVV0             SKIP CMNEXP0 (LIBRARY MANAGER EDIT   (PLS))
 INCLUDE OBJ(CMNFA00)
 NAME CMNFA00
 INCLUDE OBJ(CMNFC00)
 NAME CMNFC00
 INCLUDE OBJ(CMNFH00)
 NAME CMNFH00
 INCLUDE OBJ(CMNFL00)
 NAME CMNFL00
 INCLUDE OBJ(IMSEMBA)
 NAME IMSEMBA
 INCLUDE OBJ(IMSEMBM)
 NAME IMSEMBM
 INCLUDE OBJ(IMSEMBR)
 NAME IMSEMBR
 INCLUDE OBJ(IMSEMD1)
 NAME IMSEMD1
 INCLUDE OBJ(IMSEMP1)
 NAME IMSEMP1
 INCLUDE OBJ(IMSEMR0)
 NAME IMSEMR0
 INCLUDE OBJ(MVSEOQ0)         MVSEUK0 - BTAM PRINT PROGRAM
 NAME MVSEOQ0
 INCLUDE OBJ(MVSEVE0)
 NAME MVSEVE0
 INCLUDE OBJ(MVSEVM0)
 NAME MVSEVM0
 INCLUDE OBJ(MVSEVP1)
 NAME MVSEVP1
 INCLUDE OBJ(MVSEVP2)
 NAME MVSEVP2
 INCLUDE OBJ(MVSEVP3) SKIP MVSEXA0 MVSEXT0
 NAME MVSEVP3
 INCLUDE OBJ(MVSEZA0)
 NAME MVSEZA0
 INCLUDE OBJ(MVSEZB0)
 NAME MVSEZB0
 INCLUDE OBJ(MVSEZC0)
 NAME MVSEZC0
 INCLUDE OBJ(MVSEZD0)
 NAME MVSEZD0
 INCLUDE OBJ(MVSEZE0)
 NAME MVSEZE0
 INCLUDE OBJ(MVSEZF0)
 NAME MVSEZF0
 INCLUDE OBJ(MVSEZG0)
 NAME MVSEZG0
 INCLUDE OBJ(OPREH00)
 NAME OPREH00
 INCLUDE OBJ(OPREIA0)
 NAME OPREIA0
 INCLUDE OBJ(OPREIB0)
 NAME OPREIB0
 INCLUDE OBJ(OPREIC0)
 NAME OPREIC0
 INCLUDE OBJ(OPREID0)
 NAME OPREID0
 INCLUDE OBJ(OPREIE0)
 NAME OPREIE0
 INCLUDE OBJ(OPREIF0)
 NAME OPREIF0
 INCLUDE OBJ(OPREIG0)
 NAME OPREIG0
 INCLUDE OBJ(OPREIH0)
 NAME OPREIH0
 INCLUDE OBJ(OPREJ00)
 NAME OPREJ00
 INCLUDE OBJ(OPREL00)
 NAME OPREL00
 INCLUDE OBJ(OPRETG0)
 NAME OPRETG0
 INCLUDE OBJ(PDAEA00)
 NAME PDAEA00
 INCLUDE OBJ(PDAEE00)
 NAME PDAEE00
 INCLUDE OBJ(PDAEE10)
 NAME PDAEE10
 INCLUDE OBJ(PDAEUVC)
 NAME PDAEUVC
 INCLUDE OBJ(PDAEUVD)
 NAME PDAEUVD
 INCLUDE OBJ(PDAEUVF)
 NAME PDAEUVF
 INCLUDE OBJ(PDAEUVP)
 NAME PDAEUVP
 INCLUDE OBJ(PDAEUVR)
 NAME PDAEUVR
 INCLUDE OBJ(PDAEUVV)
 NAME PDAEUVV
 INCLUDE OBJ(PDAEVR0)
 NAME PDAEVR0
 INCLUDE OBJ(PDAEVR1)
 NAME PDAEVR1
 INCLUDE OBJ(PDAEVR5)
 NAME PDAEVR5
 INCLUDE OBJ(PDAEVR6)       SKIP PDAEXA0(ABDATES) AND PDAEXP0(PLS)
 NAME PDAEVR6
//LINKRENT EXEC PGM=IEWL,PARM='MAP,LIST,RENT'
//SYSPRINT DD   SYSOUT=*
//SYSUT1   DD   UNIT=SYSDA,SPACE=(CYL,(2,5))
//SYSLIB   DD   DISP=SHR,DSN=SYS1.AOS31
//SYSLMOD  DD   DISP=SHR,DSN=SYS2.MSTR.LOAD
//OBJ      DD   DISP=SHR,DSN=SYS2.MSTR.OBJ
//SYSLIN   DD   *
 INCLUDE OBJ(ALLOCRTN)
 NAME ALLOCRTN
 INCLUDE OBJ(SPF)
 NAME SPF <=== MAY BE RENAMED FOR THE DURATION(CHANGE LOGON PROC IF SO)
/*
//*
//* THE FOLLOWING ARE AVAILABLE FOR INCLUSION BUT MUST BE HANDLED
//* MANUALLY SINCE THEY CONTAIN USER SVC'S OR MUST BE IN LPA.
//*
//RENT   DD *
 INCLUDE OBJ(CMNFS00)      <=== CHECK SVC NUMBER IN SOURCE (255)
 NAME CMNFS00
 INCLUDE OBJ(ISPCOPY)      <=== CHECK SVC NUMBER IN SOURCE (255)
 ALIAS SPFCOPY
 NAME ISPCOPY
//NORENT DD *
 INCLUDE OBJ(SOUTPRT)      <=== BACKGROUND 4.S ROUTINE
 NAME SOUTPRT
 INCLUDE OBJ(SOUTSUB)      <=== 4.S/SOUTPRT SUB-ROUTINE
 NAME SOUTSUB
./ ADD  NAME=PROC
//@MVS01   EXEC PGM=IKJEFT01,PARM='SPF LOGOFF',
//             DYNAMNBR=99,PERFORM=21,REGION=4096K
//*
//*    SINCE THE SECOND THROUGH THE FOURTH CHARACTERS OF THE STEPNAME
//*    IDENTIFY THE USER GROUP AND THUS THE SPF OPTIONS TO BE USED
//*    INSURE THAT THE STEPNAME PREFIX MATCHES THE NAMES DEFINED IN
//*    THE PRIMARY OPTION MENU PROVIDED.
//*
//*    IF PARM='SPF LOGOFF' IS USED, THE USER WIL AUTOMATICALLY BE
//*    LOGGED OFF OF TSO AT THE TERMINATION OF SPF.  THIS ALLOWS
//*    THE INSTALLATION TO MAINTAIN TOTAL CONTROL OF SPF AND NATIVE
//*    TSO (RESTRICTING AS WELL THE PANEL LIBRARY).
//*
//*    IF A FILE IS PROVIDED WITH A DDNAME OF PRELOAD, THE MODULES
//*    LISTED IN THE MEMBER WILL BE PRELOADED (BYPASSING STEPLIB)
//*    INTO THE USER REGION.  THIS MINIMIZES SEARCH THROUGH STEPLIB
//*    FOR THOSE COMMANDS THAT HAVE BEEN INCLUDED IN THE PLPA.
//*
//SYSIN    DD TERM=TS
//SYSPRINT DD TERM=TS
//*
//*PRELOAD DD DISP=SHR,DSN=SYS2.MSTR.ISPCLIB(PRELOAD) <=== PRELOAD?
//*
//SYSPROC  DD DISP=SHR,DSN=IPCS.CLIST             <=== OPTIONAL(IPCS)
//         DD DISP=SHR,DSN=SYS2.CLIST             <=== USER CLISTS
//         DD DISP=SHR,DSN=SYS2.MSTR.ISPCLIB      <=== ISPF CLISTS
//STEPLIB  DD DISP=SHR,DSN=SYS2.MSTR.LOAD         <=== SPF COMMAND
//ISPLLIB  DD DISP=SHR,DSN=SYS2.MSTR.LOAD         <=== ISPF MODULES
//ISPPLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPPLIB      <=== USER PANELS
//         DD DISP=SHR,DSN=ISP.R1M0.ISPPLIB       <=== ISPF PANELS
//ISPMLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPMLIB      <=== USER MESSAGES
//         DD DISP=SHR,DSN=ISP.R1M0.ISPMLIB       <=== ISPF MESSAGES
//ISPSLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPSLIB      <=== USER PROCS
//         DD DISP=SHR,DSN=ISP.R1M0.ISPSLIB       <=== ISPF PROCS
//ISPPARM  DD DISP=SHR,DSN=ISP.R1M0.ISPPARM       <=== ISPF PARMS
./ ADD  NAME=PROCPAN
//@MVS01   EXEC PGM=IKJEFT01,PARM='SPF LOGOFF',
//             DYNAMNBR=99,PERFORM=21,REGION=4096K
//*
//*    THIS IS THE PANVALET LOGON PROC EXAMPLE
//*
//*    SINCE THE SECOND THROUGH THE FOURTH CHARACTERS OF THE STEPNAME
//*    IDENTIFY THE USER GROUP AND THUS THE SPF OPTIONS TO BE USED
//*    INSURE THAT THE STEPNAME PREFIX MATCHES THE NAMES DEFINED IN
//*    THE PRIMARY OPTION MENU PROVIDED.
//*
//*    IF PARM='SPF LOGOFF' IS USED, THE USER WIL AUTOMATICALLY BE
//*    LOGGED OFF OF TSO AT THE TERMINATION OF SPF.  THIS ALLOWS
//*    THE INSTALLATION TO MAINTAIN TOTAL CONTROL OF SPF AND NATIVE
//*    TSO (RESTRICTING AS WELL THE PANEL LIBRARY).
//*
//*    IF A FILE IS PROVIDED WITH A DDNAME OF PRELOAD, THE MODULES
//*    LISTED IN THE MEMBER WILL BE PRELOADED (BYPASSING STEPLIB)
//*    INTO THE USER REGION.  THIS MINIMIZES SEARCH THROUGH STEPLIB
//*    FOR THOSE COMMANDS THAT HAVE BEEN INCLUDED IN THE PLPA.
//*
//SYSIN    DD TERM=TS
//SYSPRINT DD TERM=TS
//*
//*PRELOAD DD DISP=SHR,DSN=SYS2.MSTR.ISPCLIB(PRELOAD) <=== PRELOAD?
//*
//SYSPROC  DD DISP=SHR,DSN=IPCS.CLIST             <=== OPTIONAL(IPCS)
//         DD DISP=SHR,DSN=SYS2.CLIST             <=== USER CLISTS
//         DD DISP=SHR,DSN=SYS2.MSTR.ISPCLIB      <=== ISPF CLISTS
//STEPLIB  DD DISP=SHR,DSN=SYS2.MSTR.LOAD         <=== SPF COMMAND
//ISPLLIB  DD DISP=SHR,DSN=SYS2.MSTR.LOAD         <=== ISPF MODULES
//         DD DISP=SHR,DSN=SYS2.PANV.LOAD         <=== PAN  MODULES
//ISPPLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPPLIB      <=== USER PANELS
//         DD DISP=SHR,DSN=SYS2.PANV.ISPPLIB      <=== PAN  PANELS
//         DD DISP=SHR,DSN=ISP.R1M0.ISPPLIB       <=== ISPF PANELS
//ISPMLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPMLIB      <=== USER MESSAGES
//         DD DISP=SHR,DSN=SYS2.PANV.ISPMLIB      <=== PAN  MESSAGES
//         DD DISP=SHR,DSN=ISP.R1M0.ISPMLIB       <=== ISPF MESSAGES
//ISPSLIB  DD DISP=SHR,DSN=SYS2.MSTR.ISPSLIB      <=== USER PROCS
//         DD DISP=SHR,DSN=ISP.R1M0.ISPSLIB       <=== ISPF PROCS
//ISPPARM  DD DISP=SHR,DSN=ISP.R1M0.ISPPARM       <=== ISPF PARMS
