./ ADD  NAME=CMNBA00
&CMNBAJC1
&CMNBAJC2
&CMNBAJC3
//*--------------------------------------------------------------------
//*      COMPRESS
//*--------------------------------------------------------------------
//COMPRESS EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=(&CMNBAOUT)
//SYSIN    DD DISP=SHR,DSN=ISP.MSTR.ISPSLIB(CMNBA10)
)SEL &CMNBAOTH ^= &Z
//SPFCOMP  DD DISP=OLD,DSN=&SAVEOLIB
)ENDSEL
)SEL &CMNBAOTH = &Z
//SPFCOMP  DD DISP=OLD,DSN=&CMNBAPRJ..&CMNBALIB..&CMNBATYP
)ENDSEL
./ ADD  NAME=CMNBA10
 COPY INDD=SPFCOMP,OUTDD=SPFCOMP
./ ADD  NAME=CMNBC00
&CMNBCJC1
&CMNBCJC2
&CMNBCJC3
//SCAN     EXEC  PGM=ISPSCAN,PARM='&CMNCCMBR'
//STEPLIB  DD DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//*--------------------------------------------------------------------
//IN       DD DISP=SHR,
//            DSN=&SRCDSN
//OUT      DD DISP=(NEW,PASS,DELETE),
//            DSN=&&&&TEMP1,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//*--------------------------------------------------------------------
//*      COMPILE
//*--------------------------------------------------------------------
//COMPILE  EXEC PGM=&CMNBCPGM,COND=(12,LE,SCAN),REGION=768K,
// PARM='&CMNBCCOP,&CMNBCFOP'
//SYSPRINT DD SYSOUT=(&CMNBCOUT)
//SYSTERM  DD SYSOUT=(&CMNBCOUT)
//SYSUDUMP DD SYSOUT=Z
//SYSIN    DD DISP=(OLD,DELETE,DELETE),
//            DSN=&&&&TEMP1
//*
//SYSUT1   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
)SEL &CMNCCCMP = ASMF × &CMNCCCMP = COBOL
//SYSUT2   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT3   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
)SEL &CMNCCCMP = COBOL
//SYSUT4   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT6   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
//*
)SET DD1 = SYSLIB
)SEL &SAVEMAC1 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC1
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC2 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC2
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC3 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC3
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC4 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC4
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC5 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC5
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC6 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVEMAC6
)SET DD1 = &Z
)ENDSEL
//SYSPUNCH DD DISP=(NEW,PASS,DELETE),
//            DSN=&&&&TEMP2,
//            UNIT=VIO,
//            DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,BUFNO=1),
//            SPACE=(3200,(10,10),RLSE,,ROUND)
)SEL &CMNBCPLS ^= &Z
//PLSPARM  DD DISP=SHR,
//            DSN=&CMNCCMBR..&SAVEMOD.(&PLSPARM),
//            VOL=REF=SYS1.LINKLIB
//PLSFILE  DD DISP=SHR,
//            DSN=SYSTEM.&SAVEMOD..SOURCE
//PLSPRINT DD DUMMY
//PLSWORK  DD DISP=(,DELETE,DELETE),
//            DSN=&&&&PLSW,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//PLSINPUT DD DISP=(,DELETE,DELETE),
//            DSN=&&&&PLSI,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT12  DD DISP=(,DELETE,DELETE),
//            DSN=&&&&UT12,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//MACLIB   DD DISP=SHR,DSN=SYST.MACLIB
)ENDSEL
)SEL &CMNBCLNK ^= &Z
//*--------------------------------------------------------------------
//*        LINK-EDIT
//*--------------------------------------------------------------------
//LINK     EXEC PGM=IEWL,
// PARM='&CMNCCLOP',
//            COND=((4,LT,COMPILE),(12,LE,SCAN))
//SYSPRINT DD SYSOUT=(&CMNBCOUT)
//SYSUT1   DD SPACE=(1024,(20,10),RLSE,,ROUND),
//            DCB=BUFNO=1,
//            UNIT=VIO
)SET DD1 = SYSLIB
)SEL &SAVESUB1 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB1
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB2 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB2
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB3 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB3
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB4 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB4
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB5 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB5
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB6 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB6
)SET DD1 = &Z
)ENDSEL
//SYSLMOD  DD DISP=SHR,
//            DSN=&SAVEMOD.(&CMNCCMBR)
//SYSLIN   DD DISP=(OLD,DELETE),
//            DSN=&&&&TEMP2
)SEL &SAVELK1 ^= &Z
//         DD DISP=SHR,DSN=&SAVELK1(&CMNCCLK2)
)ENDSEL
)ENDSEL
./ ADD  NAME=CMNBH00
&CMNBHJC1
&CMNBHJC2
&CMNBHJC3
//*-----------------------------------------------------------------***
//*      THIS JOB PRINTS A PS DATA SET OR A MEMBER OF A PDS         ***
//*-----------------------------------------------------------------***
//GENER    EXEC PGM=SYSGENER
//SYSUT1   DD DISP=SHR,
//            DSN=&CMNBHDSN
//SYSUT2   DD COPIES=&CMNBHCPY,
)SEL &CMNBHDES ^= &Z
//            DEST=&CMNBHDES,
)ENDSEL
)SEL &CMNBHFM ^= &Z
//            SYSOUT=(&CMNBHCL,,&CMNBHFM),
)ENDSEL
)SEL &CMNBHFM = &Z
//            SYSOUT=(&CMNBHCL),
)ENDSEL
//            DCB=(LRECL=&CMNBHLRL,BLKSIZE=&CMNBHBLK,RECFM=&CMNBHRCM)
./ ADD  NAME=CMNBH10
&CMNBHJC1
&CMNBHJC2
&CMNBHJC3
//*------------------------------------------***
//*       THIS JOB PRINTS A WHOLE PDS        ***
//*------------------------------------------***
//PDSPRT  EXEC PGM=IEBPDSUT,
//             PARM='LIST,EJECT,INDEX'
//SYSLIB   DD DISP=SHR,
//            DSN=&CMNBHDSN
//SYSPRINT DD COPIES=&CMNBHCPY,
)SEL &CMNBHDES ^= &Z
//            DEST=&CMNBHDES,
)ENDSEL
)SEL &CMNBHFM ^= &Z
//            SYSOUT=(&CMNBHCL,,&CMNBHFM)
)ENDSEL
)SEL &CMNBHFM = &Z
//            SYSOUT=(&CMNBHCL)
)ENDSEL
./ ADD  NAME=CMNBL00
&CMNBCJC1
&CMNBCJC2
&CMNBCJC3
//*--------------------------------------------------------------------
//*        LINK-EDIT
//*--------------------------------------------------------------------
//LINK     EXEC PGM=IEWL,
//         PARM='&CMNCCLOP'
//SYSPRINT DD SYSOUT=(&CMNBCOUT)
//SYSUT1   DD SPACE=(1024,(20,10),RLSE,,ROUND),
//            DCB=BUFNO=1,
//            UNIT=VIO
)SET DD1 = SYSLIB
)SEL &SAVESUB1 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB1
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB2 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB2
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB3 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB3
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB4 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB4
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB5 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB5
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB6 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVESUB6
)SET DD1 = &Z
)ENDSEL
)SEL &CMNBLMBR ^= &Z
//SYSLMOD  DD DISP=SHR,
//            DSN=&SAVEMOD.(&CMNBLMBR)
)ENDSEL
)SEL &CMNBLMBR = &Z
//SYSLMOD  DD DISP=SHR,
//            DSN=&SAVEMOD
)ENDSEL
)SET DD1 = SYSLIN
)SEL &CMNBLOBJ ^= &Z
)SEL &CMNBLMBR ^= &Z
//&DD1     DD DISP=SHR,DSN=&OBJDSN(&CMNBLMBR)
)ENDSEL
)SEL &CMNBLMBR = &Z
//&DD1     DD DISP=SHR,DSN=&OBJDSN
)SET DD1 = &Z
)ENDSEL
)ENDSEL
)SEL &SAVELK1 ^= &Z
//&DD1     DD DISP=SHR,DSN=&SAVELK1(&CMNCCLK2)
)SET DD1 = &Z
)ENDSEL
./ ADD  NAME=CMNBS00
&CMNBSVA
&CMNBSVB
&CMNBSVC
//*--------------------------------------------------------------------
//*        BATCH PRODUCTION SYSOUT PRINT GENERATED FROM SPF 5.S
//*--------------------------------------------------------------------
//PRINT    EXEC PGM=SOUTPRT,
// PARM='&CMNBSC1,&CMNBSC2'
//STEPLIB  DD DISP=SHR,DSN=ISP.MSTR.ISPLOAD
//SYSPRINT DD SYSOUT=&CMNCSV7,DEST=&CMNCSV6
./ ADD  NAME=CMNEMMB
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
/*ROUTE  PRINT R6
//*-------------------------------------------------------------------*
//*--------  THIS JOB CAN BE RUN WHILE IMS IS RUNNING          -------*
//*-------------------------------------------------------------------*
)SEL  &TSCREENS EQ Y
//STEPFF1  EXEC TSCREENS,SOUT='*'
//STEP010.SYSIN DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBER)
//STEP020.SORTOUT  DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBERM)
)ENDSEL
)SEL  &TMFSGEN EQ Y
//*-------------------------------------------------------------------*
//FORMFF1  EXEC  TMFSGEN,SOUT='*'
//*        THERE IS NO DEFAULT DSN FOR INPUT
//*        CHANGE FOLLOWING CARD AS REQUIRED
//STEP010.SYSIN  DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBERM)
//STEP030.FORMAT DD DSN=&FORMLIB,DISP=SHR
)ENDSEL
//
./ ADD  NAME=CMNEMP4
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
//STEP010  EXEC TPSBGEN,PRJ1=&PRJ1,SOURCE=&TYPE,PRJ2=&ZUSER,
// MBR=&MEMBER,GEN=NOGEN,LIB1=&LIB1,LIB2='Z.LOAD'
//
./ ADD  NAME=CMNEVB0
&CMNEVBJ1
&CMNEVBJ2
&CMNEVBJ3
//*--------------------------------------------------------------------
//*        DATA SET RESTORE
//*--------------------------------------------------------------------
)SEL &CMNEVBPG = FDR
//S1OF1    EXEC PGM=FDRDSF
//SYSPRINT DD SYSOUT=*
//DISK1    DD UNIT=SYSALLDA,
//            VOL=SER=&CMNEVBDS,
//            DISP=SHR
//TAPE1    DD DISP=OLD,
//            DSN=&CMNEVBTP
//SYSIN    DD *
)SEL &CMNEVBNN ^= &Z
)SEL &CMNEVBOT = &Z
  RESTORE DSN=&CMNEVBPR..&CMNEVBLI..&CMNEVBTY,NEWNAME=&CMNEVBNN
)ENDSEL
)SEL &CMNEVBOT ^= &Z
  RESTORE DSN=&CMNEVBOT,NEWNAME=&CMNEVBNN
)ENDSEL
)ENDSEL
)SEL &CMNEVBNN = &Z
)SEL &CMNEVBOT = &Z
  RESTORE DSN=&CMNEVBPR..&CMNEVBLI..&CMNEVBTY
)ENDSEL
)SEL &CMNEVBOT ^= &Z
  RESTORE DSN=&CMNEVBOT
)ENDSEL
)ENDSEL
)ENDSEL
)SEL &CMNEVBPG ^= FDR
//S1OF2    EXEC PGM=ADRDSSU
//SYSPRINT DD SYSOUT=*
//DISK     DD VOL=SER=&CMNEVBDS,
//            UNIT=3350,
//            DISP=SHR
//TAPE     DD DSN=&CMNEVBTP,
//            DISP=OLD
//SYSIN    DD *
 RESTORE INDDNAME(TAPE) OUTDDNAME(DISK) -
)SEL &CMNEVBOT = &Z
         DATASET(INCLUDE(&CMNEVBPR..&CMNEVBLI..&CMNEVBTY)) -
)ENDSEL
)SEL &CMNEVBOT ^= &Z
         DATASET(INCLUDE(&CMNEVBOT)) -
)ENDSEL
)SEL &CMNEVBNN ^= &Z
         NEWNAME(&CMNEVBNN) -
)ENDSEL
         CANCELERROR
/*
//S2OF2    EXEC PGM=IEHPROGM,COND=(0,NE)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
)SEL &CMNEVBOT = &Z
  CATLG DSNAME=&CMNEVBPR..&CMNEVBLI..&CMNEVBTY,VOL=3350=&CMNEVBDS
)ENDSEL
)SEL &CMNEVBOT ^= &Z
  CATLG DSNAME=&CMNEVBOT,VOL=3350=&CMNEVBDS
)ENDSEL
)ENDSEL
./ ADD  NAME=CMNFA10
 COPY INDD=SPFCOMP,OUTDD=SPFCOMP
./ ADD  NAME=IMSEMB1
  REPRO INFILE(XDAMODEL) OUTFILE(XDADATA)
./ ADD  NAME=IMSEMF3
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
)SEL  &DBDLIB EQ TEST
//STEP010  EXEC TDBDGEN,PRJ1=&PRJ1,LIB1=&LIB1,TYPE=&TYPE,
//     MBR=&MEMBER,GEN=NOGEN,PRJ2=&ZUSER,LIB2='Z.LOAD'
)ENDSEL
)SEL  &DBDLIB EQ PROD
//*-------------------------------------------------------------------*
//DBDGEN1  EXEC PROC=DADBDGEN,SOUT='*',MBR=&MEMBER
)ENDSEL
//
./ ADD  NAME=IMSEMI0
&JOBCARD1
)SEL  &JOBCARD2 ^= &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 ^= &Z
&JOBCARD3
)ENDSEL
)TB 71
//*-------------------------------------------------------------------*
//*  NAME:             IMS DCMONITOR PRINT UTILITY                    *
//*                                                                   *
//*  SPF JCL CREATE DATE:  &ZMONTH/&ZDAY/&ZYEAR                      !*
//*  SPF JCL CREATE TIME:  &ZTIME                                    !*
//*                                                                   *
//*  TSO/SPF PANEL ID:     IMSEMI0                                    *
//*                                                                   *
//*-------------------------------------------------------------------*
//PRINT        EXEC PGM=DFSUTR20,REGION=3000K
//SYSPRINT     DD SYSOUT=*
//SYSUDUMP     DD SYSOUT=*
//SYSUT1       DD DSN=IMSVS.OFFLINE.IMSMON,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=(PRIVATE,,,,SER=(&VOLSER)),
//             DCB=(DSORG=PS,RECFM=VBS,LRECL=4092,BLKSIZE=4096)
//ANALYSIS DD    *
DLI CALL REPORT
/*
//*-------------------------------------------------------------------*
//
./ ADD  NAME=IMSEMJ0
&JOBCARD1
)SEL  &JOBCARD2 ^= &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 ^= &Z
&JOBCARD3
)ENDSEL
)TB 71
//*-------------------------------------------------------------------*
//*    ****************************************************************
//*    *         RESTORE THE FOLLOWING DATABASES:           !*
//*    *                                                    !*
//*    *   &DB00                                            !*
//*    *   &DB01                                            !*
//*    *   &DB02                                            !*
//*    *   &DB03                                            !*
//*    *   &DB04                                            !*
//*    *   &DB05                                            !*
//*    *   &DB06                                            !*
//*    *   &DB07                                            !*
//*    *   &DB08                                            !*
//*    *   &DB09                                            !*
//*    *   &DB10                                            !*
//*    *   &DB11                                            !*
//*    *                                                    !*
//*    ****************************************************************
//*-------------------------------------------------------------------*
//*    *****************************************************
//*    *  DATABASE1 - &DB00
//*    *****************************************************
//DATABAS01    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB00,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP00,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)SEL  &DB01 ^= &Z
//*    *****************************************************
//*    *  DATABASE2 - &DB01
//*    *****************************************************
//DATABAS02    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB01,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP01,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB02 ^= &Z
//*    *****************************************************
//*    *  DATABASE3 - &DB02
//*    *****************************************************
//DATABAS03    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB02,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP02,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB03 ^= &Z
//*    *****************************************************
//*    *  DATABASE4 - &DB03
//*    *****************************************************
//DATABAS04    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB03,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP03,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB04 ^= &Z
//*    *****************************************************
//*    *  DATABASE5 - &DB04
//*    *****************************************************
//DATABAS05    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB04,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP04,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB05 ^= &Z
//*    *****************************************************
//*    *  DATABASE6 - &DB05
//*    *****************************************************
//DATABAS06    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB05,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP05,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB06 ^= &Z
//*    *****************************************************
//*    *  DATABASE7 - &DB06                                *
//*    *****************************************************
//DATABAS07    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB06,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP06,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB07 ^= &Z
//*    *****************************************************
//*    *  DATABASE8 - &DB07
//*    *****************************************************
//DATABAS08    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB07,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP07,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB08 ^= &Z
//*    *****************************************************
//*    *  DATABASE9 - &DB08
//*    *****************************************************
//DATABAS09    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB08,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP08,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB09 ^= &Z
//*    *****************************************************
//*    *  DATABASE10 - &DB09
//*    *****************************************************
//DATABAS10    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB09,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP09,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB10 ^= &Z
//*    *****************************************************
//*    *  DATABASE11 - &DB10
//*    *****************************************************
//DATABAS11    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB10,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP10,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
)SEL  &DB11 ^= &Z
//*    *****************************************************
//*    *  DATABASE12 - &DB11
//*    *****************************************************
//DATABAS12    EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=*
//DATABASE     DD DSN=&DB11,
//             DISP=(OLD,KEEP,KEEP)
//TAPEBKUP     DD DSN=&BKUP11,
//             DISP=(OLD,KEEP,KEEP),
//             VOL=(PRIVATE,RETAIN)
//SYSIN        DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREUSE),DISP=SHR
//             DD DSN=IMSVS.SYSSPRT.SYSIN(IMSREST),DISP=SHR
//*-------------------------------------------------------------------*
)ENDSEL
//
./ ADD  NAME=IMSEMMA
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
//*-------------------------------------------------------------------*
//*--------  STEPGEN  CAN BE RUN WHILE IMS IS RUNNING          -------*
//*--------  SYSIN IS BY DEFAULT THE IMSVS.MFS.MACROS LIBRARY  -------*
//*--------  THE MACROS WILL BE PROCESSD BY THE MFS UTILITY    -------*
//*--------  AND PLACED ON THE IMSVS.BATCH FILE FOR PROCESSING -------*
//*--------  BY THE MFSBTCH2 JOB.                              -------*
//*-------------------------------------------------------------------*
)SEL  &FORMAT0 NE &Z
//STEPGEN0  EXEC PROC=DAMFSBH1,MBR=&FORMAT0
)ENDSEL
)SEL  &FORMAT1 NE &Z
//STEPGEN1  EXEC PROC=DAMFSBH1,MBR=&FORMAT1
)ENDSEL
)SEL  &FORMAT2 NE &Z
//STEPGEN2  EXEC PROC=DAMFSBH1,MBR=&FORMAT2
)ENDSEL
)SEL  &FORMAT3 NE &Z
//STEPGEN3  EXEC PROC=DAMFSBH1,MBR=&FORMAT3
)ENDSEL
)SEL  &FORMAT4 NE &Z
//STEPGEN4  EXEC PROC=DAMFSBH1,MBR=&FORMAT4
)ENDSEL
)SEL  &FORMAT5 NE &Z
//STEPGEN5  EXEC PROC=DAMFSBH1,MBR=&FORMAT5
)ENDSEL
)SEL  &FORMAT6 NE &Z
//STEPGEN6  EXEC PROC=DAMFSBH1,MBR=&FORMAT6
)ENDSEL
)SEL  &FORMAT7 NE &Z
//STEPGEN7  EXEC PROC=DAMFSBH1,MBR=&FORMAT7
)ENDSEL
)SEL  &FORMAT8 NE &Z
//STEPGEN8  EXEC PROC=DAMFSBH1,MBR=&FORMAT8
)ENDSEL
)SEL  &FORMAT9 NE &Z
//STEPGEN9  EXEC PROC=DAMFSBH1,MBR=&FORMAT9
)ENDSEL
//
./ ADD  NAME=IMSEMMB
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
/*ROUTE  PRINT R6
//*-------------------------------------------------------------------*
//*--------  THIS JOB CAN BE RUN WHILE IMS IS RUNNING          -------*
//*-------------------------------------------------------------------*
)SEL  &TSCREENS EQ Y
//STEPFF1  EXEC TSCREENS,SOUT='*'
//STEP010.SYSIN DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBER)
//STEP020.SORTOUT  DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBERM)
)ENDSEL
)SEL  &TMFSGEN EQ Y
//*-------------------------------------------------------------------*
//FORMFF1  EXEC  TMFSGEN,SOUT='*'
//*        THERE IS NO DEFAULT DSN FOR INPUT
//*        CHANGE FOLLOWING CARD AS REQUIRED
//STEP010.SYSIN  DD DISP=SHR,DSN=&PRJ1..&LIB1..&TYPE(&MEMBERM)
//STEP030.FORMAT DD DSN=&FORMLIB,DISP=SHR
)ENDSEL
//
./ ADD  NAME=IMSEMMC
&JOBCARD1
)SEL  &JOBCARD2 ^= &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 ^= &Z
&JOBCARD3
)ENDSEL
//*
//*-------------------------------------------------------------------*
//*---- THIS  STEP  COPIES  MFS SCREEN FORMAT DATA  FROM
//*---- &PRJ1..&LIB1..&TYPE  INTO  &DATALIB
//*-------------------------------------------------------------------*
//COPYDATA  EXEC PGM=IKJEFT01
//LOCKFILE  DD DSN=&DATALIB,DISP=OLD
//          DD DSN=&MACROLIB,DISP=OLD
//SYSTSPRT  DD SYSOUT=Y
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=Z,DEST=LOCAL
//SYSUT3    DD UNIT=SYSTEMP,SPACE=(TRK,(1,1))
//SYSUT4    DD UNIT=SYSTEMP,SPACE=(TRK,(1,1))
//DD1IN     DD DSN=&PRJ1..&LIB1..&TYPE,DISP=SHR
//SYSTSIN   DD *
 ALLOC DD(DD1OUT) DSN('&DATALIB'&PW1) OLD
 AUTH IEBCOPY
/*
//SYSIN     DD *
          COPY  OUTDD=DD1OUT
                INDD=((DD1IN,R))
          SELECT  MEMBER=&FORMAT0
)SEL  &FORMAT1 ^= &Z
          SELECT  MEMBER=&FORMAT1
)ENDSEL
)SEL  &FORMAT2 ^= &Z
          SELECT  MEMBER=&FORMAT2
)ENDSEL
)SEL  &FORMAT3 ^= &Z
          SELECT  MEMBER=&FORMAT3
)ENDSEL
)SEL  &FORMAT4 ^= &Z
          SELECT  MEMBER=&FORMAT4
)ENDSEL
)SEL  &FORMAT5 ^= &Z
          SELECT  MEMBER=&FORMAT5
)ENDSEL
)SEL  &FORMAT6 ^= &Z
          SELECT  MEMBER=&FORMAT6
)ENDSEL
)SEL  &FORMAT7 ^= &Z
          SELECT  MEMBER=&FORMAT7
)ENDSEL
)SEL  &FORMAT8 ^= &Z
          SELECT  MEMBER=&FORMAT8
)ENDSEL
)SEL  &FORMAT9 ^= &Z
          SELECT  MEMBER=&FORMAT9
)ENDSEL
/*
//*-------------------------------------------------------------------*
//*---- THIS  STEP  COPIES  MFS SCREEN FORMAT MACROS  FROM
//*---- &PRJ1..&LIB1..&TYPE  INTO  &MACROLIB
//*-------------------------------------------------------------------*
//COPYMACR  EXEC PGM=IKJEFT01,COND=(0,NE)
//LOCKFILE  DD DSN=&MACROLIB,DISP=OLD
//SYSTSPRT  DD SYSOUT=Y
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=Z,DEST=LOCAL
//SYSUT3    DD UNIT=SYSTEMP,SPACE=(TRK,(1,1))
//SYSUT4    DD UNIT=SYSTEMP,SPACE=(TRK,(1,1))
//DD1IN     DD DSN=&PRJ1..&LIB1..&TYPE,DISP=SHR
//SYSTSIN   DD *
 ALLOC DD(DD1OUT) DSN('&MACROLIB'&PW2) OLD
 AUTH IEBCOPY
/*
//SYSIN     DD *
          COPY  OUTDD=DD1OUT
                INDD=((DD1IN,R))
          SELECT  MEMBER=((&FORMAT0.M,&FORMAT0))
)SEL  &FORMAT1 ^= &Z
          SELECT  MEMBER=((&FORMAT1.M,&FORMAT1))
)ENDSEL
)SEL  &FORMAT2 ^= &Z
          SELECT  MEMBER=((&FORMAT2.M,&FORMAT2))
)ENDSEL
)SEL  &FORMAT3 ^= &Z
          SELECT  MEMBER=((&FORMAT3.M,&FORMAT3))
)ENDSEL
)SEL  &FORMAT4 ^= &Z
          SELECT  MEMBER=((&FORMAT4.M,&FORMAT4))
)ENDSEL
)SEL  &FORMAT5 ^= &Z
          SELECT  MEMBER=((&FORMAT5.M,&FORMAT5))
)ENDSEL
)SEL  &FORMAT6 ^= &Z
          SELECT  MEMBER=((&FORMAT6.M,&FORMAT6))
)ENDSEL
)SEL  &FORMAT7 ^= &Z
          SELECT  MEMBER=((&FORMAT7.M,&FORMAT7))
)ENDSEL
)SEL  &FORMAT8 ^= &Z
          SELECT  MEMBER=((&FORMAT8.M,&FORMAT8))
)ENDSEL
)SEL  &FORMAT9 ^= &Z
          SELECT  MEMBER=((&FORMAT9.M,&FORMAT9))
)ENDSEL
/*
//*-------------------------------------------------------------------*
//*---- THIS  STEP  DELETES MFS SCREEN FORMAT DATA AND MACROS FROM
//*---- &PRJ1..&LIB1..&TYPE.
//*-------------------------------------------------------------------*
//MBRDEL   EXEC PGM=MBRDEL,COND=(0,NE)
//SYSUDUMP DD SYSOUT=*
//SYSLIB   DD DISP=OLD,
//         DSN=&PRJ1..&LIB1..&TYPE
//SYSUT1   DD *
&FORMAT0
&FORMAT0.M
)SEL  &FORMAT1 ^= &Z
&FORMAT1
&FORMAT1.M
)ENDSEL
)SEL  &FORMAT2 ^= &Z
&FORMAT2
&FORMAT2.M
)ENDSEL
)SEL  &FORMAT3 ^= &Z
&FORMAT3
&FORMAT3.M
)ENDSEL
)SEL  &FORMAT4 ^= &Z
&FORMAT4
&FORMAT4.M
)ENDSEL
)SEL  &FORMAT5 ^= &Z
&FORMAT5
&FORMAT5.M
)ENDSEL
)SEL  &FORMAT6 ^= &Z
&FORMAT6
&FORMAT6.M
)ENDSEL
)SEL  &FORMAT7 ^= &Z
&FORMAT7
&FORMAT7.M
)ENDSEL
)SEL  &FORMAT8 ^= &Z
&FORMAT8
&FORMAT8.M
)ENDSEL
)SEL  &FORMAT9 ^= &Z
&FORMAT9
&FORMAT9.M
)ENDSEL
/*
//*-------------------------------------------------------------------*
//*-- MFS BATCH1 -----------------------------------------------------*
//*--------  THIS STEPGEN CAN BE RUN WHILE IMS IS RUNNING
//*--------  SYSIN IS BY DEFAULT THE IMSVS.MFS.MACROS LIBRARY
//*--------  THE MACROS WILL BE PROCESSD BY THE MFS UTILITY
//*--------  AND PLACED ON THE IMSVS.BATCH FILE FOR PROCESSING
//*--------  BY THE MFSBTCH2 JOB.
//*-------------------------------------------------------------------*
)SEL  &FORMAT0 ^= &Z
//STEPGEN0  EXEC PROC=DAMFSBH1,MBR=&FORMAT0
)ENDSEL
)SEL  &FORMAT1 ^= &Z
//STEPGEN1  EXEC PROC=DAMFSBH1,MBR=&FORMAT1
)ENDSEL
)SEL  &FORMAT2 ^= &Z
//STEPGEN2  EXEC PROC=DAMFSBH1,MBR=&FORMAT2
)ENDSEL
)SEL  &FORMAT3 ^= &Z
//STEPGEN3  EXEC PROC=DAMFSBH1,MBR=&FORMAT3
)ENDSEL
)SEL  &FORMAT4 ^= &Z
//STEPGEN4  EXEC PROC=DAMFSBH1,MBR=&FORMAT4
)ENDSEL
)SEL  &FORMAT5 ^= &Z
//STEPGEN5  EXEC PROC=DAMFSBH1,MBR=&FORMAT5
)ENDSEL
)SEL  &FORMAT6 ^= &Z
//STEPGEN6  EXEC PROC=DAMFSBH1,MBR=&FORMAT6
)ENDSEL
)SEL  &FORMAT7 ^= &Z
//STEPGEN7  EXEC PROC=DAMFSBH1,MBR=&FORMAT7
)ENDSEL
)SEL  &FORMAT8 ^= &Z
//STEPGEN8  EXEC PROC=DAMFSBH1,MBR=&FORMAT8
)ENDSEL
)SEL  &FORMAT9 ^= &Z
//STEPGEN9  EXEC PROC=DAMFSBH1,MBR=&FORMAT9
)ENDSEL
//
./ ADD  NAME=IMSEMP4
&JOBCARD1
)SEL  &JOBCARD2 NE &Z
&JOBCARD2
)ENDSEL
)SEL  &JOBCARD3 NE &Z
&JOBCARD3
)ENDSEL
)SEL  &PSBLIB EQ TEST
//STEP010  EXEC TPSBGEN,PRJ1=&PRJ1,SOURCE=&TYPE,PRJ2=&ZUSER,
// MBR=&MEMBER,GEN=NOGEN,LIB1=&LIB1,LIB2='Z.LOAD'
)ENDSEL
)SEL  &PSBLIB EQ PROD
//*-------------------------------------------------------------------*
//*TEP010.SYSIN DD DSN=D@96212.Z.DATA(APYAP052),DISP=SHR
//PSBGEN1  EXEC DAPSBGEN,SOUT='*',MBR=&MEMBER
)ENDSEL
//
./ ADD  NAME=IMSEMRS0
)SET STEP     = &Z
)SET PREREORG = &Z
)SET UNLOAD1  = &Z
)SET DELDEF   = &Z
)SET RELOAD1  = &Z
)SET RESOLVE  = &Z
)SET UNLOAD2  = &Z
)SET RELOAD2  = &Z
)SET UNLOAD3  = &Z
)SET RELOAD3  = &Z
)SET PREFIXUP = &Z
)SET STEPDELE = &Z
)SEL  &IMSEMR7A EQ Y
* * * * *   CHECK  STEPS  SCANUTIL  AND PREFIXUP  FOR DD STATEMENTS
* * * * *   NEED TO BE ADDED  -
*****  DELETE THIS AND THE ABOVE LINES BEFORE SUBMITING OR SAVING JCL.
)ENDSEL
)CM
&IMSEMRJ1
)SEL  &IMSEMRJ2 ^= &Z
&IMSEMRJ2
)ENDSEL
)SEL  &IMSEMRJ3 ^= &Z
&IMSEMRJ3
)ENDSEL
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
//*   THIS JOB REORGANIZES THE FOLLOWING DATABASE(S):
//*           &IMSEMR9  &IMSEMR11  &IMSEMR13  &IMSEMR15
//*                 CREATED BY &ZUSER   ON &ZDATE    AT &ZTIME
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
)CM
)SEL  &IMSEMR5 EQ HDAM × &IMSEMR5 EQ HIDAM × &IMSEMR5 EQ HISAM
)SEL  &IMSEMR7 EQ Y × &IMSEMR8 EQ Y
)IM  IMSEMRS1
)SET PREREORG = (0,LT,PREREORG),
)SEL  &IMSEMR7A EQ Y
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
//*   THIS STEP SCANS DATA BASES NOT BEING LOADED OR REORGANIZED FOR
//*   SEGMENTS THAT CONTAIN LOGICAL RELATIONSHIPS THAT ARE AFFECTED
//*   BY LOADING AND/OR REORGANIZING OTHER DATA BASES.
//*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
//SCANUTIL  EXEC   PGM=DFSRRC00,PARM='ULU,DFSURGS0',
//     COND=(0,NE)
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*,DCB=BLKSIZE=3600
//DFSURCDS  DD DSN=&IMSEMR17..PREREORG.&IMSEMR6,
//             DISP=(OLD,KEEP,DELETE)
//* * * * *
//*   ENTER  DATABASE DD STATEMENTS TO BE SCANED AS INDICATED BY THE
//*   PREREORG STEP  ***  H E R E  ***
//* * * * *
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
//DFSURWF1  DD DSN=&IMSEMR17..RELOAD1.&IMSEMR6..WORK1,UNIT=SYSTEMP,
//             DCB=(RECFM=VB,LRECL=900,BLKSIZE=1008),
//             DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(40,10),RLSE)
)ENDSEL
)ENDSEL
)ENDSEL
)SEL  &IMSEMR5 ^= PINDEX  &&  &IMSEMR5 ^= 2INDEX  &&  &IMSEMR5 ^= HISAM
)IM  IMSEMRS2
)SET UNLOAD1 = (0,LT,UNLOAD1),
)IM  IMSEMRS3
)SET DELDEF = (0,LT,DELDEF),
)IM  IMSEMRS4
)SET RELOAD1 = (4,LT,RELOAD1),
)ENDSEL
)CM
)SEL  &IMSEMR5 = HISAM
)SET  INDXDD  = &IMSEMR9
)SET  INDXDSN = &IMSEMR10
)SET  STEP = LOAD1
)IM  IMSEMRS6
)SET  UNLOAD1 = (4,LT,UNLOAD1),
)IM  IMSEMRS3
)SET DELDEF = (0,LT,DELDEF),
)IM  IMSEMRS7
)SET  RELOAD1 = (4,LT,RELOAD1),
)ENDSEL
)CM
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = 2INDEX
)SEL  &IMSEMR5 = PINDEX
)SET  INDXDD  = &IMSEMR11
)SET  INDXDSN = &IMSEMR12
)ENDSEL
)SEL  &IMSEMR5 = 2INDEX
)SEL  &IMSEMR13 ^= &Z
)SET  INDXDD  = &IMSEMR13
)SET  INDXDSN = &IMSEMR14
)ENDSEL
)SEL  &IMSEMR13 = &Z
)SET  INDXDD  = &IMSEMR15
)SET  INDXDSN = &IMSEMR16
)ENDSEL
)ENDSEL
)SET  STEP = LOAD1
)IM  IMSEMRS6
)SET  UNLOAD1 = (4,LT,UNLOAD1),
)IM  IMSEMRS3
)SET DELDEF = (0,LT,DELDEF),
)IM  IMSEMRS7
)SET  RELOAD1 = (0,LT,RELOAD1),
)ENDSEL
)CM
)SEL  &IMSEMR5 EQ HDAM × &IMSEMR5 EQ HIDAM × &IMSEMR5 EQ HISAM
)SEL  &IMSEMR7 EQ Y × &IMSEMR8 EQ Y
)IM  IMSEMRS5
)SET RESOLVE = (4,LT,RESOLVE),
)ENDSEL
)ENDSEL
)CM
)SEL  &IMSEMR5 EQ HDAM × &IMSEMR5 EQ HIDAM × &IMSEMR5 EQ HISAM
)SEL  &IMSEMR8 EQ Y
)SET  STEP = LOAD2
)SET  INDXDD  = &IMSEMR13
)SET  INDXDSN = &IMSEMR14
)IM  IMSEMRS6
)SET  UNLOAD2 = (4,LT,UNLOAD2),
)IM  IMSEMRS7
)SET  RELOAD2 = (0,LT,RELOAD2),
)ENDSEL
)ENDSEL
)CM
)SEL  &IMSEMR5 EQ HDAM × &IMSEMR5 EQ HIDAM × &IMSEMR5 EQ HISAM
)SEL  &IMSEMR8I EQ Y
)SET  STEP = LOAD3
)SET  INDXDD = &IMSEMR15
)SET  INDXDSN = &IMSEMR16
)IM  IMSEMRS6
)SET  UNLOAD3 = (4,LT,UNLOAD3),
)IM  IMSEMRS7
)SET  RELOAD3 = (0,LT,RELOAD3),
)ENDSEL
)ENDSEL
)CM
)SEL  &IMSEMR5 EQ HDAM × &IMSEMR5 EQ HIDAM × &IMSEMR5 EQ HISAM
)SEL  &IMSEMR7 EQ Y
)IM  IMSEMRS8
)SET PREFIXUP = (0,LT,PREFIXUP),
)ENDSEL
)ENDSEL
)CM
)IM  IMSEMRS9
//*
//RUNCHECK  EXEC PROC=RUNCHECK
//
./ ADD  NAME=IMSEMRS1
//*
//PREREORG  EXEC   PGM=DFSRRC00,PARM='ULU,DFSURPR0'
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*,DCB=BLKSIZE=3600
//DFSURCDS  DD DSN=&IMSEMR17..PREREORG.&IMSEMR6,UNIT=SYSTEMP,
//             DISP=(NEW,CATLG,DELETE),SPACE=(TRK,(1,1)),
//             DCB=BLKSIZE=3200
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
//SYSIN     DD *,DCB=BLKSIZE=4080
DBR=&IMSEMR6
OPTIONS=(NOPUNCH,STAT,SUMM)
/*
./ ADD  NAME=IMSEMRS2
//*
//*-------------------------------------------------------------*
//*   THIS STEP UNLOADS THE DATABASE                            *
//*-------------------------------------------------------------*
)SEL  &PREREORG = &Z
//UNLOAD1   EXEC PGM=DFSRRC00,PARM='ULU,DFSURGU0,&IMSEMR6'
)ENDSEL
)SEL  &PREREORG ^= &Z
//UNLOAD1   EXEC PGM=DFSRRC00,PARM='ULU,DFSURGU0,&IMSEMR6',
//        COND=(0,NE)
)ENDSEL
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*
)TB 13
)SEL  &IMSEMR9 ^= &Z
)SEL  &IMSEMR5 ^= PINDEX  &&  &IMSEMR5 ^= 2INDEX
//&IMSEMR9 !DD DSN=&IMSEMR10,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR11 ^= &Z
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = HIDAM
//&IMSEMR11 !DD DSN=&IMSEMR12,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR13 ^= &Z
)SEL  &IMSEMR5 = 2INDEX  ×  &IMSEMR8 = Y
//&IMSEMR13 !DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR15 ^= &Z
)SEL  &IMSEMR5 = 2INDEX && &IMSEMR13 = &Z  ×  &IMSEMR8I = Y
//&IMSEMR15 !DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
//DFSURGU1  DD DSN=&IMSEMR17..UNLOAD1.&IMSEMR6,
//             UNIT=SYSTEMP,SPACE=(CYL,(50,10),RLSE),
//             DISP=(NEW,CATLG,DELETE)
)TB 80
./ ADD  NAME=IMSEMRS3
//*
//DELDEF    EXEC  PGM=IDCAMS,
)SEL  &IMSEMR5 ^= HISAM
//        COND=(0,NE)
)ENDSEL
)SEL  &IMSEMR5 = HISAM
//        COND=(4,LT,UNLOAD1)
)ENDSEL
//SYSPRINT  DD SYSOUT=*
)TB 13
)SET DDCNT = 0
)SEL &IMSEMR9 ^= &Z
)SEL &IMSEMR5 ^= PINDEX && &IMSEMR5 ^= 2INDEX
)SET DDCNT = &DDCNT + 1
//DATABAS&DDCNT !DD DSN=&IMSEMR10,DISP=OLD
)ENDSEL
)ENDSEL
)SEL &IMSEMR11 ^= &Z
)SEL &IMSEMR5 = PINDEX  ×  &IMSEMR5 = HIDAM
)SET DDCNT = &DDCNT + 1
//DATABAS&DDCNT !DD DSN=&IMSEMR12,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR13 ^= &Z
)SEL  &IMSEMR5 = 2INDEX  ×  &IMSEMR8 = Y
)SET DDCNT = &DDCNT + 1
//DATABAS&DDCNT !DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR15 ^= &Z
)SEL  &IMSEMR5 = 2INDEX && &IMSEMR13 = &Z  ×  &IMSEMR8I = Y
)SET DDCNT = &DDCNT + 1
//DATABAS&DDCNT !DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
//SYSIN     DD DSN=ISP.MSTR.ISPSLIB(IMSEMR&DDCNT),DISP=SHR
)TB 80
./ ADD  NAME=IMSEMRS4
//*
//*-------------------------------------------------------------*
//*   THIS STEP RELOADS THE DATABASE                            *
//*-------------------------------------------------------------*
//RELOAD1   EXEC  PGM=DFSRRC00,PARM='ULU,DFSURGL0,&IMSEMR6',
//        COND=(0,NE)
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*
//DFSUINPT  DD DSN=&IMSEMR17..UNLOAD1.&IMSEMR6,DISP=SHR
)TB 13
)SEL  &IMSEMR9 ^= &Z
//&IMSEMR9 !DD DSN=&IMSEMR10,DISP=OLD
)ENDSEL
)SEL  &IMSEMR11 ^= &Z
//&IMSEMR11!DD DSN=&IMSEMR12,DISP=OLD
)ENDSEL
)SEL  &IMSEMR13 ^= &Z
)SEL  &IMSEMR8 = Y
//&IMSEMR13!DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR15 ^= &Z
)SEL  &IMSEMR8I = Y
//&IMSEMR15!DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &PREREORG ^= &Z
//DFSURCDS  DD DSN=&IMSEMR17..PREREORG.&IMSEMR6,DISP=SHR
//DFSURWF1  DD DSN=&IMSEMR17..RELOAD1.&IMSEMR6..WORK1,UNIT=SYSTEMP,
//             DCB=(RECFM=VB,LRECL=900,BLKSIZE=1008),
//             DISP=(MOD,CATLG,DELETE),SPACE=(CYL,(40,10),RLSE)
)ENDSEL
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
)TB 80
./ ADD  NAME=IMSEMRS5
//*
//*-------------------------------------------------------------*
//*   THIS STEP RESOLVES THE POINTERS                           *
//*-------------------------------------------------------------*
//RESOLVE   EXEC  PGM=DFSURG10,PARM='SIZE=E500000',REGION=1000K,
//        COND=(&PREREORG&UNLOAD1&RELOAD1
//             (0,LT,DELDEF))
//SYSPRINT  DD SYSOUT=*,DCB=BLKSIZE=3600
//SYSOUT    DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=Z
//SORTLIB   DD DSN=&IMSEMR19,DISP=SHR
//SORTWK01  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK02  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK03  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK04  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK05  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK06  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK07  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTWK08  DD UNIT=SYSSORT,SPACE=(CYL,50)
//SORTIN    DD DSN=&IMSEMR17..RELOAD1.&IMSEMR6..WORK1,DISP=SHR
//DFSURWF2  DD DSN=&&WF2,UNIT=SYSTEMP,SPACE=(CYL,(50,5)),
//             DCB=(RECFM=VB,LRECL=900,BLKSIZE=1008)
//DFSURWF3  DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..WORK3,UNIT=SYSTEMP,
//             DISP=(NEW,CATLG,DELETE),
//             DCB=(RECFM=VB,LRECL=900,BLKSIZE=1008),
//             SPACE=(CYL,(50,5),RLSE)
//DFSURCDS  DD DSN=&IMSEMR17..PREREORG.&IMSEMR6,DISP=SHR
//DFSURIDX  DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..INDX,UNIT=SYSTEMP,
//             DCB=(RECFM=VB,LRECL=900,BLKSIZE=1008),
//             DISP=(NEW,CATLG,DELETE),SPACE=(CYL,(50,5),RLSE)
./ ADD  NAME=IMSEMRS6
)SET INDXWK = &Z
//*
//*-------------------------------------------------------------*
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = 2INDEX  ×  &STEP ^= LOAD1
//*   THIS STEP UNLOADS THE INDEX DATABASE                      *
)ENDSEL
)SEL  &IMSEMR5 = HISAM  &&  &STEP = LOAD1
//*   THIS STEP UNLOADS A HISAM DATABASE                        *
)ENDSEL
//*-------------------------------------------------------------*
)TB 13
)SEL  &STEP = LOAD1
//UN&STEP  !EXEC  PGM=DFSRRC00,PARM='ULU,DFSURUL0'
)ENDSEL
)SEL  &STEP = LOAD2  ×  &STEP = LOAD3
//UN&STEP  !EXEC  PGM=DFSRRC00,PARM='ULU,DFSURUL0',
//        COND=(&PREREORG&UNLOAD1&DELDEF
//             &RELOAD1.(4,LT,RESOLVE))
)ENDSEL
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*
//WKOUTDD   DD DSN=&IMSEMR17..UN&STEP..&IMSEMR6,
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=SYSTEMP,SPACE=(CYL,(40,5))
)SEL  &STEP = LOAD2  ×  &STEP = LOAD3
//INDEXWK   DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..INDX,DISP=SHR
)ENDSEL
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
//&INDXDD  !DD DSN=&INDXDSN,DISP=OLD
)SEL  &IMSEMR5 = HISAM  &&  &STEP = LOAD1
)SEL  &IMSEMR8 = Y
//&IMSEMR13 !DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)SEL  &IMSEMR8I = Y
//&IMSEMR15 !DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
//SYSIN     DD *
)TB 13 22 40
)SEL  &STEP = LOAD2  ×  &STEP = LOAD3
X1M&INDXDD !&INDXDD !WKOUTDD          !INDEXWK
)ENDSEL
)SEL  &STEP = LOAD1
R1M&INDXDD !&INDXDD !WKOUTDD
)ENDSEL
)TB 80
OPTIONS=(ABEND,STATS)
/*
./ ADD  NAME=IMSEMRS7
//*
//*-------------------------------------------------------------*
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = 2INDEX  ×  &STEP ^= LOAD1
//*   THIS STEP RELOADS THE INDEX DATABASE                      *
)ENDSEL
)SEL  &IMSEMR5 = HISAM  &&  &STEP = LOAD1
//*   THIS STEP RELOADS A HISAM DATABASE                        *
)ENDSEL
//*-------------------------------------------------------------*
)TB 13
//RE&STEP  !EXEC  PGM=DFSRRC00,PARM='ULU,DFSURRL0',
)SEL  &STEP = LOAD2  ×  &STEP = LOAD3
//        COND=(&PREREORG&UNLOAD1&DELDEF
//             &RELOAD1&RESOLVE.(4,LT,UN&STEP))
)ENDSEL
)SEL  &STEP = LOAD1
//        COND=(&UNLOAD1.(0,LT,DELDEF))
)ENDSEL
//IMS       DD DSN=IMSVS.DBDLIB,DISP=SHR
//SYSPRINT  DD SYSOUT=*
//DFSUIN01  DD DSN=&IMSEMR17..UN&STEP..&IMSEMR6,DISP=SHR
//&INDXDD  !DD DSN=&INDXDSN,DISP=OLD
)SEL  &IMSEMR5 = HISAM  &&  &STEP = LOAD1
)SEL  &IMSEMR8 = Y
//&IMSEMR13 !DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)SEL  &IMSEMR8I = Y
//&IMSEMR15 !DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
)TB 80
./ ADD  NAME=IMSEMRS8
//*
//*-------------------------------------------------------------*
//*    THIS STEP UPDATES THE POINTERS                           *
//*-------------------------------------------------------------*
//PREFIXUP  EXEC PGM=DFSRRC00,PARM='ULU,DFSURGP0',
//        COND=(&PREREORG&UNLOAD1&DELDEF
//             &RELOAD1&UNLOAD2&RELOAD2
//             &RELOAD3.(4,LT,RESOLVE))
//IMS       DD DSN=IMSVS.DBDLIB,DISP=(SHR,KEEP,KEEP)
//SYSPRINT  DD SYSOUT=*,DCB=BLKSIZE=1200
//DFSVSAMP  DD DSN=&IMSEMR18,DISP=SHR
//DFSURWF3  DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..WORK3,DISP=SHR
)TB 13
)SEL  &IMSEMR9 ^= &Z
//&IMSEMR9  !DD DSN=&IMSEMR10,DISP=OLD
)ENDSEL
)SEL  &IMSEMR11 ^= &Z
)SEL  &IMSEMR5 = HIDAM
//&IMSEMR11 !DD DSN=&IMSEMR12,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR13 ^= &Z
)SEL  &IMSEMR8 = Y
//&IMSEMR13 !DD DSN=&IMSEMR14,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR15 ^= &Z
)SEL  &IMSEMR8I = Y
//&IMSEMR13 !DD DSN=&IMSEMR16,DISP=OLD
)ENDSEL
)ENDSEL
)SEL  &IMSEMR7A EQ Y
//* * * * *
//*   ENTER  DATABASE DD STATEMENTS FOR DATA BASES THAT WERE SCANNED
//*          ***  H E R E  ***
//* * * * *
)ENDSEL
)TB 80
./ ADD  NAME=IMSEMRS9
//*
//*-------------------------------------------------------------*
//*   THIS STEP DELETES WORK FILES IF ALL CONDITION CODES ARE   *
//*-------------------------------------------------------------*
//STEPDELE  EXEC PGM=IDCAMS,
//        COND=(&PREREORG&UNLOAD1&RESOLVE
//             &RELOAD1&UNLOAD2&RELOAD2
//             &PREFIXUP.(0,LT,DELDEF))
//SYSPRINT DD SYSOUT=*
)SEL  &IMSEMR9 ^= &Z
)SEL  &IMSEMR5 ^= PINDEX  &&  &IMSEMR5 ^= 2INDEX
   LISTC ENTRIES(&IMSEMR10) ALL
)ENDSEL
)ENDSEL
)SEL  &IMSEMR11 ^= &Z
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = HIDAM
   LISTC ENTRIES(&IMSEMR12) ALL
)ENDSEL
)ENDSEL
)SEL  &IMSEMR13 ^= &Z
)SEL  &IMSEMR5 = 2INDEX  ×  &IMSEMR8 = Y
   LISTC ENTRIES(&IMSEMR14) ALL
)ENDSEL
)ENDSEL
)SEL  &IMSEMR15 ^= &Z
)SEL  &IMSEMR5 = 2INDEX && &IMSEMR13 = &Z  ×  &IMSEMR8I = Y
   LISTC ENTRIES(&IMSEMR16) ALL
)ENDSEL
)ENDSEL
)SEL  &PREREORG ^= &Z
//DFSURCDS DD DSN=&IMSEMR17..PREREORG.&IMSEMR6,DISP=(OLD,DELETE,DELETE)
)ENDSEL
)SEL  &IMSEMR5 ^= PINDEX  &&  &IMSEMR5 ^= 2INDEX  &&  &IMSEMR5 ^= HISAM
//DFSURGU1 DD DSN=&IMSEMR17..UNLOAD1.&IMSEMR6,DISP=(OLD,DELETE,DELETE)
)ENDSEL
)SEL  &IMSEMR5 = PINDEX  ×  &IMSEMR5 = 2INDEX  ×  &IMSEMR5 = HISAM
//DFSUNLD2 DD DSN=&IMSEMR17..UNLOAD1.&IMSEMR6,DISP=(OLD,DELETE,DELETE)
)ENDSEL
)SEL  &RESOLVE ^= &Z
//DFSURWF1 DD DSN=&IMSEMR17..RELOAD1.&IMSEMR6..WORK1,
//         DISP=(OLD,DELETE,DELETE)
//DFSURWF3 DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..WORK3,
//         DISP=(OLD,DELETE,DELETE)
//INDEXWK  DD DSN=&IMSEMR17..RESOLVE.&IMSEMR6..INDX,
//         DISP=(OLD,DELETE,DELETE)
)ENDSEL
)SEL  &UNLOAD2 ^= &Z
//DSFURCDS DD DSN=&IMSEMR17..UNLOAD2.&IMSEMR6,DISP=(OLD,DELETE,DELETE)
)ENDSEL
)SEL  &UNLOAD3 ^= &Z
//DSFURCDS DD DSN=&IMSEMR17..UNLOAD3.&IMSEMR6,DISP=(OLD,DELETE,DELETE)
)ENDSEL
./ ADD  NAME=IMSEMR1
 REPRO OFILE(DATABAS1) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS1)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS1)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
./ ADD  NAME=IMSEMR2
 REPRO OFILE(DATABAS1) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS1)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS1)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS2) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS2)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS2)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
./ ADD  NAME=IMSEMR3
 REPRO OFILE(DATABAS1) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS1)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS1)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS2) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS2)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS2)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS3) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS3)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS3)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS3)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS3)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
./ ADD  NAME=IMSEMR4
 REPRO OFILE(DATABAS1) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS1)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS1)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS1)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS2) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS2)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS2)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS2)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS3) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS3)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS3)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS3)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS3)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
 IF LASTCC NE 0 THEN SET MAXCC = 16
 REPRO OFILE(DATABAS4) -
       IDS(SYST.VSMRUSE1.NULLFILE) REUSE COUNT(0)
 IF LASTCC = 12 -
 THEN  DO
       SET MAXCC = 0
       REPRO OFILE(DATABAS4)-
             IDS(SYST.VSMRUSE2.NULLFILE) REUSE COUNT(0)
       END
       IF LASTCC = 12 -
       THEN  DO
             SET MAXCC = 0
             REPRO OFILE(DATABAS4)-
                   IDS(SYST.VSMRUSE3.NULLFILE) REUSE COUNT(0)
             END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS4)-
                         IDS(SYST.VSMRUSE4.NULLFILE) REUSE COUNT(0)
                   END
             IF LASTCC = 12 -
             THEN  DO
                   SET MAXCC = 0
                   REPRO OFILE(DATABAS4)-
                         IDS(SYST.VSMRUSE5.NULLFILE) REUSE COUNT(0)
                   END
./ ADD  NAME=MVSEVC0
&CMNBHJC1
&CMNBHJC2
&CMNBHJC3
//*-----------------------------------------------------------------***
//*  COPY FROM &MVSEVCDS                                            ***
//*   TO &MVSEVCAA                                                  ***
//*-----------------------------------------------------------------***
//STEP1    EXEC PGM=GENER
//SYSUT1   DD DISP=OLD,
//            DSN=&MVSEVCDS,
//            DCB=BUFNO=100
//SYSUT2   DD DISP=(NEW,KEEP,DELETE),
//            DSN=&MVSEVCAA,
//            DCB=(&MVSEVCDS,BUFNO=100),
//            VOL=SER=&MVSEVC00,
//            UNIT=&MVSEVC01,
//            SPACE=(&MVSEVC02,(&MVSEVC03,&MVSEVC10))
//*-----------------------------------------------------------------***
//* 1. RENAME AND UNCATLG &MVSEVCDS                                 ***
//*     TO &MVSEVCAB                                                ***
//* 2. RENAME AND CATLG &MVSEVCAA                                   ***
//*     TO &MVSEVCDS                                                ***
//*-----------------------------------------------------------------***
//STEP2    EXEC PGM=IEHPROGM
//ENQ      DD DISP=OLD,
//            DSN=&MVSEVCDS
//SYSPRINT DD SYSOUT=*
//FROMVOL  DD DISP=SHR,VOL=SER=&MVSEVC06,UNIT=&MVSEVC07
//TOVOL    DD DISP=SHR,VOL=SER=&MVSEVC00,UNIT=&MVSEVC01
//SYSIN    DD *
 RENAME VOL=&MVSEVC07=&MVSEVC06,                                       X
               DSNAME=&MVSEVCDS,                                       X
               NEWNAME=&MVSEVCAB
 RENAME VOL=&MVSEVC01=&MVSEVC00,                                       X
               DSNAME=&MVSEVCAA,                                       X
               NEWNAME=&MVSEVCDS
 UNCATLG DSNAME=&MVSEVCDS
   CATLG DSNAME=&MVSEVCDS,VOL=&MVSEVC01=&MVSEVC00
/*
./ ADD  NAME=MVSEVE0
&MVSEVEJ1
&MVSEVEJ2
&MVSEVEJ3
//*-----------------------------------------------------------------***
//*              THIS JOB EXPORT A VSAM DATA SET                    ***
//*-----------------------------------------------------------------***
//S1OF1   EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=*
//IN       DD DISP=OLD,
//         DSN=&MVSEVE00..&MVSEVE01
//OUT      DD DISP=(,CATALG,DELETE),
//         DSN=&MVSEVEDS,
//         UNIT=TAPE,
//         DCB=MODEL.VBS32000,
//         LABEL=(,SL,,,EXPDT=&MVSEVE09),
//SYSIN     DD *
    VERIFY FILE(IN)
)SEL &MVSEVE02 = &Z
    EXPORT &MVSEVE00..&MVSEVE01 -
)ENDSEL
)SEL &MVSEVE02 ^= &Z
    EXPORT &MVSEVE00..&MVSEVE01/&MVSEVE02 -
)ENDSEL
          INFILE(IN) -
)SEL &MVSEVEOP = &Z
          OUTFILE(OUT&MVSEVES#)
)ENDSEL
)SEL &MVSEVEOP ^= &Z
          OUTFILE(OUT&MVSEVES#) -
          &MVSEVEOP
)ENDSEL
./ ADD  NAME=MVSEXA0
&CMNBCJC1
&CMNBCJC2
&CMNBCJC3
//*--------------------------------------------------------------------
//*      COMPILE
//*--------------------------------------------------------------------
//COMPILE  EXEC PGM=PLSCALL,REGION=768K,
// PARM='DECK'
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DISP=(OLD,DELETE,DELETE),
//            DSN=&MVSEXASR
//*
//SYSUT1   DD UNIT=VIO,
//            DCB=(BLKSIZE=4000,BUFNO=1),
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//*
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SYST.MACLIB
//SYSPUNCH DD DISP=(NEW,PASS,DELETE),
//            DSN=&&&&TEMP2,
//            UNIT=VIO,
//            DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,BUFNO=1),
//            SPACE=(3200,(10,10),RLSE,,ROUND)
//PLSPARM  DD DISP=SHR,
//            DSN=IEFUTL01.AB.LINKLIB(ASMFCL),
//            VOL=REF=SYS1.LINKLIB
//PLSFILE  DD DISP=SHR,
//            DSN=SYSTEM.AB.LINKLIB.SOURCE
//PLSPRINT DD DUMMY
//PLSWORK  DD DISP=(,DELETE,DELETE),
//            DSN=&&&&PLSW,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//PLSINPUT DD DISP=(,DELETE,DELETE),
//            DSN=&&&&PLSI,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT12  DD DISP=(,DELETE,DELETE),
//            DSN=&&&&UT12,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//MACLIB   DD DISP=SHR,DSN=SYST.MACLIB
//*--------------------------------------------------------------------
//*        LINK-EDIT
//*--------------------------------------------------------------------
//LINK     EXEC PGM=IEWL,
//            PARM='XREF,LIST',
//            COND=(4,LT,COMPILE)
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD SPACE=(1024,(20,10),RLSE,,ROUND),
//            DCB=BUFNO=1,
//            UNIT=VIO
//SYSLMOD  DD DISP=SHR,
//            DSN=AB.LINKLIB
//SYSLIN   DD DISP=(OLD,DELETE,DELETE),
//            DSN=&&TEMP2
//         DD *
 NAME IEFUTL01(R)
./ ADD  NAME=OLDBC00
&CMNBCJC1
&CMNBCJC2
&CMNBCJC3
//SCAN     EXEC  PGM=ISPSCAN,PARM='&CMNCCMBR'
//STEPLIB  DD DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//*--------------------------------------------------------------------
//IN       DD DISP=SHR,
//            DSN=&SRCDSN
//OUT      DD DISP=(NEW,PASS,DELETE),
//            DSN=&&&&TEMP1,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//*--------------------------------------------------------------------
//*      COMPILE
//*--------------------------------------------------------------------
//COMPILE  EXEC PGM=&CMNBCPGM,COND=(12,LE,SCAN),REGION=768K,
// PARM='&CMNBCCOP,&CMNBCFOP'
//SYSPRINT DD   SYSOUT=(&CMNBCOUT)
//SYSTERM  DD   SYSOUT=(&CMNBCOUT)
//SYSUDUMP DD   SYSOUT=Z
//SYSIN    DD   DISP=(OLD,DELETE,DELETE),
//             DSN=&&&&TEMP1
//*
//SYSUT1   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)SEL &CMNCCCMP = ASMF × &CMNCCCMP = COBOL
//SYSUT2   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT3   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
)SEL &CMNCCCMP = COBOL
//SYSUT4   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT6   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
//*
)SET DD1 = SYSLIB
)SEL &CMNCCMA1 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA1
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCMA2 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA2
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCMA3 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA3
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCMA4 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA4
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCMA5 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA5
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCMA6 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCMA6
)SET DD1 = &Z
)ENDSEL
//SYSPUNCH DD   DISP=(NEW,PASS,DELETE),
//             DSN=&&&&TEMP2,
//             UNIT=VIO,
//             DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,BUFNO=1),
//             SPACE=(3200,(10,10),RLSE,,ROUND)
)SEL &CMNBCPLS ^= &Z
//PLSPARM  DD   DISP=SHR,
//             DSN=&CMNCCMBR..&CMNCCMOD.(&PLSPARM),
//             VOL=REF=SYS1.LINKLIB
//PLSFILE  DD   DISP=SHR,
//             DSN=SYSTEM.&CMNCCMOD..SOURCE
//PLSPRINT DD   DUMMY
//PLSWORK  DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&PLSW,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//PLSINPUT DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&PLSI,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT12  DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&UT12,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//MACLIB   DD   DISP=SHR,DSN=SYST.MACLIB
)ENDSEL
)SEL &CMNBCLNK ^= &Z
//*--------------------------------------------------------------------
//*        LINK-EDIT
//*--------------------------------------------------------------------
//LINK     EXEC PGM=IEWL,
// PARM='&CMNCCLOP',
//             COND=((4,LT,COMPILE),(12,LE,SCAN))
//SYSPRINT DD   SYSOUT=(&CMNBCOUT)
//SYSUT1   DD   SPACE=(1024,(20,10),RLSE,,ROUND),
//             DCB=BUFNO=1,
//             UNIT=VIO
)SET DD1 = SYSLIB
)SEL &CMNCCSU1 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU1
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCSU2 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU2
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCSU3 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU3
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCSU4 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU4
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCSU5 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU5
)SET DD1 = &Z
)ENDSEL
)SEL &CMNCCSU6 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&CMNCCSU6
)SET DD1 = &Z
)ENDSEL
//SYSLMOD  DD   DISP=SHR,
//             DSN=&CMNCCMOD.(&CMNCCMBR)
//SYSLIN   DD   DISP=(OLD,DELETE),
//             DSN=&&&&TEMP2
)SEL &CMNCCLK1 ^= &Z
//         DD   DISP=SHR,DSN=&CMNCCLK1(&CMNCCLK2)
)ENDSEL
)ENDSEL
./ ADD  NAME=OPREIA0
//IMSSTATS JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A
//DATACNTL EXEC DATACNTL,OUT=U
//DATACNTL.SYSUT1  DD  *
IMSSTATS       U                        G HACKSTADT      128  724
/*
//*--------------------------------------------------------------------
//*  THE FOLLOWING DESCRIBES THE PURPOSE OF EACH OF THE
//*  DD STATEMENTS CONTAINED IN THE JOB:
//*
//*      DD STATEMENT               REFERENCE
//*
//*        STEPLIB          THE CONCATENATED GPARS AND SYST.IMSPARS
//*                         LOAD LIBRARIES
//*        SYSLIB           THE CONCATENATED GPARS AND SYST.IMSPARS
//*                         LOAD LIBRARIES
//*        CMDLIB           THE CONCATENATED GPARS AND SYST.IMSPARS
//*                         COMMAND LIBRARIES
//*        LOGIN            CONCATENATED LOG DATASETS
//*        RPTOUT           SYSOUT DATASET FOR TRANSIT TIME ANALYSIS,
//*                         TRANSIT TIME STATISTICS AND GRAPHICAL
//*                         SUMMARY REPORTS.
//*
//*************************************************************
//*           THE FOLLOWING DDNAMES DEFINE OUTPUT DATA        *
//*           SETS FOR SYST.IMSPARS REPORTS. THEY MAY BE      *
//*           OMITTED IF THE REPORTS ARE TO BE PRINTED        *
//*           (NOT SAVED), AND GPAR DYNAMIC ALLOCATION        *
//*           (MVS) IS IN EFFECT.                             *
//*                                                           *
//*        MGRXDD           DEFAULT SYSOUT DATASET FOR        *
//*                         THE MANAGEMENT EXCEPTION REPORT   *
//*        AVALDD           DEFAULT   SYSOUT DATASET FOR      *
//*                         RESOURCE AVAILABILTY REPORT       *
//*        CPURDD           DEFAULT   SYSOUT DATASET FOR      *
//*                         THE CPU USAGE REPORT              *
//*        IRURDD           DEFAULT SYSOUT DATASET FOR        *
//*                         THE INTERNAL RESOURCE UTILIZATION *
//*                         REPORT                            *
//*        MQURDD           DEFAULT   SYSOUT DATASET FOR      *
//*                         MESSAGE QUEUE UTILIZATION REPORT  *
//*        DBUADD           DEFAULT SYSOUT DATASET FOR        *
//*                         DATA BASE UPDATE ACTIVITY REPORT  *
//*        DBTRDD           DEFAULT   SYSOUT DATASET FOR      *
//*                         THE DATA BASE TRACE               *
//*        HISTDD           DEFAULT SYSOUT DATASET FOR        *
//*                         THE REGION HISTOGRAM              *
//*        LOGDD            DEFAULT SYSOUT DATASET FOR        *
//*                         THE TRANSACTION TRANSIT LOG       *
//*        DCTRDD           DEFAULT SYSOUT DATASET FOR        *
//*                         THE QUEUE MANAGER TRACE           *
//*                                                           *
//*************************************************************
//*--------------------------------------------------------------------
//STEPGPAR EXEC  PGM=GPAR
//STEPLIB  DD  DSN=AB.PRODUCTS,DISP=SHR
//         DD  DSN=SYST.IMSPARX.LOAD,DISP=SHR
//SYSLIB   DD  DSN=AB.PRODUCTS,DISP=SHR
//         DD  DSN=SYST.IMSPARX.LOAD,DISP=SHR
//CMDLIB   DD  DSN=SYST.IMSPARX.CNTL,DISP=SHR
//SYSUDUMP DD  SYSOUT=Z,DCB=BLKSIZE=133
//SYSPRINT DD  SYSOUT=U,DCB=BLKSIZE=133
//MGRXDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//RPTOUT   DD  SYSOUT=U,DCB=BLKSIZE=133
//AVALDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//CPURDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//IRURDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//MQURDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//DBURDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//DBUADD   DD  SYSOUT=U,DCB=BLKSIZE=133
//DBTRDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//HISTDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//LOGDD    DD  SYSOUT=U,DCB=BLKSIZE=133
//DCTRDD   DD  SYSOUT=U,DCB=BLKSIZE=133
//SPRTAVGQ DD  DUMMY,DCB=(RECFM=VB,LRECL=4092,BLKSIZE=4096)
//SPRTEXPQ DD  DUMMY,DCB=(RECFM=VB,LRECL=4092,BLKSIZE=4096)
//SPRTBLDQ DD  DUMMY,DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)
//SYSIN    DD  DSN=IMSVS.CARDFILE(IMSPARS0),DISP=SHR
)SET DD1 = LOGIN
)SEL &S1 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=(TAPE,,DEFER),VOL=SER=IMSO&S1,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S2 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S2,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S3 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S3,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S4 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S4,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S5 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S5,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S6 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S6,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S7 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S7,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &S8 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=LOGIN,VOL=SER=IMSO&S8,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
//*--------------------------------------------------------------------
//RUNCHECK EXEC RUNCHECK
//*--------------------------------------------------------------------
./ ADD  NAME=OPREIB0
//LOGACCUM JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A
//*        ***************************************************
//*        *     THIS PROCEDURE IS USED TO ACCUMULATE        *
//*        *     DB UPDATE LOG RECORDS PRIOR TO RUNNING      *
//*        *     CHGACCUM UTILITY                            *
//*        ***************************************************
//STEPACUM EXEC PGM=DFSUCUM0,PARM='CORE=256000'
//IMS      DD DSN=IMSVS.DBDLIB,DISP=SHR
//SORTLIB  DD DSN=AB.PRODUCTS,DISP=SHR
//SYSIN    DD DSN=IMSVS.CARDFILE(CHGCNTL1),DISP=SHR
//SYSUDUMP DD SYSOUT=Z
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//SORTWK01 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK02 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK03 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK04 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK05 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK06 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK07 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK08 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//DFSUCUMO DD DUMMY
//DFSUCUMN DD DUMMY,DCB=MODEL.DUMMY
//DFSUDD1  DD DSN=DAD.IMSVSLOG.LOGACCUM(+1),DISP=(NEW,CATLG,KEEP),
//            DCB=MODEL.DUMMY,
//            UNIT=(TAPE,,DEFER)
//*FSULOG  DD DSN=DAD.IMSVSLOG.LOGACCUM(+0),DISP=OLD
//*           UNIT=AFF=DFSULOG,VOL=SER=IMSO&L1,
//*--------------------------------------------------------------------
)SET DD1 = DFSULOG
)SEL &L1 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=(TAPE,,DEFER),VOL=SER=IMSO&L1,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L2 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L2,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L3 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L3,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L4 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L4,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L5 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L5,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L6 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L6,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L7 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L7,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
)SEL &L8 ^= &Z
//&DD1     DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&L8,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)SET DD1 = &Z
)ENDSEL
//*--------------------------------------------------------------------
//RUNCHECK EXEC RUNCHECK
//*--------------------------------------------------------------------
./ ADD  NAME=OPREIC0
//CHGACCUM JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A
//*        ***************************************************
//*        *     THIS PROCEDURE IS USED TO ACCUMULATE        *
//*        *     LAST DB CHANGES PRIOR TO RUNNING            *
//*        *     RECOVERY UTILITY                            *
//*        ***************************************************
//STEPACUM EXEC PGM=DFSUCUM0,PARM='CORE=256000'
//IMS      DD DSN=IMSVS.DBDLIB,DISP=SHR
//SORTLIB  DD DSN=AB.PRODUCTS,DISP=SHR
//SYSIN    DD DSN=IMSVS.CARDFILE(CHGCNTL0),DISP=SHR
//SYSUDUMP DD SYSOUT=Z
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//SORTWK01 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK02 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK03 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK04 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK05 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK06 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK07 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//SORTWK08 DD UNIT=SYSSORT,SPACE=(CYL,(40))
//*FSUCUMO DD DSN=DAD.IMSVSLOG.CHGACCUM(+0),DISP=OLD
//DFSUCUMO DD DUMMY
//DFSUCUMN DD DSN=DAD.IMSVSLOG.CHGACCUM(+1),DISP=(NEW,CATLG,KEEP),
//            DCB=MODEL.DUMMY,
//            UNIT=(TAPE,,DEFER)
//DFSUDD1  DD DUMMY,
//            DCB=MODEL.DUMMY
//DFSULOG  DD DSN=DAD.IMSVSLOG.LOGACCUM(+0),DISP=OLD
)SEL &C1 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=(TAPE,,DEFER),VOL=SER=IMSO&C1,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C2 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C2,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C3 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C3,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C4 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C4,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C5 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C5,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C6 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C6,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C7 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C7,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
)SEL &C8 ^= &Z
//         DD  DSN=IMSLOG,DISP=OLD,
//             UNIT=AFF=DFSULOG,VOL=SER=IMSO&C8,
//             LABEL=(2,BLP),
//             DCB=(RECFM=VB,LRECL=3988,BLKSIZE=3992)
)ENDSEL
//*--------------------------------------------------------------------
//RUNCHECK EXEC RUNCHECK
//*--------------------------------------------------------------------
./ ADD  NAME=OPREID0
//LOGCOPY  JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A,
// TYPRUN=HOLD
//*-------------------------------------------------------------------
//*      TSO/SPF BACKGROUND JCL GENERATED FOR:
//*       IMS EMERGENCY LOG TERMINATOR ("ELT")
//*-------------------------------------------------------------------
)SEL &OPREID02 ^= &Z
//OPERCHK1 EXEC PGM=WTOR9
//CCARD    DD *
*---------------------------------------------------------------------
*  OPERATOR INFORMATION FOR   L O G C O P Y :
*
*  INPUT:   PRIMARY LOGTAPE SERIAL=&OPREID02
*  OUTPUT:  USE NEXT AVAILABLE PRIMARY LOGTAPE
*
*  REPLY "NO" TO POSSIBLE SWAP MESSAGE AT END OF TAPE
*---------------------------------------------------------------------
/*
//*------------------------------------------------------------
//CLOSEPRI     EXEC PROC=LOGCOPY,
//             IDSN='IMSVS.PRIMARY.IMSLOG',
//             ODSN='IMSVS.PRIMARY.IMSLOG',
//             VOL='&OPREID02',
//             CHKPT='NONE'
)ENDSEL
)SEL &OPREID03 ^= &Z
//*------------------------------------------------------------
//OPERCHK2     EXEC PGM=WTOR9
//CCARD        DD *
*---------------------------------------------------------------------
*  OPERATOR INFORMATION FOR   L O G C O P Y :
*
*  INPUT:   SECONDARY LOGTAPE SERIAL=&OPREID03
*  OUTPUT:  USE NEXT AVAILABLE SECONDARY LOGTAPE
*
*  REPLY "NO" TO POSSIBLE SWAP MESSAGE AT END OF TAPE
*----------------------------------------------------------
/*
//*------------------------------------------------------------
//CLOSESEC     EXEC PROC=LOGCOPY,
//             IDSN='IMSVS.SECNDARY.IMSLOG',
//             ODSN='IMSVS.SECNDARY.IMSLOG',
//             VOL='&OPREID03',
//             CHKPT='NONE'
)ENDSEL
//*------------------------------------------------------------
//ABENDCHK     EXEC PROC=ABENDCHK
//*-------------------------------------------------------------------
./ ADD  NAME=OPREIE0
//DADCAPEX JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A,
//   TYPRUN=HOLD
/*OUTPUT REPT DEST=(R0,R8)
//*-------------------------------------------------------------------
//*  MANAGE:IMS DAILY PROCESSING
//*-------------------------------------------------------------------
//*  LOG OF SERIAL NUMBERS ENTERED BY OPERATOR ON TSO/SPF MENU:
//*
//*  &S1
//*  &S2
//*  &S3
//*  &S4
//*  &S5
//*  &S6
//*  &S7
//*  &S8
//*  &S9
//*  &SA
//*  &SB
//*  &SC
//*  &SD
//*  &SE
//*  &SF
//*
//*-------------------------------------------------------------------
//DAILY        EXEC PGM=CPXIMSD0,REGION=2048K
//STEPLIB      DD DSN=IMSVS.CAPEX.MIMSLIB,DISP=SHR
//MESSAGE      DD SYSOUT=*,DCB=(BLKSIZE=133)
//PRINT        DD SYSOUT=(U,,REPT),DCB=(BLKSIZE=133)
//DIAGNOSE     DD SYSOUT=*,DCB=(BLKSIZE=133)
//SYSPRINT     DD SYSOUT=*
//SYSUDUMP     DD SYSOUT=Z
//LOGCOND      DD DUMMY  FOR CAPEX CONDENSED TAPE(NOT NEEDED).
//COMMAND      DD UNIT=SYSDA,SPACE=(CYL,(2,1)),
//             DISP=(NEW,DELETE,DELETE)
//SECURITY     DD UNIT=SYSDA,SPACE=(CYL,(2,1)),
//             DISP=(NEW,DELETE,DELETE)
//HISTORY      DD DSN=IMSVS.CAPEX.MIMSHST,DISP=SHR
//SYSIN        DD  *
       UPDATE
       END 12/31/90
       PRINT ALL
/*
//*-------------------------------------------------------------------
)SET DD1 = LOGIMS
)SEL &S1 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S1,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S2 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S2,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S3 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S3,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S4 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S4,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S5 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S5,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S6 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S6,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S7 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S7,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S8 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S8,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &S9 ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&S9,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SA ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SA,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SB ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SB,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SC ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SC,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SD ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SD,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SE ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SE,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
)SEL &SF ^= &Z
//&DD1     DD DSN=IMSVS.OFFLINE.CAPEX.LOGTAPE,
//             DISP=OLD,
//             UNIT=AFF=LOGIMS,
//             LABEL=(2,BLP,,,EXPDT=98000),
//             VOL=SER=&SF,
//             DCB=(RECFM=VB,LRECL=12284,BLKSIZE=12288)
)SET DD1 = &Z
)ENDSEL
//*-------------------------------------------------------------------
//ABENDCHK EXEC ABENDCHK
//*-------------------------------------------------------------------
./ ADD  NAME=OPREIF0
//LOGTERM  JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A,
//  TYPRUN=HOLD
//*-------------------------------------------------------------------
//*  NAME:             IBM - IMS LOG TERMINATOR   ( "LOGTERM" )
//*
//*  PURPOSE:          CLOSES IMS LOGTAPE(S) USING STANDALONE DUMP
//*
//*-------------------------------------------------------------------
//OPERCHEK     EXEC PGM=WTOR9
//CCARD        DD *
*---------------------------------------------------------------------
*  SPECIAL OPERATOR INFORMATION FOR   L O G T E R M :
*
)SEL &OPREIF01 = B
*  WILL CLOSE BOTH PRIMARY AND SECONDARY LOGTAPES
*  PRIMARY   SERIAL=&OPREIF02
*  SECONDARY SERIAL=&OPREIF03
)ENDSEL
)SEL &OPREIF01 = P
*  WILL CLOSE ONLY PRIMARY LOGTAPE
*  PRIMARY   SERIAL=&OPREIF02
)ENDSEL
)SEL &OPREIF01 = S
*  WILL CLOSE ONLY SECONDARY LOGTAPE
*  SECONDARY SERIAL=&OPREIF03
)ENDSEL
*
*---------------------------------------------------------------------
/*
//*-------------------------------------------------------------------*
//CLOSELOG EXEC PGM=DFSFLOT0
//SYSPRINT DD SYSOUT=A
)SEL &OPREIF02 ^= &Z
)SET TYPE = PRIMARY
//LOGTAPE  DD DSN=IMSVS.&TYPE..IMSLOG,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(1,SL,,,EXPDT=98000),
//             VOL=SER=&OPREIF02
)SET TYPE = SECNDARY
)ENDSEL
)SEL &OPREIF02 ^= &Z && &OPREIF03 ^= &Z
//LOGTAPE2 DD DSN=IMSVS.&TYPE..IMSLOG,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(1,SL,,,EXPDT=98000),
//             VOL=SER=&OPREIF03
)ENDSEL
)SEL &OPREIF02 = &Z && &OPREIF03 ^= &Z
)SET TYPE = SECNDARY
//LOGTAPE  DD DSN=IMSVS.&TYPE..IMSLOG,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(1,SL,,,EXPDT=98000),
//             VOL=SER=&OPREIF03
)ENDSEL
//DUMP     DD DSN=STAND.ALONE.DUMP.TAPE,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(1,NL,,,EXPDT=98000),
//             VOL=SER=SADUMP,
//             DCB=(DSORG=PS,RECFM=U,BLKSIZE=2056)
//SYSUDUMP DD SYSOUT=Z
//*-------------------------------------------------------------------*
//ABENDCHK EXEC ABENDCHK
//*-------------------------------------------------------------------*
./ ADD  NAME=OPREIG0
//A@96390I JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=Y,TYPRUN=SCAN,
// NOTIFY=A@96390
//*ADCPXWK JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A
//*-------------------------------------------------------------------*
//*  MANAGE:IMS "WEEKLY" PROCESSING (USES CAPEX MONTHLY CYCLE)        *
//*                                                                   *
//*  CAPEX SOFTWARE LEVEL:   REL 1.5                                  *
//*  INSTALLED AT A-B DATE:  OCTOBER 1980 - GLENN GUNTHER             *
//*                                                                   *
//*-------------------------------------------------------------------*
//WEEKLY       EXEC PGM=CPXIMSM0,REGION=1024K
//STEPLIB      DD DSN=IMSVS.CAPEX.MIMSLIB,DISP=SHR
//MESSAGE      DD SYSOUT=*,DCB=(BLKSIZE=133)
//PRINT        DD SYSOUT=*,DCB=(BLKSIZE=133)
//DIAGNOSE     DD SYSOUT=*,DCB=(BLKSIZE=133)
//SYSPRINT     DD SYSOUT=*
//SYSUDUMP     DD SYSOUT=Z
//HISTORY      DD DSN=IMSVS.CAPEX.MIMSHST,DISP=SHR
//SYSIN        DD *
)SEL &OPREIGMN ^= &Z
  MONTH &OPREIGMN 19&OPREIGYR
/*
//*-------------------------------------------------------------------*
//ABENDCHK     EXEC PROC=ABENDCHK
//*-------------------------------------------------------------------*
//
./ ADD  NAME=OPREIH0
//MSGREQ#  JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=A,
//     TYPRUN=HOLD,NOTIFY=D@97198
/*ROUTE  PRINT R0
//*-------------------------------------------------------------------*
//*  NAME:                 IBM MESSAGE REQUEUER (SELECT AND INSERT)   *
//*                                                                   *
//*  TSO/SPF SETUP DATE:   FRIDAY NOVEMBER 13,'81                     *
//*                                                                   *
//*  PROGRAMMER:           GLENN GUNTHER                              *
//*                                                                   *
//*-------------------------------------------------------------------*
//BLDCHKPT     EXEC PGM=PARMSWTR,PARM='+CHKPT    &WCHKD.&WCHKT '
//PARMSWTR     DD DSN=&&&&CCARDS,DISP=(NEW,PASS,DELETE),
//             UNIT=SYSTEMP,SPACE=(CYL,(1,1)),
//             DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=6160)
//*-------------------------------------------------------------------*
//BLDPRTS      EXEC PGM=IDCAMS
//SYSPRINT     DD SYSOUT=Y
//CCARDS       DD DSN=&&&&CCARDS,DISP=(MOD,PASS,DELETE)
//REFMODEL     DD DSN=IMSVS.SYSSPRT.SYSIN(MSGREQ),DISP=SHR
//SYSIN        DD *
 REPRO INFILE(REFMODEL) OUTFILE(CCARDS) SKIP(1)
/*
//*-------------------------------------------------------------------*
//SELECT       EXEC PROC=IMSBATCH,MBR=MRSELECT,PSB=DADA002B,SOUT='*'
//G.SYSIN      DD DSN=&&&&CCARDS,DISP=(OLD,DELETE,DELETE)
//G.LOGIN      DD DSN=IMSVS.OFFLINE.LOGTAPE1,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(2,BLP,,,EXPDT=98000),
//             DCB=(DSORG=PS,RECFM=VB,LRECL=12284,BLKSIZE=12288),
//             VOL=(PRIVATE,,,,SER=(&S1))
)SEL &S2 ^= &Z
//          DD DSN=IMSVS.OFFLINE.LOGTAPE2,
//             DISP=(OLD,KEEP,KEEP),
//             UNIT=(TAPE,1,DEFER),
//             LABEL=(2,BLP,,,EXPDT=98000),
//             DCB=(DSORG=PS,RECFM=VB,LRECL=12284,BLKSIZE=12288),
//             VOL=(PRIVATE,,,,SER=(&S2))
)ENDSEL
//G.LOGOUT     DD DSN=&&&&LOGOUT,
//             DCB=(DSORG=PS,RECFM=VB,BLKSIZE=12288,LRECL=12284),
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(12288,(600,10),RLSE,,ROUND),
//             UNIT=SYSTEMP
//G.SHMSG      DD DSN=&&&&SHMSG,
//             DCB=(RECFM=F,BLKSIZE=1040,LRECL=1040,DSORG=DA),
//             DISP=(NEW,DELETE,DELETE),
//             SPACE=(1040,(4950),,CONTIG,ROUND),
//             UNIT=SYSTEMP
//G.LGMSG      DD DSN=&&&&LGMSG,
//             DCB=(RECFM=F,BLKSIZE=3120,LRECL=3120,DSORG=DA),
//             DISP=(NEW,DELETE,DELETE),
//             SPACE=(3120,(6000),,CONTIG,ROUND),
//             UNIT=SYSTEMP
//G.SYSPRINT   DD SYSOUT=*
//*-------------------------------------------------------------------*
//INSERT       EXEC PROC=IMSBATCH,MBR=MRINSERT,PSB=DADA002B,SOUT='*'
//G.ISRTFIL    DD DSN=&&&&LOGOUT,DISP=(OLD,DELETE,DELETE)
//G.SYSPRINT   DD SYSOUT=*
//*-------------------------------------------------------------------*
//ABENDCHK     EXEC PROC=ABENDCHK
//*-------------------------------------------------------------------*
./ ADD  NAME=OPREL00
//LOGREC   JOB 724,'OPERATIONS',CLASS=3,MSGCLASS=U
//*@96390L JOB 724,'BECKER TEST',CLASS=1,MSGCLASS=X,NOTIFY=A@96390
//*--------------------------------------------------------------------
//*        LOGREC STEP
//*--------------------------------------------------------------------
//LOGREC   EXEC PGM=IFCEREP1,REGION=1024K,
// PARM=('TABSIZE=256K',
)SEL &OPRELHT ^= &Z
//       'HIST=Y',
)ENDSEL
)SEL &OPRELSD ^= &Z
//       'DATE=(&OPRELSD,&OPRELED)',
)ENDSEL
)SEL &OPRELST ^= &Z
//       'TIME=(&OPRELST,&OPRELET)',
)ENDSEL
)SEL &OPRELPR ^= &Z
//       'PRINT=&OPRELPR',
)ENDSEL
)SEL &OPRELDV ^= &Z
//       'DEV=(&OPRELDV)',
)ENDSEL
)SEL &OPRELCU ^= &Z
//       'CUA=(&OPRELCU)',
)ENDSEL
)SEL &OPRELTH ^= &Z
//       'THRESHOLD=(&OPRELTH)',
)ENDSEL
)SEL &OPRELRC ^= &Z
//       'TYPE=&OPRELRC',
)ENDSEL
//       'ACC=N')
//EREPPT   DD SYSOUT=&OPRELOT,
//            DCB=BLKSIZE=133
//TOURIST  DD SYSOUT=&OPRELOT,
//            DCB=BLKSIZE=133
)SEL &OPRELCD ^= &Z
//SERLOG   DD DISP=SHR,
//            DSN=SYS1.LOGREC
)ENDSEL
)SEL &OPRELHT ^= &Z
//ACCIN    DD DISP=OLD,
//            DSN=SYST.ERP.HISTORY(-&OPRELG1)
)SEL &OPRELG2 ^= &Z
//         DD DISP=OLD,
//            DSN=SYST.ERP.HISTORY(-&OPRELG2)
)ENDSEL
)ENDSEL
//DIRECTWK DD UNIT=SYSTEMP,SPACE=(CYL,(5,1))
//SYSIN    DD DUMMY
)SEL &OPRELOA ^= &Z
//*-----------------------------------------
//*        LOA REPORT
//*-----------------------------------------
//LOA      EXEC PGM=IFDOLT
//DIAGMSG  DD SYSOUT=&OPRELOT,
//            DCB=BLKSIZE=133
//OLTCDSDD DD DISP=SHR,
//            DSN=SYST.OLTLIB
//SYMSYM   DD DISP=SHR,
//            DSN=SYST.OLTSYM
)SEL &OPRELCD ^= &Z
//SERLOG   DD DISP=SHR,
//            DSN=SYS1.LOGREC
)ENDSEL
)SEL &OPRELHT ^= &Z
//ACCIN    DD DISP=OLD,
//            DSN=SYST.ERP.HISTORY(-&OPRELGD)
)ENDSEL
//CNTRLIN  DD *
.NDR/5682LOA/NFE/
.NDR/3033LOA/NFE/
CANCEL
)ENDSEL
./ ADD  NAME=TPSEG30
//*
//*     USE ASSEMBLER MACROS TO TAKE VTAMLST SOURCE AND "PUNCH" OUT
//*     ABSTRACT CARDS
//*
//NCPCHECK EXEC PGM=IEV90,PARM='NOLIST,DECK,SYSPARM=&MEM3705'
//SYSUDUMP DD  SYSOUT=Z
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT2   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT3   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSPRINT DD  DUMMY,DCB=BLKSIZE=1452
//*YSPRINT DD  SYSOUT=*
//SYSGO    DD  DUMMY
//SYSIN    DD  DSN=SYST.MACLIB(NCPCHECK),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&MEM3705),DISP=SHR
//SYSPUNCH DD DSN=SYST.TPS.CNTL3705(&MEM3705.A),DISP=SHR
//********************************************************************
//*                                                                  *
//*       COMPILE STAGE 1 FROM SOURCE                                *
//*                                                                  *
//********************************************************************
//ASM     EXEC PGM=IEV90,PARM=DECK,COND=(5,LT,NCPCHECK)  &SW3
//ASM     EXEC PGM=IFOX00,PARM='LIST,DECK,',COND=(5,LT,NCPCHECK) &SW2
//SYSUDUMP DD  SYSOUT=Z
//SYSLIB   DD  DSN=SYS1.GEN3705,DISP=SHR
//SYSUT1   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT2   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT3   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSPRINT DD  SYSOUT=*,DCB=BLKSIZE=1452
//SYSGO    DD  DUMMY
//SYSIN    DD  DSN=SYST.TPS.VTAMLST(&MEM3705),DISP=SHR
//SYSPUNCH DD  DSN=SYST.TPS.CNTL3705(&MEM3705),DISP=SHR
//********************************************************************
//*                                                                  *
//*       SUBMIT STAGE2 IF COMPILE OK                                *
//*                                                                  *
//********************************************************************
//SUBMIT  EXEC PGM=GENER,COND=((5,LE,ASM),(5,LE,NCPCHECK))     &SW1
//SYSUT1   DD  DSN=SYST.TPS.CNTL3705(&MEM3705),DISP=SHR  &SW1
//SYSUT2   DD  SYSOUT=(A,INTRDR),DCB=(RECFM=F,BLKSIZE=80,LRECL=80) &SW1
./ ADD  NAME=TPSEXL0
//ASM     EXEC PGM=IEV90,PARM='NOLIST,DECK'
//SYSUDUMP DD  SYSOUT=Z
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT2   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSUT3   DD  UNIT=SYSTEMP,SPACE=(CYL,(6,1))
//SYSPRINT DD  DUMMY,DCB=BLKSIZE=1452
//SYSGO    DD  DUMMY
//SYSIN    DD  DSN=SYST.TPS.VTAMLST(LISTMACS),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE01),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE02),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE03),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE04),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE05),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE06),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE07),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE08),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE09),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE10),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE11),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE12),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE13),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE14),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE15),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE16),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE17),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE18),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE19),DISP=SHR
//         DD  DSN=SYST.TPS.VTAMLST(&NODE20),DISP=SHR
//SYSPUNCH DD  DSN=&&NODEL,DISP=(,PASS),UNIT=VIO,
//             SPACE=(6160,(20,10),RLSE,,ROUND),
//             DCB=(BLKSIZE=6160,RECFM=FB)
//SORT    EXEC SORT
//S.CNTL   DD  *
 FIELDS=(1,8,CH,A),FILSZ=E1000
//S.SORTIN DD  DSN=&&NODEL,DISP=(OLD,DELETE)
//S.SORTOUT DD DSN=SYST.TPS.VTAMLST(&VLSTMEM),DISP=SHR
//PRINT   EXEC PGM=ABTP001B                             &SW1
//SYSIN    DD  DSN=SYST.TPS.VTAMLST(&VLSTMEM),DISP=SHR &SW1
//SYSPRINT DD  SYSOUT=&SOUT                             &SW1
//
./ ADD  NAME=X
&CMNBCJC1
&CMNBCJC2
&CMNBCJC3
//SCAN     EXEC  PGM=ISPSCAN,PARM='&CMNCCMBR'
//STEPLIB  DD DISP=SHR,DSN=ISP.R1M0.ISPLOAD
//*--------------------------------------------------------------------
//IN       DD DISP=SHR,
//            DSN=&SRCDSN
//OUT      DD DISP=(NEW,PASS,DELETE),
//            DSN=&&&&TEMP1,
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//            UNIT=VIO,
//            SPACE=(4000,(10,10),RLSE,,ROUND)
//*--------------------------------------------------------------------
//*      COMPILE
//*--------------------------------------------------------------------
//COMPILE  EXEC PGM=&CMNBCPGM,COND=(12,LE,SCAN),REGION=768K,
// PARM='&CMNBCCOP,&CMNBCFOP'
//SYSPRINT DD   SYSOUT=(&CMNBCOUT)
//SYSTERM  DD   SYSOUT=(&CMNBCOUT)
//SYSUDUMP DD   SYSOUT=Z
//SYSIN    DD   DISP=(OLD,DELETE,DELETE),
//             DSN=&&&&TEMP1
//*
//SYSUT1   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)SEL &CMNCCCMP = ASMF × &CMNCCCMP = COBOL
//SYSUT2   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT3   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
)SEL &CMNCCCMP = COBOL
//SYSUT4   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT6   DD   UNIT=VIO,
//             DCB=(BLKSIZE=4000,BUFNO=1),
//             SPACE=(4000,(10,10),RLSE,,ROUND)
)ENDSEL
//*
)SET DD1 = SYSLIB
)SEL &SAVEMAC1 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC1
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC2 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC2
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC3 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC3
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC4 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC4
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC5 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC5
)SET DD1 = &Z
)ENDSEL
)SEL &SAVEMAC6 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVEMAC6
)SET DD1 = &Z
)ENDSEL
//SYSPUNCH DD   DISP=(NEW,PASS,DELETE),
//             DSN=&&&&TEMP2,
//             UNIT=VIO,
//             DCB=(RECFM=FB,BLKSIZE=3200,LRECL=80,BUFNO=1),
//             SPACE=(3200,(10,10),RLSE,,ROUND)
)SEL &CMNBCPLS ^= &Z
//PLSPARM  DD   DISP=SHR,
//             DSN=&CMNCCMBR..&SAVEMOD.(&PLSPARM),
//             VOL=REF=SYS1.LINKLIB
//PLSFILE  DD   DISP=SHR,
//             DSN=SYSTEM.&SAVEMOD..SOURCE
//PLSPRINT DD   DUMMY
//PLSWORK  DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&PLSW,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//PLSINPUT DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&PLSI,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//SYSUT12  DD   DISP=(,DELETE,DELETE),
//             DSN=&&&&UT12,
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=4000,BUFNO=1),
//             UNIT=VIO,
//             SPACE=(4000,(10,10),RLSE,,ROUND)
//MACLIB   DD   DISP=SHR,DSN=SYST.MACLIB
)ENDSEL
)SEL &CMNBCLNK ^= &Z
//*--------------------------------------------------------------------
//*        LINK-EDIT
//*--------------------------------------------------------------------
//LINK     EXEC PGM=IEWL,
// PARM='&CMNCCLOP',
//             COND=((4,LT,COMPILE),(12,LE,SCAN))
//SYSPRINT DD   SYSOUT=(&CMNBCOUT)
//SYSUT1   DD   SPACE=(1024,(20,10),RLSE,,ROUND),
//             DCB=BUFNO=1,
//             UNIT=VIO
)SET DD1 = SYSLIB
)SEL &SAVESUB1 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB1
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB2 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB2
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB3 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB3
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB4 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB4
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB5 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB5
)SET DD1 = &Z
)ENDSEL
)SEL &SAVESUB6 ^= &Z
//&DD1     DD   DISP=SHR,DSN=&SAVESUB6
)SET DD1 = &Z
)ENDSEL
//SYSLMOD  DD   DISP=SHR,
//             DSN=&SAVEMOD.(&CMNCCMBR)
//SYSLIN   DD   DISP=(OLD,DELETE),
//             DSN=&&&&TEMP2
)SEL &CMNCCLK1 ^= &Z
//         DD   DISP=SHR,DSN=&SAVELK1(&SAVELK2)
)ENDSEL
)ENDSEL
