TERMIO#  TITLE 'TERMIO# -- 3270 ACCESS METHOD SELECTOR ROUTINE'
*                                                                     *
*        T E R M I O #                                                *
*                                                                     *
*        AN OPEN-ENDED CSECT WHOSE ONLY FUNCTION IS TO                *
*        DETECT WHICH SERVICE I/O ROUTINE TO USE -                    *
*        BY DETERMINING WHETHER OR NOT THIS JOBSTEP                   *
*        IS   T S O    OR   D C M S  "START"                          *
*                                                                     *
*        THE ASCB TSB FIELD IS CHECKED FOR NONZERO.                   *
*            A NONZERO TSB ADDRESS IMPLIES                            *
*            THAT THIS IS A TSO ADDRESS SPACE:                        *
*                                                                     *
*                                                                     *
         EJECT
US1NG    OPSYN USING
USING    OPSYN
DR0P     OPSYN DROP
DROP     OPSYN
         DCMSREGS
         EJECT
TERMIO#  CSECT
         SAVE  (14,12),,*
         LR    R11,R15
         USING TERMIO#,R11
         LR    R10,R1                       SAVE IOCB ADDRESS
         USING IOCB,R10
         SPACE 3
*
*
*       REGISTERS:
*                   R10 = IOCB
*                   R11 = BASE
*                   R8  = CVT
*                   R7  = NEW/OLD
*                   R6  = ASCB
*                   R2  = FSA
*                   R12 = TCB
*                   R5  = TDCB
*                   R3  = IOCBTIME
*
*
         EJECT
         MVI   IOCBAID,AIDNULL . R E S E T  CURRENT AID
         SR    R5,R5                        CLEAR TDCB
         L     R8,16                        POINT AT THE CVT
         L     R7,0(,R8)                    NEW/OLD
         L     R12,04(,R7)                  OUR TCB
         L     R2,112(,R12)                     AND ITS FSA
         L     R6,12(,R7)                   OUR ASCB
         TM    IOCBFLGT,IOCBTTSO+IOCBTCMD+IOCBTBSC
         BNZ   OLDIOCBX      SKIP DETECTION IF KNOWN TYPE
         EJECT
*
*
*        T E R M I N A L    T Y P E    S E L E C T I O N    C O D E
*
*
*        NEW IOCB - WE MUST SCAN FOR TYPE
*
*   AT THIS POINT WE HAVE LOCATED THE FIRST SAVE AREA PROVIDED TO THIS
*   TASK WHEN IT WAS ATTACHED. NOBODY CARES ABOUT THE REGISTERS THAT
*   IT CONTAINS, SO TERMIO USES IT AS THE ANCHOR FOR ITS TABLE.
*   USAGE IS AS FOLLOWS:
*
*        24    ORIGINAL PARM SAVED BY INITIAL ROUTINE (DCB PTR)
*        28    '#???' IF TERMIO HAS EVER BEEN INVOKED
*        32    POINTER TO PREVIOUS FORMAT TABLE USED.
*        36    POINTER TO CURRENT TERMIO WORK AREA
*
         L     R1,060(,R6)                      THE TSB,
         LA    R1,0(R1)                         IF IT
         LTR   R1,R1                            EXISTS -
         BZ    NOTSO                             IMPLIES
         OI    IOCBFLGT,IOCBTTSO                THIS IS
         CLI   28(R2),C'#'         TEST FOR INIT FROM TERMIO$    BFG001
         BNE   CONTINU              IF NOT THEN JOB STEP TASK    BFG001
*                                                                BFG001
*        IF TERMIO$ HAS BEEN ENTERED THEN 24(R2) IS EITHER       BFG001
*        A(A(TDCB)) OR 0 (SET BY TERMIIO$).  IF 0 THEN WE        BFG001
*        ARE INVOKED DIRECTLY FROM THE TMP AND NOT $DCMS COMMAND BFG001
*                                                                BFG001
         ICM   R5,15,24(R2)        GET ADDR OF TDCB              BFG001
         BZ    CONTINU             OUT IF NOT PRESENT            BFG001
         L     R5,0(R5)            POINT AT TDCB                 BFG001
         LA    R5,0(R5)                                          BFG001
         B     CONTINU                                  T S O
NOTSO    EQU   *
         L     R5,24(R2)           RECOVER
         L     R5,0(R5)                   TDCB
         LA    R5,0(R5)                       FROM
         ST    R5,IOCBTDCB                        FSA+24
*
         CLC   TDCBTYPE-TDCB(R5),=CL4'#CMD'
         BNE   NOTCMD
         OI    IOCBFLGT,IOCBTCMD
         B     CONTINU
NOTCMD   EQU   *
         CLC   28(4,R2),=C'#BSC'  IS THIS OUR FIRST TIME THRU
*        BNE   NOTBSC
         OI    IOCBFLGT,IOCBTBSC
         B     CONTINU
NOTBSC   EQU   *
         EX    0,*                 ILLEGAL TYPE !
CONTINU  EQU   *
         ST    R5,IOCBTDCB               THE TDCB
*
*         END OF TYPE SELECTION CODE
*
         EJECT
OLDIOCBX EQU   *
         L     R5,IOCBTDCB
         L     R3,IOCBWAIT        INIT
         LTR   R3,R3                 THE
         BZ    MOVETIME                  IOCB
         TM    IOCBFLGD,IOCBDLAY             WAIT
         BO    NOTIME                            FIELD
MOVETIME EQU   *
         TM    IOCBFLGT,IOCBTTSO   COPY                          BFG001
         BO    TSOTIME                 TIME                      BFG001
         L     R4,TDCBDUPT-TDCB(R5)          FROM
         L     R3,DUPTINTV-DUPT(R4)              DUPT
         B     NOTIME                                UNLESS TSO
TSOTIME  EQU   *
         LA    R3,200
NOTIME   EQU   *
         ST    R3,IOCBWAIT             INIT DELAY TIME
         EJECT
*
*
*        S C R E E N    A U T O    T I M E S T A M P    C O D E
*
*
         MVC   IOCBTIME(L'IOCBTIME),SPACEZ
         TIME DEC
         ST    R0,IOCBFWDW            TIME
         MVI   IOCBPSGN,X'0C'             STAMP
         MVC   IOCBTIME(12),TIMASK             THE
         ED    IOCBTIME(12),IOCBFWDW              IOCB
         ST    R1,IOCBFWDW                            FOR
         MVC   IOCBTIME+13(9),DAYMASK                    SCREEN
         ED    IOCBTIME+13(9),IOCBFWDW                         SERVICE
         MVC   IOCBTIME+12(4),SPACER             USAGE
         MVC   IOCBCTRL(5),BUFPOS                     LATER
         TM    IOCBFLGC,IOCBCINT
         BO    NOINTV
         L     R14,IOCBWAIT
         CVD   R14,IOCBISWK
         MVC   IOCBSSTH,=XL5'F0204B2120'
         ED    IOCBSSTH(5),IOCBISWK+6
         MVC   IOCBITVL(12),=CL12' INTERVAL = '
NOINTV   EQU   *
         MVC   IOCBSHOW(L'IOCBSHOW),SPACEZ    CLEAR INTERVAL AREA
         MVC   IOCBEND(L'IOCBEND),SPACEZ      CLEAR INTERVAL AREA
         CLC   IOCBNAME(8),=CL8'AAAAAAAA'
         BL    SPCNAM
         CLC   IOCBNAME(8),=CL8'ZZZZZZZZ'
         BH    SPCNAM
         B     ROUTINE
SPCNAM   EQU   *
         MVC   IOCBNAME(8),SPACEZ
ROUTINE  EQU   *
         MVC   IOCBSHOW,NAM#A
         TM    IOCBFLGS,IOCBFNRD+IOCBFNWR
         BZ    NN#W .    READ + WRITE = WAITING
         BO    NN#H .    NOREAD + NOWRITE = HALTED
         TM    IOCBFLGS,IOCBFNRD
         BNO   NN#X .    WRITE + NOREAD = RUNNING
NN#R     MVC   IOCBSHOW,NAM#R     DISPLAY
         B     NN#END                    AN
NN#W     MVC   IOCBSHOW,NAM#W              ACTION
         B     NN#END                            MODIFIER
NN#H     MVC   IOCBSHOW,NAM#H                            ON
         B     NN#END                                      STATUSLINE
NN#X     MVC   IOCBSHOW,NAM#A
         B     NN#END
NAM#A    DC    CL11'  ACTIVE  '
NAM#R    DC    CL11'  RUNNING '
NAM#B    DC    CL11'  WORKING '
NAM#H    DC    CL11'  HALTED  '
NAM#W    DC    CL11'  WAITING '
NN#END   DS    0H
         EJECT
*
*
*        T E R M I N A L   R O U T I N E  S E L E C T I O N
*
*
         LR    R1,R10
         TM    IOCBFLGT,IOCBTCMD
         BO    CMDGOT
         TM    IOCBFLGT,IOCBTTSO
         BO    TSOGOT
         TM    IOCBFLGT,IOCBTBSC
         BO    BTAMGOT
         EX    0,*       INVALID TERMINAL TYPE
TSOGOT   EQU   *
         L     R15,TSO$IOS
         BR    R15                          GO TO TSO IO SERVICE
BTAMGOT  EQU   *
         ST    R10,TDCBIOCB-TDCB(R5)
         L     R15,BTAM$IOS
         BR    R15                          GO TO BTAM IO SERVICE
CMDGOT   EQU   *
         L     R15,CMD$IOS
         BR    R15                          GO TO TSO IO SERVICE
TSO$IOS  DC    V(TERMIO$)
BTAM$IOS DC    V(TERMIO@)
CMD$IOS  DC    V(TERMIOWT)
TIMASK   DC    XL12'F021207A20207A20204B2020'
DAYMASK  DC    X'40202020214B202020'
SPACER   DC    CL5' ON '
BUFPOS   DC    XL5'115C6F1DE8'
SPACEZ   DC    CL80' '
PPATCH   DC    20CL8'-TERMIO#'
         LTORG
IOCB     DSECT
         IOCB
         EJECT
TDCB     TDCB
         DCMSUPT
         EJECT
WORK     DSECT
         DS    18F                SAVE AREA
         WRITE DECBW,SF,MF=L
         READ  DECBR,SF,MF=L
FLAGS    DS    H
READING  EQU   X'80'
WRITING  EQU   X'40'
CLEARED  EQU   X'20'
LASTOPR  EQU   X'10'
LASTOPW  EQU   X'08'
FMTHEAD  DS    CL6
DSECSIZE DS    F
BUFFER   DS    CL2100
LOCAL    DS    0F
WORKLEN  EQU   *-WORK
         END
