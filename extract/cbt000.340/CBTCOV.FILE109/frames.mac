         TITLE 'FRAMES -- DCMS FRAME TABLE DISPLAY'
US1NG    OPSYN USING
USING    OPSYN
DR0P     OPSYN DROP
DROP     OPSYN
FRAMES   CSECT
*  INITIALIZE THE PROGRAM
         SAVE  (14,12)
         LR    R11,R15                 PERMANENT BASE
         USING FRAMES,R11
         GETMAIN R,LV=WORKLEN,SP=1     BUILD THE WORK AREA
         LR    R10,R1
         LR    R2,R10                  WORK AREA START
         LA    R3,WORKLEN              LENGTH TO CLEAR
         SR    R5,R5                   ZERO PAD BYTE, LENGTH 2
         MVCL  R2,R4                   CLEAR THE WORK AREA
         USING WORKAREA,R10
         ST    R13,SAVE+4              CHAIN THE SAVE AREAS
         LA    R15,SAVE
         ST    R15,8(R13)
         LR    R13,R15                 NEW SAVE AREA
         LA    R2,IOAREA               START OF IO BUFFER
         LA    R3,IOLEN                SIZE OF IO BUFFER
         LA    R5,C' '                 PAD BYTE
         SLL   R5,24                   MOVE TO HIGH ORDER BYTE
         MVCL  R2,R4                   CLEAR THE IO BUFFER
         EJECT
         INUSE
***********************************************************************
*
*   INITIALIZE SOME STUFF TO REDUCE CONTROL BLOCK USAGE
*
***********************************************************************
         SPACE 2
         L     R1,CVTPTR
         USING CVT,R1
         MVC   NUCB,CVTNUCB+1          GET FIRST PART OF NUC BOUNDARY
         MVC   EORM,CVTEORM+1          GET FIRST PART OF END OF STORAGE
         L     R1,CVTPVTP              GET PAGE VECTOR TABLE ADDR
         USING PVT,R1
         MVC   FIRSTF,PVTFPFN          GET FIRST PAGE INDEX
         MVC   LASTF,PVTLPFN           GET LAST PAGE INDEX
         MVC   PFTORG,PVTPFTP          GET PAGE TABLE VIRT ORIGIN
         DROP  R1
         SPACE 2
* SET UP  THE  JOB IDS
         LA    R1,9                    NUMBER TO SET UP
         LA    R2,JOBN1                FIRST ONE TO SET UP
         LA    R3,C'1'                 FIRST CHAR TO STORE
JIDLOOP1 STC   R3,0(R2)                SAVE THE CHAR
         LA    R2,9(R2)                NEXT ENTRY
         LA    R3,1(R3)                NEXT CHAR
         BCT   R1,JIDLOOP1             LOOP THRU FIRST NINE
         MVI   JOBN0,C'0'              AND ADD THE LAST ONE
         MVC   JOBN1+1(8),=CL8'*MASTER*'
         MVC   JOBN2+1(8),=CL8'JES3'
         MVC   JOBN3+1(8),=CL8'TCAM00'
         MVC   GLOBID,=C'ABCLNSV?'     SET UP GLOBAL IDS
         SPACE 2
***********************************************************************
*
*     FORMAT THE OUTPUT SCREEN
*
***********************************************************************
         SPACE 2
* FIRST  SHOW  THE JOB IDENTIFIERS
FORMAT   LA    R1,10                   NUMBER OF JOBNAMES TO SHOW
         LA    R2,OUT1+69              PLACE TO PUT STUFF
         LA    R3,JOBN1                ADDR OF FIRST JOB ID
JIDLOOP2 MVC   0(1,R2),0(R3)           ID BYTE
         MVI   1(R2),C'='              MAKE IT LOOK NICE
         MVC   2(8,R2),1(R3)           SHOW JOBNAME
         LA    R2,79(R2)               NEXT LINE
         LA    R3,9(R3)                NEXT JOBID
         BCT   R1,JIDLOOP2             DO THEM ALL
         LA    R1,8                    NUMBER OF GLOBAL IDS
         LA    R3,GLOBID               START OF ID BYTES
         LA    R4,GLOBNAME             NAME TABLE
GIDLOOP1 MVC   0(1,R2),0(R3)           MOVE IN ID
         MVI   1(R2),C'='
         MVC   2(8,R2),0(R4)           MOVE IN NAME
         LA    R2,79(R2)               NEXT LINE
         LA    R3,1(R3)                NEXT ID BYTE
         LA    R4,8(R4)                NEXT NAME
         BCT   R1,GIDLOOP1             DO ALL 8
         LA    R2,16                   NUMBER OF LINES TO FORMAT
         LA    R3,OUT1                 START OF DISPLAY LINES
         SR    R5,R5                   START WITH FIRST FRAME
NEWLINE  LA    R4,64                   FRAMES PER LINE
         STCM  R5,3,TEMP1              NEED TO CONVERT FRAME INDEX
         UNPK  TEMP2(5),TEMP1(3)       TO PRINTABLE HEX
         MVC   0(3,R3),TEMP2           COPY TO SCREEN AREA
         TR    0(3,R3),HEXTAB          CONV TO HEX
NEWFRAME IC    R0,INDNUC               TRY NUCLEUS FIRST
         CLM   R5,3,NUCB               SEE IF FRAME IS IN NUC
         BL    GOTIT                   BR IF YES
         LR    R1,R5                   COPY FRAME INDEX
         A     R1,PFTORG               GET FRAME TABLE ENTRY
         USING PFTE,R1
         CLM   R5,3,FIRSTF             SEE IF IN FRAME TABLE
         BL    WHOISIT                 BR IF NOT
         CLM   R5,3,LASTF
         BH    WHOISIT
         IC    R0,INDAVAIL             TRY AVAIL QUEUE
         TM    PFTFLAG1,PFTONAVQ       SEE IF FRAME AVAIL
         BO    GOTIT                   BR IF YES
         IC    R0,INDBAD               ASSUME ITS A BAD FRAME
         TM    PFTFLAG1,PFTBADPG       SEE IF IT IS
         BO    GOTIT                   BR IF YES
         IC    R0,INDVIO               ASSUME ITS VIO
         TM    PFTFLAG2,PFTIRRG        SEE IF IT IS
         BO    GOTIT
         IC    R0,INDLOCAL             TRY LOCAL PAGES
         TM    PFTQNDX,PFTLFQN         LOCAL OR LSQA
         BZ    NOTLOCAL                BR IF NOT
         LH    R6,PFTASID              GET ASID
         SLL   R6,2                    MAKE IT FULLWORD INDEX
         L     R15,CVTPTR              CVT ADDR
         USING CVT,R15
         L     R15,CVTASVT             ASVT ADDR
         DROP  R15
         L     R6,X'20C'(R6,R15)       GETASCB ADDRESS
         USING ASCB,R6
         ICM   R15,15,ASCBJBNS         SEE IF JOB NAME POINTER
         BNZ   GOTJN                   BR IF PRESENT
         ICM   R15,15,ASCBJBNI         TRY THE OTHER POINTER
         BZ    GOTIT                   NO NAME, JUST STORE THE 'L'
GOTJN    LA    R6,JOBN1                GET FIRST TABLE ENTRY
         DROP  R6
         LA    R14,10                  NUMBER OF ENTRIES TO TRY
JIDLOOP3 IC    R0,0(R6)                PICK UP THE INDICATOR BYTE
         CLC   0(8,R15),1(R6)          SEE IF JOBNAME MATCH
         BE    GOTIT                   USE INDICATOR IF YES
         LA    R6,9(R6)                POINT TO NEXT JOBID
         BCT   R14,JIDLOOP3            TRY ALL 10
         IC    R0,INDLOCAL             ELSE JUST USE LOCAL FLAG
         B     GOTIT
NOTLOCAL IC    R0,INDSQA               TRY FOR SQA OR SQA RESV
         TM    PFTQNDX,PFTSRQN
         BO    GOTIT                   BR IF YES
         IC    R0,INDCOM               TRY COMMON AREA
         TM    PFTQNDX,PFTCFQN
         BO    GOTIT                   BR IF YES
WHOISIT  IC    R0,INDWHO               UNKNOWN PAGE FRAME
GOTIT    STC   R0,4(R3)                ADD CHAR TO SCREEN IMAGE
NEXTF    LA    R3,1(R3)                NEXT FRAME LOCATION
         LA    R5,16(R5)               NEXT FRAME INDEX
         CLM   R5,3,EORM               SEE IF BEYOND END
         BNL   ENDFRAME                BR IF LAST FRAME PASSED
         BCT   R4,NEWFRAME             GO TRY NEXT FRAME
         LA    R3,OUT2-OUT1-64(R3)     NEXT SCREEN LINE
         BCT   R2,NEWLINE
ENDFRAME EQU   *
         SPACE 2
* FALL  THRU TO SHOW THE SCREEN
         EJECT
* DISPLAY THE PAGE AND CHECK FOR END REQUEST
DISPLAY  TRMIO IOCB,FORMAT=SCR1,IMAGE=IOAREA
         CLI   IOCBAID,AIDPA1          SEE IF PA1 HIT
         BE    ENDIT                   IF YES, GO AWAY
         CLI   IOCBAID,X'F0'           SEE IF MIGHT BE PFK
         BH    TRYPFK1                 F1-F9 MEAN PFK 1-9
         CLI   IOCBAID,X'7C'           7A-7C ARE PFK 10-12
         BNH   TRYPFK2                 FALL THRU IF NOT PFK
NOTPFK   CLI   IOCBAID,AIDENT          SEE IF ENTER HIT
         BNE   DISPLAY                 IF NOT, DISPLAY AGAIN
         CLC   =C'END',INPLINE         SEE IF END TYPED
         BNE   READINP                 IF NOT, GO LOOK AT INPUT
* CLEAN UP AND GO AWAY
ENDIT    L     R13,SAVE+4              GET ORIGINAL SAVE AREA
         FREEMAIN R,LV=WORKLEN,SP=1,A=(R10)
         RETURN (14,12),RC=0
* READ CHANGEABLE FIELDS AND SAVE THEM
READINP  LA    R1,10                   NUM OF JOBNAME FIELDS
         LA    R2,OUT1+69              START OF FIRST ONE
         LA    R3,JOBN1                FIRST JOBID SAVE AREA
JIDLOOP4 MVC   0(1,R3),0(R2)           MOVE ID BYTE
         MVC   1(8,R3),2(R2)           MOVE JOBNAME
         LA    R2,79(R2)               TRY NEXT SCREEN LINE
         LA    R3,9(R3)                NEXT JOBID SAVE AREA
         BCT   R1,JIDLOOP4             DO ALL 10 OF THEM
         LA    R1,8                    NUMBER OF GLOBAL ID CHARS
         LA    R3,GLOBID               GLOBAL ID BYTES
GIDLOOP  MVC   0(1,R3),0(R2)           MOVE ID BYTE
         LA    R2,79(R2)               NEXT LINE
         LA    R3,1(R3)                NEXT ID BYTE
         BCT   R1,GIDLOOP              DO ALL 8 OF THEM
         B     FORMAT                  AND SHOW THE SCREEN
* PFK HANDLING HERE
TRYPFK1  CLI   IOCBAID,X'F9'           SEE IF WITHIN PFK 1-9
         BH    NOTPFK                  BR IF NOT
TRYPFK2  CLI   IOCBAID,X'7A'           SEE IF ABOVE FLOOR
         BL    NOTPFK                  BR IF NOT
         IC    R15,IOCBAID             GET THE PFK
         LA    R0,15                   PREPARE TO ISOLATE LOW DIGIT
         NR    R15,R0
         SLL   R15,2                   TURN PFK INTO AN INDEX
         B     *(R15)                  FIRST PFK IS 1
         B     DISPLAY                 IGNORE PFK 1
         B     DISPLAY                 IGNORE PFK 2
         B     DISPLAY                 IGNORE PFK 3
         B     DISPLAY                 IGNORE PFK 4
         B     DISPLAY                 IGNORE PFK 5
         B     DISPLAY                 IGNORE PFK 6
         B     DISPLAY                 IGNORE
         B     DISPLAY                 IGNORE
         B     DISPLAY                 IGNORE PFK 9
         B     DISPLAY                 IGNORE
         B     DISPLAY                 IGNORE
         B     DISPLAY                 IGNORE PFK 12
         EJECT
*----------------------------------------------------------------------
*
*              CONSTANTS AND SUCH
*
*----------------------------------------------------------------------
* NAMES  FOR   GLOBAL ID BYTES
GLOBNAME DC    CL8'AVAIL',CL8'BAD',CL8'COMMON',CL8'LOCAL'
         DC    CL8'NUCLUES',CL8'SQA',CL8'VIO',CL8'UNKNOWN'
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE  2
*  SCREEN FORMAT
SCR1     SFMT
MSGLINE  FIELD 79
OUT1     FIELD 79,ALPHA,ROW=3
OUT2     FIELD 79,ALPHA
OUT3     FIELD 79,ALPHA
OUT4     FIELD 79,ALPHA
OUT5     FIELD 79,ALPHA
OUT6     FIELD 79,ALPHA
OUT7     FIELD 79,ALPHA
OUT8     FIELD 79,ALPHA
OUT9     FIELD 79,ALPHA
OUT10    FIELD 79,ALPHA
OUT11    FIELD 79,ALPHA
OUT12    FIELD 79,ALPHA
OUT13    FIELD 79,ALPHA
OUT14    FIELD 79,ALPHA
OUT15    FIELD 79,ALPHA
OUT16    FIELD 79,ALPHA
OUT17    FIELD 79,ALPHA
OUT18    FIELD 79,ALPHA
OUT19    FIELD 79,ALPHA
INPLINE  FIELD 79,ALPHA,ROW=22,CURSOR=YES
         SFEND
         LTORG
         SPACE 2
WORKAREA DSECT
PFTORG   DS    F                       APPARENT VIRT ADDR OF FRAME TAB
NUCB     DS    H                       HIGH HALFWORD OF CVTNUCB
FIRSTF   DS    H                       FIRST PAGE FRAME INDEX
LASTF    DS    H                       LAST PAGE FRAME INDEX
EORM     DS    H                       HIGH HALFWORD OF CVTEORM
IOCB     IOCB
SAVE     DS    18F
IOAREA   EQU   *
         DSGEN SCR1
IOLEN    EQU   *-IOAREA
TEMP1    DS    CL8
TEMP2    DS    CL8
JOBN1    DS    CL9                     JOB IDENTIFIERS
JOBN2    DS    CL9                     ALL MUST BE SEQUENTIAL
JOBN3    DS    CL9
JOBN4    DS    CL9
JOBN5    DS    CL9
JOBN6    DS    CL9
JOBN7    DS    CL9
JOBN8    DS    CL9
JOBN9    DS    CL9
JOBN0    DS    CL9
GLOBID   DS    0CL8                    FOLLOWING ARE GLOBAL IDS
INDAVAIL DS    X
INDBAD   DS    X
INDCOM   DS    X
INDLOCAL DS    X
INDNUC   DS    X
INDSQA   DS    X
INDVIO   DS    X
INDWHO   DS    X
WORKLEN  EQU   *-WORKAREA
         PRINT NOGEN
CVT      DSECT
         CVT
         IHAPVT
         IHAPFTE
         IHAASCB
R0       EQU 0
R1 EQU 1
R2 EQU 2
R3 EQU 3
R4 EQU 4
R5 EQU 5
R6 EQU 6
R7 EQU 7
R8 EQU 8
R9 EQU 9
R10 EQU 10
R11 EQU 11
R12 EQU 12
R13 EQU 13
R14 EQU 14
R15 EQU 15
*        END
 END
