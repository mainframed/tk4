STAT     TITLE  'DCMS SYSTEM STATUS SCREEN GENERATOR'
         EJECT
STATSUB  DCMSTART R,LV=8192,STAE=NO,IOCB=NO
*
**   MODIFIED TO USE DSECTS AND CREATE ALL LINES
*                                                GUY L. ALBERTELLI
*                                                06/14/78
*                                                B F GOODRICH
*                                                500 S. MAIN STREET
*                                                AKRON, OHIO 44318
         EJECT
*        LA    R0,CHNNLS          CLEAR
*        L     R1,=A(4*278)            OUT
*        SR    R14,R14                    COUNTERS
*        SR    R15,R15                            EACH
*        MVCL  R0,R14                                 ENTRY
         LA    R3,4095(13)      POINT TO SCREEN
         LA    R3,1(R3)        BUILDING IMAGE
         LR    R4,R3
         LM    R5,R7,CHARS      MOVE IN CHARACTERS
         MVCL  R4,R6
*
**  SET UP INTERVAL AND TIME OF DAY
*
         TIME  BIN
         LR    R1,R0
         S     R0,LAST           GET INTERVAL
         LTR   R0,R0            VALID?
         BP    VALID              YES,BRANCH
         LA    R0,1              SET UP DEFAULT
VALID    EQU   *
         ST    R0,INTVAL         STORE INTERVAL...
         ST    R1,LAST           ...AND NEW VALUE
*
**  GET PAGE/SWAP/VIO RATES
*
         L     R4,16             ---> CVT...
         L     R5,CVTPVTP-CVTMAP(R4)  ---> PVT
         USING PVT,R5
         LA    R4,PVTNPIN
         LA    R8,8              NO OF ENTRIES.
         LA    R9,PAGERATE
         LA    R10,830(R3)      ---> SCREEN
NXTRATE  EQU   *
         L     R6,0(R4)         PICK UP NEW VALUE
         LR    R7,R6
         S     R7,0(R9)         GET CHANGE
         ST    R6,0(R9)         STORE NEW VALUE
         SR    R6,R6
         MH    R7,=H'100'        SCALE UP
         D     R6,INTVAL         COMPUTE RATE
         SLL   R6,1              CHECK REMAINDER
         C     R6,INTVAL         FOR ROUND-UP
         BL    NORND1
         LA    R7,1(R7)         ROUND UP
NORND1   EQU   *
         CVD   R7,DWD            CONVERT TO DECIMAL...
         ED    0(6,R10),DWD+5  ...AND EDIT
         LA    R10,40(R10)
         LA    R9,4(R9)
         LA    R4,4(R4)
         BCT   R8,NXTRATE        GO FOR NEXT ENTRY
*
**  GET AVQ AND PLPA+CSA SIZE
*
         LH    R4,PVTAFC        AVQ COUNT
         CVD   R4,DWD            CONVERT TO DECIMAL...
         ED    550(6,R3),DWD+5 ...AND EDIT
         LH    R4,PVTCFMCT      CSA+PLPA COUNT
         CVD   R4,DWD            CONVERT TO DECIMAL...
         ED    150(6,R3),DWD+5 ...AND EDIT
         DROP  R5
*
**  GET PRIMARY AND SECONDARY SLOT USAGES
*
         L     R4,16          ---> CVT...
         L     R4,CVTASMVT-CVTMAP(R4)  ---> ASMVT
         USING ASMVT,R4
         L     R5,ASMSLOTS   PRIMARY TOTAL
         CVD   R5,DWD         CONVERT TO DECIMAL...
         ED    1151(6,R3),DWD+5 ...AND EDIT
         MVI   1151(R3),C'/'  RESET FILL CHARACTER
         L     R5,ASMVSC     VIO SLOTS
         A     R5,ASMNVSC    +NON-VIO SLOTS
         A     R5,ASMERRS     +BAD SLOTS
         CVD   R5,DWD          CONVERT TO DECIMAL...
         ED    1145(6,R3),DWD+5   ...AND EDIT
* INFO NOT AVAILABLE IN 1/78 SU LEVEL TABLES
*        L     R5,448(R4)     SECONDARY TOTAL
*        CVD   R5,DWD          CONVERT TO DECIMAL...
*        ED    1191(6,R3),DWD+5   ...AND EDIT
*        MVI   1191(R3),C'/'   REMOVE FILL CHARACTER
*        L     R5,452(R4)     SECONDARY USED
*        CVD   R5,DWD          CONVERT TO DECIMAL...
*        ED    1185(6,R3),DWD+5   ...AND EDIT
         DROP  R4
*
**  GET PAGE AND CPU UTILIZATIONS - ZERO COUNTERS
*
         LA    R4,SYSCPU        AREA START
         LA    R5,56            AREA LENGTH
         SR    R6,R6
         SR    R7,R7
         MVCL  R4,R6
*
         L     R4,16        ---> CVT...
         L     R4,CVTASVT-CVTMAP(R4)  ---> ASVT
         LA    R4,ASVTENTY-ASVT(R4)    ---> ASVT Q.
NXTONE   EQU   *
         L     R5,0(R4)
         LA    R5,0(R5)    REMOVE TOP BYTE
         LTR   R5,R5       END OF Q?
         BZ    ENDQ          YES,BRANCH
         TM    0(R4),X'80'  IN USE?
         BZ    INCPTR        YES,BRANCH ROUND
NOASCB   EQU   *
         LA    R4,4(R4)    ---> NEXT ENTRY
         B     NXTONE
INCPTR   EQU   *
         USING ASCB,R5
         USING OUCB,R6
         CLC   0(4,R5),=C'ASCB'  VALID ASCB?
         BNE   NOASCB             NO,BRANCH
         L     R6,ASCBOUCB      ---> OUCB
         CLC   0(4,R6),=C'OUCB'  VALID OUCB?
         BNE   NOASCB             NO,BRANCH
*
**  FIND TYPE OF ADDRESS SPACE AND INCREMENT TOTALS
*
         L     R7,ASCBJBNI     ---> JOBNAME
         LTR   R7,R7           BATCH?
         BZ    NOTBATCH          NO,BRANCH
*
**  CHECK FOR IMS OR ICOM  BATCH JOBS
*
         BAL   R14,USERCHCK     CHECK JOB NAME
         BE    IMSCICS           IF SO THEN GO UPDATE IT
*
**  ADD ONTO BATCH TOTALS
*
         LH    R7,ASCBFMCT        FRAME COUNT
         A     R7,PAGBAT           ADD RUNNING TOTAL...
         ST    R7,PAGBAT           ...AND STORE
         L     R7,BATUSER          BATCH COUNT
         LA    R7,1(R7)           INCREMENT...
         ST    R7,BATUSER          ...AND STORE
         TM    ASCBRCTF,ASCBTMNO+ASCBOUT   OUT?
         BZ    NOTOUT
         L     R7,BOUTUSER         LOAD OUT COUNT
         LA    R7,1(R7)           INCREMENT
         ST    R7,BOUTUSER         AND STORE
         B     NOTIN
NOTOUT   EQU   *
         L     R7,BINUSER          LOAD IN COUNT
         LA    R7,1(R7)           INCREMENT
         ST    R7,BINUSER          AND STORE
NOTIN    EQU   *
         LA    R7,BATCPU           ---> CPU COUNTER...
         B     INCPU                ...AND BRANCH TO ADD
NOTBATCH EQU   *
         TM    OUCBYFL,OUCBLOG      TSO USER
         BZ    NOTSO                 NO,BRANCH
         LH    R7,152(R5)          PAGE COUNT
         A     R7,PAGTSO            ADD TO RUNNING COUNT...
         ST    R7,PAGTSO            ...AND STORE
         L     R7,TSOUSER           LOAD TSO USER COUNT
         LA    R7,1(R7)            INCREMENT...
         ST    R7,TSOUSER           ...AND STORE
         LA    R7,TSOCPU            ---> CPU COUNTER...
         B     INCPU                 ...AND BRANCH TO ADD
NOTSO    EQU   *
         L     R7,ASCBJBNS         ---> JOBNAME
         LTR   R7,R7
         BZ    NOASCB                BRANCH IF INVALID
         BAL   R14,USERCHCK     CHECK FOR IMS OR ICOM
         BE    IMSCICS           OUT IF FOUND
         CLC   0(8,R7),INIT         SPARE INITIATOR?
         BNE   NOTINIT               NO,BRANCH
         L     R7,INITUSER          LOAD INIT COUNT
         LA    R7,1(R7)            INCREMENT...
         ST    R7,INITUSER          ...AND STORE
         B     NOTSYS
NOTINIT  EQU   *
         L     R7,SYSUSER           LOAD SYSTEM COUNT
         LA    R7,1(R7)            INCREMENT...
         ST    R7,SYSUSER           ...AND STORE
NOTSYS   EQU   *
         LH    R7,ASCBFMCT         PAGE COUNT
         A     R7,PAGSYS            ADD TO RUNNING TOTAL...
         ST    R7,PAGSYS            ...AND STORE
         LA    R7,SYSCPU            ---> CPU COUNTER...
         B     INCPU                 ...AND BRANCH TO ADD
IMSCICS  EQU   *
         LH    R7,ASCBFMCT       LOAD PAGE COUNT
         A     R7,PAGIMS          ADD TO RUNNING TOTAL
         ST    R7,PAGIMS          AND STORE
         LA    R7,IMSCPU
INCPU    EQU   *
*
**  INCREMENT CPU COUNTERS
*
         ICM   R9,15,ASCBEJST+1 STEP TIME
         ICM   R8,15,ASCBSRBT+1 SRB TIME
         AR    R8,R9
         LR    R9,R8
         LH    R6,ASCBASID      ASID
         SLL   R6,2              SHIFT TO USE AS INDEX...
         S     R9,CPUSAGE(R6)   ...INTO CPU COUNTERS
         ST    R8,CPUSAGE(R6)   STORE NEW VALUE
         LTR   R9,R9
         BM    NOASCB         DONT ADD ON IF NEGATIVE
         A     R9,0(R7)         ADD TO TOTAL FOR TYPE
         ST    R9,0(R7)         AND STORE
         B     NOASCB             TRY NEXT
ENDQ     EQU   *
         DROP  R5,R6
*
**  WRITE OUT CPU FIELDS
*
         LA    R6,4              NUMBER OF ENTRIES
         LA    R7,190(R3)       ---> SCREEN
         LA    R8,BATCPU         ---> NEXT ENTRY
         L     R5,SYSCPU         BATCH CPU TOTAL
NXTCPU   EQU   *
         SR    R4,R4
         SLDL  R4,12
         D     R4,=F'100'
         SR    R4,R4
         D     R4,INTVAL         CALCULATE RATE
         SLL   R4,1              LOOK FOR REMAINDER
         C     R4,INTVAL
         BL    NORND2
         LA    R5,1(R5)         ROUND UP
NORND2   EQU   *
         CVD   R5,DWD            CONVERT TO DECIMAL...
         ED    0(6,R7),DWD+5     ...AND EDIT
         LA    R7,80(R7)        ---> NEXT SLOT
         L     R5,0(R8)         NEXT VALUE
         LA    R8,4(R8)         ---> NEXT VALUE
         BCT   R6,NXTCPU         PROCESS NEXT ENTRY
*
**  EDIT PAGE FIELDS
*
         LA    R6,4              NUMBER OF ENTRIES
         LA    R7,230(R3)       ---> SCREEN
         LA    R8,PAGSYS         ---> PAGE COUNTS
NXTPAG   EQU   *
         L     R5,0(R8)         LOAD PAGE COUNT
         CVD   R5,DWD            CONVERT TO DECIMAL
         ED    0(6,R7),DWD+5     AND EDIT
         LA    R7,80(R7)        ---> NEXT SLOT
         LA    R8,4(R8)         ---> NEXT VALUE
         BCT   R6,NXTPAG         PROCESS NEXT ENTRY
*
**  EDIT USER COUNTS
*
         LA    R6,6            NUMBER OF ENTRIES
         LA    R7,590(R3)     ---> SCREEN
         LA    R8,SYSUSER      ---> VALUE
NXTCNT   EQU   *
         L     R5,0(R8)       LOAD USER COUNT
         CVD   R5,DWD          CONVERT TO DECIMAL...
         ED    0(6,R7),DWD+5     ...AND EDIT
         LA    R7,40(R7)      ---> NEXT SLOT
         LA    R8,4(R8)       ---> NEXT VALUE
         BCT   R6,NXTCNT       PROCESS NEXT ENTRY
*
**  LOOK THRU SRM CONTROL BLOCKS
*
         L     R4,16           ---> CVT...
         L     R4,CVTOPCTP-CVTMAP(R4)  ---> RMCT...
         USING RMCT,R4
         USING CCT,R5
         L     R5,RMCTCCT     ---> CCT
         LH    R6,CCVUTILP        CPU UTILIZATION
         CVD   R6,DWD              CONVERT TO DECIMAL...
         ED    510(6,R3),DWD+5     ...AND EDIT
         TM    CCTFLG1,CCTALL      LOW PRIORITY USER?
         BZ    NOFLG1
         MVC   1440(25,R3),MSG1    MOVE IN MESSAGE
NOFLG1   EQU   *
         L     R5,RMCTICT        ---> ICT
         USING ICT,R5
*
**  PUT UP UNDER/OVER UTILIZED BITS
*
         L     R7,ICVOLCBT      OVER-UTILIZED
         LA    R8,4
         LA    R9,1270(R3)       ---> SCREEN
NXTFLG1  EQU   *
         SR    R6,R6
         SLDL  R6,1
         LTR   R6,R6             TEST BIT SHIFTED
         BZ    NOFLG2
         MVI   0(R9),C'1'         SET ON IN SCREEN
NOFLG2   EQU   *
         LA    R9,1(R9)          ---> NEXT SCREEN CHAR
         BCT   R8,NXTFLG1
         L     R7,ICVULCBT      UNDER-UTILIZED
         LA    R8,4
         LA    R9,1230(R3)      ---> SCREEN
NXTFLG2  EQU   *
         SR    R6,R6
         SLDL  R6,1
         LTR   R6,R6            TEST TOP BIT
         BZ    NOFLG3
         MVI   0(R9),C'1'        SET BIT ON IN SCREEN
NOFLG3   EQU   *
         LA    R9,1(R9)         ---> NEXT SCREEN CHAR
         BCT   R8,NXTFLG2
*
**  TEST FOR FLAGS IN ICT
*
         TM    ICTFLAGS,ICTIOL   LOAD BALANCING?
         BZ    NOFLG4
         MVC   1468(25,R3),MSG2  MOVE IN MESSAGE
NOFLG4   EQU   *
         TM    ICTFLAGS,ICTIOOT  CHANNEL OUT OF BALANCE?
         BZ    NOFLG5
         MVC   1495(25,R3),MSG3   MOVE IN MESSAGE
NOFLG5   EQU   *
*
**  TEST FLAGS IN MCT
*
         L     R5,RMCTMCT          ---> MCT
         USING MCT,R5
         TM    MCTSFLGS,MCTSQA1     SQA FIRST LEVEL?
         BZ    NOFLG6
         MVC   1520(25,R3),MSG4     MOVE IN MESSAGE
NOFLG6   EQU   *
         TM    MCTSFLGS,MCTSQA2     SQA SECOND LEVEL?
         BZ    NOFLG7
         MVC   1548(25,R3),MSG5     MOVE IN MESSAGE
NOFLG7   EQU   *
         TM    MCTSFLGS,MCTAVQ1     AVQ LOW?
         BZ    NOFLG8
         MVC   1575(25,R3),MSG6     MOVE IN MESSAGE
NOFLG8   EQU   *
         TM    MCTOFLGS,MCTASM1     ASM FIRST LEVEL?
         BZ    NOFLG9
         MVC   1600(25,R3),MSG7     MOVE IN MESSAGE
NOFLG9   EQU   *
         TM    MCTOFLGS,MCTASM2     ASM SECOND LEVEL?
         BZ    NOFLG10
         MVC   1628(25,R3),MSG8     MOVE IN MESSAGE
NOFLG10  EQU   *
*
**  PUT IN SYSTEM WORKLOAD
*****INFO NOT AVAILABLE IN RMCA OF 1/78 SU LEVEL
*
*        L     R5,20(R4)        ---> RMCA
*        LH    R5,6(R5)         SYSTEM WORKLOAD*256
*        MH    R5,=H'100'        SCALE UP
*        SRA   R5,8              DIVIDE BY 256
*        CVD   R5,DWD            CONVERT TO DECIMAL
*        ED    110(7,R3),DWD+5    AND EDIT IN
*
**  FIND UCM - ANY JOBS WAITING FOR WTO BUFFERS?
*
         L     R4,16             ---> CVT...
         L     R4,CVTCUCB-CVTMAP(R4)  ---> UCM
         LA    R4,256(R4)       ---> WTO BUFFER QUEUE
         C     R4,0(R4)         ANY ENTRIES?
         BE    NOFLG11
         MVC   1655(25,R3),MSG9  MOVE IN MESSAGE
NOFLG11  EQU   *
*
**  FIND LCH TABLE
*
         L     R4,16             ---> CVT
         L     R4,CVTILCH-CVTMAP(R4)  ---> LCH TABLE
         LA    R5,CHNNLS         ---> CHANNEL COUNTERS
         LA    R6,4              NUMBER OF ENTRIES
         LA    R7,1310(R3)      ---> SCREEN
NXTCHNL  EQU   *
         LH    R8,24(R4)        NUMBER OF I/O REQUESTS
         LR    R9,R8
         S     R9,0(R5)          COMPUTE RATE
         ST    R8,0(R5)          STORE NEW VALUE
         SR    R8,R8
         LTR   R9,R9             VALID?
         BP    OKCHNNL
         SR    R9,R9
OKCHNNL  EQU   *
         MH    R9,=H'100'         SCALE UP
         D     R8,INTVAL          GET RATE
         SLL   R8,1               CHECK REMAINDER
         C     R8,INTVAL
         BL    NORND3
         LA    R9,1(R9)          ROUND UP
NORND3   EQU   *
         CVD   R9,DWD             CONVERT TO DECIMAL
         ED    0(6,R7),DWD+5      AND EDIT
         LA    R7,40(R7)         ---> NEXT SCREEN SLOT
         LA    R5,4(R5)
         LA    R4,32(R4)         ---> NEXT ENTRY
         BCT   R6,NXTCHNL
         LA    R14,LINES         MOVE OUT 20 LINES
         L     R1,PARMADDR
         L     R1,0(R1)
         LA    R15,4095(R13)
         LA    R15,80(R15)
         LA    R15,1(R15)
MOVELOOP EQU   *
         MVC   0(79,R1),0(R15)
         LA    R1,79(R1)
         LA    R15,80(R15)
         BCT   R14,MOVELOOP
*
*
         B     EXIT
         EJECT
*
**  THIS SUBROUTINE WILL CHECK FOR IMS AND ICOM JOB NAMES
*
*
*    ON INPUT R7 POINTS TO 8 CHARACTER JOBNAME
*
USERCHCK DS    0H
         CLC   0(8,R7),=CL8'FECONTL'
         BER   R14
         CLC   0(8,R7),=CL8'PMISPROD'
         BER   R14
         CLC   0(8,R7),=CL8'PMISTEST'
         BER   R14
         CLC   0(3,R7),=C'IMS'
         BER   R14
         CLC   0(3,R7),=C'ICC'
         BNER  R14
         CLC   4(3,R7),=C'BMP'     LOOK FOR ICCH JOBS
         BR    R14
*
*
*
*
*
**  LITERALS AND CONSTANTS
*
         LTORG
LINES    EQU   20                  **NUMBER OF LINES OF OUTPUT GENERATE
CHARS    DC    A(LINES*80)
         DC    A(TITLES)
         DC    A(LINES*80)
TOD      DC    X'000000000C'
INTVAL   DC    F'0'
LAST     DC    F'0'
INIT     DC    CL8'INIT'
MSG1     DC    CL25'LOW PRTY USER NOT DISP'
MSG2     DC    CL25'I/O LOAD BALANCING ACTIVE'
MSG3     DC    CL25'SOME LCHS UNBALANCED'
MSG4     DC    CL25'SQA FIRST LEVEL SHORTAGE'
MSG5     DC    CL25'SQA SECOND LEVEL SHORTAGE'
MSG6     DC    CL25'AVQ BELOW LIMIT'
MSG7     DC    CL25'ASM FIRST LEVEL SHORTAGE'
MSG8     DC    CL25'ASM SECOND LEVEL SHORTAGE'
MSG9     DC    CL25'WTO BUFFER SHORTAGE'
CHNNLS   DC    4F'0'
SYSCPU   DS    F
BATCPU   DS    F
TSOCPU   DS    F
IMSCPU   DS    F
SYSUSER  DS    F
TSOUSER  DS    F
BATUSER  DS    F
INITUSER DS    F
BINUSER  DS    F
BOUTUSER DS    F
PAGSYS   DS    F
PAGBAT   DS    F
PAGTSO   DS    F
PAGIMS   DS    F
PAGERATE DC    8F'0'
DWD      DS    D
CPUSAGE  DC    255F'0'
EXIT    DCMSTOP RC=(15),SCREEN=NO,SERV=NO,IOCB=NO
STATSUB  CSECT
*
TITLES   DC    CL80' '    NOT USED AND NOT PASSED OUT
         DC    CL30'SYSTEM WORKLOAD',C' NAVAIL',C'   '
         DC    CL30'NO OF PLPA+CSA PAGES',X'402020202120',4C' '
         DC    CL30'SYSTEM CPU UTILIZATION',X'402020202120',C'%   '
         DC    CL30'NO OF SYSTEM PAGES',X'402020202120',4C' '
         DC    CL30'BATCH CPU UTILIZATION',X'402020202120',C'%   '
         DC    CL30'NO OF BATCH PAGES',X'402020202120',4C' '
         DC    CL30'TSO CPU UTILIZATION',X'402020202120',C'%   '
         DC    CL30'NO OF TSO PAGES',X'402020202120',4C' '
         DC    CL30'IMS+ICOM CPU UTILIZATION',X'402020202120',C'%   '
         DC    CL30'NO OF IMS+ICOM PAGES',X'402020202120',4C' '
         DC    CL30'TOTAL CPU UTILIZATION',X'402020202120',C'%   '
         DC    CL30'NO OF AVAILABLE PAGES',X'402020202120',4C' '
         DC    CL30'NO OF SYSTEM USERS',X'402020202120',4C' '
         DC    CL30'NO OF TSO USERS',X'402020202120',4C' '
         DC    CL30'NO OF BATCH USERS',X'402020202120',4C' '
         DC    CL30'NO OF SPARE INITS',X'402020202120',4C' '
         DC    CL30'NO OF BATCH USERS IN',X'402020202120',4C' '
         DC    CL30'NO OF BATCH USERS OUT',X'402020202120',4C' '
         DC    CL30'PAGE-IN RATE',X'402020202120',4C' '
         DC    CL30'PAGE-OUT RATE',X'402020202120',4C' '
         DC    CL30'VIO-IN RATE',X'402020202120',4C' '
         DC    CL30'VIO-OUT RATE',X'402020202120',4C' '
         DC    CL30'VIO RECLAIM RATE',X'402020202120',4C' '
         DC    CL30'SWAP-IN RATE',X'402020202120',4C' '
         DC    CL30'SWAP-OUT RATE',X'402020202120',4C' '
         DC    CL30'PAGE RECLAIM RATE',X'402020202120',4C' '
         DC    CL25'PRIMARY SLOT USAGE'
         DC    X'402020202120402020202120404040'
         DC    CL25'SECONDARY SLOT USAGE'
         DC    CL15'   NOT AVAIL   '
         DC    CL30'CHANNELS UNDERUTILIZED',C'0000',CL6' '
         DC    CL30'CHANNELS OVERUTILIZED',C'0000',CL6' '
         DC    CL30'CHANNEL 0 I/O RATE',X'402020202120',4C' '
         DC    CL30'CHANNEL 1 I/O RATE',X'402020202120',4C' '
         DC    CL30'CHANNEL 2 I/O RATE',X'402020202120',4C' '
         DC    CL30'CHANNEL 3 I/O RATE',X'402020202120',4C' '
         DC    4CL40' '
         EJECT
         PRINT NOGEN
ASMVT    DSECT
         ORG   ASMVT+112
ASMSLOTS DS    F                   TOTAL LOCAL SLOTS IN ALL LOCAL PGDS
ASMVSC   DS    F                   TOTAL LOCAL SLOTS ALLOCATED TO VIO
ASMNVSC  DS    F                   TOTAL LOCAL SLOTS FOR NON-VIO
ASMERRS  DS    F                   COUNT OF BAD SLOTS
         EJECT
         CVT
         IHAPVT
         IHAASVT
         IHAASCB
         IRAOUCB
         IRARMCT
         IRACCT
         IRAICT
         IRAMCT
         END
