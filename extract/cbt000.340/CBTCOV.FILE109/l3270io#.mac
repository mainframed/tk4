L327     TITLE 'DCTS I/O CONTROL TASK FOR LOCAL 3270 DEVICES'
US1NG    OPSYN USING
USING    OPSYN
DR0P     OPSYN DROP
DROP     OPSYN
L3270IO# CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SAVE  (14,12),,*
         LR    R11,R15                 GET ADDRESSABILITY
         USING L3270IO#,R11
         L     R10,0(,R1)              POINT AT THE LTT ENTRY
         USING LTT,R10
         L     R2,16                   GET CVT ADDRESS
         L     R2,0(,R2)               POINT AT NEW/OLD
         L     R2,4(,R2)               GET CURRENT TCB ADDRESS
         L     R2,12(,R2)              POINT AT THE TIOT
*
*        BEFORE GOING ANY FURTHER I SHALL CHECK TO SEE IF THE JCL IS
*        COMPATIBLE WITH THE DEFINITION IN THE LTT.
*
         LA    R2,24(,R2)              POINT AT FIRST DD ENTRY
         SR    R3,R3
         LH    R4,LTTTCNT              GET THE NUMBER OF TERMINALS
DDSCAN   CLC   LTTDDNME,4(R2)          CHECK FOR THE RIGHT DD CARD
         BE    DDFND
         IC    R3,0(,R2)               GET THE LENGTH OF THAT ENTRY
         AR    R2,R3                   MOVE TO NEXT ENTRY
         CLI   0(R2),0                 IS THAT THE END
         BE    NODDCARD                YES, VERY STRANGE
         B     DDSCAN                  GO CHECK THAT ONE
         SPACE
MOREDD   CLI   0(R2),0                 IS THERE ANOTHER ENTRY
         BE    BADDD
         CLI   4(R2),C' '              IS IT A CONCATENATION
         BNE   BADDD                   NO, NOT ENOUGH TUBES
DDFND    IC    R3,0(,R2)               GET LENGTH OF ENTRY
         AR    R2,R3                   MOVE TO NEXT ENTRY
         BCT   R4,MOREDD
         SPACE 3
         TM    DCB+48,X'10'            IS THE DCB ALREADY OPEN
         BO    BADLTT                  YES, THIS CODE IS NOT REENTRANT
         SPACE 3
*
*    NOW THAT THE JCL HAS BEEN SORT OF VALIDATED, LET BTAM HAVE IT
*
         MVC   DCB+40(8),LTTDDNME      FINISH THE DCB
         OPEN  (DCB)
         TM    DCB+48,X'10'
         BZ    BADDCB
         SPACE 3
*
*   THE TDCBS NEED TO BE INITIALIZED TO GET TO OUR TASK
*
         LA    R0,LTTRDRTE             POINT AT THE READ/WRITE NAME
         LOAD  EPLOC=(0)
         LR    R4,R0                   SAVE THE ADDRESS
         LA    R0,LTTCHK               POINT AT CHECK NAME
         LOAD  EPLOC=(0)
         LR    R5,R0                   SAVE ITS ADDRESS
         LA    R6,WORKECB              ECB USED TO REQUEST OUTPUT
         L     R3,LTTFTDCB             POINT AT FIRST TDCB
         LA    R2,1                    SET FIRST RELATIVE LINE NUMBER
         USING TDCB,R3
DCBINIT  STM   R4,R5,TDCBRDWR          SET UP I/O ROUTINE ADDRESSES
         ST    R6,TDCBLECB             SET UP WORK ECB POINTER
         MVC   TDCBTYPE(4),=C'3272'    SET TERMINAL TYPE
         ST    R2,TDCBSLID             SET RELATIVE LINE NUMBER
         LA    R2,1(,R2)               INCREMENT LINE NUMBER
         L     R3,TDCBFWDP             MOVE TO NEXT TDCB
         CH    R2,LTTTCNT              IS THERE ANOTHER
         BNH   DCBINIT                 YES, GO SET IT UP
         DROP  R3
         SPACE 2
*
*     ALL OF THE TDCBS HAVE BEEN INITIALIZED, SO WE CAN LET THE
*     SUPERVISOR CONTINUE WHILE WE WAIT FOR REQUESTS.
*
         LA    R1,LTTLNECB
         ST    R1,ECBLIST+8
         MVI   ECBLIST+8,X'80'         SET UP THE ECBLIST
         POST  LTTSPECB
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE MAIN LOOP FOR LOCAL 3270 HANDLING.               *
*                                                                     *
*   IT SPENDS MOST OF ITS TIME WAITING FOR ONE OF THREE ECBS TO       *
*   BE POSTED: WORKECB IS POSTED WHEN AN APPLICATION WANTS TO HAVE    *
*   SOME DATA WRITTEN ON HIS SCREEN.  DECB IS POSTED WHEN BTAM HAS    *
*   DETERMINED THAT SOME USER HAS HIT ENTER AND THE SCREEN HAS BEEN   *
*   READ IN.  LTTNECB IS POSTED IF THE SUPERVISOR HAS ANYTHING TO     *
*   TELL THIS TASK. NO SUCH REQUESTS ARE DEFINED YET.                 *
*                                                                     *
***********************************************************************
         SPACE 2
MAINLOOP L     R3,LTTFTDCB             POINT AT FIRST TDCB
         LH    R4,LTTTCNT              GET NUMBER OF TDCBS
         MVI   WORKECB,0               RESET USER REQUEST ECB
         USING TDCB,R3
TDCBSCAN CLC   TDCBWECB,=XL4'00000000' IS THERE A PENDING WRITE
         BNE   WRITE
         L     R3,TDCBFWDP             MOVE TO NEXT TDCB
         BCT   R4,TDCBSCAN
         CLI   WORKECB,0               ANY NEW REQUESTS
         BNE   MAINLOOP                YES, GO LOOK FOR REQUEST
*
*     NOW WE KNOW THAT THERE ARE NO PENDING WRITE REQUESTS
*
         TM    FLAGS,INPFLAG           SEE IF ANY INPUT IS AVAILABLE
         BNZ   READ                    YES, GO INSPECT IT
         TM    FLAGS,READFLAG          IS READ STILL OUTSTANDING
         BO    MAINWAIT                YES, GO WAIT FOR INPUT
         READ  DECB,TI,DCB,INPBUFF,2400,,1  SOLICIT INPUT
         LTR   R15,R15                 CHECK FOR ERRORS
         BNZ   READERR
         OI    FLAGS,READFLAG          INDICATE READ IN PROGRESS
MAINWAIT WAIT  ECBLIST=ECBLIST         WAIT FOR ACTION
         TM    DECB,X'40'              IS IT INCOMING DATA
         BO    READ                    YES, GO GIVE IT AWAY
         TM    WORKECB,X'40'           IS IT A WRITE REQUEST
         MVI   WORKECB,0
         BO    MAINLOOP                YES, GO SCAN FOR IT
SUPVREQ  MVI   LTTLNECB,0              JUST RESET THE ECB
         B     MAINWAIT                GO WAIT AGAIN
         EJECT
*
*   THIS ROUTINE IS ENTERED TO SERVICE REQUESTS FOR OUTPUT
*
WRITE    EQU   *
         TM    FLAGS,READFLAG          IS A READ OUTSTANDING
         BZ    STOPPED                 NO, RESETPL NOT NEEDED
         TM    DECB,X'40'              HAS I/O OCCURRED
         BO    INCOMING                YES, NO NEED TO RESETPL
         RESETPL DECB,ATTENT           STOP THE TRAFFIC
         B     *+4(R15)                SEE HOW THAT WENT
         B     WILLSTOP
         B     INCOMING
         B     BADREQ
         B     BADREQ
         B     STOPPED                 IT NEVER STARTED
INCOMING OI    FLAGS,INPFLAG           NOTE THAT INPUT IS HAPPENING
WILLSTOP TM    DECB,X'40'              IS IT NOW STOPPED
         BO    WRCKECB                 YES, CONTINUE
         WAIT  ECB=DECB
WRCKECB  NI    FLAGS,NOT-READFLAG      INDICATE READ ENDED
         CLI   DECB,X'41'              WAS THERE AN ERROR
         BE    RDERR
         MVI   DECB,0                  RESET THE ECB
*
*    THE IOBS ARE NOW FREE TO DO THE WRITE THAT WAS REQUESTED
*
STOPPED  L     R4,TDCBWECB             POINT AT PSEUDO DECB
         USING TDECB,R4
         L     R5,TDECBBFR
         LH    R6,0(,R5)               GET OUTPUT LENGTH
         LA    R5,4(,R5)               POINT AT OUTPUT DATA
         SH    R6,=H'4'                REMOVE RDW LENGTH
         ST    R5,WRDECB+12            SET OUTPUT AREA IN DECB
         STH   R6,WRDECB+6             SET OUTPUT LENGTH IN DECB
         MVC   WRDECB+24(2),TDCBSLID+2 COPY THE RELATIVE LINE NUMBER
         MVI   WRDECB,0                CLEAR THE ECB
         XC    TDCBWECB,TDCBWECB       INDICATE THAT OUPUT IS DONE
         TM    TDECBTYP,TDECBWSF       IS IT JUST PLAIN WRITE
         BO    WRITETI
         TM    TDECBTYP,TDECBWSZ       IS IT ERASE WRITE
         BO    WRITETS
         TM    TDECBTYP,TDECBWSD       IS IT ERASE UNPROTECTED
         BZ    BADWRITE
         WRITE WRDECB,TUS,MF=E         ERASE ALL UNPROTECTED
         WAIT  ECB=WRDECB
         CLI   WRDECB,X'7F'
         BNE   BADTUS
WRITETI  WRITE WRDECB,TI,MF=E          WRITE THE DATA
         B     WRWAIT
WRITETS  WRITE WRDECB,TS,MF=E          ERASE AND WRITE
WRWAIT   LTR   R15,R15                 DID THE WRITE TAKE
         BNZ   MAINLOOP                NO, THROW THIS TERMINAL AWAY
         WAIT  ECB=WRDECB
         CLI   WRDECB,X'7F'
         BNE   WRITEERR
         POST  TDECB                   ALLOW APPLICATION TO CONTINUE
         B     MAINLOOP                GO LOOK FOR MORE
         EJECT
*
*  THIS ROUTINE IS ENTERED WHEN BTAM HAS DONE A READ IN RESPONSE TO
*  AN ATTENTION. THE DATA IS IN THE INPUT BUFFER.
*
READ     NI    FLAGS,NOT-INPFLAG-READFLAG RESET THE FLAGS
         TM    DECB,X'7F'
         BM    RDERR
         MVI   DECB,0                  RESET THE ECB
         L     R5,DECB+36              GET THE RELATIVE LINE NUMBER
         L     R3,LTTFTDCB             GET FIRST TDCB
         CH    R5,LTTTCNT              GET NUMBER OF TERMINALS
         BH    MAINLOOP                MORE DD'S THAN LTT CALLED FOR
READSCAN C     R5,TDCBSLID             IS THIS THE RIGHT ONE
         BE    READFND                 YES, GIVE HIM THE INPUT
         ICM   R3,15,TDCBFWDP          MOVE DOWN THE CHAIN
         BM    BADLTT                  PREVENT INFINITE LOOP
         B     READSCAN
         SPACE 3
READFND  MVC   TDCBAID,INPBUFF         SAVE LAST AID RECEIVED
         CLI   INPBUFF,X'6D'           IS IT A NEW TASK REQUEST
         BE    CLEARREQ                YES, GO INTERRUPT HIM
         L     R2,TDCBIOCB    OBTAIN
         LA    R2,0(R2)             THE
         LTR   R2,R2                   IOCB
         BZ    NOIOCB         OR SKIP IF NO CHAINING
         USING IOCB,R2
         TM    IOCBFLGS,IOCBFNRD    IGNORE
         BO    MAINLOOP                   SUPPRESSED READS
         DROP  R2
NOIOCB   EQU   *
         SR    R4,R4                   CHECK FOR NO READ PENDING
         C     R4,TDCBPECB             IS HE INTERESTED
         BE    MAINLOOP                NO, THROW IT AWAY
         L     R4,TDCBPECB             YES, GET HIS INPUT DECB
         TM    TDECBTYP,TDECBRSF       IS IT THE ONLY SUPPORTED READ
         BZ    BADRDREQ
         L     R6,TDECBBFR
         LH    R7,TDECBLEN             SET LENGTH AND ADDRESS
         LA    R8,INPBUFF
         LA    R9,2400
         SH    R9,DECB+18              SUBTRACT RESIDUAL COUNT
         LA    R1,4
         AR    R6,R1                   POINT PAST RDW
         SR    R7,R1                   ADJUST FOR RDW
         LR    R2,R9                   SAVE DATA LENGTH
         MVCL  R6,R8                   MOVE THE INPUT DATA
         SR    R2,R9                   COMPUT AMOUNT ACTUALLY MOVED
         L     R6,TDECBBFR
         AR    R2,R1                   ADJUST FOR RDW
         STH   R2,0(R6)
         XC    2(2,R6),2(R6)           SET UP THE RDW
         POST  TDECB                   ALLOW USER PROGRAM TO CONTINUE
         B     MAINLOOP
         SPACE 4
*
*  WE COME HERE WHEN THE USER HAS HIT CLEAR
*
CLEARREQ OI    TDCBCFLG,TDCBNTR        NEW TASK REQUIRED
         ICM   R4,15,TDCBPECB          IS HE EXPECTING INPUT
         BZ    POSTSUPV                NO, JUST POST
         XC    TDCBPECB,TDCBPECB       CLEAR OUT THE INPUT POINTER
         L     R1,TDECBBFR             POINT AT INPUT AREA
         MVC   0(5,R1),=X'000500006D'  SET HIM UP A CLEAR INPUT
POSTSUPV POST  LTTSPECB                NOTIFY THE SUPERVISOR
         LTR   R4,R4                   WAS THERE INPUT
         BZ    MAINLOOP                NO, HE'LL GET HIMSELF OUT
         STIMER WAIT,BINTVL==F'1'      WAIT FOR NEW TASK TO START
         POST  TDECB                   YES, MAKE IT COMPLETE
         B     MAINLOOP                AND CONTINUE
         DROP  R3
         DROP  R4
         EJECT
*
*     ERROR ROUTINES AND BOMBS
*
NODDCARD EX    0,*                     DD CARD NOT IN TIOT
BADDD    EX    0,*                     NOT ENOUGH CONCATENATIONS
BADLTT   EX    0,*                     TWO LOCAL 3270 LTT ENTRIES
BADDCB   EX    0,*                     DCB FAILED TO OPEN
READERR  EX    0,*
BADREQ   EX    0,*
RDERR    EX    0,*                     I/O ERROR
BADWRITE EX    0,*                     INVALID CODE IN TDECB
BADTUS   EX    0,*                     ERROR ON ERASE ALL UNPROTECTED
WRITEERR EX    0,*                     I/O ERROR
BADRDREQ EX    0,*                     INVALID CODE IN TDECB
         EJECT
*
*     CONSTANTS AND CONTROL BLOCKS
*
ECBLIST  DC    A(WORKECB,DECB,0)
WORKECB  DC    A(0)
DCB      DCB   DSORG=CX,MACRF=(R,W)
         WRITE WRDECB,TS,DCB,MF=L
         LTORG
NOT      EQU   X'FF'
FLAGS    DC    X'00'
READFLAG EQU   X'80'
INPFLAG  EQU   X'40'
PATCH    DC    20S(*)
         DROP
INPBUFF  DS    CL2400
         EJECT
         LTT
         EJECT
         TDCB
         EJECT
         TDECB
         EJECT
         IECTDECB
         EJECT
IOCB     DSECT
         IOCB
         END
