SPINXTRA TITLE 'SPINOFF- QSAM DCB EXIT                       01-73/BKR'
         DCBD  DSORG=PS,DEVD=DA
         EJECT
DSCB     DSECT
         IECDSECT
         EJECT
SAVEAREA EQU   DXECB
SAVE     EQU   SAVEAREA+16*4
DSCBLIST EQU SAVE+72
CORELEN  EQU   ((DSCBLIST+23-DXLBL)/8)*8  LENGTH OF GET/FREE MAINS
         SPACE 1
         DCMSREGS
         EJECT
SPINXTRA CSECT
         USING IHADCB,R1           DCB ADDR
         USING SPINXTRA,R15        PROGRAM BASE
         TM    DCBMACRF,B'10000000'     ? EXCP
         BOR   R14                 GET OUT
         TM    DCBMACRF,B'01000000'     ? GET
         BO    ONWARD              GREAT
         TM    DCBMACRF+1,B'01000000'   ? PUT
         BZR   R14                 IF NOT GET OR PUT, GET OUT
ONWARD   DS    0H
SAVETS   TS    SAVETEST            TEST STORAGE LOCK
         BNZ   SAVETS              LOOP UNTIL SAFE
         STM   R14,R1,SAVETSA      TEMPORARY SAVE
         LA    R0,CORELEN          LENGTH OF GETMAIN
         GETMAIN R,LV=(0)          GET THE BLOOMIN' CORE
         BALR  R15,0               DON'T ASSUME ANYTHING
         USING *,R15
         MVC   SAVEAREA-DXLBL(16,R1),SAVETSA
         MVI   SAVETEST,0          STORAGE IS NOW REUSABLE
         STM   R2,R13,SAVEAREA+16-DXLBL(R1)
         DROP  R15
         BALR  R2,0                MY BRAND NEW BASE
         USING *,R2
         DROP  R1
         LR    R4,R1
         USING DSCB,R4             MY NEW CORE
         L     R3,SAVEAREA+12      GET DCB ADDRESS
         USING IHADCB,R3
         EJECT
         LA    R13,SAVE            SET UP SAVE AREA
         L     R5,DCBEXLST         GET DCB LIST
EXLOOP   DS    0H
         CLI   0(R5),X'05'         IF EXIT ENTRY
         BNE   *+6
         LR    R6,R5                  SAVE ADDRESS
         CLI   0(R5),X'85'         IF EXIT ENTRY
         BNE   *+6
         LR    R6,R5                  SAVE ADDRESS
         CLI   0(R5),X'07'         ? JFCB
         BE    USEJFCB
         CLI   0(R5),X'87'         ? JFCB
         BE    USEJFCB
         TM    0(R5),X'80'         END OF LIST?
         LA    R5,4(,R5)
         BZ    EXLOOP
         B     DOJFCB               ENTRIES TO BE ABSOLUTES.
USEJFCB  DS    0H
         L     R6,0(R5)            GET ADDRESS OF JFCB
         MVC   INFMJFCB(176),0(R6) USE THE JFCB
         B     GETDSCB             GET DSCB
DOJFCB   DS    0H
         LR    R5,R6               POINT TO EXIT ENTRY
         LA    R6,INFMJFCB         ADDRESS OF JFCB AREA
         L     R8,0(R5)            SAVE CURRENT CONTENTS
         STCM  R6,7,1(R5)          PLACE IN EXLST
         NI    0(R5),X'80'         LEAVE LAST ENTRY FLAG
         OI    0(R5),X'07'         SAY IT IS JFCB
         IC    R9,DCBOFLGS         SAVE CURRENT DCBOFLGS
         MVI   DCBOFLGS,X'12'      CHEAT
         RDJFCB ((R3))             GET THE JFCB
         STC   R9,DCBOFLGS         RESTORE DCBOFLGS
         ST    R8,0(R5)            REPLACE OLD CONTENTS
GETDSCB  DS    0H
         MVC   DSCBLIST(16),DSCBLST     GET BASIC CAMLST INFO
         LA    R8,JFCBDSNM         DATASET'S NAME
         LA    R9,JFCBVOLS         DATASET'S LOCATION
         LA    R10,DXLBL           LOCATION OF 'OBTAIN' ED LABEL
         STM   R8,R10,DSCBLIST+4   SET UP CAMLST PARM
         OBTAIN DSCBLIST           GET THE DSCB
INEXIT   DS    0H
         SPACE
* RECFM
         CLI   DSCRECFM,0
         BE    *+10
         MVC   DCBRECFM,DSCRECFM   USE DSCB RECFM IF THERE
         CLI   JFCRECFM,0
         BE    *+10
         MVC   DCBRECFM,JFCRECFM   USE JFCB RECFM IF THERE
         CLI   DCBRECFM,0          ? RECFM CODED
         BNE   RECFM               YES - SKIP
         OI    DCBRECFM,B'01011000' DEFAULT : VBS
RECFM    DS    0H
         SPACE
* LRECL
         OC    DSCLRECL,DSCLRECL
         BZ    *+10
         MVC   DCBLRECL,DSCLRECL   USE DSCB LRECL IF THERE
         OC    JFCLRECL,JFCLRECL
         BZ    *+10
         MVC   DCBLRECL,JFCLRECL   USE JFCB LRECL IF THERE
         OC    DCBLRECL,DCBLRECL   ? LRECL CODED
         BNZ   LRECL               YES - SKIP
         TM    DCBRECFM,B'11000000' ? U CODED
         BO    LRECL               YES - SKIP
         MVC   DCBLRECL,=H'2000'   DEFAULT : 2000
         TM    DCBRECFM,B'00000110'     A OR M?
         BZ    LRECL
         MVC   DCBLRECL,=H'137'    ASSUME VBA/M
         TM    DCBRECFM,B'01000000'     V?
         BO    LRECL
         MVC   DCBLRECL,=H'133'    ASSUME FBA/M
LRECL    DS    0H
         SPACE
* BLKSIZE
         OC    DCBBLKSI,DCBBLKSI   ? BLKSIZE CODED
         BNZ   BLKSIZE             YES - SKIP
         MVC   DCBBLKSI,=H'2000'   DEFAULT : 2000
         TM    DCBRECFM,B'11000000' ? U CODED
         BO    BLKSIZE             YES - DONE
         MVC   DCBBLKSI,=H'6447'   DEFAULT : 6447
         TM    DCBRECFM,B'01000000' ? V CODED
         BO    BLKSIZE             YES - DONE
         MVC   DCBBLKSI,DCBLRECL   DEFAULT : LRECL
         TM    DCBRECFM,B'00010000' ? B CODED
         BZ    BLKSIZE             NO - DONE
         LH    R0,DCBLRECL         ONE LRECL
         AH    R0,DCBLRECL         ONE MORE LRECL
         CH    R0,=H'6447'         ? MORE THAN HALF TRACK 3330
         BNH   *-8                 NO - GO AROUND AGAIN
         SH    R0,DCBLRECL         TOO BIG - SUB ONE LRECL
         STH   R0,DCBBLKSI         SET DEFAULT : N*LRECL
BLKSIZE  DS    0H
         SPACE
*
*        RECHECK RECFM BASED ON BLKSIZE INFO
*
         TM    DCBRECFM,B'11000000'     IF RECFM=U
         BNO   NOTU
         XC    DCBLRECL,DCBLRECL        REMOVE LRECL
         B     RELRECL
NOTU     DS    0H
         TM    DCBRECFM,B'00010000'     IF UNBLOCKED
         BO    RELRECL                  AND FIXED
         TM    DCBRECFM,B'10000000'
         BZ    RELRECL
         MVC   DCBLRECL,DCBBLKSI   VERIFY EQUALITY
RELRECL  DS    0H
         SPACE
* BFTEK
         TM    DCBBFTEK,B'01110000' ? BFTEK CODED
         BNZ   BFTEK               YES - SKIP
         OI    DCBBFTEK,B'01000000' DEFAULT : SIMPLE
         TM    DCBRECFM,B'00001000' ? SPANNED CODED
         BZ    BFTEK               NO - DONE
         OI    DCBBFTEK,B'01100000' DEFAULT : LOGICAL REC (A)
BFTEK    DS    0H
         SPACE
* OPTCD
         TM    DCBOPTCD,B'00100100' ? C×Z CODED
         BNZ   OPTCD               YES - SKIP
         OI    DCBOPTCD,B'00100000' SET : C
         TM    DCBMACRF,B'01000000' ? GET (INPUT)
         BZ    OPTCD               NO - FINE
         TM    DCBRECFM,B'11000000' ? U CODED
         BNO   OPTCD               NO - FINE
         NI    DCBOPTCD,B'11011111' RESET : NO C
OPTCD    DS    0H
         SPACE
* BUFNO
         OI    DCBBUFNO,0          ? BUFNO CODED
         BNZ   BUFNO               YES - SKIP
         MVI   DCBBUFNO,3          DEFAULT : 3
         TM    DCBRECFM,B'00010000' ? BLOCKED CODED
         BO    BUFNO               YES - DONE
         CLC   DCBBLKSI,=H'800'    ? LARGER THAN 800
         BH    BUFNO               YES - DONE
         MVI   DCBBUFNO,10         DEFAULT : 10
BUFNO    DS    0H
         SPACE
RETURN   DS    0H
         DROP  R4
         LR    R1,R4               ADDRESS OF GOTTEN CORE
         USING DSCB,R1
         DROP  R2
         BALR  R15,0
         USING *,R15               GO BACK TO OLD BASE
         LM    R2,R13,SAVEAREA+16
RESTTS   TS    SAVETEST
         BNZ   RESTTS              TEST STORAGE LOCK
         MVC   SAVETSA(16),SAVEAREA
         LA    R0,CORELEN
         FREEMAIN R,LV=(0),A=(1)
         DROP  R15
         BALR  R15,0
         USING *,R15               GO BACK TO OLD BASE
         L     R14,SAVETSA
         LM    R0,R1,SAVETSA+8     REGS ARE RESTORED, THEREFOR
         MVI   SAVETEST,0          RESET STORAGE LOCK
FASTRET  RETURN
         EJECT
DSCBLST  CAMLST SEARCH,0,0,0
SAVETSA  DS    6F                  PROTECTED TEMP STORAGE
SAVETEST DC    X'0'
         END
