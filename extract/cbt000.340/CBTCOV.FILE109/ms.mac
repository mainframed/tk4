MS       TITLE 'MS - TSO MASTER SUMMARY COMMAND, DCMS VERSION FEB. 77'
         SPACE  4
*.                                                               AMDAHL
* MS -                                                           AMDAHL
*                                                                AMDAHL
* LET ME BE THE FIRST TO SAY THAT I DID NOT WRITE THIS COMMAND.  AMDAHL
* I GOT IT FROM THE SHARE / MVS MODS TAPE. I MERELY ADDED THE    AMDAHL
* SCREEN SUPPORT (A LA DCMS) AND THE DOCUMENTATION YOU ARE NOW   AMDAHL
* READING.                                                       AMDAHL
*                                                                AMDAHL
*  THIS TSO / DCMS COMMAND IS SUPPOSED TO PROVIDE A MASTER SUMMARY DAHL
*  (MS) OF WHAT IS GOING ON IN THE SYSTEM.                       AMDAHL
*                                                                AMDAHL
*  THE OPERANDS SUPPORTED AND THEIR FUNCTIONS ARE:               AMDAHL
*                                                                AMDAHL
*      E  - END THIS PROCESSOR                                   AMDAHL
*      I  - INITIATOR DISPLAY                                    AMDAHL
*      J  - RUNNING JOBS DISPLAY                                 AMDAHL
*      LP - ACTIVE LINK PACK AREA                                AMDAHL
*      S  - STARTED TASK DISPLAY                                 AMDAHL
*      SS - SYSTEM PERFORMANCE STATISTICS                        AMDAHL
*      T  - TSO USER DISPLAY                                     AMDAHL
*      TS - TSO USER DISPLAY W/STATISTICS                        AMDAHL
*                                                                AMDAHL
*                                                                AMDAHL
*  CHANGE SUMMARY @ AMDAHL                                       AMDAHL
*                                                                AMDAHL
*  ALL CHANGES OR ADDITIONS MADE HERE WILL HAVE AMDAHL IN 66-71  AMDAHL
*                                                                AMDAHL
*   FEB 6, ADDED DCMS SCREEN SUPPORT                             AMDAHL
*   FEB 6, CORRECTED OUCB SWAP COUNT                             AMDAHL
*   FEB 6, FIXED LPA LISTER                                      AMDAHL
*   FEB 6, ADDED MSO TO DETECTED WAIT FLAGS                      AMDAHL
*   FEB 6, REPLACED VIO SLOT COUNT  WITH DOMAIN AND PERFORMANCE  AMDAHL
*           GROUP                                                AMDAHL
*   FEB 6, CLUMPED JOBSTEP AND SRBTIME TOGETHER FOR ROOM         AMDAHL
*   FEB 6, ADDED AMOUNT OF CORE AN ADDRESS SPACE IS USING        AMDAHL
*   FEB 6, FIT THE DISPATCHING PRIORITY ON THE SCREEN            AMDAHL
*   FEB 6, STRAY INITIATOR ON LAST LINE OF OUTPUT DESTROYED      AMDAHL
*   FEB 6, MERGE OF 'JOBS' CSECT INTO MAINLINE                   AMDAHL
*   FEB 6, PF KEY SUPPORT                                        AMDAHL
*   FEB 6, GET RID OF 0C4 DURING EXIT                            AMDAHL
*   FEB 6, REPLACED HELP OUPTUT FOR COSMETICS                    AMDAHL
*   FEB 6, RECOGNIZE PA1 KEY AS TERMINATE UNDER DCMS             AMDAHL
         EJECT ,                                                 AMDAHL
         SPACE 4                                                 AMDAHL
*   FEB 6, DEFINITION OF 'FLGS' FIELD IS AS FOLLOWS:             AMDAHL
*                                                                AMDAHL
*          1234                                                  AMDAHL
*          FLGS                                                  AMDAHL
*                                                                AMDAHL
*          POSITION CHAR MEANING                                 AMDAHL
*          -------- ---- ----------------------------------------AMDAHL
*              1      I  ADDRESS SPACE IS IN-CORE                AMDAHL
*              1      O  ADDRESS SPACE IS SWAPPED OUT            AMDAHL
*              1      ^  ADDRESS SPACE IS NON-SWAPPABLE          AMDAHL
*              2      I  ADDRESS SPACE IS IN INPUT-TERMINAL WAIT AMDAHL
*              2      L  ADDRESS SPACE IS IN LONG WAIT           AMDAHL
*              2      M  ADDRESS SAPCE SWAPPED (MSO DETECTED)    AMDAHL
*              2      O  ADDRESS SPACE IS IN OUTPUT TERMINAL WAITAMDAHL
*              2      Q  ADDRESS SPACE HAS ENQHOLD ISSUED        AMDAHL
*              3      C  ADDRESS SPACE IS OR WAS A SIGNIFICANT   AMDAHL
*                        CPU USER                                AMDAHL
*              4      =  ADDRESS SPACE IS RUNNING V=R            AMDAHL
*                                                                AMDAHL
*                                                                AMDAHL
*   FEB 7, FIXED STRAY ADDRESS SPACE PROBLEM ON LAST LINE        AMDAHL
*   FEB 7, RECOGNIZE UN-IDLE INITIATORS                          AMDAHL
*   FEB15, ADD BANNER PAGE                                       AMDAHL
*                                                                AMDAHL
*                                                                AMDAHL
*   PF KEY DEFINITIONS                                           AMDAHL
*   ------------------------------------------------------------ AMDAHL
*    .  -----                                                    AMDAHL
*      × PF1 ×   PRESS THIS KEY FOR HELP, IT EXPLAINS THE USE OF AMDAHL
*      ×     ×   THE OTHER PF KEYS.                              AMDAHL
*       -----                                                    AMDAHL
*                                                                AMDAHL
* IF YOU HAVE ANY QUESTIONS PLEASE CALL:                         AMDAHL
*                                                                AMDAHL
*     FRED LUDDY                                                 AMDAHL
*     AMDAHL CORP.                                               AMDAHL
*     1250 E ARQUES                                              AMDAHL
*     SUNNYVALE CA.                                              AMDAHL
*   PHONE                                                        AMDAHL
*     (408) 735 4011                                             AMDAHL
*.                                                               AMDAHL
         EJECT ,                                                 AMDAHL
MS       XSTART LV=5120                                          AMDAHL
*        PRINT NOGEN
         EJECT
         USING WORK,R13                                          AMDAHL
         CALL  SCRCLEAR                                          AMDAHL
         CALL  INISH                                             AMDAHL
         MVC   PROMPT(2),=C'SS'
         MVC   ONNULL,=A(MAINLOOP)
         B     ASK0
         SPACE 3
* COMMAND FETCH AND ANALYZE
         SPACE
ASKAGAIN EQU   *                                                 AMDAHL
         CALL  WRITE                                             AMDAHL
ASK0     EQU   *                                                 AMDAHL
         SPACE 1                                                 AMDAHL
NOFREE   MVC   DIRT,INPUTLNE       ADDRESS THE INPUT LINE        AMDAHL
         CALL  SCRCLEAR                                          AMDAHL
         LA    R3,DIRT             ...                           AMDAHL
         LR    R2,R3               ...                           AMDAHL
TIME1ST  EQU   *                        STORE FOR CMD SCAN
         SPACE
         CLI   4(R3),C'/'               IS SPECIAL OPER REQ?
         BE    CMDSLASH
RESCAN   EQU   *
SCANRET  EQU   *                        CMD NAME ADDR
         LA    R2,DIRT                                           AMDAHL
         SPACE
         CLI   0(R2),C' '                                        AMDAHL
         BNE   NOT1TIME            FUCK OFF -->                  AMDAHL
         CLI   IOCBAID,AIDPA1      REQUEST TO EXIT ?             AMDAHL
         BE    EXIT                SEE YOU                       AMDAHL
         PFSELECT IOCBAID,NULLLINE,                                    *
               (OPTIONS,,EXIT,CMDSS,CMDLP,CMDT,CMDI,                   *
               CMDJ,CMDTS,CMDS,,EXIT),DUMMY=NULLLINE             AMDAHL
         SPACE
NULLLINE L     R15,ONNULL               GO TO SAVED EP
         BR    R15
NOT1TIME CLC   0(2,R2),=C'SS'           SYSTEM STATS
         BE    CMDSS
         CLC   0(2,R2),=C'LP'           SYSTEM STATS
         BE    CMDLP
         CLC   0(2,R2),=C'TS'           TSO    STATS
         BE    CMDTS
         CLI   0(R2),C'I'               INIT COMMAND?
         BE    CMDI
         CLI   0(R2),C'J'               JOBS COMMAND?
         BE    CMDJ
         CLI   0(R2),C'S'               TSC?
         BE    CMDS
         CLI   0(R2),C'T'               TSU
         BE    CMDT
         CLI   0(R2),C'E'               EXIT?
         BE    EXIT
         B     OPTIONS                  BAD INPUT GIVE OPTIONS
         SPACE
CMDI     MVC   PROMPT(2),=C'IN'
         MVC   ONNULL,=A(MAINLOOP)
         B     MAINLOOP
         SPACE
CMDTS    MVC   PROMPT(2),=C'TS'
         MVC   ONNULL,=A(MAINLOOP)
         B     MAINLOOP
         SPACE
CMDT     MVC   PROMPT(2),=C'T '
         MVC   ONNULL,=A(CMDT)
         CALL  USERS                    CALL USERS COMMAND
         B     ASKAGAIN
         SPACE
CMDJ     MVC   PROMPT(2),=C'J '
         MVC   ONNULL,=A(MAINLOOP)
*        CALL  JOBS                     CALL JOB DISP COMMAND    AMDAHL
         B     MAINLOOP
         SPACE
CMDS     MVC   PROMPT(2),=C'S '
         MVC   ONNULL,=A(MAINLOOP)
         B     MAINLOOP
         SPACE
CMDSS    MVC   PROMPT(2),=C'SS'
         MVC   ONNULL,=A(MAINLOOP)
         B     MAINLOOP
PF12     EQU   *                                                 AMDAHL
         MVC   ONNULL,=A(MAINLOOP)
         CALL  PF12X                                             AMDAHL
         B     ASKAGAIN
         EJECT
* MAIN SCANNING LOOP
         SPACE
MAINLOOP L     R1,16                    FIND CVT
         L     R1,X'22C'(,R1)           FIND ASVT
         LA    R3,X'210'(,R1)           FIND FIRST ENTRY
         LA    R4,4                     BXLE INCREMENT
         L     R5,X'204'(,R1)           MAX ADDR SPEC
         SLA   R5,2                     MULT BY FOUR
         LA    R5,0(R3,R5)              POINT TO END
         BCTR  R5,0                     BACK UP ONE
         SPACE
         CLC   =C'SS',PROMPT            STATS COMMAND?
         BE    DOSS                     YES, GO DO IT
         LA    R9,19               NUMBER OF ENTRIES WE CAN STAND MDAHL
         LA    R6,LINE2                                          AMDAHL
         USING LINE2,R6                                          AMDAHL
         SPACE
         MVC   LINE1(L'HEADER),HEADER                            AMDAHL
*        TPUT  HEADER,L'HEADER                                   AMDAHL
         SPACE 2                                                 AMDAHL
         USING ASCB,R2                                           AMDAHL
LOOP     TM    0(R3),X'FF'              CHECK BITS ON
         BNZ   LOOPBXLE                 SKIP IF ONE ON
         L     R2,0(,R3)                PICK UP POINTER TO ASCB
         MVC   LINE2(80),BLANKS         BLANK LINE2              AMDAHL
*        ICM   R1,15,172(R2)            JOB NAME FOR INIT PGMS   AMDAHL
*        BZ    *+10                                              AMDAHL
*        MVC   LINE2+15(8),0(R1)                                 AMDAHL
         ICM   R1,15,176(R2)            JOBNAME FOR START MOUNT ETC
         BZ    *+10
         MVC   LINE2+4(8),0(R1)
         ICM   R1,15,ASCBJBNI      CHECK FOR JOB                 AMDAHL
         BZ    LO1                 NOT..                         AMDAHL
         CLI   PROMPT,C'J'         JOBS REQUESTED ?              AMDAHL
         BNE   LO1                 NO...                         AMDAHL
         MVC   LINE2+4(8),0(R1)    MOVE THE JOB NAME             AMDAHL
         B     LIKEIT              BEAT IT                       AMDAHL
LO1      EQU   *                                                 AMDAHL
         SPACE
         ICM   R1,15,56(R2)             FIND CSCB POINTER
         BZ    TESTSYS                  NO POINTER, MUST BE SYSTASK
         SPACE
         ICM   R0,15,48(R1)             CHECK FOR V=R
         BZ    *+8
         MVI   LINE2+16,C'='            SET V=R INDICATOR        AMDAHL
         SPACE
         CLI   28(R1),0                 CHECK FOR SYSTEM TASKS
         BE    TESTSYS
         CLI   28(R1),1                 CHECK FOR TSU
         BE    TESTTSU
         CLC   =C'INIT',LINE2+4
         BE    TESTINIT
         B     TESTSYS                  LEFT OVERS ARE STC
         SPACE
TESTTSU  CLI   PROMPT,C'T'              ASKING FOR TSU
         BNE   NOLIKEIT                                          AMDAHL
         B     LIKEIT                   ELSE REJECT
         SPACE
TESTINIT CLI   PROMPT,C'I'              ASKING FOR INIT?
         BE    TES1                     YES                      AMDAHL
         MVC   LINE2(80),BLANKS                                  AMDAHL
         B     LOOPBXLE                                          AMDAHL
TES1     EQU   *                                                 AMDAHL
         MVC   LINE2+4(6),=C'(IDLE)'  DEFAULT IDLE INITIATOR     AMDAHL
         L     R1,ASCBJBNI         GET THE INITIATED JOB NAME    AMDAHL
         LTR   R1,R1               ...                           AMDAHL
         BZ    LIKEIT              IGNORE (IDLE)                 AMDAHL
         MVC   LINE2+4(8),0(R1)                                  AMDAHL
         B     LIKEIT                                            AMDAHL
         SPACE
TESTSYS  CLI   PROMPT,C'S'              WANT SYS TASKS?
         BNE   NOLIKEIT                 IF NOT, WE NO LIKE       AMDAHL
         LTR   R1,R1                    CSCB PRESENT?
         BZ    LIKEIT                   NO, SKIP THE FOLLOWING
         MVC   LINE2+4(8),16(R1)        MOVE IN ID
         CLI   24(R1),C' '              UNIT NAME PRES
         BNH   STNOU
         MVC   LINE2+9(3),24(R1)        MOVE IN UNIT ID
         MVI   LINE2+8,C'-'
STNOU    MVC   LINE2+15(8),BLANKS
         SPACE
LIKEIT   LH    R1,36(,R2)               PICK UP ASID
         CVD   R1,DOUBLE
         UNPK  LINE2(3),DOUBLE
         OI    LINE2+2,C'0'             MAKE IT PRINTABLE
         SPACE
         L     R1,X'90'(,R2)            FIND OUCB
*                                                                AMDAHL
* PROCESS THE ALLOCATED PAGE FRAME  COUNT                        AMDAHL
*                                                                AMDAHL
         LH    R0,ASCBFMCT         GET THE FRAME COUNT           AMDAHL
         SLA   R0,2                MULTIPLY BY 4 FOR K           AMDAHL
         CVD   R0,DOUBLE                                         AMDAHL
         MVC   LINE2+68(8),=X'4020206B202120D2' SORRY FOR DAT    AMDAHL
         ED    LINE2+68(7),DOUBLE+5                              AMDAHL
*                                                                AMDAHL
* DETERMINE USERS POSITION IN CORE IN, OUT OR NON-SWAP           AMDAHL
*                                                                AMDAHL
         MVI   LINE2+13,C'O'       DEFAULT OUT-OF CORE           AMDAHL
         TM    ASCBRCTF,ASCBOUT    IS IT ?                       AMDAHL
         BO    LIK0                YES..                         AMDAHL
         MVI   LINE2+13,C'I'       SHOW IN-CORE                  AMDAHL
LIK0     EQU   *                                                 AMDAHL
         USING OUCB,R1                                           AMDAHL
         TM    17(R1),X'80'             NON SWAP?
         BZ    *+8
         MVI   LINE2+13,C'^'
         TM    21(R1),X'80'             LONG WAIT?
         BZ    *+8
         MVI   LINE2+14,C'L'
         TM    21(R1),X'40'             TERMINAL WAIT?
         BZ    *+8
         MVI   LINE2+14,C'I'
         TM    21(R1),X'20'             OUTPUT   WAIT?
         BZ    *+8
         MVI   LINE2+14,C'O'
         TM    21(R1),X'08'             ENQHOLD  PROCESSED
         BZ    *+8
         MVI   LINE2+14,C'Q'
         TM    OUCBEFL,OUCBMWT          MSO DETECTED WAIT ?      AMDAHL
         BZ    *+8                                               AMDAHL
         MVI   LINE2+14,C'M'                                     AMDAHL
         TM    OUCBAFL,OUCBCPL     SIGNIFICANT CPU USER ?        AMDAHL
         BZ    *+8                 NO..                          AMDAHL
         MVI   LINE2+15,C'C'       SHOW CPU USER IN NEXT COLUMN  AMDAHL
         SPACE 1
         SR    R0,R0
         IC    R0,OUCBDMN          GET DOMAIN NUMBER             AMDAHL
         CVD   R0,DOUBLE           ...                           AMDAHL
         MVC   LINE2+31(4),=X'40202120'                          AMDAHL
         ED    LINE2+31(4),DOUBLE+6                              AMDAHL
         SPACE 1                                                 AMDAHL
         IC    R0,OUCBNPG          PROCESS PERFORMANCE GROUP     AMDAHL
         CVD   R0,DOUBLE           ...                           AMDAHL
         MVC   LINE2+35(4),=X'40202120'                          AMDAHL
         ED    LINE2+35(4),DOUBLE+6                              AMDAHL
         SPACE 1                                                 AMDAHL
         ICM   R0,B'0011',OUCBSWC       GET THE PROPER # SWAPS   AMDAHL
         CVD   R0,DOUBLE
         MVC   LINE2+24(7),=X'4020206B202120'
         ED    LINE2+24(7),DOUBLE+5
         LH    R0,OUCBWSS               GET THE WORKING SET SIZE AMDAHL
         SLA   R0,2                     MULT BY 4 TO GET 'K'     AMDAHL
         CVD   R0,DOUBLE                                         AMDAHL
         MVC   LINE2+47(7),=X'4020206B202120' EDIT MASK
         ED    LINE2+47(7),DOUBLE+5     DO THE EDIT
         MVI   LINE2+54,C'K'
         DROP  R1,R2                                             AMDAHL
         SPACE
         SR    R0,R0
         ICM   R0,B'0011',112(R2)       LOAD # WAITS
         CVD   R0,DOUBLE
         MVC   LINE2+17(7),=X'4020206B202120'
         ED    LINE2+17(7),DOUBLE+5
         SPACE
         LH    R1,122(,R2)              ALLOC AUX SLOTS (NON-VAM)
         SLA   R1,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R1,DOUBLE
         MVC   LINE2+39(7),=X'4020206B202120' EDIT MASK
         ED    LINE2+39(7),DOUBLE+5     DO THE EDIT
         MVI   LINE2+46,C'K'
         LM    R0,R1,64(R2)             PICK UP CPU TIME
         LM    R14,R15,200(R2)     ADD THE SRB TIME              AMDAHL
         ALR   R1,R15              ...                           AMDAHL
         BC    12,NOCARRY          ...                           AMDAHL
         LA    R14,1(,R14)         ...                           AMDAHL
NOCARRY  EQU   *                   ...                           AMDAHL
         AR    R0,R14              ...                           AMDAHL
         SRDL  R0,24                    MOVE TO ODD REG
         M     R0,=A(1048576)           COMPUTE IN SECONDS
         D     R0,=A(10000*256)
         CVD   R1,DOUBLE
         MVC   LINE2+55(10),=X'4020206B2021204B2020'
         ED    LINE2+55(10),DOUBLE+4     DO THE EDIT
         MVI   LINE2+65,C'S'
         UNPK  DOUBLE(3),43(2,R2)       CONVERT DPRTY TO HEX
         TR    DOUBLE(2),HEXTAB
         MVC   LINE2+67(2),DOUBLE       MOVE FOR PRNTING         AMDAHL
         SPACE
         LA    R6,79(,R6)          ADDRESS NEXT LINE             AMDAHL
         BCT   R9,LOOPBXLE         SEE IF DUN                    AMDAHL
         B     ASKAGAIN            DUN FINI KAPUT, ETC...        AMDAHL
*        TPUT  LINE2,L'LINE                                      AMDAHL
LOOPBXLE BXLE  R3,R4,LOOP
         SPACE
         B     ASKAGAIN
NOLIKEIT EQU   *                   ERASE THE LINE...             AMDAHL
         MVC   LINE2(80),BLANKS                                  AMDAHL
         B     LOOPBXLE                                          AMDAHL
         DROP  R6
         EJECT
* ACTIVE LPA LISTER
         SPACE
CMDLP    MVC   PROMPT(2),=C'LP'
         MVC   ONNULL,=A(CMDLP)
         L     R2,16                    FIND CVT
         L     R2,X'0BC'(,R2)           FIND 1ST LPDE
         ICM   R2,15,0(R2)              SKIP DUMMY
         BZ    ASKAGAIN                 IF NULL
@LPA     EQU   *                                                 AMDAHL
         CALL  SCRCLEAR                                          AMDAHL
         LA    R9,20                                             AMDAHL
         LA    R1,LINE2                                          AMDAHL
         MVC   LINE1(LPALEN),LPATITLE                            AMDAHL
LPALOOP  MVC   LINE(80),BLANKS          BLANK LINE               AMDAHL
         LA    R3,LINE
         LA    R4,26                    BXLE SETUP
         LA    R5,LINE+80-25
LPALOOP1 MVC   7(8,R3),8(R2)            MOVE IN MODULE NAME
         ST    R2,FWORK                 CONVERT LPDE ADDR TO HEX
         UNPK  DOUBLE(7),FWORK+1(4)
         TR    DOUBLE(6),HEXTAB
         MVC   0(6,R3),DOUBLE
         UNPK  DOUBLE(7),17(4,R2)       CONVERT EPA
         TR    DOUBLE(6),HEXTAB
         MVC   17(6,R3),DOUBLE
         ICM   R2,15,0(R2)              FOLLOW PNTR
         BZ    LPATPUT
         BXLE  R3,R4,LPALOOP1
*        TPUT  LINE,L'LINE                                       AMDAHL
         MVC   0(79,R1),LINE                                     AMDAHL
         LA    R1,79(,R1)                                        AMDAHL
         BCT   R9,LPALOOP                                        AMDAHL
         CALL  WRITE                                             AMDAHL
         B     @LPA                                              AMDAHL
LPATPUT  EQU   *                                                 AMDAHL
         MVC   0(79,R1),LINE                                     AMDAHL
         B     ASKAGAIN
LPATITLE DC   3C'@-LPDE __NAME__  _EPA__   '                     AMDAHL
LPALEN   EQU  *-LPATITLE                                         AMDAHL
         SPACE 5
* CURRENT OPTIONS SUPPORTED DISPLAY
         SPACE
OPTIONS  MVC   PROMPT(2),=C'OP'
         MVC   ONNULL,=A(OPTIONS)
*        TPUT  OP1,OPLEN                                         AMDAHL
         LA    R1,LINE1            ADDRESS FIRST OUTPUT AREA     AMDAHL
         LA    R2,OPLENTH          GET THE LENTGH OF AN 'OP' LINEAMDAHL
         L     R4,ADDROP1          ADDRESS FIRST AREA            AMDAHL
         LA    R9,OPNUM            NUMBER OF OPERANDS            AMDAHL
OPT0     EQU   *                                                 AMDAHL
         MVC   0(OPLENTH,R1),0(R4) MOVE AN ENTRY                 AMDAHL
         LA    R1,79(,R1)          ADDRESS NOXE OUTPUT LINE      AMDAHL
         LA    R4,0(R2,R4)         INPUT AREA                    AMDAHL
         BCT   R9,OPT0             MOVE IT CHARLEY               AMDAHL
         B     ASKAGAIN                                          AMDAHL
         EJECT
* OPERATOR COMMAND ROUTINES
         SPACE 2
CMDSLASH TM    AUTHLVL,X'F0'            IS LEVEL 0 USER?
         BNZ   OPTIONS                  NO, BOUNCE
         TESTAUTH FCTN=1                AUTHORIZED?
         LTR   R15,R15
         BNZ   OPTIONS                  NO, BOUNCE
         SPACE
         CLI   5(R3),C'/'               CHECK FOR //
         BE    SLOK
         CLI   5(R3),C'$'               CHECK FOR /$
         BNE   OPTIONS
         SPACE
SLOK     LH    R1,0(,R3)                GET BUFFER LENGTH
         CH    R1,=H'84'                IS CMD TOO LONG?
         BH    OPTIONS
         SH    R1,=H'7'                 SUBTRACT FOR MVC
         BM    NULLLINE
         MVC   WTOLIST+4(80),BLANKS     INITIALIZE MESSAGE
         MVC   WTOLIST+4(0),6(R3)       ** EXECUTED **
         EX    R1,*-6                   MOVE INTO WTO LIST
         SPACE
         L     R1,16                    FIND CVT
         L     R1,0(,R1)                DISP DOUB WD
         L     R1,4(,R1)                FIND TCB
         SR    R2,R2                    FOR SVC 34 R0
         CLI   5(R3),C'$'               MASTER CONSOLE ROUTING?
         BE    SLDOSVC                  GO DO IT
         L     R1,X'B4'(,R1)            FIND JSCB
         LH    R2,X'10C'(,R1)           LOAD ASID
         N     R2,=X'00007FFF'
         O     R2,=X'00008000'
         SPACE
SLDOSVC  MODESET KEY=ZERO
         LA    R1,WTOLIST
         LR    R0,R2
         SVC 34
         MODESET KEY=NZERO
         SPACE
         B     ASKAGAIN
         EJECT
* SYSTEM STATISTICS DISPLAY
         SPACE 1
DOSS     SR    R7,R7                    VIO SLOTS USED COUNTER
         SR    R8,R8                    REG SLOTS IN USE COUNTER
         CALL  SCRCLEAR                                          AMDAHL
SSLOOP   TM    0(R3),X'FF'              ENTRY IN USE
         BNZ   SSBXLE                   NO, SKIP
         L     R2,0(,R3)                PICK UP ASCB POINTER
         AH    R7,120(,R2)              PICK UP VIO PAGES
         AH    R8,122(,R2)              PICK UP AUX PAGES
SSBXLE   BXLE  R3,R4,SSLOOP
         SPACE 1
         MVC   LINE1+30(21),=C'* SYSTEM STATISTICS *'
         SPACE
         L     R2,16                    FIND CVT
         L     R3,X'C4'(,R2)            FIND SMCA
         MVC   LINE2(7),=C'SYSTEM-'                              AMDAHL
         MVC   LINE2+7(4),16(R3)        MOVE IN SYSTEM ID        AMDAHL
         S     R2,=F'6'                 BACK UP TO CVT PREFIX
         MVC   LINE2+20(8),=C'RELEASE-'                          AMDAHL
         MVC   LINE2+28(2),2(R2)        FIRST HALF OF REL NO     AMDAHL
         MVI   LINE2+30,C'.'                                     AMDAHL
         MVC   LINE2+31(2),4(R2)        SECOND HALF OF REL NO    AMDAHL
         UNPK  DOUBLE(5),0(3,R2)        MODEL NUM
         TR    DOUBLE+1(3),HEXTAB
         MVC   LINE2+40(10),=C'CPU MODEL-'                       AMDAHL
         MVC   LINE2+50(3),DOUBLE+1                              AMDAHL
         MVC   LINE2+60(9),=C'CPU SIZE-'                         AMDAHL
         L     R3,312+6(,R2)
         LA    R3,1(,R3)                BUMP BY ONE
         SRL   R3,10                    CONVERT TO K
         CVD   R3,DOUBLE
         MVC   LINE2+69(7),=X'4020206B202120' EDIT MASK          AMDAHL
         ED    LINE2+69(7),DOUBLE+5     DO THE EDIT              AMDAHL
         MVI   LINE2+76,C'K'                                     AMDAHL
         MVC   LINE3(16),=C'VIO SLOTS IN USE'                    AMDAHL
         SLA   R7,2                     MULT BY 4 TO MAKE K
         CVD   R7,DOUBLE
         MVC   LINE3+20(10),=X'40206B2020206B202120'             AMDAHL
         ED    LINE3+20(10),DOUBLE+4                             AMDAHL
         MVI   LINE3+30,C'K'                                     AMDAHL
         MVC   LINE3+40(17),=C'A.S. SLOTS IN USE'                AMDAHL
         SLA   R8,2                     MULT BY 4 TO MAKE K
         CVD   R8,DOUBLE
         MVC   LINE3+60(10),=X'40206B2020206B202120'             AMDAHL
         ED    LINE3+60(10),DOUBLE+4                             AMDAHL
         MVI   LINE3+70,C'K'                                     AMDAHL
         MVC   LINE4(17),=C'SLOT SPACE IN USE'                   AMDAHL
         AR    R7,R8                    SUM UP
         CVD   R7,DOUBLE
         MVC   LINE4+20(10),=X'40206B2020206B202120'             AMDAHL
         ED    LINE4+20(10),DOUBLE+4                             AMDAHL
         MVI   LINE4+30,C'K'                                     AMDAHL
         L     R1,16                    FIND CVT
         L     R7,X'164'(,R1)           FIND PVT
         MVC   LINE4+40(18),=C'USABLE FRAME SPACE'               AMDAHL
         LH    R8,8(,R7)                USABLE FRAME COUNT
         SLL   R8,2                     MULT BY 4 TO GET K
         CVD   R8,DOUBLE
         MVC   LINE4+60(10),=X'40206B2020206B202120'             AMDAHL
         ED    LINE4+60(10),DOUBLE+4                             AMDAHL
         MVI   LINE4+70,C'K'                                     AMDAHL
         SPACE
         CALL  PAGE                                              AMDAHL
         B     ASKAGAIN
         EJECT
EXIT     EQU   *
         XR    R15,R15                                           AMDAHL
         SVC   3                                                 AMDAHL
         SPACE 2
         LTORG
DOUBLE   DC    D'0'
ONNULL   DC    A(CMDJ)                  DEFAULT SUBCOMMAND
IOPLADS  DC    4F'0'                    PUTGET IOPL
GETPARM  PUTGET OUTPUT=(PROLD,SINGLE,MODE),TERMPUT=(ASIS),MF=L
FWORK    DC    F'0'
GETECB   DC    F'0'
LINE     DC    CL80' '
PROLD    DC    A(1,PRRDW)
PRRDW    DC    AL2(7,0),C' '
PROMPT   DC    CL2'IN'
WTOLIST  WTO   '123456789 123456789 123456789 123456789 123456789 12345*
               6789 123456789 123456789 ',MF=L
BLANKS   DC    CL80' '
AUTHLVL  DC    X'00'                    USER CMD LEVEL
HEADER   DC    CL80'AID   NAME   FLGS  WAITS  SWAPS DMN  PG -SLOTS- WKG*
                SET   J/S TIME DP   CORE   '
ADDROP1  DC    A(OP1)                                            AMDAHL
         SPACE
OP2      DC    CL40'* * PRIVILEGED SUBCOMMANDS * *'
         DC    CL40'// - ENTER A COMMAND TO OS'
         DC    CL40'/$ - ENTER A COMMAND TO OS AS MASTCON'
OP2LEN   EQU   *-OP2
         SPACE
         LTORG
         SPACE
HEXTAB   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
         TITLE 'PF12 - CURIOSITY KILLED THE CAT, BUT SATISFACTION BROUGH
               HT HIM BACK TO LIFE '
PF12X   CSECT
         PUSH  USING
         SAVE  (14,12),T,JOBS_TSO_COMMAND
         USING PF12X,R15                                         AMDAHL
         LA    R11,SAVEARE2                                      AMDAHL
         ST    R13,SAVEARE2+4                                    AMDAHL
         USING SAVEARE2,R13                                      AMDAHL
         ST    R11,8(,R13)                                       AMDAHL
         LR    R13,R11                                           AMDAHL
         LR    R12,R15                                           AMDAHL
         DROP  R15                                               AMDAHL
         USING PF12X,R12                                         AMDAHL
         LA    R1,LINE1            ADDRESS FIRST OUTPUT AREA     AMDAHL
         LA    R2,OPLENTH          GET THE LENTGH OF AN 'OP' LINEAMDAHL
         L     R4,PF12OP1          ADDRESS FIRST AREA            AMDAHL
         LA    R9,OPNUM            NUMBER OF OPERANDS            AMDAHL
PFF0     EQU   *                                                 AMDAHL
         MVC   0(OPLENTH,R1),0(R4) MOVE AN ENTRY                 AMDAHL
         LA    R1,79(,R1)          ADDRESS NEXT OUTPUT LINE      AMDAHL
         LA    R4,0(R2,R4)         INPUT AREA                    AMDAHL
         BCT   R9,PFF0             MOVE IT CHARLEY               AMDAHL
*
* NOW THAT WE HAVE BUILT THE DISPLAY GETMAIN WRITE IT OUT IN AN
* HIGHLY  UN-ORDINARY FASHION
*
         LA    R0,SCREEN2
         LA    R1,SCREENL          FIND THE LENGTH OF THE SCREEN
         XR    R15,R15             BLANK IT
         MVCL  R0,R14              ...
         LA    R2,SCREENL-79       GET THE NUMBER OF CHARACTERS
*                                   WE HAVE TO MOVE ...
         LA    R3,SCREEN2          ADDRESS THE SCREEN
         LA    R7,SCREEN           ...
         MVC   0(79,R3),0(R7)      MOVE THE TITLE
PF0      EQU   *                   BEGIN PROCESS LOOP
         LTR   R2,R2
         BZ    PFEND
         STCK  STCK                GET THE CLOCK
         ICM   R1,B'0011',STCK+4   GET SOMETHING A BIT RANDOM
         N     R1,PFMASK           GET BOTTOM 768
         LA    R5,0(R1,R3)         ADDRESS THE OUTPUT AREA
         LA    R6,0(R1,R7)         ADDRESS INPUT AREA
         CLI   0(R5),0             IS IT ALREADY BLANK?
         BNE   PF0                 NO.. TRY ANOTHER CHARACTER
         BCTR  R2,0                CHECK THIS OUT
         MVC   0(0,R5),0(R6)       MOVE ONE CHARACTER
         CLI   0(R5),C' '          IS IT BLANK ?
         BE    PF0                 YES.. DONT WRITE SCREEN
         CALL  WRITEX
         STIMER WAIT,BINTVL==F'10'
         B     PF0
         SPACE 1
PFEND    EQU   *                   COME HERE AFTER DAMAGE
         L     R13,SAVEARE2+4
         RETURN (14,12),RC=0
         LTORG ,
         POP   USING
PF12OP1  DC    A(OP1)
PFMASK   DC    A(X'7FF')
         TITLE 'JOBS - TSO DISPLAY JOBS COMMAND'
JOBS    CSECT
         PUSH  USING
         SAVE  (14,12),T,JOBS_TSO_COMMAND
         USING JOBS,R15                                          AMDAHL
         LA    R11,SAVEARE2                                      AMDAHL
         ST    R13,SAVEARE2+4                                    AMDAHL
         USING SAVEARE2,R13                                      AMDAHL
         ST    R11,8(,R13)                                       AMDAHL
         LR    R13,R11                                           AMDAHL
         LR    R12,R15                                           AMDAHL
         DROP  R15                                               AMDAHL
         USING JOBS,R12                                          AMDAHL
         SPACE 2
STAR2    DS    0H
         USING SAVEARE2,R13
         SPACE 2
         CALL  SCRCLEAR                                          AMDAHL
*        L     R6,=V(CLEARREG)                                   AMDAHL
*        LM    R6,R9,0(R6)              INITIALIZE TABLE         AMDAHL
*        MVCL  R6,R8                                             AMDAHL
         SPACE 1
         L     R1,16                    FIND CVT
         L     R2,X'94'(,R1)            FIND BASEA (M.S.RES.DATA)
         LA    R3,LINE2                 NAME TABLE               AMDAHL
         LA    R4,79                    BXLE INCREMENT           AMDAHL
         LA    R5,INPUTLNE-1           BXLE END                  AMDAHL
         SR    R6,R6                    COUNT OF JOBS
CSCBLOOP ICM   R2,15,0(R2)
         BZ    CSCBEND                  WHEN DONE
         CLI   28(R2),2                 TSO USER ID?
         BNE   CSCBLOOP
         SPACE 1
* FIND THE ASSOCIATED ASCB
         SPACE 1
         L     R1,16                    GET CVT
         L     R1,X'22C'(,R1)           FIND ASVT
         LA    R1,X'20C'(,R1)           FIND ENTRY ZERO
         LH    R0,30(,R2)               GET ASID
         SLA   R0,2                     MULT BY FOUR
         AR    R1,R0                    R1 NOW POINTS TO ASVT ENTRY
GOTASVE  L     R1,0(,R1)                GET ASCB ADDRESS
         SPACE 1
GOTASCB  ICM   R7,15,176(R1)            PICK UP STC NAME
         BZ    CSCBLOOP                 NONE, SKIP
         CLC   =CL8'INIT',0(R7)         CHECK FOR INIT
         BNE   CSCBLOOP                 SKIP IF NOT
         SPACE 2
         LA    R6,1(,R6)                BUMP USER COUNT
         MVC   1(8,R3),8(R2)            MOVE JOBNAME TO TABLE
         SPACE
         L     R15,X'90'(,R1)           FIND OUCB
         TM    17(R15),X'80'            NON SWAPPABLE?
         BZ    *+8
         MVI   0(R3),C'^'
         CLI   32(R2),C' '              CHECK FOR PRINTABLE
         BNH   *+10
         MVC   10(8,R3),32(R2)          MOVE IN PROCSTEP
         CLI   64(R2),C' '              CHECK FOR PRINTABLE
         BNH   *+10
         MVC   19(8,R3),64(R2)          MOVE IN STEPNAME
         SPACE
         LH    R0,120(,R1)              ALLOC AUX SLOTS (VAM)
         SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,WOUBLE
         MVC   27(7,R3),=X'4020206B202120'  EDIT MASK
         ED    27(7,R3),WOUBLE+5      DO THE EDIT
         MVI   34(R3),C'K'
         LH    R0,122(,R1)              ALLOC AUX SLOTS (NON-VAM)
         SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,WOUBLE
         MVC   35(7,R3),=X'4020206B202120'  EDIT MASK
         ED    35(7,R3),WOUBLE+5      DO THE EDIT
         MVI   42(R3),C'K'
         LH    R0,152(,R1)              REAL STORAGE IN USE
         ICM   R15,15,48(R2)            CHECK FOR V=R
         BZ    VIRTJOB
         LR    R0,R15                   DISPLAY V=R SIZE
         MVI   0(R3),C'='               SHOW V=R
VIRTJOB  SLA   R0,2                     MULT BY 4 TO GET IT IN 'K'
         CVD   R0,WOUBLE
         MVC   45(7,R3),=X'4020206B202120'  EDIT MASK
         ED    45(7,R3),WOUBLE+5      DO THE EDIT
         MVI   52(R3),C'K'
         LM    R14,R15,64(R1)           PICK UP CPU TIME
         SRDL  R14,24                   MOVE TO ODD REG
         M     R14,=A(1048576)          COMPUTE IN SECONDS
         D     R14,=A(10000*256)
         CVD   R15,WOUBLE
         MVC   55(10,R3),=X'4020206B2021204B2020'
         ED    55(10,R3),WOUBLE+4      DO THE EDIT
         MVI   65(R3),C'S'
         LM    R14,R15,200(R1)          PICK UP SRB TIME
         SRDL  R14,24                   MOVE TO ODD REG
         M     R14,=A(1048576)          COMPUTE IN SECONDS
         D     R14,=A(10000*256)
         CVD   R15,WOUBLE
         MVC   66(10,R3),=X'4020206B2021204B2020'
         ED    66(10,R3),WOUBLE+4      DO THE EDIT
         MVI   76(R3),C'S'
         UNPK  WOUBLE(3),43(2,R1)       CONVERT DPRTY TO HEX
         TR    WOUBLE(2),TABHEX
         MVC   78(2,R3),WOUBLE          MOVE FOR PRNTING
         SPACE
         BXLE  R3,R4,CSCBLOOP
         TPUT  MSGOV,L'MSGOV
         SPACE 2
CSCBEND  CVD   R6,WOUBLE                NUM JOBS MSG
         MVC   NUMJOBS(4),=X'40202120'
         ED    NUMJOBS(4),WOUBLE+6
         MVC   LINE1(79),NUMJOBS                                 AMDAHL
*        TPUT  NUMJOBS,LMSG                                      AMDAHL
         SPACE 2
         LR    R5,R3                    SET END OF TABLE
         LA    R2,LINE2                 SET START OF TABLE       AMDAHL
         LR    R6,R4                    FOR S0RT
         LR    R7,R5
         SR    R7,R6                    BACK UP ONE ENTRY
         SR    R7,R6
         LR    R8,R2                    SAVE FIRST ADDRESS
S0RTLOOP CLC   1(8,R2),81(R2)           COMPARE TWO              AMDAHL
         BNH   S0RTBXLE
         LR    R8,R2                    LAST SWAP
         XC    0(79,R2),79(R2)                                   AMDAHL
         XC    79(79,R2),0(R2)                                   AMDAHL
         XC    0(79,R2),79(R2)                                   AMDAHL
S0RTBXLE BXLE  R2,R6,S0RTLOOP
         LR    R7,R8                    SAVE LAST SWAP
         LA    R2,LINE2                 REINIT                   AMDAHL
         LR    R8,R2                    REINIT LAST SWAP
COMPARE  CR    R2,R7                    DONE?
         BL    S0RTLOOP
* OUTPUT THE DATA
         SPACE 1
         SPACE 1
         L     R13,SAVEARE2+4
         RETURN (14,12),RC=0
         POP   USING
         SPACE 1
NUMJOBS DC    X'40202120',C' ACTIVE JOBS            --VIO--'
        DC    C' -SLOTS-   WKG SET     CPU TIME   SRB TIME PR'
LMSG     EQU   *-NUMJOBS
MSGOV    DC    C'* TABLE OVERFLOW *'
WOUBLE   DC    D'0'
         SPACE
TABHEX   EQU   *-C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
         SPACE 1
         LTORG
         USING WORK,R13
         SPACE 1
         TITLE 'USERS - TSO DISPLAY LOGGED ON USERS COMMAND'
USERS    CSECT
         PUSH  USING
         ENTRY CLEARREG,TABLE
         SAVE  (14,12),T,USERS_TSO_COMMAND
         USING USERS,R15                                         AMDAHL
         LA    R11,SAVEARE3                                      AMDAHL
         ST    R13,SAVEARE3+4                                    AMDAHL
         USING SAVEARE3,R13                                      AMDAHL
         ST    R11,8(,R13)                                       AMDAHL
         LR    R13,R11                                           AMDAHL
         DROP  R15                                               AMDAHL
         LR    R12,R15                                           AMDAHL
         USING USERS,R12                                         AMDAHL
         SPACE 2
STAR3    DS    0H
         USING SAVEARE3,R13
         SPACE 2
         CALL  SCRCLEAR                                          AMDAHL
*        LM    R6,R9,CLEARREG                                    AMDAHL
*        MVCL  R6,R8                    CLEAR TABLE              AMDAHL
         SPACE
         L     R1,16                    FIND CVT
         L     R2,X'94'(,R1)            FIND BASEA (M.S.RES.DATA)
         LA    R3,LINE2                 NAME TABLE
         LA    R4,10                    BXLE INCREMENT
         LA    R5,INPUTLNE-1            BXLE END
         SR    R6,R6                    COUNT OF USERS
CSC8LOOP ICM   R2,15,0(R2)
         BZ    CSC8END                  WHEN DONE
         CLI   28(R2),1                 TSO USER ID?
         BNE   CSC8LOOP
         LA    R6,1(,R6)                BUMP USER COUNT
         MVC   0(8,R3),8(R2)            MOVE USERID TO TABLE
         BXLE  R3,R4,CSC8LOOP
         TPUT  MSG0V,L'MSG0V
         SPACE 2
CSC8END  CVD   R6,D0UBLE                NUM USERS MSG
         MVC   NUMUSERS(4),=X'40202020'
         ED    NUMUSERS(4),D0UBLE+6
         MVC   LINE1(LNSG),NUMUSERS                              AMDAHL
*        TPUT  NUMUSERS,LNSG                                     AMDAHL
         SPACE 2
         LR    R5,R3                    SET END OF TABLE
         LA    R2,LINE2                 SET START OF TABLE       AMDAHL
         LR    R6,R4                    FOR SORT
         LR    R7,R5
         SH    R7,=H'20'                BACK UP ONE ENTRY
         LR    R8,R2                    SAVE FIRST ADDRESS
SORTLOOP CLC   0(8,R2),10(R2)           COMPAIR TWO
         BNH   SORTBXLE
         LR    R8,R2                    LAST SWAP
         XC    0(8,R2),10(R2)
         XC    10(8,R2),0(R2)
         XC    0(8,R2),10(R2)
SORTBXLE BXLE  R2,R6,SORTLOOP
         LR    R7,R8                    SAVE LAST SWAP
         LA    R2,LINE2                 REINIT
         LR    R8,R2                    REINIT LAST SWAP
COMPAIR  CR    R2,R7                    DONE?
         BL    SORTLOOP
         SPACE 2
* SKIP FOR NON BLANK NAME
         SPACE 1
BLNKL00P CLI   0(R2),C' '
         BNE   PRNTLOOP
         BXLE  R2,R4,BLNKL00P
         SPACE 1
* OUTPUT NAMES
         SPACE 1
PRNTLOOP EQU   *                        COMPUTE LENGTH           AMDAHL
*        SR    R3,R2                                             AMDAHL
*        BP    *+6                      IF ANSWER IS ZERO        AMDAHL
*        LR    R3,R4                    ONLY 1 USER IS ON        AMDAHL
*        TPUT  (2),(3),R                                         AMDAHL
         SPACE 1
         L     R13,SAVEARE3+4
         RETURN (14,12),RC=0
         SPACE 1
NUMUSERS DC    X'40202020',C' USERS LOGGED ON'
LNSG     EQU   *-NUMUSERS
MSG0V    DC    C'* TABLE OVERFLOW *'
D0UBLE   DC    D'0'
         SPACE 2
         POP   USING
         USING WORK,R13
         SPACE 1
         LTORG
         SPACE 1
CLEARREG DC    A(TABLE,2000),A(0),X'40000000'
TABLE    DS    200CL10' '
LENTABLE EQU   *-TABLE
         TITLE 'PAGE - PAGE TABLE STAT DISPLAY SUBROUTINE '
PAGE     CSECT
TOP      SAVE (14,12),T,PAGEFRAME
         LR    R10,R15                  SET BASE
         USING TOP,R10
         LA    R1,SAVE
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING SAVE,R13
         MVC   LINE5+24(31),=C'* PAGE FRAME TABLE STATISTICS *'  AMDAHL
         XC    NUC(LEN),NUC
         L     R2,16
         L     R2,X'164'(R2)            PVT
         L     R3,12(R2)                PFT
         LR    R4,R3
         LH    R5,16(R2)                STARTING OFFSET
         AH    R4,18(R2)                ENDING OFFSET
         AR    R3,R5                    ADD STARTING OFFSET
         SRL   R5,4                     DIVIDE BY 16 FOR PAGE COUNT
         STH   R5,NUC                   PAGES OF NUC AND FIXED AREA
L00P     CLI   14(R3),0                 AVAILABE FRAME
         BNE   VR                       NO, TRY V=R
         LH    R1,AVAIL
         LA    R1,1(R1)
         STH   R1,AVAIL
         B     NEXT
VR       TM    12(R3),2                 IS IT USED FOR V=R
         BZ    BD                       NO, TEST FOR BAD FRAME
         LH    R1,REAL
         LA    R1,1(R1)
         STH   R1,REAL
         B     NEXT
BD       TM    12(R3),4                 IS IT A BAD FRAME
         BZ    FIX                      NO, TEST FOR LONG FIXED
INCBAD   LH    R1,BAD
         LA    R1,1(R1)
         STH   R1,BAD
         B     NEXT
FIX      TM    12(R3),16                IS IT LONG FIXED
         BZ    VIOTEST                  NO, TEST FOR SQA
         LH    R1,LONG
         LA    R1,1(R1)
         STH   R1,LONG
VIOTEST  TM    13(R3),X'10'             IS IT VIO
         BZ    SQAREA                   NO, TEST FOR SQA
         LH    R1,VIO
         LA    R1,1(R1)
         STH   R1,VIO
SQAREA   CLI   14(R3),4                 IS IT RESERVED FOR SQA
         BE    INCSQA                   YES, COUNT A PART OF SQA
         CLI   14(R3),12                IS IT SQA
         BNE   COM                      NO, TEST FOR LOCAL
INCSQA   LH    R1,SQA
         LA    R1,1(R1)
         STH   R1,SQA
         B     NEXT
COM      CLI   14(R3),8                 IS IT CSA
         BNE   LOC                      NO, TEST FOR LOCAL
         LH    R1,CSA
         LA    R1,1(R1)
         STH   R1,CSA
         B     STL
LOC      CLI   14(R3),X'80'             IS IT PROCGAMMER AREA
         BNE   LOCSQA                   NO, TEST FOR LSQA
         LH    R1,PGM
         LA    R1,1(R1)
         STH   R1,PGM
         B     INCLOC
LOCSQA   CLI   14(R3),X'84'             IS IT LSQA
         BNE   XXX                      NO, CANT BE
         LH    R1,LSQA
         LA    R1,1(R1)
         STH   R1,LSQA
INCLOC   LH    R1,LOCAL
         LA    R1,1(R1)
         STH   R1,LOCAL
STL      CLC   8(2,R3),=X'0000'         IS IT FIXED AT ALL
         BE    NEXT                     NO SKIP IT
         TM    12(R3),16                ISIT LONG FIX
         BO    NEXT                     YES, SKIP, WE WANT SHORT
         LH    R1,SHORT
         LA    R1,1(R1)
         STH   R1,SHORT
         B     NEXT
XXX      NOP   0
NEXT     LA    R3,16(R3)
         CR    R3,R4                    WE AT END
         BNH   L00P                     NO
         LA    R3,VALUES
         LA    R4,NUC
         LA    R5,NAMES
         LA    R6,LINE6            ADDRESS FIRST OUTPUT LINE     AMDAHL
EACHLINE EQU   *
         LA    R2,4                     PER LINE
         MVI   OUTLINE,C' '             BLANK
         MVC   OUTLINE+1(79),OUTLINE    RIPPLE
EACHVAL  MVC   0(9,R6),0(R5)  COPY NAME
         LH    R7,0(R4)                 GET VALUE
         SLL   R7,2
         CVD   R7,CVWORK
         MVC   9(7,R6),=X'4020206B202120'
         ED    9(7,R6),CVWORK+5
         MVI   16(R6),C'K'
         LA    R4,2(R4)                 NEXT VALUE
         LA    R5,9(R5)                 NEXT NAME
         LA    R6,20(R6)                NEXT POSITION IN LINE
         BCT   R3,BUMP
         B     PUT
BUMP     BCT   R2,EACHVAL
PUT      EQU   *
         BCTR  R6,0                GET THE ADDRESS OF THE NEXT OUTPUT
*                                    LINE
         LTR   R3,R3                    ANY MORE
         BNZ   EACHLINE                 YES
XIT      L     R13,4(R13)
         RETURN (14,12),RC=0
         LTORG ,
         DROP  R13
CVWORK   DS    D
NUC      DS    H
AVAIL    DS    H
BAD      DS    H
SQA      DS    H
CSA      DS    H
REAL     DS    H
LONG     DS    H
VIO      DS    H
LSQA     DS    H
PGM      DS    H
LOCAL    DS    H
SHORT    DS    H
LEN      EQU   *-NUC
VALUES   EQU   12
REPLY    DS    CL3
OUTLINE  DS    CL80
NAMES    DC    CL9'NUCLEUS'
         DC    CL9'AVAILABLE'
         DC    CL9'BAD PAGES'
         DC    CL9'SQA'
         DC    CL9'LPA/CSA'
         DC    CL9'REAL'
         DC    CL9'LONG FIX'
         DC    CL9'VIO'
         DC    CL9'LSQA'
         DC    CL9'PROGRAM'
         DC    CL9'LOCAL'
         DC    CL9'SHORT FIX'
         USING WORK,R13
         EJECT
         SPACE 4
*.
* INISH  SET INITIAL SCREEN VALUES -
*
         ENTRY INISH
INISH    DS    0F
         USING *,R15               SET LOCAL ADDRESSABILITY
         LA    R0,NUMBANNR         GET NUMBER OF LINES
         LR    R9,R14              SAVE OVER WRITE
         L     R1,ADDRBANR
         LA    R14,LINE1+5         ADDRESS FIRST LINE
         USING LINE1,R14
INI1     EQU   *
         MVC   LINE1(79),0(R1)     MOVE IT ALONG
         LA    R1,79(,R1)
         LA    R14,79(,R14)
         BCT   R0,INI1
         LA    R15,WRITE
         LR    R14,R9              RESET BUSTED REGISTER
         BR    R15                 SEE YU.. TRUCK ON DOWN
         DROP  R15,R14
*.                                                               AMDAHL
*   SCRCLEAR - SCREEN CLEAR                                      AMDAHL
*                                                                AMDAHL
*   CALL  THIS  ROUTINE TO CLEAR THE OUTPUT AREA OF A SCREEN     AMDAHL
*                                                                AMDAHL
*.                                                               AMDAHL
         ENTRY SCRCLEAR                                          AMDAHL
SCRCLEAR DS    0F                                                AMDAHL
         LA    R0,LINE1                                          AMDAHL
         LA    R1,LINE24+76        ADDRESS OF THE END OF THE OUTPAMDAHL
*                                   AREA.                        AMDAHL
         SLR   R1,R0               TO OBTAIN THE LENGTH          AMDAHL
         LA    R15,C' '            GET THE PAD CHARACTER         AMDAHL
         SLL   R15,24              PUT IT WHERE MVCL WANTS IT    AMDAHL
         MVCL  R0,R14              AND BLANK THE SCREEN BUFFER   AMDAHL
         BR    R14                 RETURN FROM PARADISE          AMDAHL
         SPACE 2                                                 AMDAHL
*.                                                               AMDAHL
*   WRITE -                                                      AMDAHL
*                                                                AMDAHL
*    THIS ROUTINE CALLS THE TERMIO INTERFACE TO WRITE THE SCREEN AMDAHL
*                                                                AMDAHL
*.                                                               AMDAHL
         ENTRY WRITE                                             AMDAHL
WRITE    DS    0F                                                AMDAHL
         USING WRITE,R15                                         AMDAHL
         LR    R9,R14                                            AMDAHL
         TRMIO IOCB,FORMAT=SCR1,IMAGE=SCREEN BEEP=YES            AMDAHL
         DROP  R15                                               AMDAHL
         BR    R9                                                AMDAHL
         ENTRY WRITEX                                            AMDAHL
WRITEX   EQU   *                                                 AMDAHL
         USING WRITEX,R15                                        AMDAHL
         USING SAVEARE2,R13
         LR    R9,R14                                            AMDAHL
         TRMIO IOCB,WRITE,FORMAT=SCR1,IMAGE=SCREEN2
         DROP  R15,R13                                           AMDAHL
         BR    R9                                                AMDAHL
         LTORG                                                   AMDAHL
         SPACE 5                                                 AMDAHL
SCR1     SFMT                                                    AMDAHL
LINE1    FIELD 79                                                AMDAHL
LINE2    FIELD 79,INTEN=LO                                       AMDAHL
LINE3    FIELD 79,INTEN=LO                                       AMDAHL
LINE4    FIELD 79,INTEN=LO                                       AMDAHL
LINE5    FIELD 79,INTEN=LO                                       AMDAHL
LINE6    FIELD 79,INTEN=LO                                       AMDAHL
LINE7    FIELD 79,INTEN=LO                                       AMDAHL
LINE8    FIELD 79,INTEN=LO                                       AMDAHL
LINE9    FIELD 79,INTEN=LO                                       AMDAHL
LINE10   FIELD 79,INTEN=LO                                       AMDAHL
LINE11   FIELD 79,INTEN=LO                                       AMDAHL
LINE12   FIELD 79,INTEN=LO                                       AMDAHL
LINE13   FIELD 79,INTEN=LO                                       AMDAHL
LINE14   FIELD 79,INTEN=LO                                       AMDAHL
LINE15   FIELD 79,INTEN=LO                                       AMDAHL
LINE16   FIELD 79,INTEN=LO                                       AMDAHL
LINE17   FIELD 79,INTEN=LO                                       AMDAHL
LINE18   FIELD 79,INTEN=LO                                       AMDAHL
LINE19   FIELD 79,INTEN=LO                                       AMDAHL
LINE20   FIELD 79,INTEN=LO                                       AMDAHL
LINE21   FIELD 79,INTEN=LO                                       AMDAHL
INPUTLNE FIELD 79,ALPHA,CURSOR=AFTER                             AMDAHL
MSGLINE  FIELD 79                                                AMDAHL
LINE24   FIELD 79                                                AMDAHL
         SFEND ,                                                 AMDAHL
ADDRBANR DC    A(BANNER)
OP1      DC    79C'_'                                            AMDAHL
         ORG   OP1+23                                            AMDAHL
OPTART   DC    C'* * OPTIONS CURRENTLY SUPPORTED * *'            AMDAHL
         ORG   ,                                                 AMDAHL
         DC    CL37'E  - END THIS PROCESSOR'                     AMDAHL
         DC    C' × '                                            AMDAHL
         DC    CL39'S  - STARTED TASK DISPLAY'                   AMDAHL
         DC    CL37'I  - INITIATOR DISPLAY'                      AMDAHL
         DC    C' × '                                            AMDAHL
         DC    CL39'SS - SYSTEM PERFORMANCE STATISTICS'          AMDAHL
         DC    CL37'J  - RUNNING JOBS DISPLAY'                   AMDAHL
         DC    C' × '                                            AMDAHL
         DC    CL39'TS - TSO USER DISPLAY W/STATISTICS'          AMDAHL
         DC    CL37'LP - ACTIVE LINK PACK AREA'                  AMDAHL
         DC    C' × '                                            AMDAHL
         DC    CL39'T  - TSO USER DISPLAY'                       AMDAHL
         DC    CL79' '                                           AMDAHL
         DC    CL28' '              CENTER DEFINITIONS           AMDAHL
         DC CL79'  ----- ----- -----  '                          AMDAHL
         DC CL79' × PF1 × PF2 × PF3 × '                          AMDAHL
         DC CL79' ×HELP × NULL× EXIT× '                          AMDAHL
         DC CL79'  ----- ----- -----  '                          AMDAHL
         DC CL79' × PF4 × PF5 × PF6 × '                          AMDAHL
         DC CL79' × SS  × LP  ×  T  × '                          AMDAHL
         DC CL79'  ----- ----- -----  '                          AMDAHL
         DC CL79' × PF7 × PF8 × PF9 × '                          AMDAHL
         DC CL79' ×  I  ×  J  × TS  × '                          AMDAHL
         DC CL79'  ----- ----- -----  '                          AMDAHL
         DC CL79' × PF10× PF11× PF12× '                          AMDAHL
         DC CL79' ×  S  × NULL×RSRVD× '                          AMDAHL
         DC CL79'  ----- ----- -----  '                          AMDAHL
         DC  CL51' '                                             AMDAHL
OPLEN    EQU   *-OP1                                             AMDAHL
OPLENTH  EQU   79                  LENGTH OF AN ENTRY            AMDAHL
OPNUM    EQU   OPLEN/OPLENTH       NUMBER OF OPERANDS            AMDAHL
         LTORG ,                                                 AMDAHL
BANNER   DC    CL79' '                                           AMDAHL
 DC CL79'           MMMMM        MMMMM'                          AMDAHL
 DC CL79'          MMMMMMM      MMMMMMM'                         AMDAHL
 DC CL79'         MMMMMMMMMMMMMMMMMMMMMM'                        AMDAHL
 DC CL79'         MMMM     MMMMM    MMMM'                        AMDAHL
 DC CL79'         MMMM     MMMMM    MMMM'                        AMDAHL
 DC CL79'         MMMM     MMMMM    MMMM'                        AMDAHL
 DC CL79'         MMMM     MMMMM    MMMM'                        AMDAHL
 DC CL79'         MMMMM     MMM    MMMMM'                        AMDAHL
 DC CL79'         MMMMM            MMMMM'                        AMDAHL
 DC CL79'                                    SSSSSSSSSSSSSSSS '  AMDAHL
 DC CL79'                                   SSSSSSSSSSSSSSSSSS ' AMDAHL
 DC CL79'                                  SSSS             SSS' AMDAHL
 DC CL79'          --------------------    SSSS                ' AMDAHL
 DC CL79'         × TSO MASTER SUMMARY ×    SSSSSSSSSSSSSSSSS  ' AMDAHL
 DC CL79'         × PRESS PF1 FOR HELP ×     SSSSSSSSSSSSSSSSS ' AMDAHL
 DC CL79'          --------------------                    SSSS' AMDAHL
 DC CL79'                                  SSS             SSSS' AMDAHL
 DC CL79'                                   SSSSSSSSSSSSSSSSSS'  AMDAHL
 DC CL79'                                    SSSSSSSSSSSSSSSS'   AMDAHL
 DC CL79'                                                    '   AMDAHL
NUMBANNR EQU  (*-BANNER)/79                                      AMDAHL
         TITLE 'M S -   D S E C T   D E F I N I T I O N S '      AMDAHL
WORK     DSECT ,                                                 AMDAHL
SAVE     DS    18F                                               AMDAHL
SAVEARE3 DS    18F                                               AMDAHL
SAVEARE2 EQU   SAVEARE3                                          AMDAHL
STCK     DS    D                                                 AMDAHL
IOCB     IOCB  ,                                                 AMDAHL
DIRT     DC    CL79' '                                           AMDAHL
SCREEN   EQU   *                                                 AMDAHL
         DSGEN SCR1                                              AMDAHL
SCREENL  EQU   *-SCREEN                                          AMDAHL
SCREEN2  DS    CL(SCREENL)
WORKLEN  EQU   *-WORK                                            AMDAHL
         IHAASCB ,                                               AMDAHL
         IRAOUCB ,                                               AMDAHL
CVT      DSECT
         CVT
         END   MS
