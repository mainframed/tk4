*
*
*
*           IKJEFLD IS THE LOGON PRE-PROMPT EXIT.  IT IS LINKED AS A
*      CSECT IN THE LOGON PROCESSING MODULE IKJEFLA, AND RECEIVES
*      CONTROL ALMOST IMMEDIATELY DURING LOGONS.
*
*           IT HAS BEEN WRITTEN TO HANDLE ALL THE UADS PROCESSING WHICH
*      WOULD NORMALLY BE UNDERTAKEN BY THE LOGON MODULES, IN ORDER TO
*      GIVE US FULL CONTROL OVER WHAT ATTRIBUTES TSO USERS CAN HAVE, AND
*      ALSO TO ALLOW US TO ADD OUR OWN PARAMETERS AND KEEP STATISTICS ON
*      USERS.
*
*           THE FOLLOWING PARAMETERS ARE NOW THE ONLY ONES ALLOWED AT
*      LOGON TIME -
*                  1.  USERID  OR  USERID/PWD
*                  2.  A(XXXX) OR  ACCT(XXXX) WHERE XXXX IS ACCOUNT INFO
*                  3.  PR($XX) OR  PROC($XX)  WHERE $XX IS LOGON PROC.
*                  4.  SIZE(NNNN)             WHERE NNNN IS REGION SIZE
*                  5.  OWNER
*
*           THE ACCOUNTING FIELD IN UADS MAY HAVE A MAXIMUM SIZE OF 40
*      BYTES.  WE HAVE USED THOSE 40 BYTES TO HOLD INFORMATION ABOUT THE
*      USER WHICH IS ACCESSED THROUGH THIS EXIT.  BECAUSE THE SIZE OF
*      THE ACCOUNTING FIELD IS DETERMINED WHEN A NEW USER IS ADDED TO
*      UADS, AN SPF MENU CALLED ACCOUNT HAS BEEN CREATED FOR ADDING NEW
*      USERS AND INITIALISING THE 40 BYTES.  THE LAYOUT OF THE FIELD IS
*      AS FOLLOWS -
*          START    LENGTH       CONTENTS               FORMAT
*      1.    1         4      ACCOUNTING INFO.          ZONED
*      2.    5         4      DATE LAST LOGGED ON       PACKED  - YYDDDF
*      3.    9         4      DATE PWD LAST CHANGED     PACKED  - YYDDDF
*      4.    13        8      USER'S NAME               ZONED
*      5.    21        8      DISTRIBUTION CODE         ZONED
*      6.    29        8      PHONE NUMBER              ZONED
*      7.    37        1      INDICATOR                 ZONED
*      8.    38        3      UNUSED                    ZONED   - XXX
*
*           EACH TIME A USER LOGS ON, THE CURRENT DATE IS PLACED IN THE
*      DATE LAST LOGGED ON FIELD AND COMPARED TO THE DATE PASSWORD LAST
*      CHANGED FIELD.  IF IT EXCEEDS 25, THE USER IS PROMPTED TO CHANGE
*      HIS PASSWORD.  THE PASSWORD MUST BE BETWEEN 4 AND 8 CHARACTERS IN
*      LENGTH, CANNOT BE THE SAME AS THE OLD PASSWORD, AND MUST NOT
*      CONTAIN THE SAME CHARACTER MORE THAN TWICE.  UADS IS UPDATED WITH
*      THE NEW PASSWORD, AND THE CURRENT DATE IS PLACED IN THE DATE PWD
*      LAST CHANGED FIELD.
*           IF A USER LOGS ON USING USERID/PWD  HE IS FORCED THROUGH THE
*      PASSWORD CHANGE ROUTINE BECAUSE THIS IS CONSIDERED A BREACH OF
*      SECURITY.
*           AT EACH CHANGE OF PASSWORD THE OLD AND NEW PASSWORD ARE CHAN
*      IN THE PARAMETER LIST TO FORCE CHANGE OF PASSWORD TO R.A.C.F. ( I
*      ACTIVE) .
*           AS PART OF THE PASSWORD CHANGING ROUTINE, THE USER'S NAME,
*      DISTRIBUTION CODE AND PHONE NUMBER ARE DISPLAYED AND THE USER MAY
*      CHANGE THEM IF HE WISHES.  THESE FIELDS ARE ALSO DISPLAYED IF THE
*      PARAMETER OWNER IS SPECIFIED AT LOGON, OR IF THE INDICATOR BYTE
*
*
*
*      (SEE 7. ABOVE) IS SET TO OTHER THAN F0.  THIS INDICATOR IS SET
*      THROUGH THE PEEK COMMAND TO EITHER F1,F2 OR F3  FOR NAME,
*      DISTRIBUTION CODE OR PHONE NUMBER RESPECTIVELY, AND THE FIELD SO
*      INDICATED IS THE ONLY ONE DISPLAYED FOR CHANGE.
*
*           EACH TIME A USER LOGS ON THE USERS NAME AND DISTRIBUTION COD
*      ARE STORED IN THE FIRST 12 BYTES OF THE UPT IN SIX BIT REPRESENTA
*      THIS IS USED BY THE SUBMIT EXIT - IKJEFF10 - TO SUPPLY INFORMATIO
*      IN THE JOB CARD .
*
*           ALL NEW USERS WILL BE SET UP WITH A PASSWORD OF GO  AND WILL
*      BE FORCED THROUGH THE PASSWORD CHANGE ROUTINE THE FIRST TIME THEY
*      LOG ON TO SELECT THEIR OWN PASSWORD AND CHECK THEIR PERSONAL
*      DETAILS.
*
*           SOME USERS, SUCH AS SOFTWARE DEVELOPMENT, PCS ETC, HAVE AN
*      ACCOUNTING CODE PREDEFINED IN UADS, AND DO NOT NEED TO LOGON WITH
*      THE ACCT PARAMETER.  FOR THE REST, HOWEVER, THE PARAMETER IS
*      REQUIRED, AND WILL BE PROMPTED FOR IF NOT ENTERED.  THE EXIT
*      LOADS A TABLE CALLED STJAP WHICH CONTAINS ALL THE SECTIONS ID'S
*      AND APPLICATION PREFIXES, AND CHECKS THE PARAMETER AGAINST IT.
*      IF THERE IS AN ERROR, A MESSAGE WILL DISPLAY ASKING THE USER TO
*      REENTER THE PARAMETER.
*
*           THE EXIT IS NOT DESIGNED TO CATER FOR MORE THAN ONE PASSWORD
*      OR ACCOUNTING FIELD.  HOWEVER, MORE THAN ONE LOGON PROCEDURE  MAY
*      BE PRESENT, ALTHOUGH IT IS NOT ENCOURAGED.  IF A SECOND LOGON
*      PROCEDURE IS NEEDED, THE USER MUST BE SET UP WITH THE APPROPRIATE
*      ACCOUNTING FIELD FIRST THROUGH THE SPF ACCOUNT MENU, AND THEN THE
*      SECOND LOGON PROCEDURE ADDED THROUGH THE ACCOUNT COMMAND, RATHER
*      THAN THE MENU.
*
*           MOST USERS ARE SET UP WITH THE MAXIMUM REGION SIZE AS 2048K.
*      IF THEY LOGON SPECIFYING A SIZE GREATER THAN THIS, THEY WILL NOT
*      RECEIVE AN ERROR MESSAGE, BUT WILL BE LOGGED ON WITH THE DEFAULT
*      SIZE OF 1024K.
*
*           AT THE START OF THE EXIT, PARAMETERS ARE CHECKED FOR RECONN,
*      AND IF FOUND, CONTROL IS IMMEDIATELY HANDED BACK TO THE LOGON
*      PROCESSOR FOR LOGON TO CONTINUE.
*
*           USERID IS CHECKED FOR BACKUP OR IBMUSER WHICH ARE NOT SUBJEC
*      TO THE PROCESSING OF THIS EXIT, AND IS HANDED IMMEDIATELY TO THE
*      LOGON PROCESSOR.  THIS ALLOWS AT LEAST ONE USER TO LOG ON IF FOR
*      SOME REASON THIS EXIT IS NOT IN THE SYSTEM OR IT IS IN ERROR.
*
*           THIS EXIT IS BASED ENTIRELY ON THE EXPECTATION THAT USERIDS
*      WILL BE SIX CHARACTERS LONG.  ANY DEVIATION FROM THIS TENET WILL
*      PREVENT USERS LOGGING ON.  THE ACCOUNTING FIELD MUST BE 40 BYTES
*      OR A SIMILAR RESULT WILL OCCUR.
*
IKJEFLD  TITLE 'IKJEFLD       LOGON PRE-PROMPT  DENNIS BECKETT'
*
*
*    THIS EXIT MAKES USE OF THE ACCOUNT NUMBER FIELD IN UADS TO
*    STORE THE DATE LAST LOGGED ON, DATE PASSWORD WAS LAST
*    CHANGED, NAME, DISTRIBUTION DESCRIPTOR, PHONE NUMBER, AND
*    A ONE BYTE INDICATOR SET THROUGH 'PEEK', WHICH INDICATES
*    THAT ONE OF THE ABOVE FIELDS MUST BE CHANGED AT LOGON TIME.
*
*    THIS MODULE MUST BE LINKED INTO SYS1.LPALIB AS A CSECT IN
*    IKJEFLA.
*    THE OBJECT CODE SHOULD BE KEPT IN 'SM00.PDS.OBJ'
*    JCL TO LINK IT IS IN MEMBER 'IKJLKED' IN 'SM00.SAMPLE.JCL'
*
*
         EJECT
IKJEFLD  CSECT
         USING *,R12
         USING *+4096,R11
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             ADDRESS BASE
         LA    R11,4095(R12)
         LA    R11,1(R11)
         LR    R2,R1               ADDRESS PARAMETERS
         L     R0,GETSIZE          SIZE OF STORAGE FOR GETMAIN
         GETMAIN R,LV=(0)
         LR    R10,R1              ADDRESS STORAGE GETMAINED
         USING GETAREA,R10         AND POINT TO IT
         ST    R13,SV13            SAVE REGISTER 13
         LA    R13,SVREGS          ADDRESS REG SAVE AREA
         B     START               COMMENCE PROCESSING
         EJECT
***********************************************************************
***************        CONSTANTS AND STORAGE            ***************
***********************************************************************
         SPACE 2
*************
* REGISTERS *
*************
         SPACE 1
         REGEQU
         SPACE 2
********************
* DUMMY I/O MACROS *
********************
         SPACE 1
GETSIZE  DC    A(ENDAREA-GETAREA)  SIZE OF STORAGE FOR GETMAIN
         SPACE 1
DUMUADS  DCB   BLKSIZE=800,DDNAME=SYSUADS,DSORG=PO,LRECL=80,           X
               MACRF=(R,W),RECFM=FB
         SPACE 1
DUMOPEN  OPEN   (,(UPDAT)),MF=L
         SPACE 1
DUMREAD  READ   DUMDECB,SF,,,'S',MF=L
         SPACE 1
DUMPTGT  PUTGET MF=L
PGEND    DS     0H
         SPACE 2
************************
* EXECUTE INSTRUCTIONS *
************************
         SPACE 1
EXT1A1   MVC   0(0,R6),0(R3)
EXT2A1   OC    0(0,R5),BLANKS
EXPWD    MVC   PASSWORD(0),0(R9)
EXPROC   MVC   PROC(0),0(R9)
EXSIZE   PACK  SDWORK,0(0,R9)
EXM9A3   MVC   0(0,R7),PASSOLD
EXM9A9   MVC   0(0,R7),PASSNEW
EXM9A5   MVC   0(0,R7),PROC
EXM9A7   MVC   0(0,R7),GROUP
EXC1A1   MVC   PROC(0),0(R5)
         SPACE 2
*********************
* TERMINAL MESSAGES *
*********************
         SPACE 1
MSG1L    DC    A(L'MSG1-1)
MSG1     DC    C' IKJ56700A ENTER USERID -'
MSG2AL   DC    A(L'MSG2A-1)
MSG2A    DC    C'IKJ56425I LOGON REJECTED, USERID '
MSG2BL   DC    A(L'MSG2B-1)
MSG2B    DC    C' IN USE'
MSG3L    DC    A(L'MSG3-1)
MSG3     DC    C' IKJ56400A ENTER LOGON OR LOGOFF -'
MSG4AL   DC    A(L'MSG4A-1)
MSG4A    DC    C'IKJ56420I USERID '
MSG4BL   DC    A(L'MSG4B-1)
MSG4B    DC    C' NOT AUTHORISED TO USE TSO'
MSG5L    DC    A(L'MSG5-1)
MSG5     DC    C' IKJ56429A REENTER -'
MSG6L    DC    A(L'MSG6-1)
MSG6     DC    C'IKJ56452I LOGON TERMINATED. SYSTEM ERROR'
MSG7AL   DC    A(L'MSG7A-1)
MSG7A    DC    C'IKJ56714A ENTER CURRENT PASSWORD FOR '
MSG7BL   DC    A(L'MSG7B-1)
MSG7B    DC    C'-'
MSG8L    DC    A(L'MSG8-1)
MSG8     DC    C'IKJ56421I PASSWORD NOT AUTHORIZED FOR USERID'
MSG9AL   DC    A(L'MSG9A-1)
MSG9A    DC    C'** PASSWORD FOR USERID '
MSG9BL   DC    A(L'MSG9B-1)
MSG9B    DC    C' MUST BE CHANGED'
MSG10L   DC    A(L'MSG10-1)
MSG10    DC    C' ** ENTER NEW PASSWORD -'
MSG11L   DC    A(L'MSG11-1)
MSG11    DC    C'** EXISTING PASSWORD NOT ACCEPTABLE'
MSG12L   DC    A(L'MSG12-1)
MSG12    DC    C'** PASSWORD MUST BE AT LEAST FOUR CHARACTERS'
MSG13L   DC    A(L'MSG13-1)
MSG13    DC    C'** INVALID CHARACTER COMBINATION'
MSG14L   DC    A(L'MSG14-1)
MSG14    DC    C'** MAXIMUM OF EIGHT CHARACTERS FOR PASSWORD'
MSG15L   DC    A(L'MSG15-1)
MSG15    DC    C' ** ENTER ACCOUNTING INFORMATION'
MSG16L   DC    A(L'MSG16-1)
MSG16    DC    C'** MUST BE TWO CHARACTER SECTION ID, TWO CHARACTER APPX
               LICATION ID'
MSG17L   DC    A(L'MSG17-1)
MSG17    DC    C' ** REENTER -'
MSG18L   DC    A(L'MSG18-1)
MSG18    DC    C' IKJ56700A ENTER PROCEDURE NAME -'
MSG19AL  DC    A(L'MSG19A-1)
MSG19A   DC    C'IKJ56424I PROCEDURE NAME '
MSG19BL  DC    A(L'MSG19B-1)
MSG19B   DC    C' NOT AUTHORISED'
MSG20L   DC    A(L'MSG20-1)
MSG20    DC    C'** SECURITY VIOLATION - PASSWORD HAS BEEN DISPLAYED'
MSG21L   DC    A(L'MSG21-1)
MSG21    DC    C'IKJ56712I INVALID KEYWORD, '
MSG22L   DC    A(L'MSG22-1)
MSG22    DC    C'IKJ56401I INVALID COMMAND SYNTAX'
MSG23L   DC    A(L'MSG23-1)
MSG23    DC    C'IKJ56708I INVALID CURRENT PASSWORD'
MSG24L   DC    A(L'MSG24-1)
MSG24    DC    C'IKJ56702I INVALID PROCEDURE NAME '
MSG25L   DC    A(L'MSG25-1)
MSG25    DC    C' IKJ56700I ENTER REGION SIZE -'
MSG26L   DC    A(L'MSG26-1)
MSG26    DC    C'** PASSWORD IS AT LEAST 25 DAYS OLD'
MSG27L   DC    A(L'MSG27-1)
MSG27    DC    C'** INVALID ACCOUNTING INFORMATION'
MSG28L   DC    A(L'MSG28-1)
MSG28    DC    C'** LOGON REJECTED - ERROR IN UADS - REFER SYSTEMS PROGX
               RAMMERS'
MSG29L   DC    A(L'MSG29-1)
MSG29    DC    C'1. NAME ================>  '
MSG30L   DC    A(L'MSG30-1)
MSG30    DC    C'2. DISTRIBUTION CODE ===>  '
MSG31L   DC    A(L'MSG31-1)
MSG31    DC    C'3. PHONE NUMBER ========>  '
MSG33L   DC    A(L'MSG33-1)
MSG33    DC    C'ENTER NEW DATA (MAXIMUM OF 8 CHARACTERS)'
MSG34L   DC    A(L'MSG34-1)
MSG34    DC    C'THE FOLLOWING APPEARS TO BE IN ERROR FOR YOUR USERID'
MSG35L   DC    A(L'MSG35-1)
MSG35    DC    C'NAME ================> '
MSG36L   DC    A(L'MSG36-1)
MSG36    DC    C'DISTRIBUTION CODE ===> '
MSG37L   DC    A(L'MSG37-1)
MSG37    DC    C'PHONE NUMBER ========> '
MSG38L   DC    A(L'MSG38-1)
MSG38    DC    C'THE FOLLOWING INFORMATION IS REQUIRED FOR THE GENERATIX
               ON OF JOB CARDS,'
MSG39L   DC    A(L'MSG39-1)
MSG39    DC    C'DISTRIBUTION OF PRINTOUT, AND REFERENCE BY OPERATORS FX
               OR ABNORMAL SITUATIONS.'
MSG40L   DC    A(L'MSG40-1)
MSG40    DC    C'IF THE DATA IS IN ERROR, PLEASE TYPE THE NUMBER OF THEX
                ITEM TO BE CHANGED,'
MSG41L   DC    A(L'MSG41-1)
MSG41    DC    C'OR HIT ENTER KEY TO CONTINUE.'
MSG42L   DC    A(L'MSG42-1)
MSG42    DC    C'       MAXIMUM'
MSG43L   DC    A(L'MSG43-1)
MSG43    DC    C'     DATA LENGTH'
MSG44L   DC    A(L'MSG44-1)
MSG44    DC    C'       8 CHARS'
MSG45L   DC    A(L'MSG45-1)
MSG45    DC    C'TYPE NUMBER OF ITEM TO BE CHANGED, OR HIT ENTER KEY TOX
                CONTINUE'
BLANKSL  DC    A(L'BLANKS-1)
BLANKS   DC    CL30' '
         SPACE 2
CFTABLE  DS    0CL256
         DC    64X'00'
         DC    X'00'               40
         DC    10X'00'
         DC    X'04'               4B
         DC    16X'00'
         DC    X'08'               5C
         DC    3X'00'
         DC    X'0C10'             60-61
         DC    95X'00'
         DC    X'14181C2024282C3034' C1-C9
         DC    7X'00'
         DC    X'383C4044484C505458' D1-D9
         DC    8X'00'
         DC    X'5C6064686C707478'   E2-E9
         DC    6X'00'
         DC    X'7C8084888C9094989CA0' F0-F9
         DC    6X'00'
         SPACE 2
****************************
* DSECT FOR GETMAINED AREA *
****************************
         SPACE 1
GETAREA  DSECT
UADS     DCB   BLKSIZE=800,DDNAME=SYSUADS,DSORG=PO,LRECL=80,           X
               MACRF=(R,W),RECFM=FB
         SPACE 1
OPEN     OPEN   (,(UPDAT)),MF=L
         SPACE 1
READ     READ  DECB,SF,,,'S',MF=L
         SPACE 1
PGPB     DS    4F               THE LIST FORM OF THE PUTGET MACRO IS
*                               COPIED INTO THIS AREA.
         SPACE 1
OLD      DS    2F               CONTROL BLOCKS USED
IOPL     DS    4F                 BY PUTGET MACRO
PGECB    DS    F
         SPACE 1
MSGHDR   DS    F                HEADER RECORD NEEDED FOR PUTGET
MSGAREA  DS    CL80             MESSAGE TEXT
         SPACE 1
SWTWOPT  DS    CL1
SWINHIB  DS    CL1
SWPWD    DS    CL1
SWACCT   DS    CL1
SWPROC   DS    CL1
SWDSPLY  DS    CL1
SWSIZE   DS    CL1
SWOWN    DS    CL1
SWPWOWN  DS    CL1
SWOWNCK  DS    CL1
SWNOOWN  DS    CL1
SWSTAX   DS    CL1
SWDETLS  DS    CL1
         SPACE 1
SV13     DS    F
SVR23    DS    3F
SVREGS   DS    9D
SVR7PWD  DS    F
SVOWN5   DS    F
SVOWN6   DS    F
SVOWN7   DS    F
SVOWN8   DS    F
SVOWN9   DS    F
SVOWNR7  DS    F
SVA1A1   DS    2F
SVPWD    DS    F
SVDATE   DS    F
SVR8CNT  DS    F
SVR5PWD  DS    F
SVR6     DS    F
SVR9     DS    F
         SPACE 1
CHAR     DS    CL1
CHG      DS    CL1
UADENTRY DS    CL800
INPLEN   DS    H
LOGONID  DS    CL6
ACCTNO   DS    CL4
PASSWORD DS    CL8
PROC     DS    CL8
PASSOLD  DS    CL8
PASSNEW  DS    CL8
DATE     DS    F
SIZE     DS    F
NAME     DS    CL8
DIST     DS    CL8
PHONE    DS    CL8
SDWORK   DS    D
SFWORK   DS    F
SHWORK   DS    H
GROUP    DS    CL8
SYSATT   DS    CL2
USERATT  DS    CL2
UPT      DS    CL24
        SPACE  1
BLDLIST  DS    0CL16          LIST FOR BLDL
BLDNO    DS    CL2
BLDLGTH  DS    CL2
BLDNAME  DS    CL8
BLDTTRK  DS    CL4
         SPACE  1
RETCODE  DS    CL1
STAXLST  STAX  ,MF=L               STAX PARAMETER LIST
ENDAREA  EQU   *
*
         EJECT
***********************************************************************
***************           PROCESSING                    ***************
***********************************************************************
         SPACE 1
IKJEFLD CSECT
         SPACE 1
START    DS    0H
         MVC   UADS(88),DUMUADS    **
         MVC   OPEN(4),DUMOPEN     **  SET I/O REENTRANT
         MVC   READ(20),DUMREAD    **
*
*              BUILD CONTROL BLOCKS FOR PUTGET MACRO IN GETMAINED AREA
*
*                               BUILD 'OLD' -
         LA    R1,1
         ST    R1,OLD                   STORE NUMBER FIELD INTO 'OLD'
         LA    R1,MSGHDR
         ST    R1,OLD+4                 STORE MSG AREA ADDR INTO 'OLD'
*
*                               BUILD 'IOPL' -
         L     R1,X'30'(R2)
         MVC   IOPL(4),0(R1)            GET UPT ADDR
         L     R1,X'34'(R2)
         MVC   IOPL+4(4),0(R1)          GET ECT ADDR
         LA    R1,PGECB
         ST    R1,IOPL+8                GET ADDR OF ECB
         LA    R1,PGPB
         ST    R1,IOPL+12               GET ADDR OF PGPB (THIS IS
*                                    GENERATED BY LIST FORM OF PUTGET)
*
*                               INITIALISE MESSAGE HEADER -
         LA    R1,84
         STH   R1,MSGHDR             LENGTH OF MESSAGE AREA
         MVC   MSGHDR+2(2),=H'00'
         SPACE  2
*
*        ISSUE STAX TO SET UP ATTENTION INTERRUPT EXIT
*
         LA    R6,SWSTAX           STORE USER ADDRESS
         ST    R6,STAXLST+16
         MVI   STAXLST+16,X'40'    INDICATE REPLACE=NO
         STAX  STAXEXIT,REPLACE=NO,MF=(E,STAXLST)
*                                      SET UP ATTENTION EXIT
         LTR   R15,R15             STAX SUCCESSFUL
         BNZ   M9A8                NO
*
         L     R3,0(R2)         ADDRESS CONTROL SWITCHES DESCRIPTOR
         L     R3,0(R3)         ADDRESS CONTROL SWITCHES
         TM    1(R3),X'02'           IS THIS LOGON RETRY
         BO    M1A3                  YES - GET OUT
         EJECT
***********************************************************************
**********        INITIALISE GETMAINED STORAGE            *************
***********************************************************************
         SPACE 1
         LA    R4,SWTWOPT          ADDRESS PROGRAM SWITCHES
         LA    R5,13               NO. OF SWITCHES
S1A1     DS    0H
         MVI   0(R4),X'00'         SET THEM TO ZERO
         BCT   R5,S1A1
         MVC   LOGONID,BLANKS      USERID TO BLANKS
         MVC   ACCTNO,BLANKS       ACCOUNT AREA
         MVC   PASSWORD,BLANKS     PASSWORD AREA
         MVC   PROC,BLANKS         LOGON PROCEDURE AREA
         MVC   PASSOLD,BLANKS      OLD PASSWORD
         MVC   PASSNEW,BLANKS      NEW PASSWORD
         MVC   SIZE,=X'00000000'   INITIALISE REGION SIZE
         EJECT
***********************************************************************
**********    ADDRESS INPUT AND FIND FIRST NON-BLANK      *************
***********************************************************************
         SPACE 1
         L     R4,4(R2)            ADDRESS INPUT BUFFER DESCRIPTOR
         MVC   INPLEN,6(R4)        GET LENGTH OF INPUT
         LH    R4,INPLEN           STICK IT IN R4
M1A1     DS    0H
         L     R5,4(R2)            ADDRESS INPUT BUFFER DESCRIPTOR
         L     R5,0(R5)            ADDRESS INPUT BUFFER
M1A2     DS    0H
         CLI   0(R5),X'40'         IS INPUT BYTE BLANK
         BNE   M1B1                NO
         LA    R5,1(R5)            NEXT INPUT BYTE
         BCT   R4,M1A2             CHECK IT OUT
         SPACE 3
***********************************************************************
**********      LOGON NOT TO CONTINUE - BAIL OUT          *************
***********************************************************************
         SPACE 1
M1A3     DS    0H
         OI    0(R3),X'10'         SET DISCONNECT CONTROL SWITCH ON
         B     END                 GET OUT
         SPACE 3
***********************************************************************
**********      CHECK FOR LOGON RECONNECT                 *************
***********************************************************************
         SPACE 1
M1B1     DS    0H
         LR    R9,R5               SAVE INPUT POINTER
         LR    R8,R4               SAVE COUNT
M1B2     DS    0H
         CLC   0(6,R5),=C'RECONN'  IS IT RECONNECT
         BE    END                 YES - GET OUT
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M1B2             KEEP CHECKING
         LR    R5,R9               RESET POINTER TO INPUT
         LR    R4,R8               RESET COUNT
         EJECT
***********************************************************************
**********      SEARCH FOR  L  OR  LOGON                  *************
***********************************************************************
         SPACE 1
         OI    0(R5),X'40'         SET FIRST BYTE TO UPPER CASE
         CLI   0(R5),C'L'          IS IT  L
         BE    M1A4A               YES
M1A4     DS    0H
         LA    R6,MSG22L           INVALID SYNTAX MSG
         BAL   R7,T1A1             PUT MSG
*
M1A4D    DS    0H
         MVI   SWSTAX,X'00'        RE-INITIALISE INDICATOR
         LA    R6,MSG3L            ENTER LOGON OR LOGOFF MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M1A2                CHECK IT OUT
M1A4A    DS    0H
         CH    R4,=H'1'            IS  L  ONLY CHARACTER ENTERED
         BNH   M1A5A               YES
         CLI   1(R5),X'40'         IS CHARACTER AFTER  L  BLANK
         BNE   M1A4B               NO
         LA    R5,1(R5)            UPDATE POINTER
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               IS IT ZERO
         BZ    M1A4                INVALID SYNTAX
         B     M1A5
M1A4B    DS    0H
         OC    0(5,R5),BLANKS      SET NEXT FIVE CHARS TO UPPER CASE
         CLC   0(5,R5),=C'LOGON'   ARE THEY  LOGON
         BE    M1A4C               YES
         CLC   0(5,R5),=C'LOGOF'   ARE THEY  LOGOFF
         BE    M1A3                YES - GET OUT
         B     M1A4                PUT INVALID MSG
         SPACE 1
STAXEXIT DS    0H
         L     R6,8(R1)            OBTAIN USER ADDRESS FROM STAX
         MVI   0(R6),X'FF'         SET INDICATOR TO SHOW INTERVENTION
         BR    R14                 RETURN TO STAX
         EJECT
***********************************************************************
**********        SEARCH FOR USERID                       *************
***********************************************************************
         SPACE 1
M1A4C    DS    0H
         CH    R4,=H'5'            IS REST OF INPUT BLANK
         BNH   M1A5A               YES
         CLI   5(R5),X'40'         IS BYTE AFTER LOGON BLANK
         BNE   M1A4                NO - PUT INVALID MSG
         LA    R5,5(R5)            UPDATE POINTER
         SH    R4,=H'5'            REDUCE COUNTER
M1A5     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M1A6                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M1A5             ALL INPUT CHECKED?
M1A5A    DS    0H
         LA    R6,MSG1L            ENTER USERID MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M1A5                CHECK IT OUT
M1A6     DS    0H
         OC    0(6,R5),BLANKS      SET TO UPPER CASE
         MVC   LOGONID,0(R5)       STORE USERID
         CH    R4,=H'6'            ANY OTHER PARMS?
         BNH   M1A9                NO
         CLI   6(R5),X'40'         IS BYTE AFTER USERID BLANK?
         BE    M1A9                YES
         CLI   6(R5),C'/'          IS BYTE AFTER USERID SLASH?
         BE    M1A9                YES
         SR    R8,R8               CLEAR COUNT REGISTER
         LR    R9,R5               ADDRESS CURRENT INPUT
M1A7     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M1A8                YES
         LA    R5,1(R5)            UPDATE POINTER
         LA    R8,1(R8)            ADD 1 TO COUNT
         CH    R8,=H'9'            IS COUNT 10
         BH    M1A8                YES
         BCT   R4,M1A7             ALL CHECKED?
M1A8     DS    0H
         CH    R8,=H'7'            IS LENGTH 7 BYTES
         BNE   M1A8A               NO
         OC    0(7,R9),BLANKS      SET TO UPPER CASE
         CLC   0(7,R9),=C'IBMUSER' IS USER IBMUSER
         BE    END                 YES - GET OUT
M1A8A    DS    0H
         LA    R6,MSG4AL           INVALID USERID MSG
         LR    R5,R9               ADDRESS START OF INPUT
         LA    R9,MSG4BL           SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MESSAGE
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M1A5                CHECK IT OUT
         EJECT
***********************************************************************
**********        HAS LOGON PROCESSOR ENQ FAILED?         *************
***********************************************************************
         SPACE 1
M1A9     DS    0H
         CLC   LOGONID,=C'BACKUP'  IS THIS TSO BACKUP USER
         BE    END                 YES - GET OUT
         TM    0(R3),X'80'         IS ENQ FAILED CONTROL SWITCH ON
         BNO   M2A1                NO
M1A10    DS    0H
         LH    R8,=H'6'            LENGTH OF USERID
         LA    R6,MSG2AL           USERID IN USE MSG
         LA    R9,MSG2BL           SECOND PART OF MSG
         LA    R5,LOGONID          ADDRESS USERID
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         B     M1A3                BAIL OUT
*
M1A11    DS    0H
         LA    R6,MSG3L            LOGON OR LOGOFF MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M1A2                CHECK IT OUT
M2A1     DS    0H
         LA    R5,6(R5)            UPDATE POINTER
         SH    R4,=H'6'            REDUCE COUNTER
         SPACE 3
***********************************************************************
**********            OPEN  UADS                          *************
***********************************************************************
         SPACE 1
         LA    R7,UADS             ADDRESS DCB
         LA    R1,OPEN             ADDRESS OPEN PARAMETER LIST
         OPEN  ((7)),MF=(E,(1))
         EJECT
***********************************************************************
**********     DO BLDL AND CHECK THAT USERID EXISTS       *************
***********************************************************************
         SPACE 1
         MVC   BLDNO,=X'0001'      NO OF ENTRIES FOR BLDL
         MVC   BLDLGTH,=X'000C'    LENGTH OF AN ENTRY
         MVC   BLDNAME(6),LOGONID  USERID
         MVC   BLDNAME+6(2),=X'F040'
         BLDL  UADS,BLDLIST
         SPACE 1
         LTR   R15,R15             CHECK RETURN CODE
         BZ    M2B1                ZERO
         STC   R15,RETCODE         STORE RETURN CODE
         SPACE 3
***********************************************************************
**********     BLDL FAILED ON USERID - CLOSE UADS         *************
***********************************************************************
         SPACE 1
M2A1A    DS    0H
         LA    R7,UADS             ADDRESS DCB
         LA    R1,OPEN             ADDRESS OPEN PARAMETER LIST
         CLOSE ((7)),MF=(E,(1))
         SPACE 1
         CLI   RETCODE,X'04'       WAS USERID FOUND
         BNE   M2A2                YES - SYSTEM ERROR
         LA    R9,LOGONID          ADDRESS USERID
         LA    R8,6                LENGTH
         B     M1A8A               PUT INVALID USERID MSG
         EJECT
***********************************************************************
**********     FIND USERID RECORD FROM BLDL LIST          *************
***********************************************************************
         SPACE 1
M2B1     DS    0H
         FIND  UADS,BLDTTRK,C
         SPACE 1
         LTR   R15,R15             CHECK RETURN CODE
         BZ    M2A3                OKAY
         STC   R15,RETCODE         STORE RETURN CODE
         SPACE 3
***********************************************************************
**********     UNABLE TO LOCATE RECORD - CLOSE UADS       *************
***********************************************************************
         SPACE 1
         B     M2A1A
         SPACE 1
M2A2     DS    0H
         LA    R6,MSG6L            SYSTEM ERROR MSG
         BAL   R7,T1A1             PUT MSG
         B     M1A11               PUT LOGON OR LOGOFF MSG
         EJECT
***********************************************************************
**********            READ  UADS                          *************
***********************************************************************
         SPACE 1
M2A3     DS    0H
         LA    R7,UADS             ADDRESS DCB
         LA    R8,UADENTRY         ADDRESS IO AREA
         READ  DECB,SF,(7),(8),MF=E
         SPACE 1
         CHECK DECB
         EJECT
***********************************************************************
**********  GET CURRENT DATE AND STORE IN ACCOUNT FIELD   *************
***********************************************************************
         SPACE 1
         TIME
         SPACE 1
         ST    R1,DATE             SAVE DATE IN STORAGE
         LA    R7,UADENTRY         ADDRESS UADS STORAGE
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            GET ACCOUNTING OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNT OFFSET BLOCK
         CLC   8(4,R9),=X'00000000' IS THERE AN ACCOUNT DATA BLOCK
         BNE   M2A3A               YES
M2B2     DS    0H
         LA    R6,MSG28L           ERROR IN UADS MSG
         BAL   R7,T1A1             PUT MSG
*
*     IF NO ACCOUNT DATA BLOCK EXISTS, LOGON CANNOT PROCEED
*
M2A2A    DS    0H
         LA    R7,UADS             ADDRESS DCB
         LA    R1,OPEN             ADDRESS OPEN PARAMETER LIST
         CLOSE ((7)),MF=(E,(1))
         SPACE 1
         B     M1A3                GET OUT
         SPACE 3
M2A3A    DS    0H
         L     R8,8(R9)            GET ACCOUNT DATA BLOCK DISPLACEMENT
         LA    R7,44(R8,R7)        ADDRESS DATA PORTION
         CLI   0(R7),X'28'         DOES UADS ENTRY HAVE ENOUGH SPACE
         BNE   M2B2                NO
         LA    R7,1(R7)            ADDRESS START OF DATA
         MVC   4(4,R7),DATE        MOVE CURRENT DATE IN
         SPACE 3
***********************************************************************
**********  STORE SYSTEM ATTRIBUTES, USER ATTRIBUTES AND UPT  *********
***********************************************************************
         SPACE 1
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         MVC   SYSATT,16(R7)       STORE SYSTEM ATTRIBUTES
         MVC   USERATT,18(R7)      STORE USER ATTRIBUTES
         L     R8,20(R7)           GET UPT POINTER
         LA    R7,0(R8,R7)         ADDRESS UPT
         MVC   UPT,0(R7)           MOVE IT TO STORAGE
         EJECT
***********************************************************************
********** CHECK FOR PASSWORD INPUT ON SAME LINE AS USERID ************
***********************************************************************
         SPACE 1
         LTR   R4,R4               CHECK FOR MORE INPUT
         BZ    M7A1                NONE
         BM    M7A1                GO ASK QUESTIONS
         CLI   0(R5),C'/'          IS NEXT BYTE SLASH
         BE    M2A5                YES
M2A4     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M3A3                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M2A4             CHECK IT OUT
         B     M7A1                ALL BLANK - ASK QUESTIONS
M2A5     DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               ALL CHECKED?
         BZ    M7A1                YES - ASK QUESTIONS
M2A6     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M2A7                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M2A6             CHECK IT OUT
         B     M7A1                ALL BLANK - ASK QUESTIONS
M2A7     DS    0H
         SR    R8,R8               CLEAR LENGTH
         LR    R9,R5               ADDRESS INPUT
M2A8     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M2A9                YES
         LA    R8,1(R8)            UPDATE LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               ALL CHECKED?
         BZ    M2A9                YES
         CH    R8,=H'8'            DOES LENGTH EXCEED 8
         BNH   M2A8                NO
         LA    R8,7                SET TO MAXIMUM PASSWORD LENGTH
         B     M3A1
M2A9     DS    0H
         BCTR  R8,0                REDUCE LENGTH FOR EXECUTE
M3A1     DS    0H
         EX    R8,EXPWD            MOVE PASSWORD TO STORAGE
         OC    PASSWORD,BLANKS     SET PASSWORD TO UPPER CASE
         MVI   SWDSPLY,X'FF'       INDICATE PASSWORD DISPLAYED
         BAL   R7,A1A1             CHECK PASSWORD
         LTR   R4,R4               ALL CHECKED?
         BZ    M7A1                YES - ASK QUESTIONS
         EJECT
***********************************************************************
**********      CHECK FOR ACCOUNTING INFORMATION           ************
***********************************************************************
         SPACE 1
M3A2     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M3A3                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M3A2             KEEP CHECKING
         B     M7A1                ALL BLANK - ASK QUESTIONS
M3A3     DS    0H
         OI    0(R5),X'40'         SET NEXT BYTE TO UPPER CASE
         CLI   0(R5),C'A'          IS IT  A
         BE    M3A3B               YES
         CLI   0(R5),C'P'          IS IT  P
         BNE   M3A3A               NO
         CLI   SWPROC,X'FF'        HAS PROCEDURE PARM BEEN CHECKED
         BNE   M4A3                NO - CHECK PROCEDURE NAME
         B     M5A5                YES - INVALID KEYWORD
M3A3A    DS    0H
         CLI   0(R5),C'S'          IS IT  SIZE
         BE    M3A3AA              YES
         CLI   0(R5),C'O'          IS IT OWNER
         BE    M6A6B               YES
         CLI   0(R5),C'N'          IS IT NOOWNER
         BE    M6A6C1              YES
         B     M5A5                INVALID KEYWORD
M3A3AA   DS    0H
         CLI   SWSIZE,X'FF'        HAS SIZE PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M5A3                NO - CHECK SIZE PARAMETER
M3A3B    DS    0H
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BNZ   M3A3C               STILL MORE INPUT
         LA    R4,1(R4)            UPDATE COUNTER
         B     M5A5                INVALID KEYWORD
M3A3C    DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         LR    R9,R5               ADDRESS INPUT
         CLI   0(R5),C'('          IS NEXT BYTE OPEN PARENTHESIS
         BE    M3A8                YES
         OC    0(3,R5),BLANKS      SET NEXT 3 BYTES TO UPPER CASE
         CLC   0(3,R5),=C'CCT'     IS THIS ACCOUNT PARAMETER
         BE    M3A7                YES
M3A4     DS    0H
         LA    R8,1                INITIALISE LENGTH
M3A5     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M3A6                YES
         LA    R8,1(R8)            UPDATE LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M3A5             KEEP CHECKING
M3A6     DS    0H
         LA    R6,MSG21L           INVALID KEYWORD MSG
         LR    R5,R9               START OF KEYWORD
         LA    R9,BLANKSL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M3A2                CHECK IT OUT
M3A7     DS    0H
         CLI   3(R5),C'('          IS NEXT BYTE OPEN PARENTHESIS
         BNE   M3A4                NO
         SH    R4,=H'3'            REDUCE COUNTER
         CH    R4,=H'1'            IS REST OF INPUT BLANK
         BNE   M3A7A               NO
         LR    R5,R9               START OF WORD
         B     M3A4                INVALID KEYWORD
M3A7A    DS    0H
         LA    R5,3(R5)            UPDATE POINTER
M3A8     DS    0H
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BNZ   M3A8A               REST OF INPUT NOT BLANK
         LR    R5,R9               ADDRESS INVALID KEYWORD
         B     M3A4                INVALID KEYWORD
M3A8A    DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M3A9                NO
         LR    R5,R9               ADDRESS INVALID KEYWORD
         B     M3A4                INVALID KEYWORD
M3A9     DS    0H
         MVC   ACCTNO,0(R5)        ACCOUNTING INFO TO STORAGE
         OC    ACCTNO,BLANKS       SET IT TO UPPER CASE
         SH    R4,=H'4'            REDUCE COUNTER
         BZ    M4A1                IF REST OF INPUT BLANK,
         BM    M4A1                CHECK ACCT INFO
         LA    R5,4(R5)            UPDATE POINTER
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M4A1                YES
         CLI   0(R5),C')'          IS NEXT BYTE CLOSING PARENTHESIS
         BE    M3A10               YES
M3A9A    DS    0H
         LR    R5,R9               ADDRESS INVALID WORD
         B     M3A4                INVALID KEYWORD
M3A10    DS    0H
         CLI   1(R5),X'40'         IS BYTE AFTER ) BLANK
         BNE   M3A9A               NO
         BCTR  R4,0                REDUCE COUNTER
         LA    R5,1(R5)            UPDATE POINTER
M4A1     DS    0H
         BAL   R7,B1A1             CHECK ACCOUNTING INFORMATION
         CH    R4,=H'1'            IS REST OF INPUT BLANK
         BL    M7A1                YES - GO ASK QUESTIONS
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BZ    M7A1                IF NO MORE INPUT, ASK QUESTIONS
         LA    R5,1(R5)            UPDATE POINTER
M4A2     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M4A3                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M4A2             KEEP CHECKING
         B     M7A1                GO ASK QUESTIONS
         EJECT
***********************************************************************
**********      CHECK FOR LOGON PROCEDURE                  ************
***********************************************************************
         SPACE 1
M4A3     DS    0H
         OC    0(2,R5),BLANKS      SET NEXT 2 BYTES TO UPPER CASE
         CLC   0(2,R5),=C'PR'      ARE THEY PR
         BE    M4B1                YES
         CLI   0(R5),C'A'          IS IT ACCOUNT INFO
         BNE   M4A3A               NO
         CLI   SWACCT,X'FF'        HAS ACCOUNT PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M3A3B               NO - GO CHECK IT
M4A3A    DS    0H
         CLI   0(R5),C'S'          IS IT SIZE PARM
         BE    M4A3A1              YES - CHECK IT
         CLI   0(R5),C'O'          IS IT OWNER PARM
         BNE   M4A3B               NO
         CLI   SWOWN,X'FF'         HAS OWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M6A6B               NO - CHECK IT
M4A3B    DS    0H
         CLI   0(R5),C'N'          IS IT NOOWNER
         BNE   M5A5                NO - INVALID KEYWORD
         CLI   SWOWN,X'FF'         HAS OWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M6A6C1              GO SORT IT OUT
M4A3A1   DS    0H
         CLI   SWSIZE,X'FF'        HAS SIZE PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M5A3                NO - GO CHECK IT
M4B1     DS    0H
         LR    R9,R5               ADDRESS INPUT
         SH    R4,=H'2'            REDUCE COUNTER
         BNZ   M4B2                OKAY
         LA    R4,2(R4)            UPDATE COUNTER
         B     M4A4                CHECK OUT PROC NAME
M4B2     DS    0H
         LA    R5,2(R5)            UPDATE POINTER
         CLI   0(R5),C'('          IS NEXT BYTE OPEN PARENTHESIS
         BE    M4A7                YES
         OC    0(2,R5),BLANKS      SET NEXT 2 BYTES TO UPPER CASE
         CLC   0(2,R5),=C'OC'      IS THIS PROC PARAMETER
         BNE   M4A4                NO
         CLI   2(R5),C'('          IS NEXT BYTE OPEN PARENTHESIS
         BNE   M4A4                NO
         SH    R4,=H'2'            REDUCE COUNTER
         LA    R5,2(R5)            UPDATE POINTER
         B     M4A7
M4A4     DS    0H
         LA    R8,2                INITIALISE LENGTH
M4A5     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M4A6                YES
         LA    R8,1(R8)            UPDATE LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M4A5             KEEP CHECKING
M4A6     DS    0H
         LA    R6,MSG21L           INVALID KEYWORD MSG
         LR    R5,R9               START OF KEYWORD
         LA    R9,BLANKSL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M4A2
M4A7     DS    0H
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BNZ   M4A7A               OKAY
         LA    R4,1(R4)            UPDATE COUNTER
         B     M4A4                INVALID KEYWORD
M4A7A    DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M4A8                NO
         LR    R5,R9               START OF INVALID KEYWORD
         B     M4A4                PUT MSG
M4A8     DS    0H
         SR    R8,R8               CLEAR LENGTH
         LR    R9,R5               START OF PROC NAME
M4A9     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M5A1                YES
         CLI   0(R5),C')'          IS IT CLOSING PARENTHESIS
         BE    M4A12               YES
         LA    R8,1(R8)            ADD 1 TO LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BZ    M5A1                RUN OUT OF INPUT
         CH    R8,=H'8'            HAS LENGTH EXCEEDED MAXIMUM
         BNH   M4A9                NO
M4A9A    DS    0H
         LA    R6,MSG24L           INVALID PROC MSG
         LR    R5,R9               START OF INVALID PROC
         LA    R9,BLANKSL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
M4A10    DS    0H
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
M4A11    DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M4A8                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M4A11            KEEP CHECKING
         B     M4A10               REENTER MSG
M4A12    DS    0H
         CLI   1(R5),X'40'         IS BYTE AFTER IT BLANK
         BE    M4A13               YES
         LA    R8,2(R8)            ADJUST LENGTH
         B     M4A9A               PUT INVALID PROC MSG
M4A13    DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         BCTR  R4,0                REDUCE COUNTER
M5A1     DS    0H
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXPROC           MOVE PROC TO STORAGE
         BAL   R7,C1A1             CHECK PROCEDURE NAME
         BCTR  R4,0                REDUCE COUNTER
         LTR   R4,R4               CHECK IT
         BZ    M7A1                IF NO MORE INPUT,
         BM    M7A1                GO ASK QUESTIONS
         LA    R5,1(R5)            UPDATE POINTER
M5A2     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M5A3                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M5A2             KEEP CHECKING
         B     M7A1                NO MORE - GO ASK QUESTIONS
         EJECT
***********************************************************************
**********    CHECK FOR REGION SIZE PARAMETER              ************
***********************************************************************
         SPACE 1
M5A3     DS    0H
         OC    0(4,R5),BLANKS      SET NEXT 4 TO UPPER CASE
         CLC   0(4,R5),=C'SIZE'    IS IT SIZE PARM
         BE    M5A8                YES
         CLI   0(R5),C'A'          IS IT ACCT PARM
         BNE   M5A4                NO
         CLI   SWACCT,X'FF'        HAS ACCT PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M3A3                NO - CHECK IT
M5A4     DS    0H
         CLC   0(2,R5),=C'PR'      IS IT PROC PARM
         BNE   M5A4A               NO
         CLI   SWPROC,X'FF'        HAS PROC PARM BEEN CHECKED
         BNE   M4A3                NO - CHECK IT
         B     M5A5                YES - INVALID KEYWORD
M5A4A    DS    0H
         CLI   0(R5),C'O'          IS IT OWNER
         BNE   M5A4B               NO
         CLI   SWOWN,X'FF'         HAS IT BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M6A6B               NO - GO CHECK IT
M5A4B    DS    0H
         CLI   0(R5),C'N'          IS IT NOOWNER
         BE    M6A6C1              YES - GO SORT IT OUT
M5A5     DS    0H
         SR    R8,R8               CLEAR LENGTH
         LR    R9,R5               START OF INVALID KEYWORD
M5A6     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M5A7                YES
         LA    R5,1(R5)            UPDATE POINTER
         LA    R8,1(R8)            UPDATE LENGTH
         BCT   R4,M5A6             CHECK IT
M5A7     DS    0H
         LR    R5,R9               START OF INVALID KEYWORD
         LA    R6,MSG21L           INVALID KEYWORD MSG
         LA    R9,BLANKSL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M3A2                CHECK IT OUT
M5A8     DS    0H
         CLI   4(R5),C'('          IS NEXT BYTE OPEN PARENTHESIS
         BNE   M5A5                NO - INVALID KEYWORD
         CLI   5(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M6A2                NO
M5A9     DS    0H
         LA    R6,MSG25L           ENTER REGION SIZE MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
M6A1     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M6A3                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M6A1             CHECK IT
         B     M5A9                BLANK - ASK AGAIN
M6A2     DS    0H
         SH    R4,=H'5'            REDUCE COUNTER
         LA    R5,5(R5)            UPDATE POINTER
M6A3     DS    0H
         SR    R8,R8               CLEAR LENGTH
         LR    R9,R5               START OF SIZE
M6A4     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M6A6                YES
         CLI   0(R5),C')'          IS IT CLOSING PARENTHESIS
         BE    M6A5                YES
         LA    R8,1(R8)            UPDATE LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M6A4             CHECK IT
         B     M6A6
M6A5     DS    0H
         CLI   1(R5),X'40'         IS ONE AFTER IT BLANK
         BE    M6A5A               YES
         LR    R5,R9               START OF DATA
         B     M5A5                INVALID KEYWORD
M6A5A    DS    0H
         BCTR  R4,0                REDUCE COUNTER
         LA    R5,1(R5)            UPDATE POINTER
M6A6     DS    0H
         CH    R8,=H'4'            IS SIZE MORE THAN 4 CHARS
         BH    M6A6A               YES
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXSIZE           PACK SIZE IN WORK AREA
         CVB   R8,SDWORK           CONVERT IT
         ST    R8,SIZE             STICK IT IN STORAGE
         CLC   SIZE+2(2),UADENTRY+14    CHECK IT TO SIZE FROM UADS
         BNH   M6A6A               OKAY
         MVC   SIZE,=X'00000000'   SET IT TO NORMAL
M6A6A    DS    0H
         MVI   SWSIZE,X'FF'        INDICATE SIZE PARM CHECKED
         LTR   R4,R4               CHECK COUNTER
         BZ    M7A1                GO ASK QUESTIONS
         BM    M7A1                ****
         B     M6A7                CHECK REST OF INPUT
         EJECT
***********************************************************************
**********    CHECK FOR OWNER PARAMETER                    ************
***********************************************************************
         SPACE 1
M6A6B    DS    0H
         OI    0(R5),X'40'         SET NEXT BYTE TO UPPER CASE
         CLI   0(R5),C'O'          IS IT OWNER
         BE    M6A6B1              YES
         CLI   0(R5),C'A'          IS IT ACCT PARM
         BNE   M6A6C               NO
         CLI   SWACCT,X'FF'        HAS ACCT PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M3A3                NO - CHECK IT
M6A6C    DS    0H
         CLI   0(R5),C'P'          IS IT PROC PARM
         BNE   M6A6D               NO
         CLI   SWPROC,X'FF'        HAS PROC BEEN CHECKED
         BNE   M4A3                NO - CHECK IT
         B     M5A5                YES - INVALID KEYWORD
M6A6D    DS    0H
         CLI   0(R5),C'S'          IS IT SIZE PARM
         BNE   M6A6E               NO
         CLI   SWSIZE,X'FF'        HAS SIZE BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M5A3                NO - CHECK IT
M6A6E    DS    0H
         CLI   0(R5),C'N'          IS IT NOOWNER
         BNE   M5A5                NO - INVALID KEYWORD
         B     M6A6C1              YES - GO SORT IT OUT
M6A6B1   DS    0H
         CLI   SWOWN,X'FF'         HAS OWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         OC    0(5,R5),BLANKS      SET TO UPPER CASE
         CLC   0(5,R5),=C'OWNER'
         BNE   M5A5                INVALID KEYWORD
         MVI   SWOWN,X'FF'         INDICATE OWNER CHECKED
         MVI   SWPWOWN,X'FF'       OWNER TO SHOW IN PWD PROCESS
         SH    R4,=H'5'            REDUCE COUNTER
         LTR   R4,R4               CHECK COUNTER
         BZ    M7A1                GO ASK QUESTIONS
         BM    M7A1                ****
         LA    R5,5(R5)            UPDATE POINTER
         B     M6A7                CHECK REST OF INPUT
         EJECT
***********************************************************************
**********    CHECK NOOWNER PARAMETER                      ************
***********************************************************************
         SPACE 1
M6A6C1   DS    0H
         OI    0(R5),X'40'         SET NEXT BYTE TO UPPER CASE
         CLI   0(R5),C'N'          IS IT NOOWNER
         BE    M6A6D1              YES
         CLI   0(R5),C'A'          IS IT ACCT PARM
         BNE   M6A6C2              NO
         CLI   SWACCT,X'FF'        HAS ACCT PARM BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M3A3                NO - CHECK IT
M6A6C2   DS    0H
         CLI   0(R5),C'P'          IS IT PROC PARM
         BNE   M6A6C3              NO
         CLI   SWPROC,X'FF'        HAS PROC BEEN CHECKED
         BNE   M4A3                NO - CHECK IT
         B     M5A5                YES - INVALID KEYWORD
M6A6C3   DS    0H
         CLI   0(R5),C'S'          IS IT SIZE PARM
         BNE   M6A6C4              NO
         CLI   SWSIZE,X'FF'        HAS SIZE BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M5A3                NO - CHECK IT
M6A6C4   DS    0H
         CLI   0(R5),C'O'          IS IT OWNER
         BNE   M5A5                NO - INVALID KEYWORD
         CLI   SWOWN,X'FF'         HAS OWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M6A6B               NO - CHECK IT
M6A6D1   DS    0H
         CLI   SWOWN,X'FF'         HAS OWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         CLI   SWNOOWN,X'FF'       HAS NOOWNER BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         OC    0(7,R5),BLANKS      SET TO UPPER CASE
         CLC   0(7,R5),=C'NOOWNER'
         BNE   M5A5                INVALID KEYWORD
         MVI   SWNOOWN,X'FF'       INDICATE CHECKED
         SH    R4,=H'7'            REDUCE COUNTER
         LTR   R4,R4               CHECK COUNTER
         BZ    M7A1                GO ASK QUESTIONS
         BM    M7A1                ******
         LA    R5,7(R5)            UPDATE POINTER
         EJECT
***********************************************************************
**********    CHECK REST OF INPUT LINE FOR ANYTHING ELSE   ************
***********************************************************************
         SPACE 1
M6A7     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M6A7A               NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M6A7             KEEP CHECKING
         B     M7A1                ASK QUESTIONS
M6A7A    DS    0H
         OI    0(R5),X'40'         SET NEXT BYTE TO UPPER CASE
         CLI   0(R5),C'A'          IS IT ACCT
         BNE   M6A8                NO
         CLI   SWACCT,X'FF'        HAS ACCOUNT PARM BEEN CHECKED
         BNE   M3A3                NO - GO CHECK IT
         B     M5A5                YES - INVALID KEYWORD
M6A8     DS    0H
         CLI   0(R5),C'P'          IS IT PROC
         BNE   M6A9                NO
         CLI   SWPROC,X'FF'        HAS PROC PARM BEEN CHECKED
         BNE   M4A3                NO - GO CHECK IT
         B     M5A5                YES - INVALID KEYWORD
M6A9     DS    0H
         CLI   0(R5),C'O'          IS IT OWNER
         BNE   M6A10               NO
         CLI   SWOWN,X'FF'         HAS IT BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M6A6B               NO - CHECK IT
M6A10    DS    0H
         CLI   0(R5),C'N'          IS IT NOOWNER
         BE    M6A6C1              YES - SORT IT OUT
         CLI   0(R5),C'S'          IS IT OWNER
         BNE   M5A5                NO - INVALID KEYWORD
         CLI   SWSIZE,X'FF'        HAS IT BEEN CHECKED
         BE    M5A5                YES - INVALID KEYWORD
         B     M5A3                NO - CHECK IT OUT
         EJECT
***********************************************************************
**********  ALL INPUT CHECKED - PROMPT FOR MISSING PARMS   ************
***********************************************************************
         SPACE 2
************
* PASSWORD *
************
         SPACE 1
M7A1     DS    0H
         CLI   SWPWD,X'FF'         HAS PASSWORD BEEN INPUT
         BE    M7A7                YES
M7A2     DS    0H
         LA    R6,MSG7AL           ENTER PASSWORD MSG
         LA    R5,LOGONID          POINT TO USERID
         LA    R8,6                LENGTH OF IT
         LA    R9,MSG7BL           SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          DUMMY MSG
         MVI   SWINHIB,X'FF'       INDICATE REPLY NOT TO BE DISPLAYED
         BAL   R7,T2A1             PUT MSG - GET REPLY
M7A3     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M7A4                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M7A3             KEEP CHECKING
         B     M7A2                ALL BLANK - ASK AGAIN
M7A4     DS    0H
         LR    R9,R5               START OF PASSWORD
         SR    R8,R8               CLEAR LENGTH
M7A5     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M7A6                YES
         LA    R8,1(R8)            UPDATE LENGTH
         CH    R8,=H'8'            DOES LENGTH EXCEED MAXIMUM
         BNH   M7A5A               NO
         BCTR  R8,0                REDUCE LENGTH
         B     M7A6
M7A5A    DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M7A5             KEEP CHECKING
M7A6     DS    0H
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXPWD            MOVE PASSWORD TO STORAGE
         BAL   R7,A1A1             CHECK PASSWORD
         SPACE 2
****************
* ACCOUNT INFO *
****************
         SPACE 1
M7A7     DS    0H
         CLI   SWACCT,X'FF'        HAS ACCOUNTING INFO BEEN INPUT
         BE    M8A4                YES
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            ACCOUNTING OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNTING OFFSET BLOCK
         CLC   8(4,R9),=X'00000000'     DOES ACCT INFO EXIST
         BNE   M7A7A                    YES
         LA    R6,MSG28L           INVALID UADS MSG
         BAL   R7,T1A1             PUT MSG
         B     M2A2A               EXIT
M7A7A    DS    0H
         L     R8,8(R9)            ACCOUNT DATA BLOCK DISPLACEMENT
         LA    R7,45(R8,R7)        ADDRESS DATA PORTION
         CLC   0(4,R7),=C'XXXX'    IS ACCT INFO REQUIRED
         BE    M7A8                YES
         MVC   ACCTNO,0(R7)        MOVE ACCT INFO TO STORAGE
         B     M8A4                CHECK FURTHER
M7A8     DS    0H
         LA    R6,MSG15L           ENTER ACCT INFO MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
M7A9     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M7A10               NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M7A9             CHECK ON
         B     M7A8                ASK AGAIN
M7A10    DS    0H
         LR    R9,R5               START OF INFO
         SR    R8,R8               CLEAR LENGTH
M8A1     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M8A3                YES
         LA    R8,1(R8)            UPDATE LENGTH
         CH    R8,=H'4'            IS LENGTH EXCESSIVE
         BH    M8A2                YES
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M8A1             CHECK ON
         B     M8A3
M8A2     DS    0H
         LA    R6,MSG16L           INVALID ACCT INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG17L           REENTER
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M7A9                CHECK IT
M8A3     DS    0H
         CH    R8,=H'4'            IS LENGTH OKAY
         BL    M8A2                NO
         MVC   ACCTNO,0(R9)        MOVE ACCT INFO TO STORAGE
         BAL   R7,B1A1             CHECK IT OUT
         SPACE 2
*******************
* LOGON PROCEDURE *
*******************
         SPACE 1
M8A4     DS    0H
         CLI   SWPROC,X'FF'        HAS LOGON PROCEDURE BEEN INPUT
         BE    M9A1                YES
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            ACCOUNT OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNT OFFSET BLOCK
         L     R8,4(R9)            PROCEDURE OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PROCEDURE OFFSET BLOCK
         CLC   1(3,R9),=X'000000'  IS THERE MORE THAN ONE PROCEDURE
         BNE   M8A5                YES
         L     R8,8(R9)            PROC NAME BLOCK DISPLACEMENT
         LA    R7,0(R8,R7)         ADDRESS PROC NAME BLOCK
         MVC   PROC,4(R7)          MOVE PROC NAME TO STORAGE
         MVC   GROUP,16(R7)        GROUP UNIT NAME TO STORAGE
         B     M9A1
M8A5     DS    0H
         LA    R6,MSG18L           ENTER PROCEDURE MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
M8A6     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   M8A7                NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M8A6             CHECK ON
         B     M8A5                ASK AGAIN
M8A7     DS    0H
         LR    R9,R5               ADDRESS PROC NAME
         SR    R8,R8               CLEAR LENGTH
M8A8     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    M8A9                YES
         LA    R8,1(R8)            UPDATE LENGTH
         CH    R8,=H'8'            IS LENGTH EXCESSIVE
         BH    M8A8A               YES
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,M8A8             CHECK ON
         B     M8A9
M8A8A    DS    0H
         LR    R5,R9               START OF PROC NAME
         LA    R6,MSG19AL          PROC NAME NOT AUTHORISED MSG
         LA    R9,MSG19BL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     M8A6                CHECK IT OUT
M8A9     DS    0H
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXPROC           MOVE PROC NAME TO STORAGE
         BAL   R7,C1A1             CHECK IT
         SPACE 3
***********************************************************************
*****  ALL REQUIRED INFORMATION HAS NOW BEEN CHECKED AND STORED.  *****
*****  SET CONTROL SWITCHES, AND PASS INFORMATION BACK TO LOGON   *****
*****  PROCESSOR.                                                 *****
***********************************************************************
         SPACE 2
M9A1     DS    0H
         OI    0(R3),X'0C'         SET CONTROL SWITCHES TO INDICATE -
         OI    1(R3),X'F0'         . DON'T PROMPT FOR INPUT
*                                  . DON'T ACCESS UADS
*                                  . SYSTEM ATTRIBUTES PROVIDED
*                                  . USER ATTRIBUTES PROVIDED
*                                  . GENERIC GROUP NAME PROVIDED
*                                  . UPT PROVIDED
         SPACE 2
**********
* USERID *
**********
         SPACE 1
         L     R6,8(R2)            USERID DESCRIPTOR
         LA    R7,6                LENGTH OF USERID
         STH   R7,SHWORK
         MVC   6(2,R6),SHWORK      STICK IT IN LENGTH FIELD
         L     R8,0(R6)            ADDRESS USERID DATA AREA
         MVC   0(6,R8),LOGONID     STICK USERID IN IT
         SPACE 2
************
* PASSWORD *
************
         SPACE 1
         L     R6,12(R2)           PASSWORD DESCRIPTOR
         SR    R8,R8               CLEAR LENGTH
         LA    R7,PASSOLD          PASSWORD FIELD
         LA    R9,8                LENGTH OF IT
M9A2     DS    0H
         CLI   0(R7),X'40'         IS NEXT BYTE BLANK
         BE    M9A3                YES
         LA    R7,1(R7)            UPDATE POINTER
         LA    R8,1(R8)            UPDATE LENGTH
         BCT   R9,M9A2             KEEP CHECKING
M9A3     DS    0H
         STH   R8,SHWORK
         MVC   6(2,R6),SHWORK      LENGTH OF PWD TO STORAGE
         L     R7,0(R6)            ADDRESS PWD DATA AREA
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXM9A3           MOVE PWD TO DATA AREA
         SPACE 2
****************
* NEW PASSWORD*
****************
         SPACE 1
         CLC   PASSNEW,BLANKS  HAS NEW PASSWORD BEEN ENTERED
         BE    M9A11           NO -CONTINUE
         L     R6,32(R2)           NEW PASSWORD DESCRIPTOR
         SR    R8,R8               CLEAR LENGTH
         LA    R7,PASSNEW          PASSWORD FIELD
         LA    R9,8                LENGTH OF IT
M9A10    DS    0H
         CLI   0(R7),X'40'         IS NEXT BYTE BLANK
         BE    M9A9                YES
         LA    R7,1(R7)            UPDATE POINTER
         LA    R8,1(R8)            UPDATE LENGTH
         BCT   R9,M9A10            KEEP CHECKING
M9A9     DS    0H
         STH   R8,SHWORK
         MVC   6(2,R6),SHWORK      LENGTH OF PWD TO STORAGE
         L     R7,0(R6)            ADDRESS PWD DATA AREA
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXM9A9           MOVE PWD TO DATA AREA
         SPACE 2
****************
* ACCOUNT INFO *
****************
         SPACE 1
M9A11    DS    0H
         L     R6,16(R2)           ACCOUNT INFO DESCRIPTOR
         LA    R7,4                LENGTH OF ACCT
         STH   R7,SHWORK
         MVC   6(2,R6),SHWORK      STICK IT IN STORAGE AREA
         L     R8,0(R6)            ADDRESS ACCOUNT DATA AREA
         MVC   0(4,R8),ACCTNO      STICK ACCOUNT INFO IN IT
         SPACE 2
******************
* PROCEDURE NAME *
******************
         SPACE 1
         L     R6,20(R2)           PROC NAME DESCRIPTOR
         SR    R8,R8               CLEAR LENGTH
         LA    R7,PROC             PROCEDURE FIELD
         LA    R9,8                LENGTH OF IT
M9A4     DS    0H
         CLI   0(R7),X'40'         IS NEXT BYTE BLANK
         BE    M9A5                YES
         LA    R7,1(R7)            UPDATE POINTER
         LA    R8,1(R8)            UPDATE LENGTH
         BCT   R9,M9A4             CHECK ON
M9A5     DS    0H
         STH   R8,SHWORK
         MVC   6(2,R6),SHWORK      LENGTH OF PROC TO STORAGE
         L     R7,0(R6)            ADDRESS PROC DATA AREA
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXM9A5           MOVE PROC TO DATA AREA
         SPACE 2
***************
* REGION SIZE *
***************
         SPACE 1
         L     R6,24(R2)           REGION SIZE
         MVC   0(4,R6),SIZE        MOVE IT TO STORAGE
         SPACE 2
*********************
* SYSTEM ATTRIBUTES *
*********************
         SPACE 1
         L     R6,36(R2)           SYSTEM ATTRIBUTES DESCRIPTOR
         MVC   6(2,R6),=X'0010'    LENGTH TO STORAGE
         L     R8,0(R6)            ADDRESS DATA AREA
         MVC   0(2,R8),SYSATT      MOVE ATTRIBUTES IN
         EJECT
*******************
* USER ATTRIBUTES *
*******************
         SPACE 1
         L     R6,40(R2)           USER ATTRIBUTES DESCRIPTOR
         MVC   6(2,R6),=X'0010'    LENGTH TO STORAGE
         L     R8,0(R6)            ADDRESS DATA AREA
         MVC   0(2,R8),USERATT     MOVE ATTRIBUTES IN
         SPACE 2
*********************
* GENERIC UNIT NAME *
*********************
         SPACE 1
         L     R6,44(R2)           GENERIC UNIT DESCRIPTOR
         SR    R8,R8               CLEAR LENGTH
         LA    R7,GROUP            UNIT NAME FIELD
         LA    R9,8                LENGTH OF IT
M9A6     DS    0H
         CLI   0(R7),X'40'         IS NEXT BYTE BLANK
         BE    M9A7                YES
         LA    R7,1(R7)            UPDATE POINTER
         LA    R8,1(R8)            UPDATE LENGTH
         BCT   R9,M9A6             CHECK ON
M9A7     DS    0H
         STH   R8,SHWORK
         MVC   6(2,R6),SHWORK      LENGTH OF NAME TO STORAGE
         L     R7,0(R6)            ADDRESS DATA AREA
         BCTR  R8,0                REDUCE LENGTH
         EX    R8,EXM9A7           MOVE UNIT NAME IN
         SPACE 2
*********
** STORE NAME AND DISTRIBUTION CODE IN UPT
*********
M9B1     DS    0H
         STM   R2,R3,SVR23         SAVE REGISTERS 2 AND 3
         MVC   SDWORK,NAME         **
         TR    SDWORK,CFTABLE       ** CHANGE NAME TO SIX BIT
*                                    ** REPRESENTATION
         LA    R6,8                LOAD NUMBER OF DIGITS
         LA    R8,SDWORK           ADDRESS CHANGED NAME FIELD
         SR    R2,R2
         SR    R3,R3
M9B2     DS    0H
         IC    R3,0(R8)            ** STORE NAME IN UPT
         SLDL  R2,6                 **
         LA    R8,1(R8)              **
         BCT   R6,M9B2                **
         STCM  R2,7,UPT                **
         STCM  R3,14,UPT+3              **
         MVC   SDWORK,DIST         ** CHANGE DISTRIBUTION CODE
         TR    SDWORK,CFTABLE       ** TO SIX BIT
*                                    ** REPRESENTATION
         LA    R6,8                LOAD NUMBER OF DIGITS
         LA    R8,SDWORK           ADDRESS CHANGED DIST FIELD
         SR    R2,R2
         SR    R3,R3
M9B3     DS    0H
         IC    R3,0(R8)            ** STORE DISTRIBUTION CODE
         SLDL  R2,6                 ** IN UPT
         LA    R8,1(R8)              **
         BCT   R6,M9B3                **
         STCM  R2,7,UPT+6              **
         STCM  R3,14,UPT+9              **
         LM    R2,R3,SVR23
         SPACE 2
*******
* UPT *
*******
         SPACE 1
         L     R6,48(R2)           UPT DESCRIPTOR
         MVC   6(2,R6),=X'00C0'    LENGTH TO STORAGE
         L     R8,0(R6)            ADDRESS DATA AREA
         MVC   0(24,R8),UPT        MOVE UPT IN
         SPACE 3
***********************************************************************
**********           WRITE  UADS                          *************
***********************************************************************
         SPACE 1
         LA    R7,UADS             ADDRESS DCB
         LA    R8,UADENTRY         ADDRESS IO AREA
         WRITE DECB,SF,(7),(8),MF=E
         SPACE 1
         CHECK DECB
         SPACE 3
***********************************************************************
**********           CLOSE  UADS                          *************
***********************************************************************
         SPACE 1
         LA    R7,UADS             ADDRESS DCB
         LA    R1,OPEN             ADDRESS OPEN PARAMETER LIST
         CLOSE ((7)),MF=(E,(1))
         SPACE 3
*
*
***********************************************************************
**********      CHECK DISK ALLOCATION BUDGET              *************
***********************************************************************
         SPACE 1
         B     END
         EJECT
***********************************************************************
**********   A1A1 - CHECK AND/OR CHANGE PASSWORD          *************
***********************************************************************
         SPACE 1
A1A1     DS    0H
         ST    R7,SVR7PWD          SAVE LINKAGE
         STM   R4,R5,SVA1A1        SAVEINPUT AND COUNT POINTERS
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R9,8(R9)            GET PASSWORD DISPLACEMENT
         LA    R7,0(R9,R7)         ADDRESS PASSWORD BLOCK
         ST    R7,SVPWD            SAVE POINTER TO PASSWORD
         CLC   PASSWORD,4(R7)      IS ENTERED PASSWORD CORRECT
         BE    A1A4                YES
         CLI   SWDSPLY,X'FF'       HAS PWD BEEN DISPLAYED
         BE    A1A2                YES
         LA    R6,MSG8L            INVALID PASSWORD MESSAGE
         B     A1A3                PUT MSG
A1A2     DS    0H
         MVI   SWDSPLY,X'00'       SET DISPLAY SWITCH OFF
         LA    R6,MSG23L           INVALID PASSWORD MESSAGE
A1A3     DS    0H
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         MVI   SWINHIB,X'FF'       DO NOT DISPLAY INPUT
         BAL   R7,T2A1             PUT MSG - GET REPLY
         MVI   PASSWORD,X'40'             REINITIALISE
         MVC   PASSWORD+1(7),PASSWORD     PASSWORD AREA
         CH    R4,=H'1'            IS THERE INPUT
         BL    A1A2                NO
         LR    R9,R5               ADDRESS PASSWORD INPUT
         BCTR  R4,0                REDUCE LENGTH
         EX    R4,EXPWD            MOVE IT TO STORAGE
         L     R7,SVPWD            GET ADDRESS OF PASSWORD
         CLC   PASSWORD,4(R7)      IS IT VALID
         BNE   M2A2A               NO .. BAIL OUT
A1A4     DS    0H
         MVI   SWPWD,X'FF'         INDICATE PASSWORD CHECKED
         MVC   PASSOLD,PASSWORD    STORE OLD PASSWORD
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            ACCOUNT OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNT OFFSET BLOCK
         CLC   8(4,R9),=X'00000000'     DOES ACCT INFO EXIST
         BNE   A1A4A                    YES
         LA    R6,MSG28L           INVALID UADS MSG
         BAL   R7,T1A1             PUT MSG
         B     M2A2A               BAIL OUT
A1A4A    DS    0H
         L     R8,8(R9)            ACCOUNT DATA BLOCK DISPLACEMENT
         LA    R7,45(R8,R7)        ADDRESS ACCOUNT DATA
         ST    R7,SVDATE           SAVE POINTER
         CLC   8(4,R7),=C'PASS'    IS THIS NEW USER
         BNE   A1B1                NO
         ZAP   8(4,R7),=P'0'       SET TO ZERO
         B     A1B2
A1B1     DS    0H
         TM    11(R7),X'0F'        IS FIELD VALID
         BO    A1B2                YES
         ZAP   8(4,R7),=P'0'       SET IT TO ZERO
A1B2     DS    0H
         MVC   SDWORK(4),DATE      STORE DATE
         MVC   SFWORK,8(R7)        DATE LAST CHANGED
         CLC   SDWORK+1(1),SFWORK+1      IS IT NEXT YEAR
         BE    A1B3                NO
         AP    SFWORK,=P'635'      ADJUST FOR END OF YEAR
A1B3     DS    0H
         SP    SDWORK(4),SFWORK    CHECK LAST TIME CHANGED
         CP    SDWORK(4),=P'25'    MORE THAN 25 DAYS?
         BH    A1A6                YES
         CLI   SWDSPLY,X'FF'       WAS PASSWORD DISPLAYED
         BNE   A1A5                NO
         LA    R6,MSG20L           NAUGHTY BOY MSG
         BAL   R7,T1A1             PUT MSG
         B     A1A7
A1A5     DS    0H
         CLC   PASSWORD,=C'G0      '  IS IT GO
         BE    A1A7                YES - CHANGE IT
         CLI   SWPWOWN,X'FF'       WAS OWNER PARM SPECIFIED
         BNE   A1A5A               NO
         BAL   R7,O1A1             YES - DISPLAY IT
         B     A3A3
A1A5A    DS    0H
         CLI   36(R7),X'F0'        DOES NAME ETC NEED CHANGE
         BE    A3A2B               NO
         BAL   R7,O1A1             YES - GO CHANGE IT
         B     A3A3                EXIT
A1A6     DS    0H
         LA    R6,MSG26L           PWD 25 DAYS OLD MSG
         BAL   R7,T1A1             PUT MSG
A1A7     DS    0H
         LA    R6,MSG9AL           PASSWORD TO BE CHANGED MSG
         LA    R9,MSG9BL           SECOND PART OF MSG
         LA    R5,LOGONID          USERID
         LA    R8,6                LENGTH OF IT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
A1A8     DS    0H
         LA    R6,MSG10L           ENTER NEW PASSWORD MSG
         MVI   SWINHIB,X'FF'       INPUT NOT TO BE DISPLAYED
         BAL   R7,T2A1             PUT MSG - GET REPLY
A1A9     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BNE   A1A10               NO
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R4,A1A9             CHECK MORE
         B     A1A8                ALL BLANK - ASK AGAIN
A1A10    DS    0H
         LR    R9,R5               START OF PWD
         SR    R8,R8               CLEAR LENGTH
A2A1     DS    0H
         CLI   0(R5),X'40'         IS NEXT BYTE BLANK
         BE    A2A3                YES
         LA    R8,1(R8)            UPDATE LENGTH
         LA    R5,1(R5)            UPDATE POINTER
         CH    R8,=H'8'            IS LENGTH TOO GREAT
         BH    A2A1A               YES
         BCT   R4,A2A1             KEEP CHECKING
         B     A2A3                ALL DONE - CHECK IT OUT
A2A1A    DS    0H
         LA    R6,MSG14L           MAX OF EIGHT CHARS MSG
         BAL   R7,T1A1             PUT MSG
A2A2     DS    0H
         LA    R6,MSG17L           REENTER MSG
         MVI   SWINHIB,X'FF'       DO NOT DISPLAY INPUT
         BAL   R7,T2A1             PUT MSG - GET REPLY
         B     A1A9
A2A3     DS    0H
         CH    R8,=H'4'            IS IT LESS THAN MINIMUM
         BNL   A2A4                NO
         LA    R6,MSG12L           AT LEAST 4 CHARS MSG
         BAL   R7,T1A1             PUT MSG
         B     A2A2                REENTER
A2A4     DS    0H
         ST    R8,SVR8CNT          STORE COUNT
         LR    R5,R9               START OF PWD
A2A5     DS    0H
         CLI   0(R5),C'A'          IS NEXT BYTE LESS THAN  A
         BL    A2A6                YES
         CLI   0(R5),C'Z'          IS IT GREATER THAN  Z
         BNH   A2A7                NO
A2A6     DS    0H
         LA    R6,MSG13L           INVALID CHARACTER MSG
         BAL   R7,T1A1             PUT MSG
         B     A2A2                REENTER
A2A7     DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R8,A2A5             KEEP CHECKING
         L     R8,SVR8CNT          RELOAD COUNT
         BCTR  R8,0                REDUCE LENGTH
         MVI   PASSWORD,X'40'           REINITIALISE
         MVC   PASSWORD+1(7),PASSWORD   PASSWORD AREA
         EX    R8,EXPWD            MOVE PASSWORD TO STORAGE
         MVC   PASSNEW,PASSWORD    STORE NEW PASSWORD
         L     R7,SVPWD            GET POINTER TO CURRENT PASSWORD
         CLC   PASSWORD,4(R7)      IS IT THE SAME
         BNE   A2A8                NO
         LA    R6,MSG11L           EXIST PWD NOT ALLOWED MSG
         BAL   R7,T1A1             PUT MSG
         B     A2A2                REENTER
A2A8     DS    0H
         L     R8,SVR8CNT          RELOAD COUNT
         LR    R5,R9               START OF PWD
         SR    R1,R1               CLEAR COUNT
A2A9     DS    0H
         MVC   CHAR,0(R5)          FIRST BYTE TO STORAGE
         LA    R5,1(R5)            UPDATE POINTER
         ST    R5,SVR5PWD          STORE POINTER
         BCTR  R8,0                REDUCE COUNTER
         ST    R8,SVR8CNT          STORE IT
A3A1     DS    0H
         CLC   CHAR,0(R5)          IS NEXT BYTE SAME AS FIRST
         BNE   A3A2                NO
         LA    R1,1(R1)            UPDATE COUNTER
A3A2     DS    0H
         LA    R5,1(R5)            UPDATE POINTER
         BCT   R8,A3A1             KEEP CHECKING
         CH    R1,=H'1'            SAME CHARACTER MORE THAN TWICE
         BH    A2A6                INVALID CHARACTERS
         L     R8,SVR8CNT          RELOAD COUNT
         CH    R8,=H'1'            IS IT LAST CHARACTER
         BE    A3A2A               YES
         SR    R1,R1               CLEAR COUNTER
         L     R5,SVR5PWD          RELOAD PWD POINTER
         B     A2A9                CHECK NEXT CHARACTER
A3A2A    DS    0H
         L     R7,SVDATE           RELOAD UADS ACCOUNT FIELD
         MVC   8(4,R7),DATE        MOVE CURRENT DATE IN
         L     R7,SVPWD            RELOAD UADS PASSWORD FIELD
         MVC   4(8,R7),PASSWORD    NEW PASSWORD IN
         BAL   R7,O1A1             CHECK NAME, DIST ETC
A3A3     DS    0H
         LM    R4,R5,SVA1A1        RELOAD POINTERS
         L     R7,SVR7PWD          RELOAD LINKAGE
         BR    R7                  RETURN
*
A3A2B    DS    0H
         MVI   SWDETLS,X'FF'   OBTAIN NAME AND DIST
         BAL   R7,O1A1         CHECH NAME AND DIST
         B     A3A3
         EJECT
***********************************************************************
**********   O1A1 - VERIFY NAME,DIST, AND PHONE           *************
***********************************************************************
         SPACE 1
O1A1     DS    0H
         CLI   SWOWNCK,X'FF'       HAS THIS BEEN DONE
         BER   R7                  YES - RETURN
         STM   R5,R9,SVOWN5        SAVE LINKAGE
         MVI   SWOWNCK,X'FF'       INDICATE DONE
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            GET ACCOUNTING OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNT OFFSET BLOCK
         CLC   8(4,R9),=X'00000000' IS THERE AN ACCOUNT DATA BLOCK
         BE    M2B2                NO - ERROR MESSAGE
         L     R8,8(R9)            GET ACCOUNT DATA BLOCK DISPLACEMENT
         LA    R7,44(R8,R7)        ADDRESS DATA PORTION
         LA    R7,13(R7)           START OF NAME
         ST    R7,SVOWNR7          STORE START ADDRESS
         MVC   NAME,0(R7)          STORE NAME
         MVC   DIST,8(R7)          STORE DISTRIBUTION CODE
         MVC   PHONE,16(R7)        STORE PHONE NO.
         LA    R8,NAME
         LA    R9,24               CHANGE COLONS TO BLANKS
O1A2     DS    0H
         CLI   0(R8),X'7A'         IS IT COLON
         BNE   O1A3                NO
         MVI   0(R8),X'40'         YES - SET IT TO BLANK
O1A3     DS    0H
         LA    R8,1(R8)            UPDATE POINTER
         BCT   R9,O1A2             KEEP CHECKING
         CLI   SWDETLS,X'FF'   OBTAIN ONLY
         BE    O1A23           YES
         CLI   24(R7),X'F0'        SPECIFIC REQUEST FROM PEEK
         BNE   O1A10               YES
         LA    R6,BLANKSL          BLANK LINE
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG38L           EXPLANATION
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG39L           EXPLANATION
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          BLANK LINE
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG40L           EXPLANATION
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG41L           EXPLANATION
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          BLANK LINE
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG29L           NAME
         LA    R5,NAME             KEYWORD
         LA    R9,MSG42L           SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG30L           DISTRIBUTION CODE
         LA    R5,DIST             KEYWORD
         LA    R9,MSG43L           SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG31L           PHONE NUMBER
         LA    R5,PHONE            KEYWORD
         LA    R9,MSG44L           SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
O1A4     DS    0H
         LA    R6,BLANKSL          ENTER ITEM TO CHANGE
         BAL   R7,T2A1             PUT MSG - GET REPLY
         LTR   R4,R4               FINISHED
         BZ    O1A20               YES - CLEAN UP AND GET OUT
O1A13    DS    0H
         CLI   0(R5),X'40'         IS POSITION BLANK
         BNE   O1A14               NO
         LA    R5,1(R5)            ADDRESS NEXT POSITION
         BCT   R4,O1A13            KEEP CHECKING
         B     O1A20               CLEAN UP AND GET OUT
O1A14    DS    0H
         CH    R4,=H'1'            IS REPLY LENGTH ONE
         BH    O1A7                NO
         CLI   0(R5),C'1'          IS REPLY 1
         BL    O1A7                NO - LESS THAN 1
         CLI   0(R5),C'3'          IS REPLY 3
         BH    O1A7                NO - GREATER THAN 3
         MVC   CHG,0(R5)           STORE ITEM NUMBER
         LA    R6,MSG33L           ASK FOR DATA
         BAL   R7,T1A1             PUT MSG - GET REPLY
         LA    R6,BLANKSL          ASK FOR DATA
         BAL   R7,T2A1             PUT MSG - GET REPLY
         CLI   CHG,C'1'            IS IT NAME
         BNE   O1A5                NO
         MVC   NAME,0(R5)          MOVE NEW GEAR IN
         B     O1A7                ASK FOR MORE
O1A5     DS    0H
         CLI   CHG,C'2'            IS IT DISTRIBUTION CODE
         BNE   O1A6                NO
         MVC   DIST,0(R5)          MOVE NEW GEAR IN
         B     O1A7                ASK FOR MORE
O1A6     DS    0H
         CLI   CHG,C'3'            IS IT PHONE NUMBER
         BNE   O1A7                NO - ASK FOR MORE
         MVC   PHONE,0(R5)         MOVE NEW GEAR IN
O1A7     DS    0H
         LA    R6,BLANKSL          BLANK LINE
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG45L           EXPLANATION
         BAL   R7,T1A1             PUT MSG
         B     O1A4
O1A10    DS    0H
         MVC   CHG,24(R7)          STORE INDICATOR
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG34L           ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         CLI   CHG,C'1'            IS IT NAME
         BNE   O1A11               NO
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG35L           NAME MESSAGE
         LA    R5,NAME             ADDRESS NAME
         LA    R9,BLANKSL          SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG33L           ENTER DATA
         BAL   R7,T1A1             PUT MSG - GET REPLY
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T2A1             PUT MSG
         MVC   NAME,0(R5)          MOVE NEW NAME IN
         B     O1A20               CLEAN UP AND GET OUT
O1A11    DS    0H
         CLI   CHG,C'2'            IS IT NAME
         BNE   O1A12               NO
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG36L           DIST MESSAGE
         LA    R5,DIST             ADDRESS DIST
         LA    R9,BLANKSL          SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG33L           ENTER DATA
         BAL   R7,T1A1             PUT MSG - GET REPLY
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T2A1             PUT MSG
         MVC   DIST,0(R5)          MOVE NEW NAME IN
         B     O1A20               CLEAN UP AND GET OUT
O1A12    DS    0H
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG37L           PHONE MESSAGE
         LA    R5,PHONE            ADDRESS PHONE
         LA    R9,BLANKSL          SECOND PART OF MSG
         LA    R8,8                LENGTH OF INSERT
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG33L           ENTER DATA
         BAL   R7,T1A1             PUT MSG - GET REPLY
         LA    R6,BLANKSL          ERROR IN INFO
         BAL   R7,T2A1             PUT MSG
         MVC   PHONE,0(R5)         MOVE NEW NAME IN
O1A20    DS    0H
         L     R7,SVOWNR7          ADDRESS UADS AGAIN
         MVI   24(R7),X'F0'        SET INDICATOR OFF
         LA    R8,24
         LA    R9,NAME             RESET BLANKS TO COLONS
O1A21    DS    0H
         CLI   0(R9),X'40'
         BNE   O1A22
         MVI   0(R9),X'7A'
O1A22    DS    0H
         LA    R9,1(R9)
         BCT   R8,O1A21
         MVC   0(24,R7),NAME
O1A23    DS    0H
         LM    R5,R9,SVOWN5
         BR    R7
         EJECT
***********************************************************************
**********   B1A1 - VERIFY ACCOUNTING INFORMATION         *************
***********************************************************************
         SPACE 1
B1A1     DS    0H
         ST    R7,SVR7PWD          SAVE LINKAGE
         STM   R4,R5,SVA1A1        SAVE INPUT POINTERS
         LOAD  EP=STJAP            GET TABLE OF ACCT INFO
         LR    R6,R0               ADDRESS START OF IT
         ST    R6,SVR6             SAVE ADDRESS
B1A2     DS    0H
         L     R8,0(R6)            PICK UP NO OF SECTION ID ENTRIES
         LA    R6,12(R6)           START OF SECTION ID
B1A3     DS    0H
         CLC   ACCTNO(2),0(R6)     DOES IT MATCH
         BE    B1A4                YES
         LA    R6,2(R6)            UPDATE POINTER
         BCT   R8,B1A3             KEEP CHECKING
         B     B1A7                NOT FOUND - ASK FOR ANOTHER
B1A4     DS    0H
         L     R6,SVR6             RELOAD TABLE POINTER
         L     R8,8(R6)            NO OF APPLICATION ID ENTRIES
         L     R6,4(R6)            DISPLACEMENT OF APPL ID'S
B1A6     DS    0H
         CLC   ACCTNO+2(2),0(R6)   DOES IT MATCH
         BE    B1A8                YES
         LA    R6,2(R6)            UPDATE POINTER
         BCT   R8,B1A6             KEEP CHECKING
B1A7     DS    0H
         LA    R6,MSG27L           INVALID INFO MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG17L           REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         CH    R4,=H'4'            IS IT AT LEAST FOUR BYTES
         BL    B1A7                NO
         MVC   ACCTNO,0(R5)        FIRST FOUR BYTES TO STORAGE
         L     R6,SVR6             TABLE POINTER
         B     B1A2
B1A8     DS    0H
         MVI   SWACCT,X'FF'        INDICATE ACCT INFO CHECKED
         LM    R4,R5,SVA1A1
         L     R7,SVR7PWD
         BR    R7
         EJECT
***********************************************************************
**********   C1A1 - VERIFY LOGON PROCEDURE                *************
***********************************************************************
         SPACE 1
C1A1     DS    0H
         ST    R7,SVR7PWD          SAVE LINKAGE
         STM   R4,R5,SVA1A1        SAVE INPUT POINTERS
         LA    R7,UADENTRY         ADDRESS UADS RECORD
         L     R8,24(R7)           GET PASSWORD OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PASSWORD OFFSET BLOCK
         L     R8,4(R9)            ACCOUNTING OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS ACCOUNT OFFSET BLOCK
         L     R8,4(R9)            PROCEDURE OFFSET DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PROCEDURE OFFSET BLOCK
         ST    R9,SVR9             SAVE IT
C1A2     DS    0H
         L     R8,8(R9)            PROC DATA BLOCK DISPLACEMENT
         LA    R6,0(R8,R7)         ADDRESS DATA BLOCK
         CLC   PROC,4(R6)          DOES PROCEDURE MATCH
         BE    C1A4                YES
         CLC   1(3,R9),=X'000000'  ANY MORE PROCS TO CHECK
         BE    C1A3                NO
         ICM   R6,7,1(R9)          NEXT PROCEDURE OFFSET BLOCK
         LA    R8,0(R6)            DISPLACEMENT
         LA    R9,0(R8,R7)         ADDRESS PROCEDURE OFFSET BLOCK
         B     C1A2                CHECK IT OUT
C1A3     DS    0H
         LA    R6,MSG24L           INVALID PROCEDURE MSG
         LA    R5,PROC             PROCEDURE NAME
         LA    R8,8                LENGTH
         LA    R9,BLANKSL          SECOND PART OF MSG
         MVI   SWTWOPT,X'FF'       INDICATE TWO PART MSG
         BAL   R7,T1A1             PUT MSG
         LA    R6,MSG5L            REENTER MSG
         BAL   R7,T2A1             PUT MSG - GET REPLY
         CH    R4,=H'8'            IS LENGTH EXCESSIVE
         BNH   C1A3A               NO
         MVC   PROC,0(R5)          FIRST 8 BYTES TO STORAGE
         B     C1A3                INVALID PROC MSG
C1A3A    DS    0H
         BCTR  R4,0                REDUCE LENGTH
         MVI   PROC,X'40'          REINITIALISE
         MVC   PROC+1(7),PROC      PROC NAME
         EX    R4,EXC1A1           MOVE PROC NAME TO STORAGE
         LA    R7,UADENTRY         POINT TO UADS RECORD
         L     R9,SVR9             POINT TO PROC OFFSET BLOCK
         B     C1A2                CHECK IT OUT
C1A4     DS    0H
         MVI   SWPROC,X'FF'        INDICATE PROCEDURE NAME CHECKED
         MVC   GROUP,16(R6)        STORE GENERIC UNIT NAME
         LM    R4,R5,SVA1A1        RELOAD POINTERS
         L     R7,SVR7PWD          RELOAD LINKAGE
         BR    R7                  RETURN
         EJECT
***********************************************************************
*         T1A1  -  PUT MSG TO TERMINAL                                *
***********************************************************************
*
*                  ON ENTRY R6 CONTAINS ADDR OF LENGTH FIELD PRECEDING
*                              FIRST PART OF MESSAGE TO BE PRINTED
*                           R5 CONTAINS ADDR OF INSERT
*                           R8 CONTAINS LENGTH OF INSERT
*                           R9 CONTAINS ADDR OF LENGTH FIELD PRECEDING
*                              SECOND PART OF MESSAGE TO BE PRINTED
*
T1A1     DS    0H
         MVI   MSGAREA,X'40'
         MVC   MSGAREA+1(79),MSGAREA    CLEAR MSGAREA TO BLANKS
         STM   R2,R3,SVR23
         L     R2,0(R6)                 PICK UP LENGTH OF MSG
         LA    R3,4(R6)                 POINT TO MESSAGE TEXT
         LA    R6,MSGAREA
         EX    R2,EXT1A1                MOVE MSG TEXT TO MSGAREA
         CLI   SWTWOPT,X'00'            IS MSG TWO-PART
         BE    T1A2                     BR IF NOT
         MVI   SWTWOPT,X'00'            TURN SWITCH OFF
         AR    R6,R2
         LA    R6,1(R6)
         LR    R3,R5                    ADDR OF INSERT DATA
         LR    R2,R8                    LEN OF INSERT DATA
         BCTR  R2,0                     DECREMENT BY 1 FOR EXECUTE
         EX    R2,EXT1A1                MOVE INSERT TO MSGAREA
         AR    R6,R8
         L     R2,0(R9)                 LEN OF 2ND PART OF MESSAGE
         LA    R3,4(R9)                 POINT TO MESSAGE TEXT
         EX    R2,EXT1A1                MOVE 2ND PART OF MSG TO MSGAREA
*
T1A2     DS    0H
         LA    R1,MSGAREA               SET UP R1 AND R0
         LA    R0,79                          FOR TPUT MACRO
         TPUT  (1),(0),R
         LM    R2,R3,SVR23              RESTORE REGS
         SPACE 1
         CLI   SWSTAX,X'FF'        HAS INTERVENTION OCCURRED
         BE    M1A4D               YES
         BR    R7                       RETURN
         EJECT
***********************************************************************
*         T2A1  -  PUT MSG TO TERMINAL AND GET REPLY                  *
***********************************************************************
*
*                  ON ENTRY R6 CONTAINS ADDR OF LENGTH FIELD PRECEDING
*                           MESSAGE TO BE PRINTED
*                  ON EXIT  R5 CONTAINS ADDR OF REPLY
*                           R4 CONTAINS LENGTH OF REPLY
*
T2A1     DS    0H
         MVI   MSGAREA,X'40'
         MVC   MSGAREA+1(79),MSGAREA    CLEAR MSG AREA TO BLANKS
         STM   R2,R3,SVR23              SAVE REGS
         L     R2,0(R6)                 PICK UP LENGTH
         LA    R3,4(R6)                 POINT TO MSG TO BE MOVED
         LA    R6,MSGAREA
         EX    R2,EXT1A1                MOVE MESSAGE TO MSGAREA
         LA    R1,IOPL
         MVC   PGPB(PGEND-DUMPTGT),DUMPTGT REFRESH PGPB BEFORE EACH
*                                         EXECUTION OF PUTGET
         CLI   SWINHIB,X'00'            IS 'DISPLAY INHIBIT' WANTED
         BNE   T2B1
*                                       NO INHIBIT REQUIRED
         PUTGET PARM=PGPB,OUTPUT=OLD,MF=(E,(1))
         SPACE 1
         B     T2A2
*
T2B1     DS    0H                       INHIBIT REQUIRED
         MVI   SWINHIB,X'00'
         PUTGET PARM=PGPB,OUTPUT=(OLD,,PTBYPS),MF=(E,(1))
*
T2A2     DS    0H
         L     R5,PGPB+12               ADDR OF REPLY BLOCK
         LH    R4,0(R5)                 LENGTH OF REPLY + HEADER
         SH    R4,=H'4'                 LENGTH OF REPLY
         LA    R5,4(R5)                 ADDRESS OF REPLY DATA
         LR    R2,R4                    PICK UP REPLY LENGTH
         BCTR  R2,0                     REDUCE IT
         EX    R2,EXT2A1                SET REPLY TO UPPER CASE
         LM    R2,R3,SVR23              RESTORE REGS
         CLI   SWSTAX,X'FF'        HAS INTERVENTION OCCURRED
         BE    M1A4D               YES
         BR    R7
         EJECT
***********************************************************************
***************           TERMINATION                   ***************
***********************************************************************
         SPACE 1
END      DS    0H
* END STAX
         STAX
*
M9A8     DS    0H
         L     R13,SV13            RESTORE REGISTER 13
         L     R0,GETSIZE          SIZE OF GETMAINED AREA
         LA    R1,GETAREA          ADDRESS OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         BR    R14
         END   ,
