TWO NEW COMMANDS HAVE BEEN ADDED TO JES2 TO ENHANCE OUTPUT PROCESSING.
THE TWO COMMANDS ARE:- $DP & $U.
 THE FORMAT OF THE $DP COMMAND IS AS FOLLOWS:-
  $DP   ----  WILL DISPLAY ALL PRINTED OUTPUT. IT WILL GIVE BOTH
              THE NUMBER OF LINES & THE OUTPUT CLASS PLUS THE
              USUAL JES2 SPOOL UTILIZATION MESSAGE.
  $DPX  ----  WHERE X IS THE SYSOUT CLASS TO BE DISPLAYED. EG. $DPA
              WILL DISPLAY ALL OUTPUT FOR SYSOUT CLASS=A. IF THERE IS
              NO SYSOUT=A THEN THE JES2 SPOOL UTLIZATION MESSAGE IS
              DISPLAYED. THE $DPX FORMAT DOES NOT SUPPORT MULTIPLE
              SYSOUT CLASSES.
 THE FORMAT OF THE $U COMMAND IS AS FOLLOWS:-
  $U JOBID,O= FROM CLASS,C= TO CLASS WHERE JOBID CAN BE JOB/TSU/STC
              NUMBER OR RANGE OF NUMBERS EG J10, S23-25, T51 OR
              JOBNAME IN QUOTES EG 'TSTJOB'.
              FROM CLASS CAN BE ONE OR MORE CLASSES EG A, ABV, ABCDEF
              OR * TO SIGNIFY ALL CLASSES.
              TO CLASS IS A SINGLE CLASS SPECIFICATION EG C
 EXAMPLES OF THE $U COMMAND:-
              $US1,C=P,O=L   WILL RESET 'L' CLASS OUTPUT FOR STARTED
              TASK 1 TO CLASS 'P'.
              $UJ10,O=V,C=P  WILL RESET 'V' CLASS OUTPUT FOR JOB 10
              TO CLASS = 'P'.
              $U'TESTJOB',O=2A,C=5  WILL RESET '2' CLASS & 'A' CLASS
              OUTPUT FOR TESTJOB TO CLASS = '5'.
              $UJ1-999,C=2,O=*  WILL RESET OUTPUT FOR ALL JOBS TO
              CLASS = '2'.
 POINTS TO NOTE:-
              THE OPERANDS 'O' & 'C' MAY BE IN ANY ORDER.
              OUTPUT CURRENTLY BEING PRINTED CANNOT BE RESET.
              RESETTING OUTPUT TO THE 'Z' QUEUE RE-QUEUES OUTPUT TO A
              'Z' QUEUE BUT DOES NOT AUTOMATICALLY DELETE.
              ('Z' CLASS BEING SYSOUT CLASS NOT PRINTED)
 THE RESPONSES TO THE $U COMMAND WILL BE:-
              $HASP000 SYSOUT CLASS/ES CHANGED
                          OR
              $HASP000 NO OUTPUT FOUND
++ USERMOD (WM00017) /* $DP COMMAND AND $U COMMAND */ .
++ VER (Z038) FMID(EJE1102) PRE(UZ29341) .
++ SRCUPD (HASPCOMM) DISTLIB (HASPSRC).
./       CHANGE NAME=HASPCOMM
*        TO BE INSERTED BETWEEN $DO AND $DQ ENTRIES  ***********   BNSW
         $COMTAB DP,BNSWCMD        $DP DISPLAY OUTPUT QUEUE(S) *   BNSW
*                                                    ***********   BNSW
COMTBLU  $COMTAB U7D,BNSWCMD,REJECT=COMR+COMJ  $U'JOBNAME'     *   BNSW
         $COMTAB UJ,BNSWCMD,REJECT=COMR+COMJ   $UJ   * CHANGE  *   BNSW
         $COMTAB US,BNSWCMD,REJECT=COMR+COMJ   $US   * SYSOUT  *   BNSW
         $COMTAB UT,BNSWCMD,REJECT=COMR+COMJ   $UT   * CLASS.  *   BNSW
****************************************************************   BNSW
******** ENTRY FOR 'U' COMMANDS    *****************************   BNSW
         DC    C'U',AL3(COMTBLU)   $U - CHANGE OUTPUT CLASS    *   BNSW
****************************************************************   BNSW
 TITLE '   HASP COMMAND PROCESSOR BNSWCMD - $DP  *** BNSW ***'     BNSW
         PUSH  USING                                               BNSW
BNSWCMD  $COMGRUP DP,U7D,UJ,US,UT,DELAY=NO  ADDED COMMANDS         BNSW
CDP      EQU   *                   DISPLAY OUTPUT QUEUES (FOR A    BNSW
*                                  PARTICULAR CLASS IF REQUESTED)  BNSW
         SPACE 2                                                   BNSW
****************************************************************** BNSW
*                                                                * BNSW
*        $DP   OR   $DPX    X=CLASS TO BE DISPLAYED, DEFAULT ALL * BNSW
*                                                                * BNSW
****************************************************************** BNSW
         SPACE 2                                                   BNSW
         USING JOEDSECT,R1                                         BNSW
         SPACE 1                                                   BNSW
         L     R1,0(,WD)           A(1ST OPERAND) I.E. 'P'         BNSW
         SR    WB,WB               CLASS INDEX - 0=ALL             BNSW
         CLI   1(R1),C' '          IF NO CLASS SPECIFIED           BNSW
         BE    CDPALLC             THEN DISPLAY ALL CLASSES        BNSW
*                                  ELSE CHECK VALIDITY OF CLASS:   BNSW
         LA    R15,L'CDPCLSES      NUMBER OF VALID CLASSES         BNSW
CDPFNCLS LA    WB,1(,WB)           1=A , 2=B , ...                 BNSW
         IC    WC,CDPCLSES-1(WB)   CLASS FROM LIST                 BNSW
         CLM   WC,1,1(R1)          IF THIS IS THE CLASS            BNSW
         BE    CDPHAVCL            THEN GO FIND JOE'S              BNSW
         BCT   R15,CDPFNCLS        ELSE CHECK AGAINST NEXT IN LIST BNSW
         SPACE 1                                                   BNSW
         $CFINVO OPERAND=(R1)      MSG 'INVALID OPERAND' + GET OUT BNSW
         SPACE 1                                                   BNSW
CDPCLSES DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789' CLASS LIST  BNSW
         SPACE 1                                                   BNSW
CDPHAVCL DS    0H                  RUN THRU CLASS QUEUE IN JOT     BNSW
         BAL   WC,CDPPRC           PROCESS SPECIFIED CLASS         BNSW
         B     CDPEND              AND GET OUT WITH FINAL MSG.     BNSW
         SPACE 2                                                   BNSW
CDPALLC  LA    WB,1(,WB)           1ST/NEXT CLASS TO PROCESS       BNSW
         BAL   WC,CDPPRC           PROCESS A CLASS                 BNSW
         LA    WC,L'CDPCLSES       NUMBER OF CLASES                BNSW
         CR    WB,WC               IF NOT ON LAST ONE              BNSW
         BNE   CDPALLC             THEN DO NEXT CLASS              BNSW
         SPACE 1                                                   BNSW
CDPEND   EQU   *                   ALL DONE - SETUP FINAL MSG AND  BNSW
*                                  GET OUT. CODE HERE IS EXACTLY   BNSW
*                                  THE SAME AS AT 'CDQEND'         BNSW
         L     R15,$SSVT           A(SSVT)                         BNSW
         L     R1,$SVTGALC-SSVT(,R15) GROUPS ALLOCATED             BNSW
         M     R0,=F'100'          CALCULATE                       BNSW
         D     R0,$SVTGTOT-SSVT(,R15) PERCENTAGE                   BNSW
         $CFCVE VALUE=(R1)         MAKE PRINTABLE                  BNSW
         MVC   COMMAND(3),COMDWORK+2 INTO MSG                      BNSW
         MVC   COMMAND+3(26),=C' PERCENT SPOOL UTILIZATION'        BNSW
         $CRET L=29                GET OUT AND ISSUE MSG           BNSW
         SPACE 3                                                   BNSW
CDPPRC   DS    0H                  PROCESS CLASS INDICATED BY WB   BNSW
         ST    WC,COMWREGS+12      KEEP RETURN ADDR                BNSW
         IC    R1,CDPCLSES-1(WB)   GET CHAR FOR CLASS              BNSW
         STC   R1,COMWREGS+4       AND KEEP IT                     BNSW
         LA    R1,0(WB,WB)         2,4,6,...                       BNSW
         LA    R1,(JOTCLSQ-JOTDSECT)-(JOENEXT-JOEDSECT+2)(R1) DISP BNSW
         AL    R1,$JOTABLE         ACTUAL ADDR TO START            BNSW
         ST    R1,COMWREGS         KEEP STARTING POINT FOR THIS Q  BNSW
         SPACE 1                                                   BNSW
CDPNXTJO LH    R1,JOENEXT          1ST/NEXT JOE OFFSET/4           BNSW
         N     R1,=X'0000FFFF'     ENSURE +                        BNSW
         BZ    CDPPRCR             GET OUT IF NO MORE JOE'S        BNSW
         SLL   R1,2                *4 FOR ACTUAL OFFSET            BNSW
         AL    R1,$JOTABLE         ADD ADDR OF JOT                 BNSW
         ST    R1,COMWREGS+8       KEEP ADDR OF CURRENT JOE        BNSW
         LH    R14,JOEJQE          JQE OFFSET/4                    BNSW
         N     R14,=X'0000FFFF'    ENSURE +                        BNSW
         SLL   R14,2               *4 FOR ACTUAL OFFSET            BNSW
         AL    R14,$JOBQPTR        A(JQE)                          BNSW
         SPACE 1                                                   BNSW
*        BUILD MSG AND ISSUE $CWTO                                 BNSW
         SPACE 1                                                   BNSW
         BAL   WC,CDPIJOB          IDENTIFY JOB                    BNSW
         BAL   WC,CDPICLAS         IDENTIFY OUTPUT CLASS           BNSW
         BAL   WC,CDPILNS          NUMBER OF LINES                 BNSW
         SPACE 1                                                   BNSW
         $CWTO L=CDPOLEN           ISSUE MSG                       BNSW
         SPACE 1                                                   BNSW
*        MAKE SURE THAT THE JOE THAT WE WERE WORKING WITH IS STILL BNSW
*        ON THE QUEUE.                                             BNSW
         L     R1,COMWREGS         GET START POINT FOR THE QUEUE   BNSW
CDPNXTJX LH    R1,JOENEXT          1ST/NEXT JOE                    BNSW
         N     R1,=X'0000FFFF'     ENSURE +                        BNSW
         BZ    CDPINCM             NOT FOUND - MSG 'LIST INCOMPLETE' SW
         SLL   R1,2                *4 FOR ACTUAL OFFSET            BNSW
         AL    R1,$JOTABLE         A(JOE)                          BNSW
         C     R1,COMWREGS+8       IF THIS IS THE ONE WE WERE WORKING W
         BNE   CDPNXTJX            WITH THEN CONTINUE AS NORMAL ELSE SW
*                                  TRY NEXT JOE ON THE QUEUE.      BNSW
         B     CDPNXTJO            JOE FOUND - CONTINUE            BNSW
         SPACE 2                                                   BNSW
CDPINCM  MVC   COMMAND(L'CDPCLIC),CDPCLIC 'LIST INCOMPLETE'        BNSW
         MVC   COMMAND+L'CDPCLIC(1),COMWREGS+4 CLASS               BNSW
         $CWTO L=L'CDPCLIC+1       ISSUE MSG                       BNSW
         SPACE 1                                                   BNSW
CDPPRCR  L     WC,COMWREGS+12      RESTORE RETURN ADDR             BNSW
         BR    WC                                                  BNSW
         SPACE 3                                                   BNSW
CDPIJOB  DS    0H                  PUT JOB IDENTITY IN MSG         BNSW
         MVC   CDPOJNAM,JQEJNAME-JQE(R14) MOVE IN JOBNAME          BNSW
         LH    R0,JQEJOBNO-JQE(R14) JOB NUMBER                     BNSW
         MVC   CDPOJID,CDPCJID     ASSUME 'JOB'                    BNSW
         CH    R0,=H'10000'        IS IT JOB                       BNSW
         BL    CDPCONJN            IF SO GO CONVERT NUMBER         BNSW
         MVC   CDPOJID,CDPCTID     TRY FOR 'TSU'                   BNSW
         SH    R0,=H'20000'        SUBTRACT TSUS BASE              BNSW
         BNM   CDPCONJN            GO CONVERT IF IT IS TSU         BNSW
         MVC   CDPOJID,CDPCSID     MUST BE STC                     BNSW
         AH    R0,=H'10000'        MAKE STC NUMBER +VE             BNSW
CDPCONJN CVD   R0,COMDWORK                                         BNSW
         MVC   CDPOJNUM,CDPCJPAT   EDIT PATTERN                    BNSW
         ED    CDPOJNUM,COMDWORK+(8-L'CDPOJNUM/2)                  BNSW
         MVC   CDPOJNID,CDPCJNID   '#'                             BNSW
         BR    WC                                                  BNSW
         SPACE 2                                                   BNSW
CDPICLAS DS    0H                  PUT OUTPUT CLASS INTO MSG       BNSW
         MVC   CDPOCLAS,COMWREGS+4 A,B,C,...                       BNSW
         MVC   CDPOCLID,CDPCCLID   'CLASS'                         BNSW
         BR    WC                                                  BNSW
         SPACE 2                                                   BNSW
CDPILNS  DS    0H                  NUMBER OF LINES AND INDICATION  BNSW
         MVC   CDPOPRIN,CDPCBLNK   IF THE JOB IS CURRENTLY PRINTING NSW
         L     R0,JOERECCT         NUMBER OF LINES                 BNSW
         TM    JOEFLAG,$JOEPRT     IF JOB IS NOT PRINTING          BNSW
         BNO   CDPNOTPR            THEN DON'T LOOK FOR CHKPT JOE   BNSW
         SPACE 1                                                   BNSW
         MVC   CDPOPRIN,CDPCPRIN   'PRINTING' TO MSG               BNSW
*        JOB PRINTING, SUBTRACT NUMBER OF LINES PRINTED FROM TOTAL. NSW
         TM    JOEFLAG,$JOECKV     IF CHKPT NOT VALID              BNSW
         BNO   CDPNOTPR            THEN DON'T LOOK AT IT           BNSW
         LH    R1,JOECKPT          OFFSET/4 FOR CHKPT JOE          BNSW
         N     R1,=X'0000FFFF'     ENSURE +                        BNSW
         SLA   R1,2                *4 FOR ACTUAL OFFSET            BNSW
         BZ    CDPNOTPR            SKIP IT IF NOT AVAILABLE        BNSW
         AL    R1,$JOTABLE         A(CHKPT JOE)                    BNSW
         S     R0,JOETLNC          TOTAL-(NO. PRINTED)             BNSW
         L     R1,COMWREGS+8       RESTORE A(WORK JOE)             BNSW
         SPACE 1                                                   BNSW
CDPNOTPR CVD   R0,COMDWORK         NUMBER OF LINES                 BNSW
         MVC   CDPONLIN,CDPCLPAT   EDIT PATTERN                    BNSW
         ED    CDPONLIN,COMDWORK+(8-L'CDPONLIN/2)                  BNSW
         MVC   CDPOLINS,CDPCLINS   'LINES'                         BNSW
         BR    WC                                                  BNSW
         SPACE 3                                                   BNSW
*        FIELD 'COMWREGS' USED AS FOLLOWS:                         BNSW
*                                                                  BNSW
*              COMWREGS+0(4)  OFFSET OF START OF CURRENT WORK JOE Q NSW
*              COMWREGS+4(1)  CLASS CURRENTLY BEING PROCESSED      BNSW
*              COMWREGS+8(4)  ADDR OF CURRENT WORK JOE             BNSW
*              COMWREGS+12(4) RETURN ADDR FROM 'CDPPRC'            BNSW
*                                                                  BNSW
         SPACE 1                                                   BNSW
CDPCJID  DC    C' JOB '            IDENTIFY 'JOB' IN MSG           BNSW
CDPCTID  DC    C' TSU '            IDENTIFY 'TSU' IN MSG           BNSW
CDPCSID  DC    C' STC '            IDENTIFY 'STC' IN MSG           BNSW
CDPCJNID DC    C'  #'              IDENTIFY JOB NUMBER             BNSW
CDPCJPAT DC    X'602020202021'     JOB NUMBER PATTERN              BNSW
CDPCCLID DC    C'  CLASS '         IDENTIFY CLASS IN MSG           BNSW
CDPCLINS DC    C'     LINES'                                       BNSW
CDPCLPAT DC    X'4020202020202021' NUMBER OF LINES PATTERN         BNSW
CDPCPRIN DC    C'  PRINTING'       IF JOB IS PRINTING              BNSW
CDPCBLNK DC    CL(L'CDPCPRIN)' '   IF JOB NOT PRINTING             BNSW
CDPCLIC  DC    C'LIST INCOMPLETE FOR CLASS '                       BNSW
         SPACE 2                                                   BNSW
*        EQUATES FOR OUTPUT LINE. THESE TOGETHER WITH THE ABOVE    BNSW
*        CONSTANTS DETERMINE THE FORMAT OF THE MESSAGE.            BNSW
         SPACE 1                                                   BNSW
CDPOJID  EQU   COMMAND,L'CDPCJID               'JOB','TSU','STC'   BNSW
CDPOJNAM EQU   CDPOJID+L'CDPOJID,8             JOBNAME             BNSW
CDPOJNID EQU   CDPOJNAM+L'CDPOJNAM,L'CDPCJNID  '#'                 BNSW
CDPOJNUM EQU   CDPOJNID+L'CDPOJNID-1,L'CDPCJPAT JOB NUMBER         BNSW
CDPOCLID EQU   CDPOJNUM+L'CDPOJNUM,L'CDPCCLID  'CLASS'             BNSW
CDPOCLAS EQU   CDPOCLID+L'CDPOCLID,1           CLASS BYTE          BNSW
CDPOLINS EQU   CDPOCLAS+L'CDPOCLAS,L'CDPCLINS  'LINES'             BNSW
CDPONLIN EQU   CDPOLINS+L'CDPOLINS-1,L'CDPCLPAT NUMBER OF LINES    BNSW
CDPOPRIN EQU   CDPONLIN+L'CDPONLIN,L'CDPCPRIN  'PRINTING'          BNSW
CDPOLEN  EQU   CDPOPRIN+L'CDPOPRIN-COMMAND     LENGTH OF MSG       BNSW
 TITLE '   HASP COMMAND PROCESSOR BNSWCMD - $U   *** BNSW ***'     BNSW
         EJECT                                                     BNSW
****************************************************************** BNSW
*                                                                * BNSW
*        ROUTINES FOR $U COMMAND:                                * BNSW
*                                                                * BNSW
*        EG'S  $U'JOBNAME',O=V,C=Z     (FROM CLASS V TO CLASS Z) * BNSW
*              $UJ101,O=*,C=A          (ALL CLASSES TO CLASS A)  * BNSW
*              $UT15-16,O=AB5,C=V      (CLASSES A,B,5 TO CLASS V)* BNSW
*                                                                * BNSW
****************************************************************** BNSW
         SPACE 2                                                   BNSW
CU7D     DS    0H                  $U'JOBNAME'                     BNSW
         L     R1,0(,WD)           A(OPERAND) IE 1ST "'"           BNSW
         L     WC,4(,WD)           END OF OPERAND +2               BNSW
         BCTR  WC,0                BACK TO END                     BNSW
         BCTR  WC,0                OF OPERAND                      BNSW
         CLI   0(WC),C''''         ENDING ' IS OPTIONAL            BNSW
         BNE   CUNOSUB             IF NOT ' LAST BYTE PART OF NAME BNSW
         BCTR  WC,0                END OF NAME                     BNSW
CUNOSUB  SR    WC,R1               LENGTH OF NAME                  BNSW
         BNP   CUJINVO             NO NAME    - GET OUT            BNSW
         BCTR  WC,0                LENGTH FOR EX                   BNSW
         LA    R0,7                MAX LEN                         BNSW
         CR    WC,R0               TRUNCATE                        BNSW
         BNH   CUOKL               IF                              BNSW
         LR    WC,R0               TOO LONG                        BNSW
CUOKL    MVC   COMJNAME,=CL8' '    INIT JOBNAME                    BNSW
         EX    WC,CUMVC                                            BNSW
         SPACE 1                                                   BNSW
*        LOOK FOR JOB IN JOB QUEUE.                                BNSW
         USING JQEDSECT,R1                                         BNSW
         $CFJSCAN PROCESS=CUPROC,NEXT=CUNEXTJ                      BNSW
         MVC   COMMAND(8),COMJNAME JOB NOT FOUND -                 BNSW
         MVC   COMMAND+8(14),=C' JOB NOT FOUND' SETUP MSG          BNSW
         $CRET L=22                AND GET OUT                     BNSW
         SPACE 1                                                   BNSW
CUMVC    MVC   COMJNAME(1),1(R1)   TO MOVE JOBNAME FROM COMMAND    BNSW
         SPACE 1                                                   BNSW
CUPROC   CLC   COMJNAME,JQEJNAME   IS THIS THE REQD JOB            BNSW
         BNE   CUNEXTJ             GET NEXT IF NO MATCH            BNSW
         LH    WC,JQEJOBNO         GET JOB NUMBER                  BNSW
         STH   WC,CUJWJLO          LO JOB NO                       BNSW
         STH   WC,CUJWJHI          SAME AS HI JOB NO               BNSW
         B     CUJHAVJ             PROCESS OTHER OPERANDS          BNSW
         SPACE 2                                                   BNSW
         USING JOEDSECT,R1                                         BNSW
CUS      DS    0H                  $US                             BNSW
         LH    WA,=H'10000'        STCS LO END                     BNSW
         B     CUJA                COMMON                          BNSW
         SPACE 2                                                   BNSW
CUT      DS    0H                  $UT                             BNSW
         LH    WA,=H'20000'        TSUS LO END                     BNSW
         B     CUJA                COMMON                          BNSW
         SPACE 2                                                   BNSW
CUJ      DS    0H                  $UJ                             BNSW
         SR    WA,WA               JOBS LO END                     BNSW
         SPACE 1                                                   BNSW
CUJA     $CFCVB POINTER=(WD),NOK=CUJINVO GET JOB NUBER RANGE       BNSW
         LTR   R0,R0               IF 'HI' JOB NUMBER NOT +VE      BNSW
         BNP   CUJINVO             THEN GET OUT WITH ERROR MSG     BNSW
         AR    R0,WA               HI JOB NUMBER                   BNSW
         STH   R0,CUJWJHI          KEEP HI JOB NUMBER              BNSW
         AR    R1,WA               LO JOB NUMBER                   BNSW
         STH   R1,CUJWJLO          KEEP LO JOB NUMBER              BNSW
CUJHAVJ  MVI   CUJWFLG,0           INIT FLAG                       BNSW
         SPACE  1                                                  BNSW
         CLR   WD,WF               IF NO MORE OPERANDS             BNSW
         BNL   CUJMISS             THEN ISSUE MISSING OP MSG       BNSW
CUJLOOP  BXH   WD,WE,CUJEND        LOOK AT NEXT OP                 BNSW
         L     R1,0(,WD)           A(OPERAND)                      BNSW
         CLI   1(R1),C'='          C=  OR  O=                      BNSW
         BNE   CUJINVO             GET OUT IF '=' NOT THERE        BNSW
         $CFSEL (C,CUJCLAS),(O,CUJOUT),OPERAND=(R1) B DEP ON C OR O NSW
         SPACE 1                                                   BNSW
CUJINVO  L     R1,0(,WD)           INVALID OPERAND POINTER         BNSW
         $CFINVO OPERAND=(R1)      GET OUT WITH MSG                BNSW
         SPACE 1                                                   BNSW
CUJMISS  $CRET MSG='OPERANDS MISSING FOR $U' GET OUT WITH MSG      BNSW
         SPACE 2                                                   BNSW
*        O=CLASSES  OR  O=* FOR ALL CLASSES  EG O=ABV              BNSW
CUJOUT   OI    CUJWFLG,CUJEOUT     O=  OPERAND FOUND               BNSW
         XC    CUJWOCLS,CUJWOCLS   CLEAR REQUIRED CLASES           BNSW
         L     R15,4(,WD)          NEXT OR NULL OPERAND            BNSW
         BCTR  R15,0               BACK TO ','                     BNSW
         LA    R1,2(,R1)           1ST OUT CLASS                   BNSW
         CLI   0(R1),C'*'          IF NOT 'ALL CLASSES'            BNSW
         BNE   CUJSCLS             THEN GO SCAN LIST               BNSW
         MVC   CUJWOCLS,CDPCLSES   ELSE MOVE IN LIST OF ALL CLASES BNSW
         B     CUJLOOP             AND GO GET NEXT OP              BNSW
         SPACE  1                                                  BNSW
CUJSCLS  CR    R1,R15              IF AT END OF THIS OPERAND       BNSW
         BNL   CUJLOOP             THEN GO GET NEXT                BNSW
         LA    R14,L'CDPCLSES      NUMBER OF VALID CLASSES         BNSW
CUJFCLSO IC    R0,CDPCLSES-1(R14)  PICK UP CLASS (WORKING BACWARDS) NSW
         CLM   R0,1,0(R1)          IF CLASS MATCHES                BNSW
         BE    CUJHCLSO            GO PUT IT IN LIST               BNSW
         BCT   R14,CUJFCLSO        ELSE TRY NEXT VALID CLASS       BNSW
         B     CUJINVO             CLASS NOT VALID - ISSUE MSG     BNSW
         SPACE 1                                                   BNSW
CUJHCLSO STC   R0,CUJWOCLS-1(R14)  CLASS REQUIRED INTO LIST        BNSW
         LA    R1,1(,R1)           NEXT IN COMMAND                 BNSW
         B     CUJSCLS             CHECK FOR MORE                  BNSW
         SPACE 2                                                   BNSW
CUJCLAS  OI    CUJWFLG,CUJECLAS    'TO' CLASS OPERAND              BNSW
         LA    R14,L'CDPCLSES      NUMBER OF VALID CLASSES         BNSW
CUJFCLSN IC    R0,CDPCLSES-1(R14)  GET A VALID CLASS               BNSW
         CLM   R0,1,2(R1)          IF CLASS IN LIST                BNSW
         BE    CUJHCLSN            GO STORE IT                     BNSW
         BCT   R14,CUJFCLSN        ELSE TRY NEXT                   BNSW
         B     CUJINVO             INVALID 'TO' CLASS              BNSW
         SPACE 1                                                   BNSW
CUJHCLSN STC   R0,CUJWNCLS         STORE NEW CLASS                 BNSW
         BCTR  R14,0               CLASS NO A=0,B=1,...            BNSW
         STH   R14,CUJWNCLN        USE LATER TO FIND CLASS Q IN JOT NSW
         B     CUJLOOP             GET NEXT OPERAND                BNSW
         SPACE 2                                                   BNSW
CUJEND   DS    0H                  ALL OPERANDS SCANNED            BNSW
         TM    CUJWFLG,CUJECLAS+CUJEOUT C=  AND  O=  BOTH REQD     BNSW
         BNO   CUJMISS             IF NOT BOTH THERE ISSUE MSG     BNSW
         LH    R14,CUJWNCLN        NEW CLASS NO. 0,1,2,...         BNSW
         SR    R0,R0               REMOVE ANY REQUEST TO CHANGE    BNSW
         STC   R0,CUJWOCLS(R14)    CLASS TO WHAT IT WAS (EG C=A,O=A) SW
         SPACE 2                                                   BNSW
CUJGETQ  $QSUSE ,                  ENQUEUE                         BNSW
         SPACE 1                                                   BNSW
*        FIND ANY OUTPUT WHICH MATCHES THAT SPECIFIED IN THE       BNSW
*        COMMAND.                                                  BNSW
*        SCAN JOT CLASS QUEUES FOR THE REQUIRED CLASSES AND CHECK  BNSW
*        IF THE JOES BELONG TO A REQUESTED JOB.                    BNSW
         SPACE 1                                                   BNSW
         SR    WA,WA               1ST CLASS NUMBER                BNSW
CUJSCNJ  SR    R1,R1                                               BNSW
         IC    R1,CUJWOCLS(WA)     GET CLASS OR 0 IF THAT CLASS    BNSW
         LTR   R1,R1               IS NOT REQUIRED.                BNSW
         BZ    CUJENDCL            GET NEXT CLASS IF NOT REQUIRED. BNSW
         STC   R1,CUJWCURC         KEEP CURRENT CLASS              BNSW
         LA    R1,(JOTCLSQ-JOTDSECT)-(JOENEXT-JOEDSECT)(WA,WA) DSP BNSW
         AL    R1,$JOTABLE         ADDR OF JOT CLASS QUEUE HEAD    BNSW
         LH    WB,JOENEXT          1ST JOE OFFSET/4                BNSW
CUJNXTJO LR    WC,R1               KEEP A(PREV JOE) (OR CLS Q HEAD) NSW
CUJNXTJX LR    R1,WB               NEXT/1ST JOE                    BNSW
         N     R1,=X'0000FFFF'     ENSURE +VE                      BNSW
         BZ    CUJENDCL            GET OUT IF NO MORE              BNSW
         SLL   R1,2                *4 FOR ACTUAL OFFSET            BNSW
         AL    R1,$JOTABLE         A(JOE)                          BNSW
         LH    WB,JOENEXT          OFFSET FOR NEXT JOE FOR THIS CLS NSW
         TM    JOEFLAG,$JOEPRT     IF PRINTING                     BNSW
         BO    CUJNXTJO            THEN DONT TOUCH IT              BNSW
         SPACE 1                                                   BNSW
*        WE HAVE FOUND OUTPUT OF A MATCHING CLASS, NOW CHECK JOB   BNSW
         LH    R14,JOEJQE          JQE OFFSET/4                    BNSW
         N     R14,=X'0000FFFF'    ENSURE +                        BNSW
         SLL   R14,2               ACTUAL OFFSET                   BNSW
         AL    R14,$JOBQPTR        A(JQE)                          BNSW
         LH    R15,JQEJOBNO-JQEDSECT(R14) GET JOB NUMBER AND       BNSW
         CH    R15,CUJWJLO         CHECK                           BNSW
         BL    CUJNXTJO            RANGE                           BNSW
         CH    R15,CUJWJHI         OF                              BNSW
         BH    CUJNXTJO            JOBNUMBERS                      BNSW
         SPACE 2                                                   BNSW
*        DO ACTUAL SWAP.                                           BNSW
         OI    CUJWFLG,CUJEDONE    INDICATE JOT UPDATED            BNSW
         SPACE 1                                                   BNSW
*        WC HAS ADDR OF PREV JOE OR CLASS QUEUE HEADER             BNSW
*        WB HAS NEXT JOE OFFSET                                    BNSW
         STH   WB,JOENEXT-JOEDSECT(WC) TAKE JOE OFF 'FROM' QUEUE   BNSW
         LH    R14,CUJWNCLN        NEW ('TO') CLASS NO   0,1,2,... BNSW
         LA    R14,JOTCLSQ-JOTDSECT(R14,R14) DISP OF CLASS Q       BNSW
         AL    R14,$JOTABLE        A(CLASS Q HEADER)               BNSW
         MVC   JOENEXT,0(R14)      HOOK REST OF Q ONTO THIS JOE    BNSW
         MVC   JOECURCL,CUJWNCLS   NEW CLASS TO JOE                BNSW
         SL    R1,$JOTABLE         JOE OFFSET                      BNSW
         SRL   R1,2                /4                              BNSW
         STH   R1,0(R14)           JOE ONTO 'TO' Q                 BNSW
         SLL   R1,2                *4 OFFSET AGAIN                 BNSW
         $#CKPT JOE=(R1),TYPE=D    REQUEST CHKPT OF CURRENT JOE    BNSW
         $#CKPT JOE=(WC),TYPE=A    REQ CHKPT OF PREV JOE OR Q HEADER SW
         B     CUJNXTJX            GET NEXT - PREVIOUS REMAINS SAME NSW
         SPACE 2                                                   BNSW
CUJENDCL LA    WA,1(,WA)           NEXT CLASS NUMBER               BNSW
         LA    R1,L'CUJWOCLS       NUMBER OF CLASSES               BNSW
         CR    WA,R1               IF NOT AT END                   BNSW
         BNE   CUJSCNJ             DO NEXT CLASS                   BNSW
         SPACE 1                                                   BNSW
*        AT END OF SCAN CHECK IF JOT HAS BEEN UPDATED              BNSW
         TM    CUJWFLG,CUJEDONE    IF JOT NOT UPDATED              BNSW
         BNO   CUJNOCH             ISSUE MSG + GET OUT             BNSW
         SPACE 1                                                   BNSW
         LH    R1,CUJWNCLN         'TO' CLASS NO. 0,1,2...         BNSW
         LA    R1,JOTCLSQ-JOTDSECT(R1,R1) DISP OF Q HEADER         BNSW
         $#CKPT JOE=(R1),TYPE=D    REQ CHPKT OF 'TO' Q HEADER      BNSW
         $POST $HASPECF,(JOT,CKPW) POST JOT AND REQUEST CHKPT WRITE NSW
         SPACE 1                                                   BNSW
         $CRET MSG='SYSOUT CLASS/ES CHANGED' ISSUE MSG + RETURN    BNSW
         SPACE 1                                                   BNSW
CUJNOCH  $CRET MSG='NO OUTPUT FOUND' RETURN WITH MSG               BNSW
         SPACE 2                                                   BNSW
****************************************************************** BNSW
*                                                                  BNSW
*        END OF 'COMMAND' USED AS WORK AREA                        BNSW
*                                                                  BNSW
CUJWNCLN EQU   COMMAND+80,2               NEW ('TO') CLASS NUMBER  BNSW
CUJWJLO  EQU   CUJWNCLN+L'CUJWNCLN,2      LO JOB NO.               BNSW
CUJWJHI  EQU   CUJWJLO+L'CUJWJLO,2        HI JOB NO.               BNSW
CUJWCURC EQU   CUJWJHI+L'CUJWJHI,1        CURRENT CLASS            BNSW
CUJWNCLS EQU   CUJWCURC+L'CUJWCURC,1      NEW ('TO') CLASS         BNSW
CUJWOCLS EQU   CUJWNCLS+L'CUJWNCLS,L'CDPCLSES OLD ('FROM') CLASSES BNSW
CUJWFLG  EQU   CUJWOCLS+L'CUJWOCLS,1      FLAG BYTE:               BNSW
CUJECLAS EQU   X'80'                      C= FOUND                 BNSW
CUJEOUT  EQU   X'40'                      O= FOUND                 BNSW
CUJEDONE EQU   X'20'                      JOT UPDATED              BNSW
*                                                                  BNSW
****************************************************************** BNSW
         SPACE 2                                                   BNSW
         POP   USING               BACK TO WHAT IT WAS             BNSW
         SPACE 2                                                   BNSW
         LTORG                                                     BNSW
****************************************************************** BNSW
./       ENDUP
