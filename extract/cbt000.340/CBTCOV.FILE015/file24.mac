 ***********************************************************************
 ***********************************************************************
         JEF10    TITLE  'TSO SUBMIT EXIT IKJEFF10              G.WICKS'

         ***************************************************************
         *       TO INSTALL AND TEST THE SUBMIT EXIT - IKJEFF10        *
         ***************************************************************
         * 1.   SOURCE IS CONTAINED IN 'SM00.SAMPLE.SOURCE(IKJEFF10)'
         * 2.   THE PROGRAM IS LINKED INTO SYS1.PLINKLIB.
         * 3.   THIS EXIT MUST OPERATE FROM AN AUTHORISED LIBRARY IN
         *      THE LINKLIST AND CANNOT BE TESTED IN A TSO USERS
         *      ADDRESS SPACE. APART FROM USING THE EXIT DRIVER, THE
         *      ONLY WAY TO TEST IT IS TO INSTALL IT ON A SEPARATE
         *      TESTING SYSTEM WHERE A PRIVATE TSO SESSION CAN BE
         *      STARTED. THE LOGICAL WAY TO TEST IT IS TO BUILD JCL
         *      TO EXECUTE PROGRAM IEFBR14.
         ***************************************************************
//SM0006H JOB OHOT,XXXX,
//          MSGCLASS=X,NOTIFY=SM0004,CLASS=V
//JOBCAT    DD    DSN=USERCAT.TSOPK2,DISP=SHR
//ASM       EXEC  PGM=IEV90,PARM='OBJECT,NODECK,RENT'
//SYSPRINT  DD    SYSOUT=X
//SYSLIB    DD    DSN=PCS.TEST.MACRO.MACLIB,DISP=SHR,DCB=BLKSIZE=12960
//          DD    DSN=PCS.TEST.COPY.MACLIB,DISP=SHR
//          DD    DSN=SYS1.MACLIB,DISP=SHR
//          DD    DSN=SYS1.AMODGEN,DISP=SHR
//SYSUT1    DD    DSN=&&SYSUT1,UNIT=VIO,SPACE=(1700,(600,100))
//SYSUT2    DD    DSN=&&SYSUT2,UNIT=VIO,SPACE=(1700,(300,50))
//SYSUT3    DD    DSN=&&SYSUT3,UNIT=VIO,SPACE=(1700,(300,50))
//SYSLIN    DD    DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),
//          DISP=(MOD,PASS)
//SYSPUNCH  DD    DUMMY
//SYSIN     DD    *
JEF10     TITLE  'TSO SUBMIT EXIT IKJEFF10              G.WICKS'
         SPACE 3
*                    ************************
*                    *        DOCUMENT      *
*                    ************************
         SPACE 3
* 1. THIS EXIT IS CALLED BY THE SUBMIT PROCESSOR DURING PROCESSING
*    OF EACH SUBMIT COMMAND ENTERED FROM A TSO TERMINAL.
*    BY DEFAULT IT IS CALLED FOR JOBCARDS ONLY.
*    HOWEVER THE EXIT HAS THE CAPABILITY TO SET A BYTE
*    TO INDICATE TO THE SUBMIT PROCESSOR THE STATEMENTS FOR WHICH IT
*    IS TO BE CALLED. THIS EXIT IS CALLED WHENEVER JOB, EXEC, DD AND
*    JES3 CARDS ARE DETECTED.
*
* 2. UPON THE FIRST CALL FOR EACH SUBMIT A TABLE IS BUILT OF JOBCARD
*    PARAMETERS AND THE USERID'S AUTHORITY LEVEL IS ESTABLISHED AND
*    THE BYPASS AUTHORITY AND VALID CLASS BITS ARE STORED.
*
* 3. THE EXIT TESTS FOR THE FOLLOWING CONDITIONS:
*    A. JOBNAME MUST EQUAL USERID+1 ALPHA OR NUMERIC CHARACTER
*       UNLESS AUTHORISED TO BYPASS THE JOBNAME CHECK.
*    B. IT LOOKS FOR A VALID TESTING CLASS.
*      1. IF A TEST CLASS IS FOUND IT ENSURES THE  USER IS
*         AUTHORISED TO USE IT.
*     11. IF AUTHORISED, IT ENSURES PERFORM=(13 OR 42-49),
*         IS PRESENT UNLESS CLASS EQUALS A OR V IN WHICH
*         CASE A PERFORM PARAMETER IS NOT ALLOWED.
*         ALSO IF NO CLASS PARAMETER IS PRESENT, A PERFORM
*         PARM IS NOT PERMITTED. IF THE USER IS NOT AUTHORISED
*         TO USE THIS CLASS, THE SUBMIT IS CANCELLED.
*    111. IF A NON TESTING CLASS IS CODED, THE J/A=LV AND
*         MSGCLASS=M PARAMETERS ARE REQUIRED. THIS ENSURES THAT
*         IT WILL APPEAR ON THE LOG EXAMINERS PRINTOUT.
*    C. PERFORMANCE GROUP WHERE REQUIRED MUST SPECIFY 13, OR BE IN
*       THE RANGE (42-49) UNLESS BYPASS AUTHORITY IS PRESENT.
*    D. UNLESS AUTHORISED THE MAXIMUM REGION SIZE ALLOWED IS 2048K.
*    E. THE PARAMETERS PRTY, DPRTY AND ADDRSPC=REAL MUST NOT BE
*       PRESENT UNLESS AUTHORISED.
*    F. BEFORE CONSTRUCTION OF THE PARAMETERS TABLE IS COMMENCED
*       A SEARCH IS CONDUCTED OF THE JOBCARD TO DETERMINE IF
*       PASSWORD=,USER=,OR TIME=1440 PARAMETERS ARE PRESENT.
*       IF A TIME=1440 PARAMETER IS PRESENT THE SUBMIT WILL BE
*       CANCELLED. IF EITHER OF THE OTHERS IS DETECTED, THE SUBMIT
*       WILL BE CANCELLED UNLESS AUTHORISED.
           EJECT
           SPACE 3
*    G. IF NO PASSWORD= OR USER= PARAMETERS ARE DETECTED ON
*       THE JOBCARD, (AS WILL BE THE MAJORITY OF CASES
*       BECAUSE MOST USERS ARE NOT AUTHORISED), THE EXIT
*       INSERTS THEM ON THE USER'S BEHALF. THE PASSWORD
*       PARAMETER IS INSERTED FOLLOWING THE FINAL COMMA
*       ON THE FIRST LINE OF THE JOB STATEMENT. THE USER
*       MUST ENSURE SUFFICIENT SPACE IS AVAILABLE OTHERWISE
*       THE SUBMIT WILL BE REJECTED WITH A MESSAGE.
*
*       THE USER PARAMETER IS INSERTED INTO COLUMNS 4 TO 15
*       OF THE SECOND LINE OF THE JOB STATEMENT AND ONCE
*       AGAIN, THE ABSENCE OF SUFFICIENT SPACE CAUSES THE
*       SUBMIT TO BE REJECTED. DETAILS FOR THESE FIELDS
*       ARE OBTAINED FROM UADS VIA THE LOGON EXIT IKJEFLD
*       AND THE PSCB. WHEN RACF IS ACTIVE THESE DETAILS ARE
*       EXTRACTED FROM THE ACEE CONTROL BLOCK BY THE EXIT.
*
*    H. THE EXIT CAN ALSO INSERT THE DETAILS FOR THE
*       PROGRAMMER NAME AND DISTRIBUTION DETAILS FIELD
*       OF THE JOB CARD IF REQUIRED. IT CHECKS BEYOND THE
*       JOB ACCOUNTING PARAMETER FOR A 4-BYTE FIELD OF
*       EXES, (XXXX), AND IF DETECTED IT STORES THE
*       FOLLOWING PARAMETERS, INSERTS THE PROGRAMMER NAME
*       AND DISTRIBUTION DETAILS FROM UADS, AND THEN
*       RESTORES THE REST OF THE CARD IMAGE IN THE
*       FOLLOWING COLUMNS.
           EJECT
           SPACE 3
* 4. A. TBAUTH IS THE AUTHORITIES TABLE.
*    B. DEFAUTH AND DEFCLASS ARE THE DEFAULT VALUES USED WHEN
*       THE USERID IS NOT REPRESENTED IN TBAUTH.THESE VALUES,
*       FROM WHEREVER THEY'RE FOUND, ARE STORED IN CHAUTH
*       AND CHCLASS AND IT'S THESE HALFWORDS WHICH ARE
*       REFERENCED FOR THE REQUIRED AUTHORITIES.
*    C. INDIVIDUAL BITS TURNED ON IN CHAUTH GIVE BYPASS AUTHORITY
*       FOR THE FOLLOWING CHECKS:
*
*       BIT 0 - JOBNAME
*           1 - PRTY
*           2 - DPRTY
*           3 - PERFORM (OTHER THAN 13)
*
*           4 - ADDRSPC=REAL
*           5 - REGION=2048K
*           6 - JES3 NET-WORKING
*           7 - LABEL=(N,BLP
*
*           8 - DISK DSN=JOBNAME
*           9 - PASSWORD AND USER
*           A -
*           B -
*
*           C -
*           D - MSGCLASS=M
*           E - JOB ACCT=LV
*           F - PROCESS DD STATEMENTS
*    D. THE BITS IN CHCLASS, WHEN TURNED ON, INDICATE THE USER IS
*       AUTHORISED TO SUBMIT JOBS TO THAT TEST CLASS. THE BITS ARE
*       NUMBERED 0 TO F AND THE CORRESPONDING CLASSES ARE AS FOLLOWS
*
*       BIT NO. 0 1 2 3  4 5 6 7  8 9 A B  C D E F
*       CLASS   A H I J  K L M N  O P Q R  S T U V
          EJECT
          SPACE 3
* 5. THE FOLLOWING TESTS ARE CONDUCTED ON THE EXEC CARD:
*    A. TIME=1440 AND PERFORM PARAMETERS ARE NOT PERMITTED UNDER
*       ANY CIRCUMSTANCE.
*    B. PRTY, DPRTY AND ADDRSPC=REAL MUST NOT BE SPECIFIED UNLESS
*       BYPASS AUTHORITY IS PRESENT.
*    C. UNLESS AUTHORISED, MAXIMUM REGION SIZE ALLOWED IS 2048K.
*
* 6. THE FOLLOWING TESTS ARE CONDUCTED ON ANY JES3 CARDS DETECTED
*    A. ON //*MAIN CARDS THE ONLY CLASS PERMITTED IS 'Q'.
*    B. UNLESS AUTHORISED, //*NET PARAMETER IS NOT PERMITTED.
*
* 7. UNLESS BYPASS AUTHORITY IS HELD, THE FOLLOWING CHECKS ARE MADE
*    ON EACH DD CARD:
*    A. ALLOCATIONS OF NEW DISK DATASETS ARE NOT PERMITTED ON
*      1. VOLUMES WITH PREFIXES OF SY, MVS, TSO OR IPO
*     11. (IF VOLUME NOT CODED) UNITNAMES PREFIXED WITH SYSLV,
*         SYSTS, SYSDA, OR 33.
*    111. UNITS ADDRESSED DIRECT BY CUU.
*    B. ALLOCATIONS OF VIO DATASETS MAY NOT EXCEED 50 CYLINDERS
*       1500 TRACKS AND SECONDARY ALLOCATIONS ARE NOT ALLOWED.
*    C. UNLESS AUTHORISED, DSNAMES OF NEW DATASET ALLOCATIONS MUST
*       HAVE THE USERID AS THE HIGH LEVEL QUALIFIER.
*    D. UNLESS AUTHORISED, 'BLP' OPTION MUST NOT BE SPECIFIED ON
*       LABEL PARAMETER.
*    E. OUTPUT CANNOT BE DIRECTED TO A JES3 INTERNAL READER.
*                   **** END OF DOCUMENT****
         EJECT
****************************************
*        PROGRAM INITIALISATION        *
****************************************
         SPACE 3
IKJEFF10 CSECT
         STM   R14,R12,12(R13)     SAVE REGISTERS
         LR    R12,R15             INIT BASE REG
         L     R11,0(,R1)          PARMLIST
         USING IKJEFF10,R12
         USING IKJEFF10+4096,R9
         LA    R9,4095(R12)
         LA    R9,1(R9)
         USING PARMLIST,R11
GETSTORE DS    0H
         SR    R5,R5               CLEAR A REGISTER
         CL    R5,CFMAIN           IS GETMAINED ADDRESS STORED
         BL    STORMAIN            ADDRESS GETMAINED AREA
         L     R0,GETSIZE          SIZE OF REQUIRED STORAGE
         GETMAIN R,LV=(0)          GET MAIN STORAGE
         MVI   0(R1),C' '          MOVE A BLANK IN
         MVC   1(256,R1),0(R1)     * PROPOGATE BLANK TO
         MVC   256(226,R1),0(R1)      CLEAR GETMAINED AREA
         ST    R1,CFMAIN           STORE ADDRESS OF GETMAINED AREA
*
         LR    R2,R1             * MAKE THE DSECT TEMPORARILY
         USING GETAREA,R2          * ADDRESSABLE
*
         MVI   SWRACF,X'00'        INITIALISE SWITCH
*
GETPSCB  DS    0H
         EXTRACT PSCBADDR,'S',FIELDS=(PSB),MF=(E,EXTLIST)
         L     R1,PSCBADDR         ADDRESS THE PSCB
         L     R1,52(R1)           LOAD ADDRESS OF UPT
         EJECT
************************************************************
*        FIND AND STORE PROGRAMMER NAME PARTICULARS        *
************************************************************
         SPACE 3
KEYOUT   DS    0H
         MODESET EXTKEY=ZERO       GET INTO KEY ZERO
         CLC   0(12,R1),=XL12'00'  ANYTHING STORED HERE  ?
         BE    GETPSCBA            NO - USE DEFAULTS
PROGNAME DS      0H
         SR      R4,R4                  CLEAR A REGISTER
         SR      R5,R5                  CLEAR A REGISTER
         ICM     R4,7,0(R1)             PICK UP FIRST THREE BYTES
         ICM     R5,14,3(R1)            PICK UP NEXT THREE
         LA      R6,8                   LOOP COUNTER
         LA      R8,CCPROGNM+7          ADDRESS END OF FIELD
LOOP1    DS      0H
         SRDL    R4,6                   DROP OFF SPARE BITS
         STC     R5,0(R8)               STORE THIS CHARACTER
         IC      R5,=X'00'              CLEAR THE LAST BYTE
         BCTR    R8,0                   DECRAMENT LOOP COUNTER
         BCT     R6,LOOP1               GET THE NEXT BYTE
         TR      CCPROGNM,CCTRTBLE      TRANSLATE INTO ENGLISH
DISTCODE DS      0H
         SR      R4,R4                  CLEAR A REGISTER
         SR      R5,R5                  CLEAR A REGISTER
         ICM     R4,7,6(R1)             PICK UP FIRST THREE BYTES
         ICM     R5,14,9(R1)            PICK UP NEXT THREE
         LA      R6,8                   LOOP COUNTER
         LA      R8,CCDISTCD+7          ADDRESS END OF FIELD
LOOP2    DS      0H
         SRDL    R4,6                   DROP OFF EXCESS BITS
         STC     R5,0(R8)               STORE THIS CHARACTER
         IC      R5,=X'00'              CLEAR THE LAST BYTE
         BCTR    R8,0                   DECRAMENT LOOP COUNTER
         BCT     R6,LOOP2               GET THE NEXT BYTE
         TR      CCDISTCD,CCTRTBLE      TRANSLATE INTO ENGLISH
*
KEYIN    DS    0H
         MODESET EXTKEY=SCHED      BACK TO KEY ONE
*
FINISH   DS      0H
         L       R3,CFUSER                  ADDRESS THE USERID
         MVC     CCPSWORD(8),0(R3)          STORE IT
         MVC     CCUSERID(6),0(R3)          STORE IT
         XC    CCPSWORD(6),CCUSERID  SCRAMBLE PASSWORD
         B       GETACEE                ALL DONE HERE
         EJECT
*******************************************
*        STORE DEFAULT PARTICULARS        *
*******************************************
         SPACE 3
GETPSCBA DS    0H
         MODESET EXTKEY=SCHED      ENSURE IN KEY ONE
         L     R3,CFUSER           LOCATE THE USERID
         MVC   CCPSWORD(8),0(R3)   STORE IT
         MVC   CCUSERID(6),0(R3)   STORE IT
         XC    CCPSWORD(6),CCUSERID  SCRAMBLE PASSWORD
         MVC   CCPROGNM(8),=C'REFER   '  PUT IN REFER
         MVC   CCDISTCD(8),0(R3)   STORE IT
         EJECT
*****************************************************
*        GET DETAILS FROM ACEE CONTROL BLOCK        *
*****************************************************
         SPACE 3
GETACEE  DS    0H                  FIND AND STORE THE ACEE DETAILS
         USING PSA,R0
         L     R1,PSAANEW          PICK UP ASCB NEW POINTER
         USING ASCB,R1
         L     R1,ASCBASXB         PICK UP ASXB POINTER
         DROP  R1
         USING ASXB,R1
         L     R1,ASXBSENV         PICK UP ACEE POINTER
         LTR   R1,R1               IS USER DEFINED TO RACF
         BZ    STORMAIN            NO
         DROP  R1
         USING ACEE,R1
         MVI   SWRACF,X'FF'        INDICATE RACF ACTIVE
         MVC   CCUSERID,ACEEUSRI   SAVE ACEE USERID
         L     R1,ACEEIEP          PICK UP ACEE PASSWORD POINTER
         DROP  R1
         MVC   CCPSWORD,4(R1)      STORE THIS PASSWORD
         DROP  R2
STORMAIN DS    0H
         L     R10,CFMAIN          INITIALISE BASE REGISTER FOR DSECT
         USING GETAREA,R10
         B     START
         EJECT
*********************************************
*        INSTRUCTIONS TO BE EXECUTED        *
*********************************************
         SPACE 3
*
EXMVCOUT MVC   SCDIMAGE(0),0(R5)   SHIFT THE CARD IMAGE TO STORAGE
*
EXMVCIN  MVC   15(0,R2),SCDIMAGE   RESTORE CARD IMAGE TO SECOND LINE
*
EXMVCINA MVC   0(0,R2),SCDIMAGE    RESTORE CARD IMAGE TO FIRST LINE
*
EXAUTLTH CLC   0(0,R3),0(R2)       TEST FOR EQUAL USERID
*
         EJECT
*********************************************
*        CONSTANTS AND STORAGE AREAS        *
*********************************************
         SPACE 3
*
         REGEQU
CX50     DC    0F'0',X'00000050'
CX1500   DC    0F'0',X'00001500'
*
CH3      DC    H'3'
CH4      DC    H'4'
CH6      DC    H'6'
CH8      DC    H'8'
CH10     DC    H'10'
CH240    DC    H'240'
MAXREG   DC    H'2048'
*
CCADDRSP DC    C'ADDRSPC'
CCAMPSND DC    C'&&'
CCBACKUP DC    C'BACKUP'
CCBLPLBL DC    C',BLP'
CCCYL    DC    C'CYL'
CCDD     DC    C' DD '
CCDDNAME DC    C'DDNAME='
CCDISP   DC    C'DISP'
CCDPRTY  DC    C'DPRTY'
CCDSNAME DC    C'DSN'
CCDUMMY  DC    C'DUMMY'
CCFLAG   DC    C'+ +'
CCINTRDR DC    C'INTRDR'
CCIPO    DC    C'IPO'
CCJOB    DC    C'JOB '
CCLABEL  DC    C'LABEL'
CCLASS   DC    C'CLASS='
CCLASS1  DC    C',CLASS'
CCLASS2  DC    C' CLASS'
CCLV     DC    C'LV'
CCMAIN   DC    C'MAIN '
CCMSGCLM DC    C'MSGCLASS=M'
CCMVS    DC    C'MVS'
CCNET    DC    C'NET '
CCNEW    DC    C'NEW'
CCONT    DC    C', '
CCPERF   DC    C'PERFORM'
CCPRIV   DC    C'PRIVATE'
CCPRTY   DC    C'PRTY'
CCPSWD   DC    C'PASSWORD='
CCREAL   DC    C'REAL'
CCREGION DC    C'REGION'
CCRETAIN DC    C',RETAIN'
CCSER    DC    C'SER='
CCSPACE  DC    C'SPACE'
CCSY     DC    C'SY'
CCSYS    DC    C'SYSTEM='
CCSYSDA  DC    C'SYSDA'
CCSYSLV  DC    C'SYSLV'
CCSYSOUT DC    C'SYSOUT='
CCSYSTS  DC    C'SYSTS'
CCTEMP   DC    C'TEMP'
CCTIME   DC    C'TIME=1440'
CCTIMEX  DC    C'TIME=(1440'
CCTRK    DC    C'TRK'
CCTSO    DC    C'TSO'
CCTSTPK  DC    C'TSTPK'
CCUNIT   DC    C'UNIT'
CCUSER   DC    C'USER='
CCVIO    DC    C'VIO'
CCVOL    DC    C'VOL'
CC13     DC    C'13'
CC33     DC    C'33'
CC42     DC    C'42'
CC49     DC    C'49'
*
GETSIZE  DC    A(ENDAREA-GETAREA)     SIZE OF MAIN STORAGE REQUIRED
*
CCTRTBLE DS      0CL256
         DC      C'    .   *   -   '
         DC      C'/   A   B   C   '
         DC      C'D   E   F   G   '
         DC      C'H   I   J   K   '
         DC      C'L   M   N   O   '
         DC      C'P   Q   R   S   '
         DC      C'T   U   V   W   '
         DC      C'X   Y   Z   0   '
         DC      C'1   2   3   4   '
         DC      C'5   6   7   8   '
         DC      C'9               '
         DC      80C' '
         EJECT
******************************
*        LOG MESSAGES        *
******************************
         SPACE 3
MSG1     DC    Y(L'MSG1A+2)
MSG1A    DC    C'SUBMIT REJECTED - JOB ACCOUNTING FOR LIVE WORK MUST BEX
               GIN WITH LV'
MSG2     DC    Y(L'MSG2A+2)
MSG2A    DC    C'SUBMIT REJECTED - MSGCLASS FOR LIVE WORK MUST BE M'
MSG3     DC    Y(L'MSG3A+2)
MSG3A    DC    C'SUBMIT REJECTED - JOBNAME MUST BE USERID + 1 ALPHA OR X
               NUMERIC CHARACTER'
MSG4     DC    Y(L'MSG4A+2)
MSG4A    DC    C'SUBMIT REJECTED - ILLEGAL PARAMETER ADDRSPC=REAL'
MSG5     DC    Y(L'MSG5A+2)
MSG5A    DC    C'SUBMIT REJECTED - UNAUTHORISED CLASS'
MSG6     DC    Y(L'MSG6A+2)
MSG6A    DC    C'SUBMIT REJECTED - ILLEGAL PARAMETER PERFORM'
MSG7     DC    Y(L'MSG7A+2)
MSG7A    DC    C'SUBMIT REJECTED - ILLEGAL PARAMETER PRTY'
MSG8     DC    Y(L'MSG8A+2)
MSG8A    DC    C'SUBMIT REJECTED - ILLEGAL REGION SIZE'
MSG9     DC    Y(L'MSG9A+2)
MSG9A    DC    C'SUBMIT REJECTED - JES3 NETWORKS NOT ALLOWED'
MSG10    DC    Y(L'MSG10A+2)
MSG10A   DC    C'SUBMIT REJECTED - ILLEGAL PARAMETER(S) ON JES3 CARD'
MSG11    DC    Y(L'MSG11A+2)
MSG11A   DC    C'SUBMIT REJECTED - ILLEGAL VOLUME FOR NEW DATASET '
MSG12    DC    Y(L'MSG12A+2)
MSG12A   DC    C'SUBMIT REJECTED - VIO SPACE EXCEEDS 50 CYLINDERS'
MSG13    DC    Y(L'MSG13A+2)
MSG13A   DC    C'SUBMIT REJECTED - THIS UNITNAME IS ILLEGAL FOR A NEW DX
               ATASET WHEN NO VOLUME PARAMETER IS PRESENT'
MSG14    DC    Y(L'MSG14A+2)
MSG14A   DC    C'SUBMIT REJECTED - ILLEGAL LABEL PARAMETER'
MSG15    DC    Y(L'MSG15A+2)
MSG15A   DC    C'SUBMIT REJECTED - NO PERFORM PARAMETER'
MSG16    DC    Y(L'MSG16A+2)
MSG16A   DC    C'SUBMIT REJECTED - ILLEGAL CLASS ON JES3 CARD'
MSG17    DC    Y(L'MSG17A+2)
MSG17A   DC    C'SUBMIT REJECTED - MSGCLASS=M NOT ALLOWED'
MSG18    DC    Y(L'MSG18A+2)
MSG18A   DC    C'SUBMIT REJECTED - JOB ACCOUNTING=LV NOT ALLOWED'
MSG19    DC    Y(L'MSG19A+2)
MSG19A   DC    C'SUBMIT REJECTED - ILLEGAL PERFORMANCE GROUP'
MSG20    DC    Y(L'MSG20A+2)
MSG20A   DC    C'SUBMIT REJECTED - ILLEGAL PARAMETER DPRTY'
MSG21    DC    Y(L'MSG21A+2)
MSG21A   DC    C'SUBMIT REJECTED - NEW DATASET NAMES MUST HAVE YOUR USEX
               RID AS THE HIGH LEVEL QUALIFIER'
MSG22    DC    Y(L'MSG22A+2)
MSG22A   DC    C'SUBMIT REJECTED - COLUMNS 44-71 OF THE FIRST LINE OF TX
               HE JOB STATEMENT MUST CONTAIN BLANKS'
MSG23    DC    Y(L'MSG23A+2)
MSG23A   DC    C'SUBMIT REJECTED - USER OR PASSWORD PARAMETER DETECTED X
               ON JOBCARD'
MSG24    DC    Y(L'MSG24A+2)
MSG24A   DC    C'SUBMIT REJECTED - DUMMY PROGRAMMER NAME MUST BEGIN BY X
               CARD COLUMN 22'
MSG25    DC    Y(L'MSG25A+2)
MSG25A   DC    C'SUBMIT REJECTED - TIME=1440 PARAMETER NOT ALLOWED'
MSG26    DC    Y(L'MSG26A+2)
MSG26A   DC    C'SUBMIT REJECTED - ILLEGAL INTRDR SUB-PARAMETER ON SYSOX
               UT DD STATEMENT'
MSG27    DC    Y(L'MSG27A+2)
MSG27A   DC    C'SUBMIT REJECTED - DIRECT UNIT ASSIGNMENTS ARE NOT PERMX
               ITTED'
MSG28    DC    Y(L'MSG28A+2)
MSG28A   DC    C'SUBMIT REJECTED - SECOND LINE OF JOB STATEMENT MUST BEX
               GIN IN CARD COLUMN 16'
MSG29    DC    Y(L'MSG29A+2)
MSG29A   DC    C'SUBMIT REJECTED - VIO SECONDARY ALLOCATIONS ARE NOT ALX
               LOWED'
*
MSGERR   DC    C'WARNING-ERROR DETECTED IN JCL-CONVERTER/INTERPRETER SHX
               OULD REJECT'
*
         EJECT
         SPACE 3
** THE FOLLOWING TABLE IS USED TO ESTABLISH THE USERS AUTHORITY
**
         DS    0H
TBAUTH   DS    0CL11
         DC    YL2((ENDAUTH-TBAUTH-2)/L'TBAUTH)
         DC    CL6'SM'                        SYSTEM MAINT
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'1000111111000001'               AUTHORITY
         DC    B'1000000000111111'               VALID CLASS
         DC    CL6'SH'                        SCHEDULER
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'1000111110000001'               AUTHORITY
         DC    B'1000000000110111'               VALID CLASS
         DC    CL6'OP'                        OTS AND OSP
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'1000111110000001'               AUTHORITY
         DC    B'1000000001111111'               VALID CLASS
         DC    CL6'PS'                        PROGRAM CONTROL SECTION
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'0000000110000000'               AUTHORITY
         DC    B'1000000000110110'               VALID CLASS
         DC    CL6'OL0104'                    ONLINE USER OL0104
         DC    X'06'                             LENGTH
*                0123456789ABCDEF
         DC    B'0000000100000001'               AUTHORITY
         DC    B'1000000000110110'               VALID CLASS
         DC    CL6'XX'                        SPARE PATCH
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'0000000000000000'               AUTHORITY
         DC    B'0000000000000000'               VALID CLASS
         DC    CL6'XX'                        SPARE PATCH
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'0000000000000000'               AUTHORITY
         DC    B'0000000000000000'               VALID CLASS
         DC    CL6'XX'                        SPARE PATCH
         DC    X'02'                             LENGTH
*                0123456789ABCDEF
         DC    B'0000000000000000'               AUTHORITY
         DC    B'0000000000000000'               VALID CLASS
ENDAUTH  EQU   *
         EJECT
         SPACE 3
**THE FOLLOWING REPRESENTS THE DEFAULTS TO BE USED IF THE
**       USERID IS NOT REPRESENTED IN TBAUTH
         SPACE 3
*
*                0123456789ABCDEF                STORAGE BITS
DEFAUTH  DC    B'0000000100000000'               DEFAULT AUTHORITY
DEFCLASS DC    B'1000000000110110'               DEFAULT VALID CLASS
         SPACE 5
**THE FOLLOWING REPRESENTS A LIST OF THE VALID TEST CLASSES
**     IN USE IN THE SYSTEM
         SPACE 3
*
TESTCLAS DC    C'AHIJKLMNOPQRSTUV'               VALID TEST CLASSES
         SPACE 2
* THIS TABLE CONTAINS USERS DEFINED TO RACF.  EACH ENTRY IS TWO BYTES
* REPRESENTING THE TWO HIGH ORDER BYTES OF THE USERID.
TBUSERS  DC    CL40'SMMX'
*
         EJECT
*************************************************
*        PARAMETER LIST DSECT DEFINITION        *
*************************************************
         SPACE 3
PARMLIST DSECT
CFCARD   DS    F                   ADDRESS OF CURRENT STATEMENT
CFMSG    DS    F                   MESSAGE ADDRESS
CFREPLY  DS    F                   REPLY ADDRESS
CFUSER   DS    F                   ADDRESS OF USERID CONSTANT
CFCNTL   DS    F                   ADDRESS OF CONTROL SWITCHES
CFMAIN   DS    F                   STORED ADDRESS OF GETMAINED STORAGE
CFACCT   DS    F                   ADDRESS OF LOGON ACCOUNTING INFO
CFACCTL  DS    F                   ADDRESS OF H/WORD LENGTH OF ACCT
         EJECT
***********************************************
*        LABEL THE GETMAINED AREA DSECT       *
***********************************************
         SPACE 3
GETAREA  DSECT
CFUSERWD DS    F                    USER WORD SEE BELOW
CFTABLE  DS    F                    ADDRESS OF PARAMETERS TABLE
CHAUTH   DS    H                    BYPASS AUTHORITY FOR CHECKS
CHCLASS  DS    H                    VALID CLASS TABLE
CFPARAMS DS    CL360                TABLE FOR JOBCARD PARAMETERS
CCPSWORD DS    CL8                  USERS PASSWORD (ACEE OR UADS)
CCUSERID DS    CL6                  LOGON USERID (ACEE OR UADS)
CCPROGNM DS    CL8                  PROGRAMMERS NAME (FROM UADS)
CCDISTCD DS    CL8                  DISTRIBUTION DETAILS (FROM UADS)
SCDIMAGE DS    CL80                 CARD IMAGE TEMPORARY STORAGE
EXTLIST  EXTRACT MF=L                 *DEFINE THE WORD FOR
PSCBADDR DS    F                        *PSCB ADDRESS
SWRACF   DS    XL1                 USED TO INDICATE RACF ACTIVE
ENDAREA  EQU   *
* USER WORD IS USED AS FOLLOWS
*    BYTE 0        SWITCHES 80=PERFORM
*                           40=DSNAME
*                           20=SYSOUT ERROR
*                           10=DIRECT UNIT ASSIGN
*                           08=JOBCARD FIRST LINE
*                           04=JOBCARD SECOND LINE
*                           02=SECONDARY SPACE ALLOCATION
*                           01=PASSWORD PRESENT
*    BYTE 1        SWITCHES 80=REJECT
*                           40=LABEL
*                           20=NEW
*                           10=VOL
*                           08=UNIT
*                           04=SPACE
*                           02=VIO
*                           01=NO VOLUME
*    BYTE 2-3      CURRENT STATEMENT AS DEFINED IN CFCNTL
         EJECT
IKJEFF10 CSECT
************************************************************
*        DETERMINE PROCESSING FROM CONTROL SWITCHES        *
************************************************************
         SPACE 3
*
START    DS    0H
         TM    CFUSERWD+1,X'FF'    ANY SWITCHES SET ?
         BZ    BEGIN               NO - NO PROBLEMS YET
         TM    CFUSERWD+1,X'80'    IS A CANCEL REQUIRED ?
         BNO   BEGIN               NO - NOT INTERESTED IN OTHERS
         TM    CFUSERWD+2,X'80'    IS ERROR ON JOB CARD
         BO    RETCDE16            YES   CANCEL SUBMIT
         L     R2,CFCARD           ADDRESS CARD AREA
         MVC   2(3,R2),CCFLAG      FLAG AS BAD CARD  C/I WILL REJECT
         MVI   CFUSERWD,X'00'      REMOVE ALL FLAGS
         MVI   CFUSERWD+1,X'00'       FOR NEXT CARD
         B     END
*
RETCDE16 DS    0H
         LA    R15,16              SET RETURN CODE FOR CANCEL OF SUBMIT
         B     BADEND              EXIT NOW
         EJECT
****************************************************
*        ESTABLISH WHY THIS EXIT WAS CALLED        *
****************************************************
         SPACE 3
*
BEGIN    DS    0H
         L     R2,CFCNTL           ADDRESS CONTROL SWITCHES
         TM    2(R2),X'01'         IS THIS A CONTINUATION ?
         BO    CONTINUE            YES
         MVC   CFUSERWD+2(2),2(R2) SAVE THIS CARD TYPE
         TM    2(R2),X'80'         IS THIS A JOB CARD ?
         BO    JOBCARD             YES
         TM    2(R2),X'40'         IS THIS AN EXEC STATEMENT ?
         BO    EXECCARD            YES
         TM    2(R2),X'20'         IS THIS A  DD STATEMENT ?
         BO    DDCARD              YES
         TM    3(R2),X'40'         IS THIS A JES3 CONTROL CARD ?
         BO    JES3CARD            YES
         B     END                 THIS CARD NOT REQUIRED
*
CONTINUE DS    0H
         TM    CFUSERWD+2,X'80'    IS THIS JOB CONTINUATION ?
         BO    CARDSCAN            YES
         TM    CFUSERWD+2,X'40'    IS THIS AN EXEC CONTINUATION ?
         BO    EXECCONT            YES
         TM    CFUSERWD+2,X'20'    IS THIS A DD CONTINUATION ?
         BO    DDCONT              YES
         TM    CFUSERWD+3,X'40'    IS THIS A JES3 CONTINUATION ?
         BO    JES3CONT            YES
         B     END                 NO ACTION REQUIRED
         EJECT
********************************************************************
*        ESTABLISH USERS BYPASS AUTHORITY AND VALID CLASSES        *
********************************************************************
         SPACE 3
*
JOBCARD  DS    0H
         OI    CFUSERWD,X'0C'      SET UP JOB STATEMENT FLAGS
*
         LA    R5,CFPARAMS         PICK UP ADDRESS OF PARM TABLE
         ST    R5,CFTABLE          AND STORE IT IN CFTABLE
*
         L     R2,CFUSER           ADDRESS THE USERID CONSTANT
         CLC   0(6,R2),CCBACKUP    IS THIS USERID BACKUP ?
         BNE   USERAUTH            NO - WHAT'S HIS AUTHORITY LEVEL
         L     R2,CFCNTL           ADDRESS THE CONTROL BYTE
         MVI   0(R2),X'00'         TURN OFF ALL RECALL SWITCHES
         B     END                 EXIT NOW - NO CHECKING REQUIRED
*
USERAUTH DS    0H
         LH    R4,TBAUTH           PICK UP TABLE LENGTH
         LA    R3,TBAUTH+2         BUMP PAST HALFWORD TABLE LENGTH
         L     R2,CFUSER           ADDRESS THE USERID
*
TESTAUTH DS    0H
         SR    R6,R6
         IC    R6,6(R3)            LENGTH OF ENTRY
         BCTR  R6,0                MACHINE LENGTH
         EX    R6,EXAUTLTH         TEST EQUAL USERID
         BE    STORVALS            GOT IT - EXIT LOOP
         LA    R3,11(0,R3)         INCREMENT TABLE ADDRESS
         BCT   R4,TESTAUTH         HAVE ANOTHER LOOK
         MVC   CHAUTH(4),DEFAUTH   NO EQUAL USERID - USE DEFAULTS
         B     JOBNAME             CHECK FOR VALID JOBNAME
*
STORVALS DS    0H
         MVC   CHAUTH(4),7(R3)     STORE CONTROL VALUES
         EJECT
***********************************************************
*        CHECK THAT JOBNAME IS USERID + 1 CHARACTER       *
***********************************************************
         SPACE 3
*
JOBNAME  DS    0H
         L     R3,CFCARD           ADDRESS THE JOBCARD
         L     R2,CFUSER           ADDRESS THE USERID
         CLC   2(6,R3),0(R2)       IS JOBNAME=USERID FOR 6  ?
         BE    A5E1                YES - LOOK AT NEXT CHARACTER
         BAL   R6,JOBCHECK         NO - MAKE SURE HE'S AUTHORISED
         B     SETCTLSW            PROBABLY LIVE WORK - CHECK PARMS
*
A5E1     DS    0H                  TESTING - DO FULL JOBNAME CHECK
         CLI   8(R3),C' '          IS 7TH CHARACTER BLANK  ?
         BNE   A5E1A               NO - IS IT LEGAL  ?
         BAL   R6,JOBCHECK         YES - MAKE SURE HE'S AUTHORISED
         B     A5E2                FINISH JOBNAME CHECK
*
A5E1A    DS    0H                  MAKE SURE ITS A LEGAL CHARACTER
         CLI   8(R3),X'C1'         IS 7TH CHARACTER AN 'A'  ?
         BL    ERROR3              ITS ILLEGAL - CANCEL
         CLI   8(R3),X'F9'         IS IT A '9'  ?
         BH    ERROR3              ITS ILLEGAL - CANCEL
*
A5E2     DS    0H
         CLI   9(R3),C' '          DOES BLANK FOLLOW JOBNAME
         BNE   ERROR3              NO - TOO MANY CHARACTERS
         EJECT
*******************************************
*        SET CONTROL SWITCHES             *
*******************************************
         SPACE 3
*
SETCTLSW DS    0H
         L     R2,CFCNTL           ADDRESS CONTROL SWITCHES
         OI    0(R2),X'E2'         REQUEST JOB,EXEC,DD & JES3 STMTS.
         SPACE 3
************************************************
*        SCAN CARD FOR ILLEGAL PARAMETERS      *
************************************************
         SPACE 3
*
CARDSCAN DS    0H
         L     R2,CFCARD           ADDRESS THE CARD
         LA    R3,70               SET A COUNTER
         LA    R7,CARDSCNB         SAVE RETURN ADDRESS
*
CARDSCNA DS    0H
         CLC   CCPSWD,0(R2)        IS THIS A PASSWORD PARAMETER
         BE    PSWDPARM            CHECK IT
         CLC   CCUSER,0(R2)        IS THIS A USER PARAMETER
         BE    USERPARM            CHECK IT
         CLC   CCTIME,0(R2)        IS THIS TIME=1440 PARAMETER
         BE    ERROR25             REJECT IT
         CLC   CCTIMEX,0(R2)       IS THIS TIME=(1440 PARAMETER
         BE    ERROR25             REJECT IT
*
CARDSCNB DS    0H
         CLC   0(2,R2),CCONT       IS THIS CARD CONTINUED
         BE    USERINST            THIS CARDS CLEAN - STOP LOOKING
         LA    R2,1(R2)            BUMP POINTER
         BCT   R3,CARDSCNA         KEEP LOOKING
         EJECT
*****************************************************
*        INSERT USER PARAMETER IN JOB STATEMENT     *
*****************************************************
         SPACE 3
*
USERINST DS    0H
         TM    CFUSERWD,X'08'      IS THIS FIRST LINE JOB STATEMENT
         BO    FINDEXES            YES - LOOK FOR DUMMY PGM NAME FIELD
         TM    CFUSERWD,X'04'      IS THIS SECOND LINE JOB STATEMENT
         BNO   JOBCONT             NO - ALL THE NASTY STUFF IS DONE
*
         L     R2,CFCARD           ADDRESS THE CARD
         CLI   14(R2),C' '         HAS HE LEFT ENOUGH SPACE ?
         BE    USERINSA            YES - MOVE IT IN
*
*                                  NO - CAN THE LINE BE MOVED A BIT ?
         LA    R2,2(R2)            BUMP PAST //
         LA    R3,69               SET A LIMIT
         BAL   R6,FINDNBL          FIND THE NEXT NON BLANK
*
         LR    R5,R2               SAVE ADDRESS OF THE FIRST CHARACTER
         LR    R4,R3               SAVE THE COLUMN COUNT
         BAL   R6,FINDBLNK         FIND THE NEXT BLANK
*
         SR    R4,R3               FIELD LENGTH NOW IN R4
         LR    R3,R4               SAVE THIS FIELD LENGTH
         A     R3,=F'16'           TRY THE CARD FOR LENGTH
         C     R3,=F'71'           IS IT LONGER THAN 71 BYTES ?
         BH    ERROR28             YES - IT WONT FIT - CANCEL
*
         BCTR  R4,0                DECRAMENT R4
         EX    R4,EXMVCOUT         SHIFT THE LINE TO STORAGE
         L     R2,CFCARD           RE-ADDRESS THE CARD
         MVC   3(68,R2),2(R2)      BLANK OUT THE CARD
         EX    R4,EXMVCIN          SHIFT THE LINE BACK TO THE CARD
*
USERINSA DS    0H
         CLI   SWRACF,X'FF'        IS RACF ACTIVE
         BNE   M1A4                NO
         LA    R6,TBUSERS          LOAD TABLE
M1A3     DS    0H
         CLC   CCUSERID(2),0(R6)   IS USER IN TABLE
         BE    M1A4                YES - CONTINUE
         CLC   0(2,R6),=C'  '      IS IT END OF ENTRIES
         BE    M1A5                YES - DONT CODE USER
         LA    R6,2(R6)            ADDRESS NEXT ENTRY
         B     M1A3                KEEP CHECKING
*
M1A4     DS    0H
         MVC   3(5,R2),CCUSER      MOVE THE USER CONSTANT IN
         MVC   8(6,R2),CCUSERID    MOVE IN THE USERID
         MVI   14(R2),C','         INSERT A COMMA
M1A5     DS    0H
         NI    CFUSERWD,X'FF'-X'04' RESET FLAG FOR SECOND LINE OF
*                                       JOBCARD  STATEMENT
         B     JOBCONT             CONTINUE BUILDING PARAMETERS TABLE
         EJECT
************************************************
*        SCAN THE PROGRAMMER NAME FIELD        *
************************************************
         SPACE 3
*
FINDEXES DS    0H
         LA    R3,71               SET A LIMIT
         L     R2,CFCARD           ADDRESS THE CARD
*
         BAL   R6,FINDCOM          SKIP TO END OF JOB ACCOUNTING
         LA    R2,1(R2)            BUMP PAST COMMA
         BCTR  R3,0                DECREMENT THE COUNTER
         CLC   0(4,R2),=C'XXXX'    IS THERE DUMMY PROGRAMMER NAME
         BNE   PWINPUT             NO - JUST INSERT THE PASSWORD
*
         CH    R3,=H'50'           DOES PROG NAME BEGIN BY COL 22
         BL    ERROR24             NOT ENOUGH ROOM FOR LOGON DETAILS
*
         LR    R8,R2               SAVE THIS POINTER
         LR    R7,R3               SAVE COLUMN COUNT
         BAL   R6,FINDCOM          FIND THE NEXT COMMA
*
         LA    R2,1(R2)            BUMP PAST COMMA
         BCTR  R3,0                ADJUST COLUMN COUNT
*
         LR    R5,R2               SAVE ADDRESS OF THIS CHARACTER
         LR    R4,R3               SAVE THE COLUMN COUNT
         BAL   R6,FINDBLNK         LOCATE THE NEXT BLANK
*
         SR    R4,R3               R4 NOW CONTAINS FIELD LENGTH
         LTR   R4,R4               ANY VALUE HERE  ?
         BZ    FINDEXSA            NO - DONT NEED TO STORE IMAGE
*
         BCTR  R4,0                SET UP FOR EXECUTE
         EX    R4,EXMVCOUT         TEMPORARILY RELOCATE REST OF IMAGE
         EJECT
*******************************************
*        INSERT LOGON DATA INTO JOBCARD   *
*******************************************
         SPACE 3
*
FINDEXSA DS    0H
         LR    R2,R8               RESTORE REGISTER 2
         LR    R3,R7               RESTORE REGISTER 3
         MVI   0(R2),C''''         INSERT OPENING APOSTROPHE
         MVC   1(8,R2),CCPROGNM    MOVE IN PROGRAMMER NAME
         MVI   9(R2),C'$'          INSTALL THE SEPARATOR
         MVC   10(8,R2),CCDISTCD   MOVE IN DISTRIBUTION CODE
         MVI   18(R2),C''''        INSERT CLOSING APOSTROPHE
         MVI   19(R2),C','         INSERT A COMMA
*
         BAL   R6,FINDCOM          INCREMENT PAST PROGRAMMER NAME
         LA    R2,1(R2)            BUMP PAST COMMA
         BCTR  R3,0                DECREMENT COUNTER
         LTR   R4,R4               IS ANY IMAGE STORED  ?
         BZ    PWINPUT             NO - BYPASS RESTORE STEP
         EX    R4,EXMVCINA         RESTORE THE CARD IMAGE
         EJECT
**********************************************
*        INSERT PASSWORD INTO JOBCARD        *
**********************************************
         SPACE 3
*
PWINPUT  DS    0H
         BCTR  R2,0                STEP BACK A BYTE
         AH    R3,=H'1'            ADJUST COLUMN COUNTER
         TM    CFUSERWD,X'01'      IS PASSWORD ALREADY CODED  ?
         BO    SWITCHOF            YES - BYPASS THIS STEP
*
         L     R4,CFCARD           RE-ADDRESS THE CARD
         CLI   43(R4),C' '         HAS HE ALLOWED ROOM FOR P/W
         BNE   ERROR22             NO - HE'LL HAVE TO FIX IT
         CLI   SWRACF,X'FF'        IS ARCF ACTIVE
         BNE   M1A2                NO
*
         LA    R6,TBUSERS          LOAD TABLE
M1A1     DS    0H
         CLC   CCUSERID(2),0(R6)   IS USER IN TABLE
         BE    M1A2                YES - CONTINUE
         CLC   0(2,R6),=C'  '      IS IT END OF ENTRIES
         BE    SWITCHOF            YES - DONT CODE PASSWORD
         LA    R6,2(R6)            ADDRESS NEXT ENTRY
         B     M1A1                KEEP CHECKING
*
M1A2     DS    0H
         BAL   R6,FINDCONT         FIND THE END OF THE CODE
         LA    R2,1(R2)            BUMP PAST THE COMMA
         BCTR  R3,0                DECREMENT THE COUNTER
*
         MVC   0(9,R2),CCPSWD      SHIFT IN THE PASSWORD CONSTANT
         MVC   9(8,R2),CCPSWORD    PLACE USERS PASSWORD IN JOBCARD
         XC    9(6,R2),CCUSERID    UNSCRAMBLE PASSWORD
         BAL   R6,FINDBLNK         UPDATE THE POINTER TO NEXT BLANK
         MVI   0(R2),C','          INSERT THE COMMA
*
SWITCHOF DS    0H
         NI    CFUSERWD,X'FF'-X'01' RESET PASSWORD PRESENT FLAG
         NI    CFUSERWD,X'FF'-X'08' RESET FLAG FOR FIRST LINE OF
*                                        JOBCARD STATEMENT
BLDTABLE DS    0H
         L     R2,CFCARD           ADDRESS THE CARD
         LA    R2,2(0,R2)          BUMP PAST //
         LA    R3,70               DEFINE CARD LENGTH
         BAL   R6,FINDJOB          LOCATE THE JOB CONSTANT
         LA    R2,4(0,R2)          BUMP PAST JOB CONSTANT
         SH    R3,=H'4'            ADJUST COLUMN COUNTER
         B     CONTABLE            BUILD THE TABLE
         EJECT
************************************************
*        BUILD JOBCARD PARAMETERS TABLE        *
************************************************
         SPACE 3
*
JOBCONT  DS    0H
         L     R2,CFCARD           ADDRESS THE CARD
         LA    R2,2(0,R2)          BUMP PAST //
         LA    R3,70               INIT COLUMN COUNTER
*
CONTABLE DS    0H
         L     R5,CFTABLE          ADDRESS THE TABLE
*
LOADINDX DS    0H
         LH    R4,=H'20'           INITIALIZE PARAMETER LENGTH CNTR
*
FINDCHAR DS    0H
         BAL   R6,FINDNBL1         LOCATE NEXT NON-BLANK
         CLI   0(R2),C','          IS IT A COMMA
         BNE   WRITETBL            NO - STORE THE CHARACTER
         LA    R5,0(R4,R5)         INCREMENT TO END OF 20 BYTES
         CLC   0(2,R2),CCONT       IS THIS CARD CONTINUED
         BE    STORADDR            STORE THE TABLE POINTER
         LA    R2,1(0,R2)          BUMP PAST COMMA
         BCTR  R3,0                REDUCE COLUMN COUNT
         B     LOADINDX            RE-INIT PARM LENGTH COUNTER
*
STORADDR DS    0H
         ST    R5,CFTABLE          SAVE THE TABLE POINTER
         B     END                 WAIT FOR CONTINUATION CARD
*
WRITETBL DS    0H
         MVC   0(1,R5),0(R2)       STORE THIS CHARACTER
         LA    R5,1(0,R5)          INCREMENT TABLE ADDRESS
         LA    R2,1(0,R2)          BUMP POINTER
         BCTR  R4,0                BUMP LENGTH CONTROLLER
         BCT   R3,FINDCHAR         GET NEXT CHARACTER
         EJECT
**************************************************************
*        PROCESS JOBCARD - LOCATE THE CLASS PARAMETER        *
**************************************************************
         SPACE 3
*
A5B3     DS    0H
         LA    R2,CFPARAMS         ADDRESS THE TABLE
         LA    R3,18               TABLE BOUNDARY
*
A5B3A    DS    0H
         CLC   0(6,R2),CCLASS      FIND THE CLASS= PARAMETER
         BE    A5C3                GOT IT - IS IT VALID TEST CLASS
         LA    R2,20(0,R2)         INCREMENT POINTER
         BCT   R3,A5B3A            KEEP LOOKING
*
         OI    CFUSERWD,X'80'      TURN ON CANCEL SWITCH
         BAL   R6,A6C3             NO CLASS PARM - ENSURE NO PERFORM
         NI    CFUSERWD,X'00'      TURN OFF CANCEL SWITCH
         B     A8B2                SO FAR SO GOOD
*
A5C3     DS    0H
         LA    R4,TESTCLAS         ADDRESS VALID TEST CLASSES
         LA    R3,16               FIELD LENGTH
*
A5C3A    DS    0H
         CLC   6(1,R2),0(R4)       IS IT A VALID TEST CLASS
         BE    CLASSID             YES IS HE ALLOWED TO USE IT
         LA    R4,1(0,R4)          BUMP POINTER
         BCT   R3,A5C3A            KEEP LOOKING
         B     A5C4                NOT TEST - CHECK LIVE WORK PARMS
         EJECT
*************************************************************
*        ENSURE LIVE WORK PARAMETERS CODED CORRECTLY        *
*************************************************************
         SPACE 3
*
A5C4     DS    0H                  JOB ACCT MUST BEGIN WITH LV
         LA    R2,CFPARAMS         ADDRESS THE TABLE
         CLI   0(R2),C'('          IS THERE AN OPENING BRACKET
         BNE   A5C4A               NO BRACKET
         LA    R2,1(0,R2)          BUMP PAST BRACKET
*
A5C4A    DS    0H
         CLC   CCLV,0(R2)          DOES JOB ACCT=LV
         BNE   ERROR1              NO REJECT THIS SUBMIT
*
A5C5     DS    0H
         LA    R4,CFPARAMS         ADDRESS THE TABLE
         LA    R5,18               FIELD LENGTH
*
A5C5A    DS    0H
         CLC   0(10,R4),CCMSGCLM   IS THERE MSGCLASS=M PARAMETER
         BE    A5C5B               YES - THIS EXIT IS OVER
         LA    R4,20(0,R4)         BUMP POINTER
         BCT   R5,A5C5A            KEEP LOOKING
         B     ERROR2              NO MSGCLASS=M PARAMETER
*
A5C5B    DS    0H
         L     R2,CFCNTL           ADDRESS THE CONTROL BYTE
         MVI   0(R2),X'00'         TURN OFF RECALL SWITCHES
         B     END                 LIVE WORK - NO FURTHER CHECKING
         EJECT
*****************************************
*        IDENTIFY THE TEST CLASS        *
*****************************************
         SPACE 3
*
CLASSID  DS    0H
         LA    R7,A6D2            SAVE RETURN ADDRESS
*
         CLI   6(R2),C'A'         IDENTIFY CLASS
         BE    CLASSA
         CLI   6(R2),C'H'         IDENTIFY CLASS
         BE    CLASSH
         CLI   6(R2),C'I'         IDENTIFY CLASS
         BE    CLASSI
         CLI   6(R2),C'J'         IDENTIFY CLASS
         BE    CLASSJ
         CLI   6(R2),C'K'         IDENTIFY CLASS
         BE    CLASSK
         CLI   6(R2),C'L'         IDENTIFY CLASS
         BE    CLASSL
         CLI   6(R2),C'M'         IDENTIFY CLASS
         BE    CLASSM
         CLI   6(R2),C'N'         IDENTIFY CLASS
         BE    CLASSN
         CLI   6(R2),C'O'         IDENTIFY CLASS
         BE    CLASSO
         CLI   6(R2),C'P'         IDENTIFY CLASS
         BE    CLASSP
         CLI   6(R2),C'Q'         IDENTIFY CLASS
         BE    CLASSQ
         CLI   6(R2),C'R'         IDENTIFY CLASS
         BE    CLASSR
         CLI   6(R2),C'S'         IDENTIFY CLASS
         BE    CLASSS
         CLI   6(R2),C'T'         IDENTIFY CLASS
         BE    CLASST
         CLI   6(R2),C'U'         IDENTIFY CLASS
         BE    CLASSU
         B     CLASSV
         EJECT
********************************************************
*        TEST JOBCLASS AND PERFORM COMBINATIONS        *
********************************************************
         SPACE 3
*
A6D2     DS    0H
         OI    CFUSERWD,X'80'      TURN ON CANCEL SWITCH
         CLI   6(R2),C'A'          IS IT CLASS=A
         BNE   A6D2A               NO - CHECK FOR V
         BAL   R6,A6C3             ENSURE NO PERFORM PARAMETER
         B     A8B2                OK HERE - CHECK OTHER PARMS
*
A6D2A    DS    0H
         CLI   6(R2),C'V'          IS IT CLASS=V
         BNE   A6G2                NO - PERFORM PARM MUST BE SPEC'D
         BAL   R6,A6C3             ENSURE NO PERFORM PARAMETER
         B     A8B2                ALL OK - CHECK OTHER PARMS
*
A6G2     DS    0H                  MUST BE PERFORM PARAMETER
         NI    CFUSERWD,X'00'      TURN OFF CANCEL SWITCH
         BAL   R6,A6C3             TEST FOR PERFORM PARM - NEEDED
         CLC   8(2,R4),CC13        IS IT PERFORM=13
         BE    A8B2                YES - VALID PARAMETER
         CLC   8(2,R4),CC42        IS IT PERFORM=42
         BL    A6H3                CHECK FOR BYPASS AUTHORITY
         CLC   8(2,R4),CC49        IS IT PERFORM=49
         BH    A6H3                CHECK FOR BYPASS AUTHORITY
         B     A8B2                SO FAR SO GOOD
*
A6H3     DS    0H
         BAL   R6,PERFCHCK         IS THERE BYPASS AUTHORITY
         B     A8B2                YES - CHECK OTHER PARMS
         EJECT
*************************************************************
*        PROCESS REMAINDER OF JOBCARD FOR TEST CLASS        *
*************************************************************
         SPACE 3
*
A8B2     DS    0H                  VERIFY JOB ACCOUNTING
         LA    R2,CFPARAMS         ADDRESS THE TABLE
         CLI   0(R2),C'('          IS THERE OPENING BRACKET
         BNE   A8B2A               NO BRACKET
         LA    R2,1(0,R2)          BUMP PAST BRACKET
*
A8B2A    DS    0H
         LA    R7,A7E2             LOAD RETURN ADDRESS
         CLC   CCLV,0(R2)          IS JOB ACCT=LV
         BE    JALV                YES - IS IT ALLOWED
         SPACE 3
*
A7E2     DS    0H
         LA    R2,CFPARAMS         ADDRESS THE TABLE
         LA    R2,20(0,R2)         BUMP PAST JOB ACCOUNTING
         LA    R3,17               EXTENT OF SEARCH
         LA    R7,A7E2B            SAVE RETURN ADDRESS
*
A7E2A    DS    0H
         CLC   CCPRTY,0(R2)        IS THIS PRTY PARAMETER
         BE    PRTY                CHECK IT
         CLC   CCDPRTY,0(R2)       IS THIS DPRTY PARAMETER
         BE    DPRTY               CHECK IT
         CLC   CCADDRSP,0(R2)      IS THIS ADDRSPC PARAMETER
         BE    ADDRSPC             CHECK IT
         CLC   CCREGION,0(R2)      IS THIS A REGION PARAMETER
         BE    REGION              CHECK IT
         CLC   CCMSGCLM,0(R2)      IS THIS MSGCLASS=M PARAMETER
         BE    MSGCLASS            CHECK IT
*
A7E2B    DS    0H
         LA    R2,20(R2)           BUMP POINTER
         BCT   R3,A7E2A            CHECK NEXT PARAMETER
         B     END                 NOTHING WRONG ON THIS CARD
         EJECT
***********************************
*        PROCESS EXEC CARD        *
***********************************
         SPACE 3
*
EXECCARD DS    0H
EXECCONT DS    0H
         L     R2,CFCARD           ADDRESS THE CARD
         LA    R2,2(R2)            BUMP PAST //
         LA    R3,70               DEFINE LENGTH
         LA    R7,EXECRET          RETURN ADDRESS
*
EXECLP2  DS    0H
         CLC   CCADDRSP,0(R2)      IS THIS AN ADDRSPC PARAMETER
         BE    ADDRSPC             CHECK IT
         CLC   CCREGION,0(R2)      IS THIS A REGION PARAMETER
         BE    REGION              CHECK IT
         CLC   CCPERF,0(R2)        IS THIS A PERFORM PARAMETER
         BE    ERROR6              NOT ALLOWED - REJECT IT
         CLC   CCPRTY,0(R2)        IS THIS A PRTY PARAMETER
         BE    PRTY                CHECK IT
         CLC   CCDPRTY,0(R2)       IS THIS A DPRTY PARAMETER
         BE    DPRTY               CHECK IT
         CLC   CCTIME,0(R2)        IS THIS A TIME=1440 PARAMETER
         BE    ERROR25             NOT ALLOWED - REJECT IT
         CLC   CCTIMEX,0(R2)       IS THIS A TIME=(1440 PARAMETER
         BE    ERROR25             NOT ALLOWED - REJECT IT
*
EXECRET  DS    0H
         CLC   0(2,R2),CCONT       IS THIS CARD CONTINUED
         BE    END                 YES - WAIT FOR NEXT CARD
         LA    R2,1(R2)            BUMP POINTER
         BCT   R3,EXECLP2          KEEP LOOKING
         B     END                 THIS CARD IS VALID
         EJECT
*********************************
*        PROCESS DD CARD        *
*********************************
         SPACE 3
*
DDCARD   DS    0H
         TM    CHAUTH+1,X'01'      BYPASS DD PROCESSING ?
         BO    END                 YES - NO CHECKING REQUIRED
*
         L     R2,CFCARD           ADDRESS THE CARD AREA
         LA    R2,2(,R2)           BUMP PAST //
         LA    R3,70               SET COLUMN COUNT
*
DDLP1    DS    0H
         CLC   CCDD,0(R2)          FIND THE DD CONSTANT
         BE    DDFND               FOUND IT
         LA    R2,1(,R2)           BUMP TO NEXT CARD COLUMN
         BCT   R3,DDLP1            SEARCH THE CARD FOR ' DD '
         B     END                 DD NOT FOUND  MUST BE JCL ERROR
*
DDFND    DS    0H
         NI    CFUSERWD,X'FF'-X'40'-X'20'-X'10'-X'02'  CLR SWITCHES
         NI    CFUSERWD+1,X'FF'-X'40'-X'08'-X'04'-X'02'-X'01' CLR SWCH
         OI    CFUSERWD+1,X'20'+X'10' SET DEFAULT DISP NEW AND BAD VOL
         LA    R2,3(,R2)           POINT TO BLANK AFTER 'DD'
         SH    R3,CH3              ADJUST CARD COLUMN POINTER
         B     DDCARD1             PROCESS THIS CARD
*
DDCONT   DS    0H
         TM    CHAUTH+1,X'01'      BYPASS DD PROCESSING ?
         BO    END                 YES - NO CHECKING REQUIRED
         L     R2,CFCARD           ADDRESS THE CARD AREA
         LA    R2,2(,R2)           BUMP PAST THE //
         LA    R3,70               SET COLUMN COUNT
*
DDCARD1  DS    0H
         BAL   R6,FINDNBL          FIND THE FIRST NON BLANK
         CLC   CCDUMMY,0(R2)       IS IT DD DUMMY ?
         BE    DDOK                YES - ALL IS WELL
         CLI   0(R2),C'*'          IS IT DD *
         BE    DDOK                YES - ALL IS WELL
         CLC   CCDDNAME,0(R2)      IS IT DDNAME ?
         BE    DDOK                YES - ALL IS WELL
         CLC   CCSYSOUT,0(R2)      IS IT A SYSOUT DATASET ?
         BNE   DDCARD2             NO - KEEP LOOKING
         CLC   CCINTRDR,10(R2)     IS IT SYSOUT TO INTRDR
         BNE   DDOK                NO -  ALL IS WELL
         OI    CFUSERWD,X'20'      FLAG INVALID SYSOUT PARAMETER
*
DDOK     DS    0H
         NI    CFUSERWD+1,X'FF'-X'20'-X'10'  TURN OFF VOL & DISP
         B     DDRET
         EJECT
********************************************
*        IDENTIFY DD CARD PARAMETERS       *
********************************************
         SPACE 3
*
DDCARD2  DS    0H
         CLC   CCDSNAME,0(R2)      IS THIS A DSN PARAMETER
         BE    DDDSNAME            YES
         CLC   CCLABEL,0(R2)       IS THIS A LABEL PARAMETER
         BE    DDLABEL             YES
         CLC   CCUNIT,0(R2)        IS THIS A UNIT PARAMETER ?
         BE    DDUNIT              YES
         CLC   CCDISP,0(R2)        IS THIS A DISP PARAMETER ?
         BE    DDDISP              YES
         CLC   CCSPACE,0(R2)       IS THIS A SPACE PARAMETER ?
         BE    DDSPACE             YES
         CLC   CCVOL,0(R2)         IS THIS A VOLUME PARAMETER ?
         BE    DDVOL
*
DDRET    DS    0H
         BAL   R6,FINDCOM1         FIND THE NEXT COMMA
         LA    R2,1(,R2)           BUMP PAST THE COMMA
         BCT   R3,DDRET1           ADJUST LOOP
         B     ENDCI               JCL ERROR   C/I WILL REJECT THIS JOB
*
DDRET1   DS    0H
         CLI   0(R2),C' '          IS THIS THE END OF THE CARD ?
         BNE   DDCARD2             NO
         B     END                 END OF CARD    CONTINUATION FOLLOWS
         EJECT
********************************************
*        DD STATEMENT DECISION TIME        *
********************************************
         SPACE 3
*
ENDDD    DS    0H
         TM    CFUSERWD+1,X'20'    IS THIS A NEW DATASET ?
         BNO   ENDDD1              NO
         TM    CFUSERWD,X'40'      HAS IT AN ILLEGAL DSN
         BO    ERROR21             YES - FAIL THE JOB
         TM    CFUSERWD+1,X'08'    IS IT ON AN ILLEGAL UNIT ?
         BNO   ENDDD0              NO
         TM    CFUSERWD+1,X'01'    IS A VOL PARM PRESENT
         BNO   ERROR13             NO - FAIL THE JOB
*
ENDDD0   DS    0H
         TM    CFUSERWD+1,X'10'    IS ILLEGAL VOLUME FLAG ON ?
         BNO   ENDDD1              NO
         TM    CFUSERWD+1,X'01'    YES - IS VOLUME PARM PRESENT ?
         BO    ERROR11             YES - FAIL THE JOB
*
ENDDD1   DS    0H
         TM    CFUSERWD+1,X'02'    IS IT A VIO DATASET ?
         BNO   ENDDD2              NO
         TM    CFUSERWD+1,X'04'    TOO MUCH PRIMARY SPACE ALLOCATED  ?
         BO    ERROR12             YES - FAIL THE JOB
         TM    CFUSERWD,X'02'      IS THERE SECONDARY SPACE ALLOCATION
         BO    ERROR29             YES - FAIL THE JOB
         B     ENDDD2
*
ENDDD2   DS    0H
         TM    CFUSERWD+1,X'40'    IS THERE ILLEGAL LABEL PARAMETER
         BO    ERROR14             YES - FAIL THE JOB
*
ENDDD3   DS    0H
         TM    CFUSERWD,X'20'      IS THERE ILLEGAL SYSOUT PARAMETER
         BO    ERROR26             YES - FAIL THE JOB
*
ENDDD4   DS    0H
         TM    CFUSERWD,X'10'      IS THERE DIRECT UNIT ASSIGNMENT
         BO    ERROR27             YES - FAIL THE JOB
         B     END
         EJECT
*********************************************
*        PROCESS DD DSNAME PARAMETER        *
*********************************************
         SPACE 3
*
DDDSNAME DS    0H                  ENSURE NEW DSN=JOBNAME
         LR    R6,R2               PICK UP POINTER
         LA    R6,3(0,R6)          BUMP PAST DSN
         CLI   0(R6),C'='          IS IT ABBREVIATED
         BE    DDDSNAM1            YES
         LA    R6,3(0,R6)          POINT TO '=' SIGN
*
DDDSNAM1 DS    0H
         CLC   CCAMPSND,1(R6)      IS IT A VIO DATASET
         BE    DDRET               YES - ALL IS WELL
*
         L     R5,CFUSER           ADDRESS THE USERID
         CLC   1(6,R6),0(R5)       IS DSN PREFIX = JOBNAME
         BE    DDRET               YES
         B     DSNCHECK            NO - TEST FOR BYPASS AUTHORITY
*
DDDSNAM2 DS    0H
         OI    CFUSERWD,X'40'      SET BAD DSN FLAG
         B     DDRET               LOOK AT REST OF CARD
         EJECT
*************************************************
*        PROCESS DD CARD LABEL PARAMETER        *
*************************************************
         SPACE 3
*
DDLABEL  DS    0H                  LOOK FOR BLP STATEMENT
         LA    R5,10               IT'LL BE WITHIN 10 IF IT'S HERE
         LA    R6,6(R2)            BUMP PAST '='
*
DDLABEL1 DS    0H
         CLC   CCBLPLBL,0(R6)      IS BLP SPECIFIED ?
         BE    LABELCHK            YES IS IT AUTHORISED
         LA    R6,1(R6)            BUMP POINTER
         BCT   R5,DDLABEL1         KEEP LOOKING
         B     DDRET               BLP NOT SPECIFIED
*
DDLABLON DS    0H
         OI    CFUSERWD+1,X'40'    SET BAD LABEL FLAG
         B     DDRET               CHECK REST OF CARD
         EJECT
************************************************
*        PROCESS DD CARD UNIT PARAMETER        *
************************************************
         SPACE 3
DDUNIT   DS    0H
         CLC   CCSYSTS,5(R2)       IS IT UNIT SYSTS ?
         BE    DDUNITON            YES   SET UNIT SWITCH ON
         CLC   CCSYSLV,5(R2)       IS IT UNIT SYSLV ?
         BE    DDUNITON            YES   SET UNIT SWITCH ON
         CLC   CCSYSDA,5(R2)       IS IT UNIT SYSDA ?
         BE    DDUNITON            YES   SET UNIT SWITCH ON
         CLC   CC33,5(R2)          IS IT UNIT 33 ?
         BE    DDUNITON            YES   SET UNIT SWITCH ON
         CLC   CCVIO,5(R2)         IS IT UNIT VIO ?
         BE    DDVIOON             YES   SET VIO SWITCH ON
*                                  TEST FOR DIRECT UNIT ASSIGNMENT
         CLI   8(R2),C','          IS THERE A COMMA HERE ?
         BE    DDUNITA             LOOKS LIKE A DIRECT ASSIGN
         CLI   5(R2),C'('          IS THERE A BRACKET
         BNE   DDRET               NO - LOOK NO FURTHER
         CLI   9(R2),C','          IS THERE A COMMA HERE ?
         BNE   DDRET               NO - MUST BE OK
*
DDUNITA  DS    0H
         OI    CFUSERWD,X'10'      LEAVE DIRECT UNIT ASSIGNMENT FLAG
         B     DDRET
*
DDUNITON DS    0H
         OI    CFUSERWD+1,X'08'    FLAG ILLEGAL UNIT PARAMETER(MAYBE)
         B     DDRET
*
DDVIOON  DS    0H
         OI    CFUSERWD+1,X'02'    SET VIO SWITCH ON
         NI    CFUSERWD+1,X'FF'-X'10'    SET VOLUME SWITCH OFF
         B     DDRET               ALL DONE HERE
         EJECT
************************************************
*        PROCESS DD CARD DISP PARAMETER        *
************************************************
         SPACE 3
DDDISP   DS    0H
         LR    R6,R2               PICK UP POINTER
         CLI   5(R2),C'('          IS THERE A SUBLIST ?
         BNE   DDDISP1             NO
         LA    R6,1(,R6)           SET THE OFFSET
*
DDDISP1  DS    0H
         CLC   CCNEW,5(R6)         IS THE INITIAL DISP NEW ?
         BE    DDRET               YES  LEAVE DISP SWITCH ON
         CLI   5(R6),C','          IS INITIAL DISP DEFAULTING TO NEW ?
         BE    DDRET               YES  LEAVE DISP SWITCH ON
         NI    CFUSERWD+1,X'FF'-X'20' NOT A NEW DATASET
         B     DDRET               RETURN
         EJECT
*************************************************
*        PROCESS DD CARD SPACE PARAMETER        *
*************************************************
         SPACE 3
DDSPACE  DS    0H
         LA    R6,11(,R2)          SET INDEX TO 1ST DIGIT
         CLI   0(R6),C'('          IS IT A BRACKET ?
         BNE   DDSPACE1            NO
         LA    R6,1(,R6)           BUMP PAST THE BRACKET
DDSPACE1 DS    0H
         SR    R4,R4               CLEAR A WORK REGISTER
         SR    R7,R7               CLEAR A WORK REGISTER
DDSPCLP1 DS    0H
         CLI   0(R6),C'0'          IS IT A DIGIT ?
         BL    DDSPCLP2            NO
         IC    R4,0(R6)            PICK UP THE DIGIT
         SH    R4,CH240            STRIP THE ZONE
         SLL   R7,4                MAKE ROOM FOR NEW DIGIT
         OR    R7,R4               COMBINE
         LA    R6,1(,R6)           BUMP INDEX
         B     DDSPCLP1            LOOK FOR NEXT DIGIT
DDSPCLP2 DS    0H
         CLC   CCTRK,7(R2)         IS SPACE IN TRACKS ?
         BE    DDSPCT              YES
         CLC   CCCYL,7(R2)         IS SPACE IN CYLINDERS ?
         BNE   DDRET               NO - JCL ERROR COMING UP
DDSPCC   DS    0H
         C     R7,CX50             IS SPACE MORE THAN 50 CYLINDERS ?
         BH    DDSPCERR            YES - LEAVE A FLAG
         B     DDSPCD              TEST FOR SECONDARY ALLOCATION
DDSPCT   DS    0H
         C     R7,CX1500           IS SPACE MORE THAN 1500 TRACKS ?
         BH    DDSPCERR            YES - LEAVE A FLAG
DDSPCD   DS    0H
         CLI   0(R6),C','          IS THIS CHARACTER A COMMA
         BNE   DDRET               NO SECONDARY ALLOCATION HERE
         CLI   1(R6),C'0'          IS THE NEXT CHARACTER A DIGIT
         BL    DDRET               NO SECONDARY ALLOCATION HERE
         OI    CFUSERWD,X'02'      LEAVE SECONDARY ALLOCATION FLAG
         B     DDRET               LOOK AT NEXT PARAMETER
DDSPCERR DS    0H
         OI    CFUSERWD+1,X'04'    INDICATE EXCESSIVE SPACE
         B     DDRET
         EJECT
**************************************************
*        PROCESS DD CARD VOLUME PARAMETER        *
**************************************************
         SPACE 3
DDVOL    DS    0H
         OI    CFUSERWD+1,X'01'    INDICATE VOL IS PRESENT
*
         LA    R6,4(,R2)           PICK UP AN INDEX
         CLI   3(R2),C'U'          HAS HE PUT VOLUME IN FULL ?
         BNE   DDVOL1              NO
         LA    R6,3(,R6)           BUMP PAST VOLUME
DDVOL1   DS    0H
         CLI   0(R6),C'('          IS THERE A BRACKET ?
         BNE   DDVOL2              NO
         LA    R6,1(,R6)           BUMP PAST THE BRACKET
DDVOL2   DS    0H
         CLC   CCPRIV,0(R6)        IS THERE A PRIVATE PARAMETER ?
         BNE   DDVOL3              NO
         LA    R6,8(,R6)           BUMP PAST PRIVATE
DDVOL3   DS    0H
         CLC   CCRETAIN,0(R6)      IS THERE A ',RETAIN' PARAMETER ?
         BNE   DDVOL3A             NO
         LA    R6,8(,R6)           BUMP PAST ',RETAIN'
         B     DDVOL4
DDVOL3A  DS    0H
         CLC   CCRETAIN+1(L'CCRETAIN-1),0(R6)  IS THE A 'RETAIN' PARM
         BNE   DDVOL4              NO
         LA    R6,7(,R6)           BUMP PAST 'RETAIN'
DDVOL4   DS    0H
         CLI   0(R6),C'('          IS THERE A BRACKET ?
         BNE   DDVOL5              NO
         LA    R6,1(,R6)           BUMP PAST BRACKET
DDVOL5   DS    0H
         CLC   CCSER,0(R6)         IS THERE A 'SER=' PARAMETER ?
         BNE   DDVOL6              NO
         LA    R6,4(,R6)           BUMP PAST 'SER='
         B     DDVOL4              LOOK FOR A BRACKET
DDVOL6   DS    0H
         CLC   CCTSO,0(R6)         IS VOLUME PREFIX 'TSO'
         BE    DDRET               YES  LEAVE ILLEGAL VOLUME FLAG
         CLC   CCMVS,0(R6)         IS VOLUME PREFIX 'MVS'
         BE    DDRET               YES  LEAVE ILLEGAL VOLUME FLAG
         CLC   CCSY,0(R6)          IS THE VOLUME PREFIX 'SY'
         BE    DDRET               YES  LEAVE ILLEGAL VOLUME FLAG
         CLC   CCIPO,0(R6)         IS VOLUME PREFIX 'IPO'
         BE    DDRET               YES  LEAVE ILLEGAL VOLUME FLAG
         NI    CFUSERWD+1,X'FF'-X'10' SHOW VOLUME IS OK
         B     DDRET
         EJECT
***********************************
*        PROCESS JES3 CARD        *
***********************************
         SPACE 3
*
JES3CARD DS    0H
JES3CONT DS    0H
         L     R2,CFCARD           ADDRESS CARD
         CLI   3(R2),C' '          IS IT A COMMENT ?
         BE    END                 YES
         CLC   CCMAIN,3(R2)        IS IT MAIN ?
         BE    JES3MAIN            YES
         CLC   CCNET,3(R2)         IS IT NET ?
         BE    NETCHECK            CHECK FOR BYPASS AUTHORITY
         B     END                 NO NETWORK DEFINED - NO WORRIES HERE
NETCHECK DS    0H
         BAL   R6,JESCHECK         TEST BYPASS AUTHORITY
         B     END                 THIS CARD OK
JES3MAIN DS    0H
         LA    R2,7(,R2)           POINT TO FIRST BLANK
         LA    R3,60               EXTENT OF SEARCH
JES3LP1  DS    0H
         CLI   0(R2),C' '          FIND FIRST NON BLANK
         BNE   CHECKSYS
         LA    R2,1(,R2)           BUMP POINTER
         BCT   R3,JES3LP1          SEARCH CARD
         B     END                 NO PARAMETERS
         EJECT
***************************************************
*        PROCESS JES3 MAIN CARD PARAMETERS        *
***************************************************
         SPACE 3
CHECKSYS DS    0H
         CLC   CCSYS,0(R2)         IS THIS A SYSTEM PARAMETER ?
         BNE   CHKCLASS            NO
         BAL   R6,FINDCOM          FIND THE COMMA
         LA    R2,1(R2)            BUMP TO NEXT PARAMETER
         CLC   CCLASS,0(R2)        IS THERE A CLASS PARAMETER ?
         BNE   ERROR10             NO  REJECT CARD
         CLI   7(R2),C' '          IS IT A 1 LETTER CLASS ?
         BNE   ERROR10             SOME ERROR HERE
         CLI   6(R2),C'Q'          IS IT CLASS Q
         BNE   ERROR16             NO - CLASS MUST BE Q
         B     END                 ALL OK HERE
CHKCLASS DS    0H
         CLC   CCLASS,0(R2)        IS THIS A CLASS PARAMETER ?
         BNE   ERROR10             NO - MUST BE ILLEGAL
         CLI   6(R2),C'Q'          IS IT CLASS Q
         BNE   ERROR16             NO - CLASS MUST BE Q
         CLI   7(R2),C' '          IS IT A 1 LETTER CLASS ?
         BE    END                 YES   AND THE ONLY PARAMETER
         CLI   7(R2),C','          IS IT A 1 LETTER CLASS ?
         BNE   ERROR10             SOME ERROR HERE
         BAL   R6,FINDCOM          SEE IF THERE IS ANOTHER PARAMETER
         LA    R2,1(R2)            BUMP TO NEXT PARAMETER
         B     CHECKSYS
         EJECT
******************************************************
*        PROCESS JOB AND EXEC CARD PARAMETERS        *
******************************************************
         SPACE 3
PRTY     DS    0H
         BAL   R6,PRTYCHCK         HAS HE BYPASS AUTHORITY
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
DPRTY    DS    0H
         BAL   R6,DPRTYCHK         HAS HE BYPASS AUTHORITY
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
ADDRSPC  DS    0H
         CLC   CCREAL,8(R2)        IS ADDRESS=REAL SPECIFIED
         BNER  R7                  NO - ITS OK
         BAL   R6,ADDRCHCK         HAS HE BYPASS AUTHORITY
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
JALV     DS    0H
         BAL   R6,JACHECK          HAS HE BYPASS AUTHORITY
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
MSGCLASS DS    0H
         BAL   R6,MSGCHECK         HAS HE BYPASS AUTHORITY
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
USERPARM DS    0H
         BAL   R6,PSWDCHCK         HAS HE BYPASS AUTHORITY
         NI    CFUSERWD,X'FF'-X'04' INDICATE USER CONST IS PRESENT
         BR    R7                  YES - PROCESS NEXT PARAMETER
*
PSWDPARM DS    0H
         BAL   R6,PSWDCHCK         HAS HE BYPASS AUTHORITY
         OI    CFUSERWD,X'01'      INDICATE PASSWORD IS PRESENT
         BR    R7                  YES - PROCESS NEXT PARAMETER
         EJECT
*************************************
*        CHECK REGION PARAMETER     *
*************************************
         SPACE 3
REGION   DS    0H
         LA    R4,7(R2)            POINT BEYOND = SIGN
         SR    R5,R5               CLEAR RESULT
         SR    R6,R6               CLEAR WORK
         LA    R8,5                DIGIT COUNTER
REGLP1   DS    0H
         CLI   0(R4),C'K'          IS THIS THE END ?
         BE    REGCHK              CHECK RESULT
         CLI   0(R4),C'0'          IS IT NUMERIC ?
         BL    ENDCI               NO - C/I WILL REJECT
         CLI   0(R4),C'9'          IS IT NUMERIC ?
         BH    ENDCI               NO - C/I WILL REJECT
         IC    R6,0(R4)            PICK UP THE DIGIT
         SH    R6,CH240            STRIP THE SIGN
         MH    R5,CH10             INCREASE RANGE BY POWER OF 10
         AR    R5,R6               ACCUMULATE NEW DIGITS
         LA    R4,1(0,R4)          BUMP POINTER
         BCT   R8,REGLP1           PICK UP ALL DIGITS
         B     ENDCI               SOME ERROR HERE - C/I WILL REJECT
REGCHK   DS    0H
         CH    R5,MAXREG           COMPARE WITH MAXIMUN REGION SIZE
         BNHR  R7                  WITHIN 2 MEGS
         BAL   R6,REGCHECK         HAS HE BYPASS AUTHORITY ?
         BR    R7                  YES - PROCESS NEXT PARAMETER
         EJECT
*********************************
*        LOCATE ROUTINES        *
*********************************
         SPACE 3
FINDBLNK DS    0H
         CLI   0(R2),C' '          FIND THE NEXT BLANK
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDBLNK         KEEP LOOKING
         B     ENDCI               ERROR COMING UP - C/I WILL REJ
*
FINDCOM  DS    0H
         CLI   0(R2),C','          FIND THE COMMA
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDCOM          KEEP LOOKING
         B     END                 NO COMMA FOUND
*
FINDCOM1 DS    0H
         CLI   0(R2),C','          FIND THE COMMA
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDCOM1         KEEP LOOKING
         B     ENDDD               NO COMMA FOUND
*
FINDNBL  DS    0H
         CLI   0(R2),C' '          FIND THE NON BLANK
         BNER  R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDNBL          KEEP LOOKING
         B     END                 NO NON BLANK FOUND
*
FINDNBL1 DS    0H
         CLI   0(R2),C' '          FIND THE NON BLANK
         BNER  R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDNBL1         KEEP LOOKING
         B     A5B3                NO MORE PARAMETERS ON THIS JOBCARD
*
FINDEQ   DS    0H
         CLI   0(R2),C'='          FIND THE EQUALS SIGN
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDEQ           FINDLP1   KEEP LOOKING
         B     ENDCI               ERROR HERE   NO EQUALS SIGN
         EJECT                     C/I WILL REJECT
*
FINDJOB  DS    0H
         CLC   CCJOB,0(R2)         FIND THE JOB CONSTANT
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDJOB          LOOK AGAIN
         B     ENDCI               ERROR HERE - NO JOB FOUND
*                                  C/I WILL REJECT
FINDCONT DS    0H
         CLC   CCONT,0(R2)         FIND THE COMMA/BLANK CONSTANT
         BER   R6                  GOT IT
         LA    R2,1(,R2)           BUMP INDEX
         BCT   R3,FINDCONT         LOOK AGAIN
         B     ENDCI               ERROR HERE - END NOT FOUND
*                                  C/I WILL REJECT
         EJECT
****************************************************
*        LOCATE ROUTINE - PERFORM PARAMETER        *
****************************************************
         SPACE 3
*
A6C3     DS    0H
         LA    R4,CFPARAMS         ADDRESS THE TABLE
         LA    R5,18               FIELD LENGTH
*
A6C3A    DS    0H
         CLC   0(7,R4),CCPERF      LOOK FOR A PERFORM PARAMETER
         BE    A6C3B               GOT IT - IS IT ALLOWED
         LA    R4,20(0,R4)         BUMP POINTER
         BCT   R5,A6C3A            KEEP LOOKING
*
         TM    CFUSERWD,X'80'      IS CANCEL SWITCH ON
         BOR   R6                  YES - ALL OK HERE
         B     ERROR15             PERFORM PARAMETER MUST BE SPECIFIED
*
A6C3B    DS    0H
         TM    CFUSERWD,X'80'      IS CANCEL SWITCH ON
         BNOR  R6                  NO - GO BACK TO CALLER
         B     ERROR6              YES - PERFORM NOT ALLOWED
         EJECT
************************************************
*        TEST USER FOR BYPASS AUTHORITY        *
************************************************
         SPACE 3
*
JOBCHECK DS    0H
         TM    CHAUTH,X'80'       BYPASS JOBNAME CHECK
         BNO   ERROR3             NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
PRTYCHCK DS    0H
         TM    CHAUTH,X'40'       BYPASS PRTY CHECK
         BNO   ERROR7             NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
DPRTYCHK DS    0H
         TM    CHAUTH,X'20'       BYPASS DPRTY CHECK
         BNO   ERROR20            NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
PERFCHCK DS    0H
         TM    CHAUTH,X'10'       BYPASS PERFORM CHECK
         BNO   ERROR19            NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
ADDRCHCK DS    0H
         TM    CHAUTH,X'08'       BYPASS ADDRSPC=REAL CHECK
         BNO   ERROR4             NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
REGCHECK DS    0H
         TM    CHAUTH,X'04'       BYPASS REGION=2048K CHECK
         BNO   ERROR8             NO - CANCEL
         BR    R6                 YES RETURN TO CALLER
JESCHECK DS    0H
         TM    CHAUTH,X'02'       BYPASS JES3 NETWORK CHECK
         BNO   ERROR9             NO - CANCEL
         BR    R6                 YES RETURN TO CALLER
LABELCHK DS    0H
         TM    CHAUTH,X'01'       BYPASS LABEL CHECKING
         BNO   DDLABLON           NO - SET BAD FLAG
         B     DDRET              YES - THIS PARAMETER IS OK
DSNCHECK DS    0H
         TM    CHAUTH+1,X'80'     BYPASS DSN=JOBNAME CHECK
         BNO   DDDSNAM2           NO - SET BAD FLAG
         B     DDRET              YES - THIS PARAMETER IS OK
PSWDCHCK DS    0H
         TM    CHAUTH+1,X'40'     BYPASS USER AND PASSWORD CHECK
         BNO   ERROR23            NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
MSGCHECK DS    0H
         TM    CHAUTH+1,X'04'     BYPASS MESCLASS=M CHECK
         BNO   ERROR17            NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
JACHECK  DS    0H
         TM    CHAUTH+1,X'02'     BYPASS JA=LV CHECK
         BNO   ERROR18            NO - CANCEL
         BR    R6                 YES - RETURN TO CALLER
         EJECT
**************************************************
*        TEST USER FOR JOBCLASS AUTHORITY        *
**************************************************
         SPACE 3
CLASSA   DS    0H
         TM    CHCLASS,X'80'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSH   DS    0H
         TM    CHCLASS,X'40'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSI   DS    0H
         TM    CHCLASS,X'20'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSJ   DS    0H
         TM    CHCLASS,X'10'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSK   DS    0H
         TM    CHCLASS,X'08'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSL   DS    0H
         TM    CHCLASS,X'04'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSM   DS    0H
         TM    CHCLASS,X'02'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSN   DS    0H
         TM    CHCLASS,X'01'      AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSO   DS    0H
         TM    CHCLASS+1,X'80'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSP   DS    0H
         TM    CHCLASS+1,X'40'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSQ   DS    0H
         TM    CHCLASS+1,X'20'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSR   DS    0H
         TM    CHCLASS+1,X'10'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSS   DS    0H
         TM    CHCLASS+1,X'08'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASST   DS    0H
         TM    CHCLASS+1,X'04'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSU   DS    0H
         TM    CHCLASS+1,X'02'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
CLASSV   DS    0H
         TM    CHCLASS+1,X'01'    AUTHORISED CLASS
         BNO   ERROR5             NO
         BR    R7                 YES
         EJECT
**********************************
*        MESSAGE ROUTINES        *
**********************************
         SPACE 3
ERROR0   DS    0H                 UNDETERMINED ERROR
         LA    R15,100            NO USERID PASSED TO EXIT
         B     BADEND
ERROR1   DS    0H
         LA    R1,MSG1            ADDRESS MSG1
         B     LOGMSG
ERROR2   DS    0H
         LA    R1,MSG2            ADDRESS MSG2
         B     LOGMSG
ERROR3   DS    0H
         LA    R1,MSG3            ADDRESS MSG3
         B     LOGMSG
ERROR4   DS    0H
         LA    R1,MSG4            ADDRESS MSG4
         B     LOGMSG
ERROR5   DS    0H
         LA    R1,MSG5            ADDRESS MSG5
         B     LOGMSG
ERROR6   DS    0H
         LA    R1,MSG6            ADDRESS MSG6
         B     LOGMSG
ERROR7   DS    0H
         LA    R1,MSG7            ADDRESS MSG7
         B     LOGMSG
ERROR8   DS    0H
         LA    R1,MSG8            ADDRESS MSG8
         B     LOGMSG
ERROR9   DS    0H
         LA    R1,MSG9            ADDRESS MSG9
         B     LOGMSG
ERROR10  DS    0H
         LA    R1,MSG10           ADDRESS MSG10
         B     LOGMSG
ERROR11  DS    0H
         LA    R1,MSG11           ADDRESS MSG11
         B     LOGMSG
ERROR12  DS    0H
         LA    R1,MSG12           ADDRESS MSG12
         B     LOGMSG
ERROR13  DS    0H
         LA    R1,MSG13           ADDRESS MSG13
         B     LOGMSG
ERROR14  DS    0H
         LA    R1,MSG14           ADDRESS MSG14
         B     LOGMSG
ERROR15  DS    0H
         LA    R1,MSG15           ADDRESS MSG15
         B     LOGMSG
ERROR16  DS    0H
         LA    R1,MSG16           ADDRESS MSG16
         B     LOGMSG
ERROR17  DS    0H
         LA    R1,MSG17           ADDRESS MSG17
         B     LOGMSG
ERROR18  DS    0H
         LA    R1,MSG18           ADDRESS MSG18
         B     LOGMSG
ERROR19  DS    0H
         LA    R1,MSG19           ADDRESS MSG19
         B     LOGMSG
ERROR20  DS    0H
         LA    R1,MSG20           ADDRESS MSG20
         B     LOGMSG
ERROR21  DS    0H
         LA    R1,MSG21           ADDRESS MSG21
         B     LOGMSG
ERROR22  DS    0H
         LA    R1,MSG22           ADDRESS MSG22
         B     LOGMSG
ERROR23  DS    0H
         LA    R1,MSG23           ADDRESS MSG23
         B     LOGMSG
ERROR24  DS    0H
         LA    R1,MSG24           ADDRESS MSG24
         B     LOGMSG
ERROR25  DS    0H
         LA    R1,MSG25           ADDRESS MSG25
         B     LOGMSG
ERROR26  DS    0H
         LA    R1,MSG26           ADDRESS MSG26
         B     LOGMSG
ERROR27  DS    0H
         LA    R1,MSG27           ADDRESS MSG27
         B     LOGMSG
ERROR28  DS    0H
         LA    R1,MSG28           ADDRESS MSG28
         B     LOGMSG
ERROR29  DS    0H
         LA    R1,MSG29           ADDRESS MSG29
         B     LOGMSG
         EJECT
         SPACE 3
*
LOGMSG   DS    0H
         MVI   CFUSERWD+1,X'80'   INDICATE A RECALL IS REQUIRED
LOGMSG1  DS    0H
         ST    R1,CFMSG           SET UP MSG TO BE LOGGED
         LA    R15,8              RETURN CODE TO LOG MSG
         B     BADEND
         EJECT
*******************************************
*        TERMINATE EXIT PROCESSING        *
*******************************************
         SPACE 3
ENDCI    DS    0H
         MODESET EXTKEY=ZERO      KEY ZERO PLS
         LA    R1,MSGERR
         LA    R0,L'MSGERR
         TPUT (1),(0),R           WRITE MESSAGE
         MODESET EXTKEY=SCHED     BACK TO KEY1
END      DS    0H
         SR    R15,R15            SET ZERO RETURN CODE
BADEND   DS    0H                 USE VALUE IN R15 AS RETURN CODE
         L     R14,12(R13)        RETURN TO CALLER
         LM    R0,R12,20(R13)
         BR    R14
         LTORG
         EJECT
         PRINT OFF,NOGEN
         IHAPSA
         IHAASCB
         IHAASXB
         IHAACEE
         PRINT ON,GEN
         END
/*
//LKED     EXEC   PGM=IEWL,PARM=(RENT,REUS,REFR,LIST,MAP),
//         COND=(8,LT,ASM)
//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)
//         DD   DDNAME=SYSIN
//SYSLMOD  DD   DISP=SHR,VOL=SER=TSOPK1,UNIT=3350,
//         DSN=SM0006.PDS.LOAD
//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))
//SYSLIB   DD   DSN=PCS.TEST.AUTOCALL.LINKLIB,DISP=SHR
//SYSPRINT DD SYSOUT=X
//SYSIN    DD  *
   SETCODE AC(1)
   NAME IKJEFF10(R)
