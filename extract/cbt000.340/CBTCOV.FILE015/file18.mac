***********************************************************************
*
*                         E N Q U E U E
*                         """""""""""""
*
*             T h i s   w i l l  N O T  r u n   u n d e r
*
*                           M V S  1 . 3
*
*        because all this info is not in CSA anymore but in the
*
*        G.R.S address space ...
*
*
*          THIS WAS WRITTEN IN A VERY FAST AND NAIVE FASHION TO
*     HELP US IRON OUT SOME UNEXPLANABLE "DW" SWAPS. AS YOU CAN SEE
*     IT STRUCTURE LEAVES SOMETHING TO BE DESIRED AS NEW FEATURES WERE
*     ALL ADDED ON THE RUN OVER A PERIOD OF SOME MONTHS.
*
*     MAIN PANEL DISPLAYS THE FIRST RESOURCE THAT THE ADDRESS SPACE
*     HAS ISSUED A "ENQ" WITH "RESERVE" ,DEFAULTING TO THE FIRST
*     RESOURCE THAT THE ADDR SPACE IS "EXCUSIVELY" ENQUEUED.
*
*     - SWAPPED IN ADDRESS SPACES ARE HIGHLITED.
*
*     - USUAL CPU STATS ARE DISPLAYED
*
*     - MAJOR AND ITS MINOR NAME AND '<R>' IF EXCLUS/RESERV ,PLUS A 15
*       CHARACTER EXPLANATION (PRIDDY GENEROUS)
*
*     USER PANEL CAN BE SELECTED BY DEPRESSING THE "NEW-LINE" BAR
*     TO THE APPROPRIATE ADDR SPACE THEN PRESS "ENTER". CARE SHOULD
*     BE TAKEN NOT TO FUTZ AROUND WITH THE CURSOR AS LITTLE ERROR
*     CHECKING IS DONE WHEN SELECTION IS MADE OR SHE WILL PRANG BADLY.
*
*     THE USER PANEL NEEDS LITTLE EXPLANATION EXCEPT TO SAY THAT
*     EVERYTHING THE ADDRESS SPACE HAS ISSUED AN "ENQ" FOR WILL BE
*     DISPLAYED(EXC/SHR/RES ..ETC).
*
*     SHOULD THE ADDRESS SPACE BE INITIATED THEN THE MSG IS SENT TO
*     THE OPERATOR (SVC 35)
*
*     MESSAGES CAN BE SENT TO THE USER SHOULD U REQUIRE HIS NOTICE OF
*     SOME ENQUEING PROBLEM .
*
*     IF THE ADDRESS SPACE IS AN INITIATED JOB ,THEN THE 3278 ALARM
*     IS SOUNDED SHOULD THE ADDRESS SPACE BECOME SWAPPED OUT.(A MSG WAS
*     AUTOMATICALLY SENT TO THE OPERATOR ,BUT FEATURE WAS DELETED DUE
*     TO THE EXPECTED).
*
*                        PF KEYS....
*
*              PFK #1   ...  VIEW ONLY "RESERVED" RESOURCES (MAIN ONLY)
*              PFK #1   ...  OUCB FROM +X'10' TO +X'24' (USER     ONLY)
*              PFK #3   ....  END THE CURRENT DISPLAY
*              PFK #4   ...   HARDCOPY FEATURE
*              PFK #6   ...   INVOKE 'RMFMON' (ALL PANELS)
*              PFK #7   ...   Don't display INITS + startings
*              PFK #8   ...   Display BATCH  and STC only
*              PFK #9   ...   Display TSO add spc's only
*              PFK #12  ....  "AUTO" MODE (presses ENTER FOR YOU)
*              PA1/ALT  ....  FROM "AUTO" TO "SELECT" MODE
*
*     Also ... screen over flow is not managed at all (not real good)
*
*     so if you have thousands of ADDRESS spaces then  you'll have
*
*     to BUTCHER the code . (good luck)
*
*     To view some thing off the screen requires using PFK's 7-9
*
*
*
***********************************************************************
         EJECT
ENQ      CSECT
         USING *,R12,R11,R13
         PRINT NOGEN
         STM   R14,R12,12(R13)
         LR    R12,R15
         ST    R13,SV13
         LA    R13,SVREGS
         LR    R11,R12
         LA    R11,2048(R11)
         LA    R11,2048(R11)      NEXT PAGE
         ST    13,0(,12)
         LR    13,11
         A     13,=F'4096'
         STAX  STAXEXIT,REPLACE=NO,USADDR=FLAGS,MF=(E,STAXLIST)
         LTR   R15,R15
         BC    7,BUGGARD1
         B     START1
         REGEQU
SVREGS   DS    9D
WORK     DS    D
SV13     DS    F
RETCODE  DC    F'0'
SAVE     DS    F
SAVE1    DS    D
FLAGS    DC    X'00'
         DS    0F
XXA      DC    CL80'*** INTERUPT does NOT WORK but I am working on it'
*        BIT   0             AUTO  MODE IS ON
STAXLIST STAX  ,MF=L              AREA FOR HIS PARMS
         CNOP  0,4
STAXEXIT EQU   *
         L     R2,8(,R1)          USERADDR IN STAXLIST
         OI    0(R2),2            INDICATE ALT/PA1 HIT
         BCR   15,R14             RETURN ADDR
START1   DS    0H
         L     R1,548             GET THIS ADDR SPCS ASCB (psaaold)
         L     R1,176(,R1)
         CLC   0(2,R1),=C'MN'     ASCBJBNS
         BC    8,*+24
         CLC   0(2,R1),=C'SM'     ASCBJBNS
         BC    8,*+14
         CLC   0(6,R1),=C'MI0001' GREG ??
         BC    7,BADNEWS2         THIS GUYS A PIRATE
         GTSIZE
         CH    R0,=H'43'          IS THIS A BIG SCREEN ???
         BC    7,BADNEWS1         NOPE
         XC    FLAGS,FLAGS        CLEAR IT UP
         GETMAIN R,LV=458752           GET 4 SEP AMTS OF V/S
         LTR   R15,R15
         BC    7,CANTDO
         LR    2,1           ANOTHER 'JOHNSON AND JOHNSON'
         BLDL  0,LM
         LR    1,2
         BC    15,START2
         DS    0H
LM       DC    H'1,60',CL8'ERBMFTSO',26H'0'
DE       EQU   LM+4
START2   DS    0H
         ST    R1,MEMADDR         USER TABLE
         A     R1,=F'4096'
*        ST    R1,MEMADDR+4       STARADDR IN HERE +7K
*        A     R1,=F'8192'
         ST    R1,MEMADDR+8       SCREEN RAM
         A     R1,=F'8192'
         ST    R1,QELTAB          TAB#1
         A     R1,=F'45056'
         ST    R1,QELTAB+4        TAB#2
START    DS    0H
         XR    15,15
         STH   15,BYTE#1+2
         STH   15,#LINES
         STH   15,WOTWAS2
         L     R4,MEMADDR         CLEAR BUFFERS AND TABLES
         L     R5,=F'262144'      LENGTH
         BAL   R10,CLRBUFF        CLEAR TABLE WITH BLANKS
*        LA    0,8
*        LA    1,=X'C31140403CF56F40'
*        ICM   R1,8,=X'13'
*        SVC   93
         BAL   R10,FINDNAME       SET UP MAJMIN TABLE
         BAL   R10,CPUUSED
         L     R2,MEMADDR+8       POINT TO VIDEO BUFFER
         BAL   R10,PANEL1         SET DISPLAY
         L     R1,CVTPTR          POINT TO CVT
         USING CVT,R1             ====> CVT
         L     R3,CVTASVT         ASVT POINTER + 556 (22C)
         DROP  R1
         USING ASVT,R3
         L     R9,ASVTMAXU        MAX ADDR SPACES..LOOP COUNT
         BCTR  R9,0             DEC ADDSPC CNT
*        LA    R9,39            THIS WILL DO FOR TEST
NEXT1    EQU   *      CHECK FOR ...
         TM    ASVTFRST,128       UNASSGNED ADDSPC ?
         BC    8,*+16             NO  ... CHECK FOR MASTER
NEXT3    LA    R3,4(,R3)          NEXT ASCB (INC R3)
         BCT   R9,NEXT1           DEC ADDRSPC COUNT AND GET NEXT
         BC    15,OUT1            TPUT !
         LH    R10,ADDRCNT         GET NUMBER OF ACTIVE ADDR SPACES
         LA    10,1(10)           INC IT
         STH   R10,ADDRCNT         SAVE IT
         L     R6,ASVTFRST        ADDR OF THIS ASCB
         USING ASCB,R6            IHAASCB (MAP ASCB)
         ST    R6,PUSHPOP+60      ASCB ADDR HERE
         TM    MOREBITZ,3         TSO OR (STC BATCH) SELCTION ?
         BC    8,NEXT2
         BC    1,QCBSAVE5+6       BOTH ON
         L     15,60(6)
         TM    MOREBITZ,1         BATC+STC PLZ
         BC    8,TSOONLY
         OR    15,15              NO TSO
         BC    7,NEXT3
         BC    15,NEXT2
TSOONLY  TM    MOREBITZ,2
         OR    15,15              TSB ?
         BC    8,NEXT3
NEXT2    L     R4,ASCBJBNS        ADDR CHAR NAME
         MVC   0(2,R2),=X'1D40'   NORMAL / NOPROT (SKIP ABility)
         BAL   R10,STATUS         FIND ADDSPC STATUS( SIT SOT)
         LTR   R4,R4              ANY JOBNAME ?
         BC    7,NOLOG            YES ...
         CLI   ##EXC$+9,C'n'
         BC    8,EXLOOD
         MVC   7(8,R2),=C'starting' LOGON
         BC    15,JOBNAME+6
NOLOG    CLC   0(4,R4),=C'INIT'   BATCH ????
         BC    7,JOBNAME          NO..
         CLC   =F'0',ASCBJBNI     JUST INIT ?
         BC    8,*+12             YEP .. DOES HE WANT INITS ??
         L     R4,ASCBJBNI        ADDR CHAR BATCH NAME
         BC    15,JOBNAME
         CLI   ##EXC$+9,C'n'
         BC    7,JOBNAME
EXLOOD   LH    15,BYTE#1+2
         LA    15,1(15)
         STH   15,BYTE#1+2
         BC    15,NEXT1+8          NO INITS REQD
JOBNAME  EQU   *
         MVC   7(8,R2),0(4)       GET JOB NAME INTO BUFFER
         LH    R7,ASCBASID        GET ASID
         CVD   R7,WORK            MAKE IT PRINTABLE
         MVC   RETCODE(4),=X'40202120'
         ED    RETCODE(4),WORK+6
         MVC   2(3,2),RETCODE+1
         DROP  R6
QCBSTART L     6,QELTAB+4         TABLE END-START(SEARCH LENGTH)
*              7=ASID
QCBLOOK  EQU   *
         CH    R7,0(,R6)          QEL LIST BELONGEM HIM ?
         BC    8,QCBSAVE          SEE HOW IT IS ENQ'D
QCBSAVE2 LA    R6,64(,R6)         NEXT LOOK ...
         C     R6,QELTAB+8        TAB END ???
         BC    13,QCBLOOK         NOPE
         TM    BYTE#1,1           LOOKING ONLY FOR EXCLUSIVE ??
         BC    7,QCBSAVE5         YES .. BADLUCK NO DISPLAY
QCBSAVE4 OI    BYTE#1,1           TRY FOR JUST EXCLUSIVE THEN..
         BC    15,QCBSTART
BYTE#1   DC    F'0'
QCBSAVE  TM    BYTE#1,1           ALREADY LOOKED FOR RESERVE ??
         BC    7,QCBSAVE$         YES ..........SO EX WILL DO
         TM    11(6),16           EXCLUSIVE RESERVED ??
         BC    8,QCBSAVE2         NO KEEP LOOKING
QCBSAVE$ MVC   17(8,R2),2(R6)     MOVE IN MAJ NAME
         STM   1,2,MORESV
         XR    2,2
         ICM   2,1,10(6)          MINNAMEL
         BCTR  2,0
         ST    2,MORESV+8         LEGTH
         STCM  2,1,@@@@+1
         STCM  2,1,*+5            MINNAMEL
         TRT   12(31,R6),STRCOMP  MINOR NAME PRINTABLE ?
         LM    1,2,MORESV         POP  R2
         BC    7,@@@1             NOPE..
@@@@     MVC   27(31,R2),12(6)    GET Q-NAME
         STM   1,2,MORESV         POP  R2
         L     1,MORESV+8         LENGTH
         CH    1,=H'45'           MAX SCR LENGTH +MEM
         BC    13,@@@1            TO SHORT TO HAVE A MEM
         CLC   56(8,6),=CL8' '    BLANK MEMBER ?
         BC    8,@@@1
         LA    1,=256X'00'
         OI    64(1),X'01'
         TRT   12(24,6),0(1)      FIND A BLANK
         BC    8,@@@1             STR TO LONG
         LA    2,12(,6)           ADDR OF MIN STR
         SR    1,2                OFFSET TO BLANK
         CH    1,=H'22'
         BC    2,@@@1             TOO LONG
         STM   3,5,MORESV1
         L     2,MORESV+4        BUFFER CLP + QNNAM LENGTH
         LA    5,27(1,2)          END OF MIN NAME STRING
         MVI   0(5),C'('
         MVC   1(8,5),56(6)
         LA    3,=256X'00'
         OI    0(3),X'01'   ' ' OR 0
         OI    64(3),X'01'
         TRT   1(9,5),0(3)
         NI    0(3),X'00'
         MVI   0(1),C')'
@@@2     LM    3,5,MORESV1
@@@1     TM    11(6),16           EXCLUS
         LM    1,2,MORESV         POP  R2
         BC    8,@@@@@
         MVC   60(3,2),=C'<R>'
@@@@@    BAL   R10,RESOURCE       PUT IN RESOURCE INFO
         BC    15,QCBSAVE5
MORESV   DS    3F
MORESV1  DS    4F
QCBSAVE5 XC    BYTE#1(2),BYTE#1
         LA    R3,4(,R3)          NEXT ASVT ENTRY
         LH    15,#LINES
         LA    15,1(15)
         CH    15,=H'40'
         BC    11,WOTWAS23         THIS IS A BANDAID FOR SCREEN SPILL
         STH   15,#LINES
         BC    15,WOTWAS23-4
WOTWAS2  DC    F'0'
         ST    2,WOTWAS2
WOTWAS23 LA    R2,81(,R2)         NEXT BUFFER LINE (3270 CC @ FRONT)
         BCT   R9,NEXT1
OUT1     LA    1,40
         SLR   15,15
         ICM   15,3,#LINES
         SR    1,15
         BC    13,OUT
         L     2,WOTWAS2
         LA    2,80(2)
         BCT   1,*-4
         ST    2,WOTWAS2
OUT      BAL   R10,SPACES1        CALL SPACES (PUSH R10)
         TCLEARQ
         LR    3,2
         L     R2,MEMADDR+8       POINT TO VIDEO BUFFER
*        L     3,WOTWAS2          VID LENGTH
         SR    3,2                VID LENGTH
*        L     R3,=F'3450'
*        STFSMODE ON              FULLSCREEN MODE
*        STBREAK  NO              DONT INTERUPT
         TPUT  (2),(3),FULLSCR    NOWAIT
         TM    FLAGS,1            IS THIS AUTO MODE ???
         BC    8,NOAUTO           NO .. READ SCREEN
         STIMER WAIT,BINTVL==F'0500'
         TM    FLAGS,2            ALT/PA1 pressed ???
         BC    8,START            NO ... STAY IN AUTO MODE
         XC    FLAGS,FLAGS        CLEAR FLAGS FOR SELECT MODE
         MVC   MODE+7(6),=C'SELECT' CHANGE DISPLAY TO SELECT
         BC    15,START
#LINES   DC    H'0'
NOAUTO   EQU   *
         L     R2,MEMADDR+8       POINT TO VIDEO BUFFER
         L     R3,=F'20'
         TGET  (2),(3),ASIS       NOWAIT,BREAK
         CLI   0(R2),X'7D'        ENTER/RETURN PRESSED ?
         BC    8,SEL1             YES ..UPDATE OR SELECT ?
         OI    0(R2),X'30'        FORCE TO PFK24  AID
         CLI   0(R2),X'F3'        END ???? (Pfk 3)
         BC    8,END              NO ...STILL SELECT MODE
         LA    15,START
         CLI   0(2),C'8'          BATCH + STC ONLY ??
         BC    7,F9
         TM    MOREBITZ,1         DISABLE THIS SELECTION
         BC    7,F8A
         OI    MOREBITZ,1
         BCR   15,15
F8A      NI    MOREBITZ,254
         BCR   15,15
F9       CLI   0(2),C'9'          TSO ONLY ???
         BC    7,F7
         TM    MOREBITZ,2         DISABLE THIS SELECTION
         BC    7,F9A
         OI    MOREBITZ,2
         BCR   15,15
F9A      NI    MOREBITZ,253
         BCR   15,15
F7       CLI   0(2),X'F7'         NO INITS PLZ
         BC    7,YEZINITZ
         CLI   ##EXC$+9,C'n'
         BC    8,$2$
         MVC   ##EXC$+9(6),=C'noinit'
         BC    15,START
$2$      MVC   ##EXC$+9(6),=CL8' '
         BC    15,START
MOREBITZ DC    H'0'
YEZINITZ CLI   0(2),X'F6'         RMF ?
         BC    7,F1
         LA    0,8
         LA    1,=X'C31140403CF56F40'
         ICM   R1,8,=X'13'
         SVC   93
         LINK  DE=DE,DCB=0
         BC    15,START
F1       CLI   0(R2),X'F1'        END ???? (PFK 3)
         BC    7,AAAA             NO ...STILL SELECT MODE
         CLI   ##EXC$-1,C'r'
         BC    8,BBB
         MVI   PFEXCL+1,X'70'   RESERVED  DISPLAY ONLY
         MVC   ##EXC$-1(8),=C'reserved' EXCLUSIVE DISPLAY ONLY
         BC    15,START
BBB      MVC   ##EXC$-1(8),=CL8' '
         MVI   PFEXCL+1,C'0'    EXCLUSIVE DISPLAY ONLY
         BC    15,START
AAAA     CLI   0(R2),X'7C'        IS AUTO MODE REQD ?
         BC    7,START            NO ...STILL SELECT MODE
         OI    FLAGS,1            SET BIT 0 ON (AUTO MODE ON)
         MVC   MODE+7(6),=C'AUTO  ' CHANGE DISPLAY
         BC    15,START
SEL1     EQU   *                  GET ASID FROM CSR+1
         BAL   R10,CSROFF         GET CSR ADDR IN BUFFER IN R4
         XR    R6,R6              CLEAR
         XR    R7,R7              CLEAR;R4 > SF ATTR BYTE B4 ASID
         MVC   SAVE(2),2(R4)      SAVE CHAR ASID
         NC    2(2,R4),=X'0F0F'   NICK OFF ZONE
         IC    R6,2(,R4)          DECIMAL VAL NIBBLES
         ICM   R7,8,3(R4)         PUT THIS BYTE  UP HERE 0-F
         SLL   R7,4               PUT VITAL NIBBLE AT BITS 0-7
         SLDL  R6,8               SHIFT 1 BYTE (ALLOW FOR sign)
         O     R6,=F'15'          SIGN   R6 has ASID
         XC    PUSHPOP1(8),PUSHPOP1 CLEAR IT
         ST    R6,PUSHPOP1+4
         CVB   R6,PUSHPOP1        ASID HERE
         STH   R6,PUSHPOP1+6      SAVE ASID HERE
         L     R1,CVTPTR
         USING CVT,R1
         L     R3,CVTASVT         GET ASVT ADDR
         DROP  R1
         LA    R3,524(,R3)        ASVTFRST
SEL2     EQU   *                  GET ASID FROM CSR+1
         TM    0(3),128           ADDR SPACE UNASSIGNED ? (ASVTFRST)
         BC    8,*+12             YES ...
         LA    R3,4(,R3)          NEXT ASVT ENTRY (ASCB ADDR)
         BC    15,SEL2
         L     R2,0(,R3)          ASCB
         CH    R6,36(,R2)         CORRECT ASID ?
         LA    R3,4(,R3)          NEXT ASVT ENTRY (ASCB ADDR)
         BC    7,SEL2             NO TRY AGAIN
         ST    R2,ASCBADR         SAVE IT
         BC    15,*+8             MISS NEXT LOAD
SEL10    EQU   *
         L     R2,ASCBADR         POINT ASCB AGAIN TO RESTORE JOBNAME
         NI    FLAGS,239          RESET BIT 4 (BATCH JOB)
         L     R4,172(,R2)        ADDR IF INITIATED JOB (ASCBJBNI)
         LTR   R4,R4              STC,MOUNT,LOGON ???
         BC    7,*+12             NO .. BATCH
         L     R4,176(,R2)        ADDR IF STC,MOUNT,LOGON (ASCBJBNS)
         BC    15,*+8             this is real "heinz' stuff
         OI    FLAGS,16           THIS IS A BATCH JOB
         LTR   R2,R2              IS ADDR SPACE UA ?
         BC    8,START            OK GO BACK TO TOP PANEL
         MVC   ASIDNAME+2(2),SAVE GET CHAR ASID FROM WHERE I SAVED IT
         MVC   ASIDNAME+15(8),0(R4) JOBNAME
SEL3     EQU   *                  GET ASID FROM CSR+1
         BAL   R10,CPUUSED
         L     R1,CVTPTR
         L     R2,640(,R1)        CVTFQCB ADDR R2 FIRST MAJQCB
         USING QCB,R2
         L     R3,MEMADDR         START OF USER TABLE
         L     R4,=F'100'         100 ELEMENTS
SEL9     EQU   *
         L     R5,MAJFMIN         FIRST MIN
         USING MIN,R5
SEL8     EQU   *
         L     R6,MINFQEL         GET FIRST QEL ADDR
         LTR   R6,R6              LAST QEL ?
         BC    8,SEL6             YES..
         CLC   PUSHPOP1+6(2),14(R6)  IS THIS ASID QUEUED ON THIS ?
         BC    7,SEL6             NOPE..
         MVC   0(8,R3),MAJNAME    QNAME
         XR    R7,R7
         IC    R7,MINNAMEL        FORCE LENGTH OF MINOR CHAR NAME
         BCTR  R7,0               DEC FOR LENGTH
         STC   R7,8(,3)           SET LENGTH OF MIN QCB CHR
         STC   R7,*+5             set LENGth OF NSI
         MVC   9(52,R3),MINNAME   RESOURCE NAME IN TABLE
         MVC   63(1,R3),12(R6)    QEL FLAGS
         BCT   R4,*+8
         BC    15,SEL7
         LA    R3,65(,R3)         NEXT TABLE ELEMENT
SEL6     EQU   *
         L     R5,MINNMIN         NEXT MIN QCB FOR THIS RESOURCE
         LTR   R5,R5              WAS THUS LAST MINQCB FOR THIS MAJ ?
         BC    7,SEL8             NO .. MORE TO SEARCH
         L     R2,MAJNMAJ         NEXT MAJOR Q NAME
         LTR   R2,R2              LAST MAJQ ?
         BC    7,SEL9
         DROP  R2
         DROP  R5
SEL7     EQU   *
         L     R4,MEMADDR+8
         L     R5,=F'6000'        SET FOR BUFFER CLEAR
         BAL   R10,CLRBUFF        CLEAR VID BUFFER
         L     R2,MEMADDR+8       BASE ADDR FOR BUFFER
         MVC   0(63,R2),LIN3      TOP LINE OF USER PANEL
         MVC   62(36,R2),CPU      GET BOX STATS
         LA    R2,178(,R2)        space 2 plus cc's
         BAL   R10,STATUS1       MEM LOCATION
*        BAL   R10,TERM1         TSB INFO (APF) reqd
         MVC   0(99,R2),LIN7
         LA    R2,91(,R2)         NEXT LINE SCREEN
         MVC   6(94,R2),LIN8
*        LA    R2,88(,R2)         NEXT LINE SCREEN
*        MVC   0(80,R2),LIN6
*        LA    R2,92(,R2)         NEXT LINE SCREEN  $$$$$$$$$$$
         LA    R2,99(,R2)         NEXT LINE SCREEN  $$$$$$$$$$$
         MVC   0(80,R2),LIN9      TOTAL SESSION SERVICE
         LA    R2,82(,R2)         NEXT LINE SCREEN
         MVC   0(80,R2),LIN4      DATA HEADINGS
         LA    R2,160(,R2)         NEXT LINE SCREEN
         L     R3,MEMADDR         POINT TO USER TABLE
         LA    R4,32              SCREEN LINE COUNTER
SCRN1    EQU   *
         CLC   0(8,R3),=D'0'      TABLE END ?
         BC    7,*+8              YEP
         OI    FLAGS,8            DATS IT
         CLC   0(7,3),=C'SYSVSAM' THIS IS A SLACK WAY OF DOING THIS
         BC    7,#NORM           BUT IT AVOIDS UNNECESSARY SCREEN DISP
         TM    WASSYSV,1          WAS THE LAST GUY 'SYSVSAM' ???
         BC    7,#LABEL1          YEP .. DONT DISPLAY
         OI    WASSYSV,1          DISPLAY HIM ONLY ONCE
         NI    WASSYSV+1,X'00'    TS
         BC    15,*+8
#NORM    NI    WASSYSV,0
         MVC   0(8,R2),0(R3)      MOVE IN MAJNAME
         ST    R2,SAVE1           PUSH R2
         MVC   *+7(1),8(3)        ALTER LENGTH
         TRT   9(52,R3),STRCOMP   MINOR NAME PRINTABLE ?
         L     R2,SAVE1           POP  R2
         BC    7,*+10
         MVC   10(52,R2),9(R3)    MINOR NAME
#NORM2   TM    FLAGS,8            END OF TABLE (JUST NEED BLANKS)
         BC    7,#LABEL3          JUST PLOUGH THRU SCREEN BUFFER
         TM    63(R3),128         EXCLUSIVE NO RESERVE ?
         BC    7,#LABEL2          must be shared
         MVC   64(3,R2),=C'REX'
         TM    63(R3),16          RESERVE ?
         BC    7,#LABEL1          yes  ..
         MVC   64(3,R2),=C'EXC'
         BC    15,#LABEL1
WASSYSV  DC    D'0'
#LABEL2  EQU   *
         MVC   64(3,R2),=C'SHR'
         TM    63(R3),16          RESERVE ?
         BC    8,#LABEL1          NO   ..
         MVC   64(3,R2),=C'RSH'
#LABEL1  EQU   *
         LA    R3,65(,R3)         NEXT ENTRY
         TM    WASSYSV,1
         BC    8,#LABEL3
         TS    WASSYSV+1          FIRST SYSVSAM ??
         BC    4,SCRN1            NOPE
#LABEL3  LA    R2,80(,R2)         NEXT LINE SCREEN
         BCT   R4,SCRN1
         MVC   0(167,R2),LIN10    SE AREA
         LA    2,167(,2)
         TM    PFKOUCB,1          OUCB INFO ??
PFKOUCB  EQU   WASSYSV+4
         BC    7,TT               NOPE
         MVC   0(7,2),=X'116F6B3CF35040'
         LA    2,7(,2)
         BC    15,SCRN2
TT       BAL   3,RR
THISOUCB DS    F                  CURRENT ASCB'S OUCB ADDR
         USING OUCB,3
RR       L     3,0(,3)            ASCBOUCB
         ICM   7,15,OUCBSFL
         XR    8,8
         ICM   8,8,OUCBEFL
         ICM   8,4,OUCBUFL
         LA    1,32               COUNT 32 BITS
         LA    4,=C'.1'
         LA    5,VWOUCB            10*7
         LA    9,48               BIT COUNTER  (6BYTES)
         LA    10,8               COUNT
ZZ       XR    6,6
         SLDL  6,1                GET DER BIT
         LA    6,0(6,4)           ADDR CHR
         MVC   1(1,5),0(6)        ON OR OFF
         LA    5,1(,5)            10 CHRS ??
         BCT   10,*+12              DEC 10
         LA    5,2(,5)            SPACE'  '
         LA    10,8               COUNT
         BCT   1,Q
         LR    7,8
         LR    1,9
Q        BCT   9,ZZ
         DROP  3
         BAL   4,XX
STROUCB  DC X'116F6B1DE8',C'OUCB FLAGS (',X'1D60'
 DC C'ref',X'1DE8',C'DEBUGGING HANDBOOK OUCB',X'1D60',C'+x''10'' - +x'
 DC C'''24'' )',X'11F0F7',C'SFL',X'11F1C1',C'YFL',X'11F14B',C'AFL'
 DC X'11F1D5',C'TFL',X'11F15F',C'EFL',X'11F1E9',C'UFL',X'11F2C31DE8'
VWOUCB   DC    CL70' ',X'1D60'
VIEWEND  EQU   *
XX       DS    0H
         MVC   0(VIEWEND-STROUCB,2),0(4)
         LA    2,VIEWEND-STROUCB(,2)
SCRN2    EQU   *
         NI    FLAGS,X'F7'        RESET BIT 3
         MVC   LIN10A+120(32),=32C' ' CLEAR TPUT MSG area
         TCLEARQ OUTPUT
         LR    3,2
         L     R2,MEMADDR+8       POINT TO BUFFER
         SR    3,2                VIDEO RAM LENGTH
*        l     3,=F'3480'
         TPUT  (2),(3),FULLSCR
         L     R4,MEMADDR         CLEAR USER TABLE
         L     R5,=F'8192'        LENGTH
         BAL   R10,CLRBUFF        CLEAR TABLE WITH BLANKS
         TM    FLAGS,1            IS THIS AUTO MODE ???
         BC    8,SEL4             NO .. READ SCREEN
         STIMER WAIT,BINTVL==F'0500'
         TM    FLAGS,2            ALT/PA1 pressed ???
         BC    8,SEL10            NO ... STAY IN AUTO MODE
         XC    FLAGS,FLAGS        CLEAR FLAGS FOR SELECT MODE
         MVC   MODE2+7(6),=C'SELECT' CHANGE DISPLAY TO SELECT
         BC    15,SEL10           BYPASS "ACT .. ADDR SPACES"
SEL4     EQU   *                  GET ASID FROM CSR+1
         L     R2,MEMADDR+8       POINT TO VIDEO BUFFER
         L     R3,=F'200'
         TGET  (2),(3),ASIS       NOWAIT,BREAK
         OI    0(R2),X'30'       FORCE PfKS TO 1-12
         CLI   0(R2),C'3'        RETURN TO PRIM DISPLAY ? PF3
         BC    8,START            RETURN TO PRIMARY DISPLAY
         CLI   0(2),C'6'         ERB ?
         BC    7,FF1
         LA    0,8
         LA    1,=X'C31140403CF56F40'
         ICM   R1,8,=X'13'
         SVC   93
         LINK  DE=DE,DCB=0
         BC    15,SEL10
FF1      CLI   0(R2),C'1'        OUCB DISPLAY ??
         BC    7,SEL5
         TM    PFKOUCB,1          ALREADY ON ??
         BC    7,*+12
         OI    PFKOUCB,X'01'      NO TURN IT ON
         BC    15,*+8
         NI    PFKOUCB,X'00'
SEL5     EQU   *                  GET ASID FROM CSR+1
         CLI   0(R2),X'7C'       AUTO MODE ????  pf12
         BC    7,*+20             NO ...STILL SELECT MODE
         OI    FLAGS,1            SET BIT 0 ON (AUTO MODE ON)
         MVC   MODE2+7(6),=C'AUTO  ' CHANGE DISPLAY
         BC    15,SEL10           BYPASS "ACT .. ADDR SPACES"
         CLI   0(R2),X'7D'        ENTER/RETURN ?
         BC    7,SEL10            NO
         LA    R3,3(,R2)          3 PAST BUFFER
MDT1     EQU   *
         CLC   0(3,R3),=X'11F3D7' WANT DATA ONLY AFTER THIS FLD
         LA    R3,1(,R3)          NEXT BYTE
         BC    7,MDT1             CHECK NEXT STR
         CLC   2(118,R3),=118C' ' HAS FIELD BEEN CHGED ????
         BC    8,SEL10            NO .. dont send msg
         LA    R3,2(,R3)          POINT TO TEXT
         TM    FLAGS,16           BATCH ADDRESS SPACE ??
         BC    7,WTO              YEP ...SEND MSG TO OP
         L     R4,=F'118'         SEND THIS MANY CHARS
         TPUT  (3),(4),USERIDL=ASIDNAME+15
         LA    R5,TPUTREP         TELL SENDER WHY HIS SEND IS R/S
         MH    R15,=H'8'          GET TABLE OFFSET
         STC   R15,*+9            MOVE IN THE APPROPR ENTRY
         MVC   LIN10A+120(32),0(R5)
         OI    FLAGS,4            SOUND ALARM
         BC    15,SEL10
*        NUMBER OF ADDRSPC'S ACTIVE
TPUTREP  EQU   *                  REASON FOR BAD SEND
         DC    CL32'MSG SUCCESSFULLY SENT           '  0
         DC    CL32'MSG NOT SENT - NOWAIT SPECIFIED '  4
         DC    CL32'MSG NOT SENT - ALT/PA1   PRESSED'  8
         DC    CL32'MSG NOT SENT  -  NOT RECEIVING  '  C
         DC    CL32'MSG NOT SENT ... BAD PARMS      '  10
         DC    CL32'MSG NOT SENT - USER DISCONNECTED' 14
WTO      EQU   *
         MVC   WTOMSG(118),0(R3)  MOVE TEST TO WTO AREA
         CNOP  0,4                ALIGN this
         BAL   R1,WTO1            GET AROUND DC's
         DC    AL2(122)           MSG LENGTH + 4
         DC    F'0'               MCS FLAGS (routcode 2)
WTOMSG   EQU   *
         DC    118C' '            TEXT IN HERE
*        DC    F'0'
*        DC    X'C000'            ROUT CODES
WTO1     DS    0H
         SVC   35                 WTO
         LA    R5,WTOREP          RESULT OF WTO
         MH    R15,=H'8'          TABLE OFFSET
         STC   R15,*+9
         MVC   LIN10A+120(32),0(R5) WTO PROMPT
         BC    15,SEL10           BACK AGIN
WTOREP   EQU   *
         DC    CL32'MSG SENT TO OPERATOR'      0
         DC    CL32'ERROR in # lines .SOME MSG SENT ' 4
         DC    CL32'NO MATCH FOR ID IN R0 ..NOT SENT' 8
         DC    CL32'MSG NOT SENT - INVALID LINE TYPE' C
         DC    CL32'REQ FOR RCODE 11 - STILL SENT   ' 10
         DC    CL32'HARDCOPY ONLY - REQ IGNORED     ' 14
SPACES1  EQU   *
         L     2,WOTWAS2
         MVC   0(2,R2),=X'1D60'   PROT THIS FOR SKIP
         LH    R6,ADDRCNT
         LA    R2,81(,R2)         SPACE2 IN SCREEN BUFFER
         CVD   R6,WORK
*        MVC   0(3,2),=X'11F460'
         MVC   0(11,R2),=X'4040401DE8402020211D60'
         MVC   11(18,R2),=C'ADDR SPACES ACTIVE'
         ED    5(4,R2),WORK+6
         CLI   ##EXC$+9,C'n'
         BC    7,EDD              NO INITS REQD
      MVC   35(47,2),=C'(including  xxx  IDLE initiators + startings)'
         MVC   46(4,2),=X'40202120'
         LH    6,BYTE#1+2
         CVD   6,WORK
         ED    46(4,2),WORK+6
         MVC   45(2,2),=X'1DE8'
         MVC   50(2,2),=X'1D60'
EDD      XC    ADDRCNT,ADDRCNT    CLEAR THIS
         LA    2,80(2)            last length
         ST    2,WOTWAS2
         BR    R10                RET
RESOURCE EQU   *                  FIND THE RESOURCE COMMENT
         STM   R3,R5,PUSHPOP      SAVE DEM
         LA    R3,MAJNAMES        LOOK HERE FIRST
         L     R5,=A(ENDMINOR-MAJNAMES) SEARCH THIS AMT
         XR    R4,R4              ARRAY ELEMNTS IN R5
         D     R4,=F'24'          ? LINES TO SEARCH
FIND1    CLC   0(8,R3),2(R6)      SAME AS MAJOR NAME ?
         BC    8,*+14             YES
         CLC   0(8,R3),10(R6)     MINOR NAME ?
         BC    7,RET1-8
         MVC   65(16,R2),8(R3)    MOVE IN RESOURCE CMT
         BC    15,RET1
         LA    R3,24(,R3)         NEXT entry
         BCT   R5,FIND1           next ...
RET1     EQU   *
         LM    R3,R5,PUSHPOP      POP DEM
         BCR   15,R10             RET
FINDNAME EQU   *
*        THIS RTN SETS UP A TABLE FOR ALL MAJ AND MIN QCB
*        ENTRIES
*        USES ONLY THE FIRST MINOR QCB IN THE CHAIN
*        AS THERE IS NOT ENOUGH SPACE FOR DISPLAY
         ST    R10,SAVE1+4        PUSH R10 SP
         L     R2,CVTPTR
         USING CVT,R2
         L     R2,CVTFQCB         POINT TO FIRST QCB
         USING QCB,R2
         CNOP  0,4
         BAL   R3,*+8
         DS    F
         ST    R10,0(,3)
         BAL   10,###EXC
         L     10,0(,3)
         L     R10,SAVE1+4        POP  R10 SP
         BCR   15,R10             RET
         DROP  R2
LOOKUP1  EQU   *
PANEL1   EQU   *                  FORMAT SCREEN
         L     R2,MEMADDR+8
         MVC   0(99,R2),LIN1      SET UP FOR TPUT 57-4 (3270 cc)
*        LA    R2,80(,R2)         READJUST FOR 3270 CHARS
*        MVC   48(13,R2),=C'*************'
*        LA    R2,170(0,R2)       NEXT LINE
         LA    2,90(2)            NEXT LINE
         MVC   5(81,R2),LIN2      SET UP FOR TPUT 57-4 (3270 cc)
*        LA    R2,168(,R2)        START HERE FOR INFO(LINE 6)
         LA    R2,88(,R2)        START HERE FOR INFO(LINE 6)
         BCR   15,R10             adjust above offset for screen cc's
QCBCNT   EQU   *                  GET queue length
         STM   R4,R5,PUSHPOP1     SAVE THESE
         XR    R5,R5              ACCUM
         USING QCB,R2
         L     R4,MAJFMIN         POINT TO FIRST MIN
QCB1     EQU   *
         LA    R5,1(,R5)          INC R3
         L     R4,0(,R4)          GET ADDR OF NEXT MIN QCB
         LTR   R4,R4              0 IF LAST QCB
         BC    7,QCB1             NEXT
QCB2     EQU   *
         STH   R5,41(,R3)         SAVE IN QCB TABLE
         LM    R4,R5,PUSHPOP1     RESTORE THEM
         DROP  R2
         BCR   15,R10
CPUUSED  EQU   *                  CALC % CPU
         STM   R3,R5,PUSHPOP      PUSH THESE
         L     R1,CVTPTR          POINT TO CVT
         USING CVT,R1             CVT
         L     R3,CVTOPCTP        CVTOPCTP POINT TO RMCT
         L     R4,12(,R3)         RSM MGMT MCT
         L     R3,4(,R3)          CPU MGMT CCT
         LH    R3,110(,R3)        CPUTILP
*        LH    R4,RCVPTR          PAGING RATE FROM RCT(NOT AVAIL)
*        LH    R4,RCVASMQA        ASM Q LENGTH COUNT
         CVD   R3,WORK            DEC %
         MVC   CPU+5(4),=X'40202120'
         ED    CPU+5(4),WORK+6      CHAR
         L     R5,CVTPVTP         CVTPVTP POINT TO PVT
         LH    R5,2(,R5)          PVTAFC   AFC
         CVD   R5,WORK            DEC %
         MVC   CPU+17(4),=X'40202120'
         ED    CPU+17(4),WORK+6      CHAR
         LH    R4,56(,R4)         MVCSTCRI UIC
         CVD   R4,WORK            DEC %
         MVC   CPU+28(4),=X'40202120'
         ED    CPU+28(4),WORK+6      UIC
         MVC   CPU+9(2),=X'1D60'
         MVC   CPU+21(2),=X'1D60'
         MVC   CPU+32(2),=X'1D60'
         MVC   CPU+4(2),=X'1DE8'
         MVC   CPU+16(2),=X'1DE8'
         MVC   CPU+27(2),=X'1DE8'
         LM    R3,R5,PUSHPOP       PUSH THESE
         DROP  R1
         BCR   15,R10
STATUS   EQU   *                  FIND ADDSPACE STATUS (IN OUT ETC)
         STM   R3,R5,PUSHPOP      PUSH THESE
         L     R3,PUSHPOP+60      PICK UP SAVED ASCB ADDR
         L     R3,144(,R3)        SRM'S USER CB (ASCBOUCB)
         TM    17(R3),128         NON-SWAPPABLE    ?
         BC    1,STATOUT          IF MIXED ,BEING CONSIDERED FOR INOUT
         TM    16(R3),X'EC'       ANY SWAP NOTIONS ?
         BC    8,STATOUT          IF MIXED ,BEING CONSIDERED FOR INOUT
         BC    15,*+8             DONT HIGHLIT
STATOUT  EQU   *
         MVI   1(R2),X'C8'        IS SWAPPED IN (HILITE) UNPROT
         LM    R3,R5,PUSHPOP       POP  THESE
         BCR   15,R10
CSROFF   EQU   *                  CURSOR ADDR IN BUFFER
         XR    R4,R4
         XR    R5,R5              POINTS TO FIRST SBA
         L     R6,MEMADDR+8       GET ADDR OF SCREEN BUFFER
         IC    R4,1(,R6)          GET 1ST SCREEN ADDR OF CSR
         N     R4,=F'63'          WIPE OUT BITS 0-25
         IC    R5,2(,R6)          GET 2ND SCREEN ADDR  OF CSR
         N     R5,=F'63'          WIPE OUT 0-25 BITS
         SLL   R4,6               SHIFT 1ST ADDR TO LEFT
         AR    R5,R4              R5 HAS OFFSET FROM START OF SCREEN
         C     R5,=F'400'         MIN OFFSET REQD TO "MASTER"
         BC    4,START            JUST UPDATE SCREEN
         L     R4,MEMADDR+8       POINT TO BUFFER
         LA    R4,0(R5,R4)        ADDR OF CSR IN BUFFER(corrupted by
FINDX1D  EQU   *                  3270 CCs ..FIND SF CHAR NEAR ASID
         CLI   0(R4),X'1D'        FIND SF ORDER IN BUFFER
         LA    R4,1(,R4)          NEXT SCREEN BUFFER BYTE
         BC    7,FINDX1D          POINT 1 PAST SF ORDER
         BCR   15,R10
CLRBUFF  EQU   *                  CLEAR SCREEN BUFFER
*        SET UP R4 ,R5 WITH START AND LENGTH
         XR    R6,R6              2ND OP ADDR.. 0000
         LR    R7,R6              LENGTH
         ICM   R7,8,=X'00'        PAD CHAR IS 00
         MVCL  R4,R6              CLEAR IT !
         BCR   15,R10
STATUS1  EQU   *                  FIND ADDSPACE STATUS (IN OUT ETC)
         MVC   LIN5+5(3),=C'-  '
         MVC   LIN5+15(3),=C'-  '
         STM   R3,R7,PUSHPOP      PUSH THESE
         L     R3,ASCBADR         PICK UP SAVED ASCB ADDR
         USING ASCB,R3
         L     R4,ASCBOUCB        SRM CB
         ST    4,THISOUCB
         USING OUCB,R4
         TM    OUCBSFL,128        NON SWAPPABLE ?
         BC    8,*+14
         MVC   LIN5+5(3),=C'YNS'
         BC    15,STAT1OUT        NO RLS REQD
         TM    OUCBQFL,255        SWAPPING ?????
         BC    7,*+14             YES.....
         MVC   LIN5+5(3),=C'YIN'
         BC    15,STAT1OUT        NORLS REQD
         TM    OUCBQFL,128        >> ?
         BC    8,*+14
         MVC   LIN5+5(3),=C'Y>>'
         BC    15,RLS
         TM    OUCBQFL,64         << ?
         BC    8,*+14
         MVC   LIN5+5(3),=C'Y<<'
         BC    15,RLS
         TM    OUCBSFL,1          PRIV ?
         BC    8,*+14
         MVC   LIN5+5(3),=C'YPR'
         BC    15,RLS
         TM    OUCBEFL,64         TERMINAL WAIT ?
         BC    8,*+14             NOPE
         MVC   LIN5+5(3),=C'-WT'
         BC    15,RLS
         TM    FLAGS,16           BATCH JOB ???
         BC    8,*+12
         L     R9,MEMADDR+8       GET ADDR OF VIDEO BUFFER
         MVI   0(R9),C'G'         SWAPPED OUT AND BATCH .. ALARM !!!!!
         TM    OUCBEFL,1          MSO DETECTED WAIT ?
         BC    8,*+14
         MVC   LIN5+5(3),=C'-WM'
         BC    15,RLS
         MVC   LIN5+5(3),=C'-WL'  MUST BE LONG WAIT
RLS      EQU   *
         LA    R5,10                 10 POSSIBILITIES....
         LA    R6,SWAPREAS           POINT TO RLS TABLE
RLS1     EQU   *
         CLC   0(1,R6),OUCBSRC
         BC    8,*+22
         LA    R6,4(,R6)          NEXT entry
         BCT   R5,RLS1
         MVC   LIN5+15(3),=C'-  ' BLANK
         BC    15,STAT1OUT
         MVC   LIN5+15(3),1(R6)   GET RLS
         BC    15,STAT1OUT
STAT1OUT EQU   *
         TM    OUCBAFL,16         CPU HOG ??
         BC    8,*+20             NO
         MVC   PWD+9(12),=C'YCPU HOG !!!'
         MVC   PWD+22(2),=X'1D60'
         BC    15,*+16
         MVC   PWD+9(12),=C'            '
         MVC   PWD+22(2),=X'1D60'
         L     R5,OUCBCPU         GET CPU SERV
         CVD   R5,WORK            DEC PLZ
         MVC   LIN8+4(8),=X'4020202020202120'
         ED    LIN8+4(8),WORK+4
         L     R5,OUCBIOC         GET I/O SERV
         CVD   R5,WORK            DEC PLZ
         MVC   LIN8+18(8),=X'4020202020202120'
         ED    LIN8+18(8),WORK+4
         L     R5,OUCBMSO         GET MSO SERV
         CVD   R5,WORK            DEC PLZ
         MVC   LIN8+32(8),=X'4020202020202120'
         ED    LIN8+32(8),WORK+4
         L     R5,OUCBWMS         GET TOT SERV
         CVD   R5,WORK            DEC PLZ
         MVC   LIN8+47(8),=X'4020202020202120'
         ED    LIN8+47(8),WORK+4
         MVC   LIN8+3(2),=X'1DE8'
         MVC   LIN8+17(2),=X'1DE8'
         MVC   LIN8+31(2),=X'1DE8'
         MVC   LIN8+46(2),=X'1DE8'
         XR    R5,R5
         IC    R5,OUCBDMN         DOMAIN
         CVD   R5,WORK
         MVC   LIN7+4(4),=X'40202120'
         ED    LIN7+4(4),WORK+6
         MVC   LIN7+3(2),=X'1DE8'
         XR    R6,R6
         IC    R6,OUCBNPG         PERFORM GP
         CVD   R6,WORK
         MVC   SAVE1(4),=X'40202120'
         ED    SAVE1(4),WORK+6
         MVC   LIN7+14(2),SAVE1+2
         XR    R6,R6
         XC    WORK(8),WORK        CLEAR
         MVC   WORK+7(1),OUCBNDP   GET DPRTY
         NI    WORK+7,15           KILL ZONE (LOW BYTE)
         IC    R6,OUCBNDP           PERFORM GRP NUMB
         SRL   R6,4                 del right nibble
         STC   R6,WORK+6            STORE HI ORD BYTE
         TR    WORK+6(2),=C'0123456789ABCDEF'
         MVC   LIN7+22(2),WORK+6  PUT IN DPRTY
         L     R5,OUCBIOSM        GET EXCP COUNT
         MVC   SAVE1(8),=X'4020202020202120'
         CVD   R5,WORK
         ED    SAVE1(8),WORK+4
         MVC   LIN8A(7),SAVE1+1
         LH    R5,OUCBNQC         OUTSTANDING ENQ HOLDS
         CVD   R5,SAVE1
         MVC   WORK(4),=X'40202120'
         ED    WORK(4),SAVE1+6
         MVC   PWD+5(3),WORK+1
         LH    R5,OUCBWSS         WORKING SET
         MVC   WORK(4),=X'40202120'
         CVD   R5,SAVE1
         ED    WORK(4),SAVE1+6
         MVC   LIN8A+13(3),WORK+1
         LH    R5,OUCBPSO         PAGES LAST SWAPPED OUT
         MVC   WORK(4),=X'40202120'
         CVD   R5,SAVE1
         ED    WORK(4),SAVE1+6
         MVC   LIN8B+2(3),WORK+1
         TM    ASCBDSP1,X'E0'     DESPATCHABLE ?
         BC    7,NONDESP
         LH    R5,ASCBSEQN        DESPATCHER POS.
         MVC   SAVE1(7),=X'1D402021201D60'
         CVD   R5,WORK
         ED    SAVE1+1(4),WORK+6
         MVI   SAVE1+1,C'Y'       HILITE
         MVC   LIN5A+6(2),SAVE1+3
         LH    R4,ASCBFMCT        RSF COUNT
         MVC   SAVE1(6),=X'402020202120'
         CVD   R4,WORK
         ED    SAVE1(6),WORK+5
         MVC   LIN5A+18(3),SAVE1+3
         BC    15,NONDESP+12
NONDESP  EQU   *
         MVC   LIN5A+6(2),=C'  '
         MVC   LIN5A+18(3),=C'   '
         L     R4,ASCBOUXB        SRM EXTN
         USING OUXB,R4
         L     R4,OUXBJBS         SESSION SERVICE ACCUM
         CVD   R4,WORK
         MVC   LIN9+15(12),=X'1DE840202020202021201D60'
         ED    LIN9+17(8),WORK+4
         LM    R3,R7,PUSHPOP      POP  THESE
         BCR   15,R10
         DROP  R4
TERM1    EQU   *
         STM   R3,R6,PUSHPOP      PUSH THESE
         L     R3,ASCBADR         PICK UP SAVED ASCB ADDR
         USING ASCB,R3
         L     R4,ASCBTSB         TSO CB
         LTR   R4,R4              NOT LOGON ?
         BC    8,TERM1OUT
         MVC   LIN6+14(3),=C'yes'
         TM    25(R4),64         SPF ??
         BC    8,*+14
         MVC   LIN6+14(3),=C'no '
         LH    R5,82(,R4)         UNCOVER ADDR
         CVD   R5,WORK
         ED    LIN6+4(4),WORK+6
         MVC   LIN6+21(8),88(R4)
TERM1OUT EQU   *
         LM    R3,R6,PUSHPOP      POP  THESE
         BCR   15,R10
         DROP  R3
CANTDO   EQU   *
         TPUT  XXX,70
         BC    15,END1
XXX      DC    CL80'****** WARNING .. can t get storage ....see W.T'
         DC    30C' '
BUGGARD1 EQU   *
         TPUT  BUG1,L'BUG1
         BC    15,END1
         DS    0F
BUG1     DC    CL80'***** ERROR IN STAX .... BAD LUCK ****'
BADNEWS1 EQU   *
         TPUT  NEW1,80
         TPUT  NEW1+80,80
         BC    15,END1
         DS    0F
NEW1     DC    CL80'IKJTMP7801I             INSUFFICIENT DISPLAY AREA'
         DC    CL80'IKJTSSMN02I  3270-4 DISPLAY SCREEN IS REQUIRED FOR +
               THIS DISPLAY'
BADNEWS2 EQU   *
         MVC   NEW2+29(8),0(R1)            GET USERID IN HERE
         TPUT  NEW2,80
         BC    15,END1
         DS    0F
NEW2     DC    CL80'IKJ55000I *** WARNING ***            NOT AUTHORISED+
                TO USE DISPLAY'             +28
***********************************************************************
**********      TERMINATION                                ************
***********************************************************************
END      DS 0H
         FREEMAIN  R,LV=458752,A=MEMADDR    FREE UP ALL MEM
END1     DS 0H
         STAX
         LA    0,8                    ORD LENGTH
         LA    1,=X'C31140403CF56F40' RA SCREEN END BLANK
         ICM   R1,8,=X'13'            NOWAIT,FULLSCR
         SVC   93
         L     13,0(,12)
         L     R13,SV13
         LA    15,0
         LM    14,12,12(13)
         BR    14
         LTORG
         EJECT
LIN1     EQU   *       l(55)
         DC    X'C31140401D60'    PROT RES MDTS..
MODE     EQU   *
         DC    C'MODE',X'1DE813',C'SELECT',XL20'40' 19+23IC MDT OFF
##EXC$   EQU   *-16
         DC    X'1DE8',C'E N Q U E U E',X'1D60'    55 PROT
         DC    2C' '
CPU      EQU   *
         DC    C'CPU=',CL7' ',C' AFC=',CL7' ',C'UIC='  27
         DC    30C' '
LIN2     EQU   *      l(77)
         DC    C'ASID  JOBNAME  MAJQNAME  MINQNAME (',X'1DE8'  SKIP
         DC    C'1st QCB',X'1D60',C'level',X'1DE8',C'ONLY',X'1D60',C')'
         DC    C' EXCLR   RESOURCE',10C' '
ENDLIN   EQU   *
LIN3     EQU   *      l(77)
         DC    X'C31140401D60'
MODE2    EQU   *
         DC    C'MODE',X'1DE800',C'SELECT',X'1D60',CL6' ',C'ASID'
ASIDNAME EQU   *
         DC    X'1DE840401D60',C' USERID',X'1DE8',CL8' ',X'1D60' 24
         DC    90C' '
LIN4     EQU   *      l(77)
         DC    C'MAJQNAME  RESOURCE-NAME'
         DC    90C' '
LIN6     EQU   *
         DC    C'TERM',X'40202120',C'  SPF    PWD  secret '
         DC    90C' '
LIN7     EQU   *
         DC    C'DMN',CL5' ',X'1D60',C'PG',X'1DE840401D60',C'DP'
         DC    X'1DE840401D60'
LIN5     EQU   *
         DC    C' CL=',X'1D6040401D60',C'RLS=',X'1D6040401D60'
LIN5A    EQU   *
         DC    C'DPOS',X'1DE840401D60',C'FRAMES',X'1DE84040401D60'
PWD      EQU   *
         DC    C'OEH',X'1DE84040401D60'
         DC    90C' '
LIN8     DC   C'CPU',9C' ',X'1D60',C'IOC',9C' ',X'1D60',C'MSO',9C' '
         DC    X'1D60',C'SRVC',9C' ',X'1D60',C'EXCPS',X'1DE8'
LIN8A    DC    7C' ',X'1D60',C'WS',X'1DE84040401D60',C'PGOT'
LIN8B    DC    X'1DE8',3C' ',X'1D60'
         DC    90C' '
LIN9     DC    CL80'SESSION SERVICE'
LIN10    DC    X'11F3501DE8',C'====>',X'1DC113'
LIN10A   DC    118C' ',X'1DE8',32C' ',X'1D60',40C' ' SPILL
         DS    0D
STRCOMP  DC    64X'FF',X'00',10X'FF',X'00',117X'FF',63X'00'
         DS    0D
UPPER1   DC    65C' ',10C' ',C'.',117C' ',C'ABCDEFGHI',7C' '
         DC    C'JKLMNOPQR',8C' ',C'STUVWXYZ',6C' ',C'0123456789'
         DC    6C' '
MAJNAMES EQU   *
         DC    CL24'SYSZOPENsystem datasets '
         DC    CL24'SYSZPSWDpswd dset proces'
         DC    CL24'SYSZVMV VIO  vols       '
         DC    CL24'SYSZVOLSall alloc"d vols'
         DC    CL24'SYSZTIOTtiot processing '
         DC    CL24'SPFDSN  SPF activity    '
         DC    CL24'SPFUSER SPF is active   '
         DC    CL24'SYSIGGV1mastercat search'
         DC    CL24'SYSIGGV2usercat search  '
         DC    CL24'SYSIEWLPlink editing    '
         DC    CL24'SYSLMOD link-ed reserve '
         DC    CL24'SYSSMF01SMF buffer write'
         DC    CL24'SYSZSMF1SMF buffer write'
         DC    CL24'SYSZUSRLuser label pro.s'
         DC    CL24'SYSVSAM getting ACB info'
         DC    CL24'SYSVTOC vtoc reserve    '
         DC    CL24'SYSZIGGITSB construction'
         DC    CL24'SYSZISTOrestart d/set   '
         DC    CL24'SYSZSIPSIPS now reset   '
         DC    CL24'SYSIKJBCsend/rec TSO msg'
         DC    CL24'SYSDSN  enq sys/usr dset'
         DC    CL24'IKJTMPNMTSO driver ohead'
         DC    CL24'SYSSJWTPWTP messages    '
         DC    CL24'SYSIEA01ABEND in progres'
         DC    CL24'SYSZCSD CSD area update '
         DC    CL24'SYSZEC16PURGE d/set pro.'
         DC    CL24'SYSZPCCBprivate cat c.b.'
         DC    CL24'SYSZPGADPAGEADD cmd enq '
         DC    CL24'SYSZJES3needs SPOOL spc '
MINNAMES EQU   *
         DC    CL24'RECORDERlogrec buffer'
         DC    CL24'CHNGDEVSUCB manipulation'
         DC    CL24'ALLOCTP TP  device      '
         DC    CL24'DDRTPUR swap device     '
         DC    CL24'DDRDA   swap DASD device'
         DC    CL24'Q4      UCB manipulation'
         DC    CL24'Q6      prot key altered'
         DC    CL24'Q10     CSCB chain manip'
         DC    CL24'RPPL    job jnl dataset '
         DC    CL24'STCQUE  STC (mount .etc)'
         DC    CL24'TSOQUE  TSO datasets    '
         DC    CL24'VARYDEV UCB config mods '
         DC    CL24'ACTIVE  RMF is active   '
         DC    CL24'CPU     reconfig command'
         DC    CL24'VALIDATEstrg valid proc '
         DC    CL24'CKPT    JES3 chkpt ds   '
         DC    CL24'OPENUADSsecret stuff .. '
         DC    CL24'M4LIB   a cpu cruncher  '
         DC    CL24'UCCONEQNTMS activity    '
         DC    CL24'SYSIKJUAforeground TSO  '
         DC    CL24'PURGE   purge dataset   '
         DC    CL24'CSDSPUJSCSD field update'
         DC    CL24'CAXW    cat aux workarea'
         DC    CL24'PCCB    cb update serial'
*        DC    CL24'PAGEADD command serializ'
*        DC    CL24'JSCBWTP jobstep/msg dset'
*        DC    CL24'IEA     dump dataset'
         DC    CL24'SPOOL   need spool space'
         DC    CL24'MCATOPENmaster cat (deq)'
         DC    CL24'RBA     tso brodcast ds '
ENDMINOR EQU   *                            '
SWAPREAS EQU   *                  FIND SWAP REASON
         DC    X'0D',C'-FS'
         DC    X'0C',C'-LS'
         DC    X'0B',C'-TS'
         DC    X'0A',C'YUS'
         DC    X'09',C'YEX'
         DC    X'08',C'YEQ'
         DC    X'07',C'-RQ'
         DC    X'06',C'-DW'
         DC    X'05',C'-RS'
         DC    X'04',C'-US'
         DC    X'03',C'-XS'
         DC    X'02',C'-TI'
         DC    X'01',C'YTO'
SWAPEND  EQU   *                            '
PUSHPOP  DS    8D                 STACK 16 REGS HERE
PUSHPOP1 DS    4D                 STACK 8  REGS HERE
ADDRCNT  DS    H                  ADDR SPACE COUNT
LASTQCB  DS    F                  ADDR LAST MINOR QCB
TABSAV1  DS    F                  ADDR MAJ MIN TABLE ELEMENT
ASCBADR  DS    F                  ADDR OF ASCB FOR STAtus1 INFO
MEMS     EQU   *                  LIST OF STORAGES FOR GETMAIN
         DC    F'6400'            USER TABLE (64*100) entries
         DC    F'2880'            MAJMINTB   (48*60 ) entries
         DC    F'3480'            SCREEN BUFFER
MEMADDR  EQU   *                  ADDR ARE STORED HERE
         DC    F'0'               USER TABLE
         DC    F'0'               MAJMINTB
         DC    F'0'               SCREEN BUFFER
QELTAB   DS    3F
*        R2 = FQCB
* R9 = MAJFMIN
###EXC   EQU   *
         STM   R1,R9,NINEFWDS
         L     R4,QELTAB          CLEAR THE TABLES
         L     5,=F'249456'
         XR    R6,R6
         LR    R7,R6
         ICM   R7,8,=X'00'
         MVCL  R4,R6
         L     R1,QELTAB
         L     R8,QELTAB+4        2ND TAB
         LR    R3,R2              1ST QCB
         LTR   R3,R3              NO QCB'S ??
         BC    8,$#$              RET
         USING QCB,3
         STM   1,2,@@SAVE
NEWMAJ   TRT   MAJNAME(8),STRCOMP
         LM    1,2,@@SAVE
         BC    7,$#$
         L     R4,MAJFMIN         1ST QCB
         LTR   R4,R4              ENQ QCB CHAIN ??
         BC    8,ENDMIN           BAIL
NEWMIN   LR    7,1                TAB#1
         USING MIN,4
         L     R5,MINFQEL
*        C     5,MINLQEL          LAST QEL ??
*        BC    8,ENDMIN
         LTR   R5,R5              ENQ QEL CHAIN ??
         BC    8,ENDQEL           BAIL
         USING QEL,5
QELASK   TM    QELQFLGS,128       JUST SHR ??????? ??
         BC    8,NOSHR            SHARED
         TM    QELQFLGS,16        SHRED WITH RES ????
         BC    8,SHRED            SHARED
NOSHR    MVC   0(2,7),QELASID
         MVC   2(1,7),QELQFLGS
         LA    7,3(,7)            END TAB#1
SHRED    LR    9,5
         L     5,QELNQEL          NEXT QEL
         LTR   5,5                LAST  IN CHAIN ??
         BC    7,QELASK           NO
         LR    6,1                TAB#1
XCLUSIVE TM    2(6),16            RSV  ?
PFEXCL   BC    15,XCLUS2
XCLUSIV3 LA    6,3(,6)
         CR    6,7
         BC    11,ENDQEL
         BC    15,XCLUSIVE
@@SAVE   DS    D
         USING QEL,9
XCLUS2   MVC   0(2,8),QELASID
         MVC   2(8,8),MAJNAME
         MVC   10(1,8),MINNAMEL   RESOUCE CHR LENGTH FOR TRT
         MVC   11(1,8),QELQFLGS
         MVC   *+7(1),MINNAMEL
         MVC   12(0,8),MINNAME
         LA    8,64(,8)
         BC    15,XCLUSIV3
ENDQEL   C     4,MAJLMIN          WAS THIS LAST MINQCB ??
         BC    8,ENDMIN
         L     4,MINNMIN          NXT MIN
         LTR   R4,R4
         BC    8,ENDMIN
         BC    7,NEWMIN
ENDMIN   L     3,MAJNMAJ
         LTR   3,3
         BC    7,NEWMAJ
$#$      ST    8,QELTAB+8
         LM    1,9,NINEFWDS
         BCR   15,10
NINEFWDS DS    9F
         CVT   DSECT=YES
         IHAQCB                    QCB  MAPPER
         IHAASVT                   ASVT MAPPER
         IHAASCB                   ASCB MAPPER
         IRAOUCB                   OUCB MAPPER
         IHAOUXB                   OUXB MAPPER
         IHAQEL                    OUXB MAPPER
         END   ,
/*
