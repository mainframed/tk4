*
*           THE DSCAN COMMAND WILL SCAN ALL MEMBERS OF A PARTITIONED DAT
*         DISPLAY LINES WHICH CONTAIN THE STRING(S) PASSED AS PARAMETERS
*         20 STRINGS MAY BE SEARCHED FOR CONCURRENTLY. THE DATASET NAME
*         REQUESTED AND SHOULD BE ENTERED IN FULL WITHOUT QUOTES.
*         THE COMMAND USES THE DDNAME SYSLIB SO ENSURE THIS IS FREED BEF
*
*            THE COMMAND IS :
*
*                  DSCAN STRING1,STRING2,.....STRINGN
*
*         THE MAXIMUM STRING LENGTH IS 8 CHARACTERS, IMBEDDED BLANKS ARE
*         ALLOWED - DELIMITERS ARE COMMAS
*
*         EXAMPLE:
*         SEARCH THE DATASET SM00.BANK.DOC FOR THE STRINGS VTAM AND NCP.
*        YOU ENTER                 DSCAN VTAM,NCP
*        COMMAND PROMPT            ENTER DATASET NAME
*        YOU ENTER                 SM00.BANK.DOC
*        STRING NOT FOUND          PROCESSING AAAAA
*        STRING FOUND IN           PROCESSING BBBBB
*        THIS LINE                 THE PRODUCTS ACF VTAM AND ACF NCP ARE
*
*
*
DSCAN     TITLE  'DSCAN   SCAN DATASET FOR VARIOUS FIELDS  B SAWARD'
*
*
*
*        THIS PROGRAM WILL SCAN ALL THE MEMBERS OF THE DATASET AT
*        DD SYSLIB AND PRINT DETAILS OF THOSE MEMBERS WHICH CONTAIN
*        THE FIELD(S) PASSED AS PARAMETERS. THE PRINT DATASET IS
*        SYSPRINT. THE LRECL OF THE DATASET MUST BE 80
*
*        E.G.    PARM='VOL=,LABEL='
*
*  WILL PRINT ALL LINES CONTAINING THE FIELD 'VOL=' AND/OR 'LABEL='
*
*  MAXIMUM NUMBER OF PARAMETERS IS 20 AND EACH HAS A MAXIMUM LENGTH OF
*  8 CHARACTERS. EXCESSES WILL BE IGNORED AND TRUNCATED RESPECTIVELY.
*
         EJECT
***********************************************************************
**********      INITIALISATION                             ************
***********************************************************************
         PRINT NOGEN
DSCAN    CSECT
         USING *,R12
         B     24(R15)
         DC    CL8'DSCAN'
         DC    CL4'&SYSTIME'
         DC    CL8'&SYSDATE'
         STM   R14,R12,12(R13)
         LR    R12,R15
         LR    R9,R1               SAVE POSSIBLE PARM PTR
         GETMAIN R,LV=16000        GET SOME STORAGE TO PLAY WITH
         LTR   R15,R15
         BNZ   ERROR1              SOMETHING WRONG HERE
         ST    R13,4(R1)           FORWARD CHAIN
         ST    R1,8(R13)           BACKWARD CHAIN
         LR    R13,R1              SET SAVEAREA PTR
         LA    R10,72(R1)          SET POINTER TO FREE STORAGE
         B     START
         EJECT
***********************************************************************
**********      CONSTANTS                                  ************
***********************************************************************
         SPACE 2
         REGEQU
WORK     DS    D
PCHK     DC    H'0'
BUFFERL  DC    H'0'                INPUT BUFFER LENGTH
BUFFER   DC    A(0)                INPUT BUFFER ADDRESS
SVJOB    DS    CL8' '
SVSTEP   DC    CL8' '
INBUFFER DC    CL256' '
MSG1     DC    CL20'PROCESSING DDDDDDDD'
*
TBPARM   DS    0H
*   THIS IS THE PARAMETER TABLE WHICH IS BUILT FROM THE PARAMETERS
*   PASSED. IT IS GENERATED WITH 20 EMPTY ENTRIES AND IS USED
*   IN THE LINE SCAN ROUTINE.
*
TBPARM1  DC    22X'004040404040404040'
TBPARME  DC    X'FF'
*
DIRECT   DCB   DDNAME=SYSLIB,RECFM=F,BLKSIZE=256,DSORG=PS,             X
               MACRF=(GM),LRECL=256
SYSLIB   DCB   DDNAME=SYSLIB,DSORG=PO,EODAD=ENDINP,                    X
               MACRF=(R),SYNAD=PCHK
SYSPRINT DCB   DDNAME=SYSPRINT,RECFM=FBA,LRECL=121,MACRF=(PM),         X
               BLKSIZE=4840,DSORG=PS
*
MVCPARM  MVC   1(0,R5),0(R4)       SHIFT IN THE PARM
CLCSCAN  CLC   1(0,R4),0(R5)       LOCATE THE GOODIES
ALLOCMSG DC    CL80'ALLOCATION ERROR INFO=0000 ERROR=0000 RC=00 '
TBCHAR   DC    C'0123456789ABCDEF'
         EJECT
***********************************************************************
**********      DYNAMIC ALLOCATION BLOCKS                  ************
***********************************************************************
         SPACE 2
RBPTR    DS    0F                 POINTER TO REQUEST BLOCK
         DC    X'80'
         DC    AL3(RB)
*
RB       DC    X'14012000'        LENGTH,VERB,FLAGS
RBERR    DC    XL2'0'             ERROR REASON CODE
RBINFO   DC    XL2'0'             INFORMATION REASON CODE
RBTXT    DC    A(TEXT),2F'0'      ADDRESS OF TXT UNITS,RES AND FLAGS
*
TEXT     DC    A(TDDNAME)           POINTER TO DSNAME TEXT
         DC    A(TDSNAME)           POINTER TO DSNAME TEXT
         DC    A(TSTATUS)           POINTER TO STATUS TEXT
         DC    X'80',A(TDISP)       POINTER TO DISP TEXT
TDDNAME  DC    AL2(1),AL2(1),AL2(L'DDNAME) DDNAME
DDNAME   DC    C'SYSLIB'
TDSNAME  DC    AL2(2),AL2(1),AL2(L'DSNAME) DSNAME
DSNAME   DC    CL44' '
TSTATUS  DC    AL2(4),AL2(1),AL2(1),AL1(8) STATUS SHR
TDISP    DC    AL2(5),AL2(1),AL2(1),AL1(8) DISP KEEP
*
RBPTR1   DS    0F                 POINTER TO REQUEST BLOCK
         DC    X'80'
         DC    AL3(RB1)
*
RB1      DC    X'14022000'        LENGTH,VERB,FLAGS
RBERR1   DC    XL2'0'             ERROR REASON CODE
RBINFO1  DC    XL2'0'             INFORMATION REASON CODE
RBTXT1   DC    A(TEXT1),2F'0'     ADDRESS OF TXT UNITS,RES AND FLAGS
*
TEXT1    DC    X'80',AL3(TDDNAME)   POINTER TO UNALLOC TEXT
         EJECT
***********************************************************************
**********       PROCESS THE PARAMETER LIST                 ***********
***********************************************************************
START    DS    0H
         L     R2,0(R9)            ADDRESS THE PARAMETER LIST LENGTH
         LH    R3,0(R2)            PICK THE PARAMETER LIST LENGTH
         LA    R4,2(R2)            SET PARAMETER POINTER
         CLI   2(R2),X'00'         IS IT A TSO COMMAND ?
         BNE   PARMCHK
         LA    R4,2(R4)            ADJUST FOR TSO COMMAND
         SH    R3,=H'4'
         SH    R3,2(R2)            ADJUST FOR TSO COMMAND
         AH    R4,2(R2)            SET TO REAL PARMS
PARMCHK  DS    0H
         LTR   R3,R3               IS THERE ANY PARAMETER ?
         BNP   ERROR2              NO ERROR   MUST BE SOMETHING
         LA    R5,TBPARM1          SET POINTER TO 1ST RESULT FIELD
PARMLP1  DS    0H
         LR    R6,R4               SET INPUT INDEX
         CLI   0(R5),X'00'         IS THIS ENTRY FREE ?
         BE    PARMFREE
         CLI   0(R5),X'FF'         IS TABLE FULL?
         BE    PARMFULL            YES
         LA    R5,9(,R5)           BUMP OUTPUT POINTER
         B     PARMLP1
PARMFULL DS    0H
         WRTERM 'MORE THAN 20 PARAMETERS  EXCESS IGNORED'
         B     OPENDIR
PARMFREE DS    0H
         CLI   0(R6),C','          FIND THE COMMA
         BE    PARMEND             GOT IT
         OI    0(R6),C' '          TO UPPER CASE PLS
         LA    R6,1(,R6)           BUMP THE INDEX
         BCT   R3,PARMFREE         GO FIND IT
PARMEND  DS    0H
         SR    R6,R4               GET THE LENGTH
         CH    R6,=H'8'            TOO LONG ?
         BNH   NOTRUNC1            NO
         MVI   0(R5),X'08'         LENGTH TO THE TABLE
         MVC   1(8,R5),0(R4)       PICK UP 1ST 8 BYTES
         B     NOTRUNC2            TRUNCATED
NOTRUNC1 DS    0H
         STC   R6,0(R5)            LENGTH TO THE TABLE
         EX    R6,MVCPARM
         LA    R7,1(R5,R6)         SET TO END OF PARAMETER
         MVI   0(R7),C' '          CLEAN UP THE COMMA
NOTRUNC2 DS    0H
         LA    R4,1(R6,R4)         SET INPUT POINTER
         BCTR  R3,0                ADJUST BYTE COUNTER
         CH    R3,=H'1'            IS THERE ANYTHING LEFT ?
         BNL   PARMLP1             YES
         EJECT
***********************************************************************
**********      OPEN THE DIRECTORY AND CREATE BLDL LIST    ************
***********************************************************************
         SPACE 2
OPENDIR  DS    0H
         WRTERM 'ENTER DATASET NAME WITHOUT QUOTES'
         RDTERM INBUFFER
         OC    DSNAME,INBUFFER     PICK UP DSNAME IN UPPER CASE
         LA    R1,RBPTR
         SVC   99                  DYNAMICALLY ALLOCATE
         LTR   R15,R15             WAS ALLOC OK ?
         BNZ   ALLOCERR            NO   TELL ABOUT THE ERROR
         MVI   TBPARME,X'00'       END OF THE WORLD
         OPEN  DIRECT
         SR    R5,R5               CLEAR COUNTER FOR MEMBER
         LR    R6,R10              PICK UP FREE STORAGE POINTER
         MVC   2(2,R6),=H'12'      SET ENTRY LENGTH IN BLDL LIST
         LA    R6,4(R6)            SET POINTER
PROCESS  DS    0H
         GET   DIRECT,INBUFFER     READ A DIRECTORY BLOCK
         LH    R2,INBUFFER         PICK UP THE LENGTH
         LA    R3,INBUFFER+2       SET POINTER TO THE FIRST ENTRY
         SH    R2,=H'2'            ADJUST FOR THE LENGTH
NEXTMEM  DS    0H
         CLI   0(R3),X'EA'         OVER THE TOP ??
         BNL   ENDDIR              YES
         TM    11(R3),X'80'        IS IT AN ALIAS ?
         BO    ALIAS               YES
         MVC   0(8,R6),0(R3)       SHIFT THE MEMBER TO BLDL LIST
         LA    R5,1(,R5)           BUMP MEMBER COUNTER
         LA    R6,12(,R6)          BUMP MEMBER COUNTER
ALIAS    DS    0H
         ICM   R4,B'1000',11(R3)   PICK UP THE LENGTH
         SLL   R4,3                STRIP OF THE RUBBISH
         SRL   R4,26               GET NUMBER OF OPTIONAL BYTES
         LA    R4,12(R4)           ADD IN THE FIXED BIT
         AR    R3,R4               BUMP TO THE NEXT ONE
         SR    R2,R4               DECREMENT COUNTER
         BP    NEXTMEM             GO DO THE NEXT ONE
         B     PROCESS             DO ALL DIRECT BLOCKS
         EJECT
***********************************************************************
**********      OPEN THE DATASET AND BLDL                  ************
***********************************************************************
         SPACE 2
ENDDIR   DS    0H
         CLOSE DIRECT
DIRBLDL  DS    0H
         XC    INBUFFER,INBUFFER   CLEAR
         OPEN  SYSLIB              OPEN THE FILE FOR INPUT
         OPEN  (SYSPRINT,(OUTPUT)) OPEN THE PRINTER
         STH   R5,0(R10)           PUT MEMBER COUNT INTO BLDL LIST
         BLDL  SYSLIB,(10)
         LTR   R15,R15
         BNZ   ERROR4
         LA    R8,4(R10)           SET BLDL INDEX POINTER
         LH    R4,SYSLIB+62        PICK UP BLKSIZE FROM DCB
         GETMAIN R,LV=(4)          GET AN INPUT BUFFER
         ST    R1,BUFFER           SAVE THE INPUT BUFFER ADDRESS
         STH   R4,BUFFERL          SAVE THE INPUT BUFFER LENGTH
         B     MEMSTRT             START PROCESSING THE MEMBERS
         EJECT
***********************************************************************
**********      READ THE MEMBER                            ************
***********************************************************************
         SPACE 2
ENDINP   DS    0H
         AH    R8,2(R10)           INCREMENT INDEX TO THE NEXT MEMBER
MEMSTRT  DS    0H
         LH    R5,0(R10)           PICK UP THE MEMBER COUNT
         LTR   R5,R5               ANY LEFT ?
         BZ    END                 ALL DONE
         BCTR  R5,0                REDUCE MEMBER COUNT
         STH   R5,0(R10)           SAVE MEMBER COUNT IN BLDL LIST
MEMFIND  DS    0H
         MVC   MSG1+11(8),0(R8)    SET UP MEMBER IN MSG
         WRTERM MSG1,20
         LA    R3,8(R8)            SET POINTER TO TTR
         FIND  SYSLIB,(3),C        SET TO START OF MEMBER
         LTR   R15,R15
         BNZ   ERROR3              ERROR IN FIND
MEMREAD  DS    0H
         L     R3,BUFFER           PICK UP INPUT BUFFER ADDRESS
         READ  DECBINP,SF,SYSLIB,(3),'S'
         CHECK DECBINP
         L     R2,DECBINP+16       PICK UP THE IOB ADDRESS
         LH    R3,14(R2)           PICK UP THE RESIDUAL COUNT
         LH    R2,SYSLIB+62        PICK UP BLKSIZE FROM DCB
         SR    R2,R3               CALC LENGTH OF BLOCK READ
         SRDL  R2,32               SET IT INTO AN EVEN ODD PAIR
         D     R2,=F'80'           DIVIDE BY RECORD LENGTH
*              R3 IS THE RECORD COUNT FOR THIS BLOCK
         LTR   R3,R3               CHECK FOR VALID BLOCK
         BNP   MEMREAD             EMPTY BLOCK ????
         L     R2,BUFFER
DEBLOCK  DS    0H
         MVC   INBUFFER(80),0(R2)
         BAL   R7,SCAN             GO AND DO THE REAL WORK
         LA    R2,80(R2)           BUMP
         BCT   R3,DEBLOCK          GET THE LOT
         B     MEMREAD             ALL DONE WITH THIS BLOCK
         EJECT
***********************************************************************
**********      PRINT ROUTINE                              ************
***********************************************************************
         SPACE 2
PRINT    DS    0H
         MVC   INBUFFER+71(8),0(R8) MEMBER NAME
         WRTERM INBUFFER,79
         BR    R7
         EJECT
***********************************************************************
**********      SCAN ROUTINE                               ************
***********************************************************************
         SPACE 2
SCAN     DS    0H
         LA    R4,TBPARM           ADDRESS STORED PARAMETERS
SCANLP1  DS    0H
         SR    R1,R1               CLEAR R1
         IC    R1,0(R4)            PICK UP LENGTH
         LTR   R1,R1               IS IT EMPTY ?
         BZR   R7                  RETURN
         LA    R5,INBUFFER
         LA    R6,72               EXTENT OF SEARCH
         BCTR  R1,0                GET EXECUTE LENGTH
SCANEXT  DS    0H
         EX    R1,CLCSCAN          SEE IF THIS IS WHAT WE ARE AFTER
         BE    SCANPR
SCANON   DS    0H
         LA    R5,1(,R5)           BUMP INPUT POINTER
         BCT   R6,SCANEXT          DO IT ALL OVER AGAIN
         LA    R4,9(,R4)           BUMP PARM POINTER
         B     SCANLP1             LOOK FOR ALL OF THEM
SCANPR   DS    0H
         B     PRINT
         EJECT
***********************************************************************
**********      ERROR ROUTINE                              ************
***********************************************************************
         SPACE 2
ERROR1   DS    0H
         WRTERM 'ERROR IN GETMAIN'
         ABEND 100
ERROR2   DS    0H
         WRTERM 'ERROR IN PARAMETER LIST'
         B     END
ERROR3   DS    0H
         WRTERM 'ERROR IN FIND'
         B     END
ERROR4   DS    0H
         WRTERM 'ERROR IN BLDL'
         B     END
         EJECT
***********************************************************************
**********      DYNAMIC ALLOCATION ERROR                   ************
***********************************************************************
         SPACE 2
ALLOCERR DS    0H
         CLI   RBERR,X'17'         LOCATE ERROR ?
         BE    ERRLOC
         CLC   RBERR(2),=X'0410'   IS SYSLIB ALREADY ALLOCATED ?
         BE    ERRORSYS
         UNPK  ALLOCMSG+22(5),RBINFO(3)
         TR    ALLOCMSG+22(4),TBCHAR-240
         MVI   ALLOCMSG+26,C' '
         UNPK  ALLOCMSG+33(5),RBERR(3)
         TR    ALLOCMSG+33(4),TBCHAR-240
         MVI   ALLOCMSG+37,C' '
         STC   R15,WORK
         UNPK  ALLOCMSG+41(3),WORK(2)
         TR    ALLOCMSG+41(2),TBCHAR-240
         MVI   ALLOCMSG+43,C' '
         WRTERM ALLOCMSG,79
         B     END
ERRORSYS DS    0H
         WRTERM 'DD SYSLIB ALREADY IN USE'
         B     END
ERRLOC   DS    0H
         WRTERM 'DATASET NOT FOUND'
         B     END
         EJECT
***********************************************************************
**********      TERMINATION                                ************
***********************************************************************
         SPACE 2
END      DS    0H
         CLOSE SYSLIB
         LA    R1,RBPTR1
         SVC   99                  DYNAMICALLY UNALLOCATE
         CLOSE SYSPRINT
         L     R13,4(R13)          PICK UP THE SAVEAREA ADDRESS
         LM    R14,R12,12(R13)
         BR    R14
         LTORG
         END   ,
/*
