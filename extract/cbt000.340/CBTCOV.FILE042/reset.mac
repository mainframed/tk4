//*
//*  ASM1 -- ASSEMBLES RESET
//*  LINK -- LINKS RESET INTO 'SYS1.CMDLIB(RESET)'
//*
//ASM1  EXEC  PGM=ASMBLR,REGION=2048K,
//             PARM=(DECK,NOOBJECT,NORLD,TERM,NOSTMT,
//             'XREF(SHORT),BUFSIZE(MAX)')
//SYSLIB   DD  DSN=SYS1.AMODGEN,DISP=SHR
//         DD  DSN=SYS1.MACLIB,DISP=SHR
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSUT3   DD  UNIT=SYSDA,SPACE=(CYL,(10,5))
//SYSPUNCH DD  UNIT=SYSDA,SPACE=(TRK,(5,5)),DISP=(,PASS),DSN=&&X,
//         DCB=BLKSIZE=3120
//SYSPRINT DD  SYSOUT=*
//SYSTERM  DD  SYSOUT=*
//SYSIN    DD  *
RESET TITLE 'RESET -- REINITIALIZES (EMPTIES) ANY PARTITIONED DATA SET'
*            RESET -- REINITIALIZES (EMPTIES) ANY PARTITIONED DATA SET
*
*
*  RESET IS USED TO REINITIALIZE (EMPTY) PARTITIONED DATA SETS.  THE
*   USER CAN OPTIONALLY SPECIFY THE NUMBER OF DIRECTORY BLOCKS DESIRED.
*
*
*
*
*  JCL:
*       //STEPNAME    EXEC  PGM=RESET,PARM='RESET'
*       //RESET         DD  DSN=PDSNAME,DISP=SHR
*
*       WHERE THE PARM CAN OPTIONALLY BE CODED AS PARM='RESET(N)'
*       AND N IS THE NUMBER OF DIRECTORY BLOCKS DESIRED.
*
*       ERROR MESSAGE OUTPUT IS WRITTEN AS WTO'S WITH ROUTE CODE 11.
*
*
*
*
*  METHOD:  IF N IS NOT CODED, THE PROGRAM COUNTS THE CURRENT DIRECTORY
*    BLOCKS AND REWRITES THAT SAME NUMBER OF EMPTY DIRECTORY BLOCKS;
*    OTHERWISE, THE PROGRAM WRITES N EMPTY DIRECTORY BLOCKS.
*
*    THEN, A NULL MEMBER IS ADDED TO AND DELETED FROM THE PARTITIONED
*    DATA SET SO THAT THE END OF DATA SET POINTER (DS1LSTAR) IN THE
*    DSCB WILL CORRECTLY POINT TO THE AVAILABLE SPACE FOLLOWING THE
*    DIRECTORY AND THE END OF DIRECTORY (EOF) MARK.
*
*
*
*  ABENDS:  10 -- SYNTAX ERROR IN THE PARM FIELD.
*           20 -- THE DIRECTORY COULD NOT BE OPENED FOR INPUT.
*           30 -- THE DIRECTORY COULD NOT BE OPENED FOR OUTPUT.
*           40 -- THE PARTITIONED DATA SET COULD NOT BE OPENED.
*           50 -- THE NULL MEMBER COULD NOT BE ADDED.
*           60 -- THE NULL MEMBER COULD NOT BE DELETED.
*
*
*
*  NOTE:  AT LEAST ONE DIRECTORY BLOCK IS ALWAYS WRITTEN.
*
*
* AUTHOR:
*     A. BRUCE LELAND           OR         A. BRUCE LELAND            *
*     HITACHI AMERICA, LTD.                6084 CRIMSON DRIVE         *
*     2210 O'TOOLE AVENUE                  SAN JOSE, CALIF 95120      *
*     SAN JOSE, CALIF. 95131                                          *
*     (408) 435-2143                       (408) 997-2366             *
*                                                                     *
         EJECT
         PRINT NOGEN
RESET    CSECT
         SAVE  (14,12),,*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         LR    R2,R15
         USING RESET,R2
         ST    R13,SAVE+4
         LR    R3,R13
         LA    R13,SAVE
         ST    R13,8(R3)
         USING IHADCB,R3
         L     R4,0(R1)
         EJECT
         LA    R3,OUT
         OPEN  (OUT,(OUTPUT)) OPEN
         TM    DCBOFLGS,X'10'     AND
         BZ    ABE40                 CLOSE
         CLOSE (OUT)                      OUT (GETS DCB PARAMETERS)
         LA    R3,DIR         ADDRESS OF DIRECTORY DCB
         CLI   1(R4),5        SUFFICIENT CHARACTERS FOR "RESET"?
         BL    ABEND10        NO, ERROR
         CLC   2(5,R4),KEY    PARM='RESET. . . ?
         BNE   ABEND10        NO, ERROR
         CLI   1(R4),5        RESET ONLY?
         BE    INOUT          YES, COUNT BLOCKS AND REWRITE
         CLI   7(R4),C'('     BEGINNING PARENTHESIS?
         BNE   ABEND10        NO, ERROR
         LH    R5,0(R4)       LENGTH OF PARM DATA
         LA    R5,1(R4,R5)    END OF PARM DATA
         CLI   0(R5),C')'     ENDING PARENTHESIS?
         BNE   ABEND10        NO, ERROR
         SR    R7,R7          TOTAL BLOCK NUMBER
         SR    R5,R5          TEMP REGISTER
NXTNUM   LA    R4,1(R4)
         IC    R5,7(R4)
         S     R5,=F'240'     VALID ZONED NUMBER?
         BM    ABEND10        NO, ERROR
         M     R6,=F'10'      TOTAL * 10
         AR    R7,R5                    + DIGIT
         CLI   8(R4),C')'     END OF PARM STRING?
         BNE   NXTNUM         NO, BRANCH
         B     OUTPUT
ABEND10  WTO   'THE PARM IS CODED INCORRECTLY',ROUTCDE=(11)
         ABEND 10       ***   SYNTAX ERROR IN THE PARM DATA   ***
         EJECT
INOUT    SR    R7,R7          DIRECTORY BLOCK COUNTER
         OPEN  (DIR,INPUT)
         TM    DCBOFLGS,X'10' DIR OPEN?
         BNZ   NOTABE20
         WTO   'THE DIRECTORY DID NOT OPEN FOR INPUT',ROUTCDE=(11)
         ABEND 20       ***   DIR DID NOT OPEN SUCCESSFULLY   ***
NOTABE20 READ  D1,SF,DIR,A
         CHECK D1
         A     R7,=F'1'       ADD 1 TO DIR COUNT
         B     NOTABE20
ENDDIR   CLOSE (DIR)
*
*
*
*
OUTPUT   OPEN  (DIR,(OUTPUT))
         TM    DCBOFLGS,X'10' DIR OPEN?
         BNZ   NOTABE30       YES, BRANCH
         WTO   'THE DIRECTORY DID NOT OPEN FOR OUTPUT',ROUTCDE=(11)
         ABEND 30       ***   DIR DID NOT OPEN SUCCESSFULLY   ***
NOTABE30 WRITE D2,SF,DIR,B    OUTPUT A DUMMY DIRECTORY BLOCK
         CHECK D2
         XC    B(20),B        ZERO THE KEY & DATA PORTIONS OF THE BLOCK
         S     R7,=F'1'       ENOUGH DIRECTORY BLOCKS WRITTEN?
         BP    NOTABE30       NO, BRANCH
         CLOSE (DIR)          YES, CLOSE THE DIRECTORY OUTPUT
         EJECT
         LA    R3,OUT
         OPEN  (OUT,(OUTPUT))
         TM    DCBOFLGS,X'10' OUT OPEN?
         BNZ   NOTABE40       YES, BRANCH
ABE40    WTO   'THE PARTITIONED DATA SET DID NOT OPEN',ROUTCDE=(11)
         ABEND 40       ***   OUT DID NOT OPEN SUCCESSFULLY  ***
NOTABE40 STOW  OUT,MEMBER,A   ADD A NULL MEMBER TO OUT
         LTR   R15,R15        ADDED?
         BZ    NOTABE50       YES, BRANCH
         WTO   'THE EMPTY MEMBER COULD NOT BE ADDED',ROUTCDE=(11)
         ABEND 50       ***   DIRECTORY ADDITION FAILED  ***
NOTABE50 STOW  OUT,MEMBER,D   DELETE THE NULL MEMBER
         LTR   R15,R15        DELETED?
         BZ    NOTABE60       YES, BRANCH
         WTO   'THE EMPTY MEMBER COULD NOT BE DELETED',ROUTCDE=(11)
         ABEND 60       ***   MEMBER DELETION FAILED   ***
NOTABE60 CLOSE (OUT)
         L     R13,4(,R13)
         RETURN (14,12),RC=0
*
*
*
*
MYEXIT   DS    0F             OUT EXIT ROUTINE (DCB PRESERVATION)
         DC    X'85',AL3(OUTEXIT)
OUTEXIT  CLC   BLKSI,=H'0'    FIRST OPEN?
         BNE   STORE          NO, BRANCH
         MVC   BLKSI,DCBBLKSI SAVE THE BLOCKSIZE
         MVC   LRECL,DCBLRECL SAVE THE LRECL
         MVC   RECFM,DCBRECFM SAVE THE RECFM
         BR    R14
STORE    MVC   DCBBLKSI,BLKSI RESET THE BLOCKSIZE
         MVC   DCBLRECL,LRECL RESET THE LRECL
         MVC   DCBRECFM,RECFM RESET THE RECFM
         BR    R14
         EJECT
         LTORG
SAVE     DC    18F'0'
BLKSI    DC    H'0'
LRECL    DC    H'0'
RECFM    DC    X'00'
KEY      DC    CL5'RESET'     "RESET"
MEMBER   DC    CL8'DUMMY ',XL4'00000000'
A        DC    2CL133' '
B        DC    XL8'FFFFFFFFFFFFFFFF',XL2'000E',XL8'FFFFFFFFFFFFFFFF'
         DC    XL246'00'
*
OUT      DCB   DDNAME=RESET,DSORG=PO,MACRF=(W),KEYLEN=0,EXLST=MYEXIT
*
DIR      DCB   DDNAME=RESET,DSORG=PS,RECFM=FB,LRECL=256,BLKSIZE=256,  XX
               MACRF=(R,W),KEYLEN=8,EODAD=ENDDIR
*
         DCBD  DSORG=PS,DEVD=DA
         END   RESET
//*
//LINK   EXEC  PGM=IEWL,PARM='MAP',COND=(5,LT)
//SYSPRINT DD  SYSOUT=*
//SYSLIN   DD  DSN=&&X,DISP=(OLD,DELETE)
//SYSLMOD  DD  DISP=OLD,DSN=SYS1.CMDLIB(RESET)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(TRK,(5,5))
