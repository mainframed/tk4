         TITLE 'EDTSVC1  F O R M A T  S V C 1  R E C O R D'
         PRINT NOGEN
         DMSMACRO
         PRINT ON,GEN
*****************************************
*                                       *
*                                       *
*        E D T S V C 1                  *
*                                       *
*                                       *
*****************************************
         SPACE
EDTSVC1  PGMSTART
         USING DMSCONST,DMSREG
         USING BLKBUFF,R7
         LR    R7,R1                    RECORD
         MVI   LTEXT,64
         MVC   LTEXT+1(122),LTEXT       CLEAR LINE
         HEADER L=SVC
         LA    R9,LTEXT                 POINT TO ACTUAL TEXT
         MVC   0(15,R9),=CL15'GPRS 0,1,14,15:'
         LA    R9,18(R9)                NEW DATA
         LA    R6,BLKDATA               RECORD FIELDS
         LA    R4,2
LOOP0    LA    R3,2
LOOP1    UNPK  0(9,R9),0(5,R6)
         TR    0(8,R9),TRTAB
         MVI   8(R9),64
         LA    R9,9(R9)
         LA    R6,4(R6)
         BCT   R3,LOOP1
         LA    R9,2(R9)
         BCT   R4,LOOP0
         SR    R5,R5                    CLEAR FOR
         IC    R5,BLKPSWCD+1            INSERT SVC NUMBER
         CLI   BLKPSWCD+1,128           CHECK FOR USER SVC
         BL    *+8                      NOT USER SVC
         LA    R5,128                   ASSUME USER SVC
         SLL   R5,4                     16 BYTE ENTRIES IN TABLE
         LA    R6,EDSVC000(R5)          POINT TO ACTUAL TEXT
         MVC   LTEXT+59(16),0(R6)       MOVE TEXT TO LINE
         PRINTER LINE
         SR    R5,R5                    CLEAR FOR INSERT
         IC    R5,BLKPSWCD+1            GET ACTUAL SVC NUMBER
         SLL   R5,2                     MULTIPLY BY FOUR
         L     R15,ESVCTAB0(R5)         -> OF SPECIAL RTN
         LTR   R15,R15                  IS THERE A RTN
         BZ    EDTRETRN                 NO, SO GO BACK
         LA    R15,0(R11,R15)           YES, POINT TO IT
         BR    R15                      AND GO TO IT
EDTRETRN L     R13,4(,R13)              LOAD SAVE AREA ADDRESS
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
LINE     DC    AL2(137,0),CL10' '
LTEXT    DC    123C' '
         DS    0F
TRTAB    DC    256X'40'
         ORG   TRTAB+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRTAB+C'0'
         DC    C'0123456789ABCDEF'
         DS    0D
ESVCTAB0 DS    0H
         DC    256AL4(0)
         ORG   ESVCTAB0+(4*126)         SVC 126
         DC    AL4(MSSSVCE-EDTSVC1)     MSS SVC ENTRY
         ORG   ESVCTAB0+(4*256)         END OF TABLE
         DS    0D
         EJECT
         LTORG
         DS    0D
EDSVC000 DC    CL16'EXCP/XDAP'
         DC    CL16'WAIT/WAITR'
         DC    CL16'POST/PRTOV'
         DC    CL16'EXIT'
         DC    CL16'GETMAIN'
         DC    CL16'FREEMAIN'
         DC    CL16'LINK'
         DC    CL16'XCTL'
         DC    CL16'LOAD'
         DC    CL16'DELETE'
EDSVC010 DC    CL16'GETMAIN/FREEMAIN'
         DC    CL16'TIME'
         DC    CL16'SYNCH'
         DC    CL16'ABEND'
         DC    CL16'SPIE'
         DC    CL16'ERREXCP'
         DC    CL16'PURGE'
         DC    CL16'RESTORE'
         DC    CL16'BLDL/FIND'
         DC    CL16'OPEN'
EDSVC020 DC    CL16'CLOSE'
         DC    CL16'STOW'
         DC    CL16'OPEN (TYPE=J)'
         DC    CL16'CLOSE (TYPE=T)'
         DC    CL16'DEVTYPE'
         DC    CL16'TRKBAL'
         DC    CL16'CTLG/INDX/LOCATE'
         DC    CL16'OBTAIN'
         DC    CL16'CVOL'
         DC    CL16'SCRATCH'
EDSVC030 DC    CL16'RENAME'
         DC    CL16'FEOV'
         DC    CL16'IGC0003B (DADSM)'
         DC    CL16'IOHALT'
         DC    CL16'MGCR/QEDIT'
         DC    CL16'WTO/WTOR'
         DC    CL16'WTL'
         DC    CL16'SEGLD/SEGWT'
         DC    CL16'RESERVED (IPL)'
         DC    CL16'LABEL'
EDSVC040 DC    CL16'EXTRACT'
         DC    CL16'IDENTIFY'
         DC    CL16'ATTACH'
         DC    CL16'CIRB'
         DC    CL16'CHAP'
         DC    CL16'OVLYBRCH'
         DC    CL16'TTIMER'
         DC    CL16'STIMER'
         DC    CL16'DEQ'
         DC    CL16'RESERVED'
EDSVC050 DC    CL16'RESERVED'
         DC    CL16'SNAP/SDUMP'
         DC    CL16'RESTART'
         DC    CL16'RELEX'
         DC    CL16'DISABLE'
         DC    CL16'EOV'
         DC    CL16'ENQ/RESERVE'
         DC    CL16'FREEDBUF'
         DC    CL16'RELBUF/REQBUF'
         DC    CL16'OLTEP'
EDSVC060 DC    CL16'STAE/ESTAE'
         DC    CL16'IKJEGS6A'
         DC    CL16'DETACH'
         DC    CL16'CHKPT'
         DC    CL16'RDJFCB'
         DC    CL16'RESERVED'
         DC    CL16'BTAMTEST'
         DC    CL16'SYNADAF'
         DC    CL16'SYNADRLS'
         DC    CL16'BSP'
EDSVC070 DC    CL16'GSERV'
         DC    CL16'ASGNBFR/RLSEBFR'
         DC    CL16'CHATR'
         DC    CL16'SPAR'
         DC    CL16'DAR'
         DC    CL16'DQUEUE'
         DC    CL16'IFBSVC76 (OBR)'
         DC    CL16'RESERVED'
         DC    CL16'IGC0007H (SMF)'
         DC    CL16'STATUS'
EDSVC080 DC    CL16'RESERVED'
         DC    CL16'SETPRT'
         DC    CL16'DASDR'
         DC    CL16'SMFWTM'
         DC    CL16'GRAPHICS'
         DC    CL16'DDRSWAP'
         DC    CL16'ATLAS'
         DC    CL16'DOM'
         DC    CL16'MOD88'
         DC    CL16'RESERVED'
EDSVC090 DC    CL16'RESERVED'
         DC    CL16'VOLSTAT'
         DC    CL16'TCBEXCP'
         DC    CL16'TGET/TPUT'
         DC    CL16'STCC'
         DC    CL16'SYSEVENT'
         DC    CL16'STAX'
         DC    CL16'TEST-TSO'
         DC    CL16'PROTECT'
         DC    CL16'DDDYNAM'
EDSVC100 DC    CL16'IKJEFFIB'
         DC    CL16'QTIP'
         DC    CL16'AQCTL'
         DC    CL16'XLATE'
         DC    CL16'TOPCTL'
         DC    CL16'IMAGLIB'
         DC    CL16'RESERVED'
         DC    CL16'MODESET'
         DC    CL16'RESERVED'
         DC    CL16'ESR (TYPE 4)'
EDSVC110 DC    CL16'DSTATUS'
         DC    CL16'HASPSSSM'
         DC    CL16'PGRLSE'
         DC    CL16'PGFIX/OUT/LOAD'
         DC    CL16'EXCPVR'
         DC    CL16'RESERVED'
         DC    CL16'ESR (TYPE 1)'
         DC    CL16'DEBCHK'
         DC    CL16'RESERVED'
         DC    CL16'TESTAUTH'
EDSVC120 DC    CL16'GETMAIN/FREEMAIN'
         DC    CL16'VSAM'
         DC    CL16'EVENTS (TYPE 2)'
         DC    CL16'PURGEDQ'
         DC    CL16'TPIO'
         DC    CL16'EVENTS (TYPE 1)'
         DC    CL16'MSS'
         DC    CL16'RESERVED'
EDSVC128 DC    CL16'USER SVC'
         EJECT
MSSSVCE  DS    0H
         DROP  R11
         USING *,R11
         LR    R11,R15                  SET BASE REGISTER
         MVC   MSSTEXT(10),=CL10'PARMLIST:'
         LA    R6,BLKDATA+16            POINT TO DATA FIELDS
         LH    R5,0(,R7)                GET RECORD LENGTH
         LA    R5,0(R7,R5)              POINT TO END OF DATA
         CLR   R6,R5                    ARE DATA PRESENT
         BNL   MSSRETRN                 NO, SO GO BACK
MSSLOOP  L     R4,0(,R6)                GET LENGTH OF DATA
         LA    R4,0(R4,R6)              POINT TO END WITHIN STRING
         CLR   R4,R5                    IS IT IN GOOD RANGE
         BH    MSSRETRN                 NO, SO GO OUT
         L     R4,0(,R6)                GET LENGTH OF DATA
         LA    R9,MSSTEXT+18            OUTPUT AREA WITHIN LINE
         LA    R8,MSSLINE               OUTPUT LINE
         L     R15,=A(MSSPRINT)         SUBROUTINE
         BALR  R12,R15                  GO TO PRINT
         LA    R6,0(R4,R6)              POINT TO NEW DATA
         CLR   R6,R5                    ARE THERE ANY NEW DATA
         BNL   MSSRETRN                 NO EXTENSION, GO OUT
         MVC   MSSTEXT(10),=CL10'EXTENSION:'
         B     MSSLOOP                  PROCESS NEXT FIELD
         SPACE
MSSRETRN L     R13,4(,R13)              COMMON
         LM    R14,R12,12(R13)          MSS
         SR    R15,R15                  RETURN
         BR    R14
         EJECT
         DS    0D
MSSLINE  DC    AL2(137,0),CL10' '
MSSTEXT  DC    123C' '
         LTORG
         EJECT
MSSPRINT DS    0H
         DROP  R11
         USING *,R15
         BALR  R15,R0                   SET
         BCTR  R15,R0                   BASE
         BCTR  R15,R0                   TO ORIGIN
         STM   R0,R15,MSSSAVE           SAVE CALLERS REGISTER
         LR    R11,R15                  ASSIGN NEW BASE
         DROP  R15
         USING MSSPRINT,R11
         SPACE
*        INPUT TO THIS SUBROUTINE IS SET AS FOLLOWS:
*        R4    CONTAINS LENGTH OF PARMLIST
*        R6    CONTAINS ADDRESS OF DATA
*        R8    CONTAINS LINE ADDRESS
*        R9    CONTAINS OF TEXT DATA WITHIN LINE
*        R10   CONTAINS DMSCONST ADDRESS
*        R12   CONTAINS CALLERS RETURN ADDRESS
         SPACE
         LR    R7,R9                    LOAD WORK REGISTER
MSSCHLEN LTR   R4,R4                    CHECK LENGTH
         BNP   MSSRET1                  BAD VALUE, GO OUT
         CH    R4,=H'32'                ENOUGH TO FILL A LINE
         BL    MSSLESS1                 NO, CHECK NEXT SMALLER VALUE
         LA    R5,2                     SET
LOOP00   LA    R3,2                     LOOP
LOOP01   LA    R2,2                     COUNTERS
LOOP2    UNPK  0(9,R7),0(5,R6)          CONVERT
         TR    0(8,R7),MSSTRTAB         DATA TO
         MVI   8(R7),64                 PRINT
         LA    R7,9(,R7)                LINE
         LA    R6,4(,R6)
         BCT   R2,LOOP2
         LA    R7,2(,R7)
         BCT   R3,LOOP01
         LA    R7,1(,R7)
         BCT   R5,LOOP00
         PRINTER 0(,R8)                 PRINT LINE
         MVC   14(123,R8),MSSTRTAB      BLANK LINE
         LR    R7,R9                    POINT TO OFFSET
         SH    R4,=H'32'                SUBTRACT FIRST LINE
         BZ    MSSRET1                  GO OUT IF COMPLETE
         B     MSSCHLEN                 GET NEXT DATAS
MSSLESS1 CH    R4,=H'16'                ENOUGH TO FILL HALF LINE
         BL    MSSLESS2                 LESS THAN ONE HALF LINE
         LA    R3,2                     SET
LOOP3    LA    R2,2
LOOP4    UNPK  0(9,R7),0(5,R6)          LOOP COUNTER
         TR    0(8,R7),MSSTRTAB         AND
         MVI   8(R7),64                 FILL
         LA    R7,9(,R7)                HALF
         LA    R6,4(R6)                 LINE
         BCT   R2,LOOP4
         LA    R7,2(,R7)
         BCT   R3,LOOP3
         LA    R7,1(,R7)
         SH    R4,=H'16'                SUBTRACT HALF LINE
         BZ    MSSRET2                  GO OUT IF COMPLETE
MSSLESS2 CH    R4,=H'8'                 ENOUGH TO FILL ON GROUP
         BL    MSSLESS3                 NO, CHECK FOR SMALLER
         LA    R2,2                     YES
LOOP5    UNPK  0(9,R7),0(5,R6)          SET
         TR    0(8,R7),MSSTRTAB         LOOP
         MVI   8(R7),64                 COUNT
         LA    R7,9(,R7)                AND
         LA    R6,4(,R6)                FILL
         BCT   R2,LOOP5                 ONE
         LA    R7,2(,R7)                GROUP
         SH    R4,=H'8'                 SUBTRACT GROUP COUNT
         BZ    MSSRET2                  GO OUT IF COMPLETE
MSSLESS3 CH    R4,=H'4'                 ENOUGH TO FILL ONE ENTRY
         BL    MSSLESS4                 NO, GO OUT
         UNPK  0(9,R7),0(5,R6)          CONVERT
         TR    0(8,R7),MSSTRTAB         ENTRY
         MVI   8(R7),64
         LA    R7,9(,R7)
         LA    R6,4(,R6)
         SH    R4,=H'4'                 SUBTRACT ENTRY LENGTH
         BZ    MSSRET2                  GO OUT IF COMPLETE
MSSLESS4 LR    R5,R4                    PROCESS
         SLL   R5,5                     LAST
         OR    R5,R4                    PART
         EX    R5,MSSUNPK               OF
         BCTR  R4,R0                    LINE
         EX    R4,MSSTRT
         LA    R4,1(,R4)
         SLL   R4,1
         LA    R5,1(R4,R7)
         MVI   0(R5),64                 CLEAR UNUSED BYTE
MSSRET2  PRINTER 0(,R8)                 PRINT LINE
         MVC   14(123,R8),MSSTRTAB
MSSRET1  LM    R0,R14,MSSSAVE
         SR    R15,R15
         BR    R12
         DS    0D
         EJECT
MSSTRTAB DC    256X'40'
         ORG   MSSTRTAB+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   MSSTRTAB+C'0'
         DC    C'0123456789ABCDEF'
         SPACE
MSSSAVE  DC    16F'0'
         SPACE
MSSUNPK  UNPK  0(0,R7),0(0,R6)
MSSTRT   TR    0(0,R7),MSSTRTAB
         LTORG
         END
