1                                                           PAGE 001
 THE DYNAMIC MONITOR SYSTEM (DMS) FOR IBM OS/MVS
 _______________________________________________
0-INTRODUCTION
0         THE DYNAMIC MONITOR SYSTEM MONITORS THE INTER-ACTIONS BETWEEN
          OS/VS SYSTEM EVENTS AND THE CORRESPONDING DYNAMICALLY ACTIVATE
          EVENT HANDLING ROUTINES. A STANDARD SET OF EVENT HANDLING ROUT
          IS AVAILABLE. THIS ROUTINE PERFORMS AN EVENT TRACE FUNCTION. D
          WAS DEVELOPED SPECIFICALLY TO ANALYSE THE I/O ACTIVITIES OF AN
          IBM/OS 370 MVS-MP SYSTEM.
          A PRINCIPAL DESIGN GOAL FOR DMS IS TO KEEP THE CPU OVERHEAD AN
          STORAGE REQUIREMENTS BELOW AN ACCEPTABLE THRESHOLD, SO IT WILL
          BE POSSIBLE TO MONITOR AN ENTIRE TP NETWORK DURING THE ENTIRE
          ONLINE OPERATION.
          IN ADDITION, DMS GIVES THE SYSTEM PROGRAMMER A CONVENIENT MEAN
          WRITING SIMPLE PROGRAMS CONTAINING BOTH SELECTION AND DECISION
          LOGIC WHICH CAN BE BASED ON A SELECTED GROUP OF SYSTEM EVENTS.
          THE TIME STAMP FROM THE TIME OF DAY CLOCK GIVES THE POSSIBILIT
          TO CREATE REPRODUCABLE TIME MEASUREMENTS.
          DMS IS A HELPFULL TOOL FOR PROBLEM DETERMINATION.
--INVOKING AND CONTROLLING DMS
0         DMS MUST BE AUTHORIZED BY THE SYSTEM.
          IF NOT, A MESSAGE IS GENERATED AND DMS IS TERMINATED.
          DMS CAN BE STARTED VIA NORMAL JOB CONTROL OR WITH THE
          DMS PROCEDURE FROM THE SYSTEM CONSOLE.
0         THE ACTIVE DMS IS CONTROLLED WITH THE STOP- AND MODIFY
          OPERATOR COMMAND. (NO OUTSTANDING REPLY)
--FORMATING AND PRINTING DMS OUTPUT
0         STANDARD EDIT ROUTINES ARE AVAILABLE FOR OUTPUT FORMATING
          IN THE DMS-EDIT FUNCTION.
          THE EDIT COMMAND PROVIDES:
0         .    DATA REDUCTION FOR DMS OUTPUT.
0         .    SELECTIVITY FOR TRACE OUTPUT DATA.
0         .    AN INTERFACE TO USER OR COMPONENT SUPPLIED FORMATING
               ROUTINES FOR DMS RECORDED RECORDS.
0         .    SPECIAL FORMATING FOR I/O ORIENTED RECORDS.
1                                                           PAGE 002
0 -DMS JOB CONTROL
0         //JOBNAME  JOB      INSTALLATION DEPENDEND JOB-CARD
0         //JOBLIB   DD       DMS PROGRAM LIBRARY
0         //STEPNAME EXEC     PGM=DMSTRACE,REGION=512K,TIME=1440
0         //SYSPRINT DD       LIST OUTPUT DATASET.
                              PROGRAM DEFINED DATA SPECIFICATIONS
                              DCB=(RECFM=VBA,LRECL=137,BLKSIZE=1000)
0         //SYSABEND DD       DEBUGGING DUMP OUTPUT DATASET.
0         //SNAPOUT  DD       INTERNAL TEST OUTPUT DATASET.
                              (MUST BE DEFINED TOGETHER WITH THE)
                              (INPTEST CONTROL KEYWORD          )
0         //ANYNAME  DD       TRACE OUTPUT DATASET OR EDIT INPUT DATASET
                              DD-NAME IS SELECTED WITH THE
                              OUTPUTDD KEYWORD FOR THE TRACE OUTPUT.
                              (DEFAULT: TRACEOUT)
                              AND WITH THE
                              INPUTDD KEYWORD FOR THE EDIT INPUT.
                              (DEFAULT: TRACEOUT)
                              PROGRAM DEFINED DATA SPECIFICATIONS
                              DCB=(RECFM=VB,LRECL=4100)
                              BLKSIZE MUST BE SELECTED WITH THE JCL CARD
0         //SYSIN    DD       CONTROL INPUT DATASET. (OPTIONAL)
                              IF THIS DATASET IS NOT SELECTED,
                              CONTROL INPUT WILL BE REQUESTED VIA
                              THE OPERATOR CONSOLE.
                              PROGRAM DEFINED DATA SPECIFICATIONS:
                              DCB=(RECFM=FB,LRECL=80)
1                                                           PAGE 003
  -DMS CONTROL
0         DMS IS CONTROLLED WITH FUNCTION COMMANDS AND FUNCTION
          KEYWORDS. CONTROL INPUT CAN BE SPECIFIED WITH THE SYSIN-
          CARD INPUT AND WITH OPERATOR MESSAGE REPLIES.
          CONTROL ENTRIES ARE CHECKED FROM THE FIRST FUNCTION COMMAND
          UP TO THE FIRST GO-KEYWORD.
          CONTROL ENTRY LENGTH CAN BE FROM 1 TO 71 CHARACTERS.
          LONGER ENTRIES ARE CHECKED UP TO BYTE 71.
0 .  COMMON KEYWORD PARAMETERS
0         ALL       ALL EVENTS ON THE ENTRY ARE ACTIVATED
          OFF       ALL EVENTS ON THE ENTRY ARE DEACTIVATED
          RTN=N     EVENT-TYPE ROUTINE INDEX. DEFAULT RTN=0
          N         DECIMAL INTEGER
          X         HEXADECIMAL INTEGER
0 .  FUNCTION COMMANDS
0         MONITOR   DMS IS ACTIVATED FOR MONITORING.
          M         THIS COMMAND IMPLIES THE RESET FUNCTION.
                    ALL REQUIRED FUNCTION KEYWORDS MUST BE SELECTED.
0         EDIT      DMS IS ACTIVATED FOR EDITING.
          E         THIS COMMAND IMPLIES A RESET FUNCTION.
                    ALL REQUIRED FUNCTION KEYWORDS MUST BE SELECTED.
0         WAIT      DMS MUST WAIT UP TO THE NEXT
                    MODIFY- OR STOP-COMMAND.
0         EOJ       END OF JOB. DMS IS TERMINATED NORMALLY.
          END
0         *         COMMENT. PRINTED TO THE SYSPRINT DATASET.
0 .  CONTROL KEYWORDS
0         RESET     CLEAR ALL DMS SELECTIONS.
          R         THIS FUNCTION IS PROCESSED AFTER EACH
                    MONITOR OR EDIT COMMAND.
0         LIST      LIST ALL ACTIVE DMS SELECTIONS.
0         CONSOLE   CONTINUE INPUT PROCESSING FROM THE OPERATOR CONSOLE.
0         SYSIN     CONTINUE INPUT PROCESSING FROM THE NEXT SYSIN-RECORD
          CARD
0         DEFAULT   PROCESS WITH THE DMS DEFAULT VALUES.
          DEF       THIS KEYWORDS ACTIVATES ALL DEFAULT FUNCTIONS.
                    THE DEFAULT FUNCTION FOR EACH FUNCTION KEYWORD IS
                    INDICATED IN THE DESCRIPTION.
0         TEST      DMS DEBUG OPTION.TO BE USED TO TAKE DUMPS ON ERRORS.
0         GO        START WITH THE SELECTED DMS-FUNCTIONS.
                    DMS-STATUS CAN BE CHANGEND NOW WITH THE
                    MODIFY OPERATOR COMMAND OR TERMINATED WITH THE
                    STOP OPERATOR COMMAND.
1                                                           PAGE 004
  -SELECTION KEYWORDS
0 .  DD-NAME FOR SAVE DATASET AND EDIT INPUT DATASET
0    TRACE OUTPUT:
0         OUTPUTDD=CCCCCCCC        DEFAULT: TRACEOUT
                                   INITIAL: TRACEOUT
0    EDIT INPUT:
0         INPUTDD=CCCCCCCC         DEFAULT: TRACEOUT
                                   INITIAL: TRACEOUT
0 .  LINECOUNT FOR SYSPRINT-OUTPUT
0         LINECNT=NN               DEFAULT: 64
                                   INITIAL: 64
0 .  TITLE FOR SYSPRINT-OUTPUT
0         TITLE='CC--UP TO 64 CHAR--CC' DEFAULT: NOT USED
0 .  NUMBER OF FIXED I/O BUFFERS
0         BUFFERPAGES=NNNN         DEFAULT: BP=8
          BP                       INITIAL: BP=8
0         TOTAL NUMBER OF ALLOCATED PAGES WILL BE:
                                   ((BP(1+N*CPU/2))
          THE MINIMUM NUMBER OF ALLOCATED PAGES MUST BE 3
0 .  CPU IDENTIFICATION FOR MULTIPROCESSING
0               ((ALL     ))
          CPUID=((        ))       DEFAULT: CPUID=ALL
                ((X(X-X,X)))       INITIAL: CPUID=ALL
0              X CPU-IDENTIFICATION-NUMBER   VALUES: 0 - F
0 .  ADDRESS - SPACE IDENTIFICATION
0              ((ALL ))
          ASID=((    ))            DEFAULT: ASID=ALL
               ((XXXX))            INITIAL: ASID=ALL
1                                                           PAGE 005
   . EXTERNAL INTERRUPTS
0             ((ALL )(      ))
          EXT=((OFF )(,RTN=N))     DEFAULT: EXT=(ALL,RTN=0)
              ((XXXX)(      ))     INITIAL: EXT=OFF
0              XXXX 2-BYTE EXTERNAL INTERRUPT MASK
               MONITOR ROUTINE NAME  DMSEXTN
               EDITOR  ROUTINE NAME  EDTEXTN
               RECORD  ID            1N
0 .  SUPERVISOR CALL INTERRUPTS
0             ((ALL        )(      ))
          SVC=((OFF        )(,RTN=N))   DEFAULT: SVC=(ALL,RTN=0)
              ((XX(X,XX-XX))(      ))   INITIAL: SVC=OFF
0              X  SELECTED SVC NUMBER   VALUES: 00 - FF
               MONITOR ROUTINE NAME  DMSSVCN
               EDITOR  ROUTINE NAME  EDTSVCN
               RECORD  ID            2N
0 .  PROGRAM CHECK INTERRUPTS
0             ((ALL        )(      ))
          PGM=((OFF        )(,RTN=N))   DEFAULT: PGM=(ALL,RTN=0)
              ((XX(X,XX-XX))(      ))   INITIAL: PGM=OFF
0              X  SELECTED PROGRAM-CHECK INTERRUPT    VALUES: 00 - FF
               MONITOR ROUTINE NAME  DMSPGMN
               EDITOR  ROUTINE NAME  EDTPGMN
               RECORD  ID            3N
- .  PROGRAM EVENT RECORDING
0             ((OFF                ) (XXXXXX-XXXXXX)(      ))
          PER=((ALL                ) (             )(,RTN=N)) DEFAULT: P
              ((EMASK=X,GPMASK=XXXX),(NNNNNK-NNNNNK)(      )) INITIAL: P
0              EMASK=X        EVENT-MASK / CONTROL REG 9 BIT 0-3
               GPMASK=XXXX    GP-REGISTER MASK / CONTROL REG 9 BIT 16-31
               XXXXXX         HEXADECIMAL STORAGE ADDRESS RANGE
               NNNNNK         DECIMAL STORAGE ADDRESS RANGE IN KILO BYTE
               MONITOR ROUTINE NAME  DMSPERN
               EDITOR  ROUTINE NAME  EDTPERN
               RECORD  ID            4N
-             ((ALL   )) 'ALL' INCLUDES: GLOBAL,LOCAL,SVR,DSP,EXIT,WDIS
              ((GLOBAL)) GLOBAL SRB DISPATCH
              ((LOCAL )) LOCAL SRB DISPATCH
    (PERMODE) ((SVR   )) LOCAL SUPERVISOR DISPATCH
    (       )=((SRB   )) 'SRB' INCLUDES: GLOBAL,LOCAL,SVR   DEFAULT: PM=
    (PM     ) ((WDIS  )) WAIT TASK DISPATCH                 INITIAL: NOT
              ((DIS   )) TASK DISPATCH FROM DISPATCHER
              ((EXIT  )) TASK DISPATCH FROM EXIT
              ((TASK  )) 'TASK' INCLUDES: DIS,EXIT
0              ANY COMBINATION OF ABOVE, SEPARATED BY COLONS, CAN BE SPE
1                                                           PAGE 006
  .  DYNAMIC ADDRESS TRANSLATION
0             ((OFF)(      ))
          DAT=((   )(,RTN=N))      DEFAULT: DAT=OFF
              ((ALL)(      ))      INITIAL: DAT=OFF
0              MONITOR REQUEST FOR PROGRAM INTERRUPTS X'10' - X'12'
               MONITOR ROUTINE NAME  DMSDATN
               EDITOR  ROUTINE NAME  EDTDATN
               RECORD  ID            5N
0 .  MONITOR CALL INTERRUPTS
0             ((OFF    )(      ))
          MON=((ALL    )(,RTN=N))  DEFAULT: MON=OFF
              ((X(,X-X))(      ))  INITIAL: MON=OFF
0              X  MONITOR CLASSES TO BE TRACED
                  (CONTROL REGISTER 8 BIT 16-32)
               NOTE: DMS WILL NOT ACTIVATE MONITOR CALL
0              MONITOR ROUTINE NAME  DMSMONN
               EDITOR  ROUTINE NAME  EDTMONN
               RECORD  ID            6N
0 .  MACHINE CHECK INTERRUPTS
0             ((OFF)(      ))
          MCH=((   )(,RTN=N))      DEFAULT: MCH=(ALL,RTN=0)
              ((ALL)(      ))      INITIAL: MCH=OFF
0              MONITOR ROUTINE NAME  DMSMCHN
               EDITOR  ROUTINE NAME  EDTMCHN
               RECORD  ID            7N
0 .  INPUT / OUTPUT INTERRUPTS
0             ((OFF          )(      ))
          I/O=((ALL          )(,RTN=N)) DEFAULT: I/O=(ALL,RTN=0)
              ((XXX(,XXX-XXX))(      )) INITIAL: I/O=OFF
0              XXX  INPUT/OUTPUT UNIT ADDRESS    VALUES: 000 - FFF
               MONITOR ROUTINE NAME  DMSIOSN
               EDITOR  ROUTINE NAME  EDTIOSN
               RECORD  ID            8N
               NOTE: 'I/O' IS MUTUALLY EXCLUSIVE WITH 'UNIT'
1                                                           PAGE 007
  .  START INPUT/OUTPUT EVENTS
0             ((OFF          )(      ))
          SIO=((ALL          )(,RTN=N)) DEFAULT: SIO=(ALL,RTN=0)
              ((XXX(,XXX-XXX))(      )) INITIAL: SIO=OFF
0              XXX INPUT/OUTPUT UNIT ADDRESS     VALUES: 000 - FFF
               MONITOR ROUTINE NAME  DMSSION
               EDITOR  ROUTINE NAME  EDTSION
               RECORD  ID            9N
0              NOTE: SPECIFIED UNIT ADDRESSES FOR I/O INTERRUPTS
               ARE ALSO USED FOR SIO EVENTS AND VICE VERSA.
               'SIO' IS MUTUALLY EXCLUSIVE WITH 'UNIT'.
0 .  PROGRAM CONTROLLED I/O INTERRUPTS
0             (OFF)
          PCI=(   )                DEFAULT: PCI=OFF
              (ALL)                INITIAL: PCI=OFF
0              THIS KEYWORD SPECIFIES WHETHER I/O INTERRUPTS WITH
               PROGRAM CONTROLLED INTERRUPTS ARE MONITORED OR NOT.
0 .  DISPATCHER EVENTS
0             ((OFF)(      ))
          DSP=((   )(,RTN=N))      DEFAULT: DSP=(ALL,RTN=0)
              ((ALL)(      ))      INITIAL: DSP=OFF
0              MONITOR ROUTINE NAME  DMSDSPN
               EDITOR  ROUTINE NAME  EDTDSPN
               RECORD  ID            AN
1                                                           PAGE 008
  .  UNIT ORIENTED INPUT/OUTPUT MONITORING
0    (UNITS) ((OFF          )(      ))
     (UNIT )=((ALL          )(,RTN=N))  DEFAULT: UNIT=OFF
     (U    ) ((XXX(,XXX-XXX))(      ))  INITIAL: UNIT=OFF
0              XXX  INPUT/OUTPUT UNIT ADDRESS    VALUES: 000 - FFF
0              MONITOR ROUTINE NAME  DMSUNTN
                ENTRY FOR SIO EVENT  +0
                ENTRY FOR I/O INT.   +4
0              EDITOR  ROUTINE NAME
                IF THE UNIT KEYWORD IS USED, AN INTEGRATED ROUTINE
                PROCESSES THE RECORDS TYPE '80' AND '90'.
0              RECORD  ID
                      FOR SIO EVENT  9N
                      FOR I/O INT.   8N
0              R15 POINTS TO THE SELECTED ENTRY
               NOTE: 'UNIT' IS MUTUALLY EXCLUSIVE WITH 'SIO' AND 'I/O'.
0    (UNITTYPE) (ALL)    SIO + I/O INTRPT
     (UTYPE   )=(SIO)    SIO EVENT   ONLY    DEFAULT: UT=ALL
     (UT      ) (I/O)    I/O INTRPT. ONLY    INITIAL: UT=ALL
                (IOI)    I/O INTRPT. ONLY
0              NOTE: 'UNITTYPE' IS ONLY VALID IN COMBINATION WITH 'UNIT'
0 .  CHANNEL COMMAND WORD MONITORING
0             (OFF)
          CCW=(ALL)                DEFAULT: CCW=20
              (NNN)                INITIAL: CCW=20
0              NNN  MAX. NUMBER OF PROCESSED CHANNEL COMMAND WORDS
               REAL CCW'S ARE SAVED TOGETHER WITH THE
                    VIRTUAL DATA ADDRESS
               NOTE: 'CCW' IS ONLY VALID IN COMBINATION WITH 'UNIT'.
- .  START I/O DATA MONITORING
0              ((OFF          )(       ))
     (DATASIO) ((ALL          )(       ))
     (       )=((             )(,L=NNNN))    DEFAULT: DS=(OUTPUT,L=128)
     (DS     ) ((OUTPUT       )(       ))    INITIAL: DS=(OUTPUT,L=128)
               ((XX(,XX-XX,XX))(       ))
0              XX        MONITORED CHANNEL COMMAND CODES
               OUTPUT    MONITOR OUTGOING
               O         CCW-DATAS.
               L         NUMBER OF MAX. SAVED BYTES PER CCW
                         L FROM DATAI/O IS ALSO SET.
               NOTE: 'DATASIO' IS ONLY VALID IN COMBINATION WITH 'UNIT'.
1                                                           PAGE 009
  .  I/O INTERRUPT DATA MONITORING
0              ((OFF          )(       ))
     (DATAI/O) ((ALL          )(       ))
     (       )=((             )(,L=NNNN))    DEFAULT: DI=(INPUT,L=128)
     (DI     ) ((INPUT        )(       ))    INITIAL: DI=(INPUT,L=128)
               ((XX(,XX-XX,XX))(       ))
0              XX        AS FOR DS
               INPUT     MONITOR INCOMING
               I         CCW-DATAS.
               L         AS FOR DS
                         L FROM DATASIO IS ALSO SET.
               NOTE: 'DATAI/O' IS ONLY VALID IN COMBINATION WITH 'UNIT'.
0 .  USER DEFINITIONS
0         (JOBNAME)
          (JOB    )=JOBNAME        DEFAULT: NOT USED
          (J      )                INITIAL: NOT USED
0         (STEPNAME)
          (STEP    )=STEPNAME      DEFAULT: NOT USED
          (S       )               INITIAL: NOT USED
0         (PROCNAME)
          (PROC    )=PROCNAME      DEFAULT: NOT USED
          (P       )               INITIAL: NOT USED
- .  SPECIAL FUNCTION
0         (USERRTN)
          (       )=PGMNAME        DEFAULT: NOT USED
          (USER   )                INITIAL: NOT USED
0              INSTEAD OF MONITOR ROUTINES, THE SELECTED PROGRAM WILL RE
               CONTROL FOR EACH SELECTED EVENT AT THE FOLLOWING
               ENTRY POINTS. (REG 15 IS POINTING TO ACTUAL ENTRY POINT)
0                   EXT-INTERRUPTS +00
                    SVC-INTERRUPTS +04
                    PGM-INTERRUPTS +08
                    MCH-INTERRUPTS +12
                    I/O-INTERRUPTS +16
                    SIO-EVENTS     +20
                    DSP-EVENTS     +24
0              FOR DETAILS, SEE DESCRIPTION OF USER-ROUTINE.
1                                                           PAGE 010
 -EDIT FUNCTION KEYWORDS
0         STIME=HH.MM.SS      START EDITING IF RECORD TIMESTAMP IS EQUAL
                              OR HIGHER.
0         PTIME=HH.MM.SS      STOP EDITING IF RECORD TIMESTAMP IS HIGHER
0         SDATE=YY.DDD        START EDITING IF RECORD TIMESTAMP IS EQUAL
                              OR HIGHER.
0         PDATE=YY.DDD        STOP EDITING IF RECORD TIMESTAMP IS HIGHER
0         SRECORD=XXXXXX      START EDITING IF THE RECORD NUMBER IS EQUA
                              OR HIGHER.
0         PRECORD=XXXXXX      STOP EDITING IF THE RECORD NUMBER IS HIGHE
-         MODE=NORM           DATA BEHIND CCW'S WILL BE PRINTED AS HEXA
                              AS LONG ITS VALUE DOES NOT REPRESENT AN EB
                              CHARACTER. THEN THE EBCDIC STRING IS PRINT
                              THIS MODE IS DEFAULT.
0         MODE=HEXA           DATA BEHIND CCW'S WILL BE PRINTED AS
                              HEXADECIMAL DIGITS.
0         MODE=BASIC          RECORDS WILL NOT BE FORMATTED.
                              USED TO DEBUG MONITOR/EDIT PROBLEMS.
0         ALL                 THIS COMMAND USED WITH EDIT WILL CAUSE ALL
                              INPUT RECORDS TO BE FORMATTED AND PRINTED.
                              NO OTHER SPECIFICATION EXCEPT GO WILL BE F
0         FORMAT              THIS COMMAND WILL PRINT AT EDIT TIME THE
          F                   SELECTIONS CHOOSEN AT MONITOR TIME. IN ADD
                              SOME STATISTICAL VALUES ARE PRINTED.
0         DESCRIPT            THIS IS A STANDALONE COMMAND AND CAUSES TH
                              DESCRIPTION TO BE PRINTED AT ANY TIME.
- .  STATUS SELECTION FOR UNIT ORIENTED RECORDS
0         STATUS=XXXX         STATUS MASK FOR CSW COMPARSION.
1                                                           PAGE 011
-    .  USERRTN'S
0         INPUT :   R15       ENTRY POINT
                              (CAUTION: DATA SAVE RTN USES IT
                              AS OUTPUT REGISTER.)
                    R14       RETURN ADDRESS
                    R13       ADDRESS OF DATA-SAVE RTN
                    R10       ADDRESS OF SHARED CONST
0                   PSA+ X'700'-PSA+X'7FF' USER WORKSPACE
0         OUTPUT:   R15  =    0  SAVE DATA
                    R15  ^    0  DROP DATA (WHOLE ENTRY)
-    .  DATA-SAVE-ROUTINE
0         INPUT:    R13       ENTRY POINT (VIA BALR R12, R13)
                    R12       RETURN ADDRESS
                    R1        ADDRESS OF DATA IF SAVE REQUEST
                    R0        FUNCTION AND LENGTH AS FOLLOWS
                                 -CONTAINS POSITIVE NUMBER:
                                  SAVE DATA WITH LENGTH SPECIFIED
                                 -CONTAINES NEGATIVE NUMBER:
                                  SAVE DATA WITH A LENGTH FIELD.
                                  (THE VALUE SPECIFIED DOES NOT
                                  INCLUDE THE 2 BYTE LENGTH FIELD)
                                 -CONTAINES ZERO:
                                  RETURN WITH VALUE OF RESIDUAL
                                  BYTES IN R15. DO NOT SAVE DATA.
0         OUTPUT:   R15       -ZERO: DATA HAVE BEEN ADDED
                              -POSITIVE: R15 CONTAINES RESIDUAL
                               COUNT +1 (+1 TO MAKE A RESIDUAL COUNT
                               OF ZERO POSITIVE)
                              -NEGATIVE: NO DATA ADDED. THE DATA
                               ADDRESS SPECIFIED IS NOT ACCESSABLE.
0                   R0 UP TO R14 AS ON INPUT.
1                                                           PAGE 012
 -MESSAGES
0 ALL DMS-MESSAGES ARE NUMBERED IN THE FOLLOWING FORM:
0         DMSNNNA
0              NNN  DECIMAL MESSAGE NUMBER
               A    ACTION INDICATOR AS FOLLOWS:
0                   I    INFORMATION MESSAGE
                    D    OPERATOR DECISION REQUIRED
                    A    OPERATOR ACTION   REQUIRED
0 MESSAGES TO THE SYSTEM CONSOLE ARE SPECIFIED WITH
          ROUTCDE=(10)
0         DMS001I END OF FILE ON SYSIN
               THE CONTROL INPUT FILE HAS SIGNALED END OF FILE.
               INPUT REQUEST FOR THIS FILE ARE REJECTED
0         DMS002I NO VALID INPUT BEFOR COL.71
               THE DMS CONTROL LANGUAGE MUST START BEFORE COL.71
0         DMS003D SELECT CONTROL INPUT
               DMS ASKS FOR CONTROL INPUT FROM THE SYSTEM CONSOLE.
               INPUT MUST BE SPECIFIED BETWEEN COLUMN 1 AND COLUMN 71.
               CONTINUATION OVER MORE THAN ONE LINE IS NOT POSSIBLE.
               IF A STRING OF SELECTIONS IS LONGER THAN ONE ENTRY, IT CA
               BE CONTINUED ON THE NEXT LINE WITH THE SAME
               SELECTION KEYWORD.
0         DMS010I PROGRAM IS NOT AUTHORIZED
               ANY OF THE DMS ROUTINES IS NOT AUTHORIZED.
               DMS PROCESSING IS TERMINATED.
               MAKE SURE THAT ALL OF THE DMS ROUTINES AND/OR
               LIBRARIES HAVE SYSTEM AUTHORIZATION.
0         DMS011I SCB IS NOT CREATED
               THE STAE CONTROL BLOCK COULD NOT BE BUILD BY ANY
               REASON. THIS MEANS THAT THE TEST OPTION WILL BE IGNORED
               IF IT WAS SPECIFIED AND AN ABEND CONDITION IS DETECTED
               DURING NORMAL PROBLEM PROGRAM EXECUTION. DMS PROCESSING
               IS CONTINUED.
0         DMS012I NO PAGE AVAILABLE
               A GETMAIN FOR A 4096 BYTE PAGE IN SUBPOOL 245 HAS
               FAILED. IF PAGE WAS FOR DMS-INITZALIZATION, DMS IS
               TERMINATED. IF PAGE WAS FOR ADDITIONAL BUFFERS,
               PROCESSING CONTINUES BUT LOST EVENTS MAY OCCUR USING
               THE MONITOR FUNCTION. IF POSSIBLE, INCREASE SQA SPACE
               AND RERUN DMS.
0         DMS013I UNKNOWN SYSTEM SITUATION
               A UNKNOWN SYSTEM CONDITION IS DETECTED.
               DMS IS TERMINATED. THE DMS MODULES ARE
               PROBABLY DOWN-LEVEL AND/OR MAINTENANCE IS
               NEEDED FOR DMS. CALL IBM PSR FOR ASSISTANCE
               OR CHECK ALL MODULES FOR THIS MSG USING YOUR
               LINK AND ASSEMBLY LISTINGS FOR THE CONDITION
               WHICH LEAD TO THIS MSG.
1                                                            PAGE 013
          DMS014I NOT ENOUGH STORAGE FOR DMS ROUTINES
               A CONDITIONAL GETMAIN TO OBTAIN STORAGE FOR DMS
               ROUTINES HAS FAILED. THIS MONITOR-FUNCTION IS TERMINATED.
               SPECIFY MORE SQA SPACE AND/OR SELECT LESS DYNAMIC TRACE
               FUNCTIONS.
0         DMS015I DISPATCHER FUNCTION DISCONNECTED
               THE DISPATCHER CODE AND/OR THE GTF DISPATCHER HOOKS
               COULD NOT BE FOUND. IF SELECTED, THE FUNCTION WILL
               BE IGNORED. PROCESSING CONTINUES, BUT YOU SHOULD
               CALL IBM PSR'S FOR MAINTENANCE SUPPORT ON DMS, SO
               THIS FUNCTION WILL WORK IF YOU NEED IT.
0         DMS016I GTF IS ACTIVE
               DMS IS TERMINATED BECAUSE GTF IS ACTIVE.
               STOP GTF AND RESTART DMS.
0         DMS017I DSS IS ACTIVE
               DMS IS TERMINATED BECAUSE DSS IS ACTIVE.
               STOP DSS AND RESTART DMS.
0         DMS018I LPA PAGE COULD NOT BE FIXED
               DMS IS TERMINATED. THIS IS A SHOULD NOT OCCUR CONDITION.
               BE SURE THAT A SYSABEND DUMP CONTAINING NUCLEUS IS
               SPECIFIED AND REPORT PROBLEM TO YOUR PSR.
0         DMS019I HIGHEST RECORD NUMBER IN THIS SESSION:
                  XXXXXXXX
               THIS IS THE HIGHEST RECORD NUMBER ASSIGNED DURING THIS SE
               THIS NUMBER INCLUDES THE LOST EVENT COUNT.
0         DMS020I ROUTINE ID MUST BE NUMERIC
               THE IDENTIFIER OF THE DYNAMICALLY LOADED ROUTINES MUST
               BE A NUMERIC CHARACTER
0         DMS021I DMS WAITS FOR THE NEXT COMMAND INPUT
               A WAIT COMMAND WAS ENTERED FROM SYSIN OR CONSOLE-INPUT.
               DMS WILL BE IN A WAIT STATUS UP TO THE NEXT SELECTED
               STOP- OR MODIFY-COMMAND.
0         DMS022I THE SELECTED OUTPUT UNIT IS NOT AVAILABLE
               THE DDNAME AS SPECIFIED IN THE OUTPUTDD KEYWORD
               (DEFAULT TRACEOUT) COULD NOT BE OPENED.
               THE SELECTED DEVICE-TYPE MUST BE DASD OR TAPE.
               DMS IS TERMINATED
0         DMS023I THE FIRST LOST EVENT IS DETECTED
               THE DATA SAVE ROUTINE WAS NOT ABLE TO SAVE ALL INCOMMING
               DATAS ON THE EXTERNAL DEVICE.
               ACTION: INCREASE THE BUFFERPAGE-PARAMETER OR/AND
                       INCREASE THE REGION SIZE     OR/AND
                       RUN DMS WITH THE HIGHEST POSSIBLE PRIORITY ...
0         DMS024I NUMBER OF LOST EVENTS IN THIS SESSION:
                  NNNNNNNN
               THIS NUMBER INDICATES THE NUMBER OF EVENTS WHICH
               COULD NOT BE SAVED.
1                                                            PAGE 014
          EXAMPLES FOR DMS CONTROL INPUT SPECIFICATIONS:
0         MONITOR,DEFAULT,GO
0              THIS WILL TRACE ANYTHING (EXCEPT DATAS AND CCW'S FOR IO-O
               NORMALLY, A LOT OF LOST EVENTS WILL RESULT WITH THIS
               SPECIFICATION. IF REALLY NEEDED, SPECIFY A HIGHER VALUE
               FOR BUFFERPAGES (BP=NN).
0         M,U=(180-18F,280-28F),CCW=40,DS=(OUTPUT),DI=(I,L=400),SVC=(00,
          SVC=(0F,80-FF),BP=20,GO
0              THIS WILL TRACE THE UNITS FROM 180-18F AND 280-28F. A CHA
                UP TO 40 CCW'S WILL BE SAVED PER SIO OR I/O EVENT.
                EACH CCW ON A STARTIO OPERATION WILL CONTAIN DATAS, WHEN
                THE CCW OP-CODE SPECIFIES AN OUTPUT OPERATION.
                SIMILARLY, EACH CCW ON A I/O INTERRUPT WILL CONTAIN DATA
                WHENEVER THE CCW OP-CODE SPECIFIES AN INPUT OPERATION.
                THE MAXIMUM DATA LENGTH PER CCW SAVED IS 400 BYTES. IF T
                CCW COUNT IS HIGHER THAN 400, THE FIRST 200 BYTES AND TH
                LAST 200 BYTES READ (WRITTEN) WILL BE SAVED.
                TO REDUCE THE NUMBER OF LOST EVENTS, THE BUFFERPAGES
                VALUE HAS BEEN INCREASED.
                THE SVC'S 00,01,0F AND USER SVC'S WILL ALSO BE TRACED.
0         M,SVC=ALL,DSP=ALL,JOBNAME=TTEST,GO
0               ALL SVC'S AND DISPATCHER EVENTS FOR JOB TTEST WILL
                BE SAVED.
0         M,PGM=ALL,GO
0               ALL PGM INTERRUPTS WILL BE TRACED (INCLUDING PAGE FAULTS
0         M,SVC=(8,RTN=5),GO
0               A USER WRITTEN (AND LINKED TO DMS-LIBRARY) DMSSVC5
                ROUTINE WILL GET CONTROL, WHENEVER AN SVC 8 IS ISSUED.
                SEE ALSO DESCRIPTION OF USER-ROUTINES.
0         EDIT,ALL,GO
0               ALL RECORDS SAVED WILL BE EDITED.
0         E,F,GO
0               THE SELECTIONS AT MONITOR TIME AND STATISTICS WILL BE PR
0         E,DEF,GO
0               IN THIS CASE, THE SESSION STARTED WITH 'MONITOR,DEFAULT,
                WILL BE EDITED.
0         E,U=ALL,CCW=ALL,DS=ALL,DI=ALL,SRECORD=10,PRECORD=300,GO
0               ONLY I/O CONCERNING RECORDS (NUMBERS BETWEEN 10 AND 300)
                WILL BE EDITED.
0         E,MODE=BASIC,GO
                ALL RECORDS SAVED WILL BE PRINTED, BUT NOT FORMATTED.
1                                                           PAGE 015
0        D M S  OVERVIEW
-                                                /***********
                                                /           *
  XXXXXXXXXXXX       XXXXXXXXXXXXXXX     I----->*   SYSIN   *
  X          X       X   I         X     I      *           *
  X          X  RES  X   I DMSROT0 X<-----      *************     ******
  X          X<----->X   I         X                              *
  X          X       X D I DMSINP0 X<---------------------------->*  CON
  X          X  EXT  X   I         X                              *
  X          X<----->X   I---------X                              ******
  X          X       X M I         X
  X          X  SVC  X   I DMSMAIN X
  X          X<----->X   I         X<-------------------------I
  X   OS     X       X S I DMSLDC  X                          I       **
  X          X  PGM  X   I         X                          I     **
  X   MVS    X<----->X   I---------X         *******          I    *
  X          X       X M I         X       **       **        I    ***
  X          X  MCH  X   I DATA-   X----->*           *       I    *  **
  X          X<----->X  <->  SAVE  X     *   TRACE-    *----  I    *
  X          X       X N I         X    *               *  I  I--->*
  X          X  I/O  X   I DMSWRT0 X--- *    OUT        *  I       *  LI
  X          X<----->X   I         X  I  *             *   I       *
  X          X       X T I---------X  I   *           *    I       *
  X          X  SIO  X   I         X  I     **      **     I       *
  X          X<----->X   I         X  I      ************  I        **
  X          X       X R I         X  I                    I          **
  X          X  DSP  X   I DMSEDIT X  I                    V
  X          X<----->X   I         X  I      *******
  X          X       X   I         X  I    **       **   DMSEDIT
  X          X       X   I         X  I   *           *
  XXXXXXXXXXXX       XXXXXXXXXXXXXXX  I   ***       ***
                           I    A     I-->*  *******  *
                           I    I         *           *
                           I    I         *  TRACE-   *
                           I    I---------*           *             ****
     ****************      I              *  OUT      *            *
     *              *      I              *           *            *  DY
     *              *<-----I              *           *            *
     *   LISTING    *                      **       **             *  US
     *              *                        *******               *
     *       ********                                              *  RO
     *     **                                                      *
     ******                                                         ****
-   FIGURE 1
1                                                           PAGE 016
0         D M S  OVERVIEW
0         DMS IS A DYNAMIC SOFTWARE SUPPORT TOOL FOR MVS.
0         ITS MAIN IDEA IS TO HAVE A FAST INTERFACE BETWEEN THE SYSTEM
          AND THE USER. THE USER CAN SPECIFY THE CONDITIONS, WHERE HE WA
          TO HAVE CONTROL; THEREAFTER, IN HIS USER ROUTINE,HE HAS THE
          POSSIBILITY TO DO, WHATEVER HE LIKES TO.
0         THE DEFAULT USERROUTINES SUPPLIED WITH DMS ARE DESIGNED TO DO
          TRACING OF SELECTED EVENTS. IN GENERAL, THESE USERROUTINES
          ARE VERY SMALL.
0         SINCE SOME GTF AND DSS HOOKS ARE USED IN DMS, IT CANNOT RUN
          WITH GTF OR DSS CONCURRENTLY.
0         DMS CAN BE STARTED AS SYSTEM TASK OR AS NORMAL JOB.
          HOWEVER, SYSTEM AUTHORIZATION IS REQUIRED TO RUN.
          AFTER DMS IS STARTED, IT REQUESTS CONTROL INPUT FROM SYSIN DD
          STATEMENT OR FROM THE MASTER CONSOLE. THE OUTPUT OF DMS CAN BE
          TAPE OR DIRECT ACCESS. IF USING DIRECT ACCESS,SUFFICIENT DASD
          SPACE SHOULD BE PROVIDED.
0         AFTER DMS HAS BEEN STOPPED (VIA THE MODIFY COMMAND:' F DMS,STO
          AGAIN CONTROL INPUT IS REQUESTED.
          AT THIS TIME, THE OUTPUT CREATED AT MONITOR TIME CAN BE EDITED
          DIRECTLY. THE OUTPUT IS PRINTED ON THE SYSPRINT DD DEVICE.
          IT IS ALSO POSSIBLE TO DO ANOTHER MONITOR SESSION INSTEAD OF E
          BUT THEN THE PREVIOUS SESSIONS OUTPUT MAY BE OVERWRITTEN (DEPE
          ON THE DISPOSITION OF THE TRACEOUT DD STATEMENT).
0         WE CAN DIVIDE DMS INTO TWO MAIN PARTS:
0                           'REGION' AND  'DYNAMIC' PART.
0         'REGION' PART IS THE CODE WHICH IS RUNNING AS NORMAL JOB WITHI
          THE DMS'S ADDRESS SPACE.
          IT CONTAINS THE INITIALIZATION / TERMINATION ROUTINES BESIDE
          OF EDIT PROCESSING.
0         'DYNAMIC' PART IS THE CODE WHICH IS RUNNING UNDER ANY ADDRESS
          AND TO WHICH IS GIVEN CONTROL DIRECTLY BY THE SYSTEM VIA PSW
          EXCHANGE OR VIA HOOKS.
          THIS PART CONSISTS OF THE MONITOR AND THE USERROUTINES.
0         THE COMMUNICATION BETWEEN THESE PARTS IS DONE VIA THE
          DMSCONST CONTROL BLOCK.
1                                                           PAGE 017
0        THE  D M S T R A C E  PROGRAM STRUCTURE
0        PART ONE: REGION CODE
-        XXXXXXXXXXXX                             XXXXXXXXXXXX
         X          X   MAIN                      X          X
  '0D40' X DMSCONST X   CONTROL                   X DMSROT0  X
         X          X   BLOCK                     X          X
         XXXXXXXXXXXX                             X    XXXXXXXXXXXX
         X          X   ENTRY                     X    X          X
  '0330' X DMSROT0  X   EXEC/START                X    X DMSDATE  X
         X          X   PARAMETERS                X    X          X
         XXXXXXXXXXXX                             X    XXXXXXXXXXXX
         X          X   MONITOR                   X          X
  '0928' X DMSMAIN  X   ENVIRONMENT               X    XXXXXXXXXXXX
         X          X   INITIALISATION            X    X          X
         XXXXXXXXXXXX                             X    X DMSINP0  X
         X          X   LOADER                    X    X          X
  '0A08' X DMSLDC   X   CONTROL                   X    XXXXXXXXXXXX
         X          X   ROUTINE                   X          X
         XXXXXXXXXXXX                             X    XXXXXXXXXXXX
         X          X   CONTROL                   X    X          X
  '1C28' X DMSINP0  X   INPUT                     X    X DMSMAIN  X
         X          X   PROCESSOR                 X    X          X
         XXXXXXXXXXXX                             X    X     XXXXXXXXXXX
         X          X   OUTPUT                    X    X     X         X
  '04F8' X DMSWRT0  X   WRITE AND                 X    X     X DMSLDC  X
         X          X   WAIT ROUTINE              X    X     X         X
         XXXXXXXXXXXX                             X    X     XXXXXXXXXXX
         X          X   STANDARD                  X    X          X
  '0448' X DMSPRT0  X   PRINT                     X    XXXXXXXXXXXX
         X          X   ROUTINE                   X          X
         XXXXXXXXXXXX                             X    XXXXXXXXXXXX
         X          X   CURRENT                   X    X          X
  '0198' X DMSDATE  X   TIME/DATE                 X    X DMSWRT0  X
         X          X   CONVERSION                X    X          X
         XXXXXXXXXXXX                             X    XXXXXXXXXXXX
         X          X   MESSAGE                   X          X
  '0580' X DMSMSG0  X   ROUTER                    X    XXXXXXXXXXXX
         X          X   MODULE                    X    X          X
         XXXXXXXXXXXX                             X    X DMSEDIT  X
         X          X   CONTROL                   X    X          X
  '00E0' X DMSCHK0  X   INPUT                     X    XXXXXXXXXXXX
         X          X   CHECKING                  X          X
         XXXXXXXXXXXX                             X          X
         X          X   MAIN                      XXXXXXXXXXXX
  '1C58' X DMSEDIT  X   EDIT
         X          X   CONTROL
         XXXXXXXXXXXX
-   FIGURE 2
1                                                           PAGE 018
          D M S R O T 0
0         WHEN DMS IS STARTED, DMSROT0 IS THE FIRST CSECT THAT GETS CONT
          IT IS PART OF THE DMSTRACE LOAD MODULE.
0         FIRST OF ALL, IT SETS THE REGISTER 10 (DMSREG) TO THE ADDRESS
          OF THE DMSCONST CSECT. THIS REGISTER IS TRANSPARENT TROUGH ALL
          DMS ROUTINES.
          NOW THE INTERFACE TO CONTROL INPUT (SYSIN OR CONSOLE) IS SETUP
          AND THE TITLE, IF PRESENT, IS WRITTEN TO SYSPRINT.
          AT THIS TIME, ALSO DMSDATE IS ENTERED.
0         DMSINP0 IS CALLED THE FIRST TIME TO PROCESS THE EXEC/START PAR
          AFTER RETURN FROM INP0, THE STOP/MODIFY ENVIRONMENT IS SETUP.
          DMSINP0 IS NOW CALLED THE SECOND TIME TO REQUEST THE MONITOR/E
          SELECTIONS.
0         WITH THESE SELECTIONS, CONTROL IS GIVEN TO DMSMAIN (MONITOR ON
          IF EDIT WAS SPECIFIED, CONTROL IS GIVEN DIRECTLY TO THE EDIT
          CONTROLLER DMSEDIT.
          IF CONTROL WAS GIVEN TO DMSMAIN, THE MONITOR ENVIRONMENT IS SE
          AFTERS ITS RETURN.THEREFORE DMSWRT0 IS CALLED TOWRITE OUT THE
          FILLED BUFFERS.
          DMSWRT0 WILL RETURN TO DMSROT0 INDICATING THAT DMS HAD BEEN
          STOPPED.
          DMSROT0 WILL NOW REQUEST NEW INPUT (IF MODIFY COMMAND WAS ENTE
          OR RETURN TO THE SYSTEM AFTER CLEAN-UP HAS BEEN DONE.
0         ROUTINES CALLED BY DMSROT0:
          DMSDATE DMSINP0 DMSTST0 DMSMAIN DMSWRT0 DMSEDIT
0         MESSAGES ISSUED BY DMSROT0:
          DMS008I
-
          D M S I N P 0
0         THIS MODULE GETS CONTROL FROM DMSROT0. FIRST OF ALL, A CHECK I
          TO DETERMINE, WETHER SYSIN INPUT IS AVAILABLE OR NOT.
          IF SYSIN INPUT IS AVAILABLE, IT IS OPENED; OTHERWISE, INPUT WI
          GOTTEN VIA WTO/WTOR.ON FIRST ENTRY FROM ROT0, EXEC/START COMMA
          PARAMETERS ARE PROCESSED.
          ON SECOND ENTRY, EIHTER CONTROL INPUT RECORDS FROM SYSIN  OR F
          THE MASTER CONSOLE ARE PROCESSED.
0         THE CONTROL INPUT IS PROCESSED USING A KEY-WORD SEARCH TABLE.
          PROCESS CONTROL INPUT MEANS SETTING UP THE CORRESPONDING FIELD
          IN THE MAIN CONTROL BLOCK, DMSCONST.
          CONTROL IS GIVEN BACK TO DMSROT0, AFTER THE FIRST 'GO' KEYWORD
          HAS BEEN PROCESSED.
0         DMSINP0 CAN CALL FOLLOWING MODULES:
          DMSLST0 DMSCHK0 DMSCRIPT
0         DMSINP0 CAN ISSUE FOLLOWING MESSAGES:
          DMS001I DMS002I DMS003D DMS004I  DMS005I DMS006I DMS007I
          DMS020I DMS021I
1                                                           PAGE 019
0         D M S M A I N
0         DMSMAIN IS ENTERED FROM DMSROT0 AFTER DMSCONST HAS BEEN INITIA
          IT WILL GET CONTROL ONLY IF 'MONITOR' OPTION WAS SELECTED.
0         A TEST IS MADE TO DETERMINE, IF THE 'DMSCONST' CSECT HAD BEEN
          TO SQA SPACE. IF YES, THIS INDICATES THAT DMS IS ALREADY ACTIV
          POSSIBLY A 'STOP' OR 'END' COMMAND WAS ENTERED, SO DMS IS TO B
          DISCONNECTED FROM THE SYSTEM.
          OTHERWISE, ENQ'S ARE DONE, THE STAE ENVIRONMENT IS SETUP FOR
          SYNCHRONOUS FAILURES AND THE PROGRAMS AUTHORISATION IS CHECKED
          AT THIS POINT, DMS GETS INTO KEY ZERO. A PAGE OF SQA (SUBPOOL
          GOTTEN AND THE DMSCONST CSECT IS MOVED TO FIXED CORE. THE REGI
          IS CHANGED TO POINT TO THE FIXED CONTROL BLOCK.
0         ALL NECESSARY SYSTEM INFORMATION AS ADDRESSES OF HOOKS, PSW'S
          ARE NOW COLLECTED INTO THE DMSCONST CONTROL BLOCK.
          THE SO CALLED 'CPUBLOCK', 4096 BYTES IN LENGTH, IS ALLOCATED F
          EACH ACTIVE CPU AND ANCHORED, TOGETHER WITH A POINTER TO THE
          'DMSCONST', IN THE SYSTEM PSA.
          ACCORDING TO THE 'BUFFERPAGES' SPECIFICATION, THE BUFFERS ARE
          ALLOCATED AND CHAINED TOGETHER.
          NOW 'DMSLDC' IS CALLED TO DO THE LOADING/DELETING OF THE NECES
          ROUTINES AND TO CONNECT/DISCONNECT THEM TO THE SYSTEM ACCORDIN
          THE 'MONITOR/STOP' FUNCTION.
          IF DMS IS TO BE STOPPED, THE FIXED 'DMSCONST' IS MOVED BACK IN
          REGIONS 'DMSCONST' AREA. ALSO VIRTUAL STORAGE IS GOTTEN FOR TH
          'CPUBLOCKS' AND BUFFERS. THEY ARE ALSO FILLED WITH THE CORRESP
          SQA AREAS. THE ALLOCATED FIXED STORAGE IS NOW RELEASED.
          THE OBTAINED RESOURCES ARE FREED AND 'DMSLDC' IS CALLED TO DEL
          THE LOADED ROUTINES.
0         IF A DUMP HAS TO BE TAKEN, AN ABEND MACRO IS ISSUED WITH A USE
          001 COMPLETION CODE. OTHERWISE CONTROL IS RETURNED TO 'DMSROT0
          TO REQUEST NEW INPUT SELECTIONS.
0         ROUTINES CALLED BY DMSMAIN:
          DMSLDC
0         MESSAGES ISSUED BY DMSMAIN:
          DMS010I DMS011I DMS012I DMS013I
          DMS016I DMS017I DMS027I
-         D M S L D C
0         THIS ROUTINE IS CALLED BY 'DMSMAIN' TO LOAD/DELETE THE REQUIRE
          ROUTINES ACCORDING TO 'MONITOR/STOP' FUNCTION AND TO
          CONNECT/DISCONNECT THEM TO THE SYSTEM.
0         CONNECTION IS DONE BY CHANGING THE NECESSARY SYSTEM NEW PSW'S
          MOVING THE HOOK-SVC'S TO THE APPROPRIATE SYSTEM ROUTINES.
          THE RESTART, SUPERVISOR CALL AND PROGRAM NEW PSW'S ARE ALWAYS
0         AT 'STOP' TIME, THIS PROCEDURE IS REVERSED AND CLEANUP TAKES P
          CONTROL IS NOW GIVEN BACK TO 'DMSMAIN'.
0         ROUTINES CALLED FROM DMSLDC: NONE
          MESSAGES ISSUED BY DMSLDC:
          DMS013I DMS014I DMS015I DMS018I
1                                                           PAGE 020
0         D M S D A T E
0         THIS ROUTINE FORMATS THE CURRENT DATE AND TIME INTO A PRINTABL
          FORM.
          A 'TIME' MACRO IS ISSUED TO OBTAIN THE CURRENT TIME AND DATE.
0         INPUT CONSISTS OF A VARIABLE LENGTH PARMLIST WITH TWO 8-BYTE A
          POINTERS.
          THE FIRST AREA WILL GET THE DATE IN THE FORM: MM/DD/YY .
          THE SECOND ARE, IF PRESENT, WILL GET THE TIME : HH.MM.SS .
0         THIS ROUTINE DOES NOT CALL OTHER ROUTINES.
0         DMSDATE ISSUES NO MESSAGES.
0         D M S W R T 0
0         DMSWRT0 GETS CONTROL FROM DMSROT0.
          IT IS THE WRITE/WAIT ROUTINE OF DMS. IT ALSO CHECKS FOR OPERAT
          'STOP/MODIFY' COMMANDS.
0         THE SYNCHRONISATION TAKES PLACE VIA XMPOST FROM 'DMSMNTR'.
          THE FILLED BUFFERS ARE WRITTEN OUT TO THE OUTPUT DATA SET USIN
          QSAM. AFTER GETTING CONTROL, THE INITIALIZED 'DMSCONST' CONTRO
          IS WRITTEN OUT TO THE DATA SET WITH A ZERO RECORD NUMBER.
0         THEN THE ROUTINE ENTERS A WAIT STATE. AFTER GETTING POSTED,THE
          BUFFERS ARE WRITTEN OUT.
          IF THE 'STOP' ECB HAS BEEN POSTED, AGAIN THE 'DMSCONST' IS WRI
          AS LAST RECORD TO THE OUTPUT DATA SET AND RETURN IS MADE TO
          DMSROT0.
0         DMSWRT0 DOES NOT CALL OTHER ROUTINES.
0         FOLLOWING MESSAGES CAN BE ISSUED BY DMSWRT0:
          DMS019I DMS022I DMS023I DMS024I
0         D M S P R T 0
0         THIS IS THE STANDARD PRINT ROUTINE.
          IT IS ENTERED BY ANY ROUTINE VIA THE 'PRINTER' MACRO.
          RETURN IS ALWAYS MADE TO THE CALLER.
0         NO ROUTINE IS CALLED, NO OWN MESSAGE IS GIVEN.
0         D M S M S G 0
0         THIS ROUTINE PROCESSES ALL MESSAGES. IT IS ENTERED VIA THE 'ME
          MACRO. RETURN IS ALWAYS MADE TO THE CALLER.
          THE MESSAGE IS GIVEN OUT ACTUALLY BY 'DMSPRT0'.
0         ROUTINES CALLED: DMSPRT0
0         DMSMSG0 DOES NOT ISSUE OWN MESSAGES.
1                                                           PAGE 021
0         D M S T S T 0
0         THIS ROUTINE WILL SNAP OUT THE 'DMSCONST' CONTROL BLOCK TO THE
          SNAPOUT DATASET IF 'INPTEST' HAS BEEN SELECTED. IT IS USED FOR
          CONTROL INPUT TESTING AND DEBUGGING.
0         NO MESSAGES ARE GIVEN AND NO ROUTINE IS CALLED.
0         D M S L S T 0
0         THIS ROUTINE LISTS THE CURRENT SELECTIONS AT ANY TIME. IT
          IS IMPLICITLY INVOKED VIA THE GO KEYWORD. THE SELECTIONS
          ARE PRINTED USING THE EDTCON0 ROUTINE.
0         D M S C H K 0
0         THIS ROUTINE IS NOT FULLY PROGRAMMED YET.
          AT THE MOMENT, IT WILL CHECK FOR SUFFICIENT EDIT CONTROL INPUT
          DEFAULT TO 'ALL' IF NOT.
0         D M S E D I T
0         THIS IS THE MAIN EDITOR ROUTINE.
          IT IS CALLED BY 'DMSROT0'.
0         THE FUNCTION PERFORMED BY THIS ROUTINE IS:
          A) TO EDIT THE SAVED DATA ACCORDING TO EDIT SPECIFICATIONS
             AND/OR
          B) TO CALL THE NECESSARY USER EDIT ROUTINES.
          C) TO FORMAT THE 'UNIT' RECORDS.
0         ROUTINES CALLED: ANY OF THE USER EDIT ROUTINES.
0         MESSAGES ISSUED BY DMSEDIT:
          DMS025I DMS026I
1                                                           PAGE 022
0        THE  D M S T R A C E  PROGRAM STRUCTURE
0        PART TWO: DYNAMIC CODE
-              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
               X                                                    X
               X    I-------------------------------------I         X
               X    I I---------I I---------I I---------I I         X
               X    V I         V I         V I         V I         X
               X ->I--I-----I  I--I-----I  I--I-----I  I--I-----I   X
               X I I        I  I        I  I        I  I        I   X
               X I I BUFFER I  I BUFFER I  I BUFFER I  I BUFFER I   X
               X I I   4K   I  I   4K   I  I   4K   I  I   4K   I   X
               X I I--------I  I--------I  I--------I  I--------I   X
               X I                                                  X
               X I-------------------I                              X
     SQA/CSA   X                     I                              X
               X                   I-I----------I       I---------I X
     STORAGE   X                -->I            I       I         I X
               X                I  I  DMSCONST  I       V         I X
               X ->I---------I  I  I            I     I---------I I X
               X I I         I  I  I------------I     I         I I X
               X I I  CPU 0  I  I  I            I<--  I  CPU 1  I I X
               X I I  BLOCK  I  I  I  MONITOR   I  I  I  BLOCK  I I X
               X I I   4K    I  I  I            I  I  I   4K    I I X
               X I I         I  I  I------------I  I  I         I I X
               X I I---------I  I  I            I  I  I---------I I X
               X I              I  I  USER      I  I              I X
               X I              I  I  ROUTINES  I  I              I X
               X I              I  I            I  I              I X
               X I              I  I------------I  I              I X
               X I              I                  I              I X
               X*I**************I******************I**************I*X
               X I              I                  I              I X
               X I              I  I------------I  I              I X
     REGION    X I              I  I  DMSTRACE  I  I              I X
               X I              I  I------------I  I              I X
               X I              I                  I              I X
               X*I**************I******************I**************I*X
               X I              I                  I              I X
               X I              I                  I              I X
               X I              I                  I              I X
               X I     I-------> <----------------------I         I X
               X I     I                           I    I         I X
               X I I---I-----I                     I  I-I-------I I X
     NUCLEUS   X ----- I     I                     I  I I     ----- X
               X   I         I                     I  I         I   X
               X   I  PSA 0  I                     I  I  PSA 1  I   X
               X   I       -----------------------> <----       I   X
               X   I         I                        I         I   X
               X   I---------I                        I---------I   X
               X                                                    X
               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
-   FIGURE 3
1                                                           PAGE 023
0         D M S M N T R
0         THIS ROUTINE IS THE MAIN MONITOR CONTROLLER.
          THE FIRST PART OF THIS ROUTINE CONSISTS OF A TABLE WITH POINTE
          TO THE DIFFERENT ENTRIES AND SUBROUTINES.
          SINCE THIS ROUTINE (AS WELL AS ANY USER DATA SAVE ROUTINE) MUS
          SELF-RELOCATABLE, THESE POINTERS ARE OFFSETS TO BE ADDED TO TH
          LOCATION.
0         FOLLOWING ENTRIES ARE PROVIDED:
0         RESTART            (PSW)
          EXTERNAL           (PSW)
          SUPERVISOR CALL    (PSW)
          PROGRAM CHECK      (PSW)
          MACHINE CHECK      (PSW)
          I/O INTERRUPT      (PSW)
          SIO ENTRY          (HOOK)
          DISPATCHER ENTRY   (HOOK)
          VARY CPU           (HOOK)
          ACR                (HOOK)
          RTM REFRAISH       (HOOK)
          STOP CPU           (HOOK)
          DISCONNECT DMS     (SUBROUTINE)
          COMPLETE PREFIX    (SUBROUTINE)
          BLOCK SAVE         (SUBROUTINE)
          USER DATA SAVE     (SUBROUTINE)
          RETURN TO MVS      (SUBROUTINE)
          JOBNAME SELECTION  (SUBROUTINE)
0         THE MONITOR WILL ANALYZE, WHY IT WAS ENTERED.
          IT WILL TAKE APPROPREATE ACTIONS SUCH AS:
          MAKE DECISION ON SELECTED EVENTS AND GIVE CONTROL TO THE USERR
          STOP DMS ON ERRORS (DISCONNECT AND SAVE ERROR INFORMATION).
          SAVE DATAS TO BUFFERS.
          ISSUE XMPOST ON FULL BUFFER.
          GIVE CONTROL BACK TO MVS.
          COMBINE DISPATCHER WITH PER (ACTIVATE PER IF SELECTED).
0         FOR DETAILED INFORMATION, ASSEMBLE THE DMSMNTR CSECT AND READ
          SOURCE CODE COMMENTS.
0         NO MESSAGES CAN BE GIVEN BY DMSMNTR.
1                                                           PAGE 024
0         STANDARD USER ROUTINES
0         THE STANDARD DATA SAVE USER-ROUTINES ARE ENTERED FROM DMSMNTR
          THE CORRESPONDING EVENT WAS SELECTED AND ITS ROUTINE ID IS ZER
0         THESE USER-ROUTINES MUST BE WRITTEN IN TYPE 1 SVC MODE AND THE
          BE SELF-RELOCATABLE, BECAUSE THEY ARE MOVED INTO SQA FOR EXECU
0         THE FOLLOWING LIST SHOWS THE STANDARD USER-DATA SAVE ROUTINES
          AND WHAT DATA THEY WILL SAVE.
          NOTE THAT THE LOGICAL RECORD PREFIX IS CREATED FOR ANY ROUTINE
          BY 'DMSMNTR' (SEE LAYOUT ON PAGE 033).
0         ROUTINE:   DATAS SAVED ARE:            ROUTINE CALLED VIA:
0         DMSDAT0    TRANSLATION EXCEPTION ADDR  'DAT=....'
          DMSDSP0    REGISTERS 0,1,14,15         'DSP=....'
          DMSEXT0    CPUID                       'EXT=....'
          DMSIOI0    CSW+CAW                     'I/O=....'
          DMSMCH0    NO ADDITIONAL DATA          'MCH=....'
          DMSMON0    NO ADDITIONAL DATA          'MON=....'
          DMSPER0    PER INTERRPT AND EXECUTED   'PER=(EMASK=.,GPMASK=..
                     INSTRUCTION                 XXXXXX-XXXXXX)'
          DMSPGM0    REGISTERS 0 - 15            'PGM=....'
          DMSSIO0    CSW+CAW                     'SIO=....'
          DMSSVC0    REGISTERS 0,1,14,15         'SVC=....'
          DMSUNT0    CSW+CAW, CCW'S AND DATAS    'UNIT=....'
                     ACCORDING TO:               'CCW=..',
                     'CCW', 'DS' AND 'DI' VALUES 'DS=..,DI=...'
1                                                           PAGE 025
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0000' *   24   * DMSID    *           * CONTROL BLOCK ACRONYM AND DA
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0018' *    4   * DMSLNGT  *           * LENGTH OF DMSCONST BLOCK
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '001C' *    4   * PAGESIZE *           * SIZE OF A PAGE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0020' *    4   * RETCODE  *           * DMS RETURN CODE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0024' *    4   * DMSCDMS  *           * ADDRESS OF THIS CSECT AFTER
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0028' *    4   * PGFIXECB *           * ECB FOR PAGE FIX REQUEST
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '002C' *    4   * DMSVADP  *           * VIRTUAL ADDR. OF SPOOL 245 C
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0030' *    4   * DMSRADP  *           * REAL    ADDR. OF SPOOL 245 C
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0034' *    4   * DMSFIXAD *           * FIXED CORE ADDRESS
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0038' *    4   * DMSFIXSZ *           * SPOOL-ID AND SIZE OF CORE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '003C' *    4   * DMSPFTP  *           * -> PAGE FRAME TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0040' *    4   * DMSPAGVT *           * -> PAGE VECTOR TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0044' *    4   * DMSPAGMK *           * MASK FOR RBN CALCULATION
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 026
0         D M S C O N S T  CONTROL BLOCK
0***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0048' *    4   * DMSDISMK *           * MASK FOR DISPLACEMENT CALCUL
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0050' *    8   * DMSMFLIH *           * A LM AND LPSW INSTRUCTION
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0058' *    8   * PGMNPSW  *           * THE SYSTEMS PROGRAM
 * '0060' *    8   * RESNPSW  *           * RESTART
 * '0068' *    8   * EXTNPSW  *           * EXTERNAL
 * '0070' *    8   * SVCNPSWD *           * SVC
 * '0078' *    8   * MCHNPSW  *           * MCH
 * '0080' *    8   * IOINPSW  *           * I/O         NEW PSW'S
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0088' *   16   * TIMEDATA *           * TIMESTAMP AREA
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0098' *    8   * DMSPGMW  *           * PSW AND INTERRUPTION
 * '00A0' *    8   * DMSPGMCD *           * CODE FOR RECURSIONS
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '00A8' *    4   * DMSHOOK  *           * A NOPR AND A SVC INSTRUCTION
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '00AC' *  00A   * SIOHOOKI *           * GTF HOOK FOR SIO INSTRUCTION
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '00B0' *  144   * HOOKTAB  *           * HOOKTABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0140' *    4   * CONLOCK  *           * LOCKWORD FOR CONNECT/DISCONN
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0144' *    4   * HIMACH   *           * HIGHEST REAL STORAGE ADDRESS
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0148' *    1   * CPUFLAG  *           * MP / UP FLAG
 *        *        *          * 1... .... * SYSTEM IS MP
 *        *        *          * .1.. .... * SYSTEM IS UP
 * '0149' *        * CPUNUM   *           * NUMBER OF CPU'S ON SYSTEM
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 027
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '014C' *   64   * CPUBLKS  *           * -> OF PAGE BLOCK PER CPU'S
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '018C' *    4   * DMSASCBP *           * -> OF DMS ASCB
 * '0190' *    4   * DMSTCBP  *           * -> OF DMS TCB
 * '0194' *    4   * DMSRBP   *           * -> OF DMS RB
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0198' *    4   * DMSCVTP  *           * -> OF CVT
 * '019C' *    4   * PCCAVTP  *           * -> OF PCCA
 * '01A0' *    4   * DMSDSVP  *           * -> OF DSS VECTOR TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '01A4' *    1   * STARTFL1 *           * START FLAG
 *        *        * ENQDONE  * 1... .... * ENQ HAS BEEN DONE
 *        *        * STAEDONE * ..1. .... * STAE IS DONE
 *        *        * STAENT   * ...1 .... * STAE IS ENTERED
 *        *        * GETFAIL  * .... 1... * GETMAIN HAS FAILED FOR A PAG
 *        *        * EOBUFFER * .... .1.. * TEMPORARY WORK BIT
 *        *        * PSWSAVED * .... ..1. * PSW'S HAVE BEEN MOVED
 *        *        * GTFENQ   * .... ...1 * GTF ENQ HAS BEEN DONE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '01A5' *        * STARTFL2 *           * SECOND FLAG BYTE
 *        *        * NODISP   * 1... .... * NO DISPATCHER EVENTS POSSIBL
 *        *        * DSSSET   * .1.. .... * DSS FLAG IS SET
 *        *        * DMSPDONE * ...1 .... * POST SRB HAS BEEN SCHEDULED
 *        *        * POSTFLAG * .... 1... * POST HAS BEEN ENTERED
 *        *        * BLSSECND * .... .1.. * SECOND ENTRY WITH POST ACTIV
 *        *        * STARTGO  * .... ..1. * READY TO SAVE DATA
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '01A8' *  332   * DMMAIN   *           * LOADED ROUTINE TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '02F4' *    1   * DMSFUNCT *           * DMS FUNCTION BYTE
 *        *        * DMSEDT   * 1... .... * EDIT FUNCTION
 *        *        * DMSMONIT * .1.. .... * MONITOR FUNCTION
 *        *        * DMSEOJ   * ..1. .... * EOJ DETECTED
 *        *        * DMSSTOP  * ...1 .... * STOP ENTERED
 *        *        * DMSDEFLT * .... 1... * DEFAULT SELECTED (EDIT ONLY)
 *        *        * DMSTEST  * .... ...1 * TEST SELECTED
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 028
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '02F5' *    1   * DMSREAS1 *           * REASON CODE BYTE 1 (TERMINAT
 *        *        * DMSRECUR * 1... .... * RECURSION BIT
 *        *        * DMSABEND * .1.. .... * ABEND DETECTED FOR DMS
 *        *        * DMSPREC  * ..1. .... * PROGRAM CHECK IN DMS
 *        *        * DMSMREC  * ...1 .... * MACHINE CHECK IN DMS
 *        *        * SVCRECUR * .... 1... * SVC RECURSION
 *        *        * IOIRECUR * .... .1.. * I/O RECURSION
 *        *        * CPUADDED * .... ..1. * VARY CPU ENTERED
 *        *        * CPUSTOPD * .... ...1 * CPU HAS BEEN STOPPED
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '02F6' *    1   * DMSREAS2 *           * REASON CODE BYTE 2 (DMS013I
 *        *        * SYSOKOK  * 1111 1111 * ALL HOOKS WERE FOUND
 *        *        * SYSBDPSA * 1... .... * PSA STORAGE (500-7FF) NOT FR
 *        *        * SYSBDSS1 * .1.. .... * DSS VECTOR TABLE NOT FOUND
 *        *        * SYSBDSIO * ..1. .... * GTF SIO HOOK NOT FOUND
 *        *        * SYSBDSS2 * ...1 .... * DSS HOOK NOT FOUND
 *        *        * SYSBDVCP * .... 1... * ACR HOOK NOT FOUND
 *        *        * SYSBDACR * .... .1.. * I/O ACR HOOK NOT FOUND
 *        *        * SYSBDRTM * .... ..1. * RTM HOOK NOT FOUND
 *        *        * SYSBDCPU * .... ...1 * STOP CPU HOOK NOT FOUND
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '02F8' *    4   * PERASCB  *           * ASCB OF SELECTED ASID
 * '02FC' *    4   * PEREMASK *           * EVENT MASK (CREG 9)
 * '0300' *    8   * PERSTART *           * PER START/END ADDR. (CREG 10
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0308' *    1   * PERMODES *           * PER MODE BYTE
 *        *        *          * 1... .... * ACTIVATE ON GLOBAL SRB
 *        *        *          * .1.. .... * ACTIVATE ON WAIT DISPATCH
 *        *        *          * ..1. .... * ACTIVATE ON LOCAL SRB
 *        *        *          * ...1 .... * ACTIVATE ON SUPERVISOR DISPA
 *        *        *          * .... 1... * ACTIVATE ON TASK DISPATCH
 *        *        *          * .... .1.. * ACTIVATE ON TASK DISPATCH (T
 *        *        *          * 1111 1111 * ACTIVATE ON ALL DISPATCHES
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '030C' *    2   * MONEMASK *           * MONITOR CALL MASK
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '030E' *    2   * DMSASID  *           * SELECTED ASID (0=ALL)
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 029
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0310' *    1   * DMSSELF1 *           * SELECTION FLAG BITS
 *        *        * SELASID  * 1... .... * ASID IS SELECTED
 *        *        * SELJOBN  * .1.. .... * JOBNAME IS SELECTED
 *        *        * SELSTEPN * ..1. .... * STEPNAME IS SELECTED
 *        *        * SELUNIT  * ...1 .... * UNIT=ALL SELECTED
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0314' *    8   * DMSJOBN  *           * JOBNAME FOR SELECTION
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '031C' *   16   * DMSSTEPN *           * PROCEDURE / STEPNAME FOR SEL
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '032C' *    4   * DMSSEQCT *           * HIGHSET RECORD NUMBER
 * '0330' *    4   * DMSSEQWD *           * LOCKWORD FOR RECNUM UPDATE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0334' *    4   * BUFECB   *           * BUFFER ECB
 * '0338' *    4   * DMSFBUFF *           * -> FIRST BUFFER
 * '033C' *    4   * DMSWRBUF *           * -> CURRENT OUTPUT BUFFER
 * '0340' *    4   * DMSDISBF *           * CURRENT BUFFER TO BE FILLED
 * '0344' *    4   * DMSBUFFW *           * LOCKWORD FOR BUFFER SERIALIZ
 * '0348' *    4   * DMSLSTEV *           * NUMBER OF LOST EVENTS
 * '034C' *   24   * BUFFWORK *           * BUFFER SAVE AREA
 * '0364' *    4   * DMSBDFLT *           * BUFFER DEFAULT VALUE
 * '0368' *    4   * DMSBALC  *           * NUMBER OF ALLOCATED BUFFERS
 * '036C' *    4   * DMSMINBF *           * NUMBER OF MINIMUM BUFFERS
 * '0370' *    4   * DMSBWNTD *           * NUMBER OF BUFFERS REQUESTED
 * '0374' *   34   *          *           * VARIOUS CONSTANTS
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0396' *    2   * EXTINT   *           * EXTERNAL INTERRUPT CODE TABL
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0398' *   32   * SVCINT   *           * SVC INTERRUPT MASK TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '03C2' *   32   * PGMINT   *           * PGM INTERRUPT MASK TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '03E2' *    1   * MCHINT   *           * MCH INTERRUPT MASK TABLE
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 030
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '03E3' *  512   * IOSINT   *           * I/O INTERRUPT MASK TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '05E3' *  512   * SIOINT   *           * SIO INTERRUPT MASK TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '07E3' *    1   * PCIINT   *           * PCI ON/OFF
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '07E4' *    1   * CCWNUM   *           * NUMBER OF CCW'S TO BE SAVED
 *        *        *          *           * 'FF' MEANS ALL
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '07E5' *    1   * DATASFLG *           * DATA SIO FLAG
 *        *        *          * 1... .... * OUTPUT
 *        *        *          * .1.. .... * INPUT
 *        *        *          * ..1. .... * NODATA
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '07E6' *   32   * DATASCOD *           * CODE TABLE FOR DATA SAVE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0806' *    2   * DATASLNG *           * DATA LENGTH TO BE SAVED PER
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0808' *    1   * DATAIFLG *           * DATA I/O FLAG
 *        *        *          * 1... .... * OUTPUT
 *        *        *          * .1.. .... * INPUT
 *        *        *          * ..1. .... * NODATA
 *        *        *          * ...1 .... * USE CODE TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0809' *   32   * DATAICOD *           * CODE TABLE FOR DATA MONITORI
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0829' *    2   * CPUID    *           * CPU MONITOR MASK
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0840' *   64   * TITLETXT *           * TITLE
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 031
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0884' *    4   * DMSECBLS *           * -> COMMUNICATION ECB
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0888' *    4   * DMSTSTMK *           * A TEST UNDER MASK INSTRUCTIO
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0894' *   40   * PINDD    *           * EDIT SELECTION PARAMETERS
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08BC' *    4   * LINECNT  *           * LINE COUNT FOR PRINTING
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08C0' *    4   * PAGECNT  *           * CURRENT PAGE NUMBER
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08C8' *    4   * PRTADDR  *           * -> PRINT ROUTINE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08CC' *    4   * MSGADDR  *           * -> MESSAGE ROUTINE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08D4' *    1   * EDTMODE  *           * EDIT MODE BYTE
 *        *        * NORM     * 1... .... *
 *        *        * BYTE     * .1.. .... *
 *        *        * HEXA     * ..1. .... *
 *        *        * USER     * ...1 .... *
 *        *        * BASICMDE * .... 1... *
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08D5' *    2   * EDTSTAT  *           * STATUS MASK FOR I/O EVENT ED
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08D8' *    1   * INPFLAG  *           * INPUT CONTROL FLAGS
 *        *        *          * 1... .... * CARD INPUT
 *        *        *          * .1.. .... * PARAMETER PROCESSING
 *        *        *          * ..1. .... * CARD PROCESSING
 *        *        *          * ...1 .... * CONSOLE INPUT
 *        *        *          * .... 1... * FIRST KEYWORD CHECK
 *        *        *          * .... .1.. * EOF ON CARD INPUT
 * '08D9' *    3   * INPADDR  *           * INPUT PROCESSING ROUTINE
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 032
0         D M S C O N S T  CONTROL BLOCK
-***********************************************************************
 *        *        *          *           *
 * OFFSET * LENGTH *   NAME   *   VALUE   * CONTENT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08DC' *    4   * INPDCB   *           * INPUT DCB
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '08E0' *   80   * DMSINBUF *           * INPUT BUFFER
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0930' *  256   * OPTABLE  *           * CCW OPCODE TABLE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0A40' *  444   * DMSCPSA  *           * SAVED PSA STORAGE
 *        *        *          *           *
 * '0A68' *    1   * PSADMSF  *           * PSA LOCATION X'528'
 *        *        *          * .... .... * OS/VS HAS CONTROL
 *        *        *          * 1... .... * DMS HAS CONTROL
 *        *        *          * .1.. .... * CONTROL REGISTERS ARE MODIFI
 * '0AB0' *   64   *          *           * REGISTERS 0-15 AT TIME OF ER
 * '0BD0' *    4   * PSDSPCDE *           * DISPATCHER 'INTERRUPTION' CO
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0C08' *  256   * DMSCUSR  *           * SAVED USER PSA STORAGE
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0D08' *    4   * DMSXMPST *           * XMEM-POST COUNT
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0D0C' *    4   *          *           * RESERVED
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0D18' *   16   * DMSSULEV *           * SU-LEVEL BIT MASK
 *        *        *          *           *
 ***********************************************************************
 *        *        *          *           *
 * '0D30' *    8   * DMSEDTSC *           * START CLOCK VALUE
 * '0D38' *    8   * DMSEDTPC *           * STOP CLOCK VALUE
 *        *        *          *           *
 ***********************************************************************
1                                                           PAGE 033
 - LOGICAL RECORD PREFIX LAYOUT
0         0                   4
          *----X----X----X----X----X----X----X----*
          I RECORD  I         I    I RECORD SEQ.  I
     00   I LENGTH  I 00   00 I ID I NUMBER       I
          I         I         I    I              I
          *----X----X----X----X----X----X----X----*
          I                                       I
     08   I TIME OF DAY CLOCK FOR THIS EVENT      I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I                                       I
     16   I TIME OF DAY CLOCK FROM LAST DSP-EVENT I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I                                       I
     24   I CPU IDENTIFIER OF THIS CPU            I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I PSW OF THE CURRENT EVENT              I
     32   I              I INTERPT I              I
          I              I CODE    I              I
          *----X----X----X----X----X----X----X----*
          I JOBNAME OR                            I
     40   I    I              I    I              I
          I 00 I    -> ASCB   I 00 I    -> TCB    I
          *----X----X----X----X----X----X----X----X
          I                                       I
     48   I VARIABLE DATA FROM THE DYNAMICALLY    I
          I LOADED EVENT HANDLING ROUTINES        I
          I                                       I
          *----X----X----X----X----X----X----X----*
0         RECORD ID     VARIABLE DATA FIELD CONTAINS
0         EXT    10     CPUID
          SVC    20     REGISTERS 0,1,14,15 IN THAT SEQUENCE
          PGM    30     REGISTERS 0 - 15
          PER    40     PER INTERRUPT ADDRESS AND EXECUTED INSTRUCTION
          DAT    50     NO VARIABLE FIELD
          MON    60     NO VARIABLE FIELD
          MCH    70     NO VARIABLE FIELD
          I/O    80    *CHANNEL STATUS WORD
          SIO    90    *CHANNEL STATUS AND ADDRESS WORD
          DSP    A0   **REGISTERS 0,1,14,15 IN THAT SEQUENCE
0        * ONLY VALID FOR 'SIO' AND 'I/O' SPECIFICATION.
           IF 'SIO' AND 'I/O' IS INVOKED IMPLICITLY VIA 'UNIT'
           KEYWORD,VARIABLE FIELD CONTENT IS BASED ON MONITOR/EDIT
           SPECIFICATION AS: CCW=...,DS=...,DI=... AND PCI=...
0       ** THE DISPATCHER OUTPUT RECORD CONTAINS AN 'INTERRUPTION'
           CODE OF:
         '1'   ON GLOBAL SRB DISPATCH
         '2'   ON WAIT TASK DISPATCH
         '3'   ON LOCAL SRB DISPATCH
         '4'   ON LOCAL SUPERVISOR DISPATCH
         '5'   ON NORMAL TASK DISPATCH
         '6'   ON TASK DISPATCH FROM EXIT
1                                                           PAGE 034
          D M S U N T 0  RECORD FORMAT
0         0                   4
          *----X----X----X----X----X----X----X----*
          I RECORD  I         I    I RECORD SEQ.  I
     00   I LENGTH  I 00   00 I ID I NUMBER       I
          I         I         I    I              I
          *----X----X----X----X----X----X----X----*
          I                                       I
     08   I TIME OF DAY CLOCK FOR THIS EVENT      I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I                                       I
     16   I TIME OF DAY CLOCK FROM LAST DSP-EVENT I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I                                       I
     24   I CPU IDENTIFIER OF THIS CPU            I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I    I         I         I              I
 SIO 32   I CC I 00   00 I  UNIT   I 00   00   00 I
          I    I         I ADDRESS I              I
          *----X----X----X----X----X----X----X----*
          I PSW OF THE CURRENT EVENT              I
 I/O 32   I              I  UNIT   I              I
          I              I ADDRESS I              I
          *----X----X----X----X----X----X----X----*
          I JOBNAME OR                            I
     40   I    I              I    I              I
          I 00 I    -> ASCB   I 00 I    -> TCB    I
          *----X----X----X----X----X----X----X----X
          I                                       I
     48   I          CHANNEL STATUS WORD          I
          I                                       I
          *----X----X----X----X----X----X----X----*
          I                   I
     56   I   DEVICE-TYPE     I
          I                   I
          *----X----X----X----*
0         VARIABLE PART:  C C W
0         *----X----X----X----X----X----X----X----*
          I       REAL        I      VIRTUAL      I
     60   I    CCW ADDRESS    I    CCW ADDRESS    I   THE CCW HAS FLAG B
          I                   I                   I   IN BYTE 4 (BITS 6+
          *----X----X----X----X----X----X----X----*   FOLLOWING MEANING:
          I                                       I
     68   I         CHANNEL COMMAND WORD          I   .... ...I DATA FOL
          I                   .FLAG.              I   .... ..I. IDA-LIST
          *----X----X----X----X----X----X----X----*   .... ..II IDA AND
          I      VIRTUAL      I                       .... ..00 NO DATA
     76   I   DATA ADDRESS    I
          I      OF  CCW      I
          *----X----X----X----*
1                                                           PAGE 035
          D M S U N T 0  RECORD FORMAT
0         VARIABLE PART:  D A T A
0         0                   4
          *----X----X----X----X----X----X----X----*
          I    I     REAL     I    I    VIRTUAL   I
     80   I 00 I  ADDRESS OF  I 00 I  ADDRESS OF  I
          I    I  FIRST  IDA  I    I  FIRST  IDA  I      THIS PART IS
          *----X----X----X----X----X----X----X----*      PRESENT IF
          I    I     REAL     I    I    VIRTUAL   I      BIT 6 IN BYTE 4
     88   I 00 I  ADDRESS OF  I 00 I  ADDRESS OF  I      OF THE CCW IS O
          I    I   LAST IDA   I    I   LAST IDA   I
          *----X----X----X----X----X----X----X----*
-         0                   4
          *----X----X----X----X----X----X----X----*
     80   IPOSITIVE I                             I      THIS PART IS
     OR   I  DATA   I       D A T A S             I      PRESENT IF
     96   I LENGTH  I                             I      BIT 7 IN BYTE 4
          *----X----X         X----X----X----X----*      OF THE CCW IS O
          I                   I                          AND THE DATAS
          I                   I                          ARE NOT SPLITTE
          *----X----//---X----*                          INTO TWO PARTS
-         0                   4
          *----X----X----X----X----X----X----X----*
          INEGATIVE IPOSITIVE I                   I
     80   IFULL DATAI  DATA1  I    D A T A 1      I      THIS PART IS
     OR   I LENGTH  I LENGTH  I                   I      PRESENT IF
     96   *----X----X----X----X----X----//---X----*      BIT 7 IN BYTE 4
          I                   IPOSITIVE I         I      OF THE CCW IS O
          I   D A T A 1       I  DATA2  I         I      AND THE DATAS
          I                   I LENGTH  I         I      ARE SPLITTED IN
          *----X----X----X----X----X----X----X----*      TWO PARTS
          I                   I
          I   D A T A 2       I
          I                   I
          *----X----//---X----*
-         THE VARIABLE PARTS FOR DATA AND CCW'S ARE
          REPEATED AS OFTEN AS REQUIRED.
1                                                           PAGE 036
          D M S 0 0 2  TAPE CONTENT
          -------------------------
0         THE DISTIBUTED DMS002 TAPE HAS FOLLOWING CHARACTERISTICS:
0         1600 BPI STANDARD LABEL: DMS002
0         FILE 1: JCL FILE
                  CONTAINS JCL EXAMPLES TO APPLY DMS
                  DSN=CONTROL,DCB=(RECFM=F,LRECL=80,BLKSIZE=80)
          FILE 2: DMS SOURCE CODE FILE
                  CONTAINS THE SOURCE CODE OF ALL MODULES (INCLUDING MAC
                  DSN=DMS.SOURCE.SAVE, UNLOADED VERSION CREATED WITH IEB
          FILE 3: DMS LOAD MODULES
                  CONTAINS THE UNLOADED MODULES OF DMS
                  DSN=DMS.LOAD.SAVE, UNLOADED VERSION CREATED WITH IEBCO
          FILE 4: DESCRIPTION
                  CONTAINS THE DMS DESCRIPTION
                  DSN=DMS.DESCRIPT,DCB=(RECFM=FBA,LRECL=80,BLKSIZE=800)
-         D M S  ASSEMBLY EXAMPLE
0         STEP 1: ALLOCATE LIBRARIES
                  //LD   EXEC PGM=IEBCOPY
                  //SYSPRINT  DD SYSOUT=A
                  //SYSUT3    DD UNIT=SYSDA,SPACE=(TRK,(10,10))
                  //SYSUT4    DD UNIT=SYSDA,SPACE=(TRK,(10,10))
                  //SRCE      DD DSN=DMS.SOURCE,DISP=(,CATLG),UNIT=SYSDA
                  //          SPACE=(CYL,(2,2,30)),DCB=SYS1.MACLIB
                  //LOAD      DD DSN=DMS.LOAD,DISP=(,CATLG),UNIT=SYSDA,
                  //          SPACE=(CYL,(2,2,30))
                  //TSRCE     DD DSN=DMS.SOURCE.SAVE,DISP=OLD,LABEL=2,
                  //          UNIT=3400-3,VOL=(PRIVATE,RETAIN,SER=DMS002
                  //TLOAD     DD DSN=DMS.LOAD.SAVE,DISP=OLD,LABEL=3,
                  //          UNIT=3400-3,VOL=(PRIVATE,RETAIN,SER=DMS002
                  //SYSIN     DD *
                        COPY  OUTDD=SRCE,INDD=((TSRCE,R))
                        COPY  OUTDD=LOAD,INDD=((TLOAD,R))
0         STEP 2: ASSEMBLY VIA INSTREAM PROCEDURE
                  //DMSASM    PROC  MEMBER=GO
                  //ASM       EXEC  PGM=IFOX00,PARM='NODECK,LOAD,XREF(SH
                  //SYSPRINT  DD SYSOUT=A
                  //SYSLIB    DD DSN=SYS1.MACLIB,DISP=SHR
                  //          DD DSN=DMS.SOURCE,DISP=SHR
                  //SYSUT1    DD UNIT=SYSVIO,SPACE=(1700,(600,300))
                  //SYSUT2    DD UNIT=SYSVIO,SPACE=(1700,(600,300))
                  //SYSUT3    DD UNIT=SYSVIO,SPACE=(1700,(600,300))
                  //SYSGO     DD DSN=&&LOADSET,DISP=(,PASS),UNIT=SYSDA,
                  //          DCB=BLKSIZE=720,SPACE=(TRK,(2,2))
                  //SYSIN     DD DSN=DMS.SOURCE(&MEMBER),DISP=SHR
                  //LKED      EXEC PGM=IEWL,PARM='XREF,LIST,NCAL,AC(0)'
                  //SYSPRINT  DD SYSOUT=A
                  //SYSUT1    DD UNIT=SYSDA,SPACE=(1024,(200,50))
                  //SYSLIB    DD DSN=DMS.LOAD,DISP=SHR
                  //SYSLIN    DD DSN=&&LOADSET,DISP=(OLD,DELETE),DCB=REC
                  //          DD DDNAME=SYSIN
                  //SYSLMOD   DD DSN=DMS.LOAD(&MEMBER),DISP=OLD
                  //          PEND
                  //DMSCONST  EXEC DMSASM,MEMBER=DMSCONST
1                                                           PAGE 037
0         D I A G N O S T I C  H I N T S
-         WHAT YOU CAN DO, IF YOU ENCOUNTER PROBLEMS USING DMS?
          SPECIFY 'TEST' IN FRONT OF EACH 'GO' KEYWORD. BE SURE,
          THAT YOU HAVE A //SYSABEND DD CARD INCLUDED.
          THE 'TEST' KEYWORD WILL CAUSE AN ABEND MACRO WITH DUMP
          OPTION TO BE ISSUED ON EVERY TERMINATION WITH NON-
          ZERO RETURN CODE.THIS 'TEST' OPTION IS AUTOMATICALLY
          SET, WHENEVER DMS DETECTS 'HOT' ERROR SITUATION.
0         IN ADDITION, YOU CAN DIRECTLYY FORCE A DMS DUMP BY
          ENTERING 'F DMS,DUMP' INSTEAD  OF THE NORMAL 'F DMS,STOP'
          MODIFY COMMAND.THIS WILL WORK WHENEVER DMS IS RUNNING
          WITH MONITOR FUNCTION.
0         IN SUCH A DUMP, ALL NECESSARY INFORMATION NEEDED TO DEBUG
          A PROBLEM CAN BE FOUND IN THE FIRST CSECT OF DMSTRACE
          LOAD MODULE: DMSCONST. FOR MORE INFORMATION ABOUT DMS
          CONST YOU SHOULD ASSEMBLE THE MACRO WITH FOLLOWING ASSEMBLY
          INPUT:
0         DMSMACRO TYPE=DSECT
          END
0         THE MOST IMPORTANT FIELDS OUT OF DMSCONST ARE LISTED
          ON THE 'DMSCONST' PAGES.
-YOUR COMMENT, PLEASE......
0         YOUR COMMENT ASSIST US IN TESTING AND IMPROVING THE CURRENT
          TEST-VERSION OF DMS.
          PLEASE DIRECT ALL INQUIRIES, REQUESTS AND TROUBLE REPORTS TO:
0         MR.
          B. HARTMANN
          IBM SWITZERLAND
          BRANCH OFFICE BASEL
          AESCHENGRABEN 9
          CH-4000 B A S E L
          SWITZERLAND
0         PHONE 0041 61 23 66 23
0         MR.
          F. NUSSBAUMER
          IBM SWITZERLAND
          BRANCH OFFICE BASEL
          HIRSCHGAESSLEIN 11
          CH-4000 B A S E L
          SWITZERLAND
0         PHONE 0041 61 23 66 23
