INP      TITLE 'DMSINP0 / CONTROL INPUT PROCESSING '
* * * * * * * * * * * * * * * * * * * * *
*                                       *
*              D M S I N P 0            *
*                                       *
* * * * * * * * * * * * * * * * * * * * *
         SPACE
* FUNCTION - OPERATION
*        THIS CSECT IS THE UTILITY CONTROL INTERPRETER
*        FOR EXEC-PARAMETER INPUT, START- STOP- AND MODIFY-
*        COMMAND INPUT AND SYSIN- OR CONSOLE-RECORDS.
         SPACE
* INPUT
*        AS SPECIFIED ABOVE
         SPACE
* OUTPUT
*        UPDATED SHARED CONSTANTS AND FLAGS
         SPACE 3
* CHANGES
*        ID    DATE     PROGRAMMER      REASON
*        1     03/18/76 F.NUSSBAUMER    UPDATES AFTER ALPHA TESTS
*        2     04/08/76 F.NUSSBAUMER    UPDATES AFTER BETA TEST
*        3     07/16/76 F.NUSSBAUMER    ERROR SOLVING
         PRINT ON,NOGEN
         DMSMACRO
         EJECT
DMSINP0  PGMSTART
         LA    R12,2048(0,R11)
         LA    R12,2048(0,R12)
         USING DMSINP0+4096,R12
         SPACE
         LR    R3,R1                    SAVE INPUT
         LA    R4,INPDCB
INPSW1   NOP   INP001                   FIRST ENTRY SWITCH
         MVI   INPSW1+1,240
*        OI    INPFLAG,INPPARM                                        1
         DEVTYPE INPDD,INPBUFF          CHECK FOR SYSIN
         SPACE
         LTR   R15,R15                  FOUND ?
         BNZ   INP001                   NO, GO
         SPACE
         OPEN  ((R4),INPUT)
         SPACE
         OI    INPFLAG,INPCARD          CARD AVAILABLE
         SPACE
INP001   MVC   PINDD(8),=CL8'TRACEOUT'  SET DEFAULT VALUES
         MVC   POUTDD(8),=CL8'TRACEOUT'
         MVI   TITLETXT,64
         MVC   TITLETXT+1(63),TITLETXT
         MVC   DMSSDATE(4),=PL4'0'
         MVC   DMSPDATE(4),=PL4'99999'
         MVC   DMSSTIME(4),=F'0'
         MVC   DMSPTIME(4),=F'-1'
         OI    INPFLAG,INPFIRST         FIRST KEYWORD ON PASS
         LTR   R3,R3                    IS IT FOR INPUT PARM
         BZ    INP004                   NO, GO
         OI    INPFLAG,INPPARM          SET PARM ENTRY                1
         LH    R4,0(R3)                 GET PARM LNGT
         LTR   R4,R4                    ANY INPUT ?
         BZ    INPRET0                  NO, RETURN
         LA    R5,70                    MAX. LENGTH
         CLR   R4,R5                    EXCEEDED ?
         BNH   INP003                   NO, GO
         LR    R4,R5                    USE MAX. LENGTH
INP003   BCTR  R4,0                     DECR FOR EX
         MVC   INPBUFF(80),INPBUFF-1    CLEAR
         EX    R4,INPMOVE1              INPUT TO TEXT BUFFER
         B     INP007                   PROCESS
         SPACE
INPMOVE1 MVC   INPBUFF+1(0),2(R3)
         SPACE 3
INP004   NI    INPFLAG,255-INPPARM      SWITCH OFF PARM PROCESS
         TM    INPFLAG,INPCRDIN         IS CARD INPUT REQUESTED
         BO    INP005A                  YES, GO
INP006   BAL   R9,INPCONSL              REQUEST CONSOL INPUT
         B     INP007
INP005A  TM    INPFLAG,INPCARD          IS CARD AVAILABLE
         BZ    INP006                   NO, REQUEST FROM CONSOLE
         B     INP005                   REQUEST CARD INPUT
         SPACE 3
***
*        CARD INPUT
***
         SPACE
INP005   BAL   R9,INPGET                READ A CARD
         TM    INPFLAG,INPCARD          OK
         BO    INP007                   YES, PROCESS
         MESSAGE 006                    NO SYSIN INPUT
         OI    DMSFLAG1,NOGO            SET NOGO
         B     INPRET4                  RETURN
         SPACE 3
***
*        PROCESS INPUT RECORD
***
         SPACE
INP007   LA    R0,72
         LA    R1,INPBUFF
INP008   OI    0(R1),64                 SET CAPITAL ZONE
         LA    R1,1(R1)
         BCT   R0,INP008
         SPACE
         CLC   INPBUFF(71),INPBUFF-1    IS IT BLANK
         BNE   INP009                   NO, GO
         TM    INPFLAG,INPPARM          WAS IT PARM INPUT
         BO    INPRET0                  YES, END PROCESS
         B     INP004                   PROCESS NEXT
INP009 PRINTER INPBUFLN,CONSOLE=ON      WRITE INPUT
         MVC   INPBUFF+71(8),=CL8' '    CLEAR REST OF BUFFER
         CLI   INPBUFF+1,C'*'           IS IT COMMENT                RL
         BE    INP009A                  YES                          RL
         CLI   INPBUFF,C'*'             IS IT COMMENT
         BNE   INP010                   NO, GO
INP009A  TM    INPFLAG,INPPARM          IS IT FOR PARM PROCESSING    RL
         BO    INPRET0                  YES, RETURN
         B     INP004                   GET NEXT
         SPACE
INP010   LA    R0,33                    MAX. LABEL LENGTH
         LA    R3,INPBUFF               BASE INPUT BUFFER
INP011   CLI   0(R3),64                 IS IT BLANK
         BE    INP012                   YES, END LABEL
         LA    R3,1(R3)
         BCT   R0,INP011
         SPACE
         MESSAGE 005                    LABEL TOO LONG
         OI    DMSFLAG1,NOGO            SET NOGO SWITCH
         B     INPRET4
INP012   LA    R0,INPBUFF+70            LAST VALID CHAR COL.71
         SR    R0,R3                    CALC DIFFERENCE
INP013   CLI   0(R3),64
         BNE   INP014
         LA    R3,1(R3)
         BCT   R0,INP013
         MESSAGE 002                    NO VALID INPUT BEFOR COL.71
         OI    DMSFLAG1,NOGO
         B     INPRET4
         SPACE
INP014   CLI   0(R3),C'A'               IS IT ALPHA NUMERIC
         LA    R4,INPBUFF+71            SET UP FOR MSG4 IF REQ       RL
         BL    INPMSG04                 NO, INVALID
         LA    R4,INPBUFF+71            BASE FIRST INVALID CHAR
         SR    R4,R3                    RESIDUAL BYTES
         XR    R1,R1                    CLEAR
         XR    R2,R2                    CLEAR
         EX    R4,INPTRT01
         BC    8+2,INPMSG04             NO KEYWORD FOUND
         LR    R4,R1                    SAVE STOP ADDR
         SR    R1,R3                    CALCULATE LENGTH
         XR    R5,R5                    CLEAR
         L     R15,INPKEYS              GET FIRST BRANCH ENTRY
         LA    R14,INPKEYS+4            GET FIRST KEYWORD
INP015   IC    R5,0(R14)                GET ENTRY LENGTH
         LTR   R5,R5                    IS IT END OF LIST
         BZ    INPMSG04                 KEYWORD NOT FOUND
         CLR   R1,R5                    SAME LENGTH ?
         BE    INP016                   YES, CHECK IT
INP017   LA    R15,4(R15)               NEXT ENTRY
         LA    R14,2(R5,R14)
         B     INP015
         SPACE
INPTRT01 TRT   0(0,R3),INPTRTAB
INP016   BCTR  R5,0
         EX    R5,INPKCMP1
         BE    INP018
         LA    R5,1(R5)
         B     INP017
INPKCMP1 CLC   0(0,R3),2(R14)           COMPARE KEYWORDS
         SPACE 2
* R15 POINTS TO THE PROCESS ROUTINE
* R3  POINTS TO THE KEYWORD START
* R4  POINTS TO THE FIRST SEPARATOR
         SPACE
INP018   TM    1(R14),COMMAND           IS IT COMMAND
         BZ    INP019                   NO, GO
         STM   R3,R4,INPSAVE
         BALR  R14,R15                  GO TO PROCESS THE COMMAND
         LM    R3,R4,INPSAVE
         CLI   0(R4),C','               IS IT COMMA
         BE    INP022                   YES, GO
         CLI   0(R4),C' '
         BNE   INPMSG04
         TM    INPFLAG,INPFIRST         IS IT FIRST ENTRY
         BNO   INPNEXTC                 NO, GET NEXT INPUT RECORD
         NI    INPFLAG,255-INPFIRST     SWITCH OFF FIRST ENTRY
         LA    R0,INPBUFF+71
INP020   LA    R4,1(R4)                 INCR CHAR POINTER
         CLR   R4,R0                    LAST EXCEEDED
         BNL   INPNEXTC                 GET NEXT INPUT RECORD
         CLI   0(R4),C' '               BLANK
         BE    INP020                   YES, CHECK NEXT
         LR    R3,R4                    SET NEXT KEYWORD
         B     INP014                   RETRY
         SPACE
         SPACE
INP022   NI    INPFLAG,255-INPFIRST     SWITCH OFF
         LA    R0,INPBUFF+70            LAST CHAR
         CLR   R4,R0                    REACHED
         BNL   INPNEXTC                 YES, GET NEXT
         CLI   1(R4),C' '               ANY NEXT KEYWORD
         BE    INPNEXTC                 NO, GET NEXT
         LA    R3,1(R4)                 SET TO NEXT
         B     INP014                   RETRY
INP019   NI    INPFLAG,255-INPFIRST     SWITCH OFF
         LA    R0,INPBUFF+71            COL. 72
         CLR   R4,R0
         BNL   INPKPROC                 YES, PROCESS
         CLI   0(R4),C'='
         BNE   INPKPROC
         LA    R4,1(R4)
         B     INPKPROC
         SPACE 3
***
*        KEYWORD PROCESS
***
         SPACE
INPKPROC LA    R0,INPBUFF+71
         LR    R3,R4
         BALR  R14,R15
INP024   LA    R0,INPBUFF+70            COL. 71
         CLR   R4,R0
         BL    INP025                   GO, IF LOWER
         CLI   0(R4),C','               CONTIG
         BE    INPNEXTC                 YES, GET NEXT CARD
         LR    R3,R4                    SET TEXT POINTER
         B     INPMSG04                 ERROR ON CARD
         SPACE
INP025   CLI   0(R4),C' '               CONTINUATION
         BE    INPNEXTC                 NO, GET NEXT RECORD
         CLC   0(2,R4),=C', '           LAST ON CARD
         BE    INPNEXTC                 YES, GET NEXT CARD
         CLI   0(R4),C','               CONTINUATION ON CARD
         LR    R3,R4                    SET TEXT POINTER
         BNE   INPMSG04                 NO, ERROR
         LA    R3,1(R4)                 SKIP TO NEXT KEYWORD
         B     INP014
         SPACE 3
***
*        REQUEST NEXT INPUT RECORD
***
         SPACE
INPNEXTC OI    INPFLAG,INPFIRST         SET NEW CARD ID
         TM    INPFLAG,INPPARM          WAS IT A PARM INPUT
         BO    INPRET0                  YES, GO BACK
         TM    INPFLAG,INPCRDIN         CARD INPUT MODE ?
         BZ    INP006                   NO, REQUEST CONSOLE INPUT
         BAL   R9,INPGET                NEXT CARD
         TM    INPFLAG,INPCARD          RECEIVED
         BO    INP007                   YES, PROCESS
         MESSAGE 007
         OI    DMSFLAG1,NOGO
         B     INPRET4
         EJECT
***
*        END OF FILE PROCESSING
***
         SPACE
INPEOFR  LA    R2,INPDCB
         CLOSE ((R2))
         OI    INPFLAG,INPEOF           SET END OF FILE FLAG
         BR    R9                       RETURN
         SPACE 3
***
*        CARD INPUT PROCESSING
***
         SPACE
INPGET   TM    INPFLAG,INPEOF           IS CARD AVAILABLE
         BZ    INPGET01                 YES, GO
         MESSAGE 001                    EOF MSG
         NI    INPFLAG,255-INPCARD      NO MORE CARDS AVAILABLE
         BR    R9                       NO, RETURN
INPGET01 MVC   INPBUFF(80),DMSINBUF     MOVE SHARED BUFFER
         GET   INPDCB,DMSINBUF          READ A CARD
         BR    R9                       RETURN
         SPACE 3
***
*        CONSOLE INPUT PROCESSING
***
         SPACE
         WXTRN MSG003
         DC    A(MSG003)                FOR XREF ONLY
INPCONSL XC    INPECB(4),INPECB         CLEAR ECB
         MVC   INPBUFF(80),INPBUFF-1    CLEAR BUFFER
         WTOR  'DMS003D SELECT CONTROL-INPUT',INPBUFF+1,70,INPECB
         WAIT  ECB=INPECB
         BR    R9
         SPACE 3
***
*        INVALID INPUT PROCESS
***
         SPACE
INPMSG04 MESSAGE 004                    INVALID RECORD
         SPACE
         LA    R1,INPBUFF
INP023   CLR   R1,R4
         BNL   INP027
         MVI   0(R1),C'*'
         LA    R1,1(R1)
         B     INP023
         SPACE
INP027   PRINTER INPBUFLN,CONSOLE=ON    WRITE FAULLING RECORD
         PRINTER INPSPACE,CONSOLE=ON    SPACE LINE
         TM    DMSFLAG1,TESTINP         IS IT IN INTERPRETER TEST MODE
         BO    INPRET0                  YES, GO TO SNAP FOR CONSTANTS
         TM    INPFLAG,INPCRDIN         IS IT FOR CARD INPUT
         BZ    INP006                   NO, ASK FOR NEXT CONSOLE INP
         OI    DMSFLAG1,NOGO
         B     INPRET4
         SPACE
INPSPACE DC    AL2(6,0),C'  '           SPACE LINE
         EJECT
***
*        PROGRAM RETURN
***
         SPACE
INPRET0  LA    R15,0
         B     INPRET
INPRET4  LA    R15,4
         B     INPRET
         SPACE
INPRET   L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         EJECT
***
*        PROGRAM CONSTANTS
***
         SPACE
INPBUFLN DC    AL2(94,0)
INPCNTRL DC    10C' '
INPBUFF  DC    80C' '
         SPACE
INPECB   DC    A(0)                     ECB FOR WTOR
INPSAVE  DC    2A(0)                    SAVE AREA
         DS    0D
INPDD    DC    CL8'SYSIN'               DD-NAME
         SPACE 3
***
*        TRANSLATION TABLE FOR SEPARATOR CHARACTERS
***
         SPACE
INPTRTAB DS    0D
SEPTRTAB EQU   *
         DC    256X'00'
         ORG   SEPTRTAB+C' '
         DC    AL1(04)
         ORG   SEPTRTAB+C','
         DC    AL1(08)
         ORG   SEPTRTAB+C'='
         DC    AL1(12)
         ORG   SEPTRTAB+C'('
         DC    AL1(16)
         ORG   SEPTRTAB+C')'
         DC    AL1(20)
         ORG   SEPTRTAB+C''''
         DC    AL1(24)
         ORG   SEPTRTAB+256             STEP BEHIND TABLE
         SPACE 3
XTRTAB   DS    0D
         DC    256X'00'
         ORG   XTRTAB+C'A'
         DC    X'FAFBFCFDFEFF'
         ORG   XTRTAB+C'0'
         DC    C'0123456789ABCDEF'
         SPACE 2
DECTRTAB DS    0D
         DC    256X'01'
         ORG   DECTRTAB+C'0'
         DC    10X'00'
         ORG   DECTRTAB+256
INPDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=INPEOFR,         X
               RECFM=FB,LRECL=80
         SPACE 3
***
*        DECIMAL CONVERSION
*
*        R1    -> BINARY FULLWORD
*        R4    -> INPUT DIGIT
*        R9    -> RETURN
***
         SPACE
INPDECNV LR    R5,R1                    SAVE R1
         LA    R1,8(0,R4)               HIGH LIMIT
         TRT   0(8,R4),DECTRTAB
         SR    R1,R4                    NUMBER OF DIGITS
         BNP   INPMSG04
         CLR   R1,R3                    IN LIMIT
         BNH   INP114                   YES, GO
         LR    R1,R3                    GET COUNT IN LIMIT
INP114   BCTR  R1,0                     DECR FOR EX
         EX    R1,INPACK1               PACK
         CVB   R6,DMSWORK1              CONVERT
         ST    R6,0(R5)                 SAVE
         LA    R4,1(R1,R4)              INCR INPUT ->
         BR    R9                       RETURN
         SPACE
INPACK1  PACK  DMSWORK1(8),0(0,R4)      PACK INPUT
         EJECT
***
*        HEXA-DECIMAL CONVERSION
*
*        R0    MAX.HEXA BYTES
*        R1    -> RECEIVE FIELD
*        R4    -> FROM FIELD
*        R9    -> RETURN
*
***
         SPACE
INPXCNV  LR    R2,R0                    GET MAX.
         AR    R2,R2                    DUPLICAT INPUT LNGT
         LA    R5,INPBUFF+71            CHECK
         CLR   R4,R5                    THE
         BNL   INPMSG04                 FROM
         SR    R6,R6                    FIELD
         CLI   0(R4),C'A'               FOR
         BL    INPMSG04                 HEXA
         LR    R7,R4                    SAVE START
INP043   LA    R7,1(0,R7)               INCR TO
         LA    R6,1(0,R6)               NEXT ENTRY
         CLR   R7,R5                    END OF CARD
         BNL   INP044                   YES, GO
         CLI   0(R7),C'A'               OUT OF HEXA
         BL    INP044                   YES, GO
         BCT   R2,INP043                DECR MAX. COUNT
INP044   BCTR  R6,0                     DECR FOR EX
         EX    R6,XTRANS                TRANSLATE INPUT
         LA    R6,1(0,R6)
         LR    R5,R0
         SLL   R5,28                    SHIFT IT
         SRL   R5,24                    TO THE POSITION FOR EX
         SLL   R6,28                    SHIFT IT
         SRL   R6,28                    TO THE POSITION FOR EX
         OR    R5,R6                    COMBINE TO AND FROM LENGTH
         EX    R5,XPACK                 PACK FROM -> TO
         LR    R2,R0                    GET TO-LENGTH
         BCTR  R2,0                     DECREMENT FOR EX
         EX    R2,XMOVE                 FROM WORK FIELD TO THE RECEIVER
         LA    R4,0(R6,R4)              RETURN
         BR    R9
XTRANS   TR    0(0,R4),XTRTAB
XPACK    PACK  DMSWORK1(0),0(0,R4)
XMOVE    MVC   0(0,R1),DMSWORK1
         EJECT
***
*        CHARACTER VERIFICATION
*
*        R0    MAX. NR OF CONVERTED CHAR
*        R1    -> TO RECEIVE FIELD
*        R4    -> INPUT STRING
*        R9    RETURN
***
         SPACE
INPCHCNV LR    R2,R0
         LR    R5,R1
INP038   MVI   0(R5),64                 BLANK
         LA    R5,1(R5)                 OUT
         BCT   R2,INP038
         LA    R2,INPBUFF+71
         CLR   R4,R2
         BNL   INPMSG04
         CLI   0(R4),C''''
         BE    INP040
INP039   MVC   0(1,R1),0(R4)            PROPAGATE THE CHARACTER
         LA    R1,1(0,R1)               INCREMENT TO ->
         LA    R4,1(0,R4)               INCREMENT FROM ->
         CLI   0(R4),C' '
         BER   R9
         CLI   0(R4),C','
         BER   R9
         CLR   R4,R2                    OUT OF RANGE
         BNLR  R9                       YES, STOP
         BCT   R0,INP039                DECR COUNT
         BR    R9                       RETURN IF ZERO
         SPACE
INP040   LA    R4,1(0,R4)               SKIP APOSTROPHE
         CLR   R4,R2                    OUT OF RANGE
         BNL   INPMSG04                 YES, ERROR
INP042   MVC   0(1,R1),0(R4)            PROPAGATE 1 CHAR
         LA    R1,1(0,R1)               INCR TO ->
         LA    R4,1(0,R4)               INCR FROM ->
         CLI   0(R4),C''''              STOP ID
         BNE   INP041                   NO, GO
         LA    R4,1(0,R4)               SKIP -> BEHIND
         BR    R9                       RETURN
INP041   CLR   R4,R2                    OUT OF RANGE
         BNL   INPMSG04                 YES, ERROR
         BCT   R0,INP042
         B     INPMSG04                 RANGE EXCEEDED
         EJECT
***
*        KEYWORD SEARCH TABLE
***
         SPACE
INPKEYS  KEYWORDS                                                      X
               (CONSOLE,CONSOLE,COMMAND),                              X
               (CARDINPUT,CARDIN,COMMAND),                             X
               (CARDIN,CARDIN,COMMAND),                                X
               (CARD,CARDIN,COMMAND),                                  X
               (DUMP,DUMP,COMMAND),                                    X
               (SYSIN,CARDIN,COMMAND),                                 X
               (LINECOUNT,LINECNTR),                                   X
               (LINECNT,LINECNTR),                                     X
               (LC,LINECNTR),                                          X
               (INPUTDD,INPUTDD),                                      X
               (INDD,INPUTDD),                                         X
               (I,INPUTDD),                                            X
               (OUTPUTDD,OUTPUTDD),                                    X
               (OUTDD,OUTPUTDD),                                       X
               (O,OUTPUTDD),                                           X
               (TITLE,TITLE),                                          X
               (MONITOR,MONITOR,COMMAND),    INPUT MONITORING          X
               (M,MONITOR,COMMAND),                                    X
               (MODE,MODE),             MONITOR MODE SET               X
               (STIME,STIME),           START TIME                     X
               (SDATE,SDATE),           START DATE                     X
               (EDIT,EDIT,COMMAND),     DATA EDITING                   X
               (E,EDIT,COMMAND),                                       X
               (PTIME,PTIME),           STOP TIME                      X
               (PDATE,PDATE),           STOP DATE                      X
               (END,END,COMMAND),                                      X
               (EOJ,END,COMMAND),                                      X
               (GO,GO,COMMAND),                                        X
               (PRINTOUT,PRINTOUT),                                    X
               (UNITS,UNITS),                                          X
               (UNIT,UNITS),                                           X
               (U,UNITS),                                              X
               (UNITTYPE,UTYPE),                                       X
               (UTYPE,UTYPE),                                          X
               (UT,UTYPE),                                             X
               (CCW,CCW),                                              X
               (DATASIO,DATASIO),                                      X
               (DS,DATASIO),                                           X
               (DATAI/O,DATAIOS),                                     1X
               (DI,DATAIOS),                                           X
               (CPUID,CPUIDIN),                                        X
               (ASID,ASID),                                            X
               (BUFFERPAGES,BUFFERS),                                  X
               (BP,BUFFERS),                                           X
               (SRECORD,SRECORD),                                      X
               (PRECORD,PRECORD),                                      X
               (STATUS,STATUS),                                        X
               (JOBNAME,JOBNAME),                                      X
               (JOB,JOBNAME),                                          X
               (J,JOBNAME),                                            X
               (STEPNAME,STEPNAME),                                    X
               (STEP,STEPNAME),                                        X
               (S,STEPNAME),                                           X
               (PROCNAME,PROCNAME),                                    X
               (PROC,PROCNAME),                                        X
               (P,PROCNAME),                                           X
               (USERRTN,USERRTN),                                      X
               (USER,USERRTN),                                         X
               (EXT,EXT),                                              X
               (SVC,SVC),                                              X
               (PGM,PGM),                                              X
               (PER,PER),                                              X
               (MON,MON),                                              X
               (DAT,DAT),                                              X
               (MCH,MCH),                                              X
               (I/O,IOS),                                              X
               (SIO,SIO),                                              X
               (PCI,PCI),                                              X
               (DSP,DSP),                                              X
               (PERMODE,PERMODE),                                      X
               (PM,PERMODE),                                           X
               (WAIT,WAIT,COMMAND),                                    X
               (STOP,WAIT,COMMAND),                                    X
               (RESET,RESET,COMMAND),                                  X
               (R,RESET,COMMAND),                                      X
               (LIST,LIST,COMMAND),                                    X
               (DEFAULT,DEFAULT,COMMAND),                              X
               (DEF,DEFAULT,COMMAND),                                  X
               (TEST,TEST,COMMAND),                                    X
               (F,FORMAT,COMMAND),                                     X
               (FORMAT,FORMAT,COMMAND),                                X
               (ALL,EDTALL1,COMMAND),                                  X
               (DESCRIPT,DESCRIPT,COMMAND),                            X
               (INPTEST,INPTEST,COMMAND)
         EJECT
DUMP     MVI   DMSRETCD,4
         OI    DMSFUNCT,DMSTEST+DMSEOJ
         B     INPRET4                  RETURN
         SPACE 3
PRINTOUT CLC   0(3,R4),=C'TSO'          IS TSO OUTPUT REQUESTED
         BNE   INPMSG04                 NO, UNSUPPORTED PARM
         LA    R4,3(,R4)
         OI    PRTFLAG,PRTTSO
         BR    R14
         SPACE 3
***
*        CONSOLE COMMAND
***
         SPACE
CONSOLE  NI    INPFLAG,255-INPCRDIN     SWITCH OFF CARD INPUT
         OI    PRTFLAG,PRTCONS          PRINT OUTPUT ALSO TO CONSOLE
         BR    R14                      RETURN TO INTERPRETER         2
         SPACE 3
***
*        INPUT TEST COMMAND
***
         SPACE
INPTEST  OI    DMSFLAG1,TESTINP         SET CONTROL ONLY
         BR    R14                      ETURN
         SPACE 3
***
*        CARDINPUT COMMAND
***
         SPACE
*                                       CONSOL OUTPUT STILS ON
CARDIN   OI    INPFLAG,INPCRDIN         SWITCH CARD INPUT ON
         BR    R14                      RETURN
         SPACE 3
***
*        OUTPUTDD KEYWORD
***
         SPACE
OUTPUTDD LA    R1,POUTDD                BASE TO FIELD
         B     INP035                   GO
         SPACE 3
***
*        INPUTDD KEYWORD
***
         SPACE
INPUTDD  LA    R1,PINDD                 BASE TO FIELD
INP035   LA    R0,8                     SET MOVE COUNT
         BAL   R9,INPCHCNV              CONVERT
         BR    R14                      RETURN
         SPACE 3
***
*        LINECOUNT PROCESS
***
         SPACE
LINECNTR LA    R1,LINECNT               BASE RECEIVE FIELD
         BAL   R9,INPDECNV              PROCESS
         BR    R14                      RETURN
         SPACE 3
***
*        TITLE KEYWORD
***
         SPACE
TITLE    LA    R0,64
         LA    R1,TITLETXT
         BAL   R9,INPCHCNV
         BR    R14
         SPACE
         SPACE 3
***
*        DATE CONVERSION
***
         SPACE
SDATE    LA    R1,DMSSDATE
         B     INP110
         SPACE
PDATE    LA    R1,DMSPDATE
         SPACE
INP110   TRT   0(2,R4),DECTRTAB         JJ
         BNZ   INPMSG04
         CLI   2(R4),C'.'               .
         BNE   INPMSG04
         TRT   3(3,R4),DECTRTAB         DDD
         BNZ   INPMSG04
         LA    R2,INPBUFF+65
         CLR   R4,R2
         BH    INPMSG04
         MVC   2(3,R4),3(R4)
         PACK  0(4,R1),0(5,R4)
         LA    R4,6(0,R4)
         BR    R14
         SPACE 3
***
*        TIME CONVERSION
***
         SPACE
STIME    LA    R1,DMSSTIME
         B     INP111
         SPACE
PTIME    LA    R1,DMSPTIME
         SPACE
INP111   TRT   0(2,R4),DECTRTAB         HH
         BNZ   INPMSG04
         CLI   2(R4),C'.'               .
         BNE   INPMSG04
         TRT   3(2,R4),DECTRTAB         MM
         BNZ   INPMSG04
         CLI   5(R4),C'.'               .
         BNE   INPMSG04
         TRT   6(2,R4),DECTRTAB         SS
         BNZ   INPMSG04
         LA    R2,INPBUFF+63
         CLR   R4,R2
         BH    INPMSG04
         MVC   2(2,R4),3(R4)            SHIFT
         MVC   4(2,R4),6(R4)            TOGETHER
         LA    R0,3                     CONVERT HHMMSS
         BAL   R9,INPXCNV
         MVI   3(R1),0                  TH
         LA    R4,2(0,R4)
         BR    R14
         EJECT
         SPACE 3
EXT      LA    R8,DMEXT
         BAL   R9,STRGCONV
         OC    EXTINT(2),HEXARSLT+2     SET SELECTED EVENTS
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14                      RETURN
SVC      LA    R8,DMSVC
         BAL   R9,STRGCONV
         OC    SVCINT(32),STRGMAP
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
PGM      LA    R8,DMPGM
         BAL   R9,STRGCONV
         OC    PGMINT(32),STRGMAP
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
DAT      LA    R8,DMDAT
         BAL   R9,STRGCONV
         OI    PGMINT+2,B'11100000'
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
MON      LA    R8,DMMON
         BAL   R9,STRGCONV
         MVC   MONEMASK(2),STRGMAP
         CLI   DMMON+6,C' '             OFF
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BER   R14                      YES, GO
         MVI   PGMINT+8,255
         MVC   PGMINT+9(7),PGMINT+8
         BR    R14
MCH      LA    R8,DMMCH
         BAL   R9,STRGCONV
         OC    MCHINT(1),STRGMAP
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
IOS      LA    R8,DMIOI
         BAL   R9,STRGCONV
         OC    IOSINT(256),STRGMAP
         OC    IOSINT+256(256),STRGMAP+256
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
SIO      LA    R8,DMSIO
         BAL   R9,STRGCONV
         OC    SIOINT(256),STRGMAP
         OC    SIOINT+256(256),STRGMAP+256
         BR    R14
UTYPE    CLI   0(R4),C'('
         BE    UPARENT
         CLC   0(3,R4),=C'ALL'
         BNE   UTYPE01
         MVI   DMSUTYPE,DMSUTYPS+DMSUTYPI
         B     UTYPE05
UTYPE01  CLC   0(3,R4),=C'SIO'
         BNE   UTYPE02
         MVI   DMSUTYPE,DMSUTYPS
         B     UTYPE05
UTYPE02  CLC   0(3,R4),=C'I/O'
         BNE   UTYPE04
UTYPE03  MVI   DMSUTYPE,DMSUTYPI
         B     UTYPE05
UTYPE04  CLC   0(3,R4),=C'IOI'
         BE    UTYPE03
         B     INPMSG04
UPARENT  LA    R4,1(,R4)
         B     UTYPE
UTYPE05  LA    R4,3(R4)
UTYPE06  CLI   0(R4),C')'
         BNER  R14
         LA    R4,1(,R4)
         B     UTYPE06
UNITS    LA    R8,DMUNT
         TM    DMSFUNCT,DMSDEFLT        IS DEFAULT SELECTED
         BZ    UNODEF                   NO, CONTINUE
         CLI   DMIOI+6,240              IS I/O SELECTED
         BNE   UNODEF                   NO, CONTINUE
         MVI   IOSINT+000,0             RESET UNITS
         MVC   IOSINT+001(255),IOSINT
         MVC   IOSINT+256(256),IOSINT
         MVC   SIOINT+000(256),IOSINT
         MVC   SIOINT+256(256),IOSINT
         MVI   DMIOI+6,64
         MVI   DMSIO+6,64
UNODEF   DS    0H
         OI    DMSSELF1,SELUNIT         ASSUME UNIT=ALL
         CLC   0(3,R4),=C'ALL'          IS IT ALL
         BE    UNITALL                  YES, CONTINUE
         NI    DMSSELF1,ALLBIT-SELUNIT  NO, RESET FLAG
UNITALL  DS    0H
         BAL   R9,STRGCONV
         OC    IOSINT(256),STRGMAP
         OC    SIOINT(256),STRGMAP
         OC    IOSINT+256(256),STRGMAP+256
         OC    SIOINT+256(256),STRGMAP+256
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
PCI      LA    R8,STRGDMMY
         BAL   R9,STRGCONV
         MVI   PCIINT,0
         CLI   STRGDMMY+6,C' '
         BER   R14
         MVI   PCIINT,255
         BR    R14
DSP      LA    R8,DMDSP
         BAL   R9,STRGCONV
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
SRECORD  LA    R1,DMSSRCRD              -> START RECORD
         LA    R0,4                     BYTE COUNT                    1
         BAL   R9,INPXCNV               CONVERT                       1
         BR    R14
PRECORD  LA    R1,DMSPRCRD              -> STOP RECORD
         LA    R0,4                     BYTE COUNT                    1
         BAL   R9,INPXCNV               CONVERT                       1
         BR    R14
MODE     MVI   EDTMODE,NORM
         CLC   0(4,R4),=C'NORM'
         BE    INP800
         MVI   EDTMODE,BYTE
         CLC   0(4,R4),=C'BYTE'
         BE    INP800
         MVI   EDTMODE,HEXA
         CLC   0(4,R4),=C'HEXA'
         BE    INP800
         OI    EDTMODE,HEXEBC                                        RE
         CLC   0(4,R4),=C'HCHA'                                      RE
         BE    INP800                                                RE
         MVI   EDTMODE,BASICMDE         SET BASIC EDIT MODE
         CLC   0(5,R4),=C'BASIC'        IS IT BASIC MODE
         LA    R4,1(R4)                 ADD ONE IF YES
         BE    INP800                   YES, CONTINUE
         BCTR  R4,R0                    RESET ORIGINAL VALUE
         LA    R0,8
         LA    R1,EDTMASKR
         BAL   R9,INPCHCNV
         MVI   EDTMODE,USER
         BR    R14
INP800   LA    R4,4(0,R4)
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
STATUS   LA    R0,2                     MAX 2 BYTES
         LA    R1,EDTSTAT
         BAL   R9,INPXCNV
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
ASID     LA    R8,STRGDMMY
         BAL   R9,STRGCONV
         NI    DMSSELF1,255-SELASID     SWITCH ODD SPECIFIC ASID
         NC    STRGSHEX(2),STRGSHEX
         BZR   R14
         MVC   DMSASID(2),STRGSHEX
         OI    DMSSELF1,SELASID         SET SELECTED ASID
         BR    R14
CPUIDIN  LA    R8,STRGDMMY
         BAL   R9,STRGCONV
         MVC   CPUID(2),STRGMAP
         BR    R14
CCW      CLC   0(3,R4),=C'OFF'
         BE    INP814
         CLC   0(3,R4),=C'ALL'
         BE    INP816
         LA    R1,HEXARSLT              CONVERT
         BAL   R9,INPDECNV              CCW-COUNT
         MVC   CCWNUM(1),HEXARSLT+3     SET CON COUNT
         BR    R14
INP814   MVI   CCWNUM,0                 SET CCW SAVE OFF
INP817   LA    R4,3(0,R4)
         BR    R14
INP816   MVI   CCWNUM,255               SET CCW SAVE ON
         B     INP817
         SPACE 3
DATASIO  LA    R3,DATASFLG
         B     INP820
DATAIOS  LA    R3,DATAIFLG
INP820   NI    STRGFLAG,255-PARENTH
         CLI   CCWNUM,0                 IS CCW=OFF                    1
         BNE   INP815                   NO, GO                        1
         MVI   CCWNUM,20                SET DEFAULT                   1
INP815   MVC   DATASLNG(2),=H'128'      SET DEFAULT DATA LNGT         1
         CLI   0(R4),C'('
         BNE   INP830
         LA    R4,1(0,R4)
         OI    STRGFLAG,PARENTH
INP830   CLC   0(3,R4),=C'OFF'
         BE    INP826
         CLC   0(3,R4),=C'ALL'
         BE    INP827
         CLC   0(5,R4),=C'INPUT'
         BE    INP829
         CLC   0(6,R4),=C'OUTPUT'
         BE    INP828
         CLI   0(R4),C'I'
       BE      INP929
         CLI   0(R4),C'O'
       BE      INP928
INP823   XC    STRGSHEX(4),STRGSHEX
         BAL   R9,HEXACONV
         MVC   STRGSHEX(2),HEXARSLT+2
         CLI   0(R4),C'-'
         BNE   INP824
         LA    R4,1(R4)
         BAL   R9,HEXACONV
         MVC   STRGPHEX(2),HEXARSLT+2
INP824   SLR   R5,R5
         SLR   R6,R6
         IC    R5,STRGSHEX+1
         IC    R6,STRGPHEX+1
INP821   LR    R8,R5
         LR    R9,7
         NR    R9,R5
         SRL   R8,3
         LA    R7,BIT0MASK
         LA    R7,0(R9,R7)
         IC    R9,0(R7)
         LA    R8,1(R3,R8)
         EX    R9,STRGBITS
         CLR   R5,R6
         BNL   INP822
         LA    R5,1(0,R5)
         B     INP821
INP822   TM    STRGFLAG,PARENTH
         BZR   R14
         CLI   0(R4),C','
         BNE   INP825
         LA    R4,1(0,R4)
         CLC   0(2,R4),=C'L='
         BNE   INP823
         LA    R4,2(0,R4)
         LA    R1,HEXARSLT
         BAL   R9,INPDECNV
         MVC   DATASLNG(2),HEXARSLT+2
         TM    STRGFLAG,PARENTH
         BZR   R14
INP825   CLI   0(R4),C')'
         BNE   INPMSG04
         LA    R4,1(0,R4)
         BR    R14                      BACK TO CALLER
INP826   MVI   0(R3),DATAIOF
         LA    R4,3(0,R4)
         B     INP822
INP827   MVI   0(R3),DATAIOL
         LA    R4,3(0,R4)
         B     INP822
INP828   MVI   0(R3),DATAIOO
         LA    R4,6(0,R4)
         B     INP822
INP829   MVI   0(R3),DATAIOI
         LA    R4,5(0,R4)
         B     INP822
INP928   MVI   0(R3),DATAIOO
         LA    R4,1(,R4)
         B     INP822
INP929   MVI   0(R3),DATAIOI
         LA    R4,1(,R4)
         B     INP822
JOBNAME  LA    R1,DMSJOBN               PROCESS THE SELECTED
         LA    R0,8                     JOBNAME
         BAL   R9,INPCHCNV              AND INDICATE IT
         OI    DMSSELF1,SELJOBN         AS SELECTED
         BR    R14
STEPNAME LA    R0,8                     PROCESS THE SELECTED
         LA    R1,DMSSTEPN              STEPNAME
         CLI   DMSSTEPN,64
         BE    INP831
         LA    R1,DMSSTEPN+8
INP831   BAL   R9,INPCHCNV
         B     INP833
PROCNAME CLI   DMSSTEPN,64              IS STEPNAME SELECTED
         BE    INP832                   NO, GO
         MVC   DMSSTEPN+8(8),DMSSTEPN   SHIFT STEPNAME
INP832   LA    R0,8                     AND
         LA    R1,DMSSTEPN              PROCESS
         BAL   R9,INPCHCNV              PROCNAME
INP833   OI    DMSSELF1,SELSTEPN        IND STEP AND/OR JOB SELECTED
         BR    R14
USERRTN  LA    R0,8
         LA    R1,DMUSR
         BAL   R9,INPCHCNV
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
BUFFERS  LA    R1,DMSBDFLT
         BAL   R9,INPDECNV
         BR    R14
PER      NI    STRGFLAG,255-PARENTH
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         MVI   DMPER+6,C'0'             SET RTN-ID = 0
         CLI   0(R4),C'('
         BNE   INP840
         OI    STRGFLAG,PARENTH
         LA    R4,1(0,R4)
INP840   CLC   0(3,R4),=C'OFF'
         BE    INP841
         CLC   0(3,R4),=C'ALL'
         BE    INP842
         CLC   0(6,R4),=C'EMASK='
         BE    INP843
         CLC   0(7,R4),=C'GPMASK='
         BE    INP844
         CLC   0(4,R4),=C'RTN='
         BE    INP845
         LA    R5,5
         LR    R6,R4
INP846   CLI   1(R6),C'K'
         BE    INP848
         LA    R6,1(R6)
         BCT   R5,INP846
         BAL   R9,HEXACONV
         MVC   PERSTART(4),HEXARSLT
         CLI   0(R4),C'-'
         BNE   INPMSG04
         LA    R4,1(R4)
         BAL   R9,HEXACONV
         MVC   PEREND(4),HEXARSLT
INP849   TM    STRGFLAG,PARENTH
         BZR   R14
         CLI   0(R4),C')'
         BNE   INP847
         LA    R4,1(R4)
         BR    R14
         SPACE
INP847   CLI   0(R4),C','
         BNE   INPMSG04
         LA    R4,1(0,R4)
         B     INP840
         SPACE
INP848   LA    R1,PERSTART              CONVERT THE
         BAL   R9,INPDECNV              FROM - TO
         CLC   0(2,R4),=C'K-'           ADDRESS
         BNE   INPMSG04                 FROM 1K BLOCKS
         LA    R4,2(0,R4)               TO STORAGE ADDR
         LA    R1,PEREND
         BAL   R9,INPDECNV
         CLI   0(R4),C'K'
         BNE   INPMSG04
         LA    R4,1(0,R4)
         L     R1,PERSTART
         MH    R1,=H'1024'
         ST    R1,PERSTART
         L     R1,PEREND
         MH    R1,=H'1024'
         ST    R1,PEREND
         B     INP849
         SPACE
INP841   MVI   DMPER+6,64               CLEAR ROUTINE ID
         MVI   PEREMASK,0               CLEAR EVENT MASK
         LA    R4,3(0,R4)
         B     INP849
         SPACE
INP842   MVI   PEREMASK,B'11110000'     SET EVENT MASK
         MVI   PERMODES,12              SET TASK MODE DEFAULT
         MVC   PEREND(4),=XL4'00FFFFFF' SET PER END ADDRESS
         MVC   PERSTART(4),=XL4'00070000'
         MVC   PERGPMSK,=H'-1'          SET GP MASK
         LA    R4,3(0,R4)
         B     INP849
         SPACE
INP843   LA    R4,6(0,R4)               CONVERT THE 1 BYTE
         BAL   R9,HEXACONV              EVENT MASK
         IC    R1,HEXARSLT+3
         SLL   R1,4
         LA    R5,240                   CLEAR UNUSED
         NR    R1,R5                    BITS
         STC   R1,PEREMASK
         B     INP849
         SPACE 3
INP844   LA    R4,7(R4)
         BAL   R9,HEXACONV              CONVERT VALUE
         MVC   PERGPMSK(2),HEXARSLT+2
         B     INP849
         SPACE 3
         SPACE
INP845   LA    R8,DMPER                 SET ROUTINE ID
         BAL   R9,STRG06
         BR    R14
         SPACE
PERMODE  MVI   PERMODES,0               SWITCH OFF
         CLI   0(R4),C'('               IS IT LAST
         BNE   PERMODL1
PERMODL0 LA    R4,1(,R4)
PERMODL1 CLI   0(R4),C')'               IS IT LAST
         BE    PERMODL0
         CLI   0(R4),C','               IS IT CONTINUATION
         BE    PERMODL0
         CLC   0(3,R4),=CL3'ALL'        IS IT ALL
         BNE   PERMODL3                 NO CHECK NEXT
         OI    PERMODES,ALLBIT          YES,SET IT
PERMODL2 LA    R4,3(,R4)                INCREASE
         B     PERMODL1
PERMODL3 CLC   0(3,R4),=CL3'OFF'
         BNE   PERMODL4
         MVI   PERMODES,0
         B     PERMODL2
PERMODL4 CLC   0(3,R4),=CL3'SVR'
         BNE   PERMODL5
         OI    PERMODES,X'10'
         B     PERMODL2
PERMODL5 CLC   0(3,R4),=CL3'DIS'
         BNE   PERMODL6
         OI    PERMODES,X'08'
         B     PERMODL2
PERMODL6 CLC   0(3,R4),=CL4'SRB'
         BNE   PERMODL7
         OI    PERMODES,X'B0'
         B     PERMODL2
PERMODL7 CLC   0(4,R4),=CL4'WDIS'
         BNE   PERMODL9
         OI    PERMODES,X'40'
PERMODL8 LA    R4,4(,R4)
         B     PERMODL1
PERMODL9 CLC   0(4,R4),=CL4'EXIT'
         BNE   PERMODLA
         OI    PERMODES,X'04'
         B     PERMODL8
PERMODLA CLC   0(4,R4),=CL4'TASK'
         BNE   PERMODLB
         OI    PERMODES,X'0C'
         B     PERMODL8
PERMODLB CLC   0(5,R4),=CL5'LOCAL'
         BNE   PERMODLC
         OI    PERMODES,X'20'
         LA    R4,5(,R4)
         B     PERMODL1
PERMODLC CLC   0(6,R4),=CL6'GLOBAL'
         BNE   PERMODLE
         OI    PERMODES,X'80'
         LA    R4,6(,R4)
         B     PERMODL1
PERMODLD CLI   0(R4),C' '
         BER   R14
         BCTR  R4,R0
         BR    R14
         SPACE
PERMODLE CLC   0(3,R4),=CL3'EXT'
         BNE   PERMODLF
         OI    PERMODEF,FOOTEXT
         B     PERMODL2
PERMODLF CLC   0(3,R4),=CL3'PGM'
         BNE   PERMODLG
         B     PERMODL2
PERMODLG CLC   0(3,R4),=CL3'SVC'
         BNE   PERMODLH
         OI    PERMODEF,FOOTSVC
         B     PERMODL2
PERMODLH CLC   0(3,R4),=CL3'IOI'
         BNE   PERMODLK
         OI    PERMODEF,FOOTIOI
         B     PERMODL2
PERMODLK CLC   0(3,R4),=CL3'MCH'
         BNE   PERMODLL
         OI    PERMODEF,FOOTMCH
         B     PERMODL2
PERMODLL CLC   0(3,R4),=CL3'SIO'
         BNE   PERMODLM
         OI    PERMODEF,FOOTSIO
         B     PERMODL2
PERMODLM CLC   0(4,R4),=CL4'FLIH'
         BNE   PERMODLN
         OI    PERMODEF,X'6D'
         B     PERMODL8
PERMODLN CLC   0(3,R4),=CL3'FLH'
         BNE   PERMODLD
         OI    PERMODEF,X'6D'
         B     PERMODL2
         EJECT
WAIT     MESSAGE 021                    WAITING FOR INPUT
         EXTRACT INPCSCPL,FIELDS=COMM
         L     R8,INPCSCPL
         L     R1,0(R8)                 -> COMM ECB
         WAIT  ECB=(R1)
         L     R7,4(R8)                 -> CIB
         NI    DMSFUNCT,X'3F'           CLEAR MONITOR AND EDIT FLAG  RQ
         CLI   CIBVERB,CVSTOP           STOP -CMD
         BNE   INP850A                  NO,GO                        RA
         MVI   DMSFUNCT,DMSEOJ          SET END OF JOB
         B     INPRET0                  RETURN
INP850   QEDIT ORIGIN=4(R8),BLOCK=(R7)  FREE CIB
         QEDIT ORIGIN=4(R8),CIBCTR=1    ALLOW NEW CIB
INP850A  NI    INPFLAG,255-INPCRDIN     SWITCH TO CONSOLE            RA
         B     INP006                   RETRY
INPCSCPL DS    F                        EXTRACT AREA
         SPACE 3
***
*        RESET
***
         SPACE
RESET    MVI   DMSRETCD,0
         NI    DMSEDTB1,ALLBIT-DMSEDLOG RESET VALID SELECTION FLAG
         MVC   DMUSR(8),=CL8' '
         MVI   DMUNT+6,64
         MVI   DMIOI+6,64
         MVI   DMSIO+6,64
         MVI   DMPGM+6,64
         MVI   DMPER+6,64
         MVI   DMDAT+6,64
         MVI   DMMON+6,64
         MVI   DMEXT+6,64
         MVI   DMSVC+6,64
         MVI   DMDSP+6,64
         MVI   DMMCH+6,64
         MVI   DMSUTYPE,DMSUTYPS+DMSUTYPI
         SR    R1,R1
         ST    R1,PERASCB
         STC   R1,PEREMASK
         STH   R1,PERGPMSK
         ST    R1,PERSTART
         ST    R1,PEREND
         MVI   EDTMODE,0
         STCM  R1,3,EDTSTAT
         MVC   PINDD(8),=CL8'TRACEOUT'
         MVC   POUTDD(8),=CL8'TRACEOUT'
         MVI   TITLETXT,64
         MVC   TITLETXT+1(63),TITLETXT
         MVC   DMSBDFLT(4),=F'8'
         MVC   CPUID(2),=H'-1'
         STH   R1,MONEMASK
         STH   R1,DMSASID
         STC   R1,DMSSELF1
         MVC   DMSJOBN,=CL8' '
         MVC   DMSSTEPN(16),DMSSTEPN-1
         XC    IOSINT+000(256),IOSINT
         XC    IOSINT+256(256),IOSINT+256
         XC    SIOINT+000(256),SIOINT
         XC    SIOINT+256(256),SIOINT+256
         XC    SVCINT(32),SVCINT        CLEAR THE SVC SELECTIONS      2
         XC    PGMINT(32),PGMINT
         STC   R1,MCHINT
         STC   R1,PCIINT
         MVI   CCWNUM,20
         MVI   DATASFLG,DATAIOO
         XC    DATASCOD(32),DATASCOD
         MVC   DATASLNG(2),=H'128'
         MVI   DATAIFLG,DATAIOI
         XC    DATAICOD(32),DATAICOD
         ST    R1,DMSSTIME
         MVC   DMSPTIME(4),=F'-1'
         MVC   DMSSDATE(4),=PL4'0'
         MVC   DMSPDATE(4),=PL4'99999'
         MVC   DMSSRCRD(4),=F'0'
         MVC   DMSPRCRD(4),=F'-1'
         MVI   PERMODES,12
         MVI   PERMODEF,0
         NI    DMSFUNCT,ALLBIT-DMSDEFLT
         BR    R14
         SPACE 3
***
*        DEFAULT
***
         SPACE
DEFAULT  ST    R14,STRGMAP              SAVE THE RETURN ->
         BAL   R14,RESET
         L     R14,STRGMAP
         MVI   DMIOI+6,240
         MVI   DMSIO+6,240
         MVI   DMPGM+6,240
         MVI   DMEXT+6,240
         MVI   DMSVC+6,240
         MVI   DMDSP+6,240
         MVI   DMMCH+6,240
         MVI   IOSINT+000,255           SET ALL BITS
         MVC   IOSINT+001(255),IOSINT
         MVC   IOSINT+256(256),IOSINT
         MVC   SIOINT+000(256),IOSINT
         MVC   SIOINT+256(256),IOSINT
         MVC   SVCINT(32),IOSINT
         MVC   PGMINT(32),IOSINT
         MVI   MCHINT,255
         MVI   EDTMODE,NORM
         MVC   EDTSTAT(2),=H'-1'
         MVI   CCWNUM,20
         MVC   DATASLNG(2),=H'128'
         OI    DMSFUNCT,DMSDEFLT
         NI    DMSEDTB1,ALLBIT-DMSFORMC
         NI    DMSEDTB1,ALLBIT-DMSFORMA
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14
         SPACE 3
***
*        MONITOR COMMAND
***
         SPACE
MONITOR  MVI   DMSFUNCT,DMSMONIT
         NI    DMSEDTB1,ALLBIT-DMSEDLOG RESET VALID SELECTION FLAG
         B     RESET                    CLEAR ALL EVENT SELECTIONS    1
         SPACE 3
***
*        EDIT COMMAND
***
         SPACE
EDIT     MVI   DMSFUNCT,DMSEDT
         B     RESET                    CLEAR ALL EVENT SELECTIONS    1
         SPACE 3
TEST     OI    DMSFUNCT,DMSTEST
         BR    R14
END      MVI   DMSFUNCT,DMSEOJ
         B     INPRET0
GO       DS    0H
         TM    DMSFUNCT,X'C0'           IS EDIT OR MONITOR           RQ
         BZ    INPMSG04                 NO,ERROR                     RQ
         OI    PRTFLAG,PRTCONGO         SET GO FLAG FOR LIST
         CALL  DMSLST0                  LIST SELECTIONS
         NI    PRTFLAG,ALLBIT-PRTCONGO  RESET LIST GO FLAG
         CALL  DMSCHK0                  CHECK IT ALSO
         TM    INPFLAG,INPPARM          IS IT FROM PARM FIELD        RN
         BZ    INPRET0                  NO,RETURN                    RN
         OI    INPFLAG,INPGO            INDICATE NO MORE PROSESSING  RN
         B     INPRET0                  RETURN
LIST     ST    R14,LISTSAVE
         CALL  DMSLST0
         L     R14,LISTSAVE
         BR    R14
FORMAT   OI    DMSEDTB1,DMSFORMC        FORMAT DMSCONST
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14                      AND RETURN
EDTALL1  OI    DMSEDTB1,DMSFORMA        SET EDIT =ALL INDICATOR
         OI    DMSEDTB1,DMSEDLOG        SET VALID SELECTION FLAG
         BR    R14                      RETURN
DESCRIPT STM   R14,R13,DESCSAVE         SAVE REGISTERS
         LOAD  EP=DMSCRIPT              LOAD DESCRIPT RTN
         LR    R4,R0                    ADDRESS OF ENTRY-POINT
         LR    R5,R1                    LENGTH OF MODULE IN DWDS
         SLL   R5,3                     IN BYTES
DESLOOP1 MVC   DESCLINE+4(80),0(R4)     MOVE TEXT TO BE PRINTED
         CLI   DESCLINE+4,C'1'          IS IT PAGE LINE
         BNE   *+10                     NO, CONTINUE
         MVC   DESCLINE+5(79),=CL80' '  YES, DO NOT PRINT PAGE TWICE
         PRINTER DESCLINE               WRITE LINE OUT
         LA    R4,80(,R4)               POINT TO NEW TEXT
         S     R5,=F'80'                SUBTRACT MOVED LENGTH
         C     R5,=F'80'                ARE THERE MORE LINES
         BNL   DESLOOP1                 YES, PROCESS THEM
         DELETE EP=DMSCRIPT             D0LETE ROUTINE
         LM    R14,R13,DESCSAVE         RELOAD REGISTERS
         BR    R14                      RETURN
DESCSAVE DC    16F'0'                   SAVE AREA
DESCLINE DC    AL2(84),AL2(0),CL80' '   LINE TO BE PRINTED
LISTSAVE DS    F
         SPACE 3
***
*        STRING PARAMETER CONVERSION
*
*              R4   -> TO INPUT TEXT
*              R9   -> RETURN
*              R8   -> ROUTINE NAME
         SPACE
STRGCONV STM   R8,R9,STRGSAVE           SAVE THE INPUT REGS           3
         NI    STRGFLAG,255-PARENTH     CLEAR PARENTHESIS FLAG
         CLI   0(R4),C'('               IS IT (
         BNE   STRG01                   NO, GO
         OI    STRGFLAG,PARENTH         SET ( FLAG
         LA    R4,1(0,R4)               INCR TEXT
STRG01   MVI   6(R8),C' '
         XC    STRGMAP(256),STRGMAP
         XC    STRGMAP+256(256),STRGMAP+256
         XC    HEXARSLT(4),HEXARSLT
         CLC   0(3,R4),=C'OFF'
         BE    STRG02
         MVI   6(R8),C'0'
         CLC   0(3,R4),=C'ALL'
         BNE   STRG03
         MVC   HEXARSLT(4),=4X'FF'
         MVI   STRGMAP,255
         MVC   STRGMAP+1(255),STRGMAP
         MVC   STRGMAP+256(256),STRGMAP
STRG02   LA    R4,3(0,R4)
         TM    STRGFLAG,PARENTH         WAS ( SELECTED
         BZR   R9                       NO, RETURN
         CLI   0(R4),C','
         BNE   STRG05
         LA    R4,1(0,R4)
         CLC   0(4,R4),=C'RTN='         ROUTINE ID
         BNE   INPMSG04                 NO, ERROR
STRG06   TM    4(R4),C'0'               IS IT NUMERIC
         BO    STRG04                   YES, GO
         MESSAGE 020
         B     INPMSG04                 NO, ERROR
STRG04   MVC   6(1,R8),4(R4)            SET ROUTINE ID
         LA    R4,5(0,R4)               STEP TEXT
STRG05   TM    STRGFLAG,PARENTH
         BZR   R9
         CLI   0(R4),C')'
         BNE   INPMSG04
         LA    R4,1(R4)
         BR    R9                       RETURN
STRG12   LA    R4,1(0,R4)
STRG03   CLC   0(4,R4),=C'RTN='
         BE    STRG06
         XC    STRGSHEX(4),STRGSHEX     CLEAR START + STOP VALUE
         BAL   R9,HEXACONV              CONVERT FIRST HEX DIGIT
         LM    R8,R9,STRGSAVE           RELOAD THE INPUT REGS         3
         MVC   STRGSHEX(2),HEXARSLT+2
         CLI   0(R4),C'-'
         BNE   STRG09                   NO, GOTO CONVERT
         LA    R4,1(0,R4)
         BAL   R9,HEXACONV              CONVERT STOP VALUE
         LM    R8,R9,STRGSAVE           RELOAD THE INPUT REGS         3
         MVC   STRGPHEX(2),HEXARSLT+2
STRG09   LH    R5,STRGSHEX              START VALUE
         LH    R6,STRGPHEX              STOP VALUE
         N     R5,=F'4095'
         N     R6,=F'4095'
STRG10   LR    R8,R5                    GET START BIT
         SRL   R8,3                     : 8 FOR REL BYTE
         LA    R9,7                     REL
         NR    R9,R5                    BIT
         LA    R7,BIT0MASK              BASE
         LA    R7,0(R9,R7)              THE BIT MASK
         IC    R9,0(R7)
         LA    R8,STRGMAP(R8)           BASE THE BIT MAP ENTRY
         EX    R9,STRGBITS
         CLR   R5,R6
         BNL   STRG11
         LA    R5,1(0,R5)
         B     STRG10
STRG11   LM    R8,R9,STRGSAVE           RELOAD THE INPUT REGS         3
         TM    STRGFLAG,PARENTH         IS IT MULTIPLE PARM
         BZR   R9                       NO, RETURN
         CLI   0(R4),C','               CONTINUED
         BE    STRG12                   YES, GO
         CLI   0(R4),C')'               CLOSED
         BNE   INPMSG04                 NO, ERROR
         LA    R4,1(0,R4)               RETURN
         BR    R9
         SPACE 3
***
*        HEXADECIMAL CONVERSION
***
         SPACE
HEXACONV EQU   *
         LA    R7,7                     CHAR COUNT MAX
         LA    R5,DMSWORK1              WORK AREA
         LA    R6,1                     COUNTER
         MVC   DMSWORK1(1),0(R4)        GET THE FIRST CHAR
         TR    DMSWORK1(1),XTRTAB       CHECK FOR
         CLI   DMSWORK1,0               HEXA
         BE    INPMSG04                 ERROR IF NOT
STRG07   LA    R5,1(0,R5)               INCR WORK FIELD
         LA    R4,1(0,R4)               INCR TEXT FIELD
         MVC   0(1,R5),0(R4)            NEXT CHAR
         TR    0(1,R5),XTRTAB           CHECK FOR
         CLI   0(R5),0                  HEXA
         BE    STRG08                   NO, GO
         LA    R6,1(0,R6)
         BCT   R7,STRG07
STRG08   EX    R6,HEXAPACK              CONVERT PACKED HEXA
         BR    R9                       RETURN
         EJECT
HEXAPACK PACK  HEXARSLT(5),DMSWORK1(0)
HEXARSLT DS    F
         DS    C
STRGSHEX DS    H                        HEXA START VALUE
STRGPHEX DS    H                        HEXA STOP VALUE
         DS    0D
STRGMAP  DS    512C                     STRING BIT MAP
STRGDMMY DS    8C                       DUMMY NAME FIELD
STRGFLAG DC    AL1(0)                   STRING FLAGS
PARENTH  EQU   128                      OPEN ( DETECTED
STRGSAVE DS    2F       REG SAVE AREA FOR STRING CONVERSION           3
STRGBITS OI    0(R8),0                  SET THE BIT
          SPACE 2
         LTORG
         END
