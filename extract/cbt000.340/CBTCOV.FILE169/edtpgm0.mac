         TITLE 'EDTPGM0  F O R M A T  D M S P G M 0  R E C O R D'
         PRINT NOGEN
         DMSMACRO
         PRINT ON,GEN
*****************************************
*                                       *
*                                       *
*        E D T P G M 0                  *
*                                       *
*                                       *
*****************************************
         SPACE
EDTPGM0  PGMSTART
         USING DMSCONST,DMSREG
         USING BLKBUFF,R7
         LR    R7,R1                    RECORD
         MVI   LTEXT,64
         MVC   LTEXT+1(131),LTEXT       CLEAR LINE
         HEADER L=PGM
         LA    R9,LTEXT                 POINT TO ACTUAL TEXT
         MVC   0(12,R9),=CL12'GPRS 0 - 15:'
         SLR   R5,R5                    CLEAR FOR
         IC    R5,BLKPSWCD+1            INSERT INTERRUPTION CODE
         CLI   BLKPSWCD+1,64            IS IT PGM INTERRUPT
         BL    EPGMOVE                  YES, GO
         LA    R5,X'14'                 ASSUME MONITOR
         BE    EPGMOVE                  GO IF MONITOR
         LA    R5,X'15'                 MUST BE PROGRAM EVENT
EPGMOVE  BCTR  R5,0                     NO ZERO ENTRY
         SLL   R5,5                     ENTRY IS 32 BYTE IN LENGTH
         LA    R6,EPGM000(R5)           POINT TO ACTUAL ENTRY
         MVC   LTEXT+59(32),0(R6)       MOVE TEXT
         PRINTER LINE
         MVC   LTEXT+59(32),TRTAB       CLEAR LINE
         LA    R6,BLKDATA               RECORD FIELDS
         LA    R5,2                     2 LINES
LOOP2    LA    R9,LTEXT                 START OF PRINT
         LA    R4,2                     TWO GROUPS WITH
LOOP3    LA    R3,4                     FOUR REGS EACH
LOOP4    UNPK  0(9,R9),0(5,R6)          MOVE
         TR    0(8,R9),TRTAB            DATA
         MVI   8(R9),64                 TO
         LA    R9,9(R9)                 LINE
         LA    R6,4(R6)                 IN
         BCT   R3,LOOP4                 HEXA
         LA    R9,2(R9)                 POINT TO NEW GROUP
         BCT   R4,LOOP3                 DO NEXT GROUP AND
         PRINTER LINE                   PRINT LINE
         BCT   R5,LOOP2
         L     R13,4(R13)               RETURN
         LM    R14,R12,12(R13)
         SR    R15,R15
         BR    R14
         EJECT
LINE     DC    AL2(137,0),CL10' '
LTEXT    DC    123C' '
         DS    0F
TRTAB    DC    256X'40'
         ORG   TRTAB+C'A'
         DC    X'0A0B0C0D0E0F'
         ORG   TRTAB+C'0'
         DC    C'0123456789ABCDEF'
         LTORG
         DS    0D
EPGM000  DC    CL32'OPERATION EXCEPTION'
         DC    CL32'PRIVILIGED OPERATION EXCEPTION'
         DC    CL32'EXECUTE EXCEPTION'
         DC    CL32'PROTECTION EXCEPTION'
         DC    CL32'ADDRESSING EXCEPTION'
         DC    CL32'SPECIFICATION EXCEPTION'
         DC    CL32'DATA EXCEPTION'
         DC    CL32'FIXED-POINT OVERFLOW EXCEPTION'
         DC    CL32'FIXED-POINT DIVIDE EXCEPTION'
         DC    CL32'DECIMAL OVERFLOW EXCEPTION'
         DC    CL32'DECIMAL DIVIDE EXCEPTION'
         DC    CL32'EXPONENT OVERFLOW EXCEPTION'
         DC    CL32'EXPONENT UNDERFLOW EXCEPTION'
         DC    CL32'SIGNIFICANCE EXCEPTION'
         DC    CL32'FLOATING-POINT DIVIDE EXCEPTION'
         DC    CL32'SEGMENT TRANSLATION EXCEPTION'
         DC    CL32'PAGE TRANSLATION EXCEPTION'
         DC    CL32'TRANSLATION SPECIFICATION '
         DC    CL32'SPECIAL OPERATION EXCEPTION'
         DC    CL32'MONITOR EVENT'
         DC    CL32'PROGRAM EVENT'
         END
