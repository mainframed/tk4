.appendix 'ISPF Panels and Programs'
.section 'ISPF Panels'
.subsection 'SRCMAINT Menu'
.pp
This menu is the entry point for ALL source maintenance functions.  It
may be accessed from the ISPF Master Menu.
The panels will be addressed beginning from the top of the SRCMAINT
menu.
.sp 2
.fo off
  SRCMAINT ------------- Source Maintenance Menu -------------
  Select application ===>

     0  TRACKING   - Update the Modification Tracking Log
     1  COPYCNTL   - Copy Source/Macro for modification
     2  ASM        - Assemble New Source Module
     3  LINKSMP    - Linkedit using SMP CDS information
     4  CUMOD      - Create SMP USERMOD Deck
     5  SMP        - SMP Services


     6  AUTONUM    - Number Inserted Records
     7  CNTLSCAN   - Browse Control Log D/S
     8  COMPARE    - Source Compare Utility
     9  RIBUPDTE   - IEBUPDTE Simulator
    10  SEARCHIT   - Source Search Utility
    11  BROWSASM   - Browse/Print MSS Assembly Listing
    12  ACTMODS    - List all active modules

     C  SRCMCLN    - Clean up files      S  Secure    - Secure Terminal
     E  EDIT       - ISPF Edit           B  BROWSE    - ISPF Browse

     I  INIT       - Initialize Source/SMP Defaults

  Press END key to terminate
.fo on
.pa
.subsection 'INIT Panels'
.pp
This is the primary panel for initialization of ISPF variables
for Source maintenance and SMP.
You need enter these panels only once unless you wish to change
any of these defaults.
.sp 2
.fo off
  INIT -------------  Initialize Defaults  --------------------

  Select application ===>

     1  Source Maintenance Defaults
     2  SMP Defaults
     3  JOB Card Defaults


     I1 Execute Defaults for Source Maintenance Only
     I2 Execute Defaults for SMP Only
     I3 Execute Defaults for Jobcard Only
     IA Execute Defaults (all of the above)





     P  ISPF Parms
     S  Secure Terminal
     X  Exit this panel
.pa
.subsub 'INITSRC1 Panel'
.sp
  INITSRC1 ---------  INITIAL SOURCE MAINTENANCE DEFAULTS --------------
  Enter/Verify Defaults

  User Modification Source Library     ===> $A1238
                                       ===> MODS
                                       ===> JASM

  Object Deck Dataset for Assemblies   ===> '$A1238.MODS.OBJ'

  Macro Libraries for Assemblies  #1   ===> 'JES3.SP131.JES3MAC'
                                  #2   ===> 'SYS1.MACLIB'
    Note: the Source Library      #3   ===> 'AMVS38H.AMODGEN'
          is always concatenated  #4   ===> 'SYS1.ACFMAC'
          first...                #5   ===>
                                  #6   ===>

  Linecount for Assemblies             ===> 55

  Increment for Autonum                ===> 100

  SMP Managed Source Dataset           ===> 'JES3.SP131.JES3SRC'

  Allow Delete of IBM Source           ===> N

.pa
.subsub 'INITSRC2 Panel'
.sp
  INITSRC2 ---------  INITIAL SOURCE MAINTENANCE DEFAULTS --------------
  Enter/Verify Defaults

  Output Dataset for SMP Decks           ===> $A1238
                                         ===> MODS
                                         ===> JASM

  Copy Control Dataset                   ===> 'JES3.CNTL.LOG'
  Modification Tracking DSN              ===> 'JES3.MODS.LOG(TRACKING)'
  Default FMID for New Src/Mac           ===> HJS2327

  Default SMP Managed Source Dsname      ===> 'JES3.SP131.JES3SRC'
                      Macro  Dsname      ===> 'JES3.SP131.JES3MAC'

  Default SYSLIB for New Source          ===> JES3SRC    DDNAME
                         Macro           ===> JES3MAC

  Default Distlib for New Source         ===> AJES3SRC   DDNAME
                          Macro          ===> AJES3MAC

  Default Link Library for New Lmods     ===> JES3LIB    DDNAME

  Default DISTLIB for New Object Deck    ===> AOSBA      DDNAME
.pa
.subsub 'INITSRC3 Panel'
.sp
  INITSRC3 ---------  INITIAL SOURCE MAINTENANCE DEFAULTS --------------
  Enter/Verify Defaults

  Default Test Load Library Dsn      ===> 'JES3.NAME.LOAD'

  Default Syslib Dsns for Link Edit  ===> 'JES3.DUMMY.LOAD'
                                     ===> 'JES3.SP131.JES3LIB'
                                     ===> 'JES3.SP131.JES3LPA'
                                     ===>
                                     ===>

  Default Libraries for Source Search:
                               DD1   ===> 'JES3.SP131.JES3SRC'
                               DD2   ===> 'JES3.SP131.JES3MAC'
                               DD3   ===>

  Default Libraries for RIBUPDTE:
                        Primary Lib  ===> 'JES3.SP131.JES3SRC'
                      Alternate Lib  ===> 'JES3.SP131.JES3MAC'

  Default Input Dataset for RIBUPDTE ===> 'JES3.SP131.SMPPTS'



.pa
.subsub 'INITJOB1 Panel'
.sp
  INITJOB1 ---------  INITIALIZE JOBCD DEFAULTS ------------------------
  Enter/verify parameters below:

  Default Job Class              ===> JES3

  Default Job Time               ===> 10

  Default Job Msgclass           ===> T

  Default Job Sysout class       ===> *

  Default Job Main Selection     ===> ANY

  Default Job Prty               ===> 7


      If you have not as yet set the SMP Defaults you will
      have to do so before execution of any SMP Functions
      some of which are included in the Source Maintenace System





.pa
.subsub 'INITSMP1 Panel'
.sp
  INITSMP1 ---------  INITIAL SMP DEFAULTS -----------------------------
  Enter/Verify Defaults

  Default System ID       ===> JES3       also used as name of SMP JCL S

  Default SMP CDS DSN     ===> 'JES3.SP131.SMPCDS'
    CDS Vol  ===>           UNIT  ===>           optional

  Default SMP PTS DSN     ===> 'JES3.SP131.SMPPTS'
    PTS Vol  ===>           UNIT  ===>           optional

  Default MSGVP for SMP Assembly Listings  ===> JESLIST   optional
  Default Prefix for MSVGP Datasets        ===> AJES3L    optional

  Default Space for Sysout Work D/S  Prim ===> 200     Sec ===> 200









.pa
.subsub 'INITSMP2 Panel'
.sp
  INITSMP2 ---------  INITIAL SMP DEFAULTS -----------------------------
  Enter/Verify Defaults

  Default SMP Receive Option  ===> B
     I - Usermod ID must be in cols 65-71 of all SRC and MAC updates
     D - Delete all objects prior to Receive
     B - Both of the above
     N - No check is performed

  SMP ENQ Dataset Name    ===> 'JES3.SP131.ENQ'

  Default Target Volume Serial Number  ===>         optional











.fo on
.pa
.subsection 'TRACKING'
.pp
This Menu item will place you into ISPF EDIT of the tracking log
form.  You will use this form to acquire the next available USERMOD id
and to note completion of a USERMOD.
.pa
.subsection 'COPYCNTL'
.pp
This panel will perform 4 functions related to the control of
source/macro elements.
.pp
The first is COPY which will copy a source element from the base
library to the user's library where it may be changed.  This action is
also logged in the specified control dataset.
.pp
The second function is FINISHED which will update the control
dataset with the COMPLETED status indicating that the user has finished
using the element.
.pp
The third function is to update the control dataset with the
CANCELed status indicating that the user has chosen not to continue
modifying that element.
.pp
The fourth function is new which just logs an entry in the control
log dataset for a new element.
.sp 2
.fo off
  COPYCNTL --------------- Copy Base Source to User Lib ----------------
  Enter/verify parameters below:

  Option:                   ===> COPY      COPY
                                           FINISHED
                                           CANCEL
                                           NEW

  Original source data set: ===> 'JES3.SP131.JES3SRC'

      Source/Macro name     ===>           Always required

  Modified source data set:
      PROJECT               ===> $A1238
      LIBRARY               ===> MODS
      TYPE                  ===> JASM

  Modification ID:          ===>            aabbbcd

  Control Data Set:         ===> 'JES3.CNTL.LOG'

.fo on
.pa
.subsection 'ASM'
.pp
This panel allows you to assemble any source modules that you have
updated that reside in your modification library.  You may specify up
to 6 SYSLIB datasets to be used by the assembler including your
modification library which is
.us ALWAYS
concatenated as the first SYSLIB.
.pp
You will always have to specify if you want the assembler to test for
re-entrancy.
.pp
The assembly listing will be placed in dataset userid.module.LISTING
unless the BATCH assembly option is chosen in which case it will be
placed in TSO hold.
.pp
After a TSO assembly you will be placed into ISPF BROWSE.  After browse
you will enter the ASMPRINT panel which is documented later in this
Appendix.
.pp
NOTE: Assembler H is the assembler invoked for the assembly.
.sp 2
.fo off
  ASM ------------- Source Maintenance Assembly ------------------------

  Input Source Library  ===> '$A1238.MODS.JASM'
           Member Name  ===> IATINGL

  Object Deck Library   ===> '$A1238.MODS.OBJ'

  Macro Libraries       ===> 'JES3.SP131.JES3MAC'
   (note:               ===> 'SYS1.MACLIB'
     the source         ===> 'AMVS38H.AMODGEN'
     library is         ===> 'SYS1.ACFMAC'
     always the 1st)    ===>
                        ===>

  Assembly Options:
  Rent: _     (Y or N)  Linecount: 55

  Batch or TSO: TSO     (Batch or TSO)

  For Batch JOB Card build:  (change or leave for defaults)
  Jobname: $A1238    Class: JES3      Time: 2       MSGCLASS: T
  Sysout Class: *    Main: /(K,L)     PRTY: 7
.fo on
.pa
.subsection 'ASMPRINT Panel'
.pp
This panel is entered from clist ASMPRINT which first goes into
BROWSE of the assembly listing.  You may print/delete/keep or browse
the listing after the initial browse.
.sp 2
.fo off
 ASMPRINT----------- ASM  Data Set Print Selection Panel ---------------
 Enter/verify parameters below:

 Option:                  %===> P         P - Print the data set
                                          B - Browse the data set
                                          D - Delete the data set
                                          K - Keep the data set

 Data Set Name:  '$A1238.IATUX01.LIST'

     SYSOUT Class             %===> 8
     Copies                   %===> 1
.fo on
.pa
.subsection 'LINKSMP'
.pp
This panel allows you to linkedit up to eight object decks (modules)
from your object deck library using the linkedit information stored in
the SMPCDS.  There are two types of modules that are handled by this
process:
.point begin
Existing Modules
.point 2
These are modules already known to the SMPCDS.  They will be linkedited
according to the JCLIN information stored in the SMPCDS.
.point
IEWL is invoked only once per load module and all eight modules may
be included.
.point 1
New Modules
.point 2
These are modules that have never been made known to SMP.
.point
If defaults are specified then they apply to ALL new modules.  This
includes LMOD name and attributes.  If you specify eight new modules
and specify a LMOD name then all eight modules are included in the
order specified to create a complex load module using the name supplied.
.point
If just the rent/reus or auth options are specified then they apply to
all new modules which will be linkedited as load modules having the
same name as the module.
.point
If no defaults are specified then each new module becomes a load module
having the same name as the module.
.point 1
You may specify the SYSLMOD library on this panel and you will be
prompted once for each load module allowing you to change the SYSLMOD.
This prompt is a panel that displays the load module name, the object
decks being used, the SMP determined target library, the SMP determined
linkedit attributes and the link library you chose.  At this time you
can change the link library or enter PF3/PF15 and return to the LINKSMP
panel without doing the current link.
.point end
.pa
.fo off
  LINKSMP ------------ SMP Linkedit Panel ------------------------------
  Enter/verify parameters below:

  Object Deck Dataset          ===> '$A1238.MODS.OBJ'

  Object members:     =>          =>          =>          =>
                      =>          =>          =>          =>

  SYSLMOD Dsname:              ===> 'JES3.NAME.LOAD'

  SYSLIB Dsnames:             1===> 'JES3.DUMMY.LOAD'
                              2===> 'JES3.SP131.JES3LIB'
                              3===> 'JES3.SP131.JES3LPA'
                              4===>
                              5===>

  Link Options for NEW modules ONLY:
    LMOD:          RENT/REUS:          Auth: N

  CDS Dsname:   ===>  'JES3.SP131.SMPCDS'
      Volume    ===>          Unit  ===>           If not cataloged

.fo on
.pa
.subsub 'SMPLINKP Panel'
.pp
This panel is entered once for every load module to be processed by
the linkage editor based upon the modules specified in LINKSMP.
.pp
You may only change the load library to be used.  All other data is
informational.  Note the SMP determined load library and if it is LPALIB
then you might reconsider your load library.
.pp
If you enter PF3 or PF15 then processing is stopped at this point
and any linkedit listings are displayed before returning to LINKSMP
panel.
.sp 2
.fo off
  SMPLINKP ----------- SMP Linkedit Prompt Panel -----------------------

      Load Module Name: IATNUC

      Object Decks for this Link: IATGRGU  IATCNCN  IATOSDR


      SMP Determined Load Library: JES3LIB

      Load Library Specified %===> 'JES3.LIONEL.LOAD'
      SMP Determined Link Edit Attributes: RENT






      Change the Load Library if desired and depress enter

      Enter PF3/PF15 to return to the primary Link Panel
.fo on
.pa
.subsection 'CUMOD'
.pp
This is a series of panels that simplify the process of constructing
the SMP USERMOD.  The first panel (CUMOD) requires that you enter
your modification library, the module/macro that you updated, the
SMP USERMOD id, where the original source/macro resides,
whether to create the SMP deck or not, and if you wish to number the
modified lines of code.
.pp
.rc 2 on
If you have assigned the same modid to multiple elements then this
panel will be entered multiple times.  The second thru nth time
the CUMODS panel MERGE option
.us MUST
be specified as yes.
.rc 2 off
.sp 2
.fo off
  CUMOD------------------- Create USERMOD Option Menu ------------------
  COMMAND ===>

  Modified source input data set:
      PROJECT               ===> $A1238
      LIBRARY               ===> MODS
      TYPE                  ===> JASM
      MEMBER NAME           ===> IATUX23

  Original source library   ===> 'JES3.SP131.JES3SRC'
           macro  library   ===> 'JES3.SP131.JES3MAC'

  Element Type              ===> SRCSRC or MAC
  Allow Deletions ?         ===> N        (Y or N)
      Autonum Required      ===> Y        (Y or N)

  SMP DECK GENERATION:      ===> Y        (Y OR N FOR CONTROL CARDS)
      USERMOD id            ===> SJ139B4  (aabbbcd)
      Description           ===>

  Report Disposition:       ===> NEW
.pa
.subsub 'AUTONUM'
.pp
If you specify that you want to automatically number the modified code
then you will see this panel.  It will prompt you for the increment
to be used in numbering the modified lines of code.
.pp
This panel invokes clist AUTONUM and program AUTONUM.  The autonum
program will read the entire source/macro into storage and then scan
down until it finds a blank sequence number in cols 73-80, it will then
add the specified increment to the last valid sequence number and insert
the new generated sequence number into the record.  If all modified
lines of code are updated successfully without any invalid sequence
number ranges then the module is written back to the dataset from
which came, otherwise processing terminates with a message on the
last valid sequence number and the current invalid sequence number.
.pp
If you wish a different increment then place a +xxxx in 73-77 where
xxxx is any 1-4 position numeric value that will be used for that
group of new records.
.pp
If UPDATE=N is specified then the updated source is placed in the
optional output dataset.
.pp
The Max Record Count informs the AUTONUM program of the maximum
number of source statements to GETMAIN.  If this is not enough then
you will have to specify a larger number.
.pp
Note:  The update takes place in storage and is not output unless
the update is completely successful (i.e. no overlays or large
numbers).
.pa
.fo off
  AUTONUM ---------------- Number Inserted Card Images -----------------
  Enter/verify parameters below:

  Input source data set:
      PROJECT               ===> $A1238
      LIBRARY               ===> MODS
      TYPE                  ===> JASM
      MEMBER NAME           ===> IATUX02
          or DSN  ===>

  Output source data set:                    Required for Update=N
      PROJECT               ===> $A1238
      LIBRARY               ===> MODS
      TYPE                  ===> JASM
      MEMBER NAME           ===>
          or DSN  ===>

  Update Option:            ===> Y           Y = inplace  N = copy

  Update Increment:         ===> 100

  Max Record Count:         ===> 5000
.fo on
.pa
.subsub 'CUMODS'
.pp
This panel is invoked to prompt for SMP information, some of which is
only needed for new source/macros.  As a minimum you must specify if
you are updating a source element or a macro element.  You may also
specify if you want to allow the CUMOD program to generate comment
cards for deleted lines of code.
.pp
You must also specify the library into which the SMP USERMOD will
be created.  The default is your modification library.
.pp
If there are any SMP pre-requisite or co-requisite SYSMOD's that
are not applied to the element you are working on and you wish them
included in the SMP deck then you may specify up to five of each.
.pp
If the element is new to SMP then you may specify it here and save
the overhead of checking the CDS for it.
.pp
This panel is invoked if the SMP option is selected on the CUMOD
panel.  Here you may change the output location of the USERMOD, the
CDS to use and any PRE-REQ's, CO-REQ's.
.pp
.rc 2 on
NOTE: The MERGE option
.us MUST
be specified as Yes for the second thru nth elements to be added to
your USERMOD.
.rc 2 off
.pa
.fo off
 CUMODS------------------ USERMOD SMP PARAMETERS MENU ------------------
 Enter/verify parameters below:

 Output for SMP Deck:                    USERMOD: SJ999XX
     PROJECT               ===> $A1238
     LIBRARY               ===> MODS
     TYPE                  ===> JASM
     MEMBER                ===> SJ999XX
                                _

 SMP CDS data set:         ===> 'JES3.SP131.SMPCDS'

 SMP Delta Deck Option:    ===> M         F = complete delta
                                          M = just for MODID = SJ999XX
 SMP Information for SJ999XX
     COREQ                 ===>
     PREREQ                ===>
     SUP                   ===>

 Merge Option:             ===> N         Y or N
 NEW SMP Element:          ===> n         Y or N
.fo on
.pa
.subsub 'CUMODSM'
.pp
This panel is displayed only for macro updates to allow you to specify
any modules that need to be assembled when SMP applies the macro.
.sp 2
.fo off
  CUMODSM ------------ USERMOD SMP MACRO UPDATE MENU -------------------

  Enter Names of Modules to be Assembled when this Macro is APPLIED:
  (upto 9 names per line separated by blanks)

  UM1:
  UM2:
  UM3:
  UM4:
  UM5:
  UM6:
  UM7:
  UM8:
  UM9:
  UMA:
  UMB:
  UMC:
  UMD:
  UME:
  UMF:
  UMG:
.fo on
.pa
.subsub 'CUMODN'
.pp
This panel is displayed for new source/macro elements to prompt for
the correct distribution library, the correct target library, and
any linkedit information that overrides the defaults.
.sp
.fo off
 CUMODN------------------ USERMOD SMP PARAMETERS MENU ------------------

 SMP Information for SJ999XX element IATUX23

     Source  Information
     FMID                  ===> HJS2327
                                _
     SYSLIB                ===> JES3SRC
     DISTLIB               ===> AJES3SRC

     Macro   Information
     SYSLIB                ===> JES3MAC     *
     DISTLIB               ===> AJES3MAC    *

     Object Information
     SYSLIB                ===> JES3LIB     Target Library
     DISTLIB               ===> AOSBA       Dlib Library

     Linkage Editor Options:            used for jclin build
     Rent                  ===> N       Y or N
     Reus                  ===> N       Y or N
     Authorized            ===> N       Y or N
     Lmod                  ===>           if other than module name
.fo on
.pa
.subsection 'SMP'
.pp
This is a series of panels to allow you to perform many SMP functions
without having an indepth knowledge of SMP.  There is a help for many
of them.
.pp
.us NOTE:
this is the one section that will change with the installation of SMP/E.
.pp
This is the main menu panel for SMP processing under ISPF.  As new
functions for SMP become available this menu will expand.
.sp 2
  SMP ----------------- SMP Processing Panel ---------------------------
  Select application ===>


     1  SMPREC     - Foreground SMP Receive or Reject
     2  SMPBATCH   - Batch RECEIVE,REJECT,APPLY,ACCEPT,RESTORE
     3  SMPLIST    - Foreground SMP List
     4  SMPCDSL    - List Full CDS in Batch  (non-IBM)









     I  INIT       - Initialize Source/SMP Defaults
     S  Secure     - Secure Terminal

  Press END key to terminate
.fo on
.pa
.subsub 'SMPREC'
.pp
This panel allows you to RECEIVE or REJECT USERMODs using SMP.  You
must specify the library into which the USERMOD was created and the
member name and whether you want to RECEIVE or REJECT it.
.pp
RECEIVE makes the USERMOD available to be APPLIED to the system by
the SMP APPLY function.  After you RECEIVE your USERMOD then contact
the SMP coordinator who will APPLY it for you and let you know when
it has been APPLIED.
.pp
After you are notified that the USERMOD has been APPLIED then you
should re-enter the COPYCNTL panel and use the Finished option, then
enter Tracking and log the Modid complete.
.pp
REJECT makes the USERMOD unavailable to SMP and may be used if you
create and RECEIVE a USERMOD and then need to change it.  You MUST
REJECT a USERMOD prior to re-RECEIVEing it.
.sp 2
  SMPREC--------------- SMP Receive/Reject Panel -----------------------
  Enter/verify parameters below:

  Data Set for SMP Deck:
      PROJECT               ===> $A1238
      LIBRARY               ===> MODS
      TYPE                  ===> JASM
      MEMBER                ===> SJ999XX   or blank for sequential
        or DSN              ===>

  SMP Option:               ===> RECEIVE   Receive or Reject

  SYSMOD id's (if different from MEMBER):
      ===>

  SMP PTS data set:         ===> 'JES3.SP131.SMPPTS'

  Optional PTS Volume:      ===>         Unit: ===>

  RECEIVE Option:           ===> B          B = Check USERMOD id and Del
                                            I = Check USERMOD id only
                                            D = Delete OBJ decks only
                                            N = No checking or deletion
.fo on
.pa
.subsection 'SMPBATCH Panel'
.pp
This panel is the ISPF - Batch interface.  A batch job is
constructed based upon the parameters entered on this menu and is
submitted for processing.
.sp 2
  SMPBATCH ------------ SMP Batch Processing Panel ---------------------
  Enter/verify parameters below:

  SMP Option:               ===>

  Check processing ?        ===> Y          Y or N
  SELECT, EXCLUDE or GROUP  ===> S          S E G
  SYSMOD id's (optional):
    ===>
  System (JES3, IMS, ?)     ===> JES3       Name of JCL to be Tailored
  TLIB:                     ===> N          Y or N  (FMID use only)
  Target VOLSER             ===>            optional

  RECEIVE Input File:       ===>
  RECEIVE Option:           ===> B          (I D B or N)

  For JOB Card build:
  Job Char: A        Class: JES3      Time: 10      MSGCLASS: T
  Sysout Class: *    Main: ANY        PRTY: 7

  Submit JOB to print Assembly Listing ===> Y
  MSVGP for APPLY List      ===> JES3LIST  List Prefix  ===> AJES3L
  Primary Space for List D/S:==> 200       Secondary    ===> 200
.fo on
.pa
.subsection 'CNTLSCAN'
.pp
This panel allows you to browse the copy control file created by
the COPYCNTL panel.  This panel will invoke the ISPF BROWSE function.
.sp 2
.fo off
 CNTLSCAN --------------- Browse CNTL LOG Data Set ---------------------
 Enter/verify parameters below:


 Control Log Data Set Name:
     DSN                  %===> 'JES3.CNTL.LOG'
     MEMBER NAME          %===>          +  null = all
.fo on
.pa
.subsection 'COMPARE'
.pp
This panel will invoke the Yale University  compare utility that
will compare any two lrecl 80 files.
.sp 2
.fo off
  COMPARE ---------------- Compare Utility Panel -----------------------
  Enter/verify parameters below:


  Original Data Set:
      PROJECT               ===> $A1238
      LIBRARY               ===>
      TYPE                  ===>
      MEMBER                ===>
       or  DSN:  ===>

  New Data Set:
      PROJECT               ===> $A1238
      LIBRARY               ===>
      TYPE                  ===>
      MEMBER                ===>
       or  DSN:  ===>

  Processing Parm:         ===>               FULL or blank

  Report Disposition:       ===> D            D = Disk Data Set
                                              T = Terminal
.fo on
.pa
.subsection 'RIBUPDTE'
.pp
This panel prompts you for the libraries and input to simulate IEBUPDTE.
The input may be standard IEBUPDTE format (except no NUMBER, INSERT or
DELETE statements are allowed) or SMP SYSMOD format.
.sp 2
.fo off
  RIBUPDTE---------------- IEBUPDTE Simulator Panel --------------------
  Enter/verify parameters below:

  Primary source data set:
      PROJECT               ===>
      LIBRARY               ===>
      TYPE                  ===>
         or DSN    ===> 'JES3.SP131.JES3SRC'

  Alternate source data set:
      PROJECT               ===>
      LIBRARY               ===>
      TYPE                  ===>
         or DSN    ===> 'JES3.SP131.JES3MAC'

  Input Data Set:           ===> 'JES3.SP131.SMPPTS'
      MEMBER                ===>               may be blank for seq d/s

             List=ALL       ===> N             Y or N

  Report disposition       ===> NEW            disposition for SYSPRINT
.fo on
.pa
.subsection 'SEARCHIT'
.pp
This panel prompts you for the source or macro libraries to be searched
for upto 20 character strings.  After hitting enter you will be
prompted for upto 20 character strings which are terminated by a string
of 4 blanks.  You may also specify if you want to execute the search
in the foreground or batch.
.sp 2
.fo off
  SEARCHIT --------------- Source Search Utility Panel -----------------
  Enter/verify parameters below:

  Partitioned Data Set to scan:
      PROJECT               ===>
      LIBRARY               ===>
      TYPE                  ===>
        or  DSN             ===>

  Partitioned Data Set 2: (optional)
      PROJECT               ===>
      LIBRARY               ===>
      TYPE                  ===>
        or  DSN             ===>

  Partitioned Data Set 3: (optional)
      PROJECT               ===>
      LIBRARY               ===>
      TYPE                  ===>
        or  DSN             ===>

  Report Destination:       ===> D         T = terminal
                                           D = Data set
.fo on
.pa
.subsub 'SEARCHCC '
.pp
This panel is displayed to allow you to enter your search
arguments and verify them prior to invoking the search.
.sp 2
.fo off
  SEARCHCC --------------- Source Search Control Cards -----------------

 Enter Search Arguments / Maximum of 20 characters terminated by 4 blank

   CC1:  ===>
   CC2:  ===>
   CC3:  ===>
   CC4:  ===>
   CC5:  ===>
   CC6:  ===>
   CC7:  ===>
   CC8:  ===>
   CC9:  ===>
   CC10: ===>
   CC11: ===>
   CC12: ===>
   CC13: ===>
   CC14: ===>

  BATCH OR TSO EXECUTION: TSO      BATCH OR TSO
  JOB CHAR: A        JOB CLASS: JS3BATCH  PRTY: 9     SYSOUT CLASS: T
.fo on
.pa
.subsection 'BROWSASM'
.pp
This panel allows you to display the assembly listing that was
generated at SMP APPLY time to the Mass Store (3850) and optionally to
print it.  This panel invokes clist and panel ASMPRINT.
.sp 2
.fo off
  BROWSASM ------------- Browse MSS Assembly Listing ------------------
  Enter/verify parameters below:

      Module Name           ===> IATUX01

      Prefix                ===> AJES3L
.fo on
.pa
.section 'Programs'
.subsection 'CUMOD'
.pp
This program will generate an IEBUPDTE deck with SMP
control cards (optional) by comparing 2 source decks.
Only the report is produced if SMP=n is specified.
.pp
The method of operation is:
.sp
.point begin
Acquire PARM from ISPF variables
.point
Invoke SMPDATA to get CDS information.
.point
Read NEWSRC file and compare with OLDSRC.
.point
All new records generate a record in delta deck.
.point
All missing records generate a message in the
report and will generate a delta deck card.
.point
A check is made for at least 1 valid prolog
documentation record which is identified by
either *@ in cols 1-2 or .*@ in cols 1-3 for
macros.
.print end
.sp 2
.pp
TSO ISPF invocation:
.sp
.boxon
.fo off
ALLOC F(REPORT) DS(*)
ALLOC F(DELTA) DS(OUTPUT FILE FOR DELTA DECK)
ALLOC F(OLDSRC)  DS(ORIGINAL SOURCE/MACRO)
ALLOC F(NEWSRC)  DS(NEW/UPDATED SOURCE/MACRO)
ALLOC F(SMPCDS)  DS(SMP CDS)
ISPEXEC SELECT PGM(CUMOD)
.fo on
.boxoff
ISPF parameters:
.cp begin
.fo off
     MEMBER   element name (i.e. Macro name or SRC name)
     MODID    SMP USERMOD id (i.e. TT00011)
     PREREQ   pre requisites PTF
     FMID     SMP FMID
     SYSLIB   SMP syslib
     DISTLIB  SMP DLIB
     NEW      new module or macro (not in SMPCDS yet)
.rc 2 on
     MERGE    merge multiple elements
.rc 2 off
     COREQ    co-requisites PTF
     SRCMAC   SRC or MAC  (def.= SRC)
     DELFULL  complete delta or just for MODID
              (SMP = Y only)
     SMP      Y - generate SMP control cards (default)
              N - no deck - report only
     ADEL     Y - allow records to be deleted
              N - do not allow deleted records
                  (default=n)
                  except for USERMOD records
     UM1-UMG assembly module names for macro update
.fo on
.cp end
.pa
.subsection 'SMPLINKP'
.pp
This is an ISPF program to link a module using the linkedit
information stored in the SMP CDS if available.
.pp
ISPF variables needed on input:
.sp
.fo off
     SLOAD      - Load library for IEWL
     M1 THRU M8 - Object module name
     ROPT       - RENT or REUS flag or blank for new LMODs
     AUTH       - Y or N for new LMODs
.sp
ISPF variables output to SMPLINKP Panel:
.sp
     SLOAD
     M1 through M8
     SYSLIB - The SMP determined target library ddname of SYSLMOD
              if new
     LEPARM - SMP determined Linkedit  parm or that provided by ROPT
     NEW    - Indicates that you have a NEW module or LMOD
     DELMOD - Indicates default LMOD for NEW modules if desired
.sp
Sub-programs:
     SMPDATA - via ATTACH to acquire SMPCDS information
     IEWL    - via ATTACH to perform linkedit
     IKJEFF18- via LINK to provide Dynamic Allocation Failure Analysis
.sp
Return Codes:
.sp
     00 - OK
     04 - Failure in Dynamic Allocation
.sp
DD's required thru Pre Allocation:
      SYSLIN
      SYSUT1
      SYSLIB
      SYSPRINT
      OBJ    - object deck library
      SMPCDS - SMP Control Data Set
.sp
DD's acquired thru Dynamic Allocation:
      SYSLMOD
.fo on
.pa
.subsection 'SMPDATA'
.pp;This is a generalized subroutine that can be linked to from any
program and will return selected information from the SMP CDS to the
caller.
.sp
.fo off
Input R1 -> 3 Words
     Word1 = -> FUNCTION DESIRED
             SRC    returns FMID,RMID,UMID,DISTLIB,SYSLIB
             MAC    returns FMID,RMID,UMID,DISTLIB,SYSLIB
             MOD    returns FMID,RMID,UMID,DISTLIB,SYSLIB,LMOD
             LMOD   returns SYSLIB,LEPARM,LE CONTROL CARDS
.sp
     Word2 = -> Element Name
.sp
     Word3 = -> 2 Words where
             Word1 contains the length of the provided data area.
             The second points to the start of the data area.
.sp 2
     DD's required/used:
           SMPOUT   - Dynamically Allocated
           SMPCNTL  - Dynamically Allocated
           SMPPUNCH - Dynamically Allocated
           SMPLOG   - Dynamically Allocated
   ------> SMPCDS   - MUST BE PREALLOCATED <-------
.sp
.pp;HMASMP is invoked to gather the required data
.cp begin
.boxon
Format of Returned data
.sp
FOR MAC SRC and MOD requests
1        10
NAME     Element name
DISTLIB  SMP DISTLIB DDNAME
SYSLIB   SMP SYSLIB DDNAME
FMID     FMID
RMID     RMID
UMID     ( max 4 UMIDS per line
UMID       4 UMIDS - may be multiple lines
UMID       max 4 UMIDS  )
LMOD     Load module name (MOD request only)
.sp
 If any of the above fields are missing then there is no
 entry in the CDS for that field.
.sp 2
For LMOD requests:
1        10
NAME     Element name
SYSLIB   SMP TARGET Linkedit Library
LEPARM   Linkedit Parm
LE cards (blank)
--- Actual cards in col 1-80 ---
.boxoff
.cp end
.sp
Return codes:
      0  -  Normal return
      4  -  Bad SMP return - probably element not found
      8  -  No element name specified
     12  -  Invalid function code
     16  -  SVC 99 Error
     20  -  Exceeded 200 data records
.fo on
.pa
.subsection 'BLDJCLIN'
.pp
This program is designed to be executed under ISPF only.  It is
part of the source maintenance system and will build jclin for
use by program CUMOD in building the SMP USERMOD.
.sp
ISPF variables used:
       MEMBER = module name
   **  DELMOD = default load module name
    *  RENT   = RENT LE attributes (implies reus)
    *  REUS   = REUS LE attributes
    *  AUTH    = authorized LE attribute
    *  SYSLIBO = target library for load module
    *  DISTLIBO = DLIB for module
.sp
    *  - Used only for new LMODs
   **  - required only if LMOD name is different than module name
.sp 2
DD's required:
       SMPJCLIN DD DSN=jclin output file
       SMPCDS DD DSN= SMP CDS dsn
.sp
External routines:
       SMPDATA - via LINK to acquire SMP CDS information
.pa
.subsection 'SEARCHIT'
.pp;This utility is designed to search all files having a ddname
prefixed with an @ character for the supplied character string.
.pp
JCL to Execute SEARCHIT:
.fo off
.sp
//  EXEC PGM=SEARCHIT
//SYSIN    -  CONTROL CARDS (SEE BELOW FOR SYNTAX)
  (LRECL=80)
//SYSPRINT -  REPORT OF HITS
  (RECFM=FBA,LRECL=121)
//@AA      -  PDS OR PS INPUT FILE
  (LRECL=80)
//@BB      -  PDS OR PS INPUT FILE
  (LRECL=80)
.sp
.pp
TSO Execution
.fignum search
.figbegin
.boxon
  ALLOC F(SYSIN) DA(*)
  ALLOC F(SYSPRINT) DA(*)
  ALLOC F(@AA) DA(PDS OR PS INPUT FILE)
  ALLOC F(@BB) DA(PDS OR PS INPUT FILE)
  $P SEARCHIT
.boxoff
.figure search 'SEARCHIT TSO Example'
.figend
.fo on
.sp 2
.pp
The control card may have any character string that
you wish to search for coded in columns 1 through 20. Column
20 or the first occurrence of 4 consecutive blanks indicate
the end of the search string.
.pp
The control cards may be terminated with a /* or with END.
.sp
.pp;NOTE:  All processing is in upper case.
.tabnum searcha
.tabbegin
.boxon
         ABENDS:
               1000 = More than 100 control cards
               2000 = More than 2000 directory entries in PDS
.sp
         Solution to ABENDS:
               1000 = Increase label TABSIZE value
               2000 = Increase label DIRSIZE value
.boxoff
.table searcha 'SEARCHIT Abend Codes'
.tabend
.pa
.subsection 'RIBUPDTE'
.pp
Description: this program will simulate IEBUPDTE.  It may be
invoked either via a TSO call or batch program .  When
invoked RIBUPDTE will simulate the insert, replace functions of
IEBUPDTE plus will determine if a USERMOD record is being overlayed
or if an insert is being placed within 4 cards of a USERMOD card.
.pp
A USERMOD record (card) is determined in the following manner:
.point begin
From sysut1 only
.point
Does col 64 = @
.point
Is col 65 a char from k through t
.point
If both 2 and 3 are true then it must be a USERMOD
record.
.point end
.sp
.pp
JCL to execute:
.sp
.fo off
//RIBUP EXEC PGM=RIBUPDTE
//SYSPRINT DD SYSOUT=*
//SYSIN  DD -- SAME AS IEBUPDTE
//SYSUT1 DD -- SAME AS IEBUPDTE
//SYSUTA DD -- ALTERNATE SYSUT1
.fo on
.pa
.subsection 'MODSREP'
.pp
This program will scan a source pds and will generate 3 reports:
.fo off
Report 1:   All usermods by module
.sp
Report 2:   All usermods with modules affected
            (note: the first 5 positions of the USERMOD are
             used for this report)
.sp
Report 3:   Documentation report listing all prologs (optional)
.sp 2
  JCL:        EXEC PGM=MODSREP,PARM='TITLE ID'
              SYSPRINT DD SYSOUT=A
              SOURCE   DD DSN=SOURCE PDS
              SORTIN   DD DSN=SEQ FILE (OPTIONAL)
.fo on
.pp
If DD SORTIN is present then a third report is generated consisting
of all prologs found.  A prolog is determined to be an *@ or .*@
In columns 1 through 2 or 1 through 3 of a source or macro member.
This is accomplished by invoking SORT internally and then
producing the third report.
.pp
USERMODs are determined by an @ in column 64 and a valid USERMOD
character in column 65 (K through T except O)
.pp
All SORT files are dynamically allocated and SORT is then invoked
via LINK.
.pa
.subsection 'COPYCNTL'
.pp
This program will control access to any source or
macro library and will perform the following functions:
.point begin
COPY
.point 2
Copy a source element and log an entry in a control file.
.point
Inform the copies if anyone else currently has a copy of the element and
display the history of the element.
.point 1
FINISHED
.point 2
Log the use of an element complete in the control log.
.point 1
CANCEL
.point 2
Log the use of an element cancelled in the control log.
.point end
.sp 2
.pp
The dd statements required to execute COPYCNTL are:
.point begin
CNTL
.point 2
A Control log pds where the member name is the name of the element
copies.
.point 1
WORK
.point 2
A sequential work file.
.point 1
ELEMIN
.point 2
The input library ( A PDS)
.point 1
ELEMOUT
.point 2
The output library ( A PDS)
.point end
.sp
.pp
The execution parms are:
.sp
.fo off
   MEMBER=  -  Element name to be processed
   M=

   MODID=   -  SMP USERMOD ID
   ID=

   CODE=    -  Processing code
   C=

   Codes:
             C        -  Copy element

             F        -  Flag element as Finished

             X        -  Flag element as cancelled
.fo off
.sp 2
.pp
Special NOTE:
.in +2
Access is made to the OSACT to acquire the programmer
name which is assumed to be the first 10 bytes of the
accounting information.
.in -2
.pa
.subsection 'COMPARE'
.point begin
Description
.pp
This program is used to compare two versions of the same source
program.  It will compare columns 1 through 72 or optionally columns
1 through 80.  The optional file, IGNORE, may be used to instruct
COMPARE to ignore specified card images in the data sets being
compared.  A report of the comparison is written to the SYSPRINT
file.  If the output is directed to a TSO terminal, only the first
78 characters of each line are written.  This may not be desirable
if you are using a hard-copy terminal.
.pp
The COMPARE program uses only columns 1 through 72; thus, any
two versions of a program may be easily compared even if one
(or both) of the files has been resequenced.  If neither file
has been resequenced, a PARM of "FULL" may be coded to request
that all eighty columns be used in the comparison.  A facility
is also provided to ignore trivial card images (such as " EJECT "
or " SPACE 3 " in an assembler source program).
.pp
This program uses all available core in its region after opening
its input/output files (except for 4k which is released).  The
obtained core area is used as a compare buffer which is only
dumped (written to SYSPRINT) when identical records (based on
the first 72 bytes) are found in the old and new data sets.  If
the compare buffer overflows, the program terminates.  Therefore,
if it is suspected that the two data sets may be very far out of
sync, a large region should be used.  The number of unmatched
records that can be buffered at one time can be calculated from
the expression:  (region size - 8k - buffers) / 160.
As a general rule, 30k is sufficient for about 100 unmatched
records at a time, and 100k is sufficient for about 500 unmatched
records at a time.
.pp
Card images of the trival data is input from the IGNORE file.  If
the IGNORE DD statement is missing, a table of trivial data for
assembler source code will be assumed which includes " EJECT ", "
SPACE   " " SPACE 1 ", " SPACE 2 ", " SPACE 3 " and blank comment
cards.
.sp 2
.point
JCL
.sp
.fo off
//stepname   EXEC  PGM=COMPARE,REGION=100K
//OLD        DD    DSN=old-seq-dsn,....
//NEW        DD    DSN=new-seq-dsn ....
//SYSPRINT   DD    SYSOUT=A
//IGNORE     DD    *      (OR DUMMY  --  OR OMITTED)
 (Trivial card images that are to be ignored in the comparison)
/*
.fo on
.sp 3
.pp
This program is originally from the Yale University.
.point end
.pa
.subsection 'DAHANDBK'
.pp
This program is designed to generate a data area handbook similar
to the MVS Debugging Handbooks.  The input is the assembled machine
readable listing.
.point begin
I suggest that you use assembler H and assemble every macro you can
think of.
.point
Place the macros in alphanumeric order.
.point
Use PRINT OFF and PRINT ON to insure that only those macros
you want get listed.
.point end
.sp 2
.fignum dah
.figbegin
.boxon
        //STEP  EXEC PGM=DAHANDBK,PARM='L=xx,TITLE INFORMATION'
        //STEPLIB  DD DSN=AOST.LOAD,DISP=SHR
        //INPUT    DD DSN=listing d/s from assembly of macros
        //TITLE    DD SYSOUT=*   TITLE AND TABLE OF CONTENTS
        //OUTPUT   DD SYSOUT=*   HANDBOOK
        /*
.boxoff
.figure dah 'DAHANDBK JCL Example'
.figend
.fo on
.point begin
Parm
.pp;The L=xx parameter is optional and if coded must be first.  It
specifies the number of lines per page.  xx must be 2 numbers.
.pp;The title consists of up to 45 characters to be used on the title
page and on the bottom of each page to identify the contents of the
handbook (i.e. PARM='JES3 SP 1.3.1 PUT 8209').
.boxon
      The defaults are 'L=45,Data Area Handbook'
.boxoff
.sp 2
.point
Processing Overview
.point 2
The table of contents is built from the listing using
either the label of the macro for the name or if blank
then the macro itself with the first 40 bytes of data
is used.
.point
The mapping of the macro will list all DC's with the
first 16 bytes of the value.  All equates will have the
value displayed in hex immediately following the prior
DC which is assumed to be the flag byte.
.point
After the mapping a cross-reference is performed in
alpha-numeric order.
.point end
.pa
.subsection 'PRNTMODS'
.pp
PRNTMODS is designed to print all USERMOD statements
found in an assembly listing to simplify the process
of determining where a module has been modified.
.sp
A USERMOD is determined to be:
.point begin
An @ in column 64
.point
A valid USERMOD id K through T (excluding O) in column 65
.point end
.sp 2
JCL to execute:
.fo off
       //stepnm  EXEC PGM=PRNTMODS
       //ASMIN   DD   DSN=assembly listing on dasd
       //SYSPRINT DD   SYSOUT=x
.fo on
.subsection 'ACTMODS - Active Modules/Macros Report'
.pp
This program is designed to read an unloaded copy of the source
maintenance control log (unloaded by IEBPDSUT) and generate a
report listing all elements currently being worked on.
.sp
JCL Required:
.sp;.fo no
     //stepname EXEC PGM=ACTMODS
     //SYSPRINT DD SYSOUT=*
     //IN       DD DSN=unload from IEBPDSUT
.fo yes
