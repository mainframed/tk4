         PRINT OFF                                             *LBD*
         MACRO --- $DQE --- DESCRIPTER QUEUE ELEMENT DSECT
         $DQE &DOC=NO
         TITLE 'DESCRIPTER QUEUE ELEMENT'
$DQE     DSECT .
DQFQEPTR DS    AL4 .         PTR TO FIRST FREE ELEMENT
DQEPTR   DS    AL4 .         PTR TO NEXT DQE OR ZERO
DQEBLKAD DS    AL4 .         ADDR 1ST 4K BLOCK DESCRIBED BY THIS DQE
DQELNTH  DS    F .           LENGTH OF AREA DESCRIBED BY THIS DQE
         MEND
         MACRO --- $FBQE --- FREE BLOCK QUEUE ELEMENT
         $FBQE &DOC=NO
         TITLE 'FREE BLOCK QUEUE ELEMENT'
         SPACE 2
$FBQE    DSECT .             FREE BLOCK QUEUE ELEMENT
FWDPTR   DS    AL4 .         PTR TO NEXT FBQE OR PQE
BCKPTR   DS    AL4 .         PTR TO PREVIOUS FBQE OR PQE
SIZE     DS    F .           SIZE OF THIS FREE BLOCK
FBQAREA  DS    AL4 .         LOW ADDRESS OF FREE BLOCK
         MEND
         MACRO --- $FQESECT --- FREE QUEUE ELEMENT
         $FQESECT &DOC=NO
         TITLE 'FREE QUEUE ELEMENT'
         SPACE 2
$FQESECT DSECT .
FQEPTR   DS    AL4 .         PTR TO NEXT LOWER FREE AREA
FQELNTH  DS    F .           NUMBER BYTES IN FREE AREA
FQAREA   DS    AL4 .         HIGH ADDRESS OF FREE SPACE
FQERSVD  DS    F .           RESERVED
         MEND
         MACRO --- $GDA --- GLOBAL DATA AREA DSECT
         $GDA &DOC=NO
         TITLE 'GLOBAL DATA AREA'
         SPACE 2
$GDA     DSECT .
GDAFLAGS DS    B .
NIPFOURK EQU   X'20' .       FLAG RSM NOT READY (NIP)
SQATHRS1 EQU   X'08' .       SQA THRESHOLD 1 (APPROACHING CRITICAL)
SQATHRS2 EQU   X'04' .       SQA THRESHOLD 2 (CRITICAL)
WAITCUE  EQU   X'02' .       INDICATES V=R GETPART WAIT FOR REAL REGN
         DS    CL3 .         RESERVED
VRDREG   DS    F .           DEFAULT V=R SIZE
CSAPQEP  DS    F .           CSA PQE PTR
VRPQEP   DS    F .           V=R PQE PTR
PASTRT   DS    F .           PRIVATE AREA START ADDR
PASIZE   DS    F .           PRIVATE AREA SIZE
SQASPQEP DS    F .           SQA SPQE PTR
SQASPLFT DS    F .           SQA SPACE LEFT UNALLOCATED
VRPFEL   DS    F .           PTR TO 1ST QUEUE ELEMENT
VRPLEL   DS    F .           PTR TO LAST QUEUE ELEMENT
VRWAITQ  DS    F .           V=R WAIT QUEUE ANCHOR BLOCK
VRWLEL   DS    F .           PTR TO LAST QUEUE ELEMENT
PFSTCPAB DS    F .           FIRST CPAB PTR
CSASPQEP DS    F .           FIRST CSA SPQE PTR
GLBLCELL DS    F .           INTERNAL CELL ANCHOR BLOCK
GBLCELCT DS    F .           COUNT OF FREE INTERNAL CELLS
         MEND
         MACRO --- $LNKSECT---VSM LINKAGE SECTION DSECT
         $LNKSECT &DOC=NO
         TITLE 'VSM LINKAGE SECTION DSECT'
         SPACE 2
$LNKSECT DSECT .
@GDA     DS    F .           ADDR OF GLOBAL DATA AREA
@MAXCORE DS    F .           MAXIMUM VIRTUAL MEMORY ADDRESS
@NUCHIGH DS    F .           HIGHEST NUCLEUS ADDRESS
@CSALOW  DS    F .           BEGINNING CSA ADDRESS
@VRLINE  DS    F .           V=R LINE ADDRESS
@PUTAREA DS    F .           ADDRESS OF OUTPUT SCREEN
@PUTLEN  DS    F .           LENGTH OF OUTPUT SCREEN
@IOMOD   DS    F .           ADDR OF I/O MODULE
@GETAREA EQU   * .
         DS    CL6 .         CONTROL CHARACTERS
@RSPONSE DS    CL1 .         TERMINAL COMMAND
@BADCMND DS    CL1 .         BAD COMMAND INDICATOR
@GETLEN  EQU   *-@GETAREA .  LENGTH OF INPUT AREA
         MEND
         MACRO  --- $PQE --- VSM PARTITION QUEUE ELEMENT DSECT
         $PQE &DOC=NO
         TITLE 'PARTITION QUEUE ELEMENT'
         SPACE 2
$PQE     DSECT .
PQEFFBQE DS    AL4 .   PTR TO 1ST FBQE OR IF NONE TO PQE
PQEBFBQE DS    AL4 .   PTR TO LAST FBQE OR IF NONE TO PQE
PQEFPQE  DS    AL4 .   ADDR OF NEXT PQE OR ZERO
PQEBPQE  DS    AL4 .   ADDR OF PREVIOUS PQE OR ZERO
PQETCB   DS    AL4 .   ADDR TCB FOR JOB STEP TO WHICH SPACE BELONGS
PQESIZE  DS    BL4 .   SIZE OF REGION DESCRIBED BY THIS PQE
PQEREGN  DS    AL4 .   ADDR 1ST BYTE OF REGION DESCRIBED BY THIS PQE
PQERFLGS DS    CL1 .   FLAG BYTE
PQEHRID  DS    CL1 .   HIERARCHY IDENTIFIER
VMMFLGS  DS    B .     SEVEN HIGH ORDER BITS ZERO
VVVRFLG  EQU   X'01' . REAL OR VIRTUAL REGION FLAG
PQERSVD  DS    CL1 .   RESERVED
         MEND
         MACRO --- $SPQE --- SUBPOOL PARTITION QUEUE ELEMENT DSECT
         $SPQE &DOC=NO
         TITLE 'SUBPOOL PARTITION QUEUE ELEMENT DSECT'
         SPACE 2
$SPQE    DSECT .
SPQEAD   DS    F .           ADDRESS OF NEXT OLDEST SPQE
SPDQEPTR DS    F .           PTR TO 1ST DQE FOR SUBPOOL
SPQEFLGS DS    B .           SPQE FLAGS
SPSHARE  EQU   X'80' .       0 = SUBPOOL OWNED; 1 = SHARED, NOT OWNED
LASTSPQE EQU   X'40' .       LAST SPQE ON CHAIN
SPQEOWN  EQU   X'20' .       0 = SUBPOOL OWNED, NOT SHARED ; 1 = OWNED
*                            AND SHARED
SPQERES1 DS    BL1 .         RESERVED
SPQEID   DS    BL1 .         IDENTIFYING NUMBER OF SUBPOOL
SPQEKEY  DS    B .           KEY OF OWNING TASK ADDR
SPQERES2 DS    H .           RESERVED
         MEND
         MACRO
&LABEL   HMAP  &R=NO,&C=NO,&A=NO,&RA=NO,&MOD=NO
.**********************************************************************
.*LABEL  HMAP  MOD=M,R=ROW,C=COL,RA=XX,                               *
.*                ASKIP      BRT                                      *
.*             A=(UNPROT,NUM,NORM,DET,FSET,IC)                        *
.*                PROT       DRK                                      *
.*   WHERE: MOD NOT CODED ==> DEFAULT MOD OF PRIOR HMAP STATEMENT     *
.*                            OR MOD=2 IF FIRST HMAP STATEMENT        *
.*          MOD=1         ==> 12 X 40 SCREEN                          *
.*          MOD=2         ==> 24 X 80 SCREEN                          *
.*          RA NOT CODED  ==> ROW AND COL ARE SBA ADDRESS             *
.*          RA=EUA        ==> ROW AND COL ARE EUA ADDRESS             *
.*          RA=XX         ==> ROW AND COL ARE RA  ADDRESS             *
.*                            XX IS REPEAT CHARACTER EXPRESSED IN HEX *
.*          A NOT CODED   ==> NO START FIELD                          *
.*          A=IC          ==> INSERT CURSOR ONLY                      *
.*          A=(LIST)      ==> SF WITH SPECIFIED ATTRIBUTE             *
.*          A=(LIST,IC)   ==> SF, ATTRIBUTE, AND IC                   *
.*   POSSIBLE COMBINATIONS OF SBA, SF, IC, RA, EUA:                   *
.*             COMBINATION      PARAMETERS CODED                      *
.*          1. SBA ONLY         R, C                                  *
.*          2. SBA AND SF       R, C, A WITHOUT IC                    *
.*          3. SBA AND IC       R, C, A=IC                            *
.*          4. SBA, SF, AND IC  R, C, A=(LIST,IC)                     *
.*          5. SF ONLY          A WITHOUT IC                          *
.*          6. SF AND IC        A=(LIST,IC)                           *
.*          7. SF, IC AND RA    A=(LIST,IC), R, C, RA=XX              *
.*          8. SF, IC AND EUA   A=(LIST,IC), R, C, RA=EUA             *
.*          9. SF AND RA        A WITHOUT IC, R, C, RA=XX             *
.*         10. SF AND EUA       A WITHOUT IC, R, C, RA=EUA            *
.*         11. IC ONLY          A=IC                                  *
.*         12. IC AND RA        A=IC, R, C, RA=XX                     *
.*         13. IC AND EUA       A=IC, R, C, RA=EUA                    *
.*         14. RA ONLY          R, C, RA=XX                           *
.*         15. EUA ONLY         R, C, RA=EUA                          *
.*   NOTE: COMBINATIONS OF ORDERS ARE GENERATED IN THE SEQUENCE       *
.*         IN WHICH THEY APPEAR IN THE COMBINATION COLUMN.            *
.**********************************************************************
         GBLB  &HMODNUM
         LCLC  &LAB
&LAB     SETC  '&LABEL'
         AIF   ('&MOD' EQ 'NO').HSBA
         AIF   ('&MOD' EQ '1').MOD1
         AIF   ('&MOD' EQ '2').MOD2
         MNOTE 8,'MOD NOT 1 OR 2 - PREV MOD OR MOD 2 ASSUMED'
         AGO   .HSBA
.MOD1    ANOP
&HMODNUM SETB  1
         AGO   .HSBA
.MOD2    ANOP
&HMODNUM SETB  0
.HSBA    ANOP
         AIF   ('&RA' NE 'NO').HSF
         AIF   ('&R' EQ 'NO').HSF
&LAB     HSBA  R=&R,C=&C
&LAB     SETC  '      '
.HSF     AIF   ('&A' EQ 'NO').HRA
&LAB     HSF   &A
&LAB     SETC  '      '
.HRA     AIF   ('&RA' EQ 'NO').HMAPX
&LAB     HRA   R=&R,C=&C,RA=&RA
.HMAPX   ANOP
         MEND
         MACRO
&LABEL   HRA   &R=0,&C=0,&RA=00,&MOD=SET
         GBLB  &HMODNUM
         LCLA  &BA,&I1,&I2,&ROW,&COL,&LINESZ,&L
         LCLC  &BAB1,&BAB2,&ORD,&RAC
         AIF   ('&MOD' EQ 'SET').GBLMOD
         AIF   ('&MOD' EQ '1').MOD1
         AIF   ('&MOD' EQ '2').MOD2
         MNOTE 8,'MOD NOT 1 OR 2 - PREV MOD OR 2 ASSEMED'
.GBLMOD  AIF   (NOT &HMODNUM).MOD2
.MOD1    ANOP
&HMODNUM SETB  1
         AIF   ('&R' GT  '12').M1RERR
         AIF   ('&C' GT  '40').M1CERR
&LINESZ  SETA  40
         AGO   .SETROW
.MOD2    ANOP
&HMODNUM SETB  0
         AIF   ('&R' GT  '24').M2RERR
         AIF   ('&C' GT  '80').M2CERR
&LINESZ  SETA  80
.SETROW  ANOP
&ROW     SETA  1
         AIF   ('&R' LE '1').SETCOL
&ROW     SETA  &R
.SETCOL  ANOP
&COL     SETA  1
         AIF   ('&C' LE '1').CALCBA
&COL     SETA  &C
.CALCBA  ANOP
&BA      SETA  &LINESZ*(&ROW-1)+&COL-1
&I1      SETA  &BA/64
&I2      SETA  2*(&BA-(64*&I1)+1)-1
&I1      SETA  2*(&I1+1)-1
&BAB1    SETC  '40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F50D1D2D3D4D5D6D7D8D95A5-
               B5C5D'(&I1,2)
&BAB2    SETC  '40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F50D1D2D3D4D5D6D7D8D95A5-
               B5C5D5E5F6061E2E3E4E5E6E7E8E96A6B6C6D6E6FF0F1F2F3F4F5F6F-
               7F8F97A7B7C7D7E7F'(&I2,2)
&L       SETA  3
&ORD     SETC  '12'
         AIF   ('&RA' EQ 'EUA').GENRA
&L       SETA  4
&ORD     SETC  '3C'
&RAC     SETC  '&RA'
.GENRA   ANOP
&LABEL   DC    XL&L.'&ORD&BAB1&BAB2&RAC'
         AGO   .RAX
.M1RERR  MNOTE 8,'ROW NOT 1 THRU 12 FOR MOD 1'
         AGO   .DUMMY
.M1CERR  MNOTE 8,'COL NOT 1 THRU 40 FOR MOD 1'
         AGO   .DUMMY
.M2RERR  MNOTE 8,'ROW NOT 1 THRU 24 FOR MOD 2'
         AGO   .DUMMY
.M2CERR  MNOTE 8,'COL NOT 1 THRU 80 FOR MOD 2'
.DUMMY   ANOP
&LABEL   DC    XL4'3C000000'
.RAX     ANOP
         MEND
         MACRO
&LABEL   HSBA  &R=0,&C=0,&MOD=SET
         GBLB  &HMODNUM
         LCLA  &BA,&I1,&I2,&ROW,&COL,&LINESZ
         LCLC  &BAB1,&BAB2
         AIF   ('&MOD' EQ 'SET').GBLMOD
         AIF   ('&MOD' EQ '1').MOD1
         AIF   ('&MOD' EQ '2').MOD2
         MNOTE 8,'MOD NOT 1 OR 2 - PREV MOD OR 2 ASSEMED'
.GBLMOD  AIF   (NOT &HMODNUM).MOD2
.MOD1    ANOP
&HMODNUM SETB  1
         AIF   ('&R' GT  '12').M1RERR
         AIF   ('&C' GT  '40').M1CERR
&LINESZ  SETA  40
         AGO   .SETROW
.MOD2    ANOP
&HMODNUM SETB  0
         AIF   ('&R' GT  '24').M2RERR
         AIF   ('&C' GT  '80').M2CERR
&LINESZ  SETA  80
.SETROW  ANOP
&ROW     SETA  1
         AIF   ('&R' LE '1').SETCOL
&ROW     SETA  &R
.SETCOL  ANOP
&COL     SETA  1
         AIF   ('&C' LE '1').CALCBA
&COL     SETA  &C
.CALCBA  ANOP
&BA      SETA  &LINESZ*(&ROW-1)+&COL-1
&I1      SETA  &BA/64
&I2      SETA  2*(&BA-(64*&I1)+1)-1
&I1      SETA  2*(&I1+1)-1
&BAB1    SETC  '40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F50D1D2D3D4D5D6D7D8D95A5-
               B5C5D'(&I1,2)
&BAB2    SETC  '40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F50D1D2D3D4D5D6D7D8D95A5-
               B5C5D5E5F6061E2E3E4E5E6E7E8E96A6B6C6D6E6FF0F1F2F3F4F5F6F-
               7F8F97A7B7C7D7E7F'(&I2,2)
&LABEL   DC    XL3'11&BAB1&BAB2'
         AGO   .SBAX
.M1RERR  MNOTE 8,'ROW NOT 1 THRU 12 FOR MOD 1'
         AGO   .DUMMY
.M1CERR  MNOTE 8,'COL NOT 1 THRU 40 FOR MOD 1'
         AGO   .DUMMY
.M2RERR  MNOTE 8,'ROW NOT 1 THRU 24 FOR MOD 2'
         AGO   .DUMMY
.M2CERR  MNOTE 8,'COL NOT 1 THRU 80 FOR MOD 2'
.DUMMY   ANOP
&LABEL   DC    XL3'110000'
.SBAX    ANOP
         MEND
         MACRO
&LABEL   HSF
         LCLA  &B2,&B3,&B4,&B5,&B7,&CT,&I,&L
         LCLC  &ATTRB,&IC,&SF
&CT      SETA  N'&SYSLIST(1)
         AIF   ('&CT' NE '1').SCAN
         AIF   ('&SYSLIST(1,1)' NE 'IC').SCAN
&L       SETA  1
&IC      SETC  '13'
         AGO   .GEN
.SCAN    ANOP
&I       SETA  &I+1
         AIF   ('&I' GT '&CT').GENSF
         AIF   ('&SYSLIST(1,&I)' EQ 'UNPROT').UNPROT
         AIF   ('&SYSLIST(1,&I)' EQ 'PROT').PROT
         AIF   ('&SYSLIST(1,&I)' EQ 'NUM').NUM
         AIF   ('&SYSLIST(1,&I)' EQ 'ASKIP').ASKIP
         AIF   ('&SYSLIST(1,&I)' EQ 'NORM').NORM
         AIF   ('&SYSLIST(1,&I)' EQ 'DET').DET
         AIF   ('&SYSLIST(1,&I)' EQ 'BRT').BRT
         AIF   ('&SYSLIST(1,&I)' EQ 'DRK').DRK
         AIF   ('&SYSLIST(1,&I)' EQ 'FSET').FSET
         AIF   ('&SYSLIST(1,&I)' EQ 'IC').IC
&ATTRB   SETC  '&SYSLIST(1,&I)'
         MNOTE 8,'UNKNOWN KEYWORD &ATTRB - IGNORED'
         AGO   .SCAN
.UNPROT  ANOP
&B2      SETA  0
         AGO   .SCAN
.PROT    ANOP
&B2      SETA  16
         AGO   .SCAN
.NUM     ANOP
&B3      SETA  8
         AGO   .SCAN
.ASKIP   ANOP
&B2      SETA  16
&B3      SETA  8
         AGO   .SCAN
.NORM    ANOP
&B4      SETA  0
         AGO   .SCAN
.DET     ANOP
&B5      SETA  2
         AGO   .SCAN
.BRT     ANOP
&B4      SETA  4
&B5      SETA  0
         AGO   .SCAN
.DRK     ANOP
&B4      SETA  4
&B5      SETA  2
         AGO   .SCAN
.FSET    ANOP
&B7      SETA  1
         AGO   .SCAN
.IC      ANOP
&L       SETA  1
&IC      SETC  '13'
         AGO   .SCAN
.GENSF   ANOP
&I       SETA  2*(&B2+&B3+&B4+&B5+&B7+1)-1
&ATTRB   SETC  '40C1C4C5C8C94C4D50D1D4D5D8D95C5D6061E4E5E8E96C6DF0F1F4F-
               5F8F97C7D'(&I,2)
&L       SETA   &L+2
&SF      SETC  '1D'
.GEN     ANOP
&LABEL   DC    XL&L'&SF&ATTRB&IC'
         MEND
         PRINT ON                                              *LBD*
