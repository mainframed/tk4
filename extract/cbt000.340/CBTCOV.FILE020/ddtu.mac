         MACRO
&DDNAME  DDTU  &DUMMY,&DSN=,&DSNAME=,&DISP=,&TERM=,&FREE=,             *
               &UNIT=,&SPACE=,&MSVGP=,&VOL=,&LABEL=,&PROTECT=,         *
               &DCB=,&SUBSYS=,                                         *
               &SYSOUT=,&DEST=,&HOLD=,&COPIES=,&OUTLIM=,&FCB=,&UCS=,   *
               &PASWORD=
         LCLA  &K,&A
         LCLB  &B0,&B1,&B2,&B3,&B4,&B5,&B6
         LCLC  &C,&D
         AIF   ('&DDNAME' EQ '' OR '&DDNAME' EQ 'RETURN').DDNAMEQ
&DDNAME  DC    Y(X'01',1,8)            DDNAME
.DDNAMEQ AIF   ('&DDNAME' NE 'RETURN').DDNAMEX
RETURN   DC    Y(X'55',1,8)            RETURN THE DDNAME
.DDNAMEX AIF   ('&DSN&DSNAME' EQ '').DSNAMEX
&C       SETC  '&DSN'
         AIF   ('&DSNAME' EQ '').DSNAMEB
         AIF   ('&DSN' NE '').ERRDSN
&C       SETC  '&DSNAME'
.DSNAMEB ANOP
&A       SETA  K'&C
         AIF   ('&C'(&A,1) NE ')').DSNAME
.MEMLOOP AIF   (&A LE 1).ERRMEM
&A       SETA  &A-1
         AIF   ('&C'(&A,1) NE '(').MEMLOOP
&D       SETC  '&C'(&A+1,K'&C-&A-1)
&D       DC    Y(X'03',1,8)            DSN=...( )
&C       SETC  '&C'(1,&A-1)
.DSNAME  AIF   ('&C' EQ '').DSNAMEX
&C       DC    Y(X'02',1,44)           DSN=
.DSNAMEX AIF   ('&DISP' EQ '').DISPX
         AIF   ('&DISP(1)' EQ '').STATUSX
&DISP(1) DC    Y(X'04',1,1)             DISP=( )
.STATUSX AIF   ('&DISP(2)' EQ '').NDISPX
&DISP(2) DC    Y(X'05',1,1)             DISP=(, )
.NDISPX  AIF   (N'&DISP LT 3).DISPX
&DISP(3) DC    Y(X'06',1,1)             DISP=(,, )
.DISPX   AIF   ('&TERM' EQ '').TERMX
&TERM    DC    Y(X'28',0)              TERM=TS
.TERMX   AIF   ('&FREE' EQ '').FREEX
&FREE    DC    Y(X'1C',0)              FREE=CLOSE
.FREEX   AIF   ('&UNIT&SPACE&MSVGP' EQ '').DDD1X
         AIF   ('&UNIT' EQ '').UNITX
         AIF   ('&UNIT(1)' EQ '').UNIT1X
&UNIT(1) DC    Y(X'15',1,8)            UNIT=( )
.UNIT1X  AIF   ('&UNIT(2)' EQ '').UNIT2X
         AIF   ('&UNIT(2)' NE 'P').UNITC
P        DC    Y(X'17',0)              UNIT=(,P)  PARALLEL MOUNT
         AGO   .UNIT2X
.UNITC   ANOP
&UNIT(2) DC    Y(X'16',1,1)            UNIT=(, )  UNIT COUNT
.UNIT2X  AIF   ('&UNIT(3)' EQ '').UNITX
         MNOTE 8,'UNIT=(,,DEFER) NOT SUPPORTED BY DYNAMIC ALLOCATION.'
.UNITX   AIF   ('&SPACE' EQ '').SPACEX
&C       SETC  '&SPACE(1)'
         AIF   ('&C' EQ '').SPACE2
         AIF   ('&C' NE 'TRK').SPACE1C
TRK      DC    Y(X'07',0)              SPACE=(TRK)
         AGO   .SPACE2
.SPACE1C AIF   ('&C' NE 'CYL').SPACE1A
CYL      DC    Y(X'08',0)              SPACE=(CYL)
         AGO   .SPACE2
.SPACE1A ANOP
&C       DC    Y(X'09',1,3)            SPACE=( )
.SPACE2  AIF   ('&SPACE(2)' EQ '').SPACE2X
&C       SETC  '&SPACE(2)'
         AIF   ('&C'(1,1) NE '(').SPACE2W
&K       SETA  2
.SPACE2A AIF   ('&C'(&K,1) EQ ',').SPACE2B
&K       SETA  &K+1
         AIF   (&K LT K'&C).SPACE2A
.SPACE2B AIF   (&K EQ 2).SPACE2C
&D       SETC  '&C'(2,&K-2)
&D       DC    Y(X'0A',1,3)            SPACE=(,( ))
.SPACE2C AIF   (&K GE K'&C).SPACE2X
&K       SETA  &K+1
&A       SETA  &K
.SPACE2D AIF   ('&C'(&K,1) EQ ',').SPACE2E
&K       SETA  &K+1
         AIF   (&K LT K'&C).SPACE2D
.SPACE2E AIF   (&K EQ &A).SPACE2F
&D       SETC  '&C'(&A,&K-&A)
&D       DC    Y(X'0B',1,3)            SPACE=(,(, ))
.SPACE2F AIF   (&K GE K'&C).SPACE2X
&K       SETA  &K+1
         AIF   (&K GE K'&C).SPACE2X
&A       SETA  &K
.SPACE2G AIF   ('&C'(&K,1) EQ ',').ERRSPA2
&K       SETA  &K+1
         AIF   (&K LT K'&C).SPACE2G
&D       SETC  '&C'(&A,&K-&A)
&D       DC    Y(X'0C',1,3)            SPACE=(,(,, ))
         AGO   .SPACE2X
.SPACE2W ANOP
&C       DC    Y(X'0A',1,3)            SPACE=(,( ))
.SPACE2X AIF   (N'&SPACE LE 3).SPACE3
&C       SETC  '&SPACE(5)'
&D       SETC  '&SPACE(4)'
         AIF   ('&C' EQ '').SPACE4
&C       DC    Y(X'0F',0)              SPACE=(,,,,ROUND)
.SPACE4  AIF   ('&D' EQ '').SPACE3
&D       DC    Y(X'0E',1,1)            SPACE=(,,, )
.SPACE3  AIF   ('&SPACE(3)' EQ '').SPACEX
&C       SETC  '&SPACE(3)'
&C       DC    Y(X'0D',0)              SPACE=(,,RLSE)
.SPACEX  AIF   ('&MSVGP' EQ '').MSVGPX
&MSVGP   DC    Y(X'5E',1,8)            MSVGP=
.MSVGPX  ANOP
.DDD1X   AIF   ('&VOL&LABEL&PROTECT' EQ '').DDD2X
         AIF   ('&VOL' EQ '').VOLX
&C       SETC  '&VOL(N'&VOL)'
         AIF   ('&C'(1,4) NE 'SER=').VOLREF
&C       SETC  '&C'(5,K'&C-4)
&C       DC    Y(X'10',1,6)            VOL=SER=
         AGO   .VOLKEYX
.VOLREF  AIF   ('&C'(1,4) NE 'REF=').VOL4
&C       SETC  '&C'(5,K'&C-4)
&C       DC    Y(X'14',1,44)           VOL=REF=
.VOLKEYX AIF   (N'&VOL LE 1).VOLX
         AIF   (N'&VOL LE 2).VOL2X
         AIF   (N'&VOL LE 3).VOL3X
         AIF   (N'&VOL LE 4).VOL4X
.VOL4    AIF   ('&VOL(4)' EQ '').VOL4X
&VOL(4)  DC    Y(X'13',1,1)            VOL=(,,, )
.VOL4X   AIF   ('&VOL(3)' EQ '').VOL3X
&VOL(3)  DC    Y(X'12',1,2)            VOL=(,, )
.VOL3X   AIF   ('&VOL(2)' EQ '').VOL2X
         MNOTE 8,'VOL=(,RETAIN) NOT SUPPORTED BY DYNAMIC ALLOCATION'
.VOL2X   AIF   ('&VOL(1)' EQ '').VOLX
&VOL(1)  DC    Y(X'11',0)              VOL=(PRIVATE)
.VOLX    AIF   ('&LABEL' EQ '').LABELX
&C       SETC  '&LABEL(N'&LABEL)'
         AIF   ('&C'(1,6) NE 'EXPDT=').LABELEX
&C       SETC  '&C'(7,K'&C-6)
&C       DC    Y(X'22',1,5)            LABEL=EXPDT=
         AGO   .LABKEYX
.LABELEX AIF   ('&C'(1,6) NE 'RETPD=').LABELRX
&C       SETC  '&C'(7,K'&C-6)
&C       DC    Y(X'23',1,2)            LABEL=RETPD=
.LABKEYX AIF   (N'&LABEL LE 1).LABELX
         AIF   (N'&LABEL LE 2).LABEL2X
         AIF   (N'&LABEL LE 3).LABEL3X
         AIF   (N'&LABEL LE 4).LABEL4X
.LABELRX AIF   ('&LABEL(4)' EQ '').LABEL4X
&C       SETC  '&LABEL(4)'
&C       DC    Y(X'21',1,1)            LABEL=(,,, )
.LABEL4X AIF   ('&LABEL(3)' EQ '').LABEL3X
&C       SETC  '&LABEL(3)'
&C       DC    Y(X'20',1,1)            LABEL=(,, )
.LABEL3X AIF   ('&LABEL(2)' EQ '').LABEL2X
&C       SETC  '&LABEL(2)'
&C       DC    Y(X'1E',1,1)            LABEL=(, )
.LABEL2X AIF   ('&LABEL(1)' EQ '').LABELX
&C       SETC  '&LABEL(1)'
&C       DC    Y(X'1F',1,2)            LABEL=( )
.LABELX  AIF   ('&PROTECT' EQ '').PROTECX
&PROTECT DC    Y(X'61',0)              PROTECT=YES
.PROTECX ANOP
.DDD2X   AIF   ('&DUMMY&DCB&SUBSYS' EQ '').DDD3X
         AIF   ('&DUMMY' EQ '').DUMMYX
&DUMMY   DC    Y(X'24',0)              DUMMY
.DUMMYX  AIF   ('&DCB' EQ '').DCBX
&A       SETA  N'&DCB+1
.DCBLOOP AIF   (&A LE 1).DCBX
&A       SETA  &A-1
&C       SETC  '&DCB(&A)'
         AIF   (K'&C LE 5).DCB4
         AIF   ('&C'(1,8) NE 'BLKSIZE=').BLKSIZX
&C       SETC  '&C'(9,K'&C-8)
&C       DC    Y(X'30',1,2)            DCB=BLKSIZE=
         AGO   .DCBLOOP
.BLKSIZX AIF   ('&C'(6,1) NE '=').DCB7
&D       SETC  '&C'(7,K'&C-6)
&C       SETC  '&C'(1,5)
         AIF   ('&C' NE 'BUFNO').BUFNOX
&D       DC    Y(X'34',1,1)            DCB=BUFNO=
         AGO   .DCBLOOP
.BUFNOX  AIF   ('&C' NE 'RECFM').RECFMX
&D       DC    Y(X'49',1,1)            DCB=RECFM=
         AGO   .DCBLOOP
.RECFMX  AIF   ('&C' NE 'LRECL').LRECLX
&D       DC    Y(X'42',1,2)            DCB=LRECL=
         AGO   .DCBLOOP
.LRECLX  AIF   ('&C' NE 'DSORG').DSORGX
&D       DC    Y(X'3C',1,2)            DCB=DSORG=
         AGO   .DCBLOOP
.DSORGX  AIF   ('&C' NE 'EROPT').EROPTX
&D       DC    Y(X'3D',1,1)            DCB=EROPT=
         AGO   .DCBLOOP
.EROPTX  AIF   ('&C' NE 'LIMCT').ERRDCB
&D       DC    Y(X'41',1,3)            DCB=LIMCT=
         AGO   .DCBLOOP
.DCB7    AIF   ('&C'(1,7) NE 'KEYLEN=').DCB5
&C       SETC  '&C'(8,K'&C-7)
&C       DC    Y(X'40',1,1)            DCB=KEYLEN=
         AGO   .DCBLOOP
.DCB5    AIF   ('&C'(1,5) NE 'BUFL=').DCB4
&C       SETC  '&C'(6,K'&C-5)
&C       DC    Y(X'32',1,2)            DCB=BUFL=
         AGO   .DCBLOOP
.DCB4    AIF   ('&C'(4,1) NE '=').DCBREF
&D       SETC  '&C'(5,K'&C-4)
&C       SETC  '&C'(1,3)
         AIF   ('&C' NE 'DEN').DCBDENX
&D       DC    Y(X'3B',1,1)            DCB=DEN=
         AGO   .DCBLOOP
.DCBDENX AIF   ('&C' NE 'NCP').ERRDCB
&D       DC    Y(X'44',1,1)            DCB=NCP=
         AGO   .DCBLOOP
.DCBREF  AIF   (&A NE 1).ERRDCB2  POSITIONAL PARAMETER
         AIF   ('&C'(1,2) NE '*.').REFDSN
&C       SETC  '&C'(3,K'&C-2)
&C       DC    Y(X'2D',1,8)            DCB=*. DDNAME REFERENCE
         AGO   .DCBLOOP
.REFDSN  MNOTE 0,'DATASET REFERENCE ASSUMED IN DCB=&C'
&C       DC    Y(X'2C',1,44)           DCB= DSNAME REFERENCE
         AGO   .DCBLOOP
.DCBX    AIF   ('&SUBSYS' EQ '').SUBSYSX
&C       SETC  '&SUBSYS(1)'
         AIF   ('&C' EQ '').SUB1X
&C       DC    Y(X'5F',1,4)            SUBSYS=( )
.SUB1X   AIF   ('&SUBSYS(2)' EQ '').SUBSYSX
&C       SETC  '&SUBSYS(2)'
&C       DC    Y(X'60',1,256)          SUBSYS=(, )
.SUBSYSX ANOP
.DDD3X   AIF   ('&SYSOUT&DEST&HOLD&COPIES&OUTLIM&FCB&UCS' EQ '').DDD4X
         AIF   ('&SYSOUT' EQ '').SYSOUTX
         AIF   ('&SYSOUT(1)' EQ '').SYSOU1X
&C       SETC  '&SYSOUT(1)'
&C       DC    Y(X'18',1,1)            SYSOUT=( )
.SYSOU1X AIF   (N'&SYSOUT LE 1).SYSOUTX
&C       SETC  '&SYSOUT(2)'
         AIF   ('&C' EQ '').SYSOU2X
&C       DC    Y(X'19',1,8)            SYSOUT=(, )
.SYSOU2X AIF   ('&SYSOUT(3)' EQ '').SYSOUTX
&C       SETC  '&SYSOUT(3)'
&C       DC    Y(X'1A',1,4)            SYSOUT=(,, )
.SYSOUTX AIF   ('&DEST' EQ '').DESTX
&DEST    DC    Y(X'58',1,7)            DEST=
.DESTX   AIF   ('&HOLD' EQ '').HOLDX
&HOLD    DC    Y(X'59',0)              HOLD=YES
.HOLDX   AIF   ('&COPIES' EQ '').COPIESX
&COPIES  DC    Y(X'1D',1,1)            COPIES=
.COPIESX AIF   ('&OUTLIM' EQ '').OUTLIMX
&OUTLIM  DC    Y(X'1B',1,3)            OUTLIM=
.OUTLIMX AIF   ('&FCB' EQ '').FCBX
         AIF   ('&FCB(1)' EQ '').FCB1X
&FCB(1)  DC    Y(X'25',1,4)            FCB=( )
.FCB1X   AIF   ('&FCB(2)' EQ '').FCBX
&FCB(2)  DC    Y(X'26',1,1)            FCB=(, )
.FCBX    AIF   ('&UCS' EQ '').UCSX
         AIF   ('&UCS(1)' EQ '').UCS1X
&UCS(1)  DC    Y(X'29',1,4)            UCS=( )
.UCS1X   AIF   ('&UCS(2)' EQ '').UCS2X
&UCS(2)  DC    Y(X'2A',0)              UCS=(,FOLD)
.UCS2X   AIF   ('&UCS(3)' EQ '').UCSX
&UCS(3)  DC    Y(X'2B',0)              UCS=(,,VERIFY)
.UCSX    ANOP
.DDD4X   AIF   ('&PASWORD' EQ '').PASWORX
&PASWORD DC    Y(X'50',1,8)            PASWORD=
.PASWORX MEXIT
.ERRDSN  MNOTE 12,'BOTH DSN= AND DSNAME= SPECIFIED. BOTH IGNORED.'
         AGO   .DSNAMEX
.ERRMEM  MNOTE 12,'INVALID DSNAME, &C'
         AGO   .DSNAMEX
.ERRSPA2 MNOTE 8,'TOO MAY SUBPARAMETERS IN SECOND SPACE PARAMETER, &C'
         AGO   .SPACE2X
.ERRDCB2 MNOTE 8,'INVALID DCB PARAMETER, &C.. IGNORING.'
         AGO   .DCBLOOP
.ERRDCB  MNOTE 8,'INVALID DCB PARAMETER, &C=&D.. IGNORED.'
         AGO   .DCBLOOP
         MEND
