00010000 PROC 0 ASID() DEBUG
00020000/*********************************************************************/
00030000/* REFER   IPO1.CMDPROC(LISTASID)                                    */
00040000/* COMPID  SYSTEMS                                                   */
00050000/* DOC     THIS CLIST EXECUTES UNDER IPCS TO DISPLAY THE JOBNAMES    */
00060000/*         FOR THE ACTIVE ASIDS IN THE DUMP BEING ANALYZED.          */
00070000/*         OPTIONALLY, IT CHECKS ONLY THE SPECIFIED ASID.            */
00080000/*                                                                   */
00090000/*********************************************************************/
00100000 /******************************************************************/
00110000 /* INITIALIZATION                                                 */
00120000 /******************************************************************/
00130000 IF &DEBUG=DEBUG THEN CONTROL SYMLIST CONLIST LIST
00140000 SET &RCODE=0                       /* SET RETURN CODE             */
00150000 EQUATE ASVTADDR 4C.%+22C% PTR LE(4)/* ADDRESS OF ASVT             */
00160000 EVAL ASVTADDR+204 LENGTH(4)        /* CONTENTS OF ASVTMAXU        */
00170000 SET &ASVTMAXU=&LASTCC              /* SAVE THE VALUE              */
00180000 SET &MEMCTR=0                      /* TOTAL MEMORIES              */
00190000 SET &ACTCTR=0                      /* ACTIVE MEMORIES             */
00200000 SET &TSOCTR=0                      /* TSO USERS                   */
00210000 /******************************************************************/
00220000 /* PROCESS THE ASID, IF ANY, AND INSURE THAT IT IS VALID          */
00230000 /******************************************************************/
00240000 IF &ASID^=   AND                   /* ASID SPECIFIED   AND        */+
00250000   &ASID^=0 THEN                    /* ASID IS NON-ZERO            */+
00260000   IF &ASID>&ASVTMAXU THEN          /* INSURE VALID ASID           */+
00270000     DO
00280000       WRITE ==> ERROR: ASID(&ASID) IS GREATER THAN +
00290000         MAX USERS(&ASVTMAXU)
00300000       SET &RCODE=8                 /* ERROR RETURN CODE           */
00310000       GOTO EXIT
00320000     END
00330000   ELSE                             /* HAVE VALID ASID             */+
00340000     SET &ENDASID=&ASID             /* END OF LOOP CONTROL         */
00350000 ELSE                               /* USE ALL POSSIBLE ASIDS      */+
00360000   DO
00370000     SET &ASID=1                    /* FIRST ASID TO CHECK         */
00380000     SET &ENDASID=&ASVTMAXU         /* LAST ASID TO CHECK          */
00390000   END
00400000 /******************************************************************/
00410000 /* SET UP THE HEADER AND PAGE CONTROL                             */
00420000 /******************************************************************/
00430000 NOTE '*************************************************************+
00440000 ******' PAGE
00450000 NOTE '***    DISPLAY OF ASIDS(&ASID:&ENDASID) AND JOBNAMES  -
00460000                     ***'
00470000 NOTE '*************************************************************+
00480000 ******'
00490000 /******************************************************************/
00500000 /* LOOP THROUGH THE SPECIFIED OR ALL ASIDS                        */
00510000 /******************************************************************/
00520000 DO WHILE &ASID^=&ENDASID+1         /* CHECK EACH ASID             */
00530000   SET &MEMCTR=&MEMCTR+1            /* COUNT TOTAL MEMORIES        */
00540000   SET &MEM=ASID(&ASID)             /* ASID KEYWORD                */
00550000   SET &ASVTOFFS = &ASID*4          /* OFFSET INTO ENTRIES OF ASVT */
00560000   COMPARE ADDR(ASVTADDR+20C+&ASVTOFFS.N) /* INSURE                */+
00570000     LENGTH(1) WITH(VALUE(X'80'))   /*   MEMORY IS ASSIGNED        */
00580000   IF &LASTCC=0 THEN                /* NOT ASSIGNED                */+
00590000     NOTE 'ASID0&ASID IS NOT ASSIGNED' SPACE(1)
00600000   ELSE                             /* MEMORY IS ASSIGNED          */+
00610000     DO
00620000       SET &ACTCTR=&ACTCTR+1        /* COUNT ACTIVE MEMORIES       */
00630000       EQ ASCBADDR ASVTADDR+20C+&ASVTOFFS.N% /* ADDRESS OF         */+
00640000         LENGTH(4) PTR &MEM         /* ASCB                        */
00650000       COMPARE ADDRESS(ASCBADDR+3C) /* ADDRESS OF TSB, IF ANY      */+
00660000         LE(4) WITH(VALUE(X'00000000'))
00670000       IF &LASTCC=0 THEN            /* MUST NOT BE TSO USER        */+
00680000         SET &TSO=                  /* INDICATE NO TSO USER        */
00690000       ELSE                          /* MUST BE TSO USER           */+
00700000         DO
00710000           SET &TSO=TSOUSER          /* INDICATE TSO USER          */
00720000           SET &TSOCTR=&TSOCTR+1     /* COUNT TSO USERS            */
00730000         END
00740000       EVAL ASCBADDR+B0  L(4) &MEM  /* ASCBJBNS POINTER            */
00750000       SET &ASCBJBNS=&LASTCC        /* CHECK IF VALID POINTER      */
00760000       IF &ASCBJBNS=0 THEN          /* MUST NOT BE AVAILABLE       */+
00770000         NOTE 'ASID0&ASID  JOBNAME IS NOT AVAILABLE  &TSO' SPACE(1)
00780000       ELSE                          /* HAVE VALID JOBNAME         */+
00790000         DO
00800000           EQ JOBNAME ASCBADDR+B0% L(8) CHAR &MEM
00810000           LIST JOBNAME REM('ASID0&ASID  &TSO') DIS(NOREQ) &MEM
00820000         END
00830000     END
00840000   SET &ASID=&ASID+1                 /* STEP TO NEXT ASID          */
00850000 END                                 /* END OF ASID CHECK LOOP     */
00860000 EXIT: NOTE 'TOTAL ASIDS PROCESSED=&MEMCTR  +
00870000       ACTIVE=&ACTCTR  TSOUSERS=&TSOCTR' SPACE(1)
00880000       EXIT CODE(&RCODE)
