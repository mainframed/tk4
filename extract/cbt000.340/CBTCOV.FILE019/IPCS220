00010000PROC 0 DEBUG ID(&SYSUID.) NEW TLIB0 TLIB1 VOLUME() NOSPF MODE()
00020000/*********************************************************************/
00030000/* REFER   IPO1.CMDPROC(IPCS)                       COMPID  SYSTEMS  */
00040000/* THIS CLIST ALLOCATES IPCS DUMP DIRECTORY AND IPCS PRINT FILES     */
00050000/* PRIOR TO INVOKING THE IPCS COMMAND.                               */
00060000/* IF OPTION 'NEW' IS SPECIFIED THEN A NEW DUMP DIRECTORY IS CREATED.*/
00070000/*********************************************************************/
00080000 
00090000IF &DEBUG NE DEBUG THEN CONTROL NOLIST MSG PROMPT
00100000ELSE +
00110000   CONTROL LIST PROMPT CONLIST SYMLIST MSG
00120000 
00130000IF &DEBUG = THEN CONTROL NOMSG
00140001   $C SHOWTSO NODENAME=CENTER
00150000   $C QSPF
00160000      IF &LASTCC = 4 THEN DO
00170000                          WRITE **** CANNOT ENTER IPCS UNDER ISPF ****
00180000                          EXIT
00190000                          END
00200000 
00210000        IF &MODE = XA  THEN SET LV = XA
00220000        IF &MODE = 370 THEN SET LV = 370
00230000        IF &MODE = NATIVE THEN DO
00240000                               XATST
00250000                               IF &LASTCC = 0 THEN SET LV = XA
00260000                                              ELSE SET LV = 370
00270000                               END
00280000 
00290000        IF &MODE = THEN DO
00300000        ASKMODE: +
00310000        WRITENR ** ENTER THE PROCESSING MODE FOR IPCS 370, XA OR (NATIVE) ===>
00320000        READ &LV
00330000        IF &LV = THEN GOTO ASKMODE
00340000                        END
00350000        SET L  = &SUBSTR(1:1,&LV )
00360000 
00370000        IF &L = THEN SET &L = N
00380000 
00390000        IF &L = 3 | &L = X | &L = N THEN GOTO VERLV
00400000                                    ELSE GOTO ASKMODE
00410000 
00420000        VERLV: +
00430000        IF &L    = N THEN DO
00440000                          XATST
00450000                          IF &LASTCC = 0 THEN SET LV = XA
00460000                                         ELSE SET LV = 370
00470000                         END
00480000 
00490000       IF &L  = X THEN SET ID = &STR(&ID..XA)
00500000 
00510000       WHATIF DATASET('ATSO.IPCS&LV..PANELS') ALLOCATED
00520000       IF &LASTCC ^= 0 THEN DO
00530000          IF &NOSPF = THEN DO
00540000                   ALLOC F(PNL) DS('ATSO.IPCS&LV..PANELS') SHR
00550000                   ALLOC F(MSG) DS('ATSO.IPCS&LV..MSGS') SHR
00560000                   $C CONCAT (ISPPLIB PNL)
00570000                   $C CONCAT (ISPMLIB MSG)
00580000                          END
00590000                          END
00600000 
00610000   IF &MODE ^= NATIVE THEN DO
00620000                           IF &LV = XA  THEN SET LOAD = &STR('ATSO.IPCSXA.LOAD')
00630000                           IF &LV = 370 THEN SET LOAD = &STR('ATSO.IPCS370.LOAD')
00640000                           END
00650000                      ELSE SET LOAD =
00660000 
00670000   WRITE
00680000   WRITENR ENTER AN ALTERNATE TASKLIB DSN OR PRESS ENTER:
00690000   READ &TLIB0
00700000   IF &TLIB0^=  THEN SET &TLIB0='&TLIB0'
00710000      IF &LV = XA    THEN DO
00720000                          SET &TLIB1 = &STR('AOST.MVSXA.LOAD' &LOAD)
00730000                          WRITE *** YOU MAY ONLY PROCESS MVS/XA DUMPS USING THIS IPCS DIALOG
00740000                          END
00750000                     ELSE DO
00760000                          SET &TLIB1 = &STR('AOST.MVS370.LOAD'  &LOAD)
00770000                          WRITE *** YOU MAY ONLY PROCESS MVS/370 DUMPS USING THIS IPCS DIALOG
00780000                          END
00790000 
00800000IF &DEBUG = DEBUG THEN DO
00810000   WRITE LEVEL IS &LVL
00820000   WRITE &DEBUG ID(&SYSUID.) &NEW VOLUME(&VOLUME)
00830000   READ &JUNK
00840000                       END
00850000 
00860000 
00870000IF &DEBUG = THEN CONTROL NOMSG
00880000FREE  F(IPCSDDIR IPCSPRNT SYMPDS)
00890000IF &DEBUG = THEN CONTROL MSG
00900000/*********************************************************************/
00910000/* ALLOCATE SYMPDS FOR SYMDUMP                                       */
00920000/*********************************************************************/
00930000WHATIF DATASET('AOST.SYMDUMP.OBJ') CATALOGED
00940000IF &LASTCC = 0 THEN +
00950000ALLOC F(SYMPDS) DS('AOST.SYMDUMP.OBJ') SHR
00960000/*********************************************************************/
00970000/* DELETE THE OLD DUMP DIRECTORY AND ALLOCATE A NEW ONE              */
00980000/*********************************************************************/
00990000 
01000000IF &NEW EQ NEW THEN DO
01010000          IF &NODENAME = WCC1 THEN DO
01020000                                   SET &VOLUME = ATDI1A
01030000                                   GOTO NEWDS
01040000                                   END
01050000          IF &NODENAME = WCC2 THEN DO
01060000                                   SET &VOLUME = ATDI2A
01070000                                   GOTO NEWDS
01080000                                   END
01090000          IF &NODENAME = SWC2 THEN DO
01100000                                   SET &VOLUME = AVDI2A
01110000                                   GOTO NEWDS
01120000                                   END
01130000        WRITE ENTER CORRECT VOLSER FOR ALLOCATION
01140000        WRITENR ENTER VOLSER FOR DATASETS:
01150000        READ &VOLUME
01160000 
01170000NEWDS: +
01180000   CONTROL LIST
01190000      DELETE 'AIPCS.&ID..DEBUG' CLUSTER
01200000      DEFINE CLUSTER (NAME('AIPCS.&ID..DEBUG') VOL(&VOLUME.) +
01210000                     IMBED OWNER(&SYSUID) REPLICATE UNIQUE) +
01220000             INDEX   (NAME('AIPCS.&ID..DEBUGI') TRACKS(1)) +
01230000             DATA    (NAME('AIPCS.&ID..DEBUGD') CYLINDERS(3) +
01240000                     KEYS(128,0) BUFFERSPACE(X'10000') +
01250000                     CONTROLINTERVALSIZE(X'1000'))
01260000      IPCSDDIR 'AIPCS.&ID..DEBUG'   /* INITIALIZE THE DUMP DIRECTORY */
01270000   CONTROL NOLIST
01280000END
01290000/*********************************************************************/
01300000/* ALLOCATE THE DUMP DIRECTORY AND PRINT FILES                       */
01310000/*********************************************************************/
01320000IF &DEBUG ^= DEBUG THEN CONTROL NOMSG
01330000DEL IPCSPRNT.LIST
01340000ASKNEW: +
01350000   WHATIF    DATASET('AIPCS.&ID..DEBUG') CATALOGED
01360000      IF &LASTCC = 4 THEN DO
01370000                          SET &NEW = NEW
01380000                              IF &NODENAME = WCC1 THEN DO
01390000                                                       SET &VOLUME = ATDI1A
01400000                                                       GOTO NEWDS
01410000                                                       END
01420000                              IF &NODENAME = WCC2 THEN DO
01430000                                                       SET &VOLUME = ATDI2A
01440000                                                       GOTO NEWDS
01450000                                                       END
01460000                              IF &NODENAME = SWC2 THEN DO
01470000                                                       SET &VOLUME = AVDI2A
01480000                                                       GOTO NEWDS
01490000                                                       END
01500000                          WRITE *** IPCS DATASETS NOT ALLOCATED :
01510000                          WRITE ENTER CORRECT VOLSER FOR ALLOCATION
01520000                          WRITE WCC1 = ATDI1A      WCC2 = ATDI2A
01530000                          WRITENR ENTER VOLSER FOR DATASETS:
01540000                          READ &VOLUME
01550000                          GOTO NEWDS
01560000                          END
01570000CONTROL MSG
01580000ALLOC FILE(IPCSDDIR) DA('AIPCS.&ID..DEBUG') SHR
01590000ALLOC FI(IPCSPRNT) DS(IPCSPRNT.LIST) NEW SPA(19,10) TR
01600000 
01610000/*********************************************************************/
01620000/* INVOKE IPCS AND SET UP AN INITIAL SETDEF IPCS SUBCOMMAND          */
01630000/*********************************************************************/
01640000IF &TLIB0=  && &TLIB1= THEN GOTO INVOKEIT
01650000   IF &DEBUG ^= DEBUG THEN CONTROL NOMSG
01660000   FREE F(BUGTASK)
01670000   CONTROL MSG
01680000   ALLOC F(BUGTASK) DS(&TLIB0 &TLIB1) SHR
01690000   WHATIF FILE(TASKLIB$) ALLOCATED
01700000      IF &LASTCC ^= 0 THEN DO
01710000                           WRITE *******************************************************
01720000                           WRITE **** TASKLIB$ MUST BE ALLOCATED TO USE THIS CLIST *****
01730000                           WRITE *******************************************************
01740000                           EXIT
01750000                           END
01760000    $C T(TASKLIB@) CONCAT (TASKLIB$ BUGTASK)
01770000 
01780000INVOKEIT: +
01790000   $C IPCS NOPARM
01800000 
01810000IF &NOSPF = THEN +
01820000  $C T(ISPLLIB) ISPSTART
01830000 
01840000  END     /* TERMINATE IPCS */
01850000 
01860000  $C DECONCAT ISPPLIB
01870000  $C DECONCAT ISPMLIB
01880000   $C T(TASKLIB@) DECONCAT TASKLIB$
01890000  FREE F(PNL MSG BUGTASK)
01900000 
01910000IF &NOSPF = NOSPF THEN EXIT
01920000 
01930000ASKPRNT: +
01940000WRITENR DO YOU WANT TO PRINT, DELETE OR KEEP IPCSPRNT.LIST (P, D OR S) ===>
01950000READ &ANS
01960000 
01970000IF &ANS = D THEN DO
01980000                 DELETE IPCSPRNT.LIST
01990000                 END
02000000 
02010000 
02020000IF &ANS = S THEN DO
02030000                 WRITE IPCSPRNT.LIST HAS BEEN SAVED AND MUST BE RENAMED OR
02040000                 WRITE DELETED BEFORE REINVOKING IPCS........
02050000                 END
02060000 
02070000IF &ANS = P THEN DO
02080000                 ISPF CMD(%GENPRINT DSN(IPCSPRNT.LIST))
02090000                 GOTO ASKPRNT
02100000                 END
