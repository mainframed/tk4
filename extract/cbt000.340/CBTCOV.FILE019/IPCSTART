00010000PROC     0                      /* DUMP DATA SET ANALYSIS            */ +
00020000                                /*                                   */ +
00030000                  DEBUG         /*   LIST THE CLIST                  */ +
00040000                                /*                                   */ +
00050003                  OS(XA)        /* XA | 370 - LEVEL OF IPCS          */ +
00060000                                /*                                   */ +
00070000                                /* DUMP DIRECTORY PARAMETERS         */ +
00080000                  NEW           /*   SCRATCH/ALLOCATE DUMP DIRECTORY */ +
00090000                  QUAL(&SYSUID) /*   HIGH-LEVEL DSNAME QUALIFIER     */ +
00100000                  INDEX(1)      /*   INDEX COMPONENT TRACKS          */ +
00110000                  DATA(10)      /*   DATA COMPONENT CYLINDERS        */ +
00120000                  VOLUME()      /*   VOLUME SERIAL                   */ +
00130000                                /*                                   */ +
00140000                                /* IPCSDDIR PARAMETERS               */ +
00150000                  REUSE         /*   RESET DUMP DIRECTORY TO EMPTY   */ +
00160000                  NOREUSE       /*   DO NOT RESET DIRECTORY          */ +
00170000                  CONFIRM       /*   CONFIRM REUSE                   */ +
00180000                  NOCONFIRM     /*   DO NOT CONFIRM REUSE            */ +
00190000                                /*                                   */ +
00200000                                /* TSO TEST PARAMETER                */ +
00210000                  TSOTEST       /*   INVOKE TSO TEST COMMAND         */ +
00220000                                /*                                   */ +
00230000                                /* IPCS PARAMETERS                   */ +
00240000                  TASKLIB()     /*   IPCS TASKLIB                    */ +
00250000                  NOTASKLIB     /*   NO IPCS TASKLIB                 */ +
00260000                                /*                                   */ +
00270000                                /* ISPF PARAMETERS                   */ +
00280000                  PANEL()       /*   INITIAL PANEL NAME              */ +
00290000                  OPT()         /*   INITIAL PANEL OPTION            */ +
00300000                  CMD()         /*   INITIAL COMMAND                 */ +
00310000                  PGM()         /*   INITIAL PROGRAM NAME            */ +
00320000                  PARM()        /*   INITIAL PROGRAM PARM            */ +
00330000                  NEWAPPL()     /*   APPLICATION ID                  */ +
00340000                  TEST          /*   TEST MODE                       */ +
00350000                  TESTX         /*   EXTENDED TEST MODE              */ +
00360000                  TRACE         /*   TRACE MODE                      */ +
00370000                  TRACEX        /*   EXTENDED TRACE MODE             */ +
00380000                                /*                                   */ +
00390002                  J215          /*   JES3 SP 2.1.5 TASKLIB           */ +
00400002                  J221          /*   JES3 SP 2.2.1 TASKLIB           */
00410000 
00420000/*********************************************************************/
00430000/*                   DUMP DATA SET MANAGEMENT                        */
00440000/* THIS CLIST ALLOWS THE USE OF IPCS IN AN ISPF ENVIRONMENT. ALL     */
00450000/* ISPF DATA SETS MUST BE ALLOCATED FIRST. THE CLIST ALLOCATES THE   */
00460000/* USER'S IPCS DUMP DIRECTORY (IT IS DEFINED AND INITIALIZED IF      */
00470000/* NECESSARY). IT THEN INVOKES ISPF.                                 */
00480000/*                                                                   */
00490000/* Douglas H. Adams                                                  */
00500000/* Information Systems Center                                        */
00510000/* Rockwell International Corporation                                */
00520000/* 2201 Seal Beach Boulevard                                         */
00530000/* P. O. Box 2515                                                    */
00540000/* Seal Beach, California 90740-1515                                 */
00550000/*                                                                   */
00560000/* (213) 594-2618                                                    */
00570000/*                                                                   */
00580000/*********************************************************************/
00590000 
00600000IF       &DEBUG = DEBUG +
00610000THEN     CONTROL  ASIS   CONLIST NOFLUSH   LIST   MSG   PROMPT   SYMLIST END(ENDO)
00620000ELSE     CONTROL  ASIS NOCONLIST NOFLUSH NOLIST   MSG   PROMPT NOSYMLIST END(ENDO)
00630000 
00640000CLRSCRN
00650000 
00660000WRITE               IIIIIIII    PPPPPPPP    CCCCCCCC    SSSSSSSS
00670000WRITE                  II       PP    PP    CC          SS
00680000WRITE                  II       PPPPPPPP    CC          SSSSSSSS
00690000WRITE                  II       PP          CC                SS
00700000WRITE               IIIIIIII    PP          CCCCCCCC    SSSSSSSS
00710000WRITE
00720000WRITE
00730000 
00740000IF       &SYSISPF = ACTIVE +
00750000THEN     DO
00760000         WRITE    ***  IPCS must be invoked before ISPF  ***
00770000         EXIT     CODE(16)
00780000         ENDO
00790000 
00800000XATST
00810000IF       &LASTCC = 0 +
00820000THEN     SET      &LEVEL = XA
00830000ELSE     SET      &LEVEL = 370
00840000 
00850000IF       &OS = NATIVE +
00860000THEN     SET      &OS = &LEVEL
00870000 
00880000IF       &OS = XA | &OS = 370 +
00890000THEN     WRITE    ***  Only MVS/&OS dumps can be processed  ***
00900000 
00910000DO       WHILE    &OS ^= XA && &OS ^= 370
00920000         WRITE    This is an MVS/&LEVEL system
00930000         WRITENR  Enter type of dumps to process (XA OR 370) ===>
00940000         CONTROL  CAPS
00950000         READ     &OS
00960000         CONTROL  ASIS
00970000         IF       &OS = X +
00980000         THEN     SET      &OS = XA
00990000         IF       &OS = 3 | &OS = 37 +
01000000         THEN     SET      &OS = 370
01010000         IF       &OS = THEN SET &OS = XA  /* DEFAULT */
01020000         IF       &OS = END +
01030000         THEN     EXIT     CODE(0)
01040000         ENDO
01050000 
01060000IF       &OS = XA +
01070000THEN     SET      &DDIR = XA.
01080000ELSE     SET      &DDIR = &STR()
01090000 
01100000 
01110000IF       &PANEL = &STR() +
01120000THEN     SET      &PANEL = ISP@MSTR
01130000 
01140000IF       &QUAL ^= &STR() +
01150000THEN     SET      &QUAL = &QUAL...
01160000 
01170000IF       &SYSDSN('&QUAL.&DDIR.DEBUG') = OK +
01180000THEN     SET      &ALLOCATE = NO
01190000ELSE     SET      &ALLOCATE = YES
01200000 
01210000IF       &NEW = NEW | &ALLOCATE = YES +
01220000THEN     DO
01230000         IF       &VOLUME = &STR() +
01240000         THEN     DO
01250000                  LISTDSI  ISPPROF  FILE
01260000                  IF       &LASTCC ^= 0 +
01270000                  THEN     DO
01280000                           WRITE *** ISPF FILE ISPPROF MUST BE ALLOCATED BEFORE EXECUTING IPCS ***
01290000                           EXIT     CODE(16)
01300000                           ENDO
01310000                  SET      &VOLUME = &SYSVOLUME
01320000                  ENDO
01330000         DELETE   '&QUAL.&DDIR.DEBUG'
01340000         DEFINE   CLUSTER (NAME('&QUAL.&DDIR.DEBUG')    +
01350000                           OWNER(&SYSUID)               +
01360000                           REUSE                        +
01370000                           SHAREOPTIONS(1)              +
01380000                           VOLUME(&VOLUME))             +
01390000                  INDEX   (NAME('&QUAL.&DDIR.DEBUGI')   +
01400000                           IMBED                        +
01410000                           OWNER(&SYSUID)               +
01420000                           REPLICATE                    +
01430000                           TRACKS(&INDEX))              +
01440000                  DATA    (NAME('&QUAL.&DDIR.DEBUGD')   +
01450000                           CONTROLINTERVALSIZE(X'1000') +
01460000                           CYLINDERS(&DATA)             +
01470000                           KEYS(128 0)                  +
01480000                           OWNER(&SYSUID)               +
01490000                           RECORDSIZE(256 3072))
01500000         IF       &LASTCC = 0 && &NEW ^= NEW +
01510000         THEN     DO
01520000                  IF       &SYSDSN('AIPCS.&QUAL.&DDIR.DEBUG') = OK +
01530000                  THEN     DO
01540000                           REPRO    INDATASET('AIPCS.&QUAL.&DDIR.DEBUG') OUTDATASET('&QUAL.&DDIR.DEBUG') REUSE
01550000                           IF       &LASTCC = 0 +
01560000                           THEN     DELETE 'AIPCS.&QUAL.&DDIR.DEBUG'
01570000                           ENDO
01580000                  ENDO
01590000         ENDO
01600000 
01610000ATTN     %IPCATTN
01620000 
01630000ALLOCATE FILE(IPCSDDIR) DATASET('&QUAL.&DDIR.DEBUG') OLD REUSE
01640000IF       &J215 = J215 +
01650000THEN     SET      &JES3LINK = 'JES3.SP215.JES3LIB'
01660000ELSE     SET      &JES3LINK = &STR()
01670002IF       &J221 = J221 +
01680002THEN     SET      &JES3LINK = 'JES3.SP221.JES3LINK'
01690002ELSE     SET      &JES3LINK = &STR()
01700000IF       &NOTASKLIB = NOTASKLIB | &TASKLIB = &STR() +
01710000THEN     SET      &IPCLLIB = TASKLIB('AOST.MVS&OS..LOAD' &JES3LINK)
01720000ELSE     SET      &IPCLLIB = TASKLIB(&TASKLIB 'AOST.MVS&OS..LOAD' &JES3LINK)
01730000IF       &OS ^= &LEVEL +
01740000THEN     ALLOCATE FILE(IPCTLIB) DATASET('ATSO.IPCS&OS..LOAD') SHR REUSE
01750000 
01760001IF       &NEW = NEW | &REUSE = REUSE | &ALLOCATE = YES +
01770000THEN     IPCSDDIR '&QUAL.&DDIR.DEBUG' &REUSE &NOREUSE &CONFIRM &NOCONFIRM
01780000 
01790000ATTN     OFF
01800000CONTROL  MAIN
01810000ERROR    DO
01820000         WRITE    ***  IPCS ended code &LASTCC  ***
01830000         GOTO     CLEANUP
01840000         ENDO
01850000 
01860000IF       &OS = &LEVEL +
01870000THEN     DO
01880000         SET      &PREIPCS = &STR()
01890000         SET      &TESTIPCS = 'SYS1.LINKLIB(IPCS)'
01900000         ENDO
01910000ELSE     DO
01920000         SET      &PREIPCS = $C TASKLIB(IPCTLIB)
01930000         SET      &TESTIPCS = 'ATSO.IPCS&OS..LOAD(IPCS)'
01940000         ENDO
01950000 
01960000IF       &TSOTEST = &STR() +
01970000THEN     &PREIPCS IPCS NOPARM &IPCLLIB
01980000ELSE     DO
01990000         TEST     &TESTIPCS CP
02000000         &PREIPCS IPCS     NOPARM &IPCLLIB
02010000         TERMIN   GO
02020000         GO
02030000         ENDO
02040000 
02050000ISPSTART CMD(%IPCPARM &OS &NEW &REUSE &DEBUG) NEWAPPL(IPCS)
02060000ISPSTART PANEL(&PANEL) OPT(&OPT) CMD(&CMD) PGM(&PGM) PARM(&PARM) NEWAPPL(&NEWAPPL) &TEST &TESTX &TRACE &TRACEX
02070000 
02080000IF       &TSOTEST = &STR() +
02090000THEN     END      /* IPCS */
02100000ELSE     DO
02110000         TERMIN   END      /* IPCS */
02120000         END      /* IPCS */
02130000         TERMIN   END      /* TEST */
02140000         END      /* TEST */
02150000         ENDO
02160000 
02170000CLEANUP: +
02180000ERROR    OFF
02190000IF       &OS ^= &LEVEL +
02200000THEN     FREE     FILE(IPCTLIB)
02210000 
02220000WRITE    IPCS/&OS completed
02230000EXIT     CODE(0)
