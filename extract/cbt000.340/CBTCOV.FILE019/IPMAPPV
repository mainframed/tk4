00010000PROC 0  DEBUG
00020000 GLOBAL &HEXVALUE
00030000 GLOBAL &VALUE
00040000    IF &DEBUG NE DEBUG THEN CONTROL MSG NOSYM NOCON NOLIST   PROMPT
00050000      ELSE                  CONTROL MSG   SYM   CON   LIST   PROMPT
00060000    SET &RCODE=0
00070000    SET &PAD=&STR(000)
00080000START:                                                                 +
00090000    WRITE ENTER ASID (IN DECIMAL), OR DEPRESS ENTER OR X TO EXIT
00100000    WRITENR (DEFAULT IS CURRENT OR ASID(1)===>
00110000     READ &ASID
00120000    IF &ASID= X THEN GOTO EXIT
00130000    IF &ASID=   | +
00140000      &ASID=0 THEN DO                     /* TO LOOK AT.  IF HE ENTERS*/
00150000        EVAL 2. HEADER LENGTH(2)          /* ASID ONE BY DEFAULT.     */
00160000        SET &ASID=&LASTCC
00170000        IF &ASID=0 THEN  +
00180000          SET &ASID=1
00190000      END
00200000    ELSE
00210000      IF &LENGTH(&ASID)<3 THEN DO         /* ADJUST ASID SIZE         */
00220000        SET &FILL=&SUBSTR(1:3-&LENGTH(&ASID),&PAD)
00230000        SET &ASID=&STR(&FILL&ASID)
00240000        END
00250000    SET &MEM=&STR(ASID(&ASID))           /* CHECK TO SEE IF THIS      */
00260000    EQUATE ASVTADDR 4C.%+22C% PTR LE(4)  /* MEMORY IS HIGHER THAT THE */
00270000    EVAL ASVTADDR+204 LENGTH(4)          /* MAMIMUM USERS, AND IF SO  */
00280000    SET &ASVTMAXU=&LASTCC                /* TELL THE USER             */
00290000    IF &ASID>&ASVTMAXU THEN DO
00300000      WRITE ===> ERROR: &MEM IS GREATER THAN MAX USERS(&ASVTMAXU)
00310000      GOTO START
00320000      END
00330000    ELSE
00340000     SET &ASVTOFFS=&ASID*4              /* IS ASSIGNED, IF NOT, TELL */
00350000    COMPARE ADDR(ASVTADDR+20C+&ASVTOFFS.N)                             +
00360000    LENGTH(1) WITH(VALUE(X'80'))        /* TELL THE USER             */
00370000    IF &LASTCC=0 THEN DO
00380000      WRITE LASTCC=&LASTCC
00390000      L ASVTADDR+20C+&ASVTOFFS.N LEN(1)
00400000      WRITE ===> ERROR: &MEM IS NOT ASSIGNED
00410000      GOTO START
00420000    END
00430000      ELSE
00440000      EQ ASCBADDR ASVTADDR+20C+&ASVTOFFS.N%
00450000      NOTE '**************************************'
00460000      NOTE '*** PRIVTE AREA MAP FOR &ASID      ***'
00470000      NOTE '**************************************'
00480000      ASCBX PRIVMAP1 &ASID     PRINT TERMINAL
00490000      EVAL ASCBADDR+AC LE(4) &MEM
00500000      IF &LASTCC^=0 THEN DO
00510000        L ASCBADDR+AC% LE(8) &MEM C
00520000        END
00530000     EVAL ASCBADDR+B0 LE(4) &MEM
00540000     IF &LASTCC^=0 THEN DO
00550000       L ASCBADDR+B0% LE(8) &MEM C
00560000       END
00570000     EVAL ASCBADDR+6C% L(4) &MEM         /* GIVE ERROR MESSAGE FOR   */
00580000     IF &LASTCC=12 THEN DO               /* ASXB NOT AVAILABLE       */
00590000       SET &RCODE=4
00600000       GOTO EXIT
00610000       END
00620000     ELSE
00630000       EQ ASXBADDR ASCBADDR+6C% PTR &MEM LENGTH(4)
00640000     SET &TCBALPHA=&STR(A)
00650000     SET &LETTERS=&STR(ABCDEFGHIJKLMNOPQRSTUVWXYZ)
00660000     SET &CTR=1                         /* EQUATE TCB NAMES WITH    */
00670000     SET &CTA=A                         /* THOSE USED BY IPCS.      */
00680000     SET &CTB=1
00690000     SET &TCBCTR=&STR(&ASID&CTA&TCBALPHA)
00700000     SET &RBC=&CTA&TCBALPHA
00710000     EVAL ASXBADDR+4% LENGTH(4) &MEM
00720000     IF LASTCC=12 THEN DO
00730000       SET &RCODE=4
00740000       GOTO EXIT
00750000       END
00760000     ELSE
00770000       EVAL ASXBADDR+4 LENGTH(4) &MEM
00780000    SET &TCBADDR=&LASTCC
00790000    EQ TCBADDR ASXBADDR+4% PTR &MEM LENGTH(4)
00800000    DO WHILE &TCBADDR^=0
00810000      NOTE '**************************************'
00820000      NOTE '*** PRIVTE AREA MAP FOR TCB&TCBCTR ***'
00830000      NOTE '**************************************'
00840000      TCBX PRIVMAP2 TCB&TCBCTR PRINT TERMINAL
00850000      SET &CTR=&CTR+1
00860000      IF &CTR=26 THEN DO
00870000        SET &CTR=1
00880000        SET &CTA=&SUBSTR(&CTB:&CTB,LETTERS)
00890000        END
00900000      SET &TCBALPH=&SUBSTR(&CTR:&CTR,&LETTERS)
00910000      SET &TCBALPHA=&STR(&CTA&TCBALPH)
00920000      SET &TCBCTR=&STR(&ASID&TCBALPHA)
00930000      SET &RBC=&CTA&TCBALPH
00940000      EVAL TCBADDR+74% L(4) &MEM
00950000      IF &LASTCC=12 THEN DO
00960000        SET &RCODE=4
00970000        GOTO EXIT
00980000        END
00990000      ELSE
01000000        EVAL TCBADDR+74 L(4) &MEM
01010000      SET &TCBADDR=&LASTCC
01020000      EQ TCBADDR TCBADDR+74% PTR &MEM LENGTH(4)
01030000      END
01040000EXIT: EXIT
