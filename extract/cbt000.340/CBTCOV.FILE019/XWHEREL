00010001PROC     1 LOCATION DEBUG
00020000/*********************************************************************/
00030000/*       SCAN LPDE CHAIN FOR LOAD MODULE CONTAINING &LOCATION        */
00040000/*********************************************************************/
00050000IF       &DEBUG = DEBUG +
00060000THEN     CONTROL CONLIST LIST MSG PROMPT SYMLIST
00070000SET      &CVTLPDIA = 360N     /* CVT -> LINK PACK AREA DIRECTORY     */
00080000SET      &LPDECHN = 0N        /* LPDE -> NEXT LPDE                   */
00090000SET      &LPDENAME = 8N       /* LPDE NAME OF MODULE                 */
00100000SET      &LPDEATTR = 28N      /* LPDE ATTRIBUTE FLAGS                */
00110000SET      &LPDEMIN = X'04'     /* LPDE(LPDEATTR) MINOR LPDE FLAG      */
00120000SET      &LPDEXTLN = 32N      /* LPDE LENGTH OF MODULE               */
00130000SET      &LPDEXTAD = 36N      /* LPDE -> MODULE                      */
00140000EQUATE   NEXTLPDE CVT+&CVTLPDIA
00150003EVALUATE NEXTLPDE?
00160002IF       &LASTCC = 12 +
00170002THEN     DO
00180002         WRITE    LPDE STORAGE NOT AVAILABLE
00190002         EXIT     CODE(4)
00200002         END
00210000COMPARE  ADDRESS(NEXTLPDE) WITH(VALUE(X'00000000')) LENGTH(4)
00220000IF       &LASTCC ^= 0 /* NOT EQUAL? */ +
00230000THEN     SET &LPDE = VALID
00240000ELSE     SET &LPDE = INVALID
00250000SET      &FOUND = NO
00260000DO       WHILE    &LPDE = VALID && &FOUND = NO /* LPDE LOOP */
00270000         SET      &MAJORLPDE = NO
00280003         SET      &XLPDE = &STR(NEXTLPDE?)
00290000         IF       &DEBUG = DEBUG +
00300000         THEN     LIST &XLPDE STRUCTURE(LPDE)
00310000         COMPARE  ADDRESS(&XLPDE+&LPDEATTR) MASK(&LPDEMIN) +
00320000                  WITH(VALUE(&LPDEMIN)) LENGTH(1)
00330000         IF       &LASTCC ^= 0 /* NOT EQUAL? */ +
00340000         THEN     DO
00350000                  SET      &MAJORLPDE = YES
00360002                  EVALUATE &XLPDE+&LPDEXTAD LENGTH(4)
00370000                  SET      &START = &LASTCC
00380002                  EVALUATE &XLPDE+&LPDEXTLN LENGTH(4)
00390000                  SET      &SIZE = &LASTCC
00400000                  END
00410000         IF       &MAJORLPDE = YES && &START <= &LOCATION && &LOCATION <= &START+&SIZE +
00420000         THEN     DO      /* LOCATION DEFINITION */
00430000                  SET     &FOUND = YES
00440000                  LIST    &XLPDE+&LPDENAME CHARACTER LENGTH(8) +
00450000                          REMARK('MODULE NAME') +
00460000                          DISPLAY(NOMACHINE REMARK NOREQUEST STORAGE)
00470000                  LIST    &XLPDE+&LPDEXTAD POINTER LENGTH(4) +
00480000                          REMARK('MODULE ADDRESS') +
00490000                          DISPLAY(NOMACHINE REMARK NOREQUEST STORAGE)
00500000                  LIST    &XLPDE+&LPDEXTLN HEXADECIMAL LENGTH(4) +
00510000                          REMARK('MODULE LENGTH') +
00520000                          DISPLAY(NOMACHINE REMARK NOREQUEST STORAGE)
00530000                  END     /* LOCATION DEFINITION */
00540000         ELSE     DO      /* LPDE CHAIN */
00550000                  EQUATE  NEXTLPDE &XLPDE+&LPDECHN
00560000                  COMPARE ADDRESS(NEXTLPDE) +
00570000                          WITH(VALUE(X'00000000')) LENGTH(4)
00580000                  IF      &LASTCC = 0 /* EQUAL? */ +
00590000                  THEN    SET &LPDE = INVALID
00600000                  END     /* LPDE CHAIN */
00610000         END      /* LPDE LOOP */
00620000DROPSYM  NEXTLPDE
00630000IF       &FOUND = YES +
00640000THEN     EXIT     CODE(0)
00650000ELSE     EXIT     CODE(4)
