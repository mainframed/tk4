00010000PROC     0        DEBUG
00020000 
00030000/*********************************************************************/
00040000/*                   DUMP DATA SET MANAGEMENT                        */
00050000/* IPCS: STACK PSW, REGISTERS, AND SDWA/RTM2WA FOR SVC DUMPS,        */
00060000/*       SYSMDUMPS, AND SLIP DUMPS.                                  */
00070000/*********************************************************************/
00080000 
00090000IF       &DEBUG = DEBUG +
00100000THEN     CONTROL  ASIS   CONLIST   FLUSH   LIST   MSG   PROMPT   SYMLIST
00110000ELSE     CONTROL  ASIS NOCONLIST   FLUSH NOLIST   MSG   PROMPT NOSYMLIST
00120000 
00130000EVALDEF  CLIST(QUALIFICATION(QUAL))
00140000EVALUATE 4. HEADER LENGTH(1) HEXADECIMAL CLIST(STORAGE(PRDDUMPT))
00150000 
00160000IF       &PRDDUMPT = 80 +
00170000THEN     EXIT     CODE(0)  /* STAND ALONE DUMP */
00180000 
00190000IF       &PRDDUMPT = 40 | &PRDDUMPT = 20 +
00200000THEN     DO       /* SVC DUMP OR SYSMDUMP */
00210000 
00220000         EVALUATE 12C. HEADER LENGTH(4) HEXADECIMAL CLIST(STORAGE(PSW))
00230000         EVALUATE 13C. HEADER LENGTH(2) HEXADECIMAL CLIST(STORAGE(PRDSDWAO))
00240000 
00250000         IF       &SUBSTR(1,&PSW) < 8 +
00260000         THEN     DO       /* 24 BIT MODE */
00270000                  SET      &ADDRESSING = 24 BIT
00280000                  SET      &MODE = %
00290000                  END      /* 24 BIT MODE */
00300000         ELSE     DO       /* 31 BIT MODE */
00310000                  SET      &ADDRESSING = 31 BIT
00320000                  SET      &MODE =  ?
00330000                  IF       &SUBSTR(1,&PSW) = 8 THEN SET &PSW = 0&SUBSTR(2:8,&PSW)
00340000                  IF       &SUBSTR(1,&PSW) = 9 THEN SET &PSW = 1&SUBSTR(2:8,&PSW)
00350000                  IF       &SUBSTR(1,&PSW) = A THEN SET &PSW = 2&SUBSTR(2:8,&PSW)
00360000                  IF       &SUBSTR(1,&PSW) = B THEN SET &PSW = 3&SUBSTR(2:8,&PSW)
00370000                  IF       &SUBSTR(1,&PSW) = C THEN SET &PSW = 4&SUBSTR(2:8,&PSW)
00380000                  IF       &SUBSTR(1,&PSW) = D THEN SET &PSW = 5&SUBSTR(2:8,&PSW)
00390000                  IF       &SUBSTR(1,&PSW) = E THEN SET &PSW = 6&SUBSTR(2:8,&PSW)
00400000                  IF       &SUBSTR(1,&PSW) = F THEN SET &PSW = 7&SUBSTR(2:8,&PSW)
00410000                  END      /* 31 BIT MODE */
00420000 
00430000         STACK    &PSW.. &QUAL REMARK('PSW (&ADDRESSING)')
00440000         SET      &I = 0
00450000         DO       WHILE    &I <= 15
00460000                  STACK    &I.R&MODE REMARK('REGISTER &I (&ADDRESSING)')
00470000                  SET      &I = &I+1
00480000                  END
00490000         IF       &PRDSDWAO ^= 0 +
00500000         THEN     STACK    &PRDSDWAO.. HEADER REMARK('SDWA')
00510000         END      /* SVC DUMP OR SYSMDUMP */
00520000 
00530000IF       &PRDDUMPT = 10 +
00540000THEN     DO       /* SLIP DUMP */
00550000 
00560000         EQUATE   CVTSDBF  CVT+24C  POINTER
00570000         EQUATE   SDBF     CVTSDBF%
00580000 
00590000         EVALUATE SDBF+5C  LENGTH(4) HEXADECIMAL CLIST(STORAGE(PSW))
00600000         EVALUATE SDBF+4   LENGTH(4) HEXADECIMAL CLIST(STORAGE(TYPE))
00610000 
00620000         IF       &SUBSTR(1,&PSW) < 8 +
00630000         THEN     DO       /* 24 BIT MODE */
00640000                  SET      &ADDRESSING = 24 BIT
00650000                  SET      &MODE = %
00660000                  END      /* 24 BIT MODE */
00670000         ELSE     DO       /* 31 BIT MODE */
00680000                  SET      &ADDRESSING = 31 BIT
00690000                  SET      &MODE =  ?
00700000                  END      /* 31 BIT MODE */
00710000         STACK    SDBF+5C&MODE &QUAL REMARK('SLIP PSW (&ADDRESSING)')
00720000         SET      &I = 0
00730000         DO       WHILE    &I <= 15
00740000                  SET      &OFFSET = &I*4+20
00750000                  STACK    SDBF+&OFFSET.N&MODE &QUAL REMARK('SLIP REGISTER &I (&ADDRESSING)')
00760000                  SET      &I = &I+1
00770000                  END
00780000         IF       &TYPE = 1 +
00790000         THEN     STACK    SDBF+60  &QUAL REMARK('SLIP SDWA')
00800000         IF       &TYPE = 2 +
00810000         THEN     STACK    SDBF+60  &QUAL REMARK('SLIP RTM2WA')
00820000         END      /* SLIP DUMP */
00830000 
00840000EXIT     CODE(0)
