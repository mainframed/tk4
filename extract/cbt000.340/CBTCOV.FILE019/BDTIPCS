00010000PROC 0  DEBUG
00020000 
00030000 /* ************************************************************* */
00040000 /* THIS CLIST WAS PART OF THE MVSDIAG GROUP AND HAS BEEN        */
00050000 /* CHANGED TO INVOKE THE MVS/BDT PRDMP TCB EXIT.                */
00060000 /* ************************************************************* */
00070000 
00080000 GLOBAL &HEXVALUE
00090000 GLOBAL &VALUE
00100000    IF &DEBUG NE DEBUG THEN CONTROL MSG NOSYM NOCON NOLIST   PROMPT
00110000                       ELSE CONTROL MSG   SYM   CON   LIST   PROMPT
00120000    SET &RCODE=0
00130000    SET &PAD=&STR(000)
00140000START:                                                                 +
00150000    WRITE ENTER ASID (IN DECIMAL), OR DEPRESS ENTER OR X TO EXIT
00160000    WRITENR (DEFAULT IS CURRENT OR ASID(1)===>
00170000     READ &ASID
00180000    IF &ASID= X THEN GOTO EXIT
00190000    IF &ASID=   | +
00200000      &ASID=0 THEN DO                     /* TO LOOK AT.  IF HE ENTERS*/
00210000        EVAL 2. HEADER LENGTH(2)          /* ASID ONE BY DEFAULT.     */
00220000        SET &ASID=&LASTCC
00230000        IF &ASID=0 THEN  +
00240000          SET &ASID=1
00250000      END
00260000    ELSE
00270000      IF &LENGTH(&ASID)<3 THEN DO         /* ADJUST ASID SIZE         */
00280000        SET &FILL=&SUBSTR(1:3-&LENGTH(&ASID),&PAD)
00290000        SET &ASID=&STR(&FILL&ASID)
00300000        END
00310000    SET &MEM=&STR(ASID(&ASID))           /* CHECK TO SEE IF THIS      */
00320000    EQUATE ASVTADDR 4C.%+22C% PTR LE(4)  /* MEMORY IS HIGHER THAT THE */
00330000    EVAL ASVTADDR+204 LENGTH(4)          /* MAMIMUM USERS, AND IF SO  */
00340000    SET &ASVTMAXU=&LASTCC                /* TELL THE USER             */
00350000    IF &ASID>&ASVTMAXU THEN DO
00360000      WRITE ===> ERROR: &MEM IS GREATER THAN MAX USERS(&ASVTMAXU)
00370000      GOTO START
00380000      END
00390000    ELSE
00400000     SET &ASVTOFFS=&ASID*4              /* IS ASSIGNED, IF NOT, TELL */
00410000    COMPARE ADDR(ASVTADDR+20C+&ASVTOFFS.N)                             +
00420000    LENGTH(1) WITH(VALUE(X'80'))        /* TELL THE USER             */
00430000    IF &LASTCC=0 THEN DO
00440000      WRITE LASTCC=&LASTCC
00450000      L ASVTADDR+20C+&ASVTOFFS.N LEN(1)
00460000      WRITE ===> ERROR: &MEM IS NOT ASSIGNED
00470000      GOTO START
00480000    END
00490000      ELSE
00500000      EQ ASCBADDR ASVTADDR+20C+&ASVTOFFS.N%  /* EXAMINE  TCB'S       */
00510000      EVAL ASCBADDR+AC LE(4) &MEM            /* AND RB'S             */
00520000      IF &LASTCC^=0 THEN DO                  /* AND DISPLAY THEM     */
00530000        L ASCBADDR+AC% LE(8) &MEM C
00540000        END
00550000     EVAL ASCBADDR+B0 LE(4) &MEM
00560000     IF &LASTCC^=0 THEN DO
00570000       L ASCBADDR+B0% LE(8) &MEM C
00580000       END
00590000     EVAL ASCBADDR+6C% L(4) &MEM         /* GIVE ERROR MESSAGE FOR   */
00600000     IF &LASTCC=12 THEN DO               /* ASXB NOT AVAILABLE       */
00610000       SET &RCODE=4
00620000       GOTO EXIT
00630000       END
00640000     ELSE
00650000       EQ ASXBADDR ASCBADDR+6C% PTR &MEM LENGTH(4)
00660000     SET &TCBALPHA=&STR(A)
00670000     SET &LETTERS=&STR(ABCDEFGHIJKLMNOPQRSTUVWXYZ)
00680000     SET &CTR=1                         /* EQUATE TCB NAMES WITH    */
00690000     SET &CTA=A                         /* THOSE USED BY IPCS.      */
00700000     SET &CTB=1
00710000     SET &TCBCTR=&STR(&ASID&CTA&TCBALPHA)
00720000     SET &RBC=&CTA&TCBALPHA
00730000     EVAL ASXBADDR+4% LENGTH(4) &MEM
00740000     IF LASTCC=12 THEN DO
00750000       SET &RCODE=4
00760000       GOTO EXIT
00770000       END
00780000     ELSE
00790000       EVAL ASXBADDR+4 LENGTH(4) &MEM
00800000    SET &TCBADDR=&LASTCC
00810000    EQ TCBADDR ASXBADDR+4% PTR &MEM LENGTH(4)
00820000    DO WHILE &TCBADDR^=0
00830000      EVAL TCBADDR+14D LENGTH(3)
00840000      SET &CMP=&LASTCC
00850000      IF &CMP=0 THEN GOTO REGS
00860000      CONTROL CONLIST LIST SYMLIST
00870000      %HEX &CMP
00880000      SET &CMP=&HEXVALUE
00890000      %HEX &TCBADDR
00900000      SET &BDTTCB=&HEXVALUE
00910000      TCBEXIT BDTABPR &BDTTCB..
00920000      CONTROL NOCONLIST NOLIST NOSYMLIST
00930000REGS:                                                                  +
00940000      SET &RBERR=0
00950000      SET &RBCTR=&STR(001)
00960000      EVAL TCBADDR+0% L(4) &MEM
00970000      IF &LASTCC=12 THEN DO
00980000        SET &RCODE=4
00990000        SET &RBERR=1
01000000        END
01010000      ELSE
01020000        EVAL TCBADDR+0 L(4) &MEM
01030000      SET &RBADDR=&LASTCC
01040000      EQ RBADDR TCBADDR+0% PTR &MEM L(4)
01050000RBLOOP:                                                                +
01060000        SET &MODNAME=0
01070000        EVAL RBADDR-2 LEN(2)
01080000        SET &RBINTCOD=&LASTCC
01090000        %HEX &RBINTCOD
01100000        SET &RBINTCOD=&HEXVALUE
01110000        EQ &RBC&RBCTR&ASID RBADDR STR(RB) &MEM
01120000        SET &RBCTR=&RBCTR+1
01130000        IF &LENGTH(&RBCTR)<3 THEN DO
01140000          SET &FILL=&SUBSTR(1:3-&LENGTH(&RBCTR),&PAD)
01150000          SET &RBCTR=&STR(&FILL&RBCTR)
01160000        END
01170000        EVAL RBADDR+1C% L(4) &MEM
01180000        IF &LASTCC=12 THEN DO
01190000          SET &RCODE=4
01200000          GOTO RBEND
01210000          END
01220000        COMPARE ADDR(RBADDR+1C%+100)  LEN(4)                           +
01230000         WITH (VALUE(C'TCB ')) LEN(4)
01240000        IF &LASTCC NE 0 THEN DO
01250000          EVAL RBADDR+1C L(4) &MEM
01260000          SET &RBADDR=&LASTCC
01270000          EQ RBADDR RBADDR+1C% PTR &MEM LENGTH(4)
01280000          GOTO RBLOOP
01290000          END
01300000RBEND:                                                                 +
01310000      SET &CTR=&CTR+1
01320000      IF &CTR=26 THEN DO
01330000        SET &CTR=1
01340000        SET &CTA=&SUBSTR(&CTB:&CTB,LETTERS)
01350000        END
01360000      SET &TCBALPH=&SUBSTR(&CTR:&CTR,&LETTERS)
01370000      SET &TCBALPHA=&STR(&CTA&TCBALPH)
01380000      SET &TCBCTR=&STR(&ASID&TCBALPHA)
01390000      SET &RBC=&CTA&TCBALPH
01400000      EVAL TCBADDR+74% L(4) &MEM
01410000      IF &LASTCC=12 THEN DO
01420000        SET &RCODE=4
01430000        GOTO EXIT
01440000        END
01450000      ELSE
01460000        EVAL TCBADDR+74 L(4) &MEM
01470000      SET &TCBADDR=&LASTCC
01480000      EQ TCBADDR TCBADDR+74% PTR &MEM LENGTH(4)
01490000      END
01500000EXIT: SETD DISPLAY(SYMBOL)  NOPRINT
01510000    EXIT
