00010000PROC     0                      /* DUMP DATA SET ANALYSIS            */ +
00020000                                /*                                   */ +
00030000                  DEBUG         /*   LIST THE CLIST                  */ +
00040000                                /*                                   */ +
00050000                  OS()          /* XA | 370 - LEVEL OF IPCS          */ +
00060000                                /*                                   */ +
00070000                                /* DUMP DIRECTORY PARAMETERS         */ +
00080000                  NEW           /*   SCRATCH/ALLOCATE DUMP DIRECTORY */ +
00090000                  QUAL(AIPCS)   /*   HIGH-LEVEL DSNAME QUALIFIER     */ +
00100000                  INDEX(1)      /*   INDEX COMPONENT TRACKS          */ +
00110000                  DATA(10)      /*   DATA COMPONENT CYLINDERS        */ +
00120000                                /*                                   */ +
00130000                                /* IPCSDDIR PARAMETERS               */ +
00140000                  REUSE         /*   RESET DUMP DIRECTORY TO EMPTY   */ +
00150000                  NOREUSE       /*   DO NOT RESET DIRECTORY          */ +
00160000                  CONFIRM       /*   CONFIRM REUSE                   */ +
00170000                  NOCONFIRM     /*   DO NOT CONFIRM REUSE            */ +
00180000                                /*                                   */ +
00190000                                /* TSO TEST PARAMETER                */ +
00200000                  TSOTEST       /*   INVOKE TSO TEST COMMAND         */ +
00210000                                /*                                   */ +
00220000                                /* IPCS PARAMETERS                   */ +
00230000                  TASKLIB()     /*   IPCS TASKLIB                    */ +
00240000                  NOTASKLIB     /*   NO IPCS TASKLIB                 */ +
00250000                                /*                                   */ +
00260000                                /* ISPF PARAMETERS                   */ +
00270000                  PANEL()       /*   INITIAL PANEL NAME              */ +
00280000                  OPT()         /*   INITIAL PANEL OPTION            */ +
00290000                  CMD()         /*   INITIAL COMMAND                 */ +
00300000                  PGM()         /*   INITIAL PROGRAM NAME            */ +
00310000                  PARM()        /*   INITIAL PROGRAM PARM            */ +
00320000                  NEWAPPL()     /*   APPLICATION ID                  */ +
00330000                  TEST          /*   TEST MODE                       */ +
00340000                  TESTX         /*   EXTENDED TEST MODE              */ +
00350000                  TRACE         /*   TRACE MODE                      */ +
00360004                  TRACEX        /*   EXTENDED TRACE MODE             */ +
00370004                                /*                                   */ +
00380006                  J215          /*   JES3 SP 2.1.5 TASKLIB           */
00390000 
00400000/*********************************************************************/
00410000/*                   DUMP DATA SET MANAGEMENT                        */
00420000/* THIS CLIST ALLOWS THE USE OF IPCS IN AN ISPF ENVIRONMENT. ALL     */
00430000/* ISPF DATA SETS MUST BE ALLOCATED FIRST. THE CLIST ALLOCATES THE   */
00440000/* USER'S IPCS DUMP DIRECTORY (IT IS DEFINED AND INITIALIZED IF      */
00450000/* NECESSARY). IT THEN INVOKES ISPF.                                 */
00460000/*                                                                   */
00470000/* Douglas H. Adams                                                  */
00480000/* Information Systems Center                                        */
00490000/* Rockwell International Corporation                                */
00500000/* 2201 Seal Beach Boulevard                                         */
00510000/* P. O. Box 2515                                                    */
00520000/* Seal Beach, California 90740-1515                                 */
00530000/*                                                                   */
00540000/* (213) 594-2618                                                    */
00550000/*                                                                   */
00560000/*********************************************************************/
00570000 
00580000IF       &DEBUG = DEBUG +
00590000THEN     CONTROL  ASIS   CONLIST NOFLUSH   LIST   MSG   PROMPT   SYMLIST END(ENDO)
00600000ELSE     CONTROL  ASIS NOCONLIST NOFLUSH NOLIST   MSG   PROMPT NOSYMLIST END(ENDO)
00610000 
00620000CLRSCRN
00630000 
00640000WRITE               IIIIIIII    PPPPPPPP    CCCCCCCC    SSSSSSSS
00650000WRITE                  II       PP    PP    CC          SS
00660000WRITE                  II       PPPPPPPP    CC          SSSSSSSS
00670000WRITE                  II       PP          CC                SS
00680000WRITE               IIIIIIII    PP          CCCCCCCC    SSSSSSSS
00690000WRITE
00700000WRITE
00710000 
00720000IF       &SYSISPF = ACTIVE +
00730000THEN     DO
00740000         WRITE    ***  IPCS must be invoked before ISPF  ***
00750000         EXIT     CODE(16)
00760000         ENDO
00770000 
00780000XATST
00790000IF       &LASTCC = 0 +
00800000THEN     SET      &LEVEL = XA
00810000ELSE     SET      &LEVEL = 370
00820000 
00830000IF       &OS = NATIVE +
00840000THEN     SET      &OS = &LEVEL
00850000 
00860000IF       &OS = XA | &OS = 370 +
00870000THEN     WRITE    ***  Only MVS/&OS dumps can be processed  ***
00880000 
00890000DO       WHILE    &OS ^= XA && &OS ^= 370
00900000         WRITE    This is an MVS/&LEVEL system
00910007         WRITENR    ENTER TYPE OF DUMPS TO PROCESS ( (XA) OR 370) ===>
00920000         CONTROL  CAPS
00930000         READ     &OS
00940000         CONTROL  ASIS
00950000         IF       &OS = X +
00960000         THEN     SET      &OS = XA
00970000         IF       &OS = 3 | &OS = 37 +
00980000         THEN     SET      &OS = 370
00981007         IF       &OS = THEN SET &OS = XA  /* DEFAULT */
00990000         IF       &OS = END +
01000000         THEN     EXIT     CODE(0)
01010000         ENDO
01020000 
01030000IF       &OS = XA +
01040000THEN     SET      &DDIR = &SYSUID..XA
01050000ELSE     SET      &DDIR = &SYSUID
01060000 
01070000 
01080000IF       &PANEL = &STR() +
01090000THEN     SET      &PANEL = ISP@MSTR
01100000 
01110000IF       &QUAL ^= &STR() +
01120000THEN     SET      &QUAL = &QUAL..
01130000 
01140000IF       &SYSDSN('&QUAL.&DDIR..DEBUG') ^= OK +
01150000THEN     SET      &NEW = NEW
01160000 
01170000IF       &NEW = NEW +
01180000THEN     DO
01190000         IF       &SYSDSN('&QUAL.MODEL.DEBUG') ^= OK +
01200000         THEN     DO
01210000                  WRITE    *** IPCS model dump directory '&QUAL.MODEL.DEBUG' does not exist. ***
01220000                  WRITE    *** Contact IPCS or storage management system programmer. ***
01230000                  EXIT     CODE(20)
01240000                  ENDO
01250000         DELETE   '&QUAL.&DDIR..DEBUG'
01260000         DEFINE   CLUSTER (NAME('&QUAL.&DDIR..DEBUG')  +
01270000                           MODEL('&QUAL.MODEL.DEBUG')  +
01280000                           OWNER(&SYSUID))             +
01290000                  INDEX   (NAME('&QUAL.&DDIR..DEBUGI') +
01300000                           TRACKS(&INDEX)              +
01310000                           OWNER(&SYSUID))             +
01320000                  DATA    (NAME('&QUAL.&DDIR..DEBUGD') +
01330000                           CYLINDERS(&DATA)            +
01340000                           OWNER(&SYSUID))
01350000         ENDO
01360000 
01370000ATTN     %IPCATTN
01380000 
01390000ALLOCATE FILE(IPCSDDIR) DATASET('&QUAL.&DDIR..DEBUG') OLD REUSE
01400006IF       &J215 = J215 +
01410006THEN     SET      &JES3LINK = 'JES3.SP215.JES3LIB'
01420005ELSE     SET      &JES3LINK = &STR()
01430000IF       &NOTASKLIB = NOTASKLIB | &TASKLIB = &STR() +
01440005THEN     SET      &IPCLLIB = TASKLIB('AOST.MVS&OS..LOAD' &JES3LINK)
01450005ELSE     SET      &IPCLLIB = TASKLIB(&TASKLIB 'AOST.MVS&OS..LOAD' &JES3LINK)
01460000IF       &OS ^= &LEVEL +
01470000THEN     ALLOCATE FILE(IPCTLIB) DATASET('ATSO.IPCS&OS..LOAD') SHR REUSE
01480000 
01490000IF       &NEW = NEW | &REUSE = REUSE +
01500000THEN     IPCSDDIR '&QUAL.&DDIR..DEBUG' &REUSE &NOREUSE &CONFIRM &NOCONFIRM
01510000 
01520000ATTN     OFF
01530000CONTROL  MAIN
01540000ERROR    DO
01550000         WRITE    ***  IPCS ended code &LASTCC  ***
01560000         GOTO     CLEANUP
01570000         ENDO
01580000 
01590000IF       &OS = &LEVEL +
01600000THEN     DO
01610000         SET      &PREIPCS = &STR()
01620000         SET      &TESTIPCS = 'SYS1.LINKLIB(IPCS)'
01630000         ENDO
01640000ELSE     DO
01650000         SET      &PREIPCS = $C TASKLIB(IPCTLIB)
01660000         SET      &TESTIPCS = 'ATSO.IPCS&OS..LOAD(IPCS)'
01670000         ENDO
01680000 
01690000IF       &TSOTEST = &STR() +
01700000THEN     &PREIPCS IPCS NOPARM &IPCLLIB
01710000ELSE     DO
01720000         TEST     &TESTIPCS CP
01730000         &PREIPCS IPCS     NOPARM &IPCLLIB
01740000         TERMIN   GO
01750000         GO
01760000         ENDO
01770000 
01780001ISPSTART CMD(%IPCPARM &OS &NEW &REUSE &DEBUG) NEWAPPL(IPCS)
01790001ISPSTART PANEL(&PANEL) OPT(&OPT) CMD(&CMD) PGM(&PGM) PARM(&PARM) NEWAPPL(&NEWAPPL) &TEST &TESTX &TRACE &TRACEX
01800000 
01810000IF       &TSOTEST = &STR() +
01820000THEN     END      /* IPCS */
01830000ELSE     DO
01840000         TERMIN   END      /* IPCS */
01850000         END      /* IPCS */
01860000         TERMIN   END      /* TEST */
01870000         END      /* TEST */
01880000         ENDO
01890000 
01900000CLEANUP: +
01910000ERROR    OFF
01920001IF       &OS ^= &LEVEL +
01930001THEN     FREE     FILE(IPCTLIB)
01940000 
01950001WRITE    IPCS/&OS completed
01960000EXIT     CODE(0)
