*          DATA SET I38INIT    AT LEVEL 017 AS OF 15/04/82
         TITLE 'I38INIT -PLOTS INTERFACE ROUTN. FOR PAGEPLOT SYSTEM   '
***********************************************************************
*    NAME:        I38INIT (ENTRY NAME IS PLOTS)                       *
*                                                                     *
*    FUNCTION:                                                        *
*                 TO INITIALIZE OR REINITIALIZE THE PAGEPLOT          *
*                 SYSTEM FOR PROCESSING - FOR USE WITH IBM 3800.      *
*                                                                     *
*    NOTE:        THE OTHER INTERFACE ROUTINES WILL AUTOMATICALY      *
*                 INVOKE THIS ROUTINE IF IT HAS NOT BEEN CALLED       *
*                 DIRECTLY BY THE APPLICATION.                        *
*                                                                     *
*    PARAMETERS:                                                      *
*                 THE PARAMETERS ARE IGNORED, ALL INPUT COMES DIRECTLY*
*                 FROM  CURRENT CONTENTS OF THE PLTEXT EXTERNAL AREA  *
*                                                                     *
*    PROCESSING:                                                      *
*                 THE OUTPUT DCB IS INITIALIZED AND THE FILE OPENED   *
*                 CORE IS OBTAINED FOR THE INCORE IMAGE OF THE PLOT   *
*                 PAGE (WHICH IS FREED BY PLOT).                      *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN
PLOTS ASMENTRY SAVE=REUS,DSA=88
     STD       D0,D0SAVE
     LA        R11,PLTEXT          R11-> GLOBAL VARIABLES
     USING     @GLOBAL,R11
**** CALCULATE    @CHARW
     MVC       DBL,=X'4E00000080000000'  INIT TEMP
     L         R15,@PAGEX          R15 = PAGEWIDTH IN CHARS
     ST        R15,DBL+4                 SAVE IN RITE SIDE OF TEMP
     XI        DBL+4,X'80'
     LD        D0,DBL              D0  = VALU
     SD        D0,=X'4E00000080000000' D0= PAGE WIDTH IN INCHES
     SWR       D6,D6               D6  = 0
     LE        D6,@PAGEW
     DER       E6,E0
     STE       E6,@CHARW
**** CALCULATE    @POINTX
     LD        D4,=D'2'
     DDR       D4,D6
     STE       E4,@POINTX
****CALCULATE     @CHARX
     SWR       D6,D6               D6  = 0
     LE        D6,@PAGEW
     DER       E0,E6
     AE        E0,SMALVAX
     STE       E0,@CHARX
**** CALCULATE    @CHARH
     MVC       DBL,=X'4E00000080000000'  INIT TEMP
     L         R15,@PAGEY          R15 = PAGE-HEIGHT IN CHARS
     ST        R15,DBL+4                 SAVE IN RITE SIDE OF TEMP
     XI        DBL+4,X'80'
     LD        D0,DBL              D0  = VALU
     SD        D0,=X'4E00000080000000'
     SWR       D6,D6               D6  = 0
     LE        D6,@PAGEH
     DER       E6,E0
     STE       E6,@CHARH
****CALCULATE     @CHARY
     SWR       D6,D6               D6  = 0
     LE        D6,@PAGEH
     DER       E0,E6
     AE        E0,SMALVAY
     STE       E0,@CHARY
**** CALCULATE    @POINTY
     SWR       D6,D6
     LE        D6,@CHARH
     LD        D4,=D'3'
     DDR       D4,D6
     STE       E4,@POINTY
     LE        E0,=E'1'
     STE       E0,@FACTOR
     SER       E0,E0
     STE       E0,@X
     STE       E0,@Y
**** INITIALIZE LINE ERROR COUNTER
     SR        R2,R2               R2  = 0
     ST        R2,@CNTRL
**** CALCULATE    @CORE (@PAGEX * @PAGEY * 2)
     L         R3,@PAGEX           R3  = BYTES PER LINE
     M         R2,@PAGEY           R3  = BYTES/PAGE * LINES/PAGE
     SLL       R3,1                      MULTIPLY BY 2
     ST        R3,@CORE
     PRINT     GEN
     GETMAIN   EU,LV=(R3),A=PAGEC,SP=12
     PRINT     NOGEN
     L         R4,@PAGEC           R4 -> CHARACHTER PAGE
     SRL       R3,1                R3  = PAGE LENGTH
     AR        R4,R3
     ST        R4,@PAGEB           R5    STORE->BIT MAP PAGE
     LA        R9,@DCB             R9 -> DCB
     USING     IHADCB,R9
     MVC       DCBDDNAM,@DDNAME          SET DDNAME
     L         R15,@PAGEX          R15 = PAGE WIDTH
     LA        R15,1(R15)                ADD FOR ASA CONTROL
     STH       R15,DCBLRECL              SET LRECL FOR PRINT
*
     PRINT     GEN
     OPEN      ((R9),(OUTPUT))
     PRINT     NOGEN
     IF        TM,DCBOFLGS,X'10',O ??    IF OPEN SUCESSFUL
       MVI     @OPEN,C'1'                SET FLAG OK
     ELSE
       MVI     @OPEN,C'0'                SET FLAG BAD
     ENDIF
     ASMEXIT   RC=0
SMALVAX  DC    X'40000100'
SMALVAY  DC    X'40001000'
         LTORG
         EJECT
     ENTRY     PLTEXT
PLTEXT   DS    0D                     USE @GLOBAL COPY TEXT FOR MAPPING
         DC    CL8'@GLOBAL'
DDNAME   DC    CL8'IBM3800'
PAGEW    DC    E'10.0'
PAGEH    DC    E'7.50'
PAGEX    DC    F'150'
PAGEY    DC    F'90'
XINC     DC    E'.033333333333'
YINC     DC    E'.027777777778'
*
XORG     DC    E'0'
YORG     DC    E'0'
XLAST    DC    E'0'
YLAST    DC    E'0'
SXLAST   DC    E'0'
SYLAST   DC    E'0'
ERRFLGS  DC    F'0'
CNTRC    DC    F'0'
*
CHARW    DC    E'0'
CHARH    DC    E'0'
CHARX    DC    E'0'
CHARY    DC    E'0'
POINTX   DC    E'0'
POINTY   DC    E'0'
FREE     DC    E'0'
CORE     DC    F'0'
PAGEC    DC    F'0'
PAGEB    DC    F'0'
         DC    CL4' '
FACTOR   DC    E'1.0'
X        DC    E'0'
Y        DC    E'0'
*
TR0      DS    0CL256
         DC    X'53545556575859636465666768690000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'40000000000000000000004B4C4D4E4F'
         DC    X'50000000000000000000005B5C5D5E5F'
         DC    X'60610000000000000000006B6C6D6E6F'
         DC    X'000000000000000000007A7B7C7D7E7F'
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000'
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000'
         DC    X'0000E2E3E4E5E6E7E8E9000000000000'
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000'
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000'
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000'
         DC    X'0000E2E3E4E5E6E7E8E9000000000000'
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000'
TR90     DS    0CL256
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'00000000000000000000000000000000'
         DC    X'40000000000000000000004B4C4D4E4F'
         DC    X'50000000000000000000005B5C5D5E5F'
         DC    X'60610000000000000000006B6C6D6E6F'
         DC    X'000000000000000000007A7B7C7D7E7F'
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000'
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000'
         DC    X'0000E2E3E4E5E6E7E8E9000000000000'
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000'
         DC    X'00C1C2C3C4C5C6C7C8C9000000000000'
         DC    X'00D1D2D3D4D5D6D7D8D9000000000000'
         DC    X'0000E2E3E4E5E6E7E8E9000000000000'
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000'
MASK     DS    0CL256
         DC    X'FF'
         DC    255XL1'00'
DCB      DCB   DDNAME=IBM3800,DSORG=PS,LRECL=0,MACRF=PL,RECFM=FA
DSA      DSECT
D0SAVE   DS    D
DBL      DS    D
DSAEND   EQU   *
         EJECT
         COPY    PLTGLOBL
         EJECT
     DCBD      DSORG=PS,DEVD=DA
         END   PLOTS
