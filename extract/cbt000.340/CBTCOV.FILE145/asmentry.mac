         MACRO
&NAME ASMENTRY &BASE=R10,                   BASE REGISTER              X
               &SAVE=NO,                    STORAGE AREA TYPE          X
               &DSA=72                      STORAGE AREA LENGTH
.*       THE ASMENTRY MACRO IS USED TO ESTABLISH A PROGRAMMING
.*       AND PROCESSING ENVIRONMENT.  THE GENERATED CODE SAVES
.*       REGISTERS, SETS UP REGISTER EQUATES, AND ESTABLISHES A
.*       BASE REGISTER.  OPTIONALLY IT WILL SET UP A WORKAREA WHICH
.*       IS REUSABLE BUT STATIC (CSECT) OR REENTRANT (GETMAIN).
.*       THE FIRST ITEM IN THE WORKAREA IS A SAVE AREA WHICH IS
.*       CHAINED TO ALLOW SUBROUTINE CALLS.  PROGRAM VARIABLES
.*       MAY OCCUR IN THE WORKAREA BY USING THE DSA DSECT AND
.*       THE DSA OPTION.  THE ASMEXIT MACRO IS USED TO EXIT FROM
.*       AN ASMENTRY ENVIRONMENT.
.*       ________________________________________________________
.*       ×        ×          ×                                  ×
.*       × SYMBOL × ASMENTRY × <SAVE=X><,DSA=X><,BASE=X>        ×
.*       ×        ×          ×                                  ×
.*       ×________×__________×__________________________________×
.*
.*       SYMBOL=
.*             THE 1 TO 7 CHARACTER NAME OF THE MODULE
.*       SAVE=
.*             THE WORKAREA TYPE, AND SAVE AREA CHAIN TRIGGER
.*             <NO>  - NO WUBROUTINE CALLS ARE ALLOWED (DEFAULT)
.*             <REUS>- A CSECT WILL BE USED TO CONTAIN THE SAVEAREA
.*                   AND USER WORKAREA, ADDRESSED USING DSA DSECT WHICH
.*                   IN TURN IS BASED ON R13.  SEE EXAMPLE.
.*             <RENT>- A GETMAIN WILL BE USED TO OBTAIN THE SAVEAREA
.*                   AND USER WORKAREA, ADDRESSED USING DSA DSECT WHICH
.*                   IN TURN IS BASED ON R13.  SEE EXAMPLE.
.*       DSA=
.*             THE SIZE OF THE WORKAREA TO OBTAIN.  THIS MUST BE CODED
.*             AS IN THE EXAMPLE.
.*       BASE=
.*             THE BASE REGISTER (R4-R12) TO BE USED (DEFAULT IS R10)
.*
.*       EXAMPLES:
.*
.* T1    ASMENTRY
.* T2    ASMENTRY SAVE=REUS
.* T3    ASMENTRY SAVE=REUS,DSA=DSALEN
.* T4    ASMENTRY SAVE=RENT
.* T5    ASMENTRY SAVE=RENT,DSA=DSALEN
.* T6    ASMENTRY SAVE=REUS,DSA=256,BASE=R12
.*
         LCLA  &NAMLEN,&CLEN
         LCLC  &CNAME
         GBLC  &ASMETYP,&ASMELEN
.*
.* VALIDATE PARMS
.*
         AIF   ('&NAME' NE '').L010
         MNOTE 12,'** MODULE NAME MISSING'
         MEXIT
.L010    ANOP
&NAMLEN  SETA  K'&NAME
         AIF   (&NAMLEN LE 7).L020
         MNOTE 12,'** MODULE NAME CANNOT EXCEED 7 CHARACTERS'
         MEXIT
.L020    ANOP
         AIF   ('&BASE' GE 'R4' AND '&BASE' LE 'R12').L030
         MNOTE 12,'** BASE REGISTER MUST BE IN RANGE R4-R12'
         MEXIT
.L030    ANOP
&CLEN    SETA  7-&NAMLEN
         AIF   ('&SAVE' NE 'REUS').L050
&CNAME   SETC  '&NAME.2'
&CNAME   CSECT                              STATIC STORAGE AREA
         AIF   (T'&DSA NE 'N').L044
         AIF   ('&DSA' EQ '72').L040
         MNOTE *,'****************************************************'
         MNOTE *,'*                                                  *'
         MNOTE *,'* WARNING - DSA MUST NOT EXCEED &DSA. BYTES'
         MNOTE *,'*                                                  *'
         MNOTE *,'****************************************************'
.L040    ANOP
         ORG   *+&DSA                       RESERVE DSA BYTES
         AGO   .L060
.L044    ANOP
         MNOTE *,'*********************************************'
         MNOTE *,'*                                           *'
         MNOTE *,'* 4096 BYTES IS AVAILABLE FOR THE DSA DSECT *'
         MNOTE *,'*                                           *'
         MNOTE *,'*********************************************'
         ORG   *+4096                       RESERVE FOR DSA
         AGO   .L060
.L050    ANOP
         AIF   ('&SAVE' EQ 'RENT').L060
         AIF   ('&SAVE' EQ 'NO').L060
         MNOTE 12,'** SAVE PARM MUST BE ONE OF RENT, REUS, OR NO'
         MEXIT
.L060    ANOP
.*
.* GENERATE STANDARD HEADER
.*
&ASMETYP SETC  '&SAVE'
&CNAME   SETC  '&NAME.1'
&CNAME   CSECT
         PLIREQU
         AIF   (&CLEN EQ 0).L070
         DC    CL&CLEN.' '
.L070    ANOP
         DC    C'&NAME'
         DC    AL1(&NAMLEN.)
         ENTRY &NAME                        ESTABLISH ENTRY POINT
&NAME    EQU   *
         STM   R14,R12,12(R13)              SAVE CALLERS REGISTERS
         BALR  &BASE,0                      ESTABLISH BASE REGISTER
         USING *,&BASE                      ESTABLISH ADDRESSAVILITY
         AIF   ('&SAVE' NE 'NO').L080
.*
.* CASE: SAVE=NO
.*
         MNOTE *,'***********************************************'
         MNOTE *,'                                              *'
         MNOTE *,'NO SUBROUTINE CALLS ALLOWED FROM THIS ROUTINE *'
         MNOTE *,'                                              *'
         MNOTE *,'***********************************************'
         MEXIT
.L080    ANOP
         AIF   ('&SAVE' NE 'REUS').L090
         L     R1,=V(&NAME.2)          R1 ->STATIC STORAGE CSECT
         AGO   .L100
.L090    ANOP
&ASMELEN SETC  '8*((&DSA.+7)/8)'
         GETMAIN R,LV=&ASMELEN
.L100    ANOP
.*
.* GENERATE STANDARD TRAILER WHEN SAVEAREA IN USE
.*
         ST    R13,4(R1)                    BACK CHAIN
         ST    R1,8(R13)                    FORWARD CHAIN
         LR    R13,R1                  R13->DSA
         USING DSA,R13
         L     R1,4(R13)               R1 ->OLD SAVE AREA
         AIF   ('&SAVE' NE 'RENT').L110
         L     R0,20(R1)               R0   RESTORED TO ENTRY VALUE
.L110    ANOP
         L     R1,24(R1)               R1   RESTORED TO ENTRY VALUE
DSA      DSECT
         DS    CL72                         SAVE AREA
&CNAME   CSECT
         MEND
