         MACRO
&NAME    IF
.**********************************************************************
.*                                                                    *
.*   NAME:               IF                                           *
.*                                                                    *
.*   FUNCTION:                                                        *
.*       TO IMPLEMENT THE IF STATEMENT IN ASSEMBLER                   *
.*       IN CONJUNCTION WITH THE ELSE & ENDIF MACROS                  *
.*                                                                    *
.*   PARAMETERS:    (1)  ASSEMBLER INSTRUCTION                        *
.*                  (2)  FIRST OPERAND OF INSTRUCTION                 *
.*                  (3)  SECOND OPERAND OF INSTRUCTION                *
.*                  (4)  COMPARISON OPERATOR                          *
.*                                                                    *
.*   USAGE:                                                           *
.*       THE COMPARISON SPECIFIED IS EXECUTED AND, IF TRUE, THE CODE  *
.*       IMMEDIATLEY FOLLOWING IS EXECUTED. OTHERWISE, THE CODE AFTER *
.*       EITHER THE ELSE CLAUSE (IF PRESENT) OR THE ENDIF STATMENT    *
.*       IS EXECUTED.                                                 *
.*                                                                    *
.*   EXAMPLE:                                                         *
.*       IF  CLI,BYTE,C'X',E                                          *
.*          (CODE TO EXECUTE IF BYTE='X')                             *
.*       ELSE                                                         *
.*          (CODE TO EXECUTE OTHERWISE)                               *
.*       ENDIF                                                        *
.*                                                                    *
.**********************************************************************
         GBLA  &KFQNIV,&KFQSEQ(20)
         GBLC  &KFQTYP(20),&KFQEND(20)
         LCLC  &BCOND
         LCLA  &ATIM,&AINX
         AIF   (N'&SYSLIST EQ 4).ALLOP    FOUR OPERANDS  ?
         DIAGNOS 10                       NO
         MEXIT
.ALLOP   ANOP
&KFQNIV  SETA  &KFQNIV+1       SET DEPTH OF STRUCTURE
&KFQTYP(&KFQNIV)  SETC  'IF'   IND. STRUCTURE TYPE
         AIF   ('&SYSLIST(4)'(1,1) EQ 'N').BC
&BCOND   SETC  'N'.'&SYSLIST(4)'
         AGO   .BGEN
.BC      ANOP  ,
&BCOND   SETC  '&SYSLIST(4)'(2,K'&SYSLIST(4)-1)
.BGEN    ANOP
&KFQSEQ(&KFQNIV) SETA 1+&KFQSEQ(&KFQNIV)
&KFQEND(&KFQNIV) SETC 'ZI&KFQNIV.E&KFQSEQ(&KFQNIV)'
&ATIM    SETA  N'&SYSLIST(3)           NUMBER OF LOOPS
         AIF   (&ATIM GT 1).LLIST
&NAME    &SYSLIST(1) &SYSLIST(2),&SYSLIST(3)
         B&BCOND ZI&KFQNIV.L&KFQSEQ(&KFQNIV)
         MEXIT
.LLIST   ANOP
.******************************************************
.* GENERATE ADDITIONAL BRANCHES IF AN OR IS SPECIFIED *
.******************************************************
&AINX    SETA  1                       OPERAND INDEX
.LLOOP   AIF   (&AINX GE &ATIM).ELOOP
         &SYSLIST(1) &SYSLIST(2),&SYSLIST(3,&AINX)
         B&SYSLIST(4) ZI&KFQNIV.D&KFQSEQ(&KFQNIV)
&AINX    SETA  &AINX+1                 NEXT OPERAND
         AGO   .LLOOP
.ELOOP   &SYSLIST(1) &SYSLIST(2),&SYSLIST(3,&AINX)
         B&BCOND ZI&KFQNIV.L&KFQSEQ(&KFQNIV)
ZI&KFQNIV.D&KFQSEQ(&KFQNIV) DS  0H
         MEND
