*          DATA SET PLTSYMB    AT LEVEL 029 AS OF 15/04/82
         TITLE 'PLTSYMB - SYMBOL INTERFACE ROUTINE FOR PAGEPLOT SYSTEM'
***********************************************************************
*                                                                     *
*    NAME:     PLTSYMB (ENTRY NAME IS SYMBOL)                         *
*                                                                     *
*    FUNCTION:                                                        *
*              TO PROVIDE ANNOTATION SUCH AS TITLES AND CAPTIONS      *
*                                                                     *
*    PARAMETERS:                                                      *
*              XPAGE: COORDINATES ,IN INCHES , OF LOWER-LEFT CORNER   *
*              YPAGE:  OF THE FIRST CHARACTER                         *
*                                                                     *
*              HEIGHT:HEIGHT,IN INCHES ,OF CHARACTERS TO BE PLOTTED   *
*                                                                     *
*              IBCD:  TEXT TO BE PRODUCED IN INTERNAL REPRESENTATION  *
*                                                                     *
*              ANGLE: ANGLE FROM X-AXIS IF = 0 CHARACTER IS RIGHT     *
*                     SIDE UP AND PARALLEL TO X-AXIS                  *
*                                                                     *
*              +NCHAR/-ICODE: NUMBER OF CHARACTERS TO BE PRINTED OR   *
*                     STATUS OF PEN DURING MOVE TO XPAGE,YPAGE        *
*                                                                     *
*                                                                     *
*    OUTPUT:                                                          *
*              TEXT IS MERGED WITH 'PLOT' BIT MAP BY PLTPAGE BEFORE   *
*              PRINTING                                               *
*                                                                     *
*    PROCESSING:                                                      *
*              IF THE PRINT FILE IS NOT OPEN, PLOTS WILL BE CALLED    *
*              TO ESTABLISH THE ENVIRONMENT.INCREMENTS EQUAL TO       *
*              CHARACTER HEIGHT (OR DEFAULT MINIMUM CHARACTER WIDTH)  *
*              ARE ADDED TO X AND Y COORDINATES AND BINARY            *
*              REPRESENTATIONS OF SYMBOLS ARE SET ON.                 *
*                                                                     *
***********************************************************************
         EJECT
         PRINT NOGEN
SYMBOL ASMENTRY SAVE=REUS,DSA=92
*
     L         R11,=V(PLTEXT)
     USING     @GLOBAL,R11         R11-> GLOBAL VARIABLES
     LM        R2,R7,0(R1)
*
*              R2 ->  XPAGE
*              R3 ->  YPAGE
*              R4 ->  HEIGHT
*              R5 ->  IBCD
*              R6 ->  ANGLE
*              R7 ->  NCHAR/ICODE
*
     IF        CLI,@OPEN,C'1',NE   ??    IF NO ENVIRONMENT
       CALL    PLOTS
       IF      CLI,@OPEN,C'1',NE   ??    IF OPEN FAILED
         B     EXIT
       ENDIF
     ENDIF
*
     L         R7,0(R7)            R7  = +NCHAR OR -ICODE
     LE        E0,0(R4)            E0  = HEIGHT/WIDTH OF SYMBOLS
     ME        E0,@FACTOR
     STE       E0,SYMSIZE
     LE        E0,0(R2)            E0  = X
     LE        E2,0(R3)            E2  = Y
     ME        E0,@FACTOR          E0  = X * CURRENT FACTOR
     ME        E2,@FACTOR          E2
     AE        E0,@XORG            E0  = X IN INCHES ON PAPER
     AE        E2,@YORG            E2  = Y IN INCHES ON PAPER
     IF        LTER,E0,E0,M        ??    IF X PAGE VALUE NEGATIVE
       SWR     D0,D0               D0  = 0
       LA      R0,47
       LA      R1,=CL47'NOTE - NEGATIVE SYMBOL CO-ORDINATE SET TO ZERO'
       CALL    PLTMSG
     ENDIF
     IF        LTER,E2,E2,M        ??    IF Y PAGE VALUE NEGATIVE
       SWR     D2,D2               D2  = 0
       LA      R0,47
       LA      R1,=CL47'NOTE - NEGATIVE SYMBOL CO-ORDINATE SET TO ZERO'
       CALL    PLTMSG
     ENDIF
*
     MVI       SWITCH,X'00'              CLEAR ERROR FLAG
     MVI       @DATA,C'1'                INDICATE PRESENCE OF DATA
     BAL       R14,PRINT                 GO PRINT CHARACTERS
EXIT IF        CLI,SWITCH,X'FF',E  ??    IF LINE OUTSIDE PAGE
       LA      R0,44
       LA      R1,=CL44'NOTE - CHARACTERS EXTEND BEYOND EDGE OF PAGE'
       CALL    PLTMSG
     ELSE
       STE     E0,@SXLAST
       STE     E2,@SYLAST
     ENDIF
     ASMEXIT   RC=0
     EJECT
*
*   THIS SUBROUTINE DETERMINES THE ANGLE OF SYMBOLS AND
*   ACCORDINGLY STEPS ALONG THE X OR Y AXIS BY INCREMENTS
*   EQUAL TO THE HEIGHT OF THE CHARACTERS
*               E0  = X COORDINATE
*               E2  = Y COORDINATE
*               R5 -> CHARACTER STRING
*               R6 -> ANGLE
*               R7  = LENGTH
*
PRINT EQU      *
     CASE      LTR,R7,R7,Z         ??    IF LENGTH = 0
       LA      R7,1                         LENGTH = 1
*
*         - ICODE  PROCESSING
*
     WHEN      C,R7,=F'-1',E       ??    IF -ICODE EQUAL -1
       BAL     R15,CSET
       B       EXIT
     WHEN      C,R7,=F'-2',E       ??    IF -ICODE EQUAL -2
       MVC     XVAL,@SXLAST              SET PLOT POINTER TO LAST
       MVC     YVAL,@SYLAST                SYMBOL POSITION
       CALL    PLOT,(XVAL,YVAL,THREE)
       STE     E0,XVAL             XVAL = E0
       STE     E2,YVAL             YVAL = E2
       CALL    PLOT,(XVAL,YVAL,TWO)
       L       R7,=F'-1'           R7   = -1
       BAL     R15,CSET
       B       EXIT
     ENDCASE
*
*       + NCHAR PROCESSING
*
     SR        R2,R2               R2  = 0
     LE        E6,0(R6)            E6  = ANGLE
     CASE      LTER,E6,E6,Z        ??    IF ANGLE EQUALS 0
       LE      E4,SYMSIZE          E4  = WIDTH OF SYMBOL
       MVI     ROTATE,X'00'              SET ANGLE FLAG OFF
       IF      CE,E4,@CHARW,NH     ??    IF SYMBOL SMALLER THAN MIN
         LE    E4,@CHARW                 THEN USE MINIMUM WIDTH
       ENDIF
       LOOP    TIMES=(R7)                (ALONG X AXIS)
         BAL   R15,CSET
         AER   E0,E4                     ADD INCREMENT
         LA    R2,1(R2)            R2  = R2 + 1
       ENDLOOP
       BR      R14
     WHEN      CE,E6,=E'-90',E     ??    IF ANGLE EQUAL -90
       LE      E4,SYMSIZE          E4  = WIDTH OF SYMBOL
       MVI     ROTATE,X'FF'              SET ANGLE FLAG ON
       IF      CE,E4,@CHARH,NH     ??    IF SYMBOL SMALLER THAN MIN
         LE    E4,@CHARH                 THEN USE MINIMUM
       ENDIF
       LOOP    TIMES=(R7)                (ALONG Y AXIS)
         BAL   R15,CSET
         SER   E2,E4                     SUBTRACT DECREMENT
         LA    R2,1(R2)             R2  = R2 + 1
       ENDLOOP
       BR      R14
     WHEN      ELSE                ??    IF ELSE
       LA      R0,22                     (ANGLE VALUE UNSUPORTED)
       LA      R1,=CL22'UNSUPORTED ANGLE VALUE'
       CALL    PLTMSG
       B       EXIT
     ENDCASE
     EJECT
CSET EQU       *
*
*    THIS SUBROUTINE PRINTS A CHARACTER
*     AT THE X AND Y COORDINATES
*
*    PARAMETERS:
*              R15 - RETURN ADDRESS
*              E0  - @X VALUE
*              E2  - @Y VALUE
*              R4 -> HEIGHT
*              R5 -> TEXT OR SPECIAL CHARACTERS
*              R6 -> ANGLE
*              R7  = NUMBER OF CHARACTERS(OR SPECIAL CASE)
*
     IF        CE,E0,@PAGEW,H      ??    IF OUTSIDE OF PAGE
       MVI     SWITCH,X'FF'              SET ERROR FLAG
       BR      R15                       RETURN
     ENDIF
*
*    CONVERT X VALUE TO FIXED POINT
*
     SWR       D6,D6               D6  = ZERO
     LER       E6,E0               E6    X VALUE
     ME        E6,@CHARX           E6  = X VALUE * CHARACTERS PER INCH
     AW        D6,=X'4E00000000000000'   ADD FUDGE
     STD       D6,DOUBLE                 SAVE IN TEMP
     L         R3,DOUBLE+4         R3  = RITE SIDE OF TEMP
*
     IF        CE,E2,@PAGEH,H      ??    IF OUTSIDE OF PAGE
       MVI     SWITCH,X'FF'
       BR      R15                       RETURN
     ENDIF
*
*    CONVERT Y VALUE TO FIXED POINT
*
     SWR       D6,D6               D6  = ZERO
     LER       E6,E2               E6  = Y VALUE
     ME        E6,@CHARY           E6  = Y VALUE * LINES PER INCH
     AW        D6,=X'4E00000000000000'   ADD FUDGE
     STD       D6,DOUBLE
     L         R9,DOUBLE+4         R9  = Y VALUE IN LINES
     M         R8,@PAGEX           R8  = R9 * CHARS PER LINE
*
     A         R3,@PAGEC           R3  = X VALUE + ADDRESS OF BIT MAP
     AR        R3,R9               R3  = (BIT MAP + X ) + Y
     CASE      LTR,R7,R7,P      ??     IF NCHAR VALUE (POSITIVE)
       LA      R8,0(R5,R2)         R8  = TEXT + DISPLACEMENT
       MVC     0(1,R3),0(R8)           SET BIT REPRESENTATION
       IF      CLI,ROTATE,X'00',E ??   IF ANGLE 0
         TR    0(1,R3),@TR0            TRANSLATE FROM HORIZ. TABLE
       ELSE                     ??     IF ANGLE -90
         TR    0(1,R3),@TR90           TRANSLATE FROM VERTICAL TABLE
       ENDIF
     WHEN      C,R7,=F'-1',E    ??     IF ICODE VALUE -1
       L       R5,0(R5)
       ST      R5,DOUBLE               STORE IN TEMP
       MVC     0(1,R3),DOUBLE          MOVE TO BIT MAP
       NI      0(R3),X'0F'             1ST HALF BITE = 0  FOR TRANS.
       TR      0(1,R3),@TR0            TRANSLATE SPECIAL CHARACTER
     ENDCASE
     BR        R15               R15   RETURN
     EJECT
XVAL     DC    E'0'
YVAL     DC    E'0'
TWO      DC    F'2'
THREE    DC    F'3'
         DS    0F
         LTORG
DSA      DSECT
*
*  DYNAMIC AREAS FOR SYMBOL
*
SWITCH   DS    CL1
ROTATE   DS    CL1
DOUBLE   DS    D
SYMSIZE  DS    E
DSAEND   EQU   *
         EJECT
         COPY PLTGLOBL
         END   SYMBOL
