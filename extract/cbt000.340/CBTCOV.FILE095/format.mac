FORMAT   TITLE 'QUEUE COMMAND - JQE AND JOE FORMAT ROUTINES'      ONL01
FORMAT   QSTART ,                  START FORMAT CSECT ASSEMBLY    ONL01
***********************************************************************
* RNB CHANGES:                                                        *
*      (1) RNB17 - WHEN FORMATTING JOES, CHECK FOR JOE ON PSO AND     *
*                  INDICATE 'EXT-WTR' IF SO. ALSO, DON'T INDICATE ON  *
*                  ON PRINT/PUNCH UNLESS SHOWS ACTIVE IN JOEFLAG1.    *
*                  ALSO, FIX BUG IN GETTING TO CHECKPOINT JOE FOR     *
*                  RECORDS LEFT, AND FIX RECORDS LEFT FOR SP2.        *
*                  ALSO, IF JOE NOT BUSY, BUT CHKPT JOE VALID, PRINT  *
*                  NUMBER OF RECORDS LEFT, NOT TOTAL RECORDS.         *
*                  08 OCT 82 - FIX FOR REMOTE LINECNT NOT DECREMENTING*
*      (2) RNB18 - DISTINGUISH BETWEEN JOES WITH REMOTE ROUTING AND   *
*                  THOSE WITH SPECIAL LOCAL ROUTING (DEFINED BY DESTID*
*                  STATEMENTS WITH DEST=UNNN).                        *
*      (3) RNB19 - WHEN LISTING JQE'S, DON'T ASSUME INPUT QUEUE, BUT  *
*                  USE THE JQETYPE INSTEAD. ALSO, SPECIALLY HANDLE    *
*                  CONVERSION AND DUMP QUEUES, AND AWAITING OUTPUT.   *
*      (4) RNB20 - WHEN LISTING THINGS, DISTINGUISH BETWEEN NORMAL    *
*                  HOLD, HOLD ALL, AND DUPLICATE HOLD. ALSO, FOR      *
*                  JOES, INDICATE SELECT=NO IF APPLICABLE.            *
*      (5) RNB21 - FIX SETDEVIC SUBROUTINE FOR SP2.                   *
*      (6) RNB25 - ALLOW 'COUNT' PARM TO HO TO INDICATE TOTAL LINE    *
*                  COUNT DESIRED FOR JOBS ON HELD OUTPUT QUEUE        *
*      (7) RNB28 - FIX FOR REMOTE PRINTER LINECOUNTS.                 *
***********************************************************************
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA
         L     R10,QVDSPL     LOAD BASE REG
         USING JQE,R9         BASE REG FOR JQE DSECT
         USING JOE,R8         BASE REG FOR JOE DSECT
         USING WORK,R13       BASE FOR LOCAL WORK AREA
***********************************************************************
*                                                                     *
*   INPUT TO THIS MODULE -                                            *
*     R1 = 0 INDICATES PRINT JQE                                      *
*     R1 = 4 INDICATES PRINT JOE                                      *
*     R9 CONTAINS JQE ADDRESS                                         *
*     R8 CONTAINS JOE ADDRESS                                         *
*                                                                     *
***********************************************************************
*                                                                     *
*   BRANCH TO PROPER ROUTINE                                          *
*                                                                     *
***********************************************************************
         MVC   FCLEAR,=CL80' ' CLEAR THE PRINT AREA
         MVC   FQUEUE,QCLASS  CLASS NAME
         MVC   QDHLINE,HEADING REPORT HEADING
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    NOTBUSY        YES. SKIP.
*        CLC   =X'01000100',JQEPRTRT IS THE PRINT/PUNCH FOR LOCAL?
*        BE    LOCAL          YES. SKIP THIS ROUTINE.
*        MVC   FREMOTE,=C'RJE' INDICATE THIS JOB IS REMOTE
         TM    JQEFLAG1,JQE1BUSY IS THE JOB EXECUTING?
         BZ    NOTBUSY        NO. SKIP THIS ROUTINE.
         IC    R15,JQEFLAG1   GET SYSTEM NUMBER
         N     R15,=F'7'      ZERO OUT UNWANTED BITS
         SLL   R15,3          MULTIPLY BY 8
         LA    R15,QSYSID(R15) OBTAIN SYSTEM ID
         MVC   FSYSID,0(R15)  MOVE SYSTEM ID TO DISPLAY
NOTBUSY  CLI   QCLASS,24           SKIP SERVICE ROUTINE           CL005
         BH    CHEKJQE              IF UNDEFINED                  CL005
         SR    R15,R15             COMPUTE BRANCH INDEX           CL005
         IC    R15,QCLASS          QUEUE TYPE                     CL005
         B     *+4(R15)            BR BASED ON QUEUE TYPE         CL005
         B     LISTTSO             0  TSO QUEUE                   CL005
         B     LISTSTC             4  STC QUEUE                   CL005
         B     LISTHO              8  HELD OUTPUT QUEUE           CL005
         B     LISTDM              12 DUMP QUEUE                  CL005
         B     LISTCN              16 CONVERSION QUEUE            CL005
         B     LISTAOUT            20 AWAITING OUTPUT QUEUE       CL005
         B     LISTSTUP            24 AWAITING SETUP QUEUE        CL005
CHEKJQE  LTR   R1,R1          IS REQUEST FOR JQE OR JOE?          CL005
         BZ    LISTJQE        JQE.
***********************************************************************
*                                                                     *
*   FORMAT JOE                                                        *
*                                                                     *
***********************************************************************
LISTJOE  MVC   FQNAME,=C'OUTPUT' MOVE IN NAME OF QUEUE
         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEXO           YES. DO IT.
         TM    JOEFLAG2,JOE2SLEC   IS THIS JOE SELECTABLE?        RNB20
         BZ    LSTJOEAA            /YES - DON'T FLAG IT           RNB20
         MVC   FHOLD,=C' S=N'      /NO  - SAY SO                  RNB20
LSTJOEAA EQU   *                                                  RNB20
         L     R0,JOERECCT    NUMBER OF PRINT LINES
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FLINES,ED8     PREPARE FOR EDIT
         ED    FLINES,CONVERT+4 EDIT NUMBER OF LINES
*        TM    JOEFLAG,X'20'  IS THIS JOB PRINTING?               RNB17
*        BNO   LOCAL          NO. SKIP.                           RNB17
         TM    JOEFLAG1,JOE1BUSY IS JOE ACTIVE?                   RNB17
         BZ    LSTJOE$$          /NO  - DON'T SET DEVICE ID       RNB17
*                                /YES -                           RNB17
         CLI   JOEDEVID,X'0F'    IS JOB ON PSO (EXTERNAL WRITER)? RNB17
         BNE   LSTJOE$           /NO  - GO DO REAL DEVICE         RNB17
         MVC   FPRINT,=CL8'EXT-WTR'  /YES - SAY SO                RNB17
         B     LSTJOE$$                                           RNB17
LSTJOE$  TM    JOEDEVID,X'40'           JOB ON NJE DEVICE?        RNB17
         BO    LOCAL                     /YES - SKIP DEVICE ID    RNB17
         LA    R3,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR            FCI
         BAL   R7,SETDEVIC    SET THE OUTPUT DEVICE                 FCI
LSTJOE$$ EQU   *                                                  RNB17
         TM    JOEFLAG1,JOE1CKV IS CKPT JOE VALID?                RNB17
         BO    LSTJOE##         /YES - USE RECORDS PRINTED        RNB17
         TM    JOEFLAG1,JOE1BUSY /NO - IS JOE BUSY?               RNB17
         BZ    LOCAL            IF NOT, GO DO LOCAL STUFF         RNB17
         B     LIST             IF YES, SKIP LOCAL STUFF, GO LIST RNB17
LSTJOE## EQU   *                                                  RNB17
         L     R0,JOERECCT    RESTORE R0 FOR REMOTES              RNB28
         LR    R3,R8            SAVE WORK JOE ADDRESS             RNB17
         B     LIST                NO CKPT FOR NOW                UF046
LOCAL    DS    0H                                                 UF047
         SR    R1,R1               CLEAR REG                      UF047
         ICM   R1,B'0111',JOECHARB OFFSET TO CHAR JOE             UF047
         BZ    LOCAL1              NONE, SKIP THIS                UF047
         A     R1,QCJOTA           GET JOE ADDRESS                UF047
         PUSH  USING                                              UF047
         DROP  R8                  DROP OLD JOE ADDRESSING        UF047
         USING JOE,R1              TEMP USING                     UF047
         TM    JOEWTRID,X'FF'-X'40'  WAS THERE A WTRID?           UF047
         BZ    LOCAL1              NO, SKIP                       UF047
         MVC   FLINES+10(3),=C' W='  SET PREFIX                   UF047
         MVC   FLINES+13(8),JOEWTRID SET WRITER ID                UF047
         POP   USING                                              UF047
LOCAL1   DS    0H                                                 UF047
         LA    R15,FREMOTE    ADDRESS TO PUT TEXT
         LA    R1,JOEROUT     POINT TO ROUTING INFO                FCI*
***********************************************************************
*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION       FCI*
* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                FCI*
***********************************************************************
RMTORLCL CLI   3(R1),0        IS IT FOR REMOTE 00=LOCAL            FCI*
         BE    LIST           NO LUCK .. HAVE TO WORK FOR IT       FCI*
         CLC   =H'0',0(R1)    SPECIAL LOCAL ROUTING (SP2) ?       RNB18
         BNE   RMTORLC1          /NO  - GO FORMAT RMTNN           RNB18
         MVC   0(L'LCL,R15),LCL  /YES - MOVE IN LCL               RNB18
         LA    R15,L'LCL(R15)    BUMP POINTER                     RNB18
         B     RMTORLC2                                           RNB18
RMTORLC1 EQU   *                                                  RNB18
         MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                FCI*
         LA    R15,L'RMT(R15)  BUMP POINTER                        FCI*
RMTORLC2 EQU   *                                                  RNB18
         SR    R14,R14        LOAD RMT FLAGS                       FCI*
         IC    R14,3(R1)      FROM JOEROUT                        RNB18
         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                FCI*
         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE        FCI*
         SPACE 2
***********************************************************************
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT           FCI*
*                                                                  FCI*
***********************************************************************
FITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL            FCI*
FITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT  FCI*
         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES                 FCI*
         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC       FCI*
         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)    FCI*
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1   FCI*
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG            FCI*
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                  FCI*
         B     LIST           RETURN TO OUR CALLER                 FCI*
         SPACE 3                                                   FCI*
MVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                       FCI*
         SPACE 2                                                   FCI*
NORMAL   DC    X'402020202020202020202120' EDIT MASK               FCI*
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                 FCI*
RMT      DC    C'RMT'                                              FCI*
LCL      DC    C'LCL'                                             RNB18
***********************************************************************
*                                                                     *
*   FORMAT JQE                                                        *
*                                                                     *
***********************************************************************
LISTTSO  MVC   FQNAME(8),=C'TSO USER' NAME OF QUEUE
         B     LIST           CONTINUE
LISTSTC  MVC   FQNAME(8),=C'SYSTEM Q' NAME OF QUEUE
         B     LIST           CONTINUE
LISTHO   MVC   FQNAME(8),=C'HELD OUT' NAME OF QUEUE
         B     LIST           CONTINUE
LISTDM   MVC   FQNAME(4),=C'DUMP'     NAME OF QUEUE               RNB19
         B     LIST                                               RNB19
LISTAOUT MVC   FQNAME(6),=C'AW OUT'   NAME OF QUEUE               RNB19
         B     LISTCN1                GO DO SYSAFF                RNB19
LISTSTUP MVC   FQNAME(5),=C'SETUP'    NAME OF QUEUE               CL005
         B     LIST                                               CL005
LISTCN   MVC   FQNAME(6),=C'CONVRT'   NAME OF QUEUE               RNB19
         MVC   FQUEUE,JQEJCLAS        JOB CLASS                   RNB19
LISTCN1  TM    JQEFLAG1,JQE1BUSY      IS JOB CONVERTING?          RNB19
         BNZ   LIST                   /YES - GO LIST IT           RNB19
*                                     /NO  - PUT SYSAFF IN        RNB19
         TM    JQEFLAG2,JQE2SAF       CHECK SYSTEM AFFINITY       RNB19
         BO    LIST                   LIST IT IF NO SPECIAL AFF   RNB19
         LA    R15,QSYSID+8           GET FIRST SID               RNB19
         TM    JQEFLAG2,X'01'         IS THIS IT?                 RNB19
         BO    LISTCN2                /YES -                      RNB19
         LA    R15,8(,R15)            /NO  - CHECK REST           RNB19
         TM    JQEFLAG2,X'02'                                     RNB19
         BO    LISTCN2                                            RNB19
         LA    R15,8(,R15)                                        RNB19
         TM    JQEFLAG2,X'04'                                     RNB19
         BO    LISTCN2                                            RNB19
         LA    R15,8(,R15)                                        RNB19
         TM    JQEFLAG2,X'08'                                     RNB19
         BO    LISTCN2                                            RNB19
         LA    R15,8(,R15)                                        RNB19
         TM    JQEFLAG2,X'10'                                     RNB19
         BO    LISTCN2                                            RNB19
         LA    R15,8(,R15)                                        RNB19
         TM    JQEFLAG2,X'20'                                     RNB19
         BO    LISTCN2                                            RNB19
         LA    R15,8(,R15)                                        RNB19
LISTCN2  MVC   FREMOTE(4),0(R15)      MOVE SYSTEM ID TO DISPLAY   RNB19
         B     LIST                                               RNB19
*LISTJQE  MVC   FQNAME,=C' INPUT' NAME OF QUEUE                   RNB19
LISTJQE  MVC   FQNAME(5),=CL5'XEQ'  ASSUME XEQ QUEUE              RNB19
         TM    JQETYPE,$XEQ         IS IT XEQ QUEUE?              RNB19
         BO    LIST                 /YES - GO LIST IT             RNB19
         MVC   FQNAME(5),=C'INPUT'  ELSE ASSUME INPUT, ETC.       RNB19
         TM    JQETYPE,$INPUT                                     RNB19
         BO    LIST                                               RNB19
         MVC   FQNAME(6),=C'OUTPUT'                               RNB19
         TM    JQETYPE,$OUTPUT+$HARDCPY                           RNB19
         BNZ   LIST                                               RNB19
         MVC   FQNAME(5),=C'PURGE'                                RNB19
         TM    JQETYPE,$PURGE                                     RNB19
         BO    LIST                                               RNB19
         MVC   FQNAME(8),=CL8'????????'                           RNB19
LIST     CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?
         BE    HEX            YES. DO IT.
         MVC   FCOUNT,ED5     PREPARE FOR EDIT
         ED    FCOUNT,QCOUNT  EDIT THE POSITION IN QUEUE
         MVC   FNAME,JQEJNAME MOVE IN JOBNAME
         MVC   FJOBNO,ED5     PREPARE FOR EDIT
         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         ED    FJOBNO,CONVERT+5 EDIT HASP JOBNUMBER
         SR    R0,R0          ZERO OUT REGISTER
         IC    R0,JQEPRIO     LOAD JQE PRIORITY
         SRL   R0,4           DIVIDE BY 16
         CVD   R0,CONVERT     CONVERT TO DECIMAL
         MVC   FPRIO,ED3      PREPARE FOR EDIT
         ED    FPRIO,CONVERT+6 EDIT JQE PRIORITY
         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2
         BZ    NOHOLD         NO.
         MVC   FHOLD,=C'HELD' INDICATE JOB HELD
         TM    JQEFLAG1,JQE1HLD1  SPECIFIC HOLD?                  RNB20
         BO    NOHOLD             /YES - GO DISPLAY               RNB20
         MVC   FHOLD,=C'DUP '     ASSUME DUPLICATE                RNB20
         TM    JQEFLAG1,JQE1HLD2  IS IT DUPLICATE HOLD?           RNB20
         BO    NOHOLD             /YES - GO DISPLAY               RNB20
         MVC   FHOLD,=C'$HA '     ELSE MUST BE FROM $HA           RNB20
NOHOLD   DS    0H
         CLC   QCODEH,=H'28'  IS THIS THE HO COMMAND?             RNB25
         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25
*                             /YES -                              RNB25
         CLC   =C'COUNT',QPARM1  DOES USER WANT LINE COUNTS?      RNB25
         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25
*                             /YES - GET JCT AND FORMAT LINE CNT  RNB25
         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT                    RNB25
         L     R3,QCJCTA      ADDR OF IOAREA FOR JCT              RNB25
         LR    R1,R3          PARM FOR READSPC                    RNB25
         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16
         L     R15,=V(READSPC)  ROUTINE TO READ HASPACE           RNB25
         BALR  R14,R15          GO DO IT                          RNB25
         USING JCT,R3         BASE FOR JCT                        ONL16
         SPACE 1                                                  ONL03
         CLC   JCTID,=CL4'JCT'  WAS A JCT READ FROM SPOOL ?       ONL03
         BNE   LIST2          SKIP IF NO                          ONL03
         CLC   JCTJNAME,JQEJNAME  DOES JOBNAME MATCH ?            ONL03
         BNE   LIST2          SKIP IF NO                          ONL03
         LA    R1,JQE         ADDR OF JQE                         ONL03
         SL    R1,QCJQTA      COMPUTE THE JQE OFFSET              ONL03
         CL    R1,JCTJQE      DOES OFFSET MATCH THE JCT'S ?       ONL03
         BNE   LIST2          SKIP IF NO                          ONL03
         SPACE 1                                                  ONL03
         L     R0,JCTLINES    GET TOTAL LINES GENERATED BY JOB    RNB25
         DROP  R3                                                 RNB25
         SPACE 1                                                  ONL03
         CVD   R0,CONVERT     CONVERT TO DECIMAL                  RNB25
         MVC   FLINES,ED8     PREPARE FOR EDIT                    RNB25
         ED    FLINES,CONVERT+4  PRINT TOTAL LINE COUNT           RNB25
         C     R0,=F'9999999' IS THE LINE COUNT >= 10 MILLION?    RNB25
         BNH   LIST2          /NO  - GO LIST IT                   RNB25
         MVI   FLINES+8,C'+'  /YES - SHOW OVERFLOW                RNB25
LIST2    EQU   *                                                  RNB25
         LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
STOP     QSTOP
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JOE                                              *
*                                                                     *
***********************************************************************
HEXO     UNPK  FHEX1,0(8,R8)  UNPK FIRST PART OF JOE INTO HEX
         UNPK  FHEX2,7(8,R8)  SECOND
         UNPK  FHEX3,14(8,R8) THIRD
         UNPK  FHEX4,21(8,R8) FOURTH
         UNPK  FHEX5,28(5,R8) FIFTH
         MVI   FHEXOC,C' '    CLEAR LAST BYTE
         TR    FHEXO,TABLE    CHANGE TO PRINTABLE HEX
         LA    R1,QDMSG       ADDR OF MESSAGE AREA
         ST    R1,QDMSGA      STORE MESSAGE ADDR
         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE
         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE
         BALR  R14,R15        DISPLAY THE LINE
***********************************************************************
*                                                                     *
*   TAKE HEX DUMP OF JQE                                              *
*                                                                     *
***********************************************************************
HEX      UNPK  FHEX1,0(8,R9)  UNPK FIRST PART OF JOE INTO HEX
         UNPK  FHEX2,7(8,R9)  SECOND
         UNPK  FHEX3,14(8,R9) THIRD
         UNPK  FHEX4,21(8,R9) FOURTH
         MVC   FHEXC,QBLANK   CLEAR LAST BYTES
         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX
         B     NOHOLD         CALL DISPLAY
***********************************************************************
* SETDEVIC SUBROUTINE - GET DEVICE DATA (R3) POINTS TO DEVID       FCI*
*                                                                  FCI*
***********************************************************************
SETDEVIC ST    R7,SETDHOLD       SAVE LINK ADDRESS                 FCI*
         MVC   FPRINT(9),=CL9' '
         TM    0(R3),HIGHBIT REMOTE DEVICE?                        FCI*
         BO    RMTDEV         YES => OUTPUT IT                     FCI*
         SR    R1,R1          FOR THE INSERT CHARACTER             FCI*
         IC    R1,0(R3)         DEVICE TYPE                        FCI*
         SRL   R1,4           RIGHT JUSTIFIED                      FCI*
         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY      FCI*
         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)                      FCI*
         MVC   FPRINT,1(R1)   PUT IN THE DEVICE TYPE
         CLI   0(R3),0          INTERNAL READER?                   FCI*
         BE    SETDRTN        YES => GIVE THE USER THE INFO        FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         ICM   R15,3,1(R3)      DEVICE NUMBER  (SP2)              RNB21
         CVD   R15,DOUBLEWD   IN PACKED DECIMAL                    FCI*
         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES       FCI*
         LA    R15,FPRINT(R15) A(WHERE THE DEV # GOES)
         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITSKMT*
         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC       FCI*
         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS          FCI*
*                                                                  FCI*
         B     SETDRTN        GO EXIT
*                                                                  FCI*
RMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER             FCI*
         IC    R0,2(R3)         REMOTE NUMBER                     RNB21
         CVD   R0,DOUBLEWD    IN PACKED DECIMAL                    FCI*
         MVI   FPRINT,C'R'    INDICATE A REMOTE DEVICE             FCI*
         MVC   FPRINT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK    FCI*
         EDMK  FPRINT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC    FCI*
         MVC   FPRINT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS         FCI*
         LA    R1,FPRINT+1    A(SPOT JUST BEFORE POSSIBLE SEP)     FCI*
FINDPT   LA    R1,1(R1)       A(NEXT BYTE)                         FCI*
         CLI   0(R1),C'.'     FOUND THE SEPARATOR?                 FCI*
         BNE   FINDPT         NO => KEEP LOOKING                   FCI*
         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*
         IC    R15,0(R3)        DEVICE TYPE INDICATOR              FCI*
         SRL   R15,3          RIGHT JUSTIFIED                      FCI*
         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)           FCI*
         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE               FCI*
         MVC   3(1,R1),0(R3) PUT IN THE DEVICE NUMBER              FCI*
         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE     FCI*
         B     SETDRTN
         EJECT ,                                                   FCI*
SETDRTN  L     R7,SETDHOLD    GET RETURN ADDRESS                   FCI*
         BR    R7             RETURN TO OUR CALLER                 FCI*
         SPACE 5                                                   FCI*
DIGITS3  DC    X'202020'                                           FCI*
THREEPT  DC    X'2020204B'                                         FCI*
         DS    0H                                                  FCI*
DEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'               FCI*
         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'               FCI*
DEVTYPEL DC    AL2((*-DEVTABLE)/4)                                 FCI*
RMTDEVS  DC    C'**',C'RD',C'PR',C'PU'                             FCI*
***********************************************************************
*                                                                     *
*   MISCELLANY                                                        *
*                                                                     *
***********************************************************************
         LTORG
ED8      DC    X'4020202020202120'
ED5      DC    X'402020202021'
ED3      DC    X'40202021'
HEADING  DC    C'  QUEUE  POSITION JOBNAME    JOB#  PRIORITY  LINES'
         DC    CL40'   EXECUTING'
HIGHBIT  EQU   X'80'
TABLE    EQU   *-240
         DC    C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX
WORK     DSECT
         DS    CL80
CONVERT  DS    D
SETDHOLD DS    F
DOUBLEWD DS    D
NUMBER   DS    CL16
FORMAT   CSECT
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
FORMAT   CSECT ,                                                  UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         $JQE
         $JOE
        $BUFFER ,                                                 ONL16
         IFGRPL
        $JCT   ,                                                  RNB25
        $HASPEQU
         QCOMMON
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         ORG   QDMSG
FCLEAR   DS    0CL80          FORMAT FOR QUEUE RECORDS
FQNAME   DS    CL6            NAME OF QUEUE
         DS    C
FQUEUE   DS    C              CLASS NAME
         DS    CL2
FCOUNT   DS    CL6            POSITION IN QUEUE
         DS    CL2
FNAME    DS    CL8            JOBNAME
         DS    CL2
FJOBNO   DS    CL6            JES2 JOB NUMBER
         DS    CL2
FPRIO    DS    CL4            JOB PRIORITY
         DS    CL2
FLINES   DS    CL8            NUMBER OF OUTPUT LINES
         DS    CL3
FSYSID   DS    CL8            SYSTEM ID
         DS    CL3
FHOLD    DS    CL4            JOB HOLD STATUS
         DS    CL1
FREMOTE  DS    CL8            REMOTE
         ORG   FSYSID
FPRINT   DS    CL8            PRINTING
         ORG   FCOUNT
FHEX     DS    0CL56          LENGTH OF JQE HEX DUMP
FHEXO    DS    0CL64          LENGTH OF JOE HEX DUMP
FHEX1    DS    0CL15
         DS    CL14
FHEX2    DS    0CL15
         DS    CL14
FHEX3    DS    0CL15
         DS    CL14
FHEX4    DS    0CL15
         DS    CL14
FHEXC    DS    0CL9           CLEAR LAST BYTES FOR JQE
FHEX5    DS    0CL9
         DS    CL8
FHEXOC   DS    C              CLEAR LAST BYTE FOR JOE
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END
