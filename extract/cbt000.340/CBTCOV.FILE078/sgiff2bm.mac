         MACRO
         SGIFF2BM
.*3211,009600,014400                                               AHD4
.*C105000                                                        A61544
         COPY  SGGBLPAK                      GET GLOBAL VARIABLES
         LCLA  &CU,&LTBLIX,&DADRIX,&NUM2840,&CUSTBL(40)
         LCLA  &NUMMOD1,&DEV,&CUSTBLX,&BFRSIZE(96),&EXPBFR(40)
         LCLA  &A,&B,&C,&D,&E,&F,&G,&NUMSEC1(40)
         LCLA  &NUMSEC2(40),&NUMSEC3(40),&NUMSEC4(40),&NUMSEC5(40)
         LCLA  &NUMSEC6(40),&NUMSEC7(40),&NUMSEC8(40),&NUMDEV(40)
         LCLA  &CONVCON                                            AHD4
         LCLA  &HI,&LO
         LCLB  &ASMBLY
         LCLC  &DEVADR,&TBLNAME(96),&CUADDR,&LSTCUNM,&X,&DVADR
&CU      SETA  1                             SET CU SWITCH SUBSCRIPT
&CUSTBLX SETA  1                             SET CU SW SUBSCPT TBL INDX
&NUM2840 SETA  0                             SET 2840 COUNTER
.BM01    AIF   (NOT &SGUNT2B(&CU)).BM02      CHK TYPE SWITCH
         AIF   (NOT &SGUNU6B(&CU)).BM02      CHK FOR 2840 CU
&CUSTBL(&CUSTBLX) SETA &CU                   SET CU SUBSCRIPT IN TABLE
         AIF   (&SGUNM2B(&CU)).BM01B         CHK FOR MOD 2
         AIF   (&SGUNF1B(&CU)).BM01A         CHK FOR 8K FEATURE
&BFRSIZE(&CUSTBLX) SETA 8192                 SET BFR SIZE IN TABLE
         AGO   .BM01C                        BRANCH TO INCREM INDEX
.BM01A   ANOP
&BFRSIZE(&CUSTBLX) SETA 16384                SET BFR SIZE IN TABLE
         AGO   .BM01C                        BRANCH TO INCREM INDEX
.BM01B   ANOP
&BFRSIZE(&CUSTBLX) SETA 32768                SET BFR SIZE IN TABLE
.BM01C   ANOP
&CUSTBLX SETA  &CUSTBLX+1                    INCREMENT CU TABLE INDEX
&NUM2840 SETA  &NUM2840+1                    INCREMENT CU COUNTER
.BM02    ANOP
         AIF   (&CU EQ &SGCNTRA(2)).BM03     CHK FOR LAST CU
&CU      SETA  &CU+1                         INCREMENT CU SW SUBSCRIPT
         AGO   .BM01                         BRANCH TO CHK NEXT CU
.BM03    ANOP
&LTBLIX  SETA  41                            SET LOCAL TABLES INDEX
&NUMMOD1 SETA  0                             SET 2250 MOD 1 COUNTER
&DEV     SETA  1                             SET DEV ADR SW SUBSCRIPT
.BM04    ANOP
&DADRIX  SETA  &SGDADRA(&DEV)/1048576                              000A
         AIF   (NOT &SGDT05B(&DADRIX)).BM22  CHK FOR GRAPHIC DEVICE
         AIF   (NOT &SGDU01B(&DADRIX)).BM04A  CHK FOR 2250 DEVICE
         AIF   (&SGDM01B(&DADRIX)).BM04B     CHK FOR MODEL 1
         AIF   (&SGDM02B(&DADRIX) OR &SGDM03B(&DADRIX)).BM07 CHK MOD2/3
         AGO   .BM22                         BRANCH TO CHK IF LAST DEV
.BM04A   AIF   (&SGDU04B(&DADRIX) OR &SGDU05B(&DADRIX)).BM07
         AGO   .BM22                         BRANCH TO CHK IF LAST DEV
.BM04B   ANOP
&ASMBLY  SETB  1                             SET ASSEMBLY SWITCH
&CONVCON SETA  &SGDADRA(&DEV)-&SGDADRA(&DEV)/4096*4096 ISOLATE ADD AHD4
         CONVERT TO=EBCDIC,VALUE=&CONVCON,DIGITS=3 CONV DEV NAME   AHD4
&TBLNAME(&LTBLIX) SETC '&EBCDIC'             SET DEV NAME IN NAME TABLE
         AIF   (&SGDF05B(&DADRIX)).BT04C     CHK FOR BUFFER SIZE
         AIF   (&SGDF06B(&DADRIX)).BM05      CHK FOR BUFFER SIZE
&BFRSIZE(&LTBLIX) SETA 0                     SET BUF TABLE TO 0
         AGO   .BM06                         BRANCH TO INCREM CTR & IDX
.BT04C   ANOP
&BFRSIZE(&LTBLIX) SETA 4096                  SET BUF TABLE TO 4096
         AGO   .BM06                         BRANCH TO INCREM CTR & IDX
.BM05    ANOP
&BFRSIZE(&LTBLIX) SETA 8192                  SET BUF TABLE TO 8192
.BM06    ANOP
&NUMMOD1 SETA  &NUMMOD1+1                    INCREMENT 2250 MOD 1 CTR
&LTBLIX  SETA  &LTBLIX+1                     INCREMENT LOCAL TBLES INDX
         AGO   .BM22                         BRANCH TO CHK IF LAST DEV
.BM07    ANOP
&CU      SETA  &SGDADRA(&DEV)/4096-&SGDADRA(&DEV)/1048576*256      000A
&CUSTBLX SETA  1                             SET CU SW SUBSCPT TBL INDX
.BM08    AIF   (&CUSTBL(&CUSTBLX) EQ &CU).BM09  DOES CU IN TBL =DEV CU
         AIF   (&CUSTBLX EQ &NUM2840).BM22   CHK FOR LAST 2840
&CUSTBLX SETA  &CUSTBLX+1                    INC CU SW SUBSCPT TBL INDX
         AGO   .BM08                         BRANCH TO CHK NEXT CU
.BM09    ANOP
&ASMBLY  SETB  1                             SET ASSEMBLY SWITCH
&CONVCON SETA  &SGDADRA(&DEV)-&SGDADRA(&DEV)/4096*4096 ISOLATE ADD AHD4
         CONVERT TO=EBCDIC,VALUE=&CONVCON,DIGITS=3 CONV DEV NAME   AHD4
&TBLNAME(&CUSTBLX) SETC '&EBCDIC'            SET CU NAME IN NAME TABLE
&EXPBFR(&CUSTBLX) SETA &SGCUN1A(&CU)         SET EXP BUF SIZE IN TABLE
         AIF   (&NUMDEV(&CUSTBLX) EQ 0).BM13  CHK FOR CORRECT TBL SLOT
         AIF   (&NUMDEV(&CUSTBLX) EQ 1).BM14  CHK FOR CORRECT TBL SLOT
         AIF   (&NUMDEV(&CUSTBLX) EQ 2).BM15  CHK FOR CORRECT TBL SLOT
         AIF   (&NUMDEV(&CUSTBLX) EQ 3).BM16  CHK FOR CORRECT TBL SLOT
         AGO   .BM22               NO SLOTS OPEN, BR TO CHK IF LAST DEV
.BM13    ANOP
&NUMSEC1(&CUSTBLX) SETA &SGDNBFA(&DADRIX)    SET NUM OF SECT FOR DEV 1
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM14    ANOP
&NUMSEC2(&CUSTBLX) SETA &SGDNBFA(&DADRIX)    SET NUM OF SECT FOR DEV 2
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM15    ANOP
&NUMSEC3(&CUSTBLX) SETA &SGDNBFA(&DADRIX)    SET NUM OF SECT FOR DEV 3
         AGO   .BM21                         BRANCH TO INC DEV CTR
.BM16    ANOP
&NUMSEC4(&CUSTBLX) SETA &SGDNBFA(&DADRIX)    SET NUM OF SECT FOR DEV 4
.BM21    ANOP
&NUMDEV(&CUSTBLX) SETA &NUMDEV(&CUSTBLX)+1   INC DEV COUNT FOR THIS CU
.BM22    AIF   (&DEV EQ &SGCNTRA(3)).BM23    CHK FOR LAST DEVICE
&DEV     SETA  &DEV+1                        INCREM DEV ADR SW SUBSCRIP
         AGO   .BM04                         BRANCH TO PROCESS NEXT DEV
.BM23    AIF   (NOT &ASMBLY).BM29            CHK IF ASSEMBLY SW IS SET
&SGCTRLC(6) SETC 'IFFBDA'                    SET CSECT NAME
         COPY  SGASMPAK                      COPY ASSEMBLY MACRO
         PUNCH 'IFFBDA   CSECT'
         AIF   (&NUM2840 EQ 0).BM26          CHK FOR NO 2840
&LTBLIX  SETA  1                             SET LOCAL TABLE INDEX
.BM24    ANOP
         AIF   ('&TBLNAME(&LTBLIX)' EQ '').BM25E NO CU IN TABLE  LI
&CUADDR  SETC  '&TBLNAME(&LTBLIX)'(1,2)  SET CU ADDRESS
&X       SETC  ' '                 SET X BLANK
         AIF   ('&LSTCUNM' EQ '&CUADDR').BM50     DUP ADDRESS
&HI      SETA  0                          CLEAR HI SWITCH
&LO      SETA  0                        CLEAR LO SWITCH
.BM50    ANOP
&DVADR   SETC  '&TBLNAME(&LTBLIX)'(3,1)       GET DEV ADDR
         AIF   ('&DVADR' GE '0' AND '&DVADR' LE '7').LOW
         AIF   ('&DVADR' EQ '8' OR '&DVADR' EQ '9').HIGH
         AIF   ('&DVADR' GE 'A' AND '&DVADR' LE 'F').HIGH
         AGO   .ERROR                   INVALID DEVICE
.LOW     ANOP
         AIF   (&LO GE 1).ERROR        DUP LOW DEVICE
&LO      SETA  1                       SET LOW SWITCH ON
         AGO   .PROCESS
.HIGH    ANOP
&X       SETC  'X'                  SET X FOR HIGH
         AIF   (&HI GE 1).ERROR        DUP HIGH DEVICE
&HI      SETA  1                       SET HI SWITCH ON
.PROCESS ANOP
&A       SETA  &BFRSIZE(&LTBLIX)             SET BUFFER SIZE
&B       SETA  &EXPBFR(&LTBLIX)              SET EXP BUFF REQUIREMENT
&C       SETA  &NUMDEV(&LTBLIX)              SET DEVICE COUNT
&D       SETA  &NUMSEC1(&LTBLIX)                  SET SECTIONS VALUE
&E       SETA  &NUMSEC2(&LTBLIX)                  SET SECTIONS VALUE
&F       SETA  &NUMSEC3(&LTBLIX)                  SET SECTIONS VALUE
&G       SETA  &NUMSEC4(&LTBLIX)                  SET SECTIONS VALUE
.BM25    ANOP
         PUNCH 'IFFB&CUADDR&X SGIFF0BT &A,&B,&C,&D,&E,&F,&G'
.BM25A   ANOP
         AIF   (&NUM2840 EQ &LTBLIX).BM26    CHK FOR LAST 2840
&D       SETA  0                             SET SECT QTY 1 PARAMETER
&E       SETA  0                             SET SECT QTY 2 PARAMETER
&F       SETA  0                             SET SECT QTY 3 PARAMETER
&G       SETA  0                             SET SECT QTY 4 PARAMETER
.INCRNDX ANOP
&LTBLIX  SETA  &LTBLIX+1               INCREMENT TABLE INDEX
&LSTCUNM SETC  '&CUADDR'                 SAVE LAST CU ADDRESS
         AGO   .BM24                         BRANCH TO PROCESS NEXT CU
.ERROR   ANOP
         MNOTE 8,'****&CUADDR&DVADR IS INVALID DUPLICATE ADDRESS***'
         AGO   .BM25A
.BM25E   ANOP
         MNOTE 8,'INVALID CU/2250 MOD1 COMBINATION'
         AGO   .BM25A
.BM26    ANOP
         AIF   (&NUMMOD1 EQ 0).BM28          CHK FOR NO MOD 1
&LTBLIX  SETA  41                            SET LOCAL TABLE INDEX
.BM27    ANOP
&DEVADR  SETC  '&TBLNAME(&LTBLIX)'           SET BUFFER TABLE NAME
&A       SETA  &BFRSIZE(&LTBLIX)             SET BUFFER SIZE
         PUNCH 'IFFB&DEVADR SGIFF0BT &A'
         AIF   (&NUMMOD1 EQ 1).BM28          CHK FOR LAST 2250
&NUMMOD1 SETA  &NUMMOD1-1                    DECREMENT 2250 MOD 1 CTR
&LTBLIX  SETA  &LTBLIX+1                     INCREM LOCAL TABLE INDEX
         AGO   .BM27                         BRANCH TO PROCESS NEXT DEV
.BM28    ANOP
         PUNCH '         END'
         PUNCH '/*'
.BM29    ANOP
         MEND
