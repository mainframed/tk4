         MACRO
         PARTITNS
         COPY  SGGBLPAK
         LCLA  &M,&N,&PT,&O,&RD,&WR,&PB,&LS
         LCLB  &C,&EO,&NOSET,&S,&HB0,&HB1,&ZER
         LCLC  &PRT,&GV,&SZ
         AIF   (&SGMENTB(18)).MR             PARTITNS ENTRY SWITCH
         AIF   (N'&SYSLIST EQ 0).P3          NO PARTITNS SPECIFIED
&SGMENTB(18) SETB 1
         AIF   (N'&SYSLIST GT 52).P2         TEST FOR MAX NO OF OPERAND
.BGIN    AIF   (N'&SYSLIST EQ &M).COMP       CHECKING COMPLETE?
&M       SETA  &M+1                          POINTER TO CORRECT OPERAND
.CMP2    ANOP
&N       SETA  &N+1                          POINTER TO CHARACTER
         AIF   (&N GT 4).P1                  PARTITION CHECK
         AIF  (K'&SYSLIST(&M) EQ 0).P0
         AIF   ((&N EQ 1) AND ('&SYSLIST(&M)'(&N,1) NE 'P')).P1
         AIF   ('&SYSLIST(&M)'(&N,1) NE '(').CMP2
&PRT     SETC  '&SYSLIST(&M)'(2,&N-2)        PARTITION VALUE SET
&PT      SETA  &PRT+1                        ADJUST VALUE FOR GLOBAL
         AIF   (&PT GT 52).P1                MUST BE LESS THAN 53
         AIF  ((&SGCPRPA(&PT) GT 0) OR (&SGCPRPA(&PT+52) GT 0)).PJ DUPE
    MNOTE *,'      PARTITION NUMBER &PRT SPECIFIED'
.AGAIN   ANOP                                SCAN NEXT PARM
&N       SETA  &N+1                          *    INCREMENT POINTER
&O       SETA  &N                            FIRST CHAR WITHIN PAREN
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'C').CLASS
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'S').SIZE
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'H').HI
         AGO   .P4                               INVALID DESIGNATOR
.CLASS   ANOP                                     WHICH JOBCLASS?  ****
&N       SETA  &N+1                               *
         AIF  (('&SYSLIST(&M)'(&N,1) EQ ',') OR ('&SYSLIST(&M)'(&N,1) EX
               Q ')')).CEND                       *    END TEST
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'R').READ *    READ CLASS
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'W').WRITE     WRITE CLASS
         AIF   ('&SYSLIST(&M)'(&N,1) GE 'A' AND '&SYSLIST(&M)'(&N,1) LEX
                'O').PROB                         *    PROBLEM CLASS
         AIF  (('&SYSLIST(&M)'(&N,1) EQ '-') AND (&N EQ (&O+1))).CLASS
         AGO   .P5
.READ    ANOP                                     READER PARTITION ****
&RD      SETA  &RD+1                              * COUNTER FOR MAX
         AIF   (('&SYSLIST(&M)'(&N+1,1) NE ',') AND ('&SYSLIST(&M)'(&N+X
               1,1) NE ')')).P6                    ONE CHARACTER ALLOW
.X1      AIF   (&O+2 NE &N).CLASS                 FIRST CHARACTER
&C       SETB  1                                  CLASS SWITCH
         AGO   .CLASS                             RETURN
.WRITE   ANOP                                     WRITER PARTITION ****
&WR      SETA  &WR+1                              WRITER SWITCH
         AIF   (('&SYSLIST(&M)'(&N+1,1) NE ',') AND ('&SYSLIST(&M)'(&N+X
               1,1) NE ')')).P7                    ONE CHARACTER ALLOW
         AGO   .X1                                IS THIS FORST CLASS
.PROB    AIF   (&O+2 NE &N).CLASS                 PROB PROG PARTITN ***
&PB      SETA  &PB+1                              PROB PROG COUNTER
         AGO   .X1                                IS THIS FIRST CLASS
.CEND    AIF  (((&N-(&O+2)) GT 3) OR ((&N-(&O+2)) LE 0)).P8
&LS      SETA  (&N-(&O+2))
&GV      SETC  '&SYSLIST(&M)'(&O+2,&LS)           PLACE JOBCLASS IN
&GV      SETC  '   &GV'(&LS,4)                    * CBOX
&EO      SETB  (&PT EQ &PT/X'02'*X'02')           EVEN OR ODD PART NUMB
    MNOTE *,'           &GV IS THE JOBCLASS IDENTIFIER'
         AIF   (&EO).EVEN                                  *S
         AIF   (&NOSET).CS                                   E
&SGCPRGC((&PT+1)/X'02') SETC '&GV&SGCPRGC((&PT+1)/X'02')'     T
.CS      AIF   ('&SYSLIST(&M)'(&N,1) EQ ',').AGAIN             *J
         AGO   .CLEN                                             O
.EVEN    AIF   (&NOSET).CS                                        B
&SGCPRGC((&PT+1)/X'02') SETC '&SGCPRGC((&PT+1)/X'02')&GV'          *C
         AGO   .CS                                                   L
.SIZE    ANOP                                    SIZE PROCESS     ****
&N       SETA  &N+1                               *    INCREMENT POINT
         AIF   (('&SYSLIST(&M)'(&N,1) EQ ',') OR ('&SYSLIST(&M)'(&N,1) X
               EQ ')')).P9                        *    INVALID FIND
         AIF   ('&SYSLIST(&M)'(&N,1) LE '9' AND '&SYSLIST(&M)'(&N,1) GEX
                '0').SETS                         *    SIZE CHARACTER
         AIF   ('&SYSLIST(&M)'(&N,1) EQ 'K').SEND *    END OF PARM
         AIF  (('&SYSLIST(&M)'(&N,1) EQ '-') AND (&N EQ (&O+1))).SIZE
         AGO   .P9                                *    RETURN TO LOOP
.SETS    AIF   ((&O+2) NE &N).SIZE                FIRST CHARACTER TEST
         AIF   (&HB1 OR &HB0).SIZE                *   IF HIARCHY RETURN
&S       SETB  1                                  *   SET SIZE SWITCH
         AGO   .SIZE                              *   RETURN
.SEND    ANOP                                     SET SIZE VALUE   ****
&LS      SETA  &N-(&O+2)                          *   LENGTH
&SZ      SETC  '&SYSLIST(&M)'(&O+2,&LS)           *   *
         AIF   (&NOSET).TEST                      *   TEST FOR VALID PT
         AIF   (&SZ LE 7).PH           *    SIZE GE 4?
         AIF   (&HB1).H1                          *   IF H1 - BRANCH
&SGCPRPA(&PT) SETA &SZ*1024                       *   SET SIZE BOX
         AIF   (&HB0).N0                          *   IF HIARCHY 0
.SN MNOTE *,'           &SZ K BYTES ALLOCATED TO THE PARTITION'
         AGO   .CHK                               CHECK FOR ANOTHER
.N0      AIF   (&SZ EQ &SZ/X'02'*X'02').M0
&SGCPRPA(&PT) SETA &SGCPRPA(&PT)+1024
.M0 MNOTE *,'           &SZ K BYTES ALLOCATED TO HIERARCHY 0'
         AGO   .CHK                               CHECK FOR ANOTHER
.H1      ANOP                                     HIERARCH 1 SET
&SGCPRPA(&PT+52) SETA &SZ*1024                    *
         AIF   (&SZ EQ &SZ/X'02'*X'02').N1
&SGCPRPA(&PT+52) SETA &SGCPRPA(&PT+52)+1024
.N1 MNOTE *,'           &SZ K BYTES ALLOCATED TO HIERARCHY 1'
.CHK     AIF   ('&SYSLIST(&M)'(&N+1,1) NE ',').CLEN
&N       SETA  &N+1                               INCREMENT POINTER
.RAG     ANOP
&HB0     SETB  0                                  REINITIALIZE FOR
&HB1     SETB  0                                  *    NEXT HIERARCHY
         AGO   .AGAIN                             SCAN NEXT PARM
.CLEN    AIF   (&C AND &S).REIN                   CLASS AND SIZE SPEC
         AIF   (&C AND (&HB1 OR &HB0)).REIN       CLASS AND HIERARCHY
         AIF   (&S OR &HB1 OR &HB0).PA            NO CLASS
         AIF   (&C).PB                            NO SIZE SPECIFIED
.REIN    ANOP                                     REINITIALIZE     ****
&S       SETB  0                                  *    SIZE
&C       SETB  0                                  *    CLASS
&N       SETA  0                                  *    POINTER TO CHAR
&NOSET   SETB  0                                  *    NO SET PARTITION
&HB0     SETB  0                                  *    HIERARCHY 0
&HB1     SETB  0                                  *    HIERARCHY 1
         AGO   .BGIN
.TEST    AIF   (&HB1).N1                          HIERARCHY 1
         AIF   (&HB0).N0                          HIERARCHY 0
         AIF   (&S).SN                            SIZE
         AGO   .P9
.HI ANOP
&SGMENTB(54) SETB 1           HIARCHY SPECIFIED
         AIF ('&SYSLIST(&M)'(&N+1,1) EQ '1').HI1
         AIF   ('&SYSLIST(&M)'(&N+1,1) NE '0').PC
&HB0     SETB  1                                  SET H0 INDICATOR
.RFS     ANOP                                     REINITIALIZE FOR SIZE
&N       SETA  &N+1                               *
&O       SETA  &N                                 *
&S       SETB  1
         AGO   .SIZE                              *
.HI1     ANOP                                     SET H1 INDICATOR
&HB1     SETB  1                                  *
         AGO   .RFS                               *
.COMP   ANOP
&SGCPRNA(1) SETA &M
        AIF   (&WR GT 36).PD FINAL CHECK WRITER     * *
.CHK1         AIF  (&RD GT 3).PE                  *         READERS
.CHK2    AIF   (&PB GT 15 OR &PB LT 1).PF         *         PROBLEM PRG
.CHK3    ANOP                                     PARTITN MISSING?
&PT      SETA  0
.PTCHK   AIF   (&PT EQ 52).MEND
&PT      SETA  &PT+1
         AIF   (&ZER AND ((&SGCPRPA(&PT) NE X'00') AND (&SGCPRPA(&PT+52X
               ) NE X'00'))).PG
         AIF   (&ZER AND ((&SGCPRPA(&PT) EQ X'00') AND (&SGCPRPA(&PT+52X
               ) NE X'00'))).PG
         AIF   (&ZER AND ((&SGCPRPA(&PT) NE X'00') AND (&SGCPRPA(&PT+52X
               ) EQ X'00'))).PG
         AIF  ((&SGCPRPA(&PT) NE X'00') AND (&SGCPRPA(&PT+52) NE X'00')X
               ).PTCHK
         AIF   ((&SGCPRPA(&PT) EQ X'00') AND (&SGCPRPA(&PT+52) NE X'00'X
               )).PTCHK
         AIF   ((&SGCPRPA(&PT) NE X'00') AND (&SGCPRPA(&PT+52) EQ X'00'X
               )).PTCHK
&ZER     SETB  1
         AGO   .PTCHK
.P0 MNOTE 5,'* * * IEIPTN118 THE PARTITION VALUE SPECIFIED IS BLANK OR C
               INVALID'
&SGQUITB  SETB  1
          AGO  .MEND
.P1 MNOTE 5,'* * * IEIPTN100 THE PARTITION VALUE IN &SYSLIST(&M) IS INVX
               ALID - THE MAXIMUM VALUE IS 51'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO  .MEND
.P2 MNOTE 5,'* * * IEIPTN101 THE MAXIMUM NUMBER OF PARTITIONS ALLOWED IX
               S 52'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .BGIN
.P3 MNOTE 5,'* * * IEIPTN102 NO PARTITIONS HAVE BEEN SPECIFIED'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .MEND
.P4 MNOTE 5,'* * * IEIPTN103 &SYSLIST(&M) CONTAINS AN INVALID DESIGNATOX
               R'
&SGQUITB SETB  1                                  QUIT SWITCH SET
.GSLP    AIF   ('&SYSLIST(&M)'(&N,1) EQ ',').AGAIN     LOOP TO
         AIF   ('&SYSLIST(&M)'(&N,1) EQ ')').CLEN        FIND
&N       SETA  &N+1                                          NEXT
         AGO   .GSLP                                            PARM
.P5 MNOTE 5,'* * * IEIPTN104 &SYSLIST(&M) CONTAINS AN INVALID CLASS VALX
               UE OR INDICATOR'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .GSLP
.P6 MNOTE 5,'* * * IEIPTN105 &SYSLIST(&M) CONTAINS AN INVALID READER PAX
               RTITION INDICATOR'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .GSLP
.P7 MNOTE 5,'* * * IEIPTN106 &SYSLIST(&M) CONTAINS AN INVALID WRITER PAX
               RTITION INDICATOR'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .GSLP
.P8 MNOTE 5,'* * * IEIPTN107 FROM ONE TO THREE JOBCLASS IDENTIFIERS AREX
                VALID'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .CS
.P9 MNOTE 5,'* * * IEIPTN108 &SYSLIST(&M) CONTAINS AN INVALID SIZE VALUX
               E OR INDICATOR'
&SGQUITB SETB  1                                  QUIT SWITCH SET
.SLP     AIF   ('&SYSLIST(&M)'(&N,1) EQ ')').REIN
         AIF   ('&SYSLIST(&M)'(&N,1) EQ ',').RAG
&N       SETA  &N+1
         AGO   .SLP
.PA MNOTE 5,'* * * IEIPTN109 &SYSLIST(&M) DOES NOT CONTAIN A JOBCLASS PX
               ARAMETER OR IT HAS BEEN FOUND INVALID'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .REIN
.PB MNOTE 5,'* * * IEIPTN110 &SYSLIST(&M) DOES NOT CONTAIN A SIZE PARAMX
               ETER'
&SGQUITB SETB  1                                  QUIT SWITCH SET
          AGO    .REIN
.PC MNOTE 5,'* * * IEIPTN111 &SYSLIST(&M) CONTAINS AN INVALID HIERARCHYX
                VALUE OR INDICATOR'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .SLP
.PD MNOTE 5,'* * * IEIPTN112 UP TO 36 WRITER PARTITIONS MAY BE SPECIFIED
               D'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .CHK1
.PE MNOTE 5,'* * * IEIPTN113 UP TO 3 READER PARTITIONS MAY BE SPECIFIEDX
               '
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO  .CHK2
.PF MNOTE 5,'* * * IEIPTN114 A MAXIMUM OF 15 PROBLEM PROGRAM PARTITIONSX
                ARE ALLOWABLE AND AT LEAST ONE MUST BE SPECIFIED'
&SGQUITB SETB  1                                  QUIT SWITCH SET
         AGO   .CHK3
.PG MNOTE 5,'* * * IEIPTN115 ALL PARTITIONS FROM 0 THROUGH THE HIGHEST X
               PARTITION SPECIFIED HAVE NOT BEEN SUPPLIED OR CONTAIN ERX
               RORS'
&SGQUITB SETB  1
         AGO   .MEND
.PH MNOTE 5,'* * * IEIPTN117 THE PARTITION SIZE IN &SYSLIST(&M) MUST EQX
               UAL AT LEAST 8K'
&SGQUITB SETB  1
         AGO   .REIN
.PJ      ANOP
&PT      SETA  &PT-1
    MNOTE 5,'* * * IEIPTN118 DUPLICATE DEFINITION OF PARTITION &PT'
&SGQUITB SETB 1                                   QUIT SWITCH SET
&PT      SETA  &PT+1
         AGO   .REIN
.MR MNOTE 5,'* * * IEIPTN116 PARTITNS MACRO PREVIOUSLY USED'
&SGQUITB SETB  1
.MEND    MEND
