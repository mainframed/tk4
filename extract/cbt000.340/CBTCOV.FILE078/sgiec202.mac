         MACRO
    SGIEC202
         COPY  SGGBLPAK
         LCLA  &SCR,&T,&M,&K,&J,&I,&SLCHS,&LCHN,&SQOPT,&SYSRES,&GS GRAF
         LCLA  &LCHCNT,&LCHTAB,&LCHSTOT,&COUNTB,&COUNTCU,&UCBAD,&STATAB
         LCLA  &MPXCNT,&A,&ACOUNT,&IANDX,&DSKSEQ,&CHIND,&ALTLIST(128)
         LCLA  &UCBNO,&ALOCCNT,&DEVTAB,&ENTCNT,&TYPCNT,&LCHTOT,&DACNT
         LCLA  &NCU,&NUA,&OCU,&OUA,&SEQNO,&ASEQNO,&HSCHMSK,&NUCSIZ
         LCLA  &DEVCNT,&NCHAN,&OCHAN,&INDX,&AINDX,&COUNT,&CUINDX
         LCLA  &COMPNO1,&COMPNO2,&BMPIF,&DEVNDX,&SAVECU,&CT2314,&CH(16)
         LCLA  &STATLST(5),&STCNT,&WKIDX,&CHCT(15),&LCHST          I267
         LCLA  &HSMPLCH,&DP(24),&DPCNT,&DPFNS,&DPFNSA,&TMSK,&MPFLG
         LCLA  &DDRCNT,&DA,&RR,&ASPCNT,&ANR,&HSTAMSK            SA54451
         LCLB  &LOG,&OFF,&SHR(8)                                  20201
         LCLB  &SSCH(15),&DAHS(3),&HSALT(16),&HSPRIM1(3),&HSPRIM2(3)
         LCLB  &HSPRIM3(3),&SSTCH2,&SSTCH3                         SSAP
         LCLB  &LASTCH,&APR,&TCHAP,&SYSDDR,&SSTACH(16)          SA54451
         LCLB  &BMP,&BMPSH,&TWOBYT,&SSDACH(16),&VOLSTAT,&MCRDR    19023
         LCLB  &LSTDEV,&S1(240),&S2(240),&S3(240),&S4(240)         I267
         LCLB  &LCHAP1(15),&LCHAP2(15),&LCHAP3(15),&LCHAP4(15)
         LCLB  &LCHAP5(15),&LCHAP6(15),&TYPESW,&NCHANSW,&NCUSW,&EOALTS
         LCLB  &LCHAP7(15),&LCHAP8(15),&LCHAP9(15),&LCHAP10(15)    I267
         LCLB  &LCHAP11(15),&LCHAP12(15),&LCHAP13(15),&LCHAP14(15) I267
         LCLB  &LCHAP15(15),&LCHAP16(15)                           I267
         LCLB  &CUNEG,&CNEG,&TYPE(25),&ALTSW,&IRSW,&ALTSWA      SA56509
         LCLB  &ALTSWB,&ACTLSW,&NCHSW,&LSTMAC,&GR,&DRM,&SK0,&SSDA(4)
         LCLB  &SK1(240),&SK2(240),&SK3(240),&SK4(240)             I267
         LCLB  &PRIR,&OSKQ,&TWOBS,&HSTCH,&SDAA(16)                 I267
         LCLB  &PRI,&OLT2880(15)                                  M2054
         LCLC  &THISDEV,&DEVAD,&TYPC,&TYPEA,&HEXAD,&TYPTAB(25),&ERRTAB
         LCLC  &DEVADE,&ZUSBAS
         LCLC  &EVAR,&EVAW                                        19023
         LCLC  &SIMTYPE,&SIMPROG                               ITEL
         ACTR  50000                                               P256
&LOG     SETB  (&SGDCLSB(70))           SET CULOG IF ZEUS IN SUP  20201
&APR     SETB  (&SGSUPRB(35))           SET APR SWITCH             APRL
         AIF   (NOT &SGCPRGB(1)).TST2880     TEST FOR PCP        BBBBBB
&NUCSIZ  SETA  1984                     SET PCP SIZE               P256
         AGO   .SYSENDA                                            P256
.TST2880 AIF   (NOT &SGMENTB(68)).NO2880     2880 TEST           BBBBBB
&NUCSIZ  SETA  &NUCSIZ+128              SET 2880 ADDITION        BBBBBB
.NO2880  AIF   (NOT &SGCPUB(1) AND NOT &SGCPUB(2) AND NOT &SGCPUB(3) ANX
               D NOT &SGCPUB(4) AND NOT &SGCPUB(5)).TST85  30/75 BBBBBB
&NUCSIZ  SETA  &NUCSIZ+384              AD MOD 30-75 ADDITION    BBBBBB
         AGO   .TSTMFT                  BRANCH AROUND            BBBBBB
.TST85   AIF   (NOT &SGCPUB(6) AND NOT &SGCPUB(7)).TST195  85/91 BBBBBB
&NUCSIZ  SETA  &NUCSIZ+1648             ADD MOD 85/91 ADDITION   BBBBBB
         AGO   .TSTMFT                  BRANCH AROUND            BBBBBB
.TST195  AIF   (NOT &SGCPUB(9) AND NOT &SGCPUB(13)).TST155 MOD 195 TEST
&NUCSIZ  SETA  &NUCSIZ+2584             ADD MOD 195 ADDITION     BBBBBB
         AGO   .TSTMFT                  BRANCH AROUND            BBBBBB
.TST155  ANOP                                                   SA65796
&NUCSIZ  SETA  &NUCSIZ+512              NORMAL 370 ADDITION     SA65796
.TSTMFT  AIF   (NOT &SGCPRGB(4)).TSTM65 TEST FOR MFT               P256
&TYPE(23) SETB (&SGSUPRB(37))           MFT WITH ATTACH          A48653
&NUCSIZ  SETA  &NUCSIZ+2000             SET MFT SIZE             BBBBBB
         AIF   (NOT &SGCPRGB(12)).SYSENDA  TEST FOR TIME SLICING   P256
&NUCSIZ  SETA  &NUCSIZ+400              ADD TIME SLICING           P256
         AGO   .SYSENDA                                            P256
.TSTM65  AIF   (NOT &SGCPRGB(13)).MVT   TEST FOR MP65            BBBBBB
&NUCSIZ  SETA  4096                     SET MP65 SIZE            BBBBBB
         AGO   .SYSEND                                             P256
.MVT     ANOP                                                      P256
&NUCSIZ  SETA  &NUCSIZ+168              SET MVT                  BBBBBB
.SYSEND  ANOP                           MVT                       19022
&WKIDX   SETA  4                        GET MVT ADDITION FOR RQE  19022
.SYSENDA ANOP                           MFT/PCP                   19022
&WKIDX   SETA  &WKIDX+12                ADD BASIC SIZE            19022
         AIF   (NOT &SGSUPRB(33)).RMSSIZ     TEST FOR DDR         19022
&INDX    SETA  &INDX+2                  ADD 2 FOR DDR             19022
.RMSSIZ  AIF   (NOT &SGSUPRB(28)).SYSENDB    TEST FOR RMS         19022
&INDX    SETA  &INDX+1                  ADD 1 FOR RMS             19022
.SYSENDB ANOP                                                     19022
&INDX    SETA  &INDX+&SGCPRGA(1)        GET TOTAL RQES            19022
&NUCSIZ  SETA  &NUCSIZ+(&INDX*&WKIDX)   ADD TOTAL RQE SIZE        19022
&INDX    SETA  0                                                  19022
&WKIDX   SETA  0                                                  19022
         AIF   (&SGCPUB(1) OR &SGCPUB(2) OR &SGCPUB(3) OR &SGCPUB(4)   X
               OR &SGCPUB(5)).NOT2BAS                           SA65796
&TWOBS   SETB  1                                                SA65796
         AGO   .NO56                                            SA65796
.NOT2BAS ANOP                                                   SA65796
&TWOBS   SETB  (&SGCPRGB(13))
&CT2314  SETA  (&SG2314A+&SGCNTRA(3))-((&SG2305A/8)*7)-&SG3330A   20201
         AIF   (&CT2314 LT 256 AND NOT &SGCPRGB(4)).NO56          20201
&TWOBS   SETB  1                                                   RL17
.NO56    AIF   (&SGCHANB(1) AND &SGCHANB(4)).ALTINIT  CHAN 0 HSMP
&NCHSW   SETB  1
&NCHANSW SETB  1                        SET NEW CHANNEL SWITCH
.ALTINIT ANOP                           ROUTINE TO CHECK ATERNATE ADDRE
&INDX    SETA  1                        INITIALIZE INDEX
&CT2314  SETA  0                        CLEAR 2314 COUNTER       BBBBBB
&DEVCNT  SETA  &SGCNTRA(3)              GET DEVICE COUNT
.*
.*    THIS ROUTINE SETS UP A LIST OF PSUEDO DEVICE ADDRESSES FOR ALTER-
.*    NATE CHANNEL PATHES,TO BE ENTERED IN THE UCB LOOK UP TABLE
.*
&AINDX   SETA  1                       INITIALIZE ALTERNATE INDEX
&INDX    SETA  1                       INITIALIZE DEVICE INDEX
.ALTLOOP ANOP
&COUNTB  SETA  &SGDADRA(&INDX)/1048576  SET DEVICE INDEX           P256
&COMPNO1 SETA  &SGDADRA(&INDX)-&SGDADRA(&INDX)/4096*4096 GET ADDR  SSAP
&COMPNO2 SETA  &COMPNO1-4096*(&COMPNO1/4096) CLEAR HIGH ORDER      SSAP
&NCHAN   SETA  &COMPNO2/256             GET CHAN ADDR              SSAP
         AIF   (&SGDT08B(&COUNTB) OR &SGDT02B(&COUNTB)).LSTALT  SA69906
         AIF   (NOT &SGCHANB(&NCHAN*15+4)).NOSSALT     HSMPX TEST  I267
.*   TEST FOR ANY ALTERNATE SUB-SELECTOR CHANNEL PATHS TO DEVICE   SSAP
         AIF   (NOT &SGDAP2B(&COUNTB)).HSAP3 TEST FOR 'D' ALT.     SSAP
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/16*16*
               )+&NCHAN*256+208         GET 'D' ALT ADDRESS        SSAP
&AINDX   SETA  &AINDX+1                 UPDATE ALT INDEX           SSAP
&HSALT(&NCHAN+1) SETB 1                 SET MULTIPLE LCH ON CHAN   SSAP
.HSAP3   AIF   (NOT &SGDAP3B(&COUNTB)).HSAP4 TEST FOR 'E' ALT.     SSAP
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/16*16*
               )+&NCHAN*256+224         GET 'E' ALT ADDRESS        SSAP
&AINDX   SETA  &AINDX+1                 UPDATE ALT INDEX           SSAP
&HSALT(&NCHAN+1) SETB 1                 SET MULTIPLE LCH ON CHAN   SSAP
.HSAP4   AIF   (NOT &SGDAP4B(&COUNTB)).LSTALT TEST FOR 'F' ALT.    SSAP
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/16*16*
               )+&NCHAN*256+240         GET 'F' ALT ADDRESS        SSAP
&AINDX   SETA  &AINDX+1                 UPDATE ALT INDEX           SSAP
&HSALT(&NCHAN+1) SETB 1                 SET MULTIPLE LCH ON CHAN   SSAP
         AGO   .LSTALT                  BRANCH AROUND              SSAP
.NOSSALT ANOP                                                      SSAP
         AIF   (NOT &SGDAP1B(&COUNTB)).EXAMAP2  IS THERE A CH 1 ALTER.
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'100'   SET UCB SEQ NUM AND ALTERNATE ADDRESS
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX
.EXAMAP2 AIF   (NOT &SGDAP2B(&COUNTB)).EXAMAP3  NO CH 2-CHECK FOR 3
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'200'   YES-SET UP UCB NUMBER AND ALTERNATE ADDR.
&AINDX   SETA  &AINDX+1                UPDATE ALT. INDEX
.EXAMAP3 AIF   (NOT &SGDAP3B(&COUNTB)).EXAMAP4  NO CH 3-CHECK FOR 4
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'300'   YES SET CH3 ALT ADDR AND UCB NUM.
&AINDX   SETA  &AINDX+1                UPDATE ALT. INDEX
.EXAMAP4 AIF   (NOT &SGDAP4B(&COUNTB)).EXAMAP5  NO CH 4-CHECK FOR 5
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'400'    YES-SET ALT-ADDR AND UCB NUMBER
&AINDX   SETA  &AINDX+1                UPDATE ALT. INDEX
.EXAMAP5 AIF   (NOT &SGDAP5B(&COUNTB)).EXAMAP6  NO CH 5-CHECK FOR 6
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'500'    YES- SET ALT ADDR AND UCB NUMB.
&AINDX   SETA  &AINDX+1                UPDATE ALT INDEX
.EXAMAP6 AIF   (NOT &SGDAP6B(&COUNTB)).EXAMAP7    NO CH 6-CHECK FOR 7
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'600'    YES-SET ALT.ADDR AND UCB NUMBER
&AINDX   SETA  &AINDX+1                UPDATE ALT. INDEX
.EXAMAP7 AIF   (NOT &SGDAP7B(&COUNTB)).EXAMAP8  NO CH 7-CHECK IF 8 I267
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'700'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAP8 AIF   (NOT &SGDAP8B(&COUNTB)).EXAMAP9    NO CH 8-CHECK FORI 67
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'800'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAP9 AIF   (NOT &SGDAP9B(&COUNTB)).EXAMAPA    NO CH 9-CHECK FOR 10
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'900'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPA AIF   (NOT &SGDAPAB(&COUNTB)).EXAMAPB   NO CH 10-CHECK FOR 11
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'A00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPB AIF   (NOT &SGDAPBB(&COUNTB)).EXAMAPC   NO CH 11-CHECK FOR 12
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'B00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPC AIF   (NOT &SGDAPCB(&COUNTB)).EXAMAPD   NO CH 12-CHECK FOR 13
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'C00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPD AIF   (NOT &SGDAPDB(&COUNTB)).EXAMAPE   NO CH 13-CHECK FOR 14
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'D00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPE AIF   (NOT &SGDAPEB(&COUNTB)).EXAMAPF   NO CH 14-CHECK FOR 15
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'E00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.EXAMAPF AIF   (NOT &SGDAPFB(&COUNTB)).LSTALT    LAST CHECK        I267
&ALTLIST(&AINDX) SETA &INDX*4096+(&SGDADRA(&INDX)-&SGDADRA(&INDX)/256*2*
               56)+X'F00'     YES-SET ALT. ADDR AND UCB NUMBER     I267
&AINDX   SETA  &AINDX+1                 UPDATE ALT. INDEX          I267
.LSTALT  AIF   (&TYPE(15)).N7CHN        TEST FOR HI-CHAN SET
&CHIND   SETA  8                        SET CHAN COUNT             I267
         AIF   (&AINDX LT 2).N7ALT      TEST FOR NO ALTS           I267
  AIF  (&ALTLIST(&AINDX-1)-&ALTLIST(&AINDX-1)/4096*4096 GT 1791).P7CHN
.N7ALT   AIF   (&NCHAN LT 7).N7CHN      TEST FOR +7CHAN ADDR       I267
.P7CHN   ANOP                                                      I267
&TYPE(15) SETB 1                        SET INDICATOR              I267
&CHIND   SETA  30              SET CHAN INDEX FOR +7 CHAN          I267
&TWOBYT  SETB  1                        SET TWO BYTE LOOKUP IND.   I267
.N7CHN   ANOP                                                      I267
&INDX    SETA  &INDX+1                 UPDATE DEVICE INDEX
         AIF   (&INDX LE &SGCNTRA(3)).ALTLOOP  LAST NO-CONYINUE LOOP
&EOALTS  SETB  (&AINDX EQ 1)           NO ALTERNATE PATHS SET SWITCH
&TYPE(10) SETB (&AINDX NE 1)                                       SDAS
&ALTSWB  SETB  (NOT &EOALTS)           SET ANY ALTERNATE SWITCH
&ACOUNT  SETA  &AINDX-1                SETUP COUNBT UP ALTERNATES
&INDX    SETA  1                       REINITIALIZE
&AINDX   SETA  1                                   INDEX
.L1      AIF   (&ACOUNT LT 2 OR &ACOUNT GT 255).INITIAL            P256
&M       SETA  &ACOUNT                 GET NUMBER OF ALTERNATE ADDRS
.L2      AIF   (&M/2 LE 0).INITIAL     OUT-ALL ALTS SORTED
&M       SETA  &M/2  SET INDEX TO OFFSET FOR SECOND ALTER. ADDR
&K       SETA  &ACOUNT-&M              SET FOR END OF PASS CHK
&J       SETA  1                       SET OUR INDEX VALUE
.L3      ANOP      RETURN TO CONTINUE PASS AT SANE INCREMENT
&I       SETA  &J                      SET INDEX TO FIRST ADDR
.L4      AIF   (&ALTLIST(&I)-&ALTLIST(&I)/4096*4096 LT &ALTLIST(&I+&M)-1
               &ALTLIST(&I+&M)/4096*4096).L5  TRANSFER-ADDRS ORDRED
         AIF   (&ALTLIST(&I)-&ALTLIST(&I)/4096*4096 EQ &ALTLIST(&I+&M)-1
               &ALTLIST(&I+&M)/4096*4096).ABIOEND  ADDRESSES = ERROR
&T       SETA  &ALTLIST(&I)            ADDRESSES OUT OF ORDER
&ALTLIST(&I) SETA &ALTLIST(&I+&M)   SAVE FIRST ADDR AND PUT SECIND
&ALTLIST(&I+&M) SETA &T   ADDR IN FIRST - THEN PUT FIRST IN SEVOND
&I       SETA  &I-&M     RESET INNER INDEX TO MOVW ADDR. FARTHER BACK
         AIF   (&I GE 1).L4   TRANSFER TO MOVE ADDRESS FURTHER BACK
.L5      AIF   (&J+1 GT &K).L2         XFER FOR ANOTHHER PASS
&J       SETA  &J+1                    SET OUTER IND%X BY ONE
         AGO   .L3    TRXFER TO CONT. PASS AT SAME INCRENENT
.*
.*       INITIALIXATION ROUTINE
.*
.INITIAL ANOP
.*             SET UP FOR VOLUME STATISTICS                       19023
&EVAR    SETC  '0'                      SET READ TO 0             19023
&EVAW    SETC  '0'                      SET WRITE TO 0            19023
         AIF  ('&SGSCHDC(15)' EQ '').ESVTST  TEST FOR EVA         19023
&EVAR    SETC  '&SGSCHDC(15)'(1,3)      SET READ THRESHOLD        19023
&EVAW    SETC  '&SGSCHDC(15)'(4,3)      SET WRITE THRESHOLD       19023
&VOLSTAT SETB  1                        SET VOL STAT BIT          19023
&TMSK    SETA  64                       SET EVA BIT               19023
.ESVTST  AIF   (NOT &SGSCHDB(15)).NESV  TEST FOR ESV              19023
&VOLSTAT SETB  1                        SET VOL STAT BIT          19023
&TMSK    SETA  192                      SET ESV MASK              19023
.NESV    AIF   (NOT &SGSCHDB(31)).NCON  TEST FOR CONSOLE          19023
&TMSK    SETA  &TMSK+32                 SET CONSOLE BIT           19023
.NCON    ANOP                                                     19023
&DEVCNT  SETA  &SGCNTRA(3)              SET UP DEVICE COUNT
         AIF   (&DEVCNT EQ 0).ERROR    CHECK FO ZERO COUNT
&INDX    SETA  1                        RESET INDEX
&WKIDX   SETA  1                        INITIALIZE WORK AREA INDEX TWBS
&AINDX   SETA  1                        RESET ALTERNATE INDEX
&COUNT   SETA  0                       RESET COUNT
&CUINDX  SETA 0                       INITIALIZE CONTROL INIT INDEX
&SAVECU  SETA  257                      CONTROL UNIT COMPARE
&DEVNDX  SETA  0                        NUMBER OF DEVICES/CU
&STATAB  SETA  1                        INITIALIZE STATAB INDEX    STAT
&STCNT   SETA  1                        INITIALIZE STAT COUNT      P256
&DPCNT   SETA  1                        INITIALIZE DATA PATH CTR   DPTH
         AIF   (&SGCPRGA(1) EQ 0).ERRORA     CHECK FOR O Q ELEMENTS SP
&MPXCNT  SETA 1                        INITIALIZE UCBADD COUNT
&I       SETA  1                       INITIALIZE TCH COUNT
&J       SETA  1                       INITIALIZE CHANNEL SETCH CNT
&K       SETA  1                       INITIALIZE LCH MOD COIUT
&M       SETA  1                       INITIALIZE CHANN COUNT
&T       SETA  1                       INITIALIZE CU COUNT
         PUNCH '         AGO   .GBL      SET UP GLOBALS'          20201
         PUNCH '.IOSTART ENTRY IECIOS'                            20201
         PUNCH 'IECIOS  DS  0D'
         AIF   (&TWOBS EQ 1).TBS1                                  RL17
         PUNCH '         AGO   .IECIOS     TO ASSEMBLE MAINLINE IOS'
         AGO   .TBS1A                                              RL17
.TBS1    ANOP                           GENERATE THE SIMULATOR     ITEL
&SIMTYPE SETC  'FULL'                   GENERATE FULL SIMULATOR    ITEL
         AIF   (NOT &SGITELB(1)).S360   IS THIS A S/370            ITEL
&SIMTYPE SETC  'SHORT'                  GENERATE SHORT SIMULATOR   ITEL
         AIF   (&SGITELB(2)).S360       IS IT A 155 OR 165         ITEL
&SIMTYPE SETC  'NULL'                   GENERATE NULL SIMULATOR    ITEL
.S360    ANOP                                                      ITEL
&SIMPROG SETC  'MFT'                    MFT CONTROL PROGRAM        ITEL
         AIF   (&SGCPRGB(4)).PUNCHIT                               ITEL
&SIMPROG SETC  'M65MP'                  M65MP CONTROL PROGRAM      ITEL
         AIF   (&SGCPRGB(13)).PUNCHIT                              ITEL
&SIMPROG SETC  'MVT'                    MVT CONTROL PROGRAM        ITEL
.PUNCHIT PUNCH '         ITLPCSIM TYPE=&SIMTYPE,CTRLPGM=&SIMPROG'  ITEL
         PUNCH '   AGO   .UCB1   TO ASSEMBLE FIRST UCB  '          ITEL
.TBS1A   PUNCH '.RQE  ANOP'                                        ITEL
         AIF   (NOT &SGSUPRB(33)).SDDR  TEST FOR DDR              19022
&DDRCNT  SETA  1                        SET DDR INDICATOR         19022
         AIF   (NOT &SGSUPRB(34)).SDDR  TEST FOR SYSRES           19022
&DDRCNT  SETA  2                        SET DDR SYSRES INDICATOR  19022
.SDDR    ANOP                                                     19022
  PUNCH ' IECIOQE &SGCPRGA(1),&SGCPRGB(8),&DDRCNT,&SGSUPRB(28)'  19022
         AIF   (&TWOBS EQ 1).TBS2                                  RL17
         PUNCH '          AGO   .IOSB   '
         AGO   .DEVLOOP
.TBS2    PUNCH '         AGO   .IECIOS  '
.*             THE FOLLOWING SETS UP PARAMETERS FOR THE UCB
.DEVLOOP ANOP
&STATAB  SETA  &STATAB-&STATAB/256*256  GET 1 BYTE INDEX           P256
&COUNTB  SETA  &SGDADRA(&INDX)/1048576  SET DEVICE INDEX           P256
&COUNTCU SETA (&SGDADRA(&INDX)-&SGDADRA(&INDX)/1048576*1048576)/4096
.*                                                                 P256
&UCBNO   SETA  &INDX                   SET UCB LABEL NUMBER
.*
.*       UCB LOOKUP GOES HERE
.*       THE FOLLOWING COMPUTES THE ALLOCATION CHAN. MASK
.*                 **   THE FOLLOWING ROUTINE COMPARES ALTERNATE TO **
.*                 ** NEXT ACTUAL DEVICE ADDRESS                    **
.*
.LUSTRT  AIF   (&LSTMAC AND &EOALTS).COUT  ALT CHKS ALL DONE
         AIF   (&LSTMAC).ALTA          CONTINUE WITH ALTERNTES
         AIF   (&EOALTS).SKIPCHK       NO MORE ALTS.-SKIP CHECK
         AIF   (&SGDADRA(&INDX)-&SGDADRA(&INDX)/4096*4096 GT &ALTLIST(&*
               AINDX)-&ALTLIST(&AINDX)/4096*4096).ALTA
.SKIPCHK ANOP
&COMPNO1 SETA  &SGDADRA(&INDX)-&SGDADRA(&INDX)/4096*4096           P256
.*      THIS SECTION SETS UP THE SYMBOLIC DEVICE ADDRESS
        CONVERT TO=EBCDIC,VALUE=&COMPNO1,DIGITS=3
&DEVAD   SETC  '&EBCDIC'              SET UP DEVICE ADDRESS
&DEVADE  SETC  '&DEVAD'                 SET CHAR ADDRESS
&ALTSW   SETB  0                       SE< ALTERNATE RUN SWITCH
         AGO   .COMPUTE
.ALTA    ANOP
&COMPNO1 SETA  &ALTLIST(&AINDX)-&ALTLIST(&AINDX)/4096*4096  BREAK OUTUA
&ASEQNO  SETA  &ALTLIST(&AINDX)/4096
&ALTSW   SETB  1                       ALTERNATE DEVICE SWOTCH OM
&EOALTS  SETB  (&AINDX EQ &ACOUNT)     SET LAST ALTERNAT PROCESSED SW.
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX
.COMPUTE ANOP
&COMPNO2 SETA  &COMPNO1-4096*(&COMPNO1/4096)    CLEAR HIGH ORD BYTE
.*    COMPUTE CHANNEL ADDRESS
&NCHAN   SETA  &COMPNO2/256            EXTRAAT AHANNEL ADDRESS
&NCU     SETA  (&COMPNO2-&NCHAN*256)/16   EXTRACT CNTRL UNIT ADDR
&NUA     SETA  &COMPNO2-(&NCHAN*256+&NCU*16)     EXTRACT UNIT ADDR
.*                 **   THE FOLLOWING ROUTINE COMPUTES CHANNEL INDEX **
.*                 ** FACTORS AND INSERTS THEM IN A MODEL STATMENT   **
.*                 ** TO BE PROCESSED AT PASS TWO OF SYSGEN          **
         AIF   (&NCHAN GT &OCHAN).NCHRTN   'NEW CHAN. AD HIGH-TO NEW RT
         AIF   (&NCHAN LT &OCHAN).ORDERR    LOW-TO OUT OF ORDER ERROR
         AIF   (&IRSW EQ 0).NCHRTN          INITIAL TIME-TO NEW RTN
         AIF   (&NCU GT &OCU).NCURTN        NEW CU-TO CU INDX UPDATE
         AIF   (&NCU LT &OCU).ORDERR        LOW- OUT OF ORDER
         AIF   (&NUA GT &OUA).UAUDTE        NEW UA- TO UPDATE
         AGO   .ORDERR                      EQUAL OR LOW UA.-ERROR
.UAUDTE  AIF   (&ALTSW EQ 1).ALTPR      ALTERNATE PATH-USE ASEQNO
&ACTLSW  SETB  1
&UCBAD   SETA  &INDX                   SET NEW UCB NUMBER
         AIF   (&MPXCNT NE 1).UCBLAB    CHECK FOR FIRST UCB LOOK UP
         PUNCH '.LST&MPXCNT ANOP   UCB LOOKUP ENTRY '              ANOP
         PUNCH 'LIST     DS    0H       THIS IS THE LIST OF UCB ADDS'
         PUNCH 'IECILK2  DS    0C'     SET UP LOOK UP LABELS
&MPXCNT  SETA  &MPXCNT+1                UPDATE COUNTER             ANOP
         PUNCH '         AGO   .LST&MPXCNT    '                    ANOP
.UCBLAB  ANOP                                                      ANOP
 PUNCH '.LST&MPXCNT IECULK3 &OUA,&NUA,&UCBAD,&NCUSW,&CUINDX,&LSTDEV,&NC*
               HAN,&DACNT,&SGDT03B(&COUNTB),&CUNEG'
&MPXCNT  SETA  &MPXCNT+1               UPFATE UCBADD COUNT
         PUNCH '         AGO   .LST&MPXCNT    TO NEXT UCB ADD RNTRY'
&OUA     SETA  &NUA                         UPDATE OLD UNIT ADDR
         AIF   (&CHIND GE 0).CKCUN     CHECK FOR NEG CHAN INDEX
&CHIND   SETA  0                       IF NEG. SET TO ZRO
.CKCUN   AIF   (&CUINDX GE 0).COMPARE  CHECK FOR NEG CU IND%X
&CUINDX  SETA  0                       IF NEG. SET TO ZEERO
         AGO   .COMPARE                ??   RETURN TO COMPARE(MAYBE)
.ALTPR   ANOP
&UCBAD   SETA  &ASEQNO                 SET UCB NUM. FOR THIS ALTERNATE
 PUNCH '.LST&MPXCNT IECULK3 &OUA,&NUA,&UCBAD,&NCUSW,&CUINDX,&LSTDEV,&NC*
               HAN,&DACNT,&SGDT03B(&SGDADRA(&ASEQNO)/1048576),&CUNEG'
.*                                                                 P256
&MPXCNT  SETA  &MPXCNT+1               UPFATE UCBADD COUNT
         PUNCH '         AGO   .LST&MPXCNT    TO NEXT UCB ADD RNTRY'
         AIF   (NOT &SGDT03B(&SGDADRA(&ASEQNO)/1048576)).NALTDA    P256
         AIF   (&SGDU07B(&SGDADRA(&ASEQNO)/1048576)).NALTTA     SA71606
&DACNT   SETA  &DACNT+1                INDICATE CH PGM NECESSARY
         AGO   .NALTTA                  SKIP TAPE TEST
.NALTDA  ANOP                          NOT DIREST ACCESS-SKIP COUNT UP
         AIF   (NOT &SGDT01B(&SGDADRA(&ASEQNO)/1048576)).NALTTA    P256
&DACNT   SETA  &DACNT+1                INDICATE CH PGM NECESSARY
.NALTTA  ANOP                          NOT DIREST ACCESS-SKIP COUNT UP
&ALTSWA  SETB  1                       SET ALTERNATE SWITCH THIS CHANNE
&OUA     SETA  &NUA                     UPDATE OLD UNIT ADDRESDS
&NCHANSW SETB  0                       RESET NEW CHANNEL SWITCH
&NCUSW   SETB  0                       RESET NEW CONTROL UNIT SWITCH
         AIF   (&CHIND GE 0).CKCUN1    CHECK FOR NEG CHAN NDX
&CHIND   SETA  0                       IF NEG. SET TO ZERO
.CKCUN1  AIF   (&CUINDX GE 0).LUSTRT   CHECK FOR CU INDEX NEG.
&CUINDX  SETA  0                       IF NEG. SET TO ZERO
         AGO   .LUSTRT                      RETURN TO COMPARE
.*                          NEW CHANNEL ROUTINE
.NCHRTN  AIF   (&IRSW EQ 0).NCHCON      FIRST TIME NO UPDATE TO CHAN ID
&CHIND   SETA  &CHIND+1
&LCHCNT  SETA  1
         AIF   (NOT &SGCHANB(&OCHAN*15+2)).SELCH1 TEST FOR MPX     I267
&CH(&OCHAN+1)  SETA  1                  SET MPX TYPE FOR CHANNEL TABLE
&SLCHS   SETA  1                        YES THEN ONLY ONE LCH
         AIF   (&OCHAN NE 0).NOTCH0                              A40532
         PUNCH '.SRCH&J  ANOP         CHAN SEARCH FOR MPX'
   PUNCH '    IECICS &OCHAN,&DACNT,&SGCPRGB(13),,0,0,0,0,0,(0,0,0,0)'
&J       SETA  &J+1                    UPDATE CSRCH MOD COUNT
         PUNCH '         AGO   .SRCH&J     TO NEXT SEARCH '
.NOTCH0  ANOP                                                    A40532
&TYPESW  SETB  0                        SET CHAN/TYPE TO MPXLER
&LCHTOT  SETA  &LCHTOT+&SLCHS           UPDATE TOTAL OF LCS
&LCHSTOT SETA  0                       REINITIALIZE SUBTOTAL OF LCHS
         AIF   (NOT &LSTMAC).NLST       TEST FOR LAST DEVICE
&LASTCH  SETB  1                        SET IND IF LAST
.NLST    ANOP
         PUNCH '.TCH&I   ANOP       TCH FOR MPX'
         PUNCH '         IECXTCH &LCHTOT,0,&OCHAN,,&SGCPRGB(13),&TWOBS,X
               &APR,&LASTCH,0,0'                                  19022
&I       SETA  &I+1                    UPDATE TCH MOD COUNT
         PUNCH '         AGO   .TCH&I     TO NEXT TXH'
         AIF   (&OCHAN NE 0).SKPTCH     IF NOT CH0 DO ICS        A40532
         AGO   .REINIT                 TO REINITIALIZE COUNTD
.*       THE FOLLOWING IS THE MACRO INST TO BUILD LCHWRDS
.SELCH1  AIF   (NOT &SGCHANB(&OCHAN*15+4)).NOTHSPA     TEST FOR HSMPX
         AIF   (&HSALT(&OCHAN+1)).TOTSET     TEST FOR MULTIPLE LCH SSAP
&LCHSTOT SETA  1                      YES, SET ON LCH
.TOTSET  ANOP                                                      SSAP
&CH(&OCHAN+1)  SETA  2                  SET HSMPX TYPE FOR CHAN TABLE
         AGO   .NOTHSPM
.NOTHSPA ANOP
&CH(&OCHAN+1)  SETA  3                  SET SEL TYPE FOR CHANNEL TABLE
.NOTHSPM ANOP                                                     20201
.*       THIS BUILDS THE PARAMETERS FOR TST CHANNEL CODE MACRO
&TYPESW  SETB  (NOT &SGCHANB(&OCHAN*15+4))   SET SEL. MODE IF NOT HSMPX
&LCHCNT  SETA  1
         AIF   (NOT &ACTLSW).SKPTCH
         PUNCH   '.TCH&I    ANOP   TEST CHANNEL  '                 ANOP
.TCHLOOP ANOP
&LCHTAB  SETA  &LCHTOT+&LCHCNT         SET LCH NUMBER
         AIF   (NOT &LSTMAC).TCHLP1     TEST FOR LAST ACTUAL DEV   TCHA
         AIF   (&LCHCNT+1 LE &LCHSTOT).TCHLP1     TEST FOR LAST PASS
&LASTCH  SETB  1                        SET LAST TCH SWITCH        TCHA
.TCHLP1  ANOP                                                      TCHA
         AIF   (NOT &HSALT(&OCHAN+1)).NHTCH TEST CHAN FOR ALT PATH SSAP
         AIF   (&OCHAN EQ 0).CH0        WAS IT CHANNEL '0'         SSAP
&SSCH(&OCHAN) SETB 1                    SET CHANNEL INDICATOR      SSAP
.*   REINITIALIZE AND SET UP PRIMARY AND ALTERNATE SS PATHS        SSAP
.CH0     ANOP                                                      SSAP
&SSTCH2  SETB  0                                                   SSAP
&SSTCH3  SETB  0                                                   SSAP
         AIF   (NOT &HSPRIM2(&LCHCNT) AND NOT &LCHAP2(&LCHCNT)).STCH
.*   SET SWITCH IF 'D' IS PRIMARY OR ALTERNATE                     SSAP
&SSTCH2  SETB  1                        SET SWITCH                 SSAP
.STCH    AIF   (NOT &HSPRIM3(&LCHCNT) AND NOT &LCHAP3(&LCHCNT)).STCH1
.*   SET SWITCH IF 'E' IS PRIMARY OR ALTERNATE                     SSAP
&SSTCH3  SETB  1                        SET SWITCH                 SSAP
.STCH1   ANOP                                                      SSAP
 PUNCH ' IECXTCH &LCHTAB,&TYPESW,(&SSCH(1),&SSCH(2),&SSCH(3),&SSCH(4),&*
               SSCH(5),&SSCH(6)),(&HSPRIM1(&LCHCNT),&SSTCH2,&SSTCH3,&LC*
               HAP4(&LCHCNT)),&SGCPRGB(13),&TWOBS,&APR,&LASTCH,0,0'
.*                                                                19022
.*   CLEAR THE  PRIMARY SWITCHES FOR THIS LCH                      SSAP
&HSPRIM1(&LCHCNT)  SETB  0              CLEAR PRIMARY SW1          SSAP
&HSPRIM2(&LCHCNT)  SETB  0              CLEAR PRIMARY SW2          SSAP
&HSPRIM3(&LCHCNT)  SETB  0              CLEAR PRIMARY SW3          SSAP
         AIF   (&OCHAN EQ 0).BYPSEL                                SSAP
&SSCH(&OCHAN) SETB 0                    CLEAR SWITCH               SSAP
         AGO   .BYPSEL                  BRANCH AROUND              SSAP
.NHTCH   ANOP                                                     19026
         AIF   (NOT &SGSUPRB(34)).NOTSYS     TEST FOR SYSRES DDR  19022
         AIF   (&SK1(&LCHTAB+60) OR &SK1(&LCHTAB+120) OR &SK1(&LCHTAB+1X
               80) OR &SK2(&LCHTAB) OR &SK2(&LCHTAB+60) OR &SK2(&LCHTABX
               +120) OR &SK2(&LCHTAB+180)).SYSRSET                19E04
         AIF    (&SK3(&LCHTAB) OR &SK3(&LCHTAB+60) OR &SK3(&LCHTAB+120)X
               OR &SK3(&LCHTAB+180) OR &SK4(&LCHTAB) OR &SK4(&LCHTAB+60X
               ) OR &SK4(&LCHTAB+120) OR &SK4(&LCHTAB+180)).SYSRSET
         AGO   .NOTSYS                  BRANCH AROUND             19022
.SYSRSET ANOP                                                     19022
&SYSDDR  SETB  1                        SET BIT FOR TCH           19022
.NOTSYS  ANOP                                                     19022
         PUNCH '    IECXTCH &LCHTAB,&TYPESW,(&LCHAP1(&LCHCNT),&LCHAP2(&*
               LCHCNT),&LCHAP3(&LCHCNT),&LCHAP4(&LCHCNT),&LCHAP5(&LCHCN*
               T),                                           *****'
         AIF   (&TYPE(15) EQ 0).N7TCH   TEST FOR + 7 CHAN          I267
 PUNCH '               &LCHAP6(&LCHCNT),&LCHAP7(&LCHCNT),&LCHAP8(&LCHCN*
               T),&LCHAP9(&LCHCNT),&LCHAP10(&LCHCNT),&LCHAP11(&LCHCNT),*
                                                         ******'   I267
 PUNCH '               &LCHAP12(&LCHCNT),&LCHAP13(&LCHCNT),&LCHAP14(&LC*
               HCNT),&LCHAP15(&LCHCNT)),(0,0,0,0),&SGCPRGB(13),&TWOBS,&*
               APR,&LASTCH,&OLT2880(&LCHCNT),&SYSDDR'             19026
         AGO   .N7TCHA                  BRANCH AROUND              I267
.N7TCH   ANOP
 PUNCH '               &LCHAP6(&LCHCNT)),(0,0,0,0),&SGCPRGB(13),&TWOBS,X
               &APR,&LASTCH,&OLT2880(&LCHCNT),&SYSDDR'            19026
.N7TCHA  ANOP                                                      I267
&SYSDDR  SETB  0                        CLEAR SWITCH              19022
         AIF   (&LCHAP1(&LCHCNT) EQ 0).CHCT2 TEST FOR AP ON 1      TCHB
&CHCT(1) SETA  &CHCT(1)+1               UPDATE COUNTER FOR CHAN1   TCHB
.CHCT2   AIF   (&LCHAP2(&LCHCNT) EQ 0).CHCT3 TEST FOR AP ON 2      TCHB
&CHCT(2) SETA  &CHCT(2)+1               UPDATE COUNTER FOR CHAN 2  TCHB
.CHCT3   AIF   (&LCHAP3(&LCHCNT) EQ 0).CHCT4 TEST FOR AP ON 3      TCHB
&CHCT(3) SETA  &CHCT(3)+1               UPDATE COUNTER FOR CHAN 3  TCHB
.CHCT4   AIF   (&LCHAP4(&LCHCNT) EQ 0).CHCT5 TEST FOR AP ON 4      TCHB
&CHCT(4) SETA  &CHCT(4)+1               UPDATE COUNTER FOR CHAN 4  TCHB
.CHCT5   AIF   (&LCHAP5(&LCHCNT) EQ 0).CHCT6 TEST FOR AP ON 5      TCHB
&CHCT(5) SETA  &CHCT(5)+1               UPDATE COUNTER FOR CHAN 5  TCHB
.CHCT6   AIF   (&LCHAP6(&LCHCNT) EQ 0).CHCT7                       I267
&CHCT(6) SETA  &CHCT(6)+1               UPDATE COUNTER FOR CHAN 6  I267
.CHCT7   AIF   (&LCHAP7(&LCHCNT) EQ 0).CHCT8                       I267
&CHCT(7) SETA  &CHCT(7)+1                                          I267
.CHCT8   AIF   (&LCHAP8(&LCHCNT) EQ 0).CHCT9                       I267
&CHCT(8) SETA  &CHCT(8)+1                                          I267
.CHCT9   AIF   (&LCHAP9(&LCHCNT) EQ 0).CHCT10                      I267
&CHCT(9) SETA  &CHCT(9)+1                                          I267
.CHCT10  AIF   (&LCHAP10(&LCHCNT) EQ 0).CHCT11                     I267
&CHCT(10) SETA &CHCT(10)+1                                         I267
.CHCT11  AIF   (&LCHAP11(&LCHCNT) EQ 0).CHCT12                     I267
&CHCT(11) SETA &CHCT(11)+1                                         I267
.CHCT12  AIF   (&LCHAP12(&LCHCNT) EQ 0).CHCT13                     I267
&CHCT(12) SETA &CHCT(12)+1                                         I267
.CHCT13  AIF   (&LCHAP13(&LCHCNT) EQ 0).CHCT14                     I267
&CHCT(13) SETA &CHCT(13)+1                                         I267
.CHCT14  AIF   (&LCHAP14(&LCHCNT) EQ 0).CHCT15                     I267
&CHCT(14) SETA &CHCT(14)+1                                         I267
.CHCT15  AIF   (&LCHAP15(&LCHCNT) EQ 0).BYPSEL                     I267
&CHCT(15) SETA &CHCT(15)+1                                         I267
.*                                                                 NTCH
.BYPSEL  ANOP                                                      SSAP
&LCHAP1(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP2(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP3(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP4(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP5(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP6(&LCHCNT)  SETB  0               CLEAR SWITCH               SSAP
&LCHAP7(&LCHCNT) SETB  0                CLEAR SWITCH               I267
&LCHAP8(&LCHCNT) SETB  0                CLEAR SWITCH               I267
&LCHAP9(&LCHCNT) SETB  0                CLEAR SWITCH               I267
&LCHAP10(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHAP11(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHAP12(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHAP13(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHAP14(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHAP15(&LCHCNT) SETB 0                CLEAR SWITCH               I267
&LCHCNT  SETA  &LCHCNT+1                UPDATE INDEX               SSAP
         AIF   (&LCHCNT LE &LCHSTOT).TCHLOOP GO BACK IF NOT LAST   SSAP
&I       SETA  &I+1                    UPDATE TCH COUNTER
         PUNCH '         AGO   .TCH&I      TO NEXT TCH MOD'
&ACTLSW  SETB  0
.SKPTCH  ANOP
.*     THIS IS THE MACRO INSTRUCTION FOR CHANNEL SEARCH/1 PER CHAN
.*    THE FOLLOWING LOOP IS USED TO COMPUTE THE PARAMETERS FOR CHAN SCH
&LCHCNT  SETA  1                       RESET COMMON COUNTER
         PUNCH '.SRCH&J  ANOP       CHANNEL SEARCH MOD&J'
         PUNCH '               IECICS &OCHAN,&DACNT,&SGCPRGB(13),      *
                                          ************'         SA56509
         AIF   (NOT &HSALT(&OCHAN+1)).NHCS   TEST FOR HSMPX ALT    SSAP
         PUNCH '               (&LCHTOT,                           I267*
                               ********'                           I267
&LCHCNT  SETA  1                        REINITIALIZE COUNTER       SSAP
.HSCSLP1 PUNCH '               1,&DAHS(&LCHCNT),                       *
                                            *'                     SSAP
&LCHCNT  SETA  &LCHCNT+1                UPDATE COUNTER             SSAP
         AIF   (&LCHCNT LE &LCHSTOT).HSCSLP1 TEST FOR END          SSAP
         AGO   .CSEND                                              SSAP
.NHCS    ANOP                                                      SSAP
         AIF   (&OCHAN EQ 0).CSP0
         AIF   (NOT &SGCHANB(&OCHAN*15+2)).CSP01                  M0162
&LCHTOT  SETA  &LCHTOT-1                ADJ FOR MPX               M0162
         AGO   .CSP0                                              M0162
.CSP01   ANOP                                                     M0162
&LCHST   SETA  0                        CLEAR START COUNT          I267
.CS0     AIF   (&OCHAN GT 3).CS1        TEST FOR S1                I267
&SLCHS   SETA  &OCHAN*60+&LCHTOT+&LCHSTOT    GET COUNT OF LCH'S    I267
&LCHCNT  SETA  &OCHAN*60+1+&LCHST       GET START POINTER          I267
         AIF   (&S1(&LCHCNT)).PCHST     GO PUNCH IF BIT SET        I267
&LCHST   SETA  &LCHST+1                 UPDATE START COUNT         I267
         AGO   .CS0                     GO TEST NEXT BIT           I267
.CS1     AIF   (&OCHAN GT 7).CS2        TEST FOR S2                I267
&SLCHS   SETA  (&OCHAN-4)*60+&LCHTOT+&LCHSTOT   GET COUNT OF LCH'S I267
&LCHCNT  SETA  (&OCHAN-4)*60+1+&LCHST   GET START POINTER          I267
         AIF   (&S2(&LCHCNT)).PCHST     GO PUNCH IF BIT SET        I267
&LCHST   SETA  &LCHST+1                 UPDATE START COUNT         I267
         AGO   .CS1                     GO TEST NEXT BIT           I267
.CS2     AIF   (&OCHAN GT 11).CS3       TEST FOR S3                I267
&SLCHS   SETA  (&OCHAN-8)*60+&LCHTOT+&LCHSTOT     GET COUNT OF LCH'I267
&LCHCNT  SETA  (&OCHAN-8)*60+1+&LCHST   GET START POINTER          I267
         AIF   (&S3(&LCHCNT)).PCHST     GO PUNCH IF BIT SET        I267
&LCHST   SETA  &LCHST+1                 UPDATE START COUNT         I267
         AGO   .CS2                     GO TEST NEXT BIT           I267
.CS3     ANOP                                                      I267
&SLCHS   SETA  (&OCHAN-12)*60+&LCHTOT+&LCHSTOT  GET COUNT OF LCH'S I267
&LCHCNT  SETA  (&OCHAN-12)*60+1+&LCHST  GET START POINTER          I267
         AIF   (&S4(&LCHCNT)).PCHST     GO PUNCH IF BIT SET        I267
&LCHST   SETA  &LCHST+1                 UPDATE START COUNT         I267
         AGO   .CS3                     GO TEST NEXT BIT           I267
.PCHST   PUNCH '               (&LCHST,                            I267*
                                ********'                          I267
         AGO   .STARTA                  GO TEST FOR SWITCH         I267
.CSP1    PUNCH '               &S1(&LCHCNT),&SK1(&LCHCNT),         I267*
                                                      *'           I267
         AGO   .LCHUP                                              I267
.CSP2    PUNCH '               &S2(&LCHCNT),&SK2(&LCHCNT),         I267*
                                                      *'           I267
         AGO   .LCHUP                                              I267
.CSP3    PUNCH '               &S3(&LCHCNT),&SK3(&LCHCNT),         I267*
                                                      *'           I267
         AGO   .LCHUP                                              I267
.CSP4    PUNCH '               &S4(&LCHCNT),&SK4(&LCHCNT),         I267*
                                                      *'           I267
.LCHUP ANOP                                                        I267
&LCHCNT  SETA  &LCHCNT+1                UPDATE POINTER             I267
         AIF   (&LCHCNT GT &SLCHS).CSEND     TEST FOR LAST         I267
.STARTA  AIF   (&OCHAN LT 4).CSP1       TEST FOR SWITCH 1          I267
         AIF   (&OCHAN LT 8).CSP2                                  I267
         AIF   (&OCHAN LT 12).CSP3                                 I267
         AGO   .CSP4                                               I267
.CSP0    ANOP
         PUNCH '               (&LCHTOT,                           I267*
                               ********'                           I267
&SK0     SETB  (&DACNT GT 0)                                       MXDA
         PUNCH '               1,&SK0,                             MXDA*
                                  *'                               MXDA
         AIF   (NOT &SGCHANB(&OCHAN*15+2)).CSEND    MPX?          M0162
&LCHTOT  SETA  &LCHTOT+&SLCHS           UPDATE TOTAL OF LCHS      M0162
.CSEND   ANOP
         AIF   (&SLCHS LT 2 OR &PRIR EQ 0).DONTSET  MULT LCHS?   A36305
&PRI     SETB  1                        YES SET PRIORITY         A36305
.DONTSET ANOP                                                    A36305
&SLCHS   SETA  0                        CLEAR SWITCH               RL18
&LCHCNT  SETA  &LCHCNT-1               REDUCE LCHCNT TO ACTUAL  COUNT
  PUNCH '               &LSTDEV),&ALTSWA,&ALTSWB,&PRIR,&SDAA(&OCHAN+1),X
               &TWOBS,(&SSDA(1),&SSDA(2),&SSDA(3),&SSDA(4)),&PRI'
&SSDA(1) SETB  0                                                   SSDA
&SSDA(2) SETB  0                                                   SSDA
&SSDA(3) SETB  0                                                   SSDA
&SSDA(4) SETB  0                                                   SSDA
&J       SETA  &J+1                    UPDATE CHAN SRCH COUNTER
         PUNCH '         AGO   .SRCH&J     TO NEXT CHAN SRCH MOD'
&ALTSWA  SETB  0                       RESET THIS XHAN ALTERNATE SW
.REINIT  ANOP                          REINITIALIZE LCH COUNTS
.*             REMOVE SET B - SET NEW CHANNEL SWITCH
&SLCHS   SETA  0                        CLEAR MPX SWITCH           P256
&NCHSW   SETB  1                       SET UP LCH NEW CH ANNEL SW
&LCHCNT  SETA  1                       INITIALIZE COUNT
&DACNT   SETA  0                       RESET DIRECT ACCESS COUNT
&LCHTOT  SETA  &LCHTOT+&LCHSTOT        UPDATE LCH TOTAL
&LCHSTOT SETA  0
&ACTLSW  SETB  0                                                 A40472
        AIF   (&LSTDEV).LSTMAC         LAST DEVUCE TO END ROUTINR
.NCHCON  ANOP
&CHIND   SETA &OCU+&CHIND-&NCU   COMP. NEW INDEX AND INSERT
&CNEG    SETB  (&CHIND LT 0)           SET INDEX MINUS SWITCH
         PUNCH '.TAB&M   ANOP         LOOK UP UCB TAB'
         AIF   (&M NE 1).LSTLAB        CHECK FOR FIRST CHAN ENTRY
         PUNCH 'UCBTAB   DS    0C         THIS IS THE LOOK UP TAB'
         PUNCH 'IECILK1  DS    0C'   SET UP LOOK UP TAB LABEL
.LSTLAB PUNCH ' IECULK1 &CHIND,&OCHAN,&NCHAN,&LSTDEV,&CNEG,&IRSW,&TYPE(X
               15)'                                                I267
&M       SETA  &M+1                    UPDATE CHANNEL COUNT
         PUNCH '         AGO   .TAB&M     TO NEXT CHANNEL ENTRY'
&OCHAN   SETA  &NCHAN                  UPDATE OLD CHANNEL ADDR.
&NCHANSW SETB  1                   SET NEW CHANNEL
.NCURTN  AIF   (&IRSW EQ 0).NCUCON      INITIAL RUN NEW CONTROL UNIT
&CUINDX  SETA  &CUINDX+2               AUTO UPDATE OF CU INDEX
.NCUCON  ANOP
&CUINDX  SETA  (2*&OUA)-(2*&NUA)+&CUINDX      NEW CNTRL UNIT INDEX
&CUNEG   SETB  (&CUINDX LT 0)          SET CU INDEX MUNUS SWITCH
         AIF   (&TWOBYT).NOTB          TWO BYTE SET              A66869
&TWOBYT  SETB  (&CUINDX/2 GT 255)      SET TWO BYTE LOOKUP       A66869
.NOTB    ANOP                                                    A66869
   PUNCH '.TCU&T   IECULK2 &CUINDX,&OCU,&NCU,&CHIND,&NCHANSW,&CNEG,&CUN*
               EG'
&T       SETA  &T+1                    UPDATE CU MOD COUNT
         PUNCH '         AGO   .TCU&T       TO NEXT ENTRY'
&DPFNSA  SETA  &CUINDX+(2*&NUA)         GET END FENCE INDEX        DPTH
&DPFNS   SETA  &NUA                     SAVE UA FOR END FENCE      DPTH
         AIF   (&NCHANSW).DAPTH1        TEST FOR NEW CHANNEL       DPTH
         AIF   (NOT &SGCHANB(&NCHAN*15+4)).DAPTH4      TEST FOR HSMPX
         AIF   (&NCU LT 12).DAPTH4      TEST FOR MPX ADDR          DPTH
         AGO   .DAPTH2                  BRANCH AROUND              DPTH
.DAPTH1  AIF   (NOT &CUNEG).DAPTH2      TEST FOR NEG IND           DPTH
&DP(&DPCNT) SETA 0                      SET FIRST DP TH ZERO       DPTH
         AGO   .DAPTH3                  BRANCH AROUND              DPTH
.DAPTH2  ANOP                                                      DPTH
&DP(&DPCNT) SETA &CUINDX+(2*&NUA)       SET DP INDEX               DPTH
.DAPTH3  ANOP                                                      DPTH
&DPCNT   SETA  &DPCNT+1                 UPDATE DP INDEX            DPTH
.DAPTH4  ANOP                                                      DPTH
&NCUSW   SETB  1                       SET NEW CONTROL UNIT SWITCH
&OCU     SETA  &NCU                    UPDATE CURRENT CU ADDRESS
         AGO   .UAUDTE
.*
.COMPARE ANOP
         AIF   (&PRIR EQ 1).NOPRI        ALREADY SET?            A36305
         AIF   ((&SGDT06B(&COUNTB) AND &SGDU03B(&COUNTB)) OR (&SGDT07B(X
               &COUNTB) AND &SGDU03B(&COUNTB))).NOPRI            A36305
&PRIR    SETB  (&SGDRQ1B(&COUNTB))       PRIORITY REQUESTED?     A36305
.NOPRI   ANOP                                                    A36305
.*   TEST FOR EXTENDED SENSE                                      20202
         AIF   (&SGDT06B(&COUNTB) AND &SGDU01B(&COUNTB) AND &SGDF02B(&CX
               OUNTB)).UCS1403          1403 WITH UCS             20202
         AIF   (NOT &SGDT06B(&COUNTB) OR NOT &SGDU06B(&COUNTB)).NO2211
.UCS1403 ANOP                                                     20202
&ALOCCNT SETA  8                        SET EXTENDED SENSE BIT    20202
         AGO   .ALTCHPT                                           20202
.NO2211  AIF   (NOT &SGDT01B(&COUNTB) OR &SGDU01B(&COUNTB)).NO3420
&ALOCCNT SETA  8                        SET EXTENDED SENSE BIT    20202
         AGO   .ALTCHPT                                           20202
.NO3420  AIF   (NOT &SGDT03B(&COUNTB) OR NOT(&SGDU07B(&COUNTB) OR  &SGDX
               U08B(&COUNTB))).NOMRZS
&ALOCCNT SETA  8                        SET EXTENDED SENSE BIT    20202
.NOMRZS  AIF   (NOT &SGDT07B(&COUNTB) OR NOT(&SGDU08B(&COUNTB) OR &SGDU*
               09B(&COUNTB))).NO34XX                              21092
&ALOCCNT SETA  8                       SET EXTENDED SENSE BIT     21092
         AGO   .ALTCHPT                                           21092
.NO34XX  AIF   (NOT &SGDT06B(&COUNTB) OR NOT &SGDU07B(&COUNTB)).ALTCHPT
&ALOCCNT SETA  8                       SET EXTENDED SENSE BIT
.*       THIS SECTION TESTS FOR ALTERNATE CHANNEL PATHS
.ALTCHPT AIF   (&SGDT08B(&COUNTB)).SACHMSK
         AIF   (&SGDAP7B(&COUNTB) OR &SGDAP8B(&COUNTB) OR &SGDAP9B(&COU*
               NTB) OR &SGDAPAB(&COUNTB) OR &SGDAPBB(&COUNTB)).ALOC7
         AIF   (&SGDAPCB(&COUNTB) OR &SGDAPDB(&COUNTB) OR &SGDAPEB(&COU*
               NTB) OR &SGDAPFB(&COUNTB)).ALOC7   TEST FOR + 7 ALT I267
         AIF   (NOT &SGDAP1B(&COUNTB) AND NOT &SGDAP2B(&COUNTB) AND NOT*
                &SGDAP3B(&COUNTB) AND NOT &SGDAP4B(&COUNTB) AND NOT &SG*
               DAP5B(&COUNTB) AND NOT &SGDAP6B(&COUNTB)).SACHMSK
.ALOC7   ANOP                                                     20202
&ALTSWA  SETB  1                       SET ALTERNATE S PATH SW
&ALOCCNT SETA  &ALOCCNT+1              YES,ADD ALT. BIT TO ALOC-CH-MSK
         AIF   (&SGCHANB(&NCHAN*15+4)).SACHMSK    TEST FOR HSMPX   I267
&TCHAP   SETB  1                        SET ALTERNATE INDICATOR    TCHB
.SACHMSK ANOP
.*
.*       COMPUTE THE DEVICE TABLE INDEX FOR UCB
.*
.DVTABCK AIF   (NOT &SGDT01B(&COUNTB)).DATSTA   IS IT A TAPE MAG/PAPER
&DACNT  SETA  &DACNT+1    INDICATE CHANNEL PGM NEC              SA54451
         AIF   (&SGDU01B(&COUNTB)).NORMTRP  2400?                 21048
&THISDEV SETC  'AT'                      SET NEW TAPE TYPE        21048
&TYPE(1) SETB  1                         SET TAPE FOR MAINLINE    21048
&TYPE(16) SETB 1                         SET 34XX IN SYSTEM       21048
         AGO   .QOPCK                    GO CHECK QUEING          21048
.NORMTRP ANOP                                                     21048
&THISDEV SETC  'TA'                    SET TYPE TO TAPE
&TYPE(1) SETB  1                       SET MAINLINE TYPE'TAPE'
         AGO   .QOPCK                  TO TEST FOR QUEUEING OPTIONS
.DATSTA  AIF   (NOT &SGDT03B(&COUNTB)).TPTST   ISIT DIR/ACC
         AIF   (NOT &SGDU07B(&COUNTB)).ZSTST TEST FOR 3330        20201
&THISDEV SETC  'ML'                     SET TYPE TO 3330          20201
         AGO   .QOPCK                                             20201
.ZSTST   AIF   (NOT &SGDU08B(&COUNTB)).SKIPNO TEST FOR 2305       20201
&THISDEV SETC  'ZS'                     SET TYPE TO ZEUS          20201
&DACNT  SETA  &DACNT+1   UPDATE DIRECT ACCESS COUNT             SA52464
         AGO   .QOPCK                                             20201
.SKIPNO  ANOP                                                   SA52464
&DACNT  SETA  &DACNT+1   UPDATE DIRECT ACCESS COUNT             SA52464
         AIF   (NOT &SGDU05B(&COUNTB) AND NOT &SGDU01B(&COUNTB)).TNDRUM
&THISDEV SETC  'DR'                     SET TYPE TO DRUM
         AGO   .QOPCK                   CHECK QUE OPTION
.TNDRUM  ANOP                           NOT DRUM MUST BE DISK
&THISDEV SETC  'DA'                    YES-SET D/A TYPE
         AIF   (&COUNTCU EQ 0).DSTST                              20201
         AIF   (&SGUNF5B(&COUNTCU)).SETDS                         20201
.DSTST   AIF   (NOT &SGDF02B(&COUNTB)).QOPCK                      20201
.SETDS   ANOP                                                     20201
&THISDEV SETC  'DS'                                               20201
         AGO   .QOPCK
.TPTST   AIF   (&SGDT08B(&COUNTB) OR &SGDT12B(&COUNTB)).TPTSTX    19006
         AIF   (NOT &SGDT02B(&COUNTB)).GRDEV NOT OPT RDR OR TP    19017
.*   TEST FOR OPTICAL READER                                      19017
         AIF   (&SGDAD1B(&COUNTB) OR &SGDAD8B(&COUNTB)).TPTSTX    19017
         AIF   (&SGDU01B(&COUNTB) OR &SGDU02B(&COUNTB) OR &SGDU03B(&COUX
               NTB)).UNREC              TEST FOR TP               19017
.TPTSTX  ANOP                                                     19017
&THISDEV SETC  'TP'                     SET T/P FOR DCV TAB
&TYPE(4) SETB  1                        SET T/P TYPE FOR MAIN LINE
         AGO   .QOPCK
.GRDEV   AIF   (NOT &SGDT05B(&COUNTB)).UNREC   TEST FOR GRAPHIC
&THISDEV SETC  'GR'                     SET GR CODE FOR DEVICE TABLE
&GR      SETB  1                        SET IECIOS PARAM FOR GRAPHICS
         AGO   .QOPCK
.UNREC   AIF   (NOT &SGDUMMY(&COUNTB)).UNREC2      NOT DUMMY
&THISDEV SETC  'DUM'                    SET TYPE TO DUMMY
         AGO   .QOPCK
.UNREC2  ANOP                           ALL OTHERS UR
.******************************************************************UNC8
         AIF   (NOT &UNPSUDO(&COUNTB)).IUNX1                      *UNC8
&THISDEV SETC  'DUM'              CALL IT A DUMMY DEVICE.         *UNC8
         AGO   .QOPCK                                             *UNC8
.IUNX1   ANOP                                                     *UNC8
.******************************************************************UNC8
         AIF   (NOT &SGDT06B(&COUNTB) OR NOT &SGDU06B(&COUNTB)).UNREC3
&THISDEV SETC  'WR'                     SET TYPE TO PRINTER       20202
         AGO   .QOPCK                                             20202
.UNREC3  ANOP                                                     20202
         AIF   (NOT &SGDT07B(&COUNTB) OR NOT(&SGDU08B(&COUNTB) OR &SGDU*
               09B(&COUNTB))).UNREC4                              21088
&THISDEV SETC  'NR'                        SET TYPE TO NEW UR     21088
         AGO   .QOPCK                                             21088
.UNREC4  ANOP                                                     21088
         AIF   (NOT &SGDT06B(&COUNTB) OR NOT &SGDU07B(&COUNTB)).UNREC5
&THISDEV SETC  'NR'                        SET TYPE TO NEW UR     XXXXX
         AGO   .QOPCK                                             XXXXX
.UNREC5  ANOP                                                     XXXXX
&THISDEV SETC  'UR'                    SET TYPE TO UNIT RECORSD
.*       TEST FOR QUEUEING OPTIONS
.QOPCK   ANOP                          TESTY FOR QUEUEING PTINS
&TYPC    SETC  '&THISDEV'              SET TYPE CLASS FOR UCB
.QOPCK1  AIF   (NOT &SGDRQ1B(&COUNTB) AND NOT &SGDRQ2B(&COUNTB)).FRQOP
         AIF   (NOT &SGDRQ1B(&COUNTB)).ORDQUE                      ORDQ
&THISDEV SETC  'P'.'&THISDEV'          SET PRIORITY CHARACTER
&TYPE(9) SETB  1                       SET PRIORITY REQ QING D FOR IOS
&SQOPT   SETA  2                        SET ORDERED SEEK QUEUEING
         AGO   .ENTRT                  ENTER TYPE
.ORDQUE  ANOP                                                      ORDQ
&TYPE(7) SETB  1                                                   ORDQ
&THISDEV SETC  'O'.'&THISDEV'                                      ORDQ
         AGO   .ENTRT                                              ORDQ
.FRQOP   ANOP                          NOT PRIORITY REQUEST QING
&TYPE(8) SETB  1                       SET FIFO RQ QING VFOR IOS
.ENTRT   ANOP            SEE IF THIS'TYPE/OPT'IS ALREADY IN TABLE
&ENTCNT  SETA  1                       INITIALIZE COUNT
.TYPCOM  AIF   ('&TYPTAB(&ENTCNT)' EQ '&THISDEV').CDEVTB
.*             IS THIS THE CORRECT ENTRY FOR THIS DEVICE
         AIF   (NOT &IRSW).FSTYP       IS THIS THE FIRST TYPE
&ENTCNT  SETA  &ENTCNT+1               UPDATE ENTRY COUNT
         AIF   (&ENTCNT LE &TYPCNT).TYPCOM   MORE ENTRIES-RETURN TO COM
.*       IF EVER FALLS THRU-THIS IS A NEW DEVICE TYPE
.FSTYP   ANOP                          SKIP CHECK CONTINUE ON FIRST TYP
&TYPCNT  SETA  &TYPCNT+1               UPDATE TYPE  COUNT
&TYPTAB(&TYPCNT) SETC '&THISDEV'       INSERT NEW TYPE INTO TABLE
.CDEVTB  ANOP                          COMPUTE DEVTAB INDEX
         AIF   (NOT &SGSUPRB(26)).NOOLT  OLTEP ?                  21051
&ENTCNT  SETA  (&SGDCLSB(70)+&ENTCNT) YES ADD EXTRA DEV TBL       21051
.NOOLT   ANOP                                                     21051
&DEVTAB  SETA  &ENTCNT*8-8              COMPUTE DEVTAB INDEX      20201
.*
.*      THIS ROUTINE COMPUTES THE LOGICAL CHANNEL INDEX
.*
.*            TEST FOR MPLXOR CHAN AND IF SO ARE THERE ANY BURST DEVICS
.*       LCHWRD COMPUTATION - OUT-PUT IS/PER CHANNEL
.*    THE FOLLOWING TES T IS FOR MULTIPLEXOR CHANNEL ONLY
&LCHCNT  SETA  1                         RESET CONMON COUNTRE
.*   TEST FOR HI-SPEED MPX AND ALT. PATH/MULT LCH THIS CHANNEL     SSAP
    AIF   (NOT &SGCHANB(&NCHAN*15+4) OR NOT &HSALT(&NCHAN+1)).LCHLOOP
.*   TEST FOR NEW CHANNEL SWITCH ON                                SSAP
         AIF   (NOT &NCHANSW).SSCUTST   NOT ON-GO TEST FOR NEW CU  SSAP
.*   TEST FOR NON-SUB SELECTOR CHANNEL ON NEW CHANNEL              SSAP
         AIF   ('&DEVAD'(2,1) LT 'C' AND '&DEVAD'(2,1) GT 'F').NOPRIM
         AGO   .HSNLCH                  GO SET UP NEW LCH          SSAP
.*   TEST FOR NEW CONTROL UNIT                                     SSAP
.SSCUTST AIF   (NOT &NCUSW).HSLCHLP     GO FIND RIGHT LCH          SSAP
.*   TEST FOR NON-SUB SELECTOR CHANNEL                             SSAP
         AIF   ('&DEVAD'(2,1) LT 'C' AND '&DEVAD'(2,1) GT 'F').LCHSET
.*   IF ALL CONDITIONS EXIST BELOW - THE LCH NUMBER IS SET         SSAP
.HSLCHLP AIF   (&SGDAP2B(&COUNTB) NE &LCHAP2(&LCHCNT)).HSNXLCH     SSAP
         AIF   (&SGDAP3B(&COUNTB) NE &LCHAP3(&LCHCNT)).HSNXLCH     SSAP
         AIF   (&SGDAP4B(&COUNTB) NE &LCHAP4(&LCHCNT)).HSNXLCH     SSAP
         AIF   ('&DEVAD'(2,1) EQ 'C').LCHSET                     A40532
         AIF   ('&DEVAD'(2,1) NE 'D').CHKE                       A40532
         AIF   (NOT &HSPRIM2(&LCHCNT) AND (&LCHAP3(&LCHCNT) OR &LCHAP4(X
               &LCHCNT))).HSNXLCH                                A40532
         AGO   .LCHSET                                           A40532
.CHKE    AIF   ('&DEVAD'(2,1) NE 'E').LCHSET                     A40532
         AIF   (NOT &HSPRIM3(&LCHCNT) AND &LCHAP4(&LCHCNT)).HSNXLCH
         AGO   .LCHSET                                           A40532
.HSNXLCH ANOP                                                      SSAP
&LCHCNT  SETA  &LCHCNT+1                UPDATE INDEX               SSAP
         AIF   (&LCHCNT LE &LCHSTOT).HSLCHLP TEST FOR LAST TEST    SSAP
.*   THEN - SET UP NEW LCH                                         SSAP
.HSNLCH  ANOP                                                      SSAP
&LCHCNT  SETA  &LCHSTOT+1               UPDATE LCH NUMBER          SSAP
.*   IF NO ALTERNATES - MUST BE ON MPX LCH                         SSAP
.*   NOW SET THE PRIMARY PATH SWITCH                               SSAP
         AIF   ('&DEVAD'(2,1) NE 'C').PTST1  TEST FOR 'C' PRIMARY  SSAP
&HSPRIM1(&LCHCNT) SETB 1                SET 'C' PRIME INDICATOR    SSAP
         AGO   .NOPRIM                  SWITCH SET                 SSAP
.PTST1   AIF   ('&DEVAD'(2,1) NE 'D').PTST2  TEST FOR 'D' PRIMARY  SSAP
&HSPRIM2(&LCHCNT) SETB 1                SET 'D' PRIMARY INDICATOR  SSAP
         AGO   .NOPRIM                  SWITCH SET                 SSAP
.PTST2   ANOP                                                      SSAP
&HSPRIM3(&LCHCNT) SETB 1                SET 'E' PRIMARY INDICATOR  SSAP
.NOPRIM  ANOP                                                      SSAP
.*   SET THE ALTERNATE PATH SWITCH                                 SSAP
&LCHAP2(&LCHCNT) SETB (&SGDAP2B(&COUNTB))    SET 'D' ALT PATH      SSAP
&LCHAP3(&LCHCNT) SETB (&SGDAP3B(&COUNTB))    SET 'E' ALT PATH      SSAP
&LCHAP4(&LCHCNT) SETB (&SGDAP4B(&COUNTB))    SET 'F' ALT PATH      SSAP
&LCHSTOT SETA  &LCHSTOT+1               UPDATE COUNTER FOR THIS CH SSAP
.*   THIS COMPUTES AND SAVES LCH INFO FOR SEL CH AND HSMPX NON-ALT PATH
         AGO   .LCHSET                                             SSAP
.LCHLOOP ANOP           THIS COMPUTES AND SAVES NEEDED LCH INFO.
         AIF   (&SGCHANB(&OCHAN*15+2)).MPXLCHA    TEST FOR MPX     I267
         AIF   (&NCHSW).NEWLCH         NEW CHANNEL-INITIALIZE TABLE
         AIF   (&SGDAP1B(&COUNTB) NE &LCHAP1(&LCHCNT) AND &OCHAN NE 1).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP2B(&COUNTB) NE &LCHAP2(&LCHCNT) AND &OCHAN NE 2).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP3B(&COUNTB) NE &LCHAP3(&LCHCNT) AND &OCHAN NE 3).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP4B(&COUNTB) NE &LCHAP4(&LCHCNT) AND &OCHAN NE 4).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP5B(&COUNTB) NE &LCHAP5(&LCHCNT) AND &OCHAN NE 5).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP6B(&COUNTB) NE &LCHAP6(&LCHCNT) AND &OCHAN NE 6).*
               NXTLCH                    TO CHECK NEXT ENTRY IN TABLE
         AIF   (&SGDAP7B(&COUNTB) NE &LCHAP7(&LCHCNT) AND &OCHAN NE 7).*
               NXTLCH                                              I267
         AIF   (&SGDAP8B(&COUNTB) NE &LCHAP8(&LCHCNT) AND &OCHAN NE 8).*
               NXTLCH                                              I267
         AIF   (&SGDAP9B(&COUNTB) NE &LCHAP9(&LCHCNT) AND &OCHAN NE 9).*
               NXTLCH                                              I267
         AIF   (&SGDAPAB(&COUNTB) NE &LCHAP10(&LCHCNT) AND &OCHAN NE 10*
               ).NXTLCH                                            I267
         AIF   (&SGDAPBB(&COUNTB) NE &LCHAP11(&LCHCNT) AND &OCHAN NE 11*
               ).NXTLCH                                            I267
         AIF   (&SGDAPCB(&COUNTB) NE &LCHAP12(&LCHCNT) AND &OCHAN NE 12*
               ).NXTLCH                                            I267
         AIF   (&SGDAPDB(&COUNTB) NE &LCHAP13(&LCHCNT) AND &OCHAN NE 13*
               ).NXTLCH                                            I267
         AIF   (&SGDAPEB(&COUNTB) NE &LCHAP14(&LCHCNT) AND &OCHAN NE 14*
               ).NXTLCH                                            I267
         AIF   (&SGDAPFB(&COUNTB) NE &LCHAP15(&LCHCNT) AND &OCHAN NE 15*
               ).NXTLCH                                            I267
         AGO   .LCHSET                  TO SET LCHTAB FOR UCB
.MPXLCHA ANOP
&LCHN    SETA  &LCHTOT                  SET UCB LCHTAB
         AGO   .ERTAB                   TO COMPUTE ERRTAB DOR UCB
.NXTLCH  ANOP           THIS ENTERS A NEW LOGICAL CHANNEL OR RETURNS
&LCHCNT  SETA  &LCHCNT+1               UPDATE INDEX
         AIF   (&LCHCNT LE &LCHSTOT).LCHLOOP  LAST ENTRY,NO-RETURN
.NEWLCH  ANOP                          INITI ALIZATION ENTRY TO TABLES
&S1(61+&LCHTOT+&LCHSTOT)  SETB (&SGDAP1B(&COUNTB) OR &OCHAN EQ 1)  I267
&S1(121+&LCHTOT+&LCHSTOT) SETB (&SGDAP2B(&COUNTB) OR &OCHAN EQ 2)  I267
&S1(181+&LCHTOT+&LCHSTOT) SETB (&SGDAP3B(&COUNTB) OR &OCHAN EQ 3)  I267
&S2(&LCHTOT+&LCHSTOT+1)   SETB (&SGDAP4B(&COUNTB) OR &OCHAN EQ 4)  I267
&S2(61+&LCHTOT+&LCHSTOT)  SETB (&SGDAP5B(&COUNTB) OR &OCHAN EQ 5)  I267
&S2(121+&LCHTOT+&LCHSTOT) SETB (&SGDAP6B(&COUNTB) OR &OCHAN EQ 6)  I267
&S2(181+&LCHTOT+&LCHSTOT) SETB (&SGDAP7B(&COUNTB) OR &OCHAN EQ 7)  I267
&S3(&LCHTOT+&LCHSTOT+1)   SETB (&SGDAP8B(&COUNTB) OR &OCHAN EQ 8)  I267
&S3(61+&LCHTOT+&LCHSTOT)  SETB (&SGDAP9B(&COUNTB) OR &OCHAN EQ 9)  I267
&S3(121+&LCHTOT+&LCHSTOT) SETB (&SGDAPAB(&COUNTB) OR &OCHAN EQ 10) I267
&S3(181+&LCHTOT+&LCHSTOT) SETB (&SGDAPBB(&COUNTB) OR &OCHAN EQ 11) I267
&S4(&LCHTOT+&LCHSTOT+1)   SETB (&SGDAPCB(&COUNTB) OR &OCHAN EQ 12) I267
&S4(61+&LCHTOT+&LCHSTOT)  SETB (&SGDAPDB(&COUNTB) OR &OCHAN EQ 13) I267
&S4(121+&LCHTOT+&LCHSTOT) SETB (&SGDAPEB(&COUNTB) OR &OCHAN EQ 14) I267
&S4(181+&LCHTOT+&LCHSTOT) SETB (&SGDAPFB(&COUNTB) OR &OCHAN EQ 15) I267
&LCHAP1(&LCHCNT) SETB (&SGDAP1B(&COUNTB) OR &OCHAN EQ 1)  SET
&LCHAP2(&LCHCNT) SETB (&SGDAP2B(&COUNTB) OR &OCHAN EQ 2)    UP
&LCHAP3(&LCHCNT) SETB (&SGDAP3B(&COUNTB) OR &OCHAN EQ 3)       NEW
&LCHAP4(&LCHCNT) SETB (&SGDAP4B(&COUNTB) OR &OCHAN EQ 4)            LCH
&LCHAP5(&LCHCNT) SETB (&SGDAP5B(&COUNTB) OR &OCHAN EQ 5)   CHANNEL
&LCHAP6(&LCHCNT) SETB (&SGDAP6B(&COUNTB) OR &OCHAN EQ 6)          PATHS
&LCHAP7(&LCHCNT)  SETB (&SGDAP7B(&COUNTB) OR &OCHAN EQ 7)          I267
&LCHAP8(&LCHCNT)  SETB (&SGDAP8B(&COUNTB) OR &OCHAN EQ 8)          I267
&LCHAP9(&LCHCNT)  SETB (&SGDAP9B(&COUNTB) OR &OCHAN EQ 9)          I267
&LCHAP10(&LCHCNT) SETB (&SGDAPAB(&COUNTB) OR &OCHAN EQ 10)         I267
&LCHAP11(&LCHCNT) SETB (&SGDAPBB(&COUNTB) OR &OCHAN EQ 11)         I267
&LCHAP12(&LCHCNT) SETB (&SGDAPCB(&COUNTB) OR &OCHAN EQ 12)         I267
&LCHAP13(&LCHCNT) SETB (&SGDAPDB(&COUNTB) OR &OCHAN EQ 13)         I267
&LCHAP14(&LCHCNT) SETB (&SGDAPEB(&COUNTB) OR &OCHAN EQ 14)         I267
&LCHAP15(&LCHCNT) SETB (&SGDAPFB(&COUNTB) OR &OCHAN EQ 15)         I267
         AIF   (NOT &SGSUPRB(26)).NTCHOT      TEST FOR OLTEP
.*     TEST EACH LCH FOR A BLOCK MULTIPLEXOR
&OLT2880(&LCHCNT) SETB (&LCHAP1(&LCHCNT) AND &SGCHANB(1*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP2(&LCHCNT) AND &SGCHANB(2*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP3(&LCHCNT) AND &SGCHANB(3*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP4(&LCHCNT) AND &SGCHANB(4*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP5(&LCHCNT) AND &SGCHANB(5*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP6(&LCHCNT) AND &SGCHANB(6*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP7(&LCHCNT) AND &SGCHANB(7*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP8(&LCHCNT) AND &SGCHANB(8*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP9(&LCHCNT) AND &SGCHANB(9*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP10(&LCHCNT) AND &SGCHANB(10*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP11(&LCHCNT) AND &SGCHANB(11*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP12(&LCHCNT) AND &SGCHANB(12*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP13(&LCHCNT) AND &SGCHANB(13*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP14(&LCHCNT) AND &SGCHANB(14*15+6))
         AIF   (&OLT2880(&LCHCNT)).NTCHOT
&OLT2880(&LCHCNT) SETB (&LCHAP15(&LCHCNT) AND &SGCHANB(15*15+6))
.NTCHOT  ANOP
&LCHSTOT SETA  &LCHSTOT+1              UPDATE SUBTOTAL OF LCHS
.LCHSET  ANOP
&LCHN    SETA  &LCHCNT+&LCHTOT-1       SET LCH TABLE INDEX FOR UCB
&HSMPLCH SETA  &LCHCNT                  GET HSMPX COUNT            SSAP
.*
.*      THIS ROUTINE COMPUTES THE ERROR TAB FOR THE UCB
.ERTAB   ANOP                          THIS ROUTINE FINDS THE ERRTAB FO
&NCHSW   SETB  0                       RESET LCH NEW CHANNEL SWITCH
&LCHCNT  SETA  0                       RESET COMMON COUNTER
&EBCDIC  SETC  '000'                   INITIALIXE OPTIOMN FIELD
&TYPEA   SETC  '00000000'
         AIF   (&COUNTCU EQ &SAVECU).DEVN  FIRST DEV ON THIS CU
&SAVECU  SETA  &COUNTCU                 SET FOR NEW CU
&DEVNDX  SETA  0                        RESET DEVICE COUNT
.DEVN    ANOP
&DEVNDX  SETA  &DEVNDX+1
         AIF   (NOT &SGDT01B(&COUNTB)).TFDISK   NOT TAPE-TEST FOR D/A
         AIF   (NOT &SGCHANB(&NCHAN*15+4)).NHTA TEST FOR HSMPX   A54451
         AIF   ('&DEVAD'(2,1) NE 'C').TST1TA                     A54451
&SSDA(1) SETB  1                                                 A54451
.TST1TA  AIF   ('&DEVAD'(2,1)NE'D' AND NOT &SGDAP2B(&COUNTB)).TST2TA
&SSDA(2) SETB  1                                                 A54451
.TST2TA  AIF   ('&DEVAD'(2,1)NE'E' AND NOT &SGDAP3B(&COUNTB)).TST3TA
&SSDA(3) SETB  1                                                 A54451
.TST3TA AIF   ('&DEVAD'(2,1)NE'F' AND NOT &SGDAP4B(&COUNTB)).SHSMTA
&SSDA(4) SETB  1                                                 A54451
.SHSMTA  AIF   (NOT(&SSDA(1) OR &SSDA(2) OR &SSDA(3) OR &SSDA(4))).NHTA
&SSTACH(&NCHAN+1)  SETB  1            SET TAPE INDICATOR/CHAN    A54451
.NHTA    ANOP                                                    A54451
&NUCSIZ  SETA  &NUCSIZ+28               ADD TAPE                  19017
         AIF   (NOT &SGCPRGB(13)).NOAD65     TEST FOR MULTI-PROC   P256
&NUCSIZ  SETA  &NUCSIZ+4                ADD ALIGN FACTOR FOR MP    P256
.NOAD65  AIF   (&SGDU06B(&COUNTB)).E7340     TEST FOR HYPER TAPE   P256
         AIF   (NOT &SGDF03B(&COUNTB)).E2400  CHECK FOR R/W TAU
&TYPE(12) SETB 1                        SET R/W TAU              BBBBBB
.E2400   AIF   (NOT &SGUNF6B(&COUNTCU)).TCUAP     TEST FOR ALT CU 19022
&MPFLG   SETA  128                      SET ALT CU FLAG           19022
.TCUAP   ANOP                                                     19022
&ERRTAB  SETC  '09'                      SET TAPE ERRTAB          21048
         AIF   (&SGDU01B(&COUNTB)).E240A       2400?              21048
&TYPEA   SETC  '30008003'                SET 34XX TYPE            21048
&ALOCCNT SETA  &ALOCCNT+16               SET 20 BYTE STAT BIT     21048
&OFF     SETB  (&SGDF09B(&COUNTB))      SET OFFLINE IF SHARED   SA67548
         AIF   (NOT(&SGDM01B(&COUNTB) OR &SGDM05B(&COUNTB) OR &SGDM02B(X
               &COUNTB) OR &SGDM03B(&COUNTB) OR &SGDM07B(&COUNTB))).E34
&LCHCNT  SETA  1024                     SET BASIC 1600 DEN        BIRCH
         AIF   (NOT &SGDF01B(&COUNTB)).E340B   7-TRACK?           BIRCH
&LCHCNT  SETA  192                 SET 7-TRACK & DATA CONVERT   SA76229
.E340B   AIF   (NOT(&SGDF04B(&COUNTB))).E340D  DUO-DENSITY        BIRCH
&LCHCNT  SETA  &LCHCNT+32          SET DUO-DENSITY BIT            BIRCH
         AGO   .E340D              GO CHECK FOR 3410              BIRCH
.E34     ANOP                                                     BIRCH
&LCHCNT  SETA  512                 SET BASIC 6250 DENSITY         BIRCH
         AIF   (NOT(&SGDF06B(&COUNTB))).E340D   OPTIONAL 1600     BIRCH
&LCHCNT  SETA  &LCHCNT+16          SET 1600 OPTION BIT            BIRCH
.E340D   AIF   (NOT &SG3410B(&COUNTB)).SETYPA   3410?             M0105
&SQOPT   SETA  1                        SET FOR UCB               M0417
         AGO   .SETYPA                                            BIRCH
.E240A   ANOP                                                     21048
&TYPEA   SETC  '30008001'    SET 2400 TAPE TYPE
         AIF   (NOT(&SGDM04B(&COUNTB) OR &SGDM05B(&COUNTB) OR &SGDM06B(X
               &COUNTB))).H01   BR IF NOT PHASE IN CODE
&LCHCNT  SETA  1024                 SET PHASE IN CODE MODEL BIT
         AIF   (&SGDF01B(&COUNTB)).H01  TEST FOR 7-TRK             TPE7
         AIF   (&SGUNU8B(&COUNTCU) AND &SGUNF4B(&COUNTCU)).T2415 A30234
         AIF   (NOT(&SGDF04B(&COUNTB))).SETYPA BR IF NOT DUO-DENSITY
.T2415   ANOP                                                    A30234
&LCHCNT  SETA  &LCHCNT+32               SET DUO-DENSITY FEATURE BIT
.H01     AIF   (NOT &SGDF01B(&COUNTB)).SETYPA     BR IF 9 TRACK
&LCHCNT  SETA  128                     SET SEVEN TRACK OPTION
.F242    AIF   (NOT &SGUNF2B(&COUNTCU)).SETYPA   DATA CONVERT TEST
&LCHCNT  SETA  &LCHCNT+64              SET DATA CONVERSION BIT
         AGO   .SETYPA                 TO SET TYPE FIELD FOR UCB
.E7340   ANOP
&ERRTAB  SETC  '08'                     SET 7340 HYPER TAPE ERRTAB
&TYPEA   SETC  '30008008'              SET 7340 TAPE TYPE
         AIF   (NOT &SGDF01B(&COUNTB)).UCBOPUT  DOES TO HAVE FEATURE 1
&LCHCNT  SETA  128                     SET AUTO LOAD FEATURE BIT
         AGO   .SETYPA                 TO SET FINAL TYPE WITH OPTION BI
.TFDISK  AIF   (NOT &SGDT03B(&COUNTB)).TFCON  NOT D/A-TO TEST FOR CONS
&NUCSIZ  SETA  &NUCSIZ+40               ADD DIRECT ACCESS          P256
         AIF   (&COUNTCU EQ 0).DAUTSTA   NO COUTROL UNIT
         AIF   (NOT &SGUNF1B(&COUNTCU)).DAF2  DOES TO HAVE SCAN
&LCHCNT  SETA  128                     SET SCAN FEATURE BIT
.DAF2    AIF   (NOT &SGUNF2B(&COUNTCU)).DAUTST  DOES CU HAVE OVERDLOW
&LCHCNT  SETA  &LCHCNT+64              SET OVERFLOW OPTION BIT
.DAUTST  AIF   (NOT &SGUNF3B(&COUNTCU)).DAUTSTA
&TYPE(10)  SETB 1                       TWO CHANNEL SWITCH
.DAUTSTA AIF   (NOT &SGCHANB(&NCHAN*15+4)).NHSM   TEST FOR HSMPX   I267
         AIF   ('&DEVAD'(2,1) NE 'C').TST1                         SSDA
&SSDA(1) SETB  1                                                   SSDA
.TST1    AIF   ('&DEVAD'(2,1)NE'D' AND NOT &SGDAP2B(&COUNTB)).TST2 SSAP
&SSDA(2) SETB  1                                                   SSDA
.TST2    AIF   ('&DEVAD'(2,1)NE'E' AND NOT &SGDAP3B(&COUNTB)).TST3 SSAP
&SSDA(3) SETB  1                                                   SSDA
.TST3  AIF   ('&DEVAD'(2,1)NE'F' AND NOT &SGDAP4B(&COUNTB)).SHSM A28840
&SSDA(4) SETB  1                                                   SSDA
.SHSM    AIF   (NOT(&SSDA(1) OR &SSDA(2) OR &SSDA(3) OR &SSDA(4))).NHSM
.*                                                               A28840
&SSDACH(&NCHAN+1)  SETB  1              SET DA INDICATOR/CHAN      RL17
.NHSM    AIF   (&SGDU01B(&COUNTB)).E2301     IS IT 2301 DRUM
         AIF   (&SGDU05B(&COUNTB)).E2303     IS IT 2303 DRUM
         AIF   (&SGDU07B(&COUNTB)).EMLIN IS IT 3330               20201
         AIF   (&SGDU08B(&COUNTB)).E2305 IS IT 2305               20201
     AIF   (NOT &SGCHANB(&NCHAN*15+4) OR NOT &HSALT(&NCHAN+1)).NHSMA
&DAHS(&HSMPLCH) SETB 1                  SET DA ON HSMPX INDICATOR  SSAP
&HSMPLCH SETA  0                        CLEAR HSMPX LCH INDEX      SSAP
         AGO   .NHSSK                                              SSAP
.NHSMA   ANOP                                                      SSAP
&SK1(61+&LCHN)  SETB (&SGDAP1B(&COUNTB) OR &OCHAN EQ 1)            I267
&SK1(121+&LCHN) SETB (&SGDAP2B(&COUNTB) OR &OCHAN EQ 2)            I267
&SK1(181+&LCHN) SETB (&SGDAP3B(&COUNTB) OR &OCHAN EQ 3)            I267
&SK2(&LCHN+1)   SETB (&SGDAP4B(&COUNTB) OR &OCHAN EQ 4)            I267
&SK2(61+&LCHN)  SETB (&SGDAP5B(&COUNTB) OR &OCHAN EQ 5)            I267
&SK2(121+&LCHN) SETB (&SGDAP6B(&COUNTB) OR &OCHAN EQ 6)            I267
&SK2(181+&LCHN) SETB (&SGDAP7B(&COUNTB) OR &OCHAN EQ 7)            I267
&SK3(&LCHN+1)   SETB (&SGDAP8B(&COUNTB) OR &OCHAN EQ 8)            I267
&SK3(61+&LCHN)  SETB (&SGDAP9B(&COUNTB) OR &OCHAN EQ 9)            I267
&SK3(121+&LCHN) SETB (&SGDAPAB(&COUNTB) OR &OCHAN EQ 10)           I267
&SK3(181+&LCHN) SETB (&SGDAPBB(&COUNTB) OR &OCHAN EQ 11)           I267
&SK4(&LCHN+1)   SETB (&SGDAPCB(&COUNTB) OR &OCHAN EQ 12)           I267
&SK4(61+&LCHN)  SETB (&SGDAPDB(&COUNTB) OR &OCHAN EQ 13)           I267
&SK4(121+&LCHN) SETB (&SGDAPEB(&COUNTB) OR &OCHAN EQ 14)           I267
&SK4(181+&LCHN) SETB (&SGDAPFB(&COUNTB) OR &OCHAN EQ 15)           I267
.NHSSK   ANOP                                                      SSAP
         AIF   (&SGDU02B(&COUNTB)).E2302   IS IT 2302 DISK
         AIF   (&SGDU03B(&COUNTB)).E2311   IS IT A 2311 DISK
         AIF   (&SGDU06B(&COUNTB)).E2314  IS IT A 2314 DISK
&ERRTAB  SETC  '1C'                     SET 2321 MARS ERRTWA
&NUCSIZ  SETA  &NUCSIZ+156              ADD 2321                   P256
&TYPEA   SETC  '30002005'  SET BASIC 2321 MARS TYPE
         AIF   (NOT &SGUNF5B(&COUNTCU)).SETYPA    TEST FOR SHARED 20201
&SHR(2)  SETB  1                        SET SHARE BIT FOR 2321    20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.E2301   ANOP
&SYSRES  SETA  4                        SET NON-REMOVEABLE
&ERRTAB  SETC  '01'                     SET 2301 DRUM ERRTAB
&TYPEA   SETC  '30002002'              SET BASIC 2301 DRU, TYPE
         AIF   (NOT &SGUNF5B(&COUNTCU)).SETYPA    TEST FOR SHARED 20201
&SHR(3)  SETB  1                        SET SHARE BIT FOR 2301    20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.E2302   ANOP
&SYSRES  SETA  4                        SET NON-REMOVEABLE
&ERRTAB  SETC  '01'                     SET 2302 DISK ERRTAB
&TYPEA   SETC  '30002004'              SET BASIC 2302 DISK TYPE
         AGO   .SETYPA                 TO SET FINAL TYPE WITH OPTION BI
.E2311   ANOP
&ERRTAB  SETC  '01'                     SET 2311 DISK ERRTAB
&TYPEA   SETC  '30002001'              SET BASIC 2311 DISK TYPE
         AIF   (NOT &SGUNF5B(&COUNTCU)).SETYPA    TEST FOR SHARED 20201
&SHR(1)  SETB  1                        SET SHARE BIT FOR 2311    20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.E2303   ANOP
&SYSRES  SETA  4                        SET NON-REMOVEABLE
&ERRTAB  SETC  '01'                     SET 2303 DRUM ERRTQ AB
&TYPEA   SETC  '30002003'  SET BASIC 2303 DRUM TYPE
         AIF   (NOT &SGUNF5B(&COUNTCU)).SETYPA    TEST FOR SHARED 20201
&SHR(4)  SETB  1                        SET SHARE BIT FOR 2303    20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.EMLIN   ANOP                                                     20201
&ERRTAB  SETC  '01'                     SET ERRTAB                20201
&TYPEA   SETC  '30002009'               SET BASIC MERLIN TYPE     20201
&LCHCNT  SETA  80                       TRACK OVERFLOW & RPS      20201
&CT2314  SETA  &CT2314+1                UPDATE COUNTER            20201
         AIF   (NOT &SGDF02B(&COUNTB)).SETYPA     TEST FOR SHARED 20201
&SHR(6)  SETB  1                        SET 3330 SHARED           20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.E2305A  ANOP                                                     20201
&ZUSBAS  SETC  '&DEVAD'                GET BASS ADDR
         AGO   .E2305B
.E2305   AIF   (&CT2314 LT 1).E2305A                              20201
&OFF     SETB  1                        SET ONLINE FIRST PASS     20201
.E2305B  ANOP
&CT2314  SETA  &CT2314+1                INCREMENT COUNTER         20201
&DEVADE  SETC  '&ZUSBAS'               KEEP BASS SAME
&ERRTAB  SETC  '01'                     SET ERRTAB                20201
&SYSRES  SETA 4                         SET NON-REMOVABLE         20201
         AIF   (&SGDM02B(&COUNTB)).MOD2Z                          20201
&TYPEA   SETC  '30002006'               SET BASIC 2305 MOD 1      20201
&LCHCNT  SETA  80                       TRACK OVERFLOW & RPS      20201
         AGO   .MOD2ZA                  BRANCH AROUND             20201
.MOD2Z ANOP                                                       20201
&LCHCNT  SETA  80                       TRACK OVERFLOW & RPS      20201
&TYPEA   SETC  '30002007'               SET BASIC 2305 MOD 2      20201
.MOD2ZA  AIF   (NOT &SGDF02B(&COUNTB)).SETYPA     TEST FOR SHARED 20201
&SHR(5)  SETB  1                        SET 2305 SHARED           20201
         AGO   .SETYPA1                 GO SET SHARED BIT         20201
.E2314   AIF   (NOT &SGDF03B(&COUNTB)).DCUAP      TEST FOR ALT CU 19022
&MPFLG   SETA  128                      SET ALT CU FLAG           19022
.DCUAP   ANOP                                                     19022
&CT2314  SETA  &CT2314+1                UPDATE COUNTER             STAT
&ERRTAB  SETC  '01'                     SET 2314 DISK ERRTAB
&TYPEA   SETC  '30002008'               SET BASIC 2314 DISK TYPE
&LCHCNT  SETA  &LCHCNT+192              SET OVERFLOW AND SCAN BITS
         AIF   (NOT &SGDF02B(&COUNTB)).SETYPA  TEST FOR SHARED DEVICE
&SHR(1)  SETB  1                         SET 2314 SHARED          20201
.SETYPA1 ANOP                                                      SDAS
&LCHCNT  SETA  &LCHCNT+32               SET SHARABLE BIT           SDAS
         AIF   (&ALOCCNT/2*2 EQ &ALOCCNT).NOALSHR               SA60750
&TYPE(25) SETB 1                                                SA60750
.NOALSHR ANOP                                                   SA60750
&SDAA(&NCHAN+1)  SETB  1                SET INDICATOR FOR PRIM CHN SDAS
.*   NOW TEST FOR ANY ALTERNATE CHANNEL PATHS
         AIF   (NOT &SGDAP1B(&COUNTB)).SDALT2     CHAN 1 ALT       SDAS
&SDAA(2) SETB  1                        SET INDICATOR              SDAS
.SDALT2  AIF   (NOT &SGDAP2B(&COUNTB)).SDALT3     CHAN 2 ALT       SDAS
&SDAA(3) SETB  1                        SET INDICATOR              SDAS
.SDALT3  AIF   (NOT &SGDAP3B(&COUNTB)).SDALT4     CHAN 3 ALT       SDAS
&SDAA(4) SETB  1                        SET INDICATOR              SDAS
.SDALT4  AIF   (NOT &SGDAP4B(&COUNTB)).SDALT5     CHAN 4 ALT
&SDAA(5) SETB  1                        SET INDICATOR              SDAS
.SDALT5  AIF   (NOT &SGDAP5B(&COUNTB)).SDALT6     CHAN 5 ALT       SDAS
&SDAA(6) SETB  1                        SET INDICATOR              SDAS
.SDALT6  AIF   (NOT &SGDAP6B(&COUNTB)).SDALT7     CHAN 6 ALT       I267
&SDAA(7) SETB  1                        SET INDICATOR              I267
.SDALT7  AIF   (NOT &SGDAP7B(&COUNTB)).SDALT8     CHAN 7 ALT       I267
&SDAA(8) SETB  1                        SET INDICATOR              I267
.SDALT8  AIF   (NOT &SGDAP8B(&COUNTB)).SDALT9     CHAN 8 ALT       I267
&SDAA(9) SETB  1                        SET INDICATOR              I267
.SDALT9  AIF   (NOT &SGDAP9B(&COUNTB)).SDALTA     CHAN 9 ALT       I267
&SDAA(10) SETB 1                        SET INDICATOR              I267
.SDALTA  AIF   (NOT &SGDAPAB(&COUNTB)).SDALTB     CHAN 10 ALT      I267
&SDAA(11) SETB 1                        SET INDICATOR              I267
.SDALTB  AIF   (NOT &SGDAPBB(&COUNTB)).SDALTC     CHAN 11 ALT      I267
&SDAA(12) SETB 1                        SET INDICATOR              I267
.SDALTC  AIF   (NOT &SGDAPCB(&COUNTB)).SDALTD     CHAN 12 ALT      I267
&SDAA(13) SETB 1                        SET INDICATOR              I267
.SDALTD  AIF   (NOT &SGDAPDB(&COUNTB)).SDALTE     CHAN 13 ALT      I267
&SDAA(14) SETB 1                        SET INDICATOR              I267
.SDALTE  AIF   (NOT &SGDAPEB(&COUNTB)).SDALTF     CHAN 14 ALT      I267
&SDAA(15) SETB 1                        SET INDICATOR              I267
.SDALTF  AIF   (NOT &SGDAPFB(&COUNTB)).SETYPA     CHAN 15 ALT      I267
&SDAA(16) SETB 1                        SET INDICATOR              I267
         AGO   .SETYPA                  TO SET FINAL TYPE WITH OPTION B
.*       CONSOLE ERROR ROUTINE CHECK
.TFCON   AIF   (NOT &SGDT04B(&COUNTB)).TFDD  NOT CON-TEST FOR DISPLAYS
&ERRTAB  SETC  '04'                     SET CONSOLE ERRTAB        20065
         AIF   (&SGSCHDB(34)).NOSET      IS THERE MCS             M1736
         AIF   ('&DEVAD'(1,3) NE '&SGSCHDC(1)'(1,3)).NOTPRIM PRI  M1736
&SYSRES  SETA  2                         SET PRIMARY BIT          M1736
         AGO   .NOSET                                            A40532
.NOTPRIM AIF   ('&DEVAD'(1,3) NE '&SGSCHDC(2)'(1,3)).NOSET        M1736
&SYSRES  SETA  1                         SET ALTERNATE BIT        M1736
.NOSET   ANOP                                                     M1736
         AIF   (&SGDU01B(&COUNTB)).E1052     TEST FOR 1052        20065
         AIF   (&SGDU03B(&COUNTB)).E1055     TEST FOR 1055        20065
         AIF   (&SGDU08B(&COUNTB)).E3213     TEST FOR 3213        99235
.*       22MP DEVICE TYPE
&TYPEA   SETC  '10000823'               SET DEVTYPE FIELD         20065
         AGO   .UCBOPUT                                           20065
.E1055   ANOP                                                     20065
&TYPEA   SETC  '10000822'               SET DEVTYPE FIELD         20065
         AGO   .UCBOPUT                                           20065
.E1052   ANOP                                                     20065
&TYPEA   SETC  '10000820'               SET BASIC 1052 CONSOLE TYPE
         AGO   .UCBOPUT
.E3213   ANOP                                                     99235
&TYPEA   SETC  '10000830'               SET 3213 DEV/UNIT TYPE    99235
         AGO   .UCBOPUT                 PUNCH IECIUCB MACRO CALL  99235
.TFPRT   AIF   (NOT &SGDT06B(&COUNTB)).TFRDPN   NOT PRINTER-TEST R/P
         AIF   (&SGDU04B(&COUNTB)).E1419     TEST FOR 1419        19033
         AIF   (&SGDU05B(&COUNTB)).E1275     TEST FOR 1275        19033
         AIF   (&SGDU06B(&COUNTB)).E3211     TEST FOR 3211        20202
         AIF   (&SGDU07B(&COUNTB)).E2245    2245?                 21092
&ERRTAB  SETC  '07'                     SET 1443/1403 PRINTER ERRTAB
         AIF   (&SGDU03B(&COUNTB)).E1443  1443 PRINTER
&TYPEA   SETC  '10000808'               SDT BASIC 1403 TYPE FIELD
&NUCSIZ  SETA  &NUCSIZ+8                ADD EXTENSION             20202
         AIF   (NOT &SGDF02B(&COUNTB)).UCBOPUT  NOT THIS FEATURE
&LCHCNT  SETA  128                      SET UNIV CHAR SET FEATURE
&NUCSIZ  SETA  &NUCSIZ+8                ADD UCS                    P256
         AGO   .SETYPA                  TO SET TYPE FIELD IN UCB
.E1419   AIF   (&MCRDR).MCRSEC          TEST FOR SECONDARY CU     19033
&MCRDR   SETB  1                        SET SECOND PASS INDICATOR 19033
&TYPEA   SETC  '4000081D'               SET 1419 PRIMARY          19033
         AGO   .ETABMCR                 GO SET ERRTAB             19033
.E1275   AIF   (&MCRDR).MCRSEC          TEST FOR SECONDARY CU     19033
&MCRDR   SETB  1                        SET SECOND PASS IND       19033
&TYPEA   SETC  '4000081F'               SET 1275 PRIMARY          19033
         AGO   .ETABMCR                 GO SET ERRTAB             19033
.MCRSEC  ANOP                                                     19033
&MCRDR   SETB  0                        CLEAR SECOND PASS IND     19033
&TYPEA   SETC  '0000081E'               SET 1419/1275 SECONDARY   19033
.ETABMCR ANOP                                                     19033
&ERRTAB  SETC  '73'                     SET ERRTAB FOR 1419/1275  19033
         AGO   .UCBOPUT                 GO SET TYPE FIELD         19033
.TFDD    AIF   (NOT &SGDT05B(&COUNTB)).TFPRT      NOT DISPLAY-TEST PRT
.TP2260  ANOP                                                     20002
&NUCSIZ  SETA  &NUCSIZ+16               ADD GRAPHICS               P256
    SGIEC2GR   &UCBNO,&DEVAD,&TYPC,&DEVTAB,&STATAB,&LCHN,&DEVNDX,&ALOCC*
               NT,&SYSRES,&SQOPT
         AGO   .GREND
.E1443   ANOP             SET TYPE AND CHECK FEATURES ON 1443
&TYPEA   SETC  '1000080A'               SET BASIC TYPE FOR 1443
         AGO   .SETYPA
.E3211   ANOP                                                     20202
&TYPEA   SETC  '10800809'               SET 3211 TYPE             20202
&ERRTAB  SETC  '06'                     SET ERRTAB                20202
&NUCSIZ  SETA  &NUCSIZ+8                ADD EXTENSION             20202
&TYPE(3) SETB  1                        3211 CALL TO MAINLINE    A44146
         AGO   .UCBOPUT                                           20202
.E2245   ANOP                                                     21092
&ERRTAB  SETC  '08'                        SET 2245 ERRTAB        21092
&NUCSIZ  SETA  &NUCSIZ+8                   ADD EXTENSION          21092
&TYPEA   SETC  '1000080B'                  SET 2245 TYPE          21092
         AGO   .UCBOPUT                                           21092
.TFRDPN  AIF   (NOT &SGDT07B(&COUNTB)).TFTPD  NOT R/P-TEST FOR T/P
&LCHCNT  SETA  &SGDF01B(&COUNTB)
         AIF   (&SGDU08B(&COUNTB) OR &SGDU09B(&COUNTB)).E35XX     21088
         AIF   (&SGDU01B(&COUNTB)).E1442  IS IT A 1442 RDR/PNCH
         AIF   (&SGDU02B(&COUNTB)).E2501  IS TI 2501 PUNCH
         AIF   (&SGDU03B(&COUNTB)).E2520  IS IT A 2520 PUNCH
  AIF  (&COUNTCU EQ 0).SKIPME
&LCHCNT  SETA  &SGUNF1B(&COUNTCU)
.SKIPME  ANOP
         AIF   (&SGDU04B(&COUNTB)).E2540R  IS TI A 2540 READET
         AIF   (&SGDU05B(&COUNTB)).E2540P IS IT A 2540 PUNCH
         AIF   (&SGDU06B(&COUNTB)).E2671     TEST FOR 2671        19017
.E2495   ANOP                                                     19016
&ERRTAB  SETC  '6F'                     SET 2495 ERRTAB           19016
&TYPEA   SETC  '00000818'               SET 2495 DEVICE TYPE FLD  19016
         AGO   .ADDUR                                             19016
.E2671   ANOP
&ERRTAB  SETC  '14'                     SET ERRTAB FOR 2671 PEPER TAPE
&TYPEA   SETC  '10000810'              SERT 2671 PAER TAPE
         AGO   .UCBOPUT
.E1442   ANOP                            1442 ERROR TAB AND THYPE FIELD
&ERRTAB  SETC  '05'                     SET 1442 RDR/PNCH ERRTAB
&TYPEA   SETC  '50000803'                SET COMMON 1442 TYPA
         AIF   (&SGDM01B(&COUNTB)).SETYPA  IS IT A READER PUNCH
&LCHCNT  SETA  256+&LCHCNT             NO-SET PUNCH ONLY OPTION BIT
         AGO   .SETYPA                   TO SET FINL TYPE
.E2501   ANOP                            2501 PUNCH ERRTAB AND TYPE
&ERRTAB  SETC  '05'                     SET 2501 PUNCH ERRTAB
&TYPEA   SETC  '50000804'                SET BASIC 2501 TYPE
         AGO   .SETYPA
.E2520   AIF   (&SGDM01B(&COUNTB)).E2520A
&LCHCNT  SETA  &LCHCNT+256
.E2520A  ANOP
&ERRTAB  SETC  '05'                     SET 2520 PUNCH ERRTAB
         AIF   (&SGDM02B(&COUNTB) OR &SGDM03B(&COUNTB)).T2520 IS IT PCH
&TYPEA   SETC  '50000805'                SET BASIC 2520 R/P TYPE
         AGO   .SETYPA
.T2520   ANOP                            THIS IS A 2520 PUNCH ONLY
&TYPEA   SETC  '10000805'              SET BASIC 2520 PUNCH TYPE
         AGO   .SETYPA
.E2540P  ANOP                            2540 PUNCH ERRTAB AND TYPE
&ERRTAB  SETC  '0D'   SET ERROR TAB
&TYPEA   SETC  '10000802'     SET PUNCH TYPE FIELD
         AGO   .SETYPA
.E2540R  ANOP                            2540 READER ERRTAB AND TYPE
&ERRTAB  SETC  '0D'                      SET 2540 R/P ERRTAB
&TYPEA   SETC  '10000801'                SET BASIC 2540 TYPE FIELD
         AGO   .SETYPA
.E35XX   ANOP                                                     21088
&NUCSIZ  SETA  &NUCSIZ+8               ADD EXTENDED SENSE AREA    21088
&ERRTAB  SETC  '0B'                    SET 3505,3525 ERRTAB       21088
         AIF   (NOT &SGDF03B(&COUNTB)).CHKMULT                    21088
&LCHCNT  SETA  &LCHCNT+32                SET TWOLINE PRINT      SA59756
         AGO   .E35XXA                                            21088
.CHKMULT AIF   (NOT &SGDF02B(&COUNTB)).E35XXA                     21088
&LCHCNT  SETA  &LCHCNT+16                SET MULTI LINE PRINT   SA59756
.E35XXA  ANOP                                                     21088
         AIF   (&SGDU09B(&COUNTB)).E3525     3525?                21088
&TYPEA   SETC  '10000806'              SET BASIC 3505 TYPE        21088
         AGO   .SETYPA
.E3525   ANOP
&TYPEA   SETC  '1000080C'              SET BASIC 3525 TYPE        21088
         AGO   .SETYPA
.TFTPD  ANOP                          TEST FOR TELEPROCESSSINF
&ERRTAB  SETC  '00'                     SET DUMMY UCB ERRTAB
         AIF   (NOT &SGDT02B(&COUNTB)).TPTYPB                      TP01
         AIF   (&SGDU04B(&COUNTB) AND (&SGDAD1B(&COUNTB) OR &SGDAD3B(&C*
               OUNTB))).TPTYPA          TEST FOR TP               19006
         AIF   (&SGDU01B(&COUNTB) AND &SGDAD8B(&COUNTB)).TPTYPA    TP01
         AIF   (&SGDAD1B(&COUNTB) AND (&SGDU02B(&COUNTB) OR &SGDU03B(&C*
               OUNTB))).TPTYPA          2741C OR 2741P             TP01
         AIF   (&SGDAD7B(&COUNTB) AND (&SGDU05B(&COUNTB)OR &SGDU06B(&CO*
               UNTB)OR &SGDU07B(&COUNTB)OR &SGDU08B(&COUNTB))).TPTYPA
.E1285   AIF   (NOT &SGDU01B(&COUNTB) OR &SGDAD8B(&COUNTB)).E1287 19017
&TYPEA   SETC  '4000081A'               SET 1285 TYPE             19017
&ERRTAB  SETC  '70'                     SET ERRTAB                19017
         AGO   .ADDUR                                             19017
.E1287   AIF   (NOT &SGDU02B(&COUNTB) OR &SGDAD1B(&COUNTB)).E1288 19017
&TYPEA   SETC  '4000081B'               SET 1287 TYPE             19017
&ERRTAB  SETC  '71'                     SET ERRTAB                19017
         AGO   .ADDUR                                             19017
.E1288   AIF   (NOT &SGDU03B(&COUNTB) OR &SGDAD1B(&COUNTB)).TPTYPB
&TYPEA   SETC  '4000081C'               SET 1288 TYPE             19017
&ERRTAB  SETC  '72'                     SET ERRTAB                19017
.ADDUR   ANOP                                                     19017
&NUCSIZ  SETA  &NUCSIZ+4                ADD WORK POINTER          19017
         AGO   .UCBOPUT                                           19017
.TPTYPB  AIF (NOT &SGDT08B(&COUNTB) AND NOT &SGDT12B(&COUNTB)).UCBOPUT
.*                                                                19006
.TPTYPA  ANOP                                                      STAT
    SGIEC2PT   &UCBNO,&DEVAD,&TYPC,&DEVTAB,&STATAB,&LCHN,&DEVNDX,&ALOCC*
               NT,&SYSRES,&SQOPT
         AGO   .GREND
.SETYPA  ANOP            CONVERT BEFORE SETTING FINAL TYPE
         AIF  (NOT &SGDF08B(&COUNTB) OR (NOT &SGDT01B(&COUNTB) AND NOT X
               &SGDT03B(&COUNTB))).SETYPA2                       S21167
&LCHCNT  SETA   &LCHCNT+1          SET POWER RETENTION           S21167
.SETYPA2 ANOP                                                    S21167
         CONVERT TO=EBCDIC,VALUE=&LCHCNT,DIGITS=3
&TYPEA   SETC  '&TYPEA'(1,1).'&EBCDIC'(1,3).'&TYPEA'(5,4)
.UCBOPUT AIF   (NOT &SGDEVB(1)).UCB0P2  SKIP INSPECTION
&SCR     SETA  &SGETABA(&COUNTB)-&SGETABA(&COUNTB)/256*256
.*                                      LAST TWO CHAR DEVTYPE
         AIF   (&SGDEVTP(&COUNTB) EQ 0 AND &SCR EQ 0).UCB0P1
         CONVERT   TO=EBCDIC,VALUE=&SGDEVTP(&COUNTB),DIGITS=6
&TYPEA   SETC  '&EBCDIC'
         CONVERT   TO=EBCDIC,VALUE=&SCR,DIGITS=2
&TYPEA   SETC  '&TYPEA'.'&EBCDIC'
.UCB0P1  ANOP
&SCR     SETA  (&SGETABA(&COUNTB)-&SGETABA(&COUNTB)/65536*65536)/256
.*                                      ERRTAB SETTING
         AIF   (&SCR EQ 0).UCB0P2
&SCR   SETA    &SCR-1
         CONVERT   TO=EBCDIC,VALUE=&SCR,DIGITS=2
&ERRTAB  SETC   '&EBCDIC'
.UCB0P2  PUNCH '.UCB&INDX ANOP'                                   M5011
.******************************************************************UNC8
         AIF   (NOT &UNPSUDO(&COUNTB)).IUNX2                      *UNC8
&TYPC    SETC  'SUD'         INDICATE PSUDO DEV FOR UCB MACRO     *UNC8
.IUNX2   ANOP                                                     *UNC8
.******************************************************************UNC8
 PUNCH '  IECIUCB &UCBNO,&DEVAD,&TYPC,&DEVTAB,&ERRTAB,&STATAB,&LCHN,,&T*
               YPEA,&ALOCCNT,&SYSRES,&SQOPT,&SGCPRGB(13),,&TMSK,&MPFLG,*
               &OFF,&DEVADE,&SGDF09B(&COUNTB)'       UCB MACRO CALL
.******************************************************************UNC8
         AIF   ('&TYPC' NE 'SUD').IUNX3                           *UNC8
&TYPC    SETC  'DUM'         SET IT BACK TO DUMMY DEV TYPE.       *UNC8
.IUNX3   ANOP                                                     *UNC8
.******************************************************************UNC8
&BMP     SETB  (&SQOPT EQ 1)             SET FOR UCBA             21048
&SQOPT   SETA  0                         CLEAR                    21048
.*    ** TEST FOR LAST DEVICE THIS GENERATION GOES HERE
.GREND   ANOP
&OFF     SETB  0                                                  20201
&ALOCCNT SETA  0                                                  20201
&MPFLG   SETA  0                        CLEAR MP FLAG             19022
&NUCSIZ  SETA  &NUCSIZ+24               ADD BASIC UCB SIZE         P256
         AIF   (NOT &SGCPRGB(13)).NOMP65    TEST FOR MP65          P256
&NUCSIZ  SETA  &NUCSIZ+4                ADD MP65 EXTENSION         P256
.NOMP65  AIF   (&NUCSIZ LT 32768).SIZOK                            P256
   MNOTE 5,'* * *IEIIEC202 32K LIMIT RESERVED FOR UCB/RQE''S EXCEEDED'
         AGO   .ABIOEND                                            P256
.SIZOK   ANOP                                                      P256
&SYSRES SETA 0
&NCHANSW SETB  0                       RESET NW CHANNEL SWITCH
&NCUSW   SETB  0                       RESET NEW CONTROL UNITM SW
&IRSW    SETB  1                       SET INITIAL RUN SWITCH ON
&COUNT   SETA  &COUNT+1                     UPDATE DEVICE COUNT
&INDX    SETA  &INDX+1                 UPDATEDEVICE INDEX
         PUNCH '         AGO   .UCB&INDX      TO NEXT UCB'
         AIF   ('&TYPC' EQ 'ZS' OR '&TYPC' EQ 'ML').WRKA          20201
         AIF   ('&TYPC' EQ 'WR' OR '&TYPC' EQ 'NR').WRKA     NEW UR?
 AIF   ('&TYPEA'(5,4) EQ '0808' OR '&TYPEA'(5,4) EQ '0809').WRKA  20202
         AIF   (&SGDT01B(&COUNTB)).WRKA      TEST FOR TAPE        19023
  AIF ('&TYPEA'(5,4) EQ '0823' OR '&TYPEA'(5,4) EQ '0830').WRKA SA68563
         AIF   ('&TYPEA'(5,4) EQ '0818' OR '&TYPEA'(5,4) EQ '081A' OR  C
               '&TYPEA'(5,4) EQ '081B' OR '&TYPEA'(5,4) EQ '081C' OR   C
               '&TYPEA'(5,4) EQ '0820' OR '&TYPEA'(5,4) EQ '0822').WRKA
.*                                                               A41637
         AIF   (NOT &SGDT03B(&COUNTB)).NOWRK TEST DIRECT ACCESS    TWBS
.WRKA    PUNCH '.WK&WKIDX IECIUCBA &UCBNO,&TYPEA,&BMP,&BMPSH,&TMSK,&EVAX
               R,&EVAW,&LOG'                                      20201
&LOG     SETB  0                        CLEAR CU LOG INDICATOR    20201
&WKIDX   SETA  &WKIDX+1                 UPDATE INDEX               TWBS
         PUNCH '         AGO   .WK&WKIDX   TO NEXT WORK AREA '     TWBS
.NOWRK   ANOP                                                      TWBS
&LCHCNT  SETA  0                         RESET COMMON COUNTER
.*  THE NEXT THREE LINE DETERMINE IF THE STATISTICS TABLE       SA57909
.*  SEGMENTS FOR 2400 TAPES MUST BE 20 BYTES LONG. THIS IS      SA57909
.*  TRUE WHEN 3400S AND DDR AREA BOTH IN THE SYSTEM WITH 2400S. SA57909
         AIF   ('&TYPEA'(5,4) NE '8001').TST34XX  IS THIS 2400? SA57909
         AIF   (&DDRCNT EQ 0).TST34XX   IS DDR IN THE SYSTEM?   SA57909
         AIF   (&SGDCLSB(73) OR &SGDCLSB(77)).STAT34  ANY 3400?  SM5012
.TST34XX AIF   ('&TYPEA'(5,4) NE '8003').NASP                   SA57909
.STAT34  ANOP                                                   SA57909
&STATAB  SETA  &STATAB+1               UPDATE STATISTICS FOR 34XX M0160
&ASPCNT  SETA  (&ASPCNT+1)              UPDATE CNT OF EXT ENTRIES M0160
.NASP    ANOP                                                     M0160
         AIF   (&INDX GT &DEVCNT).OUT   LAST DEV.-YES-EXIT      SA54571
         AIF   ('&TYPC' EQ 'ZS' OR '&TYPC' EQ 'ML').ZSML        SA54571
&STATAB  SETA  &STATAB+1                UPDATE STATAB              STAT
         AIF   (NOT &SGDT03B(&COUNTB)).STATST     TEST FOR DA      P256
         AIF   (NOT &SGDU06B(&COUNTB)).STATST     TEST FOR 2314    P256
.*  ADJUST STATAB FOR 2314                                         STAT
&STATAB  SETA  &STATAB-1                STATAB SAME FOR UCB'S     20201
         AGO   .MDTST                                             20201
.ZSML    ANOP                                                     20201
         AIF   ('&TYPC' EQ 'ML').MDTST  TEST FOR MERLIN           20201
         AIF   ('&TYPC' EQ 'ZS' AND &CT2314 LT 8).DEVLOOP   ZEUS? 20201
.INCZSML ANOP                                                     20201
&STATAB  SETA  &STATAB+1                INCREMENT STATAB          20201
         AGO   .INTSW23                                           20201
.MDTST   AIF   ((&SGDM09B(&COUNTB) AND &CT2314 LT 9) OR (&SGDM08B(&COUN*
               TB) AND &CT2314 LT 8) OR (&SGDM07B(&COUNTB) AND &CT2314 *
               LT 7)).DEVLOOP                                      STAT
         AIF   ((&SGDM06B(&COUNTB) AND &CT2314 LT 6) OR (&SGDM05B(&COUN*
               TB) AND &CT2314 LT 5) OR (&SGDM04B(&COUNTB) AND &CT2314 *
               LT 4)).DEVLOOP                                      STAT
         AIF   ((&SGDM03B(&COUNTB) AND &CT2314 LT 3) OR (&SGDM02B(&COUN*
               TB) AND &CT2314 LT 2) OR (&SGDM01B(&COUNTB) AND &CT2314 *
               LT 1)).DEVLOOP                                      STAT
         AIF   ('&TYPC' EQ 'ML').INCZSML GO INCREMENT STATAB      20201
&STATAB  SETA  &STATAB+9                UPDATE STATAB FOR NEXT UCB STAT
.INTSW23 ANOP                                                     20201
&CT2314  SETA  0                        CLEAR COUNTER              STAT
.STATST  AIF   (&STATAB LT 256).DEVLOOP STATAB OVER 1 BYTE         P256
         AIF   (&STCNT EQ 5).ERDEV      FIRST STAT ENTRY FULL      P256
&STATLST(&STCNT) SETA &INDX             UCB # TO STATLST           P256
&STCNT   SETA  &STCNT+1                 UPDATE COUNT               P256
         AGO   .DEVLOOP                 GET NEXT DEVICE            P256
.ERDEV   MNOTE 5,'STATISTIC TABLE EXCEEDS LIMIT'                   P256
         AGO   .ABIOEND                                            P256
.ERRORA  MNOTE 4,'**SGIEC202A NO I/O REQUEST ELEMENTS SPECIFIED **'
         AGO   .ABIOEND
.ORDERR  ANOP
.CHORDER ANOP
         MNOTE 7,'DEVICE ADDRESS OUT OF ORDER, END OF GENERATION'
         AGO   .ABIOEND
.ERROR   MNOTE 7,'NO DEVICE LIST SPECIFIED, END GENERATION'
.ABIOEND ANOP                          ABNORMAL SYSGN END FROM IOS
&SGQUITB SETB  1                       SET QUIT SWITCH
         MEXIT
.OUT     ANOP
&LSTMAC  SETB  1                  SET LAST MACRO SWITCH
         AIF   (NOT &EOALTS).LUSTRT    HAVE ALL ALTS. BEEN PROCESSED
.COUT    ANOP                          YES- FINISH UP LAST PUNCHES
&LSTDEV  SETB  1                       SET LAST DEVICE SWITCH
         PUNCH '.LST&MPXCNT ANOP     LAST UCB ADD ENTRY'
         PUNCH '    IECULK3 0,0,0,0,0,&LSTDEV'
&DPFNS   SETA  (2*&NUA)-(2*&DPFNS)+&DPFNSA+2 COMPUTE END FENCE     DPTH
         AIF   (&TWOBS EQ 1).TBS3                                  RL17
         PUNCH '         AGO   .UCB1      TO FIRST UCB'
         AGO   .TBS3A                                              RL17
.TBS3    ANOP                                                      RL17
         PUNCH '         AGO   .END     TO STATISTICS TABLE  '     RL17
.TBS3A   PUNCH '.TAB&M   ANOP            LAST CHANNEL ENTRY'
         PUNCH '  IECULK1 0,0,&NCHAN,&LSTDEV'
         PUNCH '         AGO   .TCU1       TO FIRST CU ENTRY'
        AGO  .NCHRTN                  TO PUT OUT LAST CHANNEL MACROS
.*   ALL DEVICES HAVE BEEN PROCESSED, FROM INFORMATION GATHERED DURING
.*   PROCESSING THE FOLLOWING WILL NOW BE COMPUTED AND PUT OUT-
.*      MAINLINE MACRO,CHANNEL TABLE MACRO,LCHWRD MACRO, DEVICE TABLE
.*      MACRO, TEST CHANNEL CODE MAC, CHANNEL SRCH MACRO, ATTEN TABLE
.*      MACRO, AND STATISTICS TABLE.
.LSTMAC  PUNCH '.TCH&I   ANOP       LAST TEST CHAN MOD'
         PUNCH '         AGO   .SRCH1     TO FIRST CSRCH MOD'
         PUNCH '.SRCH&J  ANOP         LAST CHANNEL SEARCH MOD'
         PUNCH '         AGO   .TBLTAB          TO TABLE MACRO'   20201
         PUNCH '.TCU&T   ANOP       LAST CU ENRY TO TABLE'
         PUNCH '         AGO   .LST1       TO FIRST CUB ADD'
         PUNCH '.UCB&INDX   ANOP      LAST UCB ENTRY4'
         PUNCH '         AGO   .RQE     TO RQE AND STATAB'
         PUNCH '.WK&WKIDX ANOP    LAST WORK ENTRY  '               TWBS
         PUNCH '         AGO   .UCBEND  TO STATISTICS'             TWBS
         AIF   (NOT &SGDCLSB(31)).TST2314    TEST FOR 2311        20201
&DA      SETA  1                         SET 2311 IND.            20201
.TST2314 AIF   (NOT &SHR(1)).TST2321                              20201
&RR      SETA  1                         SET 2311 SHARED          20201
.TST2321 AIF   (NOT &SGDCLSB(32)).TST2301    TEST FOR 2321        20201
&DA      SETA  &DA+2                    SET 2321 IND.             20201
         AIF   (NOT &SHR(2)).TST2301                              20201
&RR      SETA  &RR+2                     SET 2321 SHARED          20201
.TST2301 AIF   (NOT &SGDCLSB(28)).TST2303    TEST FOR 2301        20201
&DA      SETA  &DA+4                    SET 2301 IND.             20201
         AIF   (NOT &SHR(3)).TST2303                              20201
&RR      SETA  &RR+4                    SET 2301 SHARED           20201
.TST2303 AIF   (NOT &SGDCLSB(42)).TST2305    TEST FOR 2303        20201
&DA      SETA  &DA+8                    SET 2303 IND.             20201
         AIF   (NOT &SHR(4)).TST2305                              20201
&RR      SETA  &RR+8                    SET 2303 SHARED           20201
.TST2305 AIF   (NOT &SGDCLSB(70)).TST3330    TEST FOR 2305        20201
&DA      SETA  &DA+16                   SET 2305 IND.             20201
         AIF   (NOT &SHR(5)).TST3330                              20201
&RR      SETA  &RR+16                   SET 2305 SHARED           20201
.TST3330 AIF   (NOT &SGDCLSB(69)).TSTEND     TEST FOR 3330        20201
&DA      SETA  &DA+32                   SET 3330 IND.             20201
         AIF   (NOT &SHR(6)).TSTEND                               20201
&RR      SETA  &RR+32                   SET 3330 SHARED           20201
.TSTEND  PUNCH '.GBL      IECGBL &TWOBYT,&SGMENTB(14),&DA,&RR'    20201
         PUNCH '         AGO   .IOSTART'                          20201
         PUNCH '.IECIOS  ANOP      MAINLINE IOS'                  20201
.*   INITIALIZE COUNTERS
&I       SETA  1
&J       SETA  1
.*   GET HS CHANNEL MASK FOR IOS
.CHLOP   AIF   (&CH(&I) NE 2).CTST
         AIF   (NOT &SSDACH(&I)).CTSTA  TEST FOR DA ON CHAN     SA54451
&HSCHMSK SETA  &HSCHMSK+&J
.CTSTA   AIF   (NOT &SSTACH(&I)).CTST   TEST FOR TA ON CHAN     SA54451
&HSTAMSK SETA  &HSTAMSK+&J                                      SA54451
.CTST    ANOP
&J       SETA  &J*2
&I       SETA  &I+1
         AIF   (&I LT 17).CHLOP         GO BACK IF MORE CHANNELS   I267
&J       SETA  &HSTAMSK                 SET TAPE MASK
.*   SET UP GRAPHICS 0=NO DEVS.,1=NO GAM & DEV.,2=GAM & DEV.
         AIF   (NOT &GR).GRF0           TEST FOR ANY DEVICES       GRAF
&GS      SETA  1                        SET TO 1                   GRAF
         AIF   (NOT &SGMENTB(12)).GRF0       TEST FOR GAM          GRAF
&GS      SETA  2                        SET TO 2                   GRAF
.GRF0    ANOP                                                      GRAF
         AIF  (NOT &SGDCLSB(80)).NOANR
&ANR     SETA 1           SET ANR                                 M2054
         AIF   (NOT &SGDMGTB(4)).NOANR
&ANR     SETA 2           SET ANR AND BTAM FOR MAIN               M2054
.NOANR   ANOP                                                     M2054
&TYPE(2) SETB  (&SGSCHDB(7))            SET SMF SWITCH             SMFA
&TYPE(5) SETB  (&SGSUPRB(35))           SET APR SWITCH             APRL
&TYPE(6) SETB  0    ******************** RESERVED FOR VARY PATH ******
&TYPE(11)  SETB  (&VOLSTAT)             VOLUME STATISTICS         19023
&TYPE(13) SETB (NOT &SGSUPRB(36))       DAVV                     BBBBBB
&TYPE(14)  SETB  0                      RESERVED                 BBBBBB
&TYPE(17) SETB (&SGSUPRB(45))            FETCH PROTECT            21046
&TYPE(18)  SETB (&SGSUPRB(26))          OLTEP                     19026
&TYPE(19) SETB (&SGSCHDB(44))           SET TSO                   20001
&TYPE(21)  SETB  (&SGSUPRB(28))         RMS                       20061
&TYPE(22)  SETB  (&SGDMGTB(5))          TCAM                      20002
.*   GET  SYSTEM TYPE PARAMETERS
&I       SETA  0                        INITIALIZE  TYPE SYSTEM  BBBBBB
         AIF   (&SGCPRGB(1)).ISET       TEST FOR PCP
&I       SETA  1                        SET MFT                  BBBBBB
         AIF   (&SGCPRGB(4)).ISET       TEST FOR MFT             BBBBBB
&I       SETA  2                        SET MVT TYPE             BBBBBB
.ISET    ANOP                                                   SA54451
&LCHCNT  SETA  1                        INITIALIZE COUNT         BBBBBB
&TYPEA   SETC  'IECXCP'                 SET CALL TO FIRST MACRO  BBBBBB
.IOSLOP  AIF   (&LCHCNT NE 2).NO202ID                            21XPTF
     PUNCH 'ID202    DS    0H  -  SGIEC202  LEVEL - US06787'
.NO202ID ANOP                                                    21XPTF
 PUNCH  ' &TYPEA  &TYPE(1),&TYPE(2),&TYPE(3),&TYPE(4),&TYPE(5),&TYPE(6)X
               ,&TYPE(7),&TYPE(8),&TYPE(9),&TYPE(10),&TYPE(11),&SGSUPRBX
               (23),                                    XXXXXX '
 PUNCH         '               &SGSUPRA(1),&HSCHMSK,&I,&J,&GS,0,&TYPE(1X
               2),&SGSCHDA(7),0,&SGSUPRB(29),&SGCPRGB(13),&TWOBS,&ANR, X
                                     *********'
 PUNCH     '               &TYPE(13),&DDRCNT,&TYPE(15),&TYPE(16),&TYPE(X
               17),&TYPE(18),&TYPE(19),&TYPE(20),&TYPE(21),&TYPE(22),&TX
               YPE(23),&TYPE(24),&TYPE(25)'                      BBBBBB
&LCHCNT  SETA  &LCHCNT+1                UPDATE COUNTER           BBBBBB
&TYPEA   SETC  'IECINT'                 SET CALL FOR SECOND MACROBBBBBB
         AIF   (&LCHCNT LT 3).IOSLOP    TEST FOR SECOND CALL     BBBBBB
&TYPEA   SETC  'IECIOS'                 SET CALL FOR THIRD MACRO BBBBBB
         AIF   (&LCHCNT EQ 3).IOSLOP    TEST FOR THIRD CALL      BBBBBB
         AIF   (NOT &TCHAP).NOAP        TEST FOR ANY SEL ALTS      TCHB
         PUNCH '   IECXTCH    (0,&CHCT(1),&CHCT(2),&CHCT(3),&CHCT(4),&CX
               HCT(5),&CHCT(6),&CHCT(7),&CHCT(8),&CHCT(9),&CHCT(10),&CH*
               CT(11),&CHCT(12),&CHCT(13),&CHCT(14),&CHCT(15))'    I267
.*                                                                 TCHB
.NOAP    ANOP                                                      TCHB
         AIF   (NOT &SGCPRGB(13)).NMPS                             MP65
 PUNCH '          ENTRY IECHICHA'                                  MP65
 PUNCH 'IECHICHA DC    F''&NCHAN'''                                MP65
.NMPS    PUNCH '         AGO   .TCH1      TO FIRST TCH MOD'
.*
.*       THE FOLLOWING IS THE MACRO INST. TO BUILD THE DEVICE TABLE
         PUNCH '.TBLTAB  ANOP  LCH,DEVICE AND CHAN TABLE'         20201
         AIF   (&TYPE(15)).TBL7         GREATER THAN 7?           20201
         PUNCH ' IECTBL  (&CH(1),&CH(2),&CH(3),&CH(4),&CH(5),&CH(6),&CHX
               (7)),&SGCPRGB(13),&LCHTOT,                              X
                       ******'                                    20201
         AGO   .ICT7                                              20201
.TBL7    PUNCH ' IECTBL  (&CH(1),&CH(2),&CH(3),&CH(4),&CH(5),&CH(6),&CHX
               (7),&CH(8),&CH(9),&CH(10),&CH(11),&CH(12),&CH(13),&CH(14X
               ),&CH(15),&CH(16)),                         ******'
         PUNCH '               &SGCPRGB(13),&LCHTOT,                   X
                                            ******'
.ICT7    ANOP                                                     20202
&LCHCNT  SETA  2                        INITIALIZE COUNTER        20202
         PUNCH '               (&TYPTAB(1),                            X
                                    ******'                       M6186
.TYPLOOP AIF   (&LCHCNT EQ 25).TYPOUT   TEST FOR LAST             20202
         AIF   ('&TYPTAB(&LCHCNT+1)' EQ '').TYPOUT     TEST FOR NULL
         PUNCH '               &TYPTAB(&LCHCNT),                       X
                                          ******'                A45245
&LCHCNT  SETA  &LCHCNT+1                UPDATE COUNTER            20202
         AGO   .TYPLOOP                 LOOP BACK FOR MORE        20202
.TYPOUT  PUNCH '               &TYPTAB(&LCHCNT)),&TYPE(18)'       21051
         PUNCH '         AGO  .TAB1     TO FIRST UCB ADDR'        20201
         PUNCH '.IOSB    ANOP   '
 PUNCH  ' IECIOSB &TYPE(1),&TYPE(2),&TYPE(3),&TYPE(4),&TYPE(5),&TYPE(6)X
               ,&TYPE(7),&TYPE(8),&TYPE(9),&TYPE(10),&TYPE(11),&SGSUPRBX
               (23),                                    XXXXXX'
 PUNCH         '               &SGSUPRA(1),&HSCHMSK,&I,&J,&GS,&DRM,&TYPX
               E(12),&SGSCHDA(7),&SGDCLSB(54),&SGSUPRB(29),&SGCPRGB(13)X
               ,&TWOBS,&TWOBYT,                      *********'
 PUNCH     '               &TYPE(13),&DDRCNT,&TYPE(15),&TYPE(16),&TYPE(X
               17),&TYPE(18),&TYPE(19),&TYPE(20),&TYPE(21),&TYPE(22),&TX
               YPE(23),&TYPE(24),&TYPE(25)'                      BBBBBB
         PUNCH '          AGO   .WK1   '
         PUNCH '.END    ANOP    '
         AIF   (&TWOBS EQ 0).TBS4                                  RL17
         PUNCH '          AGO   .IOSB   '
.TBS4    PUNCH '.UCBEND  ANOP   '                                BBBBBB
.*   PUNCH OUT CALL FOR STATISTICS TABLE MACRO                     RL17
&CT2314  SETA  (&SG2314A+&SGCNTRA(3))-((&SG2305A/8)*7)-&SG3330A   20201
&CT2314  SETA  (&CT2314+&ASPCNT)        ADD 34XX COUNT            M0160
 PUNCH ' IECIST &CT2314,(&STATLST(1),&STATLST(2),&STATLST(3),&STATLST(4*
               ),&STATLST(5)),&STCNT '                             P256
         AIF   (&SGSUPRB(29) NE 1).NOCCH                         BBBBBB
         PUNCH '         END  '                                    CCHB
         PUNCH '/*  '                                              CCHB
&SGCTRLC(6)  SETC   'IGFCCH'                                       CCHB
         COPY  SGASMPAK                                            CCHB
         PUNCH ' IGFCATAP &SGCPRGB(13),&SGCPRGB(8),&TYPE(15) '     I267
.NOCCH   PUNCH '         END  '
         PUNCH '/*'
&LCHCNT  SETA  1                        INITIALIZE COUNTER         DPTH
&T       SETA  &DPCNT                   SET FIRST SWITCH           DPTH
.DPLOOP  ANOP                                                      DPTH
         SGIEF202  &DP(&LCHCNT),&T,0
&T       SETA  0                        CLEAR INITIAL SWITCH       DPTH
&LCHCNT  SETA  &LCHCNT+1                UPDATE COUNTER             DPTH
         AIF   (&LCHCNT LT &DPCNT).DPLOOP    TEST FOR END          DPTH
         SGIEF202  &DPFNS,0,1
&SGCTRLC(6)  SETC  'IEC23XXF'                                      I266
         COPY  SGASMPAK                                            I266
 PUNCH ' IEC23XXF &SGDCLSB(41),&SGDCLSB(28),&SGDCLSB(30),&SGDCLSB(42),&X
               SGDCLSB(32),&SGDCLSB(40),&SGSUPRB(29),&SGSUPRB(33),&SGSUX
               PRB(34),&SGDCLSB(70),&SGDCLSB(69),&SGCPRGB(11)'   A35351
         PUNCH '         END '                                     I266
         PUNCH '/*'                                                I266
         MEND
