         MACRO
         SGIEE201
         COPY  SGGBLPAK
.*A010600,020500,180500-180800,190500-190920,194500-194960,      S21003
.*A341600-341900,342020,343200-343810,352050-352550,             S21003
.*A388600,388700,524120,553600,654500,                           S21003
.*A654600,656500-656920,752300,752500-752598                     S21003
.*C524100,553100,752400                                          S21003
.*                                                                19029
.*342000,344000-346000,349000-351000,751000-752000,366200         19029
.*DIDOCS                                                          19029
.*                                                                19085
.*111000,114000,168400,168800,169200-169400                       19085
.*065000,066000,168600,168200,366400,366700
.*CONSOLIDATED SYSGEN REMOVED SVCTABLE CALLS                      19085
.*                                                                19022
.*068000                                                          19022
.*I/O RMS                                                         19022
.*                                                                19018
.*164000                                                          19018
.*SMF PACKAGE 1 FOLLOW ON                                         19018
.*                                                                19872
.*OWNERSHIP                                                       19872
.*170210,170770                                                   20002
.*TCAM                                                            20002
.*156000,827000                                                   20030
.*TSO,BCLMT                                                       20030
.*A170616-170622, C171000                                      @AS70627
.*C170622                                                      @SA77432
         LCLA  &M2,&BIT,&MFC                                      64950
         LCLC  &MASTCON
         LCLC  &AUTH(32),&OLDW1,&OLDW2,&OLDW3,&OLDW4
         LCLC  &HARDM1,&HARDM2,&HARDM3,&HARDM4
         LCLC  &ROUTM1,&ROUTM2,&ROUTM3,&ROUTM4
         LCLC  &RTCODE1(62),&RTCODE2(62),&RTCODE3(62),&RTCODE4(62)
         LCLC  &A(64),&B(64),&C(64)
         LCLC  &E(64)                                             19029
         LCLC  &F(64),&G(64)                                     S21003
         LCLA  &M,&TO
         LCLC  &ATR(64)
         LCLC  &THING,&WHO,&CMDS,&HCPY
         LCLC  &COMP(64),&ALTMC,&ALT(64),&COMPALT(64)
         LCLC  &SCHRDR,&SCHWTR
         LCLC  &S(15)
         LCLB  &SW(9),&X                                           0014
         LCLA  &V(10)
         LCLC  &SCHDLR
         LCLC  &D
         LCLA  &N,&U
         LCLA  &RPYS,&BUFS
         LCLA  &CTL                                                MP65
         LCLC  &T,&SECT
         LCLC  &MIDELM
         LCLC  &SHELM
         LCLB   &SM(1)                                              SMF
         LCLB  &TSO                                               20021
         LCLB  &TCAM                                              20002
         LCLA  &BCLMT                                             20030
         LCLB  &APR,&MCS,&GFX                                     19022
         LCLA  &M3
         LCLB  &TOD                                               20071
         LCLB  &M65MP                                            A32191
         LCLA  &XCP,&RDR,&PNTR,&SIZE                             A27750
.*                                                                20071
.**********   CHECK FOR CPUS WITHOUT THE TOD CLOCK FEATURE   **** 20071
.*       MODELS  30,40,50,65,75,85,91 AND 195/360             CD 21108
         AIF   (NOT (&SGCPRGB(4) OR &SGCPRGB(8))).SKTOD           20071
&TOD     SETB  (NOT (&SGCPUB(1) OR &SGCPUB(2) OR &SGCPUB(3) OR &SGCPUB(*
               4) OR &SGCPUB(5) OR &SGCPUB(6) OR &SGCPUB(7) OR &SGCPUB(*
               9)))                                               20071
.SKTOD   ANOP                                                     20071
.*       THE FOLLOWING CODE SETS UP THE TIMER DYNAMIC AREA FOR
.*       REFRESHABILITY IN MFTII AND MVT SYSTEMS AND CHECKS
.*       THE TIMER GLOBALS SGSUPRB(14) (INTERVAL TIMER) AND
.*       SGSUPRB(13) (TIME OPTION).
         AIF   (&SGSUPRB(13)).TT                                   REFR
&T       SETC  'I'                                                 REFR
         AGO   .EE                                                 REFR
.TT      ANOP                                                      REFR
&T       SETC  'T'                                                 REFR
.EE      ANOP                                                      REFR
&SECT    SETC  'C'                                                 REFR
         AIF   (NOT &SGCPRGB(4)).ES                                REFR
&SHELM   SETC  '04'                                                REFR
&MIDELM  SETC  '45'                                                REFR
         AGO   .SS                                                 REFR
.ES      AIF   (NOT &SGCPRGB(8)).SS                                REFR
&SHELM   SETC  '02'                                                REFR
&MIDELM  SETC  '46'                                                REFR
.SS      ANOP
&SM(1)   SETB  (&SGSCHDB(7)) SMF INDICATOR                        M3449
&TSO     SETB  (&SGSCHDB(44)) TIME SHARING OPTION INDICATOR       M3449
         AIF   (&SGSCHDB(3) AND &SGCPRGB(8)).MS1SWT
         AIF   (&SGCPRGB(4)).A3                                    MFT2
         AIF  (&GETB(1)).X
         AIF   (NOT &SGSCHDB(16)).AA
&SCHRDR  SETC  '&SGSCHDC(3)'(1,3)
         AGO   .CC
.AA      AIF   (NOT &SGSCHDB(17)).BB
&SCHWTR  SETC  '&SGSCHDC(3)'(4,3)                                  6279
         AGO   .BB
.CC      AIF   (NOT &SGSCHDB(17)).BB
&SCHWTR  SETC  '&SGSCHDC(3)'(4,3)
.*
.*       THIS IS A MASTER SCHEDULER GROUP II SYSGEN MACRO WHICH:
.*       1.  SETS UP TIMER DYNAMIC AREA                           19872
.*       2.  PUNCHES THE ASSEMBLY DECK AND MACRO CALL FOR THE
.*       MASTER SCHEDULER GROUP 0 MACROS, SGIEE001, SGIEE011, AND 19022
.*       SGIEE0VR.                                                19022
.*       ALSO SGIEE00V AND SGIEE0VV                               19872
.*       3.  CHECKS VALIDITY OF CONSOLE CONFIGURATION
.*
.*       THE FOLLOWING SYSGEN SYMBOLS WILL BE EQUATED TO THE
.*       CORRESPONDING VALUES:
.*       1.  &SGSCHDC(1) = PRIN CONSOLE INPUT AND OUTPUT UCB'S
.*       2.  &SGSCHDC(2) = ALT  CONSOLE INPUT AND OUTPUT UCB'S
.*       3.  &SGSCHDC(3) = STARTR ADDR,STARTW ADDR
.*       4.  &SGSCHDC(4) = DATA SET NAME OF STARTR
.*       5.  &SGSCHDC(5) = DATA SET NAME OF STARTW
.*       6.  &SGSCHDC(7) = VOL SERIAL NR OF STARTR
.*       7.  &SGSCHDC(8) = VOL SERIAL NR OF STARTW
.*       8.  &SGSCHDC(9) = JOB QUEUE UCB NAME
.*       9.  &SGSCHDC(10) = PROCLIB UCB NAME
.*       10. &SGSCHDC(11) = LOG DEFAULT CLASSNAME
.*       11.  &SGSCHDC(12) = SECOND PRIM CONSOLE -M65MP OPTION-    MP65
.*       12.  &SGSCHDC(13) = SECOND ALT. CONSOLE -M65MP OPTION-    MP65
.*       11. &SGSCHDA(3) = LIMIT OF QUEUED WTL BUFFERS
.*       12. &SGSCHDB(10) = 13K SWITCH  **
.*       13. &SGSCHDB(11) = 18K SWITCH   ** DESIGN LEVEL
.*       14. &SGSCHDB(12) = 44K SWITCH  **
.*       15. &SGSCHDB(22) = START INIT SWITCH
.*       16. &SGSCHDB(7)   =    SMF    INDICATOR                    SMF
.*       17. &SGSCHDB(34) = MCS OPTION SWITCH                     19022
.*       18. &SGMENTB(29) = GRAPHICS OPTION SWITCH                19022
.*       19. &SGSUPRB(35) = APR OPTION SWITCH                     19022
.*       20. &SGSCHDB(44) = TIME SHARING OPTION INDICATOR         20021
.*       21. &SGDMGTB(5) = TCAM OPTION SWITCH                     20002
.*       22. &SGTSOPA(4) = BCLMT (BROADCAST) LIMIT                20030
.*
.BB      ANOP
&SCHDLR  SETC  'SPS'
         AIF   (&SGCPRGB(4) AND &SGSCHDB(1)).DD
&SCHDLR  SETC  'SSS'
.DD      ANOP
&SGCTRLC(6)  SETC  'IEEILC01'
         COPY  SGASMPAK
         PUNCH ' SGIEE001 &SGSCHDC(1),&SGSCHDC(2),&SCHRDR,&SGSCHDC(4),&X
               SGSCHDC(7),&SCHWTR,&SGSCHDC(5),&SGSCHDC(8),&SCHDLR'
         PUNCH ' END'
         PUNCH '/*'
        AIF   (&GETB(3)).IO01                                      I149
&X       SETB  (NOT &SGSCHDB(27))                                  0014
&SGCTRLC(6)  SETC   'IEEIC3JF'                                   A28418
         COPY  SGASMPAK
         PUNCH ' SGIEE011  &SGSCHDB(18),&SGSCHDB(19),&SGSCHDB(20),&SGSCX
               HDB(21),&X '                                        0014
         PUNCH ' END'
 PUNCH '/*'
.IO01    ANOP                                                      I149
         AIF   (NOT(&SGCPRGB(1))).A3
.X       ANOP
         AGO   .TESTGET
.A3      ANOP
        AIF   (&GETB(1) OR &GETB(3)).WTO                           I149
.MS1SWT  ANOP
         AIF   (&GETB(1)).XMS1
      AIF   (&GETB(3)).XMS1                                        I149
         AIF   (NOT(&SGSCHDB(16))).A5
&S(1)    SETC  '&SGSCHDC(3)'(1,3)       START READER ADDR.
         AIF   ('&SGSCHDC(7)' EQ '').A5
&S(5)    SETC  '&SGSCHDC(7)'(1,6)       START RDR VOL SERIAL
.A5      AIF   (NOT(&SGSCHDB(17))).A8
&S(2)    SETC  '&SGSCHDC(3)'(4,3)       START WTR ADDR.
         AIF   ('&SGSCHDC(8)' EQ '').A8
&S(6)    SETC  '&SGSCHDC(8)'(1,6)       START WTR VOL SER&A
.A8      ANOP
&S(3)    SETC  '&SGSCHDC(4)'            START RDR DATASET NAME
&S(4)    SETC  '&SGSCHDC(5)'            START WTR DATASET NAME
&S(7)    SETC  '&SGSCHDC(9)'            JOB QUEUE UCB NAME
&S(8)    SETC  '&SGSCHDC(10)'           PROCLIB UCB NAME
&S(9)    SETC  '&SGSCHDC(11)'           LOG DEFAULT CLASSNAME
&SW(1)   SETB  (&SGSCHDB(10))           13K SWITCH
&SW(2)   SETB  (&SGSCHDB(11))           18K SWITCH
&SW(3)   SETB  (&SGSCHDB(12))           44K SWITCH
&SW(9)   SETB  (&SGSCHDB(22))           START INIT SWITCH
&V(1)    SETA  13                       13K VALUE
&V(2)    SETA  18                       18K VALUE
&V(3)    SETA  44                       44K VALUE
.*       &V(9)      PARTITION SIZE IN 1000 BYTES
&V(9)    SETA  &V(1)*&SW(1)+&V(2)*&SW(2)+&V(3)*&SW(3)+&V(4)*&SW(4)
&V(10)   SETA  &SGSCHDA(3)              LIMIT OF QUEUED WTL BUFS.
&BCLMT   SETA  (&SGTSOPA(4))      SET BROADCAST LIMIT FOR TSO     20030
.*
         AIF   ('&S(9)' NE '').E3
&S(9)    SETC  'A'
.E3      ANOP
         AIF   (&SW(9)).E4
         AGO   .E5
.E4      ANOP
&S(15)   SETC  'INIT'
.E5      ANOP
         AIF   (&SGCPRGB(4)).MFTVV                                 MFT2
&SGCTRLC(6) SETC 'IEEVIPL'
         COPY  SGASMPAK
         PUNCH ' SGIEE00V &S(1),&S(3),&S(5),&S(2),&S(4),&S(6),&S(15),&S-
               (7),&S(8),&S(9),&V(10),&SM(1),&TSO,&BCLMT'         20030
         PUNCH ' END'
         PUNCH '/*'
         AGO   .XMS1                                               MFT2
.MFTVV   ANOP                                                      MFT2
&SGCTRLC(6) SETC 'IEFSD569'                                        MFT2
         COPY  SGASMPAK
         PUNCH ' SGIEE0VV &S(1),&S(3),&S(5),&S(2),&S(4),&S(6),&S(15),&SX
               (7),&S(8),&S(9),&V(10),&SM(1)'                     19018
         PUNCH ' END'                                              MFT2
         PUNCH '/*'                                                MFT2
         AIF   (&SGCPRGB(4)).WTO                                   MFT2
.XMS1    ANOP
.XMS11   ANOP                                                       SMF
.WTO     ANOP
.* THIS CODE CHECKS THE GLOBAL VARIABLES,&SGSCHDB(34) FOR MCS     19022
.* OPTION, &SGMENTB(29) FOR GRAPHICS OPTION, AND &SGSUPRB(35)     19022
.* FOR APR OPTION,AND &SGDMGTB(5) FOR TCAM OPTION, FOR VALIDITY   20002
.* AND PASSES THE VALUES IN THE FORM OF PARAMETERS TO SGIEE0VR    19022
.* WHICH SETS UP A TABLE OF VALID KEYWORDS FOR THE VARY COMMAND.  19022
&MCS     SETB  (&SGSCHDB(34))      MCS OPTION                     19022
&APR     SETB  (&SGSUPRB(35))      APR OPTION                     19022
&GFX     SETB  (&SGMENTB(29))      GFX OPTION                     19022
&TCAM    SETB  (&SGDMGTB(5))      TCAM OPTION                     20002
&M65MP   SETB  (&SGSCHDB(33))      MP65 OPTION                BE  M0403
.*SGIEEOVR IS NOT TO BE CALLED FOR AN I/O GEN                  @AS70627
         AIF   ('&GETB(3)' EQ '1').SKIPOVR                     @SA77432
&SGCTRLC(6)  SETC  'IEE3203D'                                     19022
         COPY  SGASMPAK                                           19022
         PUNCH ' SGIEE0VR &APR,&MCS,&GFX,&TCAM,&M65MP'           A32191
         PUNCH ' END'                                             19022
         PUNCH '/*'                                               19022
.SKIPOVR AIF   (&SGSCHDB(34)).MCS1                             @AS70627
         AIF   (&SGCPRGB(13)).M65MP   MOD65 MULTIPROCESSING        MP65
&ATR(1)  SETC  'XA'
&ATR(2)  SETC  'XA'
&ATR(3)  SETC  'XN'
&ATR(4)  SETC  'XN'
&N       SETA  1
.MCS1    ANOP                                                       MCS
&A(1)    SETC  '&SGSCHDC(1)'(1,3)
&A(2)    SETC  '&SGSCHDC(1)'(4,3)
&F(1)    SETC  '&SGTGRIA(32)'                                    S21003
&F(2)    SETC  '&SGTGROA(32)'                                    S21003
&G(1)    SETC  'F'                                               S21003
&G(2)    SETC  'F'                                               S21003
         AIF   (NOT &SGSCHDB(34)).NOTMCS1                           MCS
&M       SETA  1                                                    MCS
&ATR(1)  SETC  'XA'                                                 MCS
&ATR(2)  SETC  'XA'                                                 MCS
.RADICE1 ANOP                                                       MCS
.********** GET SECONDARY CONSOLES
&N       SETA  &N+1                                                 MCS
&M       SETA  &M+2                                                 MCS
&A(&M)   SETC  '&SGSCNCC(&N)'(1,3)                                  MCS
&A(&M+1) SETC  '&SGSCNCC(&N)'(4,3)                                  MCS
&F(&M)   SETC  '&SGTGRIA(&N)'                                    S21003
&F(&M+1) SETC  '&SGTGROA(&N)'                                    S21003
         AIF   (&SGSCSDB(&N)).SDSGEN  CONSOLE IS STATUS DISPLAY  S21003
         AIF   (&SGSCMSB(&N)).MSTGEN  CONSOLE IS MESSAGE STREAM  S21003
&G(&M)   SETC  'F'                                               S21003
&G(&M+1) SETC  'F'                                               S21003
.CONTBA  ANOP                                                    S21003
         AIF   (&SGSCNYA(1) NE &N).RADICE1
&CTL     SETA  &M+1
&N       SETA  1
         AGO   .M65MP                                               MCS
.SDSGEN  ANOP                                                    S21003
&G(&M)   SETC  'S'                                               S21003
&G(&M+1) SETC  'S'                                               S21003
         AGO   .CONTBA                                           S21003
.MSTGEN ANOP                                                     S21003
&G(&M)   SETC  'M'                                               S21003
&G(&M+1) SETC  'M'                                               S21003
         AGO   .CONTBA                                           S21003
.NOTMCS1 ANOP                                                       MCS
&A(3)    SETC  '&SGSCHDC(2)'(1,3)
&A(4)    SETC  '&SGSCHDC(2)'(4,3)
&CTL     SETA  4                                                   MP65
.*****                                                             MP65
.M65MP   ANOP
&RPYS    SETA  &SGSCHDA(1)
&BUFS    SETA  &SGSCHDA(2)
.*                      SPS OR MS/1.
&D       SETC  'F'
         AIF   ((&SGCPRGB(2) OR &SGCPRGB(3) OR &SGCPRGB(4)) AND NOT &SG*
               SCHDB(34)).DUMY
         AIF   ((&SGCPRGB(2) OR &SGCPRGB(3) OR &SGCPRGB(4)) AND &SGSCHD*
               B(34)).MCS2B
&D       SETC  'U'
         AIF   (&SGSCHDB(34)).MCS2B
         AIF   (NOT &SGCPRGB(13)).DUMY                             MP65
&ATR(1)  SETC  'XA'                                                MP65
&ATR(2)  SETC  'XA'                                                MP65
&ATR(3)  SETC  'XN'                                                MP65
&ATR(4)  SETC  'XN'                                                MP65
&ATR(5)  SETC  'XN'                                                MP65
&ATR(6)  SETC  'XN'                                                MP65
&ATR(7)  SETC  'XN'                                                MP65
&ATR(8)  SETC  'XN'                                                MP65
&N       SETA  1                                                   MP65
&A(1)    SETC  '&SGSCHDC(1)'(1,3)                                  MP65
&A(2)    SETC  '&SGSCHDC(1)'(4,3)                                  MP65
&A(3)    SETC  '&SGSCHDC(12)'(1,3)                                 MP65
&A(4)    SETC  '&SGSCHDC(12)'(4,3)                                 MP65
&A(5)    SETC  '&SGSCHDC(2)'(1,3)                                  MP65
&A(6)    SETC  '&SGSCHDC(2)'(4,3)                                  MP65
&A(7)    SETC  '&SGSCHDC(13)'(1,3)                                 MP65
&A(8)    SETC  '&SGSCHDC(13)'(4,3)                                 MP65
&CTL     SETA  8                                                   MP65
         AGO   .DUMY                                               MP65
.MCS2B   ANOP
.********      THIS SECTION SETS THE COMPOSITE CONSOLE        *********
&N       SETA  1
&M       SETA  0
.F1      AIF   ('&SGSCHDC(1)'(1,3) EQ '&SGSCHDC(1)'(4,3)).EQUAL
&COMP(1) SETC  '&SGSCHDC(1)'(4,3)
&COMP(2) SETC  '&SGSCHDC(1)'(1,3)
.TOPPER  AIF   (&N+2 GT &CTL).LEAVE
&N       SETA  &N+2
&M       SETA  &M+1                                                 MCS
.FOUND1  AIF   ('&SGSCNCC(&M)'(1,3) EQ '&SGSCNCC(&M)'(4,3)).EQUAL   MCS
         AIF   ('&SGSCNCC(&M)'(1,3) EQ 'FFF').EQUAL
&COMP(&N) SETC '&SGSCNCC(&M)'(4,3)
&COMP(&N+1)    SETC '&SGSCNCC(&M)'(1,3)
         AGO   .TOPPER                                              MCS
.EQUAL   ANOP                                                       MCS
&COMP(&N) SETC 'FFF'                                              M1717
&COMP(&N+1) SETC 'FFF'                                            M1717
         AGO   .TOPPER                                              MCS
.LEAVE   ANOP
.********      THIS SECTION SETS THE ALTERNATE CONSOLE       **********
&ALT(1)  SETC  '&SGSCHDC(2)'(1,3)
&ALT(2)  SETC  '&ALT(1)'
&N       SETA  0
&M       SETA  1
.INCR1   ANOP                                                       MCS
&N       SETA  &N+1
&M       SETA  &M+2
         AIF   ('&SGSCNAC(&N)' EQ '').ALT0
&ALT(&M)     SETC '&SGSCNAC(&N)'(1,3)
&ALT(&M+1)   SETC '&ALT(&M)'
.TEST    AIF   (&M+1 LT &CTL).INCR1
         AGO   .NOMORE1
.ALT0    ANOP
&ALT(&M) SETC 'FFF'                                               M1717
&ALT(&M+1) SETC 'FFF'                                             M1717
         AGO   .TEST
.NOMORE1 ANOP
.********** SET ALTERNATE OUTPUT CONSOLES
&M       SETA    1
&N       SETA    0
         AIF   ('&SGSCHDC(2)'(1,3) EQ '&SGSCHDC(2)'(4,3)).AWAY
&COMPALT(1)    SETC '&SGSCHDC(2)'(4,3)
&COMPALT(2)  SETC '&COMPALT(1)'
.TESTAC  ANOP
&N       SETA  &N+1
&M       SETA  &M+2
         AIF   ('&SGSCNAC(&N)' EQ '').AWAY
         AIF   ('&SGSCNAC(&N)'(1,3) NE '&SGSCNAC(&N)'(4,3)).COMPALT
.AWAY    ANOP
&COMPALT(&M) SETC 'FFF'                                           M1717
&COMPALT(&M+1) SETC 'FFF'                                         M1717
.TESTSTS AIF   (&M+1 LT &CTL).TESTAC
         AGO   .NOMRE2
.COMPALT ANOP
&COMPALT(&M)   SETC '&SGSCNAC(&N)'(4,3)
&COMPALT(&M+1) SETC '&COMPALT(&M)'
         AGO   .TESTSTS
.******** BLANK OUT 2ND HALF OF NON-COMPOSITIES *********
.NOMRE2  ANOP
&N       SETA  1
.DUMY    ANOP                                                      MP65
         AIF   ('&A(&N)' NE 'FFF').INCR     'FFF'=NO CONSOLE SPECIFIED
&A(&N)   SETC  ''                                                  MP65
.INCR    ANOP                                                      MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).DUMY                                   MP65
&N       SETA  1                                                   MP65
         AIF   (NOT &SGSCHDB(34)).RADICE2                           MCS
         AGO   .OVER1
.MCS2    ANOP                                                       MCS
&N       SETA  &N+2                                                 MCS
&ATR(&N) SETC  'XN'                                                 MCS
&ATR(&N+1)     SETC 'XN'                                            MCS
.OVER1   ANOP                                                       MCS
         AIF   ('&A(&N)' NE '&A(&N+1)').OK                          MCS
&A(&N+1) SETC  ''                                                   MCS
.OK      ANOP                                                       MCS
         AIF   (&N NE &CTL-1).MCS2
&N       SETA  1
         AGO   .LP                                                  MCS
.RADICE2 ANOP                                                       MCS
         AIF   ('&A(1)' NE '&A(2)').OK1                            MP65
&A(2)    SETC  ''                                                  MP65
.OK1     ANOP                                                      MP65
         AIF   ('&A(3)' NE '&A(4)').OK2                            MP65
&A(4)    SETC  ''                                                  MP65
.OK2     ANOP                                                      MP65
         AIF   (NOT &SGCPRGB(13)).OK4                              MP65
         AIF   ('&A(5)' NE '&A(6)').OK3                            MP65
&A(6)    SETC  ''                                                  MP65
.OK3     ANOP                                                      MP65
         AIF   ('&A(7)' NE '&A(8)').OK4                            MP65
&A(8)    SETC  ''                                                  MP65
.OK4     ANOP                                                      MP65
.******** SET ATTRIBUTES ************
.LP      ANOP                                                      MP65
         AIF   ('&A(&N)' EQ '').MPEND
       CONVERT TO=HEX,VALUE=&A(&N),DIGITS=3
&U       SETA  &HEX
       IOCHECK LOOKFOR=&U
&HEX     SETA  &SGDADRA(&HEX)/1048576                              I212
&E(&N)   SETC  '0'                                                19029
         AIF   (&SGDT04B(&HEX)).ACMP                               MP65
         AIF   (&SGDT05B(&HEX)).ADMP                               MP65
         AIF   (&SGDT06B(&HEX)).APMP                               MP65
         AIF   (&SGDT07B(&HEX)).ARMP                               MP65
         AIF   (&SGDT08B(&HEX)).AXMP                                MCS
         MNOTE 1,'INVALID CONSOLE &A(&N) '                         MP65
         MEXIT                                                     MP65
.ACMP    ANOP                TYPEWRITER                          A27750
&XCP     SETA  &XCP+1        INCR EXCP COUNT FOR VAR PART        A27750
&B(&N)   SETC  '01'                                                MP65
         AIF   ((&N+1)/2 EQ &N/2).MPWN                           A28263
         AIF   ('&A(&N+1)' EQ '').MPWA                             MP65
.MPNA    ANOP                     COMPOSIT READER                  MP65
&C(&N)   SETC  'NA&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.MPWN    ANOP                     COMPOSIT WRITER                  MP65
&C(&N)   SETC  'WN&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.MPWA    ANOP                     CONSOLE 1052                     MP65
&C(&N)   SETC  'WA&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.ADMP    ANOP  2250/2260/3066/5450/3277-1/3277-2/3284/3286    MD  M0434
&XCP     SETA  &XCP+1             INCR EXCP COUNT FOR VAR PART   A27750
         AIF   (&SGDU07B(&HEX) OR &SGDU09B(&HEX)).PRINT       MD  M0434
         AIF   ('&F(&N)' EQ '0').SETNORM  TRANSIENT DCM          S21003
&B(&N)   SETC  '61'                                              S21003
         AGO   .CONTINA                                          S21003
.SETNORM ANOP                                                    S21003
&B(&N)   SETC  '51'                                               19029
.CONTINA ANOP                                                    S21003
         AIF   ((&N+1)/2 EQ &N/2).GRAPHWN                        A36372
         AIF   ('&A(&N+1)' EQ '').GRAPHWA                        A36372
.*                                COMPOSITE READER               A36372
&C(&N)   SETC  'NA&ATR(&N)'                                      A36372
         AGO   .CHK5450                                          A36372
.GRAPHWN ANOP                     COMPOSITE WRITER               A36372
&C(&N)   SETC  'WN&ATR(&N)'                                      A36372
         AGO   .CHK5450                                          A36372
.GRAPHWA ANOP                     GRAPHICS CONSOLE               A36372
&C(&N)   SETC  'WA&ATR(&N)'                                       19029
.CHK5450 ANOP                                                    A36372
         AIF   (&SGDU10B(&HEX)).ISANR19                       BG 21122
         AIF   (&SGDU06B(&HEX)).IS5450                              MCS
         AIF   (&SGDU08B(&HEX) AND &SGDM01B(&HEX)).ISANR48       S21003
         AIF   (&SGDU08B(&HEX) AND &SGDM02B(&HEX)).ISANR19       S21003
         AIF   (&SGDU02B(&HEX)).IS2260                            19029
.*       MUST  BE  2250                                           19029
&E(&N)   SETC  'B'                                                19029
         AGO   .MPEND                                              MP65
.IS5450  ANOP                                                       MCS
&E(&N)   SETC  'A'                                                19029
         AGO   .MPEND                                             19029
.IS2260  ANOP                                                     19029
&E(&N)   SETC  'C'                                                19029
         AGO   .MPEND                                               MCS
.ISANR48 ANOP                                                    S21003
&E(&N)   SETC  'D'                INDICATE 3277 MOD1             S21003
         AGO   .MPEND                                            S21003
.ISANR19 ANOP                                                    S21003
&E(&N)   SETC  'E'                INDICATE 3277 MOD2             S21003
         AGO   .MPEND                                            S21003
.PRINT   ANOP                                                 MD  M0434
&B(&N)   SETC  '5W'                    3284 3286 PROC         MD  M0434
&C(&N)   SETC  'WN&ATR(&N)'            ATTRIBUTES             MD  M0434
         AGO   .MPEND                                         MD  M0434
.APMP    ANOP                     COMPOSIT WRITER                  MP65
&PNTR    SETA  &PNTR+1            INCR PRNTER COUNT FOR VAR PART A27750
&B(&N)   SETC  '21'                                                MP65
&C(&N)   SETC  'WN&ATR(&N)'                                        MP65
         AGO   .MPEND                                              MP65
.ARMP    ANOP                     COMPOSIT READER                  MP65
&RDR     SETA  &RDR+1             INCR READER COUNT FOR VAR PART A27750
&B(&N)   SETC  '11'                                                MP65
&C(&N)   SETC  'NA&ATR(&N)'                                        MP65
         AGO   .MPEND
.AXMP    ANOP
&B(&N)   SETC  'XX'
&SGSCHDB(13) SETB 1                                              A36372
         AIF   ((&N+1)/2 EQ &N/2).C2740WN                        A36372
         AIF   ('&A(&N+1)' EQ '').C2740WA                        A36372
.*                                COMPOSITE READER               A36372
&C(&N)   SETC  'NA&ATR(&N)'                                      A36372
         AGO   .MPEND                                            A36372
.C2740WN ANOP                     COMPOSITE WRITER               A36372
&C(&N)   SETC  'WN&ATR(&N)'                                      A36372
         AGO   .MPEND                                            A36372
.C2740WA ANOP                     2740 CONSOLE                   A36372
&C(&N)   SETC  'WA&ATR(&N)'
.MPEND   ANOP                                                      MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).LP                                     MP65
         AIF   ('SG5450A' EQ '0' AND 'SGSCHDA(10)' EQ '0' AND 'SGSCHDA(X
               11)' EQ '0').NOSVC87                               19029
      AGO   .END87CK
.NOSVC87   ANOP                                                     MCS
.END87CK       ANOP
&N       SETA  1                                                   MP65
.******** SQUEEZE OUT BLANK CONSOLES
.LOOP    ANOP                                                      MP65
         AIF   ('&A(&N)' EQ '').SCAT                               MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).LOOP                                   MP65
         AGO   .MPOUT                                              MP65
.SCAT    ANOP                                                      MP65
&M       SETA  &N-1
         AIF   (&SGSCHDB(34)).MCS3                                  MCS
         AIF   (&N EQ 2).LP2                                       MP65
         AIF   (&N EQ 3).LP3                                       MP65
         AIF   (&N EQ 4).LP4                                       MP65
         AIF   (&N EQ 5).LP5                                       MP65
         AIF   (&N EQ 6).LP6                                       MP65
         AIF   (&N EQ 7).LP7                                       MP65
         AGO   .LP8                                                MP65
.MCS3    ANOP                                                       MCS
&M       SETA  &M+1
         AIF   (&M EQ &CTL AND '&A(&M)' EQ '' AND &M EQ &N).DONIT   MCS
&A(&M)   SETC  '&A(&M+1)'
&B(&M)   SETC  '&B(&M+1)'
&C(&M)   SETC  '&C(&M+1)'
&E(&M)   SETC  '&E(&M+1)'                                         19029
&F(&M)   SETC  '&F(&M+1)'                                        S21003
&G(&M)   SETC  '&G(&M+1)'                                        S21003
&ALT(&M) SETC  '&ALT(&M+1)'
&COMP(&M)      SETC '&COMP(&M+1)'
&COMPALT(&M)   SETC '&COMPALT(&M+1)'
         AIF   (&M+1 LT &CTL).MCS3
&CTL     SETA  &CTL-1
         AGO   .LOOP
.DONIT   ANOP
&CTL     SETA  &M-1
         AGO   .MPOUT
.LP2     ANOP                                                      MP65
&A(2)    SETC  '&A(3)'                                             MP65
&B(2)    SETC  '&B(3)'                                             MP65
&C(2)    SETC  '&C(3)'                                             MP65
.LP3     ANOP                                                      MP65
&A(3)    SETC  '&A(4)'                                             MP65
&B(3)    SETC  '&B(4)'                                             MP65
&C(3)    SETC  '&C(4)'                                             MP65
.LP4     ANOP                                                      MP65
         AIF   (&SGCPRGB(13)).LP4A                                 MP65
&A(4)    SETC  ''                                                  MP65
         AIF   (&N EQ &CTL).MPOUT                                   MCS
&N       SETA  &N+1
         AGO   .LOOP                                               MP65
.LP4A    ANOP                                                      MP65
&A(4)    SETC  '&A(5)'                                             MP65
&B(4)    SETC  '&B(5)'                                             MP65
&C(4)    SETC  '&C(5)'                                             MP65
.LP5     ANOP                                                      MP65
&A(5)    SETC  '&A(6)'                                             MP65
&B(5)    SETC  '&B(6)'                                             MP65
&C(5)    SETC  '&C(6)'                                             MP65
.LP6     ANOP                                                      MP65
&A(6)    SETC  '&A(7)'                                             MP65
&B(6)    SETC  '&B(7)'                                             MP65
&C(6)    SETC  '&C(7)'                                             MP65
.LP7     ANOP                                                      MP65
&A(7)    SETC  '&A(8)'                                             MP65
&B(7)    SETC  '&B(8)'                                             MP65
&C(7)    SETC  '&C(8)'                                             MP65
.LP8     ANOP                                                      MP65
&A(8)    SETC  ''                                                  MP65
&N       SETA  &N+1                                                MP65
         AIF   (&N LE &CTL).LOOP                                   MP65
.MPOUT   ANOP                                                      MP65
         AIF   (&SGCPRGB(4)).MFTNM                                 MFT2
&SGCTRLC(6) SETC 'IEECVUCM'
         COPY  SGASMPAK
         AGO   .ALLSYS                                             MFT2
.MFTNM   ANOP                                                      MFT2
&SGCTRLC(6) SETC 'IEECUCB'                                         MFT2
         COPY  SGASMPAK
.ALLSYS  ANOP                                                      MFT2
         PUNCH 'IEEUCMC CSECT'
         AIF   (&RPYS NE 0).RA
         AIF   (&SGCPRGB(4)).RAA                                   MFT2
&RPYS    SETA  100
         AGO   .RA
.RAA     ANOP
&RPYS    SETA  1                                                   MFT2
.RA      ANOP
         AIF   (&BUFS NE 0).RB
         AIF   (&SGCPRGB(4)).RBA                                   MFT2
&BUFS    SETA  100
         AGO   .RB
.RBA     ANOP
&BUFS    SETA  1                                                   MFT2
.RB      ANOP
         AIF   (NOT &SGSCHDB(34)).NOTMCS2                           MCS
         AIF   (&RPYS GE &SGSCNYA(1)).MCSBUFS                       MCS
&RPYS    SETA  &SGSCNYA(1)                                          MCS
.MCSBUFS AIF   (&BUFS GE &SGSCNYA(1)*2).DONEBUF                     MCS
&BUFS    SETA  &SGSCNYA(1)*2                                        MCS
.DONEBUF ANOP                                                       MCS
&TO      SETA  1
&THING   SETC  '11&SGSCHRB(3).&SGSCHRB(4)'                          MCS
         AGO   .COMBINE
.BACK1   ANOP
&ROUTM1  SETC  '&THING'
&TO      SETA  2
&THING   SETC  '&SGSCHRB(5).&SGSCHRB(6).&SGSCHRB(7).&SGSCHRB(8)'
         AGO   .COMBINE
.BACK2   ANOP
&ROUTM2  SETC  '&THING'
&TO      SETA  3
&THING   SETC  '&SGSCHRB(9).&SGSCHRB(10).&SGSCHRB(11).&SGSCHRB(12)'
         AGO   .COMBINE
.BACK3   ANOP
&ROUTM3  SETC  '&THING'
&TO      SETA  4
&THING   SETC  '&SGSCHRB(13).&SGSCHRB(14).&SGSCHRB(15).&SGSCHRB(16)'
         AGO   .COMBINE
.BACK4   ANOP
&ROUTM4  SETC  '&THING'
&TO      SETA  5
&THING   SETC  '&SGSCHOB(1).&SGSCHOB(2).&SGSCHOB(3).&SGSCHOB(4)'
         AGO   .COMBINE
.BACK5   ANOP
&OLDW1   SETC  '&THING'
&TO      SETA  6
&THING   SETC  '&SGSCHOB(5).&SGSCHOB(6).&SGSCHOB(7).&SGSCHOB(8)'
         AGO   .COMBINE
.BACK6   ANOP
&OLDW2   SETC  '&THING'
&TO      SETA  7
&THING   SETC  '&SGSCHOB(9).&SGSCHOB(10).&SGSCHOB(11).&SGSCHOB(12)'
         AGO   .COMBINE
.BACK7   ANOP
&OLDW3   SETC  '&THING'
&TO      SETA  8
&THING   SETC  '&SGSCHOB(13).&SGSCHOB(14).&SGSCHOB(15).&SGSCHOB(16)'
         AGO   .COMBINE
.BACK8   ANOP
&OLDW4   SETC  '&THING'
&TO      SETA  9
&THING   SETC  '&SGSCHHB(1).&SGSCHHB(2).&SGSCHHB(3).&SGSCHHB(4)'
         AGO   .COMBINE
.BACK9   ANOP
&HARDM1  SETC  '&THING'
&TO      SETA  10
&THING   SETC  '&SGSCHHB(5).&SGSCHHB(6).&SGSCHHB(7).&SGSCHHB(8)'
         AGO   .COMBINE
.BACK10  ANOP
&HARDM2  SETC  '&THING'
&TO      SETA  11
&THING   SETC  '&SGSCHHB(9).&SGSCHHB(10).&SGSCHHB(11).&SGSCHHB(12)'
         AGO   .COMBINE
.BACK11  ANOP
&HARDM3  SETC  '&THING'
&TO      SETA  12
&THING   SETC  '&SGSCHHB(13).&SGSCHHB(14).&SGSCHHB(15).&SGSCHHB(16)'
         AGO   .COMBINE
.BACK12  ANOP
&HARDM4  SETC  '&THING'
&M       SETA  0
&M2      SETA  1                                                    MCS
         AIF   ('&COMP(1)' NE 'FFF').BIPPY                        M1717
&M3      SETA  1
         AGO   .RTLOOP
.BIPPY   ANOP
&M3      SETA  2
.RTLOOP  ANOP                                                       MCS
&M       SETA  &M+1
&BIT     SETA  0                                                    MCS
.GOAGAIN ANOP                                                       MCS
&M3      SETA  &M3+1
         AIF   (&BIT EQ 1).NOTINPT                               A28263
         AIF   ('&COMP(&M3)' NE 'FFF' AND ('&B(&M3)' EQ '11' OR '&B(&M3*
               )' EQ '01' OR '&B(&M3)' EQ '51' OR '&B(&M3)' EQ '61')).I*
               SINPUT                                            S21003
.NOTINPT ANOP                                                    A28263
&TO      SETA  13
&THING       SETC '&SGRT01B(&M).&SGRT02B(&M).&SGRT03B(&M).&SGRT04B(&M)'
         AGO   .COMBINE
.BACK13  ANOP
&RTCODE1(&M2)  SETC '&THING'                                        MCS
&TO      SETA  14
&THING       SETC '&SGRT05B(&M).&SGRT06B(&M).&SGRT07B(&M).&SGRT08B(&M)'
         AGO   .COMBINE
.BACK14  ANOP
&RTCODE2(&M2)  SETC '&THING'                                        MCS
&TO      SETA  15
&THING       SETC '&SGRT09B(&M).&SGRT10B(&M).&SGRT11B(&M).&SGRT12B(&M)'
         AGO   .COMBINE                                             MCS
.BACK15  ANOP                                                       MCS
&RTCODE3(&M2)  SETC '&THING'                                        MCS
&TO      SETA  16                                                   MCS
&THING       SETC '&SGRT13B(&M).&SGRT14B(&M).&SGRT15B(&M).&SGRT16B(&M)'
         AGO   .COMBINE                                             MCS
.BACK16  ANOP                                                       MCS
&RTCODE4(&M2)  SETC '&THING'                                        MCS
         AGO   .AROUND1                                             MCS
.ISINPUT ANOP                                                       MCS
&BIT     SETA  &BIT+1
&RTCODE1(&M2)  SETC '0'                                             MCS
&RTCODE2(&M2)  SETC '0'                                             MCS
&RTCODE3(&M2)  SETC '0'                                             MCS
&RTCODE4(&M2)  SETC '0'                                             MCS
         AGO   .ROUND1A                                             MCS
.AROUND1 AIF   ('&COMP(&M3)' NE 'FFF' AND ('&B(&M3)' EQ '21' OR '&B(&M3*
               )' EQ '01' OR '&B(&M3)' EQ '51' OR '&B(&M3)' EQ '61' OR *
               '&B(&M3)' EQ '5W')).ISOUTPT
.ROUND1A ANOP                                                       MCS
&TO      SETA  17
&THING       SETC '&SGCMD1B(&M).&SGCMD2B(&M).&SGCMD3B(&M).&SGCMD4B(&M)'
         AGO   .COMBINE
.BACK17  ANOP
&AUTH(&M2)     SETC '&THING'                                        MCS
         AGO   .AROUND2                                             MCS
.ISOUTPT ANOP                                                       MCS
&BIT     SETA  &BIT+1                                               MCS
&AUTH(&M2)     SETC '0'                                             MCS
.AROUND2 ANOP                                                       MCS
&M2      SETA  &M2+1                                                MCS
         AIF   (&BIT EQ 1).GOAGAIN                                  MCS
         AIF   (&M2 LT &CTL).RTLOOP                                 MCS
         AGO   .MOREROT                                             MCS
.COMBINE AIF   ('&THING' EQ '0000').IS0
         AIF   ('&THING' EQ '0001').IS1                             MCS
         AIF   ('&THING' EQ '0010').IS2                             MCS
         AIF   ('&THING' EQ '0011').IS3                             MCS
         AIF   ('&THING' EQ '0100').IS4                             MCS
         AIF   ('&THING' EQ '0101').IS5                             MCS
         AIF   ('&THING' EQ '0110').IS6                             MCS
         AIF   ('&THING' EQ '0111').IS7                             MCS
         AIF   ('&THING' EQ '1000').IS8                             MCS
         AIF   ('&THING' EQ '1001').IS9                             MCS
         AIF   ('&THING' EQ '1010').ISA                             MCS
         AIF   ('&THING' EQ '1011').ISB                             MCS
         AIF   ('&THING' EQ '1100').ISC                             MCS
         AIF   ('&THING' EQ '1101').ISD                             MCS
         AIF   ('&THING' EQ '1110').ISE
&THING   SETC  'F'
         AGO   .BACK
.IS0     ANOP
&THING   SETC  '0'                                                  MCS
         AGO   .BACK
.IS1     ANOP
&THING   SETC  '1'                                                  MCS
         AGO   .BACK
.IS2     ANOP
&THING   SETC  '2'                                                  MCS
         AGO   .BACK
.IS3     ANOP
&THING   SETC  '3'                                                  MCS
         AGO   .BACK
.IS4     ANOP
&THING   SETC  '4'                                                  MCS
         AGO   .BACK
.IS5     ANOP
&THING   SETC  '5'                                                  MCS
         AGO   .BACK
.IS6     ANOP
&THING   SETC  '6'                                                  MCS
         AGO   .BACK
.IS7     ANOP
&THING   SETC  '7'                                                  MCS
         AGO   .BACK
.IS8     ANOP
&THING   SETC  '8'                                                  MCS
         AGO   .BACK
.IS9     ANOP
&THING   SETC  '9'                                                  MCS
         AGO   .BACK
.ISA     ANOP
&THING   SETC  'A'                                                  MCS
         AGO   .BACK
.ISB     ANOP
&THING   SETC  'B'                                                  MCS
         AGO   .BACK
.ISC     ANOP
&THING   SETC  'C'                                                  MCS
         AGO   .BACK
.ISD     ANOP
&THING   SETC  'D'                                                  MCS
         AGO   .BACK
.ISE     ANOP
&THING   SETC  'E'                                                  MCS
.BACK    AIF (&TO EQ 1).BACK1                                       MCS
         AIF (&TO EQ 2).BACK2                                       MCS
         AIF (&TO EQ 3).BACK3                                       MCS
         AIF (&TO EQ 4).BACK4                                       MCS
         AIF (&TO EQ 5).BACK5                                       MCS
         AIF (&TO EQ 6).BACK6                                       MCS
         AIF (&TO EQ 7).BACK7                                       MCS
         AIF (&TO EQ 8).BACK8                                       MCS
         AIF (&TO EQ 9).BACK9                                       MCS
         AIF (&TO EQ 10).BACK10                                     MCS
         AIF (&TO EQ 11).BACK11                                     MCS
         AIF (&TO EQ 12).BACK12                                     MCS
         AIF (&TO EQ 13).BACK13                                     MCS
         AIF (&TO EQ 14).BACK14                                     MCS
         AIF (&TO EQ 15).BACK15                                     MCS
         AIF (&TO EQ 16).BACK16                                     MCS
         AIF (&TO EQ 17).BACK17                                     MCS
.MOREROT ANOP                                                       MCS
         AIF   (&SGSCHDB(36)).ISSYSL
&WHO     SETC  '&SGSCHDC(14)'
         AGO   .TESTCMD
.ISSYSL  ANOP
&WHO     SETC  'SYSLOG'
.TESTCMD AIF   (&SGSCHDB(37)).CMDS
         AIF   (&SGSCHDB(42)).INCMDS                             S21003
         AIF   (&SGSCHDB(43)).STCMDS                             S21003
&CMDS    SETC  'NOCMDS'
         AGO   .TESTCPY
.INCMDS  ANOP                                                    S21003
&CMDS    SETC  'INCMDS'                                          S21003
         AGO   .TESTCPY                                          S21003
.STCMDS  ANOP                                                    S21003
&CMDS    SETC  'STCMDS'                                          S21003
         AGO   .TESTCPY                                          S21003
.CMDS    ANOP
&CMDS    SETC  'CMDS'
.TESTCPY AIF   ('&HARDM1.&HARDM2.&HARDM3.&HARDM4' EQ '0000').NOHCPY
.HCPY    ANOP
&HCPY    SETC  'HCPY'
         AGO   .COMP
.NOHCPY  ANOP
&HCPY    SETC  'NOHCPY'
         AGO   .COMP
.NOTMCS2 ANOP
         AIF   (NOT &SGCPRGB(13)).RBC                              MP65
         AIF   ('&A(6)' NE '').V6MP                                MP65
         AIF   ('&A(5)' NE '').V5MP                                MP65
.RBC     ANOP                                                      MP65
         AIF   ('&A(4)' NE '').V4MP                                MP65
         AIF   ('&A(3)' NE '').V3MP                                MP65
         AIF   ('&A(2)' NE '').V2MP                                MP65
.V1MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&B(1),&C(1)),&D,REPLY=&RPYS,BUFFERS=&BU*
               FS '                                                MP65
         AGO   .COMP                                              19872
.V2MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&A(2)),(&B(1),&B(2)),(&C(1),&C(2)),&D,R*
               EPLY=&RPYS,BUFFERS=&BUFS  '                         MP65
         AGO   .COMP                                               MP65
.V3MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&A(2),&A(3)),(&B(1),&B(2),&B(3)),(&C(1)*
               ,&C(2),&C(3)),&D,                XXX '              MP65
         PUNCH '               REPLY=&RPYS,BUFFERS=&BUFS  '        MP65
         AGO   .COMP                                               MP65
.V4MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&A(2),&A(3),&A(4)),(&B(1),&B(2),&B(3),&*
               B(4)),(&C(1),&C(2),&C(3),&C(4)),&D,    XXX '        MP65
         PUNCH '               REPLY=&RPYS,BUFFERS=&BUFS  '        MP65
         AGO   .COMP                                               MP65
.V5MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&A(2),&A(3),&A(4),&A(5)),(&B(1),&B(2),&*
               B(3),&B(4),&B(5)),                     XXX '        MP65
         PUNCH '               (&C(1),&C(2),&C(3),&C(4),&C(5)),&D,REPLY*
               =&RPYS,BUFFERS=&BUFS  '                             MP65
         AGO   .COMP                                               MP65
.V6MP    ANOP                                                      MP65
         PUNCH ' IEECUCM (&A(1),&A(2),&A(3),&A(4),&A(5),&A(6)),(&B(1),&*
               B(2),&B(3),&B(4),&B(5),    X '                     M4875
         PUNCH '               &B(6)),(&C(1),&C(2),&C(3),&C(4),&C(5),&C*
               (6)),&D,REPLY=&RPYS,     X '                       M4875
         PUNCH '               BUFFERS=&BUFS '                    M4875
.COMP    ANOP                                                      MP65
         AIF   (NOT &SGSCHDB(34)).OUT
&M       SETA  1
         PUNCH ' IEECUCM (&A(&M),                                      *
                                  X'
.PUNCHA1 ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PUNCHA2                                 MCS
         PUNCH '               &A(&M),                                 *
                                  X'
         AGO   .PUNCHA1
.PUNCHA2 PUNCH '               &A(&M)),                                *
                                  X'
&M       SETA  1
         PUNCH '               (&B(&M),                                *
                                   X'
.PUNCHB1 ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PUNCHB2                                 MCS
         PUNCH '               &B(&M),                                 *
                                   X'
         AGO   .PUNCHB1
.PUNCHB2 PUNCH '               &B(&M)),                                *
                                   X'
&M       SETA  1
         PUNCH '               (&C(&M),                                *
                                 R'
.PUNCHC1 ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PUNCHC2                                 MCS
         PUNCH '               &C(&M),                                 *
                                 A'
         AGO   .PUNCHC1
.PUNCHC2 PUNCH '               &C(&M)),&D,                             *
                                  X'                              19029
&M       SETA  1                                                  19029
         PUNCH '               (&E(&M),                                *
                                    X'                            19029
.PUNCHE1 ANOP                                                     19029
&M       SETA  &M+1                                               19029
         AIF   (&M EQ &CTL).PUNCHE2                               19029
         PUNCH '               &E(&M),                                 *
                                    X'                            19029
         AGO   .PUNCHE1                                           19029
.PUNCHE2 ANOP                                                    S21003
         PUNCH '               &E(&M)),                          S21003*
                                   XX'                           S21003
&M       SETA  1                                                 S21003
         PUNCH '               (&G(&M),                          S21003*
                                   XX'                           S21003
.PUNCHG2 ANOP                                                    S21003
&M       SETA  &M+1                                              S21003
         AIF   (&M EQ &CTL).PUNCHE3                              S21003
         PUNCH '               &G(&M),                           S21003*
                                   XX'                           S21003
         AGO   .PUNCHG2                                          S21003
.PUNCHE3 PUNCH '               &G(&M)),REPLY=&RPYS,BUFFERS=&BUFS, 21003*
                                      XXXXXXXXX'                  19029
         AIF   (NOT &SGSCHDB(35)).NOEXIT
         PUNCH '               EXIT=USEREXIT,                          *
                               D'
.NOEXIT  PUNCH '               MCS=MCS,                                *
                               I'
&MASTCON SETC  '&SGSCHDC(1)'(1,3)
         PUNCH '               MASTCON=&MASTCON,                       *
                                    C'
         AIF   ('&COMP(1)' NE 'FFF').FAKE1                       A36372
         PUNCH '               ROUTCDE=(&ROUTM1.&ROUTM2.&ROUTM3.&ROUTM4*
               ,                                          E'
&M       SETA  0
&MFC     SETA  &CTL                                               64950
         AGO   .PROUT1
.FAKE1   PUNCH '               ROUTCDE=(0000,&ROUTM1.&ROUTM2.&ROUTM3.&R*
               OUTM4,                             EEEEEEEEEEE'
&M       SETA  0                                                  64950
&MFC     SETA  &CTL-1                                             64950
.PROUT1  ANOP                                                       MCS
&M       SETA  &M+1
         AIF   (&M+1 EQ &MFC).PROUT2                              64950
         PUNCH '               &RTCODE1(&M).&RTCODE2(&M).&RTCODE3(&M).&*
               RTCODE4(&M),                                            *
                      R'
         AGO   .PROUT1                                              MCS
.PROUT2  PUNCH '               &RTCODE1(&M).&RTCODE2(&M).&RTCODE3(&M).&*
               RTCODE4(&M)),                                           *
                      A'
         PUNCH '               HARDCDE=&HARDM1.&HARDM2.&HARDM3.&HARDM4,*
                                                          D'
         PUNCH '               OLDWCDE=&OLDW1.&OLDW2.&OLDW3.&OLDW4,    *
                                                      I'
&M       SETA  1                                                    MCS
         PUNCH '               ALTCON=(&ALT(1),                        *
                                   C'
.PALT1   ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PALT2                                   MCS
         PUNCH '               &ALT(&M),                               *
                                    X'
         AGO   .PALT1
.PALT2   PUNCH '               &ALT(&M)),                              *
                                    X'
         PUNCH '               HARDCPY=(&WHO,&CMDS,&HCPY),             *
                          XXXXXXXXX'
         AIF   ('&B(1)' EQ '11').FAKE2
&M       SETA  0                                                    MCS
         PUNCH '               AUTH=(E0,                               *
                               X'
         AGO   .PAUTH1
.FAKE2   PUNCH '               AUTH=(E0,00,                            *
                           XXXXXXXX'
&M       SETA  0                                                  64950
.PAUTH1  ANOP                                                       MCS
&M       SETA  &M+1                                                 MCS
         AIF   (&M+1 EQ &MFC).PAUTH2                              64950
         PUNCH '               &AUTH(&M).0,                            *
                                        X'
         AGO   .PAUTH1                                              MCS
.PAUTH2  PUNCH '               &AUTH(&M).0),                           *
                                        X'
&M       SETA  1
         PUNCH '               COMPCON=(&COMP(1),                      *
                                    X'
.PCOMP1  ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PCOMP2
         PUNCH '               &COMP(&M),                              *
                                     H'
         AGO   .PCOMP1
.PCOMP2  PUNCH '               &COMP(&M)),                             *
                                     O'
&M       SETA  1
         PUNCH '               ALTCOMP=(&COMPALT(&M),                  *
                                        H'
.PACOMP1 ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL).PACOMP2
         PUNCH '               &COMPALT(&M),                           *
                                        E'
         AGO   .PACOMP1
.PACOMP2 PUNCH '               &COMPALT(&M))'
.OUT     PUNCH '         END  '                                    MP65
         PUNCH '/*'                                                MP65
.TESTGET   ANOP
         AIF   (NOT &SGCPRGB(4) OR NOT &SGSCHDB(34)).TESTGT1     A27750
.* CALC COMM TASK PARTITION SIZE AS FOLLOWS :                 BE A55301
.* 1400 BYTES FOR I/O WORK AREA, WHERE TO GO TABLE, & 6 SVRBS BE A55301
.* 176 BYTES FOR EACH PRINTER CONSOLE                         BE A55301
.* 168 BYTES FOR EACH CARD READER CONSOLE                     BE A55301
.* 120 BYTES FOR EACH TYPEWRITER OR CRT CONSOLE               BE A55301
&SIZE    SETA  1400+&PNTR*176+&RDR*168+&XCP*120               BE A55301
         AIF   (NOT &SGDCLSB(71)).NO3211 CNSL GENED,          BG  M5014
&SIZE    SETA  &SIZE+1114     .AN ADDITIONAL 1114 BYTES       BE A55301
.NO3211  AIF   (&PNTR EQ 0 AND &RDR EQ 0).GEN                 BE A55301
         AIF   (&SGSUPRB(21)).GEN .IF RAM LIST DON'T NEED XTRA   A27750
&SIZE    SETA  &SIZE+1336 .SZE OF COMMON ACCESS MODS-BA,BB,CI BE A55301
         AIF   (&RDR EQ 0).CHKPNTR                            BE A55301
&SIZE    SETA  &SIZE+712  .SIZE OF CC                         BE  M5010
.CHKPNTR AIF   (&PNTR EQ 0).GEN                               BE A55301
&SIZE    SETA  &SIZE+488  .SIZE OF CE & CL                    BE A55301
.GEN     ANOP                                                    A27750
&SIZE    SETA  &SIZE+768                                          66794
&SGCTRLC(6) SETC 'IEECMAWR'                                      A27750
         COPY  SGASMPAK                                          A27750
         PUNCH ' IEECAWR &SIZE'                                  A27750
         PUNCH '      END  '                                     A27750
         PUNCH '/*'                                              A27750
.TESTGT1  ANOP                                                   A27750
         AIF   (&GETB(3)).END                                      I149
&SGCTRLC(6)  SETC  'IEACVTPC'                                      REFR
         COPY  SGASMPAK
         PUNCH ' IEACVTPC   &T,&SHELM,&MIDELM,&SECT,&SM(1),&TSO,&TOD'
         PUNCH ' END'                                              REFR
         PUNCH '/*'                                                REFR
.END    ANOP                                                       I149
         MEND                                                      MP65
