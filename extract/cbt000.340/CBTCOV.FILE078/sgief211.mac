         MACRO
         SGIEF211
         COPY  SGGBLPAK
.*                                                               S99223
.* A063600,064600                                                S99249
.* C053981-054581                                                YM2755
.* A018784                                                       S22024
.* A18780                                                        A43012
.* D16800,D18760                                                  M0106
.* A15500-15520                                                   21088
.* A16700-16740                                                  S20201
.* A13844-13858                                                   21003
.* A12700                                                         21092
         LCLA  &A,&B,&C,&X,&Y,&NXF,&NUA,&NCU,&OUA,&OCU,&OLDALPH,&WORK
         LCLA  &INTALPH,&VALUE,&V,&ENTRIES,&ESNINDX,&COUNTER,&TEST1,&XX
         LCLA  &TEST4,&G(16),&RETURN,&U,&W,&DUPLI1,&DUPLI2,&UCBLSTV,&D
         LCLA  &APCHAN(6)
         LCLA  &TEMP,&T2400(5)
         LCLA  &ALTLIST(128),&AINDX,&ACOUNT,&I,&J,&KK,&MM,&T       I237
         LCLA  &CUINDX,&OCHAN,&NCHAN                               I237
         LCLB  &EOALTS,&IRSW,&ALTSW,&LSTDEV                        I237
         LCLB  &ANYAP,&ALTPATH,&FH
         LCLB  &TYPEB(88),&MAP                                     7863
         LCLC  &K(2),&L(42)                                        000G
         LCLC  &CONT                                               000G
 LCLC  &CONTI,&CONTI1,&CON2,&CON3,&CON4                            000G
         LCLA  &CT2321
         LCLB  &SUB2321
         LCLA  &COUNT
         LCLC  &CRDNAME
         LCLC  &H
         LCLB  &TBP                                               19022
         LCLA  &EXTRA                                            S21048
         LCLB  &GENB(10)                                         S99223
         LCLA  &T3400(5)                                         S99223
         ACTR  1000000                                           YM0123
.*  MAIN SEQUENCE OF EVENTS IN THIS MACRO
.*       COPY SGASMPAK FOR ASSEMBLY OF DEVICE NAME TABLE.
.*       PUNCH    DEVNAMET CSECT
.*       CALL SGIEF212 FOR EACH SUPPORTED DEVICE TYPE.
.*       MAKE SGDFXXB SWITCHES REPRESENT SGDAPXB SWITCHES FOR EACH DEV.
.*       SET APCHAN(X) TO NUMBER OF OPTIONAL PATHS ON CHANNEL X.
.*       CALCULATE UCBLOOKUP VALUE FOR EACH DEVICE AND PLACE THE VALUE
.*          IN BITS 22-30 OF EACH DEVICE'S SGDADRA BOX.
.*
.*       ENTRIES=NO. OF SUPPORTED DEVICES + NO. OF SUPPORTED TYPES
.*          + NO. OF UNITNAMES.
.*       PUNCH             DC   F'ENTRIES'
.*       PUNCH SGIEF011 TYPE,0,ADDRESS FOR EACH SUPPORTED DEVICE.
.*       PUNCH SGIEF011 TYPE,TYPE FOR EACH SUPPORTED TYPE IN SYSTEM.
.*       PUNCH SGIEF013 N,TYPE1,TYPE2,...,TYPEN  FOR EACH UNITNAME
.*       PUNCH SGIEF011 0,0,UNITNAME             FOR EACH UNITNAME
.*       PUNCH      END  AND   /*  CARDS.
.*       COPY SGASMPAK FOR ASSEMBLY OF DEVICE MASK TABLE.
.*       PUNCH    DEVMASKT CSECT
.*       PUNCH    DC H'ENTRIES'  AND   DC  H'ENTRIES+1'
.*       CALL SGIEF212 FOR EACH SUPPORTED DEVICE TYPE.
.*       RETURN=2
.*       PUNCH SGIEF012 TYPE,NUMBER,MASK FOR EACH SUPPORTED DEVICE TYPE
.*       RETURN=3
.*       PUNCH SGIEF013 N,TYPE1,TYPE2,...,TYPEN FOR EACH UNITNAME.
.*       PUNCH SGIEF012 0,NUMBER,MASK           FOR EACH UNITNAME.
.*       RETURN=4
.*       PUNCH SGIEF013 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
.*       PUNCH SGIEF012 0,NUMBER,MASK   MASK OF ALL DIRECT ACCESS DEVCS
&SGCTRLC(6)    SETC 'IEFWMAS1'
         COPY  SGASMPAK
         PUNCH 'DEVNAMET CSECT'
.AAA005  ANOP
.*  7-TRK TAPE GROUPS EXTRACTED BEFORE 9-TRK                     A31682
 SGIEF212 NAME=2400-2,TYPLIST=30C0,HLFLIST=8001,SGDT=1,SGDU=1,SGDF=1,  X
               SGUNF=2
         AIF   (&SGMENTB(84)).AAA005A                            S21048
         AIF   (&SGCNTRA(9) EQ 0).AAA005A                        S21048
&T2400(5) SETA &SGCNTRA(10)                                      S21048
.AAA005A ANOP                                                    S21048
&TEMP    SETA  &SGCNTRA(9)                                       S21048
 SGIEF212 NAME=2400-1,TYPLIST=3080,HLFLIST=8001,SGDT=1,SGDU=1,SGDF=1
         AIF   (&SGMENTB(84)).AAA005B                            S21048
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA005B                    S21048
&T2400(4) SETA &SGCNTRA(10)                                      S21048
.AAA005B ANOP                                                    S21048
&TEMP    SETA  &SGCNTRA(9)
 SGIEF212   NAME=3400-2,TYPLIST=30C0,HLFLIST=8003,SGDT=1,SGDU=3,SGDF=1
         AIF   (&SGMENTB(84)).AAA005C                            S21048
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA005C                    S21048
&T3400(1) SETA &SGCNTRA(10)                                      S21048
.AAA005C ANOP                                                    S21048
&TEMP    SETA  &SGCNTRA(9)                                       S21048
 SGIEF212 NAME=2400-4,TYPLIST=3420,HLFLIST=8001,SGDT=1,SGDU=1,SGDF=4
         AIF   (&SGMENTB(84)).AAA0052
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0052
&T2400(1) SETA &SGCNTRA(10)
.AAA0052 ANOP
&TEMP    SETA  &SGCNTRA(9)
 SGIEF212 NAME=2400-3,TYPLIST=3400,HLFLIST=8001,SGDT=1,SGDU=1,SGDF=2,  X
               SGDM=(4,5,6)
         AIF   (&SGMENTB(84)).AAA0054
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0054
&T2400(2) SETA &SGCNTRA(10)
.AAA0054 ANOP
&TEMP    SETA  &SGCNTRA(9)
 SGIEF212   NAME=2400,TYPLIST=3000,HLFLIST=8001,SGDT=1,SGDU=1,SGDF=2
         AIF   (&SGMENTB(84)).AAA0056
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0056
&T2400(3) SETA &SGCNTRA(10)
.AAA0056 ANOP
&TEMP    SETA  &SGCNTRA(9)                                       S21048
 SGIEF212  NAME=3400-4,TYPLIST=3420,HLFLIST=8003,SGDT=1,SGDU=3,SGDF=4
         AIF   (&SGMENTB(84)).AAA0058                            S21048
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0058                    S21048
&T3400(3) SETA &SGCNTRA(10)                                      S21048
.AAA0058 ANOP                                                    S21048
&TEMP    SETA  &SGCNTRA(9)                                       S21048
 SGIEF212  NAME=3400-6,TYPLIST=3210,HLFLIST=8003,SGDT=1,SGDU=3,SGDF=6
         AIF   (&SGMENTB(84)).AAA0057                            S21048
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0057                    S21048
&T3400(5) SETA &SGCNTRA(10)                                      S99223
.AAA0057 ANOP                                                    S21048
&TEMP    SETA  &SGCNTRA(9)
 SGIEF212  NAME=3400-5,TYPLIST=3200,HLFLIST=8003,SGDT=1,SGDU=3,SGDF=5
         AIF   (&SGMENTB(84)).AAA005X                            S99223
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA005X                    S99223
&T3400(4)  SETA &SGCNTRA(10)                                     S99223
.AAA005X ANOP                                                   S99223
&TEMP   SETA  &SGCNTRA(9)
 SGIEF212  NAME=3400-3,TYPLIST=3400,HLFLIST=8003,SGDT=1,SGDU=3,SGDF=2
         AIF   (&SGMENTB(84)).AAA0059                            S21048
         AIF   (&TEMP EQ &SGCNTRA(9)).AAA0059                    S21048
&T3400(2) SETA &SGCNTRA(10)                                      S21048
.AAA0059 ANOP                                                    S21048
 SGIEF212  NAME=2311,TYPLIST=3000,HLFLIST=2001,SGDT=3,SGDU=3
 SGIEF212   NAME=1052,TYPLIST=1000,HLFLIST=0820,SGDT=4,SGDU=1
 SGIEF212   NAME=1403,TYPLIST=1000,HLFLIST=0808,SGDT=6,SGDU=1
 SGIEF212 NAME=2245,TYPLIST=1000,HLFLIST=080B,SGDT=6,SGDU=7       21092
 SGIEF212 NAME=2250-1,TYPLIST=3100,HLFLIST=1002,SGDT=5,SGDU=1,         X
               SGDM=1
 SGIEF212 NAME=2250-3,TYPLIST=3300,HLFLIST=1002,SGDT=5,SGDU=1,         X
               SGDM=3
 SGIEF212 NAME=2280,TYPLIST=3000,HLFLIST=1005,SGDT=5,SGDU=4
 SGIEF212 NAME=2282,TYPLIST=3000,HLFLIST=1006,SGDT=5,SGDU=5
 SGIEF212 NAME=3158,TYPLIST=1200,HLFLIST=100C,SGDT=5,SGDU=10     S99249
 SGIEF212 NAME=3210,TYPLIST=1000,HLFLIST=0822,SGDT=4,SGDU=3       20065
 SGIEF212 NAME=3211,TYPLIST=1080,HLFLIST=0809,SGDT=6,SGDU=6      S20202
 SGIEF212 NAME=3213,TYPLIST=1000,HLFLIST=0830,SGDT=4,SGDU=8      S99249
 SGIEF212 NAME=3215,TYPLIST=1000,HLFLIST=0823,SGDT=4,SGDU=4       20065
 SGIEF212 NAME=3277-1,TYPLIST=1100,HLFLIST=1009,SGDT=5,SGDU=8,SGDM=1
 SGIEF212 NAME=3277-2,TYPLIST=1200,HLFLIST=1009,SGDT=5,SGDU=8,SGDM=2
 SGIEF212 NAME=3284-1,TYPLIST=1100,HLFLIST=100A,SGDT=5,SGDU=9,SGDM=1
 SGIEF212 NAME=3284-2,TYPLIST=1200,HLFLIST=100A,SGDT=5,SGDU=9,SGDM=2
 SGIEF212 NAME=3286-1,TYPLIST=1100,HLFLIST=100B,SGDT=5,SGDU=7,SGDM=1
 SGIEF212 NAME=3286-2,TYPLIST=1200,HLFLIST=100B,SGDT=5,SGDU=7,SGDM=2
 SGIEF212 NAME=3066,TYPLIST=1000,HLFLIST=1008,SGDT=5,SGDU=6,SGDF=1
 SGIEF212 NAME=2260-1,TYPLIST=1100,HLFLIST=1003,SGDT=5,SGDU=2,SGDM=1
 SGIEF212 NAME=5450,TYPLIST=1000,HLFLIST=1007,SGDT=5,SGDU=6
 SGIEF212 NAME=2260-2,TYPLIST=1200,HLFLIST=1003,SGDT=5,SGDU=2,SGDM=2
 SGIEF212 NAME=1053,TYPLIST=1400,HLFLIST=1004,SGDT=5,SGDU=3
 SGIEF212   NAME=1443,TYPLIST=1000,HLFLIST=080A,SGDT=6,SGDU=3
 SGIEF212  NAME=1442,TYPLIST=5000,HLFLIST=0803,SGDT=7,SGDU=1
 SGIEF212   NAME=2501,TYPLIST=5000,HLFLIST=0804,SGDT=7,SGDU=2
 SGIEF212  NAME=2520,TYPLIST=5000,HLFLIST=0805,SGDT=7,SGDU=3
 SGIEF212   NAME=2540,TYPLIST=1000,HLFLIST=0801,SGDT=7,SGDU=4
 SGIEF212 NAME=2540-2,TYPLIST=1000,HLFLIST=0802,SGDT=7,SGDU=5
 SGIEF212 NAME=3505,TYPLIST=1000,HLFLIST=0806,SGDT=7,SGDU=8       21088
 SGIEF212 NAME=3525,TYPLIST=1000,HLFLIST=080C,SGDT=7,SGDU=9       21088
 SGIEF212   NAME=2671,TYPLIST=1000,HLFLIST=0810,SGDT=7,SGDU=6
 SGIEF212 NAME=2301,TYPLIST=3040,HLFLIST=2002,SGDT=3,SGDU=1
 SGIEF212  NAME=2302,TYPLIST=3000,HLFLIST=2004,SGDT=3,SGDU=2
 SGIEF212 NAME=2321,TYPLIST=3000,HLFLIST=2005,SGDT=3,SGDU=4
 SGIEF212 NAME=2303,TYPLIST=3000,HLFLIST=2003,SGDT=3,SGDU=5
 SGIEF212 NAME=2314,TYPLIST=30C0,HLFLIST=2008,SGDT=3,SGDU=6
 SGIEF212 NAME=3330,TYPLIST=3050,HLFLIST=2009,SGDT=3,SGDU=7      S20201
 SGIEF212 NAME=2305-1,TYPLIST=3050,HLFLIST=2006,SGDT=3,SGDU=8,SGDM=1
 SGIEF212 NAME=2305-2,TYPLIST=3050,HLFLIST=2007,SGDT=3,SGDU=8,SGDM=2
 SGIEF212 NAME=AAAE,TYPLIST=4000,HLFLIST=400E,SGDT=2,SGDU=2,SGDAD=1
 SGIEF212 NAME=AAAF,TYPLIST=4000,HLFLIST=400F,SGDT=2,SGDU=3,SGDAD=1
.* THESE TP LINES HAVE TO BE BEFORE THE 1287 &1288 DEFINITIONS    3975
 SGIEF212  NAME=AAAD,HLFLIST=400D,TYPLIST=4000,SGDT=2,SGDU=1,SGDAD=8
 SGIEF212 NAME=2495,TYPLIST=0000,HLFLIST=0818,SGDT=7,SGDU=7       19016
 SGIEF212 NAME=1285,TYPLIST=4000,HLFLIST=081A,SGDT=2,SGDU=1       19017
 SGIEF212 NAME=1287,TYPLIST=4000,HLFLIST=081B,SGDT=2,SGDU=2       19017
 SGIEF212 NAME=1288,TYPLIST=4000,HLFLIST=081C,SGDT=2,SGDU=3       19017
 SGIEF212 NAME=1419,TYPLIST=4000,HLFLIST=081D,SGDT=6,SGDU=4       19033
 SGIEF212 NAME=1275,TYPLIST=4000,HLFLIST=081F,SGDT=6,SGDU=5       19033
 SGIEF212 NAME=AAA1,HLFLIST=4001,SGDT=8,SGDU=1,TYPLIST=0000
 SGIEF212 NAME=AAA2,HLFLIST=4002,SGDT=8,SGDU=2,TYPLIST=0000
 SGIEF212 NAME=AAA3,HLFLIST=4003,SGDT=8,SGDU=3,TYPLIST=0000
 SGIEF212 NAME=AAA4,HLFLIST=4004,SGDT=8,SGDU=4,TYPLIST=0000
 SGIEF212 NAME=AAA5,HLFLIST=4005,SGDT=8,SGDU=5,TYPLIST=0000
 SGIEF212 NAME=AAA6,HLFLIST=4006,SGDT=8,SGDU=6,TYPLIST=0000
 SGIEF212 NAME=AAA7,HLFLIST=4007,SGDT=8,SGDU=7,TYPLIST=0000
 SGIEF212 NAME=AAA8,HLFLIST=4008,TYPLIST=4000,SGDT=8,SGDU=8
 SGIEF212 NAME=AAA9,HLFLIST=4009,TYPLIST=4000,SGDT=2,SGDU=6
 SGIEF212 NAME=AAAA,HLFLIST=400A,TYPLIST=4000,SGDT=2,SGDU=7
 SGIEF212 NAME=AAAB,HLFLIST=400B,TYPLIST=4000,SGDT=2,SGDU=8
 SGIEF212 NAME=AAAG,TYPLIST=0700,HLFLIST=4010,SGDT=2,SGDU=4       19006
 SGIEF212 NAME=AAAH,TYPLIST=0800,HLFLIST=4010,SGDT=12,SGDU=1      19006
 SGIEF212 NAME=AAAI,TYPLIST=0300,HLFLIST=4010,SGDT=12,SGDU=2      19006
 SGIEF212 NAME=AAAC,TYPLIST=5000,HLFLIST=4000,SGDT=12,SGDU=4     A43012
 SGIEF212 NAME=3705,TYPLIST=5000,HLFLIST=5005,SGDT=12,SGDU=6     S22024
 PUNCH '               LAST'
         AIF   (&SGMENTB(84)).CCC005
.*
.*   THE FOLLOWING ROUTINE WILL TEST TO SEE IF DEVICE IS SUPPORTED
.*   BY TESTING BIT 31 OF ITS SGDADRA BOX.  IF BIT 31 IS ON TURN IT
.*   OFF.  IF BIT 31 IS OFF, CLEAR BITS 23-30 AS WELL.  BITS 23-30
.*   OF SUPPORTED DEVICES HAVE BEEN SET TO THE UNIQUE DEVICE TYPE
.*   VOLUE IN SGIEF212.
.*
&AINDX   SETA  1                        INITIALIZE ALTERNATE INDEX I237
&A       SETA  1                        INITIALIZE DEVICE POINTER  I237
.ALTLOP  ANOP                                                      I237
         AIF   (&SGDADRA(&A) GT (X'40000'*4096)).BITON             I237
&SGDADRA(&A) SETA &SGDADRA(&A)-&SGDADRA(&A)/X'1000'*X'1000'+&SGDADRA(&AX
               )/X'100000'*X'1000'                                 I237
.BITON   ANOP                                                      I237
.*
.*   THE FOLLOWING ROUTINE IS USED TO DETERMINE THE NUMBER OF 2321'S
.*   IN THIS CONFIGURATION AND TO REMEMBER WHICH DEVICES ARE 2321'S.
.*
&NXF     SETA  &SGDADRA(&A)/4096-&SGDADRA(&A)/(4096*1024)*1024     I237
         AIF   (NOT &SGDT03B(&NXF)).ALTLOPA  TEST FOR DA           I237
&SGDASWB(&A)   SETB  1                  SET DA INDICATOR           I237
         AIF   (NOT &SGDU04B(&NXF)).ALTLOPA  TEST FOR 2321         I237
&SG2321B(&A)   SETB  1                  SET 2321 INDICATOR         I237
&CT2321  SETA  &CT2321+1                COUNT 2321'S IN SYSTEM     I237
.ALTLOPA ANOP                                                      I237
.*
.*   THE FOLLOWING ROUTINE WILL BUILD 'A' BOXES FOR ALL ALTERNATE
.*   PATHS IN THE SYSTEM.
.*
&B       SETA  &SGDADRA(&A)-&SGDADRA(&A)/4096*4096     GET         I237
&B       SETA  &B-4096*(&B/4096)        CHANNEL                    I237
&B       SETA  &B/256                   ADDRESS                    I237
         AIF   (NOT &SGCHANB(&B*15+4)).NOSSALT    TEST FOR HSMPX  20062
         AIF   (NOT &SGDAP2B(&NXF)).HSAP3    TEST FOR 'D' ALT      I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/16*16)+&B*256+208 I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.HSAP3   AIF   (NOT &SGDAP3B(&NXF)).HSAP4    TEST FOR 'E' ALT      I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/16*16)+&B*256+224 I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.HSAP4   AIF   (NOT &SGDAP4B(&NXF)).LSTALT   TEST FOR 'F' ALT      I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/16*16)+&B*256+240 I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
         AGO   .LSTALT                  BRANCH AROUND              I237
.NOSSALT ANOP                                                      I237
         AIF   (NOT &SGDAP1B(&NXF)).EXAMAP2  CHAN 1 TEST           I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'100'   I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.EXAMAP2 AIF   (NOT &SGDAP2B(&NXF)).EXAMAP3  CHANNEL 2 TEST        I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'200'   I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.EXAMAP3 AIF   (NOT &SGDAP3B(&NXF)).EXAMAP4  CHANNEL 3 TEST        I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'300'   I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.EXAMAP4 AIF   (NOT &SGDAP4B(&NXF)).EXAMAP5  CHANNEL 4 TEST        I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'400'   I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.EXAMAP5 AIF   (NOT &SGDAP5B(&NXF)).EXAMAP6  CHANNEL 5 TEST        I237
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'500'   I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.EXAMAP6 AIF   (NOT &SGDAP6B(&NXF)).EXAMAP7  CHANNEL 6 TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'600'   I237
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAP7 AIF   (NOT &SGDAP7B(&NXF)).EXAMAP8  CHANNEL 7 TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'700'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAP8 AIF   (NOT &SGDAP8B(&NXF)).EXAMAP9  CHANNEL 8 TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'800'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAP9 AIF   (NOT &SGDAP9B(&NXF)).EXAMAPA  CHANNEL 9 TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'900'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPA AIF   (NOT &SGDAPAB(&NXF)).EXAMAPB  CHANNEL A TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'A00'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPB AIF   (NOT &SGDAPBB(&NXF)).EXAMAPC  CHANNEL B TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'B00'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPC AIF   (NOT &SGDAPCB(&NXF)).EXAMAPD  CHANNEL C TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'C00'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPD AIF   (NOT &SGDAPDB(&NXF)).EXAMAPE  CHANNEL D TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'D00'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPE AIF   (NOT &SGDAPEB(&NXF)).EXAMAPF  CHANNEL F TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'E00'  20063
&AINDX   SETA  &AINDX+1                UPDATE ALTERNATE INDEX     20063
.EXAMAPF AIF   (NOT &SGDAPFB(&NXF)).LSTALT   CHANNEL F TEST       20063
&ALTLIST(&AINDX) SETA (&SGDADRA(&A)-&SGDADRA(&A)/256*256)+X'F00'  20063
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.LSTALT  ANOP                                                      I237
&A       SETA  &A+1                     UPDATE DEVICE INDEX        I237
         AIF   (&A LE &SGCNTRA(3)).ALTLOP    TEST FOR LAST DEVICE  I237
&EOALTS  SETB  (&AINDX EQ 1)            TEST FOR NO ALTERNATES     I237
&ACOUNT  SETA  &AINDX-1                 SET ALTERNATE COUNT        I237
         AIF   (&ACOUNT LT 2).INITIAL   TEST FOR ALTERNATES        I237
.*
.*   THE FOLLOWING SECTION WILL SORT THE ALTERNATES BY ADDRESS
.*
&MM      SETA  &ACOUNT                  GET NUMBER OF ALTERNATES   I237
.L2      AIF   (&MM/2 LE 0).INITIAL     ALL ALTS SORTED?           I237
&MM      SETA  &MM/2                    SET INDEX                  I237
&KK      SETA  &ACOUNT-&MM              SET FOR END PASS CHECK     I237
&J       SETA  1                        SET INDEX VALUE FOR FIRST  I237
.L3      ANOP                                                      I237
&I       SETA  &J                       SET INDEX TO FIRST ADDRESS I237
.L4      AIF   (&ALTLIST(&I) LT &ALTLIST(&I+&MM)).L5    COMPARE    I237
&T       SETA  &ALTLIST(&I)             SAVE ADDRESS OUT OF ORDER  I237
&ALTLIST(&I) SETA &ALTLIST(&I+&MM)      PUT SECOND IN FIRST        I237
&ALTLIST(&I+&MM) SETA  &T               MOVE FIRST TO SECOND       I237
&I       SETA  &I-&MM                   TEST INDEX                 I237
         AIF   (&I GE 1).L4                                        I237
.L5      AIF   (&J+1 GT &KK).L2         TEST FOR END OF LOOP       I237
&J       SETA  &J+1                     UPDATE POINTER             I237
         AGO   .L3                      RETURN                     I237
.*
.*   THE FOLLOWING ROUTINE CALCULATES UCBLOOKUP VALUES FOR EACH
.*   DEVICE AND PLACES THE VALUE IN BITS 13-22 OF THE SGDADRA BOXES.
.*
.INITIAL ANOP                                                      I237
&AINDX   SETA  1                        INITIALIZE ALTERNATE INDEX I237
&A       SETA  1                        INITIALIZE DEVICE NUMBER   I237
.DEVLOOP ANOP                                                      I237
         AIF   (&EOALTS).SKIPCHK        BRANCH IF NO ALTERNATES    I237
         AIF   (&SGDADRA(&A)-&SGDADRA(&A)/4096*4096 GT &ALTLIST(&AINDX)X
               -&ALTLIST(&AINDX)/4096*4096).ALTA  TEST FOR HIGH AD I237
.SKIPCHK ANOP                                                      I237
&INTALPH SETA  &SGDADRA(&A)-&SGDADRA(&A)/4096*4096 SAVE ACTUAL ADD I237
&ALTSW   SETB  0                        CLEAR ALTERNATE SWITCH     I237
         AIF   (&SGDADRA(&A) LT X'80000'*X'800').NOBIT DEV SUPPORT I237
&SGDADRA(&A) SETA &SGDADRA(&A)-X'80000'*X'800'                     I237
         AGO   .BITSET                  BRANCH AROUND              I237
.NOBIT   ANOP                                                      I237
&SGDADRA(&A) SETA &SGDADRA(&A)-&SGDADRA(&A)/X'400000'*X'400000'    I237
.BITSET  ANOP                                                      I237
         AGO   .COMPUTE                 BRANCH AROUND              I237
.ALTA    ANOP                                                      I237
&INTALPH SETA  &ALTLIST(&AINDX)-&ALTLIST(&AINDX)/4096*4096 ALT ADD I237
&ALTSW   SETB  1                        SET ALTERNATE SWITCH       I237
&EOALTS  SETB  (&AINDX EQ &ACOUNT)      TEST FOR LAST ALTERNATE    I237
&AINDX   SETA  &AINDX+1                 UPDATE ALTERNATE INDEX     I237
.COMPUTE ANOP                                                      I237
&NUA     SETA  &INTALPH-&INTALPH/16*16  GET UNIT ADDRESS           I237
&NCU     SETA  &INTALPH/16-&INTALPH/256*16   GET CU ADDRESS        I237
&NCHAN   SETA  &INTALPH/256             GET CHANNEL ADDRESS        I237
         AIF   (&IRSW EQ 1).NCHTST      TEST FOR FIRST PASS        I237
&OCHAN   SETA  &NCHAN                   GET NEW CHAN IN OLD        I237
         AGO   .SETCU                   BRANCH AROUND              I237
.NCHTST  ANOP                                                      I237
         AIF   (&NCHAN EQ &OCHAN).NCUTST     TEST FOR NEW CHANNEL  I237
&OCHAN   SETA  &NCHAN                   GET NEW CHAN IN OLD        I237
         AGO   .SETCU                   BRANCH AROUND ON NEW CHAN  I237
.NCUTST  AIF   (&OCU EQ &NCU).SETVAL    TEST FOR NEW CU            I237
.SETCU   ANOP                                                      I237
&OCU     SETA  &NCU                     GET NEW CU TO OLD CU       I237
&CUINDX  SETA  &CUINDX+2*&OUA+2-2*&NUA  COMPUTE INDEX FOR NEW CU   I237
         AIF   (&IRSW EQ 1).NOTFP       TEST FOR FIRST PASS        I237
         AGO   .FPAS                    YES - BRANCH AROUND        I237
.NOTFP   ANOP                           NOT FIRST PASS             I237
         AIF   (&CUINDX GE 0).SETVAL    TEST FOR NEGATIVE CUINDX   I237
.FPAS    ANOP                           FIRST PASS                 I237
&CUINDX  SETA  0                        YES - SET TO ZERO          I237
.SETVAL  ANOP                                                      I237
&VALUE   SETA  (&CUINDX+2*&NUA)/2+1     COMPUTE VALUE FOR THIS DEV I237
         AIF   (&VALUE GE 1).NOTNEG     TEST FOR VALUE             I237
&VALUE   SETA  1                        NO VALUE-SET TO 1          I237
.NOTNEG  ANOP                                                      I237
&IRSW    SETB  1                        SET INITIALIZATION SW      I237
&OUA     SETA  &NUA                     GET NEW UA TO OLD          I237
         AIF   (&LSTDEV AND &EOALTS).AAA0096 TEST FOR ALL DONE     I237
         AIF   (&LSTDEV).ALTA           TEST FOR NO MORE ACTUALS   I237
         AIF   (&ALTSW).DEVLOOP         TEST FOR ALTERNATE ADDRESS I237
.*
.*   NOW PUT THE UCBLOOKUP VALUE IN THE 'A' BOX.
.*
&SGDADRA(&A) SETA &SGDADRA(&A)-(&SGDADRA(&A)/X'1000'-&SGDADRA(&A)/X'400X
               000'*X'400')*X'1000'+&VALUE*X'1000'                 I237
&A       SETA  &A+1                     UPDATE DEVICE INDEX        I237
         AIF   (&A LE &SGCNTRA(3)).DEVLOOP   TEST FOR NO MORE ACTS.I237
&LSTDEV  SETB  1                        SET LAST ACTUAL INDICATOR  I237
         AIF   (NOT &EOALTS).ALTA       RETURN IF MORE ALTERNATES  I237
.AAA0096 ANOP                                                      7863
.**********************************************************************
.*
.* THIS SUBROUTINE WILL CHANGE THE UCB LOOKUP FOR 2321'S TO REFLECT
.* THE FIRST BIT OF THE TEN BITS FOR THIS 2321.
.*
.FFF005  ANOP                                                     19022
&RETURN  SETA  5                   RETURN FOR TOTAL BIT PATTERN   19022
&TBP     SETB  1                   SWITCH FOR PUTTING MAIN 2321'S 19022
.*                                 INTO TOTAL BIT PATTERN         19022
&A       SETA  &VALUE                                             19022
         AIF   (&CT2321 EQ 0).FFF0051                             19022
&A       SETA  &A+2+&CT2321*10                                    19022
.FFF0051 ANOP                                                     19022
&V       SETA  (&A+31)/32+1                                       19022
          AGO  .DDDB10             INITIALIZE CBOXES              19022
.FFF010  ANOP                                                     19022
&A       SETA  0
&COUNT   SETA  0
.UCBLOOP ANOP
&A       SETA  &A+1
         AIF   (&SG2321B(&A) NE 1 ).UCBL1
.* BRANCH IF THIS IS NOT A 2321.
         AGO   .DDDB201                                           19022
.FFF015  ANOP                                                     19022
&COUNT   SETA  &COUNT+1
&UCBLSTV SETA  &VALUE+3+(&COUNT-1)*10
.* GET THE NEW LOOKUP VALUE AND PUT IT IN THE CORRECT A-BOX ENTRY.
&SGDADRA(&A) SETA &SGDADRA(&A)-(&SGDADRA(&A)/X'1000'-&SGDADRA(&A)/X'400X
               000'*X'400')*X'1000'+&UCBLSTV*X'1000'
.UCBL1   ANOP
         AIF   (&A NE &SGCNTRA(3)).UCBLOOP
.**********************************************************************
&A       SETA  &VALUE
         AIF   (&CT2321 EQ 0).NO2321S
.* BRANCH IF THERE ARE NO 2321'S.
&A       SETA  &A+2+&CT2321*10
.NO2321S ANOP
&V       SETA  (&A+31)/32+1        SIZE OF THE BIT PATTERN IN WORDS
&ENTRIES SETA  &SGCNTRA(8)+&SGCNTRA(4)                             000G
.**********************************************************************
.*   THIS SECTION DETERMINES WHICH GENERIC NAMES MUST BE
.*   GENERATED, GENERATES THEM, AND ADJUSTS THE NUMBER OF
.*   ENTRIES TO INCLUDE THEM.  A NAME MUST BE GENERATED
.*   FOR EACH DEVICE, NOT SYSGENED, FOR WHICH A REQUEST
.*   MAY BE SATISFIED BY ANOTHER SYSGENED DEVICE.
.*      &T2400(X) AND &T3400(X) EQUAL TO NON-ZERO INDICATE THE
.*         DEVICE IS SYSGENED
.*      &GENB(X) INDICATES A GENERIC NAME MUST BE GENERATED
.*      &EXTRA INDICATES HOW MANY GENERICS MUST BE GENERATED
.AAA092  ANOP
         AIF   (&T3400(5) EQ 0).AAA094     3400-6 CAN SATISFY    S99223
         AIF   (&T3400(4) NE 0).AAA0922    REQUESTS FOR 3400-5,  S99223
&GENB(9) SETB  1                           3400-3 AND 2400-3     S99223
&EXTRA   SETA  &EXTRA+1                                          S21048
.AAA0922 ANOP                                                    S21048
         AIF   (&T3400(3) NE 0).AAA0942    3400-4 CAN SATISFY    S99223
         AIF   (&T3400(2) NE 0).AAA0972    REQUESTS FOR 3400-3,  S99223
&GENB(7) SETB  1                           2400-4, 2400-3 AND    S99223
&EXTRA   SETA  &EXTRA+1                     2400                 S21048
         AGO   .AAA0972                                          S99223
.AAA094  ANOP                                                    S21048
         AIF   (&T3400(3) EQ 0).AAA097                           S99223
.AAA0942 ANOP                                                    S99223
         AIF   (&T3400(2) NE 0).AAA0962                          S21048
&GENB(7) SETB  1                                                 S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
.AAA0962 ANOP                                                    S99223
         AIF   (&T2400(1) NE 0).AAA0964    2400-4 CAN SATISFY    S99223
&GENB(5) SETB  1                           REQUESTS FOR 2400-3   S99223
&EXTRA   SETA  &EXTRA+1                    AND 2400              S21048
.AAA0964 ANOP                                                    S21048
         AIF   (&T2400(2) NE 0).AAA0966                          S21048
         AIF   (&GENB(4) EQ 1).AAA0966                           S99223
&GENB(4) SETB  1                                                 S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
.AAA0966 ANOP                                                    S21048
         AIF   (&T2400(3) NE 0).AAA098                           S21048
&GENB(1) SETB  1                                                 S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
         AGO    .AAA098                                          S21048
.AAA097  ANOP                                                    S21048
         AIF   (&T3400(2) EQ 0).AAA0974                          S21048
.AAA0972 ANOP                                                    S99223
         AIF   (&T2400(2) NE 0).AAA0974                          S20148
&GENB(4) SETB  1                                                 S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
.AAA0974 ANOP                                                    S21048
         AIF   (&T2400(1) NE 0).AAA0964                          S21048
.AAA098  ANOP                                                    S99223
         AIF   (&T3400(1) EQ 0).AAA0995   3400-2 CAN SATISFY     S21048
         AIF   (&T2400(5) NE 0).AAA0982   REQUESTS FOR 2400-2    S21048
&GENB(3) SETB  1                          AND 2400-1             S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
.AAA0982 ANOP                                                    S21048
         AIF   (&T2400(4) NE 0).AAA099                           S21048
&GENB(2) SETB  1                                                 S21048
&EXTRA   SETA  &EXTRA+1                                          S21048
         AGO   .AAA099
.AAA0995 ANOP
         AIF (&T2400(5) EQ 0).AAA099     2400-2 CAN SATISFY
         AIF (&T2400(4) NE 0).AAA099     REQUESTS FOR 2400-1
&GENB(2) SETB 1
&EXTRA   SETA  &EXTRA+1
.AAA099  ANOP                                                    S21048
&ENTRIES SETA &ENTRIES+&EXTRA    ADD NUM OF GENERATED ENTRIES    S99223
         PUNCH '         DC    F''&ENTRIES'''
.AAA015  ANOP
&A       SETA  0
.AAA016  AIF   (&A EQ &SGCNTRA(3)).AAA102
.*   PUNCH ONE SGIEF011 CARD FOR EACH SUPPORTED DEVICE TYPE IN SYSTEM.
&A       SETA  &A+1
&B SETA &SGDADRA(&A)/X'400000'   TYPE VALUE IN BITS 23-30
         AIF   (&B EQ 0).AAA016
         AIF   (&TYPEB(&B)).AAA016
&TYPEB(&B)  SETB  1
 PUNCH ' SGIEF011 &B,&B '
         AGO   .AAA016
.AAA102  ANOP                                 THIS SECTION TESTS S21048
         AIF   (NOT &GENB(1)).AAA103          THE BITS IN  GENB  S21048
         PUNCH '         DC    CL8''2400'''   IF THE BIT IS SET  S21048
         PUNCH '         DC    X''30008001''' A GENERIC NAME ENT S21048
.AAA103  ANOP                                 IS MADE THE BIT    S21048
         AIF   (NOT &GENB(2)).AAA104          SETTINGS ARE:      S21048
         PUNCH '         DC    CL8''2400-1'''   GENB(1)=2400     S21048
         PUNCH '         DC    X''30808001'''   GENB(2)=2400-1   S21048
.AAA104  ANOP                                                    S21048
         AIF   (NOT &GENB(3)).AAA105            GENB(3)=2400-2   S21048
         PUNCH '         DC    CL8''2400-2'''                    S21048
         PUNCH '         DC    X''30C08001'''                    S21048
.AAA105  ANOP                                                    S21048
         AIF   (NOT &GENB(4)).AAA106            GENB(4)=2400-3   S21048
         PUNCH '         DC    CL8''2400-3'''                    S21048
         PUNCH '         DC    X''34008001'''                    S21048
.AAA106  ANOP                                                    S21048
         AIF   (NOT &GENB(5)).AAA107            GENB(5)=2400-4   S21048
         PUNCH '         DC    CL8''2400-4'''                    S21048
         PUNCH '         DC    X''34208001'''                    S21048
.AAA107  ANOP                                                    S21048
         AIF   (NOT &GENB(7)).AAA108            GENB(7)=3400-3   S21048
         PUNCH '         DC    CL8''3400-3'''   GENB(6) & (8) ARES21048
         PUNCH '         DC    X''34008003'''  UNUSED AT PRESENT S21048
.AAA108  ANOP                                                    S21048
         AIF   (NOT &GENB(9)).AAA110            GENB(9)=3400-5   S99223
         PUNCH '         DC    CL8''3400-5'''                    S99223
         PUNCH '         DC    X''32008003'''                    S99223
.AAA110  AIF   (&SGCNTRA(4) EQ 0).BBB030
&ESNINDX SETA  0
&FH      SETB  0
&COUNTER SETA  1
.AAA112  AIF   (&ESNINDX EQ &SGCNTRA(4)).BBB030
.*   WHEN RETURN EQ 0 PUNCH SGIEF013 CARDS AS NEEDED AND A SGIEF011
.*       CARD FOR EACH UNITNAME SPECIFIED IN THE SYSTEM.
.*   WHEN RETURN EQ 3 PUNCH SGIEF013 CARDS AS NEEDED AND A SGIEF012
.*       CARD FOR EACH UNITNAME SPECIFIED IN THE SYSTEM.
&ESNINDX SETA  &ESNINDX+1
&B       SETA  0
&A       SETA  0
         AIF   (&RETURN EQ 3).DDDB10
.AAA125  AIF   (&FH).AAA126
&TEST1   SETA  &SGUNNMA(&COUNTER)/X'1000'
         AGO   .AAA129
.AAA126  ANOP
&TEST1   SETA  &SGUNNMA(&COUNTER)-&SGUNNMA(&COUNTER)/X'1000'*X'1000'
.AAA129  AIF   (&TEST1 EQ X'FFF').AAA225
.AAA200  AIF   (&A EQ &SGCNTRA(3)).E2
&A       SETA  &A+1      SEARCH FOR DEVICE THIS ADDRESS
 AIF (&SGDADRA(&A)-&SGDADRA(&A)/X'1000'*X'1000' NE &TEST1).AAA200
&TEST4  SETA  &SGDADRA(&A)/X'400000'  GET BITS 23-30
         AIF   (&RETURN EQ 3).DDDB20
.AAA210  AIF   (&B NE 0 AND &TEST4 EQ 0).AAA220
&B       SETA  &B+1
&C       SETA  &B-(&B-1)/16*16
&G(&C)   SETA  &TEST4              G(1-16)
         AIF   (&C NE 16).AAA220
 PUNCH ' SGIEF013 &B,&G(1),&G(2),&G(3),&G(4),&G(5),&G(6),&G(7),&G(8),&GX
               (9),&G(10),&G(11),&G(12),&G(13),&G(14),&G(15),&G(16)'
.AAA220  ANOP
&COUNTER SETA  &COUNTER+&FH
&FH      SETB  (NOT &FH)
         AGO   .AAA125
.E2      ANOP
         CONVERT TO=EBCDIC,VALUE=&TEST1,DIGITS=3
    MNOTE 5,'* * * IEIGEN052 ADDRESS VALUE &EBCDIC SPECIFIED'
    MNOTE 5,'* * *       WITH UNIT NAME &SGUNNMC(&ESNINDX) NOT'
    MNOTE 5,'* * *       DEFINED ON IODEVICE STATEMENT'
&SGQUITB SETB  1
         MEXIT
.AAA225  AIF   (&B-&B/16*16 EQ 0).BBB010     A MULTIPLE OF 16 OR 0
 PUNCH ' SGIEF013 &B,&G(1),&G(2),&G(3),&G(4),&G(5),&G(6),&G(7),&G(8),&GX
               (9),&G(10),&G(11),&G(12),&G(13),&G(14),&G(15),&G(16)'
.BBB010  ANOP
&COUNTER SETA  &COUNTER+&FH
&FH      SETB  (NOT &FH)
         AIF   (&RETURN EQ 3).EEE040
 PUNCH ' SGIEF011 0,0,&SGUNNMC(&ESNINDX)'
         AGO   .AAA112
.BBB030  AIF   (&RETURN EQ 3).EEE050
 PUNCH ' END'
 PUNCH '/*'
.FFF020  ANOP                                                     19022
&SGCTRLC(6)  SETC  'IEFDEVPT'                                     19022
         COPY  SGASMPAK                                           19022
 PUNCH 'IEFDEVPT CSECT'                                           19022
&COUNT   SETA  0                                                  19022
         AGO   .CCC005                                            19022
.FFF025  ANOP                                                     19022
&TBP     SETB  0                                                  19022
.FFF0251 ANOP                                                     19022
&A       SETA  &A+1                                               19022
          AIF   (&A GT &SGCNTRA(3)).FFF030                        19022
         AGO   .DDDB201                                           19022
.FFF030  ANOP                                                     19022
&A       SETA  &V-1                                               19022
 PUNCH 'DVPTLEN  DC    H''&A'''                                   19022
 PUNCH 'DVPTSIZE DC    H''&VALUE'''                               19022
 PUNCH 'DVPTDEV  DC    H''&U'''                                   19022
 PUNCH 'DVPT2321 DC    H''&CT2321'''                              19022
 PUNCH 'DVPT     DC    F''0'''                                    19022
 PUNCH '     DC  X''&L(1)&L(2)&L(3)&L(4)&L(5)&L(6)&L(7)'''        19022
         AIF   ('&CONTI' NE 'X').FFF035                           19022
 PUNCH '     DC  X''&L(8)&L(9)&L(10)&L(11)&L(12)&L(13)&L(14)'''   19022
         AIF   ('&CONTI1' NE 'X').FFF035                          19022
 PUNCH '     DC  X''&L(15)&L(16)&L(17)&L(18)&L(19)&L(20)&L(21)''' 19022
         AIF   ('&CON2' NE 'X').FFF035                            19022
 PUNCH '     DC  X''&L(22)&L(23)&L(24)&L(25)&L(26)&L(27)&L(28)''' 19022
         AIF   ('&CON3' NE 'X').FFF035                            19022
 PUNCH '     DC  X''&L(29)&L(30)&L(31)&L(32)&L(33)&L(34)&L(35)''' 19022
         AIF   ('&CON4' NE 'X').FFF035                            19022
 PUNCH '     DC  X''&L(36)&L(37)&L(38)&L(39)&L(40)&L(41)&L(42)''' 19022
.FFF035  ANOP                                                     19022
 PUNCH '     END '                                                19022
 PUNCH '/*'                                                       19022
&SGCTRLC(6)  SETC  'IEFWMSKA'
         COPY  SGASMPAK
 PUNCH 'DEVMASKT CSECT'
 PUNCH '          DC    H''&ENTRIES'''
&ENTRIES SETA  &ENTRIES+1
 PUNCH '         DC    H''&ENTRIES'''
&SGCNTRA(10)   SETA 0
&SGMENTB(83) SETB 0
&SGMENTB(84)  SETB  1
.*   GO BACK TO PUNCH OUT SGIEF010 CARDS TO SET GLOBALS IN SECOND ASMBY
         AGO   .AAA005
.CCC005  ANOP
&CONTI   SETC  ' '
&CONTI1  SETC  ' '                                                 000G
&CON2    SETC  ' '                                                 000G
&CON3    SETC  ' '                                                 000G
&CON4    SETC  ' '                                                 000G
         AIF   (&V LE 8).EEE015
&CONTI   SETC  'X'
         AIF (&V LE 15).EEE015                                     000G
&CONTI1 SETC 'X'                                                   000G
         AIF   (&V LE 22).EEE015                                   000G
&CON2    SETC  'X'                                                 000G
         AIF   (&V LE 29).EEE015                                   000G
&CON3    SETC  'X'                                                 000G
         AIF   (&V LE 36).EEE015                                   000G
&CON4    SETC  'X'                                                 000G
         AGO   .EEE015
.DDDB10  ANOP
&U SETA 0  INITIALIZATION REQUIED BEFORE DERIVING EACH MASK.
.*   L(1-7) ARE GIVEN THE HEX.VALUES WHICH PRODUCE THE MASKS.
&X       SETA  1
.DDDB14  ANOP
&L(&X)   SETC  '00000000'
&X       SETA   &X+1
         AIF   (&X LT &V).DDDB14  V=1+ NO. OF NECESSARY CBOXES.
.DDD019 AIF (&RETURN EQ 3).AAA125
         AIF   (&RETURN EQ 4).EEE054
         AIF   (&RETURN EQ 5).FFF010                              IORMS
         AIF   (&RETURN EQ 6).EEEA350                            S21048
.*              =2 PUNCH ONE SGIEF012 CARD PER SUPPORTED DEVICE TYPE.
.*              =3 PUNCH SGIEF013 AS NEEDED AND ONE SGIEF012 CARD
.*       FOR EACH UNITNAME SPECIFIED IN THE SYSTEM.
.*   AFTER ALL UNITNAMES PROCESSED PUNCH SGIEF013 1,0,0,0,0... CALD
.*   WHEN RETURN=4 PUNCH A SGIEF012 CARD WITH MASK OF ALL DIRECT ACCESS
.*       DEVICES.
&DUPLI1 SETA &SGDADRA(&A)/X'400000'  GET BITS 23-30(DEV TYPE)
.DDDB20  ANOP
         AIF   (&RETURN NE 2).DDDB201
&W       SETA  0
         AGO   .EEE020
.DDDB201 ANOP
&W       SETA  &A
.DDDB21  ANOP  OBTAIN UCB LOOKUP VALUE FROM BITS 13-21.
&UCBLSTV SETA &SGDADRA(&W)/X'1000'-&SGDADRA(&W)/X'400000'*X'400'
.DDDC20  ANOP
&U       SETA  &U+1      COUNT OF DEVICES IN CURRENT MASK
.*   GET VALUE OF 1,2,3 OR 4 TO USE IN SUBLIST TO OBTAIN HEX.CHARACTER.
&X SETA &UCBLSTV+1-&UCBLSTV/4*4 1,5,9=2 2,6,10=3 3,7,11=4 4,8,12=1
&K(1)    SETC  '1842'(&X,1)  HEX CHARACTER FOR UCBLOOKUP MASK.
&XX      SETA  (&UCBLSTV+31)/32  GIVES CBOX FOR THIS CHARACTER
&D SETA (&UCBLSTV-1-(&UCBLSTV-1)/32*32+4)/4 POSITION IN CBOX FOR CHAR.
&K(2)    SETC  '&L(&XX)'(&D,1)   GET CHARACTER ALREADY THERE
         AIF   ('&K(2)' LT '0').DDDD IF CHARACTER A-E MUST CONVERT
&HEX     SETA  &K(2)
         AGO   .DDDD10
.DDDD    ANOP
         CONVERT DIGITS=1,VALUE=&K(2),TO=HEX
.DDDD10  ANOP
&X       SETA  &HEX+&K(1)  WHAT WAS THERE PLUS 1,2,4,8.
&K(1)    SETC  '123456789ABCDEF'(&X,1)
.*  SET HEX.CHARACTER K(1) IN POSITION D OF L(XX). OTHER POSITIONS
.*       REMAIN UNCHANGED.
         AIF   (&D EQ 1).DDDE10
         AIF   (&D EQ 8).DDDE15
&L(&XX)  SETC  '&L(&XX)'(1,&D-1).'&K(1)'.'&L(&XX)'(&D+1,8-&D)
         AGO   .DDDE18
.DDDE10  ANOP
&L(&XX)  SETC  '&K(1)'.'&L(&XX)'(2,7)
         AGO   .DDDE18
.DDDE15  ANOP
&L(&XX)  SETC  '&L(&XX)'(1,7).'&K(1)'
.DDDE18  ANOP                                                      000G
         AIF   (&RETURN EQ 5 AND &TBP).FFF015                     19022
         AIF   (&RETURN EQ 6).EEEA350                            S21048
.**********************************************************************
.**********************************************************************
.*
.* THE SUBROUTINE PROCESSES NON-SPECFIC ENTRIES IN THE DMT FOR 2321'S.
.*
         AIF   (&SG2321B(&W) NE 1 ).GM2321B
         AIF   (&COUNT EQ 9).GM2321A
&COUNT   SETA  &COUNT+1
&UCBLSTV SETA  &UCBLSTV+1
         AGO   .DDDC20
.GM2321A ANOP
&COUNT   SETA  0
.GM2321B ANOP
         AIF   (&RETURN EQ 5).FFF0251                             19022
         AIF   (&RETURN EQ 2).EEE020
         AIF   (&RETURN EQ 3).AAA210
         AGO   .EEE055
.**********************************************************************
.EEE015  ANOP
&COUNT   SETA  0
&CONT    SETC  '&CONTI'
&A       SETA  0
         AIF   (&TBP).FFF025                                      19022
&RETURN  SETA  2
.EEE017  AIF   (&A EQ &SGCNTRA(3)).EEE035
.*  SEARCH EVERY DEVICE PUNCHING ONE SGIEF012 PER UNIQUE DEVICE TYPE.
&A       SETA  &A+1
         AIF  (&SGDADRA(&A) LT X'400000').EEE017 NOT SUPPORTED
         AIF   (&SGDADRA(&A) LT X'10000'*X'4000').DDDB10 SAME AS PREV.
&SGDADRA(&A) SETA &SGDADRA(&A)-X'10000'*X'4000'  TYPE, FALL THROUGH
  AGO .EEE017                                AND SET BIT 31 OFF.
.EEE020  AIF   (&SGCNTRA(3) EQ &W).EEE030
.* RETURN=2 SEARCH REST OF DEVICES FOR ANY OF SAME TYPE (BITS 23-30)
.*       THEY WILL GO IN SAME MASK AND HAVE BIT 31 TURNED ON.
&W       SETA  &W+1
         AIF (&SGDADRA(&W) LT X'400000').EEE020
&DUPLI2  SETA &SGDADRA(&W)/X'400000'
         AIF   (&DUPLI1 NE &T2400(3)).EEE0220    CURRENT MASK IS S21048
         AIF   (&DUPLI2 EQ &T2400(1)).DDDB21      2400- INCLUDE  S21048
         AIF   (&DUPLI2 EQ &T2400(1)+X'100').DDDB21              S21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21     2400-4 + 3400-4 S21048
         AIF   (&DUPLI2 EQ &T3400(3)+X'100').DDDB21              S21048
         AGO   .EEE021                                           S21048
.EEE0220 ANOP                                                    S21048
         AIF   (&DUPLI1 NE &T2400(2)).EEE0222     CURRENT MASK ISS21048
         AIF   (&DUPLI2 EQ &T2400(1)).DDDB21      2400-3 INCLUDE S21048
         AIF   (&DUPLI2 EQ &T2400(1)+X'100').DDDB21              S21048
         AIF   (&DUPLI2 EQ &T3400(2)).DDDB21      2400-4,3400-3  S21048
         AIF   (&DUPLI2 EQ &T3400(2)+X'100').DDDB21              S21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21        3400-4       S21048
         AIF   (&DUPLI2 EQ &T3400(3)+X'100').DDDB21              S21048
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21      3400-6         S99223
         AIF   (&DUPLI2 EQ &T3400(5)+X'100').DDDB21              S99223
         AGO   .EEE021                                           S21048
.EEE0222 ANOP                                                    S21048
         AIF   (&DUPLI1 NE &T2400(1)).EEE0224    CURRENT MASK IS S21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21      2400-4 INCLUDE S21048
         AIF   (&DUPLI2 EQ &T3400(3)+X'100').DDDB21              S21048
         AGO   .EEE021                            3400-4         S21048
.EEE0224 ANOP                                                    S21048
         AIF   (&DUPLI1 NE &T3400(2)).EEE0225     CURRENT MASK ISS21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21      3400-3 INCLUDE S21048
         AIF   (&DUPLI2 EQ &T3400(3)+X'100').DDDB21  3400-4
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21         3400-6      S99223
         AIF   (&DUPLI2 EQ &T3400(5)+X'100').DDDB21              S99223
         AGO   .EEE021                                           S21048
.EEE0225 ANOP                                                    S99223
         AIF   (&DUPLI1 NE &T3400(4)).EEE0226    CURRENT MASK IS S99223
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21      3400-5 INCLUDE S99223
         AIF   (&DUPLI2 EQ &T3400(5)+X'100').DDDB21   3400-6     S99223
         AGO   .EEE021                                           S99223
.EEE0226 ANOP                                                    S21048
         AIF   (&DUPLI1 NE &T2400(4)).EEE0228     CURRENT MASK ISS21048
         AIF   (&DUPLI2 EQ &T3400(1)).DDDB21      2400-1 INCLUDE S21048
         AIF   (&DUPLI2 EQ &T3400(1)+X'100').DDDB21   3400-2     S21048
         AIF   (&DUPLI2 EQ &T2400(5)).DDDB21      AND   2400-5   A51299
         AIF   (&DUPLI2 EQ &T2400(5)+X'100').DDDB21              A51299
         AGO   .EEE021                                           S21048
.EEE0228 ANOP                                                    S21048
         AIF   (&DUPLI1 NE &T2400(5)).EEE021     CURRENT MASK IS S21048
         AIF   (&DUPLI2 EQ &T3400(1)).DDDB21      2400-2 INCLUDE S21048
         AIF   (&DUPLI2 EQ &T3400(1)+X'100').DDDB21              S21048
.*                                                3400-2         S21048
.EEE021  ANOP
         AIF   (&DUPLI1 NE &DUPLI2).EEE020
&SGDADRA(&W) SETA &SGDADRA(&W)+X'10000'*X'4000'           BIT 31 ON
 AGO .DDDB21   GO SET THIS DEVICE UCBLOOKUP IN CURRENT MASK.
.EEE030 ANOP   RETURN=2  COME HERE ONCE PER DEVICE TYPE.
.EEE033  ANOP
&SGDADRA(&A)  SETA  &SGDADRA(&A)-X'10000'*X'4000'    SET BIT 31 OFF
 PUNCH ' SGIEF012 &DUPLI1,&U,                                          X
                       XXXXXXXX'
 PUNCH '               &L(1)&L(2)&L(3)&L(4)&L(5)&L(6)&L(7)&CONTI'
 AIF ('&CONTI' NE 'X').EEE017
 PUNCH '               &L(8)&L(9)&L(10)&L(11)&L(12)&L(13)&L(14)&CONTI1'
 AIF ('&CONTI1' NE 'X').EEE017                                     000G
 PUNCH '               &L(15)&L(16)&L(17)&L(18)&L(19)&L(20)&L(21)&CON2'
         AIF   ('&CON2' NE 'X').EEE017                             000G
    PUNCH      '               ,                                       X
                               X'
 PUNCH '               &L(22)&L(23)&L(24)&L(25)&L(26)&L(27)&L(28)&CON3'
         AIF   ('&CON3' NE 'X').EEE017                             000G
 PUNCH '               &L(29)&L(30)&L(31)&L(32)&L(33)&L(34)&L(35)&CON4'
         AIF   ('&CON4' NE 'X').EEE017                             000G
 PUNCH '               &L(36)&L(37)&L(38)&L(39)&L(40)&L(41)&L(42)'
         AGO   .EEE017
.EEE035  ANOP            SET RETURN=6 TO INDICATE GENERATED      S21048
&RETURN  SETA  6    GENERIC NAME BIT PATTERNS ARE BEING BUILT    S21048
.EEE0351 ANOP                        EXTRA=0 WHEN ALL FINISHED   S21048
         AIF   (&EXTRA EQ 0).EEE0356  WITH GENERATED GENERICS    S21048
&W       SETA  0                                                 S21048
         AGO   .DDDB10                                           S21048
.EEEA350 ANOP                                                    S21048
         AIF   (&SGCNTRA(3) EQ &W).EEEA352                       S21048
&W       SETA  &W+1                                              S21048
         AIF   (&SGDADRA(&W) LT X'400000').EEEA350 NOT SUPPORTED S21048
&DUPLI2  SETA  &SGDADRA(&W)/X'400000'  DUPLI2=DEVICE TYPE        S21048
         AIF   (&GENB(1)).EEEC350       THIS BRANCH TABLE        S21048
         AIF   (&GENB(2)).EEED350       INDICATES WHICH MASK IS  S21048
         AIF   (&GENB(3)).EEEE350       BEING BUILT AND BRACHES  S21048
         AIF   (&GENB(4)).EEEF350       TO LOOK FOR APPROPRIATE  S21048
         AIF   (&GENB(5)).EEEG350       DEVICES                  S21048
         AIF   (&GENB(7)).EEEH350                                S21048
         AIF   (&GENB(9)).EEEI350                                S99223
.EEEC350 ANOP                                                    S21048
         AIF   (&DUPLI2 EQ &T2400(1)).DDDB21  2400 MASK-INCLUDE  S21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21   2400-4 AND 3400-4 S21048
         AGO   .EEEA350                                          S21048
.EEED350 ANOP                                2400-1 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T3400(1)).DDDB21   3400-2            S21048
         AIF   (&DUPLI2 EQ &T2400(5)).DDDB21   AND 2400-2        A51299
         AGO   .EEEA350                                          S21048
.EEEE350 ANOP                                2400-2 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T3400(1)).DDDB21   3400-2            S21048
         AGO   .EEEA350                                          S21048
.EEEF350 ANOP                                2400-3 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T2400(1)).DDDB21   2400-4            S21048
         AIF   (&DUPLI2 EQ &T3400(2)).DDDB21   3400-3            S21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21   3400-4            S21048
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21   3400-6            S99223
         AGO   .EEEA350                                          S21048
.EEEG350 ANOP                                2400-4 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21   3400-4            S21048
         AGO   .EEEA350                                          S21048
.EEEH350 ANOP                                3400-3 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T3400(3)).DDDB21   3400-4            S21048
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21   3400-6            S99223
         AGO   .EEEA350                                          S21048
.EEEI350 ANOP                                3400-5 MASK INCLUDESS21048
         AIF   (&DUPLI2 EQ &T3400(5)).DDDB21    3400-6           S99223
         AGO   .EEEA350                                          S99223
.EEEA352 ANOP                           COME HERE WHEN BIT       S21048
 PUNCH  '        DC        F''&U'''                              S21048
         AIF   (&GENB(1)).EEEC354       PATTERN IS BUILT-        S21048
         AIF   (&GENB(2)).EEED354       THIS BRACH TABLE         S21048
         AIF   (&GENB(3)).EEEE354       GOES TO PUNCH HEADER     S21048
         AIF   (&GENB(4)).EEEF354       FOR MASK TABLE           S21048
         AIF   (&GENB(5)).EEEG354       ENTRY                    S21048
         AIF   (&GENB(7)).EEEH354                                S21048
         AIF   (&GENB(9)).EEEI354                                S99223
.EEEC354 ANOP                                                    S21048
&GENB(1) SETB  0              HEADER FOR 2400                    S21048
 PUNCH  '        DC        X''30008001'''                        S21048
         AGO   .EEE0353                                          S21048
.EEED354 ANOP                                                    S21048
&GENB(2) SETB  0              HEADER FOR 2400-1                  S21048
 PUNCH  '        DC        X''30808001'''                        S21048
         AGO   .EEE0353                                          S21048
.EEEE354 ANOP                                                    S21048
&GENB(3) SETB  0              HEADER FOR 2400-2                  S21048
 PUNCH  '        DC        X''30C08001'''                        S21048
         AGO   .EEE0353                                          S21048
.EEEF354 ANOP                                                    S21048
&GENB(4) SETB  0              HEADER FOR 2400-3                  S21048
 PUNCH  '        DC        X''34008001'''                        S21048
         AGO   .EEE0353                                          S21048
.EEEG354 ANOP                                                    S21048
&GENB(5) SETB  0              HEADER FOR 2400-4                  S21048
 PUNCH  '        DC        X''34208001'''                        S21048
         AGO   .EEE0353                                          S21048
.EEEH354 ANOP                                                    S21048
&GENB(7) SETB  0              HEADER FOR 3400-3                  S21048
 PUNCH  '        DC        X''34008003'''                        S21048
         AGO   .EEE0353                                          S21048
.EEEI354 ANOP                                                    S99223
&GENB(9) SETB  0              HEADER FOR 3400-5                  S99223
 PUNCH  '        DC        X''32008003'''                        S99223
.EEE0353 ANOP       PUNCH MASK FOR GENERIC                       S21048
 PUNCH  '   DC  X''&L(1)&L(2)&L(3)&L(4)&L(5)&L(6)&L(7)'''        S21048
         AIF   ('&CONT' NE 'X').EEE0354                          S21048
 PUNCH  '   DC  X''&L(8)&L(9)&L(10)&L(11)&L(12)&L(13)&L(14)'''   S21048
         AIF   ('&CONTI1' NE 'X').EEE0354                        S21048
 PUNCH  '   DC  X''&L(15)&L(16)&L(17)&L(18)&L(19)&L(20)&L(21)''' S21048
         AIF   ('&CON2' NE 'X').EEE0354                          S21048
 PUNCH  '   DC  X''&L(22)&L(23)&L(24)&L(25)&L(26)&L(27)&L(28)''' S21048
         AIF   ('&CON3' NE 'X').EEE0354                          S21048
 PUNCH  '   DC  X''&L(29)&L(30)&L(31)&L(32)&L(33)&L(34)&L(35)''' S21048
         AIF   ('&CON4' NE 'X').EEE0354                          S21048
 PUNCH  '   DC  X''&L(36)&L(37)&L(38)&L(39)&L(40)&L(41)&L(42)''' S21048
.EEE0354 ANOP                                                    S21048
&EXTRA   SETA  &EXTRA-1       DECREMENT COUNT OF GENERATE GENERICS21048
         AGO   .EEE0351                                          S21048
.EEE0356 ANOP
&RETURN  SETA  3
         AGO   .AAA110
.EEE040  ANOP  RETURN=3  COME HERE ONCE PER UNITNAME.
 PUNCH ' SGIEF012 0,&U,                                                X
                     XXXX'
 PUNCH '               &L(1)&L(2)&L(3)&L(4)&L(5)&L(6)&L(7)&CONTI'
 AIF ('&CONTI' NE 'X').AAA112
 PUNCH '               &L(8)&L(9)&L(10)&L(11)&L(12)&L(13)&L(14)&CONTI1'
 AIF ('&CONTI1' NE 'X').AAA112                                     000G
 PUNCH '               &L(15)&L(16)&L(17)&L(18)&L(19)&L(20)&L(21)&CON2'
         AIF   ('&CON2' NE 'X').AAA112                             000G
    PUNCH      '               ,                                       X
                               X'
 PUNCH '               &L(22)&L(23)&L(24)&L(25)&L(26)&L(27)&L(28)&CON3'
         AIF   ('&CON3' NE 'X').AAA112                             000G
 PUNCH '               &L(29)&L(30)&L(31)&L(32)&L(33)&L(34)&L(35)&CON4'
         AIF   ('&CON4' NE 'X').AAA112                             000G
 PUNCH '               &L(36)&L(37)&L(38)&L(39)&L(40)&L(41)&L(42)'
         AGO   .AAA112
.EEE050  ANOP
 PUNCH ' SGIEF013 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0'
&RETURN  SETA  4
         AGO   .DDDB10
.EEE054  ANOP  RETURN=4
&A       SETA  0
.EEE055  AIF   (&A EQ &SGCNTRA(3)).EEE060
&A       SETA  &A+1
         AIF   (NOT &SGDASWB(&A)).EEE055
         AGO   .DDDB20
.EEE060  ANOP  PUNCH OUT MASK FOR ALL DIRECT ACCESS DEVICES.
 PUNCH ' SGIEF012 0,&U,                                                X
                     XXXX'
 PUNCH '               &L(1)&L(2)&L(3)&L(4)&L(5)&L(6)&L(7)&CONTI'
 AIF ('&CONTI' NE 'X').AA1234
 PUNCH '               &L(8)&L(9)&L(10)&L(11)&L(12)&L(13)&L(14)&CONTI1'
 AIF ('&CONTI1' NE 'X').AA1234                                     000G
 PUNCH '               &L(15)&L(16)&L(17)&L(18)&L(19)&L(20)&L(21)&CON2'
         AIF   ('&CON2' NE 'X').AA1234                             000G
    PUNCH      '               ,                                       X
                               X'
 PUNCH '               &L(22)&L(23)&L(24)&L(25)&L(26)&L(27)&L(28)&CON3'
         AIF   ('&CON3' NE 'X').AA1234                             000G
 PUNCH '               &L(29)&L(30)&L(31)&L(32)&L(33)&L(34)&L(35)&CON4'
         AIF   ('&CON4' NE 'X').AA1234                             000G
 PUNCH '               &L(36)&L(37)&L(38)&L(39)&L(40)&L(41)&L(42)'
.AA1234 PUNCH '          END '
 PUNCH '/*'
         MEND
