         MACRO
         SGIEE2DC
         COPY  SGGBLPAK
         GBLA &GRCON,&TRCON
         GBLC &BRODF(64)
         GBLC  &BRODA(64),&BRODD(64)
         GBLC &F(64),&E(64)
         LCLC  &A(64),&B(64),&D(64)
         LCLA &G,&H(64),&S,&T,&RK,&RK1,&RK2,&RK3,&RK4         MD  M0434
         LCLA  &P,&X,&Y                                       MD  M0434
         LCLA  &M,&TO
         LCLA  &N,&U
         LCLA  &CTL
         LCLC &KEY(64)
         LCLC  &CON50,&CON85,&CON60,&CON70                    MD  M0434
         LCLC   &GRCAN,&TRCAN
         LCLA  &NUMAREA(64),&C                                MD  M0434
         LCLA  &SIZA(64),&SIZEB(64)
         AIF   (NOT &SGSCHDB(34)).NOTMCS1
&A(1)    SETC  '&SGSCHDC(1)'(1,3)
&A(2)    SETC  '&SGSCHDC(1)'(4,3)
&B(1)    SETC  'FC'
&B(2)    SETC  'FC'
&C       SETA  &SGSCHDA(16)                                   MD  M0434
&F(1)    SETC '&SGTGRIA(32)'
&F(2)    SETC '&SGTGROA(32)'
&H(1)    SETA  &N
&H(2)    SETA  &N
&M       SETA  1
.RADICE1 ANOP
.********** GET SECONDARY CONSOLES
&N       SETA  &N+1
&M       SETA  &M+2
&A(&M)   SETC  '&SGSCNCC(&N)'(1,3)
&A(&M+1) SETC  '&SGSCNCC(&N)'(4,3)
&C       SETA  &C+&SGSCNPA(&N)                                MD  M0434
&H(&M)   SETA  &N
&H(&M+1) SETA &N
&F(&M)   SETC  '&SGTGRIA(&N)'
&F(&M+1) SETC  '&SGTGROA(&N)'
.*       CHECK FOR USE AS STATUS DISPLAY OR MASTER CONSOLE
         AIF   (&SGSCSDB(&N)).SDSGEN  STATUS DISPLAY
         AIF   (&SGSCMSB(&N)).MSTGEN  MESSAGE
&B(&M)   SETC  'FC'
&B(&M+1) SETC  'FC'
.DOP  ANOP
         AIF   (&SGSCNYA(1) NE &N).RADICE1
&CTL     SETA  &M+1
.******** BLANK OUT 2ND HALF OF NON-COMPOSITIES *********
&N       SETA  1
.DUMY    ANOP
         AIF   ('&A(&N)' NE 'FFF').INCR     'FFF'=NO CONSOLE SPECIFIED
&A(&N)   SETC  ''
.INCR    ANOP
&N       SETA  &N+1
         AIF   (&N LE &CTL).DUMY
&N       SETA  1
         AGO   .OVER1
.MSTGEN       ANOP
&B(&M)   SETC  'MS'
&B(&M+1) SETC  'MS'
        AGO .DOP
.SDSGEN  ANOP
&B(&M)   SETC  'SD'
&B(&M+1) SETC  'SD'
        AGO .DOP
.MCS2    ANOP
&N       SETA  &N+2
.OVER1   ANOP
         AIF   ('&A(&N)' NE '&A(&N+1)').OK
&A(&N+1) SETC  ''
.OK      ANOP
         AIF   (&N NE &CTL-1).MCS2
&N       SETA  1
.LP      ANOP
.******** SET ATTRIBUTES ************
         AIF   ('&A(&N)' EQ '').MPEND
       CONVERT TO=HEX,VALUE=&A(&N),DIGITS=3
&U       SETA  &HEX
       IOCHECK LOOKFOR=&U
&HEX     SETA  &SGDADRA(&HEX)/1048576
         AIF   (&SGDT05B(&HEX)).ADMP
         AGO   .MPEND
.ADMP    ANOP  GRAPHICS,MODEL1,W/ALKYB,LIGHTPEN,BUFFER4K/8K
         AIF   (&SGDU06B(&HEX)).IS5450
         AIF   (&SGDU02B(&HEX)).IS2260
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
         AIF   (&SGDU07B(&HEX)).MPEND                         MD  M0434
         AIF   (&SGDU08B(&HEX)).IS3270                        MD  M0434
         AIF   (&SGDU09B(&HEX)).MPEND                         MD  M0434
         AIF   (&SGDU10B(&HEX)).ISMOD2                        MC S21112
.**********************************************************************
.*       MUST  BE  2250
&E(&N)   SETC  'B'
         AGO   .MPEND
.IS5450  ANOP
&E(&N)   SETC  'A'
         AGO   .MPEND
.IS2260  ANOP
&E(&N)   SETC  'C'
         AGO   .MPEND                                         MD  M0434
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
.IS3270  ANOP                                                 MD  M0434
         AIF   (&SGDM02B(&HEX)).ISMOD2                        MD  M0434
&E(&N)   SETC  'D'                                            MD  M0434
         AGO   .MPEND                                         MD  M0434
.ISMOD2  ANOP                                                 MD  M0434
&E(&N)   SETC  'E'                                            MD  M0434
.**********************************************************************
.MPEND   ANOP
&N       SETA  &N+1
         AIF   (&N LE &CTL).LP
&N       SETA  1
.******** SQUEEZE OUT BLANK CONSOLES
.LOOP    ANOP
         AIF   ('&A(&N)' EQ '').SCAT
&N       SETA  &N+1
         AIF   (&N LE &CTL).LOOP
         AGO   .MPOUT
.SCAT    ANOP
&M       SETA  &N-1
.MCS3    ANOP
&M       SETA  &M+1
         AIF   (&M EQ &CTL AND '&A(&M)' EQ '' AND &M EQ &N).DONIT
&A(&M)   SETC  '&A(&M+1)'
&B(&M)   SETC  '&B(&M+1)'
&E(&M)   SETC  '&E(&M+1)'
&F(&M)   SETC  '&F(&M+1)'
&H(&M)   SETA   &H(&M+1)
         AIF   (&M+1 LT &CTL).MCS3
&CTL     SETA  &CTL-1
         AGO   .LOOP
.DONIT   ANOP
&CTL     SETA  &M-1
.MPOUT   ANOP
&M       SETA  1
.PASSER  ANOP
&BRODA(&M) SETC '&A(&M)'
&BRODF(&M)  SETC '&F(&M)'
&M       SETA  &M+1
         AIF   (&M LE 64).PASSER
&M       SETA  1
.*       CHECK TO SEE IF GRAPHIC DEVICE
.START   ANOP
         AIF   ('&E(&M)' EQ '').NOTGRAF
&GRCON   SETA   &GRCON+1
         AIF   ('&F(&M)' EQ '0').RESDENT
&TRCON   SETA   &TRCON+1
.*       CONVERT VALUE TO HEX SO IT CAN BE USED AS AN INDEX
         CONVERT TO=HEX,VALUE=&F(&M),DIGITS=2
&G       SETA  &HEX                TRANSFER VALUE
         AIF   (&HEX LE 64 AND &HEX GE 1).GOONAME
         MNOTE 0,'***TRANSIENT GROUP NAME &F(&M) IS TOO LARGE  *****'
&G       SETA  64
&F(&M)   SETC  '64'
.GOONAME ANOP                   VALUE LESS THAN 64 IS GOOD
&NUMAREA(&G) SETA   &NUMAREA(&G)+1
.*       CHECK IF THERE ARE MORE THAN FOUR DCMS FOR AREA
         AIF   (&NUMAREA(&G) LE 4).GOOAREA
         MNOTE 0,'***THERE ARE &NUMAREA(&G) DCMS IN TRANSIENT AREA &G'
.GOOAREA ANOP
&F(&M)   SETC  'T&F(&M)'
.*       THIS CODE CHECKS TYPE OF DEVICE AND SIZE OF AREA NEEDED
       AIF  ('&E(&M)' EQ 'A').ISA5450
       AIF  ('&E(&M)' EQ 'B').ISA2250
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
         AIF   ('&E(&M)' EQ 'D').ISANR1                       MD  M0434
         AIF   ('&E(&M)' EQ 'E').ISANR2                       MD  M0434
.**********************************************************************
.*       MUST  THEN BE A 2260
&CON60   SETC  'Y'
&RK      SETA  &RK+1
&SIZA(&M) SETA 1636
&SGCTRLC(6) SETC 'DCM&A(&M)'
         COPY  SGASMPAK
         PUNCH 'DCM&A(&M) CSECT '
         PUNCH '         IEECBJH USE=&B(&M) '
         PUNCH '  END       '
         PUNCH '/* '
&SGCTRLC(6) SETC 'IEECVF&RK'
         COPY  SGASMPAK
         PUNCH 'IEECVF&RK    CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
         AGO   .SIZCHK
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
.ISANR1  ANOP                                                 MD  M0434
&CON70   SETC  'Y'                                            MD  M0434
&RK3     SETA  &RK3+1                                         MD  M0434
&SIZA(&M) SETA 1096                                           MD  M0434
&SGCTRLC(6) SETC 'DCM&A(&M)'                                  MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'DCM&A(&M) CSECT '                             MD  M0434
         PUNCH '         IEECGCB USE=&B(&M) '                 MD  M0434
         PUNCH '  END       '                                 MD  M0434
         PUNCH '/* '                                          MD  M0434
&SGCTRLC(6) SETC 'IEECVG&RK3'                                 MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVG&RK3   CSECT'                           MD  M0434
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'                    MD  M0434
         AGO   .SIZCHK                                        MD  M0434
.ISANR2  ANOP                                                 MD  M0434
&CON70   SETC  'Y'                                            MD  M0434
&RK4     SETA  &RK4+1                                         MD  M0434
&SIZA(&M) SETA 2624                                           MD  M0434
&SGCTRLC(6) SETC 'DCM&A(&M)'                                  MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'DCM&A(&M) CSECT '                             MD  M0434
         PUNCH '         IEECHCB USE=&B(&M) '                 MD  M0434
         PUNCH '  END       '                                 MD  M0434
         PUNCH '/* '                                          MD  M0434
&SGCTRLC(6) SETC 'IEECVH&RK4'                                 MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVH&RK4   CSECT'                           MD  M0434
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'                    MD  M0434
         AGO   .SIZCHK                                        MD  M0434
.**********************************************************************
.RESDENT ANOP
&TO      SETA   &TO+1
&F(&M)   SETC  'R&TO'
         AIF   ('&E(&M)' EQ 'A').ISR5450
         AIF   ('&E(&M)' EQ 'B').ISR2250
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
         AIF   ('&E(&M)' EQ 'D').ISRANR1                      MD  M0434
         AIF   ('&E(&M)' EQ 'E').ISRANR2                      MD  M0434
.**********************************************************************
.*       MAST BE 2260
&CON60   SETC   'Y'
&RK      SETA  &RK+1
&SGCTRLC(6) SETC 'IEECVR&TO'
         COPY  SGASMPAK
         PUNCH 'IEECVR&TO CSECT'
         PUNCH '     DC   3D''0''   '
         PUNCH ' DC  V(IEECVSUB) '
         PUNCH ' DC  F''0'' '
         PUNCH '            IEECBJH USE=&B(&M)'
         PUNCH ' END'
         PUNCH '/*'
&SGCTRLC(6) SETC 'IEECVF&RK'
         COPY  SGASMPAK
         PUNCH 'IEECVF&RK    CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
         AGO   .CONTINA
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
.ISRANR1 ANOP                                                 MD  M0434
&CON70   SETC   'Y'                                           MD  M0434
&RK3     SETA  &RK3+1                                         MD  M0434
&SGCTRLC(6) SETC 'IEECVR&TO'                                  MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVR&TO CSECT'                              MD  M0434
         PUNCH '     DC   3D''0''   '                         MD  M0434
         PUNCH ' DC  V(IEECVSUB) '                            MD  M0434
         PUNCH ' DC  F''0'' '                                 MD  M0434
         PUNCH '            IEECGCB USE=&B(&M)'               MD  M0434
         PUNCH ' END'                                         MD  M0434
         PUNCH '/*'                                           MD  M0434
&SGCTRLC(6) SETC 'IEECVG&RK3'                                 MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVG&RK3   CSECT'                           MD  M0434
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'                    MD  M0434
         AGO   .CONTINA                                       MD  M0434
.ISRANR2 ANOP                                                 MD  M0434
&CON70   SETC   'Y'                                           MD  M0434
&RK4     SETA  &RK4+1                                         MD  M0434
&SGCTRLC(6) SETC 'IEECVR&TO'                                  MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVR&TO CSECT'                              MD  M0434
         PUNCH '     DC   3D''0''   '                         MD  M0434
         PUNCH ' DC  V(IEECVSUB) '                            MD  M0434
         PUNCH ' DC  F''0'' '                                 MD  M0434
         PUNCH '            IEECHCB USE=&B(&M)'               MD  M0434
         PUNCH ' END'                                         MD  M0434
         PUNCH '/*'                                           MD  M0434
&SGCTRLC(6) SETC 'IEECVH&RK4'                                 MD  M0434
         COPY  SGASMPAK                                       MD  M0434
         PUNCH 'IEECVH&RK4   CSECT'                           MD  M0434
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'                    MD  M0434
         AGO   .CONTINA                                       MD  M0434
.**********************************************************************
.ISR5450 ANOP
&CON85    SETC   'Y'
&RK1     SETA  &RK1+1
&SGCTRLC(6) SETC 'IEECVR&TO'
         COPY  SGASMPAK
         PUNCH 'IEECVR&TO CSECT'
         PUNCH '     DC   3D''0''   '
         PUNCH ' DC  V(IEECVSUB) '
         PUNCH ' DC  F''0'' '
         PUNCH '            IEECRJK'
         PUNCH ' END'
         PUNCH '/*'
&SGCTRLC(6) SETC 'IEECVD&RK1'
         COPY  SGASMPAK
         PUNCH 'IEECVD&RK1   CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
         AGO   .CONTINA
.ISR2250 ANOP
&RK2     SETA  &RK2+1
&CON50   SETC   'Y'
&SGCTRLC(6) SETC 'IEECVR&TO'
         COPY  SGASMPAK
         PUNCH 'IEECVR&TO CSECT'
         PUNCH '     DC   3D''0''   '
         PUNCH ' DC  V(IEECVSUB) '
         PUNCH ' DC  F''0'' '
         PUNCH '            IEECEJM  '
         PUNCH ' END'
         PUNCH '/*'
&SGCTRLC(6) SETC 'IEECVE&RK2'
         COPY  SGASMPAK
         PUNCH 'IEECVE&RK2   CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
         AGO   .CONTINA
.ISA5450 ANOP
&CON85   SETC   'Y'
&RK1     SETA  &RK1+1
&SGCTRLC(6) SETC 'DCM&A(&M)'
         COPY  SGASMPAK
         PUNCH 'DCM&A(&M) CSECT '
         PUNCH '         IEECRJK '
         PUNCH '  END       '
         PUNCH '/* '
&SGCTRLC(6) SETC 'IEECVD&RK1'
         COPY  SGASMPAK
         PUNCH 'IEECVD&RK1   CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
&CON85   SETC  'Y'
&SIZA(&M) SETA 3372
         AGO   .SIZCHK
.ISA2250 ANOP
&RK2     SETA  &RK2+1
&SGCTRLC(6) SETC 'DCM&A(&M)'
         COPY  SGASMPAK
         PUNCH 'DCM&A(&M) CSECT '
         PUNCH '            IEECEJM  '
         PUNCH '  END       '
         PUNCH '/* '
&SGCTRLC(6) SETC 'IEECVE&RK2'
         COPY  SGASMPAK
         PUNCH 'IEECVE&RK2   CSECT'
         PUNCH '      IEECRDCM DEV=&E(&M),                             H
                              CCCCCCCCCCC'
&CON50   SETC  'Y'
&SIZA(&M) SETA 5420
.SIZCHK  ANOP
         AIF   (&SIZA(&M) LE &SIZEB(&G)).CONTINA
.*       NEW DCM IS LARGER THAN PREVIOUS DCM
&SIZEB(&G) SETA  &SIZA(&M)
&D(&G)   SETC  '&F(&M)'
&BRODD(&G) SETC '&F(&M)'
.CONTINA ANOP
         AIF   (&H(&M) EQ 0).FIXMAST
         AIF   (&SGSCNPA(&H(&M)) EQ 0).NOTGRA
.TOTA    ANOP
         PUNCH '               KEY=IEECVK&H(&M),                       L
                              CCCCCCCCCCC'
         AGO   .NOTGRA
.FIXMAST ANOP
         AIF   (&SGSCHDA(16) EQ 0).NOTGRA
         AGO   .TOTA
.NOTGRA ANOP
&N       SETA   &H(&M)
         AIF   (&N EQ 0).FIXMAS
         AIF   (&SGAR12A(&N) EQ 0).EXITB
         PUNCH '               A=(&SGAR01A(&N),                        P
                                      CATCHALL'
         AIF   (&SGAR02A(&N) EQ 0).EXITA
         PUNCH '               &SGAR02A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR03A(&N) EQ 0).EXITA
         PUNCH '               &SGAR03A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR04A(&N) EQ 0).EXITA
         PUNCH '               &SGAR04A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR05A(&N) EQ 0).EXITA
         PUNCH '               &SGAR05A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR06A(&N) EQ 0).EXITA
         PUNCH '               &SGAR06A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR07A(&N) EQ 0).EXITA
         PUNCH '               &SGAR07A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR08A(&N) EQ 0).EXITA
         PUNCH '               &SGAR08A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR09A(&N) EQ 0).EXITA
         PUNCH '               &SGAR09A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR10A(&N) EQ 0).EXITA
         PUNCH '               &SGAR10A(&N),                           H
                                      CATCHALL'
         AIF   (&SGAR11A(&N) EQ 0).EXITA
         PUNCH '               &SGAR11A(&N),                           -
                                      CATCHALL'
         AGO   .EXITA
.FIXMAS  ANOP
&N       SETA  1
         AIF   (&SGSCHAA(12) EQ 0).EXITB
         PUNCH '               A=(&SGSCHAA(1),                         P
                                      CATCHALL'
.ROB     ANOP
&N       SETA  &N+1
         AIF   (&N GE 12).EXITA
         AIF   (&SGSCHAA(&N) EQ 0).EXITA
         PUNCH '               &SGSCHAA(&N),                           K
                                      CATCHALL'
         AGO   .ROB
.EXITA   ANOP
         PUNCH '               ),                                      L
                             XXXXXXXX'
.EXITB   ANOP
         PUNCH '               T=&F(&M)'
         PUNCH ' END'
         PUNCH '/*'
.NOTGRAF ANOP
&M       SETA  &M+1
         AIF   (&M LE &CTL).START
&GRCAN SETC '&GRCON'
&TRCAN SETC '&TRCON'
&SGCTRLC(6) SETC 'IEECVSUB'
         COPY  SGASMPAK
         PUNCH 'IEECVSUB CSECT'
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
         PUNCH ' IEECSUB &GRCAN,&TRCAN,&CON60,&CON70,&CON85,&CON50,,PFKX
               =&C '
.**********************************************************************
         PUNCH ' END'
         PUNCH '/*'
.*       DETERMINE NAME TO BE ASSOCIATED WITH AND SIZE OF TRANS AREA
&N       SETA  1
.CHECNAM ANOP
         AIF   ('&D(&N)' EQ '').DOAGAIN
&SGCTRLC(6) SETC 'IEECV&D(&N)'
         COPY  SGASMPAK
         PUNCH 'IEECV&D(&N) CSECT'
         PUNCH '     DC   3D''0''   '
         PUNCH ' DC  V(IEECVSUB) '
         PUNCH ' DC  F''0'' '
         AIF   (&SIZEB(&N) EQ 3372).DO85
         AIF   (&SIZEB(&N) EQ 1636).DO60
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
         AIF   (&SIZEB(&N) EQ 1096).DOANR1                    MD  M0434
         AIF   (&SIZEB(&N) EQ 2624).DOANR2                    MD  M0434
.**********************************************************************
         PUNCH '  IEECEJM '
         AGO   .DOT
.**********************************************************************
.**************   ADD CHECKS FOR 3270 DISPLAY SYSTEM   ****************
.**********************************************************************
.DOANR1  ANOP                                                 MD  M0434
         PUNCH '   IEECGCB '                                  MD  M0434
         AGO   .DOT                                           MD  M0434
.DOANR2  ANOP                                                 MD  M0434
         PUNCH '   IEECHCB '                                  MD  M0434
         AGO   .DOT                                           MD  M0434
.**********************************************************************
.DO85    ANOP
         PUNCH '  IEECRJK '
         AGO   .DOT
.DO60    ANOP
         PUNCH '  IEECBJH '
.DOT     ANOP
         PUNCH '         END'
         PUNCH '/*'
.*       NO NAME,PRESENT
.DOAGAIN ANOP
&N SETA &N+1
         AIF   (&N LE 64).CHECNAM
         AIF   (&SGSCHDA(16) EQ 0).SECPROC
&P       SETA  1                                              MD  M0434
         AIF   ('&E(1)' EQ 'E').STRT1 3270 START PFK NO AT 1  MD  M1692
&M       SETA  0
&S       SETA  &SGSCHDA(16)-1
         AGO   .MASLOP             LOOK FOR PFKS              MD  M1692
.STRT1   ANOP                                                 MD  M1692
&M       SETA  1                   START PFK NO'S AT ONE      MD  M1692
&S       SETA  &SGSCHDA(16)        SET STOPPER TO NUMBER GEN'DMD  M1692
.MASLOP  ANOP                                                 MD  M1692
&SGCTRLC(6) SETC 'IEEPFKEY'                                   MD  M1519
          COPY SGASMPAK
         PUNCH 'IEEPFKEY CSECT '
         PUNCH '   DC  A(KEY)  '
.AGANI   ANOP
&Y       SETA  &Y+1
&X       SETA   (&X+&SGSCNPA(&Y))
         AIF  (&Y LE 30).AGANI
&X       SETA   (&X+&SGSCHDA(16))
&X       SETA   (((&X*110+32)+3000)/3000)    X=TOTAL # PFKS
   PUNCH '    DC  (&X)X''00000000000000000000''  '  LLMBBCCHHR
         PUNCH 'KEY DC  AL2(ENDPFK-IEEPFKEY)  '
         PUNCH '    DC  H''0''   '
         PUNCH '        ENTRY IEECVK0            '
         PUNCH 'IEECVK0 EQU  *                  '
.GEN1    ANOP
         PUNCH '         DC    FL1''&M'' '    KEY NUMBER
         PUNCH '         DC    X''00'' '      FLAGS
         PUNCH '         DC    108C'' '' '    DEFINATION
&M       SETA  &M+1
         AIF   (&M LE &S).GEN1
         PUNCH '          DC   FL1''100'' '   STOPPER BYTE
.SECPROC ANOP
         AIF  (&P EQ 0).SECONLY
.BACK    ANOP
&N       SETA  1
&X       SETA  2                                               @AS72581
.TRYAGIN  ANOP
         AIF   (&H(&X) GT &H(&X-1)).NOINC  NO BUMP AGAIN IF NE @AS72581
&X       SETA  &X+1    SKIP 0-ADDR OF PREVIOUS LOGICAL CONSOLE @AS72581
.NOINC   ANOP                                                  @AS72581
         AIF   (&SGSCNPA(&N) EQ 0).TRYMORE
         AIF   ('&E(&X)' EQ 'E').START1 START 3277 PFK'S AT 1  @AS72581
&M       SETA  0
&S       SETA  &SGSCNPA(&N)-1
         AGO   .LOPSECS                                       MD  M1692
.START1  ANOP                                                 MD  M1692
&M       SETA  1                   SET START NO. TO 1         MD  M1692
&S       SETA  &SGSCNPA(&N)        STOP AT GENN'D NO.         MD  M1692
.LOPSECS ANOP                                                 MD  M1692
         PUNCH '       ENTRY IEECVK&N            '
         PUNCH 'IEECVK&N EQU  *    '
.GEN2    ANOP
         PUNCH '         DC    FL1''&M'' '    KEY NUMBER
         PUNCH '         DC    X''00'' '      FLAGS
         PUNCH '         DC    108C'' '' '    DEFINATION
&M       SETA  &M+1
         AIF   (&M LE &S).GEN2
         PUNCH '         DC    FL1''100'' '   STOPPER BYTE
.TRYMORE ANOP
&N     SETA    &N+1
&X       SETA  &X+1          BUMP TO NEXT LOGICAL CONSOLE      @AS72581
         AIF   (&N LE 31).TRYAGIN  DO MORE DEVICES IF ANY      @AS72581
.PUNEND  ANOP                                                 MD  M1692
        PUNCH 'ENDPFK EQU *  '                                MD  M0434
         PUNCH '  END  '
         PUNCH '/*    '
         AGO   .OUT
.SECONLY ANOP
&N       SETA  1                   SET LOOP CONTROL           MD  M1692
.PUNLOOP ANOP                                                 MD  M1692
         AIF   (&SGSCNPA(&N) NE 0).PUNJCL PUNCH JCL           MD  M1692
&N       SETA  &N+1                GET NEXT CONSOLE           MD  M1692
         AIF   (&N LE  31).PUNLOOP LOOP TILL POSITIVE         MD  M1692
         AIF   (&P EQ 0).OUT       NO KEYS DEFINED AT ALL EXITMD  M1692
         AGO   .PUNEND             PUNCH END JCL              MD  M1692
.PUNJCL  ANOP                                                 MD  M1692
&SGCTRLC(6)  SETC   'IEEPFKEY'
         COPY  SGASMPAK
         PUNCH 'IEEPFKEY CSECT  '
         PUNCH '   DC  A(KEY)  '
.AGANIB  ANOP
&Y       SETA  &Y+1
&X       SETA  (&X+&SGSCNPA(&Y))
         AIF   (&Y LE 30).AGANIB
&X       SETA  (((&X*110+32)+3000)/3000)  X=TOTAL # PFKS
    PUNCH '   DC  (&X)X''00000000000000000000''  '   LLMBBCCHHR
         PUNCH 'KEY   DC   AL2(ENDPFK-IEEPFKEY)  '
         PUNCH '    DC   H''0''   '
         AGO   .BACK
.OUT     ANOP
.NOMRE2  ANOP
.NOTMCS1 ANOP
         MEXIT
         MEND
