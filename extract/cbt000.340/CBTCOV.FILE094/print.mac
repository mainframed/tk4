PRINT    TITLE 'QUEUE COMMAND - PRINT SCREEN DISPLAY ROUTINE'     ONL01
PRINT    QSTART ,                  START PRINT CSECT ASSEMBLY     ONL01
***********************************************************************
* RNB CHANGES:                                                        *
*      (1) RNB10 - CHANGE DEFAULT SYSOUT CLASS TO C (IF QRNB=1)       *
***********************************************************************
         GBLB  &QRNB                                              RNB10
         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA       FCI*
         L     R10,QVDSPL     LOAD BASE REG                        FCI*
         USING QCPRINT,R9     BASE REG FOR PRINT WORK AREA         FCI*
         L     R9,QVPRINT     LOAD BASE REGISTER                   FCI*
         USING WORK,R13       BASE REG FOR LOCAL WORK AREA         FCI*
***********************************************************************
*   PROCESS THE PRINT COMMAND                                      FCI*
***********************************************************************
STARTIT  BAL   R7,PARSECMD    GO PARSE THE PRINT COMMAND           FCI*
         CLC   =C'ON',QPPARM1 IS IT ON?                            FCI*
         BE    STARTPRT         YES..GO START IT                   FCI*
         CLC   =C'OFF',QPPARM1 IS PRINT OFF?                       FCI*
         BE    STOPPRT          YES..GO STOP IT                    FCI*
         CLI   QPPARM1,C' '   NO PARM?                             FCI*
         BE    STARTPRT         YES..ASSUME START                  FCI*
STOP     MVC   QDREPLY,QBLANK   KISS OFF OUR REPLY  (SNEAKY)       FCI*
         XC    QDRLNG,QDRLNG    AND SAY NOBODY HOME                FCI*
         QSTOP                                                     FCI*
         EJECT ,                                                   FCI*
***********************************************************************
*   START (OR CONTINUE) THE PRINT PROCESS                          FCI*
***********************************************************************
STARTPRT DS 0H                                                     FCI*
         TM    QPFLAG,HARDCPY  IS HARDCOPY ON                      FCI*
         BO    JUSTPRT         YES..JUST PRINT                     FCI*
         ZAP   QPPAGE,=P'0'    RESET PAGE NUMBER                   FCI*
         MVI   QPHEAD1,C'0'    AND ASA ON HEADING SO WELL START FRESH
         BAL   R7,ALLOCHC      GO ALLOCATE / OPEN HARDCOPY         FCI*
JUSTPRT  BAL   R7,GETTIME      GO GET DATE AND TIME                FCI*
         MVC   QPUSER,QLOGON   MOVE IN USERID                      FCI*
         MVC   QPDATE,JDATE    MOVE IN DATE TIME INFO              FCI*
         MVC   QPPAGE#,QBLANK     CLEAR OUT PAGE # FIELD           FCI*
         XC    QPHEAD1(1),=X'01'  TOGGLE ASA FLAG 0-1 OR 1-0       FCI*
         CLI   QPHEAD1,C'1'    EJECT NOW SCHEDULED?                FCI*
         BNE   NOPAGE             NO..SKIP PAGE SETTING            FCI*
*                                                                  FCI*
         AP    QPPAGE,=P'1'    BUMP PAGE COUNT                     FCI*
         MVC   QPPAGE#,=X'402020202021'  MOVE IN MASK              FCI*
         ZAP   DBLWORK,QPPAGE  MOVE INTO AREA                      FCI*
         ED    QPPAGE#,DBLWORK+5   EDIT IN PAGE NUMBER             FCI*
NOPAGE   PUT   HASPPRNT,QPHEAD1  PUT OUT TITLE LINE                FCI*
         PUT   HASPPRNT,QPHEAD2  PUT OUT '-' LINE                  FCI*
*                                                                  FCI*
         MVC   QPLINE,QBLANK                   RECONSTRUCT IMAGE   FCI*
         MVC   QPLINE(15),=C'QUEUE COMMAND -'    OF HEADER LINE    FCI*
         MVC   QPLINE+16(L'QPRSAVE),QPRSAVE        WITHOUT 3270    FCI*
         PUT   HASPPRNT,QPDETAIL                      CONTROL CHARS
         EJECT ,                                                   FCI*
*                                                                  FCI*
*  PUT OUT ENTIRE SCREEN OF DETAIL LINES (BLANK OR NOT)            FCI*
*                                                                  FCI*
         MVC   QPLINE(80),QDHLINE MOVE HEADING LINE TO BUFFER     UF003
         PUT   HASPPRNT,QPDETAIL PRINT THE LINE                   UF003
         LH    R3,QDSCRLEN       SIZE OF SCREEN                   UF003
         SR    R2,R2             CLEAR FOR DIVIDE                 UF003
         LH    R7,QDLNELEN       LINE LENGTH                      UF003
         DR    R2,R7             NUMBER OF LINES                  UF003
         BCTR  R7,0              DROP LINE LEN FOR EXECUTES       UF003
         LA    R2,QDLINE1        LOAD ADDRESS OF FIRST LINE       UF003
PUTLOOP  EX    R7,PUTMVC         MOVE LINE TO BUFFER              UF003
         PUT   HASPPRNT,QPDETAIL PUT DETAIL LINE LOUT              FCI*
         LA    R2,1(R2,R7)       POINT TO NEXT LINE               UF003
         BCT   R3,PUTLOOP        AND GRIND THE SCREEN THROUGH      FCI*
*                                                                  FCI*
         MVC   QPLINE,QBLANK                   RECONSTRUCT IMAGE   FCI*
         MVC   QPLINE(07),=C'REPLY -'            OF COMMAND LINE   FCI*
         MVC   QPLINE+08(L'QDREPLY),QDREPLY        WITHOUT 3270    FCI*
         MVC   QPLINE+72(1),QDPLUS                   CONTROL CHARS FCI*
         PUT   HASPPRNT,QPDETAIL                       AND PRINT IT
*                                                                  FCI*
         MVI   QPDETAIL,C'-'       TRIPLE SPACE A BLANK LINE       FCI*
         MVC   QPLINE,QBLANK                                       FCI*
         PUT   HASPPRNT,QPDETAIL   AND PRINT IT                    FCI*
         MVI   QPDETAIL,C' '       RESTORE TO SINGLE SPACE         FCI*
*                                                                  FCI*
         MVC   QDTLINE+L'QDTLINE-L'PRTMSG-1(L'PRTMSG),PRTMSG       FCI*
GOTMSG   LA    R1,0               SET A ZERO                       FCI*
         L     R2,4(R13)              RETURN CODE                  FCI*
         ST    R1,16(R2)                  IN REGISTER 15 (SAVED)   FCI*
         B     STOP                                                FCI*
         SPACE 2                                                   FCI*
PUTMVC   MVC   QPLINE(*-*),0(R2)  EXECUTED MOVE                   UF003
PRTMSG   DC    C'SCREEN PRINTED'                                   FCI*
         EJECT ,                                                   FCI*
***********************************************************************
*   STOP PRINT PROCESS AND FREE HASPPRNT DDNAME                    FCI*
***********************************************************************
STOPPRT  TM    QPFLAG,HARDCPY             IS HARDCPY ON            FCI*
         BNO   STOP                       NOPE..NO WORK TO DO      FCI*
         LA    R2,HASPPRNT          BUILD                          FCI*
         LA    R1,DBLWORK                   LIST                   FCI*
         MVI   DBLWORK,X'80'              LAST ENTRY IN LIST       FCI*
         CLOSE ((2)),MF=(E,(1))           CLOSE OFF THE FILE       FCI*
         FREEPOOL (2)                     FREE THE BUFFERS TOO     FCI*
         MVC   DYNALLOC(F99LEN),F99PTR   COPY DYN FREE LIST        FCI*
         LA    R1,FREERB          RELOCATE THE LIST ADDRESSES.     FCI*
         STCM  R1,B'0111',FREEPTR+1   *                            FCI*
         LA    R1,FREETXPT            *                            FCI*
         ST    R1,FREETPTR            *                            FCI*
         LA    R1,FREETU1             *                            FCI*
         STCM  R1,B'0111',FREETXPT+1  *                            FCI*
         LA    R1,FREETU2             *                            FCI*
         STCM  R1,B'0111',FREETXPT+5  *                            FCI*
         LA    R1,FREEPTR                                          FCI*
         DYNALLOC                                                  FCI*
         NI    QPFLAG,255-HARDCPY    TURN OFF PRINT FLAG           FCI*
         MVC   QDTLINE+L'QDTLINE-L'PRTSTP-1(L'PRTSTP),PRTSTP       FCI*
         B     GOTMSG                                              FCI*
PRTSTP   DC    C'PRINT STOPPED; SYSOUT FREED FOR PRINT'            FCI*
         EJECT ,                                                   FCI*
***********************************************************************
*                                                                  FCI*
*   PARSE PRINT COMMAND                                            FCI*
*                                                                  FCI*
***********************************************************************
PARSECMD LH    R2,QDRLNG      LENGTH OF REPLY LINE                 FCI*
         OC    QDREPLY,QBLANK TRANSLATE TO UPPER CASE              FCI*
         CLC   QDREPLY,QBLANK IS THE ENTIRE REPLY BLANK?           FCI*
         BER   R7             YES. NOTHING TO PARSE..RETURN        FCI*
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD                 FCI*
         MVC   OFFSET(4),=F'0' ZERO THE OFFSET AND LENGTH          FCI*
         MVC   QPOFF0(12),OFFSET INITIALIZE FIRST FIELD            FCI*
         MVC   QPOFF1(48),QPOFF0 INITIALIZE NEXT FOUR FIELDS       FCI*
         LA    R6,QPOFF4+12   ADDR PAST LAST FIELD                 FCI*
         LA    R5,QPOFF0      ADDR OF FIRST SET OF FIELDS          FCI*
         LA    R3,QDREPLY     FIRST BYTE OF REPLY LINE             FCI*
ENCORE   LA    R4,FIELD       FIRST BYTE OF WORK FIELD             FCI*
BLANK    CLI   0(R3),C' '     IS THIS BYTE BLANK?                  FCI*
         BNE   FIRST          NO. START OF FIELD.                  FCI*
         LA    R3,1(R3)       YES. SKIP IT.                        FCI*
         BCT   R2,BLANK       TRY NEXT BYTE                        FCI*
         B     EMPTY          END OF REPLY LINE.                   FCI*
FIRST    LH    R1,QDRLNG      REPLY LENGTH                         FCI*
         SR    R1,R2          COMPUTE OFFSET TO START OF FIELD     FCI*
         STH   R1,OFFSET      STORE OFFSET                         FCI*
         LR    R1,R2          SAVE COUNT OF REMAINING BYTES        FCI*
         B     CHAR           CONTINUE                             FCI*
LOOP     CLI   0(R3),C' '     IS THIS BYTE BLANK?                  FCI*
         BE    LAST           YES. END OF FIELD.                   FCI*
CHAR     MVC   0(1,R4),0(R3)  MOVE BYTE TO SUBNAME                 FCI*
         LA    R3,1(R3)       INCREMENT                            FCI*
         LA    R4,1(R4)       INCREMENT                            FCI*
         BCT   R2,LOOP        TRY NEXT BYTE                        FCI*
LAST     SR    R1,R2          COMPUTE FIELD LENGTH                 FCI*
         CH    R1,=H'8'       IS LENGTH GREATER THAN 8?            FCI*
         BNH   STORE          NO. USE IT.                          FCI*
         LA    R1,8           YES. USE LENGTH OF EIGHT.            FCI*
STORE    STH   R1,LENGTH      STORE FIELD LENGTH                   FCI*
EMPTY    MVC   0(12,R5),OFFSET MOVE FIELD TO QCOMMON               FCI*
         LTR   R2,R2          IS THE REMAINING LENGTH ZERO?        FCI*
         BZR   R7             YES. FINITO OF PARSE..RETURN         FCI*
*                                                                  FCI*
         MVC   FIELD,QBLANK   BLANK THE WORK FIELD                 FCI*
         MVC   OFFSET(4),=F'0' ZERO OUT OFFSET AND LENGTH          FCI*
         LA    R5,12(R5)      INCREMENT TO NEXT FIELD              FCI*
         CR    R5,R6          WAS THAT THE LAST FIELD?             FCI*
         BL    ENCORE         NO. PROCESS NEXT FIELD.              FCI*
         EJECT ,                                                   FCI*
***********************************************************************
* GET DATE/TIME FOR HEADING   ENTER WITH BAL R7,GETTIME            FCI*
* RETURNS WITH JDATE(LEN) = YY.DDD  HH:MM:SS DAY MTH DD,19YY       FCI*
*                           123456789.123456789.123456789.123      FCI*
*                                                                  FCI*
***********************************************************************
GETTIME  TIME  DEC                                                 FCI*
         ST    R1,DATE                 SAVE DATE FOR LATER         FCI*
***FORMAT THE PRESENT TIME (AS SET BY THE OPERATOR)                FCI*
         ST    R0,DBLWORK              CNVT PACKED TO DEC          FCI*
         MVC   MONMSK(MVCLEN),XMONMSK  MOVE IN AND INITIALIZE TABLE/DAT
         MVI   DBLWORK+4,X'0F'                                     FCI*
         UNPK  WORKWORD(9),DBLWORK(5)                              FCI*
         MVC   TIMEHRS,WORKWORD        MOVE TIME TO MSG            FCI*
         MVC   TIMMINS,WORKWORD+2                                  FCI*
         MVC   TIMSECS,WORKWORD+4                                  FCI*
***FORMAT TODAY'S DATE INTO THE OUTPUT MSG                         FCI*
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.     FCI*
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                FCI*
         XC    DBLWORK,DBLWORK                                     FCI*
         MVC   DBLWORK+4(4),WORKWORD   CNVT YEAR TO BIN            FCI*
         CVB   R0,DBLWORK                                          FCI*
         ST    R0,BINYEAR              AND SAVE                    FCI*
         TM    BINYEAR+3,X'03'         LEAP YEAR?                  FCI*
         BNZ   MON1                    NO.                         FCI*
         MVI   MONMSK+10,29            YES, CORRECT                FCI*
MON1     XC    DBLWORK,DBLWORK         CNVT DAYS TO BIN            FCI*
         MVC   DBLWORK+6(2),DATE+2                                 FCI*
         CVB   R2,DBLWORK                                          FCI*
         ST    R2,BINDAYS              SAVE FOR LATER              FCI*
         XR    R1,R1                                               FCI*
         LA    R15,11                                              FCI*
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY           FCI*
         SR    R2,R1                                               FCI*
         BNP   MONOVR                                              FCI*
         BCT   R15,MON2                                            FCI*
         B     *+6                                                 FCI*
MONOVR   AR    R2,R1                   CORRECT OVERDRAW            FCI*
         CVD   R2,DBLWORK              FORMAT DAY                  FCI*
         UNPK  CDAYN(2),DBLWORK+6(2)                               FCI*
         OI    CDAYN+1,X'F0'           FIX UP SIGN                 FCI*
         MH    R15,=H'3'               GET TABLE OFFSET            FCI*
         LA    R15,MONTAB(R15)         AND POINT AT MONTH          FCI*
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG          FCI*
         EJECT ,                                                   FCI*
***DAY OF WEEK                                                     FCI*
         L     R15,BINYEAR                                         FCI*
         SH    R15,=H'69'                                          FCI*
         BNP   OUTT                    MUST BE GREATER OR BAD      FCI*
         XR    R14,R14                 CLEAR DAY REG               FCI*
         D     R14,=F'4'                                           FCI*
         MH    R15,=H'5'                                           FCI*
         AR    R14,R15                                             FCI*
         A     R14,BINDAYS                                         FCI*
         SRDA  R14,32                                              FCI*
         D     R14,=F'7'               MODULO 7 FOR WEEK           FCI*
         MH    R14,=H'3'                                           FCI*
         LA    R14,DAYTAB(R14)         POINT AT TODAY              FCI*
         MVC   CDAY(3),0(R14)          INSERT IN MSG               FCI*
***                                                                FCI*
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                       FCI*
         ED    JDATE-1(7),DATE+1                                   FCI*
*                                                                  FCI*
DATERTN  BR    R7                      RETURN TO MAINLINE          FCI*
*                                                                  FCI*
OUTT     MVC   CDAY(3),=CL3'???'                                   FCI*
         B     MOVEJD                                              FCI*
         SPACE 2                                                   FCI*
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES       FCI*
*                                                                  FCI*
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)  L         FCI*
         DC    C' XX.XXX',C'  '                          E  F      FCI*
         DC    CL2' ',C':'                               A  I  T   FCI*
         DC    CL2' ',C':'                               V  E  O   FCI*
         DC    CL2' ',C' '                               E  L  G   FCI*
         DC    CL3' ',C' '                                  D  E   FCI*
         DC    CL3' ',C' '                                  S  T   FCI*
         DC    CL2' ',C',19'                                   H   FCI*
         DC    CL2'  ',C' '                                    E   FCI*
*                                                              R   FCI*
***********************************************************************
MVCLEN   EQU   *-XMONMSK                                           FCI*
*                                                                  FCI*
***********************************************************************
DAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                            FCI*
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'             FCI*
         EJECT ,                                                   FCI*
***********************************************************************
* ALLOC HARDCOPY TO HASPPRNT DDNAME                                FCI*
*                                                                  FCI*
***********************************************************************
ALLOCHC  MVC   DYNALLOC(S99LENG),S99RBPTR COPY DYN ALLOCATION LIST.
         LA    R1,P99RB           RELOCATE THE LIST ADDRESSES.     FCI*
         STCM  R1,B'0111',P99RBPTR+1  *                            FCI*
         LA    R1,P99TUPL             *                            FCI*
         ST    R1,P99TXTPP            *                            FCI*
         LA    R1,P99TUKY1            *                            FCI*
         STCM  R1,B'0111',P99TUPL+1   *                            FCI*
         LA    R1,P99TUKY2            *                            FCI*
         STCM  R1,B'0111',P99TUPL+5   *                            FCI*
         LA    R1,P99TUKY3            *                            FCI*
         STCM  R1,B'0111',P99UPLL+1   *                            FCI*
*  PROCESS PARMS..........                                         FCI*
         LH    R1,QPLNG2        GET LENGTH OF SECOND PARM          FCI*
         CH    R1,=H'1'         LENGTH OF ONE?                     FCI*
         BNE   NOCLSCHG         NO..NO CHANGE OF SYSOUT CLASS      FCI*
         CLI   QPPARM2,C'A'     IS IT ALPHA                        FCI*
         BL    NOCLSCHG                                            FCI*
         MVC   P99SYSOC,QPPARM2 MOVE IN PARM FOR SYSOUT CLASS      FCI*
NOCLSCHG CLI   QPPARM3,C' '     ANY DEST SPECIFIED                 FCI*
         BE    NODEST                                              FCI*
         MVC   P99DEST,QPPARM3  MOVE IN DEST                       FCI*
         MVC   P99DESTL,QPLNG3  MOVE IN LENGTH                     FCI*
         MVI   P99EPARM,X'00'   SAY CLASS IS NOT LAST PARM         FCI*
*  DO THE ALLOCATE                                                 FCI*
NODEST   LA    1,DYNALLOC         ADDR OF PARM LIST FOR DYNALLOC.  FCI*
         DYNALLOC                                                  FCI*
         LTR   R15,R15            CHK RETURN CODE                  FCI*
         BNZ   CANTALLC           NO CAN DO..POST MESSAGE          FCI*
         LA    R6,HASPPRNT        ADDRESS OF OUTPUT DCB.           FCI*
         USING IHADCB,R6          ADDRESSABILITY TO OUTPUT DCB.    FCI*
         LA    R1,DBLWORK         BUILD                            FCI*
         MVI   0(R1),X'80'          ONLY ENTRY IN LIST             FCI*
         OPEN  ((6),(OUTPUT)),MF=(E,(1))  OPEN THE FILE            FCI*
         TM    DCBOFLGS,X'10'     CHECK FOR SUCCESSFUL OPEN.       FCI*
         DROP  R6                 ELIMINATE DCB ADDRESSABILITY.    FCI*
         BZ    PRNTBAD            BYPASS SWITCH SETTING IF BAD OPEN.
         OI    QPFLAG,HARDCPY     INDICATE HARDCPY FILE AVAILABLE. FCI*
         MVC   QDTLINE(L'MSGSTART),MSGSTART  MOVE IN START MSG     FCI*
         MVC   M1CLASS,P99SYSOC   MOVE IN SYSOUT CLASS             FCI*
         MVC   M1DEST,P99DEST                                      FCI*
         CLI   M1DEST,C' '        ANY DEST?                        FCI*
         BNE   PRNTOKAY                                            FCI*
         MVC   M1DEST,=CL8'LOCAL' SAY LOCAL                        FCI*
         B     PRNTOKAY           BYPASS TPUT ERROR MSG.           FCI*
         EJECT ,                                                   FCI*
PRNTBAD  QTILT 'SORRY...UNABLE TO ALLOC/OPEN HASPPRNT FOR HARDCOPY'
PRNTOKAY BR    R7                 RETURN                           FCI*
         SPACE 2                                                   FCI*
MSGSTART DC    CL63'PRINT STARTED; SYSOUT=X,DEST=XXXXXXXX'         FCI*
         EJECT ,                                                   FCI*
***********************************************************************
*        FORMULATE TEXT FOR SVC99 ALLOCATE FAILURE                 FCI*
***********************************************************************
         SPACE 3                                                   FCI*
CANTALLC MVC   QDTLINE,QBLANK     CLEAR OUT LINE                   FCI*
         CLC   P99ERROR,=X'046C'  WAS IT 'RMT NOT DEF TO JES2'?    FCI*
         BE    BADRMT             YES..POST MSG AND EXIT           FCI*
*                                                                  FCI*
         MVC   QDTLINE(L'MSGERR),MSGERR                            FCI*
         CVD   R15,DBLWORK        CONVERT SVC 99 RETURN CODE       FCI*
         MVC   M2RC,=X'40202020'   TO NICE PRINTABLE DECIMAL       FCI*
         ED    M2RC,DBLWORK+6                                      FCI*
*                                                                  FCI*
         UNPK  M2ERC(5),P99ERROR(3) CONVERT DYNAM ALLOC ERR CODE   FCI*
         NC    M2ERC,HEXMASK         TO PRINTABLE HEXADECIMAL      FCI*
         TR    M2ERC,HEXTAB          AND FIX IT UP PRETTY          FCI*
         MVI   M2ERC+4,C' '                                        FCI*
*                                                                  FCI*
         UNPK  M2INFO(5),P99INFO(3) CONVERT DYNAM ALLOC INFO       FCI*
         NC    M2INFO,HEXMASK        CODE TO PRNTABLE HEX          FCI*
         TR    M2INFO,HEXTAB         AND FIX IT UP PRETTY          FCI*
         MVI   M2INFO+4,C' '                                       FCI*
         B     GOTMSG                   AND GO POST THE MESSAGE    FCI*
*                                                                  FCI*
BADRMT   MVC   QDTLINE(L'MSGNRMT),MSGNRMT  MOVE IN NO SUCH REMOTE MSG
         MVC   MREMOTE,QPPARM3         MOVE IN REMOTE ASKED FOR    FCI*
         B     GOTMSG                   AND GO POST THE MESSAGE    FCI*
         SPACE 2                                                   FCI*
HEXTAB   DC    C'0123456789ABCDEF'                                 FCI*
HEXMASK  DC    X'0F0F0F0F0F0F0F0F'                                 FCI*
MSGNRMT  DC    C'REMOTE XXXXXXXX NOT DEFINED TO JES2; PRINT BYPASSED'
MSGERR   DC    C'CANT ALLOC SYSOUT FOR PRINT; DARC= XXXX INFO= XXXX R15X
               = XXXX '                                            FCI*
***********************************************************************
         EJECT ,                                                   FCI*
         LTORG                                                     FCI*
         SPACE 2                                                   FCI*
         DS    0F                                                  FCI*
*                                          SVC 99 REQUEST BLOCK  PTR
S99RBPTR DC    X'80',AL3(S99RB)                                    FCI*
*                                          SVC 99 REQUEST BLOCK    FCI*
S99RB    DS    0F                                                  FCI*
S99RBLN  DC    AL1(20)                     LENGTH=20 BYTES         FCI*
S99VERB  DC    X'01'                       VERB CODE=01 (DSNAME ALLOC)
S99FLAG1 DC    X'1000'                     DONT USE EXISTING ALLOC FCI*
S99ERROR DC    AL2(0)                              ERROR CODE      FCI*
S99INFO  DC    AL2(0)                              INFO  CODE      FCI*
S99TXTPP DC    A(S99TUPL)                 POINTER TO TEXT UNIT POINTERS
S99RSVD1 DC    A(0)                          RESERVED              FCI*
S99FLAG2 DC    A(0)                          FLAGS 2               FCI*
S99TUPL  DC    A(S99TUKY1)                TEXT UNIT POINTERS       FCI*
S99EPARM DC    X'80',AL3(S99TUKY2)        LAST PARM IF NO DEST=    FCI*
         DC    X'80',AL3(S99TUKY3)        LAST PARM IF DEST= GIVEN FCI*
S99TUNIT DS    0F                                                  FCI*
*                                                  DDNAME=HASPPRNT FCI*
S99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPPRNT'                 FCI*
*                                                  SYSOUT=A        FCI*
S99TUKY2 DC    X'0018',X'0001',X'0001'                             FCI*
         AIF   (&QRNB).RNB10A                                     RNB10
S99SYSOC DC    C'A'                                                FCI*
         AGO   .RNB10B                                            RNB10
.RNB10A  ANOP                                                     RNB10
S99SYSOC DC    C'C'                                               RNB10
.RNB10B  ANOP                                                     RNB10
*                                      OPTIONAL    DEST=RMTXXX     FCI*
S99TUKY3 DC    X'0058',X'0001'                                     FCI*
S99DESTL DC    X'0000'   LENGTH OF DEST                            FCI*
S99DEST  DC    CL8' '  DEST PARAMETER                              FCI*
*                                                                  FCI*
         DS    0D                                                  FCI*
S99LENG  EQU   *-S99RBPTR              LENGTH OF WHOLE MAGILLA     FCI*
         EJECT ,                                                   FCI*
*.....................................................................*
*.       DYNAMIC ALLOCATION REQUEST BLOCK TO FREE DDNAME HASPPRNT    .*
*.....................................................................*
         SPACE 3                                                   FCI*
         DS    0F                  GET FULLWORD BOUNDARY           FCI*
F99PTR   DC    X'80',AL3(F99RB)    THE POINTER TO THE MESS..       FCI*
*                                                                  FCI*
F99RB    DC    FL1'20'            LENGTH OF RB IN BYTES = 20       FCI*
         DC    XL1'02'            VERB CODE=X'02'..FREE BY DDN     FCI*
         DC    AL2(0)             FLAGS1..NO OPTIONS               FCI*
F99RC    DC    XL2'0000'          ERROR CODE                       FCI*
F99INFO  DC    XL2'0000'          INFO CODE                        FCI*
         DC    AL4(F99TXPT)       ADDRESS OF TEXT UNITS            FCI*
         DC    XL4'00'            RESERVED                         FCI*
         DC    XL4'00'            FLAGS2                           FCI*
         SPACE 2                                                   FCI*
F99TXPT DC     AL4(F99TU1)        ADDR OF DSN TEXT UNIT            FCI*
         DC    X'80',AL3(F99TU2) ADDR OF UNALLOC TEXT TU(LAST)     FCI*
         SPACE 2                                                   FCI*
F99TU1   DC    X'0001',X'0001',FL2'8',C'HASPPRNT' DDNAME           FCI*
F99TU2   DC    X'0007',X'0000'        UNALLOC EVEN IF PERM ALLOC   FCI*
F99LEN   EQU   *-F99PTR           LENGTH OF FILEDS                 FCI*
         EJECT ,                                                   FCI*
***********************************************************************
WORK     DSECT                                                     FCI*
         DS    CL72                                                FCI*
OFFSET   DS    H                                                   FCI*
LENGTH   DS    H                                                   FCI*
FIELD    DS    CL8                                                 FCI*
RPASS    DS    CL8                                                 FCI*
DBLWORK  DC    D'0'                                                FCI*
BINYEAR  DC    F'0'                                                FCI*
BINDAYS  DC    F'0'                                                FCI*
DATE     DC    F'0'                                                FCI*
WORKWORD DC    2F'0'                                               FCI*
***********************************************************************
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES       FCI*
*                                                                  FCI*
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)            FCI*
         DC    CL1' '                                    L         FCI*
JDATE    DC    C'XX.XXX',C'  '                           E  F      FCI*
TIMEHRS  DC    CL2' ',C'.'                               A  I  T   FCI*
TIMMINS  DC    CL2' ',C'.'                               V  E  O   FCI*
TIMSECS  DC    CL2' ',C' '                               E  L  G   FCI*
CDAY     DC    CL3' ',C' '                                  D  E   FCI*
CMON     DC    CL3' ',C' '                                  S  T   FCI*
CDAYN    DC    CL2' ',C',19'                                   H   FCI*
CYR      DC    CL2'  ',C' '                                    E   FCI*
*                                                              R   FCI*
***********************************************************************
LEN      EQU   *-JDATE                                             FCI*
         SPACE 2                                                   FCI*
         DS    0F                                                  FCI*
DYNALLOC DS    (S99LENG)XL1                                        FCI*
         ORG   DYNALLOC                                            FCI*
*                                          SVC 99 REQUEST BLOCK  PTR
P99RBPTR DC    X'80',AL3(P99RB)                                    FCI*
*                                          SVC 99 REQUEST BLOCK    FCI*
P99RB    DS    0F                                                  FCI*
P99RBLN  DC    AL1(20)                     LENGTH=20 BYTES         FCI*
P99VERB  DC    X'01'                       VERB CODE=01 (DSNAME ALLOC)
P99FLAG1 DC    X'1000'                     DONT USE EXISTING ALLOC FCI*
P99ERROR DC    AL2(0)                              ERROR CODE      FCI*
P99INFO  DC    AL2(0)                              INFO  CODE      FCI*
P99TXTPP DC    A(P99TUPL)                 POINTER TO TEXT UNIT POINTERS
P99RSVD1 DC    A(0)                          RESERVED              FCI*
P99FLAG2 DC    A(0)                          FLAGS 2               FCI*
P99TUPL  DC    A(P99TUKY1)                TEXT UNIT POINTERS       FCI*
P99EPARM DC    X'80',AL3(P99TUKY2)        LAST PARM IF NO DEST=    FCI*
P99UPLL  DC    X'80',AL3(P99TUKY3)        LAST PARM IF DEST= GIVEN FCI*
P99TUNIT DS    0F                                                  FCI*
*                                                  DDNAME=HASPPRNT FCI*
P99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPPRNT'                 FCI*
*                                                  SYSOUT=A        FCI*
P99TUKY2 DC    X'0018',X'0001',X'0001'                             FCI*
P99SYSOC DC    C'A'                                                FCI*
*                                      OPTIONAL    DEST=RMTXXX     FCI*
P99TUKY3 DC    X'0058',X'0001'                                     FCI*
P99DESTL DC    X'0000'   LENGTH OF DEST                            FCI*
P99DEST  DC    CL8' '  DEST PARAMETER                              FCI*
*                                                                  FCI*
         ORG   DYNALLOC                                            FCI*
         DS    0F                  GET FULLWORD BOUNDARY           FCI*
FREEPTR  DC    X'80',AL3(FREERB)   THE POINTER TO THE MESS..       FCI*
*                                                                  FCI*
FREERB   DC    FL1'20'            LENGTH OF RB IN BYTES = 20       FCI*
         DC    XL1'02'            VERB CODE=X'02'..FREE BY DDN     FCI*
         DC    AL2(0)             FLAGS1..NO OPTIONS               FCI*
FREERC   DC    XL2'0000'          ERROR CODE                       FCI*
FREEINFO DC    XL2'0000'          INFO CODE                        FCI*
FREETPTR DC    AL4(FREETXPT)      ADDRESS OF TEXT UNITS            FCI*
         DC    XL4'00'            RESERVED                         FCI*
         DC    XL4'00'            FLAGS2                           FCI*
         SPACE 2                                                   FCI*
FREETXPT DC    AL4(FREETU1)       ADDR OF DSN TEXT UNIT            FCI*
         DC    X'80',AL3(FREETU2) ADDR OF UNALLOC TEXT TU(LAST)    FCI*
         SPACE 2                                                   FCI*
FREETU1  DC    X'0001',X'0001',FL2'8',C'HASPPRNT' DDNAME           FCI*
FREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM ALLOC   FCI*
         ORG   ,                                                   FCI*
*                                                                  FCI*
SYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         QCOMMON                                                   FCI*
         $HASPEQU
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
         SPACE 2                                                   FCI*
MREMOTE  EQU   QDTLINE+7,8                                         FCI*
M2ERC    EQU   QDTLINE+35,4                                        FCI*
M2INFO   EQU   QDTLINE+46,4                                        FCI*
M2RC     EQU   QDTLINE+56,4                                        FCI*
M1CLASS  EQU   QDTLINE+22,1                                        FCI*
M1DEST   EQU   QDTLINE+29,8                                        FCI*
         EJECT ,                                                   FCI*
PRINT    CSECT                                                     FCI*
         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01
         DCBD  DSORG=(PS)                                          FCI*
         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01
SYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023
         END  ,                                                    FCI*
