         MACRO
&NAME    LINEEND  &GEN=
         TITLE '&NAME     LINE END APPENDAGE'
&NAME    CSECT
.*CHANGE ACTIVITY= AS FOLLOWS:                                   S21903
.*A104830-104950,107200-107330,312650                            S22027
.*A027410-027500,117820-118160,155420-155520,189010-189160       S99228
.*A199020-199140,297410-297580,298400-299400,334840-334960       S99228
.*A411810,411900                                                 S99228
.*C127600-128000                                                 S99228
.*C330000-330400,429800-429980,700000-702160,719400-719580       S99228
.*A302610-302700,351620-351740,489610-489700,291210-591320       S22029
.*C411300,657400,683800-684600                                   S22029
.*A052650-052750,058610-058720,073230-073350                     S22028
.*A481000                                                        A42376
.*C030400,461600,481600-482600,484600                            A42376
.*A589000                                                         M6293
.*C030400                                                         M6293
.*A057800,164600,167800,250600,260800,275400,280000,280900       S21101
.*A350600,393800,505600,549200,653000,657400                     S21101
.*C030400,106800,129600-134400,141400-141600,151400              S21101
.*C162600-162800,166200-166400,184600-184800,204200,204800       S21101
.*C205200-205600,218800,238200-238800,288000,341600,355400       S21101
.*C368200-368600,398400-398800,399600,400400,432600              S21101
.*C489800-490200,490400-491400,492000,505400,508800              S21101
.*C524000-525000,529000-530200,603600,651200,653800-654600       S21101
.*C716600                                                        S21101
.*A040000,420600                                                  M5953
.*C030400,040000                                                  M5953
.*C030400,216400                                                SA51068
.*A310000,430000                                                SA44892
.*C030400,489800-501200,512600-517400                           SA44892
.*A283000,598400                                                SA44983
.*C599000-601600                                                SA44983
.*C030400,645200                                                SA44894
.*A238200,454200,581800,669200,671000,671400,671800,674400       S22025
.*A676200,685000,686000,689800,690600,691200                     S22025
.*C029200,055000-055200,129200-134800,242800-246000              S22025
.*C300800-301000,335000,412000,489600,490600-490620,490740       S22025
.*C492800,504800,580600-581000,584000,587200-587600              S22025
.*C589198-589266,594200,671800,672000,674200,685200              S22025
.*C719700-719750                                                 S22025
.*D037600,111400,118000,145200-147200,298400-298800              S22025
.*D357000-357200,411400,490810-490870,585800-586400              S22025
.*D598400-598800,670200-670400,674200                            S22025
.*A034800,207800,275200,297800,312600,315800,327600,330400       S22026
.*A336600,346000,347000,351400,352600,356800,452600,522400       S22026
.*A654800,692200,692400,700200                                   S22026
.*C357000-357200,522600-522800                                   S22026
.*D145200-147200,291000,656600                                   S22026
.*A446800                               MODIFIED 11/15/71        A42413
.*A022000,368200,369400,380400,719600                           SA48278
.*A593000                                                       SA49233
.*A369500,719630                                                SA51061
.*C368650                                                       SA51061
.*A448000                               MODIFIED 12/02/71        A42413
.*A448180                                                         M2561
.*C030400                                                         M2561
.*D447600,447800                                                  M2561
.*C663200,664000                                                SA51097
.*C104600                                                       SA51791
.*A366800                                                       SA52517
.*C466800,467800,468200,468600                                  SA54276
.*A469800                                                       SA55941
.*A086220,097620,168010,176007                                  SA48276
.*D168610-168710                                                SA48276
.*A228040                                                       SA50194
.*A022000,064000,119600                                         SA51090
.*C118200-118400,120400,702010                                  SA51090
.*D119000                                                       SA51090
.*A689040                                                       SA52946
.*C172600,173400,413400,414400,A414500                          SA54923
.*A000200,002000,616800,618400                                  SA56617
.*C000400,000410-000426,000600-000800,001000,615200-615400      SA56617
.*D002200-019600                                                SA56617
.*A038410                                                       SA56915
.*C384200                                                       SA57329
.*A049060-049120                                                 A56906
.*C049000                                                        A56906
.*A162000,692200,692400                                          S99244
.*C149400,22220                                                  S99244
.*C466800,467800,468200,468600                                  SA54276
.*A469950,477000,477600                                         SA57685
.*C477000                                                       SA57685
.*C228040                                                       SA58997
.*D591203-591206,591230                                         SA59020
.*D521800-522400,523000,705400                                   S21903
.*A547600                                                       SA57695
.*C470000,547800,552200                                         SA57695
.*D552600-555000                                                SA57695
.*A469950                                                       SA59538
.*C466000                                                       SA59538
.*C062600                                                       SA59027
.*C061000,086300-086301,097680,301800,335200,411775-411795      SA59028
.*C411806-411810,451400,719560                                  SA59028
.*A125400                                                       SA59992
.*A117800                                                       SA61780
.*D121400                                                       SA61780
.*A199080                                                       SA62341
.*A311800                                                       SA61094
.*C046000                                                       SA62408
.*D432926                                                       SA62383
.*A608400                                                       SA62329
.*C609200,609800-610000                                         SA62329
.*451480                                                        SA62984
.*A172400                                                       SA61779
.*C058710                                                       SA61779
.*A411830                                                       SA63959
.*D411809-411812                                                SA63959
.*A036200                                                       SA65392
.*A398610,720091                                                SA62991
.*D 300600                                                      SA61794
.*C 301200-301900                                               SA61794
.*A049000                                                       SA64676
.*A634800,643000                                                SA65359
.*C618470-618480                                                SA65359
.*A701740,701800                                                SA65374
.*A471600,472000                                                SA65357
.*A700010,700900                                                SA65397
.*A613000                                                       OX02181
.*D613800                                                       OX02181
* A580200                                                       SA66604
* C301350-301920                                                SA66604
* C329780                                                       SA66598
* A700340                                                       SA65428
* D700370                                                       SA65428
* A432799                                                       SA65874
* A700880                                                       SA66946
* A330020,330146,348000                                         SA66632
* A577800                                                       SA65865
* D577000-577200                                                SA65865
* A376000                                                       SA65387
* D376800                                                       SA65387
* A115200                                                       SA66616
* A035200                                                       SA65906
* D689001-689002                                                SA66937
*D686100,686150                                                 SA62379
*C057800,111200-112400                                          SA67139
*A110600                                                        SA67139
.*C569600-569800                                                SA65389
.*C398510                                                       SA66594
.*A411720                                                       SA63595
.*D411760-411765                                                SA63595
* A70157                                                        OX03941
* A701057                                                       OX03941
* A056200                                                       OX03963
* A101600                                                       OY00507
* A054021,054189                                                OY03460
* D053800-054000                                                OY03460
* C330480-330500                                                SA68026
* A236600,297000,428600                                         SA68035
* A168600                                                       SA69087
* D172500                                                       SA69087
* A301290                                                       SA64386
.*
.*
.*
.*
.*
.*
         SPACE 3
* A552300                                                       SA69964
* A204000                                                       SA69968
*C113400                                                        SA70316
*C484720                                                        SA70874
***********************************************************************
*TITLE -- LINE END APPENDAGE                                          *
*                                                                     *
         AIF   ('&GEN' NE 'MINI').TAG1
*       MODULE NAME = IGG019Q4 (MINI)                                 *
         AGO   .TAG5
.TAG1    AIF   ('&GEN' NE 'STSP').TAG2
*       MODULE NAME = IGG019Q3 (START/STOP)                           *
         AGO   .TAG5
.TAG2    AIF   ('&GEN' NE 'BISC').TAG3
*       MODULE NAME = IGG019Q2 (BI-SYNC)                              *
         AGO   .TAG5
.TAG3    AIF   ('&GEN' NE 'QTAM').TAG4
*       MODULE NAME = IGG019Q5 (QTAM)                                 *
         AGO   .TAG5
.TAG4    AIF   ('&GEN' NE '').TAG5
*       MODULE NAME = IGG019R0 (BOTH)(BLANK)                          *
.TAG5    ANOP
*                                                                     *
*       DESCRIPTIVE NAME = LINE END APPENDAGE                         *
*                                                                     *
*       COPYRIGHT = 'NONE'                                            *
*                                                                     *
*       STATUS: CHANGE LEVEL 5                                        *
*                                                                     *
*FUNCTION -- AS A LOGICAL EXTENSION OF IOS LINE END APPENDAGE OBTAINS *
*   CONTROL WHEN AN I/O INTERRUPT OCCURS WITH ENDING STATUS, WHEN AN  *
*   ERROR IS DETERMINED TO BE PERMANENT BY ERP, OR WHEN AN ERROR IS   *
*   CLEARED BY ERP.                                                   *
*                                                                     *
*ENTRY POINTS -- FIRST EXECUTABLE INSTRUCTION                         *
*                                                                     *
*INPUT -- R2  IOB ADDRESS                                             *
*   R14 RETURN ADDRESS                                                *
*   R15 ENTRY POINT ADDRESS                                           *
*                                                                     *
*OUTPUT -- REGISTERS 0-9,14,15 REMAIN TRANSPARENT TO IOS UPON EXIT    *
*   FROM THIS MODULE                                                  *
*                                                                     *
*EXTERNAL ROUTINES --                                                 *
*   OS POST - TO POST MCP WAIT COMPLETE                               *
*                                                                     *
*   STAGE TWO OF EXIT EFFECTOR - TO SCHEDULE IQE                      *
*                                                                     *
*                                                                     *
*   'TCB REMOVAL ROUTINE' - TO MAKE MCP TCB NON-DISPATCHABLE FOR MP   *
*   65 ONLY.                                                          *
*                                                                     *
*   'IEDQKA02' - I/O GENERATOR SUBROUTINE TO BUILD CONTINUE CHANNEL   *
*   PROGRAMS.                                                         *
*                                                                     *
*   'IEDQTNT' - TO OBTAIN TERMINAL TABLE ENTRY ADDRESS FROM TNT OFFSET*
*                                                                     *
*EXITS-NORMAL --                                                      *
*   B  4(14) - TO SKIP POST AND FREE REQUEST ELEMENT                  *
*   B  8(14) - TO RESTART A CHANNEL PROGRAM                           *
*                                                                     *
*EXITS-ERROR --                                                       *
*   BR  14 TO SCHEDULE ERP UPON 1ST DETECTION OF ERROR                *
*                                                                     *
*TABLES/WORK AREAS -- DSECTS OF CONTROL BLOCKS GENERATED BY MACROS:   *
*   TAVTD                                                             *
*   TLCBD                                                             *
*   TQCBD                                                             *
*   TTRMD                                                             *
*   TTSID                                                             *
*   TCCWD                                                             *
*   TSCBD                                                             *
*   TPRFD                                                             *
*   DCBD                                                              *
*   TRECBD                                                            *
*   TTNTD                                                             *
*   TDEBD                                                             *
*                                                                     *
*ATTRIBUTES -- REFRESHABLE, SUPERVISOR MODE, DISABLED                 *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICUALR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER      *
*   SET.                                                              *
*                                                                     *
*   IF A PERMANENT ERROR HAS NOT OCCURRED, ENDING STATUS IS EXAMINED  *
*   TO DETERMINE IF ERP IS TO BE SCHEDULED.  UNUSUAL ENDING STATUS    *
*   RESULTS IN A RETURN TO IOS TO SCHEDULE THE FIRST LOA: OF ERP FOR  *
*   THIS DEVICE.                                                      *
*                                                                     *
*   WHEN ERP ACTION IS NOT REQUIRED, LINE END APPENDAGE OBTAINS THE   *
*   TP OP CODE FOR THE FAILING CCW BY USING THE ADDRESS IN THE CSW AS *
*   AN INDEX ARGUMENT INTO A LIST OF TP OP CODES (LCBTPCD).  THE TP   *
*   OP CODE IS USED AS AN INDEX INTO A BRANCH TABLE, TO TAKE          *
*   SPECIFIC ACTION FOR THIS INTERRUPT.  TWO TABLES ARE EMPLOYED.     *
*   ONE IS FOR NORMAL ENDING STATUS.  THE OTHER FOR ERROR CONDTIONS   *
*   DETTECTED BY ERP.                                                 *
*                                                                     *
*   FOR ERRORS THAT HAVE OCCURRED PRIOR TO TEXT TRANSFER, A ZERO      *
*   LENGTH BUFFER IS POSTED TO MH FOR INMSG/OUTMSG PROCESSING.        *
*                                                                     *
*   IF AN EOB INTERRUPT OCCURS WHILE RECEIVING A MESSAGE, A RESTART   *
*   IS MADE FROM THE APPENDAGE UNLESS MH PROCESSING IS REQUIRED.      *
*   WHEN EOT IS RECEIVED, THE FILLED BUFFER(S) ARE POSTED TO MH       *
*   INDICATING THAT THIS IS END OF MESSAGE.  FOR AN EOB INTERRUPT ON  *
*   OUTPUT, PREVIOUS BUFFERS ARE POSTED TO THE BUFFER RETURN QCB AND  *
*   A RESTART IS ACCOMPLISHED.  THE LAST BUFFER  OF A SUCCESSFULLY    *
*   SENT MESSAGE IS POSTED TO BUFFER DISPOSITION FOR OUTMSG EXITS.    *
*                                                                     *
*   IN THE EVENT OF A TEXT MODE ERROR, THE ABOVE ACTION IS TAKEN      *
*   EXCEPT THAT THE BUFFER REFLECTING THE INTERRUPT IS POSTED TO MH   *
*   TO OBSERVE USER SELECTED OPTIONS.                                 *
*                                                                     *
*   THE 'SCAN' ROUTINE IS ENTERED FROM PCI APPENDAGE AS WELL AS FROM  *
*   LINE END APPENDAGE.  ITS ADDRESS IS ALWAYS AT AN OFFSET OF 4 INTO *
*   THIS MODULE.  OPEN MOVES THIS ADDRESS INTO THE AVT FOR ACCESS BY  *
*   PCI APPENDAGE.                                                    *
***********************************************************************
         EJECT
         USING IEDQPRF,RPREFIX
         USING IEDQLCB,RLCB
         USING IEDQCCW,RCCW
         USING IEDQAVTD,RAVT
         USING IEDQSCB,RSCB
         USING IEDQLCBX,RE                                       S99228
         USING *,R15,RBASE
*
*        REGISTER EQUATES
*
R0       EQU   0
RTST     EQU   1                        TWELVE STAR REGISTER    SA51090
R1       EQU   1 .                     GENERAL REGISTER         SA48278
RLCB     EQU   2                        LCB BASE
RWKA     EQU   3
RBASE    EQU   4
RF       EQU   5                        WORK REGISGER
RPREFIX  EQU   6
RA       EQU   7                        WORK REGISTER
RB       EQU   8                        WORK REGISTER
RC       EQU   9                        WORK REGISTER
RD       EQU   10                       WORK REGISTER
RDCB     EQU   10
RE       EQU   11                       WORK REGISTER
R11      EQU   11
RCCW     EQU   12                       CCW BASE
RAVT     EQU   13                       AVT BASE
RSCB     EQU   14                       SCB BASE
R14      EQU   14
R15      EQU   15
         EJECT
         B     ID
         AIF   ('&GEN' EQ 'MINI').L6
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ '').LL41           S99228
SCANAD   DC    A(0)                     DUMMY SCAN ROUTINE ADCON S99228
*                                       TO PRESERVE DISPLACEMENTSS99228
*                                       OF LOOKAD AND SORCEAD FORS99228
*                                       START-STOP               S99228
         AGO   .LL42                                             S99228
.LL41    ANOP                                                    S99228
* * * * * * * * * * * * * * * * * * * * * *  * * *  * * * * * * * * * *
* * *    SCANAD MUST ALWAYS BE AT AN OFFSET OF FOUR IN TO THIS    * * *
* * *    APPENDAGE.                                               * * *
* * * * * * * * * * * * * * * * * * * * * *  * * *  * * * * * * * * * *
SCANAD   DC    A(SCAN)                  SCAN FOR BSC READ TEXT
* * * * * * * * * * * * * * * * * * * * * *  * * *  * * * * * * * * * *
*                                                                S99228
*                                                                S99228
* LOOKAD AND SORCEAD MUST BE AT OFFSET EIGHT AND TWELVE          S99228
* RESPECTIVELY                                                   S99228
*                                                                S99228
.LL42    ANOP                                                    S99228
LOOKAD   DC    A(LOOKER)                ADDR DVCCSTCS LOC RTN    S99228
SORCEAD  DC    A(SOURCER)               ADDR GENPOLL SRC DET RTN S99228
FNDQCBAD DC    A(FINDQCB) .             FIND DEST QCB ROUTINE    S22029
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'QTAM').L6         S99228
FINDAD   DC    A(FINDER)                ADDR INVLIST ENT LOC RTN S99228
*                                                                S99228
*                                                                S99228
BSCRSPAD DC    A(BSCRSP)                BSC READ RESPONSE TO TEXT
CHACKAD  DC    A(CHACK)                 CHECK RESPONSE -BSC
BSC27AD  DC    A(BSC270X)               CSW ADJUST BSC WRITES TEXT
.L6      AIF   ('&GEN' EQ 'MINI').L701
IDCHKAD  DC    A(IDCHK)                 ID CHECK ROUTINE
         AIF   ('&GEN' EQ 'BISC').L7
         AIF   ('&GEN' EQ 'QTAM').CA
DYNCAD   DC    A(DYNC) .                                         TSO
.CA      ANOP                                                    S22025
TSOCHKAD DC    A(TSOCHK)
OPCHKAD  DC    A(OPCHK1)
.L7      ANOP
POLLAD   DC    A(POLLRT)               AUTOPOLL ROUTINE
.L701    ANOP
&NAME    IEDHJN , .                     MODULE ID AND DATE       S22025
ID       DS    0H
         L     RCCW,CVTLOC              CVT POINTER
         L     RAVT,AVTCVTPT(,RCCW)     GET ADDRESS OF LOAD LIST
         L     RAVT,AVTEZERO(,RAVT)     AVT BASE
         STM   0,9,AVTSAVEX             SAVE REGISTERS
         ST    R14,AVTDPARM             SAVE RETURN REGISTER
         L     RCCW,AVTCVTMP(,RCCW)     GET MP 65 CVT ADDRESS
         LTR   RCCW,RCCW                IS THIS A 65
         BZ    NOTMP65                  BRANCH IF NO
         LR    R0,R15                   SAVE BASE RESIGER
         L     R15,AVTMPTRR(RCCW)       GET MP65 TCB REMOVAL MODULE
         L     RB,AVTTCB                GET TCB ADDRESS
         USING IEDQTCB,RB
         OI    TCBNDSP1,TCBTPSP         MAKE IT NON-DISPATCHABLE
         OI    TCBFLGS+4,TCBPNDSP
         DROP  RB
         BALR  R14,R15                  LINK TO REMOVAL ROUTINE
         LR    R15,R0                   RESTORE BASE
NOTMP65  EQU   *
         LA    RBASE,4095(R15)
         LA    RBASE,1(RBASE)
         SH    RLCB,LCBSIZE             BACK UPNTO START OF LCB
         L     RSCB,LCBSCBA-1           SCB BASE
         AIF   ('&GEN' EQ 'MINI').CONC1                          S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCA .               BRANCH IF NO             S22026
         L     RSCB,LCBSCBDA-1 .        GET FIRST SCB            S22026
         OI    SCBQTYPE,SCBCONC .       SET TEMP CONC FLAG       S22026
NOTCONCA EQU   * .                                               S22026
.CONC1   ANOP                                                    S22026
         MVI   LCBCSW+5,0               CLEAR FIRST BYTE OF CSW
*                                         INVALID ON PROG CHECK
         TM    LCBFLAG3,LCBSOHR         SOH % R MESSAGE         SA65906
         BO    NOTRACE                  BR YES, RETURN FROM ERP SA65906
*                                         INT ALREADY TRACED    SA65906
         L     12,AVTIOT               SET TRACE BASE
         LTR   12,12                    TRACE RTN (IGG019Q0) ACTIVE?
         BZ    NOTRACE                  NO. BYPASS TRACE.
         BALR  11,12                   LINK TO IT
NOTRACE  EQU   *
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR         SA65392
         BE    NOTHRESH                 BR YES, DO NOT UPDATE   SA65392
*                                         THRESHHOLD COUNTERS   SA65392
         USING DEBTCBAD,RWKA            DEB ADDRESSIBILITY      SA65392
         SR    RCCW,RCCW                CLEAR WORK              SA65392
         LR    RF,RCCW                  REGISTERS               SA65392
         IC    RCCW,DEBNMEXT            GET NUMBER EXTENTS      SA65392
         SLL   RCCW,TWO                 SIZE OF UCB ADDRESSES   SA65392
         L     RCCW,DEBUCBAD(RCCW)      THRESHHOLD AREA         SA65392
         IC    RF,LCBUCBX               RLN MINUS ONE           SA65392
         SLL   RF,TWO                   THRESHHOLD INDEX        SA65392
         AR    RCCW,RF                  THRESHHOLD COUNTERS     SA65392
         CLC   ZERO(ONE,RCCW),AVTHRESH  TRANSMISSIONS REACHED   SA65392
         BNL   INIT                     BR YES, INITIALIZE      SA65392
         IC    RF,ZERO(RCCW)            INCREMENT               SA65392
         LA    RF,ONE(RF)               THRESHHOLD              SA65392
         STC   RF,ZERO(RCCW)            COUNTER                 SA65392
         B     NOTHRESH                 AND CONTINUE            SA65392
INIT     EQU   *                                                SA65392
         MVC   ZERO(FOUR,RCCW),AVTFZERO INITIALIZE COUNTERS     SA65392
         MVI   ZERO(RCCW),ONE           INITIALIZE TRANS CNT    SA65392
NOTHRESH EQU   *                                                SA65392
TSO2     EQU   *                                                    TSO
          L     RCCW,LCBCSW-1            FAILING CCW+8
         LA    RCCW,AVTEZERO(,RCCW)     CLEAR HI ORDER BYTE
         SH    RCCW,H8                  BACK UP TO INTRPT CCW
         AIF   ('&GEN' EQ 'MINI').L8A
         AIF   ('&GEN' EQ 'BISC').L8A
* PLEASE NOTE THAT THE FOLLOWING CODE TO SET AND RESET LCBCIRCD WILL
* WORK FOR A 1050 ONLY SO LONG AS THE RESPONSE TO POLL OR ADDRESSING
* GENERATES AN INTERRUPT. THE BIT IS USED TO DETERMINE WHETHER OR NOT
* A WRITE BREAK COMMAND WILL BE EXECUTED AFTER A HALT I/O.
         L     RWKA,LCBSTART-1          ADDRESS OF START CCW        TSO
         LA    RWKA,0(RWKA)             CLEAR HIGH ORDER BYTE       TSO
         LA    RF,LCBCPA-1              IS CCW IN CH PGM AREA   SA56915
         CR    RWKA,RF                  COMPARE ADDRESS         SA56915
         BNH   NOT2741                  BR IF RESTART OCCURED   SA56915
         SR    RF,RF                    CLEAR FOR INSERT CHAR   SA56915
         L     RA,LCBDCBPT              POINT TO DCB            SA56915
         USING IHADCB,RA                ADDRESSABILITY          SA56915
         IC    RF,DCBEIOBX              SIZE OF LCB             SA56915
         DROP  RA                       ELIMINATE DCB REG       SA56915
         LA    RF,0(RLCB,RF)            POINT TO END OF LCB     SA56915
         CR    RWKA,RF                  CCW IN LCB ?            SA56915
         BH    NOT2741                  BRANCH NO               SA56915
         CLI   0(RWKA),CCWWRITE         WAS START CCW A WRITE       TSO
         BNE   NOT2741                  BRANCH ON NO                TSO
         CR    RCCW,RWKA                IS FIRST CCW THE            TSO
*                                       INTERRUPT CCW               TSO
         BNE   NOTINT                   BRANCH ON NO                TSO
         SR    R0,R0                    CLEAR REGISTER              TSO
         CH    R0,LCBCSW+5              IS RESIDUAL COUNT ZERO      TSO
         BE    NOTINT                   BRANCH IF SO              M5953
         CLI   4(RWKA),X20              IS THIS RESPONSE OWED CCW M5953
         BNE   NOT2741                  IF NOT, CONTINUE          M5953
         OI    LCBTSOB,LCBCIRCD         INDICATE IN TEXT MODE     M5953
         OI    LCBSTAT2,LCBRESP         INDICATE RESPONSE OWED    M5953
         B     NOT2741                  BRANCH TO CONTINUE        M5953
NOTINT   EQU   *                                                    TSO
         L     RWKA,0(RWKA)             DATA ADDRESS FROM CCW       TSO
         CLI   0(RWKA),CIRCD            WAS FIRST CHAR A CIRCLE-D   TSO
         BNE   NOTCIRCD                 BRANCH ON NO                TSO
         OI    LCBTSOB,LCBCIRCD         INDICATE CIRCLE-D SENT      TSO
         B     NOT2741                                              TSO
NOTCIRCD EQU   *                                                    TSO
         CLI   0(RWKA),CIRCC            WAS FIRST CHAR CIRCLE-C     TSO
         BNE   NOT2741                  BRANCH ON NO                TSO
         NI    LCBTSOB,X'FF'-LCBCIRCD   INDICATE CIRCLE-C SENT      TSO
NOT2741  EQU   *                                                    TSO
         CLI   LCBTPCD+11,X'AC'         OPEN LINE CHECK?            TSO
         BE    OPCHK                    YES. GO PUT UP PREPARE      TOS
.L8A     ANOP
         CLI   LCBECBCC,X48 .           HIO INTERRUPT               TSO
         BNE   TSO8 .                   BRANCH NO                   TSO
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L8
         AIF   ('&GEN' EQ 'QTAM').L8
         TM    LCBTSOB,LCBPREP          IS PREPARE ON LINE          TSO
         BO    RTPREP                   BRANCH ON YES               TSO
         TM    LCBTSOB,LCBWRBRK         WAS A BREAK REQUESTED?      TSO
         BNZ   CHKBRK                   CHECK IF BREAK
         SPACE
.L8      ANOP
CHKMSGEN EQU   *
         TM    LCBSTAT2,LCBMSGNN        MSGGEN
         BO    ERBPOST                  BRANCH IF YES
         CLI   LCBTPCD,TPOPEN .         INITIALIZATION SEQUENCE
         BE    EROPEN                   BRANCH YES              SA62408
         L     RCCW,LCBLSPCI-1          FREE ALL BUFFERS UP TO HERE
         OI    LCBCHAIN,LCBNORTY        SET NO RETRY
         TM    LCBSTAT1,LCBRECVN        RECEVIE STATE
         BZ    ADDERR                   NO, IT'S ON SEND SIDE
         L     RA,LCBDCBPT              GET DCB BASE
         USING IHADCB,RA
         SR    RB,RB .                  CLEAR FOR INDEX
         IC    RB,DCBRESER+1 .          TEXT IDLES
         DROP  RA
         LA    RWKA,PRFSTXT+1-IEDQPRF(RB) FOR PRFSIZE
         STH   RWKA,PRFSIZE-IEDQPRF(RCCW) SET PREFIX SIZE
         TM    PRFSTAT1-IEDQPRF(RCCW),PRFNHDRN HEADER
         BO    POSTALL                  NO, FREE UP PREVIOUS BFR A56906
         MVC   PRFSIZE-IEDQPRF(2,RCCW),AVTFZERO    RESET PRFSIZE
*                                               TO ZERO IF HDR  SA64676
         TM    LCBERBST,LCBDLNKN        IS ERB AVAILABLE (NO PCI)A56906
         BO    CLEANUP                  YES, POST LCB TO BD
         B     POSTALL                  FREE UP PREVIOUS BUFFERS
         SPACE
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L8B
         AIF   ('&GEN' EQ 'QTAM').L8B
CHKBRK   EQU   *
         MVI   LCBCPA,CCWBREAK .        BREAK COMMAND               TSO
         LA    RA,THREE                                             TSO
         ST    RA,LCBCPA+4 .            LENGTH FOR BREAK            TSO
         MVI   LCBTPCD,X12 .            TP OP CODE                  TSO
         LA    RA,LCBCPA .              START ADDR FOR IOS          TSO
         ST    RA,LCBSTART-1            MOVE IN START ADDRESS       TSO
         MVC   LCBCSWSV(7),LCBCSW .     SAVE ENDING STATUS          TSO
         MVI   LCBECBCC,X'7F'           RESET COMPLETION CODE       TSO
         TM    LCBTSOB,LCBCIRCD         IS TERMINAL IN TEXT MODE    TSO
         BO    RTWRBRK                  BRANCH IF YES, DONT WR BRK  TSO
         B     RESTART                  BRANCH TO ISSUE BREAK       TSO
.L8B     ANOP
TSO8     EQU   *                                                    TSO
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L8C
         AIF   ('&GEN' EQ 'QTAM').L8C
         CLI   LCBTPCD+11,X'BE'         IS SMI/WCC FLAG SET   S22028TSO
         BE    CHK3270R                 YES, BRANCH           S22028TSO
TSO8A    EQU   *                                              S22028TSO
         CLI   LCBTPCD+10,X'AE'         5041 CHECK?                 TSO
         BE    GODYNC                                               TSO
.L8C     ANOP
         CLI   LCBRSKEY,LCLRSCH         LOCAL DEVICE?            S99228
         BNE   CEDETOG                  BRANCH NO                S99228
         L     RA,AVTSAVEX+REG7         LOAD UCB ADDRESS         S99228
         CLI   TTY4(RA),LCL3277         3270 LOCAL DEVICE?       S99228
         BL    CEDETOG                  BRANCH NO                S99228
         L     RA,LCBCSW-ONE            LOAD INTERRUPT ADDRESS   S99228
         LA    RA,ZERO(R0,RA)           CLEAR HIGH ORDER BYTE    S99228
         LTR   RA,RA                    ADDRESS ZERO?            S99228
         BNZ   CEDETOG                  BRANCH NO                S99228
         L     RA,LCBSTART-ONE          LOAD START ADDRESS       S99228
         CLI   LCBECBCC,PERMERR         PREMANENT ERROR ?       OY03460
         BE    INTERSET                 YES, BRANCH             OY03460
         CLI   ZERO(RA),CCWEAU          3270 EAU COMMAND?        S99228
         BNE   MAYBESEL                 BRANCH NO                S99228
         LA    RA,LCBCPA+16             LOAD ADDR EAU CCW        S99228
         B     INTERSET                 SET INTERRUPT ADDRESS    S99228
MAYBESEL EQU   *                                                 S99228
         CLI   ZERO(RA),CCWSEL          3270 SELECT CHANNEL PGM? S99228
         BNE   MAYBEGEN                 BRANCH NO                S99228
         L     RA,LCBLSPCI-ONE          LOAD BUFFER ADDRESS      S99228
         B     BEGIN                    ENTER LOOP               S99228
MAYBEGEN EQU   *                                                 S99228
         LA    RA,LCBCPA                LOAD ADDR MSGGEN CCW     S99228
         B     INTERSET                 SET INTERRUPT ADDRESS    S99228
NEWCCW   EQU   *                                                 S99228
         L     RA,EIGHT(R0,RA)          LOAD TIC CCW             S99228
BEGIN    EQU   *                                                 S99228
         CLI   TICEND(RA),TWO           END OF CHANNEL PROGRAM?  S99228
         BNE   NEWCCW                   BRANCH NO                S99228
INTERSET EQU   *                                                 S99228
         LR    RCCW,RA                  SET INTERRUPT ADDRESS    S99228
         LA    RA,EIGHT(R0,RA)          INCREASE ADDR FOR CSW    S99228
         IC    R0,LCBCSW-ONE            SAVE LCBCSW              S99228
         ST    RA,LCBCSW-ONE            SET INTERRUPT ADDRESS    S99228
         STC   R0,LCBCSW-ONE            RESTORE LCBCSW           S99228
CEDETOG  EQU   *                                                 S99228
         CLI   LCBECBCC,PERMERR         PREMANENT ERROR ?       OY03460
         BE    PERMENT                  YES, BRANCH             OY03460
         TM    LCBCSW+4,X'20'           CHAN PROG CHECK
         BZ    NOPC                     NO
         CLI   CCWOPCDE,CCWTIC          TIC
         BE    ITSPC .                  BRANCH IF YES            S22025
         CLI   CCWOPCDE,CCWTIC+PRFBFMM  IS TIC FLAG ON           S22025
         BE    ITSPC .                  BRANCH IF YES            S22025
         CLI   CCWCOUNT+1,AVTEZERO .    ZERO COUNT CCW           S22025
         BNE   ERP .                    BRANCH IF NO             S22025
         TM    CCWFLAGS,CCWCD+CCWCC .   ANY CHAINING FLAGS       S22025
         BZ    NOPC .                   NO, NORMAL END OF MSG    S22025
         B     ERP .                    LET ERP PROCESS          S22025
ITSPC    EQU   * .                                               S22025
         TM    CCWADDR+2,X'01'          BUFFER BEING ASSIGNED
         BZ    NOTASGN                  NO
ASGN     EQU   *
         NI    CCWADDR+2,AVTEFF-X'01'   CLAR BIT
         CLI   LCBRSKEY,LCLRSCH         LOCAL DEVICE             X03963
         BNE   NEXTBUF                  BR NO, GET NEXT BUFFER   X03963
         L     RA,AVTSAVEX+REG7         UCB ADDRESS              X03963
         CLI   TTY4(RA),LCL3277         3270 LOCAL               X03963
         BL    NEXTBUF                  BR NO, GET NEXT BUFFER   X03963
         LA    RCCW,LCBCPA+16           RESTART ON SELECT COM    X03963
         B     EXIT3                    TO RESTART               X03963
NEXTBUF  EQU   *                                                 X03963
         L     RCCW,CCWADDR-1           GET NEXT BUFFER
         B     EXIT3                    RESTART ON NEXT BUFFER
NOTASGN  EQU   *
         TM    CCWADDR+2,X'02'          VALID PROGRAM CHECK
         BZ    ASGN                     NO
         TM    SCBERR1,SCBCUTFN         CUT OFF EXECUTED
         BNZ   RTOPCUT                  POST LCB TO CUTOFF       A67139
         OI    SCBERR1,SCBNOBFN .       SET INSUFFICINET BUFFERS S21101
         TM    LCBCSW+3,X'02'           UNIT CHECK ALSO
         BO    ERP                      BRANCH IFYES TO CLEAR ERROR
         B     TEXT                     POST PREVIOUS BUFFERS
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L8D
         AIF   ('&GEN' EQ 'QTAM').L8D
CHK3270R EQU   *                                              S22028TSO
         LH    RC,LCBTTCIN              TERMINAL OFFSET       S22028TSO
         L     RA,AVTRNMPT              TNT CODE BASE         S22028TSO
         USING IEDQTNTD,RA                                    S22028TSO
         BAL   RPREFIX,TNTDCODE         FIND TERMINAL TYPE    S22028TSO
         DROP  RA                                             S22028TSO
         USING IEDQTRM,RB                                     S22028TSO
         L     RB,TRMDESTQ-1            GET QCB ADDRESS       S22028TSO
         DROP  RB                                             S22028TSO
         TM    QCBTSOF2-IEDQQCB(RB),QCBDSSMI HAS WCC BEEN SENTS22028TSO
         BO    SKIPUE                   BRANCH NOT SENT         SA61779
         B     TSO8A                    BRANCH NOT SENT       S22028TSO
.L8D     ANOP
PCSTART  EQU   *
         MVI   LCBCPA+12,X'20'         FLAG TO ASSIGN BUFFERS FROM
         LA    RCCW,LCBCPA              FOR TIC
         ST    RCCW,LCBCPA+8            SET IN TIC ADDRESS
         MVI   LCBCPA+8,CCWTIC          SET COMMAND CODE
         B     EXIT3                    RESTART ON NEXT BUFFER
*                                         IDLES OR SKIP LOOP
NOPC     EQU   *
         TM    LCBCSW+4,X'1F'           SEVERE CHANNEL ERRORS
         BNZ   ERP                      YES
         TM    LCBCSW+3,X'D2'           DEVICE ERROR            SA59028
         AIF   ('&GEN' EQ '').LI2
         AIF   ('&GEN' EQ 'STSP').LI2
         AIF   ('&GEN' EQ 'QTAM').LI2
         BNZ   ERP
         AGO   .L10
.LI2     ANOP
         BZ    NOUC                     BRANCH NO UNIT CHECK
         CLI   LCBRSKEY,LCLRSCH         LOCAL DEVICE?            S99228
         BE    ERPEXIT                  RETURN TO IOS FOR ERP   SA59027
         L     RA,TSOCHKAD
         BR    RA
NOUC     EQU   *
.L10     ANOP
         TM    LCBCSW+3,UNEX            UNIT EXCEPTION
         BZ    PERMENT                  NO
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L10A      SA51090
         LH    RC,UCBOFFST(,RTST)       GET UCB ADDRESS         SA51090
         CLI   UNITYPE(RC),AVTEZERO     IS THIS AUDIO           SA51090
         BE    ERP                      IF SO, TRY ERP          SA51090
.L10A    ANOP                                                   SA51090
         CLI   CCWOPCDE,CCWREAD         READ COMMCAN
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L11
         AIF   ('&GEN' EQ 'QTAM').L11
         BE    PERMENT                  YES, NORMAL
         CLI   CCWOPCDE,CCWINHIB        INHIBIT
.L11     ANOP
         BNE   ERP                      NO, NOT NORMAL
         EJECT
*
*        THE TP OP CODE FOR THE INTERRUPTED CCW IS OBTAINED BY
* USING THE ADDRESS IN THE CSW AS AN INDEX ARGUMENT INTO A LIST OF
* TP OP CODES (LCBTPCD).  AN ENEN VALUED TP OP CODE REPRESENTS A TEXT
* OR NON-TEXT RELATED CCW FOR WHICH AN INTERRUPT IS ANTICIPATED.  AN
* EVEN VALUED TP OP CODE IS USED AS AN INDEX INTO A BRANCH TABLE
* IN ORDER TO TAKE SPECIFIC ACTION FOR THIS INTERRUPT.  TWO TABLES
* ARE EMPLOYED:  ONE FOR NORMAL ENDING STATUS AND THE OTHER FOR
* ERROR CONDITIONS (SET BY ERP).
*        IF THE TP OP CODE HAS AN ODD VALUE, TESTS ARE MADE TO
* DETERMINE IF IT IS A TEXT OR NON-TEXT RELATED CCW.
*
PERMENT  EQU   *
         LA    RC,LCBCPA                START OF CHAN PROG AREA
         SR    RC,RCCW                  DIFFERENCE BETWEEN TWO
         BP    TEXT                     BRANCH IF TEXT
         SR    RB,RB                    CLEAR WORK REGISTER
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         IC    RB,DCBEIOBX              SIZE OF LCB
         DROP  RA
         LA    RB,AVTEZERO(RLCB,RB)     POINT TO END OF LCB
         SR    RB,RCCW                  CCW IN CHAN PROG AREA
         BNP   TEXT                     BRANCH IF TEXT
         LPR   RC,RC                    MAKE DIFFERENCE POSITIVE
         SRL   RC,THREE                 DIVIDE BY 8
         IC    RC,LCBTPCD(RC)           GET TP OP CODE FOR BRANCG
         STC   RC,AVTDOUBX              SAVE TP OP CODE
         TM    AVTDOUBX,X01             NON EXPECTED INTERRUPT
         BO    TRYTXTER                 BRANCH YES
         LH    RB,TABLE(RC)             OFFSET INTO TABLE
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BNE   TABLE1(RB)               BRANCH NO
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L8E
         AIF   ('&GEN' EQ 'QTAM').L8E
         CLI   LCBTPCD+11,X'BE'         IS SMI/WCC FLAG ON    S22028TSO
         BNE   PERMENT1                 NO, BRANCH            S22028TSO
         MVI   LCBTPCD+11,X'00'         CLEAR SMI/WCC FLAG    S22028TSO
PERMENT1 EQU   *                                              S22028TSO
.L8E     ANOP
         LH    RB,ERRTABLE(RC)          ENTRY INTO ERROR TABLE
         B     ERRTABLE(RB)             BRANCH TO ENTRY
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').LC1
         AIF   ('&GEN' EQ 'QTAM').LC1
GODYNC   EQU   *
         L     RF,DYNCAD                                            TSO
         BR    RF                                                   TSO
.LC1     ANOP
TABLE    EQU   *
         DC    AL2(RTERROR-TABLE1)      ERROR ENTRY
         DC    AL2(RTOPEN-TABLE1)       OPEN AND START LINE
         DC    AL2(RTPOLL-TABLE1)       READ RESPONSE TO POLL
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'BISC').L12
         DC    AL2(RTENAB-TABLE1)       ENABLE ON DIAL
         AGO   .L13
.L12     DC    AL2(RTERROR-TABLE1)
.L13     ANOP
         DC    AL2(RTRSPADD-TABLE1)     RESPONSE TO ADDRESSING
         DC    AL2(RTRSPEB-TABLE1)      READ RESPONS TO EOB
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L14
         AIF   ('&GEN' EQ 'QTAM').L14
         DC    AL2(RTRDENQ-TABLE1)      READ ENQ
         DC    AL2(RTRSPENQ-TABLE1)     READ RESPONSE TO ENQ
         AGO   .L15
.L14     DC    AL2(RTERROR-TABLE1)
         DC    AL2(RTERROR-TABLE1)
.L15     AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L16
         AIF   ('&GEN' EQ 'QTAM').L16
         DC    AL2(RTPREP-TABLE1)       PREPARE                     TSO
         DC    AL2(RTWRBRK-TABLE1)      WRITE BREAK                 TSO
         AGO   .L17
.L16     ANOP
         DC    AL2(RTERROR-TABLE1)
         DC    AL2(RTERROR-TABLE1)
.L17     AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L18
         AIF   ('&GEN' EQ 'QTAM').L18
         DC    AL2(RDLCOUT-TABLE1)      RD STX,/DLE STX
         AGO   .L19
.L18     ANOP
         DC    AL2(RTERROR-TABLE1)
.L19     ANOP
         DC    AL2(RTWRRSP-TABLE1)      WRITE RESPONSE OFFSET
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L20
         AIF   ('&GEN' EQ 'QTAM').L20
         DC    AL2(RTIDENQ-TABLE1)      READ ID ENQ
         DC    AL2(RTIDACK-TABLE1)      READ ID ACK
         AGO   .L21
.L20     ANOP
         DC    AL2(RTERROR-TABLE1)
         DC    AL2(RTERROR-TABLE1)
.L21     ANOP
         DC    AL2(RTTXTRST-TABLE1)     TEXT ABORT
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ '').L22
         AIF   ('&GEN' EQ 'QTAM').L22
         DC    AL2(RTERROR-TABLE1)
         AGO   .L23
.L22     ANOP
         DC    AL2(RTTWXID-TABLE1)      READ TWX ID
.L23     ANOP
         DC    AL2(RTBUFEOT-TABLE1)     RESET LINE AFTER A BLOCK
         DC    AL2(RTCLOSE-TABLE1)      CLOSE ENTRY
         DC    AL2(RTRSPAD-TABLE1)      RESET AFTER UNUSUAL RESP
*                                         TO ADDRESSING OR ENQ
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ '').TS96          SA48276
         DC    AL2(RTERROR-TABLE1)                              SA48276
         AGO   .TS97                                            SA48276
.TS96    ANOP                                                   SA48276
         DC    AL2(RTEAU-TABLE1)        ERASE ALL UNPROTECTED   SA59028
         DC    AL2(RTRSPMG-TABLE1)      2260 RESP TO MSGEN      SA59028
.TS97    ANOP                                                   SA48276
ERRTABLE EQU   *
         DC    AL2(ERERROR-ERRTABLE)
         DC    AL2(EROPEN-ERRTABLE)
         DC    AL2(ERPOLL-ERRTABLE)
         AIF   ('&GEN' EQ 'MINI').L24
         DC    AL2(ERENAB-ERRTABLE)
         AGO   .L25
.L24     ANOP
         DC    AL2(ERERROR-ERRTABLE)
.L25     ANOP
         DC    AL2(ERRSPAD-ERRTABLE)
         DC    AL2(ERRSPEB-ERRTABLE)
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L26
         AIF   ('&GEN' EQ 'QTAM').L26
         DC    AL2(ERRDENQ-ERRTABLE)
         DC    AL2(ERRSPENQ-ERRTABLE)
         AGO   .L27
.L26     ANOP
         DC    AL2(ERERROR-ERRTABLE)
         DC    AL2(ERERROR-ERRTABLE)
.L27     AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L27A
         AIF   ('&GEN' EQ 'QTAM').L27A
         DC    AL2(RTPREP-ERRTABLE)
         DC    AL2(ERERROR-ERRTABLE)
         AGO   .L27B
.L27A    ANOP
         DC    AL2(ERERROR-ERRTABLE)
         DC    AL2(ERERROR-ERRTABLE)
.L27B    ANOP
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L28
         AIF   ('&GEN' EQ 'QTAM').L28
         DC    AL2(ERLCOUT-ERRTABLE)
         AGO   .L29
.L28     ANOP
         DC    AL2(ERERROR-ERRTABLE)
.L29     ANOP
         DC    AL2(ERWRRSP-ERRTABLE)
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').LA
         AIF   ('&GEN' EQ 'QTAM').LA
         DC    AL2(ERIDENQ-ERRTABLE)    READ ID ENQ
         DC    AL2(ERIDACK-ERRTABLE)
         AGO   .LB
.LA      ANOP
         DC    AL2(ERERROR-ERRTABLE)
         DC    AL2(ERERROR-ERRTABLE)
.LB      ANOP
         DC    AL2(ERTXTRST-ERRTABLE)   TEXT ABORT
         AIF   ('&GEN' EQ 'MINI').L30
         DC    AL2(ERTWXID-ERRTABLE)    ERRROR ON TWX ID
         AGO   .L31
.L30     ANOP
         DC    AL2(ERERROR-ERRTABLE)
.L31     ANOP
         DC    AL2(ERBUFEOT-ERRTABLE)   RESET LINE AFTER BLOCK
         DC    AL2(ERCLOSE-ERRTABLE)    ERP RETURN AFTER OBR
         DC    AL2(ERRSPAD-ERRTABLE)                            SA59028
         DC    AL2(ERERROR-ERRTABLE)    EAU ERROR               SA59028
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ '').TS98          SA48276
         DC    AL2(ERERROR-ERRTABLE)                            SA48276
         AGO   .TS99                                            SA48276
.TS98    ANOP                                                   SA48276
         DC    AL2(ERRSPMG-ERRTABLE)                            SA48276
.TS99    ANOP                                                   SA48276
         EJECT
*
*        INTERRUPTS ON CCW'S WITH ODD VALUED TP OP CODES ARE
* HANDLED HERE.
*
TRYTXTER EQU   *
         CLI   AVTDOUBX,TPRDSKIP        PRIOR TO TEXT
         BL    ERERROR                  BRANCH IF YES
         BH    TRYIDLES                 NOT READ SKIP
         L     RCCW,LCBCPA+12           CCW BEFORE TIC PROGRAM CHECK
ITSSYNC  EQU   *
         OI    LCBCSW+3,UNEX            INDICATE END OF MSG
         MVI   LCBCSW+6,0               RESIDUAL COUNT 0
         MVI   LCBECBCC,PERMERR         INDICATE ERROR
         B     TEXT                     PROCESS BUFFERS
TRYIDLES EQU   *
         CLI   AVTDOUBX,TPWRIDLE        ERROR ON WRITE IDLES
         BNE   CKSNDRCV                 NO, CHECK TYPE OF OPERATION
GOIDLES  EQU   *
         TM    LCBSENS0,IR              INTERVENTION REQUIRED   OY00507
         BNO   NOIR                     BR NO, CONTINUE         OY00507
         LA    RCCW,LCBCPA              WRITE IDLES, TIC LOOP   OY00507
         L     RD,LCBCPA+8              TIC LOOP IN TACT        OY00507
         LA    RD,ZERO(RD)              CLEAR HI ORDER BYTE     OY00507
         CR    RCCW,RD                  WRITE IDLES LOOP INTACT OY00507
         BNE   NOIR                     BR NO, CONTINUE         OY00507
         MVI   LCBINCAM,AVTEFF          SET EXCP INDICATOR FOR  OY00507
*                                         RESTART BY IEDQGA     OY00507
         B     FREERQE                  GO FREE RQE, RETURN     OY00507
NOIR     EQU   *                                                OY00507
         MVI   LCBINCAM,0               RESET RETRY COUNT
         L     RCCW,LCBCPA+8            RESTART TO ET A BUFFER
         B     EXIT3                    EXIT
CKSNDRCV EQU   *
         TM    LCBSTAT1,LCBRECVN        RECEIVE OPERATION
         BO    ERWRRSP                  BRANCH IF YES
         B     ERRSPEB                  POST FORSEND ERROR
TABLE1   EQU   *
RTERROR  EQU   *
         AIF   ('&GEN' EQ 'MINI').M2
         CLI   CCWOPCDE,CCWNOP          AUTOPOLL-TIC'S AFTER POLL'S
         BNE   NOTNOP                   NO
         BAL   RD,POLLEXIT              FOR EXIT FORCE END OF LIST
         DC    X'FEFE' .               FORCED END OF LIST       SA51791
NOTNOP   EQU   *
         AIF   ('&GEN' NE '' AND '&GEN' NE 'BISC').NT3670        S22027
         NC    LCBTTCIN,LCBTTCIN        IS DESTINATION DETERMINEDS22027
         BZ    NT367A                   BRANCH IF NO             S22027
         BAL   RD,DCTBASE .             GET BASE ADDR OF DCT     S22027
         TM    TWO(RA),CBRDCAST .       BROADCAST TERMINAL       S22027
         BO    ERBPOST .                BRANCH IF YES            S22027
NT367A   EQU   *                                                 S22027
.NT3670  ANOP                                                    S22027
         AIF   ('&GEN' EQ '').Z1
         AIF   ('&GEN' NE 'BISC').M2
         B     RDRSP                    PUT UP READ RESPONSE
         AGO   .M2
.Z1      ANOP
         TM    LCBSTAT2,LCBSYNC         BSC
         BNZ   RDRSP                    BRANCH IF YES-READ RESP
.M2      ANOP
ERBPOST  EQU   *
         NI    LCBSTAT2,AVTEFF-LCBRESP  RESET RESPONSE OWED BIT MH
*                                        DOES NOT RESET IT ON MSGGEN
         NI    SCBBSCFM,AVTEFF-SCBCNTEN RESET FLAG  ON MSGGENSO  S21101
*                                         SCHEDULER WILL NOT     S21101
*                                         ADJUST STCB CHAIN      S21101
         AIF   ('&GEN' NE '' AND '&GEN' NE 'BISC').NT3670A       S22027
         NC    LCBTTCIN,LCBTTCIN        IS DESTINATION DETERMINEDS22027
         BZ    NT367AA                  BRANCH IF NO             S22027
         BAL   RD,DCTBASE .             GET BASE ADDR OF DCT     S22027
NT367AA  EQU   *                                                 S22027
.NT3670A ANOP                                                    S22027
         LA    RPREFIX,LCBERB .         POST ERB TO DISP         S22027
         MVI   PRFPRI,PRIRCQCB          POST PRIORITY            S22027
         NC    LCBTTCIN,LCBTTCIN        IS DESTINATION DETERMINEDS22027
         BZ    CKTSOPST                 BRANCH IF NO             S22027
         AIF   ('&GEN' NE '' AND '&GEN' NE 'BISC').NT3670B       S22027
         TM    TWO(RA),CBRDCAST .       IS POST TO CB SCHED REQ  S22027
         BZ    CKTSOPST .               BRANCH IF NO             S22027
         L     RF,AVTCMBSS .            CB SEND SCHED            S22027
         BCTR  RF,0 .                   DECR FOR QCB ADDR        S22027
         BCTR  RF,0 .                   DECR FOR QCB ADDR        S22027
         B     POSTEXIT .               EXIT                     S22027
.NT3670B ANOP
CKTSOPST EQU   *                                                 S22027
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').Z11A
         AIF   ('&GEN' EQ 'QTAM').Z11A
         TM    LCBTSOB,LCBSATRD         IS POST TO AYM REQUESTED?   TSO
         BZ    DISP                     BRANCH ON NO                TSO
         L     RF,AVTTSOPT              ADDRESS OF TSO AREA         TSO
         L     RF,TSIMSGEN-IEDQTSI(,RF) ADDRESS OF AYM              TSO
         B     POSTEXIT
         AGO   .Z11B
.Z11A    ANOP
         B     DISP                     POST TO DISPOSTION
.Z11B    ANOP
*
*        THE LCB WILL BE POSTED TO THE QCB POINTED TO BY LCBQCBA
*
EROPEN   EQU   *
RTOPEN   EQU   *
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L32
         TM    LCBTSOB,LCB2741N         2741?                       TSO
         BZ    NONO                     NOT 2741
         MVI   LCBTPCD+11,X'AB'         INDICATE FIRST TIME FOR 2741TSO
NONO     EQU   *
.L32     ANOP
RTOPCUT  EQU   *                                                 A67139
         LA    RLCB,AVTEZERO(,RLCB)     CLEAR HI ORDER BYTE FOR COM
         MVI   LCBTPCD,AVTEZERO         CLEAR OPEN INDICATOR
         L     RF,LCBRCB                POST ADDRESS SET BY OPEN
         TM    LCBSTAT1,LCBRECVN+LCBSENDN+LCBOCNI               SA70316
*                                       TEST STATUS OF LCB      SA70316
         BZ    FREERQE                  FALL THROUGH IF OP CONTRL
*                                         HAS STOP REQUEST ON LINE
*                                         ELSE EXIT-LINE IS STOPPED
         MVI   LCBPRI,PRILNFRE          POST PRIORITY
         LA    RF,AVTEZERO(,RF)         CLEAR HIGH BYTE         SA66616
         CR    RLCB,RF                  POST LCB TO ITSELF      SA66616
         BNE   POSTQ                    BRANCH IF NO            SA66616
         NI    LCBSTAT1,AVTEFF-LCBSENDN SET NOT SENDING         SA66616
POSTQ    EQU   *
         LR    RPREFIX,RLCB             PARAMETER TO ENQUEUE
POSTEXIT EQU   *
         BAL   RC,ENQUEUE               PUT ON READYBQUEUE
         B     FREERQE                  SKIP POST
*
*        READ RESPONSE TO INVITATION
*
ERRDENQ  EQU   *
ERENAB   EQU   *
ERPOLL   EQU   *
RTPOLL   EQU   *
         MVI   LCBTSTSW,XF0             RESET FOR 2260L         SA61780
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'QTAM').LL44       S99228
         L     RF,LOOKAD                LOAD ADDR DVCCSTCS LOCRTNS99228
         BALR  RD,RF                    BRANCH TO DVCCSTCS LOCRTNS99228
         ST    RE,AVTDOUBX+FOUR         SAVE INVLIST CWORD ADDR  S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,CUMASK           GENERAL POLL IN PROGRESS?S99228
         BZ    ITERATE                  NO, LCBSTART SET         S99228
         L     RE,AVTDOUBX+FOUR         LOAD INVLIST CWORD ADDR  S99228
         OI    LCBMSGFM,LCBACKI         SET ACK-0 FOR READ INIT  S99228
         LA    RA,LCBCPA+ONESIX         LOAD CHL PGM START ADDR  S99228
         ST    RA,LCBSTART-ONE          SET LCBSTART AT CHL PGM  S99228
         TM    THREE(RE),AUTOPL         AUTOPOLL IN PROGRESS?    S99228
         BZ    ITERATE                  NO, SKIP INVPTR UPDATE   S99228
         SR    RC,RC                    CLEAR WORK REGISTER      S99228
         IC    RC,TWO(R0,RE)            INSERT ENTRY LENGTH      S99228
         L     RD,LCBINVPT-ONE          LOAD CURRENT INVLIST ENT S99228
         AR    RD,RC                    INCREMENT INVLIST PTR AD S99228
         IC    R0,LCBINVPT-ONE          SAVE HI ORDER BYTE       S99228
         ST    RD,LCBINVPT-ONE          SET NEXT INVLIST ENTRY   S99228
         STC   R0,LCBINVPT-ONE          RESTORE HI ORDER BYTE    S99228
         B     CLEANUP                  NO RESTART ON NEG RESP   S99228
ITERATE  EQU   *                                                 S99228
.LL44    ANOP                                                    S99228
         LA    RC,CLEANUP               NORMAL BRANCH ADDRESS   SA51090
         TM    SCBSTATE,SCBLCK1N        IS THIS LOCK MODE       SA51090
         AIF   ('&GEN' NE 'BISC').L32A                          SA51090
         BO    ERRINIT                  BRANCH IF SO            SA51090
         AGO   .L32B                                            SA51090
.L32A    ANOP                                                   SA51090
         BO    TESTARU                  BRANCH IF SO            SA51090
.L32B    ANOP                                                   SA51090
         SPACE
         SPACE
         OI    LCBSTAT2,LCBNEGRP        INDIC NEG RESP TO POLL
         TM    LCBSTAT2,LCBDIAL         DIAL LCB
         BZ    NOTDIAL                  BRANCH IF NO
         SPACE
ERRTEST  EQU   *                                                SA51090
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BE    ERERROR                  BRANCH IF YES
         SPACE
         BR    RC                       PROCEED NORMALLY        SA51090
         SPACE 2
ERRINIT  EQU   *                                                SA51090
         LA    RC,RESTART               LOCK BRANCH ADDRESS     SA51090
         B     ERRTEST                  TEST FOR PERM ERROR     SA51090
         AIF   ('&GEN' EQ 'BISC').L32C                          SA51090
         SPACE 2
TESTARU  EQU   *                                                SA51090
         LH    RC,UCBOFFST(,RTST)       GET ADDRESS OF UCB      SA51090
         CLI   UNITYPE(RC),AVTEZERO     IS THIS AUDIO           SA51090
         BNE   ERRINIT                  BRANCH IF NOT           SA51090
         SPACE
         CLI   LCBCSW+6,TWO             HAS TEXT BEEN ENTERED   SA51090
         BE    ERERROR                  BRANCH IF NOT           SA51090
         SPACE
         L     RPREFIX,LCBLSPCI-1       GET ADDRESS OF BUFFER   SA51090
         LH    RC,PRFSIZE               GET BUFFER LENGTH       SA51090
         LA    RC,TWO(,RC)              ASSUME TEXT OF 2 BYTES  SA51090
         CLI   LCBCSW+6,ONE             WAS ONLY ONE CHAR READ  SA51090
         BNE   POSTASIS                 BRANCH IF NOT           SA51090
         SPACE
         BCTR  RC,ZERO                  DECREMENT LENGTH BY ONE SA51090
         SPACE
POSTASIS EQU   *                                                SA51090
         STH   RC,PRFSIZE               RESTORE BUFFER LENGTH   SA51090
         B     POSTMH                   POST BUFFER TO MH       SA51090
.L32C    ANOP                                                   SA51090
         SPACE 2
NOTDIAL  EQU   *
TSO1     EQU   *                                                    TSO
.L33     ANOP
NEXTENT  EQU   *
         SR    RC,RC                    CLEAR WORK REG
         IC    RC,LCBUCBX               RLN MINUS 1
         SLL   RC,2                     MULTIPLY BY 4
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RF,DCBINVLI(RC)          ILIST  FOR THIS LINE
         DROP  RA
         L     RD,LCBINVPT-1            CURRENT ENTRY IN I LIST
         SR    RE,RE                    CLEAR INDEX  REGISTER
         IC    RE,TWO(R0,RF)            SIZE OF EACH ENTRY
         AR    RD,RE                    POINT TO NEXT ENTRY
         MVI   SCBRCVCT,0               RESET RECEIVE LIMIT
POLLEXIT EQU   *
         IC    R0,LCBINVPT-1            SAVE HI ORDER BYTE
         ST    RD,LCBINVPT-1            NEXT ENTRY
         STC   R0,LCBINVPT-1            SETE HI ORDER BYTE
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BE    ERERROR                  BRANCH YES
         CLI   ZERO(RD),FE              END OF LIST
         BE    CLEANUP                  BRANCH YES
.Z25     AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').Z24
         AIF   ('&GEN' EQ 'QTAM').Z24
         CLI   1(RD),FE                 END OF AUTOPOLL BSC
         BE    CLEANUP                  YES
.Z24     ANOP
         TM    LCBSTAT2,LCBSNDPR        SEND SWITCH SET BY SCHED
         BO    CLEANUP                  BRANCH YES
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L34        S22029
         AIF   ('&GEN' EQ 'QTAM').L34                            S22029
         TM    AVTBIT1,AVTTSON          TSO IN THE SYSTEM        S22029
         BO    CLEANUP                  BRANCH IF YES            S22029
.L34     ANOP                                                    S22029
         LA    RCCW,LCBCPA+24           WRITE POLLING CHRS CCW
         IC    RWKA,CCWADDR-ONE         SAVE WRITE COMMAND       S99228
         ST    RD,CCWADDR-ONE           SET ADDR NEW POLL CHARS  S99228
         STC   RWKA,CCWADDR-ONE         RESTORE WRITE COMMAND    S99228
         BCTR  RE,R0                    DECREMENT TO ACCESS INDEX
         IC    RE,0(RE,RD)              GET INDEX BYTE
         SLL   RE,ONE                   MULTIPLY BY 2
         SR    RF,RE                    POINT TI OFFSET IN TNT
         LH    RC,0(RF)                GET TNT OFFSET
         AIF   ('&GEN' NE 'MINI').Z2                             S22025
         STH   RC,LCBTTCIN .            NEW CONNCTED             S22025
         AGO   .Z26A .                                           S22025
.Z2      ANOP .                                                  S22025
         L     RF,POLLAD .              AUTOPOLL ROUTINE         S22025
         BAL   RD,FINDSCBQ-POLLRT(RF) . SCB/QCB FOR NEXT ENTRY   S22025
*                                         AND GET QCB ADDRESS    S22025
         TM    QCBSTAT-IEDQQCB(RB),QCBSEND SEND MODE             S22025
         BO    NEXTENT .                BRANCH YES TO NEXT ENTRY S22025
         NI    LCBSTAT2,X'FF'-LCBNEGRP . RESET NEGATIVE RESPONSE S22025
.Z26A    ANOP .                                                  S22025
         B     RESTART                  RESTART ON NEXT ENTRY
         SPACE
CLEANUP  EQU   *
         MVI   LCBPRI,PRIFSPCI-1        CLEANUP PRIORITY
LEAVE    EQU   *
         L     RF,AVTMSGS-1             GET ADDRESS OF BUFFER DISPS
         L     RF,AVTEZERO(,RF)          QCB FOR POST
         B     POSTQ                    USE COMMON CODE
         AIF   ('&GEN' EQ 'MINI').L37A
         AIF   ('&GEN' EQ 'BISC').Z3
         SPACE 10
*
*        INTERRUPTS ON ENABLE FOR S/S DIAL LINES
*
RTENAB   EQU   *
         SPACE
         TS    LCBTSTSW                 HIO TO BE DONE
         BNZ   CLEANUP                  YES
         B     EXIT2                    RESTART AFTER ENABLE
*
         EJECT
*        READ  RESPONSE TO ADDRESSING
*
.Z3      AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'QTAM').L37B       S22025
RTRSPADD EQU   *
         AIF   ('&GEN' NE '').L36
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BZ    NOBSC
.L36     ANOP
         SPACE
         L     RF,CHACKAD               CHECK RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO ROUTINE
BSCADD   EQU   *
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
         TM    LCBMSGFM,LCBACKI .       TEST ACK COUNTER         S21101
         BZ    TRYACK1                  TRY ACK-1
         SPACE
         TM    LCBERCCW,RACK0           SET CONDITION CODE
ACKTEST  EQU   *
         BO    ADDROK                   RIGHT ACK RECEIVED
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER BACK    S21101
         USING IEDQTRM,RB .                                      S22025
         BAL   RD,DCTBASE .             GET BASE ADDR OF DCT     S22025
         L     RB,TRMDESTQ-1 .          QCB ADDRESS              S22025
         DROP    RB
         USING IEDQQCB,RB
         TM    LCBERCCW,RENQ            ENQ
         BNO   TRYWK                    NO, TRY WACK
         SPACE
         TM    2(RA),MPT                MULTIPOINT
         BO    TSTRTRY                  WRITE ENQ
         SPACE
         TM    3(RA),ENDCTL             END-END CONTROL
         BZ    CONTENT                  NO, WE HAVE CONTENTION   S99244
         SPACE
         B     TSTRTRY                  SEND ENQ AGAIN
         SPACE
TRYWK    EQU   *
         TM    LCBERCCW,RWACK           WACK RECEIVED
         BZ    NOWK                     NO
         SPACE
         TM    2(RA),MPT                MULTIPT
         BZ    AGAINTRY                 NO
.L37B    ANOP .                                                  S21101
TEST1ST  EQU   *                                                 S21101
         TM    QCBSTAT-IEDQQCB(RB),QCBBUFRD HEADER BUFFER        S21101
         BZ    DONTSEND                 NO
         SPACE
.L37A    ANOP
RESETMM  EQU   *
         NI    SCBQTYPE,AVTEFF-SCBBFMM  RESET MIDDLE OF SMG
         AIF   ('&GEN' EQ 'MINI').L37
         AIF   ('&GEN' EQ 'STSP').L37
         AIF   ('&GEN' EQ 'QTAM').L37
         B     DONTSEND                 EXIT
         SPACE
NOWK     EQU   *
         TM    LCBERCCW,REOT            EOT
         BO    ERRSPAD                  YES, TERMINAL NOT READY
         SPACE
         TM    LCBERCCW,RRVI            RVI RECEIED
         BZ    NORVI                    NO
         TM    2(RA),MPT                MULTIPT
         BZ    NOMPT                    NO
         TM    QCBSTAT,QCBBUFRD
         BO    RESETMM                  YES
         TM    ONE(RA),C3270            3270 DEVICE?             S99228
         BZ    NORVIERP                 NO, NO DVC DEP ERP       S99228
         L     RF,LOOKAD                LOAD ADDR DVCCSTCS LOCRTNS99228
         BALR  RD,RF                    BRANCH TO DVCCSTCS LOCRTNS99228
         ST    RE,AVTDOUBX+FOUR         SAVE INVLIST CWORD ADDR  S99228
         L     RF,FINDAD                LOAD ADDR DVC DEP SRC RT S99228
         BALR  RD,RF                    BRANCH TO DVC DEP SRC RT S99228
         B     ERRSPAD                  SKIP FLAG SET            S99228
NORVIERP EQU   *                                                 S99228
         SPACE
         OI    SCBERR4,SCBTXTTN         SET TEXTY ERROR
         OI    SCBERR1,SCBRVISL         SET RVI TO SELECTION
         B     RESETMM                  EXIT
NOMPT    EQU   *
         DROP  RB
         SPACE
         TM    3(RA),ENDCTL             END-END CONTROL
         BO    DONTSEND                 RESCHEDULE
         SPACE
         B     TSTRTRY                  RETRY WITE ENQ
         SPACE
NORVI    EQU   *
         TM    LCBERCCW,RNAK            NAK RECEIVED
         BZ    TSTRTRY                  NO
         SPACE
         TM    2(RA),MPT                MULTIPT
         BO    ERRSPAD                  YES
         SPACE
         TM    3(RA),ENDCTL             END-END CTL
         BZ    RESETTM                  NINVALID RESPONSE
         CLI   LCBINCAM,RETRY           RETRY LIMIT REACHED
         BNL   RESETTM                  YES
         IC    RWKA,LCBINCAM            RETRY COUNT
         LA    RWKA,1(,RWKA)            BUMP
         STC   RWKA,LCBINCAM            SET BACK
         SH    RCCW,H8                  BACK UP TO PREVIOUS CCW
         B     EXIT3                    RESTART
         SPACE
         SPACE
TRYACK1  EQU   *
         TM    LCBERCCW,RACK1           SET CONDITION CODE
         B     ACKTEST                  USE COMMON BRANCHES
CONTENT  EQU   *                                                 S99244
         L     RA,LCBDCBPT              GET DCB ADDRESS          S99244
         USING IHADCB,RA                                         S99244
         SR    RC,RC                    CLEAR WORK REGISTER      S99244
         IC    RC,LCBUCBX               GET RLN MINUS 1          S99244
         SLL   RC,2                     (RLN-1)*4 IS INVITATION  S99244
*                                         LIST ADDRESS INDEX     S99244
         L     RA,DCBINVLI(RC)          INVITATION LIST ADDRESS  S99244
         DROP  RA                                                S99244
         TM    3(RA),X'20'              MASTER=YES SPECIFIED     S99244
         BNO   DONTSEND                 NO, FORGET IT            S99244
         CLI   LCBINCAM,RETRY           RETRY LIMIT REACHED      S99244
         BH    SLCTNERR                 YES, SELECTION ERROR     S99244
         IC    RA,LCBINCAM              GET RETRY COUNT          S99244
         LA    RA,1(RA)                 INCREMENT                S99244
         STC   RA,LCBINCAM              AND SAVE                 S99244
         SH    RCCW,H8                  BACK UP TO WRITE ENQ CCW S99244
         B     EXIT3                    GO RESTART ON WRITE ENQ  S99244
SLCTNERR EQU   *                                                 S99244
         OI    SCBERR4,SCBSLCTN         INDICATE SELECTION ERR   S99244
.L37     ANOP
DONTSEND EQU   *
         NC    SCBDEOB(4),SCBDEOB .     IS IT START OF MSG       S99244
         BNZ   NOSDFFO .                NO, BYPASS NEXT          S99244
         NI    QCBFLAG-IEDQQCB(RB),AVTEFF-QCBSDFFO RESET TO      S99244
*                                         NEUTRAL                S99244
NOSDFFO  EQU   * .                                               S99244
         OI    SCBBSCFM,SCBCNTEN .      SET FLAG FOR SCHEDULER   S21101
*                                         TO DETERMININE NEXT TYPS21101
*                                         OF OPERATION           S21101
         B     ERRSPAD                 FREE UP BUFFERS
ADDROK   EQU   *
         LA    RCCW,LCBCPA-8           ADJUST TO START IDLES
         AIF   ('&GEN' EQ 'BISC').LC
         B     NOTMOD2                  POST BUFFERS
         AIF   ('&GEN' EQ '').L35
RTRSPADD EQU   *
.L35     ANOP
NOBSC    EQU   *
         AIF   ('&GEN' EQ 'MINI').L35A                           S21101
         CLI   LCBCSW+6,7               2740/2
         BNE   NOTMOD2                  NO
         SPACE
         NI    LCBERCCW+12,X'7F'        TURN OFF PARITY BIT
         CLI   LCBERCCW+13,X'76'        CIRCLE Y RESPONSE
         BE    GOODRSP                  YES
         CLI   LCBERCCW+12,8             ENTER, BID, PRINT, LOCAL
         BH    ERERROR .               REAL ERROR                S21101
         LH    RC,LCBTTCIN .            CURRENT  CONNECTED       S21101
         L     RA,AVTRNMPT .            CONVERSION CODE          S21101
         USING IEDQTNTD,RA                                       S21101
         BAL   RPREFIX,TNTDCODE .       LINK TO IT               S21101
         DROP  RA .                                              S21101
         L     RB,TRMDESTQ-1-IEDQTRM(,RB) . GET QCB ADDRESS      S21101
         B     TEST1ST .                TEST IF HEADER           S21101
GOODRSP  EQU   *
         CLI   LCBERCCW+12,X'01'        UNUSUAL POSITVE RESPONSE
         BE    NOTMOD2                  BRANCH NORMAL RESPONSE
         SPACE
         CLI   LCBRCB,X'0F'             HAVE WE RECORDED YET
         MVI   LCBRCB,X'0F'             SET RECORD FLAG
         BNE   ERPEXIT                  ERP WILL RECORD UNUSUAL
.L35A    ANOP                                                    S21101
NOTMOD2  EQU   *
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').Z41XX
         AIF   ('&GEN' EQ 'QTAM').Z41XX
         CLI   LCBTPCD+10,X'BD'         IS THIS FOR ERASURE         TSO
         BNE   NOTERASE                 BRANCH ON NO                TSO
         LR    RF,RCCW                  ADDRESS OF INTERRUPT CCW    TSO
         SH    RF,H8                    POINT TO WRITE ADDR CCW     TSO
         L     RF,0(RF)                 GET ADDRESS OF ADDR CHARS   TSO
         NI    2(RF),X'BF'              SET TO NO ERASE             TSO
         MVI   LCBTPCD+10,X'00'         RESET TP CODE               TSO
NOTERASE EQU   *
.Z41XX   ANOP
         TM    LCBCSW+3,UNEX            UNIT EXCEPTION
         BNZ   ERERROR                  YES, ERROR
.LC      ANOP
SKIPUE   EQU   *                                                SA69087
         TM    LCBSTAT2,LCBMSGNN        IS THIS MESSAGE GEN
         AIF   ('&GEN' NE 'BISC').Z41
         BO    EXIT2
         AGO   .Z42
.Z41     ANOP
         BO    TESTEX                   BRANCH YES
.Z42     ANOP
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').Z4
         AIF   ('&GEN' EQ 'QTAM').Z4
         CLI   LCBTPCD+11,X'BE'         IS THIS ENTRY FOR SMI     \>3
         BNE   LDENQ                    NO, BRANCH               \>3
         ST    R15,LCBERCCW+4           SAVE REG                SA54923
         L     12,AVTKA02               GET ADDRESS OF IOGENER    \>3
         LA    RAVT,AVTSAVE2            SET AVT BASE FOR IOGENER   \>3
         BALR  5,12                     LINK TO IOGENER           TSO
         L     R15,LCBERCCW+4           RESTORE REG             SA54923
         LA    RBASE,4095(R15)          RESET SECOND BASE REGISTER TSO
         LA    RBASE,1(RBASE)                                     TSO
         SH    RAVT,AVTBACK             RESET AVT ADDRESS         TSO
         B     RESTART                  RESTART CHANNEL PROGRAM    TSO
LDENQ    EQU   *                                                  TSO
.Z4      ANOP
         L     RB,LCBERBCH-1            1ST BUFFER IN CHAIN
         B     ENTER2                   ENTER LOOP
LOOP5    EQU   *
         LA    RD,0(,RD)                CLEAR HI ORDER BYTE
         LTR   RB,RD                    ADDRESS NEXT BUFFER AND
*                                         TEST IF LAST
         BZ    EXIT1                    BRANCH NO MORE BUFFERS
         SPACE
ENTER2   EQU   *
         L     RD,PRFLINK-1-IEDQPRF(,RB) SAVE LINK FIELD
         LR    RPREFIX,RB               ADDRESS FO BUFFER FOR READY
         MVI   PRFPRI,PRIMHBFR          POST PRIORITY
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RF,DCBMH-1               QCB FOR POST
         DROP  RA
         BAL   RC,ENQUEUE               PUT ON READYBQUEUE
         SPACE
         B     LOOP5                    TEST IF MORE TO POST
         SPACE
EXIT1    EQU   *
         IC    RD,LCBERBCH-1            SAVE HI ORDER BYTE
         ST    RB,LCBERBCH-1            CLEAR FIELD
         STC   RD,LCBERBCH-1            RESTORE HI ORDER BYTE
         AIF   ('&GEN' EQ 'BISC').Z5
TESTEX   EQU   *
         TM    LCBCHAIN,LCBEXCP         NO IDLES LOOP DEFINED
         BZ    EXIT2                    BRANCH NO
         SPACE
         TM    LCBSTAT2,LCBMSGNN        MSGGEN
         BZ    FREERQE                  NO
         LA    RCCW,LCBCPA-8            START ON MSGGEN MSG
.Z5      ANOP
EXIT2    EQU   *
         LA    RCCW,8(,RCCW)            RESTART ON NEXT CCW
EXIT3    EQU   *
         ST    RCCW,LCBSTART-1          START ADDRESS FOR IOS
         B     RESTART                  RESTART CHANNEL PROGRA,
         SPACE 5
         AIF   ('&GEN' EQ 'BISC').L39
RTRSPEB  EQU   *
         AIF   ('&GEN' NE '').L38
         TM    LCBSTAT2,LCBSYNC         BI SYNC
         BNZ   TRYBSC                   YES
.L38     ANOP
         L     RCCW,LCBCPA+12           CURRENT CCW
         TM    LCBCSW+3,UNEX            EOT RECEIVED
         BO    ERRSPEB                  BRANCH IF YES
         CLI   CCWCOUNT+1,AVTEZERO .    DID PGM CHECK OCCUR      S21101
         BE    IDLEST .                 BRANCH IF YES            S21101
         SPACE 1                                                 S21101
         MVC   SCBDEOB+1(3),LCBRECAD .  SET RESTART IN SCB       S21101
         MVC   SCBDEOB(1),LCBNTXT .     SET DISK Q INFORMATION   S21101
         MVC   SCBEOB,LCBRECOF .        SET OFSET INTO BUFFER    S21101
         MVI   LCBTPCD+2,TPBUFEOT .     SET TP OP CODE           S21101
         B     RESETEOT .               RESET LINE               S21101
         SPACE 1                                                 S21101
IDLEST   EQU   *                                                 S21101
         TM    LCBCHAIN,LCBEXCP         IDLES LOOP DEFINED
         BO    FREERQE                  BRANCH IF NO
         B     PCSTART                  START ON WRITE IDLES
.L39     ANOP
*        SEND EOT FOR BUFFERED TERMINALS AND ALSO FOR END OF TRANSP
*        MODE MESSAGE
RTBUFEOT EQU   *
ERBUFEOT EQU   *
         L     RCCW,LCBCPA+12           CURRENT CCW
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         BAL   RA,FINDBUFF              LINK TO FREE UP RPEVIOUS
         B     EOTSNT                   POST BUFFER TO DISPOSITON
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L40
         AIF   ('&GEN' EQ 'QTAM').L40
         AIF   ('&GEN' EQ '').LM4
RTRSPEB  EQU   *
.LM4     ANOP
TRYBSC   EQU   *
         TM    LCBSTAT2,LCBMSGNN        MSGGEN
         BNZ   RESETTM                  BRNCH IF YES
         L     RF,CHACKAD               CHECK RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO ROUTINE
         TM    LCBERCCW,RWACK .         WACK RECEIVED            S99228
         BZ    REGWACK .                BRANCH IF NO             S99228
         L     RF,LOOKAD                LOAD ADDR DVCCSTCS LOCRTNS99228
         BALR  RD,RF                    BRANCH TO DVCCSTCS LOCRTNS99228
         ST    RE,AVTDOUBX+FOUR         SAVE INVLIST CWORD ADDR  S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    REGWACK                  NO, NOT 3270 USUAL WACK  S99228
         XI    LCBMSGFM,LCBACKI         FLIP ACK COUNTER         S99228
         TM    LCBMSGFM,LCBACKI         ACK-0 EXPECTED?          S99228
         BZ    ZACK                     ACK-1 EXPECTED           S99228
         MVI   LCBERCCW,RACK0           SET ACK-0                S99228
         B     GOBACK                   BYPASS SET FOR ACK-0     S99228
ZACK     EQU   *                                                 S99228
         MVI   LCBERCCW,RACK1           SET ACK-1                S99228
GOBACK   EQU   *                                                 S99228
         XI    LCBMSGFM,LCBACKI         RETURN ACK COUNTER       S99228
REGWACK  EQU   *                                                 S99228
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
         TM    LCBMSGFM,LCBACKI .       TEST ACK COUNTER         S21101
         BZ    ITSACK1                  BANCH ACK-1 EXPECTED
         TM    LCBERCCW,RACK0           SET CONDITION CODE
TESTACK  EQU   *
         BO    ACKSET                   BRANCH RIGHT ACK RECEIVED
         BZ    CHKRVI                   NO, CHECK FOR RVI
*        TO HERE IF WRIONG ACK-I
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
CHKRTRY  EQU   *
         CLI   LCBINCAM,0               RETRY COUNT
         BNE   TESTCNT                  NOT FIRST TIME
         SPACE
         MVC   LCBCSWSV,LCBCSW          SAVE CSW
TESTCNT  EQU   *
         CLI   LCBINCAM,RETRY           RESTRY EXHAUSTED
         BL    BUMPCNT                  RETRY AGAIN
         SPACE
WREOT    EQU   *
         OI    LCBCHAIN,LCBNORTY        NO RETRY
         MVI   LCBTPCD+2,TPRESET        SET TP OPCDE
         B     RESETEOT                 SEND EOT TO RESET LINE
         SPACE
BUMPCNT  EQU   *
         IC    RWKA,LCBINCAM            GET RETRY COUNT
         LA    RWKA,1(,RWKA)            BUMP
         STC   RWKA,LCBINCAM            SET BACK
         B     ENQSND                   WRITE ENQ
*                                         READ RESPONSE CCW
         SPACE 3
ITSACK1  EQU   *
         TM    LCBERCCW,RACK1           TET FOR ACK1 RECIVED
         B     TESTACK                  USE COMMON CODE
CHKNAK   EQU   *
         TM    LCBERCCW,RNAK            TEST FOR NAK
         BZ    EOTTST                   BRANCH NO
NAKSAME  EQU   *
         CLI   LCBINCAM,RETRY           RETRY COUNTEXHAUSTED
         BNL   WREOT                    YES
         SPACE 2
MHEXIT   EQU   *
         MVI   LCBECBCC,PERMERR         SET ERROR INDICAOTR
         L     RPREFIX,LCBLSPCI-1       LAST SERVICED BUFFER
           SPACE
         B     ERRSPEB                  POST BUFFER TO MH
*                                         MH ERROR HANDLING
EOTTST   EQU   *
         TM    LCBERCCW,REOT            EOT SENT
         BZ    CHKRTRY                  C HECK RETRY COUNT
         L     RF,LOOKAD .              LOAD ADDR DVCCSTCS       S99228
         BALR  RD,RF .                  LINK TO ROUTINE          S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    NOEOTERP                 NO, SKIP ERP FLAG SET    S99228
         ST    R0,AVTDOUBX+FOUR         SAVE INVLIST POINTER    SA62341
         L     RF,FINDAD                LOAD ADDR DVC DEP SRC RT S99228
         BALR  RD,RF                    BRANCH TO DVC DEP SRC RT S99228
NOEOTERP EQU   *                                                 S99228
         SPACE
         OI    SCBERR2,SCBABRTN         SET ABORT RECEIVED
         B     ERRSPEB                  POST SENDING ERROR
CHKENQ   EQU   *
         TM    LCBERCCW,RENQ            ENQ RECEIVED
         BZ    CHKRTRY                  BEANCH IF NO
         SPACE
*        ENQ IS VALID RESPONSE IF THIS IS FIRST BLOCK OF CONVERSE
*      RESPONSE.  DESTINATION DID NOT SEE RESPONSE AND IS STILL
*      IN MASTER STATUS.
         TM    LCBSTAT1,LCBCVRSP        FIRST CLOCK OF CONVERSE MSG
         BO    NAKSAME                  BRANCH YES TREAT SAME AS NAK
         SPACE
CHKWK    EQU   *
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER BACK    S21101
         TM    LCBERCCW,RWACK           TEST FOR WACK RECEIVED
         BZ    CHKNAK                   TRY NAK
         CLI   LCBRSKEY,BUFF            BUFFERED LINE
         BNE   ENQSND                   WRITE ENQ
         L     RF,BSCRSPAD              LINK TO RWUTINE
         BALR  RD,RF                    LINK TO IT
ENQSND   EQU   *
*                                       SET TP OPCODE FOR WRITE SA69968
         MVI   LCBTPCD+10,TPENQAD       ENQ ADDRESSING DEFAULT  SA69968
         L     RWKA,LCBCSW-1            GET TRUE                SA69968
         LA    RWKA,AVTEZERO(,RWKA)      INTERRUPTED            SA69968
         SH    RWKA,H8                    CCW ADDRESS           SA69968
         LA    RA,LCBCPA                DERIVE                  SA69968
         SR    RWKA,RA                   TP                     SA69968
         SRL   RWKA,THREE                 OPCODE                SA69968
         AR    RWKA,RLCB                   OFFSET               SA69968
         DROP  RLCB                                             SA69968
         USING IEDQLCB,RWKA             INTERRUPTED ON READ     SA69968
         CLI   LCBTPCD,TPRDRSPD          RESPONSE TO ADDR       SA69968
         BE    SNDENQ                   YES, BRANCH             SA69968
         DROP  RWKA                                             SA69968
         USING IEDQLCB,RLCB                                     SA69968
         MVI   LCBTPCD+10,TPENQRSP .    SET TP OP CODE           S21101
SNDENQ   EQU   *
         LA    RA,ENQCH                SET ENQ INDEX
         LA    RWKA,LCBCPA+80 .         SET CCW ADDRESS          S21101
         BAL   RD,CCWBLD                LINK TO ROUTINE
         MVI   LCBCPA+84,CCWCC+CCWSLI . SET FLAGS                S21101
         ST    RCCW,LCBCPA+88 .         SET FOR TIC              S21101
         MVI   LCBCPA+88,CCWTIC .       SET TIC                  S21101
         B     RESTCOM                 RESTART
         SPACE
CHKRVI   EQU   *
         TM    LCBERCCW,RRVI           RVI RECEIVED
         BZ    CHKWK                    TRY WACK
         TM    LCBMSGFM,DBLRVI          TWO RVI'S BACK TO BACK
         BNZ   CHKRTRY                  BRANCH YES
         OI    LCBMSGFM,DBLRVI          SET RVI SWITCH
         B     GOACK                    SEND NEXT BLOCK
         SPACE
ACKSET   EQU   *
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCB .               BRANCH IF NO             S22026
         L     RCCW,SCBXTRA-1 .         SET REG                  S22026
         BAL   RA,FINDBUFF .            FREE UP BUFFERS          S22026
         L     RCCW,LCBCSW-1 .          RESTORE PREVIOUS         S22026
         SH    RCCW,H8 .                CCW                      S22026
NOTCONCB EQU   * .                                               S22026
         NI    LCBMSGFM,AVTEFF-DBLRVI   RESET RVI SWITCH
GOACK    EQU   *
         NI    LCBSTAT1,AVTEFF-LCBCVRSP RESET CONVERSE BIT-1ST BLOCK
*                                         TRANSMITTED SUCCESSFULLY
         MVI   LCBINCAM,0               RESET RETRY COUNT
         L     RF,BSCRSPAD              BSC RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO IT
.L40     ANOP
RESTCOM  EQU   *
         ST    RWKA,LCBSTART-1          RESTART ON WRITE CCW
         B     RESTART                  RESTART
         EJECT
*
*        READ ENQ FOR BSC TERMINAL LINE BID
*
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').L41
         AIF   ('&GEN' EQ 'QTAM').L41
RTRDENQ  EQU   *
         L     RF,CHACKAD               RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO IT
         SPACE
         TM    LCBSTAT2,LCBDIAL         DIAL LINE
         BNZ   ITSDIAL                  YES
         SPACE
         TS    LCBTSTSW                 TS ISSUED BY SEND SCHED
         BNZ   CLEANUP                  BRANCH YES
         SPACE
ITSDIAL  EQU   *
         TM    LCBERCCW,RDLEEOT         DLE EOT RECEIVED
         BZ    TESTEOT                  NO, TRY EOT
         SPACE
DISCON   EQU   *
         MVI   LCBTSTSW,AVTEFF          ENSURE A DIAL UP
         B     RTPOLL                   FREE UP ELEMENTS
         SPACE
TESTEOT  EQU   *
         TM    LCBERCCW,RENQ            ENQ RECEVIED
         BO    EXIT2                   YES
         SPACE
         TM    LCBERCCW,REOT            EOT RECEIVED
         BO    RTPOLL                   YES LINE CAN BE USED -OUTPUT
         SPACE
         TM    LCBSTAT2,LCBDIAL .      DIAL LINE                SA51068
         BO    RESTART .               NO, RESTART              SA51068
         MVI   LCBTSTSW,AVTEZERO .     YES, CLEAR FOR PREPARE   SA51068
         B     RESTART .               AND RESTART              SA51068
         SPACE 3
NOTENQRC EQU   *
         TM    LCBERCCW,REOT            EOT RECEIVED
         BO    ERRSPAD                  YES
         SPACE
         TM    LCBERCCW,RNAK            NAK
         BO    RESETTM                  YES
         SPACE
         TM    LCBERCCW,RWACK           WACK RECEIVED
         BZ    TSTRTRY                  NO, INVALID RESPONSE
AGAINTRY EQU   *
         MVI   LCBTPCD+10,TPENQAD .     SET TP OP CODE           S21101
         B     SNDENQ                   WRITE ENQ UNTIL READY
         SPACE 10
*
*        READ RESPONSE TO ENQ.  SELECTION OF TERMINAL ON A PT-PT OR
* DIAL LINE (BSC).
*
RTRSPENQ EQU   *
         L     RF,CHACKAD               CHECK RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO ROUTINE
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
         TM    LCBERCCW,RACK0           ACK-0
         BO    EXIT2                    BRANCH YES
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
         CLI   LCBERCCW,RENQ            ENQ RECEIVED
         BNE   NOTENQRC                 BRANCH NO
         TM    LCBSTAT2,LCBDIAL         DIAL LINE
         BZ    CONTENT                  NO, WE HAVE CONTENTION   S99244
         SPACE
TSTRTRY  EQU   *
         CLI   LCBINCAM,RETRY           RETRY LIMIT REACHED
         BL    CHKRTRY                  NO, RERY
.L41     ANOP
RESETTM  EQU   *
         MVI   LCBTPCD+2,TPRSPAD        TP OP CODE FORE RESET IN
*                                         CONTROL MODE SELECTION
         B     RESETEOT                 WRITE EOT
 SPACE 10
*
*        ENTRY FROM CLOSE MODULE TO RECORD ERROR COUNTERS IN TERMINAL
* ENTRY BY  EXITING TO ERP.  ERP POST S PERMANENT ERROR  ON RETURN
* WHICH WILL POST WAIT COMPLETE.
*
RTCLOSE  EQU   *
         OI    LCBFLAG1,X'20'           SET ERP IN CONTROL FOR CLOSE
ERPEXIT  EQU   *
         OI    LCBFLAG1,IOBEXEP         SET FLAG TO ROUTE CONTROL TO
*                                         ERP
         B     ERP                      EXIT
         SPACE 3
         AIF   ('&GEN' EQ 'BISC' OR '&GEN' EQ 'MINI').L42
         AIF   ('&GEN' EQ 'QTAM').L42
RTPREP   EQU   *                                                    TSO
         LA    RPREFIX,LCBERB           ELEMENT TO POST
         MVI   PRFPRI,PRIDSPLB          LOW PRIORITY
         L     RF,AVTTSOPT              ADDRESS OF TSO AREA
         L     RF,TSIHALT-IEDQTSI(,RF)  ADDRESS OF AYF
         MVI   LCBSTAT1,LCBSENDN        CHANGE LINE STATUS      SA58997
         B     POSTEXIT                 BRANCH TO POST
         SPACE 3
RTWRBRK  EQU   *                                                    TSO
         L     RCCW,LCBLSPCI-1          GET ADDRESS OF BUFFER       TSO
         TM    PRFSTAT1-IEDQPRF(RCCW),PRFNHDRN IS IT FIRST BUFFER   TSO
         BO    RESCSW                   BRANCH ON NO                TSO
         L     RCCW,PRFIOADR-1-IEDQPRF(,RCCW) GET ADDRESS OF DATA   TSO
         CLI   1(RCCW),0                ANY DATA ENTERED            TSO
         BE    CLEANUP                  BRANCH ON NO                TSO
RESCSW   EQU   *                                                    TSO
         MVC   LCBCSW,LCBCSWSV .        RESTORE ENDING STATUS       TSO
         XC    LCBCSWSV,LCBCSWSV .      CLEAR IT                    TSO
         L     RCCW,LCBCSW-1            GET CSW CCW ADDR            TSO
         SH    RCCW,H8                  BACK UP TO INTERRUPTED CCW  TSO
         CLI   CCW,CCWBREAK             IS IT A WRITE BRK           TSO
         BE    CLEANUP                 BRANCH IF YES, GO CLEANUP    TSO
         TM    LCBTSOB,LCB2741N         IS IT A 2741?               TSO
         BZ    ITS1050                  BRANCH ON NO                TSO
         MVI   LCBCSW+3,CEDE            MOVE IN GOOD ENDING STATUS  TSO
         B     TSO2 V                                               TSO
ITS1050  EQU   *
         L     RCCW,LCBCSW-1 .          SEE IF A TIC                TSO
         CLI   CCW,CCWTIC .             WAS READ INTERRUPTED        TSO
         BNE   CLEANUP .                NO                          TSO
         MVI   LCBCSW+3,CEDE+UNEX       MOVE IN ENDING STATUS       TSO
         B     TSO2                                                 TSO
         SPACE
.L42     ANOP
         AIF   ('&GEN' EQ 'MINI').L42A
         AIF   ('&GEN' EQ 'STSP').L42A
         AIF   ('&GEN' EQ 'QTAM').L42A
RDLCOUT  EQU   *
         L     RF,SCANAD                SCAN ADDRESS
         BALR  RD,RF                    LINK TO ROUTINE
RDLCENT  EQU   *
         TM    LCBMSGFM,LCBEOT+LCBENQ . DLEEOT=SUM OF EOT AND ENQS21101
         BNO   NOTDLEOT                 BRANCH NO
         MVI   LCBTSTSW,AVTEFF          FORCE NEW CONNECTION
         B     BSEOT                    USE EOT CODE
NOTDLEOT EQU   *
         TM    LCBMSGFM,LCBEOT .        EOT RECEIVED             S21101
         BZ    NOEOT                    BRANCH N
         SPACE 1                                                SA68035
         BAL   RD,CHKNEG                SET NEG RESP IF NEEDED  SA68035
         SPACE
BSEOT    EQU   *
         L     RCCW,LCBCPA+12           CURRENT UNIT
         L     RWKA,CCWADDR-1           DATA ADDRESS
         MVC   0(1,RWKA),LCBERCCW+12    GET EOT INTO BUFFER
         MVI   LCBERCCW,NOPCI           SET ROUTINE PARAMETER
         BAL   RA,FINDBUFF              GET BUFFER BASE
         LH    RC,PRFSIZE .             GET PREFIX SIZE          S21101
         LTR   RC,RC                    TEST ZERO LENGTH-POSSIBLES22025
*                                         IF ETB (ETX) WAS FIRST S22025
*                                         CHAR OF BUFFER AND WAS S22025
*                                         PROCESSED THROUGH MH   S22025
         BNZ   BUMPSIZE
         L     RB,LCBDCBPT              GET DCB BASE             S22025
         IC    RC,DCBRESER+1-IHADCB(RB) ASSUME TEXT BUFFER       S22025
         LA    RA,AVTTXTSZ              FOR PRFSIZE              S22025
         TM    PRFSTAT1,PRFNHDRN        HEADER                   S22025
         BO    SETSIZE                  BRANCH IF TEXT BUFFER    S22025
         IC    RC,LCBISZE               GET HEADER RESERVES      S22025
         LA    RA,AVTHDRSZ              SET HEADER SIZE          S22025
SETSIZE  EQU   *                                                 S22025
         AR    RC,RA                    PREFIX SIZE + IDLES      S22025
BUMPSIZE EQU   *                                                 S22025
         LA    RC,ONE(,RC) .            BUMP FOR EOT             S21101
         BAL   RB,CKBFMM .              DONT WANT EOT IN BUFER IFS21101
*                                         NOT REAL EOM           S21101
         B     MHPOST .                 NOT REAL EOM             S21101
         B     LCINS                    DONT REMOVE THIS BRANCH  S99228
*                                       CKBFMM RETURNS HERE      S99228
.L42A    ANOP
         SPACE 10
*
*        WRITE RESPONSE (UNCHAINED) FOR RECEIPT OF MESSAGE FROM
* TERMINAL WHICH HAS NO CONTINUE CAPABILITY (1030/1060).
*
RTWRRSP  EQU   *
         L     RCCW,LCBCPA+12          LAST SERVICED BUFFERR UNIT
         OI    LCBCSW+3,UNEX            INDICATE END OF MESSAGE
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         BAL RA,FINDBUFF                POST PREVIOUS BUFFERS AND
*                                         GET BUFFER BASE  FOR UNIT
         B     POSTMSG                  POST MESSAGE TO MH
         AIF   ('&GEN' EQ 'STSP').L42B
         AIF   ('&GEN' EQ 'MINI').L42B
         AIF   ('&GEN' EQ 'QTAM').L42B
 SPACE 5
NOEOT    EQU   *
         TM    LCBMSGFM,LCBENQ .        EQN RECEIVED             S21101
         BO    ITSENQ .                 BRANCH IF ENQ            S22025
         SPACE
         TM    LCBMSGFM,LCBTTD .        TTD                      S22025
         BO    ITSTTD .                 BRANCH IF YES            S22025
         SPACE
         LA    RCCW,LCBCPA+24 .         ASSUME BAD DATA CHARACTERS22025
         NI    LCBMSGFM,LCBNAK+LCBACKI+LCBOLT REXET FLAGS        S22025
         B     EXIT3 .                  RESTART                  S22025
         SPACE
ERLCOUT  EQU   *                        ERROR ENTRY
.L42B    ANOP
ERWRRSP  EQU   *
         L     RCCW,LCBCPA+12           CURRENT CCW
         OI    LCBCSW+3,UNEX            INDICATE END OF MESSAGE
POSTALL  EQU   *
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         BAL   RA,FINDBUFF              LINK TO FREE UP RPEVIOUS
         B     ERRPOST
         SPACE
         AIF   ('&GEN' EQ 'BISC').L43
         AIF   ('&GEN' EQ 'MINI').L43
OPCHK    EQU   *
         L     RF,OPCHKAD               GET ROUTINE ADDRESS
         BR    RF                             TSO
 EJECT
.L43     ANOP
*
* EXIT TO BUILD A WRITE EOT.  THIS EXIT EXPECTS TP OP CODE TO BE SET.
*
RESETEOT EQU   *
          NI    SCBBSCFM,AVTEFF-SCBNOEOT RESET FLAG FOR SCHEULER S21101
*                                          ACTIVATE FOR BSC DIAL S21101
*                                          THAT RECEIVE OP IS NEXS21101
*                                          AND EOT WAS SENT      S21101
         MVI   LCBINCAM,0               CLEAR RETRY COUNT FOR RESET
         SR    RA,RA                   EOT INDEX
         LA    RWKA,LCBCPA+16           CCW BUILD AREA
         BAL   RD,CCWBLD               BUILD SEQUENCE
         B     RESTCOM                 RESTART
 SPACE 10
*
* READ ID ENQ FOR BSC DIAL LINE.
*
         AIF   ('&GEN' EQ 'MINI').L45
         AIF   ('&GEN' EQ 'STSP').L44
         AIF   ('&GEN' EQ 'QTAM').L44
RTIDENQ  EQU   *
         CLI   LCBINCAM,0               FIRST TIME
         BNE   NOTSTEST                 BRANCH NOT FIRST TIME
         TS    LCBTSTSW                 HIO TO BE DONE
         BNZ   CLEANUP                  YES
NOTSTEST EQU   *
         L     RF,CHACKAD               RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO IT
         CLI   LCBERCCW,RENQ            ENQ RECEIVED
         BE    CHKID                    YES
         CLI   LCBINCAM,RETRY           RETRY LIMIT REACHED
         BNL   DISCON                   BRANCH IF YES
         SPACE
TRYRDID  EQU   *
         CLI   LCBINCAM,0               FIRST TIME
         BNE   BUMP                     NO
         MVC   LCBCSWSV,LCBCSW          SAVE CSW
BUMP     EQU   *
         IC    RA,LCBINCAM              GET RETRY COUNT
         LA    RA,1(,RA)                BUMP
         STC   RA,LCBINCAM              RESTORE
         B     EXIT3                    RESTART ON READ ID ENQ
         SPACE
CHKID    EQU   *
         L     RF,IDCHKAD               CHECK ID RWOUINTE
         BALR  RD,RF                    LINK TO IT
         B     EXIT2                    NORMAL REURN
         B     TRYRDID                  RETRY READ ID
         SPACE 10
*
*        READ ID ACK-0 FOR BSC DIAL LINE.
*
RTIDACK  EQU   *
         L     RF,CHACKAD               RESPONSE ROUTINE
         BALR  RD,RF                    LINK TO IT
         L     RF,IDCHKAD               CHECK ID RWOUINTE
         BALR  RD,RF                    LINK TO IT
         B     CHKCPU                   DETERMINE WHERE TO RESTART
STWRENQ  EQU   *
         MVI   LCBECBCC,PERMERR .       ASSUME RETRY EXHAUSTED   S21101
         CLI   LCBINCAM,RETRY .         IS RETRY EXHAUSTED       S21101
         BNL   ERIDACK .                BRANCH YES               S21101
         LA    RCCW,LCBCPA+40           WR ID (ENQ) CCW
         B     TRYRDID                  ATTEMPT RTETRY
         SPACE
CHKCPU   EQU   *
         TM    LCBSTAT1,LCBRECVN        RECEIVE STE (DIAL UP OPTION)
         BO    EXIT2                    BRANCH IF YES
         TM    CCWFLAGS,CCWSLI          THIS CPU OR END-END CTL
         BNZ   BSCADD                   BRANCH IF CPU
         SPACE
         TM    LCBERCCW,RACK0           ACK0 RECEIVED
         BNO   STWRENQ                  NO RETRY ID ENQ
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER BACK    S21101
         B     EXIT2                    RESTART ON NEXT CCW
         SPACE 10
.L44     ANOP
*
*        READ ID FROM TWX
*
RTTWXID  EQU   *
         TM    LCBSTAT1,LCBRECVN        DIAL UP OPTION
         BO    EXIT2                    BRANCH YES
         L     RF,IDCHKAD               ID SCAN ROUTINE
         BALR  RD,RF                    LINK TO IT
         B     ADDROK                   NORMAL RETURN
         B     ERERROR                  INVALID ID
         EJECT
.L45     ANOP
ERCLOSE  EQU   *
*
*        RETURN FROM ERP AFTER IGE0904G HAS INTERFACED WITH OBR
* TO RECORD TEMPORARY ERROR COUNTERS IN TERMINAL ENTRIES.
*
         LA    RC,FREERQE               SET EXIT
         B     POSTECB                  POST ECB FOR CLOSE
         SPACE 10
*
*        ABORT RETURN FOR BOTH SEND AND RECEIVE OPERATIONS.  SEQUENCE
* INITIATED BY LINE END OR IEDQBT.
*
RTTXTRST EQU   *
ERTXTRST EQU   *
         TM    LCBSTAT1,LCBRECVN        RECEIVE STATE
         BZ    ERRSPEB                  NO, IT'S SEND
         SPACE
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         L     RCCW,LCBCPA+12           LAST BUFFER
         BAL   RA,FINDBUFF              LINK TO FREE UP RPEVIOUS
         B     ERRPOST                  POST BUFFER WITH ERROR
         SPACE 10
*
*        ERROR IN RESPONSE TO TEXT
*
ERRSPEB  EQU   *
         TM    LCBSTAT2,LCBMSGNN        MSGGEN
         BNZ   RESETTM                  BRANCH IF YES
         L     RCCW,LCBCPA+12           UNIT ADDRESS
HIOERR   EQU   *
         AIF   ('&GEN' EQ 'MINI').M3
         AIF   ('&GEN' EQ 'STSP').M3
         AIF   ('&GEN' EQ 'QTAM').M3
         TM    SCBSTATE,SCBTRANP        TRANSPARENT
         BZ    NOTTRNP                  BRANCH NO
         SPACE
         L     RCCW,LCBCPA+52           CURRENT CUNIT ADDRESS
         MVC   CCW+9(3),LCBCPA+57       LINK NEXT TO CURRENT
NOTTRNP  EQU   *
.M3      ANOP
         MVC   LCBNTXT(1),SCBDEOB       SAVE DISK OFFSET
         MVC   LCBRECAD(3),SCBDEOB+1    SAVE DISK RECORD ADDRESS
         MVC   LCBRECOF,SCBEOB          SAVE OFFSET INTO BUFFER
         MVC   LCBCPA+16(8),CCW         SAVE FOR POSSIBLE MH START
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         AIF   ('&GEN' EQ 'MINI').CONC2A                         S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BZ    FREEBUF                  BRANCH IF NO            SA57672
         TM    SCBERR4,SCBSLCTN         SELECTION ERROR         SA57672
         BZ    SENDERR                  BRANCH IF NO            SA57672
         NI    SCBERR4,AVTEFF-SCBSLCTN  RESET ERROR BIT         SA57672
         OI    LCBCHAIN,LCBNORTY        SET NO RETRY            SA57672
         B     SENDERR                  GO POST WITH ERROR      SA57672
FREEBUF  EQU   *                                                SA57672
.CONC2A  ANOP                                                    S22026
         BAL   RA,FINDBUFF              LINK TO FREE UP RPEVIOUS
         NI    PRFTIC,AVTEFF-PRFEOMSG . RESET NOT REAL END OF MSGS21101
         BAL   RC,ERBCT                 UPDATE ERB COUNT FOR BUFFERS
         B     SENDERR                  SEDN ERROR
         SPACE 10
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'QTAM' ).NTSO1    SA48276
         AIF   ('&GEN' EQ 'BISC' ).NTSO1                        SA48276
RTRSPMG  EQU   *                                                SA48276
ERRSPMG  EQU   *                                                SA48276
         CLI   LCBERCCW+12,X'06'        ACK RECEIVED            SA48276
         BE    ERBPOST                  MSGGEN RECEIVED OK IF SOSA48276
         MVI   LCBCSW+3,CEDE            SET GOOD ENDING STATUS  SA48276
         L     RWORK,LCBSTART-1         GET CCW                 SA48276
         L     RWORK,0(,RWORK)          ADDRESS OF DATA         SA48276
         CLC   0(3,RWORK),STARS         WAS IT ***              SA48276
         BNE   ERBPOST                  IF NOT, IGNORE IT       SA48276
         LH    RC,LCBTTCIN              GET CONNECTED INDEX     SA48276
         L     RA,AVTRNMPT              TERM NAME ROUTINE       SA48276
         USING IEDQTNTD,RA              ADDRESSABILITY          SA48276
         BAL   RPREFIX,TNTDCODE         GET TERM ENTRY ADDRESS  SA48276
         USING IEDQTRM,RB               ADDRESSABILITY          SA48276
         L     RB,TRMDESTQ-1            DESTINATION QCB ADDRESS SA48276
         DROP  RA,RB                    DROP UNUSED REGS        SA48276
         USING IEDQQCB,RB               ADDRESSABILITY FOR QCB  SA48276
         OI    QCBTSOF1,QCBSATRD        TO TRY AGAIN LATER      SA48276
         MVC   LCBTTBIN,LCBTTCIN        FOR RETRY               SA48276
         NI    QCBTSOF2,X'FF'-QCBSIMRD  FOR RETRY               SA48276
         DROP  RB                       THROUGH WITH QCB        SA48276
         B     ERBPOST                  OPERATION COMPLETE      SA48276
STARS    DC    X'4A4A4A'                THREE ASTERISKS SATRD   SA48276
         DS    0H                                               SA48276
.NTSO1   ANOP                                                   SA48276
*
*        SELECTION ERRORS.
*
NOGEN    EQU   *
ERTWXID  EQU   *
ERRSPENQ EQU   *
ERRSPAD  EQU   *
RTRESET  EQU   *
ERIDENQ  EQU   *
ERIDACK  EQU   *
ERRESET  EQU   *
ERERROR  EQU   *
RTRSPAD  EQU   *
         TM    LCBSTAT2,LCBMSGNN        MESSAGE GEN
         BO    ERBPOST                  BRANCH YES
         OI    SCBERR4,SCBSLCTN        INDICATE SELECTION ERROR
         TM    LCBSTAT1,LCBRECVN         RECEIVE STATE
         BZ    ADDERR                   ADDRESSING ERROR
         OI    LCBSTAT2,LCBNEGRP        INDICATE NEGATIVE RESPONSE
         L     RPREFIX,LCBLSPCI-1       POST FIRST BUFFER TO BD
         AIF   ('&GEN' NE '' AND '&GEN' NE 'BISC').M3A           S21101
         TM    SCBQTYPE,SCBBFMM .       ARE WE ATTEMPTING TO READS21101
*                                         SUBSEQUNET PART OF MSG S21101
*                                         E.G. LMD OR ENQ MODE   S21101
         BO    POSTPERM .               BRANCH YES, ERP HAS SET  S21101
*                                         HEADER TO TEXT AND SET S21101
*                                         PRFSIZE TO REFLECT EOT S21101
*                                         MOVED INTO BUFFER      S21101
.M3A     ANOP .                                                  S21101
MHERR    EQU   *
         SR    RC,RC                    CLEARF OR 0 LENGTH BUFFER
         STH   RC,PRFSIZE               CLEAR PREFIX SIZE
POSTPERM EQU   * .                                               S21101
         NI    PRFSTAT1,PRFNLSTF        MARK IT LAST
         MVI   PRFPRI,PRIMHBFR-1        SET POST PRIORITY
         B     POSTERR                  POST IT TO MH
*                                       MHAND EXIT
         SPACE 3
ADDERR   EQU   *
         L     RCCW,LCBLSPCI-1          LAST SERVICED BUFFER
         OC    LCBLSPCI,LCBLSPCI        DO WE HAVE BUFFER
         BNZ   HIOERR                   BRANCH IF YES
         SPACE
         OC    LCBERBCH,LCBERBCH        BUFFERS POSTED TO MH
         BZ    GOIDLES                  YES, WAIT FOR BUFFERS
         OI    SCBERR4,SCBSLCTN .      SET SELECTION ERROR      SA44893
         AIF   ('&GEN' EQ 'MINI').M4
         CLI   LCBECBCC,PERMERR         HARD ERROR
         BNE   NOREDIAL                 BRANCH NO
         MVI   LCBTSTSW,AVTEFF          ENSURE A RE-DIAL
         OI    LCBSTAT2,LCBNEGRP        SET NEGATIVE RESPONSE-
*                                       OF DIAL OUT CALL Q
NOREDIAL EQU   *
.M4      ANOP
         L     RA,LCBERBCH-1            FIRST BUFFER IN CHAIN
         L     RD,PRFLINK-1-IEDQPRF(,RA) GET NEXT BUFFER -RETURN
ERRLOOP  EQU   *
         LA    RD,0(,RD)                CLEAR HI ORDER BYTE
         LTR   RPREFIX,RD               ANOTHER BYFFER
         BZ    NONE                     BRANCH NO
         SPACE
         L     RD,PRFLINK-1-IEDQPRF(,RD) SAVE LINK FIELF
         MVI   PRFPRI,PRILNEND          SET POST PRIORITY
         LA    RF,AVTBFRTB              QXB FOR POST
         BAL   RC,ENQUEUE               PUT ON READY Q
         B     ERRLOOP                  GET NEXT BUFFER
         SPACE  2
NONE     EQU   *
         XC    LCBERBCH(3),LCBERBCH     CLEAR FIELD
         LR    RPREFIX,RA               GET 1ST BUFFER SAVED
         TM    SCBBSCFM,SCBCNTEN .      UNUSUAL ADDRESSING RESPONS21101
         BZ    NOLMT                    NO, THIS IS NOT BUFF BUSY
         SPACE
         AIF   ('&GEN' EQ 'MINI').M5
         AIF   ('&GEN' EQ 'STSP').M5
         AIF   ('&GEN' EQ 'QTAM').M5
         TM    SCBERR1,SCBRVISL         RVI TO SELECTION
         BZ    NORVISL                  NO
         OI    LCBCHAIN,LCBNORTY        TEXT ERROR AND NO RETRY
         B     SENDERR                  POST TO MH
         SPACE
NORVISL  EQU   *
.M5      ANOP
         MVC   SCBDEOB+1(3),PRFCRCD     FOR BUFFER BUSY -BUFF TERM
         MVC   SCBDEOB(1),PRFNTXT       SXBDEOB UPDATED BY FA
         IC    R0,LCBLSPCI-1            SAVE HO ORDER BYTE
         ST    RA,LCBLSPCI-1            SET BUFFER ADDRESS
         OI    PRFTIC-IEDQPRF(RA),PRFEOMSG    NOT REAL EOM      SA70874
         STC   R0,LCBLSPCI-1            SET  HI ORDER BYTE
         AIF   ('&GEN' EQ 'MINI').CONC2B .                       S22026
         TM    SCBQTYPE,SCBCONC .      CONCENTRATOR              S22026
         BO    MHERR .                 BRANCH IF YES             S22026
.CONC2B  ANOP .                                                  S22026
         NI    SCBERR4,SCBSLCTF .      TURN OFF SELECTION ERROR  S22026
         LA    RA,AVTBFRTB              SET SCBDESTQ TO BUFFER
*                                         RETURN IN EVENT ERROR
*                                         OCCURS ON NEXT OPERATION
*                                         ZERO LENGTH BUFFER WILL
*                                         NOT BE QUEUED.
         IC    R0,SCBDESTQ-1            SAVE HI ORDER BYTE
         ST    RA,SCBDESTQ-1            SET UP DESTQ
         STC   R0,SCBDESTQ-1            RESTORE HI ORDER BYTE
         B     CLEANUP                  POST TO DISPOSTIION
NOLMT    EQU   *
         NI    SCBQTYPE,AVTEFF-SCBBFMM  RESET MIDDLE OF MSG BIT
         B     MHERR                    YES, ERROR EXIT
         EJECT
RTEAU    DS    0H                                                S99228
         L     RPREFIX,LCBLSPCI-ONE     1ST BUFFER ADDR          S99228
         LA    RPREFIX,ZERO(RPREFIX)    CLEAR HO BYTE            S99228
         NI    PRFSTAT1,PRFNLSTF        MARK BUFFER AS LAST      S99228
         OI    LCBERBST,LCBERROR        INDICATE ERROR CONDITION S99228
*                                       SO BD WILL FREE ALL      S99228
*                                       BUFFERS                  S99228
*                                                                S99228
*        USE POST EXIT FROM LINE END                             S99228
*                                                                S99228
         MVI   PRFPRI,PRILNEND          SET POST PRIORITY        S99228
         L     RF,AVTMSGS-ONE           VCON TABLE ADDRESS       S99228
         L     RF,ZERO(RF)              BUFFER DISPOSITION       S99228
         B     POSTEXIT                 EXIT                     S99228
         EJECT                                                   S99228
TEXT     EQU   *
         MVI   LCBTSTSW,XF0             FOR 2260L AND DIAL
         LA    RWKA,LCBERCCW+8          THIS OWED RESPONSE
*                                         WRITE ACK (NAK)
         CLR   RWKA,RCCW                THIS THE ERRROR
         BNE   NOTCONV                  BRANCH IF NO
         SPACE
         LA    RCCW,LCBCPA+16           SET NEW START ADDRES
         MVI   LCBINCAM,0               RESET RETRY COUNT
         B     EXIT3                    EXIT FOR RESTART
NOTCONV  EQU   *
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'STSP' OR '&GEN' EQ 'QTAMC
               ').M66                                           SA68035
         BAL   RD,CHKNEG                SET NEG RESP IF NEEDED  SA68035
.M66     ANOP                                                   SA68035
         CLI   CCWOPCDE,CCWTIC          CCW A TC - PROG CHECK
         BNE   NOTIC                    BRANCH IF NO
         AIF   ('&GEN' EQ 'MINI').LR40
         TM    LCBSTAT1,LCBRECVN        RECEIVE STATE?           S99228
         BZ    NODEV                    NO PCI RECVY ON SEND     S99228
         L     RF,LOOKAD .              LOAD ADDR DVCCSTCS       S99228
         BALR  RD,RF .                  LINK TO ROUTINE          S99228
         ST    RE,AVTDOUBX+FOUR .       SAVE INVLIST CWORD ADDR  S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    NODEV                    BRANCH NO                S99228
         TM    LCBDCT2,CLOCAL           LOCAL DEVICE?            S99228
         BZ    NODEV                    BRANCH NO                S99228
         L     RDCB,LCBDCBPT            SET DCB ADDR             S99228
         USING IHADCB,RDCB                                       S99228
         TM    DCBPCI,RCVPCI            TEST FOR REC PCI         S99228
         DROP  RDCB                                              S99228
         BZ    NODEV                    NO LOCAL PCI SPEC        S99228
         SR    RB,RB                    CLEAR RETRY COUNT REG    S99228
         IC    RB,LCBPCIRC              INSERT PCI RETRY COUNT   S99228
         LA    RB,ONE(R0,RB)            INCREMENT RETRY COUNT    S99228
         STC   RB,LCBPCIRC              STORE INCREASED COUNT    S99228
         CLI   LCBPCIRC,THREE           COUNT AT MAXIMUM?        S99228
         BNH   RESTART                  RETRY AGAIN              S99228
NODEV    EQU   *                                                 S99228
.LR40    ANOP
         SH    RCCW,H8                  BACK UP TO CCW
         MVI   LCBCSW+6,0               INDICATE END OF BUFFER
         SPACE
NOTIC    EQU   *
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RD,DCBMH-1               MH ADDDRESS
         AIF   ('&GEN' EQ 'MINI').ME2                            S22029
         AIF   ('&GEN' EQ 'QTAM').ME2                            S22029
         NC    ONE(THREE,RD),ONE(RD)    ALTERNATE MH SPECIFIED?  S22029
         BZ    OWNMHLC                  BRANCH NO                S22029
         NC    LCBTTCIN,LCBTTCIN        IS CONNECTED INDEX ZERO  S22029
         BZ    OWNMHLC                  YES - USE OWNING MH LC   S22029
         L     RWKA,FNDQCBAD .          GET ADDR OF ROUTINE USED S22029
*                                       TO FIND THE DEST QCB     S22029
         BALR  RE,RWKA .                GET DEST QCB ADDRESS     S22029
         LR    RE,R0 .                  FOR CONNECTED MH TEST    S22029
         TM    QCBDSFLG-IEDQQCB(RE),QCBALTMH IS TERMINAL         S22029
*                                       CONNECTED TO ALTMH       S22029
         BZ    OWNMHLC .                NO - USE OWNING MH LC    S22029
         L     RD,AVTEZERO(RD) .        GET ALTERNATE MH QCB     S22029
OWNMHLC  EQU   * .                                               S22029
.ME2     ANOP
         MVC   LCBERCCW+1(1),12(RD)     MOVE AE INDEX AND FLAGS  S22025
         NI    LCBERCCW+1,LMD           ONLY LMD FLAGS REMAIN    S22025
         OC    LCBERCCW+1(1),4(RD)      ADD OTHER FLAGS          S22025
         LA    RCCW,AVTEZERO(,RCCW)     CLEAR HI ORDER BYTE
         AIF   ('&GEN' EQ 'MINI').Z7
         CLI   LCBCPA+24,CCWPOLL        HEADER ON AUTOPOLL
         BE    AUTOSRC                  YES-DETERMINE SOURCE    SA59028
         L     RF,LCBDCBPT              LOAD DCB OFFSET         SA64386
         CLI   DCBEIOBX-IHADCB(RF),X'C8'  LCB LESS THAN C8 LONG SA64386
         BL    RESUME                   YES, SKIP AUTOPOLL TEST SA64386
         CLI   LCBCPA+53,AVTEFF         ERP FOR AUTOPOLL DONE   SA59028
         BNE   RESUME                   NO - NOT AUTOPOLL       SA66604
AUTOSRC  EQU   *                        AUTO SECTION
         SPACE
         L     RF,POLLAD                ATUOPOLL SOURCE ROUINE
         BALR  RD,RF                    LINK TO IT
RESUME   EQU   *
         L     RF,LOOKAD .              LOAD ADDR DVCCSTCS       S99228
         BALR  RD,RF .                  LINK TO ROUTINE          S99228
         ST    RE,AVTDOUBX+FOUR .       SAVE INVLIST CWORD ADDR  S99228
         L     RE,AVTDOUBX .            LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270 .          3270 DEVICE              S99228
         BZ    NOCOUNT .                BRANCH IF NO             S99228
         TM    LCBDCT2,CLOCAL           LOCAL DEVICE             S99228
         BZ    NOCOUNT .                BRANCH IF NO             S99228
         MVI   LCBPCIRC,ZERO .          RESET PCI RETRY COUNT    S99228
NOCOUNT  EQU   *                                                 S99228
.Z7      AIF   ('&GEN' NE '').L49
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BZ    NOTBSC                   NOT BSC
.L49     AIF   ('&GEN' EQ 'STSP').L50
         AIF   ('&GEN' EQ 'MINI').L50
         AIF   ('&GEN' EQ 'QTAM').L50
         TM    LCBSTAT1,LCBRECVN        RECEIVE OPERATION
         BZ    NOTREAD                  NO
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BE    NOTBSC                   YES, SKIP SCAN
         TM    LCBMSGFM,LCBVSTRT+LCBRSTRT >TART BITS ALREADY CHECS21101
         BNZ   NORM                     YES
         L     RF,SCANAD                SCAN ADDRESS
         BALR  RD,RF                    LINK TO ROUTINE
         SPACE
NORM     EQU   *
         TM    LCBMSGFM,LCBEOT+LCBENQ . DLEEOT=SUM OF EOT AND ENQS21101
         BNO   NOHANGUP                 BRANCH NO
         MVI   LCBTSTSW,AVTEFF          FORCE NEW CONNECTION NEXT
         B     NOTBSC                   CONTINUE PROCESSING
NOHANGUP EQU   *
         TM    LCBMSGFM,LCBOLT .        OLT REQUEST              S21101
         BZ    NOOLT                    BRANCH IF NO
         MVI   LCBERCCW+1,IN            FORCE LCIN AND READ TILL EOT
NOOLT    EQU   *
         TM    SCBBSCFM,SCBTRNSP        RECEIVE TRANSPARENT
         BZ    DONTSET                  NO
         SPACE
         NI    LCBERCCW+1,AVTEFF-IN     FORCE LCOUT FOR TRANSPARENT
DONTSET  EQU   *
         SPACE
         TM    LCBMSGFM,LCBTTD .        TTD RECEIVED             S21101
         BZ    NOTTD                    NO
         SPACE
GOTTTD   EQU   * .                                              SA44892
ITSTTD   EQU   * .                                               S22025
         OI    LCBMSGFM,LCBNAK .        RESPONE FOR TTD          S21101
GOEXIT   EQU   *
         L     RCCW,LCBCPA+12
         MVC   LCBCPA+16(8),CCW         SAVE CCW
         B     GOIOGEN                  EXIT TO RESTART
         SPACE
NOTTD    EQU   *
         TM    LCBMSGFM,LCBENQ .        EQN RECEIVED             S21101
         BZ    NOTBSC                   NO
         CLI   LCBINCAM,RETRY           RETRY EXHAUSTED         SA61094
         BL    BUMPIT                   BR, NO SEND ACK AGAIN   SA61094
         MVI   LCBINCAM,AVTEZERO        RESET ENQ COUNTER       SA61094
         OI    LCBCHAIN,LCBABRTN        SEND AN EOT             SA61094
         B     ITSENQ                   BR                      SA61094
BUMPIT   EQU   *                                                SA61094
         IC    RCCW,LCBINCAM            CURRENT ENQ COUNTER     SA61094
         LA    RCCW,ONE(,RCCW)          INCREMENT               SA61094
         STC   RCCW,LCBINCAM            AND SAVE                SA61094
ITSENQ   EQU   * .                                               S22025
         XI    LCBMSGFM,LCBACKI .       FLIP ACK COUNTER         S21101
         B     GOEXIT                   EXIT
         SPACE
NOTREAD  EQU   *
         L     RF,BSC27AD                                        S22027
         BR    RF                                                S22027
.L50     ANOP
         EJECT
NOTBSC   EQU   *
*
*    THE FOLLOWING CODE ESTABLISHES THE TRUE ENTERRUPTED CCW IN
* RCCW.  (THIS ACCOUNTS FOR THE CASE OF AN EOB OCCURRING IN THE
* LAST POSITION OF A UNIT.)  RPREFIX IS ALSO ESTABLISHED TAKING
* INTO CONSIDERATION THAT A PCI MIGHT HAVE BEEN MISSED OR THAT PCI
*        IF PCI IS NOT USED ON RECEIVE OPERATIONS, ALL BUFFERS UP TO
* THE ONE WHICH PRESENTED AN EOB OR ETB INTERRUPT ARE POSTED TO MH.
* SIMILARLY, BUFFERS ARE POSTED TO THE AVAILABLE BUFFER QUEUE  FOR
* OUTPUT OPERATIONS.
*
* IS NOT USED.
         AIF   ('&GEN' EQ 'MINI').CONC3                          S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCC .               BRANCH IF NO             S22026
         IC    RE,SCBSTAT1 .            SAVE HI-ORDER BYTE       S22026
         ST    RCCW,SCBXTRA-1 .         SAVE INTERRUPTED UNIT    S22026
         STC   RE,SCBSTAT1 .            RESTORE HI-ORDER BYTE    S22026
SAVECCW  EQU   * .                                               S22026
         MVC   SCBXTRA+3(8),0(RCCW) .   SAVE CCW                 S22026
         CLI   LCBINCAM,ZERO .          ERROR RECOVERY           S22026
         BNE   NOTCONCC .               BRANCH IF YES            S22026
         MVC   SCBXTRA+11(4),LCBCPA+12 .SAVE TEXT START          S22026
NOTCONCC EQU   * .                                               S22026
.CONC3   ANOP                                                    S22026
         L     RE,LCBLSPCI-1            LAST SERVICEC  BUFFER
         LA    RE,0(,RE)                CLEAR HI ORDER BYTE
         LR    RPREFIX,RE               COPY BUFFER ADDRESS
         CLC   CCWCOUNT+1(1),LCBCSW+6   RESIDUAL COUNT EQ ORIGINAL
         BNE   NOTEQ                    NO
         LA    R0,ONE                   LOAD A POSITIVE VALUE
         CLR   RE,RCCW                  BUFFER SAME AS CURRENT CCW
         BNE   CKBUF                    BRANCH IF NO
         TM    LCBSTAT1,LCBSENDN        SEND SIDE
         BO    LASTBUF                  BRANCH IF YES
         LNR   R0,R0 .                  REMEMBER CONDITON
CKBUF    EQU   *
         L     RF,LCBCPA+12             LAST TEXT CCW
         LA    RF,0(,RF)                CLEAR HI ORDER BYTE
         CR    RF,RCCW                  SAME AS ENDING CCWIN CSW
         BNE   LOOPCT                   BRANC NO
         TM    LCBSTAT1,LCBSENDN        SEND SIDE
         BO    LOOPCT                   YES
         AIF   ('&GEN' EQ 'STSP').M6
         AIF   ('&GEN' EQ 'MINI').M6
         AIF   ('&GEN' EQ 'QTAM').M6
         CLI   LCBTPCD+3,TPRDLC         READ LC OUT
         BNE   NORDLC                   BRANCH IF NO
         TM    CCWFLAGS,CCWSLI          SAME CCW AS LAST RESTART OR
*                                         HAVE WE WRAPPED AND UNIT
*                                         BEEN RE-USED
         BZ    RDLCENT                  BRANCH IF NOT WRAPPED
         B     LOOPCT                   WRAPPED CONDITION
NORDLC   EQU   *
.M6      ANOP
         TM    PRFSTAT1-IEDQPRF(RE),PRFNHDRN HEADER BUFFER-POSSIBLE
*                                         NO IF HEADER BUFFER IS RE-
*                                         USED VIA PCI
         BO    TSTSLI                   YES
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'BISC').M61
         AIF   ('&GEN' EQ 'QTAM').M61
         TM    LCBTSOB,LCBTSBUF         IS THIS TIME SHARING BUFFER TSO
         BO    NOTEQ                    BRANCH ON YES               TSO
.M61     ANOP
         TM    LCBCSW+3,UNEX            UNIT EXCEPTION
         BZ    NOTEQ                    NO, TRUE CCW SET
         SPACE
         B     RTPOLL                   BUMP POLLING POINTER
TSTSLI   EQU   *
         TM    CCWFLAGS,CCWSLI          HAVE E WRAPPED
         BZ    NOTEQ                    NO
         SPACE
LOOPCT   EQU   *
         LTR   R0,R0 .                  LSCPI SAMEAS ENDING CCW
         BM    NOTEQ                    BRANCH IF YES
LOOPCT1  EQU   *
         LR    RD,RE                    SAVE PRECIOUS CCW
         L     RE,8(,RE)                NEXT CCW IN CHAIN
         LA    RE,0(,RE)                CLEAR FOR CMPARE
         CR    RE,RCCW                  THIS INTERRUPTED CCW
         BNE   LOOPCT1 .                NO, LOOK AT NEXT
         SPACE
         LA    RCCW,0(,RD)              TRUE ENDING CCW
         MVI   LCBCSW+6,0               CLEAR RESIDUAL COUNT
         AIF   ('&GEN' EQ 'MINI').CONC3A                         S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCE .               BRANCH IF NO             S22026
         MVC   SCBXTRA+3(8),0(RCCW) .   SAVE CCW                 S22026
         IC    RA,SCBSTAT1 .            SAVE HI-ORDER BYTE       S22026
         ST    RCCW,SCBXTRA-1 .         SAVE INTERRUPTED UNIT    S22026
         STC   RA,SCBSTAT1 .            RESTORE HI-ORDER BYTE    S22026
NOTCONCE EQU   * .                                               S22026
.CONC3A  ANOP                                                    S22026
         SPACE
NOTEQ    EQU   *
         L     RA,LCBDCBPT              GET DCB ADDRESS
         AIF   ('&GEN' NE '').Z81
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BZ    NOCKEND                  NO
.Z81     AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').Z8
         AIF   ('&GEN' EQ 'QTAM').Z8
         SPACE
         BAL   RC,FINDEOB  .            GET ADDRESS OF LAST CHAR S99228
         BAL   RC,CKEND  .              CHECK START AND END CHAR S99228
NOCKEND  EQU   *                                                 S99228
.Z8      ANOP                                                    S99228
         AIF   ('&GEN' EQ 'QTAM' OR '&GEN' EQ 'MINI').LL45       S99228
         TM    LCBSTAT1,LCBRECVN        RECEIVE STATE?           S99228
         BZ    NOGPOLL                  NO SKIP GENPOLL TEST     S99228
         TM    LCBFLAG3,LCBOBRRD        SOH%R MESSAGE FOR OBR?   S99228
         BO    NOGPOLL                  BRANCH YES               S99228
         NC    LCBTTCIN(2),LCBTTCIN     POLLRT DETERMINE INVALID S99228
*                                       SOURCE?                  S99228
         BZ    NOGPOLL                  SOURCE ZERO TREAT AS SPECS99228
*                                       POLL                     S99228
SLOWPOLL EQU   *                                                 S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,CUMASK           GENERAL POLL IN PROGRESS?S99228
         BZ    NOGPOLL                  NO BYPASS SOURCE DETERM  S99228
         TM    LCBMSGFM,LCBOLT          TRM PRESENT?             S99228
         BO    SRCSET                   BRANCH YES               S99228
         TM    LCBXFLAG,LCBSRCPF        SRC DETERM PERFORMED?    S99228
         BO    SRCCOMP                  YES, SKIP SRC DET        S99228
         LA    RA,LCBCPA+40 .           LOAD ADDR TCBUF CCW      S99228
         CLI   LCBCPA+24,CCWNOP         AUTOPOLL IN PROGRESS?   SA66598
         BL    MANUAL                   NO, PROGRAM POLL        SA66598
         SR    RC,RC                    CLEAR FOR IC            SA66598
         L     RF,LCBDCBPT              GET DCB ADDRESS         SA66598
         IC    RC,LCBUCBX               GET RLN                 SA66598
         SLL   RC,TWO                   MULTIPLY BY FOUR        SA66598
         L     RC,DCBINVLI-IHADCB(RC,RF) GET ILIST ADDRESS      SA66598
         TM    THREE(RC),AUTOPL         AUTOPOLL IN PROGRESS    SA66598
         BZ    MANUAL                   NO, PROGRAM POLL        SA66598
         CLI   LCBCPA+48,CCWPOLL        IS THIS FIRST HEADER    SA66598
         BNE   MANUAL                   NO, MANUAL POLL         SA66598
         MVI   LCBCPA+48,CCWNOP         NOP FOR NEXT HEADER     SA66598
         LA    RA,LCBCPA+72 .           LOAD ADDR TCBUF CCW      S99228
MANUAL   EQU   *                                                 S99228
         L     RWKA,ZERO(R0,RA)         LOAD BUFFER ADDRESS      S99228
         L     RF,SORCEAD               LOAD SOURCE ROUTINE ADDR S99228
         BALR  RD,RF                    BRANCH TO SRC DET RTN    S99228
SRCSET   EQU   *                                                 S99228
         OI    LCBXFLAG,LCBSRCPF        INDICATE SRC DETERMINED  S99228
SRCCOMP  EQU   *                                                 S99228
         AIF   ('&GEN' EQ 'STSP').LL4B                           S99228
         TM    LCBSTAT2,LCBSYNC         BSYNC LINE               S99228
         BZ    NOCHECK                  NO, BYPASS LINE CON CHECKS99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBXFLAG,LCBERPND        END CHAR ENQ?            S99228
         BO    NOLOOK                   SKIP EOT INSERT          S99228
         TM    SCBBSCFM,SCBRCVTX        ETX RECD BSYNC LINE      S99228
         BNO   NOGPOLL                  NO BYPASS GENPOLL SET    S99228
NOCHECK  EQU   *                                                 S99228
.LL4B    ANOP                                                    S99228
         L     RA,LCBDCBPT              LOAD DCB ADDR            S99228
         USING IHADCB,RA                                         S99228
         L     RF,DCBSCTAD-ONE          LOAD ADDR SPEC CHARS     S99228
         DROP  RA                                                S99228
         SR    RC,RC                    CLEAR WORK REGISTER      S99228
         IC    RC,ZERO(R0,RF)           INSERT EOT OFFSET        S99228
         LA    RC,ONE(RC,RF)            LOAD ADDR EOT CHAR       S99228
         LR    RF,RCCW                  LOAD ADDR TRUE INTRPT CCWS99228
         CLI   CCWOPCDE,CCWTIC          INTERRUPTED CCW A TIC   SA66632
         BE    NOLOOK                   YES, SKIP EOT MOVE      SA66632
         LH    RD,SIX(R0,RF)            LOAD CCW COUNT           S99228
         LH    RA,LCBCSW+FIVE           LOAD RESIDUAL COUNT      S99228
         SR    RD,RA                    DERIVE COUNT DATA READ   S99228
         L     RF,ZERO(R0,RF)           LOAD DATA ADDR           S99228
         AR    RF,RD                    SET EOT BUFFER POSITION  S99228
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    LCINSIDE                 YES, CHECK RESIDUAL CNT  S99228
         BCTR  RF,R0                    SET BUFFER EOT POSITION  S99228
*                                       TO OVERWRITE ETX         S99228
         B     EOTMOVE                  INSERT EOT               S99228
LCINSIDE EQU   *                                                 S99228
         LTR   RA,RA                    RESIDUAL COUNT ZERO?     S99228
         BNZ   EOTFILL .                BRANCH IF NO             S99228
ZERORES  EQU   *                                                 S99228
         L     RF,LCBCSW-ONE            LOAD INTERRUPT ADDR      S99228
         LA    RF,ZERO(R0,RF)           CLEAR HI ORDER BYTE      S99228
         SH    RF,H8                    SET ADDR NEXT CCW        S99228
         CLI   CCWOPCDE,CCWTIC          INTERRUPTED CCW A TIC   SA66632
         BE    NOLOOK                   YES, SKIP EOT MOVE      SA66632
         LR    RCCW,RF                  SET NEW TRUE INTERRUPT   S99228
*                                       CCW                      S99228
         L     RF,ZERO(R0,RF)           LOAD DATA ADDR           S99228
         LH    RA,CCWCOUNT              LOAD CCW COUNT           S99228
EOTFILL  EQU   *                                                 S99228
         BCTR  RA,R0                    REDUCE RESIDUAL COUNT    S99228
         STH   RA,LCBCSW+FIVE           RESTORE RESIDUAL COUNT   S99228
EOTMOVE  EQU   *                                                 S99228
         TM    LCBSTAT2,LCBSYNC         BISYNC LINE?             S99228
         BO    SYNCON                   BRANCH YES               S99228
         LA    RC,ONE(R0,RC)            POINT TO FIRST EOT       S99228
SYNCON   EQU   *                                                 S99228
         MVC   ZERO(ONE,RF),ZERO(RC)    MOVE EOT INTO BUFFER     S99228
NOLOOK   EQU   *                                                 S99228
         CLI   LCBECBCC,PERMERR         PERM ERROR PRESENT?      S99228
         BE    NOGPOLL                  YES, LEAVE ETX FLAG UNSE S99228
         TM    SCBERR4,SCBTXTTN         TEXT ERROR?              S99228
         BO    NOGPOLL                  BRANCH YES               S99228
         OI    LCBXFLAG,LCBGPCTV        SET GENPOLL IN PROGRESS  S99228
NOGPOLL  EQU   *                                                 S99228
         L     RA,LCBDCBPT              LOAD DCB POINTER         S99228
.LL45    ANOP                                                    S99228
         USING IHADCB,RA
         AIF   ('&GEN' EQ 'STSP').CONC3B                         S22026
         AIF   ('&GEN' EQ 'MINI').CONC3B                         S22026
         AIF   ('&GEN' EQ 'QTAM').CONC3B                         S22026
         TM    LCBFLAG3,LCBOBRRD .      TPER RECORD              S22026
         BZ    CONTINUE .               NO, CONTINUE             S99238
         NC    LCBRECOF,LCBRECOF        READ CONTINUE           SA68026
         BZ    ERPCHK                   BR NO, CONTINUE         SA68026
         NI    LCBFLAG3,AVTEFF-LCBOBRRD RESET OBR REQUEST       SA68026
         B     TEXT                     TREAT AS TEXT           SA68026
ERPCHK   EQU   *                                                SA68026
         SPACE
         CLI   LCBECBCC,PERMERR .       PERMANENT ERROR          S99238
         BNE   ERPEXIT .                NO, SCHEDULE ERP         S99238
         SPACE
CONTINUE EQU   * .                                               S99238
.CONC3B  ANOP                                                    S22026
         MVI   LCBERCCW,NOPCI           ASSUME NO PCI USED
         TM    LCBCSW+4,PCIFLAG         PCI FLAG ON
         BO    PROCBUFF                 BRANCH IF YES
         SPACE
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BE    PROCBUFF                 YES, FRREE UP BUFFERS
         SPACE
         TM    LCBSTAT1,LCBSENDN        SEND SIDE
         BZ    RCVOP                    NO
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    CHAINBY                  BRANCH NO                S99228
         TM    LCBDCT2,CLOCAL           LOCAL DEVICE?            S99228
         BZ    CHAINBY                  BRANCH NO                S99228
         MVI   LCBERCCW,PCIOPT          SET TO FREE BUFFERS AT   S99228
*                                       COMPLETION OF CHNL PGM   S99228
         TM    CCWFLAGS,CCWCC+CCWCD     CHAINING FLAGS ON?       S99228
         BNZ   CHAINBY                  BRANCH YES               S99228
         MVI   LCBERCCW,NOPCI           SET TO FREE BUFFERS NOW  S99228
CHAINBY  EQU   *                                                 S99228
         SPACE
         TM    DCBPCI,SNDPCI            PCI ON SEND SIDE
         BZ    PROCBUFF                 NO, FREE UP BUFFERS
         SPACE
         TM    CCWFLAGS,CCWCC+CCWCD     ANY FLAGS
         BZ    PROCBUFF                 FREE BUFFERS END OF MSG
         SPACE
         B     SETPARM                  SET PARAMETER FOR LATER USE
         SPACE 2
RCVOP    EQU   *
         TM    DCBPCI,RCVPCI            PCI ON RECEIVE
         BZ    PROCBUFF                 NO, FREE UP BUFFERS
         SPACE
         AIF   ('&GEN' EQ 'QTAM' OR '&GEN' EQ 'MINI').LL46       S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    RECHECK                  BRANCH NO                S99228
         TM    LCBDCT2,CLOCAL           LOCAL DEVICE?            S99228
         BO    PROCBUFF                 BRANCH YES               S99228
RECHECK  EQU   *                                                 S99228
         TM    LCBXFLAG,LCBGPCTV        GENERAL POLL IN PROGRESS?S99228
         BO    PROCBUFF                 YES, SKIP PCIOPT SET     S99228
.LL46    ANOP                                                    S99228
         TM    LCBERCCW+1,LOGICAL+CONV+LMD   IS THERE AN MH EXIT S22025
         AIF   ('&GEN' EQ 'MIMI').LL46C                         SA59028
         AIF   ('&GEN' EQ 'QTAM').LL46C                         SA59028
         BZ    SETPARM1                 NO-CHECK FOR EOT        SA59028
         TM    LCBTSOB,LCBTSBUF         TSO IN SESSION          SA59028
         BZ    PROCBUFF                 NO-FREE UP DEVICE       SA59028
         TM    LCBDCT1,C3270            3270 DEVICE             SA59028
         BZ    PROCBUFF                 NO-FREE UP BUFFERS      SA59028
         TM    LCBDCT2,CREMOTE          BSC DEVICE              SA59028
         BZ    PROCBUFF                 NO-FREE UP BUFFERS      SA59028
         TM    SCBBSCFM,SCBRCVTX        ETX RECD BSYNC LINE     SA59028
         BO    PROCBUFF                 YES- FREE UP BUFFERS    SA59028
SETPARM1 EQU   *                                                SA59028
         AGO   .LL46B                                           SA59028
.LL46C   ANOP                                                   SA59028
         BNZ   PROCBUFF                 YES- FREE UP BUFFERS    SA59028
.LL46B   ANOP                                                   SA59028
         TM    LCBCSW+3,UNEX            EOT RECEIVED
         BO    PROCBUFF                 YES, FREE UP BUFFERS
SETPARM  EQU   *
         MVI   LCBERCCW,PCIOPT          SET FLAG ,POST BUFFERS LATER
*                                         PCI WILL DO IT TO REQUEST
*                                         MORE NEEDED BUFFERS
PROCBUFF EQU   *
         AIF   ('&GEN' EQ 'MINI').CONC4                          S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BZ    NOTCONCF .               BRANCH IF NO             S22026
         CLI   LCBECBCC,PERMERR .       PERMANET ERROR           S22026
         BE    NOTCONCF .               BRANCH IF YES            S22026
         MVI   LCBERCCW,PCIOPT .        SET PCI FLAG             S22026
         OI    SCBSTAT1,SCBNOPST .      INDICATE NO POST         S22026
NOTCONCF EQU   * .                                               S22026
.CONC4   ANOP                                                    S22026
         DROP  RA
         LA    RA,FOUND                 SEST EXIT FROM SUBROUTINE
         EJECT
FINDBUFF EQU   *
*        THE FOLLOWING SUBROUTIE WILL DETERMINE THE FIRST UNIT
* UNIT OF A BUFFER FOR THE UNIT WHICH PRESENTED THE INTERRUPT.
* RCCW CONTAINS THE ADDRESS OF THE ENDING UNIT.  RPREFIX WILL POINT
* TO THE BUFFER. IN ADDITION, RB WILL CONTIN THE COUNT OF BUFFERS
* UP TO,BUT NOT INCLUDING THE INTEDRRUPTED BUFFER.  IF LCBERCCW IS
* EQUAL TO 00 (NOPCI) ALL PREVIOUS BUFFERS WILL BE POSTED TO THE
* AVAILABLE BUFFER QUEUE (SEND) OR TO MH (RECEIVE).
         LA    RCCW,0(,RCCW)            CLEAR HI ORDER BYTE -COMPARE
         SR    RB,RB                    CLEAR FOR BUFFER COUNT
         LR    R0,RB                    CLEAR WORK REGISTER
         L     RE,LCBLSPCI-1            LAST SERVICED BUFFER
         LR    RPREFIX,RE               SAVE BUFFER ADDRESS
         IC   R0,PRFNBUNT              NUMBER OF NNIT SON BUFFER
         B     ENTER                    ENTER LOP
         SPACE
LOOP2    EQU   *
         L     RE,PRFTIC-IEDQPRF(,RE)   NEXT CCW ADDRESS
ENTER    EQU   *
         LA    RE,0(,RE)                CLEAR FOR COMPARE
         CR    RE,RCCW                  THIS INTERRUPTED CCW
         BNE   BCTIT .                  BRANCH NO -GET NEXT UNIT S21101
         SPACE 1                                                 S21101
         CLI   LCBERCCW,PCIOPT .        PCI TO FREE BUFFERS      S21101
         BCR   8,RA .                   BRANCH YES               S21101
         SPACE 1                                                 S21101
         IC    RC,LCBLSPCI-1 .          SAVE HI ORDER BYTE       S21101
         ST    RPREFIX,LCBLSPCI-1 .     SET LAST SERVICED BUFFER S21101
         STC   RC,LCBLSPCI-1 .          RESET HI ORDER BYTE      S21101
         BR    RA .                     RETURN TO CALLER         S21101
         SPACE 1                                                 S21101
BCTIT    EQU   *                                                 S21101
         SPACE
         BCT   R0,LOOP2                 BET NEXT UN IT
         SPACE
         LA    RB,1(,RB)                BUMP BUFFER COUNT
         TM    LCBSTAT1,LCBSENDN        SEND STATE
         BO    SEND                     YES
         USING IHADCB,RD
         L     RD,LCBDCBPT              GET DCB ADDRESS
         MVC   PRFSIZE,DCBBUFSI         SET PREFIX SIZE
         MVI   PRFPRI,PRIMHBFR          POST PRIORITY
         L     RF,DCBMH-1               QCB POST ADDRESS
         DROP  RD
BUFFPOST EQU   *
         CLI   LCBERCCW,PCIOPT          CPI TO FREE BUFFERS
         BE    DONTPOST                 YES, DONT UPDATE LSCPI
         BAL   RC,ENQUEUE               PUT ON READYBQUEUE
DONTPOST EQU   *
         L     RPREFIX,PRFTIC-IEDQPRF(,RE)
         IC    R0,PRFNBUNT              NUMBER OF NNIT SON BUFFER
         B     LOOP2                    LOOP ON NEXT BUFFER
         SPACE
SEND     EQU   *
         AIF   ('&GEN' EQ 'MINI').CONC4A                         S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BZ    NOTCONCG .               BRANCH IF NO             S22026
         TM    SCBSTAT1,SCBNOPST .      POST BUFFERS             S22026
         BO    DONTPOST .               BRANCH IF NO             S22026
NOTCONCG EQU   * .                                               S22026
.CONC4A  ANOP                                                    S22026
         LA    RF,AVTBFRTB              BUFFER RETURN
         MVI   PRFPRI,PRIBFRTB          SET POST PRIORITY
         B     BUFFPOST
         EJECT
FOUND    EQU   *
         AIF   ('&GEN' EQ 'MINI').CONC4B                         S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BZ    NOTCONCH .               BRANCH IF NO             S22026
         NI    SCBSTAT1,255-SCBNOPST .  RESET POST FLAG          S22026
NOTCONCH EQU   * .                                               S22026
.CONC4B  ANOP                                                    S22026
         STC   R0,LCBERCCW+3            SVAE FORLATER
         BAL   RC,ERBCT                 UPDATE ERB COUNT FOR BUFFERS
         LR    RD,RPREFIX               SAVE FOR UPDATING COUNTS
         CLI   LCBCSW+6,0               RESIDUAL COITN 0
         BNE   CURRCCW                  NO
         L     RE,AVTDOUBX              GET LCB EXTENSION ADDR  SA66632
         TM    LCBXFLAG,LCBGPCTV        GENERAL POLL            SA66632
         BO    CURRCCW                  YES, IGNORE COUNT       SA66632
         TM    CCWFLAGS,CCWCD+CCWCC     ANY CHAINING FLAGS ON
         BNZ   NOEOTSNT                 BRANCH EOT NOT SENT
         CLI   LCBECBCC,PERMERR         TEXT ERROR
         BNE   TESTRSP                  BRANH NO
SENDERR  EQU   *
         OI    SCBERR4,SCBTXTTN         SET TEXT ERROR
         OI    LCBERBST,LCBERROR        ASSOGN NO MORE BUFFERS
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RF,DCBMH-1               MH QCB ADDRESS
         SPACE
*        IF NO RECAL IS GOING TO BE PERFORMED AND WE ARE STILL
*        READING FROM DISK RECALL ADDRESS MUST BE BUFF DISPOSITION
         TM    LCBCSW+3,UNEX .          ABORT OR UNIT EXCEPTION  S21101
         BO    SETBD .                  BRANCH IF YES            S21101
         SPACE
         TM    LCBCHAIN,LCBNORTY .      NO RETRY POSSIBLE
         BO    SETBD                    BRANCH IF YES
        CLI   LCBINCAM,RETRY .         RETRY LIMIT REACHED
         BNL   SETBD .                  BRANCH IF RETRY EXHAUSTED
         AIF   ('&GEN' EQ 'MINI').CONC5                          S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCD .               BRANCH IF NO             S22026
         IC    RA,LCBINCAM .            GET RETRY COUNT          S22026
         LA    RA,1(RA) .               ADD ONE                  S22026
         STC   RA,LCBINCAM .            STORE BACK               S22026
         L     RA,SCBXTRA-1 .           GET SAVED UNIT ADDR      S22026
         MVC   0(8,RA),SCBXTRA+3 .      RESTORE CCW              S22026
         L     RCCW,SCBXTRA+11 .        RESTORE TEXT START       S22026
         NI    LCBERBST,255-LCBERROR .  RESET ERROR              S22026
         NI    SCBERR4,255-SCBTXTTN .   RESET TEXT ERROR         S22026
         B     EXIT3 .                  RESTART                  S22026
NOTCONCD EQU   * .                                               S22026
.CONC5   ANOP                                                    S22026
         SPACE
         AIF   ('&GEN' EQ 'MINI').MIX0350                        S22029
         AIF   ('&GEN' EQ 'BISC').MIX0350                        S22029
         AIF   ('&GEN' EQ 'QTAM').MIX0350                        S22029
         TM    LCBTSOB,LCBTSBUF         IS A TIME-SHARING        S22029
*                                       TERMINAL ON THIS LINE    S22029
         BO    SETBD                    YES,SETUP ERB FOR BD     S22029
.MIX0350 ANOP                                                    S22029
         MVC   LCBRCQCB+1(3),DCBMH      ASSUME BT
         DROP  RA
         CLC   9(3,RF),13(RF)           IS BT IN SYSTEM
         BNE   MHERR                    YES
SETBD    EQU   *
         AIF   ('&GEN' EQ 'MINI').CONC5A                         S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BZ    ALLFREED .               NO, DON'T FREE BUFFERS   S22026
         BAL   RA,FINDBUFF .            FREE UP PREVIOUS BUFFERS S22026
         OI    PRFSTAT1,PRFNHDRN .      SET TEXT BUFFER TO AVOID S22026
*                                       FEFO UPDATE              S22026
ALLFREED EQU   * .                                               S22026
.CONC5A  ANOP .                                                  S22026
         L     RF,AVTMSGS-1             PARAMTER
         MVC   LCBRCQCB+1(3),1(RF)      SET BT ADDRESS
         B     MHERR                    POST BUFFER TO MH
TESTRSP  EQU   *
         BAL   RC,FINDEOB               EOB AT END OF BUFFER
         CLC   0(1,RWKA),0(RB)          EOB LAST CHARACTER
         BNE   EOTSNT1                  NO,EOT WAS SENT
         IC    RA,LCBLSPCI-1            SAVE HI ORDER BYTE
         ST    RPREFIX,LCBLSPCI-1       SET LSPCI
         STC   RA,LCBLSPCI-1            SET  HI ORDER BYTE
RDRSP    EQU   *
         ST    RCCW,LCBCPA+12           SAVE TO POST LAST BUFFER
         LA    RA,LCBERCCW+12           RESPOSE AREA
         ST    RA,LCBCPA+16             SET IN CCW
         MVI   LCBCPA+16,CCWREAD        SET COMMAND
         MVI   LCBCPA+20,CCWSLI         SET FLAG
         MVI   LCBCPA+23,9 .            SET COUNT                S21101
         MVI   LCBTPCD+2,TPRDRPEB       SET TP OP CODE
         LA    RCCW,LCBCPA+8            SET TO USE COMMON CODE
         B     EXIT2                    EXIT TO RESART
EOTSNT1  EQU   *
         AIF   ('&GEN' EQ 'MINI').CONC6                          S22026
         TM    SCBQTYPE,SCBCONC .       CONC                     S22026
         BNO   NOTCONCI .               BRANCH IF NO             S22026
         L     RCCW,SCBXTRA-1 .         TEXT CCW ADDR            S22026
         MVI   LCBERCCW,NOPCI .         SET TO POST              S22026
         BAL   RA,FINDBUFF .            FREE BUFFERS             S22026
         L     RCCW,LCBCSW-1 .          RESET CCW ADDR           S22026
         SH    RCCW,H8 .                SUB EIGHT                S22026
NOTCONCI EQU   * .                                               S22026
.CONC6   ANOP                                                    S22026
EOTSNT   EQU   *
         MVI   PRFPRI,PRILNEND          ST POST PRIORITY
DISP     EQU   *
         L     RF,AVTMSGS-1             VCON TABLE ADDRESS
         L     RF,0(,RF)                BUFFER DISPOSITION
         B     POSTEXIT                 USE COMMON CODE
         EJECT
NOEOTSNT EQU   *
*        EOB/ETB AT END OF UNIT OR BUFFER.
         TM    LCBSTAT1,LCBSENDN        EOB SENT
         BZ    RECEIVE                  NO, EOB RECEIVE OR EOT
         BAL   RE,SETSCB                SET PREVIOUS OFFSET IN SCB
         SPACE
         CLI   LCBERCCW+3,1             EOB AT END OF BUFFER
         BE    ENDBUF                   BRANCH END OF BUFFER
         SPACE
         BAL   RB,SETCOUNT              GET OFFSET INTO BUFFER
         L     RCCW,8(,RCCW)            NEXT CCW IN CHAIN
         B     ETBUPDT                  USE COMMON CODE
         SPACE
ENDBUF   EQU   *
         TM    LCBCSW+4,X'20'           CHAN PROG CHECK
         BZ    ITSCLEAN                 BRANH IF NO
         TM    LCBSTAT1,LCBINITN        INITIATE MODE
         BZ    NOBFRS                   DO NOT SET INSUFF. BUFFERS
         SPACE
         NI    SCBERR1,AVTEFF-SCBNOBFN  TURN OFF INSUFFICIENT BUFF
NOBFRS   EQU   *
         CLI   LCBRSKEY,LCLRSCH         LOCAL DEVICE?            S99228
         BE    POSITIVE                 BRANCH YES               S99228
         MVI   CCWCOUNT+1,0             INDICATE CHAN PROGRAM CHECK
POSITIVE EQU   *                                                 S99228
         AIF   ('&GEN' NE '').Z9
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BO    IOGEN                    BRANCH IF YES
.Z9      AIF   ('&GEN' NE 'BISC').Z10
         B     IOGEN                    BUILD CONTINUE
         AGO   .Z11
.Z10     ANOP
         ST    RCCW,LCBCPA+12           SAVE CURRENT CCW POINTER
         MVI   LCBCPA+12,X'20'          PROGRAM CHECK FLAG
         TM    LCBCHAIN,LCBEXCP         IDLES LOOP DEFINED
         BZ    PCSTART                  BRANCH IF YES
         B     FREERQE                  EXIT
.Z11     ANOP
ITSCLEAN EQU   *
         CLI   LCBERCCW,PCIOPT          POST NOW
         BE    SKIPPOST                 BRANCH IF NO
         LA    RF,AVTBFRTB              BUFFER RETURN
         MVI   PRFPRI,PRIBFRTB          POST PRIORITY
         BAL   RC,ENQUEUE               PUT ON READY Q
         MVC   LCBLSPCI,9(RCCW)         SET NEW LAST SERVICED   SA52517
*                                         BUFFER                SA52517
SKIPPOST EQU   *
         L     RPREFIX,8(,RCCW)         NEXT  BUFFER ADDRESS
         LR    RCCW,RPREFIX             RESETART S CCW
LASTBUF  EQU   *
         LA    R0,PRFSTXT-PRFSUNIT      SAVE FOR LATER
         STH   R0,LCBRECOF         SAVE FOR LATER
         B     ETBUPDT .                USE COMMON CODE          S21101
TTYTEST  EQU   *                                                SA48278
         LH    RC,TWO(,R1) .           GET UCB ADDRESS          SA48278
         CLI   TTY1(RC),TTY2 .         POSSIBLY TELETYPE        SA48278
         BCR   7,RB .                  BRANCH IF NO             SA48278
         TM    TTY4(RC),TTY3 .         POSSIBLY TELETYPE        SA48278
         BCR   14,RB .                 BRANCH IF NO             SA48278
         TM    TTY4(RC),TTY5 .         POSSIBLY TELETYPE        SA48278
         BCR   5,RB .                  BRANCH IF NO             SA48278
SIMEOT   OI    LCBCSW+3,UNEX .     SIMULATE EOT                 SA51061
         B     ITSEOT .                GO HANDLE EOM            SA48278
         SPACE
RECEIVE  EQU   *
         TM    LCBCSW+3,UNEX            EOT RECEIVED
         BO    ITSEOT                   YES
         BAL   RB,TTYTEST .            TEST FOR TELETYPE        SA48278
         CLI   L22601(RC),L2260 .  TEST FOR GRAFICS             SA51061
         BE    SIMEOT .            GO SIMULATE EOT              SA51061
         SPACE
         TM    LCBERCCW+1,IN            LCIN SPECIFIED
         BZ    CURRCCW                  NO, IT'S LCOUT
         SPACE
         BAL   RB,SETCOUNT              GET COUNT INTO BUFFER
         STH   RC,PRFSIZE               SET R PREFIX SIZE
.Z12     ANOP
         LR    RWKA,RCCW                SAVE CCW POINTER
         L     RCCW,8(,RCCW)            NEXT CCW IN CHAIN
         CLI   LCBERCCW+3,1             EOB AT END OF BUFFER
         BNE   NOTEND
         ST    RWKA,LCBCPA+12           SAVE CURRENT CCW POINTER
         CLI   LCBECBCC,PERMERR         ERROR
         BE    ERRPOST                  BRANCH IF YES
         TM    LCBCSW+4,X'20'           CHAN PROG CHECK
         BZ    NOTAPC                   BRANCH IF NO
         LR    RCCW,RWKA                SAVE
         MVC   LCBCPA+16(8),CCW         SAVE CCW
         OI    LCBCHAIN,LCBABRTN        SET ABORT BIT
         B     IOGEN                    GO TO IO GENERATOR
NOTAPC   EQU   *
         BAL   RA,FINDBUFF              POST BUFFERS NOW        SA65387
         MVI   LCBERCCW,PCIOPT          DELATY POSTING BUFFERS NOW
         L     RC,PRFIOADR-1-IEDQPRF(,RCCW) DATA ADDRESS NEXT BUFF
         LA    R0,PRFSUNIT
         SR    RC,R0                    AMOUNT OF PREFIX+IDLES
         STH   RC,PRFSIZE-IEDQPRF(,RCCW) SET IN PREFIX
         LR    RC,RCCW                  FOR SUBROUTINE
         BAL   RB,EXITSUB               CHECK STATUS
         LR    RPREFIX,RCCW             NEXT BUFFER
NOTEND   EQU   *
         IC    R0,LCBRECAD-1            SAVE HI ORDER BYTE
         ST    RPREFIX,LCBRECAD-1       SAVE RECORD ADDRESS
         STC   R0,LCBRECAD-1            SET HI ORDER BYTE          J
         B     IOGEN                    GO BUILD CONTINUE
         EJECT
CURRCCW  EQU   *
         LA    RPREFIX,AVTEZERO(R0,RPREFIX) CLEAR HI ORDER BYTE
         TM    LCBSTATE,LCBSENDN        EOB SENT
         BO    EOBSENT                  YES
         SR    RC,RC                    CLEAR WORK REGISTER
         TM    LCBCSW+3,UNEX            UNIT EXCEPTION MEANS EOT
         BO    ITSEOT                   BRANCH YES, FALL THRU - EOB
         BAL   RB,TTYTEST .            TEST FOR TELETYPE        SA48278
.Z13     ANOP
         BAL   RB,SETCOUNT              GET COUNT FOR EOB OFFSET
         TM    LCBERCCW+1,IN            LCIN SPECIFIED
         BO    COMMON                   BRANCH YES
         CLI   LCBECBCC,PERMERR         ERRORS
         BE    COMMON                   YES
         CLI   LCBRSKEY,LCLRSCH         LOCAL DEVICE?           SA57329
         BNE   REDUCE                   BRANCH NO               SA57329
         TM    LCBERCCW+ONE,CONV+LMD+LOGICAL  CONTINUE?         SA57329
         BNZ   GOODCONV                 BRANCH NO               SA57329
REDUCE   EQU   *                                                SA57329
         BCTR  RC,R0                    REDUCE COUNT FOR LCOUT  SA57329
GOODCONV EQU   *                                                SA57329
         STH   RC,LCBRECOF              SAVE RECORD AOFFSET
         LH    RE,LCBCSW+5              RESIDUAL COUNT
         LA    RE,1(,RE)                BUMP FOR COMMON CODE
         STH   RE,LCBCSW+5              SAVE BACK
COMMON   EQU   *
         STH   RC,PRFSIZE               ASSUME THIS IS END OF MSG
         IC    R0,LCBRECAD-1            SAVE HI ORDER BYTE
         ST    RPREFIX,LCBRECAD-1       SAVE CURRENT RECORD ADDRESS
         STC   R0,LCBRECAD-1            SET HI ORDER BYTE
EOBCOM   EQU   *
         CLI   LCBCSW+6,0         RESIDUAL COUNT C 0
         BE    IOGEN              YES, EOB AT END OF UNIT(BUFFER)
         LH    RD,CCWCOUNT              ORIGINAL COUNT
         SH    RD,LCBCSW+5              SUBTRACT RESID COUNT
         L     RE,CCWADDR-1       DATA ADDRESS
         AR    RE,RD              NEW DATA ADDRESS
         ST    RE,CCWADDR-1       SET NEW ADDRESS
         MVC   CCWCOUNT,LCBCSW+5  SET NEW COUNT
         B     IOGEN                    RESTART
         EJECT
*
*        SUBROUTINE TO COMPUTE AMOUNT OF DATA TRANSMITTED OR
* RECEIVED IN A BUFFER.
*
SETCOUNT EQU   *
         LR    RD,RPREFIX              CCW ADDR OF 1ST UNIT
         SR    RC,RC                    CLEAR WORK REGISTER
         B     ENTER1                   ENTER LOOP
LOOP1    EQU   *
         L     RD,EIGHT(,RD)            ADDRESS OF NEXT UNIT
         AH    RC,AVTKEYLE              ADD UNIT SIZE
ENTER1   EQU   *
         LA    RD,AVTEZERO(,RD)         CLEAR HI ORDER BYTE
         CR    RD,RCCW                  THIS INTERRUPTED CCW
         BNE   LOOP1                    TRY NEXT UNIT
         LA    RWKA,PRFSUNIT-PRFRCB(,RCCW) TEXT START
         L     RD,CCWADDR-1            DATA ADDR  ( MAY HAVE BEEN
*                                         UPDATED BY PREV EOB
         SR    RD,RWKA                  DATA TRANSF PREV EOB
         LH    RE,CCWCOUNT             CCW COUNT
         SH    RE,LCBCSW+5             SUB RES CONT FOR AMT TRANSF
         AR    RC,RD                    ADD TO ACCUM TOTAL
         AR    RC,RE                    ADD TO ACCUM TOTAL
         STH   RC,LCBRECOF              SAVE RECORD AOFFSET
         BR    RB                       RETURN
         SPACE 3
ITSEOT   EQU   *
         BAL   RB,SETCOUNT
         AIF   ('&GEN' NE 'BISC' AND '&GEN' NE '').M6E           S21101
         BAL   RB,CKBFMM .              DONT WANT EOT IN BUFER IFS21101
*                                         NOT REAL EOM           S21101
         B     MHPOST .                 NOT REAL EOM             S21101
.M6E     ANOP                                                    S21101
LCINS    EQU   *
         STH   RC,PRFSIZE               SAVE IN PREFIX
POSTMSG  EQU   *
POSTMH   EQU   *
         NI    PRFSTAT1,PRFNLSTF        TURN OFF'NOT LAST BUFFER'
MHPOST   EQU   *
         MVI   PRFPRI,PRIMHBFR          POST PRIORITY
POSTERR  EQU   *
         IC    R0,LCBLSPCI-1            SAVE HI ORDER BYTE
         ST    RPREFIX,LCBLSPCI-1       SET LAST SERVICED BUFFER
         STC   R0,LCBLSPCI-1            SET  HI ORDER BYTE
POSTBUF  EQU   *
         L     RWKA,LCBDCBPT            GET DCB ADDRESS
        USING IHADCB,RWKA
         L     RF,DCBMH-1               ADDRESS OF QUEUE
         DROP  RWKA
         B     POSTEXIT                 USE COMMON CODE
         SPACE 10
*
*        SET UP SCB PARAMETERS FOR START/STOP IN EVENT A SUBSEQUENT
* RECALL IS REQUIRED .  FOR BSC, THE PARAMETERS ARE SAVED IN THE LCB
* THE SCB IS UPDATED AFTER READ RESPOSNE INTERRUPT IS RECEIVED.
EOBSENT  EQU   *                                                 S21101
         BAL   RE,SETSCB .              SET SCB PARAMETERS       S21101
         SPACE 2                                                 S21101
         BAL   RB,SETCOUNT .            GET OFFSET INTO BUFFER   S21101
         SPACE 2                                                 S21101
ETBUPDT  EQU   *                                                 S21101
         MVC   LCBRECAD,PRFCRCD .       SAVE DISK ADDRESS        S21101
         MVC   LCBNTXT,PRFNTXT .        SAVE DISK PARAMETER      S21101
*        FOR BSC PARAMETERS ARE SET IN SCB FROM LCB AFTER READ   S21101
* RESPONSE.  FOR START STOP SCB IS UPDATED AFTER NEXT EOB.  FOR  S21101
* 2740/2 SCB IS UPDATED AFTER READ RESPONSE                      S21101
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'QTAM' OR '&GEN' EQ '').MX
               6A                                               SA66594
         B     EOBCOM .                 UPDATE CCW AND GO TO IOGES21101
         AGO   .M6C                                              S21101
.M6A     ANOP                                                    S21101
         AIF   ('&GEN' NE'').M6B                                 S21101
         TM    LCBSTAT2,LCBSYNC .       BSC LINE                 S21101
         BO    EOBCOM .                 BRANCH IF YES. BUFFERED  S21101
*                                         SUPPROT IS DONE AT READS21101
*                                         RESPONSE               S21101
         SPACE 1                                                 S21101
.M6B     ANOP                                                    S21101
         SPACE 1                                                SA62991
         CLI   LCBTPCD+2,TPRDRPEB       READ RESP FIRST CCW     SA62991
         BNE   SKIPRTRY                 BR NO, FORGET IT        SA62991
         L     RD,LCBSTART-1            CHAN PROG START ADDRESS SA62991
         LA    RD,0(RD)                                         SA62991
         LA    RE,LCBCPA+16             SLOT FOR READ RESP CCW  SA62991
         CR    RD,RE                    START ON READ RESPONSE  SA62991
         BNE   SKIPRTRY                 BR NO, FORGET IT        SA62991
         L     RD,0(RE)                 GET RESPONSE ADDRESS    SA62991
         CLI   0(RD),EBCDACK            IS IT EBCDIC ACK        SA62991
         BE    ZERORTRY                 BR YES, CLEAR RETRY CNT SA62991
         CLI   0(RD),ASCIACK            ASCII ACK               SA62991
         BNE   SKIPRTRY                 BR NO, FORGET IT        SA62991
ZERORTRY EQU   *                                                SA62991
         MVI   LCBINCAM,AVTEZERO        CLEAR RETRY COUNT       SA62991
SKIPRTRY EQU   *                                                SA62991
         SPACE 1                                                SA62991
         CLI   LCBRSKEY,BUFF .          BUFFERED LINE            S21101
         BNE   EOBCOM .                 BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         CLI   LCBCSW+6,ONE .           ONLY ONE CHARACTER LEFT  S21101
         BNE   LATER .                  BRANCH IF NO             S21101
          SPACE 1                                                S21101
         TM    CCWFLAGS,CCWCD .         NO CHAINING?             S21101
         BZ    EOBCOM .                 BRANCH NO, EOM IS COMING S21101
          SPACE 1                                                S21101
LATER    EQU   *                                                 S21101
         OI    SCBQTYPE,SCBBFMM .       INDICATE MIDDLE OF MSG   S21101
         OI    PRFTIC,PRFEOMSG          SET NOT REAL EOM        SA70874
*                                          AT READ RESPONSE INTERS21101
         B     RDRSP                    PUT UP READ RESPONSE     S21101
.M6C     ANOP                                                    S21101
         SPACE 10                                                S21101
         AIF   ('&GEN' NE 'BISC' AND '&GEN' NE '').M6D           S21101
*                                                                S21101
*         SUBROUTINE TO DETERMINE IF EOT IS ALL THAT REMAINS IN  S21101
* MESSAGE.                                                       S21101
*                                                                S21101
ONLYEOT  EQU    *                                                S21101
         CLI   CCWCOUNT+1,ONE .         ONE CHARACTER TO WRITE   S21101
         BNE   4(RC) .                  BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         TM    CCWFLAGS,CCWCD           NO CHAINING FLAG ON      S21101
         BCR   8,RC .                   BRANCH IF OFF, TRUE EOM  S21101
          SPACE 1                                                S21101
         B     4(RC) .                  RETURN, MORE TO MESSAGE  S21101
         SPACE 10                                                S21101
.M6D     ANOP                                                    S21101
SETSCB   EQU   *
         AIF   ('&GEN' NE '').L53
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BCR   1,RE .                   BRANCH IF YES            S21101
.L53     AIF   ('&GEN' EQ 'BISC').L54
         SPACE
         OC    LCBRECAD,LCBRECAD        FIRST OUPUT BLOCK
         BCR   8,RE .                   BRANCH IF YES            S21101
         SPACE
         MVC   SCBDEOB+1(3),LCBRECAD    SET Q ADDRESS
         MVC   SCBDEOB(1),LCBNTXT       SET DISK RECORD
         MVC   SCBEOB(2),LCBRECOF       SET OFFSET INTO RECORD
.L54     ANOP
         BR    RE                       RETURN TO CALLER
         EJECT
IOGEN    EQU   *
         LA    RB,SUBEXIT               SET ROUTINE EXIT
         LR    RC,RPREFIX               SAVE PARAMTER
EXITSUB  EQU   *
         CLI   LCBERCCW,PCIOPT          PCI TO FREE BUFFERS
         BE    NOSET                    YES
         IC    R0,LCBLSPCI-1           SAVE HI ORDER BYTE
         ST    RPREFIX,LCBLSPCI-1       UPDATE LST SEFVICED BUFF
         STC   R0,LCBLSPCI-1           SAVE HI ORDER BYTE
NOSET    EQU   *
         IC    R0,LCBCPA+12             SAVE  HI ORDER BYTE
         ST    RCCW,LCBCPA+12           'NEW' LAST TEXT CCW
         STC   R0,LCBCPA+12             STORE HI ORDER BYTE
         MVC   LCBCPA+16(8),CCW         SAVE UPDATED CCW
         MVC   LCBTTBIN,LCBTTCIN        SET FOR CONT
         TM    CCWOPCDE,CCWWRITE        WRITE COMMAND
         BZ    NOTWRITE                 BRANCH IF NO
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BNE   GOIOGEN                  NO
         OI    LCBCHAIN,LCBNORTY        SET NO RETRY
         B     SENDERR                  POST BUFFER TO MH
NOTWRITE EQU   *
         TM    LCBCHAIN,LCBABRTN .      ABORT REQUEST FOR PGM CHK
         BCR   1,RB .                   BRANCH IF YES
         SPACE
         CLI   LCBECBCC,PERMERR         TEXT ERROR
         BNE   NOERR
ERRPOST  EQU   *
         OI    LCBERBST,LCBERROR        DONT ASSIGN MORE BUFFERS
         MVI   PRFPRI,PRIMHBFR-1        SET POST PRIORITY
         NI    PRFSTAT1,PRFNLSTF        MARK IT LAST
         OI    SCBERR4,SCBTXTTN         TEXT ERROR
         OI    LCBMSGFM,LCBNAK .        RESPONE FOR TTD          S21101
         B     POSTERR                  EXIT
NOERR    EQU   *
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').Z14
         AIF   ('&GEN' EQ 'QTAM').Z14
         NI    SCBERR2,AVTEFF-SCBABRTN  RESET ABORT BIT
         NI    SCBERR3,AVTEFF-SCBFORMN  RESET FORMAT ERROR BIT
.Z14     ANOP
*****************************************************************S22025
*        THE FOLLOWING CODE ADJUSTS FOR THE CASE OF RECEIVING    S22025
*        CHANNEL END/DEVICE END WITHOUT DTA TRANSFERRED ON A     S22025
*        START/STOP LINE.                                        S22025
         ST    RC,LCBERCCW+4            BUFFER ADDRESS           S22025
         CLC   LCBERCCW+5(3),SCBDEOB+1  THIS THE DEOB BUFFER     S22025
         BNE   GOODSIZE                 NO                       S22025
         CLC   SCBEOB,PRFSIZE-IEDQPRF(RC) IS PREVIOUS SIZE LESS  S22025
*                                         THAN NEW SIZE          S22025
         BNH   GOODSIZE                 BRANCH IF YES            S22025
         MVC   PRFSIZE-IEDQPRF(2,RC),SCBEOB ADJUST SIZE          S22025
GOODSIZE EQU   *                                                 S22025
*****************************************************************S22025
         NI    SCBERR4,AVTEFF-SCBTXTTN  RESET TEXT ERROR BIT
         MVI   LCBINCAM,0               RESET RETRY COUNT
         TM    PRFSTAT1,PRFTSMSG .      IS THIS A TSO BUFFER     S22029
         BO    TSOBUF .                 BRANCH IF YES            S22025
         MVC   PRFXTRA+1-IEDQPRF(TWO,RC),PRFSIZE-IEDQPRF(RC)     S22025
*                                       RESET THE EOB OFFSET IN  S22025
*                                         THE BUFFER             S22025
TSOBUF   EQU   *                                                SA63595
         OI    LCBSTAT2,LCBRESP        SET RESPONSE OWED        SA63595
         AIF   ('&GEN' NE 'MINI').LL46A                         SA63595
         TM    LCBERCCW+1,LOGICAL+CONV+LMD  IS THERE AN MH EXIT SA63595
         BNZ    POSTMH                 BRANCH EITHER            SA63595
         BR    RB                      RETURN                   SA63595
         AIF   ('&GEN' NE 'MINI').LL46A
         BR    RB                       RETURN                   S99228
.LL46A   ANOP
         AIF   ('&GEN' EQ 'QTAM' OR '&GEN' EQ 'MINI').LL47
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR SA59028
         TM    LCBERCCW+ONE,LOGICAL+CONV+LMD  LOGICAL, CONVERSE  S99228
*                                             OR LMD?            S99228
         BZ    CONVTEST                 NO-CHECK GEN POLL       SA59028
         TM    LCBDCT1,C3270            3270 DEVICE             SA59028
         BZ    POSTMH                   NO-POST BUFFERS TO MH   SA59028
         TM    LCBDCT2,CREMOTE          BSC DEVICE              SA59028
         BZ    POSTMH                   NO-POST BUFFERS TO MH   SA59028
         TM    SCBERR2,SCBSOHE          SOH%R MSG RECIEVED      SA59028
         BCR   ONE,RB                   BRANCH IF YES           SA59028
         TM    LCBTSOB,LCBTSBUF         TSO IN SESSION          SA63959
         BZ    POSTMH                   NO - POST BFRS TO MH    SA63959
         TM    SCBBSCFM,SCBRCVTX        ETX RECD BSYNC LINE     SA59028
         BCR   EIGHT,RB                 BRANCH IF NO            SA59028
         B     POSTMH                   POST BUFFERS TO MH
CONVTEST EQU   *                                                SA59028
         TM    LCBXFLAG,LCBGPCTV        GENERAL POLL IN PROGRESS?S99228
         BCR   EIGHT,RB                 BRANCH IF NO             S99228
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    POSTMH                   BRANCH IF YES            S99228
         LH    RC,PRFSIZE               LOAD PRFSIZE             S99228
         LA    RC,ONE(R0,RC)            INCREASE PRFSIZE FOR EOT S99228
         STH   RC,PRFSIZE               RESTORE PRFSIZE          S99228
LINEIN   EQU   *                                                 S99228
         B     POSTMH                   POST BUFFERS TO MH       S99228
.LL47    ANOP                                                    S99228
SUBEXIT  EQU   *
         SPACE
GOIOGEN  EQU   *
         MVC   LCBTTBIN,LCBTTCIN        RESET TO BE CONNECTED
         ST    R15,LCBERCCW+4           SAVE REG                SA54923
         OI    LCBSTAT1,LCBCONT         SET CONINUE BIT
         L     12,AVTKA02
         LA    13,AVTSAVE2              AVT BASE FOR IO GEN
         BALR  5,12                     GO TO IOGEN
         L     R15,LCBERCCW+4           RESTORE REG             SA54923
         L     R14,LCBSCBA-1            RESTORE SCB REG         SA54923
         LA    RBASE,4095(R15)
         LA    RBASE,1(RBASE)
         SH    RAVT,AVTBACK             BACK UP TO AVT
         AIF   ('&GEN' NE 'BISC').Z15
         B     RESTART                  RESTART CHAN PROGRAM
         AGO   .Z16
.Z15     ANOP
         TM    LCBCSW+3,UNEX            NO CONTINUE POSSIBLE
         BZ    RESTART                  BRANCH RESTART POSSIBLE
         L     RCCW,LCBCPA+12           INTERRUPTED CCW
         MVI   LCBERCCW,NOPCI           SET PARAMETER TO POST BUFFS
         BAL   RA,FINDBUFF              LIN TO SUBROUTINE
         TM    LCBCHAIN,LCBABRTN .      NO ABORT FOR THIS LINE
         BO    POSTMH .                 BRANCH IF YES
         SPACE
         TM    LCBERCCW+1,IN            LCIN
         BO    POSTMH                   BRANCH IFYES
         LH    RWKA,PRFSIZE             GET PREFIX SIZE
         LA    RWKA,1(,RWKA)            BUMP
         STH   RWKA,PRFSIZE             SET BACK
         B     POSTMH                   POST AS LAST TO MH
.Z16     ANOP
         EJECT
FINDEOB  EQU   *
*
*        SUBROUTINE WILL COMPUTE ADDRESS OF LAST CHARACGER TRANSMITTED
* OR RECEIVED IN A UNIT AND THE EOB SEQUENCE IN THE SPECIAL
* CHARACTERS TABLE.
         L     RWKA,LCBDCBPT            DCB  BASE
         USING IHADCB,RWKA
         L     RB,DCBSCTAD-1            SCT ADDRESS
         DROP  RWKA
         SR    RWKA,RWKA                CLEAR FOR INDEX
         IC    RWKA,ETBCH(,RB)          GET ETB INDEX
         AIF   ('&GEN' EQ 'BISC').NOSTSP                          M5949
         LTR   RWKA,RWKA .              IS EOB SEQUENCE DEFINED   M5949
         BZ    EOTSNT1 .                BRANCH, IF NOT            M5949
.NOSTSP  ANOP                                                     M5949
         LA    RWKA,1(RWKA,RB)          POINT TO SEQUENCE
         L     RB,CCWADDR-1             DATA ADDRESS
         AH    RB,CCWCOUNT              ORIGINAL COUNT
         SH    RB,LCBCSW+5              SUBTRAC T RESIDUAL COUNT
         BCTR  RB,0                     DECREMENT ONE
         BR    RC                       RETURN
         SPACE 10
         AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').Z17
         AIF   ('&GEN' EQ 'QTAM').Z17
CKEND    EQU   *
*
*        THIS SUBROUTINE WILL CHECK IF LAST CHARACTER IS A VALID
* LINE CONTROL CHARACTER.  IF NOT, EXIT IS TO IOS TO SCHEDULE ERP
*
         TM    LCBSTAT1,LCBSENDN        SEND SIDE
         BCR   1,RC                     YES, EXIT
         SPACE
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR
         BCR   8,RC                     YES, EXIT
         SPACE
         TM    LCBMSGFM,LCBRSTRT .      INVALID START CHARACTER  S21101
         BO    CKCNT                    YES, CHECK RETRY COUNT
         TM    LCBMSGFM,LCBEOT .        EOT RECEIVED             S21101
         BCR   1,RC                     YES, RETURN
         SPACE
         USING IHADCB,RA
         L     RF,DCBSCTAD-1            SCT ADDRESS
         DROP  RA
         SR    RE,RE                    CLEAR INDEX REGISTER
         IC    RE,ETBCH(,RF)            GET DLE ETB INDEX
         LA    RWKA,2(RE,RF)            POINT TO ETB
         NI    SCBBSCFM,AVTEFF-SCBRCVTX ASSUME ETB RECEIVED      S21101
         CLC   0(1,RB),0(RWKA)          ETB RECEIVED
         BCR   8,RC                     BRANCH IF YES
         CLC   0(1,RB),3(RWKA)          ETX
         BNE   CKSENQ                   NO, SEE IF ABORT
         SPACE
         OI    SCBBSCFM,SCBRCVTX .      SET ETX RECEIVED         S21101
         BR    RC                       RETURN
         SPACE
CHKNEG   EQU   *                                                SA68035
         TM    LCBSTAT1,LCBRECVN        RECEIVE OPERATION       SA68035
         BCR   14,RD                    BR NO, RETURN           SA68035
         TM    LCBCSW+THREE,UNEX        EOT RECEIVED            SA68035
         BCR   14,RD                    BR NO, RETURN           SA68035
         TM    LCBSTAT2,LCBSYNC+LCBDIAL BISC DIAL LINE          SA68035
         BCR   14,RD                    BR NO, RETURN           SA68035
         OI    LCBSTAT2,LCBNEGRP        SET NEGATIVE RESPONSE   SA68035
*                                         TO FORCE SEND NEXT    SA68035
         BR    RD                       RETURN                  SA68035
         SPACE 5                                                SA68035
CKSENQ   EQU   *
         IC    RE,ENQCH(,RF)            GET ENQ INDEX
         LA    RWKA,1(RE,RF)            POINT TO ENQ
         OI    SCBERR3,SCBFORMN         SET FORMAT ERROR
         CLC   0(1,RB),0(RWKA)          THIS AN ABORT
         BNE   CKCNT .                  NO, INVALID END CHAR     S99228
         OI    SCBERR2,SCBABRTN .       SET ABORT                S99228
         NC    LCBTTCIN(TWO),LCBTTCIN   POLLRT DETERMINE INVALID S99228
*                                       SOURCE?                  S99228
         BZ    NOENQERP                 BRANCH YES               S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         TM    LCBDCT1,C3270            3270 DEVICE?             S99228
         BZ    NOENQERP                 NO 3270 SKIP DVC DEP ERP S99228
         MVI   LCBINCAM,RETRY           SET FOR NO RETRY         S99228
         TM    LCBDCT1,CUMASK           GENERAL POLL IN PROGRESS?S99228
         BO    SETERP                   NO, SKIP ERRPOLL INSERT  S99228
         MVC   LCBERADR(THREE),LCBINVPT SET ERROR POLL ADDR      S99228
*                                       FOR ERP POLL             S99228
SETERP   EQU   *                                                 S99228
         OI    LCBXFLAG,LCBERPND        SET SOH%R PENDING INDIC  S99228
         LA    RC,SLOWPOLL              LOAD RETURN ADDRESS      S99228
         B     ENQERP                   SKIP REGULAR RETURN RESETS99228
NOENQERP EQU   *                                                 S99228
         LA    RC,NOCKEND               RELOAD RETURN ADDR       S99228
ENQERP   EQU   *                                                 S99228
*        AN ENQ WAS READ IN NON-TRANSPARENT MODE.  IF THIS IS   SA44892
*        A VALID TTD, IT WAS HANDLED IN THE SCAN ROUTINE.       SA44892
*        IF THIS IS TRANSPARENT MODE, AN ENQ IS A VALID DATA    SA44892
*        CHARACTER.  IT MUST BE DETERMINED WHETHER THE ENQ      SA44892
*        CAUSED THE ENDING STATUS OR NOT.  TO BE A VALID TTD, THSA44892
*        ENQ MUST BE THE ONLY CHARACTER AFTER THE DLE STX.      SA44892
*
         LH    RE,CCWCOUNT .           ORIGINAL CCW COUNT       SA44892
         BCTR  RE,0 .                  MINUS ONE                SA44892
         LH    RWKA,LCBCSW+5 .         RESIDUAL COUNT           SA44892
         CR    RE,RWKA .               WZS ONLY 1 CHARACTER     SA44892
         BNE   SETABORT .              READ - BR IF NO          SA44892
         LA    RCCW,0(RCCW) .          ENDING/CURRENT CCW CLEAR SA44892
         L     RWKA,LCBCPA+12 .        STARTING CCW             SA44892
         LA    RWKA,0(RWKA) .          CLEAR FOR COMPARE        SA44892
         CR    RCCW,RWKA .             ARE THEY THE SAME UNIT   SA44892
         BNE   SETABORT .              BR IF NO                 SA44892
         TM    CCWFLAGS,CCWSLI .       IS THIS THE RESTART CCW  SA44892
         BNO   GOTTTD .                BR IF YES - A REAL TTD   SA44892
SETABORT EQU   * .                                              SA44892
CKCNT    EQU   *
         CLI   LCBINCAM,RETRY           RETRY LIMIT REACHED
         BL    DCKK                     NO TREAT AS DATA CHECK
         SPACE
         OI    SCBERR4,SCBTXTTN         SET TEXT ERRRO
         MVI   LCBECBCC,PERMERR         SET ERROR INDICATION
         BR    RC                       RETURN
         SPACE
DCKK     EQU   *
         MVI   LCBCSW+3,UNITCHK         SET ENDING STATUS
         MVI   LCBSENS0,DATCK           SET DATA CHECK
         B     ERPEXIT                  EXIT TO ERP
         SPACE 7                                                 S21101
CKBFMM   EQU   *                                                 S21101
*        SUBROUTINE WILL DETERMINE IF WE ARE AT TRUE EOM OR TEMP S21101
* EOM FOR INPUT BUFFERED TERMINAL CUPPORT                        S21101
*        RPREFIX=ADDRESS OF CURRENT BUFFER                       S21101
*        RC=PRFSIZE WITH EOT                                     S21101
         AIF   ('&GEN' EQ 'BISC').Z17A                           S21101
         TM    LCBSTAT2,LCBSYNC .      BSC LINE                  S21101
         BNO   4(RB) .                 BRANCH NO -REAL EOM       S21101
.Z17A    ANOP                                                    S21101
         CLI   LCBRSKEY,BUFF .          BUFFERED TERMINAL        S21101
         BNE   4(RB) .                  BRANCH NO, REAL EOM      S21101
         SPACE 1                                                 S21101
         CLI   LCBECBCC,PERMERR         PERMANENT ERROR         SA65874
         BE    4(RB)                    YES, TREAT AS EOM       SA65874
         SPACE 1
         TM    SCBBSCFM,SCBRCVTX .      WAS ETX BEFORE EOT       S21101
         BO    4(RB) .                  BRANCH YES ,REAL EOM     S21101
         SPACE 1                                                 S21101
         OI    PRFTIC,PRFEOMSG .        SET TEMP EOM             S21101
         BCTR  RC,R0 .                  DECREMENT EOT OUTOF BUFF S21101
         STH   RC,PRFSIZE .             SET PREFIX SIZE          S21101
         BR    RB .                     RETURN                   S21101
.Z17     ANOP                                                    S21101
         SPACE 7
ERBCT    EQU   *
         TM    LCBCSW+3,UNEX            UNIT EXCEPTION-END OF MESSAGE
         BCR   1,RC .                   YES, DON'T UPDATE COUNT
*                                         USELESS ASSIGNMENT OF BUFF
         SPACE
         CLI   LCBERCCW,PCIOPT          WILL PCI FREE UP BUFFERS
         BCR   8,RC .                   BRANCH YES
         SPACE
         IC    R0,LCBERBCT+1 .          GET DISABLED COUNT
         LA    RD,LCBERBCT+1 .          ASSUME IT CAN BE TOUCHED
         TM    LCBERBCT+1,LOCKED .      CAN IT BE TOUCHED
         BZ    NOLOCK .                 BRANCH IF YES
         SPACE
         BCTR  RD,R0 .                  DECREMENT TO ENABLED COUNT
         IC    R0,LCBERBCT .            GET ENABLED COUNT
NOLOCK   EQU   *
         AR    R0,RB .                  ADJUST COUNT
         STC   R0,AVTEZERO(,RD) .       SET ERB COUNT
         BR    RC .                     RETURN
         EJECT
CCWBLD   EQU   *
*
*        THIS SUBROUTINE WILL BUILD A CCW AT THE LOCATION POINTED TO
* BY RWKA.  RA CONTAINS INDEX INTO SPECIAL CHARACTERS TABLE FOR
* SEQUENCE DESIRED.
*
         L     RC,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RC
         L     RB,DCBSCTAD-1            SCT ADDRESS
         DROP  RC
         IC    RA,0(RA,RB)              INDEX INTO SEQUENCE
         LA    RC,0(RA,RB)              POINT TO COUNT FO SEQUENCE
         IC    RA,0(,RC)                GET SEQUENCE COUNT
         ST    RA,4(,RWKA)             SET COUNT
         LA    RC,1(,RC)                BUMP TO SEQUENCE
         ST    RC,0(,RWKA)             SET CCW ADDRESS
         MVI   0(RWKA),CCWWRITE        SET COMMAND CODE
         BR    RD                       RETURN
   SPACE 10
ENQUEUE  EQU   *
*
*        INPUT:
*        RPREFIX POINTS TO ELEMENT
*        RF POINTS TO QCB WHICH THE ELEMENT IS TO BE POSTED
*        RWKA IS USED AS A WORK REGISTER
*        RC CONTAINS THE RETURN ADDRESS
*
         ST    RF,RECBQCBA-1-IEDQRECB(,RPREFIX) QCB ADDRESS
         L     RWKA,AVTREADD+4          ADDRESS OF LAST ELEMENT
         ST    RPREFIX,AVTREADD+4       NEW LAST ELEMENT
         OC    AVTREADD+1(2),AVTREADD+1 QUEUE EMPTY
         BZ    EMPTY                    BRANCH YES
         SPACE
         IC    RF,RECBPRI-IEDQRECB(,RWKA) SAVE PRIORITY BYTE OF
*                                         PREVIOUS ELEMENT
         ST    RPREFIX,RECBLINK-1-IEDQRECB(,RWKA) INSERTED EL5M5-T
*                                         IS NOW LAST
         STC   RF,RECBPRI-IEDQRECB(,RWKA) RESTORE PRIORITY BUTE OF
*                                         PREVIOUS ELEMENT
         B     EXIT                     LEAVE
         SPACE
EMPTY    EQU   *
         ST    RPREFIX,AVTREADD         INSERTED ELEMENT IS FIRST
EXIT     EQU   *
         XC RECBLINK-IEDQRECB(3,RPREFIX),RECBLINK-IEDQRECB(RPREFIX)
         SPACE
         TM    AVTOSECB,COMPLETE        ARE WE IN WAIT STATE
         BCR   1,RC                     BRANCH NO
         SPACE
POSTECB  EQU   *
         STM   9,10,ECBSAVE             SAVE REGISTERS           S99228
         STM   R11,R15,LCBERCCW+4       SAVE REGISTERS
         LA    R11,AVTOSECB             ECB TO BE POSTED
         L     RCCW,AVTTCB .            TCB ADDRESS
         NI    TCBNDSP1-IEDQTCB(RCCW),AVTEFF-TCBTPSP             A42413
*                                       MAKE TCB DISPATCHABLE    A42413
         NC    TCBNDSP1-IEDQTCB(3,RCCW),TCBNDSP1-IEDQTCB(RCCW)   A42413
*                                       OTHER NON-DISP BITS ON?  A42413
         BNZ   BYPASS                   YES,DONT SET PRIM DISP   A42413
         NI    TCBFLGS+4-IEDQTCB(RCCW),AVTEFF-TCBPNDSP           A42413
*                                       SET PRIMARY DISPATCHABLE A42413
BYPASS   EQU   *                                                 A42413
         SR    RD,RD                    CLEAR REG 10             A42413
         L     R15,CVTLOC               ADDR OF CVT               M2561
         L     R15,CVTOPT01(,R15)       POST ROUTINE ADDR         M2561
         BALR  R14,R15                  LINK TO POST
         LM    R11,R15,LCBERCCW+4       RESTORE REGISTERS
         LM    9,10,ECBSAVE             RESTORE REGISTERS        S99228
         BR    RC                       RETURN
         SPACE 2
ECBSAVE  DS    D                        POSTECB REG SAVE AREA    S99228
         EJECT
RESTART  EQU   *                        THIS EXIT TO RESTART
         MVI   LCBTTBIN,AVTEZERO        CLEAR ERP ERROR COUNTER
         NI    LCBFLAG1,FF-X24          TURN OFF ERROR FLAGS
         L     14,AVTDPARM              RETURN REGISTER
         LA    14,8(,14)                BUMP FOR RESTART
         B     IOSEXIT                  LEAVE
POSTELE  EQU   *                        POST BUFFERS AND LCB
FREERQE  EQU   *
         L     14,AVTDPARM              RETURN REGISTER
         LA    14,4(,14)                BUMP TO SKIP POST
         B     IOSEXIT                  LEAVE
ERP      EQU   *
         CLI   LCBCPA+24,CCWPOLL        AUTOPOLL CCW            SA59028
         BNE   NAPCHAP                  NO - BRANCH             SA59028
         L     RA,LCBDCBPT              GET DCB ADDRESS         SA62984
         USING IHADCB,RA                                        SA62984
         TM    DCBPCI,RCVPCI            PCI=A ON RECEIVE        SA62984
         BO    NAPCHAP                  BR YES                  SA62984
         DROP  RA                                               SA62984
         MVI   LCBCPA+53,AVTEFF         SET ERP FOR AUTOPOLL    SA59028
NAPCHAP  EQU   *                                                SA59028
         AIF   ('&GEN' EQ 'MINI' OR '&GEN' EQ 'BISC').NO2
         AIF   ('&GEN' EQ 'QTAM').NO2
         TM    LCBTSOB,LCBPREP .        MONITOR STATE               TSO
         BO    RTPREP .                 BRANCH YES                  TSO
*                                                                   TSO
.NO2     ANOP
         L     14,AVTDPARM              RETURN RGISTER
IOSEXIT  EQU   *
         L     RB,AVTTCB                GET TCB ADDRESS
         USING IEDQTCB,RB
         NI    TCBNDSP1,AVTEFF-TCBTPSP MAKE TCB DISPATCHABLE
         NC    TCBNDSP1(3),TCBNDSP1
         BNZ   SKIPIT
         NI    TCBFLGS+4,AVTEFF-TCBPNDSP
SKIPIT   EQU   *
         DROP  RB
         LM    0,9,AVTSAVEX             RESTORE REGISTERS
         BR    R14                      RETURN
         AIF   ('&GEN' EQ 'MINI').NO2B .                         S22025
         SPACE 3                                                 S22025
DCTBASE  EQU   * .                                               S22025
*    THIS ROUTINE GETS THE ADDRESS OF THE DEVICE CHARACTERISTICS S22025
*    TABLE.                                                      S22025
         LH    RC,LCBTTCIN .            TERMINAL OFFSET          S22025
         L     RA,AVTRNMPT .            TNT CODE BASE            S22025
         USING IEDQTNTD,RA .                                     S22025
         BAL   RPREFIX,TNTDCODE .       FIND TERMINAL TYPE       S22025
         USING IEDQTRM,RB .                                      S22025
         SR    RA,RA .                  CLEAR FOR INDEX          S22025
         IC    RA,TRMCHCIN .            CHARACTERISTICS INDEX    S22025
         BCTR  RA,0 .                   DECREMENT                S22025
         SLL   RA,2 .                   MULTIPLY BY 4            S22025
         A     RA,AVTCSTCS .            DCT BASE                 S22025
         DROP  RA .                                              S22025
         DROP  RB .                                              S22025
         BR    RD .                     RETURN TO CALLER         S22025
.NO2B    ANOP                                                    S22025
         SPACE 3
H3       DC    H'3'
H8       DC    H'8'
AVTBACK  DC    AL2(AVTSAVE2-IEDQAVTD)
LCBSIZE  DC    AL2(LCBFLAG1-IEDQLCB)
         AIF   ('&GEN' EQ 'MINI').ME1                            S22029
.L58     AIF   ('&GEN' EQ 'STSP').ME1                            S22029
         AIF   ('&GEN' EQ 'QTAM').ME1                            S22029
         EJECT
         USING *,RF
BSC270X  EQU   *
*     THE FOLLOWING CODE SETS UP RCCW AND THE RESIFUAL COUNT FOR
* BSC WRITE OPERATIONS.  RESIDUAL COUNT CAN BE UP TO 7 LESS THAN
*  ACTUAL STATUS
         USING IEDQSCB,RSCB
         TM    SCBSTATE,SCBTRANP        TRANSPARENT
         BZ    ITSNTR                   NO
         LA    RA,LCBCPA+24             EXIT INDICATOR FROM UNIT
         LR    RE,RCCW                  GET INTERRUPTED CCW COPIED
         SPACE
ERTRLP   EQU   *
         LR    RB,RE                    SAVE CCW POINTER
         L     RE,PRFTIC-IEDQPRF(,RE)   NEXT CCW
         LA    RE,0(,RE)                CLEAR HI ORDER BYTE
         CLR   RE,RA                    THIS THE EXIT UNIT
         BNE   ERTRLP                   NO
         MVC   PRFTIC+1-IEDQPRF(3,RB),LCBCPA+57 SET UP TIC TO NEXT
*                                         UNIT (FOR CLEANUP
         B     NOTBSC
         SPACE 3
ITSNTR   EQU   *
         CLI   LCBCSW+6,0               RESIDUAL COUNT ZERO
         BNE   ITSETB                   NO
         SPACE
         CLI   CCWCOUNT+1,1             ORIGINAL COUNT 1-ONLY OET
         BNE   ITSETB                   NO SCAN FOR ENDING CHARACTER
         TM    CCWFLAGS,CCWCD+CCWSLI+CCWCC  ANY FLAGS SET        A42376
         BC    8,NOTBSC
         SPACE
ITSETB   EQU   *
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RE,DCBSCTAD-1            SCT ADDRESS
         DROP  RA
         LA    RDCB,9                   ASSUME WORST CASE
         L     RA,CCWADDR-1             DATA ADDRESS
         LR    RC,RA                    SAVE FRO FUTUTE TEST
         AH    RA,CCWCOUNT              ADD ORIGINAL COUNT
         LH    RB,LCBCSW+5              RESIDUAL COUNT FROM CSS
         LA    RB,9(,RB)                ADJUST CSW FOR WORST CASE
         SR    RA,RB                    NEW DATA ADDRESS FOR SEARCH
         CR    RA,RC                    NEW LESS THAN ORIGINAL
         BL    CHKCCW                   BRANCH YES- 2 CASES:
*                                       VERY SHORT BLOCK IN THIS
*                                       CCW OR CHANNEL HAS FETCHED
*                                       THE NEXT CCW IN CHAINE
        SPACE
ETBEXIT  EQU   *
         LA    RWKA,SKIPCLR             SET EXIT FROM LOOP      SA59538
FINDETB  EQU   *
         SR    RB,RB                    CLAR WORK REGISTER
         IC    RB,ENQCH(,RE)            ENQ OFFSET
         LA    RB,1(RB,RE)              POINT TO SEQUENCE       SA54276
         BCTR  RA,0                     ADJUST FOR LOOP
SRCHLOOP EQU   *
         LA    RA,1(,RA)                BUMP TO NEX T POSITION IN
*                                         BUFFER
         CLC   0(1,RB),0(RA)            ENQ                     SA54276
         BE    ENDFOUND                 YES
         CLC   3(1,RB),0(RA)            ETB                     SA54276
         BE    ENDFOUND                 YES
         CLC   6(1,RB),0(RA)            ETX                     SA54276
         BE    ENDFOUND                 YES
         SPACE
         BCT   RDCB,SRCHLOOP            BUMP TO NEXT POSITION
         BR    RWKA                     RETURN
         SPACE
ENDFOUND EQU   *
         MVI   0(RA),AVTEZERO           ZERO END CHAR TO        SA55941
*                                         PREVENT LOOP ON NEXT  SA55941
*                                         INTERRUPT             SA55941
SKIPCLR  EQU   *                                                SA59538
         NI    LCBCSW+4,X'FD'           RESET SCAN SWITCH       SA57685
         BCTR  RDCB,0                   ADJUST
         LTR   R0,RDCB                  TEST FOR NEGATIVE COUNT
         L     RDCB,LCBDCBPT            RESTORE DCB BASE
         BC    4,NOTBSC
         AH    R0,LCBCSW+5              ADD RESIDUAL COUNT
         STH   R0,LCBCSW+5              CORRECT THE COUNT
         B     NOTBSC
         SPACE
CHKCCW   EQU   *
         TM    LCBCSW+4,CSWPC           CHAN PROGRAM CHECK      SA65357
         BNO   GETTEXT                  BR NO, TREAT NORMALLY   SA65357
         L     RWKA,LCBCPA+12           GET LAST TEXT CCW       SA65357
         LA    RWKA,0(,RWKA)            CLEAR HI BYTE           SA65357
         L     RPREFIX,LCBLSPCI-1       GET FIRST BUFFER CCW    SA65357
SEARCH   EQU   *                                                SA65357
         LA    RPREFIX,0(,RPREFIX)      CLEAR HI BYTE           SA65357
         CR    RPREFIX,RWKA             LAST TEXT CCW IN CHAIN  SA65357
         BE    GETTEXT                  BR YES, TREAT NORMALLY  SA65357
         TM    PRFTIC+3,TWO             IS THERE ANOTHER CCW    SA65357
         BO    GETLSPCI                 BR NO, START WITH PCI   SA65357
         L     RPREFIX,PRFTIC           GET NEXT CCW            SA65357
         B     SEARCH                   AND CONTINUE SEARCH     SA65357
GETLSPCI EQU   *                                                SA65357
         L     RWKA,LCBLSPCI-1          GET FIRST TEXT BUFFER   SA65357
         B     GETTEXT1                 AND CONTINUE            SA65357
GETTEXT  EQU   *                                                SA65357
         L     RWKA,LCBCPA+12           LAST TEXT CCW
*                                         RESTART
GETTEXT1 EQU   *                                                SA65357
         LA    RWKA,0(,RWKA)            CLEAR HI ORDER BYTE
         CR    RWKA,RCCW                WAS A SHORT BLOCK XENT
         BNE   PREVCCW                  BRANCH NO RCCW IS POINTING
*                                         TO NEXT CCW IN CHAIN
         L     RPREFIX,LCBLSPCI-1 .     LAST SERVICED BUFFER - IT
*                                         MIGHT BE A VERY SMALL MSG
*                                         OR LAST PART OF MSG TO
*                                         BUFFERED TERMINAL. IN
*                                         EITHER CASE THERE IS NO
*                                         PREVIOUS UNIT.
         LA    RPREFIX,AVTEZERO(,RPREFIX) CLEAR HI ORDER BYTE
         CR    RPREFIX,RWKA .           IS THE ABOVE CASE TRUE?
         BE    THISISIT .               BRANCH IF YES
         SPACE
         TM    CCWFLAGS,CCWSLI          HAS THIS CCW BEEN RE-USED
*                                         VIA PCI
         BO    PREVCCW                  BRANCH IF YES
         SPACE
THISISIT EQU   *
         SR    RA,RC                    DIFFERENCE BETWEEEN NEW
*                                         DATA ADDRESS AND ORIGINAL
         LCR   RB,RA                    MAKE DIFFERENCE POSITINVE
         SR    RDCB,RB                  NUMBER FO POSITIONS FOR SCAN
         LR    RA,RC                    SET FOR COMMON LOOP
         TM    LCBCSW+4,X'02'           MORE THAN ONE CCW       SA57685
         BNO   ETBEXIT                  BR NO, LAST CCW         SA57685
         LA    RC,9                     ASSUME WORST CASE       SA57685
         SR    RC,R0                    AMOUNT FOR NEXT CCW     SA57685
         SR    R0,RB                    ADJUST COUNT THIS CCW   SA57685
         B     CCWOK                    BR, SET UP FOR SCAN     SA57685
         SPACE
PREVCCW  EQU   *
         L     RPREFIX,LCBLSPCI-1       LST SER ICED BUFFER
         OI    LCBCSW+4,X'02'           SET MULTIPLE CCW SWITCH SA57685
*                                         USE INTERFACE CONTROL SA57685
*                                         BIT RESET LATER       SA57685
LOOPCCW  EQU   *
         LR    RDCB,RPREFIX             SAVE FOR LOOP CONTROL
         L     RPREFIX,PRFTIC           NEXT BUFFER(UNIT) FROM TIC
         LA    RPREFIX,0(,RPREFIX)      CLEAR FOR COMPARE
         CR    RPREFIX,RCCW             THIS CCW CSW POINTS TO
         BNE   LOOPCCW                  NO, CONINUE SEARCH
         SPACE
         LA    RCCW,0(,RDCB)            PREVIOUS CCW IN CHAIN
         SR    RC,RA                    GET DIFFERNCE VOR SCAN
         LR    R0,RC                    AMOUNT FOR PREVIOUS
         LA    RC,9                     ASSUME WORST
         SR    RC,R0                    AMOUNT FOR CURRENT CCW
         L     RA,CCWADDR-1             DATA ADDRESS PREVIOUS CCW
         LR    RB,RA                    SAVE -FUTURE UXE
         AH    RA,CCWCOUNT              ADD ORIGINAL COUNT
         SR    RA,R0                    SUBTRACT AMOUNT FOR SCAN
         MVC   LCBRCB(1),LCBCSW+6            CSW RESIDUAL COUNT
         LR    RC,RB                    RESET REGISTER FOR LOOP  A42376
         LR    RDCB,R0                 GET COUNT RIGHT           A42376
         CR    RA,RB                    LESS THAN ORIGINAL ADDRESS
*                                         POSSIBLE FOR SHORT RECORD
         BL    CHKCCW                  CK OF IN ONE OF 2 PREVIOUSA42376
         LA    RC,9 .                  TOTAL BYTES OFF            42376
         SR    RC,R0 .                 SAVE AMOUNT IN NEXT BUFFER 42376
CCWOK    EQU   *
         MVI   LCBCSW+6,0               CLEAR RESIDUAL COUNT
         LR    RDCB,R0                  SET SCAN COUNT FOR LOOP
         BAL   RWKA,FINDETB             LOOP FOR ETB OR ETX
         MVC   LCBCSW+6(1),LCBRCB       RESTORE ORIGINAL CSW COUNT
         L     RCCW,8(,RCCW)            NO ETB OR ETX IN PREVIOUS
         LA    RCCW,0(,RCCW)            MUST BE NEXT CCW
         L     RA,CCWADDR-1             DATA ADDRESS -NEXT CCW
         LR    RDCB,RC                  SET SCAN COUNT
         LH    R0,CCWCOUNT             IS WHATS LEFT             A42376
         SR    RC,R0                           IN TNE NEXT CCW   A42376
         BM    ETBEXIT                  YES, USE COMMON CODE    SA70874
         B     CCWOK                   NO, LOOP BACK AND CK NEXT A42376
         EJECT
         USING *,RF
SCAN     EQU   *
*    SCBTRNSP OR SCBNONTR IS SET UPON RECEIPT OF FIRST BLOCK OF DATA
* AND RESET IN BUFFER DISPOSITION.  IT'S PURPOSE IS TO DETERMINE
* LCBISZE AND TYPE OF MSG RECEIVED FOR SUBSEQUNET CONTINUE SEQUENCES
* I/O GENERATOR MIGHT BUILD A READ OF COUNT 1 OR 2 AFTER WRITE ACK/NAK
* IF LCOUT IS IN USE.  ON SUBSEQUENT BLOCKS OF DATA THE SCAN ROUTINE
* LOOKS FOR LINE CONTROL CHARACTERS IN LCBERCCW+12 IF LCOUT IS IN USE.
*     LCBVSTRT OR LCBRSTRT IS SET BY SCAN TO INFORM PCI APPENDAGE
* ON SUBSEQUENT PCI'S AND LINE END THAT SCAN HAS COMPLETED.
*    WHEN LCBVSTRT IS SET, ONE OF THE FOLLOWING SILL ALSO BE SET:
* LCBTTD,LCBENQ,LCBEOT,LCBOLT.  LCBRSTRT IS SET WHEN AN INVALID
* START CHARACTER IS DETECTED OR IF USER IS NOT MAINTAINING
* TRANSPARENCY OR NON-TRANSPARENCY FOR THIS MESSAGE.  THESE BITS ARE
* RESET IN ACTIVATE.
         DROP  RSCB
         SR    RB,RB                    CLEAR WORK REGISTER
         L     RC,LCBSCBA-1             SCB ADDRESS
         USING IEDQSCB,RC
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RWKA,DCBMH-ONE           LOAD SMHQCB ADDRESS      S22029
         NC    ONE(THREE,RWKA),ONE(RWKA) ALTERNATE MH SPECIFIED? S22029
         BZ    DCBMHLC                  BRANCH NO                S22029
         TM    LCBSTAT2,LCBDIAL         DIAL LINE?               S22029
         BO    DCBMHLC                  BRANCH YES               S22029
         NC    LCBTTCIN,LCBTTCIN        IS CONNECTED INDEX ZERO  S22029
         L     RWKA,DCBMH-1             GET OWNING MH ADDRESS    S22029
         BZ    DCBMHLC                  YES - USE OWNING MH LC   S22029
         LA    RWKA,FINDQCB .           GET ADDR OF ROUTINE USED S22029
*                                       TO FIND DESTINATION QCB  S22029
         BALR  RE,RWKA .                GET DEST QCB ADDRESS     S22029
         LR    RE,R0 .                  FOR CONNECTED MH TEST    S22029
         L     RWKA,DCBMH-1             ADDRESS OF MH OPTIONS
         TM    QCBDSFLG-IEDQQCB(RE),QCBALTMH IS TERMINAL         S22029
*                                       CONNECTED TO ALTMH       S22029
         BZ    DCBMHLC .                NO - USE OWNING MH LC    S22029
         L     RWKA,AVTEZERO(RWKA)      GET ALTERNATE MH QCB     S22029
DCBMHLC  EQU   * .                                               S22029
         DROP  RA                                                S22029
         OC    LCBERCCW+ONE(ONE),FOUR(RWKA)  SET MH OPTIONS      S99228
         L     RPREFIX,LCBLSPCI-1 .     GET HEADER BUFFER        S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR TYPE MESSAGE DETERMINEDS21101
         IC    RB,LCBISZE .             GET IDLES RESERVED       S21101
         LA    RWKA,PRFSHDR(RB) .       SET INITIAL SCAN IF FIRSTS21101
         ST    RWKA,LCBERCCW+4 .        SAVE IT FOR LATER        S21101
         BZ    NOTSET .                 BRANCH VERY FIRST BLOCK  S21101
         SPACE 1                                                 S21101
         TM    PRFSTAT1,PRFNHDRN .      HEADER BUFFER            S21101
         BO    SET .                    BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         TM    SCBQTYPE,SCBBFMM .       MIDDLE OF MESSAGE        S21101
         BZ    SET .                    BRANCH IF NO             S21101
*                                                                S21101
*        THE FOLLOWING CODE IS EXECUTED FOR INPUT BUFFERED       S21101
* TERMINAL SUPPORT SUCH AS ENQUIRY MODE ON 2770.  WE ARE READING S21101
* A SUBSEQUNET BLOCK OF A MESSAGE AND THE HEADER BUFFER MUST BE  S21101
* CONVERTED TO A TEXT BUFFER.  THE CCW IS REBUILT OR POSSIBLE    S21101
* ERROR RETRIES BY ERP AND FOR RECEPTION OF TTD, ENQ, ETC.  A    S21101
* FLAG IS SET IN THE TIC FIELD (PRFBFMM) TO INDICATE TO MH THAT  S21101
* IDLES FOR THIS BUFFER ARE SET IN LCBISZE.                      S21101
*                                                                S21101
         TM    PRFTIC,PRFBFMM .         MID MSG SITUATION        S22025
         BO    SET .                    BRANCH IF YES            S22025
*                                                                S22025
         OI    PRFTIC,PRFBFMM .         SET HEADER CONVERTED     S22025
*                                         TO TEXT                S22025
         NI    PRFFLAGS,AVTEFF-CCWSLI . RESET WRAP SWITCH        S21101
         TM    SCBBSCFM,SCBTRNSP .      RECEIVEING TRANSPARENT   S21101
         BZ    ITSNONTR .               BRANCH IF NO-TEST LCIN   S21101
         SPACE 1                                                 S21101
         BAL   RB,SETISZE .             BUMP IDLES  COUNT        S21101
ITSOUT   EQU   *                                                 S21101
         BAL   RB,SETISZE .             TWO FOR TRANSPARENT      S21101
         B     ADJBUF .                 NOW RESET BUFFER CCW FOR S21101
*                                         ERP AND OTHER -TTD,ENQ S21101
         SPACE 1                                                 S21101
ITSNONTR EQU   *                                                 S21101
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BZ    ITSOUT .                 BRANCH IF LCOUT -BUMP IDLS21101
*                                         PAST STX               S21101
ADJBUF   EQU   *                                                 S21101
         BAL   RE,BLDBUFF1 .            REBUILD BUFFER USING NEW S21101
*                                         IDLES COUNT            S21101
         L     RC,LCBSCBA-1 .           RESET SCB BASE           S21101
NOTSET   EQU   *                                                 S21101
         L     RPREFIX,LCBERCCW+4 .     DATA ADDRESS IN BUFFER   S21101
*                                         TO SCAN FOR LINE CNTROLS21101
         B     SCANTEST .               START THE SCAN           S21101
         SPACE 5                                                 S21101
.ME1     ANOP
FINDQCB  EQU   * .                                               S22029
* THIS ROUTINE GETS THE ADDRESS OF THE DESTINATION QCB           S22029
         STM   RPREFIX,RC,SUBSAVE-FINDQCB(RWKA) .SAVE REGISTERS  S22029
*                                       USED BY TNT CODE         S22029
         LH    RC,LCBTTCIN .            GET CONNECTED INDEX      S22029
         L     RA,AVTRNMPT .            GET TNT CODE BASE        S22029
         BAL   RPREFIX,TNTDCODE-IEDQTNTD(RA) .GO GET TERM TABLE  S22029
*                                       ENTRY                    S22029
         L     R0,AVTEZERO(RB) .        GET ADDR OF DEST QCB     S22029
SUBREGS  LM    RPREFIX,RC,SUBSAVE-FINDQCB(RWKA) .RESTORE REGS    S22029
         BR    RE .                     RETURN TO CALLER         S22029
SUBSAVE  DS    4F .                     REGISTER SAVE AREA       S22029
         AIF   ('&GEN' EQ 'MINI').L70                            S22029
         AIF   ('&GEN' EQ 'STSP').L59                            S22029
         AIF   ('&GEN' EQ 'QTAM').L59                            S22029
SET      EQU   *
         SPACE
         L     RWKA,LCBCPA+12 .         GET CURRENT CCW          S21101
         LA    RPREFIX,LCBERCCW+12 .    SCAN AREA                S21101
         LA    RA,ONE(,RPREFIX) .       ASSUME TRANSPARENT       S21101
         TM    SCBBSCFM,SCBTRNSP .      TRANSPARENT MODE         S21101
         BO    TRCOM                    BRANCH IF YES
         BCTR  RA,R0                    ADJUST-LCIN,LCOUT-NONTRANSP
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    NOTR                     BRANCH IF LCIN
         SPACE
TRCOM   EQU   *
         LR    RE,RWKA                  COPY CCW ADDRESS
         CLI   CCWCOUNT+1-CCW(RWKA),3   AT LEAST 3 CHARACTERS
        L     RWKA,CCWADDR-1-CCW(,RWKA) DATA ADDRESS
         BH    MOVEIT                   YES
         LH    RB,CCWCOUNT-CCW(RE)  GET COUNT
         BCTR  RB,0                     FOR EXECUTE
         EX    RB,MOVELC                MOVE
         LA    RA,1(RA,RB)              ADJUST SCAN AREA
         TM    11(RE),X'03'             IS THERE NEXT UN IT
         BNZ   SCANTEST                 NO
         L     RE,8(,RE)                GET NEXT UNIT
         L     RE,CCWADDR-1-CCW(,RE)    GET DATA ADDRESS
         MVC   0(3,RA),0(RE)            MOVE DATA
         B     SCANTEST                 SCAN DATA
MOVEIT   EQU   *
        MVC   1(2,RA),0(RWKA)          MOVE DATA FOR SCAN
         B     SCANTEST                 START SCAN
         SPACE
NOTR    EQU   *
         LR    RPREFIX,RWKA             GET CURRENT CCW ADDRESS
         CLI   PRFCOUNT+1,3             AT LEAST 3 CHARCTERS
         BH    NOMOVE                   YES
         LH    RWKA,PRFCOUNT            GET COUNT
         L     RB,PRFIOADR-1            GET DATA ADDRSS
         BCTR  RWKA,0                   FOR EXECUTE
         EX    RWKA,MOVESCAN            MOVE REMANING COUNT
         LA    RA,1(RA,RWKA)            ADJUST SCAN AREA
         TM    PRFTIC+3,X'03'           IS THERE NEXT UNIT
         BNZ   STARTSCN                 NO
         L     RPREFIX,PRFTIC           NEXT C W
         L     RB,PRFIOADR-1            DATA DADDRESS
         LA    RWKA,2                   MOVE AT LEAST 3
         EX    RWKA,MOVESCAN            MOVE DATA
STARTSCN EQU   *
         LA    RPREFIX,LCBERCCW+12      SCAN AREA
         B     SCANTEST                 SCAN THE DATA
         SPACE
NOMOVE   EQU   *
         L     RPREFIX,PRFIOADR-1       FOR SCAN
SCANTEST EQU  *
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RE,DCBSCTAD-1            SCT ADDRESS
         DROP  RA
         SR    RA,RA                    CLEAR EORK REGISTER
         IC    RA,STXENQCH(,RE)         TTD OOFFSET
         LA    RWKA,1(RA,RE)            POINT TO SEQUENC
         CLC   1(2,RWKA),0(RPREFIX)     STX ENQ
        BNE   NOTTTD                   NO
         OI    SCBERR2,SCBABRTN         POSSIBLE ABORT
         OI    SCBERR4,SCBTXTTN         SET TEXT ERROR
         OI    LCBMSGFM,LCBTTD+LCBVSTRT . SAET STATUS            S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR  TYPE MSG DETERMINED   S21101
         BCR   7,RD                     YES, NO NEED TO UPDATE CCW
         SPACE
         OI    SCBBSCFM,SCBNONTR .      SET NON-TRANSPARENT      S21101
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    BLDBUFF                  BRANCH IF LCIN
         BAL   RB,SETISZE               BUMP IDLES COUNT
         SPACE 5                                                 S21101
BLDBUFF  EQU   *
         LR    RE,RD .                  SET FINAL EXIT ADDRESS   S21101
BLDBUFF1 EQU   *                                                 S21101
*        REBUILD BUFFER IF FIRST BLOCK FROM POLLING
         L     RPREFIX,LCBLSPCI-1       LAST SERVICED BUFFER
         SR    RWKA,RWKA                CLEAR WORK REGISTER
         IC    RWKA,LCBISZE             NO OF IDLES FOR HEADER
         LA    RWKA,PRFSHDR(RWKA)          PREIX PLUS IDLES
         L     RB,PRFIOADR-1            DATA ADDRESS
         LR    RC,RB                    SAVE FOR UPDATE
         LA    RB,0(,RB)                CLEAR HI ORDER BYTE
         SR    RB,RWKA                  FIND DIFFERNCE IN ADDRESS
         SR    RC,RB                    NEW LOWER DATA DADRESS
         AH    RB,PRFCOUNT              ADJUST COUNT
         ST    RC,PRFIOADR-1            NEW DATA ADDRESS
         STH   RB,PRFCOUNT              SET NEW COUNT
         BR    RE .                     REUTRN TO CALLER         S21101
NOTTTD   EQU   *
         CLC   1(1,RWKA),0(RPREFIX)     STX RECEIVED
         BNE   TRTTD                    NO TRY TRANSPARENT TTD
STXREC   EQU   *
         TM    SCBBSCFM,SCBTRNSP .      TRANSPARENT              S21101
         BNZ   ERRSET                   YES, WRONAG FORMAT
         TM    SCBBSCFM,SCBNONTR .      NON-TRANSPARENT MODE     S21101
         BNZ   ITSET                    YES
         TM    LCBERCCW+1,IN            LCIN
         BO    ITSET                    YES
         SPACE
         BAL   RB,SETISZE               BUMP IDLES
ITSET    EQU   *
         OI    SCBBSCFM,SCBNONTR .      SET NONTRANSPARENT BIT   S21101
ALLSET   EQU   *
         OI    LCBMSGFM,LCBVSTRT .      VALID START CHARACTER    S21101
         BR    RD                       RETURN
TRTTD    EQU   *
         CLC   0(2,RWKA),0(RPREFIX) .  STX                      SA44892
         BNE   NOTRAN                                           SA44892
         TM    SCBBSCFM,SCBNONTR .    RECEIVING NONTRANSP       SA44892
         BNZ   SETERR                                           SA44892
         OI    LCBMSGFM,LCBVSTRT .     VALID START SEQUENCE.    SA44892
         TM    SCBBSCFM,SCBTRNSP .     ALREADY RECEIVE AT LEAST SA44892
*                                      ONE DATA SEQUENCE ?      SA44892
         BCR   7,RD .                  YES, RETURN              SA44892
         BAL   RB,SETISZE .            BUMP IDLES               SA44892
         BAL   RB,SETISZE .            BUMP IDLES               SA44892
         OI    SCBBSCFM,SCBTRNSP .     SET TRANSP . RECEIVE     SA44892
         B     BLDBUFF .               REBUILD BUFFER FOR CASE  SA44892
*                                      OF MULTIPOINT LINE .     SA44892
NOTRAN   EQU   *
         CLC   2(1,RWKA),0(RPREFIX)     INQ RECEIVED
         BNE   NOTENQ                   NO
         SPACE
         OI    LCBMSGFM,LCBVSTRT+LCBENQ SET ENQ START            S21101
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR TYPE MSG DETERMINED    S21101
         BCR   7,RD                     BRANSH YES
         TM    LCBSTAT2,LCBDIAL         DIAL LINE
         BZ    BLDBUFF                  BRANCH NO
         SPACE
         NI    LCBMSGFM,AVTEFF-(LCBENQ+LCBVSTRT) RESET ENQ AND STS21101
         B     TESTENT                  SEE IF ENTRY FROM PCI
         SPACE
NOTENQ   EQU   *
         IC    RA,EOTCH(,RE)            EOT SEQUENCE
         LA    RWKA,1(RA,RE)            POINT TO EOT SEQUENCE
         CLC   0(1,RWKA),0(RPREFIX)     EOT RECEIVED
         BNE   TRYSOH                   NOT EOT, TRY SOH
         OI    LCBMSGFM,LCBEOT+LCBVSTRT SET STATUS BITS          S21101
         BR    RD                       ERETURN
TRYSOH   EQU   *
         IC    RA,ESOHCH(,RE) .         SOH % E                  S22026
         LA    RWKA,1(RA,RE) .          POINT TO SEQUENCE        S22026
         CLC   0(3,RWKA),0(RPREFIX) .   SOH % E SEQUENCE         S22026
         BE    TPER .                   YES, SET TPER BIT        S99238
         SPACE
         IC    RA,CSOHCH(,RE) .         SOH % C                  S99238
         LA    RWKA,1(RA,RE) .          POINT TO SEQUENCE        S99238
         CLC   0(3,RWKA),0(RPREFIX) .   SOH % C SEQUENCE         S99238
         BNE   TRYOLT .                 NO, TRY NEXT SEQUENCE    S22026
         OI    LCBFLAG3,LCBSOHC         SOH % C MESSAGE          S99238
TPER     EQU   * .                                               S99238
         OI    LCBFLAG3,LCBOBRRD .      SET TPER RECORD          S22026
         B     STXREC .                 GO TO COMMON CODE        S22026
TRYOLT   EQU   * .                                               S22026
         AIF   ('&GEN' EQ 'QTAM' OR '&GEN' EQ 'MINI').LL49       S99228
         AIF   ('&GEN' EQ 'STSP').LL49                           S99228
         IC    RA,RSOHCH(,RE)           INSERT SOH%R OFFSET      S99228
         LA    RWKA,ONE(RA,RE)          POINT TO SOH%R CHARS     S99228
         CLC   ZERO(THREE,RWKA),ZERO(RPREFIX)  SOH%R?            S99228
         BNE   PROBOLT                  BRANCH NO                S99228
         OI    SCBERR2,SCBSOHE          SET SOH% MESSAGE FLAG    S99228
         OI    LCBFLAG3,LCBSOHR         SET SOH%R MSG INDICATOR  S99228
         TM    SS1(RPREFIX),STAT2       CR, IR, EC, DC, CC?      S99228
         BNZ   YESLOG                   YES, LOG SOH%R MESSAGE   S99228
         TM    SS0(RPREFIX),STAT1       DB, DE?                  S99228
         BNZ   STXREC                   BRANCH EITHER            S99228
YESLOG   EQU   *                                                 S99228
         TM    LCBTSOB,LCBTSBUF         IS THIS TIME SHARING BUF S99228
         BZ    YESLOG1                  BRANCH ON NO             S99228
         OI    SCBERR4,SCBTRMLN         SET TERMINAL ERROR FLAG  S99228
YESLOG1  EQU   *                                                 S99228
         OI    LCBFLAG3,LCBOBRRD        SET RECORDING FLAG       S99228
         B     STXREC                   RETURN TO COMMON CODE    S99228
PROBOLT  EQU   *                                                 S99228
.LL49    ANOP                                                    S99228
         IC    RA,TOTESOH(,RE)          SOH % / FOR TOTE         S21903
         LA    RWKA,1(RA,RE)            POINT TO SEQUENCE        S21903
         CLC   0(3,RWKA),0(RPREFIX)     ON LINE TEST?            S21903
         BNE   SOHTRY                   TRY SOH
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR 1ST TIME               S21101
         BNZ   STXREC                   NO
         OI    LCBMSGFM,LCBVSTRT+LCBOLT INDICATE OLT REQUEST     S21101
         OI    SCBBSCFM,SCBNONTR .      SET NONTRANSPARENT BIT   S21101
         BR    RD                       RETURN
SOHTRY   EQU   *
         CLC   0(1,RWKA),0(RPREFIX)     SOH RECEIVED
         BE    STXREC                   YES, USE COMMON CODE
         IC    RA,DLEEOTCH(,RE)         INDEX TO SEQUENCE
         LA    RWKA,1(RA,RE)            BUMP TO SEQUENCE
         CLC   0(2,RWKA),0(RPREFIX)     DLE EOT RECEVIED
         BNE   ERRSET                   NO
         NI    LCBTPCD+11,AVTEFF-DISDLEOT DONT WRITE DLE EOT NEXT
         OI    LCBMSGFM,LCBEOT+LCBENQ+LCBVSTRT VALID START       S21101
*                                         SET DLE EOT RECEIVED   S21101
         OI    LCBSTAT2,LCBNEGRP        SET NEGATIVE RESPONSE
         BR    RD                       RETURN
ERRSET   EQU   *
         TM    LCBSTAT2,LCBDIAL         DIAL
         BZ    SETERR                   NO
         SPACE
*        THIS MIGHT BE ID ENQ IF CPU ID WAS HIT ON LINE
         TM    SCBBSCFM,SCBTRNSP+SCBNONTR 1ST TIME               S21101
         BNZ   SETERR                   NO, NOT FIRST BLOCK
         SPACE
TESTENT  EQU   * .                                               S21101
         CLI   LCBCPA+24,CCWDISAB .     CONNECTION JUXT MADE     S21101
         BNE   SETERR .                 BRANCH IF NO             S21101
         SPACE
         TM    LCBCSW+3,CEDE            PCI OR LINE END
         BCR   8,RD                     BRANCH IF ENTERED FROM PCI
         TM    LCBCSW+4,PCIFLAG         PCI IN STATUS
         BZ    STRTID                   BRANCH NO
         XI    LCBCSW+4,PCIFLAG         TURN OFF PCI FOR LINE END
*                                         ENTRY BEFORE RESTART
         BR    RD                       RETURN TO PCI
STRTID   EQU   *
         LA    RCCW,LCBCPA+48           ASSUME NO WRITE TONE
         CLI   LCBTPCD+5,TPWRTONE
         BNE   EXIT3                    NO, RESTART
         LA    RCCW,LCBCPA+56           ADDRESS OF WRITE ID ADK
         B     EXIT3                    TO RESTART
SETERR   EQU   *
         OI    SCBERR3,SCBFORMN         SET FORMAT ERROR
         OI    SCBERR4,SCBTXTTN         TEXT ERROR
         OI    LCBMSGFM,LCBRSTRT .      SET INVALID START        S21101
         BR    RD                       RETURN
MOVELC   MVC   1(1,RA),0(RWKA)          'EXECUTED'
MOVESCAN MVC   0(1,RA),0(RB)            'EXECUTED'
SETISZE  EQU   *
         DROP  RPREFIX
         L     RA,LCBLSPCI-1            SET BASE
         USING IEDQPRF,RA
         LH    R0,PRFSIZE               GET PREFIX SIZE
         AH    R0,H1                    BUMP PREFIX SIZE IN EVENT OF
         STH   R0,PRFSIZE               STX-ENQ OR STX-TXT-ENQ,EOT
         DROP  RA
         USING IEDQPRF,RPREFIX
         IC    R0,LCBISZE               ADJUST IDLES ACCORDINGLY
         AH    R0,H1                    BUMP
         STC   R0,LCBISZE               SET BACK INTO LCB
         BR    RB                       RETURN
         DROP  RC
         USING IEDQSCB,RSCB
         SPACE 3
H1       DC    H'1'                     PRFSIZE AND IDLES CONSTANT
         EJECT
         USING *,RF
CHACK    EQU   *
*
*        THIS SUBROUTINE INSPECTS ARESPONSE RECEIVED FOR BSC LINES
* AND SETS FLAGS ACCORDINGLY IN LCBERCCW FOR CALLER TO INTERROGATE.
*
         LH    RA,CCWCOUNT              ORIGINAL COUNT
         SH    RA,LCBCSW+5              SUBTRACT RESIDUAL COUNT
         BCTR  RA,0                     DECREMENT ONE
         BCTR  RA,0                     NOW TWO TO RESPONSE
         L     RB,CCWADDR-1             DATA ADDRESS
         AR    RB,RA                    BACK UP TO RESPOSNE AREA
         L     RA,LCBDCBPT              GET DCB ADDRESS
         USING IHADCB,RA
         L     RE,DCBSCTAD-1            SPECIAL CHARACTERS
         DROP  RA
         SR    RA,RA                   CLEAR WORK REGIER
         IC    RA,ACK0CH(,RE)           ACK0 SEQUNCE
         LA    RWKA,1(RA,RE)            POIN  TO SEQUENCE
         CLC   0(2,RWKA),0(RB)          TEST ACK0
         BNE   TRACK1      I            TRY ACK1
         SPACE
         MVI   LCBERCCW,RACK0           SET ACK0 INDICATOR
         BR    RD                       RETURN
         SPACE
TRACK1   EQU   *
         LA    RWKA,3(,RWKA)            BUMP TO ACK1
         CLC   0(2,RWKA),0(RB)          TEST FOR ACK-I
         BNE   TRYNAK
         SPACE
         MVI   LCBERCCW,RACK1           SET ACK-1 INDICATOR
         BR    RD                       RETURN
         SPACE
TRYNAK   EQU   *
         IC    RA,NAKCH(,RE)            POINT TO NAK
         LA    RWKA,1(RA,RE)            NAK SEQUENCE
         CLC   0(1,RWKA),1(RB)          TEST FOR NAK
         BNE   TRYWACK                  NOT A NAK
         MVI   LCBERCCW,RNAK            SET NAK I DICATOR
         BR    RD                       RETURN
         SPACE
TRYWACK  EQU   *
         IC    RA,WACKCH(,RE)           INDEX TO WACK
         LA    RWKA,1(RA,RE)            POINT TO WACK SEQUENCE
         CLC   0(2,RWKA),0(RB)          TEST FOR WACK
         BNE   TRYDLEOT                 TRY DLE-EOT             SA57695
         SPACE
         MVI   LCBERCCW,RWACK           SET WACK INDICATOR
         BR    RD                       RETURN
         SPACE
TRYDLEOT EQU   *
         IC    RA,DLEEOTCH(,RE)         INDEX TO SEQUENCE
         LA    RWKA,1(RA,RE)            POINT TO SEQUENCE
         CLC   0(2,RWKA),0(RB)          DLE EOT
         BNE   TRYTTD                   TRY TTD                 SA57695
         NI    LCBTPCD+11,X'FF'-DISDLEOT DONT SEND DLE EOT
*                                         SEQUENCE
         MVI   LCBTSTSW,AVTEFF          VORCE NEW CONNECTION
         OI    LCBSTAT2,LCBNEGRP        INDICATE NEGATIVE RESPONSE
         B     EOTREC                   TREAT AS EOT
         SPACE
TRYTTD   EQU   *
         IC    RA,EOTCH(,RE)            INDEX TO EOT
         LA    RWKA,1(RA,RE)            POINT TO EOT SEQUENCE
         CLC   0(1,RWKA),1(RB)          TEST FOR EOT
         BNE   TRYRVI                   NO,
EOTREC   EQU   *
         SPACE
         NI    LCBMSGFM,AVTEFF-LCBACKI  RESET ACK COUNTER FOR CASS21101
*                                          OF BSC DIAL WHERE     S21101
*                                          SCBNOEOT IS ON . I/O GS21101
*                                          WILL NOT RESET IT     S21101
         MVI   LCBERCCW,REOT            SET EOT INDICATOR
         BR    RD                       RETURN
         SPACE
TRYRVI   EQU   *
         IC    RA,RVICH(,RE)            INDEX TO SEQUENCE
         LA    RWKA,1(RA,RE)            POINT TO SEQUENCE
         CLC   0(2,RWKA),0(RB)          RVI RECEIVED
         BNE   TRYENQ                   NO
         MVI   LCBERCCW,RRVI            SET RVI INDICATOR
         BR    RD                       RETURN
TRYENQ   EQU   *
         IC    RA,ENQCH(,RE)            INDEX
         LA    RWKA,1(RA,RE)            POINT TO SEQUNECE
         CLC   0(1,RWKA),1(RB)          THIS ENQ
         MVI   LCBERCCW,0               ASSUME ERROR
         BCR   7,RD                     RETURN IF ERROR
         CLI   AVTDOUBX,TPRDRPEB        ENQ IN RESP TO TEXT     SA69964
         BCR   8,RD                     BR YES, LEAVE AS INVAL  SA69964
         MVI   LCBERCCW,RENQ
         BR    RD                       RETURN
         EJECT
.L59     ANOP
IDCHK    EQU   *
         USING *,RF
*
*        THIS SUBROUTINE WILL VERIFY AN IDENTIFICATION SEQUENCE FOR
* DIAL LINES.
*
         USING  IEDQSCB,RSCB
         DROP  RPREFIX
         L     RPREFIX,LCBDCBPT         DCB  BASE
         USING IHADCB,RPREFIX
         L     RB,CCWADDR-1             ID RESD AREA
         LA    RB,0(,RB)                CLEAR HI ORDER BYTE
         AH    RB,CCWCOUNT              ADD ORIGIANL COUNT
         LH    RA,LCBCSW+5              RESIDUAL COUNT
         AIF   ('&GEN' NE '').L61
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BZ    TRYTWX                   NO
.L61     AIF   ('&GEN' EQ 'STSP').L62
         AIF   ('&GEN' EQ 'QTAM').L62
         SPACE
         LA    RA,2(,RA)                ASSUME ACK SEQUENCE RCVD
         CLI   LCBERCCW,RENQ            ENQ RECEIVED
         BNE   TRYTWX                   BRANCH NO
         BCTR  RA,0                     ADJUST FOR ENQ
.L62     ANOP
TRYTWX   EQU   *
         STC   RA,AVTDOUBX .            SAVE TRUE RESIDUAL CNT
         SR    RB,RA                    SUBTRACT TRUE RESIDUAL CNT
         LA    RA,LCBERCCW+24           END OF ID AREA
         SR    RA,RB                    PAD AREA
         BNP   NOPAD                    NO PADDDING REQUIERD
         MVI   0(RB),C' '               SET FIR BLANK
         BCTR  RA,0                     FOR EXECUTE INTR
         LTR   RA,RA                    ONLY 1 PAD REQUIRED
         BNP   NOPAD                    BRANCH NO NORE PADS
         BCTR  RA,0                     FOR EXECUTE
         EX    RA,MOVER                 BLANK AREA
NOPAD    EQU   *
         L     RB,CCWADDR-1             DATA ADDRESS
         SR    RA,RA                    CLEAR WORK REGISTER
         LR    R0,RA                    CLEAR WORK REGISTER
         IC    R0,DCBILCT               NUMBER OF ILISTS
         LR    RE,RA                    CLEAR WORK REGISTER
         TM    LCBSTAT1,LCBSENDN .      SEND SIDE START WITH FIRST
         BO    START1ST .               INVITATION LIST
         SPACE
         IC    RE,LCBUCBX               RLN-1
         SR    R0,RE                    NUMBER OF ILISTS TO SCAN
START1ST EQU   *
         MVI   LCBPRI,0                 SET FIRST TIME SWITCH
NEXTLIST EQU   *
         SLL   RE,2                     MULTIPLY FOR INDEX
         L     RC,DCBINVLI(RE)          NEXT INVITATION LIST
         DROP  RPREFIX
         USING IEDQPRF,RPREFIX
         LA    RWKA,LISTSIZE(,RC)       BUMP TO FIRST ENTRY
         CLI   LCBPRI,0                 FIRST TIME
         BNE   NOTFIRST                 NOT FIRST
         MVI   LCBPRI,PRILNFRE          RESET FIRST TIME
         SPACE
         CLI   TWO(RC),2                SIZE OF EACH ENTRY 1(+INDEX)
         BH    IDSRCH                   BRANCH IF ID'S USED
         BCR   4,RD                     BRANCH IF 0-OUTPUT ONLY
         CLI   1(RC),1                  ONLY ONE ACTIVE ENTRY
         BNE   IDSRCH                   NO
         CLI   LISTSIZE(RC),DUMMY       DUMMY ENTRY
         BNE   IDSRCH .                 BRANCH FOR 1 CHAR ID
         SPACE
         CLC   AVTDOUBX(1),CCWCOUNT+1 . ORIGINAL COUNT=ORIGINAL, UE
*                                         DID WE RECEIVED NO ID
         BNE   TRYNXTIL                 CHECK FURTHER           SA65389
         BR    RD .                     RETURN ID'S ARE NOT USED
         SPACE
NOTFIRST EQU   *
IDSRCH   EQU   *
         IC    RA,TWO(,RC)              SIZE OF EACH ENTRY
         BCTR  RA,0                     DECREMENT FOR INDEX BYTE
         CLI   0(RWKA),FE               END OF LIST
         BE    TRYNXTIL                 YES, GET NEXT ILIST
         SPACE
         BCTR  RA,0                     DECREMENT FOR EXECUTE
         EX    RA,IDCLC                 COMPARE ID
         BE    IDFND                    BRANCH FOUND
         SPACE
         LA    RWKA,2(RA,RWKA)          BUMP TO NEXT ENTRY
         B     IDSRCH                   LOOK AT NEXT
         SPACE
TRYNXTIL EQU   *
         SRL   RE,2                     GET TRUE RLN -1
         LA    RE,1(,RE)                NEXT LINE NUMBER
         BCT   R0,NEXTLIST              GET NEXT ILIST ADDRESS
         AIF   ('&GEN' NE '').Z19
         TM    LCBSTAT2,LCBSYNC         BSC LINE
         BZ    ITSATWX                  NOT BSC
.Z19     AIF   ('&GEN' EQ 'STSP' OR '&GEN' EQ 'MINI').Z20
         AIF   ('&GEN' EQ 'QTAM').Z20
         CLI   LCBINCAM,IDRETRY         RETRY LIMIT REACHED
         BL    4(RD)                    BRANCH IF NO
ITSATWX  EQU   *
.Z20     ANOP
BADID    EQU   *
         OI    SCBERR3,SCBTMIDN         SET ID ERROR
         MVI   LCBTSTSW,AVTEFF          TO FORCE SUBSEQUENCE HANGUP
         OI    LCBSTAT2,LCBNEGRP        SET NEGATIVE RESPONSE
         B     ERERROR                  POST ERROR
IDFND    EQU   *
         IC    RA,1(RWKA,RA)            INDEX BYTE OF ID ENTRY
         AR    RA,RA                    DOUBLE FOR NEGATIVE INDEX
         SR    RC,RA                    BACK UP TO TNT OFFSETS
         TM    LCBSTAT1,LCBSENDN        SENDING                 SA65865
         BNO   SETTTCIN                 BR NO, SET LCBTTCIN     SA65865
         CLC   LCBTTCIN,AVTEZERO(RC)    CORRECT TERMINAL        SA65865
         BNE   BADID                    BR NO, INVALID TERMINAL SA65865
SETTTCIN EQU   *                                                SA65865
         MVC   LCBTTCIN(2),0(RC)        SET IN LCB
         BR    RD                       RETURN
IDCLC    CLC   0(1,RWKA),0(RB)          EXECUTED INSTRUCTION
MOVER    MVC   1(1,RB),0(RB)            EXECUTED INSTRUCTION
         EJECT
POLLRT   EQU   *
         USING *,RF
*
*        THIS SUBROUTINE COMPUTES SOURCE INFORMATION ON AN AUTOPOLL
* LINE.
*
         MVI   LCBCPA+24,CCWNOP         INDDICATE SEARCH WAS DONE
         MVI   LCBCPA+53,AVTEZERO       TURN OFF ERP FOR        SA66604
*                                        AUTOPOLL INDICATOR     SA66604
         L     RPREFIX,LCBLSPCI-1       HEADER BUFFER
         L     RWKA,LCBCPA+64 .         ADDRESS OF INDEX BYTE    S22025
         L     RA,LCBCPA+48             2N D POLL COMMCAND
         LR    RC,RA                    SAVE START OF LIST
         SH    RA,H8                    BACK UP TO CONTROL WORDS
         SR    RB,RB                    CLEAR WORK REGISTER
         STH   RB,LCBTTCIN .            ASSUME NO SOURCE         S22025
         IC    RB,TWO(,RA)              SIZE OF EACH ENTRY
         BCTR  RC,0                     DECREMENT FOR INDEX SCAN
POLLLOOP EQU   *
         AR    RC,RB                    BUMP TO NEXT ENTRY
         CLC   0(1,RC),0(RWKA)          THIS THE INDEX BYTE
         BE    SRCEFND                  YES SET UP SOURCE
         SPACE
         AIF   ('&GEN' EQ 'BISC').Z21
         CLI   1(RC),FE                 END OF LIST
         AIF   ('&GEN' NE '').Z22
         BCR   8,RD .                   BRANCH IF YES            S22025
         AGO   .Z21
.Z22     ANOP
         BNE   POLLLOOP                 NO,GET NEXT ENTRY
         AGO   .Z23
.Z21     ANOP
         CLI   2(RC),FE                 END OF BSC LIST
         BNE   POLLLOOP                 NO, GET NEXT ENTRY
.Z23     ANOP
         BR    RD                       RETURN
         SPACE 2
SRCEFND  EQU   *
         BCTR  RB,R0 .                  DECREMENT FOR INDEX      S22025
         SR    RC,RB .                  BACK UP TO TNT OFFSET    S22025
         IC    R0,LCBINVPT-1            SAVE HI ORDER BYTE
         ST    RC,LCBINVPT-1            START POINT FOR NEXT POLL
         STC   R0,LCBINVPT-1            SET  HI ORDER BYTE
         IC    RB,0(,RWKA)              GET INDEX BYTE
         AR    RB,RB                    DOUBLE FOR NEGAIVE INDEX
         SR    RA,RB                    BACK UP TO TNT OFFSET
         LH    RC,0(RA)                 GET TNT OFFSET
         STH   RC,LCBTTCIN .            PUT TNT OFFSET IN LCB    S22029
         L     RA,LCBDCBPT .            GET DCB ADDRESS           M6293
         L     RB,DCBMH-1-IHADCB(RA) .  GET ADDRESS OF MH QCB     M6293
         NC    ONE(THREE,RB),ONE(RB)    ALTERNATE MH SPECIFIED?  S22029
         BZ    CORECTLC                 BRANCH NO                S22029
         LR    RA,RWKA .                SAVE ADDR OF INDEX BYTE  S22029
         LR    RWKA,RF .                SAVE BASE REGISTER       S22029
         NC    LCBTTCIN,LCBTTCIN        IS CONNECTED INDEX ZERO  S22029
         BZ    CORECTLC                 YES - USE OWNING MH LC   S22029
         S     RWKA,FQCB .              GET ADDR OF FINDQCB RTN  S22029
         BALR  RE,RWKA .                GET DEST QCB ADDRESS     S22029
         LR    RWKA,RA                  RESTORE INDEX BYTE ADDR  S22029
         LR    RE,R0 .                  QCB ADDR FOR CHECKING    S22029
*                                       FOR CONNECTED MH         S22029
         TM    QCBDSFLG-IEDQQCB(RE),QCBALTMH IS TERMINAL         S22029
*                                       CONNECTED TO ALTMH       S22029
         BZ    CORECTLC .               USE OWNING MH LC         S22029
         L     RB,AVTEZERO(RB) .        GET ALTERNATE MH QCB     S22029
CORECTLC EQU   * .                                               S22029
         TM    4(RB),IN .               LC=IN SPECIFIED           M6293
         BNO   FINDSCBQ                 BRANCH IF NO             S99228
         TM    LCBSTAT2,LCBSYNC         BISC LINE?               S22028
         BO    TSOPRES                  BRANCH YES               S22028
         MVI   AVTEZERO(RWKA),X'16'     REPLACE INDEX WITH EOA   S22028
         B     FINDSCBQ                 FIND SCB                 S22028
TSOPRES  EQU   *                                                 S22028
         TM    LCBTSOB,LCBTSBUF         TSO BUFFER?              S22028
         BNO   FINDSCBQ                 BRANCH NO                S22028
         MVI   AVTEZERO(RWKA),ZERO      ZERO INDEX BYTE          S22028
.Z23A    ANOP                                                     M6293
FINDSCBQ EQU   * .                      ENTRY TO SET SCBAND QCB  S22025
         STH   RC,LCBTTCIN              SET IN LCB
         L     RA,AVTRNMPT              GET TNT CODE ADDRESS
         USING IEDQTNTD,RA
         BAL   RPREFIX,TNTDCODE         LINK TO IT
         USING IEDQTRM,RB
         L     RB,TRMDESTQ-1            GET QCB ADDRESS
         DROP  RB
         USING IEDQQCB,RB
         AIF   ('&GEN' EQ 'MINI').MIX0590                        S22029
         AIF   ('&GEN' EQ 'BISC').MIX0590                        S22029
         OI    LCBTSOB,LCBTSBUF .       INDICATE TSO TERM ON     S22029
*                                       THIS LINE                S22029
         TM    QCBFLAG,QCBTSSES         ARE WE CONNECTED TO A    S22029
*                                       TIME-SHARING TERMINAL    S22029
         BO    MIX5910 .                BRANCH IF YES            S22029
         NI    LCBTSOB,AVTEFF-LCBTSBUF  NO, INDICATE A TCAM      S22029
*                                       TERMINAL ON THIS LINE    S22029
MIX5910  EQU   *                                                 S22029
.MIX0590 ANOP                                                    S22029
         SR    RA,RA                    CLER WORK REGISTER
         LR    R0,RA                    CLAR WORK REGISTER
         IC    RA,QCBSCBOF              QCB OFSET TO SCB
         IC    R0,AVTSCBSZ              GET SIZE FO SCB
         MR    RA-1,R0                  GET OFFFSET TO RIGHT SCB
         AL    RA,LCBSCBDA-1            SET SCB BASE
         LR    RSCB,RA .               SET SCB ADDR             SA49233
         IC    R0,LCBSCBA-1             SAVE HI ORDER BYTE
         ST    RA,LCBSCBA-1             SET SCB ADDRESS IN LCB
         STC   R0,LCBSCBA-1             SET HI ORDER BYTE
         DROP  RA
         DROP  RB
         BR    RD                       RETURN
***********************************************************************
*        THE FOLLOWING ADCON IS USED TO ESTABLISH ADDRESSABILITY      *
*        TO THE FINDQCB SUBROUTINE                                    *
*                                                                     *
FQCB     DC    A(POLLRT-FINDQCB) .      FINDQCB OFFSET           S22029
*                                                                     *
***********************************************************************
         EJECT
         AIF   ('&GEN' EQ 'STSP').L71
         AIF   ('&GEN' EQ 'QTAM').C                              S22025
BSCRSP   EQU   *
*
*        THE FOLLOWING CODE HANDLES TRANSPARENT OUTPUT TO A BSC
* TERMINAL AND WACK IN RESPONSE TO TEXT FOR A TERMIBAL DEFINED AS
* BUFFERED ON THE TERMINAL MACRO.
*
         USING *,RF
         USING IEDQSCB,RSCB
         MVC   LCBLINK(1),LCBERCCW      SAVE RESPONSE INDDICATOR
         TM    SCBSTATE,SCBTRANP        TRANSPARENT
         BZ    NOTRP                    BRANCH NO
         L     RCCW,LCBCPA+52           CURRENT UNIT
         ST    RF,LCBRCB                SAVE BASE
         L     RWKA,LCBDCBPT            DCB B ASE
         USING IHADCB,RWKA
         MVI   LCBERCCW,NOPCI           ASSUJE PCI NOT USED
         TM    DCBPCI,SNDPCI            PCI ON SEND
         BZ    NOTUSED                  BRANCH IF NO PCI
         SPACE
         DROP  RWKA
         MVI   LCBERCCW,PCIOPT          SET PARAMETER FOR ROUTINE
NOTUSED  EQU   * .                                              SA44893
         BAL   RA,FINDBUFF              GET BUFFER BASE
         L     RF,LCBRCB                S RESETORE BASE
         BAL   RC,ERBCT .              ADD TO BFR COUNT         SA44893
TESTLAST EQU   *
         TM    LCBCPA+28,CCWSKIP       LAST BLOCK SENT
         BZ    MOREDATA                 NO
         SPACE
         L     RCCW,LCBCPA+52           CURRETN CCW
         NI    SCBQTYPE,AVTEFF-SCBBFMM  RESET MIDDLE OF MESSGE
         MVC   CCW+9(3),LCBCPA+57 SET CURR TIC TO NEXT UNIT
         MVC   LCBCPA+13(3),LCBCPA+53   SAVE CURRENT NIT POINTER
         MVI   LCBTPCD+2,TPBUFEOT       SET TP OP CODE
         BAL   RC,DIALTEST .            CHECK BSC DIAL SEND PRI  S21101
         B     RESETEOT .               NOT BSC DIAL SNED PRI    S21101
         SPACE 1                                                 S21101
         B     RTBUFEOT .               TREAT AS TRUE EOM        S21101
MOREDATA EQU   *
         SPACE
         LA    RA,LCBCPA+24             UNIT EXIT INDICATOR
         LR    RE,RPREFIX               GET CURRENT BUFFER ADDRESS
         SR    R0,R0                    CLEAR WORK REGISTER
         LR    RCCW,R0                  CLEAR REGISTER
         IC    R0,PRFNBUNT              NUMBER UNIT S IN BUFFER
         B     STLOOP                   ENTER LOOP
TRPLOOP  EQU   *
         L     RE,PRFTIC-IEDQPRF(,RE)   NEXT UNIT (BUFFER)
         AH    RCCW,AVTKEYLE            BUMP BY KEY LENGTH
STLOOP   EQU   *
         L     RB,PRFTIC-IEDQPRF(,RE)   NEX CCW
         LA    RB,0(,RB)                CLEAR HI ORDER BYTE
         CLR   RB,RA                    THIS THE CCW
         BE    NOMORE                   BRANCH YES
         BCT   R0,TRPLOOP               GET NEXT UNIT IN BUFFER
NOMORE   EQU   *
         STC   R0,LCBERCCW              SAVE UNIT COUNT FOR LATER
         LA    R0,PRFSUNIT-IEDQPRF(,RE) START OF UNIT
         L     RWKA,CCWADDR-1-CCW(,RE)  DATA ADDRESS
         LA    RWKA,0(,RWKA)            FOR COMPARE HALF
         SR    RWKA,R0                  PREVIOUS SENT (OR PREFIX)
         AH    RWKA,CCWCOUNT-CCW(RE)    ADD AMOUNT SENT
         LR    RC,RPREFIX               COPY HEADER BUFFER ADDR SA62329
         AR    RCCW,RWKA                TOTAL AMOUNT
         CH    RCCW,PRFSIZE             END OF BUFFER
         BL    SETOFF                   NO
         L     RC,LCBCPA+56             NEXT BUFFER ADDRESS     SA62329
         LA    RCCW,PRFSTXT-PRFSUNIT    SET OFFSET INTO NEXT RECORD
SETOFF   EQU   *
         MVC   SCBDEOB+1(3),PRFCRCD-IEDQPRF(RC) SET DISK ADDR   SA62329
         MVC   SCBDEOB(1),PRFNTXT-IEDQPRF(RC) SET DISK RECORD   SA62329
         STH   RCCW,SCBEOB              SAVE OFFSET IN TO BUFFER
         SPACE
         CLI   LCBLINK,RWACK            WACK ON A BUFFERED LINE
         BNE   GOMORE                   NO
         SPACE
         L     RCCW,LCBCPA+52           CURRENT UNIT IN BUFFER
         MVC   LCBCPA+13(3),LCBCPA+53   SAVE CURRENTC W POINTER
         MVC   CCW+9(3),LCBCPA+57       SET NEXT CCW POINTER
         B     NOTNOW                   RESET THE LINE
         SPACE 5
GOMORE   EQU   *
*        THE FOLLOWING VODE DETERMINES IF THE NEXT BLOCK TO BE
*        WRITTEN IS THE LAST MESSAGE BLOCK.  IF SO, DLE ETX IS TO
*        BE WRITTEN.  THE MAJOR DECISION IS A COMPARISON BETWEEN
*        OUPUT BOCK SIZE AND KEY LENGTH.
         LR    RE,RPREFIX               COPY BUFFER ADDRESS
         LR    RPREFIX,RC               COPY PREFIX UNIT ADDR   OX02181
         LA    RC,LCBCPA+24             SET EXIT ADDRESS
         LA    RB,1                     INITIALZIE FOR LOOP
         LH    RWKA,SCBBKFCT+1          OUTPUT BLOCK SIZE
         CH    RWKA,AVTKEYLE            COMPARE WITH KEY LENGTH
         BH    GREAT                    BRANCH IF GREATER
         SPACE
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER
         BZ    TRLOOP1                  BRANCH YES, LAST BLOCK
         SPACE
         CLI   LCBERCCW,2               TWO UNIT BUFFER         SA56617
         BH    NOTLAST                  BRANCH IF ANOTHER BLOCK SA56617
         BE    CKNXTLST                 CHK NEXT TO LAST        SA56617
         EX    RWKA,NEXTBLK             SEE IF ANOTHER BLOCK FROM
*                                         THIS UNIT
         BNL   NOTLAST                  BRANCH IF ANOTHER BLOCK
         SPACE
         TM    LCBCPA+59,2              NEXT BUFFER ABAILABLE
         BNZ   NOTLAST                  NO
         L     RA,LCBCPA+56             NEXT UNIT ADDRESS
COMTEST  EQU   *                                                SA56617
         TM    PRFSTAT1-IEDQPRF(RA),PRFNLSTN LAST UNIT
         BO    NOTLAST                  BRANCH NO
         SPACE
         SPACE
         MVI   LCBERCCW,0               INDCATE NOT END OF BUFFER
         CLI   PRFOPCDE-IEDQPRF(RA),0   ANOTHER BLOCK AFTER THIS
         BE    SETETX                   BRANCH IF LAST BLOCK
         B     NOTLAST                  SNED NEXT BLOCK
* FOLLOWINT CODE TAKES CARE OF CASE OF TWO UNIT BUFFER, PRFSIZE SA56617
* LESS THAN MULTIPLE OF KEYLENGTH, AND NEXT BUFFER IS LAST      SA56617
* CONTIANING LAST BLOCK OF MESSAGE.                             SA56617
CKNXTLST EQU   *                                                SA56617
         SR    R0,R0                    CLEAR REGISTER          SA56617
         IC    R0,LCBCPA+52             REMAINING IN UNIT       SA56617
         L     RCCW,LCBCPA+56           ADDR OF NEXT UNIT       SA65359
         AH    R0,CCWCOUNT              REMAINING DATA          SA56617
         CH    R0,SCBEOBSZ              MORE THAN 1 BLOCK LEFT  SA56617
*                                       IN THE MESSAGE          SA56617
         BNL   NOTLAST                  BRANCH IF ANOTHER BLK   SA56617
         TM    CCW+11,2                 NEXT BUFFER AVIALABLE   SA56617
         BNZ   NOTLAST                  BRANCH NO               SA56617
         L     RA,CCW+8                 NEXT BUFFER ADDRESS     SA56617
         B     COMTEST                  COMMON CODE             SA56617
         SPACE
TRLOOP1  EQU   *
         L     RE,PRFTIC-IEDQPRF(,RE)   NEXT UNIT
         LA    RE,0(,RE)                CLEAR HI ORDER BYTE
         CLR   RE,RC                    THIS THE CCW
         BE    FOUNDIT                  YES
         LA    RB,1(,RB)                BUMP UNIT COUNT
         B     TRLOOP1                  GET NEXT  UNIT
         SPACE
FOUNDIT  EQU   *
         STC   RB,LCBERCCW              SAVE FOR LATER TEST
         SR    RE,RE                    CLEAR WORK REGISTER
         IC    RE,LCBCPA+52             REMANING COUNT
         CLR   RE,RWKA                  GREATER
         BH    NOTLAST                  BRANCH IF MORE BLOCKS
         EX    RB,CLIUNT                THIS LAST UNIT
         BE    SETETX                   SEND LAST BLOCK
TRYNEXT  EQU   *
         LA    RB,1(,RB)                BUMP UNIT COUNT
         EX    RB,CLIUNT                LAST UN IT
         BNE   NOTLAST                  NO
         L     RA,LCBCPA+56             NEXT UNIT
         CLI   PRFOPCDE-IEDQPRF(RA),0   MORE DATA IN NEXT UNIT
         BE    SETETX                   YES, NEXT BLOCK IS LAST
         B     NOTLAST                  NEXT BLOCK IS NOT LAST
         SPACE 3
*        TO HERE WHEN BLOCK SIZE GREATER THAN KEYLENGH
GREAT    EQU   *
         IC    RB,LCBERCCW              UNIT COUNT IF BUFFER
         TM    LCBCPA+59,X'02'          NEXT  UNIT AVAILABLE
         BZ    ITSOK                    YES
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER
         BO    NOTLAST                  NO
         B     SETETX                   BRANCH FOR LAST BLOCK
         SPACE
ITSOK    EQU   *
         LA    RE,LCBCPA+56-(PRFTIC-IEDQPRF) ADJUST FOR COMMON CODE
         BCT   RB,NEXTUNT               BRANCH NOT END OF UNIT
         L     RPREFIX,LCBCPA+56        NEXT UNIT ADDRESSS
         IC    RB,PRFNBUNT              GET NUMBER OF UNITS
NEXTUNT  EQU   *
         L     RE,PRFTIC-IEDQPRF(,RE)   NEXT UNIT
GREATER  EQU   *
         TM    PRFTIC-IEDQPRF(RE),X'20' THIS UNIT SHOULD TIC TO
*                                         CH ANNEL PROGRAN AREA
         BO    THISUNIT                 BRANCH YES
         SPACE
         BCT   RB,NEXTUNT               GET NEXT UNIT
         TM    PRFTIC+3-IEDQPRF(RE),X'02'   NEXT BUFFER ABAILBLE
         BNZ   NOTLAST                  BRANCH NO
         L     RPREFIX,PRFTIC-IEDQPRF(,RE)     NEXT BUFFER
         IC    RB,PRFNBUNT              NUMBER UNIT S IN NEX BUFFER
         B     NEXTUNT                  LOOK AT NEXT BUFFER
         SPACE
THISUNIT EQU   *
         TM    PRFSTAT1,PRFNLSTN        LAST BUFFER
         BO    NOTLAST                  BRANCH NO
         BCT   RB,NOTLAST               BRANCH NOT END OF BUFFER
         CLI   PRFOPCDE-IEDQPRF(RE),0   WILL THERE  BE ANOTHER
*                                         BLOCK AFTER THIS ONE
         BNE   NOTLAST                  BRANCH IF ANOTHER BLOCK
SETETX   EQU   *
         L     RA,LCBCPA+24             DLEETB CCW
         AH    RA,H3                    BUMP ADDRESS TO DLEETX
         ST    RA,LCBCPA+24             NEW CCW SET
         OI    LCBCPA+28,CCWSKIP        INDICATE LAST BLOCK SENT
NOTLAST  EQU   *
*        THE FOLLOWING CODE SETS UP THE CCW'S IN BUFFERS TO WRITE
*        THE NEXT BLOCK
         SR    RB,RB                    CLEAR WORK REGISTER
         LR    R0,RB                    LCEAR WORK REGISTER
         L     RCCW,LCBCPA+52           CURRENT UNIT
         IC    R0,CCWCOUNT+1            ORIGIANL COUNT
         AL    R0,CCWADDR-1             UPDATE DATA ADDRESS
         ST    R0,CCWADDR-1             NEW CCW SET
         IC    RB,LCBCPA+52             REMAINING COUNT IN CURRENT
         CH    RWKA,AVTKEYLE            COMPARE BLOCK WITH KEY SIZE
         BNH   SAME                     LOW OR EQUAL
         SPACE
*        INSERT CODE IF NEXT BLOCK NOT AVAILABLE
NEXTUNIT EQU   *
         STC   RB,CCWCOUNT+1            NEW DATA COUNT
         LR    RA,RCCW                  CURRENT UNIT ADDRESS    SA65359
         TM    LCBCPA+28,CCWSKIP        LAST BLOCK              SA65359
         BNO   SETCCWCD                 BR NO, CHAIN DATA       SA65359
         TM    LCBCPA+59,X'02'          NEXT UNIT AVAILABLE     SA65359
         BO    SENDIT                   BR NO, LAST BLOCK       SA65359
SETCCWCD EQU   *                                                SA65359
         OI    CCWFLAGS,CCWCD           SET CHAIN DATA FLAG
         L     RA,LCBCPA+56             NEXT UNIT IN CHAIN
         ST    RA,CCWOPCDE+8            SET TIC ADDRESS FROM CURRENT
*                                         TO NEXT
         MVI   CCWOPCDE+8,CCWTIC        TIC OP CODE
         LTR   RB,RB                    WE AT END OF UNIT
         BNZ   MORED                    BRANCH NO
         MVC   LCBCPA+53(3),LCBCPA+57   NEXT IS NOW CURRENT
MORED    EQU   *
         MVC   LCBCPA+49(3),LCBCPA+53   SET TIC ADDRESS FROM DLESTX
         TM    CCWOPCDE+11,X'02'        IS THERE NEXT BUFFER
         BZ    TRENTER                  YES
*        NEXT BLOCK NOT AVAILABLE, TREAT AS CHAN PROG CHECK
         LA    RWKA,2                   CHANNEL PROGRAM CHECK
         ST    RWKA,LCBCPA+56           SET AS NEXT UNIT ADDRESS
         B     PCSTART                  START ON WRITE SYN'S
         SPACE
*        IF NEXT BLOCK NOT AVAILABLE,RESTART IS MADE ON WRITE SYNS
* LOOP.  PCI WILL UPDTE NEXT CCW POINTER (LCBCPA+56) AND SET 1 BYTE
* REMAING COUNT IN LCBCPA+52.  IF THERE IS A REMAINING COUNT OF 0
* IN CURRENT CCW BUT THE NEXT CCW IS AVAILABLE, PCI WILL SET UP
* LCBCPA+52 (WHICH BECOMES NEW CURRENT UNIT) AND LCBCPA+56 WHICH
* WILL BE THE SUBSEQUENT 1ST CCW OF FUTURE BLOCK.  IF REMAINING
* COUNT IN CURRENTCCW IS 0 AND THE NEXT UNIT IS NOT AVAILABLE, PCI
* WILL SET UP LCBCPA+48 (TIC FROM DLE STX) IN ADDITION TO LCBCPA+56
* AND LCBCPA+52.
NOTHIS   EQU   *
         L     RA,PRFTIC-IEDQPRF(,RA)   NEXT UNIT
TRENTER  EQU   *
         TM    PRFTIC-IEDQPRF(RA),X'20' NEXT ENDING UIT
         BO    THISONE                  THS IS IT
         TM    PRFTIC+3-IEDQPRF(RA),X'02' NEXT BUFFER AVAILABLE
         BNZ   PCSTART                  BRANCH NO
         B     NOTHIS                   GET NEXT UNIT
THISONE  EQU   *
         ST    RA,LCBCPA+52             NEW CURRENT
         IC    RB,PRFOPCDE-IEDQPRF(,RA) REMAINING COUNT IN NEXT
         STC   RB,LCBCPA+52             SAVE FOR NEXT TIME ARAOUND
RESTR    EQU   *
         MVC   LCBCPA+57(3),PRFTIC+1-IEDQPRF(RA)  ADDRESS OF NEXT UNIT
SENDLAST EQU   *
         TM    LCBCPA+28,CCWSKIP        LAST BLOCK              SA65359
         BNO   NOCHANGE                 BR NO, NO CHANGE        SA65359
         MVI   LCBCPA+52,AVTEZERO       CLEAR REMAINING COUNT   SA65359
         NI    CCWFLAGS-CCW(RA),AVTEFF-CCWCD RESET CHAIN DATA   SA65359
         OI    CCWFLAGS-CCW(RA),CCWCC   SET COMMAND CHAINING    SA65359
NOCHANGE EQU   *                                                SA65359
         LA    RB,LCBCPA+24             SET TIC TO CPA
         ST    RB,PRFTIC-IEDQPRF(,RA)   SET IN CCW
         MVI   PRFOPCDE-IEDQPRF(RA),CCWWRITE    >ET COMMAND CODE
         MVI   PRFTIC-IEDQPRF(RA),CCWTIC    SET TIC COMMAND
         LA    RWKA,LCBCPA+40           RESTART ADDRESS
         B     RESTCOM                  USE COMMON EXIT
         SPACE
SAME     EQU   *
         LR    RA,RCCW                  CURRENT UNIT ADDRESS
         CLR   RB,RWKA                  REMAINING GREATER THAN BLOCK
         BNL   GOSAME .              YES, UNIT CONTAINS NEXT BLKSA44894
         SPACE
         TM    LCBCPA+28,CCWSKIP        LAST BLOCK
         BZ    NEXTUNIT                 NO
         SPACE
         CLC   LCBERCCW(1),PRFNBUNT     LAST UNIT OF LAST BUFFER
         BNE   NEXTUNIT                 NO, IT'S NEXT TO LST
         STC   RB,CCWCOUNT+1            SET COUNT FOR LAST UNIT
         B     SENDIT                   BRANCH IF YES
GOSAME   EQU   *
         SR    RB,RWKA                  GET DIFFERENCE
         STC   RB,LCBCPA+52             SAVE REMAINING COUNT
         STC   RWKA,CCWCOUNT+1-CCW(,RA) SET NEW COUNT
         LA    RC,LCBCPA+24             CCW EXIT ADDRESS
         L     RB,PRFTIC-IEDQPRF(,RA)   NEXT CCW
         LA    RB,0(,RB)                CLEAR HI BYTE FOR COMPARE
         CLR   RB,RC                    ALREADY WRITE FROM THIS CCW
         BNE   RESTR                    NO, SAVE ADDRESSS OF NEXT
SENDIT   EQU   *
         ST    RA,LCBCPA+48             SET UP TIC ADDRESS
         MVI   LCBCPA+48,CCWTIC         SET COMMAND CODE
         B     SENDLAST                 GO EXIT
         SPACE
         SPACE
NOTRP    EQU   *
         L     RCCW,LCBCPA+12           CURRENT CCW
         CLI   CCWCOUNT+1,0             DID CHAN PROG CHECK OCCUR
         BNE   UPDTFLD                  BRANCH IF NO
         TM    CCW+11,X'02'             NEXT BUFFER AVAILABLE
         BNZ   PCSTART                  BRANCH IF NEXT NOT AVAIL
         MVC   LCBCPA+13(3),CCW+9 .     SET UP NEW START CCW     S21101
         L     RCCW,8(,RCCW)            BUMMP TO NEXT BUFFER
         MVC   LCBRECAD,PRFCRCD-IEDQPRF(RCCW) SET QUEUE ADDRESS
         MVC   LCBNTXT,PRFNTXT-IEDQPRF(RCCW) SET DIAK RECORD
         LA    R0,PRFSTXT-PRFSUNIT      SAVE FOR LATER
         STH   R0,LCBRECOF              SET IN LCB
UPDTFLD  EQU   *
         MVC   SCBDEOB+1(3),LCBRECAD    MOVE QUEUE ADDRESS
         MVC   SCBEOB(2),LCBRECOF       SET OFFSET INTO RECORD
         MVC   SCBDEOB(1),LCBNTXT       SET DISK RECORD
         BAL   RC,DIALTEST .            CHECK BSC DIAL SEND PRI  S21101
         B     NODIAL .                  BRANCH IF NOT DIAL SEND S21101
          SPACE 1                                                S21101
         BAL   RC,ONLYEOT .             IF ONLY EOT IS LEFT TREATS21101
*                                          TRUE END OF MESSAGE INS21101
*                                          ORDER TO FLUSH QUEUE  S21101
         B     RTBUFEOT .               BRANCH ONLY EOT IS LEFT  S21101
          SPACE 1                                                S21101
NODIAL   EQU    *                                                S21101
         CLI   LCBLINK,RWACK            WACK ON BUFFERED LINE
         BNE   EXIT3                    BRAVNCH NO TO RESTART
         SPACE
         BAL   RC,ONLYEOT .             CHECK IF WE ARE AT END   S21101
*                                          OF MESSAGE            S21101
         B     EXIT3 .                  BEANCH IF ONLY EOT REMINSS21101
          SPACE 1                                                S21101
NOTNOW   EQU   *
         MVI   LCBERCCW,NOPCI           SET PARAMETER
         ST    RF,LCBRCB                SAVE BASE
         BAL   RA,FINDBUFF              POST PREVIOUS BUFFERS
         L     RF,LCBRCB                RESTORE BASE
         OI    PRFTIC,PRFEOMSG          SET TEMP END OF MSG      S22025
FSELECT  EQU   *                                                 S22025
         IC    R0,LCBLSPCI-1            SAVE HI ORDER BYTE
         ST    RPREFIX,LCBLSPCI-1       SET LAST SERVICED BUFFER
         STC   R0,LCBLSPCI-1            SET  HI ORDER BYTE
         MVI   LCBTPCD+2,TPBUFEOT       SET TP OP CODE
         B     RESETEOT                 WRITE EOT
NEXTBLK  CLI   LCBCPA+52,0              EXECUTED INSTRUCTION
CLIUNT   EQU   *
         CLI   PRFNBUNT,0
         SPACE 10                                                S21101
DIALTEST EQU   *                                                 S21101
*                                                                S21101
*        SUBROUTINE TO DETERMINE IS LINE IS BSC DIAL WITH SEND   S21101
* PRIORITY                                                       S21101
*                                                                S21101
         TM    LCBSTAT2,LCBDIAL .       DIAL LCB                 S21101
         BCR   8,RC .                   BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         CLI   LCBRSPRI,SENDPRI .       SEND PRIORITY            S21101
         BCR   7,RC .                   BRANCH IF NO             S21101
         SPACE 1                                                 S21101
         OI    SCBBSCFM,SCBNOEOT .      SET FLAG FOR SCHEDULER ANS21101
*                                         AND I/O GEN TO NOT RESES21101
*                                         ACK COUNTER AND TO PROCS21101
*                                         WITH SENDING           S21101
         B     4(RC) .                  RETURN FOR DIAL WITH SENDS21101
         EJECT
.L71     ANOP
         AIF   ('&GEN' EQ 'BISC').L70
         USING *,RF                                                 TSO
DYNC     EQU   *                                                    TSO
         CLI   CCWOPCDE,CCWENAB         THIS ENABEL INTERRUPT       TSO
         BE    CHGPREP                  YES. CHANGE PREP TO READ    TSO
         SPACE
DYN1     EQU   *                                                    TSO
         TM    LCBSENS0,TIMEOUT+IR      TIME OUT OR INTERV REQ.     TSO
         BM    S1050                      2703        2702          TSO
S2741    EQU   *                                                  TSO
         SPACE
TSO98    EQU   * .                                                  TSO
         MVI   LCBTPCD+10,0 .           ZERO SPECIAL FLAG           TSO
         B     TSO2 .                   PROCESS MESSAGE             TSO
         SPACE
S1050    EQU   *                                                    TSO
         CLI   LCBTPCD+11,X'16'         CIRCLE D RCVD?            TSO
         BE    S2741                    YES. MUST BE 2741         TSO
         NI    LCBTSOB,X'FF'-LCB2741N . IS NOT A 2741
         NI    LCBSTAT1,X'FF'-LCBCONT   CLR CONTINUE REQ.           TSO
         ST    R15,LCBERCCW+4    .     SAVE BASE                SA51097
         L     12,AVTKA02               ADR OF ACTIVATE (IOGEN)     TSO
         LA    RAVT,AVTSAVE2            AVT BASE FOR KA             TSO
         BALR  5,12                                                 TSO
         L     R15,LCBERCCW+4  .       RESTORE BASE             SA51097
         LA    RBASE,4095(,R15)                                   TSO
         LA    RBASE,1(,RBASE)                                    TSO
         SH    RAVT,AVTBACK             RESET AVT BASE              TSO
         MVC   LCBCPA+48(4),LCBCPA+56   OVERLAY W/WRT PADS          TSO
         LA    RC,LCBCPA+16             ADR FOR 1050 START I/O      TSO
         ST    RC,LCBCPA+56             BUILD TIC TO IT             TSO
         MVI   LCBCPA+56,CCWTIC         SET TIC                     TSO
         LA    RC,LCBCPA+48             NEW SIO ADR                 TSO
NEWSTART EQU   *                                                    TSO
         MVI   LCBTPCD+10,0             CLEAR CHECK INDICATOR       TSO
         ST    RC,LCBSTART-1                                        TSO
         B     RESTART                                              TSO
         SPACE
CHGPREP  EQU   *                                                    TSO
         OI    LCBTSTSW,X'80'           SET 'CONNECTED' BIT         TSO
         OI    LCBTSOB,LCB2741N .       ASSUME 2741                 TSO
         LA    RC,LCBTPCD+11            ADDR FOR READ               TSO
         ST    RC,LCBCPA+40             CHANGE IT                   TSO
         MVI   LCBCPA+40,CCWREAD        SET CCW = READ              TSO
         MVI   LCBCPA+44,X'80' .        DATA CHAIN READ             TSO
         L     RC,LCBCPA+48             SAVE WRT PADS CMD           TSO
         MVC   LCBCPA+48(4),LCBCPA+56   MOVE IN 'TIC BFR'           TSO
         ST    RC,LCBCPA+56             SAVE WRT PADS
         LA    RCCW,LCBCPA+40           NEW SIO ADDR                TSO
         ST    RCCW,LCBSTART-1                                      TSO
         B     RESTART                                              TSO
         EJECT
.C       ANOP                                                    S22025
TSOCHK   EQU   *
RWORK    EQU   RB                                                   TSO
         SPACE
         USING *,RA
         TM    LCBSENS0,X'40'           INTERVENTION REQUIRED?      TSO
         BZ    ERP                      NO..ERP CAN HANDLE          TSO
         AIF   ('&GEN' EQ 'QTAM').C1                             S22025
         LA    RF,OPCHK1
         LA    RPREFIX,LCBERB .         SET TO POST ERB TO AYF     TSO
.C1      ANOP                                                    S22025
         TM    LCBSTAT2,LCBMSGNN                                    TSO
         BNO   CKTXT .                  BRANCH IF NOT A MSGGEN   S22025
         AIF   ('&GEN' NE 'QTAM').C2 .                           S22025
         B     ERP .                    GO TO ERP                S22025
         AIF   ('&GEN' EQ 'QTAM').CC .                           S22025
.C2      ANOP .                                                  S22025
         TM    LCBTSOB,LCBTSBUF .       IS THIS A TSO LINE ?     S22025
         BNO   ERP .                    NOT TSO-TCAM TREATS AS   S22025
*                                            ERROR               S22025
         B     CKATN .                  TSO-CHECK ATTN STATUS    S22025
.CC      ANOP
CKTXT    LA    RCCW,0(,RCCW) .          GET ADDRESS OF END CCW   S22025
         LA    RWORK,LCBCPA             START OF CH PGM AREA
         SR    RWORK,RCCW
         BP    ITEXT
         SR    RB,RB .                  CLEAR                       TSO
         L     RC,LCBDCBPT .            DCB ADDRESS                 TSO
         USING IHADCB,RC  .                                         TSO
         IC    RB,DCBEIOBX .            LCB SIZE                    TSO
         DROP  RC  .                                                TSO
         LA    RB,0(RLCB,RB) .          LCB ADDRESS                 TSO
         SR    RB,RCCW .                IN CHANNEL PROGRAM AREA     TSO
         BNP   ITEXT .                  NOT IN CHANNEL PROGRAM   S22025
         AIF   ('&GEN' NE 'QTAM').C9 .                           S22025
         B     ERP .                    SCHEDULE ERP             S22025
         AIF   ('&GEN' EQ 'QTAM').C4 .                           S22025
.C9      ANOP .                                                  S22025
         TM    LCBTSOB,LCBTSBUF .       IS THIS A TSO LINE ?     S22025
         BNO   ERP .                    NOT TSO - TCAM TREATS AS S22025
*                                            ERROR               S22025
         BO    TWXCHK1 .                CHECK FOR POSSIBLE TWX   S22025
*                                       ATTENTION ON READ TSO    S22025
.C3      ANOP                                                    S22025
ITEXT    EQU   *
         TM    LCBTSOB,LCBTSBUF .       IS THIS A TSO LINE ?     S22025
         BNO   TCAMATN .                BRANCH = NO              S22025
         AIF   ('&GEN' EQ 'QTAM').C4                             S22025
         TM    LCBSTAT1,LCBRECVN .      ARE WE IN RECEIVE MODE      TSO
         BO    TWXCHK2 .          BR ON YES TO CHECK FOR TWX        TSO
ITEXT1   EQU   *
         L     RPREFIX,LCBLSPCI-1 .     POST BUFFER TO AYF         TSO
         MVC   PRFSHDR-IEDQPRF(8,RPREFIX),0(RPREFIX) SAVE COMMANDS22029
CKATN    EQU   *
         L     RB,AVTTSOPT .            ADDRESS OF TSO WORK AREA   TSO
         L     RF,TSIHALT-IEDQTSI(RB) . ADDRESS OF AYF             TSO
         B     TSOCOM .                 USE COMMON CODE             TSO
.C4      ANOP                                                    S22025
         AIF   ('&GEN' NE 'QTAM').C5 .                           S22025
ITEXT    EQU   * .                                               S22025
.C5      ANOP .                                                  S22025
TCAMATN  EQU   * .                                               S22025
         SPACE 1
         TM    LCBSTAT1,LCBRECVN .      LINE RECEIVING ?         S22025
         BO    ERP .                    BRANCH IF YES            S22025
         BAL   RD,DCTBASE .             GO FIND DCT              S22025
         USING *,RD .                     ADDRESSABILITY         S22025
         TM    1(RA),ATTN .             IS ATTENTION ALLOWED?    S22025
         BZ    ERP .                    BRACNH = NO              S22025
         LR    RPREFIX,RLCB .           SET TO POST LCB TO       S22025
*                                            STOPLINE            S22025
         MVI   PRFPRI,PRILCBAT .        SET PRIORITY             S22025
         L     RF,AVTHK .               GET ROUTINE'S ADDRESS    S22025
         AIF   ('&GEN' EQ 'QTAM').C6                             S22025
         B     TSOCOM1                                           S22025
         DROP  RD                                                S22025
         USING TSOCHK,RA
*
TWXCHK1  EQU   *
*
         CLI   0(RCCW),X'0A' .  IS THE INT. CCW AN INH. READ        TSO
         BNE   ERP .              BR IF NO, TREAT AS ERROR          TSO
         LA    RC,LCBCPA+24 .   GET ADDR OF READ RESP. CCW          TSO
         CR    RC,RCCW .        WAS INT ON READ RESP.               TSO
         BE    ITEXT .                  BR YES FOR TWX ATTN ON READ TSO
         B     CHK10501 NO, CHECK FOR 1050                         TSO
*
TWXCHK2  EQU   *
         LH    RC,2(0,1) .   GET UCB ADDR                           TSO
         CLI   16(RC),X'51' .           CHK UCB MODEL CODE FOR TWX  TSO
         BNE   CHK10502 BR IF NOT, CHECK 1050                      TSO
         TM    19(RC),X'50' .CHECK UCB UNIT TYPE FOR TEL. ADPT./2   TSO
         BNO   CHK10502 BR IF NO, CHECK 1050                       TSO
         TM    19(RC),X'A0' IS IT ANYTHING BUT TEL.ADPT.-2          TSO
         BC    5,CHK10502 BR IF YES  CHECK 1050                    TSO
         B     ITEXT1 .     WE HAVE TWX ATTN ON READ TEXT           TSO
*
CHK10501 EQU   *
         LA    RC,LCBCPA+32 GET ADDR OF POSSIBLE 1050 RD. RESP. CCW TSO
         CR    RCCW,RC WAS INT. ON RD. RESP.                        TSO
         BE    ITEXT YES,ATTN ON NULL LINE,TREAT AS TEXT            TSO
         B     ERP NO, ATTN ON READ RESP, TREAT AS ERROR            TSO
CHK10502 EQU   *
         TM    19(RC),X'10' IS IT TERMINAL ADPTER-TYPE 1            TSO
         BZ    ERP  BR IF NO                                        TSO
         TM    19(RC),X'E0' IS IT ANYTHING BUT TERM. ADPT.-TYPE 1   TSO
         BC    5,ERP BR IF YES                                      TSO
         TM    LCBTSOB,LCB2741N IS IT 2741                          TSO
         BZ    ITEXT1 BR IF NO, MUST BE 1050,TREAT AS ATTN ON RD TEXT
         B     ERP GO TO ERP FOR 2741                               TSO
LCBTOATN EQU   *                                                    TSO
         OI    SCBERR3,SCBATTN                                      TSO
         MVI   LCBPRI,PRILNCL                                       TSO
         LR    RPREFIX,RLCB                                         TSO
         L     RF,AVTTSOPT .           GET ADDRESS OF TSINPUT QCBS22029
         L     RF,TSIATTEN-IEDQTSI(,RF) GET ADDRESS OF ATTENTION S22029
TSOCOM   EQU   * .                                                  TSO
         MVI   PRFPRI,PRIRCQCB .        SET PRIORITY
.C6      ANOP                                                    S22025
TSOCOM1  LA    RC,FREERQE .                                      S22025
         B     ENQUEUE .                PLACE ELEMENT ON READY Q    TSO
OPCHK1   EQU   *
         USING *,RF
         MVI   LCBTPCD+11,0 .           CLEAR OPEN CHECK FLAG       TSO
         AIF   ('&GEN' EQ 'QTAM').C7   .                         S22025
        TM    LCBSTAT2,LCBMSGNN .      MESSAGE GEN                 TSO
         BZ    NOATN .                  BRANCH NO                  TSO
         TM    LCBCSW+4,X2F   .         ERROR STATUS               TSO
         BNZ   ERBPOST .                BRANCH YES                 TSO
         TM    LCBSENS0,IR+TIMEOUT .    HAS USER HUNG UP           TSO
        BNZ   HANG .                   BRANCH YES
         L     RA,TSOCHKAD .            SET BASE
         USING TSOCHK,RA
         B     LCBTOATN .               POST LCB TO ATTENTION       TSO
         DROP  RA
NOATN    EQU   *
         TM    LCBCSW+4,X2F             SERIOUS ERRORS              TSO
         BNZ   HANG                     GO TO HANG-UP
         TM    LCBSENS0,IR+TIMEOUT      HUNG UP
         BNZ   HANG                     GO
         SPACE
         TM    LCBTSOB,LCBPREP
         BO    RTPREP
         OI    SCBERR3,SCBATTN          SET ATTENTION BIT           TSO
         B     RESETSO .                                         S22025
.C7      ANOP                                                    S22025
TCAMATN1 TM    LCBSENS0,IR+TIMEOUT .    HAS STATION HUNG UP ?    S22025
         BZ    BITON                    BRANCH IF NO             S22025
         MVI   LCBECBCC,X7F             RESET ECB COMPLETION CD  S22025
         MVC   LCBCSW(7),LCBCSWSV       RESTORE CSW SAVED IN     S22025
*                                       STOPLINE                 S22025
         XC    LCBCSWSV(7),LCBCSWSV     CLEAR FIELD              S22025
         B     ERP                      HANDLE INTERVENTION REQ  S22025
BITON    EQU   *                                                 S22025
         OI    SCBERR3,SCBATTN .        NO, SET ATTENTION BIT    S22025
         MVI   LCBCHAIN,LCBNORTY                                 S22025
         SPACE
RESETSO  EQU   *
         MVI   LCBTPCD+11,0             CLR OPEN LINE CHK INDIC     TSO
         MVC   LCBCSW(7),LCBCSWSV
         AIF   ('&GEN' EQ 'QTAM').C8 .                           S22025
         XC    LCBCSWSV(7),LCBCSWSV     CLEAR
         NC    LCBLSPCI(2),LCBLSPCI .   MAKE SURE                   TSO
         BZ    CTLNOBUF
.C8      ANOP .                                                  S22025
         MVI   LCBECBCC,PERMERR .       SET PERMANENT ERROR
         B     TSO2 .                   POST BUFFER TO MH
         AIF   ('&GEN' EQ 'QTAM').L70                            S22025
CTLNOBUF EQU   *
         TM    LCBSTAT2,LCBMSGNN        WAS IT MSGGE?"
         BO    ERBPOST
         L     RA,TSOCHKAD .            ESTABLISH ADDRESSABILITY S22026
         USING TSOCHK,RA .                                       S22026
         B     LCBTOATN .               POST LCB TO ATTN            TSO
         DROP  RA .                                              S22026
*  ASSUME USER HAS HUNG UP (DISCONNTCTED)
HANG     EQU   *
         L     RSCB,LCBSCBA-1
         TM    LCBSTAT2,LCBMSGNN .      MESSAGE GEN                 TSO
         BO    NOBUF .                   BRANCH YES                 TSO
         SPACE
         NC    LCBLSPCI(2),LCBLSPCI .   ANY BUFFERS ASSIGNED
         BNZ   TSTXTER
         SPACE
NOBUF    EQU   *
*  NO BUFFERS TO PASS SO POST LCB TO HANGUP
         L     RWORK,AVTTSOPT
         USING IEDQTSI,RWORK
         L     RF,TSIHANG .             ADDRESS OF HANGUP ROUTINE   TSO
         DROP  RWORK
         LR    RPREFIX,RLCB             ELEMENT TO PASS
         BAL   RC,ENQUEUE
         B     FREERQE
         SPACE
TSTXTER  EQU   *
         TM    LCBSTAT1,LCBSENDN        SENDING
         BO    RESETSO .                                            TSO
*  RECEIVING. MAKE PERM ERROR ON FIRST BUFFER
TSTXTRCV EQU   *
         L     RCCW,LCBLSPCI-1
         LH    RPREFIX,6(,RCCW)         ORIG COUNT
         STH   RPREFIX,LCBCSW+5
         MVI   LCBECBCC,X'41'
         IC    RPREFIX,LCBCSW-1
         LA    RCCW,8(,RCCW)
         ST    RCCW,LCBCSW-1
         STC   RPREFIX,LCBCSW-1
         XC    LCBCSWSV(7),LCBCSWSV
         MVI   LCBTPCD+11,0
         B     TSO2
*  SEND MODE. TREAT AS FOR OUTPUT ATTN EXCEPT ATTN BIT NOT SET
         EJECT
.L70     ANOP
         AIF   ('&GEN' EQ 'MINI').LL4A
SOURCER  EQU   *                                                 S99228
         AIF   ('&GEN' EQ 'QTAM').LL4F                          SA65397
* THIS SUBROUTINE CALCULATES TRANSMISSION SOURCES OF MESSAGES    S99228
* RECEIVED UNDER GENERAL POLL                                    S99228
         USING *,RF                                              S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         USING IHADCB,RA                                         S99228
         L     RA,LCBDCBPT              LOAD INVLIST POINTER     S99228
         IC    RB,LCBUCBX               LOAD INVLIST INDEX       S99228
         SLL   RB,TWO                   MULTIPLY POINTER BY 4    S99228
         L     RC,DCBINVLI(RB)          LOAD ADDR INVLIST C WORD S99228
         LR    RPREFIX,RWKA             LOAD BUFFER ADDRESS      S99228
         SR    RB,RB                    CLEAR IDLES REGISTER     S99228
         IC    RB,LCBISZE               INSERT IDLES COUNT       S99228
         TM    LCBERCCW+ONE,IN          LINE CONTROL IN?         S99228
         BO    LCPRES                   BRANCH YES               S99228
         BCTR  RB,R0                    SET TO POINT AT LC CHAR  S99228
LCPRES   EQU   *                                                 S99228
         LA    RE,PRFSHDR(RB)           LOAD DATA ADDRESS        S99228
         AIF   ('&GEN' EQ 'STSP').LL4C                           S99228
         TM    LCBSTAT2,LCBSYNC         BISYNC LINE?             S99228
         BZ    REGMSG                   NO, SKIP SOH%R SEARCH    S99228
         L     RB,DCBSCTAD-ONE          LOAD ADDR SPEC CHARS TBL S99228
         DROP  RA                                                S99228
         SR    RA,RA                    CLEAR OFFSET REGISTER    S99228
         IC    RA,RSOHCH(R0,RB)         INSERT SOH%R OFFSET      S99228
         LA    RB,ONE(RA,RB)            LOAD ADDR SOH%R CHARS    S99228
         CLC   ZERO(ONE,RB),ZERO(RE)    SOH%R MESSAGE?           S99228
         BNE   USUMSG                   BRANCH NO                S99228
         LA    RE,THREE(R0,RE)          BYPASS SOH%R STX CHARS   S99228
USUMSG   EQU   *                                                 S99228
         LA    RE,ONE(R0,RE)            POINT TO CU ENTRY        S99228
REGMSG   EQU   *                                                 S99228
.LL4C    ANOP                                                    S99228
         LR    R0,RC                    SAVE INVLIST C WORD ADDR S99228
         SR    RA,RA                    CLEAR ENTRY COUNT REG    S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         IC    RB,TWO(R0,RC)            LOAD INVLIST ENTRY LENGT S99228
         IC    RA,ONE(R0,RC)            SET ACTIVE INVLIST E CNT S99228
         LA    RC,EIGHT(R0,RC)          SET INVLIST START ADDR   S99228
         LA    RPREFIX,TWO              SET ACTIVE-INACTIVE CON  S99228
SYNCTEST EQU   *                                                SA65428
         LTR   RA,RA                    TEST NUMBER ACTIVE ENT   S99228
         BZ    NOORG                    NO ACTIVE ENTRIES NO SRC S99228
         AIF   ('&GEN' EQ 'STSP').LL4D                           S99228
         TM    LCBSTAT2,LCBSYNC         TEST FOR BSYNC LINE      S99228
         BZ    SLOLINE                  NO, NO SKIP OF 1ST CU    S99228
         LA    RC,ONE(R0,RC)            ADJ PTR TO COMPARE 2ND C S99228
SLOLINE  EQU   *                                                 S99228
.LL4D    ANOP                                                    S99228
         L     RWKA,LCBINVPT-ONE        LOAD INVLIST POINTER     S99228
CONCHECK EQU   *                                                 S99228
         CLC   ZERO(ONE,RWKA),ZERO(RC)  COMPARE CONTROL UNIT ADD S99228
         BE    DVCCHECK                 CU ADDRS EQUAL CHECK DVC S99228
CONTEST  EQU   *                                                 S99228
         AR    RC,RB                    SKIP TO NEXT INVLIST ENT S99228
         BCT   RA,CONCHECK              CONTINUE SEARCHING       S99228
         BCT   RPREFIX,FEINCRE          PROCESS INACTIVE ENTRIES S99228
         B     NOORG                    NO SRC FOUND SET NO SRC  S99228
DVCCHECK EQU   *                                                 S99228
         CLC   ONE(ONE,RC),ONE(RE)      COMPARE DEVICE ADDR      S99228
         BNE   CONTEST                  BRANCH DEVICE NOT FOUND  S99228
         STM   RPREFIX,RC,SRCREGS       SAVE REGISTERS           S99228
         LR    RA,R0                    LOAD INVLIST CWORD ADDR  S99228
         TM    LCBSTAT2,LCBSYNC         BYSNC INVLIST?           S99228
         BZ    RUNLOW                   BRANCH NO                S99228
         BCTR  RB,R0                    REDUCE ENTRY LENGTH      S99228
RUNLOW   EQU   *                                                 S99228
         BCTR  RB,R0                    REDUCE ENTRY SIZE        S99228
         IC    RB,ZERO(RB,RC)           INSERT ENTRY INDEX       S99228
         SLL   RB,ONE                   DOUBLE INDEX VALUE       S99228
         SR    RA,RB                    POINT TO TNT INDEX       S99228
         LH    RC,ZERO(R0,RA)           LOAD TNT INDEX           S99228
         BAL   RWKA,BOLOC               BRANCH TO DCT ENTRY LOC  S99228
         TM    ONE(RA),C3270            3270 DEVICE?             S99228
         BO    RELOAD                   BRANCH YES               S99228
         TM    THREE(RA),CNOIDLES       2260 DEVICE?             S99228
RELOAD   EQU   *                                                 S99228
         LM    RPREFIX,RC,SRCREGS       RESTORE REGISTERS        S99228
         BO    SETORG                   BRANCH IF GENPOLL DEVICE S99228
         B     CONTEST                  NOT GENPOLL DEVICE       S99228
FEINCRE  EQU   *                                                 S99228
         LA    RC,ONE(R0,RC)            ADJ PTR ADDR TO PASS FE  S99228
         LR    RWKA,R0                  RESTORE CONTROL WORD ADD S99228
         IC    RA,ZERO(R0,RWKA)         LOAD TOTAL ENTRIES       S99228
         SR    RB,RB                    CLEAR ACTIVE ENTRIES REG S99228
         IC    RB,ONE(R0,RWKA)          LOAD ACTIVE ENTIRES      S99228
         SR    RA,RB                    DERIVE INACTIVE ENTRIES  S99228
         IC    RB,TWO(R0,RWKA)          RESTORE LENGTH           S99228
         B     SYNCTEST                 CONT SRCH INACT ENTRIES  S99228
SETORG   EQU   *                                                 S99228
         AIF   ('&GEN' EQ 'STSP').LL4E                           S99228
         TM    LCBSTAT2,LCBSYNC         BYSNC INVLIST?           S99228
         BZ    UNSYNC                   NO, NO RETARD INV PTR    S99228
         BCTR  RC,R0                    RETARD INV PTR TO CU ADD S99228
UNSYNC   EQU   *                                                 S99228
.LL4E    ANOP                                                    S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         ST    RC,LCBXRADR              SAVE ERP POLL ADDR       S99228
*                                       FOR ERP POLL             S99228
         BCTR  RC,R0                    RETARD INVLIST ENTRY PTR S99228
         AR    RC,RB                    PT TO INVLIST ENT INDEX  S99228
         SR    RWKA,RWKA                CLEAR WORK REGISTER      S99228
         IC    RWKA,ZERO(R0,RC)         LOAD INDEX VALUE         S99228
         SLL   RWKA,ONE                 DOUBLE INDEX VALUE       S99228
         LR    RC,R0                    RSTR INVLIST C WORD ADDR S99228
         SR    RC,RWKA                  POINT TO TNT INDEX       S99228
         LH    RWKA,ZERO(R0,RC)         LOAD TNT INDEX VALUE     S99228
         STH   RWKA,LCBTTCIN            SET SOURCE OF TRANS      S99228
         BR    RD                       RETURN TO CALLER         S99228
NOORG    EQU   *                                                 S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR SA66946
         NI    LCBXFLAG,LCBERSTP        PREVENT ERP POLL         S99228
         XC    LCBTTCIN(TWO),LCBTTCIN   INVALID SOURCE CLEAR SRC S99228
.LL4F    ANOP                                                   SA65397
         BR    RD                       RETURN TO CALLER         S99228
         SPACE 2
SRCREGS  DS    4F                       SAVE AREA FOR SOURCE     S99228
*                                       DETERMINATION REGISTERS  S99228
         EJECT                                                   S99228
LOOKER   EQU   *                                                 S99228
* THIS SUBROUTINE LOCATES THE INVITATION LIST AND DEVICE         S99228
* CHARACTERISTICS TABLE ENTRY FOR 2260  AND 3270 DEVICES         S99228
         USING *,RF                                              S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         USING IHADCB,RA                                         S99228
         L     RA,LCBDCBPT              LOAD DCB POINTER         S99228
         IC    RB,LCBUCBX               LOAD INVLIST INDEX       S99228
         SLL   RB,TWO                   MULTIPLY INDEX BY 4      S99228
         L     RC,DCBINVLI(RB)          LOAD ADDR INVLIST CWORD  S99228
         LR    R0,RC                    SAVE ADDR INVLIST CWORD  S99228
         SR    RB,RB                    CLEAR LENGTH REGISTER    S99228
         IC    RB,DCBEIOBX              INSERT LCB LENGTH        S99228
         SH    RB,AVTHA4                REDUCE LCB LENGTH BY 8   S99228
         SH    RB,AVTHA4                BYTES TO POINT AT EXT    S99228
         LA    RE,ZERO(RB,RLCB)         LOAD LCB EXTENSION ADDR  S99228
         IC    RA,AVTDOUBX              SAVE HI ORDER BYTE       S99228
         ST    RE,AVTDOUBX              SAVE LCB EXTENSION ADDR  S99228
         STC   RA,AVTDOUBX              RESTORE HI ORDER BYTE    S99228
         DROP  RA                                                S99228
         ST    R0,AVTDOUBX+FOUR         SAVE LCB EXTN ADDR      OX03941
         LH    RC,LCBTTCIN .            LOAD TERM INDEX          S99228
         N     RC,AVTCLRHI .            CLEAR HI-ORDER HALF      S99228
         TM    LCBSTAT1,LCBSENDN        SEND STATE?              S99228
         BO    OUTBY                    YES, USE LCBTTCIN        S99228
         TM    LCBXFLAG,LCBSRCPF        SRC DETERM PERFORMED?    S99228
         BO    USEPTR                   YES, USE INVLIST PTR     S99228
         LTR   RC,RC .                  TTCIN ZERO               S99228
         BNZ   OUTBY                    NO, LCBTTCIN VALID       S99228
USEPTR   EQU   *                                                 S99228
         LR    RC,R0                    RESTORE REG              S99228
         L     RA,LCBINVPT-ONE          LOAD INVLIST ENTRY PTR   S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         IC    RB,TWO(R0,RC)            LOAD INVLIST ENTRY LENGTHS99228
         AR    RA,RB                    SKIP TO END INVLIST ENT  S99228
         BCTR  RA,R0                    POINT TO ENTRY INDEX     S99228
         IC    RB,ZERO(R0,RA)           LOAD ENTRY INDEX VALUE   S99228
         SLL   RB,ONE                   DOUBLE INDEX VALUE       S99228
         SR    RC,RB                    POINT TO TNT INDEX       S99228
         LH    RC,ZERO(R0,RC)           LOAD TNT INDEX           S99228
OUTBY    EQU   *                                                 S99228
         BAL   RWKA,BOLOC               BRANCH TO DCT ENTRY LOC  S99228
         MVC   LCBXDCT(THREE),ONE(RA)   SAVE DCT BYTES 1, 2, 3   S99228
         LR    RE,R0                    LOAD INVLIST CWORD ADDR  S99228
         BR    RD                       RETURN                   S99228
         EJECT
BOLOC    EQU   *                                                 S99228
* THIS SUBROUTINE LOCATES DEVICE CHARACTERISTICS TABLE ENTRIES   S99228
         N     RC,AVTCLRHI              CLEAR HI ORDER BYTES     S99228
         L     RA,AVTRNMPT              LOAD ADDR TERMNAME TABLE S99228
         USING IEDQTNTD,RA                                       S99228
         BAL   RPREFIX,TNTDCODE         BRANCH TO TRM ENT LOC RT S99228
         USING IEDQTRM,RB                                        S99228
         DROP  RA                                                S99228
         SR    RA,RA                    CLEAR INDEX REGISTER     S99228
         IC    RA,TRMCHCIN              LOAD DCT INDEX           S99228
         BCTR  RA,R0                    DECREMENT FOR ENTRY      S99228
         SLL   RA,TWO                   MULTIPLY FOR OFFSET      S99228
         DROP  RB                                                S99228
         A     RA,AVTCSTCS              SET ADDR DCT ENTRY       S99228
         BR    RWKA                     RETURN TO CALLER         S99228
         AIF   ('&GEN' EQ 'STSP').LL4A                           S99228
         EJECT
FINDER   EQU   *                                                 S99228
* THIS ROUTINE CALCULATES INVITATION LIST ENTRY ADDRESSES        S99228
* ON 3270 DEVICE DEPENDENT OUTPUT ERRORS                         S99228
         USING *,RF                                              S99228
         SR    RB,RB                    CLEAR WORK REGISTER      S99228
         L     RE,AVTDOUBX+FOUR         LOAD INVLIST CWORD ADDR  S99228
         SR    RC,RC                    CLEAR WORK REGISTER      S99228
         IC    RC,ZERO(R0,RE)           INSERT INVLIST TOTAL ENT S99228
         LA    RC,ONE(R0,RC)            INCRE TOTAL BY 1 FOR LOO S99228
         SLL   RC,ONE                   MULT BY 2 FOR ADDR RETAR S99228
         LR    RB,RE                    SAVE INVLIST CWORD ADDR  S99228
         SR    RB,RC                    RETARD ADDR TO 1ST INDEX S99228
         SRL   RC,ONE                   RETURN TO TOTAL ENTRIES  S99228
LOOPER   EQU   *                                                 S99228
         BCT   RC,LOCENTRY              NO INDEX FOUND EXIT      S99228
         BR    RD                       RETURN                   S99228
LOCENTRY EQU   *                                                 S99228
         LA    RB,TWO(R0,RB)            ADJUST TO 1ST INDEX      S99228
         CLC   ZERO(TWO,RB),LCBTTCIN    INDEX =CUR CON INDEX?    S99228
         BNE   LOOPER                   NO, CHECK NEXT INDEX     S99228
         LR    RB,RC                    SAVE TNT INDEX INDEX     S99228
         SR    RC,RC                    CLEAR WORK REGISTER      S99228
         IC    RC,ONE(R0,RE)            INSERT ACTIVE ENTRIES    S99228
         SR    RA,RA                    CLEAR WORK REGISTER      S99228
         IC    RA,TWO(R0,RE)            INSERT INVLIST ENTRY LEN S99228
         BCTR  RA,R0                    SET LENGTH -INDEX        S99228
         LR    R0,RE                    SAVE INVLIST CWORD ADDR  S99228
         LA    RE,EIGHT(R0,RE)          SKIP TO 1ST ENTRY        S99228
         SR    RWKA,RWKA                CLEAR WORD REGISTER      S99228
         LTR   RC,RC .                  ANY ACTIVE ENTRIES      SA65374
         BZ    ROUNDER1 .               BRANCH IF YES           SA65374
ROUNDER  EQU   *                                                 S99228
         IC    RWKA,ZERO(RA,RE)         INSERT ENTRY INDEX       S99228
         CR    RWKA,RB                  INDEX = DEVELOPED INDEX? S99228
         BE    SETENTRY                 YES, INV CHARS LOCATED   S99228
         LA    RE,ONE(RA,RE)            SKIP TO NEXT ENTRY       S99228
         BCT   RC,ROUNDER               CHECK ENTRY INDEX        S99228
ROUNDER1 EQU   * .                                              SA65374
         LA    RE,TWO(R0,RE)            SKIP EOT AND FE          S99228
         LR    RWKA,RE                  SAVE CURRENT ENTRY ADDR  S99228
         LR    RE,R0                    RELOAD INVLIST CWORD ADD S99228
         IC    RC,ZERO(R0,RE)           INSERT TOTAL ENTRIES     S99228
         IC    RA,ONE(R0,RE)            INSERT ACTIVE ENTRIES    S99228
         SR    RC,RA                    CALC INACTIVE ENTRIES    S99228
         IC    RA,TWO(R0,RE)            RESTORE ENTRY LENGTH     S99228
         BCTR  RA,R0                    SET LENGTH - INDEX       S99228
         LR    RE,RWKA                  RESTORE ENTRY ADDR       S99228
         SR    RWKA,RWKA                CLEAR WORK REGISTER      S99228
         B     ROUNDER                  CHECK INACTIVE ENTRIES   S99228
SETENTRY EQU   *                                                 S99228
         LR    RC,RE                    SAVE INVLIST CWORD ADDR  S99228
         L     RE,AVTDOUBX              LOAD LCB EXTENSION ADDR  S99228
         ST    RC,LCBXRADR              SET ERP POLL ADDR        S99228
         OI    LCBXFLAG,LCBERPND        SET SOH%R PENDING        S99228
         BR    RD                       RETURN                   S99228
.LL4A    ANOP                                                    S99228
         EJECT                                                   S99228
*        CONSTANTS
ESOHCH   EQU   26 .                                              S22026
CBRDCAST EQU   X'40' .                                           S22026
CC3      EQU   X'30'                    SIO COND CODE MASK
PERMERR  EQU   X'41'                    MASK FOR PERM ERROR(BY ERP)
ZERO     EQU   0
ONE      EQU   1
TWO      EQU   2
THREE    EQU   3
FE       EQU   X'FE'                    END OF INV LIST
FOUR     EQU   4
FIVE     EQU   5                                                 S99228
SIX      EQU   6                                                 S99228
ONESIX   EQU   16                                                S99228
RSOHCH   EQU   29                       OFFSET SOH%R SEQUENCE    S99228
EIGHT    EQU   8
CEDE     EQU   X'0C'                    STATUS=CHAN END, DEVICE END TSO
UNEX     EQU   X'01'                    UNIT EXCEPTION
CSWPC    EQU   X'20'                    CHANNEL PROGRAM CHECK   SA65374
CVTLOC   EQU   X'10'                    CVT PTR LOCATION
EOMSG    EQU   X'80'                    TEMPORARY END OF MSG
DLEEOTCH EQU   16                       OFFSET TO SEQUENCE
EOTCH    EQU   0                        OFFSET TO SEQUENCE IN SCT
STXCH    EQU   1                         OFSET TO SEQUENCE IN SCT
ACK0CH   EQU   4                        INDEX N TO SCT
NAKCH    EQU   6                        INDEX TO SEQUENCE
TOTESOH  EQU   27                       SOH % / FOR TOTE         S21903
CSOHCH   EQU   28                       INDEX TO SOH % C         S99238
ENQCH    EQU   7                        OFFSET TO SEQUENCE IN SCT
ETBCH    EQU   8                         OFSET TO SEQUENCE IN SCT
ETXCH    EQU   9                        OFFSET TO DEQUENCE IN SCT
DLESTXCH EQU   10                       OFFSET TO SEQUENCE IN SCT
BUFF     EQU   X'1A'                    LCBRSKEY FOR BUFFERED LCB
STXENQCH EQU   11                       OFFSET TO SEQUENCE IN SCT
SOHCH    EQU   13                       OFFSET TO SEQUENCE
WACKCH   EQU   14                       INDEX TO SEQUENCE IN SCT
RVICH    EQU   15                       INDEX TO SEQUENCE IN SCT
IN       EQU   X'80'                    MASK FOR LCIN
X2F      EQU   X'2F'                   MASK ERRORS PGM CHK+CAT ERRS
IDRETRY  EQU   6                        RETRY COUNT BSC READ ID
X20      EQU   X'20'                   BIT-LCBFLAG1-ERP IN CONTROL
CMDREJ   EQU   X'80'                    COMMAND REJECT IN SENSE
X24      EQU   X'24'                    MASK FOR ERROR FLAGS
XF2      EQU   X'F2'                    MASK FOR ERRORS-AATN,STMOD,
*                                        CTL UNT END,BUSY,UNTCHCK
CVTOPT01 EQU   X'98'                    OFFSET ADDRESS IN CVT -POST
COMPLETE EQU   X'40'                    MASK FOR ECB COMPLETE
ACTIVE   EQU   1                        ILIST OFFSET-#ACTIVE ENTRIES
LOGICAL  EQU   X'04'                    LOGICAL EXIT AT MH
CONV     EQU   X'10'                    CONVERSE REQUEST AT MH
LISTSIZE EQU   8                        SIZE OF ILIST CONTROL FIELDS
FF       EQU   X'FF'                    MASK FOR TEST AND SET
CEDEUC   EQU   X'0E'                    CH END, DEV END, UNIT CHECK
IOBEXEP  EQU   X'04'                    FLAG TO GET TO ERP
TIMEOUT  EQU   X'01'                    TIME OUT VALUE IN SENSE
IR       EQU   X'40'                    INTERVENTION REQ.           TSO
CIRCC    EQU   X'1F'                                                TSO
CIRCD    EQU   X'16'                                                TSO
X80      EQU   X'80'                    MASK FOR TS SWITCH
X48      EQU   X'48'                   COMP CODE IN ECB FOR HIO
X01      EQU   X'01'                    TP OP CODE MASK
X12      EQU   X'12'                    TP CODE FOR BREAK           TSO
RACK0    EQU   X'81'                    INDICATOES RESPONSE RCVD
RACK1    EQU   X'41'                    INDICATOES RESPONSE RCVD
LMD      EQU   X'03' .                  LMD FLAGS ON STARTMH     S22025
RWACK    EQU   X'20'                    INDICATOES RESPONSE RCVD
RTTD     EQU   X'10'                    INDICATOES RESPONSE RCVD
REOT     EQU   X'08'                    INDICATOES RESPONSE RCVD
RRVI     EQU   X'04'                    INDICATOES RESPONSE RCVD
RNAK     EQU   X'02'                    INDIACTES RESPONSE RCVD
RENQ     EQU   X'0C'                    MASK FOR RESPOSNE RECEIVED
XF0      EQU   X'F0'                    SWITCH FOR 2260L AND LOCAL
*                                         SCHEDULER
UNITCHK  EQU   X'0E'                    SET ENDING STATUS
DATCK    EQU   X'08'                    DATACHECK MASK
RDLEEOT  EQU   X'10'                    MASK FOR RESPONSE RECEIVED
DATCHK   EQU   X'08'                    DATA CHECK MASK
SENDPRI  EQU   X'20' .                  SEND PRIORITY MASK FOR LCS21101
MPT      EQU   X'10'                    MULTIPT CHARCTERISTIC
DUMMY    EQU   X'DF'                    DUMMY ILIST ENTRY
RETRY    EQU   6                        BSC RETRY COUNT
ENDCTL   EQU   X'20'                    DEVICE CHARACTERISTIC
PCIOPT   EQU   X'FF'                    PARAMETER NOT TO POST BUFFERS
RCVPCI   EQU   X'20'                    MASK FOR PCI ON RECEIVE
SNDPCI   EQU   X'10'                    MASK FOR PCI ONSNDING
PCIFLAG  EQU   X'80'                    PCI STATUS IN CSW
DISDLEOT EQU   X'01'                    FLAG TO WRITE DLE EOT
NOPCI    EQU   X'00'                    PARAMETER
LOCKED   EQU   X'80'                    LOCK OUT MASK FOR BUFFER COUNT
DBLRVI   EQU   X'01'                    SWITCH FOR DOUBLE RVI I5
*                                       RESPONSE TO TEXT
*                                         MODE
STAT1    EQU   X'0A'                    DB, US, DE MASK          S99228
STAT2    EQU   X'3E'                    CR, IR, EC, DC, CC MASK  S99228
SS0      EQU   6                        SENSE 0 OFFSET           S99228
SS1      EQU   7                        SENSE 1 OFFSET           S99228
PCIRCV   EQU   X'22'                    RECEIVE PCI MASK         S99228
AUTOPL   EQU   X'01'                    INVLIST CWORD AUTOPL IND S99228
CLOCAL   EQU   X'02'                                             S99228
CREMOTE  EQU   X'80'                    BSC DEVICE              SA59028
C3270    EQU   X'04'                    3270 DEVICE              S99228
CNOIDLES EQU   X'02'                    NO IDLES DEFINED         S99228
CUMASK   EQU   X'01'                    GENERAL POLL CONTROL UNITS99228
LCL3277  EQU   X'09'                    LOCAL 3277 MODEL CODE    S99228
REG7     EQU   28                       OFFSET TO REGISTER 7     S99228
TTY1     EQU   X'10' .                 UCBTYPE+0                SA48278
TTY2     EQU   X'51' .                 UCBTYPE+0 FLAGS          SA48278
TTY3     EQU   X'50' .                 UCBTYPE+3 FLAGS          SA48278
TTY4     EQU   X'13' .                 UCBTYPE+3                SA48278
TTY5     EQU   X'A0' .                 UCBTYPE+3 FLAGS          SA48278
L22601   EQU   X'12' .                 UCBTYPE+2                SA51061
L2260    EQU   X'10'                   UCBTYPE+2 FLAG           SA51061
ATTN     EQU   X'20' .                  ATTENTION  ALLOWED FLAG  S22025
TICEND   EQU   11                       LOW ORDER BYTE TIC ADDR  S99228
X7F      EQU   X'7F'                    OK CHANNEL PROG COMP CD  S22025
UCBOFFST EQU   2                        OFFSET TO UCB ADDR-RQE  SA51090
UNITYPE  EQU   19                       UNIT TYPE OF UCB        SA51090
LCLRSCH  EQU   X'1E'                    LOCAL RECIEVE SCHD KEY  SA57329
EBCDACK  EQU   X'76'                    EBCDIC ACK FOR S/S      SA62991
ASCIACK  EQU   X'06'                    ASCII  ACK FOR S/S      SA62991
         TPRIOR
         TLCBD
         TQCBD                                                      TSO
         TTRMD
         TTSID
         TCCWD
         TSCBD
         TAVTD
         TPRFD
         DCBD  DSORG=TX
         TRECBD
         TTNTD
         TTPD
         TTCBD
         TDEBD
         MEND
