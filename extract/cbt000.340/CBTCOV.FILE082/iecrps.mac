         MACRO
&NAME    IECRPS &WKAREA=,&RDEB=,&WKREG1=
.*
.*       MACRO DELETIONS/CHANGES FOR VS1 RELEASE 2
.*       MACRO DELETIONS/CHANGES FOR VS2 RELEASE 1.6
.*       MACRO DELETIONS/CHANGES FOR OS  RELEASE 21.7
.*
.*
.**********************************************************************
.*
.* MODULE NAME = IECRPS
.*
.* DESCRIPTIVE NAME = DADSM RPS SETUP MACRO
.*
.* COPYRIGHT = NONE
.* STATUS = CHANGE LEVEL 000
.* FUNCTION = THIS MACRO ISSUES A GETMAIN FOR AN RPS WORKAREA AND
.*            LOADS IGG019EK, THE RPS SIO APPENDAGE.
.*            FOR VS THE GETMAIN IS UNCONDITIONAL, FOR OS THE GETMAIN
.*            IS CONDITIONAL AND IF NOT FULFILLED, RPS CHANNEL PROGRAMS
.*            WILL NOT BE USED.
.* NOTES = THIS IS AN INTERNAL MACRO USED IN THE FOLLOWING DADSM
.*         FUNCTIONS:
.*
.*             ALLOCATE
.*             SCRATCH
.*             EXTEND
.*             PARTIAL RELEASE
.*
.*    DEPENDENCIES = NONE
.*
.*    RESTRICTIONS = NONE
.*
.*    REGISTER CONVENTIONS = NOT APPLICABLE
.*
.*    PATCH LABEL = NOT APPLICABLE
.*
.* MODULE TYPE = MACRO
.*
.*    PROCESSOR = ASSEMBLER
.*
.*    MODULE SIZE = 100 BYTES FOR VS
.*                  104 BYTES FOR OS
.*
.*    ATTRIBUTES = NOT APPLICABLE
.*
.* ENTRY POINT = NOT APPLICABLE
.*
.*    PURPOSE = SEE FUNCTION
.*
.*    LINKAGE =
.*             NAME    IECRPS WKAREA=ADDRESS,RDEB=R1,WKREG1=R2
.*
.*    INPUT = NAME SPECIFIED AS AN ACCEPTABLE ASSEMBLER LANGUAGE
.*            SYMBOL.
.*
.*            WKAREA= IS A KEYWORD PARAMETER THAT MAY BE AN ADDRESS
.*            OF A 12 BYTE WORK AREA TO BE USED BY THE MACRO, OR
.*            A REGISTER NAME ENCLOSED IN PARENTHESES WHICH CONTAINS
.*            THE ADDRESS OF A 12 BYTE WORKAREA.
.*
.*            RDEB= IS A KEYWORD PARAMETER THAT IS A REGISTER NAME OF
.*            A REGISTER THAT CONTAINS THE ADDRESS OF THE DEB THAT IS
.*            TO BE USED FOR RPS.
.*
.*            WKREG1= IS A KEYWORD PARAMETER THAT IS A REGISTER NAME
.*            OF A REGISTER THAT MAY BE USED BY THE MACRO AS A WORK
.*            REGISTER
.*
.*    OUTPUT = RPS WORKAREA IS OBTAINED, RPS SIO/PAGE FIX/CE/ABE/EOE
.*             APPENDAGE IS LOADED
.*
.* EXIT-NORMAL = MEND STATEMENT
.*
.* EXIT-ERROR = NOT APPLICABLE
.*
.* EXTERNAL REFERENCES = NONE
.*
.*    ROUTINES = NONE
.*
.*    DATA AREAS = NONE
.*
.*    CONTROL BLOCKS = DEB
.*                     APPENDAGE VECTOR TABLE
.*
.* MACROS = GETMAIN
.*          LOAD
.*
.* CHANGE ACTIVITY = SEE DELETIONS/CHANGES PRECEDING MACRO
.*
.*
.**********************************************************************
         GBLC  &LIB
         LA    0,128                    LENGTH OF RPS WORK AREA
         AIF   ('&LIB' EQ 'LIB1').LIB1PS1
.*                                      GETMAIN FOR VS IS
.*                                      UNCONDITIONAL
*        GETMAIN R,LV=(0)               GET RPS WKAREA
         GETMAIN R,LV=(0)               GET RPS WKAREA
         LR    &WKREG1,1                SAVE PTR TO RPS WKAREA
.LIB1PS1 ANOP
         AIF   ('&LIB' NE 'LIB1').LIB2PS2
         AIF   ('&WKAREA'(1,1) EQ '(').GENREG1
.*                                      IF REGISTER NOTATION IS USED,
.*                                      GENERATE AN LR INSTRUCTION
.*                                      INSTEAD OF AN LA INSTRUCTION.
         LA    1,&WKAREA                REGISTER 1 POINTS TO PARM LIST
         AGO   .SKPREG1
.GENREG1 ANOP
         LR    1,&WKAREA                LOAD R1 WITH PTR TO PARM LIST
.SKPREG1 ANOP
         MVC   0(EPM&SYSNDX,1),GMP&SYSNDX
*                                       MOVE GETMAIN PARAMETER LIST
*                                       TO DYNAMIC AREA
*        GETMAIN EC,LV=(0),A=(1),MF=(E,(1))  GET RPS WORK AREA
         GETMAIN EC,LV=(0),A=(1),MF=(E,(1))                            *
                                        GET RPS WORK AREA
         LTR   15,15                    WAS REQUEST SUCCESSFUL
         BNZ   OUT&SYSNDX               NO, RPS WILL NOT BE USED
         AIF   ('&WKAREA'(1,1) EQ '(').GENREG2
.*                                      IF REGISTER NOTATION IS USED,
.*                                      GENERATE LA USING OFFSET OF
.*                                      REG INSTEAD OF SYMBOLIC NAME.
         L     &WKREG1,&WKAREA          LOAD WKREG1 WITH PTR TO
*                                       RPS WORK AREA
         AGO   .SKPREG2
.GENREG2 ANOP
         L     &WKREG1,0(&WKAREA)       LOAD WKREG1 WITH PTR TO
*                                       RPS WORK AREA
.SKPREG2 ANOP
.LIB2PS2 ANOP
         L     15,28(&RDEB)             PTR TO APPENDAGE VECTOR TABLE
         MVC   0(20,&WKREG1),0(15)      COPY AVT INTO RPS WORK AREA
         ST    15,120(&WKREG1)          SAVE PTR TO OLD AVT IN RPS
*                                       WORK AREA
         L     1,16                     PTR TO CVT
         L     1,84(1)                  PTR TO SVCLIB DCB
         AIF   ('&WKAREA'(1,1) EQ '(').GENREG3
.*                                      IF REGISTER NOTATION IS USED,
.*                                      USE OFFSET FROM REGISTER
.*                                      INSTEAD OF SYMBOLIC NAME.
         MVC   &WKAREA+4(L'APP&SYSNDX),APP&SYSNDX
         AGO   .SKPREG3
.GENREG3 ANOP
         MVC   4(L'APP&SYSNDX,&WKAREA),APP&SYSNDX
.SKPREG3 ANOP
*                                       MOVE SIO APPEND NAME TO WKAREA
         AIF   ('&WKAREA'(1,1) EQ '(').GENREG4
         LA    0,&WKAREA+4              POINT REGISTER 0 TO NAME
         AGO   .SKPREG4
.GENREG4 ANOP
         LA    0,4(&WKAREA)             POINT REGISTER 0 TO NAME
.SKPREG4 ANOP
*        LOAD  EPLOC=(0),DCB=(1)        LOAD SIO APPENDAGE
         LOAD  EPLOC=(0),DCB=(1)        LOAD SIO APPENDAGE
         ST    0,4(&WKREG1)             STORE PTR TO SIO APPENDAGE
*                                       IN NEW AVT
         ST    &WKREG1,28(&RDEB)        STORE PTR TO NEW AVT IN DEB
         AIF   ('&LIB' EQ 'LIB1').LIB1PS3
.*                                      IF OS, BYPASS GENERATING PAGE
.*                                      FIXING CODE
*                                       ON RETURN FROM LOAD, REG 1
*                                       CONTAINS LENGTH OF MODULE IN
*                                       DOUBLE WORDS
         SLL   1,3                      CONVERT LENGTH TO BYTES
         AR    1,0                      REG 1 POINTS TO END ADDR OF
*                                       MODULE PLUS 1
         BCTR  1,0                      REG 1 POINTS TO LAST BYTE
*                                       OF MODULE
         LA    0,2048                   SIZE OF PAGE
         MVI   4(&WKREG1),X'81'         ASSUME ONLY ONE PAGE
         NR    0,1                      DOES IT CROSS PAGE BOUNDARY
         BZ    OUT&SYSNDX               NO, EXIT FROM RPS SETUP
         MVI   4(&WKREG1),X'82'         INDICATE 2 PAGES NEEDED TO FIX
*                                       OFFSET OF APPENDAGE ENTRY POINT
.LIB1PS3 ANOP
         B     OUT&SYSNDX               EXIT FROM RPS SETUP
APP&SYSNDX DC  C'IGG019EK'              SIO APPENDAGE NAME
         AIF   ('&LIB' NE 'LIB1').LIB2PS4
.*                                      IF NOT OS, THEN GETMAIN
.*                                      PARM LIST IS NOT REQUIRED
GMP&SYSNDX EQU *
*        GETMAIN EC,SP=252,MF=L         GETMAIN PARAMETER LIST
         GETMAIN EC,SP=252,MF=L         GETMAIN PARAMETER LIST
EPM&SYSNDX EQU *-GMP&SYSNDX             LENGTH OF GETMAIN PARM LIST
.LIB2PS4 ANOP
OUT&SYSNDX EQU *
         MEND
