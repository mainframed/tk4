         MACRO
         IKMBASE
* 350000-352000,796000                                            M3000
* R20.1   010000 042000,*                        DCR526          M20.1A
* R20.1   652000,*                                               M20.1B
*                  REL 20 DELETIONS
* 088000,094000,446000,504000,558000,782000,786000               S20046
*  R21  132000                                                    43438
         USING DATAAREA,12
         STM   R14,R12,12(R13)
NED7     BALR  BASE,0
         USING *,BASE                  SET UP BASE REGISTER
*   QUICK CHECK FOR VARIABLE LENGTH RECORDS,
*   RETURN WITH REGISTER 15 = 20 IF SO.
         L     R3,8(0,R1)          POINT R3 AT OPTION WORD.
         LA    R15,20              SET RETURN CODE IN CASE.
         TM    3(R3),B'00001000'   TEST VBL. BIT.  '1'B = VBL.
         BO    ABEXIT              RET CODE=20 - NO IMPLEMENTATION.
*   CONTINUE IF FIXED LENGTH RECORDS.
         L     COMREG,4(R1)            COMREG POINTS AT COMAREA
         USING COMAREA,COMREG
         TM    COMFL,SECNDENT          TST IF IT IS FIRST CALL
         BO    INIT2                   IF NOT B
INIT     L     R4,4(R1)                R4 CONTAINS ADDR OF COMAREA
         LR    R3,R1
         LA    R1,4(R4)                R1 POINTS AT COMAREA+4
         IC    R6,COMFL                SAVE COMMUNICATION FLAGS
         MVC   0(GETME-GETM,R1),GETM   MOVE GETMAINLIST TO COMAREA+4
         GETMAIN A=(R4),MF=(E,(1))     GET DATAAREA
         STC   R6,COMFL                RESTORE FLAGS
         LR    R1,R3
         LTR   R15,R15                 R15=O IF MAIN STORAGE AVAILABLE
         BZ    INIT1
         LA    R15,16                  RET CODE=16 SHOWS NO STG AVAIL
ABEXIT   LM    R0,R12,20(R13)
         L     R14,12(R13)
         BR    R14                     GO BACK TO INTERFACE
GETM     GETMAIN EC,LV=1000,SP=1,MF=L  LIST FROM, 1000 BYTES REQUEST
GETME    EQU   *                       END OF GETMAIN-LIST
INIT1    L     R12,DATAAR              DATAAR=ADDR. TO 1000 BYTES AREA
         USING DATAAREA,R12            DATAAREA=DSECT FOR THE AREA
         XC    COMFLAGS(2),COMFLAGS    Z FLAGS FOR COMMUNICATION
         MVC   VIKM12(24),VSERV        SAVE ADDRS OF EXTNL ROUTINES
         MVC   VIKM136(4),VSERV+24
         NI    LOADFLAG,X'00'          SET OFF FLAG USED IN OVERLAY
*                                      VERSION TO INDICATE MOD LOADED
         NI    DEMANDFL,X'00'          ZERO FLAG FOR DEMANDED MODULES
INIT2    L     R12,DATAAR              DATAAR=ADDR TO 1000 BYTES AREA
         LA    R11,SAVELEV1            CHAIN SAVEAREA FOR INTERFACE
         ST    R11,8(R13)
         ST    R13,SAVELEV1+4
         LR    R13,R11
         L     R11,V11                 V11=ADDR TO IKM11, TABLEROUTINE
         USING LEVELTAB,R11            LEVELTAB DSECT FOR IKM11
         LA    R3,MESSBUFF             ADDR OF MESSAGE BUFFER
         ST    R3,ERRMESS              STORE ADDR IN COMMUNICATION AREA
         TM    COMFL,SECNDENT          FIRST ENTRY
         BZ    CHECK0                                            S20046
         TM    COMFL,LASTENT           LAST ENTRY
         BO    TERMINAT                YES
         L     R3,8(R1)                POINT  3 673965 6694      S20046
         TM    3(R3),DIAGNSFL          FLAG FOR INCOMPLETE STMT  S20046
         BZ    NODIAG                  INCOMPLETE,NO MORE INPUT  S20046
         OI    COMFLAG1,DIAGNSFL       INCOMPLETE,MORE INPUT     S20046
         B     STATUST                                           S20046
NODIAG   NI    COMFLAG1,NDIAGNSF       ZERO FLAG FOR MORE INPUT  S20046
STATUST  TM    COMFL,OLDSTATM          RETURN AFTER RET CODE = 8 S20046
         BO    CONTINUE                YES
         TM    COMFL,MOREIN            CONTINUE AFTER RETURN CODE=12
         BZ    CHECK                   NO
NEWBUFFS LM    13,11,SAVELEV2+12       YES
         BR    15                      BRANCH TO NXTCH21 TO CONTINUE
TERMINAT TM    COMFLAG2,ESFLAG         EXTRA STORAGE USED
         BZ    TERMIN1                 NO
         MVC   SLASK4(FREEMEND-FREEM),FREEM    MOVE FREEMAINLIST
         LA    1,SLASK4                POINT AT FREEMAINLIST
         L     2,ESLENGTH              LENGTH OF EXTRA STORAGE
         LA    3,ESADDR                ADDR OF EXTRA STORAGE
         FREEMAIN E,LV=(2),A=(3),MF=(E,(1))  RELEASE EXTRA STORAGE
TERMIN1  OI    DEMANDFL,X'01'          FLAG USED IN OVERLAY VERSION
*                                      TO INDICATE MODULE DEMANDED
         B     LOADTEST
THEEND   L     R2,SAVELEV1+4           SAVE RETURN CHAIN FOR REGS
         MVC   SLASK4(FREEMEND-FREEM),FREEM  MOVE FREEMAINLIST
         LA    1,SLASK4                POINT AT FREEMAINLIST
         ST    12,SLASK3               ADDR OF AREA TO BE RELEASED
         MVI   SLASK3,0                CLEAR TOP BYTE OF ADDRESS. 43438
         LA    5,SLASK3                ADDR TO ADDR TO AREA
         FREEMAIN E,LV=1000,A=(5),MF=(E,(1)) RELEASE DATAAREA
         LR    R13,R2
         LM    R14,R12,12(R13)
         BR    R14                     GO BACK TO INTERFACE
FREEM    FREEMAIN E,SP=1,MF=L          LIST FORM
FREEMEND EQU   *                       END OF FREEMAINLIST
         DROP  COMREG                  COMREG POINTED AT DSECT COMAREA
CONTINUE L     R13,CONTREG             GO TO ERROUTINE AND PRODUCE
         LM    R14,R12,12(R13)               A NEW MESSAGE
         BR    15
CHECK0   L     BUFFP,0(R1)                                       S20046
         SLL   BUFFP,8                                           S20046
         LTR   BUFFP,BUFFP                                       S20046
         BNZ   CHECK                                             S20046
         SR    R15,R15                                           S20046
         B     RETURN                                            S20046
CHECK    L     R2,8(R1)                POINT AT OPTION WORD
         MVC   LSM(4),0(R2)            SAVE OPTION WORD IN DATAAREA
         NI    COMFLAG2,ESFLAG         SET OFF FLAG FOR EXTRA STORAGE
         NI    COMFLAG1,X'D0'          SET OFF FLAGS
         L     BUFFP,0(R1)             POINT AT BEGNG OF BUFFER
         SR    R3,R3
         STH   3,LINECNT
         IC    R3,LSM                  LSM=LEFT SOURCE MARGIN
         LA    RECP,3(R3,BUFFP)        POINT AR RECORD IN BUFFER
         LR    CHARP,RECP              POINT AT FIRST CHAR IN RCD
         BCTR  CHARP,0
         SR    CHARC,CHARC             CHARC= CHAR. COUNTER
         IC    CHARC,RSM               RSM=RIGHT SOURCE MARGIN
         SR    CHARC,R3                R3 CONTAINS LSM
         LA    CHARC,1(CHARC)
         STH   CHARC,TL                MAX TEXTLENGTH COMPUTED
         LA    CHARC,1(CHARC)
         SR    RECCOUNT,RECCOUNT
         IC    RECCOUNT,0(BUFFP)       NO OF RECORDS IN BUFFER
CHECK1   MVI   FL00,X'00'              Z ALL INTERNAL FLAGS
         TM    COMFLAG2,ESFLAG         HAVE WE USED EXTRA STORAGE
         BZ    SOURCESC                NO
         MVC   SLASK4(FREEMEND-FREEM),FREEM  MOVE GETMAINLIST
         LA    1,SLASK4                REG1 POINTS AT GETMAINLIST
         ST    8,EIGHTREG
         L     8,ESLENGTH              LENGTH OF EXTRA STORAGE
         LA    3,ESADDR                ADDR TO EXTRA STORAGE
         FREEMAIN E,LV=(8),A=(3),MF=(E,(1))  RELEASE EXTRA STORAGE
         L     8,EIGHTREG
         NI    COMFLAG2,NESFLAG        SET OF FLAG FOR EXTRA STG
SOURCESC LA    NXT,NEXTCHAR            REG NXT POINTS ON NEXTCHAR
         SR    R3,R3
SRCSC0   MVI   SCANMODE,X'01'          INITIALIZE SCANMODE
SRCSC1   BALR  RET,NXT                 GET NEXT CHAR
SRCSC4   CLI   0(CHARP),BLANK          TST FOR A BLANK
         BE    SRCSC1
         MVI   SCANMODE,X'02'          SCANMODE FOR NORMAL STMNT
         LA    TRC,1
         STM   CHARP,CHARC,STARTP      SAVE POINTERS AND COUNTERS
         MVC   STLINCNT(2),LINECNT
         CLI   0(CHARP),SEMI           TST FOR SEMICOLON
         BE    SRCSC0
         CLI   0(CHARP),SLASH
         BE    SLASHFND
         CLI   0(CHARP),PERCENT
         BE    PERCFND
         CLI   0(CHARP),COMMA
         BE    COMMAFND
         B     SRCSC2
SLASHFND BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),ASTERISK       TST FOR ASTERISK
         BNE   SLSHFND1
         MVI   SCANMODE,X'03'          SCANMODE FOR COMMENT
         OI    FL00,COMSKIPF           COMMENT OUTSIDE STMT      S20046
SLSHFND2 BALR  RET,NXT                 GET NEXT CHAR
SLSHFND3 CLI   0(CHARP),ASTERISK       TST FOR ASTERISK
         BNE   SLSHFND2
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),SLASH          TST FOR SLASH
         BNE   SLSHFND3
         NI    FL00,NCOMSKIP           NOT INSIDE COMMENT        S20046
         B     SRCSC0
SLSHFND1 TM    COMFLAG1,SOURCEFL       TST WHICH CHAR SET USED
         BZ    SRCSC2                  IF C60 THEN BRANCH
         CLI   0(CHARP),SLASH          IF C48 TST FOR ANOTHER SLASH
         BNE   SRCSC2
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),ASTERISK       TST FOR ASTERISK
         BE    SRCSC3
         OI    FL00,CTFFLAG            COMPILE TIME STMNT FOUND
         B     SRCSC2
PERCFND  OI    FL00,CTFFLAG            COMPILE TIME STMNT FOUND
         B     SRCSC20
COMMAFND TM    COMFLAG1,SOURCEFL       TST WHICH CHAR, SET USED
         BZ    SRCSC2                  IF C60 THEN BRANCH
         BALR  RET,NXT                 IF C48 GET NEXT CHAR
         CLI   0(CHARP),POINT          TST FOR A POINT
         BNE   SRCSC2
         MVI   SCANMODE,X'01'          IF YES SCANMODE FOR NULL STMNT
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),X'F0'          TST IF DIGIT
         BL    SRCSC4
         CLI   0(CHARP),X'F9'
         BH    SRCSC4
         MVI   SCANMODE,X'02'          IF YES,SCANMODE FOR NORMAL STMNT
         B     SRCSC2
SRCSC20  BALR  RET,NXT                 GET NEXT CHAR
SRCSC2   IC    R3,0(CHARP)
         IC    R3,INPUTTAB(R3)         FIND CHAR AMONG PL/I CHARS
         IC    R3,TAB2(R3)             FIND CHAR AMONG SYN.CH. CHARS
         B     SRCSC20(R3)             B ACCORDING TO CHAR TYPE
SRCSC21  TM    FL00,CTFFLAG            TST IF COMPILE TIME STMNT FOUND
         BO    SRCSC25                 IF YES THEN BRANCH
         STM   CHARP,CHARC,ENDP        SAVE POINTERS AND COUNTERS
         B     STATFND
SRCSC24  MVI   SCANMODE,X'04'          SCANMODE FOR STRING
SRCSC241 BALR  RET,NXT                 GET NEXT
         CLI   0(CHARP),QUOTE          TST FOR A QUOTE
         BE    SRCSC233
         BNE   SRCSC241
SRCSC23  BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),ASTERISK       TST FOR AN ASTERISK
         BNE   SRCSC2
SRCSC3   MVI   SCANMODE,X'03'          SCANMODE FOR COMMENT
SRCSC231 BALR  RET,NXT                 GET NEXT CHAR
SRCSC232 CLI   0(CHARP),ASTERISK       TST FOR AN ASTERISK
         BNE   SRCSC231
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),SLASH          TST FOR A SLASH
         BNE   SRCSC232
SRCSC233 MVI   SCANMODE,X'02'          SCANMODE FOR NORMAL STMNT
         B     SRCSC20
SRCSC22  TM    COMFLAG1,SOURCEFL       TST WHICH CHAR SET USED
         BZ    SRCSC20                 IF C60 THEN BRANCH
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),POINT          TST FOR A POINT
         BNE   SRCSC2
         STM   CHARP,CHARC,ENDP        SAVE POINTERS AND COUNTERS
         MVI   SCANMODE,X'05'          SCANMODE FOR C48
         BALR  RET,NXT                 GET NEXT CHAR
         CLI   0(CHARP),X'F0'          TST FOR A DIGIT
         BL    SRCSC26
         CLI   0(CHARP),X'F9'
         BH    SRCSC26
         MVI   SCANMODE,X'02'          SCANMODE FOR NORMAL STATEMENT
         B     SRCSC20
SRCSC26  TM    FL00,CTFFLAG            TST IF COMPILE TIME STMNT FOUND
         BZ    STATFND                 IF NO THEN BRANCH
         LM    CHARP,CHARC,ENDP        RESTORE POINTERS AND COUNTERS
SRCSC25  NI    FL00,NCTFFLAG           SET OFF FLAG FOR COMPILE TIME
         B     SRCSC0
TAB2     EQU   *                       BRANCHTABLE FOR DIFFERENT CHARS
         DC    11X'00'
         DC    AL1(SRCSC21-SRCSC20)      SEMICOLON
         DC    2X'00'
         DC    AL1(SRCSC23-SRCSC20)      SLASH
         DC    AL1(SRCSC22-SRCSC20)      COMMA
         DC    6X'00'
         DC    AL1(SRCSC24-SRCSC20)      QUOTE
         DC    37X'00'
NEXTCHAR LA    CHARP,1(CHARP)          POINT AT NEXT CHAR
         BCTR  CHARC,RET               GO BACK IF CHAR-COUNTER NOT =1
         BCT   RECCOUNT,NXTCH1         B IF RECORD-COUNTER NOT =1
         CLC   1(3,BUFFP),ZEROS        TST IF LAST BUFFER
         BE    NXTCH20                 YES
NXTCH10  CLI   SCANMODE,X'01'          NOT INSIDE STMNT/COMMENT  S20046
         BE    RELBUF                  YES,RELEASE BUFFER        S20046
         TM    FL00,COMSKIPF           IN COMMENT,OUTSIDE STMT?  S20046
         BZ    NXTCH11                 NO                        S20046
RELBUF   OI    0(BUFFP),B'10000000'    BUFFER CAN BE RELEASED    S20046
NXTCH11  L     BUFFP,0(BUFFP)          POINT AT NEXT BUFFER      S20046
         IC    R3,LSM                  LSM=LEFT SOURCE MARGIN
         LA    RECP,3(R3,BUFFP)        GET ADDR OF NEXT RECORD
         LR    CHARP,RECP              GET ADDR OF NEXT CHAR
         IC    RECCOUNT,0(BUFFP)       RECCOUNT=NO. RECORDS IN BUFFER
         B     NXTCH3
NXTCH1   IC    R3,RL                   RL = RECORD LENGTH
         LA    RECP,0(RECP,R3)         GET ADDR OF NEXT RECORD
         LR    CHARP,RECP              GET ADDR OF NEXT CHAR
NXTCH3   LH    CHARC,TL                RESTORE CHAR-COUNTER
         LA    TRC,1(TRC)              INCREASE NO. OF RECORDS BY 1
         LH    1,LINECNT
         LA    1,1(1)
         STH   1,LINECNT
         BR    RET
NXTCH20  TM    COMFLAG1,DIAGNSFL       WAS INCOMPLETE STMNT DETECTED
         BZ    NXTCH2                  NO
         CLI   SCANMODE,X'01'          IF YES WAS IT A NULL STMNT
         BE    RETURN1                 IF YES, RETURN
         CLI   SCANMODE,X'05'          WAS IT A C48-STMNT
         BE    STATFND                 YES
         LA    15,NXTCH21              NO, SAVE RETURN ADDRESS
         STM   13,11,SAVELEV2+12
         L     13,SAVELEV1+4
         LM    14,12,12(13)
         LA    15,12                   RETURN CODE = 12
         BR    14                      GO BACK TO INTERFACE
NXTCH21  LA    NXT,NEXTCHAR            NXT POINTS AT ROUTINE NEXTCHAR
         CLC   1(3,BUFFP),ZEROS        TST IF LAST BUFFER
         BNE   NXTCH11                 NO                        S20046
NXTCH2   IC    R3,SCANMODE             YES
         OI    0(BUFFP),B'10000000'    BUFFER CAN BE RELEASED    S20046
         CLI   SCANMODE,X'05'          ARE WE IN A C48-STMNT     S20046
         BE    STATFND                 YES             STMNT     S20046
         SLL   R3,2                    MULTIPLY SCANMODE BY 4
         B     BRANCHT-4(R3)           B ACCORDING TO SCANMODE TYPE
NEXTREC  BCT   RECCOUNT,NXTR1          B IF MORE THAN 1 RECORD
         L     BUFFP,0(BUFFP)          POINT AT NXT BUFFER IN CHAIN
         IC    R3,LSM                  LSM= LEFT SOURCE MARGIN
         LA    RECP,3(R3,BUFFP)        POINT AT FIRST RECORD IN BUFFER
         IC    RECCOUNT,0(BUFFP)       NO. OF RECORDS IN BUFFER
         BR    RET                     GO BACK
NXTR1    IC    R3,RL                   RL= RECORD LENGTH
         LA    RECP,0(RECP,R3)         POINT AT NXT RECORD IN BUFFER
         BR    RET                     GO BACK
BRANCHT  B     RETURN1                 BRANCHTABLE FOR DIFF.SCANMODES
         B     NXTCH4                        SCANMODE=2
         B     NXTCH4                        SCANMODE=3
         B     NXTCH4                        SCANMODE=4
         B     STATFND                       SCANMODE=5
RETURN1  TM    COMFLAG1,ERRFLAG        IS A MESSAGE IN BUFFER
         LA    R15,0                   RETURN CODE =O
         BZ    RETURN                  IF NO RETURN
         LA    R15,4                   IF YES RETURN CODE=4
RETURN   L     R13,SAVELEV1+4          RESTORE REG FROM SAVEAREA
         L     R14,12(13)
         LM    R0,R12,20(R13)
         BR    R14                     GO BACK TO INTERFACE
NXTCH4   OI    COMFLAG1,BPTFLAG        FLAG BPT NOT APPLICABLE
         TM    COMFLAG1,LINENOFL       LINENUMBERS USED          S20046
         BZ    NOINBUFF                YES                       S20046
         LH    R3,LINECNT                                        S20046
         LA    R3,1(R3)                                          S20046
         CVD   R3,SLASKD                                         S20046
         UNPK  LINENR(8),SLASKD+4(4)   SAVE RELATIVE LINENUMBER  S20046
         LA    R3,LINENR                                         S20046
         OI    7(R3),X'F0'                                       S20046
         B     NXTCH41                                           S20046
NOINBUFF IC    R3,LSM                  LSM=LEFT SOURCE MARGIN    S20046
         SR    RECP,R3                 RECP=RECORD POINTER
         IC    R3,RL                   RL=RECORD LENGTH
         S     R3,SEVEN
         AR    RECP,R3                 COMPUTE POINTER FOR LINENUMBER
         MVC   LINENR(8),0(RECP)       MOVE LINENUMBER TO BUFFER
NXTCH41  CLI   SCANMODE,X'03'          IS IT A COMMENT
         LA    1,95
         BL    ERR2                    SCANMODE=2, ERR IN NORMAL STMNT
         LA    1,2
         BE    ERR2
ERR1     LA    1,1
ERR2     L     15,VIKM12
         BALR  14,15                   GO TO ERROUTINE
         B     RETURN1
STATFND  C     TRC,TWO                 TST IF TWO RECORDS/STMNT
         BNL   CGM
TRCTST1  L     R3,ENDP                 STMNT CONTAINED IN 1 RECORD
         S     R3,STARTP               R3 CONTAINS LENGTH OF STMNT
CHARTST  LA    R3,1(R3)
         C     R3,EIGHTY               MORE THAN 80 CHARS IN STMNT
         BH    CGM                     IF YES GET MORE STORAGE
         LA    R4,WORKB                WORKB=ADDR TO WORKAREA
         ST    R4,WORKBEG              WORKBEG=ADDR TO WORKAREA
         LA    SP,120(R4)              SP=SOURCE TEXT POINTER
         B     MOVESTRG                MOVE SOURCE STRING INTO AREA
CGM      LH    R3,TL                   TL=MAX TEXTLENGTH
         LR    R4,TRC                  TRC=NO, OF RECORDS
         SRDL  R4,32                   COMPUTE LENGTH OF EXTRA
         MR    R4,R3                             STORAGE=2.5 *NUMBER
         LR    R2,R5                             OF RECORDS *TEXTLENGTH
         SLL   R5,1
         ST    R5,ESLENGTH
         LA    R5,2(R5)
         SRL   R5,2
         A     R5,ESLENGTH
         LA    R5,7(R5)
         SRL   R5,3
         SLL   R5,3
         ST    R5,ESLENGTH             LENGTH OF EXTRA STORAGE
         LA    R4,ESADDR               ADDR TO ADDR TO EXTRA STORAGE
         MVC   GM(GETME2-GETM2),GETM2  MOVE GETMAINLIST
         LA    R1,GM                   R1 POINTS AT GETMAINLIST
         GETMAIN LV=(R5),A=(R4),MF=(E,(1))       GET EXTRA STORAGE
         LTR   R15,R15                 WAS MAIN STORAGE AVAILABLE
         BZ    CGM1                    YES
         LA    R15,16                  NO, RETURN CODE=16
         B     RETURN
GETM2    GETMAIN EC,SP=1,MF=L          LIST FORM OF CONDITIONAL GETMAIN
GETME2   EQU   *                       END OF GETMAINLIST
CGM1     OI    COMFLAG2,ESFLAG         FLAG EXTRA STORAGE USED
         L     SP,ESADDR
         ST    SP,WORKBEG              WORKBEG=ADDR TO WORKAREA
         L     SP,ESLENGTH             ESLENGTH=LENGTH OF EXTRA STG
         SR    SP,R2                   R2 CONTAINS 2 *STMNT-LENGTH
         A     SP,ESADDR               SOURCE TEXT POINTER UPDATED
MOVESTRG LM    CHARP,CHARC,STARTP      RESTORE POINTERS AND COUNTERS
MSTRG1   LR    R0,SP
         LA    BPTP,BPT
         LH    LENGTH1,TL
         BCTR  LENGTH1,0
         AR    R0,CHARP
         SR    R0,RECP
         ST    R0,INPUTBEG
         B     MSTR2
MOVE1    MVC   0(0,SP),0(RECP)
MOVE     MVC   0(0,SP),0(CHARP)
MSTR3    BAL   RET,NEXTREC             GET NEXT RECORD
MSTR2    EX    LENGTH1,MOVE1           MOVE NEXT RECORD TO WORKAREA
         LA    SP,1(LENGTH1,SP)        UPDATE SOURCE TEXT POINTER
         LR    R0,SP
         S     R0,INPUTBEG             COMPUTE BREAK POINT VALUE
         STH   R0,0(BPTP)
         LA    BPTP,2(BPTP)            POINT AT NEXT BREAK POINT VALUE
         BCT   TRC,MSTR3               REPEAT MSTR3 FOR EACH RECORD
         B     TRANS1
V02      DC    V(IKM02)
V03      DC    V(IKM03)
V11      DC    V(IKM11)
TWO      DC    F'2'
SEVEN    DC    F'7'
TEN      DC    F'10'
TWENTY   DC    F'20'
FORTY4   DC    F'44'
EIGHTY   DC    F'80'
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SP       EQU   1
COMREG   EQU   2
BPTP     EQU   2
LENGTH   EQU   3
OLDBUFFP EQU   3                                                 S20046
LENGTH1  EQU   8
CHARP    EQU   4
RECP     EQU   5
BUFFP    EQU   6
RECCOUNT EQU   7
CHARC    EQU   8
TRC      EQU   9
BASE     EQU   10
RET      EQU   14
NXT      EQU   15
CTFFLAG  EQU   B'10000000'
COMSKIPF EQU   B'01000000'                                       S20046
NCTFFLAG EQU   B'01111111'
NCOMSKIP EQU   B'10111111'                                       S20046
SECNDENT EQU   B'10000000'
OLDSTATM EQU   B'01000000'
LASTENT  EQU   B'00100000'
MOREIN   EQU   B'00010000'
CLEAR1   EQU   B'11011000'                                        M3000
CLEAR2   EQU   B'10000100'
QUOTE    EQU   C''''
SEMI     EQU   C';'
POINT    EQU   C'.'
SLASH    EQU   C'/'
PERCENT  EQU   C'%'
COMMA    EQU   C','
ASTERISK EQU   C'*'
BLANK    EQU   C' '
TRANS1   L     15,V02
         BALR  14,15                   GO TO IKM02
         MEND
