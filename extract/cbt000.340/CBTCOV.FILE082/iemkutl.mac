*
**  TRANSFER VECTOR                                                  **
*
TRVC     DSECT
         USING *,GRCC         USE REGISTER GRCC AS BASE
*
         DS    CL8            FIRST 8 BYTES NOT USED
*
ZUPL     DS    A              PRINT A LINE
ZURD     DS    A              READ A CARD
ZUGC     DS    A              GET SCRATCH STORAGE
ZUTXTC   DS    A              GET TEXT BLOCK
ZURC     DS    A              RELEASE SCRATCH STORAGE
         DS    A
ZABORT   DS    A              DUMP AND GO TO ERROR MESSAGE ROUTINES
ZLOADW   DS    A              LOAD AND RETURN TO CALLER
ZDICAB   DS    A              MAKE DICT. ENTRY.  RETURNS ABSOLUTE ADDR
ZDICRF   DS    A              MAKE DICT  ENTRY.  RETURNS DICT. REF.
ZUERR    DS    A              MAKE ERROR MESSAGE ENTRY
ZDRFAB   DS    A              CONVERT DICT. REF. TO ABSOLUTE ADDRESS
ZLOADX   DS    A              LOAD WITH OVERLAY AND RETURN TO CALLER
         DS    A
REQEST   DS    A              GIVE A LIST OF PHASE NAMES
RELESE   DS    A              RELEASE ALL NAMED PHASES
RLSCTL   DS    A              AS RELESE AND PASS TO NEXT PHASE
ZDUMP    DS    A              DUMP SPECIFIED CORE AND CONTINUE
ZTXTRF   DS    A              CONVERT ABSOLUTE ADDRESS TO TEXT REF.
ZTXTAB   DS    A              CONVERT TEXT REF. TO ABSOLUTE ADDRESS
ZCHAIN   DS    A              FIND NEXT BLOCK IN CHAIN
ZALTER   DS    A              CHANGE TEXT BLOCK STATUS
ZDABRF   DS    A              CONVERT ABSOLUTE ADDR TO DICT. REF.
ZNALRF   DS    A              UNALIGNED DICT. ENTRY.  RETURNS REFERENCE
ZNALDB   DS    A              UNALIGNED DICT. ENTRY.  RETURNS ABS.ADDR.
ZEND     DS    A              TERMINATE JOB
ZULF     DS    A              WRITE ON LOAD FILE
ZUSP     DS    A              WRITE ON PUNCH
ZUBW     DS    A              WRITE ON BACKING STORE
         DS    A
RLSCTLX  DS    A              RELEASE ALL NAMED PHASES AND HAND CONTROL
*                               TO NEXT PHASE, HAVING LOADED IT WITH
*                               OVERLAY
*
         EJECT
