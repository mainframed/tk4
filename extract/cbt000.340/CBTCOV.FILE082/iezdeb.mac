*        % GOTO DEBBSL;   /*
         MACRO
         IEZDEB
DEB      DSECT
         SPACE 1
**********************************************************************
*                                                                    *
*              ***** DATA EXTENT BLOCK *****                         *
*                                                                    *
*    RELEASE 20.2, 3/18/71, LEVEL=1                                  *
*    RELEASE 21, 08/03/71, LEVEL=3                                   *
*                                                                    *
*      FUNCTION -  THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION *
*                  OF INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED*
*                  WITH A DCB, AND THE TWO POINT TO EACH OTHER.  THE *
*                  DEB CONTAINS INFORMATION CONCERNING THE PHYSICAL  *
*                  CHARACTERISTICS OF THE DATA SET AND OTHER         *
*                  INFORMATION THAT IS USED BY THE CONTROL PROGRAM.  *
*                                                                    *
**********************************************************************
         SPACE 1
**********************************************************************
*            APPENDAGE VECTOR TABLE SECTION OF THE DEB               *
**********************************************************************
         SPACE 1
DEBAVT   DS    0D -      APPENDAGE VECTOR TABLE
DEBEOEA  DS    A -       ADDRESS OF END-OF-EXTENT APPENDAGE
DEBSIOA  DS    A -       ADDRESS OF START I/O APPENDAGE
DEBPCIA  DS    A -       ADDRESS OF PCI APPENDAGE
DEBCEA   DS    A -       ADDRESS OF CHANNEL-END APPENDAGE
DEBXCEA  DS    A -       ADDRESS OF ABNORMAL-END APPENDAGE
         SPACE 1
**********************************************************************
*                    DEB PREFIX TABLE                                *
**********************************************************************
         SPACE 1
DEBPREFX DS    0A -      DEB PREFIX TABLE
DEBWKARA DS    XL1 -     I/O SUPPORT WORK AREA
DEBDSCBA DS    XL7 -     DSCB ADDRESS (BBCCHHR) USED BY I/O SUPPORT
DEBDCBMK DS    XL4 -     DCB MODIFICATION MASK USED BY I/O SUPPORT
DEBLNGTH DS    BL1 -     LENGTH OF DEB IN DOUBLE WORDS
         DS    XL3 -     RESERVED
         SPACE 1
***********************************************************************
*                     DEB BASIC SECTION                               *
*                                                                     *
*    NOTE - THE DEB POINTER CONTAINED IN THE DCB POINTS TO THE        *
*           BASIC SECTION (DEBBASIC).                                 *
***********************************************************************
         SPACE 1
DEBBASIC EQU   *
DEBTCBAD DS    0A -      ADDRESS OF TCB OWNING THIS DEB
DEBNMSUB DS    BL1 -     NO. OF SUBROUTINES LOADED BY OPEN
*                        EXECUTOR ROUTINES
DEBTCBB  DS    AL3 -     *** SAME AS DEBTCBAD ABOVE ***
DEBDEBAD DS    0A -      ADDRESS OF THE NEXT DEB IN  CHAIN OFF TCB
DEBAMLNG DS    BL1 -     NO. OF BYTES IN THE ACCESS METHOD
*                        DEPENDENT SECTION.  FOR BDAM THIS FIELD
*                        CONTAINS THE LENGTH EXPRESSED IN
*                        NUMBER OF WORDS
DEBDEBB  DS    AL3 -     *** SAME AS DEBDEBAD ABOVE ***
DEBIRBAD DS    0A -      IRB STORAGE ADDRESS USED FOR APPENDAGE
*                        EXITS
DEBOFLGS DS    B -       DATA SET STATUS FLAGS
DEBDISP  EQU   X'C0' -   DATA SET DISPOSITION FLAGS
*                         BIT SETTING  DISPOSITION
*/       01    DEBDSOLD     01             OLD DATASET
*/       10    DEBDSMOD     10             MOD DATASET
*/       11    DEBDSNEW     11             NEW DATASET
DEBEOF   EQU   X'20' -   DATA SET AT EOF (TAPE) OR LAST VOLUME (DASD)
DEBRLSE  EQU   X'10' -   DISK: RELEASE UNUSED EXTERNAL STORAGE
*                        TAPE: EMULATOR TAPE WITH 2ND GENERATION
*                              FORMAT
DEBDCB   EQU   X'08' -   DCB MODIFICATION
DEBSPLIT EQU   X'04' -   DISK: SPLIT CYLINDER
*                        TAPE: 7 TRACK EMULATOR TAPE WITH POSSIBLE
*                              MIXED PARITY RECORDS
DEBLABEL EQU   X'02' -   NONSTANDARD LABELS
DEBRERR  EQU   X'01' -   FOR MAGNETIC TAPE- USE REDUCED ERROR
*                        RECOVERY PROCEDURE
DEBIRBB  DS    AL3 -     *** SAME AS DEBIRBAD ABOVE ***
DEBOPATB DS    B -       FLAGS INDICATING BOTH THE METHOD OF
*                        I/O PROCESSING AND THE DISPOSITION
*                        THAT IS TO BE PERFORMED WHEN AN EOV
*                        CONDITION OCCURS
DEBABEND EQU   X'80' -   MVT- SET BY ABEND INDICATING A SYSABEND
*                        OR SYSUDUMP DATA SET
DEBZERO  EQU   X'40' -   ALWAYS ZERO
DEBPOSIT EQU   X'30' -   DATA SET POSITIONING FLAGS
*                             BIT SETTING   POSITIONING
*/       01    DEBRERED     01             REREAD
*/       11    DEBLEAVE     11             LEAVE
DEBACCS  EQU   X'0F' -   TYPE OF I/O ACCESSING BEING DONE
*                         BIT SETTING    ACCESSING
*/       0000  DEBINPUT  0000              INPUT
*/       1111  DEBOUTPT  1111              OUTPUT
*/       0011  DEBINOUT  0011              INOUT
*/       0111  DEBOUTIN  0111              OUTIN
*/       0001  DEBRDBCK  0001              RDBACK
*/       0100  DEBUPDAT  0100              UPDAT
DEBQSCNT DS    BL1 -     PURGE (SVC 16) - QUIESCE COUNT. NO.
*                        OF DEVICES EXECUTING USER'S CHANNEL
*                        PROGRAMS, AS SHOWN BY BITS 5 AND 6
*                        OF UCBFL1 FIELDS
DEBFLGS1 DS    BL1 -     FLAG FIELD
DEBPWCKD EQU   X'80' -   PASSWORD WAS SUPPLIED DURING OPEN.  EOV WILL
*                        NOT ASK FOR A PASSWORD FOR EACH ADDITIONAL
*                        VOLUME OF A MULTIVOLUME DATA SET.
DEBEOFDF EQU   X'40' -   SET BY EOV TO INFORM CLOSE THAT AN END-OF-FILE
*                        HAS BEEN ENCOUNTERED AND, THEREFORE, DEFERRED
*                        USER LABEL PROCESSING IS ALLOWED.
DEBF1CEV EQU   X'04' -   SET TO ZERO BY CLOSE, SET TO ONE BY EOV, 42228
*                        TESTED BY CLOSE TO DETERMINE IF EOV HAD  42228
*                        BEEN ENTERED DURING CLOSE PROCESSING.    42228
*                        (ICBI #353)                              42228
         DS    XL1 -     RESERVED                                  1316
DEBUSRPG DS    0A -      ADDRESS OF FIRST IOB IN THE USER
*                        PURGE CHAIN
DEBNMEXT DS    BL1 -     NUMBER OF EXTENTS SPECIFIED IN DSCBS
DEBUSRPB DS    AL3 -     *** SEE DEBUSRPG ABOVE ***
DEBECBAD DS    0A -      ADDRESS OF A PARAMETER LIST USED TO LOCATE
*                        THE PURGE ECB FOR AN SVC PURGE REQUEST
DEBPRIOR DS    BL1 -     PRIORITY OF THE TASK OWNING DEB
DEBECBB  DS    AL3 -     *** SAME AS DEBECBAD ABOVE ***
DEBDCBAD DS    0A -      ADDRESS OF DCB ASSOCIATED WITH THIS DEB
DEBPROTG DS    0BL1 -    TASK PROTECT KEY IN HIGH ORDER 4 BITS
DEBDEBID DS    BL1 -     A HEX F IN LOW ORDER 4 BITS IDENTIFING
*                        THIS BLOCK AS A DEB
DEBDCBB  DS    AL3 -     *** SAME AS DEBDCBAD ABOVE ***
DEBAPPAD DS    0A -      ADDRESS OF THE I/O APPENDAGE VECTOR TABLE
DEBEXSCL DS    XL1 -     EXTENT SCALE- 4 FOR DIRECT ACCESS DEVICE AND
*                        3525 UNIT RECORD DEVICE WITH DEVICE
*                        ASSOCIATED DATA SET SUPPORT
*                        AND 2 FOR NONDIRECT ACCESS DEVICE AND
*                        COMMUNICATION DEVICE.  THIS FIELD IS USED
*                        TO DETERMINE THE SIZE OF THE DEVICE
*                        DEPENDENT SECTION
DEBAPPB  DS    AL3 -     *** SAME AS DEBAPPAD ABOVE ***
DEBBASND EQU   *
         SPACE 1
***********************************************************************
*      UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION *
*                                                                     *
*      ***NOTE - FOR TELECOMMUNICATIONS DEVICES, THE FOLLOWING FIELDS *
*      ARE REPEATED FOR EACH LINE ASSIGNED                            *
***********************************************************************
         SPACE 1
DEBDDS1  EQU   *
DEBSUCBA DS    0A -      ADDRESS OF A UCB ASSOCIATED WITH A GIVEN
*                        DATA SET
DEBSDVM  DS    B -       DEVICE MODIFIER -
*                        - MAGNETIC TAPE -- SET MODE OP CODE
*                        - UNIT RECORD -- NOT USED
DEBSUCBB DS    AL3 -     *** SAME AS DEBSUCBA, ABOVE ***
*
*        THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 UNDER
*        ASSOCIATED DATA SET SUPPORT
*
DEBRDCB  DS    0A -      ADDRESS OF DCB FOR THE READ ASSOCIATED DATA
*                        SET
         DS    X -       RESERVED
DEBRDCBA DS    AL3 -     *** SAME AS DEBRDCB ABOVE ***
DEBPDCB  DS    0A -      ADDRESS OF DCB FOR THE PUNCH ASSOCIATED DATA
*                        SET
         DS    X -       RESERVED
DEBPDCBA DS    AL3 -     *** SAME AS DEBPDCB ABOVE ***
DEBWDCB  DS    0A -      ADDRESS OF DCB FOR THE PRINT ASSOCIATED DATA
*                        SET
         DS    X -       RESERVED
DEBWDCBA DS    AL3 -     *** SAME AS DEBWDCB ABOVE ***
         SPACE 1
***********************************************************************
*                DEB ISAM DEPENDENT SECTION                           *
***********************************************************************
         SPACE 1
         ORG   DEBBASND - TO END OF BASIC SECTION
         SPACE 1
DEBISAM  EQU   *
DEBFIEAD DS    0A -      ADDRESS OF FIRST INDEX EXTENT
DEBNIEE  DS    BL1 -     NUMBER OF EXTENTS OF INDEPENDENT INDEX
*                        AREA
DEBFIEB  DS    AL3 -     *** SAME AS DEBFIEAD ABOVE ***
DEBFPEAD DS    0A -      ADDRESS OF THE FIRST PRIME DATA AREA
DEBNPEE  DS    BL1 -     NUMBER OF EXTENTS OF PRIME DATA AREA
DEBFPEB  DS    AL3 -     *** SAME AS DEBFPEAD ABOVE ***
DEBFOEAD DS    0A -      ADDRESS OF THE FIRST OVERFLOW EXTENT
DEBNOEE  DS    BL1 -     NUMBER OF EXTENTS OF INDEPENDENT
*                        OVERFLOW AREA
DEBFOEB  DS    AL3 -     *** SAME AS DEBFOEAD ABOVE ***
DEBEXPT  DS    0A -      ADDRESS OF ISAM DEB EXTENSION           ICB279
DEBRPSID DS    BL1 -     RPS DEVICE INDICATORS
DEBRPSP  EQU   X'80' -   PRIME DATA AREA IS ON RPS DEVICE
DEBRPSI  EQU   X'40' -   INDEPENDENT INDEX AREA IS ON RPS DEVICE
DEBRPSO  EQU   X'20' -   INDEPENDENT OVERFLOW AREA IS ON RPS DEVICE
DEBRPSAP EQU   X'10' -   RPS SIO APPENDAGE HAS BEEN LOADED
DEBEXPTA DS    AL3 -     SAME AS DEBEXPT ABOVE                   ICB279
         SPACE 2
***********************************************************************
*             DIRECT-ACCESS STORAGE DEVICE SECTION                    *
*                                                                     *
*     NOTE - THE LOCATION OF THIS SECTION IS DEPENDENT UPON THE ACCESS*
*            METHOD USED--IF ISAM, THEN IT FOLLOWS THE ISAM SECTION-IF*
*            NOT ISAM THEN IT FOLLOWS THE BASIC SECTION               *
***********************************************************************
         SPACE 1
DEBDASD  DSECT
DEBUCBAD DS    0A  -     ADDR OF UCB ASSOCIATED WITH THIS DATA
DEBDVMOD DS    B -       DEVICE MODIFIER:  FILE MASK
DEBUCBA  DS    AL3 -     *** SAME AS DEBUCBAD ABOVE ***
DEBBINUM DS    CL2 -     BIN NUMBER
DEBSTRCC DS    CL2 -     CYLINDER ADDRESS FOR THE START OF AN
*                        EXTENT LIMIT
DEBSTRHH DS    CL2 -     READ/WRITE TRACK ADDRESS FOR  THE START
*                        OF AN EXTENT LIMIT
DEBENDCC DS    CL2 -     CYLINDER ADDRESS FOR THE END OF AN
*                        EXTENT LIMIT
DEBENDHH DS    CL2 -     READ / WRITE TRACK ADDRESS FOR THE END OF AN
*                        EXTENT LIMIT
DEBNMTRK DS    CL2 -     NUMBER OF TRACKS ALLOCATED TO A GIVEN
*                        EXTENT
         SPACE 2
***********************************************************************
*        EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION          *
***********************************************************************
         SPACE 1
DEBACSMD DSECT
         SPACE 1
DEBVOLSQ DS    CL2 -     VOLUME SEQUENCE NUMBER FOR MULTIVOLUME
*                        SEQUENTIAL DATA SETS
DEBVOLNM DS    CL2 -     TOTAL NUMBER OF VOLUMES IN A MULTIVOLUME
*                        SEQUENTIAL DATA SET.
DEBDSNM  DS    0CL8 -    MEMBER NAME -
*                        -  APPEARS ONLY WHEN AN OUTPUT DATA SET
*                        HAS BEEN OPENED FOR A MEMBER NAME AND
*                        THE DSCB SPECIFIES A PARTITIONED DATA
*                        SET.
DEBUTSAA DS    0A -      ADDRESS OF THE USER TOTALLING SAVE AREA
DEBTFLGS DS    BL1 -     FLAG BYTE
DEBBYPAS EQU   X'80' -   DOS EMBEDED CHECKPOINT RECORDS ARE BEING
*                        BYPASSED BY THE CHANNEL END APPENDAGE
DEBUTSAB DS    AL3 -     *** SAME AS DEBUTSAA,ABOVE ***
         DS    XL4  -   RESERVED
         SPACE 2
***********************************************************************
*                  BPAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBEXTNM DS    0C -      FOR A PARTITIONED DATA SET OPENED FOR
*                        INPUT, EACH ONE BYTE FIELD CONTAINS THE
*                        EXTENT NUMBER OF THE FIRST EXTENT ENTRY
*                        FOR EACH DATA SET EXCEPT THE FIRST, IF
*                        TWO OR MORE DATA SETS ARE CONCATENATED.
*                        THE NUMBER OF BYTES IN THE FIELD IS
*                        EQUAL TO ONE LESS THAN THE NUMBER OF
*                        DATA SETS CONCATENATED.
DEBDSNAM DS    CL8 -     FOR A PARTITIONED DATA SET OPENED FOR
*                        OUTPUT TO A MEMBER NAME, THAT MEMBER
*                        NAME.
         SPACE 2
***********************************************************************
*                  BDAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
*                         *****************************************
*                         * FOR FIXED LENGTH RECORDS WITH THE     *
*                         * OPTION OF RELEATIVE BLOCK ADDRESSING  *
*                         * (BUT NOT TRACK OVERFLOW.              *
*                         *****************************************
         SPACE 1
DEBDBLK  DS    0F -       ONE FOUR BYTE FIELD FOR EACH EXTENT
*                         DESCRIBED IN THE DEVICE DEPENDENT
*                         SECTION.
DEBDBPT  DS    AL1 -      NUMBER OF BLOCKS PER TRACK
DEBDBPE  DS    CL3 -      NUMBER OF BLOCKS PER EXTENT
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
*                         *****************************************
*                         * FOR FIXED LENGTH RECORDS WITH THE     *
*                         * OPTION OF RELATIVE BLOCK ADDRESSING   *
*                         * AND TRACK OVERFLOW.                   *
*                         *****************************************
         SPACE 1
DEBDTPP  DS    FL4 -     NUMBER OF TRACKS PER PERIOD
DEBDBPP  DS    FL4 -     NUMBER OF BLOCKS PER PERIOD
*                         THE FOLLOWING FIELD OCCURS ONCE FOR
*                         EACH EXTENT.
DEBDBPEF DS    FL4 -     NUMBER OF BLOCKS PER EXTENT
         SPACE 2
***********************************************************************
*                 BTAM DEPENDENT SECTION                              *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
*                         THIS SEGMENT IS ALWAYS PRESENT WITH BTAM
*                         IT IS USED WHEN A BUFFER POOL OR DYNAMIC
*                         BUFFERING IS USED; ELSE THE FIELDS ARE
*                         ZERO.
DEBTBFRA DS    0A -       ADDRESS OF THE BUFFER ROUTINE
         DS    X -        RESERVED
DEBTBFRB DS    AL3 -      *** SAME AS DEBTBFRA, ABOVE ***
*                         THE FOLLOWING FIELD IS REPEATED FOR EACH
*                         CCW ON THE CHANNEL PGM QUEUE
DEBTCCWA DS    0A -       ADDRESS OF THE FIRST CCW ON THE QUEUE
         DS    X -        RESERVED
DEBTCCWB DS    AL3 -      *** SAME AS DEBCCWA, ABOVE ***
         SPACE 2
***********************************************************************
*                   GAM DEPENDENT SECTION                             *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBFUCBA DS    0A -       POINTER TO FIRST UCB
         DS    X -        RESERVED
DEBFUCBB DS    AL3 -      ADDRESS OF FIRST UCB
DEBLUCBA DS    0A -       POINTER TO LAST UCB
         DS    X -        RESERVED
DEBLUCBB DS    AL3 -      ADDRESS OF LAST UCB
         SPACE 2
***********************************************************************
*                 ISAM LOAD MODE EXTENSION                            *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBPUT   DS    A -        ADDRESS OF PUT MODULE                  ICB279
         SPACE 2
***********************************************************************
*                 ISAM SCAN MODE EXTENSION                            *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBGET   DS    A -        ADDRESS OF GET OR PUT MODULE - THIS FIELD
*                         IS ALSO CALLED DEBPUT                  ICB279
DEBWKPT4 DS    A -        SAME AS DCBWKPT4                       ICB279
DEBWKPT5 DS    A -        SAME AS DCBWKPT5                       ICB279
DEBCREAD DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         READ                                   ICB279
DEBCSETL DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         SETL                                   ICB279
DEBCWRIT DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         WRITE                                  ICB279
DEBCCHK  DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         WRITE VALIDITY CHECK                   ICB279
DEBCREWT DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         RE-WRITE                               ICB279
DEBCRECK DS    A -        ADDRESS OF CHANNEL-END APPENDAGE FOR
*                         RE-CHECK                               ICB279
DEBAREAD DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         READ                                   ICB279
DEBASETL DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         SETL                                   ICB279
DEBAWRIT DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         WRITE                                  ICB279
DEBACHK  DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         CHECK                                  ICB279
DEBAREWT DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         RE-WRITE                               ICB279
DEBARECK DS    A -        ADDRESS OF ABNORMAL-END APPENDAGE FOR
*                         RE-CHECK                               ICB279
         SPACE 2
***********************************************************************
*                 BISAM MODE EXTENSION                                *
*                 POINTED TO BY DEBEXPT                               *
***********************************************************************
         SPACE 2
         ORG   DEBACSMD
         SPACE 1
DEBDISAD DS    A -        ADDRESS OF PRIVILEGED MODULE ENTERED WHEN A
*                         BISAM MACRO INSTRUCTION IS EXECUTED    ICB279
         DS    A -        DEBWKPT4 - SAME AS DCBWKPT4            ICB279
         DS    A -        DEBWKPT5 - SAME AS DCBWKPT5            ICB279
DEBFREED DS    A -        ADDRESS OF DYNAMIC BUFFERING MODULE    ICB279
DEBRPSIO DS    A -        ADDRESS OF A DEVICE DEPENDENT SECONDARY
*                         SIO APPENDAGE                          ICB279
         SPACE 2
***********************************************************************
*                 SUBROUTINE NAME SECTION                             *
***********************************************************************
         SPACE 1
DEBSUBNM DSECT
         SPACE 1
*                         FOLLOWS THE ACCESS METHOD DEPENDENT
*                         SECTION, OR THE DEVICE DEPENDENT SECTION
*                         IF THERE IS NO ACCESS METHOD SECTION.
DEBSUBID DS    CL2 -      THE LAST TWO BYTES OF THE 8-BYTE MODULE
*                         NAME FOR EACH ACCESS METHOD SUBROUTINE,
*                         APPENDAGE SUBROUTINE, OR IRB ROUTINE
*                         LOADED BY OPEN.
         MEND  , */
*        % DEBBSL:;
*
* /* *************************************************************** */
* /* RELEASE 20.2, 3/18/71, LEVEL=1                                  */
* /* RELEASE 21, 08/03/71, LEVEL=3                                   */
* /*                                                                 */
* /*      BEFORE THE INCLUDE FOR THIS MACRO, THE FOLLOWING           */
* /*      POINTERS SHOULD BE DECLARED -                              */
* /*           DEBPTR   - FOR DEB BASIC SECTION                      */
* /*           DEBDAPTR - FOR DEB DASD SECTION                       */
* /*           DEBEXPTR - FOR DEB ACCESS METHOD DEPENDENT SECTIONS   */
* /*           DEBSBPTR - FOR DEB SUBROUTINE NAME SECTION            */
* /* *************************************************************** */
*
* /* *************************************************************** */
* /*                  DEB BASIC SECTION                              */
* /* *************************************************************** */
*
* DECLARE
* 1 DEBBASIC BASED(DEBPTR),
*     3 DEBTCBAD PTR(31),            /* ADDRESS OF TCB OWNING THIS
*                                       DEB                          */
*      4 DEBNMSUB CHAR(1),           /* NO. OF SUBROUTINES LOADED BY
*                                       OPEN EXECUTOR ROUTINES       */
*      4 DEBTCBB  PTR(24) BDY(BYTE), /* *** SAME AS DEBTCBAD ABOVE   */
*     3 DEBDEBAD PTR(31),            /* ADDRESS OF THE NEXT DEB IN   */
*      4 DEBAMLNG CHAR(1),           /* NO. OF BYTES IN THE ACCESS
*                                       METHOD DEPENDENT SECTION.
*                                       CONTAINS THE LENGTH
*                                       EXPRESSED IN NUMBER OF WORDS */
*      4 DEBDEBB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBDEBAD ABOVE   */
*     3 DEBIRBAD PTR(31),            /* IRB STORAGE ADDRESS USED FOR
*                                       APPENDAGE EXITS              */
*      4 DEBOFLGS CHAR(1),           /* DATA SET STATUS FLAGS        */
*       5 DEBDISP  BIT(2),           /* DATA SET DISPOSITION FLAGS
*                                       BIT SETTING                  */
* %DCL DEBDSOLD CHAR;
* %DEBDSOLD='''01''B';               /* OLD                          */
* %DCL DEBDSMOD CHAR;
* %DEBDSMOD='''10''B';               /* MOD                          */
* %DCL DEBDSNEW CHAR;
* %DEBDSNEW='''11''B';               /* NEW                          */
*       5 DEBEOF   BIT(1),           /* DATA SET AT EOF (TAPE) OR
*                                       LAST VOLUME (DASD)           */
*       5 DEBRLSE  BIT(1),           /* RELEASE UNUSED               */
*       5 DEBDCB   BIT(1),           /* DCB MODIFICATION             */
*       5 DEBSPLIT BIT(1),           /* SPLIT CYLINDER               */
*       5 DEBLABEL BIT(1),           /* NONSTANDARD LABELS           */
*       5 DEBRERR  BIT(1),           /* FOR MAGNETIC TAPE- USE
*                                       REDUCED ERROR RECOVERY
*                                       PROCEDURE                    */
*      4 DEBIRBB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBIRBAD ABOVE   */
*     3 DEBOPATB CHAR(1),            /* FLAGS INDICATING BOTH THE
*                                       METHOD OF I/O PROCESSING AND
*                                       THE DISPOSITION THAT IS TO
*                                       BE PERFORMED WHEN AN EOV
*                                       CONDITION OCCURS             */
*      4 DEBABEND BIT(1),            /* MVT- SET BY ABEND INDICATING
*                                       A SYSABEND OR SYSUDUMP DATA
*                                       SET                          */
*      4 DEBZERO  BIT(1),            /* ALWAYS ZERO                  */
*      4 DEBPOSIT BIT(2),            /* DATA SET POSITIONING FLAGS
*                                       BIT SETTING                  */
* %DCL DEBRERED CHAR;
* %DEBRERED='''01''B';               /* REREAD                       */
* %DCL DEBLEAVE CHAR;
* %DEBLEAVE='''11''B';               /* LEAVE                        */
*      4 DEBACCS  BIT(4),            /* TYPE OF I/O ACCESSING BEING
*                                       DONE BIT SETTING             */
* %DCL DEBINPUT CHAR;
* %DEBINPUT='''0000''B';             /* INPUT                        */
* %DCL DEBOUTPT CHAR;
* %DEBOUTPT='''1111''B';             /* OUTPUT                       */
* %DCL DEBINOUT CHAR;
* %DEBINOUT='''0011''B';             /* INOUT                        */
* %DCL DEBOUTIN CHAR;
* %DEBOUTIN='''0111''B';             /* OUTIN                        */
* %DCL DEBRDBCK CHAR;
* %DEBRDBCK='''0001''B';             /* RDBACK                       */
* %DCL DEBUPDAT CHAR;
* %DEBUPDAT='''0100''B';             /* UPDAT                        */
*     3 DEBQSCNT CHAR(1),            /* PURGE (SVC 16) - QUIESCE
*                                       COUNT. NO. OF DEVICES
*                                       EXECUTING USER'S CHANNEL
*                                       PROGRAMS, AS SHOWN BY BITS 5
*                                       AND 6 OF UCBFL1 FIELDS       */
*     3 DEBFLGS1 CHAR(1),            /* FLAG FIELD                   */
*      4 DEBPWCKD BIT(1),            /* PASSWORD WAS SUPPLIED DURING
*                                       OPEN.  EOV WILL NOT ASK FOR A
*                                       PASSWORD FOR EACH ADDITIONAL
*                                       VOLUME OF A MULTIVOLUME DATA
*                                       SET                          */
*      4 DEBEOFDF BIT(1),            /* EOF, USER LABEL PROCESSING OK*/
*      4 * BIT (3),                  /* RESERVED               42228 */
*      4 DEBF1CEV BIT(1),            /* SET TO ZERO BY CLOSE, SET TO
*                                       ONE BY EOV, TESTED BY CLOSE TO
*                                       DETERMINE IF EOV HAD BEEN
*                                       ENTERED DURING CLOSE PROCESS-
*                                       ING. (ICBI #353) APAR# 42228 */
*      4 * BIT (2),                  /* RESERVED               42228 */
*     3 *        CHAR(1),            /* RESERVED                1316 */
*     3 DEBUSRPG PTR(31),            /* ADDRESS OF FIRST IOB IN THE
*                                       USER PURGE CHAIN             */
*      4 DEBNMEXT CHAR(1),           /* NUMBER OF EXTENTS SPECIFIED
*                                       IN DSCBS                     */
*      4 DEBUSRPB PTR(24)  BDY(BYTE),
*                                    /* *** SEE DEBUSRPG ABOVE ***   */
*     3 DEBECBAD PTR(31),            /* ADDRESS OF A PARAMETER LIST
*                                       USED TO LOCATE THE PURGE ECB
*                                       FOR AN SVC PURGE REQUEST     */
*      4 DEBPRIOR CHAR(1),           /* PRIORITY OF THE TASK OWNING
*                                       DEB                          */
*      4 DEBECBB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBECBAD ABOVE   */
*     3 DEBDCBAD PTR(31),            /* ADDRESS OF DCB ASSOCIATED
*                                       WITH THIS DEB                */
*      4 DEBPROTG CHAR(1),           /* TASK PROTECT KEY IN HIGH
*                                       ORDER 4 BITS                 */
*       5 DEBDEBID CHAR(1),          /* A HEX F IN LOW ORDER 4 BITS
*                                       IDENTIFYING THIS BLOCK AS A
*                                       DEB                          */
*      4 DEBDCBB PTR(24) BDY(BYTE),
*                                    /* *** SAME AS DEBDCBAD ABOVE   */
*     3 DEBAPPAD PTR(31),            /* ADDRESS OF THE I/O APPENDAGE
*                                       VECTOR TABLE                 */
*      4 DEBEXSCL CHAR(1),           /* EXTENT SCALE- 4 FOR DIRECT
*                                       ACCESS DEVICE AND 3525 UNIT
*                                       RECORD DEVICE WITH DEVICE
*                                       ASSOCIATED DATA SET SUPPORT
*                                       AND 2 FOR NONDIRECT
*                                       ACCESS DEVICE AND
*                                       COMMUNICATION DEVICE. TO
*                                       DETERMINE THE SIZE OF THE
*                                       DEVICE DEPENDENT SECTION     */
*      4 DEBAPPB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBAPPAD ABOVE   */
*    2 DEBBASND,
*
* /* *************************************************************** */
* /*   UNIT RECORD, MAGNETIC TAPE, TELECOMMUNICATIONS DEVICES SECTION*/
* /*                                                                 */
* /*   ***NOTE - FOR TELECOMMUNICATIONS DEVICES, THE FOLLOWING FIELDS*/
* /*   ARE REPEATED FOR EACH LINE ASSIGNED                           */
* /* *************************************************************** */
*
*     3 DEBDDS1,
*      4 DEBSUCBA PTR(31),           /* ADDRESS OF UCB ASSOCIATED
*                                       WITH A GIVEN DATA SET        */
*       5 DEBSDVM CHAR(1),           /* DEVICE MODIFIER -- MAGNETIC
*                                       TAPE -- SET MODE OP CODE -
*                                       UNIT RECORD -- NOT USED      */
*       5 DEBSUCBB PTR(24) BDY(BYTE),
*                                    /* *** SAME AS DEBSUCBA, ABOVE  */
*
* /*     THE FOLLOWING FIELDS ARE PRESENT ONLY FOR THE 3525 UNDER    */
* /*     ASSOCIATED DATA SET SUPPORT                                 */
*
*      4 DEBRDCB    PTR(31),         /* ADDRESS OF DCB FOR THE READ
*                                       ASSOCIATED DATA SET          */
*       5 *          CHAR(1),        /* RESERVED                     */
*       5 DEBRDCBA   PTR(24),        /* *** SAME AS DEBRDCB ABOVE    */
*      4 DEBPDCB    PTR(31),         /* ADDRESS OF DCB FOR THE PUNCH
*                                       ASSOCIATED DATA SET          */
*       5 *          CHAR(1),        /* RESERVED                     */
*       5 DEBPDCBA   PTR(24),        /* *** SAME AS DEBPDCB ABOVE    */
*      4 DEBWDCB    PTR(31),         /* ADDRESS OF DCB FOR THE PRINT
*                                       ASSOCIATED DATA SET          */
*       5 *          CHAR(1),        /* RESERVED                     */
*       5 DEBWDCBA   PTR(24);        /* *** SAME AS DEBWDCB ABOVE    */
*
* /* *************************************************************** */
* /*             DEB ISAM DEPENDENT SECTION                          */
* /* *************************************************************** */
*
*  DECLARE 1 DEBBAS01
*       BASED(ADDR(DEBBASND)),       /* TO END OF BASIC SECTION      */
*
*    2 DEBISAM ,
*     3 DEBFIEAD PTR(31),            /* ADDRESS OF FIRST INDEX
*                                       EXTENT                       */
*       4 DEBNIEE  CHAR(1),          /* NUMBER OF EXTENTS OF
*                                       INDEPENDENT INDEX AREA       */
*       4 DEBFIEB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBFIEAD ABOVE   */
*     3 DEBFPEAD PTR(31),            /* ADDRESS OF THE FIRST PRIME
*                                       DATA AREA                    */
*      4 DEBNPEE  CHAR(1),           /* NUMBER OF EXTENTS OF PRIME
*                                       DATA AREA                    */
*      4 DEBFPEB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBFPEAD ABOVE   */
*     3 DEBFOEAD PTR(31),            /* ADDRESS OF THE FIRST
*                                       OVERFLOW EXTENT              */
*      4 DEBNOEE  CHAR(1),           /* NUMBER OF EXTENTS OF
*                                       INDEPENDENT OVERFLOW AREA    */
*      4 DEBFOEB  PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBFOEAD ABOVE   */
*     3 DEBEXPT  PTR(31),            /* ADDRESS OF ISAM DEB
*                                       EXTENSION              ICB279*/
*      4 DEBRPSID BIT(8),            /* RPS DEVICE INDICATORS        */
*       5 DEBRPSP  BIT(1),           /* PRIME DATA AREA IS ON RPS
*                                       DEVICE                       */
*       5 DEBRPSI  BIT(1),           /* INDEPENDENT INDEX AREA IS ON
*                                       RPS DEVICE                   */
*       5 DEBRPSO  BIT(1),           /* INDEPENDENT OVERFLOW AREA IS
*                                       ON RPS DEVICE                */
*       5 DEBRPSAP BIT(1),           /* RPS SIO APPENDAGE HAS BEEN
*                                       LOADED                       */
*       5 *        BIT(4),           /* RESERVED                     */
*      4 DEBEXPTA PTR(24);           /* SAME AS DEBEXPT ABOVE  ICB279*/
*
* /* *************************************************************** */
* /*          DIRECT ACCESS STORAGE DEVICE SECTION                   */
* /*                                                                 */
* /* NOTE - THE LOCATION OF THIS SECTION IS DEPENDENT UPON THE       */
* /*        ACCESS METHOD USED--IF ISAM, THEN IT FOLLOWS THE ISAM    */
* /*        SECTION---IF NOT ISAM, THEN IT FOLLOWS THE BASIC SECTION */
* /* *************************************************************** */
*
* DECLARE
*   1 DEBDASD BASED(DEBDAPTR),
*     3 DEBUCBAD PTR(31),            /* ADDR OF UCB ASSOCIATED WITH
*                                       THIS DATA EXTENT             */
*      4 DEBDVMOD CHAR(1),           /* DEVICE MODIFIER - FILE MASK  */
*      4 DEBUCBA PTR(24) BDY(BYTE),  /* *** SAME AS DEBUCBAD ABOVE   */
*     3 DEBBINUM CHAR(2),            /* BIN NUMBER                   */
*     3 DEBSTRCC CHAR(2),            /* CYLINDER ADDRESS FOR THE
*                                       START OF AN EXTENT LIMIT     */
*     3 DEBSTRHH CHAR(2),            /* READ/WRITE TRACK ADDRESS FOR
*                                       OF AN EXTENT LIMIT           */
*     3 DEBENDCC CHAR(2),            /* CYLINDER ADDRESS FOR THE END
*                                       OF AN EXTENT LIMIT           */
*     3 DEBENDHH CHAR(2),            /* READ/WRITE TRACK ADDRESS FOR
*                                       THE END OF AN EXTENT LIMIT   */
*     3 DEBNMTRK CHAR(2);            /* NUMBER OF TRACKS ALLOCATED
*                                       TO A GIVEN EXTENT            */
*
*
* /* *************************************************************** */
* /*     EXCP ACCESS METHOD, BSAM AND QSAM DEPENDENT SECTION         */
* /* *************************************************************** */
*
* DECLARE
*    1 DEBACSMD BASED(DEBEXPTR),
*
*     3 DEBVOLSQ CHAR(2),            /* VOLUME SEQUENCE NUMBER FOR
*                                       MULTIVOLUME SEQUENTIAL DATA
*                                       SETS                         */
*     3 DEBVOLNM CHAR(2),            /* TOTAL NUMBER OF VOLUMES IN A
*                                       MULTIVOLUME SEQUENTIAL DATA
*                                       SET.                         */
*     3 DEBDSNM CHAR(8),             /* MEMBER NAME -- HAS BEEN
*                                       OPENED FOR A MEMBER NAME AND
*                                       THE DSCB SPECIFIES A
*                                       PARTITIONED DATA SET.        */
*       5 DEBUTSAA PTR(31) BDY(BYTE),
*                                    /* ADDRESS OF THE USER TOTALLING
*                                       SAVE AREA                    */
*        6 DEBTFLGS BIT(8),          /* FLAG BYTE                    */
*         7 DEBBYPAS BIT(1),         /* DOS EMBEDDED CHECKPOINT
*                                       RECORDS ARE BEING BYPASSED
*                                       BY THE CHANNEL END APPENDAGE */
*        6 DEBUTSAB PTR(24) BDY(BYTE),
*                                    /* *** SAME AS DEBUTSAA,ABOVE   */
*       5 *       CHAR(4);           /* RESERVED                     */
*
*
* /* *************************************************************** */
* /*               BPAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS01
*       BASED(ADDR(DEBACSMD)),
*
*     3 DEBDSNAM CHAR(8),            /* FOR A PARTITIONED DATA SET
*                                       OPENED FOR OUTPUT TO A
*                                       MEMBER NAME, THAT MEMBER
*                                       NAME.                        */
*      4 DEBEXTNM CHAR(1);           /* FOR A PARTITIONED DATA SET
*                                       OPENED FOR INPUT, EACH ONE
*                                       BYTE FIELD CONTAINS THE
*                                       EXTENT NUMBER OF THE FIRST
*                                       EXTENT ENTRY FOR EACH DATA
*                                       SET EXCEPT THE FIRST, IF TWO
*                                       OR MORE DATA SETS ARE
*                                       CONCATENATED. THE NUMBER OF
*                                       BYTES IN THE FIELD IS EQUAL
*                                       TO ONE LESS THAN THE NUMBER
*                                       OF DATA SETS CONCATENATED.   */
*
*
* /* *************************************************************** */
* /*               BDAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS02
*       BASED(ADDR(DEBACSMD)),
*
* /*                      *****************************************  */
* /*                      * FOR FIXED LENGTH RECORDS WITH THE     *  */
* /*                      * OPTION OF RELEATIVE BLOCK ADDRESSING  *  */
* /*                      * (BUT NOT TRACK OVERFLOW.              *  */
* /*                      *****************************************  */
*
*     3 DEBDBLK  FIXED(31),          /* ONE FOUR BYTE FIELD FOR EACH
*                                       EXTENT DESCRIBED IN THE
*                                       DEVICE DEPENDENT SECTION.    */
*      4 DEBDBPT  PTR(8),            /* NUMBER OF BLOCKS PER TRACK   */
*      4 DEBDBPE  CHAR(3);           /* NUMBER OF BLOCKS PER EXTENT  */
*
*
* DECLARE 1 DEBACS03
*       BASED(ADDR(DEBACSMD)),
*
* /*                      *****************************************  */
* /*                      * FOR FIXED LENGTH RECORDS WITH THE     *  */
* /*                      * OPTION OF RELATIVE BLOCK ADDRESSING   *  */
* /*                      * AND TRACK OVERFLOW.                   *  */
* /*                      *****************************************  */
*
*     3 DEBDTPP FIXED(31),           /* NUMBER OF TRACKS PER PERIOD  */
*     3 DEBDBPP FIXED(31),           /* NUMBER OF BLOCKS PER PERIOD  */
* /*                      THE FOLLOWING FIELD OCCURS ONCE FOR        */
* /*                      EACH EXTENT.                               */
*     3 DEBDBPEF FIXED(31);          /* NUMBER OF BLOCKS PER EXTENT  */
*
*
* /* *************************************************************** */
* /*              BTAM DEPENDENT SECTION                             */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS04
*       BASED(ADDR(DEBACSMD)),
* /*                      THIS SEGMENT IS ALWAYS PRESENT WITH BTAM   */
* /*                      IT IS USED WHEN A BUFFER POOL OR DYNAMIC   */
* /*                      BUFFERING IS USED, ELSE THE FIELDS ARE     */
* /*                      ZERO.                                      */
*     3 DEBTBFRA PTR(31),            /* ADDRESS OF THE BUFFER ROUTING*/
*      4 *        CHAR(1),           /* RESERVED                     */
*      4 DEBTBFRB PTR(24)  BDY(BYTE),
*                                    /* *** SAME AS DEBTBFRA, ABOVE
*                                       *** THE FOLLOWING FIELD IS
*                                       REPEATED FOR EACH CCW ON THE
*                                       CHANNEL PGM QUEUE            */
*     3 DEBTCCWA PTR(31),            /* ADDRESS OF THE FIRST CCW ON THE
*                                       QUEUE                        */
*      4 *        CHAR(1),           /* RESERVED                     */
*      4 DEBTCCWB PTR(24)  BDY(BYTE);
*                                    /* *** SAME AS DEBCCWA, ABOVE   */
*
*
* /* *************************************************************** */
* /*                GAM DEPENDENT SECTION                            */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS05
*       BASED(ADDR(DEBACSMD)),
*
*     3 DEBFUCBA PTR(31),            /* POINTER TO FIRST UCB         */
*      4 *        CHAR(1),           /* RESERVED                     */
*      4 DEBFUCBB PTR(24)  BDY(BYTE),
*                                    /* ADDRESS OF FIRST UCB         */
*     3 DEBLUCBA PTR(31),          /* POINTER TO LAST UCB            */
*      4 *        CHAR(1),           /* RESERVED                     */
*      4 DEBLUCBB PTR(24)  BDY(BYTE);
*                                    /* ADDRESS OF LAST UCB          */
*
*
* /* *************************************************************** */
* /*              ISAM LOAD MODE EXTENSION                           */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS06
*       BASED(DEBEXPT),
*
*    2 DEBPUT   PTR(31);             /* ADDRESS OF PUT MODULE  ICB279*/
*
*
* /* *************************************************************** */
* /*              ISAM SCAN MODE EXTENSION                           */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS07
*       BASED(DEBEXPT),
*
*    2 DEBGET   PTR(31),             /* ADDRESS OF GET OR PUT MODULE
*                                       - THIS FIELD IS ALSO CALLED
*                                       DCBPUT                 ICB279*/
*    2 DEBWKPT4 PTR(31),             /* SAME AS DCBWKPT4       ICB279*/
*    2 DEBWKPT5 PTR(31),             /* SAME AS DCBWKPT5       ICB279*/
*    2 DEBCREAD PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR READ     ICB279*/
*    2 DEBCSETL PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR SETL     ICB279*/
*    2 DEBCWRIT PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR WRITE    ICB279*/
*    2 DEBCCHK  PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR WRITE VALIDITY
*                                       CHECK                  ICB279*/
*    2 DEBCREWT PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR RE-WRITE ICB279*/
*    2 DEBCRECK PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE FOR RE-CHECK ICB279*/
*    2 DEBAREAD PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR READ     ICB279*/
*    2 DEBASETL PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR SETL     ICB279*/
*    2 DEBAWRIT PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR WRITE    ICB279*/
*    2 DEBACHK  PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR CHECK    ICB279*/
*    2 DEBAREWT PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR RE-WRITE ICB279*/
*    2 DEBARECK PTR(31);             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE FOR RE-CHECK ICB279*/
*
*
* /* *************************************************************** */
* /*              BISAM MODE EXTENSION                               */
* /* *************************************************************** */
*
*
* DECLARE 1 DEBACS08
*       BASED(DEBEXPT),
*
*    2 DEBDISAD PTR(31),             /* ADDRESS OF PRIVILEGED MODULE
*                                       ENTERED WHEN A BISAM MACRO
*                                       INSTRUCTION IS EXECUTED
*                                                              ICB279*/
*    2 *        PTR(31),             /* DEBWKPT4 - SAME AS
*                                       DCBWKPT4               ICB279*/
*    2 *        PTR(31),             /* DEBWKPT5 - SAME AS
*                                       DCBWKPT5               ICB279*/
*    2 DEBFREED PTR(31),             /* ADDRESS OF DYNAMIC BUFFERING
*                                       MODULE                 ICB279*/
*    2 DEBRPSIO PTR(31);             /* ADDRESS OF A DEVICE DEPENDENT
*                                       SECONDARY SIO APPENDAGE
*                                                              ICB279*/
*
*
* /* *************************************************************** */
* /*              SUBROUTINE NAME SECTION                            */
* /* *************************************************************** */
*
* DECLARE
* 1 DEBSUBNM BASED(DEBSBPTR),
*
* /*                      FOLLOWS THE ACCESS METHOD DEPENDENT        */
* /*                      SECTION, OR THE DEVICE DEPENDENT SECTION   */
* /*                      IF THERE IS NO ACCESS METHOD SECTION.      */
*      4 DEBSUBID CHAR(2);           /* THE LAST TWO BYTES OF THE
*                                       8-BYTE MODULE NAME FOR EACH
*                                       ACCESS METHOD SUBROUTINE,
*                                       APPENDAGE SUBROUTINE, OR IRB
*                                       ROUTINE LOADED BY OPEN.      */
* DECLARE
*   1 DEB    BASED(DEBAPPAD),
*
* /* *************************************************************** */
* /*                                                                 */
* /*           ***** DATA EXTENT BLOCK *****                         */
* /*                                                                 */
* /*   FUNCTION -  THE DATA EXTENT BLOCK (DEB) CONTAINS AN EXTENSION */
* /*               OF INFORMATION IN THE DCB.  EACH DEB IS ASSOCIATED*/
* /*               WITH A DCB, AND THE TWO POINT TO EACH OTHER.  THE */
* /*               DEB CONTAINS INFORMATION CONCERNING THE PHYSICAL  */
* /*               CHARACTERISTICS OF THE DATA SET AND OTHER         */
* /*               INFORMATION THAT IS USED BY THE CONTROL PROGRAM.  */
* /*                                                                 */
* /* *************************************************************** */
*
* /* *************************************************************** */
* /*         APPENDAGE VECTOR TABLE SECTION OF THE DEB               */
* /* *************************************************************** */
*
*    2 DEBAVT,
*                                    /* APPENDAGE VECTOR TABLE       */
*     3 DEBEOEA  PTR(31),            /* ADDRESS OF END-OF-EXTENT
*                                       APPENDAGE                    */
*     3 DEBSIOA  PTR(31),            /* ADDRESS OF START I/O
*                                       APPENDAGE                    */
*    2 DEBPCIA  PTR(31),             /* ADDRESS OF PCI APPENDAGE     */
*    2 DEBCEA   PTR(31),             /* ADDRESS OF CHANNEL-END
*                                       APPENDAGE                    */
*    2 DEBXCEA  PTR(31),             /* ADDRESS OF ABNORMAL-END
*                                       APPENDAGE                    */
*
* /* *************************************************************** */
* /*                 DEB PREFIX TABLE                                */
* /* *************************************************************** */
*
*    2 DEBPREFX,
*     3 DEBWKARA CHAR(1),            /* I/O SUPPORT WORK AREA        */
*     3 DEBDSCBA CHAR(7),            /* DSCB ADDRESS (BBCCHHR) USED
*                                       BY I/O SUPPORT               */
*     3 DEBDCBMK CHAR(4),            /* DCB MODIFICATION MASK USED
*                                       BY I/O SUPPORT               */
*     3 DEBLNGTH CHAR(1),            /* LENGTH OF DEB IN DOUBLE
*                                       WORDS                        */
*     3 *   CHAR(3);                 /* RESERVED                     */
