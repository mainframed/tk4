*%       GOTO DCL2BSL;
* /*******************************************************************/
* /*                                                                 */
* /* STATUS --                                                       */
* /*    RELEASE 20, MODIFICATION LEVEL 00                            */
* /*    A 0-999999                                            S20029 */
* /*                                                                 */
* /* FUNCTION --                                                     */
* /*    GENERATE STANDARDIZED BSL DECLARATIONS OF COMMON CONTROL     */
* /*    BLOCKS                                                       */
* /*                                                                 */
* /* ENTRY POINTS --                                                 */
* /*         NONE                                                    */
* /*                                                                 */
* /* INPUT --                                                        */
* /*    SEE MODULE SPECIFICATIONS BELOW                              */
* /*                                                                 */
* /* OUTPUT --                                                       */
* /*    BSL DELCARATIONS OF THE FOLLOWING COMMON CONTROL BLOCKS: THE */
* /*    GENERAL PURPOSE REGISTERS, A SAVEAREA, A PROGRAM STATUS      */
* /*    WORD, LOW CORE, A CHANNEL COMMAND WORD, A CHANNEL ADDRESS    */
* /*    WORD, A CHANNEL STATUS WORD, A PROGRAM INTERRUPT ELEMENT, A  */
* /*    TYPE I PARAMETER LIST, AND A WRITE-TO-OPERATOR BUFFER.       */
* /*                                                                 */
* /* EXTERNAL REFERENCES --                                          */
* /*         NONE                                                    */
* /*                                                                 */
* /* EXITS, NORMAL --                                                */
* /*         NONE                                                    */
* /*                                                                 */
* /* EXITS, ERROR --                                                 */
* /*         NONE                                                    */
* /*                                                                 */
* /* TABLE/WORK AREAS --                                             */
* /*         NONE                                                    */
* /*                                                                 */
* /* ATTRIBUTES --                                                   */
* /*         NOT APPLICABLE                                          */
* /*                                                                 */
* /* NOTES --                                                        */
* /*    SEE THE SPECIFICATIONS FOLLOWING FOR A MORE DETAILED         */
* /*    DESCRIPTION OF THIS MACRO-INSTRUCTION                        */
* /*                                                                 */
* /*******************************************************************/
* /* START OF SPECIFICATIONS ****
*1MODULE-NAME = IEFDCL2
*  2PROCESSOR = DUMMY
**********************************************************************/
* /********************************************************************
*1STATUS = 20
**********************************************************************/
* /********************************************************************
*1DESCRIPTIVE-NAME = STANDARDIZED BSL DECLARATIONS
**********************************************************************/
* /********************************************************************
*1DESCRIPTION = GENERATION PHASE FOR STANDARDIZED BSL DECLARATIONS   -
*OF COMMON CONTROL BLOCKS AND DATA STRUCTURES
**********************************************************************/
* /********************************************************************
*1ASSUMPTIONS = IEFDCL1 SHOULD HAVE BEEN INCLUDED IN THE MODULE      -
*PREVIOUS TO THE INCLUSION OF THIS CODE. ERRORS WILL BE GENERATED IF -
*THIS IS NOT THE CASE.
**********************************************************************/
* /********************************************************************
*1FUNCTION = CONDITIONALLY OUTPUT DECLARATIONS FOR ONE OR MORE       -
*COMMON CONTROL BLOCKS OR STRUCTURES DEPENDING UPON THE SETTING OF   -
*PREPROCESSOR VARIABLES WHICH WERE DECLARED BY IEFDCL1.
**********************************************************************/
* /********************************************************************
*1RESTRICTIONS = SEE ASSUMPTIONS
**********************************************************************/
* /********************************************************************
*1MODULE-TYPE = MACRO
*1GLOBAL-CHARACTER-VARIABLES = R0STAT, R1STAT, R2STAT, R3STAT,       -
*R4STAT, R5STAT, R6STAT, R7STAT, R8STAT, R9STAT, R10STAT, R11STAT,   -
*R12STAT, R13STAT, R14STAT, R15STAT, R0TYPE, R1TYPE, R2TYPE, R3TYPE, -
*R4TYPE, R5TYPE, R6TYPE R7TYPE, R8TYPE, R9TYPE, R10TYPE, R11TYPE,    -
*R12TYPE, R13TYPE, R14TYPE, R15TYPE
**********************************************************************/
* /********************************************************************
*1GLOBAL-ARITHMETIC-VARIABLES = SAVEAREA, PSW, LOWCORE, CCW, CAW,    -
*CSW, PIE, PARAM, REGISTER, LENEXTNT, LENTEXT
**********************************************************************/
* /********************************************************************
*1MACRO-SIZE = 800 STATEMENTS
**********************************************************************/
* /********************************************************************
*1PARAMETER-RECEIVED = NONE
**********************************************************************/
* /********************************************************************
*1EXTERNAL-PROCEDURE = NONE
**********************************************************************/
* /********************************************************************
*1INNER-MACRO = NONE
**********************************************************************/
* /********************************************************************
*1SYSTEM-MACROS = NONE
*
**** END OF SPECIFICATIONS ***/
*%DCL2BSL: IF REGISTER ^= YES %THEN %GOTO IEFDCL20;
*
* /*******************************************************************/
* /*      DEFINE THE GENERAL PURPOSE REGISTERS                       */
* /*******************************************************************/
* DECLARE
*         R0 R0TYPE REGISTER(0) R0STAT,
*         /***********************************************************/
*         /*    STANDARD LINKAGE CONVENTION PARAMETER LIST POINTER   */
*         /***********************************************************/
*         R1 R1TYPE REGISTER(1) R1STAT,
*         R2 R2TYPE REGISTER(2) R2STAT,
*         R3 R3TYPE REGISTER(3) R3STAT,
*         R4 R4TYPE REGISTER(4) R4STAT,
*         R5 R5TYPE REGISTER(5) R5STAT,
*         R6 R6TYPE REGISTER(6) R6STAT,
*         R7 R7TYPE REGISTER(7) R7STAT,
*         R8 R8TYPE REGISTER(8) R8STAT,
*         R9 R9TYPE REGISTER(9) R9STAT,
*         R10 R10TYPE REGISTER(10) R10STAT,
*         R11 R11TYPE REGISTER(11) R11STAT,
*         R12 R12TYPE REGISTER(12) R12STAT,
*         /***********************************************************/
*         /*   STANDARD LINKAGE CONVENTION SAVE AREA POINTER         */
*         /***********************************************************/
*         R13 R13TYPE REGISTER(13) R13STAT,
*         /***********************************************************/
*         /*   STANDARD LINKAGE CONVENTION RETURN POINTER            */
*         /***********************************************************/
*         R14 R14TYPE REGISTER(14) R14STAT,
*         /***********************************************************/
*         /*   STANDARD LINKAGE CONVENTION SUBROUTINE ENTRY POINTER  */
*         /***********************************************************/
*         R15 R15TYPE REGISTER(15) R15STAT;
*%IEFDCL20: IF SAVEAREA ^= YES % THEN % GOTO IEFDCL2A;
*%       DEACTIVATE SAVEAREA;
*
* /*******************************************************************/
* /*      DEFINE A SAVE AREA                                         */
* /*******************************************************************/
* DECLARE
* 1       SAVEAREA  BASED( SAVEPTR) BOUNDARY( WORD),
*         /***********************************************************/
*         /*    PL/I USES THIS WORD TO INDICATE THE LENGTH OF THE    */
*         /*    DYNAMIC STORAGE AREA REPRESENTED BY THIS SAVE AREA   */
*         /***********************************************************/
*         2     SAVEWRD1 POINTER(32),
*               3  SAVEPFLG POINTER(8),
*               3  SAVEPLGH POINTER(24),
*         /***********************************************************/
*         /*    POINTER TO THE PREVIOUS SAVE AREA, THE SAVE AREA OF  */
*         /*    THE INVOKER UNLESS THIS SUBROUTINE PROVIDES NO SAVE  */
*         /*    AREA OF ITS OWN                                      */
*         /***********************************************************/
*         2     SAVELAST POINTER(32),
*         /***********************************************************/
*         /*    POINTER TO THE NEXT SAVE AREA FOR ALL BUT THE LOWEST */
*         /*    LEVEL SUBROUTINE ON THE STACK                        */
*         /***********************************************************/
*         2     SAVENEXT POINTER(32),
*         /***********************************************************/
*         /*    SAVE AREA WORD FOR INPUT REGISTER 14, THE ADDRESS TO */
*         /*    WHICH CONTROL IS NORMALLY TO BE RETURNED AFTER A     */
*         /*    SUBROUTINE HAS CONCLUDED PROCESSING.  THE HIGH-ORDER */
*         /*    BYTE OF THIS POINTER SHOULD BE SET TO 'FF'X IF THIS  */
*         /*    ROUTINE HAS CONTROL AFTER A RETURN HAS BEEN MADE FROM*/
*         /*    A SUBROUTINE.                                        */
*         /***********************************************************/
*         2     SAVER14 POINTER(32),
*               3  SAVERETF POINTER(8),
*         /***********************************************************/
*         /*    SAVE AREA FOR INPUT REGISTERS 15 THROUGH 12          */
*         /***********************************************************/
*         2     SAVER15 POINTER(32),
*         2     SAVER0 POINTER(32),
*         2     SAVER1 POINTER(32),
*         2     SAVER2 POINTER(32),
*         2     SAVER3 POINTER(32),
*         2     SAVER4 POINTER(32),
*         2     SAVER5 POINTER(32),
*         2     SAVER6 POINTER(32),
*         2     SAVER7 POINTER(32),
*         2     SAVER8 POINTER(32),
*         2     SAVER9 POINTER(32),
*         2     SAVER10 POINTER(32),
*         2     SAVER11 POINTER(32),
*         2     SAVER12 POINTER(32),
*         /***********************************************************/
*         /*   AREA USED BY PL/I AND BSL FOR TEMPORARY AND AUTOMATIC */
*         /*   STORAGE AREAS                                         */
*         /***********************************************************/
*         2     SAVEXTNT CHARACTER( LENEXTNT);
*%IEFDCL2A:   IF PSW ^= YES %THEN % GOTO IEFDCL2B;
*%        DEACTIVATE PSW;
*
* /*******************************************************************/
* /*      DEFINE THE FIELDS OF A PSW                                 */
* /*******************************************************************/
* DECLARE
* 1       PSW  BASED( PSWPTR) BOUNDARY( WORD),
*         /***********************************************************/
*         /*    SYSTEM MASK                                          */
*         /***********************************************************/
*         2     PSWSMASK BIT(8),
*               3  PSWCH0 BIT(1),       /* CHANNEL 0 MASK            */
*               3  PSWCH1 BIT(1),       /* CHANNEL 1 MASK            */
*               3  PSWCH2 BIT(1),       /* CHANNEL 2 MASK            */
*               3  PSWCH3 BIT(1),       /* CHANNEL 3 MASK            */
*               3  PSWCH4 BIT(1),       /* CHANNEL 4 MASK            */
*               3  PSWCH5 BIT(1),       /* CHANNEL 5 MASK            */
*               3  PSWCH6 BIT(1),       /* CHANNEL 6 MASK            */
*               3  PSWEMASK BIT(1),     /* EXTERNAL INTERRUPT MASK   */
*         /***********************************************************/
*         /*    PROTECTION KEY                                       */
*         /***********************************************************/
*         2     PSWPKEY BIT(4),
*         /***********************************************************/
*         /*    MACHINE CHECK MASK                                   */
*         /***********************************************************/
*         2     PSWMMASK BIT(1),
*         /***********************************************************/
*         /*    WAIT BIT                                             */
*         /***********************************************************/
*         2     PSWWAIT BIT(1),
*         /***********************************************************/
*         /*    PROBLEM STATE BIT                                    */
*         /***********************************************************/
*         2     PSWPROB BIT(1),
*         /***********************************************************/
*         /*    INTERRUPTION CODE                                    */
*         /***********************************************************/
*         2     PSWINTER BIT(16),
*               3  PSWLINT BIT(11),     /* LEFT INTERUPTION CODE     */
*                  4  PSWLADDR BIT(1),  /* ADDRESSING                */
*                  4  PSWLSPEC BIT(1),  /* SPECIFICATION             */
*                  4  PSWLDATA BIT(1),  /* DATA                      */
*                  4  PSWLFPO BIT(1),   /* FIXED-POINT OVERFLOW      */
*                  4  PSWLFPD BIT(1),   /* FIXED-POINT DIVIDE        */
*                  4  PSWLEXPO BIT(1),  /* EXPONENT OVERFLOW         */
*                  4  PSWLEXPU BIT(1),  /* EXPONENT UNDERFLOW        */
*                  4  PSWLSIG BIT(1),   /* SIGNIFICANCE              */
*                  4  PSWFPD BIT(1),    /* FLOATING-POINT DIVIDE     */
*               3  PSWRINT BIT(5),      /* RIGHT INTERRUPTION CODE   */
*         /***********************************************************/
*         /*    INSTRUCTION LENGTH CODE.  ZERO FOR IMPRECISE         */
*         /*    INTERRUPTIONS                                        */
*         /***********************************************************/
*         2     PSWILC BIT(3),
*         /***********************************************************/
*         /*    CONDITION CODE                                       */
*         /***********************************************************/
*         2     PSWCC BIT(2),
*         /***********************************************************/
*         /*    PROGRAM MASK                                         */
*         /***********************************************************/
*         2     PSWPMASK BIT(4),
*               3  PSWFPOM BIT(1),   /* FIXED-POINT OVERFLOW MASK    */
*               3  PSWDOM BIT(1),    /* DECIMAL OVERFLOW MASK        */
*               3  PSWFPXUM BIT(1),  /* EXPONENT UNDERFLOW MASK      */
*               3  PSWFPSM BIT(1),   /* SIGNIFICANCE MASK            */
*         /***********************************************************/
*         /*    INSTRUCTION ADDRESS                                  */
*         /***********************************************************/
*         2     PSWINSTR POINTER(24);
*%IEFDCL2B:   IF LOWCORE ^= YES %THEN %GOTO IEFDCL2C;
*%       DEACTIVATE LOWCORE;
*
* /*******************************************************************/
* /*      DEFINE A MAPPING OF LOW CORE FOR A SYSTEM/360              */
* /*******************************************************************/
* DECLARE
* 1       LOWCORE BASED(0),
*         /***********************************************************/
*         /*    INITIAL PROGRAM LOADING PROGRAM STATUS WORD          */
*         /***********************************************************/
*         2     IPLPSW BIT(64),
*         /***********************************************************/
*         /*    INITIAL PROGRAM LOADING 1ST CHANNEL CONTROL WORD     */
*         /***********************************************************/
*         2     IPLCCW1 BIT(64),
*         /***********************************************************/
*         /*    INITIAL PROGRAM LOADING 2ND CHANNEL CONTROL WORD     */
*         /***********************************************************/
*         2     IPLCCW2 BIT(64),
*         /***********************************************************/
*         /*    EXTERNAL INTERRUPTION OLD PROGRAM STATUS WORD        */
*         /***********************************************************/
*         2     EXTOPSW BIT(64),
*         /***********************************************************/
*         /*    SUPERVISOR CALL OLD PROGRAM STATUS WORD              */
*         /***********************************************************/
*         2     SVCOPSW BIT(64),
*         /***********************************************************/
*         /*    PROGRAM INTERRUPTION OLD PROGRAM STATUS WORD         */
*         /***********************************************************/
*         2     PROGOPSW BIT(64),
*         /***********************************************************/
*         /*    MACHINE CHECK INTERRUPTION OLD PROGRAM STATUS WORD   */
*         /***********************************************************/
*         2     MCHOPSW BIT(64),
*         /***********************************************************/
*         /*    INPUT/OUTPUT INTERRUPTION OLD PROGRAM STATUS WORD    */
*         /***********************************************************/
*         2     IOOPSW BIT(64),
*         /***********************************************************/
*         /*    CHANNEL STATUS WORD                                  */
*         /***********************************************************/
*         2     LOCORCSW BIT(64),
*         /***********************************************************/
*         /*    CHANNEL ADDRESS WORD                                 */
*         /***********************************************************/
*         2     LOCORCAW BIT(64),
*         /***********************************************************/
*         /*    UNUSED -- RESERVED                                   */
*         /***********************************************************/
*         2     LOCORES1 BIT(32),
*         /***********************************************************/
*         /*    TIMER                                                */
*         /***********************************************************/
*         2     TIMER FIXED(31),
*         /***********************************************************/
*         /*    UNUSED -- RESERVED                                   */
*         /***********************************************************/
*         2     LOCORES2 BIT(32),
*         /***********************************************************/
*         /*    EXTERNAL INTERRUPTION NEW PROGRAM STATUS WORD        */
*         /***********************************************************/
*         2     EXTNPSW BIT(64),
*         /***********************************************************/
*         /*    SUPERVISOR CALL NEW PROGRAM STATUS WORD              */
*         /***********************************************************/
*             2    SVCNPSW BIT(64),
*             /*******************************************************/
*             /*   PROGRAM INTERRUPTION NEW PROGRAM STATUS WORD      */
*             /*******************************************************/
*             2    PROGNPSW BIT(64),
*             /*******************************************************/
*             /*   MACHINE CHECK INTERRUPTION NEW PROGRAM STATUS WORD*/
*             /*******************************************************/
*             2    MCHNPSW BIT(64),
*         /***********************************************************/
*         /*    INPUT/OUTPUT INTERRUPTION NEW PROGRAM STATUS WORD    */
*         /***********************************************************/
*         2     IONPSW BIT(64),
*         /***********************************************************/
*         /*    DIAGNOSTIC SCAN-OUT AREA -- THE ACTUAL LENGTH OF THIS*/
*         /*       AREA IS MODEL-DEPENDENT.  HOWEVER, IN NO MODEL    */
*         /*       WILL IT EXCEED THE 256 BYTES MAPPED HERE.         */
*         /***********************************************************/
*         2     DSCANOUT BIT(2048);
*%IEFDCL2C:   IF CCW ^= YES %THEN %GOTO IEFDCL2D;
*%       DEACTIVATE CCW;
*
*        /************************************************************/
*        /*   DEFINE A CHANNEL COMMAND WORD                          */
*        /************************************************************/
*        DECLARE
*        1    CCW BASED(CCWPTR),
*             /*******************************************************/
*             /*   COMMAND CODE                                      */
*             /*******************************************************/
*             2    CCWCOMD POINTER(8),
*             /*******************************************************/
*             /*   DATA ADDRESS                                      */
*             /*******************************************************/
*             2    CCWDATA POINTER(24),
*             /*******************************************************/
*             /*   FLAGS                                             */
*             /*******************************************************/
*             2    CCWFLAGS BIT(8),
*                  /**************************************************/
*                  /*   DATA CHAINING BIT                            */
*                  /**************************************************/
*                  3    CCWDCHN BIT(1),
*                  /**************************************************/
*                  /*   COMMAND CHAINING BIT                         */
*                  /**************************************************/
*                  3    CCWCCHN BIT(1),
*                  /**************************************************/
*                  /*   SUPPRESS WRONG LENGTH INDICATION BIT         */
*                  /**************************************************/
*                  3    CCWSLI BIT(1),
*                  /**************************************************/
*                  /*   SUPPRESS DATA TRANSFER BIT                   */
*                  /**************************************************/
*                  3    CCWSDT BIT(1),
*                  /**************************************************/
*                  /*   PROGRAM-CONTROLLED INTERRUPTION BIT          */
*                  /**************************************************/
*                  3    CCWPCI BIT(1),
*                  /**************************************************/
*                  /*   RESERVED -- MUST BE ZERO                     */
*                  /**************************************************/
*                  3    * BIT(3),
*             /*******************************************************/
*             /*   UNUSED                                            */
*             /*******************************************************/
*             2    * BIT(8),
*             /*******************************************************/
*             /*   DATA LENGTH                                       */
*             /*******************************************************/
*             2    CCWLDATA POINTER(8);
*%IEFDCL2D:   IF CAW ^= YES %THEN %GOTO IEFDCL2E;
*%       DEACTIVATE CAW;
*
*        /************************************************************/
*        /*   DEFINE A CHANNEL ADDRESS WORD                          */
*        /************************************************************/
*        DECLARE
*        1    CAW BASED(CAWPTR),
*             /*******************************************************/
*             /*   PROTECTION KEY TO BE USED BY CHANNEL              */
*             /*******************************************************/
*             2    CAWPKEY BIT(4),
*             /*******************************************************/
*             /*   RESERVED -- SHOULD BE ZERO                        */
*             /*******************************************************/
*             2    * BIT(4),
*             /*******************************************************/
*             /*   ADDRESS OF FIRST CCW TO BE FETCHED BY THE CHANNEL */
*             /*******************************************************/
*             2    CAWCCW POINTER(24);
*%IEFDCL2E:   IF CSW ^= YES %THEN %GOTO IEFDCL2F;
*%       DEACTIVATE CSW;
*
*        /************************************************************/
*        /*   DEFINE A CHANNEL STATUS WORD                           */
*        /************************************************************/
*        DECLARE
*        1    CSW BASED(CSWPTR),
*             /*******************************************************/
*             /*   PROTECTION KEY USED BY THE CHANNEL                */
*             /*******************************************************/
*             2    CSWPKEY BIT(4),
*             /*******************************************************/
*             /*   RESERVED -- SHOULD BE ZERO                        */
*             /*******************************************************/
*             2    * BIT(4),
*             /*******************************************************/
*             /*   LAST CCW ADDRESS FETCHED BEFORE CSW STORED        */
*             /*******************************************************/
*             2    CSWCCW POINTER(24),
*             /*******************************************************/
*             /*   STATUS FLAGS                                      */
*             /*******************************************************/
*             2    CSWSTAT BIT(16),
*                  /**************************************************/
*                  /*   ATTENTION FLAG                               */
*                  /**************************************************/
*                  3    CSWATTN BIT(1),
*                  /**************************************************/
*                  /*   STATUS MODIFIER FLAG                         */
*                  /**************************************************/
*                  3    CSWSMOD BIT(1),
*                  /**************************************************/
*                  /*   CONTROL UNIT END FLAG                        */
*                  /**************************************************/
*                  3    CSWCUEND  BIT(1),
*                  /**************************************************/
*                  /*   BUSY FLAG                                    */
*                  /**************************************************/
*                  3    CSWBUSY BIT(1),
*                  /**************************************************/
*                  /*   CHANNEL END FLAG                             */
*                  /**************************************************/
*                  3    CSWCEND BIT(1),
*                  /**************************************************/
*                  /*   DEVICE END FLAG                              */
*                  /**************************************************/
*                  3    CSWDVEND BIT(1),
*                  /**************************************************/
*                  /*   UNIT CHECK FLAG                              */
*                  /**************************************************/
*                  3    CSWUCHK BIT(1),
*                  /**************************************************/
*                  /*   UNIT EXCEPTION FLAG                          */
*                  /**************************************************/
*                  3    CSWUXCEPT BIT(1),
*                  /**************************************************/
*                  /*   PROGRAM CONTROL INTERRUPT FLAG               */
*                  /**************************************************/
*                  3    CSWPCI BIT(1),
*                  /**************************************************/
*                  /*   INCORRECT LENGTH FLAG                        */
*                  /**************************************************/
*                  3    CSWIL BIT(1),
*                  /**************************************************/
*                  /*   PROGRAM CHECK FLAG                           */
*                  /**************************************************/
*                  3    CSWPGCHK BIT(1),
*                  /**************************************************/
*                  /*   PROTECTION CHECK FLAG                        */
*                  /**************************************************/
*                  3    CSWPTCHK BIT(1),
*                  /**************************************************/
*                  /*   CHANNEL DATA CHECK FLAG                      */
*                  /**************************************************/
*                  3    CSWCDCHK BIT(1),
*                  /**************************************************/
*                  /*   CHANNEL CONTROL CHECK FLAG                   */
*                  /**************************************************/
*                  3    CSWCCCHK BIT(1),
*                  /**************************************************/
*                  /*   INTERFACE CONTROL CHECK FLAG                 */
*                  /**************************************************/
*                  3    CSWICCHK BIT(1),
*                  /**************************************************/
*                  /*   CHAINING CHECK FLAG                          */
*                  /**************************************************/
*                  3    CSWCHCHK BIT(1),
*             /*******************************************************/
*             /*   RESIDUAL BYTE COUNT                               */
*             /*******************************************************/
*             2    CSWRSIDU POINTER(16);
*%IEFDCL2F:   IF PIE ^= YES %THEN %GOTO IEFDCL2G;
*%       DEACTIVATE PIE;
*
*        /************************************************************/
*        /*   DEFINE A PROGRAM INTERRUPT ELEMENT                     */
*        /************************************************************/
*        DECLARE
*        1    PIE BASED(PIEPTR) BOUNDARY(DWORD),
*             2    * CHAR(1),     /* RESERVED */
*             /*******************************************************/
*             /*   POINTER TO PROGRAM INTERRUPTION CONTROL AREA      */
*             /*******************************************************/
*             2    PIEPICA POINTER(24),
*             /*******************************************************/
*             /*   PROGRAM STATUS WORD IMAGE UPON INTERRUPTION       */
*             /*******************************************************/
*             2    PIEPSW CHAR(8),
*             /*******************************************************/
*             /*   REGISTERS 14 THROUGH 2 UPON INTERRUPTION          */
*             /*******************************************************/
*             2    PIER14 POINTER(31),
*             2    PIER15 POINTER(31),
*             2    PIER0 FIXED(31),
*             2    PIER1 POINTER(31),
*             2    PIER2 POINTER(31);
*%IEFDCL2G:   IF PARAM ^= YES %THEN %GOTO IEFDCL2H;
*%       DEACTIVATE PARAM;
*
* /*******************************************************************/
* /*      DEFINE A TYPE I PARAMETER LIST                             */
* /*******************************************************************/
* DECLARE
* 1       PARAM BASED( PARAMPTR) BOUNDARY( WORD),
*         2     PARAM1 POINTER(32),
*         2     PARAM2 POINTER(32),
*         2     PARAM3 POINTER(32),
*         2     PARAM4 POINTER(32),
*         2     PARAM5 POINTER(32),
*         2     PARAM6 POINTER(32),
*         2     PARAM7 POINTER(32),
*         2     PARAM8 POINTER(32),
*         2     PARAM9 POINTER(32),
*         2     PARAM10 POINTER(32),
*         2     PARAM11 POINTER(32),
*         2     PARAM12 POINTER(32),
*         2     PARAM13 POINTER(32),
*         2     PARAM14 POINTER(32),
*         2     PARAM15 POINTER(32),
*         2     PARAM16 POINTER(32),
*         2     PARAM17 POINTER(32),
*         2     PARAM18 POINTER(32),
*         2     PARAM19 POINTER(32),
*         2     PARAM20 POINTER(32),
*         2     PARAM21 POINTER(32),
*         2     PARAM22 POINTER(32),
*         2     PARAM23 POINTER(32),
*         2     PARAM24 POINTER(32),
*         2     PARAM25 POINTER(32),
*         2     PARAM26 POINTER(32),
*         2     PARAM27 POINTER(32),
*         2     PARAM28 POINTER(32),
*         2     PARAM29 POINTER(32),
*         2     PARAM30 POINTER(32);
*%IEFDCL2H: IF WTO ^= YES %THEN %GO TO IEFDCL2I;
*% DEACTIVATE WTO;
*
*        /************************************************************/
*        /*   DEFINE A WRITE-TO-OPERATOR BUFFER                      */
*        /************************************************************/
*        DECLARE
*        1    WTO BASED(WTOPTR),
*             /*******************************************************/
*             /*   MESSAGE LENGTH - MESSAGE TEXT LENGTH + 4          */
*             /*******************************************************/
*             2    WTOLEN FIXED(15),
*             /*******************************************************/
*             /*   MCS FLAGS FIELD                                   */
*             /*******************************************************/
*             2    WTOMCS BIT(16),
*                  /**************************************************/
*                  /*   EXTENDED WTO FORMAT FLAG                     */
*                  /**************************************************/
*                  3    WTOXTEND BIT(1),
*                  /**************************************************/
*                  /*   REGISTER 0 CONSOLE ID ROUTING FLAG           */
*                  /**************************************************/
*                  3    WTOREG0 BIT(1),
*                  /**************************************************/
*                  /*   IMMEDIATE COMMAND RESPONSE FLAG              */
*                  /**************************************************/
*                  3    WTORESP BIT(1),
*                  /**************************************************/
*                  /*   MESSAGE TYPE FIELD INCLUDED FLAG             */
*                  /**************************************************/
*                  3    WTOXXTND BIT(1),
*                  /**************************************************/
*                  /*   WTOR REPLY FIELD                             */
*                  /**************************************************/
*                  3    WTOREPLY BIT(1),
*                  /**************************************************/
*                  /*   BROADCAST FLAG                               */
*                  /**************************************************/
*                  3    WTOBDCST BIT(1),
*                  /**************************************************/
*                  /*   HARD COPY ONLY FLAG                          */
*                  /**************************************************/
*                  3    WTOHRDCP BIT(1),
*                  /**************************************************/
*                  /*  UNCONDITIONAL REGISTER 0 CONSOLE ID ROUTINE   */
*                  /*  FLAG                                          */
*                  /**************************************************/
*                  3    WTOQREG0 BIT(1),
*                  /**************************************************/
*                  /*   PROHIBIT APPENDING TIME FLAG                 */
*                  /**************************************************/
*                  3    WTONOTIM BIT(1),
*                  /**************************************************/
*                  /*   RESERVED --SHOULD BE ZERO                    */
*                  /**************************************************/
*                  3    * BIT(4),
*                  /**************************************************/
*                  /*   PROHIBIT HARD COPY FLAG                      */
*                  /**************************************************/
*                  3    WTONOCPY BIT(1),
*                  /**************************************************/
*                  /*   RESERVED -- SHOULD BE ZERO                   */
*                  /**************************************************/
*                  3    * BIT(2),
*             /*******************************************************/
*             /*   MESSAGE TEXT                                      */
*             /*******************************************************/
*             2    WTOTEXT CHAR(LENTEXT),
*        /************************************************************/
*        /*   MCS EXTENSIONS TO WTO BUFFER                           */
*        /************************************************************/
*        1    WTOX BASED(WTOXPTR),
*             /*******************************************************/
*             /*   DECRIPTOR CODE                                    */
*             /*******************************************************/
*             2    WTOXDESC BIT(16),
*                  /**************************************************/
*                  /*   SYSTEM FAILURE MESSAGE FLAG                  */
*                  /**************************************************/
*                  3    WTOXSYSF BIT(1),
*                  /**************************************************/
*                  /*   IMMEDIATE ACTION REQUIRED FLAG               */
*                  /**************************************************/
*                  3    WTOXIACT BIT(1),
*                  /**************************************************/
*                  /*   EVENTUAL ACTION REQUIRED FLAG                */
*                  /**************************************************/
*                  3    WTOXEACT BIT(1),
*                  /**************************************************/
*                  /*   SYSTEM STATUS FLAG                           */
*                  /**************************************************/
*                  3    WTOXSYSS BIT(1),
*                  /**************************************************/
*                  /*   IMMEDIATE COMMAND RESPONSE FLAG              */
*                  /**************************************************/
*                  3    WTOXCRSP BIT(1),
*                  /**************************************************/
*                  /*   JOB STATUS FLAG                              */
*                  /**************************************************/
*                  3    WTOXJOBS BIT(1),
*                  /**************************************************/
*                  /*   APPLICATION PROGRAM FLAG                     */
*                  /**************************************************/
*                  3    WTOXAPRO BIT(1),
*                  /**************************************************/
*                  /*   RESERVED -- SHOULD BE ZERO                   */
*                  /**************************************************/
*                  3    *  BIT(9),
*             /*******************************************************/
*             /*   ROUTING FLAGS                                     */
*             /*******************************************************/
*             2    WTOXROUT BIT(16),
*                  /**************************************************/
*                  /*   MASTER CONSOLE ACTION FLAG                   */
*                  /**************************************************/
*                  3    WTOXMASA BIT(1),
*                  /**************************************************/
*                  /*   MASTER CONSOLE INFORMATIONAL FLAG            */
*                  /**************************************************/
*                  3    WTOXMASI BIT(1),
*                  /**************************************************/
*                  /*   TAPE POOL FLAG                               */
*                  /**************************************************/
*                  3    WTOXTAPP BIT(1),
*                  /**************************************************/
*                  /*   DIRECT ACCESS POOL FLAG                      */
*                  /**************************************************/
*                  3    WTOXDAP BIT(1),
*                  /**************************************************/
*                  /*   TAPE LIBRARY FLAG                            */
*                  /**************************************************/
*                  3    WTOXTAPL BIT(1),
*                  /**************************************************/
*                  /*   DIRECT ACCESS LIBRARY FLAG                   */
*                  /**************************************************/
*                  3    WTOXDAL BIT(1),
*                  /**************************************************/
*                  /*   UNIT RECORD POOL FLAG                        */
*                  /**************************************************/
*                  3    WTOXURP BIT(1),
*                  /**************************************************/
*                  /*   TELEPROCESSING CONTROL FLAG                  */
*                  /**************************************************/
*                  3    WTOXTELE BIT(1),
*                  /**************************************************/
*                  /*   SYSTEM SECURITY FLAG                         */
*                  /**************************************************/
*                  3    WTOXSCUR BIT(1),
*                  /**************************************************/
*                  /*   SYSTEM/ERROR MAINTENANCE FLAG                */
*                  /**************************************************/
*                  3    WTOXERR BIT(1),
*                  /**************************************************/
*                  /*   PROGRAMMER INFORMATION FLAG                  */
*                  /**************************************************/
*                  3    WTOXPROG BIT(1),
*                  /**************************************************/
*                  /*   RESERVED -- SHOULD BE ZERO                   */
*                  /**************************************************/
*                  3    * BIT(1)
*                  /**************************************************/
*                  /*   USER-DESIGNATED-ROUTING FLAGS                */
*                  /**************************************************/
*                  3    WTOXUSER BIT(3),
*                  /**************************************************/
*                  /*   RESERVED -- SHOULD BE ZERO                   */
*                  /**************************************************/
*                  3    * BIT(1),
*             /*******************************************************/
*             /*   MESSAGE TYPE FLAGS                                */
*             /*******************************************************/
*             2    WTOXMTYP BIT(16),
*                  /**************************************************/
*                  /*   DISPLAY JOBNAMES ROUTING FLAG                */
*                  /**************************************************/
*                  3    WTOXDJOB BIT(1),
*                  /**************************************************/
*                  /*   DISPLAY STATUS ROUTING FLAG                  */
*                  /**************************************************/
*                  3    WTOXDSTA BIT(1),
*                  /**************************************************/
*                  /*   DISPLAY SESSION ROUTING FLAG                 */
*                  /**************************************************/
*                  3    WTOXDSES BIT(1),
*                  /**************************************************/
*                  /*   RESERVED -- SHOULD BE ZERO                   */
*                  /**************************************************/
*                  3    * BIT(13);
*%IEFDCL2I: ;
