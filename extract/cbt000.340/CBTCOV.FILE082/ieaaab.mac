         MACRO
         IEAAAB &PA,&PC,&PD .
         LCLB  &TRACE
         LCLB  &ONETASK
.*1040                                                             A00A
.*918900,919000,919100,919200,919300,919400,919500           AD  A58233
         LCLB  &ATT                                                I250
&TRACE   SETB  (T'&PC NE 'O')
&ONETASK SETB  (T'&PA EQ 'O')
&ATT     SETB  (T'&PD NE 'O')                                      I250
         AIF   (&ONETASK EQ 0).SKIPB
         TITLE 'ROUTINE NAME - ABTERM.  MODULE NAME - IEAAAB00.'
*GENERATION- DEC65,CHANGE LEVEL 000
*    ROUTINE NAME - ABTERM.  MODULE NAME - IEAAAB00.
         AGO   .SKIPC
*               ROLLOUT OPTION CODE REMOVED IN RELEASE 21         21372
.SKIPB   ANOP
         AIF   (&ATT EQ 1).SATT                                    I250
         AIF   (&TRACE EQ 1).SKARD
         TITLE 'ROUTINE NAME - ABTERM.  MODULE NAME - IEAGAB00.'
*    ROUTINE NAME - ABTERM.  MODULE NAME - IEAGAB00.
         AGO   .SKIPC
.SKARD   ANOP
         TITLE 'ROUTINE NAME - ABTERM. MODULE NAME - IEAIAB00'
*        ROUTINE NAME - ABTERM. MODULE NAME - IEAIAB00
         AGO   .SKIPC                                              I250
.SATT    ANOP                                                      I250
         AIF   (&TRACE EQ 1).SATTWT                           AC  M1444
  TITLE 'ROUTINE NAME-ABTERM. MODULE NAME-IEAJAB00. MFT ATT'       I250
*         ROUTINE NAME-ABTERM. MODULE NAME-IEAJAB00 MFT       AC  M1444
*         ATTACH WITHOUT TRACE OPTION                         AC  M1444
         AGO   .SKIPC                                         AC  M1444
.SATTWT  ANOP                                                 AC  M1444
 TITLE 'ROUTINE NAME-ABTERM. MODULE NAME-IEANAM00-MFT ATT'    AC  M1444
*        ROUTINE NAME-ABTERM. MODULE NAME-IEANAM00 MFT ATTACH AC  M1444
*         WITH TRACE OPTION                                   AC  M1444
.SKIPC   ANOP
*
*
*    FUNCTION: ABTERM FORCES THE SPECIFIED TASK TO TERMINATE ABNORMALLY
*
*
*    ENTRY: THE ABTERM ENTRY POINT NAME IS IEA0AB00. THE ENTRY POINT AD
*    DRESS CAN BE RETRIEVED FROM THE COMMUNICATIONS VECTOR TABLE WITH
*    THE FOLLOWING INSTRUCTION SEQUENCE:
*    L I, 16
*    L I, CVTBTERM(0,I)
*    ABTERM MAY BE ENTERED USING A BRANCH INSTRUCTION. THE INPUT PARAME
*    TERS ARE DESCRIBED IN THE NEXT TOPIC.
*    ABTERM MUST BE ENTERED IN SUPERVISOR STATE, WITH SUPERVISOR PROTEC
*    ION KEY, AND WITH INPUT/OUTPUT AND EXTERNAL INTERRUPTS DISABLED.
*
*
*    INPUT: ON ENTRY TO ABTERM, REGISTERS 0,1 AND 14 MUST HAVE BEEN INI
*    IALIZED AS FOLLOWS:
*    . REGISTER 0 MUST CONTAIN THE TCB ADDRESS OF THE TASK TO BE TERMIN
*    ATED.
*    . REGISTER 1, BIT 0 MUST BE SET IF A DUMP IS REQUESTED.
*    . REGISTER 1,BITS 8-31 MUST CONTAIN THE COMPLETION CODE.
*    . REGISTER 14 MUST CONTAIN THE RETURN ADDRESS.
*
*
*    OUTPUT: THE CONTENTS OF REGISTERS 0,1 AND 15 ARE DESTROYED.
*
*
*    EXTERNAL REFERENCES: ABTERM REFERENCES CONTROL BLOCKS, SWITCHES, A
*    ND LOCATIONS IN THE RESIDENT NUCLEUS, OF WHICH THE FOLLOWING IS A
*    LIST -
*    . THE TCB OF THE TASK TO BE TERMINATED.
*    . CONTROL BLOCKS WHICH ARE POINTED TO FROM THE TASK CONTROL BLOCK
*    (THE REQUEST BLOCK QUEUE FOR EXAMPLE).
*    . LOCATION SVCSAV (THE SVC SAVE AREA).
*    . LOCATION SVCOPSW (THE SVC OPSW).
*    . LOCATION SVF+1 (THE TYPE I SVC SWITCH).
*
*
*    EXITS: IF THE TCB ADDRESS IN REGISTER 0 DOES NOT SPECIFY A TASK WH
*    ICH IS CAPABLE OF BEING ABNORMALLY TERMINATED, ABTERM ENTERS THE W
*    AIT STATE USING THE LPSW INSTRUCITON. OTHERWISE ABTERM EXITS BY BR
*    ANCHING TO THE ADDRESS SPECIFIED IN REGISTER 14.
*
*
*    ERROR MESSAGES: NONE
*
*
*    NOTES: A TYPE I SVC ROUTINE MUST BRANCH TO ABTERM TO TERMINATE THE
*    CURRENTLY DISPATCHED TASK.
         AIF   (&ATT NE 1).SKIPD                              AC  M1444
*    ANY SVC ROUTINE MAY BRANCH TO ABTERM TO
*    TERMINATE A TASK WHICH IS NOT THE CURRENTLY DISPATCHED TASK.
.SKIPD   ANOP
*    ABTERM ASSUMES THAT THE TCB ADDRESS IN REGISTER 0 IS ALWAYS VALID.
*
*
*    OPERATION -
*    ABTERM TESTS A FLAG IN THE TCB TO SEE IF THE SPECIFIED TASK CAN
*    BE ABNORMALLY TERMINATED.  IF IT CAN NOT, ABTERM ENTERS THE WAIT
*    STATE USING THE LPSW INSTRUCTION.
*
*          ROLLOUT OPTION REMOVED IN RELEASE 21                   21372
*
         AIF   (&ATT NE 1).SKIPF                              AC  M1444
*    IF THE TASK TO BE TERMINATED IS NOT THE CURRENTLY DISPATCHED
*    TASK, ABTERM MODIFIES THE CONTENTS OF LOCATIONS NEW AND NEW+4
*    TO INSURE THAT THIS TASK SUBSEQUENTLY WILL BE DISPATCHED.
*    IF THE TASK TO BE TERMINATED IS THE CURRENTLY DISPATCHED TASK, AND
.SKIPF   ANOP
*    IF THE SVC TYPE I SWITCH IS SET, ABTERM PERFORMS THE FOLLOWING FUN
*    CTIONS:
*    . SAVES THE RIGHT HALF OF THE SVC OPSW.
*    . REPLACES THE RIGHT HALF OF THE SVC OPSW WITH THE ADDRESS OF AN
*      SVC ABEND INSTRUCTION.
*    . TURNS OFF THE SVC TYPE I NESTING SWITCH.
*    . LOADS REGISTERS 0 AND 1 FROM THE SVC TYPE I SAVE AREA.
*    . RESTORES REGISTERS
*    . EXITS
*    OTHERWISE ABTERM PERFORMS THE FOLLOWING FUNCTIONS -
*    . LOCATES THE CURRENT RB ON THE RB QUEUE OF THE TASK TO BE
*      TERMINATED.
*    . SAVES THE WAIT COUNT FROM THIS RB AND REPLACES IT WITH A ZERO
*      WAIT COUNT.
*    . SAVES THE RIGHT HALF OF THE RESUME PSW IN THIS RB.
*    . REPLACES THE RIGHT HALF OF THE RESUME PSW WITH THE ADDRESS OF AN
*      SVC ABEND INSTRUCTION.
*    . RESTORES REGISTERS
*    . EXITS
*
*
*    REMARKS -     CERTAIN UNIQUE SEPARATOR CARDS ARE USED THROUGH OUT
*              THE ASSEMBLY,AS FOLLOWS:
*              1.  THE FOLLOWING CARD PRECEDES AND SUCCEEDS A
*              CONDITIONAL ASSEMBLY INSTRUCTION.
*CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
*              2.  THE FOLLOWING CARD PRECEDES AND SUCCEEDS A
*              TEMPORARY OR DEBUGGING INSTRUCTION OR SET OF
*              INSTRUCTIONS.
*TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
*              3.  THE FOLLOWING CARD PRECEDES AND SUCCEEDS A
*              SEQUENCE OF 'DC-ORG' OPERATIONS REQUIRED TO SIMULATE
*              INSTRUCTIONS WITH ADDRESSES AS EXTERNAL SYMBOLS WHERE
*              THESE SYMBOLS ARE KNOWN TO BE WITHIN THE FIRST 4095
*              BYTES OF THE MACHINE.
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*
*
         EXTRN IEACVT                                              DAR
         EXTRN IEA0IO02
         EXTRN SVCSAV
         EXTRN SVF
*TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
         EXTRN IEATCBP
*TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
TCBREG   EQU   12
GONGREG  EQU   13
TCBFLGS  EQU   28
SVREG    EQU   13
TCBMSS   EQU   24
COMREG   EQU   1
WKREG    EQU   10
TCBDSP   EQU   35                  1    DISPATCHING PRIORITY
TCBCMP   EQU   16
SPSW     EQU   0                   ABEND SAVE AREA DISPLACEMENT    L00B
SVCOPSW  EQU   32
RETREG   EQU   14
PRBREG   EQU   11
TCBRBP   EQU   0
SWT      EQU   4                   ABEND SAVE AREA DISPLACEMENT    L00B
XRBWT    EQU   28
XRBPSW   EQU   16
ADREG    EQU   15
PIOPSW   EQU   40
TCBNSTAE EQU   160                     DISP TO STAE FIELD IN TCB   STAC
STAEREC  EQU   X'80'                   STAE RECURSION FLAG         STAC
CVTPOST  EQU   X'58'                    CVT DISP FOR POST     AC  M1701
*                                        ENTERED FLAG         AC  M1701
*
*
         DS    0D
         BALR  ADREG,0                 ESTABLISH ADDRESSABILITY.
         USING *,ADREG
START    BC    15,TBEG                                             DAR
         AIF   (&TRACE EQ 1).SKARE
BRBACK   BCR   15,RETREG           BRANCH           BACK
.SKARE   ANOP
         AIF   (&ATT NE 1).SKSIRB                                  I250
         DC    V(ABENTRY) .            DEQ ENTRY FOR ABEND         I250
         AGO   .SIRB                                               I250
.SKSIRB  ANOP                                                      I250
         AIF   (&ONETASK NE 1).NOSIRB                             M4997
         EXTRN IEEMSIRB                                           M4997
         DC    A(IEEMSIRB)
         AGO   .TBEG                                              M4997
.NOSIRB  ANOP                                                     M4997
         DC    F'0'                     UNUSED                    M4997
.SIRB    ANOP                                                      I250
         DC    V(IEA0EQ01)
         DC    V(LEQC)
         AIF   (&TRACE EQ 1).SKARF
         DC    A(BRBACK)
         AGO   .SKARG
.SKARF   ANOP
TRSTOP   DC    V(TRSTOPER)
.SKARG   ANOP
         AIF   (&TRACE EQ 1).SKDMP                                20048
         DC    F'0' .                   UNUSED IF NO TRACE        20048
         AGO   .SKDUMP1                                           20048
.SKDMP   ANOP                                                     20048
         EXTRN IEATRCST .                                         20048
         DC    A(IEATRCST) .            PTR TO TRACE NOP SWITCH   20048
.SKDUMP1 ANOP                                                     20048
         AIF   (&ATT EQ 1).ASE                                    20048
         EXTRN SIRB                                               20048
ERRTCB   DC    A(SIRB)                                            20048
         AGO   .TASK                                              20048
.ASE     ANOP                                                     20048
         EXTRN IEASETCB                                           20048
ERRTCB   DC    A(IEASETCB)                                        20048
.TASK    ANOP                                                     20048
         DC    A(TASKW)                 EP FOR TASK DISP          20048
*                                       ROUTINE USED BY SVC DUMP  20048
         DC    V(IEAARAM4) .            PTR TO RAM LIST       CE A35198
         DC    V(SVRBPOOL) .           PTR TO ABEND SVRB POOL CE A35198
.TBEG    ANOP
TBEG     DS    0C
*TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
*TTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT
         MVC   16(4),CVTADDR           REFRESH CVT PTR AT LOC 16   DAR
         STM   0,15,ASAV .             SAVE ALL REGS ON ENTRY    A39387
         AIF   (&ONETASK NE 1).SKIPCP                              DAR
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        L     TCBREG,IEATCBP+4        OBTAIN TCB ADDR             DAR
*
         DC    AL4(IEATCBP+4)  .                                   DAR
         ORG   *-4   .                                             DAR
         BALR  TCBREG,0  .                                         DAR
         ORG   *-2   .                                             DAR
         DC    X'58'   .                                           DAR
         ORG   *+3   .                                             DAR
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         AGO   .SKIPK                                              DAR
.SKIPCP  ANOP                                                      DAR
         LR    TCBREG,0                GET TCB ADDRESS FROM REG 0.
         LA    TCBREG,0(TCBREG)        CLEAR HIGH ORDER BYTE
         C     TCBREG,XSNTTCB     IS IT XSNT AREA LOADING TASK?    I275
         BC    7,CONTINUE   NO, CONTINUE IN ABTERM                 I275
         LM    0,14,ASAV  .    RESTORE REGS FOR DISPATCHER    AB A49851
         L     15,XSNTRTN .  BRANCH TO RE-INSTATE XSNT AREA   AB A49851
         BR    15    .       LOADING TASK                     AB A49851
XSNTRTN  DC    V(IEAXERR)                                          I275
XSNTTCB  DC    V(IEAXSNT)                                          I275
CONTINUE EQU   *                                                   I275
*        VALIDITY CHECK TCB ADDRESS                                DAR*
         EX    TCBREG,TEST             TCB ADDRESS ON FULL WORK    DAR
         BZ    TCBOK                   BOUNDARY-YES, BRANCH        DAR
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        TM    SVF+1,X'F0'             IS TYPE ONE SWITCH ON       DAR
         DC    AL4(SVF+1)  .                                       DAR
         ORG   *-4   .                                             DAR
         DC    X'91F0'  .                                          DAR
         ORG   *+2   .                                             DAR
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         BO    SVC                     YES, BRANCH                 DAR
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        LA    RETREG,IEA0DS           RETURN TO DISPATCHER        DAR
         EXTRN IEA0DS                                              DAR
         DC    AL4(IEA0DS)                                         DAR
         ORG   *-4    .                                            DAR
         DC    X'41E0'   .                                         DAR
         ORG   *+2
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         BR    RETREG
SVC      EQU   *
         MVC   37(3),ABPSW+1            SET OLD SVC PSW TO SVC 13
         L     14,CVTADDR .             GET CVT ADDRESS       AC  M1701
         NI    CVTPOST(14),X'7F'        TURN OFF 'POST        AC  M1701
*                                        ENTERED' FLAG        AC  M1701
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        L     RETREG,DISMISS
         EXTRN DISMISS
         DC    AL4(DISMISS)
         ORG   *-4
         DC    X'41E0'
         ORG   *+2
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         BR    RETREG
TEST     TM    HEX3,X'00'              FULL WORD BOUNDARY TEST     DAR
HEX3     DC    X'03'                                               DAR
         DS    0H                                                  DAR
TCBOK    EQU   *                                                   DAR
*     ROLLOUT OPTION REMOVED IN RELEASE 21                        21372
.SKIPK   ANOP
ABNXT    TM    TCBFLGS+1(TCBREG),X'80' IS ABEND BIT ON...
         BC    7,ASET                  YES. BRANCH TO ASET.
         TM    TCBNSTAE(TCBREG),STAEREC Q.STAE PROCESS PROGRESSING STAC
         BO    ASETA                    YES, TAKE BRANCH           STAC
         TM    TCBFLGS+1(TCBREG),X'20'  ABTERM BIT
         BC    7,ARSTR
ASETA    ST    COMREG,TCBCMP(TCBREG)    STORE COMPLETION CODE      STAC
ASET     OI    TCBFLGS+1(TCBREG),X'21'  SET ASYNCHR + ABTERM BIT
         L     SVREG,TCBMSS(TCBREG)          PICK UP ADDR OF BUCKET
         SH    SVREG,EIGHT    ADJUST ADDRESS FOR ABEND SAVE AREA   L00B
         AIF   (&ONETASK EQ 1).SKIPH
         TM    TCBFLGS+1(TCBREG),X'80' SECOND ENTRY                I250
         BZ    SKIPST                  NO-BRANCH                   I250
         ST    COMREG,4(SVREG)         STORE SECOND COMP CODE      I250
SKIPST   EQU   *                                                   I250
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        LM    10,11,IEATCBP           LOAD CONTENTS OF NEW AND OLD.
*
         DC    AL4(IEATCBP)
         ORG   *-4
         DC    X'98AB'
         ORG   *+2
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         CR    PRBREG,TCBREG            IS TCBREG EQ TO OLD
         BC    8,NPOST                  IF YES, SKIP POSTING
         LTR   WKREG,WKREG              IS NEW 0
         BC    8,A1                     IF YES, CHK OLD
         CLC   TCBDSP(1,WKREG),TCBDSP(TCBREG)  PRIORITY OF NEW TO TCBRG
         BC    2,AIO                   IF HI, SKIP
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        ST    TCBREG,IEATCBP          STORE TCBADDR IN NEW
*
AS       DC    AL4(IEATCBP)
         ORG   *-4
         DC    X'50C0'
         ORG   *+2
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         BC    15,AIO                   BRANCH TO IO ROUTINE
A1       CLC   TCBDSP(1,PRBREG),TCBDSP(TCBREG)  OLD TO TCB PRIORITY
         BC    4,AS                     OLD IS LOW
         BC    15,AIO
NPOST    DS    0C
.SKIPH   ANOP
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        MVI   IEA0IO02+1,X'00'         TURN OFF DSEUDO DISABLE SWITCH
*
         DC    AL4(IEA0IO02+1)
         ORG   *-4
         DC    X'9200'
         ORG   *+2
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        TM    SVF+1,X'F0'             IS TYPE I SVC SWITCH ON...     X
*                                                                     X
         DC    AL4(SVF+1)                                             X
         ORG   *-4                                                    X
         DC    X'91F0'                                                X
         ORG   *+2                                                    X
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         BC    8,AIO                   NO. BRANCH TO AIO.
         MVC   SPSW(4,SVREG),SVCOPSW+4 YES. SAVE RIGHT HALF SVC OPSW.
         MVC   SVCOPSW+5(3),ABPSW+1    REPLACE IT WITH ADDR OF ABCON.
********TURN OFF NESTING SWITCH GOES HERE *****************************
         MVI   SVCOPSW+2,X'00'          TURN OFF SVC NESTING SWITCH
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
*        LM    0,1,SVCSAV              RESTORE ORIGINAL REGS 0 AND 1. X
*                                                                     X
         DC    AL4(SVCSAV)                                            X
         ORG   *-4                                                    X
         DC    X'9801'                                                X
         ORG   *+2                                                    X
*XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
         B     LEAV0                    TYPE 1 SVC ONLY          A28408
ARSTR    LR    0,TCBREG            RESTORE TCB ADDRESS
LEAV0    EQU   *                                                 A28408
         LM    10,13,ASAV+40 .          RESTORE WORK REGISTERS   A39387
         BCR   15,RETREG                RETURN TO CALLER
         AIF   (&TRACE EQ 1).SKARH
         AGO   .SKARI
.SKARH   ANOP
*        THE TRACE TABLE WILL BE TURNED OFF IN ABEND             A27771
.SKARI   ANOP
AIO      L     PRBREG,TCBRBP(TCBREG)
         AIF   (&ATT NE 1).SKATT                                   I250
         NI    NONDISP(TCBREG),0                                   I250
         NC    TCBNDFL(3,TCBREG),RMSNDSP RESET ALL 2NDARY ND AD   M0623
*                                        FLGS EXCEPT RMS/SER AD   M0623
         BC    8,TCBDISP                 NO RMS/SER NON-DISP AD   M0623
         OI    NONDISP(TCBREG),X'01'     IND TASK PERM ND    AD   M0623
TCBDISP  EQU   *                                             AD   M0623
NONDISP  EQU   33                                                  I250
TCBNDFL  EQU   173                                                 I250
.SKATT   ANOP                                                      I250
         MVI   XRBWT(PRBREG),X'00'     ZERO RB WAIT COUNT
         MVC   SPSW(4,SVREG),XRBPSW+4(PRBREG)  SAVE RESUME PSW
         MVC   XRBPSW+5(3,PRBREG),ABPSW+1 REPLACE IT WITH ADDR OF ABCON
         BC    15,ARSTR                 BRANCH TO RESTORE REGS
RMSNDSP  DC    X'100000'      MASK USED TO CLEAR ALL BUT THE AD   M0623
*                             RMS/SER SECONDARY NON-DSP FLGS AD   M0623
         DS    0F
ASAV     DC    16F'0'                                            A39387
ABPSW    DC    A(ABCON)
CVTADDR  DC    A(IEACVT)               ADDRESS OF CVT              DAR
EIGHT    DC    H'8'           ABEND SAVE AREA ADJUST CONSTANT      L00B
ABCON    SVC   13
         DROP  ADREG
         AIF   ('&ONETASK' EQ '1').SKIPL
    EJECT                                                         20048
*                                                                 20048
*        EQUATES FOR DUMP APPENDAGES                              20048
*                                                                 20048
R1       EQU   1                                                  20048
R2       EQU   2                                                  20048
R3       EQU   3                                                  20048
R4       EQU   4                                                  20048
R7       EQU   7                                                  20048
R8       EQU   8
R9       EQU   9                                                  20048
R10      EQU   10                                                 20048
R11      EQU   11                                                 20048
R12      EQU   12                                                 20048
R13      EQU   13                                                 20048
R14      EQU   14                                                 20048
R15      EQU   15                                                 20048
X00      EQU   X'00'                                              20048
X01      EQU   1                                                  20048
X02      EQU   X'02'                                              20048
X03      EQU   3                                                  20048
X04      EQU   X'04'                                              20048
X05      EQU   X'05'                                              20048
X06      EQU   X'06'                                              20048
X07      EQU   X'07'                                              20048
X08      EQU   X'08'                                              20048
X10      EQU   X'10'                                              20048
X13      EQU   X'13'                                              20048
X0C      EQU   X'0C'
X0E      EQU   X'0E'                                              20048
X20      EQU   X'20'                                              20048
X28      EQU   X'10'                                              20048
X40      EQU   X'40'                                              20048
X80      EQU   X'80'                                              20048
XF3      EQU   X'F3'                                              20048
XFF      EQU   X'FF'                                              20048
X400     EQU   X'0400'                                            20048
CCOFF    EQU   X'00'                                              20048
NOP      EQU   3                                                  20048
TIC      EQU   X'08'                                              20048
SLI      EQU   X'20'                                              20048
INVSTOFF EQU   X'5F'                                              20048
CCON     EQU   X'80'                                              20048
COMCHAN  EQU   X'40'                                              20048
PCION    EQU   X'08'                                              20048
PCIOFF   EQU   X'F7'                                              20048
REGA     EQU   10                                                 20048
REGB     EQU   11                                                 20048
REGC     EQU   12                                                 20048
REGD     EQU   13                                                 20048
RDSECT   EQU   2                        BASE REG FOR DSECT        20048
RBASE    EQU   15                       BASE REG FOR CE APPENDAGE 20048
WKRGA    EQU   10                       WORK REGISTER             20048
EOFIND   EQU   X'40'                    END OF FILE MASK          20048
EODIND   EQU   X'80'                    END OF DATA MASK          20048
PDIND    EQU   X'08'                   PARTIAL DUMP MASK          20048
PCIIND   EQU   X'08'                    PCI INDICATOR             20048
HDRIND   EQU   X'80'                   HEADER RECORD INDICATOR    20048
CVTPROT  EQU   183                                                20048
PROTECT  EQU   X'80'                                              20048
OPTB     EQU   183                                                20048
DMPTECT  EQU   X'40'                                              20048
* EQUATES FOR TASK DISPATCHABILITY SETTING ROUTINE                20048
CVTHEAD  EQU   X'A0'                                              20048
TCBTCB   EQU   X'74'                                              20048
TCBRG    EQU   4                                                  20048
CVTDAR   EQU   X'48'                                              20048
CVTLOCK  EQU   X'80'                                              20048
TCBDAR   EQU   X'AC'                                              M1338
ALL      EQU   X'FF'                                              20048
TCBNDSVC EQU   X'20'                                              M1338
HDROFF   EQU   X'DF'              MASK TO TURN HDR BIT OFF        20048
NDBIT    EQU   X'01'                                              20048
ABTERM   EQU   52                                                 20048
CSWPTR   EQU   X'40'              CSW ADDRESS PTR
WRITE    EQU   X'1D'
         EJECT                                                    20048
***************************************************************** 20048
*                                                                 20048
* ROUTINE NAME - DMPCEAPP - CHANNEL END APPENDAGE FOR SVC DUMP    20048
*                                                                 20048
* CHANGE LEVEL = 0                                                20048
*                                                                 20048
* FUNCTION:   THE CHANNEL END APPENDAGE IS ENTERED UNDER ONE      20048
*             OF THREE CONDITIONS:                                20048
*                                                                 20048
*             1.  THE CYCLINDER IS FULL AND A NOP WAS EXECUTED.   20048
*                 THIS CONDITION IS NORMAL.                       20048
*                                                                 20048
*             2.  A PCI INTERRUPT WAS LOST AND A NOP WAS EXECUTED 20048
*                 GENERATING A CHANNEL END CONDITION.  THIS IS    20048
*                 IS ABNORMAL BUT RECOVERABLE.                    20048
*                                                                 20048
*             3.  THE ABNORMAL END APPENDAGE REINITIALIZED THE    20048
*                 CHANNEL PROGRAM WITH NO CHAINING OR PCI IN ORDER20048
*                 TO TRY TO RECOVER FROM AN ABNORMAL CONDITION.   20048
*                 THIS IS ABNORMAL BUT RECOVERABLE.               20048
*             (NOTE:  THE CHANNEL END APPENDAGE IS ALSO ENTERED   20048
*                 AFTER THE ABNORMAL END APPENDAGE HAS BEEN       20048
*                 ENTERED AND BEFORE ERPS HAVE RECEIVED CONTROL   20048
*                 FROM IOS.  THIS IS WHY CE APP MUST CHECK CSW    20048
*                 FOR ERROR CONDITIONS AND IF PRESENT, EXIT       20048
*                 TO IOS FOR ERP PROCESSING.)                     20048
*                                                                 20048
*            THE FOLLOWING ACTIONS ARE PREFORMED BY THE APPENDAGE 20048
*                                                                 20048
*             1.  WHEN THE CE APP IS ENTERED DUE TO THE 1ST CASE  20048
*                 ABOVE THEN THE CYCLINDER ADDRESS(CC) IS UPDATED 20048
*                 TO THE NEXT CYCLINDER, THE TRACK ADDRESS(HH) IS 20048
*                 RESET TO ZERO AND THE COUNT AND KEY FIELDS ARE  20048
*                 UPDATED, AS WELL AS THE DATA ADDRESS IN CCW5    20048
*                 (NOTE:  THE CCW CHAIN IS SHOWN IN THE 'TABLES   20048
*                 AND CONTROL BLOCKS' SECTION BELOW.)  THEN       20048
*                 THE CE APP EXITS TO IOS FOR RESTART OF THE      20048
*                 CHANNEL PROGRAM.                                20048
*                                                                 20048
*             2.  IF THE CE APP IS ENTERED DUE TO THE SECOND CASE 20048
*                 THEN THE IOB SEARCH ARGUMENT IS UPDATED TO      20048
*                 SEARCH ON THE LAST RECORD WRITTEN AND RESTART   20048
*                 THE CHANNEL PROGRAM TO REWRITE THE LAST RECORD. 20048
*        (NOTE:  IF THE PCI FROM CCW8 IS LOST, THEN THE RESTART   20048
*                 CCW CHAIN WILL RESTART SUCH THAT THE DATA       20048
*                 ADDRESS WILL BE IN CCW5.)                       20048
*                                                                 20048
*        3.  IF THE CE APP IS ENTERED DUE TO THE THIRD CASE THEN  20048
*                 THE CE APP RETURNS TO IOS.                      20048
*                                                                 20048
         EJECT
*                                                                 20048
* ENTRY POINT NAME - DMPCEAPP.                                    20048
*                                                                 20048
* SVC USAGE - NONE                                                20048
*                                                                 20048
* INPUT - THE FOLLOWING REGISTERS ARE AVAILABLE TO THE APPENDAGE  20048
*         ON ENTRY FROM IOS.                                      20048
*                                                                 20048
*     REGISTER 1 -- ADDRESS OF RQE FOR THE CHANNEL PROGRAM        20048
*                                                                 20048
*     REGISTER 2 -- ADDRESS OF IOB                                20048
*                                                                 20048
*     RESISTER 3 -- ADDRESS OF DEB                                20048
*                                                                 20048
*     REGISTER 4 -- ADDRESS OF DCB                                20048
*                                                                 20048
*     REGISTER 7 -- ADDRESS OF UCB                                20048
*                                                                 20048
*     REGISTER 14 -- RETURN REGISTER                              20048
*                                                                 20048
*     REGISTER 15 -- ADDRESS OF ENTRY POINT TO APPENDAGE          20048
*                                                                 20048
* OUTPUT - NONE                                                   20048
*                                                                 20048
* ENTRY POINTS - DMPCEAPP - NORMAL ENTRY FROM IOS                 20048
*                                                                 20048
* EXIT POINTS:                                                    20048
*                                                                 20048
*               1.  TO IOS FOR RESTARTING CCW CHAIN               20048
*                                                                 20048
*               2.  TO IOS WHEN DUMP IS COMPLETE                  20048
*                                                                 20048
*                                                                 20048
*                                                                 20048
        EJECT
* TABLE AND CONTROL BLOCKS REFERENCED -                           20048
*                                                                 20048
*        1.  IOB                                                  20048
*                                                                 20048
*        2.  DMPDSECT -- SEE DSECT FOR FORMAT                     20048
*                                                                 20048
*        3.  DEB                                                  20048
*                                                                 20048
*        4.  CCW CHAIN:                                           20048
*                                                                 20048
***************************************************************** 20048
*                                                                 20048
*        CCW NO.      COMMAND                 FLAGS     LENGTH    20048
*                                                                 20048
***************************************************************** 20048
*         1            READ HA                 SKP, CC    5       20048
*         2            SRCH ID EQ (MULTI TRK)  CC         5       20048
*         3            TIC TO 2                           1       20048
*         4            WRITE CKD               DC         12      20048
*         5            WRITE CKD               PCI, CC    1024    20048
*         6            NOP/TIC TO 2            SLI        1       20048
*         7            WRITE CKD               DC         12      20048
*         8            WRITE CKD               PCI, CC    1024    20048
*         9            NOP/TIC TO 2 OR 4       SLI        1       20048
***************************************************************** 20048
*                                                                 20048
*                                                                 20048
*  NOTE:  THESE TABLES AND CONTROL BLOCKS ARE REFERENCED BY ALL   20048
*         THREE APPENDAGES                                        20048
*                                                                 20048
                EJECT
*                                                                 20048
*                                                                 20048
* ROUTINE NAME - DMPAEAPP - ABNORMAL END APPENDAGE                20048
*                                                                 20048
* CHANGE LEVEL = 0                                                20048
*                                                                 20048
* FUNCTION      THE ABNORMAL END APPENDAGE IS ENTERED WHEN AN     20048
*               ERROR CONDITION OCCURS.  THE APPENDAGE IS ENTERED 20048
*               PRIOR TO ERP PROCESSING, AND, IF RECOVERY IS      20048
*               UNSUCCESSFUL, FOLLOWING ERP PROCESSING.  THE      20048
*               CHANNEL PROGRAM MUST BE REINITIALIZED TO ALLOW    20048
*               RETRY.                                            20048
*                                                                 20048
*               AT INITIAL ENTRY THE PERMANENT ERROR FLAG IN THE  20048
*               IOB IS CHECKED TO DETERMINE IF AN ERROR HAS BECOME20048
*               PERMANENT.  IF SO, THE APPENDAGE WILL RETURN TO   20048
*               IOS TO WRITE AN EOF RECORD.  THE SVC DUMP MAINLINE20048
*               ROUTINE WILL DETERMINE AN ERROR OCCURED BY TESTING20048
*               THE BITS IN THE CONTROL BLOCKS FOR ERROR INDICATOR20048
*                                                                 20048
*               IF IT IS NOT A PERMANENT ERROR, A TEST IS MADE TO 20048
*               DETERMINE IF CHANNEL DATA CHECK HAS OCCURED.      20048
*               THIS WOULD INDICATE A WRITE FROM INVALID STORAGE. 20048
*               IN THIS CASE, THE CHANNEL PROGRAM IS SET UP TO    20048
*               REWRITE THE FAILING RECORD.  BIT 2 OF THE STORAGE 20048
*               KEY IS SET TO 1 INDICATING INVALID DATA CONTAINED 20048
*               IN THE RECORD. CCW5'S DATA ADDRESS IS SET TO ZERO 20048
*               SO THAT THE FAILING STORAGE IS NOT ACCESSED AGAIN.20048
*               THE CHANNEL PROGRAM IS SET UP TO RESTART BY       20048
*               SETTING THE SEARCH ARGUMENT OF THE LAST RECORD    20048
*               WRITTEN.  RETURN IS TO IOS FOR RESTART.           20048
*                                                                 20048
*               FOR ERROR CONDITIONS OTHER THAN CHANNEL DATA CHECK20048
*               THE FOLLOWING STEPS ARE TAKEN:                    20048
*                                                                 20048
*               1.  SET CCW6 AND CCW9 TO NOP.                     20048
*               2.  SET SEARCH ARGUMENT TO LAST RECORD WRITTEN    20048
*               3.  TURN OFF PCI FLAGS IN CCW5 AND CCW8           20048
*               4.  RESET ANY 'NEXT ADDRESS' CALCULATIONS OF THE  20048
*                   PCI APPENDAGE.  LOGIC WILL REQUIRE CHECKS     20048
*                   TO DETERMINE IF THE ERROR OCCURED AFTER A     20048
*                   PCI AND IN WHICH HALF OF THE CHANNEL PROGRAM  20048
*                   THE ERROR OCCURED.  IF THE ERROR OCCURED      20048
*                   BEFORE THE PCI NO REINITIALIZING OF THE       20048
*                   ADDRESS IS NECESSARY.  IF THE ERROR OCCURED   20048
*                   AFTER THE PCI INTERRUPT, THEN THE ADDRESS     20048
*                   IN THE CHANNEL PROGRAM HAS TO BACKED UP       20048
*                   TO BEFORE THE PCI WAS PROCESSED.              20048
          EJECT
*               5.  IF THE ERROR OCCURS AFTER CCW6, THEN THE NEXT 20048
*                   ADDRESS COMPUTATIONS HAVE TO BE SET UP FOR    20048
*                   USE WITH CCW4 AND CCW5.                       20048
*               6.  RETURN TO IOS FOR ERP PROCESSING              20048
*                                                                 20048
*                                                                 20048
*  ENTRY POINT NAME - DMPAEAPP.                                   20048
*                                                                 20048
*  EXTERNAL REFERENCES - NONE                                     20048
*                                                                 20048
*  SVC USAGE - NONE                                               20048
*                                                                 20048
*  INPUT - SAME AS CHANNEL END APPENDAGE                          20048
*                                                                 20048
*  OUTPUT - NONE
*                                                                 20048
*  EXITS - 1.   TO IOS FOR RESTART                                20048
*                                                                 20048
*          2.   TO IOS TO WRITE EOF RECORD AFTER PERMENATE ERROR  20048
*                                                                 20048
*  TABLES AND CONTROL BLOCKS - SAME AS FOR CE APP                 20048
*                                                                 20048
*                                                                 20048
***************************************************************** 20048
      EJECT
*                                                                 20048
***************************************************************** 20048
*                                                                 20048
*                                                                 20048
* ROUTINE NAME - DMPPCIAP - PROGRAM CONTROLLED INTERRUPT APPENDAGE20048
*                                                                 20048
* CHANGE LEVEL = 0                                                20048
*                                                                 20048
* FUNCTION:     ON INITIAL ENTRY TO THE PCI APPENDAGE CCW6        20048
*               AND CCW9 ARE SET TO NOP AND THE COMMAND CHAIN BIT 20048
*               IN CCW6 IS TURNED OFF.  THE PCI APPENDAGE WILL    20048
*               UPDATE THE COUNT AND KEY FIELD LOCATED IN THE     20048
*               CONTROL BLOCK COMPLEX AND WILL ADJUST CCW DATA    20048
*               ADDRESSES TO WRITE THE NEXT BLOCK OF STORAGE.     20048
*                                                                 20048
*               IF THE PCI WAS GENERATED AT CCW5, THE PCI BIT IN  20048
*               CCW5 WILL BE TURNED OFF.  CCW6 WILL HAVE THE      20048
*               COMMAND CHAIN BIT TURNED ON IF ANOTHER BLOCK WILL 20048
*               FIT ON THE SAME TRACK.  THE HEAD NUMBER WILL BE   20048
*               INCREMENTED AND CCW6 WILL BE SET TO TIC IF THE    20048
*               LAST BLOCK ON THE LAST TRACK HAS BEEN WRITTEN.    20048
*               PCI IS TURNED ON IN CCW8.  THE NOP AND COMMAND    20048
*               CHAIN BIT OFF CONDITION WILL BE LEFT IN AFFECT    20048
*               IF THE LAST BLOCK ON THE LAST TRACK HAS BEEN      20048
*               WRITTEN.                                          20048
*                                                                 20048
*               IF THE PCI WAS GENERATED AT CCW8, THE PCI BIT IS  20048
*               TURNED OFF IN CCW8 AND CCW9 WILL BE SET TO TIC TO 20048
*               CCW4 IF ANOTHER BLOCK WILL FIT ON THE SAME TRACK. 20048
*               THE PCI BIT IN CCW5 WILL BE TURNED ON.  IF THE    20048
*               TRACK IF FULL, THE HEAD NUMBER IS INCREMENTED, AND20048
*               CCW9 WILL TIC TO CCW2.  IF THE CYLINDER IS FULL,  20048
*               THE NOP IS LEFT IN EFFECT.                        20048
*                                                                 20048
*               THE PCI APPENDAGE PERFORMS 'NEXT ADDRESS'         20048
*               DETERMINATION AFTER RESETTING THE CHANNEL PROGRAM 20048
*               DASD EXTENTS WILL BE VALIDATED TO ENSURE THAT     20048
*               ANOTHER WRITE WILL NOT VIOLATE EXTENTS.  IN AN    20048
*               MP SYSTEM, FSSEMAP IS CHECKED TO ENSURE THAT      20048
*               STORAGE TO BE DISPLAYED IS ON-LINE.  IF NOT ON-   20048
*               LINE, 256K IS BYPASSED.  ALL CALCULATED VALUES    20048
*               ARE SAVED FOR THE NEXT PCI ENTRY.                 20048
*                                                                 20048
* ENTRY POINT NAME  -  DMPPCIAP                                   20048
*                                                                 20048
*  EXTERNAL REFERENCES - NONE                                     20048
*                                                                 20048
*  SVC USAGE - NONE                                               20048
*                                                                 20048
*  INPUT - SAME AS CHANNEL END APPENDAGE                          20048
*                                                                 20048
*  OUTPUT - NONE                                                  20048
*                                                                 20048
*  EXITS - 1.   TO IOS FOR RESTART                                20048
*                                                                 20048
*  TABLES AND CONTROL BLOCKS - SAME AS FOR CE APP                 20048
*                                                                 20048
*                                                                 20048
***************************************************************** 20048
         EJECT
*                                                                 20048
*        APPENDAGES FOR DUMP SVC                                  20048
*                                                                 20048
         ENTRY DMPCEAPP                                           20048
         ENTRY DMPAEAPP                                           20048
         ENTRY DMPPCIAP                                           20048
*                                                                 20048
DMPCEAPP DS    0H                                                 20048
         USING DMPIOB,RDSECT                                      20048
         USING *,RBASE                                            20048
         USING DEBSECT,R3          DEB DSECT                      20048
         TM    DMPIOBCS+X03,XF3   TEST FOR ERROR CONDITION        20048
         BCR   X05,RETREG         RETURN IF ERROR CONDITIONS AD  A49311
         TM    DMPIOBCS+X04,X'7F' .TEST FOR ERROR              @PD66507
         BCR   X05,RETREG         RETURN IF ERROR CONDITIONS AD  A49311
         TM    DMPFLAG2,X'40' .    IF 3330 NO-PCI              @PD64143
         BZ    DMPCEAP2 .          PROCESS MODE,               @PD64143
         STM   R14,R15,NOPCISR .   GO PERFORM PSEUDO           @PD64143
         LA    R15,DMPPCIAP .      PCI PROCESSING              @PD64143
         BAL   R14,DMPPCIA2-DMPPCIAP(,R15) NOW                 @PD64143
         LM    R14,R15,NOPCISR-*(R14) RELOAD REGS              @PD64143
DMPCEAP2 EQU   *                   .                           @PD64143
         TM    DMPFLAG,EODIND           TEST FOR END OF DATA      20048
         BO    EODNORM                  IF ON, GO WRITE EOF RCD   20048
         TM    DMPCCWF5,PCIIND          TEST PCI BIT IN CCW5      20048
         BO    X08(RETREG)              RETURN TO IOS
         TM    DMPCCWF8,PCIIND        TEST PCI BIT ON IN CCW8     20048
         BO    X08(RETREG)              RETURN TO IOS
         L     R10,DMPTICCW       GET PTR TO NEXT CCW
         LA    R10,X00(R10)       CLEAR HIGH BYTE
         LA    R11,DMPCCW4         SET UP DSECT FOR USE
         CR    R10,R11            TEST FOR WHICH CCW CHAIN
         BNE   DMPCEAND           OK CONDITION
         LA    R11,DMPCCW7         SET UP DSECT FOR USE
DMPCEAND EQU   *
         ST    R11,DMPTICCW       SAVE NEXT CCW CHAIN
         MVI   DMPTICCW,TIC       MAKE CCW  A   TIC
         USING DMPCCWX,R11
         OI    DMPCCWB+X04,PCION+COMCHAN    TURN PCI FLAG ON
         TM    DMPFLAG2,X80        TEST FOR PCI IN CONTROL FIRST
         BNO   DMPCRND            PCI DID NOT UPDATE CCHHR
         NI    DMPFLAG2,X'7F'      TURN OFF FLAG
         L     R12,DMPCCWA        GET PTR TO KEY AREA
         BAL   R13,DMPUPDAT       GO BACK UP IOB SRCH ID
         MVC   DMPCCWB+X01(3),DMPADSAV+X01    MOVE DATA FIELD     20048
         MVI   DMPCCWC,NOP    NOP ENDING CCW
         B     PCINOT8            DO NOT UPDATE CCHHR
DMPCRND  EQU   *
         BAL   REGD,DMPINGRE      GO TO UPDATE ROUTINE            20048
         SR    R9,R9              ZERO IOS REGISTER
         TM    DMPFLAG,X'90'      TEST FOR END OF DUMP            20048
         BO    EODNORM            GO WRITE EOF RECORD             20048
         L     R11,DMPTICCW       GET NEXT CCW CHAIN
         L     R9,X00(R11)        PICK UP KEY AREA
         MVC   DMPCCWB+X01(3),DMPADSAV+X01    MOVE DATA FIELD     20048
         BAL   R13,DMPCICON       GO TO SUBROUTINE FOR STOR KEY
         BAL   R13,DMPCERTN       GO TO TRK SETUP RTN
         B     EODS                    IF END,BRANCH              20048
         B     PCINOT8           UPDATE CYCLINDER ADDR
         B     PCINOT8           UPDATE CYCLINDER ADDR
PCINOT8  BAL   R13,DMPSWTCH       GO TO ADDR SWITCH RTN
         B     8(RETREG)               RETURN                     20048
NOPCISR  DC    2A(0) .             REGISTER SAVE AREA          @PD64143
         DROP  R11
         DROP  RBASE
         EJECT                                                    20048
DMPAEAPP DS    0H                                                 20048
         USING *,RBASE                  SET UP APP BASE           20048
         USING DMPCCWX,R10
         TM    DMPIOBEC,X'7F'          TEST FOR PERM IO ERROR     20048
         BC    14,TSTHDR               IF SO,BRANCH               20048
         LA    R10,DMPCCW4             LOAD ADDRESS OF CCW4       20048
         L     R11,DMPIOBF3            LOAD 1ST 3 BYTES OF CSW    20048
         LA    R11,X00(R11)       CLEAR HIGH BYTE
         CLR   R11,R10                  CHECK FOR CCW 4&5 OR 8&9  20048
         BH    GTCCW4             PROBLEM IS NOT A SRCH OR READ HA
         L     R10,DMPTICCW       GET PTR TO CURRENT CHAIN
         NI    DMPCCWB+X04,PCIOFF  TURN PCI BIT OFF
         BR    R14                RETURN TO IOS             AD   A49311
GTCCW4   EQU   *
         LA    R10,DMPCCW7             LOAD ADDRESS OF CCW7       20048
         CLR   R11,R10                  CHECK FOR CCW 4&5 OR 8&9  20048
         BH    CCW8                     IF 8OR 9,BRANCH           20048
         LA    R10,DMPCCW4        SET UP FOR DSECTS
         LA    R11,DMPCCW7        SET UP FOR DSECTS
         B     NOTHDR                   IF NOT BRANCH             20048
CCW8     EQU   *
         LA    R11,DMPCCW4
NOTHDR   EQU   *
         TM    DMPFLAG2,X80       DID PCI UPDATE FOR CYL END
         BO    SEPARATE           IF SO PROCESS DIFFERENTLY
         TM    DMPCCWB+X04,PCIIND  TEST IF PCI ON
         BNO   RESTART
         NI    DMPCCWB+X04,PCIOFF  TURN PCI BIT OFF
CHDATACK EQU   *
         TM    DMPIOBCS+X04,X08  TEST FOR CHANNEL DATA CHECK
         BCR   14,R14             RETURN TO IOS             AD   A49311
         TM    DMPFLAG,HDRIND     TEST FOR HEADER RECORD
         BCR   1,R14              RETURN TO IOS IF HDR RCD  AD   A49311
         L     R12,X00(R10)       GET CORRECT KEY AREA
         USING DMPWRWD,R12
         OI    DMPFLGKY,X20       SET INVALID STORAGE BIT
         DROP   R12
         SR    R12,R12            ZERO WORK REG
         ST    R12,DMPCCWB        STORE ADDRESS FOR WRITE
         MVI   DMPCCWB,WRITE      MAKE CCW A WRITE
         B     X08(R14)           RETURN TO IOS
RESTART  EQU   *
         OI    DMPFLAG2,X80       TURN ON UPDATE BIT FOR CE APP
         ST    R10,DMPTICCW       SAVE  NEXT CCW CHAIN PTR
         NI    X0C(R11),PCIOFF    TURN PCI OFF IN NEXT CCW
         BAL   R13,DMPSWTCH       SWITCH PTRS FOR RESTART
SEPARATE EQU   *
         L     R12,DMPCCWA        GET PTR TO KEY AREA
         BAL   R13,DMPUPDAT       GO TO PCI CONTROL ROUT
         MVI   DMPCCWC,NOP        INSURE THAT CE APP GETS CONTROL
         B     CHDATACK           FINISH REST OF PROCESSING
         DROP  R10
TSTHDR   EQU   *
         L     R10,DMPTICCW       PICK UP CURRENT CHAIN
         L     R11,X00(R10)       PICK UP CURRENT KEY
         USING DMPWRWD,R11
         OI    DMPFLAG,X08+X80    SET PARTIAL DUMP FLAG AND EOD
         TM    DMPFLGKY,HDRIND    TEST FOR HDR RECORD
         BCR   X01,R14            RETURN TO IOS
         OI    DMPFLAG,X08        SET PARTIAL DUMP FLAG ON
         DROP  R11
         DROP  RBASE
EODNORM  EQU   *                                                  20048
         BALR  R10,X00            ESTABLISH ADDRESSIBILITY        20048
         USING *,R10                                              20048
         LA    R11,DMPDCB         GET ADDRESS OF SYS1.DUMP DCB    20048
         LA    R4,X00(R4)         CLEAR HIGH BYTE OF DCB REG      20048
         CR    R11,R4             COMPARE TO DUMPING DCB          20048
         BCR   X07,R14            RETURN IF NOT SYS1.DUMB DCB     20048
         L     R11,DMPTICCW       GET CURRENT CHAIN PTR
         TM    DMPFLAG,X08        TEST FOR COMING FROM AE APP
         BO    DMPEODAD           COMING FROM AE APP
         L     R9,X00(R11)        SET UP FOR NEXT ROUTINE
         MVI   DMPTICCW,TIC       SET UP TIC COMMAND CODE
         CLI   X13(R7),X08        IS THE DUMPING DEVICE=2314?     20048
         BNE   EODNRMA            NO, GO TO WRITE EOF             20048
*        THIS CODE IS NEEDED WHEN  THERE IS NOT ENOUGH ROOM LEFT  20048
*        ON A 2314 TRACK TO WRITE AN EOF RECORD (WHEN SIX RECORDS 20048
*        HAVE BEEN WRITTEN).  SHOULD SIX RECORDS BE WRITTEN THEN  20048
*        WE MUST UPDATE CCHHR TO THE NEXT TRACK OR CYLINDER WHERE 20048
*        APPROPIATE.                                              20048
         BAL   R13,DMPCERTN       GO TO UPDATE RTN
         B     EODS
         B     EOFNRMB            GO FINISH EOF HANDLING
         B     EOFNRMB            GO FINISH EOF HANDLING
EOFNRMB  EQU   *
         L     R11,DMPTICCW       PICK UP CURRENT CHAIN PTR
         L     R9,X00(R11)        GET CURRENT KEY AREA
         B     EODNRMB            GO FINISH EOF HANDLING
         EJECT
         USING DMPWRWD,R9
EODNRMA  IC    R11,DMPRID         PICK UP RCD NO. IN KEY          20048
         LA    R11,X01(R11)       INCREMENT RCD NO.               20048
         STC   R11,DMPRID         STORE RCD NO. INTO IOB          20048
         LA    R11,X01(R11)       INCREMENT RCD NO.               20048
         STC   R11,DMPR           STORE RCD NO. INTO KEY          20048
         B     EODNRMB            GO FINISH EOF HANDLING
DMPEODAD EQU   *
         L     R9,X00(R11)        SET UP FOR NEXT ROUTINE
EODNRMB  EQU   *                                                  20048
         LA    R11,DMPAPPAD       GET ADDR OF NOP INSTR           20048
         ST    R11,DEBAPPAD       STORE ADDR INTO DEB             20048
         XC    DMPKEYL(X03),DMPKEYL  CLEAR FIELD FOR EOF RECORD   20048
         MVI   DMPCCW4+X04,SLI    TURN ON SILLY BIT               20048
         OI    DMPFLAG,X80        SET END OF DUMP FLAG            20048
         SR    R9,R9              CLEAR IOS REGISTER
         B     X08(R14)           RETURN TO IOS                   20048
EODS     OI    DMPFLAG,EOFIND+PDIND     SET EOF & PART DMP INDIC  20048
         BR    R14                     RETURN TO IOS              20048
         DROP  R9
         DROP  R10
         EJECT
DMPPCIAP EQU   *                                                  20048
         USING *,R15                                              20048
         TM    DMPFLAG2,X'40' .    IF 3330 NO-PCI              @PD64143
         BCR   1,R14 .             WANTED THEN RETURN          @PD64143
DMPPCIA2 EQU   * .                 PSEUDO PCI ENTRY            @PD64143
*                                  FOR NON-PCI 3330            @PD64143
*                                  PROCESSING                  @PD64143
         L     R12,CSWPTR         GET PTR TO CURRENT CCW
         LA    R12,X00(R12)       ZERO HIGH ORDER BYTE
         L     R13,DMPAPTR1       GET PTR TO NOP CCW
         CR    R12,R13            TEST TO SEE IF NORMAL PCI
         BE    DMPNOPCI           IF EQUAL BRANCH TO NORMAL PROCESSING
         LA    R13,X08(R13)       SEE IF NOP WAS EXECUTED
         CR    R12,R13            TEST FOR NOP
         BE    DMPNOPCI           HANDLE AS NORMAL PCI PROCESSING
         BR    R14                HANDLE PCI AS NOP CONDITION
DMPNOPCI EQU   *
         BAL   R13,DMPINGRE       GO TO RTN TO INCREMENT ADDRSAVE 20048
         SR    R9,R9              CLEAR IOS REGISTER
         TM    DMPFLAG,X'90'      TEST FOR END OF DUMP            20048
         BNO   DMPNOVR
         NI    DMPCCWF8,PCIOFF                                    20048
         NI    DMPCCWF5,PCIOFF    TURN PCI FLAG OFF IF ON         20048
         BR    R14                RETURN TO IOS
DMPNOVR  EQU   *
         TM    DMPCCWF5,PCION     IS THE PCI FLAG ON IN CCW5      20048
         LA    R9,DMPCC2          SET UP DSECT
         BO    DMPCIONW           TAKE THIS BRANCH IF PCI  ON     20048
         LA    R9,DMPCC1          SET UP DSECT
DMPCIONW EQU   *
         BAL   R13,DMPCICON       GO TO STORAGE KEY RTN
         LA    R10,DMPCCW7        GET ADDR OF CCW CHAIN TO WORK   20048
         USING DMPCCWX,R10                                        20048
         LA    R12,DMPCCW6        SET UP FOR LATER USE            20048
         TM    DMPCCWF5,PCION     IS THE PCI FLAG ON IN CCW5      20048
         BO    DMPPCION           TAKE THIS BRANCH IF PCI  ON     20048
         NI    DMPFLAG,HDROFF     SET HDR RECORD INDIC OFF        20048
         LA    R10,DMPCCW4        IF CCW8 WAS THE PCI THEN THIS   20048
*                                 CODE IS USED TO SET UP DSECT    20048
         LA    R12,DMPCCW9        SAVE FOR LATER USE              20048
         NI    DMPCCWF8,PCIOFF                                    20048
DMPPCION EQU   *                                                  20048
         NI    DMPCCWF5,PCIOFF    TURN PCI FLAG OFF IF ON         20048
         BAL   R13,DMPCERTN       GO TO TRK SETUP RTN
         B     X00(R14)           RETURN TO IOS
         B     DMPPCIAB           END OF TRACK SITUATION
         B     DMPCEND           END OF CYCL SITUATION
         B     DMPCIFIX           NORMAL
DMPCEND  EQU   *
         OI    DMPFLAG2,X80        SET ON BIT TO TELL CE THAT
*                                    PCI UPDATED CCHHR FOR EOC
         BR    R14                RETURN TO IOS
DMPPCIAB EQU   *
         LA    R11,DMPCCW2        SET UP FOR TC TO SEARCH         20048
         ST    R11,0(R12)         SAVE CCW2 ADDR IN APPR CCW      20048
         B     DMPCIOVR           BRANCH AROUND STORE
DMPCIFIX EQU   *
         ST    R10,X00(R12)       SAVE PTR TO NEXT CHAIN
DMPCIOVR EQU   *
         ST    R10,DMPTICCW       SAVE NEXT CCW CHAIN
         OI    DMPCCWB+4,PCION+COMCHAN                            20048
         MVC   DMPCCWB+1(3),DMPADSAV+1                            20048
         MVI   DMPCCWC,NOP        SET NEXT CCW TO A NOP
         MVI   X00(R12),TIC       TIC TO NEXT
         BAL   R13,DMPSWTCH       GO TO SWITCH NEXT AND CURRENT
         BR    R14                                                20048
         DROP  R3
         DROP  R10
DMPINGRE EQU   *                                                  20048
         BALR  R9,0               SET UP ADDRESABILITY            20048
         USING *,R9                                               20048
         LM    R10,R11,DMPADSAV   PICK UP CURR ADDR AND END ADDR  20048
         LA    R10,X400(R10)      INCREMENT BY 1K                 20048
         CR    R10,R11            IS THIS THE END OF DUMP         20048
         ST    R10,DMPADSAV       SAVE NEW ADDR                   20048
         BCR   4,R13              RETURN IF NOT END OF DUMP       20048
         TM    DMPFLAG,X01        IS THIS A LIST REQUEST
         BO    DMPLIST            CONT AS LIST REQUEST
DMPAOVER OI    DMPFLAG,X'90'           SET EOD AND SUCCESS BITS   20048
         BR    R13                RETURN TO MAINLINE              20048
DMPLIST  EQU   *                                                  20048
         L     R12,DMPPLSTP       GET STORAGE LIST POINTER        20048
DMPLISTN EQU   *                                                  20048
         TM    4(R12),X'80'      IS THIS END OF LIST              20048
         BO    DMPAOVER           END OF DUMP EXIT                20048
         LA    R12,8(R12)         UPDATE TO NEXT ENTRIES          20048
         TM    0(R12),X'40' .      IS THIS ENTRY VALID         @PD61924
         BO    DMPLISTN           NO, SEE IF END OF LIST          20048
         ST    R12,DMPPLSTP       SAVE PRESENT PTR TO STOR. LIST  20048
         LM    R10,R11,0(R12)     PICK UP NEW START/STOP ADDRESS  20048
         STM   R10,R11,DMPADSAV   STORE NEW START/STOP ADDRESSES  20048
         MVI   DMPEND,00 .         CLEAR POSSIBLE              @PD61924
*                                  'END-OF-LIST' INDICATOR     @PD61924
         SR    R9,R9              ZERO IOS REGISTER               20048
         BR    R13                     RETURN TO CALLER           20048
         DROP  R9                                                 20048
         EJECT                                                    20048
DMPCERTN EQU   *
         USING DEBSECT,R3                                         20048
         USING DMPWRWD,R9
         ST    R8,DMPASAV2        SAVE IOS REGISTER
         BALR  R8,X00             ESTABLISH BASE
         USING *,R8
         SR    R11,R11            ZERO WORK REGISTER         AD  A51118
         CLC   DMPRID(1),DMPDINFO   IS THIS END OF TRACK          20048
         BNL   DMPCERT1           YES, TEST FOR END OF CYCLINDER  20048
         MVC   DMPCC(X04),DMPCCID RESTORE CCHH TO KEY
         IC    R11,DMPRID         GET NO. OF RECORD JUST WRITTEN  20048
         LA    R11,1(R11)         INCREMENT BY ONE                20048
         STC   R11,DMPRID         SAVE RECORD NO. IN SEARCH FIELD 20048
         LA    R11,1(R11)         INCREMENT BY ONE                20048
         STC   R11,DMPR           SAVE NEW RECORD NO. IN KEY FLD  20048
         L     R8,DMPASAV2        RESTORE IOS REGISTER
         SR    R9,R9              ZERO IOS REGISTER
         B     X0C(R13)           RETURN TO MAINLINE
DMPCERT1 EQU   *
         CLC   DMPHHID+1,DMPDINFO+1     CYLINDER FULL?            20048
         BNL   CYCFULL                  IF SO,BRANCH              20048
         IC    R11,DMPHHID+1      SET UP TO INCREMENT HEAD        20048
         LA    R11,1(R11)         INCREMENT BY ONE                20048
         STC   R11,DMPHH+1        STORE INT KEY                   20048
         STC   R11,DMPHHID+1      STORE INTO SEARCH ID            20048
CYCTEST1 CLC   DMPCCID(4),DEBENDCC   TEST FOR END OF EXTENT       20048
         BH    CYCENDDP .         RETURN TO MAINLAIN         AD  A54862
CYCTEST2 MVI   DMPRID,X00         ZERO RCD NO. IN SEARCH ID       20048
         MVI   DMPR,X01           SET RCD NO IN KEY               20048
         L     R8,DMPASAV2        RESTORE IOS REGISTER
         SR    R9,R9              ZERO IOS REGISTER
         B     X04(R13)                IF END,BRANCH              20048
CYCFULL  EQU   * .                                           AD  A51118
         IC    R11,DMPCCID .      GET 1ST HALF OF CYL ADDR   AD  A51118
         SLL   R11,8 .            PREPARE TO GET REMAINDER   AD  A51118
         IC    R11,DMPCCID+1 .    COMPLETE CYL ADDR          AD  A51118
         LA    R11,X01(R11) .     INCREMENT BY 1             AD  A51118
         STH   R11,DMPCC .        UPDATE CYL ADDR FOR NXT WR AD  A51118
         MVC   DMPCCID(X02),DMPCC . UPDATE CYL ADDR IN       AD  A51118
*                                 SEARCH ARGUMENT            AD  A51118
         NI    DMPHH+1,X'00'           SET HH TO 0                20048
         NI    DMPHHID+1,X'00'         SET HH TO 0                20048
         CLC   DMPCCID(4),DEBENDCC   TEST FOR END OF EXTENT       20048
         BH    CYCENDDP           RETURN TO MAINLAIN         AD  A60156
         LA    R13,X04(R13)   THIS MAKES A RETURN OF 8 INSTEAD OF 4
         B     CYCTEST2           TEST FOR END OF EXTENT
CYCENDDP EQU   *
         L     R8,DMPASAV2        RESTORE IOS REGISTER
         SR    R9,R9              ZERO IOS REGISTER
         BR    R13                RETURN TO MAINLINE
         DROP  R8
         EJECT                                                    20048
DMPCICON EQU   *                                                  20048
         ST    R8,DMPASAV2        SAVE IOS REGISTER
         BALR  R8,X00             ESTABLISH ADDRESSABILITY
         USING *,R8
         SR    R12,R12            ZERO WORK REGISTER              20048
         L     R11,X10            GET ADDR OF CVT                 20048
         TM    OPTB(R11),PROTECT  IS PROTECTION IN SYSTEM         20048
         BO    DMPPROT            YES, GO TO GET STORAGE KEY      20048
         LA    R12,DMPTECT        SET UP FOR NO STOR KEY          20048
         B     DMPASPRO           GO STORE INTO KEY               20048
DMPPROT  EQU   *                                                  20048
         ISK   R12,R10            GET STOR KEY OF ADDR TO DUMP    20048
         SRL   R12,X03            MOVE TO  POSITION FOR STORING   20048
DMPASPRO EQU   *
         ST    R10,DMPFLGKY       STORE ADDR INTO KEY FIELD
         STC   R12,DMPFLGKY       STORE PROTECT KEY
         L     R8,DMPASAV2        RESTORE IOS REGISTER
         BR    R13                RETURN
         DROP  R9
         DROP  R8
DMPSWTCH EQU   *
         L     R11,DMPAPTR1       GET CURRENT PTR
         L     R12,DMPAPTR2       GET NEXT PTR
         ST    R11,DMPAPTR2       MAKE CURRENT NEXT
         ST    R12,DMPAPTR1       MAKE NEXT CURRENT
         MVI   DMPTICCW,TIC       TIC TO NEXT
         BR    R13                RETURN
*
DMPUPDAT EQU   *
         USING DMPWRWD,R12
         MVC   DMPCCID(X04),DMPCC MOVE LAST KEY TO SRCH ID
         IC    R9,DMPR           PICK UP LAST RCD
         BCTR  R9,X00            DECREMENT BY ONE
         STC   R9,DMPRID         STORE IN SEARCH ARGUMENT
         SR    R9,R9              ZERO IOS REGISTER
         BR    R13                RETURN TO MAINLAIN
         DROP  R12
         EJECT                                                    20048
* THIS ROUTINE IS ENTERED FROM BOTH LOADS OF SVC DUMP AND         20048
* AND TO TURN OFF THE TRACE OPTION (OR TURN ON THE OPTION)        20048
* IF THE TRACING FACILITY IS INCLUDED                             20048
         DS    0H                                                 20048
TASKW    EQU   *                                                  20048
         USING *,R11                                              20048
         L     R1,CMTCB                 GET COMMM TASK ADDR       20048
         L     R9,ERRTSK                GET ERROR PROC ADDR       20048
         L     R10,CVTHEAD(R3)          TOP TASK ADDR             20048
NOTPRIM  EQU   *                                                  20048
         L     R10,TCBTCB(R10)          GET NEXT TASK ADDR        20048
         CR    R10,TCBRG                THIS CURRENT TASK         20048
         BE    NOTPRIM                  YES - SKIP                20048
         LTR   R10,R10                  NO MORE TASKS             20048
         BZ    TRACE                    YES - BRANCH              20048
         CR    R10,R1                   THIS COM TASK             20048
         BE    NOTPRIM                  YES - SKIP                20048
         CR    R10,R9                   ERR PROC TASK             20048
         BE    NOTPRIM                  YES - SKIP                20048
         TM    CVTDAR(R3),CVTLOCK       SETTING ND                20048
         BO    SETNON                   YES - BRANCH              20048
         NI    TCBDAR+X02(R10),ALL-TCBNDSVC  SET SECOND BIT       20048
         NC    TCBDAR+X01(3,R10),TCBDAR+X01(R10) STILL ND         20048
         BNZ   NOTPRIM                  YES - BRANCH              20048
         NI    TCBFLGS+5(R10),ALL-NDBIT   TURN OFF PRIM ND        20048
         B     NOTPRIM                  GET NEXT TASK             20048
SETNON   OI    TCBDAR+X02(R10),TCBNDSVC SET SECONDARY ND BIT      20048
         OI    TCBFLGS+5(R10),NDBIT     SET PRIMARY ND BIT        20048
         B     NOTPRIM                  GET NEXT TASK             20048
TRACE    EQU   *                                                  20048
         AIF   (&ONETASK NE 0).NGTF
*                                                                 21014
*  THE FOLLOWING CODE WILL DETERMINE WHETHER GTF IS TO BE         21014
*  SUSPENDED OR RESUMED AND TAKE THE APPROPRIATE ACTION.          21014
*                                                                 21014
         L     CVTREG,CVTPTR .    GET CVT POINTER                 21014
         TM    CVTGTFST(CVTREG),CVTGTFS . Q - IS GTF ACTIVE       21014
         BNO   NOGTF .            NO-SKIP THIS CODE               21014
         TM    CVTGTFST(CVTREG),CVTFORM . Q - IS FORMAT REQUESTED 21014
         BCR   D7,R7 .            NO-RETURN TO CALLER             21014
         TM    CVTDAR(3),CVTLOCK .Q - SVCDUMP FINISHED            21014
         BNO   GTFON                    YES-GO ENABLE GTF     AB A65775
*  THIS SECTION SUSPENDS GTF TRACE AT START OF SVCDUMP            21014
         TM    TCBFLGS+1(R10),TCBGTOFM . Q - GTF SUSPENDED    AD A53006
         BCR   1,R7 .             YES-RETURN TO CALLER       AB  A60174
         OI    TCBFLGS+1(R10),TCBGTOFM . FLAG GTF DISABLED    AD A53006
         HOOK  EID=IHLMSVOF .     SUSPEND GTF                     21014
         BR    R7 .               RETURN                          21014
*  THIS SECTION WILL RESUME GTF TRACE AT COMPLETION OF SVCDUMP    21014
GTFON    TM    TCBFLGS+1(R10),TCBGTOFM . Q - GTF SUSPENDED    AD A53006
         BCR   8,R7 .             NO-RETURN                  AB  A60174
         NI    TCBFLGS+1(R10),ALL-TCBGTOFM . FLAG GTF RESUMED AD A53006
         HOOK  EID=IHLMSVON .     RESUME TRACE                    21014
         BR    R7 .               RETURN                          21014
CVTREG   EQU   3                                                  21014
CVTGTFST EQU   X'EC'                                              21016
TCBGTOFM EQU   X'10' .                                            21014
CVTGTFS  EQU   X'C0' .                                            21014
CVTFORM  EQU   X'08' .                                            21014
CVTPTR   EQU   16 .                                               21014
D7       EQU   7 .                                                21014
D8       EQU   8 .                                                21014
NOGTF    EQU   *                                                  21014
*****                                                       ***** 21014
*****          END OF GTF MODIFICATIONS                           21014
*****                                                      *****  21014
.NGTF    ANOP
         AIF   (&TRACE NE 1).DMP1                                 20048
.DMP2    ANOP                                                     20048
         TM    CVTDAR(R3),CVTLOCK       TRACE OFF                 20048
         L     R1,ABTERM(R3)            GET CVTBTERM              20048
         L     R1,24(R1)                GET PTR TO TRNOP          20048
         BNO   TOFF                     YES - BRANCH              20048
         OI    1(R1),X'F0'              TURN OFF TRACE            20048
         BR    R7                       RETURN TO SVC DUMP        20048
TOFF     EQU   *                                                  20048
         NI    1(R1),X'0F'              TURN ON TRACE             20048
.DMP1    ANOP                                                     20048
         BR    R7                       RETURN TO SVC DUMP        20048
         DS    0F                                                 20048
CMTCB    DC    V(IEACMTCB)              COM TASK TCB ADDR         20048
         AIF   (&ATT EQ 1).YESSE                                  20048
ERRTSK   DC    F'0'                     NO SYS ERR W/O ATTACH     20048
         AGO   .FRED                                              20048
.YESSE   ANOP                                                     20048
ERRTSK   DC    A(IEASETCB)              SYS ERR TCB ADDR          20048
.FRED    ANOP                                                     20048
         EJECT                                                    20048
         SCBDUMP                                                  20048
DEBSECT  DSECT                                                    20048
DEBTCB   DS    CL4                 ADDRESS OF TCB                 20048
DEBLINK  DS    CL4                 ADDR OF PREV. DEB              20048
         DS    CL4                                                20048
DEBFLGS  DS    CL1                                                20048
         DS    CL3                                                20048
         DS    CL4                                                20048
DEBPRIOR DS    CL1                 PRIORITY                       20048
         DS    CL3                                                20048
DEBDCB   DS    CL4                 ADDRESS OF DCB                 20048
DEBAPPAD DS    CL4                 ADDR OF I/O APPEND TABLE       20048
         DS    CL2                                                20048
DEBUCBAD DS    CL2                                                20048
DEBBIBUM DS    CL2                 BIN NUMBER                     20048
DEBSTRCC DS    CL2                 START  CYL ADDR                20048
DEBSTRHH DS    CL2                 START TRACK ADDR               20048
DEBENDCC DS    CL2                 END CYL ADDR                   20048
DEBENDHH DS    CL2                 END TRACK ADDR                 20048
DEBNOTRK DS    CL2                 NUMBER OF TRACKS ALLOC.        20048
*
DMPCCWX  DSECT                                                    20048
DMPCCWA  DS   D                                                   20048
DMPCCWB  DS   D                                                   20048
DMPCCWC  DS    D
*
*
DMPWRWD  DSECT
DMPCC    DS    2X                      CC CYLINDER
DMPHH    DS    2X                      HH HEAD
DMPR     DS    1X                      R  RECORD
DMPKEYL  DC    X'04'                   KEY LENGTH
DMPDATAL DC    X'0400'                 DATA LENGTH
DMPFLGKY DS    1X                      FLAG KEY
DMPADDKY DS    3X                      ADD KEY
.SKIPL   ANOP                                                     20048
         MEND
