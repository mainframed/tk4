         MACRO
         IGFASRN1   &MFTASR,&M65MP,&MCSASR                          MCS
IGFNUC00 CSECT
         EJECT
* MACRO NAME.. IGFASRN1  (MCH RESIDENT NUCLEUS)
*
*
* FUNCTIONS...
*    THE MCH RESIDENT NUCLEUS SERVES AS THE CONTROL PROGRAM FOR THE
*    TOTAL MCH OPERATION.  ITS MAJOR FUNCTIONS ARE...
*    1. RECEIVES CONTROL VIA THE MCK NEW PSW.
*    2. DETERMINES TYPE OF ENTRY--NORMAL MCI, MCI IN CCH, CATASTROPHIC
*       I/O ERROR IN IOS(CCH NOT IN SYSTEM)
*    3. SAVE INITIAL CPU OR I/O ENVIRONMENT UPON ENTRY
*    4. INITIALIZES COMMUNICATION AND RECORD ENTRY BUILD AREA
*    5. LOADS MCH MODULES
*    6. PRINTS CONSOLE MESSAGES
*    7. RECOGNIZES AND IGNORES MONITOR CALL INTERRUPTS IN MCH     GTF
*    8. HANDLES ANY UNEXPECTED ERRORS (E.G. MCI OR PGM INT
*       IN MCH, I/O PROBLEMS IN MCH)
*    NOTE...A SHORT NARRATIVE IS GIVEN BEFORE EACH ROUTINE IN THIS
*           LISTING DESCRIBING THE OPERATION OF THE RESPECTIVE ROUTINE
*
*
* ATTRIBUTES...
*     PERMANENTLY RESIDENT, SERIALLY REUSABLE, OPERATES IN SUPERVISOR
*     MODE, AND USES PRIVILEGED INSTRUCTIONS
*
*
* ENTRY POINTS...
* IGFN0000--ENTERED VIA MCK NEW PSW. THE ADDRESS OF THIS LABEL IS
*              CONTAINED IN THE MCK NEW PSW
*
*
* EXITS...
*    RESIDENT MCH NUC HAS THE FOLLOWING EXITS...
*    EXITS TO DISABLED WAIT STATE
*       1. UNEXPECTED MCI OR PGM INTERRUPT IN MCH CODE
*    2. CHANNEL PATH TO SYSRES COULD NTO BE CLEARED
*    3. 10 RETRYS DURING MODULE LOADING HAVE FAILED
*    4. WHEN MCH IS RUN ON OTHER THAN A MODEL 65
*    5. WHEN MCH WAS NOT SUCCESSFULLY INITIALIZED BY NIP
*    EXITS TO LOADED MCH MODULES
*       AFTER EACH MCH MODULE IS SUCCESSFULLY LOADED, MCH NUC GIVES
*       CONTROL TO THE MODULE AT THE BEGINNING OG THE TRANSIENT AREA
*
*
* INPUTS...
*    THE INPUTS TO MCH NUC CAN BE CLASSIFIED AS...
*    1. HARDWARE GENERATED---THIS CONSISTS OF THE FAILING ENVIRONMENT
*       (GPR'S, FPR'S, CPU OR I/O LOG-OUT AND CONTENTS OF THE PERMANENT
*       STORAGE ASSIGNMENT(PSA) LOCATIONS 0 TO 128 DECIMAL)
*    2. SOFTWARE GENERATED
*       A) BBCCHHR OF IGFASR0B IS SUPPLIED BY NIP IN COMDCB
*       B) SYSRES AND CONSOLE  CHNNL/UNIT ADDR(CUA) AND UNIT TYPE IS
*          SUPPLIED BY IGFASR0A IN COMSYSRS AND COMCNSL
*       C) THE SUCCESSOR MODULE'S TTR IS PASSED IN COMNUC, BY EACH
*          LOADED MCH MODULE AT ITS COMPLETION (EXCEPT IGFASR0A)
*
*
* OUTPUTS...
*    TO ALL MCH MODULES...
*    1. BASE REG IN GPR 15
*    2. RETURN ADDRESS TO MCH NUC IN GPR 13
*    3. ADDR OF COMM AREA IN GPR 12
*    4. ENVIRONMENT OF CPU IN COMM/REC ENTRY BUILD AREA
*    TO MODULE IGFASR0A...
*    1. MCH NUC RETURN ADDR FOR SUCCESSFUL CLR CHNNL IN COMNUC
*    2. MCH NUC RETURN ADDR FOR UNSUCCESSFUL CLR CHNNL IN COMNUC+4
*    3. BEGINNING ADDR OF I/O INTRPT SAVE QUEUE IN GPR 2
*
*
* ENTRY REFERENCES AND V-TYPE ADDRESS CONSTANTS...
*    THE FOLLOWING ARE ENTRY REFERENCES AND V-TYPE ADCONS FROM THE MCH
*    COMM AREA
*    REFERENCE TYPE COMM AREA TAG    MEANING
*    ********* **** *************    ********
*
*    IGFRES    E    COMRAM           POINTER TO RAM (MFT ONLY)
*    IGFBLDL   E    COMBLDL          POINTER TO BLDL TABLE
*    IGFSVBLD  E    COMSVBLD         POINTER TO SVC BLDL TABLE
*    IGFDCB    E    COMDCB           DCB FOR SYS1.ASRLIB
*    IGFUNC01  E    IGFNUC01         MBBCCHHR OF NUC REFRESH TABLE
*    IEACVT    V    COMCVT           POINTER TO CVT
*    IEAASNT2  V    COMERXNT         ERROR XSNT AREA(MFT ONLY)
*    IFBACTA   V    COMCHASG         POINTER TO CHNNL ASSIGNMENT
*    IEAAXSNT  V    COMTRANS         POINTER TO XSNT AREA NAME (MFT)
*    IEAERWA   V    COMERIOB         POINTER TO ERROR XSNT AREA (MVT)
*    IEA0IO01  V    COMNEST          IOS NEST SWTICH 7MVT)
*    IORGSW    V    COMNEST          IOS NEST SWTICH 7MFT)
*    IGFSVCQ   E    COMSCCQ          ADDR OF Q OF RES 3,4 SVC'S
*    IGFMOD    E    COMCVT           MODEL NUMBER OF CPU
*
*
* ERROR CONDITIONS...
*    REFER TO EXITS
*
* TABLES AND WORKAREAS...
*    MCH COMMUNICATION AND RECORD ENTRY BUILD AREAS
*
*
* RESTRICTONS/CONVENTIONS...
*    1. MCH PROGRAM AND ITS CORE STORAGE MAY NOT BE USED BY OS/360 OR
*       ANY PROBLEM PROGRAM
*    2. MCH SUPPORTS ONLY
*       A) MODEL 65 SIMPLEX
*       B) MFT2/MVT VERSIONS OF OS
*       C) 2311,2314,2301,2303 AS PRIMARY SYSRES DEVICES, CONNECTED BY
*          WAY OF THE 2680 SELECTOR CHANNEL
         EJECT
         ENTRY IGFN0000
         ENTRY IGFDCB
         ENTRY IGFSVCQ
         ENTRY IGFMOD
         ENTRY IGFBLDL
         ENTRY IGFSVBLD
         ENTRY IGFNUC01
         AIF   (&MFTASR NE 1).MVT
         ENTRY IGFRES
.MVT     ANOP
*                  DUMMY DEB DEFINITION                            MEXT
IHADEB   DSECT                                                     MEXT
         DC    F'0'          TCB ADDR                              MEXT
DEBAMIND DC    12X'0'        NEXT DEB                              MEXT
DEBNMEXT DC    16X'0'        NO. OF EXTENTS                        MEXT
DEBDVMOD DC    F'0'          UCB ADDR                              MEXT
DEBBINUM DC    H'0'          BIN                                   MEXT
DEBSTRCC DC    H'0'          START CYL                             MEXT
DEBSTRHH DC    H'0'          START TRACK                           MEXT
DEBENDCC DC    H'0'          END CYL                               MEXT
DEBENDHH DC    H'0'          END TRACK                             MEXT
DEBNMTRK DC    H'0'          NO. OF TT'S FOR THIS EXTENT           MEXT
         USING CVTDSECT,CVTREG
CVTDSECT DSECT
         CVT
         AIF   (&M65MP NE 1).NMP9                                    MP
         IEAQFX     65,MCH,1,GENCODE=NO                              MP
.NMP9    ANOP                                                        MP
IGFNUC00 CSECT
         EJECT
****************  INITIAL ENTRY POINT INTO MCH NUCLEUS  ***************
*                                                                     *
* ENTER HERE ON THE OCCURRENCE OF A MCK VIA THE MCK NEW PSW           *
* POSSIBLE TYPES OF ENTRY INTO ASRNUC ARE...                          *
* 1. MCI OCCURRING IN THE CHANNEL CHECK HANDLER (CCH). BYTE 115 WILL  *
*    CONTAIN X'01' IF THIS OCCURS.                                    *
* 2. CATASTROPHIC I/O ERROR (ICC,CCC OR CDC) OCCURRING IN IOS AND CCH *
*    IS NOT IN THE SYSTEM. BYTE 50 WILL CONTAIN X'FF' IF THIS OCCURS. *
* 3. LEGITIMATE MCI. BYTES 115 AND 50 WILL CONTAIN X'00'.             *
* INITIAL RUNNING STATE IS DISABLED FORALL INTERRUPTS                 *
*                                                                     *
***********************************************************************
         SPACE 3
         USING *,BRNUC
         AIF   (&MCSASR NE 0).NMCS13                                MCS
         USING *+2048,BRMOD
.NMCS13  ANOP                                                       MCS
         AIF   (&MCSASR NE 1).NMCS1                                 MCS
         USING *+2448,BRMOD                                         MCS
.NMCS1   ANOP                                                       MCS
IGFN0000 DS    0H
         ST  WKR14,X'170'          SAVE GR14 IN LOW CORE
         AIF   (&M65MP NE 1).NMP7                                    MP
         L     BRNUC,EDSMCH        SET NUC BASE FROM PREFIX POINTER  MP
         AGO   .NMP8                                                 MP
.NMP7    ANOP                                                        MP
         L     BRNUC,116           SET NUC BASE FROM MCK NEW PSW     MP
.NMP8    ANOP                                                        MP
         AIF   (&M65MP NE 0).NU67
         B     AROUND                  TO SKIP THE NEXT CONSTANT   M67
         SPACE 3
**     THIS CONSTANT MUST BE AT THIS LOCATED FOR THE               M67
****              MODEL 67 INSTRUCTION STMC.
MOD67    DC    D'0'                     WORK AREA FOR 67 TESTING   M67
         SPACE 3
AROUND   EQU   *                                                   M67
.NU67    ANOP                                                      M67
         ST    BRNUC,NBASESV       SAVE NUC BASE REG IN LOWER CORE
         MVC   NSVCKSUM(1),CKSUMLOC     SAVE CHK SUM BIT
         NI    CKSUMLOC,X'BF'      CLEAR CHK SUM BIT IN LOG-OUT
         ST    WKR15,X'174'        SAVE GR15 IN LOW CORE
         L     BRMOD,NMODBASE      SET MODULE BASE REG
         OI    NSWITCH,X'80'       SET ASRNUC IN CONTROL BIT
         OI    COMCNSL+3,X'80'     SET CNSL CUA NOT YET FOUND
         SPACE 2
*
* BEGIN  SAVING ENVIRONMENT OF THE CPU INTO THE RECORD ENTRY IMAGE
* SAVE AREA AND THE MODULE COMMUNICATIONS AREA
*
NSVENV   MVC   COMPSA(PSASIZE),PSABEGIN      SAVE PSA
         MVC   RECPULOG(LOGSIZE),LOGBEGIN    SAVE CPU LOG OUT
         MVC   RECPULOG+38(1),NSVCKSUM  SAVE ORIG CHK SUM BIT
         STM   0,13,REGSGPR        SAVE GPR'S 0-13
         MVC   REGSGPR+56(8),X'170'     SAVE GR14 AND 15
         STD   0,REGSFPR           SAVE
         STD   2,REGSFPR+8              FLOAT
         STD   4,REGSFPR+16                  POINT
         STD   6,REGSFPR+24                       REGS
         SPACE 4
         AIF    (&MCSASR NE 1).NOMCS                          IE  50588
         XC    MSCCWADR(D14),MSCCWADR   ZERO CCW ADDR AREA    IE  50588
.NOMCS   ANOP
         XC   COMLEV0A(N16),COMLEV0A CLEAR LEVEL INDS + COMMSF   M67
         AIF   (&M65MP NE 0).NMPVD9                               M67
         CLI   50,X'FF'            CATASTROPHIC CHANNEL ERROR  @S67856P
         BE    CPUID               YES                         @S67856P
         TM    LOG4,X3                  TEST EXT MASK PARITY BITS  M67
         BNO   CPUID                    NOT A 67                   M67
*                                       YES,IT IS A 67             M67
         DC    X'B089E010'             STMC INST. FOR M67 TEST     M67
         XC    NABSADR(N8),NABSADR      CLEAR COMPARE AREA         M67
         CLC   MOD67(N8),NABSADR        ARE REGS 8-9 ZEROS         M67
         BE    MOD671                   YES,MOD67-1                M67
         TM    X32,X80                  IS IT EXTERNAL MACH CHECK  M67
         BZ    SKIPNEXT                 NO                         M67
         LPSW  48                       YES-RETURN TO SYSTEM       M67
SKIPNEXT EQU   *                                                   M67
         OI    COMMSF,X20               SET MOD 67-2 BIT           M67
         B     NCPUIDIN                 CONTINUE                   M67
MOD671   EQU   *                                                   M67
         OI    COMMSF,X40               SET MOD 67-1 BIT           M67
         B     NCPUIDIN                 CONTINUE                   M67
CPUID    EQU   *                                                   M67
.NMPVD9  ANOP                                                      M67
* PLACE CPU ID NUMBER IN CPU ID PRINT FIELD                        MP1
*                                                                  MP1
         TM    LOGVD,TWOVD        CPU ID 2                         MP1
         BO    NCNSL06            YES BRANCH                       MP1
         TM    LOGJE,VDOCT   CPU ID 1                              MP1
       BZ      NCPUIDIN                APAR 26973
         MVI   NIDBUF1,X'F1'      MOVE CPU ID 1                    MP1
       B       NCPUIDIN                APAR 26973
NCNSL06  MVI   NIDBUF1,X'F2'      MOVE CPU ID 2                    MP1
NCPUIDIN EQU   *                       APAR 26973
         SPACE 3
         CLI   COMBLDL,X'FF'       ASR SUCCESSFULLY INITIALIZED
         BC    NOTEQ,NIBAD0        NO
         CLI   50,X'FF'            TEST FOR CAT ENTRY FROM IOS
SIGNAL   EQU   *-3                 DATA FOR SYSTEM CAL OPERATION     MP
         BC    EQ,NIOSCAT0         BR IF YES
         L     CVTREG,COMCVT       SET CVT BASE REG
         LA    CVTREG,N0(CVTREG)
         SH    CVTREG,VALUE6       SET DISP. FOR MOD ID
         CLC   N0(N2,CVTREG),MOD65  MODEL 65                  IE  21961
         L     CVTREG,COMCVT       RESET CVT REG
         BNE   NNOT65                    NO-NOT 65
* CLEAR ANY PENDING MCI THAT MAY HAVE OCCURRED AS A RESULT OF THE
* PREVIOUS ENVIRONMENT SAVING OPERATION
         SPACE 1
NU0004   EQU   *
         MVI   PGMOPSW+X03,X0      ERASE PRIOR MONIT. CALL INT CODE-GTF
         MVC   112(8),NMKENAB      SET NEW MCK PSW-ENABLED ONLY FOR MCI
         LPSW  NMKENAB             ENABLE MCI'S--GO TO NEXT SEQ INSTR
NU0001   MVC   112(8),NMKEXPSW     SET NEW MCK PSW-POINTS TO EMGY EXIT
         MVC    104(8),NPGMPSW     SET PGM NEW PSW--ASRNUC WILL HANDLE
*                                  PGM INTERRUPTS IN ASR CODE--PRINT
*                                  ERROR MSG AND GO  INTO WAIT STATE
*                                  ENABLED FOR MCI'S              GTF
         SPACE 3
******************  INITIALIZATION FOR MCH MODULES  *******************
         SPACE 1
NU0003   EQU   *
         L     WKR12,NCOMAREA      SET GR12 TO BEGINNING OF COMM AREA
         L     CVTREG,COMCVT       ADDR OF COMM VECTOR TABLE
         XC    COMNUC(16),COMNUC   CLEAR COMNUC AREA
         SPACE 1
* ACCESS THE STARTING CCHH OF SYS1.SVCLIB (MCH MODULES EXIST IN THIS
* DATA SET). THIS CCHH IS USED IN THE RELATIVE TO ABSOLUTE TRACK
* CONVERSION ROUTINE.
         SPACE 1
         L     WKR3,CVTSVDCB       ADDR OF SYS1.SVCLIB DCB
         LA    WKR3,44(WKR3)       DCB+44 IS POINTER TO DEB
         L     WKR3,0(WKR3)        GET DEB POINTER
         LA    WKR3,38(WKR3)       DEB+38 IS STARTING CCHH OF SVCLIB
         MVC   NABSADR+2(4),0(WKR3)     SAVE THIS CCHH
         MVI   COMMSG0,X5C         MOVE * TO WAIT OUTPUT BUFFER     MCS
         MVC   COMMSG1+X1(X9),NIDBUF  MOVE CPU ID TO OUTPUT BUFFER  MCS
         LA    WKR3,WTOBUF         ADDR OF WTO BUFFER               MCS
         ST    WKR3,COMMSG1+D12    STARTING POINT OF WTO BUFFER     MCS
         ST    WKR3,COMPRNT         IN ASR COMMUNICATION AREA
         LA    WKR3,OBREXIT      GET ADDRESS OF OBR EXIT RTN
         ST    WKR3,COMOBREX     STORE IN COMMUNICATIONS AREA FOR USE
*                                   BY THE ERROR RECORDER MODULE
         MVC   COMNUC+4(4),NADCLEME     SET EMGY EXIT IN COMM AREA
         XC    NSAVEIO(200),NSAVEIO     ZERO I/O INTRPT SAVE QUEUE
         AIF   (&M65MP NE 1).NMPVD                                 MEXT
         SR    WKR2,WKR2          CLEAR LOCATION 4 IN MP SYSTEMS   MEXT
         ST    WKR2,X4            TO PREVENT FURTHER BRANCHING     MEXT
***                           AFTER GOING TO LOCATION 0            MEXT
.NMPVD   ANOP                                                      MEXT
         LA    WKR2,NSAVEIO        ADDR OF I/O INTRPT SAVE QUEUE
         ST    WKR2,COMIOQ         SAVE IT IN COMMUNICATION AREA
         MVC   COMNUC(4),NADPTHCL  SET PATH CLEAR EXIT IN COMM AREA
N16      EQU    16                                                 2K
         AIF   (&M65MP NE 1).NMP12                                   MP
         MVC   COMMSF(1),CPUSTAT        MOVE IN CPUSTAT INFO         MP
         NI    COMMSF,SOLID            CLEAR SOLID INDICATOR       2K
SOLID    EQU   X'FB'             MASK OUT SOLID STG IND.           2K
         OI    COMMSF,X'10'             SET MULTIPROCESSOR INDICATOR MP
.NMP12   ANOP                                                        MP
         CLI   RETYPE,C'I'         IS THIS CAT ENTRY
         BC    8,NIOSCAT1          YES
         XC    CTFLDID(256),CTFLDID     CLEAR SELECTED
         XC    ISUMBAD+2(2),ISUMBAD+2    FIELDS IN
         XC    REGPARGP(16),REGPARGP     RE BUILD AREA
         TM    CKSUMLOC,CKSUMBIT   IS CHECK SUM BIT ON
         BC    ON,NCKSUM1          YES
NU0005   EQU   *
         MVI   RETYPE,C'C'         SET RE TYPE TO MCK TYPE
         BC    15,4(BRMOD)         GO TO CLR CHNNL MODULE
         SPACE 2
NIOSCAT0 EQU   *
         AIF   (&M65MP NE 1).NMP6                                    MP
         TM    CPUSTAT,3           CHECK RECONFIGURED OR PARTITIONED MP
         BNZ   NIOSCAT2            GO IF EITHER CASE                 MP
         OI    STMASK,MASK         SET MASK IN PREFIX AREA           MP
MASK     EQU   X'90'               ACTION MASK                       MP
         WRD   SIGNAL,X'10'        SIGNAL                            MP
NIOSCAT2 EQU   *                                                     MP
.NMP6    ANOP                                                        MP
         MVI   RETYPE,C'I'         SET RE TYPE TO CHANNEL (CAT) TYPE
         MVC   REIOLOG(IOLOGSIZ),IOLOGBEG    MOVE I/O LOG TO RE
         BC    15,NU0004
         SPACE 1
NIOSCAT1 XC    RECTLIND(70),RECTLIND    CLEAR INB REC IMAGE AREA
         MVC   RECSW(8),64         MOVE CSW TO RE AREA
         MVC   RECUA(2),58         MOVE CUA INTO RECORD ENTRY AREA
         BC    15,4(BRMOD)         GO CLR CHNNL
         SPACE 3
NIBAD0   EQU   *
         LA    WKR0,X'A0E'         GET WAIT STATE CODE
         MVC   COMMSG0+X1(D16),NNIPMSG   MOVE MSG TO BUFFER         MCS
         B     STANDAIO                                             MCS
*
NNOT65   EQU   *                                                    MCS
         LA    WKR0,X'A0D'         GET WAIT STATE CODE
         MVC   COMMSG0+X1(D16),N65MSG    MOVE MSG TO BUFFER         MCS
         B     STANDAIO                                             MCS
         SPACE 1
NCKSUM1  MVI   REENVCHK,X'FF'      SET INDICATOR FOR IGFASR0B
         BC    15,NU0005           CONTINUE
         EJECT
***************  M O D U L E   S C H E D U L I N G  *******************
***********************************************************************
*                                                                     *
*                                                                     *
* THIS ROUTINE PROVIDES THE INITIAL SETUP FOR CALLING THE ENVIRONMENT *
* CHECKER MODULE, AND SUBSEQUENTLY FOR CALLING THOSE ASR MODULES NEED-*
* ED TO PERFORM THE RECOVERY FUNCTIONS FOR THE CURRENT ERROR.         *
* ALL ASR MODULES WILL RETURN CONTROL TO THIS ROUTINE AT 'NMODRTRN'   *
* THIS ROUTINE THEN ACCESSES THE NEXT MODULES ID AND TTR FROM THE COM-*
* MUNICATION AREA (PUT THERE BY THE PREVIOUS RUN MODULE). THE TTR IS  *
* CONVERTED TO MBBCCHHR (RELATIVE TO ABSOLUTE) AND PLACED IN THE SEEK/*
* SEARCH ARGUEMENT OF MODULE LOADER CHANNEL PGM. THE ID IS PLACED IN  *
* 'NMODSEQ'.  THE PROGRAM THEN GIVES CONTROL TO THE MODULE LOADER     *
* ROUTINE WHICH LOADS THE REQUESTED MODULE AND PASSES CONTROL TO IT.  *
*                                                                     *
***********************************************************************
         SPACE 5
* INITIAL CALL FOR ENVIRONMENT CHECKER MODULE
* ENTER HERE FROM A SUCCESSFUL CLEAR CHANNEL FUNCTION
         SPACE 2
         DS    0H
NSCHED00 EQU   *
         SPACE 1
NCLEX01  EQU   *
         SPACE 2
         LA    WKR13,NMODRTRN      PUT MOD RETURN ADDR IN GR13
         MVC   NSEEKARG(7),COMDCB+1     SET ENV CKR BBCCHHR FOR MODLDR
         MVC   NMODSEQ(2),XECKID   SET ENV CKR ID IN MOD SEQ
         BC    15,NMODLDR          GO TO LOADER ROUTINE
         SPACE 3
*********************  MODULE COMMON RETURN POINT  ********************
         SPACE 1
NMODRTRN OI    NSWITCH,X'80'       SET ASRNUC IN CONTROL BIT
         L     BRMOD,NMODBASE      SET MOD BASE REG
         STH   WKR1,NMODSEQ        SAVE NEXT MOD'S ID
         SPACE 2
*********** RELATIVE TO ABSOLUTE TRACK CONVERSION ROUTINE  ************
*                                                                     *
* CONVERTS RELATIVE TTR TO ABSOLUTE BBCCHHR.  TTR IS PASSED TO ASRNUC *
* BY THE PREVIOUSLY RUN ASR MODULE VIA COMMUNICATION AREA--'COMNUC'.  *
* AFTER CALCULATION OF BBCCHHR, IT IS PLACED IN THE SEEK/SEARCH ARGU- *
* MENT OF THE ASR MODULE LOADER CHANNEL PROGRAM--NSEEKARG.            *
*                                                                     *
* THIS ROUTINE SUPPORTS THE 2311, 2314, 2301 AND 2303                 *
* REGISTER USAGE                                                   MEXT
*        REG 2  CONTAINS TTR WHICH IS PASSED                       MEXT
*        REG 6  ADDRESS OF DEB                                     MEXT
*
*
* FOR EACH EXTENT OF SVCLIB, THE AMOUNT OF TT IN THE PASSED REL.   MEXT
* ADDR IS REDUCED BY THE NUMBER OF TRACKS IN THE EXTENT.THE PROPER MEXT
* EXTENT IS REACHED WHEN BALANCE IS NEGATIVE.                      MEXT
*
*                                                                     *
***********************************************************************
         SPACE 3
TTRCNVT  EQU   *                                                   MEXT
         USING IHADEB,DEBREG                                       MEXT
         L     CVTREG,COMCVT          RELOAD CVT BASE REG          MEXT
         LA    CVTREG,ZEROVD(CVTREG)    ZERO HI BYTE
         L     DEBREG,CVTSVDCB          ADDR OF SYS1.SVCLIB DCB    MEXT
         L     DEBREG,D44(DEBREG)       ADDR OF DEB                MEXT
         LA    DEBREG,ZEROVD(DEBREG)    ZERO HI BYTE               MEXT
         SR    WKR4,WKR4                                           MEXT
         L     WKR2,COMNUC         GET PASSED TTR                  MEXT
         CR    WKR4,WKR2           IS IT ZERO                      MEXT
         BE    NLDFAIL2            YES-INVALID - WAIT STATE        MEXT
         IC    WKR4,DEBNMEXT            NUMBER OF EXTENTS          MEXT
         SR    WKR2,WKR2                                           MEXT
         LA    WKR1,D32(DEBREG)         GET DEB EXTENT ADDR        MEXT
         LA    WKR7,NSRCHARG            CCW FOR ABSOLUTE ADDR      MEXT
         MVC   X4(1,WKR7),COMNUC+X2     PUT R INTO ADDR            MEXT
         LH    WKR2,COMNUC              TT FROM COMM AREA-IN LOW 2 MEXT
CNVTB    EQU   *                                                   MEXT
         SH    WKR2,D14(WKR1)           DECREASE BY TRKS IN EXTENT MEXT
         BM    CNVTC              BR IF LESS THAN 0, IT IS RIGHT EXT.
         LA    WKR1,X10(WKR1)        OR GO TO NEXT EXTENT          MEXT
         BCT   WKR4,CNVTB               MORE EXTENT POSSIBLE       MEXT
         B     NLDFAIL2       WAITSTATE,MODULE NOT FOUND IN AN EXT.MEXT
CNVTC    EQU   *                                                   MEXT
         AH    WKR2,D14(WKR1)      ADD BACK LAST EXTENT NO.OF TT   MEXT
         MVC   NSEEKARG(X6),X4(WKR1)   GET BBCCHH FROM EXTENT      MEXT
         BE    NMODLDR                 IF REG2=0,GO TO LOAD MODULE MEXT
* IF NOT 0, FIND THE DISPLACEMENT IN THIS EXTENT PER DEVICE TYPE   MEXT
         L     WKR5,ZEROVD(WKR1)       GET UCB ADDRESS             MEXT
         IC    WKR5,D19(WKR5)          GET DEVICE TYPE CODE        MEXT
         LA    WKR3,D15                MASK                        MEXT
         NR    WKR5,WKR3               LEAVE 4 L.O.BITS            MEXT
         L     WKR3,CVTZDTAB           DISPLACEMENTS OF IO INDEX   MEXT
         IC    WKR5,ZEROVD(WKR5,WKR3)  USE INDEX FOR DEVICE FACTOR MEXT
         LH    WKR4,X2(WKR5,WKR3)      GET TT CONVERSION FACTOR    MEXT
         LR    WKR3,WKR2               TT NO IN DIVIDE REG         MEXT
         AH    WKR3,X8(WKR1)           ADD STARTING HH (TRACKS)    MEXT
         LA    WKR2,ZEROVD             SET EVEN TO 0               MEXT
         DR    WKR2,WKR4               AS A RESULT OF THIS DIVISIONMEXT
*                             THE QUOTIENT IS THE CYLINDER DISP.   MEXT
*                             AND THE REMAINDER(IN GPR2) IS THE HEAD(T)
*                             DISPLACEMENT FROM THE ABSOLUTE START MEXT
*                          OF THE DATA SET                         MEXT
         STC   WKR2,X3(WKR7)      STORE H(T)                       MEXT
         AH    WKR3,X6(WKR1)      ADD CYL EXTENT START             MEXT
         STC   WKR3,X1(WKR7)       STORE C                         MEXT
         DROP  DEBREG                                              MEXT
         EJECT
***********************************************************************
*                                                                     *
*******************  MCH MODULE LOADER SUBROUTINE  ********************
*                                                                     *
* INPUT PARAMETERS REQUIRED FROM CALLER...                            *
*        1. THE BBCCHHR ADDRESS MUST BE PUT INTO THE SEEK/SEARCH ARG- *
*           UEMENT (LABEL IS 'NSEEKARG')                              *
*                                                                     *
***********************************************************************
         SPACE 3
         DS    0H
* ENTER HERE FROM MODULE SCHEDULER
         SPACE 1
NMODLDR  EQU   *
         LA    WKR7,10             INITIALIZE RETRY COUNT
         LH    WKR1,COMSYSRS       GET CUA OF SYSRES
NLDAGAIN LA    WKR3,NCHPGM1        SET UP
         ST    WKR3,72                   CAW
         SPACE 1
* ISSUE SIO TO SYSRES--INITIATES LOADING OF THE ASR MODULE
         SPACE 1
NLDRSIO  SIO   0(WKR1)             SIO TO SYSRES
         BC    SIOGO,NLDRTIO       --SIO INITIATED
NLDRTRY1 BCT   WKR7,NLDAGAIN       --CC=1,2,OR3-TRY 10 TIMES
         BC    15,NLDFAIL1         10TH RETRY FAILED-ASR HAS HAD IT
         SPACE 1
* SIO IS AOK--CHANNEL PROGRAM IS PROCEEDING NORMALLY. NOW ISSUE TIO TO
* CHECK AND CLEAR THE NORMAL OR ENDING STATUS OF THE I/O OPERATION.
         SPACE 1
NLDRTIO  EQU   *
         L     WKR5,NLOOPC         INITIALIZE TIO BUSY LOOP COUNT
NLDRTIOA TIO   0(WKR1)             TIO TO SYSRES
         BC    9,NLDRTRY1          --CC=0 OR 3-TRY SIO AGAIN
         BC    BUSY,NLDRCHK1       --BUSY-CHK TIO TIMEOUT LOOP COUNT
*        CSW STORED--NOW CHECK ENDING STATUS
         MVC   NSVCSW(8),64        SAVE CSW
         TM    NSVCSW+5,X'FF'      ANY ERRORS (EXCEPT US,UE)
         BC    5,NLDRTIOE          BR IF AT LEAST ONE IS ON
         TM    NSVCSW+4,X'0D'      TEST CE,DE,UE
         BC    ALLOFF,NLDRTIOA     --ALL OFF-DO TIO AGAIN
         BC    ALLON,NLDRTIOB      --ALL ON-CHK FOR ALTERNATE TRACK
         TM    NSVCSW+4,X'02'      TEST UC ON/OFF
         BC    ON,NLDRTIOD         //ON-DO SENSE
         TM    NSVCSW+4,X'04'      TEST DE ON/OFF
         BC    OFF,NLDRTIOA        --OFF--DEVICE STILL BUSY-DO TIO
*        DE IS  ON--I/O IS COMPLETELY FINISHED
         TM    NSNSSW,X'80'        TEST IF SENSE WAS ISSUED
         BC    ON,NLDRTIOC         --YES-CHK FOR ALTERNATE TRACK
         SPACE 1
         LA    WKR2,COMNUC             ADDR WHERE TTR TABLE PUT IN
         LA    WKR9,REMEST+48        ADDR SS MCH COMMON AREA CD   42247
*        I/O FINISHED--MODULE LOADED OK
         NI    NSWITCH,X'00'       SET MOD IN CONTROL BIT
         BCR   15,BRMOD            GIVE CONTROL TO ASR MODULE *********
         SPACE 2
NLDRTIOB CLC   NRECORD0(4),NSRCHARG
         BC    EQ,NLDRTRY1         BR EQUAL--ERROR--TRY AGAIN
*        NOT EQUAL MEANS A SWITCH TO AN ALTERNATE TRACK IS NECESSARY
*        THE CCHH IN RECORD 0 IS THE NEW SEEK ADDR FOR THE ALT TRK
NLDRALTK MVC   NSRCHARG(4),NRECORD0     SET ALT TRK SEEK ADDR
         BC    15,NLDAGAIN         DO I/O ALL OVER AGAIN
         SPACE 1
NLDRTIOC NI    NSNSSW,X'00'        RESET SENSE FOR ALT TRK SWITCH
         TM    NLDRSNS,X'02'       IS TRK CONDITION CHK ON/OFF
         BC    ON,NLDRALTK         --ON-SWITCH TO ALT TRK
         BC    15,NLDRTRY1         //OFF-ERROR--RETRY
         SPACE 1
NLDRTIOD TM    NSNSSW,X'80'        WAS SENSE JUST ISSUED
         BC    OFF,NLDRTIOG        --NO--SETUP FOR SENSE
*        UC WAS RECEIVED FROM SENSE
NLDRTIOE BCT   WKR7,NLDRTIOF       CHK RETRY COUNT
         BC    15,NLDFAIL1         10TH RETRY FAILED--ASR HAS HAD IT
         SPACE 1
*        A TIO IS NOW ISSUED TO CLEAR ENDING STATUS FOR A RETRY ATTEMPT
NLDRTIOF L     WKR5,NLOOPC         INITIALIZE TIO LOOP COUNT
NLDRTIOH TIO   0(WKR1)             ISSUE TIO
         BC    7,NLDRCHK2          CC=3,2 OR 1--CHK LOOP COUNT
*        CC=0 AVAILABLE
         TM    NSNSSW,X'80'        SHOULD SENSE BE ISSUED
         BC    OFF,NLDAGAIN        --NO-DO READ AGAIN
         LA    WKR3,NSNSPGM        SET SENSE
         ST    WKR3,72                      CAW
         BC    15,NLDRSIO          GO DO SENSE
         SPACE 2
NLDRTIOG OI    NSNSSW,X'80'        SET SENSE SWITCH
         BC    15,NLDRTIOF
         SPACE 1
NLDRCHK1 BCT   WKR5,NLDRTIOA       BR IF BUSY TIO LOOP COUNT NOT ZERO
         BC    15,NLDFAIL2
         SPACE 1
NLDRCHK2 BCT   WKR5,NLDRTIOH       BR IF TIO LOOP COUNT NOT ZERO
         BC    15,NLDFAIL2
         EJECT
NLDFAIL1 EQU   *                                                    MCS
NLDFAIL2 EQU   *                                                    MCS
         LA    WORK0,X'A04'        SET WAIT STATE CODE              MCS
ENT0AM   EQU   *                                                    MCS
         TM    COMNUC+4,X'80'      ERROR RECORD WRITTEN ?           MCS
         BC    ON,NLDFAIL3         YES, LEAVE MSG ALONE             MCS
         MVI   NLDRMSG+6,C'S'      SET SEREP CODE                   MCS
NLDFAIL3 EQU   *                                                    MCS
         MVC   COMMSG0+X1(D16),NLDRMSG   MOVE MSG TO BUFFER         MCS
         B     STANDAIO                                             MCS
***********************************************************************
*                                                                     *
**************  SECOND MACHINE CHECK INTERRUPT HANDLER  ***************
*                                                                     *
* THIS ROUTINE GAINS CONTROL WHENEVER AN UNEXPECTED MACHINE CHECK IN- *
* TERRUPT OCCURS IN MCH CODE. SUCH A CONDITION IS CONSIDERED CATASTRO-*
* PHIC TO ASR OPERATION. MCH MUST TERMINATE THE OPERATING SYSTEM.     *
* ALL DEVICES ARE HALTED AND THE SEREP INTERFACE IS SET UP AND      MCS
* THE UNIQUE WAIT STATE CODE OF 'A01' IS SET INTO THE WAIT STATE PSW. *
* THE SYSTEM IS THEN PLACED INTO THE DISABLED WAIT STATE.             *
* THIS ROUTINE WILL BE ENABLED FOR MCI'S. IF ONE OCCURS, CONTROL WILL *
* GO TO THE 3RD MCI HANDLER,WHICH EFFECTIVELY WILL PLACE THE SYSTEM   *
* IN THE WAIT STATE.                                                  *
*                                                                     *
***********************************************************************
         SPACE 5
         DS    0H
NMKEX1   EQU   *
         L     BRNUC,NBASESV       SET ASRNUC BASE REG
         MVC   116(4),N3MKAD       SET MCK NEW PSW IN CASE OF 3RD MCI
         LPSW  NMK2ENAB            ENABLE FOR MCI ONLY (GO TO NSI)
         SPACE 1
NMK2ND00 EQU   *
         LM    WKR15,WKR13,0       CLEAR POTENTIAL BAD PARITY IN REGS
         L     WKR15,NMODBASE      SET MOD BASE REG
         MVC   RESPARE(8),48       SAVE MCK OLD PSW
         LA    WKR0,X'A01'         UNIQUE WAIT STSTE CODE
         TM    COMNUC+4,X'80'      HAS ERROR RECORD BEEN WRITTEN    MCS
         BC    ON,NMK2ND06         BRANCH YES LEAVE MSG ALONE       MCS
         MVI   NMK2MS+6,C'S'       SET SEREP CODE                   MCS
NMK2ND06 EQU   *                                                    MCS
         MVC   COMMSG0+X1(D16),NMK2MS    MOVE MSG TO BUFFER         MCS
         B     STANDAIO                                             MCS
NMK2ND02 EQU   *                                                    MCS
NSEREP00 EQU   *                                                    MCS
         SPACE 1
* SET UP SEREP INTERFACE
         SPACE 1
         MVC   LOGBEGIN(LOGSIZE),RECPULOG RESTORE ORIGINAL LOG OUT  MCS
         MVC   IOLOGBEG(IOLOGSIZ),REIOLOG  RESTORE I/O LOG         MCS0
         CLI   RETYPE,C'I'              CHK IF CHANNEL RECORD      MCS0
         BNE   CPUREC                  GOM  IF NOT                 MCS0
         MVI   MCICODE,IOFLG           MOVE SEREP INDICATOR        MCS0
         B     RECCOM                  CONTINUE                    MCS0
CPUREC   EQU   *                                                   MCS0
         MVI   115,X'00'           CLEAR SEREP INTERFACE BYTE
RECCOM   EQU   *                                                   MCS0
         ST    WKR0,NWAITPSW+4     SET UNIQUE WAIT STATE CODE
         MVC   LOCOR170(8),NWAITPSW     SET WAIT PSW IN LOW CORE
         LPSW  LOCOR170            ENTER DISABLED WAIT STATE***********
         SPACE 2
         SPACE 5
***********************************************************************
*                                                                     *
***************  THIRD MACHINE CHECK INTERRUPT HANDLER  ***************
*                                                                     *
* THIS ROUTINE GAINS CONTROL WHENEVER A MCI OCCURS IN THE ASR 2ND MCI *
* HANDLER. IT RUNS COMPLETELY DISABLED FOR MCI'S. AN ATTEMPT IS MADE  *
* TO RING THE BELL. THE UNIQUE WAIT STATE CODE OF 'A02' IS SET AND    *
* THE SYSTEM IS PLACED INTO THE DISABLED WAIT STATE                   *
*                                                                     *
***********************************************************************
         SPACE 5
         DS    0H
NMK3RD   L     BRNUC,NBASESV       SET ASRNUC BASE REG
         LA    WKR0,X'A02'         SET UNIQUE WAIT STATE CODE
         BC    15,NMK2ND02         CONTINUE
         EJECT
***********************************************************************
*                                                                     *
*******************  MCH PROGRAM INTERRUPT HANDLER  *******************
*                                                                     *
* THIS ROUTINE GAINS CONTROL WHENEVER AN  PROGRAM  CHECK INTERRUPT    *
* OCCURS IN MCH CODE. A REGULAR PROG CHECK INT. IS CATASTROPHIC TO MCH*
* OPERATION. THE OPERATING SYSTEM MUST BE TERMINATED. A MSG IS PRINTED*
*  AND THE SYSTEM IS THEN PLACED INTO A DISABLED                      *
* WAIT STATE. THE UNIQUE WAIT STATE CODE IS 'A03'.                    *
********  PGM OLD PSW IS SAVED IN 'RESPARE'                           *
********  GPR'S SAVED BEGINNING AT 'RESPARE+8'                        *
*   GTF MONTIOR CALLS ARE RECOGNIZED AND NO-OP IN THIS ROUTINE        *
          AIF   (&M65MP NE 1).NOSSM
*   DURING MP THE SET SYSTEM MASK (SSM) PROGRAM CHECK INTERRUPT IS    *
*     RECOGNIZED AND IS NO-OP IN THIS ROUTINE                         *
.NOSSM    ANOP
*                                                                     *
***********************************************************************
         SPACE 5
         DS    0H
NPGMINT  EQU   *
X34      EQU   X'34'
X6C      EQU   X'6C'
X2B      EQU   X'2B'
         STM   14,15,LOCOR170
         L     BRNUC,NBASESV       SET ASRNUC BASE
         L     BRMOD,NMODBASE      SET MOD BASE
*                                                               * GTF
* THIS ROUTINE INTERCEPTS PGM CHK NEW PSW                       * GTF
*  1- TO DETERMINE IF A MONITOR CALL.                           * GTF
*  2- TO ALLOW PROCESSING TO CONTINUE AT NSI IF IT IS.          * GTF
*  3- TO PROCEED TO UNUSUAL PGM INTERRUPT HANDLER IF IT IS NOT  * GTF
*                                                               * GTF
*                                                               * GTF
         STM   WKR12,WKR13,RESPARE  SAVE WORK REGS IN COMREG       GTF
         LA    WKR12,MCEXIT        POINT TO REGULAR PC ROUTINE    GTF
          ST    WKR12,X6C      SET PROG NPSW TO               IE   1718
*                              REGULAR MCH PROG CHECK HANDLER IE   1718
         CLI   PGMOPSW+X3,X1       OPERATION EXCEPTION?          GTF
         BCR   PCUNEQ,WKR12        NO, TRUE PGM CHK               GTF
MCNOP    TM    PGMOPSW+X04,XC0     INSTR LNG SIX, PGM CHK         GTF
         BCR   X01,WKR12           NOT ILC FOUR                   GTF
         TM    PGMOPSW+X04,X40     INSTR LNG TWO?                 GTF
         BCR   X01,WKR12           ELIMINATE TWO-BYTE INSTR       GTF
*                                  (BOTH AF & 44 4-BYTE INSTR)    GTF
         L     WKR13,PGMOPSW+X04   2ND HALF OF OLD PSW IS NSI     GTF
         SH    WKR13,PCK4          BACK UP TO INSPECT OP CODE     GTF
* TEST THE CONTEXT: AF0-C-0-DDD, 470-C-0-DDD ONLY GOOD COMBINATION GTF
         CLI   X4(WKR13),PCBRANCH  IS NXT INSTR BRANCH-NOP?    GTF 0625
         BCR   PCUNEQ,WKR12        NO,GO TO TRUE PROG. CHK        GTF
         TM    X5(WKR13),XF0       ARE BITS 8-11 ZERO             GTF
         BCR   X5,WKR12            NON-ZERO, NOT A NO-OP          GTF
         CLI   N0(WKR13),PCMONCAL  IF OP CODE X'AF'?              GTF
         BE    PCGONSI             AF OP CODE, THEN NOP BRANCH    GTF
*                                  IS PROOF OF MONITOR CALL       GTF
* TEST THE CONTEXT: 44-00-0-PTR, 47-00-0-DDD ONLY GOOD COMBINATION GTF
         CLC   N0(X2,WKR13),PCEXEC NO- IS IT THE EXECUTE?         GTF
         BCR   PCUNEQ,WKR12        NOT EXECUTE, NO MONITOR CALL   GTF
         TM    X2(WKR13),XF0       BASE MUST BE ZERO FOR CMT      GTF
         BCR   X5,WKR12            NON ZERO, BAD CMT              GTF
         LH    WKR13,X2(WKR13)     GET CMT PTR (2ND HW)           GTF
         CLC   N0(X2,WKR13),PCKAF00   2ND HALF WD INDICATE CMT?   GTF
         BCR   PCUNEQ,WKR12        NO- NOT A MONITOR CALL         GTF
* GOOD MONITOR CALL ASSUMED AT THIS TIME; TREATED AS NO-OP.       GTF
PCGONSI  EQU   *                                                  GTF
         MVC   104(8),NPGMPSW      SEND PGM CHKS TO NPGMINT       GTF
         LM    WKR12,WKR13,RESPARE   RESTORE REG 12 & 13          GTF
         LM    14,15,LOCOR170      RESTOR  REG 14 & 15            GTF
         LPSW   PGMOPSW            RETURN TO NSI                  GTF
MCEXIT   EQU   *                   ORDINARY PGM CHECK             GTF
         AIF   (&M65MP NE 1).MPIC12
         CLI   X2B,X12             IS INTERRUPT CODE = 12           MCS
         BNE    NOT12IC
         MVC   X34(X4),COMPSA+X6C  SET PGM NEW IN MCH OLD           MCS
          MVC   X68(X8),NPGMPSW   SEND PGM CHKS TO NPGMINT    IE   1718
         LM    WKR12,WKR13,RESPARE   RESTORE REG 12 & 13      IE   1718
         LM    14,15,LOCOR170
         LPSW  X30
NOT12IC  EQU   *
.MPIC12  ANOP
         STM   0,13,RESPARE+8      SAVE GPR'S IN RE SPARE AREA
         MVC   RESPARE+D64(X8),LOCOR170    SAVE ORIG REGS
         MVC   RESPARE(8),40       SAVE PGM OLD PSW
         SPACE 1
         LA    WKR0,X'A03'         SET UNIQUE WAIT STATE CODE
         TM    COMNUC+4,X'80'      HAS ERROR RECORD BEEN WRITTEN    MCS
         BC    ON,NPGM03           BRANCH YES LEAVE MSG ALONE       MCS
         MVI   NPGMSG+6,C'S'       SET SEREP CODE                   MCS
NPGM03   EQU   *                                                    MCS
         MVC   COMMSG0+X1(D16),NPGMSG    MOVE MSG TO BUFFER         MCS
         EJECT
******************************************************************  MCS
*                      STAND ALONE I/O ROUTINE                    * MCS
*                                                                 * MCS
*        ISSUE I/O TO MASTER OR ALTERNATE CONSOLE                 * MCS
*                                                                 * MCS
*        ENTRY FROM - 0A AND 1A TO ISSUE 6W/S                     * MCS
*                                                                 * MCS
*                   - 20 TO ISSUE 1W AND 2W                       * MCS
*                                                                 * MCS
*                   - NUC TO ISSUE 3W/S, 4W/S, 6W/S, 10W/S, 11W/S * MCS
*                                                                 * MCS
*                   - 01 TO ISSUE 13W/S, 14W/S                    * MCS
*                                                                 * MCS
*            MESSAGE IS PLACED IN COMMSG0 BUFFER -- 16 BYTES      * MCS
*                                                                 * MCS
*            WAIT STATE CODE IS PLACED IN REG 0            S      * MCS
*                                                                 * MCS
******************************************************************  MCS
NEMCEX01 EQU   *                                                    MCS
STANDAIO EQU   *
         L     CVTREG,COMCVT       CVT PTR                          MCS
         USING UCMDSECT,WKR1                                       1450
         L     WKR1,CVTCUCB        ADDR OF CONSOLE UCM              MCS
         SPACE 3
         AIF   (&MCSASR EQ 1).MCS3
         LM    WKR3,WKR5,UCMVEA        ENTRY POINT& SIZE FIELDS    1450
         DROP  WKR1
         USING UCMLIST,WKR3                                        1450
NXTENTRY EQU   *                                                    MCS
         TM    UCMATR,X90              COMPARE WTO SUPPORT+ DEV    1450
         BO    GETCUAA             YES BRANCH                       MCS
NXTMPENT EQU   *                                              IE  50588
         BXLE  WKR3,WKR4,NXTENTRY  GET NEXT ENTRY                   MCS
         B     NSEREP00            EXIT                             MCS
GETCUAA  EQU   *                                                    MCS
         L     WKR7,UCMUCB         GET UCB                    IE  50588
         AIF   (&M65MP NE 1).NMCS2D
         TM    COMMSF,X3           CHECK FOR MULTI-SYSTEM MODE CD 50588
         BNZ   GETCUAA1            NO-ONE CPU (PARTITIONED)   CD  50588
*   MULTIPROCESSING SYSTEM
         TM    COMMSF,X3           CHECK FOR SHARED MODE      IE  50588
         BNZ   GETCUAA1            NO-ONE CPU                 IE  50588
*   MULTISYSTEM- THERE IS TWO ACTIVE CONSOLES,IF MULTISYSTEM AND NO MCS
         SH    WKR7,PCK4            FOR UCB MPFLAGS=UCB-4     IE  50588
         CLI   CPUID,XC1           EXECUTING ON CPU A         IE  50588
         BNE   NEXTCPU             NO-TEST OTHER CPU          IE  50588
         TM    X0(WKR7),X01        CPUA HAS THIS DEVICE PATH  IE  50588
         BZ    GETCUAA1            YES - GET CUA              IE  50588
NEXTUCME EQU   *                                              IE  50588
         TM    IORCC,X01           BOTH UCMS TESTED           IE  50588
         BO    NSEREP00            YES-NO AVAIL MP PATH       IE  50588
         OI    IORCC,X01           SET FIRST UCM TESTED       IE  50588
         B     NXTMPENT            GET NEXT MP UCM            IE  50588
NEXTCPU  EQU   *
         CLI   CPUID,XC2           EXECUTING ON CPU B         IE  50588
         BNE   NEXTUCME            NO - NEXT UCM              IE  50588
         TM    X0(WKR7),X2         CPUB HAS THIS DEVICE PATH  IE  50588
         BO    NEXTUCME            NO - NEXT UCM              IE  50588
GETCUAA1 EQU   *                                              IE  50588
.NMCS2D  ANOP
         LA    WKR1,TYPEWRIT       1052 CCW                   IE  50588
         LH    WKR7,X4(WKR7)       CUA OF CONSOLE DEVICE      IE  50588
         N     WKR7,CON7FF         REMOVE UNUSED BITS         IE  50588
         AGO   .NMCS6           NO MCS
.MCS3    ANOP
         EJECT
*        MCS   CUA SEARCH ROUTINE                                   MCS
MCSSUPT  EQU   *                                                    MCS
         OI    IORCC,SWITCH2       MCS IN SYSTEM                    MCS
         S     WKR1,DFOUR          GET ADDR UCM BASE                MCS
         L     WKR1,X0(WKR1)       LOAD ADDR INTO REG               MCS
         LTR   WKR1,WKR1           ADDR NOT ZERO                    MCS
         BZ    NSEREP00            IF ZERO ERROR BRANCH             MCS
         USING MCSUCM,WKR1             PREFIX BASE                 1450
         L     WKR3,UCMMCENT     GET MSTR CONSOLE UCM ENTRY        1450
         USING UCMLIST,WKR3
         CLC   UCMCOMPC+X1(X3),HCCCWADR IS MASTER COMPOSITE?       1450
         BE    NMSTCOM             NO, BRANCH                       MCS
         L     WKR3,UCMCOMPC           ADDR OF OUTPUT COMPOSITE    1450
NMSTCOM  EQU   *                                                    MCS
         LA    WKR6,MSCCWADR       MASTR OR ALT CCW ADDR            MCS
         BAL   WKR5,CHKAVAIL       CHECK CONSOLE AVAILABLE          MCS
         TM    IORCC,SWITCH1       IS CONSOLE SWITCH OFF            MCS
         BZ    HARDCOPY            NO BRANCH BYPASS--BYPASS ALT     MCS
         L     WKR3,UCMMCENT     GET MSTR CONSOLE UCM ENTRY        1450
         CLC   UCMOAOEN+X1,HCCCWADR    CHK FOR COMPOSITE CONSOLE   1450
         BNE   COMPOSIT            BRANCH IF NOT ZERO               MCS
         L     WKR3,UCMALTEN           GET ALTERNATE CONSOLE UCM   1450
         B     ARCOMP                                               MCS
COMPOSIT EQU   *                                                    MCS
         L     WKR3,UCMOAOEN           GET ALTERNATE OUTPUT UCM    1450
ARCOMP   EQU   *
         BAL   WKR5,CHKAVAIL       CONSOLE AVAILABLE                MCS
HARDCOPY EQU   *                                                    MCS
         TM    UCMSFLGS,UCMSYSB        HARDCOPY REQUIRED           1450
         BZ    CUACHK           NO, TO PRINT                       2124
         TM    UCMSFLGS,UCMSYSG        IS SYSLOG HARDCOPY          1450
         BO    CUACHK              YES, TO PRINT                   2124
         NI    IORCC,SWITOFF       CLEAR CONSOLE SWITCH             MCS
         L     WKR3,UCMHCUCM           GET HARDCOPY UCM ENTRY      1450
         LA    WKR6,HCCCWADR       HARDCOPY CCW ADDR                MCS
         BAL   WKR5,CHKAVAIL       CHECK AVAILABLE                  MCS
         TM    IORCC,SWITCH1       CONSOLE AVAILABLE                MCS
         BO    CUACHK              GET CUA                          MCS
         L     WKR1,HCCCWADR       HARDCOPY CCW ADDR                MCS
         LA    WKR1,X8(WKR1)       SKIP RING CCW ADDR               MCS
         ST    WKR1,HCCCWADR       STORE IT                         MCS
CUACHK   EQU   *                                                    MCS
         L     WKR1,MSCCWADR       MASTER CCW                       MCS
         LTR   WKR1,WKR1           IS IT ZERO ?               CD  50588
         BZ    WPRNTHCY            YES-CHECK HARDCOPY         CD  50588
         LH    WKR7,MSTMCS         CUA                              MCS
         B     WPRNT               WAIT PRINT ROUTINE               MCS
CHKAVAIL EQU   *                                                    MCS
         LTR   WKR3,WKR3           TEST FOR ZERO                    MCS
         BZ    HARDCOPY            YES, CHECK HARD COPY             MCS
CHKAVAI  EQU   *                                                    MCS
         LR    WKR4,WKR1           SAVE MCS PREFIX                  MCS
         TM    UCMSTS,UCMTA            OPEN PENDING                1450
         BO    UCBADD              YES BRANCH                       MCS
         TM    UCMATR,UCMUF            DEVICE ACTIVE               1450
         BO    UCBADD              YES BRANCH                       MCS
         OI    IORCC,SWITCH1       TURN SWITCH ON                   MCS
         BR    WKR5                RETURN                           MCS
UCBADD   EQU   *                                                    MCS
         BAL   WKR2,GETCUA         GET CUA                          MCS
         STH   WKR9,X4(WKR6)       STORE CONSOLE CUA                MCS
         CLI   X12(WKR3),X40       CONSOLE=COMMUNICATIONS     IE  50588
         BE    CLCCWADR            YES-CLEAR CCW ADDRESS AREA CD  50588
         ST    WKR1,0(WKR6)        STORE CCW ADDR                   MCS
CCWADCLD LR    WKR1,WKR4           RESTORE MCS PREFIX         CD  50588
         BR    WKR5                RETURN                           MCS
CLCCWADR EQU   *
         SR    WKR2,WKR2           CLEAR REG FOR CCW STORE    CD  50588
         ST    WKR2,0(WKR6)        STORE ZERO IN CCW ADDRESS  CD  50588
         B     CCWADCLD            CONTINUE PROCESSING        CD  50588
         SPACE 3
GETCUA   EQU   *
         L     WKR8,UCMXB              ADDR OF GRAPHICS DCM        1450
* THE ID=19GR IN COLUMNS 67-71 IDENTIFIES THE CHANGES TO IGFASRN1
* MACRO REQUIRED TO SUPPORT ANY GRAPHICS CONSOLE. THE DCM CONTAINS
* A POINTER FO THE CCW LIST OF A PARTICULAR GRAPHICS DEVICE SUCH
* AS A 2250,2260 OR ANY FUTURE DEVICES TO BE SUPPORTED AS CONSOLES
* ON THE MODEL 65-UNIPROCESSOR OR MULTIPROCESSOR. THIS CHANGE
* ALLOWS THE STAND ALONE I/O METHOD OF THE MCH/65 COMPONENTS TO BE
* INDEPENDENT OF THE GRAPHICS DEVICE BEING USED AS A CONSOLE.
         L     WKR3,UCMUCB             GET CONSOLE UCB
         LA    WKR1,TYPEWRIT           CONSOLE PRINTER
         CLI   D18(WKR3),X10       IS CONSOLE A DISPLAY DEVICE      MCS
         BNE   GETCUA10            NO, BRANCH                       MCS
         LTR   WKR8,WKR8     TEST FOR VALID ADDRESS               60894
         BZ    NODCM               NO DCM FOR GRAPHICS DEVICE  @S67856P
         L     WKR1,N20(WKR8)          ADDR OF 1ST CCW             19GR
         SR    WKR9,WKR9               CLEAR REG                   19GR
         IC    WKR9,N20(WKR8)          OFFSET OF CCW TO BE        36641
         LR    WKR8,WKR1               MODIFIED BY MCH.            19GR
         BCT   WKR9,GETCCW             DECREASE BY 1 TO GET PROPER 19GR
GETCCW   EQU   *                                                   19GR
         LA    WKR8,N8(WKR8)           POINT TO NEXT CCW
         BCT   WKR9,GETCCW             CORRECT ONE REACHED.        19GR
         LA    WKR9,COMMSG0       ADDR OF BUFFER-3 BYRES          36641
         STH   WKR9,N2(WKR8)           IS NOW SET INTO            36641
         SRL   WKR9,N16                PROPER CCW                 36641
         STC   WKR9,N1(WKR8)           SET HIGH BYTE OF ADDR      36641
         MVI   N7(WKR8),N28            LAST BYTE CCW=COUNT OF 28   19GR
GETCUA10 EQU   *                                                    MCS
         LH    WKR9,X4(WKR3)       CUA OF CONSOLE DEVICE            MCS
         N     WKR9,CON7FF         REMOVE UNUSED BITS               MCS
         BR    WKR2                RETURN                           MCS
NODCM    OI    IORCC,SWITCH1       SET NOT AVAILABLE IND       @S67856P
         B     CCWADCLD            RETURN TO MAINLINE          @S67856P
.NMCS6   ANOP
         EJECT
*        WAIT STATE MESSAGES TEST - START I/O ROUTINE               MCS
*        ENTRY CRITERIA -- REG 7 = CUA                              MCS
*                            REG 1 = ADDRESS OF CCW                 MCS
WPRNT    EQU   *                                                    MCS
  AIF  ((&MCSASR NE 1) OR (&M65MP NE 1)).NMCPVD  BOTH ON
         SH    WKR3,PCK4           GET UCB MP FLAGS               62299
WPRNT1   EQU   *                                                  62299
.NMCPVD   ANOP                                                    62299
         XC    COMMSG0+N26(N2),COMMSG0+N26   CLR LAST TWO BYTES
         CLI   COMMSG0+N6,CS                 IS IT S MSG
         BNE   WPRNT2                        NO
         MVC   NSAVEIO(N22),COMMSG0+N6       MOVE S
         MVC   COMMSG0+N8(N22),NSAVEIO        AND TEXT
         MVI   COMMSG0+N6,CW                 SET W IN MSG
WPRNT2   EQU   *
  AIF  ((&MCSASR NE 1) OR (&M65MP NE 1)).NMCSMP  BOTH ON
         CLI   CPUID,XC1           EXECUTING ON CPU A         IE  50588
         BNE   NEXTCPU1            NO - NEXT CPU              IE  50588
         TM    X0(WKR3),X01        CPUA HAS THIS DEVICE PATH  IE  50588
         BZ    WPRNT3              YES - WRITE MSG            IE  50588
         B     WPRNT2A            CONTINUE                    IE  50588
NEXTCPU1 EQU   *                                              IE  50588
         CLI   CPUID,XC2           EXECUTING ON CPU B         IE  50588
         BNE   WPRNT2A            CONTINUE                    IE  50588
         TM    X0(WKR3),X2         CPUB HAS THIS DEVICE PATH  IE  50588
WPRNT2A  EQU   *
         AIF   (&MCSASR NE 1).NMCS2V
         BNZ   TRYHCY             TEST FOR HARDCOPY           IE  50588
.NMCS2V  ANOP
         AIF   (&MCSASR EQ 1).MCS2
         BNZ   NEXTUCME           NEXT UCM IN MP              IE  50588
.MCS2    ANOP
WPRNT3   EQU   *
.NMCSMP  ANOP
***   ISSUE WAIT STATE MESSAGE
         L     WKR3,NLCNT         SET LOOP TIO COUNT               MCS
         LA    WKR1,N0(WKR1)      CLEAR HI-ORDER BYTE         IE  44631
         ST    WKR1,D72           SET CCW ADDR IN CAW              MCS
WTIORTN  EQU   *
         TIO   X0(WKR7)            TEST I/O                         MCS
         BC    BUSY,WTIOBUSY       BUSY-LOOP                        MCS
         BC    X9,WSIORTN          AVAIL OR NOT-OPER --TRY SIO      MCS
*        CSW   STORED                                               MCS
         TM    D68,X38             CUE,BUSY OR CE                 21961
         BNZ   WTIOBUSY            YES - SENSE ERROR          IE  50588
WSIORTN  EQU   *                                                    MCS
         SIO   X0(WKR7)            START I/O                        MCS
         AIF   (&MCSASR NE 1).NMCS4                                 MCS
TRYHCY   EQU   *
         TM    IORCC,SWITCH2       MCS IN SYSTEM                    MCS
         BO    WPRNTHCY            YES, BRANCH PRINT HARDCOPY       MCS
.NMCS4   ANOP                                                       MCS
         B     NSEREP00            NO, EXIT                         MCS
WTIOBUSY EQU   *                                                    MCS
         BCT   WKR3,WTIORTN        LOOP TILL ZERO COUNT             MCS
         B     WSIORTN             TRY SIO                          MCS
         AIF   (&MCSASR NE 1).NMCS5                                 MCS
WPRNTHCY EQU   *                                                    MCS
         L     WKR1,HCCCWADR       HARD COPY CCW                    MCS
         LTR   WKR1,WKR1           IS IT ZERO                       MCS
         BZ    NSEREP00            YES, BRANCH                      MCS
         LH    WKR7,HCTMCS         HARD COPY CUA                    MCS
         MVI   IORCC,X0            TURN SWITCH OFF                  MCS
  AIF  ((&MCSASR NE 1) OR (&M65MP NE 1)).NMCPEN  BOTH ON          62299
         B     WPRNT1              PRINT TO HARD COPY             62299
     AGO .NMCS5                                                   62299
.NMCPEN   ANOP                                                    62299
         B     WPRNT               PRINT TO HARD COPY               MCS
.NMCS5   ANOP
         SPACE 3
*              MESSAGE CCW@S                                        MCS
*              1052 CONSOLE   PRINTER                               MCS
TYPEWRIT CCW   X'0B',0,X'60',1     RING CONSOLE ALARM               MCS
         CCW   X'09',COMMSG0,X'20',28   TYPE MSG                    MCS
         AIF   (&MCSASR NE 1).NMSCVD
         DS    0F                                                   MCS
DFOUR    DC    XL4'4'
MSCCWADR DC    XL4'0'              4 BYTES MC CCW LIST              MCS
MSTMCS   DC    XL2'0'              MCS CUA MASTER CONSOLE           MCS
         DS    0F                                                   MCS
HCCCWADR DC    XL4'0'              4 BYTES HC CCW LIST              MCS
HCTMCS   DC    XL2'0'              HARD COPY CUA                    MCS
.NMSCVD  ANOP
D64      EQU   64                                                   MCS
X90      EQU   X'90'                                                MCS
X4       EQU   4                                                    MCS
SWITCH2  EQU   X'04'                                                MCS
SWITOFF  EQU   X'7F'                                                MCS
X30      EQU   X'30'                                                MCS
X9       EQU   9                                                    MCS
X5C      EQU   X'5C'                                                MCS
X68       EQU   X'68'                                         IE   1718
X8       EQU   8                                                    MCS
X38      EQU   X'38'
X10      EQU   X'10'                                                MCS
X12      EQU   X'12'                                                MCS
X40      EQU   X'40'                                                MCS
D18      EQU   18                                                   MCS
X1       EQU   1
X0       EQU   0                                                    MCS
X2       EQU   2                                                    MCS
X7       EQU   7                                                    MCS
D72      EQU   72                                                   MCS
D68      EQU   68                                                   MCS
SWITCH1  EQU   X'80'
XC       EQU   X'0C'
D12      EQU   12
X3       EQU   3
X80      EQU   X'80'                                               M67
X32      EQU   X'32'
X20      EQU   X'20'                                               M67
D14      EQU   14                                                  MEXT
D44      EQU   44                                                  MEXT
DEBREG   EQU   6                                                   MEXT
D32      EQU   32                                                  MEXT
X6       EQU   6                                                   MEXT
D19      EQU   19                                                  MEXT
D15      EQU   15                                                  MEXT
N0       EQU   0
N1       EQU   1
N2       EQU   2
N7       EQU   7
N6       EQU   6
N8       EQU   8
N20      EQU   20
N22      EQU   22
N26      EQU   26
N28      EQU   28
CS       EQU   C'S'
CW       EQU   C'W'
XC1      EQU   X'C1'
XC2      EQU   X'C2'
         SPACE 3
***********************************************************************
         EJECT
*      OBR EXIT ROUTINE
*
*  THIS ROUTINE IS USED WHEN OBR HAS BEEN IN CONTROL AND A MCI THEN
*  OCCURRED.  OBR MAY HAVE BEEN THE CURRENT TCB OR THERE COULD HAVE
*  BEEN A TASK SWITCH.  IN EITHER CASE, THIS ROUTINE IS EXECUTED.
*  IT SIMULATES THE TERMINATION (RETURNS REQUEST ELEMENT  TO FREELIST)
*  OF OBR, SO THAT THE MCI RECORD WRITTEN BY ASR IS NOT OVERLAID BY
*  THE RECORD TO BE WRITTEN BY OBR.
         SPACE
OBREXIT  EQU   *
         L     BRNUC,116            GET ASR BASE FOR ADDRESSABILITY
         L     WKR1,COMSIRB          PUT RQE IN PARM REG 1
         L     WKR1,XRBQ(WKR1)
         SVC   15
         SVC   3
         EJECT
**************************  E Q U A T E S  ****************************
         SPACE 3
TWOVD    EQU   2                                                   MP1
VDOCT    EQU   X'80'                                               MP1
ZEROVD   EQU   0                                                   MP1
IOFLG    EQU   X'F'               I/O SEREP INDICATOR              MCS0
MCICODE  EQU   115                LOCATION OF MCI INTERRUPT CODE   MCS0
WKR0     EQU   0
WKR1     EQU   1
WKR2     EQU   2
WKR3     EQU   3
WKR4     EQU   4
WKR5     EQU   5
WKR6     EQU   6
WKR7     EQU   7
WKR8     EQU   8
WKR9     EQU   9
WKR10    EQU   10
WKR11    EQU   11
WKR12    EQU   12
WKR13    EQU   13
WKR14    EQU   14
WKR15    EQU   15
BRMOD    EQU   15                  BASE REG FOR ASR MODULES
BRNUC    EQU   14                  BASE REG FOR ASR NUCLEUS
CVTREG   EQU   10                  POINTER TO COMM VECTOR TABLE
X01      EQU   1
X03      EQU   3
X04      EQU   4
X5       EQU   5
PCUNEQ   EQU   7                   NOT EQUAL (AFTER COMPARE)
PGMOPSW  EQU   X'28'
PCBRANCH EQU   X'47'               BRANCH OP CODE                 GTF
PCMONCAL EQU   X'AF'               MONITOR CALL AF                GTF
XC0      EQU   X'C0'
XF0      EQU   X'F0'
LOCOR170 EQU   X'170'              LOW CORE WORK AREA
NRSV     EQU   X'174'              SV AREA FOR GR14 AT ENTRY TO ASRNUC
NBASESV  EQU   X'178'              SV AREA FOR ASRNUC BASE REG
LOGSIZE  EQU   176                 SIZE OF CPU LOG-OUT FOR MODEL 65
PSASIZE  EQU   128                 SIZE OF PSA AREA
PSABEGIN EQU   0                   BEGINNING OF PSA AREA
LOGBEGIN EQU   128                 BEGINNING OF CPU LOG-OUT AREA
IOLOGSIZ EQU   24                  I/O LOG SIZE
IOLOGBEG EQU   LOGBEGIN+LOGSIZE    BEGINNING OF I/O LOG-FOLLOWS CPU LOG
CKSUMLOC EQU   X'A6'               CHECK SUM LOCATION IN THE LOG-OUT
CKSUMBIT EQU   X'40'               CHECK SUM BIT IS BIT 1 IN THE BYTE
XRBQ     EQU   24             ADDR OF REQUEST ELEMENT IN SIRB
* CONSTANTS FOR ASR MODULE LOADER ROUTINE
SEEK     EQU   07                  SEEK COMMAND CODE
READR0   EQU   22                  READ RECORD ZERO COMMAND CODE
SRCHIDEQ EQU   49                  SEARCH ID EQUAL COMMAND CODE
TIC      EQU   08                  TRANSFER IN CHANNEL COMMAND CODE
READDATA EQU   06                  READ DATA COMMAND CODE
SIOGO    EQU   8
         SPACE 5
********************  D O U B L E   W O R D S  ************************
         SPACE 3
         DS    0D
NMKENAB  DC    XL5'0004000000'     ONLY MCK
         DC    AL3(NU0001)                 ENABLED PSW
NPGMPSW  DC    XL5'0004000000'     ENABLED  PROGRAM NEW
         DC    AL3(NPGMINT)                   PSW FOR ASR PGM INTRPTS
NMKEXPSW DC    XL5'0'              MCK NEW PSW POINTING TO ASR
         DC    AL3(NMKEX1)           NUCLEUS EMERGENCY EXIT
WORK0    EQU   0
NABSADR  DC    XL8'0'              ABSOLUTE BBCCHHR OF THE BEGINNING OF
*                                  THE ASR MODULE DATA SET
NCHPGM1  CCW   SEEK,NSEEKARG,X'60',6         CCW LIST--SEEK
         CCW   READR0,NRECORD0,X'60',4               --READ RECORD ZERO
NCHPGM1A CCW   SRCHIDEQ,NSRCHARG,X'60',5             --SEARCH ID EQUAL
         CCW   TIC,NCHPGM1A,X'60',1                  --TIC
         CCW   READDATA,NMODENT,X'20',3072           --READ DATA
         SPACE 1
NSNSPGM  CCW   4,NLDRSNS,X'20',6   SENSE CCW
         SPACE 2
NSVCSW   DC    1D'0'               CSW SAVE AREA FOR MOD LDR SUBRTN.
NSEEKARG DC    XL8'0'              BBCCHHR ADDRESS FOR CCW LIST
NSRCHARG EQU   NSEEKARG+2
NMK2ENAB DC    XL5'0004000000'     ENABLE FOR MCI ONLY PSW
         DC    AL3(NMK2ND00)       IN 2ND MCI HANDLER ROUTINE
NWAITPSW DC    XL8'0002000000000000'    WAIT PSW
         SPACE 5
****************************  W O R D S  ******************************
         SPACE 3
         DS    0F
NADPTHCL DC    A(NCLEX01)          EXITS FOR PATH CLEAR
NADCLEME DC    A(NEMCEX01)         EMERGENCY EXIT FROM CLR SYSRES CHNNL
NMODBASE DC    A(NMODENT)          MODULE ENTRY POINT
NLCNT    DC    XL4'00A0000'        LOOP TIO COUNT 10 MILLION
NCOMAREA DC    A(NMODENT+3072)     BEGINNING ADDR OF COMM AREA
NLOOPC   DC    XL4'000FFFFF'       TIO LOOP COUNT FOR MOD LDR SUBRTN
N3MKAD   DC    A(NMK3RD)           ADDR OF 3RD MCK HANDLER
WTOBUF   DC    50F'0'              WTO BUFFER AREA         DR       MCS
CON7FF   DC    X'000007FF'
         SPACE 5
***************************  T A B L E S  *****************************
         SPACE 3
         DS    0D
NMODSEQ  DC    XL2'0'         *****
NSAVEIO  DC    XL200'0'            I/O INTERRUPT SAVE QUEUE
VALUE6   DC    H'6'
PCK4     DC    H'4'                CONSTANT OF 4
         SPACE 5
NMK2MS   DC    C'IGF003W UNEX MCI'                                  MCS
NPGMSG   DC    C'IGF004W PGM CHCK'                                  MCS
NLDRMSG  DC    C'IGF006W I/O ERR '                                  MCS
N65MSG   DC    C'IGF010S NOT M/65'                                  MCS
NNIPMSG  DC    C'IGF011S MCI NIP '                                  MCI
* MCH NUCLEUS  WAIT STATE MESSAGE SWITCH
IORCC    DC    X'00'
**             BIT 0     CONSOLE NOT AVAILABLE (MCS)
**             BIT 1-4   UNUSED
**             BIT 5     MCS IN SYSTEM
**             BIT 6     UNUSED
**             BIT 7     FIRST UCM IN A NON-MCS MULTISYSTEM IS TESTED
         SPACE 3
NIDBUF   DC    C' CPU ID '                  MESSAGES               MP1
NIDBUF1  DC    X'F1'                   CPU ID NUMBER               MP1
NSVCKSUM DC    X'00'               SAVE AREA FOR CHECK SUM BIT
XECKID   DC    C'0B'        ********
NSWITCH  DC    XL1'0'    BIT       FUNCTION FOR ON CONDITION
*                        0         ASRNUC IN CONTROL
         SPACE 2
NLDRSNS  DC    XL6'0'              READ IN AREA FOR SENSE DATA
NRECORD0 DC    XL4'0'              READ IN AREA FOR RECORD 0
NSNSSW   DC    X'00'     BIT       MEANING FOR ON CONDITION
*                        0         SENSE FOR ALTERNATE TRACK
PCKAF00  DC    X'AF00'             CLASS MASK TABLE ENTRY         GTF
PCEXEC   DC    X'4400'             EXECUTE IS FOLLOWED BY ZEROES  GTF
MOD65    DC    X'0065'            MODEL ID
****  MAINTENANCE  AREA  ***
MAINTID DC CL8'IGFNUC00' CORE IDENTIFIER
MAINT    DC S(*) MODULE DISPLACEMENT
LEVEL  DC  X'51'  MODULE LEVEL
RELE DC  X'21' RELEASE NUMBER
         DC 10F'0' ADDITIONAL SPACE
         EJECT
         AIF   (&MCSASR NE 0).NMCS14                                MCS
         ORG   IGFN0000+2048
.NMCS14  ANOP                                                       MCS
         AIF   (&MCSASR NE 1).NMCS2                                 MCS
         ORG   IGFN0000+2448                                        MCS
.NMCS2   ANOP                                                       MCS
NMODENT  EQU   *
         EJECT
***********************************************************************
*                                                                     *
*****  CLEAR CHANNEL PATH TO SYSRES AND CONSOLE/ASR TERMINATOR  *******
*                                                                     *
***********************************************************************
         SPACE 2
         DS    0H
IGFN0002 EQU   *                   THIS IS DUMMY ENTRY--MCH NUCLEUS
         BC    0,*+4               ENTERS CLR CHNNL ENTRY POINT
         SPACE 3
********  ENTRY FOR CLEAR CHANNEL PATH TO SYSRES AND CONSOLE  *********
         SPACE 1
* GPR USAGES FOR THIS ROUTINE ARE...                                  *
* GPR 1 --CONTAINS CUA OF CURRENT DEVICE UNDER TIO OPERATION          *
* GPR 2 --CONTAINS CURRENT POINTER TO I/O INTERRUPT SAVE QUEUE        *
* GPR 3 --CONTAINS CURRENT TIO LOOP COUNT                             *
* GPR 4 --LINK REG TO QUEUE SAVED I/O INTERRUPT SUBROUTINE            *
* GPR 7 --LINK REG TO CSW ERROR CHECK SUBROUTINE                      *
* GPR 8 --CONTAINS ADDRESS OF CURRENT UCB                             *
* GPR 9 --CONTAINS ADDRESS OF CURRENT UCB POINTER                     *
* GPR 10--BASE REG FOR THE CVT DSECT                                  *
* GPR 14--BASE REG FOR ASR NUCLEUS                                    *
* GPR 15--BASE REG FOR THIS ROUTINE                                   *
***********************************************************************
         SPACE 1
* INITIALIZATION
IGFN0001 EQU   *
         L     WKR6,CVTSYSAD       GET SYSRES UCB ADDR FROM CVT
         MVC   NDEVICE(2),UCBCUA(WKR6)       GET SYSRES CUA
         NI    NDEVICE,X'07'       CLEAR HI-ORDER BITS IN CHNNL BYTE
         MVC   NDEVICE+2(1),UNITTYPE(WKR6)   SAVE UNIT TYPE
         MVC   COMSYSRS(4),NDEVICE      SAVE CUA IN COMM AREA
         AIF   (&M65MP NE 1).NMP20                                   MP
         TM    COMMSF,3            CHK PARTITIONED OR RECONFIGURED   MP
         BNZ   NCLR080             GO IF SO                          MP
         SR    WKR3,WKR3                                             MP
         IC    WKR3,NDEVICE        GET CHL NUMBER FROM CUA           MP
         SLL   WKR3,1              AND DOUBLE                        MP
         TM    CHRECNUC-IPLPSW(WKR3),X'78' CHK IND. OF NOT-AVAIL.    MP
         BNZ   NEROUT1             GO IF NOT AVAILABLE              MCS
NCLR080  EQU   *                                                     MP
.NMP20   ANOP                                                        MP
         ST    WKR2,NIOQADDR       SAVE STARTING IOQ ADDR
         L     WKR9,CVTILK2        ADDR OF 1ST TWO BYTE UCB POINTER
         MVI   NSW2,X'00'          CLEAR PGM SWITCH
         XC    NSTATSV(2),NSTATSV  CLEAR CSW STATUS SAVE AREA
         MVC   NCUTEST,NDEVICE+1   GET UA PORTION
         CLI   NDEVICE+2,N2301     IS SYSRES A 2301 DRUM
         BC    EQ,NCU5BITS         --YES-CU ADDR IS HI-ORDER 5 BITS
*                                  --NO-CU ADDR IS HI-ORDER 4 BITS
         NI    NCUTEST,X'F0'       SET CU ADDR
         MVI   NCUMASK,X'F0'        AND CU MASK
         SPACE 2
*
         SPACE 5
NCLR2860 LH    WKR1,NDEVICE        SET CUA IN WORK REG
****************
* ISSUE TIO TO DEVICE--DETERMINE INITIAL STATUS
         TIO   0(WKR1)             TIO TO DEVICE
         BC    NOTOPER,NEROUT1   -- NOT OPERATIONAL                 MCS
         BC    BUSY,NSCNUCB0       --BUSY--GO TO SCAN UCB SUBR
         BC    AVAIL,NCLROK01      --AVAILABLE--PATH IS CLEAR
*                                  --CSW STORED--BEGIN CSW ANALYSIS
NCLR015  BAL   WKR7,NCSWERCK       GO TO CSW ERROR CHK SUBROUTINE
         SPACE 1
*        RETURN TO HERE--CSW HAS NO CATASTROPHIC ERRORS
         TM    NCSWUS1,X'2C'       TEST CE,CUE,DE--ON/OFF/MOXED
         BC    ALLON,NCLR023         ALL ARE ON
         BC    ALLOFF,NCLR002        ALL ARE OFF--NOW CHK FOR B,SM
*
         TM    NCSWUS1,X'0C'       TEST CE,DE--ON/OFF/MIXED
         BC    ALLON,NCLR023         BOTH ARE ON (CE,DE,NOT CUE)
         BC    ALLOFF,NCLR003        BOTH ARE OFF (CUE ON ALONE)
*
         TM    NCSWUS1,X'04'       TEST DE--ON/OFF
         BC    ALLON,NCLR023         ON (DE,NOT CE,CUE DON'T CARE)
*        DE IS OFF, CE IS ON, CUE DON'T KNOW YES
         TM    NCSWUS1,X'20'       TEST CUE--ON/OFF
         BC    ALLON,NCLR004         ON (CE,CUE,NOT DE)
         SPACE 1
*        CE IS ON ALONE--MUST NOW GIVE TIO TO DEVICE FOR DE
         OI    NUSSAVE,X'08'       SET CE IN CSW UNIT STATUS SAVE BYTE
         SPACE 2
* NOW ISSUE TIO TO DEVICE FOR POSSIBLE PENDING DE
         SPACE 1
NTIOSYS1 L     WKR3,NCNTR1         INITIALIZE LOOP COUNT
NTIOSYS2 TIO   0(WKR1)             TIO TO DEVICE
         BC    NOTOPER,NEROUT1   -- NOT OPERATIONAL                 MCS
         BC    BUSY,NEROUT1      -- ERROR                           MCS
         BC    AVAIL,NCLR031       --AVAILABLE
         SPACE 1
*        CSW STORED--BEGIN CSW ANALYSIS
         BAL   WKR7,NCSWERCK       GO TO CSW ERROR CHK SUBROUTINE
         SPACE 1
*        RETURN TO HERE--CSW HAS NO CATASTROPHIC ERRORS
         SPACE 1
         TM    NCSWUS1,X'04'       TEST DE--ON/OFF
         BC    ALLOFF,NCLR006        OFF--GO CHK LOOP COUNT
NCLR032  EQU   *
         OC    NCSWUS1(2),NUSSAVE  OR STATUS SAVE BYTES INTO CSW
NCLR001  BC    15,NCLR023          GO Q THE INTRPT
         SPACE 1
NCLR006  BCT   WKR3,NTIOSYS2       REPEAT IF COUNT NOT ZERO
         SPACE 2
         BC    15,NEROUT1          COUNT ZERO                       MCS
         SPACE 2
NCLR031  EQU   *
         CLC   NSTATSV(2),CLEARUA  ANY STATUS TO Q
         BC    EQ,NCLROK03         BR IF NO
         BC    15,NCLR032          Q THE STATUS
         SPACE 1
NCU5BITS NI    NCUTEST,X'F8'       SET CU ADDR
         MVI   NCUMASK,X'F8'        AND CU MASK
         B     NCLR2860                                             MCS
         SPACE 1
         EJECT
* CUE ON ALONE--MUST TIO DEVICE FOR POSSIBLE AVAILABLE OR DE
         SPACE 2
NCLR003  OI    NUSSAVE,X'20'       SET CUE IN CSW UNIT STATUS SAVE BYTE
         BC    15,NTIOSYS1         GO ISSUE TIO TO DEVICE
         SPACE 2
*        CUE AND CE ON--MUST NOW GIVE TIO TO DEVICE FOR DE
NCLR004  OI    NUSSAVE,X'28'       SET CE+CUE IN CSW STATUS SAVE BYTE
         BC    15,NTIOSYS1         GO ISSUE TIO TO DEVICE
         SPACE 2
         SPACE 2
* INITIAL TIO TO DEVICE FOUND CE,CUE,DE ALL OFF.
* MUST NOW CHECK THE BUSY(B) AND STATUS MODIFIER(SM) BITS.
         SPACE 1
NCLR002  TM    NCSWUS1,X'50'       TEST B,SM--ON/OFF/MIXED
         BC    ALLOFF,NEROUT1    -- ERROR                           MCS
         BC    ALLON,NCUSCAN         BOTH ON--GO TO CNTRL UNIT SCAN
         TM    NCSWUS1,X'10'       TEST B--ON/OFF
         BC    OFF,NEROUT1       -- ERROR                           MCS
         SPACE 1
*        BUSY IS ON ALONE--THIS IMPLIES THAT THERE WILL BE A DE FROM
*        DEVICE. MUST GIVE TIO TO DEVICE FOR DE.
         BC    15,NTIOSYS1         GO ISSUE TIO TO DEVICE FOR DE
         EJECT
***********************************************************************
* THE INITIAL TIO TO DEVICE GAVE B+SM BITS. IF THE DEVICE DOES NOT    *
* SHARE A CONTROL UNIT, THEN THIS CU/DEVICE IS BUSY AND THE PGM MUST  *
* ISSUE TIO'S TILL DE COMES IN. IF CU IS SHARED, THIS MEANS...        *
* 1. CHANNEL IS AVAILABLE                                             *
* 2. CONTROL UNIT IS BUSY WITH EITHER...                              *
*        A. DEVICE                                                    *
*        B. SOME OTHER DEVICE ATTAHCHED TO THIS CONTROL UNIT          *
*                                                                     *
* THE PROGRAM MUST NOW FIND WHICH DEVICE IS KEEPING THE CU BUSY, BY   *
* ISSUING TIO'S TO ALL DEVICES ON THIS CU. THE CU SCAN IS MAINTAINED  *
* UNTIL ONE OF THE FOLLOWING OCCURS...                                *
* 1. CUE AND/OR DE IS RECEIVED                                        *
* 2. DEVICE IS FOUND NOT OPERATIONAL (CC=3)                           *
* 3. SCAN COUNT IS EXHAUSTED                                          *
***********************************************************************
         SPACE 3
NCUSCAN  CLI   NCUTEST,X'FF'       DOES DEVICE SHARE A CU
         BC    EQ,NTIOSYS1         --NO
         L     WKR3,NCNTR1         INITIALIZE SCAN LOOP COUNT
         OI    NSW2,X'20'          SET SAME CU AS DEVICE BIT
NCUSCAN1 BC    15,NSCNUCB1         GO TO SCAN UCB SUBR
         SPACE 2
*        RETURN TO HERE--CUA IS IN WKR1
NCUSCAN2 TIO   0(WKR1)             ISSUE TIO
         BC    NOTOPER,NCLR007       NOT OPERATIONAL
         BC    BUSY,NEROUT1      -- ERROR                           MCS
         BC    AVAIL,NCLR008         AVAILABLE
         SPACE 1
*        CSW STORED--BEGIN CSW ANALYSIS
         BAL   WKR7,NCSWERCK       GOT O CSW ERROR CHK SUBROUTINE
         SPACE 1
*        RETURN TO HERE-CSW HAS NO CATASTROPHIC ERRORS
         TM    NCSWUS1,X'50'       TEST B,SM--ON/OFF
         BC    ALLON,NCUSCAN1        BOTH ON--CU STILL BUSY OR DEVICE
*                                    KEEPING CU BUSY HASN'T YET
*                                    BEEN FOUND.
         TM    NCSWUS1,X'24'       TEST CUE,DE--ON/OFF/MIXED
         BC    ALLOFF,NCLR030        BOTH OFF
         BC    ALLON,NCLR009         BOTH ON--CU AND DEVICE ARE FREE
*
         TM    NCSWUS1,X'04'       TEST DE--ON/OFF
         BC    OFF,NCLR010           OFF--CUE ON ALONE
         SPACE 1
*        DE IS ON--DEVICE IS NOW FREE
NCLR009  BAL   WKR4,NIOQ           GO TO QUEUE I/O INTRPT SUBR.
         CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEAR
         BC    EQ,NCLR050          BR IF YES
NCLR021  LA    WKR2,10(WKR2)         NO-STEP I/O QUEUE POINTER
NCLR011  XC    NSTATSV(2),NSTATSV  CLEAR CSW STATUS SAVE AREA
         LH    WKR1,NDEVICE        GET DEVICE CUA
         BC    15,NTIOSYS1         GO ISSUE TIO TO DEVICE (POSSIBLE DE)
         SPACE 2
NCLR010  CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEARED
         BC    NOTEQ,NCLR009       BR IF NO
         OI    NUSSAVE,X'20'       SET CUE IN CSW UNIT STATUS SAVE BYTE
         BC    15,NTIOSYS1         TIO TO DEVICE FOR POSSIBLE DE
         SPACE 2
NCLR007  CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEARED
         BC    EQ,NEROUT1          NOT OPERATIONAL                  MCS
         BC    15,NCUSCAN1         NO--GO TO CU SCAN
         SPACE 2
NCLR008  CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEARED
         BC    NOTEQ,NCUSCAN1        NO--GO TO CU SCAN
         BC    15,NCLROK05         YES--PATH IS CLEAR
         SPACE 2
NCLR030  EQU   *
         TM    NCSWUS1,X'03'       TEST UC/UE
         BC    5,NCLR009           BR IF MIXED OR ONES
         TM    NCSWCS1,X'F1'       TEST PCI,IL,PGM-PROT-CHAIN CHECK
         BC    5,NCLR009           BR IF MIXED OR ONES
         B     NEROUT1           --ERROR                            MCS
         EJECT
***************  U C B   S C A N   R O U T I N E  *********************
*                                                                     *
* THIS ROUTINE IS ENTERED WHENEVER...                                 *
* A.  A CC=2 (BUSY) WAS RECEIVED FROM THE INITIAL TIO TO DEVICE.      *
* B.  ALL DEVICES ATTACHED TO SAME CU AS DEVICE ARE TO BE SCANNED.    *
*                                                                     *
* FOR CASE A, ONE OF THE FOLLOWING IS POSSIBLE...                     *
*     1. THE CHANNEL IS BUSY (BURST MODE OPERATION) WITH EITHER       *
*        DEVICE TO BE CLEARED OR SOME OTHER DEVICE.                   *
*     2. THERE IS A PENDING CHANNEL INTERRUPT FROM A DEVICE OTHER     *
*        THAN THE ONE TO BE CLEARED.                                  *
* IN EITHER CASE, THE ACTION TO TAKE IS TO CONTINUALLY GIVE TIO'S TO  *
* ALL DEVICES UNTIL A CSW IS STORED (CC=1). THE CUA'S OF ALL THESE    *
* DEVICES ARE FOUND BY SCANNING THE UCB TABLES. A SCAN LOOP COUNT IS  *
* MAINTAINED. IF IT IS EXHAUSTED BEFORE A CC=1 IS RECEIVED, THE PGM   *
* COULD NOT FIND THE DEVICE KEEPING THE CHANNEL BUSY.                 *
*                                                                     *
***********************************************************************
         SPACE 3
NSCNUCB0 L     WKR3,NCNTR1         INITIALIZE SCAN LOOP COUNT
NSCNUCB1 LH    WKR8,0(WKR9)        LOAD ADDR OF UCB
        LA    WKR9,2(WKR9)        STEP TO NEXT UCB POINTER ADDR
         LTR   WKR8,WKR8           TEST FOR END OF UCB ADDR TABLE
         BC    4,NCLR012              BR--END OF TABLE
         BC    8,NSCNUCB1             BR--ZERO ENTRY--GET NEXT UCB
         MVC   NUCBCUA(2),UCBCUA(WKR8)  GET CUA FROM UCB
         NI    NUCBCUA,X'07'       CLEAR HI-ORDER BITS IN CHNNL BYTE
         LH    WKR1,NUCBCUA        PUT CUA INTO REG
         CLC   NUCBCUA(1),NDEVICE  IS THIS SAME CHANNEL AS DEVICE
         BC    NOTEQ,NSCNUCB1             NO--GET NEXT UCB
         TM    NSW2,X'20'          SAME CUA AS DEVICE SWITCH-ON/OFF
         BC    OFF,NCLR013           OFF--ISSUE TIO TO THIS DEVICE
         NC    NUCBCUA+1(1),NCUMASK  ON--ZERO DEVICE ADDR--CU INTACT
         CLC   NUCBCUA+1(1),NCUTEST     IS THIS SAME CU AS DEVICE
         BC    NOTEQ,NSCNUCB1             NO--GET NEXT UCB
         BC    15,NCUSCAN2              YES--GO BACK TO CU SCAN TIO
         SPACE 2
* DEVICE IS ON SAME CHNNL AS DEVICE TO BE CLEARED -GIVE IT A TIO
         SPACE 1
NCLR013  TIO   0(WKR1)             ISSUE TIO
         BC    NOTOPER,NCLR014       NOT OPERATIONAL
         BC    BUSY,NSCNUCB1         BUSY--GET NEXT UCB
         BC    AVAIL,NEROUT1       ERROR                            MCS
* CSW STORED--CHNNL INTRPT HAS BEEN FOUND--BEGIN CSW ANALYSIS
         CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEARED
         BC    EQ,NCLR015            YES--GO BACK TO DEVICE CSW ANALYS.
* CHNNL INTERRUPT CAUSED BY DEVICE OTHER THAN ONE TO BE CLEARED
         BAL   WKR7,NCSWERCK       GO TO CSW ERROR CHECK SUBROUTINE
         SPACE 1
* RETURN HERE IF--NO CATASTROPHIC ERRORS IN CSW
         TM    NCSWUS1,X'0C'       TEST CE,DE--ON/OFF/MIXED
         BC    ALLOFF,NEROUT1      ERROR                            MCS
         BC    ALLON,NCLR023         BOTH ON--GO SAVE INTRPT
         SPACE 1
         TM    NCSWUS1,X'08'       TEST CE--ON/OFF
         BC    OFF,NEROUT1         ERROR                            MCS
         SPACE 1
* CE ON, DE OFF--DETERMINE IF DEVICE IS ON SAME CU AS DEVICE TO BE CLRD
         NC    NUCBCUA+1(1),NCUMASK     ZERO DEVICE ADDR-CU INTACT
         CLC   NUCBCUA+1(1),NCUTEST     ON SAME CU
         BC    NOTEQ,NCLR017            --NO
         SPACE 1
* CE WAS RECEIVED FROM DEVICE ON SAME CU--NOW CHECK FOR CUE
         TM    NCSWUS1,X'20'       TEST CUE--ON/OFF
         BC    ON,NCLR023            ON--CE+CUE ON
         SPACE 1
* CE IS ON ALONE. CU IS STILL BUSY. MUST GIVE TIO'S TO THIS DEVICE
* UNTIL CUE AND/OR DE IS RECEIVED. THEN CHECK FOR A POSSIBLE PENDING
* DE FROM DEVICE TO BE CLEARED.
         SPACE 1
         OI    NUSSAVE,X'08'       SET CE IN UNIT STATUS SAVE BYTE
         MVC   NCSWWK2(8),NCSWWK1  MOVE SAVED CSW TO WORK AREA 2
NCLR019  TIO   0(WKR1)             TIO TO THIS DEVICE
         BC    NOTOPER,NCLR018       NOT OPERATIONAL
         BC    10,NEROUT1          ERROR                            MCS
         SPACE 1
* CSW STORED-BEGIN ANALYSIS
         BAL   WKR7,NCSWERCK       GO TO CSW ERROR CHECK SUBR.
* RETURN HERE--CSW HAS NO CATASTROPHIC ERRORS
         TM    NCSWUS1,X'50'       TEST B,SM-NOTH ON
         BC    ALLON,NCLR019         BOTH ON--CU IS STILL BUSY
         TM    NCSWUS1,X'24'       TEST CUE,DE--ON/OFF/MIXED
         BC    ALLOFF,NEROUT1      ERROR                            MCS
         BC    ALLON,NCLR018         BOTH ON-CE,CUE,DE WERE ALL RECEIVD
         SPACE 1
         TM    NCSWUS1,X'20'       TEST CUE--ON/OFF
         BC    ON,NCLR020            ON
* DE WAS RECEIVED (CE WAS PREVIOUSLY RECEIVED)
NCLR018  OC    NCSWUS1(2),NUSSAVE  OR STATUS BYTES INTO CSW
NCLR016  BC    15,NCLR023          Q THE INTRPT
         SPACE 2
* CUE ON,DE OFF (CE WAS PREVIOUSLY RECEIVED)
NCLR020  OI    NCSWWK2+4,X'20'     OR CUE INTO SAVED CSW IN WORK AREA 2
         OC    NCSWWK2+4(2),NSTATSV  PLUS ANY OTHER SAVED STATUS
         MVC   NCSWWK1(8),NCSWWK2    PUT INTO WORK AREA 1
         BC    15,NCLR023          Q THE INTRPT
         SPACE 3
* TIO TO DEVICE IN UCB SCAN RTN GAVE CC=3 (NOT OPERATIONAL)
NCLR014  CH    WKR1,NDEVICE        IS THIS DEVICE TO BE CLEARED
         BC    EQ,NEROUT1          ERROR                            MCS
         BC    15,NSCNUCB1           NO--GET NEXT UCB
         SPACE 3
* CE ON ALONE--DEVICE NOT ON SAME CU AS DEVICE TO BE CLEARED
NCLR017  CH    WKR1,CNSLADDR       IS THIS CONSOLE
         BC    NOTEQ,NCLR023       --NO-GO QUEUE THIS INTERRUPT
         SPACE 1
* IF THE ABOVE CONDITION IS EQUAL,THIS MEANS THAT THIS 2860 CLEAR CHNNL
* ROUTINE IS CURRENTLY CLEARING TO THE SYSRES DEVICE AND THE CONSOLE
* IS ON THE SAME CHNNL AS SYSRES. CONSOLE PRESENTED A CE ONLY--MUST NOW
* ISSUE A TIO AND WAIT FOR DE TO COME IN.
         OI    NUSSAVE,X'08'       SET CE IN STATUS SAVE
         L     WKR3,NCNTR1         INITIALIZE TIMING LOOP COUNT
NCLR025  TIO   0(WKR1)             TIO TO CONSOLE
         BC    11,NEROUT1          ERROR                            MCS
*        CSW STORED
         BAL   WKR7,NCSWERCK       GO TO CSW ERROR CHECK SUBR.
*        RETURN HERE IF NO CATASTROPHIC ERRORS OR NO UC
         TM    NCSWUS1,X'04'       TEST DE--ON/OFF
         BC    OFF,NCLR024         --OFF-GO CHECK LOOP COUNT
         OC    NCSWUS1(2),NSTATSV  'OR' SAVED STATUS INTO CSW
         OI    NSW2,X'10'          SET CONSOLE CLEARED SWITCH
NCLR023  BAL   WKR4,NIOQ           QUEUE I/O INTERPT
NCLR050  LA    WKR2,10(WKR2)       STEP IOQ POINTER
         CLI   NCUTEST,X'FF'       DOES NDEVICE SHARS A CTL UNIT
         BC    EQ,NTIOSYS1         BR IF NO
NCLR022  OI    NSW2,X'20'          SET SAME CU AS NDEVICE SWITCH
         LH    WKR1,NDEVICE        GET DEVICE CUA
         L     WKR3,NCNTR1         SET TIO LOOP COUNT
         XC    NSTATSV(2),NSTATSV  CLEAR CSW STATUS SAVE BYTES
         BC    15,NCUSCAN2         GO TO CU SCAN
         SPACE 3
NCLR024  BCT   WKR3,NCLR025        BR IF LOOP COUNT NOT ZERO
         B     NEROUT1             COUNT ZERO                       MCS
         SPACE 1
* END OF UCB TABLES--GO CHECK LOOP COUNT
NCLR012  BCT   WKR3,*+8            IS LOOP COUNT EXHAUSTED
         B     NEROUT1             COUNT ZERO                       MCS
         L     WKR9,CVTILK2        BO--RESET UCB POINTER TO 1ST UCB
         BC    15,NSCNUCB1         GO BACK TO SCAN
         EJECT
***********************************************************************
*                                                                     *
*******  C S W   E R R O R   C H E C K   S U B R O U T I N E  *********
*                                                                     *
***********************************************************************
* CSW ERROR CHECK SUBROUTINE (NEW)
NCSWERCK MVC   NCSWWK1(8),64       SAVE CSW
         TM    NCSWCS1,X'0E'       TEST CCC,ICC,CDC--MIXED,ON/OFF
         BC    5,NEROUT1           ERROR                            MCS
         TM    NCSWUS1,X'02'       TEST UC--ON/OFF
         BC    ON,NCSWER2          --ON
         TM    NCSWUS1,X'80'       TEST ATTENTION
         BC    ON,NCSWATT          BR IF ON
NCSWEREX NI    68,X'01'            CLEAR UNIT STATUS EXCEPT UE IF ON
         OC    NSTATSV(2),68       SAVE CSW STATUS
         BCR   15,WKR7             RETURN TO CALLER
NCSWER2  CH    WKR1,NDEVICE        DID UC OCCUR ON DEVICE TO BE CLEARED
         BC    EQ,NSNS1            --YES--GO TO SENSE
         CH    WKR1,CNSLADDR       DID UC OCCUR ON CONSOLE
         BC    NOTEQ,NCSWEREX      --NO--EXIT ROUTINE
         SPACE 1
*        SENSE ROUTINE
         SPACE 1
NSNS1    OC    NCSWUS1(2),NSTATSV  'OR' STATUS SAVE BYTES AND
         BAL   WKR4,NIOQ           QUEUE THE INTRPT
         LA    WKR5,NSNSRD         GET SENSE READ IN AREA ADDRESS
         ST    WKR5,NSNSCCW         PUT ADDR INTO CSW
         MVI   NSNSCCW,SENSE       SET SENSE OP IN CCW
NSNS3    LA    WKR6,NSNSCCW        SET
         ST    WKR6,72                CAW
         SIO   0(WKR1)             ISSUE SENSE
         BC    NOTOPER,NEROUT1     NOT OPERATIONAL                  MCS
         BC    AVAIL,NSNS2         --AVAILABLE--SIO IS OK
*        CSW STORED--ONLY POSSIBLE CORRECT STATUS AT THIS TIME IS DE.
*        IF DE NOT ON, ASR MUST TERMINATE
         TM    68,X'04'            DE--ON/OFF
         BC    OFF,NEROUT1                                          MCS
         OI    6(WKR2),X'04'       SET DE IN PREVIOUSLY SAVED CSW
         BC    15,NSNS3            DO SENSE AGAIN
         SPACE 1
* SENSE STARTED--NOW GIVE TIO TILL SENSE IS FINISHED
         SPACE 1
NSNS2    TIO   0(WKR1)             TIO
         BC    NOTOPER,NEROUT1     NOT OPERATIONAL                  MCS
         BC    BUSY,NSNS2          --BUSY
         BC    AVAIL,NSNS7         --AVAILABLE
*        CSW STORED
         TM    VD68,VDSIX          TEST DE AND UC                  MP
         BZ    NSNS2               OFF, LOOP                       MP
VD68     EQU    68                                                  MP
VDSIX    EQU   6                                                    MP
NSNS7    EQU   *
         LA    WKR2,10(WKR2)       STEP IOQ POINTER
         CH    WKR1,NDEVICE        WAS SENSE ISSUED TO DEVICE TO BE CLR
         BC    EQ,NCLREXA          --YES                            MCS
         OI    NSW2,X'11'          --NO-SET CNSL CLR+1ST MSG BUFRD SW
         BC    15,NCLR022          CONTINUE
         SPACE 1
         SPACE 1
NCSWATT  BAL   WKR4,NIOQ           Q THE INTERRUPT
         LA    WKR2,10(WKR2)       STEP IOQ POINTER
         BC    15,NCLREXA
         SPACE 1
         EJECT
*************  QUEUE SAVED I/O INTERRUPT SUBROUTINE  ******************
*
NIOQ     MVC   2(8,WKR2),NCSWWK1   QUEUE THIS CSW
         STH   WKR1,0(WKR2)          AND CORRESPONDING CUA
         BCR   15,WKR4             GO BACK TO CALLER
         SPACE 5
***************  P A T H   C L E A R   E X I T S  *********************
         SPACE 3
NCLREXA  EQU   *
NCLROK01 EQU   NCLREXA
NCLROK03 EQU   NCLREXA
NCLROK05 EQU   NCLREXA
         SPACE 1
         MVI   0(WKR2),X'FF'       SET END-OF-QUEUE INDICATOR
         SPACE 1
NCLROUT2 L     WKR6,COMNUC         GET ASRNUC RETURN ADDRESS
         BCR   15,WKR6             RETURN TO ASRNUC
NEROUT1  EQU   *                                                    MCS
         LA    WKR0,XA10           WAIT STATE CODE                  MCS
         MVC   COMMSG0+X1(D16),NIOMSG    MOVE MSG TO BUFFER         MCS
NEROUT2  EQU   *                                                    MCS
         L     WKR3,COMNUC+X4      ERROR RETURN ADDR OF NUC         MCS
         BCR   15,WKR3             RETURN TO ASRNUC                 MCS
XA10     EQU   X'A10'
D16      EQU   16
**************************  E Q U A T E S  ****************************
         SPACE 3
NOTOPER  EQU   1                   NOT OPERATIONAL
BUSY     EQU   2                   BUSY
CSWSTORE EQU   4                   CSW STORED
AVAIL    EQU   8                   AVAILABLE
ALLON    EQU   1                   ALL BITS ON
ALLOFF   EQU   8                   ALL BITS OFF
MIXED    EQU   4                   BITS ARE MIXED ONES/ZEROES
ON       EQU   1                   ON
OFF      EQU   8                   OFF
EQ       EQU   8                   EQUAL
NOTEQ    EQU   7                   NOT EQUAL
UCBCUA   EQU   4                   UCB DISPLACEMENT FOR CHANNEL/UNIT
SENSE    EQU   4                   SENSE COMMAND CODE
UNITTYPE EQU   19
N2301    EQU   2                   UCB UNIT TYPE FOR 2301 DRUM
         SPACE 5
********************  D O U B L E   W O R D S  ************************
         SPACE 3
         DS    0D
NCSWWK1  DC    1D'0'               CSW WORK AREA 1
NCSWUS1  EQU   NCSWWK1+4             UNIT STATUS BYTE OF CSW
NCSWCS1  EQU   NCSWWK1+5             CHANNEL STATUS BYTE OF CSW
NCSWWK2  DC    1D'0'               CSW WORK AREA 2
NSNSCCW  DC    XL8'0400000020000006'    SENSE CCW
NSKCCW1  DC    XL8'0000000060000006'    CCW'S TO CAUSE
NSKCCW2  DC    XL8'0000000020000006'                  CE,DE INTERRUPT
NPOSCCW  DC    XL8'0000000020000006'    REPOSITION SYSRES ARM CCW
NCSWSAVE DC    XL8'0'              CSW SV AREA
NCTBL    DC    C'0123456789ABCDEF'      CONVERSION TABLE
NRBPSW   DC    D'0'                SAVE AREA FOR RESUME PSW IN RB
         SPACE 5
****************************  W O R D S  ******************************
         SPACE 3
         DS    0F
NCNTR1  DC  XL4'00005000'              TIO LOOP COUNT               19A
* COUNT WAS REDUCED FROM X'BFFFF' TO X'5000' SINCE IT COULD TAKE    19A
*  UP TO 8 OR 10 MINUTES TO ACTUALLY TIME OUT  OF THIS LOOP.
NDEVICE  DC    F'0'                DEVICE TO BE CLEARED
NIOQADDR DC    1F'0'               SAVE AREA FOR IOQ ADDRESS
CLEARUA  DC    X'000000F8'    MASK TO GET CONTROL UNIT ADDRESS
CLEAR21  DC    X'000007FF'    MASK TO CLEAR SIGN AND ISOLATE CUA
* CONSOLE ADDRESS AND DEVICE TYPE
CNSLADDR DC    F'0'
CNSLTYPE EQU   CNSLADDR+2
NCURTCB  DC    F'0'                SV AREA FOR CURRENT TCB ADDRESS
NSVR12   DC    F'0'                SV AREA FOR GR12
NSV7     DC    F'0'                SAVE GR7
         SPACE 5
**********************  H A L F   W O R D S  **************************
         SPACE 3
         DS    0H
NUCBCUA  DC    XL2'0'              SV AREA FOR CURRENT CUA FROM UCB
NSTATSV  DC    XL2'0'              CSW STAUTS SAVE BYTES
NUSSAVE  EQU   NSTATSV
NCSSAVE  EQU   NSTATSV+1
         SPACE 5
*************************  M E S S A G E S  ***************************
NIOMSG   DC    C'IGF006S I/O ERR '                                  MCS
****************************  B Y T E S  ******************************
         SPACE 3
NSNSRD   DC    XL6'0'              SENSE READ IN AREA
NCUMASK  DC    XL1'0'              CU ADDR MASK
NSW2     DC    XL1'0'    BIT       FUNCTION
*                        0         CC=0OK IN TIO TO SYSRES FOR DE
*                        1         QUEUE SYSRES DE REQUIRED
*                        2         SAME CU AS SYSRES FOR UCB SCAN RTN
*                        3         CLEAR SYSRES CLEARED CONSOLE ALSO
*                        4         PCI MESSAGES ARE BUFFERED
*                        5
*                        6         2ND UNIT CHECK MSG BUFFERED
*                        7         1ST UNIT CHECK MSG BUFFERED
NCUTEST  DC    XL1'0'              SYSRES CU SAVE TEST AREA
NSVFLGS  DC    XL1'0'              CURRENT TCBFLGS+1 SAVE AREA
         EJECT
         ORG   NMODENT+3072
*****   A S R  C O M M U N I C A T I O N  A R E A     *****
*                                                         *
         DS    0D
IGFDCB   EQU   *   ENTRY FOR 1ST LOAD MODULE
COMENVCK DC    CL8'IGFASR0B'       1ST LOAD MODULE OF ASR
COMPDAR  EQU   *                   START PDAR AREA
PDARSTAT DC    X'0'
PDARTCB  DC    3X'0'
PDARTAB  DC    8F'0'
         AIF   (&MFTASR NE 1).M7
COMNEST  DC    V(IORGSW)           MFT-IOS-NEST SWITCH
         AGO   .M8
.M7      ANOP
COMNEST  DC    V(IEA0IO01)         MVT-IOS NEST SWITCH
.M8      ANOP
PDARCUA  DC    9F'0'
         AIF   (&MFTASR NE 1).M5
COMERXNT DC    V(IEAASNT2)         PTR TO ERROR XSNT AREA--MFT
         AGO   .M6
.M5      ANOP
COMERXNT DC    A(0)
.M6      ANOP
IGFMOD   EQU   *  1ST BYTE OF NEXT FIELD IS CPU MODEL NUMBER
COMCVT   DC    V(IEACVT)     ADDR OF CVT
COMCHASG DC    V(IFBACTA)          POINTER TO CHANNEL ASSIGNMENT MODU
         AIF   (&MFTASR NE 1).M1
IGFRES   EQU   *                   ADDRESS OF MFT RAM
COMRAM   DC    A(0)
         AGO   .M2
.M1      ANOP
         DC    A(0)
.M2      ANOP
IGFBLDL  EQU   *                   ADDRESS OF BLDL
COMBLDL  DC    A(0)
IGFSVBLD EQU *            ADDRESS OF SVC BLDL
COMSVBLD DC  A(0)
IGFSVCQ  EQU   *                   ADDRESS OF QUEUE
COMSVCQ  DC    A(0)                    OF RESIDENT 3 AND 4 SVCS
         AIF   (&MFTASR NE 1).M3
COMTRANS DC    V(IEAAXSNT)         MFT-NAME OF XSNT ROUTINE
         AGO   .M4
.M3      ANOP
COMERIOB DC    V(IEAERWA)          MVT-IOB FOR ERROR XSNT AREA
.M4      ANOP
COMSBAD  DC    F'0'                ADDR OF FAILING STORAGE LOCATION
COMSIRB  DC    V(SIRB)             SYSTEM SIRB POINTER
         DC    F'0'           SPARE  WORD
IGFNUC01 EQU   *                   LIST OF REFRESHABLE NUCLEUS MODULES
         AIF   (&MFTASR NE 1).VMVT
         DC    F'0'
         DC    V(IGC009)
         DC    F'0'
         DC    F'0'
         DC    X'FFFFFFFF'
         AGO   .C1
.VMVT    ANOP
         DC    F'0'               FILLER                           MP1
         DC    V(IGC043)           STAGE 1 EXIT EFFECTOR            MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IGC046)           SVC 46,47 TTIMER,STIMER          MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IGC011)           SVC 11, TIME ROUTINE             MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IEAQTI00)        TIMER SLIH                       MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IEEBA1)           ATTENTION INTERRUPT HANDLER      MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IEECVCTW)         COMMUNICATIONS TASK TCB          MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IEEBC1PE)         COMM. TASK EXT INTERRUPT HANDLER MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'               FILLER                           MP1
         DC    V(IEECVPRG)         WTOR PURGE ROUTINE               MP1
         DC    F'0'               FILLER                           MP1
         DC    F'0'
         DC    X'FFFFFFFF'
.C1      ANOP
*
         SPACE 1
COMNUC   EQU   IGFNUC01+8          NUCLEUS DATA
COMPSA   EQU   IGFNUC01+24         PERMANENT STORAGE SAVE AREA
COMSYSRS EQU   IGFNUC01+152        SYSRES ADDR AND DEVICE TYPE
COMCNSL  EQU   IGFNUC01+156        ACTIVE SYSTEM CONSOLE AND TYPE
COMIOQ   EQU   IGFNUC01+160        POINTER TO I/O INTERRUPT SAVE QUEUE
COMPRNT  EQU   IGFNUC01+164        ADDRESS OF CONSOLE PRINT ROUTINE
COMMSG0  EQU   IGFNUC01+168        CONSOLE PRINT ROUTINE
COMMSG1  EQU   IGFNUC01+184          MESSAGE BUFFERS
COMEXADR EQU   IGFNUC01+200        EXECUTE INSTR ADDR FOR IRE
COMOBREX EQU   IGFNUC01+204
COMLEV0A EQU   IGFNUC01+208
COMLEV1A EQU   IGFNUC01+209
COMLEV0B EQU   IGFNUC01+210
COMLEV0C EQU   IGFNUC01+211
COMLEV1C EQU   IGFNUC01+212
COMLEV2C EQU   IGFNUC01+213
COMLEV3C EQU   IGFNUC01+214
COMLEV0D EQU   IGFNUC01+215
COMLEV1D EQU   IGFNUC01+216
COMLEV2D EQU   IGFNUC01+217
COMLEV00 EQU   IGFNUC01+218
COMLEV01 EQU   IGFNUC01+219
COMLEV02 EQU    IGFNUC01+220
COMLEV10 EQU   IGFNUC01+221
COMLEV20 EQU   IGFNUC01+222
COMMSF   EQU   IGFNUC01+223                                          MP
         SPACE 1                                                     MP
COMLEV2K EQU   IGFNUC01+224                                        2K
COMSPARE EQU   IGFNUC01+225                                        2K
         SPACE 3
*****  A S R   R E C O R D   E N T R Y   B U I L D   A R E A  *********
         SPACE 1
CTFLDID  EQU   IGFDCB+406          COUNT FIELD
CTFLDKEY EQU   CTFLDID+5           KEY LENGTH
CTFLDDL  EQU   CTFLDID+6           DATA LENGTH FOR RECORD ENTRY
*
REKEY    EQU   CTFLDID+8           RECORD ENTRY KEY
RELABEL  EQU   CTFLDID+10          LABEL
REFORMT  EQU   CTFLDID+13          RECORD ENTRY FORMAT TYPE
REMODNUM EQU   CTFLDID+14          CPU MODEL NUMBER
RETYPE   EQU   CTFLDID+15          TYPE OF ERROR
RECTLIND EQU   CTFLDID+16          EREP CONTROL INDICATORS
REDATE   EQU   CTFLDID+18          DATE OF RECORD
RETIME   EQU   CTFLDID+22          TIME OF RECORD
REPROGID EQU   CTFLDID+26          ACTIVE PROGRAM ID
REMCOPSW EQU   CTFLDID+34          MACHINE CHECK OLD PSW
REAIOU   EQU   CTFLDID+42          CH/UNIT ADR OF ACTIVE UNITS (MAX 8)
RECHASSG EQU   CTFLDID+58          CHANNEL TYPE ASSIGNMENTS
REENVCHK EQU   CTFLDID+66          ENVIRONMENT CHECK DATA
REROSCHK EQU   CTFLDID+74          ROS CHECK DATA
REMEST   EQU   CTFLDID+98          MEMORY ERROR STATUS TABLE
REPDAR   EQU   CTFLDID+210         PROGRAM DAMAGE ASSESSMENT DATA
RERETRY  EQU   CTFLDID+234         INSTRUCTION RETRY DATA
ISUM1    EQU   CTFLDID+234         TABLE 1 AREA
ISUMFAIL EQU   CTFLDID+236         FAILING INSTRUCTION
ISUM2    EQU   CTFLDID+242         TABLE 2 AREA
ISUMROS  EQU   CTFLDID+244         ROS ADDRESS
ISUMFADR EQU   CTFLDID+246         FAILING INSTRUCTION ADDRESS
ISUMBAL  EQU   CTFLDID+250         ALT INSTR ADDR OR BAL
ISUMBAD  EQU   CTFLDID+254         BAD OPERAND ADDRESS
REGSGPR  EQU   CTFLDID+258         GPR CONTENTS
REGSFPR  EQU   CTFLDID+322         FPR CONTENTS
REGPARGP EQU   CTFLDID+354         GPR PARITY INDICATORS
REGPARFP EQU   CTFLDID+362         FPR PARITY INDICATORS
TEMPSPRE EQU   CTFLDID+366         TEMPROAY SPARE TO INSURE DBLWRD
RECPULOG EQU   CTFLDID+370         CPU HARDWARE LOGOUT AREA
*
*****  E X P A N S I O N   A R E A   F O R   L O G O U T  *************
*
RESPARE  EQU   CTFLDID+546
*
*
*
*
*****    C H A N N E L  I N B O A R D  R E  P O S I T I O N S     *****
*
*  THESE POSITIONS ARE USED WHEN HANDLING A  CHANNEL INBOARD ERROR,
*  WITH ASR IN THE SYSTEM, BUT NO CCH.  ASR FORMS AND RECORDS A SER-
*  TYPE RECORD VIA ITS ERROR RECORDER MODULE.
         SPACE 2
RECCW1   EQU   RELABEL+24          FIRST CCW OF FAILING CHAIN
RECCW2   EQU   RELABEL+32          FAILING CCW
RECSW    EQU   RELABEL+40          CHANNEL STATUS WORD
REACTIO  EQU   RELABEL+48          ACTIVE I/O UNITS
RECHASG  EQU   RELABEL+64          CHANNEL TYPE ASSIGNMENTS
REERPIB  EQU   RELABEL+72                                            MP
RECUA    EQU   RELABEL+80                                            MP
RECHSTAT EQU   RELABEL+82                                            MP
REIOLOG  EQU   RELABEL+84                                            MP
         SPACE 1
         ORG   IGFDCB+1024
COMDCB   EQU   COMENVCK
LOGJE    EQU   RECPULOG+66                                         MP1
LOGVD    EQU   RECPULOG+12                                         MP1
TAVD     EQU   COMNUC+8                                            MP
LOG4     EQU   RECPULOG+4                                          M67
         EJECT
UCMDSECT DSECT                                                     1450
         IEECUCM
         MEND
