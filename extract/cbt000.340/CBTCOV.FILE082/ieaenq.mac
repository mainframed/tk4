         MACRO
         IEAENQ &SYSTEM=,&SHARED=,&TSO=
.*2271  129600,845640,845660,845680,845720,845740,845840,846110,867830,
.*      867848,867872   11-4-68  CHANGES TO LCS CODE FOR R17 PTM 112
.*1874 117160,117320,118800,862800-863400,878500-879600,880960,881200  G
                                REFRESHABILITY
.*1874 114600,727360,881040,881400-881700     MAINTENANCE
.*                                                                 I275
.*    699700-699800,881160                                         I275
.*  MFT TRANSIENT AREA CONTENTION PROBLEM                   19088  I275
.*                                                                19772
.*286440,357620-357648,357852,357858-357860                       19772
.*OWNERSHIP                                                       19772
.*                                                                 I250
.*698100,721620,845580                                            19054
.*MFT ATTACH                                                19054  I250
.*CHANGE TO AUTO PURGE                                           A29065
.*846710,846720                                                  A35042
         LCLB  &B(3)                             LOCAL SWITCHES   20021
         AIF   ('&SYSTEM' EQ '').E1                    KEYWORD MISSING
         AIF   ('&SHARED' EQ '').E2                    KEYWORD MISSING
&B(1)    SETB  ('&SYSTEM' EQ 'MVT')
         AIF   (NOT &B(1) AND '&SYSTEM' NE 'MFT').E1   KEYWORD INVALID
&B(2)    SETB  ('&SHARED' EQ 'YES')
         AIF   (NOT &B(2) AND '&SHARED' NE 'NO').E2    KEYWORD INVALID
&B(3)    SETB  ('&TSO' EQ 'YES')                                  20021
.*
.* SWITCH &B(1) SET TO 0 - SYSTEM IS MFT-II
.* SWITCH &B(1) SET TO 1 - SYSTEM IS MVT
.*
.* SWITCH &B(2) SET TO 0 - SHARED DASD SUPPORT IS NOT INCLUDED
.* SWITCH &B(2) SET TO 1 - SHARED DASD SUPPORT IS INCLUDED
.*
.* SWITCH &B(3) SET TO 0 - TIME SHARING OPTION NOT INCLUDED       20021
.* SWITCH &B(3) SET TO 1 - TIME SHARING OPTION INCLUDED.          20021
.*
         AGO   .GEN1
         MEXIT
.E1      MNOTE 'SYSTEM KEYWORD MISSING OR INVALID'
         MEXIT
.E2      MNOTE 'SHARED KEYWORD MISSING OR INVALID'
.GEN1    ANOP
         TITLE '         DEQ SERVICE ROUTINE          '
IGC048   START
         SPACE 2
* ROUTINE NAME
         AIF   (NOT &B(1) AND NOT &B(2)).C1
         AIF   (NOT &B(1)).C2
         AIF   (&B(1) AND NOT &B(2)).C3
*              IEAQENQ3-ENQ AND DEQ SERVICE ROUTINE WITH SDASD
         AGO   .GEN2
.C1      ANOP
*              IEAGENQ1-ENQUEUE AND DEQUEUE SERVICE ROUTINE
         AGO   .GEN2
.C2      ANOP
*              IEAGENQ2-ENQ AND DEQ SERVICE ROUTINE WITH SDASD
         AGO   .GEN2
.C3      ANOP
*              IEAQENQ2-ENQUEUE AND DEQUEUE SERVICE ROUTINE
.GEN2    ANOP
         SPACE 2
* FUNCTIONS
*              1-ENQUEUE A REQUEST FOR A SERIALLY REUSABLE RESOURCE
*              2-DEQUEUE A REQUEST FOR A SERIALLY REUSABLE RESOURCE
*              3-PERFORM SET MUST COMPLETE OR RESET MUST COMPLETE
*                OPERATIONS INCLUDING SYSTEM OR STEP WIDE
*                NON-DISPATCHABILITY AS REQUIRED
         AIF   (&B(1)).C4
*              4-PERFORM A TASK SWITCH FOR TASKS NO LONGER
*                WAITING FOR A RESOURCE
         AGO   .GEN3
.C4      ANOP
*              4-INVOKE TASK SWITCH ROUTINE FOR TASKS
*                NO LONGER WAITING FOR RESOURCE
*              5-PERFORM 'AUTO PURGE' FOR ABTERM TASKS
*              6-PURGE QUEUES AT END OF TASK OR ABEND AS REQUIRED
.GEN3    AIF   (NOT &B(2)).GEN4
*               -RESERVE AND RELEASE DEVICES AS REQUESTED BY THE
*                RESERVE MACRO
.GEN4    ANOP
         SPACE 2
* ENTRY POINT NAMES
*              IGC048-DEQUEUE SERVICE ROUTINE
*              IGC056-ENQUEUE SERVICE ROUTINE
*              IEA0SMC-MUST COMPLETE ROUTINE
         AIF   (NOT &B(1)).GEN5
*              IEA0EQ01-MANUAL PURGE ROUTINE
*              IEAQQCB0-TOP OF MAJOR QCB QUEUE
*              IEAQENA0-START OF REFRESHABLE CODE                 19772
*              IEAQENA1-END OF REFRESHABLE CODE                   19772
         AGO   .GEN6
.GEN5    ANOP
*              IEA0EQ01-TOP OF MAJOR QCB QUEUE
*              IEA0QCB0-TOP OF MAJOR QCB QUEUE
*              ABENTRY - ABEND BRANCH ENTRY                       19054
*              IEAGENA0-START OF REFRESHABLE CODE                 19772
*              IEAGENA1-END OF REFRESHABLE CODE                   19772
         SPACE 2
.GEN6    ANOP
* CONTAINED IN MODULE
*              MODULE NAME SAME AS ROUTINE NAME
         SPACE 2
* ATTRIBUTES
*              RESIDENT
*              REENTRANT
*              REFRESHABLE                                        19772
*              IN SUPERVISOR STATE
*              TYPE 2 SVC
*              DISABLED
         SPACE 2
* APPLICABILITY
         AIF   (&B(1)).GEN7
*              OPTION 2
         AGO   .GEN8
.GEN7    ANOP
*              OPTION 4
.GEN8    AIF   (NOT &B(2)).GEN9
*                 WITH SDASD
         AGO   .GEN10
.GEN9    ANOP
*                 WITHOUT SDASD
.GEN10   ANOP
         SPACE 2
* EXTERNAL REFERENCES
*              IEATCBP     ADDRESS OF 'NEW' TCB
*              IEA0DS      DISPATCHER
         AIF   (NOT &B(1)).GEN11
*              IEA0DS02    TASK SWITCH ROUTINE
*              IEAMSTCB    MASTER SCHEDULER TCB
.GEN11   ANOP
         EJECT
* SVC'S USED
*              SVC 3  EXIT
*              SVC 10 REGISTER FORM OF GETMAIN AND FREEMAIN
*              SVC 13 ABEND
         SPACE 2
* INPUT
*              PARAMETER LIST IN CALLERS STORAGE AREA
*              BEGINNING ON A FULL WORD BOUNDRY
*              PARAMETER LIST ENTRY SHOWN BELOW
         SPACE 2
* MACRO EXPANSION EXAMPLES
         SPACE 2
MACSEC   DSECT
         USING *,1
         SPACE 2
IGC048   CSECT
         SPACE 2
         AIF   (&B(1)).GEN12A                                     19772
IEAGENA0 EQU   *                                                  19772
         AGO   .GEN12B                                            19772
.GEN12A  ANOP                                                     19772
IEAQENA0 EQU   *                                                  19772
.GEN12B  ANOP                                                     19772
* OUTPUT FOR ENQ
*              A MAJOR QUEUE CONTROL BLOCK (FORMAT BELOW) IF
*              THE RESOURCE WAS NOT PREVIOUSLY REQUESTED
*              AND THE MASK FIELD WAS SUCH TO ALLOW
*              AN ENQUEUE. THIS ELEMENT CREATED IN SUBPOOL 255
         SPACE 1
*              A MINOR QUEUE CONTROL BLOCK (FORMAT BELOW) IF
*              THE RESOURCE WAS NOT PREVIOUSLY REQUESTED
*              AND THE MASK FIELD WAS SUCH TO ALLOW
*              AN ENQUEUE. THIS ELEMENT CREATED IN SUBPOOL 255
         SPACE 1
*              A QUEUE ELEMENT TO REPRESENT THE REQUESTOR
*              ON THE QUEUE FOR THAT RESOURCE.
*              THIS ELEMENT CREATED IN SUBPOOL 255
         SPACE 2
         AIF   (NOT &B(2)).GEN12
*              WITH SDASD AND IF A RESERVE WERE ISSUED (WHICH RE-
*              SULTED IN EXECUTION OF ENQUEUE), A SPECIFIED DEVICE
*              WOULD BE LOGICALLY RESERVED BY AN INCREMENT IN THE
*              UCB RESERVE COUNT
.GEN12   ANOP
         SPACE 2
* OUTPUT FOR DEQUEUE
*              THE REMOVAL OF AND FREEING OF THE SPACE
*              FOR THE ELEMENTS CREATED DURING ENQUEUE.
         AIF   (NOT &B(2)).GEN13
*              IF THE SDASD OPTION HAS BEEN SELECTED, AN EXCP WILL
*              BE ISSUED TO RELEASE A DEVICE WHEN APPROPRIATE
.GEN13   ANOP
         EJECT
* ENTRY POINTS
*              IGC048 DEQUEUE
*              ENTERED FROM THE SVC FLIH BY A LPSW INSTRUCTION.
*              THE PSW MUST BE
*              1-DISABLED FOR ALL MASKABLE INTERRUPTS
*              EXCEPT MACHINE CHECK
*              2-BE IN SUPERVISOR MODE
*              3-HAVE A PROTECT KEY=0
*              REGISTER 1 POINTS TO THE FIRST ENTRY IN
*              THE PARAMETER LIST
*              REGISTER 14 TO THE RETURN POINT
         SPACE 1
*              IGC056-ENQUEUE
*              ENTERED FROM THE SVC FLIH BY A LPSW INSTRUCTION.
*              THE PSW MUST BE
*              1-DISABLED FOR ALL MASKABLE INTERRUPTS
*              EXCEPT MACHINE CHECK
*              2-BE IN SUPERVISOR MODE
*              3-HAVE A PROTECT KEY=0
*              REGISTER 1-POINTS TO THE FIRST ENTRY IN
*              THE PARAMETER LIST
*              REGISTER 14-TO THE RETURN POINT
         SPACE 1
         AIF   (NOT &B(1)).GEN14
*              IEA0EQ01-MANUAL PURGE ROUTINE
*              ENTERED ON A BRANCH FROM EITHER END OF
*              TASK OR ABEND TO REMOVE ALL QEL'S
*              ASSOCIATED WITH THE TCB SPECIFIED
*              IN REGISTER 4
.GEN14   ANOP
         EJECT
* EXIT POINTS
*              1-TO THE CALLER VIA A BRANCH ON REGISTER 14
*              2-TO THE DISPATCHER WHEN THE CALLER CANNOT
*              HAVE IMMEDIATE USE OF THE RESOURCES ON
*              WHICH HE ENQUEUED.
*              3-TO A TASK OF HIGHER PRIORITY THEN THE
*              CALLER IF THE CALLER FREE'S RESOURCES
*              HERETOFORE HOLDING UP THE HIGHER PRIORITY TASK
         SPACE 2
* ERROR EXIT POINTS
*              TO ABEND WITH THE FOLLOWING ERROR CODES
*              FROM DEQUEUE
*              130-A DEQUEUE WAS ISSUED FOR A RESOURCE
*                  ON WHICH THE CALLER HAD NOT
*                  PREVIOUSLY ENQUEUED.
*              230-INVALID MINOR NAME LENGTH
*              330-RMC ISSUED IN PROBLEM PROGRAM STATE
*              430-INVALID PARAMETER LIST
*              530-DEQ ISSUED FOR QEL NOT IN CONTROL
         SPACE 1
*              FROM ENQUEUE
*              138-AN ENQ WAS ISSUED FROM A TASK
*                  FOR A RESOURCE ON WHICH THAT
*                  TASK ALREADY HAS A REQUEST.
*              238-THE 'RNAME' LENGTH IS INVALID
*              338-A SET MUST COMPLETE WAS ISSUED
*                  BY A PROBLEM PROGRAM.  I.E., THE
*                  SVC OLD PSW PROTECT KEY WAS NOT
*                  EQUAL TO ZERO
*              438-INVALID PARAMETER LIST
         EJECT
* TABLES AND CONTROL BLOCKS REFERENCED
         SPACE 2
*        EXTERNAL/INTERNAL SYMBOLS
         SPACE 1
         EXTRN IEATCBP                  ADDRESS OF 'NEW' TCB
         EXTRN IEA0DS             ENTRY POINT TO DISPATCHER
         AIF   (NOT &B(1)).SHRD000
         EXTRN IEA0DS02                 ENTRY POINT TO TASK SWITCH
.SHRD000 ANOP
         SPACE 3
         ENTRY IGC056                   ENTRY POINT TO ENQ
         AIF   (&B(1)).SHRD010
         ENTRY IEA0SMC            ENTRY POINT TO MUST COMPLETE
         ENTRY ABENTRY         ENTRY TO DEQ FOR ABEND IN MFT ATTH 19054
         AGO   .SHRD020
.SHRD010 ANOP
         ENTRY IEA0EQ01                 ENTRY POINT TO MANUAL PURGE
.SHRD020 ANOP
         AIF   (&B(1)).SHRD022                                    19772
         ENTRY IEAGENA0                                           19772
         ENTRY IEAGENA1                                           19772
         AGO   .SHRD021                                           19772
.SHRD022 ANOP                                                     19772
         ENTRY IEAQENA0                                           19772
         ENTRY IEAQENA1                                           19772
.SHRD021 ANOP                                                     19772
         EJECT
*        GENERAL REGISTER EQUATES
         SPACE 1
GMREG    EQU   0                        FOR REGISTER GETMAIN
WORKREG0 EQU   0                        GENERAL WORK REGISTER
REG1     EQU   1                   WORK REG                      A34816
REG0     EQU   0                       PARAMETER REGISTER         20021
FMREG    EQU   1                        FOR REGISTER FREEMAIN
INPUTREG EQU   1                        POINTER TO INPUT LIST
SUMREG   EQU   1                        FOR REGMAIN CALCULATIONS
GMRETREG EQU   1                        RETURN REGISTER FROM GETMAIN
ABENDREG EQU   1                        WHEN ABENDING CURRENT REQUESTOR
MCTCBRG  EQU   1                        THE ADDR OF THE MC TASK
BASEREG  EQU   2                        BASE REGISTER
CHKBASE  EQU   2             VALIDITY CHECK BASE
WORKREG3 EQU   3                        GENERAL WORK REGISTER
UCBREG   EQU   3
ZENREG   EQU   3
CURTCB   EQU   4                        CURRENT TCB ADDRESS
CURRB    EQU   5                        CURRENT RB ADDRESS
WORKREG4 EQU   6                        GENERAL WORK REGISTER
TOPPARM  EQU   6                        ADDRESS OF 1ST LIST ELEMENT
PURGEREG EQU   6
CURMIN   EQU   7                        CURRENT MINOR QCB ADDRESS
WORKREG7 EQU   7                       REGISTER FOR VALIDITY CHECK RTN
CURMAJ   EQU   8                        CURRENT MAJOR QCB ADDRESS
TIOEREG  EQU   8
CURQEL   EQU   9                        CURRENT QEL ADDRESS
BRCHECK  EQU   9                                                    LCS
TASKTCB  EQU   10                       TCB ADDR FOR TASK SWITCH
CURPARM  EQU   10                       CURRENT LIST ELEMENT
WORKREG1 EQU   11                       GENERAL WORK REGISTER
WKRG1    EQU   11                       GENERAL WORK REGISTER
TCBREG   EQU   11                       FOR RIPPLING DOWN TCB QUEUE
TIOUCBRG EQU   11
JSTCBRG  EQU   12                       ADDRESS OF JOB STEP TCB
WORKREG2 EQU   12                       GENERAL WORK REGISTER
WKRG2    EQU   12                       GENERAL WORK REGISTER
TIOTREG  EQU   12
TIODVRG  EQU   12
RELWK1   EQU   12
LINKREG  EQU   13                       INTERNAL LINK REGISTER
RETREG   EQU   14                       RETURN REGISTER
WKRG3    EQU   14                       WORK REGISTER              SDA2
WKRG4    EQU   15                       WORK REGISTER              SDA2
RE       EQU   14                                                   LCS
RF       EQU   15                                                   LCS
GENREG   EQU   15                       SELECTED USE
MASKREG  EQU   15                       DISPATCHABILITY MODIFIER
HILOPTR  EQU   16                  DISP VALUE TO PICK UP LCS PTR   4027
         EJECT
*        TCB EQUATES
         SPACE 1
TCBPKF   EQU   28                       TCB PROTECT KEY FIELD
TCBFLG   EQU   29                       *
TCBFLG1  EQU   30                       * TCB FLAGS
TCBFLG2  EQU   31                       *
TCBDISP  EQU   33                       TCB DISPATCHABILITY FLAGS
TCBGRS0  EQU   48                       OFFSET TO TCB REGISTER SAVE
TCBGRS   EQU   48                 OFFSET TO REGISTER SAVE AREA
         AIF   (&B(1)).SHRD030
TCBCT    EQU   34                 ENQ COUNT FIELD IN TCB
TCBDSP   EQU   35                 OFFSET FOR PRIORITY CODE
         AIF   (NOT &B(2)).NOSDASB
TCBPRGBT EQU   X'99'               BYTE CONTAINING DEQ PURGE FLAG  I250
TCBDUMPG EQU   X'01'               TEST PURGE FROM DUMP DATASET    I250
.NOSDASB ANOP
TCBBYBOX EQU   24                  BOUNDARY BOX DISP. IN TCB       I250
TCBJSTEP EQU   44                  JOB STEP TCB DISP. IN TCB       I250
         AGO   .SHRD040
.SHRD030 ANOP
TCBCT    EQU   112                      ENQ COUNT FIELD IN TCB
.SHRD040 ANOP
TCBTCB   EQU   116                      NEXT LOWER TCB ON READY QUEUE
JSPTR    EQU   124                      ADDR OF JOB STEP TCB IN TCB
TCBNTC   EQU   128                      ADDRESS OF SISTER TCB
TCBOTC   EQU   132                      ADDRESS OF MOTHER TCB
TCBLTC   EQU   136                      ADDRESS OF DAUGHTER TCB
         AIF   (NOT &B(3)).TSO0100                                20021
TCBTSFLG EQU   148                     TIME-SHARING STATUS FLAGS  20021
TCBJSCB  EQU   180                     ADDRS OF JOB STEP CTL-BLK  20021
         SPACE 1                                                  20021
TCBTSTSK EQU   X'80'                   STATUS BIT INDICATING A    20021
*                                      TIME-SHARING TASK.         20021
         AGO   .TSO0105                                           20021
.TSO0100 ANOP                                                     20021
         SPACE 1
.TSO0105 ANOP                                                     20021
ABTERM   EQU   X'80'                    ABTERM BIT IN TCB
TCBFJMC  EQU   X'08'                    TO SET TCB MUST COMPLETE
TCBRJMC  EQU   X'F7'                    TO RESET STEP MUST COMPLETE
TCBFSMC  EQU   X'10'                    TO SET TCB SYS MUST COMPLETE
TCBRSMC  EQU   X'EF'                    TO RESET SYS MUST COMPLETE
TCBFXS   EQU   X'01'                    SET TO DEFER ASYNC EXITS
TCBFXR   EQU   X'FE'                    RESET ASYNC EXIT FLAG
PKEY0    EQU   X'F0'                    PROTECT KEY PORTION OF TCBPKF
         SPACE 3
*        RB EQUATES
         SPACE 1
RBPSW    EQU   16            RESUME PSW IN RB
PSWADR   EQU   16                       RESUME PSW IN RB
RBLINK   EQU   28                 SVRB LINK FIELD
RBWCF    EQU   28                       WAIT COUNT FIELD IN RB
SVCOPSW  EQU   33                       SECOND BYTE OF SVC OLD PSW
XSAV     EQU   96                       EXTENDED SAVE AREA
RBSAVUCB EQU   X'80'               UCB SAVE FOR SHARED DASDI     A30097
SEPLP    EQU  X'84' .              SVRB DISP FOR PARM LIST PTR   3123
SEPLP1   EQU   X'88' . SAVE AREA FOR REG 10                  BJ A50045
         AIF   (&B(1)).MFTA40
RBNAME   EQU   6                   PTR TO LAST TWO BYTES OF NAME   I250
TWO      EQU   2                   COMPARE LENGTH FOR ABEND SVRB   I250
RG14INRB EQU   124                 RET REG STORED IN ABEND SVRB    I250
.MFTA40  ANOP
         SPACE 3
*        GENERALIZED EQUATES
         SPACE 1
DCELBBNR EQU   0                        BIN # IN SUB-UCB           SDA2
D0       EQU   0 .                DISP VALUE OF 0           BJ 44371
D3       EQU   3 .                DISP VALUE OF 3           BJ 44371
D5       EQU   5 .                DISP VALUE OF 5           BJ 44371
ONE      EQU   1                        VALUE OF ONE
UCBID    EQU   2                        ID IN UCB                  SDA2
UCBSIZE  EQU   56                       SIZE OF MAIN UCB           SDA2
LPSW     EQU   8                        LENGTH OF PSW
PREVIOUS EQU   5                        DISPLACEMENT TO PREVIOUS FIELD
LNEW     EQU   4                  LENGTH FOR COMPARE OF NEW AND OLD
         SPACE 1
WAITIND  EQU   X'00'                    FOR TESTING
ANYON    EQU   X'FF'                    BYTE VALUES
SYSTEMS  EQU   X'08'
SYSKEY   EQU   X'FE'
RESERVE  EQU   X'48'
NORESRVE EQU  X'BF'                                           BJ  M2508
RESERVED EQU   X'40'
ONERESV  EQU   X'01'               USE TO TEST FOR RELEASE        19772
UCBIDMSK EQU   255                 MASK TO TEST FOR A UCB         4531
UCBNAME  EQU   13                  DISP FOR THE EBCDIC DEVICE NAME 4531
UCBNMEMK EQU   192                 MASK TO TEST FOR UCB           4531
DB0      EQU   0 .                 STANDARD VALUE OF 0           A34816
DB4      EQU   4 .                 STANDARD VALUE OF 4           A34816
DB16     EQU   16 .                STANDARD DISP. EQUATES        A34816
DB20     EQU   20 .                STANDARD DISP. EQUATE OF 20   A34816
         AIF   (&B(1)).MFTA50
CVTADDR  EQU   16                  ADDR OF CVT                     I250
MFTATTCH EQU   X'08'               TEST FOR MFT ATTACH IN CVT      I250
.MFTA50  ANOP
SHARED   EQU   X'20'
QELUCB   EQU   12
PTRUCB   EQU   12
UCBRSCT  EQU   40
RESINDIC EQU   41            UCB RESERVE INDICATOR
TIOELNGH EQU   24
TIODDLNG EQU   16
TIOEFSRT EQU   0
TIOTEND  EQU   0
TCBTIOT  EQU   12
DEVTYP   EQU   18
DIRACCS  EQU   X'20'
         AIF   (&B(1)).SHRD045
CURPRG   EQU   104           OFFSET TO XR8 IN TCB
         AGO   .SHRD046
.SHRD045 ANOP
CURPRG   EQU   80
.SHRD046 ANOP
UCBSKA   EQU   48
         EJECT
*        PARAMETER LIST ELEMENT
         SPACE 3
*******************************************
* 0       * 1        * 2       * 3        *
* LISTEND *  LMINOR  * PARMCDS *  RETURN  *
*         *          *         *          *
*******************************************
* 4                                       *
*    ADDRESS OF MAJOR RESOURCE NAME       *
*                                         *
*******************************************
* 8                                       *
*    ADDRESS OF MINOR RESOURCE NAME       *
*                                         *
*******************************************
*12  POINTER TO THE UCB ADDRESS           *
*   FOR RELEASE REQUESTS                  *
*                                         *
*******************************************                       20021
         SPACE 2
*  DEFINITION OF FLAGS AT OFFSET 2
*  BIT 0 - IF SET TO ONE, INDICATES SHARED REQUEST
*        - IF SET TO ZERO, INDICATES EXCLUSIVE REQUEST
*  BIT 1 - SEE BELOW
*  BIT 2 - IF SET TO ONE, INDICATES REQUEST FOR SYSTEM MUST COMPLETE
*  BIT 3 - IF SET TO ONE, INDICATES REQUEST FOR STEP MUST COMPLETE
* BIT 4 - SEE BELOW
* BITS 5,6, AND 7
*          001 - RET=HAVE
*          010 - RET=CHNG                                        20021
*          011 - RET=USE
*          111 - RET=TEST
*  BITS 1 AND 4 PERTAIN TOTHE SCOPE OF THE REQUEST AND HAVE THE FOLL
*          OWING MEANING
*        BIT 1     BIT 4     MEANING
*          0         0       STEP
*          0         1       RESERVE
*          1         0       SYSTEM
*          1         1       SYSTEMS
*  ON A RESERVE REQUEST, THE SCOPE IS AUTOMATICALLY CONVERTED TO
*  SYSTEMS.(KNOWN ACROSS SYSTEMS).
         SPACE 3
*        WHERE:
         SPACE 1
LISTEND  EQU   0                        OFFSET TO LIST END INDICATOR
LMINOR   EQU   1                        OFFSET TO LENGTH OF MINOR NAME
PARMCDS  EQU   2                        OFFSET TO PARAMETER CODES
RETURN   EQU   3                        OFFSET TO RETURN CODE FIELD
PTRMAJ   EQU   4                        OFFSET TO ADDR OF MAJOR NAME
PTRMIN   EQU   8                        OFFSET TO ADDR OF MINOR NAME
         SPACE 1
ENDIND   EQU   128                      END OF LIST INDICATOR  @JK68363
PLMI     EQU   X'80'                    PLUS OR MINUS INDICATOR
SHARE    EQU   X'40'                    SHARED RESOURCE INDICATOR
SMC      EQU   X'30'                    SET MUST COMPLETE INDICATORS
SMCSYS   EQU   X'20'                    SYSTEM MUST COMPLETE
SMCSTP   EQU   X'10'                    STEP MUST COMPLETE
HAVE     EQU   X'01'                    TO TEST 'HAVE' MASK
CHNG     EQU   X'02'                    TO TEST CHNG MASK         20021
USE      EQU   X'03'                    TO TEST 'USE' MASK
TEST     EQU   X'07'                    TO TEST 'TEST' MASK
AVAIL    EQU   X'00'                    RETURN CODE OF ZERO
INUSE    EQU   X'04'                    RETURN CODE OF FOUR
HAS      EQU   X'08'                    RETURN CODE OF EIGHT
         SPACE 1
PARMSIZE EQU   12                       LENGTH OF ELEMENT
PLASTBYT EQU   11                       PTR TO LAST BYTE       @JK67730
LPARM    EQU   12                       LENGTH OF ELEMENT
RESVSIZE EQU   16            SIZE OF RESERVE PARAMETER LIST
         EJECT
*****    CONTROL BLOCK FORMATS    *****
         SPACE 3
*        MAJOR QUEUE CONTROL BLOCK
         SPACE 1
*******************************************
* 0                                       *
*        ADDRESS OF NEXT MAJOR QCB        *
*                                         *
*******************************************
* 4                                       *
*       ADDRESS OF PREVIOUS MAJOR QCB     *
*                                         *
*******************************************
* 8                                       *
*        ADDRESS OF FIRST MINOR QCB       *
*                                         *
*******************************************
* 12                                      *
*             MAJOR QCB NAME              *
*                                         *
*******************************************
* 16                                      *
*             MAJOR QCB NAME              *
*                                         *
*******************************************
         SPACE 2
NXMAJ    EQU   0                        POINTER TO NEXT MAJOR QCB
PREVMAJ  EQU   4                        POINTER TO PREVIOUS MAJOR QCB
FSTMIN   EQU   8                        POINTER TO FIRST MINOR QCB
LMAJ     EQU   8                        LENGTH OF MAJOR NAME
MAJNAME  EQU   12                       MAJOR QCB NAME
MAJSIZE  EQU   24                       SIZE OF MAJOR TO A DBL WORD
MAJCLR   EQU   12                  PORTION TO CLEAR IN MAJOR QCB   2926
         EJECT
*        MINOR QUEUE CONTROL BLOCK
         SPACE 1
*******************************************
         AIF   (NOT &B(3)).TSO0111                                20021
* 0        * 1                            *                       20021
* MIN      * ADDRESS OF FIRST QEL         *                       20021
* TJID1    *                              *                       20021
*******************************************                       20021
* 4        * 5                            *                       20021
* MIN      * ADDRESS OF PREVIOUS          *                       20021
* TJID2    * MINOR QCB                    *                       20021
         AGO   .TSO0112                                           20021
.TSO0111 ANOP                                                     20021
* 0                                       *
*          ADDRESS OF FIRST QEL           *
*                                         *
*******************************************
* 4                                       *
*      ADDRESS OF PREVIOUS MINOR QCB      *
*                                         *
.TSO0112 ANOP                                                     20021
*******************************************
* 8                                       *
*        ADDRESS OF NEXT MINOR QCB        *
*                                         *
*******************************************
* 12      * 13       * 14                 *
* LENGTH  *  QCBPKF  *   MINOR QCB NAME   *
*         *          *                    *
*******************************************
* 16                                      *
*           MINOR QCB NAME                *
*         (VARIABLE LENGTH)               *
*******************************************
         SPACE 3
FSTQEL   EQU   0                        ADDRESS OF FIRST QEL
PREVMIN  EQU   4                        ADDRESS OF PREVIOUS MINOR QCB
PREVMIN1 EQU  PREVMIN+1 .               ADDRESS OF PREVIOUS M/QCB M0852
NXMIN    EQU   8                        ADDRES OF NEXT MINOR QCB
ELEVEN   EQU   11                       DISPLACEMENT TO LENGTH -1
LMINAME  EQU   12                       LENGTH OF MINOR NAME
QCBPKF   EQU   13                       TCB PROTECT KEY FIELD IN QCB
MINAME   EQU   14                       MINOR NAME
         SPACE 1
NOKEY    EQU   X'FF'                    INDICATES A SHARED RESOURCE
         SPACE 1
MINCLR   EQU   12                  PORTION TO CLEAR IN MINOR QCB   2926
FULLSIZE EQU   21                       ALLOW ROUNDING TO A DBL WORD
         EJECT
*              QUEUE ELEMENT              *
         SPACE 1
*******************************************
* 0       * 1                             *
*   SMC   *    ADDRESS OF NEXT QEL        *
*         *                               *
*******************************************
* 4       * 5                             *
*  CODE   *   ADDRESS OF PREVIOUS QEL     *
*         *                               *
*******************************************
         AIF   (NOT &B(3)).TSO0120                                20021
* 8       *                               *                       20021
*  TJID0  *   ADDRESS OF ENQUEUEING TCB   *                       20021
*         *                               *                       20021
*******************************************                       20021
* 12      *                               *                       20021
*  TJID1  *   ADDRESS OF SVRB FOR ENQ     *                       20021
*         *                               *                       20021
*******************************************                       20021
         AGO   .TSO0130                                           20021
.TSO0120 ANOP                                                     20021
* 8                                       *
*      ADDRESS OF ENQUEUEING TCB          *
*                                         *
*******************************************
* 12                                      *
*      ADDRESS OF SVRB FOR ENQ            *
*                                         *
*******************************************
.TSO0130 ANOP                                                     20021
         SPACE 2
*  IF THE QEL REPRESENTS A RESERVE REQUEST AND THE REQUESTOR WAS GIVEN
*  CONTROL OF THE RESOURCE, OFFSET 12 WILL CONTAIN THE UCB ADDRESS
*  OFFSET 4 FLAG DEFINITIONS
*  X'00' - INDICATES EXCLUSIVE REQUEST
*  X'40' - INDICATES RESERVE REQUEST
*  X'80' - INDICATES SHARED REQUEST
         SPACE 2
NXQEL    EQU   0                        POINTER TO NEXT QEL
QELSMC   EQU   0                        SMC INDICATOR IN QEL
PREVQEL  EQU   4                        POINTER TO PREVIOUS QEL
QELCDS   EQU   4                        QEL CODE BYTE
QELCLR   EQU   4                        PORTION TO BE CLEARED IN QEL
QELTCB   EQU   8                        POINTER TO TCB
         AIF   (NOT &B(3)).TSO0140                                20021
QELTJID0 EQU   8                       1ST HALF OF TIME-SHRNG     20021
*                                      JOB IDENTIFICATION.        20021
*..............1ST BIT OF QELTJID0 IS A FLAG BIT THAT IS SET      20021
*..............ON FOR ALL QELS FOR A SWAPPED TIME-SHARING USER.   20021
QELTJID1 EQU   12                      2ND HALF OF TIME-SHRNG     20021
*                                      JOB IDENTIFICATION.        20021
.TSO0140 ANOP                                                     20021
SVRBPTR  EQU   12                       POINTER TO SVRB OF ENQ
QELSIZE  EQU   16                       LENGTH OF QEL
NEGCODE  EQU   X'80'                    INDICATES MINUS QEL REQUEST
         AIF   (NOT &B(3)).TSO0145                                20021
QELRBWT  EQU   X'20'                   INDICATES THAT SVRB        20021
*                                      PROCESSNG IS TO BE         20021
*                                      DELAYED UNTIL SWAPIN.      20021
.TSO0145 ANOP                                                     20021
         EJECT
         AIF   (&B(1)).NMFTA1
ABENTRY  EQU   *                   BR ENTRY POINT FOR MFT ATTACH   I250
.NMFTA1  ANOP
         BALR  BASEREG,0
         USING *,BASEREG
         SPACE 3
***  HOUSEKEEPING AND INITIALIZATION
         SPACE 1
         AIF   (&B(1)).SHRD050
         AIF   (NOT &B(2)).NOSDASA
         CLC   RBNAME(TWO,CURRB),ABSVRBNM  BR ENTRY FROM ABEND     I250
         BNE   REGDEQ                      NO, PROCESS AS REG DEQ  I250
         TM    TCBPRGBT(PURGEREG),TCBDUMPG  PURGE TCB FROM DUMP DS I250
         BO    REGDEQ                      YES,DO PURGE DEQ        I250
*        IF NOT MUST BE RELEASE OF SDASD REQUEST NOT DEQ           I250
         B     RLSETEST                    DO RELEASE NO DEQ       I250
REGDEQ   EQU   *                                                   I250
.NOSDASA ANOP
         LA    CURPARM,0(INPUTREG)   INITIALIZE LOOP THROUTH PARAM LIST
         LR    TOPPARM,CURPARM    SAVE POINTER TO FIRST ELEMENT
         AGO   .SHRD060
.SHRD050 ANOP
         LR    CURPARM,INPUTREG         INITIALIZE LOOP THROUGH P.LIST
         LR    TOPPARM,INPUTREG         SAVE POINTER TO FIRST ELEMENT
.SHRD060 ANOP
         SPACE 3
***  INVOKE VALIDITY CHECK ROUTINE.
         SPACE 1
         BAL   LINKREG,CHKLIST          GO TO VALIDITY CHECK INTERFACE
         SPACE 1
         AIF   (NOT &B(1)).SHRD070
***  VALIDITY CHECK NO GOOD, ABEND THE REQUESTOR.
         BC    15,DRRX4                 BAD RETURN, ABEND THE TASK
         BC    15,DRRX3                 BAD RETURN, ABEND THE TASK
         BC   15,DRRX2                  BAD RETURN, ABEND THE TASK
*    RETURN TO NEXT INSTRUCTION IF LIST OK
         SPACE 3
.SHRD070 ANOP
***  LINK TO 'FINDMAJ' IN AN ATTEMPT TO FIND A
*    MAJOR QCB OF THE SAME NAME AS THAT PASSED
*    IN THE SUBLIST.
         SPACE 1
PARMLOOP BAL   LINKREG,FINDMAJ          LOCATE MAJOR QCB
         LTR   CURMAJ,CURMAJ            Q.IS MAJOR QCB PRESENT
         BC    4,DQERR1                 NO, TEST FOR RETURN OR ABEND
         SPACE 3
***  LINK TO 'FINDMIN' IN AN ATTEMPT TO FIND A
*    MINOR QCB OF THE SAME NAME AS THAT PASSED
*    IN THE SUBLIST.  ONLY THE MINORS ON THE
*    PREVIOUSLY FOUND MAJOR ARE SEARCHED.
         SPACE 1
         BAL   LINKREG,FINDMIN          LOCATE MINOR QCB
         LTR   CURMIN,CURMIN            Q.IS MINOR QCB PRESENT
         BC    4,DQERR1                 NO, TEST FOR RETURN OR ABEND
         EJECT
***  A MAJOR QCB AND MINOR QCB OF THE SAME NAMES
*    AS THAT PASSED IN THE SUBLIST HAVE BEEN FOUND.
*    WE NOW DETERMINE THAT A QEL FOR THIS TASK
*    CAN BE LEGALLY DEQUEUED.
         SPACE 1
*    CONSIDERATION OF THE EXCLUSIVE (PLUS) AND
*    SHARED (MINUS) ATTRIBUTES OF THE QEL IS GIVEN
*    IN DETERMINING THE LEGALITY OF THE DEQUEUE.
         SPACE 1
         L     CURQEL,FSTQEL(CURMIN)    OBTAIN CURRENT QEL
         CL    CURTCB,QELTCB(CURQEL)    Q.IS DEQ FROM SAME TASK
         BC    8,TOPQEL                 YES, TAKE BRANCH
QELLIST  TM    4(CURQEL),PLMI           Q. IS CUR. QEL + OR - .
         BC    8,DQERR2                 PLUS, TEST FOR RETURN OR ABEND
GETNEXT  L     CURQEL,NXQEL(CURQEL)     OBTAIN NEXT QEL
         LA    CURQEL,0(CURQEL)         CLEAR HIGH ORDER BYTE
         LTR   CURQEL,CURQEL            Q. IS NEXT QEL PRESENT
         BC    8,DQERR1                 NO, TEST FOR RETURN OR ABEND
QELNEXT  CL    CURTCB,QELTCB(CURQEL)    Q. IS CUR TCB DEQ'UEUING
         BC    7,QELLIST                NO, TAKE BRANCH
         TM    4(CURQEL),PLMI           Q. IS CR. QEL + OR - .
         BC    8,DQERR2A .         PLUS, TEST FOR RETURN OR ABEND  5173
         SPACE 3
***  A QEL HAS BEEN FOUND THAT CAN BE LEGALLY
*    DEQUEUED.  IT IS EITHER A EXCLUSIVE
*    REQUEST ON THE TOP OF THE QUEUE, OR
*    A SHARED REQUEST WITH NO EXCLUSIVE REQUESTS
*    ABOVE IT.
         SPACE 1
         AIF   (NOT &B(2)).SHRDA24
TOPQEL   TM    QELCDS(CURQEL),RESERVED  Q. IS THIS QEL RESERVE QEL
         BC    8,TOPQEL2                NO - SKIP RELEASE TEST
         L     UCBREG,QELUCB(CURQEL)    YES - TEST FOR RELEASE
         BAL   LINKREG,RLSETEST         RELEASE IF COUNT IS ZERO
TOPQEL2  TM    PARMCDS(TOPPARM),HAVE    Q. ARE RETURN CODES REQUESTED
         AGO   .SHRDA25
.SHRDA24 ANOP
TOPQEL   TM    PARMCDS(TOPPARM),HAVE    Q. ARE RETURN CODES REQUESTED
.SHRDA25 ANOP
         BC    8,NORET                  NO, SKIP RETURNS
         MVI   RETURN(CURPARM),AVAIL    GIVE RETURN CODE OF ZERO
NORET    BAL   LINKREG,DECTCB           DECREMENT TCBCT FIELD
         LR    WORKREG1,CURQEL          LOAD CUR QEL ADDRESS
         LR    WORKREG2,CURQEL          ASSUME PLUS REQUEST
         TM    4(CURQEL),PLMI           Q. IS QEL + OR -
         BC    8,REMOVE                 +, TAKE BRANCH
         LCR   WORKREG2,CURQEL          COMPLEMENT, INDICATING SHARED
         SPACE 3
*    LINK TO 'DQELEMNT' WHICH WILL DEQUEUE THE QEL
         SPACE 1
REMOVE   BAL   LINKREG,DQELEMNT         DEQUEUE THE QEL
         EJECT
***  SET SIZE OF THE QEL AND LINK TO THE FREEMAIN ROUTINE.
         SPACE 1
         LA    WORKREG0,QELSIZE         OBTAIN QEL SIZE
         LR    FMREG,CURQEL             LOAD ADR. OF QEL FOR FREEMAIN
         BAL   LINKREG,FREEUP           BRANCH TO FREEMAIN INTERFACE
         SPACE 3
***  QEL HAS BEEN REMOVED AND THE SPACE FREED.  IF ANOTHER
*    QEL IS NOT ON THE QUEUE GO TO PROCESS THE MINOR
*    QCB.  IF ANOTHER QEL HAS POPPED UP DETERMINE IF
*    ITS SVRB WAIT COUNT SHOULD BE DECREMENTED
*    AND THE TASK SWITCH ROUTINE INVOKED.
         SPACE 1
         L     LINKREG,FSTQEL(CURMIN) .     SET ADDR OF NEXT QEL  M0852
         LA    LINKREG,0(,LINKREG) .        CLEAR HI-ORDER BYTE   M0852
         CR   WORKREG0,LINKREG .     Q  HAS A QEL POPPED TO TOP   M0852
         BC    8,PROCMIN                NO, PROCESS MINOR
         L     CURQEL,FSTQEL(CURMIN)    GET NEW TOP QEL
         AIF   (NOT &B(3)).TSO0500                                20021
         SPACE 2                                                  20021
***                                                               20021
*   THIS CODE TESTS TO SEE IF THE NEW TOP QEL BELONGS TO A        20021
*    SWAPPED TIME-SHARING USER.  IF SO, THE TIME-SHARING          20021
*    DRIVER IS NOTIFIED TO SWAP THIS USER IN.  SVRB PROCESSING    20021
*    IS DELAYED UNTIL THE TIME-SHARING USER IS SWAPPED IN.        20021
         TM    QELTJID0(CURQEL),ANYON  QEL FOR TIME-SHRNG TASK?   20021
         BZ    NOTTSQEL                NO. CONTINUE.              20021
         TM    QELCDS(CURQEL),PLMI     Q. IS QEL SHARED.          20021
         BZ    ROLLIN                  NO. ROLLIN USER.           20021
         LTR   WORKREG2,WORKREG2       WAS REMOVED QEL SHARED?    20021
         BM    NXTINPUT                YES. CHK NXT PARAM LIST.   20021
ROLLIN   OI    QELCDS(CURQEL),QELRBWT  FLAG QEL FOR SVRB PRO-     20021
*                                      CESSING AFTER ROLLIN.      20021
         LH    REG0,QELTJID0(CURQEL)   OBTAIN TIME-SHRNG USER'S   20021
         IC    REG0,QELTJID1(CURQEL)   TERMINAL JOB ID.           20021
         N     REG0,TSDRVMSK           CLEAR HIGH-ORDER BITS.     20021
         SR    REG1,REG1                                          20021
         TSEVENT  USERRDY,TJID=(0)                                20021
         TM    QELCDS(CURQEL),PLMI     Q. IS QEL SHARED.          20021
         BZ    NXTINPUT                NO. CHK NXT PARAM LIST.    20021
         B     NEXTQEL                                            20021
*                                                                 20021
***                                                               20021
NOTTSQEL EQU   *                                                  20021
         SPACE 2                                                  20021
.TSO0500 ANOP                                                     20021
         TM    QELCDS(CURQEL),PLMI      Q. IS QEL SHARED
         BC    8,PLUSQEL                EXCLUSIVE, TAKE BRANCH
         LTR   WORKREG2,WORKREG2        Q. WAS REMOVED QEL SHARED
         BC    4,NXTINPUT               YES, TAKE BRANCH
REPQEL   BAL   LINKREG,DECSVRB          DECREMENT SVRB/ TASK SWITCH
         AIF   (NOT &B(3)).TSO0505                                20021
NEXTQEL  EQU   *                                                  20021
.TSO0505 ANOP                                                     20021
         L     CURQEL,NXQEL(CURQEL)     OBTAIN NEXT QEL
         LTR   CURQEL,CURQEL            Q. IS THERE A NEXT QEL
         BC    8,NXTINPUT               NO, TAKE BRANCH
         AIF   (NOT &B(3)).TSO0510                                20021
         SPACE 2                                                  20021
***                                                               20021
*    THIS CODE TESTS TO SEE IF THE NEXT QEL BELONGS TO A          20021
*    SWAPPED TIME-SHARING USER.                                   20021
         TM    QELTJID0(CURQEL),ANYON  QEL FOR  A SWAPPED         20021
*                                       TIME-SHARING TASK?        20021
         BZ    NOTTSQL                 NO. CONTINUE NORMALLY.     20021
         TM    QELCDS(CURQEL),PLMI     Q. IS QEL SHARED.          20021
         BZ    NXTINPUT                NO. CHK NXT PARAM LIST.    20021
         B     ROLLIN                  YES. TELL TIME-SHARING     20021
*                                      DRIVER TO SWAPIN USER.     20021
*                                                                 20021
********                                                          20021
NOTTSQL  EQU   *                                                  20021
         SPACE 2                                                  20021
.TSO0510 ANOP                                                     20021
         TM    QELCDS(CURQEL),PLMI      Q. IS NEXT QEL SHARED
         BC    1,REPQEL                 YES, TAKE BRANCH
         BC    15,NXTINPUT              TAKE BRANCH
PLUSQEL  BAL   LINKREG,DECSVRB          DECREMENT SVRB/ TASK SWITCH
         BC    15,NXTINPUT              TAKE BRANCH
         EJECT
***  A QEL HAS BEEN REMOVED AND ITS SPACE FREED.
*    IT WAS THE ONLY QEL ON THE MINOR.  THEREFORE,
*    WE WANT TO REMOVE THE MINOR AND FREE THE SPACE.
*    THE MAJOR WILL ALSO BE REMOVED AND ITS SPACE FREED
*    IF THE MINOR WAS THE ONLY ONE ON THE CHAIN.
         SPACE 1
PROCMIN  BAL   LINKREG,ADDMINOR         SPACE 1
         BAL   LINKREG,DQMINOR          DE-QUEUE MINOR QCB
         LR    WORKREG0,SUMREG          LOAD MINOR SIZE
         LR    FMREG,CURMIN             LOAD ADR. OF MINOR FOR FREEMAIN
         BAL   LINKREG,FREEUP           BRANCH TO FREEMAIN INTERFACE
         CL    WORKREG0,FSTMIN(CURMAJ)  Q. IS THERE ANY MORE MINORS
         BC    7,NXTINPUT               YES, TAKE BRANCH
         LR    WORKREG1,CURMAJ          LOAD CURRENT MAJOR
         BAL   LINKREG,DQELEMNT         DE-QUEUE MAJOR QCB
         LA    WORKREG0,MAJSIZE         OBTAIN MAJOR SIZE
         LR    FMREG,CURMAJ             LOAD ADR. OF MAJOR FOR FMAIN
         BAL   LINKREG,FREEUP           BRANCH TO FREEMAIN INTERFACE
         SPACE 3
***  DETERMINE IF THE SUBLIST PROCESSING IS COMPLETE.
*    IF NOT, GET THE NEXT AND GO BACK TO THE TOP.
*    IF YES, THE RESET MUST COMPLETE INTERFACE
*    IS ENTERED AND THE ROUTINE INVOKED IF REQUESTED.
*    WHEN COMPLETE RETURN VIA THE RETURN INTERFACE
*    TO SET REGISTER FIFTEEN PROPERLY.
         SPACE 1
NXTINPUT TM    0(CURPARM),ENDIND        Q. IS THIS LAST INPUT ENTRY
         LA    CURPARM,LPARM(CURPARM)   GET NEXT INPUT ENTRY
         BZ    PARMLOOP                 NO TAKE BRANCH         @JK68363
         BAL   LINKREG,RMCOMP           GO RESET MUST COMPLETE
RMCRET   LR    CURPARM,TOPPARM          RESET FOR EXIT
         AIF   (&B(1)).SHRD080
         BAL   LINKREG,MCRET2
         CLC   RBNAME(TWO,CURRB),ABSVRBNM  BR ENTRY FROM ABEND     I250
         BNE   CONTIII              CONTINUE NORMALLY             19054
         L     RETREG,RG14INRB(CURRB)     RETURN REGISTER          I250
         BR    RETREG              YES - RETURN TO ABEND          19054
CONTIII  EQU   *                                                  19054
         L     WORKREG1,NEW       DOES CURRENT TASK REGAIN CONTROL
         CLC   0(LNEW,WORKREG1),4(WORKREG1)
         BC    8,GOEXIT           YES.  EXIT
         MVC   PSWADR(LPSW,CURRB),EXITPSW  NO, SET UP PSW TO
*                                 ISSUE SVC EXIT
         STM   10,9,TCBGRS(CURTCB)     SAVE REGS
         L     WORKREG2,DISPATCH  AND GO TO THE DISPATCHER
         BCR   15,WORKREG2
         AGO   .SHRD090
.SHRD080 ANOP
         BC    15,MCRET2                GO TO EXIT INTERFACE
.SHRD090 ANOP
         EJECT
         SPACE 1
***  GET THE WAIT COUNT FIELD FROM THE SVRB.
*    IF EQUAL TO ZERO, GET THE NEXT PARAMETER LIST ELEMENT.
*    IF NOT EQUAL TO ZERO, DECREMENT THE WAIT COUNT BY ONE
         SPACE 1
DECSVRB  SR    WORKREG2,WORKREG2        SET TO ZERO
         L     GENREG,SVRBPTR(CURQEL)   OBTAIN SVRB POINTER
*    A WAIT COUNT OF ZERO INDICATES THE TASK REPRESENTED BY
*    THIS SVRB IS BEING ABENDED.  IN THIS CASE DO NOT
*    DECREMENT THE WAIT COUNT.
         CLI   RBWCF(GENREG),WAITIND    Q. IS WAIT COUNT ZERO
         BCR   8,LINKREG                YES, RETURN TO MAINLINE
         IC    WORKREG2,RBWCF(GENREG)   GET WAIT COUNT
         BCTR  WORKREG2,0               DECREMENT IT
         STC   WORKREG2,RBWCF(GENREG)   AND PUT IT BACK
         AIF   (NOT &B(2)).SHRDA45
         TM    QELCDS(CURQEL),RESERVED
         BC    8,NOTRSV
         L     WORKREG2,QELUCB(CURQEL)  GET UCB PTR FROM QEL BJ 60112
         L     WORKREG2,RBSAVUCB(WORKREG2) GET PARM PTR FOR THIS QEL
         ST    WORKREG2,QELUCB(CURQEL)  SET UCB POINTER IN QEL
         SR    WORKREG1,WORKREG1         CLEAR REG FOR IC
         IC    WORKREG1,UCBRSCT(WORKREG2) GET UCB RESERVE COUNT
         LA    WORKREG1,1(WORKREG1)
         STC   WORKREG1,UCBRSCT(WORKREG2) REPLACE NEW COUNT
NOTRSV   CLI   RBWCF(GENREG),WAITIND    Q. IS SVRB STILL WAITING
         AGO   .SHRDA46
.SHRDA45 ANOP
         CLI   RBWCF(GENREG),WAITIND    Q. IS SVRB STILL WAITING
.SHRDA46 ANOP
         BCR   7,LINKREG                YES, RETURN TO MAINLINE
         EJECT
         SPACE 2
***  IF WE FALL THROUGH TO THIS CODE THE TASK WHOSE WAIT COUNT
*    WAS DECREMENTED CAN NOW HAVE CONTROL OF THE RESOURCES
*    ON WHICH HE ENQUEUED.
         AIF   (&B(1)).SHRD100
*    BUT WE MUST DETERMINE IF A HIGHER PRIORITY TASK IS TO BE
*    DISPATCHED.  IF SO, THE HIGHER PRIORITY TCB ADDRESS IN 'NEW'
*    IS LEFT UNDISTURBED.  OTHERWISE, THEENQUEUEING TASK'S TCB
*    ADDRESS IS PLACED IN 'NEW'.
TASKSWTH L     WORKREG1,QELTCB(CURQEL) GET TCB ADDRESS
         TM    TCBDISP(WORKREG1),X'FF' IS TASK DISPATCHABLE
         BCR   7,LINKREG          NO
TASKSWT2 L     WORKREG3,0(WORKREG1)  YES
         TM    RBWCF(WORKREG3),X'FF'   IS RB IN WAIT
         BCR   7,LINKREG          YES
         L     WORKREG3,NEW       NO. UPDATE 'NEW' ACCORDING
         L     WORKREG3,0(WORKREG3)    TO PRIORITY
         CLC  TCBDSP(ONE,WORKREG3),TCBDSP(WORKREG1) COMPARE PRIOR BJ
          BH  D0(LINKREG)           BRANCH HI                 BJ 40409
          BE  TSTSCH                BRANCH EQ                 BJ  40409
CHNGNEW  EQU   *                                              BJ  40409
         L     WORKREG3,NEW
         ST    WORKREG1,0(WORKREG3)
         L    CURTCB,LNEW(WORKREG3)  RESORE THE CURRENT TCB PTR BJ40409
         BCR   15,LINKREG
TSTSCH   EQU   *                                              BJ 40409
         L     CURTCB,TCBTCB(WORKREG1) SEARCH CHAIN           BJ 40409
TSTZRO   LTR   CURTCB,CURTCB       BEGINNING WITH             BJ 40409
         BNZ   COMPTCB             TCB FROM NEW TOP QEL       BJ 40409
         L     WORKREG3,NEW        RETURN TO MAINLINE         BJ 40409
         L     CURTCB,LNEW(WORKREG3)
         BR    LINKREG                                        BJ 40409
COMPTCB  EQU   *                                              BJ 40409
         CR    CURTCB,WORKREG3     IF EQUAL, NEW TCB IS       BJ 40409
         BE    CHNGNEW             HIGHER SCHED. PRIORITY     BJ 40409
         L     CURTCB,TCBTCB(CURTCB) GET NEXT TCB             BJ 40409
         B     TSTZRO              CONTINUE SEARCH            BJ 40409
         AGO   .SHRD110
.SHRD100 ANOP
*    THE TASK SWITCH ROUTINE IS INVOKED, AND IF THE READY
*    TASK IS OF HIGHER PRIORITY THAN THE CURRENT TASK,
*    'NEW' WILL BE MODIFIED TO REFLECT THE TASK SWITCH.
*    NOTE THAT THE TASK WHOSE DEQUEUE REQUEST WE
*    ARE NOW HANDLING MAY OR MAY NOT GET CONTROL NEXT.
         SPACE 1
*              PREPARATION FOR TASK SWITCH ROUTINE
* 1.REGISTER 10  MUST CONTAIN THE ADDRESS OF THE READY TCB
* 2.REGISTER 11  CONTAINS THE ADDRESS OF THE TASK SWITCH ROUTINE
* 3.REGISTER 14  IS THE RETURN REGISTER
         SPACE 2
TASKSWTH LR    WORKREG2,CURPARM         SAVE POINTER TO PARAMETER LIST
         L     TASKTCB,QELTCB(CURQEL)   GET TCB ADDRESS
TASKSW1  L     WORKREG1,TASKSWT         GET EP OF TASK SWITCH ROUTINE
         LR    GENREG,RETREG            SAVE RETURN REGISTER
         BALR  RETREG,WORKREG1          GO TO TASK SWITCH ROUTINE
         SPACE 2
*   UPON RETURNING FROM THE TASK SWITCH ROUTINE.
         LR    CURPARM,WORKREG2         RESTORE PARAMETER LIST PTR
         LR    RETREG,GENREG            RESTORE RETURN REGISTER
         BCR   15,LINKREG               RETURN TO MAINLINE
.SHRD110 AIF   (NOT &B(2)).SHRDA43
         SPACE 3
RLSETEST SR    WORKREG1,WORKREG1    CLEAR FOR UCB COUNT           19772
         IC    WORKREG1,UCBRSCT(ZENREG)  GET UCB RESERVE COUNT    19772
         CLI   UCBRSCT(ZENREG),ONERESV  IS THIS LAST QEL RESVING  19772
         BE    RELEASE             YES GO TO RELEASE DEVICE       19772
         LTR   WORKREG1,WORKREG1   IS RESERVE CNT ZERO
         BNZ   NOTRES              NO CONTINUE
         LA    WORKREG1,1          PREVENT POSSIBLE DECRMT PAST ZERO
         B     RELEASE             CHECK POSSIBLE RELEASE         19772
NOTRES   BCTR  WORKREG1,0          DECRMT UCB RES CNT AND
         STC   WORKREG1,UCBRSCT(ZENREG)   STORE IT BACK           19772
         BR    LINKREG             RETURN TO MAINLINE             19772
RELEASE  CLI   RESINDIC(ZENREG),WAITIND  IS DEVICE RESERVED       19772
         BC    8,NOTRES            NO, BYPASS RELEASE             19772
*                                  YES, DO RELEASE                19772
*  NOTE:  ANY CHANGE TO THE FOLLOWING RELEASE EXCP ROUTINE OR ITS
*  ASSOCIATED INTERFACE WILL REQUIRE THE SAME CHANGE IN MFT-II
*  MANUAL PURGE WHICH RESIDES IN MODULE, IEFSD597
         EJECT
*  FUNCTION                                                          *
*                                                                    *
*          1. GET 100 BYTES FROM SUBPOOL 0                           *
*                                                                    *
*          2. INITIALIZE A DEB, DCB, IOB, ECB, AND CHANNEL PROGRAM   *
*             IN SUBPOOL 0                                           *
*                                                                    *
*          3. ISSUE AN SVC 0 TO CAUSE A DEVICE RELEASE               *
*                                                                    *
*          4. WAIT FOR THE RELEASE TO COMPLETE                       *
*                                                                    *
*          5. FREE CORE FROM SUBPOOL 0                               *
*                                                                    *
*          6. RETURN TO THE DEQUEUE ROUTINE                          *
*                                                                    *
*  ENTRY                                                             *
*                                                                    *
*          FROM DEQUEUE VIA A BRANCH                                 *
*                                                                    *
*  EXIT                                                              *
*          BACK TO DEQUEUE                                           *
*                                                                    *
*  INPUT                                                             *
*                                                                    *
*          PTR TO CURRENT TCB IN REG TCBREG                          *
*          PTR TO UCB OF DEVICE REQUIRING A RELEASE IN REG UCBREG    *
*  OUTPUT                                                            *
*          NONE                                                      *
*                                                                    *
*  OPERATION                                                         *
*                                                                    *
*          SEE COMMENTS AND REMARKS ASSOCIATED WITH CODE             *
*                                                                    *
**********************************************************************
*                                                                    *
         SPACE 3
*   OBTAIN CORE REQUIRED FOR THE DCB, ECB, IOB, CCW AND DEB
         SPACE 1
         LR    WORKREG2,GENREG     PRESERVE REG 15                19772
         XR    CURRB,CURRB         CLEAR SP REG                @JK69690
         TM    TCBFLG,ABTERM       IS TASK ABENDING            @JK69690
         BZ    NOTABING            NO                          @JK69690
          GETMAIN  EC,A=RLWKADD,LV=100                         @JK69690
         L     GMRETREG,RLWKADD    GET ADDR OF GOTTEN CORE     @JK69690
         LTR   GENREG,GENREG       WAS REQUEST SATISFIED       @JK69690
         BZ    GOON                YES                         @JK69690
         LA    CURRB,253           NO-PREPARE FOR SQS REQUEST  @JK69690
NOTABING    GETMAIN   R,SP=(CURRB),LV=100                      @JK69690
         SLL   CURRB,24            SHIFT SPID TO HO BYTE       @JK69690
         OR    FMREG,CURRB         SAVE SPID FOR FREEING       @JK69690
GOON     EQU   *                                               @JK69690
         LR    GENREG,WORKREG2     RESTORE WORKREG3               19772
         BCTR  WORKREG1,0                DECR UCB COUNT AND       19772
         STC   WORKREG1,UCBRSCT(ZENREG)    STORE IT               19772
         LR    WORKREG1,GMRETREG    GET ADDRESS OF GOTTEN CORE    19772
         USING RLDCB,WORKREG1           USE AS BASE FOR DSECT
*   INITIALIZE DEB
         XC    0(100,WORKREG1),0(WORKREG1) CLEAR GOTTEN CORE
         MVI   DENEXT,X'02'             NUMBER OF EXTENTS
         ST    WORKREG1,DEDCBAD        POINT DEB TO DCB
         MVI   DEPKID,X'0F'            SET DEB ID
         MVZ   DEPKID,TCBPKF(TCBREG)    SET DEB PROTECT KEY
         L     RELWK1,CVTPTR      GET ADDR OF CVT
         L     RELWK1,CVTXAPG-CVT(RELWK1)  GET ADDR OF IOS APP TABLE
         ST    RELWK1,DEAPPAD           STORE IN TBL POINTER SLOT
         MVI   DEEXTSCL,X'04'           SET SIZE OF EXTENTS
         ST    UCBREG,DEUCBAD-2         SET POINTER TO UCB
         MVI   DEFM,X'18'               SET FILE MASK
         MVC   DEBB(2),UCBSKA+1(UCBREG) SET BIN NUMBER OF DEVICE
         MVI   DEEND,X'FF'              INIT END C TO 'FF'
         MVC   DEEND+1(3),DEEND         PROPAGATE 'FF' TO REMAINING CHH
         LA    RELWK1,X'01'             SET NO. ALLOCATED TRACKS TO 1
         STH   RELWK1,DETRKS            STORE IN DEB
*   INITIALIZE IOB
         MVI   IOBFL1,X'02'             SET IOB FLAGS
         MVI   IOBFL2,X'00'
         ST    WORKREG1,IOBECBAD       SET ADDRESS OF ECB
         LA    RELWK1,RLCCW             GET ADDRESS OF CHANNEL PROGRAM
         ST    RELWK1,IOBSTART          POINT IOB TO CHANNEL PROGRAM
         ST    WORKREG1,IOBDCBAD       POINT IOB TODCB
         MVC   IOBSK(4),UCBSKA+1(UCBREG) MOVE IN SEEK ADDRESS FOR UCB
*                            THIS STMT DELETED THEN REINSERTED @SA63281
*   INITIALIZE DCB
         LA    RELWK1,DEAPGV            GET ADDRESS OF DEB
         ST    RELWK1,DCBDEBAD          POINT DCB TO DEB
*   INITIALIZE CHANNEL PROGRAM
         MVI   RLCCW,X'03'              NOP COMMAND CODE
         MVI   RLCCW+4,X'20'            SUPPRESS INCORRECT LENGTH IND.
         MVI   RLCCW+7,X'EE'            IDENTIFICATION, NORMALLY COUNT
         LR    WORKREG2,GENREG          PRESERVE WORKREG3
         EXCP  RLIOB                   ISSUE RELEASE
*
         WAIT  ECB=RLECB               WAIT FOR RELEASE
         SSM   *+1                DISABLE
         LR    GMRETREG,WORKREG1   SET UP ADDR FOR FREEMAIN
         SLDL  GMREG,8             GET SPID IN REG0            @JK69690
         SRL   FMREG,8             SHIFT ADDR OF CORE BACK     @JK69690
         LR    GENREG,REG0         SPID TO WORKREG             @JK69690
         SLL   GENREG,24           SPID IN HO BYTE             @JK69690
         LA    REG0,100            LENGTH OF ACQUIRED CORE     @JK69690
         OR    REG0,GENREG         ADDR & SPID TOGETHR FOR FM  @JK69690
         FREEMAIN   R,LV=(0),A=(1)                             @JK69690
*
         L     CURRB,D0(CURTCB)    RESTORE SVRB POINTER        @JK69690
         LR    GENREG,WORKREG2          RESTORE WORKREG3
         BCR   15,LINKREG               RETURN TO CALLER
.SHRDA43 ANOP
         EJECT
***  DETERMINE IF A RESET MUST COMPLETE OPERATION HAS BEEN
*    REQUESTED.
*    IF YES, INTERFACE INTERNALLY WITH THE SMC/RMC ROUTINE.
*    IF NO, RETURN.
         SPACE 1
RMCOMP   TM    PARMCDS(TOPPARM),SMC     Q. RMC REQUESTED
         BCR   8,LINKREG                NO, RETURN
         LR    WORKREG3,RETREG          YES, SAVE LINKREG
         TM    PARMCDS(TOPPARM),SMCSYS  Q. IS SYSTEM RESET REQUESTED
         BC    8,STEPRMC                NO, BRANCH TO STEP PROCESS
         AIF   (&B(1)).SHRD120
         LCR   INPUTREG,CURTCB          COMPLIMENT TCB FOR SYSTEM
         LH    WORKREG0,RMCSYSMK        LOAD SYSTEM MASK
         NI    TCBFLG1(CURTCB),TCBRSMC  RESET MUST COMPLETE
MCSTPSYS   EQU    *                                               19054
         BAL   RETREG,SETRSMC     GO TO SMC ROUTINE
         LR    RETREG,WORKREG3
         L     WORKREG3,ADSYMCSW
         OI    1(WORKREG3),X'F0'  RESET SWITCH FOR EXITING FROM SIRB
         BC    15,ALLOWAX
STEPRMC  NI    TCBFLG1(CURTCB),TCBRJMC TURN OFF SMC FLAG
         LH    WORKREG0,RMCSTPMK       LOAD STEP MASK             19054
         LR    INPUTREG,CURTCB                                    19054
         B     MCSTPSYS                                           19054
ALLOWAX  NI    TCBFLG(CURTCB),TCBFXR  ALLOW ASYNCHRONOUS EXITS
         BCR   15,LINKREG         RETURN TO MAINLINE
         EJECT
         AGO   .SHRD130
.SHRD120 ANOP
         STATUS RESET,MC,SYSTEM    RESET SYSTEM MUST COMPLETE
         BC    15,DORMC           BRANCH TO BRANCH
STEPRMC  STATUS RESET,MC,STEP      RESET STEP MUST COMPLETE
DORMC    EQU   *                                                  20021
         AIF   (NOT &B(3)).TSO0600                                20021
         SPACE 2                                                  20021
***                                                               20021
*    TEST TO SEE IF THE RESET MUST COMPLETE WAS DONE FOR A        20021
*    TIME-SHARING TASK. IF SO, NOTIFY THE TIME-SHARING DRIVER.    20021
         TM    PARMCDS(TOPPARM),SMCSYS REQUEST FOR SYSTEM MC?     20021
         BZ    NOTTSRMC                NO. CONTINUE.              20021
         TM    TCBTSFLG(CURTCB),TCBTSTSK IS THIS A TIME-          20021
*                                      SHARING TASK?              20021
         BZ    NOTTSRMC                NO. CONTINUE.              20021
         L     REG1,TCBJSCB(CURTCB)    ACCESS JOB STEP CTL BLK    20021
         USING IEZJSCB,REG1                                       20021
         LH    REG0,JSCBTJID           OBTAIN TERMINAL JOB ID.    20021
         DROP  REG1                                               20021
         SR    REG1,REG1                                          20021
         TSEVENT  RELMC,TJID=(0)                                  20021
*                                                                 20021
***                                                               20021
NOTTSRMC EQU   *                                                  20021
         SPACE 2                                                  20021
.TSO0600 ANOP                                                     20021
         B     RMCRET                   RETURN TO MAINLINE        20021
         EJECT
IEA0EQ01 BALR  BASEREG,0                ESTABLISH BASE
         LA    GENREG,IEA0EQ01-IGC048   GET DIFFERENCE
         SR    BASEREG,GENREG           RESET BASE
         SPACE 1
         SR    WORKREG0,WORKREG0        INITIALIZE COMPERAND
         L     WORKREG3,ENTNQDQ                                    REFR
         USING  NQDQQCB,WORKREG3                                   REFR
         LA    CURMAJ,HEADQCB           GET ADDRESS OF HEAD
         DROP   WORKREG3                                           REFR
         SPACE 1
LOADMAJ  CL    WORKREG0,NXMAJ(CURMAJ)   Q. IS MAJOR PRESENT
         BCR   8,RETREG                 NO, RETURN TO CALLER
         SPACE 1
REPTEMAJ L     CURMAJ,NXMAJ(CURMAJ)     GET ADDRESS OF MAJOR QCB
         CL    WORKREG0,FSTMIN(CURMAJ)  Q. IS THERE A MINOR
         BC    8,FREMAJ                 NO MINOR, DEQUEUE MAJOR
         SPACE 1
*    THE SITUATION TESTED FOR ABOVE, A MAJOR QCB WITHOUT A
*    MINOR QCB, CAN ARISE IF THE TASK WAS ABENDED FROM ENQ.
*    IF WE FALL THROUGH TO HERE, THERE IS A MINOR QCB.
*    NOTE THAT THERE CANNOT BE A MINOR QCB WITHOUT A QEL.
         SPACE 1
         LA    WORKREG3,TESTMIN         SET EXIT ADDRESS
         L     CURMIN,FSTMIN(CURMAJ)    GET THE ADDRESS OF THE MINOR
REPTEMIN SR    WORKREG1,WORKREG1        INITIALIZE INDICATOR
         L     CURQEL,FSTQEL(CURMIN)    GET FIRST QEL
         LTR   CURQEL,CURQEL . IS THERE A QEL                BJ A55316
         BZ    TESTMIN                                       BJ A55316
         CL    CURTCB,QELTCB(CURQEL)    Q. SHOULD IT BE DEQUEUED
         LR    WORKREG4,CURQEL          YES, SAVE ADDRESS OF QEL  M1336
         BC    8,TSTNXT                 YES, TAKE BRANCH
TSTSHR   TM    QELCDS(CURQEL),NEGCODE   Q. IS IT SHARED
         BC    7,SKIP1                  YES
         BALR  WORKREG1,0               NO, SET INDICATOR
SKIP1    BAL   LINKREG,ISNXT            GO GET NEXT
         BCR   15,WORKREG3              EXIT, NO MORE QEL'S
         BCR   0,0                      PAD FOR VECTOR RETURN
         LR    CURQEL,WORKREG2          XFR QEL ADDRESS
         CL    CURTCB,QELTCB(CURQEL)    Q. SHOULD IT BE DEQUEUED
         BC    7,TSTSHR                 NO, TEST CODE AND GET NEXT
         LR    WORKREG4,CURQEL          YES, SAVE ADDRESS OF QEL  M1336
         AIF   (NOT &B(2)).SHRDA54
         LTR   WORKREG1,WORKREG1       Q. IS INDICATOR ON
         BC    7,REMVE                 YES REMOVE THE QEL
         TM    QELCDS(CURQEL),RESERVED  NO IS QEL A RESERVE
         BC    8,SKIP2                 NO TREAT NORMALLY
         LR    GENREG,UCBREG            SAVE WORKREG3
         L     UCBREG,QELUCB(CURQEL)    GET UCB POINTER
         TM    UCBID(UCBREG),UCBIDMSK   UCB ADDR IN THE QEL       4531
         BNO   NOTUCB              NO, THE SVRB IS STILL THERE    4531
         CLI   UCBNAME(UCBREG),UCBNMEMK IS THERE A DEV NAME       4531
         BNH   NOTUCB              NO, THE SVRB STILL THERE       4531
         BAL   LINKREG,RLSETEST         DECREMENT UCB COUNT
NOTUCB   LR    CURQEL,WORKREG4      RESTORE SAVED QEL POINTER M1336
         LR    WORKREG3,GENREG          RESTORE WORKREG3
         SR    WORKREG1,WORKREG1        RESTORE INDICATOR TO ZERO
SKIP2    BAL   LINKREG,ISNXT           GO GET NEXT
         AGO   .SHRDA55
.SHRDA54 ANOP
         LTR   WORKREG1,WORKREG1        Q. IS INDICATOR ON
         BC    7,REMVE                  YES, GO DIRECTLY TO DEQUEUE IT
         BAL   LINKREG,ISNXT            GO GET NEXT
.SHRDA55 ANOP
         BC    15,REMVE                 NO MORE QELS, REMOVE LAST
         LTR   GENREG,GENREG            Q. IS NEXT QEL SHARED
         BC    7,REMVE                  NO, GO DIRECTLY TO REMOVE
         LTR   WORKREG1,WORKREG1        Q. IS INDICATOR ON
         BC    7,LOOP1                  YES, RIPPLE DOWN AND ADJUST
         TM    QELCDS(CURQEL),NEGCODE   Q. IS THIS QEL SHARED
         BC    1,REMVE                  YES, GO REMOVE IT
LOOP1    BAL   LINKREG,ISNXT            GO GET NEXT
         BC    15,REMVE                 NO MORE QELS, DEQUEUE CURRENT
         LTR   GENREG,GENREG            Q. IS NEXT QEL SHARED
         BC    7,REMVE                  NO, RIPPLE DONE, DQ CURRENT
         L     GENREG,SVRBPTR(WORKREG2) GET SVRB ADDRESS
         LA    LINKREG,LOOP1            SET RETURN REGISTER
REDUCE   DS    0H                                                 20021
         LR    CURQEL,WORKREG2          XFR QEL ADDR FOR INTERFCE 39399
         AIF   (NOT &B(3)).TSO0650                                20021
         TM    QELTJID0(WORKREG2),ANYON QEL FOR TIME-SHARING USER 20021
         BZ    DECREMET            NO DECREMENT COUNT             20021
*                                       FLAG QEL FOR SVRB         20021
         OI    QELCDS(WORKREG2),QELRBWT PROCESSING AFTER SWAP     20021
         LH    REG0,QELTJID0(WORKREG2) GET TIME-SHARING USER'S    20021
         IC    REG0,QELTJID1(WORKREG2) IDENTIFICATION             20021
         N     REG0,TSDRVMSK       CLEAR HIGH ORDER BYTE          20021
         TSEVENT USERRDY,TJID=(0)                                 20021
         BR    LINKREG             EXIT FOR DELAYED SVRB PROC     20021
DECREMET DS    0H                                                 20021
.TSO0650 ANOP                                                     20021
         CLI   RBWCF(GENREG),WAITIND Q. IS WAIT COUNT ZERO
         BCR   8,LINKREG                YES, DON'T DECREMENT
         IC    TASKTCB,RBWCF(GENREG)    GET WAIT COUNT
         BCTR  TASKTCB,0                DECREMENT IT
         STC   TASKTCB,RBWCF(GENREG)    PUT IT BACK
         AIF   (NOT &B(2)).SHRDA51
         TM    QELCDS(CURQEL),RESERVED  Q. IS THIS QEL RESERVE QEL
         BC    8,NORESV                NO DO NOT INCREMENT UCB COUNT
         L     TASKTCB,QELUCB(CURQEL)   YES GET SVRB PTR   BJ 60112
         L     WORKREG2,RBSAVUCB(TASKTCB) GET PARM POINTER BJ 60112
         ST    WORKREG2,QELUCB(CURQEL)  SET UCB POINTER IN QEL
         SR    WORKREG1,WORKREG1       CLEAR REG FOR IC
         IC    WORKREG1,UCBRSCT(WORKREG2) GET UCB RESERVE COUNT
         LA    WORKREG1,1(WORKREG1)    BY ONE AND
         STC   WORKREG1,UCBRSCT(WORKREG2) REPLACE NEW RESERVE COUNT
         LR    WORKREG2,CURQEL          RESTORE QEL SAVE REG
NORESV   CLI   RBWCF(GENREG),WAITIND    Q. IS IT STILL WAITING
         AGO   .SHRDA52
.SHRDA51 ANOP
         CLI   RBWCF(GENREG),WAITIND    Q. IS IT STILL WAITING
.SHRDA52 ANOP
         BCR   7,LINKREG                YES, CONTINUE LOOP
         L     TASKTCB,QELTCB(WORKREG2) GET TCB ADDRESS
         BC    15,TASKSW1               GO TO TASK SWITCH INTERFACE
         AIF   (NOT &B(2)).SHRDA48
TSTNXT   TM    QELCDS(CURQEL),RESERVED  Q. IS THIS QEL RESERVE QEL
         BC    8,TSTNXTBB               NO - TREAT NORMALLY
         NI    QELCDS(CURQEL),X'BF'     YES SET NON-RESERVE FOR RELEASE
         LR    GENREG,UCBREG            SAVE WORKREG3
         L     UCBREG,QELUCB(CURQEL)    GET UCB POINTER
         BAL   LINKREG,RLSETEST         DECREMENT UCB COUNT
         LR    CURQEL,WORKREG4          RESTORE SAVED QEL POINTER M1336
         LR    WORKREG3,GENREG          RESTORE WORKREG3
TSTNXTBB TM    QELCDS(CURQEL),NEGCODE   Q. IS THE QEL SHARED
         AGO   .SHRDA49
.SHRDA48 ANOP
TSTNXT   TM    QELCDS(CURQEL),NEGCODE   Q. IS THE QEL SHARED
.SHRDA49 ANOP
         BC    1,TSTNXT1                YES, TAKE BRANCH
         BAL   LINKREG,ISNXT            GO GET NEXT
         BC    15,REMVE                 NO MORE, REMOVE CURRENT
         LTR   GENREG,GENREG            Q. IS NEXT QEL SHARED
         BC    8,LOOP1                  YES, GO RIPPLE DOWN
DECR1    L     GENREG,SVRBPTR(WORKREG2) GET SVRB ADDRESS
         LA    LINKREG,REMVE            LOAD RETURN ADDRESS
         BC    15,REDUCE                GO ADJUST WAIT COUNT AND
*                                       INVOKE TASK SWITCH
TSTNXT1  BAL   LINKREG,ISNXT            GO GET NEXT
         BC    15,REMVE                 NO MORE, DEQUEUE THIS QEL
         LTR   GENREG,GENREG            Q. IS NEXT QEL SHARED
         BC    8,REMVE                  YES, GO TO DEQUEUE
         BC    15,DECR1                 NO, DECR THEN DEQUEUE
ISNXT    SR    GENREG,GENREG            INITIALIZE TO SHARED
         L     WORKREG2,NXQEL(CURQEL)   GET NEXT QEL
         LA    WORKREG2,0(WORKREG2)     CLEAR HIGH ORDER BYTE
         LTR   WORKREG2,WORKREG2        Q. IS THERE A QEL
         BCR   8,LINKREG                NO, RETURN TO NEXT IN LINE
         TM    QELCDS(WORKREG2),NEGCODE YES, NOW TEST FOR SHARED
         BC    1,4(LINKREG)             REQUEST IS SHARED, RETURN
         BALR  GENREG,0                 SET INDICATOR EXCLUSIVE
         BC    15,4(LINKREG)            AND RETURN
         SPACE 1
***  GO DEQUEUE THE QEL
REMVE    LR    CURQEL,WORKREG4          RESTORE QEL REGISTER      M1336
         LR    WORKREG1,CURQEL          SET FOR INTERFACE
         BAL   LINKREG,DECTCB           DECREMENT TCB COUNT        3447
         BAL   LINKREG,DQELEMNT         AND GO DEQUEUE IT
***  FREE THE SPACE FOR THE QEL
         LA    WORKREG0,QELSIZE         OBTAIN QEL SIZE
         LR    FMREG,CURQEL             LOAD ADDRESS FOR FREEMAIN
         BAL   LINKREG,FREEUP           GO TO FREEMAIN INTERFACE
         BCR   15,WORKREG3              EXIT
         SPACE 1
***  SEE IF THE MINOR QCB CAN BE FREED
         SPACE 1
TESTMIN  SR    WORKREG0,WORKREG0        CLEAR FOR TEST
         L     LINKREG,FSTQEL(CURMIN) GET FIRST QEL               20021
         LA    LINKREG,0(LINKREG)  CLEAR HIGH ORDER BYTE          20021
         CR    LINKREG,WORKREG0    IS THERE A QEL                 20021
         BC    7,LOADMIN                YES, MINOR CAN'T BE FREED
         LA    CURPARM,ELEVEN(CURMIN)   GET MINOR ADDRESS PLUS 11
         BAL   LINKREG,ADDMINOR         GET MINOR SIZE
         BAL   LINKREG,DQMINOR          AND GO DEQUEUE IT
         LR    WORKREG0,SUMREG          XFR SIZE OF MINOR
         LR    FMREG,CURMIN             LOAD ADDRESS FOR FREEMAIN
         BAL   LINKREG,FREEUP           GO TO FREEMAIN INTERFACE
         SPACE 3
***  SEE IF THERE ARE MORE MINORS TO SEARCH
         SPACE 1
LOADMIN  L     CURMIN,NXMIN(CURMIN)     GET NEXT MINOR
         CLR   WORKREG0,CURMIN          Q. IS NEXT MINOR PRESENT
         BC    7,REPTEMIN               YES, TRY TO FIND A QEL
         SPACE 3
***  SEE IF THE MAJOR CAN BE FREED
         SPACE 1
         CL    WORKREG0,FSTMIN(CURMAJ)  Q. DOES MAJOR POINT TO MINOR
         BC    7,LOADMAJ                YES, GET THE NEXT ONE
FREMAJ   LR    WORKREG1,CURMAJ          GET ADDRESS FOR DEQUEUEING
         BAL   LINKREG,DQELEMNT         AND GO TO DEQUEUE
         SPACE 1
         LA    WORKREG0,MAJSIZE         GET SIZE OF MAJOR
         LR    FMREG,CURMAJ             GET ADDRESS FOR FREEMAIN
*    THE NEXT INSTRUCTION PREVENTS PICKING UP AN INVALID LINK FIELD.
         L     CURMAJ,PREVMAJ(CURMAJ)   GET PREVIOUS MAJOR QCB
         LA    LINKREG,LOADMAJ          LOAD RETURN ADDRESS
         BC    15,FREEUP                GO TO FREEMAIN INTERFACE
         EJECT
.SHRD130 ANOP
***  DEQUEUE SUBROUTINE
*    THIS ROUTINE WILL DEQUEUE THE MAJOR QCB'S AND QEL'S
*    INPUT-    WORKREG1-ADDRESS OF ELEMENT TO BE DEQUEUED
*    USES--    WORKREG1,GENREG
         SPACE 1
DQELEMNT L     GENREG,0(WORKREG1)       GET ADDRESS OF NEXT ELEMENT
         LA    GENREG,0(GENREG)         CLEAR HIGH ORDER BYTE
         LTR   GENREG,GENREG            Q. IS NEXT ELEMENT PRESENT
         BC    8,ONLYONE                NO, SKIP NEXT INST
         MVC   PREVIOUS(3,GENREG),PREVIOUS(WORKREG1)
ONLYONE  L     GENREG,4(WORKREG1)       GET PREVIOUS FIELD
         MVC   ONE(3,GENREG),ONE(WORKREG1) MOVE IN NEXT FIELD
         BCR   15,LINKREG               RETURN
         SPACE 3
***  DEQUEUE SUBROUTINE
*    THIS ROUTINE WILL DEQUEUE MINOR QCB'S
*    INPUT-    CURMIN-ADDRESS OF MINOR TO BE DEQUEUED
*    USES--    CURMIN,GENREG
         SPACE 1
DQMINOR  L     GENREG,NXMIN(CURMIN)     GET ADDRESS OF NEXT MINOR
         LTR   GENREG,GENREG            Q. IS NEXT MINOR PRESENT
         BC    8,SINGLE                 NO TAKE BRANCH
         MVC   PREVMIN1(3,GENREG),PREVMIN1(CURMIN) .  UPDATE PTR  M0852
SINGLE   L     GENREG,PREVMIN(CURMIN)   LOAD PREVIOUS MINOR
         MVC   NXMIN(4,GENREG),NXMIN(CURMIN)  UPDATE NEXT FIELD
         BCR   15,LINKREG               RETURN TO MAIN LINE
         SPACE 3
***  DECREMENT ENQUEUE COUNT FIELD IN TCB.
*    INPUT-    CURTCB-ADDRESS OF CURRENT TCB
*    USES--    GENREG
         SPACE 1
DECTCB   IC    GENREG,TCBCT(CURTCB)     GET TCB COUNT
         BCTR  GENREG,0                 DECREMENT IT
         STC   GENREG,TCBCT(CURTCB)     PUT IT BACK
         AIF   (NOT &B(1)).SHRD135
         STATUS RESET,NR,'S'       DECREMENT NONROLLOUTABLE COUNT
.SHRD135 ANOP
         BCR   15,LINKREG               RETURN
         EJECT
*    FREEUP ROUTINE
*
*   THIS ROUTINE FREES CORE FOR MAJOR AND MINOR QCBS, AND QELS.
*  THIS ROUTINE ENVOKES THE FREEMAIN SVC ROUTINE. IT FURTHER
*  EXPECTS THAT REGISTER 0 HAS BEEN INITIALIZED WITH THE NUMBER
*  OF BYTES TO BE FREED.  REGISTER 1 MUST ALSO CONTAIN THE ADDRESS
*  OF THE BLOCK TO BE FREED.
FREEUP   O     WORKREG0,SP255          INDICATE SUBPOOL
         AIF   (&B(1)).SHRD140
         FREEMAIN R,LV=(0),A=(1)
         AGO   .SHRD150
.SHRD140 ANOP
         L     WORKREG1,ENTNQDQ                                    REFR
         USING   NQDQQCB,WORKREG1                                  REFR
         STM   RETREG,GENREG,SAVEA     SAVE GRS ACROSS FREEMAIN    0205
         ST    WORKREG3,SAVEB                                      0205
         L     WORKREG3,16             INITIALIZE CVT REG          0205
         L     GENREG,ADFREE                                       0205
         BALR  RETREG,GENREG           GO TO FREEMAIN              0205
         LM    RETREG,GENREG,SAVEA      RESTORE GRS                0205
         L     WORKREG3,SAVEB                                      0205
         DROP   WORKREG1                                           REFR
.SHRD150 ANOP
         SR    WORKREG0,WORKREG0       INITIALIZE REG TO 0
         BCR   15,LINKREG              RETURN
         SPACE 3
DQERR1   TM    PARMCDS(TOPPARM),HAVE    Q. IS RETURN REQUESTED
         BC    8,DRRX1                  NO, ABEND THE TASK
         MVI   RETURN(CURPARM),HAS      YES, GIVE RETURN CODE
         BC    15,NXTINPUT              AND GET NEXT ELEMENT
        SPACE 3
DQERR2  L     CURQEL,NXQEL(CURQEL)     GET ADDRESS OF NEXT
        LA    CURQEL,0(CURQEL)         CLEAR HIGH ORDER BYTE
        LTR   CURQEL,CURQEL            Q. IS THERE A NEXT QEL
        BC    8,DQERR1                 NO, TEST FOR ABEND OR RETURN
        CL    CURTCB,QELTCB(CURQEL)    Q. DOES TCB ADDRESS MATCH
        BC    7,DQERR2                 NO, TRY NEXT
        SPACE 3
DQERR2A  TM    PARMCDS(TOPPARM),HAVE    Q. IS RETURN REQUESTED
         BC    8,DRRX5                  NO, ABEND THE TASK
         MVI   RETURN(CURPARM),INUSE    YES, GIVE RETURN CODE
         BC    15,NXTINPUT              AND GET NEXT ELEMENT
         EJECT
         AIF   (NOT &B(1)).SHRD160
***  AUTO PURGE ROUTINE
*    THIS ROUTINE IS ENTERED FROM ENQ WHEN A TASK SCHEDULED
*    FOR ABTERM (BYTE 29, BIT 0=1) ISSUES AN ENQ.  QEL'S
*    ASSOCIATED WITH ANY TASK IN THE SAME FAMILY WILL
*    BE REMOVED.  THE INITIATOR IS NOT INCLUDED.
*    INPUT-    CURMAJ-ADDRESS OF THE MAJOR QCB
*              CURMIN-ADDRESS OF THE MINOR QCB
*              CURTCB-ADDRESS OF THE CURRENT TCB
*              CURRB-ADDRESS OF TOP RB                           A29065
         SPACE 1
GRS3     EQU   XSAV+8                   REGISTER SAVE IN SVRB
ABENDTCB EQU   XSAV+16            SAVEAREA FOR TOP ABENDING TCB  A29065
         SPACE 3
AUTOPRG  LR    WORKREG3,CURTCB          XFR TCB ADDRESS
PRGLOOP  L     WORKREG1,TCBOTC(WORKREG3) GET MOTHER TCB
         ST    WORKREG3,ABENDTCB(CURRB)  SAVE TOP ABENDING TCB   A29065
         TM    TCBFLG(WORKREG1),ABTERM  Q. IS IT SCHEDULED FOR ABEND
         BC    8,GETFST                 NO, EXIT FROM LOOP WITH
*                                           HIGHEST TASK IN FAMILY
*                                           TREE SCHEDULED FOR ABEND
         LR    WORKREG3,WORKREG1        XFR ABENDING TASK
         BC    15,PRGLOOP               AND GO BACK
         SPACE 1
GETFST   L     CURQEL,FSTQEL(CURMIN)    GET THE FIRST QEL
         LA    CURQEL,0(CURQEL)    CLEAR HI ORDER BYTE            20021
         LTR   CURQEL,CURQEL            Q. IS THERE A QEL
         BC    8,PRGRETA               NO, EXIT FROM AUTOPRG       0445
         SPACE 3
***  IF WE FALL THROUGH THERE IS A POSSIBILITY OF PURGING
         SPACE 1
         STM   WORKREG3,CURTCB,GRS3(CURRB)  SAVE THE REGISTERS
         LR    CURTCB,WORKREG3          XFR REGS
         ST   WORKREG4,SEPLP(CURRB) . SAVE PARM LIST PTR         3123
         ST    CURPARM,SEPLP1(CURRB)  . SAVE REG 10          BJ A50045
         BAL   WORKREG3,REPTEMIN        GO TO DEQUEUEING ROUTINE
         L    WORKREG4,SEPLP(CURRB) .  RESTORE THE PARM LIST PTR 3123
         L     CURPARM,SEPLP1(CURRB) . RESTORE REG 10        BJ A50045
         LM    WORKREG3,CURTCB,GRS3(CURRB)  RESTORE REGISTERS
         SPACE 3
***  IF WE FALL THROUGH ALL QELS HAVE BEEN COMPARED
*    WITH THE PRESENT TCB.
*    WE ARE NOW GOING TO ATTEMPT TO FIND ANOTHER DESCENDENT
         SPACE 1
FINDTCB  LR    WORKREG2,WORKREG3        XFR TCB ADDRESS
         L     WORKREG3,TCBLTC(WORKREG2) GET DAUGHTER
TESTTCB  LTR   WORKREG3,WORKREG3        Q. IS THERE A TCB
         BC    7,GETFST                 YES, RETURN WITH IT
         L     WORKREG3,TCBNTC(WORKREG2) GET SISTER
         C     WORKREG2,ABENDTCB(CURRB)  Q. ARE WE FINISHED      A29065
         BC    8,PRGRET                 YES, EXIT FROM AUTOPRG
         L     WORKREG2,TCBOTC(WORKREG2) GET MOTHER
         BC    15,TESTTCB               GO BACK THROUGH LOOP
         TITLE 'ENQ SERVICE ROUTINE'
PRGRET   L     CURQEL,FSTQEL(CURMIN)    GET FIRST QEL
         LA    CURQEL,0(CURQEL)    CLEAR HIGH ORDER BYTE          20021
         LTR   CURQEL,CURQEL            Q. ARE ANY QEL'S LEFT
         BC    7,ENQTOP2A               YES, RETURN TO MAINLINE
PRGRETA  LR    CURQEL,CURMIN           SET REG FOR CREATE RTN      0445
         BC    15,CALC3                 GO TO CREATE
.SHRD160 ANOP
         EJECT
***                                                               ***
***  ESTABLISH ADDRESSABILITY FOR THE ENQUEUE SERVICE ROUTINE     ***
***                                                               ***
         SPACE 3
IGC048   CSECT
         CNOP  0,8
         SPACE 3
IGC056   BALR  BASEREG,0
         LA    GENREG,IGC056-IGC048     RESET BASE REGISTER
         SR    BASEREG,GENREG           FOR ENQ
         SPACE 3
***  HOUSEKEEPING
         SPACE 1
         AIF   (&B(1)).SHRD170
         LA    TOPPARM,0(INPUTREG)  SAVE POINTER TO FIRST ELEMENT
         AGO   .SHRD180
.SHRD170 ANOP
         LR    TOPPARM,INPUTREG         SAVE POINTER TO TOP OF LIST
.SHRD180 ANOP
         LR    CURPARM,TOPPARM          INITIALIZE CURRENT PARM REG
         SPACE 3
***  INVOKE VALIDITY CHECK ROUTINE.
         SPACE 1
         BAL   LINKREG,CHKLIST          GO TO VALIDITY CHECK INTERFACE
         SPACE 1
         AIF   (NOT &B(1)).SHRD190
***  VALIDITY CHECK NO GOOD, ABEND THE REQUESTOR.
         BC    15,ERRX4                 BAD RETURN, ABEND THE TASK
         BC    15,ERRX3                 BAD RETURN, ABEND THE TASK
         BC   15,ERRX2                  BAD RETURN, ABEND THE TASK
*    RETURN TO NEXT INSTRUCTION IF LIST OK
         SPACE 3
.SHRD190 ANOP
***  START OF ENQUEUE PROCEDURE.
*    DETERMINE WHAT LEVEL OF CREATION IS NECESSARY TO
*    SATISFY EACH ELEMENT IN THE USERS PARAMETER LIST.
         SPACE 1
*    FIRST STEP.
*    TRY TO FIND A MAJOR QCB ON THE QUEUE OF MAJORS
*    WITH THE SAME NAME AS THAT PASSED IN
*    THE USERS PARAMETER LIST.
         SPACE 1
         SPACE 1
ENQTOP   BAL   LINKREG,FINDMAJ          GO TO INITIALIZE CURRENT MAJOR
         LTR   CURMAJ,CURMAJ            Q. DOES A MAJOR QCB OF THE
*                                          SAME NAME ALREADY EXIST
         BC    2,ENQTOP1                YES, SEE IF THERE IS A MINOR
         TM    PARMCDS(TOPPARM),TEST    Q. IS THIS AN INQUIRY
         BC    1,RET0                   YES, GIVE RETURN, DON'T CREATE
         BC    8,CALC1                  RET=0, DON'T SET CODE, CREATE
         TM    PARMCDS(TOPPARM),HAVE    Q. IS THIS RET=CHNG      20021
         BZ    RET8CHNG                 YES, RC=8,DON'T CREATE   20021
         MVI   RETURN(CURPARM),AVAIL    GIVE ''AVAILABLE'' CODE
         SPACE 3
***  IF ENTERED HERE A MAJOR QCB WAS NOT FOUND.
*    A MAJOR QCB, A MINOR QCB, AND A QEL
*    WILL BE CREATED AND CHAINED TO
*    EXISTING ELEMENTS.
         SPACE 1
CALC1    LA    GMREG,MAJSIZE            SET LENGTH FOR A MAJOR
         BAL   LINKREG,GETCORE          AND GO GET IT
         BAL   LINKREG,CREATE3          GO TO CREATE IT
         SPACE 3
***  IF ENTERED HERE EITHER
*    1-A MAJOR QCB HAS JUST BEEN CREATED, OR
*    2-A MAJOR QCB WAS PREVIOUSLY CREATED.
*    IN EITHER CASE NO MINOR QCB WAS FOUND
*    A MINOR QCB AND A QEL WILL BE CREATED
*    AND CHAINED TO THE MAJOR QCB.
         SPACE 1
CALC2    BAL   LINKREG,ADDMINOR         CALCULATE CORE FOR MINOR
         LR    GMREG,SUMREG             XFR IT
         BAL   LINKREG,GETCORE          AND GO GET IT
         BAL   LINKREG,CREATE2          GO CREATE THE MINOR
         SPACE 3
***  A MAJOR QCB AND A MINOR QCB ARE IN EXISTENCE.
*    A QEL TO REPRESENT THE REQUESTOR ON THE QUEUE
*    WILL NOW BE CREATED AND PLACED AT THE BOTTOM OF THE
*    QUEUE ELEMENT QUEUE
         SPACE 1
CALC3    LA    GMREG,QELSIZE            SET LENGTH FOR A QEL
         BAL   LINKREG,GETCORE          GO GET CORE
         BC    15,CREATE1               GO CREATE THE QEL
         SPACE 3
***  A MAJOR QCB OF THE SAME NAME AS THAT PASSED
*    IN THE PARAMETER LIST WAS FOUND.  WE WILL
*    NOW ATTEMPT TO FIND A MINOR QCB WITH
*    THE SAME NAME AND ATTRIBUTES AS THAT PASSED
*    IN THE LIST
         SPACE 1
ENQTOP1  BAL   LINKREG,FINDMIN          GO TO INITIALIZE CURRENT MINOR
         LTR   CURMIN,CURMIN            Q. DOES A MINOR QCB OF THE
*                                          SAME NAME ALREADY EXIST
         BC    2,ENQTOP2                YES, FIND QEL
         TM    PARMCDS(TOPPARM),TEST    Q. IS THIS AN INQUIRY
         BC    1,RET0                   YES, GIVE RETURN, DON'T CREATE
         BC    8,CALC2                  RET=0, DON'T SET CODE, CREATE
         TM    PARMCDS(TOPPARM),HAVE    Q. IS THIS RET=CHNG      20021
         BZ    RET8CHNG                 YES, RC=8,DON'T CREATE   20021
         MVI   RETURN(CURPARM),AVAIL    GIVE ''AVAILABLE'' CODE
         BC    15,CALC2                 GO MAKE A MINOR
         SPACE 3
***  A MAJOR QCB AND A MINOR QCB WITH THE SAME
*    NAMES AND ATTRIBUTES AS THOSE PASSED IN
*    THE PARAMETER LIST WERE FOUND.
*    THIS SECTION OF CODE DOES THE FOLLOWING
*    1-SEE IF THE TASK IS SCHEDULED FOR ABTERM.
*      IF IT IS GO TO THE 'AUTO PURGE' ROUTINE
*      AND PURGE THE QUEUE OF ANY QELS FOR THE TASK
*    (ABOVE FUNCTION DOES NOT EXIST FOR MFT-II).
*    2-TEST IF THE QUEUE CONTAINS A PREVIOUS
*      REQUEST FROM THE SAME TCB
*      IF IT DOES EITHER GIVE A RETURN CODE OR
*      ABEND THE REQUESTOR DEPENDING ON THE 'RET'
*      SPECIFIED
*    3-DETERMINE WHETHER OR NOT TO PUT THE
*      SVRB IN A WAIT STATE.
*      IF THIS IS A SHARED REQUEST, AND ALL
*      PREVIOUS REQUESTS ON THE QUEUE ARE
*      SHARED, WE WILL NOT INCREMENT THE SVRB
*      WAIT COUNT.
*      ALL OTHER CONDITIONS WILL RESULT IN
*      INCREMENTING THE WAIT COUNT BY ONE.
*    4-RETURN CODES MAY OR MAY NOT BE GIVEN
*      DEPENDING ON THE 'RET' SPECIFIED
         SPACE 1
         AIF   (&B(1)).SHRD200
ENQTOP2  DS    0H
         AGO   .SHRD210
.SHRD200 ANOP
ENQTOP2  TM    TCBFLG(CURTCB),ABTERM    Q. IS TCB SCHEDULED FOR ABTERM
         BC    7,AUTOPRG                YES, PURGE QEL'S FOR JOB STEP
.SHRD210 ANOP
ENQTOP2A BAL   LINKREG,FINDQEL          GO VALIDATE REQUEST
         LTR   CURQEL,CURQEL            Q. HAS SAME TASK ALREADY
*                                          REQUESTED RESOURCE
         BC    4,ABTEST                 YES, TEST FOR ABEND EXIT
         TM    PARMCDS(TOPPARM),HAVE    Q. IS BIT 7 ON           20021
         BO    ENQTOP2B                 YES, NOY CHNG OR NONE    20021
         TM    PARMCDS(TOPPARM),CHNG    Q. IS THIS RET=CHNG      20021
         BO    RET8CHNG                 YES, RC=8,DON'T CREATE   20021
ENQTOP2B LTR   WORKREG2,WORKREG2        ARE ALL QEL'S MINUS      20021
         BC    7,ENQT4                  NO, A PLUS ON THE QUEUE
         TM    PARMCDS(CURPARM),PLMI    Q. IS REQUESTOR PLUS/MINUS
         BC    8,ENQT4                  PLUS, SEE ABOUT ENQUEUEING
ENQT1    TM    PARMCDS(TOPPARM),TEST    Q. IS THIS AN INQUIRY
         BC    1,RET0                   YES, GIVE RETURN, DON'T CREATE
         BC    8,CALC3                  RET=0, DON'T RETURN, CREATE
         MVI   RETURN(CURPARM),AVAIL    SET AVAILABLE CODE
         BC    15,CALC3                 AND GO CREATE
ABTEST   TM    PARMCDS(TOPPARM),HAVE    Q. DOES MASK ALLOW ABEND
         BC    1,RET8                   NO, GO TO SET CODE
         TM    PARMCDS(TOPPARM),CHNG    Q. IS RET=CHNG            20021
         BZ    ERRX1                    NO-GO TO ABEND INTERFACE  20021
         LCR   CURQEL,CURQEL            RESET CURQEL REG POSITIVE 20021
         TM    QELCDS(CURQEL),NEGCODE   Q. IS CURR QEL 'SHARE'    20021
         BZ    RET0                     NO-EXCL. SET RC=0-AVAIL.  20021
         LTR   WORKREG1,WORKREG1        IS CALLER TOP QEL ON QUE  20021
         BM    RET4                     NO,SHARING-SET RC=4       20021
         L     WORKREG2,NXQEL(CURQEL)   GET POINTER TO NEXT QEL   20021
         LA    WORKREG2,0(WORKREG2)   ZERO HI ORDER BYTE FOR TEST 20021
         LTR   WORKREG2,WORKREG2        IS THIS ONLY QEL ON QUEUE 20021
         BZ    ENQSETEX                 YES-REQ CAN BE HONORED   20021
         TM    QELCDS(WORKREG2),NEGCODE Q. IS NEXT QEL 'SHARE'   20021
         BO    RET4                     YES-CAN'T HONOR REQ.RC=4 20021
ENQSETEX NI    QELCDS(CURQEL),ANYON-NEGCODE NO-SET QEL EXCLUSIVE 20021
         B     RET0                     SET RC=0- AVAILABLE.     20021
         SPACE 1
ENQT4    TM    PARMCDS(TOPPARM),USE     Q. DOES MASK ALLOW ENQUEUE
         BC    1,RET4                   NO, GIVE RETURN, DON'T CREATE
         BAL   LINKREG,UPSVRB           INCREMENT THE SVRB WAIT COUNT
         BC    15,ENQT1                 AND TEST FOR RET SPECIFIED
         SPACE 3
***  THIS CODE SETS RETURN CODES BASED UPON THE QUEUE STATUS
*    AND THE MASK SET IN THE USERS PARAMETER LIST ELEMENT.
*    NO CREATION TAKES PLACE.
*    THE USERS MASK SPECIFIED IN THE 'RET' FIELD
*    WAS FOR INQUIRY ONLY.
*    I.E., RET=TEST WAS SPECIFIED.
         SPACE 1
RET0     MVI   RETURN(CURPARM),AVAIL    SET AVAILABLE CODE
         BC    15,TESTEND1              GO GET NEXT
RET4     MVI   RETURN(CURPARM),INUSE    SET ''IN USE'' CODE
         BC    15,TESTEND1              GO GET NEXT
RET8CHNG MVI   RETURN(CURPARM),HAS      ERROR- NOT ENQUED * CHNG *20021
         B     TESTEND1                 GO GET NEXT PARAM ELEMENT 20021
RET8     MVI   RETURN(CURPARM),HAS      SET ''HAVE'' CODE
         LCR   CURQEL,CURQEL            RESET QEL INDICATION
         BAL   LINKREG,TESTSMC          TEST FOR MUST COMPLETE REQ
         AIF   (NOT &B(2)).SHRDA4
         TM    PARMCDS(CURPARM),RESERVE Q. IS THIS A RESERVE REQUEST
         BC    11,TESTEND1              NO, GO GET NEXT ELEMENT
         TM    PARMCDS(CURPARM),X'08'   Q. IS IT DEFINITELY RESERVE
         BC    8,TESTEND1               NO, GO GET NEXT ELEMENT
         TM    QELCDS(CURQEL),RESERVED  Q. IS RESERVE ALREADY IN EFFECT
         BC    1,OPRSMC                 YES, DO SMC IF NECESSARY
         OI    QELCDS(CURQEL),RESERVED  SET RESERVE FLAG IN QEL
         BC    15,LOGRSV                NO, PERFORM LOGICAL RESERVATION
         AGO   .SHRDA5
.SHRDA4  ANOP
         BC    15,TESTEND1              GO GET NEXT
.SHRDA5  ANOP
         SPACE 3
***  INTERFACE WITH THE MAIN STORAGE SUPERVISOR.
*    AMOUNT OF CORE REQUIRED IS PASSED IN REGISTER 0
         SPACE 1
GETCORE  O     GMREG,SP255              INDICATE SUBPOOL 255
         AIF   (&B(1)).A16A                                      A34816
         GETMAIN R,LV=(0)
         CL    GENREG,GETFOUR      WAS REQUEST SATISFIED           1874
         BE    GETERR                NO                            1874
         AGO   .A16B                                             A34816
.A16A    ANOP                                                    A34816
         LR    REG1,PARMCDS .      PROTECT BASE REG (REG 2)      A34816
         USING IGC048+2,REG1                                      2867
         DROP  PARMCDS
         L     PARMCDS,ENTNQDQ     PTR TO DSECT SAVE AREA        A34816
         ST    REG1,DB16(PARMCDS) . PROTECT BASE REG (REG 2)     A34816
         STM   WORKREG3,GENREG,DB20(PARMCDS) SAVE REGS 3-15      A34816
         L     GENREG,ADFREE .     PTR TO GM BRANCH ENTRY        A34816
         DROP  REG1
         L     WORKREG3,CVTPTR .   POINTER TO THE CVT           PTM
         L     INUSE,DB0(WORKREG3) . TCB QUEUE PTRS (OLD-NEW)    A34816
         L     INUSE,DB4(INUSE) .  PTR TO OLD TCB                A34816
         LCR   REG1,REG1 .         INDICATE A GM REQUEST         A34816
         BALR  RETREG,GENREG .     GO GET ME SOME CORE           A34816
         LM    PARMCDS,GENREG,DB16(PARMCDS) RESTORE  3-15       A34816
         USING IGC048+2,PARMCDS .  RE-ESTABLISH ADDRESSABILITY
         BR    LINKREG .           RETURN TO REQUESTOR           A34816
.A16B    ANOP                                                    A34816
         BCR   15,LINKREG                  RETURN TO CALLER
         SPACE 3
***  ENTERED IF QUEUE STATUS INDICATES THAT
*    THE SVRB WAIT COUNT SHOULD BE INCREMENTED
         SPACE 1
UPSVRB   IC    WORKREG1,RBWCF(CURRB)    GET WAIT COUNT FROM THE SVRB
         LA    WORKREG1,1(WORKREG1)     INCREMENT IT BY ONE
         STC   WORKREG1,RBWCF(CURRB)    PUT IT BACK
         BCR   15,LINKREG               RETURN
         EJECT
***  TOP OF CREATE ELEMENTS ROUTINES.
*    CREATE3... CREATES AND EFFECTS LINKAGES FOR A MAJOR QCB.
*    CREATE2... CREATES AND EFFECTS LINKAGES FOR A MINOR QCB.
*    CREATE1... CREATES AND EFFECTS LINKAGES FOR A QEL.
         SPACE 3
***  CREATE3 ROUTINE.
*    ENTERED FROM MAINLINE WHEN IT HAS BEEN DETERMINED THAT
*    THE 'QNAME' SPECIFIED IN THE USERS PARAMETER LIST WAS
*    NOT FOUND IN THE SEARCH OF MAJOR QCB'S IN THE SYSTEM.
*    THE MAJOR QCB ABOUT TO BE CREATED WILL BE CHAINED TO
*    THE LAST MAJOR ON THE CHAIN.  IF NONE PRESENTLY EXIST
*    IT IS CHAINED TO 'HEADQCB'.
*    RETURN IS TO MAINLINE.
         SPACE 1
CREATE3  XC    0(MAJCLR,GMRETREG),0(GMRETREG)  CLEAR PORTION OF
*                                              NEW MAJOR QCB
         STM   WKRG1,WKRG2,MAJNAME(GMRETREG) PUT MAJOR NAME IN QCB
         LCR   CURMAJ,CURMAJ            POINTER TO LAST MAJOR
*                                       IN TRUE FORM
         ST    GMRETREG,NXMAJ(CURMAJ)   POINTER TO NEW IN PREVIOUS
         ST    CURMAJ,PREVMAJ(GMRETREG) SET POINTER TO PREVIOUS MAJOR
         LR    CURMAJ,GMRETREG          POINT AT NEW MAJOR
         LCR   CURMIN,CURMAJ            SET REG FOR CREATE2 ROUTINE
         BCR   15,LINKREG               RETURN TO MAINLINE
         EJECT
***  CREATE2 ROUTINE.
*    ENTERED FROM MAINLINE TO CREATE A MINOR QCB WITH THE
*    NAME AND ATTRIBUTES AS SPECIFIED IN THE PARAMETER LIST.
*    'SYSTEM' RESOURCES (SCOPE OF THE NAME IS ACROSS THE
*    ENTIRE SYSTEM) HAVE A QCB PROTECT KEY FIELD=X'FF'.
*    'STEP' RESOURCES (SCOPE OF THE NAME ACROSS THE JOB
*    STEP ONLY) HAVE A QCB PROTECT KEY=TO THE PROTECT KEY
*    OF THE CURRENT TCB, I.E., THE REQUESTORS TCB.
*    'SYSTEMS' RESOURCES (SCOPE OF THE NAME WILL BE KNOWN ACROSS
*    SYSTEMS) AND RESERVE REQUESTS HAVE A QCB PROTECT KEY OF X'FE'.
*    THE NAME LENGTH CAN
*    1-BE SPECIFIED IN THE LIST OR BE ZERO. IF ZERO
*    2-BE THE FIRST BYTE OF THE NAME POINTED TO BY THE LIST.
*    IF BOTH FIELDS ARE ZERO AN ABEND OCCURS.
*    WHEN THE FIRST BYTE OF THE NAME IS USED AS THE LENGTH
*    IT DOES NOT INCLUDE THE LENGTH BYTE, I.E., DOES NOT
*    INCLUDE ITSELF.
*    THIS MINOR IS CHAINED TO THE MAJOR IN 'CURMAJ'.
*    RETURN IS TO MAINLINE.
         SPACE 1
CREATE2  XC    0(MINCLR,GMRETREG),0(GMRETREG) CLEAR PORTION OF QCB 2926
         SR    WORKREG2,WORKREG2        ZERO FOR IC
         TM    PARMCDS(CURPARM),RESERVE Q. WHAT LEVEL IS REQUESTED
         BC    7,CREATE2B              SYSTEM OR SYSTEMS
         IC    WORKREG2,TCBPKF(CURTCB)  NO, GET THE PROTECT KEY
         STC   WORKREG2,QCBPKF(GMRETREG)  AND STORE IT IN THE QCB
         BC    15,CREATE2A              GO INITIALIZE REMAINDER
CREATE2B TM    PARMCDS(CURPARM),SYSTEMS Q. IS IT SYSTEMS REQUEST
         BC    8,CREATE2C              NO - IT IS SYSTEM REQUEST
         MVI   QCBPKF(GMRETREG),SYSKEY  YES SET SYSTEMS KEY IN QCB
         BC    15,CREATE2A             INITIALIZE REMAINDER
CREATE2C MVI   QCBPKF(GMRETREG),NOKEY   INDICATE SHARED
CREATE2A L     GENREG,PTRMIN(CURPARM)   GET ADDRESS OF MINOR NAME
         IC    WORKREG2,LMINOR(CURPARM) GET MINOR NAME LENGTH
         LTR   WORKREG2,WORKREG2        Q. IS LENGTH FIELD ZERO
         BC    7,SETLTH                 NO, GO STORE IT
         IC    WORKREG2,0(GENREG)       YES, GET FIRST BYTE OF NAME
*                                            USE IT AS LENGTH
         LA    GENREG,1(GENREG)         ADVANCE POINTER TO NAME
SETLTH   STC   WORKREG2,LMINAME(GMRETREG)  PUT LENGTH INTO MINOR
         BCTR  WORKREG2,0               SUBTRACT ONE
         EX    WORKREG2,MOVENAME        MOVE NAME TO NEW MINOR QCB
         LCR   CURMIN,CURMIN            SET POINTER TO PREV IN TRUE
         ST    GMRETREG,NXMIN(CURMIN)   PUT NEW ADDR IN PREV ELEMENT
         LA    CURMIN,NXQEL(CURMIN) .     CLEAR THE HI-ORDER BYTE  5170
         ST    CURMIN,PREVMIN(GMRETREG) ADDR OF PREV IN NEW
         LR    CURMIN,GMRETREG          POINT AT NEW MINOR
         AIF   (NOT &B(3)).MIN4                                   20021
MINTJID1 EQU   0                                                  20021
MINTJID2 EQU   4                                                  20021
         TM    TCBTSFLG(CURTCB),TCBTSTSK TS TASK TCB              20021
         BZ    TSOEXIT             NO EXIT                        20021
         TM    PARMCDS(CURPARM),RESERVE STEP ENQ REQUESTED        20021
         BNZ   TSOEXIT             NO EXIT                        20021
         L     GENREG,TCBJSCB(CURTCB) GET JSCB FOR TS TCB         20021
         USING IEZJSCB,GENREG                                     20021
         MVC   MINTJID1(1,CURMIN),JSCBTJID MOVE 1ST PART OF TJID  20021
         MVC   MINTJID2(1,CURMIN),JSCBTJID+1 MOVE 2ND PART OF TJID20021
         DROP  GENREG                                             20021
TSOEXIT  EQU   *                                                  20021
.MIN4    ANOP                                                     20021
         LR    CURQEL,CURMIN            SET REG FOR CREATE1 ROUTINE
         BCR   15,LINKREG               RETURN TO MAINLINE
         EJECT
***  CREATE1 ROUTINE.
*    ENTERED FROM MAINLINE TO CREATE A QEL WITH ATTRIBUTES
*    AS SPECIFIED IN THE PARAMETER LIST.  IT IS CHAINED TO
*    THE MINOR QCB SPECIFIED IN 'CURMIN'.
*    THE ENQ COUNT FIELD IN THE TCB IS INCREMENTED.
*    IF THE QEL CREATED IS 'SHARED' MUST COMPLETE TESTS ARE
*    IGNORED.  IF IT IS 'EXCLUSIVE' A TEST ROUTINE IS ENTERED.
*    IN EITHER CASE CONTROL RETURNS TO AN ENDING ROUTINE TO
*    SEE IF ALL ELEMENTS IN THE LIST HAVE BEEN PROCESSED.
         SPACE 1
CREATE1  XC    0(QELCLR,GMRETREG),0(GMRETREG)  CLEAR PORTION OF NEW QEL
         O     GMRETREG,NXQEL(CURQEL)   POINTER TO NEW IN PREVIOUS 5170
         ST    GMRETREG,NXQEL(CURQEL) . CHAIN THEM TOGETHER        5170
         LA    GMRETREG,NXQEL(GMRETREG) . CLEAR THE HI-ORDER BYTE  5170
         ST    CURQEL,PREVQEL(GMRETREG) SET POINTER TO PREV ELEMENT
         ST    CURRB,SVRBPTR(GMRETREG)  SET POINTER TO SVRB
         ST    CURTCB,QELTCB(GMRETREG)  SET POINTER TO TCB
         LR    CURQEL,GMRETREG          POINT TO NEW QEL
         SR    WORKREG1,WORKREG1        CLEAR FOR IC
         IC    WORKREG1,TCBCT(CURTCB)   GET TCB ENQ COUNT BYTE
         LA    WORKREG1,1(WORKREG1)     INCREMENT IT BY ONE
         STC   WORKREG1,TCBCT(CURTCB)   AND STORE IT
         AIF   (NOT &B(1)).SHRD215
         STATUS SET,NR,'S'         INCREMENT NONROLLOUTABLE COUNT
.SHRD215 ANOP
         TM    PARMCDS(CURPARM),PLMI    Q. IS REQUESTOR PLUS
         BC    8,SMCLINK                YES, LEAVE PLUS, MAKE SMC TESTS
         OI    QELCDS(CURQEL),NEGCODE   NO, SET QEL MINUS
         AIF   (NOT &B(2)).SHRDA7
         BC    15,RSVTEST               SKIP SMC TESTS
         AGO   .SHRDA8
.SHRDA7  ANOP
         BC    15,TESTEND2              SKIP SMC TESTS
.SHRDA8  ANOP
SMCLINK  BAL   LINKREG,TESTSMC          LINK TO TEST SMC STATUS
         AIF   (NOT &B(2)).SHRDA10
RSVTEST  TM    PARMCDS(CURPARM),RESERVE Q. IS THIS A RESERVE REQUEST
         BC    11,TESTEND2              NO, GO GET NEXT ELEMENT
         TM    PARMCDS(CURPARM),X'08'   Q. IS IT DEFINITELY RESERVE
         BC    8,TESTEND2               NO, GO GET NEXT ELEMENT
         OI    QELCDS(CURQEL),RESERVED  SET RESERVE FLAG IN QEL
         TM    RBWCF(CURRB),X'FF'       Q. HAS SVRB BEEN PLACED IN WAIT
         BC    8,LOGRSV                 NO - REFLECT UCB POINTER IN QEL
         L     CURMAJ,RBSAVUCB(CURRB)   GET UCB POINTER          A30097
         LA    CURMAJ,0(CURMAJ)         WHEN RESOURCE BECOMES AVAILABLE
         B     OPRSMC
LOGRSV   L     UCBREG,RBSAVUCB(CURRB)   GET UCB POINTER          A30097
         LA    UCBREG,0(UCBREG)        CLEAR HI ORDER BYTE
         TM    DEVTYP-ONE(UCBREG),SHARED SHARED DEV...        BJ 38410
         BO   SETUCB                                          BJ  M2508
         NI   QELCDS(CURQEL),NORESRVE                         BJ  M2508
         B     OPRSMC .            NOT SHARED BRANCH          BJ  M2508
SETUCB   ST   UCBREG,QELUCB(CURQEL) . SET UCB POINTER IN QEL  BJ  M2508
         SR    WORKREG1,WORKREG1       CLEAR REG FOR IC
         IC    WORKREG1,UCBRSCT(UCBREG) GET UCB RESERVE COUNT
         LA    WORKREG1,1(WORKREG1)     INCREMENT COUNT BY 1
         STC   WORKREG1,UCBRSCT(UCBREG) REPLACE NEW RESERVE COUNT
         BC    15,OPRSMC                DO SMC IF NECESSARY
         AGO   .SHRDA14
.SHRDA10 ANOP
*        RETURN GOES TO TESTEND1/TESTEND2
.SHRDA14 ANOP
         EJECT
***  END PROCESSING
*    DETERMINE IF ALL ELEMENTS IN THE PARAMETER LIST HAVE
*    BEEN PROCESSED.  IF NOT, GET NEXT AND GO BACK TO THE
*    TOP.
*    WHEN ALL ELEMENTS HAVE BEEN PROCESSED DETERMINE IF
*    THE MUST COMPLETE ROUTINE SHOULD BE ENTERED.
*    THE ROUTINE WILL BE ENTERED IF
*    1-THIS WAS NOT A RET=TEST LIST.
*    2-THE SVRB WAIT COUNT WAS NOT INCREMENTED.
*    3-MUST COMPLETE WAS SPECIFIED.
*    IN EITHER CASE REGISTER 15 WILL BE SET ON EXIT AS FOLLOWS
*    IF ALL RETURN CODES=0, REGISTER 15=0.
*    OTHERWISE REGISTER 15 POINTS TO THE TOP OF THE LIST.
         SPACE 1
TESTEND1 DS    0C                       EQUAL TO TESTEND2
TESTEND2 TM    LISTEND(CURPARM),ENDIND  Q. ALL ELEMENTS PROCESSED
         LA    CURPARM,PARMSIZE(CURPARM)  POINT TO NEXT ANYWAY
         BZ    ENQTOP                   NO, GO PROCESS NEXT    @JK68363
         AIF   (&B(1)).SHRD220
OPRSMC   SSM   *+1           DISABLE
         LR    CURPARM,TOPPARM
         TM    PARMCDS(TOPPARM),TEST   IS MC LEGAL
         BC    1,EXIT             NO
         CLI   RBWCF(CURRB),WAITIND  IS THE SVRB IN WAIT
         BC    7,EXITWAIT         YES. GO TO DISPATCHER
         TM    PARMCDS(TOPPARM),SMC  WERE REQUESTS MUST COMPLETE
         BC    8,EXIT             NO.  EXIT
         AGO   .SHRD230
.SHRD220 ANOP
OPRSMC   LR    CURPARM,TOPPARM          RESET TO TOP OF LIST
         TM    PARMCDS(TOPPARM),TEST    Q. IS MC LEGAL
         BC    1,MCRET2                 NO, EXIT WITHOUT SETTING
         CLI   RBWCF(CURRB),WAITIND     Q. IS THE SVRB IN A WAIT
         BC    7,MCRET2                 YES, DONT SET NON-DISPATCHABLE
         TM    PARMCDS(TOPPARM),SMC     Q. WERE REQUESTS MUST COMPLETE
         BC    8,MCRET2                 NO, GO TO EXIT
         LR    WORKREG3,RETREG          SAVE RETURN REGISTER
         AIF   (NOT &B(3)).TSO0700                                20021
         SPACE 2                                                  20021
***                                                               20021
*    NOTIDFY THE OS/TS DRIVER IF SET MUST COMPLETE PROCESSING     20021
*    HAS BEEN REQUESTED BY A TIME-SHARING TASK.                   20021
         TM    PARMCDS(TOPPARM),SMCSYS REQUEST FOR SYSTEM MC?     20021
         BZ    NOTTSSMC                NO. CONTINUE.              20021
         TM    TCBTSFLG(CURTCB),TCBTSTSK IS THIS A TIME-          20021
*                                      SHARING TASK?              20021
         BZ    NOTTSSMC                NO. CONTINUE.              20021
         L     REG1,TCBJSCB(CURTCB)    ACCESS JOB STEP CTL BLK    20021
         USING IEZJSCB,REG1                                       20021
         LH    REG0,JSCBTJID           OBTAIN TERMINAL JOB ID.    20021
         DROP  REG1                                               20021
         SR    REG1,REG1                                          20021
         TSEVENT  REQSTMC,TJID=(0)                                20021
NOTTSSMC EQU   *                                                  20021
         SPACE 2                                                  20021
.TSO0700 ANOP                                                     20021
         AGO   .SHRD235
.SHRD230 ANOP
         LR    MCTCBRG,CURTCB           XFR TCB FOR SMC INTERFACE
         LA    RETREG,MCRET             SET ADDR FOR RETURN
.SHRD235 ANOP
         TM    PARMCDS(TOPPARM),SMCSYS  Q. IS IT SYSTEM MC
         BC    1,SETCOMP                YES
         AIF   (&B(1)).SHRD260
         OI    TCBFLG1(CURTCB),TCBFJMC  SET TCB MUST COMPLETE
         LH    WORKREG0,STEPMSK        LO AD  STEP MASK           19054
         B     STPSYS                                             19054
SETCOMP  LCR   MCTCBRG,MCTCBRG     INDICATE SYSTEM LEVEL
         OI    TCBFLG1(CURTCB),TCBFSMC  SET TCB SYSTEM MUST COMPLETE
         LH    WORKREG0,SYSMASK    LOAD SYSTEM MASK
STPSYS   EQU   *                                                  19054
         B     SETRSMC             TAKE CARE OF DISPATCHING
MCRET    OI    TCBFLG(CURTCB),TCBFXS  DEFER ASYNCHRONOUS EXITS
EXIT     BAL   LINKREG,MCRET2
GOEXIT   SVC   3
EXITWAIT STM   10,9,TCBGRS(CURTCB)  SAVE XRS IN TCB
         MVC   PSWADR(LPSW,CURRB),MCOP  SET UP PSW TO REENTER ATOPRSMC
         SR    GENREG,GENREG
         LM    WORKREG1,WORKREG2,NEW
         CLC   ONE(D3,WORKREG1),D5(WORKREG1) TASK SW.         BJ 44371
         BNE   D0(WORKREG2)        YES BRANCH                 BJ 44371
         ST    GENREG,0(WORKREG1)   ZERO NEW
         BCR   15,WORKREG2        GO TO DISPATCHER
         AGO   .SHRD270
.SHRD260 ANOP
         STATUS SET,MC,STEP        SET MUST COMPLETE STEP
         B     MCRET              BRANCH AROUND SMC
SETCOMP  STATUS SET,MC,SYSTEM      SET SYSTEM MUST COMPLETE
MCRET    LR    RETREG,WORKREG3     RESET RETURN REGISTER
.SHRD270 ANOP
MCRET2   SR    GENREG,GENREG            ASSUME ALL ZERO RETURN CODES
SETRET   TM    RETURN(CURPARM),ANYON    Q. ANY RETURN CODE
         BC    7,TAKEXIT                YES, EXIT WITH REG 15
*                                       POINTING TO THE FIRST ELEMENT
         TM    LISTEND(CURPARM),ENDIND  Q. END OF PARAMETER LIST
         AIF   (&B(1)).SHRD280
         BCR   1,LINKREG          EXIT
         AGO   .SHRD290
.SHRD280 ANOP
         BC    1,EXIT                   YES, GO TO EXIT
.SHRD290 ANOP
         LA    CURPARM,PARMSIZE(CURPARM)  NO, GET NEXT ELEMENT
         BC    15,SETRET                GO THRU AGAIN
TAKEXIT  LR    GENREG,TOPPARM           POINT TO FIRST LIST ELEMENT
         AIF   (&B(1)).SHRD300
         BCR   15,LINKREG         EXIT
         AGO   .SHRD310
.SHRD300 ANOP
         BC    15,EXIT                  GO TO EXIT
.SHRD310 ANOP
         EJECT
***  ENTER THIS ROUTINE ONLY FOR THE CREATION OF EXCLUSIVE
*    QELS.  ONLY EXCLUSIVE REQUESTS MAY SPECIFY SET MUST
*    COMPLETE.
*    IF THE REQUESTOR DOES NOT HAVE AN SVC OLD PSW PROTECT
*    KEY EQUAL TO ZERO, AND SMC WAS SPECIFIED, HE WILL BE
*    ABNORMALLY TERMINATED.
         SPACE 1
TESTSMC  TM    PARMCDS(TOPPARM),SMC     Q. IS REQUEST MUST COMPLETE
         BCR   8,LINKREG                NO, RETURN WITHOUT SETTING MC
         TM    PARMCDS(TOPPARM),SMCSYS  Q. IS IT SYSTEM MC
         BC    1,SYS                    YES
         OI    QELSMC(CURQEL),SMCSTP    NO, SET QEL STEP MUST COMPLETE
         BCR   15,LINKREG               RETURN
SYS      OI    QELSMC(CURQEL),SMCSYS    SET QEL SYSTEM MUST COMP
         BCR   15,LINKREG               RETURN
         AIF   (&B(1)).SHRD390
         EJECT
***  EXECUTED INSTRUCTIONS FOR MODIFYING THE DISPATCHABILITY
*    OF THE TCB PASSED IN THE 'TCBREG' BY THE BYTE PASSED
*    IN THE 'MASKREG'.
*    THE SUBJECT TCB IS MADE EITHER DISPATCHABLE OR NON-DISPATCHABLE.
         SPACE 1
IEA0SMC  BALR  BASEREG,0          SET UP ADDRESSING
         LA    GENREG,IEA0SMC-IGC048   RESET BASE REGISTER
         SR    BASEREG,GENREG
SETRSMC  LR    MASKREG,WORKREG0   XFR MASK BYTE
         LA    WORKREG7,SYSTEM                                    19054
         LTR   MCTCBRG,MCTCBRG    IS IT SYSTEM OR STEP MUST COMPLETE
         BC    13,SYSLEVEL      REGISTER IS NEGATIVE AND SIGNALS  19054
*                                  REQUEST IS SYSTEM WIDE         19054
         L     WORKREG2,CVTADDR    LOAD PTR TO CVT                 I250
         USING CVT,WORKREG2                                        I250
         TM    CVTOPTA,MFTATTCH    IS THIS MFT ATTACH              I250
         BCR   8,RETREG            NO,RETURN                       I250
         DROP  WORKREG2                                            I250
         LA    WORKREG7,STEP                                      19054
         B     SYSSTEP      SKIP RESETTING REGISTER               19054
SYSLEVEL LCR   MCTCBRG,MCTCBRG          SYSTEM, PUT ADDR IN TRUE FORM
SYSSTEP  EQU   *                                                  19054
         L     TCBREG,MASTER            GET ADDRESS OF MASTER TCB
MCTST    CLR   MCTCBRG,TCBREG     IS THIS THE MC TASK
         BC    8,GETTCB           YES. SKIP IT AND GET NEXT TCB
         BCR   15,WORKREG7             GO TO PROCESS STEP OR SYS  19054
STEP     CLC   45(3,MCTCBRG),45(TCBREG)    ARE TCBS IN SAME STEP  19054
         BNE   GETTCB                   NO                        19054
SYSTEM   LTR   MASKREG,MASKREG          Q. IS IT SMC OR RMC
         BC    4,EXRMC                  RMC
EXSMC    EX    MASKREG,SMCINST          DO A SET MUST COMPLETE
         BC    15,GETTCB                TRY NEXT TCB
EXRMC    EX    MASKREG,RMCINST          DO A RESET MUST COMPLETE
         LR    WORKREG2,WORKREG3  SAVE XRS ACROSS TASK SWITCH
         LR    WORKREG0,LINKREG
         BAL   LINKREG,TASKSWT2   GO TO TASK SWITCH
         LR    LINKREG,WORKREG0   RESTORE XRS
         LR    WORKREG3,WORKREG2
         TM    TCBFLG2(TCBREG),X'20'  IS SIRB ACTIVE FOR TASK
         BC    8,GETTCB           NO
         L     WORKREG2,ADSYMCSW  YES. SET SWITCH FOR EXIT
         NI    1(WORKREG2),X'0F'  TO MAKE TASK NON-DISPATCHABLE
         NI    TCBDISP(TCBREG),X'F7'  MAKE TASK DISPATCHABLE
GETTCB   L     TCBREG,TCBTCB(TCBREG)    GET NEXT TCB ON READY QUEUE
         LTR   TCBREG,TCBREG            Q. HAVE WE FINISHED
         BCR   8,RETREG           YES.  EXIT
         BC    15,MCTST           NO. PROCESS NEXT TCB
.SHRD390 ANOP
         EJECT
***  DETERMINE LENGTH OF MINOR QCB, INCLUDING NAME, AND
*    ROUND UP TO A FULL WORD BOUNDRY.  NOTE SUMREG=GMRETREG=1
         SPACE 1
ADDMINOR SR    SUMREG,SUMREG            CLEAR ACCUMULATOR
         IC    SUMREG,LMINOR(CURPARM)   GET LENGTH OF MINOR
         LTR   SUMREG,SUMREG            Q. IS IT ZERO
         BC    7,NMLTH                  NO, USE IT AS THE LENTH
         L     GENREG,PTRMIN(CURPARM)   GET ADDRESS OF MINOR NAME
         IC    SUMREG,0(GENREG)         GET FIRST BYTE OF NAME
         LTR   SUMREG,SUMREG            Q. IS IT ZERO
         BC    8,ERRX2                  YES, ABEND
NMLTH    LA    SUMREG,FULLSIZE(SUMREG)  ROUND UP
         N     SUMREG,MASKFULL          TO DOUBLE WORD
         BCR   15,LINKREG               RETURN
         EJECT
***  THIS ROUTINE ATTEMPTS TO FIND A MAJOR QCB BY THE SAME
*    NAME AS THAT GIVEN IN THE CURRENT PARAMETER LIST ENTRY.
*    IF SUCCESSFUL: THE ROUTINE EXITS WITH 'CURMAJ'
*                   POINTING TO THE MAJOR QCB WITH
*                   THE SAME NAME.
*    IF NOT SUCCESSFUL: THE ROUTINE EXITS WITH THE
*                   COMPLIMENT OF THE ADDRESS OF THE
*                   LAST MAJOR QCB.
         SPACE 1
FINDMAJ  L     WORKREG2,PTRMAJ(CURPARM)  GET PTR TO MAJOR NAME
*                                       FROM PARM LIST
         MVC   XSAV(LMAJ,CURRB),0(WORKREG2) MOVE NAME TO WORD BOUNDRY
         LM    WORKREG1,WORKREG2,XSAV(CURRB) PICK UP NAME
         L     WORKREG3,ENTNQDQ                                    REFR
         USING   NQDQQCB,WORKREG3                                  REFR
         LA    CURMAJ,HEADQCB           INITIALIZE
         DROP   WORKREG3                                           REFR
         SR    WORKREG3,WORKREG3                                   REFR
CHKLINK  CL    WORKREG3,NXMAJ(CURMAJ)   Q. IS NEXT MAJOR QCB PRESENT
         BC    8,NEGOUT                 NO, EXIT POINTING TO LAST MAJOR
         L     CURMAJ,NXMAJ(CURMAJ)     GET POINTER TO NEXT MAJOR
         CL    WORKREG1,MAJNAME(CURMAJ) Q. 1ST HALF NAMES EQUAL
         BC    7,CHKLINK                NO, GET NEXT MAJOR QCB
         CL    WORKREG2,MAJNAME+4(CURMAJ) Q. 2ND HALF NAMES EQUAL
         BCR   8,LINKREG                YES, RETURN POINTING TO
*                                       MAJOR QCB OF SAME NAME
         BC    15,CHKLINK               NOT SAME NAME, TRY AGAIN
NEGOUT   LCR   CURMAJ,CURMAJ            INDICATE MAJOR NOT FOUND
POSOUT   BCR   15,LINKREG               RETURN TO CALLER
         SPACE 3
***  THIS ROUTINE ATTEMPTS TO FIND A MINOR QCB BY THE SAME
*    NAME AS THAT GIVEN IN THE CURRENT PARAMETER LIST ENTRY.
*    IT IS ENTERED ONLY IF A MAJOR QCB HAS BEEN FOUND.
*    IF SUCCESSFUL: EXIT WITH 'CURMIN' POINTING TO MINOR QCB.
*    IF NOT SUCCESSFUL: EXIT WITH 'CURMIN' CONTAINING THE
*                   COMPLIMENT ADDRESS OF THE LAST MINOR
*                   QCB ON THE PREVIOUSLY FOUND MAJOR QCB.
         SPACE 1
FINDMIN  SR    WORKREG1,WORKREG1        INITIALIZE REG TO ZERO
         LR    WORKREG2,WORKREG1        ZERO FOR IC
         L     CURMIN,FSTMIN(CURMAJ)    OBTAIN MINOR ADDRESS
         LA    CURMIN,DB0(CURMIN) .CLEAR THE HI-ORDER BYTE       M3481
         LTR   CURMIN,CURMIN .     DO WE HAVE A MAJOR WITHOUT A MINOR
         BNZ   SHARET .            NO, CONTINUE PROCESSING        1853
         LCR   CURMIN,CURMAJ .     COMPLEMENT THE MAJOR ADDR      1853
         BR    LINKREG .           RETURN                         1853
SHARET   TM    PARMCDS(CURPARM),RESERVE Q. WHAT LEVEL IS REQUESTED
         BC    8,PKFCHK2               STEP LEVEL
         BC    1,PKFCHK3               SYSTEMS LEVEL
         TM    PARMCDS(CURPARM),SHARE   Q. SYSTEM OR RESERVE
         BC    8,PKFCHK3               RESERVE HENCE SYSTEMS
PKFCHK   TM    QCBPKF(CURMIN),SYSKEY    Q. SCOPE OF SYSTEM(S)? @SA72270
         BNO   GETNXMIN                NO,GET THE NEXT MINOR   @SA72270
         BC    15,LTHEQ                 YES, GO TEST THE LENGTHS
PKFCHK2  CLC   TCBPKF(1,CURTCB),QCBPKF(CURMIN)  Q. ARE THE PROTECT
*                                                  KEYS EQUAL
         BC    7,GETNXMIN               NO, GET THE NEXT MINOR
         BC    15,LTHEQ                YES TEST THE LENGTHS
PKFCHK3  TM    QCBPKF(CURMIN),SYSKEY    Q. SCOPE OF SYSTEM(S)? @SA72270
         BNO   GETNXMIN                NO,GET THE NEXT MINOR   @SA72270
LTHEQ    L     GENREG,PTRMIN(CURPARM)   GET ADDRESS OF MINOR NAME
         IC    WORKREG2,LMINOR(CURPARM) GET LENGTH FIELD FROM LIST
         LTR   WORKREG2,WORKREG2        Q. IS IT EQUAL TO ZERO
         BC    7,LTHTEST                NO, GO TEST FOR EQUAL LENGTHS
         IC    WORKREG2,0(GENREG)       YES, GET LENGTH FROM FIRST
*                                  BYTE OF NAME FIELD
         LA    GENREG,1(GENREG)         ADVANCE POINTER TO NAME
LTHTEST  EX    WORKREG2,LTHINST         Q. ARE LENGTHS EQUAL
         BC    7,GETNXMIN               NO, GET NEXT MINOR QCB
         BCTR  WORKREG2,0               DECREMENT BY ONE
         EX    WORKREG2,COMPNAME
         AIF   (NOT &B(3)).MIN1                                   20021
         BNE   GETNXMIN            NO GET NEXT MINOR QCB          20021
         AGO   .MIN2                                              20021
.MIN1    BC    8,PLOUT             NAME IS THE SAME               20021
         AGO   .MIN3                                              20021
.MIN2    ANOP                                                     20021
TSOFIX   TM    TCBTSFLG(CURTCB),TCBTSTSK TS TASK                  20021
         BZ    PLOUT               NO EXIT                        20021
         TM    PARMCDS(CURPARM),RESERVE STEP ENQ REQESTED         20021
         BNZ   PLOUT               NO EXIT                        20021
         L     GENREG,TCBJSCB(CURTCB) GET JSCB ADDRESS            20021
         USING IEZJSCB,GENREG                                     20021
         CLC   MINTJID1(1,CURMIN),JSCBTJID 1ST TJID EQUAL         20021
         BNE   GETNXMIN            NO GET NEXT MINOR QCB          20021
         CLC   MINTJID2(1,CURMIN),JSCBTJID+1 2ND TJID EQUAL       20021
         BE    PLOUT               YES MINOR QCB FOUND            20021
.MIN3    ANOP                                                     20021
GETNXMIN L     WORKREG1,NXMIN(CURMIN) .GET NEXT MINOR             38396
         LA    WORKREG1,DB0(WORKREG1) .CLEAR THE HI-ORDER BYTE    38396
         LTR   WORKREG1,WORKREG1 .    IS THERE ANOTHER MINOR THERE38396
         BC    8,MIOUT                  NO,TAKE BRANCH
         LR    CURMIN,WORKREG1 .   SET UP REG 7 FOR ANOTHER SCAN  M4290
         BC    15,SHARET                REPEAT MINOR SEARCH
MIOUT    LCR   CURMIN,CURMIN            COMPLEMENT MINOR ADR.
PLOUT    SR    WORKREG1,WORKREG1 . CLEAR IT FOR POSS. INTERFACE PROB
         BCR   15,LINKREG .              RETURN                   38396
         EJECT
***  THIS ROUTINE PERFORMS A TWO PART FUNCTION.
*    1-INITIALLY TO VALIDATE A REQUEST (TEST FOR SAME
*       REQUESTOR ALREADY QUEUED ON THE RESOURCE).
*    2-TO FIND THE QEL BELOW WHICH THE CURRENT
*       REQUESTOR IS TO BE ENQUEUED, AND INDICATE
*       WHETHER OR NOT TO PLACE THE REQUESTOR IN
*       A WAIT STATE.
         SPACE 1
FINDQEL  SR    WORKREG1,WORKREG1        INITIALIZE COMPERAND
         SR    WORKREG2,WORKREG2        ASSUME A MINUS QUEUE
         L     CURQEL,FSTQEL(CURMIN)    GET ADDRESS OF 1ST QEL
         LA    CURQEL,DB0(CURQEL) .CLEAR THE HI-ORDER BYTE       M3481
         LTR   CURQEL,CURQEL .     DO WE HAVE A MINOR WITHOUT A QEL1853
         BNZ   CHKCODE .           NO, CONTINUE PROCESSING         1853
         LR    CURQEL,CURMIN .     RETURN MINORS ADDR              1853
         BR    LINKREG .           RETURN                          1853
CHKCODE  TM    QELCDS(CURQEL),PLMI      Q. IS QUEUE PLUS OR MINUS
         BC    1,CHKTCB                 MINUS, DONT SET INDICATOR
         BALR  WORKREG2,0               PLUS, SET INDICATOR
CHKTCB   CL    CURTCB,QELTCB(CURQEL)    Q. HAS SAME TASK REQUESTED
         BC    8,BAD                    YES, EXIT INDICATING BAD REQ
         OC    NXQEL+1(3,CURQEL),NXQEL+1(CURQEL)  Q. MORE TO CHECK
         BC    8,GOOD                   NO, EXIT INDICATING GOOD REQ
         L     CURQEL,NXQEL(CURQEL)     GET ADDRESS OF NEXT QEL
         BCTR  WORKREG1,0            SET WORKREG1 NEG-NOT TOP QEL 20021
         BC    15,CHKCODE               TEST AND VALIDATE IT
BAD      LCR   CURQEL,CURQEL            SET BAD INDICATION
GOOD     BCR   15,LINKREG               RETURN TO CALLER
         EJECT
         AIF   (NOT &B(1)).SHRD400
***  EXIT INTERFACE
EXIT     TM    RBWCF(CURRB),ANYON       Q. IS WAIT COUNT EQUAL TO ZERO
         BC    7,EXITWAIT               NO, GO TO DISPATCHER
EXITNORM BCR   15,RETREG                NOT IN WAIT RETURN TO CALLER
EXITWAIT EQU   *                                                  20021
         AIF   (NOT &B(3)).TSO0800                                20021
         TM    TCBTSFLG(CURTCB),TCBTSTSK TS USER                  20021
         BNO   WAITEXIT            NO RESUME PROCESSING           20021
         L     REG1,TCBJSCB(CURTCB) YES GET JSCB ASSOCIATED       20021
         DROP  GENREG                                           M1861
         USING IEZJSCB,REG1        BASE FOR DSECT                 20021
         LH    REG0,JSCBTJID       GET TJID FOR ASSOC USER        20021
         DROP  REG1                                               20021
         L     REG1,CVTPTR         .GET CVT ADDRESS               20021
         USING CVT,REG1                                           20021
         L     REG1,CVTTSCVT       GET TSCVT ADDRESS              20021
         DROP  REG1                                               20021
         USING TSCVT,REG1                                         20021
         LR    WORKREG3,RETREG     SAVE EXIT ADDRESS              20021
         L     GENREG,TSCVTI01     GET BRANCH ENTRY PT            20021
         DROP  REG1                                               20021
         XR    REG1,REG1           CLEAR REG                      20021
         TSEVENT ENQWAIT,TJID=(0),ENTRY=BRANCH                    20021
         LR    RETREG,WORKREG3     RESTORE EXIT ADDR              20021
WAITEXIT EQU   *                                                  20021
.TSO0800 ANOP                                                     20021
         TM    PARMCDS(TOPPARM),SMC Q. IS MUST COMPLETE REQUESTED 20021
         BC    8,NOMC                   NO, SKIP MC CODING
         MVC   PSWADR(LPSW,CURRB),MCOP  YES, POINT RESUME PSW TO
*                                            MUST COMPLETE CODE
         BC    15,EXIT1                 SKIP
NOMC     MVC   PSWADR(LPSW,CURRB),ADREXIT    PUT ADDRESS OF 'EXITNORM'
*                                            IN RESUME PSW
EXIT1    STM   0,15,TCBGRS0(CURTCB)     PUT REGS IN TCB
         SR    GENREG,GENREG            CLEAR
         LM    WORKREG1,WORKREG2,NEW    GET ADDR OF NEW AND DISPATCHER
        CLC    ONE(D3,WORKREG1),D5(WORKREG1) TASK SW.         BJ 44371
         BNE   D0(WORKREG2)         YES BRANCH                BJ 44371
         ST    GENREG,0(WORKREG1)       ZERO NEW
         BCR   15,WORKREG2              GO TO DISPATCHER
         EJECT
***  THIS ROUTINE INTERFACES WITH THE SUPERVISORS VALIDITY
*    CHECK ROUTINE, IEA0VL00.
*    IT CHECKS FOR
*    FULL WORD ALIGNMENT OF LIST
*    IS LIST ADDRESS WITHIN MACHINE SIZE
*    PROPER PROTECT KEY
         SPACE 1
         EXTRN IEA0VL01                 VALIDITY CHECK ROUTINE
         SPACE 1
CHKLIST  L     GENREG,RBLINK(CURRB)     GET ISSUING RB
         TM    RBPSW+1(GENREG),PKEY0    Q. IS PROTECT KEY ZERO
         AIF   (NOT &B(2)).SHRDA71
         BC    7,LDBASE                NON SYSTEM INVOKED-CHECK IT
         TM    PARMCDS(CURPARM),RESERVE Q. IS THIS SYSTEMS REQUEST
         BC    11,12(LINKREG)          NO RETURN TO CALLER
         TM    PARMCDS(CURPARM),X'08'  IS IT RESERVE REQUEST
         BC    8,12(LINKREG)           NO RETURN TO CALLER
         L     UCBREG,PTRUCB(CURPARM)  GET PNTR TO UCB PNTR
         L     UCBREG,0(UCBREG)        GET UCB POINTER
         ST    UCBREG,RBSAVUCB(CURRB)   SAVE UCB POINTER         A30097
         BC    15,12(LINKREG)          AND RETURN TO CALLER
         AGO   .SHRDA72
.SHRDA71 ANOP
         BC    8,12(LINKREG)            YES, RETURN OK
.SHRDA72 ANOP
         SPACE 1
***  NON-SYSTEM ROUTINE, INVOKE VALIDITY CHECK.
LDBASE   LA    GENREG,LDBASE            SET INTERFACE BASE
         USING LDBASE,GENREG
         SPACE 1
         L     CHKBASE,VALIDCHK         SET VALIDITY CHECK BASE
CHKFRNT  BAL   WORKREG2,4(CHKBASE)      GO TO VALIDITY CHECK ROUTINE
         BC    7,INVALID                FAILED VALIDITY CHECK
         SPACE 1
         LA    INPUTREG,11(CURPARM)     GET LAST BYTE OF ENTRY
         BALR  WORKREG2,CHKBASE         VALIDITY CHECK THE ADDRESS
         BC    7,INVALID                INVALID ADDRESS
         SPACE 1
         L     INPUTREG,PTRMAJ(CURPARM) GET ADDRESS OF MAJOR NAME
         BAL   WORKREG1,ENTER           GO CHECK IT
         LA    INPUTREG,7(INPUTREG)     GET LAST BYTE OF NAME
         BAL   WORKREG1,ENTER           GO CHECK IT
         SPACE 1
         L     INPUTREG,PTRMIN(CURPARM) GET ADDRESS OF MINOR NAME
         BAL   WORKREG1,ENTER           GO CHECK IT
         SR    WORKREG1,WORKREG1  CLEAR FOR IC
         IC    WORKREG1,LMINOR(CURPARM)  GET LENGTH OF MINOR
         LTR   WORKREG1,WORKREG1  IS IT ZERO
         BC    7,ADDIT                  NO, ADD IT TO ADDRESS
         IC    WORKREG1,0(INPUTREG)  GET LENGTH FROM MINOR FIELD
         LTR   WORKREG1,WORKREG1  IS IT ZERO
         BC    8,BADLTH                 YES, ABEND THE TASK
         BC    15,NOSUB                 NOT ZERO SKIP DECREMENT
ADDIT    BCTR  WORKREG1,0         REDUCE IT BY ONE
NOSUB    AR    INPUTREG,WORKREG1  ADD IT TO ADDRESS
         BAL   WORKREG1,ENTER
.SHRD400 AIF   (&B(1)).SHRD410
CHKLIST  L     GENREG,RBLINK(CURRB)
         TM    PSWADR+1(GENREG),X'F0'
         BZ    SMALLDSI           P. K. IS ZERO, CHECK SMALL TCB
         TM    PARMCDS(TOPPARM),SMC  SMC IN PROBLEM PROGRAM
         BC    7,ERRX3            MODE IS INVALID
         LR    RE,CURTCB                                           I250
         L     WORKREG1,CVTADDR    GET ADDRESS OF CVT              I250
         USING CVT,WORKREG1                                        I250
         TM    CVTOPTA,MFTATTCH    IS THIS MFT ATTACH              I250
         BC    8,BBOX              NO, GET PTR TO BBOX             I250
         DROP  WORKREG1                                            I250
         L     RE,TCBJSTEP(CURTCB) GET PTR TO JOB STEP TCB         I250
BBOX     L     WORKREG1,TCBBYBOX(RE)  GET PTR TO BOUNDARY BOX      I250
         SR    RE,RE                   CLEAR REG FOR LATER LCS TEST LCS
         TM    0(WORKREG1),X'01'       TEST FOR LCS                 LCS
         BC    8,ONEBOUND              NO LCS                       LCS
         LM    RE,RF,16(WORKREG1)      LCS - GET HI,LO LCS ADDR     LCS
ONEBOUND LM    WORKREG1,WORKREG2,4(WORKREG1)  GET HI,LO ADDR        LCS
CHKFRNT  LA    WORKREG7,CHECK           GET ADR CHECK ROUTNLCS @JK67730
         LR    WORKREG3,CURPARM        SET UP INITIAL ADR-PASS TO   LCS
         BALR  BRCHECK,WORKREG7        CHECK BEG PARM ENTRIES       LCS
         LA    WORKREG3,PLASTBYT(WORKREG3)   LAST PARM BYTE    @JK67730
         BALR  BRCHECK,WORKREG7        CHECK END PARM ENTRY         LCS
         EX    CURPARM,WDTEST          TEST ALIGNMENT               LCS
         BC    5,INVALID               NOT ALIGNED                  LCS
         L     WORKREG3,PTRMAJ(CURPARM)  GET ADR MAJOR NAME         LCS
         BALR  BRCHECK,WORKREG7        CHECK BEG MAJOR NAME         LCS
         LA    WORKREG3,8(WORKREG3)                                 LCS
         BALR  BRCHECK,WORKREG7         CHECK END MAJOR NAME        LCS
         L     WORKREG3,PTRMIN(CURPARM)                             LCS
         BALR  BRCHECK,WORKREG7        CHECK BEG MINOR NAME         LCS
         SR    CURQEL,CURQEL
         IC    CURQEL,LMINOR(CURPARM)  GET LENGTH OF MINOR
         LTR   CURQEL,CURQEL      IS IT ZERO
         BC    7,ADDIT            NO. COMPUTE UPPER BOUND
         IC    CURQEL,0(WORKREG3)  IS LENGTH PREFIXED TO MINOR
         LTR   CURQEL,CURQEL
         BC    8,ERRX2            NO
ADDIT    AR    WORKREG3,CURQEL    ADD LENGTH TO ADDRESS FO MINOR
         BALR  BRCHECK,WORKREG7        CHECK END MINOR NAME         LCS
         AIF   (NOT &B(2)).SHRDA2
         L     REG1,RBLINK(CURRB) POINTER TO ENQ SVRB BJ 57060   4027
         CLI   RBPSW+3(REG1),X'38'  IS THIS A REQUEST FOR ENQ(SVC38)
         AGO   .SHRD420
.SHRD410 AIF   (NOT &B(2)).SHRDA2
         L     WORKREG1,RBLINK(CURRB)   GET ISSUING RB ADDRESS
         CLI   RBPSW+3(WORKREG1),X'38'  IS THIS A REQUEST FOR ENQ
.SHRD420 ANOP
         BC    7,CHKEND                 NO, SKIP RESERVE CHECK
         TM    PARMCDS(CURPARM),RESERVE Q. IS THIS A RESERVE REQUEST
         BC    11,CHKEND                NO, GO GET NEXT ELEMENT
         TM    PARMCDS(CURPARM),X'08'   Q. IS IT DEFINITELY RESERVE
         BC    8,CHKEND                 NO, GO GET NEXT ELEMENT
         TM    LISTEND(CURPARM),ENDIND  Q. IS THIS LAST PARM ELEMENT
         BZ    INVALID                  NO, ERROR              @JK68363
         AIF   (&B(1)).SHRD430
         LA    WORKREG3,RESVSIZE(CURPARM)  GET END OF LIST
         BALR  BRCHECK,WORKREG7   VALIDITY CHECK              BJ 35042
         BALR  BRCHECK,WORKREG7   VALIDITY CHECK              BJ 35042
         AGO   .SHRD440
.SHRD430 ANOP
         LA    INPUTREG,15(CURPARM)     GET LAST BYTE OF ENTRY+12
         BALR  WORKREG2,CHKBASE         VALIDITY CHECK THE ADDRESS
         BC    7,INVALID                INVALID ADDRESS
.SHRD440 ANOP
         L     WORKREG7,ENTNQDQ                                    REFR
         USING   NQDQQCB,WORKREG7                                  REFR
         L     INPUTREG,PTRUCB(CURPARM) GET ADDRESS OF UCB POINTER
         BAL   WORKREG1,ENTER           VALIDITY CHECK THE ADDRESS
         EX    INPUTREG,WDTEST          YES - TEST FOR FULL WORD BOUND
         BC    5,INVALID                NOT FULL WORD - INVALID
         L     UCBREG,0(INPUTREG)  GET ADDR OF UCB
         LA    UCBREG,0(UCBREG)           CLEAR UPPER BYTE
         AIF   (&B(1)).SHRD445
         L     TIOTREG,TCBTIOT(CURTCB)  GET TIOT ADDR
         AGO   .SHRD446
.SHRD445 ANOP
         L     JSTCBRG,JSPTR(CURTCB)    GET JOB STEP TCB ADDRESS
         L     TIOTREG,TCBTIOT(JSTCBRG) GET TIOT ADDRESS
.SHRD446 ANOP
         LA    TIOTREG,TIOELNGH(TIOTREG)  TREG = POINTR TO FIRST DD
NEXTDD   L     TIOEREG,TIOTEND(TIOTREG)   EREG = FIRST WORD OF THIS DD
         LTR   TIOEREG,TIOEREG            Q IS THIS THE END OF TIOT
         BC    8,INVALID                  YES UCB WAS NOT FOUND
         SR    TIOEREG,TIOEREG            THERE IS ANOTHER DD ENTRY
         IC    TIOEREG,TIOTEND(TIOTREG)   GET ITS LENGTH AND COMPUTE
         LA    TIOEREG,0(TIOEREG,TIOTREG) TOP END OF DD IN EREG
         LA    TIODVRG,TIODDLNG(TIOTREG)  DVRG = POINTR TO FIRST DEV
NEXTDEVC CR    TIODVRG,TIOEREG         Q IS THIS END OF DEVICE ENTRY
         BE    TIONXTDD                   YES TRY NEXT DD ENTRY
         BC    2,INVALID                  IF DD SIZE WAS WRONG - ERROR
         L     TIOUCBRG,TIOEFSRT(TIODVRG) UCBRG = UCB POINTER
         LA    TIOUCBRG,0(TIOUCBRG)       CLEAR UPPER BYTE
         CR    TIOUCBRG,UCBREG            Q IS THIS THE UCB
         BE    UCBTEST                    YES TEST IT FOR PROPERTIES
         BH    SUBUCB                   TEST IT FOR SUBUCB         SDA2
NEXTIOT  LA    TIODVRG,4(TIODVRG) NO POINT TO NEXT UCB PTR         SDA2
         B     NEXTDEVC                 IF THERE IS ONE            SDA2
SUBUCB   TM    UCBID(TIOUCBRG),X'FF'    IS THIS SUB OR MAIN UCB    SDA2
         BC    1,NEXTIOT                MAIN UCB CHECK NEXT        SDA2
         ST    WKRG3,SAVEA              SAVE REGISTER              SDA2
         LH    WKRG3,DCELBBNR(TIOUCBRG) GET BIN NO. FROM SUB UCB   SDA2
         SLL   WKRG3,4                  MULTIPLY BY 16             SDA2
         LA    WKRG3,UCBSIZE(WKRG3) ADD SIZE OF MAIN               SDA2
         SR    TIOUCBRG,WKRG3                                      SDA2
         CR    TIOUCBRG,UCBREG                                     SDA2
         L     WKRG3,SAVEA              RESTORE REGISTER           SDA2
         BNE   NEXTIOT                                             SDA2
         B     UCBTEST                  TEST UCB PROPERTIES        SDA2
TIONXTDD LR    TIOTREG,TIOEREG            UPDATE DD POINTR TO NEXT
         B     NEXTDD                     ENTRY IF THERE IS ONE
UCBTEST  TM    UCBID(UCBREG),X'FF'      WAS SUB-UCB PASSED         SDA2
         BC    1,UCBOK                  MAIN UCB DON'T ALTER       SDA2
         ST    WKRG3,SAVEA              SAVE WORK REGISTER         SDA2
         LH    WKRG3,DCELBBNR(UCBREG)   GET BIN # FROM SUB UCB     SDA2
         SLL   WKRG3,4                  MULTIPLY SIZE OF SUB UCB   SDA2
         LA    WKRG3,UCBSIZE(WKRG3)     ADD SIZE OF MAIN           SDA2
         SR    UCBREG,WKRG3             COMPUTE START OF MAIN      SDA2
         L     WKRG3,SAVEA              RESTORE WORK REG           SDA2
UCBOK    ST    UCBREG,RBSAVUCB(CURRB)   SAVE REAL UCB POINTER    A30097
         DROP  WORKREG7                                            REFR
CHKEND   TM    LISTEND(CURPARM),ENDIND  Q. LAST ELEMENT CHECKED@JK68363
         AGO   .SHRDA15
.SHRDA2  ANOP
         SPACE 1
         TM    LISTEND(CURPARM),ENDIND  Q. LAST ELEMENT CHECKED@JK68363
.SHRDA15 ANOP
         LA    CURPARM,PARMSIZE(CURPARM) ADVANCE TO NEXT ANYWAY
         LR    INPUTREG,CURPARM         SET INPUT REG FOR VALID CHK
         BZ    CHKFRNT                  GO CHECK LIST ELEMENT  @JK68363
         AIF   (&B(1)).SHRD460
         LR    CURPARM,TOPPARM    RESET FOR MAINLINE
         BCR   15,LINKREG         RETURN TO MAINLINE
SMALLDSI DS    0H            DATA SET INTEGRITY SUPPORT (IEFSD541
*                            ENQS DISABLED).
         AIF   (NOT &B(2)).SHRD450
         TM    PARMCDS(CURPARM),RESERVE  IS THIS SYSTEMS REQUEST
         BC    11,COMPMAJ         NO. CHECK FOR DSI
         TM    PARMCDS(CURPARM),X'08'  IS IT RESERVE REQUEST
         BC    8,COMPMAJ          NO
         L     UCBREG,PTRUCB(CURPARM)  GET UCB PARAMETER
         L     UCBREG,0(UCBREG)   GET UCB ADDRESS
         ST    UCBREG,RBSAVUCB(CURRB)   SAVE UCB POINTER         A30097
         TM    DEVTYP-1(UCBREG),SHARED  IS THIS A SHAREABLE DEVICE
         BC    1,COMPMAJ          YES
         OI    PARMCDS(CURPARM),RESERVE  NO. CHANGE REQUEST TO SYSTEMS
COMPMAJ  DS    0H
.SHRD450 ANOP
         L     WORKREG3,PTRMAJ(TOPPARM)  GET ADDR OF MAJOR
         CLC   0(8,WORKREG3),DSIMAJ  IS DATA SET INTEGRITY ENQ'G
         BCR   7,LINKREG          NO, RETURN TO MAINLINE
         L     CURTCB,8(WORKREG3)  PICK UP TCB ADDR FOR ENQ PROC.
         BCR   15,LINKREG         RETURN TO MAINLINE
DSIMAJ   DC    CL8'SYSDSN  '
         AIF   (&B(2)).SHRD461
         AGO   .SHRD462
.SHRD460 ANOP
         TM    PARMCDS(TOPPARM),SMC     Q. IS IT MUST COMPLETE
         BC    7,SMCINPP                YES, ABEND THE TASK
***  VALID LIST, FALL THROUGH
         LR    CURPARM,TOPPARM          RESET FOR MAINLINE
         L     BASEREG,BASESET          RESET BASE REGISTER
         BC    15,12(LINKREG)           RETURN OK
.SHRD461 ANOP
ENTER    L     WORKREG2,16              POINTER TO CVT
         LA    INPUTREG,0(INPUTREG)     CLEAR HIGH ORDER BYTE
         CL    INPUTREG,CVTMZ00-CVT(WORKREG2)  TEST FOR IN CORE
         BCR   13,WORKREG1              ADDRESS IS OK
         AIF   (&B(1)).SHRD463
         B     INVALID       BAD PARAM LIST.  ABEND
         AGO   .SHRD462
.SHRD463 ANOP
INVALID  L     BASEREG,BASESET          RESET BASE REGISTER
         BCR   15,LINKREG               RETURN TO MAINLINE
BADLTH   L     BASEREG,BASESET          RESET BASE REGISTER
         BC    15,8(LINKREG)            GO TO ABEND
SMCINPP  L     BASEREG,BASESET          RESET BASE REGISTER
         BC    15,4(LINKREG)            GO TO ABEND
.SHRD462 ANOP
WDTEST   TM    WORD,X'00'               TEST FOR WORD BOUNDARY
WORD     DC    X'03'                    MASK FOR BOUNDARY TEST
         AIF   (NOT &B(1)).SHRD470
         SPACE 1
         DROP  GENREG
         USING IGC048+2,BASEREG
         SPACE 1
         SPACE 3
VALIDCHK DC    A(IEA0VL01)              EP OF VALIDITY CHECK ROUTINE
BASESET  DC    A(IGC048+2)              TO RESET BASE REGISTER
ADFREE   DC    V(RMBRANCH)              EP TO FREEMAIN
.SHRD470 ANOP                                                      SDA2
         EJECT
GETERR   LA    ABENDREG,X'80A' .   GET MAIN FAILED                1874
         BC    15,ABEND22          ABEND THE GUY                  1874
ERRX1    DS    0H            ENQ ISSUED WITH QEL ON QUEUE - CODE IS
*                            X'138'
DRRX1    LA    ABENDREG,X'130'          NO QEL PRESENT FOR A DEQ
         BC    15,ABEND2
ERRX2    DS    0H  INVALID NAME LENGTH ON ENQ - CODE IS X'238'
DRRX2    LA    ABENDREG,X'230'          INVALID NAME LENGTH ON DEQ
         BC    15,ABEND2
ERRX3    DS    0H  SMC SPECIFIED WITH KEY N. E. 0 - CODE IS X'338'
DRRX3    LA    ABENDREG,X'330'          RMC ISSUED IN PP MODE
         BC    15,ABEND2
         AIF   (&B(1)).SHRD472
CHECK    CR    WORKREG3,WORKREG1       IS ADR ABOVE LOW BOUNDARY    LCS
         BC    4,INVALID               NO - IT IS BELOW             LCS
         LTR   RE,RE                   IS LCS IN EFFECT             LCS
         BNZ   CHECK2                  YES                          LCS
CHK3     BALR  WORKREG7,BRCHECK        SO CHECK WILL PICK UP HERE   LCS
         CR    WORKREG3,WORKREG2       IS ADR BELOW HI BOUND        LCS
         BC    2,INVALID               NO                           LCS
CHK4     LA    WORKREG7,CHECK          SET SO WITH NEXT NEW ADR     LCS
         BCR   15,BRCHECK                 WILL START AT BEG SUBRTN  LCS
CHECK2   CR    WORKREG3,RE             LCS - IS ADR ABOVE LO BOUND  LCS
         BC    4,CHK3                  NO-SET SO WONT CHECK LCS HE  LCS
         BALR  WORKREG7,BRCHECK        SET SO CHECKS AGAINST LCS HI LCS
         CR    WORKREG3,RF             IS ADR BELOW HI LCS BOUND    LCS
         BC    13,CHK4                 YES-SET                      LCS
INVALID  DS    0H
.SHRD472 ANOP
ERRX4    DS    0H           BAD INPUT LIST FOR ENQ - X'438'
DRRX4    LA    ABENDREG,X'430'          INVALID PARAMETER LIST
         BC    15,ABEND2
DRRX5    LA    ABENDREG,X'530'          DEQ FOR ELEMENT NOT IN CONTROL
ABEND2   L     GENREG,RBLINK(CURRB)
         IC    ABENDREG,PSWADR+3(GENREG)  INSERT SVC CODE TO
         SLL   ABENDREG,12        DEVELOP ERRO CODE FOR ABEND
ABEND22  EQU   *                                                   1874
         ABEND (1),DUMP
         EJECT
         DS    0F
NEW      DC    AL4(IEATCBP)             ADDRESS OF NEW     * MUST BE
DISPATCH DC    AL4(IEA0DS)              ADDR OF DISPATCHER * CONTIG.
MASTER    DC   V(IEAMSTCB)      ADDRESS OF MASTER TCB
         AIF   (&B(1)).SHRD480
ADSYMCSW DC    V(DSYMCSW)
.SHRD480 ANOP
         SPACE 3
SP255    DC    X'F5000000'             GM/FM FOR SUBPOOL 245      20021
MASKFULL DC    X'FFFFFFF8'              FOR ROUNDING TO A DBL WORD
         AIF   (NOT &B(3)).TSO1005                                20021
TSDRVMSK DC    X'00007FFF'        MASK FOR TIME SHARING          20021
*                                      DRIVER INPUT REG 0.        20021
.TSO1005 ANOP                                                     20021
         AIF   (&B(1)).SHRD495
SYSMASK  DC    X'0008'       NOT DISPATCHABLE MASK
STEPMSK  DC    X'0004'                  STEP MUST COMPLETE        19054
RMCSTPMK DC    X'FFFB'                 RESET STEP MUST COMPLETE   19054
ABSVRBNM DC    X'F1C3'              ABEND IDENTIFIER              19054
RMCSYSMK DC    X'FFF7'       RESET MUST COMPLEYE MASK
.SHRD495 ANOP
GETFOUR  DC    F'4'     TEST FOR RETURN CODE FROM GETMAIN          1874
RLWKADD  DC    F'0'                ADDR RETURNED OF GM'D CORE  @JK69690
         SPACE 3
COMPNAME CLC   0(0,GENREG),MINAME(CURMIN)  EXECUTED TO COMP MINOR NAMES
MOVENAME MVC   MINAME(0,GMRETREG),0(GENREG)  EX TO MOVE MINOR NAME
LTHINST  CLI   LMINAME(CURMIN),X'00'    EXECUTED TO COMPARE MINOR
*                                       NAME LENGTHS
         AIF   (&B(1)).SHRD500
SMCINST  OI    TCBDISP(TCBREG),X'00'    FOR SETTING NON-DISPATCHABLE
RMCINST  NI    TCBDISP(TCBREG),X'00'    FOR SETTING DISPATCHABLE
         SPACE 3
EXITPSW  DC    X'FF04000000'   PSW FOR WAITING TASKS
         DC    AL3(GOEXIT)
MCOP     DC    X'FF04000000'      PSW FOR MC TASKS
         DC    AL3(OPRSMC)
         AGO   .SHRD510
.SHRD500 ANOP
TASKSWT  DC    A(IEA0DS02)             TASK SWITCH ROUTINE ADDRESS
ADREXIT  DC    X'00040000'              PSW FOR
         DC    A(EXITNORM)              WAITING TASKS
MCOP     DC    X'00040000'              PSW FOR
         DC    A(OPRSMC)                MC TCBS
.SHRD510 ANOP
         AIF   (&B(1)).SHRD999                                     REFR
ENTNQDQ  DC    V(IEAQCB01)                                         REFR
         AGO   .SHRD998                                            REFR
.SHRD999 ANOP                                                      REFR
ENTNQDQ  DC    V(IEAQCB02)                                         REFR
.SHRD998  ANOP                                                     REFR
         AIF   (&B(1)).GEN70                                      19772
IEAGENA1 EQU   *                                                  19772
         AGO   .GEN80                                             19772
.GEN70   ANOP                                                     19772
IEAQENA1 EQU   *                                                  19772
.GEN80   ANOP                                                     19772
         SPACE 2
         AIF   (NOT &B(2)).SHRDA19
RLDCB    DSECT          DCB,ECB, IOB, AND DEB USED FOR RELEASE EXCP
RLECB    DS    F                  ECB TO WAIT ON
RLIOB    DS    0F                 START OF IOB
IOBFL1   DS    X                  IOB FLAGS
IOBFL2   DS    X                  IOB FLAGS
         DS    H                  FILLER
IOBECBAD DS    F                  ADR OF ECB TO BE POSTED
         DS    2F                 FILLER
IOBSTART DS    F                  ADR OF CHANNEL PROGRAM
IOBDCBAD DS    F                  ADR OF ASSOCIATED DCB
         DS    2F                 FILLER
IOBMOD   DS    X                  MODIFIER - DEB EXTENT NUMBER
IOBSK    DS    CL4                BBCC TO SEEK TO
         DS    CL3                FILLER
DCBDEBAD DS    F                  I FLAGS AND SDR OF ASSOC. DEB
RLCCW    DS    X                  CCW OP CODE
         DS    CL3                FILLER
         DS    X                  CCW GLAGS
         DS    CL2                FILLER
         DS    X                  BYTE COUNT -END OF IOB INDICATOR
DEAPGV   DS    4F                 APPENDAGE VECTOR TABLE
DENEXT   DS    X                  NUMBER OF EXTENTS
         DS    CL3                REMAINDER OF APG VECT TABLE
DEPRIOR  DS    X                  DEB PRIORITY
         DS    X                  FILLER BYTE
DEVRET   DS    H                  APG VECT TABLE RETURN
DEPKID   DS    0X                 USERS PROT KEY AND DEB ID
DEDCBAD  DS    F                  ADR OF ASSOCIATED DCB
DEEXTSCL DS    0X                 SIZE OF EXTENTS
DEAPPAD  DS    F                  ADR OF APG VECT TABLE
DEFM     DS    X                  FILE MASK
         DS    X                  FILLER BYTE
DEUCBAD  DS    H                  ADR OF UCB
DEBB     DS    H                  BIN OF DEVICE
DESTART  DS    2H                 START CCHH OF EXTENT
DEEND    DS    2H                 END CCHH OF EXTENT
DETRKS   DS    H                  NO OF TRACKS ALLOCATED
.SHRDA19 ANOP
         AIF   (&B(1)).SHRD700                                     REFR
         IEAQCB  MFT,D                                             REFR
         AGO    .SHRD710                                           REFR
.SHRD700     ANOP                                                  REFR
         IEAQCB  MVT,D                                             REFR
.SHRD710    ANOP
*   COMMUNICATION VECTOR TABLE DEFINITION
CVT      DSECT
         CVT   SYS=MVT                                            20021
         AIF   (NOT &B(3)).TSO1010                                20021
         EJECT                                                    20021
         IKJTSCVT                                                 20021
         EJECT                                                    20021
*        JOB STEP CONTROL BLOCK                                   20021
         IEZJSCB                                                  20021
         SPACE 3                                                  20021
.TSO1010 ANOP                                                     20021
         MEND
