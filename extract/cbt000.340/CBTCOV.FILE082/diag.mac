         MACRO
         DIAG  &GETDEB=,&MOVEDEB=,&FREEDEB=,&DEBADR=,                  *
               &SYSTEST=,&GETUCB=,&MCT=,&START=,&END=,&LENGTH=,&ENTRY=
         LCLB  &X
         LCLC  &A,&B
*
*        INTERFACE      SVC 59         LEVEL 1
*                                          03/26/71
         AIF ('&GETDEB' EQ '2').DIAG1
         AIF   ('&GETDEB' EQ 'ACCESS').DIAG1A
         AIF ('&MOVEDEB' EQ '1').DIAG2
         AIF   ('&MOVEDEB' EQ 'ACCESS').DIAG2A
         AIF ('&FREEDEB' EQ '2').DIAG3
         AIF  ('&FREEDEB' EQ 'ACCESS').DIAG3A
         AIF  ('&SYSTEST' EQ 'YES').DIAG4
         AIF   ('&GETUCB' EQ 'YES').DIAG5
&X       SETB  (1)
         AGO   .MCTA
.DIAG1   ANOP
*             ISSUE GETMAIN FOR DEB
*
         LA    R1,GETDEB .        GET FUNCTION CODE
         LA    R0,DIAGPL0 .       GET PARAMETER LIST ADDRESS
         SVC   59 .               GO GETMAIN
         ST    R0,PRIDEBA .       PUT PRIMARY DEB ADDRESS IN DCB
         MVI   PRIDEBA,X'0C' .
         LA    R1,64 .            BUMP R1 TO
         AR    R0,R1 .              SECOND DEB
         ST    R0,SECDEBA .       PUT SECONDARY DEB ADDRESS IN DCB
         MVI   SECDEBA,X'0C' .
         AGO   .MEND
.DIAG1A  ANOP
*        ISSUE GETMAIN FOR ACCESS METHOD DEB
*
         LA    R1,GETDEB .        GET FUNCTION CODE
         LA    R0,DIAGPL0 .       GET PARAMETER LIST ADDRESS
         SVC   59 .
         ST    R0,CBACDEBA .      SAVE DEB ADDRESS
         AGO   .MEND
.DIAG2   ANOP
*             MOVE DEB TO PROTECTED CORE
*
         MVC   DIAGPL4+1(3),DCBDEBAD . PUT DEB ADDRESS IN PARM LIST
         LA    R1,DEBNMSUB .      PUT ADDRESS OF DEB
         ST    R1,DIAGPL0 .         WORK AREA IN PARAMETER LIST
         LA    R1,MOVEDEB .       GET FUNCTION CODE
         LA    R0,DIAGPL0 .       GET PARAMETER LIST ADDRESS
         SVC   59 .
         XC    DEBDEBAD(3),DEBDEBAD  CLEAR DEB WORKAREA QUEUE POINTER
         OI    CBTCNTF1,FREEDEB . SET FREE DEB ON TERMINATE FLAG
         AGO   .MEND
.DIAG2A  ANOP
*        MOVE ACCESS METHOD DEB TO PROTECTED CORE
*
         MVC   DIAGPL4(4),CBACDEBA .   PUT DEB ADDRESS IN PARM LIST
         LA    R1,&DEBADR .       PUT ADDRESS OF DEB
         ST    R1,DIAGPL0 .         WORK AREA IN PARAMETER LIST
         LA    R1,MOVEDEB .       GET FUNCTION CODE
         LA    R0,DIAGPL0 .       GET PARAMETER LIST ADDRESS
         SVC   59 .
         OI    CBTCNTF1,FREEDEB . SET FREE DEB ON TERMINATE FLAG
         AGO   .MEND
.DIAG3   ANOP
.DIAG3A  ANOP
*             REMOVE DEB'S FROM TASK QUEUE
*
         LA    R0,DIAGPL0 .       GET PARAMETER LIST ADDRESS
         L     R1,FREECODE .      SET FUNCTION CODE IN REG 1
         B     SVC59 .            GO EXECUTE SVC INSTRUCTION
FREECODE DS    0F .
         DC    X'00008014' .      FREEDEB FUNCTION CODE
SVC59    EQU   *
         SVC   59 .
         AGO   .MEND
.DIAG4   ANOP
*        TEST OPERATING SYSTEM TYPE
*
         L     R1,16 .            GET CVT ADDRESS
         TM    116(R1),X'10' .    IS SYSTEM MVT?
         BO    RES001 .             YES
         OI    TOTEFLG2,OSMFT .     YES: SET MFT FLAG
         B     RES002 .
RES001   EQU   *
         OI    TOTEFLG2,OSMVT .   SET MVT FLAG
RES002   EQU   *
*
         AGO   .MEND
.DIAG5   ANOP
*        FIND UCB ADDRESS GIVEN CUU ADDRESS USING UCB LOOKUP TABLE
*
         LA    R9,UCBBUF .        SET UP PARAMETER TABLE
         STM   R2,R12,SAVE1 .
         L     R3,16 .            GET CVT ADDRESS
         L     R10,36(R3) .       GET CHANNEL & CONTROL UNIT TABLE
         LH    R6,2(R9) .         GET CUU ADDRESS IN WORK REG
         LR    R8,R6 .              & ANOTHER WORK REG
         SRDL  R6,8 .             ISOLATE CHANNEL ADR IN R6
         SRL   R7,28 .            ISOLATE CONTROL UNIT ADR IN R7
         SLL   R7,1 .               & DOUBLE IT
         IC    R6,0(R10,R6) .     GET START OF TBL FOR CHANNEL ADR
         AR    R6,R7 .              INCREMENT BY CONTROL UNIT DISP
         LH    R6,0(R10,R6) .     GET TABLE START FOR CONT UNIT ADR
         N     R8,DEVMSK .        ISOLATE DEVICE ADR IN R8
         AR    R6,R6 .            DOUBLE ABLVE DISPLACEMENT
         AR    R8,R8 .            DOUBLE DEVICE ADDRESS
         AR    R8,R6 .            ADD FOR DISPLACE IN CONT UNIT TBL
         L     R10,40(R3) .       GET START OF UCB TABLE
         LH    R7,0(R10,R8) .     GET UCB ADDRESS
         N     R7,FWDMSK
         LR    R0,R7 .            PUT UCB ADDRESS IN PARAMETER REG
         L     R1,16(R7) .        GET DEVICE DESCRIPTORS
         LM    R2,R12,SAVE1 .     RESTORE REGISTERS
         AGO   .MEND
.MEND    ANOP
         AIF   ('&MCT' EQ 'YES').MCT
         MEXIT
.MCT     ANOP
         B     IMCTEND .          BRANCH AROUND THE MCT.
.MCTA    ANOP
         AIF   ('&MCT' EQ 'YES').A
         MEXIT
.A       ANOP
DEBFREE  EQU   X'14' .            FUNCTION CODE FOR FREE DEB
GETDEB   EQU   X'44'
MOVEDEB  EQU   X'48'
*
*        MODULE CONTROL TABLE
*
         DS    0F .               TABLE ALIGNMENT.
IMCT     DC    CL4'1MCT' .        TABLE IDENTITY.
.B       ANOP
         DC    XL4'00' .          NEXT MCT ADDRESS.
         DC    XL2'FFFF' .        INDICATORS.
         DC    CL2'QW' .          MODULE ID.
         AIF   (T'&LENGTH EQ 'O').C
         DC    AL2(&LENGTH) .        MODULE LENGTH.
         AGO   .H
.C       ANOP
&A       SETC  '&SYSECT'
         AIF   (T'&START EQ 'O').D
&A       SETC  '&START'
.D       ANOP
&B       SETC  'IMCTEND'
         AIF   ('&X' EQ '1').DA
&B       SETC  '0'
.DA      ANOP
         AIF   (T'&END EQ 'O').E
&B       SETC  '&END'
.E       ANOP
         DC    AL2(&B.-&A)        MODULE LENGTH.
.H       ANOP
PATCH    DC    XL114'00' .        PROGRAM MAINTENANCE AREA.
         AIF   (T'&ENTRY NE 'O').J
         DC    A(&SYSECT) .        ENTRY POINT ADDRESS.
         AGO   .K
.J       ANOP
         DC    A(&ENTRY(1)) .        ENTRY POINT ADDRESS.
         AIF   (T'&ENTRY(2) EQ 'O').K
         DC    A(&ENTRY(2)) .        SECOND ENTRY POINT ADDRESS.
.K       ANOP
         DC    A(IMCT) .           MCT ADDRESS.
         DC    XL2'00' .
         DC    CL2'QW' .           MODULE ID.
DIAGPL0  DC    A(0) .
DIAGPL4  DC    A(0) .
DIAGPL8  DC    A(0) .
IMCTEND  EQU   *
         MEND
