         MACRO                                                    20021
         IEAQLK &TSO=                                             20021
* THE MODULE IEAQLK00 WAS CONVERTED TO A PRIVATE MACRO FOR        20021
* RELEASE 20 TO ACCOMODATE THE TIME SHARING OPTION (TSO).         20021
*                                                                 20021
         LCLB  &B(1)              LOCAL SWITCHES                  20021
&B(1)    SETB  ('&TSO' EQ 'YES')                                  20021
*                                                                 20021
* SWITCH &B(1) SET TO 0 - TSO IS NOT INCLUDED                     20021
* SWITCH &B(1) SET TO 1 - TSO IS INCLUDED                         20021
*                                                                 20021
*        THIS MACRO/MODULE CONTAINS THE DESCRIPTION AND CODE FOR: 20021
*                        LINK    SVC 6       ENTER AT IGC006
*                        XCTL    SVC 7       ENTER AT IGC007
*                        LOAD    SVC 8       ENTER AT IGC008
*                        DELETE  SVC 9       ENTER AT IGC009
*                        SYNCH   SVC 12      ENTER AT IGC012
*        THE SERVICE ROUTINES ABOVE RECEIVE CONTROL FROM THE SVC FIRST
*        LEVEL INTERRUPT HANDLER. EACH ROUTINE IS ENTERED DISABLED, AND
*        REMAINS DISABLED IN MOST SECTIONS OF CODE EXECUTED IN THIS
*        MODULE. THE MODULE IS REENTRABLE AT THE FOLLOWING LOCATIONS:
*                        BRANCH TO IECPBLDL  (BLDL ROUTINE)
*                        BRANCH TO IEWMSEPT  (PROGRAM FETCH)
*                        BRANCH TO IEA0DS    (TASK DISPATCHER)
*                        BRANCH TO IEAQTR03  (TRANSIENT AREA HANDLER)
*                        SVC TO TTSAVE       (TESTRAN)
*                        LOAD  IEWSZOVR      (OVERLAY SUPERVISOR)
*                        CONTROL IS RELINQUISHED VIA EXIT (SVC 3)
*                        CONTROL IS RELINQUISHED VIA ABEND (SVC 13)
*                        INSTRUCTIONS EXECUTED WHILE ENABLED.
*
*        THE MODULE IS NOT REENTRABLE OVER:
*                        GETMAIN        SUBSET ONLY
*                        FREEMAIN       SUBSET ONLY
*                        BRANCH TO IEA0DS02    (TEST FOR TASK SWITCH)
*        ADDITIONALLY  CODE IS INCLUDED TO :
*                        PERFORM LINK FUNCTION FOR ATTACH.
*                                            ENTER AT IEAQCS01
*                        RESTART A REQUEST THROUGH LINK
*                                            ENTER AT IEAQCS02=CDCONTRL
*                        START NEXT REQUEST ON SERIALLY REUSABLE PGM.
*                                            ENTER AT IEAQCS03=CDEPILOG
*
*        ERROR CODES RETURNED IN THIS MODULE :
*              106  FETCH ERROR
*                    GR15=C - INVALID SCATTER INFORMATION
*                         D - INVALID RECORD TYPE
*                         E - INVALID ADDRESS
*                         F - I/O ERROR
*              207  NOT RETURNED IN VMS OR RVMS
*              308  NOT RETURNED IN VMS OR RVMS
*              406  ATTACH,LINK,XCTL TO LOADABLE ONLY MODULE
*              506  NOT RETURNED IN VMS OR RVMS
*              606  NOT RETURNED IN VMS OR RVMS
*              706  MODULE FLAGGED NOT EXECUTABLE BY LIKAGE EDITOR
*              806  BLDL ERROR
*                    GR15=4 - MODULE NOT FOUND ON PDS
*                         8 - I/O ERROR
*              906  COUNT ON MODULE EXCEEDS 255
*              A06  INTERLOCK DETECTED IN USING SERIALLY REUS MODULE
               SPACE 3
*ROUTINE NAME            IGC006    LINK SERVICE ROUTINE
*
*
*
*FUNCTIONS             1.PERFORM THE LINKAGE TO THE MODULE WHOSE ENTRY
*                        POINT NAME HAS BEEN SPECIFIED IN THE MACRO-
*                        INSTRUCTION LINK.
*
*                      2.IN PERFORMING THE LINKAGE A
*                        SPECIFIC ORDER IS FOLLOWED IN  SEARCHING FOR
*                        AND DETERMINING THE LOAD MODULE TO WHICH
*                        LINKAGE IS DESIRED.
*
*                        A. THE CONTENTS DIRECTORY ENTRIES FOR LOAD
*                           MODULES CONTAINED IN THE JOB PACK AREA
*                           ARE SEARCHED FOR AN ENTRY CONTAINING THE
*                           SPECIFIED ENTRY POINT NAME.
*
*                        B. IF THE DCB OPERAND WAS WRITTEN IN THE MACRO
*                           INSTRUCTION, THE SPECIFIED LIBRARY IS
*                           SEARCHED.
*                        C. IF THE DCB OPERAND WAS OMITTED IN THE MACRO
*                           INSTRUCTION, THE JOB LIBRARIES FOR    20021
*                           ASCENDING ORIGINATING TCB'S (IF JOB   20021
*                           LIBS EXIST) ARE SEARCHED UNTIL THE    20021
*                           JOBSTEP TCB'S JOBLIB IS SEARCHED.     20021
*                        D. THE CONTENTS DIRECTORY ENTRIES FOR LOAD
*                           MODULES CONTAINED IN THE LINK PACK AREA ARE
*                           SEARCHED FOR AN ENTRY CONTAINING THE
*                           SPECIFIED ENTRY POINT NAME.
*
*                        E. IF TIME SHARING IS ACTIVE THE CONTENTS20021
*                           DIRECTORY ENTRIES FOR LOAD MODULES    20021
*                           CONTAINED IN THE TIME SHARING LINK    20021
*                           PACK AREA ARE SEARCHED FOR AN ENTRY   20021
*                           CONTAINING THE SPECIFIED ENTRY NAME   20021
*                                                                 20021
*                        F. THE LINK LIBRARY IS SEARCHED.         20021
*
*                        IF THE DE OPERAND,INSTEAD OF THE EP OR EPLOC
*                        OPERAND, WAS WRITTEN IN THE MACRO INSTRUCTION,
*                        THE CONTENTS DIRECTORY AND THE LIBRARIES ARE
*                        SEARCHED AS FOLLOWS
*
*                        A. THE CONTENTS DIRECTORY ENTRIES FOR LOAD
*                           MODULES CONTAINED IN THE JOB PACK AREA
*                           ARE SEARCHED.
*
*                        B. IF THE SPECIFIED DIRECTORY ENTRY IS FOR A
*                           LOAD MODULE CONTAINED IN THE LINK LIBRARY.
*                           THE CONTENTS DIRECTORY ENTRIES FOR THE
*                           LINK PACK AREA ARE SEARCHED.
*
*                        C. IF THE DCB OPERAND WAS WRITTEN THE LOAD
*                           MODULE IS FETCHED FROM THE LIBRARY IT
*                           SPECIFIES.
*
*                        D. IF THE DCB OPERAND WAS OMITTED THE 'A-BYTE'
*                           IN THE DIRECTORY ENTRY WILL INDICATE
*                           WHETHER THE JOBLIB OR LINKLIB DCB SHOULD BE
*                           USED TO FETCH THE MODULE.
*                      3.IN PERFORMING THE LINKAGE THE FOLLOWING WILL
*                        OCCUR'
*
*                        A PROGRAM ROUTING BLOCK (PRB) WILL BE CREATED.
*                        THE FOLLOWING FIELDS WILL BE SET:
*                           RBSIZE   - 4 DOUBLE WORDS
*                           RBSTAB   - ALL ZERO EXCEPT
*                            RBTCBNXT- SET ONLY IN  FIRST PRB.OFF TCB
*                            RBFDYN  - ALWAYS '1'
*                           RBCDE    - POINTER TO CONTENTS DIRECTORY
*                                      ENTRY
*                           RBOPSW   - SYSTEM MASK,PROTECTION KEY,
*                                      PROBLEM STATE,PROGRAM MASK, ALL
*                                      ARE PROPOGATED FROM PREVIOUS
*                                      LINKAGE FOR LINK,LOAD AND XCTL.
*                                      FOR ATTACH, KEY AND STATE ARE
*                                      TCB DEFINED, MASKS SET ENABLED.
*                           RBPGMQ   - WILL CONTAIN A QUEUE POINTER,FOR
*                                      SERIALLY REUSABLE ROUTINES
*
*                           RBWCF    - ZERO
*                           RBLINK   - CHAIN FIELD THRU WHICH PRB IS
*                                      TIED TO THE TCB. IF RBTCBNXT IS
*                                      1 THIS IS TCB ADDRESS.
*
*                        A CONTENTS DIRECTORY ENTRY WILL BE CONSTRUCTED
*                        IF THE REQUIRED LOAD MODULE WAS NOT IN MAIN
*                        STORAGE OR DID NOT HAVE REUSABLE ATTRIBUTES
*
*                        WHEN A LOAD MODULE IS LOADED INTO MAIN STORAGE
*                        AN ENTRY POINT NAME IS PLACED IN THE CONTENTS
*                        DIRECTORY,AND ITS ATTRIBUTES ARE EXAMINED.
*                        OF INTEREST ARE THE FOLLOWING ATTRIBUTES:
*
*                        REUSABILITY -  TO ESTABLISH HOW SUBSEQUENT
*                        REQUESTS FOR THE SAME MODULE MAY BE SATISFIED
*
*                        LIBRARY SOURCE - TO DETECT LINK LIBRARY MODULE
*                        THAT ARE REENTRABLE  AND USE THEM ACROSS JOB
*                        STEPS.
*
*                        OVERLAY PROGRAM-TO DETECT THAT A ROOT SEGMENT
*                        HAS BEEN LOADED, AND BRING OVERLAY SUPERVISOR
*                        INTO PLAY.
*
*                        IN TEST - DETECT A MODULE RUNNING WITH TESTRAN
*                        AND BRING TESTRAN INTO PLAY.
*                                                                 20021
*                        IF TIME SHARING IS ACTIVE,TESTRAN        20021
*                        SHOULD BE BROUGHT INTO PLAY WHETHER      20021
*                        OR NOT THE TEST ATTRIBUTE IS INDICATED   20021
*                        IN THE DIRECTORY.                        20021
*                                                                 20021
*                        ALIAS  - DETECT  THAT A MODULE HAS MORE  THAN
*                                 ONE NAME AND POSSIBLY MORE THAN ONE
*                                 ENTRY POINT. AVOID HAVING THIS TYPE
*                                 MODULE MORE THAN ONCE IF REUSABLE.
*
*                      4.FETCHING MODULES INTO ONE OF TWO PACK AREAS
*                        WILL BE DONE ACCORDING TO ATTRIBUTES REENTRANT
*                        MODULES FROM LINKLIB WILL BE PLACED IN THE
*                        LINK PACK AREA. ALL OTHERS WILL BE PUT IN THE
*                        JOB PACK AREA.
*
*
*                        AN ADDITION TO THE LINK PACK AREA  WILL BE
*                        REFLECTED IN THE LINK PACK AREA CONTROL QUEUE,
*                        WHICH IS A COLLECTION  OF  CONTENTS DIRECTORY
*                        ENTRIES DESCRIBING ALL LOAD MODULES IN THE
*                        LINK PACK AREA .'THE LIST ORIGIN FOR THE LPACQ
*                        IS POINTED TO BY THE CVT.
*                        AN ADDITION TO THE JOB PACK AREA WILL BE
*                        REFLECTED IN THE JOB PACK AREA CONTROL QUEUE,
*                        WHICH IS A  COLLECTION OF CONTENTS DIRECTORY
*                        ENTRIES  DESCRIBING ALL LOAD MODULES IN THIS
*                        JOB  PACK AREA.  THE LIST ORIGIN FOR THE JPACQ
*                        IS IN THE JOB STEP TCB.
*                      5.SHARING  OF LOAD MODULES IN ACCORDANCE WITH
*                        REUSABILITY ATTRIBUTES IS ACCOMPLISHED IN THE
*                        FOLLOWING  MANNER.
*
*                        REENTRABLE FROM LINK LIBRARY - A SINGLE COPY
*                        IN THE LINK PACK AREA MAY BE USED BY ALL TASKS
*                        OF ALL JOB STEPS.
*
*                        REENTRABLE FROM JOBLIB OR PRIVATE LIBRARY - A
*                        SINGLE COPY IN THE JOB PACK AREA MAY BE USED
*                        BY ALL TASKS OF THIS JOB STEP.
*
*                        SERIALLY REUSABLE FROM ANY LIBRARY - A SINGLE
*                        COPY IN THE JOB PACK AREA MAY BE USED BY ALL
*                        TASKS OF THIS JOB STEP. THE USE IS SERIALIZED
*                        BY QUEUEING THE REQUESTS BY PRIORITY.
*
*                        NOT REUSABLE FROM ANY LIBRARY - EVERY LINKAGE
*                        REQUIRES AN UNUSED COPY.
*ENTRY POINT NAMES    1. IGC006- SVC LINK ENTRY POINT
*
*                     2. IEAQCS01 - ENTRY POINT FOR ATTACH
*                     3. IEAQCS02 - ENTRY POINT FOR CDCONTRL TO START
*                        A REQUEST THROUGH MAINLINE LINK.
*                     4. IEAQCS03 - ENTRY POINT TO CDEPILOG  TO START
*                        A QUEUED REQUEST THROUGH A SERIALLY REUSABLE
*                        MODULE
*                        THIS ADDRESS  IS INSERTED INTO THE PSW OF
*                        THE NEWLY ATTACH SUBTASK. WHEN THE SUBRASK IS
*                        DISPATCHED IT EFFECTIVELY ENTERS LINK.
*
*CONTAINED IN MODULE     IEAQCS00 - CONTENTS SUPERVISOR MODULES.
*
*ATTRIBUTES              RESIDENT, REENTRANT, SUPERVISOR STATE,
*                        TYPE 2 SVC ROUTINE.
*
*APPLICABILITY           OPTION 4 SYSTEM ONLY
*
*EXTERNAL REFERENCES     IEATCBP - LOCATIONS OLD AND NEW
*                        IEA0DS02  BRANCH ENTRY TO TASK SWITCH TEST
*                                  ROUTINE
*                        IEA0DS    BRANCH ENTRY TO DISPATCHER
*                        IEWMSEPT  ENTRY POINT  TO PROGRAM  FETCH
*                        IEFLINK   LINK LIBRARY OPENED DCB
*                        IEASVDCB  SVC  LIBRARY OPENED DCB
*                        IECPBLDL  BRANCH ENTRY TO BLDL
*                        IEAQLCT   ADDRESS OF  LIST ORIGIN FOR  LPACQ
*SVCS USED               GETMAIN
*                        FREEMAIN
*                        ABEND
*                        LOAD
*                        TTSAV
*INPUT                   ADDRESS OF PARAMETER LIST  IN  REGISTER 15.
*                        PARAMETER  LIST  FOLLOWS  THIS FORMAT
*                              AL1(FLAG)      FLAG EQUALS X'80' FOR DE
*                                             FORM OF MACRO , IS X'00'
*                                             FOR  EP AND EPLOC.
*                              AL3(ADDR1)     ADDRESS OF ENTRY POINT
*                                             NAME OR DE, FLAG DENOTES
*                                             WHICH.
*                              AL2(ADDR2)     ADDRESS OF DCB. MAY BE
*                                           ZERO.  IN LCS SUPPORTED
*                                           SYSTEMS, HI BYTE CONTAINS
*                                           THE HIERARCHY ID REQUESTED
*                                                   VALUE  00= NO HIER
*                                                          01= HIER 0
*                                                          02= HIER 1
*
*OUTPUT                  LINKAGE  ASSISTED.
*                              REGISTER 14 - RETURN  TO SVC 3  SET  UP
*                              REGISTER 15 - ENTRY POINT ADDRESS SET UP
*                              REGISTER 0  - VOLATILE
*                              REGISTERS 1-13  TRANSPARENT
*
*ENTRY POINTS         1.IGC006 -LINK SVC ROUTINE
*                        ENTERED BY THE SVC FLIH BY AN LPSW
*                        PSW MUST BE DISABLED FOR ALL MSKABLE INTRUPTS.
*                        EXCEPT MACHINE CHECK, IN SUPERVISOR MODE, HAVE
*                        SUPERVISOR PROTECT KEY OF 0.
*
*                      I. CDADVANS-ENTRY COMMON MAINLINE FOR LOAD
*                                    XCTL, AND ATTACH.
*
*                                    UPON ENTRY PSW MUST IDENTICAL IN
*                                    FORMAT  FOR ENTRY AT IGC006
*
*                                    REGISTERS 9 AND 10  CONTAIN THE
*                                    DOUBLE WORD  OF PARAMETERS PASSED.
*
*                        THE REGISTERS ARE:
*                                0,1,2,6-15   SAME AS WHEN SVC ISSUED
*                                0,1,AND 15   MAY HAVE BEEN CHANGED BY
*                                             MACRO EXPANSION CODE.
*                                3,4,5        CVT, TCB, RB RESPECTIVELY
*
*                     3. IEAQCS01   - ENTRY FROM ATTACH
*                                     INPUT REQUIREMENTS ARE;
*                                  A. REGISTER ZERO IS ADDRESS OF NAME
*                                     OR DE SUPPLIED IN MACRO.
*                                  B. REGISTER ZERO IS COMPLIMETED IF
*                                     DE IS GIVEN.
*                                  C. REGISTER ONE IS DCB PARAMETER
*                                  D. SVRB REGISTERS 1-13 ARE NOT
*                                     ALTERED OVER ATTACH PGM.
*                                  E. SVRB REGISTERS SLOTS FOR 14 & 15
*                                     TOGETHER WITH THE EXTENDED SAVE
*                                     AREA CONTAIN THE 54 BYTE DE IF
*                                     ONE IS GIVEN, OR THE  8 BYTE
*                                     NAME THAT IS GIVEN.
*                     4. IEAQCS02   - ENTRY TO CDCONTRL TO RESTART
*                                     A REQUEST THAT WAS QUEUED
*                                     REGISTERS HAVE NOT BEEN ALTERED
*                                     WHILE THE SVRB WAS QUEUED. THE
*                                     REGISTER CONTENTS EXPECTED AS
*                                     INPUT HAVE BEEN SET BY THE LINK
*                                     ROUTINE PRIOR TO ENQUEUEING THE
*                                     SVRB. THEY ARE:
*                                     3,4,5,  CVT,TCB,RB
*                                     6, CONTAINS WORK AREA ADDRESS;
*                                        IF ZERO NO WORK AREA ACQUIRED.
*                                     7. BASE ADDRESS EQUAL TO CDLKBASE
*                                     8. PACK AREA LIST ORIGIN ADDRESS
*                                        EITHER JPALQ OR LPACQ.
*                                     9,10  NAME AND DCB REGISTERS
*                                           REGISTER 10  IS ZERO OR
*                                           NEGATIVE IF DCB CHECKING
*                                           NOT COMPLETED.
*                                           REGISTER  9  CONTAINS A
*                                           HIGH ORDER BIT IF DE IS
*                                           PRESENT.
*                                     OTHERS REGISTERS NOT USED AS
*                                     INPUT.
*
*                     5. IEAQCS03   - ENTRY TO CDEPILOG - TO DEQUEUE
*                                     AN SVRB  ON A SERIALLY REUSABLE
*                                     MODULE.  REGISTERS ARE UNCHANGED
*                                     WHILE ENQUEUED. REGISTER CONTENTS
*                                     HAVE BEEN SET BY LINK PRIOR TO
*                                     ENQUEUEING. THE REQUIRED SETTINGS
*                                     INCLUDES REGISTERS 3-10 DESCRIBED
*                                     FOR IEAQCS02,PLUS:
*                                     11, CDENTRY ADDRESS OF MINOR
*                                         ENTRY
*                                     12, CDENTRY ADDRESS OF MAJOR
*                                         ENTRY
*                                     REGS 11 & 12 ARE  EQUAL IF  THE
*                                     CDENTRY ADDRESSED BY 11 IS NOT
*                                     A MINOR.
*EXIT POINTS           1.TO THE LOAD MODULE TO WHICH LINKAGE WAS
*                        REQUESTED VIA A BRANCH REGISTER 15
*                        THE PSW LEFT HALF 5 BYTES WILL BE PROPOGATED
*                        FROM LINKOR TO LINKEE.
*                        REGISTER 14  WILL CONTAIN  THE ADDRESS OF THE
*                        SVC EXIT INSTRUCTION.
*                        REGISTER 15  WILL CONTAIN  THE ENTRY POINT
*                        ADDRESS
*                        REGS 1-13 ARE TRANSPARRENT OVER THE SERVICE
*                        ROUTINE.
*                        REGISTER  0 IS VOLATILE  OVER SERVICE ROUTINE.
*
*                      2. TO DISPATCHER IF A REQUEST HAS BEEN QUEUED
*                      3. SVC TO TESTRAN INTERPRETER SAVE ROUTINE.
*                         PARAMETERS ARE
*                             REG. 1  COMPLIMENTED ADDRESS OF DCB
*                             REG. 11 ADDRESS OF BLDL ENTRY
*                             REG. 12 ADDRESS OF EXTENT LIST
*                         THE TESTRAN SAVE ROUTINE GETS MAIN STORAGE
*                         AND COPIES THE DCB AND DEB USED BY PROGRAM
*                         FETCH, OPENS A DCB  FOR OUTPUT, AND COPIES
*                         OTHER INFORMATION  IT NEEDS LATER.
*                      4. SUBROUTINE EXIT TO TASK SWITCH TEST ROUTINE.
*                         IEA0DS02 -  PARAMETER  INPUT IS;
*                             REG  10  TCB ADDRESS
*                             REG  11  ENTRY POINT OF SUBROUTINE
*                             REG  14  RETURN REGISTER
*                         THE TASK SWITCH ROUTINE EXAMINES THE TCB
*                         ADDRESS TO DETERMINE
*                          A. IS IT HIGHER PRIORITY THAN NEXT
*                          DISPATCHABLE TASK.
*                          B. IS IT OF EQUAL PRIORITY AND HIGHER ON THE
*                             READY LIST  THAN THE NEXT DISPATCHABLE
*                          TASK. NEXT DISPATCHABLE TASK IS ADDRESSED BY
*                          NEW, EXCEPT IF NEW = 0 WHERE IT IS ADDRESSED
*                          BY OLD.
*                          IF EITHER A OR B IS TRUE  THE SUBROUTINE
*                          WILL REPLACE NEW WITH THE SUPPLIED TCB ADDR.
*                         THIS ROUTINE WILL DETERMINE WHETHER A TASK IS
*                         OF HIGHER OR LOWER PRIORITY THAN THE PRIORITY
*                         LEVEL AT WHICH THE DISPATCHER WILL EXAMINE
*                         TASK DISPATCHABILITY WHEN NEXT ENTERED. IF
*                         THE GIVEN TASK IS OF HIGHER PRIORITY, ITS TCB
*                         ADDRESS WILL BE PLACED IN IEATCBP,THUS MAKING
*                         IT THE 1ST TASK EXAMINED BY THE DISPATCHER.
*                         IF THE GIVEN TASK IS OF LOWER PRIORITY, NO
*                         ALTERATION IS MADE TO IEATCBP.
*
*ERROR EXIT POINTS     1.ABEND  - TO TERMINATE A TASK
*                        ERROR CODES  - TO BE DEFINED.
*TABLES AND CONTROL    1. LPACQ-SECTION OF CONTENTS DIRECTORY HAVING
*BLOCKS REFERENCED       ENTRIES UNIQUE TO LINK PACK AREA.
*
*                      2. JPACQ-SECTION OF CONTENTS DIRECTRY HAVING
*                        ENTRIES UNIQUE TO JOB  PACK AREA.
*                                                                 20021
*                      3. TSLPA - SECTION OF CONTENTS DIRECTORY   20021
*                         HAVING ENTRIES UNIQUE TO THE TIME       20021
*                         SHARING LINK PACK AREA.                 20021
*                                                                 20021
*                      4. DIRECTORY ENTRY - AN ENTRY FROM THE DIRECTORY
*                        OF A PARTITIONED DATASET. CONTAINS ABSOLUTE
*                        ADDRESS OF LOAD MODULE ON EXTERNAL STORAGE,AND
*                        SUFFICIENT INFORMATION TO FETCH A MODULE.
*
*                      5. TCB - TASK CONTROL BLOCK-DRIVES A TASK  20021
*
*                      6. SVRB - SUPERVISOR ROUTING BLOCK-DRIVES A20021
*                        TYPE 2  SVC  ROUTINE
*
*                      7. PRB - PROGRAM ROUTING BLOCK-DRIVES A    20021
*                         PROBLEM PROGRAM ROUTINE                 20021
*                                                                 20021
*                      8. CVT - COMMUNICATIONS VECTOR TABLE       20021
*                                                                 20021
*                      9.TSCVT - TIME SHARING CVT                 20021
          EJECT
*        CONTENTS DIRECTORY ENTRY MODEL   24 BYTE  LENGTH
*
*
*              *****************************************
*              *        *                              *
*            0 *  ATTR  *       CHAIN POINTER          *
*              *        *                              *
*              *****************************************
*              *        *                              *
*            4 * ROLL CT*       RB  POINTER            *
*              *        *                              *
*              *****************************************
*              *                                       *
*            8 *           PROGRAM                     *
*              *                                       *
*              *             NAME                      *
*              *                                       *
*              *****************************************
*              *        *                              *
*          16  * U/R CT *       ENTRY POINT            *
*              *        *                              *
*              *****************************************
*              *        *                              *
*          20  * ATTR2  *  EXT LIST OR MAJOR ENTRY PTR *
*              *        *                              *
*              *****************************************
*
*
*
*
*
*
*
*
*LIST ORIGINS,TABLES
*AND CONTROL BLOCKS
*INCLUDED                NONE
*RESTRICTIONS ON
*USE OF ROUTINE          NONE
*
*NOTES                   NONE
         EJECT
*        *********************************************
*DE      *                 8-BYTES                   *
*        *  MEMBER NAME   -  ON PARTITIONED DATA SET *
*        *      MAY BE AN ALIAS IF ALIAS FLAG IN     *
*        *      C-BYTE = 1    (8 CHARACTERS LENGTH)  *
*        *                                           *
*        *********************************************
*DE+8    *            3 BYTES             *  1-BYTE  *
*        *  TTR OF FIRST RECORD OF PDS    * CONCATEN *
*        *                                * ATION -  *
*        *                                * NUMBER-  *
*        *                                *          *
*        *********************************************
*DE+12   *   1 BYTE *   1 BYTE *      3 BYTES        *
*        *  Z-BYTE  *  C-BYTE  *  TTR OF FIRST TEXT  *
*        *   SEE    *   SEE    *                     *
*        *   BELOW  *   BELOW  *             --- CONT*
*        *          *          *                     *
*        *********************************************
*DE+16   *          *   1 BYTE *      3 BYTES        *
*        *-----     *  ZERO    * TTR OF NOTE LIST OR *
*        *  RECORD  *          * SCATTER TRANSLATION *
*        *          *          *             --- CONT*
*        *          *          *                     *
*        *********************************************
*DE+20   *          *  1 BYTE  *     2 BYTES         *
*        *-----     * ZERO OR  * ATTRIBUTES          *
*        *  TABLE   * NOTE     *    SEE BELOW        *
*        *          * LIST#    *                     *
*        *          *          *                     *
*        *********************************************
*DE+24   *          3 BYTES               * 2 BYTES  *
*        *  TOTAL CONIGUOUS MAIN STORAGE  *  LENGTH  *
*        *   REQUIRED FOR MODULE          *  OF 1ST  *
*        *                                *   ---CONT*
*        *                                *          *
*        *********************************************
*DE+28   *          *       3 BYTES                  *
*        *-----     *    ENTRY  POINT  ADDRESS       *
*        *  TEXT    *                                *
*        *  RECORD  *                                *
*        *          *                                *
*        *********************************************
*DE+32   *       3 BYTES                  *
*        *  ORIGIN OF FIRST TEXT RECORD   *
*        *                                *
*        *                                *
*        *                                *
*        **********************************
          EJECT
*                                         ************
*                                         *   2 BYTES*
*                 FOLLOWING BLOCK         * NUMBER   *
*                 PRESENT ONLY IF         * OF BYTES *
*                 SCATTER FLAG SET        *  --- CONT*
*                                         *          *
*        *********************************************
*DE+36   *          *       2 BYTES       *  2 BYTES *
*        *-----  IN *  NUMBER OF BYTES IN * ESDID OF *
*        *  SCATTER *    TRANSLATION      *  FIRST   *
*        *  LIST    *     TABLE           *   ---CONT*
*        *          *                     *          *
*        *********************************************
*DE+40   *          *      2  BYTES       *
*        *-----     *  ESDID OF CONTROL   *
*        *  TEXT    *  SECTION CONTAINING *
*        *  RECORD  *  ENTRY POINT        *
*        *          *                     *
*        **********************************
*
*                                         ************
*                                         *  3 BYTES *
*                 FOLLOWING BLOCK         * ENTRY    *
*                 PRESENT ONLY IF         *  POINT   *
*                 ALIAS FLAG SET          *  --- CONT*
*                                         *          *
*        *********************************************
*DE+44   *                     *     8 BYTES         *
* /36    *-----  OF            *                     *
*        *    MEMBER NAME      *   MEMBER NAME       *
*        *                     *            ---  CONT*
*        *                     *                     *
*        *********************************************
*DE+48   *                                           *
* /40    *-----     OF MAIN ENTRY POINT TO           *
*        *                                           *
*        *                                   --- CONT*
*        *                                           *
*        *********************************************
*DE+52   *                     *
* /44    *-----  LOAD MODULE   *
*        *                     *
*        *                     *
*        ***********************
         EJECT
*
*        Z-BYTE  - NORMALLY ZERO. HOWEVER IF  DCB OPERAND SUPPLIED TO
*        BLDL WAS ZERO, THIS BYTE WILL CONTAIN A  1 IF THE NAME WAS
*        FOUND ON LINKLIB, AND A 2 IF THE NAME WAS FOUND ON  JOBLIB.
*
*        C-BYTE  -  FIRST BIT     -  ALIAS INDICATOR
*                   NEXT 2 BITS   -  NUMBER OF TTR'S IN USER DATA FIELD
*                   NEXT 5 BITS   -  LENGTH OF USER DATA (HALF WORDS)
*
*        ATTRIBUTES  -
*        BYTE 1                      BYTE 2
*         REENTRABLE          X'C0'   LINKAGE EDITOR RESTRICTIONS X'80'
*         REUSABLE            X'40'   ASSIGNED ORIGIN IS ZERO     X'40'
*         OVERLAY             X'20'   ENTRY POINT IS ZERO         X'20'
*         TEST                X'10'   NO RLD ITEMS                X'10'
*         ONLY LOADABLE       X'08'   NO LINKAGE EDITING POSSIBLE X'08'
*         SCATTER FORMAT      X'04'   TESTRAN SYMBOL CARDS EXIST  X'04'
*         EXECUTABLE  X'02'  E44 LOAD MODULE      X'02'            OASR
*         NO RLD, SINGLE TXT  X'01'   REFRESHABLE  X'01'           OASR
         EJECT
         SPACE 3
IEAQLK00 START 00000                    CSECT NAME  **** SINGLE CSECT
         SPACE 2
*3125047200,326000                                                 LCS0
*3125142200-142800,234200,312400                                   MP1A
*3125229400,231800,416600                                          STAE
*184000,224600-224700                                             19472
*229000,230200,230400                                             M4207
*183400                                                           M2733
*270500-270600                                                   A32418
*173620-173740,098200                                            A32588
*218560                                                          A33248
*076500                                                           M3865
*146400-146600,148200,150400,151200-151400,022600,225800,         20472
*226400-226500,227800,072568-072736,106600-106700,126500,         20472
*161100-163400,166300,121300-121500,121900                        20472
*095500-095600                                                    M0119
*147200-147400                                                   A34566
*185200,228100                                                    M0183
*231700-232500,233800,234400                                     A26073
*202920-203190                                                   A36191
*186650-186750                                                   A36889
*143000                                                           M4254
*134000-135000,135800                                            A39418
*190900                                                          A46556
*069900-069920,074900,135900-136100,151332                        21B72
*227920                                                          A52250
         SPACE 2
         ENTRY IGC006,IGC007,IGC008,IGC009,IGC012
         ENTRY CDEPILOG,IEAQCDSR
         ENTRY IEAQCS01                 ATTACH  ROUTINE  ENTRY TO LINK
         ENTRY IEAQCS02                 CDCONTRL ENTRY POINT
         ENTRY IEAQCS03                 CDEPILOG ENTRY POINT
         EXTRN LINKDCB,SVCDCB,IEA0DS,IEATCBP
         EXTRN IECPBLDL
         EXTRN IEWMSEPT
         EXTRN IEAQTR03
         EXTRN IEAQLPAQ
         EXTRN IEA0DS02
         EXTRN CDHKEEP
         EXTRN RMBRANCH .         BRANCH ENTRY TO REGMAIN        A39418
         EJECT
WKREG0   EQU   0
R0       EQU   0
GR0      EQU   0
ZERO     EQU   0                                                  20021
ZREG     EQU   0 .                                                M0119
TASKREG  EQU   1 .                                                M0119
WKREG1   EQU   1
R1       EQU   1
GR1      EQU   1
WKREG2   EQU   2
COMREG   EQU   3
CVTREG   EQU   3
TCBREG   EQU   4
FOUR     EQU   4                                                  20021
GR5      EQU   5
RBREG    EQU   5
AREAREG  EQU   6
GR7      EQU   7
BASEREG  EQU   7
TAXRB    EQU   8
TABREG   EQU   8
PRBREG   EQU   8
GR9      EQU   9
NAMEREG  EQU   9
GR10     EQU   10
DCBREG   EQU   10
R11      EQU   11
GR11     EQU   11
CDEREG   EQU   11
TAXBASE  EQU   12
R12      EQU   12
GR12     EQU   12
CDIREG   EQU   12
TWELVE   EQU   12                                                 20021
R13      EQU   13
GR13     EQU   13
LDLREG   EQU   13
WKREG3   EQU   13
R14      EQU   14
GR14     EQU   14
SUBREG1  EQU   14
R15      EQU   15
GR15     EQU   15
SUBREG2  EQU   15
TWTYFR   EQU   24                                                 20021
CDATTRZ  EQU   0
CDCHAINZ EQU   1
CDROLLZ  EQU   4
CDRBPZ   EQU   4
CDNAMEZ  EQU   8
CDUSEZ   EQU   16
CDENTPTZ EQU   17
CDATTR2Z EQU   20
CDXLMJPZ EQU   21
*
RBTCBNXT EQU   X'80'
DEBDEBID EQU   24                                                A67748
DCBDEBAD EQU   44                  DEB POINTER                   A67748
CVTMZ0   EQU   164                 HIGHEST STORAGE ADDRESS     @SA68543
RBSTABZ  EQU   10
* APAR * 12072 * ONE INSTRUCTION INSERTED,ALSO SEE DQLOAD ROUTINE  APAR
RBCDEZ   EQU   12                                                  APAR
RBOPSWZ  EQU   16
RBPGMQZ  EQU   24
RBLINKZ  EQU   28
RBWCFZ   EQU   28
TASKLIB  EQU   40 .                TASKLIB DCB FIELD IN TCB       M1502
RBXXDSPZ EQU   RBOPSWZ+3                 USE FOR TEMPORARY PRIORITY
RBOPSWZR EQU   RBOPSWZ+4                 USE FOR RIGHT HALF PSW    MP1A
SVRB     EQU   X'C0'               FIRST TWO BITS IN RBSTAB INDICATE
*                                  SVRB
TCBJSEZ  EQU   44
NEW      EQU   0
OLD      EQU   4
REF      EQU   X'01'                                               OASR
CDEREF   EQU   X'08'              REFRESHABLE BIT FLAG             OASR
         SPACE
ANYONE   EQU   255 .                                              M1392
TLIBIND  EQU   X'87'    FLAG TO INDICATE TASKLIB PROCESSING       20021
STAISCB  EQU   X'20'    FLAG INDICATES STAI SCB                   20021
*   SYMBOLIC EQUATES FOR STANDARDS COMPLIANCE                      MP1A
SYM2RGSZ EQU   8                        SIZE IN BYTES OF TWO REGS  MP1A
SYMBEGIN EQU   0                        SYMB DISPL TO BEG OF FIELD MP1A
         EJECT
         USING TCB,TCBREG          REG.4  CONTAINS  TCB ADDRESS
         USING RB,RBREG            REG.5  CONTAINS  RB  ADDRESS
         USING PRB,PRBREG               REG 8 CONTAINS PRB ADDRESS
         USING WKAREA,AREAREG      REG.6  CONTAINS  WORK AREA ADDRESS
         USING CDLKBASE,BASEREG    REG.7  CONTAINS  BASE ADDRESS
         USING DE,NAMEREG          REG.9  CONTAINS  BLDL ENTRY ADDRESS
         USING CDENTRY,CDEREG      REG.11 CONTAINS  CDENTRY ADDRESS
         USING CDENTRYJ,CDIREG     REG.12 CONTAINS  CDENTRY ADDRESS
         SPACE 3
IGC006   DS    0D       ENTRY POINT TO LINK FROM SVC FLIH
         BALR  BASEREG,0                SET UP BASE ADDRESS
CDLKBASE LM    NAMEREG,DCBREG,0(R15)    PICK UP PARAMETERS IN TWO REGS
         LTR   NAMEREG,NAMEREG          Q. IS DE FORM OF MACRO GIVEN
CDADVANS BAL   SUBREG1,GINREGS         INITIALIZE REGISTERS
         SPACE
*BRANCH TABLE SET UP TO CHECK IF THE NAME REQUESTED IS IN THE LIST
*ADDRESSED BY TABREG, AND IF SO WHAT ARE ITS USABILITY CONDITIONS
         SPACE 2
IEAQCS02 EQU   *
         SPACE
CDCONTRL EQU   * .                                                21B72
         BAL   SUBREG1,CDSEARCH         GO TO CDSEARCH, SCAN FOR EIGHT
*                                       BYTE NAME ADDRES ED BY NAMEREG
*        CDSEARCH WILL ASSUME A BRANCH TABLE AS FOLLOWS:
*              B    ADDR1  - 8 BYTE NAME FOUND
*              B    ADDR2  - 8 BYTE NAME NOT FOUND
*        THE BRANCH TABLE OVERLAPS WITH THAT REQUIRED BY CDALLOC
         SPACE
PLUSCONT BAL   SUBREG2,CDALLOC         GO TO CDALLOC .NAME FOUND
*        CDALLOC ASSUMES BRANCH TABLE ;  SEE FORMAT IN DSECT.
         B     CDSETUP                  NOT FOUND - ISSUE BLDL
         B     CDEMERGE                 ALLOCATE  SUCCESSFUL
         B     CONTSRCH                 NOT REUSABLE - FIND ANOTHER CPY
         BAL   SUBREG1,CDMOPUP          QUEUE REQUEST - CLEAN WORK AREA
         EJECT
         SPACE
*        CDQUECTL WILL ENQUEUE A PRB OFF A CDENTRY IF (A) THE PROGRAM
*        IS CURRENTLY BEING FETCHED UNDER ANOTHER PRB, OR (B) THE
*        PROGRAM IS SERIALLY REUSABLE AND IN USE. THE QUEUE IS IN
*        DESCENDING DISPATCHING PRIORITY.  ABEND WILL BE ISSUED IF AN
*        INTERLOCK SITUATION IS DETECTED. THE TWO INSTANCES OF ABEND
*        ARE RELATED TO ASYNCHRONOUS EXIT ROUTINES THAT ISSUE LINK,
*        LOAD , XCTL TO A MODULE WHICH THE MAINLINE HAS ALSO REQUESTED
*        IF THE MODULE IS EITHER BEING LOADED OR SERIALLY REUSABLE
*        INTERLOCKS MAY OCCUR, IF NOT FOR THE ABEND.
         SPACE
* REQUESTORS QUEUED TO WAIT FOR A MODULE TO BE BROUGHT INTO CORE  20472
* ARE DEQUEUED BY THE DQLOAD SUBROUTINE.  REQUESTORS WAITING      20472
* AVAILABILITY OF A SERIALLY REUSBLE MODULE ARE DEQUEUED BY       20472
* EXIT ONE-AT-A-TIME AS THE MODULE BECOMES AVAILABLE.             20472
         SPACE
* ALL REQUESTORS ARE QUEUED IN ONE QUEUE WHICH BEGINS AT THE      20472
* MAJOR CDE.                                                      20472
         SPACE 2
CDQUECTL MVC   RBXXDSP(1),TCBDSP        SET DISPATCHING PRIORITY IN RB
         ST    TCBREG,RBOPSW+4          STORE TCB ADDRESS IN RB
         IC    WKREG1,RBCDFLGS          SAVE RBCDFLGS
         ST    CDIREG,RBCDE-1           PUT ADDR OF MAJOR INTO RB
         STC   WKREG1,RBCDFLGS          RESTORE FLAGS
         L     WKREG1,CDRBPZ(CDIREG)    START DOWN QUEUE OFF CDIREG
         SR    R13,R13                  ZERO REG 13 FOR ERROR ROUTINE
OSILATE  LR    WKREG2,WKREG1            CHECK FOR  PROPER POSITION OF
OSCULATE TM    RBSTABZ+1(WKREG1),X'80'  Q. DOES THIS RB POINT TO TCB
         BO    CHECKTCB                 A = YES ; TAKE BRANCH
         L     WKREG1,RBLINKZ(WKREG1)   A = NO , GO TO NEXT RB.
         B     OSCULATE
CHECKTCB CLC   RBOPSW+5(3),RBLINKZ+1(WKREG1)  COMPARE TCB ADDR'S
         BNE   QUECONT .               NO.CONTINUE THE QUEUEING   M1290
         TM    CDATTRJ,NIC .           Q.PARTIALLY LOADED PROG.   M1290
         BNO   NOCLEAR .               NO.CONTINUE                M1290
         XC    RBCDE(3),RBCDE .        YES.CLEAR RB CDE POINTER   M2968
*                                     CDE WILL BE FREED BY ABEND  M2968
NOCLEAR  EQU   * .                                                M1290
         LM    WKREG2,COMREG,CDNAME .  GET NAME IN REGS 2,3       M1290
         B     ERRLOCK .               ISSUE ABEND (A06)          M1290
         SPACE
QUECONT  EQU   *                                                  M1290
         L     WKREG1,RBPGMQZ(WKREG2)   PICK UP NEXT RB ADDR ON QUEUE
         LTR   WKREG1,WKREG1            Q.  CAN INSERT BE MADE HERE
         BZ    CUEIT                    A=YES   INSERT  RB ON QUEUE
         CLC   RBXXDSPZ(1,WKREG1),RBXXDSP   Q. IS PRIORITY OF RB HI'ER
         BC    10,OSILATE               A=NO, GO TO NEXT PRB
CUEIT    ST    WKREG1,RBPGMQ            READY NOW TO  QUEUE.
         ST    RBREG,RBPGMQZ(WKREG2)
CDTDXITX L     WKREG1,TCBPTRS           GIVE UP CONTROL TO DISPATCHER
         CLC   NEW+1(3,WKREG1),OLD+1(WKREG1) Q. NEW = OLD
         BNE   *+10                     A= NO  SKIP NEXT INS.
         XC    NEW(4,WKREG1),NEW(WKREG1) A= YES ZERO NEW
         OI    RBWCF,1                  SET WAIT COUNT = 1
         LM    0,1,CDNAME .            NAME OF REQUESTED MODULE   20472
*                                      WILL GO INTO TCB REGSAVE   20472
         LA    NAMEREG,TCBGRS .        POINT NAMEREG TO NAME      20472
CDTDXIT  STM   0,15,TCBGRS              SAVE  REGS IN TCB
         L     SUBREG1,TASKDISP        LOAD ADDRESS OF TASK DISPATCHER
         BR    SUBREG1                 GO TO DISPATCHER
         SPACE 2
*        ROUTINE TO INITIALIZE REGISTERS AS FOLLOWS
*        NAMEREG IS SET WITH HI ORDER FLAG , IF MACRO IS DE FORM
*        DCBREG IS MADE NEGATIVE (IF ZERO NO CHANGE OCCURS)
*        AREAREG IS ZERO'D
*        TABREG IS SET WITH ADDRESS OF JPACQ(JOB PACK AREA CONTROL Q.)
*        SVRB FLAG IN RB IS TURNED OFF ; RBTYPE IS NOW PRB
*        RBTYPE IS CHANGED TO FACILITATE RECOGNITION BY ABEND RTNS
*
*     IF IEAQLK MUST ISSUE AN SVC 13, ABEND WILL CLEAN UP THE     20472
*        CDE (POINTED TO BY THE RBCDE FIELD) AND RELATED GOTTEN   20472
*        CORE IF THE SVRB IS FLAGGED IN THE STAB FIELD AS A PRB.  20472
*        THE RELATED CORE MEANS AN EXTENT LIST, A FETCH WORK      20472
*        AREA, AND SPACE TO HOLD THE MODULE                       20472
         SPACE 2
GINREGS  BC    10,*+8                  IF NOT DE TYPE TAKE B.
         O     NAMEREG,DEFLAG          SET HI ORDER FLAG IN REGISTER
         LR    AREAREG,DCBREG          EXTRACT THE HIER ID AND     LCS0
         N     AREAREG,HIBYTE          SAVE IT. REMOVE IT FROM     LCS0
         OR    CVTREG,AREAREG          THE DCB ADDRESS REG.        LCS0
         LA    DCBREG,NEW(DCBREG)      CLEAR HIGH-ORDER BYTE       LCS0
         LNR   DCBREG,DCBREG           MAKE REGISTER NEGATIVE
         SR    AREAREG,AREAREG         ZERO OUT AREAREG
         L     TABREG,TCBITB           LOAD ADDRESS OF INITIATED TCB
         LA    TABREG,TCBJSEZ(TABREG)  ESTABLISH ADDRESS OF JPACQ
         NI    RBSTAB,255-SVRB         RBTYPE SET TO PRB
         BR    SUBREG1                 RETURN
         EJECT
         SPACE 2
IEAQCDSR EQU   *
         SPACE
CDSEARCH LR    CDEREG,TABREG            START SEARCH FROM LIST ORIGIN
*                                       OF CONTROL QUEUE SPECIFIED
         MVC   TCBGRS(SYM2RGSZ),SYMBEGIN(NAMEREG) NAME TO WD BOUND MP1A
         LM    WKREG0,WKREG1,TCBGRS     LOAD NAME INTO TWO REGSTRS MP1A
         SPACE 1
*    THE FOLLOWING INSTR. ARE ADDED TO AVOID USE OF THE BASE      M4254
*        REGISTER IN A SUBROUTINE AVAILABLE TO USERS OUTSIDE      M4254
*        OF THIS MODULE.                                          M4254
         SPACE 1
         XR    WKREG2,WKREG2 .         ZERO REGISTER              M4254
         BCTR  WKREG2,0 .              MAKE REG NEG.              M4254
         LA    WKREG2,0(WKREG2) .      CLEAR HIGH BYTE TO GET     M4254
*                                      MASK OF X'00FFFFFF'        M4254
         SPACE 1
CONTSRCH EQU   * .                LOOP STARTS HERE
         BALR  SUBREG2,0               SET UP LOOP ADDR
         L     CDEREG,CDCHAIN-1        LOAD NEXT CDENTRY
         NR    CDEREG,WKREG2           Q.IS ADDR IN REG = 0
         BZ    4(SUBREG1)              A= YES TAKE B.
         C     WKREG0,CDNAME           Q. IS FIRST HALF OF NAME EQUAL
         BCR   7,SUBREG2               A= NO ; TAKE B
* ONLY IF THE FIRST HALF OF THE NAMES ARE EQUAL WILL WE ENTER THIS
         C     WKREG1,CDNAME+4         Q. IS 2ND HALF EQUAL
         BCR   7,SUBREG2               A= NO; TAKE B
         TM    CDATTR,REN+SER          RE USABLE                 A68520
         BCR   7,SUBREG1                                       @SA74510
         TM    CDATTR,NFN              FUNCTIONAL                A68520
         BCR   7,SUBREG2               NO                        A68520
SRCH2    EQU   *                                                 A68520
         BR    SUBREG1                 BOTH NAMES EQUAL ,RETURN SUCC.
         EJECT
*ALLOCATE ROUTINE REQUESTED. TEST THE ATTRIBUTES OF THE ROUTINE, AND
*THE TYPE OF REQUEST BEING GIVEN TO RETURN ONE OF FIVE RESULTS.
*ENTRY PARAMETERS ARE:
*        CDEREG = CDENTRY  TO BE ALLOCATED
*        RBREG  = RB OF CURRENT REQUEST
*        SUBREG2= RETURN REGISTER - CONTAINING BRANCH TABLE
         SPACE
         USING ALLOC,SUBREG2
CDALLOC  LR    CDIREG,CDEREG            THE ATTRIBUTES OF THE MAJOR
*                                       ENTRY ARE NEEDED;LOAD MAJOR.
         TM    CDATTR,MIN               Q. IS THIS CDENTRY A MINOR
         BZ    *+8                      A= NO; TAKE BRANCH
         L     CDIREG,CDXLMJP-1         IF YES LOAD ADDRESS OF MAJOR
         TM    CDATTRJ,NIC              Q. IS THE LOAD MODULE IN MAIN
*                                       STORAGE; BIT IS SET WHILE FETCH
*                                       OF MODULE TAKES PLACE.
         BO    RETURN5             RET5 A= NO; MODULE NOT IN,BRANCH.
         TM    CDATTR,REN+NLR          Q. IS MODULE REENTRABLE AND
*                                       UNRESTRICTED BY LOAD-ONLY ATTR.
         BO    REENTPGM                 A= YES; TAKE BRANCH
         TM    CDATTR,SER+NLR          Q. IS MODULE SERIALLY REUSABLE&
*                                       UNRESTRICTED BY LOAD-ONLY ATTR.
         BO    REUSEPGM                 A= YES; TAKE BRANCH
         TM    CDATTR,NLR              Q. IS MODULE LOAD - ONLY
         BZ    LOADONLY                 A= YES; TAKE BRANCH
         SPACE
*        IF FLAG IS ZERO LOADABLE ONLY IS INDICATED.
*        MODULE IS NOT REUSABLE;CAN ONLY BE ALLOCATED IF LOAD MACRO
*        NOT ISSUED AND NOT PREVIOUSLY USED.
         SPACE
         TM    RBCDFLGS,LOAD            Q. IS A LOAD REQUEST PROCESSING
         BO    NOBACKUP           YES - BRANCH                    20008
         TM    CDATTR,NFN               Q. HAS THE MODULE BEEN USED
*                                       BY A PREVIOUS REQUEST
         BO    RETURN3             RET3 A= YES;  TAKE BRANCH
         OI    CDATTR,NFN               SET  PREVIOUSLY USED FLAG
         B     RETURN2             RET2 SET FLAG AND BRANCH
         SPACE
NOBACKUP EQU   *                                                  20008
         TM    CDATTR2,SPZ             Q.PGM PUT IN BY LOADER     20008
         BNO   CDSETUP                 NO.GET NEW COPY            20008
         TM    CDUSE,X'FF'             Q.USE COUNT EQUAL ZERO     20008
         BNZ   CDSETUP                 NO.TRY TO GET NEW COPY     20008
         B     REENTPGM                ALLOW THE LOAD             20008
REUSEPGM TM    RBCDFLGS,LOAD            Q. IS THIS A LOAD REQUEST
         BO    REENTPGM                 A= YES;NO TEST OF USE REQUIRED
*                                       REQUEST CAN BE FULFILLED
         L     WKREG1,CDRBPJ-1          LOAD RB POINTER FROM CDENTRY
         LA    WKREG1,0(WKREG1)         AND CHECK IF ZERO.
         LTR   WKREG1,WKREG1            Q. IS RBPOINTER = 0
         BNE   RETURN4             RET4 A= NO; TAKE BRANCH
REENTPGM NI    CDATTR2J,255-REL         INSURE MODULE NOT RELEASED
         B     RETURN2             RET2 RETURN SUCCESSFUL ALLOCATION
         SPACE
LOADONLY EQU   *
         LR    R0,R13                  SAVE REG 13
         SR    R13,R13                 ZERO REG 13 FOR ERROR ROUTINE
         TM    RBCDFLGS,LOAD           IS THIS A LOAD REQUEST
         BZ    ERRLONLY                A = NO TAKE BRANCH ; ERROR =406
         LR    R13,R0                  RESTORE REG 13
         TM    CDATTR,REN+SER          Q. IS MODULE REN OR SER
         BC    7,REENTPGM         RET2 A= EITHER REN OR SER TAKE B.
         BR    SUBREG2             RET1 ALLOCATE NOT SUCCESSFUL
         DROP  SUBREG2
*
         EJECT
         SPACE
*THIS ROUTINE PERFORMS INITIALIZATION REQUIRED TO ENTER BLDL & FETCH.
*THE FOLLOWING PRECONDITIONS ARE CHECKED AND SET.
         AIF   (NOT &B(1)).NTSO1                                  20021
*              1. TEST IS DONE TO SEE IF WE HAVE JUST SEARCHED    20021
*                 THE LPACQ. IF NO DO ITEM 2. IF YES THEN GO TO   20021
*                 SEARCH THE TIME SHARING LINK PK AREA QU (TSLPA) 20021
*                                                                 20021
*              2. TEST IS DONE TO SEE IF WE HAVE JUST SEARCHED    20021
*                 THE TSLPA. IF NO DO ITEM 3. IF YES THEN GO      20021
*                 DIRECTLY TO BUILD.                              20021
*                                                                 20021
.NTSO1   ANOP                                                     20021
*              3. THE DCB PARAMETER IS TESTED.                    20021
*                   EQUAL ZERO - JOBLIB DCB FROM TCB IS USED TO   20021
*                                DO ITEM 4. A NOT FOUND CONDITION 20021
*                                CAUSES THE JOBLIB DCB FROM THE   20021
*                                ASCENDING ORIGINATING TCB'S TO   20021
*                                BE USED TO AGAIN DO ITEM 4 UNTIL 20021
*                                THE JOBSTEP'S JOBLIB DCB HAS     20021
*                                 BEEN SEARCHED OR NO JOBLIB      20021
*                                 DCB'S EXIST                     20021
*                   NOT ZERO   - TEST IF EQUAL TO LINKLIB OR SVCLIB DCB
*                                IF YES - LOAD ADDRESS OF LPACQ AND
*                                RETURN TO CDCONTRL. DCB=LINK/SVCLIB
*                                DO ITEM 2.
*
*              4. A WORK AREA IS GOTTEN. THE PARAMETERS REQ FOR   20021
*                 BLDL ARE SET; THESE ARE  THE PREFIX TO THE  1 ITEM
*                 LIST AND THE 8 CHARACTER NAME DIRECTLY SUCCEEDING THE
*                 PREFIX, IF THE DE FORM OF THE MACRO IS GIVEN THE
*                 54 BYTE (MAX) DE IS MOVED INTO THE WORK AREA.
*
*              5. A CDENTRY IS CREATED-NOTE THAT THE CDENTRY HAS BEEN
*                 CREATED PRIOR TO THE BLDL/FETCH OPERATION  - BRINGING
*                 INTO PLAY LOGIC REQUIRED TO ENQUEUE REQUESTS FOR THE
*                 SAME MODULE DURING THE BLDL/FETCH OPERATIONS.
*                 THE FOLLOWING ARE NOW SET IN THE CDENTRY-
*                             1.ATTRIBUTES-NIC,PCT,REN,SER -THESE ARE
*                               SET TO 1. WILL BE RESET IN SUBSEQUENT
*                               ROUTINES  IF  CONDITION IS FALSE.
*                             2.RB POINTER-CURRENT RB ADDRESS.
*                             3.NAME (8 CHARACTERS)- PLACED IN CDENTRY
*                             4.ALL OTHER FIELDS ARE ZERO.
*
*              THREE FLAGS ARE TESTED WHICH ARE -
*                             1.ALI - SIGNIFIES THAT CDSETUP ENTIRELY
*                               MUST BE BYPASSED AND ALIAS HANDLING
*                               PERFORMED.
*                             2.DCBM- SIGNIFIES THAT THE DCB PARAMETER
*                               HAS BEEN CHECKED-DO NOT REPEAT CHECK
*                             3.SETM- WORK AREA HAS BEEN GOTTEN AND
*                               INITIALIZED -DO NOT REPEAT.
         SPACE 1                                                  20021
CDSETUP  EQU   *                                                  20021
         AIF   (NOT &B(1)).NTSO2                                  20021
         L     R1,CVTPTR           GET ADDRESS CVT                20021
         USING CVTSECT,R1                                         20021
         L     R1,CVTTSCVT         GET ADDRESS TSCVT              20021
         USING TSCVT,R1                                           20021
         C     TABREG,IEAQLCTA    Q. HAS LPACQ BEEN SEARCHED      20021
         BNE    CDTSLPA            NO-TEST TSLPA                  20021
         TM    TCBTSFLG,TCBTSTSK  IS THIS A TIME SHARING TASK     20021
         BZ    SATMAR        NO - BR AND BYPASS TSLPA SEARCH      20021
         LA    TABREG,TSCVTLPA       DOES A TIME SHARING LINK     20021
         B     CDCONTRL           GO TO SEARCH TSLPA              20021
         SPACE
CDTSLPA  LA    R1,TSCVTLPA         GET PTR TO CDE'S IN TSLPA      20021
         CR    TABREG,R1           HAS TSLPA BEEN SEARCHED YET    20021
         BE    SATMAR              YES-GO TO BUILD CDENTRY        20021
         DROP  R1                                                 20021
.NTSO2   ANOP                                                     20021
         LTR   DCBREG,DCBREG       HAS DCB CHECKING BEEN DONE     20021
         BP    SATMAR                  A= YES ; TAKE BRANCH
         LPR   DCBREG,DCBREG           SET REGISTER POSITIVE INDICATING
*                                      DCB CHECKING HAS BEEN DONE
         BE    GETJLB                  IF REGISTER IS ZERO LOAD JOBLIB
         C     DCBREG,SVCDCBA           Q.IS THIS SVCLIB DCB
         BE    CDFILIN+4                A=YES TAKE BRANCH
         C     DCBREG,LINKDCBA          Q.IS THIS LINKLIB DCB
         BNE   CITADE                   A=NO  TAKE BRANCH
CDFILIN  L     DCBREG,LINKDCBA          LOAD LINKLIB DCB ADDRESS.
         L     TABREG,IEAQLCTA          LOAD LPACQ ADDRESS
         B     CDCONTRL                 GO TO SEARCH OF LPACQ
GETJLB   L     DCBREG,TCBJLB            LOAD JOBLIB DCB ADDRESS
         SPACE 1                                                  20021
* COMPLEMENT DCBREG TO INDICATE TASKLIB SEARCH, IF NOT ZERO       20021
         SPACE 1                                                  20021
         LNR   DCBREG,DCBREG           Q. JOBLIB DCB EQUAL ZERO   20021
         BE    CDFILIN                 A= YES ; TAKE BRANCH
         SPACE
*              THE NEXT FOUR INSTRUCTIONS PERTAIN TO THE SPECIAL FLAG
*              SET BY BLDL TO DISTINGUISH THE JOBLIB FROM LINKLIB WHERE
*              A NULL DCB HAS BEEN PROVIDED IN THE BLDL MACRO. SEE CPS
*              FOR DETAILS OF BYTE'Z' OF LIST ENTRY.
         SPACE
CITADE   LTR   NAMEREG,NAMEREG         Q. IS DE FORM OF MACRO GIVEN
         BP    SATMAR                  A= NO  TAKE BRANCH
         TM    DEZBYTE,ANYONE .    Q.LIB COUNT = 0                M1392
         BZ    SATMAR .            YES.DCB ADDR PASSED AND        M1392
*                                      NOT THE LINKLIB DCB        M1392
         LR    TASKREG,TCBREG .    GET ADDR OF REQUESTOR'S TASK   M0119
         SR    ZREG,ZREG .                                        M0119
         IC    ZREG,DEZBYTE .      GET LIB CNT SUPPLIED BY BLDL   M0119
         BCT   ZREG,LIBLOOP .      Q.COUNT = 0, IMPLIES DE FOUND  M0119
*                                      ON SYS1.LINKLIB            M0119
         B     CDFILIN .           YES.SEARCH LPAQ AND LINKLIB    M0119
         SPACE
LIBLOOP  L     DCBREG,TASKLIB(TASKREG) GET TASKLIB DCB ADDR       M0119
         L     TASKREG,TCBMOTH(TASKREG) GET ADDR OF MOTHER TASK   M0119
         BCT   ZREG,LIBLOOP .                                     M0119
         SPACE 2
*        THE FOLLOWING ROUTINE BUILDS A CDENTRY AND HOOKS IT ONTO A
*        CONTROL QUEUUE. ALSO A WORK AREA IS GOTTEN TO BE USED FOR THE
*        BLDL AND FETCH ROUTINES THAT ARE ENTERED.
         SPACE
SATMAR   TM    RBCDE-1,WAE         Q.HAVE THE CDE AND WORK AREA   19472
*                                       BEEN ACQUIRED             19472
         BO    PRESET              YES.BRANCH                     19472
         SPACE
*    THE CODE TO FIX APAR 24804 IN RELEASE 18 HAS BEEN           A32588
*        INCORPORATED INTO THE FIX FOR APAR 32588                A32588
         SPACE
         MVC   RBSTART(8),0(NAMEREG) .  SAVE NAME ACROSS GMAIN   A32588
         LTR   NAMEREG,NAMEREG          Q.DE FORM OF MACRO       A32588
         BP    NOTDEFRM                 NO.BRANCH                A32588
         MVC   RBREGS+64(27),8(NAMEREG) SAVE COMMON DATA      BD A58501
         TM    13(NAMEREG),X'80'   ALIAS PRESENT              BD A58501
         BO    MOVALSCT            YES                        BD A58501
         TM    22(NAMEREG),X'04'   SCATTER FORMAT             BD A58501
         BZ    NOTDEFRM            NO                         BD A58501
MOVALSCT DS    0H                                             BD A58501
         MVC   RBREGS+91(19),35(NAMEREG) SAVE ALIAS/SCATTER INFO  58501
NOTDEFRM EQU   *                                                 A32588
         SPACE
*        GETMAIN FOR A CDENTRY AND INITIALIZE IT.
         SPACE
         L     R0,GETCDE
         GETMAIN R,LV=(0)
         LR    CDEREG,R1                SET UP CDEREG FOR USING VALUE
         XC    16(8,R1),16(R1)          ZERO LAST 8 BYTES IN CDENTRY
         MVC   CDNAME(8),RBSTART        INITIALIZE  CDNAME       A32588
         LTR   NAMEREG,NAMEREG .        Q.DE PASSED              A52250
         LA    NAMEREG,CDNAME .         RE-INIT NAMEREG          A52250
         BP    NAMEONLY                 BRANCH IF NOT A DE       A52250
         O     NAMEREG,DEFLAG .         SET DE FLAG              A52250
NAMEONLY EQU   * .                                               A52250
         XC    RBSTART(8),RBSTART .     ZERO OUT 1ST DWORD        M2186
         MVI   CDATTR,NIC+JPA+REN+SER+NLR INITIALIZE CDATTR
         BAL   SUBREG1,CDEADD           ADD CDENTRY TO LIST
         SPACE
*        GET A WORK AREA FOR BLDL AND FETCH
         SPACE
         L     R0,GETWORK               SET INPUT TO GETMAIN
         GETMAIN R,LV=(0)
         LR    AREAREG,R1               SET WORK AREA REGISTER AS USING
         MVC   WKPREFX(4),BLDLMASK      MOVE IN 4 BYTE PREFIX
         SPACE
*        THE FIRST 8 BYTES OF THE DIRECTORY ENTRY ARE THE NAME   A32588
*        THE FIX HAS BEEN ALTERED FOR REL 20 - PTM 0563           M0563
         SPACE
         MVC   WKNAME(8),CDNAME         MOVE NAME                 M0563
         MVC   WKNAME+8(46),RBREGS+64   MOVE DIRECTORY ENTRY      M0563
*                                       INFO TO THE WORK AREA     M0563
         ST    CDEREG,WKCDADDR          SAVE THE CDE ADDR        A32588
         ST    AREAREG,RBREGS+64       .SAVE WORK AREA ADDRESS IN RB.
*                                       EXTENDED SAVE AREA.
         OI    RBCDE-1,WAE             .SET WORK AREA ESTABLISHED FLAG
         LTR   DCBREG,DCBREG       Q. TASKLIB SEARCH IN PROCESS   20021
         BP    NOTSKLIB            NO.BRANCH                      20021
         MVI   FLAG,TLIBIND        YES.SET TASKLIB INDICATOR      20021
         LPR   DCBREG,DCBREG       INSURE DCB ADDR IS POSITIVE    20021
         ST    TCBREG,WKTCBSE      INIT TCB ADDR. IN WORKAREA     20021
         ST    DCBREG,WKDCBSE      INIT DCB ADDR. IN WORKAREA     20021
         B     SETOUT              CONTINUE                       20021
NOTSKLIB MVI   FLAG,ZERO           CLEAR TASKLIB INDICATOR        20021
         B     SETOUT
PRESET   L     CDEREG,WKCDADDR          LOAD ADDR OF CDENTRY
         BAL   SUBREG1,CDEADD           ADD CDENTRY TO JPAQ
SETOUT   EQU   *
         TM    CDATTR,MIN               Q. IS ALIAS HANDLING CURRENT
         BO    ALIASRCH                 A=A=YES; TAKE BRANCH
         LTR   NAMEREG,NAMEREG          Q. IS DE FORM OF MACRO GIVEN
         BM    DEFOUND                  A=YES; TAKE BRANCH
         EJECT
         SPACE
*FOLLOWING IS THE ROUTINE THAT SETS UP THE INTERFACE  WITH  BLDL
*SERVICE ROUTINE.
         SPACE
BUILDEL  SSM   ENABLE
         LA    GR0,WKBLDE               SUPPLY THE LIST ADDRESS ,LIST
*                                       BEGINS WITH A 1 WORD PREFIX
         LR    GR1,DCBREG               SUPPLY THE DCB ADDRESS,DCB
*                                       ADDRESS IS NEVER ZERO.
         LR    GR13,CVTREG                                         LCS0
         N     GR13,HIBYTE              PRESERVE THE HIERARCHY ID  LCS0
         OR    DCBREG,GR13              ACROSS BLDL                LCS0
         LR    GR13,AREAREG             SUPPLY WORK AREA ADDRESS
*                                       WORK AREA SIZE  = 400 BYTES ON
*                                      DOUBLE WORD BOUNDARY
         L     GR15,BLDLENTP            LOAD BRANCH ENTRY ADDRESS TO
*                                      WORD BOUNDARY
         STM   BASEREG,DCBREG,WKREGIS   BLDL SERVICE ROUTINE
         LA    GR1,0(GR1)          HI BYTE                       A67748
         L     R14,16                  CVT                       A67748
         C     GR1,CVTMZ0(R14)         COMP STORAGE              A67748
         BH    BUILDEL1            ERROR                         A67748
         CLC   DCBDEBAD+1(3,GR1),CVTMZ0+1(R14)                   A67748
         BH    BUILDEL1            ERROR                         A67748
         L     GR1,DCBDEBAD(DCBREG)                              A67748
         TM    DEBDEBID(GR1),X'0F'     TEST ID                   A67748
         LR    GR1,DCBREG              RESTORE DCBREG            A67748
         LA    GR1,0(GR1)                                        A67748
         BO    BUILDEL2                NO ERROR                  A67748
BUILDEL1 SSM   DISABLE                                           A67748
         LA    GR15,4                  INDICATE ERROR            A67748
         B     BLDLRETN                                          A67748
BUILDEL2 EQU   *                                                 A67748
         BALR  GR14,GR15                SUBROUTINE EXIT
         SPACE
*                            BLDL RETURNS WITH A CODE SET IN GR15
*                          1.GR15 = 0  SUCCESSFUL COMPLETION,THE
*                            DIRECTORY ENTRY ACQUIRED IS SIGNIFICANT.
*                          2.GR15 = 4  THE NAME COULD NOT BE FOUND ON
*                                      THE LIBRARY ADDRESSED BY DCB.
*                          3.GR15 = 8  A PERMANENT I/O ERROR DETECTED
*                                      IN ATTEMPTING OPERATION.
         SPACE
BLDLRETN LR    AREAREG,GR13             LOAD WORK AREA ADDRESS
         LM    BASEREG,DCBREG,WKREGIS   RESTORE REGISTERS
         LR    SUBREG1,DCBREG                                      LCS0
         N     SUBREG1,HIBYTE           RESTORE HIERARCHY ID       LCS0
         OR    CVTREG,SUBREG1                                      LCS0
         LA    DCBREG,NEW(DCBREG)      CLEAR HIGH-ORDER BYTE       LCS0
         LR    R13,R12             SAVE REG 12 OVER SUBRTN
         BAL   SUBREG1,RERIG           GO TO ROUTINE TO RESTORE REG ST
         B     *+4(GR15)                TEST RETURN CODE  0,4,8
         B     DEFOUND                  BLDL CODE = 0
         B     DEMISSED                 BLDL CODE = 4
         LR    R12,R13             RESTORE BLDL LIST ADDRESS
         SR    R13,R13             ZERO REG 13 FOR ERROR ROUTINE
         LM    WKREG2,COMREG,WKNAME     PUT NAME OF REQUESTED     20472
         B     ERRBLDL                 BLDL ERROR = 806
         SPACE
DEMISSED SR    R13,R13             CLEAR REG 13 FOR ERROR CODE    M0247
         C     DCBREG,LINKDCBA                                    M0247
         BNE   TRYAGAIN                 SEARCH NEXT LIBRARY       M2733
         LM    WKREG2,COMREG,WKNAME     PUT NAME OF REQUESTED     M2733
*                                            MODULE IN REGS 2,3   M2733
         B     ERRBLDL                  GO TO ISSUE 806 ABEND     M2733
         EJECT
         SPACE 2
TRYAGAIN EQU   *                                                  M2733
         BAL   R13,RETHRED        DEQUEUE CDE FROM JPAQ
         SR    R13,R13            RESET SWITCH FOR LOAD RETURN
         CLI   FLAG,TLIBIND       Q.TASKLIB SEARCH IN PROCESS     20021
         BNE   NOTSLIB1           NO.BRANCH                       20021
         SPACE 1                                                  20021
* THIS SUBROUTINE WILL PROVIDE TASKLIB DCB ADDRESS TO BLDL,       20021
* STARTING WITH THE REQUESTOR'S TCB JOBLIB DCB FIELD.             20021
* IT WILL STEP UP THE MOTHER-QUEUE UNTIL THE MODULE HAS           20021
* BEEN FOUND OR ALL TASKLIBS HAVE BEEN SEARCHED.                  20021
         SPACE 1                                                  20021
         L     R1,WKTCBSE              GET TCB FOR LIB JUST SEARC 20021
STEPUP   C     R1,TCBITB              Q.JOB STEP TCB HANDLED      20021
         BE    CDFILIN                 YES SEARCH LPAQ            20021
         L     R1,TCBMOTH(R1)           STEP UP TCB CHAIN         20021
         L     DCBREG,TCBJLBDI(R1)      NEW DCB ADDR.             20021
         C     DCBREG,WKDCBSE     Q.SAME AS LIB JUST SEARCHED     20021
         BE    STEPUP                   YES.STEP UP TCB CHAIN     20021
         SPACE 1                                                  20021
*  SINCE THE DCB ADDRESS IS PROPOGATED DOWNWARD, A ZERO ADDRESS   20021
*    MEANS THAT THERE ARE NO MORE LIBS TO SEARCH.                 20021
         SPACE 1                                                  20021
         LTR   DCBREG,DCBREG          Q.IS IT ZERO                20021
         BZ    CDFILIN                  YES.SEARCH LPAQ           20021
         ST    R1,WKTCBSE               SAVE FOR NEXT PASS        20021
         ST    DCBREG,WKDCBSE             -SAVE FOR NEXT PASS     20021
         B     SATMAR                   NO-SEARCH NEW LIB         20021
NOTSLIB1 C     DCBREG,SVCDCBA     Q. SVCLIB DCB ADDR IN USE       20021
*                                       IF SO, THE LPAQ HAS       19472
*                                       ALREADY BEEN SEARCHED     19472
         BNE   CDFILIN             NO.GO TO SEARCH LPA            19472
         L     DCBREG,LINKDCBA     PREPARE TO SEARCH LINKLIB      19472
         B     SATMAR              GO TO  BLDL                    19472
         SPACE 2
*THIS ROUTINE EXAMINES THE DE EXTRACTED BY BLDL FOR ABNORMAL CONDITIONS
*AND IF NONE EXIST WILL SET ATTRIBUTES IN THE CDENTRY AS INDICATED IN
*THE  DE. THE FOLLOWINGS FLAGS ARE TESTED IN  THIS SECTION:
*              BYTE 14 (CBYTE) - BIT INDICATING ALIAS DIRECTORY ENTRY.
*              BYTE 23 (DEATTR)- BIT INDICATING REENTRABLE LOAD MODULE
*                                BIT INDICATING SERIALLY REUSABLE MOD.
*                                BIT INDICATING 'LOAD'ABLE ONLY MODULE
*                                BIT INDICATING EXECUTABLE LOAD MODULE
         SPACE
DEFOUND  EQU   *
         SR    R13,R13                 ZERO REG 13 FOR ERROR ROUTINE
         TM    WKATTR,DEXCUT           Q. IS MODULE EXECUTABLE
         BZ    ERRXCUTE                 A=NO  GET READY TO ABEND
         TM    WKATTR,DELODY            Q. IS MODULE LOADABLE ONLY
         BZ    *+16                    A= NO  TAKE BRANCH ALLOW LOAD
         NI    CDATTR,255-NLR           SET LOADABLE ONLY FLAG IN CDE
         TM    RBCDFLGS,LOAD            Q. IS THIS A LOAD MACRO REQUEST
         BZ    ERRLONLY                 A=NO  GET READY TO ABEND
         TM    WKATTR,DEREEN            Q. IS MODULE EITHER  REENTRABLE
*                                       OR SERIALLY REUSABLE
         BO    REENDE                   A= REENTRABLE LEAVE SER+REN SET
         BM    *+8                      A= SERIALLY REUSE LEAVE SER SET
         NI    CDATTR,255-SER           A= NOT REVSABLE RESET REN+SER
         NI    CDATTR,255-REN           A= SER. REBSAVLE RESET REN
REENDE   TM    WKCBYTE,DEALIAS          Q. IS AN ALIAS DE ENTRY GIVEN
         BZ    *+12                    A= NO; TAKE BRANCH
         TM    WKATTR,DEREEN           Q. IS LOAD MODULE EITHER REEN-
*                                      TRABLE OR SERIALLY REUSABLE
*                                       INDICATING PRESCENCE OF ALIAS.
         BC    7,ALIAS1
         EJECT
         SPACE 2
*INTERFACE WITH PROGRAM FETCH IS SET UP. THE FOLLOWING IS REQUIRED:
*        R5   - DE  - DIRECTORY ENTRY EXTRACTED BY  BLDL
*              THE HIGH ORDER BYTE CONTAINS THE HIER ID IN LCS SUPPORT
*        R6   -  TRANSPARENT
*        R7   - DCB ADDRESS
*        R9   - 0
*        R10  - SPID (EITHER 251 OR 252)
*        R12  - RELOCATED ENTRY POINT PASSED  BACK
*        R13  - WORK AREA (424 BYTES ON DOUBLE WORD BOUNDARY)
*        R14  - RETURN REG
*        R15  - RETURN CODE
*        1 WORD LOCATED AT  R13 + 544
*        MODE UPON ENTRY IS FULLY ENABLED.
*FETCH WILL BUILD AN EXTENT LIST FOR WHICH CORE IS GOTTEN FROM SP=252
*THE WORD AT R13+544 WILL CONTAIN EXTENT LIST ADDRESS
*A FLAG SET IN THE HI ORDER BYTE OF THE WORD WILL INDICATE THAT  FETCH
*HAS BUILT  THE EXTENT LIST AND IS REQUESTING MAIN STORAGE FOR  THE
*MODULE. THIS STORAGE WILL HAVE TO BE FREED IN CASE OF  ABEND IN FETCH.
         SPACE 2
PGMFETCH LA    GR5,WKNAME          GR5 -LOAD DE ADDRESS, THIS HAS BEEN
*                                       EXTRACTED BY BLDL OR PASSED
*                                       DIRECTLY AS A MACRO PARAMETER
         LR    GR9,CVTREG              OBTAIN HIERARCHY ID AND IN- LCS0
         N     GR9,HIBYTE              SERT IT IN HI-ORDER BYTE    LCS0
         OR    GR5,GR9                 OF REGISTER 5               LCS0
         LNR   GR9,CDEREG               COMP R9 AS INPUT TO FETCH
         LR    WKREG1,DCBREG            SAVE DCBADDRESS
         LA    GR10,251                 SET SUBPOOL ID = 251
         AIF   (NOT &B(1)).NTSO3                                  20021
         SPACE 1                                                  20021
*  TEST IF TEST BIT FOR THE TEST COMMAND IS ON IN THE TCB IF NO   20021
*  CONTINUE. IF YES SUBPOOL 251 MUST BE USED. DO NOT TEST FOR 252.20021
         SPACE 1                                                  20021
         TM    TCBTRN,TCBTCP       IS TEST BIT ON.                20021
         BO    KETCHIT            YES BRANCH USE SUBPOOL 251      20021
.NTSO3   ANOP                                                     20021
         TM    CDATTR,REN               Q. IS MODULE REENTRABLE
         BZ    KETCHIT                  A=NO; TAKE BRANCH
         C     WKREG1,LINKDCBA          IS LINK DCB IN USE
         BE    FETCHIT                  A= YES SET UP SPID= 252
         C     WKREG1,SVCDCBA           IS SVC DCB UN USE
         BNE KETCHIT                    A= NO TAKE BRANCH
FETCHIT  LA    GR10,252                 SET SUBPOOL ID = 252
         NI    CDATTR,255-JPA           RESET JPA BIT IN CDENTRY
         SPACE
*        DETERMINE SUBPOOL ID TO PASS FETCH. IF MODULE IS REENTRABLE
*        AND FRMM EITHER LINKLIB OR SVCLIB, SUBPOOL 252 WILL BE PASSED.
*        OTHERWISE, SUBPOOL 251 IS PASSED.
         SPACE
KETCHIT  EQU   *
         LR    GR13,AREAREG        GR13 LOAD WORK AREA ADDR
         L     GR15,XFETCHEP       GR15 LOAD ENTRY POINT TO FETCH
         SSM   ENABLE                   SET SYSTEM MASK ENABLED
         LR    GR7,WKREG1          GR7  LOAD DCB ADDRESS
         BALR  GR14,GR15                GO TO PROGRAM FETCH
         BALR  BASEREG,0                ESTABLISH  BASE ADDRESSABILITY
         USING *,BASEREG
         L     BASEREG,LINKBASE         SET UP PERMANENT BASE VALUE
         USING CDLKBASE,BASEREG
         SR    R13,R13                 ZERO REG 13 FOR ERROR ROUTINE
ENABLE   EQU   *+1                      MASK OF X'FF' TO ENABLE
         LTR   GR15,GR15                Q. ANY ERRORS IN FETCHING
         BNE   ERRFETCH                FETCH ERROR = 106
         LR    SUBREG2,GR12            SAVE ENTRY POINT RETUND BY FETCH
         BAL   SUBREG1,RERIG           ROUTINE TO RESTORE REGS
         ST    SUBREG2,CDENTPT-1       STORE RELOCATED ENTRY POINT
         NI    CDATTR,255-NIC          MODULE IS IN CORE         A68608
         SPACE
*    ALL BITS IN THE CDATTR2 FIELD ARE TURNED ON AFTER FETCH     A36889
*        OF THE MODULE, BECAUSE FETCH HAS GETMAIN STORE THE      A36889
*        ADDRESS OF THE EXTENT LIST IN THE LAST WORD OF THE      A36889
*        CDE.                                                    A36889
         SPACE
         TM    WKATTR+1,REF       TEST FOR REFRESHABLE             OASR
         BC    8,*+8              NOT REFRESHABLE - BRANCH         OASR
         OI    CDATTR2,CDEREF     SET CDE REFRESHABLE BIT          OASR
         TM    WKATTR,DEOVLY       Q.MODULE IN OVERLAY FORM      A36889
         BZ    *+8                 NO.DON'T SET CDE FLAG         A36889
         OI    CDATTR2,CDOLY       SET BIT INDICATING OVERLAY    A36889
         SPACE
*THE MODULE JUST FETCHED MAY BE USING OVERLAY SUPERVISOR AND/OR TESTRAN
*IF SO BRING EITHER OR BOTH INTO PLAY. THE ATTRIBUTES OF THE DE
*INDICATE WHETHER THE MODULE IS USING EITHER OVERLAY OR TESTRAN.
         SPACE
         TM    WKATTR,DEOVLY            Q. IS MODULE IN OVERLAY
         BZ    TTRAN                    A= NO ; TAKE BRANCH
         SPACE
***  THIS CODE TESTS IF A COPY OF IEWSZOVR IS IN CORE, AND IF SO   3594
***  BYPASSES ISSUEING THE LOAD REQUEST                            3594
         SPACE
         LA    NAMEREG,OVRNAME     GET PTR TO NAME 'IEWSZOVR'      3594
         L     TABREG,TCBITB       PICK UP JPACQ ADDRESS           3594
         LA    TABREG,TCBJSE-TCB(TABREG) GET JSTCB PTR             3594
         BAL   SUBREG1,CDSEARCH    GO TO SEARCH FOR MODULE IN CORE 3594
         B     TTRANREG            IEWSZOVR IN CORE,DON'T LOAD SAME3594
         L     TABREG,IEAQLCTA .        GET ADDR OF LPAQ         A36191
         BAL   SUBREG1,CDSEARCH .       SEARCH LPAQ              A36191
         B     TTRANREG .               IN CORE, DON'T LOAD      A36191
         LR    R0,NAMEREG .             IF NOT, 'LOAD' THE       A36191
*                                       OVERLAY SUPERVISOR
         L     R1,LINKDCBA              LOAD LINK LIB DCB ADDRESS.
         LOAD  EPLOC=(0),DCB=(1)        LOAD MACRO ITERATION CAUSED
*                                       THRU THIS MODULE.
TTRANREG BAL   SUBREG1,RERIG       RELOAD REGS 11 & 12             3594
TTRAN    EQU   *                                                  20021
         AIF   (NOT &B(1)).NTSO4                                  20021
         SPACE 1                                                  20021
*  TEST IF ISSUER IS AN SVRB.IF IT IS THEN BYPASS TESTING         20021
*  BIT IN THE TCB FOR USING TESTRAN. IF ISSUER IS NOT AN SVRB,    20021
*  THEN TEST BIT IN TCB FOR TEST COMMAND. IF TEST BIT IS ON,      20021
*  TESTRAN IS TO BE USED WHETHER OR NOT THE TEST ATTRIBUTE IS     20021
*  INDICATED IN THE DIRECTORY.                                    20021
         SPACE 1                                                  20021
         L     R1,RBLINKZ(RBREG)  GET RB LINK FIELD               20021
         TM    RBSTABZ(R1),RBFTSVRB IS ISSUER AN SVRB             20021
         BO    TTSVRB             YES BYPASS TESTING BIT IN TCB   20021
         SPACE 1                                                  20021
         TM    TCBTRN,TCBTCP       IS TEST BIT ON                 20021
         BO    TESTON              YES GO TO TESTRAN WHETHER OR   20021
*                                  NOT THE TEST ATTRIBUTE IS      20021
*                                  INDICATED IN THE DIRECTORY     20021
TTSVRB   EQU   *                                                  20021
.NTSO4   ANOP                                                     20021
         TM    WKATTR,DETEST      Q. IS MODULE USING TESTRAN      20021
         BZ    OKLAHOME                 A= NO; TAKE BRANCH
         SPACE 2
***********************************************************************
*        INTERFACE WITH TESTRAN
         AIF   (NOT &B(1)).NTSO5                                  20021
TESTON   EQU   *                                                  20021
.NTSO5   ANOP                                                     20021
         L     R1,WKDCB                PICK UP DCB ADDR FROM FETCH WORK
*                                      AREA . DCB ADDR IS IN IOB .
         LNR   R1,R1                   COMPLEMENT R1
         LA    R11,WKNAME              SUPPLY ADDR OF DE IN R11    0169
         L     R12,20(R12)             SUPPLY XLIST ADDR           0169
         SVC   TTSAVE                  GO TO TESTRAN
         BAL   SUBREG1,RERIG           RELOAD REGS 11 & 12
         SPACE
TTSAVE   EQU   61
OKLAHOME NI    CDATTRJ,255-NIC         .RESET NIC FLAG IN MAJOR.
         TM    RBCDFLGS,LOAD           .LOAD REQUEST.
         BO    *+8                     .BYPASS SETT'G NFN IF YES.
         OI    CDATTR,NFN              .SET NFN FLAG.
         TM    CDATTR,MIN .            Q.ALIAS HANDLING CURRENT
         BNO   CDFOLDUP .              NO.BRANCH                  20472
         SPACE 2
*THE FUNCTION OF THE FOLLOWING ROUTINE IS TO  COMPLETE THE CDENTRY
*CREATED FOR THE MAIN NAME OF THE MODULE JUST FETCHED. THE ENTRY POINT
*TO THE  MAIN NAME MUST BE RELOCATED AND THE NOT IN CORE (NIC) FLAG
*RESET TO ZERO.
*
* IF A REQUEST IS MADE FOR A MODULE BY A MINOR NAME, AND THE      20472
* MODULE MUST BE BROUGHT INTO CORE, THE MINOR ENTRY POINT IS      20472
* RELOCATED BY FETCH.  THE RLC BIT IS TURNED ON IN THE CDATTR2    20472
* FIELD.  THIS BIT IS NOT TURNED ON IF QLK RELOCATES THE MINOR    20472
* ENTRY POINT IN THE CDFOLDUP SUBROUTINE.                         20472
* THE CDFOLDUP ROUTINE RELOCATES MINOR ENTRY POINTS IF THE        20472
* MODULE WAS INITIALLY REQUESTED BY A DIFFERENT NAME.             20472
         SPACE 2
ALIAS2   L     SUBREG1,WKMAINEP         LOAD ENTRY POINT OF MAIN NAME
         L     SUBREG2,CDXLMJPJ-1       LOAD EXTENT LIST ADDRESS
         BAL   COMREG,RELOCATE          GO TO ROUTINE TO CALCULATE
*                                       RELOCATED ENTRY POINT ADDRESS.
         ST    SUBREG1,CDENTPTJ-1       STORE RELOCATED ENTRY POINT
*                                       IN CDENTRY
         NI    CDATTR,255-NIC           RESET NIC FLAG IN MINOR CDE
         OI    CDATTR2,RLC             .SET FLAG TO INDICATE RELOCATED
*                                       MINOR BY FETCH.
         SPACE 2
* RELOCATE ENTRY POINTS OF QUEUED MINORS.
* A MODULE IS REQUESTED BY A MINOR NAME.  THE MAJOR NAME IS       20472
* FOUND TO BE IN CORE BUT THE REQUESTOR IS WAITING ON I/O.        20472
* THE REQUESTOR OF THE MINOR NAME IS QUEUED UP.  WHEN THE MAJOR   20472
* REQUESTOR REGAINS CONTROL, THE QUEUED MINOR CDE ENTRY POINTS    20472
* ARE RELOCATED HERE, AND THE QUEUED REQUESTORS ARE DEQUEUED      20472
* UNDER THE DQLOAD SUBROUTINE.                                    20472
         SPACE
CDFOLDUP DS    0H
         LR    1,12                    .LOAD MAJ CDE IN REG 1.
CD02     DS    0H
         L     1,CDCHAIN-1-CDENTRY(0,1) .GET NEXT CDE ON QUEUE.
         LA    1,0(0,1)                .ZERO HI ORDER BYTE.
         LTR   1,1                     .END OF QUEUE.
         BZ    CD01                    .BR IF YES.
         TM    CDATTR-CDENTRY(1),MIN   .IS CDE A MIN.
         BC    12,CD01                 .BR IF NOT.
         TM    CDATTR2-CDENTRY(1),RLC  Q.MINOR EP RELOC. BY FETCH 20872
         BO    CD02                    .BR IF YES.
         L     14,CDENTPT-1-CDENTRY(0,1) .GET UNRELOCATED E.P.
         L     15,CDXLMJPJ-1            GET EXTENT LIST FROM MAJOR.
         BAL   COMREG,RELOCATE          TO RELOCATE EP.
         NI    CDATTR-CDENTRY(1),255-NIC  RESET NIC FLAG IN MINOR CDE.
         ST    14,CDENTPT-1-CDENTRY(0,1)  SET RELOCATED EP IN MIN CDE.
         B     CD02
         SPACE
CD01     DS    0H
         XC    CDRBPJ(3),CDRBPJ .      ZERO OUT QUEUE HEAD       A34566
*                                           PRIOR TO DQLOAD      A34566
         LR    9,RBREG
         BAL   SUBREG2,DQLOAD
         SPACE
CDEMERGE DS    0H
         BAL   SUBREG1,CDMOPUP
         TM    RBCDFLGS,LOAD
         BO    CDLDRET
         EJECT
         SPACE
*THIS SECTION OF CODE DOES THE FOLLOWING;
*
*        1.CREATES THE 'PRB' IN WHICH THE  LINKAGE TO AND OPERATION
*          OF A PROGRAM IS RECORDED. HERE THE FOLLOWING IS DONE:
*
*           A.USING GETMAIN, 32 BYTES ARE OBTAINED FOR A PRB.     19472
*             THE FIRST 32 BYTES OF THE SVRB (CURRENTLY MARKED    19472
*             AS A PRB, DONE BY SUBROUTINE GINREGS) ARE           19472
*             DUPLICATED IN THE NEWLY CREATED PRB.                19472
*
*           B.THE SIZE FIELD WILL BE SET TO 4, INDICATING 4 DOUBLE WDS.
*
*           C.THE PRB IS QUEUED BEHIND THE SVRB SO EXIT WILL      19472
*             FREE UP THE SVRB. THE ENTRY POINT OF THE MODULE     19472
*             IS STORED INTO THE RIGHT HALF OF THE PRB'S PSW.     19472
*
*           D.THE RBCDE FIELD IS SET TO POINT TO A CDENTRY, IN SYNCH
*             THE FIELD IS SET TO ZERO.
*
*           E.A PSW IS STRUCTURED WHICH PROPOGATES THE LEFT 5 BYTES
*             FROM THE PREVIOUS LEVEL OF CONTROL(INDICATED BY AN RB).
*             IF THIS IS THE ONLY CONTROL LEVEL OF THIS TASK,THE SYSTEM
*             MASK IS SET ENABLED,AS IS THE PROGRAM MASK. THE OPERATING
*             STATE (PROBLEM OR SUPERVISOR) AND THE PROTECTION KEY ARE
*             SET ACCORDING TO THEIR VALUES IN THE TCB.FOR SVC SYNCH
*             THE PSW WILL BE STRUCTURED WITH ALL MASKS ENABLED;ALWAYS
*             IN THE PROBLEM PROGRAM STATE; AND WITH A PROTECTION KEY
*             VALUE ACQUIRED FROM THE TCB.
*
*        2.REGISTERS ARE SET UP AS FOLLOWS:                       19472
*           A.REGISTER 14 CONTAINS THE ADDRESS OF AN SVC 3        19472
*             INSTRUCTION IN THIS MODULE (IEAQLK00).              19472
*           B.REGISTER 15 CONTAINS THE ENTRY POINT OF THE         19472
*             MODULE TO GAIN CONTROL.                             19472
*           C.REGISTER 0 MAY BE ALTERED FROM THE TIME THE SVC     19472
*             WAS ISSUED (THIS IS THE CASE WITH XCTL).            19472
*           D.REGISTERS 0 AND 1 ARE ALTERED BY THE LOAD USER      19472
*             MACRO.  XCTL AND LINK MAINTAIN REGISTER 1 INTACT.   19472
*           E.REGISTERS 2-13 ARE THE SAME AS WHEN THE SVC WAS     19472
*             ISSUED.                                             19472
*
*        3.EXIT MOVES REGISTERS 2-14 INTO THE TCB AND FREES       19472
*          THE SVRB.                                              19472
*          REGISTERS 0,1, AND 15 ARE PUT INTO THE TCB             19472
*          CONTAINING THE VALUES AT THE TIME THE SVC 3 WAS        19472
*          ISSUED IN IEAQLK00.                                    19472
*
*        4.THE DISPATCHER WILL LATER DO A LOADPSW FROM THE        19472
*          NEWLY CREATED PRB TO GIVE CONTROL TO THE MODULE.       19472
         EJECT
         SPACE 2
IEAQCS03 EQU   *
         SPACE
CDEPILOG L     SUBREG1,CDENTPT-1        PICK UP ENTRY POINT ADDRESS.
         OI    CDATTR,NFN              SET NFN BIT .. IF PROGRAM
*                                      IS REENTRABLE OR SERIALLY
*                                      REUSABLE, BIT IS INSIGNIFICANT
         SPACE 2
*        THE FOLLOWING SECTION OF CODE GETS 32 BYTES OF MAIN STORAGE TO
*        CREATE  AND INITIALIZE A PRB. A PSW IS BUILT WHICH WILL BE
*        LOADED BY THE DISPATCHER TO ENTER THE ROUTINE REQUESTED. AN
*        SVC EXIT IS ISSUED WHICH CAUSES THE SVRB TO BE FREED UP, AND
*        CONTROL TO BE GIVEN TO THE PRB WHICH WAS JUST CREATED.
         SPACE 2
CDEPILOX EQU   *                        ENTRY FROM SVC SYNCH     A39418
         L     R0,RBCORE                SET INPUT TO GETMAIN FOR 32
*                                       BYTES FROM SP255
         LR    R1,R0 .            GET HIGH BIT ON IN REG 1       A39418
         L     GR15,RMBRNCHA .    GET ADDR OF REGMAIN BRANCH     A39418
         LR    PRBREG,GR14 .      SAVE EP ADDRESS
         BALR  GR14,GR15 .        GO TO GET PRB                  A39418
         LR    GR14,PRBREG .      RESTORE EP ADDRESS
         LR    PRBREG,R1                SET UP USING REGISTER
         SPACE
*        INITIALIZATION OF PRB
         SPACE
         MVC   PRBSTART(32),RBSTART     MOVE 32 BYTES FROM SVRB TO PRB
         MVI   PRBSIZE,4                SET SIZE OF PRB = 4 DOUBLE WDS.
         ST    PRBREG,RBLINK-1          POINT SVRB TO PRB; WHEN EXIT IS
*                                       ISSUED BY SVRB PRB IS STARTED.
         NI    RBSTAB+1,255-RBTCBNXT    GUARANTEE TCBNXT FLAG NOT SET.
         OI    RBSTAB,SVRB              MAKE RB RECOGNIZABLE AS SVRB.
         EJECT
         SPACE 2
*        INITIALIZE PSW WITHIN PRB FOR ENTRY TO ROUTINE
         SPACE
         ST    SUBREG1,PRBOPSW+4        STORE ENTRY POINT IN PSW
         MVC   PRBOPSW(5),FRAMPSW       MOVE 5   FORMATTED BYTES TO PSW
         L     WKREG1,TCBPIE            PICK UP PGM INTRUPT ELEM ADDR
         LTR   WKREG1,WKREG1            Q. IS THERE A PIE.
         BE    NOPIE                    A=NO ; TAKE BRANCH.
         L     WKREG1,0(WKREG1)         IF PIE IS PRESENT,GET PICA ADDR
         MVC   PRBOPSW+4(1),0(WKREG1)   MOVE PROGRAM MASK INTO PSW
NOPIE    TM    RBCDFLGS,SYNC      Q.TEST TYPE OF SVC REQUEST       MO18
         BO    SYNCTEST           IF SVC SYNCH, TAKE BRANCH        STAE
         ST    CDEREG,PRBCDE-1          OTHERWISE STORE CDENTRY ADDR IN
*                                       PRB.
         ST    PRBREG,CDRBPJ-1          ALSO STORE PRB ADDR IN CDENTRY.
         TM    RBCDFLGS,XCTL      Q.AN XCTL REQUEST                MO18
         BO    XCTLPSW            YES, TAKE BRANCH                 MO18
         L     WKREG1,PRBLINK-1         PICK UP ADDR OF PREV. CTL LEVEL
         CR    TCBREG,WKREG1            Q. DOES RB POINT TO TCB
         BE    PSWSET                   A=YES;TAKE BRANCH
         MVC   PRBOPSW(5),RBOPSWZ(WKREG1) IF PREVIOUS IS PRB, PROP, PSW
         B     SYNCROUT+6
PSWSET   TM    TCBFSM,X'80'             Q. DOES TASK OPERATE PRIVILEGED
         BZ    *+8                      A=NO; TAKE BRANCH
PRIVIL   NI    PRBOPSW+1,X'FE'         PRIVILEGED MODE OPERATION   STAE
SYNCROUT OC    PRBOPSW+1(1),TCBPKF      SET PROTECT KEY VALUE FROM TCB
         TM    TCBFLGS+2,X'10' .      STAE KEY ZERO REQUEST ?  BD M0710
         BZ    NOTKEY0 .              NO LEAVE PROTECT KEY AS IS  M0710
         NI    TCBFLGS+2,X'EF' .      RESET TCB BIT            BD M0710
         NI    PRBOPSW+1,X'0F' .      SET PSW KEY TO ZERO      BD M0710
NOTKEY0  EQU   * .
         LR    R15,SUBREG1              LOAD R15 = ENTRY POINT ADDR
         LA    R14,SVCEXIT              LOAD ADDR OF EXIT INSTRUCTION
         ST    R14,RBREGS+56            PLACE IN SVRB R14 SLOT
         LM    R0,R1,RBREGS             RESORE REGS 0 AND 1       19472
         SPACE
SVCEXIT  SVC   3                        ISSUE SVC EXIT.
         SPACE
SYNCTEST TM    TCBNSTAE,X'04'          Q. STAE REQUEST             STAE
         BZ    SYNCROUT                A=NO  TAKE BRANCH           STAE
         NI    TCBNSTAE,X'FB'          TURN OFF STAE-SUP BIT       STAE
         B     PRIVIL                  BR TO SET PRIVILEGED MODE   STAE
         SPACE
XCTLPSW  L     WKREG1,RBREGS            PICK UP WORD PLACED IN R0 SLOT
         ST    WKREG1,PRBOPSW           SET LEFT-HALF PSW
         STC   WKREG1,PRBOPSW+4         SET PROGRAM MASK
         L     WKREG1,TCBNSTAE         SCB ADDRESS                 STAE
         EJECT
         SPACE 2
STAESCB  LA    WKREG1,GR0(WKREG1)  CLEAR HI ORDER BYTE            20021
XCTLOPT  LTR   WKREG1,WKREG1           Q. SCB PRESENT              STAE
         BZ    SYNCROUT+6              A=NO  TAKE BRANCH           STAE
         TM    TWELVE(WKREG1),STAISCB  IS IT A STAI SCB           20021
         BNZ   GETSTAE            YES - GET NEXT SCB              20021
         TM    12(WKREG1),X'80'        Q. XCTL OPTION              STAE
         BZ    SYNCROUT+6              A=NO  TAKE BRANCH           STAE
         ST    PRBREG,12(WKREG1)       PLACE NEW RB ADDR IN SCB    STAE
         NI    12(WKREG1),X'7F'        SET XCTL FLAG OFF           STAE
         L     WKREG1,0(WKREG1)        UPDATE POINTER              STAE
         B     XCTLOPT                 CONTINUE SEARCH             STAE
         SPACE 1                                                  20021
GETSTAE  L     WKREG1,GR0(WKREG1) UPDATE PTR TO NEXT SCB          20021
         B     STAESCB                                            20021
         SPACE
*        AS A RESULT OF ISSUEING SVC 3  THE SVRB WILL BE FREED UP AND
*        CONTROL IS GIVEN TO THE PREVIOUS PRB. THE ROUTINE IS ENTERED
*        AS FOLLOWS:   R0  =  ZERO
*                      R1  =  SAME  AS WHEN SVC ISSUED
*                      R2-R13 SAME  AS WHEN SVC ISSUED
*                      R14 =  ADDRESS OF AN SVC EXIT INSTRUCTION
*                      R15 =  ENTRY POINT ADDRESS
         SPACE
NEXT     EQU   10
LAST     EQU   9
         EJECT
         SPACE 2
*****  DQLOAD SUBROUTINE  *************************************   20472
*
* THIS SECTION IS EXECUTED AFTER A MODULE HAS BEEN FETCHED . IT WILL
* CHECK IF A QUEUE HAS FORMED WHILE THE MODULE WAS BEING FETCHED, AND
* IF SO WILL EMPTY THE QUEUE BY MAKING ALL RB'S READY AND STORE INTO
* THE RBOPSW LOCATION THE ADDRESS OF CDCONTRL. A TEST OF PRIORITIES
* IS MADE TO DETERMINE IF ANY QUEUE'D RB HAS A TASK PRIORITY HIGHER
* THAN THE CURRENT; IF SO CONTROL WILL SUBSEQUENTLY BE RELINQUISHED
* TO THE HIGHER PRIORITY TASK.
*
* DQLOAD GETS INFORMATION STORED INTO THE CDE BY THE CDQUECTL     20472
* SUBROUTINE.                                                     20472
*
* NOTE:  IT IS THE RESPONSIBILITY OF THE CALLER OF THIS          A34566
*        SUBROUTINE TO ZERO OUT THE QUEUE HEAD OF THE WAIT       A34566
*        QUEUE. THE QUEUE STARTS AT THE CDE (CDRBP FIELD).       A34566
         SPACE 2
DQLOAD   N     COMREG,HIBYTE       CLEAR OFF LOW 3 BYTES.  HIGH  A26277
*                                       BYTE CONTAINS HIARCHY ID A26277
         OR    COMREG,CDEREG       PRESERVE CDE ADDR AND HIAR ID A26277
CARRYON  L     NEXT,RBPGMQZ(LAST)       LAST = ADDR OF INPUT RB   M4207
*                                            TO BE DEQUEUED       M4207
         LTR   NEXT,NEXT                Q. ANY RB'S Q'D OFF INPUT RB
         BZ    PACOUT                   A= NO  TAKE BRANCH
         XC    RBPGMQZ+1(3,LAST),RBPGMQZ+1(LAST) A= YES CLEAR RBPGMQ
         LR    LAST,NEXT                SAVE REG 10 OVER ROUTINE
         L     GR10,RBOPSWZ+4(NEXT)     GO TO TASK SWITCH TEST ROUTINE
         MVI   RBWCFZ(LAST),0          RESET WAIT FLAG IN RB.
         L     GR11,XSWTEST
         BALR  GR14,GR11
         MVC   RBOPSWZ+5(3,LAST),CONTRLA+1   SET UP DEQD RB ENT CDCONT.
         MVI   RBOPSWZ(LAST),0                                   A72559
         MVC   RBCDEZ+1(3,LAST),RBCDEZ+1(LAST)                   A72559
         B     CARRYON                  RETRY TEST FOR MORE       M4207
*                                            RB'S ON THE QUEUE    M4207
PACOUT   LR    CDEREG,COMREG           RESTORE CDEREG
         LA    CDEREG,0(CDEREG)        CLEAR OFF HIARCHY ID      A26277
         BR    SUBREG2                 RETURN
         SPACE
CONTRLA  DC    A(CDCONTRL)
         EJECT
         SPACE 2
*        THE FOLLOWING ROUTINE TEST IF A WORK AREA HAS BEEN ACQUIRED,
*        AND IF SO WILL FREE IT.
         SPACE
*    THIS SUBROUTINE WAS CHANGED TO FIX APAR 26073 IN             M0581
*        RELEASE 20.  BECAUSE OF APARS 39418, 45404, AND          M0581
*        PTM 0581 (REL 21), THE CODE IS AGAIN IN THE FORM OF      M0581
*        RELEASE 19.                                              M0581
*   PTM 0581 WAS FIXED BY ADDING CODE TO IEAQNU, IEAQGM, AND      M0581
*        IEAQPR.  THIS CODE ENSURED RETURN OF CONTROL ACROSS      M0581
*        A TYPE-1 SVC, (GETMAIN/FREEMAIN IN THIS CASE), IF THE    M0581
*        ISSUER IS DISABLED.                                      M0581
         SPACE
CDMOPUP  EQU   * .
         TM    RBCDE-1,WAE .            Q.WORK AREA GOTTEN        20472
         BNO   INCOUNT .                NO.TEST FOR 906 ABEND
         L     R1,WKCDADDR              PICK UP ADDR OF CDE ACQUIRED
         CR    CDEREG,R1                Q. IS CDE BEING USED
         BE    RINGO                    A= YES ; TAKE BRANCH
         CR    CDIREG,R1                Q. IS CDE USED FOR MAJOR
         BE    RINGO                    A= YES ; TAKE BRANCH
         L     R0,GETCDE                SET INPUT TO FREEMAIN
         FREEMAIN R,LV=(0),A=(1)
         SPACE
RINGO    EQU   *
         L     R0,GETWORK               IF WORK AREA PRESENT, FREE IT
         L     R1,RBEXSAVE .           GET WORK AREA ADDR
*                                      FROM SVRB EXT.SAVE.AREA
         FREEMAIN R,LV=(0),A=(1)
         NI    RBCDE-1,255-WAE         .RESET WORK AREA ESTABLISHED FLG
         SPACE
*        INCREMENT COUNT IN CDENTRY , CDUSE IS INCREMENTED ONLY HERE.
         SPACE
INCOUNT  EQU   * .
         TM    CDATTRJ,NIP .           Q.LOADED BY NIP            M0102
         BCR   1,SUBREG1 .             YES.DON'T ADJUST COUNT     M0102
         TM    CDUSEJ,255 .            Q.WILL COUNT ON CDE EXCEED 255
         BO    ERRCT .                 YES.ABEND 906
         IC    WKREG1,CDUSEJ .         LOAD COUNT IN CDE
         LA    WKREG1,1(WKREG1) .      INCREMENT COUNT
         STC   WKREG1,CDUSEJ .         RESTORE NEW COUNT IN CDE
         BR    SUBREG1
         SPACE
ERRCT    SR    R13,R13                  ZERO REG FOR ABEND RTN.
         B     ERRCOUNT                 TO ABEND 906.
         EJECT
         SPACE 2
*REGISTERS 4,5,11,12, ARE INITIALIZED IN THIS ROUTINE TO:
*              4 = TCB
*              5 = RB         THIS ROUTINE IS USED TO RESTORE REGISTERS
*              11= MINOR CDE  THAT ARE VOLATILE OVER  BLDL AND FETCH
*              12= MAJOR CDE
         SPACE
RERIG    L     TCBREG,TCBPTRS          LOAD ADDRESS OF NEW/OLD SLOTS
         L     TCBREG,OLD(TCBREG)      LOAD ADDRESS OF CURRENT TCB
         SSM   DISABLE                 INSURE MODE IS DISABLED
         L     RBREG,TCBRBP            LOAD ADDRESS OF CURRENT RB
         L     CDEREG,RBCDE-1           PICK UP CDENTRY ADDRESS
         LA    CDEREG,0(0,CDEREG)      CLEAR HI ORDER BYTE.
         LR    CDIREG,CDEREG            SET MAJOR EQUAL MINOR
         TM    CDATTR,MIN               Q.IS AN ALIAS REQUEST CURRENT
         BCR   8,SUBREG1                A=NO; RETURN
         L     CDIREG,CDXLMJP-1         PICK UP MAJOR CDE ADDRESS
         LA    CDIREG,0(CDIREG)         CLEAR ATTR2 FLAGS         20472
         BR    SUBREG1                 RETURN
         EJECT
         SPACE 2
*THIS SECTION OF CODE PROCESSES A BLDL ENTRY THAT IS FLAGGED AS AN
*ALIAS. THE MEMBER NAME IS SEARCHED UPON IN THE  CDENTRY QUEUES -
*IF IT IS FOUND  THE ALIAS ENTRY IS RELOCATED AND A CDENTRY IS BUILT
*THAT IS ASSOCIATED WITH THE FOUND ENTRY ON A MAJOR / MINOR BASIS.
*IF THE MEMBER NAME IS NOT FOUND A CDENTRY IS BUILT FOR THE  MEMBER
*NAME ALSO. WHEN THE MODULE IS FETCHED IT WILL HAVE TWO CDENTRIES ;ONE
*FOR THE MEMBER NAME (MAJOR ENTRY) AND ONE FOR THE ALIAS NAME (MINOR ).
         SPACE 2
ALIAS1   MVC   WKWORK(11),WKENTBK       SET DE UP IN A CONSISTENT
*                                       PATTERN REGARDLESS OF WHETHER
*                                       IT CONTAINS SCATTER INFO.
         TM    WKATTR,DESCAT            THE ALIAS NAME RESIDES IN
*                                       EITHER OF TWO PLACES DEPENDING
*                                       ON WHETHER SCATTER INFO IS
*                                       PRESENT.
         BZ    *+10                     IF IN SCATTER DE+ 43 IS ALIAS
         MVC   WKWORK(11),WKENTSC       IF NOT SCATTER DE+35 IS ALIAS
         MVC   WKMAINEP+1(11),WKWORK    IN BOTH CASES MOVE TO DE+45
*                                       ALIAS INFORMATION IS 11 BYTES
*                                       ADDITIONAL.  BYTES MEMBER NAME
*                                                   3BYTES MEMBER ENTPT
         CLC   WKMAINAM(8),WKNAME                                A73731
         BE    PGMFETCH                                          A73731
         MVC   CDENTPT(3),WKENTPT       SET UNRELOCATED EP INTO CDE.
         OI    CDATTR,MIN               SET MINOR FLAG IN ALIAS CDE
         SPACE
ALIASRCH LA    NAMEREG,WKMAINAM         SET UP SEARCH FOR MEMBER NAME.
         L     TABREG,TCBITB           SET JPAQ ORIGIN ADDRESS
         LA    TABREG,TCBJSE-TCB(0,TABREG)
         BAL   SUBREG1,CDSEARCH         GO TO  CDSEARCH  AND SCAN
*                                       QUEUE FOR MEMBER NAME.
         B     MAINLAND                 IF MAIN NAME IS IN CONTENTS
*                                       DIRECTORY, BRANCH TO ROUTINE TO
*                                       COMPLETE ALIAS REQUEST.
         C     DCBREG,LINKDCBA     Q.IS LINKLIB IN USE           A27910
         BE    LPASRCH             YES.SEARCH LINK PACK AREA     A27910
         C     DCBREG,SVCDCBA      Q.IS SVCLIB IN USE            A27910
         BNE   CREATCDE            NO.GET ANOTHER CDE            A27910
         SPACE
LPASRCH  EQU   *                                                 A27910
* APAR ** 11726 ** THE FOLLOWING THREE INSTRUCTIONS                APAR
         L     TABREG,IEAQLCTA    GET ADDRESS OF LPACQ ORIGIN      APAR
         BAL   SUBREG1,CDSEARCH   SEARCH FOR MAJOR NAME            APAR
         B     MAINLAND           FOUND - BRANCH TO MAIN ROUTINE   APAR
         AIF   (NOT &B(1)).NTSO6                                  20021
         TM    TCBTSFLG,TCBTSTSK   IS THIS A TS TASK              20021
         BZ    CREATCDE            NO - BRANCH                    20021
         L     R1,CVTPTR           GET ADDRESS OF CVT             20021
         USING CVTSECT,R1                                         20021
         L     R1,CVTTSCVT         GET ADDRESS TSCVT              20021
         USING TSCVT,R1                                           20021
         LA    R14,TSCVTLPA        GET ADR TSLPA                  20021
         CR    TABREG,R14          HAS TSLPA BEEN SEARCHED        20021
         BE    CREATCDE            YES BRANCH                     20021
         LR    TABREG,R14          GET ADDRESS TSLPA              20021
         DROP  R1                                                 20021
         BAL   SUBREG1,CDSEARCH    GO SEARCH TSLPA                20021
         B     MAINLAND            FOUND-BR TO MAIN RTN           20021
.NTSO6   ANOP                                                     20021
         EJECT
         SPACE 2
CREATCDE EQU   *                                                 A27910
         L     R0,GETCDE                SET INPUT TO GETMAIN FOR CDE
         GETMAIN R,LV=(0)
         L     CDIREG,RBCDE-1           **********
         LA    CDIREG,0(CDIREG)         **********
         LR    CDEREG,R1                SET NEW CDE = ALIAS = MINOR
         MVC   0(24,CDEREG),0(CDIREG)   MOVE ALIAS ENTRY DOWN TO MINOR
         ST    CDEREG,CDCHAINJ-1        POINT OLD CDE TO NEW CDE
         MVC   CDATTRJ(1),CDATTR        PLACE ATTR IN OLD CDE
         MVC   CDNAMEJ(8),WKMAINAM      PLACE NAME OF MAJOR IN OLD CDE
         NI    CDATTRJ,255-MIN          RESET MIN FLAG IN MAJOR
         XC    CDXLMJP(3),CDXLMJP CLEAR MINOR POINTER              APAR
         O     CDIREG,CDXLMJP-1   SAVE ATTRIBUTE FLAGS BYTE        APAR
         ST    CDIREG,CDXLMJP-1         POINT MINOR BACK TO MAJOR
         MVC   RBCDE(3),CDCHAINJ        RE-INITIALIZE RBCDE
         LR    CDEREG,CDIREG            *********
         B     PGMFETCH                 GO TO FETCH
         EJECT
         SPACE 2
*THIS ROUTINE  OPERATES UPON AN ALIAS CDENTRY WHERE MAIN CDENTRY HAS
*BEEN FOUND TO BE IN STORAGE. OF PRIME CONCERN IS THE EXTENT LIST WHICH
*IS USED TO RELOCATE THE ALIAS ENTRY POINT. IF THE MAIN CDENTRY HAS ITS
*NIC FLAG SET INDICATING IT IS NOT IN CORE ,THE ALIAS REQUEST MUST BE
*QUEUED PENDING THE SUCCESSFUL FETCHING OF THE MAIN NAME.
         SPACE 2
MAINLAND LR    CDIREG,CDEREG            MAJOR CDE   ADDRESSED BY CDIREG
         L     CDEREG,RBCDE-1           MINOR CDE   ADDRESSED BY CDEREG
         LA    CDEREG,0(CDEREG)         ZERO HI ORDER BYTE
         LA    CDIREG,0(CDIREG)   CLEAR THE HIGH ORDER BYTE        APAR
         XC    CDXLMJP(3),CDXLMJP CLEAR CDXLMJP FIELD              APAR
         O     CDIREG,CDXLMJP-1   SAVE ATTRIBUTE FLAGS BYTE        APAR
         SPACE
         ST    CDIREG,CDXLMJP-1         INITIALIZE CDXLMJP
         SPACE
*        UNHOOK ALIAS FROM JPACQ AND HOOK IT ON TO MAJOR CDE
         SPACE
         BAL   R13,RETHRED              UNHOOK CDE FROM LIST
         L     CDIREG,CDXLMJP-1         RELOAD CDIREG
         AIF   (NOT &B(1)).NTSO7                                  20021
         TM    TCBTSFLG,TCBTSTSK . Q.SWAPPABLE (TS-USER) TASK     20472
         BNO   NONLPA .            NO.BRANCH, CDE ALREADY IN SQS  20472
         TM    CDATTRJ,NIP         FIXED LPA MOD LOADED BY NIP    M1196
         BZ    NONLPA              NO-BR AROUND LPA PROCESSING    20021
         GETMAIN R,LV=24,SP=245    GET CDE CORE IN SQS            20021
         MVC   ZERO(TWTYFR,R1),ZERO(R11) MVE CDE FR LSQS TO SQS   20021
         LR    R0,R1               SAVE SQS CDE ADR               20021
         LR    R1,R11              LSQS CDE ADR FOR FREEMAIN      20021
         LR    R11,R0              SAVE FOR USE SQS CDE ADR       20021
         FREEMAIN R,LV=24,A=(1),SP=255 FREE CDE IN LSQS           20021
         IC    R1,RBCDFLGS         SAVE HI ORDER BYTE OF FLAGS    20021
         ST    R11,RBCDFLGS        SAVE PTR TO NEW CDE IN RB      20021
         STC   R1,RBCDFLGS         RESTORE HI ORDER BYTE OF FLGS  20021
         ST    R11,WKCDADDR .           UPDATE CDE ADDR IN THE    M2060
*                                       FETCH/BLDL WORK AREA      M2060
NONLPA   EQU   *                                                  20021
.NTSO7   ANOP                                                     20021
         MVC   CDCHAIN(3),CDCHAINJ      MOVE CHAIN DOWN FROM MAJ TO MIN
         MVC   CDCHAINJ(3),RBCDE        MOVE POINTER TO MIN INTO MAJOR
         TM    CDATTRJ,NIC              Q.IS MAIN NAME IN STORAGE
         BZ    RESOLVE                  A=YES; TAKE BRANCH
         B     CDQUECTL    PUT REQUEST ON QUE                     71580
*                             IF LOAD MODULE IS IN MAIN STORAGE, AND
*                             ALIAS TO IT HAS BEEN  REQUESTED THIS
*                             SECTION IS ENTERED.
         SPACE 2
RESOLVE  DS    0H
         L     SUBREG2,CDXLMJPJ-1      PICK UP EXTENT LIST ADDR
         L     SUBREG1,WKENTPT-1       LOAD ABSOLUTE ENTRY POINT
         BAL   COMREG,RELOCATE         RELOCATE ENTRY POINT
         NI    CDATTR,255-NIC          RESET NIC BIT
         ST    SUBREG1,CDENTPT-1       STORE RELOCATED ENTRY POINT
         B     PLUSCONT                BRANCH TO ALLOCATE RTN VIA CDCT
         EJECT
         SPACE 2
*RELOCATE SUBROUTINE TAKES AN ENTRY POINT  TO A MODULE THAT HAS PREVIOU
*SLY BEEN FETCHED AND ADDS A RELOCATION  FACTOR TO PRODUCE A RELOCATED
*ENTRY POINT.THE DESIGN CONCERNS THE GENERAL CASE OF SCATTER LOADING,
*AND USES THE EXTENT LIST PROVIDED BY PROGRAM FETCH TO PERFORM THE
*RELOCATION. NOTE ESPECIALLY THAT IN REDUCING FROM THE ENTRY POINT
*VALUE THE LENGTHS GIVEN IN THE EXTENT LIST ARE ROUNDED DOWN TO MULTIP
*LES OF EIGHT. THIS IS BECAUSE EACH LENGTH OVERLAPS WITH THE PREVIOUS
*CONTROL SECTION UP TO EIGHT BYTES.
         SPACE 2
RELOCATE SR    WKREG2,WKREG2            INITIALIZE  TO POINT TO LENGTH1
         LA    SUBREG1,0(SUBREG1)       ZERO HI ORDER BYTE
AGAIN    L     WKREG3,8(WKREG2,SUBREG2)  PICK UP LENGTH
         N     WKREG3,ROUNDOWN         ROUND LENGTH DOWN TO 8X'S
         SR    SUBREG1,WKREG3           SUBTRACT SUCCESSIBELY LENTH1,2.
         BL    OUT                 CONDITION CODE INDICATES RESULT 4163
         LA    WKREG2,4(WKREG2)         IF VALUE LESS THAN ZERO BRANCH
         B     AGAIN                    BUMP COUNTER AND REPEAT
OUT      AR    SUBREG1,WKREG3           VALUE TO BE DISPLACED IN REG
         L     WKREG3,4(SUBREG2)       LOCATE ADDR OF CONT. SECTION
         SLL   WKREG3,2                 SECTION WHOSE OFFSET IS REFER'D
         AR    WKREG3,SUBREG2
         L     WKREG2,8(WKREG2,WKREG3) ADD OFFSET TO ADDRESS
         AR    SUBREG1,WKREG2           VALUE EQUAL RELOCATED EP
         BR    COMREG
         EJECT
         SPACE 1
*THIS ROUTINE ADDS THE CDENTRY ADDRESSED BY CDEREG TO THE CONTROL QUEUE
*ADDRESSED BY TABREG. THE ADDITION IS DONE IN A PUSH-DOWN  FASHION.
         SPACE
CDEADD   EQU   *
         ST    CDEREG,CDRBP-1           STORE ADDR TEMPORARILY FOR MVC
         L     TABREG,TCBITB            LOAD JOB STEP TCB ADDR.
         CLC   TCBJSEZ+1(3,TABREG),CDRBP    SAME                 A69852
         BCR   8,SUBREG1               YES                       A69852
         MVC   CDCHAIN(3),TCBJSEZ+1(TABREG)  INITIALIZE CDCHAIN
         MVC   TCBJSEZ+1(3,TABREG),CDRBP MOVE INTO LISTORG CDE ADDRESS
         MVC   RBCDE(3),CDRBP           MOVE INTO RB CDE ADDRESS
         ST    RBREG,CDRBP-1            INITIALIZE CDRBP
         BR    SUBREG1                  RETURN
         SPACE 2
*****  RETHRED SUBROUTINE  ************************************   21B72
*
* THIS SUBROUTINE WILL DEQUEUE A CDE FROM THE JOBPACK QUEUE AND
* WILL MAKE READY ANY QUEUED REQUESTORS FOR THE SAME MODULE.
*
* IT IS ENTERED WHEN BLDL FAILS FOR THE NAME BUT THERE IS
* ANOTHER LIBRARY TO SEARCH; OR WHEN THE CDE IS A MINOR NAME OF
* AN EXISTING MAJOR CDE AND MUST, THEREFORE, BE QUEUED BEHIND
* THE MAJOR CDE.
         SPACE 1
RETHRED  L     WKREG1,TCBITB            LOAD ADDR OF JOB STEP TCB
         LA    WKREG1,TCBJSEZ(WKREG1)   PICK UP LIST ORG OF JPACQ
STARLITE L     WKREG2,0(WKREG1)         PICK UP NEXT CDE ADDR
         LA    WKREG2,0(WKREG2)         ZERO HI ORDER BYTE
         CR    CDEREG,WKREG2            Q.IS THIS CDENTRY TO UNHOOK
         BE    THREDOUT                 A=YES; TAKE  BRANCH
         LR    WKREG1,WKREG2            GO TO NEXT CDE
         B     STARLITE                 CONTINUE IN LOOP
THREDOUT MVC   1(3,WKREG1),1(WKREG2)         UNHOOK CDE FROM JPACQ
         LR    R0,NAMEREG               SAVE NAMRREG
         LR    R1,DCBREG                SAVE DCBREG
         XC    CDRBP(3),CDRBP .        ZERO QUEUE HEAD BEFORE    A34566
*                                           GOING TO DQLOAD      A34566
         LR    NAMEREG,RBREG            SET INPUT TO DQLOAD
         BAL   SUBREG2,DQLOAD           DQ ANY Q'D REQUESTS
         LR    DCBREG,R1
         LR    NAMEREG,R0               RESTORE NAMEREG
         BR    R13                      RETURN
         SPACE 2
ERRLOCK  LA    R13,1(R13)              CODE = A06
ERRCOUNT LA    R13,1(R13)              CODE = 906
ERRBLDL  LA    R13,1(R13)              CODE = 806
ERRXCUTE LA    R13,3(R13)              CODE = 706
ERRLONLY LA    R13,3(R13)              CODE = 406
ERRFETCH LA    R13,1(R13)              CODE = 106
         LR    GR9,R15 .              SAVE 106/806 REASON CODE BD M1627
         L     R1,ANOMALY              PICK UP FORMAT WORD
         SLL   R13,20                  SHIFT CODE TO PROPER POSITION
         OR    R1,R13                  OR IN CODE TO FORMATTED WORD
         LR    R13,R1                  SET UP REG 13              21016
         SLL   R13,4                   DROP OFF EIGHT             21016
         SRL   R13,16                  POSITION CODE              21016
         LA    R0,MESSZE .            MSG SIZE FOR GETMAIN     BD M1525
       GETMAIN R,LV=(0) .                                      BD M1525
         USING XMSG,R1                                            21016
         MVC   0(MESSZE,R1),MESSAGE    MOVE IN SKELETON MESS.     21016
         C     R13,ONEOSIX .          Q. IS IT 106             BD M1525
         BE    GOREREG .              YES-RESTORE REGS         BD M1525
         C     R13,EITOSIX .          Q. IS IT 806             BD M1525
         BE    NOREREG .              YES-REGS RESTORED        BD M1525
         SR    GR9,GR9 .              ZERO REG 9               BD M1525
         B     NOREREG .              SKIP REG RESTORE         BD M1525
GOREREG  EQU   * .                                             BD M1525
         BAL   SUBREG1,RERIG .        GO RESTORE REGS          BD M1525
NOREREG  EQU   * .                                             BD M1525
         L     GR10,TCBTIO .          TIOT ADDR                BD M1525
         MVC   XMJOBNM(8),0(GR10) .   MOVE IN JOBNAME          BD M1525
         MVC   XMSTEPNM(8),8(GR10) .  MOVE IN STEPNAME         BD M1525
         MVC   XMMODNM(8),CDNAME .    MOVE IN MODULE NAME      BD M1525
RESUME   STH   R13,WORK                PREPARE COMP CODE          21016
         STC   GR9,WORK+2              AND REASON CODE            21016
         UNPK  XMCOMCD(7),WORK(4)      FOR PRINTING               21016
         TR    XMCOMCD(6),TRANTAB-X'F0'  THE MESSAGE              21016
         MVI   XMCOMCD+4,X'60'         PUT IN DASH                21016
         MVI   XMCOMCD+6,X'40' .       BLANK OUT GARBAGE       BD 21016
         CLI   XMCOMCD+5,X'F0'         Q. IS THERE A REASON CODE  21016
         BNE   RCODE                   YES, BRANCH                21016
         MVI   XMCOMCD+5,X'40'         BLANK OUT ZERO REASON CODE 21016
         MVI   XMCOMCD+4,X'40'         BLANK OUT DASH             21016
RCODE    MVI   XMCOMCD,X'40'           CLEAN UP MESSAGE           21016
         LR     GR10,1                                          SA74760
         WTO   MF=(E,(1))              ISSUE MESSAGE              21016
         LA     R0,MESSZE                                       SA74760
         LR     R1,GR10                                         SA74760
         FREEMAIN R,LV=(0),A=(1)                                SA74760
         SLL   R13,12                  REPOSITION CODE            21016
         O     R13,ANOMALY             SET UP FOR ABEND           21016
         LR    R1,R13                  PREPARE REG 1              21016
         LR    R0,TCBREG               PICK UP TCB ADDRESS
         LR    R15,GR9 .              RESTORE REG 15 CODE-106/806 M1627
         ABEND  (1)
ANOMALY  DS    0F
         DC    X'80006000'             MASK WITH SVC # AND DUMP FLAG
         EJECT
         SPACE 2
IEAQCS01 EQU   *
         SPACE
* ENTRY POINT FOR ATTACH
* ENTRY CONDITIONS
*              R1 = ADDRESS OF  PN OR DE
*              R1 = IS COMPLIMETED IF DE
*              R0 = ADDRESS OF DCB
*              THE 54 BYTE DE OR 8 BYTE PGM NAME IS LOCATED STARTING AT
*              LOCATION 88 OF THE SVRB.  THE SVRB  IS 144 BYTES IN SIZE
*              THE PSW UPON ENTRY IS FULLY DISABLED, PRIVILEGED, AND
*              KEY = 0 . REGISTERS IN SVRB ARE IN ORDER 0-15
         SPACE 2
         BALR  BASEREG,0                SET UP TEMPORARY BASE
         USING *,BASEREG
         L     BASEREG,LINKBASE         SET UP PERMANENT BASE
         USING CDLKBASE,BASEREG
         LR    DCBREG,GR0               LOAD DCB ADDRESS IN PROPER  REG
         LPR   NAMEREG,GR1              LOAD NAME ADDRESS IN NAMEREG
         LTR   GR1,GR1                  Q. IS DE BEING PASSED
*                                       INDICATED BY COMPLIMENTED REG
*                                       COND. CODE  TESTED AT CDADVANS
         B     CDADVANS
         EJECT
         SPACE
*ROUTINE NAME
*        IGC007  XCTL SVC SERVICE ROUTINE
*
*FUNCTIONS
*     1.PERFORM THE LINKAGE TO THE LOAD MODULE SPECIFIED. THE MODULE
*        GIVEN CONTROL EXECUTES AT THE SAME LEVEL OF CONTROL AS THE
*        MODULE ISSUING THE MACRO INSTRUCTION.
*     2. AN XCTL ISSUED BY A SUPERVISOR STATE PROGRAM WILL BE PROCESSED
*        BY THE TRANSIENT AREA HANDLER.
*     3. AN XCTL ISSUED FROM A ROUTINE ENTERED VIA ATTACH,LINK,OR XCTL
*        WILL BE PROCESSED BY THE CONTENTS SUPERVISOR.
*        AN XCTL ISSUED  BY AN IRB WILL BE TREATED AS A LINK AND UPON
*        RETURN  AN EXIT FROM THE CURRENT CONTROL LEVEL .
*     4. THE ORDER OF SEARCH UPON LISTS AND LIBRARIES IS THE SAME AS
*        FOR LINK SERVICE ROUTINE.
*     5. THE PRB AND CDENTRY  ARE CREATED AND UPDATED AS FOR LINK.
*     6. FETCHING AND PACKING IS DONE AS FOR LINK
*      7.CHANGE THE RB ADDR IN THE STAE CONTROL BLOCK REPRESENTING STAE
*        THE PROGRAM BEING XCTLED TO IF THE XCTLING ROUTINE WANTED STAE
*        THE SCB TO REMAIN ACROSS THE XCTL.                        STAE
*
*ENTRY POINT NAMES
*     1. IGC007  SVC XCTL ENTRY POINT
*
*CONTAINED IN MODULE   IEAQCS00  - CONTENTS SUPERVISOR MODULE
*
*ATTRIBUTES-   RESIDENT,REENTRANT,SUPERVISOR STATE, TYPE 2 SVC ROUTINE
*
*APPLICABILITY  SYSTEM 4 ONLY
*EXTERNAL REFERNCES
*     1. ALL THOSE LISTED FOR LINK
*     2. TAXCTL   - TO COMPLETE AN XCTL ISSUED BY AN SVRB
*
*SVCS USED
*     1. THOSE LISTED FOR LINK
*     2. EXIT  (SVC 3)
*
*INPUT   SAME AS LINK
*OUTPUT  SAME AS LINK
*ENTRY POINTS
*        IGC007   -  SVC XCTL ENTRY POINT
*EXIT POINTS
*        BRANCH TO  CDADVANS   IN LINK  ROUTINE
*        REGISTERS CONTAIN  3,4,5  ENVIRONMENTAL REGS
*                           BASEREG  - BASE VALUE
*                           NAMEREG  - ADDRESS OF NAME OR DE FROM MACRO
*                           DCBREG   - ADDRESS OF DCB  GIVEN IN  MACRO
*                           CONDITION CODE SET  INDICATING IF DE GIVEN
         EJECT
         SPACE 2
*ERROR EXIT POINTS
*     1. ABEND  -  IF AN SIRB  HAS ISSUED THE  XCTL.
*
*TABLES AND CONTROL BLOCKS REFERENCED - SAME AS LINK
*LIST ORIGINS, TABLES,AND CONTROL BLOCKS INCLUDED - NONE
*RESTRICTIONS - NONE
*NOTES  -  NONE
*ENTRY LOCATION TO  XCTL SVC SERVICE ROUTINE.
*THE FIRST SEQUENCE OF CODE SETS UP THE BASE REGISTER, AND IMMEDIATELY
*CHECKS THE RB TYPE THAT ISSUED THE XCTL REQUEST.
*           1. SVRB - CONTROL IS GIVEN TO TRANSIENT AREA HANDLER
*           2. PRB/IRB-CONTROL IS RETAINED BY CONTENTS SUPERVISOR
*           3. SIRB         - NOT ALLOWED; ABEND IF DETECTED.
         EJECT
         SPACE 2
IGC007   DS    0D       ENTRY POINT TO SVC XCTL FROM SVC FLIH
         BALR  BASEREG,0                SET UP BASE
         USING *,BASEREG
         L     BASEREG,LINKBASE         SET ADDRESSING FROM      A32418
         USING CDLKBASE,BASEREG              START OF SVC LINK   A32418
         L     TAXRB,RBLINK-1          LOAD ADDR OF RB ISSUING XCTL
         LA    WKREG2,TCBNSTAE         ADDRESS TCBNSTAE FILED      STAE
STAELOOP L     WKREG1,0(WKREG2)        SCB ADDRESS                 STAE
         LA    WKREG1,GR0(WKREG1)  CLEAR HI ORDER BYTE OF FLAGS   20021
         LTR   WKREG1,WKREG1           Q. SCB PRESENT              STAE
         BZ    NOSCB                   Q=NO  TAKE BRANCH           STAE
         TM    TWELVE(WKREG1),STAISCB  IS IT A STAI SCB           20021
         BNZ   STAEON              YES-GET NEXT SCB               20021
         CLC   13(3,WKREG1),RBLINK     Q. XCTLING PGM ISSUE STAE   STAE
         BNE   NOSCB                   Q=NO, TAKE BRANCH           STAE
         TM    RBSTABZ(TAXRB),SVRB      Q.SVRB XCTLING           A28429
         BZ    PRBSTAE                  NO.BRANCH                A28429
IRBSTAE  EQU   *                                                 A28429
SVRBSTAE EQU   *                                                 A28429
         TM    0(WKREG2),X'20'          Q.XCTL OPTION SPECIFIED  A28429
         BO    STAEON                   YES.BRANCH               A28429
FREESCB  LA    WKREG1,0(WKREG1)         CLEAR FLAG FOR FREEMAIN  A28429
         MVC   0(4,WKREG2),0(WKREG1)    UPDATE ADDR PTR TO       A28429
*                                            NEXT SCB            A28429
         L     0,K16F255 .              LENGTH 16, SUBPOOL 255    M0183
         SVC   10                       FREE THE SCB             A28429
         B     STAELOOP                 CONTINUE SCB SEARCH      A28429
PRBSTAE  EQU   *                                                 A28429
         TM    0(WKREG2),X'20'         Q. XCTL OPTION SPECIFIED    STAE
         BZ    STAEON                  A=NO, TAKE BRANCH           STAE
         OI    12(WKREG1),X'80'        SET XCTL FLAG FOR EXIT      STAE
STAEON   LR    WKREG2,WKREG1           UPDATE ADDRESS POINTER      STAE
         B     STAELOOP                CONTINUE SCB SEARCH         STAE
NOSCB    EQU   *                                                   STAE
         TM    RBSTABZ(TAXRB),SVRB     Q. WHAT TYPE OF RB IS THIS
         BZ    PRBPROC                 A=PRB; TAKE BRANCH
         BM    IRBPROC                 A=IRB; TAKE BRANCH
SVRBPROC EQU   *                       REQUEST IS FOR TRANS  ROUTINE
         L     TAXBASE,TAX              LOAD ADDRESS OF TRANS. AREA CTL
         BR    TAXBASE                  BRANCH TO TRANSIENT AREA CNTROL
*
PRBPROC  LM    NAMEREG,DCBREG,0(R15)    LOAD PARAMETER  IN TWO REGS
         LTR   NAMEREG,NAMEREG     Q.DE FORM OF MACRO             19472
         BP    NOTDE               NO.BRANCH                      19472
         MVC   RBREGS+56(54),0(NAMEREG) MOVE 54 BYTE DE           19472
NOTDE    MVC   RBREGS+56(8),0(NAMEREG)  MOVE 8 BYTE NAME ONLY     19472
         L     WKREG1,RBOPSWZ(TAXRB)    PICK UP LEFT HALF PSW
         IC    WKREG1,RBOPSWZ+4(TAXRB)  PICK UP 5TH BYTE IN SAME REG
         ST    WKREG1,RBREGS            STORE XCTL INFO IN REG0 SLOT
*                                       OF SVRB
         OI    RBCDFLGS,XCTL            INDICATE XCTL ENTRY TO MODULE
         SPACE
*SWITCH THE SVRB AND PRB POSITIONS. THE PRB BEING PLACED AS CURRENT RB.
*THIS WILL ALLOW AN EXIT TO BE PERFORMED FROM THE PRB WHICH PERFORMS
*THE HOUSEKEEPING ON THE CDENTRY,POSSIBLY FREEING THE MAIN STORAGE
*FOR THE PROGRAM; WHEN THE PRB IS REMOVED FROM THE CHAIN AND FREED
*CONTROL WILL BE GIVEN TO THE SVRB THAT NOW PRECEDES IT.
*SITUATION CURRENTLY IS;TCB POINTS TO SVRB,WHICH POINTS TO PRB,WHICH
*            POINTS TO PREVIOUS RB
*            CHANGE TO;TCB POINTS  TO PRB, WHICH POINTS TO SVRB,WHICH
*            POINTS TO PREVIOUS RB.       THUS  THREE  POINTERS CHANGE
         SPACE
         ST    TAXRB,TCBRBP                  POINT TCB TO PRB
         MVC   RBLINK(3),RBLINKZ+1(TAXRB)  POINT SVRB TO PREVIOUS RB
         OC    RBSTAB+1(1),RBSTABZ+1(TAXRB)  SET INDICATOR IF TCB= NEXT
         NI    RBSTABZ+1(TAXRB),X'7F'   CLEAR POSSIBLE TCB NEXT FLAG.
         ST    RBREG,RBLINKZ(TAXRB)          POINT PRB TO SVRB
*SET PSW IN SVRB TO RETURN HERE.
         LA    WKREG1,STAYON                 REPLACE INSTRUCTION ADDR.
         ST    WKREG1,RBOPSW+4               IN PSW OF  SVRB.
         MVI   RBOPSW+1,X'04'          ENABLE PSW FOR MACHINE CHECK
         SVC   3                             TAKE AN EXIT TO REMOVE PRB
         SPACE
* RETURN HERE AFTER PRB HAS EXIT'ED  AND GO TO LINK  MAINLINE ROUTINE.
         SPACE
STAYON   LTR   NAMEREG,NAMEREG          TEST IF DE FORM IS GIVEN
*              SET CONDITION CODE WHICH IS TESTED IN MAINLINE
         LA    NAMEREG,RBREGS+56        SET REG TO ADDRESS NAME
         B     CDADVANS                 GO  TO  LINK  MAINLINE  ROUTINE
         SPACE
*IF AN IRB IS INDICATED PERFORM THE LINKAGE AS A LINK - PLACING
*IN THE PSW OF THE IRB THE ADDRESS  OF SVCEXIT WHICH IT WILL ISSUE
*AFTER THE RETURN  FROM THE LINKAGE  JUST REQUESTED.
         SPACE
IRBPROC  LA    WKREG1,SVCEXIT
         ST    WKREG1,RBOPSWZR(TAXRB)   ADDR SVCEXIT TO RH RBOPSW  MP1A
         B     CDLKBASE .               EFFECT A LINK            A46556
         SPACE 2
IRB      EQU   X'40'
TSVRB    EQU   X'D0'                    SVRB SET FOR TRANSIENT PGM
         EJECT
         SPACE 2
*ROUTINE NAME
*        IGC008   LOAD MACRO SERVICE ROUTINE
*
*FUNCTIONS
*     1. ACQUIRE A SPECIFIED LOAD MODULE AND RETAIN THE MODULE FOR USE
*        BY THE TASK ISSUING THE 'LOAD'.
*     2. IN ACQUIRING A COPY TO BE RETAINED BY THE REQUESTING TASK, THE
*        SEARCH PROCEDURE FOR THE CONTENTS DIRECTORY AND LIBRARIES
*        IS AN  DESCRIBED IN  LINK (IGC006).
*     3. DURING THE TIME THAT A MODULE IS RETAINED IN MAIN STORAGE FOR
*        A TASK.THE TASK IS SAID TO BE 'RESPONSIBLE' FOR THE MODULE.
*        AN EIGHT BYTE  LOAD LIST   ELEMENT  IS  CREATED FOR EACH
*        MODULE RETAINED BY A TASK. THIS LOAD LIST ELEMENT WILL POINT
*        TO A CDENTRY DESCRIBING THE LOAD MODULE.
*     4. A MODULE THAT IS 'LOAD'ED WILL CAUSE THE USE/RESPONSIBILITY
*        COUNT IN CDENTRY TO BE INCREMENTED. THE COUNT IN THE CDENTRY
*        IS THE TOTAL USE OF AND RESPONSIBILITY FOR THE MODULE BY ALL
*        TASKS OF ALL  JOB STEPS.
*     5. IN ADDITION, A RESPONSIBILITY COUNT IS MAINTAINED FOR THE
*        MODULE BY TASK, IN THE LOAD LIST ELEMENT. THIS COUNT IS
*        INCREMENTED BY 'LOAD', AND DECREMENTED BY 'DELETE' AND IS THE
*        MEANS BY WHICH IT IS INSURED THAT A MODULE WILL BE RELEASED
*        FROM MAIN STORAGE WHEN IT IS NO LONGER REQUIRED.THE LOAD LIST
*        IS CHECKED FOR BY THE EOT PROCEDURES, AND IF THE PROPER NUMBER
*        OF 'DELETE'S HAVE NOT BEEN ISSUED, THE CDENTRY COUNT WILL BE
*        REDUCED BY THE RESPONSIBILITY COUNT REMAINING.
*     6. A 'LOAD' REQUEST IN DISTINCTION TO A 'LINK' REQUEST IS NOT
*        QUEUED ON SERIALLY REUSABLE PROGRANS.THE ENTRY POINT IS
*        RETURNED EVEN IF THE MODULE IS NOW IN USE.
*
*     7. FETCHING A MODULE INTO MAINSTORAGE WILL BE HANDLED EXACTLY
*        AS FOR 'LINK' (IGC006). SEE DESCRIPTION IN THIS MODULE.
*
*ENTRY POINT NAMES
*        CDLDRET  -  LOCATION TO WHICH MAINLINE RETURNS TO DO SPECIAL
*        PROCESSING FOR LOAD MACRO.
*
*        CDLLSRCH -  ENTRY TO SUBROUTINE ALSO USED BY 'DELETE'. THIS
*        SUBROUTINE  SEARCHES  THE LOAD LIST OFF A TCB  FOR  A CDENTRY
*        CONTAINING A REQUIRED NAME.
*
*CONTAINED IN MODULE
*        IEAQCS00    CONTENTS  SUPERVISOR MODULE
*
*ATTRIBUTES
*        RESIDENT,REENTRANT,SUPERVISOR STATE, TYPE 2 SVC ROUTINE
*
*APPLICABILITY
*        OPTION 4 SYSTEM  ONLY
*
*EXTERNAL REFERENCES
*        SAME AS  IGC006 (LINK SERVICE ROUTINE)
*
*SVCS USED
*        SAME AS  IGC006 (LINK SERVICE ROUTINE)
*
*INPUT
*     1. GENERAL REGISTER   ZERO (0) CONTAINS EITHER
*           A. ADDRESS OF ENTRY POINT NAME;   OR
*           B. ADDRESS OF DE IN COMPLEMENTED FORM.
*
*     2. THE LOAD SERVICE ROUTINE USES  THE SIGN OF REGISTER 0 TO
*        DISTINGUISH BETWEEN  A  AND B  ABOVE.
*
*     3. GENERAL REGISTER  ONE (1)   CONTAINS ZERO OR THE ADDRESS OF A
*        DCB.  IN LCS SUPPORTED SYSTEMS,SAME AS LINK               LCS0
*
*OUTPUT
*        GENERAL REGISTER  ZERO  (0) CONTAINS THE ENTRY POINT ADDRESS
*        TO THE  LOAD MODULE  REQUESTED.
*
*ENTRY POINTS
*
*     1. IGC008 -LOAD SERVICE ROUTINE
*        ENTERED BY SVC FLIH BY AN LPSW. PSW MUST BE DISABLED FOR ALL
*        MASKABLE INTERRUPTS EXCEPT MACHINE CHECK, IN SUPERVISOR MODE,
*        HAVE SUPERVISOR PROTECT KEY OF ZERO (0). AN  SVC 8  WAS ISSUED
*        BY THE CALLER.
*        REGISTERS UPON ENTRY
*              0,1            INPUT AS DESCRIBED ABOVE
*              3,4,5          CVT,TCB,AND RB ,RESPECTIVELY
*              2,6-15         AS SET PRIOR TO SVC  8
*
*EXIT POINTS
*     1. SVC EXIT (3) UPON SUCCESSFUL  ACQUISITION OF LOAD MODULE.
*     2. TO THE DISPATCHER IF A REQUESTED LOAD MODULE IS BEING  FETCHED
*        ELSEWHERE. THE CURRENT OPERATING RB IS QUEUED TEMPORARILY
*        AWAITING COMPLETION OF FETCHING.
*        REGISTERS UPON EXIT
*              0,1,2,14,15    NOT  SIGNIFICANT
*              3-5,           ENVIRONMENTAL REGISTERS (CVT , TCB , RB)
*              6,             IF RBCDFLGS SETM=1  6=WORK AREA ADDR
*              7,             BASE ADDRESS
*              8,             LPACQ OR JPACQ ADDRESS
*              9              ENTRY POINT NAME ADDRESS
*              10             DCB ADDRESS  (MAY BE ZERO)
*              11             CDENTRY ADDRESS  MINOR
*              12             CDENTRY ADDRESS  MAJOR
*
*ERROR EXIT POINTS
*     1. ABEND - TO TERMINATE A TASK
*        ERROR CODES TO BE DEFINED
*
*TABLES AND CONTROL BLOCKS REFERENCED
*
*     1. LPACQ,JPACQ,DIRECTORY ENTRY, CONTENTS DIRECTORY ENTRY,TCB,
*        SVRB,PRB  IN THE SAME MANNER AS FOR  LINK (IGC006).
*
*     2. LOAD LIST - A LOAD LIST ELEMENT MAY BE ADDED IN A PUSH-DOWN
*        FASHION. IF ONE IS NOT ADDED THE COUNT OF ONE ALREADY ON THE
*        LIST IS INCREMENTED.
*
*     3. LOAD LIST ELEMENT - AN  EIGHT BYTE BLOCK  CONTAINING :
*
*      A.  CHAIN POINTER   - FIELD THRU WHICH THIS NON-CONTIGUOUS LIST
*        IS MAINTAINED.  4 BYTES IN LENGTH
*
*      B. RESPONSIBILITY COUNT-COUNT OF OUTSTANDING 'LOAD'S REFERRED
*        TO THE MODULE.  FOR NOT REUSABLE LOAD MODULES COUNT NEVER
*        EXCEEDS ONE.
*
*      C.  CONTENTS DIRECTORY POINTER - ADDRESS OF THE ENTRY IN EITHER
*        THE LPACQ OR JPACQ WHICH DESCRIBES THE LOAD MODULE 'LOAD'ED
*
*RESTRICTIONS  ON  USE OF ROUTINE
*        NONE
*NOTES
*        NONE
         EJECT
         SPACE 2
IGC008   DS    0D
         BALR  BASEREG,0                SET UP BASE ADDRESSABILITY
         USING *,BASEREG
         L     BASEREG,LINKBASE         RESET BASE TO VALUE LINK BASE
         USING CDLKBASE,BASEREG
         OI    RBCDFLGS,LOAD            INDICATE  ENTRY BY LOAD MACRO.
         LPR   NAMEREG,R0
         LR    DCBREG,R1
         LTR   R0,R0              SET CONDITION CODE
         BAL   SUBREG1,GINREGS        INITIALIZE REGISTERS
         BAL   SUBREG2,CDLLSRCH         SEARCH THE LOAD LIST
         BAL   SUBREG2,CDALLOC          IF FOUD ALLOCATE
         B     CDCONTRL                NO SUCCESSFUL ALLOC
         LNR   LDLREG,LDLREG           ALLOCATE POSITIVE
         BCR   0,0                     2 BYTE PADDING
*                                      INDICATE LOAD LIST ELEMENT EXIST
         B     CDEMERGE                 THIS RETURN NOT SIGNIFICANT
         NOP   0(0,0)                   THIS RET SHOULD NOT BE ENTERED.
         B     CDQUECTL                 QUEUE RB UNTIL MOD IS FETCHED.
         SPACE
CDLDRET  EQU   *
         LA    CDEREG,0(CDEREG)         CLEAR OFF ATTRIBUTES BYTE
         SPACE
*    REG 13 TELLS LOAD WHETHER AN LLE IS PASSED ,I.E. A USABLE    20472
*        COPY OF THE REQUESTED MODULE IS IN CORE AND ALREADY      20472
*        LOADED ONCE OR MORE UNDER THIS SAME REQUESTOR.           20472
         SPACE
         LTR   LDLREG,LDLREG            Q. IS LOAD LIST ELEMENT PASSED
         BM    LOLITA                  A= YES ; TAKE BRANCH
         L     R0,GETMSK8
         GETMAIN R,LV=(0)
         LR    LDLREG,R1
         L     WKREG1,TCBLLS
         ST    LDLREG,TCBLLS
         ST    WKREG1,0(LDLREG)
         ST    CDEREG,4(LDLREG)
LOLITA   LPR   LDLREG,LDLREG       SET POSITIVE
CDNON1   EQU   *
         IC    WKREG1,4(LDLREG)
         LA    WKREG1,1(WKREG1)
         STC   WKREG1,4(LDLREG)
         OI    RBSTAB,SVRB
         L     3,CDENTPT-1
         LA    0,0(3)
         SVC   3
         EJECT
         SPACE 2
*ROUTINE NAME      IGC009     DELETE  SERVICE ROUTINE
*
*FUNCTIONS       1. USED BY A TASK TO INDICATE  THAT USAGE OF A MODULE,
*                   WHICH THE TASK ACQUIRED BY ISSUING A LOAD MACRO,
*                   IS COMPLETE.
*
*                2. LOCATE THE NAMED MODULE
*                     A. IF FOUND ON LOAD LIST - DECREMENT OCUNT IN
*                        LOAD LIST ELEMENT AND FREE IT IF COUNT = 0.
*                     B. IF FOUND ON LINK PACK AREA CONTROL QUEUE -
*                        NO LOAD LIST HANDLING NECESSARY -RETURN CODE=0
*                     C. IF MODULE NOT FOUND ON EITHER OF ABOVE,
*                        RETURN ERROR CODE=4 IN GR15.
*
*                3. DECREMENT USE COUNT IN CDENTRY IF MODULE FOUND ON
*                   LOAD LIST. IF COUNT GOES TO ZERO, FORCE THE PURGING
*                   OF NAMED MODULE BY SETTING ATTRIBUTES OF MODULE
*                   INDICATING A NONREUSABLE MODULE.
*
*ENTRY POINT NAMES
*                   IGC009   SVC  DELETE ENTRY POINT
*
*CONTAINED          IEAQCS00  CONTENTS  SUPERVISOR MODULE
*
*ATTRIBUTES         RESIDENT,REENTRABLE,SUPERVISOR STATE,
*                   TYPE 1 SVC ROUTINE
*APPLICABILITY      OPTION  4  ONLY
*
*EXTERNAL REFERENCES
*                   IEA0EF00   TYPE 1  EXIT  ADDRESS
*SVCS USED          FREEMAIN
*
*INPUT              ADDRESS IN REGISTER  0  OF  8 BYTE NAME  OF MODULE
*OUTPUT             RETURN CODE  IN REGISTER  15
*                          GR15 = 0  DELETE SUCCESSFULLY COMPLETED
*                          GR15 = 4  DELETE UNSUCCESSFUL ,NAME NOT
*                                    FOUND ON  TASKS  LOAD LIST.
*ENTRY POINTS       IGC009 - DELETE SERVICE ROUTINE
*                   ENTERED BY THE SVC FLIH  BY AN LPSW
*                   PSW IS  DISABLED FOR MASKABLE INTERRUPTS EXCEPT
*                   MACHINE CHECK, IN  SUPERVISOR MODE, AND HAVE
*                   PROTECTION  KEY  OF 0
*EXIT POINTS        RETURN VIA  TYPE 1 EXIT PROCEDURE
*                   SUBROUTINE EXIT TO CDHKEEP - TO PERFORM
*                   HOUSEKEEPING OF CDENTRY.
*ERROR EXIT POINTS  NONE
*TABLES AND CONTROL
*BLOCKS REFERENCED  SAME  AS FOR  IGC008  - LOAD SERVICE ROUTINE
*RESTRICTIONS ON USE
*                   NONE
*NOTES              NONE
*        LOAD LIST ELEMENT FORMAT     8 BYTE  LENGTH
*
*             *****************************************
*             *                   *    *              *
*             *                   *    *              *
*             *     CHAIN         * R# *  CD POINTER  *
*             *                   *    *              *
*             *                   *    *              *
*             *****************************************
*                     4
         EJECT
         SPACE 2
IGC009   DS    0D
         BALR  BASEREG,0                SET UP BASE ADDRESS
         USING *,BASEREG
         L     BASEREG,LINKBASE         SET UP ADDRESSABILITY OVER
         USING CDLKBASE,BASEREG         ENTIRE MODULE.
         LR    NAMEREG,R0               LOAD INPUT PARAMETER IN NAMEREG
         SPACE 2
*        DELETE WILL SEARCH THE LOAD LIST FOR THE MODULE TO BE DELETED.
*        IF THE MODULE IS NOT ON THE LOAD LIST, THE LINK PACK AREA
*        CONTROL QUEUE IS SEARCHED. IF STILL NOT FOUND  A CODE OF 4  IS
*        RETURNED IN REG. 15. IF THE MODULE IS FOUND IN EITHER SEARCH
*        A CODE OF 0  IS RETURNED IN REG. 15.
         SPACE
         BAL   SUBREG2,CDLLSRCH         SEARCH LOAD LIST OFF TCB
         SPACE
*        CDLLSRCH WILL RETURN TO EITHER OF TWO LOCATIONS
*              IF MODULE IS FOUND  - BRANCH ON SUBREG2
*              IF NOT FOUND        - BRANCH ON SUBREG2+4
         SPACE
         B     LLFOUND               MODULE FOUND
         LA    15,4                     MODULE NOT FOUND
         SVC   3
         SPACE
LLFOUND  SR    WKREG2,WKREG2            ZERO REGISTER
         IC    WKREG2,4(LDLREG)         REDUCE COUNT IN LOAD LIST ELEM.
         LTR   WKREG2,WKREG2       ZERO                          64958
         BC    7,UC2               NO                            64958
         LA    WKREG2,1            USE 1                         64958
         MVI   4(LDLREG),X'01'                                   64958
UC2      EQU   *                                                 64958
         BCT   WKREG2,LLNON0            AND TEST FOR ZERO
CDLREMOV EQU   *                        IF COUNT IS ZERO CONTINUE HERE
         MVC   1(3,WKREG1),1(LDLREG)    REMOVE ELEMENT FROM LIST
         L     R0,GETMSK8               SET INPUT TO FREEMAIN
         LR    R1,LDLREG
         FREEMAIN R,LV=(0),A=(1)
         B     LLNON0+4
LLNON0   STC   WKREG2,4(LDLREG)
         SPACE
*        DECREMENT COUNT IN CDENTRY AND TEST FOR 0.
         SPACE
         TM    CDATTR,MIN               TEST IF THIS IS A MINOR ENTRY
         BZ    *+8                      A = NO , SKIP NEXT INS.
         L     CDEREG,CDXLMJP-1         LOAD ADDR OF MAJOR CDENTRY
         TM    CDATTR,NIP .        LOADED BY NIP                  M0102
         BO    CDNON0              YES, DON'T ADJUST COUNT        M0102
         IC    WKREG2,CDUSE             PICK UP USE COUNT IN CDENTRY
         BCTR  WKREG2,0                 *********
         STC   WKREG2,CDUSE             *********
         LTR   WKREG2,WKREG2            *********
         BNE   CDNON0                   *********
         NI    CDATTR,255-REN-SER       COUNT=0, SET FLAGS-TO PURGE
         LA    CDEREG,0(CDEREG)         INITIALIZE INPUT TO CDHKEEP
         L     RJJRET,HKPADDR           SET UP ENTRY POINT ADDRESS
         BALR  RJJRET,RJJRET            BRANCH  TO  CDHKEEP,RET REG SET
         SPACE
CDNON0   EQU   *
         SR    R15,R15                  INDICATE DELETE SUCCESSFUL
         SVC   3                        EXIT
         SPACE
CDLLSRCH LA    WKREG1,TCBLLS            PICK UP LOAD LIST START ADDR.
         BALR  WKREG2,0                ESTABLISH LOOP START ADDR
         L     LDLREG,0(WKREG1)        LLE ADDRESS IN LDLREG
         LTR   LDLREG,LDLREG            Q. IS LLE ADDR = 0
         BZ    4(SUBREG2)               A= YES;  RETURN  RET+4
         L     CDIREG,4(LDLREG)         PICK UP ADDR OF CDE FROM LLE
         CLC   CDNAMEJ(8),0(NAMEREG)    Q. ARE NAMES EQUAL
         LR    SUBREG1,CDIREG           ** TEMPORARY **
         LR    CDEREG,CDIREG           TEMPORARY
         BCR   8,SUBREG2                A= YES RETURN
         LR    WKREG1,LDLREG            PICK UP NEXT ADDR OF LLE  AND
         BR    WKREG2                  BRANCH TO LOOP START
         SPACE 2
RJJBAS   EQU   2         CDHKEEP BASE REG
RJJCDE   EQU   11        CDHKEEP CDENTRY ADDRESS
RJJRET   EQU   13        CDHKEEP RETURN REGISTER
         EJECT
         SPACE 2
*ROUTINE NAME     IGC012    SVC  SYNCH  SERVICE ROUTINE
*FUNCTIONS
*     1. PROVIDE TO A SUPERVISOR ROUTINE THE ABILITY TO TAKE A
*        SYNCHRONOUS  EXIT TO A USER ROUTINE.
*     2. AVOID  USING LINK  FOR THE  SYNCHRONOUS  EXIT  TO  ELIMINATE
*        THE CREATION AND DESTRUCTION OF  CONTENTS DIRECTORY ENTRIES
*        BY IDENTIFY THAT WOULD BE REQUIRED. AVOIDING  THE USE  OF
*        IDENTIFY IS  CRUCIAL FOR TRANSIENT AREA ROUTINES  THAT USE
*        SYNCH  INASMUCH AS  IDENTIFY'ING MIGHT CAUSE OVERLAYING
*        AND REFRESHING - A  TIME  CONSUMING  OPERATION.
*     3. ALLOW  THE  SUPERVISOR ROUTINE  TO REGAIN OPERATION IN
*        PRIVLEGED MODE , AFTER  THE  USER HAS EXECUTED  IN
*        PROBLEM  PROGRAM  MODE.
*      4. ALLOW STAE THE ABILITY TO SCHEDULE A SYNCHRONOUS EXIT    STAE
*        ROUTINE IN PRIVILEGED MODE.                               STAE
*ENTRY POINT NAMES      IGC012 -   SVC  SYNCH
*CONTAINED IN MODULE    IEAQCS00      - CONTENTS  SUPERVISOR MODULE.
*ATTRIBUTES             RESIDENT , REENTRABLE,   TYPE  2  SVC  ROUTINE.
*APPLICABILITY          OPTION  4   SYSTEM  ONLY
*EXTERNAL  REFERENCES- NONE
*SVCS USED -            NONE
*INPUT  -               REGISTER  15  CONTAINS BRANCH  ADDRESS
*                       REGISTERS 3,4,5   ENVIRONMENTAL  REGISTERS
*OUTPUT -               REGISTERS  1-13 ARE UNCHANGED
*                       REGISTER   14   SVC EXIT ADDRESS
*                       REGISTER   UNCHANGED (ENTRY POINT  ADDRESS)
*ENTRY POINTS     IGC012  - DESCRIBED  ABOVE
*EXIT POINTS      CDEPILOG ROUTINE- TO  STRUCTURE PRB  AND  PERFORM
*                           LINKAGE  IN  PROBLEM PROGRAM  STATE.
*ERROR EXIT POINTS   NONE
*TABLES AND CONTROL BLOCKS REFERENCED -
*
*                  TASK CONTROL BLOCK -  ACQUIRE    PROTECTION  KEY
*                  SVRB               -  USED BY  CDEPILOG.
*RESTRICTIONS ON USE - NONE
*NOTES - NONE
         EJECT
IGC012   DS    0D
         BALR  BASEREG,0
         USING *,BASEREG
         L     BASEREG,LINKBASE
         USING CDLKBASE,BASEREG
         LR    SUBREG1,R15
         NI    RBSTAB,255-SVRB
         OI    RBCDFLGS,SYNC           SET FLAG IN RBCDFLGS INDICATING
*                                      ENTRY TO MAINLINE BY SYNCH
         B     CDEPILOX
         EJECT
         SPACE 2
IEAQLCTA DC    A(IEAQLPAQ)             ADDRESS OF LINK PACK AREA
*                                      CONTROL QUEUE . ALSO IN CVT
RBCORE   DC    X'FF000020'
GETCDE   DC    X'FF000018'
GETWORK  DC    X'FC'
         DC    AL3(WKEND-WKWORK)
GETMSK8  DC    X'FF000008'             GETMAIN INPUT FOR 8 BYTES/SP255
LINKBASE DC    A(CDLKBASE)
BLDLMASK DC    X'00010036'
ROUNDOWN DC    X'00FFFFF8'             MASK TO REMOVE LOW 3 BITS
FRAMPSW  DC    X'FF050000'              PROBLEM STATE & ENABLED
XFETCHEP DC    A(IEWMSEPT)             ENTRY POINT TO PGM FETCH
BLDLENTP DC    A(IECPBLDL)             ENTRY POINT TO BLDL
XSWTEST  DC    A(IEA0DS02)             ENTPT TO TASK SWITCH TEST ROUTN.
TASKDISP DC    A(IEA0DS)               ENTPT TO TASK DSPTCHER
SVCDCBA  DC    A(SVCDCB)               ADDRESS OF SVC LIB DCB
LINKDCBA DC    A(LINKDCB)              ADDRESS OF LINK LIB DCB
TCBPTRS  DC    A(IEATCBP)              NEW / OLD SLOTS
OVRNAME  DC    CL8'IEWSZOVR'           NAME OF OVERLAY SUPERVISOR
TAX      DC    A(IEAQTR03)
HKPADDR  DC    A(CDHKEEP)
RMBRNCHA DC    A(RMBRANCH) .  ADCON FOR REGMAIN BRANCH ENTRY     A39418
DISABLE  EQU   *                                                  20472
HYBYTE   DC    X'00FFFFFF'             MASK TO ZERO HI BYTE ,TEST = 0
DEFLAG   DC    X'80000000' .       SET HI ORDER BYTE OF NAMEREG  A52250
*                                       NEGATIVE IF DE FORM GIVEN
HIBYTE   DC    X'FF000000'             MASK TO SAVE HIER ID        LCS0
K16F255  DC    X'FF000010' .            16 BYTES FROM SP 255      M0183
ONEOSIX  DC    X'00000106'                                        21016
EITOSIX  DC    X'00000806'                                        21016
         DS    0F                                                 21016
ABMESG   EQU   *                                                  21016
MESSAGE  WTO   'IEA703I                        MODULE ACCESSED         X
                ',MF=L,ROUTCDE=11,DESC=6
ENDOMES  EQU   *                                                  21016
         DS    0F                                                 21016
MESSZE   EQU   ENDOMES-ABMESG                                     21016
TRANTAB  DC    C'0123456789ABCDEF'                                21016
         SPACE 2                                                  21016
ALLOC    DSECT
*                   THE  CDALLOC SUBROUTINE USES A BRANCH TABLE TO
*                   DISTINGUISH  THE RESULTS  OF ITS ACTION. A BRANCH
*                   TABLE OF THE FOLLOWING NATURE IS EXPECTED:
RETURN1  B     0    AN AVAILABLE COPY CANNOT BE FOUND IN QUEUE SEARCHED
*                   PROCEED WITH OPERATION TO FETCH A COPY.
RETURN2  B     0    AN AVAILABLE COPY HAS BEEN FOUND -PROCEED TO
*                   COMPLETE REQUEST.
RETURN3  B     0    A COPY OF A  PROGRAM THAT IS NOT REUSABLE  HAS BEEN
*                   FOUND, IT MAY NOT BE USED AGAIN.
RETURN4  B     0    THE REQUEST MUST BE QUEUED. THE LOAD MODULE  IS
*                   SERIALLY REUSABLE AND IS CURRENTLY BEING USED.
RETURN5  B     0    A REQUEST MUST BE QUEUED PENDING THE AVAILIBILITY
*                   OF  THE  LOAD MODULE. THE MODULE IS BEING LOADED.
         EJECT
         SPACE 3
CDENTRYJ DSECT
CDATTRJ  DS    1C
CDCHAINJ DS    3C
CDROLLJ  DS    1C
CDRBPJ   DS    3C
CDNAMEJ  DS    8C
CDUSEJ   DS    1C
CDENTPTJ DS    3C
CDATTR2J DS    1C
CDXLMJPJ DS    3C
         SPACE 3
CDENTRY  DSECT
CDATTR   DS    1C        1 BYTE OF ATTRIBUTES WHICH FOLLOW:
NIP      EQU   X'80'                    FIXED LPA MOD. LOADED BY NIP
NIC      EQU   X'40'         NOT IN CORE -     - MODULE BEING FETCHED
REN      EQU   X'20'         REENTRABLE  -     - RE-USE CHARACTERISTIC
SER      EQU   X'10'         SERIALLY REUSABLE - RE-USE CHARACTERISTIC
NFN      EQU   X'08'         NON FUNCTIONAL    - RE-USE CHARACTERISTIC
MIN      EQU   X'04'         MINOR             - DESCRIBES CDENTRY
JPA      EQU   X'02'         JOB PACK AREA     - PACK AREA OF  MODULE
NLR      EQU   X'01'         NO LOAD RESTRICTION. NOT RESTRICTED TO
*                            USE BY LOAD MACRO.
CDCHAIN  DS    3C        3 BYTE CHAIN ADDRESS, POINTING TO NEXT CDENTRY
CDROLL   DS    1C        1 BYTE COUNT OF ROLL OUTS
CDRBP    DS    3C        3 BYTE ADDRESS OF  PRB
CDNAME   DS    8C        8 BYTE NAME
CDUSE    DS    1C        1 BYTE COUNT OF USE/RESPONSIBILITY
CDENTPT  DS    3C        3 BYTE RELOCATED ENTRY POINT
CDATTR2  DS    1C        1 BYTE OF ADDITIONAL ATTRIBUTES FLAGS :
SPZ      EQU   X'80'                   MODULE IN SUBPOOL ZERO     OSLOD
REL      EQU   X'40'         RELEASED                - MODULE PURGEABLE
XLE      EQU   X'20'         EXTENT LIST ESTABLISHED - MAIN STORAGE
*                               OCCUPIED BY MODULE IS DESCRIBED THEREIN
RLC      EQU   X'10'         ENTRY POINT HAS BEEN RELOCATED.
CDOLY    EQU   X'04'         MODULE IS IN OVERLAY FORM           A27026
CDXLMJP  DS    3C        3 BYTE ADDRESS OF AN EXTENT LIST OR MAJOR
*                            ENTRY.
         EJECT
         SPACE 3
RB       DSECT
RBSTART  EQU   *
         DS    9C
RBSIZE   DS    1C
RBSTAB   DS    2C
RBFTSVRB EQU   X'C0'              FLAG INDICATING AN SVRB         20021
RBCDFLGS DS    1C
*        FLAG SETTINGS FOR RBCDFLGS
LOAD     EQU   1                        ENTRY BY SVC LOAD
XCTL     EQU   2                        ENTRY BY SVC XCTL
SYNC     EQU   4                        ENTRY BY SVC SYNC
WAE      EQU   8                       .W/A ESTABLISHED FLAG.
RBCDE    DS    3C
RBOPSW   DS    8C
RBPGMQ   DS    4C
RBWCF    DS    1C
RBLINK   DS    3C
RBREGS   DS    64C
RBEXSAVE DS    12F .          SIZE OF SVRB EXTENDED SAVE AREA BD A26073
WORK     EQU   RBEXSAVE+8  .                                   BD 21016
RBXXDSP  EQU   RBOPSW+3                PRIORITY SLOT IN RB
         SPACE 3
PRB      DSECT
PRBSTART EQU   *
         DS    9C
PRBSIZE  DS    1C
PRBSTAB  DS    2C
PRBFLGS  DS    1C
PRBCDE   DS    3C
PRBOPSW  DS    8C
PRBPGMQ  DS    4C
PRBWCF   DS    1C
PRBLINK  DS    3C
         EJECT
         SPACE 3
WKAREA   DSECT
WKWORK   DS    150D
WKDCB    EQU   WKWORK+20               DCB PTR IN FETCH IOB        0169
WKBLDE   EQU   *
WKPREFX  DS    4C
WKNAME   DS    8C
WKTTRN   DS    4C
WKZBYTE  DS    1C
WKCBYTE  DS    1C
WKTTESD  DS    8C
WKATTR   DS    2C
WKLNTH   DS    5C
WKENTPT  DS    3C
WKTXORG  DS    3C
WKENTBK  DS    3C
WKNAMBK  DS    8C
         ORG   *-11
WKSCATR  DS    8C
WKENTSC  DS    3C
WKNAMSC  DS    8C
         ORG   *-11
         DS    1C
WKMAINEP DS    4C
WKMAINAM DS    8C
WKREGIS  DS    4F
WKCDADDR DS    1F
         SPACE 1                                                  20021
* THIS AREA OF WORKAREA IS  USED BY 'TASKLIB' AND THEN OVERLAYED  20021
* DURING FETCH PROCESSING.                                        20021
         SPACE 1                                                  20021
FLAG     EQU   WKAREA+552               TASKLIB SEARCH INDICATOR  20021
WKTCBSE  EQU   WKAREA+544         TASKLIB-TCB CONTAINING LAST DCB 20021
WKDCBSE  EQU   WKAREA+548        TASKLIB-LAST DCB SEARCH ARGUMENT 20021
WKEND    EQU   *
         EJECT
         SPACE 2
DE       DSECT
DENAME   DS    8C
DETTRN   DS    4C
DEZBYTE  DS    1C
DECBYTE  DS    1C
DEALIAS  EQU   X'80'                   ALIAS INDICATOR IN DE ENTRY
DETTESD  DS    8C
DEATTR   DS    2C
         SPACE
*ATTRIBUTES TESTED IN BLDL EXTRACTED DIRECTORY ENTRY
         SPACE
DEREEN   EQU   X'C0'    INDICATES THE LOAD MODULE IS REENTRABLE
DESERU   EQU   X'40'    INDICATES THE LOAD MODULE IS SERIALLY REUSABLE
DEOVLY   EQU   X'20'    INDICATES LOAD MODULE IN OVERLAY STRUCTURE
DETEST   EQU   X'10'    INDICATES LOAD MODULE RUNNING UNDER TESTRAN
DELODY   EQU   X'08'    INDICATES LOAD MODULE IS 'LOAD'ABLE ONLY
DESCAT   EQU   X'04'    INDICATES LOAD MODULE MAY BE SCATTER LOADED
DEXCUT   EQU   X'02'    INDICATES LOAD MODULE IS EXECUTABLE
         SPACE
DELNTH   DS    5C
DENTPT   DS    3C
DETXORG  DS    3C
DEENTBK  DS    3C
DENAMBK  DS    8C
         ORG   *-11
DESCATR  DS    8C
DEENTSC  DS    3C
DENAMSC  DS    8C
         EJECT
         SPACE 3
TCB      DSECT
TCBRBP   DS     4C       RB ADDR
TCBPIE   DS    4C       POINTER TO PROG INT ELEM
         DS    4C                                                 20021
TCBTIO   DS    F        POINTER TO TIOT                           21016
         DS    F                                                  21016
TCBTRN   DS    F                                                  20021
TCBTCP   EQU   X'04'     USED TO INDICATE TEST TCB                20021
         DS    F                                                  20021
TCBPKF   DS     1C       PROTECT KEY  IN  BITS 0-3
TCBFLGS  DS     5C       FLAG BYTES
         DS     1C
TCBDSP   DS     1C       DIPATCHING PRIORITY
TCBLLS   DS     4C       LOAD LIST ADDRESS
TCBJLB   DS     4C       JOBLIB DCB ADDRESS
TCBJLBDI EQU   TCBJLB-TCB     DISPLACEMENT IN TCB OF DCB ADDR.    20021
TCBJSE   DS     4C       JPACQ  ORIGIN
TCBGRS   DS    64C       GENERAL REGISTER SAVE AREA
         DS    12C
TCBITB   DS     4C       POINTER TO JOB STEP TCB
         DS    F                                                  20021
TCBOTC   DS    F         ADDR OF ORIGINATING TCB - MOTHER         20021
TCBMOTH  EQU   TCBOTC-TCB     DISPLACEMENT IN TCB OF MOTHER       20021
         DS    3F                                                 20021
TCBTSFLG DS    C         TIME SHARING FLAGS                       20021
TCBTSTSK EQU   X'80'     INDICATES THIS IS A SWAPPED TS TASK      20021
         DS    11C                                                20021
TCBNSTAE DS    4C                      PRESENT STAE ENVIRONMENT    STAE
*TCB SIZE     164
TCBFSM   EQU   TCBFLGS+2
         SPACE 4
XMSG     DSECT                                                    21016
         DS    11C                                                21016
XMCOMCD  DS    6C                                                 21016
         DS    1C                                                 21016
XMJOBNM  DS    8C                                                 21016
         DS    1C                                                 21016
XMSTEPNM DS    8C                                                 21016
         DS    17C                                                21016
XMMODNM  DS    8C                                                 21016
         AIF   (NOT &B(1)).NTSO8                                  20021
         SPACE 4                                                  20021
CVTSECT  DSECT                                                    20021
         CVT                                                      20021
         SPACE 4                                                  20021
         IKJTSCVT                                                 20021
.NTSO8   ANOP                                                     20021
         MEND
