         MACRO
         MCSPURG
         EJECT
* D030500-034000,D053000-053500,D058000,061000,D064500-066500 BE  M1540
* D840000-843000                                              BE  M1540
R1       EQU   1
HOLD     EQU   2
PARALIST EQU   2                        POINTER TO SVRB X SAVE AREA
UCMBASE  EQU   3                       POINTER TO THE UCM
RX       EQU   3
RY       EQU   5
RZ       EQU   6
SWITCH   EQU   7                       WQE INDICATOR AND BASE
R9       EQU   9
R11      EQU   11
PREFIX   EQU   13                      POINTER TO MCS UCM PREFIX AREA
R14      EQU   14
*
FROMSTAE EQU   X'01'
X01      EQU   X'01'
X02      EQU   X'02'
X04      EQU   X'04'
X08      EQU   X'08'
X10      EQU   X'10'
MUSTCOMP EQU   X'18'                   SYSTEM OR STEP MUST COMPLETE
X20      EQU   X'20'
X40      EQU   X'40'
NOTAVAIL EQU   X'40'
PERIOD   EQU   X'4B'
NAVGET   EQU   X'50'
X80      EQU   X'80'
COMMA    EQU   X'6B'
DUMPFLAG EQU   X'7F'
HARDCOPY EQU   X'BF'
NORMALX  EQU   X'BF'
COMCODE  EQU   X'C1'
PRESENT  EQU   X'DF'
WAITCODE EQU   X'F03'
WTRFLAG  EQU   X'FD'
FINAL    EQU   X'FF'
FF       EQU   X'FF'                                          BE  M1540
*
NONE     EQU   0
RQELNP   EQU   0
TEXTLNTH EQU   35
TCBPKE   EQU   28
N29      EQU   29
N32      EQU   32
SVRBXSA  EQU   96                       SVRB EXTENDED SAVE AREA
N119     EQU   119
N120     EQU   120
LASTTWO  EQU   128                      GETMAIN PARAMETER LIST
WQERTCD  EQU   152
*  ROMAN NUMERALS ARE USED FOR DISPLACEMENTS
I        EQU   1
II       EQU   2
III      EQU   3
IV       EQU   4
VII      EQU   7
VIII     EQU   8
XII      EQU   12
XVI      EQU   16
         EJECT
         L     UCMBASE,CVTCUCB          POINTER TO UCM
         DROP  CVTBASE
         USING UCM,UCMBASE
         CLC   N29(III,RB),UCMRQECB+I   RQE WAITED FOR BY TERM TASK
         BNE   JUMP                    NO
         XC    UCMRQECB,UCMRQECB       ZERO OUT THAT ECB
JUMP     EQU   *
         CLC   N29(III,RB),UCMWQECB+I   WQE WAITED FOR BY TERM TASK
         BNE   AROUND                   NO
         XC    UCMWQECB,UCMWQECB        ZERO OUT THAT ECB
AROUND   EQU   *
         SR    SWITCH,SWITCH            INITIALIZE SWITCH TO ZERO
*
*        THIS SWITCH INDICATES, WHEN
*              1. NEGATIVE - THE FOLLOWING GETMAIN FAILED.
*              2. ZERO     - NO WQE EXISTS.
*              3. POSITIVE - A WQE BUFFER EXISTS. IN THIS CASE THE
*                 SWITCH CONTAINS THE WQE ADDRESS AND IS USED AS
*                 ITS BASE.
*
         L     R6,UCMRPYQ               GET POINTER TO RQE QUEUE
         LA    R5,UCMRPYQ               TRAILING POINTER
         USING RQE,R6
TESTLINK LTR   R6,R6                    DOES A QUEUE EXIST
         BZ    ENDCHAIN                 NO NOTHING TO PURGE
         C     TCB,RQETCB               DOES RQE BELONG TO TERM TASK
         BE    PURGERQE                 YES,GET RID OF IT
         LR    R5,R6                    TRAILING POINTER
         L     R6,RQELKP                GET NEXT RQE ON CHAIN
         B     TESTLINK                 GO BACK TO TEST IT
PURGERQE EQU   *
         L     R1,RQEWQE           GET WQE PTR FROM RPQE          M4637
         LTR   R1,R1               IS THERE ONE ?                 M4637
         BZ    RESETID             NO - RESET THE REPLY ID        M4637
         LTR   SWITCH,SWITCH            IF SWITCH IS POSITIVE A WQE
         BP    INSERTID                 BUFFER EXISTS
         BM    RESETID                  IF NEGATIVE A GETMAIN FAILED
         LM    SWITCH,R9,UCMWEA         SET BUFFER SEARCH
         USING WQE,SWITCH
SCANBUF  CLI   WQEAVAIL,UCMFREE         AVAILABLE
         BE    GETRTRN                  YES BRANCH TO SET UP
         BXLE  SWITCH,R8,SCANBUF        ELSE TRY NEXT
NOWQE    EQU   *
         LCR   SWITCH,SWITCH            INDICATE NO WQE AVAILABLE
         B     RESETID                  PROCESS RQE
GETRTRN  EQU   *
         LH    R1,UCMWQNR               LOAD WQE COUNT AND UPDATE
         LA    R1,I(R1)
         STH   R1,UCMWQNR
         XC    WQELKP(IV),WQELKP        ZERO LINK POINTER
         XC    WQEXA(N32),WQEXA         ZERO OUT MCS INFO
         MVI   WQEAVAIL,NOTAVAIL        MARK BUFFER IN USE
BETA     EQU   *
         OI    WQEMCSF,X80              SHOW RTNG CODES EXIST
         LA    PREFIX,IV               GET TO MCS UCM PREFIX AREA
         LCR   PREFIX,PREFIX           NEED TWO'S COMPLEMENT TO
         AR    PREFIX,UCMBASE          SUBTRACT FROM UCM ADDRESS
         L     PREFIX,NONE(PREFIX)      PTR TO MCS PREFIX
         USING UCMPRFX,PREFIX
         L     R8,UCMCMID               GET LATEST ID NUMBER
         ST    R8,WQERTCT               STORE ID INTO WQE
         LA    R8,I(R8)                 INCREMENT FOR NEXT WQE
         ST    R8,UCMCMID               REPLACE ID NO IN UCM
         MVC   WQEPKE(I),TCBPKE(TCB)    PLACE PROTECT KEY IN WQE
         LA    R9,WQETXT+TEXTLNTH       @ FIRST ID IN EMER WQE
         LA    R10,III                  INCREMENT
         LA    R11,WQETXT+N120          COMPARAND FOR BXLE
         MVI   WQETXT,X40               BLANK OUT TEXT
         MVC   WQETXT+I(N119),WQETXT    PORTION OF WQE
         MVC   WQETXT(TEXTLNTH),EMERMSG MOVE EMERGENCY MESSAGE TEXT
INSERTID EQU   *
         MVC   NONE(II,R9),RQEID        MOVE ID TO WQE
         MVI   II(R9),COMMA             MOVE COMMA AFTER ID
         BXH   R9,R10,ENDCHAIN          IF MORE ROOM CONTINUE
*                                       ELSE LINK UP WQE
RESETID  EQU   *
         MVC   RQELNP(IV,R5),RQELNP(R6) DE-CHAIN RQE
         NC    RQEID(II),MASKID         KILL ZONES IN ID
         SR    R1,R1                    CLEARED
         IC    R1,RQEID                 TENS DIGIT
         LR    R8,R1
         SLL   R1,II                   MULTIPLY BY 4
         AR    R1,R8                   ADD ONE (NET MULT BY 5)
         SLL   R1,I                    MULT BY 2 (NET MULT BY 10)
         IC    R8,RQEID+I               GET UNITS
         AR    R1,R8                    CONVERTED TO BINARY
         LA    R8,VII
         NR    R8,R1                    NOW HAVE REMAINDER IN R8
         SRL   R1,III                   DIVIDE ID BY 8
         LA    R15,X80
         SRL   R15,NONE(R8)             SHIFT MASK NUMBER OF TIMES
*                                       INDICATED BY REMAINDER
         LA    R1,UCMRPYI(R1)           ADD INDEX TO UCMBASE
         EX    R15,RESETBIT             EXCL OR OUT BIT
         DROP  SWITCH
         L     R1,RQEXB                 GET PTR TO ASSOC. WQE
         LTR   R1,R1               IS THERE ONE ?                 M4637
         BZ    DELTA               NO - SKIP WQE PROCESSING       M4637
         USING WQE,R1
         OI    WQEXA,WQEPURGE           LET PROCESSING MODULES KNOW
*                                       THIS WQE IS NO LONGER GOOD
         NI    WQEXA,PRESENT            TURN OFF FLAG SAYING RQE EXISTS
         OI    UCMFLG1,UCMSYSI    ALERT COMMTASK FOR CLEANUP  BE A50609
         CLC   WQEUSE(I),WQERTCT       IF USE CT = ORIGINAL USE COUNT
*                                      (IT HAS NOT GONE ANYWHERE YET)
         BNE   GAMMA                   NO
         NI    WQEXA,HARDCOPY          TURN OFF Q FOR HARD COPY FLG
GAMMA    EQU   *
         LTR   SWITCH,SWITCH            IS THERE A WQE FOR EMER MSG
         BNP   DELTA                    NO GO AROUND
         TM    WQEMCSF,X80              DO ROUTING CODES EXIST IN
*                                       ASSOCIATED WQE
         BZ    DELTA                    NO GO AROUND
         OC    WQERTCD(II,SWITCH),WQERTCD(R1)  ROUTE EMER MSG TO ALL
*                                       WHO RECEIVED FIRST WTORS
DELTA    EQU   *
         DROP  R1
         LR    R1,R6
         DROP  R6
         USING RQE,R1
         L     R6,RQELKP
         TM    RQEAVAIL,X10             RQE GOTTEN THRU GETMAIN
         BO    FREERQE                  YES FREE IT
         MVI   RQEAVAIL,UCMFREE         MARK RQE AVAILABLE
         B     DECREMEN                 DECREMENT COUNT           M3899
FREERQE  EQU   *
         FREEMAIN  R,SP=255,LV=RQESIZE,A=(1)
         B     TESTLINK                 CHECK NEXT                M3899
DECREMEN EQU   *
         LH    R1,UCMRQNR               DECREMENT RQE COUNT
         BCTR  R1,R0                    DECREMENT
         STH   R1,UCMRQNR
ENDX     EQU   *
         B     TESTLINK                 CHECK NEXT
         USING WQE,SWITCH
ENDCHAIN EQU   *
         LTR   SWITCH,SWITCH            IS THERE AN EMERGENCY WQE
         BNP   TESTRQES                 NO
         LR    R10,R9                   ADDR OF LAST TEXT POS+1
         LA    R15,WQETXT               ADDR OF FIRST TEXT POSITION
         SR    R10,R15                  TEXT COUNT FOR CCW
         ST    R10,WQENBR               STORE COUNT IN WQE
         BCTR  R9,R0                    NOW POINTS TO LAST TXT POS
         MVI   NONE(R9),PERIOD          OVERLAY COMMA WITH PERIOD
         L     R9,UCMWTOQ               PTR TO WQE CHAIN
         LTR   R9,R9                   IS THERE ANY QUEUE
         BNZ   OMEGA                   IF NO Q GO AROUND
         ST    SWITCH,UCMWQEND         THIS IS ALSO LAST IN Q IF NO
OMEGA    EQU   *
         ST    R9,WQELKP               Q ALSO MAKE IT FIRST ON Q
         ST    SWITCH,UCMWTOQ
TESTRQES EQU   *
         LTR   R6,R6                    ANY MORE RQE'S
         BZ    MLWSRCH             NO WE CAME HERE BECAUSE    MA S21002
*                                       WE RAN OUT OF RQE'S
         SR    SWITCH,SWITCH            INDICATE A WQE NEEDED
         B     RESETID                  WE MUST HAVE COME HERE
*                                       BECAUSE WE RAN OUT OF
*                                       MESSAGE TEXT MUST GO BACK
*                                       TO FINISH UP ON THIS RQE
*                                                             MA S21002
* A SEARCH OF THE SYSTEM OUTPUT Q(UCMWTOQ) IS MADE TO SEE     MA S21002
* THAT ALL MULTI LINE WTOS ISSUED BY THE ENDING TASK ARE      MA S21002
* ISSUED COMPLETELY, THAT IS, WITH THE END BIT ON(X'10') ON   MA S21002
* IN THE WQE FOR THE LAST ISSUED LINE. IF IT IS NECESSARY TO  MA S21002
* FORCE AN END FOR ANY MLWTOS BELONGING TO THE ENDING TASK,   MA S21002
* A 'CHAIN ALTERED' INDICATOR IS ALSO SET IN THE WQE TO FREE  MA S21002
* UP ANY CONSOLES THAT WOULD OTHERWISE BE WAITING FOR AN END  MA S21002
* LINE TO BE ISSUED BY THE TASK.                              MA S21002
MLWSRCH  EQU   *                   BEGINNING OF SEARCH        MA S21002
         L     SWITCH,UCMWTOQ      GET FIRST WQE POINTER      MA S21002
MLW010   LTR   SWITCH,SWITCH       ARE WE AT END OF CHAIN     MA S21002
         BZ    EXITDOM             YES, SEE IF DOM NEEDED     MA S21002
         CLI   WMJMMLW,ZERO        WQE FOR MULTI LINE WRITE   MA S21002
         BE    MLW030              NO, GO ON TO NEXT WQE      MA S21002
         C     TCB,WMJMTCB         ENDING TASKS TCB FOUND     MA S21002
         BNE   MLW030              NO, GO ON TO NEXT WQE      MA S21002
         XC    WMJMAECB,WMJMAECB  CLEAR AVAILABLE ECB         BE A51715
*                                                             MA S21002
* MLWTO FOUND FOR ENDING TASK. IF UNENDED, END MUST BE FORCED MA S21002
*   IF NO MINORS EXIST, THE END IS FORCED IN THE MAJOR WQE    MA S21002
*                                                             MA S21002
         L     R9,WMJMMIN          BASE FOR FIRST MINOR       MA S21002
         SR    R8,R8              CLEAR BOTTOM HALF SWITCH    BE  M1540
         LA    R15,ONE            USED TO SET BOTTOM HALF REG BE  M1540
         LTR   R9,R9               DO ANY MINORS EXIST        MA S21002
         BNZ   MLW037                                         BE  M1540
         TM    WMJMLTYP,WMJMLTYD   IS END SET IN MAJOR        MA S21002
         BO    MLW030              YES, GO GET NEXT WQE       MA S21002
         OI    WMJMLTYP,WMJMLTYD   FORCE END BIT ON IN MAJOR  MA S21002
MLW020   OI    WMJMMLW,WMJMMLWD    SET CHAIN ALTERED IN MAJOR MA S21002
MLW030   L     SWITCH,WMJMUC       ADDRESS NEXT WQE ON CHAIN  MA S21002
         LA    SWITCH,ZERO(SWITCH) CLEAR HI ORDER BYTE        MA S21002
         B     MLW010              CONTINUE SEARCH            MA S21002
MLW037   TM    WMJMMLW,WMJMMLWH   IS FIRST MINOR EMPTY        BE  M1540
         BZ    MLW050             NO, FIND LAST LINE OF TEXT  BE  M1540
         NI    WMJMMLW,FF-WMJMMLWH  TURN OFF MINOR EMPTY BIT  BE  M1540
*                                                             MA S21002
* THE ABOVE CODE IS ASSEMBLED TO ADDRESS MAJOR WQES USING R7  MA S21002
* THE SEQUENCE BELOW USES R9, ADDRESSING MINOR WQES ONLY      MA S21002
* REG 9 WILL POINT TO THE NEW LINE TO BE BUILT. IF A DUMMY    BE  M1540
* MINOR IS BEING BUILT, REG 9 WILL POINT TO IT                BE  M1540
*                                                             MA S21002
         USING WQE,R9              FROM R7 TO R9              MA S21002
BUILDMIN MVC   WMNMUC1,ZERO(SWITCH) COPY USE COUNT FROM MAJOR BE  M1540
         XC    WMNMNX1,WMNMNX1    INDICATE LAST LINE OF TEXT  BE  M1540
         MVI   WMNMLT1,WMNMLT1D   SET END BIT                 BE  M1540
         MVI   WMNMNX1,ZERO       INDICATE ZERO TEXT LENGTH   BE  M1540
         OI    WMNMML1,WMNMML1C   INDICATE MINOR WQE          BE  M1540
         B     MLW020             SET CHAIN ALTERED FLAG      BE  M1540
*   MLW050 IS THE LOOP ENTRY FOR THE MINOR WQE SEARCH         MA S21002
MLW050   NC    WMNMNX1,WMNMNX1     ARE WE ADDRESSING LAST ONE MA S21002
         BNZ   MLW040              NO, GO FET NEXT TEXT LINE  MA S21002
         TM    WMNMLT1,WMNMLT1D    IS IT ENDED                MA S21002
         BO    MLW030              YES, THIS ONE OK, NEXT WQE MA S21002
         LTR   R8,R8              Q. IS BOTTOM HALF USED      BE  M1540
         BZ    MLW042             NO - QUEUE UP END LINE      BE  M1540
         DROP  R9                                             BE  M1540
         USING WQE,SWITCH         ADDRESS MAJOR FOR DUMMY     BE  M1540
         LA    R8,WMJMRESA        SET UP TO LINK DUMMY MINOR  BE  M1540
         MVI   WMJMRESA+4,WMNMML1F FLAG IT AS DUMMY           BE  M1540
         B     LINKUP                                         BE  M1540
MLW042   EQU   *                                              BE  M1540
         USING WQE,R9             ADDRESS MINOR FOR LINKUP    BE  M1540
         LA    R8,WMNMUC2         POINT REG 8 TO BOTTOM HALF  BE  M1540
LINKUP   EQU   *                                              BE  M1540
         O     R8,WMNMUC1         RESERVE LINE COUNT OF LAST  BE  M1540
         ST    R8,WMNMUC1         LINK UP NEW END LINE        BE  M1540
         LR    R9,R8              BASE NEW END LINE           BE  M1540
         B     BUILDMIN           BUILD IT                    BE  M1540
MLW040   EQU   *                                              BE  M1540
         XR    R8,R15             SET UP TOP-BOTTOM SWITCH    BE  M1540
*                                    OFF=TOP,ON=BOTTOM        BE  M1540
         L     R9,WMNMUC1         ADDRESS NEXT LINE IN R9     BE  M1540
         B     MLW050             CHECK FOR LAST LINE         BE  M1540
         DROP  R9                        MA S21002
*                                                             MA S21002
* END OF CODE FOR MLWTO SEARCH SUBROUTINE                     MA S21002
*                                                             MA S21002
EXITDOM  EQU   *
         STM   R0,R13,UCMSAVE3          SAVE REGISTERS
         CL    TCB,TCBJST(TCB)    CHECK IF JOBSTEP TCB        BE  M2509
TCBJST   EQU   X'2C'              DISP TO JOBSTEP TCB PTR     BE  M2509
         BNE   BYPASDOM            PROTECT KEY                BE  M1721
         LR    R13,UCMBASE             GET UCM ADDRESS
         SH    R13,MCSUCMLN
         L     R13,0(R13)
         SR    R0,R0                    CLEAR THREE HI BYTES      M1160
         IC    R0,TCBPKE(TCB)           PROTECT KEY OF THIS TASK
         LTR   R0,R0                    IS THIS A SUPERVISOR      M1160
         BZ    BYPASDOM                 YES. DON'T GO TO DOM      M1160
         L     R15,UCMDOMRT            ENTRY POINT OF DOM ROUTINE
         BALR  R14,R15                  DELETE BY PROTECT KEY
         DROP  UCMBASE
BYPASDOM EQU   *                                                  M1160
         L     CVTBASE,CVTPTR           MUST RE-ESTABLISH UCM BASE
         USING CVTDSECT,CVTBASE
         L     R15,CVT0PT01            ENTRY POINT TO POST
         L     UCMBASE,CVTCUCB         POINTER TO UCM
         DROP  CVTBASE
         USING UCM,UCMBASE
         LM    R0,R13,UCMSAVE3          RESTORE REGISTERS
*
*   POST THE WTO, SET UP PARAMETER REGISTERS 10, 11, 12 TO POST RTN
*
         LR    HOLD,R15                 SAVE POST E.P. FOR 2ND TIME
         SR    R10,R10                 ZERO COMPLETION CODE TO POST
         LA    R11,UCMOECB             POINT TO ECB TO BE POSTED
         L     TCB,UCMPXA              POINTER TO COMM. TASK TCB
         BALR  R14,R15                 BRANCH TO POST
         CLC   UCMRQNR(I),UCMRQLM      IS COUNT BELOW LIMIT
         BNL   EXIT                    NO DON'T POST UCMRQECB
         SR    R10,R10                 ZERO COMPLETION CODE TO POST
         LA    R11,UCMRQECB            POINT TO ECB TO BE POSTED
         L     TCB,UCMPXA              POINTER TO COMM. TASK TCB
         LR    R15,HOLD                 POST E.P. WAS KEPT IN HOLD
         BALR  R14,R15                 BRANCH TO POST
EXIT     EQU   *
         LM    R0,R13,UCMSAVE3          RESTORE REGISTERS
         B     OUTMAC                   BRANCH AROUND CONSTANTS
         DS    0F
RESETBIT XI    NONE(R1),NONE            FOR EXECUTE INSTRUCTION  A32596
EMERMSG  DC    CL35' IEE400I THESE MESSAGES CANCELLED- '
MASKID   DC    X'0F0F'                 USED TO KILL ZONES
MCSUCMLN DC    H'4'
OUTMAC   EQU   *
     EJECT
WQE      DSECT
         IEECVMUG WQE
         ORG   WQE                                            MA S21002
         IEECVMUG WQEMIN                                      MA S21002
         ORG   WQE                                            MA S21002
         IEECVMUG WQEMAJ                                      MA S21002
         SPACE 5
RQE      DSECT
         IEECVMUG RQE
         SPACE 5
UCM      DSECT
         IEECUCM
UCMFLG1  EQU   UCMSFLGS+1                                     BE A50609
         EJECT
         MEND
