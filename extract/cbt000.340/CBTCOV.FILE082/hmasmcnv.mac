          /* ROUTINE TO PACK 8 CHARACTER DLIB NAMES INTO 7 CHARACTERS*/
          /* AND UNPACK 7 CHAR DLIB NAMES INTO 8 CHARACTERS.         */
          /* TO PACK A DLIB NAME PUT THE 8 CHARACTER DLIB NAME INTO  */
          /* CNVDLIB8 AND CALL HMAPACK, THE 7 CHARACTER PACKED NAME  */
          /* IS RETURNED IN CNVDLIB7.                                */
          /* TO UNPACK A DLIB NAME MOVE THE 7 CHARACTER PACKED NAME  */
          /* INTO CNVDLIB7 AND CALL HMAUNPK, THE 8 CHARACTER DLIB    */
          /* NAME IS RETURNED IN CNVDLIB8.                           */
          /* THESE ROUTINES SHOULD BE CALLED WHENEVER ANY REFERENCE  */
          /* IS MADE TO AND OF THE DLIB AREAS THAT ARE DEFINED AS    */
          /* ONLY 7 CHARACTERS.                                      */
 HMASMCNV: PROC;                    /* 8 CHAR DLIB PACK/UNPK         */
    DCL
      CNVDLIB8 CHAR(8) BDY(WORD);   /* 8 CHAR DLIB NAME              */
    DCL
      1 DLIB8WD(2) FIXED(32) DEF(CNVDLIB8),
       3 DLIB8CH CHAR(4);            /*                              */
    DCL
      1 DLB7AREA BDY(WORD),         /* 7 CHAR DLIB AREA              */
      3 * CHAR(1),                  /* UNUSED                        */
      3 CNVDLIB7 CHAR(7);           /* 7 CHAR DLIB NAME              */
    DCL
      1 DLIB7WD(2) FIXED(32) DEF(DLB7AREA), /*                       */
      3 DLIB7CH CHAR(4);                  /*                         */
    DCL
      (CNVCNT1,CNVCNT2) FIXED(15);  /* LOOP COUNTERS                 */
    DCL
      CNVREG2 FIXED(32) REG(2);     /* REG FOR CONVERSION            */
    DCL
      CNVREG3 FIXED(32) REG(3);     /* REG FOR CONVERSION            */
    DCL
      CNVTDLIB FIXED(8) CONSTANT(254);/* INDICATES CONVRTED 8 CHAR
                                     DLIB NAME ('FE'X)               */
    DCL
      CNVSPCH FIXED(8) CONSTANT(128);   /* TO SET SPECIAL CHAR       */
    DCL
      CNVNRCH FIXED(8) CONSTANT(192);   /* TO SET NORMAL CHAR        */
    DCL
      ATSIGN BIT(8) CONSTANT('00111100'B),/* @ SPECIAL CHAR          */
      DOLSIGN BIT(8) CONSTANT('00011011'B),/* $ SPECIAL CHAR         */
      LBSIGN BIT(8) CONSTANT('00111011'B);/* # SPECIAL CHAR          */
      /* ENTRY POINT TO PACK 8 CHARACTER DLIB NAMES INTO             */
      /* 7 CHARACTERS                                                */
 HMAPACK: ENTRY;                    /* SMP 8 TO 7 CHAR DLIB PACK
                                    ROUTINE                          */
    RFY
      (CNVREG2,CNVREG3) RSTD;
    IF CNVDLIB8(8)=' '              /* IS THIS NAME 8 CHAR?          */
      THEN                          /* NO                            */
      CNVDLIB7=CNVDLIB8(1:7);       /* JUST MOVE FIRST 7 CHAR OF NAME
                                    OVER TO RETURN AREA              */
    ELSE                            /* IF IT IS 8 CHAR NAME          */
      DO;                           /* MUST PACK IT                  */
        DO CNVCNT1=1 TO DIM(DLIB8WD);/* PACK ONE WORD AT A TIME      */
          CNVREG3=DLIB8WD(CNVCNT1); /* PICK UP 4 CHAR TO BE PACKED   */
          CNVREG2=0;                /* ZERO OUT REG TO HOLD PACKED
                                    CHARACTER                        */
           DO CNVCNT2=1 TO LENGTH(DLIB8CH);/* LOOP THRU 4 CHAR PER WRD*/
            SLL(CNVREG3,2);         /* SHIFT OUT HIGH 2 BITS OF THE
                                    LEFTMOST CHAR IN CNVREG3         */
            SLDL(CNVREG2,6);        /* SHIFT THE REMAINING LOWER 6
                                    BITS INTO THE OTHER CNV REG      */
          END;                      /* END 4 CHAR SHIFT GROUP        */
          DLIB7WD(CNVCNT1)=CNVREG2; /* STORE THE CONVERTED 4 CHAR IN
                                    THE 7 CHAR CONVERSION AREA       */
        END;                        /* END 2 WORD CONVERSION GROUP   */
        CNVDLIB7(2:4)=CNVDLIB7(1:3);/* SHIFT THE FIRST CONVERTED WORD
                                    OVER 8 BITS SO THAT IT WILL BE
                                    POSITIONED NEXT TO THE OTHER CHAR*/
        CNVDLIB7(1)=CNVTDLIB;       /* SET FIRST CHAR OF CONVERTED
                                    AREA TO THE SPECIAL CONVERTED DLIB
                                    CHARACTER                        */
      END;                          /* END CONVERSION CODE           */
    RETURN;                         /* RETURN TO CALLING POINT       */
      /* ENTRY POINT TO UNPACK 7 CHARACTER DLIB AREAS INTO           */
      /* 8 CHARACTER RETURN AREA                                     */
 HMAUNPK: ENTRY;                    /* SMP 7 TO 8 CHAR DLIB UNPACK
                                    ROUTINE                          */
    IF CNVDLIB7(1)=CNVTDLIB         /* IS THIS PACKED DLIB?          */
      THEN                          /* YES                           */
      DO;                           /* THEN MUST UNPACK IT           */
        CNVDLIB7(1:3)=CNVDLIB7(2:4);/* SHIFT TO ALIGN FOR LOAD       */
        DO CNVCNT1=1 TO DIM(DLIB7WD);/* DO 2 WORD OF CHAR            */
          CNVREG3=DLIB7WD(CNVCNT1); /* PICK UP WORD OF PACKED BITS   */
          SLL(CNVREG3,8);           /* SHIFT OUT HIGH ORDER BYTE     */
          DO CNVCNT2=1 TO LENGTH(DLIB8CH);/* DO 4 CHAR PER WORD      */
            CNVREG2=0;              /* INITIALIZE REG TO HOLD CHAR   */
            SLDL(CNVREG2,6);        /* SHIFT 6 BITS TO CNV REG
                                    THE REGISTER                     */
            IF CNVREG2=ATSIGN       /* @ SPECIAL CHAR?               */
                ×CNVREG2=DOLSIGN    /* $ SPECIAL CHAR?               */
                ×CNVREG2=LBSIGN     /* # SPECIAL CHAR?               */
              THEN                  /* YES                           */
              CNVREG2=CNVREG2+CNVSPCH;/* TURN ON HIGH ORDER BIT OF
                                    BYTE TO GET CONVERTED TO HEX     */
            ELSE                    /* FOR ALL OTHER CHAR            */
              CNVREG2=CNVREG2+CNVNRCH;/* TURN ON HIGH TWO BITS       */
            DLIB8CH(CNVCNT1,CNVCNT2)=CNVREG2;/* STORE CHAR IN
                                    CONVERTED AREA                   */
          END;                      /* END 4 CHAR GROUP              */
        END;                        /* END 2 WORD GROUP              */
      END;                          /* END NEED CONVERT GROUP        */
    ELSE                            /* NIT 8 CHAR DLIB NAME          */
      CNVDLIB8=CNVDLIB7;            /* JUST MOVE DLIB NAME TO
                                    CONVERTED AREA                   */
    RETURN;                         /* RETURN TO CALLING POINT       */
    RFY
      (CNVREG2,CNVREG3) UNRSTD;
    END HMASMCNV;                   /* END 8 CHAR DLIB NAME PACK AND
                                    UNPACK ROUTINES                  */
