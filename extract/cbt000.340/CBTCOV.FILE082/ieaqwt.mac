         MACRO
         IEAQWT &TSO=                                             20021
         LCLB   &B(1)             LOCAL SWITCH                    20021
&B(1)    SETB    ('&TSO' EQ 'YES')                                20021
         TITLE '**WAIT * POST * TCB SWITCHING **'
IGC001   START
         SPACE 2
*WAITING ECB
*************************
* S     *               *
*  BIT  * WAITING RB'S  *
*   ON  *   ADDRESS     *
*************************
         SPACE 1
*POSTED ECB
*************************
* 1       BITS 2-31     *
*  BIT     COMPLETION   *
*   ON      CODE        *
*************************
         SPACE 2
* KEYS FOR OPERATIONAL SYMBOLS.
*        INITIATE                       $
*        EXIT-NORMAL                    *
*        EXIT-SUBROUTINE                **
*        EXIT-ERROR                     ***
*        SPECIAL ENTRY POINT            /
*        INTERROGATE                    Q.
         SPACE 1
* TCB DISPLACEMENTS.
TCBRBP   EQU   0         POINTER TO TOP RB OF TCB'S RB QUEUE
TCBPKF   EQU   28                      PROTECT KEY FIELD           MTS0
TCBFLG   EQU   29                      BEGINNING TCB FLAG BYTES    MTS0
TCBGRS1  EQU   52        TCB'S GENERAL REG. 1 SAVE AREA
TCBTME   EQU   120                     ADDRESS OF TIMER QUEUE ELEM MTS0
TCBJSTCB EQU   124                     ADDRESS OF JOB STEP TCB     MTS0
TCBNTC   EQU   128                     ADDRESS OF SISTER TCB       MTS0
TCBOTC   EQU   132                     ADDRESS OF ORIGIN TCB       MTS0
TCBLTC   EQU   136                     ADDRESS OF DAUGHTER TCB     MTS0
TCBTCT   EQU   164      TCT OFFSET                                  SMF
TCBABTRM EQU   X'20'    BIT SET DURING ABTERM PROCESSING         A22207
TCBFA    EQU   X'80'    BIT SET DURING ABEND PROCESSING          A22207
TCBFLGS  EQU   X'1D'                                               4868
TCBJSCB  EQU   X'B4'     DISP TO JSCB PTR                         20002
         SPACE 1
* RB DISPLACEMENT.
RBSTAB   EQU   10        STATUS AND ATTRIBUTE FIELD
WCTSAVE  EQU   X'18' .  OFFSET TO XSNT-SVRB WAIT COUNT FIELD     A33247
RBWCF    EQU   28        WAIT COUNT FIELD
RBLINK   EQU   28        LINK FIELD (POINTS TO NEXT RB OR TCB)
SVRBXR1  EQU   36        SVRB REGISTER 1 SAVE AREA
IRBXR1   EQU   36       IRB REG.1 SAVE AREA
         SPACE 1
* TQE DISPLACEMENTS.                                               MTS0
TQEFLGS  EQU   0                       FLAG BYTE IN THE TQE        MTS0
TQEVAL   EQU   12                      TOX/TIME REMAINING          MTS0
TQESAV   EQU   20                      CPU TIME REMAINING S.A.     MTS0
         SPACE 1                                                   MTS0
* TQE FLAG DESCRIPTIONS                                            MTS0
* BIT 0 - TQE OFF TIMER QUEUE                                      MTS0
* BIT 1 - TOD OPTION SPECIFIED                                     MTS0
* BITS 2 AND 3                                                     MTS0
*   00  - TUINTVL REQUESTED                                        MTS0
*   10  - RESERVED                                                 MTS0
*   01  - BINTVL REQUESTED                                         MTS0
*   11  - DECINTVL REQUESTED                                       MTS0
* BIT 4 - INTERVAL IS COMPLETE                                     MTS0
* BIT 5 - EXIT SPECIFIED                                           MTS0
* BITS 6 AND 7                                                     MTS0
*   00  - TASK OPTION                                              MTS0
*   10  - SUPERVISOR ELEMENT                                       MTS0
*   01  - WAIT REQUEST                                             MTS0
*   11  - REAL OPTION                                              MTS0
         SPACE 1                                                   MTS0
* GENERAL EQUATES
CVTPTR   EQU   X'10' .                 ADDRESS OF CVT POINTER     20021
NEWPTR   EQU   0         LOGICAL ADDRESS TO 'NEW'
ERRWAIT1 EQU   X'0101'   WAIT'S, WAIT COUNT TO BIG
ERRWAIT2 EQU   X'0201'   WAIT ECB ADDRESS INVALID
ERRWAIT3 EQU   X'0301'   WAIT TRYING TO PUT WAITING ECB IN WAIT
ERRPOST1 EQU   X'0102'   POST ECB ADDRESS INVALID
ERRPOST2 EQU   X'0202'   POST ECB'S RB ADDRESS INVALID
RBECBWT  EQU   X'01'     RB'S ECB SEARCH INDICATOR
RBWAITP  EQU   X'08' .                 RB WAITING ON ECB      CI A45983
XSNTSVRB EQU   X'D0' .  RBSTAB BITS TO TEST FOR XSNT SVRB        A33247
LHOPSW   EQU   16        OPSW DISPLACEMENT
RHOPSW   EQU   20        RIGHT HALF OPSW DISPLACEMENT
SVCOPSW  EQU   32                      LOW CORE ADDR SVC OLD PSW   MTS0
ECBPTFLG EQU   X'40'     ECB POST FLAG
CVTQTE00 EQU   104                     ADDRESS ENQUEUE TIMER RTN   MTS0
RECBWTF  EQU   X'7F'     RESET ECB'S WAIT FLAG/LAST ECB PTR
LSTIND   EQU   X'80'     LAST ECB INDICATOR
TCBIND   EQU   X'80'     RBLINK INDICATES TCB ADDRESS
ECBWTFLG EQU   X'80'     ECB WAIT FLAG
RBFTP    EQU   X'C0'     RB TYPE INDICATOR
MACHSIZE EQU   X'A4'     CVT DISP. FOR MACHINE SIZE
SUPTST   EQU   X'F0'     PSW AMWP
RRBECBWT EQU   X'FE'     RESET RB'S ECB SEARCH FLAG
ANYONE   EQU   X'FF'     TEST FOR ANY BIT IN A GIVEN BYTE
TCTWLMT  EQU   44       TCT JOB/STEP MAX WAIT TIME LIMIT            SMF
TSCVTPTR EQU   228 .                   CVT DISP FOR TSCVT PTR     20021
CVTTSRDY EQU   X'80' .                 TIME SHARING ACTIVE FLAG   20021
TSTASK   EQU   X'80' .                 INDICATES SWAPPED TIME-    20021
*                                      SHARING TASK               20021
TCBTSFLG EQU   148 .                   DISP TO TIME SHARING FLAG  20021
FOUR     EQU   4 .                                                20021
L16      EQU   16 .                    LENGTH OF IPPB             20021
R15SAV   EQU   60 .                    DISP IN SVC SAVE AREA TO   20021
*                                      REGISTER 15 WORD           20021
TRSVRB   EQU   X'D0' .                 INDICATE TRANS. SVRB       20021
ZERO     EQU   0 .                     CONSTANT                   20021
ONE      EQU   1 .                     SHIFT OUT TJID INDICATOR   20021
TJIDTEST EQU   6                       TEST TJID BIT REGISTER     20021
         SPACE 2
* REGISTER EQUATES.
         SPACE 1
* WAIT AND POST
XRECB    EQU   1         INPUT ECB OR ECB LIST ADDRESS
XRERCODE EQU   1         ERROR CODE
XRTSTADR EQU   2         ADDRESS OF VALIDITY CHECK ROUTINE
TQELNKRG EQU   2                       LINK REG FOR TQE DEQ RTN    MTS0
TCTPTR   EQU   2        TCT ADDRESS                                 SMF
COMMREG  EQU   2         DSECT REG TO FIND COMMUNICATION'S ECB    20002
XRCVT    EQU   3         CVT TABLE ADDRESS
ERRBASE  EQU   3 .       BASE TO ALLOW USE OF ERROR SUBROUTINE    M3988
XROTCB   EQU   4         ADDRESS OF 'OLD' TCB OR WAITING TCB
TCBREG   EQU   4                       ADDRESS OF 'OLD' TCB        MTS0
XRSAV6   EQU   6                                                   MTS0
CHECKREG EQU   6         ECB ADDR REG FOR COMMCHEK SUBROUTINE     20002
SELREG   EQU   9                       WORK REGISTER               MTS0
XRECBPTR EQU   10        UPDATED ECB ADDRESS
ATCBREG  EQU   10                      ALTERNATE TCB REGISTER      MTS0
XRSAVE   EQU   11        SAVE REGISTER FOR REG. 1
XRLINK   EQU   12        LINK REGISTER
LINKREG  EQU   12                      LINK REGISTER               MTS0
XRABTERM EQU   13        ABTERM ROUTINE ADDRESS
XRRETURN EQU   14        TYPE 1 SVC HANDLER ADDRESS (SVCXT)
XRBASE   EQU   15        BASE REGISTER
         SPACE 1
* WAIT ROUTINE
XRWAITCT EQU   0         INPUT WAIT COUNT
XRTESTWD EQU   1         ADDRESS TO BE VALIDATED
XRNEW    EQU   3         ADDRESS OF 'NEW'
XRORB    EQU   5         ADDRESS OF CURRENT RB
XRECBCTR EQU   7         ECB COUNTER
XRZERO   EQU   7         ZERO REGISTER
XRWTCT   EQU   8         WORK, WAIT COUNT
XRWECB   EQU   9         WORK, ECB ADDRESS
         SPACE 1
* POST ROUTINE
XR0      EQU   0         WORK,SAVE REGISTER
XRPTCODE EQU   0         INPUT POST CODE
XRM0     EQU   0 .                                                20021
PARMECB  EQU   0         PARM LIST DISPLACEMENT FOR IPP ECB       21B72
XRM1     EQU   1 .                                                20021
NEWIPPB  EQU   5 .                     ADDRESS OF NEW IPPB        20021
XRQUIT   EQU   2         ERROR CODE REGISTER
XRRB     EQU   2         ECB'S RB ADDRESS
XRTSCVT  EQU   2 .                 TIME-SHARING CVT ADDRESS       20021
XRTJB    EQU   2 .                 ADDRESS OF TJB TABLE           20021
PARMTJID EQU   4         PARM LIST DISPLACEMENT FOR IPP TJID      21B72
XRWORK5  EQU   5         WORK,GENERAL REGISTER
XRTJID   EQU   5 .                 TJID REGISTER                  20021
XRSVCS   EQU   5 .                 SVC REGISTER SAVE AREA ADDR    20021
XRWORK   EQU   6         WORK, GENERAL REGISTER
IPPBREG  EQU   7 .                  IPPB SCAN REG.                20021
XTEMPBAS EQU   7 .                  SAVE BASE ACROSS GETMAIN      20021
XRNUSE   EQU   8 .                  NUMBER OF USERS -MAX TJID     20021
PARMTCB  EQU   8         PARM LIST DISPLACEMENT FOR IPP TCB       21B72
XRWRB    EQU   10        WORK, RB ADDRESS
XRWTCT1  EQU   11        WORK, WAIT COUNT
XRCHCK1  EQU   11        WORK,REG FOR RB CHECK
XRCHCK2  EQU   12        WORK,REG FOR RB CHECK
XRWRB1   EQU   12        WORK, RB ADDRESS
XRBTJID  EQU   13 .                    BRANCH ENTRY TJID REGISTER 20021
XRREGM   EQU   15 .                    LINK REGISTER TO REGMAIN   20021
XRTSIP   EQU   15 .                    ENTRY POINT OF TSIP        20021
         SPACE 1
* TCB SWITCHING
REGRTCB  EQU   10        READY TCB
REGSWTCH EQU   11        TASK SWITCH ROUTINE
         SPACE 2
* ENTRY AND EXTRN STATMENTS.
         EXTRN IEA0XE00
         ENTRY IEA0PT01
         ENTRY IEA0PT02
         ENTRY IGC002
         EXTRN IEA0DS02
         EXTRN IEAQTD01                                            MTS0
         EXTRN IEATCBP
         EXTRN IEA0AB01
         EXTRN IEA0VL01
         EXTRN IORGSW .                                       BD A37037
         ENTRY IEAQJSTM .                                     BD A38869
         EJECT
*ROUTINE NAME-           IGC001, WAIT SVC ROUTINE
*
*FUNCTIONS-            1.CAUSES THE ISSUING RB CONTROL LEVEL TO
*                        STOP PROCESSING AND WAIT ON THE OCCURANCE
*                        OF ONE OR MORE EVENTS.
*                        2.CAUSES THE JOB STEP TQE TO BE DEQUEUED  MTS0
*                          AND CONVERTED FROM TASK (CPU) TIME TO   MTS0
*                          REAL (30 MIN VALUE) TIME IF ALL TCBS IN MTS0
*                          THE JOB STEP ARE IN AN SVC WAIT AND ARE MTS0
*                        PROBLEM PROGRAM TCBS.                     MTS0
*
*ENTRY POINT NAMES-      IGC001, WAIT SVC ENTRY POINT
*
*CONTAINED IN MODULE-    IEAQSY00- WAIT/POST SYNCHRONIZATION MODULE
*
*ATTRIBUTES-             RESIDENT,RE-ENTRANT,SUPERVISOR STATE,
*                        TYPE 1 SVC.
*
*APPLICABILITY-          OPTION 4 ONLY
*
*EXTERNAL REFERENCES-    IEATCBP-ADDRESS OF BOTH THE NEXT TCB
*                                TO BE DISPATCHED,LOCATION 'NEW'
*                                AND THE CURRENT TCB ADDRESS
*                                LOCATION 'OLD'.
*
*                        IEABTERM- ADDRESS OF ABTERM ROUTINE
*
*                        IEA0XE00- ADDRESS OF TYPE 1 SVC EXIT
*                              HANDLER.
*
*                        IEA0VL01- VALIDITY CHECK ROUTINE
*                        IEAQTD01 - BRANCH ENTRY POINT OF TQE      MTS0
*                                   DEQUEUE ROUTINE                MTS0
*                                                                  MTS0
*
*SVC'S USED-             NONE
*
*INPUT-                  REGISTER 0 CONTAINS A COUNT OF THE NUMBER
*                        OF EVENTS THAT MUST OCCUR BEFORE THE
*                        ISSUING TASK CAN CONTINUE IN CONTROL
*
*                        REGISTER 1 CONTAINS THE ADDRESS OF A
*                        SINGLE ECB(EVENT CONTROL BLOCK) OR
*                        THE ADDRESS OF A LIST OF ECB'S TO BE
*                        WAITED UPON.  A COMPLEMENTED REGISTER, IF SET
*                        SIGNALS THE PRESENCE OF A LIST.
*
*
*MACRO EXPANSION EXAMPLES
*
WAIT     DSECT
         USING *,1
         SPACE 2
*  EXAMPLE 1........SPECIFIES THAT ONE EVENT REPRESENTED BY A SINGLE
*                   ECB AT LOCATION ECBFOUR WILL BE WAITED UPON.
         SPACE 2
         WAIT  1,ECB=ECBFOUR
         SPACE 2
*  EXAMPLE 2........SPECIFIES A WAIT FOR 5 EVENTS REPRESENTED BY ANY
*                   OF THE EVENT CONTROL BLOCKS POINTED TO BY THE
*                   LIST OF ADDRESSES LOCATED AT THE ADDRESS CONTAINED
*                   IN REGISTER 5.
         SPACE 2
         WAIT  5,ECBLIST=(5)
         SPACE 2
*  EXAMPLE 3........SPECIFIES A WAIT FOR 2 EVENTS REPRESENTED BY ANY
*                   OF THE EVENT CONTROL BLOCKS POINTED TO BY THE
*                   LIST OF ADDRESSES LOCATED AT LOCATION MANYECBS.
         SPACE 2
         WAIT  2,ECBLIST=MANYECBS
         SPACE 2
MANYECBS DC    A(ECBTWO)
         DC    A(ECBFOUR)
ECBTWO   DC    F'0'
ECBFOUR  DC    F'0'
*              THE ABOVE MACRO EXPANSIONS ARE NOT TO BE MISCONSTRUED
* AS BEING AN EXECUTABLE PORTION OF THIS WAIT SVC SERVICE ROUTINE.
* THESE MACRO EXPANSIONS SERVE ONLY TO ILLUSTRATE WHAT SOME OF
* THE VARIOUS FORMS OF THE EXPANSION LOOK LIKE.
*
*OUTPUT-                 NONE
*
*ENTRY POINTS-         1.IGC001,GIVEN CONTROL VIA THE SVC
*                        FIRST LEVEL INTERRUPT HANDLER(FLIH).
*
*                      2.THE PSW MUST BE.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT FOR MACHINE CHECK, IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY.
*
*                      3.THE REGISTERS CONTAIN.
*
*                        REGISTER 0 CONTAINS THE INPUT NUMBER
*                                   OF EVENTS TO BE WAITED
*                                   UPON BEFORE THE ISSUING
*                                   TASK CAN CONTINUE.
*
*                        REGISTER 1 CONTAINS THE INPUT ADDRESS
*                                   OF EITHER A SINGLE ECB OR
*                                   LIST OF ECBS TO BE WAITED
*                                   UPON. THE LIST IS DENOTED
*                                   BY A COMPLEMENTED ADDRESS.
*
*                        REGISTER 3 CONTAINS THE ADDRESS OF
*                                   THE CVT TABLE.
*
*                        REGISTER 4 CONTAINS THE ADDRESS OF
*                                   THE CURRENT TCB.
*
*                        REGISTER 5 CONTAINS THE ADDRESS OF
*                                   THE RB AT THE TOP OF THE
*                                   RB QUEUE.
*
*                        REGISTER 14 CONTAINS THE RETURN
*                        ADDRESS OF THE CALLER.IN THE
*                        CASE OF THE SVC FLIH BEING THE
*                        CALLER REGISTER 14 CONTAINS
*                        THE ADDRESS OF THE TYPE 1 SVC
*                        EXIT ROUTINE.(IEA0XE00)
*
*EXIT POINT-           1.TO THE CALLING ROUTINE VIA
*                        BRANCH REG 14.
*
*                      2.THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT FOR MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY.
*
*                      3.REGISTERS. 0,1,3-6,11,AND 14 ARE UNALTERED,
*                        ALL THE REMAINING CONTAIN MEANINGLESS
*                        INFORMATION.
*
*
*ERROR EXIT POINTS-    1.TO ABTERM-10 IN ORDER TO CAUSE THE ISSUING
*                        TASK TO BE TERMINATED.
*
*                      2.THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT FOR MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY 0.
*
*                      3.REGISTERS 0,3-6    AND 14 WILL
*                        CONTAIN THE INFORMATION IN THEM
*                        AT THE TIME THE SVC 01 WAS GIVEN
*                        CONTROL.
*
*                        REGISTER 1 WILL CONTAIN THE ERROR CODE.
*
*                        REGISTERS 2,7-12 AND 15 WILL CONTAIN
*                        MEANINGLESS INFORMATION.
*
*                        REGISTER 13 CONTAINS THE ADDRESS OF THE
*                        ABTERM ROUTINE.
*
*                      4.THE ERROR CODES ARE.
*                        X'0101' ERROR CODE #1 NUMBER OF ECBS TO
*                                              BE WAITED UPON EX-
*                                              CEEDS THE NUMBER OF
*                                              ECBS GIVEN.
*                        X'0201' ERROR CODE #2 THE ECB ADDRESS IS
*                                              INVALID.
*                        X'0301' ERROR CODE #3 AN ATTEMPT IS BEING
*                                              MADE TO SET THE WAIT
*                                              FLAG IN AN ECB WHICH
*                                              IS ALREADY SET.
*
*TABLES AND CONTROL    1.RB-REQUEST BLOCK
*BLOCKS REFERENCED-      THE CONTROLING BLOCK UNDER WHICH THE
*                        ISSUING ROUTINE IS OPERATING.
*
*                        RBWCF- RB'S WAIT COUNT FIELD. SET IN ORDER
*                               PLACE ISSUING TASK IN A WAIT
*                               STATE UNTIL THE SPECIFIED NUMBER
*                               OF EVENTS OCCUR.
*
*                        RBECBWT- NUMBER OF ECBS WAITING.SET BY
*                                 WAIT TO INDICATE THAT THE NUMBER
*                            OF EVENTS SPECIFIED IS LESS THAN
*                            THE NUMBER OF ECBS SPECIFIED.
*
*                         RBOPSW- RESUME PSW.  TESTED BY WAIT FOR  MTS0
*                            AN SVC 1 IN TASK'S TREE               MTS0
*                                                                  MTS0
*                      2.CVT- COMMUNICATIONS VECTOR TABLE
*                                 USED BY WAIT TO LOCATE LOCATION
*                                 'NEW'AND VALIDITY CHECK ADDRESS.
*
*                                  ALSO ENQUEUE ROUTINE IN TIMER   MTS0
*                                  SLIH                            MTS0
*                                                                  MTS0
*                      3.ECB - EVENT CONTROL BLOCK
*
*                        WAIT FLAG -A BIT INDICATOR THAT SIGNALS
*                                   THAT THE LAST VALID REFERENCE
*                                   TO THE ECB WAS BY WAIT.
*
*                        COMPLETE FLAG- A BIT INDICATOR THAT SIGNALS
*                        THAT THE EVENT ASSOCIATED WITH THE ECB
*                        HAS COMPLETED.
*
*                        RB ADDRESS- THE RB ADDRESS OF THE ROUTINE
*                                    ISSUING THE WAIT IS PLACED
*                                    IN TO THIS FIELD BY WAIT.
*
*                      4. OPSW- LOCATION 32 DEC. -  ALTERED TO
*                        ENABLE REQUESTOR.
*                         ALSO LOCATION 35 DEC. - TESTED FOR AN    MTS0
*                         SVC 1                                    MTS0
*
*LIST ORIGINS,TABLES
*AND CONTROL BLOCKS
*INCLUDED-               NONE
*
*RESTRICTIONS ON
*USE OF ROUTINE-       1.A PERMANENT INTERLOCK WILL OCCUR UNDER
*                        THE FOLLOWING CONDITIONS.
*                        TASK(A) ISSUES A WAIT MACRO INSTRUCTION
*                        FOR THE COMPLETION OF ANOTHER TASK(B).
*                        ONCE IN CONTROL (B) ISSUES A WAIT MACRO
*                        INSTRUCTION FOR THE COMPLETION OF AN
*                        EVENT ONLY (A) CAN FURNISH.
*
*NOTES                   NONE
*
         EJECT
* WAIT ROUTINE. (SVC 1)
*  ENTER WITH WAIT COUNT IN REGISTER 0
*  ENTER WITH ECB ADDRESS OR ECB LIST ADDRESS IN REGISTER 1
*
* FUNCTION.
*     THE WAIT SVC ROUTINE WILL PLACE THE RB (REQUEST BLOCK)
*  OF THE REQUESTING ROUTINE INTO A WAIT STATE.  THIS IS
*  ACCOMPLISHED BY SETTING THE WAIT COUNT FIELD IN THE RB.
*  AN RB WAIT STATE WILL PREVAIL UNTIL THE WAIT COUNT IS REDUCED
*  TO ZERO BY THE SVC POST ROUTINE.  THE WAIT FLAG AND REQUESTING
*  RB ADDRESS ARE SET IN EACH ECB.  FOR EVERY ECB WHOSE POST
*  FLAG IS ALREADY SET, THE WAIT COUNT IN REGISTER 0 IS
*  DECREMENTED.  IF THIS COUNT GOES TO ZERO,(INDICATING THAT
*  POSTING HAS ALREADY COMPLETED) WAIT RESETS ALL PROCESSED ECBS
*  AND RETURNS.  THE WAIT COUNT IS ALWAYS STORED IN THE REQUESTORS
*  RB.
         SPACE 2
IGC001   CSECT
*0722085836                                                        MP65
*168400,168600,179000                                             19472
*082400,175800                                                    20002
*108800                                                          A33247
*095600,098400,100000,106700,107300,118500,119000,124700,129300,  M0113
*130400                                                           M0113
*114460-114480                                                   A51848
         CNOP  0,8
         BALR  XRBASE,0
         USING *,XRBASE
         OI    32(0),X'FF'             ENABLE OPSW
         LPR   XRWAITCT,XRWAITCT       INSURE THAT WAIT COUNT IS
*                                      POSITIVE IF WAIT REQUEST IS
*                                      WAITR TYPE
         LTR   XRWTCT,XRWAITCT         Q.REQUESTOR WAIT COUNT ZERO
         BCR   8,XRRETURN              *YES GO TO TYPE 1 SVC HANDLER
         SPACE 1
*  REGISTER 1 IS TESTED IF IT IS NEGATIVE. IF NEGATIVE, THE COMPLIMENT
* OF THE REGISTER IS THE ADDRESS OF A LIST OF POINTERS TO THE ECBS. A
* POSITIVE REGISTER IS THE ADDRESS OF AN ECB. THE LAST ECB POINTER IN
* THE LIST IS FLAGGED WITH THE SIGN BIT ON.
         SPACE 2
         LA    XRECBCTR,1             $INITIALIZE ECB COUNTER TO 1
         LR    XRSAVE,XRECB            DUP. INPUT ECB PARAMETER
         LTR   XRECBPTR,XRECB          Q.ADR OF ECB LIST
         BM    LIST                     YES,TAKE BRANCH
         TM    0(XRECBPTR),ECBPTFLG     Q.IS ECB'S POST FLAG SET
         BCR   1,XRRETURN               YES,TAKE BRANCH
         LR    XRWECB,XRECBPTR          DUP. ECB ADDRESS
         B     WTTEST                   UNCONDITIONALLY BRANCH
         SPACE 2
*     HAVING DETERMINED THAT A LIST HAS BEEN INPUT THE LIST
*  ADDRESS MUST BE VALIDATED IF THE REQUESTOR IS NOT A SUPERVISORY
*  TASK.
         SPACE 2
LIST     LCR   XRECBPTR,XRECB           COMPLEMENT ECB ADDRESS
         TM    33(0),SUPTST            Q. IS ENTRY VIA SUP. TASK
         BZ    LOOP                    YES, TAKE BRANCH
         LCR   XRECB,XRECB             COMPLEMENT ECB ADDRESS(LIST)
         LA    XRABTERM,ERRWAIT2       LOAD INVALID ECB CODE
         L     XRTSTADR,CHECK          LOAD VALID. CHECK R. ADDR.
         BAL   XRLINK,4(XRTSTADR)      Q. IS ECB LIST VALID
         BNE   ERROR                   NO, TAKE BRANCH
         LR    XRECB,XRSAVE            RESTORE REG1.
LOOP     TM    0(XRECBPTR),LSTIND      Q.IS THIS LAST ECB IN LIST
         BO    ECBWT                    YES BRANCH
         LR    XRLINK,XRECBCTR                                   A68615
         LA    XRECBCTR,1(XRLINK)      UPDATE COUNTER            A68615
         LA    XRECBPTR,4(XRECBPTR)     UPDATE ECB LIST ADR
         B     LOOP
         SPACE 1
*  THE INPUT WAIT COUNT (REGISTER 0) IS COMPARED AGAINST THE COUNT OF
* ECBS FOUND. IF THE WAIT COUNT IS HIGHER GO TO ABTERM. IF THE COUNTS
* ARE EQUAL, GO TO NEXT SECTION. IF THE ECB COUNT IS HIGHER SET THE ECB
* SEARCH FLAG IN THE REQUESTING ECB.
         SPACE 2
ECBWT    LCR   XRECBPTR,XRECB          $LD TRUE ECB LIST ADR
         CR    XRECBCTR,XRWTCT          Q.ECB CT. LT WAIT CT.
         BE    PKEY                     EQUAL, TAKE BRANCH
         LA    XRABTERM,ERRWAIT1        WAIT CT. TOO GREAT
         BL    ERROR                 *** YES, TAKE BRANCH
         OI    RBSTAB+1(XRORB),RBECBWT  SET RB'S ECB SEARCH FLAG
         SPACE 1
*  TEST IF ECB'S POST FLAG IS ON. YES, ON GO TO DECREMENT WAIT COUNT
* SECTION. NEXT TEST IF ECB'S WAIT FLAG ON. YES, ON GO TO ABTERM. IF
* NEITHER FLAG ON STORE REQUESTING RB'S ADDRESS IN ECB AND SET ECB'S
* WAIT FLAG AFTER VALIDITY CHECKING THE ECB ADDRESS.  OTHERWISE ABTERM
         SPACE 2
PKEY     L     XRWECB,0(XRECBPTR)       LD ECB ADR.(LIST)
         LR    XRTESTWD,XRWECB          LOAD CURRENT ECB
         TM    0(XRWECB),ECBPTFLG        Q.ECB'S POST FLAG SET
         BO    CFLAGON                  YES,TAKE BRANCH
WTTEST   LA    XRABTERM,ERRWAIT3        ATTEMPTING TO PLACE A WAITING
*                                      RB INTO WAIT.
         TM    33(0),SUPTST            IS ENTRY VIA SUP TASK     A67736
         BZ    COMPFLAG                YES                       A67736
         TM    0(XRWECB),ECBWTFLG      IS ECB WAIT FLAG SET      A67736
         BO    ERROR                   BRANCH TO ABTERM          A67736
         LA    XRABTERM,ERRWAIT2       LOAD INVALID ECB CODE
         L     XRTSTADR,CHECK           LOAD VALIDITY CHECK ADR.
         BAL   XRLINK,4(XRTSTADR)       Q. IS ECB VALID
         BE    COMPFLAG                 BR IF ECB IS VALID        20002
         LR    CHECKREG,XRWECB          SET UP ECB CHECK REG      20002
         BAL   XRLINK,COMMCHEK          CHECK FOR COMM. ECB       20002
COMPFLAG ST    XRORB,0(XRWECB)          ST.REQUESTING RB'S ADR. IN ECB
         MVI   0(XRWECB),ECBWTFLG       SET ECB WAIT FLAG
         SPACE 1
*  GET NEXT ECB POINTER. DECREMENT ECB COUNTER. ECB COUNTER NOT ZERO
* GO AND PROCESS NEXT ECB. ECB COUNTER ZERO STORE CALCULATED WAIT COUNT
* IN REQUESTING RB AND SET 'NEW' TO ZERO. THEN RETURN TO TYPE 1 SVC
* HANDLER.
         SPACE 2
UPDATE   LR    XRLINK,XRECBPTR                                   A68615
         LA    XRECBPTR,4(XRLINK)                                A68615
         BCT   XRECBCTR,PKEY           Q.DECREMENT ECB CTR (NOT 0 BR)
         LR    XRECB,XRSAVE             RESTORE ECB ADR.
         L     XRNEW,NEWPTR(XRCVT)      LD ADR OF 'NEW'
         C     XROTCB,0(XRNEW)        Q.IS CURRENT TCB EQ TO NEW
         BC    7,NOZERO                DONT ZERO NEW A TASK SWTCH IND
         ST    XRZERO,0(XRNEW)          ST 0 IN 'NEW'
NOZERO   STC   XRWTCT,RBWCF(XRORB)     ST WAIT COUNT IN REQUESTING RB
         OI    RBSTAB(XRORB),RBWAITP . MARK RB WAITING ON ECB CI A45983
         SPACE 2
* GET INITIATOR TQE.  IF NO TQE GO TO RETURN TO CALLER.  PERFORM   MTS0
* TASK SELECT TO EXAMINE EVERY TOP RB FOR AN SVC WAIT (0A01) AND   MTS0
* PROBLEM PROGRAM MODE. IF RB DOES NOT MEET CONDITIONS, RETURN TO  MTS0
* CALLER.  WHEN ALL TCBS CHECKED, DEQUEUE TQE, CHANGE TQE TYPE AND MTS0
* TIME VALUE, ENQUEUE THE TQE AND RETURN TO CALLER                 MTS0
JSTIME   EQU   *                                                   MTS0
*   THE FOLLOWING CODE IS USED BY WAIT AND EXIT               BD A38869
*   TO DETERMINE IF THE JOB STEP IS IN A WAIT                 BD A38869
*   CONDITION. IF SO THE JS TQE IS ENQUEUED AS A WAIT/REAL TQE.  A38869
IEAQJSTM EQU   * .                                            BD A38869
         SR    XRZERO,XRZERO .    ZERO REG 7                  BD A38869
         BALR  XRBASE,0 .         SET BASE ADDR               BD A38869
         USING *,XRBASE .                                     BD A38869
         L     XRBASE,BASEWT .    RELOAD WAIT BASE            BD A38869
         USING IGC001+2,XRBASE .                              BD A38869
         L     ATCBREG,TCBJSTCB(TCBREG) PICK UP JOB STEP TCB       MTS0
         L     XRWTCT,TCBOTC(ATCBREG)  PICK UP INITIATOR TCB       MTS0
         LTR   XRWTCT,XRWTCT           IS ORIGIN TCB = 0           MTS0
         BCR   8,XRRETURN              YES, GO TO TYPE 1 SVC HANDL MTS0
         TM    TCBTSFLG(TCBREG),TSTASK .   Q. TS TASK             M2197
         BCR   1,XRRETURN .            YES, GO TO TYPE 1 SVC HNDL 20021
         TM    TCBPKF(XRWTCT),X'F0'    IS IT NON ZERO KEY          MTS0
         BCR   8,XRRETURN              NO, GO TO TYPE1 SVC HANDLER MTSO
         L     LINKREG,TCBTME(ATCBREG) .GET J/S TQE                 SMF
         LTR   LINKREG,LINKREG         .Q.IS THERE A J/S TQE        SMF
         BZ    NOJSTQE                 .BR IF NO                    SMF
         TM    TQEFLGS(LINKREG),X'03'  .Q. REAL TQE                 SMF
         BNO   NOJSTQE                 .BR IF NO                    SMF
         TM    TQEFLGS(LINKREG),X'80'  .Q. TQE ON QUEUE             SMF
         BCR   0,XRRETURN                                        A69700
NOJSTQE  C     XRZERO,TCBTME(XRWTCT)   DOES INITIATOR HAVE A TQE   MTSO
         BCR   8,XRRETURN              NO, GO TO TYPE 1 SVC HANDL  MTS0
         LR    XRSAV6,ATCBREG           SAVE JSTCB FOR END TEST    MP65
         B     EXAMINE                  START SCAN WITH JSTCB      MP65
CONTSRCH EQU   *                                                   MTS0
         BAL   LINKREG,SELECT          GO TO TASK SELECT RTN       MTS0
* THE DEQUEUE ROUTINE EXPECTS -                                    MTS0
*        REG 1 = TQE                                               MTS0
*        REG 2 = RETURN ADDRESS                                    MTS0
*        REG 15 = BASE ADDRESS OF DEQUEUE ROUTINE                  MTS0
* REGISTERS 0, 2, 9 - 12 ARE TRANSPARENT OVER DEQUEUE ROUTINE      MTS0
         LR    XRWECB,XRECB            SAVE REGISTER 1             MTS0
         L     XRECB,TCBTME(XRWTCT)    GET ADDRESS OF TQE          MTS0
         LR    XRECBPTR,XROTCB         SAVE REG 4                  MTS0
         LR    XRSAVE,XRRETURN         SAVE REG 14                 MTS0
         LR    XRLINK,XRSAV6           SAVE REG 6                  MTS0
         L     XRBASE,BASEDEQ          GET ADDRESS DEQUEUE RTN     MTS0
         BALR  XRTSTADR,XRBASE         GO TO DEQUEUE TQE           MTS0
         USING *,XRTSTADR              REESTABLISH ADDRESSABILITY  MTS0
         L     XRBASE,BASEWT                                       MTS0
         LR    XRRETURN,XRSAVE                                     MTS0
         USING IGC001+2,XRBASE                                     MTS0
         DROP  XRTSTADR                                            MTS0
         L     XRCVT,16                ADDRESS CVT                 MTS0
         L     XRABTERM,CVTQTE00(XRCVT)                            MTS0
         LR    XRCVT,XRECBPTR          SAVE TCB                    MTS0
         L     ATCBREG,TCBJSTCB(XRCVT) GET J/S TCB                 MTS0
         L     XRWTCT,TCBOTC(ATCBREG)  INITIATOR TCB               MTS0
         L     XRECB,TCBTME(XRWTCT)    TQE                         MTS0
         MVC   TQESAV(4,XRECB),TQEVAL(XRECB) SAVE CPU VALUE        MTS0
         L     TCTPTR,TCBTCT(XRWTCT)   .TCB'S TCT ADDR              SMF
         LTR   TCTPTR,TCTPTR           .Q. IS THERE A TCT           SMF
         BZ    NOSMF                   .BR IF NO SMF                SMF
         MVC   TQEVAL(4,XRECB),TCTWLMT(TCTPTR) .INSERT WAIT VALUE   SMF
         B     TQEREAL                 .MAKE TQE REAL VALUE         SMF
NOSMF    MVC   TQEVAL(4,XRECB),W30MIN  .INSERT 30 MINUTE VALUE     MTSO
TQEREAL  OI    TQEFLGS(XRECB),X'03'    .MAKE TQE REAL VALUE        MTSO
* THE ENQUEUE ROUTINE EXPECTS -                                    MTS0
*        REG 1 = TQE                                               MTS0
*        REG 2 = RETURN ADDRESS                                    MTS0
* REGISTERS 4, 5, 6, AND  13 ARE NOT TRANSPARENT OVER              MTS0
* THE ENQUEUE ROUTINE                                              MTS0
         LR    XRZERO,XRLINK           REG 6                       MTS0
         BALR  XRTSTADR,XRABTERM                                   MTS0
         LR    XROTCB,XRCVT                                        MTS0
         L     XRORB,TCBRBP(XROTCB)    RESTORE RB ADDRESS          MTS0
         LR    XRSAV6,XRZERO                                       MTS0
         LR    XRECB,XRWECB                                        MTS0
         BR    XRRETURN                GO TO TYPE 1 SVC HANDLER    MTS0
SELECT   L     SELREG,TCBLTC(ATCBREG)  GET DAUGHTER                MTS0
SELECT1  LTR   SELREG,SELREG           DOES DAUGHTER EXIST         MTS0
         BC    7,SELECT2               YES, TCB FOUND              MTS0
         L     SELREG,TCBNTC(ATCBREG)  NO, GET SISTER              MTS0
         CR    ATCBREG,XRSAV6           IS SCAN COMPLETE           MP65
         BCR   8,LINKREG               YES, LAST TIME RETURN       MTS0
         L     ATCBREG,TCBOTC(ATCBREG) NO, GET MOTHER              MTS0
         B     SELECT1                 CONTINUE SCAN               MTS0
SELECT2  LR    ATCBREG,SELREG          MODIFY TCB REGISTER         MTS0
EXAMINE  EQU   *                                                   MTS0
         CR    ATCBREG,TCBREG          IS THIS THE ISSUER OF WAIT  MTS0
         BE    CONTSRCH .         YES                         BD A38869
         TM    TCBFLG+4(ATCBREG),X'80' HAS THIS TASK ENDED         MTS0
         BO    CONTSRCH                YES, FIND NEXT TCB          MTS0
         TM    TCBFLG+0(ATCBREG),X'80' Q.TASK ABENDING           A21968
         BCR   1,XRRETURN                                        A69869
         TM    TCBFLG+2(ATCBREG),X'20' Q.TASK IN ABTERM          A21968
         BCR   1,XRRETURN                                        A69869
         L     SELREG,TCBRBP(ATCBREG)  PICK UP TOP RB ON CHAIN     MTS0
         CLI   RBWCF(SELREG),X'00'     IS THE WAIT COUNT ZERO      MTS0
         BCR   8,XRRETURN              YES, GO TO TYPE 1 SVC HANDL MTS0
         L     SELREG,RHOPSW(SELREG)   PICK UP RIGHT-HALF OF PSW   MTS0
         S     SELREG,KTWO             GET LAST EXECUTED INSTR.    MTS0
         LTR   SELREG,SELREG           VALIDITY CHECK              MTS0
         BCR   12,XRRETURN                                         MTS0
         CLC   KTEST+6(2),0(SELREG)    WAS SVC WAIT ISSUED(0A01)   MTS0
         BE    CONTSRCH                YES, GO TO PICK UP NEXT TCB MTS0
NOJSTME  EQU   *                       ENTIRE TREE IS NOT IN SVC   MTS0
*                                      WAIT                        MTS0
         BR    XRRETURN                *GO TO TYPE 1 SVC HANDLER
         SPACE 1
*  DECREMENT WAIT COUNTER. COUNTER NOT ZERO GO TO PROCESS NEXT ECB.
* COUNTER ZERO TEST IF REQUESTING RB HAS SEARCH ECB FLAG ON. NO, NOT
* ON RETURN TO TYPE 1 SVC HANDLER. YES ON, RESET SEARCH ECB FLAG IN RB
* AND TURN OFF ALL WAIT FLAGS IN ECBS.
         SPACE 2
CFLAGON  BCT   XRWTCT,UPDATE           Q.DECREMENT WAIT COUNT NOT 0 BR
         TM    RBSTAB+1(XRORB),RBECBWT Q.IS RB'S ECB SEARCH FLAG SET
         BCR   8,XRRETURN              *NO GO TO TYPE 1 SVC HANDLER
         NI    RBSTAB+1(XRORB),RRBECBWT RESET RB ECB SEARCH FLAG
         LCR   XRECBPTR,XRSAVE          OBTAIN TRUE ECB LIST ADR
LOOP1    L     XRWECB,0(XRECBPTR)       OBTAIN ECB ADDRESS
         TM    33(0),SUPTST            IS ENTRY BY SUP TASK      A63871
         BZ    SKP                     YES                       A63871
         LA    XRABTERM,ERRWAIT2       INVALID ECB               A63871
         LR    XRECB,XRWECB            INIT ECB REG              A63871
         LA    XRECB,0(XRECB)          HI BYTE                   A63871
         L     XRTSTADR,CHECK          LOAD CHECK ROUTINE ADR    A63871
         BAL   XRLINK,4(XRTSTADR)      IS ECB VALID              A63871
         BE    NOERR                   YES                       A63871
         LR    CHECKREG,XRWECB         ECB ADDRESS               A63871
         BAL   XRLINK,COMMCHEK         COMM TASK ECB             A63871
NOERR    LR    XRECB,XRSAVE            RESTORE                   A63871
SKP      EQU   *                                                 A63871
         NI    0(XRWECB),RECBWTF        RESET ECB'S WAIT FLAG
         TM    0(XRECBPTR),LSTIND      Q.IS THIS LAST ENTRY
         BCR   1,XRRETURN              **YES GO TO TYPE 1 SVC HANDLER
         LA    XRECBPTR,4(XRECBPTR)    UPDATE LIST POINTER
         B     LOOP1                   BRANCH UNCONDITIONALLY
         EJECT
*ROUTINE NAME-           IGC002,POST SVC SERVICE ROUTINE
*
*FUNCTIONS-            1.POST WILL SIGNAL THE COMPLETION OF AN EVENT
*                          SPECIFIED BY AN EVENT CONTROL BLOCK(ECB)
*                          BY SETTING IT APPROPRIATELY.
*
*                      2.POST WILL DETERMINE IF THE TASK IN A WAIT
*                          STATE SHOULD BE MADE READY AND IN SOME
*                          CASES INDICATE THAT CONTROL SHOULD BE
*                          GIVEN TO THIS READIED TASK.
*
*                       3.POST WILL DETERMINE IF THE JOB STEP TQE  MTS0
*                           SHOULD BE DEQUEUED AND CONVERTED FROM  MTS0
*                           A REAL TQE TO A TASK TQE (FOR J/S      MTS0
*                           TIMING ONLY).                          MTS0
*                                                                  MTS0
*ENTRY POINT NAMES-    1.IGC002,ENTRY POINT VIA SVC 02
*
*                      2.IGC002+6, BRANCH ENTRY TO POST
*
*                      3. IEA0PT01, IOS AND NON-RESIDENT ROUTINES
*                        BRANCH ENTRY TO POST.
*
*                      4. IEA0PT02, IOS AND RESIDENT ROUTINES
*                        BRANCH ENTRY TO POST.
*
*CONTAINED IN MODULE-    IEAQSY00- WAIT/POST SYNCHRONIZATION MODULE
*
*ATTRIBUTES-             RESIDENT,RE-ENTRANT,SUPERVISOR STATE,
*                        TYPE 1 SVC ROUTINE.
*
*APPLICABILITY-          OPTION 4 ONLY
*
*EXTERNAL REFERENCES-    IEATCBP- LOCATION 'NEW' AND 'OLD'
*                        IEABTERM- ABTERM
*                        IEA0XE00 - TYPE 1 SVC EXIT ROUTINE
*                         IEAQTD01- DEQUEUE ROUTINE IN TIMER SLIH  MTS0
*                         IEA0DS02 - TASK SWITCH ROUTINE           MTS0
*
*SVC'S USED-             NONE
*
*INPUT-                  POST CODE IN REGISTER 0
*                        THE LOW ORDER BYTE CONTAINS 0.
*                        ADDRESS OF ECB IN REGISTER 1
*                        OR IF HIGH ORDER BIT IS ON THEN IT       21B72
*                        CONTAINS THE ADDRESS OF A PARM LIST      21B72
*                        FOR INTER-PARTITION POST. FORMAT AS      21B72
*                        FOLLOWS: REG1 ************--->*******    21B72
*                                      *1  ' 8-31 *    *@ECB *    21B72
*                                      *BIT'@ PARM*    *@TJID*    21B72
*                                      *ON '  LIST*    *@TCB *    21B72
*                                      ************    *******    21B72
*
*MACRO EXPANSION EXAMPLES
*
POST     DSECT
         USING *,1
         SPACE 2
*  EXAMPLE 1........SPECIFIES A SINGLE ECB AT LOCATION TEN TO BE
*                   POSTED. A ZERO POST CODE IS SET IN THE ECB.
         SPACE 2
         POST  TEN
         SPACE 2
*  EXAMPLE 2........SPECIFIES A SINGLE ECB AT AN ADDRESS SPECIFIED
*                   IN REGISTER 6 TO BE POSTED . THE POST CODE
*                   SPECIFIED AT LOCATION ERROR+2 IS RETURNED IN
*                   THE POSTED ECB.
         SPACE 2
         POST  ERROR+2,(6)
         SPACE 2
*  EXAMPLE 3........SPECIFIES THE POSTING OF THE ECB WHOSE ADDRESS
*                   IS IN REGISTER 5, AND SETS THE POST CODE FIELD
*                   WITH THE VALUE SPECIFIED IN REGISTER 6.
         SPACE 2
         POST  (6),(5)
         SPACE 2
TEN      DC    F'0'
         SPACE 2
*              THE ABOVE MACRO EXPANSIONS ARE NOT TO BE MISCONSTRUED
* AS BEING AN EXECUTABLE PORTION OF THIS POST SVC SERVICE ROUTINE.
* THESE MACRO EXPANSIONS SERVE ONLY TO ILLUSTRATE WHAT SOME OF
* THE VARIOUS FORMS OF THE EXPANSION LOOK LIKE.
*
*OUTPUT-                 NONE
*
*ENTRY POINTS-        1A.IGC002,POST SVC ROUTINE ENTRY POINT
*                        GIVEN CONTROL BY THE SVC FIRST LEVEL
*                        INTERRUPT HANDLER(FLIH).
*
*                      B.THE PSW MUST BE.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAVE SUPERVISOR PROTECT KEY.
*
*                      C.THE REGISTERS CONTAIN.
*                        REGISTER 0 CONTAINS THE COMPLETION CODE
*
*                        REGISTER 1 CONTAINS THE ADDRESS OF THE
*                                   ECB OR,IF THE HIGH ORDER      21B72
*                                   BIT IS ON,THE ADDRESS OF      21B72
*                                   A THREE WORD PARM LIST FOR    21B72
*                                   INTER-PARTITION POST. PARM    21B72
*                                   LIST CONTAINS @ECB,@TJID,     21B72
*                                   @TCB.                         21B72
*                        REGISTERS  2,6-12 AND 15 CONTAIN THE
*                                   CONTENTS IN THEM AT THE TIME
*                                   SVC 02 WAS GIVEN.
*
*                        REGISTER 3 CONTAINS THE ADDRESS OF THE
*                                  CVT TABLE.
*
*                        REGISTER 4 CONTAINS THE ADDRESS OF THE
*                                   CURRENT TCB.
*
*                        REGISTER 5 CONTAINS THE ADDRESS OF THE
*                                   RB AT THE TOP OF THE RB QUEUE.
*
*                        REGISTER 14 CONTAINS THE RETURN
*                        ADDRESS OF THE CALLER.IN THE
*                        CASE OF THE SVC FLIH BEING THE
*                        CALLER REGISTER 14 CONTAINS
*                        THE ADDRESS OF THE TYPE 1 SVC
*                        EXIT ROUTINE.(IEA0XE00)
*
*                     2A.(IGC002+6) BRANCH ENTRY TO POST. SEE NOTES
*
*                       3A. (IEA0PT01) IOS AND NON-RESIDENT
*                        ROUTINES BRANCH ENTRY TO POST.  THE
*                        ADDRESS IS REFERENCED OUT OF THE CVT
*                        TABLE.
*                       THE USER MUST PROVIDE THE FOLLOWING.
*                        1. ADDRESS OF POST IN REGISTER 15
*                        2. RETURN ADDRESS IN REGISTER 14
*                        3. WAITING TCB ADDRESS IN REGISTER 12
*                        4. THE ECB ADDRESS IN REGISTER 11
*                        4A. AND IF HIGH ORDER BIT IS ON          21B72
*                            THIS SPECIFIES INTER-PARTITION POST  21B72
*                        5. THE COMPLETION CODE IN REGISTER 10
*                        6. THE REQUESTOR MUST BE DISABLED
*
*                        NO VALIDITITY CHECKING WILL BE DONE.
*
*                     B. (IEA0PT02) RESIDENT ROUTINES BRANCH
*                        ENTRY TO POST. PERFORMS THE SAME
*                        FUNCTION AS IEA0PT01 WITH THE ADDED
*                        FUNCTION OF RB VALIDATION.
*
*EXIT POINT-           1.TO THE CALLING ROUTINE VIA
*                        REGISTER  14.
*
*                      2.THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT MACHINE CHECK,IN SUPERVISOR
*                        MODE,HAVE SUPERVISOR PROTECT KEY.
*
*                        (IGC002) SVC TO POST .
*
*                        REGISTERS 2-14 ARE TRANSPARENT ACROSS POST
*                        REGISTERS 0,1 AND 15 ARE VOLATILE
*
*                        (IGC002+6) BRANCH ENTRY TO POST
*
*                        REGISTERS 0-9 AND 14 ARE TRANSPARENT
*                        REGISTERS 10-13 AND 15 ARE VOLATILE
*
*                        (IEA0PT01) NON-RESIDENT (IOS) BRANCH
*                        ENTRY TO POST
*
*                        REGISTERS 0-9 AND 14 ARE TRANSPARENT
*                        REGISTERS 10-13 AND 15 ARE VOLATILE
*
*                        (IEA0PT02) RESIDENT ROUTINE BRANCH ENTRY
*                        TO POST
*                        REGISTERS 0-9 AND 14 ARE TRANSPARENT
*                        REGISTERS 10-13 AND 15 ARE VOLATILE
*
*
*
*ERROR EXIT POINTS-    1. TO ABTERM INORDER TO CAUSE THE
*                        ISSUING TASK TO BE TERMINATED.
*
*                      2. THE PSW IS.
*                        DISABLED FOR ALL MASKABLE INTERRUPTS
*                        EXCEPT FOR MACHINE CHECK,IN SUPERVISOR
*                        MODE AND HAS A SUPERVISOR PROTECT KEY OF
*                        0.
*
*
*                      3. REGISTER 1 CONTAINS THE ERROR CODE
*
*                      4. REGISTER 13 IS USED TO BRANCH TO ABTERM
*
*                        5. ALL OTHER REGISTER  CONTENTS ARE NON-
*                          MEANINGFUL.
*
*                      6.THE ERROR CODES ARE.
*                        X'0102' ERROR CODE #1 POST ECB ADDRESS
*                                              INVALID.
*                        X'0202' ERROR CODE #2 POST ECB'S RB
*                                              ADDRESS INVALID.
*
*                      7.REGISTER 13 CONTAINS THE ADDRESS OF THE
*                                   ABTERM ROUTINE.
*
*TABLES AND CONTROL    1. TCB-TASK CONTROL BLOCK
*BLOCKS REFERENCED-      THE CONTROLLING BLOCK UNDER WHICH THE
*                        TASK IS OPERATING.
*
*                        TCBRBP- POINTER TO THE RB FOR THE
*                                ROUTINE POSTING. USED BY POST.
*
*                        TCBTCB- POINTER TO NEXT TCB ON READY
*                                QUEUE. USED BY POST.
*
*                        TCBDSP- DISPATCHING PRIORITY OF TASK.
*                                USED BY POST.
*
*                         TCBJSTCB- POINTER TO THE JOB STEP TCB    MTS0
*                                                                  MTS0
*                         TCBOTC- POINTER TO MOTHER OF TCB         MTS0
*                                                                  MTS0
*                         TCBPKF- PROTECT KEY OF TASK              MTS0
*                                                                  MTS0
*                         TCBTME- POINTER TO TIMER QUEUE ELEMENT
*
*                      2.RB-REQUEST BLOCK
*                         THE CONTROLING BLOCK UNDER WHICH THE
*                         POSTING ROUTINE IS OPERATING.
*                        RBECBWT- BIT SETTING THAT INDICATES
*                                 THAT MORE ECB'S WERE SPECIFIED
*                                 THAN THE NUMBER TO BE WAITED
*                                 UPON. SET TO ZERO WHEN RB WAIT
*                                 COUNT IS ZERO.
*
*                        RBWCF- NUMBER OF ECB'S TO BE WAITED UPON.
*                               DECREMENTED EACH TIME ANY ECB
*                               WHICH POINTS TO THIS RB IS POSTED.
*
*                      3.ECB-EVENT CONTROL BLOCK
*                            BLOCK REPRESENTING AN EVENT.
*
*                        COMPLETION FLAG- SET BY POST TO INDICATE
*                                         THE EVENT ASSOCIATED
*                                         WITH THIS ECB HAS OCCURRED.
*
*                        RB ADDRESS FIELD- SET BY WAIT TO IDENTIFY
*                                          THE RB IN CONTROL WHEN
*                                          THE WAIT WAS GIVEN.USED
*                                          BY POST TO REFERENCE RB
*                                          TO ADJUST WAIT COUNT.
*
*                        COMPLETION CODE - A CODE NUMBER RANGING
*                                                      30
*                                           FROM 0 TO 2  -1.
*                                          POST PLACES THE COMPLETION
*                                          CODE SUPPLIED IN THE CALLING
*                                          SEQUENCE IN TO THIS FIELD.
*
*                      4.IEATCBP- DOUBLE WORD CONTAINS TCB POINTERS.
*                                 FIRST WORD 'NEW' USED AND SET BY
*                                 POST SHOULD POSTED TASKS PRIORITY
*                                 BE GREATER THAN THE TASK SPECIFIED
*                                 BY 'NEW'.
*                                 SECOND WORD'OLD' USED BY POST
*                                 TO DETERMINE WHETHER OR NOT TO
*                                 ALTER 'NEW'. IF THE CURRENT
*                                 TASK SPECIFIED BY'OLD' IS OF A
*                                 LOWER PRIORITY THAN THE TASK
*                                 BEING POSTED, LOCATION 'NEW'
*                                 WILL BE SET TO THE POSTED TASK.
*
*                       5.TQE-TIMER QUEUE ELEMENT                  MTS0
*                           BLOCK REPRESENTING A TIMER INTERVAL    MTS0
*                                                                  MTS0
*                         TQEFLGS- SET BY POST WHEN A REAL TQE IS  MTS0
*                                  TO BE CONVERTED TO A TASK TQE   MTS0
*                                                                  MTS0
*                         TQEVAL- SET BY POST TO REINSTATE THE CPU MTS0
*                                 TIME REMAINING FOR A STEP        MTS0
*                                                                  MTS0
*LIST ORIGINS,TABLES
*RESTRICTIONS ON USE
*AND CONTROL BLOCKS
*INCLUDED-               NONE
*
*OF ROUTINE-             THE ECB'S COMPLETION FLAG SHOULD BE
*                        0 WHEN POST MACRO IS GIVEN. IF NOT
*                        POSTING WILL HAVE THE EFFECT OF A NOP.
*
* NOTES                  IF A SUPERVISORY ROUTINE WISHES TO USE
* NOTES                  POST AS A SUBROUTINE, A BRANCH
*                        ENTRY SHOULD BE USED.  THAT IS
*                        POST'S ADDRESS (IGC002+2) +4.
*                        FURTHER, THE CALLING ROUTINE MUST SET THE
*                        PSW AND GENERAL REGISTERS 3,4,5 AND
*                        14 PRIOR TO ENTERING SVC POST
*                        AS PRESCRIBED UNDER ENTRY POINT VIA SVC.
*                        NO VALIDITY CHECKING WILL BE DONE.
         EJECT
* SVC POST (SVC 2)
*  ENTER WITH ECB ADDRESS IN REGISTER 1 OR THE ADDRESS OF A       21B72
*   THREE WORD PARM LIST FOR IPP.                                 21B72
*  ENTER WITH POST CODE IN REGISTER 0.
* FUNCTION.
*  POST WILL SET COMPLETION FLAG AND CODE IN ECB. IF POST TRIES TO POST
* A POSTED TCB, IT IGNORES POSTING AND EXITS.
*  INPUT ECB'S PROTECT KEY IS TESTED IF EQUAL TO WAITING TCB, IF ENTRY
* BY NON SUPERVISER. IF ECB'S PROTECT KEY IS NOT CORRECT GO TO ABTERM.
*  STORE POST CODE AND POST FLAG IS ECB. THAN DECREMENT WAITING RB'S
* WAIT COUNT. IF DECREMENTED WAIT COUNT IS ZERO, CHECK THE SEARCH ECB
* FLAG IN THE RB. IF THE FLAG IS ON, FIND OUT THE POSITION OF THE RB
* IN ITS QUEUE. IF RB IS THE TOP RB, GET ECB LIST ADDRESS FROM TCB
* SAVE REGISTER 1. IF RB IS NOT TOP OF IT'S QUEUE, GET THE RB JUST
* ABOVE THE REQUESTING RB. FIND OUT THE TYPE OF RB IT IS, AND GET THE
* ECB LIST ADDRESS FROM REGISTER 1 SAVE AREA ACCORDANTLY. AFTER LIST
* ADDRESS HAS BEEN FOUND, RESET ALL ECB WAIT FLAG.
         SPACE 2
IGC001   CSECT
         SPACE 2
         CNOP  0,8
IGC002   BALR  XRBASE,0
         USING *,XRBASE
         B     SVCENTRY                BRANCH UNCONDITIONALLY
         STM   XRPTCODE,SELREG,SAVEXR  SAVE REGISTERS 0-9         M0113
         B     POSTTEST                UNCONDITIONALLY BRANCH
SVCENTRY EQU   * .                                                20021
         TM    33(0),SUPTST .          Q ENTRY BY SUPERVISOR      20021
         BZ    TJIDREQ                 YES, TAKE BRANCH           20021
         SPACE 2
*  VALIDITY CHECK THE INPUT ECB ADDRESS.
         SPACE 2
         LA    XRABTERM,ERRPOST1       ECB ADDRESS INVALID
         LR    XRSAVE,XRECB             SAVE REGISTER 1
         L     XRTSTADR,CHECK           $LOAD VALIDITY C. ADR.
         BAL   XRLINK,4(XRTSTADR)       Q. ECB ADDRESS VALID
         LR    XRECB,XRSAVE             RESET REGISTER 1
         BNE   ERROR                   BRANCH TO ABTERM
         B     RBCHECK                 UNCONDITIONALLY BRANCH
         EJECT
         SPACE 2
*  ENTRY POINT IEA0PT01
         SPACE 1
         USING *,XRBASE
IEA0PT01 L     XRBASE,BASE
         USING IGC002+2,XRBASE
         STM   XRPTCODE,SELREG,SAVEXR  SAVE REGISTERS 0-9         M0113
         LR    XRPTCODE,XRECBPTR       LOAD POST CODE
         LR    XROTCB,XRLINK           LOAD TCB ADDRESS
         LTR   XRECB,XRSAVE            INTER-PARTITION POST ?     21B72
         BNM   POSTTEST                NO.BRANCH TO POST PROPER   M1173
         LR    XRTJID,XRBTJID .        YES.GET TJID               20021
         B     TSTTJID .               GO CHECK TJID              20021
         SPACE 2
*   ENTRY POINT IEA0PT02
         SPACE 1
         USING *,XRBASE
IEA0PT02 L     XRBASE,BASE
         USING IGC002+2,XRBASE
         STM   XRPTCODE,SELREG,SAVEXR  SAVE REGISTERS 0-9         M0113
         LR    XRPTCODE,XRECBPTR       LOAD POST CODE
         LR    XRECB,XRSAVE            LOAD ECB ADDRESS
         LR    XROTCB,XRLINK           LOAD TCB ADDRESS
         L     XRCVT,X'10'             LOAD CVT POINTER
         SPACE 2
*  ECB'S RB ADDRESS IS CHECKED TO SEE IF IT IS VALID.
*  THE TESTS ARE COMPOSED OF
*  1. IS RB ADDRESS ON A FULL WORD BOUNDRY
*  2. IS THE SYSTEM MASK IN THE RB'S OPSW ENABLED.
*  3. DOES THE STORAGE KEY OF THE ECB EQUAL THE KEY OF THE RB'S OPSW.
*  4. DOES THE ADDRESS FIELD OF THE OPSW -2 POINT TO SVC 1 (WAIT)
*    INSTRUCTION.
         SPACE 2
RBCHECK  EQU   * .                                            CI A45983
         TM    ZERO(XRECB),ECBPTFLG .  Q. ECB ALREADY POSTED  CI A45983
         BO    EXIT .                  YES, RETURN            CI A45983
         TM    ZERO(XRECB),ECBWTFLG .  Q. ECB BEING WAITED ON CI A45983
         BZ    SETPCODE .              NO, BRANCH - POST      CI A45983
*                                          ISSUED BEFORE WAIT CI A45983
         SR    XRWORK5,XRWORK5         $INITIALIZE REG. TO ZERO
         L     XRWRB,0(XRECB)          LD ECB'S RB ADR.
         LA    XRWRB,0(XRWRB)          CLEAR HI BYTE
         LA    XRQUIT,ERRPOST2         LOAD INVALID RB CODE
         TM    3(XRECB),X'03'          RB ON FULL WORD BOUNDRY
         BC    7,ERROR1                NO, TAKE BRANCH
         L     XRWORK,MACHSIZE(XRCVT)  OBTAIN MACHINE SIZE
         CR    XRWRB,XRWORK           Q.IS RB ADDRESS WITHIN MACH.
         BC    10,ERROR1               NO, TAKE BRANCH
         TM    LHOPSW+1(XRWRB),SUPTST     SUPV TASK              M0012
         BZ    BYP                                               M0039
         CLI   LHOPSW(XRWRB),X'FF'     Q. OPSW ENABLED IN RB
         BC    7,ERROR1                NO, TAKE BRANCH
BYP      EQU   *                                                 M0039
         SR    XRWORK,XRWORK           INITIALIZED TO ZERO
         N     XRECB,RBVALID            AND OFF 4 HI ORDER BITS
         ISK   XRWORK,XRECB            OBTAIN STORAGE KEY OF ECB
         LR    XRECB,XRSAVE             RESTORE ECB ADDRESS
         LM    XRCHCK1,XRCHCK2,KTEST   INITIALIZE REGS FOR RB TEST
         IC    XRWORK5,LHOPSW+1(XRWRB) LOAD OPSW KEY FROM RB
         NR    XRWORK5,XRCHCK1         AND OFF AMWP BITS OF OPSW
         LTR   XRWORK5,XRWORK5         Q.  SUPV PROTECT KEY        0297
         BC    8,ZEROKEY               YES, TAKE BRANCH            0297
         CR    XRWORK,XRWORK5          Q. ARE KEYS ALIKE
         BC    7,ERROR1                NO, TAKE BRANCH
ZEROKEY  L     XRWORK5,RHOPSW(XRWRB)   LOAD OPSW ADDRESS FIELD     0297
         S     XRWORK5,KTWO            SUBTRACT 2 FROM ADDRESS
         CH    XRCHCK2,0(0,XRWORK5)    Q. IS SVC INST. PRESENT (0A01)
         BC    8,POSTTEST              YES,TAKE BRANCH
         SPACE 2
         S     XRWORK5,KTWO            SUBTRACT 2 MORE FROM OPSW ADR.
         CLI   0(XRWORK5),X'44'        Q. WAS SVC 1 EXECUTED
         BE    POSTTEST                YES. CONTINUE               0854
         L     XRWORK5,ZERO(XRECB) .   GET ADDR OF RB TO POST     20021
         TM    RBSTAB(XRWORK5),TRSVRB .Q  TRANSIENT RTN ?         20021
         BO    POSTTEST .              YES - TAKE BRANCH          20021
         LR    XROTCB,XRWRB            DUP ECB-RB ADDRESS        A22207
TCBSRCH  TM    RBSTAB+1(XROTCB),TCBIND Q.LNK FLD POINTS TO TCB   A22207
         L     XROTCB,RBLINK(XROTCB)   GET NEXT RB OR TCB ADDR   A22207
         BZ    TCBSRCH                                           A22207
         TM    TCBFLGS+2(XROTCB),TCBABTRM   Q.ABTERM IN PROCESS  A22207
         BO    EXIT                         YES.DON'T CONTINUE   A22207
         TM    TCBFLGS+0(XROTCB),TCBFA      Q.ABEND IN PROCESS   A22207
         BO    EXIT                         YES.DON'T CONTINUE   A22207
         B     ERROR1                  NO. GO TO ABTERM THIS TASK  0854
         SPACE 1
TJIDREQ  LTR   TJIDTEST,XRECB          INTER-PARTITION POST ?     21B72
         BM    CKTJID                    YES.CHECK TJID           20021
         SPACE 2
*  TEST IF POST FLAG IN ECB ON. YES ON, GO TO EXIT SECTION. NO NOT ON,
* STORE POST CODE AND SET POST FLAG IN ECB.
*  DECREMENT RB'S WAIT COUNT. DECREMENTED WAIT COUNT ZERO GO TO EXIT
* SECTION. COUNT NOT ZERO CONTINUE PROCESS.
         SPACE 2
POSTTEST TM    0(XRECB),ECBPTFLG     Q. ECB'S POST FLAG SET
         BC    12,CONTINUE             NO, TAKE BRANCH
         LM    XRPTCODE,SELREG,SAVEXR  RESTORE REGISTERS 0-9      M0113
         BR    XRRETURN                RETURN
CONTINUE TM    0(XRECB),ECBWTFLG       Q. POST BEFOR WAIT
         BC    1,DECOUNT               NO BRANCH TO DECREMENT COUNT
SETPCODE EQU   * .                                            CI A45983
         ST    XRPTCODE,0(XRECB)       STORE POST CODE
         NI    0(XRECB),RECBWTF .      TURN OFF HIGH BIT IN       20472
*                                    CASE ON DUE TO LARGE PCODE   20472
         OI    0(XRECB),ECBPTFLG       SET POST FLAG
         LM    XRPTCODE,SELREG,SAVEXR  RESTORE REGISTERS 0-9      M0113
         BR    XRRETURN                RETURN
DECOUNT  L     XRRB,0(XRECB)           GET RB ADDRESS
         LA    XRRB,0(XRRB)            ZERO BITS 0-7
         ST    XRPTCODE,0(XRECB)       STORE POST CODE
         OI    0(XRECB),ECBPTFLG .     SET POST FLAG              M5407
         NI    0(XRECB),RECBWTF .      TURN OFF WAIT FLAG         M5407
         SR    XRWTCT1,XRWTCT1         INIT REG TO ZERO           19472
         TM    RBWCF(XRRB),ANYONE      Q. IS WAIT COUNT ZERO
         BZ    EXIT .                                            A38447
         IC    XRWTCT1,RBWCF(XRRB)     LOAD ECBS RB WAIT COUNT
         BNO   NORMAL .                BRANCH IF WT CT NOT 255   A33247
         SPACE 1
*    A WAIT COUNT OF 255 IN A TYPE 3 OR 4 SVRB MEANS THAT THE    A33247
*        TRANSIENT ROUTINE HAS BEEN PREEMPTED (OVERLAID).        A33247
         SPACE 1
         TM    RBSTAB(XRRB),XSNTSVRB . Q.XSNT ROUTINE            A33247
         BNO   NORMAL .                NO.DO NORMAL PROCESSING   A33247
         IC    XRWTCT1,WCTSAVE(XRRB) . YES.USE SAVED WAIT CT     A33247
         LTR   XRWTCT1,XRWTCT1 .       Q.SAVED COUNT = 0         A33247
         BZ    EXIT .                  YES.EXIT                  A33247
NORMAL   EQU   * .                                               A33247
         BCTR  XRWTCT1,0 .          DECREMENT COUNT              A38447
         SPACE 1
*  WAIT COUNT IS ZERO. TEST RB'S ECB SEARCH FLAG. IF FLAG NOT ON GO TO
* NEXT SECTION. IF FLAG IS ON RESET IT AND TEST IF RB ON TOP OF IT'S
* QUEUE. IF RB IS TOP OF IT'S QUEUE GET ECB LIST ADDRESS FROM TCB'S
* REGISTER 1 SAVE AREA. IF RB NOT TOP OF IT'S QUEUE FIND OUT WHAT TYPE
* OF RB IS ON TOP OF IT. THEN GET ECB LIST ADDRESS FROM WHEREVER THE
* REGISTER 1 IS SAVED IN THAT TYPE OF RB. AFTER GETTING ECB LIST
* ADDRESS, GO AND RESET  ALL THE ECB'S WAIT FLAGS TO ZERO.
         SPACE 2
         TM    RBWCF(XRRB),ANYONE .  WAIT COUNT = 255            A38447
         BNO   QENTRY .         NO                               A38447
         STC   XRWTCT1,WCTSAVE(XRRB) .STORE WAIT CT IN SAVE FLD  A38447
         B     TRANS .                                           A38447
QENTRY   STC   XRWTCT1,RBWCF(XRRB) .  STORE IN NORMAL FLD        A38447
TRANS    LTR   XRWTCT1,XRWTCT1 .      IS COUNT ZERO              A38447
         BNZ   EXIT .                                            A38447
         NI    RBSTAB(XRRB),X'FF'-RBWAITP RESET RB WAITING    CI A45983
         LR    XROTCB,XRRB .       DUP RB REG                    A38447
CHECKECB TM    RBSTAB+1(XROTCB),TCBIND .. TCB OR RB              A38447
         L     XROTCB,RBLINK(XROTCB) .  LD NEXT RB OR TCB        A38447
         BZ    CHECKECB .          TEST THIS ONE                 A38447
         TM    RBSTAB+1(XRRB),RBECBWT  Q.ECB'S SEARCH FLAG SET
         BZ    TCBREADY                 NO BRANCH
         NI    RBSTAB+1(XRRB),RRBECBWT  RESET RB ECB SEARCH FLAG
         C     XRRB,TCBRBP(XROTCB)     Q.ECB'S RB TOP OF QUEUE
         BE    TCBXR1         YES BRANCH
         L     XRWRB,TCBRBP(XROTCB)     LD TOP RB'S ADR
LOOP3    L     XRWRB1,RBLINK(XRWRB)     LD NEXT RB'S ADR
         LA    XRWRB1,0(XRWRB1)         ZERO BITS S-7
         CR    XRRB,XRWRB1             Q.FOUND WAITING RB
         BE    RBTYPE                   YES BRANCH
         LR    XRWRB,XRWRB1             SAVE HIGHER RB'S ADR
         B     LOOP3
RBTYPE   LA    XRECBPTR,IRBXR1(XRWRB)  SIRB IRB REG PTR          A68359
         B     RESETWT
TCBXR1   LA    XRECBPTR,TCBGRS1(XROTCB) TCB REG PTR              A68359
RESETWT  TM    0(XRECBPTR),X'FF'       COMP REG                  A68359
         BC    1,RESETWT2              YES                       A68359
         L     XRECBPTR,0(XRECBPTR)    TRUE LIST                 A68359
         B     RESETWT4                                          A68359
RESETWT2 L     XRECBPTR,0(XRECBPTR)    REG 1                     A68359
         LCR   XRECBPTR,XRECBPTR                                 A68359
RESETWT4 EQU   *                                                 A68359
         LA    XRABTERM,ERRPOST1       ECB ADDRESS INVALID
         LR    XR0,XRRB                SAVE RB ADDRESS
LOOP4    L     XRWORK,0(XRECBPTR)      LOAD ECB ADDRESS
         TM    LHOPSW+1(XRRB),SUPTST   Q. REQUESTOR SUPERVISOR
         BC    8,NOCHECK               YES, TAKE BRANCH
         LR    XRECB,XRWORK            DUP. ECB ADDRESS
         L     XRCVT,X'10'             VAL CHECK PARAMETER
         L     XRTSTADR,CHECK          LOAD VALIDITY C. ROUTINE ADR.
         BAL   XRLINK,4(XRTSTADR)      Q. IS ECB ADDRESS VALID
         BE    NOCHECK                 BRANCH IF ECB IS VALID     20002
         LA    XRLINK,NOCHECK          SET RETURN ADDR            20002
COMMCHEK L     COMMREG,TCBJSCB(TCBREG) GET JSCB ADDR              20002
         USING IEZJSCB,COMMREG                                    20002
         L     COMMREG,JSCBCSCB        GET CSCB ADDR              20002
         USING CSCB,COMMREG                                       20002
         L     COMMREG,CHECBP          GET COMMUNICATION'S        20002
*                                           ECB ADDRESS           20002
         LA    CHECKREG,0(CHECKREG)    CLEAR THE HIGH BYTE        20002
         CR    COMMREG,CHECKREG        Q.ECB EQUAL TO COMM. ECB   20002
         BCR   8,XRLINK                YES.CONTINUE               20002
         BALR  ERRBASE,0 .        COMMON BASE FOR WAIT OR POST    M3988
         USING *,ERRBASE .                                        M3988
         B     ERROR                   NO.GO TO ABTERM            20002
         DROP  ERRBASE .                                          M3988
NOCHECK  NI    0(XRWORK),RECBWTF       ZERO WT. FLAG
         TM    0(XRECBPTR),LSTIND      Q.LAST ECB PTR
         BO    TCBOK                   YES,TAKE BRANCH
         LA    XRECBPTR,4(XRECBPTR)     UPDATE ECB LIST
         B     LOOP4
         SPACE 1
*            RB'S WAIT COUNT HAS GONE TO ZERO
*
TCBOK    LR    XRRB,XR0                RESTORE RB ADDRESS
TCBREADY LA    REGRTCB,0(XROTCB)        $LOAD TCB ADDRESS
         SPACE 1                                                 A33247
*    A NON-ZERO WAIT COUNT AT THIS POINT MEANS THAT THE RB IS    A33247
*        FOR A TRANSIENT ROUTINE WHICH WAS OVERLAID.  THE REAL   A33247
*        WAIT COUNT IS IN THE SVRB AT OFFSET X'18'.              A33247
         SPACE 1                                                 A33247
* GET INITIATOR TQE,  IF NO TQE GO TO TASK SWITCH ROUTINE.  IF TQE MTS0
* IS NOT REAL AND ON QUEUE GO TO TASK SWITCH ROUTINE.  DEQUEUE TQE MTS0
* RESTORE CPU VALUE AND MARK AS TASK TQE.  GO TO TASK SWITCH       MTS0
* ROUTINE.                                                         MTS0
JSTMEP   EQU   *                                                   MTS0
         L     XRWTCT1,TCBJSTCB(REGRTCB) GET J/S TCB               MTS0
         L     XRNEW,TCBOTC(XRWTCT1)   GET MOTHER OF J/S           MTS0
         LA    XRWTCT1,NOJSTMPT        SET UP BRANCH REGISTER      MTS0
         LTR   XRNEW,XRNEW             IS TCB A SYSTEM TASK        MTS0
         BCR   8,XRWTCT1               YES, EXIT                   MTS0
         TM    TCBTSFLG(XRNEW),TSTASK .Q  TS TASK?                20021
         BCR   1,XRWTCT1 .             YES, EXIT                  20021
         TM    TCBPKF(XRNEW),X'F0'     IS PROTECT KEY = 0          MTS0
         BCR   8,XRWTCT1               YES, SYSTEM TASK            MTS0
         L     XRTESTWD,TCBTME(XRNEW)  ADDRESS OF TQE              MTS0
         LTR   XRTESTWD,XRTESTWD       IS THERE A TQE              MTS0
         BCR   8,XRWTCT1               NO, EXIT FROM J/S TIMING    MTS0
         TM    TQEFLGS(XRTESTWD),X'03' IS TQE REAL                 MTS0
         BCR   14,XRWTCT1              NO, EXIT FROM J/S TIMING    MTS0
         TM    TQEFLGS(XRTESTWD),X'80' IS TQE OFF QUEUE            MTS0
         BCR   1,XRWTCT1               YES, EXIT FROM J/S TIMING   MTS0
         LR    XR0,XRZERO              SAVE REGISTERS 7,8,14       MTS0
         LR    XRWTCT1,XRRETURN                                    MTS0
         LR    XRWRB1,XRWTCT                                       MTS0
         L     XRBASE,BASEDEQ          ADDRESS DEQUEUE ROUTINE     MTS0
         BALR  XRRB,XRBASE             GO TO DEQUEUE TQE           MTS0
         USING *,XRRB                  REESTABLISH ADDRESSABILITY  MTS0
         L     XRBASE,BASE                                         MTS0
         USING IGC002+2,XRBASE                                     MTS0
         DROP  XRRB                                                MTS0
         LR    XRZERO,XR0              RESTORE REGS 7,8,14         MTS0
         LR    XRRETURN,XRWTCT1                                    MTS0
         LR    XRWTCT,XRWRB1                                       MTS0
         L     XRWTCT1,TCBJSTCB(XRWRB)                             MTS0
         L     XRWTCT1,TCBOTC(XRWTCT1)                             MTS0
         L     XRWTCT1,TCBTME(XRWTCT1)                             MTS0
         MVC   TQEVAL(4,XRWTCT1),TQESAV(XRWTCT1) RESTORE CPU VAL   MTS0
         NI    TQEFLGS(XRWTCT1),X'FC'  MARK AS TASK TIME           MTS0
NOJSTMPT EQU   *                                                   MTS0
         LM    XRPTCODE,SELREG,SAVEXR  RESTORE REGISTERS 0-9      M0113
         L     REGSWTCH,SWTEST          $LOAD ADR. OF TASK SWITCH R.
         BR    REGSWTCH                 BRANCH TO T.S. ROUTINE
         SPACE 1                                                 A33247
EXIT     LM    XRPTCODE,SELREG,SAVEXR  RESTORE REGS 0-9           M0113
         BR    XRRETURN
*  ERROR EXIT
ERROR1   LR    XRABTERM,XRQUIT         LOAD ERROR CODE
*
ERROR    LR    XRERCODE,XRABTERM       LOAD ERROR CODE
         LR    XRCVT,XRRETURN          SAVE RETURN REG
         BALR  XRBASE,0                RE-ESTABLISH
         USING *,XRBASE                ADDRESSING
         L     XRBASE,BASE             FOR WAIT
         USING IGC002+2,XRBASE         AND POST
         LR    XRQUIT,XRBASE           SAVE BASE XR                0854
         L     XRABTERM,ABTERM         LOAD E P
         L     XRRETURN,IOSWADDR .ADDR OF I/O SW IN FLIH      BD A37037
         TM    ONE(XRRETURN),X'F0' IS ENTRY FROM IOS-SW ON    BD A37037
         BO    IOENTRY .          YES-SET RETURN TO HERE      BD A37037
         L     XRRETURN,TYP1EXIT .SET RETURN TO TYPE 1 EXIT   BD A37037
         BR    XRABTERM .         GO TO ABTERM                BD A37037
IOENTRY  EQU   * .                                            BD A37037
         BALR  XRRETURN,XRABTERM       GO TO ABTERM
         LR    XRRETURN,XRCVT          RESTORE RETURN REG
         LR    XRBASE,XRQUIT           RESTORE BASE XR             0854
         BC    15,EXIT
         AIF   (NOT &B(1)).TSO001                                 20021
***********************************************************************
*
*     THIS CODE IS ENTERED IF A TJID WAS SPECIFIED.  IT ALLOWS    20021
*     THE POSTING OF TIME SHARING USER'S THAT MAY OR MAY NOT BE   20021
*     IN CORE.  IF THE ECB IS NOT IN CORE, CORE IS GOTTEN VIA     20021
*     BRANCH ENTRY TO REGMAIN FOR AN INTER-PARTITION POST BLOCK.  20021
*     THIS IPPB IS INITIALIZED AND CONTROL IS PASSED TO THE TIME  20021
*     SHARING INTERFACE PROGRAM (TSIP)    WHICH WILL BRING THE    20021
*     USER TO BE POSTED INTO CORE.                                20021
*
***********************************************************************
.TSO001  ANOP                                                     20021
CKTJID   EQU   * .                                                20021
         L     XRECB,PARMTCB(XRECB)     TCB OF POSTEE IF ANY      21B72
         LR    XRLINK,XROTCB      SAVE POSTERS TCB                21B72
         LTR   XRECB,XRECB              TCB = 0 ?                 21B72
         BZ    TCBZERO                  USE POSTERS TCB           21B72
         LR    TCBREG,XRECB             USE TCB OF ECB OWNER      21B72
TCBZERO  L     XRECB,PARMECB(TJIDTEST) @ECB FROM IPP PARM LIST    21B72
         L     XRTJID,PARMTJID(TJIDTEST) @TJID FROM IPP PARM LIST 21B72
         LH    XRTJID,ZERO(XRTJID)      TJID                      21B72
TSTTJID  EQU   * .                                                21B72
         LR    TJIDTEST,XRTJID          SAVE FOR TSIP             21B72
         LTR   XRTJID,XRTJID .    Q. TJID = 0                     21B72
         L     XRCVT,CVTPTR .          GET ADDRESS OF CVT         20021
         BZ    POSTTEST .              YES- BACKGROUND TASK       20021
         AIF   (&B(1)).TSO004                                     20021
         LA    XRABTERM,ERRPOST1 .     ECB ADDRESS INVALID        20021
         B     ERROR .                 BRANCH - INVALID IPP       20021
         AGO   .TSO002                                            20021
.TSO004  ANOP                                                     20021
         TM    TSCVTPTR(XRCVT),CVTTSRDY Q IS TIME SHARING ACTIVE  20021
         BNZ   TSOACT             YES                             21B72
         LR    XROTCB,XRLINK      POSTERS TCB FOR ABTERM          21B72
         LA    XRABTERM,ERRPOST1 .     ECB ADDRESS INVALID        20021
         BZ    ERROR .                 BRANCH - INVALID IPP       20021
TSOACT   L     XRTSCVT,TSCVTPTR(XRCVT)  GET POINTER TO TSCVT
         USING TSCVT,XRTSCVT                                      20021
         MH    XRTJID,TSCVTSZU .       COMPUTE DISPLACEMENT IN    20021
*                                      TJB LIST                   20021
         L     XRTJB,TSCVTTJB .        GET ADDRESS OF TJB LIST    20021
         AR    XRTJB,XRTJID .          GET ADDRESS OF THE TJB OF  20021
*                                      USER TO BE POSTED          20021
         DROP  XRTSCVT .                                          20021
         USING TJB,XRTJB .                                        20021
         TM    TJBSTAT,TJBNJB .    Q. TJB NOT ACTIVE              M3813
         BO    EXIT .              YES-RETURN W/O POSTING ECB     M3813
         TM    TJBSTAT,TJBINCOR .  Q IS USER TO BE POSTED         20021
*                                  IN CORE ?                      20021
         BO    POSTTEST .          YES - NORMAL POST PROCESSING   20021
         ST    XRRETURN,IPRG14SA . SAVE REG 14 BEFORE GETMAIN     20021
         STM   XRPTCODE,XRECB,IPPSAV .SAVE POST CODE AND ECB ADR  20021
         L     XRM0,GMIPPB .       SUBPOOL& LENGTH FOR REGMAIN    20021
         LR    XRM1,XRM0 .         NEGATIVE NUMBER FOR REGMAIN    20021
         LR    XTEMPBAS,XRBASE .   SAVE BASE REG ACROSS GM        20021
         L     XRREGM,REGMAIN .    GETMAIN BRANCH ENTRY           20021
         BALR  XRRETURN,XRREGM .   TO GETMAIN 16 BYTES FOR IPPB   20021
         LR    XRBASE,XTEMPBAS .       RESTORE BASE REGISTER      20021
         LR    NEWIPPB,XRM1 .          SET UP NEWIPPB REG         20021
         USING IPPB,NEWIPPB .                                     20021
         XC    IPPBTJQ(L16),IPPBTJQ .  CLEAR NEW IPPB             20021
         LM    XRPTCODE,XRECB,IPPSAV . RESTORE POST CODE AND ECB  20021
         ST    XRECB,IPPBECB .         PUT ECB ADDR IN IPPB       20021
         ST    XRPTCODE,IPPBCODE .     PUT POST CODE IN IPPB      20021
         L     IPPBREG,TJBIPPB .       GET ADDR. OF FIRST IPPB    20021
         LTR   IPPBREG,IPPBREG .       Q ANY IPPB'S ?             20021
         BZ    FSTIPPB .               NO-GO QUEUE IPPB           20021
NEXTIPPB EQU   * .                                                20021
         DROP  NEWIPPB .                                          20021
         USING IPPB,IPPBREG .                                     20021
         NC    IPPBTJQ(FOUR),IPPBTJQ . Q LAST IPPB ?              20021
         BZ    QIPPB .                 YES  -  TAKE BRANCH        20021
         L     IPPBREG,IPPBTJQ .       NO - GET ADR.OF NEXT IPPB  20021
         B     NEXTIPPB .              PROCESS NEXT IPPB          20021
FSTIPPB  EQU   * .                                                20021
         ST    NEWIPPB,TJBIPPB .       QUEUE IPPB OFF TJB         20021
         B     TOTSIP .                PREPARE FOR TSIP           20021
QIPPB    ST    NEWIPPB,IPPBTJQ .       PUT NEW IPPB ON QUEUE      20021
TOTSIP   EQU   * .                                                20021
         DROP  IPPBREG .                                          M1070
         DROP  XRBASE .                                           M1070
         DROP  XRTJB .                                            20021
         L     XRTSCVT,TSCVTPTR(XRCVT) GET ADDR. OF TSCVT         20021
         LR    XTEMPBAS,XRBASE .       SAVE BASE ACROSS TSIP      20021
         USING IGC002+2,XTEMPBAS .                                20021
         USING TSCVT,XRTSCVT .                                    20021
         L     XRTSIP,TSCVTI01 .       GET ENTRY PT. OF TSIP      20021
         DROP  XRTSCVT .                                          20021
         SPACE
*    TAKE BRANCH ENTRY TO TSIP TO REQUEST USER TO BE POSTED TO    20021
*                   BE SWAPPED INTO CORE                          20021
         SPACE
         TSEVENT  USERRDY,TJID=(6),ENTRY=BRANCH
         LR    XRBASE,XTEMPBAS .       RESTORE BASE REG           20021
         DROP  XTEMPBAS .                                         20021
         USING IGC002+2,XRBASE .                                  20021
         L     XRRETURN,IPRG14SA .     RESTORE RETURN REG         20021
         B     EXIT .                                             20021
.TSO002  ANOP                                                     20021
         SPACE 2
ABTERM   DC    A(IEA0AB01)              ADDRESS OF ABTERM
CHECK    DC    A(IEA0VL01)              ADDRESS OF VALIDITY CHECK
SWTEST   DC    A(IEA0DS02)              ADR OF SWITCHING ROUTINE
BASE     DC    A(IGC002+2)
BASEDEQ  DC    A(IEAQTD01)             DEQUEUE ROUTINE             MTS0
BASEWT   DC    A(IGC001+2)                                         MTS0
W30MIN   DC    X'041EC148'         WAIT VALUE IN TIMER UNITS       8165
SAVEXR   DC    10F'0'                  REGISTER SAVE AREA         M0113
KTEST    DC    X'000000F0'             USED TO AND OFF AMWP BITS
         DC    X'00000A01'             USED TO VALIDATE RB
RBVALID  DC    X'FFFFFFF0'              USED TO AND OFF LAST 4 BITS
KTWO     DC    X'00000002'             RB CHECK VALUE 2.
IOSWADDR DC    A(IORGSW) .        I/O SW IN I/O FLIH(QNU)     BD A37037
TYP1EXIT DC    A(IEA0XE00) .      ADDR OF TYPE 1 EXIT(QNU)    BD A37037
         AIF   (NOT &B(1)).TSO003                                 20021
IPRG8SAV DC    1F'0' .             REG 8 SAVE ACROSS IPPB GM      20021
IPRG14SA DC    1F'0' .             REG 14 SAVE ACROSS IPPB GM     20021
IPPSAV   DC    2F'0' .             CODE AND WAIT CNT FOR GM       20021
GMIPPB   DC    X'F5000010'         TO GET 16 BYTE FROM SP 255     20021
.TSO003  ANOP                                                     20021
ADIEASAV DC    V(IEASCSAV) .       ADDR SVC REGISTER SAVE AREA    20021
REGMAIN  DC    V(RMBRANCH) .       REGMAIN BRANCH ENTRY           20021
TJIDBIT  DC    A(1)                TJID INDICATOR BIT             20021
         IKJIPPB
         EJECT
         IKJTJB
         EJECT
         IKJTSCVT
CSCB     DSECT                                                    20002
         IEECHAIN                                                 20002
         IEZJSCB                                                  20002
         MEND
