*        %GOTO  IOBBSL;                                              /*
         MACRO
         IEZIOB &DSECT=YES
         EJECT
         AIF   ('&DSECT' EQ 'NO').NODSCT
IOB      DSECT
         AGO   .CONT
.NODSCT  ANOP
         DS    0D
IOB      EQU   *
.CONT    ANOP
*
*    RELEASE 20.2, 3/29/71, LEVEL=1
*    RELEASE 21, 3/30/71, LEVEL=1
*
***********************************************************************
*                                                                     *
*                    PREFIX SECTIONS OF THE IOB                       *
*                                                                     *
***********************************************************************
         SPACE 3
IOBPREFX DS    0D
         SPACE 1
*                            ******************************************
*                            *                                        *
IOBQSAMC DS    0D *          *        QSAM,BSAM,BPAM PREFIX           *
IOBBSAMC DS    0D *          *     CHAINED SCHEDULING ** 16 BYTES     *
IOBBPAMC DS    0D *          *                                        *
*                            ******************************************
         SPACE 2
IOBCFLG1 DS    B
*
IOBPTST  EQU   X'08' --- NOTE OR POINT OPERATION IS IN PROCESS
IOBABAPP EQU   X'04' --- ERROR PROCESSED ONCE BY ABMORMAL-END APPENDAGE
IOBRSTCH EQU   X'02' --- RESTART CHANNEL
IOBPCI   EQU   X'01' --- PCI INTERRUPT HAS OCCURRED
         DS    XL1 ----- RESERVED
         SPACE 1
IOBCINOP DS    CL1 ----- OFFSET OF LAST I/O COMMAND FOR  INPUT
*                        OPERATION(NOP CCW) FROM THE ICB ORIGIN
IOBCONOP DS    CL1 ----- OFFSET OF LAST I/O COMMAND FOR  OUTPUT
*                        OPERATION(NOP CCW) FROM THE ICB ORIGIN
IOBCECB  DS    F ------- EVENT CONTROL BLOCK
IOBCICB  DS    A ------- ADDR.OF FIRST ICB ON QUEUE
IOBCNOPA DS    A ------- ADDR.OF NOP COMMAND AT END OF QUEUE
         SPACE 2
         ORG   IOBPREFX+8
         SPACE 2
*                            ******************************************
*                            *                                        *
IOBQSAMN DS    0D *          *        QSAM,BSAM,BPAM PREFIX           *
IOBBSAMN DS    0D *          *    NORMAL SCHEDULING *** 8 BYTES       *
IOBBPAMN DS    0D *          *                                        *
*                            ******************************************
         SPACE 1
*
IOBNIOBA DS    0A ------ ADDR.NEXT IOB ON CHAIN
IOBNFLG1 DS    B
*
IOBPRTOV EQU   X'80' --- 'PRTOV' HAS OCCURRED
IOBWRITE EQU   X'40' --- 'WRITE' OPERATION IN PROCESS
IOBREAD  EQU   X'20' --- 'READ' OPERATION IN PROCESS
IOBUPDAT EQU   X'10' --- BLOCK IS TO BE UPDATED
IOBBKSPC EQU   X'08' --- IOB BEING USED FOR BACKSPACE,CONTROL,NOTE/PT.
IOBSPAN  EQU   X'04' --- THIS RECORD IS A SPANNED RECORD
IOBFIRST EQU   X'01' --- THIS IS FIRST IOB ON CHAIN
*
IOBNIOBB DS    AL3 ----- ADDR.NEXT IOB ON CHAIN
         SPACE 1
IOBNECB  DS    F ------- EVENT CONTROL BLOCK
         SPACE 2
         ORG   IOBPREFX+8
         SPACE 2
*                            ******************************************
*                            *                                        *
IOBBDAM  DS    0D *          *       BDAM PREFIX *** 8 BYTES          *
*                            *                                        *
*                            ******************************************
         SPACE 1
*
IOBDQADA DS    0A ------ ADDR.OF IOB WAITING TO DEQUEUE TRACKS
*                        OCCUPIED BY SPANNED RECORDS
IOBDEQIN DS    B ------- DEQUEUE LOOP INDICATOR
IOBDEQ   EQU   X'80' --- TASK WITH SPANNED RECORD BEING DEQUEUED
IOBDQADB DS    AL3 ----- ADDR.OF IOB WAITING TO DEQUEUE TRACKS
*                        OCCUPIED BY SPANNED RECORDS
IOBSWAP  DS    A ------- ADDR.OF SPANNED WORK AREA
         SPACE 2
         ORG   IOBPREFX+12
         SPACE 2
*                            ******************************************
*                            *                                        *
IOBGAM   EQU   * *           *                                        *
IOBQISAM EQU   * *           *       GAM,QISAM PREFIX *** 4 BYTES     *
*                            ******************************************
*
*
IOBGQECB DS    F --- EVENT CONTROL BLOCK
         EJECT
***********************************************************************
*                                                                     *
*                    STANDARD SECTION OF THE IOB                      *
*                                                                     *
***********************************************************************
         SPACE 3
IOBSTDRD DS    0D
         SPACE 1
IOBFLAG1 DS    B
*
IOBDATCH EQU   X'80' --- DATA CHAINING USED IN CHANNEL PROGRAM
IOBCMDCH EQU   X'40' --- COMMAND CHAINING USED IN CHANNEL PROGRAM
IOBERRTN EQU   X'20' --- ERROR ROUTINE IS IN CONTROL
IOBRPSTN EQU   X'10' --- DEVICE IS TO BE REPOSITIONED
IOBCYCCK EQU   X'08' --- CYCLIC REDUNDANCY CHECK NEEDED(TAPE ONLY)
IOBFCREX EQU   X'08' --- FETCH COMMAND RETRY EXIT (DIRECT ACCESS ONLY)
IOBIOERR EQU   X'04' --- I/O ERROR HAS OCCURRED
IOBUNREL EQU   X'02' --- THIS I/O REQUEST IS UNRELATED(NON-SEQUENTIAL)
IOBRSTRT EQU   X'01' --- RESTART ADDR.IN IOB TO BE USED
         SPACE 1
IOBFLAG2 DS    B
*
IOBHALT  EQU   X'80' --- HALT I/O HAS BEEN ISSUED BY SVC PURGE ROUTINE
IOBSENSE EQU   X'40' --- ISSUE SENSE COMMAND AFTER DEVICE END OCCURS
IOBPURGE EQU   X'20' --- IOB HAS BEEN PURGED *ALLOW I/O TO QUIESCE
IOBRDHA0 EQU   X'10' --- HOME ADDRESS TO BE READ * NO SEEK NEEDED
IOBALTTR EQU   X'08' --- NO TEST FOR OUT-OF-EXTENT * AN ALTERNATE TRACK
*                        IS IN USE
IOBSKUPD EQU   X'04' --- SEEK ADDRESS IS BEING UPDATED -CYLINDER END
*                        OR FILE MASK VIOLATION HAS OCCURRED
IOBSTATO EQU   X'02' --- DEVICE END STATUS HAS BEEN ORED WITH
*                        CHANNEL END STATUS - GRAPHICS DEVICE
IOBPNCH  EQU   X'01' --- TURNED ON BY QSAM WHEN ERROR RECOVERY IS TO
*                        BE PROVIDED FOR THE 2540 CARD PUNCH
         SPACE 1
IOBSENS0 DS    B ------- FIRST SENSE BYTE
IOBS0B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)
IOBS0B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)
IOBS0B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)
IOBS0B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)
IOBS0B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)
IOBS0B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)
IOBS0B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)
IOBS0B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)
IOBSENS1 DS    B ------- SECOND SENSE BYTE
IOBS1B0  EQU   X'80' --- BIT 0 (DEVICE DEPENDENT)
IOBS1B1  EQU   X'40' --- BIT 1 (DEVICE DEPENDENT)
IOBS1B2  EQU   X'20' --- BIT 2 (DEVICE DEPENDENT)
IOBS1B3  EQU   X'10' --- BIT 3 (DEVICE DEPENDENT)
IOBS1B4  EQU   X'08' --- BIT 4 (DEVICE DEPENDENT)
IOBS1B5  EQU   X'04' --- BIT 5 (DEVICE DEPENDENT)
IOBS1B6  EQU   X'02' --- BIT 6 (DEVICE DEPENDENT)
IOBS1B7  EQU   X'01' --- BIT 7 (DEVICE DEPENDENT)
*
IOBECBPT DS    0A ------ ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
IOBECBCC DS    CL1 ---- COMPLETION CODE FOR THIS I/O REQUEST
IOBECBPB DS    AL3 ----- ADDRESS OF ECB TO BE POSTED ON I/O COMPLETION
*
IOBFLAG3 DS    B ------- ERROR ROUTINE FLAG BYTE
IOBCSW   DS    CL7 ----- LOW ORDER 7 BYTES OF CSW AT CHANNEL END
*
IOBSTART DS    0A ------ ADDRESS OF CHANNEL PROGRAM
IOBSIOCC DS    B ------- BITS 2 AND 3 = C.C. FROM SIO
IOBSTRTB DS    AL3 ----- ADDRESS OF CHANNEL PROGRAM
*
IOBDCBPT DS    0A ------ ADDRESS OF DATA CONTROL BLOCK FOR THIS IOB
         DS    XL1 ----- RESERVED
IOBDCBPB DS    AL3 ----- ADDRESS OF DATA CONTROL BLOCK FOR THIS IOB
*
IOBRESTR DS    0A ------ RESTART ADDRESS FOR ERROR RETRY
IOBREPOS DS    CL1 ----- CODE USED TO REPOSITION DEVICE
IOBRSTRB DS    AL3 ----- RESTART ADDRESS FOR ERROR RETRY
*
IOBINCAM DS    0H ------ VALUE USED TO INCREMENT BLOCK COUNT ON TAPE
IOBBTAMF DS    B ------- FLAG BYTE FOR BTAM
IOBPRMER EQU   X'80' --- 'SAD','ENABLE' ISSUED BY OPEN CAUSED I/O ERROR
IOBINUSE EQU   X'40' --- IOB IS IN USE
IOBOLTST EQU   X'01' --- LINE IS UNDER ON-LINE TEST OPERATION
         SPACE 1
         DS    XL1 ----- RESERVED
         ORG   IOBINCAM
IOBCRDCC DS    CL1 ----- OPTICAL READER: DATA CHECK ERROR COUNT
IOBCRILC DS    CL1 ----- OPTICAL READER: INCORRECT LENGTH ERROR COUNT
         SPACE 2
IOBERRCT DS    H ------- NUMBER OF ERROR RETRIES
         EJECT
***********************************************************************
*                                                                     *
*                   EXTENSION SECTIONS OF THE IOB                     *
*                                                                     *
***********************************************************************
         SPACE 1
IOBEXTEN DS    0D
         SPACE 1
*                            ******************************************
*                            *                                        *
*                            *  DIRECT ACCESS EXTENSION *** 8 BYTES   *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBSEEK  DS    0CL8 ----
*
IOBM     DS    CL1 ----- RELATIVE EXTENT NUMBER FOR THIS REQUEST(0-15)
*
IOBBB    DS    0CL2 ---- BIN NUMBER(DATA CELL)
IOBBB1   DS    CL1
IOBBB2   DS    CL1
*
IOBCC    DS    0CL2 ---- CYLINDER NUMBER
IOBCC1   DS    CL1
IOBCC2   DS    CL1
*
IOBHH    DS    0CL2 ---- TRACK NUMBER
IOBHH1   DS    CL1
IOBHH2   DS    CL1
IOBR     DS    CL1 ----- RECORD NUMBER
         SPACE 1
*                            ******************************************
*                            *                                        *
         ORG   IOBEXTEN *    * BTAM EXTENSION ** 40 BYTES + CHNL.PGM  *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBUCBX  DS    CL1 ----- LINE NUMBER IS USED TO LOCATE THE
*                        PROPER UCB ADDRESS IN THE DEB.
IOBWORK  DS    CL5 ----- WORK AREA USED BY ERROR ROUTINES AND
*                        ON-LINE TERMINAL ROUTINES
IOBRCVPT DS    CL1 ----- RECEIVED ACK (ACK-0 OR ACK-1)
IOBSNDPT DS    CL1 ----- SENT ACK (ACK-0 OR ACK-1)
IOBERCCW DS    CL8 ----- CCW AREA USED BY BTAM ERROR ROUTINES
IOBERINF DS    CL16 ---- ERROR INFORMATION FIELD USED BY BTAM ERROR RTN
IOBCPA   DS    0D ------ AREA FOR CHANNEL PROGRAMS.LENGTH VARIES
*                        ACCORDING TO TERMINAL AND OPTIONS
         EJECT
*                            ******************************************
*                            *                                        *
         ORG   IOBSEEK+8 *   *        BISAM EXTENSION *** 12 BYTES    *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBCCWAD DS    A ------- FOR FIXED LENGTH RCRDS:PTR.TO FIRST CCW
*                        FOR VARIABLE RECORDS:PTR.TO BUFFER(DYNAMIC
*                        BUFFERING SPECIFIED)AFTER COMPLETION OF
*                        READ FOR UPDATE(READ KU)
         SPACE 1
IOBINDCT DS    B
*
IOBDEQCP EQU   X'80' --- DEQUEUE CHANNEL PROGRAM FROM QUEUE
IOBUNSCH EQU   X'40' --- UNSCHEDULER QUEUE
IOBOVPTR EQU   X'20' --- PTR.TO OVERFLOW RECORD INDICATOR:
*                        BIT = 0 MEANS 'DECBAREA' + 6 POINTS TO
*                         OVERFLOW RECORD DATA
*                        BIT = 1 MEANS 'DCBMSWA' POINTS TO OVERFLOW
*                         RECORD KEY FOLLOWED BY DATA
IOBKEYAD EQU   X'10' --- PTR.TO OVERFLOW RECORD KEY INDICATOR:
*                        BIT = 0 MEANS 'DECBKEY' POINTS TO OVERFLOW
*                         RECORD KEY
*                        BIT = 1 MEANS 'DCBMSWA' + 8 POINTS TO
*                         OVERFLOW RECORD KEY
IOBCHNNL EQU   X'01' --- CHANNEL END STATUS INDICATOR:
*                        BIT = 0 MEANS NORMAL CHANNEL END OCCURRED
*                        BIT = 1 MEANS ABNORMAL END OCCURRED
*
         SPACE 1
IOBUNSQR DS    B ------- REASON FOR UNSCHEDULED QUEUE
*
IOBCPBSY EQU   X'80' --- CHANNEL PROGRAM CP1  OR CP2 BUSY
IOBNTAV1 EQU   X'40' --- NO CP4,CP5 OR CP6 AVAILABLE
IOBNTAV2 EQU   X'20' --- NO CP7 AVAILABLE
IOBKNWR  EQU   X'10' --- WRITE KN IS IN EFFECT(UNSCHEDULED IOB IS FOR
*                        WRITE KN)
IOBKNRWR EQU   X'08' --- WRITE KN IS IN EFFECT(UNSCHEDULED IOB IS FOR
*                        READ OR WRITE KN)
         SPACE 1
IOBAPP   DS    CL1 ----- APPENDAGE CODE -(CONSULT SYSTEM CONTROL BLOCKS
*                        MANUAL FOR CODE DEFINITIONS)
IOBASYN  DS    CL1 ----- ASYNCHRONOUS ROUTINE CODE -(CONSULT SYSTEM
*                        CONTROL BLOCKS MANUAL FOR CODE DEFINITIONS)
IOBFCHAD DS    0A ------ FORWARD CHAIN ADDRESS
IOBCOUNT DS    CL1 ----- WRITE CHECK COUNTER
IOBFCHNB DS    AL3 ----- FORWARD CHAIN ADDRESS
IOBBCHAD DS    A ------  BACKWARD CHAIN ADDRESS
         EJECT
*                            ******************************************
*                            *                                        *
         ORG   IOBEXTEN *    *      GAM EXTENSION *** 40 BYTES        *
*                            *                                        *
*                            ******************************************
         SPACE 2
IOBUCBXG DS    CL1 ----- UCB INDEX
         DS    XL3 ----- RESERVED
IOBNXTPT DS    0A ------ PTR.TO NEXT AVAILABLE IOB
*                        ZERO IF LAST IOB
IOBSTATA DS    B ------- STATUS SWITCH
IOBAVLFL EQU   X'80' --- IF BIT IS 0,IOB IS AVAILABLE
*                        IF BIT IS 1,IOB IS NOT AVAILABLE
IOBNXTPB DS    AL3 ----- PTR.TO NEXT AVAILABLE IOB
*                        ZERO IF LAST IOB
IOBCCW   DS    CL32 ---- CHANNEL COMMAND WORDS USED TO TRANSFER DATA
         SPACE 2
*                            ******************************************
*                            *                                        *
         ORG   IOBSEEK+8 *   *     QISAM EXTENSION *** 2 BYTES        *
*                            *                                        *
*                            ******************************************
         SPACE 1
W1IEXTEN DS    0CL2 ---- APPENDAGE
W1OEXTEN DS    CL2 -----  CODES
         EJECT
*                            ******************************************
*                            *                                        *
         ORG   IOBSEEK+8 *   * BDAM EXTENSION ** 40 BYTES + CHNL.PGM  *
*                            *                                        *
*                            ******************************************
         SPACE 1
IOBDBYTR DS    H ------- NUMBER OF UNUSED BYTES ON TRACK
IOBDIOBS DS    H ------- OVERALL SIZE OF THE IOB
IOBDPLAD DS    0A ------ ADDRESS OF NEXT IOB IN POOL OF IOB'S
IOBDAYLI DS    B ------- ALL BITS ZERO INDICATE AVAILABILITY OF IOB
*
IOBDPLB  DS    AL3 ----- ADDRESS OF NEXT IOB IN POOL OF IOB'S
         SPACE 1
IOBDTYPE DS    B ------- TYPE OF REQUEST AND SPECIFIED OPTIONS
*
IOBVERFY EQU   X'80' --- VERIFY
IOBOVFLO EQU   X'40' --- OVERFLOW
IOBEXTSC EQU   X'20' --- EXTENDED SEARCH
IOBFDBCK EQU   X'10' --- FEEDBACK
IOBACTAD EQU   X'08' --- ACTUAL ADDRESSING
IOBDYNBF EQU   X'04' --- DYNAMIC BUFFERING
IOBRDEXC EQU   X'02' --- READ EXCLUSIVE
IOBRELBL EQU   X'01' --- RELATIVE BLOCK ADDRESSING
         SPACE 1
IOBDTYP2 DS    B ------- SECOND BYTE OF OPTIONS AND REQUESTS
*
IOBSKEY  EQU   X'80' --- KEY ADDRESS CODED AS 'S'
IOBSBLKL EQU   X'40' --- BLOCK LENGTH CODED AS 'S'
IOBSUFFX EQU   X'30' --- INDICATES TYPE OF SUFFIX('R' OR 'RU')
IOBRQUST EQU   X'08' --- BIT = 1 MEANS READ; BIT = 0 MEANS WRITE;
IOBTYPE  EQU   X'04' --- BIT = 1 MEANS KEY TYPE
*                        BIT = 0 MEANS ID TYPE
IOBADDTY EQU   X'02' --- ADD TYPE
IOBRELEX EQU   X'01' --- RELEX MACRO ISSUED
         SPACE 1
IOBDSTAT DS    0CL2  --- STATUS OF THE REQUEST
*
IOBSTAT1 DS    B
*
IOBABNRM EQU   X'80' --- ABNORMAL COMPLETION
IOBNEWVL EQU   X'40' --- ON EXTENDED SEARCH,THE NEXT EXTENT IS ON A NEW
*                        VOLUME.THE ASI ROUTINE MUST ISSUE THE EXCP
*                        MACRO;END OF EXTENT APPENDAGE CANNOT.
*
IOBPASS2 EQU   X'10' --- ON EXTENDED SEARCH,INDICATES TO RELATIVE BLOCK
*                        CONVERSION ROUTINE THAT SECOND PASS OF A
*                        TWO-PASS CONV.ROUTINE HAS COMPLETED
IOBENQUE EQU   X'08' --- RECORD ENQUEUED(EXCLUSIVE CONTROL REQUEST)
IOBBUFF  EQU   X'04' --- BUFFER ASSIGNED TO THIS IOB
IOBADDVU EQU   X'02' --- V OR U TYPE RECORD BEING ADDED TO DATA SET
IOBSIORT EQU   X'01' --- INDICATES TO DYNAMIC BUFFERING ROUTINE THAT
*                        IT WAS ENTERED FROM,AND IS TO RETURN TO,THE
*                        START I/O APPENDAGE MODULE
         SPACE 1
IOBSTAT2 DS    CL1 ----- ERROR CODE FOR ABNORMAL COMPLETION USED AS
*                        POST CODE IN ECB
IOBDCPND DS    A ------- ADDRESS OF LOCATION WHERE CHANNEL END PROGRAM
*                        SHOULD END
IOBDBYTN DS    H ------- NUMBER OF BYTES NEEDED ON A TRACK TO WRITE A
*                        NEW BLOCK
         DS    XL2 ----- RESERVED
IOBDQPTR DS    A ------- PTR.TO IOB FOR NEXT I/O OPERATION TO EXECUTE
         DS    XL8 ----- RESERVED
         SPACE 1
IOBDNCRF DS    CL8 ----- COUNT FIELD FOR NEW BLOCK
IOBCHNPR DS    0D ------ CHANNEL PROGRAM
         MEND  , */
* %IOBBSL : ;
* DECLARE
*   1 IOBPREFX BASED(IOBPRPTR),
*
* /* RELEASE 20.2, 3/29/71, LEVEL=1                                  */
* /* RELEASE 21, 3/30/71, LEVEL=1                                    */
*
* /* *************************************************************** */
* /*                                                                 */
* /*                 PREFIX SECTIONS OF THE IOB                      */
* /*                                                                 */
* /* *************************************************************** */
*
*                        /* **************************************** */
*                        /*    QSAM,BSAM,BPAM PREFIX                 */
*                        /*    CHAINED SCHEDULING *** 16 BYTES       */
*                        /* **************************************** */
*
*    2 IOBCFLG1 CHAR(1),
*
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 IOBPTST  BIT(1),             /* NOTE OR POINT OPERATION IS
*                                       IN PROCESS                   */
*     3 IOBABAPP BIT(1),             /* ERROR PROCESSED ONCE BY
*                                       ABMORMAL-END APPENDAGE       */
*     3 IOBRSTCH BIT(1),             /* RESTART CHANNEL              */
*     3 IOBPCI   BIT(1),             /* PCI INTERRUPT HAS OCCURRED   */
*    2 *        CHAR(1),             /* RESERVED                     */
*
*    2 IOBCINOP CHAR(1),             /* OFFSET OF LAST I/O COMMAND
*                                       FOR OPERATION(NOP CCW) FROM
*                                       THE ICB ORIGIN               */
*    2 IOBCONOP CHAR(1),             /* OFFSET OF LAST I/O COMMAND
*                                       FOR OPERATION(NOP CCW) FROM
*                                       THE ICB ORIGIN               */
*    2 IOBCECB  FIXED(31),           /* EVENT CONTROL BLOCK          */
*    2 IOBCICB  PTR(31),             /* ADDR.OF FIRST ICB ON QUEUE   */
*    2 IOBCNOPA PTR(31);             /* ADDR.OF NOP COMMAND AT END
*                                       OF QUEUE                     */
*
*                        /* **************************************** */
*                        /*    QSAM,BSAM,BPAM PREFIX                 */
*                        /*    NORMAL SCHEDULING *** 8 BYTES         */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG01
*       BASED(ADDR(IOBPREFX)+8),
*
*    2 IOBNIOBA PTR(31),             /* ADDR.NEXT IOB ON CHAIN       */
*     3 IOBNFLG1 CHAR(1),
*
*      4 IOBPRTOV BIT(1),            /* 'PRTOV' HAS OCCURRED         */
*      4 IOBWRITE BIT(1),            /* 'WRITE' OPERATION IN PROCESS */
*      4 IOBREAD  BIT(1),            /* 'READ' OPERATION IN PROCESS  */
*      4 IOBUPDAT BIT(1),            /* BLOCK IS TO BE UPDATED       */
*      4 IOBBKSPC BIT(1),            /* IOB BEING USED FOR
*                                       BACKSPACE,CONTROL,NOTE/PT.   */
*      4 IOBSPAN  BIT(1),            /* THIS RECORD IS A SPANNED
*                                       RECORD                       */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 IOBFIRST BIT(1),            /* THIS IS FIRST IOB ON CHAIN   */
*
*     3 IOBNIOBB PTR(24)  BDY(BYTE),
*                                    /* ADDR.NEXT IOB ON CHAIN       */
*
*    2 IOBNECB  FIXED(31);           /* EVENT CONTROL BLOCK          */
*
*                        /* **************************************** */
*                        /*    BDAM PREFIX *** 8 BYTES               */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG02
*       BASED(ADDR(IOBPREFX)+8),
*    2 IOBDQADA PTR(31),             /* ADDR.OF IOB WAITING TO
*                                       DEQUEUE TRACKS OCCUPIEDBY
*                                       SPANNED RECORDS              */
*     3 IOBDEQIN CHAR(1),            /* DEQUEUE LOOP INDICATOR       */
*      4 IOBDEQ   BIT(1),            /* TASK WITH SPANNED RECORD
*                                       BEING DEQUEUED               */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*     3 IOBDQADB PTR(24)  BDY(BYTE),
*                                    /* ADDR.OF IOB WAITING TO
*                                       DEQUEUE TRACKS OCCUPIEDBY
*                                       SPANNED RECORDS              */
*    2 IOBSWAP  PTR(31);             /* ADDR.OF SPANNED WORK AREA    */
*
*                        /* **************************************** */
*                        /*    GAM,QISAM PREFIX *** 4 BYTES          */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG03
*       BASED(ADDR(IOBPREFX)+12),
*
*    2 IOBGQECB FIXED(31);           /* EVENT CONTROL BLOCK          */
* /* *************************************************************** */
* /*                                                                 */
* /*                 STANDARD SECTION OF THE IOB                     */
* /*                                                                 */
* /* *************************************************************** */
*
*
*
* DECLARE
*   1 IOBSTDRD BASED(IOBSTPTR),
*
*    2 IOBFLAG1 CHAR(1),
*
*     3 IOBDATCH BIT(1),             /* DATA CHAINING USED IN
*                                       CHANNEL PROGRAM              */
*     3 IOBCMDCH BIT(1),             /* COMMAND CHAINING USED IN
*                                       CHANNEL PROGRAM              */
*     3 IOBERRTN BIT(1),             /* ERROR ROUTINE IS IN CONTROL  */
*     3 IOBRPSTN BIT(1),             /* DEVICE IS TO BE REPOSITIONED */
*     3 IOBCYCCK BIT(1),             /* CYCLIC REDUNDANCY CHECK
*                                       NEEDED(TAPE ONLY)            */
*      4 IOBFCREX BIT(1),            /* FETCH COMMAND RETRY EXIT
*                                       (DIRECT ACCESS ONLY)         */
*     3 IOBIOERR BIT(1),             /* I/O ERROR HAS OCCURRED       */
*     3 IOBUNREL BIT(1),             /* THIS I/O REQUEST IS
*                                       UNRELATED(NON-SEQUENTIAL)    */
*     3 IOBRSTRT BIT(1),             /* RESTART ADDR.IN IOB TO BE
*                                       USED                         */
*
*    2 IOBFLAG2 CHAR(1),
*
*     3 IOBHALT  BIT(1),             /* HALT I/O HAS BEEN ISSUED BY
*                                       SVC PURGE ROUTINE            */
*     3 IOBSENSE BIT(1),             /* ISSUE SENSE COMMAND AFTER
*                                       DEVICE END OCCURS            */
*     3 IOBPURGE BIT(1),             /* IOB HAS BEEN PURGED *ALLOW
*                                       I/O TO QUIESCE               */
*     3 IOBRDHA0 BIT(1),             /* HOME ADDRESS TO BE READ * NO
*                                       SEEK NEEDED                  */
*     3 IOBALTTR BIT(1),             /* NO TEST FOR OUT-OF-EXTENT *
*                                       AN ALTERNATE TRACKIS IN USE  */
*     3 IOBSKUPD BIT(1),             /* SEEK ADDRESS IS BEING
*                                       UPDATED -CYLINDER END OR
*                                       FILE MASK VIOLATION HAS
*                                       OCCURRED                     */
*     3 IOBSTATO BIT(1),             /* DEVICE END STATUS HAS BEEN
*                                       ORED WITH CHANNEL END STATUS
*                                       - GRAPHICS DEVICE            */
*     3 IOBPNCH  BIT(1),             /* TURNED ON BY QSAM WHEN ERROR
*                                       RECOVERY IS TO BE PROVIDED
*                                       FOR THE 2540 CARD PUNCH      */
*
*    2 IOBSENS0 CHAR(1),             /* FIRST SENSE BYTE             */
*     3 IOBS0B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 IOBS0B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 IOBS0B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 IOBS0B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 IOBS0B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 IOBS0B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 IOBS0B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 IOBS0B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*    2 IOBSENS1 CHAR(1),             /* SECOND SENSE BYTE            */
*     3 IOBS1B0  BIT(1),             /* BIT 0 (DEVICE DEPENDENT)     */
*     3 IOBS1B1  BIT(1),             /* BIT 1 (DEVICE DEPENDENT)     */
*     3 IOBS1B2  BIT(1),             /* BIT 2 (DEVICE DEPENDENT)     */
*     3 IOBS1B3  BIT(1),             /* BIT 3 (DEVICE DEPENDENT)     */
*     3 IOBS1B4  BIT(1),             /* BIT 4 (DEVICE DEPENDENT)     */
*     3 IOBS1B5  BIT(1),             /* BIT 5 (DEVICE DEPENDENT)     */
*     3 IOBS1B6  BIT(1),             /* BIT 6 (DEVICE DEPENDENT)     */
*     3 IOBS1B7  BIT(1),             /* BIT 7 (DEVICE DEPENDENT)     */
*
*    2 IOBECBPT PTR(31),             /* ADDRESS OF ECB TO BE POSTED
*                                       ON I/O COMPLETION            */
*     3 IOBECBCC CHAR(1),            /* COMPLETION CODE FOR THIS I/O
*                                       REQUEST                      */
*     3 IOBECBPB PTR(24)  BDY(BYTE),
*                                    /* ADDRESS OF ECB TO BE POSTED
*                                       ON I/O COMPLETION            */
*
*    2 IOBFLAG3 CHAR(1),             /* ERROR ROUTINE FLAG BYTE      */
*    2 IOBCSW   CHAR(7),             /* LOW ORDER 7 BYTES OF CSW AT
*                                       CHANNEL END                  */
*
*    2 IOBSTART PTR(31),             /* ADDRESS OF CHANNEL PROGRAM   */
*     3 IOBSIOCC CHAR(1),            /* BITS 2 AND 3 = C.C. FROM SIO */
*     3 IOBSTRTB PTR(24)  BDY(BYTE),
*                                    /* ADDRESS OF CHANNEL PROGRAM   */
*
*    2 IOBDCBPT PTR(31),             /* ADDRESS OF DATA CONTROL
*                                       BLOCK FOR THIS IOB           */
*     3 *        CHAR(1),            /* RESERVED                     */
*     3 IOBDCBPB PTR(24)  BDY(BYTE),
*                                    /* ADDRESS OF DATA CONTROL
*                                       BLOCK FOR THIS IOB           */
*
*    2 IOBRESTR PTR(31),             /* RESTART ADDRESS FOR ERROR
*                                       RETRY                        */
*     3 IOBREPOS CHAR(1),            /* CODE USED TO REPOSITION
*                                       DEVICE                       */
*     3 IOBRSTRB PTR(24)  BDY(BYTE),
*                                    /* RESTART ADDRESS FOR ERROR
*                                       RETRY                        */
*
*    2 IOBINCAM FIXED(15),           /* VALUE USED TO INCREMENT
*                                       BLOCK COUNT ON TAPE          */
*     3 IOBBTAMF CHAR(1),            /* FLAG BYTE FOR BTAM           */
*      4 IOBPRMER BIT(1),            /* 'SAD','ENABLE' ISSUED BY
*                                       OPEN CAUSED I/O ERROR        */
*      4 IOBINUSE BIT(1),            /* IOB IS IN USE                */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 *        BIT(1),            /* RESERVED                     */
*      4 IOBOLTST BIT(1),            /* LINE IS UNDER ON-LINE TEST
*                                       OPERATION                    */
*
*     3 *        CHAR(1),            /* RESERVED                     */
*    2 IOBERRCT FIXED(15);           /* NUMBER OF ERROR RETRIES      */
* DECLARE 1 IOBORG04
*       BASED(ADDR(IOBINCAM)),
*    2 IOBCRDCC CHAR(1),    /* OPTICAL READER:DATA CHECK ERROR COUNT */
*    2 IOBCRILC CHAR(1);    /* OPTICAL RDR:INCORRECT LENGTH ERROR CT.*/
*
*
* /* *************************************************************** */
* /*                                                                 */
* /*                EXTENSION SECTIONS OF THE IOB                    */
* /*                                                                 */
* /* *************************************************************** */
*
*                        /* **************************************** */
*                        /*    DIRECT ACCESS EXTENSION *** 8 BYTES   */
*                        /* **************************************** */
*
* DECLARE
*   1 IOBEXTEN BASED(ADDR(IOBSTDRD)+32),
*    2 IOBSEEK  CHAR(8),
*
*     3 IOBM     CHAR(1),            /* RELATIVE EXTENT NUMBER FOR
*                                       THIS REQUEST(0-15)           */
*
*     3 IOBBB    CHAR(2),            /* BIN NUMBER(DATA CELL)        */
*      4 IOBBB1   CHAR(1),
*      4 IOBBB2   CHAR(1),
*
*     3 IOBCC    CHAR(2),            /* CYLINDER NUMBER              */
*      4 IOBCC1   CHAR(1),
*      4 IOBCC2   CHAR(1),
*
*     3 IOBHH    CHAR(2),            /* TRACK NUMBER                 */
*      4 IOBHH1   CHAR(1),
*      4 IOBHH2   CHAR(1),
*     3 IOBR     CHAR(1);            /* RECORD NUMBER                */
*
*                        /* **************************************** */
*                        /*    BTAM EXTENSION *** 40 BYTES +         */
*                        /*                   CHANNEL PROGRAM        */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG05
*       BASED(ADDR(IOBEXTEN)),
*    2 IOBUCBX  CHAR(1),             /* LINE NUMBER IS USED TO
*                                       LOCATE THE PROPER UCB
*                                       ADDRESS IN THE DEB.          */
*    2 IOBWORK  CHAR(5),             /* WORK AREA USED BY ERROR
*                                       ROUTINES AND ON-LINE
*                                       TERMINAL ROUTINES            */
*    2 IOBRCVPT CHAR(1),             /* RECEIVED ACK (ACK-0 OR ACK-1)*/
*    2 IOBSNDPT CHAR(1),             /* SENT ACK (ACK-0 OR ACK-1) */
*    2 IOBERCCW CHAR(8),             /* CCW AREA USED BY BTAM ERROR
*                                       ROUTINES                     */
*    2 IOBERINF CHAR(16),            /* ERROR INFORMATION FIELD USED
*                                       BY BTAM ERROR RTN            */
*    2 IOBCPA   CHAR(8) ;
*                                    /* AREA FOR CHANNEL
*                                       PROGRAMS.LENGTH VARIES
*                                       ACCORDING TO TERMINAL AND
*                                       OPTIONS                      */
*
*                        /* **************************************** */
*                        /*    GAM EXTENSION *** 40 BYTES            */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG06
*       BASED(ADDR(IOBEXTEN)),
*     3 IOBUCBXG CHAR(1),            /* UCB INDEX                    */
*     3 *        CHAR(3),            /* RESERVED                     */
*     3 IOBNXTPT PTR(31),            /* PTR.TO NEXT AVAILABLE IOB
*                                       ZERO IF LAST IOB             */
*      4 IOBSTATA CHAR(1),           /* STATUS SWITCH                */
*       5 IOBAVLFL BIT(1),           /* IF BIT IS 0,IOB IS AVAILABLE
*                                       IF BIT IS 1,IOB IS NOT
*                                       AVAILABLE                    */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*       5 *        BIT(1),           /* RESERVED                     */
*      4 IOBNXTPB PTR(24)  BDY(BYTE),
*                                    /* PTR.TO NEXT AVAILABLE IOB
*                                       ZERO IF LAST IOB             */
*    2 IOBCCW   CHAR(32);            /* CHANNEL COMMAND WORDS USED
*                                       TO TRANSFER DATA             */
*
*                        /* **************************************** */
*                        /*    QISAM EXTENSION *** 2 BYTES           */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG07
*       BASED(ADDR(IOBEXTEN)+8),
*
*    2 W1OEXTEN CHAR(2),             /* CODES                        */
*
*     3 W1IEXTEN CHAR(2);            /* APPENDAGE                    */
*
*                        /* **************************************** */
*                        /*    BISAM EXTENSION *** 12 BYTES          */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG08
*       BASED(ADDR(IOBEXTEN)+8),
*    2 IOBCCWAD PTR(31),             /* FOR FIXED LENGTH
*                                       RCRDS:PTR.TO FIRST CCW FOR
*                                       VARIABLE RECORDS:PTR.TO
*                                       BUFFER(DYNAMIC BUFFERING
*                                       SPECIFIED)AFTER COMPLETION
*                                       OF  READ FOR UPDATE(READ KU) */
*
*    2 IOBINDCT CHAR(1),
*
*     3 IOBDEQCP BIT(1),             /* DEQUEUE CHANNEL PROGRAM FROM
*                                       QUEUE                        */
*     3 IOBUNSCH BIT(1),             /* UNSCHEDULER QUEUE            */
*     3 IOBOVPTR BIT(1),             /* PTR.TO OVERFLOW RECORD
*                                       INDICATOR: BIT = 0 MEANS
*                                       'DECBAREA' + 6 POINTS TO
*                                       OVERFLOW RECORD DATA BIT = 1
*                                       MEANS 'DCBMSWA' POINTS TO
*                                       OVERFLOW RECORD KEY FOLLOWED
*                                       BY DATA                      */
*     3 IOBKEYAD BIT(1),             /* PTR.TO OVERFLOW RECORD KEY
*                                       INDICATOR: BIT = 0 MEANS
*                                       'DECBKEY' POINTS TO OVERFLOW
*                                       RECORD KEY BIT = 1 MEANS
*                                       'DCBMSWA' + 8 POINTS TO
*                                       OVERFLOW RECORD KEY          */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 IOBCHNNL BIT(1),             /* CHANNEL END STATUS
*                                       INDICATOR:  BIT = 0 MEANS
*                                       NORMAL CHANNEL END OCCURRED
*                                       BIT = 1 MEANS ABNORMAL END
*                                       OCCURRED                     */
*
*
*    2 IOBUNSQR CHAR(1),             /* REASON FOR UNSCHEDULED QUEUE */
*
*     3 IOBCPBSY BIT(1),             /* CHANNEL PROGRAM CP1          */
*     3 IOBNTAV1 BIT(1),             /* NO CP4,CP5 OR CP6 AVAILABLE  */
*     3 IOBNTAV2 BIT(1),             /* NO CP7 AVAILABLE             */
*     3 IOBKNWR  BIT(1),             /* WRITE KN IS IN
*                                       EFFECT(UNSCHEDULED IOB IS
*                                       FOR  WRITE KN)               */
*     3 IOBKNRWR BIT(1),             /* WRITE KN IS IN
*                                       EFFECT(UNSCHEDULED IOB IS
*                                       FOR  READ OR WRITE KN)       */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*     3 *        BIT(1),             /* RESERVED                     */
*
*    2 IOBAPP   CHAR(1),             /* APPENDAGE CODE -(CONSULT
*                                       SYSTEM CONTROL BLOCKSMANUAL
*                                       FOR CODE DEFINITIONS)        */
*    2 IOBASYN  CHAR(1),             /* ASYNCHRONOUS ROUTINE CODE
*                                       -(CONSULT SYSTEM CONTROL
*                                       BLOCKS MANUAL FOR CODE
*                                       DEFINITIONS)                 */
*    2 IOBFCHAD PTR(31),             /* FORWARD CHAIN ADDRESS        */
*     3 IOBCOUNT CHAR(1),            /* WRITE CHECK COUNTER          */
*     3 IOBFCHNB PTR(24)  BDY(BYTE),
*                                    /* FORWARD CHAIN ADDRESS        */
*    2 IOBBCHAD PTR(31);             /* BACKWARD CHAIN ADDRESS       */
*
*                        /* **************************************** */
*                        /*    BDAM EXTENSION *** 40 BYTES +         */
*                        /*                   CHANNEL PROGRAM        */
*                        /* **************************************** */
*
* DECLARE 1 IOBORG09
*       BASED(ADDR(IOBEXTEN)+8),
*    2 IOBDBYTR FIXED(15),           /* NUMBER OF UNUSED BYTES ON
*                                       TRACK                        */
*    2 IOBDIOBS FIXED(15),           /* OVERALL SIZE OF THE IOB      */
*    2 IOBDPLAD PTR(31),             /* ADDRESS OF NEXT IOB IN POOL
*                                       OF IOB'S                     */
*     3 IOBDAYLI CHAR(1),            /* ALL BITS ZERO INDICATE
*                                       AVAILABILITY OF IOB          */
*
*     3 IOBDPLB  PTR(24)  BDY(BYTE),
*                                    /* ADDRESS OF NEXT IOB IN POOL
*                                       OF IOB'S                     */
*
*    2 IOBDTYPE CHAR(1),             /* TYPE OF REQUEST AND
*                                       SPECIFIED OPTIONS            */
*
*     3 IOBVERFY BIT(1),             /* VERIFY                       */
*     3 IOBOVFLO BIT(1),             /* OVERFLOW                     */
*     3 IOBEXTSC BIT(1),             /* EXTENDED SEARCH              */
*     3 IOBFDBCK BIT(1),             /* FEEDBACK                     */
*     3 IOBACTAD BIT(1),             /* ACTUAL ADDRESSING            */
*     3 IOBDYNBF BIT(1),             /* DYNAMIC BUFFERING            */
*     3 IOBRDEXC BIT(1),             /* READ EXCLUSIVE               */
*     3 IOBRELBL BIT(1),             /* RELATIVE BLOCK ADDRESSING    */
*
*    2 IOBDTYP2 CHAR(1),             /* SECOND BYTE OF OPTIONS AND
*                                       REQUESTS                     */
*
*     3 IOBSKEY  BIT(1),             /* KEY ADDRESS CODED AS 'S'     */
*     3 IOBSBLKL BIT(1),             /* BLOCK LENGTH CODED AS 'S'    */
*     3 IOBSUFFX BIT(2),             /* INDICATES TYPE OF SUFFIX('R'
*                                       OR 'RU')                     */
*     3 IOBRQUST BIT(1),             /* BIT = 1 MEANS READ, BIT = 0
*                                       MEANS WRITE.                 */
*     3 IOBTYPE  BIT(1),             /* BIT = 1 MEANS KEY TYPE BIT =
*                                       0 MEANS ID TYPE              */
*     3 IOBADDTY BIT(1),             /* ADD TYPE                     */
*     3 IOBRELEX BIT(1),             /* RELEX MACRO ISSUED           */
*
*    2 IOBDSTAT CHAR(2),             /* STATUS OF THE REQUEST        */
*
*     3 IOBSTAT1 CHAR(1),
*
*      4 IOBABNRM BIT(1),            /* ABNORMAL COMPLETION          */
*      4 IOBNEWVL BIT(1),            /* ON EXTENDED SEARCH,THE NEXT
*                                       EXTENT IS ON A NEWVOLUME.THE
*                                       ASI ROUTINE MUST ISSUE THE
*                                       EXCP MACRO-END OF EXTENT
*                                       APPENDAGE CANNOT.            */
*
*      4 *        BIT(1),            /* RESERVED                     */
*      4 IOBPASS2 BIT(1),            /* ON EXTENDED SEARCH,INDICATES
*                                       TO RELATIVE BLOCKCONVERSION
*                                       ROUTINE THAT SECOND PASS OF
*                                       A  TWO-PASS CONV.ROUTINE HAS
*                                       COMPLETED                    */
*      4 IOBENQUE BIT(1),            /* RECORD ENQUEUED(EXCLUSIVE
*                                       CONTROL REQUEST)             */
*      4 IOBBUFF  BIT(1),            /* BUFFER ASSIGNED TO THIS IOB  */
*      4 IOBADDVU BIT(1),            /* V OR U TYPE RECORD BEING
*                                       ADDED TO DATA SET            */
*      4 IOBSIORT BIT(1),            /* INDICATES TO DYNAMIC
*                                       BUFFERING ROUTINE THAT IT
*                                       WAS ENTERED FROM,AND IS TO
*                                       RETURN TO,THE START I/O
*                                       APPENDAGE MODULE             */
*
*     3 IOBSTAT2 CHAR(1),            /* ERROR CODE FOR ABNORMAL
*                                       COMPLETION USED AS POST CODE
*                                       IN ECB                       */
*    2 IOBDCPND PTR(31),             /* ADDRESS OF LOCATION WHERE
*                                       CHANNEL END PROGRAM SHOULD
*                                       END                          */
*    2 IOBDBYTN FIXED(15),           /* NUMBER OF BYTES NEEDED ON A
*                                       TRACK TO WRITE A NEW BLOCK   */
*    2 *        CHAR(2),             /* RESERVED                     */
*    2 IOBDQPTR PTR(31),             /* PTR.TO IOB FOR NEXT I/O
*                                       OPERATION TO EXECUTE         */
*    2 *        CHAR(8),             /* RESERVED                     */
*
*    2 IOBDNCRF CHAR(8),             /* COUNT FIELD FOR NEW BLOCK    */
*    2 IOBCHNPR CHAR(0);            /*  CHANNEL PROGRAM STARTS HERE  */
