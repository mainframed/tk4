*       %GO TO DCLHDA;             /*
         MACRO
&L       HDATA
.*A000000-999999                                                 S21014
         AIF   ('&L' EQ '').HDAL
&L       DSECT ,                        HOOK DEPENDENT DATA AREA
         AGO   .HDAN
.HDAL    ANOP
HDATA    DSECT ,                        HOOK DEPENDENT DATA AREA
.HDAN    ANOP
ISMSCSAV DS    16F                      AREA FOR SVC REGS
ISMPKSAV DS    16F                      AREA FOR PI REGS
CATHSAVE DS    15F                      PLACE TO MOVE CATSAVE REGS
SERVSAVE DS    15F                      SERVICES SAVE AREA
OPSWSAV  DS    0CL16                    OLD PSW'S AT HOOK
SCPSWSAV DS    DL8                      SVC OLD PSW AT HOOK
PIPSWSAV DS    DL8                      PI OLD PSW AT HOOK
SYSBRSAV DS    15F                      SAVE AREA FOR SERVICES
APPLSAV  DS    18F                      APPLICATION SAVE AREA
BRHKPSW  DS    DL8                      PSW AT HOOK IF TYPE =S
CRTEMP   DS    F                        RESERVED
TEMPREC  DS    CL20                     TEMP RECORD AREA USED BY STACK
HDAFLG1  DS    XL1                      FLAGS FOR SERVICES
STFLAG   EQU   128                      STACK SERVICES INCTL
DEFLAG   EQU   64                       DIS-,ENABLE INCTL
SMFLAG   EQU   32                       SETCMASK SERVICE INCTL
TMFLAG   EQU   16                       N-,ATERM SERVICES INCTL
FBFLAG   EQU   8                        FEOB INCTL
HDAFLG2  DS    XL1                      MORE FLAGS
POSTFLG  EQU   128                      POST NEEDED
TRUNCFLG EQU   64                       RECORD WAS TRUNCATED
         DS    XL1                      RESERVED
         DS    XL1                      RESERVED
CLOCKIN  DS    0CL8                     ENTRY TIME STAMP
         DS    CL4                      EXTENSION
CLOCK4   DS    CL4                      FOUR BYTE TIME STAMP
CLOCKOUT DS    CL8                      TERMINAL TIME STAMP
         MEND  ,                   */
* %DCLHDA:     ;
*        DCL   1 HDATA        BASED(RCBHDATA),
*             2 HOOKREGS,                    /* SVC & PI REGS AT HOOK*/
*              3 ISMSCSAV,                   /* IEASCSAV AT HOOK     */
*               4 ISMSCREG(16) PTR(31),      /* STORED 0-15          */
*              3 ISMPKSAV,                   /* IEAPKSAV AT HOOK     */
*               4 ISMPKREG(16) PTR(31),      /* STORED 0-15          */
*             2 CATHSAVE,                    /* PLACE TO MOVE CATSAVE*/
*              3 CATHREGS(15),               /* IN FUTURE            */
*             2 SERVSAVE,                    /* SERVICES SAVE AREA   */
*              3 SERVREGS(15),               /* STORED 0-14          */
*             2 OPSWSAV,                     /* OLD PSW'S AT HOOK    */
*              3 SCPSWSAV     CHAR(8),       /* SVC OPSW AT HOOK     */
*              3 PIPSWSAV     CHAR(8),       /* SVC                  */
*             2 SYSBRSAV,                    /*SAVE AREA FOR SERVICES*/
*              3 SYSBRREG(15) PTR(31),
*             2 APPLSAV,                     /* APPLICATION SAVE AREA*/
*              3 APPLREG(18),
*             2 BRHKPSW   CHAR(8) BDY(WORD), /*PSW AT HOOK IF TYPE=S */
              2 CRTEMP   PTR(32),            /* RESERVED             */
*             2 TEMPREC   CHAR(20),          /*USED BY STACK TO BUILD*/
*                                            /* HEADER RECORD.       */
*             2 HDAFLG1   BIT(8),            /* FLAGS FOR SERVICES   */
*              3 STFLAG   BIT(1),            /* STACK,-S,-W IS INCTL */
*              3 DEFLAG   BIT(1),            /* DIS-,ENABLE IS INCTL */
*              3 SMFLAG   BIT(1),            /* SETCMASK IS INCTL    */
*              3 TMFLAG   BIT(1),            /* N-,ATERM IS INCTL    */
*              3 FBFLAG   BIT(1),            /* FEOB IS INCTL        */
*             2 HDAFLG2   BIT(8),            /* MORE SERVICE FLAGS   */
*              3 POSTFLG  BIT(1),            /* POST IS NEEDED       */
*              3 TRUNCFLG BIT(1),            /* RECORD WAS TRUNCATED */
              2 *        CHAR(1),            /* RESERVED             */
*             2 *         CHAR(1),           /* RESERVED             */
*             2 CLOCKIN   CHAR(8) BDY(WORD), /*ENTRY TIMESTAMP.      */
*              3 *            PTR(32) BDY(WORD),
*              3 CLOCK4       PTR(32) BDY(WORD),
*             2 CLOCKOUT  CHAR(8) BDY(WORD); /*TERMINAL TIMESTAMP    */
