         MACRO
         IHCTRACM
         GBLA  &ERR
TRCH TITLE 'IHCTRCH - OS/360 FORTRAN G/H LIBRARY MODULE FOR ERROR MESSA+
               GE PROCESSING AND DIAGNOSTIC TRACEBACKS'
         AIF   (&ERR EQ 0).TRNO
IHCETRCH CSECT
         ENTRY IHCTRCH
IHCTRCH  EQU   *
         AGO   .TR001
.TRNO    ANOP
IHCTRCH  CSECT
.TR001   ANOP
*D462500-464500                                                  A37107
**  .TR220
         AIF   (&ERR EQ 0).TR101
         ENTRY ERRTRA
         AGO   .TR102
.TR101   ENTRY IHCERRM
.TR102   ANOP
***********************************************************************
*                                                                     *
* NAME        - IHCTRCH                                               *
*                                                                     *
* STATUS -- CHANGE LEVEL 03,   21OCT70     RELEASE 20                 *
*                                                                     *
* DESCRIPTION - IHCTRCH IS CALLED BY IBFERR IN IHCFCOMH. IT PRINTS    *
*               ERROR MESSAGES AND PROVIDES A DIAGNOSTIC TRACEBACK    *
*               FROM THE ROUTINE IN WHICH THE ERROR OCCURED TO THE    *
*               MAIN FORTRAN ROUTINE. TRACEBACK INFORMATION PROVIDED  *
*               INCLUDES THE NAME OF EACH CALLED ROUTINE IN THE CHAIN *
*               OF CALLS AND THE SYMBOLIC LOCATION (ISN) AND THE      *
*               ABSOLUTE LOCATION (REG.14) IN EACH CALLING ROUTINE.   *
*               AT THE END OF EACH TRACEBACK, THE LOAD MODULE ENTRY   *
*               POINT IS PRINTED.                                     *
*                                                                     *
* ENTRY POINT - IHCTRCH                                               *
*                                                                     *
*               IHCTRCH IS CALLED BY IBFERR IN IHCFCOMH               *
*                                                                     *
*                        L    L,=(IHCTRCH)                            *
*                        BR   L                                       *
*                                                                     *
*               IBFERR IN TURN IS CALLED BY A LIBRARY SUBPROGRAM      *
*                                                                     *
*                        L    L,=(IBCOM#)                             *
*                        BAL  L,60(L)                                 *
*                        DC   XL2'DDS'                                *
*                        WHERE DDS IS A SIGNED 3-DIGIT ERROR CODE     *
*                                                                 4659*
*               FOR ERROR CODE 218, THE CALLING SEQUENCE          4659*
*               CONTAINS TWO ADDITIONAL PARAMETERS -              4659*
*                                                                 4659*
*                        DC   F'0'                                4659*
*                        INTO WHICH IHCFIOSH OR IHCDIOSE HAS PUT  4659*
*                        LOCATION OF THE SYNADAF ERROR MESSAGE    4659*
*                                                                 4659*
*                        DC   F'0'                                4659*
*                        INTO WHICH IHCFCOMH HAS PUT LOCATION OF  4659*
*                        STATEMENT SPECIFIED IN ERR PARAM, IF ANY 4659*
*                                                                 4659*
* INPUT       - REG.13 POINTS TO THE SAVE AREA IN THE ROUTINE THAT    *
*                      CALLED THE LIBRARY SUBPROGRAM IN WHICH THE     *
*                      ERROR OCCURRED, EXCEPT WHEN THE ERROR OCCURRED *
*                      IN A SUBPROGRAM CALLED BY IHCFCOMH, IN WHICH   *
*                      CASE REG.13 POINTS TO THE ROUTINE THAT CALLED  *
*                      IHCFCOMH.                                      *
*                                                                     *
* OUTPUT      - ERROR MESSAGES AND DIAGNOSTIC TRACEBACK INFORMATION   *
*                                                                     *
* EXTERNAL REFERENCES -                                               *
*                                                                     *
*               1. IBCOM# - IHCTRCH RETRIEVES THE CONTENTS OF REG.14  *
*                           FROM A NON-STANDARD SAVE AREA AT LOCATION *
*                           IBCOM#+X'7C', AND ALSO RETRIEVES THE      *
*                           FORTRAN LOAD MODULE ENTRY POINT SAVED BY  *
*                           IBFINIT AT LOCATION IBCOM#+X'C0'.         *
*                                                                     *
*                           IHCTRCH EXITS TO IBEXIT.                  *
*                                                                     *
*               2. ADCON# - IHCTRCH CALLS IHCFCVTH TO CONVERT         *
*                           ADDRESS TO PRINTABLE HEX FORMAT.          *
*                                                                     *
*               3. FIOCS# - IHCTRCH CALLS IHCFIOSH TO PRINT ERROR     *
*                           MESSAGES AND TRACEBACK INFORMATION.       *
*                                                                     *
*               4. IHCTRCH TRACES BACK VIA REG.13 THROUGH SAVE AREAS  *
*                  USED BY CALLED ROUTINES.                           *
*                                                                     *
* EXIT        - IHCTRCH CALLS IBEXIT IN IHFCOMH TO TERMINATE THE      *
*               JOB STEP. ON EXIT REG.14 POINTS TO A 2-BYTE AREA THAT *
*               CONTAINS A RETURN CODE OF 16.                         *
*                                                                     *
*               FOR ERROR CODE 218, IF FORTRAN I/O STATEMENT      4659*
*               CONTAINED ERR PARAM, IHCTRCH WILL NOT GO TO       4659*
*               IBEXIT TO TERMINATE BUT INSTEAD WILL TRANSFER     4659*
*               CONTROL TO THE STATEMENT SPECIFIED IN ERR PARAM   4659*
*                                                                 4659*
* ERROR CONDITIONS -                                                  *
*                                                                     *
*               1. IF IHCTRCH IS ENTERED A SECOND TIME, IT EXITS      *
*                  DIRECTLY TO IBEXIT. THIS CAN OCCUR IF A DD CARD FOR*
*                  THE ERROR UNIT IS OMITTED.                         *
*                                                                     *
*               2. IF A CIRCULAR CALL CHAIN IS DETECTED OR IF THE     *
*                  DEPTH OF CALLS IS GREATER THAN 13, THE TRACEBACK   *
*                  IS TERMINATED, A TERMINATION MESSAGE IS PRINTED,   *
*                  THE LOAD MODULE ENTRY POINT IS PRINTED, AND IBEXIT *
*                  CALLED.                                            *
*                                                                     *
* ATTRIBUTES  - IHCTRCH IS SERIALLY REUSABLE                      4659*
*                                                                     *
* NOTES      -                                                        *
* NOTES       - 1. CALLING SEQUENCE TO IHCTRCH IS NON-STANDARD.       *
*                                                                     *
*               2. IHCTRCH USES ITS OWN INTERNAL SAVE AREA FOR SAVING *
*                  REGISTERS.                                         *
*                                                                     *
*               3. IHCTRCH ASSUMES THAT SAVE AREAS ARE STANDARD EXCEPT*
*                  THOSE ASSOCIATED WITH IHCFCOMH AND IHCNAMEL.       *
*                                                                     *
***********************************************************************
* PARAMETERIZATION
         SPACE
IORR     EQU   0
IOLR     EQU   1
GRX      EQU   2
GRY      EQU   3
SIZER    EQU   4
WORKR    EQU   5
LNGR     EQU   6
ISNR     EQU   6
RETR     EQU   7
IBCOMPTR EQU   8
SAVEPTR  EQU   9
INCRER   EQU   10
COMPR    EQU   11
INDEXR   EQU   12
R13      EQU   13
R        EQU   14
L        EQU   15
         SPACE
         USING *,L                 REG15 IS BASE REGISTER
         SPACE
* IDENTIFY ROUTINE AND SAVE REGISTERS
         SPACE
         USING *,15
         AIF   (&ERR EQ 0).TR10
         MVI   SW,ON                   INDICATE ENTRY  FROM ERROR MON.
         LA    15,ERRTRA               SET UP BASE REGISTER FOR COMP.
         DROP  15
         USING *,15
ERRTRA   EQU   *
         AGO   .TR100
.TR10    ANOP
IHCERRM  EQU   *
.TR100   ANOP
         SAVE  (14,12),,TRACE          SAVE REISTERS
         L     IBCOMPTR,VIBCOM         GET ADDRESS OF IBCOM
         AIF   (&ERR EQ 0).TR210
         TM    SW,ON              ENTRY FROM ERROR MONITOR
         BO    PROCEED            YES - PROCEED
         CLI   124(IBCOMPTR),X'FF'   I/O SWITCH IN IBCOM ON
         BE    PROCEED            YES - CONTINUE WITH ERRTRA
         LR    L,IBCOMPTR         ADDRESSABILITY FOR IBCOM
         L     R,ER904(0,L)       ERROR MSG 904 ROUTINE
         LM    0,12,20(13)        RESTORE REGS EXCEPT 14 AND 15
         BR    R
PROCEED  EQU   *
         ST    13,SAVEAREA+4           SAVE REG 13
         LA    13,SAVEAREA             GET NEW SAVE AREA ADDRESS
.TR210   ANOP
         SPACE
         AIF   (&ERR EQ 1).TR2
* CHECK FOR COMPLETION OF THE PRECEDING USE OF IHCTRCH, IF ANY     4659
* IF INCOMPLETE, AN OBJECT ERROR UNIT I/O ERROR OCCURRED SUCH      4659
* THAT THE JOB MUST BE TERMINATED                                  4659
         TM    TRACELST+3,X'01'    IF SWITCH IS OFF,               4659
         BNO   EXIT                GO TO TERMINATE                 4659
         EJECT
         L     COMPR,ERNM(0,1)         GET ADDRESS OF ERROR NUMBER
         L     COMPR,0(0,COMPR)        GET ERROR NUMBER
         ST    COMPR,SAVENM            SAVE IT
         CVD   COMPR,ISN               CONVERT IT TO DECIMAL
         UNPK  ERRMES+3(3),ISN+6(2)    UNPACK IT INTO MESSAGE
         OI    ERRMES+5,X'F0'          PUT IN PROPER ZONE
         L     ISNR,MSG(0,1)           GET ADDRESS OF MESSAGE (IF ONE )
.TR2     ANOP
         SPACE
         LA    GRX,OUTPRAM         ADVISE FIOCS SYSOUT TO BE INTIALIZED
         L     IOLR,VFIOCS         GET ADDRESS OF FIOCS
         BALR  IORR,IOLR           BRANCH TO FIOCS
         DC    X'00'               INITIALIZATION CODE
         DC    X'FF'               FORMATED OUTPUT CODE
         NOP   0
         MVI   0(GRX),C'0'             MOVE IN CARRIAGE CONTROL CHAR.
         STH   GRY,LNGTH               SAVE LENGTH
         SPACE
         AIF   (&ERR EQ 1).TR3
         CLC   SAVENM+2(2),CON240  ERR NUM > OR = TO 240?         II295
         BNL   MSGPUT                  YES, GIVE A MESSAGE
         CLI   SAVENM+3,215            IS THIS ERROR 215
         BE    MSGPUT                  YES, GIVE A MESSAGE
         CLI   SAVENM+3,216            ERROR NUMBER 216
         BE    MSGPUT                  YES GIVE A MESSAGE
         CLI   SAVENM+3,218            ERROR 218
         BE    MSGPUT                  YES GIVE A MESSAGE
         CLI   SAVENM+3,231            ERROR CONDITION BETWEEN
         BNL   PTNUMB                  221 AND 225 THEN ALSO GIVE
         CLI   SAVENM+3,221            A MESSAGE. ELSE GO PRINT
         BL    PTNUMB                  IHCXXXI MESSAGE
MSGPUT   EQU   *
         LR    SIZER,ISNR              GET ADDRESS OF MESSAGE
         L     ISNR,0(0,ISNR)          GET LENGTH OF MESSAGE
COMP     CR    ISNR,GRY                COMPARE MESS. LNGTH TO BUFF. LNG
         BL    MOVE132                 MUST LEAVE ROOM FOR CONTROL CHR.
         LR    ISNR,GRY                IF  HIGH THEN USE BUFF. LENGTH
         BCTR  ISNR,0                  AND LEAVE ROOM FOR CARR. CONTRL
MOVE132  EQU   *
         BCTR  ISNR,0                  SET UP FOR EXECUTE INSTR.
         EX    ISNR,MOVEL132
         CLI   SAVENM+3,218            ERROR CONDITION 218
         BNE   PRNT                    NO , BRANCH
         LR    WORKR,L                 ELSE FREE THE BUFFER AREA IN
         LR    1,SIZER                 WHICH THE MESSAGE WAS PUT BY
         FREEMAIN R,LV=112,A=(1)       FIOCS OR DIOCS.
         LR    L,WORKR
         B     PRNT                    GO ON
PTNUMB   EQU   *
         MVC   1(7,GRX),ERRMES         PUT OUT IHCXXXI MESSAGE
PRNT     EQU   *
GOPRINT1 BAL   RETR,PRINT                                         II295
         SPACE
GIVTRACE EQU   *
.TR3     ANOP
* PRINT TRACE BACK HEADING
         SPACE
         MVC   1(79,GRX),HEADING       PUT OUT HEADING FOR TRACEBACK
         BAL   RETR,PRINT          PRINT HEADING
         SPACE
* INITIALIZE TRACEBACK ROUTINE
         SPACE
INITIAL  L     SAVEPTR,4(R13)      GET POINTER TO PREVIOUS SAVE AREA
         AIF   (&ERR EQ 0).TR12
         TM    SW,ON                   IS ENTRY FROM USER DIRECTLY
         BZ    *+8                     YES, BRANCH
         L     SAVEPTR,4(0,SAVEPTR)    PICK UP PREVIOUS SAVE AREA PTR.
.TR12    ANOP
INITIBCM LA    INCRER,4            INCREMENT REG FOR TRACECHK LOOP
         SR    COMPR,COMPR         ZERO COMPARE REG FOR LOOPCHK LOOP
         EJECT
******************************TRACEBACK ROUTINE************************
         SPACE
* GET NAME OF CALLING ROUTINE
         SPACE
TRACEB   L     WORKR,16(SAVEPTR)       GET ENTRY POINT ADDRESS
         CR    WORKR,IBCOMPTR          IS IT IBCOM'S ENTRY  POINT?
         BE    MOVIBCM                 YES, GO MOVE IN IBCOM AS NAME
         AR    WORKR,INCRER        ADD 4 FOR NAME SIZE LOCATION
         CLI   0(WORKR),0          IS NAME LENGTH ZERO
         BE    GETISN              IF YES, PROBABLY NO NAME, GET ISN
         IC    LNGR,0(WORKR)       GET LENGTH OF NAME
         CLI   0(WORKR),8          IS NAME LONGER THAN 8 CHARACTERS
         BNH   DECR                IF NO, PROCEED NORMALLY
         LA    LNGR,8              IF YES, USE FIRST 8 CHARACTERS
DECR     BCTR  LNGR,0                  SET FOR EXECUTE
         EX    LNGR,MOVE           MOVE NAME TO BUFFER
         SPACE
* GET INTERNAL SEQUENCE NUMBER, IF ANY
         SPACE
GETISN   L     WORKR,12(SAVEPTR)   GET ADDRESS OF ISN NOP (R14)
         CLC   0(2,WORKR),NOP      IS THERE REALLY A NOP THERE
         BNE   RETADDR             IF NOT, PRINT ONLY RETURN ADDRESS
         LH    ISNR,2(WORKR)       IF YES, GET ISN
         CVD   ISNR,ISN            CONVERT ISN TO DECIMAL,
         UNPK  31(4,GRX),ISN+5(3)       UNPACK INTO BUFFER AND     4659
         OI    34(GRX),X'F0'                 SET PROPER ZONE       3757
         SPACE
* CONVERT RETURN ADDR TO PRINTABLE  HEX AND PRINT TRACEBACK LINE
         SPACE
RETADDR  EQU   *
         LA    WORKR,37(0,GRX)         POINT TO AREA TO PLACE REG. 14
         LA    INDEXR,4                SET UP FOR BCT LOOP
LOOP2    LR    GRY,WORKR               GET ADDRESS OF WHERE TO CONVERT
         LA    GRX,12(0,SAVEPTR)       TO. GET ADDR. OF REG. TO CONVERT
         BAL   RETR,HEXCONV            CONVERT REG CONTENTS TO EBCDIC
         AR    SAVEPTR,INCRER
         LA    WORKR,11(0,WORKR)       UPDATE BUFFER POSITION POINTER
         BCT   INDEXR,LOOP2            GO DO NEXT REG. IF MORE TO DO
         SH    SAVEPTR,CON16           IF DONE, RESET SAVE AREA POINTER
         BAL   RETR,PRINT              PRINT LINE OF TRACEBACK
         SPACE
* CHECK TO SEE IF TRACED BACK TO MAIN FORTRAN ROUTINE
         SPACE
         CLC   16(4,SAVEPTR),X'C0'(IBCOMPTR) IS ENTRY POINT SAME AS
*                                 ENTRY POINT BY IBFINIT IN IBCOM
         BE    FINISH              IF YES, PRINT ENTRY ADDR, AND RETURN
         SPACE
* CHECK TO SEE IF IN TRACEBACK LOOP DUE TO IMPROPER CALLS
         SPACE
         LA    WORKR,44            INDEX PTR TO LAST WORD IN TRACELST
         BXLE  WORKR,INCRER,QUIT   BRANCH IF TRACELST FULL
         SR    INDEXR,INDEXR       INTIALIZE INDEX REG
LOOPCHK  BXH   INDEXR,INCRER,LOOPCHK1 BRANCH IF WHOLE LIST CHECKED 4659
         C     SAVEPTR,TRACELST-4(INDEXR) IF SAVEPTR ALREADY IN    4659
         BNE   LOOPCHK                    LIST, FALL THROUGH       4659
         EJECT
* TRACE  TABLE SIZE HAS BEEN EXCEEDED OR A TRACE LOOP HAS BE DETECTED
* PRINT TERMINATE MESSAGE
         SPACE
QUIT     MVC   22(20,GRX),QUITMESS PUT TERMINATE MESSAGE IN BUFFER
         BAL   RETR,PRINT          PRINT MESSAGE
         SPACE
* PRINT MAIN FORTRAN ROUTINE ENTRY POINT AND RETURN
         SPACE
FINISH   EQU   *
         MVC   1(12,GRX),ENTMESS       MOVE'ENTRY POINT ='INTO BUFFER
         LA    GRY,13(GRX)         TELL ADCON WHERE TO PUT ADDRESS
         LA    GRX,X'C0'(IBCOMPTR) TELL ADCON WHERE TO FIND ADDRESS
         BAL   RETR,HEXCONV        CONVERT ADDRESS AND PRINT MESSAGE
         BAL   RETR,PRINT              PRINT LINE
         AIF   (&ERR EQ 1).TR11
         OI    TRACELST+3,X'01'    TO INDICATE COMPLETION          4659
.TR11    ANOP
EXIT     EQU   *
         AIF   (&ERR EQ 0).TR6
OUT      L     13,4(0,13)              GET USER'S 13(USER OF TRACEBACK)
         MVI   SW,OFF                  SET OFF ENTRY FROM ERROR MONITOR
         RETURN (14,12)                SWITCH AND RETURN
         AGO   .TR7
.TR6     ANOP
OUT      EQU   *
         MVI   124(IBCOMPTR),X'FF'     RESET I/O ENDED SWITCH
TST218   EQU   *
         CLI   SAVENM+3,218
         BNE   RET                     IF NOT 217 OR 218 RETURN NORMAL
         L     GRX,IOERR(0,IBCOMPTR)
GETRET   LA    GRX,0(0,GRX)            SEE IF EXIT REALLY SPECIFIED
         LTR   GRX,GRX
         BZ    RET                     NONE SPECIFIED RETURN NORMALLY
         LR    14,GRX                  EXIT SPECIFIED , RESTORE
         LM    0,13,132(IBCOMPTR)      REGISTERS AND RETURN TO THE
         L     14,0(0,14)              EXIT SPECIFIED
         BR    14
RET      LR    15,IBCOMPTR
         LM    0,12,20(13)
         BAL   R,68(0,L)               TERMINATE JOB SINCE ERROR OCCUR.
         DC    AL2(16)
.TR7     ANOP
* TRACEBACK CALLING-LOOP DETECTION CONTINUED                       4659
LOOPCHK1 ST    SAVEPTR,TRACELST(COMPR)  ADD SAVEPTR TO LOOPCHK TBL 4659
         L     SAVEPTR,4(0,SAVEPTR)    GET NEXT SAVEPTR            4659
         LR    COMPR,INDEXR            RAISE COMPARAND BY 4        4659
         B     TRACEB
MOVIBCM  LA    LNGR,5
         LA    WORKR,NMIBCOM-1
         B     DECR
         EJECT
***********************************************************************
* THIS IS AN OPEN SUBROUTINE WITH TWO ENTRY POINTS-                   *
*                                                                     *
*    1. HEXCONV--CONVERTS 4 BYTES TO PRINTABLE HEX AND PRINTS A LINE. *
*                ON ENTRY HEXCONV EXPECTS-                            *
*                                                                     *
*                   A. GRX(R2) TO CONTAIN ADDRESS OF WORD TO BE       *
*                              CONVERTED.                             *
*                   B. GRY(R3) TO CONTAIN ADDRESS OF LOCATION WHERE   *
*                              CONVERTED NUMBER IS TO BE PLACED.      *
*                   C. SIZER(R4) TO CONTAIN LENGTH OF MESSAGE TO BE   *
*                                PRINTED.                             *
*                   D. RETR(R7) TO CONTAIN RETURN ADDRESS.            *
*                                                                     *
*    2. PRINT--PRINTS A LINE OF TEXT.ON ENTRY PRINT EXPECTS C. AND D. *
*              ABOVE.                                                 *
*                                                                     *
*                                                                     *
* IHCFCVTH IS USED FOR HEX CONVERSIONS AND IHCFIOSH IS USED FOR       *
* PRINTING.                                                           *
***********************************************************************
         SPACE
HEXCONV  L     IOLR,VADCON         GET ADDRESS OF IHCFCVTH
         L     IOLR,92(IOLR)       INCREMENT TO HEX CONVERT ENTRY POINT
         BALR  IORR,IOLR           CONVERT
         DC    X'04'                    4 BYTES
         DC    X'0A'                    INTO TEN BYTE AREA
         BR    RETR
PRINT    EQU   *
         LH    GRX,LNGTH
         L     IOLR,VFIOCS         GET ADDRESS OF FIOCS
         BALR  IORR,IOLR           PRINT LINE
         DC    X'02'               WRITE CODE
         DC    X'00'
         NOP   0
         MVI   0(GRX),C'0'
         STH   GRY,LNGTH
         BR    RETR                RETURN
         EJECT
* EXTERNAL ADDRESS CONSTANTS
         SPACE
VIBCOM   DC    V(IBCOM#)           ADDRESS OF IBCOM
VADCON   DC    V(ADCON#)           ADDRESS OF IHCFCVTH
         AIF   (&ERR EQ 1).TR200
VFIOCS   DC    V(FIOCS#)           ADDRESS OF IHCFIOSH
         AGO   .TR201
.TR200   ANOP
VFIOCS   DC    V(FIOCSBEP)
.TR201   ANOP
         SPACE
* RECONSTRUCTED IBCOM SAVE AREA AND HEX CONSTANTS
         SPACE
OUTPRAM  DC    X'04000000'         FIOCS FOR OUTPUT ON SYSOUT UNIT
TRACELST DC    F'1'                FOR DETECTING CALLING LOOPS     4659
         DC    11F'0'                                              4659
         SPACE
* MESSAGE TEXTS AND CHARACTER CONSTANTS
         SPACE
         AIF   (&ERR EQ 0).TR211
SAVEAREA DS    18F
.TR211   ANOP
         AIF   (&ERR EQ 1).TR8
SAVENM   DS    F
ERRMES   DC    C'IHC   I'
         AGO   .TR20
.TR8     ANOP
SW       DC    XL1'00'
.TR20    ANOP
ON       EQU   X'FF'
OFF      EQU   X'00'
ER904    EQU   X'6C'
CON240   DC    H'240'                                             II295
CON16    DC    H'16'
HEADING  DC    C'TRACEBACK  ROUTINE  CALLED FROM ISN   REG.  14   REG. X
                15   REG.   0   REG.   1'                         MAINT
NMIBCOM  DC    C'IBCOM'
NOP      DC    X'4700'
LNGTH    DC    H'0'
ISN      DS    0D
         DC    XL8'0'              FOR CONVERTING ISN'S TO DECIMAL
QUITMESS DC    C'TRACEBACK TERMINATED'
ENTMESS  DC    C'ENTRY POINT='
         SPACE
* FOR EXECUTE INSTRUCTION
         SPACE
         AIF   (&ERR EQ 1).TR5
ENDFILE  EQU   X'10C'
IOERR    EQU   X'110'
MSG      EQU   0
ERNM     EQU   8
*
*
MOVEL132 MVC   1(1,GRX),4(SIZER)
.TR5     ANOP
MOVE     MVC   12(0,GRX),1(WORKR)  MOVE NAME INTO IDENTIFIER COLUMN
         SPACE
         MEND
