         MACRO
         IEATIMER  &SYS=MVT,&SMF=NO,&TSO=NO,&TOD=NO               20071
         LCLB  &B(4)                                              20071
&B(1)    SETB  ('&SYS' EQ 'MVT')                                  20021
&B(2)    SETB  ('&SMF' EQ 'YES')                                  20021
&B(3)    SETB  ('&TSO' EQ 'YES')                                  20021
&B(4)    SETB  ('&TOD' EQ 'YES')                                  20071
.*                                                                20021
.*  SWITCH  &B(1)  SET TO ZERO - MULTIPROC/M65 INCLUDED           20021
.*  SWITCH  &B(1)  SET TO ONE  - MVT INCLUDED                     21008
.*                                                                20021
.*  SWITCH  &B(2)  SET TO ZERO - SMF NOT INCLUDED                 20021
.*  SWITCH  &B(2)  SET TO ONE  - SMF INCLUDED                     20021
.*                                                                20021
.*  SWITCH  &B(3)  SET TO ZERO - TIME SHARING OPTION NOT INCL     20021
.*  SWITCH  &B(3)  SET TO ONE -  TIME SHARING OPTION INCLUDED     20021
.*                                                                20021
.*  SWITCH  B(4)  SET TO ZERO - TIME-OF-DAY CLOCK NOT INCLUDED    20071
.*  SWITCH  B(4)  SET TO ONE  - TIME-OF-DAY CLOCK INCLUDED        20071
.*                                                                20021
         AIF   (&B(4)).TOD0010                                    20071
         AIF   (&B(1) AND &B(2) AND &B(3)).TIM001                 20021
         AIF   (&B(1) AND &B(2)).TIM002                           20021
         AIF   (&B(1) AND &B(3)).TIM003                           20021
         AIF   (&B(1)).TIM004                                     20021
         AIF   (&B(2) AND &B(3)).MPTSO1                           21008
         AIF   (&B(2)).TIM005                                     20021
         AIF   (&B(3)).MPTSO2                                     21008
         TITLE 'IEAQTIOO -TIMER SLIH AND ENQ/DEQ RT FOR MP65'
         AGO   .TIM006                                            20021
.TIM001  TITLE 'IEAQTIOO-TIMER SLIH AND ENQ/DEQ RT FOR MVT / TSO  SMF'
         AGO   .TIM006                                            20021
.TIM002  TITLE 'IEAQTI00 -TIMER SLIH AND ENQ/DEQ RT FOR MVT SMF'
         AGO   .TIM006                                            20021
.TIM003  TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT FOR MVT TSO'   20021
         AGO   .TIM006                                            20021
.TIM004  TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT FOR MVT'       20021
         AGO   .TIM006                                            20021
.MPTSO1  TITLE 'IEAQTI00-TIMER SLIH AND ENQ/DEQ RT FOR MP65/TSO && SMF'
         AGO   .TIM006                                            21008
.TIM005  TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT FOR MP65 SMF'  20021
         AGO   .TIM006                                            21008
.MPTSO2  TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT FOR MP65 TSO'  21008
.TIM006  AGO   .TOD0020                                           20071
.TOD0010 AIF   (&B(1) AND &B(2) AND &B(3)).TOD0030                20071
         AIF   (&B(1) AND &B(2)).TOD0040                          20071
         AIF   (&B(1) AND &B(3)).TOD0050                          20071
         TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT FOR MVT/TOD'   20071
         AGO   .TOD0020                                           20071
.TOD0030 ANOP
    TITLE 'IEAQTI00  TIMER SLIH AND ENQ/DEQ RT MVT/SMF/TSO/TOD'   20071
         AGO   .TOD0020                                           20071
.TOD0040 TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ RT MVT/SMF/TOD'   20071
         AGO   .TOD0020                                           20071
.TOD0050 TITLE 'IEAQTI00 TIMER SLIH AND ENQ/DEQ/ RT MVT/TSO/TOD'  20071
.TOD0020 ANOP                                                     20071
.*      A     427800-428100                                    @SA77462
IEAQTI00 START 0
         SPACE
*...DETAILED COMMENTARY WILL PRECEED EACH FUNCTION LISTED BELOW.
* ROUTINE NAME .IEAQTI00, TIMER SLIH AND ENQUEUE AND DEQUEUE RTNS.
         SPACE
* MODULE       .TIMER SECOND LEVEL INTERRUPT HANDLING.
* FUNCTION     .ENQUEUING TIMER ELEMENTS.
*              .DEQUEUING TIMER ELEMENTS.
*              .CONTAINS RUDIMENTARY TIMER QUEUE.
         SPACE
* ENTRY POINT  .IEAQTD00- CANCEL DEQUEUING RTN ENTRY.
* NAMES        .IEAQTD01- NORMAL DEQUEUING RTN ENTRY.
*              .IEA0TI00- NORMAL ENTRY TO TIMER SLIH.
*              .TSENTIME- DQ RTN ENTRY TO TIMER SLIH.
*              .IEAQTE00- ENTRY TO ENQUEUING RTN.
*              .IEATPC-   ADDR OF SHPC.
         SPACE
* CONTAINED IN .IEAQTI00
* MODULE
         SPACE
* ATTRIBUTES   .SEE COMMENTARY PRECEEDING EACH ROUTINE.
*              .ALL CODE SUPERVISORY STATE, DISABLED FOR SYSTEM
*               INTERRUPTS, AND RESIDENT.
         SPACE
* APPLICABILITY .OPTION 4 SYSTEMS USING OPTION 6B.
         SPACE
* EXTERNAL     .NONE
* REFERENCES
         SPACE
* SVC USAGE    .POST
         SPACE
* INPUT        .SEE COMMENTARY PRECEEDING EACH ROUTINE.
         SPACE
* OUTPUT       .SEE COMMENTARY PRECEEDING EACH ROUTINE.
         SPACE
* ENTRY POINTS .SEE COMMENTARY PRECEEDING EACH ROUTINE.
         SPACE
* EXIT POINTS  .SEE COMMENTARY PRECEEDING EACH ROUTINE.
         SPACE
* ERROR EXITS  .SEE COMMENTARY PRECEEDING EACH ROUTINE.
         SPACE
* TABLES AND
* CONTROL BLKS .SEE COMMENTARY PRECEEDING EACH ROUTINE.
* REFERENCED
         SPACE
* LIST ORIGINS   .TIMER PSEUDO CLOCKS.
* TABLES,CONTROL   .IEATPC IS ADDR OF SHPC FOUND IN CVT. THE T4PC AND
* BLKS INCLUDED     LTPC FOLLOW THE SHPC
*                  .THE TQPTR CONTAINS THE ADDR OF THE TOP TQE IN THE
*                   TIMER QUEUE. INITIALLY A RUDIMENTARY QUEUE EXISTS,
*                   ASSEMBLED AS A PART OF THIS MODULE.
*...THE CVTSECT IS USED TO DETERMINE CVT OFFSETS...
CVTSECT  DSECT
         CVT
         EJECT
         AIF   (NOT &B(3)).TSO0010                                20021
         IKJTSCVT                                                 20021
         EJECT                                                    20021
.TSO0010 ANOP                                                     20021
         AIF   (&B(1)).MVT0010                                    20021
         IEAQFX 65,MCH,M65MP
         EJECT
.MVT0010 ANOP                                                     20021
         AIF   (&B(4)).TOD0060                                    20071
         AIF   (&B(1) AND &B(2) AND &B(3)).TIM007                 20021
         AIF   (&B(1) AND &B(2)).TIM008                           20021
         AIF   (&B(1) AND &B(3)).TIM009                           20021
         AIF   (&B(1)).TIM010                                     20021
         AIF   (&B(2) AND &B(3)).MPTSO3                           21008
         AIF   (&B(2)).TIM011                                     20021
         AIF   (&B(3)).MPTSO4                                     21008
         TITLE 'IEAQTI00 TIMER DEQUEUE ROUTINE FOR MP65'          20021
         AGO   .TIM012                                            20021
.TIM007  TITLE 'IEAQTIOO TIMER DEQUEUE RT FOR MVT /TSO AND SMF'   20021
         AGO   .TIM012                                            20021
.TIM008  TITLE 'IEAQTI00 TIMER DEQUEUE RT FOR MVT WITH SMF'       20021
         AGO   .TIM012                                            20021
.TIM009  TITLE 'IEAQTI00 TIMER DEQUEUE RT FOR MVT WITH TSO'       20021
         AGO   .TIM012                                            20021
.TIM010  TITLE 'IEAQTI00 TIMER DEQUEUE RT FOR MVT'                20021
         AGO   .TIM012                                            20021
.MPTSO3  TITLE 'IEAQTIOO TIMER DEQUEUE RT FOR MP65/TSO AND SMF'   21008
         AGO   .TIM012                                            21008
.TIM011  TITLE 'IEAQTI00 TIMER DEQUEUE RT FOR MP65 WITH SMF'      20021
         AGO   .TIM012                                            21008
.MPTSO4  TITLE 'IEAQTI00 TIMER DEQUEUE RT FOR MP65 WITH TSO'      21008
.TIM012  AGO   .TOD0100                                           20071
.TOD0060 AIF    (&B(1) AND &B(2) AND &B(3)).TOD0070               20071
         AIF    (&B(1) AND &B(2)).TOD0080                         20071
         AIF    (&B(1) AND &B(3)).TOD0090                         20071
         TITLE 'IEAQTI00 TIMER DEQUEUE ROUTINE MVT/TOD'           20071
         AGO    .TOD0100                                          20071
.TOD0070 TITLE 'IEAQTI00 TIMER DEQUEUE ROUTINE MVT/SMF/TSO/TOD'   20071
         AGO    .TOD0100                                          20071
.TOD0080 TITLE 'IEAQTI00 TIMER DEQUEUE ROUTINE MVT/SMF/TOD'       20071
         AGO    .TOD0100                                          20071
.TOD0090 TITLE 'IEAQTI00 TIMER DEQUEUE ROUTINE MVT/TSO/TOD'       20071
.TOD0100  ANOP                                                    20071
IEAQTI00 CSECT
         ENTRY IEAQTIA0                                             MCH
         ENTRY IEAQTIA1                                             MCH
         AIF   (&B(1)).MVT0020                                    20021
         USING IEAQFX00,0                                          65MP
.MVT0020 ANOP                                                     20021
* ROUTINE NAME .IEAQTD00, TIMER DEQUEUE ROUTINE.
         SPACE
* FUNCTION     .THIS RTN. IS USED TO DEQUEUE TIMER QUEUE ELEMENTS (TQE)
*               AND CONVERT THE TIME OF EXPIRATION (TOX) VALUE TO AN
*               ABSOLUTE INTERVAL. THIS IS DONE, FOR EXAMPLE, WHEN THE
*               DISPATCHER DETERMINES A TASK SWITCH FOR A TASK WHICH
*               HAS A TASK TYPE INTERVAL SET.
*              .A SPECIAL ENTRY POINT IS PROVIDED FOR PERMANENTLY
*               DEQUEUING TQE'S, E.G., TTIMER CANCEL.
         SPACE
* ENTRY POINT  .IEAQTD00- CANCEL DEQUEUING.
* NAMES        .IEAQTD01- NORMAL DEQUEUING.
         SPACE
* CONTAINED IN .IEAQTI00
* MODULE
         SPACE
* ATTRIBUTES   .REENTRANT,SUPERVISOR STATE,DISABLED FOR I/O AND
*               EXTERNAL INTERRUPTS,RESIDENT.
         SPACE
* APPLICABILITY .OPTION 4 SYSTEMS USING OPTION 6B.
         SPACE
* EXTERNAL     .NONE
* REFERENCES
         SPACE
* SVC USAGE    .NONE
         SPACE
* INPUT        .ENTRY IS MADE ONLY FROM SUPERVISORY CODE.
*              .REGISTER 1 MUST CONTAIN THE ADDRESS OF THE TQE TO BE
*               DEQUEUED
         SPACE
* OUTPUT       .NONE
         SPACE
* ENTRY POINTS .IEAQTD01- DEQUEUES TQE FROM TIMER QUEUE AND CONVERTS
*               TOX TO ABSOLUTE INTERVAL (26 USEC UNITS). A CHECK IS
*               MADE TO DETERMINE IF INTERVAL HAS EXPIRED. IF SO, ZERO
*               IS STORED IN THE TQE VALUE TO CAUSE IMMEDIATE
*               EXPIRATION WHEN THE TQE IS SUBSEQUENTLY ENQUEUED. A
*               CHECK IS MADE TO DETERMINE IF THE TOP (NEXT TO EXPIRE)
*               TQE WAS DEQUEUED. IF SO, THE TIMER SLIH IS ENTERED TO
*               INSTATE THE NEW TOP TQE ON THE HARDWARE TIMER AND TO
*               UPDATE THE SHPC. THE EP MUST BE AN EXTRN'D ADCON  M4928
*               IN THE USER.                                      M4928
*              .REG 1 CONTAINS TQE ADDRESS.
*              .REG 2 CONTAINS RETURN ADDRESS TO CALLER.
*              .THE PSW MUST BE DISABLED FOR SYSTEMS INTERRUPTS AND IN
*               THE SUPERVISOR STATE.
         SPACE
*              .IEAQTD00- DEQUEUES THE TQE WITHOUT CONVERTING TOX TO
*               ABSOLUTE VALUE. CHECK FOR DEQUEUING TOP TQE AND HANDLES
*               AS ABOVE. THE EP IS IN THE CVT.                   M4928
*              .REG 1 MUST CONTAIN THE TQE ADDRESS.
*              .REG 2 MUST CONTAIN THE RETURN ADDRESS IN THE CALLER.
*              .REG 10 MUST CONTAIN THE ADDRESS OF IEACVTPC,THE  A27037
*               PSEUDO CLOCK AREA, POINTED TO BY CVTTPC.         A27037
*              .THE PSW MUST BE DISABLED FOR SYSTEM INTERRUPTS AND IN
*               THE SUPERVISOR STATE.
         SPACE
* EXIT POINTS  .TWO EXITS POINTS EXIST CONSISTING OF A BRANCH BACK TO
*               THE CALLER USING THE ADDRESS IN REG. 2.
*              .ONE EXIT POINT BRANCHES TO THE TIMER SLIH. (NOTE THAT
*               REG 2 IS NEEDED IN THE SLIH TO RETURN TO THE CALLER OF
*               DEQUEUE). THIS EXIT IS USED WHEN THE TOP TQE IS DQ'D.
*              .REGISTERS 0-1,3-11,13-15 ARE VOLATILE OVER DEQUEUING.
*              .REGISTERS 2 AND 12 ARE TRANSPARENT OVER DEQUE     M4928
         SPACE
* ERROR EXIT POINTS .NONE
         SPACE
* TABLES AND   .THE TQE WHOSE ADDRESS IS PASSED IN REG 1.
* CONTROL BLKS  FIELDS REF'D- TQEFLGS,TQEVAL,TQEFLNK,TQEBLNK
* REFERENCED   .SHPC
         SPACE
* LIST ORIGINS .NONE
* TABLES ETC
         SPACE
* RESTRICTIONS .NONE
         SPACE
* NOTES        .THE IEAQTD00 CODE MUST PRECEED THE TIMER SLIH CODE
*               IN ORDER TO USE THE LA INSTRUCTION TO GET SLIH
*               ADDRESSABILITY.
         EJECT
*...EQUATES...
XDQ1     EQU   4
XDQ2     EQU   5
XELM     EQU   1
XDBASE   EQU   15
XRETRN   EQU   2
XDQI     EQU   6
XR10     EQU  10                                                   REFR
PCPTR    EQU   88            .                                     REFR
Q28      EQU   28                   DISP INTO SAVEAREA FOR RET REG 0123
ZERO     EQU   0                   STANDARD EQUATE FOR THE 0     A31240
Q4       EQU  4                  LENGHT FOR A MOVE INSTR.         M0123
SAVEARA  EQU   2 .                REGISTER TO POINT AT SAVE AREA  31240
R12      EQU   12 .               REGISTER EQUATE FOR REG 12   BH M1703
         AIF   (NOT &B(1)).MVT0025                                20021
TIMER    EQU   80                                                 20021
.MVT0025  ANOP                                                    20021
VELMFLG  EQU   0
VELMCHN  EQU   4
VELMVAL  EQU   12
VELMSAV  EQU   20                      TIME REMAINING              MTS0
         ENTRY IEAQTD00
         ENTRY IEAQTD01
*
IEAQTIA0 EQU   *                                                    MCH
IEAQTD01 BALR  XDBASE,0
         USING *,XDBASE
*
         AIF   (NOT &B(3)).TSO0020                                20021
TDEQBASE EQU   *                   .BASE ADDR OF DEQUEUE RTN.     20021
.TSO0020 ANOP                                                     20021
         TM    VELMFLG(XELM),X'80' .IS TQE ON QUEUE.
         BCR   7,XRETRN            .RETURN IF NOT.
         LR    XDQI,XR10           .KEEP INPUT REG 10              REFR
         L     XR10,CVTPTR         .GET ADDRESS OF CVT             REFR
         L     XR10,PCPTR(XR10)    .LOAD CLOCK BASE REG            REFR
         USING TPC,10
         ST    XDQI,SAVER10        .SAVE INPUT REG 10              REFR
         AIF   (&B(1)).MVT0030                                    20021
         L     XDQI,PREFTMRA       .GET VALUE OF                   65MP
         L     XDQI,TIMER-IEAQFX00(XDQI) ACTIVE TIMER              65MP
         AGO   .MVT0040                                           20021
.MVT0030 ANOP                                                     20021
         L     XDQI,TIMER          .GET VALUE ON TIMER AND SHIFT TO
.MVT0040 ANOP                                                     20021
         SRA   XDQI,1               DEVELOP 26 USEC UNITS
* DEVELOP REMAINING TIME.
* = TOX - (SHPC - TIMER)
         LCR   XDQI,XDQI           .-TIMER
         AL    XDQI,SHPC           .SHPC-TIMER
         LCR   XDQI,XDQI           .-(SHPC-TIMER)
         AL    XDQI,VELMVAL(XELM)  .TOX-(SHPC-TIMER)
*
         BC    3,*+6              .IF TOX IS GREATER THAN 6 HR TOD,
*                                 OVERFLOW WILL OCCUR AND BR ON CARRY
*                                 WILL BY-PASS SETTING PAST-DUE INTVL
*                                 TO ZERO.
         SR    XDQI,XDQI          .SET PAST-DUE INTVL. TO ZERO
         ST    XDQI,VELMVAL(XELM) .STORE INTVL. IN ELEMENT.
         L     XR10,CVTPTR         PTR TO CVT                 BH M1701
         TM    PCPTR(XR10),X'80'   IS POST CYCLE FLAG ON.     BH M1701
         L     XR10,PCPTR(XR10)    RESTORE REG. 10            BH M1701
         BNO   IEAQTD00                                       BH M1701
         ST    ZERO,POSTZERO       SAVE ZERO FOR POST         BH M1701
         ST    XRETRN,POSTTWO      SAVE REG. TWO FOR POST     BH M1701
         STM   R11,R12,POSTBC      SAVE 11 AND 12 FOR POST    BH M1701
         L     XR10,CVTPTR .       POINTER TO THE CVT         BH 49166
         TM    PCPTR(XR10),X'80' . IS POST FLAG ON            BH 49166
         L    XR10,PCPTR(XR10) .   RESTORE REG10              BH 49166
         BO    DEQELEMT            SO DON'T STORE ALL REGS.   BH 49166
*                                                                 20021
*...BRANCH ENTRY POINT FROM CVT ADDR CVTQTD00.                    20021
*                                                                 20021
IEAQTD00 EQU   *                   ENTRY POINT                BB  M1701
         AIF   (&B(3)).TSOSAVE                                 @SA72283
         STM   R11,R9,TQTDSAV      SAVE CALLER REGS.          BB  M1701
         LA    SAVEARA,TQTDSAV     PTR TO SAVE AREA           BB  M1701
         AGO   .NOTTSO                                         @SA72283
.TSOSAVE ANOP                                                  @SA72283
         ST    R15,TSDBLDAT        SAVE REG 15                 @SA72283
         BALR  R15,0               ESTABLISH                   @SA72283
         USING *,R15               ADDRESSABILITY              @SA72283
         TM    SW,X'80'            TSIP ENTRY CODE 4 ?         @SA72283
         BZ    PRIMSV              NO,HANDLE NORMAL            @SA72283
         STM   R11,R9,SECSAVE      SAVE IN SECONDARY SAVEAREA  @SA72283
         LA    SAVEARA,SECSAVE     LOAD ADDRESS                @SA72283
         B     RESTOR15            BRANCH AROUND               @SA72283
PRIMSV   STM   R11,R9,TQTDSAV      SAVE IN PRIMARY SAVEAREA    @SA72283
         LA    SAVEARA,TQTDSAV     LOAD ADDRESS                @SA72283
RESTOR15 MVC   16(4,SAVEARA),TSDBLDAT    MOVE R15 TO SAVEAREA  @SA72283
         XC    TSDBLDAT(4),TSDBLDAT     CLEAN UP TSDBLDAT      @SA72283
.NOTTSO  ANOP                                                  @SA72283
*...DEQUEUE ELEMENT...
DEQELEMT EQU   *                                              BH M1701
         BALR  XDBASE,0            RE-ESTABLISH ADDR.         BB  M1701
         USING *,XDBASE                                       BB  M1701
         AIF   (NOT &B(3)).TSO0040
         L     XDBASE,ADEQBASE                                    20021
         USING TDEQBASE,XDBASE                                    20021
.TSO0040  ANOP                                                    20021
         LM    XDQ1,XDQ2,VELMCHN(XELM) DEQUEUE THE TQE            M4928
         ST    XDQ1,VELMCHN(XDQ2)
         ST    XDQ2,VELMCHN+4(XDQ1)
         OI    VELMFLG(XELM),X'80' .SET 'OFF QUEUE' FLAG
         CL    XDQ2,TOPQ           .WAS TOP ELEMENT DEQUEUED
         BC    9,SETADDRT .        GO SET ADDR. FOR TSLIHLP   BH M1701
RETURN   EQU   *                                              BH M1701
         L     XR10,CVTPTR . GET CVT ADDRESS                  BH M1701
         TM    PCPTR(XR10),X'80' . IS POST CYCLE FLAG ON.     BH M1701
         L     XR10,PCPTR(XR10) . RESTORE REG. 10.            BH M1701
         BNO   NOTPOSTE .          NO. RESTORE REGISTERS      BH M1701
         L     ZERO,POSTZERO .     RESTORE REG. ZERO FOR POST BH M1701
         L     XRETRN,POSTTWO .    RESTORE REG. TWO FOR POST. BH M1701
         LM    R11,R12,POSTBC .    RESTORE REGS. 11 AND 12    BH M1701
         B     GONEXT .            GO RETURN                  BH M1701
NOTPOSTE EQU   *                                              BH M1701
         LM    R11,R9,ZERO(SAVEARA) . RESTORE REGS            BH M1701
GONEXT   EQU   *                                              BH M1701
         L     XR10,SAVER10 .      RESTORE REGISTER 10        BH M1701
         BR    XRETRN              .RETURN TO CALLER               REFR
SETADDRT EQU   * .                                            BH M1701
         AIF   (NOT &B(2)).NSMFWT  TEST FOR NO SMF             @SA60581
         L     XDQ1,WAITSAVE       SYS WAIT SAVE WA            @SA60581
         OC    8(4,XDQ1),8(XDQ1)   TIMER RESET VALUE SAVED     @SA60581
         BNZ   SETADSMF            YES, DO NOT OVERLAY IT      @SA60581
         AIF   (&B(1)).SMFWTMV     TEST FOR MVT                @SA60581
         L     XDQ2,PREFTMRA       GET VALUE OF                @SA60581
         L     XDQ2,TIMER-IEAQFX00(XDQ2) ACTIVE TIMER          @SA60581
         AGO   .SMFWTMP                                        @SA60581
.SMFWTMV ANOP                                                  @SA60581
         L     XDQ2,TIMER          GET VALUE OF TIMER          @SA60581
.SMFWTMP ANOP                                                  @SA60581
         ST    XDQ2,8(XDQ1)        SAVE TIMER RESET VALUE      @SA60581
SETADSMF EQU   *                                               @SA60581
.NSMFWT  ANOP                                                  @SA60581
         LA    XDBASE,TSLIHLP                                 BH M1701
         DROP  XDBASE                                         BH M1701
         USING TSLIHLP,XSBASE                                 BH M1701
         B     TSENTIME                                       BH M1701
         SPACE
         AIF   (NOT &B(3)).TSO0050                                20021
*...CONSTANT...
ADEQBASE DC    A(TDEQBASE)         .BASE ADDR PTR OF DEQ RTN.     20021
SECSAVE  DS    15F                 SECONDARY SAVEAREA          @SA72283
.TSO0050 ANOP                                                     20021
         AIF   (&B(4)).TOD0110                                    20071
         AIF   (&B(1) AND &B(2) AND &B(3)).TIM013                 20021
         AIF   (&B(1) AND &B(2)).TIM014                           20021
         AIF   (&B(1) AND &B(3)).TIM015                           20021
         AIF   (&B(1)).TIM016                                     20021
         AIF   (&B(2) AND &B(3)).MPTSO5                           21008
         AIF   (&B(2)).TIM017                                     20021
         AIF   (&B(3)).MPTSO6                                     21008
         TITLE 'IEAQTI00 TIMER SLIH FOR MP65'                     20021
         AGO   .TIM018                                            20021
.TIM013  TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH TSO AND SMF'     20021
         AGO   .TIM018                                            20021
.TIM014  TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH SMF'             20021
         AGO   .TIM018                                            20021
.TIM015  TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH TSO'             20021
         AGO   .TIM018                                            20021
.TIM016  TITLE 'IEAQTI00 TIMER SLIH FOR MVT'                      20021
         AGO   .TIM018                                            20021
.TIM017  TITLE 'IEAQTI00 TIMER SLIH FOR MP65 WITH SMF'            20021
         AGO   .TIM018                                            21008
.MPTSO5  TITLE 'IEAQTI00 TIMER SLIH FOR MP65 WITH TSO AND SMF'    21008
         AGO   .TIM018                                            21008
.MPTSO6  TITLE 'IEAQTI00 TIMER SLIH FOR MP65 WITH TSO'            21008
.TIM018  AGO   .TOD0120                                           20071
.TOD0110 AIF   (&B(1) AND &B(2) AND &B(3)).TOD0130                20071
         AIF   (&B(1) AND &B(2)).TOD0140                          20071
         AIF   (&B(1) AND &B(3)).TOD0150                          20071
         TITLE 'TIMER SLIH FOR MVT WITH TOD'                      20071
         AGO   .TOD0120                                           20071
.TOD0130 TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH SMF,TSO,AND TOD' 20071
         AGO   .TOD0120                                           20071
.TOD0140 TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH SMF AND TOD'     20071
         AGO   .TOD0120                                           20071
.TOD0150 TITLE 'IEAQTI00 TIMER SLIH FOR MVT WITH TSO AND TOD'     20071
.TOD0120 ANOP                                                     20071
         SPACE 2
* ROUTINE NAME .IEA0TI00, TIMER SECOND LEVEL INTERRUPT HANDLER (SLIH).
         SPACE
* FUNCTION     .RECIEVES CONTROL WHEN TIMER INTERRUPTS OCCUR. BASED
*               UPON TYPE OF INTERVAL THAT EXPIRED, INTERRUPT PROCESS'G
*               IS PERFORMED. THIS MAY CONSIST OF POSTING A COMPLETED
*               WAIT, SCHEDULING AN ASYCHRONOUS EXIT, OR UPDATING THE
*               TIMER QUEUES UPON EXPIRATION OF A SIX HR SUPR TQE.
*               ABTERMS A JOB STEP FOR WHICH THE WAIT TIME LIMIT   MTS0
*               HAS BEEN EXCEEDED.  MOVES TIMING INFORMATION.      MTS0
         AIF   (NOT &B(2)).SMF0010                                20021
*               CREATES IRB/IQE AND SCHEDULES IQE FOR AN ASYNCHRO-  SMF
*               NOUS ROUTINE UPON EXPIRATION OF JOB/STEP CPU OR     SMF
*               WAIT TIME EXPIRATION WHEN SMF IS IN THE SYSTEM.     SMF
*               UPON EXPIRATION OF 10 MINUTE TQE COLLECTS ACCUMULA- SMF
*               SYS WAIT TIME AND STORES IT FOR STEP TERMINATION.   SMF
.SMF0010 ANOP                                                     20021
         AIF   (NOT &B(4)).TOD0160                                20071
*              THE SYNC BIT AT OFFSET X'24' IN THE TQE IS         20071
*              CHECKED TO DETERMINE IF THE INTERRUPT IS FOR       20071
*              SYNCHRONIZATION PURPOSES.  IF THIS BIT IS SET      20071
*              TO ONE THAN THE SYNCHRONIZATION ROUTINE IS         20071
*              ENTERED:                                           20071
*                                                                 20071
*              .IF THE REMAINING TIME AS CALCULATED BY            20071
*              'MNIGHT-CLOCK' IS ZERO OR NEGATIVE,  THE           20071
*              INTERVAL IS CONSIDERED COMPLETE.                   20071
*                                                                 20071
*              .IF THE REMAINING INTERVAL IS LESS THAN ONE HOUR   20071
*              (BUT POSITIVE) THAT VALUE IS USED TO TIME THE      20071
*              LAST SEGMENT OF THE INTERVAL AND THE SYNC BIT      20071
*              IS TURNED OFF.                                     20071
*                                                                 20071
*              .IF MORE THAN ONE HOUR REMAINS IN THE INTERVAL THE 20071
*              TQE IS REQUEUED FOR ANOTHER HOUR TO CONTINUE THE   20071
*              SYNCHRONIZATION PROCESS.                           20071
.TOD0160 ANOP                                                     20071
*               AT MIDNIGHT THE CVT DATE IS UPDATED. MANIPULATES TIMER
*               QUEUE.
         SPACE
* ENTRY POINT  .IEA0TI00- ENTRY FROM T/EX FLIH WHEN TIMER INTERRUPT
* NAMES         OCCURS.
*              .TSENTIME- ENTRY FROM TIMER DEQUEUE RTN. WHEN TOP TQE
*               IS DEQUEUED. (THIS DOES NOT REQUIRE AN ENTRY STATEMENT)
         AIF   (NOT &B(4)).TOD0170                                20071
*              .IEA0TIDT -THIS ROUTINE UPDATES THE CVTDATE FIELD. 20071
.TOD0170 ANOP                                                     20071
         SPACE
* CONTAINED IN .IEAQTI00
* MODULE
         SPACE
* ATTRIBUTES   .SERIALLY REUSABLE,SUPERVISOR STATE,DISABLED FOR SYSTEM
*               INTERRUPTS,RESIDENT.
         SPACE
* APPLICABILITY .OPTION 4 SYSTEMS USING OPTION 6B.
         SPACE
* EXTERNAL     .NONE
* REFERENCES
         SPACE
* SVC USAGE    .POST
         SPACE
* INPUT        .NO EXPLICIT DATA. INTERNAL TQE POINTER INDICATES TQE
*               THAT EXPIRED.
         SPACE
* OUTPUT       .NONE
         SPACE
* ENTRY POINTS .IEA0TI00- ENTRY FROM T/EX FLIH.
*               REG 2 MUST CONTAIN RETURN ADDR. OTHER REGS NOT SIGNIF.
*               PSW MUST BE DISABLED FOR SYSTEM INTERRUPTS AND IN
*               SUPERVISER STATE.
*              .TSENTIME- ENTRY FROM DEQUEUE RTN.
*               REG 2 MUST CONTAIN RETURN ADDR TO CALLER OF DEQUEUE
*               RTN. OTHER REGS ARE NOT SIGNIFICANT.
*               PSW MUST BE AS ABOVE.
         AIF   (NOT &B(4)).TOD0180                                20071
*              IEA0TIDT - THIS ENTRY POINT IS USED BY THE TIME    20071
*              ROUTINE TO UPDATE THE CVTDATE FIELD WHEN THE       20071
*              VALUE OF 'MNIGHT-CLOCK' IS NEGATIVE.               20071
*              .IT IS ALSO USED BY THE TSLIH FOR UPDATING THE     20071
*              CVTDATE FIELD WHEN THE MIDNIGHT TQE EXPIRES.       20071
.TOD0180 ANOP                                                     20071
         SPACE
* EXITS POINTS .A BRANCH TO THE ADDRESS CONTAINED IN REG 2 RETURNS TO
*               THE CALLER AFTER SLIH PROCESSING IS COMPLETE.
*               PSW IS DISABLED FOR SYSTEM INTERRUPTS AND IN
*               SUPERVISORY STATE. REG SETTINGS ARE NOT SIGNIFICANT.
*               REGISTERS 1,3-8,13-15 ARE VOLATILE OVER TIMER SLIH.
*               REGISTERS 0,2,9-12    ARE TRANSPARENT OVER SLIH.
*              .A BALR INTERFACE WITH THE EXIT EFFECTOR(STAGE 2).
*                REG 1- COMPLEMENTED ADDR. OF IQE
*               REG 6-SAVES CONTENTS OF REG 10 OVER EXIT EFFECTOR.
*               REG 7-SAVES CONTENTS OF REG 1 OVER EXIT EFFECTOR.
         AIF   (NOT &B(2)).SMF0020                                20021
*               REG 11- SAVES CONTENTS OF R1 OVER EXIT EFFECTOR     SMF
.SMF0020 ANOP                                                     20021
*                REG 14-RETURN ADDR.
*                REG 15-ADDR OF EXIT EFFECTOR
*               .OTHER REGS ARE NOT REQUIRED TO BE TRANSPARENT OVER
*                EXIT EFFECTOR AND ARE NOT SIGNIFICANT.
*               .PSW IS DISABLED FOR SYSTEM INTERRUPTS AND IS IN
*                SUPERVISORY STATE.
*              .A BAL INTERFACE WITH TIMER ENQUEUE RTN.
*                REG 1- ADDR OF TQE TO BE ENQUEUED.
*                REG 2- RETURN ADDR TO SLIH.
*                REG 8- SAVES CONTENTS OF REG 2 OVER ENQUEUE.
*               .OTHER REGS ARE NOT SIGNIFICANT.
*               .PSW IS DISABLED FOR SYSTEM INTERRUPTS AND IS IN
*                SUPERVISORY STATE.
*             .A BALR INTERFACE WITH THE ABTERM ROUTINE.           MTS0
*               REG  0- TCB ADDRESS                                MTS0
*               REG  1- ABEND CODE                                 MTS0
*               REG 14- RETURN ADDRESS                             MTS0
*               REG 15- ADDRESS OF ABTERM ROUTINE                  MTS0
         AIF   (NOT &B(2)).SMF0030                                20021
*              .A BALR INTERFACE WITH GETMAIN                       SMF
*                REG 0- SUBPOOL AND SIZE                            SMF
*                REG 1- ANY NEGATIVE VALUE                          SMF
*                REG 3- CVT ADDRESS                                 SMF
*                REG 4- TCB ADDRESS                                 SMF
*                REG 5- BRANCH EP ADDRESS OF GETMAIN                SMF
*                REG 14- RETURN ADDRESS                             SMF
*                 REG 6- SAVES CONTENTS OF R15 OVER GETMAIN         SMF
.SMF0030 ANOP                                                     20021
         SPACE
* ERROR EXIT   .NONE
         SPACE
* TABLES AND   .TQE'S IN THE TIMER QUEUE.
* CONTROL BLKS  FIELDS REFERENCED-TQEFLGS(TESTED/SET),TQEFLNK(SET),
* REFERENCED    TQEBLNK(SET),TQEVAL(TESTED/SET),TQEEXIT(TESTED)
*               TQEECB(SET),TQESAV(LOADED)                         MTS0
*              .CVT- CVTDATE(SET),CVT0EF00(LOADED),CVTBTERM(LOADED)MTS0
*              .TCB (FOR TASK WITH EXPIRING INTERVAL OR RELATED    MTS0
*               TASKS)- TCBRBP(LOADED),TCBOTC(LOADED),             MTS0
*               TCBPKF(TESTED),TCBLTC(LOADED)                      MTS0
         AIF   (NOT &B(4)).TOD0190                                20071
*                                                                 20071
*              THE MIDNIGHT TQE HAS APOINTER IN THE FIRST WORD    20071
*              TO X'20' BEFORE A TWO WORD FIELD WHICH CONTAINS    20071
*              THE MNIGHT FIELD AND THE SYNC BIT.                 20071
.TOD0190 ANOP                                                     20071
         SPACE
* LIST ORIGINS  .NONE
* TABLES,CONTROL
* BLOCKS
         SPACE
         SPACE
* NOTES        .NONE
         SPACE 2
XYEAR    EQU   7
XMASK    EQU   8
XSQPTR   EQU   1
R0       EQU   0                                                   MTS0
XSRETRN  EQU   2
XSCMMTBL EQU   3
* RESTRICTIONS .NONE
*...REGISTERS...
R1       EQU   1
R15      EQU   15
XDAY     EQU   6
XTCB     EQU   4
X6HR     EQU   4
XRB      EQU   5
XSEXTEFT EQU   5
XS1      EQU   6
XS2      EQU   XS1+1
XSVRTRN  EQU   8
XPTR     EQU   8
XSNBASE  EQU   13
R9       EQU   9                   REG EQUATE                    A31240
R11      EQU   11                  REG EQUATE                    A31240
R14      EQU   14                      USED FOR LINKAGE.           MTS0
RETRG    EQU    28            RETURN REG DISP IN CVTPC SAVE AREA A31240
XOTCB    EQU   14                      MOTHER TCB                  MTS0
         AIF   (NOT &B(2)).SMF0040                                20021
GMBRNCH  EQU   5                        .GETMAIN BRANCH             SMF
XWTSAVE  EQU   8                                                    SMF
XSMCA    EQU   9              .SMCA POINTER                         SMF
XTCTPTR  EQU   9    .TCT                                            SMF
XTCTUTL  EQU   10    .USER TIME EXPIRATION ROUTINE                  SMF
XINITTCB EQU   10   .INITIATOR TCB                                  SMF
XSYSTRTN EQU   10   .ASYNCH RTN                                     SMF
TENMREG  EQU   14             .ADDR OF 10MIN TQE                    SMF
IRBADDR  EQU   1                        .IRB ADDR                   SMF
ADDRIQE  EQU   1                        .IQE ADDR                   SMF
IQEADDR  EQU   8                        .IQE ADDR                   SMF
XS11     EQU   11                       .SAVE REGISTER              SMF
XSA      EQU   10                       .SYS WAIT TIME OFLW FIELD   SMF
XSB      EQU   11                       .SYS WAIT TIME ACC FIELD    SMF
.SMF0040 ANOP                                                     20021
XSBASE   EQU   15
         AIF   (NOT &B(4)).TOD0200                                20071
RWK      EQU   6                   .REG EQUATE                    20071
RETREG   EQU   4                   .REG EQUATE                    20071
SAVTQE   EQU   5                   .REG EQUATE                    20071
RVAL     EQU   7                   .REG EQUATE                    20071
RVAL1    EQU   6                   .REG EQUATE                    20071
.TOD0200 ANOP                                                     20071
         SPACE
*...OFFSETS...
VXTFR    EQU   4
VSTAB    EQU   10
VTCBFLAG EQU   33
VEXIT    EQU   12
VTMPXT   EQU   28
VCMPTR   EQU   16
VDATE    EQU   56
TQESAADR EQU   24                      .S/A ADDRESS IN TQE.
         AIF   (NOT &B(2)).SMF0050                                20021
CVTSMCA1 EQU   196                .SMCA OFFSET IN CVT               SMF
VTQEEXIT EQU   28             .EXIT ADDR IN TQE                     SMF
SMCAWSAV EQU   72       .OFFSET TO SYS WAIT SAVE FIELD IN SMCA      SMF
VTCBTCT  EQU   164            .TCT PTR IN TCB                       SMF
VTCTINIT EQU   4              .INITIATOR TCB ADDR IN TCT            SMF
VTCTUTL  EQU   20             .USER TIME EXP RTN ADDR IN TCT        SMF
VTCTSTP  EQU   32             .SAVE AREA FOR ADDR STP TERM IN TCT   SMF
TENMVAL  EQU   12             .TOX OFFSET IN 10MIN TQE              SMF
C4       EQU   4                        .ST2 EX EFF CVT OFFSET      SMF
C96      EQU   96                       .IQE ADDR OFFSET IN IRB     SMF
IQEPARAM EQU   4                        .IQE PARAM OFFSET           SMF
IQEIRB   EQU   8                        .IQE IRB  OFFSET            SMF
IQETCB   EQU   12                       .IQE TCB ADDR OFFSET        SMF
RBMCK    EQU   17                  RBOPSW+1 IN IRB               A30129
.SMF0050 ANOP                                                     20021
*
WAIT     EQU   X'01'              .WAIT MASK
TASK     EQU   X'00'              .TASK MASK
REAL     EQU   X'11'              .REAL MASK.
MIDNIGHT EQU   X'04'              .MID. SUPV. TQE MASK.
EXIT     EQU   X'04'              .EXIT MASK
         AIF   (NOT &B(4)).TOD0210                                20071
TQEEXIT  EQU   X'16'               .DISP TO EXIT ADRS             20071
         AIF   (&B(2)).TOD0211                                    20071
TQEVAL   EQU   X'0C'                                              20071
.TOD0211 ANOP                                                     20071
TQEWORK  EQU   X'20'               .DISP TO TQEWORK               20071
TQESYNC  EQU   X'24'               .DISP TO SYNC BIT              20071
SYNC     EQU   X'80'               .SYNC BIT IN TQE               20071
*              WHEN THE SYNC BIT IS SET TO ONE THE TQE IS BEING   20071
*              SYNCHRONIZED.                                      20071
S0       EQU   0                   NUMERIC EQUATE                 20071
S255     EQU   255                 NUMERIC EQUATE                 20071
S4       EQU   4                   NUMERIC EQUATE                 20071
X03      EQU   X'03'               TASK FLAG                      20071
X02      EQU   X'02'               SUPVSR FLAG                    20071
X46      EQU   X'46'               MIDNIGHT ELM FLAG              20071
.TOD0210 ANOP                                                     20071
         AIF   (NOT &B(3)).TSO0070                                20021
EXITWAIT EQU   X'05'              .EXIT AND WAIT MASK.            20021
.TSO0070  ANOP                                                    20021
COMPLETE EQU   X'88'              .COMPLETE MASK
OFFQ     EQU   X'80'              .OFF QUEUE MASK
TCBTME   EQU   120           OFFSET TO TQE IN TCB
TCBOTC   EQU   132                     ORIGINATING TCB             MTS0
TCBLTC   EQU   136                     DAUGHTER TCB                MTS0
TCBPKF   EQU   28                      PROTECTION KEY.             MTS0
         AIF   (NOT &B(3)).TSO0080                                20021
TCBTSFLG EQU   148                     .TIME-SHARING FLAGS        20021
TCBTSTSK EQU   X'80'                   .FLAG INDICATING A TIME-   20021
*                                      .SHARING TASK.             20021
*...THE FOLLOWING DISPLACEMENTS ARE THE TERMINAL JOB ID IN A      20021
*   SWAPPED TIME-SHARING USER'S TIMER QUEUE ELEMENT.              20021
*                                                                 20021
TQETJID1 EQU   24                      .1ST HALF OF TIME-SHRNG    20021
*                                      .USER'S JOB ID.            20021
TQETJID2 EQU   28                      .2ND HALF OF TIME-SHRNG    20021
*                                      .USER'S JOB ID.            20021
.TSO0080  ANOP                                                    20021
         AIF   (NOT &B(2)).SMF0060                                20021
IRBLNGTH EQU   112                     IRB/IQE LENGTH               SMF
*
         EXTRN SYSWSAVE                                             SMF
.SMF0060 ANOP                                                     20021
         ENTRY IEA0TI00
IEA0TI00 EQU   *
TSLIH    LR    XPTR,XR10           .KEEP INPUT REG 10              REFR
         L     XR10,CVTPTR         .GET ADDRESS OF CVT             REFR
         L     XR10,PCPTR(XR10)    .LOAD CLOCK BASE REG            REFR
         ST    XPTR,SAVER10        .SAVE INPUT REG 10              REFR
         STM  R11,R9,TSLIHSAV      SAVE REGS                     A31240
         LA    SAVEARA,TSLIHSAV    SAVE AREA PTR                 A31240
         BALR  XSBASE,0            .SET ADDRESSABILITY             REFR
         AIF   (&B(1)).MVT0050                                    20021
TSLIHLP  DS    0H
         L     XS1,PREFTMRA        .GET VALUE OF                   65MP
         L     XS1,TIMER-IEAQFX00(XS1) .ACTIVE TIMER               65MP
         AGO   .MVT0060                                           20021
.MVT0050 ANOP                                                     20021
TSLIHLP  L     XS1,TIMER
.MVT0060 ANOP                                                     20021
         LTR   XS1,XS1             .TEST TIMER VAL. IF POSITIVE, RETURN
         BC    10,SRETURN          .RETURN TO CALLER               REFR
         AIF   (NOT &B(3)).NOSTOP                              @SA72283
         TM    SW,X'80'            TSIP ENTRY CODE 4 ?         @SA72283
         BZ    CONT                NO,CONTINUE                 @SA72283
         SR    XS1,XS1             SET TIMER                   @SA72283
         ST    XS1,TIMER           TO ZERO                     @SA72283
         B     SRETURN             RETURN                      @SA72283
CONT     EQU   *                                               @SA72283
.NOSTOP  ANOP                                                  @SA72283
         L     XSCMMTBL,CVTPTR    .GET ADDR OF CVT
         L     XR10,PCPTR(XSCMMTBL) .LOAD CLOCK BASE REG           REFR
         L     XSQPTR,TQPTR        .GET PTR TO QUEUE
* DEQUEUE ELEMENT
         LM    XS1,XS2,VELMCHN(XSQPTR)
         ST    XS1,VELMCHN(XS2)
         ST    XS2,VELMCHN+4(XS1)
*
         AIF   (NOT &B(3)).TSO0090                                20021
*...THE FOLLOWING CODE TESTS FOR THE EXPIRATION OF THE TIME-      20021
*   SHARING DRIVER'S TIME-SLICE TIMER QUEUE ELEMENT.              20021
*                                                                 20021
         USING CVTSECT,XSCMMTBL        .DSECT REG FOR CVT         20021
         LA    XTCB,IEATSELM           .IS THIS THE TIME-         20021
         CR    XTCB,XSQPTR              SHARING DRIVER'S TQE?     20021
         BNE   NODRVTQE                .NO. CONTINUE.             20021
         OI    VELMFLG(XSQPTR),OFFQ    .SET TQE OFF QUEUE.        20021
         TM    CVTTSFLG,CVTTSRDY       .TIME-SHARING ACTIVE?      20021
         BZ    TSENTIME                .NO. DO MORE TIMER PROC    20021
         MVC  RTNSAVE(Q4),Q28(SAVEARA) SAVE ORIGINAL RET ADDR     0138
         LA   R1,TSORTN           SET RETRN ADDRS FOR        20021
*                                 TSO PROCSSNG AFTER TIMER        20021
*                                 PROCSSNG COMPLETES.             20021
         MVC  RTNSAVE(Q4),Q28(SAVEARA) SAVE ORIGINAL RET ADDR     0138
         ST   R1,Q28(SAVEARA)      SAVE RTN ADDRESS TO GET BACK  20021
         B     TSENTIME                                           20021
*                                                                 20021
*...THIS CODE INFORMS THE TIME-SHARING DRIVER THAT IT'S TIME-     20021
*   SLICE TIMER QUEUE ELEMENT HAS EXPIRED.                        20021
*                                                                 20021
TSORTN   EQU   *                                                  20021
         L     XR10,CVTPTR        ADDR OF  CVT                    20021
         LR    3,10               RESTORE REGISTER 3.             M0551
         L     XR10,PCPTR(XR10)   ADDR OF TPC                     20021
         STM   R14,R1,REGSAVE2    SAVE REGISTERS               BH M1703
         L     R1,CVTTSCVT             .OBTAIN TIME-SHARING CVT.  20021
         USING TSCVT,R1                                           20021
         L     R15,TSCVTI01            .BRANCH ENTRY ADDRS. OF    20021
*                                       TIME-SHARING DRIVER.      20021
         DROP  R1                                                 20021
         SR    R1,R1                                              20021
         TSEVENT  TSLICE,ENTRY=BRANCH                             20021
         LM    R14,R1,REGSAVE2         .RESTORE REGS.          BH M1703
         L     XSRETRN,RTNSAVE                                    20021
         L     XR10,SAVER10       RESTORE REG  10                 20021
         BR    XSRETRN                 .RETURN TO CALLER.         20021
NODRVTQE EQU   *                                                  20021
.TSO0090 ANOP                                                     20071
         AIF   (NOT &B(4)).TOD0220                                20071
         USING TPC,XR10                                           20071
         LR    SAVTQE,XSQPTR           KEEP ADRS OF TQE           20071
         TM    VELMFLG(XSQPTR),X03     'TASK' TYPE TQE            20071
         BZ    SYNCOVR                 YES, TQE CAN'T BE SYNC'ED  20071
         BO    NOTSUP                  TYPE REAL, BRANCH          20071
         TM    VELMFLG(XSQPTR),X02     IS THIS A SUPVSR ELM       20071
         BZ    NOTSUP                  NO, BRANCH                 20071
         TM    VELMFLG(XSQPTR),X46     IS THIS THE MIDNGT ELM     20071
         BNO   SYNCOVR                 NO, BRANCH                 20071
         L     SAVTQE,S0(XSQPTR)       YES, GET DUMMY AREA ADRS   20071
         B     BYSYNCHK .          BYPASS SYNC BIT CHECKING    BH 51243
*        THE MIDNIGHT TQE TCB FIELD POINTS TO X'20' BEFORE A TWO  20071
*        WORD FIELD CONTAINING THE MNIGHT FIELD AND THE           20071
*        SYNC BIT                                                 20071
*        THUS SAVTQE ALWAYS POINTS TO THETQEWORK (MNIGHT) FIELD   20071
*        AND THE SYNC BIT                                         20071
*        AND XSQPTR ALWAYS POINTS TO THE REAL ELEMENT             20071
NOTSUP   TM    TQESYNC(SAVTQE),SYNC    IS SYNC BIT SET            20071
         BZ    SYNCOVR                 NO - HANDLE AS NORMAL      20071
BYSYNCHK EQU   * .                SYNC BIT CHECKING BYPASSED   BH 51243
         NI    TQESYNC(SAVTQE),S255-SYNC TURN OFF SYNC BIT        20071
         STCK  IEACLOCK                GET TOD CLOCK VALUE        20071
         L     RVAL,TQEWORK(S0,SAVTQE) GET EXPCTD TIME OF EXPRTN  20071
         SL    RVAL,IEACLOCK           IS DIFF GT ZERO            20071
         BC    S4,SYNCOVR              NO - INTRVL IS OVER        20071
         CL    RVAL,SIXTYMIN           IS DIFF GT 1 HR            20071
         BL    NORSYNC                 NO - SET FOR LAST INTRVAL  20071
         MVC   TQEVAL(S4,XSQPTR),ONEHR SET INTRVL TO 1 HR         20071
         OI    TQESYNC(SAVTQE),SYNC    TURN ON SYNC BIT           20071
         B     TSNQUEUE                ESTABLSH NEXT INTRVL       20071
NORSYNC  M     RVAL1,SECTU             GET TU VAL OF INTVL        20071
         ST    RVAL,TQEVAL(XSQPTR)     SET INTVL IN TQE           20071
         B     TSNQUEUE                ESTABLSH NEXT INTRVL       20071
SYNCOVR  EQU   *                                                  20071
.TOD0220 ANOP                                                     20071
         AIF   (NOT &B(3)).TSO0095                                20071
         CLI  0(XSQPTR),X'02'     SYSTEM TQE                      M0138
         BE   NOTSUSER            NOT A TSO TQE                   M0138
         CLI  0(XSQPTR),X'46'     MIDNIGHT TQE                    M0138
         BE   NOTSUSER            NOT A TSO TQE                   M0138
*                                                                 20021
*...THE FOLLOWING CODE TESTS FOR THE PRESENCE OF A SWAPPED        20021
*   TIME-SHARING USER'S TIMER QUEUE ELEMENT.                      20021
*                                                                 20021
         LH    R0,TQETJID1(XSQPTR)     .DOES TQE BELONG TO        20021
         IC    R0,TQETJID2(XSQPTR)     A SWAPPED TIME-SHARING     20021
         LTR   R0,R0                   USER?                      20021
         BZ    NOTSUSER                .NO CONTINUE.              20021
         TM    CVTTSFLG,CVTTSRDY       .TIME-SHARING ACTIVE?      20021
         BZ    TSETOFF                 .NO. SKIP TIMER HANDLING.  20021
*                                                                 20021
*...THE FOLLOWING CODE INFORMS THE TIME-SHARING DRIVER THAT       20021
*   A SWAPPED TIME-SHARING USER'S TQE HAS EXPIRED.                20021
*                                                                 20021
         STM   R14,R1,REGSAVE2         .SAVE REGS.             BH M1703
         LR    XS1,XSBASE         SAVE BASE REG ACROSS TSEVENT    20021
         DROP  XSBASE             DROP EXISTING BASE              20021
         USING  TSLIHLP,XS1       BASE ACROSS TSEVENT             20021
         L     R1,CVTTSCVT             .OBTAIN TIME-SHARING CVT.  20021
         USING TSCVT,R1                                           20021
         L     R15,TSCVTI01            .OBTAIN BRANCH ENTRY TO    20021
*                                       TIME-SHARING DRIVER.      20021
         DROP  R1                                                 20021
         SR    R1,R1                                              20021
         OI    SW,X'80'            SET SW FOR ENTRY CODE 4     @SA72283
         TSEVENT  USERRDY,TJID=(R0),ENTRY=BRANCH                  20021
         NI    SW,X'7F'            RESET SW FOR ENTRY CODE 4   @SA72283
         LM    R14,R1,REGSAVE2         .RESTORE REGS.          BH M1703
         DROP  XS1                RESUME USING ORIGINAL BASE      20021
         USING  TSLIHLP,XSBASE    RESUME ORIGINAL BASE            20021
         B     TSETOFF                 .DELAY WAIT/EXIT PROCESSNG 20021
*                                       UNTIL USER IS SWAPPED IN. 20021
NOTSUSER EQU   *                                                  20021
.TSO0095 ANOP                                                     20071
         L     XTCB,VELMFLG(0,XSQPTR)  .GET TQE TCB ADDR.
         LA    XTCB,0(0,XTCB)          CLEAR HIGH ORDER BYTE
         TM    VELMFLG(XSQPTR),X'03'   .TEST FOR WAIT AND SUPV. INTVL.
         BC    9,TNWT                  .BR IF NOT WAIT OR SUPV. INTVL.
         TM    VELMFLG(XSQPTR),WAIT    .TEST FOR WAIT INTVL.
         BC    12,TSIH                 .BR IF NOT WAIT.
* WAIT INTERVAL EXPIRED
         ST    XSBASE,SAVESIX      SAVE BASE REG. OVER POST.  BH M1701
*        IT SHOULD BE NOTED THAT NO REGISTERS ARE EXPECTED ON BH M1701
*        RETURN FROM POST.  THIS ALLOWS RECURSIONS IN POSTIMG.BH M1701
         ST    XSQPTR,TSDBLDAT+4       .SAVE TQE REG.
         STM   10,12,REGSAVE1      SAVE REGS. MUST BE DIFF.   BH M1701
         SR    0,0
         LA    1,96(0,XSQPTR)          .SET UP ECB ADDR.
         L     XR10,CVTPTR         GET CVT POINTER            BH M1701
         TM    PCPTR(XR10),X'80' .   IS POST CYCLE FLAG ON.   BH M1701
         BO    POSTNOSV .          NO. SO GO TO POST AND HAVE BH M1701
*        SAVE ALL OF THE REGISTERS. WHEN HE FINALLY COMES     BH M1701
*        BACK, REGISTER TWO WILL POINT TO THE CORRECT SAVEAREABH M1701
*        TO RELOAD THE REGISTERS FROM.                        BH M1701
         OI    PCPTR(XR10),X'80' . TURN POST CYCLE BIT ON.    BH M1701
         L     15,AIGC002 . GET POST ADDR.                    BH M1701
* REG 6 MUST BE TRANSPARENT OVER POST.
         BAL   14,4(15)           .TO POST BRANCH ENTRY.
         L     XR10,CVTPTR .      GET CVT PTR                 BH M1701
         L     XR10,PCPTR(XR10) . GET PTR TO PSEUDO CLOCKS    BH M1701
         L     XSBASE,SAVESIX .   RESTORE BASE REG            BH M1701
         B     RESTORER .          NOW GO RESTORE REGS.       BH M1701
POSTNOSV EQU   *                                              BH M1701
         L     15,AIGC002 . GET POST ADDR.                    BH M1701
         BAL   14,8(15) . GO TO POST WHERE HE WON'T SAVE REG  BH M1701
RESTORER EQU   *                                              BH M1701
         L     XR10,CVTPTR         .GET ADDRESS OF CVT             REFR
         NI    PCPTR(XR10),X'7F' . TURN POST BIT OFF.         BH M1701
         L     XR10,PCPTR(XR10)    .LOAD CLOCK BASE REG            REFR
         L     XSQPTR,TSDBLDAT+4
         LM    10,12,REGSAVE1                                 BH M1701
         L     XSBASE,SAVESIX . RESTORE BASE REG.             BH M1701
         B     TSETOFF
SRETURN  EQU   *                                              BH 1701
         L     XR10,CVTPTR . GET CVT ADDRESS                  BH M1701
         TM    PCPTR(XR10),X'80' . POST FLAG ON               BH M1701
         L     XR10,PCPTR(XR10) . RESTORE REG. 10.            BH M1701
         BNO   RELOAD .            NO RESTORE THE REGS NORM   BH M1701
         L     ZERO,POSTZERO .       RESTORE ZERO FOR POST    BH M1701
         L     XRETRN,POSTTWO
         LM    R11,R12,POSTBC .     RESTORE 11 AND 12 FOR POS BH M1701
         B     POSTBACK
RELOAD   EQU   * .                                            BH M1701
         LM    R11,R9,ZERO(SAVEARA) . RESTORE CALLERS REGS    BH M1701
POSTBACK EQU   *
         L     XR10,SAVER10        .RESTORE REG 10                 REFR
         BR    XRETRN              .RETURN TO CALLER               REFR
*
TNWT     DS    0H
         TM    VELMFLG(XSQPTR),EXIT         .TEST FOR EXIT.
         BZ    TSETOFF             .BR IF NO EXIT
         AIF   (NOT &B(3)).TSO0100                                20021
         TM    TCBTSFLG(XTCB),TCBTSTSK  .TIME-SHARING TASK?       20021
         BO    TNJST                   .YES. CONTINUE.            20021
.TSO0100  ANOP                                                    20021
         AIF   (NOT &B(2)).SMF0070                                20021
         B     CHECKSMF                                             SMF
NOUTL    EQU   *                                                    SMF
         L     XR10,PCPTR(XSCMMTBL)  .BASE FOE TPC                  SMF
.SMF0070 ANOP                                                     20021
         USING CVTSECT,XSCMMTBL        DSECT REG FOR CVT.          MTS0
***************         HANDLE EXPIRED WAIT TIME.                  MTS0
         TM    VELMFLG(XSQPTR),X'03'   TEST FOR REAL               MTS0
         BNO   TNJST                   NOT REAL, NOT EXPIRED WAIT  MTS0
         TM    TCBPKF(XTCB),X'F0'      CHECK PROTECT KEY.          MTS0
         BZ    TNJST                   INIT HAS NONZERO KEY.       MTS0
         L     XOTCB,TCBOTC(0,XTCB)    GET MOTHER TCB TO CHECK KEY MTS0
         TM    TCBPKF(XOTCB),X'F0'     AN INITIATOR'S MOTHER TCB   MTS0
         BNZ   TNJST                      ALWAYS HAS A ZERO KEY.   MTS0
         L     XOTCB,TCBOTC(XOTCB) GET MOTHER                  @SA77462
         L     XOTCB,TCBOTC(XOTCB) GET MOTHER                  @SA77462
         LTR   XOTCB,XOTCB         IS IT ZERO?                 @SA77462
         BNZ   TNJST               IF NON ZERO,DO NOT ABEND    @SA77462
         LR    XS2,R0                  SAVE REGISTER ZERO          MTS0
         L     R0,TCBLTC(XTCB)         GET TCB OT TASK TO ABTERM.  MTS0
         LR    XTCB,XSQPTR             SAVE TQE POINTER.           MTS0
         L     XSQPTR,ABENDCD          GET ABEND CODE.             MTS0
         LR    XS1,XSBASE              SAVE REGISTER 15.           MTS0
         L     XSBASE,CVTBTERM         GET ABTERM ADDRESS FROM CVT MTS0
         BALR  R14,XSBASE              ABTERM THE TASK.            MTS0
         LR    XSBASE,XS1              RESTORE REGISTER 15.        MTS0
         L     XR10,CVTPTR         .GET ADDRESS OF CVT             REFR
         L     XR10,PCPTR(XR10)    .LOAD CLOCK BASE REG            REFR
         LR    XSQPTR,XTCB             RESTORE TQE POINTER.        MTS0
         LR    R0,XS2                  RESTORE REGISTER ZERO.      MTS0
         MVC   VELMVAL(4,XSQPTR),VELMSAV(XSQPTR) MOVE TIME FIELD.  MTS0
         NI    VELMFLG(XSQPTR),X'FC'   CHANGE TYPE TO TASK.        MTS0
         OI    VELMFLG(XSQPTR),X'80'   SET OFF-QUEUE BIT.          MTS0
         B     TSENTIME                DON'T SET EXPIRED BIT.      MTS0
TNJST    EQU   *                                                   MTS0
* INITIALIZE ELEMENT AS IRB & IQE FOR STD INTERFACE WITH EXIT EFFECTOR
         MVC   8(4,XSQPTR),RBSZSTAB  INIT SIZE AND STAB IN IRB
         MVC   VEXIT(4,XSQPTR),VTMPXT(XSQPTR)     .MOVE ENTRY POINT
         MVC   VELMFLG+1(3,XSQPTR),TQESAADR+1(XSQPTR) .SET S/A ADDR.
         ST    XTCB,108(XSQPTR)        .INIT TCB ADDRESS IN IRB.
         ST    XSQPTR,104(XSQPTR)  INIT IRB ADDRESS IN IRB
         SR    XS2,XS2             CLEAR IQE PTR IN IRB
         ST    XS2,TCBTME(0,XTCB)      CLEAR TQE FIELD IN TCB
         ST    XS2,24(XSQPTR)          FOR EXIT EFFECTOR
         LR    XS2,XSQPTR          .SAVE XSQPTR OVER EXIT EFFECTOR
         LR    XS1,10              .SAVE REG 10 OVER STAGE 2.
         LR    XPTR,R14            SAVE REG 14 OVER EXIT EFFECTOR 25064
         LA    XSQPTR,96(XSQPTR)   GET ADDR OF IQE
         LCR   XSQPTR,XSQPTR       COMPLEMENT TO INDICATE 4 BYTE LINK
         USING CVTSECT,XSCMMTBL
         L     XSEXTEFT,CVT0EF00  .GET ADDR OF EXIT EFFECTOR.
         DROP  XSCMMTBL
         BALR  14,XSEXTEFT         .GO TO EXIT EFFECTOR
         LR    R14,XPTR            RESTORE REG 14                 25064
         LR    10,XS1              .RESTORE REG 10.
         LR    XSQPTR,XS2               .RESTORE REG
*
TSETOFF  OI    VELMFLG(XSQPTR),COMPLETE     .SET COMPLETE FLAG IN TQE.
TSENTIME L     XSQPTR,TQPTR        .GET PTR TO NEW ELEMENT AT HEAD OF
*                                   QUEUE
* DEVELOP INTERVAL TO PLACE ON TIMER
* = NEW ELEMENT TOX - PREVIOUS SHPC
         L     XS2,VELMVAL(XSQPTR) .GET NEW TOX
         LR    XS1,XS2
         SL    XS1,SHPC            .TOX - SHPC = NEW INTERVAL
         ALR   XS1,XS1             DBLE TO OBTAIN 13 USEC UNITS  A31240
         AIF   (&B(1)).MVT0070                                    20021
         ST    XS2,SHPC                                            65MP
         L     XS2,PREFTMRA        .ADD VALUE OF                   65MP
         AL    XS1,TIMER-IEAQFX00(XS2) .ACTIVE TIMER FOR           65MP
         ST    XS1,TIMER-IEAQFX00(XS2) .NEW VALUE                  65MP
         NOP   *                   .ALLOW FOR TIMER DECR           65MP
         ST    XS1,TIMER-IEAQFX00(XS2) .AND REPEAT STORE           65MP
         AL    XS1,TSLTDIFF        .VALUE FOR BACKUP TIMER         65MP
         X     XS2,PREFIX2         .PREFIX FOR BACKUP TIMER        65MP
         ST    XS1,TIMER-IEAQFX00(XS2)                             65MP
         NOP   *                   .ALLOW FOR TIMER DECR           65MP
         ST    XS1,TIMER-IEAQFX00(XS2) .AND REPEAT STORE           65MP
         AGO   .MVT0075                                           20021
.MVT0070 ANOP                                                     20021
         AL    XS1,TIMER           UPDATE TIMER
         ST    XS1,TIMER           SAVE UPDATED TIMER VALUE
         ST    XS2,SHPC            STORE NEW SHPC VALUE
.MVT0075 ANOP                                                     20021
         BR    XSBASE                  .TO BEGINNING OF TIH.
         AIF   (NOT &B(2)).SMF0080                                20021
* IF SMF IS IN THE SYSTEM AND THE TCT INDICATES THERE IS AN USER    SMF
* TIME LIMIT EXPIRATION ROUTINE, CREATE AN IRB/IQE FOR AN ASYNCH    SMF
* ROUTINE TO GIVE CONTROL TO THE USER ROUTINE, INITIALIZE IRB/IQE,  SMF
* AND SCHEDULE ASYNCH EXIT ROUTINE                                  SMF
CHECKSMF L     XTCTPTR,VTCBTCT(XTCB)    .GET TQE'S TCB'S TCT        SMF
         LTR   XTCTPTR,XTCTPTR          .IS THERE A TCT             SMF
         BZ    NOUTL                    .BR IF NO                   SMF
         L     XTCTUTL,VTCTUTL(XTCTPTR) .PTR TO USER TIME EXP RTN   SMF
         LTR   XTCTUTL,XTCTUTL          .IS THERE ONE               SMF
         BZ    NOUTL                    .BR IF NO                   SMF
         L     XINITTCB,VTCTINIT(XTCTPTR) .TCT PTR TO INIT TCB      SMF
         CR    XTCB,XINITTCB            .Q. INITIATOR'S TQE         SMF
         L     XR10,PCPTR(XSCMMTBL)                            @AS75539
         BNE   TNJST                                           @AS75539
         LA    XSYSTRTN,IEATLEXT        .ADDR OF ASYNCH ROUTINE     SMF
         LR    XS11,XSQPTR              .SAVE TQE PTR               SMF
         L     R0,IRBCORE               .IRB SUBPOOL/SIZE           SMF
         L     XTCTPTR,VTCTINIT(XTCTPTR) .GET INIT TCB ADDR         SMF
         SR    XS1,XS1                  .ZERO REG 6                 SMF
         ST    XS1,TCBTME(XTCTPTR)      .ZERO INIT TCB TQE PTR      SMF
         LR    XTCB,XTCTPTR             .INIT TCB ADDR IN R4        SMF
         L     GMBRNCH,200(XSCMMTBL)    .ADDR OF SCVT               SMF
         L     GMBRNCH,28(GMBRNCH)      .GETMAIN BRANCH EP IN R5    SMF
         LCR   XSQPTR,XSQPTR            .INDICATE GETMAIN           SMF
         LR    XS1,XSBASE               .SAVE REGISTER 15           SMF
         BALR  R14,GMBRNCH              .BRANCH TO GETMAIN          SMF
         LR    XSBASE,XS1               .RESTORE REGISTER 15        SMF
         XC    0(IRBLNGTH,IRBADDR),0(IRBADDR) .CLEAR IRB/IQE        SMF
         ST    XSYSTRTN,ENTRY(IRBADDR) .PUT ASNCH RTN ADR IN IRB A34673
TWTHREE  EQU   33 .                                              A34673
IRBREG1  EQU   1 .                                               A34673
REGINIT  EQU   9 .                                               A34673
TWLV     EQU   12 .                                              A34673
         TM    TWTHREE(REGINIT),X'0C' .INIT TCB STP MST COMP  BH A53019
         BZ    SETIRB .                 NO. CONTINUE  NORMAL  BH A53019
         BO    SETBOTH .      STP AND SYS MUST COMP BOTH ON   BH A53019
         TM    TWTHREE(REGINIT),X'08' . IS TCB IN SYS. MUST COMP A34673
         BNO   STPMCOMP .              YES.                   BH A53019
*  AT THIS POINT THE SYS. MUST COMPLETE BIT IS ON                A34673
         OI    TWLV(IRBREG1),X'80' .    SIGNAL SYS.M.C. IN IRB   A34673
         NI    TWTHREE(REGINIT),X'F7' . MARK THE INIT DISP       A34673
         B     SETIRB .                                          A34673
SETBOTH  EQU   * .                                            BH A53019
         OI    TWLV(IRBREG1),X'C0' . STP AND SYS MUST IN IRB  BH A53019
         NI   TWTHREE(REGINIT),X'F3' . MARK INIT DISP         BH A53019
         B     SETIRB .                                       BH A53019
STPMCOMP EQU   * .                                               A34673
         OI    TWLV(IRBREG1),X'40' .    SIGNAL STP.M.C. IN IRB   A34673
         NI    TWTHREE(REGINIT),X'FB' . MARK THE INIT TCB DISP.  A34673
SETIRB   EQU   * .                                               A34673
         MVC   STABSIZE(4,IRBADDR),RBSZSTAB .INIT IRB STAB/SIZE     SMF
         MVI   RBMCK(IRBADDR),X'04' SET MACHINE CHECK BIT        A30129
         LA    IQEADDR,C96(IRBADDR)     .GET IQE ADDR               SMF
         ST    XS11,IQEPARAM(IQEADDR)   .PUT TQE ADDR IN IQE        SMF
         ST    IRBADDR,IQEIRB(IQEADDR)  .PUT IRB ADDR IN IQE        SMF
         ST    XTCTPTR,IQETCB(IQEADDR)  .PUT TCB ADDR IN IQE        SMF
         LA    ADDRIQE,C96(ADDRIQE)     .PUT ADDR OF IQE IN R1      SMF
         LCR   ADDRIQE,ADDRIQE          .COMPLEMENT TO INDICATE IQE SMF
         L     XSEXTEFT,C4(XSCMMTBL)    .ADDR OF ST2 EX EFF         SMF
         BALR  R14,XSEXTEFT             .GO TO EXIT EFFECTOR        SMF
         LR    XSQPTR,XS11              .RESTORE R1                 SMF
         OI    VELMFLG(XSQPTR),X'80'    .SET OFF-QUEUE BIT          SMF
         L     XR10,PCPTR(XSCMMTBL)     .BASE FOR TPC               SMF
         B     TSENTIME                 .DON'T SET EXPIRED BIT      SMF
.SMF0080 ANOP                                                     20021
         EJECT
* SUPERVISOR INTERVAL ROUTINE
TSIH     EQU   *
         AIF   (NOT &B(2)).SMF0090                                20021
         LA    TENMREG,TENMELM          .ADDR OF 10MIN TQE          SMF
         CR    XSQPTR,TENMREG           .Q. 10MIN EXPIRATION        SMF
         BE    TENMEXP                  .BR IF YES                  SMF
.SMF0090 ANOP                                                     20021
         AIF   (NOT &B(4)).TOD0240                                20071
         LA    RETREG,RESET       .SET UP FOR UPDATE              20071
.TOD0240 ANOP                                                     20071
         TM    VELMFLG(XSQPTR),MIDNIGHT .TEST FOR MID. SUPV. TQE
         BO    TDARKNES
         L     X6HR,TS6HRS         .SET UP REG = 6 HRS FOR LATER USE
         LR    XPTR,XSQPTR              .INITIALIZE REG WITH TQE ADDR.
TSUBTLP  L     XPTR,VELMCHN(XPTR)       .REF NEXT TQE.
         TM    VELMVAL(XPTR),X'FF'     .TEST FOR END OF QUEUE.
         BO    TQEND
         L     XS2,VELMVAL(XPTR)        .SUBT 6 HRS FROM INTERVAL.
         SLR   XS2,X6HR
         ST    XS2,VELMVAL(XPTR)        .STORE NEW TOX IN TQE.
         B     TSUBTLP
*
         AIF   (NOT &B(4)).TOD0250                                20071
TQEND    XC    SHPC(S4),SHPC      .ZERO 6HR P.C.                  20071
         ST    X6HR,VELMVAL(XSQPTR)  .ESTBLSH 6HR INTVL           20071
         AGO   .TOD0260                                           20071
.TOD0250 ANOP                                                     20071
TQEND    L     XS2,T4PC
         LTR   XS2,XS2                  .TEST T4PC FOR 18 HRS
         BC    10,*+10                  .BR IF NOT 18 HRS
         SR    XS2,XS2                  .RESET TO STORE ZERO
         B     *+6
         ALR   XS2,X6HR                 .ADD 6 HRS TO T4PC
         ST    XS2,T4PC                 .STORE NEW VALUE INTO T4PC
         SR    XS2,XS2             .SET SHPC TO ZERO
         ST    XS2,SHPC
         MVC   VELMVAL(4,XSQPTR),TS6HRS     .SET ABSOLUTE 6 HR INTERVAL
.TOD0260 ANOP                                                     20071
*
TSNQUEUE LR    XSVRTRN,XSRETRN     .SAVE RETURN REG
         OI    VELMFLG(XSQPTR),OFFQ         .FLAG TQE OFF QUEUE.
         BAL   XSRETRN,IEAQTE00         .TO QUEUING RTN.
         LR    XSRETRN,XSVRTRN     .RESTORE RETRN REG
         B     TSENTIME
*
         AIF   (NOT &B(2)).SMF0100                                20021
*                                                                   SMF
* PUT SYSTEM 10 MIN WAIT TIME IN SMCA FOR STEP TERMINATION          SMF
*                                                                   SMF
TENMEXP  STM   8,11,REGSAV              .SAVE REGISTERS             SMF
         L     XSMCA,CVTSMCA1(XSCMMTBL) .GET ADDR OF SMCA           SMF
         L     XWTSAVE,WAITSAVE         .ADDR OF SYS WAIT TIME SAVE SMF
         L     XWTSAVE,4(XWTSAVE)       .GET ACC SYS WAIT VALUE     SMF
         SRL   XWTSAVE,1                .CONVERT TO 26 USEC UNITS   SMF
         LM    XSA,XSB,SMCAWSAV(XSMCA)  .SYS WAIT OFLW/ACC FIELDS   SMF
         ALR   XSB,XWTSAVE              .COMPUTE SYS WAIT TIME      SMF
         BC    12,NOCARRY               .BR IF NO OVERFLOW          SMF
         LA    XSA,1(XSA)               .ADD 1 TO OVERFLOW FIELD    SMF
NOCARRY  STM   XSA,XSB,SMCAWSAV(XSMCA)  .STORE SYS WAIT TIME FLDS   SMF
         L     XWTSAVE,WAITSAVE         .ADDR OF SYS WAIT TIME SAVE SMF
         XC    4(4,XWTSAVE),4(XWTSAVE)  .CLEAR ACC SYS WAIT FIELD   SMF
         MVC   TENMVAL(4,XSQPTR),TQE10MIN .PUT 10 MINS IN TQE       SMF
         L     XR10,PCPTR(XSCMMTBL)     .BASE FOR TPC               SMF
         LM    8,11,REGSAV              .RESTORE REGISTERS          SMF
         B     TSNQUEUE                 .BR TO QUEUE UP 10 MIN TQE  SMF
.SMF0100 ANOP                                                     20021
*
* MIDNIGHT INT HANDLER
         USING CVTSECT,XSCMMTBL
         AIF   (NOT &B(4)).TOD0270                                20071
         ENTRY IEA0TIDT                                           20071
TDARKNES BALR  R14,S0              .ADDRESSABILITY                20071
         USING *,R14                                              20071
IEA0TIDT EQU   *                  .ENTRY FROM TIME RTN            20071
*  ON ENTRY TO THE CVTDATE UPDATE ROUTINE THE FOLLOWING REGISTER  20071
*  INPUT IS EXPECTED                                              20071
*    REGISTER  10  POINTS TO PSEUDO CLOCK AREA                    20071
*    REGISTER   3  POINTS TO THE CVT   20071
*    REGISTER   4  CONTAINS THE RETURN ADRS OF THE CALLER         20071
*    REGISTER   1  POINTS TO THE MIDNIGHT TQE                     20071
*    REGISTER  14  CONTAINS THE ADDRESS OF IEA0TIDT               20071
         AGO   .TOD0280                                           20071
.TOD0270 ANOP                                                     20071
TDARKNES EQU   *                                                  20021
.TOD0280 ANOP                                                     20071
         AIF   (NOT &B(3)).TSO0120                                20021
*                                                                 20021
*...THE FOLLOWING CODE INFORMS THE TIME-SHARING DRIVER THAT       20021
*   MIDNIGHT HAS OCCURRED.  THE DRIVER USES THIS INFORMATION      20021
*   TO UPDATE THE TIME VALUES IN ITS INTERNAL USER QUEUES.        20021
         TM    CVTTSFLG,CVTTSRDY       .TIME-SHARING ACTIVE?      20021
         BZ    NOTSDARK                .NO.CONTINUE               20021
         STM   R14,R1,REGSAVE2        SAVE REGISTERS.          BH M1703
         L     R1,TS24HRS         OBTAIN 24-HOUR VALUE IN         20021
*                                 26 MICRO SECOND UNITS           20021
         SRA   R1,1               CONVERT 24-HOUR VALUE TO        20021
*                                 52 MICRO-SECOND UNITS           20021
         L     R14,CVTTSCVT            OBTAIN TIME-SHARING CVT.   20071
         USING TSCVT,R14                                          20021
         L     R15,TSCVTI01       OBTAIN BRANCH ADDRESS           20021
*                                 TO TIME SHARING DRIVER          20021
         AIF   (NOT &B(4)).TOD0320                                20071
         USING IEA0TIDT,R14                                       20071
         AGO   .TOD0330                                           20071
.TOD0320 ANOP                                                     20071
         DROP  R14                                                20021
.TOD0330 ANOP                                                     20071
         TSEVENT  CHGTOD,ENTRY=BRANCH                             20021
         LM    R14,R1,REGSAVE2         RESTORE REGISTERS.      BH M1703
NOTSDARK EQU   *                                                  20021
*...CONTINUE TIMER PROCESSING OF MIDNIGHT TIMER QUEUE ELEM.       20021
.TSO0120  ANOP                                                    20021
         MVC   TSDBLDAT+4(4),CVTDATE    MOVE DATE TO WORK AREA
         CVB   XYEAR-1,TSDBLDAT         GET BINARY VALUE OF DATE
         SRDL  XYEAR-1,32               PROPAGATE SIGN THRU EVEN REG
         D     XYEAR-1,TONETHOU         SEPARATE YR AND DAY IN 7 & 6
         L     XMASK,TMASK              ARE LAST 3 BITS OF YEAR = ZERO
         NR    XMASK,XYEAR              IF SO THIS IS A LEAP YEAR
         BC    8,TLEAPYR
         C     XDAY,T365                Q. YEAR'S END
TDAYCOMP BL    TADDAY                     NO ADD A DAY TO DAY COUNT
         LA    XYEAR,1(XYEAR)             YES,INCREMENT YEAR
         LA    XDAY,1                         SET DAY TO ONE
TDAYRAD  LR    XMASK,XDAY               SAVE DAY IN SPARE REGISTER
         M     XYEAR-1,TONETHOU         RECREATE YEAR
         AR    XYEAR,XMASK              AND ADD TO YEAR,DAYS
         CVD   XYEAR,TSDBLDAT
         OI    TSDBLDAT+7,X'0F'         INSURE THAT SIGN IS F
         MVC   CVTDATE(4),TSDBLDAT+4    MOVE NEW DATE TO CVT
         AIF   (NOT &B(4)).TOD0290                                20071
         OI    MNIGHT+S4,SYNC          TURN ON SYNC BIT           20071
         L     RWK,MNIGHT              ADD 1 DAY TO               20071
         AL    RWK,ONEDAY              * MNIGHT FIELD             20071
         ST    RWK,MNIGHT              * OF THE MIDELM            20071
         BR    RETREG                  RETURN TO CALLER           20071
RESET    EQU   *                    ONLY UPDATE TQEVAL IF ENTERED 20071
*        BY THE TSLIH                                             20071
         MVC   VELMVAL(S4,XSQPTR),ONEHR   SET INTVL TO 1 HR       20071
         B     TSNQUEUE                RE-ESTBLSH INTVL           20071
         AGO   .TOD0300                                           20071
.TOD0290 ANOP                                                     20071
         MVC   VELMVAL(4,XSQPTR),TS24HRS RE-ESTABLISH THE MIDNIGHT INTV
         B     TSNQUEUE
.TOD0300 ANOP                                                     20071
TLEAPYR  C     XDAY,T366
         B     TDAYCOMP
TADDAY   LA    XDAY,1(XDAY)             INCREMENT DAY
         B     TDAYRAD
         AIF   (NOT &B(4)).TOD0310                                20071
         DROP  14                                                 20071
.TOD0310 ANOP                                                     20071
*
         AIF   (NOT &B(3)).NOSW                                @SA72283
SW       DC    XL1'00'             FLAG FOR TSIP ENTRY CODE 4  @SA72283
.NOSW    ANOP                                                  @SA72283
*CONSTANTS
         CNOP  0,4                                                 MTS0
ABENDCD  DC    X'80522000'             DUMP                        MTS0
         EXTRN IGC002
AIGC002  DC    A(IGC002+2)        .POST ADDRESSABILITY.
         AIF   (NOT &B(2)).SMF0110                                20021
TQE10MIN DC    X'015F9000'    10 MIN VALUE                       A24887
IRBCORE  DC    X'FD000070'    .IRB/IQE SUBPOOL AND SIZE             SMF
WAITSAVE DC    A(SYSWSAVE)    .SYS WAIT SAVE AREA                   SMF
.SMF0110 ANOP                                                     20021
TS6HRS   DC    X'31704000'         .6 HR TU VALUE                A24887
TS24HRS  DC    X'C5C10000'         .24 HR TU VALUE               A24887
         AIF   (&B(1)).MVT0080                                    20021
TSLTDIFF DC    X'80000000'         LOGICAL DIFF BETW TIMERS        65MP
.MVT0080 ANOP                                                     20021
RBSZSTAB DC    X'000E'            .RB SIZE
         DC    X'400E'            IQE AND DYNAMIC FLAGS SET IN IRB
TONETHOU DC    F'1000'
TMASK    DC    F'3'
T365     DC    F'365'
T366     DC    F'366'
         AIF   (NOT &B(4)).TOD0340                                20071
SECTU    DC    F'40256'                # TU IN 1.04 SEC           20071
ONEHR    DC    F'138240000'            1 HR IN TU                 20071
SIXTYMIN DC    F'3433'                 1 HR IN 1.04 SEC UNITS     20071
ONEDAY   DC    F'82397'                ONE DAY IN 1.04 SEC UNITS  20071
.TOD0340 ANOP                                                     20071
         AIF   (&B(4)).TOD0500                                    20071
         AIF   (&B(1) AND &B(2) AND &B(3)).TIM019                 20021
         AIF   (&B(1) AND &B(2)).TIM020                           20021
         AIF   (&B(1) AND &B(3)).TIM021                           20021
         AIF   (&B(1)).TIM022                                     20021
         AIF   (&B(2) AND &B(3)).MPTSO7                           21008
         AIF   (&B(2)).TIM023                                     20021
         AIF   (&B(3)).MPTSO8                                     21008
         TITLE 'IEAQTI00 TIMER ENQUE RT FOR MP65'                 20021
         AGO   .TIM024                                            20021
.TIM019  TITLE 'IEAQTI00 TIMER ENQUE RT FOR MVT  WITH TSO- SMF'   20021
         AGO   .TIM024                                            20021
.TIM020  TITLE 'IEAQTI00 TIMER ENQUE ROUTINE FOR MVT WITH SMF'    20021
         AGO   .TIM024                                            20021
.TIM021  TITLE 'IEAQTI00 TIMER ENQUE ROUTINE FOR MVT WITH TSO'    20021
         AGO   .TIM024                                            20021
.TIM022  TITLE 'IEAQTI00 TIMER ENQUE ROUTINE FOR MVT'             20021
         AGO   .TIM024                                            20021
.MPTSO7  TITLE 'IEAQTI00 TIMER ENQUE RT FOR MP65 WITH TSO -SMF'   21008
         AGO   .TIM024                                            21008
.TIM023  TITLE 'IEAQTI00 TIMER ENQUE ROUTINE FOR MP65 WITH SMF'   20021
         AGO   .TIM024                                            21008
.MPTSO8  TITLE 'IEAQTI00 TIMER ENQUE ROUTINE FOR MP65 WITH TSO'   21008
         AGO    .TIM024                                           20071
.TOD0500 AIF    (&B(1) AND &B(2) AND &B(3)).TOD0510               20071
         AIF    (&B(1) AND &B(2)).TOD0520                         20071
         AIF    (&B(1) AND &B(3)).TOD0530                         20071
         TITLE 'IEAQTI00 TIMER ENQ RTN - MVT/TOD'                 20071
         AGO    .TIM024                                           20071
.TOD0510 TITLE 'IEAQTI00 TIMER ENQ RTN - MVT/SMF/TSO/TOD'         20071
         AGO    .TIM024                                           20071
.TOD0520 TITLE 'IEAQTI00 TIMER ENQ RTN - MVT/SMF/TOD'             20071
         AGO    .TIM024                                           20071
.TOD0530 TITLE 'IEAQTI00 TIMER ENQ RTN - MVT/TSO/TOD'             20071
.TIM024  ANOP                                                     20071
* ROUTINE NAME  .IEAQTE00- TIMER ENQUEUE ROUTINE.
         SPACE
* FUNCTION     .USING ADDRESS OF TQE IN REG 1, THE ROUTINE CONVERTS
*               THE ABSOLUTE TIME VALUE IN THE TQE TO A TOX BASED UPON
*               THE 6 HR TOD. THE RTN. THEN ENQUEUES THE TQE ON THE
*               TIMER QUEUE USING THE TOX AS A SEARCH ARGUMENT. IF THE
*               NEW TQE IS PLACED 1ST IN THE QUEUE, THE TIMER AND SHPC
*               ARE ADJUSTED TO THE NEW TOP TQE VALUES.
         SPACE
* ENTRY POINT  .IEAQTE00- TIMER ENQUEUE
* NAMES
         SPACE
* CONTAINED IN .IEAQTI00
* MODULE
         SPACE
* ATTRIBUTES   .REENTRANT,SUPERVISOR STATE,DISABLED FOR SYSTEM
*               INTERRUPTS,RESIDENT.
         SPACE
* APPLICABILITY .ALL SYSTEMS HAVING OPTION 6B
         SPACE
* EXTERNAL     .NONE
* REFERENCES
         SPACE
* SVC USAGE    .NONE
         SPACE
* INPUT        .ENTRY IS MADE ONLY FROM SUPERVISORY CODE.
*                REG 1 MUST CONTAIN THE ADDRESS OF THE TQE TO BE
*                ENQUEUED
         SPACE
* OUTPUT       .NONE
         SPACE
* ENTRY POINTS .IEAQTE00- ONLY ENTRY TO CODE- ADDR IS FOUND IN CVT.
*               .REG 1 MUST CONTAIN ADDRESS OF TQE TO BE ENQUEUED.
*                REG 2 CONTAINS RETURN ADDRESS OF CALLER.
*                OTHER REGISTERS NOT SIGNIFCANT.
*               .PSW IS IN SUPERVISOR STATE AND DISABLED FOR SYSTEM
*                INTERRUPTS.
         SPACE
* EXIT POINTS  .A SINGLE BRANCH TO THE ADDRESS IN REG 2 RETURNS TO THE
*               CALLER. ALL REGISTERS EXCEPT 4,5,6, AND 13 ARE
*               TRANSPARENT OVER THE RTN. REGS 10,11,12 ARE INSIGNIF.
*              .THE PSW IS IN SUPERVISOR STATE AND DISABLED FOR SYSTEM
*               INTERRUPTS.
         SPACE
* ERROR EXIT   .NONE
* POINTS
         SPACE
* TABLES AND   .TQE'S- TQEFLGS(TEST, SETS),TQEFLNK(SETS),TQEBLNK(SETS),
* CONTROL BLKS         TQEVAL(SETS)
* REFERENCED   .SHPC(SETS)
         SPACE
* LIST ORIGINS,  .NONE
* TABLES,CONTROL
* BLOCKS INCLUDED
         SPACE
* RESTRICTIONS .NONE
         SPACE
* NOTES        .NONE
         EJECT
* EQUATES *
XNELM    EQU   1
XNRETRN  EQU   2
XN1      EQU   4
XN2      EQU   5
XN3      EQU   6
XNBASE   EQU   13
*
*
         ENTRY IEAQTE00
*
IEAQTE00 BALR  XNBASE,0
         USING *,XNBASE
         TM    VELMFLG(XNELM),COMPLETE .IS TQE COMPLETE OR ON QUEUE.
         BCR   9,XNRETRN               .BR IF YES.
         L     XR10,CVTPTR         .GET ADDRESS OF CVT             REFR
         L     XR10,PCPTR(XR10)    .LOAD CLOCK BASE REG            REFR
* DETERMINE IF INTERVAL IS SMALLER THEN  CURRENT INTERVAL IN TIMER
         L     XN1,VELMVAL(XNELM)       .GET INT VAL
         LR    XN3,XN1                  .SAVE INT
         AIF   (&B(1)).MVT0090                                    20021
         L     XN2,PREFTMRA        .GET VALUE OF                   65MP
         L     XN2,TIMER-IEAQFX00(XN2) .ACTIVE TIMER               65MP
         AGO   .MVT0100                                           20021
.MVT0090 ANOP                                                     20021
         L     XN2,TIMER                .GET TIMER VALUE
.MVT0100 ANOP                                                     20021
         SRA   XN2,1                    .DEV 26 USEC UNITS
         SLR   XN1,XN2             .INTERVAL - TIMER
         BC    4,TNQLOWVL    .BR IF INTERVAL IS LESS THAN TIMER VALUE.
TNQTOX   AL    XN1,SHPC       .NEW TOX = SHPC + (INT - TIMER)
         ST    XN1,VELMVAL(XNELM)  .STORE TOX IN ELM
         LA    XN2,TQPTR-4         .SET UP TQPTR-4 ADDR FOR INIT LOAD.
TNQSRLP  L     XN2,VELMCHN(XN2)    .SEARCH FOR INSERTION POINT
         CL    XN1,VELMVAL(XN2)    .COMPARE TOX'S. INSERT BEFORE AN
         BH    TNQSRLP              EQUAL
         L     XN3,VELMCHN+4(XN2)  .PLACE ELEMENT IN QUEUE
         STM   XN2,XN3,VELMCHN(XNELM)
         ST    XNELM,VELMCHN+4(XN2)
         ST    XNELM,VELMCHN(XN3)
         NI    VELMFLG(XNELM),255-OFFQ .FLAG TQE ON QUEUE.
         BR    XNRETRN                  .RETURN
*
TNQLOWVL LTR   XN2,XN2        .TEST FOR NEG TIMER
         BC    4,TNQTOX       .IF NEG, HANDLE AS THOUGH NEW INTERVAL IS
*                              LARGER
         AL    XN1,SHPC       .NEW TOX = SHPC + (INT - TIMER)
         ST    XN1,SHPC       .STORE NEW TOX IN SHPC
         ALR   XN3,XN3
         AIF   (&B(1)).MVT0110                                    20021
         L     XN2,PREFTMRA        .PREFIX FOR ACTIVE TIMER        65MP
         ST    XN3,TIMER-IEAQFX00(XN2) .VALUE FOR ACTIVE TIMER     65MP
         NOP   *                   .ALLOW FOR TOMER DECR           65MP
         ST    XN3,TIMER-IEAQFX00(XN2) .AND REPEAT STORE           65MP
         AL    XN3,TNQTDIFF        .VALUE FOR BACKUP TIMER         65MP
         X     XN2,PREFIX2         .PREFIX FOR BACKUP TIMER        65MP
         ST    XN3,TIMER-IEAQFX00(XN2)                             65MP
         NOP   *                   .ALLOW FOR TIMER DECR           65MP
         ST    XN3,TIMER-IEAQFX00(XN2) .AND REPEAT STORE           65MP
         AGO   .MVT0120
.MVT0110 ANOP                                                     20021
         ST    XN3,TIMER      .PLACE NEW INTERVAL IN TIMER
.MVT0120 ANOP                                                     20021
         B     TNQTOX+4
*
         AIF   (&B(1)).MVT0130                                    20021
         DS    0F                  .FOR FULL WORD BOUNDARY         65MP
TNQTDIFF DC    X'80000000'         .LOGDIFF BET TIMERS             65MP
.MVT0130 ANOP                                                     20021
         AIF   (NOT &B(2)).SMF0120                                20021
* * * * * * * * * * *
         EJECT
* ROUTINE NAME .IEATLEXT, SMF TIME LIMIT EXPIRATION HANDLER
         SPACE
* FUNCTION     .AN ASYNCHRONOUS ROUTINE WHICH RECEIVES CONTROL AFTER
*              .A 'WAIT' OR JOB/STEP TIME EXPIRATION AND SMF IS IN THE
*              .SYSTEM. UPON DETERMINING WHICH TIME EXPIRATION OCCURRED
*              .PASSES A CODE IN R15 TO THE USER TIME LIMIT EXPIRATION
*              .ROUTINE (IEFUTL) INDICATING THE TYPE OF EXPIRATION AND
*              .ALSO PASSES IN R1 A POINTER TO A USER DATA FIELD AND IN
*              .R13 A 72 BYTE SAVE AREA ADDRESS. DEPENDING ON THE RET.
*              .URN CODE FROM THE USER ROUTINE, VARIOUS ACTIONS ARE
*              .TAKEN. IF 'WAIT' TIME EXPIRED AND NO USER EXTENSION IS
*              .GRANTED, THE P/P IS ABENDED WITH A 522. IF JOB/STEP
*              .TIME EXPIRED AND NO USER EXTENSION GRANTED, THE TQE IS
*              .CONVERTED TO AN IRB/IQE AND THE IQE IS SCHEDULED. THIS
*              .LEADS TO JOB/STEP TERMINATION. IF 'WAIT' OR JOB/STEP
*              .TIME EXTENSION IS GRANTED, THE EXTENSION VALUE IS
*              .PUT IN THE TQE WHICH IS THEN REQUEUED.
         SPACE
* ENTRY POINT  .IEATLEXT
         SPACE
* CONTAINED IN .IEAQTI00
         SPACE
* ATTRIBUTES   .REENTRANT,SUPERVISOR STATE,DISABLED FOR SYSTEM   A30129
*              .INTERRUPTS,RESIDENT
         SPACE
* APPLICABILITY .ALL SYSTEMS HAVING SMF
         SPACE
* EXTERNAL     .IEATCBP - POINTER TO 'OLD' AND 'CURRENT' TCB
* REFERENCES   .IEA0EF00 - STAGE 2 EXIT EFFECTOR
         SPACE
* SVC USAGE    .3 - EXIT
*              .10 - GETMAIN/FREEMAIN
               SPACE
* ENTRY POINT  .IEATLEXT - ONLY ENTRY TO CODE
*              .REGISTERS NOT SIGNIFICANT
*              .PSW IN SUPERVISOR STATE
               SPACE
* EXIT POINTS  .A BRANCH IN REGISTER 15 TO THE USER TIME LIMIT EXPIRA.
*              .TION ROUTINE
*              .  R0 - EXPIRATION CODE
*              .       0 - JOB TIME EXPIRATION
*              .       4 - STEP TIME EXPIRATION
*              .       8 - 'WAIT' TIME EXPIRATION
*              .  R1  - ADDR OF USER DATA FIELD
*              .  R13 - ADDR OF 72 BYTE SAVE AREA
*              .  R14 - RETURN REGISTER
*              .REGS 2-12,15 ARE INSIGNIFICANT
*              .PSW IS IN SUPERVISOR STATE
         SPACE
* ERROR EXIT   .TO ABTERM TO CAUSE PROBLEM PROGRAM TO BE TERMINATED
* POINTS       .REGISTER 1 CONTAINS THE ERROR CODE
*              .THE ERROR CODE IS:
*                    0522 - WAIT TIME EXPIRATION
*              .REMAINING REGISTERS CONTAIN MEANINGLESS INFORMATION
         SPACE
* TABLES AND   .TQE - TIMER QUEUE ELEMENT
* CONTROL BLKS .TCT - TIMING CONTROL TABLE
* REFERENCED   .CVT - COMMUNICATION VECTOR TABEL
*              .IRB - INTERRUPTION REQUEST BLOCK
*              .IQE - INTERRUPTION QUEUE ELEMENT
         SPACE
* RESTRICTIONS .NONE
         SPACE
* NOTES        .NONE
         EJECT
* MASKS
         SPACE
JOBEXP   EQU   X'80'          .TCT JOB TIME EXPIRATION MASK         SMF
OUTLIMAX EQU   X'40'                    .MASK FOR OUT LIMIT       19028
WAITEXP  EQU   X'03'          .WAIT TIME EXPIRATION MASK            SMF
TQECOMP  EQU   X'F7'          .TQE COMPLETE MASK                    SMF
         SPACE
* REGISTER EQUATES
         SPACE
CVTBASE EQU   10             .CVT BASE REGISTER                     SMF
XTBASE   EQU   12             .BASE REGISTER                        SMF
EXPCODE  EQU   0              .EXPIRATION CODE                      SMF
SAVEREG  EQU   0              .S/A SUBPOOL AND LENGTH               SMF
TQEPTR   EQU   1                                                    SMF
IQE      EQU   1                        .IQE ADDR                   SMF
TIMEEXT  EQU   1              .USER TIME EXTENSION                  SMF
USERDATA EQU   1              .TCT USER FIELD                       SMF
TQEADDR  EQU   1              .TQE ADDR                             SMF
TIMERRET EQU   2                                                    SMF
CURRENT  EQU   2              .'CURRENT' TCB                        SMF
CURRIRB  EQU   3              .IRB FOR CURRENT TASK                 SMF
TCBTCT   EQU   4              .TCT ADDR                             SMF
SAVECODE EQU   5              .TEMP SAVE REG FOR EXP CODE           SMF
LINKREG  EQU   7              .LINK REGISTER                        SMF
TIMEOFLW EQU   8              .TCT STEP TIME OVERFLOW               SMF
TIMEACC  EQU   9              .TCT STEP TIME ACCUMULATION           SMF
TCBADDR  EQU   5              .'CURRENT' TCB ADDR                   SMF
USERSAVE EQU   13             .USER SAVE AREA ADDR                  SMF
ASYNRET  EQU   14             .RETURN ADDRESS                       SMF
USERCODE EQU   15             .USER RETURN CODE                     SMF
USERADDR EQU   15             .USER ROUTINE ADDR                    SMF
STAGETWO EQU   15             .STAGE 2 EXIT EFF ADDR                SMF
XDCBREG  EQU   10                       .REAL PP DCB POINTER      19028
XRWRK    EQU   11                       .WORK REGISTER            19028
XRWRK2   EQU   13                       .WORK REGISTER            19028
         SPACE
* TCT OFFSETS
         SPACE
TCTEXP   EQU   3              .TCT JOB/STEP TIME INDICATOR          SMF
TCTUTL   EQU   20             .TCT ADDR OF USER RTN                 SMF
TCTUDATA EQU   24             .TCT USER DATA FIELD                  SMF
TCTSTP   EQU   32             .TCT STEP TERM ADDR SAVE AREA         SMF
TCTSTOF  EQU   36             .TCT STEP TIME OV'FLOW FIELD          SMF
JMRPTR   EQU   28                       .JMR OFFSET IN TCT        19028
IEFUSOAD EQU   32                       .IEFUSO ADDR OFFSET IN TCT19028
LRECLPTR EQU   82                       .LRECL OFFSET IN DCB      19028
BLKSIPTR EQU   62                       .BLKSI OFFSET IN DCB      19028
         SPACE
* TQE OFFSETS
         SPACE
TQEFLGS  EQU   0              .TQE FLAGS                            SMF
TQEVAL   EQU   12             .TQE TOX OFFSET                       SMF
TENTRY   EQU   28                       .ENTRY POINT IN TQE         SMF
IQEDCB   EQU   16                       .4 BYTE DCB ADDR          19028
IQEOUTLM EQU   20                       .4 BYTE OUTLIM ADDR       19028
IQEFLG   EQU   0                        .IQE FLAG                19028
         SPACE
* TCB OFFSETS                                                       SMF
         SPACE
TCBFLGS  EQU   29             .TCB FLAGS                            SMF
TCBRBP   EQU   0              .TCB RB POINTER                       SMF
TCTPTR   EQU   164            .TCB TCT POINTER                      SMF
         SPACE
* IRB/IQE OFFSETS                                                   SMF
         SPACE
STABSIZE EQU   8                        .SIZE(STAB OFFSET IN IRB    SMF
IRBIQE   EQU   96                       .IQE OFFSET IN IRB          SMF
ENTRY    EQU   12                       .ENTRY POINT IN IRD         SMF
IQETQE   EQU   4                        .TQE OFFSET IN IQE          SMF
USOPLIST EQU   24 .          PTR IN THE TCT TO THE USER PLIST  BH 51255
         SPACE 2
         EXTRN IEA0EF00                                             SMF
         ENTRY IEATLEXT                                           19028
IEATLEXT BALR  XTBASE,0                                             SMF
         USING *,XTBASE                                             SMF
         L     CURRENT,CVTPTR     PTR TO CVT                        SMF
         L     CURRENT,0(CURRENT) PTR TO NEW OLD                    SMF
         L     CURRENT,4(CURRENT)       .ADDR OF CURRENT TCB        SMF
         L     CURRIRB,TCBRBP(CURRENT)  .IRB ADDR                   SMF
         LA    CURRIRB,IRBIQE(CURRIRB)  .PTR TO IQE                 SMF
         LR    IQEADDR,CURRIRB          .SAVE IQE ADDR           19028
         L     CURRIRB,IQETQE(CURRIRB)  .PTR TO TQE               19028
         L     TCBTCT,TCTPTR(CURRENT)   .GET TCT PTR              19028
         L     SAVEREG,SAVEAREA         .S/A SUBPOOL AND LENGTH   19028
         GETMAIN R,LV=(0)               .SAVEAREA FOR USER RTN    19028
         LR    USERSAVE,R1              .S/A ADDR IN R13          19028
         TM    4(IQEADDR),OUTLIMAX      .Q. ENTRY FOR OUTLIM      19028
         BO    OUTLMRTN                 .BR IF ON                 19028
         OI    VELMFLG(CURRIRB),X'80'   SET OFF-QUEUE BIT         19028
         TM    TQEFLGS(CURRIRB),WAITEXP .Q. 'WAIT' TIME EXPIRED     SMF
         BO    WAITTIME                 .BR IF YES                  SMF
         TM    TCTEXP(TCBTCT),JOBEXP    .Q. JOB TIME EXPIRED        SMF
         BZ    STEPTIME                 .BR IF NO                   SMF
         LA    EXPCODE,0                .CODE FOR JOB TIME EXP      SMF
         B     SETUP                    .SET UP FOR BR TO USER      SMF
OUTLMRTN NI    4(IQEADDR),X'40'    TURN IQE ENTRY FLG OFF         M3327
         L     R1,JMRPTR(TCBTCT)   GET PTR TO JMR                 M3327
         ST    R1,24(IQEADDR)           .STORE JMR PTR IN 1ST WD  19028
         L     XDCBREG,IQEDCB(IQEADDR)  .GET DCB@ FROM IQE        19028
         ST    XDCBREG,28(IQEADDR)      .STORE DCB @ IN IQE       19028
SETUPUSO LA    R1,USOPLIST(IQEADDR) .   R1 PTS TO PLIST FOR USO   39989
         L     USERADDR,IEFUSOAD(TCBTCT)     ADDR IEFUSO RTN      19028
         LTR   USERADDR,USERADDR   IS THERE A USER RTN            M3327
         BZ    SCHEDABT            ABTERM THE TASK                M3327
         BAL   14,SETNDISP .            GO MARK TCB TREE NDISP   A34673
         BALR  ASYNRET,USERADDR         .GO TO USER RTN IEFUSO    19028
         L     R14,X'10'   .   PTR TO CVT                      BH 53020
         L     R14,0(R14) .    PTR TO NEW/OLD                  BH 53020
         CLC   0(4,R14),4(R14) . NEW/OLD EQUAL                 BH 53020
         BNE   TASKSWP .       NO-THEN TASK SWITCH IS PENDING  BH 53020
         XC    0(4,R14),0(R14) . INDICATE A TASK SWITCH REQUES BH 53020
TASKSWP  EQU   * .                                             BH 53020
         BAL   14,SETDISP .             GO MARK TCB TREE DISP    A34673
         LA    R14,0                    .SET CODE FOR TERMINATION 19028
         CR    R14,USERCODE             .USERCODE=0 ?             19028
         BE    SCHEDABT                 .BR TO ABTERM RTN         19028
         LA    R14,4                    .SET CODE FOR EXCP ADD    19028
         CR    R14,USERCODE             .USERCODE=4?              19028
         BE    ADDCOUNT                 .BR  IF  EQUAL            19028
SCHEDABT BAL   LINKREG,FREECORE         .FREE USER SAVE AREA      19028
         L     R0,TCBLTC(CURRENT)       .GET ADDR OF TASK, ABTERM 19028
         L     R1,ABCODE2               .GET ABTERM CODE          19028
         L     CVTBASE,16               .ADDR OF CVT              19028
         USING CVTSECT,CVTBASE          .DSECT FOR CVT            19028
         L     R15,CVTBTERM             .ABTERM ADDR FROM CVT     19028
         BALR  R14,R15                  .ABTERM THE TASK          19028
         SVC   3                        .EXIT                     19028
ADDCOUNT LTR   R1,R1               CHECK FOR VALID EXT            M3259
         BC    12,SCHEDABT         ZERO OR NEG SPECIFIED          M3259
         L     XDCBREG,28(IQEADDR) GET DCB ADDR                   M3259
         LH    R5,DCBLRECL(R10)    GET DCB LRECL                 A35683
         LTR   R5,R5               IS DCBLRECL ZERO              A35683
         BZ    SEARCH              YES. ATTEMPT TO DEFAULT       A35683
         LH    R11,DCBBLCK(R10)    GET DCB BLOCKSIZE             A35683
         LTR   R11,R11             IS DCB BLOCKSIZE ZERO.        A35683
         BC    7,ENTER             NO. CONTINUE NORMAL PROCESS   A35683
SEARCH   EQU   *
         L     R7,DEB(R10)         GET ADDRESS OF DEB.           A35683
         LH    R5,DEBLRECL(R7)     GET DEB LRECL                 A35683
         LTR   R5,R5               IS DEB LRECL ZERO             A35683
         BZ    COMPUTE             YES. SET DEFAULT TO #RECORDS  A35683
         LH    R11,DEBBLK(R7)      GET DEB BLOCKSIZE             A35683
         LTR   R11,R11             IS DEB BLOCKSIZE ZERO         A35683
         BZ    COMPUTE             YES.  SET DEFAULT             A35683
         SR    R0,R0               CLEAR REG.0 FOR MULT          A35683
         MR    R0,R5               MULT LRECL BY #RECORDS        A35683
         B     ENTER1                                            A35683
DCBBLCK  EQU   62                                                A35683
DCBLRECL EQU   82                                                A35683
DEBBLK   EQU   12                                                A35683
DEBLRECL EQU   14                                                A35683
DEB      EQU   44                                                A35683
R5       EQU   5                                                 A35683
R7       EQU   7                                                 A35683
R10      EQU   10                                                A35683
ENTER    EQU   *                                                 A35683
         MH    R1,LRECLPTR(XDCBREG) MULT LRECL BY # RECORDS       M3259
         SR    R0,R0                    .CLEAR REG 0              19028
         LH    XRWRK,BLKSIPTR(XDCBREG)  .GET BLKSIPTR FROM DCB    19028
ENTER1   EQU   *                                                 A35683
         DR    R0,XRWRK                 .CONVERT RESULT TO #EXCP'S19028
         LTR   R0,R0                     .CHECK FOR REMAINDER     19028
         BZ    COMPUTE                   .NO REMAINDER, BR        19028
         LA    R1,1(R1)                  .ADD 1  TO # EXCP'S      19028
COMPUTE  L     XRWRK,IQEOUTLM(IQEADDR)   OUTLM ADDR IN TCTIOT     19028
         AL    R1,0(XRWRK)              .ADD TO GET NEW OUTLIM    19028
         ST    R1,0(XRWRK)              .STORE NEW OUTLIM IN TIOT 19028
         LR    R15,XRWRK           SAVE OUTLIM ADDRESS            M3327
         LA    XS1,4                                              M3327
         SR    R15,XS1             GET EXCP COUNT ADDRESS         M3327
         CLC   0(4,XRWRK),0(R15)   COMPR OUTLIM TO EXCP CNT       M3327
         BL    SETUPUSO            OUTLIM ( COUNT,BR USO          M3327
         BAL   LINKREG,FREECORE                                   M3327
         SVC   3                         .EXIT
STEPTIME LA    EXPCODE,4                .CODE FOR STEP TIME EXP     SMF
         B     SETUP                    .SET UP FOR BR TO USER      SMF
WAITTIME LA    EXPCODE,8                .CODE FOR 'WAIT' TIME EXP   SMF
*
SETUP    L     USERDATA,TCTUDATA(TCBTCT) .TCT USER DATA FIELD       SMF
         L     USERADDR,TCTUTL(TCBTCT)  .USER ROUTINE ADDR          SMF
         BAL   14,SETNDISP .            GO MARK TCB TREE NDISP   A34673
         BALR  ASYNRET,USERADDR         .BR TO USER                 SMF
         L     R14,X'10' .     PTR TO CVT                      BH 53020
         L     R14,0(R14) .    PTR TO NEW/OLD                  BH 53020
         CLC   0(4,R14),4(R14) . NEW/OLD EQUAL                 BH 53020
         BNE   TASKSW .        NO-TASK SWITCH IS PENDING       BH 53020
         XC    0(4,R14),0(R14) . INDICATE A TASK SWITCH        BH 53020
TASKSW   EQU   * .                                             BH 53020
IRBREG   EQU   8 .                                               A34673
TCBREG1  EQU   2 .                                               A34673
         BAL   14,SETDISP .             GO MARK TCB TREE DISP    A34673
         L     IRBREG,ZERO(CURRENT) .   GET ADDR OF THE IRB      A34673
         TM    TWLV(IRBREG),X'C0' .     WAS TCB STP M. C.     BH A53019
         BZ    NOSETTCB .               NO. DON'T RESET       BH A53019
         BO    RSETBOTH .            RESET INIT TCB DISP      BH A53019
         TM    TWLV(IRBREG),X'80' .     IS TCB IN SYS. MUST COMP A34673
         BNO   STEPGO .               NO. IT'S STEP MUST COMP BH A53019
         OI    TWTHREE(TCBREG1),X'08' . RESET INIT TCB TO SYS.   A34673
         B     NOSETTCB .                                        A34673
RSETBOTH EQU  * .                                             BH A53019
         OI    TWTHREE(TCBREG1),X'0C' . INIT STEP AND SYS M.C BH A53019
         B    NOSETTCB .           CONTINUE ON                BH A53019
STEPGO   EQU   * .                                               A34673
         OI    TWTHREE(TCBREG1),X'04' . RESET INIT TCB TO STEP   A34673
NOSETTCB EQU   * .                                               A34673
         LA    R14,4          .RETURN CODE                          SMF
         CR    R14,USERCODE           .Q. TIME EXTENSION            SMF
         BE    ADDTIME        .BR IF YES                            SMF
         TM    TQEFLGS(CURRIRB),WAITEXP .Q. 'WAIT' TIME EXPIRATION  SMF
         BO    WAITUP                 .BR IF YES                    SMF
         BAL   LINKREG,FREECORE         .GO TO FREE SAVE AREA       SMF
* INIT TQE AS IRB/IQE FOR ST2 EX EFF TO SCHEDULE STEP TERMINATION   SMF
         MVC   STABSIZE(4,CURRIRB),RBSTAB .INIT IRB STAB/SIZE       SMF
         MVC   ENTRY(4,CURRIRB),TENTRY(CURRIRB) .MOVE ENTRY POINT   SMF
         L     CURRENT,0(CURRIRB) .TCB ADDRESS                      SMF
         LA    CURRENT,0(CURRENT) .CLEAR HI ORDER BYTE OF ADDR      SMF
         MVC   VELMFLG+1(3,CURRIRB),TQESAADR+1(CURRIRB) .SET S/A    SMF
         ST    CURRENT,108(CURRIRB)     .TCB ADDR IN IRB            SMF
         ST    CURRIRB,104(CURRIRB)     .IRB ADDR IN IRB            SMF
         SR    XS2,XS2                  .                           SMF
         ST    XS2,24(CURRIRB)          .CLEAR IQE PTR IN IRB       SMF
         L     CURRENT,CVTPTR     PTR TO CVT                        SMF
         L     CURRENT,0(CURRENT) PTR TO CURRENT TCB
         ST    XS2,0(CURRENT)           .INDICATE TASK SWITCH       SMF
         LA    IQE,96(CURRIRB)          .GET IQE ADDR               SMF
         LCR   IQE,IQE                  .COMPLEMENT IQE ADDR        SMF
         L     STAGETWO,ST2EXEFF        .ADDR OF EXIT EFF           SMF
         BALR  ASYNRET,STAGETWO         .GO TO ST2 EX EFF           SMF
         SVC   3                       .EXIT                        SMF
WAITUP   BAL   LINKREG,FREECORE        .FREE USER SAVE AREA         SMF
         L     R0,TCBLTC(CURRENT)       .TCB OF TASK TO ABTERM      SMF
         L     R1,ABCODE               .GET ABEND CODE              SMF
         L     CVTBASE,16             .ADDR OF CVT                  SMF
         USING CVTSECT,CVTBASE        .DSECT REG FOR CVT            SMF
         L     R15,CVTBTERM           .ABTERM ADDR FROM CVT         SMF
         BALR  R14,R15                .ABTERM THE TASK              SMF
         MVC   VELMVAL(4,CURRIRB),VELMSAV(CURRIRB) MOVE TIME FIELD  SMF
         NI    VELMFLG(CURRIRB),X'FC'   .CHANGE TQE TO TASK         SMF
         ST    CURRIRB,TCBTME(CURRENT)  .PUT TQE ADDR IN INIT TCB   SMF
         SVC   3                       .EXIT                        SMF
*
ADDTIME  TM    TQEFLGS(CURRIRB),WAITEXP .Q. 'WAIT' TIME EXPIRED     SMF
         BO    CONVERT                  .BR IF YES                  SMF
         LM    TIMEOFLW,TIMEACC,TCTSTOF(TCBTCT) .TCT TIME FIELDS    SMF
         ALR   TIMEACC,TIMEEXT          .ADD TIME EXTENSION         SMF
         BC    12,NOOVFLW               .BR IF NO OVERFLOW          SMF
         LA    TIMEOFLW,1(TIMEOFLW)     .INCREMENT OVFLW BY 1       SMF
NOOVFLW  STM   TIMEOFLW,TIMEACC,TCTSTOF(TCBTCT) .NEW TIME VALUES    SMF
*
CONVERT  ST    TIMEEXT,TQEVAL(CURRIRB)  .PUT TIME EXTENSION IN TQE  SMF
         NI    VELMFLG(CURRIRB),TQECOMP .TURN OFF TQE COMPLETE BIT  SMF
         L     R1,TQEFLGS(CURRIRB)      .GET INIT TCB ADDR FROM TQE SMF
         ST    CURRIRB,TCBTME(R1)       .PUT TQE ADDR IN INIT TCB   SMF
         BAL   LINKREG,FREECORE         .GO TO FREE SAVE AREA       SMF
         LR    TQEADDR,CURRIRB          .ADDR OF TQE IN R1          SMF
         L     LINKREG,ADDRTENQ         .GET ADDR OF TIMER ENQUEUE  SMF
         BALR  TIMERRET,LINKREG         .GO TO TIMER ENQUEUE        SMF
         SVC   3                                                    SMF
*
FREECORE LR    R1,USERSAVE              .S/A ADDR IN REG 1          SMF
         L     SAVEREG,SAVEAREA         .S/A SUBPOOL AND LENGTH     SMF
         FREEMAIN R,LV=(0),A=(1)        .FREE SAVE AREA             SMF
         BR    LINKREG                                              SMF
INITTCB  EQU   4 .                                               A34673
SAVEINIT EQU   5 .                                               A34673
LINKREG2 EQU   3 .                                               A34673
TCBREG   EQU   4 .                                               A34673
SAVETCB  EQU   6 .                                               A34673
INITREG  EQU   2 .                                               A34673
LINKREG1 EQU   14 .                                              A34673
MPCVT    EQU   X'C0' .                                           A34673
TASKRMV  EQU   X'C' .                                            A34673
TCBLTCP  EQU   X'88' .                                           A34673
TCBNTCP  EQU   X'80' .                                           A34673
TCBOTCP  EQU   X'84' .                                           A34673
FOUR     EQU   4 .                                               A34673
FOX      EQU   15 .                                              A34673
CVTPCREG EQU   9 .                                               A34673
CVTPCDP  EQU   X'58' .                                           A34673
THTWO    EQU   32 .                                              A34673
REGBAKER EQU   11 .                                              A34673
         EJECT
***********************************************************************
*                                                                A34673
*                     TCB SELECTION ROUTINE                      A34673
*                                                                A34673
*   THE FOLLOWING CODE WILL CHECK THE TCB TREE OF THE INIT. THAT A34673
*   IS IN CONTROL NOW AND WILL FIND ALL TCB'S.  AFTER EACH TCB   A34673
*   IS FOUND THE ADDRESS OF THAT TCB WILL BE PASSED TO THE SET   A34673
*   STATUS ROUTINE WHICH WILL MARK THE TCB EITHER DISPATCHABLE   A34673
*   OR NONDISPATCHABLE AS THE CASE MAY BE.                       A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
SELECT   EQU   * .                                               A34673
         LR    SAVETCB,TCBREG .         SAVE THE TCB ADDRESS     A34673
         L     TCBREG,TCBLTCP(SAVETCB) .GET THE DAUGHTER         A34673
SELECT1  EQU   * .                                               A34673
         LTR   TCBREG,TCBREG .          IS THERE A DAUGHTER      A34673
         BNZ   SELECT2 .                YES. THEN GO MARK IT     A34673
         L     TCBREG,TCBNTCP(SAVETCB) .GET THE SISTER           A34673
         CR    SAVETCB,SAVEINIT .       IS THIS THE END          A34673
         BC    8,FOUR(LINKREG2) .       PREPARE FOR EXIT         A34673
         L     SAVETCB,TCBOTCP(SAVETCB) GET NEXT                 A34673
         B     SELECT1 .                                         A34673
SELECT2  EQU   * .                                               A34673
         LR    SAVETCB,TCBREG .                                  A34673
         BR    LINKREG2 .                                        A34673
         EJECT
***********************************************************************
*                                                                A34673
*                    SET STATUS ROUTINE                          A34673
*                                                                A34673
*   THIS ROUTINE IS BRANCHED TO AND SETS LINKREG POSITIVE OR     A34673
*   NEGATIVE DEPENDING IF THE TCB IS TO BE MARKED DISPATCHABLE   A34673
*   (POSITIVE) OR NONDISPATCHABLE(NEGATIVE).                     A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
SETDISP  EQU   * .                                               A34673
         LA    LINKREG1,ZERO(LINKREG1) .  SET REG POSITIVE       A34673
SETNDISP EQU   * .                                               A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
*    THIS SECTION OF CODE GETS THE INIT. TCB AND SAVES IT FOR    A34673
*    THE SELECT ROUTINE.  IT THEN GOES TO THE SELECT ROUTINE TO  A34673
*    GET A TCB TO MARK.                                          A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
         L     CVTPCREG,CVTPTR .        GET POINTER TO CVT        M5926
         L     CVTPCREG,CVTPCDP(CVTPCREG) .  POINTER TO CLOCKS   A34673
         USING IEATPC,CVTPCREG .                                 A34673
         STM   ZERO,FOX,TQTDSAV .       SAVE REGS.               A34673
         LR    INITTCB,INITREG .        GET INIT TCB             A34673
         LR    SAVEINIT,INITTCB .       SAVE THIS REG FOR SELECT A34673
FINDSUBT EQU   * .                                               A34673
         BAL   LINKREG2,SELECT .        GO GET A TCB             A34673
         B     SETCHECK .               SET THE BIT              A34673
         LM    ZERO,FOX,TQTDSAV .       RESTORE REGISTERS        A34673
         BR    LINKREG1 .               RETURN TO MAINLINE       A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
*    THIS SECTION OF CODE MARKS THE TCB AND THEN GETS ANOTHER    A34673
*                                                                A34673
***********************************************************************
*                                                                A34673
SETCHECK EQU   * .                                               A34673
         LTR   LINKREG1,LINKREG1 .      HOW DO I SET THE BIT?    A34673
         BP    TURNOFF .                GO SET DISPATCHABLE      A34673
         OI    THTWO(INITTCB),X'08' .         SET THE BIT        A34673
         AIF   (&B(1)).NOTAMP                                    A34673
         EJECT
***********************************************************************
*        AFTER MARKING THE TCB NONDISPATCHABLE IT IS NECESSARY   A34673
*        TO CHECK AND SEE IF THAT TCB IS ACTIVE ON THE OTHER CPU.A34673
*        IF IT IS THEN A TASK SWITCH WILL BE FORCED.             A34673
***********************************************************************
         L     R10,CVTPTR .         GET THE CVT POINTER          A34673
         L     R10,MPCVT(R10) .     GET THE MPCVT                A34673
         L     R10,TASKRMV(R10) .   GET ADR OF TASK REMOVAL RTN  A34673
         LR    REGBAKER,LINKREG1 .  SAVE RETURN ADDRESS          A34673
         BALR  LINKREG1,R10 .       GO TO TASK REMOVAL RTN       A34673
         LR    LINKREG1,REGBAKER .  RESTORE RETURN ADDRESS       A34673
.NOTAMP  ANOP
         B     FINDSUBT .               GO GET NEXT TCB          A34673
TURNOFF  EQU   * .                                               A34673
         NI    THTWO(INITTCB),X'F7' . RESET THE BIT              A34673
         B     FINDSUBT .               GO GET NEXT TCB          A34673
***********************************************************************
         EJECT
*
         DS    0F
ST2EXEFF DC    A(IEA0EF00)    .STAGE 2 EXIT EFFECTOR                SMF
ADDRTENQ DC    A(IEAQTE00)              .ADDR OF TIMER ENQUEUE      SMF
SAVEAREA DC    X'FD'          . S A V E                             SMF
         DC    FL3'72'        . A R E A                             SMF
ABCODE   DC    X'80522000'    .DUMP                                 SMF
ABCODE2  DC    X'80722000'     .DUMP CODE FOR OUTLIMIT RTN        19028
RBSTAB   DC    X'000E400E'              .RB SIZE AND IQE/IRB FLAGS  SMF
.SMF0120 ANOP                                                     20021
IEAQTIA1 EQU   *                                                    MCH
         AIF   (&B(4)).TOD0400                                    20071
         EJECT
         AIF   (&B(1) AND &B(2) AND &B(3)).TIM025                 20021
         AIF   (&B(1) AND &B(2)).TIM026                           20021
         AIF   (&B(1) AND &B(3)).TIM027                           20021
         AIF   (&B(1)).TIM028      20021
         AIF   (&B(2) AND &B(3)).MPTSO10                          21008
         AIF   (&B(2)).TIM029                                     20021
         AIF   (&B(3)).MPTSO9                                     21008
         TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE FOR MP65'   20021
         IEACVTPC I,02,46,D,0,0    MP65 WITH NO TSO OR SMF        20021
         AGO   .EXIT                                              20021
.MPTSO9  TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE- MP65/TSO'  21008
         IEACVTPC I,02,46,D,0,1    MP65 WITH TSO AND NO SMF       21008
         AGO   .EXIT                                              21008
.MPTSO10 TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE- MP65/TSO/SMF'
         IEACVTPC I,02,46,D,1,1    MP65 WITH TSO AND SMF INCLUDED 21008
         AGO   .EXIT                                              21008
.TIM025  TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE- MVT/TSO/SMF'
         IEACVTPC I,02,46,D,1,1    MVT WITH TSO AND SMF INCLUDED  20021
         AGO   .EXIT                                              20021
.TIM026  TITLE 'IEACVTPC PSEUDO CLOCKS AND RUDIMENTARY QUEUE- MVT/SMF'
         IEACVTPC I,02,46,D,1,0    MVT WITH SMF AND NO TSO        20021
         AGO   .EXIT                                              20021
.TIM027  TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE- MVT/TSO'   20021
         IEACVTPC I,02,46,D,0,1    MVT WITH TSO AND NO SMF        20021
         AGO   .EXIT                                              20021
.TIM028  TITLE 'IEACVTPC-PSEUDO CLOCKS AND RUD. QUEUE- MVT'       20021
         IEACVTPC I,02,46,D,0,0    MVT WITH NO SMF AND NO TSO     20021
         AGO   .EXIT                                              20021
.TIM029  TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE - MP65/SMF' 20021
         IEACVTPC I,02,46,D,1,0    MP65 WITH SMF AND NO TSO       20021
.EXIT    AGO   .TOD0410                                           20071
.TOD0400 AIF   (&B(1) AND &B(2) AND &B(3)).TOD0420                20071
         AIF   (&B(1) AND &B(2)).TOD0430                          20071
         AIF   (&B(1) AND &B(3)).TOD0440                          20071
         TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE -MVT/TOD'
         IEACVTPC  I,02,46,D,0,0,1 MVT/TOD                        20071
         AGO   .TOD0410                                           20071
.TOD0420 TITLE 'IEACVTPC-PSEUDO CLOCKS AND RUD. QUEUE- MVT/SMF/TSO/TOD'
         IEACVTPC  I,02,46,D,1,1,1 MVT/SMF/TSO/TOD                20071
         AGO   .TOD0410                                           20071
.TOD0430 TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE FOR MVT/SMF/TOD'
         IEACVTPC  I,02,46,D,1,0,1 MVT/SMF/TOD                    20071
         AGO   .TOD0410                                           20071
.TOD0440 TITLE 'IEACVTPC PSEUDO CLOCKS AND RUD. QUEUE- MVT/TSO/TOD'
         IEACVTPC  I,02,46,D,0,1,1 MVT/TSO/TOD                    20071
.TOD0410 ANOP                                                     20071
         MEND
