         MACRO
         MSTARTMH &X
.******************* MICROFICHE FLAGS *********************** SUPT CODE
.*A419000,430000,443000,447000,747000-XXXXXX,748000-XXXXXX       S99528
.*A807000-XXXXXX                                                 S99528
.*C694000                                                        S99528
.*D687400-687460,708000-708300,710000-710500,714000-721000       S99528
.*D753000-754000                                                 S99528
.*A533500,897020-XXXXXX                                          S22029
.*C427000,510000-510500,511000-511500,528000,618360,813000       S22029
.*C824100,824500                                                 S22029
.*D508000,531000,618030-618330,618390,816000,831000-860000       S22029
.*A689000                                                        A44861
.*C483000                                                        A44861
.*A824000                                                         M6673
.*A862000                                                        S21101
.*C483000                                                         M6673
.*C483000,839000                                                 A44907
.*D841000                                                        A44907
.*A858100                                                        A44907
.*A441000,590070,618333,618400,630300,632000,687100,862980,      S22025
.*A872200,926200                                                 S22025
.*C556000,569000,610000,617000,632000,636000-644000,687000,      S22025
.*C690000-691500,694000,697000-700000,706000,709000-710500,      S22025
.*C714000-717000,721000,769000-775000                            S22025
.*D578000-583000,662800-665000,718000-719000,725000-743000,      S22025
.*D760000-766000,786000-787000,788000-805000,862500-862960,892000S22025
.*A467000,680000,822000                                         SA52512
.*C630600,872000                                                SA52512
.*A872000                                                       SA56222
.*C822000                                                       SA56222
.*A868000,906000                                                SA54959
.*C630600                                                       SA54959
.*A565000,932000                                                SA52971
.*C538000-541000                                                SA52971
.*D543000-554000,562000-563000                                  SA52971
.*C882000,887000-888000,895000,897520,902000                     A59509
.*D886000,897580,897740                                          A59509
.*A897940-897960                                                 A59509
.*D862982,862994                                                SA59169
.*A464000,642000,861000,863000,897200,936000                     S22024
.*A467700-467900,758100-758800,807040-807880                     S22024
.*C211000,710400,871000                                          S22024
.*C824700                                                       SA61771
.*A618354                                                       SA62383
.*A467600,566000                                                SA60343
.*747800,747880                                                 SA63640
.*D747200,747240                                                SA63640
.*D537000-555000                                                SA66605
*A807000                                                        SA68025
*C807090                                                        SA68025
*D807780-809000                                                 SA68025
.*A606000                                                       SA66605
.*C693000,694000                                               @SA74025
.*C704500,706000                                               @SA74025
.*A776000                                                      @SA74025
.*D868500                                                      @SA74879
.*C824800                                                      @ZA04049
*C618450                                                       @SA75454
*A868000                                                       @YA10671
*C867000                                                       @SA75471
*A565000                                                       @OS76313
*A467900,513000                                                @YA12287
*A906400,906520,912000                                         @OY12280
*A697000                                                       @OY12671
*A513360,912600                                                @YA13265
*A642000,A912000                                               @OY13651
*A906400,906520                                                @OY15001
*A514560                                                       @OZ15624
*A807090                                                       @OX14795
*A467960,509000                                                @OZ16547
*A514740                                                       @OY15569
***********************************************************************
         AIF   ('&X' NE 'TSO').A1
AYR1     TITLE '''IEDAYR'' -- STARTMH SUBTASK, TCAM-TSO MIXED'
IEDAYR   CSECT
***********************************************************************
*TITLE  'IEDAYR'  TSO STARTMH SUBTASK                                 *
*                                                                     *
*  MODULE NAME = IEDAYR                                               *
*                                                                     *
*  DESCRIPTIVE NAME= TSO/MIXED STARTMH ROUTINE                        *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS = CHANGE LEVEL 5                                            *
*                                                                     *
*FUNCTION -- THE TSO STARTMH SUBTASK PERFORMS INITIALIZATION FUNC-    *
*   TIONS FOR A BUFFER BEFORE SENDING IT THROUGH A TCAM OR TSO MES-   *
*   SAGE HANDLER.  THE EXACT FUNCTIONS VARY, DEPENDING UPON WHETHER   *
*   THE BUFFER IS A HEADER OR A TEXT BUFFER, AND WHETHER IT IS TO BE  *
*   PROCESSED BY THE INCOMING OR OUTGOING SIDE OF THE MH.             *
*      THIS ROUTINE FIRST CHECKS FOR A RECALLED BUFFER.  IF IT IS RE- *
*   CALLED, NO INITIALIZATION FUNCTIONS ARE PERFORMED, AND ONLY THE   *
*   CHECK FOR TRANSLATION IS MADE.  IF THE BUFFER IS OUTGOING, AND    *
*   THE DESTINATION TERMINAL IS IN LOCK MODE, THE LCB COUNT OF OUT-   *
*   STANDING LOCK RESPONSES IS INCREMENTED, AND THE PREFIX LOCK BIT   *
*   IS SET OFF.  IF THE BUFFER, INCOMING OR OUTGOING, IS A TSO BUFFER,*
*   THE LCB RESERVE COUNT IS INITIALIZED TO ZERO.  THEN THIS ROUTINE  *
*   CHECKS TO SEE IF THE BUFFER IS HEADER OR TEXT.  FOR ALL HEADER    *
*   BUFFERS, THE SCB MULTIPLE BUFFER HEADER ENTRY IS SET TO ZERO.     *
*   NEXT, THIS ROUTINE CHECKS TO SEE IF THE BUFFER IS TO BE PROCESSED *
*   BY AN INCOMING OR OUTGOING MH.  PROCESSING IS THEN TAILORED FOR   *
*   EACH OF THE FOUR SITUATIONS.                                      *
*      FOR AN INCOMING HEADER BUFFER, THE PREFIX SOURCE FIELD IS      *
*   INITIALIZED FROM THE CURRENT TERMINAL INDEX IN THE LCB, AND THE   *
*   SCB PRIORITY AND CUTOFF COUNT ARE SET TO ZERO.  IF IT IS A TSO    *
*   BUFFER, THIS ROUTINE BRANCHES TO THE EXIT ROUTINE.  IF NOT, THE   *
*   PREFIX SCAN POINTER IS SET TO POINT TO THE LAST BYTE OF THE PRE-  *
*   FIX, OR TO THE LAST RESERVE CHARACTER, IF SPECIFIED.  IF THE      *
*   MESSAGE SOURCE WAS AN APPLICATION PROGRAM, THIS ROUTINE NOW       *
*   BRANCHES TO THE EXIT ROUTINE.  OTHERWISE, IT CHECKS TO SEE IF AN  *
*   EOA SEQUENCE WAS DEFINED IN THE SPECIAL CHARACTERS TABLE.  IF IT  *
*   WAS, IT LINKS TO THE SKIP FORWARD AND SCAN ROUTINE TO SEE IF THE  *
*   EOA SEQUENCE IS IN THE BUFFER.  IF IT IS, THE SCAN POINTER IS SET *
*   TO POINT BEYOND IT.  FOR 1030'S AND REMOTE 2260'S, THE SCAN       *
*   POINTER IS ALSO MOVED BEYOND THE ADDRESSING CHARACTER, WHICH FOL- *
*   LOWS THE EOA SEQUENCE FOR THESE DEVICES.  AT THIS POINT, IF THE   *
*   TERMINAL IS IN LOCK MODE, THIS ROUTINE BRANCHES TO THE EXIT ROU-  *
*   TINE.  OTHERWISE, THIS ROUTINE CHECKS TO SEE IF THE BUFFER CON-   *
*   TAINS AN ON-LINE TEST MESSAGE.  FOR BINARY SYNCHRONOUS LINES, A   *
*   BIT IN THE LCB IS CHECKED; FOR START/STOP LINES, THIS ROUTINE     *
*   LINKS TO THE SKIP FORWARD AND SCAN ROUTINE TO SEE IF AN ON-LINE   *
*   TEST SEQUENCE IS IN THE BUFFER.  IF THE BUFFER CONTAINS AN ON-    *
*   LINE TEST MESSAGE, BUT ON-LINE TEST IS NOT IN THE SYSTEM, THIS    *
*   ROUTINE SETS A BIT IN THE ERROR WORD AND BRANCHES TO THE EXIT     *
*   ROUTINE.  IF ON-LINE TEST IS IN THE SYSTEM, THIS ROUTINE SETS ON- *
*   LINE TEST PRIORITY IN THE BUFFER PREFIX AND EXITS TO THE DIS-     *
*   PATCHER POST FUNCTION TO POST THE BUFFER TO THE ON-LINE TEST QCB. *
*   IF THE BUFFER DOES NOT CONTAIN AN ON-LINE TEST MESSAGE, THIS      *
*   ROUTINE BRANCHES TO THE EXIT ROUTINE.                             *
*      FOR AN INCOMING TEXT BUFFER, THE PREFIX SOURCE FIELD IS INI-   *
*   TIALIZED AS FOR AN INCOMING HEADER BUFFER.  IF THE MH TO RECEIVE  *
*   THE BUFFER IS A TSO MH, THIS ROUTINE CHECKS TO SEE IF THE DES-    *
*   TINATION IS THE TSINPUT QCB.  IF IT IS, THIS ROUTINE BRANCHES     *
*   TO THE ROUTINE TO CHECK FOR TRANSLATION.  IF IT IS NOT, THIS      *
*   ROUTINE CHECKS FOR A LOGON EXIT.  IF A LOGON EXIT IS NOT PRESENT, *
*   IT ALSO BRANCHES TO THE TRANSLATION CHECK.  IF A LOGON EXIT IS    *
*   PRESENT, A NEW QCB AND MH ARE ESTABLISHED, AND THIS ROUTINE       *
*   BRANCHES TO THE NEW MH.  IF THE MH TO RECEIVE THE BUFFER IS NOT A *
*   TSO MH, THE LCB RESERVE COUNT IS INITIALIZED FROM THE COUNT       *
*   SPECIFIED IN THE DCB, AND THE SCAN POINTER IS SET TO POINT TO THE *
*   LAST BYTE OF THE TEXT PREFIX, OR TO THE LAST RESERVE CHARACTER,   *
*   IF SPECIFIED.  THEN THIS ROUTINE BRANCHES TO THE TRANSLATION      *
*   CHECK.                                                            *
*      FOR AN OUTGOING HEADER BUFFER, AN IMMEDIATE BRANCH TO THE EXIT *
*   ROUTINE IS TAKEN IF IT IS A TSO BUFFER.  OTHERWISE, A CHECK IS    *
*   MADE FOR A LOGON EXIT.  IF ONE IS PRESENT, THIS ROUTINE SETS UP   *
*   AND BRANCHES TO THE NEW MH, AS DESCRIBED ABOVE.  IF NO LOGON EXIT *
*   IS PRESENT, THIS ROUTINE PERFORMS FEFO UPDATING.  NORMALLY, THE   *
*   FEFO POINTER IN THE DESTINATION (PRIORITY) QCB IS UPDATED FROM    *
*   THE SCB FEFO POINTER, AND THE 'CURRENTLY SENDING' FLAG IN THE     *
*   MASTER QCB IS SET OFF.  HOWEVER, THERE ARE THREE SITUATIONS IN    *
*   WHICH THIS IS NOT DONE: (1) IF THE DESTINATION TERMINAL IS IN     *
*   LOCK MODE WITH AN APPLICATION PROGRAM, NO FEFO UPDATING CAN TAKE  *
*   PLACE UNTIL IT IS UNLOCKED.  (2) IF THE LINE IS IN INITIATE MODE, *
*   NO FEFO UPDATING CAN TAKE PLACE UNTIL THE LAST BUFFER OF THE INI- *
*   TIATE MESSAGE HAS BEEN PROCESSED THROUGH THE MH.  (3) IF A TEXT   *
*   TRANSFER ERROR GENERATED A ZERO LENGTH BUFFER, NO FEFO UPDATING   *
*   TAKES PLACE BECAUSE THE BUFFER WILL NOT BE SENT TO THE DESTINA-   *
*   TION.  IF THE DESTINATION TERMINAL IS IN BOTH LOCK AND EXTENDED   *
*   LOCK MODE, BOTH LOCK BITS IN THE SCB ARE SET OFF.                 *
*      AFTER ANY FEFO UPDATING IS COMPLETE, THE LCB RESERVE COUNT IS  *
*   SET TO ZERO FOR ZERO LENGTH BUFFERS, OR TO THE VALUE IN THE SCAN  *
*   POINTER FOR NON-ZERO LENGTH BUFFERS.  THE SCAN POINTER IS THEN    *
*   SET TO POINT TO THE LAST BYTE OF THE HEADER PREFIX, OR TO THE     *
*   LAST RESERVE CHARACTER, IF SPECIFIED.  IN ADDITION, FOR NON-ZERO  *
*   LENGTH BUFFERS, THIS ROUTINE LINKS TO THE TERMNAME TABLE CODE TO  *
*   GET THE TERMINAL ENTRY, SAVES THE CURRENT OUTPUT SEQUENCE NUMBER  *
*   IN THE SCB, AND INCREMENTS THE OUTPUT SEQUENCE NUMBER IN THE      *
*   TERMINAL ENTRY.  IF THE MAXIMUM OUTPUT SEQUENCE NUMBER IS EX-     *
*   CEEDED, IT IS RESET TO ONE.  FINALLY, THIS ROUTINE BRANCHES TO    *
*   THE EXIT ROUTINE.                                                 *
*      FOR AN OUTGOING TEXT BUFFER, AN IMMEDIATE BRANCH TO THE TRANS- *
*   LATION CHECK IS TAKEN IF IT IS A TSO BUFFER.  OTHERWISE A CHECK   *
*   IS MADE FOR A LOGON EXIT.  IF ONE IS PRESENT, THIS ROUTINE SETS   *
*   UP AND BRANCHES TO THE NEW MH, AS DESCRIBED ABOVE.  IF NO LOGON   *
*   EXIT IS PRESENT, THIS ROUTINE INITIALIZES THE LCB RESERVE COUNT   *
*   TO ZERO, SETS THE SCAN POINTER TO POINT TO THE LAST BYTE OF THE   *
*   TEXT PREFIX, AND BRANCHES TO THE TRANSLATION CHECK, WHICH IS DE-  *
*   SCRIBED NEXT.                                                     *
*      THE TSO STARTMH SUBTASK HANDLES BUFFER TRANSLATION FOR THE     *
*   FOLLOWING TYPES OF BUFFERS: (1) INCOMING TEXT BUFFERS DIRECTED TO *
*   A NON-TSO MH, (2) INCOMING TEXT BUFFERS DIRECTED TO A TSO MH WITH-*
*   OUT A LOGON EXIT, (3) OUTGOING TCAM (NON-TSO) HEADER BUFFERS, AND *
*   (4) ALL RECALLED BUFFERS.  THE TRANSLATION CHECK FIRST CHECKS FOR *
*   A ZERO LENGTH BUFFER.  A ZERO LENGTH BUFFER IS NOT TRANSLATED.    *
*   NEXT IT CHECKS THE SCB TO SEE IF TRANSLATION WAS REQUESTED.  IF   *
*   NOT, THE BUFFER IS NOT TRANSLATED.  IF IT WAS, THIS ROUTINE LINKS *
*   TO THE TRANSLATE BUFFER ROUTINE, VIA THE USER INTERFACE, TO TRANS-*
*   LATE THE BUFFER.  IF THE SCB MULTIPLE BUFFER HEADER ENTRY IS ZERO,*
*   THIS ROUTINE BRANCHES TO THE EXIT ROUTINE.  IF NOT, THE PRESENCE  *
*   OF A MULTIPLE BUFFER HEADER IS INDICATED BY SETTING A NEGATIVE    *
*   VALUE IN REGISTER 0, AND THE ADDRESS OF THE USER INTERFACE IS     *
*   LOADED INTO REGISTER 15, BEFORE BRANCHING TO THE EXIT ROUTINE.    *
*      THE EXIT ROUTINE OF THIS SUBTASK GETS THE ADDRESS OF THE FIRST *
*   INSTRUCTION IN THE MH AND SETS AN INCREMENT OF 4096 IN REGISTER 2 *
*   FOR MULTIPLE BASE REGISTER SUPPORT.  IF A MULTIPLE BUFFER HEADER  *
*   IS PRESENT, A CONDITION CODE OF 4 IS SET IN THE PSW.  OTHERWISE,  *
*   A CONDITION CODE OF EITHER 1 OR 8 IS SET IN THE PSW, DEPENDING ON *
*   WHETHER THE LINE IS SENDING OR RECEIVING, RESPECTIVELY.  THESE    *
*   CONDITION CODES WILL BE TESTED BY THE CODE GENERATED BY THE       *
*   STARTMH MACRO INSTRUCTION.  FINALLY, THIS ROUTINE EXITS TO THE    *
*   FIRST EXECUTABLE INSTRUCTION OF THE MH.                           *
*                                                                     *
*ENTRY POINT -- IEDQAA01 - TO PERFORM INITIALIZATION FOR A BUFFER     *
*   BEFORE SENDING IT THROUGH A TCAM OR TSO MESSAGE HANDLER           *
*   CALLING SEQUENCE          L    R15,STCBLINK-1                     *
*                             BR   R15                                *
*                                                                     *
*INPUT -- IEDAYR IS CALLED BY THE DISPATCHER WHEN, IN A MIXED         *
*   TSO/TCAM ENVIRONMENT, A BUFFER IS POSTED TO THE STARTMH QCB.      *
*   AT ENTRY, THE FOLLOWING REGISTERS ARE SET.                        *
*   R1 HAS THE BUFFER ADDRESS, WHICH THIS ROUTINE SAVES IN THE AVT    *
*   R7 HAS THE ADDRESS OF THE STARTMH QCB                             *
*   R11 HAS THE DISPATCHER ADDRESS                                    *
*   R13 HAS THE ADDRESS OF AVTSAVE2                                   *
*   R15 HAS THE ENTRY POINT ADDRESS                                   *
*                                                                     *
*OUTPUT -- ON LINKING TO THE SKIP FORWARD AND SCAN ROUTINE (IEDQAI),  *
*   VIA THE USER INTERFACE, THE FOLLOWING REGISTERS ARE SET.          *
*   R1 HAS THE ADDRESS OF THE PARAMETER LIST, WHICH INCLUDES THE OFF- *
*   SET OF THE EOA SEQUENCE OR ON-LINE TEST SEQUENCE IN THE SPECIAL   *
*   CHARACTERS TABLE.                                                 *
*   R8 HAS THE ADDRESS OF THE SPECIAL CHARACTERS TABLE                *
*   R14 HAS THE RETURN ADDRESS IN IEDAYR                              *
*   R15 HAS THE ENTRY POINT ADDRESS IN IEDQUI                         *
*                                                                     *
*   ON LINKING TO THE TRANSLATE BUFFER ROUTINE (IEDQAW), VIA THE USER *
*   INTERFACE, THE FOLLOWING REGISTERS ARE SET.                       *
*   R1 HAS THE ADDRESS OF THE TRANSLATE PARAMETER LIST FROM THE SCB   *
*   R14 HAS THE RETURN ADDRESS IN IEDAYR                              *
*   R15 HAS THE ENTRY POINT ADDRESS IN IEDQUI                         *
*                                                                     *
*   ON EXIT TO THE DISPATCHER POST FUNCTION, THE ELEMENT KEY IN THE   *
*   PREFIX IS SET TO INDICATE EITHER A BISYNC OR A START/STOP LINE,   *
*   THE DESTINATION QCB FIELD IN THE SCB CONTAINS THE ADDRESS OF THE  *
*   ON-LINE TEST QCB, THE LINE STATUS IS SET TO STOPPED, AND REGISTER *
*   1 CONTAINS THE ADDRESS OF THE BUFFER TO BE POSTED.                *
*                                                                     *
*   ON EXIT TO AN MH SPECIFIED AS A LOGON EXIT, THE FOLLOWING REGIS-  *
*   TERS ARE SET.                                                     *
*   R3 HAS THE SCB ADDRESS                                            *
*   R4 HAS THE LCB ADDRESS                                            *
*   R6 HAS THE BUFFER ADDRESS                                         *
*   R7 HAS THE ADDRESS OF THE NEW QCB                                 *
*   R15 HAS THE ENTRY POINT ADDRESS IN THE NEW MH                     *
*                                                                     *
*   ON EXIT TO THE MH TO PROCESS THE BUFFER, A CONDITION CODE OF 1,   *
*   4, OR 8 IS SET IN THE PSW, AND THE FOLLOWING REGISTERS ARE SET.   *
*   R0 HAS A NEGATIVE VALUE, IF A MULTIPLE BUFFER HEADER IS PRESENT,  *
*   OR ZERO                                                           *
*   R2 HAS AN INCREMENT OF 4096                                       *
*   R3 HAS THE SCB ADDRESS                                            *
*   R4 HAS THE LCB ADDRESS                                            *
*   R6 HAS THE BUFFER ADDRESS                                         *
*   R12 HAS THE ENTRY POINT ADDRESS IN THE MH                         *
*                                                                     *
*EXTERNAL ROUTINES -- IEDQAI - TO SCAN FOR AN EOA SEQUENCE OR ON-LINE *
*   TEST SEQUENCE IN THE BUFFER                                       *
*   IEDQTNT - TO GET THE TERMINAL ENTRY FOR THE DESTINATION OF AN     *
*   OUTGOING HEADER BUFFER                                            *
*   IEDQAW - TO TRANSLATE THE BUFFER                                  *
*                                                                     *
*EXITS-NORMAL -- TO THE MH SPECIFIED IN THE STARTMH QCB               *
*   TO THE MH SPECIFIED AS THE LOGON EXIT IN THE STARTMH QCB          *
*   TO THE DISPATCHER POST FUNCTION                                   *
*                                                                     *
*EXITS-ERROR -- NONE                                                  *
*                                                                     *
*TABLES/WORKAREAS -- AVT, LCB, SCB, DCB, DEB, UCB, QCB, BUFFER PREFIX,*
*   TERMINAL ENTRY, SPECIAL CHARACTERS TABLE, TPRIOR ERB.             *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE, REFRESHABLE, ENABLED, RESIDENT,     *
*   PROBLEM PROGRAM MODE.                                             *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON A         *
*   PARTICULAR INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET. *
*                                                                     *
***********************************************************************
         AGO   .A2
.A1      ANOP
AA01     TITLE '''IEDQAA'' - STARTMH ROUTINE'
IEDQAA   CSECT
         SPACE
***********************************************************************
*                                                                     *
*  TITLE 'IEDQAA'  STARTMH ROUTINE                                    *
*                                                                     *
*  DESCRIPTIVE NAME= STARTMH ROUTINE                                  *
*                                                                     *
*  COPYRIGHT = 'NONE'                                                 *
*                                                                     *
*  STATUS: CHANGE LEVEL 4                                             *
*                                                                     *
*FUNCTION -- PERFORMS INITIALIZATION FUNCTIONS FOR THE PROCESSING     *
*   OF A MESSAGE BY THE MESSAGE HANDLER.                              *
*                                                                     *
*   ON ENTRY,  THE ADDRESS OF THE BUFFER POSTED IS SET IN THE AVT.    *
*   IF THE CANCEL FLAG IS SET IN THE PREFIX STATUS BYTE (PRFCNCLN     *
*   IN PRFSTAT1),  CONTROL PASSES IMMEDIATELY TO THE TEXT-PROCESS-    *
*   ING-INPUT SUBROUTINE TO TEST FOR A ZERO-LENGTH BUFFER.            *
*                                                                     *
*   IF ENTRY IS TO THE SEND SIDE OF THE MH,  AND IF THE TERMINAL IS   *
*   IN LOCK MODE,  THE PREFIX LOCK BIT IS TURNED OFF.  THE COUNT OF   *
*   OUTSTANDING LOCK REQUESTS IN THE LCB IS INCREMENTED BY ONE.       *
*   THE SUBTASK THEN DETERMINES IF THE                                *
*   BUFFER IS A HEADER OR TEXT BUFFER AND IF IT HAS BEEN RECEIVED     *
*   OR IS TO BE SENT AND PASSES CONTROL TO THE PROPER SUBROUTINE.     *
*                                                                     *
*   HEADER PROCESSING,  INPUT --                                      *
*                                                                     *
*     THE FOLLOWING FIELDS ARE INITIALIZED-                           *
*         PRFSRCE  --  ORIGIN FROM LCBTTCIN                           *
*         PRFSEQIN --  SEQUENCE IN NUMBER - ZEROED                    *
*         SCBPRI   --  SCB PRIORITY - ZEROED                          *
*         SCBBKFCT --  SCB CUTOFF COUNT - ZEROED                      *
*         PRFSCAN  --  SCAN POINTER OFFSET TO FIRST DATA BYTE-1       *
*                                                                     *
*     IF THE TERMINAL IS IN LOCK MODE (X'20' IN SCBSTATE)             *
*         PRFSTAT1 --  PRFLOCK SET (X'04')                            *
*         PRFDEST  --  DESTINATION OFFSET FROM LCBINSRC               *
*         SCBDESTQ --  DESTINATION QCB ADDR FROM TERM ENTRY           *
*         LCBINSRC+2-  POST PENDING SET (X'D0')                       *
*                                                                     *
*   IF THE TERMINAL IS NOT IN LOCK MODE,  THE SUBROUTINE DETERMINES   *
*   IF THE MESSAGE IS AN ON-LINE TEST REQUEST MESSAGE.  BEFORE        *
*   DOING SO,  THE LCB IS EXAMINED FOR A STOPLINE REQUEST CURRENTLY   *
*   PENDING ON THIS LINE.  IF SO,  THE ON-LINE TEST REQUEST DETER--   *
*   MINATION IS BYPASSED AND CONTROL PASSES TO THE EXIT SUBROUTINE.   *
*                                                                     *
*     IF THE MESSAGE IS A VALID ON-LINE TEST REQUEST, THE BUFFER IS   *
*     POSTED TO THE ON-LINE TEST QCB VIA A BRANCH TO THE DISPATCHER   *
*     (DSPPOST).  IF THE TEST REQUEST CANNOT BE HONORED, AN ERROR IS  *
*     SET IN THE SCB AND CONTROL PASSED TO THE EXIT SUBROUTINE.       *
*                                                                     *
*   TEXT PROCESSING,  INPUT --                                        *
*     THE FOLLOWING FIELDS ARE INITIALIZED-                           *
*         PRFSRCE  --  ORIGIN FROM LCBTTCIN                           *
*         LCBISZE --  NUMBER OF RESERVES FROM DCBRESER+1              *
*         PRFSCAN  --  SCAN POINTER OFFSET TO FIRST DATA BYTE-1       *
*     CONTROL PASSES TO THE EXIT SUBROUTINE                           *
*                                                                     *
*   HEADER PROCESSING,  OUTPUT --                                     *
*   NORMALLY THE FEFO POINTER IN THE DESTINATION QCB (QCBFFEFO) IS    *
*   UPDATED FROM THE FEFO POINTER IN THE SCB (SCBFEFO)  AND THE       *
*   'CURRENTLY SENDING' FLAG IN THE QCB IS TURNED OFF.  THIS IS NOT   *
*   DONE (1) IF THE DESTINATION IS IN LOCK MODE,  (2) IF THE LCB IS   *
*   IN INITIATE MODE,  OR (3) IF THE BUFFER IS A ZERO-LENGTH BUFFER   *
*   AND THE SEND ERROR IS A TEXT TRANSFER ERROR.                      *
*                                                                     *
*   IF THE DESTINATION IS IN LOCK MODE,  THE SUBROUTINE TESTS IF      *
*   BOTH THE LOCK AND EXTENDED LOCK BITS IN THE SCB ARE ON AND,  IF   *
*   SO,  TURNS THEM BOTH OFF.                                         *
*                                                                     *
*   THE NUMBER OF RESERVE CHARACTERS IN THE BUFFER IS ACCESSED FROM   *
*   THE PREFIX SCAN POINTER FIELD (PRFSCAN) AND SET IN THE LCB        *
*   (LCBISZE).  IF THIS IS A ZERO-LENGTH BUFFER,  LCBISZE IS SET TO   *
*   ZERO.                                                             *
*                                                                     *
*   THE SCAN POINTER IS INITIALIZED TO POINT TO THE LAST BYTE OF      *
*   THE PREFIX OR,  IF RESERVE CHARACTERS ARE PRESENT,  TO THE LAST   *
*   RESERVE CHARACTER.                                                *
*                                                                     *
*   IF THIS IS A ZERO-LENGTH BUFFER,  CONTROL PASSES TO THE NORMAL    *
*   EXIT SUBROUTINE.  OTHERWISE THE ADDRESS OF THE TERMINAL TABLE     *
*   ENTRY FOR THE DESTINATION IS ACCESSED VIA A LINK TO THE TNT       *
*   CODE (AVTRNMPT) AND THE OUTPUT SEQUENCE NUMBER IS INCREMENTED     *
*   BY ONE.  CONTROL THEN PASSES TO THE NORMAL EXIT SUBROUTINE.       *
*                                                                     *
*   TEXT PROCESSING,  OUTPUT --                                       *
*   THE RESERVE CHARACTERS COUNT IN THE LCB IS SET TO ZERO.  THE      *
*   SCAN POINTER IS INITIALIZED TO POINT TO THE LAST BYTE IN THE      *
*   PREFIX.  CONTROL PASSES TO THE TEXT-PROCESSING-INPUT SUBROUTINE   *
*   TO TEST FOR A ZERO-LENGTH BUFFER.                                 *
*                                                                     *
*   EXIT SUBROUTINE --                                                *
*   ON NORMAL ENTRY,  REGISTER 0 IS SET TO ZERO.  ON AN MBH ENTRY,    *
*   REGISTER 0 HAS ALREADY BEEN SET TO A NEGATIVE VALUE AND IS NOT    *
*   CHANGED.                                                          *
*                                                                     *
*   A VALUE OF X'1000' (4096 DECIMAL) IS SET IN REGISTER 2.  THE      *
*   ENTRY ADDRESS OF THE MESSAGE HANDLER IS COMPUTED.  REGISTER 0     *
*   IS THEN TESTED AND,  IF IT IS NEGATIVE,  ENTRY IS MADE TO THE     *
*   MESSAGE HANDLER WITH THE NEGATIVE CONDITION CODE (I.E.,  CONDI-   *
*   CODE OF 4).  OTHERWISE THE LCB IS TESTED TO DETERMINE IF THE      *
*   LINE IS SENDING OR RECEIVING AND THE RESULTING CONDITION CODE     *
*   IS PASSED TO THE MESSAGE HANDLER (SEND BIT ON = CONDITION CODE    *
*   OF 1,  SEND BIT OFF = 8).                                         *
*                                                                     *
*ENTRY POINTS --                                                      *
*       'IEDQAA01' TO INITIALIZE FOR PROCESSING A BUFFER THROUGH      *
*   THE MESSAGE HANDLER.  ENTRY IS FROM THE DISPATCHER VIA A POST     *
*   OF A BUFFER TO THE STARTMH QCB.                                   *
*                                                                     *
*INPUT --                                                             *
*   REGISTER 1 -- THE ADDRESS OF THE BUFFER TO BE PROCESSED           *
*                                                                     *
*   REGISTER 7 - THE ADDRESS OF THE STARTMH QCB                       *
*                                                                     *
*   REGISTER 13 - THE ADDRESS OF THE SAVE AREA FOR THE SUBTASK,       *
*   USED AS A BASE FOR AVT ADDRESSABILITY.                            *
*                                                                     *
*   REGISTER 15 - ENTRY POINT ADDRESS INTO THE STARTMH SUBTASK        *
*                                                                     *
*OUTPUT --                                                            *
*   REGISTER 2 - INCREMENT VALUE OF X'1000' USED FOR MULTIPLE         *
*   BASE REGISTER SUPPORT                                             *
*                                                                     *
*   REGISTER 12 - BASE REGISTER FOR THE MESSAGE HANDLER               *
*                                                                     *
*   CONDITION CODE - SET TO 4 FOR MULTIPLE-BUFFER HEADER RE-ENTRY,    *
*   1 FOR NORMAL RECEIVE PROCESSING,  OR 8 FOR NORMAL SEND            *
*   PROCESSING                                                        *
*                                                                     *
*EXTERNAL REFERENCES -                                                *
*   'IEDQAI' - SCAN ROUTINE                                           *
*                                                                     *
*   'IEDQAW' - TRANSLATE ROUTINE.                                     *
*                                                                     *
*   AVTRNMPT - TNT CODE                                               *
*                                                                     *
*   AVT - ADDRESS VECTOR TABLE.                                       *
*                                                                     *
*   BUFFER CURRENTLY BEING PROCESSED.                                 *
*                                                                     *
*   SCB - THE STATION CONTROL BLOCK FOR THE CURRENT STATION.          *
*                                                                     *
*   TERMINAL TABLE ENTRY                                              *
*                                                                     *
*   LCB - THE LINE CONTROL BLOCK.                                     *
*                                                                     *
*   MESSAGE HANDLER VCON TABLE (AVTMSGS).                             *
*                                                                     *
*   DCB - THE DATA CONTROL BLOCK.                                     *
*   SCT - SPECIAL CHARACTERS TABLE.                                   *
*                                                                     *
*                                                                     *
*EXITS,  NORMAL -- ENTRY IS MADE TO THE MESSAGE HANDLER.
*                                                                     *
*EXITS,  ERROR -- N/A.                                                *
*                                                                     *
*TABLES/WORK AREAS -- N/A.                                            *
*                                                                     *
*ATTRIBUTES -- SERIALLY REUSABLE,  REFRESHABLE,  ENABLED,             *
*   RESIDENT,  PROBLEM PROGRAM MODE.                                  *
*                                                                     *
*                                                                     *
*NOTES -- THE OPERATION OF THIS MODULE DOES NOT DEPEND UPON AN        *
*   INTERNAL REPRESENTATION OF THE EXTERNAL CHARACTER SET.            *
*                                                                     *
***********************************************************************
.A2      ANOP
         EJECT
********* REGISTER EQUATES *********
         SPACE
R0       EQU   0                        WORK REGISTER
         SPACE
R1       EQU   1                        PARAMETER LIST
         SPACE
RWORK2   EQU   2                        WORK REGISTER
         SPACE
RSCB     EQU   3                        SCB ADDRESS
         SPACE
RLCB     EQU   4                        LCB ADDRESS
         SPACE
RUCB5    EQU   5                        ADDRESS OF UCB
RWORK5   EQU   5                        WORK REGISTER            S99528
         SPACE
RPREFIX  EQU   6                        BUFFER ADDRESS
         SPACE
RQCB7    EQU   7                        ADDRESS OF STARTMH QCB
         SPACE
RSCT8    EQU   8                        SPECIAL CHARS TABLE ADDRESS
         SPACE
R9       EQU   9                        WORK REGISTER               TSO
RTQCB    EQU   9                        ADDR. OF TERMINAL'S QCB. S22029
         SPACE
RRET10   EQU   10                       F.E. RETURN REGISTER
RDCB     EQU   10                       DCB ADDRESS
RERB     EQU   10                       ERB ADDRESS              S99528
         SPACE
RDISP    EQU   11                       DISPATCHER ADDRESS
         SPACE
RBASE    EQU   12                       BASE OF ROUTINE
         SPACE
R13      EQU   13                       SAVE AREA
         SPACE
R14      EQU   14                       RETURN ADDRESS
         SPACE
R15      EQU   15                       ENTRY POINT
         SPACE
RAVT     EQU   9                                                 S22025
********* OTHER EQUATES *********
         SPACE
ZERO     EQU   0                        CONSTANT DISPLACEMENT    S99528
ONE      EQU   1                        BYTE OFFSET
TWO      EQU   2                        MOVE LENGTH FOR AN OFFSET
THREE    EQU   3                        MOVE LENGTH FOR AN ADDRESS
FOUR     EQU   4                        WORK OFFSET
FIVE     EQU   5                        CONSTANT DISPLACEMENT    S99528
CVTOFF   EQU   16                       OFFSET TO CVT            S22025
         SPACE
SCTEOA   EQU   1                        OFFSET TO EOA OFFSET
SCTOLT   EQU   13                       OFFSET TO OLT OFFSET
SCTCANCL EQU   27                       OFFSET TO OLT CANCEL OFFSET
         SPACE
SSOLTLEN EQU   6                        LNG OF START/STOP OLT    S22025
BSOLTLEN EQU   2                        LNG OF BISYNC OLT STRING
SSTOTLEN EQU   14
CANLEN   EQU   7                        LNG OF OLT CANCEL STRING
         SPACE
POSTPEND EQU   X'D0'                    POST PENDING FLAGS
         SPACE
PARMLEN  EQU   8                        LENGTH OF STARTMH PARM LIST
         SPACE
NOSTARTL EQU   X'F1'                    LCB SETTING TO PREVENT
*                                         ISSUANCE OF STARTLINE
         SPACE
TPDEVICE EQU   X'40'                    DEVICE CLASS = TP
IBM1030  EQU   X'21'                    DEVICE TYPE = IBM 1030
IBM2260R EQU   X'81'                    DEVICE TYPE = IBM 2260R
LGB      EQU   X'80'                    LINE GROUP BLOCK - 3705  S22024
         SPACE
LMDSTCB  EQU   X'0A'                    LMD FLAG                 S22025
         SPACE
MINUS    EQU   4                        CONDITION CODE: NEGATIVE
NOTON    EQU   14                       CONDITION CODE: NOT ON
SEVEN    EQU   7                        CONDITION CODE          SA52512
SCTEOT   EQU   20                       EOT INDEX OFFSET IN SCT SA52512
LASTNOFF EQU   X'04'                    FLAG SET BY RP WHEN     SA60343
*                                       SETTING A ZARO FEFO PRT SA60343
RNKEY    EQU   X'14'                    PRFKEY SETTING FOR TOTE  S22024
*                                         INDICATING MULTIPLE    S22024
*                                         BUFFER FROM 3705       S22024
C3270    EQU   X'04'                    3270 TERMINAL          @YA12287
CNOIDLES EQU   X'02'                    2260 TERMINAL          @YA12287
CLOCAL   EQU   X'02'                    LOCAL TERMINAL         @YA12287
STMHTSFG EQU   X'01'                    INDICATES TSO MH       @OZ16547
         EJECT
         DC    AL1(DSPMCPL2)            STCB
         DC    AL1(0)
         SPACE
         USING IEDQAA01,R15
         USING AVTSAVE2,R13
         SPACE
IEDQAA01 EQU   *
         AIF   ('&X' NE 'TSO').A8
IEDAYR   IEDHJN STARTMH .               MODULE ID AND DATE       S22025
         AGO   .A9
.A8      ANOP
IEDQAA   IEDHJN STARTMH .               MODULE ID AND DATE       S22025
.A9      ANOP
         TM    AVTAFE30,AVTEFF          IS DUMP REQUESTED
         BZ    SETBASE                  NO, GO SET NEW BASE
         SPACE
         L     RWORK2,AVTAFE30          YES, GET ROUTINE ADDRESS
         BALR  RRET10,RWORK2            LINK TO IT
         SPACE
SETBASE  EQU   *
         DROP  R15
         LR    RBASE,R15
         USING IEDQAA01,RBASE
         ST    R1,AVTADBUF              SET BUFFER ADDRESS
         LR    RPREFIX,R1               SAVE BUFFER ADDRESS
         USING IEDQPRF,RPREFIX
         L     RLCB,PRFLCB-1            LCB ADDRESS
         USING IEDQLCB,RLCB             ESTABLISH ADDRESSABILITY
         L     RSCB,LCBSCBA-1           SCB ADDRESS
         USING IEDQSCB,RSCB             ESTABLISH ADDRESSABILITY
         L     RDCB,LCBDCBPT            GET DCB ADDRESS FROM LCB
         USING IHADCB,RDCB
         SPACE
PFXSELEC EQU   *
         AIF   ('&X' NE 'TSO').A3
         TM    FOUR(RQCB7),STMHTSFG     TSO MH?                @OZ16547
         BZ    NOTSMH                   BRANCH IF NOT          @OZ16547
         TM    LCBSTAT1,LCBRECVN        LINE RECEIVING         @OZ16547
         BZ    NOTSMH                   NO, BRANCH             @OZ16547
         LH    R1,LCBTTCIN              GET SOURCE TERM INDEX  @OZ16547
         N     R1,AVTCLRHI              CLEAR HIGH ORDER HALF  @OZ16547
         BZ    NOTSMH                   BRANCH IF ZERO INDEX   @OZ16547
         L     R15,AVTRNMPT             TERMNAME CODE ADDRESS  @OZ16547
         BALR  R14,R15                  GET TERM ENTRY ADDRESS @OZ16547
         L     R1,TRMDESTQ-1-IEDQTRM(R1) GET QCB ADDRESS       @OZ16547
         TM    QCBTSOF1-IEDQQCB(R1),QCBDELAY QCB ON TIME DELAY @OZ16547
         BZ    NOTSMH                   NO, CHECK FOR SESSION  @OZ16547
         L     R15,AVTHG02              TIME DELAY REMOVAL     @OZ16547
         BALR  R14,R15                  LINK TO REMOVE QCB     @OZ16547
         TM    QCBFLAG-IEDQQCB(R1),QCBTSSES TSO SESSION?       @OZ16547
         BO    NOTSMH                   BRANCH IF YES          @OZ16547
         XC    QCBLKRRN-IEDQQCB(,R1),QCBLKRRN-IEDQQCB(R1)      @OZ16547
*                                        CLEAR CARCT AND TJID  @OZ16547
         MVC   QCBSLINK-IEDQQCB(THREE,R1),QCBSTCHN-IEDQQCB(R1)
*                                    RESET SCHEDULER LINK      @OZ16547
         LA    R14,QCBSTCHN-1-IEDQQCB(R1) SEND SCHED VTO ADDR  @OZ16547
         IC    R0,QCBSTCHN-1-IEDQQCB(R1)    RESET              @OZ16547
         ST    R14,QCBSTCHN-1-IEDQQCB(R1)     THE              @OZ16547
         STC   R0,QCBSTCHN-1-IEDQQCB(R1)        SCHEDULER      @OZ16547
NOTSMH   EQU   *                                               @OZ16547
         TM    LCBSTATE,LCBSENDN        SEND OPERATION           S22029
         BZ    TSCHK                    NO BRANCH                S22029
         L     R15,SCBDESTQ-1           GET DEST QCB ADDRESS     S22029
         TM    QCBFLAG-IEDQQCB(R15),QCBPROC IS THIS A PROCESS ENTS22029
         BO    TSO1                     YES, BRANCH              S22029
TSCHK    EQU   *                                                 S22029
         SR    R15,R15                  CLEAR REGISTER           S22029
         TM    LCBTSOB,LCBTSBUF         IS A TIME-SHARING        S22029
*                                       TERMINAL ON THIS LINE    S22029
         BZ    TSO1                     NO. CONTINUE MH FLOW     S22029
         OI    PRFSTAT1,PRFTSMSG        FLAG TIME-SHARING MSG    S22029
         SPACE
         STC   R15,LCBISZE              ZERO OUT IDLES COUNT        TSO
         TM    LCBSTAT1,LCBSENDN        SENDING                @YA12287
         BNO   TSO1                     BRANCH NO              @YA12287
         CLI   PRFPRI,PRIMHBFR-1        ERROR BUFFER           @YA12287
         BNE   TSO1                     BRANCH NO              @YA12287
         TM    SCBERR3,SCBATTN+SCBSATTN ATTENTION INTERRUPT    @YA12287
         BNZ   TSO1                     BRANCH YES             @YA12287
         LH    R1,LCBTTCIN              GET CONNECTED INDEX    @YA12287
         N     R1,AVTCLRHI              AND                    @YA12287
         L     R15,AVTRNMPT             LOCATE                 @YA12287
         BALR  R14,R15                  TERMINAL ENTRY         @YA12287
         USING IEDQTRM,R1                                      @YA12287
         L     R9,TRMDESTQ-1            GET QCB ADDRESS        @YA13265
         TM    AVTBIT3,AVTTSAB          TSO ABENDING           @YA13265
         BO    TSOISIZE                 BRANCH YES             @YA13265
         USING CVTSPC,RWORK2                                   @YA13265
         L     RWORK2,CVTPTR            LOAD CVT ADDRESS       @YA13265
         L     RWORK2,CVTTSCVT          GET TSO CVT ADDRESS    @YA13265
         DROP  RWORK2                                          @YA13265
         USING TSCVT,RWORK2                                    @YA13265
         LTR   RWORK2,RWORK2            TSO CVT PRESENT        @YA13265
         BZ    TSOISIZE                 BRANCH NO              @YA13265
         LH    R15,TSCVTSZU             LOAD TJB SIZE          @YA13265
         MH    R15,QCBTJID-IEDQQCB(,R9) GET TJB OFFSET         @YA13265
         A     R15,TSCVTTJB             POINT TO TJB           @YA13265
         DROP  RWORK2                                          @YA13265
         USING TJB,R15                                         @YA13265
         USING TSB,RWORK2                                      @YA13265
         L     RWORK2,TJBTSB            LOAD TSB ADDRESS       @YA13265
         TM    TJBSTAT2,TJBHUNG         TERMINAL               @YA13265
         BO    TSOISIZE                 BEING LOGGED           @YA13265
         TM    TSBSTAT,TSBDISC          OFF OR                 @YA13265
         BO    TSOISIZE                 HUNGUP                 @YA13265
         TM    QCBTSOF1-IEDQQCB(R9),QCBDISC USER BEING         @OZ15624
         BO    TSOISIZE                 LOGGED OFF             @OZ15624
         DROP  RWORK2                                          @YA13265
         DROP  R15                                             @YA13265
         OI    PRFSTAT1,PRFERMGN        SET ERROR FOR TSO      @YA12287
         NI    QCBTSOF1-IEDQQCB(R9),X'FF'-QCBSATRD RESET       @OY15569
*                                       SIMULATED ATTN READ    @OY15569
         SR    R15,R15                  CLEAR INDEX REGISTER   @YA12287
         IC    R15,TRMCHCIN             GET DCT INDEX          @YA12287
         BCTR  R15,0                    REDUCE FOR MULTIPLY    @YA12287
         SLL   R15,2                    MULTIPLY FOR ADDRESS   @YA12287
         A     R15,AVTCSTCS             GET ADDRESS OF DCT     @YA12287
         TM    1(R15),C3270             3270 DEVICE            @YA12287
         BO    TSOISIZE                 BRANCH YES             @YA12287
         TM    3(R15),CNOIDLES          2260 DEVICE            @YA12287
         BO    TSOISIZE                 BRANCH YES             @YA12287
         TM    2(R15),CLOCAL            LOCAL DEVICE           @YA12287
         BO    TSOISIZE                 BRANCH YES             @YA12287
         MVI   QCBCARCT-IEDQQCB(R9),AVTEFF   SET FOR CARRIAGE	 @YA12287
*                                       RETURN BEFORE RETRY    @YA12287
TSOISIZE EQU   *
         SR    R15,R15
         STC   R15,LCBISZE
TSO1     EQU   *
.A3      ANOP
         SR    R15,R15                  CLEAR REGISTER           S22029
         TM    PRFSTAT1,PRFNHDRN        TEST IF HEADER OR TEXT
         BO    TEXT                     TEXT,  GO PROCESS
*                                       HEADER,  FALL THROUGH
         SPACE
HEADER   EQU   *
         TM    LCBSTATE,LCBSENDN        TEST IF SEND OR RECEIVE
         BNO   HDRRCV                   RECEIVE, GO PROCESS
*                                       SEND, FALL THROUGH
         EJECT
HDRSEND  EQU   *
         AIF   ('&X' NE 'TSO').A4
         TM    PRFSTAT1,PRFTSMSG .      IS IT A TS MESSAGE       S22029
         BO    EXIT                     BRANCH ON YES TO EXIT       TSO
         SPACE
         SPACE
.A4      ANOP
         TM    PRFSTAT1,PRFCNCLN        IS THIS A RECALLED BUFFER
         BO    COMPIDLS                 YES, DON'T UPDATE FEFO
         SPACE
         SR    R0,R0 .                  CLEAR FOR INSERT         S22025
         IC    R0,SCBPRI                GET INDEX TO PRIORITY QCB
         LA    R1,QCBPSIZE              GET SIZE OF PRIORITY QCB
         MR    R0,R0                    MULTIPLY TO GET OFFSET
         L     RWORK2,SCBDESTQ-1        GET ADDRESS OF MASTER QCB
         USING IEDQQCB,RWORK2
         LA    R1,QCBMSIZE(RWORK2,R1)   GET ADDR OF PRIORITY QCB
         USING IEDQPQCB,R1
         CLC   SCBSCHDR,QCBLKRRN        QUEUED ADDR = LOCK MSG @OS76313
         BNE   NORRN                    BRANCH NO              @OS76313
         XC    QCBLKRRN,QCBLKRRN        CLEAR LOCK MSG ADDR    @OS76313
NORRN    EQU   *                                               @OS76313
         LA    RWORK2,SCBSCHDR          ASSUME FEFO ADDR IN SCB SA52971
         TM    SCBSCHDR+L'SCBSCHDR-1,CPBQTYPE CORE COPY OF DISK SA52971
*                                         BACKUP                SA52971
         BNZ   MOVEFEFO                 NO, GOT IT              SA52971
         L     RWORK2,SCBSCHDR-1        POINT TO QUEUED HEADER  SA52971
         LA    RWORK2,PRFCRCD-IEDQPRF(,RWORK2) POINT TO DISK ADRSA52971
MOVEFEFO EQU   *                                                SA52971
         CLC   AVTEZERO(3,RWORK2),QCBFFEFO IS IT TOP ON QUEUE   SA52971
         BNE   COMPIDLS                 NO, DON'T RESET         SA52971
         NC    QCBINTFF(3),QCBINTFF     IS QUEUE HELD           SA52971
         BNZ   JUSTPVF                  YES, DON'T UPDATE PFEFO SA52971
         MVC   QCBPFEFO(3),QCBPREVF     SHUFFLE TO LAST SRVCD   SA52971
*                                         MESSAGE               SA52971
         MVC   QCBPREVF(3),QCBFFEFO     KEEP POINTER TO THIS MSGSA52971
JUSTPVF  EQU   *                                                SA52971
         MVC   QCBFFEFO(THREE),SCBFEFO  UPDATE FEFO POINTER
         TM    QCBFFEFO+L'QCBFFEFO-1,CPBQTYPE                   SA60343
*              ARE THE FLAGS FOR DISK QUEUEING ON               SA60343
         BNZ   COMPIDLS                 BR IS NOT SET           SA60343
         NI    QCBFFEFO+L'QCBFFEFO-1,X'FF'-LASTNOFF             SA60343
*              RESET THE 'DO NOT UPDATE' FLAG SET BY RP FOR     SA60343
*              FA WHEN REMOVING THE LAST FEFO MESSAGE           SA60343
         DROP  RWORK2                                            S22029
         SPACE
COMPIDLS EQU   *
         SR    RWORK2,RWORK2 .           SET IDLES CNT TO ZERO   S22025
         CH    RWORK2,PRFSIZE           ZERO-LENGTH BUFFER
         BE    STORIDLS                 YES, LEAVE IDLES CT ZERO
         SPACE
         IC    RWORK2,PRFSCAN+1   NO, GET IDLES CT FROM BFR
         SPACE
STORIDLS EQU   *
         STC   RWORK2,LCBISZE           INITIALIZE LCB RESERVE CT
         LA    RWORK2,AVTHDRSZ(,RWORK2) ADD SIZE OF HEADER PREFIX
         SPACE
         LH    R1,PRFDEST               GET DESTINATION KEY
         N     R1,AVTCLRHI
         L     R15,AVTRNMPT             GET ADDRESS OF TNT CODE
         BALR  R14,R15                  LINK TO GET ETRM ENTRY ADDR
         SPACE
         USING IEDQTRM,R1
         SR    R9,R9                    CLEAR REG                S22025
         IC    R9,TRMSTATE              GET STATUS BYTE          S22025
         SRL   R9,FOUR                  SHIFT OUT OPTIONS        S22025
         CH    R9,AVTHA3                PROCESS SPEC DATE=YES    S22025
         BNE   NODATE                   NO, SCAN OK              S22025
         LA    RWORK2,PARMLEN(RWORK2)   BUMP SCAN FOR DATE/TIME  S22025
NODATE   EQU   *                                                 S22025
         STH   RWORK2,PRFSCAN           INITIALIZE SCAN          S22025
         TM    PRFSTAT1,PRFCNCLN        RECALLED                 S22025
         BO    EXIT                     YES, DON'T UPDATE SEQ OUTS22025
         NC    SCBOSEQ(2),SCBOSEQ       HAS SEQ OUT BEEN  UPDATE S22025
         BNZ   EXIT                     BRANCH IF YES            S22025
         LH    RWORK2,TRMOUTSQ          GET OUTPUT SEQUENCE NUMBER
         STH   RWORK2,SCBOSEQ           PASS IN SCB
         LA    RWORK2,ONE(,RWORK2)      INCREMENT BY ONE
         CH    RWORK2,CONMAX            IS MAXIMUM COUNT EXCEEDED
         BNH   UPCOUNT                  NO, PUT BACK UPDATED COUNT
         SPACE
         LA    RWORK2,ONE               NO, RESET COUNT TO ONE
         SPACE
UPCOUNT  EQU   *
         STH   RWORK2,TRMOUTSQ          STORE IT BACK
         B     EXIT                     RETURN TO MH
         EJECT
HDRRCV   EQU   *
         TM    PRFSTAT1,PRFCNCLN        IS THIS A RECALLED BUFFER
         BO    TESTRAN                  YES, GO TRANSLATE & EXIT
         SPACE
         SPACE
         LH    RWORK2,LCBTTCIN          INITIALIZE ORIGIN FIELD
         STH   RWORK2,PRFSRCE             IN PREFIX FROM LCB
         SR    RWORK2,RWORK2 .          CLEAR FOR INSERT         S22025
         IC    RWORK2,LCBISZE           PICK UP RESERVE CT FROM LCB
         TM    SCBQTYPE,SCBBFMM .       IS THIS MID-OF-MSG       S22025
         BNO   NOTLMD .                 NO, CONTINUE AS HEADER   S22025
         MVC   SCBDEOB+1(3),AVTADBUF+1  SET DEOB FOR THE CASE OF S22025
*                                         A DE-BLOCKED HEADER    S22025
         NI    SCBQTYPE,X'FF'-SCBBFMM . TURN OFF MID-OF-MSG      S22025
         OI    PRFSTAT1,PRFNHDRN .      SET AS TEXT BUFFER       S22025
         OI    PRFTIC,PRFBFMM .         SET AS HDR CHGD TO TEXT  S22025
         LA    RWORK2,AVTHDRSZ-AVTTXTSZ(,RWORK2)   ADD TO ISIZE  S22025
         B     REALTEXT .               BRANCH TO TREAT AS TEXT  S22025
         SPACE 1                                                 S22025
NOTLMD   EQU   *                                                 S22025
         TM    PRFTIC,PRFEOMSG          TEMPORARY END OF MSG    SA62383
         BNO   SKIPMM                   BR YES                  SA62383
         OI    SCBQTYPE,SCBBFMM         SET MIDDLE OF MESSAGE   SA62383
SKIPMM   EQU   *                                                SA62383
         LA    RWORK2,AVTHDRSZ(,RWORK2) ADD LNG OF HDR PREFIX
         ST    R15,SCBPRI .             CLEAR SCB PRIORITY       S22025
         CH    RWORK2,PRFSIZE           IS THERE DATA IN BUFFER?
         BL    SETSCPTR                 YES,GO SET SCAN PTR    @SA75454
         SPACE
         STH   R15,PRFSIZE              NO, SET SIZE TO ZERO
         SPACE
SETSCPTR EQU   *
         AIF   ('&X' NE 'TSO').A3A
         TM    PRFSTAT1,PRFTSMSG .     IS IT A TS MESSAGE        S22029
         BO    EXIT                     BRANCH ON YES TO EXIT
         SPACE
.A3A     ANOP
         STH   RWORK2,PRFSCAN           INITIALIZE PREFIX SCAN PTR
         STH   R15,PRFISEQ              INITIALIZE SEQ IN TO ZERO
         L     RSCT8,DCBSCTAD-1         GET SPEC CHARS TABLE ADDR
         LA    RSCT8,0(RSCT8)
         LTR   RSCT8,RSCT8              IS THERE NO SPEC CHARS TBL
         BZ    EXIT                     NO, SOURCE IS APPLICATION
*                                         PROGRAM,  RETURN TO MH
         CH    R15,PRFSIZE .             IS THIS A ZERO BUFFER   S22025
         BE    EOTCODE .                BRANCH IF YES           SA54959
EOTCODE1 EQU   *                                                SA54959
         SPACE
         L     R1,LCBSTCBA-1 .          LOAD ADDRESS OF STCB     S22025
         CLI   0(R1),LMDSTCB .          IS IT LMD STCB           S22025
         BE    EXIT .                   YES, RETURN              S22025
         SPACE
         LR     R1,RWORK2 .             SET PARAMETER FOR SCAN   S22025
         L     RAVT,CVTOFF              GET ADDRESS OF CVT       S22025
         L     RAVT,AVTCVTPT(,RAVT)     FIND POINTER TO AVT      S22025
         L     RAVT,AVTEZERO(,RAVT)     GET ADDRESS OF AVT       S22025
         CLI   SCTEOA(RSCT8),AVTEZERO   IS AN EOA SEQ DEFINED
         BE    TESTLOCK                 NO, PROCEED
         SPACE
         TM    LCBTSOB,LCB2741N         IS SOURCE AN IBM 2741
         BO    TESTLOCK                 YES, NO EOA, BRANCH
         SPACE
         LA     R15,SCTEOA .            GET EOA SEQUENCE OFFSET  S22025
         BAL   R14,LINKAL .             SCAN FOR EOA CHARACTER   S22025
         SPACE 1                                                 S22025
*   ON RETURN -- PRFDATOF WILL BE INCREMENTED IF EOA SEQUENCE    S22025
*            IS IN BUFFER                                        S22025
         SPACE 1                                                 S22025
         LR    R1,R0 .                  GET UPDATED SCAN OFFSET  S22025
         SR    RWORK5,RWORK5            ZERO REGISTER          @OY13651
         IC    RWORK5,LCBISZE           GET IDLE COUNT         @OY13651
         LA    R15,AVTHDRSZ(RWORK5,R15) GET BUFFER SIZE        @OY13651
         CH    R15,PRFSIZE              EOA ONLY BYTE IN BUF?  @OY13651
         BNE   NEOAONLY                 NO-CONTINUE            @OY13651
         SR    R15,R15                  SET UP TO CLEAR PRFSIZE@OY13651
         B     EOTCODE3                 CONT WITH 0-LNGTH BFR  @OY13651
NEOAONLY EQU   *                                               @OY13651
         TM    DCBDSORG,LGB             IS BLOCK A DCB OR LGB    S22024
         BO    TESTLOCK                 BRANCH IF LGB            S22024
         L     RUCB5,DCBDEBAD           GET ADDRESS OF DEB FROM DCB
         USING DEBNMSUB,RUCB5
         L     RUCB5,DEBUCBAD           GET ADDRESS OF UCB FROM DEB
         USING UCBOB,RUCB5
         CLI   UCBTBYT3,TPDEVICE        IS THIS A TP DEVICE
         BNE   TESTLOCK                 NO, GO TEST FOR LOCK
         SPACE
         IC    R15,UCBTBYT1             PICK UP MODEL BYTE
         STC   R15,AVTDOUBL             SET IT IN AVT WORK AREA
         MVZ   AVTDOUBL(ONE),UCBTBYT4   OVERLAY IT WITH ADAP BYTE
         CLI   AVTDOUBL,IBM1030         IS DEVICE AN IBM 1030
         BE    BUMPXTRA                 YES, BUMP SCAN ONE MORE
         SPACE
         CLI   AVTDOUBL,IBM2260R        IS DEVICE IBM 2260 REMOTE
         BNE   TESTLOCK                 NO, GO TEST FOR LOCK
         SPACE
BUMPXTRA EQU   *
         LA    R1,ONE(,R1) .            UPDATE SCAN OFFSET       S22025
TESTLOCK EQU   *
         TM    SCBSTATE,SCBLCK1N        TERMINAL IN LOCK MODE
         BNO   NOLOCK                  NO, BRANCH
         SPACE
         NI    LCBMSGFM,AVTEFF-LCBOLT   MAKE SURE OLT BIT IS OFF
         OI    PRFSTAT1,PRFLOCK         SET PREFIX LOCK BIT
         MVC   PRFDEST,LCBINSRC         GET INDEX IN TERMNAME TABLE
         MVI   LCBINSRC+2,POSTPEND      SET POST PENDING FLAGS
         LH    R1,PRFDEST
         N     R1,AVTCLRHI             SET UP FOR LINK TO TNT
         L     R15,AVTRNMPT
         BALR  R14,R15                 LINK TO GET TERM ENTRY ADDRESS
         SPACE
         MVC   SCBDESTQ,TRMDESTQ        SET DEST QCB ADDRESS
         B     EXIT                     EXIT TO MH              S22025
         SPACE
LOCKTEST EQU   *                                                SA52512
         TM    SCBSTATE,SCBLCK1N .      LOCK MODE               SA52512
         BNO   EXIT .                   NO, BRANCH              SA52512
         MVI   PRFSIZE+ONE,PRFSHDR+ONE-PRFSUNIT SET PRFSIZE     SA52512
         BAL   R14,EOTADDR              COMPUTE EOT ADDRESS     SA52512
         MVC   PRFSHDR(ONE),ONE(R1)     INSERT EOT IN BUFFER    SA52512
         MVI   LCBISZE,AVTEZERO .       CLEAR IDLES COUNT       SA52512
         B     TESTLOCK .               FINISH INQUIRY HANDLING SA52512
EOTADDR  EQU   *                                                SA52512
         L     RSCT8,DCBSCTAD-1         SPEC CHAR TABLE         SA52512
         SR    R1,R1                    CLEAR INDEX REGISTER    SA52512
         IC    R1,SCTEOT(RSCT8)         GET EOT INDEX           SA52512
         LA    R1,AVTEZERO(R1,RSCT8)    EOT ENTRY ADDRESS       SA52512
         CLI   AVTEZERO(R1),TWO         ETX/EOT                 SA52512
         BCR   SEVEN,R14                NO, RETURN              SA52512
         LA    R1,ONE(,R1)              BUMP PAST ETX           SA52512
         BR    R14                      RETURN                  SA52512
         SPACE
NOLOCK   EQU   *
         TM    LCBSTAT1,LCBOCNI         TEST FOR STOPLINE REQUEST
         BO    EXIT                     YES, EXIT TO MH NOW     S22025
         SPACE
         TM    LCBSTAT2,LCBSYNC         IS THIS BISYNC LINE
         BNO   TOTESS .                 NO, CHECK FOR TOTE STRINGS22025
         TM    LCBMSGFM,LCBOLT .        YES, IS THIS OLT MESSAGE S22025
         BNO   EXIT .                   NO, EXIT TO MH           S22025
         LA    R1,BSOLTLEN(,R1) .       UPDATE SCAN PARAMETER    S22025
         B     LINKERST .               CHECK FOR ERRORS         S22025
         SPACE 1                                                 S22025
         SPACE
TOTESS   EQU   *
         CLI   SCTOLT(RSCT8),AVTEZERO   OLT SEQ SPECIFIED        A44861
         BE    EXIT                     BRANCH IF NO             S22025
         LA    R15,SCTOLT .             GET OLT SEQUENCE OFFSET  S22025
         BAL   R14,LINKAL .             LINK TO SCAN             S22025
         SPACE 1                                                 S22025
         LR     R1,R0 .                 GET OFFSET RETURNED      S22025
         SPACE
         LPR   RWORK2,RWORK2            ADDRESS OF OLT SEQ     @SA74025
         SR    R0,R0                    CLEAR REG              @SA74025
         IC    R0,ZERO(,RWORK2)         LENGTH OF OLT SEQ      @SA74025
         CR    R0,R15                   WAS FULL SEQ FOUND     @SA74025
         BE    LINKERST                 YES,HOW ABOUT OLT      @SA74025
         SPACE
         TM    LCBTSOB,LCB2741N         IS IT IBM 2741
         BNO   EXIT .                   NO, NOT OLT, EXIT TO MH  S22025
         CLI   LCBFLAG1,AVTEZERO        IS THIS A PLCB?        @OY12671
         BE    EXIT                     YES,NO SECOND STRING   @OY12671
         SPACE 1                                                 S22025
         LA    RWORK2,SSTOTLEN(,RWORK2) POINT TO 2D OLT STRING   S22025
         BAL   R14,LINKAL2 .            SCAN FOR 2D TOTE STRING  S22025
         SPACE
         LPR   RWORK2,RWORK2            ADDRESS OF OLT SEQ     @SA74025
         SR    R0,R0                    CLEAR REG              @SA74025
         IC    R0,ZERO(,RWORK2)         LENGTH OF OLT SEQ      @SA74025
         CR    R0,R15                   WAS FULL SEQ FOUND     @SA74025
         BNE   EXIT                     NO OLT,GET OUT         @SA74025
         SPACE
LINKERST EQU   *                                                 S22025
         CLI   AVTOLTST,AVTEZERO .      IS ON-LINE TEST IN SYSTEMS22025
         BE    OLTERROR .               NO, SET ERROR BIT        S22025
         TM    PRFSTAT1,PRFNLSTN  IS MESSAGE CONTAINED IN ONE    S99528
*                                   BUFFER?                      S99528
         BO    OLTPRFER                 NO GO SEE IF 3705 BUFFER S22024
         TM    AVTBIT3,AVTOLTBN         OLT MAXIMUM LOAD REACHED
         BO    OLTERROR                 YES, SET ERROR BIT
         SPACE
         SPACE
SSFLAG   EQU   *
         LA    R15,AVTECD8              NO ERROR, SET BYTE FOR PFX
         TM    LCBSTAT2,LCBSYNC .       IS THIS A BISYNC LINE    S22025
         BNO   SETOTT .                 NO, FLAG IS SET CORRECTLYS22025
         LA    R15,AVTECD4              NO ERROR, SET BYTE FOR PREFIX
         NI    LCBMSGFM,AVTEFF-LCBOLT   TURN OFF ON-LINE TEST FLAG
         SPACE
SETOTT   EQU   *
         LA    RERB,LCBERB                     ERB ADDRESS       S99528
         TM    LCBERBST,LCBDLNKN        IS DLINK SWITCH SET      S99528
         BO    ERBFRE                   BRANCH NOT IN CHAIN      S99528
         LA    R1,AVTBFRTB-FOUR         BUFFER RETURN QCB        S99528
NEXT     EQU   *                                                 S99528
         LR    RWORK2,R1               SET TO NEXT ELEMENT       S99528
         L     R1,FOUR(ZERO,RWORK2)     FIRST/NEXT ELEMENT IN    S99528
*                                       CHAIN                    S99528
         LA    R1,ZERO(ZERO,R1)         CLEAR HIGH ORDER BYTE    S99528
         CLR   R1,RERB                  IS THIS THE ERB?         S99528
         BE    REMOVERB                 BR IF ERB FOUND          S99528
         C     R1,AVTDELAD              IS THIS THE DUMMY END    S99528
*                                       ELEMENT. IF YES,THIS     S99528
*                                       IS END OF THIS CHAIN     S99528
         BNE   NEXT                     BR NOT END OF CHAIN      S99528
         LA    R1,AVTREADY-FOUR         ADDRESS OF READY QUEUE   S99528
*                                        FOR LOOP                S99528
         B     NEXT                     SEARCH READY QUEUE      SA63640
REMOVERB EQU   *                                                 S99528
         MVC   FIVE(THREE,RWORK2),LCBERBLK REMOVE ERB           SA63640
         OI    LCBERBST,LCBDLNKN        SET ERB POSTABLE         S99528
ERBFRE   EQU   *                                                 S99528
         LA    RWORK2,AVTOLTQB          GET ADDRESS OF OLT QCB
*                               QUEUE POINTER                    S99528
         MVI   PRFPRI,PRIONLT           SET ON-LINE TEST PRIORITY
         ST    RWORK2,PRFRCB            SET IT IN THE BUFFER'S RECB
         STC   R15,PRFKEY               SET SOURCE BYTE IN PREFIX
         LR    R1,RPREFIX               PASS BUFFER ADDRESS
         MVI   LCBTSTSW,AVTEFF         SET NO SOURCE
         OI    LCBSTAT2,LCBNEGRP       INDICATE NEG. RESP.
         USING IEDQDISP,RDISP
         B     DSPPOST                  EXIT TO POST BUFFER TO QCB
OLTPRFER EQU   *                                                 S22024
         CLI   LCBFLAG1,AVTEZERO        IS THIS A PLCB?          S22024
         BNE   OLTERROR                 NO, BYPASS 3705 CODE     S22024
         OI    LCBMSGFM,LCBOLT          SET ONLINE TEST BIT      S22024
         LA    R15,RNKEY                SET PRFKEY TO 3705       S22024
*                                         MULTIPLE BUFFER        S22024
         MVI   PRFSTAT1,AVTEZERO        SET BUFFER STATUS TO     S22024
*                                         HEADER-LAST            S22024
         B     SETOTT                   GO POST BUFFER TO TOTE   S22024
         SPACE
OLTERROR EQU   *
         OI    SCBERR2,SCBOLTR          SET OLT ERROR BIT IN SCB
         B     EXIT .                   EXIT TO MH               S22025
         SPACE 2                                                 S22025
LINKAL   EQU   *                                                 S22025
         SR    RWORK2,RWORK2 .          CLEAR FOR INSERT         S22025
         IC    RWORK2,AVTEZERO(R15,RSCT8)  PICK UP SEQ OFFSET    S22025
         LA    RWORK2,0(RWORK2,RSCT8) . GET ADDR OF STRING       S22025
LINKAL2  EQU   *                                                 S22025
         LR    R0,RWORK2 .              SET FOR SCAN ROUTING     S22025
         LNR   RWORK2,RWORK2            DO NOT SKIP BLANKS     @SA74025
         L     R15,AVTAL                LOAD SCAN ROUTINE ADDR   S22025
         BR    R15 .                                             S22025
         EJECT
TEXT     EQU   *
         TM    LCBSTATE,LCBSENDN       SEND OR RECEIVE          SA68025
         BO    TXTSEND                  SEND, NOT TOTE REQUEST  SA68025
         TM    LCBMSGFM,LCBOLT          IS THIS AN ONLINE TEST   S22024
*                                         TEXT BUFFER            S22024
         BNO   TXTRCV                   NO, NOT A TOTE BUFFER   SA68025
         CLI   AVTOLTST,AVTEZERO        TOTE IN SYSTEM         @OX14795
         BNE   YESTOTE                  YES,CONTINUE           @0X14795
         TM    PRFSTAT1,PRFNLSTN        LAST                   @0X14795
         BO    TXTRCV                   NO,TREAT AS NORMAL     @OX14795
         NI    LCBMSGFM,AVTEFF-LCBOLT   TURN OFF OLT BIT       @OX14795
         B     TXTRCV                                          @OX14795
YESTOTE  EQU   *                        TOTE IN SYSTEM         @OX14795
         LA    RWORK2,AVTBFRTB          GET ADDRESS OF BUFFER    S22024
*                                         RETURN QCB             S22024
         IC    RWORK5,SCBDESTQ-ONE      SAVE FLAG BYTE           S22024
         ST    RWORK2,SCBDESTQ-ONE      PUT QCB ADDRESS IN SCB   S22024
         STC   RWORK5,SCBDESTQ-ONE      RESTORE FLAG BYTE        S22024
         MVI   PRFPRI,PRIBFRTB          PUT IN PRIORITY          S22024
         TM    PRFSTAT1,PRFNLSTN        IS THIS THE LAST BUFFER? S22024
         BO    BUFRET                   NO, GO POST BUFFER TO    S22024
*                                         BUFFER RETURN          S22024
         NI    LCBMSGFM,AVTEFF-LCBOLT   TURN OFF ONLINE TEST BIT S22024
         LA    RWORK2,AVTINOUT          GET ADDR OF DUMMY IN/OUT S22024
         IC    RWORK5,SCBMACR-ONE       SAVE HIGH ORDER BYTE     S22024
         ST    RWORK2,SCBMACR-ONE       PLACE ADDRESS IN SCB     S22024
         STC   RWORK5,SCBMACR-ONE       RESTORE HIGH ORDER BYTE  S22024
         L     RWORK2,AVTMSGS-ONE       GET VCON TABLE ADDRESS   S22024
         L     RWORK2,AVTEZERO(RWORK2)  GET ADDRESS OF BD'S QCB  S22024
         MVI   PRFPRI,PRIDSPLB          SET LOW PRIORITY         S22024
BUFRET   EQU   *                                                 S22024
         ST    RWORK2,PRFQCBA-ONE       PUT QCB ADDR IN BUFFER   S22024
         LR    R1,RPREFIX               PUT ADDR OF BUFFER IN R1 S22024
         B     DSPPOST                  EXIT TO POST BUFFER TO   S22024
*                                         QCB                    S22024
         SPACE
TXTSEND  EQU   *
         AIF   ('&X' NE 'TSO').A6
         TM    PRFSTAT1,PRFTSMSG .      IS IT A TS MESSAGE       S22029
         BO    TESTRAN                  YES, GO TRANS AND EXIT      TSO
         SPACE
         SPACE
.A6      ANOP
         MVI   LCBISZE,AVTEZERO         SET IDLES COUNT TO ZERO
         LA    RWORK2,AVTTXTSZ          GET SIZE OF TEXT PREFIX
         STH   RWORK2,PRFSCAN           INITIALIZE SCAN POINTER
         CH    R15,PRFSIZE              IS THIS A ZERO BFR      SA56222
         BE    EXIT                     IF 0 EXIT               SA56222
         B     TESTRAN1                 IF NOT 0 CONTINUE       SA56222
         SPACE
CHKLOCK  EQU   *                                                SA52512
         TM    SCBSTATE,SCBLCK1N .      LOCK MODE               SA52512
         BNO   EXIT .                   NO, BRANCH              SA52512
         MVI   PRFSIZE+ONE,PRFSTXT+ONE-PRFSUNIT SET PRFSIZE     SA52512
         BAL   R14,EOTADDR              COMPUTE EOT ADDRESS     SA52512
         MVC   PRFSTXT(ONE),ONE(R1)     INSERT EOT IN BUFFER    SA52512
         MVI   LCBISZE,AVTEZERO .       CLEAR IDLES COUNT       SA52512
         B     EXIT .                   END TEXT PROCESSING     SA52512
         SPACE
TXTRCV   EQU   *
         LH    R0,LCBTTCIN              INITIALIZE ORIGIN FIELD SA61771
         STH   R0,PRFSRCE                 IN PREFIX FROM LCB    SA61771
         AIF   ('&X' NE 'TSO').A65                                M6673
         TM    PRFSTAT1,PRFTSMSG .      IS IT A TS MESSAGE       S22029
         BNO   TSTEXIT                  NO, GO CHECK LOGON EXIT   M6673
         SR    RWORK2,RWORK2            CLEAR WORK REGISTER       M6673
         IC    RWORK2,LCBISZE           GET NUMBER OF IDLES       M6673
         LA    RWORK2,AVTTXTSZ(,RWORK2) ADD TEST PREFIX LENGTH   S22029
         CH    RWORK2,PRFSIZE           CHECK BUFFER DATA LENGTH  M6673
         BNE   TESTRAN                  BR IF NOT EMPTY         SA61771
         B     EOTCODE3                 HANDLE ZERO LENGTH BFR @ZA04049
TSTEXIT  EQU   *                                                  M6673
.A65     ANOP                                                     M6673
         SPACE
         TM    PRFSTAT1,PRFCNCLN        IS THIS A RECALLED BUFFER
         BO    TESTRAN                  YES, DON'T CHANGE SCAN
         SPACE
         SR    RWORK2,RWORK2            (CLEAR FOR INSERT)
         IC    RWORK2,DCBRESER+1        PICK UP NO. RESERVE CHARS
REALTEXT EQU   *                                                 S21101
         TM    PRFTIC,PRFEOMSG          TEMP END OF MESSAGE      S22025
         BZ    NOTEOM                   BRANCH NO                S22025
*                                                                S22025
         OI    SCBQTYPE,SCBBFMM         INDICATE MIDDLE  OF MSG  S22025
NOTEOM   EQU   *                                                 S22025
         STC   RWORK2,LCBISZE           SET COUNT IN LCB
NOIDLS2  EQU   *                                                 S22024
         LA    RWORK2,AVTTXTSZ(,RWORK2) ADD SIZE OF TEXT PREFIX
         STH   RWORK2,PRFSCAN           INITIALIZE SCAN PTR
         CH    RWORK2,PRFSIZE
         BL    TESTRAN                                         @SA75471
         XC    PRFSIZE(2),PRFSIZE
         TM    PRFSTAT1,PRFNLSTN        EOM BUFFER             @YA10671
         BNO   EOTCODE3                 BRANCH YES             @YA10671
         SPACE
TESTRAN  EQU   *
         CLC   AVTFZERO(TWO),PRFSIZE    ZERO LENGTH BUFFER ?     S22024
         BE    CHKLOCK .                YES, BRANCH             SA52512
TESTRAN1 EQU   *                                                SA56222
         TM    LCBSTATE,LCBSENDN .      IS LINE SENDING          S22025
         BNO   EXIT .                   IF RECEIVING, INHDR      S22025
*                                         WILL MAKE TESTS        S22025
         SPACE
         TM    SCBSTATE,SCBCODE         IS TRANSLATION REQUESTED
         BNO   TESTMBH                  NO, GO TEST FOR MBH
         SPACE
         L     R1,SCBTRANS-1            YES, GET CODE PARM LIST
         L     R15,AVTUI                GET USER INTERFACE ADDRESS
         BALR  R14,R15                  LINK TO TRANSLATE BUFFER
         SPACE
TESTMBH  EQU   *
         L     RWORK2,SCBMBHEN-1        GET MBH PARM LIST ADDR   A59509
         CLC   AVTINOUT,AVTEZERO(RWORK2) DOES IT POINT TO '0100' A59509
         BE    EXIT                     IT DOES, NO MBH, EXIT
         SPACE
         LNR   RWORK5,RWORK2            SET NEG REGISTER AS FLAG A59509
         BCT   RWORK2,MBHEXIT           DECR TO CLEAR FLAG BIT   A59509
*                                         AND EXIT TO RE-ENTER RTN
         EJECT
         SPACE
EXIT     EQU   *
         SR    RWORK5,RWORK5            ZERO FLAG REG - NO MBH   A59509
         SPACE
MBHEXIT  EQU   *
         AIF   ('&X' NE 'TSO').MIX0500                           S22029
         CLC   ONE(THREE,RQCB7),AVTFZERO ALTMH PRESENT           S22029
         BE    NOALTMH .                NO CONTINUE              S22029
         USING IEDQQCB,RTQCB                                     S22029
         SR    RTQCB,RTQCB                                       S22029
         CLI   LCBFLAG1,AVTEZERO        IS THIS 3705 PLCB        S22024
         BE    NOTDIAL                  BRANCH ON YES            S22024
         TM    LCBSTAT2,LCBDIAL .      IS IT A DIAL LINE         S22029
         BZ    NOTDIAL .                NO  BRANCH               S22029
         LH    R1,LCBLNENT .            OFFSET TO LINE ENTRY     S22029
         B     TERMENT .                TO GET TERM ENTRY        S22029
NOTDIAL  EQU   * .                                               S22029
         LH    R1,LCBTTCIN .            INDEX TO CURRENT TERM    S22029
TERMENT  EQU   * .                                               S22029
         N     R1,AVTCLRHI              CLEAR HIGH AND TEST      A59509
         BZ    NOALTMH                  NO.CANNOT LOCATE ALTMH   S22029
         L     R15,AVTRNMPT .           ADDRESS OF TERMNAME TBL  S22029
         BALR  R14,R15 .                GET TERMINAL ENTRY       S22029
         USING IEDQTRM,R1 .                                      S22029
         L     RTQCB,TRMDESTQ-1         GET DESTINATION ADDRESS  S22029
         TM    QCBDSFLG,QCBALTMH .      ALTERNATE MH             S22029
         BZ    NOALTMH .                NO CONTINUE              S22029
         L     RQCB7,AVTEZERO(,RQCB7)   GET ALTMH                S22029
NOALTMH  EQU   * .                                               S22029
.MIX0500 ANOP                                                    S22029
         LR    R1,RWORK2                SET MBH PARAMETER IN     A59509
*                                        CORRECT REG FOR EXIT    A59509
         L     R15,AVTUI                GET USER INTERFACE ADDR  A59509
         LH    RWORK2,CONBASE           SET INCR VALUE IF MULT BASE
         SR    RBASE,RBASE              (CLEAR FOR INSERT)
         IC    RBASE,PARMLEN(,RQCB7)    PICK UP LNG OF PARM LIST
         LA    RBASE,AVTEZERO(RQCB7,RBASE) GET 1ST INSTRUCTION ADDR
         LTR   RWORK5,RWORK5            MBH RE-ENTRY NEEDED      A59509
         BCR   MINUS,RBASE              YES, PASS MINUS TO MH
         SPACE
         TM    LCBSTAT1,LCBSENDN        NO, TEST IF SENDING
         BR    RBASE                    ENTER MH, SELECT IN OR OUT
         EJECT
EOTCODE  EQU   *                                                SA54959
         TM    SCBERR4,SCBTXTTN .       TEXT TRANSFER ERROR     SA54959
         BNO   LOCKTEST .               BRANCH IF NO            SA54959
EOTCODE3 EQU   *                                                SA54959
         STH   R15,PRFSIZE .            SET ZERO LENGTH         SA54959
         L     R15,DCBSCTAD-1 .         SPECIAL CHAR TABLE      SA54959
         SR    R1,R1 .                  CLEAR INDEX REGISTER    SA54959
         MVI   LCBISZE,AVTEZERO .       CLEAR IDLES COUNT       SA54959
         IC    R1,SCTEOT(R15) .         GET EOT INDEX           SA54959
         LA    R1,AVTEZERO(R1,R15) .    EOT ENTRY ADDRESS       SA54959
         CLI   AVTEZERO(R1),TWO .       ETX/EOT                 SA54959
         BNE   EOTCODE2 .               BRANCH IF NO            SA54959
         LA    R1,ONE(,R1) .            BUMP PAST ETX           SA54959
EOTCODE2 EQU   *                                                SA54959
         SR    R15,R15 .                CLEAR WORK REGISTER     SA54959
         TM    PRFSTAT1,PRFNHDRN .      HEADER BUFFER           SA54959
         BNO   EOTCODE4 .               BRANCH IF YES           SA54959
         MVC   PRFSTXT(ONE),ONE(R1) .   INSERT EOT IN BFR       SA54959
         MVI   PRFSIZE+ONE,PRFSTXT+ONE-PRFSUNIT SET PRFSIZE     SA54959
         TM    SCBERR4,SCBTXTTN+SCBSLCTN+SCBCONNN              @OY15001
*                            TEXT, SELECTION OR CONNECT ERROR? @OY15001
         BNZ   ERROR1                   YES, SET UNIT EXCEPTION
         TM    SCBERR1,SCBCUTFN         CUTOFF EXECUTED        @OY15001
         BNO   TESTRAN                  NO, CONTINUE           @OY15001
ERROR1   EQU   *                                               @OY15001
         OI    LCBCSW+CSWST1,UNEX       SET EOT RECEIVED       @OY12280
         B     TESTRAN .                CONTINUE PROCESSING     SA54959
EOTCODE4 EQU   *                                                SA54959
         TM    SCBSTATE,SCBLCK1N .      LOCK MODE               SA54959
         BNO   EOTCODE5 .               BRANCH IF NO            SA54959
         MVC   PRFSHDR(ONE),ONE(R1) .   INSERT EOT IN BFR       SA54959
         MVI   PRFSIZE+ONE,PRFSHDR+ONE-PRFSUNIT SET PRFSIZE     SA54959
         TM    SCBERR4,SCBTXTTN+SCBSLCTN+SCBCONNN              @OY15001
*                            TEXT, SELECTION OR CONNECT ERROR? @OY15001
         BNZ   ERROR2                   YES, SET UNIT EXCEPTION@OY15001
         TM    SCBERR1,SCBCUTFN         CUTOFF EXECUTED?       @OY15001
         BNO   EOTCODE1                 NO, CONTINUE           @OY15001
ERROR2   EQU   *                                               @OY15001
         OI    LCBCSW+CSWST1,UNEX       SET EOT RECEIVED       @OY12280
         B     EOTCODE1 .               CONTINUE PROCESSING     SA54959
EOTCODE5 EQU   *                                                SA54959
         XC    SCBMRFSD(4),SCBMRFSD .   CLEAR MULTI ROUTE       SA54959
         LA    R1,AVTBFRTB .            BUFFER RETURN QUEUE     SA54959
         ST    R1,AVTDOUBL .            WORKAREA                SA54959
         MVC   SCBDESTQ(3),AVTDOUBL+1 . SET FOR BFR RETURN      SA54959
         B     EXIT .                   SCRAM                   SA54959
         SPACE
********* CONSTANTS *********
         SPACE
CONMAX   DC    H'9999'                  MAXIMUM SEQUENCE NUMBER
CONBASE  DC    H'4096'                  INCREMENT VALUE FOR
*                                         MULTIPLE BASE REGISTERS
HONE     DC    H'1'                     HALFWORD FOR COMPARE   @OY13651
CSWST1   EQU   3                        OFFSET TO CSW STATUS   @OY12280
UNEX     EQU   X'01'                    MASK FOR UNIT EXCEPTION@OY12280
         EJECT
         IKJTSCVT
         EJECT
         IKJTSB
         EJECT
         IKJTIOCP
         EJECT
         IKJTJB
         EJECT
CVTSPC   EQU   *                                               @YA13265
         CVT
         EJECT
********* DSECTS *********
         SPACE
         TAVTD
         EJECT
         DCBD  DSORG=TX
         EJECT
         TDEBD
         EJECT
         TDISPD
         EJECT
         TLCBD
         EJECT
         TPRFD
         EJECT
         TPRIOR
         EJECT
         TQCBD
         EJECT
         TSCBD
CPBQTYPE EQU   X'03'                    RRN QUEUING MEDIA FLAGS SA52971
         EJECT
         TTRMD
         EJECT
         IEFUCBOB
         EJECT
         TLGBD ,                                                 S22024
         SPACE
         MEND
