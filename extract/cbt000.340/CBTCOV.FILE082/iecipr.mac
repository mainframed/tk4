         MACRO
         IECIPR  &STAR,&SPEC,&LOC,&M65MP,&LOAD2
         LCLB  &A,&B,&C,&D,&E,&L1,&LA,&LB,&MP                      LOD3
         LCLB  &TS                                                20001
.*       RELEASE 21.7
.*  564900-565500,452700,824400                                 SA41451
.*       RELEASE 21.6
.* D301500-306000,308700                                         A49437
.*
.* 871200,882920,883660,891200-891400,894600,900900,902700,909000BBBBBB
.* 565200                                                         19022
.* 526500-534600                                                 A24169
.* 749000-750200                                                 A29206
.* 440100                                                        A42167
.* 400500,401400,429300,619800                                   M5401
.* 295210                                                        A46393
.*                                                               A44449
.*                                                                M0100
.* 312300-312700,852300                                           M2181
&MP      SETB  ('&M65MP' EQ '1' OR '&M65MP' EQ 'M65MP')
&LA      SETB  ('&LOAD2' EQ 'A')        SET SWITCH IF TCB LOAD     LOD3
&LB      SETB  ('&LOAD2' EQ 'B')        SET SWITCH IF DEB LOAD     LOD3
&C       SETB  ('&STAR' EQ '12')
&D       SETB  ('&STAR' EQ '16')
&E       SETB  ('&LOC' EQ 'RES') RESIDENT CODE
&A       SETB  ('&LOC' NE 'RES') NON-RESIDENT CODE
&B       SETB  ('&SPEC' EQ 'SPECIAL') ABEND CODE
&TS      SETB  ('&SPEC' EQ 'TCB')                                 20001
         AIF   (&B).SKIPA0
         AIF   (&D).LOD1                TEST FOR 16*               LOD3
         AIF   (&LA OR &LB).LOD2        TEST FOR 1A OR 1B LOADS    LOD3
&L1      SETB  1                        SET PCP/MFT LOAD 1 SWITCH  LOD3
.LOD1    ANOP                                                      LOD3
IGC016   START
         AGO   .LOD2A
.LOD2    ANOP
IGC016&LOAD2  START  0                                             LOD3
.LOD2A   ANOP
*
*
*                        SVC PURGE ROUTINE
*
*    FUNCTION.      THIS ROUTINE REMOVES I/O REQUESTS FROM
*                    THE ASYNCHRONOUS EXIT QUEUE, THE RB QUEUE,
*                    AND THE IOS LOGICAL CHANNEL QUEUES.
*
*       ENTRY.      SVC 16, VIA THE INTERRUPT HANDLER.
         AIF   (&A).SKIPA2
*                    ENTRY ALSO BY DIRECT BRANCH.
.SKIPA2  ANOP
*
*       INPUT.      ADDRESS OF INPUT PARAMETERS, IN GENERAL
*                    REGISTER 1.
*
*      OUTPUT.      NONE
*
*     EXT REF.      CVT, FOR ADDRS. OF AEQ, NEXT AVAILABLE,
*                    RQE LIST, LOGICAL CHANNEL TABLE,
         AIF   (&D).SKIPA4
*                    AND POST ROUTINE.
         AGO   .SKIPA6
.SKIPA4  ANOP
*                    POST ROUTINE, AND THE SIRB IN THE
*                    EXIT EFFECTOR.
.SKIPA6  ANOP
*
*  ERROR MSGS.      NONE
*
*
*   OPERATION.      INPUT PARAMETERS
*                   WORD 1
*                    BYTE 1
*                       PURGE OPTIONS (SEE BELOW)
*                    BYTES 2,3,AND 4
*                       DEB ADDRESS
*                   WORD 2
*                    BYTE 1
*                       COMPLETION CODE
*                    BYTES 2,3, AND 4
*                       TCB ADDRESS
*                   WORD 3
*                    BYTE 1
*                       COUNT FIELD FOR QUIESCE OPTION
*                    BYTES 2,3, AND 4
*                       ADDRESS OF LINK FIELD FOR CHAINING IOBS
*                   OPTION BYTE (WORD 1, BYTE 1)
*                    BIT 0     SPECIFIED DEB OR DEB CHAIN
*                        = 0 - PURGE DEB CHAIN
*                        = 1 - PURGE DEB SPECIFIED IN WORD 1
*                    BIT 1     POST OR DO NOT POST REQUESTS
*                        = 0 - DO NOT POST
*                        = 1 - POST AS PURGED X'48'
*                    BIT 2         HALT I/O OR QUIESCE ACTIVE REQUESTS
*                        = 0 - QUIESCE ACTIVE REQUESTS
*                        = 1 - HALT I/O ACTIVITY
*                    BIT 3     PURGE ALL OR RELATED ONLY
*                        = 0 - PURGE ALL REQUESTS
*                        = 1 - PURGE ONLY RELATED REQUESTS
         AIF   (&TS).TS00                                         20001
*                    BIT 4     NOT USED
         AGO   .TS01                                              20001
.TS00    ANOP                                                     20001
*                    BIT 4     LIST REQUEST OR NORMAL             20001
*                        = 0 - NORMAL PURGE                       20001
*                        = 1 - PURGE TCB LIST                     20001
.TS01    ANOP                                                     20001
*                    BIT 5     PURGE I/O SUPERVISOR QUEUE ONLY
*                        = 0 - PURGE ALL QUEUES
*                        = 1 - PURGE I/O LCH QUEUES ONLY
*                    BIT 6     PURGE BY TCB OR DEB
*                        = 0 - PURGE BY DEB
*                        = 1 - PURGE BY TCB
*                          NOTE - THIS BIT MUST BE 0 IN ORDER TO HONOR
*                                 BIT 0.IF THIS BIT IS 1, ALL REQUESTS
*                                 ASSOCIATED WITH THE TCB ARE PURGED,
*                                 AND BIT 0 IS IGNORED.
*                    BIT 7 - NOT USED
*
*        ACCORDING TO THE SPECIFIED OPTIONS,THIS ROUTINE PURGES
*        REQUEST ELEMENTS, SCANNING THE AIQ, RBQ, RQE LIST, AND LCHS.
*
*
*       RESTRICTION...
*
*        1. IRB ROUTINES ISSUING 'PURGE' WITH THE HIO OPTION WILL NOT
*        HAVE CONTROL RETURNED TO THEM...THIS ROUTINE WILL SET THEIR
*        RESUME PSW TO SVC 3.
*
*
*       NOTES...
*
*        1. WHEN HIO ON TCB OPTION IS GIVEN, RESTORING THE I/O RQES
*        CANNOT BE DONE.
*
*        IN HIO OPTION, RQES ARE DEQUEUED AND RETURNED TO
*        THE 'NEXT AVAILABLE' LIST, IOBS ARE NOT CHAINED TO A LINK
*        FIELD-THUS THEY CANNOT BE RESTARTED.
*
*        2. IN QUIESCE OPTION, THE PURGE CHAIN FIELD OF THE PARAMETER
*        LIST CANNOT POINT TO ITSELF.
*
*        3. IN QUIESCE OPTION, CHAIN FIELD IN THE INPUT PARMETER LIST
*        WILL POINT TO LAST IOB ON RESTART CHAIN AT THE END OF THIS
*        ROUTINE.
*
*        IN QUIESCE OPTION, REQUESTS ELEMENTS IN IOS LCHWRDS ARE DEQUED
*        AND RETURNED TO THE 'NEXT AVAILABLE' LIST,THE IOBS ARE CHAINED
*        TO THE LINK FIELD SPECIFIED IN THE INPUT PARMETER LIST, AND
*        IF POST OPTION IS SPECIFIED THEIR ECB WILL BE POSTED 'PURGED'.
*        REQUESTS ELEMENTS IN THE AEQ,RBQ, AND ON ACTIVE UCBS WILL NOT
*        BE DEQUEUED OR POSTED IN THE ECB. THE PURGE COUNT WILL REFLECT
*        THE NUMBER OF REQUESTS TO BE QUIESCED.
*
*
*        THIS ROUTINE HAS THE FACILITIES OF...MULTIPLE DEB EXTENT PURGE
*        POSTING, HIO, ABEND PURGE, PURGE BY TCB OR DEB
         AIF   (&C).SKIPA8
*
*                   IF THE SIRB IS ACTIVE AND IT IS THE HIO OPTION,
*                    THE RQE IS RETURNED TO NEXT AVAILABLE. THE RESUME
*                    PSW IS ALTERED TO POINT TO THE SVC EXIT, THUS
*                    TERMINATING ERROR PROCESSING. IF QUIESCING, THE
*                    ERROR PROCESSING IS ALLOWED TO FINISH.
.SKIPA8  ANOP
         EJECT
.SKIPA0  ANOP
         AIF   (&C).SKIPB0
         EXTRN SIRB
.SKIPB0  ANOP
*
*                        REGISTERS
*
EXTREG   EQU   0    DEB EXTENT REGISTER
         AIF   (&C AND NOT &B).NOQUS
QUSWK1   EQU   10                       QUIESCE WORK REG
QUSWK2   EQU   11                       QUIESCE WORK REG
QUSWK3   EQU   12                       QUIESCE WORK REG
.NOQUS   ANOP
INPREG   EQU   1   *INPUT REGISTER FOR PARAMS
WKREG2   EQU   2    WORK REGISTER
         AIF   (&B).SKIPB4
CVTREG   EQU   3   *CVT REGISTER
.SKIPB4  ANOP
TCBREG   EQU   4   *TCB REGISTER
LCHREG   EQU   5    LOGICAL CHANNEL AND QUE REGISTER
         AIF   (&B).SKIPB6
RBREG    EQU   5                       *RB REGISTER
BASREG   EQU   6   *BASE REGISTER
.SKIPB6  ANOP
DEBREG   EQU   7    DEB REGISTER
         AIF   (NOT &TS).TS02                                     20001
QPLREG   EQU   7                        POINTER TO PURGE LIST     20001
.TS02    ANOP                                                     20001
HIOUCB   EQU   8                        UCBREG FOR HIO
WKREG1   EQU   8    WORK REGISTER, BACKLINK PNTR
RQEREG   EQU   9    RQE REGISTER
UCBREG   EQU   10   UCB REGISTER
IOBREG   EQU   11   IOB REGISTER
ECBREG   EQU   IOBREG                   ECB ADDRESS REG
         AIF   (&B).SKIPB8
CHNREG   EQU   12   CHAIN REGISTER
         AGO   .SKIPC0
.SKIPB8  ANOP
CVTREG   EQU   12
.SKIPC0  ANOP
LKREG1   EQU   13   LINK REGISTER 1ST LEVEL
LKREG2   EQU   14   LINK REGISTER 2ND LEVEL AND EXTERNAL
HIOLNK   EQU   15                       HALT IO LINK REGISTER
LKREG3   EQU   15   LINK REGISTER 3RD LEVEL
RTCDRG  EQU   15                       RETURN CODE REGISTER
AEQREG   EQU   LCHREG
IRBREG   EQU   LCHREG
         AIF   (&B).SKIPC4
IDXREG   EQU   IOBREG   INDEX REG. FOR DEB EXTENTS
*
*    *NOTE     THE *'D REGISTERS ARE PRE-LOADED IN THE SVC HANDLER.
*               'RESIDENT' PURGE INITIALIZES THEM ITSELF.
*              BRANCH ENTRY SHOULD INITIALIZE REG. 5 WITH RB ADDR.
.SKIPC4  ANOP
*
*   PURGE PARAMETER OFFSETS
*
PRGOPT   EQU   0                        OPTION BYTE OFFSET
PRGDEB   EQU   1                        DEB ADDRESS OFFSET
PRGCOD   EQU   4                        COMPLETION CODE OFFSET
PRGTCB   EQU   5                        TCB ADDRESS OFFSET
PRGCTR   EQU   8                        COUNT FIELD OFFSET
PRGCHN   EQU   9                        IOB CHAIN ADDRESS OFFSET
         AIF   (NOT &TS).TS03                                     20001
PRGFLG   EQU   12                       OFFSET TO PURGE EXT FLAGS 20001
PRGQPL   EQU   13                       OFFSET TO QUIEXCE TCB LIST20001
*   PURGE FLAGS
PRGFENT  EQU   X'80'                    ENTRY FLGAG 0=PURGE - 1=WAIT
PRGFWT   EQU   X'40'                    WAIT FLAG 1=WAIT FOR I/O  20001
PRGFDEQ  EQU   X'20'                    DEQ FLAG  1=NO DQ BEFORE WAIT
*   QPL OFFSETS
QPLTOT   EQU   0                        COUNT FIELD               20001
QPLIOB   EQU   0                        OFFSET TO IOB             20001
QPLFLG   EQU   4                        OFFSET TO FLAGS FIELD     20001
QPLTCB   EQU   5                        OFFSET TO TCB ADDRESS     20001
*   QPL FLAGS                                                     20001
QPLFCUR  EQU   X'40'                    QPL CURRENT ENTRY FLAG    20001
QPLFLST  EQU   X'80'                    QPL LAST ENTRY FLAG       20001
*   MISC QPL OFFSETS                                              20001
QPLBAS   EQU   4                        SIZE OF QPL BASE          20001
QPLSIZ   EQU   8                        SIZE OF QPL ENTRY         20001
.TS03    ANOP                                                     20001
*
*   CVT OFFSETS
*
CVTTCB   EQU   0                        TCB ADDRESS
CVTEXIT  EQU   80                       EXIT ADDRESS
CVTIOQ   EQU   120                      RQE LIST ADDR
CVTIXA   EQU   124                      NEXT AVAILABLE ADDR
CVTNUC   EQU   128                      LOWEST ADDRESS BOUNDARY
CVTILCH  EQU   140                      LCH TABLE ADDR
CVTIER   EQU   144                      ERRLCH ADDRESS
CVT0PT   EQU   152                      POST ROUTINE ADDR
         AIF   (NOT &MP).MPSKP
CVTMPCVT EQU   192                      MP CVT SECONDARY ADDRESS
CVTTKRM  EQU   12                       TASK REMOVAL ADDRESS
.MPSKP   ANOP
*
*   REQUEST ELEMENT OFFSETS
*
RQELNK   EQU   0                        LINK FIELD
RQEUCB   EQU   2                        UCB ADDRESS
RQEIDT   EQU   4                        IDENTITY BYTE
RQEIOB   EQU   5                        IOB ADDRESS
RQEPRI   EQU   8                        PRIORITY FIELD
RQEDEB   EQU   9                        DEB ADDRESS
         AIF   (&D).RQE01               IS IT 16*
RQETCB   EQU   4                        TCB ID
         AGO   .RQE02
.RQE01   ANOP
RQETCB   EQU   13                       TCB ADDRESS
.RQE02   ANOP
*
*   UCB OFFSETS
*
UCBCHM   EQU   1                        CHANNEL MASK
UCBID    EQU   2                        UCB IDENT BYTE OFFSET
UCBSTA   EQU   3                        STATUS 'A'
UCBCHA   EQU   4                        CHANNEL ADDRESS
UCBFLG   EQU   6                        FLAG BYTE
UCBETI   EQU   8                        ERROR TAB INDEX
UCBLCH   EQU   10                       LCHTAB BYTE
UCBTYP   EQU   16                       TYPE FIELD
UCBLTS   EQU   20                       LAST RQE
UCBSQC   EQU   40                       SEEK QUE ADDRESS
*
*   DEB OFFSETS
*
DEBTCB   EQU   1                        OFFSET TO DEB TCB ADDRESS 20001
DEBNXT   EQU   5                        NEXT DEB ADDRESS
DEBQUS   EQU   13                       PURGE COUNT FIELD IN DEB
DEBNEX   EQU   16                       NUMBER OF EXTENTS
DEBPRI   EQU   20                       DEB PRIORITY BYTE
DEBECB   EQU   21                       DEB PURGE ECB ADDRESS
DEBSIZ   EQU   28                       EXTENT SIZE
DEBEXT   EQU   32                       FIRST EXTENT
*
*   TCB OFFSETS
*
TCBRB    EQU   0                        RB ADDRESS OFFSET
TCBPTK   EQU   28                       PROTECT KEY FIELD OFFSET
         AIF   (NOT &MP).MPSKPA
TCBFLGS  EQU   29                       TCB TASK FLAGS
.MPSKPA  ANOP
         AIF   (&B).ABND
TCBIDF   EQU   112                      IDENTIFIER FIELD OFFSET
.ABND    ANOP
*
*   IOB OFFSETS
*
IOBFL    EQU   0                        IOB FLAGS 1
IOBCOD   EQU   4                        ECB CODE
IOBECB   EQU   5                        ECB ADDRESS
IOBCHN   EQU   24                       CHAIN ADDRESS AREA
*
*   REQUEST BLOCK OFFSETS
*
RBLNK    EQU   29                       RB LINK FIELD OFFSET
RBTAB    EQU   10                       RB FLAGS
RBRQE    EQU   24                       RB RQE ADDRESS
RBPSW    EQU   16                       RESUME PSW
RBEXT    EQU   96                       EXTENDED SAVE AREA
*
*   SW1 EQUATES
*
MTCHSW   EQU   X'80'                    UCB MATCH-NOT PRGED INDICATOR
DSKSW    EQU   X'40'                    DISK INDICATOR
PSTSW    EQU   X'20'                    POST FLAG INDICATOR
*
*   OPTION FIELD EQUATES
*
DEBCHN   EQU   X'80'    DEB CHAIN OPTION
PSTOPT   EQU   X'40'    POST OPTION
HIOOPT   EQU   X'20'    HALT I/O OPTION
RELOPT   EQU   X'10'    'RELATED' OPTION
         AIF   (NOT &TS).TS04                                     20001
LSTOPT   EQU   X'08'                    LIST OPTION               20001
REENTER  EQU   4                        REENTER CODE              20001
.TS04    ANOP                                                     20001
SPOPSW   EQU   X'04'    SPECIAL OPTION
DEBOPT   EQU   X'02'    DEB OPTION
*
*   SYMBOLIC EQUATES
*
UCBHIO   EQU   X'80'    UCB'S HIO FLAG
UCBREL   EQU   X'20'                    RELEASE INDICATOR
UCBBSY   EQU   X'80'    UCB'S BUSY FLAG
UCBNRY   EQU   X'40'     NOT READY INDICATOR
UCBPST   EQU   X'20'    UCB'S POST FLAG
UCBRR    EQU   X'20'                    SHARABLE DEVICE INDICATOR
UCBDTR   EQU   X'04'    UCB'S DATA TRANSFER FLAG
UCBASK   EQU   X'02'    UCB'S ARM SEEKING FLAG
UCBERR   EQU   X'01'                    ERROR ROUTINE IN CONTROL
UCBDA    EQU   X'20'    DIRECT ACCESS TYPE UCB
UCBDRM   EQU   X'02'    DRUM TYPE UCB
UCBCUB   EQU   X'08'    CONTROL UNIT BUSY FLAG
BURST    EQU   X'20'    BURST TYPE UCB
CATBIT   EQU   X'0E'    CATASTROPHIC ERROR TEST
CSWLOC   EQU   64
SYSCON   EQU   X'82'    SYSTEM CONSOLE TYPE UCB
IRBRB    EQU   X'C0'    IRB TYPE RB
RBACTV   EQU   X'40'    RB ACTIVE FLAG
IRBIQE   EQU   X'0C'    TYPE OF IQES ON IRB
IRBNRT   EQU   X'08'                    NO RETURN OF IQE         BBBBBB
IOBERR   EQU   X'20'                    IOB ERROR FLAG           BBBBBB
IOBREL   EQU   X'02'    IOB RELATED FLAG
ENDQUE   EQU   X'01'    END OF LCH OR SEEK QUE, OR RQES
ENDIQE   EQU   X'00'    IQE END TEST
PURGED   EQU   X'48'    ECB PURGED CODE
UCBCHN   EQU   X'7F'    SELECTOR CHAN CHECK
IOBPRG   EQU   X'20'    IOB PURGED FLAG
CHNCAT   EQU   X'0F'    SER CODE FOR CHAN PROBLEMS
PRGIND   EQU   X'01'     DEQUE REQUEST INDICATOR
CHMSAV   EQU   20                       CHANNEL MASK SAVE AREA
ZPDEB    EQU   28                       OFFSET TO ZEUS PURGE RTN  20201
NRMCMP   EQU   X'7F'                    NORMAL COMPLETION CODE
SIX      EQU   6                        UCB OFFSET FOR IOPURGE   BBBBBB
         AIF   (&B).ABNDS .             ELIM FOR ABEND IN MFT   SA41451
ONE      EQU   1 .                      NBR                     SA41451
TWO      EQU   2 .                      INCR                    SA41451
         AIF   (&D).NOEXZ .                                     SA41451
ZERO     EQU   0 .                      OFFSET                  SA41451
.NOEXZ   ANOP .                                                 SA41451
CI       EQU   X'C9' .                  I FOR LOADING TEST/SIRB SA41451
.ABNDS   ANOP
*
*
         AIF   (&B).SKIPF0
*                        SVC PURGE ENTRANCE
*
         AIF   (&LA OR &LB OR &L1).SETBS     TEST FOR PCP/MFT      LOD3
         AIF   (&A).SKIPF2
.SETBS   ANOP
         BALR  BASREG,0
.SKIPF2  ANOP
         USING *,BASREG
         AIF   (&A).SKIPF4
         AIF   (NOT &TS).TS05                                     20001
         TM    PRGOPT(INPREG),LSTOPT    TEST FOR LIST OPTION FLAG 20001
         BC    8,SVC16ENT               BRANCH TO PURGE ENTRY POINT
         L     QPLREG,PRGQPL-1(INPREG)  GET QPL ADDRESS           20001
         TM    PRGFLG(INPREG),PRGFENT   IS IT A WAIT ENTRY        20001
         BC    1,PP007                  YES-BR TO PROCESS WAIT    20001
*
*   PURGE ENTRY PROCESSING
PP000    TM    PRGFLG(INPREG),PRGFDEQ   IS ENQ NECESSARY          20001
         BC    1,PP00005                NO-BRANCH                 20001
*   ISSUE ENQ FOR PURG FIELD IN DEBS                              20001
*
         LR    WKREG1,INPREG            SAVE PARA POINTER         20001
         LA    INPREG,NQTBL             GET ENQ TABLE ADDRESS     20001
         SVC   56                       SVC TO ENQ                20001
         LR    INPREG,WKREG1            RESTORE PARA POINTER      20001
PP00005  NI    PRGFLG(INPREG),255-PRGFDEQ    INIT DQ FLAG TO 0    20001
         MVI   QPLTOT(QPLREG),X'00'     CLEAR COUNT FIELD         20001
         LA    QPLREG,QPLBAS(QPLREG)    INCREMENT AROUND QPL BASE 20001
*
*   PROCESS A TCB ENTRY FROM THE QPL
*
PP001    ST    QPLREG,PRGCHN-1(INPREG)  STORE INITIAL CHAIN ADDR  20001
*                                       IN PURGE PARA LIST
         MVC   PRGTCB(3,INPREG),QPLTCB(QPLREG)    MOVE TCB ADDR TO PL
         OI    QPLFLG(QPLREG),QPLFCUR   SET CUR ENTRY FLAG        20001
         ST    QPLREG,SAVE5             SAVE CUR QPL POINTER      20001
*
*   USE BRANCH ENTRY TO SVC PURGE
*
         B     NOENQA                   BRANCH TO PURGE ENTRY     20001
         SPACE 1
PPRESUM  SR    WKREG1,WKREG1            CLEAR REGISTER            20001
         SR    WKREG2,WKREG2            CLEAR WORK REGISTER       20001
         IC    WKREG1,PRGCTR(INPREG)    GET QUIESCE COUTN         20001
         L     QPLREG,PRGQPL-1(INPREG)  GET QPL PTR               20001
         IC    WKREG2,QPLTOT(QPLREG)    GET RUNNING TOTAL         20001
         AR    WKREG2,WKREG1            GET NEW TOTAL             20001
         STC   WKREG2,QPLTOT(QPLREG)    STORE TOTAL COUNT         20001
         L     QPLREG,SAVE5             GET CUR QPL POINTER       20001
         TM    QPLFLG(QPLREG),QPLFLST   TEST FOR LAST ENTRY       20001
         BC    7,PP003                  YES-PURGE IS COMPLETE     20001
         LA    QPLREG,QPLSIZ(QPLREG)    GET ADDR OF NEXT QPL ENTRY20001
         BC    15,PP001                 BR TO PROCESS NEXT ENTRY  20001
*
*   STORE TOTAL COUNT
*
PP003    STC   WKREG2,PRGCTR(INPREG)    STORE TOTAL COUNT IN PPL  20001
         SSM   MASK1                    ENABLE FOR INTERRUPTS     20001
*   ISSUE DEQ FOR PURGE FIELD IN DEBS
*     AN IMMEDIATE DEQ CAN BE ISSUED IF SVC PURGE DID NOT
*     ENCOUNTER A RESIDENT SYSTEM DEB.
         TM    PRGFLG(INPREG),PRGFDEQ   CAN DEQ BE ISSUED NOW     20001
         BC    1,PP005                  NO-SKIP IT                20001
         LR    WKREG1,INPREG            SAVE PARA POINTER         20001
         LA    INPREG,NQTBL             GET ENQ TABLE ADDR        20001
         SVC   48                       ISSUE DEQ SVC             20001
         LR    INPREG,WKREG1            RESTORE PARA POINTER      20001
PP005    SSM   CHANIND+1                DISABLE INTERRUPTS        20001
         CLI   PRGCTR(INPREG),X'00'     TEST FOR ALL I/O COMPLETE 20001
         BC    8,PP008                  YES-RETURN TO CALLER      20001
         TM    PRGFLG(INPREG),PRGFWT    RETURN BEFORE WAITING     20001
         BC    7,WAITENT                NO-BR TO ISSUE WAIT       20001
         OI    PRGFLG(INPREG),PRGFENT   SET WAIT ENTRY FLAG       20001
         LA    RTCDRG,REENTER           SET REENTER RETURN CODE   20001
         SVC   3                        EXIT                      20001
*
*   WAIT ENTRY PROCESSING
*
PP007    CLI   PRGCTR(INPREG),X'00'     IS ALL I/O COMPLETE       20001
         BC    8,PP008                  YES-PREPARE TO RETURN     20001
*
*   ISSUE SVC WAIT FOR THE COMPLETION OF I/O
*
PP007A   L     CVTREG,16                GET CVT ADDRESS           20001
         L     TCBREG,CVTTCB(CVTREG)    GET TCB ADDRESS           20001
         L     TCBREG,4(TCBREG)         GET CURRENT TCB           20001
         ST    TCBREG,SAVE1             SAVE CURRENT TCB ADDR     20001
         B     WAITENT                  BRANCH TO WAIT ENTRY      20001
PP008    TM    PRGFLG(INPREG),PRGFDEQ   HAS DEQ BEEN ISSUED       20001
         BC    8,PP009                  YES-SKIP DEQ              20001
*
*   ISSUE SVC DEQ
         LA    INPREG,NQTBL             GET ENQ TABLE ADDR        20001
         SVC   48                       ISSUE DEQ SVC             20001
*
*   RETURN TO CALLER
PP009    SR    RTCDRG,RTCDRG            GET NORM COMP CODE        20001
         SVC   3                        EXIT                      20001
.TS05    ANOP                                                     20001
SVC16ENT LR    WKREG2,LKREG2 .         SAVE RETURN ADDR          A46393
.SKIPF4  ANOP
         AIF   (&LA OR &LB).LOD2B       TEST FOR 1A OR 1B          LOD3
         AIF   (&L1).SKIPF4A .         ENQ CODE PLACED AFTER VAL A49437
         LR    WKREG1,INPREG            SAVE INPUT PARA POINTER
         AIF   (&TS).TS06               TEST FOR TS               20001
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION       20001
         AGO   .TS07                                              20001
.TS06    TM    PRGOPT(INPREG),HIOOPT+LSTOPT  TEST FOR LIST AND HIO20001
.TS07    ANOP                                                     20001
         BC    5,NOENQ                  YES-DO NOT ENQUE          20001
         AIF   (&E).RBENQ
.RBENQ   ANOP
         LA    INPREG,NQTBL             GET TABLE ADDRESS
         SVC   56                       ENQ
NOENQ    LR    INPREG,WKREG1            RESTORE PARA POINTER
         AIF   (&A).SKIPF4A
         ST    WKREG2,SAVE14 .         SAVE RETURN ADDR           M2181
NOENQA   L     CVTREG,16                GET CVT ADDRESS           M2181
        L     TCBREG,CVTTCB(CVTREG)    GET TCB ADDRESS
         L     TCBREG,4(TCBREG)         GET CURRENT TCB
.SKIPF4A ANOP
         ST    TCBREG,SAVE1             SAVE CURRENT TCB
         AIF   (&A).SKIPF4B             TEST FOR NON-RES         BBBBBB
         LA    WKREG2,TCB002            GET BRANCH ADDRESS       BBBBBB
         AGO   .SKIPF4C                                          BBBBBB
.SKIPF4B LA    WKREG2,TCB001            GET BRANCH ADDRESS       BBBBBB
.SKIPF4C NC    PRGTCB(3,INPREG),PRGTCB(INPREG)    TCB ADDRESS?   BBBBBB
         BCR   8,WKREG2                 NO-USE CURRENT TCB
         AGO   .SKIPG0
.SKIPF0  ANOP
*                        ABEND I/O PURGE ROUTINE
*
         L     CVTREG,16                GET CVT ADDRESS
.SKIPG0  ANOP
        L     TCBREG,PRGTCB-1(INPREG)  GET INPUT TCB
         AIF   (&A).NORES               TEST FOR NON-RESIDENT
         TM    TCBPTK+1(TCBREG),X'80'   TEST FOR ABEND
         BCR   1,WKREG2                 YES - NO RB TEST          20001
         AIF   (NOT &TS).NORES          TEST FOR TS               20001
         TM    PRGOPT(INPREG),LSTOPT    TEST FOR LIST OPTION      20001
         BCR   1,WKREG2                 YES - NO RB TEST          20001
.NORES   ANOP
         AIF   (&B).SKIPG2B             TEST FOR SPECIAL         BBBBBB
         L     WKREG1,RBLNK-1(RBREG)    GET CALLERS RB           BBBBBB
         TM    RBPSW+1(WKREG1),X'F1'    IS IT SUPERVISOR         BBBBBB
         BCR   8,WKREG2                 YES-BRANCH AROUND        BBBBBB
         L     WKREG1,SAVE1             GET CALLERS TASK         BBBBBB
         CLC   TCBPTK(1,WKREG1),TCBPTK(TCBREG)    STORAGE KEY    BBBBBB
         BC    7,ENDPURGA               NO-GO RETURN             BBBBBB
         AIF   (&D).LOD2B                                        BBBBBB
TCB001   L     CHNREG,PRGCHN-1(INPREG)  GET IOB CHAIN START ADD  BBBBBB
         NC    PRGCHN(3,INPREG),PRGCHN(INPREG)    \EST CHN ADDR  BBBBBB
         BC    4,ABNDTST                YES - USE IT             BBBBBB
*
*   NO - GET ADDRESS TO CHAIN FIELD IN PARAMETER LIST
*
         LA    CHNREG,PRGCHN-1(INPREG)  GET CHN ADDRESS          BBBBBB
         ST    CHNREG,PRGCHN-1(INPREG)  STORE FOR LOADS A AND B  BBBBBB
         AIF   (&E).NOABNDB             TEST FOR RESIDENT        BBBBBB
ABNDTST  TM    TCBPTK+1(TCBREG),X'80'   TEST FOR TASK ABENDING   BBBBBB
         BC    1,ENDPURG                YES - GO RETURN          BBBBBB
         AIF   (NOT &L1).SKPL1NQ .     ENQ IN MFT IN LOAD 1 ONLY A49437
*  BUILD PARM LIST FOR ENQ/DEQ IN RB EXT AND ISSUE ENQ           A49437
         TM    PRGOPT(INPREG),HIOOPT . TEST FOR HIO OPTION       A49437
         BO    NOENQ216 .              ENQ NOT NEC               A49437
         LR    WKREG1,INPREG .         SAVE INPUT PARA PTR       A49437
         LA    UCBREG,RBEXT+40(RBREG) .BUILD PARM LIST FOR ENQ   A49437
         LR    IOBREG,UCBREG .                                   A49437
         MVC   RBEXT+28(20,RBREG),NQTBL .                        A49437
         STM   UCBREG,IOBREG,RBEXT+32(RBREG) .MAJ/MIN NAME ADDRS A49437
         LA    INPREG,RBEXT+28(RBREG) .ADDR OF PARM LIST         A49437
         L     UCBREG,SAVE1 .           SAVE STORED CURR TCB    SA58045
*  ENQ MIGHT WAIT---REUSE OF SAVE1 RESULTS                      SA58045
         SVC   56 .                    ENQ                       A49437
         LR    INPREG,WKREG1 .         RESTORE PURGE PARM LIST   A49437
         ST    UCBREG,SAVE1 .           REST STORED CURR TCB    SA58045
*                                                                A49437
NOENQ216 EQU   * .                                               A49437
.SKPL1NQ ANOP                                                    A49437
.NOABNDB ANOP                                                    BBBBBB
*
*   ON TCB OR DEB QUIESCE, XCTL TO PROPER LOAD
*   GET CURRENT TCB ADDRESS FOR LOAD 2
TCB002   L     WKREG1,SAVE1             GET TCB ADDRESS          BBBBBB
         LA    LKREG3,NAME2             GET LOAD A NAME          BBBBBB
         TM    PRGOPT(INPREG),DEBOPT    TEST FOR TCB OPTION      BBBBBB
         BC    1,TCB003B                YES-BRANCH AROUND        BBBBBB
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION      BBBBBB
         BC    1,TCB002A                YES-DO NOT XCTL          BBBBBB
TCB003A  LA    LKREG3,NAME3             GET LOAD B NAME          BBBBBB
TCB003B  ST    LKREG3,SAVE2             STORE POINTER            BBBBBB
         LA    LKREG3,SAVE2             GET ADDRESS              BBBBBB
         XCTL  SF=(E,(15))                                       BBBBBB
         AGO   .LOD2BB                                           BBBBBB
.LOD2B   ANOP                                                    BBBBBB
         AIF   (NOT &LA AND NOT &LB).LOD2BA  TEST FOR 1A AND 1B  BBBBBB
         ST    WKREG1,SAVE1             GET CURRENT TASK         BBBBBB
         L     CHNREG,PRGCHN-1(INPREG)  GET IOB CHAIN START ADD  BBBBBB
         AGO   .NOABNDA                                          BBBBBB
.LOD2BA  ANOP                                                    BBBBBB
TCB002   L     CHNREG,PRGCHN-1(INPREG)  GET IOB CHAIN START ADD  BBBBBB
         AIF   (&E).NOABND              TEST FOR RES CODE        BBBBBB
         AGO   .NOABNDA                                          BBBBBB
.NOABND  ANOP                                                    BBBBBB
         NC    PRGCHN(3,INPREG),PRGCHN(INPREG)    INPUT HAS CHN  BBBBBB
         BC    4,REPURG                 YES - USE IT             BBBBBB
*
*   NO - GET ADDRESS TO CHAIN FIELD IN PARAMETER LIST
*
         LA    CHNREG,PRGCHN-1(INPREG)  GET POINTER TO CHAIN FLD BBBBBB
.NOABNDA ANOP                                                    BBBBBB
.LOD2BB  ANOP                                                    BBBBBB
*
*   ENTER AT THIS POINT AFTER QUIESCING
*
         AIF   (&L1).NRPRG              TEST FOR LOAD 1
REPURG   ST    TCBREG,PRGTCB-1(INPREG)  STORE TCBADDR IN PARAM LIST
.NRPRG   ANOP
         AIF   (&C AND &LA).LOD1A       TEST FOR 12* AND TCB LOAD  LOD3
TCB002A  L     DEBREG,PRGDEB-1(INPREG)  GET INPUT DEB ADDRESS
         ST    DEBREG,SAVE2             SAVE ORIG DEB FOR DEB PURGE
.LOD1A   ANOP                                                      TSOS
         AIF   (&L1).SKIPG2             TEST FOR LOAD 1          BBBBBB
         MVI   PRGCTR(INPREG),X'00'     CLEAR QUIESCE COUNTER
         MVI   PRGCOD(INPREG),X'00'     CLEAR COMPLETION CODE BYTE
.SKIPG2  ANOP
         AIF   (&LA).SKIPG2B            TEST FOR TCB LOAD        BBBBBB
         AIF   (NOT &L1 AND NOT &LB).SKIPG2A TEST FOR DEB LOADS  BBBBBB
         B     DEBPURG                  BRANCH TO PURGE DEB      BBBBBB
         AGO   .SKIPG2B                                          BBBBBB
.SKIPG2A ANOP                                                    BBBBBB
*
*   TEST FOR DEB OPTION
*
         TM    PRGOPT(INPREG),DEBOPT    TEST FOR TCB OPTION      BBBBBB
         BC    8,DEBPURG                NO-GO PURGE ON DEB       BBBBBB
.SKIPG2B ANOP                                                    BBBBBB
         AIF   (NOT &D AND NOT &B).MFTCLUP .                    SA41451
*   THIS ROUTINE LINKS TO IOS TO PICK UP RQE'S ON DDR WAIT QUE    19022
DDRBAS   EQU   13                       DDR PURGE WAIT QUE BASE   19022
DDRSW    EQU   X'10'                    WAIT QUEUE SWITCH         19022
DDRFST   EQU   4                        DDR PURGE FIRST ENTRY OFF.19022
DDRQLN   EQU   8                        DDR QUEUE LENGTH          19022
DDRAPN   EQU   16                       DDR APPEND. TBL OFF.      19022
*                                       DDR WAIT QUEUE PURGE ROUTINE
         SPACE 1                                                  19022
*   INITIALIZE REGS. FOR FIRST ENTRY                              19022
         SPACE 1                                                  19022
WTQPRG   LA    WKREG2,DDRFST            GET FIRST ENTRY OFFSET    19022
WTQPRGA  L     DDRBAS,CVTIXA(CVTREG)    GET NEXT AVAILABLE ADDRESS19022
         L     DDRBAS,DDRAPN(DDRBAS)    GET POINTER TO APPEND.    19022
         LTR   DDRBAS,DDRBAS            TEST FOR ADDRESS          19022
         BC    2,AEQPURG                NO-BRANCH AROUND          19022
         L     DDRBAS,0(DDRBAS)         PICK UP DDRWTQ ADDRESS    19022
*   WKREG2 WILL BE CLEARED BY DDR PURGE ROUTINE.                  19022
*   FIRST ENTRY WILL BE TO OFFSET 4.                              19022
         BAL   LKREG3,DDRQLN(DDRBAS,WKREG2)  GO TO PROPER ENTRY   19022
*   RETURN HERE IF RQE PRESENT                                    19022
         OI    SW1,DDRSW                SET DDR PURGE INDICATOR   19022
         BAL   LKREG2,PURGCHK           BR TO CHECK FOR DEQUE     19022
         SR    WKREG2,WKREG2            CLEAR WORK REGISTER       19022
         B     WTQPRGA                  GO GET NEXT RQE           19022
*   RETURN HERE IF NO DDR PURGE OR END OF QUEUE                   19022
         NI    SW1,X'FF'-DDRSW          CLEAR WAIT QUE INDICATOR  19022
*
*
*                       ASYNCHRONOUS EXIT QUEUE PURGE
*
AEQPURG  L     AEQREG,CVTIER(CVTREG)    GET ERRLCH ADDRESS
         LR    WKREG1,AEQREG            GET BACK-PNTR
         B     AEQ004                   GO TEST FOR EMPTY QUEUE
AEQ002   LR    RQEREG,WKREG1            SAVE BACK-PNTR
         LH    RQEREG,RQELNK(RQEREG)    GET RQE
         AIF   (&B).NOSPOP
         TM    PRGOPT(INPREG),SPOPSW    TEST FOR SPECIAL OPTION SWITCH
         BC    8,AEQ003                 NO-BRANCH AROUND
*
*   TEST IF REQUEST IS FOR ERROR ROUTINE OR ASYN EXIT
*
         TM    3(RQEREG),X'01'          TEST FOR ERROR REQUEST
         BC    8,AEQ003A                NO - GO GET NEXT REQUEST
.NOSPOP  ANOP
*
*   HANDLE REQUESTS FOR ERROR ROUTINES
*
AEQ003   BAL   LKREG2,PURGCHK           CHECK SUBROUTINE
         CH    RQEREG,0(WKREG1)         WAS RQE DEQUED
         BC    7,AEQ004                 YES, CHECK FOR END OF QUE
AEQ003A  LH    WKREG1,0(WKREG1)         ADVANCE BACK PNTR
AEQ004   CH    AEQREG,0(WKREG1)         END OF AEQ
         BC    7,AEQ002                 NO, CONTINUE IN QUE
         STH   WKREG1,2(AEQREG)         UPDATE 'LAST' PNTR
         AIF   (NOT &D).SKIPJ4
*
*
*   SPECIAL HANDLING OF SYSTEM ERROR PROCESSING
*
SIRBTST  LA    LKREG1,RBQPURG           GET BRANCH ADDRESS
         L     IRBREG,ASIRB             GET SIRB ADDR
         TM    RBTAB+1(IRBREG),RBACTV   ACTIVE
         BCR   8,LKREG1                 NO, RETURN
*   SIRB IS ACTIVE
         LH    RQEREG,RBRQE+2(IRBREG) .GET RQE ADDR              M5401
*   WAS PURGE ENTERED BEFORE
         LTR   RQEREG,RQEREG            IS THERE AN ADDRESS
         BCR   8,LKREG1                 SIRB WAS ALREADY HANDLED
         LR    LKREG2,LKREG1            GET INVALID RETURN IN REG2 SIRB
         BAL   LKREG3,VALCHK            BRANCH TO DO VALIDITY CHK  SIRB
*
*    THE INVALID RETURN WILL BE VIA LKREG2.
*    VALID RETURN FROM VALIDITY CHECK ROUTINE IS HERE.
*   THE TEST WAS VALID - NOW TEST FOR HIO OR QUIESCE
*
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION
         BC    8,PRGDEBUP               NO-GO INCREMENT QUIESCE COUNT
*   BRANCH TO DEQUEUE REQUEST
*
         BAL   LKREG2,CHK005            GO DEQ REQ & CHK 4 POST  BBBBBB
*
         AIF   (NOT &MP).MPSKP1
         L     WKREG1,AERTSK            GET SIRB TCB ADDRESS
         LA    WKREG2,AROUND1           RETURN ADDRESS
*
TWOCPU   OI    TCBFLGS+3(WKREG1),X'02'  SET TASK NON-DISPATCHABLE
         L     LKREG3,CVTMPCVT(CVTREG)  GET MP CVT ADDRESS
         L     LKREG3,CVTTKRM(LKREG3)   ADDRESS OF TASK REMOVE
         BALR  LKREG2,LKREG3            GO TO REMOVE TASK
         NI    TCBFLGS+3(WKREG1),X'FD'  RESET ND FLAG
         BR    WKREG2                   RETURN
*
AROUND1  EQU   *
.MPSKP1  ANOP
*   CLEAR SIRB IQE ADDRESS
         XC    RBRQE+2(2,IRBREG),RBRQE+2(IRBREG) .CLEAR RQE ADDR M5401
*
SIRB01   LA    WKREG1,CVTEXIT(CVTREG)   GET SVC EXIT INST ADDR
         ST    WKREG1,RBPSW+4(IRBREG)   STORE IN RESUME PSW FOR SIRB
.SKIPJ4  ANOP
         AIF   (&B).SKIPG4
*
         AIF   (&D).MFTCLUX .           MVT,GO TO INCLU 'RBQPURGSA41451
.MFTCLUP ANOP
         SPACE 1
*  DDRWAITQ(IN TOTAL),AEQ,SIRB(SUBTASKING) PURGING MOVED INTO   SA41451
*IOS INTERFACE AREA IN MFT SYSTEMS.--BASE REG IS 13.--          SA41451
         SPACE 1
WTQDSP   EQU   32 .                     OFFSET TO MFT PURGE CODESA41451
*
WTQPRG   EQU   * .                      NTRY TO DDRWAITQ PURGE  SA41451
         LA    WKREG2,PURGCHK .         FOR REENTRY FROM IOS    SA41451
         L     LKREG1,CVTIXA(CVTREG) .  ADDR OF IECIXAVL IN IOS SA41451
         L     LKREG1,WTQDSP(LKREG1) .  ADDR OF MFT PURGE CODE  SA41451
         BALR  LKREG3,LKREG1 .          GO TO IOS WITH BASE AND SA41451
*                                       RETURN REGS SET         SA41451
* RETURN FROM IOS--REG 2 INDICATES NEED FOR SIRB PURGE CLEAN-UP SA41451
         LTR   WKREG2,WKREG2 .          PURGING SIRB NEEDED     SA41451
         BZ    RBQPURG .                NO, TRY IRB             SA41451
         LA    LKREG2,RBQPURG .         SET UP INVALID RETURN   SA41451
         BAL   LKREG3,VALCHK .          GO AND SET UP VALID RET SA41451
         AIF   (NOT &LB).MFTCLU1 .      NOT IECIPR1B(DEB QUIES) SA41451
         B     PRGDEBUP .               SET UP QUIESCE          SA41451
         AGO   .MFTCLUX .               RBQPURG                 SA41451
.MFTCLU1 AIF   (&L1).MFTCLU2 .          NOT IECIPR12(DEB HIO)   SA41451
         TM    PRGOPT(INPREG),HIOOPT .  TEST FOR HIO OPTION     SA41451
         BZ    PRGDEBUP .               SET UP QUIESCE          SA41451
.MFTCLU2 ANOP
* BRANCH TO DEQUEUE RQE FROM SIRB AND RETURN RQE TO FREELIST    SA41451
         BAL   LKREG2,CHK005 .          GO DEQ RQE/CHK 4 POST   SA41451
         XC    RBRQE+2(TWO,IRBREG),RBRQE+2(IRBREG) .CLEAR RQE A SA41451
         CLI   ZERO(IRBREG),CI .        ERFETCH LOADING IN PROC SA41451
         BNE   RBQPURG .                                        SA41451
         LA    WKREG1,CVTEXIT(CVTREG) . GET EXIT SVC ADDR       SA41451
         ST    WKREG1,RBPSW+4(IRBREG) . STORE IN SIRB RESUME PSWSA41451
.MFTCLUX ANOP                                                   SA41451
*
*                        IRB QUEUE PURGE
*
RBQPURG  TM    PRGOPT(INPREG),SPOPSW    TEST FOR SPECIAL OPTION
         AIF   (&D OR &LA).LOD2B1       TEST FOR 16* OR TCB LOAD   LOD3
         BC    1,DEBPURGA .            GO TO PURGE DEB           A42167
         AGO   .LOD2B2
.LOD2B1  ANOP
         BC    1,TCB002B                YES - BRANCH AROUND
.LOD2B2  ANOP
         L     IRBREG,TCBRB(TCBREG)     GET FIRST RB ADDRESS
RBP002   TM    RBTAB(IRBREG),IRBRB      IRB TYPE
         BC    8+1,RBP008               NO, GET NEXT RB
         TM    RBTAB+1(IRBREG),IRBIQE   IRB HAVE 12*S
         BC    8+1,RBP008               NO, GET NEXT RB
         TM    RBTAB+1(IRBREG),IRBNRT   TEST FOR IQE NO RETURN   BBBBBB
         BC    1,RBP008                 YES-GET NEXT RB          BBBBBB
         LA    WKREG1,RBRQE+2(IRBREG)   GET IQE QUEUE
RBP004   LR    RQEREG,WKREG1            SAVE BACK PNTR
         LH    RQEREG,RQELNK(RQEREG)    GET IQE
         LTR   RQEREG,RQEREG            END OF QUE
         BC    8,RBP006                 YES,TEST FOR EXHAUSTED QUE
         XR    WKREG2,WKREG2 .IND. NOT DDRWAITQ PURGE           SA41451
         BAL   LKREG2,PURGCHK           PURGE SUBROUTINE
         CH    RQEREG,0(WKREG1)         WAS IQE DEQUED
         BC    7,RBP004                 YES, CONTINUE
         LH    WKREG1,0(WKREG1)         NO-ADV.IN QUEUE
         B     RBP004                    AND CONTINUE
RBP006   CLI   RBRQE+2(IRBREG),ENDIQE   IQE QUEUE EXHAUSTED
         BC    7,RBP008                 NO, GET NEXT RB
         AIF   (NOT &MP).MPSKP3
         LR    WKREG1,TCBREG            GET PURGED TASK ADDRESS
         BAL   WKREG2,TWOCPU            REMOVE TASK
.MPSKP3  ANOP
         LA    WKREG2,CVTEXIT(CVTREG)   GET SVC EXIT INSTRUCTION ADDR
         ST    WKREG2,RBPSW+4(IRBREG)   SET RESUME PSW TO EXIT
         NI    RBTAB+1(IRBREG),X'FF'-IRBIQE  YES-FLAG IRB EXHAUSTED
RBP008   TM    RBTAB+1(IRBREG),X'80'    END OF RB QUE
         AIF   (&D OR &LA).LOD2C        TEST FOR 16* OR LOAD 1A    LOD3
         BO    DEBPURGA                 BRANCH TO PURGE DEB      BBBBBB
         AGO   .LOD2D
.LOD2C   ANOP
         BO    TCB002B                  YES - BRANCH AROUND
.LOD2D   ANOP
         L     IRBREG,RBLNK-1(IRBREG)   NO,GET NEXT RB
         B     RBP002                   CONTINUE
         AIF   (&D).RES1
         AIF   (&L1).LOD2E              TEST FOR LOAD 1            LOD3
         AIF   (NOT &D AND NOT &LA).LOD2E                          LOD3
         AIF   (&LA).LOD2F              TEST FOR 1A LOAD           LOD3
.RES1    ANOP
*
*   TEST FOR TCB OR DEB OPTION
TCB002B  TM    PRGOPT(INPREG),DEBOPT    DEB PURGE OPTION
         BC    8,DEBPURGA               YES-PURGE ON DEB         BBBBBB
.SKIPG4  ANOP
*
*   TCB PURGE SUBROUTINE
         L     RQEREG,CVTIOQ(CVTREG)    GET RQE LIST ADDR
         AGO   .LOD2G
.LOD2F   ANOP
TCB002B  L     RQEREG,CVTIOQ(CVTREG)
.LOD2G   ANOP
         B     TCB007                   CHECK IF RQE ON FREELIST
TCB004   LH    UCBREG,RQEUCB(RQEREG)    GET RQE ADDRESS
         N     UCBREG,MASK1             CLEAR SIRB INDICATOR       LOD3
         AIF   (&B).SKIPH3                                         LOD3
         AIF   (&C).NO12                TEST FOR 12* RQE           LOD3
         TM    TCBPTK+1(TCBREG),X'80'   TEST FOR ABEND             LOD3
         BO    TSTCON                   YES-BRANCH AROUND          LOD3
.NO12    ANOP
         TM    RQEUCB+1(RQEREG),X'01'   TEST FOR ERRLCH QUIESCING
         BO    TCB006                   YES - LEAVE ALONE
*
*   TEST ERRTAB IN UCB FOR IOPURGE ON ANOTHER TASK
*
         TM    UCBETI(UCBREG),X'FF'     IS IT FOR IOPURGE
         BO    TCB006                   YES - LEAVE ALONE
.SKIPH3  ANOP
TSTCON   TM    UCBSTA(UCBREG),SYSCON    TEST FOR SYSTEM CONSOLE    LOD3
        BC    12,TCB005                NO-BRANCH
        CLI   UCBTYP+3(UCBREG),X'20'   IS IT 1052
         BCR   8,LKREG2                 YES - LEAVE ALONE          TSOS
         AIF   (&B).SKIPH4
         AIF   (&C AND &LA).SKIPH4      TEST FOR 12* AND 1A        LOD3
TCB005  L     DEBREG,RQEDEB-1(RQEREG)  GET DEB ADDRESS
        AGO   .SKIPH5
.SKIPH4  ANOP
TCB005  STH   RQEREG,SAVE2+2           SAVE RQE LIST PTR
        AGO   .SKIPH5A
.SKIPH5  ANOP
         STH   RQEREG,SAVE2+2           SAVE RQE LIST PTR
.SKIPH5A      ANOP
         AIF   (NOT(&B)).IOPRG1         INCLUDE CODING FOR TRANS ABEND
         TM    UCBID(UCBREG),X'FF'      IS IT A VALID UCB
         BC    1,TCB005A                YES - BRANCH AROUND
*   IT IS ASSUMED HERE THAT THE REQUEST IS FOR IO PURGE
         BAL   LKREG3,DEQUE             BRANCH TO DEQUE
         B     TCB006                   GET NEXT REQUEST
.IOPRG1  ANOP
TCB005A  BAL   LKREG1,UCBPURG           BRANCH TO PURGE LCH
         LH    RQEREG,SAVE2+2           RESTORE RQE PTR
         AIF   (&D).SKIPI2
TCB006   LA    RQEREG,12(RQEREG)        GET NEXT RQE ADDR
         AGO   .SKIPI4
.SKIPI2  ANOP
TCB006   LA    RQEREG,16(RQEREG)        GET NEXT RQE ADDR
.SKIPI4  ANOP
         CLI   1(RQEREG),ENDQUE         END OF RQE'S?
         AIF   (&B).SKIPG6
         BC    8,POSTCHK                YES,-END PURGE ROUTINE
         AGO   .SKIPG8
.SKIPG6  ANOP
         BC    8,PRG034                 YES,-CONTINUE ABEND
.SKIPG8  ANOP
TCB007   LA    LKREG2,TCB006            GET BRANCH ADDRESS         TSOS
         AIF   (&D).A444491 .     TSO RCT PURGED RQE IS X'F0'    A44449
         CLI   RQEIDT(RQEREG),X'FF'     THIS RQE ON FREELIST       TSOS
         BCR   8,LKREG2                 YES - LEAVE ALONE          TSOS
         AGO   .A444492                                          A44449
.A444491 ANOP  .A444491                                          A44449
         TM    RQEIDT(RQEREG),X'FF' .  ACTIVE RQE NOW            A44449
         BCR   7,LKREG2 .NO,NOT PURGE CANDIDATE                  A44449
.A444492 ANOP  .A444492                                          A44449
         LH    UCBREG,RQEUCB(RQEREG)    GET UCB ADDRESS            TSOS
         BAL   LKREG3,VALCHK            GO TO VALIDITY CHECK       TSOS
         AIF   (NOT &MP).MPSKP2
         L     IOBREG,ASIRB             SET SIRB ADDRESS
         TM    RBTAB+1(IOBREG),RBACTV   ACTIVE
         BZ    TCB004                   NO-BYPASS ERROR TASK *+12  MP65
         C     RQEREG,RBRQE(IOBREG)     TEST IF UNDER ERROR CONTROL
         BE    TCB006                   YES-LEAVE ALONE
.MPSKP2  ANOP
         B     TCB004                   CONTINUE RQE SEARCH
.LOD2E   ANOP
*
*
*                        CHECK SUBROUTINE
*   ENTER HERE FROM AEQ OR IRB PURGE. RETURN WILL BE VIA LKREG2.
*   GO TEST VALIDITY OF THIS REQUEST
*
*
PURGCHK  BAL   LKREG3,VALCHK            GO TO VALIDITY CHECK RTN
         AIF   (&B OR &L1).SKIPK4       TEST FOR SPEC OR LOAD 1    LOD3
         AIF   (&D).MFSTFX                                      SA41451
         LTR   WKREG2,WKREG2 .          DDRWAITQ RQE 2 BE PURGD SA41451
         BNZ   CHK004A .                YES-GO TO RELINK AND DEQSA41451
         AGO   .SKIPK6
.MFSTFX  ANOP                                                   SA41451
         TM    SW1,DDRSW .              TEST FOR DDR RQE        SA41451
         BO    CHK004A .                YES-RELINK AND DEQUEUE  SA41451
         AGO   .SKIPK6                                          SA41451
.SKIPK4  ANOP
*   RETURN TO CHK004A ON GOOD VALIDITY CHECK
         AGO   .SKIPL4
.SKIPK6  ANOP
         AIF   (&LB).SKIPL6Z            TEST FOR LOAD B           20201
CHK004   TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION
         BC    8,PRGDEBUP               NO - BRANCH AROUND
         AGO   .SKIPL4                  BRANCH AROUND             20201
.SKIPL6Z B     PRGDEBUP                 GO SET UP TO QUIESCE      20201
         SPACE 1
.SKIPL4  ANOP
CHK004A  MVC   0(2,WKREG1),RQELNK(RQEREG)    DEQUE FROM LCH
CHK005   BAL   LKREG3,DEQUE             GO FREE RQE
         AIF   (NOT(&B)).SKIPM2
         BR    LKREG2                   RETURN
         AGO   .SKIPM4                  SKIP AROUND
.SKIPM2  ANOP
CHK005A  TM    PRGOPT(INPREG),PSTOPT    POST OPTION SPECIFIED
         BCR   8,LKREG2                 NO, RETURN TO SUBROUTINE
*
*   POST INTERFACE
*
         AIF   (&E).SKIPN9A             TEST FOR RESIDENT
PSTPRGD  L     WKREG2,SAVE1             GET CURRENT TCB ADDRESS
         L     WKREG2,TCBRB(WKREG2)     GET RB ADDRESS
         STM   9,15,RBEXT(WKREG2)       STORE REGISTERS
         AGO   .SKIPN9B
.SKIPN9A ANOP
PSTPRGD  STM   9,15,SAVE3               SAVE REGISTERS
.SKIPN9B ANOP
         L     ECBREG,IOBECB-1(IOBREG)  GET ECB ADDRESS
         LA    ECBREG,0(ECBREG) .CLEAR HI-BYTE                    M0100
         LA    10,PURGED                GET 'PURGED' CODE
         SLL   10,24                    SHIFT TO HI BYTE
         LR    12,TCBREG                TCB FOR POST
        L     LKREG3,CVT0PT(CVTREG)         GET POST ROUTINE ADDR
         BALR  14,15                    POST ECB
         AIF   (NOT(&E)).SKIPN9C
         LM    9,15,SAVE3               RESTORE REGISTERS
         AGO   .SKIPP2
.SKIPN9C ANOP
         LM    9,15,RBEXT(WKREG2)       RESTORE REGISTERS
         AGO   .SKIPP2
.SKIPN8  ANOP
         XC    0(4,ECBREG),0(ECBREG)    CLEAR ECB
         MVI   0(ECBREG),PURGED         POST ECB
.SKIPP2  ANOP
         BR    LKREG2                   RETURN TO SUBRTN
         AIF   (&L1).SKIPM4             TEST FOR LOAD 1            LOD3
*
*   UPDATE QUIESCE COUNTERS
*
PRGDEBUP L     DEBREG,RQEDEB-1(RQEREG)  GET DEB ADDRESS
         OI    IOBFL+1(IOBREG),IOBPRG   SET QUIESCE FLAG           TSOS
         AIF   (NOT &TS).TS08           TEST FOR TS               20001
         TM    PRGOPT(INPREG),LSTOPT    TEST FOR LIST OPTION      20001
         BZ    PRGDEBCT                 NO-GO UPDATE COUNT        20001
         CLC   DEBTCB(3,DEBREG),ZERO . TEST FOR SYSTEM DEB       M5401
         BNE   PRGDEBCT                 NO-UPDATE COUNT           20001
         OI    PRGFLG(INPREG),PRGFDEQ   SET DEQ FLAG              20001
PRGDEBCT EQU   *                                                  20001
.TS08    ANOP                                                     20001
         IC    WKREG2,DEBPRI(DEBREG)    SAVE HI BYTE
         ST    INPREG,DEBECB-1(DEBREG)  PUT PURGE PARAM ADDR IN DEB
         STC   WKREG2,DEBPRI(DEBREG)    RESTORE HI BYTE
         IC    WKREG2,PRGCTR(INPREG)    GET MAIN COUNTER           TSOS
         LA    WKREG2,1(WKREG2)         UPDATE COUNTER             TSOS
         STC   WKREG2,PRGCTR(INPREG)    STORE MAIN COUNTER         TSOS
         IC    WKREG2,DEBQUS(DEBREG)    GET DEB COUNTER            TSOS
         LA    WKREG2,1(WKREG2)         UPDATE COUNTER             TSOS
         STC   WKREG2,DEBQUS(DEBREG)    STORE COUNTER              TSOS
         BR    LKREG2                   RETURN TO SUBROUTINE
.SKIPM4  ANOP
*
*
*
*                       UCB PURGE SUBROUTINE
*
*
*                       UCB LOGICAL CHANNEL CODE
*
UCBPURG  SR    WKREG2,WKREG2            CLEAR REGISTER
         LTR   UCBREG,UCBREG            TEST FOR VALID UCB ADR  SA61265
         BCR   13,LKREG1                NOT, EXIT UCBPURG       SA61265
         CLI   UCBID(UCBREG),X'FF'      VALID UCB ADDR          SA70409
         BCR   7,LKREG1                 NO, EXIT UCBPURG        SA70409
         IC    WKREG2,UCBLCH(UCBREG)        GET LCH INDEX
         SLL   WKREG2,3                 MULTIPLY BY 8
         L     LCHREG,CVTILCH(CVTREG)       GET LCH TABLE ADDR
         LA    LCHREG,0(WKREG2,LCHREG)  GET LCH
         LR    WKREG1,LCHREG            GET LCH ADDRESS IN BACK PTR
*
*                       UCB PURGE SUBROUTINE
         TM    UCBFLG(UCBREG),UCBPST    IS THIS DEVICE ACTIVE
         BZ    UCB004                   NO-BRANCH AROUND
         OI    SW1,PSTSW                DEVICE IS ACTIVE
         B     UCB004                   BRANCH AROUND
UCB002   OI    SW1,MTCHSW               SET UCB ADDR MATCH SWITCH
UCB003   LH    WKREG1,0(WKREG1)         ADVANCE BACKLINK POINTER
UCB004   LR    RQEREG,WKREG1            GET BACKLINK TO RQEREG
UCB005   LH    RQEREG,RQELNK(RQEREG)    GET RQE ADDRESS
         LTR   RQEREG,RQEREG            TEST FOR END OF QUE
         BC    4,UCB009                 YES-BRANCH
         CH    UCBREG,RQEUCB(RQEREG)    UCB ADDRESS MATCH
         BC    7,UCB003                 NO-GET NEXT RQE,UPDATE BACKLINK
*
         LA    LKREG2,UCB002            GET RETURN ADDRESS
*   VALIDITY CHECK OF THIS RQE
*   RETURN INVALID ON LKREG2 FROM VALIDITY CHECK.
*
         BAL   LKREG3,VALCHK            GO TO VALIDITY CHECK RTN
*
*   THE TEST WAS GOOD - CONTINUE
UCB008   LA    LKREG2,UCB004            GET RETURN ADDRESS
         TM    SW1,PSTSW                WAS POST FLAG ON AT ENTRY
         BC    1,UCBAPRG                ON-GO TEST IF ITS THIS REQ
         AIF   (&B OR &L1).PERR         TEST FOR ABEND OR LOAD 1 BBBBBB
*
*   TEST IF IOB IN ERROR
*
         AIF   (&LB).NOHLT                                        20201
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION      BBBBBB
         BO    UCB008A                  YES-DO NOT QUIESCE       BBBBBB
.NOHLT   ANOP                                                     20201
         TM    IOBFL(IOBREG),IOBERR     TEST FOR IOB IN ERROR    BBBBBB
         BO    UCBAPRG1                 YES-GO ADVANCE BACKLINK  BBBBBB
*                                       AND QUIESCE REQUEST
.PERR    ANOP                                                    BBBBBB
*
*   NOT ACTIVE - CONTINUE
*
UCB008A  TM    UCBFLG(UCBREG),UCBASK    IS ARM SEEKING           BBBBBB
         BZ    CHK004A                  NO - BRANCH               SHARE
         CH    RQEREG,UCBLTS(UCBREG)    IS IT THIS REQUEST        SHARE
         BNE   CHK004A                  NO - BRANCH               SHARE
         TM    UCBTYP+1(UCBREG),UCBRR   IS IT SHARABLE DEVICE
         BZ    CHK004A                  NO - BRANCH TO RELINK AND DEQ
*   THE ARM SEEK WAS COMPLETED
*   TEST IF SET UP ALREADY FOR R/R.
UCB008B  TM    UCBCHA(UCBREG),UCBHIO    TEST IF ALREADY SETUP      LOD3
         BO    UCB003                   YES-GET NEXT RQE           LOD3
         OI    UCBCHA(UCBREG),UCBHIO    SET HALT FLAG FOR IOS      LOD3
         AIF   (&B).SKPDQB
UCB008C  BAL   LKREG3,DEQUEB            GO CHECK FOR CHAINING    BBBBBB
         LA    LKREG2,UCB003            GET RETURN ADDRESS        SHARE
         B     CHK005A                  GO TEST FOR POST          SHARE
         AGO   .SKPDQC
.SKPDQB  ANOP
UCB008C  B     UCB003                   GO ADVANCE BACKLINK      BBBBBB
.SKPDQC  ANOP
*
*   BRANCH TO IOS TO HANDLE HIO AND CCH
*
         AIF   (&B OR &E).EXTSAV                                   RL17
UCBHIOA  L     WKREG2,SAVE1             GET TCB ADDRESS            RL17
         L     WKREG2,TCBRB(WKREG2)     GET RB ADDRESS             RL17
         STM   9,15,RBEXT(WKREG2)       SAVE PURGE REGISTERS       RL17
         AGO   .EXTSAV1                                            RL17
.EXTSAV  ANOP                                                      RL17
UCBHIOA  LA    WKREG2,SAVE3             GET ADDRESS OF SAVE AREA   RL17
         STM   9,15,0(WKREG2)           SAVE REGISTERS             RL17
.EXTSAV1 ANOP                                                      RL17
         L     LKREG2,CVTIXA(CVTREG)    GET NEXT AVAIL ADDR        RL17
         L     LKREG2,8(LKREG2)         GET HIO ENTRY IN IOS       RL17
         LR    HIOUCB,UCBREG            GET UCB ADDR FOR HIO       RL17
         BALR  HIOLNK,LKREG2            BRANCH AND LINK TO HIO     RL17
         AIF   (&B OR &E).EXTSAV2                                  RL17
         LM    9,15,RBEXT(WKREG2)       RESTORE PURGE REGS         RL17
         AGO   .EXTSAV3                                            RL17
.EXTSAV2 ANOP                                                      RL17
         LM    9,15,0(WKREG2)           RESTORE REGS               RL17
.EXTSAV3 ANOP                                                      RL17
         B     CHK005                   CONTINUE
*
*   END OF LCH TEST
*
UCB009   STH   WKREG1,2(LCHREG)         UPDATE LCH LAST POINTER
*   LAST TIME THROUGH FOR THIS DEVICE, SET LCH LAST POINTER
*
         TM    SW1,MTCHSW               OTHER RQE'S TO THIS UCB
         BC    1,UCB010                 YES-DO NOT CLEAR CU BUSY
         NI    UCBFLG(UCBREG),X'FF'-UCBCUB   RESET CU BUSY FLAG
UCB010   NI    SW1,X'FF'-MTCHSW         CLEAR MATCH SWITCH
         TM    SW1,PSTSW                IS POST FLAG STILL ON
         BCR   8,LKREG1                 NO - GO GET NEXT REQUEST
*   THE REQ IS ACTIVE ON DATA TRANSFER
         NI    SW1,X'FF'-PSTSW          CLEAR POST SWITCH
         LH    RQEREG,UCBLTS(UCBREG)    GET RQE ADDR
*
*   *   SET UP FOR VALIDITY CHECK RETURN INVALID
         LR    LKREG2,LKREG1            SET UP RETURN TO GET NEXT
*
*   GO TO VALIDITY CHECK. RETURN INVALID ON LKREG2,VALID ON LKREG3
*
         BAL   LKREG3,VALCHK            GO TO VALIDITY CHECK RTN
*
*   THE TEST WAS GOOD
*
*   RETURN TO THIS POINT ON A GOOD VALIDITY CHECK
*                                       RQE OR DEB
*   ACTIVE UCB TEST
UCBAPRG  CH    RQEREG,UCBLTS(UCBREG)    IS IT THIS RQE
         BC    7,CHK004A                NO-BRANCH TO RELINK AND DEQUE
*   THIS IS THE RQE
         NI    SW1,X'FF'-PSTSW          CLEAR POST SWITCH
         AIF   (&B OR &L1).PRG02        TEST FOR SPEC OR LOAD1     LOD3
         AIF   (&LB).NOHLT1             TEST FOR LOAD B           20201
         TM    PRGOPT(INPREG),HIOOPT    HIO OPTION
         BC    1,UCBAPRGA               YES-BRANCH AROUND
.NOHLT1  ANOP                                                     20201
*   UPDATE POINTER-MUST BE ACTIVE SEEK
UCBAPRG1 TM    UCBCHA(UCBREG),UCBHIO    TEST IF ALREADY SETUP   SA69296
         BO    UCB003                   YES-GET NEXT RQE        SA69296
         LH    WKREG1,0(WKREG1)         ADVANCE BACKLINK         BBBBBB
         B     PRGDEBUP                 SET UP TO QUIESCE
.PRG02   ANOP
UCBAPRGA TM    UCBCHA(UCBREG),UCBHIO    TEST IF ALREADY SETUP      LOD3
         BO    UCB003                   YES-GET NEXT RQE           LOD3
         OI    UCBCHA(UCBREG),UCBHIO    SET HALT FLAG FOR IOS      LOD3
         TM    UCBFLG(UCBREG),UCBASK+UCBDTR  DATA TRANSFERRING
         BC    9,UCBHIOA                YES-GO HALT DATA TRANSFER SHARE
*
*   TEST TO SEE IF DIRECT ACCESS. IF NOT, HALT THE DEVICE
*
         CLI   UCBTYP+2(UCBREG),UCBDA   IS IT DIRECT ACCESS
*
*   GO HALT DEVICE IF NOT DIRECT ACCESS
         BNE   UCBHIOA                  NOT DA - GO HALT
*   CHECK FOR RESERVE/RELEASE
         NI    UCBFLG(UCBREG),X'FF'-UCBPST-UCBDTR CLEAR FLAGS
         TM    UCBTYP+1(UCBREG),UCBRR   IS IT SHARABLE DEVICE
         BO    UCB008C                  YES-SET UP FOR REL       BBBBBB
         NI    UCBFLG(UCBREG),X'FF'-UCBBSY-UCBASK CLEAR OTHER FLAGS
         B     CHK004A                  GO RELINK AND DEQUEUE
*
*   VALIDITY CHECKING ROUTINE
*
*   LKREG2 WILL ALWAYS HAVE INVALID RETURN ADDRESS UPON ENTRY.
*   RETURN TO AEQ, IRB, OR UCB PURGE
*   THE VALID RETURN WILL BE VIA LKREG3.
*
*
VALCHK   L     IOBREG,RQEIOB-1(RQEREG)  GET IOB ADDRESS
         AIF   (&B).PRG04               TEST FOR SPECIAL ABEND
         AIF   (&L1).PRG03              TEST FOR LOAD 1            LOD3
         AIF   (&LB).PRG02A             TEST FOR LOAD 1B           LOD3
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION
         BC    1,VALCHKA                YES-BRANCH AROUND
.PRG02A  ANOP                                                      LOD3
         TM    IOBFL+1(IOBREG),IOBPRG   TEST FOR QUIESCING         TSOS
         BCR   1,LKREG2                 YES-RETURN INVALID         TSOS
         AGO   .PRG03
.PRG04   AIF   (&D).PRG05
         CLC   TCBIDF(1,TCBREG),RQETCB(RQEREG)    TCB ID MATCH
         AGO   .PRG06
.PRG05   ANOP
         CLC   PRGTCB(3,INPREG),RQETCB(RQEREG)    TCB ADDRESS MATCH
         AGO   .PRG06
.PRG03   ANOP
VALCHKA  TM    PRGOPT(INPREG),RELOPT    TEST FOR RELATED REQUEST
         BZ    VALCHK1                  NO - CONTINUE TEST
         TM    IOBFL(IOBREG),IOBREL     TEST FOR RELATED IOB
         BCR   1,LKREG2                 NO-RETURN INVALID
         AIF   (&D OR &B).LOD2H
         AIF   (NOT &LA OR &L1).LOD2I   TEST  FOR LD 1 OR NOT 1A   LOD3
VALCHK1  CLC    TCBIDF(1,TCBREG),RQETCB(RQEREG)
         AGO  .PRG06
.LOD2H   ANOP
VALCHK1  TM    PRGOPT(INPREG),DEBOPT    TEST FOR TCB OPTION
         BC    8,VALCHK2                NO - CHECK DEB
         AIF   (&D).SKIPM8
         CLC   TCBIDF(1,TCBREG),RQETCB(RQEREG)    TCB ID MATCH
         AGO   .PRGN0
.SKIPM8  ANOP
         CLC   PRGTCB(3,INPREG),RQETCB(RQEREG)    TCB ADDRESS MATCH
.PRGN0   ANOP
         BCR   7,LKREG2                 NO-RETURN INVALID
         BR    LKREG3                   RETURN VALID
VALCHK2  CLC   PRGDEB(3,INPREG),RQEDEB(RQEREG)    DEB ADDRESS MATCH
         AGO   .PRG06
.LOD2I   ANOP
VALCHK1  CLC   PRGDEB(3,INPREG),RQEDEB(RQEREG)
.PRG06   ANOP
         BCR   7,LKREG2                 NO-RETURN INVALID
         BR    LKREG3                   RETURN VALID
*
*
*
         AIF   (&D).RES2
         AIF   (&B).SKIPQ8
         AIF   (&LA).LOD2J              TEST FOR LOAD 1A           LOD3
.RES2    ANOP
*
*
*                        DEB PURGE ROUTINE
*
DEB001   MVC   PRGDEB(3,INPREG),DEBNXT(DEBREG)    GET NEXT DEB ADDR
         L     DEBREG,DEBNXT-1(DEBREG)  LOAD DEB REGISTER
DEBPURG  SR    EXTREG,EXTREG            CLEAR REGISTER
         IC    EXTREG,DEBNEX(DEBREG)    GET NO. OF EXTENTS
         LTR   EXTREG,EXTREG            VALID EXTENT NUMBER      A25342
         BC    8,DEB003                 NO-CHECK IF LAST DEB     A25342
         B     WTQPRG                   PURGE WTQ,RB,AND AEQ     BBBBBB
DEBPURGA SR    IDXREG,IDXREG            CLEAR INDEX REGISTER     BBBBBB
         STH   IDXREG,SAVE4             SAVE INDEX VALUE
DEB002   LH    UCBREG,DEBEXT+2(DEBREG,IDXREG) GET UCB ADDRESS
DEB002A  BAL   LKREG1,UCBPURG           GO PURGE ON THIS UCB      20201
         L     LKREG3,CVTIXA(CVTREG)    GET NXAVL PTR             20201
         L     LKREG3,ZPDEB(LKREG3)     GET POINTER TO ZEUS RTN   20201
         BALR  LKREG2,LKREG3            BR AND LINK TO RTN        20201
*   VALID RETURN TO THIS POINT
*
         B     DEB002A                  GO PURGE ZEUS DEVICE      20201
*   RETURN TO THIS POINT IF NO ZEUS DEVICES OR END OF RING
*
*
         LH    IDXREG,SAVE4     GET INDEX VALUE
         IC    WKREG1,DEBSIZ(DEBREG)    GET EXTENT SIZE CODE
         LA    WKREG2,1                 GET A ONE IN REG.
         SLL   WKREG2,0(WKREG1)         MULT. FOR 4 OR 16 BYTE EXTENT
         AR    IDXREG,WKREG2            NEXT EXTENT INDEX
         STH   IDXREG,SAVE4             SAVE INDEX VALUE
*
         BCT   EXTREG,DEB002  TEST FOR END OF EXT. AND DECR. COUNT
DEB003   TM    0(INPREG),DEBCHN         THIS DEB ONLY            A25342
         BC    1,POSTCHK                YES, CHECK END POST
         NC    DEBNXT(3,DEBREG),DEBNXT(DEBREG)    END OF CHAIN
         BC    7,DEB001                 NO, CHANGE INPUT DEB ADDR.
         MVC   PRGDEB(3,INPREG),SAVE2+1 GET ORIGINAL DEB ADDRESS
.LOD2J   ANOP
*
         AIF   (NOT &L1).LOD2JA         NOT LOAD 1
POSTCHK  EQU   *                        LABEL FOR LOAD 1           LOD3
         AGO   .SKPS4B                                             LOD3
.LOD2JA  ANOP
POSTCHK  TM    PRGCTR(INPREG),X'FF'     TEST COUNT FOR ZERO
         BC    8,ENDPURG                YES - BRANCH TO END
         AIF   (NOT &TS).TS09           TEST FOR TS               20001
         TM    PRGOPT(INPREG),LSTOPT    TEST FOR LIST OPTION      20001
         BO    ENDPURG                  YES-DO NOT WAIT           20001
.TS09    ANOP                                                     20001
WAITENT  LR    WKREG2,INPREG            SAVE INPUT PARA           20001
         L     WKREG1,SAVE1             SAVE TCB ADDRESS
         L     DEBREG,PRGOPT(INPREG)    SAVE OPTION BYTE AND DEB ADDR
         AIF   (&A).SKPS14
         L     RQEREG,SAVE14            SAVE ORIG RETURN ADDR
.SKPS14  ANOP
         MVC   PRGDEB(3,INPREG),SAVE1+1 GET TCB ADDRESS TO INPUT PARA
         MVC   PRGCHN(3,INPREG),PRGTCB(INPREG)    GET TCB ADDR     POST
         LA    INPREG,PRGCOD(INPREG)    GET ECB ADDRESS
         LA    0,1                      GET COUNT OF 1
         SVC   ONE .                    WAIT---R0 AND R1 OK     SA41451
         SSM   CHANIND+1                DISABLE INTERRUPTS
         LR    INPREG,WKREG2            RESTORE INPUT PARA ADDRESS
         ST    WKREG1,SAVE1             SAVE TCB ADDRESS
         ST    DEBREG,PRGOPT(INPREG)    RESTORE OPT BYTE AND DEB ADDR
         AIF   (&A).SKPS4A
         ST    RQEREG,SAVE14            RE-SAVE RETURN ADDRESS
         AIF   (NOT &TS).TS010          TEST FOR TS               20001
         TM    PRGOPT(INPREG),LSTOPT    TEST FOR WAIT ON LIST     20001
         BO    PP008                    YES - BRANCH BACK TO EXIT 20001
.TS010   ANOP                                                     20001
.SKPS4A  ANOP
         B     REPURG                   RETURN TO RE-PURGE
.SKPS4B  ANOP                                                      LOD3
ENDPURG  MVC   1(3,CHNREG),MASK1        MARK END OF CHAIN          MOD1
         AIF   (&TS).SKPS4C             TEST FOR TSO              20001
ENDPURGA MVI   PRGCOD(INPREG),NRMCMP    POST COMPLETION CODE       MOD1
         AIF   (NOT &L1).SKPS4C         NOT LOAD 1                 LOD3
         SVC   3                        EXIT                       LOD3
         AGO   .SKIPQ8                                             LOD3
.SKPS4C  ANOP                                                      LOD3
         AIF   (&LB).NOHLT2             TEST FOR LOAD B           20201
         AIF   (NOT &TS).TS011          TEST FOR TS               20001
ENDPURGA TM    PRGOPT(INPREG),LSTOPT    TEST FOR LIST OPTION      20001
         BO    PPRESUM                  YES-RESUME ON LIST        20001
         MVI   PRGCOD(INPREG),NRMCMP    POST COMP CODE            20001
.TS011   ANOP                                                     20001
         AIF   (NOT &E).NTSVRT .NO NEED TO SAVE RETURN            M2181
         L     WKREG2,SAVE14 .SAVE RETURN ADDR OVER DEQ           M2181
.NTSVRT  ANOP                                                     M2181
         TM    PRGOPT(INPREG),HIOOPT    TEST FOR HIO OPTION
         BO    ENDPURG1                 YES - BRANCH AROUND
.NOHLT2  ANOP                                                     20201
         AIF   (&E).RBENQ2
         L     RBREG,SAVE1
         L     RBREG,TCBRB(RBREG)
         LA    INPREG,RBEXT+28(RBREG)
         AGO   .RBENQ3
.RBENQ2  ANOP
         LA    INPREG,NQTBL             GET ENQ TABLE ADDRESS
.RBENQ3  ANOP
         SVC   48                       DEQUEUE
         AIF   (&E).SKIPR0
ENDPURG1 SVC   3                        EXIT
*
         AGO   .SKIPQ8
.SKIPR0  ANOP
ENDPURG1 LR     LKREG2,WKREG2 .RESTORE RETURN ADDR                M2181
         BR    14
*
.SKIPQ8  ANOP
*
*
*                        PURGE DEQUE SUBROUTINE
*
DEQUE    NI    RQEUCB+1(RQEREG),X'FE'   RESET SIRB INDICATOR
         LH    UCBREG,RQEUCB(RQEREG)    GET UCB ADDRESS
         CLI   UCBETI(UCBREG),X'FF'     TEST FOR IOPURGE          M4242
         BNE   DEQUES                   NO - BRANCH               M4242
         LA    UCBREG,SIX(UCBREG)       ADJUST ADDR FOR TESTS    BBBBBB
DEQUES   MVN   SHIFT+3(1),UCBCHA(UCBREG)    GET CH ADD IN SHIFT  BBBBBB
         L     WKREG2,CHANIND           GET BIT TO SHIFT         BBBBBB
SHIFT    SRL   WKREG2,0(0)              SHIFT CHAN IND BIT
         ST    WKREG2,CHANSAV           STORE CHAN INDICATOR     BBBBBB
         L     WKREG2,CVTIXA(CVTREG)    GET NEXT AVAILABLE ADDR
         CH    RQEREG,UCBLTS(UCBREG)    TEST FOR LAST RQE USED
         BNE   DEQUE1                   NO - BRANCH AROUND
         TM    UCBFLG(UCBREG),UCBERR+UCBCUB+UCBNRY+UCBASK TEST BITS
          BZ   DEQUEA                   NO - BRANCH AROUND         RL17
         OC    CHMSAV(2,WKREG2),CHANSAV OR CHAN MASK TO IOS
DEQUEA   NI    UCBFLG(UCBREG),X'FF'-UCBERR-UCBCUB-UCBNRY-UCBASK
DEQUE1   MVC   RQELNK(2,RQEREG),0(WKREG2)    PUT ON FREE LIST
         STH   RQEREG,0(WKREG2)         UPDATE FREE LIST
         OI    RQEIDT(RQEREG),X'FF'     TCB ID CLEARED
         AIF   (&B).NOQUS2              TEST FOR SPECIAL         BBBBBB
         AIF   (&D).LOD2M
         AIF   (&LA).LOD2M              TEST FOR LOAD 1A           LOD3
DEQUEB   IC    WKREG2,0(CHNREG)
         AGO   .LOD2N
.LOD2M   ANOP
DEQUEB   TM    PRGOPT(INPREG),DEBOPT+HIOOPT  TCB WITH HIO OPTION   HARE
         AIF   (&LA).LOD2MA             TEST FOR LOAD A            LOD3
         BO    QUSTST                   YES-BRANCH AROUND          LOD3
         AGO   .LOD2MB                  BRANCH AROUND              LOD3
.LOD2MA  ANOP                                                      LOD3
         BCR   1,LKREG3                 YES, RETURN TO SUBROUTINE
.LOD2MB  ANOP                                                      LOD3
         IC    WKREG2,0(CHNREG)         SAVE HI BYTE
.LOD2N   ANOP
         ST    IOBREG,0(CHNREG)         BUILD IOB CHAIN
         STC   WKREG2,0(CHNREG)         RESTORE HI BYTE
         LA    CHNREG,IOBCHN(IOBREG)    GET NEXT CHAIN ADDR
.SKIPR6  ANOP
         AIF   (&C).NOQUS2              TEST FOR 12*             BBBBBB
.*   TEST FOR THIS REQUEST QUIESCING IF HIO OPTION
         TM    PRGOPT(INPREG),HIOOPT . IF HIO,CLEAN-UP QUIESCE   A44106
         BCR   8,LKREG3 .              EXIT DEQUE                A44106
QUSTST   STM   9,15,SAVE3               SAVE REGS
         L     DEBREG,RQEDEB-1(RQEREG)  GET DEB ADDRESS
         NC    DEBECB(3,DEBREG),DEBECB(DEBREG)    TEST FOR QUIESCE
         BZ    QUSTSTA                  NO-RETURN
         CH    RQEREG,UCBLTS(UCBREG)    TEST FOR LAST REQUEST
         BNE   QUSTSTA                  NO-RETURN
         L     QUSWK2,DEBECB-1(DEBREG)  GET PARAM LIST ADDR.
         TM    PRGOPT(QUSWK2),DEBOPT    TEST FOR DEB OPTION
         BC    8,PRGCOM1                YES-NO TEST
.*   TEST FOR CORRECT TCB
         AIF   (&C).PRGID               TEST FOR 12*
         CLC   PRGTCB+4(3,QUSWK2),RQETCB(RQEREG)    TEST TCB    SA61707
         AGO   .PRGTCB
.PRGID   ANOP
         L     QUSWK1,PRGTCB-1(QUSWK2)  GET TCB ADDRESS
         CLC   TCBIDF(1,QUSWK1),RQETCB(RQEREG)    TCB ID MATCH
.PRGTCB  ANOP
         BNE   QUSTSTA                  NO-RETURN
PRGCOM1  SR    WKREG2,WKREG2 .         CLEAR REG                A44106
         IC    WKREG2,DEBQUS(DEBREG) . ANY QUIESCE COUNT        A44106
         LTR   WKREG2,WKREG2 .                                  A44106
         BC    12,QUSTSTA .                                     A44106
         BCT   WKREG2,PRGDEC1 .        UPDATE COUNT              A44106
         XC    DEBECB(3,DEBREG),DEBECB(DEBREG)    CLEAR POINTER
PRGDEC1  STC   WKREG2,DEBQUS(DEBREG) . MAINT QUIESCE COUNT       A44106
         IC    WKREG2,PRGCTR(QUSWK2)                             A44106
         BCT   WKREG2,PRGDEC2 .                                  A44106
         MVI   PRGCTR(QUSWK2),X'00'     CLEAR COUNTER FIELD
         L     QUSWK3,PRGDEB-1(QUSWK2)  GET TCB ADDRESS
         LA    QUSWK2,PRGCOD(QUSWK2)    GET ECB ADDRESS
         LA    QUSWK1,127               GET COMP. CODE
         SLL   QUSWK1,24                SHIFT COMP. CODE
         L     LKREG3,CVT0PT(CVTREG)    GET POST ADDRESS
         BALR  LKREG2,LKREG3            BRANCH TO POST
         LM    9,15,SAVE3               RESTORE REGS
         BR    LKREG3                   RETURN TO SUBROUTINE     BBBBBB
PRGDEC2  STC   WKREG2,PRGCTR(QUSWK2) . UPDATE TOTAL QUIESCE COUNTA44106
QUSTSTA  LM    9,15,SAVE3               RESTORE REGS
.NOQUS2  ANOP
         BR    LKREG3                   RETURN TO SUBROUTINE
*
         AIF   (NOT &B AND NOT &D).CHSAV
         AIF   (&B).SKSAV1
SAVE1    DC    F'0'     CURRENT TCB ADDR
.SKSAV1  ANOP
SAVE2    DC    F'0'                     DEB ADDRESS OR RQE POINTER
.CHSAV   ANOP
         DS    0F
         AIF   (NOT &TS).TS012          TEST FOR TS               20001
SAVE5    DC    F'0'                     CUR QPL SAVE AREA         20001
ZERO     DC    F'0'                     MASK OF ZEROS             20001
.TS012   ANOP                                                     20001
CHANIND  DC    X'80000000'              CHAN INDICATOR MASK      BBBBBB
CHANSAV  DC    F'0'                     CHANNEL BIT SAVE AREA    BBBBBB
MASK1    DC    X'FFFFFFFE'              END OF CHAIN AND CL SIRBIT LOD3
         AIF   (&B).SKSAV2
         AIF   (&L1 OR &LA OR &LB).NMSK                          BBBBBB
MASK     DC    X'000007FF'
.NMSK    AIF   (&A).SKSAV3A             TEST FOR NON-RES         BBBBBB
.SKSAV2  ANOP
SAVE3    DS    7F       REG. SAVE AREA
         AIF   (&B).SKSAV3
.SKSAV3A ANOP
         AIF   (NOT &L1).LOD2O          TEST FOR NOT LOAD 1        LOD3
NAME2    DC    C'IGC0101F'
NAME3    DC    C'IGC0201F'              DEB QUIESCE LOAD NAME      LOD3
.LOD2O   AIF   (&LA OR &LB).NNQTBL                               BBBBBB
NQTBL    DC    X'FF014100'
.NNQTBL  AIF   (&D).CHSAV1                                       BBBBBB
SAVE1    DC    F'0'
SAVE2    DC    F'0'
         AGO   .CHSAV2
.CHSAV1  ANOP
         DC    A(QNAME)
         DC    A(RNAME)
.CHSAV2  AIF   (&LA OR &LB).SKSAV3                               BBBBBB
QNAME    DC    C'SYSIEC16'
RNAME    DC    X'F0'
.SKSAV3  ANOP
SW1      DC    X'00'                    INTERNAL SWITCH
         AIF   (&A).SKIPR8
SAVE14   DC    F'0'     RETURN ADDR.
.SKIPR8  ANOP
         AIF   (&C).SKIPR9
ASIRB    DC    A(SIRB)  SIRB IN EXIT EFFECT.
         AIF   (NOT &MP).MPSKP4
AERTSK   DC    V(IEAERTCB)              SIRB TCB
.MPSKP4  ANOP
.SKIPR9  ANOP
         AIF   (&D).RES5
         AIF   (&B OR &LA).SKIPS0       TEST FOR SPEC OR LOAD 1A   LOD3
.RES5    ANOP
SAVE4    DC    H'0'     DEB INDEX VALUE
.SKIPS0  ANOP
         MEND
