         TITLE '   R O T A T E R '
***********************************************************************
*                                                                     *
*  ROTATER                                                            *
*                                                                     *
***********************************************************************
*                                                                     *
*  WRITTEN BY. BILL GODFREY, PRC (PLANNING RESEARCH CORPORATION).     *
*  A MODIFIED VERSION OF A PROGRAM BY BRUCE E. HOGMAN,                *
*  WHICH HAD ASSEMBLER-H DEPENDENT CODE AND USER MACROS.              *
*  INSTALLATION. AIR FORCE DATA SERVICES CENTER, THE PENTAGON.        *
*  DATE WRITTEN. MARCH 12 1982.                                       *
*  DATE UPDATED. MARCH 15 1982.                                       *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS PROGRAM MANIPULATES THE DATA OF A PRINTED PAGE SO THAT        *
*  IT CAN BE PRINTED ON THE 3800 PRINTER USING A CHARACTER SET        *
*  THAT CONTAINS CHARACTERS ROTATED 90 DEGREES CLOCKWISE.             *
*  FCB=LN12 (A 12-LINE-PER-INCH FCB) AND CHARS=TURN (A ROTATED        *
*  CHARACTER SET) ARE REQUIRED FOR THE SYSOUT FILE.                   *
*  OUTPUT IS REALLY 132 BYTES WIDE, 120 LINES PER PAGE, BUT SINCE     *
*  YOU WILL READ THE PAGE SIDEWAYS IT LOOKS LIKE THE                  *
*  OUTPUT IS 132 LINES PER PAGE, EACH LINE 120 BYTES WIDE, WITH       *
*  EVERY OTHER SKIP-TO-CH1 CHANGED TO SKIP TO LINE 67                 *
*  (OR TWO PAGES OF 66 LINES-PER-PAGE ON EACH SHEET OF PAPER).        *
*                                                                     *
***********************************************************************
         PRINT NOGEN
ROTATER  CSECT
         USING *,R11,R12
         B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'ROTATER'
         DC    CL16' &SYSDATE &SYSTIME '
@SIZE    DC    0F'0',AL1(0),AL3(@DATAL)  SUBPOOL AND LENGTH
@PROLOG  STM   14,12,12(R13)
         LR    R11,R15        BASE REGISTER
         LA    R15,1               SECOND BASE REG
         LA    R12,4095(R15,R11)
         LR    R2,R1               SAVE PARM
         L     R0,@SIZE
         GETMAIN R,LV=(0)
         XC    0(72,R1),0(R1)
         ST    R13,4(,R1)
         ST    R1,8(,R13)
         LR    R13,R1              STD SAVE AREA LINKAGE COMPLETE
         USING @DATA,R13
         XC    @ZERO(@ZEROL),@ZERO CLEAR SOME FIELDS TO ZEROS
         L     R2,0(R2)            PARM ADDRESS
         LH    R0,0(,R2)           GET LENGTH OF PARM
         CH    R0,=H'16'           LONG ENOUGH FOR 2 DDNAMES
         BL    MINIPARM            NO, BRANCH
         MVC   INPUTDCB+40(8),2(R2)  MOVE DDNAME
         MVC   PRTDCB+40(8),10(R2)
         LA    R2,16(,R2)          ADJUST R2 TO IGNORE DDNAMES
         SH    R0,=H'16'           ADJUST R0 TO IGNORE DDNAMES
MINIPARM LTR   R0,R0
         BZ    NOPARM
         CLI   2(R2),C'S'          PARM=S OR PARM=DDNAME01DDNAME02S
         BNE   *+8
         MVI   PGMSW,4
NOPARM   EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         OPEN THE INPUT AND SYSOUT FILES                             *
*                                                                     *
***********************************************************************
         SPACE
         OPEN  (INPUTDCB,INPUT,PRTDCB,OUTPUT)
         SPACE
***********************************************************************
*                                                                     *
*         DETERMINE TYPE OF INPUT FILE                                *
*                                                                     *
***********************************************************************
         SPACE
         MVC   UT1LRECL,INPUTDCB+82
         CLC   UT1LRECL,=H'0'      IS LRECL 0
         BNE   *+10                NO
         MVC   UT1LRECL,INPUTDCB+62  YES, USE BLKSIZE
         SPACE
         MVC   UT1RECFM,INPUTDCB+36
         TM    UT1RECFM,X'C0'      IS RECFM U
         BNO   *+8                 NO
         NI    UT1RECFM,255-X'C0'  YES, TURN OFF F AND V BITS
         SPACE
         MVC   MAX121,=H'120'      CC PRESENT
         TM    UT1RECFM,X'06'      IS RECFM A OR M
         BZ    *+10                NO
         MVC   MAX121,=H'121'      CC PRESENT
         SPACE
         LH    R1,UT1LRECL         LRECL
         M     R0,=F'133'
         ST    R1,BUFFLEN
         LR    R0,R1
         GETMAIN R,LV=(0)
         ST    R1,@BUFFER
         BAL   R8,CLEARBUF
         MVI   PREV,0
         MVI   BLINE,C' '
         MVC   BLINE+1(L'BLINE-1),BLINE
         SPACE
***********************************************************************
*                                                                     *
*         READ A RECORD                                               *
*                                                                     *
***********************************************************************
         SPACE
READLOOP EQU   *
         GET   INPUTDCB
         ST    R1,@RECORD
         TM    UT1RECFM,X'40'      IS RECFM V
         BZ    READNOTV            NO, BRANCH
         LH    R0,0(R1) GET RDW
         L     R1,@RECORD
         LA    R1,4(R1)         POINT TO DATA PORTION
         ST    R1,@RECORD
         SH    R0,=H'4'         LESS RDW
         B     READX
READNOTV LH    R0,INPUTDCB+82      NO, GET LRECL FOR FB OR U
         LTR   R0,R0               IS RECFM F UNBLOCKED
         BP    READX               NO, BRANCH
         LH    R0,INPUTDCB+62      YES, GET BLKSIZE
READX    CH    R0,MAX121           IS RECORD TOO LONG
         BNH   *+8                 NO
         LH    R0,MAX121           YES, TRUNCATE IT
         ST    R0,RECSIZE          SAVE USABLE RECORD LENGTH
         TM    UT1RECFM,X'02'      MACHINE CC
         BZ    READNOTM            NO
         BAL   R14,CONVERT         YES, CONVERT TO ASA
         LTR   R15,R15             DOES IT CONVERT TO NO-OP
         BNZ   READLOOP            YES, READ ANOTHER RECORD
READNOTM EQU   *
         SPACE
***********************************************************************
*                                                                     *
*         ROTATE AND PRINT THE DATA                                   *
*                                                                     *
***********************************************************************
         SPACE
         BAL   R8,ADJLINNO
         TM    UT1RECFM,X'06'      IS THERE CARRIAGE CONTROL
         BZ    CCABS               NO, BRANCH
         L     R1,@RECORD          YES,
         LA    R1,1(R1)             POINT
         ST    R1,@RECORD            PAST IT
         L     R1,RECSIZE             AND
         BCTR  R1,0                    REDUCE
         ST    R1,RECSIZE               LENGTH
CCABS    EQU   *
         CLC   LINENO,=F'132'
         BNH   SAMEBUFR
         BAL   R8,PRINTBUF
         BAL   R8,CLEARBUF
         MVC   LINENO,=F'1'
SAMEBUFR EQU   *
         BAL   R8,MOVEREC
         B     READLOOP
         SPACE
***********************************************************************
*                                                                     *
*         SUBROUTINES                                                 *
*                                                                     *
***********************************************************************
         SPACE
MOVEREC  EQU   *
         L     R1,@RECORD
         L     R5,RECSIZE
         C     R5,MAXLRECL         SAVE
         BNH   *+8                  MAX
         ST    R5,MAXLRECL           LRECL
         BCTR  R5,0
         AR    R5,R1               POINT TO LAST BYTE FOR BXLE
         LA    R4,1                INCREMENT FOR BXLE
         LA    R3,0(,R1)           FIRST BYTE FOR BXLE
         LA    R2,133
         S     R2,LINENO           LINENO 1 TO 132 MAKES R2 132 TO 1
         L     R6,@BUFFER          DEST
         AR    R6,R2
MLOOP    MVC   0(1,R6),0(R3)
         LA    R6,133(R6)
         BXLE  R3,R4,MLOOP
         BR    R8
         SPACE
***********************************************************************
         SPACE
PRINTBUF EQU   *
         LH    R3,INPUTDCB+82
         LTR   R3,R3
         BNZ   *+8
         LH    R3,INPUTDCB+62
         TM    UT1RECFM,X'40'      RECFM V
         BZ    *+8
         L     R3,MAXLRECL    OBTAIN MAX REC LEN FOR PAGE
         SPACE
         C     R3,=F'120'
         BNH   *+8
         LA    R3,120
         SPACE
         BCTR  R3,0
         M     R2,=F'133'
         LA    R2,133
         L     R4,@BUFFER
         AR    R3,R4
PLOOP    PUT   PRTDCB,(R4)
         BXLE  R4,R2,PLOOP
         XC    MAXLRECL,MAXLRECL ZERO MAXLRECL FOR VB FORMAT
         L     R14,RCNTO           ADD TO COUNT OF PAGES OUTPUT
         AL    R14,=F'1'
         ST    R14,RCNTO
         BR    R8
         SPACE
***********************************************************************
         SPACE
ADJLINNO EQU   *
         L     R1,@RECORD
         L     R2,LINENO
         LA    R0,1(R2)            ADD 1 TO LINENO
         TM    UT1RECFM,X'06'      CC PRESENT
         BZ    ADJX                NO, EXIT
         CLI   0(R1),C' '          SINGLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,2(R2)            ADD 2 TO LINENO
         CLI   0(R1),C'0'          DOUBLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,3(R2)            ADD 3 TO LINENO
         CLI   0(R1),C'-'          TRIPLE SPACE
         BE    ADJX                YES, EXIT
         LA    R0,1(R2)            ADD 1 TO LINENO
         CLI   0(R1),C'1'          NEW PAGE
         BNE   ADJX                NO, BRANCH
         L     R14,RCNTI            ADD TO COUNT OF INPUT PAGES
         AL    R14,=F'1'
         ST    R14,RCNTI
         LA    R0,10(,R2)       ADD 10 TO LINENO
         CLI   PGMSW,4          SQUISH
         BE    ADJX             YES, BRANCH
         LA    R0,999           CAUSE PAGE OVERFLOW
         C     R2,=F'67'        IF
         BNL   ADJX               GE 67
         LA    R0,67            MAKE IT 67
         LTR   R2,R2            IF
         BNZ   ADJX               NOT FIRST TIME
         LA    R0,1             FIRST TIME MAKE IT 1
ADJX     ST    R0,LINENO
         BR    R8
         SPACE
***********************************************************************
         SPACE
CLEARBUF L     R14,@BUFFER
         L     R15,BUFFLEN
         XR    R0,R0
         L     R1,=A(X'40000000')
         MVCL  R14,R0
         L     R1,@BUFFER
         MVI   0(R1),C'1'
         BR    R8
         SPACE
***********************************************************************
*                                                                     *
*         CONVERT CARRIAGE CONTROLS TO ASA                            *
*                                                                     *
***********************************************************************
*
*               ANY RECORD NOT CONTAINING A MACHINE CC WILL BE
*               COPIED WITH ITS OWN CC, EXCEPT:
*                   IF IT IS THE FIRST RECORD OF ITS TYPE
*                   AND IS A SINGLE-SPACE IT WILL BE CHANGED TO
*                   SKIP-TO-CHANNEL 1.
*
*               A RECORD CONTAINING A MACHINE CC (WRITE) WILL BE
*               COPIED WITH AN ASA BASED ON THE PREVIOUS MACHINE CC.
*               IF THE RECORD WAS NOT PRECEDED WITH A MACHINE CC
*               RECORD, IT IS WRITTEN WITH SKIP-TO-CHANNEL 1.
*
*               A RECORD CONTAINING A MACHINE CC (IMMEDIATE) WILL
*               NOT BE COPIED, BUT ITS CC WILL DETERMINE THE CC
*               OF THE NEXT RECORD (UNLESS NEXT IS ASA OR IMM).
*
*               IF A MACHINE WRTSP1 OR IMMSP1 IS FOLLOWED BY
*               A MACHINE IMMEDIATE SKIP, THE SPACE 1 WILL BE
*               DROPPED.  THIS IS BECAUSE A BLANK LINE WOULD
*               HAVE TO BE WRITTEN, AND IT IS PROBABLY UNNECESSARY.
*               IF THIS EVER CAUSES A PROBLEM, IT IS EASY TO REMOVE
*               THIS LOGIC AND WRITE THE BLANK LINE.  JUST REMOVE
*               THE GROUP OF INSTRUCTIONS MARKED '-OPT-'
*
*               CONDITIONS NOT PROPERLY HANDLED (BUT INSIGNIFICANT).
*                  IMMEDIATE FOLLOWED BY ASA OR EOF.
*                     (IGNORED)
*                  WRITE FOLLOWED BY ASA OR EOF.
*                     (SP/SK IGNORED)
*
CONVERT  MVC   HPREV,PREV
         L     R8,@RECORD
         TRT   0(1,R8),TABMACH     MACHINE CC
         BZ    ASA                 NO, BRANCH
*
*               MACHINE CC
*
         STC   R2,PREV             STORE ASA FOR NEXT RECORD
         TM    0(R8),X'02'         IS IT IMMEDIATE
         BZ    PUTP                NO, ITS A WRITE
         CLI   HPREV,0             IS THERE AN OUTSTANDING ACTION
         BE    NOPUT               NO, BRANCH
         CLI   HPREV,C'+'          WAS PREV WRTSP0 OR IMMSP0
         BE    NOPUT               YES, BRANCH
         CLI   HPREV,C' '   -OPT-  WAS PREV WRTSP1 OR IMMSP1
         BNE   PREVSIG      -OPT-  NO, ITS PROBABLY SIGNIFICANT
         TM    0(R8),X'80'  -OPT-  IS THIS A SKIP, NOT A SPACE
         BO    NOPUT        -OPT-  ITS A SKIP, SO PREV CAN BE IGNORED
PREVSIG  MVC   BLINE(1),HPREV      WRITE A BLANK LINE WITH HPREV
         LA    R8,BLINE
         ST    R8,@RECORD
         MVC   RECSIZE,=F'2'       IN CASE RECFM V
         SR    R15,R15             WRITE THE LINE POINTED TO BY @RECORD
         BR    R14
NOPUT    LA    R15,4               DO NOT WRITE A LINE
         BR    R14
         SPACE
PUTP     MVC   0(1,R8),HPREV
         CLI   0(R8),0             IS THERE A CC BASED ON PREV RECORD
         BNE   PUT                 YES, GO USE IT
*
*               WE'VE HIT A MACHINE WRT CC NOT PRECEDED BY
*               A MACHINE CC.
*               MAKE IT SKIP TO CHANNEL 1.
*
         MVI   0(R8),C'1'
         B     PUT
*
*               ASA CC
*
ASA      CLI   PREV,0              WAS PREVIOUS RECORD MACHINE
         BE    PUT                 NO, BRANCH
         MVI   PREV,0
*
*               WE'VE HIT AN ASA RECORD NOT PRECEDED BY AN ASA RECORD.
*
*               IF IT'S A SINGLE SPACE, CHANGE IT TO SKIP TO CH 1.
*
         CLI   0(R8),C' '
         BNE   PUT
         MVI   0(R8),C'1'
PUT      SR    R15,R15
         BR    R14
         SPACE
         SPACE
***********************************************************************
*                                                                     *
*         TERMINATE                                                   *
*                                                                     *
***********************************************************************
         SPACE
EOF      CLC   LINENO,=F'1'        ANYTHING TO PRINT
         BNH   *+8                 NO, SKIP PRINTBUF
         BAL   R8,PRINTBUF         PURGE PRINT BUFFER
         CLOSE (INPUTDCB,,PRTDCB)  CLOSE BOTH DCBS
         L     R0,RCNTI            COUNT OF INPUT LINES CC1=C'1'
         CVD   R0,DOUBLE           CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'      MAKE PRINTABLE
         UNPK  PRCNTI,DOUBLE       UNPACK TO WTO MESSAGE
         L     R0,RCNTO            DO SAME FOR OUTPUT PAGE COUNT
         CVD   R0,DOUBLE           CONVERT TO DECIMAL
         OI    DOUBLE+7,X'0F'      MAKE PRINTABLE
         UNPK  PRCNTO,DOUBLE       UNPACK TO WTO MESSAGE
         WTO   MF=(E,CNTWTO)
         ORG   *-2                 DONT WTO
         NOPR  0                   DONT WTO
         LH    R1,UT1LRECL         PICK UP LRECL
         M     R0,=F'133'
         LR    R0,R1               LENGTH FOR FREEMAIN
         L     R1,@BUFFER          ADDRESS FOR FREEMAIN
         FREEMAIN R,LV=(0),A=(1)
         L     R15,RCNTO           RETURN COUNT OF PAGES OUTPUT
         LR    R1,R13              ADDRESS FOR FREEMAIN
         L     R0,@SIZE            LENGTH FOR FREEMAIN
         L     R13,4(R13)
         LR    R2,R15
         FREEMAIN R,LV=(0),A=(1)
         LR    R15,R2              RETURN COUNT OF PAGES OUTPUT
         RETURN (14,12),RC=(15)
         SPACE
***********************************************************************
*                                                                     *
*         CONSTANTS AND WORKAREA                                      *
*                                                                     *
***********************************************************************
         SPACE
         LTORG
         SPACE
         PRINT NOGEN
         SPACE
INPUTDCB DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=EOF,EROPT=ACC
         SPACE
PRTDCB   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,                        +
               RECFM=FBA,LRECL=133,BLKSIZE=5985
         SPACE
         PRINT GEN
         SPACE
CNTWTO   WTO   'SFI1005I ROTATED PAGES IN=00000, OUT=00000',ROUTCDE=11,+
               MF=L
PRCNTI   EQU   CNTWTO+30,5,C'C'
PRCNTO   EQU   CNTWTO+41,5,C'C'
         SPACE
YES      EQU   C'Y'
NO       EQU   C'N'
         SPACE
         DC    0D'0'
TABMACH  DC    256X'00'
         ORG   TABMACH+X'01'       WRT SP0
         DC    C'+'
         ORG   TABMACH+X'09'       WRT SP1
         DC    C' '
         ORG   TABMACH+X'11'       WRT SP2
         DC    C'0'
         ORG   TABMACH+X'19'       WRT SP3
         DC    C'-'
         ORG   TABMACH+X'89'       WRT SK1
         DC    C'1'
         ORG   TABMACH+X'91'       WRT SK2
         DC    C'2'
         ORG   TABMACH+X'99'       WRT SK3
         DC    C'3'
         ORG   TABMACH+X'A1'       WRT SK4
         DC    C'4'
         ORG   TABMACH+X'A9'       WRT SK5
         DC    C'5'
         ORG   TABMACH+X'B1'       WRT SK6
         DC    C'6'
         ORG   TABMACH+X'B9'       WRT SK7
         DC    C'7'
         ORG   TABMACH+X'C1'       WRT SK8
         DC    C'8'
         ORG   TABMACH+X'C9'       WRT SK9
         DC    C'9'
         ORG   TABMACH+X'D1'       WRT SK10
         DC    C'A'
         ORG   TABMACH+X'D9'       WRT SK11
         DC    C'B'
         ORG   TABMACH+X'E1'       WRT SK12
         DC    C'C'
         ORG   TABMACH+X'03'       IMM SP0 (NO-OP)
         DC    C'+'
         ORG   TABMACH+X'0B'       IMM SP1
         DC    C' '
         ORG   TABMACH+X'13'       IMM SP2
         DC    C'0'
         ORG   TABMACH+X'1B'       IMM SP3
         DC    C'-'
         ORG   TABMACH+X'8B'       IMM SK1
         DC    C'1'
         ORG   TABMACH+X'93'       IMM SK2
         DC    C'2'
         ORG   TABMACH+X'9B'       IMM SK3
         DC    C'3'
         ORG   TABMACH+X'A3'       IMM SK4
         DC    C'4'
         ORG   TABMACH+X'AB'       IMM SK5
         DC    C'5'
         ORG   TABMACH+X'B3'       IMM SK6
         DC    C'6'
         ORG   TABMACH+X'BB'       IMM SK7
         DC    C'7'
         ORG   TABMACH+X'C3'       IMM SK8
         DC    C'8'
         ORG   TABMACH+X'CB'       IMM SK9
         DC    C'9'
         ORG   TABMACH+X'D3'       IMM SK10
         DC    C'A'
         ORG   TABMACH+X'DB'       IMM SK11
         DC    C'B'
         ORG   TABMACH+X'E3'       IMM SK12
         DC    C'C'
         ORG
         SPACE
@DATA    DSECT
         DS    18F
@ZERO    DS    0D
DOUBLE   DS    D                   DOUBLE WORD WORK AREA
RCNTI    DS    F                   COUNT OF PAGES INPUT
RCNTO    DS    F                   COUNT OF PAGES ACTUALLY PRINTED
PGMSW    DS    F                   SWITCH
@BUFFER  DS    A                   ADDRESS OF ROTATED BUFFER
@RECORD  DS    A                   ADDRESS OF INPUT RECORD
BUFFLEN  DS    A                   LENGTH OF GOTTEN AREA
LINENO   DS    A                   NUMBER OF LINE OF OUTPUT
RECSIZE  DS    A                   RECORD LENGTH (UP TO 120)
*                                  (BECOMES NUMBER OF LINES)
MAXLRECL DS    A                   MAXLRECL FOR VB INPUT/PAGE
PREV     DS    C
HPREV    DS    C
UT1RECFM DS    X
UT1LRECL DS    H
MAX121   DS    H
@ZEROL   EQU   *-@ZERO             LENGTH OF AREA TO BE ZERO'D
BLINE    DS    CL120
         DS    0D
@DATAL   EQU   *-@DATA
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
