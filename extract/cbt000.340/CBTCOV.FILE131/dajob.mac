         TITLE 'MVS TSO "DAJOB" COMMAND TO DISPLAY ACTIVE JOBS'
*---------------------------------------------------------------------*
*
*        TSO "DAJOB" COMMAND TO LIST THE JOBNAMES OF ALL CURRENTLY
*        EXECUTING BATCH JOBS.
*
*        FOUND THIS LITTLE JEWEL AND TIDY'ED THE CODE UP. MUCH THANKS
*        TO HERBERT L. NOVITSKY FOR WRITING THIS. THIS CODE WAS DONE
*        IN 1978 AND STILL RUNS TODAY AS IS (MVS/XA 2.2.0).
*
*        CAPT JIM MARSHALL
*
*        OUTPUT:
*
*                                                S T E P  S T E P
*             JOBNAME  ASID  STEPNAME  PROCSTEP  TCB SEC  SRB SEC
*             -------  ----  --------  --------  -------  -------
*             JOB1       05  STEP001   GO            0.1      0.1
*             JOB9    S  06  STEPA     STEP1       123.5      2.5
*             JOB6       13  PLI       LKED          1.3     10.2
*             JOB4       23  GO        STEP10       12.8      0.5
*
*---------------------------------------------------------------------*
         SPACE
R0       EQU   0                       MVS
R1       EQU   1                       MVS
R2       EQU   2                       ADDR TO CVT
R3       EQU   3                       ADDR TO ASVT
R4       EQU   4                       DSECT ?
R5       EQU   5                       MVS
R6       EQU   6                       ADDR TO BASEA
R7       EQU   7                       ADDR TO CSCB
R8       EQU   8                       ADDR TO ASCB
R9       EQU   9                       WORK
R10      EQU   10                      WORK
R11      EQU   11                      WORK
R12      EQU   12                      BASE REG
R13      EQU   13                      SAVE AREA
R14      EQU   14                      MVS
R15      EQU   15                      MVS
         SPACE
*MODULE ATTRIBUTES: REENTRANT, REUSABLE
         SPACE
DAJOB    CSECT
*---------------------------------------------------------------------*
*        ESTABLISH LINKAGE CONVENTIONS AND SAVEAREA
*---------------------------------------------------------------------*
         PRINT NOGEN
         SAVE  (14,12),,DAJOB_&SYSDATE
         BALR  R12,0                   BASE REGISTER
         LR    R12,R15
         USING DAJOB,R12               ADDRESSABILITY
         LR    R4,R13
         GETMAIN R,LV=AREASIZE         OBTAIN WORK AREA
         LR    R13,R1                  SAVE AREA POINTER
         USING SAVEAREA,R13            ADDRESSABILITY
         ST    R4,4(R13)               STORE SAVEAREA ADDRESS
         SPACE
*---------------------------------------------------------------------*
*        LOCATE NECESSARY CONTROL BLOCKS
*---------------------------------------------------------------------*
         SPACE
         L     R2,CVTPTR               CVT ADDRESS
         USING CVT,R2                  ADDRESSABILITY
         L     R3,CVTASVT              ASVT POINTER
         USING ASVT,R3                 ADDRESSABILITY
         SR    R9,R9                   CLEAR REG 9
         LA    R4,ENDOFLST             START OF ENTRY LIST
         USING ITEM,R4                 ADDRESSABILITY
         LA    10,ASVTENTY             ADDRESS OF FIRST ENTRY
         SPACE
*---------------------------------------------------------------------*
*        ONLY SEARCH FOR BACKGROUND TASKS (CSCB CODE X'02')
*---------------------------------------------------------------------*
         SPACE
         L     R6,CVTMSER              MASTER SCHEDULER DATA AREA
         USING BASE,R6                 ADDRESABILITY
         L     R7,BACHN                CSCB CHAIN POINTER
         USING CSCB,R7                 ADDRESABILITY
CSCBLOOP EQU   *
         CLI   CHTRKID,X'02'           JOB IDENTIFIER
         BNE   NEXTCSCB                NO
         SPACE
*---------------------------------------------------------------------*
*        CREATE A TABLE ENTRY FOR THIS JOBNAME
*---------------------------------------------------------------------*
         SPACE
         MVI   0(R4),X'40'             BLANK
         MVC   1(ENTRYSZ-1,4),0(4)     BLANK FILL ENTRY
         SR    R5,R5                   CLEAR REG 5
         ICM   R5,3,CHASID             ASID
         CVD   R5,TEMP1                CONVERT TO DECIMAL
         MVC   ASIDNO,ED1              EDIT MASK
         ED    ASIDNO,TEMP1+6          EDIT OUTPUT LINE
         MVC   JOBNAME,CHCLS           COPY JOBNAME
         MVC   STEPNAME,CHSTEP         COPY STEPNAME
         MVC   PROCSTEP,CHPROCSN       COPY PROC STEPNAME
         LR    R8,R10                  ASVT BASE ADDRESS
         S     R5,K1                   ASID - 1
         SLL   R5,2                    MULTIPLY ASID BY 4 (OFFSET)
         AR    R8,R5                   ADD TO ASVT TO GET PROPER SLOT
         L     R8,0(R8)                OBTAIN ASCB ADDRESS
         USING ASCB,R8                 ADDRESSABILITY
         SPACE
         LM    R0,R1,ASCBEJST          CURRENT TCB CPU TIME
         BAL   R14,CONVTIME            CONVERT TO DECIMAL
         MVC   TCBTIME,ED4             EDIT MASK
         ED    TCBTIME-1(8),TEMP1+4    EDIT OUTPUT ENTRY
         LM    R0,R1,ASCBSRBT          CURRENT SRB CPU TIME
         BAL   R14,CONVTIME            CONVERT TO DECIMAL
         MVC   SRBTIME,ED4             EDIT MASK
         ED    SRBTIME-1(8),TEMP1+4    EDIT OUTPUT ENTRY
         TM    ASCBRCTF,ASCBOUT        ASCB SWAPPED OUT?
         BNO   INCR                    NO
         MVI   SWAP,C'S'               YES - SHOW "S"
INCR     EQU   *
         LA    R9,1(R9)                INCREMENT USERID COUNTER
         LA    R4,ENTRYSZ(4)           INCREMENT TO NEXT ENTRY
         SPACE
*---------------------------------------------------------------------*
*        LOCATE NEXT CSCB ON CHAIN
*---------------------------------------------------------------------*
         SPACE
NEXTCSCB EQU   *
         L     R7,CHPTR                NEXT CSCB IN CHAIN
         LTR   R7,R7                   DOES IT EXIST?
         BNZ   CSCBLOOP                YES
         SPACE
*---------------------------------------------------------------------*
*        CREATE TITLE LINES
*---------------------------------------------------------------------*
         SPACE
         LA    R4,OUT1                 POINTER TO TITLE LINES
         MVC   OUT1(TITLEN),TITLE1     RELOCATE TITLES TO BUFFER
         SPACE
*---------------------------------------------------------------------*
*        PREPARE FOR TERMINAL OUTPUT
*---------------------------------------------------------------------*
         SPACE
         LA    R5,ENTRYSZ              NO. OF CHARACTERS TO OUTPUT
         LA    R9,NUMTITL(R9)          ADD TITLE LINE COUNT
         SPACE
*---------------------------------------------------------------------*
*        ISSUE AN OUTPUT LINE
*---------------------------------------------------------------------*
         SPACE
PUTIT    EQU   *
         TPUT  (R4),(R5),R             WRITE A LINE
         LA    R4,ENTRYSZ(R4)          INCREMENT OUTPUT BUFFER POINTER
         BCT   R9,PUTIT                LOOP
         SPACE
*---------------------------------------------------------------------*
*        TERMINATE
*---------------------------------------------------------------------*
         SPACE
         LA    R0,AREASIZE             NUMBER OF BYTES TO FREEMAIN
         LR    R1,R13                  ADDRESS OF FREEMAIN AREA
         L     R4,4(R13)
         FREEMAIN R,LV=(0),A=(1)       FREE ACQUIRED MEMORY
         LR    R13,R4                  RESTORE REG 13
         RETURN (14,12),RC=0
         SPACE
         PRINT GEN
         TITLE 'TIME CONVERSION ROUTINE (CONVTIME)'
*---------------------------------------------------------------------*
*                      TIME CONVERSION ROUTINE                        *
*                                                                     *
* R0/R1 CONTAINS THE TIME DOUBLEWORD TO CONVERT.                      *
*                                                                     *
* 8 CHARACTERS ARE CONVERTED INTO LOCATION "TEMP1" (DECIMAL).         *
*                                                                     *
* CALLER'S REGISTERS ARE UNCHANGED UPON RETURN.                       *
*                                                                     *
* ROUTINES CALLED: NONE                                               *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
CONVTIME STM   R0,R1,CONVSAVE          SAVE CALLER'S REGS
         SRDL  R0,12                   CONVERT TO MICROSECONDS
         D     R0,K10000               DIVIDE TO GET SECONDS
         CVD   R1,TEMP1                CONVERT TO DECIMAL
         LM    R0,R1,CONVSAVE          RESTORE CALLER'S REGS
         BR    R14                     RETURN TO CALLER
         SPACE
         TITLE 'DATA STORAGE AND CONSTANTS'
*---------------------------------------------------------------------*
*        CONSTANTS
*---------------------------------------------------------------------*
         SPACE
         LTORG
         SPACE
ED1      DC    X'40202020'             EDIT MASK
ED4      DC    XL7'20202021204B20'     EDIT MASK
K1       DC    F'1'                    CONSTANT
K10000   DC    F'10000'                CONSTANT
         SPACE
*---------------------------------------------------------------------*
*        * DEFINE LENGTH OF A SAVE AREA ENTRY *
*---------------------------------------------------------------------*
ENTRYSZ  EQU   52                      SAVEAREA ENTRY SIZE
         SPACE
*---------------------------------------------------------------------*
*        * TITLE LINE SIZE IS IDENTICAL TO ENTRY SIZE *
*---------------------------------------------------------------------*
TITLE1   DC    C'                                    S T E P  S T E P'
         DC    C'JOB NAME  ASID  STEPNAME  PROCSTEP  TCB SEC  SRB SEC'
         DC    C'--------  ----  --------  --------  -------  -------'
TITLEN   EQU   *-TITLE1                LENGTH OF TITLE LINES
NUMTITL  EQU   TITLEN/ENTRYSZ          NUMBER OF TITLE LINES
         SPACE
*---------------------------------------------------------------------*
*        * COMPUTE SPACE FOR MAXIMUM OF 64 ASCB'S *
*---------------------------------------------------------------------*
         SPACE
AREASIZE EQU   (ENTRYSZ*64)+88+(NUMTITL*ENTRYSZ) GETMAIN SIZE
         SPACE
         TITLE 'DYNAMIC SAVE AREA'
SAVEAREA DSECT
REGS     DS    18F                     REGISTERS
CONVSAVE DS    D                       TIME CONVERSION REGS
TEMP1    DS    D                       CVD AREA
OUT1     DS    CL52                    TITLE LINE 1
         DS    CL52                    TITLE LINE 2
         DS    CL52                    TITLE LINE 3
ENDOFLST EQU   *
         SPACE
*---------------------------------------------------------------------*
*        * ENTRIES FOR EACH ACTIVE ADDRESS SPACE *
*---------------------------------------------------------------------*
         SPACE
ITEM     DSECT
JOBNAME  DS    CL8                     JOBNAME
         DS    CL1                     BLANK
SWAP     DS    CL1                     SWAP INDICATOR
ASIDNO   DS    CL4                     ASID (EBCDIC)
         DS    CL2                     BLANK
STEPNAME DS    CL8                     STEPNAME
         DS    CL2                     BLANK
PROCSTEP DS    CL8                     PROC STEP NAME
         DS    CL2                     BLANK
TCBTIME  DS    CL7                     TCB TIME
         DS    CL2                     BLANK
SRBTIME  DS    CL7                     SRB TIME
         SPACE
         TITLE 'ADDRESS SPACE CONTROL BLOCK (ASCB)'
         IHAASCB
         SPACE
         TITLE 'ADDRESS SPACE VECTOR TABLE (ASVT)'
         IHAASVT
         SPACE
         TITLE 'COMMAND SCHEDULING CONTROL BLOCK (CSCB)'
CSCB     DSECT
         IEECHAIN
         SPACE
         TITLE 'COMMUNICATIONS VECTOR TABLE (CVT)'
         CVT   DSECT=YES
         SPACE
         TITLE 'MASTER SCHEDULER RESIDENT DATA AREA (BASEA)'
         IEEBASEA
         END
