C
C     ===========================================================
C     *                                                         *
C     *                * * *   T I D Y   * * *                  *
C     *                                                         *
C     *  A FORTRAN PROGRAM TO RENUMBER AND OTHERWISE CLEAN UP   *
C     *         OLD AND TIRED FORTRAN SOURCE PROGRAMS.          *
C     *                                                         *
C     *   TIDY ACCEPTS ASA FORTRAN WITH 19 CONTINUATION CARDS   *
C     * AS WELL AS SOME IBM AND CDC DIALECT FORTRAN STATEMENTS  *
C     *                                                         *
C     *               IN ADDITION TO RENUMBERING,               *
C     *         TIDY PROVIDES A LIMITED SET OF FORTRAN          *
C     *                      DIAGNOSTICS.                       *
C     *                                                         *
C     *    A S A   F O R T R A N   (COMM. ACM OCTOBER 1964.)    *
C     *                                                         *
C     ===========================================================
C
C
C                     **************************
C                    *         PROGRAM          *
C                   *     AND SUBROUTINES BY     *
C                  *        HARRY M MURPHY        *
C                 *  AIR FORCE WEAPONS LABORATORY  *
C                  *   KIRTLAND AIR FORCE BASE    *
C                   *         NEW MEXICO         *
C                    *         1 9 6 6          *
C                     **************************
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
C              ========================================
C             *   T I D Y   M A I N   P R O G R A M    *
C              ========================================
C
C
1     KD15=1
      KD79=1
      MCOL=-1
      MCOM=-1
      MEX=0
      MLBL=0
      MLIST=-1
      MPUN=-1
      MREF=0
      NPUN=0
      NROUT=0
2     CALL PASS1
      IF (MSTOP) 7,3,7
3     CALL EDIT
      IF (MREF*MP2) 4,5,4
4     CALL RDIR
5     IF (MP2) 6,2,6
6     CALL PASS2
      GO TO 2
7     CALL IOSYS1 (0,0,0)
      CALL IOSYS2 (0,0,0)
      IF (NMSG) 9,9,8
8     PRINT 11, NMSG
      GO TO 10
9     PRINT 12
10    PRINT 13, NPUN
      STOP
C
11    FORMAT (22H0      W A R N I N G .,I5,58H DIAGNOSTIC MESSAGES HAVE
     1BEEN GENERATED IN THIS TIDY RUN.)
12    FORMAT (66H0      NO DIAGNOSTIC MESSAGES WERE GENERATED DURING THI
     1S TIDY RUN.)
13    FORMAT(1H0,6X,46HTHE NUMBER OF CARDS PUNCHED BY THIS TIDY RUN =,I5
     1/1H0,6X,36H1 APRIL 1971 VERSION OF TIDY.  (HMM)/1H1)
      END
      SUBROUTINE PASS1
C
C     THIS ROUTINE COLLECTS STATEMENT NUMBERS, MAKES DIAGNOSTIC COMMENTS
C     AND SETS UP THE FORTRAN STATEMENTS IN A FORM SUITABLE FOR PASS2.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
      DIMENSION KILI(4), KIM(80,20)
      EQUIVALENCE (KLASS,KILI), (JINT,KIM)
C
C
C     A    B    C    D    E    F    G    H    I    J    K    L    M
C     1    2    3    4    5    6    7    8    9    10   11   12   13
C
C     N    O    P    Q    R    S    T    U    V    W    X    Y    Z
C     14   15   16   17   18   19   20   21   22   23   24   25   26
C
C     =    ,    (    /    )    +    -    *    .    $    -    NONE
C     1    2    3    4    5    6    7    8    9    10   11   12
C
C
C     SET UP INITIAL CONDITIONS.
C     REWIND TAPE FILES 1 AND 2.
C
1     CALL IOSYS1 (0,0,0)
      NRT1=0
      CALL IOSYS2 (0,0,0)
      NRT2=0
      DO 2 I=1,10
2     LDOS(I)=0
      KB15=0
      MILDO=0
      MLGC=0
      MSKP=0
      MP2=1
      MSTOP=0
      MTRAN=0
      NBLC=2
      NDEF=0
      NDOS=0
      NREC=0
      NREF=0
      NROUT=NROUT+1
      NXEQ=0
C
C     READ FIRST CARD
C
      CALL SKARD
      DO 3 I=1,72
3     JOB(I)=KIM(I,1)
      KOL73(1)=KIM(73,1)
      KOL73(2)=KIM(74,1)
      KOL73(3)=KIM(75,1)
      DO 4 I=73,80
4     JOB(I)=KBL
      IF (JOB(1)-KABC(3)) 6,5,6
5     JOB(1)=KBL
6     CALL CENTER
      CALL PAGE (0)
      GO TO 8
C
C     READ SECOND AND SUBSEQUENT CARDS.
C
7     CALL SKARD
8     NREC=NREC+1
      IF (MLIST) 9,12,9
9     PRINT 307, NREC,(KIM(I,1),I=1,80)
      CALL PAGE (1)
      IF (1-NCD) 10,12,12
10    DO 11 J=2,NCD
      PRINT 308, (KIM(I,J),I=1,80)
11    CALL PAGE (1)
C
C     CLEAR MLGC AND MTRAN IF MLGC (LOGICAL FLAG) IS SET.
C
12    IF (MLGC) 13,14,13
13    MLGC=0
      MTRAN=0
C
C     TRANSFER IOUT TO JINT
C
14    DO 15 I=1,IMAX
      JINT(I)=IOUT(I)
15    IOUT(I)=KBL
      JMAX=IMAX
      JINT(JMAX+1)=KERM
C
C     LOOK FOR * IN COLUMN 1
C
      IF (JINT(1)-KSPK(8)) 20,16,20
C
C     * IN COLUMN 1.  GO TO CONTROL SUBROUTINE.
C
16    CALL CONTRL
      IF (MSTOP) 19,17,19
17    IF (MSKP) 18,7,18
18    MP2=0
      CALL NOPRO
      GO TO 1
C
C     *STOP COMMAND EXIT.
C
19    RETURN
C
C     NO * IN COLUMN 1, LOOK FOR C,D,I,F, OR $.
C
20    IF (JINT(1)-KBL) 21,43,21
21    IF (JINT(1)-KABC(3)) 22,27,22
22    IF (JINT(1)-KABC(4)) 23,26,23
23    IF (JINT(1)-KABC(9)) 24,26,24
24    IF (JINT(1)-KABC(6)) 25,26,25
25    IF (JINT(1)-KSPK(10)) 43,7,43
26    CALL DIAGNO (8)
      GO TO 7
C
C     COMMENT.  LOOK FOR NON-BLANK OR * IN COLUMNS 2 THROUGH 5.
C
27    DO 30 JCOL=2,6
      IF (JINT(JCOL)-KBL) 28,30,28
28    IF (JINT(JCOL)-KSPK(8)) 39,29,39
29    JINT(JCOL)=KBL
30    CONTINUE
C
C     BLANK(NOW) IN COLUMNS 2 THROUGH 6, LOOK FOR BLANK COMMENT.
C
      DO 31 JCOL=7,JMAX
      IF (JINT(JCOL)-KBL) 35,31,35
31    CONTINUE
C
C     BLANK COMMENT. TEST IF TWO PREVIOUS CARDS WERE BLANK
C
      NBLC=NBLC+1
      IF (NBLC-3) 32,7,7
32    IOUT(1)=KABC(3)
      IMAX=7
33    KLASS=0
      ITYPE=0
      L15=0
C
C     WRITE STATEMENT IMAGE ON TAPE 1 FOR PASS 2.
C
34    CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,IOUT,IMAX)
      NRT1=NRT1+1
      GO TO 7
C
C     NON-BLANK COMMENT.
C
35    NBLC=0
      IF (JMAX-73) 37,36,36
36    JMAX=72
37    IMAX=JMAX
      DO 38 I=1,JMAX
38    IOUT(I)=JINT(I)
      GO TO 33
C
C     NON-BLANK IN STATEMENT FIELD.
C
39    ICOL=6
      DO 40 I=JCOL,JMAX
      ICOL=ICOL+1
40    IOUT(ICOL)=JINT(I)
      IOUT(1)=KABC(3)
      IF (ICOL-73) 42,41,41
41    ICOL=72
42    IMAX=ICOL
      GO TO 33
C
C     APPARENTLY FORTRAN.  CHECK FOR BLANK STATEMENT.
C
43    JCOL=7
      ICOL=6
      IF (8-JMAX) 45,44,44
44    CALL DIAGNO (1)
      GO TO 7
C
C     CLEAR BLANK COMMENT COUNTER.  LOOK FOR FIRST SPECIAL CHARACTER.
C
45    NBLC=0
      DO 46 LFIR=JCOL,JMAX
      DO 46 IFIR=1,11
      IF (JINT(LFIR)-KSPK(IFIR)) 46,47,46
46    CONTINUE
      LFIR=6
      IFIR=12
      GO TO 49
C
C     HAVE FIRST SPECIAL CHARACTER. REJECT IF ) + - * . $ OR -.
C
47    IF (IFIR-5) 49,48,48
48    CALL DIAGNO (9)
      GO TO 7
C
C     SCAN STATEMENT LIST FOR TYPE.
C
49    DO 54 ITYPE=1,60
      NINS=KSTIJ(11,ITYPE)
      LAST=JCOL-1
C
      DO 53 I=1,NINS
50    LAST=LAST+1
      IF (LAST-JMAX) 51,51,54
51    IF (JINT(LAST)-KBL) 52,50,52
52    IF (JINT(LAST)-KSTIJ(I,ITYPE)) 54,53,54
53    CONTINUE
C
      KLASS=KSTIJ(12,ITYPE)
      IF (MLGC) 78,74,78
54    CONTINUE
C
C     NOT IN TABLE.  ASSUME ARITHMETIC AND LOOK FOR =.
C
      IF (IFIR-1) 56,55,56
55    LQUAL=LFIR
      GO TO 63
56    IF (IFIR-3) 62,57,62
57    LQUAL=LFIR+1
      DO 58 LQUAL=LQUAL,JMAX
      IF (JINT(LQUAL)-KSPK(1)) 58,59,58
58    CONTINUE
      GO TO 62
59    I=LQUAL-1
60    IF (JINT(I)-KSPK(5)) 61,63,61
61    I=I-1
      IF (LFIR-I) 60,62,62
C
C     NO =.  THEREFORE NOT ARITHMETIC.  REJECT STATEMENT.
C
62    CALL DIAGNO (1)
      GO TO 7
C
C     = FOUND AT COLUMN LQUAL.  PROCESS AS ARITHMETIC.
C
63    KLASS=3
      ITYPE=0
      CALL HOLCK
64    CALL COPY (-1)
      IF (MEOF) 64,67,65
65    IF (LCPY-KERM) 66,67,66
66    ICOL=ICOL+1
      MEOF=-1
      GO TO 64
67    IMAX=ICOL
      IF (MLGC) 73,68,73
C
C     GET STATEMENT NUMBER.
C
68    CALL STATNO
73    CALL DLIST (MERR)
      IF (MERR) 7,34,7
C
C              ========================================
C              *                                      *
C              *     END OF ARITHMETIC PROCESSING     *
C              *  START FORTRAN STATEMENT PROCESSING  *
C              *                                      *
C              ========================================
C
C     CLEAR L15 AND TEST EXEMPT FLAG, MEX, FOR NON-ZERO.
C
74    L15=0
      IF (MEX) 75,79,75
75    IF (KLASS-1) 79,76,79
C
C     MEX IS NON-ZERO, STATEMENT IS KLASS 1, AND HENCE IS EXEMPT.
C
76    L15=0
      DO 77 J=1,6
77    JINT(J)=KBL
      CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,JINT,JMAX)
      NRT1=NRT1+1
      GO TO 7
C
C     THIS IS LOGICAL IF STATEMENT.  ACCEPT OR REJECT ON ITYPE.
C
78    GO TO (79,85,79,79,85,79,79,79,85,79,79,85,79,85,85,85,85,79,79,79
     1,85,85,85,85,85,85,85,85,79,79,79,79,79,79,79,79,79,85,85,85,85,79
     2,79,85,79,79,79,79,79,79,79,79,85,79,79,85,85,79,79,79), ITYPE
C
C     ACCEPT OR REJECT STATEMENTS ON BASIS OF FIRST SPECIAL CHARACTER.
C
C            =  ,  (  /  )  +  -  *  .  $  -  NONE
79    GO TO (80,81,82,83,85,85,85,85,85,85,85,84), IFIR
C
C     =    =    =    =    =    =    =    =    =    =    =    =    =    =
80    GO TO (85,85,85,85,85,85,85,55,85,85,85,55,85,85,85,85,86,85,85,55
     1,55,85,85,55,85,85,85,85,85,55,85,85,85,85,85,85,85,85,85,85,85,55
     2,55,85,55,85,85,85,55,55,85,85,85,85,55,85,55,85,85,85), ITYPE
C
C     ,    ,    ,    ,    ,    ,    ,    ,    ,    ,    ,    ,    ,    ,
81    GO TO (86,85,85,85,85,85,85,85,92,92,85,92,85,85,92,92,86,85,85,86
     1,92,85,92,92,85,85,92,85,85,86,86,86,85,85,85,85,85,92,92,85,85,86
     2,86,85,86,86,86,85,86,92,85,85,85,85,86,85,92,86,86,85), ITYPE
C
C     (    (    (    (    (    (    (    (    (    (    (    (    (    (
82    GO TO (85,92,85,85,85,86,86,86,92,92,85,92,86,92,92,92,57,86,85,86
     1,92,92,85,57,86,92,92,92,86,86,85,85,86,86,86,86,86,92,92,92,85,57
     2,57,92,57,85,85,86,57,92,85,85,92,85,57,92,57,85,85,86), ITYPE
C
C     /    /    /    /    /    /    /    /    /    /    /    /    /    /
83    GO TO (85,85,85,85,85,85,85,85,92,85,85,92,85,85,85,85,85,85,85,85
     1,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,92,86
     2,85,85,85,85,85,85,85,85,85,85,85,85,86,85,85,85,85,85), ITYPE
C
C     NONE      NONE      NONE      NONE      NONE      NONE      NONE
84    GO TO (85,92,86,86,92,85,85,86,92,92,86,85,85,85,92,92,85,85,86,86
     1,92,85,92,92,85,85,85,92,85,86,85,85,85,85,85,85,85,92,92,92,85,86
     2,86,92,86,85,85,85,86,92,86,86,92,86,86,92,92,85,85,85), ITYPE
C
C     ILLEGAL STATEMENT.
C
85    CALL DIAGNO (1)
      GO TO 7
C
C     GET STATEMENT NUMBER.
C
86    IF (MLGC) 92,87,92
87    CALL STATNO
C
C     GO TO INDIVIDUAL STATEMENT PROCESSING BY ITYPE.
C
92    GO TO (258,93,94,102,104,105,105,109,116,102,124,129,133,139,148,1
     149,150,133,174,175,102,192,102,195,196,202,204,205,206,215,230,236
     2,237,238,241,242,243,102,102,93,256,102,258,102,258,272,284,287,25
     38,102,297,102,269,298,299,302,303,305,306,287), ITYPE
C
C     ==================================================================
C     *                                                                *
C     *  AT THIS POINT, COMMENTS AND ARITHMETIC STATEMENTS HAVE BEEN   *
C     *  PROCESSED.  THE STATEMENTS HAVE BEEN CLASSIFIED AS ITYPE AND  *
C     *  KLASS.  THE LAST SYMBOL USED IN SCANNING THE FORTRAN STATE-   *
C     *  MENT IS KSTIJ(NINS,ITYPE), AND WAS FOUND AT JINT(LAST).  THE  *
C     *  FIRST SPECIAL CHARACTER, IF ANY, IS KSPK(IFIR), LOCATED AT    *
C     *  JINT(LFIR).  INVALID COMBINATIONS OF STATEMENTS AND FIRST     *
C     *  SPECIAL CHARACTER HAVE BEEN ELIMINATED.  IF A STATEMENT       *
C     *  NUMBER IS PERMITTED, IT IS IN L15.  IF NOT, L15=0.            *
C     *  UNLESS MLGC, THE LOGICAL FLAG, IS ON ICOL = 6, AND JCOL = 7.  *
C     *                                                                *
C     ==================================================================
C
C     ASCENT, MACHINE.
C
93    CALL DIAGNO (26)
      CALL NOPRO
      RETURN
C
C     ASSIGN
C
94    CALL COPY (6)
      CALL RSTAT
      IF (L772) 95,96,95
95    IOUT(ICOL+2)=KLR2
      IOUT(ICOL+3)=L772
      ICOL=ICOL+4
      CALL COPY (2)
      ICOL=ICOL+1
      IF (MEOF) 97,96,96
96    CALL DIAGNO (1)
      GO TO 7
C
97    CALL COPY (0)
      IMAX=ICOL
98    CALL DLIST (MERR)
      IF (MERR) 7,99,7
99    IF (L772) 100,101,100
100   CALL RLIST
C
C     WRITE STATEMENT IMAGE ON TAPE 1 FOR PASS 2.
C
101   CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,IOUT,IMAX)
      NRT1=NRT1+1
      GO TO 7
C
C     BACKSPACE, COMPLEX, EXTERNAL, INTEGER, LOGICAL, PAUSE.
C
102   CALL COPY (NINS)
      ICOL=ICOL+1
      CALL COPY (0)
      IMAX=ICOL
      IF (ITYPE.EQ.21) MTRAN=0
103   CALL DLIST (MERR)
      IF (MERR) 7,101,7
C
C     BLOCK DATA
C
104   CALL COPY (5)
      ICOL=12
      CALL COPY (4)
      IMAX=ICOL
      GO TO 101
C
C     BUFFER IN (I,P) (A,B) /// BUFFER OUT (I,P) (A,B)
C
105   CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (2)
      IF (ITYPE-7) 107,106,106
106   CALL COPY (1)
107   ICOL=ICOL+1
      CALL COPY (-1)
      IF (MEOF) 108,7,7
108   ICOL=ICOL+1
      CALL DLIST (MERR)
      GO TO 114
C
C     CALL   (FUNCTION,SUBROUTINE)
C
109   CALL COPY (4)
      ICOL=ICOL+1
      CALL DLIST (MERR)
      IF (MERR) 7,110,7
110   IF (IFIR-3) 123,111,123
111   CALL COPY (1)
      IF (LCPY-KSPK(3)) 112,113,112
112   IF (MEOF) 111,115,115
113   IOUT(ICOL)=KBL2
      JCOL=JCOL-1
      CALL HOLCK
      CALL COPY (-1)
      IMAX=ICOL
      IF (NPAR) 115,101,115
114   CALL COPY (0)
      IMAX=ICOL
      GO TO 101
115   CALL DIAGNO (10)
      GO TO 7
C
C     COMMON
C
116   CALL COPY (6)
      ICOL=ICOL+1
      J=-1
      IF (IFIR-4) 123,118,123
117   IF (J) 118,118,122
118   J=J+1
119   CALL COPY (1)
      IF (LCPY-KSPK(4)) 120,117,120
120   IF (MEOF) 119,121,121
121   CALL DIAGNO (11)
      GO TO 101
C
C     FINISH UP COPY.
C
122   ICOL=ICOL+1
123   CALL COPY (0)
      IMAX=ICOL
      GO TO 101
C
C     CONTINUE
C
124   IF (MLGC) 125,127,125
125   DO 126 I=7,ICOL
126   IOUT(I)=KBL
      ICOL=6
127   CALL COPY (8)
      IMAX=ICOL
      L772=0
      IF (L15) 98,128,98
128   CALL DIAGNO (12)
      GO TO 7
C
C     DATA
C
129   CALL HOLCK
      CALL COPY (4)
      ICOL=ICOL+1
      IF (IFIR-4) 123,130,123
130   IF (JINT(JMAX)-KSPK(4)) 132,131,132
131   IF (LFIR-JMAX) 123,132,132
132   CALL DIAGNO (11)
      GO TO 123
C
C     DECODE (C,N,V) LIST  ///  ENCODE (C,N,V) LIST
C
133   CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (1)
      CALL HOLCK
      CALL DLIST (MERR)
      IF (MERR) 7,134,7
134   CALL COPY (1)
      IF (LCPY-KSPK(2)) 135,137,135
135   IF (MEOF) 134,291,291
137   CALL RSTAT
      IF (L772) 138,293,138
138   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      GO TO 294
C
C     DIMENSION
C
139   CALL COPY (9)
      ICOL=ICOL+1
      NPAR=-1
      DO 145 I=JCOL,JMAX
      CALL COPY (1)
      IF (NPAR) 140,141,142
140   IF (LCPY-KSPK(3)) 145,144,145
141   IF (LCPY-KSPK(5)) 145,144,145
142   IF (LCPY-KSPK(2)) 145,143,145
143   ICOL=ICOL+1
      NPAR=-1
      GO TO 145
144   NPAR=NPAR+1
145   CONTINUE
      IMAX=ICOL
      IF (NPAR) 147,146,101
146   CALL DIAGNO (2)
      GO TO 7
147   CALL DIAGNO (13)
      GO TO 7
C
C     DOUBLE PRECISION
C
148   CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (9)
      GO TO 122
C
C     DOUBLE, (CONVERT TO DOUBLE PRECISION).
C
149   CALL COPY (6)
      IOUT(14)=KABC(16)
      IOUT(15)=KABC(18)
      IOUT(16)=KABC(5)
      IOUT(17)=KABC(3)
      IOUT(18)=KABC(9)
      IOUT(19)=KABC(19)
      IOUT(20)=KABC(9)
      IOUT(21)=KABC(15)
      IOUT(22)=KABC(14)
      ICOL=23
      GO TO 123
C
C     DO STATEMENT
C
150   IF (IFIR-1) 152,151,152
151   I=LFIR
      GO TO 154
152   JINT(LFIR)=KBL
      CALL DIAGNO (18)
      DO 153 I=LFIR,JMAX
      IF (JINT(I)-KSPK(1)) 153,154,153
153   CONTINUE
      CALL DIAGNO (14)
      GO TO 7
C
C     HAVE =.  LOOK FOR COMMA, CHECK STATEMENT AND TERMINAL NUMBER.
C
154   LQUAL=I
      CALL HOLCK
      DO 155 I=LQUAL,JMAX
      IF (JINT(I).EQ.KSPK(3)) GO TO 63
      IF (JINT(I)-KSPK(2)) 155,156,155
155   CONTINUE
      GO TO 63
156   MILDO=-1
      CALL COPY (2)
      IOUT(9)=KBL2
      IOUT(10)=KLR2
      CALL DLIST (MERR)
      IF (MERR) 7,157,7
157   CALL RSTAT
      IF (L772) 158,63,158
158   IF (NDEF) 161,161,159
159   DO 160 I=1,NDEF
      IF (LDEF(I)-L772) 160,173,160
160   CONTINUE
C
C     ADD STATEMENT NUMBER TO DO-LIST.
C
161   IF (NDOS) 166,169,162
162   IF (LDOS(NDOS)-L772) 163,172,163
163   IF (NDOS-1) 161,169,164
164   DO 165 I=2,NDOS
      IF (LDOS(I-1)-L772) 165,173,165
165   CONTINUE
166   IF (NDOS-10) 169,167,167
167   CALL DIAGNO (24)
      MPUN=0
      MP2=0
      GO TO 101
168   CALL DIAGNO (27)
      GO TO 172
169   NDOS=NDOS+1
      LDOS(NDOS)=L772
      IF (NREF) 172,172,170
170   DO 171 I=1,NREF
      IF (LREF(I)-L772) 171,168,171
171   CONTINUE
172   CALL RLIST
      IOUT(11)=L772
      ICOL=12
      GO TO 123
C
173   CALL DIAGNO (15)
      GO TO 7
C
C     END DO-LOOP STATEMENT PROCESSING.
C
C
C     END FILE
C
174   CALL COPY (3)
      ICOL=ICOL+1
      CALL COPY (4)
      ICOL=ICOL+1
      CALL COPY (0)
      IMAX=ICOL
      GO TO 103
C
C     END STATEMENT.
C
175   IF (NDOS) 176,177,176
176   CALL DIAGNO (16)
      PRINT 309, (LDOS(I),I=1,NDOS)
      CALL PAGE (1)
177   IF (L15) 178,183,178
178   IF (NREF) 183,183,179
179   DO 180 I=1,NREF
      IF (LREF(I)-L15) 180,181,180
180   CONTINUE
      GO TO 183
181   CALL DIAGNO (18)
C
C     GENERATE NEW STOP COMMAND.
C
      IOUT(7)=KABC(19)
      IOUT(8)=KABC(20)
      IOUT(9)=KABC(15)
      IOUT(10)=KABC(16)
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 183,182,183
182   JINT(1)=3
      JINT(2)=55
      JINT(3)=L15
      JINT(4)=10
      CALL IOSYS1 (2,JINT,4)
      CALL IOSYS1 (2,IOUT,10)
      NRT1=NRT1+1
C
C     LOOK FOR FORMATS ON TAPE 2
C
183   IF (NRT2) 190,190,184
184   CALL IOSYS2 (1,0,0)
C
C     INSERT BLANK COMMENT CARD.
C
      IOUT(1)=KABC(3)
      DO 185 I=2,7
185   IOUT(I)=KBL
      KLASS=0
      ITYPE=0
      L15=0
      IMAX=7
      CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,IOUT,7)
      NRT1=NRT1+1
C
C     TRANSFER FORMATS
C
186   CALL IOSYS2 (3,KILI,4)
      CALL IOSYS2 (3,IOUT,IMAX)
      NRT2=NRT2-1
      NREC=ITYPE
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 188,187,188
187   CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,IOUT,IMAX)
      NRT1=NRT1+1
188   IF (NRT2) 189,189,186
189   CALL IOSYS2 (0,0,0)
C
C     WRITE END STATEMENT
C
190   DO 191 I=1,6
191   IOUT(I)=KBL
      IOUT(7)=KABC(5)
      IOUT(8)=KABC(14)
      IOUT(9)=KABC(4)
      KLASS=5
      ITYPE=20
      L15=0
      IMAX=9
      CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,IOUT,9)
      NRT1=NRT1+1
      CALL IOSYS1 (1,0,0)
      RETURN
C
C                 ==================================
C                 *   PASS1 NORMALLY EXITS HERE.   *
C                 ==================================
C
C
C     EQUIVALENCE
C
192   CALL COPY (10)
193   CALL COPY (1)
      IF (MEOF.GE.0) GO TO 194
      ICOL=ICOL+1
      IOUT(ICOL)=KBL
      CALL COPY (-1)
      IF (MEOF) 193,194,194
194   IMAX=ICOL
      GO TO 101
C
C     FINIS.
C
195   MSTOP=-1
      RETURN
C
C     FORMAT (
C
196   IF (L15) 197,198,197
197   CALL HOLCK
      IF (JINT(JMAX)-KSPK(5)) 198,199,198
198   CALL DIAGNO (17)
      GO TO 7
199   CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (0)
      IF (MEOF) 200,200,7
200   IMAX=ICOL
      IF (MCOL) 201,103,201
201   ITYPE=NREC
      CALL IOSYS2 (2,KILI,4)
      CALL IOSYS2 (2,IOUT,IMAX)
      NRT2=NRT2+1
      GO TO 7
C
C     FORTRAN,ETC
C
202   DO 203 I=7,JMAX
203   IOUT(I)=JINT(I)
      IMAX=JMAX
      GO TO 101
C
C     FREQUENCY
C
204   CALL DIAGNO (8)
      GO TO 7
C
C     FUNCTION
C
205   CALL COPY (8)
      ICOL=15
      IF (IFIR-3) 114,111,114
C
C     GO TO (***,***),N
C
206   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (1)
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 7,207,7
C
C     PROCESS --GO TO LIST--.
C
207   ICOL=ICOL+1
      IOUT(ICOL)=KLR2
      CALL RSTAT
      IF (L772) 209,208,209
208   CALL DIAGNO (19)
      GO TO 7
209   ICOL=ICOL+1
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(2)) 210,207,210
210   IF (LCPY-KSPK(5)) 208,211,208
211   CALL COPY (1)
      IF (LCPY-KSPK(2)) 212,213,212
212   IOUT(ICOL+2)=LCPY
      IOUT(ICOL+1)=KBL
      IOUT(ICOL)=KSPK(2)
      ICOL=ICOL+2
      GO TO 214
213   ICOL=ICOL+1
      IOUT(ICOL)=KBL
214   CALL COPY (0)
      IMAX=ICOL
      MTRAN=-1
      GO TO 101
C
C     GO TO ****
C
215   MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 7,216,7
216   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (2)
      ICOL=ICOL+1
      CALL RSTAT
C
C     TEST REF STATEMENT FOR GO TO N OR GO TO N, (LIST)
C
      IF (L772) 217,222,217
C
C     STATEMENT IS --GO TO 12345--.
C
217   IF (L15) 218,220,218
218   IF (MLGC) 220,219,220
219   CALL DIAGNO (18)
220   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
221   IMAX=ICOL
      MTRAN=-1
      GO TO 101
C
C     GO TO N OR GO TO N,LIST
C
222   IF (IFIR-2) 223,224,223
C
C     STATEMENT IS --GO TO N--.
C
223   CALL COPY (0)
      GO TO 221
C
C     GO TO N,(LIST)
C
224   CALL COPY (1)
      IF (LCPY-KSPK(2)) 224,225,224
225   ICOL=ICOL+1
      CALL COPY (1)
      IF (LCPY-KSPK(3)) 226,227,226
226   CALL DIAGNO (19)
      GO TO 7
227   CALL RSTAT
      IF (L772) 228,226,228
228   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(2)) 229,227,229
229   IF (LCPY-KSPK(5)) 226,221,226
C
C     IF ACCUMULATOR OVERFLOW (QUOTIENT, DIVIDE CHECK, END FILE, SENSE)
C
230   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (11)
      ICOL=ICOL+1
      CALL COPY (8)
C
C     PROCESS TWO-WAY TRANSFER.
C
231   ICOL=ICOL+2
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 7,232,7
232   IOUT(ICOL)=KLR2
      CALL RSTAT
      IF (L772) 234,233,234
233   CALL DIAGNO (20)
      GO TO 7
234   ICOL=ICOL+1
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(2)) 233,235,233
235   CALL RSTAT
      IF (L772) 220,233,220
C
C     IF QUOTIENT OVERFLOW
C
236   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (8)
      ICOL=ICOL+1
      CALL COPY (8)
      GO TO 231
C
C     IF(DIVIDE CHECK)
C
237   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (7)
      ICOL=ICOL+1
      CALL COPY (6)
      GO TO 231
C
C     IF(END FILE  I)
C
238   CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (8)
      ICOL=ICOL+1
      DO 239 I=JCOL,JMAX
      IF (JINT(I)-KSPK(5)) 239,240,239
239   CONTINUE
      GO TO 233
240   CALL COPY (1)
      IF (LCPY-KSPK(5)) 240,231,240
C
C     IF(SENSE LIGHT 5) 1,2
C
241   CALL COPY (2)
      ICOL=9
      CALL COPY (6)
      ICOL=16
      CALL COPY (5)
      ICOL=22
      CALL COPY (2)
      IF (LCPY-KSPK(5)) 233,231,233
C
C     IF(SENSE SWITCH 5) 1,2
C
242   CALL COPY (2)
      ICOL=9
      CALL COPY (6)
      ICOL=16
      CALL COPY (6)
      ICOL=23
      CALL COPY (2)
      IF (LCPY-KSPK(5)) 233,231,233
C
C     IF (ARITHMETIC) 1,2,3   OR   IF (LOGICAL) STATEMENT.
C
243   CALL COPY (2)
      ICOL=ICOL+1
      CALL HOLCK
      CALL COPY (-1)
      IF (MEOF) 245,244,244
244   CALL DIAGNO (20)
      GO TO 7
245   ICOL=ICOL+1
      CALL RSTAT
      IF (L772) 246,255,246
C
C     STATEMENT IS    IF (ARITHMETIC) 1,2,3
C
246   NCOM=0
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 85,247,85
247   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(2)) 248,252,248
248   IF (LCPY-KERM) 244,249,244
249   IF (NCOM-1) 244,250,251
250   CALL DIAGNO (18)
251   IMAX=ICOL
      MTRAN=-1
      GO TO 101
252   NCOM=NCOM+1
      IF (NCOM-3) 254,253,244
253   CALL DIAGNO (18)
254   CALL RSTAT
      IF (L772) 247,244,247
C
C     STATEMENT IS   IF (LOGICAL) STATEMENT
C
255   MLGC=-1
      GO TO 45
C
C     NAMELIST
C
256   CALL COPY (8)
      ICOL=ICOL+1
      J=-1
      IF (IFIR-4) 257,118,257
257   CALL DIAGNO (21)
      GO TO 7
C
C     PRINT, PUNCH, READ, ACCEPT.
C
258   CALL COPY (NINS)
      ICOL=ICOL+1
      CALL DLIST (MERR)
      IF (MERR) 7,259,7
259   CALL RSTAT
      IF (L772) 266,260,266
C
C     HAVE PRINT FMT,LIST
C
260   IF (IFIR-2) 261,263,261
261   CALL COPY (0)
      IMAX=ICOL
      IF (13-IMAX) 101,101,262
262   CALL DIAGNO (22)
      GO TO 7
263   CALL COPY (1)
      IF (LCPY-KSPK(2)) 264,265,264
264   IF (MEOF) 263,262,262
265   CALL HOLCK
      GO TO 122
C
C     HAVE PRINT 12345 LIST
C
266   CALL RLIST
      IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      IF (IFIR-2) 267,263,267
267   IF (JMAX-JCOL) 268,268,262
268   IMAX=ICOL
      GO TO 101
C
C     PROGRAM, SEGMENT
C
269   IF (NREC-1) 271,271,270
270   CALL DIAGNO (18)
      IF(JINT(1).EQ.KABC(3)) GO TO 27
271   CALL COPY (7)
      ICOL=14
      L772=0
      IF (IFIR-3) 97,111,97
C
C     READ INPUT TAPE
C
272   CALL COPY (4)
      ICOL=ICOL+2
      IOUT(ICOL)=KSPK(3)
      JCOL=JCOL+1
      DO 273 JCOL=JCOL,JMAX
      IF (JINT(JCOL-1)-KABC(5)) 273,274,273
273   CONTINUE
274   CALL COPY (1)
      IF (LCPY-KSPK(2)) 275,276,275
275   IF (MEOF) 274,262,262
276   CALL RSTAT
      IF (L772) 282,277,282
277   KLASS=3
278   CALL COPY (1)
      IF (LCPY-KSPK(2)) 279,281,279
279   IF (MEOF) 278,280,280
280   ICOL=ICOL+1
      IOUT(ICOL)=KSPK(5)
      IMAX=ICOL
      GO TO 98
281   IOUT(ICOL)=KSPK(5)
      ICOL=ICOL+1
      GO TO 97
282   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(2)) 283,281,283
283   IF (MEOF) 262,280,280
C
C     READ TAPE
C
284   CALL COPY (4)
      JCOL=LAST+1
      ICOL=ICOL+2
      IOUT(ICOL)=KSPK(3)
285   CALL COPY (1)
      IF (LCPY-KSPK(2)) 285,286,285
286   IOUT(ICOL)=KSPK(5)
      ICOL=ICOL+1
      CALL COPY (0)
      IMAX=ICOL
      GO TO 103
C
C     READ ( AND WRITE (
C
287   CALL COPY (NINS-1)
      ICOL=ICOL+1
      CALL COPY (1)
      CALL HOLCK
      CALL DLIST (MERR)
      IF (MERR) 7,288,7
288   CALL COPY (1)
      IF (LCPY-KSPK(2)) 289,292,289
289   IF (LCPY-KSPK(5)) 290,122,290
290   IF (MEOF) 288,291,291
291   CALL DIAGNO (23)
      GO TO 7
C
C     GET FORMAT
C
292   CALL RSTAT
      IF (L772) 296,293,296
293   KLASS=3
294   CALL COPY (1)
      IF (LCPY-KSPK(5)) 295,122,295
295   IF (MEOF) 294,291,291
296   IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY-KSPK(5)) 291,122,291
C
C     RETURN
C
297   CALL COPY (2)
      GO TO 299
C
C     SENSE LIGHT
C
298   CALL COPY (5)
      ICOL=ICOL+1
      CALL COPY (5)
      ICOL=ICOL+1
      CALL COPY (0)
      IMAX=ICOL
      GO TO 103
C
C     STOP
C
299   CALL COPY (4)
      ICOL=ICOL+1
      CALL COPY (0)
300   IMAX=ICOL
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR) 7,301,7
301   MTRAN=-1
      GO TO 101
C
C     SUBROUTINE
C
302   CALL COPY (10)
      ICOL=17
      IF (IFIR-3) 114,111,114
C
C     TYPE INTEGER, TYPE REAL ETC. STATEMENT.
C
303   DO 304 I=7,LAST
304   JINT(I)=KBL
      GO TO 49
C
C     WRITE OUTPUT TAPE
C
305   CALL COPY (1)
      GO TO 272
C
C     WRITE TAPE
C
306   CALL COPY (1)
      GO TO 284
C
307   FORMAT (1X,I4,2X,80A1)
308   FORMAT (7X,80A1)
309   FORMAT (13X,3H***,10I6,3H***)
      END
      SUBROUTINE STATNO
C
C     THIS ROUTINE GETS THE STATEMENT NUMBER FROM COLUMNS 1 THROUGH 5
C     AND PUTS IT IN L15.
C
C     ROUTINE WRITTEN 18 APRIL 1969.  (HM)
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     L15=0
      DO 5 I=1,5
      IF (JINT(I)-KBL) 2,5,2
2     DO 3 J=1,10
      IF (JINT(I)-KDIG(J)) 3,4,3
3     CONTINUE
      RETURN
4     L15=L15*10+J-1
5     CONTINUE
      RETURN
      END
      SUBROUTINE EDIT
C
C     THIS SUBROUTINE EDITS THE DEFINED AND THE REFERENCED STATEMENT
C     NUMBER LIST.
C
C     (1)     DEFINED STATEMENTS THAT ARE NOT REFERENCED ARE DELETED.
C     (2)     PSEUDO-STATEMENT NUMBERS OUTSIDE THE RANGE OF RENUMBERED
C             DEFINED STATEMENT NUMBERS ARE GENERATED FOR EACH
C             REFERENCED STATEMENT WHICH IS NOT DEFINED.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (NDEF) 2,2,3
2     RETURN
C
3     IF (NREF) 4,4,5
4     NDEF=0
      RETURN
C
C     SCAN DEFINED LIST FOR REFERENCES.  DELETE NON-REFERENCED
C     DEFINED STATEMENT NUMBERS.
C
5     IT=0
      DO 8 I=1,NDEF
      DO 6 J=1,NREF
      IF (LDEF(I)-LREF(J)) 6,7,6
6     CONTINUE
      GO TO 8
7     IT=IT+1
      LDEF(IT)=LDEF(I)
      LDEF(IT+1500)=LDEF(I+1500)
8     CONTINUE
C
C     SCAN REFERENCED STATEMENT LIST FOR MISSING DEFINITIONS.
C
      NDEF=IT
      IT=0
      DO 13 I=1,NREF
      DO 9 J=1,NDEF
      IF (LREF(I)-LDEF(J)) 9,13,9
9     CONTINUE
C
C     ADD PSEUDO-STATEMENT NUMBER.
C
      IF (IT) 11,10,11
10    IT=1
      CALL PAGE (0)
      PRINT 15
      CALL PAGE (3)
11    NDEF=NDEF+1
      IF (NDEF-1500) 12,12,14
12    LDEF(NDEF)=LREF(I)
      LDEF(NDEF+1500)=0
      J=NDEF*KD15+KB15
      NMSG=NMSG+1
      PRINT 16, NMSG,LREF(I),J
      CALL PAGE (1)
13    CONTINUE
      RETURN
C
14    CALL DIAGNO (6)
      NDEF=-1
      MP2=0
      RETURN
C
15    FORMAT (13X,66H*** THE FOLLOWING REFERENCED STATEMENTS ARE NOT DEF
     1INED.       ***/13X,66H*** PSEUDO-STATEMENT NUMBERS HAVE BEEN ASSI
     2GNED.               ***/1X)
16    FORMAT (7X,1H(,I3,22H) *** STATEMENT NUMBER,I5,19H IS ASSIGNED NUM
     1BER,I5,1H.,13X,3H***)
      END
      SUBROUTINE RDIR
C
C     THIS SUBROUTINE GENERATES A REFERENCE DIRECTORY OF STATEMENT
C     NUMBERS SHOWING THE OLD STATEMENT NUMBER, ITS LOCATION IN THE
C     ROUTINE, AND THE NEW STATEMENT NUMBER GENERATED BY TIDY.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (4-NDEF) 3,2,2
2     RETURN
C
3     CALL PAGE (0)
      PRINT 10
      CALL PAGE (4)
      DO 4 I=1,NDEF
4     JINT(I)=I
C
C     ADDRESS-SORT STATEMENT NUMBERS
C
      M=NDEF+1
5     NR=0
      M=M-1
      DO 7 I=2,M
      J=JINT(I-1)
      K=JINT(I)
      IF (LDEF(J)-LDEF(K)) 7,7,6
6     JINT(I-1)=K
      JINT(I)=J
      NR=-1
7     CONTINUE
      IF (NR) 5,8,8
C
C     PRINT DIRECTORY
C
8     DO 9 I=1,NDEF
      NW1=I*KD15+KB15
      NO1=LDEF(I)
      LO1=LDEF(I+1500)
      J=JINT(I)
      NW2=J*KD15+KB15
      NO2=LDEF(J)
      LO2=LDEF(J+1500)
      PRINT 11, NW1,NO1,LO1,NO2,LO2,NW2
9     CALL PAGE (1)
      PRINT 12
      CALL PAGE (3)
      RETURN
C
10    FORMAT (33X,26HSTATEMENT NUMBER DIRECTORY/1H0,22X,3HNEW,5X,3HOLD,3
     1X,3HLOC,12X,3HOLD,3X,3HLOC,6X,3HNEW/1X)
11    FORMAT (21X,I5,3H = ,I5,2H,(,I4,2H).,8X,I5,2H,(,I4,4H) = ,I5,1H.)
12    FORMAT (1H0,20X,53HOLD STATEMENT NUMBERS NOT APPEARING IN THIS DIR
     1ECTORY/21X,42HWERE NOT REFERENCED AND HENCE ARE DELETED.)
      END
      SUBROUTINE PASS2
C
C     THIS ROUTINE READS THE DATA GENERATED BY PASS1 AND PRINTS AND
C     PUNCHES THE RENUMBERED DECK.
C     UNNUMBERED CONTINUE AND FORMAT STATEMENTS ARE DELETED WITHOUT
C     A DIAGNOSTIC.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
      DIMENSION KILI(4), KIM(80,20)
      EQUIVALENCE (KLASS,KILI), (JINT,KIM)
C
C
1     IF (MP2) 2,3,2
2     IF (NRT1) 3,3,4
3     RETURN
C
C     SET INITIAL CONSTANTS.
C
4     IF (MLBL) 8,5,8
5     KOL73(1)=KBL
      IF (NROUT-26) 7,7,6
6     IP=NROUT-1
      I=IP/26
      J=IP+1-I*26
      KOL73(2)=KABC(I)
      KOL73(3)=KABC(J)
      GO TO 8
7     KOL73(2)=KBL
      KOL73(3)=KABC(NROUT)
8     NREC=0
      IP=1326
C
9     IF (NRT1) 35,35,10
10    CALL IOSYS1 (3,KILI,4)
      IF (IMAX) 35,35,11
11    DO 12 I=1,IP
12    IOUT(I)=KBL
      CALL IOSYS1 (3,IOUT,IMAX)
      NRT1=NRT1-1
      IF (NREC) 9,13,18
13    DO 14 I=1,72
14    JOB(I)=IOUT(I)
C
      DO 15 I=73,80
15    JOB(I)=KBL
C
      IF (JOB(1)-KABC(3)) 17,16,17
16    JOB(1)=KBL
17    CALL CENTER
      CALL PAGE (0)
C
C     CHECK KLASS FOR COMMENT.  (KLASS=0)
C
18    IF (KLASS) 9,19,20
19    IF (MCOM) 21,9,21
C
C     CHECK FOR NO STATEMENT NUMBER, (KLASS=1)
C
20    IF (KLASS-1) 9,21,24
C
C     PRINT (PUNCH) NEW STATEMENT.
C
21    CALL KIMPAK
      IP=NCD*66+6
      DO 23 J=1,NCD
      NREC=NREC+KD79
      PRINT 38, (KIM(I,J),I=1,72),KOL73,NREC
      CALL PAGE (1)
      IF (MPUN) 22,23,22
22    PUNCH 39, (KIM(I,J),I=1,72),KOL73,NREC
      NPUN=NPUN+1
23    CONTINUE
      GO TO 9
C
24    GO TO (9,25,27,29,35), KLASS
C
C     KLASS 2  (FORMAT)
C
25    L772=L15
      ICOL=0
      CALL RENUM
      IF (L772) 21,26,21
26    IP=IMAX
      GO TO 9
C
C     KLASS 3.  (STATEMENT NUMBER, NO REFERENCES.)
C
27    L772=L15
      ICOL=0
      CALL RENUM
      IF (L772) 9,28,21
28    IF (ITYPE-11) 21,26,21
C
C     KLASS 4  (STATEMENT NUMBERS AND REFERENCES.)
C
29    L772=L15
      ICOL=0
      CALL RENUM
      DO 30 I=7,IMAX
      JINT(I)=IOUT(I)
30    IOUT(I)=KBL
      ICOL=6
      JCOL=7
      JMAX=IMAX
31    IF (JINT(JCOL)-KLR2) 32,33,32
32    ICOL=ICOL+1
      IOUT(ICOL)=JINT(JCOL)
      JCOL=JCOL+1
      IF (JCOL-JMAX) 31,31,34
33    L772=JINT(JCOL+1)
      JCOL=JCOL+2
      CALL RENUM
      IF (JCOL-JMAX) 31,31,34
34    IMAX=ICOL
      GO TO 21
C
C     KLASS 5.  (END)
C
35    NREC=NREC+KD79
      PRINT 40, KOL73,NREC
      CALL PAGE (1)
      IF (MPUN) 36,37,36
36    PUNCH 41, KOL73,NREC
      NPUN=NPUN+1
37    CALL IOSYS1 (1,0,0)
      RETURN
C
38    FORMAT (7X,75A1,I4)
39    FORMAT (75A1,I4)
40    FORMAT (13X,3HEND,63X,3A1,I4,1H-)
41    FORMAT (6X,3HEND,63X,3A1,I4,1H-)
      END
      SUBROUTINE SKARD
C
C     SUPER-CARD INPUT ROUTINE.
C     THIS ROUTINE READS FORTRAN STATEMENTS WITH UP TO 19 CONTINUATION
C     CARDS AND PACKS THE STATEMENT INTO THE SUPER-CARD --IOUT--.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
      DIMENSION KIM(80,20)
      EQUIVALENCE (KLASS,KILI), (JINT,KIM)
C
      EQUIVALENCE (KBUFF(1),KB1), (KBUFF(6),KB6)
      EQUIVALENCE (KDIG(1),KZ), (KABC(3),KC), (KSPK(8),KSTAR)
C
C
C     ENTRY POINT.  TEST FOR FULL BUFFER.
C
1     IF (KODE) 2,2,4
C
C     LOAD EMPTY BUFFER.
C
2     READ 21, KBUFF
      DO 3 I=1,72
      IF (KBUFF(I)-KBL) 4,3,4
3     CONTINUE
      PRINT 22
      CALL PAGE (1)
      GO TO 2
C
C     TRANSFER BUFFER TO FIRST 72 COLUMNS OF IOUT.
C
4     MEOF=-1
      KODE=KODE+1
      DO 5 I=1,72
      IOUT(I)=KBUFF(I)
5     KIM(I,1)=KBUFF(I)
      DO 6 I=73,80
6     KIM(I,1)=KBUFF(I)
      K7=7
      K72=72
C
C     LOOK FOR CONTINUATION CARDS AND TRANSFER THEM TO IOUT VIA KBUFF.
C
      DO 15 J=2,20
7     READ 21, KBUFF
      DO 8 I=1,72
      IF (KBUFF(I)-KBL) 9,8,9
8     CONTINUE
      PRINT 22
      CALL PAGE (1)
      GO TO 7
C
9     IF (KB1-KC) 10,18,10
10    IF (KB1-KSTAR) 11,18,11
11    IF (KB6-KBL) 12,18,12
12    IF (KB6-KZ) 13,18,13
13    DO 14 I=1,80
14    KIM(I,J)=KBUFF(I)
      K7=K7+66
      K72=K72+66
      L=6
      DO 15 I=K7,K72
      L=L+1
15    IOUT(I)=KBUFF(L)
C
C     NINETEEN CONTINUATION CARDS.  LOAD EMPTY BUFFER BEFORE EXITING.
C
      J=21
16    READ 21, KBUFF
      DO 17 I=1,72
      IF (KBUFF(I)-KBL) 18,17,18
17    CONTINUE
      PRINT 22
      CALL PAGE (1)
      GO TO 16
C
C     LOCATE LAST NON-BLANK COLUMN IN CARD AND EXIT.
C
18    NCD=J-1
      L=K72-6
      ICOL=K72+1
      DO 19 I=1,L
      ICOL=ICOL-1
      IF (IOUT(ICOL)-KBL) 20,19,20
19    CONTINUE
20    IMAX=ICOL
      RETURN
C
21    FORMAT (80A1)
22    FORMAT (35X,23H( B L A N K   C A R D ))
      END
      SUBROUTINE KIMPAK
C
C     THIS ROUTINE PACKS SUPER-CARD IMAGES FROM IOUT(I) INTO KIM(I,J).
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
      DIMENSION KILI(4), KIM(80,20)
      EQUIVALENCE (KLASS,KILI), (JINT,KIM)
C
C
1     NCD=((IMAX-7)/66)+1
      IF (IOUT(1)-KABC(3)) 3,2,3
2     NCD=1
C
3     DO 4 I=1,72
4     KIM(I,1)=IOUT(I)
C
C                *** CONTINUATION CARD PROCESSING ***
      IF (1-NCD) 5,11,11
5     K7=7
      K72=72
C
      DO 10 J=2,NCD
      K7=K7+66
      K72=K72+66
      L=6
      DO 6 I=K7,K72
      L=L+1
6     KIM(L,J)=IOUT(I)
      DO 7 I=1,5
7     KIM(I,J)=KBL
      IF (J-11) 9,8,8
8     KIM(6,J)=KSPK(10)
      GO TO 10
9     KIM(6,J)=KDIG(J)
10    CONTINUE
11    RETURN
      END
      SUBROUTINE CONTRL
C
C     THIS SUBROUTINE EXECUTES THE TIDY CONTROL STATEMENTS.
C     ALL TIDY CONTROL STATEMENTS MUST HAVE AN * PUNCHED IN COLUMN 1.
C
C     1   BASE   NOBASE    KB15
C     2   CARD   NOCARD    MPUN
C     3   COLL   NOCOLL    MCOL
C     4   COMM   NOCOMM    MCOM
C     5   EXEM   NOEXEM    MEX
C     6   IDIN   ======    KD79
C     7   IDST   ======    KD79
C     8   LABE   NOLABE    MLBL
C     9   LAST   ======    MSTOP
C     10  LIST   NOLIST    MLIST
C     11  NEWR   ======    NROUT
C     12  REFE   NOREFE    MREF
C     13  ROUT   ======    NROUT
C     14  SKIP   ======    MSKP
C     15  STAT   ======    KD15
C     16  STOP   ======    MSTOP
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     I=14
      JSW=0
      JL=JMAX-1
      DO 4 JB=2,JL
      IF (JINT(JB)-KBL) 2,4,2
2     IF (JINT(JB)-KABC(I)) 6,3,6
3     I=I+1
      IF (I-16) 4,5,5
4     CONTINUE
      RETURN
C
5     JSW=16
      JB=JB+1
6     DO 10 J=1,16
      I=0
      DO 9 JCOL=JB,JMAX
      IF (JINT(JCOL)-KBL) 7,9,7
7     I=I+1
      IF (JINT(JCOL)-KTRL(I,J)) 10,8,10
8     IF (I-4) 9,12,12
9     CONTINUE
10    CONTINUE
      JINT(1)=KABC(3)
11    RETURN
C
C     EXECUTE CONTROL STATEMENT
C
12    NREC=NREC-1
      JSW=JSW+J
      GO TO (31,13,14,15,16,31,31,17,18,19,20,21,31,22,31,18,23,24,25,26
     1,27,11,11,28,11,29,11,30,11,11,11,11), JSW
13    MPUN=-1
      RETURN
14    MCOL=-1
      RETURN
15    MCOM=-1
      RETURN
16    MEX=-1
      RETURN
17    MLBL=-1
      RETURN
18    MSTOP=-1
      RETURN
19    MLIST=-1
      RETURN
20    NROUT=1
      KB15=0
      KD15=1
      KD79=1
      MCOL=-1
      MCOM=-1
      MEX=0
      MLBL=0
      MLIST=-1
      MPUN=-1
      MREF=0
      RETURN
21    MREF=-1
      MLIST=-1
      RETURN
22    MSKP=-1
      RETURN
23    KB15=0
      RETURN
24    MPUN=0
      RETURN
25    MCOL=0
      RETURN
26    MCOM=0
      RETURN
27    MEX=0
      RETURN
28    MLBL=0
      RETURN
29    MLIST=0
30    MREF=0
      RETURN
C
C     GET NUMBER FOLLOWING (=) SIGN.
C
31    DO 32 JCOL=JCOL,JMAX
      IF (JINT(JCOL)-KSPK(1)) 32,33,32
32    CONTINUE
      GO TO 34
33    JCOL=JCOL+1
      CALL RSTAT
      IF (L772) 34,34,36
34    IF (JSW-1) 1,37,35
35    L772=1
36    GO TO (37,1,1,1,1,38,38,1,1,1,1,1,39,1,40,1), JSW
37    KB15=L772
      RETURN
38    KD79=L772
      RETURN
39    NROUT=L772
      RETURN
40    KD15=L772
      RETURN
      END
      SUBROUTINE COPY (N)
C
C     THIS SUBROUTINE COPYS NON-BLANK CHARACTERS FROM JINT TO IOUT.
C
C                        ===   ON ENTRY   ===
C     N .LT. 0 COPYS UNTIL PARENTHESIS COUNT IS ZERO.
C     N .EQ. 0 COPYS ALL REMAINING NON-BLANK DATA FROM JINT TO IOUT.
C     N .GT. 0 COPYS N NON-BLANK DATA FROM JINT TO IOUT.
C     THE FIRST ITEM INSPECTED IS JINT(JCOL).
C     THE FIRST ITEM STORED GOES TO IOUT(ICOL+1).
C
C                        ===   ON EXIT   ===
C     THE LAST ITEM INSPECTED WAS JINT(JCOL-1).
C     THE LAST ITEM STORED WENT TO IOUT(ICOL) AND IS IN LCPY.
C
C     MEOF .LT. 0  FOR NORMAL EXIT.
C     MEOF .EQ. 0  FOR KERM FOUND WHILE COPYING  ALL REMAINING DATA,
C                  OR FOR KERM FOUND BEFORE LEFT PARENTHESIS.
C     MEOF .GT. 0  FOR MISSING RIGHT PARENTHESIS, OR FOR MEOF =0 ON
C                  ENTRY TO COPY.
C
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     NT=N
      IF (MEOF) 3,2,2
2     MEOF=1
      LCPY=KERM
      RETURN
C
3     IF (JCOL-JMAX) 4,4,2
C
4     IF (NT) 15,6,10
C
C     COPY ALL REMAINING NON-BLANK CHARACTERS.
C
5     JCOL=JCOL+1
6     JT=JINT(JCOL)
      IF (JT-KBL) 7,5,7
7     ICOL=ICOL+1
      IOUT(ICOL)=JT
      IF (JT-KERM) 5,8,5
8     LCPY=KERM
      ICOL=ICOL-1
      MEOF=0
      RETURN
C
C     COPY --N-- NON-BLANK CHARACTERS.
C
9     JCOL=JCOL+1
10    JT=JINT(JCOL)
      IF (JT-KBL) 11,9,11
11    ICOL=ICOL+1
      IOUT(ICOL)=JT
      LCPY=JT
      NT=NT-1
      IF (NT) 2,13,12
12    IF (JT-KERM) 9,8,9
13    JCOL=JCOL+1
      RETURN
C
C     COPY TO PARENTHESIS COUNT OF ZERO.
C     LOOK FOR LEFT PARENTHESIS.
C
14    JCOL=JCOL+1
15    JT=JINT(JCOL)
      IF (JT-KBL) 16,14,16
16    ICOL=ICOL+1
      IOUT(ICOL)=JT
      LCPY=JT
      IF (JT-KSPK(3)) 17,19,17
17    IF (JT-KSPK(5)) 18,27,18
18    IF (JT-KERM) 14,8,14
C
C     HAVE LEFT PARENTHESIS, LOOK FOR PARENTHESIS COUNT OF ZERO.
C
19    NPAR=1
20    JCOL=JCOL+1
      JT=JINT(JCOL)
      IF (JT-KBL) 21,20,21
21    ICOL=ICOL+1
      IOUT(ICOL)=JT
      LCPY=JT
      IF (JT-KSPK(3)) 23,22,23
22    NPAR=NPAR+1
      GO TO 20
23    IF (JT-KSPK(5)) 25,24,25
24    NPAR=NPAR-1
      IF (NPAR) 27,13,20
25    IF (JT-KERM) 20,26,20
26    CALL DIAGNO (2)
      LCPY=KERM
      GO TO 28
27    CALL DIAGNO (3)
28    MEOF=1
      JCOL=JCOL+1
      RETURN
      END
      SUBROUTINE HOLCK
C
C     THIS ROUTINE SCANS JINT(I) FROM LFIR TO JMAX, LOOKING FOR
C     HOLLERITH CONSTANTS AND FIELDS.  IF SUCH FIELDS ARE FOUND, THE
C     BLANK SPACES AND THE LEFT AND RIGHT PARENTHESIS ARE REPLACED WITH
C     EQUIVALENT BLANK AND PARENTHESIS SYMBOLS WHICH WILL NOT INTERFERE
C     WITH COPY OR WITH PARENTHESIS COUNTING.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
C     LOOK FOR H IN FORTRAN FIELD.
C
1     IB=LFIR+1
2     DO 13 I=IB,JMAX
      IF (JINT(I)-KABC(8)) 13,3,13
3     MAX=I-IB+1
      L=I
C
C     LOOK FOR PRECEDING NUMERIC DIGITS OR BLANKS.
C
      ND=0
      DO 11 J=1,MAX
      L=L-1
      IF (JINT(L)-KBL) 4,11,4
4     DO 5 IS=1,10
      IF (JINT(L)-KDIG(IS)) 5,10,5
5     CONTINUE
      IF (ND) 6,13,6
C
C     LOOK FOR PRECEDING SPECIAL CHARACTER.     = , ( / ) + - *
C
6     DO 7 IS=1,9
      IF (JINT(L)-KSPK(IS)) 7,12,7
7     CONTINUE
C
C     NO SPECIAL CHARACTER.  LOOK FOR MISSING (,) IN FORMAT STATEMENT.
C
      IF (JINT(L)-KABC(24)) 13,8,13
8     IF (ITYPE-25) 13,9,13
9     CALL DIAGNO (25)
      CALL BREAK (L+1,1)
      JINT(L+1)=KSPK(2)
      IB=L+1
      GO TO 2
10    ND=-1
11    CONTINUE
      IF (ND) 12,13,12
C
C     EVALUATE NUMBER OF HOLLERITHS (IF ANY).
C
12    IS=JCOL
      JCOL=L+1
      CALL RSTAT
      JCOL=IS
      IF (L772) 13,13,14
13    CONTINUE
      GO TO 19
C
14    IF (L772-120) 17,17,15
15    CALL DIAGNO (18)
      IF (L772+I-1326) 17,17,16
16    L772=1326-I
      CALL DIAGNO (18)
C
C     ALTER HOLLERITH FIELD TO MAKE SYMBOLS DISTINCT FROM FORTRAN.
C
17    IB=I
      MAX=MIN0(JMAX,I+L772)
      DO 18 I=IB,MAX
18    JINT(I)=JINT(I)+1
      IB=MAX+1
      IF (IB-JMAX) 2,2,19
19    CALL QUOTE
      RETURN
      END
      SUBROUTINE RSTAT
C
C     THIS SUBROUTINE GETS THE STATEMENT NUMBER REFERENCED AT LOCATION
C     JCOL AND PUTS IT IN L772.  JCOL IS LEFT SET AT THE LOCATION OF THE
C     NEXT SYMBOL ON JINT.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (JCOL-JMAX) 3,3,2
2     JCOL=JMAX
      L772=0
      RETURN
C
3     L772=0
      DO 7 JCOL=JCOL,JMAX
      IF (JINT(JCOL)-KBL) 4,7,4
4     DO 5 J=1,10
      IF (JINT(JCOL)-KDIG(J)) 5,6,5
5     CONTINUE
      RETURN
C
6     L772=L772*10+J-1
7     CONTINUE
      JCOL=JMAX
      LCPY=KERM
      MEOF=0
      RETURN
      END
      SUBROUTINE DLIST (MERR)
C
C     THIS SUBROUTINE UPDATES THE DEFINED STATEMENT NUMBER LIST, LDEF,
C     BY ADDING THE STATEMENT NUMBER IN L15, IF IT IS UNIQUE.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
C     SET UP INITIAL CONDITIONS.
C
1     MERR=0
      IF (KLASS-2) 6,2,2
2     IF (L15) 7,3,7
3     IF (MTRAN*(ITYPE-12)) 4,5,4
4     CALL DIAGNO (5)
C
C     DLIST EXITS HERE.
C
5     MTRAN=0
      MILDO=0
      NXEQ=NXEQ+1
6     RETURN
C
C     IF THIS IS FIRST EXECUTABLE, ADD TO REFERENCE LIST.
C
7     IF (NXEQ) 9,8,9
8     I=L772
      L772=L15
      CALL RLIST
      L772=I
C
9     IF (NDEF) 5,12,10
C
C     SCAN FOR DUPLICATE STATEMENT NUMBERS.
C
10    DO 11 I=1,NDEF
      IF (LDEF(I)-L15) 11,24,11
11    CONTINUE
12    NDEF=NDEF+1
      IF (NDEF-1500) 13,13,25
13    LDEF(NDEF)=L15
      LDEF(NDEF+1500)=NREC
C
C     SCAN FOR POSSIBLE DO-LOOP TERMINATIONS.
C
      IF (NDOS) 5,5,14
14    I=NDOS
      IF (MILDO) 17,15,17
15    IF (LDOS(I)-L15) 18,16,18
16    NDOS=NDOS-1
      GO TO 5
C
17    IF (LDOS(I)-L15) 18,19,18
18    I=I-1
      IF (I) 14,5,17
19    CALL DIAGNO (4)
      IF (MILDO) 22,20,22
20    NMSG=NMSG+1
      PRINT 27, NMSG,I,NDOS
      CALL PAGE (1)
      GO TO 22
C
C     RESORT DO-LOOP TERMINAL LIST AFTER DELETIONS.
C
21    LDOS(I-1)=LDOS(I)
22    I=I+1
      IF (I-NDOS) 21,21,23
23    NDOS=NDOS-1
      MPUN=0
      MERR=-1
      GO TO 5
C
C     ERROR DIAGNOSTICS.
C
24    NMSG=NMSG+1
      PRINT 28, NMSG,L15,LDEF(I+1500)
      CALL PAGE (1)
      GO TO 26
25    CALL DIAGNO (6)
      NDEF=-1
      MP2=0
26    MPUN=0
      MERR=-1
      GO TO 5
C
27    FORMAT (8H ****  (,I3,19H) *** DO LOOP LEVEL,I2,23H TERMINATES WHI
     1LE LEVEL,I2,22H IS IN EFFECT.     ***)
28    FORMAT (8H ****  (,I3,22H) *** STATEMENT NUMBER,I5,25H DUPLICATES
     1THE NUMBER AT,I4,1H.,8X,3H***)
      END
      SUBROUTINE RLIST
C
C     THIS SUBROUTINE UPDATES THE REFERENCED STATEMENT NUMBER LIST.
C     L772 CONTAINS THE REFERENCED STATEMENT NUMBER.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (L772) 3,2,3
2     RETURN
C
3     IF (L772-L15) 6,4,6
4     IF (NXEQ) 9,9,5
5     CALL DIAGNO (18)
6     IF (NREF) 9,9,7
7     DO 8 I=1,NREF
      IF (LREF(I)-L772) 8,2,8
8     CONTINUE
C
C     ADD REFERENCED STATEMENT TO TABLE.
C
9     NREF=NREF+1
      IF (NREF-1000) 10,10,11
10    LREF(NREF)=L772
      RETURN
C
11    CALL DIAGNO (7)
      NREF=-1
      MP2=0
      RETURN
      END
      SUBROUTINE RENUM
C
C     THIS SUBROUTINE INSPECTS THE OLD STATEMENT NUMBER IN L772 AND
C     INSERTS THE NEW NUMBER CORRESPONDING TO L772 IN IOUT STARTING AT
C     ICOL+1.  ON EXIT, L772 CONTAINS THE NEW STATEMENT NUMBER.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (L772) 3,2,3
2     RETURN
C
C     SEARCH DEFINED STATEMENT TABLE FOR L772.
C
3     DO 4 I=1,NDEF
      IF (LDEF(I)-L772) 4,5,4
4     CONTINUE
C
C     NOT IN STATEMENT NUMBER LIST. DELETE NUMBER.
C
      L772=0
      RETURN
C
C     ASSEMBLE NEW STATEMENT NUMBER.
C
5     I=I*KD15+KB15
      L772=I
      DO 6 J=1,5
      IT=I/10
      K=I+1-IT*10
      NTEMP(J)=KDIG(K)
      I=IT
      IF (I) 1,7,6
6     CONTINUE
      J=5
C
C     INSERT STATEMENT NUMBER DIGITS.
C
7     ICOL=ICOL+1
      IOUT(ICOL)=NTEMP(J)
      J=J-1
      IF (J) 1,2,7
      END
      SUBROUTINE IOSYS1 (OP,LIST,LEN)
C
C     THIS SUBROUTINE BUFFERS IN AND OUT BINARY RECORDS IN 510 WORD
C     BLOCKS VIA TAPE UNIT 1.
C
C     OP CODES PERMITTED.
C     0         1         2         3
C     ERASE     REWIND    WRITE     READ
C
      DIMENSION LIST(1), IOBUF(510)
      INTEGER OP,OPSW,RWS
C
C
1     OPSW=OP+1
      GO TO (2,3,7,15), OPSW
C
C     ERASE
C
2     MR=0
      GO TO 6
C
C     REWIND
C
3     IF (RWS*NR) 6,6,4
4     NR=NR+1
      DO 5 I=NR,510
5     IOBUF(I)=0
      WRITE (1) IOBUF
6     REWIND 1
      RWS=0
      NR=0
      RETURN
C
C     WRITE
C
7     IF (RWS) 8,9,10
8     PAUSE 11
9     RWS=1
10    IF (LEN) 14,14,11
11    DO 13 I=1,LEN
      NR=NR+1
      IOBUF(NR)=LIST(I)
      IF (NR-510) 13,12,12
12    WRITE (1) IOBUF
      NR=0
13    CONTINUE
      MR=MR+LEN
14    RETURN
C
C     READ
C
15    IF (MR) 16,16,17
16    PAUSE 12
17    IF (RWS) 20,19,18
18    PAUSE 13
19    READ (1) IOBUF
      RWS=-1
      NMR=0
20    IF (LEN) 25,25,21
21    DO 23 I=1,LEN
      NR=NR+1
      LIST(I)=IOBUF(NR)
      IF (NR-510) 23,22,22
22    IF (NMR+I-MR) 220,6,24
220   READ (1) IOBUF
      NR=0
23    CONTINUE
      NMR=NMR+LEN
      IF (NMR-MR) 25,25,24
24    PAUSE 14
25    RETURN
      END
      SUBROUTINE IOSYS2 (OP,LIST,LEN)
C
C     THIS SUBROUTINE BUFFERS IN AND OUT BINARY RECORDS IN 510 WORD
C     BLOCKS VIA TAPE UNIT 2.
C
C     OP CODES PERMITTED.
C     0         1         2         3
C     ERASE     REWIND    WRITE     READ
C
      DIMENSION LIST(1), IOBUF(510)
      INTEGER OP,OPSW,RWS
C
C
1     OPSW=OP+1
      GO TO (2,3,7,15), OPSW
C
C     ERASE
C
2     MR=0
      GO TO 6
C
C     REWIND
C
3     IF (RWS*NR) 6,6,4
4     NR=NR+1
      DO 5 I=NR,510
5     IOBUF(I)=0
      WRITE (2) IOBUF
6     REWIND 2
      RWS=0
      NR=0
      RETURN
C
C     WRITE
C
7     IF (RWS) 8,9,10
8     PAUSE 21
9     RWS=1
10    IF (LEN) 14,14,11
11    DO 13 I=1,LEN
      NR=NR+1
      IOBUF(NR)=LIST(I)
      IF (NR-510) 13,12,12
12    WRITE (2) IOBUF
      NR=0
13    CONTINUE
      MR=MR+LEN
14    RETURN
C
C     READ
C
15    IF (MR) 16,16,17
16    PAUSE 22
17    IF (RWS) 20,19,18
18    PAUSE 23
19    READ (2) IOBUF
      RWS=-1
      NMR=0
20    IF (LEN) 25,25,21
21    DO 23 I=1,LEN
      NR=NR+1
      LIST(I)=IOBUF(NR)
      IF (NR-510) 23,22,22
22    IF (NMR+I-MR) 220,6,24
220   READ (2) IOBUF
      NR=0
23    CONTINUE
      NMR=NMR+LEN
      IF (NMR-MR) 25,25,24
24    PAUSE 24
25    RETURN
      END
      SUBROUTINE NOPRO
C
C     THIS SUBROUTINE EXECUTES A HIGH-SPEED SEARCH FOR AN END STATEMENT.
C     IF MP2 IS ON, CARD IMAGES ARE WRITTEN ON TAPE 1 FOR USE BY PASS2.
C     NO INTERNAL PROCESSING IS DONE ON THE STATEMENTS.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
      DIMENSION KILI(4), KIM(80,20)
      EQUIVALENCE (KLASS,KILI), (JINT,KIM)
C
C
C     SET INITIAL VALUES.
C
1     CALL IOSYS1 (0,0,0)
      CALL IOSYS2 (0,0,0)
      NRT2=0
      NDEF=0
      KLASS=1
      ITYPE=0
      L15=0
      IF (MP2) 2,4,2
C
C     WRITE OUT STATEMENT CURRENTLY IN JINT.
C
2     IMAX=JMAX
      CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,JINT,JMAX)
      NRT1=1
      GO TO 4
C
C     READ AND COPY CARD IMAGES BY WAY OF KBUFF.
C
3     READ 16, KBUFF
4     NREC=NREC+1
      PRINT 17, NREC,KBUFF
      CALL PAGE (1)
C
C     LOOK FOR LAST NON-BLANK CHARACTER ON CARD.
C
      I=72
5     IF (KBUFF(I)-KBL) 7,6,7
6     I=I-1
      IF (7-I) 5,7,7
7     IMAX=I
C
C     LOOK FOR END STATEMENT.
C
      J=3
      DO 10 I=7,IMAX
      IF (KBUFF(I)-KBL) 8,10,8
8     IF (KBUFF(I)-KEND(J)) 11,9,11
9     J=J-1
      IF (J) 13,13,10
10    CONTINUE
C
C     WRITE OUT CARD IMAGE FOR PASS2.
C
11    IF (MP2) 12,3,12
12    CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,KBUFF,IMAX)
      NRT1=NRT1+1
      GO TO 3
C
C     WRITE OUT END STATEMENT.
C
13    IF (MP2) 14,15,14
14    KLASS=5
      CALL IOSYS1 (2,KILI,4)
      CALL IOSYS1 (2,KBUFF,IMAX)
      NRT1=NRT1+1
      CALL IOSYS1 (1,0,0)
C
C     LOAD BUFFER, KBUFF, BEFORE EXITING.
C
15    READ 16, KBUFF
      RETURN
C
16    FORMAT (80A1)
17    FORMAT (1X,I4,2X,80A1)
      END
      SUBROUTINE QUOTE
C
C     ROUTINE TO SCAN FORMAT STATEMENTS FOR HOLLERITH LITERAL FIELDS
C     AND TO CONVERT THEM TO STANDARD HOLLERITH FIELDS.
C     ROUTINE BY HARRY M. MURPHY, JR.,  28 FEBRUARY 1969.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C     UPDATED 16 MARCH 1971 TO PERMIT EITHER * OR ' AS QUOTE MARKS.
C
C
C     START.  CHECK IF FORMAT STATEMENT.  (ITYPE = 25).
C
1     IF (ITYPE-25) 2,3,2
2     RETURN
C
3     IB=LFIR
C
C     LOOK FOR LEADING QUOTE MARK.
C
4     IM=JMAX-1
      DO 5 I=IB,IM
      IF (JINT(I).EQ.KSPK(8).OR.JINT(I).EQ.KSPK(11)) GO TO 6
5     CONTINUE
      RETURN
C
C     HAVE FIRST QUOTE AT IQ1.  LOOK FOR PRECEEDING SPECIAL CHARACTER.
C
6     IQ1=I
      KQ=JINT(IQ1)
      JINT(IQ1)=KBL
7     I=I-1
      IF (JINT(I)-KBL) 8,7,8
8     DO 9 J=2,5
      IF (JINT(I)-KSPK(J)) 9,10,9
9     CONTINUE
C
C     NO PRECEEDING SPECIAL CHARACTER.  INSERT PRECEEDING COMMA.
C
      CALL BREAK (IQ1,1)
      JINT(IQ1)=KSPK(2)
      IQ1=IQ1+1
C
C     START SCAN OF LITERAL FIELD LOOKING FOR CLOSING QUOTE MARK.
C     TREAT DOUBLE QUOTE MARKS AS A LITERAL SINGLE QUOTE MARK.
C
10    IB=IQ1+1
      IQ2=0
      NH=0
      DO 14 I=IB,JMAX
      IF (JINT(I)-KQ) 13,11,13
11    IF (JINT(I+1)-KQ) 16,12,16
12    JINT(I+1)=KBL-1
      NH=NH-1
13    NH=NH+1
14    JINT(I)=JINT(I)+1
      IF (NH) 15,2,15
C
C     UNCLOSED LITERAL FIELD.  PRINT MESSAGE AND CLOSE WITH PAREN.
C
15    NMSG=NMSG+1
      PRINT 25, NMSG
      MLIST=-1
      JINT(JMAX)=KSPK(5)
      NH=NH-1
      GO TO 21
C
C     HAVE CLOSING QUOTE MARK.  LOOK FOR FOLLOWING SPECIAL CHARACTER.
C     IF NONE, INSERT COMMA.
C
16    IQ2=I
      JINT(IQ2)=KBL
      IF (I-JMAX) 17,15,2
17    IB=I+1
      DO 20 I=IB,JMAX
      IF (JINT(I)-KBL) 18,20,18
18    DO 19 J=2,5
      IF (JINT(I)-KSPK(J)) 19,21,19
19    CONTINUE
      JINT(IQ2)=KSPK(2)
      GO TO 21
20    CONTINUE
C
C     INSERT H AT IQ1 AND BREAK FOR HOLLERITH COUNT.
C
21    JINT(IQ1)=KABC(8)
      CALL BREAK (IQ1,3)
C
C     INSERT HOLLERITH COUNT AND LOOP TO STATEMENT 4 FOR MORE.
C
      L=IQ1+2
22    K=NH/10
      J=NH-10*K
      JINT(L)=KDIG(J+1)
      L=L-1
      NH=K
      IF (NH) 23,23,22
23    IF (IQ2) 2,2,24
24    IB=IQ2
      GO TO 4
C
25    FORMAT (8H ****  (,I3,68H) *** THE ABOVE STATEMENT CONTAINS AN ILL
     1EGAL LITERAL FIELD.     ***)
      END
      SUBROUTINE BREAK (L,N)
C
C     ROUTINE TO INSERT BREAK OF N BLANK SPACES AT LOCATION L IN
C     INTERNAL ARRAY, JINT.
C     ROUTINE BY HARRY M. MURPHY, JR.,  28 FEBRUARY 1969.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C     START.  CHECK VALUES OF L AND N.
C
1     IF (L-JMAX) 2,2,8
2     IF (N) 8,8,3
3     NMAX=JMAX+N
      IF (NMAX-1600) 4,8,8
C
C     PUSH JINT UP N PLACES STARTING AT L.
C
4     I=JMAX+1
      J=NMAX+1
      JINT(J)=KERM
5     I=I-1
      J=J-1
      JINT(J)=JINT(I)
      IF (L-I) 5,6,6
C
C     INSERT BLANKS IN N-SPACES GENERATED.
C
6     JMAX=NMAX
7     JINT(I)=KBL
      I=I+1
      IF (I-J) 7,9,9
C
8     PAUSE 31
9     RETURN
      END
      SUBROUTINE DIAGNO (N)
C
C     THIS ROUTINE PRINTS THE GENERAL DIAGNOSTICS FOR TIDY.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C     ***                                                            ***
C      1 THE ABOVE STATEMENT IS ILLEGAL AND HAS BEEN DELETED.
C      2 THE ABOVE STATEMENT HAS A MISSING RIGHT PARENTHESIS.
C      3 THE ABOVE STATEMENT HAS AN EXCESS RIGHT PARENTHESIS.
C      4 THE ABOVE STATEMENT INCORRECTLY TERMINATES A DO LOOP.
C      5 THE ABOVE STATEMENT CANNOT BE REACHED BY THE PROGRAM.
C      6 STATEMENT NUMBER TABLE FULL.  RENUMBER PASS DELETED.
C      7 REFERENCE NUMBER TABLE FULL.  RENUMBER PASS DELETED.
C      8 THE ABOVE STATEMENT IS OBSOLETE AND IS DELETED.
C      9 ABOVE STATEMENT HAS AN ILLEGAL FIRST SPECIAL CHARACTER.
C     10 ILLEGAL DATA, FUNCTION, OR SUBROUTINE STATEMENT.
C     11 THE ABOVE COMMON OR DATA STATEMENT IS MISSING A (/).
C     12 THE ABOVE CONTINUE STATEMENT IS REDUNDANT AND IS DELETED.
C     13 THE ABOVE DIMENSION STATEMENT IS NOT COMPLETE.
C     14 THE ABOVE DO STATEMENT IS MISSING A (=).
C     15 THE ABOVE DO STATEMENT HAS AN INVALID TERMINAL STATEMENT.
C     16 W A R N I N G .  UNSATISFIED DO LOOPS.
C     17 UNNUMBERED OR INVALID FORMAT STATEMENT DELETED.
C     18 WARNING.  ABOVE STATEMENT IS POOR PROGRAMMING PRACTICE.
C     19 ABOVE GO TO STATEMENT IS ILLEGAL.
C     20 ILLEGAL ARITHMETIC IF STATEMENT.   IF (ARITH) 1,2,3
C     21 ABOVE NAMELIST STATEMENT MISSING (/).
C     22 ILLEGAL READ, PRINT, OR PUNCH STATEMENT.
C     23 ILLEGAL READ (**) LIST, OR WRITE (**) LIST, STATEMENT.
C     24 DO LOOP TABLE FULL.  RENUMBER PASS DELETED.
C     25 W A R N I N G .   COMMA FOLLOWING X MISSING IN ABOVE FORMAT.
C     26 TIDY CANNOT PROCESS THIS CLASS OF PROGRAM.  (COPY EXECUTED.)
C     27 WARNING.  ABOVE DO-LOOP TERMINUS PREVIOUSLY REFERENCED.
C     ***                                                            ***
C
1     J=N
      IF (J) 3,3,2
2     IF (J-28) 4,3,3
3     J=1
4     NMSG=NMSG+1
      PRINT 5, NMSG,(MSG(I,J),I=1,15)
      CALL PAGE (1)
      MLIST=-1
      RETURN
C
5     FORMAT (8H ****  (,I3,5H) ***,15A4,3H***)
      END
      SUBROUTINE CENTER
C
C                  THIS ROUTINE CENTERS JOB HEADINGS
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C          COMPRESS STATEMENT BY ELIMINATING MULTIPLE BLANKS
C
1     DO 2 I=1,80
      IF (JOB(I)-KBL) 3,2,3
2     CONTINUE
      RETURN
C
3     JOB(1)=JOB(I)
      J=1
      IB=I+1
      DO 6 I=IB,80
      IF (JOB(I)-KBL) 5,4,5
4     IF (JOB(I-1)-KBL) 5,6,5
5     J=J+1
      JOB(J)=JOB(I)
6     CONTINUE
C
      IB=J+1
      DO 7 I=IB,80
7     JOB(I)=KBL
C
C                           CENTER HEADING
C
      IB=(80-J)/2
8     I=J+IB
      JOB(I)=JOB(J)
      J=J-1
      IF (J) 9,9,8
C
C                   ELIMINATE REMAINING NON-BLANKS
C
9     IB=I-1
      DO 10 I=1,IB
10    JOB(I)=KBL
      RETURN
      END
      SUBROUTINE PAGE (N)
C
C     THIS SUBROUTINE DOES THE GENERAL PAGE COUNTING FOR TIDY WHILE
C     LIMITING THE OUTPUT TO 50 LINES PER PAGE.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG(15,27)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KSTIJ(12,60)
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
1     IF (N) 4,2,5
2     IF (LINE) 4,4,3
3     NPAGE=NPAGE+1
      PRINT 6, NPAGE,JOB
      LINE=0
4     RETURN
C
5     LINE=LINE+N
      IF (LINE-50) 4,3,3
C
6     FORMAT (1H1,6X,11H* T I D Y *,61X,4HPAGE,I4/7X,80A1/1X)
      END
      BLOCK DATA
C
C     THIS BLOCK DATA CONTAINS ALL THE DATA STATEMENTS FOR TIDY.
C
      COMMON /MURPHY/ ICOL,IFIR,IOUT(1326),JCOL,JINT(1600),JMAX,JOB(80)
     1,KB15,KBUFF(80),KD15,KD79,KOL73(3),L772,LAST,LCPY,LDEF(3000),LDOS(
     210),LFIR,LQUAL,LREF(1000),MCOL,MCOM,MEOF,MEX,MILDO,MLBL,MLGC,MLIST
     3,MP2,MPUN,MREF,MSKP,MSTOP,MTRAN,NBLC,NCD,NDEF,NDOS,NINS,NPAR,NPUN,
     4NREC,NREF,NROUT,NRT1,NRT2,NTEMP(5),NXEQ
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(11)
      COMMON /CONTDY/ KTRL(4,16),KEND(3)
      COMMON /DIOMSG/ NMSG,MSG1(15),MSG2(15),MSG3(15),MSG4(15),MSG5(15),
     1MSG6(15),MSG7(15),MSG8(15),MSG9(15),MSG10(15),MSG11(15),MSG12(15),
     2MSG13(15),MSG14(15),MSG15(15),MSG16(15),MSG17(15),MSG18(15),MSG19(
     315),MSG20(15),MSG21(15),MSG22(15),MSG23(15),MSG24(15),MSG25(15),MS
     4G26(15),MSG27(15)
      COMMON /HOL2/ KBL2,KLR2,KLP2,KRP2,KERM
      COMMON /INIT/ LINE,NPAGE,KODE
      COMMON /KST/ KST1(12),KST2(12),KST3(12),KST4(12),KST5(12),KST6(12)
     1,KST7(12),KST8(12),KST9(12),KST10(12),KST11(12),KST12(12),KST13(12
     2),KST14(12),KST15(12),KST16(12),KST17(12),KST18(12),KST19(12),KST2
     30(12),KST21(12),KST22(12),KST23(12),KST24(12),KST25(12),KST26(12),
     4KST27(12),KST28(12),KST29(12),KST30(12),KST31(12),KST32(12),KST33(
     512),KST34(12),KST35(12),KST36(12),KST37(12),KST38(12),KST39(12),KS
     6T40(12),KST41(12),KST42(12),KST43(12),KST44(12),KST45(12),KST46(12
     7),KST47(12),KST48(12),KST49(12),KST50(12),KST51(12),KST52(12),KST5
     83(12),KST54(12),KST55(12),KST56(12),KST57(12),KST58(12),KST59(12),
     9KST60(12)
C
      COMMON /LIOS/ KLASS,ITYPE,L15,IMAX
C
C
      DATA KBL,KDIG/1H ,1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9/
      DATA KABC/1HA,1HB,1HC,1HD,1HE,1HF,1HG,1HH,1HI,1HJ,1HK,1HL,1HM,1HN,
     11HO,1HP,1HQ,1HR,1HS,1HT,1HU,1HV,1HW,1HX,1HY,1HZ/
      DATA KSPK/1H=,1H,,1H(,1H/,1H),1H+,1H-,1H*,1H.,1H$,1H'/
      DATA KTRL,KEND/1HB,1HA,1HS,1HE,1HC,1HA,1HR,1HD,1HC,1HO,1HL,1HL,1HC
     1,1HO,1HM,1HM,1HE,1HX,1HE,1HM,1HI,1HD,1HI,1HN,1HI,1HD,1HS,1HT,1HL,1
     2HA,1HB,1HE,1HL,1HA,1HS,1HT,1HL,1HI,1HS,1HT,1HE,1HW,1HR,1HO,1HR,1HE
     3,1HF,1HE,1HR,1HO,1HU,1HT,1HS,1HK,1HI,1HP,1HS,1HT,1HA,1HT,1HS,1HT,1
     4HO,1HP,1HD,1HN,1HE/
      DATA KBL2,KLR2,KLP2,KRP2,KERM/2H *,2H$$,2H((,2H)),4H ***/
      DATA LINE,NPAGE,KODE/1,0,0/
C
      DATA NMSG/0/
      DATA MSG1/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H IS ,4HILLE,4HGAL ,
     14HAND ,4HHAS ,4HBEEN,4H DEL,4HETED,4H.   ,4H    /
      DATA MSG2/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H HAS,4H A M,4HISSI,
     14HNG R,4HIGHT,4H PAR,4HENTH,4HESIS,4H.   ,4H    /
      DATA MSG3/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H HAS,4H ANA,4HEXCE,
     14HSS R,4HIGHT,4H PAR,4HENTH,4HESIS,4H.   ,4H    /
      DATA MSG4/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H INC,4HORRE,4HCTLY,
     14H TER,4HMINA,4HTES ,4HA DO,4H LOO,4HP.  ,4H    /
      DATA MSG5/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H CAN,4HNOT ,4HBE R,
     14HEACH,4HED B,4HY TH,4HE PR,4HOGRA,4HM.  ,4H    /
      DATA MSG6/4H STA,4HTEME,4HNT N,4HUMBE,4HR TA,4HBLE ,4HFULL,4H.  R,
     14HENUM,4HBER ,4HPASS,4H DEL,4HETED,4H.   ,4H    /
      DATA MSG7/4H REF,4HEREN,4HCE N,4HUMBE,4HR TA,4HBLE ,4HFULL,4H.  R,
     14HENUM,4HBER ,4HPASS,4H DEL,4HETED,4H.   ,4H    /
      DATA MSG8/4H THE,4H ABO,4HVE S,4HTATE,4HMENT,4H IS ,4HOBSO,4HLETE,
     14H AND,4H IS ,4HDELE,4HTED.,4H    ,4H    ,4H    /
      DATA MSG9/4H ABO,4HVE S,4HTATE,4HMENT,4H HAS,4H AN ,4HILLE,4HGAL ,
     14HFIRS,4HT SP,4HECIA,4HL CH,4HARAC,4HTER.,4H    /
      DATA MSG10/4H ILL,4HEGAL,4H DAT,4HA, F,4HUNCT,4HION,,4H OR ,4HSUBR
     1,4HOUTI,4HNE S,4HTATE,4HMENT,4H.   ,4H    ,4H    /
      DATA MSG11/4H THE,4H ABO,4HVE C,4HOMMO,4HN OR,4H DAT,4HA ST,4HATEM
     1,4HENT ,4HIS M,4HISSI,4HNG A,4H (/),4H.   ,4H    /
      DATA MSG12/4H THE,4H ABO,4HVE C,4HONTI,4HNUE ,4HSTAT,4HEMEN,4HT IS
     1,4H RED,4HUNDA,4HNT I,4HS DE,4HLETE,4HD.  ,4H    /
      DATA MSG13/4H THE,4H ABO,4HVE D,4HIMEN,4HSION,4H STA,4HTEME,4HNT I
     1,4HS NO,4HT CO,4HMPLE,4HTE. ,4H    ,4H    ,4H    /
      DATA MSG14/4H THE,4H ABO,4HVE D,4HO ST,4HATEM,4HENT ,4HIS M,4HISSI
     1,4HNG A,4H (=),4H.   ,4H    ,4H    ,4H    ,4H    /
      DATA MSG15/4H THE,4H ABO,4HVE D,4HO ST,4HATEM,4HENT ,4HHAS ,4HAN I
     1,4HNVAL,4HID T,4HERMI,4HNAL ,4HSTAT,4HEMEN,4HT.  /
      DATA MSG16/4H W A,4H R N,4H I N,4H G .,4H  UN,4HSATI,4HSFIE,4HD DO
     1,4H LOO,4HPS. ,4H    ,4H    ,4H    ,4H    ,4H    /
      DATA MSG17/4H UNN,4HUMBE,4HRED ,4HOR I,4HNVAL,4HID F,4HORMA,4HT ST
     1,4HATEM,4HENT ,4HDELE,4HTED.,4H    ,4H    ,4H    /
      DATA MSG18/4H WAR,4HNING,4H.  A,4HBOVE,4H STA,4HTEME,4HNT I,4HS PO
     1,4HOR P,4HROGR,4HAMMI,4HNG P,4HRACT,4HICE.,4H    /
      DATA MSG19/4H ABO,4HVE G,4HO TO,4H STA,4HTEME,4HNT I,4HS IL,4HLEGA
     1,4H.,  ,4H    ,4H    ,4H    ,4H    ,4H    ,4H    /
      DATA MSG20/4H ILL,4HEGAL,4H ARI,4HTHME,4HTIC ,4HIF S,4HTATE,4HMENT
     1,4H.   ,4HIF (,4HARIT,4HH) 1,4H,2,3,4H    ,4H    /
      DATA MSG21/4H ABO,4HVE N,4HAMEL,4HIST ,4HSTAT,4HEMEN,4HT MI,4HSSIN
     1,4HG (/,4H).  ,4H    ,4H    ,4H    ,4H    ,4H    /
      DATA MSG22/4H ILL,4HEGAL,4H REA,4HD, P,4HRINT,4H, OR,4H PUN,4HCH S
     1,4HTATE,4HMENT,4H.   ,4H    ,4H    ,4H    ,4H    /
      DATA MSG23/4H ILL,4HEGAL,4H REA,4HD (*,4H*) L,4HIST,,4H OR ,4HWRIT
     1,4HE (*,4H*) L,4HIST,,4H STA,4HTEME,4HNT. ,4H    /
      DATA MSG24/4H DO ,4HLOOP,4H TAB,4HLE F,4HULL.,4H  RE,4HNUMB,4HER P
     1,4HASS ,4HDELE,4HTED.,4H    ,4H    ,4H    ,4H    /
      DATA MSG25/4H W A,4H R N,4H I N,4H G .,4H  CO,4HMMA ,4HFOLL,4HOWIN
     1,4HG X ,4HMISS,4HING ,4HIN A,4HBOVE,4H FOR,4HMAT./
      DATA MSG26/4H TID,4HY CA,4HNNOT,4H PRO,4HCESS,4H THI,4HS CL,4HASS
     1,4HOF P,4HROGR,4HAM. ,4H(COP,4HY EX,4HECUT,4HED.)/
      DATA MSG27/4H WAR,4HNING,4H. AB,4HOVE ,4HDO L,4HOOP ,4HTERM,4HINUS
     1,4H PRE,4HVIOU,4HSLY ,4HREFE,4HRENC,4HED. ,4H    /
C
      DATA KST1/1HA,1HC,1HC,1HE,1HP,1HT,1H ,1H ,1H ,1H ,6,4/
      DATA KST2/1HA,1HS,1HC,1HE,1HN,1HT,1H ,1H ,1H ,1H ,6,0/
      DATA KST3/1HA,1HS,1HS,1HI,1HG,1HN,1H ,1H ,1H ,1H ,6,4/
      DATA KST4/1HB,1HA,1HC,1HK,1HS,1HP,1HA,1HC,1HE,1H ,9,3/
      DATA KST5/1HB,1HL,1HO,1HC,1HK,1HD,1HA,1HT,1HA,1H ,9,1/
      DATA KST6/1HB,1HU,1HF,1HF,1HE,1HR,1HI,1HN,1H(,1H ,9,3/
      DATA KST7/1HB,1HU,1HF,1HF,1HE,1HR,1HO,1HU,1HT,1H(,10,3/
      DATA KST8/1HC,1HA,1HL,1HL,1H ,1H ,1H ,1H ,1H ,1H ,4,3/
      DATA KST9/1HC,1HO,1HM,1HM,1HO,1HN,1H ,1H ,1H ,1H ,6,1/
      DATA KST10/1HC,1HO,1HM,1HP,1HL,1HE,1HX,1H ,1H ,1H ,7,1/
      DATA KST11/1HC,1HO,1HN,1HT,1HI,1HN,1HU,1HE,1H ,1H ,8,3/
      DATA KST12/1HD,1HA,1HT,1HA,1H ,1H ,1H ,1H ,1H ,1H ,4,1/
      DATA KST13/1HD,1HE,1HC,1HO,1HD,1HE,1H(,1H ,1H ,1H ,7,4/
      DATA KST14/1HD,1HI,1HM,1HE,1HN,1HS,1HI,1HO,1HN,1H ,9,1/
      DATA KST15/1HD,1HO,1HU,1HB,1HL,1HE,1HP,1HR,1HE,1HC,10,1/
      DATA KST16/1HD,1HO,1HU,1HB,1HL,1HE,1H ,1H ,1H ,1H ,6,1/
      DATA KST17/1HD,1HO,1H ,1H ,1H ,1H ,1H ,1H ,1H ,1H ,2,4/
      DATA KST18/1HE,1HN,1HC,1HO,1HD,1HE,1H(,1H ,1H ,1H ,7,4/
      DATA KST19/1HE,1HN,1HD,1HF,1HI,1HL,1HE,1H ,1H ,1H ,7,3/
      DATA KST20/1HE,1HN,1HD,1H ,1H ,1H ,1H ,1H ,1H ,1H ,3,5/
      DATA KST21/1HE,1HN,1HT,1HR,1HY,1H ,1H ,1H ,1H ,1H ,5,1/
      DATA KST22/1HE,1HQ,1HU,1HI,1HV,1HA,1HL,1HE,1HN,1HC,10,1/
      DATA KST23/1HE,1HX,1HT,1HE,1HR,1HN,1HA,1HL,1H ,1H ,8,1/
      DATA KST24/1HF,1HI,1HN,1HI,1HS,1H ,1H ,1H ,1H ,1H ,5,1/
      DATA KST25/1HF,1HO,1HR,1HM,1HA,1HT,1H(,1H ,1H ,1H ,7,2/
      DATA KST26/1HF,1HO,1HR,1HT,1HR,1HA,1HN,1H ,1H ,1H ,7,1/
      DATA KST27/1HF,1HR,1HE,1HQ,1HU,1HE,1HN,1HC,1HY,1H ,9,1/
      DATA KST28/1HF,1HU,1HN,1HC,1HT,1HI,1HO,1HN,1H ,1H ,8,1/
      DATA KST29/1HG,1HO,1HT,1HO,1H(,1H ,1H ,1H ,1H ,1H ,5,4/
      DATA KST30/1HG,1HO,1HT,1HO,1H ,1H ,1H ,1H ,1H ,1H ,4,4/
      DATA KST31/1HI,1HF,1HA,1HC,1HC,1HU,1HM,1HU,1HL,1HA,10,4/
      DATA KST32/1HI,1HF,1HQ,1HU,1HO,1HT,1HI,1HE,1HN,1HT,10,4/
      DATA KST33/1HI,1HF,1H(,1HD,1HI,1HV,1HI,1HD,1HE,1HC,10,4/
      DATA KST34/1HI,1HF,1H(,1HE,1HN,1HD,1HF,1HI,1HL,1HE,10,4/
      DATA KST35/1HI,1HF,1H(,1HS,1HE,1HN,1HS,1HE,1HL,1HI,10,4/
      DATA KST36/1HI,1HF,1H(,1HS,1HE,1HN,1HS,1HE,1HS,1HW,10,4/
      DATA KST37/1HI,1HF,1H(,1H ,1H ,1H ,1H ,1H ,1H ,1H ,3,4/
      DATA KST38/1HI,1HN,1HT,1HE,1HG,1HE,1HR,1H ,1H ,1H ,7,1/
      DATA KST39/1HL,1HO,1HG,1HI,1HC,1HA,1HL,1H ,1H ,1H ,7,1/
      DATA KST40/1HM,1HA,1HC,1HH,1HI,1HN,1HE,1H ,1H ,1H ,7,0/
      DATA KST41/1HN,1HA,1HM,1HE,1HL,1HI,1HS,1HT,1H ,1H ,8,1/
      DATA KST42/1HP,1HA,1HU,1HS,1HE,1H ,1H ,1H ,1H ,1H ,5,3/
      DATA KST43/1HP,1HR,1HI,1HN,1HT,1H ,1H ,1H ,1H ,1H ,5,4/
      DATA KST44/1HP,1HR,1HO,1HG,1HR,1HA,1HM,1H ,1H ,1H ,7,1/
      DATA KST45/1HP,1HU,1HN,1HC,1HH,1H ,1H ,1H ,1H ,1H ,5,4/
      DATA KST46/1HR,1HE,1HA,1HD,1HI,1HN,1HP,1HU,1HT,1HT,10,4/
      DATA KST47/1HR,1HE,1HA,1HD,1HT,1HA,1HP,1HE,1H ,1H ,8,3/
      DATA KST48/1HR,1HE,1HA,1HD,1H(,1H ,1H ,1H ,1H ,1H ,5,4/
      DATA KST49/1HR,1HE,1HA,1HD,1H ,1H ,1H ,1H ,1H ,1H ,4,4/
      DATA KST50/1HR,1HE,1HA,1HL,1H ,1H ,1H ,1H ,1H ,1H ,4,1/
      DATA KST51/1HR,1HE,1HT,1HU,1HR,1HN,1H ,1H ,1H ,1H ,6,3/
      DATA KST52/1HR,1HE,1HW,1HI,1HN,1HD,1H ,1H ,1H ,1H ,6,3/
      DATA KST53/1HS,1HE,1HG,1HM,1HE,1HN,1HT,1H ,1H ,1H ,7,1/
      DATA KST54/1HS,1HE,1HN,1HS,1HE,1HL,1HI,1HG,1HH,1HT,10,3/
      DATA KST55/1HS,1HT,1HO,1HP,1H ,1H ,1H ,1H ,1H ,1H ,4,3/
      DATA KST56/1HS,1HU,1HB,1HR,1HO,1HU,1HT,1HI,1HN,1HE,10,3/
      DATA KST57/1HT,1HY,1HP,1HE,1H ,1H ,1H ,1H ,1H ,1H ,4,1/
      DATA KST58/1HW,1HR,1HI,1HT,1HE,1HO,1HU,1HT,1HP,1HU,10,4/
      DATA KST59/1HW,1HR,1HI,1HT,1HE,1HT,1HA,1HP,1HE,1H ,9,3/
      DATA KST60/1HW,1HR,1HI,1HT,1HE,1H(,1H ,1H ,1H ,1H ,6,4/
C
      END
