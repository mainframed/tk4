         TITLE '   S T A E $ X I T  -   E S T A E   E X I T  '
***********************************************************************
*                                                                     *
*        'STAE$XIT' ESTAE EXIT                                        *
*                                                                     *
***********************************************************************
*
*        WRITTEN BY. BILL GODFREY,  PLANNING RESEARCH CORPORATION.
*        INSTALLATION. PRC, MCLEAN VA.
*        DATE WRITTEN. NOVEMBER 14 1979.
*        DATE UPDATED. APRIL 16 1981.
*        ATTRIBUTES. RE-ENTRANT.
*        DESCRIPTION.
*         THIS IS AN ESTAE EXIT WHICH DISPLAYS THE ABEND COMPLETION
*         CODE, PSW, AND REGISTER CONTENTS, THEN CONTINUES TERMINATION.
*
*         THE STAE$ MACRO, REQUIRING ABSOLUTELY NO OPERANDS,
*         BUILDS THE PARAMETER LIST TO BE PASSED TO THIS EXIT,
*         LOADS THIS EXIT, AND ISSUES AN ESTAE SVC, WHICH WILL
*         CAUSE THIS EXIT TO GAIN CONTROL IN THE EVENT OF AN ABEND.
*
*         AS AN OPTION, A LIST OF CSECT NAMES AND BOUNDARIES MAY BE
*         PASSED TO THE EXIT. IF THE PSW IS WITHIN ANY OF THE BOUND-
*         ARIES, THE OFFSET OF THE PSW ADDRESS FROM THE BEGINNING OF
*         THE CSECT IS DISPLAYED, AND 12 BYTES OF STORAGE AT THE PSW
*         ADDRESS MINUS 6 IS DUMPED TO SHOW THE FAILING INSTRUCTION.
*
*         THE PARAMETERS PASSED ARE
*         (1) THE ADDRESS OF AN OPTION FIELD AND A LIST OF
*             CSECT NAMES AND BOUNDARIES.
*         (2) THE ADDRESS OF A 256 BYTE WORKAREA
*
*         THE FIRST WORD OF THE OPTION FIELD CONTAINS FLAG BITS
*         FOR DIRECTING THE MESSAGES VIA TPUT OR WTO.
*
*         THE SECOND WORD OF THE OPTION FIELD MAY OPTIONALLY
*         CONTAIN ROUTING AND DESCRIPTOR CODES FOR MESSAGES.
*
*         THE FIFTH WORD OF THE OPTION FIELD CONTAINS ZERO OR
*         THE ADDRESS OF A LIST OF CSECT DESCRIPTORS.
*
*         15JAN80 - CODE ADDED TO TEST CVT+116 FOR NON-MVS
*         OPERATING SYSTEM.  EXIT WILL WORK CORRECTLY AS A
*         STAE EXIT UNDER OS/360 OR AN ESTAE EXIT UNDER MVS
*         BUT NOT AS A STAE EXIT UNDER MVS.
*
*         18JAN80 - FLAG ADDED TO ESTFLG1 TO INDICATE WHETHER
*         STAE WAS USED INSTEAD OF ESTAE. THUS THE EXIT WILL
*         WORK CORRECTLY AS A STAE EXIT UNDER MVS IF THE USER
*         HAS SET THE FLAG ON.
*
*         04FEB80 - DESC/ROUT SPACE ADDED, USER ABEND TEST ADDED.
*         1ST PARAMETER NO LONGER OPTIONAL.
*
*         18SEP80 - REG9 ADJUSTED TO DOUBLEWORD BOUNDARY TO
*         INSURE ALIGNMENT OF ESTDWORD FOR CVD INSTRUCTION.
*
*         09DEC80 - CHANGED COMMENTS ONLY.
*         07APR81 - CHANGED COMMENTS ONLY.
*         15APR81 - CHANGED NAME FROM STAE$ TO STAE$XIT IN ORDER
*                   TO DISTINGUISH IT FROM THE MACRO.
*                   CHANGED CSECT TABLE FROM A TABLE TO A LINKED LIST.
*                   ADDED FIELDS ESTTPTR AND ESTNEXT. CHANGED STAE$
*                   MACRO ACCORDINGLY. NEW VERSION IS NOT COMPATIBLE
*                   WITH OLD VERSION. PROGRAMS USING STAE$ MACRO
*                   MUST BE RE-ASSEMBLED. ESTTSIZ IS NO LONGER USED.
*         16APR81 - USING ESTDESC AND ESTROUT IF NONZERO.
*         03NOV81 - CHANGED COMMENTS ONLY.
*
*         NOTE THAT ESTTPTR HAS THE SAME OFFSET (16) FROM ESTOPT
*         AS ESTNEXT HAS FROM ESTTENT. THIS CAN BE USEFUL WHEN
*         DELETING A CSECT DESCRIPTOR FROM THE LINKED LIST.
*         ASSUME REGISTER 1 POINTS TO THE DESCRIPTOR TO BE DELETED.
*
*                   LA    R14,ESTOPT
*           SEARCHD L     R15,16(,R14)        POINT TO FIRST OR NEXT
*                   LTR   R15,R15             END OF LIST
*                   BZ    ERR                 YES, NOT FOUND
*                   CR    R15,R1              IS THIS THE TARGET
*                   BE    DELETE              YES, BRANCH
*                   LR    R14,R15             NO, UPDATE R14
*                   B     SEARCH              KEEP SEARCHING
*           DELETE  L     R0,16(,R15)         GET POINTER TO NEXT ONE
*                   ST    R0,16(,R14)         STORE IT IN PREVIOUS ONE
*                                             OR IN ESTOPT+16
*         THE ABOVE ROUTINE DELETES AN ENTRY WITHOUT HAVING TO MAKE
*         A SPECIAL CASE FOR THE FIRST ENTRY, BECAUSE THE OFFSET 16
*         IS CORRECT IN EITHER CASE.
*         TO ADD AN ENTRY, POINTED TO BY REGISTER 1 ...
*
*                   LA    R14,ESTOPT
*           SEARCHA L     R15,16(,R14)        POINT TO FIRST OR NEXT
*                   LTR   R15,R15             END OF LIST
*                   BZ    ADD                 YES, BRANCH
*                   LR    R14,R15             NO, UPDATE R14
*                   B     SEARCHA             KEEP SEARCHING
*           ADD     ST    R1,16(,R14)         REPLACE ZERO WITH NEW PTR
*                   ST    R15,16(,R1)         PUT ZERO IN OUR POINTER
*
*$DOC$*****************************************************************
         SPACE
         MACRO
&N       HEX   &T,&F,&L
         AIF   ('&T' EQ '(15)').SKIPT
         LA    15,&T
.SKIPT   AIF   ('&F' EQ '(1)').SKIPF
         LA    1,&F
.SKIPF   AIF   ('&L' EQ '4').HEX4
         LA    0,&L
         BAL   14,HEX
         MEXIT
.HEX4    BAL   14,HEX4
         MEND
         SPACE
STAE$XIT CSECT
         ENTRY STAE$
         USING *,R15
STAE$    B     @PROLOG-*(,R15)
         DC    AL1(11),CL11'STAE$XIT'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  C     R0,=F'12'  SDWA (SYSTEM DIAGNOSTIC WORK AREA)
         BNE   STAEWA              YES - BRANCH
         SLR   R15,R15             NONE - TERMINATE
         BR    R14
STAEWA   EQU   *
         STM   14,12,12(R13)       SAVE REGISTERS
         DROP  R15                 STAEXIT
         LA    R10,0(,R15)         BASE REGISTER
         USING STAE$,R10
         LR    R3,R1
         USING SDWA,R3
         SLR   R8,R8               START WITH NO PARAM
         SPACE
*              SINCE THIS CODE TRUSTS THE USER TO PASS VALID
*              ADDRESSES IN THE ESTAE PARAM LIST, IT COULD ITSELF
*              ABEND, SO FIRST IT CHECKS TO SEE IF THE ADDRESS IN
*              THE PSW IS WITHIN ITSELF, AND IF SO, QUITS.
*              THIS CHECK MAY IN FACT BE UNNECESSARY - RTM MAY
*              PREVENT THE EXIT FROM BEING CALLED FOR ITS OWN ABEND.
         SPACE
         L     R1,SDWACTL1+4       ADDRESS FROM PSW
         LA    R1,0(,R1)           CLEAR HI ORDER BYTE
         CR    R1,R10              COMPARE TO BASE REG
         BL    IMOK                OK IF LESS
         LA    R0,@END             GET ADDRESS OF END OF MODULE
         CR    R1,R0               COMPARE TO END OF MODULE
         BL    RETURN              QUIT IF WITHIN THIS MODULE
IMOK     EQU   *
         SPACE
         L     R7,SDWAPARM         POINT TO ESTAE PARAM
         LM    R8,R9,0(R7)         POINT TO OPTIONS AND WORKAREA
         LA    R9,7(,R9)           INSURE WORKAREA ON DWORD
         N     R9,=A(X'FFFFFFF8')  ALIGN ON DOUBLEWORD
         USING ESTOPT,R8
         USING ESTWA,R9
         SPACE
         MVC   ESTMSG(MSG01L),MSG01
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         MVC   ESTMSG(MSG02L),MSG02
         HEX   ESTMSG+MSG02A,SDWACMPC,2          COMPLETION CODE
         MVI   ESTMSG+MSG02A+3,C')'
         L     R1,SDWACMPC-1
         LR    R0,R1
         N     R0,=A(X'00FFF000')
         BNZ   CMPCX
         MVI   ESTMSG+MSG02A-1,C'U'
         N     R1,=A(X'00000FFF')
         LA    R15,ESTDWORD
         CVD   R1,0(,R15)
         OI    7(R15),X'0F'
         UNPK  ESTMSG+MSG02A(4),5(3,R15)
         MVI   ESTMSG+MSG02A+4,C')'
CMPCX    EQU   *
         HEX   ESTMSG+MSG02B,SDWACTL1+5,3        ADDRESS IN PSW
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         L     R7,ESTTPTR          POINT TO FIRST CSECT DESCRIPTOR
         USING ESTTENT,R7
         LTR   R7,R7               ANY ENTRIES?
         BNP   STAENOE             NO, BRANCH
         LA    R6,1                SET R6 TO INDICATE PSW
         LA    R0,99               MAXIMUM NUMBER OF ENTRIES
         LR    R15,R7              SAVE R7
         MVC   ESTMSG(MSG03L),MSG03
         L     R1,SDWACTL1+4       GET ADDRESS FROM PSW
         LA    R1,0(,R1)           CLEAR HI ORDER BYTE
SRCHPSW  LTR   R7,R7               IS THIS END OF TABLE
         BZ    SRCHEND1
         C     R1,ESTTOP           IS IT IN THIS CSECT
         BL    SRCHNXT1            NO, BRANCH
         C     R1,ESTEND           IS IT IN THIS CSECT
         BL    SRCHOK              YES, BRANCH
SRCHNXT1 L     R7,ESTNEXT          POINT TO NEXT ENTRY
         BCT   R0,SRCHPSW          LOOP TILL ALL ENTRIES TRIED
*                                  PSW NOT IN CSECT TABLE, TRY R14
SRCHEND1 SR    R6,R6               ZERO R6 TO INDICATE REG14
         LA    R0,99               MAXIMUM NUMBER OF ENTRIES
         LR    R7,R15              RESTORE R7
         MVC   ESTMSG+MSG03A(5),=C'REG14'
         L     R1,SDWAGR14         GET CONTENTS OF R14
         LA    R1,0(,R1)           CLEAR HI ORDER BYTE
SRCHR14  LTR   R7,R7               IS THIS END OF TABLE
         BZ    SRCHEND2
         C     R1,ESTTOP           IS IT IN THIS CSECT
         BL    SRCHNXT2            NO, BRANCH
         C     R1,ESTEND           IS IT IN THIS CSECT
         BL    SRCHOK              YES, BRANCH
SRCHNXT2 L     R7,ESTNEXT          POINT TO NEXT ENTRY
         BCT   R0,SRCHR14          LOOP TILL ALL ENTRIES TRIED
SRCHEND2 B     STAENOE             NEITHER PSW NOR R14 IN TABLE
         SPACE
SRCHOK   S     R1,ESTTOP
         ST    R1,ESTFULL
         HEX   ESTMSG+MSG03B,ESTFULL+1,3         OFFSET
         MVC   ESTMSG+MSG03C(8),ESTNAME          CSECT NAME
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         LTR   R6,R6                             PSW OR REG14
         BZ    STAENOE                           BRANCH IF REG14
         SPACE
*               DUMP THE AREA POINTED TO BY THE PSW,
*               BUT ONLY IF THE AREA IS IN THE CSECT TABLE.
*               TO ATTEMPT TO DUMP IT OTHERWISE MIGHT
*               RESULT IN A S0C4.
         SPACE
         MVC   ESTMSG(MSG04L),MSG04
         L     R1,SDWACTL1+4       ADDRESS FROM PSW
         SH    R1,=H'6'
         ST    R1,ESTFULL
         HEX   ESTMSG+MSG04A,ESTFULL+1,3         DUMP ADDRESS
         L     R1,ESTFULL
         HEX   ESTMSG+MSG04B,(1),2               DUMP STORAGE
         HEX   (15),(1),2          NEXT 2 BYTES
         HEX   (15),(1),2          NEXT 2 BYTES
         HEX   (15),(1),2          NEXT 2 BYTES
         HEX   (15),(1),2          NEXT 2 BYTES
         HEX   (15),(1),2          NEXT 2 BYTES
         LA    R1,ESTMSG
         BAL   R11,WTO
         DROP  R7                  ESTTENT
STAENOE  EQU   *
*
         SPACE
         MVC   ESTMSG(MSG05L),MSG05
         HEX   ESTMSG+MSG05B,SDWAGR00,4          REGISTER 0
         HEX   (15),(1),4                        REGISTER 1
         HEX   (15),(1),4                        REGISTER 2
         HEX   (15),(1),4                        REGISTER 3
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         MVC   ESTMSG+MSG05A(4),=C' 4-7'
         HEX   ESTMSG+MSG05B,SDWAGR04,4          REGISTER 4
         HEX   (15),(1),4                        REGISTER 5
         HEX   (15),(1),4                        REGISTER 6
         HEX   (15),(1),4                        REGISTER 7
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         MVC   ESTMSG+MSG05A(5),=C' 8-11'
         HEX   ESTMSG+MSG05B,SDWAGR08,4          REGISTER 8
         HEX   (15),(1),4                        REGISTER 9
         HEX   (15),(1),4                        REGISTER 10
         HEX   (15),(1),4                        REGISTER 11
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         MVC   ESTMSG+MSG05A(5),=C'12-15'
         HEX   ESTMSG+MSG05B,SDWAGR12,4          REGISTER 12
         HEX   (15),(1),4                        REGISTER 13
         HEX   (15),(1),4                        REGISTER 14
         HEX   (15),(1),4                        REGISTER 15
         LA    R1,ESTMSG
         BAL   R11,WTO
         SPACE
         SPACE
RETURN   LR    R1,R3               SETRP ASSUMES R1 BASE FOR SDWA
         DROP  R3                  SDWA
         L     R15,16              CVTPTR
         TM    116(R15),X'13'      IS THIS MVS
         BNO   RETOS               NO, BRANCH IF OS
         LTR   R8,R8               IS PARAM PRESENT ?
         BZ    RETMVS              NO, BRANCH
         TM    ESTFLG1,ESTBSTAE    WAS STAE USED
         BO    RETOS               YES, BRANCH
RETMVS   EQU   *
         SETRP RC=0,REGS=(14,12)
         SPACE
RETOS    LM    14,12,12(R13)
         SLR   R15,R15             RC=0 (TERMINATE)
         BR    R14                 RETURN
         SPACE
HEX4     LA    R0,4
HEX      MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),ESTHEXT-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         LA    R15,1(,R15)         SPACE AFTER THAT
         BR    R14                 RETURN TO CALLER
         SPACE
WTO      LA    R5,0(,R1)           SAVE MSG ADDRESS
         TM    ESTFLG1,ESTBMSG     TPUT OR WTO
         BM    WTQ                 BRANCH IF MIXED
         LR    R15,R1              POINT TO MSG
         AH    R15,0(,R1)          POINT TO CODES
         CLC   ESTDESC(4),=F'0'    DID USER SPECIFY DESC, ROUT
         BE    *+10                NO, SKIP MVC
         MVC   0(4,R15),ESTROUT-2  YES, USE THEM INSTEAD
         TM    3(R15),X'20'        IS ROUTCDE 11 SPECIFIED
         BO    *+8                 YES
         LCR   R5,R5               NO, SET R5 NEGATIVE TO FORCE TPUT
         WTO   MF=(E,(1))
         LPR   R1,R5               RESTORE MSG ADDRESS
         L     R15,16              CVTPTR
         TM    116(R15),X'13'      IS THIS MVS
         BNO   WTT                 NO, DO BOTH WTO AND TPUT
         LTR   R5,R5               MVS, WAS ROUTCDE 11 USED
         BM    WTT                 NO, DO BOTH WTO AND TPUT
         BR    R11                 YES, WTO DID TPUT
WTQ      TM    ESTFLG1,ESTBWTO     WTO ?
         BZ    WTT                 NO, BRANCH TO TPUT
         LR    R15,R1              POINT TO MSG
         AH    R15,0(,R1)          POINT TO CODES
         NI    3(R15),255-X'20'    SET OFF ROUTCDE 11
         CLC   ESTDESC(4),=F'0'    DID USER SPECIFY DESC, ROUT
         BE    *+10                NO, SKIP MVC
         MVC   0(4,R15),ESTROUT-2  YES, USE THEM INSTEAD
         WTO   MF=(E,(1))
         BR    R11
WTT      LH    R0,0(,R1)
         LA    R15,4
         SR    R0,R15
         AR    R1,R15
         SVC   93                  TPUT
         BR    R11
         SPACE
         LTORG
         SPACE
MSG01    WTO   '--- ABEND DIAGNOSTICS ---',                            +
               ROUTCDE=(2,11),MF=L
MSG01L   EQU   *-MSG01
         SPACE
MSG02    WTO   '--- INTERRUPT (S999)  AT LOCATION XXXXXX ',            +
               ROUTCDE=(2,11),MF=L
MSG02L   EQU   *-MSG02
MSG02A   EQU   16+4                OFFSET INTO MESSAGE
MSG02B   EQU   34+4                OFFSET INTO MESSAGE
         SPACE
MSG03    WTO   '--- WHICH IS AT OFFSET XXXXXX INTO NNNNNNNN',          +
               ROUTCDE=(2,11),MF=L
MSG03L   EQU   *-MSG03
MSG03A   EQU   4+4
MSG03B   EQU   23+4
MSG03C   EQU   35+4
         SPACE
MSG04    WTO   '--- DUMP OF XXXXXX  XXXX XXXX XXXX XXXX XXXX XXXX ',   +
               ROUTCDE=(2,11),MF=L
MSG04L   EQU   *-MSG04
MSG04A   EQU   12+4
MSG04B   EQU   20+4
         SPACE
MSG05    WTO   '--- REGS  0-3   XXXXXXXX XXXXXXXX XXXXXXXX XXXXXXXX ', +
               ROUTCDE=(2,11),MF=L
MSG05L   EQU   *-MSG05
MSG05A   EQU   9+4
MSG05B   EQU   16+4
MSG05C   EQU   25+4
MSG05D   EQU   34+4
MSG05E   EQU   43+4
         SPACE
ESTHEXT  DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
@END     DC    0D'0'               END OF CSECT
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
ESTPARM  DSECT
ESTOPPTR DS    A                   ADDRESS OF CSECT TABLE
ESTWAPTR DS    A                   ADDRESS OF WORKAREA
         SPACE
ESTOPT   DSECT
ESTFLG1  DS    X                   SWITCHES
ESTBMSG  EQU   X'C0'               BOTH ON OR OFF = WTO AND TPUT
ESTBWTO  EQU   X'80'               ON = WTO
ESTBTPUT EQU   X'40'               ON = TPUT
ESTBSTAE EQU   X'01'               STAE USED, NOT ESTAE
         DS    XL3                 RESERVED
ESTDESC  DS    H                   WTO DESCRIPTOR CODES
ESTROUT  DS    H                   WTO ROUTING CODES
         DS    2A                  RESERVED
ESTTPTR  DS    A                   ADDRESS OF FIRST ENTRY OR ZERO
ESTTENT  DS    0C                  START OF CSECT NAME ENTRY
ESTNAME  DS    CL8                 NAME OF CSECT
ESTTOP   DS    A                   ADDRESS OF CSECT START
ESTEND   DS    A                   ADDRESS OF CSECT END
ESTNEXT  DS    A                   ADDRESS OF NEXT ENTRY OR ZERO
ESTTENTL EQU   *-ESTTENT           LENGTH OF ONE ENTRY
         SPACE
ESTWA    DSECT
ESTDWORD DS    D
ESTFULL  EQU   *-8,4
ESTMSG   DS    CL80
         SPACE
SDWA     DSECT
SDWAPARM DS    A
SDWACMPF DS    B
SDWAREQ  EQU   X'80'
SDWACMPC DS    BL3
SDWACTL1 DS    CL8
SDWACTL2 DS    CL8
SDWAGR00 DS    F
SDWAGR01 DS    F
SDWAGR02 DS    F
SDWAGR03 DS    F
SDWAGR04 DS    F
SDWAGR05 DS    F
SDWAGR06 DS    F
SDWAGR07 DS    F
SDWAGR08 DS    F
SDWAGR09 DS    F
SDWAGR10 DS    F
SDWAGR11 DS    F
SDWAGR12 DS    F
SDWAGR13 DS    F
SDWAGR14 DS    F
SDWAGR15 DS    F
         ORG   SDWA+X'88'
SDWASRSV DS    0CL64
         ORG   SDWA+X'F0'
SDWARTYA DS    A
         DS    XL8
SDWARCDE DS    B
SDWAACF2 DS    B
SDWAUPRG EQU   X'08'
SDWAFREE EQU   X'04'
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
