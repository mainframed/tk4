         TITLE '    R A C H E C K  -  S V C   1 3 0 '
*$DOC@******************************************************
*                                                          *
*        SVC 130 - RACHECK     SVC 133 - RACDEF            *
*                                                          *
************************************************************
         SPACE
*        WRITTEN BY. BILL GODFREY, PLANNING RESEARCH CORPORATION.
*        INSTALLATION. AIR FORCE DATA SERVICES CENTER / PENTAGON.
*        DATE WRITTEN. APRIL 20 1981.
*        DATE UPDATED. DEC 13  1981.
*
*        CHANGE LOG: 13 DEC 81 - TOOK OUT #SFI & ASFI AS VALID 1ST
*                    FOUR CHARS OF JOBNAME OR TSOID.  J.MARSHALL
*
*        ATTRIBUTES. RE-ENTRANT. TYPE 3 OR 4 SVC.
*        DESCRIPTION.
*         THIS SVC REPLACES THE DUMMY SVC 130 THAT COMES
*         WITH MVS WHEN RACF IS NOT INSTALLED.
*
*         THIS SVC PROVIDES A VERY SIMPLE BUT EFFECTIVE PROTECTION
*         CAPABILITY FOR SYSTEM DATA SETS, WHEN COMBINED WITH A
*         PROGRAM THAT CAN SET THE RACF BIT ON IN A FORMAT 1 DSCB.
*
*         IT IS ISSUED FOR DASD DATA SETS ONLY IF THEY ARE MARKED
*         IN THE FORMAT 1 DSCB AS BEING RACF PROTECTED.
*
*         ACCESS RULES
*         1) IF A DATA SET IS NOT RACF PROTECTED,
*               ANYONE CAN ACCESS IT. THIS SVC IS NOT EVEN CALLED.
*         2) IF A DATA SET IS RACF PROTECTED,
*               JOBS/USERS HAVING THE SAME FIRST 4 CHARACTERS
*               AS THE DSNAME MAY ACCESS IT.  (RULE DROPPED 30JUN81
*               BECAUSE FDR DSF ALLOWS RENAME WITHOUT RACHECK).
*         3) JOBNAMES BEGINNING  #SMI, ASMI, AND @CMI
*               CAN ACCESS ANY DATA SET.
*         4) STARTED TASKS OF ANY NAME
*               CAN ACCESS ANY DATA SET.
*         5) IF A DATA SET IS IN THE 'READONLY' TABLE IN THIS SVC,
*               ANYONE CAN ACCESS IT FOR 'READ'. IF NOT FOR 'READ'
*               THEN RULES 1-4 APPLY.
*
*         THERE IS NO DISTINCTION BETWEEN READ AND UPDATE
*         ACCESS, SO YOU CANNOT PROTECT DATA SETS WHICH USERS ARE
*         ALLOWED TO READ, UNLESS YOU ADD THE NAME OF THE DATA SET
*         TO THE TABLE OF READ-ONLY DATA SETS IN THIS CODE.
*
*         THE SVC KNOWS IF THE REQUEST IS FOR READ OR UPDATE,
*         AND ONLY USES THE TABLE IF THE REQUEST IS FOR READ.
*
*         IN ORDER TO ALLOW ASFI USERIDS TO TEST THE SVC, THE SPECIAL
*         SPECIAL STATUS OF ASFI USERIDS IS REMOVED IF THE USERID
*         HAS A 'NOJCL' ATTRIBUTE.
*
***********************************************************************
         EJECT
***********************************************************************
*
*         WHEN INSTALLING THIS SVC, WE RENAMED IGC0013$ ($=X'C0')
*         TO ICHRIN00, SO WE COULD RENAME IT BACK IF WE WANTED
*         TO TAKE OUT THIS SVC.
*
*         IF THIS SVC IS NOT INSTALLED, OR REMOVED, THEN ANY ATTEMPT
*         TO OPEN A RACF PROTECTED DATA SET WILL RESULT IN A SYSTEM
*         E82 ABEND. SO IF YOU REMOVE THIS SVC, REMOVE RACF PROTECTION
*         FROM THE DSCB'S (OR MAKE SVC130 AND 133 BOTH IEFBR14'S).
*
*         THE RACHECK SVC IS ISSUED FROM THE FOLLOWING PLACES.
*         THE LIST IS BY NO MEANS COMPLETE.
*
*         IN OPEN, IT IS ISSUED FROM IFG0194C (DASD), IFG0194F (TAPE),
*         IFG0193D, AND IFG0193E (LABEL CREATE/DESTROY).
*         IN SCRATCH, IT IS ISSUED FROM IGG0290A.
*         IN RENAME, IT IS ISSUED FROM IGG0300I.
*
*         SVC 133 (RACDEF) SHOULD BE REPLACED WITH AN SVC THAT ALWAYS
*         GIVES A RETURN CODE ZERO, BECAUSE 'RENAME' ISSUES A 'RACDEF'
*         FOR THE NEW NAME. IF NOT REPLACED, THE RENAME WILL FAIL
*         WITH A SYSTEM E85 ABEND.
*
*         REGISTER 1 POINTS TO A PARAMETER LIST MAPPED BY IBM'S
*         MAPPING MACRO 'ICHACHKL', WHICH HAS BEEN COPIED INTO
*         THIS CODE.
*
*         RETURN CODES PASSED BACK TO SVC ISSUER IN REG 15
*         0 - ACCESS IS AUTHORIZED.
*         8 - ACCESS IS NOT AUTHORIZED.
*
*$DOC$*****************************************************************
         EJECT
***********************************************************************
*
*         NOTES ABOUT MARKING DATA SETS AS RACF PROTECTED.
*
*         TO MARK A DATA SET AS RACF PROTECTED, THERE IS A
*         'PROTECT=YES' KEYWORD FOR JCL AND A 'DALPROT' TEXT KEY
*         FOR DYNAMIC ALLOCATION.  THESE CANNOT BE USED UNLESS
*         RACF IS INSTALLED AND ACTIVE AT THE TIME OF ALLOCATION.
*
*         WHEN PROTECT=YES IS SPECIFIED ON A SYSTEM WITHOUT RACF,
*         THE ALLOCATION FAILS WITH THE FOLLOWING MESSAGE.
*
*          IEF691I DATA SET/VOLUME COULD NOT BE RACF PROTECTED -
*          USER NOT DEFINED TO RACF
*
*         WHEN THE DALPROT TEXT KEY IS PASSED TO SVC 99 ON A SYSTEM
*         WITHOUT RACF, ALLOCATION FAILS WITH A REASON CODE OF 04C0,
*         WHICH MEANS: USER MAY NOT PROTECT DATA SETS OR VOLUMES
*         WHEN EXECUTING UNDER DEFAULT USERID.
*
*         BOTH OF THE ABOVE REQUESTS FAIL IN MODULE IEFAB459.
*         THIS MODULE CHECKS TO SEE IF THE USER IS DEFINED TO RACF,
*         WHICH MEANS BIT 'ACEERACF' MUST BE ON IN FIELD 'ACEEFLG1'
*         OF THE 'ACEE' (RACF ACCESSOR ENVIRONMENT ELEMENT), WHICH
*         IS POINTED TO BY THE 'ASXBSENV' FIELD IN THE ASXB, WHICH
*         IS POINTED TO BY THE 'ASCBASXB' FIELD IN THE ASCB.
*
*         IF IEFAB459 WERE MODIFIED TO LET THE REQUEST PASS, THE
*         REQUEST WOULD STILL FAIL, BUT FOR A DIFFERENT REASON.
*          IEF740I DATA SET/VOLUME COULD NOT BE RACF PROTECTED -
*          RACF NOT ACTIVE.
*         OR SVC 99 REASON CODE 04B4, RACF NOT ACTIVE, NOT IN SYSTEM
*
*         THE MODULE CAUSING THIS FAILURE IS IEFAB434, WHICH CHECKS
*         CVTRAC FOR THE ADDRESS OF THE RACF CVT, AND THEN CHECKS
*         THE 'RCVTROFF' BIT IN RCVTFLGS (RACF DE-ACTIVATED BY RVARY)
*         AND THE 'RCVTRNA' BIT IN RCVTSTAT (RACF NOT ACTIVE).  IF
*         CVTRAC OR EITHER OF THE BITS ARE ZERO, THE REQUEST FAILS.
*
*         IEFDB413 CONVERTS HOUSEKEEPING REASON CODES 95 AND 97
*         TO SVC99 REASON CODES 04B4 AND 04C0.
*
*         BIT JFCBADSP (AUTOMATIC DATA SET PROTECTION) TELLS DADSM
*         TO MARK THE FORMAT 1 DSCB AS RACF PROTECTED.  THIS BIT
*         IS SET ON IN IEFAB459 AND IEFAB434.
*
*         IEFAB459 TESTS BIT 'SIOTPROT', THEN SETS ON JFCBADSP
*         AND SIOTRACD.
*
*         MAPPING MACROS FOR RACF CONTROL BLOCKS, IN AMODGEN.
*         ICHPRCVT, IHAACEE, ICHACHKL.
*
***********************************************************************
         EJECT
IGC00130 CSECT ,                          SVC 130
         ENTRY IGC0013A,IGC0013B,IGC0013C SVC 131 132 133
         USING *,R6
         USING TCB,R4
         USING RBBASIC,R5
         USING ASCB,R7
@ORIGIN  B     @PROLOG-@ORIGIN(,R6)
         DC    AL1(11),CL11'RACHECK'
         DC    CL16' &SYSDATE &SYSTIME '
@PROLOG  LR    R10,R1                  SAVE PARM PTR
         USING ACHKLIST,R10
         SR    R15,R15                 DEFAULT RETURN CODE ZERO
         LR    R9,R14                  SAVE RETURN ADDRESS
         SPACE
         XC    USER,USER
         MVI   USRL,0
         MVI   ATR1,0
         SPACE
***********************************************************************
*                                                                     *
*         GET JOBNAME OR USERID (LET STARTED TASKS PASS)              *
*                                                                     *
***********************************************************************
         SPACE
         L     R1,ASCBJBNI             POINT TO JOBNAME
         LTR   R1,R1                   IS THIS A JOB
         BNZ   JOB                     YES, BRANCH
         L     R0,ASCBTSB              NO, POINT TO TSB
         LTR   R0,R0                   IS THIS A TSO USER
         BZ    RET0                    NO, STARTED TASK, RETURN RC 0
         L     R1,TCBJSCB              GET TSO USER'S JSCB ADDRESS
         LA    R1,0(,R1)               CLEAR HI ORDER BYTE
         LTR   R1,R1                   IS THERE A JSCB
         BZ    RET0                    NO, LET IT PASS
         USING IEZJSCB,R1
         L     R1,JSCBPSCB             GET ADDRESS OF PSCB
         DROP  R1                      IEZJSCB
         LA    R1,0(,R1)               CLEAR HI ORDER BYTE
         LTR   R1,R1                   IS THERE A PSCB
         BZ    RET0                    NO, LET IT PASS
         USING PSCB,R1
         MVC   USER,PSCBUSER
         MVC   USRL,PSCBUSRL
         MVC   ATR1,PSCBATR1
         DROP  R1                      PSCB
         B     *+10
JOB      MVC   USER,0(R1)              FIRST 7 CHARACTERS OF JOBNAME
         EJECT
***********************************************************************
*                                                                     *
*         LOG RACHECK ON CONSOLE                                      *
*                                                                     *
***********************************************************************
         SPACE
         AGO   .MONX
         L     R0,MONSIZE
         GETMAIN R,LV=(0)
         LR    R8,R1
         L     R11,ACHKCLNW            POINT TO CLASS NAME
         LA    R12,6                   ENTRY LENGTH 6 DEFAULT
         CLI   0(R11),7                IS CLASS LENGTH 7
         BNE   MONEL                   NO, ENTRY LENGTH 6
         CLC   1(7,R11),DATASETC       IS CLASS=DATASET
         BNE   MONEL                   NO, ENTRY LENGTH 6
         LA    R12,44                  YES, ENTRY LENGTH 44
MONEL    LR    R1,R8
         MVC   0(MSG1L,R1),MSG1
         LA    R15,17(,R1)
         LA    R14,C'A'
         TM    ACHKFLG2,ACHKTALT       IS ATTR=ALTER
         BO    MONTYP
         LA    R14,C'C'
         TM    ACHKFLG2,ACHKTCTL       IS ATTR=CONTROL
         BO    MONTYP
         LA    R14,C'R'
         TM    ACHKFLG2,ACHKTRD        IS ATTR=READ
         BO    MONTYP
         LA    R14,C'U'
         TM    ACHKFLG2,ACHKTUPD       IS ATTR=UPDATE
         BO    MONTYP
         LA    R14,C'0'
MONTYP   STC   R14,0(,R15)
         LA    R15,2(,R15)
         SR    R14,R14
         IC    R14,0(,R11)         GET LENGTH OF CLASS NAME
         BCTR  R14,0
         B     *+10
         MVC   0(0,R15),1(R11)     EXECUTED
         EX    R14,*-6             MOVE CLASS NAME
         LA    R15,2(R14,R15)
         MVI   0(R15),C'*'
         L     R14,ACHKENT-1       POINT TO ENTRY NAME
         LA    R14,0(,R14)
         LTR   R14,R14             IS THERE AN ENTRY NAME
         BZ    MONWTO              NO, GO TO WTO
         LA    R0,30               MAX ENTRY NAME LENGTH
         CR    R12,R0              IS ENTRY NAME TOO LONG
         BNH   *+6                 NO
         LR    R12,R0              YES, TRUNCATE IT
         BCTR  R12,0               LENGTH MINUS 1 FOR EX
         B     *+10
         MVC   0(0,R15),0(R14)     EXECUTED
         EX    R12,*-6             MOVE ENTRY NAME TO WTO MSG
MONWTO   EQU   *
         WTO   MF=(E,(1))
         LR    R1,R8
         L     R0,MONSIZE
         FREEMAIN R,LV=(0),A=(1)
.MONX    ANOP
         EJECT
***********************************************************************
*                                                                     *
*         RETURN WITH RC = 0 IF CLASS NOT 'DATASET'                   *
*                                                                     *
***********************************************************************
         SPACE
         L     R11,ACHKCLNW            POINT TO CLASS NAME
         CLI   0(R11),7                IS CLASS LENGTH 7
         BNE   RET0                    NO, RETURN RC=0
         CLC   1(7,R11),DATASETC       IS CLASS=DATASET
         BE    DATASET                 YES, BRANCH
RET0     SR    R15,R15                 RETURN RC=0
         LR    R14,R9                  RESTORE RETURN ADDRESS
         BR    R14                     RETURN
DATASETC DC    C'DATASET '
         SPACE
***********************************************************************
*                                                                     *
*         RETURN WITH RC = 0 IF DSN(4) MATCHES JOBNAME(4)             *
*                                                                     *
***********************************************************************
         SPACE
DATASET  L     R1,ACHKENT-1            ADDRESS OF DSNAME
         CLC   0(4,R1),USER            DOES DSNAME MATCH USERID
*        BE    RET0                    YES, RETURN
         NOP   RET0                    ALWAYS FALL THRU       30JUN81
         EJECT
***********************************************************************
*                                                                     *
*         RETURN WITH RC = 0 IF SYSTEMS SUPPORT JOB                   *
*                                                                     *
***********************************************************************
         SPACE
         CLC   USER(4),=C'#SMI'        IS JOBNAME SPECIAL
         BE    RET0                    YES, CAN ACCESS ANYTHING
         CLC   USER(4),=C'@CMI'        IS JOBNAME SPECIAL
         BE    RET0                    YES, CAN ACCESS ANYTHING
         SPACE
         CLC   USER(4),=C'ASMI'        IS JOBNAME SPECIAL
         BNE   SPECJX                  YES, GO CHECK IF TSO
         SPACE
SPECU    CLI   USRL,0                  IS THIS A JOB OR A USERID
         BE    RET0                    IF JOB, CAN ACCESS ANYTHING
         TM    ATR1,PSCBJCL            DOES USER HAVE JCL
         BNE   RET0                    YES, CAN ACCESS ANYTHING
SPECJX   EQU   *                       NOJCL ALLOWS TESTING
         SPACE
***********************************************************************
*                                                                     *
*         RETURN WITH RC = 0 IF READ ACCESS AND DSN IN TABLE          *
*                                                                     *
***********************************************************************
         SPACE
         TM    ACHKFLG2,ACHKTRD        IS ACCESS FOR READ ONLY
         BZ    RET8                    NO, 913-38 ABEND
         LA    R15,READONLY            POINT TO READ-ONLY DATA SETS
SRCHLOOP CLI   0(R15),X'FF'            END OF TABLE
         BE    RET8                    YES, 913-38 ABEND
         CLC   0(44,R1),0(R15)         IS DATA SET IN READ-ONLY TABLE
         BE    RET0                    YES, ALLOW ACCESS
         LA    R15,44(,R15)            POINT TO NEXT DSNAME
         B     SRCHLOOP
         SPACE
***********************************************************************
*                                                                     *
*         RETURN WITH RC = 8, ACCESS NOT AUTHORIZED                   *
*                                                                     *
***********************************************************************
         SPACE
RET8     LA    R15,8                   913-38 ABEND
         LR    R14,R9                  RESTORE RETURN ADDRESS
         BR    R14                     RETURN
         EJECT
***********************************************************************
*                                                                     *
*         REPLACEMENTS FOR RACINIT, RACLIST, RACDEF SVC'S             *
*                                                                     *
***********************************************************************
         SPACE
IGC0013A DC    0D'0'                   SVC 131 RACINIT
         USING *,R6
         ABEND X'E83',,,SYSTEM
         SPACE
IGC0013B DC    0D'0'                   SVC 132 RACLIST
         USING *,R6
         ABEND X'E84',,,SYSTEM
         SPACE
IGC0013C DC    0D'0'                   SVC 133 RACDEF
         USING *,R6
         SR    R15,R15                 RC=0
         BR    R14
         DROP  R6
         SPACE
************************************************************
*                                                          *
*        CONSTANTS                                         *
*                                                          *
************************************************************
         SPACE
         LTORG
MONDATA  DC    0D'0'
MSG1     WTO   'RACF RACHECK X CLASS                                 ',X
               ROUTCDE=(2),DESC=(6),MF=L
MSG1L    EQU   *-MSG1
         DC    0D'0'
MONLEN   EQU   *-MONDATA
MONSIZE  DC    AL1(0),AL3(MONLEN)
         SPACE
READONLY DC    0F'0' ALIGN
         DC    CL44'SYS1.HELP'
         DC    CL44' '
         DC    CL44' '
         DC    CL44' '
         DC    CL44' '
         DC    CL44' '
         DC    X'FF'
         DC    0D'0'
         SPACE
************************************************************
*                                                          *
*        DSECTS                                            *
*                                                          *
************************************************************
         SPACE
*        CVT   DSECT=YES
CVT      DSECT
CVTMAP   EQU   *
CVTTCBP  DS    A
         SPACE 3
*        IHAASCB
ASCB     DSECT
ASCBASID EQU   ASCB+36,2
ASCBTSB  EQU   ASCB+60,4
ASCBJBNI EQU   ASCB+172,4
ASCBJBNS EQU   ASCB+176,4
         SPACE 3
*        IKJTCB
TCBFIX   DSECT
         DS    CL32                TCB PREFIX
TCB      EQU   *                   TCB PROPER
TCBJSCB  EQU   TCB+180
         SPACE 3
*        IHARB
RBPRFX   DSECT
         DS    8D
RBBASIC  EQU   *
         DS    CL16
RBOPSW   DS    CL8                 USER'S OLD PSW
         DS    A
RBLINK   DS    A                   ADDRESS OF PREVIOUS RB
RBGRSAVE DS    16F                 GENERAL REGISTER SAVE AREA
RBEXSAVE DS    CL48                EXTENDED SAVE AREA
         SPACE 3
         ORG   RBEXSAVE
USER     DS    CL7
USRL     DS    AL1
ATR1     DS    AL1
         ORG   RBEXSAVE
MSG      DS    CL48
         SPACE 3
*        IEZJSCB
IEZJSCB  DSECT
         ORG   IEZJSCB+188
         DS    19A
JSCBPSCB DS    A
         SPACE 3
*        ICHACHKL
*/* A 00000000-99999999                                      @Z40RSGD*/
*/********************************************************************/
*/*                                                                  */
*/*       AUTHORIZATION CHECKING INTERFACE - RACHECK                 */
*/*               PARAMETER LIST MAPPING MACRO                       */
*/*                                                                  */
*/* COPYRIGHT = NONE                                                 */
*/*                                                                  */
*/* METHOD OF ACCESS = ICHACHKL MACRO IN BAL                         */
*/*                   %INCLUDE SYSLIB(ICHACHKL)  IN PLS              */
*/*                                                                  */
*/* FUNCTION = MAPS THE PARAMETER LIST PASSED TO THE AUTHORIZATION   */
*/*            CHECKING ROUTINE, RACHECK                             */
*/*                                                                  */
*/* MACROS = NONE                                                    */
*/*                                                                  */
*/*    STATUS = VS/2 RELEASE 4 LEVEL 0                               */
*/*                                                                  */
*/* CHANGE ACTIVITY =                                                */
*/*                                                          @PC002PY*/
*/*                                                          @PC-----*/
*/*                                                                  */
*/********************************************************************/
*        MACRO
ACHKLIST DSECT ,ACHKPTR        RACHECK PARAMETER LIST MAP
ACHKINSW DS    0A -           INSTALLATION DATA ADDRESS
ACHKLENG DS    AL1 -          LENGTH OF PARAMETER LIST
ACHKINST DS    AL3 -          INSTALLATION DATA ADDRESS
ACHKENTW DS    0F -           ENTITY ADDRESS WORD
ACHKFLG1 DS    X -            FIRST FLAGS BYTE
*        EQU   X'80' -          RESERVED
*        EQU   X'40' -          RESERVED
*        EQU   X'20' -          RESERVED
ACHKDSTV EQU   X'10' -          DSTYPE=V
*        EQU   X'08' -          RESERVED
ACHKLOGF EQU   X'04' -          LOG=NOFAIL
ACHKLOGN EQU   X'02' -          LOG=NONE
ACHKCSA  EQU   X'01' -          ENTITY=(--,CSA)
ACHKPROF DS    0AL3 -         PROFILE ADDRESS
ACHKENT  DS    AL3 -          ENTITY NAME ADDRESS
ACHKCLNW DS    0F -           CLASS NAME ADDRESS WORD
ACHKFLG2 DS    X -            SECOND FLAGS BYTE
ACHKTALT EQU   X'80' -          ATTR=ALTER
*        EQU   X'40' -               RESERVED
*        EQU   X'20' -               RESERVED
*        EQU   X'10' -               RESERVED
ACHKTCTL EQU   X'08' -               CONTROL
ACHKTUPD EQU   X'04' -               UPDATE
ACHKTRD  EQU   X'02' -               READ
*        EQU   X'01' -               RESERVED
ACHKCLN  DS    AL3 -          ENTITY CLASS NAME ADDRESS
ACHKVOLW DS   0F -            THIRD FLAGS BYTE
ACHKFLG3 DS    X -            THIRD FLAGS BYTE
*        EQU   X'80' -          RESERVED
*        EQU   X'40' -          RESERVED
ACHKPRF  EQU   X'20' -          PROFILE ADDRESS GIVEN
*        EQU   X'10' -          RESERVED
ACHKVOL  EQU   X'08' -          VOLSER PARM SPECIFIED
*        EQU   X'07' -          RESERVED BITS
ACHKVOLS DS    AL3 -          VOLSER ADDRESS
ACHKOVOL DS    A -            OLD VOLSER ADDRESS
ACHKAPPL DS    A -            APPL NAME ADDRESS                @PC003PY
ACHKACEE DS    A -            ACEE ADDRESS                     @PC003PY
ACHKLEN  EQU   *-ACHKLIST -   LENGTH OF PARAMETER LIST
         SPACE 2
         IKJPSCB
         SPACE 2
         IKJUPT
         SPACE 2
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
