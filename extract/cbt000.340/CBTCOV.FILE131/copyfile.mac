         TITLE ' C O P Y F I L E  '
*-$DOC@------------------------------------------------------------*
*                                                                  *
*        THIS IS COPYFILE, A PGM USED TO COPY SELECTED FILES       *
*        FROM A SL TO ANOTHER TAPE, ALL CONTROL IS VIA SYSIN       *
*        CARDS.                                                    *
*                                                                  *
* COURTESY:  JIM MARSHALL,CAPT,USAF                                *
*                                                                  *
* WRITTEN:  MR FRANK YATES, AEROSPACE CORP WHILE AT MULTIPURPOSE   *
*           FACILITY, LOWRY AFB, CO FOR USE IN OS/MVT.             *
*                                                                  *
* NOTES:    1. LKED AC=1                                           *
*           2. NEEDS APPENDAGE IGG019WE                            *
*           3. NEEDS SUBROUTINES TLPRINT & MSGWRITE                *
*                                                                  *
* CHANGE LOG:                                                      *
*                                                                  *
*    12 MAR 74 - ADDED WORD 'ALL' AS A VALID OPTION ON THE         *
*                CONTROL CARDS.                                    *
*    22 AUG 81 - INSTALLED AIR FORCE DATA SERVICES CENTER,         *
*                PENTAGON, WASHINGTON D.C. WITH FOLLOWING CHANGES  *
*                1. CLEANED UP CODE AND DOCUMENTED CODE ( WILL     *
*                   CONTINUE AS THE CODE IS SLICK AND FRANK        *
*                   WROTE IT FOR HIMSELF).                         *
*                2. CHANGED CONTROL CARD SCAN TO ONLY LOOK AT      *
*                   72 COLUMNS VERSUS 80. MPF HAD NO TSO.          *
*                3. INSTALLED AND YOU MUST MARK IT AUTHORIZED      *
*                   TO RUN IM MVS.                                 *
*                4. CHANGED SOME UNIQUE SAVE AND RETURN MACROS     *
*                   TO STANDARD IBM MACROS.                        *
*                5. IN MVS YOU MUST SUPPLY DSNAMES ON THE JCL      *
*                   FOR BOTH INPUT AND OUTPUT DD CARDS. THEY ARE   *
*                   NOT USED BUT MUST BE THERE  ( WITH MVT YOU     *
*                   YOU CAN LEAVE THOSE OUT ).                     *
*                6. CREATED DOCUMENTATION IN A SEPARATE MEMBER.    *
*                   LOOK AT COPYFIL#. THIS WAS TAKEN FROM MY BOOK  *
*                   'KING JAMES VERSION OF THE HOLY YATES'.        *
*     9 OCT 81 - 0C4 WHEN YOU ARE SPECIFING PARM=TAPEL. THE        *
*                LABEL POOL USED BY PGM WAS BEING FREED BEFORE     *
*                HE WENT TO SUBROUTINE 'TLPRINT'.                  *
*    10 OCT 81 - PRINTOUT TELLING YOU WHAT FILE WAS COPIED TO      *
*                WHAT FILE WAS ONLY SETUP FOR LESS THAN 99 FILES   *
*                NOW WILL HANDLE UP TO 999 FILES.                  *
*    11 OCT 81 - TAPEL LISTING CAN HANDLE UP TO 200 FILES BY       *
*                INCREASING THE BUFFER POOL TO 24200. ALSO ADDED   *
*                SOME DOCUMENTATION.                               *
*                                                                  *
*                                                                  *
*      THE JCL USED TO EXECUTE THE UTILITY FOLLOWS:                *
*                                                                  *
*          //COPY     EXEC PGM=COPYFILE,REGION=66K,PARM='OPTIONAL' *
*          //TAPELOUT DD SYSOUT=A                                  *
*          //MSG      DD SYSOUT=A                                  *
*          //IN       DD DSN=INPUT.FILES,UNIT=TAPE,                *
*          //            DISP=OLD,VOL=SER=XXXXXX                   *
*          //TAPELIN  DD DSN=OUTPUT.FILES,UNIT=TAPE,               *
*          //            DISP=(,KEEP),VOL=SER=YYYYYY               *
*          //SYSIN    DD *                                         *
*            ----  CONTROL  CARDS  ----                            *
*          /*                                                      *
*-$DOC$------------------------------------------------------------*
         SPACE
         MACRO
&NAME    SAVE &WHERE
&NAME    TM TAPELSW+1,X'80'  TEST TAPEL SWITCH.
         BO SAV&SYSNDX
         MVC 0(60,6),&WHERE  COPY A LABEL TO THE POOL.
         LA 6,60(6)          ADVANCE LABEL POINTER.
SAV&SYSNDX EQU *
         MEND
         SPACE 2
COPYFILE CSECT
         STM   R14,R12,12(R13)
         LR    R12,R15
         LA    R11,4095(R11)
         LA    R11,1(R11)
         USING COPYFILE,R12,R11
         LR    R15,R13                OLD SAVE AREA ADDRESS
         LA    R13,SAVEAREA           NEW SAVE AREA ADDRESS
         ST    R15,4(R13)             LINK SAVE AREAS
         ST    R13,8(R13)             LINK SAVE AREAS
         B     SAVEAREA+72            BRANCH AROUND SAVEAREA
SAVEAREA DC    18F'0'                 YE OLE SAVE AREA
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         L     R1,0(R1)
         CLC   =C'TAPEL',2(R1)     SEE IF TAPEL WAS SPECIFIED.
         BNE   OPEN
         NI    TAPELSW+1,15        ENABLE TAPEL.
         GETMAIN EU,LV=24200,A=POOL2   GET LABEL POOL.
         L     R6,POOL2            REG 6 = LABEL POINTER
         SPACE
OPEN     OPEN  SYSIN
         TM    SYSIN+48,X'12'      TEST FOR SUCCESSFUL OPEN.
         BNO   RETURN
         RDJFCB IN
         MVI   INJFCB+66,X'10'     BYPASS LABEL PROCESSING.
         LOAD  EP=IGG019WE         GET CHANNEL END APPENDAGE.
         OPEN  IN,TYPE=J
         RDJFCB OUT
         MVI   OUTJFCB+66,X'10'    BYPASS LABEL PROCESSING.
         B     EXCP1
         SPACE
OPENOUT  OPEN  (OUT,OUTPUT),TYPE=J
EXCP1    EXCP  START
         WAIT  ECB=ECB1
         TM    ECB1,X'7F'
         BO    SW1
         DC    H'0'                ABEND.
SW1      BC    0,Q4
         CLC   INVOL1+4(6),INJFCB+118    TEST INPUT SERIAL NO.
         BE    Q1
         CLOSE IN
         OPEN  IN,TYPE=J
         B     EXCP1
Q1       OPEN  (OUT,OUTPUT),TYPE=J
         MVC   START+20(4),=A(OUT)
         MVC   CCW1+9(3),=AL3(OUTVOL1)
         OI    SW1+1,X'F0'
         B     EXCP1
Q4       EQU   *
         TM    OUTJFCB+118,X'FF'   TEST FOR SCRATCH OUTPUT.
         BO    Q4A
         CLC   OUTVOL1+4(6),OUTJFCB+118  TEST SERIAL NO.
         BE    Q4A
*  THE WRONG TAPE WAS MOUNTED FOR OUTPUT.
         L     R1,16               CVT
         L     R1,0(R1)            TCB WORDS
         L     R1,4(R1)            TCB
         L     R1,12(R1)           TIOT
         AH    R1,OUT+40           ADD OFFSET TO DD ENTRY.
         TM    1(1),2              SEE IF DISP=KEEP.
         BZ    PASS
         CLOSE OUT
         B     OPENOUT
PASS     MSG '***TAPE NO. ',(C,OUTVOL1,6,4),' WAS MOUNTED FOR OUTPUT', X
               '.  UNABLE TO RECOVER BECAUSE DISP=(,PASS).'
         B     RETURN
Q4A      EQU   *
         SAVE  OUTVOL1
         MSG '***SELECTED FILES ARE BEING COPIED FROM VOL=SER=',C'1',  X
               (C,INVOL1,6,4),' TO VOL=SER=',(C,OUTVOL1,6,4)
         MVI   MSGCC,C'0'          DOUBLE SPACE THE NEXT MESSAGE.
         LA    R7,1                REG 7 = CURRENT INPUT FILE NO.
         LA    R8,1                REG 8 = CURRENT OUTPUT FILE NO.
         SPACE 2
LOOP     BAL   10,CONTROL          GET FILE NUMBERS.
LEP1     BAL   10,COPY             COPY A FILE.
         MSG 'FILE ',(D,INFILE,3),' WAS COPIED TO FILE ',(D,OUTFILE,3),X
               '   DSN=',(C,DSN)                           10SEP81
         MVI   MSGCC,C' '          SINGLE SPACE SUBSEQUENT LINES.
ALLSW    B     LOOP
LEP2     ST    7,INFILE            DO THE NEXT FILE.
         ST    8,OUTFILE
         B     LEP1
         SPACE 2
STOP     EXCP  TAPEMARK            WRITE A 2ND. TAPE MARK.
         WAIT  ECB=ECB7
         CLOSE (IN,,OUT)
TAPELSW  B     RETURN
         MVI   0(6),0              MARK END OF LABELS.
         LA    R1,POOL2
         CALL  TLPRINT             PRINT TAPEL LISTING.
RETURN   EQU   *
         TM    TAPELSW+1,X'80'     DID WE HAVE TAPEL ACTIVE ?  9SEP81
         BO    ENDIT                                           9SEP81
         FREEMAIN V,A=POOLAD       IF SO WE MUST FREEMAIN      9SEP81
ENDIT    EQU   *                                               9SEP81
         L     R13,4(R13)
         RETURN (14,12),RC=0
         SPACE 2
CONTROL  BC    0,OLDCARD
GETCARD  GET   SYSIN,CARD          READ A CONTROL CARD.
         OI    CONTROL+1,X'F0'
         MVC   COLUMN,=A(CARD-1)   RESET COLUMN.
OLDCARD  L     R1,COLUMN           REG 1 = CARD COLUMN
         LA    R14,CARD+71         REG 14 = END OF CARD ADDRESS
FINDWORD LA    R1,1(R1)
         CR    R1,R14              TEST FOR END OF CARD.
         BH    GETCARD
         CLI   0(1),C' '           TEST FOR BLANK.
         BE    FINDWORD            IF BLANK, LOOK AGAIN.
         CLC   =C'ALL',0(R1)       REG 1 = ADDRESS OF NEXT WORD
         BNE   CQ1
         NI    ALLSW+1,15          COPY ALL THE REST OF THE FILES.
         B     LEP2
CQ1      LR    R15,R1              REG 15 = ADDRESS OF FIRST FILE NO.
FINDSL   LA    R15,1(R15)          LOOK FOR THE /.
         CR    15,14               TEST FOR END OF CARD.
         BH    MOD1                OUTPUT FILE IS NOT SPECIFIED.
         CLI   0(15),C' '          TEST FOR BLANK.
         BE    MOD1                OUTPUT FILE IS NOT SPECIFIED.
         CLI   0(15),C'/'          TEST FOR /.
         BNE   FINDSL
         LA    2,1(15)             REG 2 = ADDRESS OF SECOND FILE NO.
         SR    R15,R1              REG 15 = LENGTH OF FIRST FILE NO.
         BCTR  15,0
         EX    15,PACK
         CVB   0,WORK
         ST    0,INFILE
         LR    R1,R2               REG 1 = ADDRESS OF SECOND FILE
FINDEND  LA    R2,1(R2)
         CR    2,14                TEST FOR END OF CARD.
         BNH   Q2
         NI    CONTROL+1,15        ENABLE GETCARD.
         B     FOUNDIT
Q2       CLI   0(2),C' '           TEST FOR BLANK.
         BNE   FINDEND
FOUNDIT  ST    2,COLUMN            RESET COLUMN FOR NEXT SEARCH.
         SR    R2,R1               REG 2 = LENGTH OF SECOND FILE NO.
         BCTR  2,0
         EX    2,PACK
         CVB   0,WORK
         ST    0,OUTFILE
         BR    R10
MOD1     EQU   *                  MOD #1.  AUTOMATIC OUTPUT FILE NO.
         ST    15,COLUMN          RESET COLUMN FOR NEXT SEARCH.
         SR    R15,R1             REG 15 = LANGTH OF FILE NO.
         BCTR  15,0               REG 15 = LENGTH CODE
         EX    15,PACK
         CVB   0,WORK
         ST    0,INFILE
         L     1,OUTFILE
         LA    1,1(1)             ADVANCE OUTPUT FILE NO.
         ST    1,OUTFILE
         BR    R10
         SPACE 2
COPY     EQU   *
         LM    2,3,INFILE         GET DESIRED FILE NUMBERS.
SKIPOUT  MVC   SKIP+20(4),=A(OUT)
Q5       CR    3,8
         BE    SKIPIN
         LA    R8,1(R8)           ADVANCE OUTPUT FILE NO.
         EXCP  SKIP
         WAIT  ECB=ECB4
         TM    ECB4,X'7F'
         BO    Q5
         B     ABEND100
SKIPIN   MVC   SKIP+20(4),=A(IN)
Q5A      CR    2,7                TEST INPUT FILE NO.
         BE    HEADERS
         LA    7,1(7)             ADVANCE INPUT FILE NO.
         EXCP  SKIP
         WAIT  ECB=ECB4
         TM    ECB4,X'7F'
         BO    Q5A
         DC    H'0'
HEADERS  BAL   9,LABELS           COPY THE HEADER LABELS.
         SAVE  LABEL1
         SAVE  LABEL2
         MVC   DSN,LABEL1+4       SAVE THE DSN.
GETBUF   CLC   =C'HDR2',LABEL2
         BE    Q6
         B     ABEND200
Q6       PACK  WORK,LABEL2+5(5)
         CVB   2,WORK             REG 2 = BLKSIZE FOR THIS FILE
         LTR   R2,R2
         BNP   Q6A
         C     2,=F'32760'
         BH    Q6A
         B     SW2                BLKSIZE IS OK.
Q6A      L     0,POOLSIZE         BLKSIZE IS FAULTY.
         LTR   R0,R0
         BZ    Q7
         FREEMAIN R,LV=(0),A=POOLAD
Q7       GETMAIN VC,LA=MINMAX,A=POOLAD   GET THE LARGEST POOL POSSIBLE.
         L     R2,POOLSIZE
         SRL   2,1                DIVIDE BY 2.
         ST    R2,BLKSIZE
         STH   2,CCW5+6           SET READ LENGTH.
         MSG '***FILE',(D,INFILE,3),' LABEL BLKSIZE IS MISSING. ',     X
               ' BLOCKS UP TO ',(D,BLKSIZE,5),' BYTES WILL BE COPIED.'
         L     1,POOLAD
         B     Q7A
SW2      BC    0,TESTPOOL
NEWPOOL  ST    2,BLKSIZE          SAVE BLKSIZE.
         STH   2,CCW5+6           SET READ BLKSIZE.
         SLL   2,1                REG 2 = POOLSIZE
         ST    2,POOLSIZE
         LR    R0,R2
         GETMAIN R,LV=(0)
         ST    1,POOLAD           SAVE POOL ADDRESS.
Q7A      ST    1,CCW5             PUT BUFFER ADDRESS INTO CCW5.
         MVI   CCW5,2             RESTORE COMMAND CODE.
         A     1,BLKSIZE
         ST    1,CCW6             PUT BUFFER ADDRESS INTO CCW6.
         MVI   CCW6,1             RESTORE COMMAND CODE.
         OI    SW2+1,X'F0'        SKIP INITIALIZATION.
         B     COPYDATA
TESTPOOL C     2,BLKSIZE          SEE IF BLKSIZE HAS INCREASED.
         BNH   COPYDATA
         L     R0,POOLSIZE
         FREEMAIN R,LV=(0),A=POOLAD
         B     NEWPOOL            GET A LARGER POOL.
         SPACE 2
COPYDATA EQU   *
         MVI   ECB6,X'7F'         POST WRITE ECB.
         SPACE 2
COPYLOOP EXCP  RDATA          READ A DATA BLOCK.
         WAIT 2,ECBLIST=ECBLIST   WAIT FOR READ AND WRITE TO COMPLETE.
         TM    ECB5,X'7F'
         BO    ROK
         B     ABEND300
ROK      TM    ECB6,X'7F'
         BO    WOK
         B     ABEND400
WOK      L     0,CCW5             SWITCH BUFFERS.
         L     1,CCW6
         ST    0,CCW6
         MVI   CCW6,1             RESTORE COMMAND CODE.
         ST    1,CCW5
         MVI   CCW5,2             RESTORE COMMAND CODE.
         LH    1,CCW5+6           GET INPUT BLKSIZE.
         SH    1,RDATA+14         SUBTRACT UNUSED BYTES.
         BZ    EODAD              EXIT AT END OF DATA FILE.
         STH   1,CCW6+6           SET OUTPUT BLKSIZE.
         EXCP  WDATA              WRITE A DATA BLOCK.
         B     COPYLOOP
         SPACE 2
EODAD    EXCP  TAPEMARK           WRITE THE END-OF-DATA TAPEMARK.
         WAIT  ECB=ECB7
         TM    ECB7,X'7F'
         BO    TRAILERS
         B     ABEND500
         SPACE 2
TRAILERS BAL   9,LABELS           COPY THE TRAILER LABELS.
         SAVE  LABEL1
         CLC   DSN,LABEL1+4       TEST DSN.
         BE    Q8
         DC    H'0'
Q8       LA    7,1(7)             ADVANCE FILE NUMBERS.
         LA    8,1(8)
         CLC   =C'EOV1',LABEL1
         BE    STOP               STOP AFTER EOV1 LABEL.
         BR    10                 RETURN.
         SPACE 2
LABELS   EXCP  RLABELS            COPY TWO LABELS.
         WAIT  ECB=ECB2
         TM    ECB2,X'7F'
         BO    Q3
         B     ABEND600
Q3       CLC   =H'80',RLABELS+14  TEST FOR TAPE MARK.
         BE    STOP               STOP AT 2ND. TAPE MARK.
         CVD   3,WORK             GET OUTPUT FILE NO.
         OI    WORK+7,15          FIX THE LAST ZONE.
         UNPK  WORK(5),WORK+5(3)  CONVERT TO EBCDIC.
         MVC   LABEL1+31(4),WORK+1 FIX FILE NO. IN THE LABEL.
         EXCP  WLABELS
         WAIT  ECB=ECB3
         TM    ECB3,X'7F'
         BCR   1,9                RETURN.
         B     ABEND700
ABEND100 ABEND 100
ABEND200 ABEND 200
ABEND300 ABEND 300
ABEND400 ABEND 400
ABEND500 ABEND 500
ABEND600 ABEND 600
ABEND700 ABEND 700
         SPACE 2
***DATA AREA
BLKSIZE  DC    F'0'
CARD     DC    CL80' '          CONTROL CARD
COLUMN   DC    F'0'             STARTING COLUMN FOR WORD SEARCH
DSN      DC    CL17' '
INFILE   DC    F'0'
OUTFILE  DC    F'0'
LABEL1   DC    CL80' '
LABEL2   DC    CL80' '
INVOL1   DC    CL80' '
OUTVOL1  DC    CL80' '
PACK     PACK  WORK,0(0,1)
MINMAX   DC    A(160,65520)     MIN AND MAX USEFUL POOL SIZES
POOLAD   DC    F'0'             ADDRESS OF BUFFER POOL
POOLSIZE DC    F'0'
POOL2    DC    F'0'             ADDRESS OF LABEL POOL
WORK     DC    D'0'
SYSIN    DCB   DSORG=PS,MACRF=GM,EODAD=STOP,DDNAME=SYSIN
         DC    D'0'
IN       DCB   MACRF=E,EXLST=INEXLST,CENDA=WE,DDNAME=IN
         DC    D'0'
OUT      DCB   MACRF=E,EXLST=OUTEXLST,DDNAME=TAPELIN
INEXLST  DC    X'87',AL3(INJFCB)
OUTEXLST DC    X'87',AL3(OUTJFCB)
INJFCB   DC    44F'0'
OUTJFCB  DC    44F'0'
         SPACE 2
ECBLIST  DC    A(ECB5),X'80',AL3(ECB6)
ECB1     DC    F'0'
ECB2     DC    F'0'
ECB3     DC    F'0'
ECB4     DC    F'0'
ECB5     DC    F'0'
ECB6     DC    F'0'
ECB7     DC    F'0'
START    DC    X'40000000',A(ECB1,0,0,CCW1,IN,0,0)
RLABELS  DC    X'40000000',A(ECB2,0,0,CCW2,IN,0,0)
WLABELS  DC    X'40000000',A(ECB3,0,0,CCW3,OUT,0,0)
SKIP     DC    X'40000000',A(ECB4,0,0,CCW4,IN,0,0)
RDATA    DC    X'40000000',A(ECB5,0,0,CCW5,IN,0,0)
WDATA    DC    X'40000000',A(ECB6,0,0,CCW6,OUT,0,0)
TAPEMARK DC    X'40000000',A(ECB7,0,0,CCW7,OUT,0,0)
CCW1     CCW   7,0,X'60',1     REWIND.
         CCW   2,INVOL1,X'20',80      READ A VOLUME LABEL.
CCW2     CCW   2,LABEL1,X'40',80      READ LABEL1.
         CCW   2,LABEL2,X'60',80      READ LABEL2.
         CCW   X'3F',0,X'20',1        SKIP A TAPE MARK.
CCW3     CCW   1,LABEL1,X'60',80      WRITE LABEL1.
         CCW   1,LABEL2,X'60',80      WRITE LABEL2.
CCW7     CCW   X'1F',0,X'60',1        WRITE A TPAE MARK.
         CCW   X'C3',0,X'20',1        NO OP
CCW4     CCW   X'3F',0,X'60',1        SKIP A FILE.
         CCW   X'3F',0,X'60',1
         CCW   X'3F',0,X'20',1
CCW5     CCW   2,0,X'20',0            READ A DATA BLOCK.
CCW6     CCW   1,0,X'20',0            WRITE A DATA BLOCK.
CCW8     CCW   7,0,X'20',1            REWIND.
         LTORG
         END
