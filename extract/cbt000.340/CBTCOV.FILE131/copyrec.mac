         TITLE ' C O P Y R E C '
*-$DOC@---------------------------------------------------------------*
*                                                                     *
*        THIS IS A PROGRAM USED TO COPY SELECTED RECORDS FROM A       *
*        SEQUENTIAL DATASET, REGARDLESS OF FORMAT. THE SELECTED       *
*        RECORDS ARE SELECTED BY PASSING CONTROL CARDS TO THE PGM     *
*        WITH PAIRS OF NUMBER, I.E. RECORD BEGIN AND END TO BE        *
*        SELECTED. LIKE  2 20 40 60 SELECTS RECORDS 2-40 & 40-60.     *
*                                                                     *
* WRITTEN: MR FRANK YATES, AEROSPACE CORP WHILE AT MULTIPURPOSE       *
*          FACILITY, LOWRY AFB, CO FOR USE UNDER OS/MVT               *
* CHANGE                                                              *
*     LOG: MAY 1978-INSTALLED OS/MVS, AIR FORCE DATA SVCS CENTER,     *
*                   WASHINGTON D.C. , JIM MARSHALL                    *
*          JUN 1981-CLEANED UP CODE AND PACKAGED IT SO YOU WOULD      *
*                   NOT HAVE TO GATHER ALL THE PIECES TO COMPILE IT.  *
*                   BE SURE TO USE A PARM=BATCH IN THE COMPILE.       *
*                   AFDSC / JIM MARSHALL                              *
*          NOV 1984-PACKAGED MACROS INSIDE OF CODE AND CONCATENATED   *
*                   THE OTHER ROUTINES. NEEDED TO DO SOMETHING TO     *
*                   USE BESIDES 'IEBGENER'.     J.MARSHALL            *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         SPACE
         MACRO
&NAME    TESTOPEN &DCB,&EXIT
&NAME    LOADIT 1,&DCB,A     REG 1 = DCB ADDRESS
         TM 48(1),X'10'      TEST FOR SUCCESSFUL OPEN.
         AIF ('&EXIT' EQ '').NOEXIT
         LOADIT 15,&EXIT,A   REG 15 = EXIT ADDRESS
         BCR 8,15            BRANCH IF NO OPEN.
         MEXIT
.NOEXIT  BO TEST&SYSNDX      BRANCH IF OPEN OK.
         COMMENT 'OPEN TEST FAILED.'
         SVC 3
TEST&SYSNDX EQU *
         MEND
         SPACE
         MACRO
&NAME    MSG
         GBLB &MSGUSED
         LCLA &OP,&COLUMN,&L1,&L2,&L3,&N,&DISP,&CT
         LCLC &D,&E
         ACTR 400
&NAME    STM 14,1,MSGREGS    SAVE REGS 14,15,0,1.
         AIF (&MSGUSED).LOOP
&MSGUSED SETB 1
         B MSGSKIP           BRANCH AROUND CONSTANTS AND SUBROUTINES
MSGBDW   DC F'0'             BLOCK DESCRIPTOR WORD
MSGRDW   DC F'0'             RECORD DESCRIPTOR WORD
MSGCC    DC C'0'             CARRIAGE CONTROL
MSGTEXT  DS CL147
MSGEDIT  DC CL12' '          EDITING AREA FOR DECIMAL STRINGS
MSGMOVE  MVC 0(0,15),0(14)
MSGPAT   DC X'40',9X'20',X'2120'  EDITING PATTERN
MSGREG   DS F                REGISTER CONTENTS FOR TRANSLATION
MSGREGS  DC 4F'0'            CONTENTS OF REGS 0-15 AT ENTRY TO MSG
MSGRTRN  DS F                RETURN ADDRESS FOR WRITE SUBROUTINE
MSGWORK  DC D'0'
MSGTAB   DC C'0123456789ABCDEF'        STRING FOR TRANSLATIONS TO HEX
MSGTABAD DC A(MSGTAB-C'0')   ADDRESS OF TRANSLATE TABLE
MSGDEC   CVD 0,MSGWORK       ROUTINE TO MAKE DECIMAL STRINGS
         MVC MSGEDIT,MSGPAT  RESTORE EDITING PATTERN.
         ED MSGEDIT,MSGWORK+2     EDIT.
         LR 0,14             SAVE RETURN ADDRESS.
         LA 14,MSGEDIT+11    REG 14 = LAST DIGIT ADDRESS IN MSGEDIT
         SR 14,1             REG 14 = FIRST DIGIT ADDRESS
         EX 1,MSGMOVE        COPY STRING TO TEXT AREA.
         LR 14,0
         BR 14
MSGUNPK  UNPK 0(15,15),0(8,1)
         LA 1,7(1)
         LA 15,14(15)
         BCT 0,MSGUNPK
         BR 14
MSGWRITE ST 14,MSGRTRN       SAVE RETURN ADDRESS
         L 15,=V(MSGWRITE)   REG 15 = ENTRY POINT OF MSGWRITE CSECT
         LA 1,MSGBDW         REG 1 = ADDRESS OF MESSAGE
         BALR 14,15          WRITE THE MESSAGE.
         L 14,MSGRTRN
         BR 14               RETURN TO THE MACRO CALL.
MSGSKIP  EQU *
.LOOP    AIF (&OP GE N'&SYSLIST).FIN
&OP      SETA &OP+1
&N       SETA N'&SYSLIST(&OP)
         AIF (&N EQ 1).N1
&D       SETC '&SYSLIST(&OP,1)'
&E       SETC '&D'(1,1)
         AIF ('&E' EQ 'X').COPYHEX
         AIF ('&E' EQ 'R').COPYREG
         AIF ('&E' EQ 'C').COPYCHR
         AIF ('&E' EQ 'D').COPYDEC
.ERROR1  MNOTE 'OPERAND &OP SKIPPED BECAUSE OF SYNTAX ERROR.'
         AGO .LOOP
.ERROR2  MNOTE 'TRUNCATED OPERANDS BECAUSE OF EXCESSIVE LENGTH'
         AGO .FIN
.N1      ANOP
&D       SETC '&SYSLIST(&OP)'
&E       SETC '&D'(1,1)
         AIF ('&E' EQ '''').NOTE
         AIF ('&E' EQ 'C').C
         AGO .ERROR1
.C       MVI MSGCC,&D        SET CARRIAGE CONTROL
         AGO .LOOP
.NOTE    ANOP
&L3      SETA K'&SYSLIST(&OP)-2   LENGTH OF NOTE
         AIF (&COLUMN+&L3 GT 132).ERROR2
         AIF (&COLUMN NE 0).SKIP2
         MVC MSGTEXT(&L3),=C&SYSLIST(&OP)
         AGO .SKIP4
.SKIP2   MVC MSGTEXT+&COLUMN.(&L3),=C&SYSLIST(&OP)
         AGO .SKIP4
.COPYHEX AIF ('&SYSLIST(&OP,3)' EQ '').Q3
&L3      SETA &SYSLIST(&OP,3)*2        NUMBER OF OUTPUT HEX BYTES
         AGO .Q4
.Q3      ANOP
&L3      SETA (L'&SYSLIST(&OP,2))*2    COPY LENGTH FROM SYMBOL TABLE
.Q4      AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP IF PREVIOUSLY USED.
         AIF (&N LT 4).Q5
&DISP    SETA &SYSLIST(&OP,4)          DISPLACEMENT, IF SPECIFIED
.Q5      ANOP
&CT      SETA &L3/14+1
         LA 0,&CT            NUMBER OF UNPK'S REQUIRED
         AIF ('&D' EQ 'XR').Q1
         LA 1,&SYSLIST(&OP,2)+&DISP    SOURCE ADDRESS, SYMBOL FORM
         AGO .Q2
.Q1      LA 1,&DISP.(&SYSLIST(&OP,2))  SOURCE ADDRESS, REGISTER FORM
.Q2      LA 15,MSGTEXT+&COLUMN         DESTINATION ADDRESS
         BAL 14,MSGUNPK      BRANCH TO UNPK SUBROUTINE
.TR2     L 14,MSGTABAD
         TR MSGTEXT+&COLUMN.(&L3),0(14)
.SKIP4   ANOP
&COLUMN  SETA &COLUMN+&L3
         AGO .LOOP
.COPYREG AIF (&COLUMN+8 GT 132).ERROR2
         AIF ('&SYSLIST(&OP,2)' EQ '0').R0
         AIF ('&SYSLIST(&OP,2)' EQ '1').R1
         AIF ('&SYSLIST(&OP,2)' EQ '14').R14
         AIF ('&SYSLIST(&OP,2)' EQ '15').R15
         ST &SYSLIST(&OP,2),MSGREG
.RX      ANOP
&L3      SETA 8              LENGTH
         UNPK MSGTEXT+&COLUMN.(9),MSGREG(5)
         AGO .TR2
.R0      MVC MSGREG,MSGREGS+8
         AGO .RX
.R1      MVC MSGREG,MSGREGS+12
         AGO .RX
.R14     MVC MSGREG,MSGREGS
         AGO .RX
.R15     MVC MSGREG,MSGREGS+4
         AGO .RX
.COPYCHR ANOP                COPY AN EBCDIC FIELD.
         AIF ('&SYSLIST(&OP,3)' EQ '').QC1
&L3      SETA &SYSLIST(&OP,3)     ACCEPT LENGTH FROM 3RD. OPERAND.
         AGO .QC2
.QC1     ANOP
&L3      SETA L'&SYSLIST(&OP,2)  TAKE LENGTH FROM SYMBOL TABLE
.QC2     ANOP
         AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP I6 PREVIOUSLY USED.
         AIF (&N LT 4).QC3
&DISP    SETA &SYSLIST(&OP,4)     DISPLACEMENT IF SPECIFIED
.QC3     AIF ('&D' EQ 'CR').QC4
         MVC MSGTEXT+&COLUMN.(&L3),&SYSLIST(&OP,2)+&DISP
         AGO .SKIP4
.QC4     MVC MSGTEXT+&COLUMN.(&L3),&DISP.(&SYSLIST(&OP,2))
         AGO .SKIP4
.COPYDEC AIF ('&SYSLIST(&OP,3)' EQ '').Q6
&L3      SETA &SYSLIST(&OP,3)     LENGTH WAS SPECIFIED.
         AGO .Q7
.Q6      ANOP
&L3      SETA 10             DEFAULT FIELD WIDTH
.Q7      AIF (&COLUMN+&L3 GT 132).ERROR2
&DISP    SETA 0              RESET &DISP.
         AIF (&N LT 4).Q8
&DISP    SETA &SYSLIST(&OP,4)     GET DISPLACEMENT SPECIFICATION.
.Q8      AIF ('&D' EQ 'DR').Q9    TEST FOR REGISTER FORM.
         L 0,&SYSLIST(&OP,2)+&DISP     REG 0 = VALUE
         AGO .Q10
.Q9      LR 0,&SYSLIST(&OP,2)     REG 0 = VALUE
.Q10     LA 15,MSGTEXT+&COLUMN    REG 15 = TEXT ADDRESS
         LA 1,&L3-1          REG 1 = FIELD WIDTH - 1
         BAL 14,MSGDEC
         AGO .SKIP4
.FIN     AIF (&COLUMN EQ 0).EXIT
&L1      SETA &COLUMN+5
&L2      SETA &L1+4
         MVI MSGRDW+1,&L1    SET RECORD LENGTH
         MVI MSGBDW+1,&L2    SET BLOCK LENGTH
         BAL 14,MSGWRITE     BRANCH TO MESSAGE WRITE SUBROUTINE
.EXIT    LM 14,1,MSGREGS     RESTORE REGS 14,15,0,1
         MEND
         MACRO
&NAME    COMMENT  &COM
.**********************************************************************
.*  WRITE A COMMENT TO THE  //MSG DD SYSOUT=A  DATASET.               *
.*            THIS MACRO PERMITS COMMENTS TO BE WRITTEN TO THE        *
.*       //MSG (SYSOUT) DATASET INTERSPERSED WITH THE OUTPUT (IF ANY) *
.*       FROM "MSG" MACROS. IF NO FORMATTING SERVICES ARE REQUIRED,   *
.*       THIS MACRO SHOULD BE USED IN PLACE OF THE "MSG" MACRO        *
.*       BECAUSE IT ENTAILS MINIMAL OVERHEAD. REGISTERS 0, 1, 14,     *
.*       AND 15 ARE USED BY THE MACRO AND ARE NOT RESTORED.           *
.*        -NAME-   COMMENT '  ANY COMMENT UP TO 132 BYTES IN LENGTH'  *
.*       NOTES:                                                       *
.*       1. APOSTROPHIES ARE THE DELIMITERS OF THE COMMENT, WHICH     *
.*          MAY CONTAIN A PRINTABLE CHARACTER. APOSTROPHIES AND       *
.*          AMPERSANDS (&) INSIDE THE COMMENT MUST BE DOUBLED.        *
.*       2. THE COMMENT MACRO WRITES BY CALLING THE SFI SUBROUTINE    *
.*          "MSGWRITE".                                               *
.**********************************************************************
         LCLA &BLK,&REC
         AIF ('&COM' EQ '').END
&REC     SETA  3+K'&COM      RECORD LENGTH
&BLK     SETA  4+&REC        BLOCK LENGTH
&NAME    L 15,=V(MSGWRITE)   REG 15 = ENTRY POINT OF MSGWRITE ROUTINE
         CNOP 0,4
         BAL 1,COMM&SYSNDX   REG 1 = MESSAGE ADDRESS
         DC H'&BLK,0,&REC,0',C'0',C&COM     MESSAGE
COMM&SYSNDX BALR 14,15       LINK TO MSGWRITE ROUTINE.
.END     MEND
         SPACE
         MACRO
&NAME    LOADIT  &REG,&SYMBOL,&TYPE
         LCLC  &A
&A       SETC '&SYMBOL'(1,1)
         AIF ('&A' EQ '(').REGFORM
&NAME    L&TYPE &REG,&SYMBOL
         MEXIT
.REGFORM ANOP
&NAME    L&TYPE &REG,0&SYMBOL
         MEND
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
COPYREC  CSECT
         STM   R14,R12,12(13)
         LR    R12,R15
         USING COPYREC,R12
         LR    R15,R13
         LA    R13,SAVE
         ST    R15,4(R13)
         ST    R13,8(R15)
         OPEN  IN
         TESTOPEN IN
         LH    R0,IN+82            REG 0 = LRECL
         GETMAIN R,LV=(0)          GET A BUFFER.
         LR    R8,R1               REG 8 = BUFFER ADDRESS
         MVC   OUT+36(1),IN+36     SET RECFM.
         MVC   OUT+82(2),IN+82     SET LRECL.
         MVC   OUT+62(2),IN+62     SET BLKSIZE.
         TM    IN+36,X'C0'         TEST FOR RECFM=U.
         BC    12,OPENOUT
         MVI   USW+1,0             PROCESS RECFM=U RECORDS.
OPENOUT  EQU   *
         OPEN  (OUT,OUTPUT)
         TESTOPEN OUT
         SR    R6,R6               REG 6 = CURRENT RECORD NO
         SPACE 2
LOOP     BAL   R10,CONTROL
         LR    R4,R0               REG 4 = STARTING RECORD NO.
         BAL   R10,CONTROL
         LR    R5,R0               REG 5 = ENDING RECORD NO.
         SPACE 2
READ     GET   IN,(R8)             READ A RECORD.
         LA    R6,1(R6)            REG 6 = RECORD NO.
         CR    R6,4                TEST FOR BEGINNING.
         BL    READ
         SPACE 2
USW      B     COPY
         MVC   OUT+82(2),IN+82     SET LRECL.
COPY     PUT   OUT,(8)             COPY THE RECORD.
         CR    R6,R5               TEST FOR END.
         BL    READ
         MSG   'COPIED RECORDS ',(DR,4,8),' THRU ',(DR,5,8)
         B     LOOP
         SPACE 1
CONTROL  EQU   *
         CALL  SYSIN2              READ A NUMBER FROM //SYSIN.
         LTR   R15,R15
         BZ    CQ1
         COMMENT '***NORMAL END***'
CLOSE    EQU   *
         CLOSE (IN,,OUT)
         L     R13,4(R13)
         RETURN (14,12),RC=0
CQ1      EQU   *
         LM    R2,R3,0(R1)         R2 = ADDRESS  R3 = LENGTH
         BCTR  R3,0
         EX    R3,PACK
         CVB   R0,WORK             REG 0 = NUMBER
         BR    R10
         SPACE 2
EOF      EQU   *
         COMMENT '***END OF FILE //IN.'
         B     CLOSE
         SPACE 2
***DATA AREA
PACK     PACK  WORK,0(0,2)
WORK     DC    D'0'
SAVE     DC    18F'0'
IN       DCB   DSORG=PS,MACRF=GM,EODAD=EOF,DDNAME=IN
OUT      DCB   DSORG=PS,MACRF=PM,DDNAME=OUT
         LTORG
         END
         TITLE ' S Y S I N 2 '
*-$DOC@---------------------------------------------------------------*
*                                                                     *
*        SYSIN2 IS  A SUBROUTINE TO READ SYSIN CONTROL CARDS.         *
*                                                                     *
* WRITTEN - MR FRANK YATES, AEROSPACE CORPORATION, WHILE ASSIGNED     *
*           TO THE MULTIPURPOSE FACILITY, LOWRY AFB, CO.              *
*                                                                     *
*                                                                     *
* CHANGE LOG: INSTALLED FEB 1976, AIR FORCE DATA SVCS CENTER,         *
*             WASHINGTON D.C  OS/MVS.                                 *
*                                                                     *
*  21 JUNE 1981 - CLEANED UP CODE, JIM MARSHALL / AFDSC               *
*                                                                     *
*                                                                     *
*-$DOC$---------------------------------------------------------------*
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
SYSIN2   CSECT
         STM   R14,R12,12(R13)
         LR    R12,R15
         USING SYSIN2,R12
         LR    R15,R13
         LA    R13,SAVE
         ST    R15,4(R13)
         ST    R13,8(R15)
STOPSW   BC    0,END
INITSW   BC    0,GO
         OPEN  IN
         TM    IN+48,X'10'         TEST FOR SUCCESSFUL OPEN.
         BZ    STOP
         GET   IN                  READ THE FIRST CARD.
         LR    R7,R1
         BCTR  R7,0                REG 7 = SEARCH POINTER
         LA    R8,80(R7)           REG 8 = END OF CARD ADDRESS
         STM   R7,R8,POINTER
         MVI   INITSW+1,X'F0'
         SPACE 2
GO       LM    R7,R8,POINTER       RESTORE REGS 7 AND 8.
LOOP1    LA    R7,1(R7)
         CR    R7,R8               TEST FOR END OF CARD.
         BL    Q1
         GET   IN                  READ ANOTHER CARD.
         LR    R7,R1               REG 7 = SEARCH POINTER
         LA    R8,80(R7)           REG 8 = END OF CARD ADDRESS
Q1       CLI   0(7),C' '
         BE    LOOP1
         LR    R5,R7               REG 5 = ADDRESS OF A WORD
         SPACE 2
LOOP2    LA    R7,1(R7)
         CR    R7,R8               TEST FOR END OF CARD.
         BNL   FOUNDIT
         CLI   0(7),C' '
         BNE   LOOP2
         SPACE 2
FOUNDIT  LR    R6,R7
         SR    R6,R5               REG 6 = LENGTH OF WORD
         STM   R5,R8,ADDRESS       LOAD PARMLIST AND SAVE REGS.
         SR    R15,R15             RETURN CODE = 0
         B     RETURN
         SPACE 2
EOF      CLOSE IN                  END OF FILE
         FREEPOOL IN
STOP     MVI   STOPSW+1,X'F0'      SHORT CIRCUIT FUTURE CALLS.
END      LA    R15,4               RETURN CODE = 4
RETURN   LA    R1,ADDRESS          REG 1 = PARMLIST ADDRESS
         L     R13,4(R13)
         LM    R2,R12,28(R13)      RESTORE REGS 2-12
         L     R14,12(R13)         RESTORE REG 14
         BR    R14                 EXIT - STAGE RIGHT
         SPACE 2
***DATA AREA
IN       DCB   DSORG=PS,MACRF=GL,EODAD=EOF,BUFNO=1,DDNAME=SYSIN
         SPACE
SAVE     DC    18F'0'             SAVE AREA
ADDRESS  DC    F'0'               ADDRESS OF A WORD
LENGTH   DC    F'0'               LENGTH OF THE WORD
POINTER  DC    F'0'               SEARCH POINTER
ENDCARD  DC    F'0'               END OF CARD ADDRESS
         END
         TITLE ' M S G W R I T E '
*---------------------------------------------------------------------*
*                                                                     *
*        THIS IS THE WRITE ROUTINE USED BY THE MSG MACRO.             *
*                                                                     *
*                                                                     *
* WRITTEN : MR FRANK YATES, AEROSPACE CORPORATION, WHILE AT THE       *
*           MULTIPURPOSE FACILITY ( LOWRY AFB, CO) FOR USE ON         *
*           OS/MVT.                                                   *
*                                                                     *
* INSTALLED : JUNE 1976, AIR FORCE DATA SVCS CENTER, WASHINTON D.C.   *
*                                                                     *
* CHANGE LOG:                                                         *
*       JUNE 1978 - INSTALLED ON OS/MVS                               *
*       JUNE 1981 - CLEANED UP CODE AND DOCUMENTED, JIM MARSHALL      *
*                                                                     *
*---------------------------------------------------------------------*
         SPACE
         PRINT NOGEN
         USING MSGWRITE,15
MSGWRITE CSECT
         ST    14,REG14            SAVE REG 14.
         STM   1,3,REGS            SAVE REGS 1, 2, AND 3.
         LR    3,15                REG 3 = BASE REG.
         DROP  15
         USING MSGWRITE,3
         TM    MSGDCB+48,X'10'     TEST FOR OPEN DCB.
         BO    ISOPEN
         OPEN  (MSGDCB,OUTPUT)
ISOPEN   L     2,REGS              R2=ADDRESS OF BLOCK DESCRIPTOR WORD
         WRITE W,SF,MSGDCB,(2)     WRITE THE MESSAGE.
         CHECK W
         L     14,REG14            RESTORE REG 14.
         SR    15,15               RETURN CODE = 0
         LA    1,MSGDCB            RETURN DCB ADDRESS IN REG 1.
         LM    2,3,REGS+4          RESTORE REGS 2 AND 3.
         BR    14                  RETURN.
         SPACE 2
***DATA AREA
REGS     DC    3F'0'
REG14    DC    F'0'
         ENTRY MSGDCB
MSGDCB   DCB   DSORG=PS,MACRF=W,RECFM=VBA,LRECL=137,BLKSIZE=141,       X
               DDNAME=MSG
         LTORG
         END
