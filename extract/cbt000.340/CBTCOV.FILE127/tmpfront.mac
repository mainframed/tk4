TEC402   TITLE 'TSO TERMINAL MONITOR PROGRAM FRONT-END'
***********************************************************************
* MEMBER: TEC402                                                      *
* MACRO LIBS NEEDED: SYS1.MACLIB                                      *
*                    SYS1.AMODGEN
* LINKAGE EDITOR PARMS: LET,NCAL,RENT,AC=1                            *
*                                                                     *
* PURPOSE:                                                            *
*        TEC402 IS USED TO:
*          (1) PREVENT A TSO USER FROM DE-ALLOCATING HIS SPFMENUS AND *
*              SPFPROCS DATA SETS. THIS KEEPS THE USER FROM BYPASSING *
*              THE LIMITS PLACED ON HIM BY THE SPF MENU TAILORING     *
*              FACILITIES. FOR EXAMPLE, IF ALLOWED TO DE-ALLOCATE     *
*              SPFMENUS AND SPFPROCS AND SUBSTITUTE OTHER DATA SETS,  *
*              A USER COULD PERFORM SPF FUNCTIONS THAT WE DON'T WANT  *
*              THAT USER TO HAVE AVAILABLE.                           *
*              NOTE: THIS FUNCTION WILL NOT BE PERFORMED FOR USERIDS  *
*              THAT BEGIN WITH 'TEC'.                                 *
*          (2) PREVENT A TSO USER FROM LOGGING ON WHEN OPERATIONS     *
*              (OR TEC SUPPORT DURING TEST TIME) DOESN'T WANT ANYONE  *
*              LOGGING ON. THIS IS MORE FLEXIBLE THAN SETTING USERMAX *
*              TO 0 SINCE IT LETS SOME PEOPLE LOG ON WHILE KEEPING    *
*              OTHERS OFF. ALSO, WE USE TCAM, NOT VTAM, AND SO CAN'T  *
*              SET USERMAX TO 0 TO KEEP PEOPLE OFF.                   *
*                                                                     *
* METHOD:                                                             *
*        THE PROGRAM IS USED AS A FRONT END TO IKJEFT01 IN THE TSO    *
*        LOGON PROC. TEC402 RACHECKS FOR READ AUTHORITY TO            *
*        APPL  TSOXXXX WHERE XXXX IS THE SMF SID FROM THE SMCA. IF    *
*        SUCCESSFUL, TEC402 OPENS THE SPFMENUS AND SPFPROCS DATA      *
*        SETS, THUS PREVENTING THEIR DE-ALLOCATION, AND THEN LINKS    *
*        TO IKJEFT01. UPON RETURN FROM IKJEFT01, THE DATA SETS ARE    *
*        CLOSED.                                                      *
*                                                                     *
* RETURN CODES:                                                       *
*        THE RETURN CODE GENERATED BY IKJEFT02 IS PROPAGATED.         *
*                                                                     *
*                                                                     *
* CHANGE LOG:                                                         *
*        12/17/79  INITIAL VERSION.                                   *
*        12/18/79  AFTER RETURN FROM IKJEFT02, FOLLOW SAVE AREA CHAIN *
*                    FROM TCBFSA TO FIND OUR WORKAREA/REGS            *
*        07/01/80  BEFORE DOING ANYTHING, RACHECK FOR READ AUTHORITY  *
*                    TO APPL  TSOXXXX WHERE XXXX IS THE SMF SYSID. IF *
*                    NOT AUTHORIZED, DO NOT ALLOW LOGON. DO NOT OPEN  *
*                    MENUS/PROCS FOR TEC USERS                        *
*        09/12/80  IF THE RACHECK IS NOT SUCCESSFUL, WAIT 15 SECONDS  *
*                    AFTER ISSUING THE MESSAGE IN CASE TSO/VTAM IS    *
*                    BEING USED SO MESSAGE CAN BE READ. NOTE THAT     *
*                    THE BROADCAST MESSAGES WILL HAVE BEEN DISPLAYED  *
*                    BEFORE OUR MESSAGE, SO THEY CAN BE USED TO       *
*                    EXPLAIN WHY TSO IS NOT AVAILABLE.                *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*     I N I T I A L I Z A T I O N                                     *
*                                                                     *
***********************************************************************
*
TEC402   CSECT
         USING *,R15                    #####
         SAVE  (14,12),,TEC402_&SYSDATE_&SYSTIME
         LR    R12,R15                  GET GOOD BASE REG
         DROP  R15                      #####
         USING TEC402,R12               #####
         LR    R2,R1                    SAVE PARM LIST
         GETMAIN R,LV=WORKLEN           GET SOME STORAGE
         ST    R13,4(,R1)               LINK SAVE AREAS
         ST    R1,8(,R13)
         LR    R13,R1                   NEW SAVE AREA POINTER
         USING WORK,R13                 #####
         ST    R2,WPARM                 SAVE PARM LIST
         MVC   WMENUDCB,CMENUDCB        COPY DCB'S TO WORK AREA
         MVC   WPROCDCB,CPROCDCB
         MVC   WOPEN,COPEN              COPY OPEN LIST TO WORK AREA
         MVC   WRACHECK,CRACHECK        COPY RACHECK LIST TO WORK AREA
         MVI   WFLAGS,X'00'             INIT FLAG BYTE
         MVC   WENTITY(8),=CL8'TSOXXXX' INIT RACF ENTITY
         MVC   WENTITY+8(L'WENTITY-8),WENTITY+7
         MVC   WNOLOGON,NOLOGON         INIT NO-LOGON MESSAGE
         XC    WRC,WRC
         EJECT
***********************************************************************
*                                                                     *
*     C H E C K   F O R   T E C   U S E R                             *
*                                                                     *
***********************************************************************
*
         L     R2,CVTPTR                CVT
         USING CVT,R2                   #####
         L     R3,CVTTCBP               TCB WORDS
         L     R3,12(,R3)               OUR ASCB
         USING ASCB,R3                  #####
         L     R3,ASCBJBNS              GET POINTER TO JOBNAME
         DROP  R3                       #####
         CLC   =C'TEC',0(R3)            IS IT TEC?
         BNE   RACHECK                  /NO  - GO DO RACHECK
         OI    WFLAGS,WTECUSER          /YES - SET FLAG AND RACHECK
         EJECT
***********************************************************************
*                                                                     *
*     R A C H E C K   F O R   L O G O N   A L L O W E D               *
*                                                                     *
***********************************************************************
*
RACHECK  L     R3,CVTSMCA               POINT TO SMCA
         USING SMCABASE,R3              #####
         MVC   WENTITY+3(4),SMCASID     COMPLETE ENTITY NAME FROM SID
         MVC   WNOLOGON+47(4),SMCASID   COMPLETE NO-LOGON MESSAGE
         DROP  R3                       #####
         RACSTAT ,                      ENSURE RACF AVAILABLE
         LTR   R15,R15
         BNZ   CHEKDEV
         RACHECK ENTITY=(WENTITY),      DO THE RACHECK                 X
               MF=(E,WRACHECK)
         LTR   R15,R15                  WAS USER AUTHORIZED?
         BZ    CHEKDEV                  /YES - ALLOW LOGON TO CONTINUE
         C     R15,=F'4'                WAS ENTITY FOUND?
         BE    CHEKDEV                  /NO  - ALLOW LOGON TO CONTINUE
*                                       /YES - DISALLOW LOGON
         L     R3,CVTTCBP               SETUP RELOGON BUFFER
         L     R3,4(,R3)                TCB
         USING TCB,R3                   #####
         L     R3,TCBJSCB               JSCB
         USING IEZJSCB,R3               #####
         L     R3,JSCBPSCB              PSCB
         USING PSCB,R3                  #####
         L     R3,PSCBRLGB              THE RELOGON BUFFER
         DROP  R3                       #####
         MVC   6(6,R3),=C'LOGOFF'       SETUP LOGOFF COMMAND
         LA    R3,WNOLOGON
         TPUT  (R3),L'WNOLOGON,WAIT,HOLD  SEND THE MESSAGE
         STIMER WAIT,BINTVL=WAITTIME    WAIT TO ALLOW TIME FOR MSG
         B     RETURN                   TO BE READ
         EJECT
***********************************************************************
*                                                                     *
*     C H E C K   F O R   M I S S I N G   D D   S T A T E M E N T S   *
*                                                                     *
***********************************************************************
*
CHEKDEV  TM    WFLAGS,WTECUSER          IS THIS A TEC USER?
         BO    LINK                     /YES - DON'T OPEN MENUS/PROCS
         DEVTYPE CSPFMENU,WDEVCHAR      IS SPFMENUS DD STMT THERE?
         LTR   R15,R15                    .
         BNZ   TRYPROCS                 /NO  - GO TRY SPFPROCS DD
         OI    WFLAGS,WMENUDD           /YES - SET FLAG SO WE OPEN IT
*
TRYPROCS DEVTYPE CSPFPROC,WDEVCHAR      IS SPFPROCS DD STMT THERE?
         LTR   R15,R15                    .
         BNZ   OPENMENU                 /NO  - GO OPEN THINGS
         OI    WFLAGS,WPROCDD           /YES - SET FLAG SO WE OPEN IT
         EJECT
***********************************************************************
*                                                                     *
*     O P E N   D C B ' S   I F   N E C E S S A R Y                   *
*                                                                     *
* (WE ASSUME THE OPEN'S WILL WORK, AS ALLOCATION WAS SUCCESSFUL AND   *
*  WE KNOW WHAT THE LOGON PROCS CONTAIN)                              *
***********************************************************************
*
OPENMENU TM    WFLAGS,WMENUDD           SHOULD WE OPEN THE MENUS DD?
         BZ    OPENPROC                 /NO  - GO TRY PROCS DD
         OPEN  (WMENUDCB,INPUT),        /YES - OPEN IT                 X
               MF=(E,WOPEN)
*
OPENPROC TM    WFLAGS,WPROCDD           SHOULD WE OPEN THE PROCS DD?
         BZ    LINK                     /NO  - GO LINK TO IKJEFT01
         OPEN  (WPROCDCB,INPUT),        /YES - OPEN IT                 X
               MF=(E,WOPEN)
         EJECT
***********************************************************************
*                                                                     *
*     L I N K   T O   I K J E F T 0 1 ( T M P )                       *
*                                                                     *
***********************************************************************
*
LINK     L     R1,WPARM                 GET THE PARM LIST
         LINK  EP=IKJEFT01              LINK TO IKJEFT01 TO START TSO
*                                       SESSION
*
* AT THIS POINT NONE OF THE REGS ARE GOOD, SO WE MUST FIND THEM AGAIN
*
*
         L     R2,CVTPTR                CVT
         USING CVT,R2                   #####
         L     R2,CVTTCBP               TCB WORDS
         L     R2,4(,R2)                OUR TCB
         USING TCB,R2                   #####
         L     R13,TCBFSA               FIRST SAVE AREA IN CHAIN
         L     R13,8(,R13)              OUR WORKAREA
         LM    R2,R12,28(R13)           OUR REGS
         DROP  R2                       #####
         ST    R15,WRC                  SAVE THE RETURN CODE
         EJECT
***********************************************************************
*                                                                     *
*     C L O S E   T H E   D C B ' S                                   *
*                                                                     *
***********************************************************************
*
         TM    WFLAGS,WMENUDD           WAS MENU DD OPENED?
         BZ    CLOSPROC                 /NO  - GO TRY PROCS
         CLOSE (WMENUDCB),MF=(E,WOPEN)  /YES - CLOSE IT
*
CLOSPROC TM    WFLAGS,WPROCDD           WAS PROC DD OPENED?
         BZ    RETURN                   /NO  - GO RETURN
         CLOSE (WPROCDCB),MF=(E,WOPEN)  /YES - CLOSE IT
         EJECT
***********************************************************************
*                                                                     *
*     F R E E   W O R K   A R E A   A N D   L E A V E                 *
*                                                                     *
***********************************************************************
*
RETURN   L     R2,WRC                   SAVE THE RETURN CODE
         LR    R1,R13                   GET ADDRESS TO FREE
         L     R13,4(,R13)              GET PREVIOUS SAVE AREA
         FREEMAIN R,A=(1),LV=WORKLEN    FREE THE GOTTEN AREA
         LR    R15,R2                   SET THE RETURN CODE
         RETURN (14,12),RC=(15)         RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*     C O N S T A N T S ,   E T C .                                   *
*                                                                     *
***********************************************************************
*
         DS    0F
CSPFMENU DC    CL8'SPFMENUS'            CONSTANTS FOR DEVTYPE
CSPFPROC DC    CL8'SPFPROCS'              .
WAITTIME DC    F'1500'                  FIFTEEN SECOND INTERVAL
CMENUDCB DCB   DDNAME=SPFMENUS,         CONSTANT DCB FOR SPFMENUS      X
               DSORG=PS,                  (PS SO DD DUMMY WILL WORK)   X
               MACRF=R                    (FOR BSAM)
LMENUDCB EQU   *-CMENUDCB               LENGTH OF MENU DCB
         DS    0F
CPROCDCB DCB   DDNAME=SPFPROCS,         CONSTANT DCB FOR SPFPROCS      X
               DSORG=PS,                  (PS SO DD DUMMY WILL WORK)   X
               MACRF=R                    (FOR BSAM)
LPROCDCB EQU   *-CPROCDCB               LENGTH OF PROC DCB
         DS    0F
COPEN    OPEN  (CMENUDCB,INPUT),MF=L    CONSTANT OPEN LIST
LOPEN    EQU   *-COPEN
         DS    0F
CRACHECK RACHECK CLASS='APPL',          CONSTANT RACHECK LIST          X
               ATTR=READ,                                              X
               LOG=NONE,                                               X
               MF=L
LRACHECK EQU   *-CRACHECK
*
NOLOGON  DC    C'TEC40200 TSO IS NOT AVAILABLE AT THIS TIME (TSOXXXX)'
         LTORG ,
         REGEQU
         EJECT
***********************************************************************
*                                                                     *
*     W O R K   A R E A   D S E C T                                   *
*                                                                     *
***********************************************************************
*
WORK     DSECT
         DS    18F                      SAVE AREA (MUST BE FIRST)
WDEVCHAR DS    D                        AREA FOR DEVTYPE INFO
WMENUDCB DS    XL(LMENUDCB)             AREA FOR SPFMENUS DCB
         DS    0F
WPROCDCB DS    XL(LPROCDCB)             AREA FOR SPFPROCS DCB
         DS    0F
WOPEN    DS    XL(LOPEN)                AREA FOR OPEN LIST
         DS    0F
WRACHECK DS    XL(LRACHECK)             AREA FOR OPEN LIST
WPARM    DS    A                        AREA TO SAVE PARM POINTER (R1)
WRC      DS    F                        AREA TO SAVE IKJEFT02 RC
WFLAGS   DS    X                        FLAG BYTE:
WMENUDD  EQU   X'80'                      SPFMENUS DD PRESENT
WPROCDD  EQU   X'40'                      SPFPROCS DD PRESENT
WTECUSER EQU   X'20'                      USER IS A 'TEC' USER
WENTITY  DS    CL39                     ENTITY FOR RACHECK
WNOLOGON DS    CL(L'NOLOGON)            MODIFIABLE NO-LOGON MESSAGE
WORKLEN  EQU   *-WORK                   LENGTH OF WORK AREA
         EJECT
***********************************************************************
*                                                                     *
*     O T H E R   D S E C T S                                         *
*                                                                     *
***********************************************************************
*
         PRINT NOGEN
         CVT   DSECT=YES
         IEESMCA
         IEZJSCB
         IHAASCB
         IKJPSCB
         IKJTCB
         END   TEC402
