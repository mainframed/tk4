TEC019   TITLE 'RAINIER BANK SUBMIT EXIT IKJEFF10'
***********************************************************************
*                      COPYRIGHT: 1978 RAINIER NATIONAL BANK          *
*                                      SEATTLE WASHINGTON             *
*                                      (206) 433-7467                 *
* MEMBER: TEC019                                                      *
* SMP USERMOD: PZ00037             (BLANK MEANS NOT INSTALLED BY SMP) *
* LOAD LIB:   LINKLST LIBRARY  (SYS1.LINKLIB)                         *
* MACRO LIBS NEEDED: SYS1.MACLIB                                      *
*                    SYS1.AMODGEN                                     *
*                    TEC.RACF.MACLIB                                  *
*                    TEC.SYSTEM.MACLIB   (SHOULD BE LAST)             *
* LINKAGE EDITOR PARMS: RENT,REUS                                     *
*                                                                     *
* PURPOSE:                                                            *
*                                                                     *
*        (1) ENSURE THAT EACH SUBMITTED JOB CONTAINS A RACF USERID AND*
*            PASSWORD ON THE JOBCARD, IF THE SUBMITTER IS RACF DEFINED*
*            AND IF RACF IS AVAILABLE.                                *
*                                                                     *
*        (2) FOR JOBS SUBMITTED VIA PJS, USE THE APPROPRIATE          *
*            PRODUCTION USERID AND PASSWORD (IF THE USER IS AUTHORIZED*
*            VIA THE RACF USER INFO TO USE A PROD USERID)             *
*                                                                     *
*        (3) IF THE JOB CONTAINS SETUP CARDS, INVOKE MSPRINT TO PRINT *
*            THEM ON THE PRINTER IN THE TAPE LIBRARY SO THE TAPES WILL*
*            BE STAGED                                                *
*                                                                     *
*        (4) IF THE SETUP CARD CONTAINS A                             *
*            DSNAME INSTEAD OF A VOLUME SERIAL, DETERMINE THE CORRECT *
*            VOLUME SERIAL AND MODIFY THE SETUP CARD ACCORDINGLY      *
*                                                                     *
*        (5) THIS VERSION OF IKJEFF10 CAN ALSO PUT THE CURRENT        *
*            CONNECT GROUP ON THE JOB CARD, IF DESIRED. THIS CAN BE   *
*            DONE FOR ALL USERS OR SELECTED BASED ON THE INSTALLATION *
*            DATA IN THE USER ENTRY.                                  *
*                                                                     *
*        (6) IF THIS EXIT IS INVOKED FROM A BACKGROUND SUBMIT, AND    *
*            THAT SUBMIT IS RUNNING AS PART OF A STARTED TASK, A      *
*            SPECIAL PRODUCTION USERID OF 'STCPROD' WILL BE USED TO   *
*            ALLOW ACCESS TO RACF PROTECTED RESOURCES BY THE SUBMITTED*
*            JOB.                                                     *
*                                                                     *
* INPUT:                                                              *
*                                                                     *
*        SEE IKJEFFIE EXPANSION BELOW OR MANUAL GC28-0629, OS/VS2 MVS *
*        SPL: TSO                                                     *
*                                                                     *
* ENVIRONMENT:                                                        *
*                                                                     *
*        SUPERVISOR STATE, KEY 1 (SCHEDULER KEY)                      *
*           (SOME USE OF KEY 0, TOO)                                  *
*        MODULE MUST RESIDE IN A LINK LIST DATA SET, MEMBER IKJEFF10  *
*        MODULE MUST BE RENTERABLE, REUSABLE, AND REFRESHABLE         *
*                                                                     *
*                                                                     *
* RETURN CODES:                                                       *
* 0   - PROCESS CURRENT STATEMENT AND READ THE NEXT                   *
* 4   - PROCESS CURRENT STATEMENT AND INVOKE EXIT TO SUPPLY NEXT      *
* 8   - DISPLAY MESSAGE IKJ56283I AND REINVOKE THE EXIT ROUTINE       *
* 16  - TERMINATE THE SUBMIT COMMAND                                  *
*                                                                     *
*                                                                     *
* CHANGE LOG:                                                         *
*     7/30/80  ERIC ESTEB MODIFIED THIS HEADING TO CONFORM TO         *
*              OUR TEC SUPPORT CONVENTIONS, AND CHANGED THE SETUP     *
*              PROCESSING SO ALL TAPES WILL BE CALLED FOR WHEN A      *
*              DSN HAS BEEN SPECIFIED.                                *
* 002 1/19/81  WALT FARRELL:                                          *
*                (1) MODIFIED RACF LOGGING FOR PJS TO USE CLASS NAME  *
*                    #PJS# INSTEAD OF *PJS* AND TO SPECIFY THE        *
*                    OLDDSNM DATA TYPE INSTEAD OF THE ENTITYNM DATA   *
*                    TYPE SO THE RACF REPORT WRITER WILL FORMAT       *
*                    THE RECORDS BETTER.                              *
* COMMENTS:                                                           *
***********************************************************************
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        MACROS                                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         MACRO
&LABEL   MSG   &TEXT
         LCLA  &LEN
&LEN     SETA  K'&TEXT
&LABEL   DC    H'&LEN',C&TEXT
         MEND
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ENTER HERE                                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IKJEFF10 CSECT
         USING *,R15               #####
         SAVE  (14,12),,IKJEFF10_&SYSDATE_&SYSTIME
         LR    R12,R15             GET GOOD BASE REGS
         LA    R10,4095(,R12)
         LA    R10,1(,R10)
         DROP  R15                 #####
         USING IKJEFF10,R12,R10    #####
         L     R11,0(,R1)          GET BASE FOR INPUT PARMS
         USING IEEXITL,R11         #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SPECIAL CODE TO ALLOW FOR SELECTIVE ENABLING OR              *
*        FOR TOTAL DISABLING OF THIS EXIT                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         B     CONT             ******* CHANGE TO NO-OP TO
*                               ******* DISABLE IKJEFF10 COMPLETELY
DISABLE  L     R1,IESUBCTP
         USING IESUBCTD,R1         #####
         MVI   IETAKEEX,0          SET SWITCHES TO NOT CALL US AGAIN
         DROP  R1                  #####
         SR    R15,R15             SET GOOD RETURN CODE
         B     EXITX               GO RESTORE REGS AND RETURN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        INITIALIZATION                                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CONT     LR    R6,R13              SAVE R13 FOR NOW
         ICM   R13,7,IEEXITWD+1    DO WE HAVE A WORKAREA ALREADY?
         BNZ   CONT2               /YES
*                                  /NO  - MUST OBTAIN ONE
         LA    R3,230              GET WORKAREA IN SP 230
         SLL   R3,24
         O     R3,=A(WORKLEN)      SET UP LENGTH TO GET
         GETMAIN R,LV=(R3)         OBTAIN THE STORAGE IN SUBPOOL 230
         STCM  R1,7,IEEXITWD+1     SAVE WORKAREA ADDRESS
*                                  CLEAR THE WORKAREA:
         LR    R2,R1                 TARGET ADDRESS
         L     R3,=A(WORKLEN)        TARGET LENGTH
         BALR  R4,0                  DUMMY SOURCE ADDRESS
         SR    R5,R5                 LENGTH=0, PAD=0
         MVCL  R2,R4                 ZERO THE WORKAREA
         LR    R13,R1              PROVIDE BASE FOR WORKAREA
         USING WORKA,R13           #####
CONT2    ST    R6,WORKA+4          LINK SAVE AREAS
         ST    R13,8(,R6)
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        INITIALIZATION, PAGE 2                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
INIT     TM    WFLAGS,WINIT        ALREADY INITIALIZED?
         BO    PROCESS             /YES - SKIP ALL THIS STUFF
*                                  /NO  - CHECK ENVIRONMENT
*
         BAL   R14,CHEKRACF        SEE IF RACF IS ACTIVE
         BAL   R14,CHEKPJS         SEE IF CALLER IS PJS
         TM    WFLAGS,WRACF        IS RACF ACTIVE FOR THIS USER?
         BZ    INITDONE            /NO  - DONE WITH INITIALIZATION
         TM    WFLAGS,WPJS         PJS SUBMISSION?
         BO    INITPJS             /YES - SETUP PRODUCTION UID
         L     R1,WACEE            /NO  - CHECK FOR STC, TSO, OR BATCH
         USING ACEE,R1             #####
         CLI   ACEEPROC,C' '       RUNNING AS A STARTED TASK?
         BNE   INITSTC             /YES - NEED STCPROD AND ITS PASSWORD
*                                  /NO  - CHECK IF TSO USER OR BATCH
         L     R1,WASCB            GET ASCB ADDR
         USING ASCB,R1             #####
         ICM   R1,7,ASCBTSB+1      IS THERE A TSB?
         BZ    INITBTCH            /NO  - INIT FOR BATCH JOB
*                                  /YES - GET TSO USER'S PSWD FROM TSB
         USING TSB,R1              #####
***********************************************************************
*          K E Y   Z E R O   C O D E   F O L L O W S                  *
***********************************************************************
         MODESET EXTKEY=ZERO       TSB IS FETCH PROTECTED, SO USE KEY 0
         MVC     WPSWD,TSBPSWD     GET TSO USER'S PASSWORD
         MODESET EXTKEY=SCHED      BACK TO SCHEDULER KEY
***********************************************************************
*          E N D   K E Y   Z E R O   C O D E                          *
***********************************************************************
         DROP  R1                  #####
         B     INITDONE            DONE WITH INITIALIZATION
*
*
*
INITSTC  MVC   WUSERID(3),=C'STC'   USERID FOR STC IS STCPROD
INITPJS  MVC   WUSERID+3(4),=C'PROD' USERID FOR PJS IS ...PROD
         MVI   WUSERIDL,7          USERID LENGTH IS 7 FOR PJS OR STC
*                                  SETUP FOR RACF INVENTORY MANAGER
         MVC   WINTY,CINTY         INIT LIST FORMS OF INVENTORY MACROS
         MVC   WACT,CACT
         MVC   WTST,CTST
         MVC   WKAREA(4),=A(L'WKAREA) INIT RETRIEVAL AREA
         ICHEACTN                                                      X
               TESTS=WTST,         INIT ICHEACTN WITH TEST ADDRESS     X
               MF=(E,WACT)
         ICHEINTY LOCATE,          RETRIEVE THE PJS PASSWORD           X
               TYPE='USR',                                             X
               ENTRY=WUSER,                                            X
               ACTIONS=WACT,                                           X
               TESTS=WTST,                                             X
               WKAREA=WKAREA,                                          X
               OPTIONS=(TESTM,FLDEF),                                  X
               MF=(E,WINTY)
         LTR   R15,R15             WAS ENTRY WITH CORRECT USER DATA
         BNZ   ERROR1              (I.E. PJS PASSWORD) FOUND?  /NO
         CLI   WKAREA+30,8         IS LENGTH OF RETURNED PASSWORD OK?
         BNE   ERROR22             /NO
         MVC   WPSWD,WKAREA+31     /YES - SAVE THE (ENCRYPTED) PASSWORD
         OI    WFLAGS2,WDECRYPT    SHOW PASSWORD MUST BE DECRYPTED
         B     INITDONE
INITBTCH L     R1,WACEE            GET ACEE ADDR
         USING ACEE,R1             #####
         ICM   R1,7,ACEEIEP+1      DOES ACEE HAVE AN INSTALLATION AREA?
         BZ    NORACF              /NO
*                                  /YES - USE IT
         USING RNBACEE,R1          #####
         CLC   RNBAKEY,=C'RNBA'    IS IT REALLY OUR AREA?
         BNE   NORACF              /NO
         TM    RNBAFLAG,RNBAPOK    IS THE PASSWORD AVAILABLE?
         BZ    NORACF              /NO
         MVC   WPSWD,RNBAPSWD      /YES - SAVE THE (ENCRYPTED) PASSWORD
         OI    WFLAGS2,WDECRYPT    SHOW PASSWORD MUST BE DECRYPTED
         B     INITDONE
NORACF   NI    WFLAGS,X'FF'-WRACF  FOR BATCH W/OUT RNBACEE, NO RACF
*                                  INFO AVAIL, SO NO UID/PSWD
INITDONE OI    WFLAGS,WINIT        SHOW INITIALIZATION DONE
         DROP  R1                  #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS INPUT                                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
PROCESS  TM    WFLAGS,WERROR       ERROR ON LAST CALL?
         BO    ERROR               /YES - GO PROCESS IT
*                                  /NO  - CONTINUE
         L     R1,IECARDP          GET POINTER TO CARD
         LA    R1,0(,R1)           CLEAR HI-BYTE
         LTR   R1,R1               ANY CARD TO PROCESS?
         BZ    INSERT              /NO  - GO INSERT ONE
*                                  /YES
         L     R14,IESUBCTP
         USING IESUBCTD,R14        #####
         TM    IESTMTYP,IESCONTN   IS THIS CARD A CONTINUATION?
         BO    CONTIN              /YES - GO PROCESS IT
*                                  /NO  - NEW CARD
         TM    IESTMTYP,IESJOB     JOB CARD?
         BO    NEWJOB              /YES - PROCESS IT
*                                  /NO
         TM    IESTMTYP,IESEXEC    EXEC CARD?
         BO    NEWEXEC             /YES - PROCESS IT
*                                  /NO
         TM    IESTMTYP,IESNULL    NULL STMT?
         BO    NULL                /YES - PROCESS IT
*                                  /NO
         DROP  R14                 #####
         CLC   =C'/*SETUP',0(R1)   IS IT A SETUP CARD?
         BE    SETUP               /YES - PROCESS IT
*                                  /NO
         TM    WFLAGS,WSETUP       SETUP FOUND PREVIOUSLY?
         BZ    EXIT                /NO  - DON'T CHECK FOR COMMENTS
*                                  /YES
         CLC   =C'//*',0(R1)       COMMENT CARD?
         BNE   EXIT                /NO  - ALL DONE FOR NOW
         BAL   R14,SAVECARD        /YES - SAVE IT FOR MSPRINT
         B     EXIT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        RETURN TO SUBMIT                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
EXIT     LA    R15,IECONTIN        TELL SUBMIT TO CONTINUE
EXITRC   L     R13,4(,R13)         GET CALLER'S SAVEAREA
EXITX    RETURN (14,12),RC=(15)    AND RETURN WITH SOME RETURN CODE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        INSERT A CARD                                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
INSERT   DS    0H
         TM    WFLAGS2,WSETINSF    IS THIS A SETUP INSERT?
         BO    SETINSRT            /YES - DO A SETUP INSERT
         TM    WFLAGS2,WINS1       DOES 1ST SLOT HAVE A CARD IN IT?
         BZ    INSERT2             /NO  - USE THE SECOND ONE
         NI    WFLAGS2,X'FF'-WINS1 /YES - UNFLAG THE SLOT
         LA    R2,WCRD1             AND PASS IT
         ST    R2,IECARDP           TO SUBMIT
         LA    R15,IERETURN        SET TO REENTER FOR NEXT CARD
         B     EXITRC              EXIT WITH RC SET
INSERT2  TM    WFLAGS2,WINS2       DOES 2ND SLOT HAVE A CARD IN IT?
         BZ    ERROR16             /NO  - ERROR
         NI    WFLAGS2,X'FF'-WINS2 /YES - UNFLAG THE SLOT
         LA    R2,WCRD2             AND PASS IT
         ST    R2,IECARDP           TO SUBMIT
         B     EXIT                EXIT WITH RC=0
         SPACE 3
SETINSRT DS    0H
         LA    R2,WCRD1
         ST    R2,IECARDP
         MVC   WCRD1(7),=C'/*SETUP'
         MVI   WCRD1+7,C' '
         B     LOCOK
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS CONTINUATION CARD                                    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CONTIN   L     R14,IESUBCTP
         USING IESUBCTD,R14        #####
         TM    IESTMTYP,IESJOB     CONTINUED JOB CARD?
         BZ    EXIT                /NO  - DON'T PROCESS IT
*                                  /YES
         DROP  R14                 #####
         TM    WFLAGS,WCONT        OPERAND CONTINUED FROM PREV CARD?
         BO    SCANJOB             /YES - GO SCAN IT
         B     EXIT                /NO  - SKIP THIS CARD
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS START OF JOB STATEMENT                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
NEWJOB   L     R14,IESUBCTP
         USING IESUBCTD,R14        #####
         MVI   IETAKEEX,EXSW1      SET SWITCHES FOR STATEMENTS WE WANT
*                                  TO PROCESS
         DROP  R14                 #####
         BAL   R14,CHKMSPR         SEE IF MSPRINT NEEDED YET
         XC    WACOMMAP,WACOMMAP
         XC    WACOMMAC,WACOMMAC
         XC    WPAR,WPAR
         XC    WCRDCNT,WCRDCNT     INIT SETUP SAVE AREA
         LA    R4,WCRDSAV
         ST    R4,WCRDPTR
         NI    WFLAGS2,X'FF'-WGFND INIT FLAGS2
         NI    WFLAGS,X'FF'-(WUFND+WPFND)   RE-INIT FLAGS
         MVC   WJOBNAME(8),=CL80' '  INIT SAVED JOB NAME
         LA    R4,WJOBNAME         COPY JOBNAME
         L     R5,IECARDP          FROM JOBCARD:
         LA    R5,2(,R5)             BYPASS //
         LA    R6,8                  MAX LENGTH OF NAME
JNAMLOOP CLI   0(R5),C' '            END OF NAME?
         BE    JNAMDONE              /YES - END LOOP
         MVC   0(1,R4),0(R5)         /NO  - MOVE A CHAR
         LA    R4,1(,R4)             BUMP TO NEXT POS
         LA    R5,1(,R5)
         BCT   R6,JNAMLOOP           LOOP IF MORE
JNAMDONE EQU   *
         TM    WFLAGS,WPJS         IS THIS PJS?
         BZ    SCANJOB             /NO  - GO SCAN THE JOB CARD
*                                  /YES
         TM    WFLAGS2,WLOG        IS LOGGING REQUIRED?
         BZ    SCANJOB             /NO  - GO SCAN THE JOB CARD
         SH    R6,=H'8'            GET LENGTH OF JOBNAME
         LPR   R6,R6
         STC   R6,WLOGJOB          SET RESOURCE NAME LENGTH
         MVC   WLOGJOB+1(8),WJOBNAME  SET THE RESOURCE NAME
         BAL   R14,LOGIT           /YES - GO LOG THIS USE OF PJS
         NI    WFLAGS2,X'FF'-WLOG  DON'T LOG ANY MORE
         B     SCANJOB             GO SCAN THE CARD
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS EXEC OR NULL STATEMENT                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
NULL     EQU   *
NEWEXEC  L     R14,IESUBCTP
         USING IESUBCTD,R14        #####
         MVI   IETAKEEX,EXSW2      SET SWITCHES FOR STATEMENTS WE WANT
*                                  TO PROCESS
         DROP  R14                 #####
         BAL   R14,CHKMSPR         SEE IF MSPRINT NEEDED YET
         B     EXIT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS SETUP CARD                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SETUP    TM    WFLAGS,WSETUP       PREVIOUS SETUP FOUND?
         BO    SETUP2              /YES - HAVE SETUP BUFFER ALREADY
         BAL   R14,GETMSP          /NO  - NEED SETUP BUFFER
         OI    WFLAGS,WSETUP       SHOW SETUP CARD FOUND
*
SETUP2   L     R2,IECARDP          GET POINTER TO CARD
         LA    R2,8(,R2)           POINT PAST '/*SETUP '
         LA    R14,63              LENGTH TO SCAN
SETUP3   CLI   0(R2),C' '          SKIP BLANKS
         BNE   SETUP4
         LA    R2,1(,R2)
         BCT   R14,SETUP3
         B     BYLOC               ALL BLANK, JUST OUTPUT CARD
SETUP4   CLI   0(R2),C'0'          DOES SETUP HAVE DSNAME?
         BNL   BYLOC               /NO  - SKIP LOCATE
*                                  /YES
         MVC   WCAMLST,CAMLST      INIT CAMLST
         MVC   WDSN,0(R2)          MOVE DSNAME TO WORK AREA
         LA    R14,WDSN            POINT TO DSNAME
         ST    R14,WCAMLST+4       AND STUFF ADDR INTO CAMLST
         LA    R14,WLOCATE         PUT ADDRESS OF OUTPUT AREA INTO
         ST    R14,WCAMLST+12      CAMLST
         LA    R14,WLOCATE+2       PUT ADDRESS OF FIRST VOLUME INTO
         ST    R14,WVOLADDR        ADDRESS OF CURRENT VOLUME
         LOCATE WCAMLST            GET CATLG INFO
         CH    R15,=H'28'          RC > 28?
         BH    ERROR10             /YES - UNKNOWN ERROR
         B     *+4(R15)            /NO  - BRANCH ON RETURN CODE
         B     LOCOK                 RC=0, OK
         B     ERROR11               RC=4, CATALOG NOT AVAIL
         B     ERROR12               RC=8, DSN NOT CATALOGED
         B     ERROR10               RC=12,UNKNOWN ERROR
         B     ERROR10               RC=16,UNKNOWN ERROR
         B     ERROR13               RC=20,SYNTAX ERROR IN DSNAME
         B     ERROR10               RC=24,UNKNOWN ERROR
         B     ERROR14               RC=28,TTR NOT AVAILABLE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PROCESS SETUP CARD, PAGE  2                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LOCOK    DS    0H
         NI    WFLAGS2,X'FF'-WSETINSF  UNFLAG THE SETUP INSERT FLAG
         LH    R15,WLOCATE         GET NUMBER OF VOLUMES
         CH    R15,=H'8'           MORE THAN 8 VOLUMES?
         BNH   LOCLE8              /NO  - USE ALL OF THEM
         OI    WFLAGS2,WSETINSF    FLAG THE SETUP INSERT FLAG
         SH    R15,=H'8'           REDUCE THE NUMBER OF VOLUMES BY 8
         STH   R15,WLOCATE         SAVE IN THE LOCATE COUNT
         LA    R15,8               /YES - LIMIT TO 8 ENTRIES PER CARD
LOCLE8   L     R14,WVOLADDR        GET ADDRESS OF CURRENT VOLSER
         L     R2,IECARDP          POINT TO COL 16
         MVC   8(64,R2),=CL80' '   BLANK OUT CARD AFTER '/*SETUP '
         LA    R2,15(,R2)
         MVC   0(6,R2),4(R14)      MOVE 1ST VOLSER TO SETUP CARD
         LA    R2,6(,R2)           NEXT OUTPUT LOCATION
         B     LOCDE1              GO INTO LOOP
LOCDL1   MVI   0(R2),C','          MOVE COMMA AFTER VOLSER
         LA    R14,12(,R14)        BUMP TO NEXT ENTRY IN LOCATE AREA
         MVC   1(6,R2),4(R14)      MOVE THE NEXT VOLSER TO SETUP CARD
         LA    R2,7(,R2)           BUMP TO NEXT OUTPUT SPACE
LOCDE1   BCT   R15,LOCDL1          LOOP IF MORE ENTRIES
         LA    R14,12(,R14)        BUMP TO NEXT ENTRY IN LOCATE AREA
         ST    R14,WVOLADDR        SAVE CURRENT TAPE ADDRESS
BYLOC    BAL   R14,SAVECARD        SAVE FOR MSPRINT
         TM    WFLAGS2,WSETINSF    DO WE NEED TO INSERT A CARD?
         BZ    EXIT                /YES - PROCESS NEXT CARD?
         LA    R15,IERETURN
         B     EXITRC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SCAN JOB CARD                                                *
*                                                                     *
*        R1 = COLUMN NUMBER BEING SCANNED (1,2,...71)                 *
*        R2 = POINTER TO CHAR BEING SCANNED                           *
*        R3 = COUNT OF UNBALANCED LEFT PARENS                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SCANJOB  L     R2,IESUBCTP
         USING IESUBCTD,R2         #####
         SR    R1,R1               SET UP COLUMN COUNTER
         IC    R1,IEOPRAND
         DROP  R2                  #####
         CH    R1,=H'4'            OPERAND WITHIN BOUNDS?
         BL    ERROR21             /NO  - SOMETHING STRANGE GOING ON
         L     R2,IECARDP          SET SCAN PTR TO 1ST OPRND COL:
         LA    R2,0(,R2)             A(CARD)
         BCTR  R2,0                  - 1
         AR    R2,R1                 + COLUMN NUMBER(1,2,...71)
         L     R3,WPAR             GET SAVED PAREN COUNT
         MVI   WAPREV,C','         INIT PREV CHAR
DOSCAN   CLI   0(R2),C','          COMMA?
         BE    GOTCOMMA            /YES - GO PROCESS
*                                  /NO
         CLI   0(R2),C''''         QUOTE MARK?
         BE    GOTQUOTE            /YES - GO PROCESS
*                                  /NO
         CLI   0(R2),C'('          LEFT PAREN?
         BE    GOTLPAR             /YES - GO PROCESS
*                                  /NO
         CLI   0(R2),C')'          RIGHT PAREN?
         BE    GOTRPAR             /YES - GO PROCESS
*                                  /NO
         CLI   0(R2),C' '          BLANK?
         BE    GOTBLANK            /YES - GO PROCESS
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        NOT AN IMPORTANT CHARACTER, CHECK FOR KEYWORDS               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LTR   R3,R3               WITHIN PARENS?
         BNZ   NEXTCHAR            /YES - SKIP SCAN, KEYWORD NOT POSS.
         CLI   WAPREV,C','         SKIP KEYWORD SCAN IF NOT AT START
         BNE   NEXTCHAR            OF A POSSIBLE FIELD
         CH    R1,=H'66'           SCANNING COL 65 OR LESS?
         BNL   KEYUSER             /NO  - CAN'T BE GROUP=
         CLC   =C'GROUP=',0(R2)    /YES - CHECK FOR GROUP=
         BNE   KEYUSER             GO CHECK USER=
         LA    R1,5(,R1)           /FOUND GROUP=, BYPASS IT
         LA    R2,5(,R2)
         OI    WFLAGS2,WGFND       REMEMBER GROUP= FOUND
         B     NEXTCHAR            GO SCAN NEXT CHAR
KEYUSER  CH    R1,=H'66'           SCANNING COL 66 OR LESS?
         BH    KEYPSWD             /NO  - CAN'T BE USER=
*                                  /YES
         CLC   =C'USER=',0(R2)     USER=?
         BNE   KEYPSWD             /NO  - CHECK FOR PASSWORD
*                                  /YES - CHECK THE USERID
         LA    R1,5(,R1)           BUMP COL CTR AND SCAN PTR
         LA    R2,5(,R2)
         CLI   0(R2),C'('          USERID WITHIN PARENS?
         BNE   CHKUSID             /NO  - GO CHECK IT
*                                  /YES - ACCOUNT FOR PARENS
         LA    R3,1(,R3)           BUMP PAREN COUNT
         LA    R1,1(,R1)           SKIP PAREN
         LA    R2,1(,R2)
CHKUSID  TM    WFLAGS,WPJS         IS THIS PJS?
         BO    USOK                /YES - ALLOW USERID ON CARD
*                                  /NO  - ENSURE USERID'S MATCH
         L     R4,IEUSRIDP         GET USER'S TRUE USERID
         LA    R5,8                MAX LENGTH
CHKUSL   CLC   0(1,R4),0(R2)       DOES THIS CHARACTER MATCH?
         BNE   ERROR4              /NO  - ERROR
         LA    R4,1(,R4)           /YES - BUMP TO NEXT TRUE CHAR
         CLI   0(R4),C' '          END OF TRUE USERID?
         BE    CHKUSCOL            /YES - CHECK ENDING COL #
         BCT   R5,CHKBMP           /MAYBE - LOOP IF NOT AT MAX
         B     CHKUSCOL
CHKBMP   LA    R1,1(,R1)           MORE TO SCAN, BUMP CARD POINTERS
         LA    R2,1(,R2)
         B     CHKUSL
CHKUSCOL CH    R1,=H'71'           DID USERID END WITHIN USABLE CARD?
         BH    ERROR4              /NO  - ERROR
USOK     OI    WFLAGS,WUFND        /YES - REMEMBER USERID FOUND
         B     NEXTCHAR            SCAN NEXT CHARACTER
*
KEYPSWD  CH    R1,=H'61'           CAN PASSWORD= FIT ON CARD?
         BH    NEXTCHAR            /NO  - SCAN NEXT CHAR
*                                  /YES
         CLC   =C'PASSWORD=',0(R2)   IS THIS 'PASSWORD=' ?
         BNE   NEXTCHAR            /NO  - NEXT CHARACTER
*                                  /YES
         LA    R1,8(,R1)           BYPASS THE KEYWORD AND '=' SIGN
         LA    R2,8(,R2)
         OI    WFLAGS,WPFND        REMEMBER PASSWORD FOUND
         B     NEXTCHAR            SCAN NEXT CHAR
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        POSITION TO NEXT CHARACTER                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
NEXTCHAR MVC   WAPREV,0(R2)        SAVE CURRENT CHAR AS PREV
         LA    R1,1(,R1)           BUMP TO NEXT CHAR
         LA    R2,1(,R2)
         CH    R1,=H'71'           STILL WITHIN 1..71?
         BH    GOTBLANK            /NO  - TREAT AS END OF OPERAND
         B     DOSCAN              GO EXAMINE CHARACTER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        COMMA FOUND                                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTCOMMA ST    R1,WACOMMAC         SAVE COL # OF THIS COMMA
         ST    R2,WACOMMAP         SAVE ADDRESS OF COMMA
         B     NEXTCHAR
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        QUOTE FOUND                                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTQUOTE LA    R1,1(,R1)           BUMP TO NEXT CHAR
         LA    R2,1(,R2)
         CH    R1,=H'71'           ROOM ON CARD FOR ANOTHER CHAR?
         BH    ERROR5              /NO  - ERROR
*                                  /YES - CHECK IT
         MVC   WAPREV,0(R2)        SAVE THE NEW CHAR AS PREV
         CLI   0(R2),C''''         IS NEW CHAR A QUOTE MARK?
         BNE   GOTQUOTE            /NO  - CONTINUE
*                                  /YES - CHECK FOR PAIRED QUOTES
         CH    R1,=H'71'           ROOM ON CARD FOR ANOTHER CHAR?
         BH    GOTBLANK            /NO  - CAN'T BE PAIRED QUOTES,
*                                   CONSIDER AS END OF STRING
*                                  /YES
         CLI   1(R2),C''''         IS NEXT ONE A QUOTE, TOO?
         BNE   NEXTCHAR            /NO  - CONTINUE SCAN WITH NEXT CHAR
*                                  /YES
         LA    R1,1(,R1)           SKIP OVER PAIRED QUOTE
         LA    R2,1(,R2)
         B     GOTQUOTE            CONTINUE PROCESSING QUOTED STRING
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        LEFT PAREN FOUND                                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTLPAR  LA    R3,1(,R3)           BUMP LPAREN COUNT
         B     NEXTCHAR            SCAN NEXT CHARACTER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        RIGHT PAREN FOUND                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTRPAR  LTR   R3,R3               PROCESSING PAREN'D STRING?
         BNP   ERROR6              /NO  - ERROR
         BCTR  R3,0                /YES - UNCOUNT A PAREN
         B     NEXTCHAR            SCAN NEXT CHARACTER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        BLANK (OR END OF CARD) FOUND                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GOTBLANK CLI   WAPREV,C','         PREVIOUS CHAR A COMMA?
         BNE   GOTBL2              /NO  - SEE IF SHOULD HAVE BEEN CONT.
*                                  /YES - OPERAND IS CONTINUED
         L     R14,IESUBCTP
         USING IESUBCTD,R14        #####
         TM    IESTMTYP,IESOPCON   DOES SUBMIT THINK OPRND IS CONT?
         BZ    ERROR7              /NO  - LOGIC ERROR SOMEWHERE
*                                  /YES
         OI    WFLAGS,WCONT        REMEMBER OPERAND TO BE CONTINUED
         ST    R3,WPAR             SAVE PAREN DEPTH
         B     EXIT
*
GOTBL2   LTR   R3,R3               END OF STATEMENT WITHIN PARENS?
         BNZ   ERROR8              /YES - SYNTAX ERROR
*                                  /NO
         TM    IESTMTYP,IESOPCON   SHOULD OPRND BE CONTINUED?
         BO    ERROR7              /YES - LOGIC ERROR
*                                  /NO  - OK SO FAR
         DROP  R14                 #####
         NI    WFLAGS,X'FF'-WCONT  TURN OFF OPERAND CONT FLAG
         B     CHKINSRT            GO PREPARE FOR INSERT OF UID/PSWD
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        PREPARE TO INSERT CARD IF NECESSARY                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHKINSRT TM    WFLAGS,WRACF        IS RACF ACTIVE?
         BZ    EXIT                /NO  - DON'T INSERT UID/PSWD/GROUP
         TM    WFLAGS,WPJS         IS THIS PJS?
         BO    CHKINS2             /YES - DON'T PUT GROUP ON CARD
*                                  /NO
         TM    WFLAGS2,WGFND       WAS GROUP ALREADY FOUND?
         BO    CHKINS2             /YES - DON'T PUT ON CARD
*                                  /NO
         L     R5,CVTPTR           GET ACEE TO CHECK INST. DATA
         USING CVT,R5              #####
         L     R5,CVTTCBP            QUAD WORD
         L     R5,12(,R5)            ASCB
         USING ASCB,R5             #####
         L     R5,ASCBASXB           ASXB
         USING ASXB,R5             #####
         L     R5,ASXBSENV           ACEE
         USING ACEE,R5             #####
         CLI   ACEEPROC,C' '       IS THIS A STARTED TASK?
         BNE   CHKINS2             /YES - DON'T ADD GROUP TO CARD
*                                  /NO
***
*CHANGE FOLLOWING NOP TO A HARD BRANCH TO ADD GROUP FOR EVERYONE
***
         NOP   CHKINS1
         L     R7,ACEEINST         POINT TO INSTALLATION DATA
         LA    R7,0(,R7)           DOES IT EXIST?
         LTR   R7,R7
         BZ    CHKINS2             /NO  - DON'T PUT GROUP ON CARD
*                                  /YES - CHECK THE DATA
         USING RNBUINST,R7         #####
         CLI   RNBILEN,3           IS IT LONG ENOUGH?
         BL    CHKINS2             /NO  - DON'T PUT GROUP ON CARD
*                                  /YES
         CLI   RNBIKEY,RNBIOK      IS IT IN USABLE FORMAT?
         BNE   CHKINS2             /NO  - DON'T PUT GROUP ON CARD
*                                  /YES
         CLI   RNBGRP,RNBGRPY      SHOULD THIS USER HAVE GROUP ON CARD?
         BNE   CHKINS2             /NO  - DON'T PUT GROUP ON CARD
*                                  /YES
CHKINS1  MVC   WGNAME,ACEEGRPN     SAVE GROUP NAME TO USE
         B     CHKINS3             GO CHECK FOR ROOM ON CARD
         DROP  R5,R7               #####
CHKINS2  OI    WFLAGS2,WGFND       PRETEND GROUP FOUND SO WON'T INSERT
         TM    WFLAGS,WUFND+WPFND  UID/PSWD BOTH SPECIFIED?
         BO    EXIT                /YES - DON'T NEED TO INSERT
*                                  /NO  - MUST INSERT UID AND/OR PSWD
CHKINS3  CH    R1,=H'71'           ROOM FOR COMMA ON CARD?
         BH    SPLIT               /NO  - GO SPLIT CARD
*                                  /MAYBE
         CLI   0(R2),C' '          DID WE STOP ON A BLANK?
         BNE   SPLIT               /NO  - NO ROOM ON CARD
*                                  /YES - NO NEED TO SPLIT CARD
         MVC   0(2,R2),=C', '      SET CARD FOR OPERAND CONTINUATION
         BAL   R14,BLDCARD2        GO BUILD UID/PSWD CARD
         LA    R15,IERETURN        SET RC FOR INSERTION
         B     EXITRC              RETURN WITH RC SET
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SPLIT CARD TO MAKE ROOM FOR UID/PSWD                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SPLIT    LR    R4,R2               GET CURRENT SCAN POS (PAST FIELD)
         L     R5,WACOMMAP         GET ADDRESS OF LAST COMMA
         LTR   R5,R5               WAS ONE FOUND?
         BNP   ERROR9              /NO  - CAN'T SPLIT
*                                  /YES
         LA    R5,1(,R5)           BUMP PAST SAVED COMMA POS.
         SR    R4,R5               MACH. LENGTH TO MOVE IS (FIELD + 1)
         BCTR  R4,0                MINUS (COMMA + 1) MINUS 1
         MVC   WCRD1,=CL80'//'     INIT SPLIT CARD
         MVC   WCRD1+3(*-*),0(R5)  **EXECUTED**
         EX    R4,*-6              MOVE SPLIT PART FROM OLD CARD
         MVC   0(*-*,R5),=CL80' '  ** EXECUTED **
         EX    R4,*-6              BLANK THE SPLIT PART ON OLD CARD
         LA    R7,WCRD1+4(R4)      PUT COMMA AT END OF OPERAND IN
         MVI   0(R7),C','          NEW CARD
         OI    WFLAGS,WINS1        SET TO INSERT BOTH CARDS
         BAL   R14,BLDCARD2        GO BUILD UID/PSWD CARD
         LA    R15,IERETURN        SET RC TO INSERT CARD
         B     EXITRC              EXIT WITH RC SET
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        BUILD CARD TO HOLD UID AND/OR PSWD AND/OR GROUP              *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BLDCARD2 ST    R14,WBLDSAV
         BNZ   BLDCRD2A            /YES - GO DECRYPT PASSWORD
         TM    WFLAGS,WPJS         IS THIS PJS?
         BZ    BLDCRD2A            /NO  - CONTINUE
*                                  /YES - ENSURE THAT BOTH UID/PSWD
         TM    WFLAGS,WUFND+WPFND  OR NEITHER WERE FOUND
         BM    ERROR17
BLDCRD2A OI    WFLAGS2,WINS2       SHOW 2ND CARD BUILT
         MVC   WCRD2,=CL80'//'
         LA    R4,WCRD2+3          SET FIRST BUILD POINT
         TM    WFLAGS,WUFND        UID PRESENT ALREADY?
         BO    BLDPSWD1            /YES - SKIP TO PSWD
*                                  /NO  - PUT UID IN FIRST
         MVC   0(5,R4),=C'USER='   USER=
         LA    R4,5(,R4)           POINT PAST USER=
         MVC   0(8,R4),WUSERID     PUT IN USERID
         LA    R5,7                MAX LENGTH TO SCAN
BLDUSID2 CLI   1(R4),C' '          END OF USERID?
         LA    R4,1(,R4)
         BE    BLDPSWD1            /YES - GO DO PSWD
         BCT   R5,BLDUSID2         /MAYBE - LOOP IF MORE
*
BLDPSWD1 TM    WFLAGS,WPFND        PSWD PRESENT ALREADY?
         BO    BLDGRP1             /YES - GO SET COLUMN 72
*                                  /NO
         TM    WFLAGS,WUFND        DID WE GENERATE USERID ON CARD?
         BO    BLDPSWD2            /NO  - DON'T NEED COMMA AFTER IT
         MVI   0(R4),C','          /YES - PUT IN A COMMA
         LA    R4,1(,R4)           BUMP PAST COMMA
BLDPSWD2 MVC   0(9,R4),=C'PASSWORD='  PASSWORD=
         LA    R4,9(,R4)           POINT PAST PASSWORD=
         MVC   0(8,R4),WPSWD       MOVE IN THE PASSWORD
         TM    WFLAGS2,WDECRYPT    DECRYPT PASSWORD?
         BZ    BLDPSWD3            /NO
         BAL   R14,DECRYPT         /YES - GO DECRYPT PASSWORD
BLDPSWD3 LA    R5,8                MAX LENGTH TO SCAN
BLDPSWD4 CLI   1(R4),C' '          END OF PASSWORD?
         LA    R4,1(,R4)
         BE    BLDGRP1             /YES - GO DO GROUP=
         BCT   R5,BLDPSWD4         /MAYBE - LOOP IF MORE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        BUILD CARD TO HOLD UID AND/OR PSWD AND/OR GROUP, PAGE 2      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
BLDGRP1  TM    WFLAGS2,WGFND       WAS GROUP= FOUND ON CARD?
         BO    BLDGRP9             /YES - DON'T ADD TO CARD AGAIN
*                                  /NO
BLDGRP2  TM    WFLAGS,WUFND+WPFND  DID WE PUT USERID OR PSWD ON CARD?
         BO    BLDGRP3             /NO  - DON'T NEED COMMA
*                                  /YES - NEED COMMA BEFORE GROUP=
         MVI   0(R4),C','          PUT COMMA BEFORE GROUP=
         LA    R4,1(,R4)           BUMP PAST COMMA
BLDGRP3  MVC   0(6,R4),=C'GROUP='  PUT GROUP= ON CARD
         MVC   6(8,R4),WGNAME      PUT GROUP NAME ON CARD
BLDGRP9  NI    WFLAGS2,X'FF'-WGFND TURN OFF 'GROUP FOUND' FLAG
*
BLDCOL72 L     R14,WBLDSAV         RESTORE RETURN ADDRESS
         NI    WFLAGS,X'FF'-WCONT  TURN OFF OPERAND CONT FLAG
         OI    WFLAGS,WUFND+WPFND  PRETEND UID/PSWD BOTH FOUND
         L     R4,IESUBCTP
         USING IESUBCTD,R4         #####
         TM    IESTMTYP,IESSCON    IS CURRENT STATEMENT TO BE CONT?
         DROP  R4                  #####
         BZR   R14                 /NO  - RETURN TO CALLER
         MVI   WCRD2+71,C'X'       /YES - PUT X IN COL 72 OF NEW CARD
*                                  TO SHOW SAME CONTINUATION
         BR    R14                 RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SAVE CARD FOR MSPRINT   (R2-->CARD)                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
SAVECARD ST    R14,WSAVSAV         SAVE RETURN ADDRESS
         L     R8,WCRDPTR          GET POINTER TO OUTPUT AREA
         LH    R2,WCRDCNT          GET COUNT OF CARDS SAVED
         LA    R2,1(,R2)           BUMP IT BY ONE
         CH    R2,=Y(WCRDMAX)      WITHIN LIMIT?
         BH    NOSAVE              /NO  - DON'T SAVE THIS ONE
         STH   R2,WCRDCNT          /YES - SAVE NEW COUNT
         L     R2,IECARDP          POINT TO CARD AND
         MVC   0(70,R8),2(R2)      SAVE IT
         LA    R8,70(,R8)          BUMP TO NEXT OUTPUT AREA
         ST    R8,WCRDPTR          SAVE OUTPUT POINTER
NOSAVE   L     R14,WSAVSAV         /NO  - RETURN TO CALLER
         BR    R14
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        INVOKE MSPRINT TO PRINT SAVED CARDS                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHKMSPR  TM    WFLAGS,WSETUP       ANY SETUP CARDS ENCOUNTERED?
         BZR   R14                 /NO  - RETURN TO CALLER
*                                  /YES
         ST    R14,WMSPSAV         SAVE RETURN ADDRESS
         L     R9,WMSPBUF          GET POINTER TO KEY 8 STORAGE
***********************************************************************
*          K E Y   Z E R O   C O D E   F O L L O W S                  *
***********************************************************************
         MODESET EXTKEY=ZERO       NEED KEY 0 PSW TO USE KEY 8 AREA
         USING MSPAREA,R9          #####
         OI    WFLAGS,WERROR            ASSUME ERROR IN BUFFER
         CLC   MSPKEY,=C'IKJEFF10MSP'   BUFFER OK?
         BNE   CHKMSPX                  /NO  - BYPASS MSPRINT
         LA    R8,WCRDSAV          GET POINTER TO SAVED CARDS
         LH    R2,WCRDCNT          GET COUNT OF SAVED CARDS
         LTR   R2,R2               ENSURE R2 POSITIVE AND WITHIN
         BNP   CHKMSPX             LIMITS
         CH    R2,=Y(WCRDMAX)
         BH    CHKMSPX
*                                  OK SO FAR, SO MOVE THE CARDS
         LA    R1,MSPOBUF+140      GET POINTER TO MSP CARD BUFFER
CHKMSPM  MVC   0(70,R1),0(R8)      MOVE A CARD TO MSPRINT AREA
         LA    R8,70(,R8)          BUMP TO NEXT SAVED CARD
         LA    R1,70(,R1)          BUMP TO NEXT OUTPUT CARD
         BCT   R2,CHKMSPM          LOOP
         NI    WFLAGS,X'FF'-WERROR RESET ERROR FLAG
         MVI   0(R1),X'EE'         FLAG END OF USED AREA FOR MSPRINT
         L     R1,CVTPTR           GET CPPL ADDRESS FROM FIRST SAVE
         L     R1,0(,R1)           AREA POINTED TO BY OUR PARENT'S TCB
         L     R1,4(,R1)           <-- OUR TCB ADDRESS
         USING TCB,R1              #####
         L     R1,TCBOTC           <-- OUR PARENT'S TCB ADDRESS
         L     R2,TCBFSA           <-- OUR PARENT'S FIRST SAVE AREA
         L     R2,24(,R2)          <-- OUR PARENT'S INPUT CPPL
         MVC   MSPCPPL(16),0(R2)   COPY CPPL TO OUR KEY 8 AREA
         DROP  R1                  #####
         LA    R1,MSPOBUF          POINT TO OUTPUT BUFFER
         ST    R1,MSPCPPL          PUT ITS ADDR IN CPPL
         L     R1,MSPCPPL+12       POINT TO ECT
         USING ECT,R1              #####
         ST    R1,MSPECT           SAVE ECT ADDRESS
         MVC   MSPECTSW,ECTSWS     SAVE ECT SWITCHES
         NI    ECTSWS,X'FF'-ECTNOPD  INDICATE OPERANDS IN BUFFER
         DROP  R1                  #####
         XC    MSPECB,MSPECB       ZERO THE ATTACH ECB
         LA    R2,MSPECB           POINT TO THE ECB
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        INVOKE MSPRINT TO PRINT SAVED CARDS, PAGE 2                  *
*              (STILL IN KEY 0)                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         MVC   MSPATTCH,ATTACH     GET MODIFIABLE ATTACH
         L     R3,CVTPTR           CHANGE OUR TCB PROTECT KEY TO 8
         L     R3,0(,R3)           SO MSPRINT WILL BE ABLE TO RUN
         L     R3,4(,R3)           <-- OUR TCB ADDRESS
         USING TCB,R3              #####
         IC    R4,TCBPKF           SAVE CURRENT KEY
         NI    TCBPKF,X'0F'        WIPE OUT CURRENT KEY
         OI    TCBPKF,X'80'        SET KEY 8
         ATTACH ECB=(R2),          ATTACH MSPRINT IN KEY 8             X
               SZERO=NO,                                               X
               ESTAI=(STYXIT),                                         X
               SM=PROB,KEY=PROP,                                       X
               MF=(E,MSPCPPL),                                         X
               SF=(E,MSPATTCH)
         ST    R1,MSPTCBP          SAVE NEW TCB ADDRESS
         WAIT  ECB=(R2)            WAIT FOR MSPRINT TO FINISH
         LA    R1,MSPTCBP          POINT TO TCB ADDRESS
         DETACH (1)                DETACH MSPRINT
         STC   R4,TCBPKF           RESET OUR TCB PROTECT KEY
         DROP  R3                  #####
         L     R1,MSPECT           POINT TO ECT
         USING ECT,R1              #####
         MVC   ECTSWS,MSPECTSW     RESTORE ECT SWITCHES
         DROP  R1                  #####
         DROP  R9                  #####
CHKMSPX  MODESET EXTKEY=SCHED      BACK TO SCHEDULER KEY
***********************************************************************
*          E N D   K E Y   Z E R O   C O D E                          *
***********************************************************************
         TM    WFLAGS,WERROR       ERROR IN ABOVE CODE?
         BO    ERROR19             /YES - NEED MESSAGE
         NI    WFLAGS,X'FF'-WSETUP CLEAR SETUP FLAG
         BAL   R14,FREEMSP         FREE THE MSPRINT STORAGE
         L     R14,WMSPSAV         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        DECRYPT PJS/STC/BATCH PASSWORD                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
DECRYPT  ST    R14,WDECSAV         SAVE RETURN ADDRESS
*
* THESE LINES DELETED. NOTE THAT WE WOULD BE DECRYPTING A COPY OF
* THE PASSWORD THAT WE SAVED EARLIER IN THE RACF PROFILE, AND THAT
* ITS ENCRYPTION WAS DONE USING A DIFFERENT ALGORITHM THAN RACF
* NORMALLY USES SO THAT WE WOULDN'T HAVE ANY CODE IN THE SYSTEM THAT
* DECRYPTS THE RACF-ENCRYPTED DATA.
*
         L     R14,WDECSAV         RESTORE RETURN ADDRESS
         BR    R14
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SEE IF RACF IS ACTIVE FOR THIS USER                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHEKRACF EQU   *
         RACSTAT ,                 IS RACF ACTIVE?
         LTR   R15,R15
         BNZR  R14                 /NO  - RETURN
*                                  /YES - SAVE SOME INFO
         L     R1,CVTPTR           GET CVT
         USING CVT,R1              #####
         L     R1,CVTTCBP          GET QUAD WORD
         L     R1,12(,R1)          GET ASCB
         ST    R1,WASCB            SAVE ASCB ADDRESS
         USING ASCB,R1             #####
         L     R1,ASCBASXB         GET ASXB
         USING ASXB,R1             #####
         L     R1,ASXBSENV         GET ACEE
         DROP  R1                  #####
         LA    R1,0(,R1)           CLEAR HI-BYTE
         LTR   R1,R1               ACEE AVAILABLE?
         BZR   R14                 /NO  - DONE WITH RACF CHECK
         USING ACEE,R1             #####
         ST    R1,WACEE            SAVE ACEE ADDRESS
         CLC   ACEEACEE,=C'ACEE'   IS ACEE VALID?
         BNER  R14                 /NO
         TM    ACEEFLG1,ACEERACF   RACF DEFINED USER?
         BZR   R14                 /NO  - DONE WITH RACF CHECK
         OI    WFLAGS,WRACF        /YES - SHOW RACF AVAILABLE
         MVC   WUSER(9),ACEEUSER   SAVE RACF USERID AND LENGTH
         BR    R14
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SEE IF CALLER IS PJS; IF SO, SEE IF THE TSO USER             *
*        IS ALLOWED TO HAVE A PROD USERID SPECIFIED OR IF             *
*        THE NORMAL USERID SHOULD BE USED                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
CHEKPJS  ST    R14,WPJSSAV           GET CVT
         L     R1,CVTPTR             GET CVT
         USING CVT,R1                #####
         L     R1,CVTTCBP            GET QUAD WORD
         L     R1,4(,R1)             GET OUR TCB ADDRESS  (IKJEFF04)
         USING TCB,R1                #####
         L     R1,TCBOTC             GET OUR MOTHER TCB (SUBMIT)
         L     R1,TCBOTC             GET OUR GRANDMOTHER TCB (SPFPMD?)
         L     R15,TCBRBP            GET FIRST RB UNDER MOTHER TCB
         USING RBBASIC,R15           #####
         CLC   =CL6'SPFCAT',96(R15)  IS FIRST RB FOR A VERSION OF
*                                    SPFCAT?
         BNE   CHEKPJS1              /NO  - CHECK FOR PJS RB
         L     R15,RBLINK            /YES - SKIP THIS RB
CHEKPJS1 CLC   =CL8'SPFPJS',96(R15)  IS THIS SPFPJS RB?
         BE    CHEKPJS2              /YES - CHECK PREVIOUS RB
*                                    /NO  - CHECK FOR OLD FORM OF NAME
         CLC   =CL8'PJSJOB',96(R15)  IS THIS OLD FORM (PJSJOB)?
         BNE   CHEKPJSZ              /NO  - NOT PJS
CHEKPJS2 L     R15,RBLINK            /YES - GET PREVIOUS RB
         CLC   =CL8'SPFUTIL',96(R15) MUST BE SPFUTIL OR SPFPMD FOR
         BNE   CHEKPJS3              PJS SUBMIT
         L     R15,RBLINK            FOUND SPFUTIL - VERIFY SPFPMD, TOO
CHEKPJS3 CLC   =CL8'SPFPMD',96(R15)
         BNE   CHEKPJSZ              /NO  - NOT PJS
         L     R1,TCBOTC             OK SO FAR - NOW CHECK GREAT G'MOM
         L     R15,TCBRBP            GET FIRST RB
         CLC   =CL8'SPFMAIN',96(R15) IS IT SPFMAIN?
         BNE   CHEKPJSZ              /NO  - NOT PJS
         L     R15,RBLINK            /YES - CHECK PREVIOUS RB
         CLC   =CL8'SPF',96(R15)     IS IT SPF?
         BNE   CHEKPJSZ              /NO  - NOT PJS
         DROP  R1,R15                #####
         OI    WFLAGS,WPJS           /YES - IT'S PJS
         TM    WFLAGS,WRACF          IS RACF UP?
         BZ    CHEKPJSZ              /NO  - DON'T TRY TO LOG THINGS
*                                    /YES - GO SET UP THE PARM LIST FOR
         BAL   R14,LOGSETUP          THE RACF LOGGING MODULE (ICHRAU00)
*                                  CHECK FOR PJS AUTHORIZATION:
         B     CHEKPJSZ            ** SET TO NOP TO ENABLE CHECKING **
         L     R1,WACEE            GET ACEE ADDRESS
         USING ACEE,R1             #####
         ICM   R1,7,ACEEINST+1     GET INSTALLATION DATA
         BZ    CHEKPJS9            SKIP PROD USERID IF NONE
         USING RNBUINST,R1         #####
         CLI   RNBILEN,RNBPJSLN    IS IT LONG ENOUGH?
         BL    CHEKPJS9            /NO  - ERROR
*                                  /YES
         CLI   RNBIKEY,RNBIOK      IS IT IN USABLE FORMAT?
         BNE   CHEKPJS9            /NO  - ERROR
*                                  /YES
         CLI   RNBPJS,RNBPJSP      SUPPLY PROD USERID?
         BE    CHEKPJSZ            /YES
CHEKPJS9 NI    WFLAGS,X'FF'-WPJS   /NO  - PRETEND WE AREN'T PJS
CHEKPJSZ L     R14,WPJSSAV         RESTORE RETURN ADDRESS
         BR    R14
         DROP  R1                    #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        SETUP ICHRAU00 (RACF LOGGING) PARMS                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LOGSETUP EQU   *
         LA    R1,WLOGC            GET ADDRESS OF COMMON LOG PARMS
         USING LOGC,R1             #####
         MVI   LOGCODE,DSACCESS         RESOURCE ACCESS
         MVI   LOGCVIOL,0               NO ERROR
         MVI   LOGCAUTH,LOGCNORM        NORMAL ACCESS AUTHORITY
         MVI   LOGCREAS,LOGCENT         ENTITY AUDIT
         MVI   LOGCREAS+1,0             *RESERVED*
         MVI   LOGCERR,0                NO ERROR FLAGS
         DROP  R1                  #####
*                                  SET UP ICHRAU00 PARM LIST
         LA    R1,FFOUR                 POINTER TO # OF CODE/DATA PAIRS
         ST    R1,WPRMCTP
         LA    R1,LOGCODES              POINTER TO CODES
         ST    R1,WPRMCDP
         LA    R1,WPRMDAT               POINTER TO DATA SECTION
         ST    R1,WPRMDTP
         LA    R1,WPRMCTP               STRANGE BUT TRUE
         ST    R1,WPRMCTPP                 .
         LA    R1,WPRMCDP                  .
         ST    R1,WPRMCDPP                 .
         LA    R1,WPRMDTP                  .
         ST    R1,WPRMDTPP                 .
         LA    R1,FZERO                 NO ACEE POINTER
         ST    R1,WPRMACEP
         MVI   WLOGJOB,8           INIT JOB NAME (RESOURCE NAME)
         MVC   WLOGJOB+1(8),=8C'*'   TO *'S
*                                  SET UP ICHRAU00 DATA POINTERS
         LA    R1,WLOGC                 COMMON SECTION
         ST    R1,WPRMDAT
         LA    R1,WLOGJOB               RESOURCE NAME (JOB NAME)
         ST    R1,WPRMDAT+4
         LA    R1,LOGCLASS              RESOURCE CLASS (#PJS#)      002
         ST    R1,WPRMDAT+8
         LA    R1,LOGAPPL               APPLICATION (IKJEFF10)
         ST    R1,WPRMDAT+12
         OI    WFLAGS2,WLOG        SHOW LOGGING NEEDED
         BR    R14                 RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CALL ICHRAU00 (RACF LOGGING MODULE)                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
LOGIT    ST    R14,WRAUSAV         SAVE RETURN ADDRESS
         NOPR  R14                 *** MAKE UNCOND BR TO NOT LOG ***
         L     R1,CVTPTR           CVT ADDRESS
         USING CVT,R1              #####
         L     R1,CVTRAC           RCVT ADDRESS
         USING RCVT,R1             #####
         ICM   R15,7,RCVTRAU0+1    ADDRESS OF ICHRAU00
         DROP  R1                  #####
         BZR   R14                 DON'T LOG IF NO LOGGING MODULE
         LA    R1,WPRMCTPP         POINT TO PARM LIST POINTER
         BALR  R14,R15             GO TO ICHRAU00
         L     R14,WRAUSAV         RESTORE RETURN ADDRESS
         BR    R14                 RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        GET MSPRINT BUFFER                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
GETMSP   ST    R14,WGMSSAV         SAVE RETURN ADDRESS
         LA    R3,230              GET MSP BUFFER IN SP 230
         SLL   R3,24
         O     R3,=A(MSPLEN)       SET UP LENGTH TO GET
***********************************************************************
*          U S E R   K E Y   C O D E   F O L L O W S                  *
***********************************************************************
         MODESET KEYADDR=HEX80,    NEED KEY 8 SO MSPRINT CAN ACCESS    X
               WORKREG=2           THE STORAGE
         LR    R0,R3               GET SUBPOOL/LENGTH
         GETMAIN R,LV=(0)
         LR    R2,R1               SAVE STORAGE ADDRESS
***********************************************************************
*          K E Y   Z E R O   C O D E   F O L L O W S                  *
***********************************************************************
         MODESET EXTKEY=ZERO       GO TO KEY ZERO TO INIT KEY 8 AREA
         ST    R2,WMSPBUF          SAVE ADDRESS OF AREA
         L     R3,=A(MSPLEN)       GET THE LENGTH
         BALR  R4,0                DUMMY ADDRESS FOR MVCL
         SR    R5,R5               LENGTH=0, PAD=0
         MVCL  R2,R4               INIT THE STORAGE
         L     R1,WMSPBUF
         USING MSPAREA,R1          #####
         MVC   MSPKEY,=C'IKJEFF10MSP'  SET UP KEY
         MVI   MSPOBUF,C' '        INIT 1ST TWO OUTPUT LINES
         MVC   MSPOBUF+1(139),MSPOBUF
         MVC   MSPOBUF+6(8),WJOBNAME   PUT JOB NAME IN MSPRINT AREA
         TM    WFLAGS,WPJS         IS THIS PJS?
         BZ    GETMSP2             /NO  - DON'T FLAG OUTPUT
*                                  /YES - FLAG OUTPUT
         MVC   MSPOBUF+15(7),=C'--PJS--'
GETMSP2  MVC   MSPDATND,X'EE'      FLAG END OF OUTPUT AREA
*
         MODESET EXTKEY=SCHED      INIT DONE - BACK TO KEY 1
***********************************************************************
*          E N D   K E Y   Z E R O   C O D E                          *
***********************************************************************
         L     R14,WGMSSAV         GET RETURN ADDRESS
         BR    R14                 AND RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        FREE MSPRINT BUFFER                                          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FREEMSP  ST    R14,WFMSSAV         SAVE RETURN ADDRESS
         LA    R3,230              GET SUBPOOL #/LENGTH
         SLL   R3,24
         O     R3,=A(MSPLEN)       SET UP LENGTH TO GET
         L     R4,WMSPBUF          GET ADDRESS
***********************************************************************
*          U S E R   K E Y   C O D E   F O L L O W S                  *
***********************************************************************
         MODESET KEYADDR=HEX80,    NEED KEY 8 TO ACCESS                X
               WORKREG=2           THE STORAGE
         LR    R0,R3               GET SUBPOOL/LENGTH
         LR    R1,R4
         FREEMAIN R,LV=(0),A=(1)   FREE THE STORAGE
         MODESET EXTKEY=SCHED      FREE DONE - BACK TO KEY 1
***********************************************************************
*          E N D   U S E R   K E Y   C O D E                          *
***********************************************************************
         XC    WMSPBUF,WMSPBUF     CLEAR STORAGE ADDRESS
         L     R14,WFMSSAV         GET RETURN ADDRESS
         BR    R14                 AND RETURN TO CALLER
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ERROR HANDLING                                               *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ERROR    NOP   ABEND               CHANGE TO HARD BRANCH TO ABEND
*
*
         LA    R15,IEABORT         IF NOT ABENDING, ABORT SUBMIT
         B     EXITRC              EXIT WITH RC SET
***
ABEND    ABEND 1,DUMP              JUST IN CASE WE NEED A DUMP
***
*
* UNKNOWN PJS USERID
*
ERROR1   L     R1,ERRM1            ISSUE MSG 1
         B     ERRXITF             THIS ONE IS FATAL
*
* LOGIC ERROR, LEN(USERID) = 0
*
ERROR2   L     R1,ERRM2            ISSUE MSG 2
         B     ERRXITF             THIS ONE IS FATAL
*
* LOGIC ERROR, LEN(PASSWORD) = 0
*
ERROR3   L     R1,ERRM3            ISSUE MSG 3
         B     ERRXITF             THIS ONE IS FATAL
*
* WRONG USERID FOUND ON JOBCARD
*
ERROR4   L     R1,ERRM4            ISSUE MSG 4
         B     ERRXITF             THIS ONE IS FATAL
*
* END OF CARD WITHIN QUOTED STRING
*
ERROR5   L     R1,ERRM5            ISSUE MSG 5
         B     ERRXITF             THIS ONE IS FATAL
*
* EXTRA RIGHT PAREN FOUND
*
ERROR6   L     R1,ERRM6            ISSUE MSG 6
         B     ERRXITF             THIS ONE IS FATAL
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ERROR HANDLING, PAGE 2                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
* LOGIC ERROR - BAD CONTINUATION
*
ERROR7   L     R1,ERRM7            ISSUE MSG 7
         B     ERRXITF             THIS ONE IS FATAL
*
* END OF STATEMENT WITHIN PARENS
*
ERROR8   L     R1,ERRM8            ISSUE MSG 8
         B     ERRXITF             THIS ONE IS FATAL
*
* CAN'T SPLIT CARD TO ADD UID/PSWD
*
ERROR9   L     R1,ERRM9            ISSUE MSG 9
         B     ERRXITF             THIS ONE IS FATAL
*
* BAD LOCATE - UNKNOWN ERROR
*
ERROR10  L     R1,ERRM10           ISSUE MSG 10
         B     ERRXITF             THIS ONE IS FATAL
*
* CATALOG NOT AVAILABLE
*
ERROR11  L     R1,ERRM11           ISSUE MSG 11
         B     ERRXITF             THIS ONE IS FATAL
*
* DATASET NOT CATALOGED
*
ERROR12  L     R1,ERRM12           ISSUE MSG 12
         B     ERRXITF             THIS ONE IS FATAL
*
* INVALID DSNAME
*
ERROR13  L     R1,ERRM13           ISSUE MSG 13
         B     ERRXITF             THIS ONE IS FATAL
*
* TTR NOT AVAILABLE
*
ERROR14  L     R1,ERRM14           ISSUE MSG 14
         B     ERRXITF             THIS ONE IS FATAL
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ERROR HANDLING, PAGE 3                                       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
* LOGIC ERROR - INSERT FLAG BAD
*
ERROR16  L     R1,ERRM16           ISSUE MSG 16
         B     ERRXITF             THIS ONE IS FATAL
*
* PJS JOBCARD CONTAINS UID OR PSWD, BUT NOT BOTH
*
ERROR17  L     R1,ERRM17           ISSUE MSG 17
         B     ERRXITF             THIS ONE IS FATAL
*
* LOGIC ERROR - MSPRINT BUFFER INVALID
*
ERROR18  L     R1,ERRM18           ISSUE MSG 18
         B     ERRXITF             THIS ONE IS FATAL
*
* MSPRINT OR ITS ATTACH FAILED
*
ERROR19  L     R1,ERRM19           ISSUE MSG 19
         B     ERRXITF             THIS ONE IS FATAL
*
* LOGIC ERROR - INSERT FLAG BAD
*
ERROR20  L     R1,ERRM20           ISSUE MSG 20
         B     ERRXITF             THIS ONE IS FATAL
*
* SYNTAX OR LOGIC ERROR - BAD OPERAND START
*
ERROR21  L     R1,ERRM21           ISSUE MSG 21
         B     ERRXITF             THIS ONE IS FATAL
*
* RETRIEVED PRODUCTION PASSWORD HAS WRONG LENGTH
*
ERROR22  L     R1,ERRM22           ISSUE MSG 22
         B     ERRXITF             THIS ONE IS FATAL
*
* NO RNB AREA CHAINED FROM ACEE (ACEEIEP).
*
ERROR23  L     R1,ERRM23           ISSUE MSG 23
         B     ERRXITF             THIS ONE IS FATAL
*
* RNB AREA CHAINED FROM ACEE (ACEEIEP) IS INVALID
*
ERROR24  L     R1,ERRM24           ISSUE MSG 24
         B     ERRXITF             THIS ONE IS FATAL
*
*
*
ERRXITF  OI    WFLAGS,WERROR+WINIT SET ERROR/INIT DONE FLAG
*                                  SETTING INIT PREVENTS LOOP IF ERROR
*                                  OCCURS DURING INITIALIZATION
         ST    R1,IEMSGP           SAVE THE MSG PTR
         LA    R15,IEMSG           SET RC TO ISSUE MSG
         B     EXITRC              AND EXIT WITH RC SET
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ESTAI EXIT FOR MSPRINT ATTACH                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
STYXIT   DS    0H
         USING *,R15               #####
         CH    R0,=H'12'           SDWA AVAILABLE?
         BNE   STY1                /YES - GO USE IT
*                                  /NO  - BE CAREFUL
         BALR  R3,0                GET A BASE REG
         USING *,R3                #####
         DROP  R15                 #####
         LR    R4,R14              SAVE RETURN ADDR
         SDUMP SDATA=(RGN,TRT),HDR='IKJEFF10/MSPRINT ABEND - NO SDWA'
         LR    R14,R4              RESTORE RETURN ADDR
         LA    R15,16              NO RETRY, NO MORE ESTAI EXITS
         BR    R14                 RETURN TO SYSTEM
         DROP  R3                  #####
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        ESTAI EXIT, PAGE 2                                           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         USING STYXIT,R15          #####
*
STY1     STM   R14,R12,12(R13)     SAVE REGS
         LR    R2,R1               SAVE SDWA ADDRESS
         SDUMP SDATA=(RGN,TRT),HDR='IKJEFF10/MSPRINT ABEND'
         SETRP WKAREA=(2),REGS=(14,12),RC=16
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        EQUATES                                                      *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         REGEQU
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F
ATTACH   ATTACH EP=MSPRINT,                                            $
               SM=PROB,KEY=PROP,SF=L
ATTACHL  EQU   *-ATTACH
         DS    0F
CINTY    ICHEINTY LOCATE,TYPE='USR',ACTIONS=*-*,TESTS=*-*,             $
               WKAREA=*-*,MF=L
INTYL    EQU   *-CINTY
         DS    0F
CACT     ICHEACTN FIELD=USRDATA,TESTS=*-*,MF=L
ACTL     EQU   *-CACT
         DS    0F
CTST     ICHETEST FIELD=USRNM,FLDATA=(8,CPJSP),COND=EQ,MF=L
TSTL     EQU   *-CTST
CPJSP    DC    CL8'PJSP'
FZERO    DC    F'0'
FFOUR    DC    F'4'
LOGCODES DC    AL1(CMMNDATA,OLDDSNM,CLASSNM,APPLNAME)               002
LOGCLASS DC    AL1(5),C'#PJS#'    CLASS NAME FOR LOGGING            002
LOGAPPL  DC    AL1(8),C'IKJEFF10' APPLICATION NAME FOR LOGGING
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONSTANTS, PAGE 2                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         DS    0F
CAMLST   CAMLST NAME,DSN,,LOCATE
CAMLSTL  EQU   *-CAMLST
DSN      DS    0C                  DUMMY DEF TO KEEP ASSEMBLER HAPPY
LOCATE   DS    0C                  DUMMY DEF TO KEEP ASSEMBLER HAPPY
*
*
*
*
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONSTANTS, PAGE 3                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ERRM1    DC    A($ERRM1)
ERRM2    DC    A($ERRM2)
ERRM3    DC    A($ERRM3)
ERRM4    DC    A($ERRM4)
ERRM5    DC    A($ERRM5)
ERRM6    DC    A($ERRM6)
ERRM7    DC    A($ERRM7)
ERRM8    DC    A($ERRM8)
ERRM9    DC    A($ERRM9)
ERRM10   DC    A($ERRM10)
ERRM11   DC    A($ERRM11)
ERRM12   DC    A($ERRM12)
ERRM13   DC    A($ERRM13)
ERRM14   DC    A($ERRM14)
ERRM15   DC    A($ERRM15)
ERRM16   DC    A($ERRM16)
ERRM17   DC    A($ERRM17)
ERRM18   DC    A($ERRM18)
ERRM19   DC    A($ERRM19)
ERRM20   DC    A($ERRM20)
ERRM21   DC    A($ERRM21)
ERRM22   DC    A($ERRM22)
ERRM23   DC    A($ERRM23)
ERRM24   DC    A($ERRM24)
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONSTANTS, PAGE 4                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
HEX80    DC    X'80'               USED FOR MODESETS TO KEY 8
         LTORG ,                   LITERALS
PATCH    DC    16F'0'              PATCH AREA
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        CONSTANTS, PAGE 5                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
$ERRM1   MSG   'YOU ARE NOT AUTHORIZED TO USE PJS (NO PROD USER FOUND)'
$ERRM2   MSG   'INTERNAL ERROR - LEN(USERID) = 0'
$ERRM3   MSG   'INTERNAL ERROR - LEN(PASSWORD) = 0'
$ERRM4   MSG   'INVALID USERID FOUND ON JOB CARD'
$ERRM5   MSG   'SYNTAX ERROR - NO ENDING QUOTE ON JOB CARD'
$ERRM6   MSG   'SYNTAX ERROR - EXTRA RIGHT PAREN ON JOB CARD'
$ERRM7   MSG   'INTERNAL ERROR - INCONSISTENT CONTINUATION FLAGS'
$ERRM8   MSG   'SYNTAX ERROR - UNBALANCED PARENTHESES ON JOB CARD'
$ERRM9   MSG   'WARNING - NO ROOM TO INSERT USERID/PASSWORD'
$ERRM10  MSG   '/*SETUP ERROR - UNKNOWN LOCATE RC'
$ERRM11  MSG   '/*SETUP ERRROR - CATALOG NOT AVAILABLE'
$ERRM12  MSG   '/*SETUP ERROR - DATASET NOT CATALOGED'
$ERRM13  MSG   '/*SETUP ERROR - INVALID DATASET NAME'
$ERRM14  MSG   '/*SETUP ERROR - LOCATE RC 28'
$ERRM15  MSG   '/*SETUP ERROR - DATASET NAMES VALID ONLY WITH PJS'
$ERRM16  MSG   'INTERNAL ERROR - INSERT FLAGS BAD'
$ERRM17  MSG   'PJS JOBCARD HAS USERID BUT NO PASSWORD, OR VICE VERSA'
$ERRM18  MSG   'INTERNAL ERROR - INVALID MSPRINT BUFFER'
$ERRM19  MSG   'INTERNAL ERROR - MSPRINT NOT ATTACHED'
$ERRM20  MSG   'INTERNAL ERROR - INS BUFFER MISSING'
$ERRM21  MSG   'SYNTAX ERROR - OPERAND COLUMN < 4 ON JOB CARD'
$ERRM22  MSG   'INTERNAL ERROR - LEN(PJSP) ^= 8'
$ERRM23  MSG   'INTERNAL ERROR - ACEEIEP NOT SETUP CORRECTLY'
$ERRM24  MSG   'INTERNAL ERROR - RNBACEE NOT SETUP CORRECTLY'
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        RACF COMMON LOG ROUTINE (ICHRAU00) PARMS                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         COPY  ICHPLOGC
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        WORK AREA A                                                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
WORKA    DSECT                     WORK AREA
         DS    18F                 SAVE AREA - MUST BE 1ST IN DSECT
WGNAME   DS    CL8                 GROUP NAME
WPSWD    DS    CL8                 SUBMITTER'S OR PROD. PASSWORD
WJOBNAME DS    CL8                 JOBNAME FROM JOB CARD
WACEE    DS    A                   ADDR OF ACEE
WASCB    DS    A                   ADDR OF ASCB
WACOMMAP DS    A                   ADDR OF PREVIOUS COMMA
WACOMMAC DS    F                   COLUMN # OF PREVIOUS COMMA
WPAR     DS    F                   PAREN DEPTH
WINSSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WBLDSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WSAVSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WMSPSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WGMSSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WFMSSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WDECSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WPJSSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WRAUSAV  DS    A                   SAVE AREA FOR RETURN ADDRESS
WMSPBUF  DS    A                   POINTER TO MSPRINT STORAGE
WAPREV   DS    C                   PREVIOUS CHARACTER SCANNED
WCRD1    DS    CL80                SPACE FOR CARD 1 ACROSS CALLS
WCRD2    DS    CL80                SPACE FOR CARD 2 ACROSS CALLS
WUSER    DS    0CL9                USERID + LENGTH BYTE:
WUSERIDL DS    X                     LENGTH BYTE
WUSERID  DS    CL8                   USERID
WLOGJOB  DS    CL9                 RACF LOGGING LENGTH BYTE + JOBNAME
WFLAGS   DS    X                   FLAGS:
WINIT    EQU   X'80'                 INIT COMPLETE
WPJS     EQU   X'40'                 PJS RUN
WRACF    EQU   X'20'                 RACF IN USE - SUPPLY UID/PASSWORD
WERROR   EQU   X'10'                 ERROR OCCURRED ON PREV ENTRY
WCONT    EQU   X'08'                 OPERAND WILL BE CONTINUED
WUFND    EQU   X'04'                 UID FOUND ON JOBCARD
WPFND    EQU   X'02'                 PSWD FOUND ON JOBCARD
WSETUP   EQU   X'01'                 SETUP CARD FOUND
WFLAGS2  DS    X                   MORE FLAGS:
WINS1    EQU   X'80'                 INSERT CARD 1
WINS2    EQU   X'40'                 INSERT CARD 2
WGFND    EQU   X'20'                 GROUP NAME FOUND ON JOB CARD
WDECRYPT EQU   X'10'                 DECRYPT PASSWORD
WLOG     EQU   X'08'                 RACF LOGGING FOR PJS HAS BEEN DONE
WSETINSF EQU   X'04'                 SETUP INSERT IS STILL REQUIRED
WVOLADDR DS    F                   ADDR OF THE CURRENT VOL FROM LOCATE
         DS    0F
WINTY    DS    XL(INTYL)           AREA FOR MODIFIABLE ICHEINTY
         DS    0F
WACT     DS    XL(ACTL)            AREA FOR MODIFIABLE ICHEACTN
         DS    0F
WTST     DS    XL(TSTL)            AREA FOR MODIFIABLE ICHETEST
         DS    0F
WATTACH  DS    XL(ATTACHL)         AREA FOR MODIFIABLE ATTACH
         DS    0F
WCAMLST  DS    XL(CAMLSTL)         AREA FOR MODIFIABLE CAMLST
WDSN     DS    CL44                DSNAME FOR LOCATE
WLOCATE  DS    0D                  DOUBLE-WORD ALIGNED OUTPUT AREA FOR
         DS    265C                LOCATE
         DS    0F                  FULLWORD ALIGNED AREA FOR RACF
WLOGC    DS    XL(LOGCLEN)         COMMON LOG PARMS
WPRMCTP  DS    A                   ICHRAU00 ARRAY POINTERS
WPRMCDP  DS    A                     "
WPRMDTP  DS    A                     "
WPRMCTPP DS    A                   ICHRAU00 PARM LIST
WPRMCDPP DS    A                     "
WPRMDTPP DS    A                     "
WPRMACEP DS    A                     "
WPRMDAT  DS    6A                  DATA POINTERS FOR ICHRAU00
WPRMCDES DS    XL6                 DATA CODES FOR ICHRAU00
         DS    0F                  FULLWORD ALIGNED AREA FOR ICHEINTY
WKAREA   DS    XL52                  DATA RETRIEVAL
WCRDPTR  DS    A                   POINTER INTO SETUP CARD AREA
WCRDCNT  DS    H                   NUMBER OF CARDS IN SETUP AREA
WCRDMAX  EQU   50                  MAX NUMBER OF CARDS
WCRDSAV  DS    (WCRDMAX)CL70       AREA FOR SETUP CARDS
WCRDEND  DS    X                   END OF AREA FLAG
WORKLEN  EQU   *-WORKA             LENGTH OF WORK AREA A
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        MSPRINT BUFFER - KEPT BETWEEN CALLS TO IKJEFF10              *
*               ***** KEY EIGHT *****                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MSPAREA  DSECT
MSPKEY   DS    CL11                HEADER: 'IKJEFF10MSP'
MSPECTSW DS    X                   SAVE AREA FOR ECT SWITCHES
MSPCPPL  DS    4F                  CPPL FOR MSPRINT
MSPECB   DS    F                   ECB FOR MSPRINT
MSPTCBP  DS    F                   TCB POINTER FOR MSPRINT
MSPECT   DS    A                   ADDRESS OF ECT
MSPATTCH DS    XL(ATTACHL)         SPACE FOR MODIFIABLE ATTACH
MSPOBUF  DS    (WCRDMAX+2)CL70     SPACE FOR (WCRDMAX) CARDS PLUS A
*                                  2 LINE HEADER
MSPDATND DS    X                   END OF OUTPUT AREA
MSPEND   DS    X                   END OF MSPRINT AREA
MSPLEN   EQU   *-MSPAREA
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        DSECT FOR INSTALLATION DATA CHAINED OFF ACEE (RNBACEE)       *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         COPY  RNBACEE             FROM TEC.SYSTEM.MACLIB
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        DSECT FOR INSTALLATION DATA IN USER PROFILE                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         COPY  RNBUINST            FROM TEC.SYSTEM.MACLIB
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        IKJEFFIE DSECTS                                              *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         IKJEFFIE IETYPE=SUBMIT
EXSW1    EQU   IETJOB+IETEXEC+IETJES+IETCOMNT+IETJES3
EXSW2    EQU   IETJOB
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*        OTHER DSECTS                                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
         PRINT NOGEN
         CVT   DSECT=YES
         ICHPRCVT
         IHAACEE
         IHAASCB
         IHAASXB
         IHARB
         IHASDWA
         IKJECT
         IKJTCB
         IKJTSB
         END   IKJEFF10
