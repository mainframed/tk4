TEC413   TITLE 'VERIFY RACF CONSISTENCY'
***********************************************************************
* MEMBER: TEC413                         COPYRIGHT(C) 1980            *
* MACRO LIBS NEEDED: TEC.RACF.MACLIB     RAINIER NATIONAL BANK        *
*                    TEC.UCC1V4L5.GENLIB                              *
*                    SYS1.PVTMACS                                     *
*                    SYS1.MACLIB                                      *
* LINKAGE EDITOR PARMS: LET,NCAL,AC=1                                 *
*                                                                     *
* PURPOSE:                                                            *
*        THIS PROGRAM WILL VERIFY THE CONSISTENCY OF THE RACF DATA    *
*        SET, DASD VTOC'S, AND UCC-1 TMC. REPORTS WILL BE PRODUCED    *
*        OF ALL INCONSISTENCIES FOUND.                                *
*                                                                     *
* RETURN CODES:                                                       *
*        0 - EVERYTHING OK                                            *
*        4 - WARNING MESSAGE ISSUED                                   *
*        8 - INCONSISTENCIES FOUND                                    *
*       12 - LOGIC OR ENVIRONMENT ERROR FOUND                         *
*       16 - SYSPRINT DD STATEMENT MISSING                            *
*                                                                     *
*                                                                     *
* CHANGE LOG:                                                         *
*        02/12/80 - INITIAL VERSION                                   *
*        02/19/80 - ADDED CATALOG LOOKUP FOR VSAM DATASETS            *
*        02/20/80 - ADDED DASD VOL SER TABLE PROCESSING               *
*        02/20/80 - CORRECTED TO CHECK FOR XXXVS TYPE NAMES IF        *
*                   SEARCH FAILS IN TMC/VTOC FOR XXX (ONLY HAPPENS    *
*                   IF NON-VSAM ENTRY HAS INCORRECT (XXXVS) NAME)     *
*        06/13/80 - ADDED LOGIC TO HANDLE 8650NN AS VALID DASD VOLSERS*
*                   AND PROCESS LIKE 3350NN                           *
*        11/20/80 - REMOVED SPECIAL CHECKING FOR XXXVS TYPE NAMES     *
*                   FOLLOWING NEW IMPLEMENTATION OF RACF EXITS THAT   *
*                   LEAVE THE VS ON THE NAMES. ALSO CHANGED TO ASSUME *
*                   THAT TMC WILL NOT HAVE 3350NN OR 8650NN VOLSERS.  *
*                   FIXED SEVERAL POTENTIAL BUGS.                     *
*                                                                     *
***********************************************************************
         EJECT
         GBLC  UCC1
&UCC1    SETC  'YES'           ANYTHING ELSE SUPPRESSES UCC1 CODING
TEC413   CSECT
         USING *,R15              ##### TEMPORARY PROGRAM BASE
         SAVE  (14,12),,TEC413_&SYSDATE_&SYSTIME
         LA    R2,SAVE             LINK SAVE AREAS
         ST    R2,8(,R13)
         ST    R13,4(,R2)
         LR    R13,R2
         LR    R12,R15
         LA    R11,4095(,R12)
         LA    R11,1(,R11)
         USING TEC413,R12,R11     ##### PERMANENT PROGRAM BASES
         DROP  R15                #####
*
         OPEN  (SYSPRINT,OUTPUT)   OPEN THE PRINT FILE
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN   DID IT OPEN?
         BO    CONT                                /YES
         LA    R15,RC16                            /NO - SET RC=16
         ST    R15,RC                                    AND LEAVE
         B     EXIT
CONT     BAL   R10,INITVOL         GO PROCESS DASDVOL INPUT
         BAL   R10,INITPREF        GO PROCESS PREFIX INPUT
         BAL   R10,RACF            GO PROCESS RACF DATA SET
         BAL   R10,TMC             GO PROCESS THE TMC
         BAL   R10,VTOCS           GO PROCESS THE VTOCS
CLOSE    CLOSE SYSPRINT            CLOSE THE PRINT FILE
         FREEPOOL SYSPRINT         FREE THE BUFFER POOL
         ICM   R1,7,DASDTABL+1     FREE DASD TABLE IF ANY
         BZ    EXIT
         FREEMAIN R,A=(1),LV=DASDTLEN
EXIT     L     R13,4(,R13)         RESTORE REGS AND RETURN
         L     R15,RC
         RETURN (14,12),RC=(15)
TMC      EQU   *                   TEMPORARY DUMMY ROUTINES FOR
VTOCS    EQU   *                   TMC AND VTOCS
INITPREF EQU   *
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*   P R O C E S S   D A S D V O L   S P E C I F I C A T I O N S       *
*                                                                     *
***********************************************************************
*
INITVOL  DS    0H
         ST    R10,R10INITV
         OPEN  (DASDVOL,INPUT)     OPEN DASDVOL DATASET
         TM    DASDVOL+DCBOFLGS-IHADCB,DCBOFOPN  DID IT OPEN?
         BO    INITV010            /YES - CONTINUE
         LA    R1,MSG99            /NO  - PUT OUT MSG
         LA    R0,RC4
         BAL   R10,MSG
         XC    DASDTABL,DASDTABL   SHOW NO DASD TABLE
         B     INITV999            DONE WITH THIS ROUTINE
*
INITV010 GETMAIN R,LV=DASDTLEN     GET A STORAGE AREA
         ST    R1,DASDTABL         SAVE ITS ADDRESS
         LR    R2,R1               GET A BASE FOR NOW
         USING DASDENT,R2         ##### DASDTABL ENTRY
         LA    R3,DASDTLEN/DASDELEN GET NUMBER OF ENTRIES IN TABLE
         BCTR  R3,0                ALLOW FOR FENCE
INITV050 MVC   DASDVSER,=CL6' '    INIT DASDVOL ENTRY
         MVI   DASDVFLG,X'00'
INITV055 GET   DASDVOL             GET A RECORD
         CLI   0(R1),C'*'          IS IT A COMMENT?
         BE    INITV055            /YES - IGNORE IT
         MVC   DASDVSER,0(R1)      /NO  - GET VOLSER FROM CARD
         CLI   7(R1),C'I'          IGNORE THIS VOLSER DURING RUN?
         BNE   INITV060            /NO
         OI    DASDVFLG,DASDVIGN   /YES - SET FLAG
INITV060 LA    R2,DASDELEN(,R2)    MOVE TO NEXT TABLE ENTRY, IF ANY
         BCT   R3,INITV050
         LA    R1,MSG98            TABLE FULL, ISSUE ERROR MSG
         LA    R0,RC12
         BAL   R10,MSG
INITV900 DS    0H                  EODAD ROUTINE FOR DASDVOL INPUT
         XC    DASDVSER,DASDVSER   BUILD FENCE IN TABLE
         OI    DASDVFLG,DASDVEND
         DROP  R2                 #####
INITV990 CLOSE DASDVOL             CLOSE THE INPUT FILE
         FREEPOOL DASDVOL          FREE ITS BUFFER
INITV999 L     R10,R10INITV        RETURN TO CALLER
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*   P R O C E S S   R A C F   D A T A   S E T                         *
*                                                                     *
***********************************************************************
*
RACF     DS    0H
         ST    R10,R10RACF         SAVE LINK REG
         MVI   OUTLINE,C' '        SETUP/OUTPUT RACF VER MSG
         MVC   OUTLINE+1(L'OUTLINE-1),OUTLINE
         MVC   OUTLINE(L'RACFMSG),RACFMSG
         PUT   SYSPRINT,OUTLINE
         MVI   OUTLINE,C'-'        TRIPLE SPACE NEXT MSG
         AIF   ('&UCC1' NE 'YES').NOUCC1A
         OPENTMC NOTACT=RACF900    INIT UCC-1 PARM LIST
         AGO   .CONTA
.NOUCC1A OI    FLAG1,NOTMS         SHOW NO TMS THIS RUN
.CONTA   ANOP
*                                  LOOP:
RACF050  DS    0H
         ICHEINTY NEXTC,           GET NEXT RACF ENTRY                 X
               TYPE='DS',                                              X
               ENTRY=RACFNAME,                                         X
               ACTIONS=(RACFACT1,RACFACT2,RACFACT3,RACFACT4),          X
               WKAREA=RACFWORK,                                        X
               OPTIONS=(ACTION),                                       X
               MF=I
         LTR   R15,R15             GOT ONE?
         BZ    RACF100             /YES - GO PROCESS IT
*                                  /NO  - CHECK RETURN CODE
         CH    R15,=H'12'          END OF DATA?
         BE    RACF090             /YES
         CH    R15,=H'28'          RACF INACTIVE?
         BE    RACF910             /YES
         CH    R15,=H'44'          WORK AREA TOO SMALL?
         BE    RACF920             /YES
         B     RACF930             /NO  - UNKNOWN RACF RETURN CODE
RACF090  L     R10,R10RACF         DONE WITH RACF DATASET - RETURN
         BR    R10                 TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*   P R O C E S S   R A C F   D A T A   S E T   E N T R Y             *
*                                                                     *
***********************************************************************
*
RACF100  MVI   RACFNAM2,C' '            CLEAN UP THE DSNAME
         MVC   RACFNAM2+1(43),RACFNAM2
         IC    R1,RACFNAME
         BCTR  R1,0
         MVC   RACFNAM2(*-*),RACFNAME+1
         EX    R1,*-6
         LH    R2,RACFVOLC         GET VOLUME SERIAL COUNT
         LA    R3,RACFVOLS         POINT TO FIRST VOLUME SERIAL
         MVC   VOLWORK1,0(R3)      MOVE VOLSER TO WORK AREAS
         MVC   VOLWORK2,0(R3)
         TM    RACFDSTP,X'80'      IS THIS A VSAM ENTRY?
         BO    RACF400             /YES - SPECIAL PROCESSING
*                                  /NO  - NORMAL PROCESSING
         PACK  WORK(4),VOLWORK2    CHECK FOR NUMERIC VOL SER
         UNPK  VOLWORK2,WORK(4)
         OI    VOLWORK2+5,X'F0'
         AIF   ('&UCC1' NE 'YES').NOUCC1B
         CLC   VOLWORK1,VOLWORK2   NUMERIC?
         BNE   RACF300             /NO  - GO PROCESS VTOC ENTRY
*                                  /YES - COULD BE TAPE VOL
         CLC   VOLWORK1(4),C335001 IS IT A 3350NN VOL SER?
         BE    RACF300             /YES - ASSUME DASD
         CLC   VOLWORK1(4),C865001 IS IT AN 8650NN VOL SER?
         BE    RACF300             /YES - ASSUME DASD
         TM    FLAG1,NOTMS         PROCESSING WITH TMS?
         BZ    RACF200             /YES - GO TRY FOR TAPE VOL
         LA    R1,MSG25            /NO  - ISSUE WARNING MSG
         LA    R0,RC4
         BAL   R10,MSG
         B     RACF050             AND GO TO NEXT ENTRY
*
         EJECT
***********************************************************************
*                                                                     *
*   C H E C K   T M C   F O R   D A T A   S E T   E N T R Y           *
*                                                                     *
***********************************************************************
*
RACF200  GETTMC VOLWORK1,TMRECORD,RACF280,ENQ=NO
         CLC   TMDSN(44),RACFNAM2       DOES THE NAME MATCH?
         BE    RACF220                  /YES - CHECK PROTECTION
*                                       /NO  - MUST TRY FOR DSNB
RACF205  BAL   R10,GETDSNB              FIND THE DSNB
         B     RACF220             DSNB FOUND - GO CHECK TAPE
*                                  DSNB NOT FOUND - ERROR
         LA    R1,MSG1             ISSUE MSG
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
RACF220  TM    TMFLAG1,TMSCRTCH    IS THE TAPE VALID?
         BO    RACF270             /NO  - GO ISSUE MESSAGE
         TM    TMFLAG1,TMDELET
         BO    RACF275             /NO  - GO ISSUE MESSAGE
*                                  /YES
         TM    TMDSSIF,X'80'       IS THE TAPE PROTECTED?
         BO    RACF050             /YES - GO GET NEXT RACF ENTRY
         LA    R1,MSG2             /NO  - WRITE THE MESSAGE
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
*
RACF270  LA    R1,MSG3             ERROR - TAPE IS SCRATCH
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
*
RACF275  LA    R1,MSG21            ERROR - TAPE IS DELETED
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
*
RACF280  LA    R1,MSG24            /YES - ERROR, ALREADY CHECKED DASD
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF300
         AGO   .CONTB
.NOUCC1B B     RACF300             GO PROCESS VTOC ENTRY
.CONTB   ANOP
         EJECT
***********************************************************************
*                                                                     *
*   G E T   D S C B   F O R   D A S D   D A T A S E T                 *
*                                                                     *
***********************************************************************
*
RACF300  DS    0H
         CLC   VOLWORK1,=C'VDUMMY' IS THIS A DUMMY ENTRY?
         BE    RACF320             /YES - BYPASS OBTAIN
         CLC   VOLWORK1,=C'MODEL ' OTHER KIND OF DUMMY ENTRY?
         BE    RACF320             /YES - BYPASS OBTAIN
         ICM   R4,7,DASDTABL+1     VERIFY VOLSER FROM TABLE
         BZ    RACF310             (SKIP VERIFICATION IF NO TABLE)
         USING DASDENT,R4         ##### DASDTABL ENTRY
RACF305  TM    DASDVFLG,DASDVEND   END OF TABLE?
         BO    RACF385             /YES - UNKNOWN VOLSER
         CLC   VOLWORK1,DASDVSER   DOES VOLSER MATCH THAT IN TABLE?
         BE    RACF308             /YES - GO CHECK FLAGS
         LA    R4,DASDELEN(,R4)    /NO  - GO TO NEXT TABLE ENTRY
         B     RACF305
RACF308  TM    DASDVFLG,DASDVIGX   IS VOLUME AVAILABLE?
         BO    RACF320             /NO  - IGNORE IT
RACF310  EQU   *
         OBTAIN CAMLSTS            RETRIEVE DSCB OF DATA SET
         LTR   R15,R15             GOT IT?
         BZ    RACF315             /YES - GO PROCESS IT
         CH    R15,=H'4'           RC = 4 (NO VOL AVAIL)?
         BE    RACF370             /YES - PUT OUT MSG
         CH    R15,=H'8'           RC = 8 (DATASET NOT FOUND)?
         BE    RACF375             /YES - ISSUE MSG
         B     RACF380             /NO  - UNWANTED OBTAIN RC
*
RACF315  TM    DSCBAREA+49,X'40'     RACF DEFINED?
         BO    RACF320             /YES - OK
         LA    R1,MSG5             /NO  - ERROR
         LA    R0,RC8
         BAL   R10,MSG
RACF320  BCT   R2,RACF330          LOOP FOR NEXT VOLUME IN LIST
         B     RACF050             NO MORE VOLS - GET NEXT DSN
*
RACF330  LA    R3,6(,R3)           POINT TO NEXT VOLSER
         MVC   VOLWORK1,0(R3)      MOVE VOLSER TO WORK AREA
         MVC   VOLWORK2,0(R3)
         B     RACF300             GO DO OBTAIN
*
*                                  VOLUME NOT AVAILABLE
RACF370  TM    DASDVFLG,DASDVIGN   SHOULD THIS VOL BE IGNORED
*                                  IF NOT MOUNTED?
         BZ    RACF372             /NO  - ISSUE NOT MOUNTED MSG
         OI    DASDVFLG,DASDVIGX   /YES - DON'T BOTHER WITH IT LATER
         LA    R1,MSG19            ISSUE MSG SAYING WE'LL IGNORE VOL
         LA    R0,RC0
         BAL   R10,MSG
         B     RACF320             CONTINUE WITH NEXT VOL
RACF372  LA    R1,MSG6             VOLUME NOT AVAILABLE
         LA    R0,RC4
         BAL   R10,MSG
         B     RACF320             CONTINUE WITH NEXT VOL
         DROP  R4                 #####
*
RACF375  LA    R1,MSG7             DATA SET NOT FOUND ON VOLUME
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF320
*
RACF380  LA    R1,MSG8             BAD OBTAIN RC
         CVD   R15,WORK
         UNPK  MSG8RC,WORK
         OI    MSG8RC+1,X'F0'
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF320
*
RACF385  LA    R1,MSG18            UNKNOWN VOLUME SERIAL FOUND
         LA    R0,RC4
         BAL   R10,MSG
         B     RACF310
         EJECT
***********************************************************************
*                                                                     *
*   R E T R I E V E   C A T A L O G   I N F O   F O R   V S A M   D S *
*                                                                     *
***********************************************************************
*
RACF400  DS    0H                  SPECIAL PROCESSING FOR VSAM
*  INIT SVC 26 AREAS
*   INIT PARAM LIST
         XC      CPL,CPL               ZERO CPL
         LA      R9,CPL
         USING   CTGPL,R9             ##### CTGPL BASE
         OI      CTGOPTN1,CTGNAME
         OI      CTGOPTN1,CTGCNAME
         OI      CTGOPTN3,CTGLOC
         OI      CTGOPTN3,CTGAM0
         LA      R1,RACFNAM2
         ST      R1,CTGENT
         LA      R1,=CL44' '
         ST      R1,CTGCAT
         LA      R1,CATWORK
         ST      R1,CTGWKA
         OI      CTGDSORG,CTGLTCAT
         MVI     CTGNOFLD,X'02'
*   INIT FIELD LIST 1
         XC      FLST1,FLST1          ZERO FIELD LIST 1
         LA      R1,FLST1
         USING   CTGFL,R1            ##### CTGFL BASE
         ST      R1,CTGFIELD
         MVI     CTGFLDNO,X'01'
         LA      R0,=CL10'ENTYPE'
         ST      R0,CTGFLDNM
*   INIT FIELD LIST 2
         XC      FLST2,FLST2          ZERO FIELD LIST 2
         LA      R1,FLST2
         ST      R1,CTGFIELD+4
         MVI     CTGFLDNO,X'01'
         LA      R0,=CL10'SECFLAGS'
         ST      R0,CTGFLDNM
         DROP    R1                 #####
*  INIT WORK AREA
         XC      CATWORK,CATWORK
         LA      R1,L'CATWORK
         STH     R1,CATWORK
RACF410  LA      1,CPL
         SVC     26
         LTR     R15,R15                     WAS LOCATE OK?
         BZ      RACF420                     /YES - CONTINUE
*                                            /NO
         CH      R15,=H'8'                   WAS IT 'ENTRY NOT FOUND'?
         BE      RACF465                     /YES - SAY NOT FOUND
         B       RACF470                     /NO  - SAY BAD RC
         DROP    R9                         #####
RACF420  CLI     FLST1+19,X'01'              IS THERE AN ENTYPE?
         BNE     RACF475                     /NO  - ERROR
         L       R1,FLST1+20                 GET ADDRESS OF IT
         CLI     0(R1),C'B'                  IS THIS A GDG BASE?
         BE      RACF480                     /YES - ERROR
         CLI     FLST2+19,X'01'              IS THERE A SECFLAGS?
         BNE     RACF485                     /NO  - ERROR
         L       R1,FLST2+20                 GET ADDRESS OF IT
         TM      0(R1),X'80'                 IS THIS ENTRY RACF PROT?
         BNO     RACF490                     /NO  - ERROR
         B       RACF050                     /YES - OK
*
RACF465  LA    R1,MSG23            ENTRY NOT FOUND BY LOCATE
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
*
RACF470  LA    R1,MSG13            BAD LOCATE RC
         CVD   R15,WORK
         UNPK  MSG13RC,WORK
         OI    MSG13RC+1,X'F0'
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF050
*
RACF475  LA    R1,MSG14            ENTYPE NOT RETURNED
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF050
*
RACF480  LA    R1,MSG15            ENTYPE = B (GDG BASES CAN'T BE
         LA    R0,RC4                          RACF PROTECTED)
         BAL   R10,MSG
         B     RACF050
*
RACF485  LA    R1,MSG16            SECFLAGS NOT RETURNED
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF050
*
RACF490  L     R1,FLST1+20         VSAM ELEMENT NOT RACF PROTECTED
         CLI   0(R1),C'U'          IF IT'S A USER CATALOG ENTRY
         BE    RACF495             PUT OUT SPECIAL MSG
         IC    R1,0(,R1)           PUT ENTYPE IN MESSAGE
         STC   R1,MSG17ENT
         LA    R1,MSG17
         LA    R0,RC8
         BAL   R10,MSG
         B     RACF050
*
RACF495  LA    R1,MSG26            CAN'T TELL IF USER CAT PROTECTED
         LA    R0,RC0
         BAL   R10,MSG
         B     RACF050
         EJECT
***********************************************************************
*                                                                     *
*   M I S C E L L A N E O U S   E R R O R S   (R A C F)               *
*                                                                     *
***********************************************************************
*
RACF900  LA    R1,MSG9             TMS INACTIVE
         LA    R0,RC12
         BAL   R10,MSG
         OI    FLAG1,NOTMS         SHOW NO TMS THIS RUN
         B     RACF050             PROCESS ANYWAY
*
RACF910  LA    R1,MSG10            RACF INACTIVE
         LA    R0,RC12
         BAL   R10,MSG
         B     CLOSE
*
RACF920  LA    R1,MSG11            RACF WORKAREA TOO SMALL
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF050
*
RACF930  LA    R1,MSG12            UNEXPECTED RACF RC
         CVD   R15,WORK
         UNPK  MSG12RC,WORK
         OI    MSG12RC+1,X'F0'
         LA    R0,RC12
         BAL   R10,MSG
         B     RACF050
         AIF   ('&UCC1' NE 'YES').NOUCC1C
         EJECT
***********************************************************************
*                                                                     *
*   L O C A T E   C O R R E C T   D S N B                             *
*                                                                     *
***********************************************************************
*
GETDSNB  LH    R4,TM#DSNBS         GET DSNB COUNT
         LTR   R4,R4               ANY DSNB'S?
         BNP   4(,R10)             /NO  - GO BACK
*                                  /YES
         GETDSNB DSNBAREA,TMADSNB, GET THE FIRST DSNB                  X
               (R5),ENQ=NO
         USING DSNB,R5           ##### BASE FOR LOGICAL DSNB
*
GETD010  CLC   DSNBDSN(44),RACFNAM2     GOT THE DSNB?
         BER   R10                      /YES - GO RETURN
         BCT   R4,GETD050               /NO  - TRY NEXT ONE IF ANY
         B     4(,R10)                  NO MORE DSNB'S - GO BACK
*
GETD050  GETDSNB DSNBAREA,         GET NEXT DSNB                       X
               DSNBNEXT,(R5),ENQ=NO
         B     GETD010
         DROP  R5                #####
.NOUCC1C ANOP
         EJECT
***********************************************************************
*                                                                     *
*   W R I T E   A   M E S S A G E                                     *
*                                                                     *
***********************************************************************
*
MSG      MVI   OUTLINE+1,C' '
         MVC   OUTLINE+2(L'OUTLINE-2),OUTLINE+1
         MVC   OUTDSN,RACFNAM2     SET UP ERROR MESSAGE
         MVC   OUTVOL,VOLWORK1
         MVC   OUTMSGID,0(R1)
         MVC   OUTMSG,4(R1)
         UNPK  OUTDATE+1(5),RACFDATE
         MVC   OUTDATE(2),OUTDATE+1
         MVI   OUTDATE+2,C'.'
         OI    OUTDATE+5,X'F0'
         C     R0,RC               SAVE HIGH RETURN CODE
         BNH   MSG010
         ST    R0,RC
MSG010   PUT   SYSPRINT,OUTLINE    ISSUE MSG
         MVI   OUTLINE,C' '        RESET SPACING
         BR    R10
         EJECT
***********************************************************************
*                                                                     *
*   D C B   E X I T                                                   *
*                                                                     *
***********************************************************************
*
DCBEXIT  EQU   *
         USING *,R15             ON ENTRY, R15 POINTS TO US
         USING IHADCB,R1         AND R1 POINTS TO THE DCB
         LH    R4,DCBLRECL       GET THE LRECL AND
         LH    R3,DCBBLKSI       THE BLOCKSIZE
         STH   R4,DCBBLKSI       SET BLKSIZE TO LRECL
         LTR   R3,R3             HAS BLKSIZE BEEN GIVEN?
         BZR   R14               /NO  - LEAVE AS LRECL
         SR    R2,R2             /YES - ENSURE MULTIPLE OF LRECL
         DR    R2,R4
         MR    R2,R4
         STH   R3,DCBBLKSI
         BR    R14               RETURN TO OPEN
         DROP  R1,R15
         EJECT
***********************************************************************
*                                                                     *
*   D A T A   A R E A S                                               *
*                                                                     *
***********************************************************************
*
WORK     DS    D
SAVE     DS    18F
R10INITV DS    F
R10RACF  DS    F
RC       DC    F'0'
DASDTABL DS    A
RACFACT1 ICHEACTN MF=L,                                                X
               FIELD=VOLCNT
RACFACT2 ICHEACTN MF=L,                                                X
               FIELD=CREADATE
RACFACT3 ICHEACTN MF=L,                                                X
               FIELD=DSTYPE
RACFACT4 ICHEACTN MF=L,                                                X
               FIELD=VOLSER
C335001  DC    C'335001'
C865001  DC    C'865001'
OUTLINE  DC    CL133' '
         ORG   OUTLINE+1
OUTMSGID DC    C'    ',C'  '
OUTDSN   DC    CL44' ',C'  '
OUTVOL   DC    CL6' ',C'  '
OUTDATE  DC    CL6' ',C'  '
MSGLEN   EQU   L'OUTLINE-(*-OUTLINE)
OUTMSG   DC    CL(MSGLEN)' '
         ORG   ,
RACFMSG  DC    C' RACF DATASET VERIFICATION:'
MSG1     DC    C'RV01',CL(MSGLEN)'TAPE DATASET NOT FOUND'
MSG2     DC    C'RV02',CL(MSGLEN)'TAPE NOT PROTECTED'
MSG3     DC    C'RV03',CL(MSGLEN)'TAPE IS SCRATCH'
MSG5     DC    C'RV05',CL(MSGLEN)'DATASET NOT RACF INDICATED'
MSG6     DC    C'RV06',CL(MSGLEN)'VOLUME NOT MOUNTED'
MSG7     DC    C'RV07',CL(MSGLEN)'DATASET NOT ON VOLUME'
MSG8     DC    C'RV08',CL(MSGLEN-4)'BAD RETURN FROM OBTAIN'
         DC    C'('
MSG8RC   DC    C'  ',C')'
MSG9     DC    C'RV09',CL(MSGLEN)'UCC-1 (TMS) NOT ACTIVE - CONTINUING'
MSG10    DC    C'RV10',CL(MSGLEN)'RACF NOT ACTIVE - TERMINATING'
MSG11    DC    C'RV11',CL(MSGLEN)'WORKAREA TOO SMALL - RACF'
MSG12    DC    C'RV12',CL(MSGLEN-4)'BAD RETURN FROM RACF'
         DC    C'('
MSG12RC  DC    C'  ',C')'
MSG13    DC    C'RV13',CL(MSGLEN-4)'BAD LOCATE FOR VSAM ENTRY'
         DC    C'('
MSG13RC  DC    C'  ',C')'
MSG14    DC    C'RV14',CL(MSGLEN)'LOCATE ERROR - ENTYPE MISSING'
MSG15    DC    C'RV15',CL(MSGLEN)'ERROR - ENTRY IS GDG BASE'
MSG16    DC    C'RV16',CL(MSGLEN)'LOCATE ERROR - SECFLAGS MISSING'
MSG17    DC    C'RV17',CL(MSGLEN-3)'VSAM ENTRY NOT RACF PROTECTED'
         DC    C'('
MSG17ENT DC    C' ',C')'
MSG18    DC    C'RV18',CL(MSGLEN)'DASD VOL SER NOT IN TABLE'
MSG19    DC    C'RV19',CL(MSGLEN)'** DASDVOL IGNORE SPECIFIED'
MSG21    DC    C'RV21',CL(MSGLEN)'TAPE IS DELETED'
MSG23    DC    C'RV23',CL(MSGLEN)'CATALOG ENTRY NOT FOUND'
MSG24    DC    C'RV24',CL(MSGLEN)'TAPE VOLUME NOT FOUND, TRYING DASD'
MSG25    DC    C'RV25',CL(MSGLEN)'NOT CHECKED - TMS INACTIVE'
MSG26    DC    C'RV26',CL(MSGLEN)'UNABLE TO CHECK USER CATALOGS'
MSG98    DC    C'RV98',CL(MSGLEN)'TOO MANY VOL SER''S IN DASDVOL TABLE'
MSG99    DC    C'RV99',CL(MSGLEN)'DASDVOL TABLE NOT BUILT - DD MISSING'
CAMLSTS  CAMLST SEARCH,RACFNAM2,VOLWORK1,DSCBAREA
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,LRECL=133,RECFM=FBA,  X
               EXLST=EXLST
DASDVOL  DCB   DDNAME=DASDVOL,MACRF=GL,DSORG=PS,LRECL=80,RECFM=FB,     X
               EODAD=INITV900
EXLST    DC    XL1'85',AL3(DCBEXIT)
FLAG1    DC    X'00'               FLAGS:
NOTMS    EQU   X'80'                 TMS NOT ACTIVE
RACFNAME DS    AL1(1),CL44'$'      NAME OF RACF ENTRY BEING PROCESSED
*                                  (INITIALIZED TO $ SO NEXTC WILL FIND
*                                   FIRST DATASET ENTRY)
RACFNAM2 DC    CL44' '
VOLWORK1 DS    CL6
VOLWORK2 DS    CL6
DSCBAREA DS    0D,CL140
         AIF   ('&UCC1' NE 'YES').NOUCC1D
DSNBAREA DS    0D,CL200
         DS    0D
         TMRECORD
.NOUCC1D ANOP
RACFWORK DC    F'1024',1020X'00'
RACFVOLC EQU   RACFWORK+X'1C'+2,2
RACFDATE EQU   RACFVOLC+2+2,3
RACFDSTP EQU   RACFDATE+3+2,1
RACFVOLS EQU   RACFDSTP+1+2
CPL      DS      CL100
FLST1    DS      CL32
FLST2    DS      CL32
CATWORK  DS      CL255
         AIF ('&UCC1' NE 'YES').NOUCC1E
DSNB     DSECT
         TMSDSNB
.NOUCC1E ANOP
TEC413   CSECT
DASDTLEN EQU   4096             FULL LENGTH OF DASD TABLE
DASDENT  DSECT                  DASDTABL ENTRY DESCRIPTION:
DASDVSER DS    CL6                 VOLSER
DASDVFLG DS    X                   FLAGS:
DASDVIGN EQU   X'80'                 IGNORE VOLUME IF NOT MOUNTED
DASDVIGX EQU   X'40'                 VOLUME FOUND NOT MOUNTED - IGNORE
DASDVEND EQU   X'20'                 END OF TABLE - NO DATA IN ENTRY
DASDELEN EQU   *-DASDVSER
         PRINT NOGEN
         IEZCTGFL
         IEZCTGPL
         DCBD  DEVD=DA,DSORG=PS
         PRINT GEN
RC16     EQU   16
RC12     EQU   12
RC8      EQU   8
RC4      EQU   4
RC0      EQU   0
         REGEQU
         END
