         MACRO
         IDFIN06
         COPY IDFGBL
         AIF   (NOT &PIB(48)).TR
         MNOTE *,'IDF100 IN TRACE MODE ENTERING IDFIN06'
.TR      ANOP
         AIF   (&PIB(11)).FLD6
         AIF   (&PIB(2)).FLD1
         AIF   (&PIB(12) OR &B(20)).FLD6                          FSJW
.**********************************************************************
.*                                                                    *
.*                           DATA TYPE BYTE GENERATOR                 *
.*                                                                    *
.**********************************************************************
&K       SETA  55
&DSCB(&K) SETB (&FB(1))
&K       SETA  &K+5
&DSCB(&K) SETB (&FB(2))
&K       SETA  &K+5
&DSCB(&K) SETB (&FB(3))
&M       SETA  17
&B(1)    SETB  (NOT (&B(10) OR &B(13)) AND N'&SYSLIST(&M) NE 0)
&FB(6)   SETB  (&FB(8) OR &FB(9) OR &FB(10) OR &FB(11) OR &FB(12)      X
               OR &B(1) OR &FB(14))
&M       SETA  18
&B(2)    SETB  (NOT &B(13) AND N'&SYSLIST(&M) NE 0)
&M       SETA  19
&B(3)    SETB  (NOT (&B(10) OR &B(13)) AND N'&SYSLIST(&M) NE 0)
&M       SETA  20
&B(4)    SETB  ((&FB(4) OR &FB(5) OR &FB(17)) AND N'&SYSLIST(&M) NE 0)
&FB(7)   SETB  (&FB(15) OR &FB(17) OR &B(1) OR &B(2) OR                X
               &B(3) OR &B(4))
&FA(1)   SETA  &PIA(6)
&A(1)    SETA  64*&FB(1)+32*&FB(2)+16*&FB(3)+8*&FB(4)+4*&FB(5)+2*&FB(6)X
               +&FB(7)
         IDFASM A
.*********************************************************************
.*                                                                    *
.*                           CHARACTER COUNT GENERATOR                *
.*                                                                    *
.**********************************************************************
&A(1)    SETA  &CTA(6)
         IDFASM A
         AIF   (NOT &B(13)).FLD2
.**********************************************************************
.*                                                                    *
.*                           EMITTED DATA GROUP GENERATOR             *
.*                                                                    *
.**********************************************************************
.FLD1    ANOP
&M       SETA  1
         AIF   (&PIB(2) AND &PIA(10) NE &M).FLD5
&PIB(1)  SETB  (T'&SYSLIST(&M,1) EQ 'O')
         AIF   (NOT &PIB(1)).I0216
         IDFMSG1 102
.I0216   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&PIB(2)  SETB  0
         AIF   (&PIB(1)).FLD2
&PIB(1)  SETB  ('&SYSLIST(&M,1)'(1,1) NE '''')
&N       SETA  0
         AIF   (NOT &PIB(1)).I0217
         IDFMSG2 200
.I0217   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).FLD2
&TB(3)   SETB  0
&TB(4)   SETB  0
&TB(5)   SETB  0
&I       SETA  2
         AIF   (&PIB(23)).FLD1A
         IDFTR &SYSLIST(&M,1)
         AGO   .FLD1B
.FLD1A   IDFTRK &SYSLIST(&M,1)
.FLD1B   ANOP
&PIB(1)  SETB  (&TB(4))
         AIF   (NOT &PIB(1)).I0218
&N       SETA  1
         IDFMSG1 103
.I0218   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF (&PIB(1)).FLD2
&PIB(1)  SETB  (&TB(6))
         AIF   (NOT &PIB(1)).I0219
         IDFMSG3 501
.I0219   ANOP ,
&PIB(1)  SETB  (&TB(7))
         AIF   (NOT &PIB(1)).I0220
         IDFMSG3 502
.I0220   ANOP ,
&PIB(1)  SETB  (&TB(8))
         AIF   (NOT &PIB(1)).I0221
         IDFMSG3 503
.I0221   ANOP ,
&PIA(10) SETA  &M
&PIB(2)  SETB  (N'&SYSLIST(&M) EQ 2 AND '&SYSLIST(&M,2)' EQ 'C')
         AIF   (&PIB(2)).FLD5
&N       SETA 1
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0222
         IDFMSG1 104
.I0222   ANOP ,
&PIB(1)  SETB  (&I LT K'&SYSLIST(&M,1))                           FSJW
         AIF   (NOT &PIB(1)).I0222A                               FSJW
         IDFMSG1 105                 EXCESS CHARS                 FSJW
.I0222A  ANOP  ,                                                  FSJW
&A(1)    SETA  &FA(1)+4+(&FA(1)-&FA(1)/486*486)/476*18
&A(1)    SETA  &PIA(6)-&A(1)-(&PIA(6)/486-&A(1)/486)*18
&A(1)    SETA  &A(1)/2
&A(5)    SETA  1
&A(6)    SETA  127
&PIB(1)  SETB  (&A(1) LT &A(5) OR &A(1) GT &A(6))
         AIF   (NOT &PIB(1)).I0223
         IDFMSG3 536
.I0223   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF (&PIB(1)).FLD2
         AIF   (&A(1) EQ &CTA(6)).FLD2
&PIA(6)  SETA  &FA(1)+2+(&FA(1)-&FA(1)/486*486)/478*18
         IDFASM A
&CTA(6)  SETA  &A(1)
.FLD2    ANOP
.**********************************************************************
.*                                                                    *
.*                           VALIDITY BYTE GENERATOR                  *
.*                                                                    *
.**********************************************************************
&PIA(6)  SETA  &PIA(3)+&PIA(4)+&PIA(4)/480*18
&FA(2)   SETA  &PIA(6)
         AIF   (NOT &FB(6)).FLD3
&M       SETA  17
&FB(13)  SETB  (N'&SYSLIST(&M) NE 0)
&A(1)    SETA  64*&FB(8)+32*&FB(9)+16*&FB(10)+8*&FB(11)+4*&FB(12)+2*&FBX
               (13)+&FB(14)
         IDFASM A
.FLD3    AIF   (NOT &FB(7)).FLD4
.**********************************************************************
.*                                                                    *
.*                           FUNCTION BYTE GENERATOR                  *
.*                                                                    *
.**********************************************************************
&FB(16)  SETB  0                        RESET COMPARE BIT
&A(1)    SETA  64*&FB(15)+16*&FB(17)
         IDFASM A
.FLD4    AIF   (NOT &FB(12)).FLD5
&A(1)    SETA  &CTA(7)
         IDFASM A
.FLD5    ANOP
.**********************************************************************
.*                                                                    *
.*                     COMPARE OPERAND PROCESSOR                      *
.*                                                                    *
.**********************************************************************
&M       SETA  17                       POINT TO COMPARE IN CALL
&PIB(1)  SETB  (&PIB(2) AND &PIA(10) NE &M AND N'&SYSLIST(&M) GT 0)
         AIF   (NOT &PIB(1)).I0224
         IDFMSG1 100                    CONTINUATION, CONTINUE IGNORED
.I0224   AIF   (&PIB(2) AND &PIA(10) NE &M).FLD6
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) EQ 0)    COMPARE IS CONT'D
         AIF   (NOT &PIB(1)).I0225
         IDFMSG1 102     EXPECTED CONTINUATION NOT FOUND
.I0225   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
&PIB(2)  SETB  (&PIB(2) AND N'&SYSLIST(&M) GT 0)    SWITCH OFF IF NOT
         AIF   (N'&SYSLIST(&M) EQ 0).CMPX
         AIF   (NOT &B(20)).I0225A                                FSJW
&PIB(1)  SETB  1                                                  FSJW
         IDFMSG1 101                                              FSJW
         AGO   .FLD6                                              FSJW
.I0225A  ANOP  ,                                                  FSJW
&PIB(1)  SETB  (&B(10) OR &B(13))       IGNORE IF SOURCE FID, 'STRING'
         AIF   (NOT &PIB(1)).I0226
         IDFMSG3 537
.I0226   ANOP ,
         AIF  (&PIB(1)).CMPX            EXIT TO IGNORE
&N       SETA  1                        POINT TO FIRST SUBOP
         AIF   (&PIB(2)).CMP1
&FA(3)   SETA  &PIA(3)+&PIA(4)+&PIA(4)/480*18
&PIA(10) SETA  &M
&TB(3)   SETB  (&DSCB(55))
&TB(5)   SETB  (&DSCB(65))
&FB(26)  SETB  0                        THIS BIT CURRENTLY UNUSED
&A(5)    SETA  1                        LOWER LIMIT
&A(6)    SETA  127                      UPPER LIMIT
.CMP1    ANOP  , HEAD OF PROCESSING LOOP
&B(8)    SETB  ('&SYSLIST(&M,&N)' EQ 'FIELD')  TEST FOR NOISE WORD
&N       SETA  &N+&B(8)                 PASS NOISE WORD SUBOP IF ANY
&C(1)    SETC  '&SYSLIST(&M,&N)'        EXTRACT COMPAROPR SUBOPERAND
&FB(22)  SETB  ('&C(1)' EQ 'LT' OR '&C(1)' EQ '''<''' OR '&C(1)' EQ    *
               'NL' OR '&C(1)' EQ '''^<''')
&FB(22)  SETB  (&FB(22) OR '&C(1)' EQ 'GE' OR '&C(1)' EQ '''>=''')
&FB(23)  SETB  ('&C(1)' EQ 'EQ' OR '&C(1)' EQ '''=''' OR '&C(1)' EQ    *
               'NE' OR '&C(1)' EQ '''^=''')
&FB(24)  SETB  ('&C(1)' EQ 'GT' OR '&C(1)' EQ '''>''' OR '&C(1)' EQ    *
               'NG' OR '&C(1)' EQ '''^>''')
&FB(24)  SETB  (&FB(24) OR '&C(1)' EQ 'LE' OR '&C(1)' EQ '''<=''')
&PIB(1)  SETB  (NOT (&FB(22) OR &FB(23) OR &FB(24)))  ONLY ONE ON
         AIF   (NOT &PIB(1)).I0228
         IDFMSG2 200                    COMPAROPR SUBOPERAND INVALID
.I0228   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).CMPX           EXIT ON ERROR
&FB(25)  SETB  ('&C(1)' EQ 'NG' OR '&C(1)' EQ '''^>''' OR '&C(1)' EQ   *
               'NE' OR '&C(1)' EQ '''^=''')
&FB(25)  SETB  (&FB(25) OR '&C(1)' EQ 'NL' OR '&C(1)' EQ '''^<''' OR   *
               '&C(1)' EQ 'GE' OR '&C(1)' EQ '''>=''')
&FB(25)  SETB  (&FB(25) OR '&C(1)' EQ 'LE' OR '&C(1)' EQ '''<=''')
&N       SETA  &N+2
&C(1)    SETC  '&SYSLIST(&M,&N)'        LOGICOPR LOOKAHEAD
&FB(27)  SETB  ('&C(1)' EQ 'AND' OR '&C(1)' EQ '''&&''')
&FB(28)  SETB  ('&C(1)' EQ 'OR' OR '&C(1)' EQ '''×''')
&PIA(6)  SETA  &PIA(3)+&PIA(4)+&PIA(4)/480*18  INSURE MAXIMUM ADDRESS
&FA(4)   SETA  &PIA(6)                  SET CURRENT ADDRESS POINTER
&A(1)    SETA  64*&FB(22)+32*&FB(23)+16*&FB(24)+8*&FB(25)+0*&FB(26)+2*&-
               FB(27)+&FB(28)           COMPUTE VALUE EQUIV OF BITS
         IDFASM A                       ASSEMBLE VALUE CHECK BYTE
&N       SETA  &N-1                     BACK TO COMPARAND
&PIB(1)  SETB  (T'&SYSLIST(&M,&N) EQ 'O')  COMPARAND SUBOP OMITTED
         AIF   (NOT &PIB(1)).I0229
         IDFMSG2 202                    COMPARAND SUBOP NOT CODED
.I0229   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).CMPX           EXIT ON ERROR
         AIF   (&B(11) OR &B(12) OR NOT &FB(1) AND NOT &FB(2) AND      *
               &FB(3) OR &FB(15)).CMP3      6/15/2 APAR 55120     FSJW
.*             SOURCE IS RSN OR CTR, KIND IS N, SINK IS CTR, OR CTR=
         AIF   ('&SYSLIST(&M,&N)'(1,1) NE '''' AND &FA(3) EQ           *
               &FA(4)).CMP3
.* FALL THROUGH HERE TO PROCESS PRESUMPTIVE CHARACTER COMPARAND
&PIB(1)  SETB  ('&SYSLIST(&M,&N)'(1,1) NE '''')  TEST FOR LEADING APOST
         AIF   (NOT &PIB(1)).I0230
         IDFMSG2 200
.I0230   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).CMPX
&A(2)    SETA  K'&SYSLIST(&M,&N)-2      COMPUTE PRESUMED COUNT
&A(2)    SETA  &A(2)-&A(2)/128*128
&A(1)    SETA  &A(2)
         IDFASM A                       ASSEMBLE PRESUMED COUNT
&I       SETA  2
&TB(4)   SETB  (&DSCB(60))
         AIF   (&PIB(23)).CMP1A
         IDFTR &SYSLIST(&M,&N)
         AGO   .CMP1B
.CMP1A   IDFTRK &SYSLIST(&M,&N)
.CMP1B   ANOP
&PIB(1)  SETB  (&TB(4) NE &DSCB(60)) TEST FOR CHAR ERROR
         AIF   (NOT &PIB(1)).I0231
         IDFMSG1 103                    IDENTIFIES WHERE
.I0231   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).CMPX           EXIT ON ERROR
         AIF   (NOT (&TB(6) OR &TB(7) OR &TB(8))).CMP2
&PIB(1)  SETB  (&TB(6)) NON 3735 CHAR
         AIF   (NOT &PIB(1)).I0232
         IDFMSG3 501
.I0232   ANOP ,
&PIB(1)  SETB  (&TB(7)) NON-ASCII
         AIF   (NOT &PIB(1)).I0234
         IDFMSG3 502
.I0234   ANOP ,
&PIB(1)  SETB  (&TB(8)) NON-EBCDIC
         AIF   (NOT &PIB(1)).I0236
         IDFMSG3 503
.I0236   ANOP ,
.CMP2    ANOP  , HERE TO BYPASS WARNING MESSAGES
&A(1)    SETA  &FA(4)+4+(&FA(4)-&FA(4)/486*486)/476*18
&A(1)    SETA  &PIA(6)-&A(1)-(&PIA(6)/486-&A(1)/486)*18
&A(1)    SETA  &A(1)/2
&PIB(1)  SETB  (&A(1) LT &A(5) OR &A(1) GT &A(6))
         AIF   (NOT &PIB(1)).I0238
         IDFMSG3 538
.I0238   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).CMPX           EXIT ON ERROR
         AIF   (&A(1) EQ &A(2)).CMP4
&PIA(6)  SETA  &FA(4)+2+(&FA(4)-&FA(4)/486*486)/478*18
               IDFASM A
         AGO   .CMP4
.CMP3    ANOP , HERE TO PROCESS NUMBERIC CMPNDS
&B(1)    SETB  ('&SYSLIST(&M,&N)'(1,1) EQ '+')  TEST FOR LEADING PLUS
&B(2)    SETB  ('&SYSLIST(&M,&N)'(1,1) EQ '-')  TEST FOR LEADING MINUS
&A(1)    SETA  K'&SYSLIST(&M,&N)-&B(1)-&B(2)
&PIB(1)  SETB  (&A(1) LT &A(5) OR &A(1) GT &A(6))
         AIF   (NOT &PIB(1)).I0240
         IDFMSG3 538
.I0240   ANOP ,
&PIB(15) SETB (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).CMPX
&A(1)    SETA  K'&SYSLIST(&M,&N)-&B(1)
         IDFASM A
&I       SETA  1+&B(1)+&B(2)
         AIF   (NOT &B(2)).CMP3A
         IDFASM (,427D)                 ASSEMBLE MINUS DIRECTLY
.CMP3A   ANOP , HEAD OF DIGIT ASSEMBLY LOOP
&C(2)    SETC  '&SYSLIST(&M,&N)'(&I,1) GET NEXT CHARACTER
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')
         AIF   (NOT &PIB(1)).I0242
         IDFMSG1 103                    INVALID CHARACTER
.I0242   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).CMPX           EXIT ON ERROR
&A(1)    SETA  48+&C(2)
         IDFASM A
&I       SETA  &I+1                     ADVANCE POINTER
         AIF   (&I LE K'&SYSLIST(&M,&N)).CMP3A
         AIF   (&FA(4) GT &FA(3)).CMP4
         AIF   (NOT &FB(1) AND NOT &FB(2) AND &FB(3)).CMP4
&FB(1)   SETB  0
&FB(2)   SETB  0
&FB(3)   SETB  1
&PIB(1)  SETB  1
         AIF   (NOT &PIB(1)).I0243
         IDFMSG3 539
.I0243   ANOP ,
&PIA(6)  SETA  &FA(1)
&A(1)    SETA  64*&FB(1)+32*&FB(2)+16*&FB(3)+8*&FB(4)+4*&FB(5)+2*&FB(6)C
               +&FB(7)
         IDFASM A                       REASSEMBLE DATA TYPE BYTE
.CMP4    ANOP
&N       SETA  &N+1                     ADVANCE TO NEXT SUBOP
&PIB(1)  SETB  (NOT (&FB(27) OR &FB(28) OR &N GT N'&SYSLIST(&M)))
         AIF   (NOT &PIB(1)).I0244
         IDFMSG2 200
.I0244   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).CMPX
&N       SETA  &N+1
&PIB(2)  SETB  (&N EQ N'&SYSLIST(&M) AND '&SYSLIST(&M,&N)' EQ 'C')
         AIF   ((&FB(27) OR &FB(28)) AND NOT &PIB(2)).CMP1
         AIF   (&PIB(2)).FLD6
.CMPX    AIF   (NOT &FB(14)).FLD6
.**********************************************************************
.*                                                                    *
.*                           SELFCHK BYTE GENERATOR                   *
.*                                                                    *
.**********************************************************************
&A(1)    SETA  64*&DSCB(40)+32*&DSCB(45)+16*&DSCB(50)
         IDFASM A
.FLD6    AIF   (NOT &PIB(48)).TX
         MNOTE *,'IDF100 IN TRACE MODE LEAVING IDFIN06'
.TX      ANOP
         MEND
