         MACRO
         IDFIN05
         COPY IDFGBL
         AIF   (NOT &PIB(48)).TR
         MNOTE *,'IDF100 IN TRACE MODE ENTERING IDFIN05'
.TR      ANOP
         AIF   (&PIB(11)).ULX
.**********************************************************************
.*                                                                    *
.*                           SELFCHK OPERAND                          *
.*                                                                    *
.**********************************************************************
&M       SETA  2
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0166
         IDFMSG1 100
.I0166   ANOP ,
         AIF   (&PIB(2)).CKX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0167
         IDFMSG1 101
.I0167   ANOP ,
&PIB(1)  SETB  ((&DSCB(34) OR N'&SYSLIST(&M) NE 0) AND &B(20))    FSJW
         AIF   (NOT &PIB(1)).I0167A                               FSJW
         IDFMSG1 101                                              FSJW
         AGO   .CKX                                               FSJW
.I0167A  ANOP  ,                                                  FSJW
         AIF   (&B(20) OR &PIB(12)).CKX                           FSJW
&FB(14)  SETB  0
&PIB(1)  SETB  (&B(13) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0168
         IDFMSG3 528
.I0168   ANOP ,
         AIF   (&B(13)).CKX
&C(1)    SETC  '&SYSLIST(&M,1)'
&K       SETA  &K+30
&B(6)    SETB  (&B(9) AND (&B(10) OR &B(11)) AND &DSCB(&K-1)           X
               AND NOT &DSCB(&K+4))
&B(1)    SETB  ('&C(1)' EQ '' AND NOT &B(6))
&B(4)    SETB  ('&C(1)' EQ '10')
&B(5)    SETB  ('&C(1)' EQ '11')
&B(2)    SETB  (&B(4) OR &B(5))
&B(3)    SETB  (&B(2) AND '&SYSLIST(&M,2)' EQ 'GENONLY')
&B(2)    SETB  (&B(3) OR &B(2) AND NOT (&B(9) AND (&B(10) OR &B(11))))
&PIB(1)  SETB  ('&C(1)' NE 'NO' AND '&C(1)' NE '' AND NOT (&B(3) OR    X
               &B(2) AND T'&SYSLIST(&M,2) EQ 'O'))
&N       SETA  0
         AIF   (NOT &PIB(1)).I0169
         IDFMSG2 200
.I0169   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&B(1)    SETB  (&B(1) OR &PIB(1) AND NOT &B(6))
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(2))
&FB(14)  SETB  (&DSCB(&K))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(3) AND &B(2))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(4) AND &B(2))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(5) AND &B(2))
         AIF   (&PIB(1)).CKX
&N       SETA  1+&B(3)
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0170
         IDFMSG1 104
.I0170   ANOP ,
.**********************************************************************
.*                                                                    *
.*                           KIND OPERAND                             *
.*                                                                    *
.**********************************************************************
.CKX     AIF   (&PIB(2) OR &PIB(12)).K1
&M       SETA  3
&N       SETA  0
&B(1)    SETB  0
&B(2)    SETB  0
&B(3)    SETB  0
&PIB(1)  SETB  1
         AIF   (NOT &B(9) OR NOT (&FB(3) OR &FB(14) OR &B(10) OR       *
               &B(11) OR &B(12) OR &B(13))).K1
&B(1)    SETB  ((&FB(3) OR &FB(14)) AND '&SYSLIST(&M,1)' NE 'N' AND    *
               '&SYSLIST(&M,1)' NE '')
         AIF   (NOT &B(1)).I0171
         IDFMSG3 551  KIND NOT N, IGNORED WITH BATCH OR SELFCHK
.I0171   ANOP
&B(2)    SETB  ((&B(10) OR &B(11) OR &B(12)) AND '&SYSLIST(&M,1)' NE   *
               'N' AND '&SYSLIST(&M,1)' NE '')
         AIF   (NOT &B(2)).I0172
         IDFMSG3 552  KIND NOT N, IGNORED WITH NUMERIC SOURCE
.I0172   ANOP
&B(3)    SETB  (&B(13) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &B(3)).I0175
         IDFMSG3 553  KIND IGNORED WITH STRING SOURCE
.I0175   ANOP
&PIB(1)  SETB  ((&DSCB(54) OR &DSCB(59) OR &DSCB(64) OR                C
               N'&SYSLIST(&M) NE 0) AND &B(20))                   FSJW
         AIF   (NOT &PIB(1)).I0175A    TEST IF KIND PROMOTED      FSJW
.****                                  OR CODED AT FIELD AND      FSJW
         IDFMSG1 101                   SOURCE X1/X2 , ERROR       FSJW
         AGO   .KX                                                FSJW
.I0175A  ANOP  ,                                                  FSJW
         AIF   (&B(20)).KX                                        FSJW
&K       SETA  &K+5
&DSCB(&K) SETB 0
&FB(1)   SETB  0
&K       SETA  &K+5
&DSCB(&K) SETB 0
&FB(2)   SETB  0
&K       SETA  &K+5
&DSCB(&K) SETB (NOT &B(13))
&FB(3)   SETB  (&DSCB(&K))
         AGO   .KX
.K1      ANOP
&M       SETA  3
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0173
         IDFMSG1 100
.I0173   ANOP ,
         AIF   (&PIB(2)).KX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0174
         IDFMSG1 101
.I0174   ANOP ,
         AIF   (&PIB(12)).KX
&C(1)    SETC  '&SYSLIST(&M,1)'
&B(1)    SETB  ('&C(1)' EQ '')
&B(2)    SETB  ('&C(1)' EQ 'K' AND &PIB(23))
&B(3)    SETB  ('&C(1)' EQ 'A' OR '&C(1)' EQ 'AN')
&B(4)    SETB  ('&C(1)' EQ 'N' OR '&C(1)' EQ 'AN')
&PIB(1)  SETB  ('&C(1)' NE 'U' AND NOT (&B(1) OR &B(2) OR &B(3)        X
               OR &B(4)))
         AIF   (NOT &PIB(1)).I0176
         IDFMSG2 200
.I0176   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&B(1)    SETB  (&B(1) OR &PIB(1))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(2))
&FB(1)   SETB  (&DSCB(&K))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(3))
&FB(2)   SETB  (&DSCB(&K))
&K       SETA  &K+5
&DSCB(&K) SETB (&B(1) AND &DSCB(&K-1) OR &B(4))
&FB(3)   SETB  (&DSCB(&K))
         AIF   (&PIB(1)).KX
&N       SETA  1
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0177
         IDFMSG1 104
.I0177   ANOP ,
.KX      ANOP
         AIF   (NOT &PIB(47)).DSP12
         IDFDSP 'AFTER KIND OPERAND PROCESSING',DSCB,FB,CTA
.DSP12   ANOP
.**********************************************************************
.*                                                                    *
.*                           SINK OPERAND                             *
.*                                                                    *
.**********************************************************************
&M       SETA  4
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0178
         IDFMSG1 100
.I0178   ANOP ,
         AIF   (&PIB(2)).SKX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0179
         IDFMSG1 101
.I0179   ANOP ,
         AIF   (&PIB(12)).SKX
&B(8)    SETB  0
&I       SETA  2
&N       SETA  1
         AIF   (K'&SYSLIST(&M) LT 2).SK2
         AIF   ('&SYSLIST(&M)'(1,1) NE '(').SK2
.SK1     ANOP  , SEARCH FOR INNER GROUPING PARENTHESES
&B(8)    SETB  ('&SYSLIST(&M)'(&I,1) EQ '(')
         AIF   (&B(8)).SK2
&I       SETA  &I+1+K'&SYSLIST(&M,&N)
&N       SETA  &N+1
         AIF   (&I LT K'&SYSLIST(&M) AND &N LE 5).SK1
         AIF   ('&SYSLIST(&M,2)' EQ 'AFTER').SK2
         AIF   ('&SYSLIST(&M,2)' EQ 'X1' OR '&SYSLIST(&M,2)' EQ        X
               'X2').SK2                                         FSJM
&B(8)    SETB  (T'&SYSLIST(&M,2) NE 'N' AND T'&SYSLIST(&M,2) NE 'O')
         AIF   (&B(8) OR T'&SYSLIST(&M,2) EQ 'N' OR T'&SYSLIST(&M,3)   X
               EQ 'N').SK2
.SK1A    AIF   ('&SYSLIST(&M,4)' EQ 'DELIMIT').SK2               FSDB
&B(8)    SETB  (K'&SYSLIST(&M,3) LT 5)
         AIF   (&B(8)).SK2
&B(8)    SETB  ('&SYSLIST(&M,3)'(1,4) NE 'LNG(')
.SK2     ANOP
&A(4)    SETA  K'&SYSLIST(&M)-&B(8)
&A(3)    SETA  &A(4)+&B(8)*(K'&SYSLIST(&M,1)+1-&A(4))
&I       SETA  1+&B(8)
&N       SETA  1
&K       SETA  &PIA(1)-4                INITIALIZE BIT INDEX
&FB(4)   SETB  0
&FB(5)   SETB  0
&FB(7)   SETB  0
&FB(15)  SETB  0
&FB(17)  SETB  0
&FB(36)  SETB  0                                                 FSJM
&PIB(43) SETB  0                                                 FSJM
&PIB(44) SETB  0                                                 FSJM
.SK3     ANOP
&K       SETA  &K+5                     POINT TO BITS FOR NEXT SINK
         AIF   (&I GT &A(3)).SK4
&B(1)    SETB  ('&SYSLIST(&M)'(&I,1) EQ '(')
&I       SETA  &I+&B(1)
         AIF   ('&SYSLIST(&M)'(&I,1) NE ',').SK5
.SK4     ANOP  , DEFAULT TYPE (AND COUNTER NUMBER WHEN APPLICABLE)
&DSKB1(&K) SETB (&DSKB1(&K-1))
         AIF   (NOT &DSKB1(&K)).SK16    NULL, GO TEST EXCESS CHARS
&DSKB1(&K+25) SETB (&DSKB1(&K+24))
&DSKB1(&K+50) SETB (&DSKB1(&K+49))
&DSKB1(&K+75) SETB (&DSKB1(&K+74))
&DSKB1(&K+100) SETB (&DSKB1(&K+99))
&DSKB1(&K+125) SETB (&DSKB1(&K+124))
&DSKB1(&K+150) SETB (&DSKB1(&K+149))                             FSJM
&DSKB1(&K+175) SETB (&DSKB1(&K+174))                             FSJM
&B(8)    SETB  1
         AIF   (&DSKB1(&K+50) OR &DSKB1(&K+75)).SK7
&B(4)    SETB  (NOT &DSKB1(&K+100) AND &DSKB1(&K+125))
&B(5)    SETB  (NOT &DSKB1(&K+100) AND NOT &DSKB1(&K+125))
&B(6)    SETB  (&DSKB1(&K+100) AND &DSKB1(&K+125))
&DSKB1(&K) SETB (NOT &B(9) OR NOT (&B(4) AND &FB(4) OR                 X
               &B(5) AND &FB(5) OR &B(6) AND &B(13)))
&DSKA(&K) SETA &DSKA(&K-1)              RETRIEVE COUNTER NUMBER
         AIF   (&I+6 GT &A(3)).SK16                               FSJM
         AIF   ('&SYSLIST(&M)'(&I,6) NE ',AFTER').SK16
&DSKB1(&K+25)  SETB 1
&I       SETA  &I+6                                               FSJM
         AGO   .SK16
.SK5     ANOP
&PIB(1)  SETB  (&I+2 GT &A(3))
         AIF   (NOT &PIB(1)).I0180
         IDFMSG2 200
.I0180   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).SK6A
&C(1)    SETC  '&SYSLIST(&M)'(&I,3)
&I       SETA  &I+3
&B(1)    SETB  ('&C(1)' EQ 'RPB' AND &PIB(24))
&B(2)    SETB  ('&C(1)' EQ 'INQ')
&B(3)    SETB  ('&C(1)' EQ 'PCH' AND NOT &PIB(24))
&B(4)    SETB  ('&C(1)' EQ 'LPB')
&B(5)    SETB  ('&C(1)' EQ 'CTR' AND NOT (&B(9) AND &B(13)))
&B(6)    SETB  ('&C(1)' EQ 'NUL')
&B(7)    SETB  ('&C(1)' EQ 'IOB')                                  FSJM
&DSKB1(&K) SETB (NOT &B(6))
&K       SETA  &K+25
&DSKB1(&K) SETB (&B(1))
&K       SETA  &K+25
&DSKB1(&K) SETB (&B(7))                                            FSJM
&B(6)    SETB  (&DSKB1(&K) OR &B(6))                              FSJM
&K       SETA  &K+25
&DSKB1(&K) SETB ('&C(1)' EQ 'STG' OR &B(1) OR &B(2) OR &B(3) OR &B(4))
&B(6)    SETB  (&DSKB1(&K) OR &B(6))
&K       SETA  &K+25
&DSKB1(&K) SETB (&B(1) OR &B(3) OR &B(4) OR &B(5))
&K       SETA  &K+25
&DSKB1(&K) SETB ('&C(1)' EQ 'TMT' AND NOT (&B(9) AND &FB(4)) OR &B(2)  X
               OR &B(4) OR &B(5))
&PIB(1)  SETB  (NOT (&B(6) OR &DSKB1(&K) OR '&C(1)' EQ 'PRT' AND       X
               NOT (&B(9) AND &FB(5))))
&K       SETA  &K-125
         AIF   (NOT &PIB(1)).I0181
         IDFMSG2 200
.I0181   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).SK6A           TYPE ERROR, GO DEFAULT
         AIF   (&DSKB1(&K) AND NOT (&DSKB1(&K+50) OR &DSKB1(&K+75) OR  *
               &DSKB1(&K+100))).SK6     PRT/TMT, GO TEST EXCESS CHARS
&B(8)    SETB  (&DSKB1(&K) EQ &DSKB1(&K-1) AND                         *
               &DSKB1(&K+50) EQ &DSKB1(&K+49))
&B(8)    SETB  (&B(8) AND &DSKB1(&K+75) EQ &DSKB1(&K+74) AND           *
               &DSKB1(&K+100) EQ &DSKB1(&K+99))
&B(8)    SETB  (&B(8) AND &DSKB1(&K+125) EQ &DSKB1(&K+124))
         AIF   (&DSKB1(&K) AND (&DSKB1(&K+50) OR &DSKB1(&K+75))).SK7
&PIB(1)  SETB  (&I GT &A(3))
         AIF   (NOT &PIB(1)).I0182
         IDFMSG2 200
.I0182   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).SK6A
&PIB(1)  SETB  ('&SYSLIST(&M)'(&I,1) NE '(' AND &DSKB1(&K) OR          X
               '&SYSLIST(&M)'(&I,1) NE 'L' AND NOT &DSKB1(&K))
         AIF   (NOT &PIB(1)).I0183
         IDFMSG2 200
.I0183   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).SK6A
&I       SETA  &I+1
         AIF   (NOT &DSKB1(&K)).SK6
&DSKB1(&K+150) SETB 0                                             FSJW
&DSKB1(&K+175) SETB 0                                             FSJW
&C(1)    SETC  '0000000'
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)
.SK5A    ANOP
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')
         AIF   (NOT &PIB(1)).I0184
         IDFMSG2 214
.I0184   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).SK6A
&C(1)    SETC  '&C(1)'(2,6).'&C(2)'
&I       SETA  &I+1
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)
         AIF   ('&C(2)' NE ')' AND '&C(1)'(1,1) EQ '0').SK5A
&A(2)    SETA  &C(1)                    CONVERT CHARACTERS TO VALUE
&A(5)    SETA  1
&A(6)    SETA  21
&PIB(1)  SETB  (&A(2) LT &A(5) OR &A(2) GT &A(6))
         AIF   (NOT &PIB(1)).I0185
         IDFMSG2 254
.I0185   ANOP ,
         AIF   (&PIB(1)).SK6A
&DSKA(&K) SETA &A(2)                    STORE ACCEPTED VALUE
&I       SETA  &I+1
         AGO   .SK16                    FINISH PROCESSING LIKE LNG(D)
.SK6     AIF   (&I GT &A(3)).SK18
         AIF   (&I+6 GT &A(3) OR &DSKB1(&K+100) OR                     *
               &DSKB1(&K+75)).SK6B                                FSJM
         AIF   ('&SYSLIST(&M)'(&I,6) NE ',AFTER').SK6B
&DSKB1(&K+25)  SETB 1
&I       SETA  &I+6
.SK6B    AIF   ('&SYSLIST(&M)'(&I,1) EQ ')' AND &I GE &A(3)).SK18
&PIB(1)  SETB  ('&SYSLIST(&M)'(&I,1) EQ ',' OR '&SYSLIST(&M)'(&I,1)    X
               EQ ')')
         AIF   (NOT &PIB(1)).I0186
         IDFMSG1 105
.I0186   ANOP ,
         AIF   (&PIB(1)).SK18
&PIB(1)  SETB  1
         AIF   (NOT &PIB(1)).I0187
         IDFMSG2 200
.I0187   ANOP ,
.SK6A    ANOP  , DEFAULT TYPE FOR ERROR IN TYPECODE
&DSKB1(&K) SETB (&DSKB1(&K-1))
         AIF   (NOT &DSKB1(&K)).SK18
&DSKB1(&K+25) SETB (&DSKB1(&K+24))
&DSKB1(&K+50) SETB (&DSKB1(&K+49))
&DSKB1(&K+75) SETB (&DSKB1(&K+74))
&DSKB1(&K+100) SETB (&DSKB1(&K+99))
&DSKB1(&K+125) SETB (&DSKB1(&K+124))
&DSKB1(&K+150) SETB (&DSKB1(&K+149))                               FSJM
&DSKB1(&K+175) SETB (&DSKB1(&K+174))                               FSJM
&B(8)    SETB  1
         AIF   (&DSKB1(&K+50) OR &DSKB1(&K+75)).SK10
&B(4)    SETB  (NOT &DSKB1(&K+100) AND &DSKB1(&K+125))
&B(5)    SETB  (NOT &DSKB1(&K+100) AND NOT &DSKB1(&K+125))
&B(6)    SETB  (&DSKB1(&K+100) AND &DSKB1(&K+125))
&DSKB1(&K) SETB (NOT &B(9) OR NOT (&B(4) AND &FB(4) OR                 X
               &B(5) AND &FB(5) OR &B(6) AND &B(13)))
&DSKA(&K) SETA &DSKA(&K-1)              RETRIEVE COUNTER NUMBER
         AGO   .SK18
.SK7     ANOP  , PROCESSING OF BUFFER D1
&B(8)    SETB  (&B(8) AND &DSKB1(&K+25) EQ &DSKB1(&K+24))
&J       SETA  24*&DSKB1(&K+50)+12*&DSKB1(&K+75)+6*&DSKB1(&K+100)+3*&DS-
               KB1(&K+125)-9            INDEX OF UPPER LIMIT STORAGE
         AIF   (&I GT &A(3)).SK8
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)
&PIB(1)  SETB  (NOT ('&C(2)' EQ ',' OR '&C(2)' EQ ')' AND &I EQ &A(3)))
         AIF   (NOT &PIB(1)).I0188
         IDFMSG2 200
.I0188   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK6A           TYPE ERROR, GO DEFAULT TYPE
&I       SETA  &I+1                     PASS OVER COMMA
         AIF   (&I GT &A(3)).SK8
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)
         AIF   ('&C(2)' NE ')' AND '&C(2)' NE ',').SK9   NOT NULL CODE
.SK8     ANOP
&DSKB1(&K+150) SETB  (&DSKB1(&K+149))   DEFAULT FROM PRIOR LEVEL FSDB
&DSKB1(&K+175) SETB (&DSKB1(&K+174))    IF OMITTED AT THIS LEVEL FSDB
&B(1)    SETB  (&B(8) AND &DSKA(&K-1) GT 0)
&B(2)    SETB  (&B(9) AND NOT &B(1))
&DSKA(&K) SETA 1+&B(1)*(&DSKA(&K-1)-1)+&B(2)*(&BUFA(&J-1)-1)
         AIF   (NOT &B(9)).SK16
         AGO   .SK12
.SK9     ANOP
         AIF   (&I+1 GT &A(3)).SK9AA    ENOUGH FOR X1 OR X2       FSDB
&DSKB1(&K+150) SETB ('&SYSLIST(&M)'(&I,2) EQ 'X1')                FSDB
&DSKB1(&K+175) SETB ('&SYSLIST(&M)'(&I,2) EQ 'X2')                FSDB
         AIF   (&DSKB1(&K+150) OR &DSKB1(&K+175)).SK10A           FSDB
.SK9AA   ANOP  ,                                                  FSDB
&C(1)    SETC  '0000000'
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     COLLECT FIRST CHARACTER
.SK9A    ANOP  , RETURN POINT FOR D1 COLLECTION
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')  TEST FOR NON-DECIMAL
         AIF   (NOT &PIB(1)).I0189
         IDFMSG3 529
.I0189   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK10
&C(1)    SETC  '&C(1)'(2,6).'&C(2)'
&I       SETA  &I+1                     INCREMENT POINTER
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     COLLECT NEXT CHARACTER
         AIF   ('&C(2)' NE ',' AND '&C(2)' NE ')' AND '&C(1)'(1,1) EQ  *
               '0').SK9A                TEST FOR DELIMITER/OVERFLOW
&A(2)    SETA  &C(1)                    CONVERT COLLECTED VALUE
&A(5)    SETA  1                        LOWER LIMIT
&A(6)    SETA  &BUFA(&J)
&PIB(1)  SETB  (&A(2) LT &A(5) OR &A(2) GT &A(6))  RANGE TEST
         AIF   (NOT &PIB(1)).I0190
         IDFMSG3 530
.I0190   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK10
&DSKA(&K) SETA &A(2)                    STORE ACCEPTED VALUE
         AIF   (NOT &B(9)).SK16
&B(2)    SETB  (NOT &B(8))
         AGO   .SK12
.SK10A   ANOP  ,    INDEX REG BEING USED                           FSJM
&I       SETA  &I+2                     POINT TO DELIMITER        FSDB
         AIF   (&I GT &A(3)).SK18                                  FSJM
         AGO   .SK12                                              FSDB
.SK10    ANOP  , HERE TO SET DEFAULT VALUE FOR D1 AND LNG(D)
&J       SETA  24*&DSKB1(&K+50)+12*&DSKB1(&K+75)+6*&DSKB1(&K+100)+3*&DS-
               KB1(&K+125)-9            INDEX OF UPPER LIMIT STORAGE
&B(1)    SETB  (&B(8) AND &DSKA(&K-1) GT 0)
&B(2)    SETB  (&B(9) AND NOT &B(1))
&DSKA(&K) SETA 1+&B(1)*(&DSKA(&K-1)-1)+&B(2)*(&BUFA(&J-1)-1)
         AIF   (NOT &B(9)).SK18
&FB(17)  SETB  1
&DSKA(&K-1) SETA &B(2)*&DSKA(&K-1)
&CTA(&N) SETA  0
         AGO   .SK18
.SK12    ANOP  , HERE TO PROCESS D2 OR LNG(D)
&FB(17)  SETB  1
&DSKA(&K-1) SETA &B(2)*&DSKA(&K-1)
&CTA(&N) SETA  0                        CLEAR SINK COUNT SHOWING DFLT
&I       SETA  &I+1
         AIF   (&I GT &A(3)).SK18
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)
         AIF   ('&C(2)' EQ ')' OR '&C(2)' EQ ',').SK16
         AIF   (&I+5 GE &A(3)).SK14     UNLESS 6 CHARS, CAN'T BE LNG(D)
         AIF   ('&SYSLIST(&M)'(&I,4) NE 'LNG(').SK14  TEST FOR LNG SPEC
&I       SETA  &I+4                     PASS OVER 'LNG('
&C(1)    SETC  '0000000'
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     COLLECT FIRST CHARACTER
.SK13    ANOP
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')  TEST FOR NON-DECIMAL
         AIF   (NOT &PIB(1)).I0191
         IDFMSG3 531
.I0191   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK18
&C(1)    SETC  '&C(1)'(2,6).'&C(2)'
&I       SETA  &I+1                     INCREMENT POINTER
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     EXTRACT NEXT CHARACTER
         AIF   ('&C(2)' NE ')' AND '&C(1)'(1,1) EQ '0').SK13
&A(2)    SETA  &C(1)
&A(5)    SETA  1                        LOWER LIMIT OF LENGTH
&B(1)    SETB  (&BUFA(&J)-&DSKA(&K)+1 LT 127)
&A(6)    SETA  127+&B(1)*(&BUFA(&J)-&DSKA(&K)-126)
&PIB(1)  SETB  (&A(2) LT &A(5) OR &A(2) GT &A(6))
         AIF   (NOT &PIB(1)).I0192
         IDFMSG3 532
.I0192   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK18
&CTA(&N) SETA  &A(2)                    ELSE STORE COUNT
&I       SETA  &I+1                     INCREMENT INDEX
         AGO   .SK16
.SK14    AIF   (NOT &DSKB1(&K+150) AND NOT &DSKB1(&K+175)).SK14AA FSJM
&PIB(1)  SETB  1                                                 FSJM
         IDFMSG3 533                                             FSJM
&PIB(15) SETB  1                                                   FSJM
         AGO   .SK18                                               FSJM
.SK14AA  ANOP  ,                                                   FSJM
&C(1)    SETC  '0000000'
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     COLLECT FIRST CHARACTER
.SK14A   ANOP  , RETURN POINT FOR D2 COLLECTION
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')  TEST FOR NON-DECIMAL
         AIF   (NOT &PIB(1)).I0193
         IDFMSG3 533
.I0193   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK18
&C(1)    SETC  '&C(1)'(2,6).'&C(2)'
&I       SETA  &I+1                     INCREMENT POINTER
&C(2)    SETC  '&SYSLIST(&M)'(&I,1)     COLLECT NEXT CHARACTER
         AIF   ('&C(2)' NE ',' AND '&C(2)' NE ')' AND '&C(1)'(1,1) EQ  *
               '0').SK14A
&A(2)    SETA  &C(1)                    CONVERT CODE TO VALUE
&A(5)    SETA  &DSKA(&K)                LOWER LIMIT
&B(1)    SETB  (&A(5)+126 LT &BUFA(&J))
&A(6)    SETA  &BUFA(&J)+&B(1)*(&A(5)+126-&BUFA(&J))
&PIB(1)  SETB  (&A(2) LT &A(5) OR &A(2) GT &A(6))  RANGE TEST
         AIF   (NOT &PIB(1)).I0194
         IDFMSG3 534
.I0194   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).SK18
&CTA(&N) SETA  &A(2)-&DSKA(&K)+1        ELSE COMPUTE AND SAVE LENGTH
.SK16    AIF   (&I GT &A(3)).SK18
         AIF   ('&SYSLIST(&M)'(&I,1) EQ ')' AND &I EQ &A(3)).SK18
         AIF   ('&SYSLIST(&M)'(&I,1) NE ',').SK16A               FSJM
&I       SETA  &I+1                                              FSJM
         AIF   (&I+7 GT &A(3)).SK17                              FSJM
         AIF   ('&SYSLIST(&M)'(&I,7) NE 'DELIMIT').SK17          FSJM
&J       SETA  5                                                 FSJM
         AIF   (NOT &PIB(43)).SK16AA    DELIMIT CODED PREVIOUSLY FSJM
         MNOTE 8,'IDF787 MORE THAN ONE SINK DELIMIT INVALID'      FSDB
&PIB(15) SETB  1                                                 FSJM
         AGO   .SK18                                             FSJM
.SK16AA  ANOP  ,                                                 FSJM
&BUFB(&J+79)   SETB  1                                           FSJM
&BUFB(&J+53)   SETB  0       LAST OP NOT CLEAR                    FSJW
&PIB(43) SETB  1                 DELIMIT                         FSJM
&PIB(44) SETB  (&DSKB1(&K+150) OR &DSKB1(&K+175)) WAS INDEXING USED
&B(24)   SETB  (&DSKB1(&K+175))   WHICH INDEX                    FSJM
&I       SETA  &I+7                                              FSJM
         AIF   ('&SYSLIST(&M)'(&I,1) EQ ')' AND &I EQ &A(3)).SK18
.SK16A   ANOP  ,                                                 FSJM
&PIB(1)  SETB  1
         IDFMSG1 105  EXCESS CHARS
         AGO   .SK18                                             FSJM
.SK17    ANOP  ,
         MNOTE 8,'IDF788 DELIMIT/QUALIFIER FOR SINK &N INVALID'   FSDB
&PIB(15) SETB  1                                              AOS64508
.SK18    ANOP  , COMMON POINT TO TRY FOR NEXT SINK
&B(1)    SETB  (&DSKB1(&K) AND NOT (&DSKB1(&K+50) OR &DSKB1(&K+75)))
&FB(4)   SETB  (&FB(4) OR &B(1) AND NOT &DSKB1(&K+100) AND             X
               &DSKB1(&K+125) AND NOT &DSKB1(&K+25))              FSJM
&FB(5)   SETB  (&FB(5) OR &B(1) AND NOT (&DSKB1(&K+100) OR &DSKB1(&K+25?
               ) OR &DSKB1(&K+125) OR &DSKB1(&K+50)))             FSJM
&FB(7)   SETB  (&FB(7) OR &DSKB1(&K+25) AND &B(1))
&FB(15)  SETB  (&FB(15) OR (&DSKB1(&K) AND NOT (&DSKB1(&K+50) OR       X
               &DSKB1(&K+75)) AND &DSKB1(&K+100) AND &DSKB1(&K+125)))
&FB(17)  SETB  (&FB(17) OR &DSKB1(&K+25) AND &B(1))
&PIB(1)  SETB  (&FB(15) AND &B(9) AND (&FB(1) OR &FB(2)) AND NOT       *
               &FB(3))
         AIF   (NOT &PIB(1)).I0196
         IDFMSG3 554
.I0196   ANOP ,
&FB(1)   SETB  (&FB(1) AND NOT &PIB(1))
&FB(2)   SETB  (&FB(2) AND NOT &PIB(1))
&FB(3)   SETB  (&PIB(1) OR NOT &PIB(1) AND (&FB(3) OR &FB(15) AND      *
               &B(9)))
&I       SETA  &A(3)+2                  PASS OVER DELIMITERS
&N       SETA  &N+1                     INCREMENT SINK NUMBER
&B(1)    SETB  (&A(3) LT &A(4))
&A(3)    SETA  &A(3)+1+&B(1)*K'&SYSLIST(&M,&N)
         AIF   (&N LE 5).SK3            GO BACK UNTIL 5 DONE
&PIB(1)  SETB  (&A(3) LE &A(4))         TEST FOR LEFTOVER CHARACTERS
&N       SETA  5
         AIF   (NOT &PIB(1)).I0197
         IDFMSG1 104
.I0197   ANOP ,
.SKX     ANOP  , COMMON EXIT FROM PROCESSING OF SINK OPERAND
.**********************************************************************
.*                                                                    *
.*                           FILL OPERAND                             *
.*                                                                    *
.**********************************************************************
&M       SETA  5
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0198
         IDFMSG1 100
.I0198   ANOP ,
         AIF   (&PIB(2)).FLX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0199
         IDFMSG1 101
.I0199   ANOP ,
&PIB(1)  SETB  ((&DSKB2(4) OR N'&SYSLIST(&M) NE 0) AND &B(20))    FSJW
         AIF   (NOT &PIB(1)).I0199A                               FSJW
         IDFMSG1 101                                              FSJW
         AGO   .FLX                                               FSJW
.I0199A  ANOP  ,                                                  FSJW
         AIF   (&B(20) OR &PIB(12)).FLX                           FSJW
&K       SETA  &K-25
&I       SETA  &K
         AIF   (NOT &B(13)).FL1
&PIB(1)  SETB  (N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0200
         IDFMSG3 555
.I0200   ANOP ,
&K       SETA  &K+5  EQUALS 5 AT FIELD LEVEL
&DSKB2(&K) SETB 0
&DSKB2(&K+5) SETB 0
&DSKB2(&K+10) SETB 0
&DSKB2(&K+15) SETB 0
&DSKB2(&K+20) SETB 0
&K       SETA  &K+20    EQUALS 25 AT FIELD LEVEL
&I       SETA  &K
         AGO   .FLX
.FL1     ANOP
&N       SETA  0
&B(3)    SETB  ((&FB(1) OR &FB(2) OR NOT &FB(3)) AND                   X
               NOT (&B(10) OR &B(11) OR &B(12)))
.FL2     ANOP
&N       SETA  &N+1
&K       SETA  &K+5
&I       SETA  &I+5
&B(4)    SETB  (NOT &DSKB1(&I) OR NOT (&DSKB1(&I+50)                   *
               OR &DSKB1(&I+75)) AND &DSKB1(&I+100) AND &DSKB1(&I+125))
&C(1)    SETC  '&SYSLIST(&M,&N)'
&B(5)    SETB  ('&C(1)' EQ '')
&PIB(1)  SETB  (&B(9) AND NOT &B(5) AND &B(4))
         AIF   (NOT &PIB(1)).I0201
         IDFMSG3 556
.I0201   ANOP ,
&DSKB2(&K) SETB 0
         AIF   (&B(9) AND &B(4)).FL4
&B(6)    SETB  ('&C(1)' EQ '''0''')
&PIB(1)  SETB  (NOT (&B(5) OR &B(6) OR '&C(1)' EQ ''' '''))
         AIF   (NOT &PIB(1)).I0202
         IDFMSG2 200
.I0202   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&B(5)    SETB  (&B(5) OR &PIB(1))
&DSKB2(&K) SETB (&DSKB2(&K-1) AND &B(5) AND (NOT &B(9) OR NOT &FB(1)   X
               AND NOT &FB(2)) OR &B(6))
         AIF   (NOT (&B(9) AND &DSKB2(&K) AND &B(3))).FL4
&PIB(1)  SETB   1
         AIF   (NOT &PIB(1)).I0203
         IDFMSG3 557
.I0203   ANOP ,
&FB(1)   SETB  0
&FB(2)   SETB  0
&FB(3)    SETB 1
&B(3)    SETB  0
.FL4     AIF   (&N LT 5).FL2
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0204
         IDFMSG1 104
.I0204   ANOP ,
.FLX     ANOP
.**********************************************************************
.*                                                                    *
.*                           JUSTIFY OPERAND                          *
.*                                                                    *
.**********************************************************************
&M       SETA  6
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0205
         IDFMSG1 100
.I0205   ANOP ,
         AIF   (&PIB(2)).JSX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0206
         IDFMSG1 101
.I0206   ANOP ,
&PIB(1)  SETB  ((&DSKB2(29) OR &DSKB2(54) OR                           C
               N'&SYSLIST(&M) NE 0) AND &B(20))                   FSJW
         AIF   (NOT &PIB(1)).I0206A                               FSJW
         IDFMSG1 101                                              FSJW
         AGO   .JSX                                               FSJW
.I0206A  ANOP  ,                                                  FSJW
         AIF   (&B(20) OR &PIB(12)).JSX                           FSJW
&N       SETA  0
&G       SETA  0
&K       SETA  &K+25
&I       SETA  &I-25
.JS1     ANOP
&N       SETA  &N+1
&K       SETA  &K-20
&I       SETA  &I+5
&B(1)    SETB  (NOT (&DSKB1(&I+100) AND &DSKB1(&I+125)))
         AIF   (NOT &B(9) OR &DSKB1(&I) AND (&DSKB1(&I+50) OR          *
               &DSKB1(&I+75) OR &B(1))).JS2
&PIB(1)  SETB  (T'&SYSLIST(&M,&N) NE 'O')
         AIF   (NOT &PIB(1)).I0207
         IDFMSG3 558
.I0207   ANOP ,
&DSKB2(&K) SETB 0
&K       SETA  &K+25
&DSKB2(&K) SETB 0
         AGO   .JS5
.JS2     ANOP
&C(1)    SETC  '&SYSLIST(&M,&N)'
&B(1)    SETB  (&DSKB1(&I) AND (&DSKB1(&I+50) OR &DSKB1(&I+75))) BUFFER
&B(2)    SETB  (&DSKB1(&I) AND NOT (&DSKB1(&I+50) OR                   *
               &DSKB1(&I+75) OR &DSKB1(&I+100) OR &DSKB1(&I+125)))  PRT
&B(3)    SETB  ('&C(1)' EQ 'C' OR '&C(1)' EQ 'R' OR '&C(1)' NE 'L' AND *
               (&DSKB2(&K+24) OR &DSKB2(&K+49))) JUSTIFY REQUIRED
&B(1)    SETB  ((&B(1) OR &B(2)) AND &B(3))  PRT OR BUFFER WITH JUSTIFY
&B(2)    SETB  (&DSKB1(&I) AND NOT (&DSKB1(&I+50) OR                   *
               &DSKB1(&I+75) OR &DSKB1(&I+100)) AND &DSKB1(&I+125)) TMT
&B(3)    SETB  (&B(2) AND &B(3)) TMT WITH JUSTIFY
&B(4)    SETB  ('&C(1)' EQ '')
&B(5)    SETB  ('&C(1)' EQ 'C' AND (NOT &B(9) OR &B(1) OR &B(3)))
&B(6)    SETB  ('&C(1)' EQ 'R' AND (NOT &B(9) OR &B(1) OR &B(3)))
&PIB(1)  SETB  ('&C(1)' NE 'L' AND NOT (&B(4) OR &B(5) OR &B(6)))
         AIF   (NOT &PIB(1)).I0209
         IDFMSG2 200
.I0209   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&B(4)    SETB  (&B(4) OR &PIB(1))
&DSKB2(&K) SETB (&B(4) AND &DSKB2(&K-1) OR &B(5))
&K       SETA  &K+25
&DSKB2(&K) SETB (&B(4) AND &DSKB2(&K-1) OR &B(6))
         AIF   (NOT (&B(2) AND &B(9))).JS5
&B(3) SETB (&B(3) AND (&DSKB2(&K-50) OR &DSKB2(&K-25) OR &DSKB2(&K)))
&G       SETA  &N                       REMEMBER NUMBER OF TMT
&FB(4)   SETB  (&FB(4) AND NOT &B(3))  RECOMPUTE TRANSMIT BIT
&FB(17)  SETB  (&FB(17) OR &B(3) OR &DSKB1(&I+25))
.JS5     AIF   (&N LT 5).JS1
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0210
         IDFMSG1 104
.I0210   ANOP ,
.JSX     ANOP
.**********************************************************************
.*                                                                    *
.*                           UNDERLINE OPERAND                        *
.*                                                                    *
.**********************************************************************
&M       SETA  7
&PIB(1)  SETB  (&PIB(2) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0211
         IDFMSG1 100
.I0211   ANOP ,
         AIF   (&PIB(2)).ULX
&PIB(1)  SETB  (&PIB(12) AND N'&SYSLIST(&M) NE 0)
         AIF   (NOT &PIB(1)).I0212
         IDFMSG1 101
.I0212   ANOP ,
&PIB(1)  SETB  ((&DSKB2(79) OR N'&SYSLIST(&M) NE 0) AND &B(20))   FSJW
         AIF   (NOT &PIB(1)).I0212A                               FSJW
         IDFMSG1 101                                              FSJW
         AGO   .ULX                                               FSJW
.I0212A  ANOP  ,                                                  FSJW
         AIF   (&B(20) OR &PIB(12)).ULX                           FSJW
&N       SETA  0
&F       SETA  0
&I       SETA  &I-25
.UL1     ANOP
&N       SETA  &N+1
&C(1)    SETC  '&SYSLIST(&M,&N)'
&K       SETA  &K+5
&I       SETA  &I+5
&B(1)    SETB  (NOT &DSKB1(&I) OR &DSKB1(&I+50)                        *
               OR &DSKB1(&I+75) OR &DSKB1(&I+100) OR &DSKB1(&I+125))
&B(2)    SETB  ('&C(1)' EQ '')
&B(3)    SETB  ('&C(1)' EQ 'NO')
         AIF   (NOT &B(9) OR NOT &B(1)).UL2
&DSKB2(&K) SETB 0
&PIB(1)  SETB  (NOT (&B(3) OR &B(2) AND NOT &DSKB2(&K-1)))
         AIF   (NOT &PIB(1)).I0213
         IDFMSG3 559
.I0213   ANOP ,
         AGO   .UL3
.UL2     ANOP
&B(4)    SETB  ('&C(1)' EQ 'YES' AND NOT &PIB(23))
&PIB(1)  SETB  (NOT (&B(2) OR &B(3) OR &B(4)))
         AIF   (NOT &PIB(1)).I0214
         IDFMSG2 200
.I0214   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
&B(2)    SETB  (&B(2) OR &PIB(1))
&DSKB2(&K) SETB (&B(2) AND &DSKB2(&K-1) OR &B(4))
&B(1)    SETB  (&DSKB2(&K-25) OR &DSKB2(&K-50) OR                      C
               &DSKB2(&K))
&FB(17)  SETB  (&FB(17) OR &B(1) OR &DSKB1(&I+25))
&FB(5)   SETB  (&FB(5) AND NOT &B(1) AND NOT &DSKB1(&I+25))
&F       SETA  &N                      SAVE SINK NUMBER OF PRT
.UL3     AIF   (&N LT 5).UL1
&PIB(1)  SETB  (N'&SYSLIST(&M) GT &N)
         AIF   (NOT &PIB(1)).I0215
         IDFMSG1 104
.I0215   ANOP ,
.ULX     ANOP
         AIF   (NOT &PIB(47)).DSP13
         IDFDSP 'AFTER UNDERLINE PROCESSING',DSKB1,FB,A,M
.DSP13   ANOP
         AIF   (NOT &PIB(48)).TX
         MNOTE *,'IDF100 IN TRACE MODE LEAVING IDFIN05'
.TX      ANOP
         MEND
