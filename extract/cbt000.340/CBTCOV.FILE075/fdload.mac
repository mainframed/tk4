         MACRO
&NAME    FDLOAD                                                        X
               &KEYLEN=,&DATALEN=,&ENDCHAR=
         COPY  IDFGBL
         AIF   (&PIB(46)).TX            SYNTAX CHECK
         AIF   (NOT &PIB(48)).TR        IN TRACE MODE
         MNOTE *,'IDF100 IN TRACE MODE ENTERING FDLOAD'
.TR      ANOP  ,
&PIB(1)  SETB  (&PIB(2))
         AIF   (NOT &PIB(1)).X000
         IDFMSG 018
&PIB(15)  SETB 1
         AGO  .TX
.X000    ANOP  ,
         AIF   (&PIB(13)).X001
         MNOTE 0,'IDF475 FDLOAD IGNORED FOR NON LOAD FDP'
         AGO   .TX
.X001    ANOP  ,                                          IR00271
&PIB(27) SETB  1           FDLOAD ENTERED                 IR00271
.********************************************************************
.*                                                                   *
.*                           TEST FOR CORRECT CODING OF KEYLEN       *
.*                                                                   *
.********************************************************************
         AIF   (T'&KEYLEN NE 'O').X001A
         MNOTE 8,'IDF778 MANDATORY KEYLEN OPERAND OMITTED'
&PIB(15) SETB  1
         AGO   .X003A
.X001A   AIF   (T'&KEYLEN EQ 'N' AND '&KEYLEN(1)'(1,1) NE 'C').X002
         MNOTE 8,'IDF779 KEYLEN OPERAND IS CODED NON-NUMERIC'
&PIB(15) SETB  1
         AGO   .X003A
.X002    ANOP  ,
         AIF   (&KEYLEN(1) GE 1 AND &KEYLEN(1) LE 15).X003
&PIB(15) SETB  1
         MNOTE 8,'IDF782 KEYLEN NOT BETWEEN 1 AND 15'
         AGO   .X003A
.X003    MNOTE *,'IDF151 KEYLEN IS &KEYLEN(1)'
.X003A   ANOP  ,
&PIB(1)   SETB  (N'&KEYLEN GT 1)
         AIF   (NOT &PIB(1)).X003AB
         MNOTE 0,'IDF469 EXCESS SUBOPERANDS OF KEYLEN IGNORED'
.X003AB ANOP ,
.*********************************************************************
.*                                                                   *
.*                           TEST FOR CORRECT CODING OF DATALEN      *
.*                                                                   *
.*********************************************************************
         AIF   (T'&DATALEN NE 'O').X003B
         MNOTE 8,'IDF783 MANDATORY DATALEN OPERAND OMITTED'
&PIB(15) SETB  1
         AGO   .X005A
.X003B   AIF   (T'&DATALEN EQ 'N' AND '&DATALEN(1)'(1,1) NE 'C').X004
         MNOTE 8,'IDF784 DATALEN OPERAND IS CODED NON-NUMERIC'
&PIB(15) SETB  1
         AGO   .X005A
.X004    ANOP  ,
&PIB(1)  SETB  (&DATALEN(1)+&KEYLEN(1) GT 234 OR &DATALEN(1) LT 1)
         AIF   (NOT &PIB(1)).X005
&PIB(15) SETB  1
&A(3)    SETA  &KEYLEN(1)+1
        MNOTE 8,'IDF785 DATALEN PLUS KEYLEN NOT BETWEEN &A(3) AND 234'
         AGO   .X005A
.X005    MNOTE  *,'IDF152 DATALEN IS &DATALEN(1)'
.X005A   ANOP  ,
&PIB(1)  SETB  (N'&DATALEN GT 1)
         AIF   (NOT &PIB(1)).X005B
         MNOTE  0,'IDF470 EXCESS SUBOPERANDS OF DATALEN IGNORED'
.X005B   ANOP  ,
.*********************************************************************
.*                                                                   *
.*                 GENERATE FIRST PART OF READ KEY                   *
.*                                                                   *
.*********************************************************************
         AIF   (&PIB(15)).TX
&K       SETA  1
&FA(3)   SETA  &PIA(6)
*          SOURCE AND SINK KEY AND TEST ENDCHAR FOR BRANCH TO D. READ
.X006    ANOP  ,
&B(6)    SETB  (&K EQ 9 OR &K EQ 15)
&C(1)    SETC  '8400040196483296'(&K,2)
&A(1)    SETA   (&C(1)-&C(1)*&B(6)+&KEYLEN(1)*&B(6))
         IDFASM  A
&K       SETA  &K+2
         AIF   (&K LE 15).X006                                   FSJM
         AIF   (T'&ENDCHAR EQ 'O').X011  WAS ENDCHAR CODED
&K       SETA   (K'&ENDCHAR(1))
&PIB(1)  SETB  ('&ENDCHAR(1)'(1,1).'&ENDCHAR(1)'(&K,1) NE '''''')
         AIF (NOT &PIB(1)).X007
         MNOTE 8,'IDF785 ENDCHAR NOT PROPERLY FRAMED'
&PIB(15) SETB  1
         AGO   .TX
.*********************************************************************
*                                                                    *
.*                 GENERATE ENDCHAR AND CALC WHERE IT SHOULD END     *
.*                                                                   *
.*********************************************************************
.X007    AIF   (N'&ENDCHAR LE 1).X008
         MNOTE  0,'IDF471 EXCESS SUBOPERANDS OF ENDCHAR IGNORED'
.X008    ANOP  ,
&A(3)    SETA   &PIA(6)+2*&KEYLEN+(&PIA(6)-&PIA(6)/486*486)/(480-2*&KEYC
               LEN)*18
&TB(3)   SETB  0
&TB(4)   SETB  0
&TB(5)   SETB  0
&I       SETA  2
         IDFTR &ENDCHAR(1)
&PIB(1)  SETB  (&TB(4))
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (NOT &PIB(1)).X009
         IDFMSG 500
.X009    AIF   (&PIA(6) LE &A(3)).X010
&PIA(6)  SETA  &A(3)
         MNOTE 0,'IDF472 ENDCHAR TOO LONG,  '
         MNOTE 0,'        TRUNCATED TO &KEYLEN(1) CHARACTERS'
         AGO   .X013
.X010    AIF   (&PIA(6) EQ &A(3)).X013
.*********************************************************************
.*                                                                   *
.*                      PAD ENDCHAR WITH BLANKS FOR REMAINDER        *
.*                                                                   *
.*********************************************************************
&A(2)    SETA  (&A(3)-&PIA(6)-(&A(3)/486-&PIA(6)/486)*18)/2
         MNOTE 0,'IDF473 ENDCHAR TOO SHORT, '
         MNOTE 0,'       PADDED TO &KEYLEN(1) BY &A(2) BLANKS'   FSJM
.X010A   IDFASM  (,4270)
&A(2)    SETA  &A(2)-1
         AIF   (&A(2) EQ 0).X013
         AGO   .X010A
.*********************************************************************
.*                                                                   *
.*                      GENERATE *** FOR DEFAULT TO ENDCHAR          *
.*                                                                   *
.*********************************************************************
.X011    MNOTE 0,'IDF474 DEFAULT ENDCHAR IS &KEYLEN(1) ASTERISKS'
.X011A   ANOP  ,
&A(2)    SETA  &KEYLEN(1)
.X012    ANOP  ,
         IDFASM (,427A)
&A(2)    SETA  &A(2)-1
         AIF   (&A(2) GT 0).X012
.*********************************************************************
.*                                                                   *
.*                 LAST PART OF READ KEY AND COMPARE FOR EOF         *
.*                                                                   *
.*********************************************************************
.X013    ANOP  ,
&K       SETA  1
.X013B   ANOP  ,
&C(1)    SETC  '127096096005000004032000'(&K,3)
         AIF   (&K NE 4).X013C                                  A00911
&FA(2)   SETA  &PIA(6)                                          A00911
.X013C   ANOP  ,                                                A00911
&B(6)    SETB  (&K EQ 19)
&A(1)    SETA   (&C(1)-&C(1)*&B(6)+&KEYLEN(1)*&B(6))
         IDFASM  A
&K       SETA  &K+3
         AIF   (&K LE 22).X013B
.*********************************************************************
.*                                                                   *
.*                 GENERATE  RECORD AND FILE SEPERATOR               *
.*                                                                   *
.*********************************************************************
&B(1)    SETB  (&DATALEN(1) LE 127)
&B(3)    SETB  (&DATALEN(1) GT 127)
&B(2)    SETB  (&KEYLEN(1)+6+&DATALEN(1) GT 127)
&K       SETA  1
*             INSERT RECORD SEPARATOR FOR KEY AND DATA IN IOB
.X013A   ANOP  ,
&C(1)    SETC  '82010120160500000100'(&K,2)
&A(1)    SETA  &C(1)
         AIF   (&K NE 13).XAA
&A(1)    SETA  01*&B(7)*&B(2)
.XAA     AIF   (&K NE 15).XDD
&A(1)    SETA  &KEYLEN(1)+4+(&DATALEN(1)+1)*&B(7)
         AIF   (NOT &B(7) OR (&B(7) AND NOT &B(2))).XDD
&A(1)    SETA  &A(1)-128
.XDD     IDFASM A
&K       SETA  &K+2
         AIF   (&K  LE 19).X013A
         AIF   (&K GT 19 AND &B(7)).X014
&K       SETA  1
&B(7)    SETB  1
         AGO   .X013A
.*********************************************************************
.*                                                                   *
.*                 FIRST PART OF READ DATA                           *
.*                                                                   *
.*********************************************************************
.X014    ANOP  ,
&K       SETA  1
&B(7)    SETB  0
&B(6)    SETB  0
&B(4)    SETB  0
*              SOURCE AND SINK DATA AND RETURN TO READ KEY
.X015    ANOP  ,
&C(1)    SETC  '084000096001127016005'(&K,3)
&A(1)    SETA  &C(1)                                              FSJM
         AIF   (&K NE 4).XA
&A(1)    SETA  01*&B(4)
.XA      AIF   (&K NE 7).XB
&A(1)   SETA   &KEYLEN(1)+4-1*&B(4)
.XB      AIF   (&K NE 13).XD
         AIF   (&B(3) AND NOT &B(4)).XD
&A(1)    SETA  &DATALEN(1)-127*&B(4)
.XD      IDFASM A
&K       SETA  &K+3
         AIF   (&K LT 20).X015
.*********************************************************************
.*                                                                   *
.*                 GENERATE THE START ADDRESS                        *
.*                                                                   *
.*********************************************************************
&A(1)    SETA  01*&B(4)                                           FSJM
         IDFASM A                                                 FSJM
&A(1)    SETA  &KEYLEN(1)+5-1*&B(4)
         IDFASM  A
.*********************************************************************
.*                                                                   *
.*                      GENERATE THE COUNT BYTE                      *
.*                                                                   *
.*********************************************************************
&A(1)    SETA  &DATALEN(1)*&B(1)+(&DATALEN(1)-127)*&B(4)
         AIF   (&B(1) OR (&B(3) AND &B(4))).X014A
&A(1)    SETA  127
.X014A   IDFASM  A
.** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ** *
.*                                                                   *
.*                 GENERATE THE FINAL END CONTROL                    *
.*                                                                   *
.** * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * ** *
.X017    ANOP  ,
&A(1)    SETA  00
         IDFASM  A
&B(4)    SETB  (&B(3) AND NOT &B(4))
&K       SETA 1
         AIF   (&B(4)).X015
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*                                                                   *
.*                      BRANCH BACK TO THE FIRST READ                *
.*                                                                   *
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
&A(1)    SETA  118
         IDFASM  A
&A(1)    SETA  48
         IDFASM  A
&A(1)    SETA  97
         IDFASM A
&A(2)    SETA  &PIA(6)+4+(&PIA(6)-&PIA(6)/486*486)/476*18
&A(2)    SETA  &A(2)-&FA(3)-(&A(2)/486-&FA(3)/486)*18          A55145
&A(2)    SETA  &A(2)/2
&A(1)    SETA  64+&A(2)/234*2+(&A(2)-&A(2)/234*234)/128
         IDFASM A
&A(2)    SETA  &A(2)-&A(2)/234*234
&A(1)    SETA  &A(2)-&A(2)/128*128
         IDFASM A
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*                                                                   *
.*                      THE END CHAR HAS BEEN READ AND THIS IS       *
.*                      A DUMMY READ TO GET PASSED THE DUMMY DATA    *
.*                                                                   *
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
&A(2)    SETA  &FA(2)+4+(&FA(2)-&FA(2)/486*486)/476*18
&A(2)    SETA  &PIA(6)-&A(2)-(&PIA(6)/486-&A(2)/486)*18        A55145
&A(2)    SETA  &A(2)/2
&A(1)    SETA  &A(2)/234*2+(&A(2)/234*234)/128
&PIA(6)  SETA  &FA(2)
         IDFASM A
&A(2)    SETA  &A(2)-&A(2)/234*234
&A(1)    SETA  &A(2)-&A(2)/128*128
         IDFASM A
*              THIS IS A DUMMY READ AFTER ENDCHAR HAS BEEN READ      *
.X0111   ANOP  ,
&A(1)    SETA  84
&PIA(6)  SETA  &PIA(3)+&PIA(4)+&PIA(4)/480*18
         IDFASM A
&A(1)    SETA  01*&B(4)
         IDFASM A
&A(1)   SETA  &KEYLEN(1)+4-1*&B(4)
.X0112   IDFASM  A
&A(1)    SETA 00
         IDFASM A
&A(1)    SETA &DATALEN(1)*&B(1)+(&DATALEN(1)-127)*&B(4)
         AIF   (&B(1) OR (&B(3) AND &B(4))).X019
&A(1)    SETA  127
.X019    IDFASM A
&A(1)    SETA  00
         IDFASM A
&B(4)    SETB  (&B(3) AND NOT &B(4))
         AIF   (&B(4)).X0111
.TX      MEND
