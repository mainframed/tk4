         MACRO
&GARP IMDSADMP &START=,&OUTPUT=P00E,&IPL=191,&TYPE=,&PROTECT=YES,      X
               &CONSOLE=(009,1052),                               M2022X
               &CPU=(360,NOMP)                                   A36497
         GBLB  &INSW
         LCLA  &MULT,&POS,&ENTRY,&LENGTH,&WORKSZ,&LOADPT         A36497
         LCLB  &TAPE,&HSP,&MP                                    A36497
         LCLC  &ADDR,&OUT,&TEMP,&TYP,&PAD,&TYP2,&TYP1,&IPL1      A57317
         LCLC  &CPUID,&PROT,&CONTYPE                              M2022
         LCLC  &ALTCONS,&CONS,&CONSTP                      M4009,A36497
.**********************************************************************
.*                                                                    *
.*A 53300-53320,53900-54000,81500,147000,148700-148800,81520     A57317
.*A 50300-50388,53984,53996-53998,76100-76184,203300-203360      A57317
.*C 4800,77400,141600                                            A57317
.*D 78000-80400,82200-82800,54000-57600                          A57317
.*D 096000-098000                                                A36497
.*D 547100-547120                                                 M6103
.*D 678600,764400,765600                                          M6104
.*C 499800                                                       A51760
.*A 280700,314300,605900,605920,686900,686940,751100             A53332
.*C 247800,249600,252000,256200,325800,336600,358200,372600,     A53332
.*C 373800,376200,378600,384000,484800,491400,493200,498000,     A53332
.*C 500400,529800,553800,583800,600000,602400,604800,610200,     A53332
.*C 621600,622200,629400,633600,645000,685800,687000,690600,     A53332
.*C 712200,713400                                                A53332
.*C 219000,220200,221400,222600,223800,226800,228000,229200,     A53332
.*C 230400,231600,234000,235200,236400,237600,238800             A53332
.*D 279600,747600,751200,751800-754800,768000,770400             A53332
.*A 315900                                                      SA64166
.*C 322800                                                      SA64166
.*C 219000,220200,221400,222600,223800,226800,228000,229200,   @SA65206
.*C 219000,220200,221400,222600,223800,226800,                 @SA72615
.*C 228000,229200,230400,231600,234000,235200,236400,          @SA72615
.*C 237600,238800                                              @SA72615
.*C 219000,220200,221400,222600,223800,226800,                 @SA72615
.*                                                                    *
.*TITLE- IMDSADMP- RESIDENT DUMP MACRO                                *
.*                                                                    *
.*STATUS- VERSION 21.7  APRIL  1973                       A51760,A53332
.*                                                                    *
.*FUNCTION/OPERATION-                                                 *
.*  USER ASSEMBLES MACRO PER INSTALLATION REQUIREMENTS. ASSEMBLY      *
.*  PRODUCES A LISTING AND DECK. DECK IS IPLED TO WRITE RESIDENT      *
.*  DUMP PGM ON A DIRECT ACCESS VOLUME AS IPL TEXT. ANYTIME STAND-    *
.*  ALONE DUMP IS REQUIRED, IMDSADMP IS ACTIVATED BY IPL OF DEVICE    *
.*  CONTAINING DUMP PGM.                                              *
.*     OTHER OPTION (IPL=TAPE) ALLOWS IPL FROM TAPE.  THIS OPTION     *
.*  SUPPORTS HI SPEED OUTPUT ONLY.                                    *
.*    IMDSADMP MAY BE GENERATED WITH SPECIAL SUPPORT FOR M65MP   A36497
.*  SYSTEMS.  THIS SUPPORT INCLUDES, SAVING OF REGISTERS FROM    A36497
.*  BOTH CPU'S WHENEVER THE DIRECT CONTROL FEATURE IS            A36497
.*  OPERATIONAL, AND DUMPING ALL ADDRESSABLE MAIN STORAGE        A36497
.*  EVEN IF ADDRESS RANGES ARE NOT CONTIGUOUS.  THIS SUPPORT     S36497
.*  IS PROVIDED IN RESPONSE TO APAR'S 36497 AND 37307; HOWEVER,  A36497
.*  THE LISTING WILL BE FLAGGED WITH APAR NUMBER 36497 WHERE     A36497
.*  M65MP SUPPORT IS IMPLEMENTED.                                A36497
.*                                                                    *
.*INPUT- MACRO ASSEMBLY REQUIRES MACRO KEYWORD PARAMETERS             *
.*  IPL=(CUU×TAPE)  WHERE CUU IS THE ADDR OF DIRECT ACCESS DEVICE TO  *
.*    CONTAIN IMDSADMP.  SPECIFYING TAPE PRODUCES A HIGH SPEED DUMP   *
.*    PROGRAM WHICH CAN BE IPL-ED FROM TAPE.  WHEN TAPE IS SPECIFIED, *
.*    NO OTHER KEYWORDS EXCEPT PROTECT AND CPU ARE EXAMINED.          *
.*  OUTPUT=(P×T)CUU  WHERE CUU IS THE DEFALT OUTPUT DEVICE ADDRESS.   *
.*    WHEN THE DUMP IS IPL-ED, MESSAGE IMD001A IS ISSUED TO ASK THE   *
.*    OPERATOR FOR THE OUTPUT DEVICE ADDRESS.  IF THE OPERATOR        *
.*    RESPONDS WITH EOB, THEN THE DEFALT DEVICE IS USED.              *
.*  START=X  WHERE X IS THE STORAGE LOCATION INTO WHICH THE DUMP IPL  *
.*    TEXT IS READ.  THIS IS THE ONLY STORAGE WHICH IS MODIFIED BY    *
.*    THE DUMP PROGRAM.  STORAGE FOR THE DUMP PROGRAM ITSELF IS SAVED *
.*    TEMPORIARLY ON DIRECT ACCESS.  THE DEFALT VALUE OF START        *
.*    PARAMETER IS DEPENDENT ON THE VALUE OF THE CPU PARAMETER-       *
.*    X'80' FOR CPU=360 AND X'100' FOR CPU=370.                       *
.*  TYPE=(HI×LOW)  SPECIFIES WHETHER THE DUMP PROGRAM IS TO OUTPUT IN *
.*    HI OR LOW SPEED FORMATS.  IF A HI SPEED DUMP IS REQUIRED THEN   *
.*    OUTPUT MUST SPECIFY A TAPE DEVICE.                              *
.*  PROTECT=NO IF STORAGE PROTECT IS NOT PRESENT ON MACHINE BEING     *
.*    DUMPED. PROTECT=YES IS ASSUMED AS A DEFAULT.                    *
.*  CONSOLE=(CUU,DEVTYPE,CUU)                                    A36497
.*    WHERE CUU IS THE ADDRESS OF THE SYSTEM                      M2022
.*    CONSOLE.  ADDR 009 IS THE DEFALT VALUE FOR THIS PARAMETER.  M2022
.*    DEVTYPE IS THE DEVICE TYPE OF THE CONSOLE.  THE VALUE OF    M2022
.*    THE DEVTYPE SUBPARAMETER MUST BE ONE OF THE FOLLOWING:      M2022
.*    1052, 3210, 3215, 3066 OR 5450.  IF DEVTYPE IS OMITTED OR   M2022
.*    IF THE SPECIFIED VALUE IS IN ERROR, THEN THE DEFALT VALUE   M2022
.*    OF 1052 IS USED.  WHEN THE MP OPTION IS SPECIFIED BY THE   A36497
.*    CPU PARAMETER, THE CONSOLE ADDRESSES FOR BOTH CPU'S MAY    A36497
.*    BE SPECIFIED.  IF THE FIRST CONSOLE IS NOT AVAILABLE TO    A36497
.*    THE IPL-ED CPU, THE 2-ND CONSOLE ADDRESS IS USED.  IF TWO  A36497
.*    CONSOLE ADDRESSES ARE SPECIFIED, THE DEVICE TYPE MUST BE   A36497
.*    1052                                                       A36497
.*  CPU=(360×370,NOMP×MP)                                        A36497
.*    CPU SPECIFIES THE IBM COMPUTING SYSTEM ON WHICH                 *
.*    THE DUMP PROGRAM IS TO RUN.  THE EFFECT OF CPU IS TO SET THE    *
.*    LOAD POINT FOR THE TAPE RESIDENT DUMP PROGRAM AND TO SET THE    *
.*    DEFALT VALUES FOR THE START PARATETER.  THIS INSURES THAT       *
.*    STORAGE WHICH IS DISTROYED BY DUMP EXECUTION IS CONTAINED IN    *
.*    THE CPU LOG-OUT AREA.                                           *
.*      THE SECOND SUBPARAMETER SPECIFIES WHETHER OR NOT         A36497
.*    SUPPORT IS TO BE GENERATED FOR M65MP SYSTEMS.              A36497
.*                                                                    *
.*OUTPUT- ASSEMBLY LISTING AND INITIALIZATION DECK.                   *
.*  DUMP PGM OUTPUT IS 2052 BYTE BLOCKS (CORE IMAGE) FOR TYPE=HI, OR  *
.*  121 BYTE ASA CARRIAGE CONTROL RECORDS FOR EBCDIC FORMATTED DUMPS. *
.*                                                                    *
.**********************************************************************
         TITLE 'IMDSADMP -DEVICE RESIDENT DUMP PROGRAM'
         MNOTE *,'TITLE- IMDSADMP- RESIDENT DUMP MACRO'
.*       THE FOLLOWING STATEMENTS DO A QUICK VALIDITY CHECK OF THE
.*       INPUT PARAMETERS.
         SPACE
         MNOTE *,'STATUS- VERSION 21.7  APRIL 1973'
         SPACE
         AIF   (NOT(&INSW)).CONT0
         MNOTE 8,' IMDSADMP MACRO ALLOWED ONLY ONCE PER ASSEMBLY.'
         MEXIT
.CONT0   ANOP
&INSW    SETB  1
         AIF   (K'&TYPE NE 2).TYPE02                             A57317
         AIF   ('&TYPE' NE 'HI').TYPE01                          A57317
&HSP     SETB  ('&TYPE' EQ 'HI')
         AGO   .CPU00                                            A57317
.TYPE01  AIF   ('&TYPE' EQ 'LO').CPU00                           A57317
.TYPE02  AIF   ('&IPL' NE 'TAPE').TYPE03                         A57317
         AIF   ('&TYPE' EQ '').CPU00                             A57317
&TYP1    SETC  'HI'                                              A57317
         AGO   .TYPE04                                           A57317
.TYPE03  AIF   ('&TYPE' EQ '').TYPE05                            A57317
&TYP1    SETC  'LO'                                              A57317
.TYPE04  MNOTE 4,'  TYPE VALUE ERROR, TYPE=&TYP1 ASSUMED'        A57317
         AGO   .CPU00                                            A57317
.TYPE05  MNOTE *,'  TYPE PARAMETER NOT SPECIFIED,TYPE=LO ASSUMED'
.*                                                               A57317
.CPU00   ANOP                                                    A57317
         AIF   ('&CPU(1)' EQ '').CPU01                           A36497
         AIF   ('&CPU(1)' EQ '360').CPU01                        A36497
         AIF   ('&CPU(1)' EQ '370').CPU02                        A36497
         MNOTE 4,'  CPU VALUE ERROR, S/360 ASSUMED'
         SPACE
.CPU01   ANOP
&CPUID   SETC  '360'
         AGO   .MP001                                            A36497
.CPU02   ANOP
&CPUID   SETC  '370'
.MP001   AIF   ('&CPU(2)' EQ '').MP002                           A36497
         AIF   ('&CPU(2)' EQ 'NOMP').MP002                       A36497
         AIF   ('&CPU(2)' EQ 'MP').MP003                         A36497
         MNOTE 4,'  CPU=&CPU INVALID,'                           A36497
         MNOTE 4,'       CPU=(&CPU(1),NOMP) IS ASSUMED.'         A36497
.MP002   ANOP                                                    A36497
&MP      SETB  0                                                 A36497
         AGO   .MP004                                            A36497
.MP003   ANOP                                                    A36497
&MP      SETB  1                                                 A36497
         AIF   ('&CPUID' EQ '360').MP003A                         M4009
         MNOTE 4,'  CPU=&CPU INVALVID,'                           M4009
         MNOTE 4,'       CPU=(360,MP) IS ASSUMED'                 M4009
         SPACE
&CPUID   SETC  '360'                                              M4009
.MP003A  ANOP                                                     M4009
.MP004   AIF   ('&PROTECT' EQ 'YES').PROT01                      A36497
         AIF   ('&PROTECT' EQ 'NO').PROT02
         MNOTE 4,'  PROTECT VALUE ERROR, YES ASSUMED'
.PROT01  ANOP
&PROT    SETC  'YES'
         AGO   .PROT04
.PROT02  ANOP
&PROT    SETC  'NO'
.PROT04  ANOP
         AIF   ('&IPL' EQ 'TAPE').TAPEIPL
         AIF   (K'&IPL EQ 3).OUTP1                               A57317
&IPL1    SETC  '191'                                             A57317
         MNOTE 4,'  IPL=&IPL IS INVALID, IPL=191 IS ASSUMED.'    A57317
         AGO   .OUTP2                                            A57317
.OUTP1   ANOP                                                    A57317
&IPL1    SETC  '&IPL'                                            A57317
.OUTP2   ANOP                                                    A57317
         SPACE
&TAPE    SETB  (K'&OUTPUT EQ 4 AND '&OUTPUT'(1,1) EQ 'T')
         AIF   (&TAPE OR K'&OUTPUT EQ 4).CONT1B                  A57317
         MNOTE 4,'  OUTPUT=&OUTPUT IS INVALID, OUTPUT=P00E USED.'
&OUT     SETC  '00E'                                             A57317
         AGO   .CONT1A                                           A57317
         SPACE
.CONT1B  ANOP
&OUT     SETC  '&OUTPUT'(2,3)
         AIF   (&TAPE OR '&OUTPUT'(1,1) EQ 'P').CONT1A
&TEMP    SETC  '&OUTPUT'(1,1)
         MNOTE 4,'  &TEMP DENOTES INVALID OUTPUT DEVICE,'
         MNOTE 4,'       A PRINTER IS ASSUMED.'
&OUT     SETC  '00E'
         SPACE
.CONT1A  AIF   (NOT(&HSP) OR (&TAPE)).HSP001
&HSP     SETB  (0)
         MNOTE 4,'   HIGH SPEED MEMORY DUMP REQUIRES TAPE OUTPUT.'
         MNOTE 4,'        TYPE=&TYPE IGNORED.'
         SPACE
.HSP001  ANOP
         MNOTE *,'  PROPER CHANNEL COMMANDS WILL BE GENERATED TO'
         AIF   (&TAPE).TPMSG
         MNOTE *,'       SUPPORT &OUT AS A PRINTER.'
         AGO   .CONT2A
.TPMSG   ANOP
         MNOTE *,'       SUPPORT &OUT AS A TAPE DEVICE'
.CONT2A  ANOP
         SPACE
         AIF   ('&CONSOLE(1)' EQ '').MP003B                       M4009
&CONS    SETC  '&CONSOLE(1)'                                      M4009
         AGO   .MP003C                                            M4009
.MP003B  ANOP                                                     M4009
&CONS    SETC  '009'                                              M4009
.MP003C  ANOP                                                     M4009
         AIF   (NOT(&MP)).MP005                                  A36497
         AIF   ('&CONSOLE(3)' EQ '').MP004A                      A36497
&ALTCONS SETC  '&CONSOLE(3)'                                     A36497
         AGO   .MP004B                                           A36497
.MP004A  ANOP                                                    A36497
&ALTCONS SETC  '01F'                                             A36497
.MP004B  ANOP                                                    A36497
.*  THE FOLLOW BLOCK COMMENTS ARE FLAGGED FOR                    A36497
         MNOTE *,'  THE M65MP OPTION OF IMDSADMP HAS BEEN SELECTED.'
         MNOTE *,'       THE DUMP PROGRAM CONTAINS SPECIAL SUPPORT'
         MNOTE *,'       WHICH ALLOWS REGISTER SETS TO BE OBTAINED'
         MNOTE *,'       FROM BOTH CPU''S WHENEVER THE DIRECT CONTROL'
         MNOTE *,'       FEATURE IS OPERATIONAL.  IN ADDITION, ALL'
         MNOTE *,'       ADDRESSABLE MAIN STORAGE IS DUMPED, EVEN'
         MNOTE *,'       IN CASES WHERE ADDRESS RANGES ARE NOT'
         MNOTE *,'       CONTIGUOUS'
         SPACE
         MNOTE *,'  WHEN IMDSADMP IS USED IN A MULTI-PROCESSING'
         MNOTE *,'       SYSTEM, THE DUMP PROGRAM MUST BE LOADED'
         MNOTE *,'       FROM THE CPU WHICH IS NOT PREFIXING.'
         SPACE
         MNOTE *,'  WHEN THE DUMP PROGRAM IS IPL-ED, MESSAGE'
         MNOTE *,'       IMD001A IS ISSUED TO CONSOLE &CONSOLE(1)'
         MNOTE *,'       ASKING FOR THE DUMP OUTPUT DEVICE.  IF THIS'
         MNOTE *,'       CONSOLE IS NOT AVAILABLE, THEN MESSAGE'
         MNOTE *,'       IMD001A IS ISSUED TO ALTERNATE CONSOLE'
         MNOTE *,'       &ALTCONS.  IF THIS CONSOLE IS ALSO NOT'
         MNOTE *,'       AVAILABLE OR IF EOB IS THE RESPONSE TO'
         MNOTE *,'       IMD001A, DEVICE &OUT WILL BE USED TO WRITE'
         MNOTE *,'       THE DUMP.'
         SPACE
         AIF   ('&CONSOLE(2)' EQ '').CTYPEA                      A36497
         AIF   ('&CONSOLE(2)' EQ '1052').CTYPEA                  A36497
.*                                                                M4009
         MNOTE 4,'  CONSOLE DEVICE TYPE &CONSOLE(2) NOT SUPPORTED FOR M*
               P'                                                 M4009
         MNOTE 4,'       1052 CONSOLE ASSUMED'                    M4009
         AGO   .MP007                                            A36497
.MP005   ANOP                                                    A36497
         AIF   ('&CONSOLE(3)' EQ '').MP006                       A36497
.*                                                               A36497
         MNOTE 4,'  ALTERNATE CONSOLE AVAILABLE ONLY FOR CPU=(360,MP).'
         MNOTE 4,'       ALTERNATE IGNORED.'                     A36497
         SPACE
.MP006   ANOP                                                    A36497
         MNOTE *,'  WHEN THE DUMP PROGRAM IS IPL-ED, MESSAGE'
.*                                                                M2022
         MNOTE *,'       IMD001I IS ISSUED TO CONSOLE &CONSOLE(1) ASKINX
               G'                                          M2022,A36497
         MNOTE *,'       FOR THE DUMP OUTPUT DEVICE.  IF THE CONSOLE'
         MNOTE *,'       IS NOT AVAILABLE OR IF EOB IS THE RESPONSE,'
         MNOTE *,'       DEVICE &OUT WILL BE USED.'
         SPACE
         AIF   ('&CONSOLE(2)' EQ '').CTYPEA                       M2022
         AIF   ('&CONSOLE(2)' EQ '1052').CTYPEA                   M2022
         AIF   ('&CONSOLE(2)' EQ '3210').CTYPEA                   M2022
         AIF   ('&CONSOLE(2)' EQ '3215').CTYPEA                   M2022
         AIF   ('&CONSOLE(2)' EQ '3066').CTYPEB                   M2022
         AIF   ('&CONSOLE(2)' EQ '5450').CTYPEB                   M2022
.*                                                                M2022
         MNOTE 4,'  CONSOLE DEVICE TYPE &CONSOLE(2) NOT SUPPORTED,'
         MNOTE 4,'       1052 CONSOLE ASSUMED'                    M2022
.MP007   ANOP                                              M4009,A36497
&CONTYPE SETC  'A'                                                M2022
         AGO   .CONER                                             M2022
.CTYPEA  ANOP                                                     M2022
.*       CONSOLE IS 1052 TYPE, I.E. 1052, 3210, OR 3215           M2022
&CONTYPE SETC  'A'                                                M2022
         AGO   .CONNOTE                                           M2022
.CTYPEB  ANOP                                                     M2022
.*       CONSOLE IS CPU CRT, I.E. 3066 OR 5450                    M2022
&CONTYPE SETC  'B'                                                M2022
.CONNOTE ANOP                                                     M2022
.*                                                                M2022
         AIF   ('&CONSOLE(2)' EQ '').MP007B                       M4009
&CONSTP  SETC  '&CONSOLE(2)'                                      M4009
         AGO   .MP007C                                            M4009
.MP007B  ANOP                                                     M4009
&CONSTP  SETC  '1052'                                             M4009
.MP007C  ANOP                                                     M4009
         MNOTE *,'  DEVICE &CONS MUST BE A &CONSTP CONSOLE'       M4009
.CONER   ANOP                                                     M2022
         SPACE
         MNOTE *,'  THE SYSPUNCH DATA SET CONTAINS A STAND ALONE'
         MNOTE *,'       PROGRAM TO INITIALIZE THE DIRECT ACCESS'
         MNOTE *,'       DEVICE &IPL1, WHICH WILL CONTAIN THE STAND'
         MNOTE *,'       ALONE DUMP PROGRAM.'                    A57317
         SPACE
         AIF   (NOT(&HSP)).HSP002
         MNOTE *,'  THE HIGH-SPEED, NON-FORMATTING STAND ALONE DUMP'
         MNOTE *,'       OPTION HAS BEEN CHOSEN.'
         SPACE
         AIF   ('&PROT' EQ 'YES').HSP002A
         MNOTE *,'  STORAGE PROTECTION FEATURE IS NOT AVAILABLE.'
         AGO   .HSP002B                                          A57317
.HSP002A MNOTE *,'  THE STORAGE PROTECTION FEATURE MUST BE AVALIABLE'
         MNOTE *,'       FOR PROPER OPERATION OF THIS MEMORY DUMP.'
         AGO   .HSP002B                                          A57317
.HSP002  MNOTE *,'  THE LOW-SPEED FORMATTING STAND ALONE DUMP'   A57317
         MNOTE *,'       OPTION HAS BEEN CHOSEN'                 A57317
.HSP002B AIF   ('&START' EQ '').DEFLT                            A57317
         AIF   ('&START'(1,2) NE 'X''').CONT4D
         AIF   (K'&START GT 9 AND '&START'(3,1) NE '0').CONT4X
.*       THE FOLLOWING STATEMENTS CONVERT A HEX VALUE TO DECIMAL.
&POS     SETA  (K'&START-3)
&LENGTH  SETA  (K'&START-3)
&TYP     SETC  'HEX.'
&ADDR    SETC  '&START'(3,&POS)
&POS     SETA  (K'&START)
&MULT    SETA  1
.CONT4A  ANOP
&POS     SETA  &POS-1
&TEMP    SETC  '&START'(&POS,1)
         AIF   ('&TEMP' GE '0').DEC
         AIF   ('&TEMP' NE 'A').HEXB
&TEMP    SETC  '10'
         AGO   .DEC
.HEXB    AIF   ('&TEMP' NE 'B').HEXC
&TEMP    SETC  '11'
         AGO   .DEC
.HEXC    AIF   ('&TEMP' NE 'C').HEXD
&TEMP    SETC  '12'
         AGO   .DEC
.HEXD    AIF   ('&TEMP' NE 'D').HEXE
&TEMP    SETC  '13'
         AGO   .DEC
.HEXE    AIF   ('&TEMP' NE 'E').HEXF
&TEMP    SETC  '14'
         AGO   .DEC
.HEXF    AIF   ('&TEMP' NE 'F').CONT4C
&TEMP    SETC  '15'
.DEC     AIF   ('&TEMP' LE '0').CONT4C
&ENTRY   SETA  (&TEMP*&MULT)+&ENTRY
.CONT4C  AIF   ('&POS' LE '3').CONT6
&MULT    SETA  &MULT*16
         AGO   .CONT4A
.CONT4D  ANOP
&TYP     SETC  'DECIMAL.'
&ADDR    SETC  '&START'
&POS     SETA  (K'&START)
&LENGTH  SETA   (K'&START)
.CONT4E  AIF   ('&POS' LE '0').CONT3A
         AIF   ('&START'(&POS,1) LT '0').CONT4AX
&POS     SETA  &POS-1
         AGO   .CONT4E
.CONT3A  ANOP
&ENTRY   SETA  &START
         AGO   .CONT6
.DEFLT   AIF   ('&CPUID' EQ '370').HIGHLOG
.LOWLOG  ANOP
&ENTRY   SETA  128
&ADDR    SETC  '80'
         AGO   .CONT7
.HIGHLOG ANOP
&ENTRY   SETA  256
&ADDR    SETC  '100'
         AGO   .CONT7
.CONT4AX MNOTE 4,'  INVALID CHARACTER IN DECIMAL PARAMETER.'
         SPACE
.CONT4X  MNOTE 4,'  START=&START INVALID, X''80'' USED'
         SPACE
         AGO   .LOWLOG
.CONT7   ANOP
&LENGTH  SETA  3
&TYP     SETC  'HEX.'
.CONT6   ANOP
         SPACE
         MNOTE *,'  THE MEMORY DUMP WILL BEGIN OVERLAYING'
         MNOTE *,'       MAIN STORAGE AT LOCATION &ADDR &TYP'
         MNOTE *,'       43 BYTES OF MAIN STORAGE WILL BE DESTROYED'
&PAD     SETC  '        '(1,9-&LENGTH)
&TYP2    SETC  '&TYP'(1,3)
         EJECT
***********************************************************************
*                                                                     *
*        THE FOLLOWING CODE PROVIDES A THREE CARD ABSOLUTE LOADER.    *
*                                                                     *
*        THE PUNCH OUTPUT OF THE ASSEMBLER WILL BE AN IPL-ABLE DECK,  *
*        THAT WILL INITIALIZE THE DRIVE SPECIFIED IN THE 'IMDSADMP'   *
*        MACRO DEFINITION CARD.    (SEE KEYWORD 'IPL=')               *
*                                                                     *
***********************************************************************
         SPACE
         REPRO

         REPRO

         REPRO

Âc2
Áõ
         AGO   .HSP006
.TAPEIPL ANOP                                                    A57317
         AIF   ('&TYPE' EQ 'LO').TPIPL1                          A57317
         AGO   .TPIPL2                                           A57317
.TPIPL1  MNOTE *,'  IPL=TAPE,TYPE PARAMETER IGNORED'             A57317
.TPIPL2  ANOP                                                    A57317
         AIF   (NOT(&MP)).MP010                                  A36497
         MNOTE 4,'  MP OPTION NOT AVAILABLE FOR IPL=TAPE.'       A36497
         MNOTE 4,'  IPL=TAPE IS ASSUMED.'                        A36497
.MP010   ANOP                                                    A36497
         SPACE 3
***********************************************************************
*                                                                     *
* THE FOLLOWING 5 CARD DECK IS PREPARED WITH JCL FOR IEBGENER SO THE  *
* DECK CAN BE WRITTEN TO NON-LABELLED TAPE. ANYTIME A DUMP IS DESIRED,*
* THE TAPE IS MOUNTED ANYWHERE AND IPLED. THE DUMP WILL AUTOMATICALLY *
* GO TO THE IPL TAPE. THE DUMP HEADER WILL NOT BE OVERWRITTEN, AND    *
* THEREFORE THE TAPE MAY BE REPEATEDLY USED. DUMP OUTPUT IS BLOCKED   *
* CORE IMAGE (HI SPEED TYPE).                                         *
*                                                                     *
***********************************************************************
         SPACE 3
 PUNCH '//DUMP JOB MSGLEVEL=1 '
 PUNCH '//INIT EXEC PGM=IEBGENER '
 PUNCH '//SYSPRINT DD SYSOUT=A '
 PUNCH '//SYSIN DD DUMMY '
 PUNCH '//SYSUT2  DD  VOL=SER=DUMP,LABEL=(,NL),DISP=(NEW,KEEP),'
 PUNCH '//            UNIT=2400,'
 PUNCH '//            DCB=(BLKSIZE=80,LRECL=80,RECFM=F,DEN=2,TRTCH=C)'
 PUNCH '//SYSUT1 DD * '
         AIF   ('&CPUID' EQ '360').NOT370
.* THE BINARY DATA FROM LINE 219300 TO 238800 HAS CHANGED.     @SA72615
         REPRO

         REPRO
ç
         REPRO

         REPRO
K
         REPRO
¦
         AGO   .SLASHA
.NOT370  ANOP
         AIF   ('&PROT' EQ 'NO').PROT05
         REPRO

         REPRO
ç
         REPRO

         REPRO
K
         REPRO
¦
         AGO   .SLASHA
.PROT05  ANOP
         REPRO

         REPRO
ç
         REPRO

         REPRO
K
         REPRO

.* THE BINARY DATA FROM LINE 219300 TO 238800 HAS CHANGED.     @SA72615
.SLASHA  ANOP
         PUNCH '/* '
         MEXIT
.HSP006  ANOP
         EJECT
.****************************************************************A36497
.*                                                               A36497
.*  THE FOLLOWING LOGIC DETERMINES THE LENGTH OF THE             A36497
.*  DUMP PROGRAM                                                 A36497
.*                                                               A36497
.****************************************************************A36497
         AIF   (&TAPE AND NOT(&HSP)).BIGREC
         AIF   (NOT(&TAPE)).MEDREC                                M2024
         AIF   (&MP).MP011A                                      A36497
&WORKSZ  SETA  992                                               A53332
         AGO   .SMLREC
.MP011A  ANOP                                                    A36497
&WORKSZ  SETA  1152                                              A53332
         AGO   .SMLREC                                           A36497
.MEDREC  ANOP                                                     M2024
         AIF   (&MP).MP011B                                      A36497
&WORKSZ  SETA  1152                                              A53332
         AGO   .SMLREC                                            M2024
.MP011B  ANOP                                                    A36497
&WORKSZ  SETA  1312                                              A36497
         AGO   .SMLREC                                           A36497
.BIGREC  ANOP
         AIF   (&MP).MP011C                                      A36497
&WORKSZ  SETA  1312                                              A53332
         AGO   .SMLREC                                           A36497
.MP011C  ANOP                                                    A36497
&WORKSZ  SETA  1472                                              A36497
.SMLREC  ANOP
&ENTRY   SETA  ((&ENTRY+7)/8)*8
         AIF   (&ENTRY GE 128).STARTOK
&ENTRY   SETA  128
.STARTOK ANOP
         AIF   (&ENTRY LT 7168).LODAT10                          A36497
&LOADPT  SETA  6144-&WORKSZ                                M4009,A36497
         AGO   .LODAT6K                                          A36497
.LODAT10 ANOP                                                    A36497
&LOADPT  SETA  10240-&WORKSZ                                     A36497
.LODAT6K ANOP                                                    A36497
&LOADPT  SETA  &LOADPT-8                                         A36497
         START &LOADPT .                                         A36497
         BALR  R15,0 .             BASE ENTRY BRANCH
         USING *,R15
         B     STARTDEV .          BRANCH TO INITIALIZER
         DS    0D
         SPACE
FIRST    EQU   *
         SPACE
***********************************************************************
*                                                                     *
*  DUMP PROGRAM TO BE STORED ON THE D/A DEVICE                        *
*                                                                     *
***********************************************************************
         SPACE
***  REGISTERS USED BY DUMP PROGRAM  ***
R0       EQU   0 .                 PLACE-MARK FOR STM TO SAVE ALL REGS
         AIF   (&HSP).LESREGS
R2       EQU   2 .                 LAST REAL LINE PRINTED
R3       EQU   3 .                 FALSE POINTER
R4       EQU   4 .                 INCREMENT FOR BXLE
R5       EQU   5 .                 LIMIT VALUE OF BXLE
R6       EQU   6 .                 OUTPUT AREA POINTER
R7       EQU   7 .                 SECONDARY LINKAGE REGISTER
.LESREGS ANOP
R8       EQU   8 .                 WORK REG                      A53332
R9       EQU   9 .                 COMPLETION CODE POINTER
R10      EQU   10 .                EVEN/ODD PAIR IN CONVER -
*                                  ADDR OF STORAGE BLOCK TO BE WRITTEN
R11      EQU   11 .                I/O DEVICE ADDRESS
R12      EQU   12 .                WORK REG
R13      EQU   13 .                CCW ADDRESS - WORK REG
R14      EQU   14 .                LINKAGE REGISTER
R15      EQU   15 .                BASE REGISTER
         SPACE 2
         AIF   (NOT(&MP)).MP012                                  A36497
RESTRPSW EQU   0 .                                               A36497
PGMOLD   EQU   40 .                                              A36497
PREFID   EQU   696 .                                             A36497
         SPACE
*****************************************************************A36497
*                                                                A36497
*  CODE EXECUTED BY NON-IPL-ED CPU TO STORE ITS REGISTERS        A36497
*                                                                A36497
*****************************************************************A36497
         SPACE
&GARP    DS    0H .                                              A36497
CPU2     ST    R15,RESTRPSW+4 .    SAVE REG 15 CONTENT IN OTHER  A36497
*                                  CPU PREFIX AREA               A36497
         BALR  R15,0 .             ESTABLISH ADDRESSING TO       A36497
         USING *,R15 .             IMDSADMP PROGRAM              A36497
*                                  MOVE REG 15 CONTENT TO REG    A36497
*                                  SAVE AREA FOR OTHER CPU       A36497
         MVC   SAVE2+60(4),RESTRPSW+4 .                          A36497
         STM   R0,R14,SAVE2 .      SAVE ALL OTHER REGS           A36497
         OI    RESTRPSW+1,X'02' .  SET WAIT BIT IN RE-START PSW  A36497
*                                  TO INDICATE TO IPL-ED CPU     A36497
*                                  THAT STORE FUNCTION IS        A36497
*                                  COMPLETE                      A36497
         LPSW  RESTRPSW .          LOAD WAIT PSW TO STOP         A36497
         SPACE
         DROP  R15 .               TO RE-ESTABLISH BASE AT ENTRY A36497
         EJECT
.MP012   ANOP                                                    A36497
***********************************************************************
*                                                                     *
*  WRITE MESSAGE TO CONSOLE ASKING FOR ADDRESS OF OUTPUT DEVICE.      *
*  EOB AS REPLY GETS DEFALT VALUE SPECIFIED IN IMDSADMP ASSEMBLY.     *
*                                                                     *
***********************************************************************
         SPACE
         AIF   (&MP).MP013                                       A36497
&GARP    DS    0H
.MP013   ANOP                                                    A36497
ENTRY    ST    R15,8 .             SAVE REG 15 AT ABSOLUTE LOCATION
*                                  BEFORE ESTABLISHING ADDRESSABILITY
         BALR  R15,0 .             BASE DUMP PROGRAM
         USING *,R15
         SPACE
SEEKAD   DS    6C .                REUSE ENTRY CODE AS SEEK       M6104
*                                  ADDRESS FOR RESTORE OF WORK    M6104
*                                  RECORD AND                     M6104
DEVAD    DS    3C .                INPUT AREA FOR OUTPUT DEVICE   M6104
*                                  ADDRESS                        M6104
         SPACE
         ORG   SEEKAD .            RESET LOCATION COUNTER TO      M6104
*                                  ON TOP OF SEEK ADDR.           M6104
         STM   R0,R14,SAVE .       SAVE ALL REGS
         MVC   SAVE+60(4),8 .      MOVE ORGINAL REG 15 CONTENT TO
*                                  SAVE AREA
         MVC   SAVE+64(12),CSW .   SAVE CSW & CAW
         LA    R8,DUMPSIO .        ESTABLISH SIO RTN ADDR        A53332
CONINST  LA    R11,X'&CONS' .      POINT SIO ROUTINE TO     M4009,M2022
*                                  CONSOLE                        M4009
CONSLAD  EQU   CONINST+2 .         DEFINE CONSTANT FOR CONSOLE    M2022
*                                  ADDRESS IN PREVIOUS INST.      M2022
          XC    SEEKAD(9),SEEKAD    ZERO INPUT AREA             SA64166
         TIO   0(R11) .            TEST CONSOLE WORKING           M2025
         AIF   (NOT(&MP)).MP013A                                 A36497
.***  ALTERNATE CONSOLE FOR MP OPTION  ***                       A36497
         BC    8,CANCEL .          CONSOLE AVAILABLE BRANCH TO   A36497
*                                  PROMPT FOR OUTPUT ADDRESS     A36497
         LA    R11,X'&ALTCONS' .   POINT TO ALTERNATE CONSOLE    A36497
         STH   R11,CONSLAD .       UPDATE CONSOLE ADDRESS        A36497
         TIO   0(R11) .            TEST FOR ALTERNATE OK         A36497
.MP013A  ANOP                                                     M3998
         BC    7,LABLPROC .        BRANCH ON ANY-THING BUT        M2025
*                                  AVAILABLE TO USE DEFALT DEV    M2025
CANCEL   EQU   *                    REQUEST OUTPUT DEVICE       SA64166
         LA    R9,CONSLCOD .       POINT TO 'CMD ER' IN CASE OF ERROR
*                                  IN CONSOLE COMMAND
         LA    R13,CONSLCCW .      GET ADDRESS OF WRITE-READ CHANNEL
*                                  PGM TO ASK FOR DEVICE ADDRESS
         BALR  R14,R8 .            GO WRITE CONSOLE MESSAGE      A53332
         AIF   (NOT(&TAPE)).NOUKTST                               M2025
         BO    CANCEL .            ON UNIT CHECK, BRANCH BACK     M2025
*                                  TO RETRY OPERATION             M2025
*                                  BRANCHING ON C.C. SET
*                                  IN SIO ROUTINE
.NOUKTST ANOP                                                     M2025
         AIF   ('&CONTYPE' EQ 'A').C1052A                         M2022
GCONSOLE TIO   0(R11) .            LOOP ON TEST I/O TO WAIT FOR   M2022
*                                  ATTENTION INTERRUPT            M2022
         TM    CSW+4,X'80' .       TEST CSW STATUS FOR ATTENTION  M2022
         BZ    GCONSOLE .          NO ATTENTION - BRANCH BACK TO  M2022
*                                  TIO INSTRUCTION                M2022
*                                  WHEN ATTENTION IS RECEIVED,    M2022
*                                  READ FOR MESSAGE               M2022
         LA    R13,RDGCONSL .      POINT TO READ CHANNEL PGM      M2022
         MVC   IMDMSG2(16),IMDMSG2-1 CLEAR POSSIBLE ERROR         M2022
*                                  MESSAGE BUFFER                 M2022
         BALR  R14,R8 .            GO READ FOR CRT.  CHANNEL PGM A53332
*                                  WILL RMI AS WELL AS READ BUF   M2022
         MVC   IMDMSG2(5),IMDMSG1 .RESTORE ID STRING IN IMDMSG2   M2022
         TM    MINPUT+2,X'80' .    TEST FOR ENTER KEY             M2022
         BZ    CANCEL .            IF NOT ENTER, RETRY BY GIVING  M2022
*                                  INITIAL PROMPT                 M2022
         CLC   DEVAD(3),BLANKS .   TEST INPUT AREA TO SEE IF      M2022
*                                  DEFALT DEVICE ADDRESS IS TO    M2022
*                                  BE USED                        M2022
         BE    LABLPROC .          DEFALT VALUE - BYPASS CONVERSION
         AGO   .GCONA                                             M2022
.C1052A  ANOP                                                     M2022
         TM    CSW+4,X'01' .       U.E. IS INDICATION OF CANCEL
         BO    CANCEL .            RETRY OPERATOR
         NC    DEVAD(3),DEVAD .    TEST INPUT AREA TO SEE IF DEV  M2026
*                                  ADDRESS HAS BEEN ENTERED
         BZ    LABLPROC .          ZERO MEANS DEFALT VALUE -      M2026
*                                  BYPASS CONVERSION              M2026
.GCONA   ANOP                                                     M2022
         SPACE
***  CONVERT CHARACTER DEVICE ADDRESS TO BINARY  ***
CONVERT  LA    R12,3 .             LOAD DIGIT COUNT
NEXTDIG  LA    R13,DEVAD-1(R12) .  POINT TO DIGIT TO BE CONVERTED
         IC    R10,0(R13) .        GET CHARACTER TO BE CONVERTED  M2022
         TM    0(R13),X'F0' .      TEST FOR DECIMAL DIGIT
         BO    DIGOK .             YES - CHARACTER IS OK
         OI    0(R13),X'40' .      MAKE REPLY CAPS
         CLI   0(R13),C'A' .       CHECK FOR BYTE GREATER OR EQUAL TO
*                                  'A' VALUE
         BL    EXIT .              EXIT IF NOT - CODE 16
         CLI   0(R13),C'F' .       CHECK FOR BYTE LESS THAN OR EQUAL TO
*                                  'F' VALUE
         BH    EXIT .              EXIT IF NOT - CODE 16
*                                  IF CHARACTER IS A-F, ADDING 9  M2022
*                                  GIVES CORRECT BINARY VALUE IN
*                                  RIGHT DIGIT OF BYTE
         LA    R10,9(R10)          MAKE LOW ORDER HALF BYTE      A53332
*                                  THE HEX DIGIT REQUESTED
DIGOK    DS    0H .                ACCUMULATE BINARY ADDRESS IN   M2022
*                                  REGISTER 11                    M2022
SHIFT    SRDL  R10,4 .             SHIFT LOW DIGT TO REG 11
         BCT   R12,NEXTDIG .       LOOP TO CONVERT EACH DIGIT
         SRL   R11,20 .            SHIFT TO LOW THREE DIGITS
***  DUMP OUTPUT DEVICE ADDRESS NOW IN TARGET  ***
         STH   R11,TARGET .        SAVE OUTPUT DEVICE
         EJECT
LABLPROC LH    R11,TARGET .        LOAD TARGET ADDRESS
         AIF   (NOT(&TAPE)).NOLBL
         SPACE
***********************************************************************
*                                                                     *
*                         TAPE LABEL PROCESSOR                        *
*                                                                     *
***********************************************************************
         SPACE
         LA    R9,LABELCOD .       SET UP 'LBL ER' IN CASE OF NEED TO
*                                  REJECT TAPE
         NI    TAPESW+1,X'0F' .    SET TAPE SW - UNLOAD REQ. ON EXIT
*                                  CHANGE BRANCH TO NOP SO AS TO FALL
*                                  INTO UNLOAD ROUTINE
         XC    WORK(4),WORK .      CLEAR LABEL INPUT AREA        A53332
         LA    R13,READLAB .       POINT TO READ LABEL CHANNEL PROGRAM
         BALR  R14,R8 .            LINK TO SIO ROUTINE           A53332
*                                  U.K. IS QUESTIONABLE CONDITION
*                                  BRANCHNNG ON C.C. SET IN SIO
         BO    EXIT .              EXIT WITH LABEL ERROR
         CLC   WORK(4),LABELID .   COMPARE 1ST 4 CHARACTERS OF   A53332
*                                  1ST  RECORD FOR 'VOL1'
         BE    EXIT .              EXIT IF EQUAL BECAUSE STAND. LABEL
*                                  - LABEL ERROR
         CLC   WORK(4),ASCIILAB .  CHECK FOR ASCII LABEL         A53332
         BE    EXIT .              EXIT IF SO - LABEL ERROR
         SPACE
***  TAPE IS OK  ***
         NI    READLAB+4,X'BF' .   TURN OFF COMMAND CHAINING FOR
*                                  JUST REW
         NI    IORETRY+1,X'8F' .   RETRY IN SIO ON U.K. - CHANGE  M2022
*                                  UNCONDITIONAL BRANCH TO BRANCH
*                                  NOT ONE
         BALR  R14,R8 .            LINK TO SIO                   A53332
         EJECT
         AGO   .LBL
.NOLBL   ANOP
         LA    R13,CARRIAGE .      POINT TO EJECT CCW TO START ON
*                                  CLEAN PAGE
         SPACE
.LBL     ANOP
         AIF   (NOT(&HSP) OR NOT(&MP)).MP013B                    A36497
         BAL   R14,FINDTOP .       LINK TO GET OTHER CPU REGS    A36497
         SPACE
.MP013B  ANOP                                                    A36497
***********************************************************************
*                                                                     *
*                           WRITE DUMP                                *
*                                                                     *
***********************************************************************
         SPACE
         AIF   (NOT(&TAPE)).NOWTM
         MVI   WTMCCW,X'1F' .      BUILD WTM CCW
         AIF   (&HSP).HSP00AA
.NOWTM   ANOP
         LA    R10,SAVE .          SET TO FORMAT REGISTERS
         BAL   R7,FORMAT .         GO FORMAT REGS 0 TO 7
         NI    ENDSW+1,X'0F' .     SET END SWITCH - CHANGE RETURN M2025
*                                  TO CONSOLE ROUTINE TO NOP
         LA    R9,CLEANCOD .       ONLY WAY OUT AFTER THIS IS CLEAN
*                                  (EXCEPT CATASTROPHIC CHANNEL ERROR)
         AIF   (&TAPE).NOCMDSW
         NI    UNITSW+1,X'0F' .    NOP INVALID UNIT SWITCH
.NOCMDSW ANOP
         AIF   (NOT(&MP)).MP014                                  A36497
*                                  MOVE 8-15 LABEL TO OUTPUT     A36497
         MVC   OUTPUT+4(4),REG8TO15 .                            A36497
         BAL   R7,FORMAT .         FORMAT SECOND LINE OF         A36497
*                                  IPL-ED CPU REGS               A36497
.MP014A  ANOP                                                    A36497
         EJECT
*****************************************************************A36497
*                                                                A36497
*  THIS ROUTINE WILL DETERMINE THE HIGH MACHINE ADDRESS AND BY   A36497
*  SO DOING LOCATE THE PREFIX AREA OF THE OTHER CPU.             A36497
*  THIS ROUTINE WILL THEN ATTEMPT TO OBTAIN THE REGISTERS FROM   A36497
*  THE OTHER CPU.  IF THE OTHER CPU IS NOT OPERATIONAL OR IF THE A36497
*  REGISTERS WILL NOT BE DUMPED; AND PROCESSING WILL CONTINUE    A36497
*  WITH THE MAIN STORAGE DUMP.                                   A36497
*                                                                A36497
*****************************************************************A36497
         SPACE
FINDTOP  MVC   PGMOSV(8),PGMOLD .  SAVE PGM OLD IN IPL-ED CPU    A36497
         MVC   PGMNSV(8),PGMNEW .  SAVE PGM NEW IN IPL-ED CPU    A36497
         SPACE
***  DETERMINE HIGH MACHINE ADDRESS  ***                         A36497
         MVC   PGMNEW(8),FRAMEPSW .SET-UP PGM NEW PSW TO CHECK   A36497
*                                  INTERRUPT CAUSED BY OFF LINE  A36497
*                                  STORAGE BOX                   A36497
         L     R10,MAXADDR .       LOAD 2 MEG AS LIMIT ON        A36497
*                                  MAIN STORAGE SIZE             A36497
         LA    R12,X'7FF' .        START SEARCH AT 2K - 1        A36497
NEXTBOX  IC    R13,0(R12) .        ATTEMPT TO REFERENCE HIGH     A36497
*                                  BYTE OF 2K BLOCK              A36497
         ST    R12,MAXADDR .       STORAGE ACCESSABLE - STORE    A36497
*                                  ADDRESS AS POSSIBLE HIGH MARK A36497
***  CONTROL PASSED HERE ON PGM CHECK IN CORE SIZE RTN.  ***     A36497
OFFLNBOX CR    R12,R10 .           COMPARE CURRENT STORAGE       A36497
*                                  POINTER TO LIMIT              A36497
         LA    R12,X'800'(R12) .   INCREMENT BEFORE TESTING      A36497
*                                  CONDITION CODE                A36497
         BL    NEXTBOX .           NOT AT LIMIT - TRY NEXT BOX   A36497
         SPACE
***  STORAGE SIZE FOUND, GET OTHER CPU REGS  ***                 A36497
         L     R10,MAXADDR .       PICK UP ACTUAL HIGH ADDRESS   A36497
         LA    R12,X'FFF' .        GENERATE CONSTANT X'FFF'      A36497
         SR    R10,R12 .           SUBTRACT FROM HIGH MACHINE    A36497
*                                  ADDRESS TO GET ADDR OF OTHER  A36497
*                                  CPU PREFIX AREA               A36497
         MVC   RESTRSV(8),RESTRPSW(R10) SAVE RESTART PSW FROM    A36497
*                                  OTHER CPU                     A36497
         MVC   RESTRPSW(8,R10),CPU2RES SET-UP RESTART PSW IN     A36497
*                                  OTHER CPU                     A36497
         LA    R13,MPRESTR .       POINT TO END OF MP ROUTINE    A36497
         ST    R13,PGMNEW+4 .      SET ADDRESS IN PGM NEW IN     A36497
*                                  CASE WRD CAUSES PGM CHECK     A36497
         WRD   SIGNAL,X'80' .      ISSUE SHOLDER TAP             A36497
*                                  LOOP ON OTHER CPU WAIT BIT    A36497
TIMEOUT  TM    RESTRPSW+1(R10),X'02'                             A36497
         BO    MPRESTR .           BIT SET MEANS OTHER CPU       A36497
*                                  COMPLETED OK                  A36497
         BCT   R12,TIMEOUT .       WAIT BY DECREMENTING CONSTANT A36497
*                                  IN REG 12                     A36497
***  MP COMPLETE - RESTORE PSW'S USED  ***                       A36497
MPRESTR  TM    RESTRPSW+1(R10),X'02' TEST IF REGS WHERE STORED   A36497
         MVC   RESTRPSW(8,R10),RESTRSV .                         A36497
         MVC   PGMOLD(8),PGMOSV .  RESTORE IPL-ED CPU PGM NEW    A36497
         MVC   PGMNEW(8),PGMNSV .  RESTORE IPL-ED CPU PGM OLD    A36497
         AIF   (NOT(&HSP)).MP014C                                A36497
         MVC   SAVE2+64(1),PREFID .MOVE CPU ID FROM IPL-ED CPU   A36497
*                                  TO HEADER RECORD              A36497
         MVI   SAVE2+65,X'FF' .    ASSUME REGS FROM OTHER CPU OK A36497
         BO    REGSOK .            VERIFY ASSUMPTION - IF FALSE  A36497
*                                  FALL THROUGH                  A36497
         MVI   SAVE2+65,X'00' .    INDICATE NO REGS FOR OTHER    A36497
*                                  CPU                           A36497
REGSOK   BR    R14 .               RETURN TO MAIN LINE           A36497
         EJECT
         AGO   .MP021                                            A36497
.MP014C  ANOP                                                    A36497
         BZ    CLRCOL .            BRANCH AROUND FORMAT IF NOT   A36497
         LA    R10,SAVE2 .         POINT TO REGS FROM OTHER CPU  A36497
         AIF   (&TAPE).MP014D                                    A36497
         LA    R13,CARRIAGE .      SPACE A LINE BETWEEN REGS     A36497
         AGO   .MP014E                                           A36497
.MP014D  ANOP                                                    A36497
         MVI   ASACTL,C'0' .       SET CONTROL CHARACTER TO      A36497
*                                  SPACE BETWEEN REGS            A36497
.MP014E  ANOP                                                    A36497
         MVC   OUTPUT(8),OTHREG .  LABEL REGS FROM OTHER CPU     A36497
         BAL   R7,FORMAT .         FORMAT FIRST LINE OF          A36497
*                                  OTHER CPU REGS                A36497
         MVC   OUTPUT+4(4),REG8TO15 .                            A36497
         BAL   R7,FORMAT .         FORMAT SECOND LINE            A36497
CLRCOL   MVC   BLANKS(2),BLANKS+2 .CLEAR FIRST TWO CHARACTER     A36497
*                                  OF BLANK FIELD                A36497
         B     FORMAT1 .           GO FORMAT MAIN STORAGE        A36497
         AGO   .MP014F                                           A36497
.MP014   ANOP                                                    A36497
         MVC   OUTPUT+2(4),REG8TO15 CHANGE FORMAT TITLE
         LA    R7,FORMAT1 .        SET RETURN TO CORE FORMAT LOOP
.MP014F  ANOP                                                    A36497
         EJECT
***********************************************************************
*                                                                     *
*        THIS IS THE TRANSLATE TO PRINTABLE EBCDIC ROUTINE.           *
*                                                                     *
*        THE ONLY CHARACTERS PRINTED IN THE RIGHT (EBCDIC) FIELD      *
*        WILL BE ALPHAMERIC ONLY (A TO Z, 0 TO 9, AND BLANK).  ALL    *
*        OTHER CHARACTERS WILL PRINT AS A PERIOD (.),...THERE ARE     *
*        TWO REASONS FOR THIS.......                                  *
*              1.  SOME SPECIAL CHARACTER GRAPHICS WILL CHANGE,       *
*              DEPENDING UPON THE PARTICULAR PRINT CHAIN THAT         *
*              IS BEING USED ON THE 1403 PRINTER.                     *
*              2.  THE PRINTING OF SOME SPECIAL CHARACTERS MAY TEND   *
*              TO SLOW DOWN THE PRINTING OPERATION OF A 1403, IF      *
*              THE UNIVERSAL CHARACTER SET (UCS) FEATURE IS           *
*              INSTALLED.                                             *
*                                                                     *
***********************************************************************
         SPACE
FORMAT   LA    R6,LINE .           GET ADDRESS OF PRINT LINE
         LA    R12,EBCFIELD .      GET ADDR OF EBCDIC FIELD
         LA    R4,1 .              INCREMENT VALUE FOR BXLE
         LA    R5,31(R12) .        LIMIT VALUE FOR BXLE
         MVC   0(32,R12),0(R10) .  MOVE CHARACTERS FOR TRANSLATE
TEST1    TM    0(R12),X'C0' .      IS CHARACTER IN QUADRANT FOUR
         BO    ALRIGHT .           IF YES, STRIP HI-ORDER TWO BITS
         CLI   0(R12),X'40' .      IS CHARACTER A BLANK
         BE    BXLE .              IF YES, LEAVE IT ALONE
         MVI   0(R12),X'00' .      ELSE, FORCE TO PRINT AS A PERIOD
ALRIGHT  NI    0(R12),X'3F' .      STRIP HI-ORDER TWO BITS
BXLE     BXLE  R12,R4,TEST1 .      LOOP UNTIL AREA TESTED
         TR    EBCFIELD,XLATE .    TRANSLATE TO PRINTABLE EBCDIC
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT OUTPUT TO HEXADECIMAL AND PRINT ROUTINES.             *
*                                                                     *
***********************************************************************
         SPACE
         LA    R0,2 .              SET OUTER LOOP COUNT          A53332
LOOP1    LA    R12,4 .             SET INNER LOOP COUNT
LOOP2    MVC   WORK(4),0(R10) .    MOVE DATA TO PREVENT ADDRESSING
*                                  EXCEPTION
         UNPK  0(9,R6),WORK(5) .   FORMAT FOUR BYTES OF DATA
         MVI   8(R6),C' ' .        CLEAR SIGN BYTE (GARBAGE)
         TR    0(8,R6),HEXTAB-240 .MAKE PRINTABLE HEX
         LA    R6,9(,R6) .         SKIP TO NEXT SLOT IN PRINT LINE
         LA    R10,4(,R10) .       BUMP LOCATION COUNTER BY FOUR
         BCT   R12,LOOP2 .         GO FORMAT NEXT FOUR BYTES
         LA    R6,3(,R6) .         INCREMENT FOR CENTER SPACE
         BCT   R0,LOOP1 .          GO FORMAT RIGHT SIDE OF PAGE  A53332
         AIF   (NOT(&TAPE)).NORELOD
STARTIO  LA    R13,PRINT .         POINT TO WRITE CCW
         BALR  R14,R8 .            GO WRITE A LINE               A53332
         TM    CSW+4,X'01' .       TEST FOR END OF REEL
         BNO   MORTAPE .           CONTINUE IF NOT
         LA    R9,ENDOREEL .       POINT TO END OF REEL ERROR CODE
         B     EXIT .              ABORT
MORTAPE  MVI   ASACTL,C' ' .       SINGLE SPACE CONTROL
         AGO   .RELOD
.NORELOD ANOP
STARTIO  BALR  R14,R8 .            GO WRITE A LINE               A53332
         TM    CSW+4,X'01' .       TEST FOR UNIT EX. - SPACE PROBLEM
         BZ    NOREISS .           BRANCH AROUND REISSUE OF WRITE
         LA    R13,PRINT .         POINT TO WRITE CCW            A51760
         BALR  R14,R8 .            GO PRINT LINE                 A53332
NOREISS  MVI   CARRIAGE,X'0B' .    MAKE CARRIAGE CTL EXTRA SPACE
         LA    R13,PRINT .         SET CCW ADDR BACK TO SINGLE SP
.RELOD   ANOP
         BR    R7 .                RETURN TO CALLER
         EJECT
***********************************************************************
*                                                                     *
*        FORMAT MAIN STORAGE MAINLINE ROUTINE.                        *
*                                                                     *
***********************************************************************
         SPACE
FORMAT1  SR    R10,R10 .           START CORE FORMAT AT ZERO
         LR    R3,R10 .            VIRTUAL ADDRESS BEING PRINTED
         AIF   (&TAPE).CONT9
         LA    R13,CARRIAGE .      SET TO SPACE EXTRA
         AGO   .CONT9A
.CONT9   ANOP
         MVI   ASACTL,C'0' .       DOUBLE SPACE CONTROL
.CONT9A  ANOP
FORMAT2  ST    R3,SAVEADDR .       STORE LOCATION FOR FORMAT
         LR    R2,R10 .            UPDATE LAST LINE POINTER
         UNPK  OUTPUT(7),SAVEADDR+1(4)
         TR    OUTPUT(6),HEXTAB-240 MAKE PRINTABLE HEX
         MVI   BLANKS,C' ' .       CLEAR SIGN POSITION
         BAL   R7,FORMAT .         GO FORMAT LOCATION IN REG 10
LOOP3    C     R3,APGMNEW .        HAS PGM NEW BEEN FORMATTED
         BNH   RESTOREK .          NO, BRANCH AROUND MOVE
         MVC   104(8),EOJSW .      ELSE, MOVE PSW FOR END SWITCH
RESTOREK LA    R3,32(R3) .         INCREMENT TO NEXT VIRTUAL ADDRESS
         MVC   CSW(12),SAVE+64 .   RESTORE CSW FOR FORMATTING
         C     R3,RESTORPT .       TEST FOR TIME TO RESOTRE WORK REC
RESW     BL    AROUND .            NO - CHANGED TO BR AFTER RESTORE
         BE    RESPROC .           TIME TO RESTORE
         C     R10,RESTORPT .      RESTORE COMPLETE
         BL    AROUND .            NOT YET
         LR    R10,R3 .            RESTORE OF WORK RECORD NOW COMPLETE
*                                  REAL ADDR TO VIRTUAL POINTER
         OI    RESW+1,X'F0' .      RESET RESTORE CHECK SW
         B     AROUND .            EXIT FROM RESTORE PROCEDURE
         AGO   .LOWSPED
.HSP00AA ANOP
         NI    ENDSW+1,X'0F' .     SET END SWITCH
         LA    R9,CLEANCOD .       ONLY WAY OUT AFTER THIS IS CLEAN
*                                  (EXCEPT CATASTROPHIC CHANNEL ERROR)
         L     R10,STARTAD .       PICK UP ADDRESS TO START, -2048
NEXTBLK  LA    R13,WRITECCW .      POINT TO WRITE DUMP CHANNEL PROGRAM
*                                  REG 12 STILL POINTING TO OUTPUT
*                                  DEVICE
WRITEREC BALR  R14,R8 .            WRITE DUMP RECORD             A53332
         TM    CSW+4,X'01' .       TEST FOR END OF REEL
         BNO   MORTAPE .           CONTINUE IF NOT
         LA    R9,ENDOREEL .       POINT TO END OF REEL ERROR CODE
         B     EXIT .              ABORT
MORTAPE  A     R10,INCRBLKS .      INCREMENT DUMP ADDRESS BY BLOCK
*                                  LENGTH - 2048
         LTR   R10,R10 .           HAS LOW CORE BEEN WRITTEN
         BNP   NOEOJSW .           IF NOT, BRANCH AROUND SET UP OF
*                                  PGM CHECK NEW PSW
         MVC   PGMNEW(8),EOJSW .   SET EOJ SWITCH
NOEOJSW  L     R12,0(,R10) .       THIS INSTRUCTION TO CAUSE PGM CHECK
*                                  ON EOJ
         ST    R10,ADDR .          STORE NEW ADDRESS IN ADDR FIELD
         SR    R12,R12 .           CLEAR WORK REG
         AIF   ('&PROTECT' NE 'YES').HSP01AA
         ISK   R12,R10 .           GET PROTECT KEY OF BLOCK TO BE
*                                  WRITTEN
         SRL   R12,3 .             SHIFT KEY FOR IMDPRDMP
.HSP01AA ANOP
         STC   R12,ADDR .          STORE KEY IN HIGH BYTE OF BLK ADDR
         ST    R10,WRITECCW+8 .    STORE ADDR IN WRITE CCW
         MVI   WRITECCW+8,X'01' .  RESTORE OP-CODE
         C     R10,RESTORPT .      TEST FOR TIME TO RESTORE WORK RECORD
         BNE   NEXTBLK .           NO - GO WRITE RECORD
.LOWSPED ANOP
         SPACE
***  RESTORE STORAGE WRITTEN TO WORK RECORD  ***
RESPROC  L     R12,16 .            BASE LABELS IN IPL2
         AIF   (&HSP).MP014H                                M6103,M4009
         LR    R10,R13 .           SAVE CCW ADDRESS IN CASE M6103,M4009
*                                  OF DUPLICATE LINE SKIP         M4009
.MP014H  ANOP                                                     M4009
         USING IPL2,R12
         LA    R13,SEEKAD .        GET ADDR OF SEEK ADDR
         ST    R13,8 .             STORE IT IN SEEK CCW
         MVI   8,X'07' .           SET SEEK OP-CODE
         MVI   15,X'06' .          SET SEEK COUNT
         MVI   WORKCCW,X'06' .     MAKE UP A READ CCW
         MVC   WORKCCW+1(7),PICKUP+1 READ CCW IS SAME AS TAPE PICK
*                                    CCW EXCEPT FOR OP-CODE
         DROP  R12
         LA    R13,8 .             POINT TO RESTORE CHANNEL PROGRAM
         LH    R11,2 .             GET ADDRESS OF IPL DEVICE
         BALR  R14,R8 .            READ IN WORK RECORD           A53332
         AIF   (&HSP).HSP00AB
         LR    R13,R10 .           RESTORE DUMP CCW ADDRESS       M4009
         LH    R11,TARGET .        RESTORE OUTPUT DEVICE ADDRESS
         L     R10,PICKUP .        SET REAL POINTER TO DATA ADDR OF
*                                  PICKUP CCW
         SPACE
***  COMPARE FOR DUPLICATE LINE  ***
AROUND   CLC   0(32,R2),0(R10) .   IS LINE 'SAME AS ABOVE'
         BNE   FORMAT2 .           IF NO, GO FORMAT LINE
         AIF   (&TAPE).CONT10
NOCORE   LA    R13,CARRIAGE .      ELSE, SET TO SPACE EXTRA      A36497
         AGO   .CONT10A
.CONT10  ANOP
NOCORE   MVI   ASACTL,C'0' .       ELSE, SET TO SPACE EXTRA      A36497
.CONT10A ANOP
         LA    R10,32(R10) .       INCREMENT TO NEXT CORE LOCATION
         B     LOOP3 .             MAKE 'SAME AS ABOVE' TEST
         AGO   .LOWSP01
.HSP00AB ANOP
         LA    R13,WRITPRIM .      POINT TO RESTORE CHANNEL PROGRAM
         LH    R11,TARGET .        RESTORE OUTPUT DEVICE ADDRESS
         B     WRITEREC .          GO WRITE 1K OF CURRENT BLOCK
*                                  AND DATA CHAIN TO PICK UP
*                                  WORK RECORD
.LOWSP01 ANOP
         EJECT
***********************************************************************
*                                                                     *
*  EXIT HANDLER.  UNLOAD OUTPUT DEVICE IF NECESSARY, AND WRITE    M2025
*  MESSAGE TO CONSOLE.  MESSAGE TO BE WRITTEN IS ADDRESSED BY     M2025
*  REGISTER NINE.  IF END SWITCH IS SET TO NOP, EXIT HANDLER      M2025
*  LOADS WAIT STATE PSW.                                          M2025
*                                                                     *
***********************************************************************
         SPACE
         AIF   (&TAPE).UNLDTST                                    M2025
         AIF   (NOT(&MP)).MP015                                  A36497
EXITEJCT C     R10,MAXADDR .       COMPARE TO MAX ADDRESS        A36497
         BL    NOCORE .            BRANCH TO INCREMENT STORAGE   A36497
*                                  ADDRESS AND SPACE             A36497
*                                  FALL THROUGH IF ALL CORE      A36497
*                                  HAS BEEN DUMPED               A36497
         MVI   PRINT,X'8B' .       POINT TO EJECT CCW            A36497
         AGO   .MP015A                                           A36497
.MP015   ANOP                                                    A36497
EXITEJCT MVI   PRINT,X'8B' .       SET UP EJECT TO NEW PAGE       M2025
.MP015A  ANOP                                                    A36497
         LA    R13,PRINT .         POINT TO EJECT CCW
         LH    R11,TARGET .        POINT TO OUTPUT DEVICE
         BALR  R14,R8 .            FINAL I/O TO TARGET DEVICE    A53332
EXIT     MVC   IMDMSG2+5(11),0(R9) MOVE MESSAGE TO CONSOLE        M2024
         AGO   .CMSG                                              M2025
.UNLDTST ANOP                                                     M2025
         AIF   (NOT(&MP)).MP016                                  A36497
MPEXIT   C     R10,MAXADDR .       BRANCH HERE ON ADDRESSING     A36497
*                                  EXCEPTION - TEST FOR TOP OF   A36497
*                                  MACHINE                       A36497
         AIF   (&HSP).MP016A                                     A36497
         BL    NOCORE .            BRANCH TO INCREMENT STORAGE   A36497
         AGO   .MP016B                                           A36497
.MP016A  ANOP                                                    A36497
         BL    MORTAPE .           BRANCH TO INCREMENT STORAGE   A36497
.MP016B  ANOP                                                    A36497
*                                  ADDRESS AND SPACE             A36497
*                                  FALL THROUGH IF ALL CORE      A36497
*                                  HAS BEEN DUMPED               A36497
.MP016   ANOP                                                    A36497
EXIT     DS    0H .                BRANCH HERE TO ISSUE ERROR MSG M2025
TAPESW   B     CNSLMSG .           IF TARGET SHOULD BE UNLOADED   M2025
*                                  THIS BRANCH HAS BEEN CHANGED   M2025
*                                  TO NOP, TO FALL INTO UNLOAD    M2025
*                                  CODE                           M2025
         LA    R13,WTMCCW .        GET ADDR OF SENSE-RUN CHANNEL PGM
         LH    R11,TARGET .        POINT TO OUTPUT DEVICE
         OI    IORETRY+1,X'F0' .   INHIBIT I/O RETRY - CHANGE
*                                  BRANCH ONE TO RETURN UNCOND.
         BALR  R14,R8 .            FINAL I/O TO TARGET DEVICE    A53332
         TM    CSW+4,X'01' .       TEST FOR UNIT EX. ON WTM
         BZ    TAPEOUT .           BRANCH AROUND ISSUE OF RUN IF NOT
         LA    R13,RUNCCW .        POINT TO RUN CCW
         BALR  R14,R8 .            GO UNLOAD DEVICE              A53332
TAPEOUT  TIO   0(R11) .            SHUT DOWN TARGET DEVICE
         BC    8,INDEV .           AVAILABLE - SKIP WAIT LOOP
         BC    3,TAPEOUT .         LOOP FOR DEVICE END
         TM    CSW+4,X'06' .       VERIFY D.E. OR UNIT CHECK     A53332
         BZ    TAPEOUT .           IF NOT, LOOP TO WAIT
         LA    R13,RELEASE .       GET ADDR OF SENS CCW          A53332
         BAL   R14,SENSIO .        RELEASE CHANNEL AFTER U.C.    A53332
INDEV    OI    TAPESW+1,X'F0' .    RESET TAPE SWITCH - CHANGE NOP
*                                  TO BRANCH TO CONSOLE ROUTINE
CNSLMSG  MVC   IMDMSG2+5(11),0(R9) MOVE MESSAGE TO CONSOLE        M2025
.CMSG    ANOP                                                     M2025
*                                  OUTPUT AREA                    M2025
         LH    R11,CONSLAD .       GET CONSOLE ADDREAA           A36497
         LA    R13,CONSLERR .      POINT TO CONSOLE CHANNEL PROGRAM
         BALR  R14,R8 .            GO WRITE EXIT MESSAGE         A53332
ENDSW    B     CANCEL .            REPTRY OPERATOR
.STOP    ANOP
STOP     OI    1,X'06' .           SET WAIT BIT ON IN FINAL PSW   M2022
*                                  AND ENABLE MACHINE CHECKS      M2022
         LPSW  0 .                 ENTER WAIT STATE
         EJECT
***********************************************************************
*                                                                     *
*  SIO SUBROUTINE                                                     *
*                                                                     *
*      PARM REGS ARE AS FOLLOWS:                                      *
*           R11 - DEVICE ADDRESS                                      *
*           R13 - CHANNEL PROGRAM ADDRESS                             *
*           R14 - RETURN POINT                                        *
*                                                                     *
***********************************************************************
         SPACE
DUMPSIO  TIO   0(R11) .            CLEAR DEVICE                   M2022
         BCR   7,R8 .              LOOP UNTIL AVAILABLE          A53332
SENSIO   ST    R13,CAW .           SET CAW                       A53332
         SIO   0(R11) .            START I/O OPERATION            M2025
         BC    4,CKERR .           CSW STORED - GO SEE IF ERROR IS
*                                  RECOVERABLE
TIO      TIO   0(R11) .            LOOP UNTIL OPERATION COMPLETES
         BC    11,TIO .            KEEP TESTING UNTIL CSW STORED
CKERR    TM    CSW+5,X'3F' .       TEST FOR CATASTROPHIC CHANNEL ERROR
         BNZ   CATSEXIT .          EXIT IF SUCH
         TM    CSW+4,X'02' .       TEST FOR UNIT CHECK
         AIF   (&TAPE).IORTRY                                     M2025
         BCR   8,R14 .             RETURN IF NO UNIT CHECK        M2025
         CH    R11,TARGET
         BCR   7,R8 .              IF NOT TAPE, BRANCH TO RETRY  A53332
*                                  GIVEN CHANNEL PROGRAM
         AGO   .NOEND                                            A36497
.IORTRY  ANOP                                                     M2025
IORETRY  BR    R14 .               INIT RETURN UNCONDITIONALLY,
*                                  CHANGED TO RETURN IF NOT U.K.
*                                  DURING DUMP PROGRAM
         LR    R12,R8 .            POINT TO I/O RETRY E.P.       A53332
         CH    R11,TARGET .        TEST FOR ERROR ON TAPE
         BCR   7,R12 .             IF NOT TAPE, BRANCH TO RETRY  A36497
*                                  GIVEN CHANNEL PROGRAM         A36497
         LA    R13,ERRCCW .        POINT TO TAPE ERROR RECOVERY
*                                  CHANNEL PROGRAM
         CH    R13,CAW+2 .         TEST FOR ALREADY IN ERROR     A36497
*                                  RECOVERY                      A36497
         BCR   8,R12 .             IF SO, GO IMMEDIATELY         A36497
*                                  TO RETRY OPERATION            A36497
         MVC   TICOUT+1(3),CAW+1 . POINT TIC TO CALLER'S CCW
         BR    R12 .               LOOP BACK TO EXECUTE ERROR RECOVERY
*                                  SEQUENCE AND CALLER'S CHANNEL PGM.
          AGO  .END
.NOEND   ANOP
UNITSW   B     EXIT .              INVALID UNIT SWITCH - CHANGED TO
*                                  NOP AFTER FIRST I/O OPERATION TO
*                                  TARGET DEVICE
         LA    R13,PRINT .         POINT TO WRITE CCW
         BR    R8 .                BR TO RETRY PRINT OPERATION   A53332
.END     ANOP
         SPACE
CATSEXIT CH    R11,CONSLAD .       VERIFY ERROR DID NOT OCCUR ON  M2022
*                                  CONSOLE
         BE    STOP .              SKIP MESSAGE IF SO             M2022
         LA    R9,CATSCODE .       POINT TO CATASTROPHIC COMPLETION
*                                  MESSAGE
         B     EXIT .              BRANCH TO EXIT HANDLER
         EJECT
         AIF   (&HSP).NOTAB
***********************************************************************
*                                                                     *
*        TABLES AND FIELDS USED BY THE STAND/ALONE DUMP PROGRAM.      *
*                                                                     *
***********************************************************************
         SPACE
SAVEADDR DS    1F .                POINTER TO CURRENT CORE LOCATION
HEXTAB   DC    C'0123456789ABCDEF' XLATE ZONED CHARACTER TO HEX
XLATE    DC    C'.ABCDEFGHI......' TRANSLATE HEX C0 TO CF
         DC    C'.JKLMNOPQR......' TRANSLATE HEX D0 TO DF
         DC    C'..STUVWXYZ......' TRANSLATE HEX E0 TO EF
         DC    C'0123456789......' TRANSLATE HEX F0 TO FF
         DC    C' ' .              TRANSLATE HEX 40
REG8TO15 DC    CL4'8-15' .         TITLE FOR FORMAT
         AIF   (NOT(&MP)).MP017C                                 A36497
OTHREG   DC    CL8'OTH  0-7' .     LABEL FOR OTHER CPU REG       A36497
.MP017C  ANOP                                                    A36497
         AIF   (NOT(&TAPE)).CONT13
ASACTL   DC    C'1' .              SKIP TO TOP OF FIRST PAGE
.CONT13  ANOP
         AIF   (NOT(&MP)).MP017                                  A36497
OUTPUT   DC    CL8'IPL  0-7' .     PRINT IPL-ED CPU REGS 1-ST    A36497
         ORG   *-2 .               ACCOUNT FOR 8-BYTE REG LABEL  A36497
BLANKS   DS    2C .                DEFINE BLANKS LABEL FOR DUMP  A36497
*                                  OUTPUT FORMAT                 A36497
         DC    CL2' ' .            BLANKS IN OUPUT LINE          A36497
         AGO   .MP017A                                           A36497
.MP017   ANOP                                                    A36497
OUTPUT   DC    CL6'R  0-7' .       START OF PRINT LINE (ADDR LOCN)
BLANKS   DC    CL4' ' .            PADDING FOR DUMP FORMAT
.MP017A  ANOP                                                    A36497
LINE     DC    CL76' ' .           HEX FORMATTED PRINT AREA
         DC    CL1'*' .            DELIMITER FOR BEGINNING OF
*                                  EBCDIC FIELD
EBCFIELD DC    CL32' ' .           EBCDIC PRINT AREA
         DC    CL1'*' .            DELIMITER
         EJECT
.NOTAB   ANOP
***********************************************************************
*                                                                     *
*  CONSTANTS AND WORK STORAGE                                         *
*                                                                     *
***********************************************************************
         SPACE
         AIF   (&TAPE).RUN
APGMNEW  DC    A(104) .            ADDRESS OF PGM NEW PSW   M6104,M2022
         SPACE
CARRIAGE CCW   X'8B',0,X'60',X'0100' INITIAL SKIP TO CHANNEL 1 -  M2022
*                                    LENGTH IS SECOND LINE ADDR   M2022
*                                    ON CRT                       M2022
PRINT    CCW   X'09',OUTPUT,X'20',120  PRINT SINGLE LINE
.LOWPIC  ANOP
         SPACE
PICKUP   CCW   X'01',FIRST-&WORKSZ,X'20',&WORKSZ
         AGO   .BLK2052
.RUN     ANOP
READLAB  CCW   X'07',0,X'40',9 .   REWIND BEORE READ
READCCW  CCW   X'02',WORK,X'20',4 .                              A53332
         SPACE
RELEASE  CCW   X'04',0,X'30',2 .   SENSE TO RELEASE CHANNEL      A53332
         SPACE
ERRCCW   CCW   X'04',0,X'70',2 .   SENSE TO RELEASE FROM U. C.   A53332
         CCW   X'27',0,X'60',X'0100' ERROR RECOVERY FOR TAPE -   A53332
*                                    LENGTH IS SECOND LINE ADDR   M2022
*                                    ON CRT                       M2022
         CCW   X'17',0,X'60',1
TICOUT   CCW   X'08',0,X'60',1 .   ADDR FILLED IN BY SIO ERROR HANDLER
         SPACE
WTMCCW   CCW   X'04',1,X'60',1 .   SENSE-RUN CHANNEL PGM         A53332
*                                  AFTER RECORDS ARE WRITTEN TO TAPE
*                                  THIS IS CHANGED TO A WTM
         AIF   (&HSP).NOPGMC
RUNCCW   CCW   X'0F',0,X'00',PGMNEW
         ORG   RUNCCW+4
APGMNEW  DS    F .                 CONSTANT FOR COMPARE OF PGN NEW
*                                  PSW ADDRESS
         SPACE
PRINT    CCW   X'01',ASACTL,X'20',121  WRITE A LINE
         AGO   .LOWPIC
.NOPGMC  ANOP
RUNCCW   CCW   X'0F',0,X'00',1
         SPACE
WRITECCW CCW   X'01',ADDR,X'A0',4
         CCW   X'01',HEADER,X'20',2048
WRITPRIM CCW   X'01',ADDR,X'A0',4 . TO PICKUP WORK RECORD
         CCW   X'01',FIRST+&WORKSZ-2048,X'A0',2048-&WORKSZ .     A36497
         SPACE
PICKUP   CCW   X'01',FIRST-2048,X'20',&WORKSZ .                  A36497
.BLK2052 ANOP
         SPACE
         AIF   ('&CONTYPE' EQ 'B').GCONC                          M2022
CONSLCCW CCW   X'01',IMDMSG1,X'60',L'IMDMSG1
         CCW   X'0A',DEVAD,X'20',3
         SPACE
CONSLERR CCW   X'09',IMDMSG2,X'20',L'IMDMSG2
         AGO   .C1052C                                            M2022
.GCONC   ANOP                                                     M2022
***  CCWS FOR CPU CRT:  3066, 5450  ***                           M2022
         AIF   (&TAPE).ERRWRAD                                    M2022
MINPUT   EQU   CARRIAGE+1 .        MANUAL INPUT AREA IN CAR.      M2022
*                                  CONTROL CCW                    M2022
WRITEPOS EQU   CARRIAGE+6 .                  POSITION ON LINE 2   M2022
*                                            USE LENGTH IN        M2022
*                                            CARRIAGE CCW         M2022
         AGO   .CARWRAD                                           M2022
.ERRWRAD ANOP                                                     M2022
MINPUT   EQU   ERRCCW+9 .          MANUAL INPUT AREA IN ERROR    A53332
*                                  RECOVERY CCW                   M2022
WRITEPOS EQU   ERRCCW+14 .                   POSITOIN ON LINE 2  A53332
*                                            USE LENGTH IN        M2022
*                                            BSR CCW              M2022
.CARWRAD ANOP                                                     M2022
CONSLCCW CCW   X'27',PRMTPOS,X'60',2 .       SET BUFFER ADDRESS   M2026
WRITE1   CCW   X'01',IMDMSG1,X'60',L'IMDMSG1 WRITE PROMPT         M2022
PRMTPOS  EQU   WRITE1+5 .                    USE ZEROS IN WRITE   M2026
*                                            CCW TO POSITION      M2026
*                                            LINE 1               M2026
READPOS  EQU   WRITE1+6 .                    START READ EXACTLY   M2022
*                                            AT END OF PROMPT     M2022
         CCW   X'0F',READPOS,X'20',2 .       SET CURSOR FOR       M2022
*                                            DEVICE ADDRESS TO    M2022
*                                            BE ENTERED           M2022
         SPACE
RDGCONSL CCW   X'0E',MINPUT,X'60',3 .        READ MANUAL INPUT    M2022
         CCW   X'27',READPOS,X'60',2 .       SET BUFFER ADDRESS   M2022
         CCW   X'06',DEVAD,X'60',3 .         READ FROM CRT BUF    M2022
CONSLERR CCW   X'27',WRITEPOS,X'60',2 .      SET BUFFER ADDRESS   M2022
         CCW   X'01',IMDMSG2,X'20',L'IMDMSG2 WRITE MESSAGE        M2022
.C1052C  ANOP                                                     M2022
         SPACE
         AIF   (NOT(&MP)).MP018                                  A36497
FRAMEPSW DC    XL4'00',A(OFFLNBOX) PSW FOR STORAGE SIZE          A36497
*                                  DETERMINATION                 A36497
CPU2RES  DC    XL4'00',A(CPU2)     RESTART PSW FOR OTHER CPU     A36497
SIGNAL   EQU   CPU2RES .           USE ZEROS IN LEFT HALF OF PSW A36497
.MP018   ANOP                                                    A36497
         AIF   (&TAPE).NOEJCT                                     M2025
EOJSW    DC    XL2'00',XL2'&OUT',A(EXITEJCT) PSW TO XFER TO EXIT  M2025
         AGO   .EJCTPSW                                           M2025
.NOEJCT  ANOP                                                     M2025
         AIF   (NOT(&MP)).MP019                                  A36497
EOJSW    DC    XL2'00',XL2'&OUT',A(MPEXIT) PSW TO XFER TO EXIT   A36497
*                                  HANDLER                       A36497
         AGO   .MP019A                                           A36497
.MP019   ANOP                                                    A36497
EOJSW    DC    XL2'00',XL2'&OUT',A(EXIT) PSW TO TRANSFER TO EXIT  M2022
.MP019A  ANOP                                                    A36497
.EJCTPSW ANOP                                                     M2025
*                                  HANDLER ON EOJ PROGRAM CHECK   M2022
TARGET   EQU   EOJSW+2 .           INTERRUPT CODE OF EOJ PSW TO   M2022
*                                  CARRY TARGET DEVICE ADDRESS -  M2022
*                                  INIT WITH DEFALT DEVICE ADDR   M2022
         AIF   (NOT(&MP)).MP020                                  A36497
MAXADDR  DC    X'001FFFFF' .       MAXIMUM POSSIBLE MAIN         A36497
*                                  STORAGE SIZE FOR M65MP        A36497
***  SAVE AREAS FOR PSW'S NEEDED DURING INITIAL MP      ***      A36497
***  PROCESSING.                                        ***      A36497
RESTRSV  DS    8C .                OTHER CPU RE-START PSW        A36497
PGMOSV   DS    8C .                PGM OLD IN IPL-ED CPU         A36497
PGMNSV   DS    8C .                PGM NEW IN IPL-ED CPU         A36497
.MP020   ANOP                                                    A36497
         AIF   (NOT(&HSP)).NOHDR
RESTORPT DC    A(FIRST+&WORKSZ-2048)                             A36497
         SPACE
***  HEADER RECORD FORMAT  ***
ADDR     DC    X'80'
ZERO     DC    XL3'00'
HEADER   DC    C'IMDSADMP'
STARTAD  DC    A(0-2048)
INCRBLKS DC    F'2048'
WORK     DC    F'0'                                              A53332
SAVE     DS    76C
         AIF   (NOT(&MP)).MP021                                  A36497
SAVE2    DS    66C .               SAVE AREA FOR OTHER CPU       A36497
*                                  REGS, ID AND REGISTER         A36497
*                                  INDICATOR                     A36497
         ORG   SAVE2 .             PUT MP CODE IN SAVE AREA      A36497
         AGO   .MP014A                                           A36497
.***  RETURN TO .MP021 ***
.NOHDR   ANOP
SAVE     DS    76C .               REGISTER SAVE AREA            A36497
         AIF   (NOT(&MP)).MP021                                  A36497
SAVE2    EQU   SAVE .              OTHER CPU'S REGS IN SAME      A36497
*                                  SAVE AREA                     A36497
.MP021   ANOP                                                    A36497
         AIF   (&HSP).NOWORK
RESTORPT DC    A(FIRST) .          ADDRESS AT WHICH WORK RECORD IS
*                                  TO BE RESTORED
WORK     DC    F'0'
.NOWORK  ANOP
         AIF   (NOT(&TAPE)).NOEMSG
LABELID  DC    C'VOL1' .           LABEL ID
ASCIILAB DC    XL4'564F4C31' .     ASCII LABEL ID
ENDOREEL DC    CL11'4I EOR' .                                     M2024
LABELCOD DC    CL11'2I LBL ERR' .                                 M2024
IMDMSG1  DC    C'IMDOO1A TAPE=' .                                 M2024
         AGO   .NOPMSG                                            M2024
.NOEMSG  ANOP
IMDMSG1  DC    C'IMD001A PTR=' .                                  M2024
.NOPMSG  ANOP                                                     M2024
CONSLCOD DC    CL11'2I CMD ERR' .                                 M2024
CATSCODE DC    C'3I CHAN ERR' .                                   M2024
CLEANCOD DC    CL11'5I DONE' .     THIS DATA ITEM MUST            M2024
*                                  IMMDEIATELY PRECEDE THE DC FOR M2024
*                                  IMDMSG2, THE ENDING BLANK IN   M2024
*                                  CLEANCOD IS REQUIRED TO CLEAR  M2024
*                                  IMDMSG2                        M2024
         AIF   ('&CONTYPE' EQ 'A').NOBLKS                         M2022
         AIF   (NOT(&HSP)).NOBLKS                                 M2022
BLANKS   EQU   CLEANCOD+7 .        DEFINE BLANKS IN LAST          M2022
*                                  CHARACTERS OF CLEANCOD         M2022
.NOBLKS  ANOP                                                     M2022
IMDMSG2  DC    CL16'IMD00' .                                      M2024
LAST     EQU   *
         EJECT
***********************************************************************
*                                                                     *
*        ROUTINE TO WRITE THE MEMORY DUMP PROGRAM ON TO THE DIRECT    *
*        ACCESS DEVICE SPECIFIED.                                     *
*                                                                     *
***********************************************************************
         AIF   (&HSP).HSP010
SADMP    EQU   *
         BALR  14,0 .              ESTABLISH BASE
         USING *,14
.HSP010  ANOP
CSW      EQU   X'40'
CAW      EQU   X'48'
PGMNEW   EQU   X'68'              PROGRAM CHECK NEW PSW
***  REGISTER USED DURING D.A. INITIALIZATION  ***
R1       EQU   1                  CHANNEL PGM ADDRESS
         AIF     (&HSP).LODREGS
*              2                  ERROR ROUTINE ADDRESS
*              3                  SIO ROUTINE LINKAGE REGISTER
*              4                  WORK REG
*              5                  I/O ERROR RETRY COUNT
         AGO   .NOLOD
.LODREGS ANOP
R2       EQU   2 .                 ERROR ROUTINE ADDRESS
R3       EQU   3 .                 SIO ROUTINE LINKAGE REGISTER
R4       EQU   4 .                 WORK REG
R5       EQU   5 .                 I/O ERROR RETRY COUNT
.NOLOD   ANOP
         SPACE 2
STARTDEV BALR  R15,0               BASE INITIALIZER
         USING *,R15
         MVC   PGMNEW(8),HALTPSW  SET UP WAIT ON PGM CHECK
         LA    R1,READVOLL        SET UP TO READ VOLUME LABEL
         XR    R2,R2              INDICATE NO SPECIAL ERROR HANDLING
         BAL   R3,SIOROUTN        LINK TO SIO ROUTINE TO READ VOLUME
*                                 LABEL
         CLC   VOL1+11(4),DAADDR  CHECK FOR VTOC ON CYL 0, TRK 0
         BNE   VTOCOK             BRANCH IF VTOC IS NOT ON THIS TRACK
*                                 VTOC IN WRONG PLACE
         MVI   HALTPSW+7,X'04'    SET IAR TO 4 - INDICATE CAN'T WRITE
*                                 DUMP BECAUSE OF VTOC POSITION
         LPSW  HALTPSW            HALT
VTOCOK   MVI   READVOLL+4,X'10'    SKIP ON - SET UP FOR SEARCH FOR
*                                  USER VOLUME LABELS
         LA    R3,INCRSRCH        RETURN FROM SIO ROUTINE TO NEXT
*                                 SEARCH
INCRSRCH IC    R4,DAADDR+6        FETCH CURRENT RECORD NUMBER
         LA    R4,1(R4)           INCREMENT BY 1
         STC   R4,DAADDR+6        SET NEW RECORD NUMBER
         BAL   R2,SIOROUTN        LINK TO SIO ROUTINE TO SEARCH FOR
*                                 USER LABELS, LINK SETS UP ERROR EXIT
RECNOFND XR    R2,R2              RESET ERROR ROUTINE
         TM    CSW+5,X'40'         CHECK FOR INCORRECT LENGTH WHICH
*                                  MEANS NON-VOL LABEL ON CYL 0 TRK 0
         BO    WRITDUMP            GO WTRITE DUMP OVER THIS LONG REC
         LA    R4,SENSECCW        SENSE CCW ADDRESS FOR SIO ROUTINE
*                                 USE REG 4 AND SPECIAL EP TO SKIP
*                                 STANDARD CCW'S
         BAL   R3,SIO4CAW         LINK TO SIO ROUTINE
         TM    SENSE+1,X'08'      CHECK FOR RECORD NOT FOUND - MEANS
*                                 END OF USER LABELS
         BZ    INCRSRCH           IF NOT REC NOT FOUND, BRANCH TO
*                                 TRY NEXT RECORD
WRITDUMP IC    R4,DAADDR+6 .       GET ADDRESS OF WHERE TO WRITE
*                                  WORK RECORD
         LA    R4,1(R4) .          INCREMENT BY 1 TO POINT TO DUMP REC
         STC   R4,DUMPREC+4 .      SET CCHHR IN DUMP RECORD COUNT
         BCTR  R4,0 .              DECREMENT BACK TO WORK RECORD
         STC   R4,WORKREC+4 .      SET CCHHR IN WORK RECORD COUNT
         STC   R4,IPL2+42 .        POINT IPL2 TO WORK RECORD
         BCTR  R4,0               DECREMENT DUMP ADDRESS TO SEARCH
*                                 PREVIOUS
         STC   R4,DAADDR+6
         LA    R1,FORMTDMP        SET UP FORMAT CHANNEL PROGRAM
         LA    R2,NOROOM          NO ROOM ERROR ROUTINE
         BAL   R3,SIOROUTN        LINK TO SIO ROUTINE TO FORMAT DUMP
*                                 RECORD
         XR    R2,R2              RESET ERROR ROUTINE ADDRESS
         MVI   DAADDR+6,X'01'     SET DA ADDRESS TO ORIENT BACK TO
*                                 BEGINNING OF TRACK
         LA    R1,WRITIPL1        POINT TO WRITE DATA FOR IPL1
         BAL   R3,SIOROUTN        LINK TO SIO ROUTINE
         MVI   DAADDR+6,X'02'     POINT TO IPL2
         LA    R1,WRITIPL2        POINT TO FINAL CHANNEL PROGRAM
         BAL   R3,SIOROUTN        LINK TO SIO ROUTINE
         MVI   HALTPSW+7,X'01'    INDICATE SUCCESSFUL COMPLETION
         LPSW  HALTPSW            HALT
         SPACE
***  NO ROOM FOR DUMP - ERROR ROUTINE  ***
NOROOM   LH    R3,CSW+6           VERIFY RESIDUAL CSW COUNT
         LTR   R3,R3
         BNP   ERRECVRY           IF NO COUNT, ENTER STANDARD ERROR
*                                 RECOVERY FOR RETRY
         MVI   HALTPSW+7,X'08'    INDICATE NO ROOM FOR DUMP
         LPSW  HALTPSW            HALT
         SPACE
***  SIO ROUTINE  ***
SIOROUTN ST    R1,TIC2PP          STORE ADDRESS OF USER'S CHANNEL
*                                 PROGRAM IN TIC-OUT
         MVI   TIC2PP,X'08'       RESTORE OP-CODE AFTER STORE
         LA    R4,SEEK            SET UP EVERYBODY'S SEEK-SEARCH
SIO4CAW  ST    R4,CAW             SET CAW
         LA    R5,10              ESTABLISH RETRY COUNT
RETRY    SIO   X'&IPL'
         BC    7,RETRY
TESTDEV  TIO   X'&IPL'            WAIT FOR I/O TO COMPLETE
         BC    2,TESTDEV
         TM    CSW+4,X'02'        LOOK FOR UNIT CHECK
         BO    ERROR              IF UK, ATTEMPT RECOVERY
         TM    CSW+4,X'01'        VERIFY NO UNIT EXCEPTION
         BO    BOMB               IF UE, HALT WITH ERROR CODE
         TM    CSW+5,X'40'        LOOK FOR INCORRECT LENGTH
         BO    ERROR              GO CHECK FOR CALLER'S ERROR
*                                 ROUTINE IN CASE OF I.C.L.
         CLI   CSW+5,X'00'        VERIFY NO OTHER ERRORS
         BCR   8,R3               IF CLEAN, RETURN TO CALLER
BOMB     MVI   HALTPSW+5,X'F0'    SET ERROR CODE IN IAR OF HALT PSW
         MVC   HALTPSW+6(2),HALTPSW+5
         LPSW  HALTPSW            HALT
ERROR    LTR   R2,R2              CHECK FOR USER ERROR RECOVERY ROUTINE
         BZ    ERRECVRY           IF NONE, RETRY OPERATION
         BR    R2                 BRANCH TO USER ERROR HANDLER
ERRECVRY BCT   R5,RETRY           IF COUNT IS EXHAUSTED,
         B     BOMB               BRANCH TO HALT
         EJECT
***  WORKING D/A ADDRESS  ***
DAADDR   DC    XL7'03'            INIT TO VOLUME LABEL ADDRESS
         SPACE
***  INIT ENDING PSW  ***
         DS    0D
HALTPSW  DC    X'00',B'00000010',XL6'03'  WAIT PSW
         SPACE
***  IPL RECORDS FOR IMDSADMP  ***
IPL1     DC    XL5'00',AL3(ENTRY) .DUMP PROGRAM E.P. IS ENTRY
         CCW   X'06',&ENTRY,X'60',43 LOAD IPL2 AT START VALUE
         CCW   X'08',&ENTRY,X'40',1 TIC TO IPL2
         SPACE
IPL2     CCW   X'31',&ENTRY+38,X'40',5 SEARCH FOR WORK RECORD
         CCW   X'08',&ENTRY,X'40',1 TIC BACK TO SEARCH, IPL2 LOADED
*                                   AT START VALUE
WORKCCW  CCW   X'05',FIRST,X'40',&WORKSZ  WRITE OUT WORK RECORD
*                                  TO BRING DUMP PROGRAM IN
DAREAD   CCW   X'06',FIRST,X'00',&WORKSZ READ IN DUMP PROGRAM     M2024
         DC    XL6'00'            SEEK ADDRESS                    M6104
         DC    XL5'00'            SEARCH ADDRESS
PAD      DS    101C               PADDING IN IPL2
         SPACE
***  WORK AREA IN IPL2 - ZEROED OUT BY WRITE DATA  ***
         ORG   PAD+1 .             ORG TO BEGIN WORK AREA
VOL1     DS    80C                INPUT AREA FOR SENSE
SENSE    DS    4C                 INPUT AREA FOR SENSE
         DS    0D
WORKREC  DC    XL5'00' .           CCHHR SET WHEN WORK RECORD POSITION
*                                  IS DETERMINED BY INITIALIZER
         DC    AL1(0) .            NO KEY
         DC    AL2(&WORKSZ) .      WORK RECORD ON IPL
*                                  OF DUMP PROGRAM
DUMPREC  DC    XL5'00' .           CCHHR SET BY INIT
         DC    AL1(0) .            NO KEY
         DC    AL2(&WORKSZ) .     DATA FIELD TO HOLD DUMP PGM     M2024
         ORG   PAD+101 .          MOVE OUT PAST IPL2 - END WORK AREA
         SPACE
***  CHANNEL PROGRAM SUPPLIED BY SIO ROUTINE IN INIT  ***
SEEK     CCW   X'07',DAADDR,X'40',6
         CCW   X'31',DAADDR+2,X'40',5
         CCW   X'08',*-8,X'40',1
TIC2PP   CCW   X'08',0,X'40',1    TIC TO CALLER'S CHANNEL PROGRAM
         SPACE
***  CHANNEL PROGRAMS USED BY INITIALIZATION  ***
READVOLL CCW   X'06',VOL1,X'20',80     CHANNEL PGM TO READ VOL LABEL
         SPACE
SENSECCW CCW   X'04',SENSE,X'20',4
         SPACE
FORMTDMP CCW   X'1D',WORKREC,X'40',8+&WORKSZ FORMAT WORK RECORD
         CCW   X'1D',DUMPREC,X'00',8+&WORKSZ FORMAT DUMP REC      M2024
         SPACE
WRITIPL1 CCW   X'05',IPL1,X'20',24     WRITE IPL1
         SPACE
WRITIPL2 CCW   X'05',IPL2,X'60',43     WRITE IPL2
         CCW   X'31',DUMPREC,X'40',5   SEARCH TO FORMATED DUMP RECORD
         CCW   X'08',*-8,X'40',1
         CCW   X'05',FIRST,X'00',&WORKSZ WRITE DUMP PROGRAM       M2024
         MEND
