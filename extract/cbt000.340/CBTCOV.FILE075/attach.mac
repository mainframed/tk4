         MACRO
&NAME    ATTACH &EP=,&EPLOC=,&DE=,&DCB=,&PARAM=,&VL=,&ECB=,        I270X
               &GSPV=,&KEY=PROP,&GSPL=,&SHSPL=,&ETXR=,&LPMOD=,     I270X
               &DPMOD=,&MF=I,&SF=I,&SHSPV=,&SM=PROB,&SZERO=YES,    I270X
               &JSTCB=NO,&SVAREA=YES,&ROLL=(YES,NO),&HIARCHY=,     I270X
               &JSCB=,&GIVEJPQ=NO,&TASKLIB=,&TSLOGON=NO,          20021X
               &STAI=,&PURGE=QUIESCE,&ASYNCH=NO                   20021
         GBLB  &IHBSWA,&IHBSWB
         GBLC  &IHBNO
         LCLA  &A,&E,&F,&G,&L,&K,&X,&NUMB
         LCLC  &H,&CHAR,&PARA,&FUDGE,&GNAME
.*0013000800,023200,026400-027000,036600,037000,037400             RORI
.*0013040200-040800,042000,059400,059800,060200,063000-063600      RORI
.*3130000800,013600,014200,014400,014600,028400,029200,030200      LCS1
.*3130031000,031400,044200-044400,044600,051200,052000,053000      LCS1
.*3130053800,054200                                                LCS1
.*000400-000800,026300-027200,040100-040800,041600-041800,050400,  I270
.*062900-063600,064400-064600                                      I270
&IHBNO   SETC  '306'
 AIF ('&HIARCHY' NE '' AND '&HIARCHY' NE '0'                           *
               AND '&HIARCHY' NE '1').ERRHID                       LCS1
         AIF   ('&MF' EQ 'L' OR('&SF' EQ 'L' AND '&MF(1)' EQ 'E')).E1
         AIF   ('&SF' EQ 'L' AND '&PARAM' NE '').ERROR2
         AIF   ( '&EP' NE '' AND '&EPLOC' NE '').ERROR4
         AIF   ('&EP' NE '' AND '&DE' NE '').ERROR4
         AIF   ('&DE' NE '' AND '&EPLOC' NE '').ERROR4
&GNAME   SETC  'IHB'.'&SYSNDX'
&IHBSWA  SETB  ('&VL' EQ '1')
&IHBSWB  SETB  ('&SF' EQ '(E,(15))')
         AIF   ('&NAME' EQ '' OR '&SF' EQ 'L').CONTAA
&NAME    DS    0H
.CONTAA  AIF   ('&PARAM' EQ '' AND '&MF(1)' NE 'E').CONTA
         IHBOPLST ,&PARAM,MF=&MF
.CONTA   AIF   ('&SF' EQ 'I').IROUT
         AIF   ('&SF' EQ 'L').LROUT
         AIF   (N'&SF NE 2).ERROR3
         AIF   ('&SF(1)' NE 'E').ERROR3
         AIF   ('&SF'(4,1) EQ '(').ISAREG
         LA    15,&SF(2)                         LOAD LIST ADDR INTO 15
         AGO   .CONTB
.E1      IHBERMAC 35,&IHBNO,&MF
         MEXIT
.ERROR2  IHBERMAC 71,&IHBNO,&PARAM
         MEXIT
.ERROR3  IHBERMAC 41,&IHBNO,&SF
         MEXIT
.ERROR4  IHBERMAC 88,&IHBNO
         MEXIT
.ERROR5  IHBERMAC 72,&IHBNO
         MEXIT
.ERROR6  IHBERMAC 31,&IHBNO
         MEXIT
.ERRHID IHBERMAC 195
         MEXIT
.ISAREG  AIF   ('&SF(2)' EQ '(15)').CONTB
&A       SETA  K'&SF-6
&H       SETC  '&SF'(5,&A)
         LR    15,&H                             LOAD LIST ADDR INTO 15
.CONTB   ANOP
         AIF   ('&EP' EQ '').CONTC
         LA    14,28(15,0)                       PICK UP EP ADDRESS
         ST    14,0(15,0)                        INSERT EP ADDR IN LIST
         MVC   28(8,15),*+10                     MOVE EP SYMB INTO LIST
         B     *+12                              BRANCH AROUND EP SYMB.
         DC    CL8'&EP'                          EP SYMBOL
         AGO   .CONTE
.CONTC   AIF   ('&EPLOC' EQ '').CONTD
         AIF   ('&EPLOC'(1,1) EQ '(').ISAREGA
         LA    14,&EPLOC                         PICK UP EPLOC ADDRESS
         ST    14,0(15,0)                        INSERT EPLOC INTO LIST
         AGO   .CONTE
.ISAREGA ST    &EPLOC(1),0(15,0)                 INSERT EPLOC INTO LIST
         AGO   .CONTE
.CONTD   AIF   ('&DE' EQ '').CONTE
         AIF   ('&DE'(1,1) EQ '(').ISAREGB
         LA    14,&DE                            PICK UP DE ADDRESS
         ST    14,0(15,0)                        INSERT DE INTO LIST
         MVI   0(15),X'80'                       SET BIT INDICATING DE
         AGO   .CONTE
.ISAREGB ST    &DE(1),0(15,0)                    INSERT DE INTO LIST
         MVI   0(15),X'80'                       SET BIT INDICATING DE
.CONTE   AIF   ('&DCB' EQ '').CONHID                               LCS1
         AIF   ('&DCB'(1,1) EQ '(').ISAREGC
         LA    14,&DCB                           PICK UP DCB ADDRESS
         STH   14,6(15)           STORE                            LCS1
         SRL   14,16               DCB                             LCS1
         STC   14,5(15)             INTO LIST                      LCS1
         AGO   .CONHID                                             LCS1
.ISAREGC LR    14,&DCB(1)                        PICK UP DCB ADDR  LCS1
         STH   14,6(15)           STORE                            LCS1
         SRL   14,16
         STC   14,5(15)             INTO LIST                      LCS1
.CONHID AIF ('&HIARCHY' EQ '').CONTF                               LCS1
         AIF   ('&HIARCHY' EQ '0').HID0                            LCS1
         AIF   ('&HIARCHY' EQ '1').HID1                            LCS1
.HID0    MVI   4(15),X'01'        HIARCHY=0                        LCS1
         AGO   .CONTF                                              LCS1
.HID1    MVI   4(15),X'02'        HIARCHY=1                        LCS1
.CONTF   AIF   ('&ECB' EQ '').CONTG
         AIF   ('&ECB'(1,1) EQ '(').ISAREGD
         LA    14,&ECB                           PICK UP ECB ADDRESS
         XC    9(3,15),9(15)           ZERO OUT LAST 3 BYTES      M5380
         O     14,8(15)                TURN ON HIGH ORD. BYTE     M5380
         ST    14,8(15,0)                        INSERT ECB INTO LIST
         AGO   .CONTG
.ISAREGD IC    14,8(15,0)              SAVE POSSIBLE STAI BITS    M5380
         SLL   14,24                   POSITION BITS              M5380
         OR    14,&ECB(1)                                      @SA74299
         ST    14,8(15,0)          STORE ECB INTO LIST         @SA74299
.CONTG   AIF   ('&GSPV' EQ '').CONTH
         AIF   ('&GSPV'(1,1) EQ '(').ISAREGE
         LA    14,&GSPV.(0,0)                    PICK UP GSPV VALUE
         ST    14,12(15,0)                       INSERT GSPV INTO LIST
         AGO   .CONTI
.ISAREGE ST    &GSPV(1),12(15,0)                 INSERT GSPV INTO LIST
         AGO   .CONTI
.CONTH   AIF   ('&GSPL' EQ '').CONTI
         AIF   ('&GSPL'(1,1) EQ '(').ISAREGF
         LA    14,&GSPL                          PICK UP GSPL ADDRESS
         ST    14,12(15,0)                       INSERT GSPL INTO LIST
         MVI   12(15),X'01'                      SET LIST BIT ON
         AGO   .CONTI
.ISAREGF ST    &GSPL(1),12(15,0)                 INSERT GSPL INTO LIST
         MVI   12(15),X'01'                      SET LIST BIT ON
.CONTI   AIF   ('&SHSPV' EQ '').CONTK
         AIF   ('&SHSPV'(1,1) EQ '(').ISAREGG
         LA    14,&SHSPV.(0,0)                   PICK UP SHSPV VALUE
         ST    14,16(15,0)                       INSERT SHSPV INTO LIST
         AGO   .CONTL
.ISAREGG ST    &SHSPV(1),16(15,0)                INSERT SHSPV INTO LIST
         AGO   .CONTL
.CONTK   AIF   ('&SHSPL' EQ '').CONTL
         AIF   ('&SHSPL'(1,1) EQ '(').ISAREGH
         LA    14,&SHSPL                         PICK UP SHSPL ADDRESS
         ST    14,16(15,0)                       INSERT SHSPL INTO LIST
         MVI   16(15),X'01'                      SET LIST BIT ON
         AGO   .CONTL
.ISAREGH ST    &SHSPL(1),16(15,0)                INSERT SHSPL INTO LIST
         MVI   16(15),X'01'                      SET LIST BIT ON
.CONTL   AIF   ('&ETXR' EQ '').CONTN
         AIF   ('&ETXR'(1,1) EQ '(').ISAREGI
         LA    14,&ETXR                          PICK UP ETXR ADDRESS
         XC    21(3,15),21(15)         ZERO OUT LAST 3 BYTES      M5380
         O     14,20(15)               INSERT POSSIBLE ROLL BITS  M5380
         ST    14,20(0,15)                       INSERT ETXR IN LIST
         AGO   .CONTN
.ISAREGI IC    14,20(0,15)             SAVE POSSIBLE ROLL BITS    M5380
         SLL   14,24                   POSITION BITS              M5380
         OR    14,&ETXR(1)         PUT BITS IN REG             @SA74299
         ST    14,20(0,15)         STORE ETXR IN LIST          @SA74299
.CONTN   ANOP
.CONTN0  AIF   ('&DPMOD' EQ '').CONTO                              RORI
         AIF   ('&DPMOD'(1,1) EQ '(').ISAREGJ
         B     *+6                               BRANCH AROUND DPMOD
         AIF   ('&DPMOD'(1,1) EQ '+' OR '&DPMOD'(1,1) EQ '-').SIGNA
         DC    AL2(&DPMOD)                       DPMOD VALUE
         MVC   24(2,15),*-2                      INSERT DPMOD IN LIST
         AGO   .CONTO
.SIGNA   DC    AL2(0&DPMOD)                      DPMOD VALUE
         MVC   24(2,15),*-2                      INSERT DPMOD IN LIST
         AGO   .CONTO
.ISAREGJ STH   &DPMOD(1),24(15,0)                INSERT DPMOD IN LIST
.CONTO   AIF   ('&LPMOD' EQ '').CONTP
         AIF   ('&LPMOD'(1,1) EQ '(').ISAREGK
         MVI   26(15),&LPMOD                     INSERT LPMOD IN LIST
         AGO   .CONTP
.ISAREGK STC   &LPMOD(1),26(15,0)                INSERT LPMOD IN LIST
.CONTP   ANOP                                                      I270
&NUMB    SETA  0                                                   I270
         AIF   ('&JSCB' EQ '').CONTP0                              I270
&NUMB    SETA  (&NUMB+64)         SET JSCB KEY ON                  I270
.CONTP0  AIF   ('&GIVEJPQ' EQ 'NO').CONTP1                         I270
&NUMB    SETA  (&NUMB+32)         SET GIVEJPQ KEY ON               I270
.CONTP1  AIF   ('&KEY' EQ 'PROP').CONTP2                           I270
&NUMB    SETA  (&NUMB+16)         SET KEYZERO KEY ON               I270
.CONTP2 AIF    ('&SZERO' EQ 'YES').CONTQ                           I270
&NUMB    SETA  (&NUMB+8)          SET SZERO KEY ON                 I270
.CONTQ   AIF   ('&SVAREA' EQ 'YES').CONTQ1                         I270
&NUMB    SETA  (&NUMB+4)          SET SVAREA KEY ON                I270
.CONTQ1  AIF   ('&JSTCB' NE 'YES').CONTQ2                          I270
&NUMB    SETA  (&NUMB+2)          SET JSTCB KEY ON                 I270
.CONTQ2  AIF   ('&SM' NE 'SUPV').CONTQ3                            I270
&NUMB    SETA  (&NUMB+1)          SET SM KEY ON                    I270
.CONTQ3  ANOP                                                      I270
         AIF   (&NUMB EQ 0).JSCB1                                  I270
         OI    27(15),&NUMB                                        I270
.JSCB1   AIF   ('&JSCB' EQ '').CONTQ4                              I270
         AIF   ('&JSCB'(1,1) EQ '(').ISAREG1                       I270
         LA    14,&JSCB           PICK UP JSCB ADDRESS             I270
         ST    14,36(15)          INSERT JSCB INTO LIST            I270
.CONTQ4  ANOP                                                      I270
         AGO   .CONTQ5                                            20028
.ISAREG1 ST    &JSCB(1),36(15)    INSERT JSCB INTO LIST            I270
.CONTQ5  ANOP                                                     20028
         AIF   ('&TSLOGON' NE 'YES').NOTSOLN                      20021
         OI    8(15),X'04'              .SET TSOLOGON FLAF BIT.   20021
.NOTSOLN ANOP                                                     20021
         AIF   ('&STAI(1)' NE '').STAIR                           20028
         AGO   .TLIBE                                             20021
.STAIR   AIF   ('&TASKLIB' EQ '').STAIRA                          20021
         OI    8(15),X'03'   .SET STAI AND TASKLIB FLAG BITS.     20021
         AGO   .STAIRB                                            20021
.STAIRA  OI    8(15),X'01'   .FLAG TO INDICATE STAI WORDS.        20021
.STAIRB  AIF   ('&STAI'(2,1) EQ '(').REG1                         20021
         LA    14,&STAI(1)    GET STAI EXIT ADDR                  20028
         ST    14,44(15)      PUT STAI EXIT ADDR IN LIST          20028
         AGO   .STAI2                                             20028
.REG1    ST    &STAI(1),44(15)  PUT STAI EXIT ADDR IN LIST        20028
.STAI2   AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'NO').STAZ 20021
         AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'YES').STY 20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'NO').STX     20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'NO').STW     20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'YES').STV    20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'YES').STU    20021
         AGO   .ERROZ                                             20021
.STY     OI    44(15),X'04'        PURGE EQ QUIESCE,ASYNCH EQ YES 20021
         AGO   .STAZ                                              20021
.STX     OI    44(15),X'01'        PURGE EQ HALT AND ASYNCH EQ NO 20021
         AGO   .STAZ                                              20021
.STW     OI     44(15),X'02'       PURGE EQ NONE AND ASYNCH EQ NO 20021
         AGO   .STAZ                                              20021
.STV     OI    44(15),X'05'        PURGE EQ HALT, ASYNCH EQ YES   20021
         AGO   .STAZ                                              20021
.STU     OI    44(15),X'06'        PURGE EQ NONE, ASYNCH EQ YES   20021
.STAZ    AIF   (N'&STAI GT 2).ERROR                               20021
         AIF   ('&STAI(2)' EQ '').TLIBE                           20021
         AIF   ('&STAI(2)'(1,1) EQ '(').REG2                      20021
         LA    14,&STAI(2)         GET STAI PARMLST ADDR          20021
         ST    14,40(15)      PUT STAI LST ADDR IN LIST           20028
         AGO   .TLIBE                                             20021
.REG2    ST    &STAI(2),40(15)  PUT STAI LIST ADDR IN LIST        20028
.TLIBE   AIF   ('&TASKLIB' EQ '').SVC                             20021
         AIF   ('&STAI(1)' NE '').TLIBEA                          20021
         OI    8(15),X'02'   .FLAG TO INDICATE TASKLIB DCB ADDR.  20021
.TLIBEA  AIF   ('&TASKLIB'(1,1) EQ '(').TREGE                     20021
         LA    14,&TASKLIB(1) GET TASKLIB DCB ADDR.               20021
         ST    14,48(,15)    .PUT TASKLIB DCB ADDR. IN LIST.      20021
         AGO   .SVC                                               20021
.TREGE   ST    &TASKLIB(1),48(,15) TASKLIB DCB ADDR. IN LIST.     20021
         AGO   .SVC                                               20021
.LROUT   ANOP
&NAME    DS    0F
         AIF   ('&EP' EQ '').CONTLA
         AIF   ('&EP'(1,1) EQ '(').ERROR5
         DC    A(*+28)                           POINTER TO SYMB NAME
         AGO   .COHID                                              LCS1
.CONTLA  AIF   ('&EPLOC' EQ '').CONTLB
         AIF   ('&EPLOC'(1,1) EQ '(').ERROR5
         DC    A(&EPLOC)                         POINTER TO SYMB NAME
         AGO   .COHID                                              LCS1
.CONTLB  AIF   ('&DE' EQ '').CONTLLA
         AIF   ('&DE'(1,1) EQ '(').ERROR5
         DC    X'80'                             SET BIT TO INDICATE DE
         DC    AL3(&DE)                          DIRECTORY ENTRY POINTR
         AGO   .COHID                                              LCS1
.CONTLLA DC    A(0)                              DE OR EPLOC ADDRESS
.COHID   AIF   ('&HIARCHY' EQ '').CHID                             LCS1
         AIF   ('&HIARCHY' EQ '0').CHID0                           LCS1
         AIF   ('&HIARCHY' EQ '1').CHID1                           LCS1
.CHID    DC    AL1(0)             NO HIARCHY                       LCS1
         AGO   .CONTLC                                             LCS1
.CHID0   DC    AL1(1)             HIARCHY=0                        LCS1
         AGO   .CONTLC                                             LCS1
.CHID1   DC    AL1(2)             HIARCHY=1                        LCS1
.CONTLC  AIF   ('&DCB' EQ '').CONTLD
         AIF   ('&DCB'(1,1) EQ '(').ERROR5
         DC    AL3(&DCB)                                           LCS1
         AGO   .CONTLSE                                           20028
.CONTLD  DC    AL3(0)                  DCB ADDRESS                 LCS1
.CONTLSE AIF   ('&STAI(1)' EQ '' AND '&TASKLIB' EQ '').CONTLEE    20021
         AIF   ('&STAI(1)' NE '' AND '&TASKLIB' NE '').TLBOTHF    20021
         AIF   ('&STAI(1)' NE '').TLSTAIF                         20021
         AIF   ('&TSLOGON' NE 'YES').NOTSOLP                      20021
         DC    AL1(6)                   .TASKLIB+TSOLOGON FLAGS.  20021
         AGO   .NOTSOLQ                                           20021
.NOTSOLP ANOP                                                     20021
         DC    AL1(2)        .TASKLIB FLAG BIT.                   20021
.NOTSOLQ ANOP                                                     20021
         AGO   .CONTLE                                            20021
.TLBOTHF ANOP                                                     20021
         AIF   ('&TSLOGON' NE 'YES').NOTSOLR                      20021
         DC    AL1(7)                   .STAI,TASKLIB+TSLOGON.    20021
         AGO   .NOTSOLS                                           20021
.NOTSOLR DC    AL1(3)                   .STAI+TASKLIB FLAGBITS.   20021
.NOTSOLS ANOP                                                     20021
         AGO   .CONTLE                                            20021
.TLSTAIF ANOP                                                     20021
         AIF   ('&TSLOGON' NE 'YES').NOTSOLT                      20021
         DC    AL1(5)                   .STAI+TSOLOGON FLAGBIT.   20021
         AGO   .NOTSOLV                                           20021
.NOTSOLT ANOP                                                     20021
         DC    AL1(1)                   .STAI FLAG BIT.           20021
.NOTSOLV ANOP                                                     20021
         AGO   .CONTLE                                            20028
.CONTLEE ANOP                                                     20021
         AIF   ('&TSLOGON' NE 'YES').NOTSOLW                      20021
         DC    AL1(4)                   .TSOLOGON BIT.            20021
         AGO   .NOTSOLX                                           20021
.NOTSOLW ANOP                                                     20021
         DC    AL1(0)                                             20021
.NOTSOLX ANOP                                                     20021
.CONTLE  AIF   ('&ECB' EQ '').CONTLF
         AIF   ('&ECB'(1,1) EQ '(').ERROR5
         DC    AL3(&ECB)                         ECB ADDRESS      20028
         AGO   .CONTLG
.CONTLF  DC    AL3(0)                            ECB ADDRESS      20028
.CONTLG  AIF   ('&GSPV' EQ '').CONTLH
         AIF   ('&GSPV'(1,1) EQ '(').ERROR5
         DC    A(&GSPV)                          GSPV VALUE
         AGO   .CONTLI
.CONTLH  AIF   ('&GSPL' EQ '').CONTLJ
         AIF   ('&GSPL'(1,1) EQ '(').ERROR5
         DC    AL1(1)                            SET LIST BIT ON
         DC    AL3(&GSPL)                        GSPL ADDRESS
         AGO   .CONTLI
.CONTLJ  DC    A(0)                              GSPL OR GSPV
.CONTLI  AIF   ('&SHSPV' EQ '').CONTLK
         AIF   ('&SHSPV'(1,1) EQ '(').ERROR5
         DC    A(&SHSPV)                         SHSPV VALUE
         AGO   .CONTLL
.CONTLK  AIF   ('&SHSPL' EQ '').CONTLM
         AIF   ('&SHSPL'(1,1) EQ '(').ERROR5
         DC    AL1(1)                            SET LIST BIT ON
         DC    AL3(&SHSPL)                       SHSPL ADDRESS
         AGO   .CONTLL
.CONTLM  DC    A(0)                              SHSPV OR SHSPL
.CONTLL  AIF   ('&ROLL'(2,1) EQ 'N').ROLL2                         RORI
&NUMB    SETA  2                             SET R.O. ABILITY BIT  RORI
.ROLL2   AIF   ('&ROLL'(6,1) EQ 'N' OR '&ROLL'(5,1) EQ 'N').DEFLT2 RORI
&NUMB    SETA  &NUMB+1                       SET R.O. INVOKE BIT   RORI
.DEFLT2  DC    AL1(&NUMB)                        SET ROLLOUT BITS  RORI
&NUMB    SETA  0                             REINITIALIZE TO ZERO  RORI
         AIF   ('&ETXR' EQ '').CONTLN                              RORI
         AIF   ('&ETXR'(1,1) EQ '(').ERROR5
         DC    AL3(&ETXR)                    EXIT ROUT. ADDRESS    RORI
         AGO   .CONTLO
.CONTLN  DC    AL3(0)                        EXIT ROUT. ADDRESS    RORI
.CONTLO  AIF   ('&DPMOD' EQ '').CONTLP
         AIF   ('&DPMOD'(1,1) EQ '(').ERROR5
         AIF   ('&DPMOD'(1,1) EQ '+' OR '&DPMOD'(1,1) EQ '-').SIGNB
         DC    AL2(&DPMOD)                       DPMOD VALUE
         AGO   .CONTLQ
.SIGNB   DC    AL2(0&DPMOD)                      DPMOD VALUE
         AGO   .CONTLQ
.CONTLP  DC    AL2(0)                            DPMOD VALUE
.CONTLQ  AIF   ('&LPMOD' EQ '').CONTLR
         AIF   ('&LPMOD'(1,1) EQ '(').ERROR5
         DC    AL1(&LPMOD)                       LPMOD VALUE
         AGO   .CONTLS
.CONTLR  DC    AL1(0)                            LPMOD VALUE
.CONTLS  AIF   ('&JSCB' EQ '').CONTLS0                             I270
&NUMB    SETA  (&NUMB+64)                   SET JSCB KEY ON        I270
.CONTLS0 AIF   ('&GIVEJPQ' EQ 'NO').CONTLS1                        I270
&NUMB    SETA  (&NUMB+32)                   SET GIVEJPQ KEY ON     I270
.CONTLS1 AIF   ('&KEY' EQ 'PROP').CONTLS2                          I270
&NUMB    SETA  (&NUMB+16)                   SET KEYZERO KEY ON     I270
.CONTLS2 AIF   ('&SZERO' EQ 'YES').CONTLS3                         I270
&NUMB    SETA  (&NUMB+8)                    SET SZERO KEY ON       I270
.CONTLS3 AIF   ('&SVAREA' EQ 'YES').CONTLS4                        I270
&NUMB    SETA  (&NUMB+4)                    SET SVAREA KEY ON      I270
.CONTLS4 AIF   ('&JSTCB' NE 'YES').CONTLS5                         I270
&NUMB    SETA  (&NUMB+2)                    SET JSTCB KEY ON       I270
.CONTLS5 AIF   ('&SM' NE 'SUPV').CONTLU                            I270
&NUMB    SETA  (&NUMB+1)                    SET SM KEY ON          I270
.CONTLU  DC    AL1(&NUMB)
         AIF   ('&EP' EQ '').CONTLV
         DC    CL8'&EP'                          EP SYMBOL
         AGO   .CONTLV1                                            1270
.CONTLV  DC    CL8' '                                              I270
.CONTLV1 ANOP                                                      1270
         AIF   ('&JSCB' EQ '').NOJSCB                             20021
         AIF   ('&JSCB'(1,1) EQ '(').ERROR5                        I270
         DC    A(&JSCB)           ADDRESS OF JSCB                  I270
         AGO   .STAIL                                             20028
.NOJSCB  ANOP                                                     20028
         DC    A(0)    .                                          20028
.STAIL   ANOP                                                     20028
.CONTLW  AIF   ('&STAI(1)' NE '').CONTLX                          20028
         DC    A(0,0)                   .STAI PARM LIST+EXIT ADD. 20021
         AGO   .TLCONT                                            20021
.CONTLX  AIF   (N'&STAI GT 2).ERROR                               20028
         AIF   ('&STAI(2)' EQ '').CONTLY                          20028
         DC    A(&STAI(2))    STAI PARM LIST ADDRESS              20028
         AGO   .TLCX                                              20021
.CONTLY  DC    A(0)                     .STAI PARAMETER LIST.     20021
.TLCX    AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'NO').TLCY 20021
         AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'YES').TLX 20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'NO').TLW     20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'NO').TLV     20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'YES').TLU    20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'YES').TLT    20021
         AGO   .ERROZ                                             20021
.TLX     DC    AL1(4)              PURGE EQ QUIESCE,ASYNCH EQ YES 20021
         AGO   .TLCZ                                              20021
.TLW     DC    AL1(1)              PURGE EQ HALT AND ASYNCH EQ NO 20021
         AGO   .TLCZ                                              20021
.TLV     DC    AL1(2)              PURGE EQ NONE AND ASYNCH EQ NO 20021
         AGO   .TLCZ                                              20021
.TLU     DC    AL1(5)              PURGE EQ HALT, ASYNCH EQ YES   20021
         AGO   .TLCZ                                              20021
.TLT     DC    AL1(6)              PURGE EQ MOVE, ASYNCH EQ YES   20021
         AGO   .TLCZ                                              20021
.TLCY    DC    AL1(0)              PURGE EQ QUIESCE,ASYNCH EQ NO  20021
.TLCZ    DC    AL3(&STAI(1))            STAI EXIT ROUTINE ADDRESS 20021
.TLCONT  AIF   ('&TASKLIB' NE '').TLCONTA                         20021
         DC    A(0)                     .TASKLIB.                 20021
         AGO   .END                                               20021
.TLCONTA ANOP                                                     20021
         DC    A(&TASKLIB)   .TASKLIB DCB ADDRESS.                20021
         AGO   .END                                               20021
.IROUT   ANOP
         LA    15,&GNAME                         LOAD 15 WITH LIST ADDR
         AIF   ('&EPLOC' EQ '').ICONTA
         AIF   ('&EPLOC'(1,1) NE '(').ICONTB
         ST    &EPLOC(1),0(0,15)                 STORE EPLOC INTO LIST
         AGO   .ICONTB
.ICONTA  AIF   ('&DE' EQ '').ICONTB
         AIF   ('&DE'(1,1) NE '(').ICONTB
         ST    &DE(1),0(0,15)                    STORE  DE INTO LIST
         MVI   0(15),X'80'                       SET DE BIT ON
.ICONTB  AIF   ('&DCB' EQ '').ICOHID                               LCS1
         AIF   ('&DCB'(1,1) NE '(').ICOHID                         LCS1
         LR    14,&DCB(1)         PICK UP DCB ADDRESS              LCS1
         STH   14,6(15)           STORE                            LCS1
         SRL   14,16               DCB                             LCS1
         STC   14,5(15)             INTO LIST                      LCS1
.ICOHID  ANOP                                                      LCS1
.ICONTC  AIF   ('&ECB' EQ '').ICONTD
         AIF   ('&ECB'(1,1) NE '(').ICONTD
         ST    &ECB(1),8(0,15)                   STORE ECB INTO LIST
.ICONTD  AIF   ('&GSPV' EQ '').ICONTE
         AIF   ('&GSPV'(1,1) NE '(').ICONTF
         ST    &GSPV(1),12(0,15)                 STORE GSPV INTO LIST
         AGO   .ICONTF
.ICONTE  AIF   ('&GSPL' EQ '').ICONTF
         AIF   ('&GSPL'(1,1) NE '(').ICONTF
         ST    &GSPL(1),12(0,15)                 STORE GSPL INTO LIST
         MVI   12(15),X'01'                      SET LIST BIT ON
.ICONTF  AIF   ('&SHSPV' EQ '').ICONTG
         AIF   ('&SHSPV'(1,1) NE '(').ICONTH
         ST    &SHSPV(1),16(0,15)                STORE SHSPV INTO LIST
         AGO   .ICONTH
.ICONTG  AIF   ('&SHSPL' EQ '').ICONTH
         AIF   ('&SHSPL'(1,1) NE '(').ICONTH
         ST    &SHSPL(1),16(0,15)                STORE SHSPL INTO LIST
         MVI   16(15),X'01'                      SET LIST BIT ON
.ICONTH  AIF   ('&ETXR' EQ '').ICONTI
         AIF   ('&ETXR'(1,1) NE '(').ICONTI
         ST    &ETXR(1),20(0,15)                 STORE ETXR INTO LIST
.ICONTI  AIF   ('&DPMOD' EQ '').ICONTJ
         AIF   ('&DPMOD'(1,1) NE '(').ICONTJ
         STH   &DPMOD(1),24(15,0)                STORE DPMOD INTO LIST
.ICONTJ  AIF   ('&LPMOD' EQ '').ICONTK
         AIF   ('&LPMOD'(1,1) NE '(').ICONTK
         STC   &LPMOD(1),26(15,0)                STORE LPMOD INTO LIST
.ICONTK  AIF   ('&JSCB' EQ '').ICONTL0                            20028
         AIF   ('&JSCB'(1,1) NE '(').ICONTL0                      20028
         ST    &JSCB(1),36(15)    INSERT JSCB INTO LIST            I270
.ICONTL0 ANOP                                                     20021
         AIF   ('&TSLOGON' NE 'YES').NOTSOLY                      20021
         OI    8(15),X'04'              .SET TSOLOGON BIT.        20021
.NOTSOLY ANOP                                                     20021
         AIF   ('&STAI(1)' EQ '').ICONTO                          20021
         AIF   (N'&STAI GT 2).ERROR                               20028
         AIF   ('&TASKLIB' EQ '').ICONTS                          20021
         OI    8(15),X'03'   .SET STAI AND TASKLIB FLAG BITS.     20021
         AGO   .ICONTR                                            20021
.ICONTS  OI    8(15),X'01'   .SET STAI FLAG BIT.                  20021
.ICONTR  AIF   ('&STAI'(2,1) NE '(').ICONTM                       20021
         ST    &STAI(1),44(0,15)   PUT STAI EXIT ADDR IN LIST     20028
.ICONTM  AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'NO').ICZ  20021
         AIF   ('&PURGE' EQ 'QUIESCE' AND '&ASYNCH' EQ 'YES').ICY 20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'NO').ICX     20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'NO').ICW     20021
         AIF   ('&PURGE' EQ 'HALT' AND '&ASYNCH' EQ 'YES').ICV    20021
         AIF   ('&PURGE' EQ 'NONE' AND '&ASYNCH' EQ 'YES').ICU    20021
         AGO   .ERROZ                                             20021
.ICY     OI    44(15),X'04'        PURGE EQ QUIESCE,ASYNCH EQ YES 20021
         AGO   .ICZ                                               20021
.ICX     OI    44(15),X'01'        PURGE EQ HALT AND ASYNCH EQ NO 20021
         AGO   .ICZ                                               20021
.ICW     OI    44(15),X'02'        PURGE EQ NONE AND ASYNCH EQ NO 20021
         AGO   .ICZ                                               20021
.ICV     OI    44(15),X'05'        PURGE EQ HALT,ASYNCH EQ YES    20021
         AGO   .ICZ                                               20021
.ICU     OI    44(15),X'06'        PURGE EQ NONE, ASYNCH EQ YES   20021
.ICZ     AIF   ('&STAI(2)' EQ '').ICONTO                          20021
         AIF   ('&STAI(2)'(1,1) NE '(').ICONTO                    20021
         ST    &STAI(2),40(0,15)   PUT STAI LIST ADDR IN LIST     20021
.ICONTO  AIF   ('&TASKLIB' EQ '').ICONTP                          20021
         AIF   ('&STAI(1)' NE '').ICONTQ                          20021
         OI    8(15),X'02'   .SET TASKLIB FLAG BIT.               20021
.ICONTQ  AIF   ('&TASKLIB'(1,1) NE '(').ICONTP                    20021
         ST    &TASKLIB,48(,15)  .PUT TASKLIB DCB ADDR. IN LIST.  20021
.ICONTP  B     52(0,15)      .AROUND LIST.                        20021
&GNAME   DS    0F                                SUP. PARAM. LIST
         AIF   ('&EP' EQ '').CNTA
         DC    A(*+28)                           ADDRESS OF SYMB NAME
         AGO   .CCHID                                              LCS1
.CNTA    AIF   ('&EPLOC' EQ '').CNTC
         AIF   ('&EPLOC'(1,1) EQ '(').CNTD
         DC    A(&EPLOC)                         ADDRESS OF SYMB NAME
         AGO   .CCHID                                              LCS1
.CNTC    AIF   ('&DE' EQ '').ERROR6
         AIF   ('&DE'(1,1) EQ '(').CNTD
         DC    X'80'                             SET BIT TO INDICATE DE
         DC    AL3(&DE)                          DE ADDRESS
         AGO   .CCHID                                              LCS1
.CNTD    DC    A(0)                              DE OR EPLOC ADDRESS
.CCHID   AIF   ('&HIARCHY' EQ '').CCCHID                           LCS1
         AIF   ('&HIARCHY' EQ '0').CCHID0                          LCS1
         AIF   ('&HIARCHY' EQ '1').CCHID1                          LCS1
.CCCHID  DC    AL1(0)             NO HIARCHY                       LCS1
         AGO   .CNTB                                               LCS1
.CCHID0  DC    AL1(1)             HIARCHY=0                        LCS1
         AGO   .CNTB                                               LCS1
.CCHID1  DC    AL1(2)             HIARCHY=1                        LCS1
.CNTB    AIF   ('&DCB' EQ '').CNTE
         AIF   ('&DCB'(1,1) EQ '(').CNTE
         DC    AL3(&DCB)               DCB ADDRESS                 LCS1
         AGO   .CNTF
.CNTE    DC    AL3(0)                  DCB ADDRESS                 LCS1
.CNTF    AIF   ('&ECB' EQ '').CNTG
         AIF   ('&ECB'(1,1) EQ '(').CNTG
         DC    A(&ECB)                           ECB ADDRESS
         AGO   .CNTH
.CNTG    DC    A(0)                              ECB ADDRESS
.CNTH    AIF   ('&GSPV' EQ '').CNTI
         AIF   ('&GSPV'(1,1) EQ '(').CNTJ
         DC    A(&GSPV)                          GSPV VALUE
         AGO   .CNTK
.CNTI    AIF   ('&GSPL' EQ '').CNTJ
         AIF   ('&GSPL'(1,1) EQ '(').CNTJ
         DC    AL1(1)                            SET LIST BIT ON
         DC    AL3(&GSPL)                        GSPL ADDRESS
         AGO   .CNTK
.CNTJ    DC    A(0)                              GSPV VALUE OR GSPL ADR
.CNTK    AIF   ('&SHSPV' EQ '').CNTL
         AIF   ('&SHSPV'(1,1) EQ '(').CNTM
         DC    A(&SHSPV)                         SHSPV VALUE
         AGO   .CNTN
.CNTL    AIF   ('&SHSPL' EQ '').CNTM
         AIF   ('&SHSPL'(1,1) EQ '(').CNTM
         DC    AL1(1)                            SET LIST BIT ON
         DC    AL3(&SHSPL)                       SHSPL ADDRESS
         AGO   .CNTN
.CNTM    DC    A(0)                              SHSPL OR SHSPV
.CNTN    AIF   ('&ROLL'(2,1) EQ 'N').ROLL1                         RORI
&NUMB    SETA  2                            SET R.O. ABILITY BIT   RORI
.ROLL1   AIF   ('&ROLL'(6,1) EQ 'N' OR '&ROLL'(5,1) EQ 'N').DEFLT1 RORI
&NUMB    SETA  &NUMB+1                       SET R.O. INVOKE BIT   RORI
.DEFLT1  DC    AL1(&NUMB)                        SET ROLLOUT BITS  RORI
&NUMB    SETA  0                           REINITIALIZE TO ZERO    RORI
         AIF   ('&ETXR' EQ '').CNTO                                RORI
         AIF   ('&ETXR'(1,1) EQ '(').CNTO
         DC    AL3(&ETXR)                    EXIT ROUT. ADDRESS    RORI
         AGO   .CNTP
.CNTO    DC    AL3(0)                        ETXR ROUT. ADDRESS    RORI
.CNTP    AIF   ('&DPMOD' EQ '').CNTQ
         AIF   ('&DPMOD'(1,1) EQ '(').CNTQ
         AIF   ('&DPMOD'(1,1) EQ '+' OR '&DPMOD'(1,1) EQ '-').SIGNC
         DC    AL2(&DPMOD)                       DPMOD VALUE
         AGO   .CNTR
.SIGNC   DC    AL2(0&DPMOD)                      DPMOD VALUE
         AGO   .CNTR
.CNTQ    DC    AL2(0)                            DPMOD VALUE
.CNTR    AIF   ('&LPMOD' EQ '').CNTS
         AIF   ('&LPMOD'(1,1) EQ '(').CNTS
         DC    AL1(&LPMOD)                       LPMOD VALUE
         AGO   .CNTT
.CNTS    DC    AL1(0)                            LPMOD VALUE
.CNTT    AIF   ('&JSCB' EQ '').CNTT0A                              I270
&NUMB    SETA  (&NUMB+64)              SET JSCB KEY ON             I270
.CNTT0A  AIF   ('&GIVEJPQ' EQ 'NO').CNTT0B                         I270
&NUMB    SETA  (&NUMB+32)              SET GIVEJPQ KEY ON          I270
.CNTT0B  AIF   ('&KEY' EQ 'PROP').CNTT0                            I270
&NUMB    SETA  (&NUMB+16)         SET KEYZERO KEY ON               I270
.CNTT0   AIF   ('&SZERO' EQ 'YES').CNTT1                           I270
&NUMB    SETA  (&NUMB+8)               SET SZERO KEY ON            I270
.CNTT1   AIF   ('&SVAREA' EQ 'YES').CNTT2                          I270
&NUMB    SETA  (&NUMB+4)               SET SVAREA KEY ON           I270
.CNTT2   AIF   ('&JSTCB' NE 'YES').CNTT3                           I270
&NUMB    SETA  (&NUMB+2)               SET JSTCB KEY ON            I270
.CNTT3   AIF   ('&SM' NE 'SUPV').CNTV                              I270
&NUMB    SETA  (&NUMB+1)               SET SM KEY ON               I270
.CNTV    DC    AL1(&NUMB)
         AIF   ('&EP' EQ '').CNTW
         DC    CL8'&EP'                          EP SYMBOL
         AGO   .CNTX                                               I270
.CNTW    DC    CL8' '                                              I270
.CNTX    AIF   ('&JSCB' EQ '').CONTQ6                             20028
         AIF   ('&JSCB'(1,1) EQ '(').CONTQ6                        I270
         AGO   .CNTY                                              20028
.CONTQ6  DC    A(0)               ADDRESS OF JSCB                  I270
.CNTY    AIF   ('&STAI' EQ '').TLICN                              20021
         AIF   ('&STAI(2)' EQ '').CREG2                           20028
         AIF   ('&STAI(2)'(1,1) EQ '(').CREG2                     20028
         DC    AL4(&STAI(2))  STAI PARM LIST ADDR                 20028
         AGO   .CKREG1                                            20028
.CREG2   DC    AL4(0)         STAI PARM LIST ADDR                 20028
.CKREG1  AIF   ('&STAI'(2,1) EQ '(').CREG1                        20028
         DC    AL4(&STAI(1))  STAI EXIT RTN. ADDRESS              20028
         AGO   .TLICNA                                            20021
.CREG1   DC    AL4(0)         STAI EXIT ADDR                      20028
         AGO   .TLICNA
.TLICN   DC    A(0,0)        .NO STAI PARM LIST OR EXIT ADDR.     20021
.TLICNA  AIF   ('&TASKLIB' NE '').TLICNB                          20021
         DC    A(0)          .NO TASKLIB.                         20021
         AGO   .SVC                                               20021
.TLICNB  AIF   ('&TASKLIB'(1,1) EQ '(').TLICNC                    20021
         DC    A(&TASKLIB)   .TASKLIB DCB ADDRESS.                20021
         AGO   .SVC                                               20021
.TLICNC  DC    A(0)          .TASKLIB DCB ADDRESS.                20021
.SVC     SVC   42                                ISSUE ATTACH SVC
         MEXIT                                                    20028
.ERROZ   MNOTE 'PURGE AND/OR ASYNCH PARAMETER INCORRECT'          20021
         AGO   .END                                               20021
.ERROR   MNOTE   'MORE THAN ONE STAI PARM LIST ADDRESS'           20028
.END     MEND
