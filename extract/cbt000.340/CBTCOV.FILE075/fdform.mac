         MACRO
&NAME     FDFORM &SOURCE=,&KIND=,&SELFCHK=,&SINK=,&JUSTIFY=,&MODE=,    X
               &FILL=,&UL=,            FIELD-LEVEL OP'NDS              X
               &WIDTH=,&HMRG=,         LINE-LEVEL OP'NDS               X
               &HEIGHT=,&VMRG=,        PAGE-LEVEL OP'NDS               X
               &MESSAGE=,&HTAB=,&FID=,&PACKING=,&MRGSTOP=,             X
               &DEVICES=,&BUFFERS=,&OBJECT=,&LENGTH=FIXED,&CTRSIZE=
         COPY  IDFGBL
** 3735 MACROS OS LEVEL 5-2   06/11/74
         AIF   (&PIB(46)).TX  SYNTAX CHECK
         AIF   (NOT &PIB(48)).TR
         MNOTE *,'IDF100 IN TRACE MODE ENTERING FDFORM'
.TR      ANOP  ,
.**********************************************************************
.*                                                                    *
.*                  OBJECT FORMAT DETERMINATION                       *
.*                                                                    *
.**********************************************************************
&PIB(1)  SETB  0
         AIF   (&SB(2)).TR1             OBJECT ALREADY ESTABLISHED
&SB(1)   SETB  0   DEFAULT OS FORMAT OBJECT DECK *** OS ***
.TR1     AIF   (T'&OBJECT EQ 'O').TR4
&PIB(1)  SETB  ('&OBJECT' NE 'OS' AND '&OBJECT' NE 'DOS')
         AIF   (NOT &PIB(1)).TR2
         IDFMSG3 582
         AGO   .TR4
.TR2     ANOP
&PIB(1)  SETB  (('&OBJECT' EQ 'OS' AND &SB(1) OR '&OBJECT' EQ          X
               'DOS' AND NOT &SB(1)) AND &SB(2))
         AIF   (NOT &PIB(1)).TR3
         IDFMSG3 582
         AGO   .TR4
.TR3     ANOP
&SB(1)   SETB  ('&OBJECT' EQ 'DOS')
.TR4     ANOP
&SB(2)   SETB  1  INDICATE BEEN THRU THIS RTN
&SC(1)   SETC  'DFJLF'(1+&SB(1)*2,2+&SB(1))
&SA(1)   SETA  2916-1458*&SB(1)
&PIB(1)  SETB  (NOT &PIB(1) AND NOT &PIB(2))
         IDFMSG3 585
.**********************************************************************
.*                                                                    *
.*                           CONTINUATION CHECK                       *
.*                                                                    *
.**********************************************************************
&PIB(1)  SETB  (&PIB(2) AND (&PIA(1) NE 1 OR &PIB(3)))
         AIF   (NOT &PIB(1)).I0001
         IDFMSG 018                    INVALID CONTINUATION
         IDFIN01
         IDFIN02
         IDFIN03
         AIF   (&PIB(3)).CTC
         IDFIN04
         IDFIN05
         AIF   (&PIA(1) NE 4).ENDC
         IDFIN06
         IDFIN07
         IDFIN08
         AGO   .ENDC
.CTC     IDFIN09
         IDFIN10
.ENDC    IDFIN11
.I0001   ANOP ,
         AIF   (&PIB(2)).N0
.**********************************************************************
.*                                                                    *
.*                           PRIOR FORM TERMINATION                   *
.*                                                                    *
.**********************************************************************
&PIB(1)  SETB  (&PIA(2) NE 0)
         AIF   (NOT &PIB(1)).N0
         IDFMSG 014                    PRIOR MACRO NOT FDEND
&PIB(15) SETB  1
&PIA(1)  SETA  0
         IDFIN01
         IDFIN02
         IDFIN03
         IDFIN11
.*********************************************************************
.*                                                                    *
.*                           NAME OPERAND                             *
.*                                                                    *
.*********************************************************************
.N0      ANOP
&M       SETA  11
&PIB(1)  SETB  (&PIB(2) AND '&NAME' NE '')
         AIF   (NOT &PIB(1)).I0003
         IDFMSG1 100                   NAME CODED IN CONTINUATION
.I0003   ANOP ,
         AIF   (&PIB(2)).FID1
&QC(1)   SETC  'IDF&SYSNDX'             PRIME DEFAULT FORM NAME
&PIB(1)  SETB  (K'&NAME GT 8 OR K'&NAME LT 1)  TEST FOR LENGTH ERROR
         AIF   (&PIB(1)).F1             EXIT ON ERROR
&C(1)    SETC  '&NAME'(1,1)             EXTRACT FIRST CHARACTER
&B(1)    SETB  ('&C(1)' GE 'A' AND '&C(1)' LE 'I')
&B(2)    SETB  ('&C(1)' GE 'J' AND '&C(1)' LE 'R')
&B(3)    SETB  ('&C(1)' GE 'S' AND '&C(1)' LE 'Z')
&B(4)    SETB  ('&C(1)' EQ '$' OR '&C(1)' EQ '#' OR '&C(1)' EQ '@')
&PIB(1)  SETB  (NOT (&B(1) OR &B(2) OR &B(3) OR &B(4)))
         AIF   (&PIB(1)).F1             EXIT ON ERROR (NON-ALPHA)
&QC(1)   SETC  '&NAME'                  RETAIN VALIDATED NAME
&PIB(1)  SETB  1
         IDFMSG 001  FORM NAME IS--
&PIB(1)  SETB  0                        FLAG OFF TO SHOW NO ERROR
.F1      IDFMSG 012  FORMNAME INVALID
.*********************************************************************
.*                                                                    *
.*                           INITIALIZATION - PART 1                  *
.*                                                                    *
.*********************************************************************
&PIA(3)  SETA  &PIA(5)-486
&PIA(4)  SETA  0
&PIA(6)  SETA  &PIA(5)+12
&PIA(7)  SETA  &PIA(3)+&PIA(4)
&PIB(15) SETB  0
         IDFASM (,4070)
&PIA(6)  SETA  &PIA(5)+12
&PIB(15) SETB  (&PIB(1))                OFF UNLESS FORM NAME ERROR
&PIB(16) SETB  0                        INDICATE FORM INCOMPLETE
&PIB(19) SETB  ('&LENGTH' EQ 'VARIABLE')                          FSDB
.*********************************************************************
.*                                                                    *
.*                           FID OPERAND                              *
.*                                                                    *
.*********************************************************************
.FID1    ANOP
&M       SETA  25
&N       SETA  0
&PIB(1)  SETB  (&PIB(2) AND N'&FID NE 0)
         AIF   (NOT &PIB(1)).I0006
         IDFMSG1 100                   FID CODED IN CONTINUATION
.I0006   ANOP ,
         AIF   (&PIB(2)).PK1
&PIB(1)  SETB  (N'&FID EQ 0)
         IDFMSG2 202 FID OMITTED
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).FIDX
&PIB(1)  SETB  (K'&FID(1) NE 5)
         AIF   (NOT &PIB(1)).I0007
         IDFMSG2 200                   NOT FIVE CHARACTERS
.I0007   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).FIDX
&PIB(1)  SETB  ('&FID(1)'(1,1).'&FID(1)'(5,1) NE '''''')
         AIF   (NOT &PIB(1)).I0008
         IDFMSG2 200                   NOT FRAMED WITH QUOTES
.I0008   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).FIDX
&PIB(1)  SETB  ('&FID(1)'(2,1) GT '9' OR '&FID(1)'(3,1) GT '9' OR      X
               '&FID(1)'(4,1) GT '9' OR '&FID(1)'(2,1) LT '0')
&PIB(1)  SETB  (&PIB(1) OR '&FID(1)'(3,1) LT '0' OR '&FID(1)'(4,1)     X
               LT '0')
         AIF   (NOT &PIB(1)).I0009
         IDFMSG2 200                   ILLEGAL CHARACTER
.I0009   ANOP ,
&PIB(1)  SETB  ('&FID(1)'(2,3) GT '989')                        A00915
         AIF   (NOT &PIB(1)).I0009A                             A00915
         MNOTE 8,'IDF791 FID GREATER THAN 989'                  A00915
&PIB(15) SETB  1                                                A00915
.I0009A  ANOP  ,                                                A00915
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).FIDX
&C(1)    SETC  '&FID(1)'(2,1)
&A(1)    SETA  &C(1)+48
         IDFASM A
&C(1)    SETC  '&FID(1)'(3,1)
&A(1)    SETA  &C(1)+48
         IDFASM A
&C(1)    SETC  '&FID(1)'(4,1)
&A(1)    SETA  &C(1)+48
         IDFASM A
&C(1)    SETC  '&FID(1)'(2,3)
&N       SETA  1
&PIB(1)  SETB  (N'&FID GT &N)
         AIF   (NOT &PIB(1)).I0010
         IDFMSG1 104                   EXCESS SUBOP'NDS IGNORED
.I0010   ANOP ,
&N       SETA  0
&C(2)    SETC  '&FID'(2,3)
&PIB(1)  SETB  1
         AIF   (NOT &PIB(1)).I0011
         IDFMSG 002                    DISPLAY FID
.I0011   ANOP ,
.FIDX    ANOP  , GENERAL EXIT FROM FID OPERAND
.*********************************************************************
.*                                                                    *
.*                           INITIALIZATION - PART 2                  *
.*                                                                    *
.*********************************************************************
&PIA(6)  SETA  &PIA(5)+8
         IDFASM (,FFFE)    FLAG THIS FDP AS INCOMPLETE
&QC(1)   EQU   * ***TEST FOR DUPLICATE FORM NAMES IN THIS ASSEMBLY ***
&PIA(6)  SETA  &PIA(3)+&PIA(4)
&PIB(13) SETB  ('&MODE' EQ 'LOAD')                                FSJM
         AIF   (NOT &PIB(13)).I0011A                              FSDB
         AIF   (N'&SOURCE EQ 0).I01                               FSJM
&M       SETA  1                                                  FSJM
         IDFMSG1 101                                              FSJM
.I01     AIF   (N'&KIND EQ 0).I02                                 FSJM
&M       SETA  3                                                  FSJM
         IDFMSG1 101                                              FSJM
.I02     AIF   (N'&SELFCHK EQ 0).I03                              FSJM
&M       SETA  2                                                  FSJM
         IDFMSG1 101                                              FSJM
.I03     AIF   (N'&SINK EQ 0).I04                                 FSJM
&M       SETA  4                                                  FSJM
         IDFMSG1 101                                              FSJM
.I04     AIF   (N'&FILL EQ 0).I05                                 FSJM
&M       SETA  5                                                  FSJM
         IDFMSG1 101                                              FSJM
.I05     AIF   (N'&JUSTIFY EQ 0).I06                              FSJM
&M       SETA  6                                                  FSJM
         IDFMSG1 101                                              FSJM
.I06     AIF   (N'&UL EQ 0).I07                                   FSJM
&M       SETA  7                                                  FSJM
         IDFMSG1 101                                              FSJM
.I07     AIF   (N'&WIDTH EQ 0).I08                                FSJM
&M       SETA  8                                                  FSJM
         IDFMSG1 101                                              FSJM
.I08     AIF   (N'&HMRG EQ 0).I09                                 FSJM
&M       SETA  9                                                  FSJM
         IDFMSG1 101                                              FSJM
.I09     AIF   (N'&HEIGHT EQ 0).I10                               FSJM
&M       SETA  14                                                 FSJM
         IDFMSG1 101                                              FSJM
.I10     AIF   (N'&VMRG EQ 0).I11                                 FSJM
&M       SETA  15                                                 FSJM
         IDFMSG1 101                                              FSJM
.I11     AIF   (N'&MRGSTOP EQ 0).I12                              FSJM
&M       SETA  27                                                 FSJM
         IDFMSG1 101                                              FSJM
.I12     AIF   (N'&PACKING EQ 0).I13                              FSJM
&M       SETA  26                                                 FSJM
         IDFMSG1 101                                              FSJM
.I13     AIF   (N'&BUFFERS EQ 0).I0011A                           FSJM
&M       SETA  28                                                 FSJM
         IDFMSG1 101                                              FSJM
.I0011A  AIF   (N'&MODE EQ 0 OR '&MODE' EQ 'NONLOAD').PK1         FSDB
         AIF   (&PIB(13)).I0011B                                  FSDB
         MNOTE 8,'IDF777 MODE OPERAND INVALID'                    FSDB
&PIB(15) SETB  1                                                  FSDB
         AGO   .PK1                                               FSJM
.I0011B  MNOTE *,'IDF154 &QC(1) IS A FILE LOAD FDP'               FSDB
.*********************************************************************
.*                                                                    *
.*                           PACKING OPERAND                          *
.*                                                                    *
.*********************************************************************
.PK1     ANOP  ,
&M       SETA  26
&N       SETA  0
&PIB(30) SETB  1 START SEGMENT                                    FSJM
&PIB(31) SETB  1 START PATH                                       FSJM
&PIB(4)  SETB  1 SET NORMAL MODE                                  FSJM
&B(1)    SETB  0                                                  FSJM
&B(2)    SETB  0                                                  FSJM
         AIF   (&PIB(13)).I0013A                                  FSJM
&PIB(1)  SETB  (&PIB(2) AND N'&PACKING NE 0)
         AIF   (NOT &PIB(1)).I0012
         IDFMSG1 100                   PACKING CODED IN CONTINUATION
.I0012   ANOP ,
         AIF   (&PIB(2)).MRGS1
&B(1)    SETB  ('&PACKING' EQ 'DELIMIT')
&B(2)    SETB  ('&PACKING' EQ 'YES')
&PIB(1)  SETB  (NOT ('&PACKING' EQ 'NO' OR '&PACKING' EQ '' OR &B(1)   X
               OR &B(2)))
         AIF   (NOT &PIB(1)).I0013
         IDFMSG2 200                   NOT YES, NO, DELIMIT, OR OMIT
.I0013   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
.I0013A  ANOP  ,                                                  FSJM
&PIB(17) SETB  (&B(1))                  REMEMBER PACKING=DELIMIT
&PIB(18) SETB  (&B(2))                  REMEMBER PACKING=YES
&A(1)    SETA  64*&B(1)+32*&B(2)
         IDFASM A
         AIF   (&PIB(13)).I0014A                                  FSJM
&N       SETA  1
&PIB(1)  SETB  (N'&PACKING GT &N)
         AIF   (NOT &PIB(1)).I0014
         IDFMSG 104
.I0014   ANOP ,
&N       SETA  0
&PIB(1)  SETB  1                        FORCE PACKING MESSAGE
         IDFMSG1 129  PACKING OPTION IS--
.I0014A  IDFASM (,4070)                                           FSJM
         IDFASM (,4070)
         IDFASM (,4070)
         IDFASM (,4070)
.*********************************************************************
.*                                                                    *
.*                           MRGSTOP OPERAND                          *
.*                                                                    *
.*********************************************************************
.MRGS1   ANOP
&M       SETA  27
&N       SETA  0
&PIB(1)  SETB  (&PIB(2) AND N'&MRGSTOP NE 0)
         AIF   (NOT &PIB(1)).I0015
         IDFMSG1 100                   MRGSTOP CODED IN CONT'N
.I0015   ANOP ,
         AIF   (&PIB(2)).MRGSX
&DFA(2)  SETA  1
&DFA(7)  SETA  1
         AIF   (&PIB(13)).MRGSX                                   FSJM
         AIF   (N'&MRGSTOP EQ 0).MRGS3
&PIB(1)  SETB  (T'&MRGSTOP(1) NE 'N' OR '&MRGSTOP(1)'(1,1) EQ 'C')
         AIF   (NOT &PIB(1)).I0016
         IDFMSG2 200                   CODED BUT NOT SELF-DEFINING
.I0016   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).MRGS2
&A(5)    SETA  0
&A(6)    SETA  129
&PIB(1)  SETB  (&MRGSTOP(1) LT &A(5) OR &MRGSTOP(1) GT &A(6))
         AIF   (NOT &PIB(1)).I0017
         IDFMSG2 201
.I0017   ANOP ,
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).MRGS2
&DFA(2)  SETA  &MRGSTOP(1)+1
&DFA(7)  SETA  &DFA(2)
.MRGS2   ANOP
&N       SETA  1
&PIB(1)  SETB  (N'&MRGSTOP GT &N)
         AIF   (NOT &PIB(1)).I0018
         IDFMSG1 104                   MORE THAN ONE SUBOPERAND
.I0018   ANOP ,
.MRGS3   ANOP
&N       SETA  0
&MB(8)   SETB  1                        FLAG TO SUPPRESS STATUS HEADING
&PIB(1)  SETB  1                        FORCE MESSAGE TO PRINT
         IDFMSG1 120  MRGSTOP IS N
.MRGSX   ANOP  , GENERAL EXIT FROM MRGSTOP OPERAND
.**********************************************************************
.*                                                                    *
.*                       DEVICES OPERAND                              *
.*                                                                    *
.**********************************************************************
&M       SETA  28                       SET CODE NUMBER FOR DEVICES
&PIB(1)  SETB  (&PIB(2) AND N'&DEVICES NE 0)
         IDFMSG1 100                    DEVICES CODED IN CONTINUATION
         AIF   (&PIB(2)).DVX            EXIT ON CONTINUATION
&N       SETA  1                        POINT TO FIRST SUBOPERAND
&PIB(23) SETB  0                        CLEAR BASIC K-FLAG
         AIF   (N'&DEVICES EQ 0).DVX    EXIT ON NOTHING CODED
&PIB(1)  SETB  ('&DEVICES(&N)' NE '3735' AND T'&DEVICES(&N) NE 'O')
         IDFMSG3 517
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).DVX            EXIT ON ERROR
&N       SETA  2                        POINT TO SECOND SUBOPERAND
&PIB(23) SETB  ('&DEVICES(&N)' EQ 'K' OR '&DEVICES(&N)' EQ 'KD')
&PIB(1)  SETB  (NOT (&PIB(23) OR T'&DEVICES(&N) EQ 'O'))
         IDFMSG3 517
&PIB(15) SETB  (&PIB(15) OR &PIB(1))    ACCUMULATE ERROR
         AIF   (&PIB(1)).DVX            EXIT ON ERROR
&PIB(22) SETB  ('&DEVICES(&N)' EQ 'K')  NON-DESPLAY OPTION FLAG
&PIB(1)  SETB  (N'&DEVICES GT 2)        MAX 2 SUBOPS (FOR NOW)
         IDFMSG1 104
.DVX     ANOP  , GENERAL EXIT FROM DEVICES OPERAND
.**********************************************************************
.*                                                                    *
.*                           BUFFERS OPERAND                          *
.*                                                                    *
.**********************************************************************
&M       SETA  29                       SET CODE NUMBER FOR BUFFERS
&N       SETA  1                        POINT TO FIRST SUBOPERAND
         AIF   (&PIB(13)).BFX                                     FSJM
&PIB(1)  SETB  (&PIB(2) AND N'&BUFFERS NE 0)
         AIF   (NOT &PIB(1)).I0019
         IDFMSG1 100                    BUFFERS CODED IN CONTINUATION
.I0019   ANOP ,
         AIF   (&PIB(2)).BFX
&PIB(24) SETB  0
&B(1)    SETB  0
&A(1)    SETA  132                      DEFAULT LPB LIMIT
         AIF   (N'&BUFFERS EQ 0).BF5
.BF0     AIF   (T'&BUFFERS(&N) EQ 'O').BF4
&B(1)    SETB  ('&BUFFERS(&N)' EQ 'RPB')
         AIF   (&B(1)).BF4              EXIT IF RPB FOUND
         AIF   ('&BUFFERS(&N)' NE 'LPB').BF1
         AIF   (T'&BUFFERS(&N+1) EQ 'O' OR '&BUFFERS(&N+1)' EQ         *
               'RPB').BF4
         AIF   (T'&BUFFERS(&N+1) NE 'N').BF3  LPB NOT FOLLOWED BY N
&N       SETA  &N+1                     POINT TO SELFDEFINE
         AIF   ('&BUFFERS(&N)'(1,1) EQ 'C').BF3  MUST NOT BE CHAR
&A(1)    SETA  &BUFFERS(&N)             CONVERT TO ARITH
         AGO   .BF2                     GO TEST RANGE
.BF1     AIF   (K'&BUFFERS(&N) LT 5).BF3
         AIF   ('&BUFFERS(&N)' EQ '(LPB)').BF4
         AIF   (K'&BUFFERS(&N) LT 6).BF3
         AIF   ('&BUFFERS(&N)' EQ '(LPB,)').BF4
         AIF   ('&BUFFERS(&N)'(1,5) NE '(LPB,').BF3
&I       SETA  6                        POINT TO PRESUMED FIRST DIGIT
&C(1)    SETC  '0000000'                INITIALIZE DIGIT COLLECTOR
&C(2)    SETC  '&BUFFERS(&N)'(&I,1)     GET FIRST CHARACTER
.BFL     ANOP  , HEAD OF LPB DIGIT LOOP
&PIB(1)  SETB  ('&C(2)' LT '0' OR '&C(2)' GT '9')
         AIF   (NOT &PIB(1)).I0021
         IDFMSG3 517  FORMAT INVALID
.I0021   ANOP
&PIB(15) SETB  (&PIB(15) OR &PIB(1))
         AIF   (&PIB(1)).BF4
&C(1)    SETC  '&C(1)'(2,6).'&C(2)'
&I       SETA  &I+1
&C(2)    SETC  '&BUFFERS(&N)'(&I,1)
         AIF   ('&C(2)'NE ')' AND '&C(1)'(1,1) EQ '0').BFL
&A(1)    SETA  &C(1)
.BF2     ANOP  , LPB RANGE TEST
&A(5)    SETA  132
&A(6)    SETA  236
&PIB(1)  SETB  (&A(1) NE 120 AND &A(1) NE 126 AND (&A(1) LT &A(5) OR   *
               &A(1) GT &A(6)))
         AIF   (NOT &PIB(1)).BF4
         IDFMSG3 518  NOT ALLOWED VALUE OR RANGE
&A(1)    SETA  132                      DEFAULT VALUE
&PIB(15) SETB  1
         AGO   .BF4
.BF3     ANOP  , FORMAT INVALID
&PIB(1)  SETB  1
         IDFMSG3 517  INVALID FORMAT
&PIB(15) SETB  1
.BF4     ANOP
&PIB(24) SETB  (&PIB(24) OR &B(1))
&N       SETA  &N+1
         AIF   (&N LE N'&BUFFERS).BF0
.BF5     ANOP
&BUFA(12) SETA &A(1)
&PIB(1)  SETB  (&PIB(24))
         IDFMSG 049
&PIB(1)  SETB  (&BUFA(12) NE 132)
         IDFMSG 048
.BFX     ANOP  , GENERAL EXIT FROM BUFFERS OPERAND PROCESSOR
.**********************************************************************
.*                                                                    *
.*                        CTRSIZE OPERAND                             *
.*                                                                    *
.**********************************************************************
&PIB(1)  SETB  (&PIB(2) AND N'&CTRSIZE NE 0)
         AIF   (NOT &PIB(1)).I0022
         MNOTE 0,'IDF409 CHAINING IN EFFECT, CTRSIZE IGNORED'
.I0022   AIF   (&PIB(2)).CTSX
&PIA(9)  SETA  10        SET DEFAULT COUNTER SIZE
         AIF   (T'&CTRSIZE EQ 'O' OR '&CTRSIZE' EQ '10').I0024
         AIF   ('&CTRSIZE' EQ '20').I0023
         MNOTE 0,'IDF478 INVALID COUNTER SIZE &CTRSIZE , DEFAULT USED'
         AGO   .I0024
.I0023   ANOP
&PIA(9)  SETA  &CTRSIZE
.I0024   MNOTE *,'IDF156 COUNTER SIZE IS &PIA(9) POSITIONS'
.CTSX    ANOP  , GENERAL EXIT FROM CTRSIZE OPERAND
&PIB(1)  SETB  1
&PIA(1)  SETA  1
         IDFIN01 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
         AIF   (&PIB(13)).TX1                                     FSJM
         IDFIN02 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
         IDFIN03 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
         IDFIN04 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
         IDFIN05 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
.TX1     IDFIN11 &SOURCE,&SELFCHK,&KIND,&SINK,&FILL,&JUSTIFY,&UL,      X
               &WIDTH,&HMRG,,,,,&HEIGHT,&VMRG,,,,,,,,&MESSAGE,&HTAB
         AIF   (NOT &PIB(48)).TX
         MNOTE *,'IDF100 IN TRACE MODE LEAVING FDFORM'
.TX      ANOP
         MEND
