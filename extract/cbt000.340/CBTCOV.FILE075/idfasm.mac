         MACRO
         IDFASM
         COPY  IDFGBL                   GLOBAL BOOK
         AIF   (NOT &PIB(48)).ASM0  TRACE OFF?
         MNOTE *,'IDF100 IN TRACE MODE ENTERING IDFASM'
.ASM0    ANOP
.* NOT ENDING A SECTOR AND NO ORGS TO PERFORM, BRANCH
.ASM1    AIF   (&PIA(6) EQ &PIA(7)).ASM8
.* NO BACKWARD OR FORWARD ORG REQUIRED, BRANCH
         AIF   (&PIA(6) GE &PIA(7) AND &PIA(7) EQ &PIA(3)+&PIA(4)).ASM5
         AIF   (&PIA(6) LT &PIA(3)+&PIA(4)).ASM3 BACKWARD ORG NEEDED
.* FORWARD ORG ROUTINE
.* SET NUMBER OF BYTES ASSEMBLED IN HIGHEST CSECT
&L       SETA  &PIA(3)/486*486-&PIA(3)/&SA(1)*&SA(1)+&PIA(4)
&S       SETA  &PIA(3)/&SA(1)+1000 HIGHEST CSECT THIS ASSEMBLY
.* IF ORG WILL BE OUTSIDE THIS CSECT GEN PROPER CSECT
         AIF   (&PIB(15)).ASM2
         AIF   (&PIA(3)/&SA(1) EQ &PIA(7)/&SA(1)).ASM2
I&SC(1)&S CSECT
.ASM2    ANOP
&PIA(7)  SETA  &PIA(3)+&PIA(4) BRING LOC CTR TO HIGHEST BYTE ASMBLD
         AIF   (&PIB(15)).ASM1
         ORG   I&SC(1)&S+&L ORG TO ASM NEXT BYTE AT HIGHEST LOCATION
         AGO   .ASM1     GO ASM
.ASM3    ANOP            BACKWARD ORG ROUTINE
&S       SETA  &PIA(6)/&SA(1)+1000 CSECT THAT ORG IS TO
.*           BYTE POS IN CSECT WHERE ORG WILL GO
&L       SETA  &PIA(6)-&PIA(6)/&SA(1)*&SA(1)
.* IF ORG WILL BE OUTSIDE THIS CSECT, GEN PROPER CSECT
         AIF   (&PIB(15)).ASM4
         AIF   (&PIA(6)/&SA(1) EQ &PIA(7)/&SA(1)).ASM4
I&SC(1)&S CSECT
.ASM4    ANOP
&PIA(7)  SETA  &PIA(6) BRING LOC CTR BACK TO LOC OF DESIRED ASM
         AIF   (&PIB(15)).ASM8
         ORG   I&SC(1)&S+&L ORG TO DESIRED LOCATION TO ASM NEXT BYTE
         AGO   .ASM8     GO ASM
.ASM5    ANOP
&PIA(3)  SETA  &PIA(3)+486 BUMP SECTOR COUNT BY 1
&S       SETA  &PIA(3)/&SA(1)+1000 CALC NEXT CSECT NUMBER
         AIF   (&PIA(3)+&PIA(4) LE 0 OR &PIB(15)).ASM6  1ST CSECT
         AIF   (&PIA(3) EQ &PIA(5)).ASM5A
         DC    3H'0'         SECTOR FLAGS
.*    GEN NEXT SEQUENTIAL CSECT IF NEEDED, BRANCH IF NOT
.ASM5A   ANOP
         AIF   ((&PIA(3)-486)/&SA(1) EQ &PIA(3)/&SA(1)).ASM7
         DC    (2+&SB(1))H'0'  CSECT FLAGS
I&SC(1)&S CSECT
         AGO   .ASM7
.ASM6    AIF   (&PIB(15)).ASM6A
I&SC(1)&S START 0
.ASM7    DC    CL8'&QC(1)' SECTOR HEADER - FORMNAME
&L       SETA  (&PIA(3)-&PIA(5))/486 FDP RELATIVE SECTOR NUMBER
         DC    H'&L'                        SECTOR NUMBER
         DC    X'4070'                      RESERVED SECTOR CHAIN
.* ORG OUT AND BACK TO GIVE VALID LENGTH IF ABNORMAL TERM OCCURS
         ORG   *+478+&SB(1)*2    SET VALID SECTOR
         ORG   *-478-&SB(1)*2    6ENGTH ATTRIBUTE
.ASM6A   ANOP
&PIA(4)  SETA  12   POINT AFTER HEADER
&PIA(7)  SETA  &PIA(3)+&PIA(4) LOC CTR TO NEXT LOC FOR ASM
.ASM8    AIF   (N'&SYSLIST EQ 0).ASM13
         AIF   (&PIB(15)).ASM11
         AIF   ('&SYSLIST(1)' NE 'A').ASM9  NOT ARITH CALL
.* CONVERT ARITHMETIC TO HEX MN AND PLUG INTO HEX 4M7N
&L       SETA  &A(1)/16*240+&A(1)+X'4070'
         DC    H'&L'                        GENERATED ARITHMETIC
         AGO   .ASM11    ADVANCE CTRS
.ASM9    AIF   ('&SYSLIST(1)' NE 'C').ASM10 NOT CHAR CALL
         DC    X'4&C(1)7&C(2)'              GENERATED CHARACTER
         AGO   .ASM11    ADVANCE CTRS
.ASM10   AIF   (T'&SYSLIST(1,2) EQ 'O').ASM12 NOT CONSTANT CALL
         DC    X'&SYSLIST(1,2)'             GENERATED CONSTANT
.ASM11   ANOP
.* BUMP DESIRED ASM LOC PTR BY 2 PLUS CARRY IF TO NEXT SECTOR
&PIA(7)  SETA  &PIA(6)+2
&PIA(6)  SETA  (&PIA(6)-&PIA(6)/486*486)/478*18+&PIA(6)+2
.* IF NOT ASSEMBLING AT END, DON'T BUMP HIGHEST BYTE CTR
         AIF   (&PIA(7) LE &PIA(3)+&PIA(4)).ASM13
&PIA(4)  SETA  &PIA(4)+2
         AGO   .ASM13
.ASM12   MNOTE 8,'IDF999 FDM SYSTEM ERROR'
         MNOTE 0,'       INVALID CALL OF INNER MACRO IJLFASM'
         MNOTE 0,'       CALL PARAMETER=&SYSLIST(1)'
&PIB(15) SETB  1
.ASM13   AIF   (NOT &PIB(48)).TX
         MNOTE *,'IDF100 IN TRACE MODE LEAVING IDFASM'
.TX      ANOP
         MEND
