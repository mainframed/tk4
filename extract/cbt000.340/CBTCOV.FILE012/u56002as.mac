         TITLE 'GENERATION DATA GROUP COPY ROUTINE'
***********************************************************************
*                                                                     *
*            THIS PROGRAM IS DESIGNED TO READ A SET OF CONCATENATED   *
*        DATA SETS AND REWRITE THEM OUT TO ONE SINGLE FILE. THE       *
*        RECORDS CAN BE ANY TYPE AND ANY LENGTH.                      *
*            FOR THE MOMENT, UNFORTUNATLEY, ALL ENTRIES IN THE        *
*        CONCATENATED LIST MUST BE CATALOGED DATA SETS.               *
*              THE CONCATENATED DATA SETS ARE READ STARTING WITH      *
*        THE LAST AND PROGRESSING UP TO THE FIRST IN THE CONCAT-      *
*        ENATION. THE IDEA IS THAT IF AN UNQUALIFIED NAME OF A GDG IS *
*        CODED IN JCL, ALL THE GENERATIONS ARE CONCATENATED BUT IN    *
*        THE WRONG ORDER (YOUNGEST FIRST). THIS ROUTINE WILL ALLOW    *
*        ALL THE GENERATIONS TO BE RETRIEVED BUT IN THE CORRECT       *
*        ORDER.                                                       *
*                                                                     *
*            THE PROGRAM OPERATES BY SCANNING THE TIOT FOR THE        *
*        ADDRESSES OF ALL THE JFCBS CONCATENATED AS SYSUT1. EACH      *
*        JFCB IS TAKEN IN REVERSE ORDER AND THE DATA SET NAME         *
*        MOVED TO A PREFORMATTED JCL CARD. THIS DD CARD IS THEN       *
*        ALLOCATED USING DYNAMIC ALLOCATION AND THE FILE READ. ALL    *
*        THE RECORDS FROM EACH FILE ARE,IN THIS WAY, COPIED TO THE    *
*        OUTPUT FILE.                                                 *
*              THE PROGRAM WILL ALSO MAINTAIN A COUNT OF ALL THE      *
*        RECORDS IT READS AND THE TOTAL NUMBER OF RECORDS WHICH ARE   *
*        WRITTEN. THESE DETAILS, ALONG WITH THE NAMES OF THE INPUT    *
*        DATA SETS WILL BE WRITTEN TO THE SYSPRINT DATA SET IF IT IS  *
*        PRESENT IN THE JCL.                                          *
*            JCL PARM OPERANDS ARE AVAILABLE TO CONTROL THE           *
*        NUMBER OF GENERATIONS TO BE PROCESSED. FORMAT IS             *
*                                                                     *
*                PARM='MAX=999'                                       *
*                                                                     *
*        WHERE 999 IS REPLACED BY A 1-3 DIGIT NUMBER SPECIFYING       *
*        WHAT IS THE MAXIMUM NUBER OF GENERATIONS TO BE RETRIEVED,    *
*        UP TO AND INCLUDING THE YOUNGEST, REGARDLESS OF HOW MANY     *
*        MAY ACTUALLY EXIST IN REALITY. IF THIS PARM FIELD IS         *
*        OMMITTED, A DEFAULT OF 256 IS ASSUMED.                       *
*            IF AN INVALID PARM FIELD IS CODED, THE PROGRAM WILL      *
*        ISSUE A WRITE TO PROGRAMMER SAYING SO AND WILL THEN          *
*        TERMINATE WITH A RETURN CODE OF 20 (DECIMAL).                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*        REGISTER USAGE:                                              *
*                                                                     *
*        REG0  WORK AND PARAMETER REGISTER                            *
*        REG1  WORK AND PARAMETER REGISTER                            *
*        REG2  WORK REGISTER                                          *
*        REG3  WORK REGISTER                                          *
*        REG4  COUNT OF RECORDS READ FOR THIS FILE                    *
*        REG5  COUNT OF TOTAL RECORDS WRITTEN                         *
*        REG6  LENGTH OF AN ENTRY IN PARM TABLE                       *
*        REG7  ADDRESS OF END OF PARM TABLE - 1                       *
*        REG8  COUNT OF MAXIMUM NUMBER OF GENERATIONS TO PROCESS      *
*        REG9  ADDRESS OF DCB FOR IHADCB DSECT                        *
*        REG10 ADDRESS OF TEMPORARY IO BUFFER                         *
*        REG11 LINK REGISTER BETWEEN ROUTINES                         *
*        REG12 BASE ADDRESS REGISTER                                  *
*        REG13 ADDRESS OF PROGRAM REGISTER SAVE AREA                  *
*        REG14 PROGRAM LINK REGISTER AND WORK REGISTER                *
*        REG15 PROGRAM LINK REGISTER AND WORK REGISTER                *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
GDGCOPY  ZCSECT
UT516    EQU   GDGCOPY
         ENTRY UT516
         USING IHADCB,REG9         ADDRESSABILITY FOR DCB DSECT
         USING PRTAREA,REG1        ADDRESSABILITY FOR PRINT LINES
         XR    REG5,REG5           CLEAR THE OUTPUT RECORD COUNT
         LA    REG8,256            LOAD DEFAULT MAXIMUM NO GENERATIONS
         EJECT
***********************************************************************
*        TEST FOR A PARM FIELD AND PROCESS IT                         *
***********************************************************************
         SPACE 2
PARMTEST DS    0H
         L     REG1,0(REG1)        LOAD ADDRESS OF PARM LENGTH FIELD
         LH    REG2,0(REG1)        LOAD LENGTH OF PARM FIELD
         LTR   REG2,REG2           ANYTHING THERE ?
         BZ    NOPARM              NO. BYPASS PARM PROCESSING
         PRINT NOGEN
         SCAN  DATA=2(REG1),LENGTH=(REG2),DELIM=(',','='),RETAREA=SCAN
         PRINT GEN
         L     REG2,SCAN           LOAD ADDRESS OF FIRST PART
         LTR   REG2,REG2           NOTHING BUT DELIMITERS ?
         BZ    BADPARM             YES. BETTER TELL HIM ABOUT IT
PARMLOOP XR    REG15,REG15         CLEAR WORK REGISTER
         IC    REG15,4(REG2)       LOAD LENGTH OF KEYWORD
         L     REG14,4(REG2)       LOAD ADDRESS OF KEYWORD
         BAL   REG11,TESTKEY       GO CHECK VALIDITY
         BALR  REG11,REG1          GO PROCESS THE KEYWORD
         L     REG2,0(REG2)        LOAD ADDRESS OF NEXT ENTRY
         LTR   REG2,REG2           TEST FOR MORE DATA IN PARM FIELD
         BNZ   PARMLOOP            MORE. SO GO PROCESS IT.
NOPARM   EQU   *
         EJECT
***********************************************************************
*        INITIALISE THE SYSPRINT DATA SET                             *
***********************************************************************
         SPACE 2
INITPRT  DS    0H
         OPEN  (SYSPRINT,OUTPUT)   OPEN THE PRINT DATA SET
         LA    REG9,SYSPRINT       LOAD ADDRESS OF THE DCB
         TM    DCBOFLGS,DCBOFOPN   DATA SET IS OPENED OK ?
         BZ    OPENFAIL            NO. FORGET ABOUT THE REPORT THEN
         PUT   SYSPRINT            OBTAIN A BUFFER
         XC    PRTAREA,PRTAREA     CLEAR THE BUFFER
         MVI   PRTASA,C'1'         ARRANGE FOR A NEW PAGE
         MVC   PRTTITLE,TITLE      PREPARE THE TITLE LINE
         PUT   SYSPRINT            OBTAIN NEXT BUFFER
         XC    PRTAREA,PRTAREA     CLEAR THE BUFFER
         MVI   PRTASA,C'0'         ARRANGE A COUPLE OF BLANK LINES
OPENFAIL B     SCANTIOT            BRANCH TO NEXT ROUTINE
         EJECT
***********************************************************************
*        LOCATE THE TIOT ENTRIES AND SAVE JFCB ADDRESSES              *
***********************************************************************
         SPACE 2
SCANTIOT DS    0H
         XC    CHAIN,CHAIN         INITIALISE THE CHAIN ADDRESS PTR
         LA    REG2,INPUTDD        LOAD ADDRESS OF INPUT DDNAME FIELD
DDLOOP   DDNAME LAST=ENDTIOT       LOCATE EACH ENTRY IN TURN
         CLC   0(8,REG1),0(REG2)   IS THIS THE SPECIFIED DD NAME ?
BNEINST  BNE   DDLOOP              NO. FETCH THE NEXT ENTRY
         MVC   BNEINST+2(2),=S(ENDTIOT) RESET BRANCH TO ENDTIOT LABEL
         LA    REG2,CONCATDD       LOAD ADDRESS OF CONCATENATED DD NAME
         ICM   REG3,7,8(REG1)      LOAD ADDRESS OF JFCB PREFIX
         LA    REG3,16(REG3)       LOAD ADDRESS OF JFCB PROPER
         GETMAIN R,LV=8,SP=1       GETMAIN AN AREA TO SAVE ADDRESS
         MVC   0(4,REG1),CHAIN     SET CHAIN ADDRESS IN PUSH-DOWN Q
         ST    REG1,CHAIN          RESET TOP ADDRESS OF STACK
         ST    REG3,4(REG1)        PUT JFCB ADDRESS IN AREA GETMAINED
         BCT   REG8,DDLOOP         FETCH NEXT ENTRY IF NECCESSARY
*                                  THE ABOVE BRANCH WILL FAIL ONCE THE
*                                  MAXIMUM NO OF GENERATIONS SPECIFIED
*                                  IN THE JCL IS EXCEEDED. A DEFAULT
*                                  OF 256 IS ASSUMED IF PARM OMMITTED.
ENDTIOT  EQU *
         EJECT
***********************************************************************
*        ALLOCATE AND OPEN EACH DATA SET IN TURN                      *
***********************************************************************
         SPACE 2
ALLOC    DS    0H
         L     REG2,CHAIN          LOAD ADDRESS OF FIRST/NEXT ENTRY
         LTR   REG2,REG2           NO MORE ENTRIES ?
         BZ    CHAINEND            TERMINATE PROCESSING
         MVC   CHAIN,0(REG2)       RESET TOP OF CHAIN POINTER
         L     REG3,4(REG2)        LOAD ADDRESS OF JFCB
         LTR   REG3,REG3           JFCB ADDRESS IS PRESENT ?
         BZ    ALLOC               NO. GO LOCATE NEXT ENTRY IN CHAIN
         MVC   DSNAME,0(REG3)      MOVE DATA SET NAME TO JCL
         LINK  EP=UT501,PARAM=(JCLCARD,FUNCTION,RETCODE,A1,A2),VL=1
         OPEN  (INPUT,INPUT)       OPEN THE ALLOCATED FILE
         LA    REG9,OUTPUT         LOAD ADDRESS OF OUTPUT DCB
         TM    DCBOFLGS,DCBOFOPN   OUTPUT FILE IS OPEN ALREADY ?
         BO    NOOPEN              YES. LEAVE IT ALONE
         OPEN  (OUTPUT,OUTPUT)     OPEN THE OUTPUT FILE
NOOPEN   BAL   REG11,COPY          GO COPY FILES ACROSS
         CLOSE (INPUT)             CLOSE THIS INPUT FILE
         BAL   REG11,DOREPORT      GO PRINT FILE TOTALS
         FREEPOOL INPUT            RELEASE THE BUFFER POOL
         LINK  EP=UT501,PARAM=(JCLCARD,FUNCTIO2,RETCODE,A1,A2),VL=1
         B     ALLOC               GO PROCESS NEXT ENTRY
CHAINEND EQU   *
         EJECT
***********************************************************************
*        TERMINATION PROCESSING                                       *
***********************************************************************
         SPACE 2
         BAL   REG11,DOFINAL       PREPARE FINAL LINE OF REPORT
         LA    REG9,OUTPUT         LOAD ADDRESS OF OUTPUT DCB
         TM    DCBOFLGS,DCBOFOPN   OUTPUT FILE IS OPEN ?
         BZ    NOCLOSE             NO. LEAVE IT ALONE
         CLOSE (OUTPUT)            CLOSE OUTPUT FILE
         FREEPOOL OUTPUT           FREE UP THE BUFFER POOL
NOCLOSE  FREEMAIN R,SP=1           FREE UP CHAIN BUILT EARLIER
         ZRETURN RC=0
         EJECT
***********************************************************************
*        ERROR ROUTINES                                               *
***********************************************************************
         SPACE 2
BADPARM  DS    0H
         WTO   '**** UT516/GDGCOPY ****  SORRY. BUT YOUR PARM FIELD IS X
               INVALID AND PROCESSING IS TERMINATED',ROUTCDE=11
         ZRETURN RC=20
         EJECT
***********************************************************************
*        COPY ROUTINE. THIS IS ALL IN MOVE MODE TO CATER FOR VBS      *
***********************************************************************
         SPACE 2
COPY     DS    0H
         XR    REG4,REG4           CLEAR RECORD COUNT REGISTER
         LA    REG9,INPUT          LOAD ADDRESS OF INPUT DCB
         LH    REG2,DCBLRECL       LOAD INPUT RECORD LENGTH
         GETMAIN R,LV=(2),SP=1     GETMAIN A TEMPORARY BUFFER
         LR    REG10,REG1          SAVE ADDRESS OF AREA GETMAINED
IOLOOP   GET   INPUT,(10)          READ IN A RECORD
         LA    REG4,1(REG4)        INCREMENT INPUT RECORD COUNT
         PUT   OUTPUT,(10)         WRITE OUT A RECORD
         LA    REG5,1(REG5)        INCREMENT OUTPUT RECORD COUNT
         B     IOLOOP              EASY AS PIE ISN'T IT ?
EODAD    FREEMAIN R,LV=(2),A=(10),SP=1
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        PRINT ROUTINE FOR DATA SET NAME AND RECORD COUNT             *
***********************************************************************
         SPACE 2
DOREPORT DS    0H
         LA    REG9,SYSPRINT       LOAD ADDRESS OF THE DCB
         TM    DCBOFLGS,DCBOFOPN   SYSPRINT FILE IS OPEN ?
         BZ    0(REG11)            NO. LETS FORGET THIS IDEA THEN
         PUT   SYSPRINT            OBTAIN A BUFFER
         XC    PRTAREA,PRTAREA     CLEAR THE BUFFER
         MVI   PRTASA,C' '         MOVE IN ASA SINGLE SPACE
         MVC   PRTDSNAM,DSNAME     MOVE DATA SET NAME TO PRINT
         MVC   PRTSPACR,SPACER     MOVE IN SOME DRIVEL
         CVD   REG4,DBLWORD        CONVERT RECORD COUNT TO DECIMAL
         MVC   PRTNUMBR,MASK       MOVE EDIT MASK TO PRINT
         ED    PRTNUMBR,DBLWORD    EDIT RECORD COUNT TO PRINT
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        PREPARE THE FINAL LINE OF FILE REPORT                        *
***********************************************************************
         SPACE 2
DOFINAL  DS    0H
         LA    REG9,SYSPRINT       LOAD ADDRESS OF DCB
         TM    DCBOFLGS,DCBOFOPN   IS THIS FILE OPEN ANYWAY ?
         BZ    0(REG11)            NO. LETS GET OUT OF HERE
         PUT   SYSPRINT            OBTAIN A BUFFER
         XC    PRTAREA,PRTAREA     CLEAR THE BUFFER
         MVI   PRTASA,C'0'         DOUBLE SPACE FOR EFFECT
         PUT   SYSPRINT            OBTAIN NEXT BUFFER
         XC    PRTAREA,PRTAREA     CLEAR IT AGAIN
         MVI   PRTASA,C' '         SET SINGLE SPACE
         MVC   PRTTITLE,FINALTIT   SET UP FINAL TIT(LE)
         CVD   REG5,DBLWORD        CONVERT TOTAL OUTPUT RECORD COUNT
         MVC   PRTNUMBR,MASK       MOVE EDIT MASK TO PRINT
         ED    PRTNUMBR,DBLWORD    EDIT COUNT TO OUTPUT
         CLOSE (SYSPRINT)          CLOSE TO WRITE LAST BUFFER
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        CHECH THE VALIDITY OF KEYWORDS IN THE PARM FIELD             *
***********************************************************************
         SPACE 2
TESTKEY  DS    0H
         LA    REG0,WORKKEY        START ADDRESS OF KEYWORD WORK AREA
         LA    REG1,L'WORKKEY      LENGTH OF WORK AREA
         ICM   REG15,8,=C' '       LOAD PADDING CHARACTER FOR MOVE
         MVCL  REG0,REG14          MOVE PADDED KEY WORD TO WORK AREA
         LA    REG1,PARMTABL       LOAD START ADDRESS OF KEYWORD TABLE
         LA    REG6,PARMLEN        LENGTH OF A PARMTAB ENTRY
         LA    REG7,PARMEND-1      END ADDRESS FOR BXLE LOOP
KEYLOOP  CLC   WORKKEY,0(REG1)     VALID KEYWORD FOUND ?
         BE    GOTAKEY             YES. GO LOAD ADDRESS OF PROCESSOR
         BXLE  REG1,REG6,KEYLOOP   NO.  TRY NEXT ENTRY IN TABLE
         B     BADPARM             TROUBLE. KEYWORD NOT FOUND
GOTAKEY  L     REG1,L'KEYNAME(REG1) LOAD ADDRESS OF PROCESSOR
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        PROCESSOR FOR 'MAX' PARM KEYWORD                             *
***********************************************************************
         SPACE 2
MAXKEY   DS    0H
         L     REG2,0(REG2)        LOAD ADDRESS OF OPERAND FIELD
         LTR   REG2,REG2           HAS HE FORGOTTEN TO CODE IT ?
         BZ    BADPARM             YES. FORGET EVERYTHING AND QUIT
         XR    REG15,REG15         CLEAR LENGTH REGISTER
         IC    REG15,4(REG2)       LOAD LENGTH OF OPERAND
         L     REG14,4(REG2)       LOAD ADDRESS OF FIELD
         BCT   REG15,*+10          SUBTRACT 1 FROM LENGTH
         PACK  DBLWORD,0(0,REG14)  PACK THE NUMBER TO WORK AREA
         EX    REG15,*-6           EXECUTE THE PACK INST
         CVB   REG8,DBLWORD        CONVERT THE NUMBER TO BINARY
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        DCBS AND EXITS                                               *
***********************************************************************
         SPACE 2
         PRINT NOGEN
INPUT    DCB   DDNAME=$$,DSORG=PS,MACRF=GM,EODAD=EODAD
OUTPUT   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,EXLST=OUTEXLST
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PL,LRECL=133,RECFM=FBA,  X
               BLKSIZE=133
         PRINT GEN
OUTEXLST DS    0F
         DC    X'85'               DCB OPEN EXIT INDICATOR
         DC    AL3(DCBEXIT)        ADDRESS OF THE ROUTINE
DCBEXIT  DS    0H
         USING *,REG15             TEMPORARY ADDRESSABILITY
         LR    REG9,REG1           LOAD ADDRESS OF DCB BEING OPENED
         NC    DCBBLKSI,DCBBLKSI   BLOCKSIZE AVAILABLE ?
         BNZ   BLKOK               YES. FORGET IT
         MVC   DCBBLKSI,INPUT+DCBBLKSI-IHADCB COPY INPUT BLKSIZE
BLKOK    NC    DCBLRECL,DCBLRECL   LRECL PRESENT ?
         BNZ   LRECOK              YES. LEAVE IT ALONE
         MVC   DCBLRECL,INPUT+DCBLRECL-IHADCB NO. COPY INPUT LRECL
LRECOK   TM    DCBRECFM,DCBRECL    OUTPUT RECORD FORMAT  SPECIFIED ?
         BM    RECFMOK             YES. LEAVE IT ALONE
         MVC   DCBRECFM,INPUT+DCBRECFM-IHADCB NO. COPY INPUT RECFM
RECFMOK  BR    REG14               RETURN TO CALLER
         DROP  REG15               RESTORE PROPER ADDRESSABILITY
         EJECT
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
DBLWORD  DS    D                   WORK AREA FOR ARITHMETIC
WORKKEY  DS    CL(L'KEYNAME)       WORK AREA FOR PARM KEYWORDS
CHAIN    DC    F'0'                ADDRESS OF CHAIN OF JFCB ADDRESSES
INPUTDD  DC    CL8'SYSUT1'         INPUT DD NAME
CONCATDD DC    CL8' '              NAME ON CONCATENATED ENTRIES
JCLCARD  DC    H'80'
         DC    C'//$$ DD DISP=SHR,DSN='
DSNAME   DC    CL44' '
         DC    C'   '              BLANK PADDING AT END OF CARD
FUNCTION DC    C'A'                ALLOCATE FUNCTION CODE
FUNCTIO2 DC    C'D'                DEALLOCATE FUNCTION CODE
RETCODE  DC    X'00'               RETURN CODE
A1       DS    F                   NOT USED
A2       DS    F                   NOT USED
TITLE    DC    CL(L'PRTTITLE)'**** GDGCOPY ****        FILE RECORD COUNT
               T LOG'
SPACER   DC    CL(L'PRTSPACR)'RECORDS ='
FINALTIT DC    CL(L'PRTTITLE)'**** TOTAL RECORD COUNT FOR THE OUTPUT FIL
               LE IS'
MASK     DC    X'40202020202020202020202020212020'
PARMTABL DS    0F                  PARM FIELD KEYWORD TABLE
KEYNAME  DC    CL8'MAX'            FIRST KEYWORD
         DC    AL4(MAXKEY)         ADDRESS OF PROCESSOR
PARMLEN  EQU   *-PARMTABL          LENGTH OF AN ENTRY
PARMEND  EQU   *                   END OF PARM KEYWORD TABLE
SCAN     DS    20F                 WORK AREA FOR SCAN MACRO
         LTORG
         EJECT
***********************************************************************
*        DSECTS USED                                                  *
***********************************************************************
         SPACE 2
PRINT    DSECT
PRTAREA  DS    0CL133              DUMMY PRINT LINE AREA
PRTASA   DS    C                   ASA CONTROL CHARACTER
PRTTITLE DS    0CL50               TITLE LINE TEXT
         DS    CL5                 FILLER
PRTDSNAM DS    CL44                DATA SET NAME PRINT AREA
         DS    C                   FILLER
PRTSPACR DS    CL10                SPACER FOR SOME PRETTY DRIVEL
         DS    CL2                 FILLER
PRTNUMBR DS    CL16                PRINT RECORD COUNT AREA
         DS    CL(133-(*-PRTASA))  REMAINING DATA
         PRINT NOGEN
         DCBD DSORG=QS,DEVD=DA
         END
