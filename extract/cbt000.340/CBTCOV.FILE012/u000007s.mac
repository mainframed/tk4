AMM.     TITLE 'RT5011M - EXPIRY DATE SET ROUTINE - A.MORRISH.'
RT5011M  CSECT
***********************************************************************
*                                                                     *
*  THIS PROGRAM RECEIVES A PARAMETER LIST OF THE FORM :               *
*                                                                     *
*              PARM='NODE,YYDDD'.                                     *
*                                                                     *
*        EACH VOLUME SPECIFIED IN JCL STATEMENTS EXCEPT THOSE FOR     *
*  JOBLIB AND STEPLIB IS SEARCHED FOR DATA SETS BEGINNING WITH THE    *
*  NODE SPECIFIED. EACH DATA SET FOUND HAS THE EXPIRY DATE CHANGED TO *
*  THE VALUE SPECIFIED.                                               *
*                                                                     *
***********************************************************************
         SPACE 1
* REGISTER USAGE.
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10                  INDEX TO TIOT.
R11      EQU   11                  TIOT DD ENTRY POINTER.
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
         BEGIN SAVE,BASE=RBASE     INITIALISE AND DEFINE BASE REGISTER.
         SPACE 1
*
*        ANALYZE PARAMETER LIST.
*
         SPACE 1
         L     R11,0(R1)           SET GR11 -> PARAMETER LIST.
         LH    R10,0(R11)          SET GR10 = LENGTH OF PARAMETER LIST.
         LA    R11,2(R11)          SET GR11 -> START OF PARAMETER LIST.
         AR    R10,R11             SET GR10 -> END OF PARAMETER LIST.
         LR    R1,R11              SET GR1 -> FIRST PARAMETER.
PARLOOP  CR    R1,R10              HAS END BEEN PASSED ?
         BNL   ERR01               IF SO THEN ERROR.
         CLI   0(R1),C','          IS DELIMITER FOUND ?
         BE    *+12                IF SO THEN GO TO PROCESS.
         LA    R1,1(R1)            INCREMENT GR1 FOR NEXT CHARACTER.
         B     PARLOOP             GO TO TEST NEXT CHARACTER.
         SR    R1,R11              SET GR1 = LENGTH OF FIRST PARM.
         BNP   ERR01               IF ZERO THEN ERROR.
         LA    R0,44               SET GR0 = GREATEST LENGTH ALLOWED.
         CR    R1,R0               COMPARE FOR VALID LENGTH.
         BH    ERR01               IF GREATER THEN ERROR.
         STH   R1,CCWSCH+6         STORE LENGTH FOR SCAN.
         BCTR  R1,R0               DECREMENT GR1 FOR MOVE.
         EX    R1,MOVE1            MOVE NODE TO TITLE.
         AL    R11,CCWSCH          SET OP CODE IN GR11.
         ST    R11,CCWSCH          COMPLETE SEARCH ON KEY CCW.
         LA    R11,2(R1,R11)       SET GR11 -> START OF YYDDD.
         SR    R10,R11             SET GR10 = LENGTH OF YYDDD.
         LA    R0,5                SET GR0 = 5.
         CR    R10,R0              COMPARE FOR VALID YYDDD.
         BL    ERR01               IF INVALID LENGTH THEN ERROR.
         BE    NOTPROT             IF EXACT LENGTH THEN NO PROTECT.
         CLI   5(R11),C','         IS DELIMITER A COMMA ?
         BNE   ERR01               IF NOT THEN ERROR.
         LA    R0,7                SET GR0 = 7.
         CR    R10,R0              COMPARE FOR VALID PROTECT SIZE.
         BNE   ERR01               IF INVALID LENGTH THEN ERROR.
         MVC   TIPROT(1),6(R11)    STORE PROTECT INDICATOR IN TITLE.
         LA    R0,TITENDA-TITLE    SET GR0 = LENGTH OF FULL TITLE.
         STH   R0,TITLE            STORE LENGTH OF FULL TITLE.
         CLI   TIPROT,C'F'         IS 'OFF' SPECIFIED ?
         BE    *+12                IF SO THEN VALID.
         CLI   TIPROT,C'N'         IS 'ON' SPECIFIED ?
         BNE   ERR01               IF NOT THEN ERROR.
NOTPROT  CLC   CFF,0(R11)          IS DATE C'FFFFFF' ?
         BE    NOTDATE             IF SO THEN SKIP DATE.
         MVC   TIDATE(5),0(R11)    MOVE NEW EXPIRY DATE TO TITLE.
         PACK  DW,0(2,R11)         PACK YEAR NUMBER.
         CVB   R0,DW               CONVERT TO BINARY.
         STC   R0,YYDDD            STORE YEAR NUMBER.
         PACK  DW,2(3,R11)         PACK DAY NUMBER.
         CVB   R0,DW               CONVERT TO BINARY.
         STH   R0,DW+6             STORE DAY NUMBER AT HALF WORD BNDRY.
         MVC   YYDDD+1(2),DW+6     STORE DAY NUMBER FOR STORE IN DSCB.
         B     *+12                SKIP TEST FOR NO OPERATION.
NOTDATE  CLI   TIPROT,C'*'         IS PROTECTION CHANGED ?
         BE    RETURN              IF NOT THEN PROGRAM IS A NOP.
         SPACE 1
*
*        OPEN THE SYSPRINT DATA SET.
*
         SPACE 1
         OPEN  MF=(E,OPENL2)       OPEN SYSPRINT.
         SPACE 1
*
*        INITIALISE SCAN THROUGH TIOT.
*
         SPACE 1
         L     R11,16              SET GR11 -> CVT.
         L     R11,0(R11)          SET GR11 -> TCB POINTERS.
         L     R11,4(R11)          SET GR11 -> CURRENT TCB.
         L     R11,12(R11)         SET GR11 -> TIOT.
         LA    R11,24(R11)         SET GR11 -> FIRST DD ENTRY IN TIOT.
TIOTLOOP CLI   0(R11),0            COMPARE FOR EMPTY TIOT.
         BE    RETURN              IF EMPTY THEN RETURN.
         SPACE 1
*
*        TEST FOR PROHIBITED NAMES.
*
         SPACE 1
         LA    R3,NAMETAB          SET GR3 -> START OF NAME TABLE.
         LA    R4,8                SET GR4 = 8.
         LA    R5,NAMETBND         SET GR5 -> END OF NAME TABLE.
         CLC   0(8,R3),4(R11)      COMPARE FOR PROHIBITED NAME.
         BE    TIOTNXT             IF FOUND THEN SKIP THIS ENTRY.
         BXLE  R3,R4,*-10          LOOP UNTIL FOUND OR NAMES EXHAUSTED.
         SPACE 1
*
*        TEST FOR DASD.
*
         SPACE 1
         LH    R1,18(R11)          SET GR1 -> UCB.
         LTR   R1,R1               TEST FOR DUMMY OR DYNAM.
         BZ    TIOTNXT             IF SO THEN SKIP THIS ENTRY.
         CLI   18(R1),X'20'        IS DEVICE DASD ?
         BNE   TIOTNXT             IF NOT THEN SKIP THIS ENTRY.
         ST    R1,UCB              SAVE ADDRESS OF UCB FOR RESERVE.
         MVC   TISER,28(R1)        MOVE SERIAL NUMBER TO TITLE.
         MVC   TIUNIT,13(R1)       MOVE UNIT ADDRESS TO TITLE.
         MVI   OUT+5,X'FF'         SET NO DATA INDICATOR.
         MVI   COUNT+3,1           SET COUNT TO FORCE TITLE.
         SPACE 1
*
*        OPEN FOR VTOC AND RESERVE DEVICE.
*
         SPACE 1
         MVC   DCB+40(8),4(R11)    STORE DDNAME IN DCB.
         MVC   JFCB+118(6),28(R1)  STORE VOLUME SERIAL NO. IN JFCB.
         OPEN  MF=(E,OPENL),TYPE=J OPEN FOR VTOC.
         L     R1,DCB+44           SET GR1 -> DEB.
         MVC   IOB+33(6),36(R1)    STORE BBCCHH
         MVI   IOB+39,1            SET R = 1.
         RESERVE MF=(E,ENQL)
         LA    R0,CP1              SET GR0 -> INITIAL CHANNEL PROGRAM.
         SPACE 1
*
*        ISSUE EXCP.
*
         SPACE 1
VTOCLOOP ST    R0,IOB+16           STORE ADDRESS OF CHANNEL PROG IN IOB
         EXCP  IOB                 ISSUE EXCP.
         WAIT  1,ECB=ECB           WAIT FOR COMPLETION.
         CLI   ECB,X'7F'           TEST COMPLETION.
         BNE   ERR02               IF NOT NORMAL THEN GO TO ISSUE SNAP.
         SPACE 1
*
*        WRITE SYSPRINT.
*
         SPACE 1
         TM    PRT+48,X'10'        IS SYSPRINT OPEN ?
         BZ    NOPRT               IF NOT THEN SKIP PRINT.
         L     R1,COUNT            SET GR1 = COUNT.
         BCT   R1,NOTITLE          DECREMENT COUNT AND TEST FOR TITLE.
         PUT   PRT,SKIP            WRITE SKIP.
         PUT   PRT,TITLE           WRITE TITLE.
         LA    R1,58               SET GR1 = LINES PER PAGE.
NOTITLE  ST    R1,COUNT            STORE NEW COUNT.
         CLI   OUT+5,X'FF'         IS DATA PRESENT ?
         BE    NOPRT               IF NOT THEN NO PRINT.
         PUT   PRT,OUT             WRITE OUTPUT.
NOPRT    DS    0H
         SPACE 1
*
*        TEST FOR END OF VTOC.
*
         SPACE 1
         L     R1,IOB+8            SET GR1 -> LAST CCW (+1).
         LA    R1,0(R1)            CLEAR HIGH ORDER BYTE.
         LA    R0,CCWSCH           SET GR0 -> END INDICATOR.
         CR    R1,R0               COMPARE FOR END OF VTOC.
         BE    CLOSE               IF SO THEN GO TO CLOSE DATA SET.
         SPACE 1
*
*        SET COUNT FOR WRITE BACK.
*
         SPACE 1
         SR    R1,R1               SET GR1 = 0.
         IC    R1,IOB+39           SET GR1 = RECORD NUMBER.
         BCT   R1,*+8              DECREMENT GR1 FOR PREVIOUS RECORD.
         IC    R1,F4DSCB+30        SET GR1 = NUMBER OF DSCBS PER TRACK.
         STC   R1,IOB+39           STORE UPDATED RECORD NUMBER.
         SPACE 1
*
*        STORE NEW EXPIRY DATE AND PROTECTION INDICATORS AND REWRITE.
*
         SPACE 1
         CLI   TIPROT,C'F'         TEST FOR EXPIRY DATE CHANGE.
         BL    NOPROTA             IF NONE THEN NO PROTECTION CHANGE.
         BH    *+12                IF ON THEN GO TO SET ON.
         NI    F1DSCB+49,X'EF'     SET ON PROTECTION INDICATOR.
         B     NOPROTA             GO TO TEST FOR DATE.
         OI    F1DSCB+49,X'10'     SET OFF PROTECTION INDICATOR.
NOPROTA  CLI   TIDATE,C'*'         IS DATE PRESENT.
         BE    *+10                IF NOT THEN NO CHANGE.
         MVC   F1DSCB+12(3),YYDDD  STORE NEW EXPIRY DATE.
         SPACE 1
*
*        LOOP TO WRITE UPDATED RECORD AND CONTINUE SCAN.
*
         SPACE 1
         LA    R0,CP2              SET GR0 -> CONTINUATION CHANNEL PROG
         B     VTOCLOOP            GO TO CONTINUE SCAN OF VTOC.
         SPACE 1
*
*        CLOSE VTOC AND DEQ RESERVE.
*
         SPACE 1
CLOSE    DEQ   MF=(E,ENQL)
         CLOSE MF=(E,OPENL)        CLOSE VTOC DATA SET.
         SPACE 1
*
*        SCAN FOR NEXT TIOT DD ENTRY.
*
         SPACE 1
TIOTNXT  SR    R10,R10             SET GR10 = 0.
         IC    R10,0(R11)          SET GR10 = LENGTH OF DD ENTRY.
         BXH   R11,R10,TIOTLOOP    LOOP UNTIL EXHAUSTED.
         SPACE 1
*
*        RETURN.
*
         SPACE 1
RETURN   GOBACK SAVE,RC=0          RETURN.
MOVE1    MVC   TINODE(0),0(R11)    MODEL STATEMENT.
         TITLE 'RT5011M - ERROR ROUTINES - A.MORRISH.'
ERR01    ABEND 1                   INVALID PARAMETER LIST.
         SPACE 1
ERR02    TSGSNAP SDATA=CB,PDATA=ALL     I/O ERROR.
         B     CLOSE               GO TO CLOSE VTOC.
         TITLE 'RT5011M - SYSPRINT BLOCKSIZE ROUTINE - A.MORRISH.'
EXIT     DCBEXITS
         TITLE 'RT5011M - CONSTANTS AND WORK AREAS - A.MORRISH.'
SAVE     DC    9D'0'
DW       DS    D
CP1      CCW   X'31',IOB+35,X'60',5
         CCW   X'08',CP1,0,0
         CCW   X'06',F4DSCB,X'40',96
         CCW   X'08',CCWA,0,0
CP2      CCW   X'31',IOB+35,X'60',5
         CCW   X'08',CP2,0,0
         CCW   X'05',F1DSCB,X'40',96
         CCW   X'31',IOB+35,X'60',5
         CCW   X'08',*-8,0,0
         CCW   X'0E',OUT+5,X'60',44     READ DATA SET NAME.
CCWA     CCW   X'D1',F4DSCB+1,X'60',5
         CCW   X'08',CCWSCH,0,0
         CCW   X'03',0,0,1
CCWSCH   CCW   X'29',0,X'60',0
         CCW   X'08',CCWA,0,0
         CCW   X'06',F1DSCB,X'40',96
         CCW   X'12',IOB+35,X'20',5
COUNT    DC    F'1'
DCB      DCB   DDNAME=ANY,MACRF=E,EXLST=EX7
PRT      DCB   DDNAME=SYSPRINT,MACRF=PM,RECFM=VBM,LRECL=133,DSORG=PS,  *
               EXLST=EXIT,BLKSIZE=1912
OPENL    OPEN  (DCB,OUTPUT),MF=L
OPENL2   OPEN  (PRT,OUTPUT),MF=L
ECB      DC    F'0'
IOB      DC    X'42',A(ECB,0,0,CP1,DCB,0,0),2A(0)
JFCB     DC    44X'04',8C' ',X'8',64X'0',X'1',30C' ',28X'0'
EX7      DC    X'87',AL3(JFCB)
F4DSCB   DS    24F
F1DSCB   DS    24F
ENQL     RESERVE (QNAME,JFCB+118,E,6,SYSTEMS),RET=HAVE,MF=L,UCB=UCB
UCB      DC    F'0'                UCB POINTER FOR RESERVE.
QNAME    DC    CL8'SYSVTOC'
YYDDD    DS    CL3
NAMETAB  DC    C'JOBLIB  STEPLIB PGM=*.DDSYSPRINTSYSABENDSYSUDUMP'
         DC    C'SNAPOUT '
NAMETBND EQU   *-8
SKIP     DLINE 8B
CFF      DC    C'FFFFF'
TITLE    DC    0H'0',AL2(TITEND-*,0),X'11'
TINODE   DC    CL45' ',C'NODE ON VOL='
TIUNIT   DC    CL3' ',C'='
TISER    DC    CL6' ',C' SET TO EXPDT='
TIDATE   DC    CL5'*'
TITEND   DC    C' PROTECT='
TIPROT   DC    C'*'
TITENDA  EQU   *
OUT      DLINE 09,L44' '
         END   RT5011M
