SPY40    TITLE 'SPY EXTERNAL COMMANDS MODULE 1 - REL 2.0'
SPY40    START
* FUNCTION:-
*        TO PROCESS THE FOLLOWING SPY COMMANDS
*              DISPLAY    - DISPLAYS JOB OR PARTITION ACTIVITY
*              SCH        - CONTROL SPY SHCEDULER USAGE
*              CP         - ISSUE CP COMMANDS (WHEN UNDER VM)
*
* EXTERNAL REFERENCES:-
*
* ENTRY POINTS:-
*        SPY40   - MAIN ENTRY POINT
*
* TABLES:-
*
* REGISTER USAGE:-
*        R0    OS LINKAGE / SCRATCH
*        R1    OS LINKAGE / SCRATCH
*        R2    SCRATCH
*        R3    SCRATCH
*        R4    PARAMETER DSECT (PARMSECT) ADDRESSABILITY
*        R5
*        R6
*        R7
*        R8
*        R9
*        R10
*        R11   RESERVED FOR 2ND BASE REGISTER IF AND WHEN REQUIRED
*        R12   LOCAL ADDRESSABILITY
*        R13   SAVEAREA POINTER
*        R14   OS LINKAGE / SCRATCH
*        R15   OS LINKAGE / SCRATCH
         EJECT
*******************************************************************
* WRITTEN BY C.U. TECHNICAL SUPPORT GROUP. WE ACCEPT NO LIABILITY *
* FOR ANY DAMAGE CAUSED, DELIBERATE OR ACCIDENTAL.                *
*******************************************************************
         SPACE 1
** REGISTER EQUATES **
         SPACE 1
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         EJECT
******************
* INITIALISATION *
******************
         SPACE 1
         USING HEREWEGO,R15            TEMPORARY ADDRESSABILITY
HEREWEGO SAVE  (14,12),,SPY.EXTERNAL.COMMANDS.RELEASE.2.0
         B     SETUP                   GO CHAIN SAVEAREAS ETC.
SAVEAREA DS    18F                     'OUR' SAVEAREA
         DROP  R15                     FINISHED WITH HIM
         USING HEREWEGO,R12            PERMANENT ADDRESSABILITY
SETUP    LR    R12,R15                 SET BASE REGISTER
         ST    R13,SAVEAREA+4          POINT NEW TO OLD
         LR    R15,R13                 REMEMBER OLD
         LA    R13,SAVEAREA            UPDATE SAVEAREA POINTER
         ST    R13,8(,R15)             POINT OLD TO NEW
         SPACE 1
** LOAD UP PARMS BASE **
         SPACE 1
         L     R4,0(,R1)               POINT R4 TO SUPPLIED PARMS
         USING PARMSECT,R4             PARAMETER DSECT ADDRESSABILITY
         EJECT
********************************
* SWITCH TO CORRECT SUBCOMMAND *
********************************
         SPACE 1
         LA    R1,CMMDTABL             POINT TO START OF CMMD TABLE
         SPACE 1
CMMDLOOP L     R15,12(,R1)             PICK UP BRANCH ADDRESS
         CLC   COMMAND,0(R1)           IS THIS THE GUY ?
         BER   R15                     YES - GO TO IT
         LA    R1,L'CMMDENT(,R1)       NO - BUMP POINTER
         CL    R1,=A(CMMDEND)          CHECK FOR END ...
         BL    CMMDLOOP                NO - TRY AGAIN
         SPACE 1
INVCMMD  WTO   '** SPY - EH ? **'      WHAT ?
         SPACE 1
EXIT     L     R13,4(,R13)             RESTORE S/A POINTER
         RETURN (14,12),RC=0           AND BACK TO THE BOSS
         EJECT
*******************
* DISPLAY COMMAND *
*******************
         SPACE 1
DISPLAY  CLI   PARM,C'P'               PARTITION DISPLAY ?
         BNE   DJOBX                   NO - MUST BE JOBNAME
         CLI   PARM+2,C' '             PARTITION DISPLAY ?
         BNE   DJOBX                   NO - MUST BE JOBNAME
         SPACE 1
** IT LOOKS LIKE A PARTITION **
         SPACE 1
         MVC   W1C,PARM+1              MOVE PARTITION NO. TO W/AREA
         TR    W1C,PARTAB1             XLATE TO HEX OR INVALID
         CLI   W1C,X'0F'               TEST AGAINST MAX VALID VALUE
         BNH   DSHOW                   OK - GO SHOW PARTITION
         SPACE 1
** IT LOOKS LIKE A JOB **
         SPACE 1
DJOBX    L     R2,ATCBTABL             GET START OF TCB TABLE
         SPACE 1
DJOBX1   ICM   R3,15,0(R2)             GET A(TCB) & SET CCODE
         BZ    DEAD                    JOB NOT FOUND
         SPACE 1
         ICM   R3,15,12(R3)            LOAD A(TIOT) & SET CCODE
         BZ    DJOBX2                  NO TIOT - TRY NEXT TCB
         SPACE 1
         MODESET KEY=ZERO              TIOT IS PROTECTED
         MVC   W24C,0(R3)              GRAB JOBNAME ETC
         MODESET KEY=NZERO             GET SAFE BEFORE WE DO ANY HARM
         SPACE 1
         CLC   W24C(8),PARM            MATCHING JOBNAME ?
         BE    DSETW1C                 YES - GOT IT
         SPACE 1
DJOBX2   LA    R2,8(,R2)               POINT TO NEXT TABLE ENTRY
         B     DJOBX1                  & TRY IT
         SPACE 1
DSETW1C  SL    R2,ATCBTABL             CONVERT TO DISPLACEMENT
         SRL   R2,3                    DIVIDE BY 8
         STC   R2,W1C                  SAVE HEX PARTNO
         SPACE 1
** SHOW JOB (W1C CONTAINS HEX PARTITION NUMBER) **
         SPACE 1
DSHOW    XR    R2,R2                   CLEAR R15 FOR IC
         IC    R2,W1C                  GET HEX PARTNO
         SLL   R2,3                    *8 FOR DISPLACEMENT
         AL    R2,ATCBTABL             +BASE FOR POINTER
         L     R2,0(,R2)               GET A(TCB)
         LTR   R3,R2                   SAVE FOR RB LOOKUP & SET CCODE
         BZ    DEAD                    JOB NOT FOUND
         SPACE 1
         ICM   R2,15,12(R2)            LOAD A(TIOT) & SET CCODE
         BZ    DEAD                    NO TIOT - JOB NOT FOUND
         SPACE 1
         MODESET KEY=ZERO              TIOT IS PROTECTED
         MVC   W24C,0(R2)              GRAB JOBNAME ETC
         MODESET KEY=NZERO             GET SAFE BEFORE WE DO ANY HARM
         SPACE 1
         L     R2,0(,R3)               POINT TO TOP RB FOR THIS TCB
         TR    W1C,PARTAB2             XLATE PARTNO TO EBCDIC
         SPACE 1
         MVC   DJOB,W24C               LOAD JOBNAME
         MVC   DSTEP,W24C+8            LOAD STEPNAME
         MVC   DPART,W1C               LOAD PARTNO
         SPACE 1
         CLI   28(R2),X'00'            TEST WAIT COUNT
         BNE   DSHOW1                  NO
         MVC   DSTAT,=C'CPWT'          YES
         B     DWTOMVC                 READY TO SHOW
DSHOW1   CLI   28(R2),X'81'            TEST SUSPENDED
         BNE   DSHOW2                  NO
         MVC   DSTAT,=C'SUSP'          YES
         B     DWTOMVC                 READY TO SHOW
DSHOW2   MVC   DSTAT,=C'IOWT'          DEFAULT
DWTOMVC  MVC   DWTO+8(59),DMSG         PATCH WTO
         CNOP  0,4                     ALIGN WTO
DWTO     WTO   '*******************************************************C
               ****'
         B     EXIT                    FINISHED
         SPACE 1
** JOBNAME NOT FOUND **
         SPACE 1
DEAD     MVC   DWTO2+21(8),PARM        PATCH WTO
         CNOP  0,4                     ALIGN WTO
DWTO2    WTO   '** SPY - JOB XXXXXXXX NOT FOUND **'
         B     EXIT                    FINISHED
         EJECT
*******************************
* SCHEDULER COMMAND PROCESSOR *
*******************************
         SPACE 1
SCHEDULE CLC   PARM(3),=C'OFF'         RQS TO TURN SCHEDULER OFF ?
         BE    SCHOFF                  YES - GO TO IT
         SPACE 1
** RQS TO TURN ON SCHEDULER **
         SPACE 1
         TM    SCHDFLAG,SCHDACTV          IS SCHEDULER ALREADY ACTIVE
         BZ    SCHSTRT                    NO - START SCHEDULER
         WTO   '** SPY - SCHEDULER IS ALREADY ACTIVE **'
         B     EXIT                       YES - GET OUT
         SPACE 1
SCHSTRT  NI    SCHDFLAG,255-SCHDDIE       ENSURE KILL FLAG IS OFF
         OI    SCHDFLAG,SCHDACTV          FLAG SCH ACTIVE
         ATTACH EP=SPY58,PARAM=((R4)),VL=1 ATTACH THE SCHEDULER
         WAIT  ECB=PARMECB                WAIT FOR PARMS TO FREE
         B     EXIT                       AND GET OUT
         SPACE 1
** CLOSE SPY SCHEDULER **
         SPACE 1
SCHOFF   OI    SCHDFLAG,SCHDDIE           FLAG SCHEDULER TO DIE
         WTO   '** SPY - SCHEDULER CLOSE PENDING **'
         B     EXIT
         EJECT
************************
* CP COMMAND PROCESSOR *
************************
         SPACE 1
CPCOMMND TM    FLAG1,VMENVIR           ARE WE UNDER VM ?
         BO    CPYES                   YES - OK
         WTO   '** SPY - VM ISN''T RUNNING ! **'
         B     EXIT                    TWIT !
         SPACE 1
CPYES    MVC   W100C1,PARM             PICK UP COMMAND
         MVC   W100C2,PARM             AND AGAIN
         SPACE 1
* WE'VE GOT TWO COPIES SO THAT ONE OF THEM MUST LIE WHOLLY WITHIN
* A SINGLE PAGE (THE TWO AREAS ARE CONTIGUOUS). WE'LL CHECK THE
* PAGE ADDRESSES AND USE THE FIRST ONE THAT LIES WHOLLY WITHIN
* A SINGLE PAGE
         SPACE 1
         LA    R1,W100C1               GET A(FIRST) INTO R1
         LA    R15,W100C1+L'W100C1     END OF FIRST INTO R15
         LA    R2,W100C1               ASSUME W100C1 IS OK
         SRL   R1,11                   CONVERT TO PAGE NUMBER
         SRL   R15,11                  CONVERT TO PAGE NUMBER
         CLR   R1,R15                  CHECK FOR SAME PAGE
         BE    CPR2OK                  YES - GO TO IT
         LA    R2,W100C2               NO - USE 2ND COPY - MUST BE OK
         SPACE 1
CPR2OK   XC    FIXECB,FIXECB           CLEAR PAGE-FIX ECB
         MODESET MODE=SUP              HOP INTO SVR STATE
         PGFIX R,A=(R2),ECB=FIXECB     FIX THE PAGE HOLDING THE CMMD
         WAIT  ECB=FIXECB              WAIT FOR THE PAGE
         LRA   R14,0(,R2)              GET REAL ADDRESS
         LA    R1,L'W100C1             GET LENGTH FOR CP
         DC    X'83E10008'             DIAGNOSE INTERFACE
         PGFREE R,A=(R2)               FREE THE PAGE HOLDING THE CMMD
         MODESET MODE=PROB             BACK TO PROBLEM STATE
         B     EXIT                    AND FINISHED
         EJECT
********************
* SUBCOMMAND TABLE *
********************
         SPACE 1
* 16 BYTES PER ENTRY
*  0 -  9 COMMAND NAME FOR COMPARISON WITH 'COMAND' IN PARMSECT
* 10 - 11 UNUSED
* 12 - 15 ADDRESS OF COMMAND LOGIC WITHIN THIS MODULE
         SPACE 1
CMMDTABL DS    0D
CMMDENT  DS    0CL16                   LENGTH ATTRIBUTE
         SPACE 1
         DC    CL10'DISPLAY',XL2'00',A(DISPLAY)        DISPLAY COMMAND
         DC    CL10'SCH',XL2'00',A(SCHEDULE)          SCH COMMAND
         DC    CL10'CP',XL2'00',A(CPCOMMND)            CP COMMAND
CMMDEND  EQU   *                       ***** END OF COMMAND TABLE *****
         EJECT
*****************************
* ASSORTED TRANSLATE TABLES *
*****************************
         SPACE 1
PARTAB1  EQU   *                       XLATE EBCDIC PARTNO TO HEX
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FF0A0B0C0D0E0FFFFFFFFFFFFFFFFFFF' XLATE C1-C6==>0A-0F
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'
         DC    X'00010203040506070809FFFFFFFFFFFF' XLATE F0-F9==>00-09
         SPACE 1
PARTAB2  EQU   *                       XLATE HEX PARTNO TO EBCDIC
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6' XLATE TO EBCDIC
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         DC    X'5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C'
         EJECT
************************************
* GENERAL SCRATCHPADS AND POINTERS *
************************************
         SPACE 1
FIXECB   DS    F                       PAGEFIX ECB
W24C     DS    CL24
W1C      DS    C
** KEEP THE FIELDS 'W100C1' AND 'W110C2' TOGETHER **
W100C1   DS    CL100                   CP COMMAND AREA ONE
W100C2   DS    CL100                   CP COMMAND AREA TWO
         SPACE 1
         LTORG
         EJECT
********************************
* DISPLAY COMMAND MESSAGE AREA *
********************************
         SPACE 1
DMSG     DC    C'** SPY - JOBNAME = '
DJOB     DS    CL8
         DC    C' STEPNAME = '
DSTEP    DS    CL8
         DC    C' P'
DPART    DS    C
         DC    C'  '
DSTAT    DS    CL4
         DC    C' **'
         EJECT
***************************
* PARAMETER DUMMY SECTION *            ADDRESSED VIA REGISTER 4
***************************
         SPACE 1
PARMSECT DSECT
         DS    AL2                     DUMMY LENGTH BYTES
PARM     DS    CL100                   COMMAND PARMS
COMMAND  DS    CL10                    COMMAND
         SPACE 1
FLAG1    DS    X'00'                   FLAGS BYTE 1
VMENVIR  EQU   X'80'                   ON IF RUNNING UNDER VM
VMSPY    EQU   X'40'                   ON IF VM SPY IS LIVE
RECOVER  EQU   X'20'                   ON IF REENTRY IMPLIES RESTART
MODIFY   EQU   X'10'                   ON IF MODIFY USED ON LAST CMMD
VMPAGE   EQU   X'08'                   ON IF NONPAGING VM ENVIRONMENT
DDGACTV  EQU   X'04'                   ON IF DYNAMIC DISPATCHING ACTIVE
TSLACTV  EQU   X'02'                   ON IF TIMESLICING ACTIVE
         DS    XL3'00'                 ** PADDING **
         SPACE 1
ATCBTABL DS    A                       ADDRESS OF TCB TABLE
ADISKS   DS    A                       ADDRESS OF DISKTABL
TCBBAR   DS    F'0'                    A(A(LAST NON-MOVABLE TCB))
PARMECB  DS    F'0'                    PARAMETER LOCKING ECB
         SPACE 1
** SCHEDULER FLAGS **
         SPACE 1
SCHDFLAG DS    X'00'
SCHDACTV EQU   X'80'                   ON IF SCHEDULER ACTIVE
SCHDDIE  EQU   X'40'                   TURN ON TO KILL SCHEDULER
         DS    XL3'00'                 ** PADDING **
ENDPARM  EQU   *
         END
