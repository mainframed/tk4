*          DATA SET UTLPRCM    AT LEVEL 014 AS OF 26/05/76
         TITLE 'UTLPROGM/UTLPRCM - CAMLST PROCESSING'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  MDSL  EXTENTION OF IEHPROGM GDG HANDLING FACILITIES                *
*  SOFTWARE CODE - UTL                 * SYSTEMS PROGRAMMING GROUP    *
*  PROGRAM ID    - UTLPROGM            * MOBIL DATA SERVICES LTD      *
*  MODULE ID     - UTLPRCM             * BECKET HOUSE, VESTRY ROAD    *
*  DATE WRITTEN  - JAN 1976            * SEVENOAKS, KENT              *
*  AUTHOR        - ANDREW STRACHAN     * TN14 5EJ                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
UTLPRCM  CSECT
         BEGIN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  THIS MODULE USES THE INFO STORED IN 'OPTIONS' BY 'UTLPRRD' TO      *
*  ALTER THE CATALOG ENTRIES OF GDGS.                                 *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LR    R3,R1                   * SET BASE REGISTER
         USING OPTIONS,R3              * +
         USING TABLE,R11               *
         MVC   DSNAME,INDEX            * FIND INDEX POINTER
*        * TEMP CODE START
         MVC   SWEMDEL,=H'1'           @ SET DELETE SWITCH
         MVC   OLDMAX,=H'255'          @ SET OLD MAXIMUM
         MVC   OLDREAL,=H'255'         @ SET OLD USED
         CLI   OPCODE,C'S'             @ Q/ SCRAP
         BE    CMCHK015                @ Y. GO DO CHECKS
         CLI   OPCODE,C'R'             @ Q/ REDUCE
         BE    CMCHK015                @ Y. GO DO CHECKS
         LH    R15,NEWMAX              @ SUBTRACT 1 FROM NEWMAX
         BCTR  R15,0                   @ +
         STH   R15,OLDMAX              @ SET OLD MAXIMUM
         STH   R15,OLDREAL             @ SET OLD USED
         B     CMCHK015                @ BYPASS
*        * TEMP CODE END
         LOCATE  CLNAME                * +
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ IS IT ZERO
         BE    CMIND010                * Y. CONTINUE
         MVC   MSGNR,=H'20'            * N. PRINT MSG 20
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         B     CMFIN900                * GO TO FINISH
CMIND010 EQU   *                       * CONTINUE
         MVC   SWEMDEL,GDGEMDEL        * SAVE FLAGS
         MVC   OLDREAL,GDGREAL         * SAVE COUNTS
         MVC   OLDMAX+1(1),GDGMAX      * +
CMCHK015 EQU   *                       * DO CHECKS
         CLI   OPCODE,C'S'             * Q/ IS IT 'SCRAP'
         BE    CMLOC070                * Y. DONT BOTHER WITH NEXT PART
         CLI   OPCODE,C'E'             * Q/ IS IT 'EXTEND'
         BE    CMCHK020                * Y. GO DO EXTEND CHECK
         LH    R15,OLDMAX              * DO REDUCE CHECK
         CH    R15,NEWMAX              * Q/ IS OLDMAX MORE THAN NEWMAX
         BH    CMSAV030                * Y. GO DO NEXT
         MVC   MSGNR,=H'21'            * N. PRINT MSG 21
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         B     CMFIN900                * GO FINISH
CMCHK020 EQU   *                       * DO EXTEND CHECK
         LH    R15,OLDMAX              *
         CH    R15,NEWMAX              * Q/ IS OLDMAX MORE THAN NEWMAX
         BL    CMSAV030                * Y. GO DO NEXT
         MVC   MSGNR,=H'21'            * N. PRINT MSG 21
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         B     CMFIN900                * GO FINISH
CMSAV030 EQU   *                       * FIND LOWEST OF NEWMAX AND USED
         LH    R15,NEWMAX              *
         CH    R15,OLDREAL             * Q/ NEWMAX MORE THAN OLD USED
         BNH   CMGET050                * N. GO DO GET MAIN
         LH    R15,OLDREAL             * Y. SAVE OLD USED
CMGET050 EQU   *                       * DO GET MAIN STORAGE
         STH   R15,SAVED               * SAVE LOWEST
         MH    R15,=H'309'             * MULTIPLY BY LENGTH
         LR    R0,R15                  * GET THAT MUCH
         GETMAIN R,LV=(0)              * +
         ST    R1,ATABLE               * SAVE ITS ADDRESS
         ST    R0,ASIZE                * SAVE ITS SIZE
         LR    R11,R1                  * LOAD BASE REGISTER FOR TABLE
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  LOCATE, UNCATALOG, AND SCRATCH ALL GENERATIONS.                    *
*  SAVE THE INFORMATION NECCESSARY TO RECREATE THEM.                  *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMLOC070 EQU   *                       * DO UNCATALOG SCRATCH AND SAVE
         LA    R10,0                   * MAKE COUNT = ZERO
CMCIR080 EQU   *                       * DO FIND NEXT GENERATION
         LR    R15,R10                 * POINT TO PRESENT ENTRY
         MH    R15,=H'309'             * +
         L     R11,ATABLE              * +
         AR    R11,R15                 * +
         LA    R10,1(R10)              * INCREASE COUNT
         MVC   DSNAME,INDEX            * BUILD GEN(0)
         LA    R15,DSNAME              * +
         AH    R15,LENINDEX            * +
         MVC   0(3,R15),=C'(0)'        * +
         LOCATE CLNAME                 * FIND GEN(0)
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ FOUND GEN(0) OK
         BE    CMTST085                * Y. GO DO TEST FOR SAVEABLE
         BCTR  R10,0                   * SAVE PREVIOUS COUNT
         CH    R10,SAVED               * Q/ COUNT LESS THAN SAVED
         BNL   CMDLT150                * N. GO DO DELETE
         STH   R10,SAVED               * +                           T
         B     CMDLT150                * GO DO TEST FOR DELETE INDEX
CMTST085 EQU   *                       * DO TEST FOR SAVEABLE
         CH    R10,NEWMAX              * Q/ COUNT > NEWMAX
         BH    CMDSK090                * Y. GO DO TEST FOR DISK
         CH    R10,SAVED               * Q/ COUNT > SAVED
         BH    CMUCA120                * Y. GO DO UNCATALOG
         MVC   TBDSN,DSNAME            * SAVE DSN AND WORK AREA
         MVC   TBWORK(256),GDGWORK     * +
         MVC   TBWORK+256(L'TBWORK-256),GDGWORK+256
         B     CMUCA120                * GO DO UNCAT
CMDSK090 EQU   *                       * DO TEST FOR DISK
         CLI   GDGWORK+4,X'20'         * Q/ IS IT DISK
         BNE   CMUCA120                * N. GO DO UNCATALOG
         SR    R0,R0                   * ZEROIZE REG
         SCRATCH CLSCRAT               * SCRATCH DISK DATASET
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ SCRATCHED IT OK
         BNE   CMSCA100                * N. GO PRINT MSG
         MVC   MSGNR,=H'10'            * PRINT MSG 10
         B     CMSCB110                * CONTINUE
CMSCA100 EQU   *                       * PRINT MSG 11
         MVC   MSGNR,=H'11'            * +
CMSCB110 EQU   *                       * +
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
CMUCA120 EQU   *                       * DO UNCATALOG DATASET
         CATALOG CLUNCAT               * +
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ UNCATALOGED OK
         BNE   CMUCA130                * N. PRINT MSG 13
         MVC   MSGNR,=H'12'            * Y. PRINT MSG 12
         B     CMUCB140                * +
CMUCA130 EQU   *                       * +
         MVC   MSGNR,=H'13'            * +
CMUCB140 EQU   *                       * +
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         CH    R10,OLDREAL             * Q/ COUNT < OLD USED
         BL    CMCIR080                * Y. GO DO FIND NEXT GEN
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  DELETE THE INDEX IF NECCESSARY.                                    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMDLT150 EQU   *                       * DO TEST FOR DELETE INDEX
         CLI   OPCODE,C'S'             * Q/ IS IT 'SCRAP'
         BNE   CMDLA160                * N. GO DO DELETE INDEX
         CLI   SWDLTX,C'D'             * Q/ IS IT 'DLTX'
         BNE   CMFIN900                * N. GO FINISH
CMDLA160 EQU   *                       * DO DELETE INDEX
         MVC   DSNAME,INDEX            * +
         CATALOG CLDLTX                * +
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ DELETED OK
         BE    CMDLB170                * Y. GO PRINT MSG
         MVC   MSGNR,=H'17'            * N. PRINT MSG 17
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         CLI   OPCODE,C'S'             * Q/ SCRAP
         BE    CMFIN900                * Y. GO DO FINISH
         B     CMCAA250                * GO DO RECATALOG
CMDLB170 EQU   *                       * PRINT MSG 16
         MVC   MSGNR,=H'16'            * +
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  BUILD THE INDEX AGAIN IF NECCESSARY                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         CLI   OPCODE,C'S'             * Q/ IS IT 'SCRAP'
         BE    CMFIN900                * Y. GO FINISH
         MVC   CLBLDG+2(L'NEWMAX),NEWMAX DO ALTERATIONS TO CAMLST BLDG
         MVI   CLBLDG+2,X'00'          * PUT IN MAXIMUM ENTRIES
         TM    SWEMDEL+1,EMPTY         * Q/ WAS IT 'EMPTY'
         BNO   CMBLA180                * N. GO DO TEST 'DELETE'
         OI    CLBLDG+2,X'08'          * TURN ON 'EMPTY' BIT
CMBLA180 EQU   *                       * DO TEST 'DELETE'
         TM    SWEMDEL+1,DELETE        * Q/ WAS IT 'DELETE'
         BNO   CMBLB185                * N. GO DO BUILD INDEX
         OI    CLBLDG+2,X'40'          * TURN ON 'DELETE' BIT
CMBLB185 EQU   *                       * DO BUILD INDEX
         INDEX CLBLDG                  * +
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE REURN CODE
         CH    R15,=H'0'               * Q/ BUILD OK
         BNE   CMBLC190                * N. GO PRINT MSG
         MVC   MSGNR,=H'18'            * PRINT MSG 18
         B     CMBLD200                * +
CMBLC190 EQU   *                       * +
         MVC   MSGNR,=H'19'            * PRINT MSG 19
CMBLD200 EQU   *                       * +
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  RECATALOG THE SAVED GENERATIONS.                                   *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
CMCAA250 EQU   *                       * DO RECATALOG
         LA    R10,0                   * MAKE COUNT = ZERO
CMCAB260 EQU   *                       * DO RECATALOG OF GEN FROM TABLE
         LR    R15,R10                 * POINT TO PRESENT ENTRY
         MH    R15,=H'309'             * +
         L     R11,ATABLE              * +
         AR    R11,R15                 * +
         LA    R10,1(R10)              * INCREASE COUNT
         CH    R10,SAVED               * Q/ PAST IT. I.E. SAVED=ZERO
         BH    CMFRE300                * Y. GO DO FREE
         MVC   DSNAME,TBDSN            * MOVE PRESENT ENTRY TO WORKAREA
         MVC   GDGWORK(256),TBWORK     * +
         MVC   GDGWORK+256(L'TBWORK-256),TBWORK+256
         CATALOG CLCAT                 * RECATALOG ENTRY
         MVC   SAVDSN,DSNAME           * SAVE DSNAME
         STH   R15,RETCODE             * SAVE RETURN CODE
         CH    R15,=H'0'               * Q/ RECATALOG OK
         BNE   CMCAC270                * N. GO PRINT MSG
         MVC   MSGNR,=H'14'            * PRINT MSG 14
         B     CMCAD280                * +
CMCAC270 EQU   *                       * +
         MVC   MSGNR,=H'15'            * PRINT MSG 15
CMCAD280 EQU   *                       * +
         LR    R1,R3                   * +
         L     R15,=V(UTLPRMS)         * +
         BALR  R14,R15                 * +
         CH    R10,SAVED               * Q/ COUNT LESS THAN SAVED
         BL    CMCAB260                * Y. GO DO RECATALOG GEN
CMFRE300 EQU   *                       * DO FREE TABLE AREA
         L     R1,ATABLE               * +
         L     R0,ASIZE                * +
         FREEMAIN  R,LV=(0),A=(1)      * +
CMFIN900 EQU   *                       * DO FINISH
         EXIT                          * +
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  WORK AREAS AND MACRO PARAMETER LISTS USED BY THIS MODULE.          *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         PRINT NOGEN
CLNAME   CAMLST  NAME,DSNAME,,GDGWORK
CLSCRAT  CAMLST  SCRATCH,DSNAME,,GDGWORK,,OVRD
CLUNCAT  CAMLST  UNCAT,DSNAME
CLDLTX   CAMLST  DLTX,DSNAME
CLBLDG   CAMLST  BLDG,DSNAME,,,,,1     * THIS AREA WILL BE CHANGED
CLCAT    CAMLST  CAT,DSNAME,,GDGWORK
GDGWORK  DS    0F                      * GDG INDEX POINTER ENTRY
         DS    CL12                    *
GDGEMDEL DS    CL1                     * EMPTY/DELETE SWITCH
GDGMAX   DS    CL1                     * PRESENT MAXIUM GEN
GDGREAL  DS    CL2                     * PRESENT USED GEN
         DS    CL249                   * PAD OUT TO 265
SAVED    DC    H'0'                    * NR OF GENS TO BE SAVED
ATABLE   DC    A(0)                    * ADCON FOR TABLE
ASIZE    DC    A(0)                    * SAVE AREA FOR SIZE OF GETMAIN
DSNAME   DC    CL44' '                 * WORK AREA FOR DSNAME
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE STRUCTURE OF ENTRIES IN THE TABLE OF SAVED GENERATIONS.         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
TABLE    DSECT
TBDSN    DS    CL44
TBWORK   DS    CL265
UTLPRCM  CSECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE COMMON AREA USED BY ALL MODULES.                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
OPTIONS  DSECT                         * THE AREA MAPPED IS IN UTLPROGM
INDEX    DS    CL44                    * INDEX.NAME
SAVDSN   DS    CL44                    * WORK AREA FOR DSN FOR CAMLST
LENINDEX DS    H                       * INDEX.NAME LENGTH
OPCODE   DS    XL8                     * OPERATION
SWDLTX   DS    CL1                     * DELETE INDEX SWITCH
SWEMDEL  DS    H                       * EMPTY/DELETE SWITCH
EMPTY    EQU   2                       * EMPTY
DELETE   EQU   1                       * DELETE
RETCODE  DS    H                       * RETURN CODE FROM MACROS
RETJOB   DS    H                       * HIGHEST RETURN CODE
MSGNR    DS    PL2                     * MESSAGE NUMBER
OLDREAL  DS    H                       * ACTUAL NUMBER OF GENERATIONS
OLDMAX   DS    H                       * PREVIOUS MAXIMUM
NEWMAX   DS    H                       * MAXIUMUM DESIRED
ACARD    DS    A                       * ADDR OF CARD AREA
UTLPRCM  CSECT
         END
