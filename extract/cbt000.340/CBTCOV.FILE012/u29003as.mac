***********************************************************************
*                                                                     *
*  Z014 IS A PRINT/PUNCH UTILITY TO REPLACE IEBPTPCH.  WITH Z014 THE  *
*  USER CAN START AT THE BEGINNING OF THE DATASET, OR START AT A      *
*  RECORD NUMBER , OR START FROM A RECORD CONTAINING AN IDENTIFICATION*
*  FIELD.  THE USER CAN ALSO STOP AFTER A SPECIFIED NUMBER OF RECORDS.*
*  PRINTING MAY BE DONE IN CHARACTER OR HEXIDECIMAL.  JCL PROC IS:-   *
*                                                                     *
*  //PZ014 PROC OP=,STARTAT=,STOPAFT=,IDENT=,POS=,SYSOUT=A            *
*  //Z014 EXEC PGM=Z014,PARM='&OP,&STARTAT,&STOPAFT,&IDENT,&POS       *
*  //SYSABEND  DD  SYSOUT=A                                           *
*  //SYSUT2  DD  SYSOUT=&SYSOUT                                       *
*                                                                     *
*  PARAMETERS ARE:-                                                   *
*     (C) - CHARACTER PRINT                                           *
*  OP=(X) - HEXADECIMAL PRINT                                         *
*     (P) - PUNCH                                                     *
*                                                                     *
*  STARTAT = XXXXXX - A 1 TO 6 DIGIT NUMBER SPECIFYING STARTING       *
*                     RECORD NUMBER.                                  *
*                                                                     *
*  STOPAFT = XXXXXX - A 1 TO 6 DIGIT NUMBER SPECIFYING THE NUMBER OF  *
*                     RECORDS TO PRINT.                               *
*                                                                     *
*  IDENT = X----X - 1 TO 10 CHARACTERS REPRESENTING AN IDENTIFICATION *
*                   TO BE SEARCHED FOR IN THE RECORD.  THE RECORDS    *
*                   CONTAINING THIS IDENTIFICATION WILL BE PRINTED.   *
*                   HOWEVER IF THE 'STOPAFT' PARAMETER IS ALSO CODED, *
*                   THE 'IDENT' PARAMETER WILL BE USED IN A SIMILAR   *
*                   WAY TO THE 'STARTAT' PARAMETER.                   *
*                                                                     *
*  POS = XXXX - A 1 TO 4 DIGIT NUMBER SPECIFYING THE POSITION IN THE  *
*               RECORD OF THE 'IDENT'  - RELATIVE TO ONE.             *
* N.B. - IF THE 'IDENT' PARAMETER IS USED THE 'POS' PARAMETER MUST BE *
*        CODED.  IF 'STARTAT' AND 'IDENT' ARE CODED , 'IDENT' TAKES   *
*        PREFERENCE.                                                  *
*                                                                     *
*  SYSOUT = X - 'A' FOR 'OP=C' OR 'OP=X', 'B' FOR 'OP=P'.             *
*                                                                     *
***********************************************************************
*CONTACT:- RAY BARBER, ROWNTREE-MACKINTOSH(YORK),TEL 0904-53071 X 476 *
*                                                                     *
***********************************************************************
Z014     CSECT                          ROWNTREE-MACKINTOSH PRINT/PUNCH
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         SAVE  (14,12)
         USING *,12
         BALR  12,0
         LA    12,0(12)
         SH    12,6(12)
         B     *+12
         DC    CL8'Z014'
         LA    11,SAVE
         ST    13,4(11)
         ST    11,8(13)
         LR    11,13
         B     *+76
SAVE     DC    18F'0'
         SPACE 2
         L     R1,0(R1)                 PICK UP ADDRESS OF PARAMETERS.
         LH    R2,0(R1)                 PICK UP LENGTH OF PARAMETERS.
         LA    R2,2(R2,R1)              CALC. ADDRESS OF LAST-BYTE+1.
         CLI   2(R1),C','               Q. OPERATION OMITTED.
         BE    BAA080                   YES. ERROR IN PARAMETERS.
         CLI   3(R1),C','               Q. OPERATION GT ONE CHARACTER.
         BNE   BAA080                   YES. ERROR IN PARAMETERS.
         LA    R3,4(R1)                 LOAD ADDRESS OF START PARAM.
         CLI   0(R3),C','               Q. START PARAM OMITTED.
         BE    BAA002                   YES. GO PROCESS STOP PARAM.
         SR    R6,R6                    CLEAR REG.6.
         LR    R4,R3                    STORE ADDRESS OF START PARAM.
BAA001   A     R6,=F'1'                 ADD 1 TO ACCUMULATING REG.
         LA    R3,1(R3)                 MOVE TO NEXT CHARACTER.
         CLI   0(R3),C','               Q. END OF START PARAM.
         BNE   BAA001                   NO. COUNT & MOVE LOOP.
         LA    R5,TARGET+6              CALCULATE ADDRESS FOR
         SR    R5,R6                      STORING PARAM.
         BCTR  R6,0
         EX    R6,MOVEPARM              MOVE PARAM TO STORE.
         PACK  STARTNO,TARGET(6)        CONVERT PARAM TO DECIMAL.
         ZAP   ADJUST,=PL1'1'           CHANGE ADJUSTMENT.
         MVI   TARGET,X'F0'             CLEAR PARAM
         MVC   TARGET+1(5),TARGET         STORE AREA.
         OI    STARTNO+3,X'0F'          FORCE POSITIVE NUMBER.
         MVI   BAA025+1,X'00'           FORCE START TEST.
BAA002   LA    R3,1(R3)                 LOAD ADDRESS OF STOP PARAM.
         CLI   0(R3),C','               Q. STOP PARAM OMITTED.
         BE    BAA004                   YES. GO PROCESS IDENT PARAM.
         SR    R6,R6                    CLEAR REG.6.
         LR    R4,R3                    STORE ADDRESS OF STOP PARAM.
BAA003   A     R6,=F'1'                 ADD 1 TO ACCUMULATING REG.
         LA    R3,1(R3)                 MOVE TO NEXT CHARACTER.
         CLI   0(R3),C','               Q. END OF STOP PARAM.
         BNE   BAA003                   NO. COUNT & MOVE LOOP.
         LA    R5,TARGET+6              CALCULATE ADDRESS FOR
         SR    R5,R6                      STORING PARAMETER.
         BCTR  R6,0
         EX    R6,MOVEPARM              MOVE PARAM TO STORE.
         PACK  STOPNO,TARGET(6)         CONVERT TO DECIMAL.
         OI    STOPNO+3,X'0F'           FORCE POSITIVE NUMBER.
         MVI   TARGET,X'F0'             CLEAR PARAM
         MVC   TARGET+1(5),TARGET         STORE AREA.
         MVI   BAA030+1,X'00'           FORCE STOP TEST.
BAA004   LA    R3,1(R3)                 LOAD ADDRESS OF IDENT PARAM.
         CLI   0(R3),C','               Q.IDENT PARAM MISSING.
         BE    BAA007                   YES. IGNORE REST OF PARAMS.
         SR    R6,R6                    CLEAR REGISTER 6.
         LR    R4,R3                    STORE ADDRESS OF IDENT PARAM.
BAA005   A     R6,=F'1'                 ADD 1 TO ACCUMULATING REG.
         LA    R3,1(R3)                 MOVE TO NEXT CHARACTER.
         CLI   0(R3),C','              Q. END OF PARAM.
         BNE   BAA005                   NO. COUNT & MOVE LOOP.
         LA    R5,IDENT+20              CALCULATE ADDRESS
         SR    R5,R6                      FOR STORING PARAM.
         BCTR  R6,0
         EX    R6,MOVEPARM              MOVE PARM TO STORE.
         ST    R5,IDENTADR              STORE IDENT ADDRESS.
         STC   R6,BAA028+1              STORE IDENT LENGTH.
         LA    R3,1(R3)                 LOAD ADDRESS OF POS PARAM.
         CR    R3,R2                    Q. NO POS PARAM.
         BNL   BAA080                   YES. PARM ERROR.
         LR    R4,R3                    STORE ADDRESS OF POS PARAM.
         SR    R6,R6                    CLEAR REG.6.
BAA006   A     R6,=F'1'                 ADD 1 TO ACCUMULATING REG.
         LA    R3,1(R3)                 MOVE TO NEXT CHAR.
         CR    R3,R2                    Q. END OF PARAM.
         BL    BAA006                   NO. COUNT & MOVE LOOP.
         LA    R5,TARGET+4              CALCULATE ADDRESS
         SR    R5,R6                      FOR STORING PARAM.
         BCTR  R6,0
         EX    R6,MOVEPARM              MOVE PARAMETER TO STORE.
         PACK  POSITION,TARGET(4)       CONVERT TO DECIMAL.
         OI    POSITION+7,X'0F'         FORCE POSITIVE NUMBER.
         ZAP   ADJUST,=PL1'1'           CHANGE ADJUSTMENT.
         MVI   BAA025+1,X'00'           FORCE START TEST.
         MVI   STARTNO,X'FF'            INDICATE IDENT CONTROL.
BAA007   CLI   2(R1),C'P'               Q. PUNCH OPERATION.
         BE    BAA008                   YES.
         CLI   2(R1),C'X'               Q. HEXADECIMAL PRINT.
         BE    BAA009                   YES.
         CLI   2(R1),C'C'               Q. CHARACTER PRINT.
         BE    BAA010                   YES.
         B     BAA080                   NO. PARM ERROR.
BAA008   MVI   OUTLENTH+3,X'50'         SET OUTPUT LENGTH TO 80.
         MVI   SYSUT2+63,X'50'          MOVE LRECL TO OUT PUT DCB.
         MVI   SYSUT2+83,X'50'          MOVE BLKSIZE TO OUTPUT DCB.
         B     BAA011                   BRANCH TO CONTUNUE.
BAA009   MVI   BAA042+1,X'00'           FORCE HEXADECIMAL
         MVI   BAA052+1,X'00'             CONVERSION ROUTINE.
         MVI   OUTLENTH+3,X'3C'         CHANGE LENGTH TO 60.
         EJECT
*
*  OPEN FILES & TEST FOR FIXED OR VARIABLE.
*
BAA010   MVI   SYSUT2+63,X'84'          MOVE LRECL TO OUTPUT DCB.
         MVI   SYSUT2+83,X'84'          MOVE BLKSIZE TO OUTPUT DCB.
BAA011   DS    0H
         OPEN  (SYSUT1,,SYSUT2,OUTPUT)  OPEN FILES.
         SP    STOPNO,ADJUST            ADJUST FOR CALCULATIONS.
         TM    SYSUT1+36,X'80'          Q. FIXED LENGTH RECORDS.
         BO    BAA015                   YES.
         TM    SYSUT1+36,X'40'          Q. VARIABLE LENGTH RECORDS.
         BZ    BAA085                   NO. ERROR.
         MVI   BAA021+1,X'00'           FORCE VARIABLE PROCESSING.
         B     BAA020                   TO READ.
BAA015   MVC   INLENTH+2(2),SYSUT1+82   STORE FIXED RECORD LENGTH.
         SPACE 3
BAA020   GET   SYSUT1                   READ A RECORD.
         LR    R7,R1                    STORE RECORD ADDRESS.
         SPACE 3
BAA021   B     BAA022                   BRANCH AROUND VARIABLE PROCESS
         MVC   INLENTH+2(2),0(R7)       STORE LENGTH OF RECORD.
         LA    R7,4(R7)                 SKIP COUNT FIELD.
BAA022   AP    RECOUNT,=P'1'            ADD 1 TO RECORD COUNTER.
         SPACE 3
BAA025   B     BAA030                   BRANCH AROUND START PROCESS.
         CLI   STARTNO,X'FF'            Q. IDENT PARAM FOR START.
         BE    BAA027                   YES.
         CP    STARTNO,RECOUNT          Q. START NUMBER REACHED.
         BNE   BAA020                   NO. READ NEXT RECORD.
         MVI   BAA025+1,X'F0'           FORCE TO IGNORE START PROCESS.
         AP    STOPNO,RECOUNT           CALC LAST RECORD TO PROCESS.
         B     BAA030                   YES  PROCESS.
*
BAA027   CVB   R5,POSITION              PICK UP POSITION PARAM.
         LA    R5,0(R7,R5)              FIND ADDR OF RECORD IDENT.
         S     R5,=F'1'                 ADJUST FOR OFFSET.
         L     R4,IDENTADR              PICK UP ADDRESS OF IDENT.
BAA028   CLC   0(10,R5),0(R4)           Q. IDENT FOR THIS RECORD.
         BNE   BAA020                   NO. READ NEXT RECORD.
         CLI   BAA030+1,X'00'           Q. STOP PARAM PRESENT.
         BNE   BAA040                   NO. PROCESS RECORD.
         AP    STOPNO,RECOUNT           CALC. LAST RECORD TO PROCESS.
         MVI   BAA025+1,X'F0'           FORCE TO IGNORE START PROCESS.
         SPACE 2
BAA030   B     BAA040                   BRANCH AROUND STOP PROCESS.
         CP    STOPNO,RECOUNT           Q. REACHED LAST RECORD.
         BL    BAA090
         EJECT
*
*  RECORD PROCESSING ROUTINE.
*
BAA040   L     R5,INLENTH               PICK UP INPUT RECORD LENGTH.
         MVC   LINE+123(9),PATTERN      MOVE EDIT PATTERM TO PRINT LINE
         ED    LINE+122(10),RECOUNT     EDIT RECORD COUNT.
BAA041   S     R5,OUTLENTH              SUBTRACT OUTPUT LENGTH.
         BNP   BAA050                   INPUT LENGTH LESS OR EQUAL.
         SPACE
BAA042   B     BAA045                   BRANCH AROUND HEX CONVERSION.
         BAL   LINK,BAA060              TO CONVERT TO HEX.
         MVI   LINE+120,X'40'           BLANK LAST CHARACTER.
         B     BAA046                   BR.TO PUT.
BAA045   MVC   LINE(120),0(R7)          MOVE UNCONVERTED LINE.
BAA046   PUT   SYSUT2,LINE              PUT OUTPUT RECORD.
         MVI   LINE,X'40'               CLEAD OUTPUT
         MVC   LINE+1(131),LINE           RECORD AREA.
         L     R6,OUTLENTH              LOAD LENTH OF OUTPUT RECORD.
         LA    R7,0(R6,R7)              MOVE ALONG RECORD.
         B     BAA041                   LOOP TO PROCESS REST OF REC.
         SPACE 3
BAA050   A     R5,OUTLENTH              RESTORE REMAINING-INPUT LENGTH
BAA052   B     BAA055                   BRANCH AROUND HEX. CONVERSION
         BAL   LINK,BAA060              TO CONVERT TO HEX.
         SLL   R5,1                     CALCULATE OUTPUT LENGTH.
         LA    R6,LINE(R5)              FIND END OF OUTPUT DATA.
         LA    R8,121                   CALCULATE LENGTH OF OUTPUT
         SR    R8,R5                      LINE TO BE BLANKS.
         MVI   0(R6),X'40'              MOVE BLANK TO PRINT LINE.
         STC   R8,*+5                   STORE LENGTH OF NEXT INSTR.
         MVC   1(1,R6),0(R6)            MOVE BLANKS TO REST OF LINE.
         MVI   1(R6),C'*'               TO SHOW END OF RECORD.
         B     BAA056                   BRANCH TO PUT.
BAA055   BCTR  R5,0                     MODIFY LENGTH FOR INSTR.
         STC   R5,*+5                   STORE LENGTH OF NEXT INSTR.
         MVC   LINE(1),0(R7)            MOVE DATA TO LINE.
         LA    R6,LINE(R5)              FIND END OF OUTPUT DATA.
         MVI   1(R6),C'*'               TO SHOW END OF RECORD.
BAA056   PUT   SYSUT2,LINE              PUT OUTPUT RECORD.
         MVI   LINE,X'40'               CLEAR OUTPUT
         MVC   LINE+1(121),LINE           RECORD AREA.
         B     BAA020                   TO READ NEXT RECORD
         SPACE 3
BAA060   DS    0H                      CONVERT TO HEXADECIMAL.
         UNPK  LINE(15),0(8,R7)         CHANGE
         UNPK  LINE+14(15),7(8,R7)        INPUT
         UNPK  LINE+28(15),14(8,R7)         INFORMATION.
         UNPK  LINE+42(15),21(8,R7)           TO A
         UNPK  LINE+56(15),28(8,R7)             CONVERTIBLE
         UNPK  LINE+70(15),35(8,R7)               FORM
         UNPK  LINE+84(15),42(8,R7)                 ..
         UNPK  LINE+98(15),49(8,R7)                   ..
         UNPK  LINE+112(9),56(5,R7)                     ..
         TR    LINE(120),TRANTAB-240    CONVERT TO PRINTABLE CHARS.
         BR    LINK                     RETURN TO PROCESS ROUTINE.
         EJECT
BAA080   WTO   'Z014 - ERROR IN PARAMETERS'
         B     BAA099                   END OF JOB.
BAA085   WTO   'Z014 - UNDEFINED CANNOT BE PROCESSED'
         B     BAA090                   CLOSE FILES & END JOB
         SPACE 3
BAA090   CLOSE (SYSUT1,,SYSUT2)
BAA099   L     RD,4(RD)
         LM    RE,RC,12(RD)
         XR    RF,RF
         BR    RE
         EJECT
TARGET   DC    10C'0'                   PARAM STORE - BEFORE PACKING.
MOVEPARM MVC   0(1,R5),0(R4)            MOVE PARAM TO STORE.
ADJUST   DC    PL1'0'                   ADJUSTMENT FOR STOPAFT.
STARTNO  DC    PL4'0'                   STARTING RECORD NO.
STOPNO   DC    PL4'0'                   ENDING RECORD NO.
IDENT    DC    CL20' '                  IDENTIFICATION TO BE FOUND.
IDENTADR DS    F                              ..       START ADDRESS.
POSITION DS    D                              ..       RECORD POSITION
OUTLENTH DC    F'120'                   OUTPUT RECORD LENGTH.
INLENTH  DC    F'0'                     INPUT RECORD LENGTH.
RECOUNT  DC    PL5'0'                   RECORD COUNTER.
LINE     DC    CL132' '                 OUTPUT RECORD AREA.
LINK     EQU   6                        LINK REGISTER FOR HEX. CONV.
TRANTAB  DC    C'0123456789ABCDEF'      CONVERSION TABLE.
PATTERN  DC    9XL1'20'                 RECORD COUNT EDIT PATTERN.
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,EODAD=BAA090
         EJECT
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM,RECFM=F
         END   Z014
