***********************************************************************
*                        U T 5 0 8                                    *
*                                                                     *
*                                                                     *
*        REGISTER USAGE:                                              *
*        REG0  PARAMETER REGISTER                                     *
*        REG1  PARAMETER REGISTER                                     *
*        REG2  ADDRESS OF THE NAME OF MEMBER PROCESSED                *
*        REG3  ADDRESS OF CURRENT ENTRY OF CESD                       *
*        REG4  LENGTH OF EACH CESD ENTRY                              *
*        REG5  ADDRESS OF LAST BYTE OF LAST CESD ENTRY                *
*        REG6  ADDRESS OF INPUT BUFFER CHAIN                          *
*        REG7  ADDRESS OF OUTPUT BUFFER CHAIN                         *
*        REG8  ADDRESS OF CURRENT LOAD MODULE RECORD                  *
*        REG9  WORK REGISTER                                          *
*        REG10 WORK REGISTER                                          *
*        REG11 LINK REGISTER BETWEEN ROUTINES                         *
*        REG12 BASE REGISTER OF THE PROGRAM                           *
*        REG13 ADDRESS OF THE REGISTER SAVE AREA                      *
*        REG14 PROGRAM LINK REGISTER AND WORK REGISTER                *
*        REG15 PROGRAM LINK REGISTER AND WORK REGISTER                *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*        EQUATES USED IN THIS MODULE                                  *
***********************************************************************
         SPACE 2
***********************************************************************
*        PROGRAM ENTRY HOUSEKEEPING                                   *
***********************************************************************
         SPACE 2
UT508    ZCSECT
         EJECT
***********************************************************************
*        INITIALISE THE PDS MEMBER FOR PROCESSING                     *
***********************************************************************
         SPACE 2
         OPEN  (PDS,INPUT)
         XR    REG11,REG11
LOOPXX   GET   PDS
         LA    REG11,1(REG11)
         B     LOOPXX
PDSEOF   EQU   *
         CLOSE (PDS)
         LA    REG11,1(REG11)
         XR    REG10,REG10
         LA    REG9,28
         DR    REG10,REG9
         STH   REG11,LASTTTR
         STC   REG10,LASTTTR+2
         MVC   TRBAL,=H'1'
         RDJFCB (VTOC)
         MVC   DSNAME(44),JFCB
         OI    JFCB+QMGR,DNWB
QMGR     EQU   X'34'
DNWB     EQU   X'08'
         MVI   JFCB,X'04'
         MVC   JFCB+1(43),JFCB
         OPEN  (VTOC,UPDAT),TYPE=J  OPEN THE MEMBER FOR UPDATE
         EJECT
         SPACE 2
WRITENEW DS    0H
         BAL   REG11,SETUPIO       INITIALISE I/O OPERATIONS
WRLOOP   BAL   REG11,GETBLK        GO GET FIRST BLOCK
         BAL   REG11,REBUILD       SEARCH FOR REQUD TEXT RECORD
         B     WRLOOP              NOT CORRECT DSCB GET NEXT
         BAL   REG11,PUTBLK        GO WRITE NEW BLOCK
         CLOSE (VTOC)              CLOSE THE FILES
         FREEPOOL VTOC             FREE UP THE BUFFER POOL
         B     EXITPGM             RETURN TO CALLER
         EJECT
***********************************************************************
***********************************************************************
         SPACE 2
REBUILD  DS    0H
         CLI   44(REG8),C'1'
         BNE   RBEXIT
         CLC   DSNAME,0(REG8)
         BNE   RBEXIT
         MVC   X'62'(3,REG8),LASTTTR
         MVC   X'65'(2,REG8),TRBAL
         MVC   X'3C'(1,REG8),=H'0'
         B     4(REG11)
RBEXIT   BR    REG11
LASTTTR  DC    X'000000'
TRBAL  DC    X'0000'
         EJECT
***********************************************************************
*        READ THE NEXT BLOCK FROM INPUT PDS                           *
***********************************************************************
         SPACE 2
GETBLK   DS    0H
         READ  (6),SF,VTOC,,MF=E
         L     REG6,20(REG6)       LOAD ADDRESS OF NEXT DECB
         CHECK (6)                 WAIT FOR I/O COMPLETION
         L     REG8,12(REG6)       LOAD ADDRESS OF BUFFER
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        WRITE THE BLOCK TO THE NEW MEMBER                            *
***********************************************************************
         SPACE 2
PUTBLK   DS    0H
         WRITE (6),SF,VTOC,,MF=E WRITE OUT THE BLOCK
         CHECK (6)
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        INITIALISE INPUT AND OUTPUT BUFFERS                          *
***********************************************************************
         SPACE 2
SETUPIO  DS    0H
         GETBUF VTOC,6            GET FIRST INPUT BUFFER
         GETBUF VTOC,7            GET SECOND INPUT BUFFER
         ST    REG6,DECBIN1+12     STORE IN DECB1
         ST    REG7,DECBIN2+12     STORE IN DECB2
         READ  DECBIN1,SF,MF=E     READ THE FIRST BLOCK
         LA    REG6,DECBIN2        INITIALISE INPUT CHAIN
         BR    REG11               RETURN TO CALLER
         EJECT
***********************************************************************
*        PROGRAM EXIT ROUTINES                                        *
***********************************************************************
         SPACE 2
EXITPGM  DS    0H
         ZRETURN
         EJECT
***********************************************************************
*        DATA CONTROL BLOCKS                                          *
***********************************************************************
         SPACE 2
         PRINT NOGEN
VTOC     DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=(R,W),LRECL=96,RECFM=F,    X
               BUFNO=2,NCP=2,                                          X
               BLKSIZE=96,DEVD=DA,KEYLEN=44,EODAD=EXITPGM,EXLST=EXLST
PDS      DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GL,RECFM=F,BLKSIZE=256,    X
               LRECL=256,EODAD=PDSEOF
         EJECT
***********************************************************************
*        BUFFER POOL CONTROL BLOCKS                                   *
***********************************************************************
         SPACE 2
         READ  DECBIN1,SF,VTOC,,MF=L
         DC    A(DECBIN2)          CHAIN POINTER
         READ  DECBIN2,SF,VTOC,,MF=L
         DC    A(DECBIN1)          CHAIN POINTER
         EJECT
***********************************************************************
*        CONSTANTS AND LITERALS                                       *
***********************************************************************
         SPACE 2
EXLST    DS    0F
         DC    X'87'
         DC    AL3(JFCB)
JFCB     DC    176C' '
DSNAME   DC    CL44' '
         LTORG
         END
