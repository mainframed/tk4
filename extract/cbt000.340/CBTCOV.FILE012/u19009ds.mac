         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
*
         TITLE 'GP020112 READ PDS DIRECTORY AND BUILD ADDRESS LIST    '
GP020112 CSECT
         ENTRY GP020101            INSERT MODULE NUMBER CHANGING
GP020101 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE GP020112  PROGRAMMER PAUL.A.DANIELSON.  ASSIGNED 30/03/72 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  MODULE READS ANY PDS DIRECTORY AND DEPENDING ON THE CONTENTS OF    *
*  P1 FILLS IN EITHER A TABLE OF 4BYTE ENTRIES WITH THE STARTING      *
*  ADDRESS OF EACH MEMBER,  OR IF P1 INITIALLY CONTAINS FF'S IT       *
*  FILLS IN A TABLE OF 12 BYTE ENTRIES WITH AN 8 BYTE MEMBER NAME     *
*  AND 4 BYTE STARTING ADDRESS FOR EACH MEMBER OF THE PDS.            *
*  AS THE DIRECTORY IS ORGANISED IN ASCENDING ORDER SO THE TABLE      *
*  IS FILLED IN IN ASCENDING ORDER. THE END OF TABLE IS INDICATED     *
*  BY X'FF' IN THE LAST ENTRY.                                        *
*                                                                     *
*                                                                     *
         SPACE 2
*                             PARAMETERS                              *
*                             ----------                              *
*  1. I/O TABLE OF EITHER 4 BYTE OR 12 BYTE ENTRIES TO BE FILLED IN   *
*         WITH MEMBER ADDRESSES OR MEMBER NAMES & ADDRESSES.          *
*  2.                                                                 *
*                                                                     *
*  3.                                                                 *
*                                                                     *
*  4.                                                                 *
*                                                                     *
*  5.                                                                 *
*                                                                     *
*                                                                     *
*                           SPECIAL NOTES                             *
*                           -------------                             *
*  IF P1 1ST ENTRY IS X'00' FILL IN ADDRESSES ONLY. IF IT IS X'FF'    *
*  NAMES & ADDRESSES ARE FILLED IN.                                   *
*                                                                     *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE GP020112 BY P.A. DANIELSON
*
**  ASSIGNED 16/09/72, EFFECTIVE 18/09/72 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT
*   --------------------   NOW ALLOWS FOR CORRECT HANDLING OF USER
*                          DATA IN A DIRECTORY RECORD.
*
*
*
*
*
*
***********************************************************************
         EJECT
         ISEQ  73,80
         MODIN
*
**       OPEN PDS DIRECTORY AS SEQUENTIAL DATA SET
*        -----------------------------------------
         OPEN  (PDSDIR,(INPUT))
*
**       TEST P1 TO SEE IF NAME AND ADDRESS OR ADDRESS ONLY
*        --------------------------------------------------
         CLC   0(4,R6),=F'-1'      Q. NAMES REQUIRED
         BNE   BA02                A. NO
         NI    BA09+1,X'00'        SET BRANCH TO ALLOW NAME RETRIVAL
*
**       READ DIRECTORY BLOCK
*        --------------------
BA02     EQU   *
         GET   PDSDIR              READ DIRECTORY BLOCK
         LR    R2,R1               POINT TO RECORD
         LH    R3,0(R2)            PUT NO OF BYTES USED INTO R3
         LA    R2,2(R2)            POINT TO FIRST MEMBER NAME IN BLOCK
         BCTR  R3,R0               SUBTRACT TWO FROM NUMBER OF -
         BCTR  R3,R0               BYTES USED IN THIS BLOCK
*
BA04     EQU   *
         CLI   0(R2),X'FF'         Q. END OF ENTRIES
         BE    BA50                A. YES - GO CLOSE ETC.
*
**       BRANCH INSTRUCTION CHANGED IF MEMBER NAMES REQUIRED
*        ---------------------------------------------------
BA09     EQU   *
         BC    15,BA12             CHANGED TO BC 0 IF NAMES REQUIRED
*
**       OBTAIN MEMBER NAME AND ADDRESS
*        ------------------------------
         MVC   0(11,R6),0(R2)      SAVE MEMBER NAME AND ADDRESS
         MVI   11(R6),X'00'        PUT ZEROS IN Z OF TTRZ
         LA    R6,12(R6)           POINT TO NEXT ENTRY IN OUTPUT LIST
         B     BA14                GO OBTAIN NEXT ENTRY
*
**       OBTAIN ADDRESS ONLY
*        -------------------
BA12     EQU   *
         MVC   0(3,R6),8(R2)       SAVE MEMBER ADDRESS IN LIST
         MVI   3(R6),X'00'         PUT ZEROS IN Z OF TTRZ
         LA    R6,4(R6)            POINT TO NEXT ENTRY IN OUTPUT LIST
*
**       POINT TO NEXT ENTRY IN DIRECTORY BLOCK
*        --------------------------------------
BA14     EQU   *
         SH    R3,=H'12'           SUBTRACT 12 FROM REMAINING NO OF BYT
         SR    R15,R15             ZEROISE WORK REGISTER
         MVC   SCW001,11(R2)       MOVE LENGTH OF XTRA INFO TO W/A  0.1
         NI    SCW001,X'1F'        SET OFF BITS 0-2                 0.1
         IC    R15,SCW001          PUT LENGTH IN WORK REGISTER      0.1
         SLA   R15,1               MULTIPLY BY 2 TO GIVE NO OF BYTES
         LA    R2,12(R2)           POINT TO EXTRA INFORMATION
         AR    R2,R15              ADD LENGTH OF EXTRA INFORMATION
         SR    R3,R15              OBTAIN NO OF REMAINING BYTES
         BP    BA04                GO PROCESS NEXT MEMBER IN BLOCK
         B     BA02                GO READ NEXT BLOCK
*
**       END OF DIRECTORY ROUTINE
*        ------------------------
BA50     EQU   *
         CLOSE (PDSDIR)            CLOSE DIRECTORY DCB
         MVC   0(4,R6),=F'-1'      INDICATE END OF LIST
         OI    BA09+1,X'F0'        MAKE MODULE REUSABLE
         MODOUT
*        ------
*
**       DIRECTORY DCB
*        -------------
PDSDIR   DCB   DSORG=PS,MACRF=(GL),DDNAME=PDSDIR,EODAD=BA50,           X
               BLKSIZE=256,LRECL=256,RECFM=F
*                                                                   0.1
SCW001   DS    C                   W/A FOR LENGTH OF EXTRA INFO     0.1
*
         LTORG
*
         END
