***********************************************************************
*
*     PROGRAM   GN007
*     -------
*
*     OBJECT    TO LOAD AN INDEXED SEQUENTIAL FILE TO DISK FROM AN
*     ------
*               EXISTING SEQUENTIAL DATASET. CONVERSELY IT WILL
*
*               UNLOAD AN INDEXED SEQUENTIAL FILE TO A SEQUENTIAL
*
*               FILE. WHEN LOADING AN I.S. FILE ALL RELEVANT DCB
*
*               INFORMATION MUST BE CODED. GN007 MAY BE USED TO
*
*               REORGANISE AN I.S. FILE BY UNLOADING THE FILE AND
*
*               LOADING IT AGAIN AS NEXT JOB STEP. DELETED RECORDS
*
*               CAN BE DROPPED IF OPTCD=L IS SPECIFIED.
*
*     PARAMETER PARM='LOAD' OR 'UNLOAD'
*     ---------
*
*     MESSAGES  GN007 IE NO PARM INFORMATION SUPPLIED
*     --------
*               GN007 5E UNSUCCESSFUL OPEN FOR SYSUTX
*
*               GN007 6E INPUT ERROR FOR SYSUT1, RECORD COUNT = NNNNNN
*
*               GN007 7W LRECL FOR SYSUT1, SYSUT2 NOT EQUAL
*
*               GN007 8E OUTPUT ERROR FOR SYSUT2, RECORD COUNT = NNNNNN
*
*               GN007 9E KEY SEQUENCE ERROR ON SYSUT2,RECORD COUNT =
*                        LAST KEY = KKK.....K
*               GN007 2I LOGICAL RECORD COUNT IS NNNNNN
*
*               GN007 3I SUCCESSFUL COMPLETION OF UNLOAD
*
*               GN007 4I SUCCESSFUL COMPLETION FOR LOAD
*
*     NOTES     MESSAGES 1E,5E,6E,8E OR 9E ARE PRINTED AS A RESULT
*     -----
*               OF A PREMATURE END OF JOB-STEP. THE CONDITION CODE
*
*               IS SET = 8 AND CAN BE TESTED IN THE FOLLOWING STEP
*
*     SAMPLE JCL //   EXEC PGM=GN007,PARM='LOAD' OR 'UNLOAD'
*     ----------                                 --
*                //SYSPRINT DD SYSOUT=A
*
*                //SYSUT1   DD      -DEFINITION OF INPUT FILE-
*
*                //SYSUT2   DD      -DEFINITION OF OUTPUT FILE-
*
***********************************************************************
GN007    CSECT
         SAVE  (14,12)
         BALR  12,0
         USING *,12
         LR    11,13
         LA    13,SAVEAREA
         ST    13,8(11)
         ST    11,4(13)
*
         L     2,0(1)                  * R2 = A(PARM INFO & LENGTH FLD)
         OPEN  (PRTDCB,(OUTPUT))
         MVI   PRTREC,C'1'
         BAL   14,RITEPARA
         MVC   PRTREC(133),HEADING
         BAL   14,RITEPARA
*
         CLC   0(2,2),=X'0000'         * PARM INFO ?
         BNE   AROUND                  *  YES,  BRANCH
WRITE1   EQU   *
         MVC   PRTREC(133),MESSAGE1
         BAL   14,RITEPARA
END8   EQU   *
         LA    15,8                    * SET RETURN CODE
         CLOSE PRTDCB
RETURN8  EQU   *
         L     13,4(13)
         RETURN (14,12),RC=8
*
*
AROUND   EQU   *
         CLI   2(2),C'L'               * LOAD FN SPECIFIED ?
         BE    LOAD                    * YES
*
         CLI   2(2),C'U'               * UNLOAD SPECIFIED ?
         BNE   WRITE1                  * YES, CONTINUE .  NO, BRANCH
         EJECT
*                                              *   * *   * *    ****
*                                              *   * **  * *    *   *
*        UNLOAD  VERSION OF UTILITY FOLLOWS    *   * * * * *    *   *
*                                              *   * *  ** *    *   *
*                                               ***  *   * **** ****
         SR    3,3
         OPEN  (UNISAM,(INPUT),UNSAM,(OUTPUT))
*
         TM    UNISAM+48,X'10'         * SUCCESSFUL OPEN ?
         BO    OPENOK
         MVI   MESSAGE5+38,C'1'
BADOPEN  EQU   *
         MVC   PRTREC(133),MESSAGE5
         BAL   14,RITEPARA
         B     END8
*
*
OPENOK   EQU   *
         TM    UNSAM+48,X'10'          * OPENED ?
         BO    LRECLCHK
*
         MVI   MESSAGE5+38,C'2'
         CLOSE UNISAM
         B     BADOPEN                 * O,
*
*
*       CHECK  UNLOAD  FILES  HAVE  SAME  LRECL'S
LRECLCHK   EQU   *
         CLC   UNISAM+82(2),UNSAM+82   * LRECL'S MATCH
         BE    LRECLOK                 * YES, BRANCH
*
         MVC   PRTREC(133),MESSAGE7
         BAL   14,RITEPARA
*
LRECLOK  EQU   *
*
GETTUN   GET   UNISAM
         LR    2,1
*
         PUT   UNSAM,0(2)
         LA    3,1(3)                  * ADD 1 TO LOGICAL-REC-COUNT
         B     GETTUN
*
*
*UNLOAD  EODAD :-
*
EOFUNLD  EQU   *
         CLOSE (UNISAM,,UNSAM)
         CVD   3,DWORD
         UNPK  MESSAGE2+35(6),DWORD(8)
         OI    MESSAGE2+40,X'F0'
         MVC   PRTREC(133),MESSAGE2
         BAL   14,RITEPARA
         MVC   PRTREC(133),MESSAGE3
         BAL   14,RITEPARA
*
RETN     EQU   *
         CLOSE (PRTDCB)
         L     13,4(13)
         RETURN (14,12),RC=0
         EJECT
*                                            *     ***   ***  ****
*                                            *    *   * *   * *   *
*        LOAD  VERSION OF UTILITY FOLLOWS    *    *   * *   * *   *
*                                            *    *   * ***** *   *
*                                            ****  ***  *   * ****
LOAD     EQU   *
         SR    5,5
         OPEN  (LISAM,(OUTPUT),LSAM)
*
*
         TM    LSAM+48,X'10'           * OPEN OK ?
         BO    GOODOPEN
         MVI   MESSAGE5+38,C'1'
         B     BADOPEN
*
*
GOODOPEN EQU   *
         TM    LISAM+48,X'10'          * OPEN OK ?
         BO    RECLCHEK
*
         MVI   MESSAGE5+38,C'2'
         CLOSE LISAM
         B     BADOPEN                 * O.
*
RECLCHEK EQU   *
*        CHECK LOAD  FILES  HAVE SAME  LRECL'S
         CLC   LISAM+82(2),LSAM+82     * LRECLS = ?
         BE    LRECOK                  * YES, BRANCH.
*
         MVC   PRTREC(133),MESSAGE7
         BAL   14,RITEPARA
         ABEND 4                       JL740604
*
LRECOK   EQU   *
GETTL    GET   LSAM
         LR    4,1
         LH    6,LISAM+60              * REL KEY POSN IN ISAM RECORD
         LR    7,4                     * R4 =A(RECORD)
         AR    7,6                     * R7 =A(KEY)
         SR    8,8
         IC    8,LISAM+16              * KEY-LENGTH
         BCTR  8,0
         EX    8,MOVEKEY               * STORES LAST ISAM KEY
*
         PUT   LISAM,0(4)
         LA    5,1(5)
         B     GETTL
*
*
*LOAD    EODAD :-
*
EOFLOAD  EQU   *
         CLOSE (LISAM,,LSAM)
*
         CVD   5,DWORD
         UNPK  MESSAGE2+35(6),DWORD(8)
         OI    MESSAGE2+40,X'F0'
*
         MVC   PRTREC(133),MESSAGE2
         BAL   14,RITEPARA
*
         MVC   PRTREC(133),MESSAGE4
         BAL   14,RITEPARA
*
         B     RETN
PRTERROR  EQU   *
         LA    1,LENTH
         SVC   35
         LA    15,8
         LA    14,RETURN8
         BR    14
UNISAM   DCB   DSORG=IS,DDNAME=SYSUT1,EODAD=EOFUNLD,MACRF=(GL),        *
               SYNAD=UNISEROR
*
UNSAM    DCB   DSORG=PS,DDNAME=SYSUT2,MACRF=(PM),SYNAD=UNSMEROR,       *
               OPTCD=C,EXLST=EXADDR
LSAM     DCB   DSORG=PS,DDNAME=SYSUT1,MACRF=(GL),SYNAD=LSAMEROR,       *
               EODAD=EOFLOAD,OPTCD=C,EXLST=EXADDR
EXADDR   DC    X'85',AL3(DCBEX)   EXLST FOR SAM & UNSAM DCBS
DCBEX    EQU   *
         CLI   20(1),X'02'       BUFNO = 2 ?
         BCR   7,14              NO, RETURN
         MVI   20(1),X'03'       IF 2, SET TO 3
         BR    14
LISAM    DCB   DSORG=IS,DDNAME=SYSUT2,MACRF=(PM),SYNAD=LISEROR
PRTDCB   DCB   RECFM=FA,BLKSIZE=133,DSORG=PS,DDNAME=SYSPRINT,MACRF=(W) *
               SYNAD=PRTERROR
UNISEROR EQU   *
*
*              SYNAD  FOR  INPUT  ISAM  FILE
*
         SYNADAF ACSMETH=QISAM,PARM1=UNISAM,PARM2=(0)
         LR    2,1                     * R2 = A(SYNADAF MESSAGE)
         CVD   3,DWORD
         UNPK  MESSAGE6+47(6),DWORD(8)
         OI    MESSAGE6+52,X'F0'
         MVC   PRTREC(133),MESSAGE6
         BAL   14,RITEPARA
         MVC   PRTREC+1(132),0(2)
         BAL   14,RITEPARA
         SYNADRLS
         LA    15,8
         LA    14,RETURN8
         BR    14
UNSMEROR EQU   *
*
*              SYNAD FOR OUTPUT SAM  FILE
*
         SYNADAF ACSMETH=QSAM
         LR    2,1
         MVC   SYNADAFX+1(132),0(2)
         CVD   3,DWORD
         UNPK  MESSAGE8+47(6),DWORD(8)
         OI    MESSAGE8+52,X'F0'
         MVC   PRTREC(133),MESSAGE8
         BAL   14,RITEPARA
*
         MVC   PRTREC(133),SYNADAFX
         BAL   14,RITEPARA
         SYNADRLS
         LA    15,8
         LA    14,RETURN8
         BR    14
LSAMEROR EQU   *
*
*                   SYNAD  FOR  INPUT  SAM  FILE
*
         SYNADAF   ACSMETH=QSAM
         LR    2,1
         MVC   SYNADAFX+1(132),0(2)
         CVD   5,DWORD
         UNPK  MESSAGE6+47(6),DWORD(8)
         OI    MESSAGE6+52,X'F0'
         MVC   PRTREC(133),MESSAGE6
         BAL   14,RITEPARA
*
         MVC   PRTREC(133),SYNADAFX
         BAL   14,RITEPARA
         SYNADRLS
         LA    15,8
         LA    14,RETURN8
         BR    14
LISEROR  EQU   *
*
*                   SYNAD  FOR  OUTPUT  ISAM  FILE
*
         SYNADAF  ACSMETH=QISAM,PARM1=LISAM,PARM2=(0)
         LR    2,1
         MVC   SYNADAFX+1(132),0(2)
         TM    LISAM+81,X'80'          * KEY SEQ ERROR
         BNO   NOTSEQCH                * NO,  BRANCH
         EX    8,MESSKEY               * MOVE LAST-KEY TO MESSAGE9
*
         CVD   5,DWORD
         UNPK  MESSAGE9+54(6),DWORD(8)
         OI    MESSAGE9+52,X'F0'
         MVC   PRTREC(133),MESSAGE9
         BAL   14,RITEPARA
         MVC   PRTREC(133),SYNADAFX
         BAL   14,RITEPARA
         SYNADRLS
         LA    15,8
         LA    14,RETURN8
         BR    14
NOTSEQCH EQU   *
         CVD   5,DWORD
         UNPK  MESSAGE8+47(6),DWORD(8)
         OI    MESSAGE8+52,X'F0'
*
         MVC   PRTREC(133),MESSAGE8
         BAL   14,RITEPARA
         MVC   PRTREC(133),SYNADAFX
         BAL   14,RITEPARA
         SYNADRLS
         LA    15,8
         LA    14,RETURN8
         BR    14
*
*
         WRITE PRTDECB,SF,PRTDCB,PRTREC,133,MF=L
RITEPARA EQU  *
         ST    14,SAVE14
         TM    PRTDCB+48,X'10'
         BO    WRT
         LA    1,LENTH
         SVC   35
WRT      EQU   *
         WRITE PRTDECB,SF,PRTDCB,PRTREC,133,MF=E
         CHECK PRTDECB
         L     14,SAVE14
         BR    14
         EJECT
HEADING  DC    CL133'  GN007             ISAM  LOAD / UNLOAD  UTILITY '
MESSAGE1 DC CL133'  GN007 1E NO PARM INFORMATION SUPPLIED, COMPLETION  *
               CODE = 8 '
MESSAGE2 DC CL133'  GN007 2I LOGICAL-RECORD COUNT IS XXXXXX  '
MESSAGE3 DC CL133'  GN007 3I SUCCESSFUL COMPLETION OF UNLOAD  '
MESSAGE4 DC CL133'  GN007 4I SUCCESSFUL COMPLETION FOR LOAD  '
MESSAGE5 DC CL133'  GN007 5E UNSUCCESSFUL OPEN FOR SYSUTX, CODE = 8 '
MESSAGE6 DC CL133'  GN007 6E INPUT ERROR FOR SYSUT1, RECORD-CT = XXXXXX*
                      COMPLETION CODE = 8 '
MESSAGE7 DC CL133'  GN007 7W LRECL FOR SYSUT1, SYSUT2 ARE NOT EQUAL.   *
               TRUNCATION OR SPACE-FILLING WILL OCCUR.'
MESSAGE8 DC CL133'  GN007 8E OUTPUT ERROR FOR SYSUT2,RECORD-CT = XXXXXX*
                   COMPLETION CODE = 8 '
MESSAGE9 DC CL133'  GN007 9E KEY SEQUENCE ERROR ON SYSUT2, RECORD-CT = *
               XXXXXX   LAST KEY=                         CODE = 8 '
SAVE14    DC  F'0'
MOVEKEY  MVC   KEY(1),0(7)             * STORE KEY FROM LAST ISAM-REC
DWORD    DS    D
KEY      DC    CL20' '                 * ISAM KEY STORED HERE
LENTH    DC    X'780B'
PRTREC   DC    CL133' '
SAVEAREA DC    18F'0'
SYNADAFX DC    CL133' '
MESSKEY     MVC MESSAGE9+73(1),KEY
SPACES   DC    CL20' '
HOF      DC    C'1'
*
         LTORG
         END
