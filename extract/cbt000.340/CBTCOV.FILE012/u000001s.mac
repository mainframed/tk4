AMM.     TITLE 'TAPE VOLUME REFERENCE UTILITY - A.MORRISH. '
RTPTPREF CSECT
***********************************************************************
*                                                                     *
*  THIS PROGRAM CAUSES THE VOLUMES OF THE DATA SET ASSOCIATED WITH A  *
* DD STATEMENT TO BE ASSIGNED TO THE DATA SET ASSOCIATED WITH ANOTHER *
* DD STATEMENT.                                                       *
*                                                                     *
*  THE USER MAY SPECIFY IN A PARAMETER LIST.:                         *
*                                                                     *
*        PAR1  THE DDNAME OF THE DD STATEMENT THAT IDENTIFIES THE     *
*              DATA SET, THE VOLUMES OF WHICH ARE TO BE ASSIGNED TO   *
*              ANOTHER DATA SET. IF OMITTED 'SYSUT1' IS ASSUMED.      *
*                                                                     *
*        PAR2  THE DDNAME OF THE DD STATEMENT THAT IDENTIFIES THE     *
*              DATA SET THAT IS TO HAVE THE VOLUMES OF ANOTHER DATA   *
*              SET ASSIGNED TO IT. IF OMITTED 'SYSUT2' IS ASSUMED.    *
*                                                                     *
*        PAR3  THE NAME OF A PROGRAM THAT IS TO BE EXECUTED WHEN THE  *
*              VOLUMES HAVE BEEN ASSIGNED. IF OMITTED NO PROGRAM IS   *
*              EXECUTED.                                              *
*                                                                     *
*        PAR4  A DECIMAL VALUE THAT INDICATES THE HIGHEST COMPLETION  *
*              CODE ALLOWABLE. IF THE RETURN CODE FROM THE PROGRAM    *
*              SPECIFIED IN PAR3 EXCEEDS THIS VALUE THEN A USER ABEND *
*              WILL OCCUR. IF OMITTED THERE WILL BE NO TEST ON THE    *
*              RETURN CODE.                                           *
*                                                                     *
*        THE REMAINDER OF THE PARAMETER LIST, IF ANY, WILL BE PASSED  *
*        AS A PARAMETER LIST TO THE PROGRAM SPECIFIED IN PAR3.        *
*                                                                     *
***********************************************************************
         SPACE 2
* REGISTER USAGE
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
*        BEGIN SAVE,BASE=RBASE
*  THIS IS THE EXPANSION OF THE RESPOND TSG BEGIN MACRO
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
         LA    15,SAVE
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         LR    R9,R1               SET GR9 -> PARM LIST POINTER.
         L     R11,0(R1)           SET GR11-> PARAMETER LIST.
         LH    R0,0(R11)           SET GR0 = LENGTH OF PARAMETER LIST.
         LA    R1,2(R11)           SET GR1 -> START OF PARAMETER LIST
         AR    R0,R1               SET GR0 -> END OF PARAMETER LIST.
         BAL   R14,SUB1A           LINK TO FIND PARM1
         B     *+14                IF NOT PRESENT THEN GO TO FIND PARM2
         MVC   UT1+40(8),EPLOC     SET DDNAME IN UTI DCB TO BLANKS.
         EX    R15,SETPAR1         STORE OVER-RIDE DDNAME.
         BAL   R14,SUB1            LINK TO FIND PARM2
         B     *+14                IF NOT PRESENT THEN GO TO FIND PARM3
         MVC   UT2+40(8),EPLOC     SET DDNAME IN UT2 DCB TO BLANKS
         EX    R15,SETPAR2         STORE OVER-RIDE DDNAME
         BAL   R14,SUB1            LINK TO FIND PARM3
         B     *+8                 IF NOT PRESENT THEN GO TO FIND PARM4
         EX    R15,SETPAR3         STORE ENTRY POINT NAME.
         BAL   R14,SUB1            LINK TO FIND PARM4
         B     *+16                IF NOT PRESENT THEN GO TO SET NEW P.
         EX    R15,SETPAR4         PACK RETURN CODE LIMIT.
         CVB  R2,DOUBWD            CONVERT TO BINARY
         ST    R2,LIMRC            STORE IN RETURN CODE LIMIT.
         LA    R1,2(R1,R15)        SET GR1 -> START OF REMAINING PARMS.
         LH    R0,0(R11)           SET GR0 = LENGTH OF PARAMETER LIST.
         LA    R15,2(R11)          SET GR15 -> 1ST BYTE OF PARM LIST.
         SR    R15,R1              SET GR15 = -1 * EXCESS CHARACTERS.
         AR    R15,R0              SET GR15 = RESIDUAL COUNT OF PARMS.
         BNM   *+6                 IF NOT MINUS THEN USE
         SR    R15,R15             SET GR15 = 0
         STH   R15,0(R11)          STORE NEW PARAMETER LIST LENGTH.
         BNP   *+10                IF NOT PLUS THEN MUST BE ZERO.
         BCTR  R15,R0              DECREMENT GR15
         EX    R15,SETPAR5         STORE UPDATED PARAMETER LIST.
         SPACE 1
*
*        OBTAIN DYNAMIC CORE FOR JFCBS.
*
         SPACE 1
         GETMAIN R,LV=352          OBTAIN SPACE FOR 2 JFCBS.
         LR    R11,R1              SET GR11 -> UT1 JFCB.
         ST    R11,UT1EXIT         STORE ADDRESS IN EXIT LIST.
         LA    R10,176(R1)         SET GR11 -> UT2 JFCB
         ST    R10,UT2EXIT         STORE ADDRESS IN EXIT LIST.
         MVI   UT1EXIT,X'87'       SET RDJFLB AND OPENJ EXIT.
         MVI   UT2EXIT,X'87'       SET RDJFCB AND OPENJ EXIT.
         SPACE 1
*
*        READ JOB FILE CONTROL BLOCKS, SET UP NEW UT2 JFCB AND OPEN
*
         SPACE 1
         MVI   0(R11),0            SET FOR TEST WHETHER UT1 IS PRESENT.
         MVI   0(R10),0            SET FOR TEST WHETHER UT2 IS PRESENT.
         RDJFCB MF=(E,OPENL)       READ JOB FILE CONTROL BLOCKS.
         CLI  0(R11),0             IS UT1 DCB PRESENT ?
         BE    ERR02               IF NOT THEN ERROR
         CLI   0(R10),0            IS UT2 DCB PRESENT ?
         BE    ERR02               IF NOT THEN ERROR.
         MVC   117(31,R10),117(R11) MOVE VOLUME SERIAL NUMBERS.
         MVC   149(3,R10),149(R11) MOVE JFCB EXTENSION POINTER.
         OPEN  MF=(E,OPENL+4),TYPE=J    OPEN SYSUT2 DATA SET.
         CLOSE MF=(E,CLOSEL)       CLOSE SYSUT2 DATA SET.
         SPACE 1
*
*        RELEASE DYNAMIC SPACE FOR JFCBS.
*
         SPACE 1
         FREEMAIN   R,LV=352,A=(R11)    RELEASE DYNAMIC CORE.
         SPACE 1
*
*        SET UP FOR LINK TO REQUIRED PROGRAM.
*
         SPACE 1
         SR    R15,R15             SET GR15 = 0
         CLI   EPLOC,C' '          IS ENTRY POINT NAME PRESENT ?
         BE    RETURN              IF NOT THEN GO TO RETURN
         CLI   LIMRC,X'FF'         HAS A LIMIT RETURN CODE BEEN STORED?
         BE    XCTL                IF SO THEN GO TO TRANFER CONTROL.
         LR    R1,R9               SET GR1 -> PARM LIST POINTER.
         LINK  SF=(E,LINKL)        LINK TO REQUIRED PROGRAMME.
         C     R15,LIMRC           COMPARE RETURN CODE WITH LIMIT.
         BH    ERR03               IF GREATER THEN ERROR.
*        GOBACK  SAVE,RC=(15)
*  THIS IS THE EXPANSION OF THE RESPOND TSG GOBACK MACRO
RETURN   L     13,4(13)
         L     14,12(13)
         LM    0,12,20(13)
         MVI   12(13),255
         BR    14
         SPACE 1
XCTL     L     R13,4(R13)          SET GR13 -> PREVIOUS SAVE AREA.
         LM    R14,R11,12(R13)     RESTORE REGISTERS.
         XCTL  12,SF=(E,LINKL)     TRANSFER CONTROL.
         EJECT
*
*        SUB-ROUTINE
*
         SPACE 1
SUB1     LA    R1,2(R1,R15)        SET GR1 -> START OF NEXT PARM.
SUB1A    LR    R15,R1              SET GR15 -> FIRST CHARACTER IN PARM.
SUB1C    CR    R15,R0              COMPARE WITH END OF PARM LIST.
         BNL   SUB1B               IF GREATER THEN END OF SCAN.
         CLI   0(R15),C','         IS CHARACTER DELIMITER ?
         BE    SUB1B               IF SO THEN END OF SCAN
         CLI   0(R15),C' '         IS CHARACTER BLANK ?
         BE    SUB1B               IF SO THEN END OF SCAN.
         LA    R15,1(R15)          INCREMENT GR15 FOR NEXT CHARACTER.
         B     SUB1C               GO TO TEST NEXT CHARACTER.
SUB1B    SR    R15,R1              SET GR15 = NO. CHARS SCANNED.
         C     R15,F8              COMPARE WITH MAXIMUM.
         BH    ERR01               IF GREATER THEN ERROR.
         S     R15,F1              DECREMENT GR15 FOR EXECUTE.
         BNM   4(R14)              IF NOT MINUS THEN GO TO EXECUTE.
         BR    R14                 RETURN TO BYPASS EXECUTE.
         SPACE 1
*
*        ERROR ROUTINES.
*
         SPACE 1
ERR01    LA    R15,1
         B     ERR03
ERR02    LA    R15,2
ERR03    ST    R1,ABEND
         L     R1,ABEND+4
         OR    R1,R15
         SVC   13
         SPACE 1
ABEND    DS    F
         DC    X'80',AL3(0)
         SPACE 1
*
*        MODEL STATEMENTS
*
         SPACE 1
SETPAR1  MVC   UT1+40(0),0(R1)     STORE SYSUT1 DDNAME OVER-RIDE.
SETPAR2  MVC   UT2+40(0),0(R1)     STORE SYSUT2 DDNAME OVER-RIDE.
SETPAR3  MVC   EPLOC(0),0(R1)      STORE ENTRY POINT NAME.
SETPAR4  PACK  DOUBWD(8),0(0,R1)   PACK LIMIT RETURN CODE.
SETPAR5  MVC   2(0,R11),0(R1)      MOVE RESIDUAL PARAMETER LIST.
         EJECT
DOUBWD   DS    D
SAVE     DS    18F
UT1      DCB   MACRF=E,EXLST=UT1EXIT,DDNAME=SYSUT1
UT2      DCB   MACRF=E,EXLST=UT2EXIT,DDNAME=SYSUT2
         DC    F'0'                PREVENT X'87' OPTCD.
UT1EXIT  DS    A
UT2EXIT  DS    A
OPENL    OPEN  (UT1,,UT2,OUTPUT),MF=L
CLOSEL   CLOSE (UT2,REREAD),MF=L
LINKL    LINK  EPLOC=EPLOC,SF=L
F1       DC    F'1'
F8       DC    F'8'
LIMRC    DC    4X'FF'
EPLOC    DC    CL8' '
         END
