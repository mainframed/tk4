         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
*
         TITLE 'XM05 - HASP INTERNAL READER / CONSOLE INTERFACE       '
XM050112 CSECT
         ENTRY XM050101            INSERT MODULE NUMBER CHANGING
XM050101 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM050112  PROGRAMMER PAUL.A.DANIELSON   ASSIGNED 11/09/72 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  THIS PROGRAM PROVIDES AN INTERFACE BETWEEN THE HASP INTERNAL       *
*  READER AND THE SYSTEM CONSOLE TO ALLOW PROCEDURES TO BE INITIALED  *
*  BY THE OPERATOR VIA THE SYSTEM CONSOLE UNDER HASP.                 *
*                                                                     *
*  THE OPERATOR IS REQUIRED TO REPLY TO THE OUTSTANDING REPLY WITH    *
*  THE PROCEDURE NAME AND REQUIRED PARAMETERS.                        *
*                                                                     *
*  THE FORMAT OF THE INPUT COMMAND IS AS FOLLOWS ---                  *
*        PROCNAME,A,01,H,PARM=ABC,PARM2=BCD
*
*        PROCNAME   CATALOGUED PROCEDURE NAME -MUST BE CODED
*        A          CLASS     DEFAULT IS A
*        01         PRIORITY  DEFAULT IS 1
*        H          IF CODED - TYPRUN=HOLD   DEFAULT NOT TYPRUN=HOLD
*        PARM1      SYMBOLIC PARAMETER
*        PARM2        - - DITTO - -
*
*        ANY OF THE FIELDS MAY BE OMITTED AND THE DEFAULT IS TAKEN.
*        COMMAS INDICATE THE OMISSION OF ANY OF THE POSITIONAL
*        PARAMETERS, IF NO POSITIONAL PARAMETERS FOLLOW AN OMITTED
*        ONE A COMMA NEED NOT BE CODED.
*   E.G.
*   ----  U036,D,,,DRIVE=2B0
*
*   COULD BE CODED AS -
*
*         U036,D,DRIVE=2B0
*
*
*
*
*
**  AMENDMENT TO MODULE XM050112 BY PAUL ANTON DANIELSON.
*
**  ASSIGNED 19/04/73, EFFECTIVE 30/04/73 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT PLACE XM05 ON HASP HOLD QUEUE PRIOR TO
*   -------------------- CLOSING DOWN XM05.
*
*
***********************************************************************
         EJECT
         ISEQ  73,80
         PROGIN
         OPEN  (INTRDR,(OUTPUT))   OPEN HASP INTERNAL READER
*
**       INITIALISE ALL FIELDS
*        ---------------------
BA01     EQU   *
         PUT   INTRDR,CCO080       RELEASE PREVIOUS JOB
         MVC   SCO080+2(8),=CL122' '    INITIALISE JOBNAME
         MVI   CLASS,C'A'                  ' '     CLASS
         MVC   PRTY(2),=C'01'         ' '      PRIORITY
         MVC   TYPRUN(12),=CL122' ' BLANK OUT TYPRUN=HOLD FIELD
         MVC   SCI122,=CL122' '    BLANK OUT CONSOLE INPUT FIELD
*
         MVC   CCO080X+11(4),=C'EXEC'   PUT EXEC ON EXEC CARD
*
**       ISSUE WTOR AND WAIT FOR OPERATOR TO REPLY
*        -----------------------------------------
         WTOR  'XM05  SPECIFY JOB PARAMETERS',SCI122,122,ECB004
         WAIT  ECB=ECB004          WAIT FOR OPERATOR TO REPLY
         XC    ECB004,ECB004       RESET ECB TO ZEROES
         OC    SCI122,=CL122' '    SET REPLY TO UPPER CASE
         LA    R4,122              PUT NO OF BYTES INTO BCT REG.
         LA    R3,SCI122           POINT  TO START OF REPLY AREA
BA05     EQU   *
         CLI   0(R3),C' '          Q. IS THIS BYTE BLANK
         BNE   BA06                A. NO - REPLY FOUND
         LA    R3,1(R3)            POINT AT NEXT BYTE OF INPUT REPLY
         BCT   R4,BA05             LOOP 122 TIMES IF NECESSARY
         B     BA80                PROCNAME NOT FOUND - ERROR
*
**       FIND PROCNAME AND MOVE TO JOB AND EXEC CARDS
*        --------------------------------------------
BA06     EQU   *
         CLC   0(2,R3),=X'5BC5'    Q.DOLLAR E  - END OF INPUTS
         BE    BA99                A. YES - GO CLOSE INTERNAL READER
         BAL   R10,B5001           FIND DELIMITER
         CLM   R15,1,=X'07'        Q. PROCNAME MORE THAN 8 BYTES LONG
         BH    BA80                A. YES - ERROR
*
         LA    R12,CCO080X+2       POINT TO STEPNAME ON EXEC CARD
         EX    R15,MOVE1           MOVE IN STEPNAME
*
         LA    R12,CCO080X+16      POINT TO PROC NAME FIELD ON EXEC CD
         EX    R15,MOVE1           MOVE IN PROC NAME TO EXEC CARD
*
         LA    R11,1(R12,R15)      POINT TO NEXT AVAILABLE BYTE ON EXEC
         LA    R12,SCO080+2        POINT TO JOBNAME FIELD
         EX    R15,MOVE1           MOVE PROCNAME TO JOB CARD
         LA    R3,1(R1)            POINT TO NEXT FIELD OF INPUT
*
**       GENERATE JOB CARD FROM INPUT PARAMETERS
*        ---------------------------------------
         CLM   R2,1,=C' '          Q. PROCNAME ONLY INPUT
         BE    BA30                A. YES GO WRITE OUT DEFAULT JOB CARD
*
**       MOVE CLASS TO JOB CARD
*        ----------------------
         BAL   R10,B5001           FIND COMMA,BLANK,OR = SIGN
         LTR   R1,R1               Q. ANY FOUND
         BZ    BA80                A. NO - ERROR
*
         CLM   R2,1,=C'='          Q. EQUAL FOUND (NO CLASS,PRTY,HOLD)
         BE    BA30                A. YES GO WRITE OUT DEFALT JOB CARD
*
         LTR   R15,R15             Q. LENGTH OF FIELD ZERO
         BM    BA08                A. YES LEAVE AS DEFAULT CLASS A
         BNZ   BA80                A. MORE THAN 1 BYTE LONG - ERROR
         LA    R12,CLASS           POINT TO CLASS FIELD IN JOB CARD
         EX    R15,MOVE1           MOVE CLASS INTO JOB CARD
BA08     EQU   *
         CLM   R2,1,=C','          Q. DOES PRTY FOLLOW
         BNE   BA17                A. NO - GO WRITE OUT JOB CARD
*
**       MOVE PRIORITY TO JOB CARD
*        -------------------------
         LA    R3,1(R1)            POINT TO PRTY FIELD IN INPUT
         BAL   R10,B5001           FIND  BLANK COMMA OR EQUAL SIGN
         LTR   R1,R1               Q. ANY FOUND
         BZ    BA80                A. NO,ERROR
*
         CLM   R2,1,=C'='          Q. = SIGN FOUND (NO PRTY,HOLD)
         BE    BA30                A. YES  GO WRITE OUT JOB CARD
*
         LTR   R15,R15             Q. IS PRTY PRESENT
         BM    BA12                A. NO LEAVE AS DEFAULT
         CLM   R15,1,=X'01'        Q. MORE THAN TWO BYTES
         BH    BA80                A. YES,ERROR
         BL    BA10                A. LENGTH 1
         LA    R12,PRTY            POINT TO PRIORITY
         B     BA11                GO MOVE PRIORITY TO JOB CARD
BA10     EQU   *
         LA    R12,PRTY+1          POINT TO SECOND BYTE OF PRIORITY
BA11     EQU   *
         EX    R15,MOVE1           MOVE PRIORITY TO JOB CARD
BA12     EQU   *
         CLM   R2,1,=C','          Q. ANY FIELDS TO FOLLOW
         BNE   BA17                A. NO - GO WRITE OUT JOB CARD
*
**       MOVE TYPRUN=HOLD TO JOB CARD
*        ----------------------------
         LA    R3,1(R1)            POINT TO HOLD FIELD
         BAL   R10,B5001           FIND BLANK,COMMA OR = SIGN
         LTR   R1,R1               Q. ANY FOUND
         BZ    BA80                A. NO - ERROR
*
         CLM   R2,1,=C'='          Q. TYPRUN=HOLD REQUIRED
         BE    BA30                A. NO - GO WRITE OUT JOB CARD
*
         LTR   R15,R15             Q. HOLD FIELD PRESENT
         BM    BA17                A. NO,LEAVE BLANK
         BNZ   BA80                A. NO,FIELD TOO LONG - ERROR
         CLI   0(R3),C'H'          Q. IS HOLD FIELD VALID
         BNE   BA80                A. NO - ERROR
         MVC   TYPRUN(12),=C',TYPRUN=HOLD' PUT TYPRUN=HOLD ON JOB CARD
*
BA17     EQU   *
         LA    R3,1(R1)            POINT TO SYMBOLIC PARAMETERS
         BAL   R10,B5001           CHECK FOR SYMBOLIC PARAMETERS
         LTR   R1,R1               Q. ANY DELIMETER FOUND
         BZ    BA80                A. NO - ERROR
*
**       WRITE JOB CARD TO HASP INTERNAL READER
*        --------------------------------------
BA30     EQU   *
         PUT   INTRDR,SCO080       WRITE OUT JOB CARD
*
**       BUILD UP 'EXEC' CARD (ADD SYMBOLIC PARAMETERS)
*        ----------------------------------------------
         CLI   0(R3),C' '          Q. ANY SYMBOLIC PARAMETERS
         BE    BA40                A. NO - GO WRITE OUT EXEC CARD
*
         MVI   0(R11),C','         SYMBOLIC PARMS TO FOLLOW
         LA    R11,1(R11)          POINT TO NEXT BYTE ON EXEC CARD
*
**       FIND  LENGTH OF SYMBOLIC PARAMETERS
*        -----------------------------------
         LA    R1,SCI122+121       POINT TO END OF INPUT
BA33     EQU   *
         CLI   0(R1),C' '          Q. NON BLANK FOUND (SYMBOLIC PARAM)
         BNE   BA35                A. YES - CALCULATE LENGTH
         BCT   R1,BA33                KEEP LOOKING
*
BA35     EQU   *
         LA    R2,0(R3)            FIND LENGTH OF -
         SR    R1,R2               SYMBOLIC PARAMETERS
         LR    R2,R1               PUT IN REG 2
*
         LA    R12,0(R2,R11)       CALCULATE SPACE LEFT ON EXEC CARD
         CL    R12,=A(CCO080X+69)    Q. ENOUGH SPACE FOR PARAMETERS
         BH    BA43                  A. NO - PUT SOME ON CONT'N CARD
*
         EX    R2,MOVE2            MOVE SYMBOLIC PARAMS TO EXEC CARD
BA40     EQU   *
         BAL   R10,B5101           GO WRITE OUT EXEC CARD
         B     BA01                GO TO READ NEXT INPUT
*
**       CONTINUATION CARDS REQUIRED
*        ---------------------------
BA43     EQU   *
         L     R12,=A(CCO080X+69)  POINT TO END OF CARD
         SR    R12,R11             SPACE ON EXEC CARD NOW IN REG 12
BA44     EQU   *
         LA    R15,0(R3,R12)         POINT TO LAST BYTE IN INPUT TO FIT
         CLI   0(R15),C','         Q. END OF PARAMETER
         BE    BA46                A. YES - SET UP FIRST EXEC CARD
         BCT   R12,BA44            SCAN BACK ALONG INPUT FOR COMMA,LOOP
*
BA46     EQU   *
         EX    R12,MOVE2           MOVE INPUT TO EXEC CARD
         LA    R3,1(R3,R12)        POINT AT REMAINING PARAMETERS
         BAL   R10,B5101           WRITE OUT EXEC CARD
         SR    R2,R12              GET REMAINING LENGTH OF INPUT
         BCTR  R2,R0               MINUS ONE FOR EXECUTED MOVE
*
         LA    R11,CCO080X+3       POINT TO AVAILABLE OUTPUT AREA
         EX    R2,MOVE2            MOVE SYMBOLIC TO CONTINUATION CARD
         BAL   R10,B5101           WRITE OUT CONTINUATION CARD
         B     BA01                GO TO READ NEXT INPUT
*
         EJECT
*
***********************************************************************
*                                                                     *
*  B5001- SUBROUTINE FINDS DELIMITERS BLANK,COMMA OR EQUALS. ON ENTRY *
*  -----  R3 POINTS TO START OF FIELD,R4 CONTAINS LENGTH.             *
*         ON OUTPUT R1 POINTS TO DELIMETER, OR ZERO IF NONE FOUND.    *
*         R2 CONTAINS DELIMITER, R4 REMAINING LENGTH OF FIELD,R15     *
*         CONTAINS LENGTH OF PARAMETE FOUND.    LINKAGE IS BY REG 10. *
*                                                                     *
***********************************************************************
B5001    EQU   *
         EX    R4,TRANS            FIND DELIMETER
         BNZ   B5002               DELIMITER FOUND
*
         SR    R1,R1               INDICATE DELIMITER NOT FOUND
         BR    R10                 RETURN
*
B5002    EQU   *
         LA    R1,0(R1)            ENSURE HIGH ORDER BYTE IS ZERO
         LR    R15,R1              PUT LENGTH OF -
         SR    R15,R3              PARAMETER FOUND INTO REG 15
         SR    R4,R15              UPDATE REMAINING LENGTH OF INPUT
         BCTR  R15,R0              SUBTRACT 1 FOR EXECUTED INSTRUCTIONS
         BR    R10                 RETURN
*
***                                                                ****
*                                                                     *
*  B5101 - SUBROUTINE WRITE EXEC CARD AND ANY CONTINUATION. BLANKS    *
*          OUT ALL BUT 1ST TWO BYTES AFTER EACH PUT.                  *
*                                            LINKAGE BY REG 12.       *
*                                                                     *
***                                                                   *
B5101    EQU   *
         PUT   INTRDR,CCO080X      WRITE TO INTERNAL READER
         MVC   CCO080X+2(78),=CL122' '  BLANK OUT EXEC CARD
         BR    R10                 RETURN
*
         EJECT
*
**       ERROR IN INPUT PARAMETERS
*        -------------------------
BA80     EQU   *
         WTO   'XM05 - ERROR IN JOB PARAMETERS'
         B     BA01
*                                                                   0.1
**       END OF INPUT. PUT XM05 ONTO HOLD QUEUE.                    0.1
*        ---------------------------------------                    0.1
BA99     EQU   *                                                    0.1
         MVC   SCO080+2(4),=C'XM05' MOVE JOBNAME TO CARD            0.1
         MVC   TYPRUN(12),=C',TYPRUN=HOLD'                          0.1
         MVI   CLASS,C'N'          MOVE CLASS TO JOB CARD           0.1
         PUT   INTRDR,SCO080       WRITE OUT JOB CARD               0.1
         MVC   CCO080X+2(4),=C'XM05' MOVE STEPNAME TO EXEC CARD     0.1
         MVC   CCO080X+16(4),=C'XM05' MOVE PROCNAME TO EXEC CARD    0.1
         PUT   INTRDR,CCO080X      WRITE OUT EXEC CARD              0.1
         PUT   INTRDR,CCO080       TERMINATE JOB                    0.1
*                                                                   0.1
         CLOSE (INTRDR)            CLOSE INTERNAL READER            0.1
*
         PROGOUT    0               END OF JOB
*
*
**       WORK AREAS ,I/O AREAS , CONSTANTS, DCB'S ETC.
*        ---------------------------------------------
         LTORG
         SPACE 3
*
**       TRANSLATE AND TEST TABLE
*        ------------------------
CXT256   DS    0CL256              TRANSLATE AND TEST TABLE
         DC    64X'00'
BLANK    DC    X'40'               BLANK
         DC    42X'00'
COMMA    DC    X'6B'               COMMA
         DC    18X'00'
EQUAL    DC    X'7E'               EQUALS SIGN
         DC    129X'00'
*
ECB004   DC    F'0'                ECB FOR WTOR
SCO080   DS    0CL80               JOB CARD
         DC    C'//'
         DS    CL8                 JOB NAME (NOTE... DOUBE WORD ALIGNED
         DC    C'  '                         -------
         DC    C'JOB'
         DC    C' '
         DC    C'CLASS='           CLASS
CLASS    DC    C'A'
         DC    C',PRTY='           PRIORITY
PRTY     DC    C'01'
TYPRUN   DC    CL49' '             TYPRUN FIELD
SCI122   DS    CL122               REPLY INPUT AREA
CCO080X  DC    CL80'//'            EXEC CARD
CCO080   DC    CL80'/*EOF'         END OF JOB INDICATOR
*
**      'EXECUTED' INSTRUCTIONS
*       -----------------------
TRANS    TRT   0(0,R3),CXT256
MOVE1    MVC   0(0,R12),0(R3)      MOVE INFORMATION TO JOB CARD
MOVE2    MVC   0(0,R11),0(R3)      MOVE PARAMS TO EXEC CARD
*
**       INTERNAL READER DCB
*        -------------------
INTRDR   DCB   DSORG=PS,MACRF=(PM),DDNAME=INRDR,BLKSIZE=80,         0.1X
               RECFM=F,BUFNO=1                                      0.1
         END
