DEBE     TITLE 'MK 2 16000GT - STRIPPED-DOWN && SOUPED-UP BY GREG LOCK,X
                MHS, NOTTINGHAM.'
*
**  THIS VERSION OF DEBE HAS HAD ALL CARD FUNCTIONS REMOVED AND THE
*** MAXIMUM TAPE BLOCKSIZE REDUCED FROM 32K TO 10K, AND WILL FIT INTO
**  A 16K PARTITION.
*
         SPACE 3
DEBE     START 0
BEGIN    BALR  12,0
         USING *,12
         SAVE  (14,12)
         USING SAVEAREA,13        ESTABLISH 13 AS BASE REG AND SAVE    X
               AREA POINTER
         LA    14,SAVEAREA-1
         LA    14,1(,14)          REG 14 NOW POINTS TO SAVE AREA
         ST    13,4(,14)          STORE BACK CHAIN POINTER
         ST    14,8(,13)          STORE FORWARD CHAIN POINTER
         LR    13,14              REG 13 NOW BASE AND SAVE POINTER
         SPACE 1
*  GET OS POINTERS
         L     3,16               GET CVT POINTER
         L     2,0(0,3)           GET POINTER TO TCB POINTERS
         L     3,4(0,2)           GET TCB POINTER
*  GET PROTECT KEY FROM TCB FOR THE DEB'S
         OC    TAPDEB+24(1),28(3)
*  STORE TCB ADDRESS INTO DEBS
         ST    3,TAPDEB
*  GET TIOT ADDRESS
         L     2,12(,3)           GET ADDRESS OF TIOT
         ST    2,TIOTADR          STORE IT
*  WRITE 'REPLY "I"' MESSAGE -----
*     NOTE THAT NO WAIT IS ISSUED
         SPACE 1
TERMMSG  NI    JECB,X'00'               CLEAR ECB
         WTOR  'OEH802I REPLY "I"',JOB,1,JECB
         CLI   IOTAPSW,C'Y'
         BE    IOTAPA
         SPACE 1
*  ALL ROUTINES RETURN HERE WHEN THEY ARE FINISHED.
         SPACE 1
ASKAGN   EQU   *
*  RESTORE TDINCCW IN CASE TP OVERLAYED IT
         MVC   TDINCCW(8),TDRESTIN
*  RESET TP/TH SWITCHES
         NI    TD3+1,X'0F'        SET BC 0 TO BC 15
         NI    TD6+1,X'0F'
*  RESET TS/TSE SWITCH
         OI    TSHICOMP+1,X'20'
         XC    TSREPLY(56),TSREPLY
*  WRITE 'REPLY PROG ID' MESSAGE
         MVC   ID(3),=C'   '
         WTOR  'OEH803D REPLY PROG-ID',ID,3,REPLYECB
         BAL   11,WAITANS         BRANCH TO WAIT ROUTINE
         SPACE 1
*  INTERPRET PROGRAM ID
         SPACE 1
         OC    ID(3),=C'   '      CONVERT REPLY TO UPPER CASE
         CLC   ID(3),=C'END'
         BE    EOJ
         CLC   ID(3),=C'WTL'
         BE    WTL
         CLC   ID(3),=C'TSE'
         BE    TSE
         CLC   ID(3),=C'RUN'
         BE    RUN
         CLC   ID(3),=C'BF '
         BE    BF
         CLC   ID(3),=C'BS '
         BE    BS
         CLC   ID(3),=C'RW '
         BE    RW
         CLC   ID(3),=C'SF '
         BE    SF
         CLC   ID(3),=C'SR '
         BE    SR
         CLC   ID(3),=C'TH '
         BE    TD
         CLC   ID(3),=C'TP '
         BE    TP
         CLC   ID(3),=C'WT '
         BE    WT
         CLC   ID(3),=C'TS '
         BE    TS
         CLC   ID(3),=C'TD '
         BE    TDUMP
         CLC   ID(3),=C'E  '
         BE    EOJ
         WTO   'OEH804I BAD ID - RETRY'
         B     ASKAGN
         EJECT
*  END OF JOB ROUTINE
         SPACE 1
EOJ      EQU   *
*  RELOAD SAVE AREA POINTER
ABEOJ    L     13,4(0,13)
         RETURN (14,12),RC=0
         EJECT
*  BACKSPACE A FILE ON TAPE
         SPACE 1
BF        EQU   *
         BAL   10,TAPADSET        GO GET OUTPUT TAPE
         MVC   TAPCCW+0(8),BFCCW      MOVE BACKSPACE CCW TO OUTPUT IOB
         B    SFEXCP
         SPACE 1
*  FORWARD SPACE A FILE ON TAPE
         SPACE 1
SF       EQU   *
         BAL   10,TAPADSET      GO GET OUTPUT TAPE
         MVC   TAPCCW+0(8),SFCCW  MOVE FORWARD SPACE CCW TO IOB
SFEXCP   EQU   *
         BAL   11,IOTAP           GO SPACE THE FILE
         CLI   TAPECB,X'7F'       WAS I/O SUCCESSFUL
         BE    ASKAGN
         TM    TAPSTAT+4,X'02'   BACKED INTO LOAD POINT
         BC    1,TAPERROR  YES, BRANCH
         B     ASKAGN
         EJECT
*  BACKSPACE NNNN RECORDS ON TAPE
         SPACE 1
BS       EQU   *
         SPACE 1
*  SKIP NNNN RECORDS ON TAPE
         SPACE 1
SR       EQU   *
         BAL   10,TAPADSET        GO GET OUTPUT TAPE
         MVC   FINAL(10),=X'F0F0F0F0F0FFFFFFFFFF'  CLEAR REPLY AREA
         WTOR  'OEH805D REPLY NO. RECS TO SKIP - nnnnn',               X
               TEMP,5,REPLYECB
         BAL   11,WAITANS         WAIT FOR REPLY
BSREPLY  MVC   FINAL(10),FINAL+1  SHIFT REPLY ONE TO THE LEFT
         CLI   TEMP,X'FF'         REACHED END OF REPLY
         BNE   BSREPLY
         PACK  TDWK,FINAL(5)      CONVERT REC NO TO BINARY
         CVB   6,TDWK
         CLC   ID(2),=C'SR'       WAS REQUEST SKIP RECORDS
         BE    SREX               FALL THROUGH FOR BACKSPACE
         MVC   TAPCCW+0(8),BSCCW  MOVE BACKSPACE CCW TO OUTPUT IOB
BSAGN    EQU   *
         BAL   11,IOTAP           GO SPACE THE FILE
         CLI   TAPECB,X'7F'       WAS IT A SUCCESS
         BE    BCT6
         TM    TAPSTAT+4,X'02'      AT LOAD POINT
         BC    1,TAPERROR    YES, BRANCH
BCT6     EQU   *
         BCT   6,BSAGN            DECREMENT, TEST REC NO
         B     ASKAGN
SREX     MVC   TAPCCW+0(8),SRCCW  MOVE FORWARD SPACE CCW TO OUTPUT IOB
         B     BSAGN
         EJECT
*  PREPARE TO WRITE TAPE MARK
CTEOJ    EQU   *
         MVC   TAPCCW+0(8),WTCCW  MOVE TAPE MARK CCW TO OUTPUT IOB
         BAL   11,IOTAP           WRITE A TAPE MARK
         CLI   TAPECB,X'7F'       WAS IT A SUCCESS
         BNE   TAPERROR
         CLC   ID(3),=C'WTL'       WAS IT INIT TAPE?
         BE    RUN                 YES - UNLOAD
         B     ASKAGN
         EJECT
*  PRINT A TAPE
         SPACE 1
TP       EQU   *
*  TP USES THE TD ROUTINE WITHOUT THE HEX-TO-CHARACTER CONVERSION
         OI    TD3+1,X'F0'        SET BRANCHES TO BC 15
         OI    TD6+1,X'F0'
         MVC   TDINCCW(8),TPINCCW RESTORE CCW
         SPACE 1
*  PRINT A TAPE IN HEX
         SPACE 1
TD       EQU   *
         BAL   9,OPENPRNT         OPEN THE PRINTER
*  SET UP TAPE'S DCB AND DEB
         BAL   10,TAPADSET        GO GET THE INPUT TAPE
         MVC   TAPCCW(8),TDINCCW
         BAL   6,SKIPTO1          SKIP THE PRINTER TO 1
         SP    RECCNT(3),RECCNT(3) SET RECORD COUNT TO ZERO
TDLOOP   EQU   *
         BAL   11,IOTAP           GO READ THE TAPE
         CLI   TAPECB,X'7F'        WAS IT SUCCESSFUL
         BE    TD1
         TM    TAPSTAT+4,X'01'     TEST FOR EOF
         BC    1,TDEOJ
         B     TAPERROR
TD1      LH    2,TAPSTAT+6          GET RESIDUAL COUNT
         LH    3,TDINCCW+6         GET BEGINING COUNT
         SR    3,2                 GET BYTES READ IN
         CVD   3,TDWK             STORE RECORD LENGTH
         MVI   TDOUTAR,C' '       CLEAR THE PRINT AREA
         MVC   TDOUTAR+1(131),TDOUTAR
         MVC   TDOUTAR+116(16),RECHDG MOVE EDIT MASK TO PRINT AREA
         ED    TDOUTAR+126(6),TDWK+5 EDIT RECORD LENGTH
         AP    RECCNT(3),COND1(1) ADD 1 TO RECORD COUNT
         ED    TDOUTAR+117(6),RECCNT EDIT RECORD COUNT
         LA    2,TDAREA           LOAD ADDRESS OF TAPE AREA
         LA    5,TDAREA
         LA    7,100              LOAD NUMBER OF TAPE CHARACTERS
*                                 PER PRINT LINE - THIS IS 100 FOR TP
*                                 AND 50 FOR TD
TD6      BC    0,TD7              BC 15 FOR TP, BC 0 FOR TD
*  FOLLOWING UNPACKS FOR TD
*  R2 POINTS TO THE INPUT AREA
*  R5 POINTS TO THE OUTPUT AREA
         L     5,=A(TDAREA2)      LOAD ADDRESS OF WORK AREA
         LA    7,50               LOAD NUMBER OF CHAR/PRINT LINE
         BAL   14,UNPK            GO FORMAT TAPE TO HEX REPRESENTATION
TD7      EQU   *
         CR    3,7                COMPARE REMAINING TAPE LENGTH WITH
*                                 PRINT WIDTH
         BL    TD3                BRANCH IF WILL FIT INTO PRINT LINE
         MVC   TDOUTAR(100),0(5)  MOVE RECORD TO PRINT AREA
*                                 REG 5 POINTS TO TDAREA FOR TP
*                                 REG 5 POINTS TO TDAREA2 FOR TD
TDPR     EQU   *
         BAL   9,TDPRINT          GO PRINT A LINE
         MVI   TDOUTAR,C' '       CLEAR THE PRINT AREA
         MVC   TDOUTAR+1(131),TDOUTAR
         SR    3,7                SUBTRACT PRINT WIDTH FROM REMAINING
*                                 TAPE LENGTH
         BC    12,TD9             BRANCH IF ENTIRE TAPE REC HAS BEEN
*                                 PRINTED
         AR    2,7                ADD PRINT WIDTH TO INPUT AREA POINTER
         AR    5,7                SAME FOR OUTPUT AREA POINTER
         B     TD6
TD3      BC    0,TD4              BC 15 FOR TP, BC 0 FOR TD
         LR    11,3               LOAD REMAINING TAPE LENGTH
         AR    11,3          DOUBLE IT BECAUSE IT'S UNPACKED
         BCTR  11,0          DECREMENT ONE FOR THE MOVE
         EX    11,MVCOML          MOVE LAST OF TAPE TO PRINT AREA
         B     TDPR
TD4      EQU   *
         BCTR  3,0                DECREMENT LENGTH BY 1
         EX    3,MVCOML           MOVE TAPE TO PRINT AREA
         EX    3,TRCOML
         B     TDPR
MVCOML   MVC   TDOUTAR(0),0(5)
TRCOML   TR    TDOUTAR(0),TRTDTAB
*  CONVERT TAPE FROM CHARACTER TO HEX
UNPK     EQU   *
         UNPK  0(15,5),0(8,2)
         UNPK  14(15,5),7(8,2)
         UNPK  28(15,5),14(8,2)
         UNPK  42(15,5),21(8,2)
         UNPK  56(15,5),28(8,2)
         UNPK  70(15,5),35(8,2)
         UNPK  84(15,5),42(8,2)
         UNPK  98(3,5),49(2,2)
         TR    0(100,5),TDPTABLE-240
         BR    14
TD9      EQU   *
         BAL   10,SPACE1          SPACE THE PRINTER
         B     TDLOOP
TDEOJ    EQU   *
         B     ASKAGN
         EJECT
*        TAPE SCAN ROUTINE ADDED BY GREG LOCK - MHS, NOTTM.
TS       EQU   *
         BAL   10,TAPADSET
         SP    RECCNT(3),RECCNT(3)
         MVC   TAPCCW+0(8),TDINCCW
TSAGIN1  MVC   FINAL(10),=X'F0F0F0F0F0FFFFFFFFFF'
         WTOR  '0EH820D REPLY START BYTE - nnnn',TEMP,4,REPLYECB
         BAL   11,WAITANS
TSAGIN11 MVC   FINAL(10),FINAL+1
         CLI   TEMP,X'FF'
         BNE   TSAGIN11
         CLC   FINAL(5),=C'04096'
         BH    TSAGIN1
         PACK  DWORD(8),FINAL(5)
         CVB   5,DWORD
         BCTR  5,0
         STH   5,TSCOMP+2
         MVZ   TSCOMP+2,=X'20'
TSAGIN2  MVC   FINAL(10),=X'F0F0F0F0F0FFFFFFFFFF'
         WTOR  '0EH821D REPLY SCAN LENGTH - nn',TEMP,2,REPLYECB
         BAL   11,WAITANS
TSAGIN21 MVC   FINAL(10),FINAL+1
         CLI   TEMP,X'FF'
         BNE   TSAGIN21
         CLC   FINAL(5),=C'00056'
         BH    TSAGIN2
         PACK  DWORD(8),FINAL(5)
         CVB   7,DWORD
         BCTR  7,0
         STC   7,TSCOMP+1
         AR    5,7
         LA    5,1(5)
TSAGIN3  WTOR  '0EH824D REPLY H(HEX) OR C(CHAR)',TSHCBYTE,1,           X
               REPLYECB
         BAL   11,WAITANS
         OI    TSHCBYTE,C' '
         CLI   TSHCBYTE,C'H'
         BE    TSHCOK
         CLI   TSHCBYTE,C'C'
         BNE   TSAGIN3
TSHCOK   WTOR  '0EH822D REPLY SCAN DATA - < 57 DIGITS',TSREPLY,56,     X
               REPLYECB
         BAL   11,WAITANS
         CLI   TSHCBYTE,C'H'
         BE    TSXCONV
TSLOOP   EQU   *
         BAL   11,IOTAP
         CLI   TAPECB,X'7F'
         BE    TS1
         TM    TAPSTAT+4,X'01'
         BC    1,TSEOJ
         B     TAPERROR
TS1      EQU   *
         AP    RECCNT(3),COND1(1)
         LH    2,TAPSTAT+6
         LH    3,TDINCCW+6
         SR    3,2
         CR    3,5
         BL    TSLOOP
         LA    2,TDAREA
TSCOMP   EQU   *
         CLC   0(1,2),TSREPLY
         BE    TSEQUAL
TSHICOMP BH    TSHIGH
         B     TSLOOP
TSEQUAL  MVC   TSMATCH+16(5),=C'EQUAL'
TSCOMN   UNPK  TSMATCH+36(5),RECCNT(3)
         OI    TSMATCH+40,X'F0'
TSMATCH  WTO   '0EH823I MATCH FOUND - BLOCK NNNNN'
         B     ASKAGN
TSEOJ    EQU   *
         WTO   '0EH825I EOF - NO MATCH'
         B     ASKAGN
TSHIGH   MVC   TSMATCH+16(5),=C'HIGH '
         B     TSCOMN
TSE      NI    TSHICOMP+1,X'0F'
         B     TS
TSXCONV  CLC   FINAL(5),=C'00028'
         BH    TSAGIN2
         MVC   TDAREA2(56),TSREPLY
         TR    TDAREA2(56),TSXCTAB
         PACK  TDAREA2+56(8),TDAREA2(15)
         PACK  TDAREA2+63(8),TDAREA2+14(15)
         PACK  TDAREA2+70(8),TDAREA2+28(15)
         PACK  TDAREA2+77(8),TDAREA2+42(15)  DATA IN +56 - +83
         UNPK  TDAREA2(15),TDAREA2+56(8)
         UNPK  TDAREA2+14(15),TDAREA2+63(8)
         UNPK  TDAREA2+28(15),TDAREA2+70(8)
         UNPK  TDAREA2+42(15),TDAREA2+77(8)
         TR    TDAREA2(56),TDPTABLE-240
         EX    7,TSCHECK
         BNE   TSAGIN3
         MVC   TSREPLY(28),TDAREA2+56
         B     TSLOOP
TSCHECK  CLC   TSREPLY(1),TDAREA2
         EJECT
*        TAPE DUMP ROUTINE ADDED BY GREG LOCK - MHS, NOTTM
*  PRINT A TAPE IN TRANSLATED DUMP FORMAT
         SPACE 1
TDUMP    EQU   *
         BAL   9,OPENPRNT
         BAL   10,TAPADSET
         MVC   TAPCCW+0(8),TDINCCW
         BAL   6,SKIPTO1
         SP    RECCNT(3),RECCNT(3)
TDLOOP2  EQU   *
         BAL   11,IOTAP
         CLI   TAPECB,X'7F'
         BE    TD21
         TM    TAPSTAT+4,X'01'
         BC    1,TDEOJ2
         B     TAPERROR
TD21     EQU   *
         LH    2,TAPSTAT+6
         LH    3,TDINCCW+6
         SR    3,2
         CVD   3,TDWK
         MVI   TDOUTAR,C' '
         MVC   TDOUTAR+1(131),TDOUTAR
         MVC   TDOUTAR+116(16),RECHDG
         ED    TDOUTAR+126(6),TDWK+5
         SR    5,5
         AP    RECCNT(3),COND1(1)
         ED    TDOUTAR+117(6),RECCNT
         LA    2,TDAREA
         LA    7,32
TD26     UNPK  TDAREA2+8(9),0(5,2)
         UNPK  TDAREA2+17(9),4(5,2)
         UNPK  TDAREA2+26(9),8(5,2)
         UNPK  TDAREA2+35(9),12(5,2)
         UNPK  TDAREA2+45(9),16(5,2)
         UNPK  TDAREA2+54(9),20(5,2)
         UNPK  TDAREA2+63(9),24(5,2)
         UNPK  TDAREA2+72(9),28(5,2)
         ST    5,DWORD
         UNPK  TDAREA2(7),DWORD(5)
         LA    5,32(5)
         TR    0(32,2),TRTDTAB
         TR    TDAREA2(81),TDPTABLE-240
         MVC   TDAREA2+6(2),=C'  '
         MVI   TDAREA2+16,C' '
         MVI   TDAREA2+25,C' '
         MVI   TDAREA2+34,C' '
         MVC   TDAREA2+43(2),=C'  '
         MVI   TDAREA2+53,C' '
         MVI   TDAREA2+62,C' '
         MVI   TDAREA2+71,C' '
         MVC   TDAREA2+80(2),=C'  '
         CR    3,7
         BL    TD23
         MVC   TDAREA2+82(32),0(2)
         MVC   TDOUTAR(114),TDAREA2
TDPR2    EQU   *
         BAL   9,TDPRINT
         MVI   TDOUTAR,C' '
         MVC   TDOUTAR+1(131),TDOUTAR
         SR    3,7
         BC    12,TD29
         AR    2,7
         B     TD26
TD23     EQU   *
         STC   3,TDBYTE
         TR    TDBYTE,LENTAB
         SR    11,11
         IC    11,TDBYTE
         BCTR  3,0
         BCTR  11,0
         EX    11,TD2MV1
         EX    3,TD2MV2
         B     TDPR2
*
TD2MV1   MVC   TDOUTAR(1),TDAREA2
*
TD2MV2   MVC   TDOUTAR+82(1),0(2)
*
TD29     BAL   10,SPACE1
         B     TDLOOP2
TDEOJ2   EQU   *
         B     ASKAGN
         EJECT
TAPERROR EQU   *
         WTO   'OEH808I TAPE ERR'
         B     ASKAGN
         SPACE 1
         EJECT
*  REWIND A TAPE
         SPACE 1
RW       EQU   *
         BAL   10,TAPADSET        GO GET OUTPUT TAPE
         MVC   TAPCCW+0(8),RWCCW  MOVE REWIND CCW TO OUTPUT IOB
         BAL   11,IOTAP           REWIND THE TAPE
         MVI   RWCCW,X'07'         RESTORE RW OP-CODE AFTER RUN
         B     ASKAGN
         SPACE 3
*  WRITE A TAPE MARK
         SPACE 1
WT       EQU   *
         BAL   10,TAPADSET        GO GET OUTPUT TAPE
         B     CTEOJ              GO WRITE THE TAPE MARK
         SPACE 3
*  REWIND & UNLOAD A TAPE
         SPACE 1
RUN      EQU   *
         MVI   RWCCW,X'0F'         SET RUN CCW OP-CODE
         B     RW
         EJECT
*  WRITE A TAPE VOLUME LABEL
         SPACE 1
WTL      EQU   *
*  REWIND THE TAPE
         BAL   10,TAPADSET        GO GET TAPE UNIT
         MVC   TAPCCW+0(8),RWCCW  MOVE REWIND CCW TO OUT IOB
         BAL   11,IOTAP           REWIND THE TAPE
*  WRITE THE VOLUME LABEL
         MVI   TDAREA,X'40'       CLEAR THE IO AREA TO BLANKS
         MVC   TDAREA+1(79),TDAREA
         WTOR  'OEH816D REPLY VOLID - xxxxxx',TDAREA+4,6,REPLYECB
         BAL   11,WAITANS         WAIT FOR REPLY
         OC    TDAREA+4(6),=CL6' '
         MVC   TDAREA+41(10),=CL10'CAVWOODHSE'
         MVC   TDAREA(4),=C'VOL1'   MOVE IN VOL1
         MVI   TDAREA+10,X'F0'    MOVE IN 'NO SECURITY' FLAG
         MVC   TAPCCW+0(8),CTCCW  MOVE WRITE CCW TO OUT IOB
         BAL   11,IOTAP           WRITE THE VOLUME LABEL
*  WRITE A DUMMY HEADER LABEL
         MVC   TDAREA(3),=C'HDR'   MOVE IN HDR
         MVI   TDAREA+4,X'F0'     CLEAR REST OF LABEL TO ZERO
         MVC   TDAREA+5(75),TDAREA+4
         BAL   11,IOTAP           WRITE THE DUMMY HEADER LABEL
*  WRITE A TAPE MARK AND EXIT
         B     CTEOJ
         EJECT
*  TEST TO SEE IF PRINTER HAS BEEN OPENED
         SPACE 1
OPENPRNT EQU   *
         TM    OPENSW,X'FF'       IS THE PRINTER OPEN
         BC    1,OPENOK
         OPEN (PRINT,(OUTPUT))
         OI    OPENSW,X'FF'       TURN ON PRINTER OPEN SWITCH
OPENOK   BR    9
         SPACE 3
*  COMMON PRINT ROUTINE
         SPACE 1
TDPRINT  EQU   *
         MVI   CTLCHAR,X'40'      INSERT SINGLE SPACE CONTROL CHAR
         PUT   PRINT,CTLCHAR      PRINT A LINE
         LH    8,LINECT           LOAD LINE COUNT
         LA    8,1(,8)            INCREMENT LINE COUNT
         CH    8,=H'60'           COMPARE LINE COUNT WITH 60
         BL    TDPRINT1
         BAL   6,SKIPTO1          EJECT PAGE IF EQUAL
TDPRINT1 STH   8,LINECT           RESTORE UPDATED LINE COUNT
         BR    9
         SPACE 1
*  SKIP PRINTER TO CHANNEL 1
         SPACE 1
SKIPTO1  EQU   *
         MVI   CTLCHAR,X'F1'      INSERT SKIP TO 1 CONTROL CHAR
         MVI   TDOUTAR,X'40'      CLEAR PRINT LINE
         MVC   TDOUTAR+1(131),TDOUTAR
         PUT   PRINT,CTLCHAR      SKIP TO 1
         MVC   LINECT(2),=H'0'    SET LINE COUNT TO ZERO
         SR    8,8                CLEAR COUNTER REG
         BR    6
         EJECT
         SPACE 1
*  SPACE PRINTER ONE LINE
         SPACE 1
SPACE1   EQU   *
         MVI   CTLCHAR,X'40'      INSERT SPACE 1 CONTROL CHAR
         MVC   TDOUTAR(132),CTLCHAR  CLEAR PRINT LINE
         PUT   PRINT,CTLCHAR      SINGLE SPACE
         LH    8,LINECT           LOAD LINE COUNT
         LA    8,1(,8)            INCREMENT LINE COUNT
         CH    8,=H'60'           COMPARE LINE COUNT WITH 60
         BL    SPACE1A
         BAL   6,SKIPTO1          EJECT PAGE IF EQUAL
SPACE1A  STH   8,LINECT           RESTORE UPDATED LINE COUNT
         BR    10
         EJECT
*  COMMON I/O ROUTINE FOR INPUT AND OUTPUT
         SPACE 1
IOTAP    EQU   *
         TM    JECB,X'40'         HAS STOP BEEN RECEIVED
         BNO   IOTAPA
         CLI   JOB,C'I'
         BE    TERMMSG
         MVI   IOTAPSW,C'Y'
         B     TERMMSG
IOTAPA    MVI  IOTAPSW,C'N'
         XC    TAPECB(4),TAPECB    SET IN ECB TO ZEROES
         EXCP  TAPIOB             PERFORM THE OPERATION
         WAIT  ECB=TAPECB          WAIT FOR COMPLETION
         NI    TAPDCB+44,X'3F'     RESTORE THE DCB
         BR    11
         EJECT
*  COMMON WAIT FOR ALL REPLIES
WAITANS  EQU   *
         WAIT  ECB=REPLYECB
         XC    REPLYECB(4),REPLYECB SET ECB TO ZEROES
         BR    11
         SPACE 3
*  ROUTINE TO PICK TAPE ADDRESS FROM UCB VIA TIOT
         SPACE 1
TAPADSET EQU   *
         MVC   DDNAME(8),=CL8'IEFRDER'  MOVE DDNAME
         BAL   6,TIOTSCAN         GO GET UCB ADDRESS
         MVI   TAPTRTCH,X'03'      MOVE MODE BYTE INTO DCB
         MVI   TAPDEVT,X'81'       TAPE INDICATOR TO DCB
         ST    2,TAPDEBMD          STORE UCB ADDRESS INTO DEB
         MVI   TAPDEBMD,X'03'     MOVE MODE BYTE INTO DEB
         BR    10
         SPACE 1
APPEND   BR    14
         EJECT
*  SCAN TIOT FOR UCB ADDRESS
TIOTSCAN EQU   *
         SR    2,2                CLEAR REG 2
         L     3,TIOTADR          LOAD TIOT ADDRESS
         LA    3,24(,3)           SKIP TO FIRST DD ENTRY
*  SCAN FOR DDNAME
TIOTLOOP CLC   4(8,3),DDNAME      COMPARE TO DDNAME
         BE    TIOTUCB
         IC    2,0(,3)            INSERT ENTRY LENGTH
         AR    3,2                GET ADDRESS OF NEXT ENTRY
         CLI   0(3),X'00'         END OF TIOT
         BNE   TIOTLOOP
         WTO   'OEH811I DD MISSING'
         B     ABEOJ               END W/O POSTING ECB
*  GET UCB ADDRESS
TIOTUCB  LH    2,18(,3)           LOAD UCB ADDRESS
         BR    6
         EJECT
*
SAVEAREA DC    18F'0'
*
         SPACE 3
*  DCB FOR -TAPE- DATA SET
         SPACE 1
TAPDCB   DS    0F
         DC    4F'0'
TAPTRTCH EQU   *
         DC    X'00'
TAPDEVT  DC    X'00'
TAPDENS  DC    X'00'
         DC    X'00'
         DC    5F'0'
         DC    H'0'
         DC    BL2'1101000000001000'
         DC    A(TAPDEB)
         DC    X'10000000'
         DC    5F'0'
         SPACE 1
*  DEB FOR -TAPE- DATA SET
         SPACE 1
TAPIOVEC EQU   *
         DC    A(APPEND)
         DC    A(APPEND)
         DC    A(APPEND)
         DC    A(APPEND)
         DC    A(APPEND)
         DC    3F'0'
         DC    X'06000000'
TAPDEB   DS    0F
         DC    F'0'
         DC    X'17000000'
         DC    X'C0000000'
         DC    X'30000000'
         DC    2F'0'
         DC    X'0F'
         DC    AL3(TAPDCB)
         DC    X'02'
         DC    AL3(TAPIOVEC)
TAPDEBMD DC    X'00'
TAPDBUCB DC    X'000000'
         DC    F'0'
         SPACE 1
*  ECB FOR -TAPE- DATA SET
         SPACE 1
TAPECB   DC    F'0'
         SPACE 1
*  IOB FOR -TAPE- DATA SET
         SPACE 1
TAPIOB   DS    0F
         DC    XL2'0200'
TAPSENS  DC    H'0'
         DC    X'7F'
         DC    AL3(TAPECB)
TAPSTAT  DC    2F'0'
         DC    A(TAPCCW)
         DC    A(TAPDCB)
         DC    F'0'
         DC    H'1'
         DC    H'0'
TAPDASD  DC    X'00'
TAPSEEK  DC    XL7'00'
         SPACE 1
*  CCW'S FOR -TAPE- DATA SET
         SPACE 1
TAPCCW   DS    1D
         SPACE 3
*  CONSTANTS AND CCW'S      * * * * * * * * * * * * * * * * * * * * *
         SPACE 3
         SPACE 3
BFCCW    CCW   X'2F',SFCCW,X'20',1
BSCCW    CCW   X'27',BSCCW,X'20',1
CTCCW    CCW   1,TDAREA,X'20',80
RWCCW    CCW   7,RWCCW,X'20',1
SFCCW    CCW   X'3F',SFCCW,X'20',1
SRCCW    CCW   X'37',BSCCW,X'20',1
TDINCCW  CCW   2,TDAREA,X'20',10240
TDRESTIN CCW   2,TDAREA,X'20',10240
TPINCCW  CCW   2,TDAREA,X'20',10240
WTCCW    CCW   31,TDAREA,X'20',1
         SPACE 3
         SPACE 1
PRINT    DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS,RECFM=FBA,LRECL=133
TDWK     DS    D
DWORD    DS    D
LINECT   DC    H'0'
FINAL    DC    CL5'0'
TEMP     DC    CL5'0'
         DC    X'FF'
TDPTABLE DC    C'0123456789ABCDEF'
LENTAB   DC    X'08'
*                 1 2 3 4 5 6 7 8 910111213141516
         DC    X'0A0C0E10131517191C1E20222527292B'
*                17181920212223242526272829303132
         DC    X'2F313335383A3C3E414345474A4C4E50'
TSXCTAB  EQU   *-192
         DC    X'000A0B0C0D0E0F'
         DC    41X'00'
         DC    X'00010203040506070809'
TRTDTAB  DC    64X'40'             00-3F
         DC    C'           . (+ ' 4X
         DC    C'&&          $*)  ' 5X       ** NB - DOUBLE &
         DC    C'-/         ,    ' 6X
         DC    C'             ''  ' 7X       ** NB - DOUBLE '
         DC    X'40818283848586878889404040404040'     LOWER CASE A - I
         DC    X'40919293949596979899404040404040'                J - R
         DC    X'4040A2A3A4A5A6A7A8A9404040404040'                S - Z
         DC    C'                ' BX
         DC    C' ABCDEFGHI      ' CX
         DC    C' JKLMNOPQR      ' DX
         DC    C'  STUVWXYZ      ' EX
         DC    C'0123456789      ' FX
*                0123456789ABCDEF
TSREPLY  EQU   TRTDTAB
JECB     DC    F'0'
REPLYECB DC    F'0'
DDNAME   DC    D'0'
TIOTADR  DC    F'0'
CTLCHAR  DC    C' '
TDOUTAR  DS    CL132
TDAREA2  DS    CL115
RECCNT   DC    X'00000F'
COND1    DC    X'1F'
TSHCBYTE DC    CL1' '
TDBYTE   DS    CL1
IOTAPSW  DC    CL1'N'
RECHDG   DC    C'R '
         DC    X'2020202020'
         DC    C', L '
         DC    X'2020202020'
JOB      DC    CL1'0'
OPENSW   DC    X'00'
ID       DC    C'000'
         SPACE 3
         LTORG
         SPACE 3
TDAREA   DS    CL10240
         END   BEGIN
