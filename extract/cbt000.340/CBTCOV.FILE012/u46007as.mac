         TITLE 'SPZ44PDS  LIST LIB. DATA SETS IN ALPHAMERIC ORDER'
         SPACE 10
***********************************************************************
**PROGRAM PRINTS OUT A PARTITIONED DATA SET IN ALPHAMERIC ORDER,     **
**   OR UP TO 9 MEMBERS, SPECIFIED IN THE PARM. FIELD                **
**SUPPLY:-                                                           **
**      TWO JCL CARDS                                                **
**                 1 OUTPUTFILE - SYSPRINT DD SYSOUT=A               **
**                      OR SYSOUT=B IF PUNCHED OUTPUT IS REQUIRED    **
**                 2 INPUT DATA SET - SYSUT9 DD ....                 **
**ALWAYS SPECIFY A PARM FIELD TO GIVE AT LEAST THE SPACING BETWEEN   **
**   MEMBERS, AND IF REQUIRED THE NUMBER AND NAMES OF MEMBERS TO BE  **
**   LISTED.
***********************************************************************
         SPACE 10
R0       EQU   0                       LENGTH REQ FOR GETMAINS
R1       EQU   1                       STANDARD USAGE-PARM LIST PTR
R2       EQU   2                       CNT FOR BLANK LINES BETWEEN MBRS
R3       EQU   3                       PTR INTO BLOCKS FROM LIB FILE
R4       EQU   4                       LGTH OF MBR DIREC ENT,PTR TO BUF
R5       EQU   5                       END OF RECORD MARKER
R6       EQU   6                       COUNT REG
R7       EQU   7                       -WORK REG
R8       EQU   8                       - WORK REG
R9       EQU   9                       - WORK REG
R10      EQU   10                      HEAD OF TABLE PTR
R11      EQU   11                      PTR INTO TABLE OF MBRS
R12      EQU   12                      STANDARD USAGE-BASE REG
R13      EQU   13                      STANDARD USAGE-SAVE AREA PTR
R14      EQU   14                      STANDARD USAGE-RETURN LINK
R15      EQU   15                      STANDARD USAGE-RETURN CODE
         EJECT
SPZ44PDS CSECT
         B     14(R15)
         DC    X'08'
         DC    CL8'SPZ44PDS'
         USING SPZ44PDS,R15
         STM   R14,R12,12(R13)
         LR    R11,R13
         CNOP  0,4
         BAL   R13,*+76
         DC    18F'0'
         ST    R13,8(R11)
         ST    R11,4(R13)
         XC    8(4,R13),8(R13)         SETS UP SAVE AREA
*
         BALR  R12,R0
         USING *,R12                   SET BASE REG.
*
         L     R4,0(R1)                LOCATE
*                                      PARM FIELD GIVES SPACING AND NO
*                                      OF MEMBERS REQUIRED
*
         OPEN  (PDS100,INPUT,PDS120,OUTPUT)
*                                      OPEN INPUT PDS AS QSAM FILE
*
         LH    R3,0(R4)
         CLC   2(2,R4),=C'EJ'          NEW MBR ON NEW PAGE
         BNE   PDS200
         MVC   GAP(2),=X'060C'
         LA    R2,60
         ST    R2,SP
         B     PDS215
PDS200   CLC   2(2,R4),=C'20'          TEST RANGE OF PARM
         BH    PDS210                  TOO HIGH INVALID - 5 LINES
         CLC   2(2,R4),=C'00'
         BL    PDS210                  TOO LOW INVALID - 5 LINES
         PACK  GAP(2),2(2,R4)          SET COUNT TO GIVEN NO.OF BLANKS
         ZAP   TEMP(8),GAP(2)
         CVB   R2,TEMP
         ST    R2,SP
         B     PDS215
PDS210   LA    R2,5
         ST    R2,SP
         LA    R3,2
         MVC   GAP(2),=X'005C'
PDS215   LA    R4,5(R4)
         SH    R3,=H'2'
         CH    R3,=H'0'
         BE    PDS005
         CLC   0(3,R4),=C'MEM'
         BNE   PDS440                  INVALID PARM CARD
         LA    R4,4(R4)
         SH    R3,=H'5'
         PACK  MEMNO(1),0(1,R4)
         ZAP   TEMP(8),MEMNO(1)
         CVB   R6,TEMP
         LA    R9,1
         AR    R9,R6
         LA    R10,12
         MR    R8,R10
         LR    R0,R9
         GETMAIN R,LV=(R0)
         LR    R11,R1
         LA    R11,6(R11)              SET REG11 AS PTR TO TABLE
         STH   R6,0(R11)
         STH   R10,2(R11)              SET PRECEDING 4 BYTES
         LR    R10,R11                 SAVE HEAD OF TABLE PTR.
         LA    R11,4(R11)              SET REG11 POINTING FIRST ENTRY
         LA    R4,2(R4)
PDS001   MVC   0(8,R11),0(R4)
         LA    R4,9(R4)
         LA    R11,12(R11)
         BCT   R6,PDS001
         B     PDS060
*
PDS005   LA    R6,0
PDS010   LA    R3,1                    SET USED BYTE COUNT
         GET   PDS100,DIREC            READ NEXT DIREC BLOCK
         LH    R5,DIREC
         SR    R5,R3                   SETS BYTE CNT FOR RECORD
PDS020   LA    R7,DIREC+1(R3)          SET R7 TO POINT TO NEXT MBR NAME
         CLC   0(8,R7),=X'FFFFFFFFFFFFFFFF'
         BE    PDS030                  TEST FOR END OF DIRECTORY
         LA    R6,1(R6)                COUNT MEMBERS OF LIB.
         LA    R3,12(R3)
         IC    R4,DIREC(R3)
         N     R4,=X'0000001F'         FIND MEMBERS DIREC.LENGTH
         SLA   R4,1(0)
         AR    R3,R4                   MODIFY R3 TO POINT TO NEXT ENTRY
         CR    R3,R5
         BL    PDS020                  REPEAT TO END OF REC
         B     PDS010                  READ THE NEXT DIREC.RECORD
*
PDS030   LA    R9,1
         AR    R9,R6
         LA    R10,12                  SET LENGTH OF TABLE RECORDS
         MR    R8,R10                  CALCULATE LENGTH OF TABLE REQ.
         LR    R0,R9                   STORE IN REG0
         GETMAIN  R,LV=(R0)            REQUESTS STORE
         LR    R11,R1
         LA    R11,6(R11)              SET REG11 AS PTR TO TABLE
         STH   R6,0(R11)
         STH   R10,2(R11)              SET UP PRECEDING 4 BYTES
         LR    R10,R11                 SAVE HEAD OF TABLE PTR.
         LA    R11,4(R11)              SET REG11 POINTING  FIRST ENTRY
*
         CLOSE (PDS100)                SET THE FILE FOR A DIRECTORY
         OPEN  (PDS100,INPUT)                     REREAD
         SPACE 5
*
         LA    R7,0
         LA    R9,2                    INITIALISE COUNT REGS
PDS040   LA    R3,DIREC
         LA    R3,1(R3)                SET REG3 AS DIREC. REC. PTR.
         GET   PDS100,DIREC            READ NEXT DIREC.BLOCK
         LH    R5,DIREC
         SR    R5,R9                   SET BYTE COUNT FOR RECORD
         AR    R5,R3
PDS050   MVC   0(8,R11),1(R3)          PUTS MBR.NAMES IN TABLE
         LA    R11,12(R11)             POINTS REG11 AT NEXT FREE ENTRY
*                                                  IN THE TABLE
         LA    R7,1(R7)                COUNT MEMBERS
         CR    R7,R6
         BE    PDS060                  TEST FOR LAST MEMBER
*
         LA    R3,12(R3)
         IC    R4,0(R3)
         N     R4,=X'0000001F'         FIND MEMBERS DIREC.LENGTH
         SLA   R4,1(R0)
         AR    R3,R4
         CR    R3,R5
         BNE   PDS050                  REPEAT TO END OF BLOCK
         B     PDS040                  READ NEXT DIREC.RECORD
PDS060   MVC   0(2,R11),=X'0000'
         SPACE 5
         CLOSE (PDS100)                CLOSE QSAM FILE
         SPACE 5
         OPEN  (PDS110,INPUT)          OPEN BPAM FILE
         SPACE 5
         BLDL  PDS110,(R10)            COMPLETE TABLE WITH MBRS LOCS
         SPACE 5
         LR    R11,R10
         LA    R11,4(R11)              SET REG11 TO FIRST MBR
         MVC   PDS110+33(3),EOFAD      INSERT EODAD ADDRESS
         LH    R0,PDS110+62            GET BLK LENGTH FROM DCB
         LR    R5,R0                   SAVE BUFFER LENGTH
         LR    R8,R0
         GETMAIN  R,LV=(R0)            REQUEST BUFFER AREA FOR INPUT
         LR    R4,R1                   SET R4 AS BUFFER POINTER
*
         SPACE 5
***THE FOLLOWING GENERATES THE DATE FOR THE OUT HEADING***
PDS220   LA    R1,PAM
DATE000  TIME
*                                      GET DAY IN PACKED FORM
         ST    R1,DAT                  STORE
         ZAP   DAYS(2),DAT+2(2)        SEPARATE DAY NUMBER
         MVO   DAT+1(3),DAT+1(1)
         ZAP   YR(3),DAT+2(2)          SEPARATE YEAR
         DP    YR(3),=P'4'
         CP    YR+2(1),=P'0'           TAST FOR LEAP YEAR
         BNE   DATE001                 BRANCH IF NOT LEAP YEAR
         MVI   FLAG,X'FF'              SET FLAG FOR LEAP YEAR
         MVC   DAYTAB+2(2),=P'29'      SET NO. OF DAYS FOR FEB IN LEAP
DATE001  LA    R7,0                    SET MONTH COUNT
         LA    R8,DAYTAB               SET R8 AS DAYTAB PTR
DATE002  SP    DAYS(2),0(2,R8)         CALCULATE MONTH BY SUBTRACTING
         LA    R7,1(R7)                DAYS IN EACH MONTH UNTIL DAY
         CP    DAYS(2),=P'0'           NUMBER BECOMES
         BNH   DATE003                 NEGATIVE.
         LA    R8,2(R8)                POINT R8 AT NEXT MONTH AND
         B     DATE002                      REPEAT
DATE003  AP    DAYS(2),0(2,R8)         ADD DAYS OF LAST MONTH GET DAY
         MVC   WKAR(4),=X'40202020'
         ED    WKAR(4),DAYS            EDIT IN NO. OF DAYS
         MVC   HEAD+12(2),WKAR+2
         MVI   HEAD+14,C'/'            INSERT SLASH FOR PRINTING
         CVD   R7,MONTH                CALCULATE MONTH NUMBER
         MVC   WKAR(4),=X'40212020'
         ED    WKAR(4),MONTH+6         EDIT IN MONTH NUMBER
         MVC   HEAD+15(2),WKAR+2
         MVI   HEAD+17,C'/'            INSERT SLASH FOR PRINTING
         MVC   WKAR(4),=X'40202020'
         ED    WKAR(4),DAT+2           EDIT IN YEAR
         MVC   HEAD+18(2),WKAR+2
         CLI   FLAG,X'00'              TEST FLAG FOR LEAP YEAR
         BE    PDS004DT
         MVC   DAYTAB+2(2),=P'28'      RESET NO. OF DAYS IN FEB
PDS004DT MVI   FLAG,X'00'              CLEAR FLAG
***
         MVC   PDS110+37(3),EXAD       SETS UP EXIT LIST TO READ JFCB
         MVI   LST,X'87'
         MVC   LST+1(3),JBUFAD
         RDJFCB    (PDS110,INPUT)      READ JFCB FOR NAME AND VOLUME
         MVC   NAM(17),DIREC           MOVE DATA SET NAME TO HEADING
         MVC   VOL(6),DIREC+118        MOVE VOL SER NO TO HEADING
         BAL   R14,HDLINE              PRINT THE HEADING
         SPACE 5
         AR    R5,R4                   CALCULATE END OF BUFFER POINTER
PDS070   FIND  PDS110,(R11),D
         LTR   R15,R15
         BC    2,PDS430                MEMBER SPECIFIED IS NOT FOUND
         LR    R3,R4
PDS075   MVI   0(R3),X'FF'
         LA    R3,1(R3)
         CR    R3,R5
         BNE   PDS075
PDS080   LR    R3,R4
         READ  DECNAM,SF,PDS110,(R3),(R8)      READ BLOCK
         CHECK DECNAM
PDS090   MVC   PLINE+1(80),0(R3)       MOVE NEXT CARD TO PRINT LINE
         PUT   PDS120,PLINE            PRINT OUT CARD
         AP    LCNT(2),=P'1'           INCREASE LINE COUNT
         CP    LCNT(2),=P'60'          TEST FOR NEW PAGE
         BNE   PDS095
         BAL   R14,HDLINE              PRINT PAGE HEADING IF REQUIRED
PDS095   LA    R3,80(R3)               FIND NEXT CARD
         CR    R3,R5                   TEST FOR BLOCK END
         BE    PDS080                  BRANCH TO READ NEXT BLOCK
         CLI   0(R3),X'FF'
          BE    PDS080
         B     PDS090                  BRANCH TO WRITE NEXT CARD
         SPACE 5
*                       PRINTS OUT TOP OF PAGE HEADING AND MBR NAME
*
HDLINE   ST    R14,LINK
         AP    PNO,=P'1'               INCREASE PAGE NUMBR
         MVC   PLINE(133),HEAD
         MVC   PLINE+90(8),0(R11)      MOVE IN MBR NAME
         MVC   PLINE+110(4),=X'40202020'
         ED    PLINE+110(4),PNO        MOVE IN PAGE NO
         PUT   PDS120,PLINE            PRINT PAGE HEADING
         MVI   PLINE+1,C' '
         MVC   PLINE+2(131),PLINE+1    CLEAR PRINT LINE
         MVI   PLINE,C'-'
         MVC   PLINE+1(33),PTOP+1      SET MBR HEADING
         MVC   PLINE+19(8),0(R11)      MOVE IN MBR NAME
         PUT   PDS120,PLINE            PRINT MBR HEADING
         MVI   PLINE,C' '
         MVC   PLINE+1(132),PLINE
         PUT   PDS120,PLINE            SKIP ONE LINE
         MVC   LCNT(2),=X'008C'        SET LINE COUNT
         L     R14,LINK
         BR    R14                     BRANCH BACK
*
         SPACE 5
*                            PRINTS MBR ENDING AND NEXT HEADING
EOF      MVI   PLINE,C' '              CLEAR PRINT LINE
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(16),PEND        SET MBR END LINE
         PUT   PDS120,PLINE            PRINT OUT FINAL LINE
         LA    R11,12(R11)             POINT REG11 TO NEXT MBR
         CLC   0(2,R11),=X'0000'       SEE IF LAST MBR
         BE    PDS500                  BRANCH TO END
         LA    R14,PDS070              LOAD RETURN ADDRESS
         AP    LCNT(2),=P'2'           INCREMENT LINE CNT
         AP    LCNT(2),GAP(2)          INCREASE LINE CNT BY GAP REQ
         CP    LCNT(2),=P'50'
         BNL   HDLINE                  SKIP TO NEW PAGE AND PRINT HEAD.
*                                      AS NEXT MBR WOULD BE PRINTED TO
*                                      NEAR BOTTOM OF PAGE
         LA    R6,1
         AR    R6,R2                   SET UP CNT OF REQ BLANK LINES
         MVI   PLINE,C' '
         MVC   PLINE+1(132),PLINE
PDS300   PUT   PDS120,PLINE            PRINT BLANK LINES
         BCT   6,PDS300                PRINT REQ BLANK LNS BETWEEN MBRS
         MVC   PLINE(34),PTOP
         MVC   PLINE+19(8),0(R11)      MOVE IN MBR NAME
         PUT   PDS120,PLINE            PRINT MBR HEADING
         MVI   PLINE,C' '
         MVC   PLINE+1(132),PLINE
         PUT   PDS120,PLINE            SKIP A LINE
         B     PDS070                  BRANCH BACK TO PRINT NEXT MBR
*
         SPACE 5
*                                      ERROR ROUTINES
PDS400   MVI   PLINE,C' '              GETMAIN FSIL
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(40),=C'SPZ4401I GETMAIN FAILURE FOR DIREC.TABLE'
         PUT   PDS120,PLINE
         B     PDS500
*
PDS410   MVI   PLINE,C' '              PDS IN ERROR, BLDL FAIL
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(37),=C'SPZ4402I BLDL FAIL-NON PART. DATA SET'
         PUT   PDS120,PLINE
         B     PDS500
*
PDS420   MVI   PLINE,C' '              GETMAIN FSIL
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(37),=C'SPZ4403I GETMAIN FAIL,BUFFER FOR READ'
         PUT   PDS120,PLINE
         B     PDS500
*
PDS430   MVI   PLINE,C' '              FIND FAIL
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(21),=C'SPZ4404I FIND FAILURE'
         PUT   PDS120,PLINE
         B     PDS500
*
PDS440   MVI   PLINE,C' '              PARM CARD INVALID
         MVC   PLINE+1(132),PLINE
         MVC   PLINE+1(26),=C'SPZ4405I PARM CARD INVALID'
         PUT   PDS120,PLINE
         B     PDS500
         SPACE 5
*                                      CLOSE ROUTINE
PDS500   CLOSE (PDS110,,PDS120,)       CLOSE FILES
PDS600   L     R13,4(R13)
         LM    R14,R12,12(R13)
         MVI   8(R13),X'FF'
         XR    R15,R15
         BR    R14
*
***DATE AREAS FOR THE DATE ROUTINE***
DAYTAB   DC    XL2'031C'               JAN
         DC    XL2'028C'               FEB
         DC    XL2'031C'               MARCH
         DC    XL2'030C'               APRIL
         DC    XL2'031C'               MAY
         DC    XL2'030C'               JUNE
         DC    XL2'031C'               JULY
         DC    XL2'031C'               AUG
         DC    XL2'030C'               SEPT
         DC    XL2'031C'               OCT
         DC    XL2'030C'               NOV
         DC    XL2'031C'               DEC
PTR      DC    F'0'
SP       DC    F'0'
MEMNO    DS    CL1
DAT      DS    F
DAYS     DS    CL2
YR       DS    CL3
FLAG     DC    X'00'
MONTH    DS    D
WKAR     DS    F
***
HEAD     DC    C'1'
         DC    C'PDS'
         DC    34C' '
         DC    C'VOLUME='
VOL      DC    6C' '
         DC    6C' '
         DC    C'DSNAME='
NAM      DC    19C' '
         DC    C'MEMBER='
         DC    14C' '
         DC    C'PAGE '
NO       DC    3C' '
         DC    21C' '
PLINE    DS    CL133
PTOP     DC    C' ***** MEMBER NAME=          *****'
PEND     DC    C'***** END OF MBR'
DIREC    DS    CL256
DNAM     DC    A(DECNAM)
PNO      DC    X'000C'
LCNT     DC    X'000C'
GAP      DC    X'005C'
TEMP     DC    D'0'
EOFAD    DC    AL3(EOF)
EXAD     DC    AL3(LST)
LST      DS    2F
JBUFAD   DC    AL3(DIREC)
LIST     DC    A(HEAD+12)
PAM      DC    A(LIST)
LINK     DS    F
*
*
PDS100   DCB   DDNAME=SYSUT9,DSORG=PS,MACRF=GM,BLKSIZE=256,RECFM=F,    X
               LRECL=256
PDS110   DCB   DDNAME=SYSUT9,DSORG=PO,MACRF=R,RECFM=FB
PDS120   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,BLKSIZE=133,RECFM=FA
*
         LTORG
         END
