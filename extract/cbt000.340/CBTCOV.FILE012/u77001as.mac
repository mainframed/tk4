S0ALIBRY TITLE '- LIBRARY ANALYSIS UTILITY'
***********************************************************************
*                                                                     *
*        LIBRARY ANALYSIS UTILITY (S0ALIBRY)                          *
*        -----------------------------------                          *
*                                                                     *
*                                                                     *
*   1.   FUNCTION OF THE PROGRAM                                      *
*   ----------------------------                                      *
*                                                                     *
*        THE UTILITY IS DESIGNED TO READ THE DIRECTORIES OF FROM 1    *
*        TO 13 PARTITIONED DATA SETS AND TO PRODUCE ONE COLLATED LIST *
*        OF MEMBERS IN ALPHABETICAL ORDER WITH AN INDICATION OF THE   *
*        LIBRARY OR LIBRARIES ON WHICH EACH MEMBER RESIDES.           *
*           IF POSSIBLE PERTINENT INFORMATION IS EXTRACTED FROM THE   *
*        USER DATA AREA OF THE DIRECTORY ENTRY SO THAT FOR MANY       *
*        PURPOSES THE UTILITY PROVIDES ALL THE INFORMATION NEEDED     *
*        FROM THE FULL USER DATA PRINT OUTPUT BY THE IEHLIST UTILITY. *
*                                                                     *
*   2.   JCL AND EXECUTION REQUIREMENTS                               *
*   -----------------------------------                               *
*                                                                     *
*        THE UTILITY REQUIRES THE FOLLOWING JCL STATEMENTS FOR ALL    *
*        EXECUTIONS :-                                                *
*           //    EXEC  PGM=S0ALIBRY                                  *
*           //SYSPRINT DD SYSOUT=A                                    *
*        - PLUS ONE DD STATEMENT FOR EACH LIBRARY TO BE LISTED. THE   *
*        DDNAME MUST BE 7 OR 8 CHARACTERS LONG AND START WITH         *
*        "SYSLIB" WITH THE 7TH AND 8TH CHARACTERS BEING UNIMPORTANT   *
*        AS LONG AS EACH LIBRARY HAS A UNIQUE DDNAME.                 *
*           THE UTILITY PRINTS INFORMATION FOR THE LIBRARIES ACROSS   *
*        THE PAGE IN THE ORDER THAT THEY ARE SPECIFIED IN THE JCL.    *
*                                                                     *
*   3.   OUTPUT OF THE UTILITY                                        *
*   --------------------------                                        *
*        THE TITLE LINE ON EACH PAGE OF THE OUTPUT INDICATES THE DATE *
*        AND TIME THAT THE UTILITY WAS RUN AND A PAGE NUMBER.         *
*           A SUB-HEADING THAT APPEARS ON EACH PAGE GIVES A MAXIMUM   *
*        OF 7 CHARACTERS (ACT/PAS LIBRARIES) AND 13 CHARACTERS (LOAD  *
*        LIBRARIES) OF THE DSNAME.                                    *
*           THE INFORMATION FOR EACH LIBRARY IS PRINTED IN A COLUMN   *
*        BENEATH THE DATA SET NAME HEADING.                           *
*           AS MANY AS POSSIBLE OF THE LIBRARIES SPECIFIED IN THE JCL *
*        ARE PRINTED ACROSS THE PAGE. WHERE A MIXTURE OF SOURCE CARD  *
*        AND LOAD LIBRARIES IS REQUESTED, THE TOTAL NO. OF LIBRARIES  *
*        PRINTED ACROSS THE PAGE IS DETERMINED BY HOW MANY WILL FIT   *
*        IN 123 CHARACTERS OF THE PRINT LINE, BASED ON 15 CHARACTERS  *
*        PER LOAD LIBRARY, AND 9 CHARACTERS PER SOURCE CARD LIBRARY.  *
*        WHERE ONLY SOURCE CARD OR LOAD LIBRARIES ARE TO BE PRINTED,  *
*        THE MAXIMUM FOR EACH TYPE IS 13 OR 8 RESPECTIVELY.           *
*           AN ERROR MESSAGE IS GENERATED FOR ANY SYSLIBXX DD         *
*        STATEMENT THAT DOES NOT REFER TO A DISK DATA SET, DOES NOT   *
*        REFER TO A PARTITIONED DATA SET OR WHICH REFERS TO A NON-    *
*        EXISTENT DISK DATA SET. IF MORE LIBRARIES ARE SPECIFIED THAN *
*        CAN BE CONTAINED ON THE PRINT LINE THEY ARE REJECTED.        *
*           THE FOLLOWING INFORMATION IS EXTRACTED FROM THE USER DATA *
*        AREA OF THE DIRECTORY ENTRY:-                                *
*        A. THE SSI INFORMATION - THE UTILITY PRINTS THE LAST FIVE    *
*           HALF-BYTES OF THE FOUR BYTE SSI FIELD IN A HEX REPRESENT- *
*           TATION. FOR MODULES ADDED TO OR REPLACED IN A SOURCE CARD *
*           LIBRARY BY THE IN-HOUSE VERSION OF IEBUPDTE THESE LAST    *
*           FIVE HALF-BYTES CONTAIN THE DATE OF ADDITION/REPLACEMENT  *
*           IN 'YYDDD' FORMAT. THIS FORMAT IS ALSO USED BY THE        *
*           CONTRACTION/EXPANSION ROUTINES - THESE ROUTINES PRESERVE  *
*           THE DATE DURING A CONTRACTION OR EXPANSION OPERATION.     *
*           SIMILARLY THE IN-HOUSE VERSION OF THE LINKAGE EDITOR SETS *
*           THE SSI FIELD IN LOAD MODULE DIRECTORY ENTRIES TO THE     *
*           SAME FORMAT.                                              *
*              IF THE RECFM OF THE LIBRARY IS 'U' THE UTILITY ASSUMES *
*           THE FORMAT OF THE DATA AREA IS THAT FOR LOAD MODULE       *
*           LIBRARIES; OTHERWISE IT ASSUMES THE SSI INFORMATION IS    *
*           THE FIRST FOUR BYTES OF THE USER DATA FIELD.              *
*        B. IF THE RECFM OF THE LIBRARY IS 'U' AND THE FORMAT OF THE  *
*           USER DATA AREA IS THAT OF A LOAD MODULE LIBRARY, THE      *
*           MODULE LENGTH IS ALSO EXTRACTED.                          *
*        THE LENGTH OF THE ENTRY PRINTED FOR EACH MEMBER THUS DEPENDS *
*        ON THE RECFM FOR THAT LIBRARY. IF NO SSI INFORMATION CAN BE  *
*        LOCATED THE UTILITY PRINTS 'XXXXX' TO INDICATE A MEMBER HAS  *
*        BEEN FOUND.                                                  *
*                                                                     *
*   4.   PROGRAM RETURN CODE                                          *
*   ------------------------                                          *
*                                                                     *
*        THE PROGRAM RETURN CODE IS 0 UNLESS A MESSAGE INDICATING AN  *
*        ERROR CONDITION IS ISSUED. A LIST OF MESSAGES AND THE        *
*        ASSOCIATED RETURN CODES APPEARS BELOW.                       *
*                                                                     *
*   5.   PROGRAM MESSAGES                                             *
*   ---------------------                                             *
*                                                                     *
*        S0A801I  OPEN FAILED FOR SYSPRINT                            *
*        EXPLANATION: THE SYSPRINT DATA SET COULD NOT BE OPENED.      *
*        PROGRAM ACTION: S0ALIBRY TERMINATES.                         *
*        RETURN CODE: 16.                                             *
*        S0A802I  SYSLIBXX - OBTAIN FAILED                            *
*        EXPLANATION: THE SYSLIBXX DD STATEMENT DID NOT REFER TO A    *
*              DISK DATA SET OR THE DD STATEMENT REFERS TO A DISK     *
*              DATA SET THAT DOES NOT EXIST.                          *
*        PROGRAM ACTION: S0ALIBRY ATTEMPTS TO PROCESS ANY OTHER       *
*              SYSLIBXX DD STATEMENTS.                                *
*        RETURN CODE: 4.                                              *
*        S0A803I  SYSLIBXX - DATA SET ORGANIZATION NOT PO             *
*        EXPLANATION: THE SYSLIBXX DD STATEMENT REFERS TO A DISK DATA *
*              SET WHOSE DATA SET ORGANIZATION IS NOT PARTITIONED.    *
*        PROGRAM ACTION/RETURN CODE: AS S0A802I.                      *
*        S0A804I  SYSLIBXX - NOT PROCESSED - PRINT LINE FULL          *
*        EXPLANATION: THE PRINT LINE CAPACITY WOULD BE EXCEEDED IF    *
*              THE SYSLIBXX LIBRARY WAS ADDED TO THOSE ALREADY        *
*              ACCEPTED FOR PROCESSING.                               *
*        PROGRAM ACTION/RETURN CODE: AS S0A802I.                      *
*        S0A805I  SYSLIBXX - OPEN FAILED                              *
*        EXPLANATION: THE OPEN ISSUED FOR THE SYSLIBXX LIBRARY WAS    *
*              NOT SUCCESSFUL.                                        *
*        PROGRAM ACTION/RETURN CODE: AS S0A802I.                      *
*        S0A806I  NO FILES TO BE PROCESSED                            *
*        EXPLANATION: EITHER NO SYSLIBXX DD STATEMENTS ARE PRESENT IN *
*              THE JCL OR THEY WERE ALL REJECTED.                     *
*        PROGRAM ACTION: S0ALIBRY TERMINATES.                         *
*        RETURN CODE: 4.                                              *
*        S0A807E  PERMANENT I/O ERROR   ---------------------         *
*        EXPLANATION: AN I/O ERROR OCCURRED WHILE ATTEMPTING TO READ  *
*              THE FILE SPECIFIED.                                    *
*        PROGRAM ACTION: S0ALIBRY TERMINATES.                         *
*        RETURN CODE: 16.                                             *
*                                                                     *
*                                                                     *
*   6.   USER EXIT.                                                   *
*   ---------------                                                   *
*                                                                     *
*        THE FACILITY TO INCLUDE A USER EXIT TO S0ALIBRY EXISTS,      *
*        BASED ON THE REQUIREMENT TO INCLUDE EXTRA INFORMATION ON     *
*        EACH PRINT LINE FOR A LIBRARY MEMBER. TO THIS END, THE EXIT, *
*        IF INCLUDED, IS ENTERED JUST PRIOR TO PRINTING A LINE OF     *
*        S0ALIBRY OUTPUT, PLUS A FINAL CALL AT END OF JOB TO ALLOW    *
*        FOR USER FILE CLOSING.                                       *
*              ON ENTRY TO THE USER EXIT, REGISTER 1 WILL GIVE THE    *
*        ADDRESS OF A FULL WORD PARAMETER LIST ADDRESS. THIS          *
*        PARAMETER LIST CONSISTS OF FOUR FULL WORDS:-                 *
*              WORD 1 - ADDRESS OF LIBRARY MEMBER NAME;               *
*              WORD 2 - ADDRESS OF NEXT PRINT POSITION;               *
*              WORD 3 - NUMBER OF PRINT POSITIONS AVAILABLE;          *
*              WORD 4 - ADDRESS OF PRINT DCB,                         *
*        ON THE FINAL CALL AT END OF JOB, WORD 1 WILL CONTAIN HEX     *
*        ZEROS.                                                       *
*              A USER EXIT MAY BE INCLUDED BY SPECIFYING              *
*        PARM='EXITNAME' ON THE EXEC CARD, AND THE LIBRARY CONTAINING *
*        THE EXIT AS A STEPLIB E.G.                                   *
*              // EXEC PGM=S0ALIBRY,PARM=LIBEXIT                      *
*              //STEPLIB DD DSN=USERLIB,DISP=SHR                      *
*                                                                     *
*                                                                     *
*   7.   EXISTING EXIT.                                               *
*   -------------------                                               *
*                                                                     *
*        AN EXIT EXISTS TO EXTRACT INFORMATION FOR A LIBRARY MEMBER   *
*        FROM AN INPUT CARD FILE AND POSITION AS MUCH AS POSSIBLE OF  *
*        THIS INFORMATION ON THE SAME LINE AS THE MEMBER LIBRARY      *
*        DETAILS. THE EXIT IS CALLED S0ALIBXT AND CARD INPUT IS OF    *
*        THE FORM:-                                                   *
*              CC. 1 - 8  MEMBER NAME.                                *
*              CC. 10 - 80  MEMBER DESCRIPTION, ETC. (MAY BE          *
*                           TRUNCATED IF NOT ENOUGH PRINT POSITIONS   *
*                           ARE AVAILABLE).                           *
*        N.B.  DATA CARDS MUST BE INPUT IN SEQUENCE.                  *
*                                                                     *
*                                                                     *
*                                                                     *
*  8.  INHOUSE VERSIONS OF LINKEDIT AND IEBUPDTE.                     *
*  ----------------------------------------------                     *
*                                                                     *
*  THESE ARE ALTERED TO INSERT DATES IN LOAD AND SOURCE MEMBERS BY    *
*  EXPANDING CERTAIN CSECTS AND THEN 'ZAPPING' CODE INTO THE AREAS    *
*  CREATED. THE SAMPLE JCL BELOW SHOWS MODIFICATION OF LINKEDIT AND   *
*  IEBUPDTE ON A TESTING SYSGEN (NOT THE RESIDENT SYSTEM). THE ZAPS   *
*  HAVE BE SET UP FOR VS1 RELEASE 6.0F AND SO MAY NEED CHANGING FOR   *
*  YOUR SYSTEM, CERTAINLY IF THE LENGTHS OF THE FOLLOWING CSECTS ARE  *
*  NOT AS SHOWN -                                                     *
*    HEWLFINT   F88    IEBUPDT2   1906    IEBASCAN   FDC              *
*                                                                     *
*                                                                     *
*  //EXPAND1 EXEC PGM=IEWL,PARM='LIST,LET,XREF,NCAL,MAP'              *
*  //SYSUT1   DD DSN=&SYSUT1,DISP=(OLD,PASS)                          *
*  //SYSPRINT DD SYSOUT=A                                             *
*  //DD1      DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=3350,VOL=SER=000999   *
*  //SYSLMOD  DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=3350,VOL=SER=000999   *
*  //SYSLIN   DD *                                                    *
*   INCLUDE DD1(IEBUPDTE)                                             *
*   EXPAND IEBUPDT2(64),IEBASCAN(64)                                  *
*   ENTRY IEBUPDTE                                                    *
*   NAME IEBUPDTE(R)                                                  *
*  //*                                                                *
*  //*                                                                *
*  //EXPAND2 EXEC PGM=IEWL,PARM='LIST,LET,XREF,NCAL,MAP,OVLY,XCAL'    *
*  //SYSUT1   DD DSN=&SYSUT1,DISP=(OLD,PASS)                          *
*  //SYSPRINT DD SYSOUT=A                                             *
*  //SYSPUNCH DD DSN=SYS1.OBJPDS1,DISP=SHR                            *
*  //AOSB0    DD DSN=SYS1.AOS04,DISP=SHR                              *
*  //SYSLMOD DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=3350,VOL=SER=000999    *
*  //SYSLIN   DD *                                                    *
*   INCLUDE AOS04(HEWLFROU,HEWLFAPT,HEWLFINT,HEWLFOPT)                *
*   EXPAND HEWLFINT(64)                                               *
*   INCLUDE AOS04(HEWLFINP,HEWLFESD,HEWLFEND,HEWLFSYM)                *
*   INCLUDE AOS04(HEWLFRCG,HEWLFSCN,HEWLFRAT,HEWLFIDR)                *
*   INCLUDE AOS04(HEWLFINC,HEWLFMAP,HEWLFADA)                         *
*   INCLUDE AOS04(HEWLFENT,HEWLFENS,HEWLFOUT,HEWLFREL)                *
*   INCLUDE AOS04(HEWLFSCD,HEWLFENL,HEWLFBTP)                         *
*   INCLUDE SYSPUNCH(HEWLF064)                                        *
*   INSERT HEWLFROU,HEWLFAPT,HEWLFDEF                                 *
*   OVERLAY ONE   *** VALID EXCLUSIVE CALL TO HEWLFINP ***            *
*   INSERT HEWLFINT,HEWLFOPT                                          *
*   OVERLAY ONE  *** VALID EXCL. CALLS TO HEWLFADA,IEWLCFNI,HEWLFADA  *
*   INSERT HEWLFINP,HEWLFESD,HEWLFEND,HEWLFSYM,HEWLFRCG               *
*   INSERT HEWLFSCN,HEWLFRAT,HEWLFTXT,HEWLFINC,HEWLFIDR               *
*   OVERLAY ONE                                                       *
*   INSERT HEWLFMAP                                                   *
*   OVERLAY TWO   *** VALID EXCL. CALLS TO HEWLFFNL,HEWLFSCD,HEWLFFNL *
*   INSERT HEWLFADA,HEWLFENT,HEWLFENS,HEWLFOUT                        *
*   OVERLAY TWO     *** VALID EXCLUSIVE CALLS TO HEWLFFNL ***         *
*   INSERT HEWLFREL,HEWLFSCD,HEWLFSIO                                 *
*   OVERLAY TWO    *** VALID EXCLUSIVE CALLS TO IEWLENAM ***          *
*   INSERT HEWLFFNL,HEWLFBTP                                          *
*   ENTRY HEWLFROU                                                    *
*   ALIAS IEWL                                                        *
*   ALIAS IEWLF44U                                                    *
*   ALIAS IEWLF88U                                                    *
*   ALIAS IEWLF128                                                    *
*   ALIAS HEWL                                                        *
*   ALIAS LINKEDIT                                                    *
*   NAME HEWLF064(R)                                                  *
*  //*                                                                *
*  //*                                                                *
*  //FIDDLE   EXEC PGM=HMASPZAP                                       *
*  //SYSLIB   DD DSN=SYS1.LINKLIB,DISP=SHR,UNIT=3350,VOL=SER=000999   *
*  //SYSPRINT DD SYSOUT=A                                             *
*  *********      PROVIDE DEFAULT SSI OF 'SETSSI=000YYDDD' IN HEWL    *
*  NAME HEWLF064 HEWLFINT                                             *
*  VER 03BC 5840C71E                                                  *
*  REP 03BC 47F0CC32      *** INSERT BRANCH TO PATCH AREA             *
*  VER 0F88 00000000,00000000,00000000,00000000    *** INSERT         *
*  VER 0F98 00000000,00000000,00000000,00000000    *** CODING         *
*  REP 0F88 58400010,58404038,88400004,50402208    *** INTO PATCH     *
*  REP 0F98 9610209E,5840C71E,47F0C06A             *** AREA           *
*  DUMPT HEWLF064 HEWLFINT                                            *
*  *********                                                          *
*  *********      PROVIDE DEFAULT SSI OF 'SETSSI=000YYDDD' IN IEBUPDTE*
*  NAME IEBUPDTE IEBUPDT2                                             *
*  VER 12EE 4780 5358                                                 *
*  REP 12EE 4780 5902      *** INSERT BRANCH TO PATCH AREA ***        *
*  VER 1908 00000000,00000000,00000000,00000000    *** INSERT CODE    *
*  VER 1918 00000000,00000000,00000000,00000000    *** INTO PATCH     *
*  REP 1908 D203C20E,C0989480,C20D9602,C20DD207    *** AREA           *
*  REP 1918 C1ACC150,D245C1B7,C20D5810,C93447F0,5322                  *
*  DUMPT IEBUPDTE IEBUPDT2                                            *
*  *********                                                          *
*  NAME IEBUPDTE IEBASCAN                                             *
*  VER 000A 41D02EC2                                                  *
*  REP 000A 47F02FDA    *** INSERT BRANCH TO PATCH AREA ***           *
*  VER 0FE0 00000000,00000000,00000000,00000000    *** INSERT CODE    *
*  VER 0FF0 00000000,00000000,00000000,00000000    *** INTO PATCH     *
*  REP 0FE0 58D00010,58D0D038,88D00004,50D0C098    *** AREA           *
*  REP 0FF0 920FC04A,41D02EC2,47F02008                                *
*  DUMPT IEBUPDTE IEBASCAN                                            *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
S0ALIBRY LSAVE  EQUATES=YES
         SPACE 2
         L     R1,0(R1)
         LH    R2,0(R1)            PICK UP PARM LENGTH
         CH    R2,H0               IS A PARM PRESENT ?
         BE    NOPARM              NO - BYPASS USER EXIT LOAD
         BCTR  R2,R0               LENGTH - 1
         EX    R2,MOVENAME         STORE NAME
         LOAD  EPLOC=EXITNAME      BRING INTO CORE
         ST    R0,ENTRYPT          AND STORE ENTRY POINT
NOPARM   EQU   *
         SPACE 3
         OPEN  (SYSPRINT,(OUTPUT))
         TM    SYSPRINT+48,X'10'   OPEN O.K. ?
         BO    INIT10              YES - GO TO INITIALIZATION
         WTO   'S0A801I  OPEN FAILED FOR SYSPRINT',ROUTCDE=(2,11)
         LA    R15,16              PRIME RETURN CODE
         B     EOJOBX              GO TO END OF JOB
         EJECT
INIT10   EQU   *
         LOAD  EPLOC=S0ADTTM       LOAD DATE/TIME MODULE
         LR    R15,R0
         LA    R1,AWORK            ADDR OF PARAM LIST FOR S0ADTTM
         BALR  R14,R15             CALL DATE/TIME MODULE
         MVC   HDRDATE,WORK        DATE TO HEADING
         MVC   HDRTIME,WORK+8      TIME TO HEADING
         LA    R1,SYSPRINT
         LA    R0,X8B
         PUT   (1),(0)             SKIP TO A NEW PAGE
         LA    R1,SYSPRINT
         LA    R0,HDR
         PUT   (1),(0)             OUTPUT FIRST HEADING LINE
         SPACE 2
         EXTRACT TIOTADDR,'S',FIELDS=(TIOT)
         L     R3,TIOTADDR
         LA    R3,24(,R3)          A(DD ENTRIES IN TIOT)
         LA    R2,DCB1             ADDR OF DCB FOR FIRST FILE
         LA    R5,12               PRINT POSN FOR FIRST FILE
         LA    R6,133              LAST POSSIBLE PRINT POSITION
         LA    R10,DCB1INF         INFO-BLOCK FOR FIRST FILE
         USING FILEINFO,R10
INIT20   EQU   *
         XR    R4,R4
         IC    R4,0(,R3)           LENGTH OF THIS DD ENTRY
         LTR   R4,R4               END OF TIOT ?
         BZ    INIT100             YES - END OF SCAN
         CLC   4(6,R3),SYSLIB      DDNAME = SYSLIBXX ?
         BNE   INIT90              NO - IGNORE ENTRY
         MVC   40(8,R2),4(R3)      MOVE DDNAME TO DCB
         MVC   DDNAME,4(R3)        STORE DDNAME
         RDJFCB ((2),INPUT)        READ JFCB
         MVC   DSNAME(13),JFCB     STORE DSNAME
         OBTAIN  CAMLST            READ DSCB FOR FILE
         LTR   R15,R15             OBTAIN O.K. ?
         BZ    INIT30              YES - CONTINUE
         MVI   RC,4                SET RETURN CODE
         MVC   MSG2+9(8),DDNAME
         MVC   PRTLINE(L'MSG2),MSG2
         BAL   R11,PRTRTNX         PRINT 'OBTAIN FAILED' MSG
         B     INIT90              IGNORE THIS DDNAME
INIT30   EQU   *
         TM    DSCB+38,X'02'       DSORG = PO ?
         BO    INIT40              YES - CONTINUE
         MVI   RC,4                SET RETURN CODE
         MVC   MSG3+9(8),DDNAME
         MVC   PRTLINE(L'MSG3),MSG3
         BAL   R11,PRTRTNX         PRINT 'INVALID DSORG' MSG
         B     INIT90              IGNORE THIS DDNAME
INIT40   EQU   *
         STH   R5,PRTDISP          STORE PRINT LINE DISPLACEMENT
         TM    DSCB+40,X'C0'       RECFM = U ?
         BO    INIT50              YES - BRANCH
         LA    R5,7(,R5)           UPDATE PRT LINE DISPLACEMENT
         B     INIT60
INIT50   EQU   *
         LA    R5,13(,R5)          UPDATE PRINT LINE DISPLACEMENT
         OI    FLAGS,LOADLIB       INDICATE LOAD LIBRARY
INIT60   EQU   *
         CR    R5,R6               ENOUGH ROOM FOR PRINT ?
         BNH   INIT70              YES - BRANCH
         MVI   RC,4                SET RETURN CODE
         MVC   MSG4+9(8),DDNAME
         MVC   PRTLINE(L'MSG4),MSG4
         BAL   R11,PRTRTNX         PRINT 'NO SPACE ON LINE' MESSAGE
         B     INIT90              IGNORE THIS DDNAME
INIT70   EQU   *
         LA    R5,2(,R5)           UPDATE PRINT LINE DISPLACEMENT
         OPEN  ((2),INPUT)         OPEN FILE
         TM    48(R2),X'10'        OPEN O.K. ?
         BO    INIT80              YES - BRANCH
         MVI   RC,4                SET RETURN CODE
         MVC   MSG5+9(8),DDNAME
         MVC   PRTLINE(L'MSG5),MSG5
         BAL   R11,PRTRTNX         PRINT 'OPEN FAILED' MSG
         B     INIT90              IGNORE THIS DDNAME
INIT80   EQU   *
         LR    R1,R2
         BAL   R11,GETRTNX         ISSUE FIRST GET
         LH    R1,PRTDISP
         LA    R14,SUBHDR1(R1)
         LA    R15,SUBHDR2(R1)
         TM    FLAGS,LOADLIB       LOAD LIBRARY ?
         BO    INIT85              YES- BRANCH
         MVC   0(7,R14),DSNAME     DSNAME TO SUBTITLE
         MVC   0(7,R15),UNDERSC    UNDERSCORE TO SUBTITLE
         B     INIT87
INIT85   EQU   *
         MVC   0(13,R14),DSNAME    DSNAME TO SUBTITLE
         MVC   0(13,R15),UNDERSC   UNDERSCORE TO SUBTITLE
INIT87   EQU   *
         LA    R10,INFOLEN(,R10)   UPDATE TO NEXT INFO-BLOCK
         L     R2,DCBADDR          UPDATE TO NEXT DCB
         L     R14,FILECNT
         LA    R14,1(,R14)
         ST    R14,FILECNT         INCREMENT FILE COUNT
INIT90   EQU   *
         LA    R3,0(R3,R4)         UPDATE TO NEXT TIOT ENTRY
         B     INIT20              LOOP TO PROCESS IT
         SPACE 2
INIT100  EQU   *
         SR    R6,R5               NO. OF PRINT POSNS REMAINING
         ST    R6,WORD3            STORE VALUE
         LA    R5,PRTAREA(R5)      NEXT PRINT POSITION
         ST    R5,WORD2            STORE VALUE
         LA    R1,SYSPRINT         ADDRESS OF PRINT DCB
         ST    R1,WORD4            PLACE IN PARM LIST
         PUT   SYSPRINT,X0B        SPACE 1 LINE BEFORE SUB-HEADINGS
         AP    LINECNT,P1          UPDATE LINE COUNT
         L     R14,FILECNT
         LTR   R14,R14             ANY FILES VALID ?
         BNZ   INIT110             YES - GO OUTPUT SUBHEADINGS
         MVC   PRTLINE(L'MSG6),MSG6
         MVI   RC,4                SET RETURN CODE
         BAL   R11,PRTRTN          PRINT 'NO FILES ACCEPTED' MESSAGE
         B     EOJOB               TERMINATE RUN
INIT110  EQU   *
         PUT   SYSPRINT,SUBHDR1    OUTPUT SUBHEADINGS
         PUT   SYSPRINT,SUBHDR2
         EJECT
PROC10   EQU   *
         LA    R10,DCB1INF         ADDR OF INFO FOR FIRST FILE
         L     R14,RECADDR         CURRENT REC ADDRESS FOR FIRST FILE
         MVC   STORE,0(R14)        STORE CURRENT MEMBER NAME
         L     R9,FILECNT
         BCTR  R9,R0               NO OF FILES LESS ONE
         LTR   R9,R9               ONLY ONE LIBRARY ?
         BZ    PROC40              YES - BRANCH
PROC20   EQU   *
         LA    R10,INFOLEN(,R10)   UPDATE TO NEXT INFO BLOCK
         L     R14,RECADDR         CURRENT REC ADDRESS FOR THAT FILE
         CLC   STORE,0(R14)        SET UP STORE SO THAT IT
         BL    PROC30                CONTAINS THE LOWEST MEMBER
         MVC   STORE,0(R14)            NAME OF ALL  THE FILES
PROC30   EQU   *
         BCT   R9,PROC20           LOOP THRU FILES
         SPACE 3
PROC40   EQU   *
         CLC   STORE,HIGHVALS      END OF FILE ON ALL FILES ?
         BE    EOJOB               YES - GO TO END OF JOB
         MVC   PRTLINE(8),STORE    LOWEST MEMBER NAME TO PRINT LINE
         LA    R5,STORE            A(MEMBER NAME)
         ST    R5,WORD1            STORE VALUE
         L     R9,FILECNT          NO OF FILES
         LA    R10,DCB1INF         ADDRESS OF INFO-BLOCK FOR FIRST FILE
PROC50   EQU   *
         LH    R8,PRTDISP
         LA    R8,PRTAREA(R8)      ADDRESS OF PRINT POSN FOR THIS FILE
         L     R3,RECADDR          RECORD ADDRESS FOR THIS FILE
         CLC   STORE,0(R3)         ONLY PRINT FOR THIS FILE IF CURRENT
*                                  MEMBER NAME FOR THIS FILE IS LOWEST
*                                  OF ALL FILES
         BNE   PROC90
         IC    R14,11(,R3)
         SLL   R14,27
         SRL   R14,26              CALC LENGTH OF USER INFO FOR MEMBER
         MVI   1(R8),C'X'
         MVC   2(4,R8),1(R8)       DEFAULT SSI INFO IN CASE NON PRESENT
         TM    FLAGS,LOADLIB       RECFM = U ?
         BZ    PROC60              NO - DONT LOOK FOR MODULE LENGTH
         C     R14,F22             LOAD LIBRARY PDS ENTRY ?
         BL    PROC60              NO - DONT LOOK FOR MODULE LENGTH
         LA    R14,12(R3,R14)      MARK BYTE AFTER RECORD
         UNPK  6(7,R8),22(4,R3)
         MVI   6(R8),C' '
         TR    7(5,R8),TRTAB-240
         MVI   12(R8),C' '         MOVE MODULE LENGTH TO PRINT LINE
         LA    R15,34(,R3)         STANDARD LOCATION OF SSI FIELD
         TM    11(R3),X'80'        ALIAS ?
         BZ    *+8
         LA    R15,10(,R15)        ADD 10 IF ALIAS
         TM    20(R3),X'04'        SCATTER FORMAT ?
         BZ    *+8
         LA    R15,8(,R15)         ADD 8 OF SCATTER FORMAT
         LA    R1,4(,R15)
         CR    R1,R14              IS SSI PRESENT ?
         BH    PROC80              BRANCH IF NOT
         B     PROC70              GO TO MOVE SSI TO PRINT LINE
PROC60   EQU   *
         C     R14,F4              SYMBOLIC LIBRARY WITH SSI ?
         BNE   PROC80              NO - ABANDON SSI SEARCH
         LA    R15,12(,R3)         CALC ADDRESS OF SSI FIELD
PROC70   EQU   *
         UNPK  0(7,R8),1(4,R15)
         MVI   0(R8),C' '
         TR    1(5,R8),TRTAB-240
         MVI   6(R8),C' '          MOVE SSI FIELD TO PRINT LINE
PROC80   EQU   *
         BAL   R11,GETRTN          GET NEXT RECORD FOR THIS FILE
PROC90   EQU   *
         LA    R10,INFOLEN(,R10)   UPDATE TO NEXT FILES INFO-BLOCK
         BCT   R9,PROC50           LOOP TO PROCESS ALL FILES
         CLI   EXITNAME,C' '       IF NO EXIT PRESENT
         BE    NOCALL              BYPASS CALL TO USER EXIT
         LA    R1,ALIST            A (ADDRESS OF PARM LIST)
         L     R15,ENTRYPT         A(USER EXIT)
         BALR  R14,R15             CALL
NOCALL   EQU   *
         BAL   R11,PRTRTN          PRINT LINE FOR THIS MEMBER
         B     PROC10              LOOP TO DETERMINE NEXT MEMBER NAME
         EJECT
EOJOB    EQU   *
         CLI   EXITNAME,C' '       IF NO USER EXIT
         BE    AROUND              BYPASS CALL
         MVC   WORD1,F0            DUMMY PARM (CLOSE ONLY)
         LA    R1,ALIST
         L     R15,ENTRYPT         AND FINAL CALL TO EXIT
         BALR  R14,R15
         DELETE EPLOC=EXITNAME     DELETE USER EXIT
AROUND   EQU   *
         CLOSE SYSPRINT
         XR    R15,R15
         IC    R15,RC
EOJOBX   EQU   *
         LRETN RC=(15)
         EJECT
GETRTN   EQU   *
         LM    R15,R1,RECADDR      CURR REC ADDR/EOB ADDR/DCB ADDR
         IC    R14,11(,R15)
         SLL   R14,27
         SRL   R14,26              CALC LENGTH OF CURRENT RECORD
         LA    R15,12(R15,R14)     CALC ADDR OF NEXT RECORD
         ST    R15,RECADDR         STORE IT
         CR    R15,R0              NEW REC ADDRESS BEYOND BLOCK ?
         BLR   R11                 NO - ADDR IS VALID - EXIT
GETRTNX  EQU   *
         GET   (1)                 GET ANOTHER PDS BLOCK
         LR    R0,R1
         AH    R0,0(,R1)           CALC EOB ADDRESS
         LA    R15,2(,R1)          CALC ADDR OF FIRST RECORD
         STM   R15,R0,RECADDR      STORE ADDRESSES
         BR    R11                 EXIT
         EJECT
PRTRTN   EQU   *
         CP    LINECNT,P50         PAGE SKIP REQUIRED ?
         BL    PRTRTNX             NO - BRANCH
         PUT   SYSPRINT,X8B        SKIP TO A NEW PAGE
         AP    PAGECNT,P1          INCREMENT PAGE COUNT
         OI    PAGECNT+1,X'0F'     SET SIGN
         UNPK  HDRPGNO(3),PAGECNT  MOVE TO HEADING LINE
         PUT   SYSPRINT,HDR        OUTPUT HEADING LINE
         PUT   SYSPRINT,SUBHDR1    OUTPUT SUBHEADING
         PUT   SYSPRINT,SUBHDR2    OUTPUT SUBHEADING
         SP    LINECNT,LINECNT     CLEAR LINE COUNT
PRTRTNX  EQU   *
         PUT   SYSPRINT,PRTAREA    OUTPUT PRINT LINE
         MVI   PRTLINE,C' '
         MVC   PRTLINE+1(131),PRTLINE
         AP    LINECNT,P1          UPDATE LINE COUNT
         BR    R11
         EJECT
SYNAD    EQU   *   *** SYNAD EXIT ROUTINE FOR ALL 'SYSLIBXX DD' FILES
         MVI   RC,16
         SYNADAF ACSMETH=QSAM
         MVC   PRTLINE(L'MSG7),MSG7
         MVC   PRTLINE+L'MSG7(70),50(R1)
         SYNADRLS
         BAL   R11,PRTRTNX
         B     EOJOB
         EJECT
DWORD    DS    D
DCB1INF  DC    A(0,0,DCB1),H'0',CL8' ',CL13' ',X'00'
DCB2INF  DC    A(0,0,DCB2),H'0',CL8' ',CL13' ',X'00'
DCB3INF  DC    A(0,0,DCB3),H'0',CL8' ',CL13' ',X'00'
DCB4INF  DC    A(0,0,DCB4),H'0',CL8' ',CL13' ',X'00'
DCB5INF  DC    A(0,0,DCB5),H'0',CL8' ',CL13' ',X'00'
DCB6INF  DC    A(0,0,DCB6),H'0',CL8' ',CL13' ',X'00'
DCB7INF  DC    A(0,0,DCB7),H'0',CL8' ',CL13' ',X'00'
DCB8INF  DC    A(0,0,DCB8),H'0',CL8' ',CL13' ',X'00'
DCB9INF  DC    A(0,0,DCB9),H'0',CL8' ',CL13' ',X'00'
DCB10INF DC    A(0,0,DCB10),H'0',CL8' ',CL13' ',X'00'
DCB11INF DC    A(0,0,DCB11),H'0',CL8' ',CL13' ',X'00'
DCB12INF DC    A(0,0,DCB12),H'0',CL8' ',CL13' ',X'00'
DCB13INF DC    A(0,0,DCB13),H'0',CL8' ',CL13' ',X'00'
F4       DC    F'4'
F22      DC    F'22'
F0       DC    F'0'
ALIST    DC    A(LIST)
LIST     DS    0F
WORD1    DS    F
WORD2    DS    F
WORD3    DS    F
WORD4    DS    F
EXITNAME DC    8C' '
ENTRYPT  DS    F
H0       DC    H'0'
MOVENAME MVC   EXITNAME(0),2(R1)
TIOTADDR DS    F      ADDRESS OF TIOT AFTER EXTRACT
EXLST    DC    X'87',AL3(JFCB)
JFCB     DS    44F
DSCB     DS    CL148
AWORK    DC    A(WORK)
CAMLST   CAMLST  SEARCH,JFCB,JFCB+118,DSCB
S0ADTTM  DC    CL8'S0ADTTM'
UNDERSC  DC    13C'-'
P1       DC    P'1'
P50      DC    P'50'
SYSLIB   DC    C'SYSLIB'
RC       DC    X'00'
FILECNT  DC    F'0'
LINECNT  DC    PL2'0'
PAGECNT  DC    PL2'1'
STORE    DS    CL8
HIGHVALS DC    8X'FF'
TRTAB    DC    C'0123456789ABCDEF'
WORK     DS    CL13
X8B      DC    X'8B',CL132' '
X0B      DC    X'0B',CL132' '
MSG2     DC    C'S0A802I  XXXXXXXX - OBTAIN FAILED'
MSG3     DC    C'S0A803I  XXXXXXXX - DATA SET ORGANISATION NOT PO'
MSG4     DC    C'S0A804I  XXXXXXXX - NOT PROCESSED - PRINT LINE FULL'
MSG5     DC    C'S0A805I  XXXXXXXX - OPEN FAILED'
MSG6     DC    C'S0A806I  NO FILES TO BE PROCESSED'
MSG7     DC    C'S0A807E  PERMANENT I/O ERROR   '
         EJECT
HDR      DC    X'19'
         DC    C'LEGAL AND GENERAL LIBRARY ANALYSIS UTILITY'
         DC    C'          DATE '
HDRDATE  DC    C'XX/XX/XX'
         DC    C'   TIME '
HDRTIME  DC    C'XX.XX'
         DC    C'    PAGE NO '
HDRPGNO  DC    C'001'
         DC    CL39' '
         SPACE 2
SUBHDR1  DC    X'09'
         DC    CL132' MEMBER'
         SPACE 2
SUBHDR2  DC    X'11'
         DC    CL132'--------'
         SPACE 2
PRTAREA  DS    0CL133
         DC    X'09'
PRTLINE  DC    CL132' '
         EJECT
         PRINT NOGEN
SYSPRINT DCB   DSORG=PS,MACRF=PM,DDNAME=SYSPRINT,RECFM=FBM,LRECL=133,  *
               BLKSIZE=133
DCB1     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB2     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB3     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB4     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB5     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB6     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB7     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB8     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB9     DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB10    DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB11    DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB12    DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
DCB13    DCB   DSORG=PS,MACRF=GL,DDNAME=#,EXLST=EXLST,SYNAD=SYNAD,     *
               RECFM=FB,LRECL=256,BLKSIZE=256
         SPACE 3
         EJECT
FILEINFO DSECT
         SPACE 2
RECADDR  DS    F                   ADDR OF CURRENT RECORD IN BLOCK
EOBADDR  DS    F                   ADDR OF END OF BLOCK
DCBADDR  DS    F                   ADDR OF DCB
PRTDISP  DS    H                   DISPLACEMENT INTO PRINT LINE
DDNAME   DS    CL8                 DDNAME
DSNAME   DS    CL13                FIRST 13 CHARS OF DSNAME
FLAGS    DS    CL1                 FLAGS
LOADLIB  EQU   X'80'               SET IF RECFM = U
         DS    0F                  END OF BLOCK
         SPACE 2
INFOLEN  EQU   *-FILEINFO          LENGTH OF DSECT
         EJECT
         END
