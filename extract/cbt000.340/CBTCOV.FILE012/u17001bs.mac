S60020   CSECT
         ENTRY GETDAT
         PRINT NOGEN
*
*        GETDAT.
*
*    GENERAL DATE ACCESS / CONVERSION ROUTINE.
*
*    1.   CONTROL DATE DD/MM/YY
*    2.   CONTROL DATE DDMMYY
*    3.   CONTROL DATE YYDDD
*    4.   CONVERT DD/MM/YY TO YYDDD
*    5.   CONVERT DDMMYY TO YYDDD
*    6.   CONVERT YYDDD TO DD/MM/YY
*    7.   CONVERT YYDDD TO DDMMYY
*    A.   IPL DATE DD/MM/YY
*    B.   IPL DATE DDMMYY
*    C.   IPL DATE YYDDD
*
         EJECT
GETDAT   EQU   *
         MBEGIN
         LM    R2,R4,0(R1)              STORE PARAMETER ADDRESSES
         CLI   0(R2),C'1'               TEST FOR C/F DD/MM/YY
         BE    TYPE1                    YES, BRANCH
         CLI   0(R2),C'2'               TEST FOR C/F DDMMYY
         BE    TYPE2                    YES, BRANCH
         CLI   0(R2),C'3'               TEST FOR C/F YYDDD
         BE    TYPE3                    YES, BRANCH
         CLI   0(R2),C'4'               TEST FOR DD/MM/YY TO YYDDD
         BE    TYPE4                    YES, BRANCH
         CLI   0(R2),C'5'               TEST IF DDMMYY TO YYDDD
         BE    TYPE5                    YES, BRANCH
         CLI   0(R2),C'6'               TEST IF YYDDD TO DD/MM/YY
         BE    TYPE6                    YES, BRANCH
         CLI   0(R2),C'7'               TEST IF YYDDD TO DDMMYY
         BE    TYPE7                    YES, BRANCH
         CLI   0(R2),C'A'               TEST IF IPL DD/MM/YY
         BE    TYPEA                    YES, BRANCH
         CLI   0(R2),C'B'               TEST IF IPL DDMMYY
         BE    TYPEB                    YES, BRANCH
         CLI   0(R2),C'C'               TEST IF IPL YYDDD
         BE    TYPEC                    YES, BRANCH
EXIT     EQU   *
         MFINISH
*
*        CONTROL FILE ROUTINES
*
TYPE1    EQU   *
TYPE2    EQU   *
TYPE3    EQU   *
         CLC   CONDATE,SPACES           TEST IF FIRST C/F REQUEST
         BNE   CFGOT                    NO, ALREADY AVAILABLE
         STM   R1,R3,SAVE1              SAVE REGISTERS 1,2 AND 3
         OPEN  MISOCF                   OPEN FILE
         GET   MISOCF                   READ CONTROL RECORD.
         MVC   CONDATE2,0(R1)           STORE DDMMYY
         MVC   CONDATE1,0(R1)           STORE DD
         MVI   CONDATE1+2,C'/'          SLASH
         MVC   CONDATE1+3(2),2(R1)      STORE MM
         MVI   CONDATE1+5,C'/'          SLASH
         MVC   CONDATE1+6(2),4(R1)      YY
         MVC   DD(6),CONDATE2           READY FOR CONVERSION
         BAL   R10,CONV1                CONVERT TO YYDDD
         MVC   CONYDDD,YYDDD            STORE YYDDD
         CLOSE MISOCF                   CLOSE FILE
         LM    R1,R3,SAVE1              RESTORE R1, R2 AND R3
CFGOT    EQU   *
         CLI   0(R2),C'1'               TEST FOR DD/MM/YY
         BNE   NOTCF1                   NO, BRANCH
         MVC   0(8,R3),CONDATE1         MOVE DD/MM/YY
         B     EXIT                     GO TO EXIT
NOTCF1   EQU   *
         CLI   0(R2),C'2'               TEST FOR DDMMYY
         BNE   NOTCF2                   NO, BRANCH
         MVC   0(6,R3),CONDATE2         MOVE DDMMYY
         B     EXIT                     GO TO EXIT
*
*
NOTCF2   EQU   *
         MVC   0(5,R3),CONYDDD          MOVE YYDDD
         B     EXIT                     GO TO EXIT
         EJECT
*
*        CONVERSION ROUTINES
*
TYPE4    EQU   *
         MVC   DD,0(R3)                 STORE DAY
         MVC   MM,3(R3)                 STORE MONTH
         MVC   YY,6(R3)                 STORE YEAR
         BAL   R10,CONV1                CONVERT TO YYDDD
         MVC   0(5,R4),YYDDD            MOVE TO OUTPUT AREA
         B     EXIT                     GO TO EXIT
*
TYPE5    EQU   *
         MVC   DD(6),0(R3)              STORE DAY MONTH AND YEAR
         BAL   R10,CONV1                CONVERT TO YYDDD
         MVC   0(5,R4),YYDDD            MOVE TO OUTPUT AREA
         B     EXIT                     GO TO EXIT
*
TYPE6    EQU   *
         MVC   YYDDD,0(R3)              STORE YYDDD
         BAL   R10,CONV2                CONVERT TO DDMMYY
         MVC   0(2,R4),DD               MOVE DAY
         MVI   2(R4),C'/'               INSERT SLASH
         MVC   3(2,R4),MM               MOVE MONTH
         MVI   5(R4),C'/'               INSERT SLASH
         MVC   6(2,R4),YY               MOVE YEAR
         B     EXIT                     GO TO EXIT
*
TYPE7    EQU   *
         MVC   YYDDD,0(R3)              STORE YYDDD
         BAL   R10,CONV2                CONVERT TO DDMMYY
         MVC   0(6,R4),DD               MOVE TO OUTPUT AREA
         B     EXIT                     GO TO EXIT
         EJECT
*
*        IPL DATE ROUTINES
*
TYPEA    EQU   *
TYPEB    EQU   *
TYPEC    EQU   *
         CLC   IPLDATE,SPACES           TEST IF FIRST IPL REQUEST
         BNE   IPLGOT                   NO, ALREADY AVAILABLE
         ST    R1,SAVE1                 STORE R1
         TIME  DEC                      GET DATE IN R1 (00YYDDD+)
         ST    R1,WORKD8                STORE DATE
         L     R1,SAVE1                 RESTORE R1
         UNPK  IPLYDDD,WORKD8+1(3)      UNPACK DATE
         OC    IPLYDDD,NUMERIC          ENSURE NUMERIC
         MVC   YYDDD,IPLYDDD            STORE FOR SUBROUTINE
         BAL   R10,CONV2                CONVERT TO DDMMYY
         MVC   IPLDMY2,DD               MOVE TO DDMMYY
         MVC   IPLDMY1,DD               MOVE DAYS
         MVI   IPLDMY1+2,C'/'           MOVE SLASH
         MVC   IPLDMY1+3(2),MM          MOVE MONTH
         MVI   IPLDMY1+5,C'/'           MOVE SLASH
         MVC   IPLDMY1+6(2),YY          MOVE YEAR
IPLGOT   EQU   *
         CLI   0(R2),C'A'               TEST FOR DD/MM/YY
         BNE   NOTIPLA                  NO, BRANCH
         MVC   0(8,R3),IPLDMY1          MOVE DD/MM/YY
         B     EXIT                     GO TO EXIT
NOTIPLA  EQU   *
         CLI   0(R2),C'B'               TEST FOR DDMMYY
         BNE   NOTIPLB                  NO, BRANCH
         MVC   0(6,R3),IPLDMY2          MOVE DDMMYY
         B     EXIT                     GO TO EXIT
NOTIPLB  EQU   *
         MVC   0(5,R3),IPLYDDD          MOVE YYDDD
         B     EXIT                     GO TO EXIT
         EJECT
*
*
*        CONVERSION SUBROUTINE - DDMMYY TO YYDDD
*
CONV1    EQU   *
         MVC   YYDDD,SPACES             CLEAR OUTPUT FIELD
         TRT   DD(6),NUMBERS            TEST IF NUMERIC
         BNE   0(R10)                   NO, EXIT
         CLC   MM,C01                   TEST IF MM LT 01
         BL    0(R10)                   EXIT IF YES
         CLC   MM,C12                   TEST IF MM GT 12
         BH    0(R10)                   EXIT IF YES
         CLC   DD,C01                   TEST IF DD LT 01
         BL    0(R10)                   EXIT IF YES
         PACK  WORK3,YY                 STORE YEAR NUMBER
         BAL   R9,LEAPTEST              ADJUST DAY TABLE IF LEAP YEAR
         LA    R5,TABLE                 POINT TO DAY TABLE
         PACK  WORKD8,MM                PUT MONTH NUMBER TO WORK
         MP    WORKD8,P2                DOUBLE IT FOR TABLE POINTER
         SP    WORKD8,P2                CHANGE TO DISPLACEMENT
         CVB   R6,WORKD8                PUT INTO R6
         AR    R5,R6                    MODIFY TABLE POINTER
         PACK WORK2,DD                  PACK DAY NUMBER
         CP    WORK2,0(2,R5)            IS DD TOO BIG
         BH    0(R10)                   BRANCH IF YES
         ZAP   WORK3,P0                 ZEROISE DAY COUNT FIELD
         PACK  WORK2,MM                 STORE MONTH NUMBER
         LA    R5,TABLE                 POINT TO DAY TABLE
LOOP12   EQU   *
         SP    WORK2,P1                 SUBTRACT 1 FROM MONTH
         CP    WORK2,P0                 TEST END OF LOOP
         BE    CONV12A                  YES, BRANCH
         AP    WORK3,0(2,R5)            ADD DAYS TO ACCUMULATOR
         LA    R5,2(R5)                 INCREMENT POINTER
         B     LOOP12                   REPEAT LOOP
CONV12A  EQU   *
         PACK  WORK2,DD                 PACK DAYS INTO WORK2
         AP    WORK3,WORK2              ADD TO TOTAL DAY COUNT
         UNPK  YYDDD,WORK3              UNPACK TO OUTPUT AREA
         MVC   YYDDD(2),YY              MOVE YEAR ASWELL
         OC    YYDDD,NUMERIC            ENSURE NUMERIC
         BR    R10                      EXIT FROM SUBROUTINE
         EJECT
*
*        CONVERSION SUBROUTINE - YYDDD TO DD/MM/YY
*
CONV2    EQU   *
         MVC   DD(6),SPACES             CLEAR OUTPUT AREA
         TRT   YYDDD,NUMBERS            TEST IF INPUT IS NUMERIC
         BNE   0(R10)                   NO, EXIT FROM ROUTINE
         PACK  WORK3,YYDDD(2)           STORE YEAR NUMBER
         BAL   R9,LEAPTEST              ADJUST TABLE IF LEAP YEAR
         ZAP   WORK3,P365               ASSUME NOT A LEAP YEAR
         CP    TABLE+2(2),P28           TEST IF TRUE
         BE    *+10                     IF SO BYPASS NEXT INSTRUCTION
         ZAP   WORK3,P366               SET UP AS LEAP YEAR
         PACK WORK2,YYDDD+2(3)          PACK NUMBER OF DAYS
         CP    WORK2,WORK3              TEST IF DAYS TOO GREAT
         BH    0(R10)                   YES, EXIT FROM SUBROUTINE
         MVC   YY,YYDDD                 STORE YEAR NUMBER
         LA    R5,TABLE                 POINT TO DAY TABLE
         ZAP   MM,P1                    SET MONTH TO 1
         PACK  WORK2,YYDDD+2(3)         STORE NO,OF DAYS
LOOP34   EQU   *
         CP    WORK2,0(2,R5)            COMPARE DAYS / MM DAYS
         BNH   CONV34A                  IF LESS MONTH HS FOUND, BRANCH
         SP    WORK2,0(2,R5)            SUBTRACT MONTH DAYS
         AP    MM,P1                    ADD 1 TO MONTH NUMBER
         LA    R5,2(R5)                 POINT TO NEXT TABLE ENTRY
         B     LOOP34                   RETURN TO LOOP
CONV34A  EQU   *
         UNPK  WORK3,MM                 UNPACK MONTH NUMBER
         OC    WORK3,NUMERIC            ENSURE NUMERIC
         MVC   MM,WORK3+1               STORE IN OUTPUT AREA
         UNPK  WORK3,WORK2              UNPACK DAY NUMBER
         OC    WORK3,NUMERIC            ENSURE NUMERIC
         MVC   DD,WORK3+1               STORE IN OUTPUT AREA
         BR    R10                      EXIT FROM SUBROUTINE
         EJECT
*
*         SUBROUTINE TO CHECK FOR A LEAP YEAR
*
LEAPTEST EQU   *
         DP    WORK3,P4                 DIVIDE YEAR BY 4
         ZAP   TABLE+2(2),P28           ASSUME NOT A LEAP YEAR
         CP    WORK3+2(1),P0            TEST IF ABOVE IS TRUE
         BNE   0(R9)                    IF SO EXIT
         AP    TABLE+2(2),P1            SET FEBRUARY TO 29 DAYS
         BR    R9                       EXIT FROM SUBROUTINE
         EJECT
*
*        FILE DEFINITION
*
MISOCF   DCB   DDNAME=C60013A,DSORG=PS,EODAD=FILERR,MACRF=(GL)
*
*
*
*
FILERR   EQU   *
         WTO   'CONTROL FILE NOT LOADED.',DESC=6
         ABEND 96,,STEP
         EJECT
*
*        CONSTANTS / STORAGE / EQUATES
*
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R9       EQU   9
R10      EQU   10
R15      EQU   15
*
*
DD       DS    CL2
MM       DS    CL2
YY       DS    CL2
YYDDD    DS    CL5
*
IPLDATE  DS    0CL19
IPLDMY1  DC    CL8' '
IPLDMY2  DC    CL6' '
IPLYDDD  DC    CL5' '
*
CONDATE  DS    0CL19
CONDATE1 DC    CL8' '
CONDATE2 DC    CL6' '
CONYDDD  DC    CL5' '
*
*
SPACES   DC    CL19' '
SAVE1    DS    3F
EXTADDR  DS    F
NUMERIC  DC    6X'F0'
NUMBERS  DC    240X'FF'
         DC    10X'00'
         DC    6X'FF'
WORKD8   DS    D
TABLE    DC    P'31,28,31,30,31,30,31,31,30,31,30,31'
WORK2    DS    CL2
WORK3    DS    CL3
P0       DC    P'0'
C01      DC    C'01'
C12      DC    C'12'
P2       DC    P'2'
P1       DC    P'1'
P365     DC    P'365'
P28      DC    P'28'
P366     DC    P'366'
P4       DC    P'4'
*
*
         LTORG
         END
