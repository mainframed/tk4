+ WE WROTE THIS RATHER THAN PAY FOR DSPRINT. IT IS INVOKED IN A BATCH
+ JOB SUBMITTED BY THE REMOTE TERMINAL USER TO PROVIDE LOW TO MEDIUM
+ GRADE PRINTING ON A REMOTE 3287. ERROR RECOVERY IS NON-EXISTENT - IT
+ JUST PACKS UP.
+
+ IS YOU ARE INTERESTED IN THIS PROGRAM, SEE ALSO THE MORE ADVANCED
+ VERSION - NCZ96103.
+
         TITLE 'NCZ96101 - 3287 PRINT PROGRAM                          *
               - PROGRAM DOCUMENTATION'
*****                                                             *****
*                                                                     *
* ID:          NCZ96101 - 3287 PRINT PROGRAM                          *
*                                                                     *
* NCZ96101.1 PROGRAM DESCRIPTION                                      *
*                                                                     *
* A DATASET IS READ AND WRITTEN TO A 3287 PRINTER.  IF THE DCB        *
* INDICATES ASA CONTROL CHARACTERS, THESE ARE TRANSLATED TO 3287      *
* CONTROL CHARACTERS.  THE PROGRAM WILL INSERT A FORM FEED AFTER      *
* PRINTING 60 LINES ON EACH PAGE (SAME DEFAULT AS JES2).  SCS         *
* COMMANDS ARE NOT INCLUDED (AS YET) SO THAT IT SHOULD WORK ON ANY    *
* LOCAL OR REMOTE PRINTER OBEYING THE BASIC 3287 COMMANDS (FF, NL,    *
* CR, EM)                                                             *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ96101.2 USER INSTRUCTIONS                                        *
*                                                                     *
* THE PROGRAM SHOULD BE RUN AS A BATCH JOB.  IT IS SUGGESTED (FOR     *
* A FUTURE ENHANCEMENT) THAT THE JOB NAME START WITH THE USER'S LOGON *
* ID.  THE INPUT FILE TO BE PRINTED HAS THE DDNAME 'INPUT':           *
*                                                                     *
*  //STEPNAME  EXEC PGM=NCZ96101,PARM='PRINTER NAME'                  *
*  //STEPLIB  DD  DISP=SHR,DSN=MAC1.LOAD                              *
*  //INPUT    DD  DISP=SHR,DSN=YOUR.PRINT.FILE                        *
*                                                                     *
* PARM INPUT - NAME OF PRINTER - 4 CHARACTERS                         *
*                                                                     *
*IF NO PARM IS SPECIFIED, THE DEFAULT IS RL01 (LONDON 3287)           *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ96101.3 MESSAGES                                                 *
*                                                                     *
* NO MESSAGES (FOR NOW)                                               *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ96101.4 ABEND CODES                                              *
*                                                                     *
* NO USER ABENDS                                                      *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCZ96101.5 IMPLEMENTATION METHOD                                    *
*                                                                     *
* STANDARD ASSEMBLY AND LINK-EDIT                                     *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ96101.6 AMENDMENT HISTORY                                        *
*                                                                     *
* MAINTAIN THE RECORD BELOW.                                          *
*                                                                     *
* CHANGE HISTORY:                                                     *
* DATE      INITS VERSION COMMENTS                                    *
*                                                                     *
* 21 MAY 82 EMM   V01     CREATED                                     *
*                                                                     *
*****                                                             *****
         SPACE
*****                                                             *****
*                                                                     *
* NCZ96101.7 MODULARISATION DETAILS                                   *
*                                                                     *
* RECORD-MODE ACF/VTAM MACROS ARE USED TO WRITE THE DATA TO THE 3287  *
* REFER TO 'ACF/VTAM PROGRAMMING' FOR DETAILS.                        *
*                                                                     *
*****                                                             *****
         EJECT
*****                                                             *****
*                                                                     *
* NCZ96101.8 RETURN CODES AND REGISTER USE                            *
*                                                                     *
* RETURN CODES:RC = 0   INPUT FILE HAS SUCCESSFULLY BEEN PRINTED      *
*                                                                     *
*              RC = 4   FAILURE EITHER TO OPEN VTAM ACB OR ACQUIRE    *
*                       PRINTER                                       *
*                                                                     *
*              RC = 8   ERROR WHEN WRITING TO PRINTER                 *
*                                                                     *
* REG USAGE:   R0-R2 - WORK REGISTERS                                 *
*              R3 -  ADDRESS OF INPUT RECORD                          *
*              R4 -  LENGTH OF INPUT RECORD                           *
*              R5 -  ADDRESS OF CURRENT 'SLOT' IN OUTPUT BUFFER       *
*              R6 -  NO OF BYTES REMAINING IN OUTPUT BUFFER           *
*              R7 -  NOT USED                                         *
*              R8-R12 - WORK REGISTERS                                *
*              R13 - BASE REGISTER                                    *
*              R14 - LINKAGE                                          *
*              R15 - ENTRY ADDRESS, RETURN CODE                       *
*                                                                     *
*****                                                             *****
         TITLE 'NCZ96101 - 3287 PRINT PROGRAM                          *
               - PROGRAM CODE'
         PRINT NOGEN
NCZ96101 MSETUP 13
         L     R1,0(R1)
         ST    R1,PARMADR         SAVE PARMFIELD ADDRESS
         BAL   R14,INIT           INITIAL PROCESSING
         LTR   R15,R15            DID IT WORK OK?
         BNZ   EXIT               - NO, SOMETHING NOT OPENED
*
         BAL   R14,PROC           PROCESS THE DATASET
EXIT     BAL   R14,END            END PROCESSING
         MCLEAR RC=(15)
*
********************
*
* INITIAL PROCESSING - OPEN ACB AND INPUT FILE
*                      SET PRINTER NAME
*                      ACQUIRE PRINTER
*                      IF OPENS OR ACQUIRE FAIL, SET RC=4, ELSE 0
*
INIT     ST    R14,INITSAV
         OPEN  ACB
         LTR   R15,R15            WAS OPEN SUCCESSFUL?
         BNZ   INIEX4             - NO
*
         OPEN  (INPUT,(INPUT))    OPEN INPUT PRINT FILE
         TM    INPUT+48,X'10'     WAS OPEN SUCCESSFUL
         BZ    INIEX4             - NO
*
         LH    R2,INPUT+82        CHECK INPUT RECORD LENGTH
         CH    R2,=H'133'         NO MORE THAN 133 CHARS ALLOWED
         BL    INI010             - OK
         BH    INIEX4             - TOO LONG
*
* IF REC LENGTH IS 133, FIRST CHAR MUST BE ASA CHAR
*
         TM    INPUT+36,X'04'     ASA CHARS PRESENT?
         BZ    INIEX4             - NO
*
* SET PRINTER NAME (IF SPECIFIED IN PARM FIELD).
*
INI010   MVC   NEWNAME,=CL8' '    CLEAR NEW NAME
         L     R1,PARMADR         RELOAD PARMFIELD ADDRESS
         LH    R2,0(R1)           GET LENGTH
         LTR   R2,R2              IS THERE A PARMFIELD?
         BZ    INI020             - NO, USE DEFAULT
         CH    R2,=H'4'           IS IT 4 CHARS
         BNE   INIEX4             - NO, ERROR
         BCTR  R2,R0
         EX    R2,MOVENAME        MOVE NAME
         MODCB AM=VTAM,                                                *
               NIB=PRINTER,                                            *
               NAME=(*,NEWNAME)
         LTR   R15,R15            DID IT MODIFY OK?
         BNZ   INIEX4             - NO
*
INI020   OPNDST RPL=RPL           ACQUIRE PRINTER
         LTR   R15,R15            WAS IT ACQUIRED?
         BNZ   INIEX4             - NO
         TESTCB NIB=PRINTER,      WAS PRINTER ACQUIRED                 *
               AM=VTAM,                                                *
               CON=YES
         BNE   INIEX4             - NO
*
         ZAP   LCT,=P'0'          INITIALIZE LINE COUNT
*
INIEX0   LA    R15,0
         B     INIOUT
INIEX4   LA    R15,4
INIOUT   L     R14,INITSAV
         BR    R14
*
INITSAV  DS    A
MOVENAME MVC   NEWNAME(0),2(R1)   MOVE IN NEW NAME OF PRINTER
*
********************
*
* MAIN PROCESSING - BRANCH TO CLEAR ROUTINE
*                   READ INPUT RECORD
*                   BRANCH TO FORMAT ROUTINE
*                   ADD FORMATTED RECORD TO PRINT BUFFER
*                   WHEN BUFFER FULL (OR EOD), OUTPUT BUFFER
*
PROC     ST    R14,PROCSAV
PRO010   BAL   R14,CLEAR          CLEAR OUTPUT BUFFER, ETC
PRO020   MVC   INAREA,=CL134' '   CLEAR INPUT AREA
         GET   INPUT,INAREA
         LA    R3,INAREA          SET RECORD ADDRESS
         BAL   R14,FORMAT         FORMAT THE RECORD
         LR    R1,R4              LOAD RECORD LENGTH
         BCTR  R1,R0              SUBTRACT 1
         EX    R1,BUFADD          MOVE RECORD TO PRINT BUFFER
         LA    R5,0(R4,R5)        INCREASE BUFFER ADDRESS
         SR    R6,R4              DECREASE BYTES LEFT IN BUFFER
         CH    R6,=H'134'         ROOM FOR MORE?
         BNL   PRO020             - YES, GO GET SOME MORE
*
PRO030   MVI   0(R5),X'19'        INDICATE END OF MESSAGE
         LA    R12,OUTPUT         CALC LENGTH OF MESSAGE
         SR    R5,R12
         LA    R5,1(R5)           ADD ONE FOR EM CHAR
*
         MODCB RPL=RPL,           SET LENGTH OF MESSAGE                *
               RECLEN=(5)
         LTR   R15,R15            OK?
         BNZ   PROEX8             - NO, OH DEAR!!!
*
         SEND  RPL=RPL,                                                *
               BRACKET=(BB,EB),                                        *
               CONTROL=DATA,                                           *
               POST=RESP,                                              *
               STYPE=REQ,                                              *
               RESPOND=(NEX,FME,NRRN),                                 *
               AREA=OUTPUT
         LTR   R15,R15            WAS IT OK?
         BNZ   PROEX8             - NO, OH SH.....
*
         CLI   EOF,1              ANY MORE TO DO?
         BNE   PRO010             - YES
*
PROEX0   LA    R15,0
         B     PROOUT
PROEX8   ABEND 1,DUMP
PROOUT   L     R14,PROCSAV
         BR    R14
*
PROEOD   MVI   EOF,1              INDICATE END OF FILE
         B     PRO030             WRITE OUT FINAL MESSAGE
*
PROCSAV  DS    A
BUFADD   MVC   0(0,R5),0(R3)      MOVE INPUT RECORD TO OUTPUT BUFFER
*
********************
*
* END - RELEASE PRINTER, CLOSE ACB AND INPUT FILE AS NECESSARY
*       SET FINAL RETURN CODE
*
END      ST    R14,ENDSAV
         LR    R12,R15            SAVE RETURN CODE
         TESTCB NIB=PRINTER,      WAS PRINTER ACQUIRED                 *
               AM=VTAM,                                                *
               CON=YES
         BNE   END010             - NO
         CLSDST RPL=RPL           - YES, RELEASE IT
*
END010   TM    INPUT+48,X'10'     WAS INPUT FILE OPEN
         BZ    END020             - NO
         CLOSE INPUT
*
END020   TESTCB ACB=ACB,          WAS ACB OPEN                         *
               AM=VTAM,                                                *
               OFLAGS=OPEN
         BNE   END030             - NO
         CLOSE ACB                - YES, CLOSE IT
*
END030   LR    R15,R12            RESET RETURN CODE
         L     R14,ENDSAV
         BR    R14
*
ENDSAV   DS    A
*
********************
*
* CLEAR - CLEAR OUTPUT BUFFER
*         INITIALIZE POINTER AND COUNT REGISTERS
*
CLEAR    ST    R14,CLRSAV
         LA    R8,OUTPUT          SET UP TO CLEAR OUTPUT AREA
         LA    R9,LOUTPUT
         LA    R10,0
         IC    R11,X'40'
         SLL   R11,24
         MVCL  R8,R10
*
         LA    R5,OUTPUT          R5 - POINTS TO OUTPUT AREA
         MVC   0(2,R5),=X'F5C8'   MOVE IN WRITE COMMAND
         LA    R5,2(R5)           STEP FORWARD IN BUFFER
         LA    R6,LOUTPUT         R6 - BYTES LEFT IN OUTPUT AREA
         SH    R6,=H'2'
*
         L     R14,CLRSAV
         BR    R14
*
CLRSAV   DS    A
*
********************
*
* FORMAT - TRANSLATE ASA CHARS TO 3287 CONTROL CHARS
*          ADD FORM FEED FOR FIRST RECORD (IF NOT THERE)
*          TRIM SPACES FROM RIGHT OF RECORD
*          SET LENGTH OF RECORD
*
FORMAT   ST    R14,FORSAV
         LH    R4,INPUT+82        LOAD RECORD LENGTH
         TM    INPUT+36,X'04'     ASA CHARS PRESENT?
         BZ    FOR050             - NO
*
         CLI   0(R3),C'+'         SAME LINE
         BNE   FOR010
         MVI   0(R3),X'0D'
         SP    LCT,=P'0'          REQD TO SET CONDITION CODE
         B     FOR060
*
FOR010   CLI   0(R3),C'0'         DOUBLE SPACE?
         BNE   FOR020
         MVI   0(R3),X'15'
         SP    LCT,=P'2'
         B     FOR060
*
FOR020   CLI   0(R3),C'-'         TRIPLE SPACE?
         BNE   FOR030
         MVI   0(R5),X'15'        ADD EXTRA LINE FEED TO OUTPUT BUFFER
         LA    R5,1(R5)
         BCTR  R6,R0
         MVI   0(R3),X'15'
         SP    LCT,=P'3'
         B     FOR060
*
* IF FIRST CHAR IS NEW PAGE OR ANYTHING NOT ABOVE, WIPE IT OFF
*
FOR030   CLI   0(R3),C'1'         NEW PAGE?
         BNE   FOR040
         SP    LCT,=P'70'         FORCE NEW PAGE
FOR040   BCTR  R4,R0              RESET LINE LENGTH
         LR    R2,R4
         BCTR  R2,R0              SET LENGTH FOR MOVE
         EX    R2,WIPEMOVE        WIPE OFF FIRST CHAR
*
FOR050   SP    LCT,=P'1'          INDICATE ONE LINE
*
* INPUT LINE IS NOW IN A FORM WHICH CAN BE SENT TO THE 3287 AND LINE
* LENGTH HAS BEEN ADJUSTED AS NECESSARY
* CONDITION CODE HAS BEEN SET FOR TEST FOR NEW PAGE
*
FOR060   BP    FOR070             NEW PAGE NOT NEEDED
         MVC   0(2,R5),=X'0C0D'   PUT FF AND CR IN BUFFER
         LA    R5,2(R5)
         SH    R6,=H'2'
         ZAP   LCT,=P'60'         RESET LINE COUNT
*
* LINE CAN NOW BE PRINTED - TRIM TRAILING BLANKS FIRST
*
FOR070   LR    R8,R3              POINT R8 AT END OF RECORD
         AR    R8,R4
         BCTR  R8,R0              R8 - NOW AT LAST CHAR IN RECORD
         MVI   TRIM,0             SET TRIM FLAG
FOR080   CLI   0(R8),C' '
         BNE   FOR090
         MVI   TRIM,1             SHOW LINE TRUCATED
         BCTR  R8,R0              STEP BACK ALONG RECORD
         BCT   R4,FOR080          DECREASE LENGTH
*
FOR090   CLI   TRIM,1             HAS RECORD BEEN TRIMMED
         BE    FOR100             - YES, ADD LF COMMAND
*
* IF LINE HAS NOT BEEN TRIMMED AND IS SHORTER THAN LENGTH OF 3287
* PRINT LINE, A LINE FEED COMMAND IS NEEDED
*
         CH    R4,=H'132'         IS LINE SHORTER THAN MAX LENGTH
         BNL   FOR110             - NO, NO LF REQUIRED
*
FOR100   LA    R8,1(R8)           POINT AT FIRST TRAILING BLANK
         LA    R4,1(R4)
         MVI   0(R8),X'15'        INSERT LF COMMAND
*
FOR110   L     R14,FORSAV
         BR    R14
*
FORSAV   DS    A
WIPEMOVE MVC   0(0,R3),1(R3)      WIPE FIRST CHAR FROM INPUT LINE
*
********************
*
         TITLE 'NCZ96101 - 3287 PRINT PROGRAM                          *
               - DATA DEFINITION'
         LTORG
*
INPUT    DCB   DDNAME=INPUT,                                           *
               MACRF=GM,                                               *
               DSORG=PS,                                               *
               EODAD=PROEOD
*
         DC    CL4'ACB'
ACB      ACB   AM=VTAM,                                                *
               APPLID=REMPRINT,                                        *
               MACRF=NLOGON
*
         DC    CL4'RPL'
RPL      RPL   AM=VTAM,                                                *
               ACB=ACB,                                                *
               NIB=PRINTER,                                            *
               AREA=OUTPUT,                                            *
               OPTCD=(SYN,ACQUIRE)
*
PRINTER  NIB   NAME=RL01,                                              *
               MODE=RECORD
*
REMPRINT DC    C'8',CL8'REMPRINT'
PARMADR  DC    A(0)
NEWNAME  DC    CL8' '
LCT      DC    PL2'0'
EOF      DC    X'0'
TRIM     DC    X'0'
*
INAREA   DC    CL134' '
*
OUTPUT   DS    CL2                WRITE COMMANDS
         DS    10CL133            LINES
         DS    C                  END OF MESSAGE
LOUTPUT  EQU   *-OUTPUT
*
********************
*
         END   NCZ96101
