./  ADD NAME=#START
         MACRO
&NAME   #START &ID,&REGS=(14,12),&BASE=(13),&EQU=,&SA=,                *
               &TYPE=,&LSA=72,&SP=,&RESET=YES,                         *
               &COPY=(CSA,TCA,TCTTE),                                  *
               &ERROR=(1,##ERROR,MSG),&PRINT=
.*  AUTHOR - PETER HAVERCAN - C.A.V. LIMITED
.*  DATE WRITTEN - JULY 1972
         GBLC      &##BASE,&##SAVE,&##EQU,&##BASE2,&##ERR(3)
         GBLC      &##PRINT
         GBLB      &##FLAGS(8)
         LCLA      &X,&Y,&Z
         LCLC      &R,&E,&RX,&R13,&U
&##BASE  SETC      '&BASE(1)'
&##BASE2 SETC      '&BASE(2)'
&##ERR(1) SETC     '&ERROR(1)'
&##ERR(2) SETC     '&ERROR(2)'
&##ERR(3) SETC     '&ERROR(3)'
&##FLAGS(1) SETB   ('&TYPE' EQ 'R')
&##FLAGS(2) SETB   ('&PRINT' NE '')
&##FLAGS(8) SETB   ('&TYPE' EQ 'X' OR '&TYPE' EQ 'CICS')
         AIF       ('&EQU' EQ 'NO').RNOTSET  BYPASS ALL EQUATE PROCESS
         AIF       ('&EQU' NE '').EQUSET EQU= SUPPLIED - OVRDE GLOBAL
         AIF       ('&##EQU' NE '').NOEQU GLOBAL SET - NOT TO BE RESET
&##EQU   SETC      'R'                 SET DEFAULT
         AGO       .GBLESET            OFF TO GENERATE EQUATES
.EQUSET  AIF       ('&##EQU' EQ '&EQU').NOEQU 'EQU=' SAME AS GLOBAL
&##EQU   SETC      '&EQU'              RESET GLOBAL
.GBLESET SPACE     2
.ELOOP   ANOP
&##EQU&X EQU       &X
&X       SETA      &X+1
         AIF       (&X LT 16).ELOOP
         SPACE     2
.NOEQU   ANOP
&R       SETC      '&##EQU'            SET LOCAL WORK CONSTANT
.RNOTSET AIF       (NOT &##FLAGS(8)).NOCICS BYPASS CICS SUPPORT
*        DFH#STRT  &ID,COPY=&COPY,BASE=&BASE  CICS SUPPORT
         MEXIT
.NOCICS  AIF       ('&##BASE2' EQ '').UNULL
&U       SETC      ','.'&R&##BASE2'
.UNULL   ANOP
&RX      SETC      '&R.15'
&R13     SETC      '&R.13'
         USING     *,&RX
         AIF       ('&ID' EQ '').NULLID NO ID SPECIFIED
         AIF       ('&ID' EQ '*').SPECID
&X       SETA      K'&ID               NO OF CHARS IN ID
         AIF       ('&ID'(1,1) NE '''').UNQUOTE  ENCL IN QUOTES?
&X       SETA      &X-2                YES - DON'T INCLUDE IN COUNT
&Z       SETA      1                     AND SET OFFSET
.UNQUOTE ANOP
&Y       SETA      ((&X+2)/2)*2+4
&NAME    B         &Y.(&RX)            BRANCH AROUND ID
         DC        AL1(&X)             LENGTH OF IDENTIFIER
&Y       SETA      0
.CONTB   AIF       (&X GT 8).BRAKDWN
&E       SETC      '&ID'(&Y+&Z+1,&X)
         DC        CL&X'&E'            IDENTIFIER
&E       SETC      ''
         AGO       .CONTA
.BRAKDWN ANOP
&E       SETC      '&ID'(&Y+&Z+1,8)
         DC        CL8'&E'             IDENTIFIER
&Y       SETA      &Y+8
&X       SETA      &X-8
         AGO       .CONTB
.NULLID  ANOP
&E       SETC      '&NAME'             TO SET LABEL
         AGO       .CONTA
.SPECID  AIF       ('&NAME' EQ '').CSECTN
&E       SETC      '&NAME'
&X       SETA      1
.CONTQ   AIF       ('&E'(1,&X) EQ '&E').LEAVE
&X       SETA      &X+1
         AGO       .CONTQ
.CSECTN  AIF       ('&SYSECT' EQ '').CONTA
&E       SETC      '&SYSECT'
&X       SETA      1
         AGO       .CONTQ
.LEAVE   ANOP
&Y       SETA      ((&X+2)/2)*2+4
&NAME    B         &Y.(&RX)            BRANCH AROUND
         DC        AL1(&X),CL&X'&E'    IDENTIFIER
&E       SETC      ''
.CONTA   AIF       (T'&REGS(1) NE 'N').ERR3
&X       SETA      &REGS(1)*4+20
         AIF       (&X LE 75).CONTD
&X       SETA      &X-64
.CONTD   AIF       (N'&REGS NE 1).CONTE
&E       ST        &R&REGS(1),&X.(&R13)    SAVE REG
         AGO       .CONTG
.CONTE   ANOP
&E       STM       &R&REGS(1),&R&REGS(2),&X.(&R13)  SAVE REGS
.CONTG   AIF       ('&TYPE' EQ 'R').RTYPE   RE-ENTRANT
         AIF       ('&SA' EQ 'NO').CONTZ  OMIT SAVEAREA PROCESSING
&##SAVE  SETC      '&SA'
&E       SETC      ''
         CNOP      0,4
         ST        &R13,*+12           SAVE REG 13
&Y       SETA      (&LSA+3)/4
&X       SETA      &Y*4+4
         AIF       ('&##BASE2' EQ '').SKIP1
         AIF       ('&##BASE' NE '13').SKIP1
&X       SETA      &X+4
.SKIP1   BAL       &R13,*+&X           BRANCH AROUND
         AIF       ('&##BASE' NE '13').SAVE
         USING     *,&R13&U
.SAVE    ANOP
&SA      DC        &Y.F'0'             SAVEAREA
         AIF       ('&##BASE2'EQ'').SKIP4
         AIF       ('&##BASE' NE '13').SKIP4
&X       SETA      4104-&X
         DC        A(*+&X)
         L         &R&##BASE2,*-4      SET 2ND BASE REG
.SKIP4   ANOP
         AIF       ('&##BASE' EQ'15').CONTX
         DROP      &RX
         AGO       .CONTY
.CONTX   ANOP
&RX      SETC      '&R.2'
.CONTY   L         &RX,4(&R13)         OLD SAVEAREA ADDR
         ST        &R13,8(&RX)         CHAIN NEW SA TO OLD
         AGO       .CONTZ
.*  RE-ENTRANT CODING
.RTYPE   AIF       ('&##BASE' EQ '13').ERR4
.GMAIN   LA        &R.0,&LSA           LOAD SAVEAREA LENGTH
&RX      SETC      '&R.1'
         AIF       ('&SP' EQ '').NOSUBP  NO SUB-POOL REQD
         LA        &RX,&SP             SET SUBPOOL NUMBER
         SLL       &RX,24              SHIFT TO HI-ORDER
         OR        &R.0,&RX            OR INTO REG 0
.NOSUBP  ANOP
.*    SVC  10  REQUIRES REG 1 TO BE NEGATIVE FOR GETMAIN
         LNR       &RX,&R.0            INDICATE GETMAIN
         SVC       10                  ISSUE GETMAIN FOR SAVEAREA
         ST        &R13,4(&RX)
         ST        &RX,8(&R13)
         AIF       ('&RESET'EQ'YES').RESET
         LR        &R13,&RX            SET SAVEAREA POINTER
         AGO       .CONTZ
.RESET   XR        &R13,&RX            INTERCHANGE
         XR        &RX,&R13            SAVE-AREA
         XR        &R13,&RX            POINTERS
         LM        &R.15,&RX,16(&RX)   RESTORE LINKAGE REGS
.CONTZ   AIF       ('&##BASE'EQ'13'OR'&##BASE'EQ'15').EXIT
&RX      SETC      '&R&##BASE'
         BALR      &RX,0
         USING     *,&RX.&U
         AIF       ('&##BASE2' EQ '').EXIT
&RX      SETC      '&R&##BASE2'
         LA        &RX,2048(,&R&##BASE)  SET UP
         LA        &RX,2048(,&RX)        SECOND BASE REGISTER
.EXIT    AIF       (NOT &##FLAGS(2)).END
.*  SET UP DCB FOR #PRINT MACRO, AND OPEN IT
&##PRINT SETC      '##PRINT'           DEFAULT DCB NAME
&E       SETC      'SYSOUT'            DEFAULT DDNAME
         AIF       ('&PRINT(1)' EQ '').NODCB  NO DCB SPECIFIED
&##PRINT SETC      '&PRINT(1)'         SET DCB NAME
.NODCB   AIF       ('&PRINT(2)' EQ '').NODD
&E       SETC      '&PRINT(2)'         SET DDNAME
.NODD    CNOP      0,4
         BAL       &R.1,*+104          BRANCH AROUND PARAM LIST & DCB
         DC        X'8F',AL3(&##PRINT) OPEN FOR OUTPUT
&##PRINT DCB   DDNAME=&E,MACRF=PM,LRECL=137,BLKSIZE=141,               *
               RECFM=VBA,DSORG=PS
         SVC       19                  OPEN PRINT FILE
         MEXIT
.ERR3    MNOTE     4,'REGS=&REGS IS INVALID - REGS=(14,12) ASSUMED'
&E       STM       &R.14,&R.12,12(&R13)  SAVE REGS
         AGO       .CONTG
.ERR4    MNOTE  8,'BASE=(13) INVALID WITH TYPE=R - BASE=(15) ASSUMED'
&##BASE  SETC      '15'
         AGO       .GMAIN
.END     MEND
