*
         TITLE 'XM210110  MAIN LINE - DATA SET COMPARE PROGRAM        '
XM210110 CSECT
         ENTRY XM210100
XM210100 EQU   *
         PRINT NOGEN
         COPY  REGEQU
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM210110  PROGRAMMER R.A.WHITELEY       ASSIGNED 25/04/74 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  THIS MODULE READS THE TWO INPUT DATA SETS AND SCHEDULES ALL        *
*  OTHER MODULES. MODULE PARTIALLY SETS UP THE PRINT INFORMATION      *
*  TABLE FOR OTHER MODULES.                                           *
*                                                                     *
*   INPUT RECORDS MAY BE SEQUENTIAL (HBS OR IBM BLOCKED) OR INDEX     *
*   SEQUENTIAL. TWO USER EXIT ROUTINES MAY BE USED, ONE PRIOR TO      *
*   COMPARE AND ONE AFTER COMPARE INEQUALITY.                         *
*   COMPARISON MAY BE ON KEY AND ON ANY FIELDS WITHIN RECORD, THESE   *
*   BEING SPECIFIED IN CONTROL CARDS.                                 *
*                                                                     *
*   THE DATA SET NAMES ARE OBTAINED FROM THE JFCB.                    *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*                           XM21 MODULES                              *
*                           ------------                              *
*                                                                     *
*   XM210110  -  MAIN LINE, READS DATA SETS & SCHEDULES MODULES       *
*   --------                                                          *
*                                                                     *
*   XM210210  -  VALIDATE COMPARE CONTROL CARDS & PRODUCE REPORT      *
*   --------                                                          *
*                                                                     *
*   XM210310  -  COMPARE KEYS OF RECORDS                              *
*   --------                                                          *
*                                                                     *
*   XM210410  -  COMPARE SPECIFIED FIELDS OF RECORDS                  *
*   --------                                                          *
*                                                                     *
*   XM210510  -  PRINT COMPARISON REPORT                              *
*   --------                                                          *
*                                                                     *
***********************************************************************
         EJECT
         ISEQ  73,80
         PROGIN
***********************************************************************
* INITIALISATION                                                      *
***********************************************************************
         SPACE
*
** VALIDATE CARD INPUT (PRINTING VALIDATION REPORT)
** TERMINATE JOB IF ANY ERRORS
*  ------------------------------------------------
         CALL  XM210210,(CXT011,SXT066,SXT066A,SXTXXX,CCW001,CXT026)
*                                  - VALIDATE CARD INPUT
         CLI   CCW001,C'7'         Q. ANY ERRORS
         BE    BE07                A. YES - TERMINATE JOB
*
** PROCESS EXIT ROTINE TABLE
*  -------------------------
         BAL   R11,B6801           PROCESS EXIT RTN. TABLE
*
** OPEN THE DATA SETS & EXTRACT RELEVANT INFORMATION FROM THE DCB
** ALSO POINT R3 TO READ RTN FOR DATA SET 1 RECORD
** AND  POINT R4 TO READ RTN FOR DATA SET 2 RECORD
*  --------------------------------------------------------------
         BAL   R10,B5001           OPEN RELEVANT DCBS
         EJECT
***********************************************************************
* MAIN COMPARE ROUTINES                                               *
***********************************************************************
         SPACE
*
** READ DATA SET RECORDS, COMPARE KEYS & COMPARE FIELDS
** EXIT RTNS ARE USED AS REQUIRED
*  ----------------------------------------------------
BA10     ZAP   SXT005G,SXT005H     INDICATE NO CONSECUTIVE ERRORS
BA11     BALR  R11,R3              READ DATA SET 1 RECORD
BA15     BALR  R11,R4              READ DATA SET 2 RECORD
BA20     MVI   CCW001,C' '         INDICATE NO ERRORS
         BAL   R11,B6841           DOCTOR RECORDS VIA EXIT RTN 1
*                                  - AS REQUIRED
         CALL  XM210310,((R6),(R7),CCWXXX,SXT066,SXTXXX,CCW001)
*                                  - COMPARE KEY FIELDS
         CLI   CCW001,C' '         Q. KEYS EQUAL
         BNE   BA40                A. NO - REPORT EXTRA RECORD
         CALL  XM210410,((R6),(R7),CCWXXX,SXT066A,SXTXXX,CCW001)
*                                  - COMPARE COMPARE FIELDS
         CLI   CCW001,C' '         Q. RECORDS EQUAL
         BE    BA10                A. YES - READ BOTH RECORDS
         BAL   R11,B6851           DOCTOR RECORDS VIA EXIT RTN 2
*                                  - AS REQUIRED
*                                  - BRANCH MAYBE TO COMPARE RECORDS
*
** AN ERROR HAS BEEN DETECTED - PRINT ON REPORT
** THEN READ RELEVANT DATA SET RECORD
*  --------------------------------------------
BA40     BAL   R12,B7001           REPORT THE INEQUALITY
         CLI   CCW001,C'V'         Q. BOTH RECORDS TO BE READ
         BH    BA11                A. YES - GO READ BOTH
         CLI   CCW001,C'K'         Q. DATA SET 2 RECORD TO BE READ
         BH    BA15                A. YES - GO READ DATA SET 1 RECORD
         BALR  R11,R3              READ DATA SET 1 RECORD
         B     BA20                GO COMPARE
         EJECT
***********************************************************************
* END OF FILE ROUTINES                                                *
***********************************************************************
         SPACE
*
** END OF FILE ON DATA SET 1 (SEQUENTIAL DCB1)
** REPORT EXTRA RECORDS (IF ANY)
*  -------------------------------------------
BA70     MVC   DCB2+33(4),=AL3(BA90)     END OF FILE ADDRESS FOR DCB2
*                                  THE 2ND DATA SET RECORD HAS BEEN
*                                  READ IF ACTION IND.INRANGE A TO K.
         CLI   CCW001,C'A'         Q. ACTION IND.LESS THAN A
         BL    BA72                A. YES - READ ANOTHER RECORD
         CLI   CCW001,C'K'         Q. ACTION IND. GREATER THAN K
         BNH   BA73                A. NO - DO NOT READ ANOTHER RECORD
BA72     BALR  R11,R4              READ A RECORD FROM DATA SET 2
*                                  - IF END OF FILE THEN GO FINISH JOB
BA73     MVI   CCW001,C'L'         INDICATE EXTRA RECORD ON DATA SET 2
         BAL   R12,B7001           REPORT EXTRA RECORD
         B     BA72                GO READ ANOTHER RECORD
*
** END OF FILE ON DATA SET 2 (SEQUENTIAL DCB2)
** REPORT EXTRA RECORDS (IF ANY)
*  -------------------------------------------
BA75     MVC   DCB1+33(3),=AL3(BA90)     END OF FILE ADDRESS FOR DCB1
BA77     MVI   CCW001,C'A'         INDICATE EXTRA RECORD ON DATA SET 1
         BAL   R12,B7001           REPORT EXTRA RECORD
         BALR  R11,R3              READ A RECORD FROM DATA SET 1
*                                  - IF END OF FILE THEN GO FINISH JOB
         B     BA77                GO REPORT EXTRA RECORD
         SPACE 3
*
** END OF FILE ON DATA SET 1 (INDEX SEQUENTIAL DCB3)
** REPORT EXTRA RECORDS (IF ANY)
*  -------------------------------------------------
BA80     MVC   DCB4+33(3),=AL3(BA90)     END OF FILE ADDRESS FOR DCB4
         CLI   CCW001,C'K'         Q. 2ND DATA SET RECORD BEEN READ
         BNH   BA83                A. YES - DO NOT READ ANOTHER
BA82     BALR  R11,R4              READ A RECORD FROM DATA SET 2
*                                  - IF END OF FILE THEN GO FINISH JOB
BA83     MVI   CCW001,C'L'         INDICATE EXTRA RECORD ON DATA SET 2
         BAL   R12,B7001           REPORT EXTRA RECORD
         B     BA82                GO READ ANOTHER RECORD
*
** END OF FILE ON DATA SET 2 (INDEX SEQUENTIAL DCB4)
** REPORT EXTRA RECORDS (IF ANY)
*  -------------------------------------------------
BA85     MVC   DCB3+33(3),=AL3(BA90)     END OF FILE ADDRESS FOR DCB3
BA87     MVI   CCW001,C'A'         INDICATE EXTRA RECORD ON DATA SET 1
         BAL   R12,B7001           REPORT EXTRA RECORD
         BALR  R11,R3              READ A RECORD FROM DATA SET 1
*                                  - IF END OF FILE THEN GO FINISH JOB
         B     BA87                GO REPORT EXTRA RECORD
         SPACE 2
*
** EOF ON BOTH DATA SETS - FINISH REPORT
*  -------------------------------------
BA90     MVI   CCW001,C'0'         INDICATE EOF ON BOTH DATA SETS
         BAL   R12,B7001           PRINT ON REPORT
         PROGOUT 0                 EXIT
         EJECT
***********************************************************************
* ERROR ROUTINES                                                      *
***********************************************************************
         SPACE
*
** ERROR 4 - INVALID HBS BLOCKING - TERMINATE JOB
*  ----------------------------------------------
BE04     MVI   CCW001,C'4'         SET IND.
         B     BE90                GO REPORT
*
** ERROR 5 - RECORD LENGTH TOO LARGE FOR XM21 - TERMINATE JOB
*  ----------------------------------------------------------
BE05     MVI   CCW001,C'5'         SET IND.
         B     BE90                GO REPORT
*
** ERROR 6 - XX CONSECUTIVE ERRORS - TERMINATE JOB
*  -----------------------------------------------
BE06     MVI   CCW001,C'6'         SET IND.
         B     BE90                GO REPORT
*
** ERROR 7 - CONTROL CARD ERROR - JOB TERMINATED
*  ---------------------------------------------
BE07     MVI   CCW001,C'7'         SET IND.
         B     BE99                GO EXIT
*
** ERROR 8 - INDEX SEQUENTIAL FILES, KEYS INCONSISTENT - JOB TERMINATED
*  --------------------------------------------------------------------
BE08     MVI   CCW001,C'8'         SET IND.
         B     BE90                GO REPORT
*
** REPORT & TERMINATE COMPARE
*  --------------------------
BE90     BAL   R12,B7001           REPORT THE ERROR
BE99     PROGOUT 8                 EXIT
         EJECT
***********************************************************************
* B5001 - OPEN APPROPRIATE DCB'S ACCORDING TO RECORD FORMAT           *
*         ALSO POINT R3 & R4 TO READ RTNS FOR DATA SET 1 & DATA SET 2 *
*         RESPECTIVELY.                                               *
***********************************************************************
         SPACE
*
** INDEX SEQUENTIAL DATA SET FORMAT - OPEN FILES & EXTRACT DCB INF.
*  ----------------------------------------------------------------
B5001    CLI   CXT001A,C'I'        Q. INDEX SEQUENTIAL FILES
         BNE   B5010               A. NO - MUST BE SEQUENTIAL
         BAL   R11,B6501           OPEN IS DATA SETS
         LA    R3,B6601            POINT R3 TO DATA SET 1 READ RTN.
         LA    R4,B6701            POINT R4 TO DATA SET 2 READ RTN.
         B     B5020               INSERT DATA SET NAMES IN PRINT TABLE
*
** SEQUENTIAL DATA SET FORMAT - OPEN FILES
*  ---------------------------------------
B5010    BAL   R11,B6001           OPEN DATA SETS
         CLI   CXT001A,C'H'        Q. HBS BLOCKING ON SEQUENTIAL FILE
         BE    B5015               A. YES - POINT TO READ ROUTINES
         LA    R3,B6101            POINT R3 TO DATA SET 1 READ RTN(SEQ)
         LA    R4,B6201            POINT R4 TO DATA SET 2 READ RTN(SEQ)
         B     B5020               GO INSERT DATA SET NAMES
B5015    LA    R3,B6150            POINT R3 TO DATA SET 1 READ RTN(HBS)
         LA    R4,B6250            POINT R4 TO DATA SET 2 READ RTN(HBS)
         LA    R6,CHD002A          POINT TO DUMMY RECORD
         LA    R7,CHD002A          - SO THAT IBM RECORD READ 1ST TIME
*
** INSERT DATA SET NAMES INTO PRINT INFORMATION TABLE
*  --------------------------------------------------
B5020    MVC   SXT044A,JFCB1       MOVE DATA SET 1 NAME TO PRINT TABLE
         MVC   SXT044B,JFCB2       MOVE DATA SET 2 NAME TO PRINT TABLE
         BR    R10                 RETURN
         EJECT
***********************************************************************
* B6001 - OPEN IBM SEQUENTIAL FILES (DCB'S = DCB1 & DCB2)             *
*         ALSO GET FILE NAMES FROM JFCB.                              *
***********************************************************************
         SPACE
B6001    OPEN  (DCB1,,DCB2)        OPEN BOTH DATA SETS
         RDJFCB (DCB1,,DCB2)       READ DATA SET NAMES
         BR    R11                 RETURN
         SPACE 2
***********************************************************************
* B6101 - READ DATA SET 1 RECORD (SEQUENTIAL)                         *
*         TAKE CHECKPOINTS WHEN REQ'D                                 *
***********************************************************************
         SPACE
B6101    GET   DCB1                READ 1ST DATA SET RECORD
         LA    R6,0(,R1)           SAVE RECORD ADDRESS IN R6
         MVC   SXT002A,DCB1+82     MOVE RECORD LENGTH TO PRINT TABLE
B6110    AP    SXT005A,=P'1'       ADD 1 TO DATA SET 1 RECORD COUNT
         SP    CXT005C,=P'1'       Q. CHECKPOINT REQ'D
         BNZ   B6115               A. NO - CARRY ON
         LATCH CHKPTMOD            TAKE CHECKPOINT
         ZAP   CXT005C,CXT005D     NO.OF RECORDS BETWEEN CHECKPOINTS
B6115    CLC   SXT002A,CHD002      Q. RECORD LENGTH TOO LARGE
         BNHR  R11                 A. NO - RETURN
         B     BE05                A. YES - TERMINATE JOB
         SPACE 2
***********************************************************************
* B6150 - READ DATA SET 1 RECORD (HBS BLOCKING)                       *
*         RECORDS ARE BLOCKED IN UNDEFINED IBM-RECORDS, EACH RECORD   *
*         PRECEDED BY 2 BYTE LENGTH                                   *
***********************************************************************
         SPACE
*
** CHECK IF HBS RECORD IN THIS IBM-UNDEFINED RECORD (BLOCK)
** IF NOT READ ANOTHER IBM RECORD
*  --------------------------------------------------------
B6150    AH    R6,0(R6)            POINT TO END OF LAST HBS RECORD
         C     R6,CFD004           Q. WAS IT LAST IN THE BLOCK
         BL    B6160               A. NO - SET UP RECORD LENGTH
*                                  Q. VALID HBS BLOCKING
         BH    BE04                A. NO - TERMINATE COMPARE
*
** READ ANOTHER IBM UNDEFINED RECORD & POINT R8 AT END
*  ---------------------------------------------------
         GET   DCB1                READ 1ST DATA SET RECORD
         LR    R6,R1               SAVE RECORD ADDRESS IN R6
         LH    R14,DCB1+82         STORE END OF
         AR    R14,R6              - BLOCK ADDRESS (DSET1)
         ST    R14,CFD004          - IN FULLWORD
B6160    MVC   SXT002A,0(R6)       LENGTH OF RECORD TO PRINT TABLE
         B     B6110               GO CHECK FOR CHECKPOINT
         EJECT
***********************************************************************
* B6201 - READ DATA SET 2 RECORD (SEQUENTIAL)                         *
***********************************************************************
         SPACE
B6201    GET   DCB2                READ 2ND DATA SET RECORD
         LA    R7,0(,R1)           SAVE RECORD ADDRESS IN R7
         MVC   SXT002B,DCB2+82     MOVE RECORD LENGTH TO PRINT TABLE
B6210    AP    SXT005B,=P'1'       ADD 1 TO RECORD COUNT
         CLC   SXT002B,CHD002      Q. RECORD LENGTH TOO LARGE
         BNHR  R11                 A. NO - RETURN
         B     BE05                A. YES - TERMINATE JOB
         SPACE 3
***********************************************************************
* B6250 - READ DATA SET 2.RECORD (HBS BLOCKING)                       *
*         RECORDS ARE BLOCKED IN UNDEFINED IBM RECORDS, EACH RECORD   *
*         PRECEDED BY 2 BYTE LENGTH                                   *
***********************************************************************
         SPACE
*
** CHECK IF HBS RECORD IN THIS IBM UNDEFINED RECORD (BLOCK)
** IF NOT READ ANOTHER IBM RECORD
*  --------------------------------------------------------
B6250    AH    R7,0(R7)            POINT TO END OF LAST HBS RECORD
         C     R7,CFD004A          Q. WAS IT LAST IN BLOCK
         BL    B6260               A. NO - SET UP RECORD LENGTH
*                                  Q. VALID HBS BLOCKING
         BH    BE04                A. NO - TERMINATE COMPARE
*
** READ ANOTHER IBM UNDEFINED RECORD & POINT R9 AT END
*  ---------------------------------------------------
         GET   DCB2                READ 2ND DATA SET RECORD
         LR    R7,R1               SAVE RECORD ADDRESS IN R7
         LH    R14,DCB2+82         STORE END OF
         AR    R14,R7              - BLOCK ADDRESS (DSET2)
         ST    R14,CFD004A         - IN FULLWORD
B6260    MVC   SXT002B,0(R7)       LENGTH OF RECORD TO PRINT TABLE
         B     B6210               GO CHECK RECORD LENGTH
         EJECT
***********************************************************************
* B6501 - OPEN IBM INDEX SEQUENTIAL FILES (DCB'S = DCB3 & DCB4)       *
*         ALSO GET FILE NAMES FROM JFCB & EXTRACT INFORMATION         *
***********************************************************************
         SPACE
*
** OPEN DATA SETS
*  --------------
B6501    OPEN  (DCB3,,DCB4)        OPEN IS DATA SETS
         RDJFCB (DCB3,,DCB4)       READ DATA SET NAMES
         SETL  DCB3,B              POINT AT START OF DATA SET 1
         SETL  DCB4,B              POINT AT START OF DATA SET 2
*
** IF KEY FIELDS NOT PRESENT THEN TAKE KEY FROM DCB 3 & DCB 4
** (THESE ARE COMPARED AND IF NOT EQUAL JOB IS TERMINATED)
*  -----------------------------------------------------------
         CLI   SXT066,X'FF'        Q. KEY SET UP
         BNER  R11                 A. YES - RETURN
         CLC   DCB3+60(2),DCB4+60  Q. KEY DISPLACEMENTS EQUAL
         BNE   BE08                A. NO - ERROR
         CLC   DCB3+16(1),DCB4+16  Q. KEY LENGTHS EQUAL
         BNE   BE08                A. NO - ERROR
         MVI   SXT066,C'B'         INDICATE BINARY KEYS
         MVI   SXT066+1,C'A'       - IN ASCENDING ORDER
         MVC   SXT066+2(2),DCB3+60 INSERT KEY DISPLACEMENT TO TABLE
         MVC   SXT066+5(1),DCB3+16 INSERT KEY LENGTH TO TABLE
         MVI   SXT066+6,X'FF'      INDICATE END OF KEY TABLE
         BR    R11                 RETURN
         EJECT
***********************************************************************
* B6601 - READ DATA SET 1 RECORD (INDEX SEQUENTIAL)                   *
***********************************************************************
         SPACE
*
** READ INDEX SEQUENTIAL RECORD
** R0 POINTS AT KEY. R1 POINTS AT DATA PART OF RECORD
*  --------------------------------------------------
B6601    GET   DCB3                READ 1ST DATA SET RECORD
         LA    R6,0(,R1)           SAVE RECORD ADDRESS IN R6
         AP    SXT005A,=P'1'       ADD 1 TO DATA SET 1 RECORD COUNT
         LH    R15,DCB3+82         INSERT RECORD LENGTH TO R15
*
** IF KEY DISPLACEMENT IS ZERO & RECORDS ARE FIXED UNBLOCKED THEN
** THE KEY IS NOT CONSIDERED AS BEING INCLUDED IN THE DATA PART OF
** THE RECORD (QISAM ROUTINES). THIS MODULE THEREFORE MOVES KEY, WHICH
** IS POINTED TO BY R0, TO BEGINNING OF DATA PART OF RECORD, WHICH IS
** POINTED TO BY R1. NOTE THAT THE KEY + PADDING IMMEDIATELY PRECEDES
** DATA PART OF RECORD WHEN READ BY QISAM ROUTINES.
*  -------------------------------------------------------------------
         CLC   DCB3+60(2),=2X'00'  Q. KEY DISPLACEMENT ZERO
         BNE   B6610               A. NO - CONTINUE
         TM    DCB3+36,X'80'       Q. FIXED LENGTH RECORDS
         BZ    B6610               A. NO - CONTINUE
         TM    DCB3+36,X'10'       Q. BLOCKED RECORDS
         BO    B6610               A. YES - CONTINUE
         SR    R14,R14             CLEAR R14
         IC    R14,DCB3+16         INSERT KEY LENGTH TO R14
         SR    R6,R14              POINT R6 AT RECORD INCLUDING KEY
         AR    R15,R14             INCREASE REC.LEN.TO INCLUDE KEY
         LR    R1,R0               POINT R1 AT KEY
         BCTR  R14,R0              MOVE KEY TO
         EX    R14,EX01            - START OF RECORD
*                                  ** MVC   0(0,R6),0(R1) **
*
** SET UP RECORD LENGTH & ENSURE NOT TOO LARGE
*  -------------------------------------------
B6610    CH    R15,CHD002          Q. RECORD LENGTH TOO LARGE
         BH    BE05                A. YES - ERROR
         STH   R15,SXT002A         MOVE RECORD LENGTH TO PRINT TABLE
         BR    R11                 RETURN
         SPACE 3
***********************************************************************
* B6701 - READ DATA SET 2 RECORD (INDEX SEQUENTIAL)                   *
***********************************************************************
         SPACE
*
** READ INDEX SEQUENTIAL RECORD
** R0 POINTS AT KEY. R1 POINTS AT DATA PART OF RECORD
*  --------------------------------------------------
B6701    GET   DCB4                READ 2ND DATA SET RECORD
         LA    R7,0(,R1)           SAVE RECORD ADDRESS IN R7
         AP    SXT005B,=P'1'       ADD 1 TO DATA SET 2 RECORD COUNT
         LH    R15,DCB4+82         INSERT RECORD LENGTH TO R15
*
** IF KEY DISPLACEMENT IS ZERO & RECORDS ARE FIXED UNBLOCKED THEN
** THE KEY IS NOT CONSIDERED AS BEING INCLUDED IN THE DATA PART OF
** THE RECORD (QISAM ROUTINES). THIS MODULE THEREFORE MOVES KEY, WHICH
** IS POINTED TO BY R0, TO BEGINNING OF DATA PART OF RECORD, WHICH IS
** POINTED TO BY R1. NOTE THAT THE KEY + PADDING IMMEDIATELY PRECEDES
** DATA PART OF RECORD WHEN READ BY QISAM ROUTINES.
*  -------------------------------------------------------------------
         CLC   DCB4+60(2),=2X'00'  Q. KEY DISPLACEMENT ZERO
         BNE   B6710               A. NO - CONTINUE
         TM    DCB4+36,X'80'       Q. FIXED LENGTH RECORDS
         BZ    B6710               A. NO - CONTINUE
         TM    DCB4+36,X'10'       Q. BLOCKED RECORDS
         BO    B6710               A. YES - CONTINUE
         SR    R14,R14             CLEAR R14
         IC    R14,DCB4+16         INSERT KEY LENGTH TO R14
         SR    R7,R14              POINT R7 AT RECORD INCLUDING KEY
         AR    R15,R14             INCREASE REC.LEN. TO INCLUDE KEY
         LR    R1,R0               POINT R1 AT KEY
         BCTR  R14,R0              MOVE KEY TO
         EX    R14,EX02            - START OF RECORD
*                                  ** MVC   0(0,R7),0(R1) **
*
** SET UP RECORD LENGTH & ENSURE NOT TOO LARGE
*  -------------------------------------------
B6710    CH    R15,CHD002          Q. RECORD LENGTH TOO LARGE
         BH    BE05                A. YES - ERROR
         STH   R15,SXT002B         MOVE RECORD LENGTH TO PRINT TABLE
         BR    R11                 RETURN
         EJECT
***********************************************************************
* B6801 - EXIT ROUTINES                                               *
*         SET UP TO LATCH EXIT ROUTINES IF REQUIRED                   *
*                                                                     *
* B6841 - EXIT ROUTINE PRIOR TO KEY COMPARE                           *
*                                                                     *
* B6851 - EXIT ROUTINE AFTER UNEQUAL COMPARE                          *
*         (RETURN MAY BE TAKEN TO COMPARE RECORDS AGAIN AT BA20)      *
*                                                                     *
***********************************************************************
         SPACE
*
** IF EXIT ROUTINES ARE TO BE USED SET UP EXIT RTN NAMES & SWITCHES
*  ----------------------------------------------------------------
B6801    CLI   CXT008A,X'00'       Q. EXIT 1 PRESENT
         BE    B6805               A. NO - CHECK EXIT 2 RTN.
         NI    B6841+1,X'0F'       SET SWITCH TO GO THRU EXIT RTN.
         MVC   B6845+12(8),CXT008A INSERT EXIT RTN FOR LATCH
B6805    CLI   CXT008B,X'00'       Q. EXIT 2 PRESENT
         BER   R11                 A. NO - RETURN
         NI    B6851+1,X'0F'       SET SWITCH TO GO THRU EXIT RTN.
         MVC   B6855+12(8),CXT008B INSERT EXIT RTN.FOR LATCH
         BR    R11                 RETURN
*
** LATCH TO EXIT1 ROUTINE (THIS IS PRIOR TO KEY COMPARE)
*  -----------------------------------------------------
B6841    BCR   15,R11              RETURN IF EXIT RTN NOT REQUIRED
B6845    LATCH EXIT1,((R6),SXT002A,(R7),SXT002B)  LATCH EXIT ROUTINE
         BR    R11                 RETURN
*
** LATCH TO EXIT2 ROUTINE (THIS IS ON UNEQUAL COMPARE)
** RETURN IS MADE IF SAME PAIR OF RECORDS AS LAST TIME
*  ---------------------------------------------------
B6851    BCR   15,R11              RETURN IF EXIT RTN NOT REQ'D
         CP    SXT005A,CXT005A     Q. SAME DSET 1 REC. AS LAST TIME
         BNE   B6854               A. NO - LATCH EXIT RTN
         CP    SXT005B,CXT005B     Q. SAME DSET 2 REC. AS LAST TIME
         BER   R11                 A. YES - RETURN
B6854    ZAP   CXT005A,SXT005A     SAVE DSET 1 REC. NO
         ZAP   CXT005B,SXT005B     SAVE DSET 2 REC. NO
B6855    LATCH EXIT2,((R6),SXT002A,(R7),SXT002B,B6857) LATCH EXIT RTN.
         BR    R11                 RETURN
*
** RECORDS ARE TO BE COMPARED AGAIN - CLEAR UNDERLINE
*  --------------------------------------------------
B6857    BAL   R12,B7050           CLEAR UNDERLINE
         B     BA20                GO COMPARE RECORDS AGAIN
         EJECT
***********************************************************************
* B7001 - PRINT COMPARISON REPORT & CHECK FOR CONSECUTIVE ERRORS      *
* B7050 - CLEAR UNDERLINE AREA (PROVIDED JOB NOT TO BE TERMINATED)    *
***********************************************************************
         SPACE
B7001    CALL  XM210529,((R6),(R7),CCWXXX,SXTXXX,CCW001)  PRINT
         CLI   CCW001,C'0'         Q. UNDERLINE CLEARING REQ'D
*                                  -  I.E. JOB TO BE TERMINATED
         BNLR  R12                 A. NO - RETURN
         SP    SXT005G,=P'1'       Q. XX CONSECUTIVE ERRORS
         BNP   BE06                A. YES - TERMINATE THE JOB
B7050    LH    R15,SXT002B         LENGTH OF DSET 2 RECORD TO R15
         LH    R14,SXT002A         LENGTH OF DSET 1 RECORD TO R14
         CR    R14,R15             Q. DSET2 RECORD LENGTH LARGEST
         BL    B7060               A. YES - CONTINUE
         LR    R15,R14             LARGEST LENGTH TO R15
B7060    LA    R14,CCWXXX          POINT R14 AT UNDERLINE
         SR    R1,R1               CLEAR R1 TO PADDING CHARACTER
         MVCL  R14,R0              CLEAR UNDERLINE
         BR    R12                 RETURN
         SPACE 3
***********************************************************************
* EXECUTED INSTRUCTIONS                                               *
***********************************************************************
         SPACE
EX01     MVC   0(0,R6),0(R1)       MOVE KEY TO START OF IS RECORD (R6)
EX02     MVC   0(0,R7),0(R1)       MOVE KEY TO START OF IS RECORD (R7)
         EJECT
***********************************************************************
* CONSTANTS, STORAGE AREAS & LITERAL POOL                             *
***********************************************************************
         SPACE
CFD004   DC    A(CHD002A)          END OF BLOCK ADDRESS (HBS BLOCKING)
*                                  - POINTS TO DUMMY RECORD 1ST TIME
CFD004A  DC    A(CHD002A)          END OF BLOCK ADDRESS (HBS BLOCKING)
*                                  - POINTS TO DUMMY RECORD 1ST TIME
CHD002   DC    H'10000'            LENGTH OF UNDERLINE AREA (BYTES)
CHD002A  DC    H'0'                DUMMY RECORD FOR HBS RECORD RTNS
*
** ACTION INDICATOR
*  ----------------
CCW001   DC    C'V'                POSSIBLE SETTINGS ARE
*                                   INIT.SET TO V TO READ BOTH RECORDS
*                                   BLANK RECORDS EQUAL
*                                   A - K PRINT DATA SET 1 RECORD
*                                   L - V PRINT DATA SET 2 RECORD
*                                   W - Z PRINT BOTH RECORDS
*                     SET BY        0 - 2 MISCELLANEOUS
*                                   3 - 9 JOB TO BE TERMINATED
*                     XM210110      BLANK RECORDS EQUAL
*                     XM210310      A & L -EXTRA RECORD
*                     XM210110
*                     XM210310      B & M -KEY NOT PRESENT
*                     XM210310     C & N  -KEY FIELD NOT PACKED
*                     XM210410     X      -COMPARE FIELDS NOT PRESENT
*                     XM210410      W     -RECORDS UNEQUAL
*                     XM210110      0     -EOF ON BOTH DATA SETS
*                       ---         4     -INVALID HBS BLOCKING
*                       ---         5     -RECORD LENGTH TOO LARGE
*                       ---         6     -XX CONSECUTIVE ERRORS
*                       ---         7     -CONTROL CARD ERROR
*                       ---         8     -KEYS INCONSISTENT
*                     FOR USE BY
*                    XM210510 & XM210110
*
** EXIT TABLE
*  ----------
CXT026   DS    0XL26               TABLE CONTAINING EXIT RTN.INF.
CXT008A  DC    XL8'00'             1ST EXIT RTN NAME
CXT008B  DC    XL8'00'             2ND EXIT RTN NAME
CXT005A  DC    PL5'0'              DSET1 REC.NO. LAST TIME THRU' EXIT2
CXT005B  DC    PL5'0'              DSET2 REC.NO. LAST TIME THRU' EXIT1
*
** FORMAT TABLE (INCLUDES CHECKPOINT DETAIL)
*  -----------------------------------------
CXT011   DS    0XL11               FORMAT TABLE
CXT001A  DC    C'S'                INPUT RECORD FORMAT INDICATOR
*                                  - I=INDEX SEQUENTIAL
*                                  - H=HBS BLOCKING
*                                  - S=SEQUENTIAL (IBM)
CXT005C  DC    PL5'0'              NO.OF RECORDS TO CHECKPOINT (DSET1)
CXT005D  DC    PL5'0'              NO.OF RECORDS BETWEEN CHECKPOINTS
*                                                              (DSET1)
         EJECT
*
** KEY FIELD TABLE
*  ---------------
SXT066   DS    0H                  1ST KEY FIELD
         DS    C                   - FORMAT IND   B OR P
         DS    C                   - ASCENDING/DESCENDING IND. A OR D
         DS    H                   - BINARY DISPLACEMENT OF KEY
         DS    H                   - BINARY LENGTH OF KEY
         DS    9XL6                2ND TO 10TH KEY FIELDS
         DS    XL6                 END OF TABLE ENTRY
         ORG   SXT066
         DC    X'FF',65X'00'       - INITIALIZED
*
** COMPARE FIELD TABLE
*  -------------------
SXT066A  DS    0H                  1ST COMPARE FIELD
         DS    C                   - FORMAT IND. B,P,R OR M
         DS    C                   - BYTE MASK IF FORMAT M
         DS    H                   - BINARY DISPLACEMENT OF KEY
         DS    H                   - BINARY LENGTH OF KEY
         DS    9XL6                2ND TO 10TH COMPARE FIELDS
         DS    XL6                 END OF TABLE ENTRY
         ORG   SXT066A
         DC    C'R',X'0000000000FF',59X'00'  - INITIALIZED
*
** PRINT INFORMATION TABLE (SET UP WITH DEFAULT VALUES)
*  ----------------------------------------------------
SXTXXX   DS    0XL203              PRINT INFOMATION TABLE
SXT002A  DS    XL2                 - DATA SET 1 RECORD LENGTH
SXT002B  DS    XL2                 - DATA SET 2 RECORD LENGTH
SXT005A  DC    PL5'0'           ** - DATA SET 1 RECORD NO.
SXT005B  DC    PL5'0'           ** - DATA SET 2 RECORD NO.
SXT005C  DC    PL5'50'             - NO. UNEQUAL/EXTRA RECORDS TO
*                                    PRINT BEFORE PRINT TERMINATION
SXT005D  DC    PL5'50'             - MAX.NO. TO PRINT BEFORE PRINT TERM
SXT005E  DC    PL5'0'              - EXTRA RECORDS ON DATA SET 1
SXT005F  DC    PL5'0'              - EXTRA RECORDS ON DATA SET 2
SXT005G  DC    PL5'10'          ** - NO.OF CONSECUTIVE UNEQUAL/EXTRA
*                                    RECORDS BEFORE TERMINATION
SXT005H  DC    PL5'10'          ** - MAX.NO.OF CONSECUTIVE UNEQUAL/
*                                    EXTRA RECORDS BEFORE TERM.
SXT001   DC    C'X'                - PRINT FORMAT IND. C OR X
SXT005J  DC    PL5'0'              - NO.OF UNEQUAL RECORDS
SXT044A  DS    CL44                - DATA SET 1 NAME
SXT044B  DS    CL44                - DATA SET 2 NAME
SXT060   DC    CL60' '             - REPORT TITLE
SXT005K  DC    PL5'10000'          - MAX.LENGTH OF RECORD/UNDERLINE
*                                  ** = SET BY THIS MODULE
         EJECT
*
** DCB & JFCB FIELDS
*  -----------------
DCB1     DCB   DSORG=PS,DDNAME=DS01I,EODAD=BA70,MACRF=(GL),            X
               EXLST=JFCBLST1
DCB2     DCB   DSORG=PS,DDNAME=DS02I,EODAD=BA75,MACRF=(GL),            X
               EXLST=JFCBLST2
JFCBLST1 DC    X'87',AL3(JFCB1)
JFCB1    DS    CL176
JFCBLST2 DC    X'87',AL3(JFCB2)
JFCB2    DS    CL176
DCB3     DCB   DSORG=IS,DDNAME=DS01I,EODAD=BA80,MACRF=(GL,S),          X
               EXLST=JFCBLST1
DCB4     DCB   DSORG=IS,DDNAME=DS02I,EODAD=BA85,MACRF=(GL,S),          X
               EXLST=JFCBLST2
*
         LTORG
*
** UNDERLINE AREA
*  --------------
CCWXXX   DC    10000X'00'          UNDERLINE AREA = 10,000 BYTES LONG
** THE UNDERLINE IS SET AS FOLLOWS
**       X'00'  BYTE NOT COMPARED
**       X'11'  BYTES UNEQUAL
**       X'22'  BYTE PART OF KEY FIELD
**       X'88'  BYTE PART OF PACKED COMPARE
**              FIELD WITH INEQUALITY
**       X'AA'  BYTE PART OF KEY FIELD
**              WITH FORMAT ERROR
** ON INEQUALITY ALL BYTES OF COMPARE FIELDS ARE 'OR'ED  WITH X'44'
**  SO THAT THE UNDERLINE (PRIOR TO PRINTING) TAKES VALUES
**       X'00'  BYTES NOT COMPARED            PRINTED AS --
**       X'22'  KEY FIELD BYTE (NOT COMPARED)            KK
**       X'44'  BYTES EQUAL                              BLANK
**       X'55'  BYTES UNEQUAL                            **
**       X'66'  KEY FIELD BYTE (COMPARED)                KK
**       X'CC'  PACKED ERROR ON COMPARE FLD              PP
**       X'AA'  BYTE PART OF KEY FIELD WITH              FF
**              FORMAT ERROR
         EJECT
         PRINT GEN
*
** DUMMY SECTION FOR DCB (FOR REFERENCE ONLY)
*  ------------------------------------------
         DCBD  DSORG=(IS,QS)
*
         END
