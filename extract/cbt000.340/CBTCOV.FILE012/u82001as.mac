***********************UTW23*******************
RECA     TITLE 'REORGANIZE CATALOG PROGRAM WITH LIST FEATURE           *
               VERSION 1.1.0     801205'
         SPACE 5
*  THIS PROGRAM WILL PRINT AND/OR PUNCH THE INDEXES,ALIASES,CVOL      *
*  POINTERS,AND DATA SETS IN ANY ONE SYSCATLG DATA SET. PUNCHING      *
*  IS IN THE FORM OF CONTROL CARDS FOR IEHPROGM TO RECONSTRUCT THE    *
*  CATALOG OR TO REORGANIZE IT. LISTING ALSO INCLUDES SOME STATIS-    *
*  TICAL INFORMATION ABOUT THE CATALOG.                               *
*        ALL CARDS CONTAIN A 'CVOL=TYPE=VOLID' FIELD, DERIVED
*  FROM A UCB SCAN AFTER READING EACH CONTROL CARD.  IF DESIRED,
*  WHEN REBUILDING A CATALOG ON A DIFFERENT DEVICE TYPE, A PARM
*  FIELD MAY BE SUPPLIED WHICH WILL COMPLETELY REPLACE THE
*  DEFAULT, BUT WILL NOT BE CHECKED FOR VALIDITY.
***********************************************************************
*                                                                     *
*                                                          BA623      *
*        THIS MODIFICATION ADDS THE 3330-1 TO THE DEVICE TABLE        *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 5
*****                                                             *****
RECAPCS1 START 0
*****                                                             *****
R01      EQU   1                             EQUATE REGISTERS
R02      EQU   2
R03      EQU   3
R04      EQU   4
R05      EQU   5
R06      EQU   6
R07      EQU   7
R08      EQU   8
R09      EQU   9
R12      EQU   12
R14      EQU   14
R15      EQU   15
         EJECT
*
* SYMBOLIC REGISTER NOTATIONS(SPECIAL)
*
RETURNR  EQU   7    *RETURN ADDRESS LINKAGE REGISTER
INDEXPTR EQU   8    *BLOCK AREA INDEX POINTER
PCHPTR   EQU   9    *PUNCH LINE INDEX
QUEUEPTR EQU   12   *QUEUE TABLE INDEX
*
* USING STATEMENTS FOR DSECTS
*
         USING ENTDSECT,INDEXPTR
         USING QELEMENT,QUEUEPTR
         USING VOLINFO,R03
         USING IHADCB,R01
*
*
*
*
         PRINT NOGEN
RECAPPER DS    0H
       SAVE    (14,12),,RECAPV01L06
         L     R04,0(R01)          PRESERVE 'PARM' POINTER
         BALR  10,0                          ESTABLISH REG 10 AS BASE
B0002    EQU   *
         USING *,10
         LR    11,13                         SAVE SAVE AREA PTR
         LA    13,A0002                      SET PTR TO NEW SAVE AREA
         ST    13,8(11)
         ST    11,4(13)
         LA    11,B0002+4095                 ESTABLISH REG 11 AS BASE
         USING B0002+4095,11
         B     C0002
A0002    DC    18F'+0'                       SAVE AREA
C0002    EQU   *
OPENFILE OPEN  (READER,,PRINTER,(OUTPUT))    OPEN  READER AND PRINTER
GETCARD  GET   READER,CARDHOLD               READ CONTROL CARD
CHKFUNCT CLC   FUNCTION,=C'PRINT'            PRINT ONLY
         BE    READVICE
         CLC   FUNCTION,=C'PUNCH'            PUNCH ONLY
         BNE   NXTCHK
         MVI   PCHSW,C'1'                    PUNCH SW ON
         B     OPENPCH
SETCVOL1 MVC   CVOLEQ+5(0),6(R02)  TO MOVE DEVICE TYPE
SETCVOL2 MVC   CVOLEQ(0),2(R04)    TO RESET WHOLLY FROM PARM
PATTERN1 DC    X'402020202120'
NXTCHK   CLC   FUNCTION,=C'PTPCH'            PRINT AND PUNCH
         BNE   ERR01RTN                      INVALID FUNCTION
         MVI   PTPCHSW,C'1'                  SET SWITCH ON
OPENPCH  OPEN  (PUNCHER,(OUTPUT))            OPEN PUNCH
CVTPTR   EQU   16
CVTILK2  EQU   X'28'
UCBTYP   EQU   X'10'
UCBTBYT3 EQU   UCBTYP+2
SRTEVOLI EQU   X'1C'
         L     R15,CVTPTR          ADDR OF CVT
         L     R15,CVTILK2(R15)    ADDR OF UCB LOOK-UP TABLE
UCB1     LH    R14,0(R15)          ADDR OF NEXT UCB
         LTR   R14,R14             PRESENT ?
         BZ    UCB2                BR IF NO TO GET NEXT
         BM    ERR08RTN            BR IF HIT END OF TABLE
         TM    UCBTBYT3(R14),X'20' DASD ?
         BZ    UCB2                BR IF NO TO GET NEXT
         CLC   SRTEVOLI(6,R14),VOLSERNO
         BE    UCB3                BR IF FOUND CORRECT UCB
UCB2     LA    R15,2(R15)          NEXT ENTRY IN LOOK-UP TABLE
         B     UCB1
UCB3     LA    R02,DEVDASD         ADDR OF DASD DEVICE-TYPES HEX
         LA    R03,UCBTYP(R14)     ADDR OF UCB DEVICE-TYPE HEX
         BAL   RETURNR,DEVSCAN
         B     ERR08RTN            BAD RETURN
         BCTR  R01,0               GOOD RETURN
         EX    R01,SETCVOL1        SAVE DEVICE-TYPE CHARACTERS
         LA    R01,CVOLEQ+6(R01)   STEP PAST SAME
         MVI   0(R01),C'='
         LA    R14,1(R01)          RECEIVE ADDR
         LA    R15,VOLSERNO        SOURCE ADDR
         LA    R01,L'VOLSERNO
         BAL   RETURNR,MOVERTN2    MOVE NON-BLANK CHARACTERS
         AR    R14,R01             STEP PAST SAME
         LA    R01,CVOLEQ+1
         SR    R14,R01             EXECUTE LENGTH
         STH   R14,CVOLLN               OF 'CVOL=TYPE=VOLID'
         BC    0,READVICE          BR ON SECOND AND SUBSEQ CARDS
         OI    *-3,X'F0'           SET TO BR
         LH    R14,0(R04)          LENGTH OF 'PARM' FIELD
         LTR   R14,R14
         BZ    READVICE            BR IF NOT PRESENT
         CLC   2(5,R04),CVOLEQ     PARM BEGIN 'CVOL=' ?
         BNE   ERR08RTN            BR IF NO
         BCTR  R14,0
         STH   R14,CVOLLN          SAVE EXECUTE LENGTH
         EX    R14,SETCVOL2        RESET FIELD TO VALUE GIVEN
READVICE MVC   TTR,=X'000001'                ADDR OF FIRT BLOCK
         BAL   RETURNR,READBLK               READ FIRST BLOCK
         LA    INDEXPTR,BLKAREA+2            POINT TO V.I.C.E.
         CLI   PCHSW,C'1'                    CHECK PUNCH-ONLY
         BE    LOCNXTEN
         BAL   RETURNR,HEADING1              PRINT PAGE HEADING
         MVI   FORMCTRL,SPACE3
         MVC   PRINTWRK(L'STATHEAD),STATHEAD
         BAL   RETURNR,PRINT                 PRINT STAT HEADING
         MVI   FORMCTRL,SPACE2
         MVC   PRINTWRK+9(6),VOLIDHDG
         MVC   PRINTWRK+19(17),BLKSUHDG
         MVC   PRINTWRK+39(17),BLKSLHDG
         BAL   RETURNR,PRINT                 PRINT STAT COL HEADINGS
         MVI   FORMCTRL,SPACE1
         MVC   PRINTWRK+9(9),VOLSERNO
         SR    R03,R03             PICK UP R OF LAST RECORD
         IC    R03,14(INDEXPTR)         IE  RECORDS / TRACK
         MH    R03,16(INDEXPTR)    MULT BY TT OF FIRST EMPTY REC
         SR    R04,R04                       CLEAR REG
         IC    R04,18(INDEXPTR)              R OF 1ST AVAILABLE BLK
         BCTR  R04,0
         AR    R03,R04
         CVD   R03,BLKSUSED
         MVC   PRINTWRK+23(6),PATTERN1
         ED    PRINTWRK+23(6),BLKSUSED+5
         LH    R04,12(INDEXPTR)              LAST TT OF CATALOG
         SR    R05,R05                       CLEAR REG
         IC    R05,14(INDEXPTR)              LAST R
         LA    R04,1(R04)
         MR    R04,R04             TOTAL NO. OF BLOCKS
         SR    R05,R03             SUBTRACT USED
         CVD   R05,BLKSLEFT
         MVC   PRINTWRK+43(6),PATTERN1
         ED    PRINTWRK+43(6),BLKSLEFT+5
         BAL   RETURNR,PRINT                 PRINT STATISTICS
         BAL   RETURNR,HEADING2              PRINT ENTRY HEADINGS
         EJECT
*
* LOCATE NEXT ENTRY ROUTINE-INDEXPTR MUST BE SET AT FIRST BYTE OF LAST
*                           ENTRY EXAMINED-REGISTER 3 IS USED
*
LOCNXTEN SR    R03,R03                       CLEAR REG
         IC    R03,ENTHWCT                   NO OF HALFWORDS LEFT
         SLL   R03,1                         MULTIPLY BY 2
         LA    INDEXPTR,12(R03,INDEXPTR)     LOCATE NEXT ENTRY
CHECKFS  EQU   *
         CLC   ENTNAME,LINKENT               CHK FOR LINK ENTRY
         BNE   IXPTRCHK
         CLC   ENTTTR,ZEROS        END OF CHAIN?
         BE    CHAINEND
         MVC   TTR,ENTTTR                    ADDRESS OF NEXT BLK
         BAL   RETURNR,READBLK               READ NEXT BLOCK IN CHAIN
         LA    INDEXPTR,BLKAREA+2            SET INDEX POINTER
         CLC   ENTNAME,CNTRLNAM              CHK FOR INDEX CTRL ENTRY
         BE    ERR02RTN                      WRONG BLOCK
         B     CHECKFS
*
* DETERMINE TYPE OF ENTRY
*
IXPTRCHK CLI   ENTHWCT,X'00'                 CHK FOR INDEX POINTER
         BE    IXPTRRTN
         CLC   ENTTTR,ZEROS
         BNE   VCBPTCHK
         CLI   ENTHWCT,X'03'                 CHK FOR CVOL PTR
         BE    OLDCVOL
         CLI   ENTHWCT,X'05'       NEW CVOL PTR ?
         BE    NEWCVOL
         B     DSPTRRTN
OLDCVOL  MVC   CVOLSRNO,CVOLOLD
         LA    R03,LSTENTRY        FORCE USE OF DUMMY ENTRY
         B     CVOLPRTN
NEWCVOL  MVC   CVOLSRNO,CVOLNEW
         LA    R03,CVOLTYPE        FOR SCAN OF DEVICE TYPES
         B     CVOLPRTN
CVOLSRNO DS    CL6
VCBPTCHK CLI   ENTHWCT,X'01'                 CHK FOR VOL CNTRL BLK PTR
         BE    VCBPTRTN
GENIXCHK CLI   ENTHWCT,X'02'                 CHK FOR GENERATION INDEX
         BE    GENIXRTN
ALIASCHK CLI   ENTHWCT,X'04'                 CHK FOR ALIAS
         BE    ALIASRTN
         CLI   ENTHWCT,X'07'       EXACTLY 1-VOLUME DATASET ?
         BE    NEWDSRTN            BR IF YES TO DISPLAY VTOC TTR
         STM   R08,R09,SAVE89
         SR    R08,R08       .ZERO R8 +R9
         SR    R09,R09       .
         IC    R09,ENTHWCT   .PUT HALF WORD COUNT IN R9.
         BCTR  R09,0         .SUBTRACT ONE FROM R9.
         D     R08,=F'6'     .CHECK HALF WORD COUNT OF FORM
         LTR   R08,R08       .6 * M + 1, 0 <= M <= 5 WHERE
         BZ    ALIASCK1      .M IS THE NUMBER OF VOLUMES.
         LM    R08,R09,SAVE89     .RELOAD REGS 8 & 9.
         B     ERR03RTN      . BRANCH TO ERROR ROUTINE
ALIASCK1 EQU   *
         C     R09,=F'6'     .
         BL    ALIASCK2      .
         LM    R08,R09,SAVE89 .RELOAD R8 & R9
         B     ERR03RTN       . BRANCH TO ERROR ROUTINE
ALIASCK2 EQU   *
         LTR   R09,R09       .
         LM    R08,R09,SAVE89 . RELOAD R8 & R9
         BP    DSPTRRTN      .
         B     ERR03RTN                      INVALID ENTRY
*
SAVE89   DS    0F                  .TEMP SAVE AREA FOR R8 & R9
         DS    CL8
*
*
* READ CATALOG BLOCK ROUTINE
*
READBLK  LOCATE INDEXBLK
         LTR   R15,R15             SUCCESSFUL READ?
         BCR   8,RETURNR                     RETURN IF REG 15 IS ZEROS
         CH    R15,=H'4'           SERIAL NUMBER ERROR?
         BE    ERR08RTN
         CH    R15,=H'24'          I/O ERROR?
         BE    ERR04RTN
         B     ERR05RTN                      INVALID CODE IN REG 15
*
* PRINT PAGE HEADING ROUTINE
*
HEADING1 MVI   FORMCTRL,SKPTOCH1
         MVC   PRINTWRK+60-L'HDGLINE1/2(L'HDGLINE1),HDGLINE1
         ST    RETURNR,SAVERTN1              SAVE RETURN ADDRESS
         AP    PAGENUMP,=P'1'      ADD 1 TO PAGE COUNTER
         UNPK  PAGENUM,PAGENUMP
         OI    PAGENUM+3,X'F0'               CLEAR SIGN
         MVC   PRINTWRK+109(9),PAGEID
         BAL   RETURNR,PRINT                 PRINT HEADING LINE 1
         MVC   PRINTWRK+56-L'HDGLINE2/2(L'HDGLINE2),HDGLINE2
         MVC   PRINTWRK+58+L'HDGLINE2/2(6),VOLSERNO
         MVI   FORMCTRL,SPACE1
         BAL   RETURNR,PRINT                 PRINT HEADING LINE 2
         L     RETURNR,SAVERTN1              RESTORE RETURN ADDRESS
         BR    RETURNR                       RETURN
SAVERTN1 DS    F
*
* PRINT ROUTINE
*
PRINT    PUT   PRINTER,PRINTREC             WRITE PRINT LINE
         SR    R02,R02                       CLEAR REG
         TRT   FORMCTRL,TABLE-64             GET LINE COUNT
         CVD   R02,LINECT08
         AP    LINECTR,LINECT08+7(1)         INCREMENT CTR
CHKLIMIT MVI   FORMCTRL,SPACE1
         MVC   PRINTWRK,PRINTWRK-1           CLEAR PRINT AREA
         CP    LINECTR,=P'60'                CHK FOR LIMIT
         BL    PAGEOK
         ST    RETURNR,SAVERTN2              SAVE RETURN ADDRESS
         B     FORWARD
SAVERTN2 DS    F                             REGISTER SAVE AREA
FORWARD  ZAP   LINECTR,=P'0'                 CLEAR LINE COUNTER
         BAL   RETURNR,HEADING1              PAGE HEADINGS
         BAL   RETURNR,HEADING2              COLUMN HEADINGS
         L     RETURNR,SAVERTN2              RESTORE RETURN ASDRESS
PAGEOK   BR    RETURNR                       RETURN
*
* COLUMN HEADING ROUTINE
*
HEADING2 MVI   FORMCTRL,SPACE3
         MVC   PRINTWRK(L'ENTRYHDG),ENTRYHDG
         ST    RETURNR,SAVERTN3              SAVE RETURN ADDRESS
         B     AROUND
SAVERTN3 DS    F                             REG SAVE AREA
AROUND   BAL   RETURNR,PRINT
         MVI   FORMCTRL,SPACE2
         MVC   PRINTWRK+9(4),NAMEHDG
         MVC   PRINTWRK+49(LETC),ETCHDG
         BAL   RETURNR,PRINT                 PRINT COLUMN HEADINGS
         BAL   RETURNR,PRINT                 BLANK LINE
         L     RETURNR,SAVERTN3              RESTORE RETURN ADDRESS
         BR    RETURNR                       RETURN
         EJECT
*
* INDEX POINTER ENTRY ROUTINE
*
IXPTRRTN MVI   CATLGSW,C'0'                  TURN SWITCH OFF
         L     R03,NOQENTS
         LA    R03,1(R03)          ADD 1 TO NUMBER IN QUEUE
         ST    R03,NOQENTS
         MH    R03,QITEML          MULTIPLY BY ELEMENT LENGTH
         LA    QUEUEPTR,QTABLE(R03)          LOCATE 1ST AVAILABLE SLOT
         MVC   QELTTR,TTR                    SAVE ADDRESS OF BLK
         LA    R03,BLKAREA
         MVC   QELNAME,ENTNAME               SAVE INDEX NAME
         MVC   TTR,ENTTTR                    TTR OF NEXT BLOCK TO READ
         SR    INDEXPTR,R03                  DISP FROM END OF BLOCK
         STH   INDEXPTR,QELDISP              SAVE DISP IN QUEUE TABLE
         BAL   RETURNR,READBLK               READ NEXT BLOCK IN CHAIN
FRSTENCK LA    INDEXPTR,BLKAREA+2            SET UP ENTRY PTR
         CLC   ENTNAME,CNTRLNAM              CHK FOR INDEX CNTRL ENTRY
         BNE   ERR06RTN                      NO INDEX CNTRL ENTRY
         BE    LOCNXTEN
*
* CVOL POINTER ROUTINE
*
CVOLPRTN LA    R02,DEVDASD         SCAN DASD TYPES ONLY
         BAL   RETURNR,DEVSCAN
         NOP   0                   IGNORE BAD RETURN
         BCTR  R01,0
         LR    R04,R01             SAVE EXECUTE LENGTH
         LR    R05,R02             SAVE
         MVI   CATLGSW,C'0'                  TURN CATLG SWITCH OFF
         CLI   PCHSW,C'1'          PUNCH ONLY ?
         BE    PCHCVOLP
         MVC   PRINTWRK(8),ENTNAME
         MVC   PRINTWRK+50(8),=C'CVOL PTR'
         EX    R04,MOVDEVCD        DEVICE TYPE TO LISTING
         MVC   PRINTWRK+73(6),CVOLSRNO
         BAL   RETURNR,PRINT                 PRINT CVOL PTR ENTRY
         CLI   PTPCHSW,C'1'                  CHK FOR PUNCHING
         BNE   LOCNXTEN
PCHCVOLP MVC   OPCODE,=C'CONNECT'            BUILD CONNECT CARD
         LA    PCHPTR,PARMS                  SET UP PUNCH LINE PTR
         MVC   0(6,PCHPTR),=C'INDEX='        INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)              INCREMENT PTR
         LR    R14,PCHPTR
         LA    R15,ENTNAME
         BAL   RETURNR,MOVERTN               MOVE NAME TO PUNCH AREA
         AR    PCHPTR,R01
         MVI   0(PCHPTR),C','                COMMA
         LA    PCHPTR,1(PCHPTR)    STEP PAST COMMA
         MVC   0(4,PCHPTR),VOLEQ   MOVE 'VOL='
         LR    R02,R05             RESTORE
         EX    R04,DEVCDMOV        MOVE CONNECTED VOL TYPE
         LA    PCHPTR,5(R04,PCHPTR)     STEP PAST SAME
         MVI   0(PCHPTR),C'='      MOVE '='
         LA    R14,1(PCHPTR)       RECEIVE ADDR
         LA    R15,CVOLSRNO        SOURCE ADDR
         LA    R01,L'CVOLSRNO
         BAL   RETURNR,MOVERTN2    MOVE CONNECTED VOLID
         AR    R14,R01
         MVI   0(R14),C','         MOVE ','
         LH    R01,CVOLLN
         EX    R01,MVCVOL2         MOVE 'CVOL=..=..'
         MVI   SORTCODE,C'1'                 CONNECT CARDS 1ST
         BAL   RETURNR,PUNCH                 PUNCH CONNECT CARD
         B     LOCNXTEN
MVCVOL2  MVC   1(0,R14),CVOLEQ
         EJECT
*
* NAME MOVE ROUTINE
*
MOVERTN  LA    R01,8               MOST FREQUENTLY-USED LENGTH
MOVERTN2 LR    R02,R01
         BCTR  R02,0
         AR    R01,R15             END OF FIELD
         EX    R02,TRT1            SCAN FOR ' '
         SR    R01,R15             LENGTH BEFORE ' '
         BCTR  R01,0
         EX    R01,MVC1            MOVE NON-BLANK PORTION
         LA    R01,1(R01)          TRUE LENGTH
         BR    RETURNR
TRT1     TRT   0(0,R15),TRANSTBL
MVC1     MVC   0(0,R14),0(R15)
NAMEMOVE MVC   0(0,R06),NAMEAREA
*
* PUNCH ROUTINE
*
PUNCH    UNPK  SORTCODE+1(7),SRTCOUNT
         OI    SORTCODE+7,X'F0'
         AP    SRTCOUNT,=P'1'
       PUT     PUNCHER,PUNCHREC
         MVI   PUNCHREC,C' '
         MVC   PUNCHREC+1(71),PUNCHREC
         BR    RETURNR
         EJECT
*
* ATIAS ROUTINE
*
ALIASRTN CLI   PCHSW,C'1'                    CHK FOR PUNCH ONLY
         MVI   CATLGSW,C'0'                  TURN CATLG SWITCH OFF
         BE    PCHALIAS                      PUNCH ONLY
         MVC   PRINTWRK(8),ENTNAME
         MVC   PRINTWRK+51(5),=C'ALIAS'
         MVC   PRINTWRK+91(8),ALIASTRN
         BAL   RETURNR,PRINT                 PRINT ALIAS ENTRY
         CLI   PTPCHSW,C'1'                  CHK FOR PUNCHING
         BNE   DONTPCH
PCHALIAS MVC   OPCODE,=C'BLDA   '            BLDA CARD
         LA    PCHPTR,PARMS                  SET PTR TO PARM FIELD
         MVC   0(6,PCHPTR),=C'INDEX='        INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)              INCREMENT PTR
         LR    R14,PCHPTR
         LA    R15,ALIASTRN
         BAL   RETURNR,MOVERTN               MOVE TRUE NAME
         AR    PCHPTR,R01
         MVI   0(PCHPTR),C','                COMMA
         LH    R01,CVOLLN
         EX    R01,MVCVOL2         MOVE 'CVOL=..=..'
         LA    PCHPTR,2(R01,PCHPTR)     STEP PAST ',CVOL...'
         MVC   0(7,PCHPTR),=C',ALIAS='
         MVC   7(8,PCHPTR),ENTNAME
         MVI   SORTCODE,C'5'                 BLDA CARDS 5TH
         BAL   RETURNR,PUNCH                 PUNCH BLDA CARD
DONTPCH  EQU   LOCNXTEN
*
* DATA SET POINTER ROUTINE
*
NEWDSRTN EQU   *
         UNPK  PRINTWRK+102(7),ENTTTR(4)
         TR    PRINTWRK+102(6),XTABLE-X'F0'
         MVI   PRINTWRK+108,C' '
DSPTRRTN BAL   RETURNR,DSPRTRTN              INITIAL PRINT ROUTINE
         LA    R03,14(INDEXPTR)              ADDR OF FIRST VOL ENTRY
         LH    R04,DSPVOLCT                  LOAD NO OF VOLUMES
         BAL   RETURNR,PRINTVOL              PRINT VOL INFO
         CLI   PTPCHSW,C'1'                  CHK FOR PUNCHING
         BE    PCHDSRTN                      PUNCH ROUTINE
         B     LOCNXTEN                      LOCATE NEXT ENTRY
*
* VOLUME CONTROL BLOCK POINTER ROUTINE
*
VCBPTRTN MVI   VCBSW,C'1'                    SET SW ON
         BAL   RETURNR,DSPRTRTN              INITIAL PRINT ROUTINE
         MVC   SAVETTR,TTR                   SAVE BLOCK ADDR
         MVC   TTR,ENTTTR                    ADDRESS OF VCB
         BAL   RETURNR,READBLK               READ NEXT BLK
         LA    R03,BLKAREA                   SET POINTER
         LH    R04,0(R03)                    LOAD VOL COUNT
         LA    R03,2(R03)                    INCREMENT PTR
         BAL   RETURNR,PRINTVOL              PRINT VOL INFO
         CLI   PTPCHSW,C'1'                  CHK FOR PUNCHING
         BE    PCHDSRTN                      PUNCH ROUTINE
         MVC   TTR,SAVETTR                   ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK               READ VCB PTR BLOCK
         MVI   VCBSW,C'0'
         B     LOCNXTEN                      LOCATE NEXT ENTRY
         EJECT
*
* BUILD INDEX NAME ROUTINE
*
BLDNAME  LA    QUEUEPTR,QTABLE+QITEM    SET PTR ON 1ST ENTRY
         ST    RETURNR,SAVERTN4              SAVE RETURN ADDR
         B     AHEAD
SAVERTN4 DS    F
AHEAD    L     R04,NOQENTS                   SET LOOP COUNTER
         LA    R06,NAMEAREA                  SET POINTER TO BUILD AREA
LOOPER   LR    R14,R06
         LA    R15,QELNAME
         BAL   RETURNR,MOVERTN               MOVE NAME TO BUILD AREA
         AR    R06,R01
         MVI   0(R06),C'.'                   PERIOD
         LA    R06,1(R06)                    INCREMENT PTR TO NAME AREA
         LA    QUEUEPTR,QITEM(QUEUEPTR)
         BCT   R04,LOOPER
         LA    R04,NAMEAREA
         SR    R06,R04                       COMPUTE LENGTH OF INDEX
         STH   R06,NAMELGTH
         L     RETURNR,SAVERTN4              RESTORE RETURN ADDRESS
         BR    RETURNR                       RETURN
*
* DSNAME INITIAL PRINT ROUTINE
*
DSPRTRTN ST    RETURNR,SAVERTN8
         CLC   NOQENTS,ZEROS
         BE    CHKPCHSW
         CLI   CATLGSW,C'1'                  CHK FOR NAME ALREADY BUILT
         BE    CHKPCHSW
         MVI   CATLGSW,C'1'                  SET SW ON
         BAL   RETURNR,BLDNAME               BUILD INDEX NAME
CHKPCHSW CLI   PCHSW,C'1'                    CHK FOR PUNCH ONLY
         BE    PCHDSRTN
         MVC   PRINTWRK+50(8),=C'DATA SET'
         LA    R06,PRINTWRK                  SET PTR TO PRINT AREA
         LH    R05,NAMELGTH
         LTR   R05,R05             ANY INDEX?
         BZ    MOVDSNAM            BR IF NO
         BCTR  R05,0                         ADJUST TO MACH LGTH
         EX    R05,NAMEMOVE                  MOVE INDEX TO PRINT
         LA    R05,1(R05)
         AR    R06,R05                       INCREMENT PTR
MOVDSNAM LR    R14,R06
         LR    R15,INDEXPTR
         BAL   RETURNR,MOVERTN               MOVE DSNAME TO PRINT
         CLI   0(INDEXPTR),C'G'              CHK FOR GDG NAME
         BNE   NOTGDG
         CLI   5(INDEXPTR),C'V'
         BNE   NOTGDG
         TM    6(INDEXPTR),X'F0'
         BC    14,NOTGDG
         TM    7(INDEXPTR),X'F0'
         BC    14,NOTGDG
         XC    1(4,R06),LINKENT    NORMALISE
NOTGDG   L     RETURNR,SAVERTN8              LOAD RETURN ADDRESS
         BR    RETURNR
SAVERTN8 DS    F
*
* PRINT DATA SET VOLUME INFORMATION ROUTINE
*
PRINTVOL ST    RETURNR,SAVERTN5              SAVE RETURN ADDRESS
         B     PAST
SAVERTN5 DS    F
PAST     CH    R04,=H'20'                    CHK FOR MORE THAN 1 BLOCK
         BNH   ONEBLOCK
         LH    R05,=H'20'                    LOAD LOOP COUNTER
         SH    R04,=H'20'                    DECREMENT VOL COUNT
         B     STARTPRT
ONEBLOCK LR    R05,R04                       LOAD LOOP COUNTER
         SR    R04,R04                       CLEAR VOL COUNT REGISTER
STARTPRT LA    R02,DEVCDTBL        SCAN ALL DEVICE TYPES
         BAL   RETURNR,DEVSCAN
         B     *+8                 BAD RETURN
         B     FIND
         UNPK  PRINTWRK+62(9),VOLDEVCD(5)
         TR    PRINTWRK+62(8),XTABLE-X'F0'
         MVI   PRINTWRK+70,C' '
         B     MOVSERNO
MOVDEVCD MVC   PRINTWRK+63(0),6(R02)
FIND     EQU   *
         BCTR  R01,0
         EX    R01,MOVDEVCD        DEVICE TYPE TO LISTING
MOVSERNO MVC   PRINTWRK+73(6),VOLSRNUM       VOLUME SERIAL NO
         LH    R01,VOLSEQNO                  SEQUENCE NO
         CVD   R01,SEQNUMCV
         OI    SEQNUMCV+7,X'0F'              CLEAR SIGN TO F
         UNPK  PRINTWRK+82(6),SEQNUMCV+4(4)
         BAL   RETURNR,PRINT                 PRINT VOLUME INFO
         LA    R03,VITEM(R03)      STEP TO NEXT VOLUME
         BCT   R05,STARTPRT                  REPEAT
         LTR   R04,R04
         BE    FINISHED
         MVC   TTR,10(R03)                   ADDRESS OF NEXT BLK
         BAL   RETURNR,READBLK               READ NEXT BLK
         LA    R03,BLKAREA+2                 ADDRESS OF 1ST ENTRY
         B     PAST                          REPEAT
FINISHED L     RETURNR,SAVERTN5              RESTORE RETURN ADDRESS
         BR    RETURNR                       RETURN
*
* DATA SET CATLG CARD PUNCH ROUTINE
*
PCHDSRTN MVC   OPCODE,=C'CATLG  '            CATLG CARD
         LA    PCHPTR,PARMS                  SET POINTER
         MVC   0(7,PCHPTR),=C'DSNAME='
         LA    PCHPTR,7(PCHPTR)              INCREMENT PTR
         LR    R06,PCHPTR
         LH    R05,NAMELGTH
         LTR   R05,R05             ANY INDEX?
         BZ    DSNAMMOV            BR IF NO
         BCTR  R05,0                         ADJUST TO MACH LGTH
         EX    R05,NAMEMOVE                  MOVE INDEX TO PUNCH
         LA    R05,1(R05)
         AR    R06,R05                       INCREMENT PTR
DSNAMMOV CLI   VCBSW,C'0'                    CHK FOR NO VCB
         BE    BLOCKOK
         CLI   PCHSW,C'1'                    CHK FOR PUNCH SWITCH ON
         BE    BLOCKOK
         MVC   TTR,SAVETTR                   ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK               READ VCB PTR BLK
BLOCKOK  LA    RETURNR,RETURNAD              SET UP RETURN ADDRESS
         ST    RETURNR,SAVERTN8
         B     MOVDSNAM                      MOVE DSNAME
RETURNAD LA    PCHPTR,0(R01,R06)
         MVI   0(PCHPTR),C','                COMMA
         LA    PCHPTR,1(PCHPTR)              INCREMENT PTR
         LA    R06,COL72
         SR    R06,PCHPTR                    CHK FOR ROOM IN CARD
         CH    R06,=H'20'
         BNL   ROOM
         BAL   RETURNR,NEWCARD
ROOM     LH    R01,CVOLLN
         MVC   0(L'CVOLEQ,PCHPTR),CVOLEQ     MOVE 'CVOL=..=..'
         LA    PCHPTR,1(R01,PCHPTR)          STEP PAST SAME
         MVI   0(PCHPTR),C','                MOVE ','
         LA    PCHPTR,1(PCHPTR)              STEP PAST SAME
         CLI   VCBSW,C'1'                    CHK FOR VOL CTRL BLK
         BNE   DSPTR
         MVC   SAVETTR,TTR                   SAVE PRESENT BLOCK ADDR
         MVC   TTR,ENTTTR                    ADDRESS OF VCB
         BAL   RETURNR,READBLK               READ NEXT BLOCK
         LA    R03,BLKAREA                   SET PTR
         B     ACOUPLE
DSPTR    LA    R03,12(INDEXPTR)              SET PTR
ACOUPLE  LH    R04,0(R03)                    LOAD VOL COUNT
         LA    R03,2(R03)                    INCREMENT PTR
         BAL   RETURNR,PUNCHVOL              PUNCH VOL INFO
         CLI   VCBSW,C'0'                    CHK FOR VCB
         BE    THEEND
         MVC   TTR,SAVETTR                   ADDRESS OF VCB PTR
         BAL   RETURNR,READBLK               READ VCB PTR BLOCK
         MVI   VCBSW,C'0'                    TURN OFF VCB SWITCH
         B     THEEND     * FIX FOR INFINITE LOOP. *
THEEND   EQU   LOCNXTEN
*
* NEWCARD ROUTINE
*
NEWCARD  ST    RETURNR,SAVERTN9              SAVE RETURN ADDRESS
         B     ON
SAVERTN9 DS    F
ON       MVI   COL72,C'C'                    CONT CHAR IN COL 72
         BAL   RETURNR,PUNCH                 PUNCH CARD
         LA    PCHPTR,PARMCONT               SET PTR TO COL 16
         LA    R06,56                        56 SPACES IN CARD
         L     RETURNR,SAVERTN9              LOAD RETURN ADDRESS
         BR    RETURNR
         EJECT
*
* PUNCH DATA SET VOLUME INFORMATION ROUTINE
*
PUNCHVOL ST    RETURNR,SAVERTN6              SAVE RETURN ADDRESS
         B     ALINE
SAVERTN6 DS    F
ALINE    CH    R04,=H'20'                    CHK FOR MORE THAN 1 BLK
         BNH   UNOBLOCK
         LH    R05,=H'20'                    LOAD LOOP COUNTER
         SH    R04,=H'20'                    DECREMENT VOL COUNT
         B     STARTPCH
UNOBLOCK LR    R05,R04                       LOAD LOOP COUNTER
         SR    R04,R04                       CLEAR VOL CT REGISTER
STARTPCH LA    R02,DEVCDTBL        ADDR OF DEVICE-CODE TABLE
         LA    RETURNR,NOHIT
DEVSCAN  EQU   *                   S/R TO SCAN DEVICE-TYPE TABLE
LOOP     LH    R01,4(R02)          LENGTH OF DEVICE-NAME
         CLC   0(4,R02),VOLDEVCD
         BE    4(RETURNR)          GOOD RETURN
         CLC   0(4,R02),LSTENTRY   RUN OFF END?
         BCR   8,RETURNR           BAD RETURN IF YES
         LA    R02,6(R01,R02)      STEP TO NEXT ENTRY
         B     LOOP
DEVCDMOV MVC   4(0,PCHPTR),6(R02)
NOHIT    MVI   NOHITSW,C'1'
HIT      LA    R15,14(R01)         SPACE REQD FOR NON-TAPE ENTRY
         TM    2(R02),X'80'        TAPE ?
         BE    UNOLINE             BR IF NO
         LA    R15,19(R01)         SPACE REQD FOR TAPE ENTRY
UNOLINE  MVI   SORTCODE,C'4'       'CATLG' CARDS ARE 4TH
         LA    R06,COL72
         SR    R06,PCHPTR
         CR    R06,R15             ENOUGH SPACE FOR 1ST ENTRY?
         BNL   WILLFIT             BR IF YES
         BAL   RETURNR,NEWCARD     START NEW CARD
WILLFIT  MVC   0(4,PCHPTR),VOLEQ   MOVE 'VOL='
         LH    R01,4(R02)          LENGTH OF DEVICE-TYPE NAME
         BCTR  R01,0
         EX    R01,DEVCDMOV        MOVE TO CARD
         LA    R01,1(R01)          TRUE LENGTH
         AR    PCHPTR,R01
         MVC   4(2,PCHPTR),=C'=('
         LA    PCHPTR,6(PCHPTR)
         SH    R06,=H'6'           ALLOW FOR 'VOL=' AND '=('
         SR    R06,R01             ALLOW FOR DEVICE NAME
NEXTSET  LR    R14,PCHPTR          DESTN. ADDR
         LA    R15,VOLSRNUM        SOURCE ADDR
         LA    R01,L'VOLSRNUM      LENGTH
         BAL   RETURNR,MOVERTN2
         AR    PCHPTR,R01
         SR    R06,R01
         MVI   0(PCHPTR),C','                COMMA
         TM    VOLDEVCD+2,X'80'    TAPE ?
         BZ    NOSEQNUM            IGNORE SEQ NO IF NOT
         LH    R02,VOLSEQNO        PICK UP SEQ NO
         CVD   R02,SEQNUMCV
         OI    SEQNUMCV+7,X'0F'
         UNPK  1(4,PCHPTR),SEQNUMCV+5(3)     MOVE SEQ NO TO CARD
         MVI   5(PCHPTR),C','                COMMA
         LA    PCHPTR,5(PCHPTR)    ALLOW FOR ',NNNN'
         SH    R06,=H'5'
NOSEQNUM LA    PCHPTR,1(PCHPTR)    ALLOW FOR ','
         BCTR  R06,0
INCPTR   LA    R03,VITEM(R03)      STEP TO NEXT VOLUME
         BCT   R05,CHKROOM
         B     BLKEND
CHKROOM  CH    R06,=H'13'                    CHK SPACE LEFT
         BNL   NEXTSET
         BAL   RETURNR,NEWCARD
         B     NEXTSET
BLKEND   LTR   R04,R04             ANY LEFT?
         BE    FINI
         MVC   TTR,10(R03)                   ADDRESS OF NEXT VCB
         BAL   RETURNR,READBLK               READ NEXT BLOCK
         LA    R03,BLKAREA                   SET UP POINTER
         CH    R04,=H'20'                    CHK FOR EXTRA BLOCKS
         BNH   LASTBLK
         LH    R05,=H'20'                    LOAD LOOP COUNTER
         SH    R04,=H'20'                    DECREMENT VOL COUNT
         B     CHKROOM
LASTBLK  LR    R05,R04                       LOAD LOOP COUNTER
         SR    R04,R04                       CLEAR VOL COUNT
         B     CHKROOM
FINI     BCTR  PCHPTR,0                      DECREMENT PTR
         MVI   0(PCHPTR),C')'                CLOSE PARENS
         BAL   RETURNR,PUNCH
         CLI   NOHITSW,C'1'                  CHK SWITCH ON
         BNE   LOADRTRN                      BRANCH IF NOT ON
         MVI   FORMCTRL,SPACE2
         MVC   PRINTWRK(30),=C'DEVICE TYPE NOT FOUND IN TABLE'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(26),=C'SPACE PROVIDED IN CARD NO.'
         MVC   PRINTWRK+27(8),SORTCODE
         MVC   PRINTWRK+36(27),=C'FOR 6 CHARACTER DEVICE NAME'
         BAL   RETURNR,PRINT
         MVI   NOHITSW,C'0'                  SET SWITCH OFF
         BAL   RETURNR,PRINT                 BLANK LINE
         OI    RETCODE,X'04'
LOADRTRN EQU   *
         L     RETURNR,SAVERTN6              LOAD RETURN ADDRESS
         BR    RETURNR
         EJECT
*
* GENERATION INDEX ROUTINE
*
GENIXRTN L     R03,NOQENTS
         LA    R03,1(R03)          ADD 1 TO NUMBER IN QUEUE
         ST    R03,NOQENTS
         MH    R03,QITEML          MULTIPLY BY ELEMENT LENGTH
         LA    QUEUEPTR,QTABLE(R03)          LOCATE AVAILABLE SLOT
         MVC   QELTTR,TTR                    SAVE BLOCK ADDR
         LA    R03,BLKAREA                   SET BLOCK PTR
         LR    R04,INDEXPTR
         SR    R04,R03                       COMPUTE DISPLACEMENT
         STH   R04,QELDISP                   SAVE DISPLACEMENT IN BLK
         MVC   QELNAME,ENTNAME               SAVE INDEX NAME
         CLI   CATLGSW,C'1'                  CHK CATLG SWITCH ON
         BE    ADDNAME
         CLC   NOQENTS,=F'1'                 CHK FOR MORE NAMES
         BNH   ADDNAME
         BAL   RETURNR,BLDNAME               BUILD INDEX NAME
         B     CHKPUNCH
ADDNAME  LH    R04,NAMELGTH
         LA    R06,NAMEAREA(R04)   POINT TO CURRENT POSITION
         LR    R14,R06
         LR    R15,INDEXPTR
         BAL   RETURNR,MOVERTN               MOVE INDEX NAME TO AREA
         AR    R06,R01
         MVI   0(R06),C'.'                   PERIOD
         LA    R04,1(R01,R04)      UPDATE LENGTH
         STH   R04,NAMELGTH
CHKPUNCH CLI   PCHSW,C'1'                    CHK FOR PUNCHING
         BE    PCHBLDG
         CLI   PTPCHSW,C'1'
         BNE   PRTGDG
PCHBLDG  MVC   OPCODE,=C'BLDG   '            BUILD BLDG CARD
         LA    PCHPTR,PARMS                  SET POINTER
         MVC   0(6,PCHPTR),=C'INDEX='        INDEX PARAMETER
         LH    R05,NAMELGTH                  LGTH OF NAME
         LA    R06,6(PCHPTR)                 POINTER TO PUNCH AREA
         SH    R05,=H'2'                     ADJUS TO MACH LGTH
         EX    R05,NAMEMOVE                  MOVE NAME TO PCH
         AH    R05,=H'1'                     READJUST LGTH
         LA    PCHPTR,0(R05,R06)             SET POINTER
         MVI   0(PCHPTR),C','                COMMA
         LA    PCHPTR,1(PCHPTR)              INCKEMENT PTR
         MVI   SORTCODE,C'3'       'BLDG' CARDS ARE 3RD
         LA    R06,COL72
         SR    R06,PCHPTR                    COMPUTE SPACE LEFT IN CARD
         CH    R06,=H'45'          ENOUGH ?
         BNL   SPACEOK
         BAL   RETURNR,NEWCARD
SPACEOK  EQU   *
         LH    R01,CVOLLN
         EX    R01,MVCVOL          MOVE 'CVOL=..=..'
         LA    PCHPTR,1(R01,PCHPTR)     STEP PAST SAME
         MVC   0(9,PCHPTR),=C',ENTRIES='
         LA    PCHPTR,9(PCHPTR)    STEP PAST
         SR    R03,R03
         IC    R03,GIMXENTS                  MAX NO OF ENTRIES
         CVD   R03,SEQNUMCV
         UNPK  0(3,PCHPTR),SEQNUMCV+6(2)
         OI    2(PCHPTR),X'F0'               F SIGN
         CLI   GIFLAGS,X'00'                 CHK FOR NO MORE PARMS
         BE    THATSALL
         MVI   3(PCHPTR),C','                COMMA
         LA    PCHPTR,4(PCHPTR)              INCREMENT PTR
         CLI   GIFLAGS,X'01'
         BE    EMPTY
         CLI   GIFLAGS,X'02'
         BE    DELETE
         CLI   GIFLAGS,X'03'
         BE    EMPTY
         B     ERR07RTN                      INVALID FLAGS
MVCVOL   MVC   0(0,PCHPTR),CVOLEQ
EMPTY    MVC   0(5,PCHPTR),=C'EMPTY'         EMPTY PARAMETER
         CLI   GIFLAGS,X'03'
         BNE   THATSALL
         MVI   5(PCHPTR),C','                COMMA
         LA    PCHPTR,6(PCHPTR)              INCREMENT PTR
DELETE   MVC   0(6,PCHPTR),=C'DELETE'        DELETE PARAMETER
THATSALL EQU   *
         BAL   RETURNR,PUNCH                 PUNCH BLDG CARD
         CLI   PCHSW,C'1'                    CHK PUNCH SWITCH ON
         BNE   PRTGDG
READNXT  MVI   CATLGSW,C'1'                  SET SW ON
         CLC   GICURENT,ZEROS      ANY ENTRIES?
         BNE   SOMEENTS
         B     ADJUSTQ                       LOCATE NEXT ENTRY
SOMEENTS MVC   TTR,ENTTTR                    ADDRESS OF DATA SETS
         BAL   RETURNR,READBLK               READ NEXT BLOCK
         B     FRSTENCK
PRTGDG   EQU   *
         LA    R06,PRINTWRK
         LH    R05,NAMELGTH
         BCTR  R05,0
         EX    R05,NAMEMOVE                  MOVE INDEX NAME
         MVC   PRINTWRK+50(7),=C'GEN.IX.'
         MVC   PRINTWRK+62(8),=C'MAX.NO.='
         SR    R02,R02                       CLEAR REG
         IC    R02,GIMXENTS                  MAX NO OF ENTIES
         CVD   R02,SEQNUMCV
         UNPK  PRINTWRK+70(3),SEQNUMCV+6(2)
         OI    PRINTWRK+72,X'F0'
         MVC   PRINTWRK+80(6),=C'FLAGS='
         IC    R02,GIFLAGS                   EMPTY-DELETE FLAGS
         CVD   R02,SEQNUMCV
         UNPK  PRINTWRK+86(2),SEQNUMCV+6(2)
         OI    PRINTWRK+87,X'F0'
         BAL   RETURNR,PRINT                 PRINT GDG INDEX
         B     READNXT
         EJECT
*
* END OF CHAIN ROUTINE
*
CHAINEND CLC   NOQENTS,ZEROS
         BNE   CKCTLGSW
RDCARD   GET   READER,CARDHOLD               READ ANY EXTRA CTL CARDS
         CLC   FUNCTION,=C'PRINT'            CHK FOR PRINT ONLY
         BE    RESET
         CLI   PTPCHSW,C'1'                  CHK PTPCH SWITCH ON
         BE    RDCARD
         CLI   PCHSW,C'1'                    CHK PUNCH SWITCH ON
         BE    RDCARD
RESET    MVI   CATLGSW,C'0'                  TURN CATLG SWITCH OFF
         MVI   VCBSW,C'0'                    TURN VCB SWITCH OFF
         ZAP   LINECTR,=P'0'                 ZERO LINE COUNTER
         MVC   NAMEAREA,BLANKS44             CLEAR NAME AREA
         MVC   NAMELGTH,ZEROS
         ZAP   PAGENUMP,=P'0'                ZERO PAGE COUNTER
         B     CHKFUNCT
CKCTLGSW CLI   CATLGSW,C'1'                  CHK CATLG SWITCH ON
         BE    ADJUSTQ
         BAL   RETURNR,BLDNAME               BUILD INDEX NAME
         CLI   PCHSW,C'1'                    CHK FOR PUNCHING
         BE    PCHINDX
         LH    R05,NAMELGTH                  LOAD NAME LENGTH
         BCTR  R05,0                         ADJUST TO MACH LGTH
         LA    R06,PRINTWRK
         EX    R05,NAMEMOVE                  MOVE INDEX NAME TO PRINT
         MVC   PRINTWRK+51(5),=C'INDEX'
         BAL   RETURNR,PRINT
         CLI   PTPCHSW,C'1'                  CHK FOR PUNCHING
         BNE   ADJUSTQ
PCHINDX  MVC   OPCODE,=C'BLDX   '            BUILD BLDX CARD
         LA    PCHPTR,PARMS                  SET PTR
         MVC   0(6,PCHPTR),=C'INDEX='        INDEX PARAMETER
         LA    PCHPTR,6(PCHPTR)              INCREMENT PTR
         LR    R06,PCHPTR
         LH    R05,NAMELGTH
         SH    R05,=H'2'
         EX    R05,NAMEMOVE                  MOVE INDEX NAME TO PUNCH
         LA    R05,1(R05)
         LA    PCHPTR,0(R05,PCHPTR)          INCREMENT PTR
         MVI   0(PCHPTR),C','
         LA    PCHPTR,1(PCHPTR)
         LA    R06,COL72
         SR    R06,PCHPTR                    COMPUTE SPACE LEFT
         MVI   SORTCODE,C'2'       'BLDX' CARDS ARE 2ND
         CH    R06,=H'20'          ENOUGH ?
         BNL   ROOMOK
         BAL   RETURNR,NEWCARD
ROOMOK   EQU   *
         MVC   0(L'CVOLEQ,PCHPTR),CVOLEQ     MOVE 'CVOL=..=..'
         BAL   RETURNR,PUNCH
ADJUSTQ  LH    R05,NAMELGTH
         LA    R04,NAMEAREA-1
         LA    R06,0(R04,R05)
ONCEMORE BCTR  R06,0                         DECREMENT 1
         CLI   0(R06),C'.'                   LOOK FOR PERIOD
         BE    AHIT
         CR    R04,R06
         BNE   ONCEMORE
AHIT     AR    R04,R05
         SR    R04,R06                       COMPUTE LGTH OF LAST NAME
         SR    R05,R04
         STH   R05,NAMELGTH
         BCTR  R04,0
         EX    R04,MOVBLNKS                  BLANK LAST NAME
         B     OVERIT
MOVBLNKS MVC   1(0,R06),BLANKS44
OVERIT   L     R03,NOQENTS
         LR    R05,R03
         MH    R05,QITEML
         LA    QUEUEPTR,QTABLE(R05)          LOCATE LAST QUEUE ENTRY
         MVC   TTR,QELTTR
         LH    R04,QELDISP
         BCTR  R03,0
         ST    R03,NOQENTS
         BAL   RETURNR,READBLK               READ BLOCK OF LAST Q ENTRY
         LA    INDEXPTR,BLKAREA(R04)         SET UP POINTER
         B     LOCNXTEN                      LOCATE NEXT ENTRY
         EJECT
*
* INVALID FUNCTION CODE
*
ERR01RTN MVC   PRINTWRK(21),=C'INVALID FUNCTION CODE'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(80),CARDHOLD
         B     COMMON2
*
* WRONG BLOCK ROUTINE
*
ERR02RTN MVC   PRINTWRK(28),=C'ERROR IN READING INDEX BLOCK'
         BAL   RETURNR,PRINT
         MVC   PRINTWRK(19),=C'INDEX CONTROL ENTRY'
         LA    R15,PRINTWRK+20
         B     COMMON1
*
* INVALID ENTRY ROUTINE
*
ERR03RTN EQU   *
         MVC   PRINTWRK(18),=C'INVALID ENTRY TYPE'
         LA    R15,PRINTWRK+19
         B     COMMON1
*
* I/O ERROR ROUTINE
*
ERR04RTN MVC   PRINTWRK(26),=C'I/O ERROR IN READING BLOCK'
         LA    R15,PRINTWRK+27
         B     COMMON1
*
* INVALID CONDITION CODE FROM READ ROUTINE
*
ERR05RTN MVC   PRINTWRK(31),=C'INVALID CODE RETURNED FROM READ'
         LA    R15,PRINTWRK+32
         B     COMMON1
*
* NO INDEX CONTROL ENTRY ROUTINE
*
ERR06RTN MVC   PRINTWRK(22),=C'NO INDEX CONTROL ENTRY'
         LA    R15,PRINTWRK+23
         B     COMMON1
*
* INVALID GENERATION INDEX FLAGS ROUTINE
*
ERR07RTN MVC   PRINTWRK(20),=C'INVALID FLAGS IN GDG'
         LA    R15,PRINTWRK+21
COMMON1  EQU   *
         MVC   0(8,R15),=C'AT ADDR '
         UNPK  8(7,R15),TTR(4)
         TR    8(6,R15),XTABLE-X'F0'
         MVI   14(R15),C' '
         B     COMMON2
*
* VOLUME SERIAL NO. ERROR OR NO SYSCTLG ON VOLUME
*
ERR08RTN MVC   PRINTWRK(74),=C'VOLUME SERIAL NUMBER IN ERROR OR NO SYSCC
               TLG DATA SET RESIDES ON VOLUME NO.'
         MVC   PRINTWRK+75(6),VOLSERNO
COMMON2  EQU   *
         BAL   RETURNR,PRINT
         OI    RETCODE,X'08'
         B     EOFRDR
         EJECT
*
* END OF FILE ROUTINE
*
EOFRDR CLOSE   (READER,,PRINTER,,PUNCHER) OS IGNORES UN-OPEN DCB
      FREEPOOL READER
      FREEPOOL PRINTER
         CLI   PCHSW,C'1'                    CHK PUNCH SWITCH ON
         BE    CLOSEPCH
         CLI   PTPCHSW,C'1'                  CHK PTPCH SWITCH ON
         BNE   EXIT
CLOSEPCH EQU   *
      FREEPOOL PUNCHER
EXIT     EQU   *
         L     13,4(13)                      LOAD SAVE AREA PTR
         SR    15,15
         IC    15,RETCODE
       RETURN  (14,12),RC=(15)
         EJECT
*
* DSECTS
*
ENTDSECT DSECT
ENTNAME  DS    CL8
ENTTTR   DS    CL3
ENTHWCT  DS    CL1
*
ENTVVV   EQU   *                   VARIABLE PORTION STARTS HERE
*
GIFLAGS  DS    CL1
GIMXENTS DS    CL1
GICURENT DS    CL2
*
*
         ORG   ENTVVV              ALIAS DESCRIPTOR
ALIASTRN DS    CL8
*
*
         ORG   ENTVVV              OLD CVOL DESCRIPTOR
CVOLOLD  DS    CL6
         ORG   ENTVVV              NEW CVOL DESCRIPTOR
CVOLTYPE DS    XL4
CVOLNEW  DS    CL6
*
*
         ORG   ENTVVV              DSN DESCRIPTOR
DSPVOLCT DS    CL2
*
*
QELEMENT DSECT                               OVERLAY FOR QUEUE ELEMENTS
QELTTR   DS    CL3
FILLER   DS    CL1
QELDISP  DS    CL2
QELNAME  DS    CL8
QITEM    EQU   *-QELTTR
*
*
VOLINFO  DSECT                               OVERLAY OF VOLUME INFO
VOLDEVCD DS    CL4
VOLSRNUM DS    CL6
VOLSEQNO DS    CL2
VITEM    EQU   *-VOLDEVCD
*
         DCBD  DSORG=QS,DEVD=DA
*
RECAPCS1 CSECT
         EJECT
*
* WORK AREAS
*
         DS    0D
CARDHOLD DS    0CL80                         CARD READ-IN AREA
FUNCTION DS    CL5
         DS    CL1
VOLSERNO DS    CL6
         DS    CL68
*
*
PUNCHREC DS    0CL80                         PUNCH RECORD AREA
         DC    CL1' '
OPCODE   DC    CL7' '
         DC    CL1' '
PARMS    DC    CL62' '
COL72    DC    CL1' '
SORTCODE DC    CL8' '
         ORG   PUNCHREC+15                   CONTINUATION IN CC 16
PARMCONT DS    CL56
         ORG   *-1
COL71    DS    CL1
         ORG
*
*
PRINTREC DS    0CL133                        PRINT AREA
FORMCTRL DS    CL1
PRINTWRK DC    CL132' '
*
*
INDEXBLK CAMLST BLOCK,TTR,VOLSERNO,BLKAREA   CAMLST MACRO
         DS    0H
TTR      DS    CL3                           TRACK AND RECORD ADDR
BLKAREA  DS    0D
         DS    265C                          INDEX BLOCK FROM LOCATE
*
*
         DS    0D
QTABLE   DS    322C                          INDEX NAME AND LOC QUEUE
NOQENTS  DC    F'0'
*
NAMEAREA DC    CL44' '
NAMELGTH DC    H'0'
*
BLKSUSED DS    D
BLKSLEFT EQU   BLKSUSED
SEQNUMCV DS    D
LINECT08 DS    D
QITEML   DC    AL2(QITEM)
RETCODE  DC    X'00'
SAVETTR  DS    CL3
LINECTR  DC    PL2'0'
SRTCOUNT DC    PL4'0'
         EJECT
*
* CONSTANTS
*
STATHEAD DC    C'SYSCTLG STATISTICS'
BLKSUHDG DC    C'INDEX BLOCKS USED'
BLKSLHDG DC    C'INDEX BLOCKS LEFT'
ENTRYHDG DC    C'CATALOGED DATA SETS, ALIASES, CVOL POINTERS, AND INDEXC
               ES'
NAMEHDG  DC    C'NAME'
ETCHDG   DC    C'ENTRY TYPE    DEVICE    '
VOLIDHDG DC    C'VOL ID'
         DC    C'   SEQ NO   ALIAS OF'
         DC    C'  VTOC TTR'
LETC     EQU   *-ETCHDG
PAGEID   DS    0CL10
         DC    C'PAGE '
PAGENUM  DS    CL4
PAGENUMP DC    PL3'0'
CNTRLNAM DC    X'0000000000000001'
LINKENT  DC    8X'FF'
CVOLLN   DC    H'0'
CVOLEQ   DC    CL18'CVOL='
VOLEQ    EQU   CVOLEQ+1
HDGLINE1 DC    C'RECAP LISTING OF CATALOGED DATA SETS, POINTERS AND INDC
               EXES'
HDGLINE2 DC    C'FROM SYSCTLG ON VOLUME'
SKPTOCH1 EQU   C'1'
SPACE1   EQU   C' '
SPACE2   EQU   C'0'
SPACE3   EQU   C'-'
BLANKS44 DC    44C' '
*
* DEVICE CODE NAME TABLE
*
         DS    0H
DEVCDTBL DC    X'30008001',H'4',C'2400'
         DC    X'30808001',H'6',C'2400-1'
         DC    X'30C08001',H'6',C'2400-2'
         DC    X'34008001',H'6',C'2400-3'
         DC    X'34208001',H'6',C'2400-4'
         DC    X'30C08003',H'6',C'3400-2'
         DC    X'34008003',H'6',C'3400-3'
         DC    X'34208003',H'6',C'3400-4'
         DC    X'32008003',H'6',C'3400-5'                         BA623
         DC    X'32108003',H'6',C'3400-6'                         BA623
DEVDASD  EQU   *
         DC    X'30002001',H'4',C'2311'
         DC    X'30402002',H'4',C'2301'
         DC    X'30002004',H'4',C'2302'
         DC    X'30002003',H'4',C'2303'
         DC    X'30C02008',H'4',C'2314'
         DC    X'30502009',H'4',C'3330'
         DC    X'30702009',H'4',C'3330'
         DC    X'3050200D',H'6',C'3330-1'                         BA623
         DC    X'3070200D',H'6',C'3330-1'                         BA623
         DC    X'30002006',H'6',C'2305-1'
         DC    X'30002007',H'6',C'2305-2'
LSTENTRY DC    X'99999999',H'6',C'      '
*
ZEROS    EQU   *
TRANSTBL DC    64X'00'
         DC    X'FF'
         DC    191X'00'
XTABLE   DC    C'0123456789ABCDEF'
*   FORMS CONTROL CHARACTER TABLE
TABLE    DC    X'01'                         HEX 40
         DC    31X'00'
         DC    X'03'                         HEX 60
         DC    143X'00'
         DC    X'0201'                       HEX F0 AND F1
*
* SWITCHES
*
PCHSW    DC    C'0'
PTPCHSW  DC    C'0'
CATLGSW  DC    C'0'
VCBSW    DC    C'0'
NOHITSW  DC    C'0'
         EJECT
*
*   DATA CONTROL BLOCKS
*
READER   DCB   DSORG=PS,                                               *
               EODAD=EOFRDR,                                           C
               MACRF=GM,                                               C
               DDNAME=SYSIN
         EJECT
*
PRINTER  DCB   DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FBA,                                              *
               LRECL=133,                                              *
               EXLST=PRINTXS,                                          *
               DDNAME=SYSPRINT
PRINTXS  DC    X'85',AL3(PRINTX1)
PRINTX1  CLC   DCBBLKSI,ZEROS      BLOCKSIZE SUPPLIED BY JCL?
         BCR   7,R14               RETURN IF YES
         LH    R15,DCBLRECL
         MH    R15,=H'10'          USE BLOCKING FACTOR OF 10
         STH   R15,DCBBLKSI
         BR    R14
         EJECT
*
PUNCHER  DCB   DSORG=PS,                                               C
               MACRF=PM,                                               C
               RECFM=FB,                                               *
               LRECL=80,                                               *
               EXLST=PUNCHXS,                                          *
               DDNAME=SYSPUNCH
PUNCHXS  EQU   PRINTXS
         EJECT
         LTORG
         END   RECAPPER
