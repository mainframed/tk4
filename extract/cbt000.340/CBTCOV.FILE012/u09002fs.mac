         TITLE 'EDIT CONTROL CARDS AND READY PAPER TAPE'
         PRINT NOGEN
ZSPOOL2  INIT  (12,4)
         USING AREA,R11
         USING IHADCB,R10
         L     R11,=A(COMMON)
         L     R3,=A(PRINTER1) PICK UP ADDRESS OF THE DCB FOR BAD CARDS
         EJECT
*              THIS ROUTINE:-
*                   A.   READS CONTROL CARDS.
*                   B.   EDITS CONTROL CARDS.
*                   C.   UPDATES THE PAPER TAPE DCB'S.
         EJECT
AOPEN    BC    0,A1     FIRST TIME THROUGH OPEN
*                       SECOND TIME BRANCH AROUND OPEN
         OPEN  (PRINTER1,(OUTPUT)) OPEN NO. 1 PRINTER FILE
         OPEN  (PRINTER2,(OUTPUT)) OPEN NO. 2 PRINTER FILE
         OI    AOPEN+1,X'F0'  SET BRANCH AROUND OPEN
         SPACE 2
*              RESET WORK AREAS
A1       MVI   JOBNAME,C' '   ROLL A BLANK
         MVC   JOBNAME+1(43),JOBNAME     DOWN THE JOB NAME FIELD
         MVI   PRNTAREA,C' ' ROLL A BLANK
         MVC   PRNTAREA+1(100),PRNTAREA   DOWN THE PRINT AREA
         MVC   TRANMOD,=CL8' ' BLANK OUT TRANSLATION MODULE NAME
         MVI   SWITCH1,X'00' RESET SWITCHES
         L     R10,=A(DISK) LOAD ADDRESS OF DISK OUT-PUT
         MVI   DCBRECFM,RECFMU SET RECFM TO U
         MVC   DCBBLKSI,BLKSIZE  SET BLKSIZE
         MVC   DCBPRECL,BLKSIZE  SET PHYSICAL RECORD LENGTH
         MVI   EORSWTCH,X'00' BLANK EOR SWITCHES
         MVI   PARSWTCH,X'00' BLANK PARITY SWITCHES
         MVI   GENSWTCH,X'00' BLANK GENERAL SWITCHES
         MVI   DELSWTCH,X'00' BLANK DELETE SWITCHES
         MVI   TSSWTCH,X'00' BLANK TRACK/SUPPRESS SWITCHES
         MVC   TRANMOD,=C'IGG019CN' DEFAULT - ASCII CODE
         L     R10,=A(TAPE) LOAD ADDRESS OF PAPER TAPE DCB
         MVI   DCBCODE,CODEA ASCII CODE REQUIRED
         MVI   CODE,C'A' DEFAULT ASCII CODE
         MVI   DISPSWT,X'00' BLANK DISPLAY SWITCHES
         MVC   DCBLRECL,=H'0' ZEROISE LRECL IN DISK DCB
         MVI   DCBEROPT,X'20'   SET EROPT DEFAULT TO ABE
         MVC   SPACE,=C'TRK005010' SET DEFAULT DASD SPACE
         EJECT
         CLI   CARDAREA,C' ' IS THE FIRST POSITION BLANK
         BNE   A2 NO - OK
         SPACE 1
*              FIRST CARD COLUMN IS BLANK
         BAL   R9,EPRINT0
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(80),CARDAREA
         BAL   R9,EPRINT1
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(26),=C'FIRST CARD COLUMN IS BLANK'
         BAL   R9,EPRINT1
         B     EOJ            GO READ ANOTHER CARD
         SPACE 2
*              FIND PARAMETER ON CARD. IS IT VALID
         SPACE 1
A2       LA    R8,CARDAREA LOAD ADDRESS OF BEGINNING OF CARD
A4       TRT   0(15,R8),TABLE LOOK FOR '=' SIGN
         BZ    E1 NOT FOUND - ERROR
         STC   R2,WORK1 SAVE CHARACTER FOUND
         CLI   WORK1,C'=' IS IT AN '=' SIGN
         BNE   E1 NO - ERROR
         SR    R1,R8 CALCULATE LENGTH
         CH    R1,=H'0' IS THERE A PARAMETER
         BE    E1 NO - ERROR
         BCTR  R1,R0                  OF THIS FIELD
         MVC   WORK1,=20C' ' BLANK OUT WORK AREA
         STC   R1,MOVE1+1 STORE LENGTH IN MOVE
MOVE1    MVC   WORK1,0(R8) MOVE PARM TO WORK AREA
         LR    R0,R8 SAVE REGISTER 8
         AR    R8,R1     INCREMENT TO POSITION AFTER
         LA    R8,2(R8)                              EQUAL SIGN
         LA    R1,PARMS-24 LOAD ADDRESS OF LIST OF POSSIBLE PARAMETERS
A5       LA    R1,24(R1) INCREMENT TO NEXT POSITION
         CLI   0(R1),C'*' HAVE WE REACHED THE END OF THE LIST
         BE    E3 YES - ERROR
         CLC   WORK1(14),0(R1) HAS THE FULL NAME BEEN CODED
         BE    A7 YES
         CLC   WORK1(4),14(R1) HAS THE ABREVIATION BEEN CODED
         BNE   A5 NO - TRY NEXT PARAMETER IN LIST
         SPACE 2
*              FIND VALUE ON CARD AND BRANCH TO CHECK ROUTINE
         SPACE 1
A7       LR    R9,R1 SAVE REGISTER 1
         TRT   0(16,R8),TABLE LOOK FOR COMMA
         BZ    E2 NOT FOUND
         STC   R2,BYTE
         CLI   BYTE,C'=' IS IT AN '=' SIGN
         BE    E2 YES - INVALID
         SR    R1,R8 CALCULATE LENGTH
         CH    R1,=H'0' IS THERE A VALUE
         BE    E2 NO
         BCTR  R1,R0
         MVC   WORK1,=20C' ' BLANK OUT WORK AREA
         STC   R1,MOVE2+1 STORE LENGTH IN MOVE
MOVE2    MVC   WORK1,0(R8) MOVE VALUE TO WORK AREA
         AR    R8,R1 INCREMENT TO POSITION
         LA    R8,2(R8)                    AFTER COMMA
         L     R9,20(R9) LOAD ADDRESS OF ROUTINE
         BR    R9 GO TO IT
         EJECT
A6       CLI   BYTE,C',' ARE THERE MORE PARAMETERS
         BE    A4 YES
         B     C1 BRANCH TO VERIFICATION ROUTINE
         EJECT
*              CHECK JOB PARAMETER
B1       LA    R1,WORK1
         LA    R2,9 SET COUNT
         B     B1G
B1A      LA    R1,1(R1) INCREMENT TO NEXT POSITION
         CLI   0(R1),C'.' IS THIS THE END OF FIRST PART OF JOB NAME
         BE    B1B YES
         CLI   0(R1),C' ' IS THIS THE END OF THE JOB NAME
         BE    B1C YES
*              IS THIS A VALID CHARACTER
B1G      CLI   0(R1),C'A'
         BL    B1D LESS THAN A - INVALID
         BCT   R2,B1A
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(59),=C'JOB PARAMETER - MORE THAN EIGHT CHARACC
               TERS WITHOUT A PERIOD'
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B1D      BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTCNTL+1(36),=C'JOB PARAMETER - AN INVALID CHARACTER'
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B1B      CLI   2(R1),C' ' IS SECOND POSITION AFTER PERIOD BLANK
         BE    B1E YES
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(47),=C'JOB PARAMETER - TOO MANY POSITIONS AFT-
               ER PERIOD'
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B1E      TM    1(R1),X'F0' IS BYTE AFTER PERIOD NUMERIC
         BNO   B1F YES
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(52),=C'JOB PARAMETER - POSITION AFTER PERIOD -
               IS NUMERIC    '
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B1F      LA    R1,2(R1) INCREMENT TO NEXT AVAILABLE POSITION
B1C      MVC   0(5,R1),=C'.TAPE' THIS A PAPER TAPE DATA SET
         OI    GENSWTCH,JOBPARM JOB PARAMETER PRESENT
         MVC   JOBNAME(15),WORK1 MOVE JOB NAME TO DSCB
         B     A6 CONTINUE
         EJECT
*              CHECK EOR PARAMETER
B2       LA    R1,WORK1-1
B2A      LA    R1,1(R1) INCREMENT
         CLI   0(R1),C' ' HAVE WE REACHED THE END
         BE    A6 YES - CONTINUE
         CLI   0(R1),C'1' TEST
         BE    B2B
         CLI   0(R1),C'2'     IF
         BE    B2C
         CLI   0(R1),C'3'          NUMBER
         BE    B2D
         CLI   0(R1),C'4'               IS
         BE    B2E
         CLI   0(R1),C'5'                    A
         BE    B2F
         CLI   0(R1),C'6'                         VALID
         BE    B2G
         CLI   0(R1),C'7'                                   SWITCH
         BE    B2H
         CLI   0(R1),C'8'
         BE    B2I
         BAL   R9,EPRINT0 NO
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(37),=C'EOR PARAMETER - INVALID SWITCH NUMBER'
         BAL   R9,EPRINT1
         B     A3
B2B      OI    EORSWTCH,EOR1  SET
         B     B2J
B2C      OI    EORSWTCH,EOR2       APPROPRIATE
         B     B2J
B2D      OI    EORSWTCH,EOR3            SWITCH
         B     B2J
B2E      OI    EORSWTCH,EOR4                 BIT
         B     B2J
B2F      OI    EORSWTCH,EOR5                      OM
         B     B2J
B2G      OI    EORSWTCH,EOR6
         B     B2J
B2H      OI    EORSWTCH,EOR7
         B     B2J
B2I      OI    EORSWTCH,EOR8
B2J      CLI   1(R1),C' ' IS THIS THE END
         BE    A6 YES - CONTINUE
         CLI   1(R1),C'-' IS THERE MORE
         BE    B2K YES
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(25),=C'EOR PARAMETER - NOT A ''-'''
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B2K      LA    R1,1(R1) INCREMENT ONE POSITION
         B     B2A
         EJECT
*              CHECK PARITY PARAMETER
B3       CLC   WORK1(4),=C'ODD '
         BE    B3A
         CLC   WORK1(2),=C'O '
         BE    B3A
         CLC   WORK1(5),=C'EVEN '
         BE    B3B
         CLC   WORK1(2),=C'E '
         BE    B3B
         CLC   WORK1(5),=C'NONE '
         BE    A6
         CLC   WORK1(2),=C'N '
         BE    A6
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(32),=C'PARITY PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B3A      OI    PARSWTCH,PARODD
         B     A6
B3B      OI    PARSWTCH,PAREVEN
         B     A6
         EJECT
*              CHECK DELETE PARAMETER
B4       CLC   WORK1(4),=C'YES '
         BE    B4A
         CLC   WORK1(2),=C'Y '
         BE    B4A
         CLC   WORK1(3),=C'NO '
         BE    A6
         CLC   WORK1(2),=C'N '
         BE    A6
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(32),=C'DELETE PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3 GO READ ANOTHER CARD
B4A      OI    DELSWTCH,DELYES
         B     A6
         EJECT
*              CHECK TRACK/SUPPRESS PARAMETER
B5       CLC   WORK1(4),=C'YES '
         BE    B5A
         CLC   WORK1(2),=C'Y '
         BE    B5A
         CLC   WORK1(3),=C'NO '
         BE    A6
         CLC   WORK1(2),=C'N '
         BE    A6
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(40),=C'TRACK/SUPPRESS PARAMETER - INVALID VAL-
               UE'
         BAL   R9,EPRINT1
         B     A3
B5A      OI    TSSWTCH,TSYES
         B     A6
         EJECT
*              CODE PARAMETER
B6       CLC   WORK1(2),=C'A '
         BE    A6
         CLC   WORK1(2),=C'B '
         BE    B6B
         CLC   WORK1(2),=C'C '
         BE    B6C
         CLC   WORK1(2),=C'F '
         BE    B6D
         CLC   WORK1(2),=C'I '
         BE    B6E
         CLC   WORK1(2),=C'N '
         BE    B6F
         CLC   WORK1(2),=C'T '
         BE    B6G
         CLI   WORK1+8,C' ' IS THIS A VALID NAME
         BE    B6H YES
B6J      BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(30),=C'CODE PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
B6B      MVC   TRANMOD,=C'IGG019CO'
         B     B6I
B6C      MVC   TRANMOD,=C'IGG019CR'
         B     B6I
B6D      MVC   TRANMOD,=C'IGG019CP'
         B     B6I
B6E      MVC   TRANMOD,=C'IGG019CQ'
         B     B6I
B6F      L     R10,=A(TAPE) LOAD ADDRESS OF PAPER TAPE DCB
         MVI   DCBCODE,CODEN SET CODE TO N INSTEAD OF A
         MVC   TRANMOD,=C'        '
         B     A6
B6G      MVC   TRANMOD,=C'IGG019CM'
B6I      MVC   CODE,WORK1 SAVE CODE
         B     A6
B6H      MVC   TRANMOD,WORK1 USER SUPPLIED MODULE
         MVI   CODE,C' '
         B     A6
         EJECT
*              CHECK RECFM PARAMETER
B7       L     R10,=A(DISK) LOAD ADDRESS OF DISK DCB
         CLC   WORK1(2),=C'U '
         BE    A6
         CLC   WORK1(2),=C'F '
         BE    B7A
         CLC   WORK1(3),=C'FB '
         BE    B7B
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(31),=C'RECFM PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
B7A      MVI   DCBRECFM,RECFMF
         B     A6
B7B      MVI   DCBRECFM,RECFMFB
         B     A6
         EJECT
*              CHECK LRECL PARAMETER
B8       LA    R7,5 SET COUNT OF 5
         LA    R9,WORK1-1
         SR    R0,R0 CLEAR WORK REGISTER
         CALL  ZSPIE1,(B8A,B8B,WORK1) INTERCEPT 0C7'S
B8C      LA    R9,1(R9) INCREMENT TO NEXT POSITION
         CLI   0(R9),C' ' IS THIS THE END
         BE    B8D YES
         AH    R0,=H'1' INCREMENT COUNT
         BCT   R7,B8C
B8A      CALL  ZSPIE2
B8E      BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(31),=C'LRECL PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
B8D      SH    R0,=H'1' FIND TRUE LENGTH
         STC   R0,PACK1+1     AND STORE IN PACK INSTRUCTION
         OI    PACK1+1,X'70' PUT IN FIRST OPERANDS LENGTH
PACK1    PACK  DBLWD,WORK1(1)
         CVB   R7,DBLWD
         L     R10,=A(DISK) LOAD ADDRESS OF DISK DCB
         STH   R7,DCBLRECL STORE LRECL IN DISK DCB
B8F      CALL  ZSPIE2
         B     A6
B8B      DC    C'000000100000000'
         EJECT
*              CHECK BLKSIZE PARAMETER
B9       LA    R7,5 SET COUNT OF 5
         LA    R9,WORK1-1
         SR    R0,R0 CLEAR WORK REGISTER
         CALL  ZSPIE1,(B9A,B8B,WORK1)
B9C      LA    R9,1(R9)
         CLI   0(R9),C' '
         BE    B9D
         AH    R0,=H'1'
         BCT   R7,B9C
B9A      CALL  ZSPIE2
B9E      BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(33),=C'BLKSIZE PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
B9D      SH    R0,=H'1'
         STC   R0,PACK2+1
         OI    PACK2+1,X'70'
PACK2    PACK  DBLWD,WORK1(1)
         CVB   R7,DBLWD
         L     R10,=A(DISK) LOAD ADDRESS OF DISK DCB
         STH   R7,DCBBLKSI
         STH   R7,DCBPRECL
         B     B8F
         EJECT
*              CHECK DISPLAY PARAMETER
B10      CLC   WORK1(4),=C'YES '
         BE    B10A
         CLC   WORK1(2),=C'Y '
         BE    B10A
         CLC   WORK1(3),=C'NO '
         BE    A6
         CLC   WORK1(2),=C'N '
         BE    A6
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(33),=C'DISPLAY PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
B10A     OI    DISPSWT,DISPYES
         B     A6
         EJECT
*              CHECK SPACE PARAMETER
B11      CLI   WORK1+9,C' '
         BNE   B11A
         CLC   WORK1(3),=C'CYL'
         BE    B11B
         CLC   WORK1(3),=C'TRK'
         BNE   B11A
B11B     CALL  ZSPIE1,(B11C,B8B,WORK1) INTERCEPT 0C7'S
         PACK  WORK2,WORK1+3(3) PACK PRIMARY SPACE
         CVB   R0,WORK2
         PACK  WORK2,WORK1+6(3) PACK SECONDARY SPACE
         CVB   R0,WORK2
         CALL  ZSPIE2
         MVC   SPACE,WORK1 MOVE SPACE REQUIREMENTS TO STORE
         B     A6
B11C     CALL  ZSPIE2
B11A     BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(31),=C'SPACE PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
         EJECT
*              CHECK EROPT PARAMETER
B12      CLC   WORK1(4),=C'ABE '       HAS ABE BEEN CODED
         BE    A6                      YES - THIS IS DEFAULT SO RETURN
         L     R10,=A(TAPE)            LOAD ADDRESS OF TAPE DCB
         CLC   WORK1(4),=C'ACC '       HAS ACC BEEN CODED
         BNE   B12A                    NO
         MVI   DCBEROPT,X'80'          YES - AMEND TAPE DCB
         B     A6                      RETURN
B12A     CLC   WORK1(4),=C'SKP '       HAS SKP BEEN CODED
         BNE   B12C                    NO - THEN PARAMETER IS INVALID
         MVI   DCBEROPT,X'40'          YES - AMEND TAPE DCB
         B     A6                      RETURN
B12C     BAL   R9,EPRINT0              PRINT ERROR MESSAGES
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(31),=C'EROPT PARAMETER - INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3                      BRANCH TO SET BAD RETURN CODE
         EJECT
*              VERIFY THAT PARAMETERS ARE ACCEPTABLE AS COMPARED WITH
*              ONE ANOTHER
         SPACE 1
*              RECFM, LRECL, BLKSIZE
C1       L     R10,=A(DISK) LOAD ADDRESS OF DISK DCB
         LH    R9,DCBBLKSI LOAD BLOCK SIZE
         CH    R9,=H'1' IS IT GREATER THAN ONE
         BM    B9E NO
         CH    R9,BLKSIZE
         BH    B9E
         TM    DCBRECFM,RECFMFB IS RECFM FIXED BLOCKED
         BO    C13 YES
         TM    DCBRECFM,RECFMU
         BO    C2
         TM    DCBRECFM,RECFMF
         BO    C3
C13      EQU   *
         LH    R7,DCBLRECL LOAD LRECL
         CH    R7,=H'1' IS IT ONE OR GREATER
         BM    B8E NO
         SR    R8,R8 CLEAR WORK REGISTER
         DR    R8,R7 DIVIDE BLKSIZE BY LRECL
         CH    R8,=H'0' IS THERE A REMAINDER
         BNE   C4 YES - ERROR
C6       L     R10,=A(TAPE) LOAD ADDRESS OF PAPER TAPE DCB
         STH   R7,DCBBLKSI STORE DISK LRECL
         STH   R7,DCBPRECL                  IN TAPE DCB
         B     C5
C2       LR    R7,R9 LOAD BLKSIZE REGISTER INTO LRECL REGISTER
         B     C6
C3       STH   R9,DCBLRECL FIXED - LRECL = BLKSIZE     DISK
         B     C2
C4       BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(34),=C'BLKSIZE IS NOT A MULTIPLE OF LRECL'
         BAL   R9,EPRINT1
         B     A3
         EJECT
*              CALCULATE BUFFERS
C5       LH    R9,BLKSIZE LOAD BLKSIZE
         SR    R8,R8 CLEAR REGISTER 8
         LH    R7,DCBBLKSI LOAD BLOCK SIZE - TAPE
*              ROUND UP BLSIZE TO MULTIPLE OF 4
         TM    DCBBLKSI+1,X'03'
         BZ    C5A OK
         BO    C5B
         TM    DCBBLKSI+1,X'02'
         BO    C5C
         AH    R7,=H'3'
         B     C5A
C5B      AH    R7,=H'1'
         B     C5A
C5C      AH    R7,=H'2'
C5A      STH   R7,DCBBUFL
         SPACE 1
         DR    R8,R7
         MVI   DCBBUFNO,X'28' SET BUFFERS TO MAXIMUM OF 40
         CH    R9,=H'40' IS IT GREATER THAN 40
         BH    C7 YES
         STC   R9,DCBBUFNO
C7       L     R10,=A(DISK) LOAD ADDRESS OF DISK DCB
         LH    R9,BLKSIZE
         SR    R8,R8 CLEAR WORK REGISTER
         LH    R7,DCBBLKSI LOAD BLOCK SIZE - DISK
*              ROUND UP BLSIZE TO MULTIPLE OF 4
         TM    DCBBLKSI+1,X'03'
         BZ    C7A OK
         BO    C7B
         TM    DCBBLKSI+1,X'02'
         BO    C7C
         AH    R7,=H'3'
         B     C7A
C7B      AH    R7,=H'1'
         B     C7A
C7C      AH    R7,=H'2'
C7A      STH   R7,DCBBUFL
         SPACE 1
         DR    R8,R7
         MVI   DCBBUFNO,X'02' SET BUFFERS TO MAXIMUM OF 2
         CH    R9,=H'2' IS IT GREATER THAN 2
         BH    C8 YES
         STC   R9,DCBBUFNO NO
         EJECT
*              LOAD IN TRANSLATION MODULE
C8       L     R10,=A(TAPE) LOAD ADDRESS OF PAPER TAPE DCB
         TM    DCBCODE,CODEN HAS THE USER ASKED FOR CODE=N
         BNO   C9 NO
         MVI   CODE,C'N' YES
         B     C12
C9       BLDL  0,BLDLIST FIND MODULE
         B     C10(R15)
C10      B     C11 OK
         B     C10A           MODULE NOT FOUND
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(52),=C'I/O ERROR WHEN ATTEMPTING TO FIND TRANC
               SLATION MODULE'
         BAL   R9,EPRINT1
         B     A3
C10A     BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(39),=C'TRANSLATION MODULE NOT FOUND IN LIBRARX
               Y'
         BAL   R9,EPRINT1     PRINT MESSAGE AND CLEAR PRINT LINE
         B     A3
C11      LOAD  DE=TRANMOD LOAD IN MODULE
         ST    R0,EPLOC SAVE ENTRY POINT
         EJECT
*              CHECK JOB PARAMETER
C12      TM    GENSWTCH,JOBPARM IS THERE A JOB PARAMETER
         BO    D1 YES - OK
         BAL   R9,EPRINT0
         BAL   R7,EPRINT3
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(38),=C'THE USER HAS NOT CODED A JOB PARAMETERC
                '
         BAL   R9,EPRINT1
         B     A3
D1       LA    R15,0          SET A GOOD RETURN CODE
         B     OUT
         SPACE 3
A3       EQU   *
EOJ      MVC   WTO+44(80),CARDAREA PUT BAD CARD IN MESSAGE TO CONSOLE
         WTO   MF=(E,WTO)
         LA    R15,4          SET BAD RETURN CODE
OUT      EXIT
         SPACE 3
         EJECT
E1       BAL   R9,EPRINT0
         BAL   R7,EPRINT2
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(17),=C'INVALID PARAMETER'
         BAL   R9,EPRINT1
         B     A3
         SPACE 3
E2       BAL   R9,EPRINT0
         BAL   R7,EPRINT2
         MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(13),=C'INVALID VALUE'
         BAL   R9,EPRINT1
         B     A3
         SPACE 3
E3       LR    R8,R0 RESTORE REGISTER 8
         B     E1
         EJECT
EPRINT2  MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(80),CARDAREA
         BAL   R9,EPRINT1
         LA    R1,CARDAREA LOAD ADDRESS OF FIRST POSITION OF CARD
         SR    R8,R1 FIND THE POSITION ALONG CARD
         LA    R1,PRNTAREA+1
         AR    R1,R8 FIND THE POSITION ALONG PRINT AREA
         MVI   0(R1),C'1' POINT TO INVALID PARAMETER
         BAL   R9,EPRINT1
         BR    R7 RETURN
         EJECT
*              ROUTINE TO PRINT LINES
EPRINT0  MVI   PRNTCNTL,C'1'
         MVC   PRNTAREA+1(37),=C'I N V A L I D  C O N T R O L  C A R D'
EPRINT1  PUT   (3),PRNTAREA
         MVI   PRNTAREA,C' ' ROLL A BLANK
         MVC   PRNTAREA+1(100),PRNTAREA   DOWN THE PRINT AREA
         BR    R9 RETURN
         EJECT
EPRINT3  MVI   PRNTCNTL,C'-'
         MVC   PRNTAREA+1(80),CARDAREA
         BAL   R9,EPRINT1
         BR    R7 RETURN
         EJECT
WTO      DS    0F
         DC    AL2(WTOEND-*)  TOTAL LENGTH OF MESSAGE (VAR LEN FMT)
         DC    AL2(0)
         DC    CL120' '
         ORG   *-120
         DC    C'MB0003I - ZSPOOL - INVALID CONTROL CARD '
         ORG
WTOEND   EQU   *
DBLWD    DS    D
WORK2    DS    D
CARDOPEN EQU   X'80'
         ENTRY EOJ
         EXTRN COMMON,DISK,CARDS,TAPE,PRINTER1,PRINTER2
WORK1    DS    CL44
         EJECT
         DS    0F
PARMS    EQU   *
         DC    CL14'JOB'
         DC    CL4'J'
         DC    A(B1)
         SPACE 1
         DC    CL14'EOR'
         DC    CL4'E'
         DC    A(B2)
         SPACE 1
         DC    CL14'PARITY'
         DC    CL4'P'
         DC    A(B3)
         SPACE 1
         DC    CL14'DELETE'
         DC    CL4'DEL'
         DC    A(B4)
         SPACE 1
         DC    CL14'TRACK/SUPPRESS'
         DC    CL4'T'
         DC    A(B5)
         SPACE 1
         DC    CL14'CODE'
         DC    CL4'C'
         DC    A(B6)
         SPACE 1
         DC    CL14'RECFM'
         DC    CL4'R'
         DC    A(B7)
         SPACE 1
         DC    CL14'BLKSIZE'
         DC    CL4'B'
         DC    A(B9)
         SPACE 1
         DC    CL14'LRECL'
         DC    CL4'L'
         DC    A(B8)
         SPACE 1
         DC    CL14'DISPLAY'
         DC    CL4'DIS'
         DC    A(B10)
         SPACE 1
         DC    CL14'SPACE'
         DC    CL4'S'
         DC    A(B11)
         SPACE 1
         DC    CL14'EROPT'
         DC    CL4'ER'
         DC    A(B12)
         DC    CL1'*'
         EJECT
*              INTERNAL TRANSLATION TABLE
TABLE    DC    256X'00'
         ORG   TABLE+C'='
         DC    C'='
         ORG   TABLE+C','
         DC    C','
         ORG   TABLE+C'*'
         DC    C'*'
         ORG   TABLE+C' '
         DC    C' '
         ORG
BYTE     DS    CL1
RECFMFB  EQU   X'98' FIXED/BLOCKED/STANDARD
RECFMF   EQU   X'88' FIXED1STANDARD
RECFMU   EQU   X'C0' UNDEFINED
GENSWTCH DS    XL1
EOR1     EQU   X'80'
EOR2     EQU   X'40'
EOR3     EQU   X'20'
EOR4     EQU   X'10'
EOR5     EQU   X'08'
EOR6     EQU   X'04'
EOR7     EQU   X'02'
EOR8     EQU   X'01'
PARODD   EQU   X'80'
PAREVEN  EQU   X'40'
DELYES   EQU   X'80'
TSYES    EQU   X'80'
CODEN    EQU   X'80'
CODEA    EQU   X'04'
JOBPARM  EQU   X'80'
DISPYES  EQU   X'80'
         EJECT
         LTORG
         EJECT
*              COMMON AREA DSECT
AREA     DSECT
PRNTAREA EQU   *
PRNTCNTL DS    CL1
         DS    CL132
SWITCH1  DS    XL1
SWITCH2  DS    XL1
JOBNAME  DS    CL44
DISPSWT  DS    XL1
BLDLIST  DS    0F
         DC    H'1'
         DC    H'58'
TRANMOD  DS    CL8 TRANSLATION MODULE NAME / CODE
         DS    XL50
EPLOC    DS    F
BLKSIZE  DS    H
EORSWTCH DS    XL1
PARSWTCH DS    XL1
DELSWTCH DS    XL1
TSSWTCH  DS    XL1
CODE     DS    CL1
CARDAREA DS    CL80
         DS    CL1
SPACE    DS    CL9
         EJECT
         DCBD  DSORG=QS,DEVD=(DA,PT)
         END
