ZZAAAB   BEGIN BR=(12),SAVE=SAVEAREA
         LM    6,8,0(1)
         LA    9,640(,8)           POINT TO END OF SELECT TABLE
*
** OPEN CONCARD INPUT AND READ 1ST CONTROL CARD
*
         OPEN  (CONCARD,(INPUT))
         BAL   10,B5001
*
** CHECK RUN TYPE
*
         LA    3,5(,3)
         LA    4,1
         LA    5,80(,3)
BA02     EQU   *
         CLI   0(3),C' '
         BNE   BA06
         BXLE  3,4,BA02
BA04     EQU   *
         MVC   CCO133+21(16),=C'INVALID RUN TYPE'
         BAL   11,B6001
         MVI   CXI001,X'FF'
         B     BA58
BA06     EQU   *
         CLC   0(5,3),=C'PRINT'
         BE    BA08
         CLC   0(5,3),=C'PUNCH'
         BE    BA10
         CLC   0(6,3),=C'REPORT'
         BE    BA12
         B     BA04
BA08     EQU   *
         MVI   0(7),X'04'
         B     BA58
BA10     EQU   *
         MVI   0(7),X'08'
         B     BA58
BA12     EQU   *
         MVI   0(7),X'00'
*
*
**  PROCESS MEMBER SELECTION CARDS - CHECK THAT THE TABLE IS NOT FULL
**  BEFOR CHECKING SELECT CARDS
*
BA58     EQU   *
         BAL   10,B5001            READ NEXT CARD
BA61     EQU   *
         LA    4,61                SET LENGTH OF DATA
         CLC   5(6,3),=C'SELECT'   Q- SELECT CARD
         BNE   BA21
         LA    3,11(,3)            A- YES,POINT PAST FIXED FIELD
         CR    8,9
         BNE   BA62
BA6005   EQU   *
         MVC   CCO133+21(30),=C'TOO MANY RANGES - CARD IGNORED'
         BAL   11,B6001
         MVI   CXI001,X'FF'
         B     BA58
*
** LOCATE NEXT FIELD ON CARD
*
BA62     EQU   *
         CLI   0(3),C' '           Q- NEXT CHAR BLANK
         BNE   BA64                A- NO,PROCESS DATA
         LA    3,1(,3)             A- YES,POINT TO NEXT CHAR
         BCT   4,BA62              LOOP TO NEXT CHAR
*
** REPORT NEXT ERROR
*
BA63     EQU   *
         MVC   CCO133+21(22),=C'INVALID SELECTION CARD'
         MVI   CXI001,X'FF'        SET ERROR INDICATOR
         BAL   11,B6001            PRINT ERROR MESSAGE
         B     BA58                READ NEXT CARD
*
** SEARCH CARD FOR DELIMETER
*
BA64     EQU   *
         TRT   0(9,3),CXT256          LOCATE DELIMETER
         BZ    BA63
*
** IF DELIMETER IS A COMMA,MOVE RECORD TO TABLE START AND END ENTRIES
*  THEN LOOK FOR NEXT ENTRY
*
         CR    8,9                 Q- END OF TABLE
         BE    BA6005              A- YES,REPORT RRROR
         MVC   0(8,8),=8X'00'      CLEAR START ENTRY
         TRT   0(9,3),CXT256       Q- DECIMETER PRESENT
         BZ    BA63
         CLI   0(1),C','           Q- DELIMETER COMMA
         BNE   BA66                A- NO,GO CHECK FOR BLANK
         SR    1,3                 A- YES,CALCULATE DATA LENGTH
         BZ    BA63                IF ZERO ERROR
         BCTR  1,0                 REDUCE FOR EXECUTE
         EX    1,EX01              MOVE KEY TO 1ST ENTRY (START RANGE )
         EX    1,EX02              MOVE KEY TO 2ND ENTRY (END RANGE )
         LA    3,2(1,3)            POINT PAST DELIMETER
         LA    8,16(,8)            POINT TO NEXT TABLE ENTRY
         B     BA64                GO FIND NEXT ENTRY
*
** IF DELIMETER IS A - MOVE THE 1ST ENTRY TO TABLE THEN FIND THE
** NEXT CARD ENTRY AND MOVE THAT TO THE TABLE
*
BA66     EQU   *
         CLI   0(1),C'-'           Q- DELIMETER -
         BNE   BA68                A- NO,MUST BE BLANK
         MVC   0(8,8),=8X'00'      CLEAR START ENTRY
         SR    1,3                 CALCULATE LENGTH
         BZ    BA63                ZERO LENGTH INVALID
         BCTR  1,0                 REDUCE LENGTH FOR EXECUTE
         EX    1,EX01              MOVE LOW VALUE TO TABLE
         LA    3,2(1,3)            POINT PAST DELIMETER
         TRT   0(9,3),CXT256       FIND NEXT DELIMETER
         BZ    BA63
         SR    1,3                 CALCULATE LENGTH
         BZ    BA63                ZERO LENGTH INVALID
         BCTR  1,0                 REDUCE LENGTH FOR EXECUTE
         EX    1,EX02              MOVE HIGH VALUE TO TABLE
         LA    8,16(,8)
         LA    1,1(1,3)            POINT TO DELIMETER
         LA    3,1(,1)             POINT PAST DELIMETER
         CLI   0(1),C'-'           Q- NEXT DELIMETER -
         BE    BA63                A- YES,ERROR
         CLI   0(1),C' '           Q- NEXT DELIMETER BLANK
         BE    BA58                A- YES,GO READ NEXT CARD
         B     BA64                PROCESS NEXT ENTRY DELIM ,
*
** FIELD DELIMETED BY BLANK SET START AND END RANGE THEN GO READ
** NEXT CARD
*
BA68     EQU   *
         MVC   0(8,8),=8X'00'      CLEAR START ENTRY
         SR    1,3                 Q- LENGTH ZERO
         BZ    BA63                A-YES,ERROR
         BCTR  1,0                 REDUCE FOR EXECUTE
         EX    1,EX01              MOVE LOW RANGE
         EX    1,EX02              MOVE HIGH RANGE
         LA    8,16(,8)            POINT TO NEXT ENTRY
         B     BA58
** READ NEXT CARD SHOULD BE K= CARD
*
BA20     EQU   *
         BAL   10,B5001
BA21     EQU   *
         LA    3,5(,3)
         CLC   0(2,3),=C'K='
         BNE   BA24
         LA    3,2(,3)
         LR    5,3
         LA    4,72
BA22     EQU   *
         CLI   0(3),C'#'
         BE    BA26
         LA    3,1(,3)
         BCT   4,BA22
BA24     MVC   CCO133+21(19),=C'INVALID KEY DETAILS'
         MVI   CXI001,X'FF'
         BAL   11,B6001
         B     BA20
*
** MOVE  DETAILS TO TABLE
*
BA26     EQU   *
         BAL   10,B5101
*
** IF PUNCH  OPTION NEXT CARD IS REPLACEMENT DATA
*
         CLI   0(7),X'08'
         BNE   BA20
         BAL   10,B5001
         LA    3,5(,3)
         CLC   0(2,3),=C'R='
         BNE   BA32
         LA    3,2(,3)
         LA    4,72
         LR    5,3
BA28     EQU   *
         CLI   0(3),C'#'
         BE    BA36
         LA    3,1(,3)
         BCT   4,BA28
BA32     EQU   *
         MVC   CCO133+21(19),=C'INVALID REP DETAILS'
         MVI   CXI001,X'FF'
         BAL   11,B6001
         B     BA20
*
** MOVE  REPLACEMENT DATA TO KEY TABLE
*
BA36     EQU   *
         BAL   10,B5101
         B     BA20
*
** IF NO ERRORS RETURN
*
BA50     CLOSE (CONCARD)
         CLI   CXI001,X'00'
         BE    BA90
         ABEND 1,DUMP
BA90     EQU   *
         CLOSE (P01)                    EXIT
         L     13,4(,13)
         LM    14,12,12(13)
         BR    14
*
** SUBROUTINE  B5001 - GET A CONTROL CARD RECORD
*                        R3 TO POINT TO RECORD
B5001    EQU   *
         GET   CONCARD
         LR    3,1
         MVC   CCO133+10(80),0(3)
         BAL   11,B6001
         CP    CPW002,=P'20'
         BE    B5003               A- YES,REPORT ERROR
         CLC   0(5,3),=C'ZZAA '
         BER   10
         MVI   CXI001,X'FF'
         MVC   CCO133+21(17),=C'INVALID CARD CODE'
         BAL   11,B6001
         BR    10
B5003    EQU   *
         MVI   CXI001,X'FF'        INDICATE ERROR
         MVC   CCO133+21(33),=C'TOO MANY KEY CARDS - CARD IGNORED'
         BAL   11,B6001            PRINT MESSAGE
         B     B5001               READ NEXT CARD
         SPACE 4
*
* SUBROUTINE  B5101  MOVE A CARD TO TABLE
*                        5 POINTS TO DETAIL START
*                        3 POINTS TO DETAIL END
*
B5101    EQU   *
         AP    CPW002,=P'1'        INCREASE KEY CARD COUNT
         SR    3,5
         BCTR  3,0
         STC   3,0(6)
         EX    3,EX03
         LA    6,73(,6)
         BR    10
         SPACE 3
EX01     MVC   0(0,8),0(3)
EX02     MVC   8(0,8),0(3)
EX03     MVC   1(0,6),0(5)
*
** SUBROUTINE  B6001 PRINT REPORT
*
B6001    EQU   *
         BC    0,B6003
         OI    B6001+1,X'F0'
         MVC   CCO133A+51(30),=C'PDS UPDATE CONTROL CARD REPORT'
         OPEN  (P01,(OUTPUT))
         MVI   CCO133A,X'8B'
         PUT   P01,CCO133A
         MVI   CCO133,X'09'
         MVI   CCO133A,X'09'
         PUT   P01,CCO133A
B6003    EQU   *
         PUT   P01,CCO133
         MVI   CCO133+1,C' '
         MVC   CCO133+2(131),CCO133+1
         MVI   CCO133,X'09'
         BR    11
         EJECT
*
** CONSTANTS,STORAGE AREAS AND LITERALS
*
CONCARD  DCB   DDNAME=CONCARD,MACRF=(GL),DSORG=PS,EODAD=BA50
P01      DCB   DDNAME=P01,MACRF=(PM),DSORG=PS
SAVEAREA DS    18F
CXT256   DC    256X'00'
         ORG   CXT256+X'40'
         DC    X'FF'
         ORG   CXT256+C'-'
         DC    X'FF'
         ORG   CXT256+C','
         DC    X'FF'
         ORG   CXT256+256
CXI001   DC    X'00'               ERROR IND
CCO133   DC    CL133' '
CCO133A  DC    CL133' '
         LTORG
CPW002   DC    PL2'0'              KEY CARD COUNT
         END
