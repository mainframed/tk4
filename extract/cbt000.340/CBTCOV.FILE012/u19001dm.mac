         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
         MACRO
&NAME    MODIN
         CNOP  4,8
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         ST    R13,*+26
         LR    R6,R13
         LA    R13,*+16
         ST    R13,8(R6)
         LM    R6,R10,0(R1)
         B     *+76
         DS    9D
         MEND
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
         TITLE 'B3201, SUBROUTINE TO READ CONTROL CARDS FROM DISK     '
B3201    CSECT
         ENTRY B320100
B320100  EQU   *
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
         SPACE
         SPACE
***********************************************************************
*                                                                     *
*  PROGRAMMER R. WESTWOOD             DATE ASSIGNED  19/12/69         *
*                                                                     *
*  MODULE FUNCTIONS                                                   *
*  ----------------                                                   *
*              U222 DUMPS CONTROL CARDS ON DISK, PUTTING A DUMMY      *
*              ALL HEX '00' RECORD AT END OF FILE. THIS PROGRAM IS    *
*              CALLED TO READ CONTROL CARDS FROM DISK OVERWRITING     *
*              VALID RECORDS FOUND WITH HEX '00'. WHEN EOF RECORD     *
*              IS READ PROGRAM ABORTS ON A FURTHER CALL.              *
*                                                                     *
*                                                                     *
*                                                                     *
*  PARAMETERS  NO. I/O                DESCRIPTION                     *
*  ----------  --- ---                -----------                     *
*                                                                     *
*              1.  I    80 BYTE AREA TO RECEIVE THE CONTROL CARD      *
*                                                                     *
***********************************************************************
         ISEQ  73,80
         MODIN           SAVE, LOAD BASE, LOAD PARAM REGS,
*                        POINT TO SAVE AREA (DEFINED IN MACRO)
*
**  FIRST TIME THRU OPEN CARD FILE                                   OS
*   ------------------------------
BA01     BC    0,BA03              FIRST TIME THRU SWITCH
         OI    BA01+1,X'F0'        FORCE BRANCH TO BA03
         OPEN  (CONCARD)           OPEN CONTROL CARD FILE            OS
*
*
**  READ A CONTROL CARD                                              OS
*   -------------------                                              OS
BA03     EQU   *                                                     OS
         GET   CONCARD,(R6)                                          OS
*                                                                    OS
BA04     EQU   *                                                     OS
         MODOUT
*                                                                    OS
**  END OF FILE ON CONTROL CARDS                                     OS
*   ----------------------------                                     OS
BA05     EQU   *                                                     OS
         MVC   0(80,R6),CXL080     SET END OF FILE INDICATOR         OS
         NI    BA01+1,X'0F'        RESET 1ST. TIME THROUGH SWITCH    OS
         CLOSE (CONCARD)           CLOSE CONTROL CARD FILE           OS
         B     BA04                GO TO MODOUT                      OS
*                                                                    OS
*
**  CONSTANTS & LITERAL POOL
*   ------------------------
CXL080   DC    80XL1'00'           DUMMY RECORD
*
         LTORG
*
**  DISK CONTCD FILE DEFINITION
*   ---------------------------
CONCARD  DCB   DSORG=PS,DDNAME=CONCARD,MACRF=(GM),EODAD=BA05         OS
*
*
         END
