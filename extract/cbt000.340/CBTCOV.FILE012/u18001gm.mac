         TITLE   'SPY57 - PAGE MONITOR - REL 1.0'
******************************************************************
* SPY57 SHOWS VS1 PAGING OVER A PERIOD OF TWO MINUTES.           *
******************************************************************
* MACRO
         MACRO
&NAME    CUREG
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUREG MACRO:16/01/75'
         POP   PRINT
         ACTR  50
         LCLA  &X,&Y,&Z
*    GENERAL REGISTERS
.LPR     ANOP
R&X      EQU   &X
&X       SETA  &X+1
         AIF   (&X LT 16).LPR
*    CONTROL REGISTERS
.LPC     ANOP
C&Y      EQU  &Y
&Y       SETA  &Y+1
         AIF   (&Y LT 16).LPC
*    FLOATING POINT REGISTERS
.LPF     ANOP
F&Z      EQU   &Z
&Z       SETA  &Z+2
         AIF   (&Z LT 8).LPF
         MEND
         MACRO
&NAME    CUENTER &BASE=(R12),&RECURSE=,&RENT=,&FIRST=,&CSECT=,&PARM=
         LCLA  &AL0,&AL1,&AL2,&AL9,&AL12
         ACTR  45                                              DEC 75
&AL2     SETA  &SYSNDX
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUENTER MACRO:16/06/77'
         POP   PRINT
         LCLC  &CL0,&CL1,&CL2,&CL3,&CL12,&CL13,&CL50
         LCLC  &CL51,&CL52,&CL53
         GBLB  &BG15
         AIF   ('&NAME' EQ '').B98
         ENTRY &NAME
.B98     ANOP
&CL0     SETC  '12'
         AIF   ('&BASE'(1,1) EQ '(').B10  *VALIDATE &BASE PARAMETER
&CL0     SETC  '&BASE'
         AIF   ('&CL0' EQ 'NONE').B11
         AIF   ('&CL0'(1,1) NE 'R').B4B
&AL9     SETA  K'&CL0-1
&CL0     SETC  '&CL0'(2,&AL9)
.B4B     AIF   ((&CL0 GT 1) AND (&CL0 LT 13)).B11
.BERA    MNOTE 9,'&&BASES WRONG,MACRO ABANDONED'
         MEXIT
.B10     ANOP
&CL0     SETC  '&BASE(1)'
&AL0     SETA  1                        COUNT ALONG TO-BE-SCANNED BASES
.B13     ANOP
&AL1     SETA  1                       *COUNT ALONG PREVIOUSLY SCANNED
&CL12    SETC  '&BASE(&AL0)'
         AIF ('&CL12'(1,1) NE 'R').B12A
&AL9     SETA  K'&CL12-1
&CL12    SETC  '&CL12'(2,&AL9)
.B12A    ANOP
&AL12    SETA  &CL12
.B12     AIF    ((&AL12 LT 2) OR (&AL12 GT 12)).BERA
.B15     AIF   (&AL1 EQ &AL0).B14      *J OUT IF REACHED LATEST
&CL13    SETC  '&BASE(&AL1)'
         AIF   ('&CL13'(1,1) NE 'R').B15A
&AL9     SETA  K'&CL13-1
&CL13    SETC  '&CL13'(2,&AL9)
.B15A    AIF   (&CL12 EQ &CL13).BERA *ERROR IF DUPLICATED
&AL1     SETA  &AL1+1                  *STEP ALREADY SCANNED PTR
         AGO   .B15
.B14     ANOP
&AL0     SETA  &AL0+1                  *STEP SCAN POINTER
         AIF   ('&BASE(&AL0)' NE '').B13 *J IF NOT NULL
&AL9     SETA  N'&BASE
         AIF   (&AL0 LT &AL9).BERA *ERROR IF NULL ELEMENT
.B11    ANOP
.*   START GENERATING PROGRAM
         DS    0H
         BALR  R15,0
         USING *,R15
&CL1     SETC  '&CSECT'
         AIF   ('&CL1' NE '').B30
&CL1     SETC  '*'
.B30     ANOP
&NAME    SAVE  (14,12),,&CL1
.B32     ANOP
.B90A    BAL   &CL0,OCSVA&AL2
         DROP  R15
         USING *,&CL0
OCSVD&AL2 EQU  *         HOLD IMMEDIATELY AFTER USING STATEMENT
         AIF   (&BG15).NODATIM
         CUREG                          REGISTER MNEMNONICS
&CL51    SETC  '&NAME'
         AIF   (K'&CL51 LE 8).DT1
&CL51    SETC  '&CL51'(1,8)
         AGO   .DT2
.DT1     ANOP
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '&SYSECT'
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '????????'
.DT2     ANOP
&CL52    SETC  '&SYSDATE'(4,2)'.'.'&SYSDATE'(1,2)'.'.'&SYSDATE'(7,2)
&CL53    SETC  '&SYSTIME'(1,2)':'.'&SYSTIME'(4,2)':00'
CUVRSION DC    C'****VERSION/',CL8'&CL51',C'/&CL52./&CL53'
&BG15    SETB  (1)                                             DEC 75
.NODATIM ANOP
OCSAR&AL2 DS    18F
OCSVA&AL2 EQU  *
         AIF   ('&BASE' EQ '').B89
&AL9     SETA  N'&BASE
         AIF   (&AL9 LE 1).B89
&AL1     SETA  &AL9
&AL0     SETA  2
.B88     ANOP
&CL2     SETC  '&BASE(&AL0)'
&CL3     SETC  '&BASE(&AL0-1)'
         LA    &CL2,1
         LA    &CL2,4095(&CL2,&CL3)
         USING OCSVD&AL2+4096*(&AL0-1),&CL2
         AIF   (&AL0 EQ &AL1).B87
&AL0     SETA  &AL0+1
         AGO   .B88
.B89     ANOP
.B87     ANOP
         ST    R13,OCSAR&AL2+4
         LR    R15,R13
         LA    R13,OCSAR&AL2
         ST    R13,8(R15)
         MEXIT
.MEND    MEND
* MACRO
         MACRO
&NAME    CUEXIT   &RC=(15)
         GBLB  &BG15                                 DEC 75
         LCLA  &B,&W
         LCLC  &Z
&NAME    DS 0H
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUEXIT MACRO:16/06/77'
         POP   PRINT
         L      R13,4(13)
&Z         SETC  '&RC'
.B94     AIF   ('&Z'(1,2) NE '(R').B84
&B       SETA  K'&Z-2
&Z        SETC  '&Z'(1,1).'&Z'(3,&B)
.B84     ANOP
         AIF   ('&Z' EQ '(15)').B60
         AIF   ('&Z'(1,1) EQ '(').B61
         RETURN (14,12),RC=&Z
         AGO   .B62
.B61     ANOP
&W       SETA  K'&Z-2
&Z       SETC  '&Z'(2,&W)
         LR    R15,&Z
.B60     RETURN (14,12),RC=(15)
.B62     ANOP
         MEND
SPY57    CUENTER                  SET UP BASES
         L     1,0(1)             LOAD PARM ADDRESS
         TM    112(1),X'08'       IS VM PAGING
         BNO   NOTVMPAG           NO - THEN CONTINUE
         LA    1,128(1)           GET ECB ADDRESS
         POST  (1)                LET COMMAND MODULE CONTINUE
         WTO   '** SPY PAGE MONITOR - VM IS IN CONTROL OF PAGING - **'
         B   FINT
NOTVMPAG  LA   1,128(1)            LOAD ECB ADDRESS
         POST (1)                 LET COMMAND MODULE CONTINUE
         WTO  '** SPY PAGE MONITOR NOW ACTIVE **'
         L    11,16               GET CVT
         L    8,NUMBER            LOAD NUMBER OF LOOPS
         L    11,348(11)          GET PSIA
OKAY     EQU  *
         L    10,20(11)           GET SMF STATISTICS BUFFER
         LA   9,TRACE             LOAD TRACE AREA
LOOPER   MVC  0(12,9),0(10)       MOVE STATISTICS OVER
FR       NOP  FIRST               NO OP SWITCH
         MVC  START(12),0(10)     MOVE OVER STATS TO START
         MVC  STORE(12),0(10)     MOVE OVER TO STORE
         OI   FR+1,X'F0'          HIT NO OP SWITCH
FIRST    LA   4,PAGIN             GET PAGIN COUNTER
         L    5,STORE             LOAD 5 WITH PREVIOUS SMF PAGE INS
         L    6,0(10)             LOAD LATEST PAGE IN FIGURE
         BAL  2,COMPUTE           GO AND SORT IT OUT
         L    5,STORE+4           NOW DO THE
         L    6,4(10)             SAME FOR THE
         LA   4,PAGOUT            PAGE OUTS
         BAL  2,COMPUTE           SORT IT OUT
         LA   4,RECLAIM           NOW FOR
         L    5,STORE+8           THE RECLAIMS
         L    6,8(10)             SORT THEM
         BAL  2,COMPUTE           OUT
         MVC  STORE,0(10)         MOVE LATEST STATS TO STORE
         LA   9,12(9)             UP THE AREA
TIMER    STIMER  WAIT,BINTVL=BINTVL  WAIT AROUND
         BCT  8,LOOPER            BRANCH COUNT BACK
         SH   9,=H'12'            GET BACK LAST STATS
         L    4,0(9)              LOAD PAGE INS
         A    4,TOPUP             ADD TOPUP
         S    4,START             SUBTRACT START STATS FOR PAGE INS
         ST   4,TPAGIN            STORE IN PAGE INS
         L    4,4(9)              NOW TRY PAGE OUTS
         A    4,TOPUP+4           DO THE SAME AGAIN
         S    4,START+4           SUBTRACT START
         ST   4,TPAGOUT           STORE PAGE OUTS
         L    4,8(9)              NOW DO RECLAIMS
         A    4,TOPUP+8           SAME AS BEFORE
         S    4,START+8           SUBTRACT START RECLAIMS
         ST   4,TRECLAIM          STORE
         LA   4,WTO1+21           SET UP FOR WTO
         LA   5,PAGIN             PUT OUT PAGE INS ON WTO
         BAL  2,EDIT              BY EDITING IT
         MVC  DIVIDE(4),NUMBER    SET UP DIVISOR
         LA   4,WTO2+21           NOW EDIT OUT
         LA   5,TPAGIN            THE AVERAGE PAGE INS
         BAL   2,EDIT
         WTO   '**            PAGEINS   PAGEOUTS  RECLAIMS       **'
WTO1     WTO   '** MAXIMUM                                       **'
WTO2     WTO   '** AVERAGE                                       **'
FINT     CUEXIT RC=0
COMPUTE  CR   5,6               COMPARE TWO AREAS
         BH   MINUS             IF MINUS BUFFER HAS BEEN RESET
         SR   6,5               SUBTRACT LAST FROM PRESENT
         C    6,0(4)            IS THIS HIGHEST PAGE IN FIGURE PER SEC
         BNH  EXIT              IF NOT LEAVE PREVIOUS MAX PAGE IN
         ST   6,0(4)            STORE NEW HIGHEST FIGURE
EXIT     EQU  *
         BR   2 BRANCH BACK
MINUS    SH   9,=H'12'          GO BACK
         MVC  TOPUP(12),0(9)   STORE PREVIOUS FIGURE IN TOP UP
         LA   9,12(9)           UP POINTER
         BR   2                 GET BACK
EDIT     L    6,0(5)  LOAD TOTAL FIGURE
         MH   6,=H'100'         MULT BY 100 FOR AVERAGE
         SRDA 6,32(0)  CLEAR UP REG
         D    6,DIVIDE          DIVIDE BY NUMBER OF SECS
         CVD  7,DOUBLE          CONVERT TO DEC
         MVC  1(6,4),=X'2021204B2020'  EDIT IT OUT
         ED   0(7,4),DOUBLE+5   NOW
         L   6,4(5)             NOW DO NEXT ONE
         MH  6,=H'100'          DO AS BEFORE
        SRDA   6,32(0)
         D    6,DIVIDE     AND AGAIN AND AGAIN
         CVD  7,DOUBLE                                 AND AGAIN
         MVC  11(6,4),=X'2021204B2020'
         ED   10(7,4),DOUBLE+5
         L    6,8(5)
         MH   6,=H'100'
         SRDA 6,32(0)
         D    6,DIVIDE
         CVD  7,DOUBLE
         MVC  21(6,4),=X'2021204B2020'
         ED   20(7,4),DOUBLE+5
         BR    2
UCB      DC   F'0'
START    DC  CL12' '
STORE    DC  XL12'000000000000000000000000'
NUMBER   DC   F'120'
DISK     DC   CL6'SYSRE1'
DIVIDE    DC  F'1'
HALF     DC   H'0'
         DC   H'0'
         DC   H'0'
         DS   0F
TOPUP    DC   XL12'000000000000000000000000'
BINTVL  DC   F'100'
ECB1     DC     F'0'
PAGIN   DC   F'0'
PAGOUT   DC   F'0'
RECLAIM  DC  F'0'
TPAGIN   DC   F'0'
TPAGOUT   DC   F'0'
TRECLAIM  DC  F'0'
DOUBLE   DC   D'0'
         DC   XL4'FFFFFFFF'
PARM     DC   CL4' '
TRACE    DC   150CL12' '
AREA     DC  100H'0'
         END
