*
         TITLE 'XM18 PROVIDE ENQ/DEQ FOR LE/UTILS OUTPUT DATASETS     '
XM180112 CSECT
         ENTRY XM180101            INSERT MODULE NUMBER CHANGING
XM180101 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         COPY  REGEQU
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM180112  PROGRAMMER PAUL A.DANIELSON   ASSIGNED 11/03/74 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  THIS MODULE INVOKES THE FOLLOWING IBM UTILITIES AFTER FIRST        *
*  ENQUEING ON THE OUTPUT DATASET(S).                 - IEWLF440      *
*  1. OBTAIN CORE FOR SAVE AREA AND WORK AREAS        - IEBCOPY       *
*                                                     - IEBUPDTE      *
*  2. CHAIN SAVE AREA AND SET UP LINKAGE ETC.         - IEBUPDAT      *
*                                                                     *
*  3. GET TIOT ADDRESS AND CORE FOR JFCB AND DCB                      *
*                                                                     *
*  4. CHECK DDNAME ENTRIES IN TIOT WITH TABLE OF DDNAMES. WHERE       *
*     A MATCH IS FOUND, INITIALISE DCB AND OBTAIN DSNAME USING        *
*     READJFCB. CHECK DSNAME QUEUE TO SEE IF DSNAME ALREADY ENQUEWED. *
*     GET CORE IF NOT AND QUEUE DSNAME TO DSNAME QUEUE.               *
*     ENQ ON HBSUPDTE AND RETURN TO CHECK FOR ANY MORE MATCHING TIOT  *
*     ENTRIES.                                                        *
*                                                                     *
*  5. END OF TIOT.                                                    *
*     FREE CORE OBTAINED FOR JFCB AND DCB.                            *
*     RESTORE PARAMETER POINTER - R1.                                 *
*     INVOKE APPROPRIATE PROGRAM  EITHER -  IEBCOPY                   *
*                                           IEBUPDTE                  *
*                                           IEBUPDAT                  *
*                                           IEWLF440                  *
*                                                                     *
*                                                                     *
*     SAVE RETURN CODE.                                               *
*     OBTAIN  ENQUEUED DSNAMES FROM DSNAME QUEUE AND DEQ AND FREE CORE*
*     USED FOR EACH ONE.                                              *
*                                                                     *
*  6. FREE SAVEAREA CORE ETC. RESTORE SAVE AREAS AND RETURN.          *
*                                                                     *
         SPACE 5
*                                                                     *
*  TO IMPLEMENT XM18 LINKEDIT THIS CSECT WITH THE FOLLOWING           *
*  LINKAGE EDITOR CONTROL STATEMENTS.                                 *
*                                                                     *
*        INCLUDE XYZ(XM180112)                                        *
*        ALIAS IEBCOPY,IEWL,IEBUPDTE,IEBUPDAT                         *
*                                                                     *
*  AFTER RENAMING THE FOLLOWING                                       *
*                                                                     *
*                        IEWL      TO   IEWLF440                      *
*                        IEBCOPY   TO   HEBCOPY                       *
*                        IEBUPDTE  TO   HEBUPDTE                      *
*                        IEBUPDAT  TO   HEBUPDAT                      *
*                                                                     *
*                                                                     *
*                                                                     *
*
**  AMENDMENT TO MODULE XM180112 BY PAUL ANTON DANIELSON
*
**  ASSIGNED 30/07/74, EFFECTIVE  5/ 8/74 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT S138 OCCURS WHEN IMPTFLE OR HMAPTFLE IS
*   -------------------- INVOKED VIA XM18. THIS IS BECAUSE PTFLE
*                        INVOKES IEWL (VIA XM18) CAUSING DOUBLE ENQ.
*
*                        REMOVE REFERENCES TO IMAPTFLE AND HMAPTFLE
*
*
*
*
***********************************************************************
         EJECT
         ISEQ  73,80
*
** SAVE REGISTERS, OBTAIN CORE FOR SAVE AREA AND WORK AREAS ETC.
*  -------------------------------------------------------------
         STM   R14,R12,12(R13)     SAVE REGISTERS IN HIGH SAVE AREA
         BALR  R5,R0               SET UP
         USING *,R5                      BASE REGISTER
         GETMAIN R,LV=SDDXXXL      GET REQUIRED AMOUNT OF CORE
         LR    R15,R1              GET ADDRESS OF GOTTON CORE
         L     R2,24(R13)          SAVE POINTER TO PARMS
         ST    R15,8(R13)          PUT LINK IN HSA
         ST    R13,4(R15)          PUT LINK IN LSA
         LR    R13,R15             POINT TO SAVE AREA
         USING SDDXXX,R13          ADDRESS ABILITY FOR SAVE AREA ETC.
         XC    SFD004,SFD004       ZEROISE DSNAME QUEUE LINK WORD
*
** GET ADDRESS OF TIOT
*  -------------------
         L     R3,16               CUT POINTER
         L     R3,0(R3)            TCB WORDS
         L     R3,4(R3)            CURRENT TCB
         ST    R3,SAD004           TCB ADDRESS
         L     R3,12(R3)           TIOT ADDRESS
         LA    R3,24(R3)           START OF DDNAME ENTRIES
*
** GET CORE FOR JFCB AND DCB AND SET UP CONSTANTS WITHIN
*  -----------------------------------------------------
         GETMAIN R,LV=200          GET 200 BYTES
         LR    R12,R1              START ADDRESS OF AREA
         ST    R12,176(R12)        SET EXIT LIST POINTER ADDRESS
         MVI   176(R12),X'87'      INDICATE USE AND END OF LIST
         LA    R1,176(R12)         POINT TO EXIT LIST
         ST    R1,184(R12)         STORE EXIT LIST ADDRESS IN DCBEXLST
         LA    R1,148(R12)         POINT TO START OF DCB
         ST    R1,180(R12)         SET DCB ADDRESS IN OPEN MF=L.
         MVI   180(R12),X'80'      SET OPEN MF=L.
         SR    R6,R6               ZEROISE WORK REGISTER
*
** SCAN THROUGH TIOT FOR MATCHING DDNAMES
*  --------------------------------------
BA05     EQU   *
         LA    R3,0(R3,R6)         POINT TO TIOT ENTRY
         ICM   R6,1,0(R3)          GET LENGTH OF TIOT ENTRY
         BZ    BA40                END OF TIOT
         LA    R4,CCTXXX           POINT TO DDNAME TABLE
BA10     EQU   *
         CLI   0(R4),X'00'         Q. END OF VALID DDNAMES
         BE    BA05                A. YES POINT TO NEXT ENTRY IN TIOT
         CLC   0(8,R4),4(R3)       Q. MATCHING DDNAME
         BE    BA14                A. YES - READ JFCB AND ENQ
         LA    R4,8(R4)            POINT TO NEXT DDNAME IN TABLE
         B     BA10                GO LOOK FOR A MATCH
*
BA14     EQU   *
         LH    R1,18(R3)
         LTR   R1,R1               Q. DUMMY DDSTATEMENT
         BZ    BA05                A. YES - SKIP THIS ENQ
*
** READ JFCB ENQ ON DSNAME AND BUILD UP DSNAME QUEUE
*  -------------------------------------------------
         MVC   188(8,R12),0(R4)    PUT DDNAME IN DCB
         XC    196(4,R12),196(R12) CLEAR OPENFLGS AND EXCP
         MVI   196(R12),X'02'      SET OFF LOCKBIT
         RDJFCB MF=(E,180(R12))    READ JFCB TO GET DSNAME
         LA    R7,43(R12)          POINT TO END OF DSNAME
         LA    R8,44               MAXIMUM DSNAME LENGTH
BA15     EQU   *
         CLI   0(R7),X'40'         Q. BLANK AT END OF DSNAME
         BNE   BA16                A. NO - GO ENQ ETC.
         BCTR  R8,R0               SUBTRACT 1 FROM DSNAME LENGTH
         BCT   R7,BA15             POINT TO PREVIOUS BYTE
*
         ABEND 92,DUMP             BLANK DSNAME - ABEND
*
BA16     EQU   *
         L     R11,SFD004          GET START OF DSNAME Q ADDRESS
         SR    R10,R10             ZEROISE WORK REGISTER
BA17     EQU   *
         LTR   R11,R11             Q. END OF QUEUE
         BZ    BA18                A. YES - GO QUEUE NEXT ELEMENT
         IC    R10,4(R11)          GET DSNAME LENGTH
         BCTR  R10,R0              SUBTRACT 1 FOR EX INSTRUCTION
         EX    R10,EX01   ** CLC  5(L,R11),0(R12) Q. ALREADY QUEUED
         BE    BA05                               A. YES SKIP ENQ
         L     R11,0(R11)          POINT TO DSNAME QUEUE ELEMENT
         B     BA17                KEEP LOOKING
*
** ENQ ON DATA SET AND PUT AN ENTRY ON DSNAME QUEUE
*  ------------------------------------------------
BA18     EQU   *
         STC   R8,ENQLEN           PUT LENGTH IN LIST FORM OF ENQ
         ST    R12,ENQNAME         STORE ADDRESS OF DSNAME
         ENQ   MF=(E,ENQMODEL)     ENQ ON DSNAME
*
         LA    R0,5(R8)            GET LENGTH OF QUEUE ELEMENT REQUIRED
         GETMAIN R,LV=(R0)         GET CORE FOR DSNAME QUEUE ELEMENT
         STC   R8,4(R1)            PUT LENGTH IN ELEMENT
         BCTR  R8,R0               SUBTRACT 1 FOR EXECUTED MOVE
         EX    R8,EX02     ** MVC 5(L,R1),0(R12)  MOVE IN DSNAME
         L     R11,SFD004          END OF CHAIN ADDRESS
         ST    R11,0(R1)           CHAIN NEXT ELEMENT
         ST    R1,SFD004           POINT TO END OF CHAIN
         B     BA05                GO CONTINUE TIOT SCAN
*
** END OF TIOT ENTRIES. FREE GOTTON CORE ETC.
*  ------------------------------------------
BA40     EQU   *
         FREEMAIN R,LV=200,A=(R12)      RELEASE JFCB/DCB CORE
         LR    R1,R2               RESTORE POINTER TO PARMS
*
         LA    R15,CCTXXXN         POINT TO PROGRAM NAME TABLE
         L     R14,SAD004          ADDRESS OF TCB
         L     R14,0(R14)          PRB ADDRESS
BA42     EQU   *
         CLC   0(8,R15),0(R14)     Q. PROGRAM NAME MATCH
         BE    BA45                A. YES - INVOKE APPROPRIATE PROGRAM
         LA    R15,16(R15)         POINT TO NEXT NAME IN TABLE
         CLI   0(R15),X'00'        Q. END OF TABLE (SHOULD NEVER HAPPEN
         BNE   BA42                A. NO - KEEP LOOKING    -----
*
         ABEND 93,DUMP             ABEND
*
BA45     EQU   *
         LA    R14,8(R15)          POINT TO CORRESPONDING NAME
         LINK  EPLOC=(R14)         INVOKE APPROPRIATE PROGRAM
*
*
         LR    R2,R15              SAVE RETURN CODE
*
** FREE CORE AND DEQ DSNAMES
*  -------------------------
         L     R11,SFD004          GET START ADDRESS OF DSNAME QUEUE
         SR    R10,R10             ZEROISE WORK REGISTER
BA50     EQU   *
         LTR   R11,R11             Q. END OF QUEUE
         BZ    BA60                A. YES - GO CHECK RC IF IEBCOPY
         IC    R10,4(R11)          GET DSNAME LENGTH
         STC   R10,ENQLEN          PUT LENGTH IN LIST FORM ENQ/DEQ
         LA    R1,5(R11)           POINT TO DSNAME
         ST    R1,ENQNAME          STORE IN ENQ/DEQ MODEL
*
         DEQ   MF=(E,ENQMODEL)     DEQ DSNAME
         LR    R1,R11              ADDRESS OF ELEMENT TO BE FREED
         L     R11,0(R11)          GET ADDRESS OF NEXT ELEMENT
*
         LA    R10,5(R10)          GET LENGTH OF ELEMENT
         FREEMAIN R,LV=(R10),A=(R1)
         B     BA50                LOOP TO END OF QUEUE
*
** CHECK RETURN CODE IF IEBCOPY
*  ----------------------------
BA60     EQU   *
         L     R14,SAD004          GET TCB ADDRESS
         L     R14,0(R14)          GET PRB ADDRESS
         CLC   0(8,R14),CCTXXXN    Q. IS THIS IEBCOPY
         BNE   BA70                A. NO - SKIP RETURN CODE CHECKING
         CLM   R2,1,=X'04'         Q. IS RETURN CODE GREATER THAN 4
         BNH   BA70                A. NO - RETURN NORMALLY
*
         ABEND 99,DUMP             BRING TO OPERATOR'S ATTENTION
*
** FREE SAVE AREA ETC
*  ------------------
BA70     EQU   *
         L     R15,4(R13)          ADDRESS OF HSA
         FREEMAIN R,LV=SDDXXXL,A=(R13)  FREE SAVE AREA CORE
         LR    R13,R15             RESTORE ADDRESS OF HSA
         LR    R15,R2              SET RETURN CODE
         L     R14,12(R13)         SET RETURN ADDRESS
         LM    R0,R12,20(R13)      RESTORE REGISTERS
         BR    R14                 RETURN
*
         EJECT
*
** STORAGE AREAS DSECTS ETC.
*  -------------------------
CCTXXX   DC    C'SYSLMOD '         LINK EDITOR - PTFLE
         DC    C'SYSUT2  '         IEBCOPY - IEBUPDTE - IEBUPDAT
         DC    C'D1      '         IEBCOPY
         DC    C'OUT     '         IEBCOPY
         DC    C'LINKLIB '         IEBCOPY
         DC    C'LOADLIB '         IEBCOPY
         DC    C'TPLIB1  '         IEBCOPY
         DC    C'TPLIB2  '         IEBCOPY
         DC    X'00'               END OF DDNAME TABLE
*
ENQMODEL ENQ   (QNAME,0,E,0,SYSTEM),MF=L LIST FORM OF ENQ/DEQ
ENQLEN   EQU   ENQMODEL+1
ENQNAME  EQU   ENQMODEL+8
QNAME    DC    CL8'HBSUPDTE'       HBS MAJOR QUEUE NAME
*
** EXECUTED INSTRUCTIONS
*  ---------------------
EX01     CLC   5(0,R11),0(R12)     Q. ALREADY ON QUEUE
*
EX02     MVC   5(0,R1),0(R12)      MOVE IN DSNAME
*
** DSECT  FOLLOWS
*  --------------
SDDXXX   DSECT
         DS    9D                  SAVE AREA
SFD004   DS    F                   LINK FOR DSNAME QUEUE
SAD004   DS    F                   TCB ADDRESS
SDDXXXL  EQU   *-SDDXXX            LENGTH OF DSECT
XM180112 CSECT                     RESUME CSECT
CCTXXXN  DC    CL8'IEBCOPY',CL8'HEBCOPY'
         DC    CL8'IEWL',CL8'IEWLF440'
         DC    CL8'IEBUPDTE',CL8'HEBUPDTE'
         DC    CL8'IEBUPDAT',CL8'HEBUPDAT'
         DC    X'0'                END OF PROGRAM NAME TABLE
         LTORG
         END
