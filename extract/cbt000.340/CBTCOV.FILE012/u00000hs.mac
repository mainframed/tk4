KORAN    CSECT
         TITLE 'KORAN  VERSION  1  D.SIMMONS  TSG  28 APR 69'
*********KORAN IS A PROGRAM WHICH PROVIDES THE USER WITH A MAP OF
*        HIS STORE USAGE AT ANY TIME.  IT RESIDES IN LINKLIB, AND IS
*        INVOKED THROUGH THE 'LINK' MACRO INSTRUCTION IN THE ASSEMBLER
*        LANGUAGE,OR VIA A CALL FROM HIGHER LEVEL LANGUAGES.
*
*
*
*********KORAN PROVIDES A LIST OF ACTIVE REQUEST BLOCKS, AND OF LOADED
*        REQUEST BLOCKS.  IT SCANS THE DEB CHAIN FOR OPEN DCBS AND
*        GIVES BUFFER AND ACCESS METHOD INFORMATION.
*        IT LISTS FREE AREAS, COMPUTES TIOT SIZE, AND CALCULATES THE
*        TOTAL CORE IN USE BY THE USER PROGRAM AT THE TIME IT IS
*        CALLED, ESTIMATING THE PARTITION THE USER PROGRAM WOULD
*        REQUIRE TO RUN.
*
*
*
*********KORAN IS INVOKED DYNAMICALLY BY THE MACRO INSTRUCTION 'LINK'
*        LINK  EP=KORAN
*        OR BY ISSUING A CALL IN PL1-- CALL KORAN
*        IN EITHER CASE THE USER PROGRAM REGAINS CONTROL ON
*        TERMINATION OF THE ANALYSIS.
*        IN ORDER TO SIMPLIFY THE USE OF KORAN FOR PL/1 PROGRAMMERS
*        IT CAN BE RECORDED IN PL1LIB FOR 'CALL KORAN'
*
*
*
*********THE PROGRAM RUNS UNDER STANDARD OS SYSTEMS AND REQUIRES THE
*        USER TO SUPPLY A DD CARD WITH DDNAME SYSKORAN TO HOLD THE
*        SEQUENTIAL DATA SET WHICH PRODUCES THE ANALYSIS LISTING.
*
*
*
*********OUTPUT  ADDRESSES ARE IN HEXADECIMAL
*                ALL OTHER NUMBERS ARE IN DECIMAL
*        '*' IN THE FREE AREA LIST IS THE AREA IN USE BY KORAN
*
*
*
*********IT IS POSSIBLE TO FURTHER ANALYSE THE LOAD LIST TO DISCOVER
*        IF THE LOADED MODULE IS IDENTIFIED BY, OR MAKES USE OF, THE
*        'IDENTIFY' MACRO INSTRUCTION
*
*
*  NOTE THAT 'R' PRECEDING ACCESS METHOD MODULE NAME SIGNIFIES THAT
*  IT IS CURRENTLY RESIDENT.  THE LENGTH OF THIS MODULE IS NOT
*  INCLUDED IN THE CURRENT REQUIREMENT FOR PARTITION SIZE.
*
*  JCL REQUIRED FOR THIS MODULE, IN ADDITION TO THE JCL FOR THE PROGRAM
*  WHICH INVOKES IT, IS ONE CARD ONLY......*
*              //SYSKORAN DD SYSOUT=CLASS
         EJECT
*
*        INITIALISATION ROUTINE
*
*        BEGIN
*  EXPANSION OF RESPOND TSG MACRO
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
         CNOP  0,4
         BAL   15,*+76
         DC    18F'0'
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
*  END OF MACRO EXPANSION
         MVI   SW,X'00'
         BUILD KORBUF,2,121
         OPEN  (PRINT,OUTPUT)      KORAN SEQUENTIAL OUTPUT DATA SET
         USING RLFD,R5             R5-> BUFFER AREA FOR KORAN OUTPUT
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'       CLEAR PRINT LINE
         MVC   RLFCB+2(119),RLFCB+1
         MVI   RLFCB,C'1'
         MVC   RLFCB+40(40),T1     TITLE LINE
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
*
**
***      THIS SECTION SETS UP POINTERS TO TCB, ACTIVE RB LIST,
***      LOAD LIST, DEBS, TIOT, AND BOUNDARY BOX
**
*
         L     R1,16               R1->CVT
         MVC   PPINF,128(R1)       LOWEST NON-NUCLEAR ADDRESS
         MVC   CVTMZ00,164(R1)     HIGHEST ADDRESS IN MACHINE
         L     R1,0(R1)            R1-> TCB POINTERS
         L     R1,4(R1)            R1->CURRENT TCB
         ST    R1,TCB              TCB=CURRENT TCB
         L     R2,0(R1)
         ST    R2,TCBRBF           TCBRBF=MOST RECENT ACTIVE RB
         L     R2,8(R1)
         ST    R2,TCBDEB           TCBDEB=DEB QUEUE
         L     R2,12(R1)
         ST    R2,TCBTIO           TCBTIO=TIOT
         L     R2,24(R1)
         ST    R2,TCBMSS           TCBMSS=BOUNDARY BOX
         L     R2,36(R1)
         ST    R2,TCBLLS           TCBLLS=RB LOAD LIST
*
**
***      THE P1 SECTION DEALS WITH INFORMATION FROM THE CHAIN OF
***      ACTIVE REQUEST BLOCKS
***      WHEN THE RB FOR KORAN ITSELF IS FOUND, RELEVANT INFORMATION
***      IS STORED FOR LATER INCLUSION IN THE FREE AREA LIST (P4)
**
*
P1       MVC   RLFCB+3(60),T2      SET UP TITLES
         MVI   RLFCB,C'-'
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         MVC   RLFCB+6(66),T3
         MVI   RLFCB,C'0'
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         MVI   RLFCB,C'0'
         L     R2,TCBRBF
         LR    R1,R2
         B     P1PROC
P1LOOP   L     R1,28(R1)           R1->NEXT RB ON CHAIN OR TCB
         LR    R2,R1
P1PROC   LA    R2,0(R2)
         C     R2,TCB              IS THIS THE LAST ACTIVE RB
         BE    P2                  IF SO GO TO NEXT CALC
         MVC   RLNAME(8),0(R2)     SET UP NAME FIELD
         L     R2,8(R2)
         ST    R2,XRBSZ
         CLC   RLNAME(8),CKORAN    IS THIS THE RB FOR KORAN
         BNE   P1ON
         MVC   KSIZE,XRBSZ
         ST    R1,KADDR
         B     P1LOOP              IF SO IGNORE
P1ON     TM    XSTAB,X'E0'
         BZ    PRB
         TM    XSTAB,X'D0'         IS IT AN SVRB TYPE 3 OR 4
         BO    SVRB34
         TM    XSTAB,X'C0'         IS IT AN SVRB TYPE 2
         BO    SVRB2
         TM    XSTAB,X'80'         IS IT AN SIRB
         BO    SIRB
         TM    XSTAB,X'40'         IS IT AN IRB
         BO    IRB
         MVC   RLFCB+2(20),ERROR1
         LR    R2,R1
         PUT   PRINT
         LR    R5,R1
         LR    R1,R2
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         B     P2
PRB      MVC   RLTYPE(3),PRBC
         B     NEXT1
SVRB2    MVC   RLTYPE(6),SVRB2C
         B     NEXT1
SVRB34   MVC   RLTYPE(8),SVRB34C
         B     NEXT1
IRB      MVC   RLTYPE(3),IRBC
         B     NEXT1
SIRB     MVC   RLTYPE(4),SIRBC
NEXT1    BAL   R8,HEXADDRP
         MVC   RLFADDR(6),DOUBLE+1 ADDRESS ROUTINE GIVES ADDR OF RB
         LH    R3,XRBSZ            S9ZE OF RB
         SLL   R3,3                SIZE IN BYTES
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLFLEN(8),DOUBLE+4(4)
         LR    R2,R1               PRESERVE RB POINTER
         PUT   PRINT
         LR    R5,R1
         LR    R1,R2               RESTORE  RB POINTER
         MVI   RLFCB+1,X'40'       CLEAR PRINT LINE
         MVC   RLFCB+2(119),RLFCB+1
         B     P1LOOP
*
**
***      THE P2 SECTION DEALS WITH INFORMATION FROM THE LOAD LIST
***      CHAIN
**
*
P2       MVC   RLFCB+3(60),T4      SET UP TITLE LINES
         MVI   RLFCB,C'-'
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         MVC   RLFCB+6(66),T3
         MVI   RLFCB,C'0'
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         MVI   RLFCB,C'0'
         L     R2,TCBLLS           R2 CONTAINS ADDR OF LOAD LIST
         LR    R1,R2
         B     P2PROC
P2LOOP   L     R1,0(R1)
         LR    R2,R1
P2PROC   LA    R2,0(R2)
         C     R2,F0               IS THIS TH E LAST LRB
         BE    P3
         MVC   RLNAME(8),8(R2)     PROGRAM NAME
         L     R2,16(R2)
         ST    R2,XRBSZ            SIZE OF RB
         TM    XSTAB,X'20'
         BO    P2RBTST
         MVC   RLFCB+2(20),ERROR2      THIS IS NOT AN LRB
         LR    R2,R1
         PUT   PRINT
         LR    R5,R1
         LR    R1,R2
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
P2RBTST  TM    XSTAB,X'C'
         BO    LRB
LPRB     MVC   RLTYPE(4),CLPRB
         B     NEXT2
LRB      MVC   RLTYPE(3),CLRB
NEXT2    BAL   R8,HEXADDRP
         MVC   RLFADDR(6),DOUBLE+1
         LH    R3,XRBSZ            DOUBLE WORD SIZE
         SLL   R3,3
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLFLEN(8),DOUBLE+4(4)
         LR    R2,R1
         PUT   PRINT
         LR    R5,R1
         LR    R1,R2
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         B     P2LOOP
         USING BD,R5
*
**
***      THE P3 SECTION DEALS WITH DCB INFORMATION,
***      IT COLLECTS AND RECORDS BUFFER INFORMATION, AND THE LOCATION
***      LENGTHS, AND NAMES OF ACCESS METHOD MODULES IN USE.
***      'R' BEFORE THE LENGTH FIELD INDICATES THAT THE MODULE
***      CONCERNED IS RESIDENT WITHIN THE NUCLEUS
**
*
P3       MVC   BCB+3(113),T5       SET UP TITLE FIELDS
         MVI   BCB,C'-'
         PUT   PRINT
         LR    R5,R1
         MVI   BCB+1,X'40'
         MVC   BCB+2(119),BCB+1
         MVC   BCB+6(113),T6
         MVI   BCB,C'0'
         PUT   PRINT
         LR    R5,R1
         MVI   BCB+1,X'40'
         MVC   BCB+2(119),BCB+1
         L     R2,TCBDEB           R2-> DEB QUEUE
         LR    R1,R2
         B     P3PROC
P3LOOP   L     R1,4(R1)            R1-> NEXT DEB
         LR    R2,R1
P3PROC   LA    R2,0(R2)
         C     R2,F0               IS THIS THE LAST DEB
         BE    P4
         L     R2,24(R2)           R2-> DCB
         TM    48(R2),X'10'        IS THIS DCB OPEN?
         BZ    P3LOOP              IF NOT IGNORE
         LH    R3,40(R2)           R3 CONTAINS TIOT OFFSET
         A     R3,TCBTIO           R3->DDENTRY
         MVC   BNAME(8),4(R3)
         CLC   BNAME(8),SYSKORAN
         BE    P3LOOP              IGNORE KORAN DD ENTRY
         SR    R3,R3
         IC    R3,20(R2)
         LTR   R3,R3               IS BUFNO FIELD PRESENT?
         BNZ   P3BUFNO
         LA    R3,2                IF NOT DEFAULT 2 APPLIES
P3BUFNO  CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  BBUFNO(6),DOUBLE+6(2)
         LH    R3,24(R2)
         LTR   R3,R3               IS BUFL FIELD ZERO
         BNZ   P3BUFL
         LH    R3,62(R2)           IF SO PICK UP BLKSIZE INSTEAD
P3BUFL   CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  BBUFL(8),DOUBLE+4(4)
         MVC   DSORG(2),26(R2)
         MVC   MACRF(2),42(R2)     SET UP DSORG AND MACRF FIELDS
         TM    DSORG,X'10'         IS IT BTAM
         BO    BTAM
         TM    DSORG,X'04'         IS IT QTAM
         BO    QTAM
         TM    DSORG,X'80'         IS IT INDEXED SEQ
         BO    IS
         TM    MACRF,X'80'         IS IT EXCP
         BO    EXCP
         TM    MACRF+1,X'80'
         BO    EXCP
         TM    DSORG,X'40'         IS IT PHYSICAL SEQ
         BO    PS
         TM    DSORG,X'20'         IS ITDIRECT ACCESS
         BO    DA
         TM    DSORG,X'02'         IS IT A PDS
         BO    PO
IS       TM    MACRF,X'20'         B1SIC ACCESS
         BO    BISAM
         TM    MACRF+1,X'20'       TEST ON OUTPUT BYTE
         BO    BISAM
QISAM    MVC   BMETH(5),CQISAM
ISAMODS  BAL   R11,M108
         BAL   R11,M92
         BAL   R11,M88
         BAL   R11,M76
         B     M48
BISAM    MVC   BMETH(5),CBISAM
         B     ISAMODS
PS       TM    MACRF,X'20'         BASIC ACCESS
         BO    BSAM
         TM    MACRF+1,X'20'
         BO    BSAM
QSAM     MVC   BMETH(4),CQSAM
         BAL   R11,M92
         BAL   R11,M84
         B     M48
BSAM     MVC   BMETH(4),CBSAM
         B     M72
PO       MVC   BMETH(4),CBPAM
         BAL   R11,M76
         B     M72
DA       MVC   BMETH(4),CBDAM
         BAL   R11,M100
         BAL   R11,M92
         BAL   R11,M88
         B     M52
BTAM     TM    MACRF,X'20'         BASIC ACCESS
         BZ    QTAM
         TM    MACRF+1,X'20'       TEST ON OUTPUT BYTE
         BZ    QTAM
         MVC   BMETH(4),CBTAM
         B     M48
QTAM     MVC   BMETH(4),CQTAM
         B     M48
EXCP     MVC   BMETH(4),CEXCP
         BAL   R7,MODSET
         B     P3LOOP
M108     L     R3,108(R2)          R -> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
M104     L     R3,104(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M92      L     R3,92(R2)          R3 > ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M88      L     R3,88(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M76      L     R3,76(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M84      L     R3,84(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M100     L     R3,100(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M96      L     R3,96(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         BR    R11
M72      L     R3,72(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
M52      L     R3,52(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
M48      L     R3,48(R2)          R3-> ENTRY POINT OF MODULE
         BAL   R7,MODFIND
         B     P3LOOP
*        ACCESS METHOD MODULE ROUTINE
MODFIND  LA    R3,0(R3)
         C     R3,F0
         BE    MODSET
         C     R3,F1
         BE    MODSET
         S     R3,F32              R3-> START OF LRB ?
         C     R3,CVTMZ00          IS THIS A VALID ADDRESS
         BH    0(R7)               IF NOT IGNORE THIS FIELD
         CLC   0(R3,3),IGG
         BNE   MODAD
         MVC   BMODS(8),0(R3)      NAME OF ACCESS MODULE
         B     MODPRIN
MODAD    LA    R3,16(R3)           R3-> START OF LRB ?
         CLC   0(R3,3),IGG
         BNE   MODSET              I5VALID NAME FOUND
         MVC   BMODS(8),0(R3)
MODPRIN  LA    R3,0(R3)
         C     R3,PPINF            IS MODULE RESIDENT
         BH    MODL
         MVI   BLEN,C'R'
MODL     LH    R3,8(R3)            PICK UP RB SIZE
         SLL   R3,3                CONVERT TO BYTES
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  BLEN+1(8),DOUBLE+4(4)
         MVI   BCB,C' '
MODSET   ST    R1,R1P3             PRESERVE R1
         PUT   PRINT
         LR    R5,R1               BUFFER POINTER
         L     R1,R1P3             RESTORE DEB POINTER
MODOUT   MVI   BCB+1,X'40'
         MVC   BCB+2(119),BCB+1
         BR    R7
         USING RLFD,R5
*
**
***      THE P4 SECTION OBTAINS THE ADDRESSES AND LENGTHS OF
***      FREE AREAS.       '*' INDICATES THAT THE CORRESPONDING ENTRY
***      IS IN FACT THE KORAN RB
**
*
P4       MVC   RLFCB+6(64),T7
         MVI   RLFCB+71,X'40'               MAKE SURE LINE IS CLEAR
         MVC   RLFCB+72(48),RLFCB+71        TO THE END
         SR    R4,R4
         MVI   RLFCB,C'-'
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
         L     R2,TCBMSS
         L     R2,0(R2)
         ST    R2,FREEADR
         LR    R1,R2
         B     P4PROC
P4LOOP   L     R1,0(R1)
         LR    R2,R1
P4PROC   LA    R2,0(R2)
         C     R2,F0               IS THIS THE LAST FQE
         BE    P4ADDN
         C     R2,FREEADR          IS THIS THE LOWEST ADDR FQE?
         BNL   P4FREE
         ST    R2,FREEADR
P4FREE   BAL   R8,HEXADDRP
         MVC   RLFADDR(6),DOUBLE+1 SET UP ADDRESS FIELD
         TM    SW,X'02'            IS THIS THE KORAN RB?
         BO    P4CALC
         L     R3,4(R2)
P4CALC   AR    R4,R3               INCREMENT TOTAL FREE AREA COUNT R4
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLFLEN(8),DOUBLE+4(4)
         MVI   RLFCB,C'0'
         LR    R2,R1               PRESERVE FQE POINTER
         PUT   PRINT
         LR    R5,R1               BUFFER POINTER
         LR    R1,R2               RESTORE FQE POINTER
         MVI   RLFCB+1,X'40'       CLEAR PRINT LINE
         MVC   RLFCB+2(119),RLFCB+1
         TM    SW,X'02'
         BNO   P4LOOP
         B     P5
P4ADDN   L     R1,KADDR
         LH    R3,KSIZE
         SLL   R3,3                CONVERT TO BYTES
         MVI   RLTYPE,C'*'
         OI    SW,X'02'
         LTR   R1,R1               WAS KORAN 'LINKED'
         BZ    P4CALC              OR CALLED
         B     P4FREE
**
***      THE P5 SECTION OBTAINS THE TIOT LENGTH, AND ADJUSTS IT
***      TO TO REMOVE 16 BYTES ASSOCIATED WITH THE KORAN OUTPUT
***      DATA SET
**
*
P5       MVC   RLFCB+6(34),T8
         LA    R4,16(R4)           ALLOW FOR KORAN TIOT ENTRY
         ST    R4,FREESIZE
         L     R7,TCBTIO
         LA    R7,24(R7)
         SR    R2,R2
TIOLOOP  IC    R2,0(R7)
         LTR   R2,R2
         BZ    TOTIOT
         AR    R7,R2               INCREMENT BY LENGTH OF DD
         B     TIOLOOP
TOTIOT   S     R7,F16              LENGTH OF USER TIOT
         S     R7,TCBTIO
         CVD   R7,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLTYPE(6),DOUBLE+4(4)   SET UP LENGTH OF TIOT FIELD
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
*
**
***      THE P6 SECTION COMPUTES THE TOTAL CORE IN USE BY THE
***      USER PROGRAM . (THIS EXCLUDES CORE IN USE BY KORAN)
**
*
P6       MVC   RLFCB+6(58),T10
         L     R2,TCBMSS           R2-> BOUNDARY BOX
         L     R3,8(R2)            HIGH BOUNDARY
         S     R3,4(R2)            PARTITION SIZE
         ST    R3,PSIZE
         S     R3,FREESIZE         TOTAL CORE IN USE BY USER
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLFADDR(6),DOUBLE+4(4)
         PUT   PRINT
         LR    R5,R1
         MVI   RLFCB+1,X'40'
         MVC   RLFCB+2(119),RLFCB+1
*
**
***      THE P7 SECTION COMPUTES THE SIZE OF PARTITION REQUIRED
***      TO RUN THE PROGRAM, ROUNDED TO THE NEXT HIGHEST 2K BOUNDARY
**
*
P7       MVC   RLFCB+6(58),T11
         MVI   RLFCB,C'-'
         L     R2,FREEADR
         L     R3,PSIZE
         S     R3,4(R2)
         LH    R4,KSIZE
         SLL   R4,3                CONVERT TO BYTES
         SR    R3,R4
         SRL   R3,11               CONVERT TO K VALUE
         LA    R3,1(R3)
         SLL   R3,1
         CVD   R3,DOUBLE
         OI    DOUBLE+7,X'0F'
         UNPK  RLFADDR+3(3),DOUBLE+4(4)
         B     FIN
*        HEX CONVERTION ROUTINE
HEXADDRP ST    R1,ADDR
         UNPK  DOUBLE,ADDR+1(4)
         TR    DOUBLE+1(6),TRTAB   CONVERT TO HEX CHARACTERS
         BR    R8
FIN      CLOSE (PRINT)
*        GOBACK
*  EXPANSION OF RESPOND TSG MACRO
         L     13,4(13)
         LM    14,12,12(13)
         MVI   12(13),255
         LA    15,0
         BR    14
*  END OF MACRO EXPANSION
PRINT    DCB   DSORG=PS,RECFM=FA,MACRF=PL,BLKSIZE=121,DDNAME=SYSKORAN, *
               BUFNO=2,BUFCB=KORBUF
*        CONSTANTS AND EQUATES
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
F32      DC    F'32'
F240     DC    F'240'
F16      DC    F'16'
F1       DC    F'1'
F0       DC    F'0'
TRTAB    EQU   *-240
TRLIST   DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
*        ALLOCATED STORAGE
DOUBLE   DS    D
PSIZE    DS    F
FREEADR  DS    F
FREESIZE DS    F
R1P3     DS    F
MACRF    DS    H
DSORG    DS    H
PPINF    DS    F
CVTMZ00  DS    F
ADDR     DC    F'0'
TCB      DS    F
TCBRBF   DS    F
TCBDEB   DS    F
TCBTIO   DS    F
TCBMSS   DS    F
TCBLLS   DS    F
KADDR    DC    F'0'
XRBSZ    DS    H
XSTAB    DS    H
KSIZE    DC    H'408'
SW       DS    C
PRBC     DC    C'PRB'
IRBC     DC    C'IRB'
SIRBC    DC    C'SIRB'
SVRB2C   DC    C'SVRB 2'
SVRB34C  DC    C'SVRB 3/4'
ERROR1   DC    C'INVALID RB TYPE     '
ERROR2   DC    C'INVALID CODE FOR LRB'
CLRB     DC    C'LRB'
CLPRB    DC    C'LPRB'
         DS    0D
KORBUF   DS    CL250
T1       DC    C'RESPOND      TSG      CORE      ANALYSIS'
T2       DC    C'PROGRAM     AREAS     FOR     ACTIVE     REQUEST     B*
               LOCKS '
T3       DC    C'NAME                TYPE                ADDRESS       *
                   LENGTH  '
T4       DC    C'PROGRAM     AREAS     FOR     LOAD      LIST      ENTR*
               IES    '
T5       DC    C'BUFFER        AREAS        AND        ASSOCIATED      *
                 MODULES        FOR        EACH        OPEN        DCB *
                  '
T6       DC    C'DDNAME              BUFL                BUFNO         %
                   LENGTH              METHOD            MODULE NAMES  *
                  '
T7       DC    C'FREE AREAS                              ADDRESS       *
                   LENGTH'
T8       DC    C'TIOT =                       BYTES'
T10      DC    C'TOTAL IN USE BY USER PROGRAM=                        BY
               YTES'
T11      DC    C'PARTITION REQUIRED=                            K     B*
               YTES'
SYSKORAN DC    C'SYSKORAN'
CKORAN   DC    C'KORAN   '
IGG      DC    C'IGG'
CBSAM    DC    C'BSAM'
CQSAM    DC    C'QSAM'
CBISAM   DC    C'BISAM'
CQISAM   DC    C'QISAM'
CBDAM    DC    C'BDAM'
CEXCP    DC    C'EXCP'
CBPAM    DC    C'BPAM'
CBTAM    DC    C'BTAM'
CQTAM    DC    C'QTAM'
BD       DSECT
BCB      DS    C
         DS    6C
BNAME    DS    CL8
         DS    12C
BBUFL    DS    CL8
         DS    12C
BBUFNO   DS    CL6
         DS    12C
BLEN     DS    CL8
         DS    12C
BMETH    DS    CL6
         DS    12C
BMODS    DS    CL8
         DS    10C
RLFD     DSECT
RLFCB    DS    C
         DS    6C
RLNAME   DS    CL8
         DS    12C
RLTYPE   DS    CL8
         DS    12C
RLFADDR  DS    CL6
         DS    12C
RLFLEN   DS    CL8
         DS    47C
         END
