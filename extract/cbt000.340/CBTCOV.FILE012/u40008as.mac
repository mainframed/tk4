ZSYN     TITLE 'Z9953  SYNAD ROUTINE FOR MAG TAPE I/O ERROR. V3.0'
Z9953    CSECT
         USING *,RBAS
         USING *,15
         USING IHADCB,1
         SPACE 1
         BCR   0,14
SYNESW   EQU   *-1
         OI    SYNESW,X'F0'   SET LOCKOUT SWITCH
         NI    DCBEROPT,X'1F'
         OI    DCBEROPT,X'20'  SET EROPT=ABE
         STM   0,15,SYNSAVE2  SAVE REGISTERS
         CNOP  0,4
         BAL   13,SYNE0020    LOAD S/A ADDRESS
SYNSAVE1 DC    18F'0'
SYNSAVE2 DC    16F'0'      S/A FOR I/O ROUTINE REGS
SYNE0020 LR    RBAS,15       LOAD MODULE BASE REGISTER
         DROP  15
         LR    RDCB,1        LOAD DCB BASE REGISTER
         USING IHADCB,RDCB
         SPACE 1
* GENERAL REGISTER DEFINITION
RWK1     EQU   2
RWK2     EQU   3
RIDP     EQU   4              POINTER ALONG ID-LIST
RBFN     EQU   5              END OF BUFFER ADDRESS
RCCW     EQU   6              CCW ADDRESS
RECD     EQU   7              RECORD ADDRESS
RECL     EQU   8              LOGICAL RECORD LENGTH
RLNK     EQU   9              INTERNAL LINK REGISTER
RDCB     EQU   10             DCB ADDRESS
RBAS     EQU   11             BASE REGISTER
         EJECT
         L     15,DCBDEBAD              R15=A(DEB)
         L     15,32(15)                R15 =A(UCB)
         MVC   UNIT,13(15)              MOVE UNIT NUMBER INTO MSG
         MVC   VOLUME,28(15)            MOVE VOL. SER. INTO MESSAGE.
         SPACE 3
*
* ENSURE THAT THE CIRCUMSTANCES ARE VALID,
*  I.E. - QSAM ON 2400 SERIES TAPE
         SPACE 1
         CLI   DCBDEVT,X'81'  TEST FOR 2400 SERIES
         BNE   SYNX0010
         TM    DCBMACRF,X'20' TEST FOR QSAM
         BO    SYNX0010
         TM    DCBMACRF+1,X'20'
         BZ    SYNX0020
SYNX0010 MVC   ZSYN01(2),SHORT01        MESSAGE- 'I/O ERROR UUU'
         LA    1,ZSYN01
         SVC   35
         WTO   'ZSYN05  CANNOT PROCESS-ABEND'
         B     SYNEXIT
*                                       DCBEROPT=ABE,SO RETURN
*                                       WILL CAUSE SYSTEM 001
         SPACE 1
SYNX0020 EQU   *
         L     RWK1,DCBBLKCT
         CVD   RWK1,DWORD
         MVC   BLOCKNO,=X'4020202020202120'
         ED    BLOCKNO,DWORD+4
         SPACE 3
* LOOK FOR AN IDLIST IN DCB
         LA    RIDP,DCBIDLIS
         CLI   0(RIDP),C'/'   IS P.P. IDLIST O.K.
         BE    SYNX0030       YES
         LH    0,DCBLRECL     /
         SH    0,=H'8'        /
         STH   0,SYNIDL01     /
         LA    RIDP,SYNIDLIS  / SET UP OWN IDLIST
SYNX0030 ST    RIDP,SYNIDL00
         SPACE 2
* NOW START LOOKING FOR RECORDS TO PRINT
* FIRST, PICK UP ADDRESS OF CCW'S
         SR    RCCW,RCCW
         IC    RCCW,SYNSAVE2  OFFSET FROM GPR.0 BITS 0-7
         A     RCCW,SYNSAVE2  ADDRESS FROM BITS 8-31
         N     RCCW,SYNADMSK
SYNX0031 CLI   0(RCCW),1      WRITE COMMAND
         BE    SYNX0040       YES, THERE SHOULD BE DATA
         CLI   0(RCCW),2      READ FORWARDS COMMAND
         BE    SYNX0040       YES, THERE SHOULD BE DATA
         CLI   0(RCCW),12     READ BACKWARDS
         BE    SYNX0040       YES, THERE SHOULD BE DATA
SYNX0032 TM    4(RCCW),B'11000000' CHECK FOR CHAINING
         BZ    SYNX0050      NO MORE COMMANDS
         LA    RCCW,8(0,RCCW) MORE, INCREMENT
         B     SYNX0031       AND GO BACK
* THIS CCW POINTS TO DATA,COMPUTE START AND ADDRESS
SYNX0040 LH    RECD,6(0,RCCW) RESIDUAL COUNT
         SH    RECD,DCBBLKSI  VIRTUAL ORIGIN
         A     RECD,0(0,RCCW) TRUE START ADDRESS
         LA    RECD,0(0,RECD) CLEAR BITS 0-7.
         TM    DCBRECFM,X'10'      FIND BLOCK LENGTH.
         BO    BLOCKED             FOR UNBLOCKED FILES IT
         LH    RBFN,DCBLRECL       IS IN LRECL AFTER EACH GET
         B     EOB
*
BLOCKED  TM    DCBRECFM,X'80'      IS FILE FIXED-BLOCKED
         BZ    RECFMVB
         LH    RBFN,DCBBLKSI       YES. THEN BLOCKSIZE IS
         B     EOB                 IN DCBBLKSI
*
RECFMVB  LH    RBFN,0(RECD)        FOR VARIABLE, USE BLKLNGTH AT
*                                  BEGINNING OF BLOCK
EOB      AR    RBFN,RECD      END OF BLOCK ADDRESS
         ST    RECD,SNAPLIST
         SH    RBFN,=H'4'
         ST    RBFN,SNAPLIST+4
         MVI   SNAPLIST+4,X'80'
       EJECT
SYNX0050 EQU   *
         SPACE
OPENSNAP OPEN  (SNAPDCB,OUTPUT)
         SPACE 5
         SNAP  DCB=SNAPDCB,LIST=SNAPLIST
         SPACE 5
         LTR   15,15                    TEST RETURN CODE FROM SNAP
         BZ    SNAPOK
         STC   15,SNAPCODE
NOT12    CLI   SNAPCODE,4
         BNE   ABEND
*                                      IF CODE=4 THEN DCB NOT OPEN-
*                                       ASSUME DD CARD MISSING.
         MVC   ZSYN01(2),LONG01         SET MESSAGE TO LONG FORMAT
*                                       TO PRINT BLOCK NNNNNNN
         LA    1,ZSYN01                 ISSUE WTO 'I/O ERROR UUU,
         SVC   35                       BLOCK NNNNNNN
         SPACE 2
         MVC   WRITE(4),BRANCH         BRANCH ROUND WRITE IF DCB
*                                      NOT OPEN.
*
*                                       UNPACK BEGINNING OF REC INTO
*                                       WTO AREA AND TRANSLATE INTO
*                                       HEXADECIMAL FOR TYPING
         LR    1,RECD
         LA    RWK1,HEXOUT
         LA    RWK2,5
         SPACE
BCT      UNPK  0(9,RWK1),0(5,1)
         MVI   8(RWK1),C' '
         TR    0(8,RWK1),TRANSTAB
         LA    RWK1,9(RWK1)
         LA    1,4(1)
         BCT   RWK2,BCT
*                                       WHEN FIRST 20 BYTES OF RECORD
*                                       HAVE BEEN TRANSLATED ISSUE WTO
         LA    1,ZSYN02
         SVC   35                       ISSUE WTO SVC
         SPACE
         B     REPEAT
         EJECT
SNAPOK   EQU   *
         MVC   ZSYN01(2),SHORT01        * SET MESSAGE TO SHORT
         LA    1,ZSYN01                 * FORM AND ISSUE -
         SVC   35                       * 'ZSYN01 I/O ERROR UUU
         SPACE 2
REPEAT   XC    ECBIOB,ECBIOB
         MVC   REPLY,=CL4' '
         WTOR  'ZSYN04  REPLY SKIP,END,DUMP OR USE',REPLY,4,ECBIOB
WAIT     WAIT  ECB=ECBIOB
         OC    REPLY,=CL4' '            ALTER LOWER-CASE REPLIES
*                                       TO UPPER CASE FOR COMPARES
         LA    RBFN,MSGS
COMP     CLI   0(RBFN),X'FF'            TEST FOR END OF REPLY LIST
         BE    REPEAT
         CLC   REPLY,0(RBFN)
         BE    GOTREP
         LA    RBFN,19(RBFN)
         B     COMP
GOTREP   NI    DCBEROPT,X'1F'
         OC    DCBEROPT,4(RBFN)         SET DCBEROPT
         SPACE 2
WRITE    MVC   LINMSG+1(14),5(RBFN)
         MVC   ZSYN01(2),LINELEN        SET LRECL FOR PRINT LINE
         WRITE DECB1,SF,SNAPDCB,LINES
         CHECK DECB1
NOWRITE  EQU   *                       BRANCH TO HERE TO AVOID
*                                      WRITING TO SYNADSET IF DCB
*                                      IS NOT OPEN.
         CLC   REPLY,=C'END '
         BE    NODUMP
SYNEXIT  NI    SYNESW,X'0F'
         LM    0,15,SYNSAVE2
         BR    14
         SPACE 4
NODUMP   ABEND 1004
       EJECT
REPLY    DC    CL4' '                   REPLY AREA FOR WTOR
SNAPLIST DC    A(0),A(0)
ECBIOB   DC    F'0'
         DC    X'02'
         DC    X'000000'
         DC    X'00'
         DC    AL3(ECBIOB)
         DC    2F'0'
         DC    X'00'
         DC    AL3(CCW1)
         DC    X'00'
DCBAD    DC    AL3(0)
         DC    2F'0'
CCW1     DS    0D
         DC    X'17'
         DC    AL3(0)
         DC    BL1'0'
         DC    X'00'
         DC    H'0'
*
DWORD    DC    D'0'
         SPACE 3
LINES    EQU   *
         DC    AL2(ENDLINE-LINES),AL2(0)
ZSYN01   DC    AL2(S-ZSYN01),AL2(0)     * I/O ERROR MESSAGE
         DC    C' ZSYN01 I/O ERROR '    *
UNIT     DC    C'UUU'                   * LENGTH OF MESSAGE IS
S        DC    C',BLOCK'                * INCREASED TO INCLUDE
BLOCKNO  DC    CL8'NNNNNNNN'            * BLOCK NUMBER IF SNAPDCB
END01    EQU   *                        * CANNOT BE OPENED
         SPACE 5
LINMSG   DC    C'- MESSAGE * * *'
         DC    C' ,VOLUME SERIAL NO.='
VOLUME   DC    CL6' '                   VOL SER FROM UCB INSERTED HERE
         DC    C'  SYNAD ROUTINE - V3. 2/9/69.'
ENDLINE  EQU   *
*
MSGS     EQU   *
*               REPLY  EROPT    MESSAGE
         DC    C'SKIP',X'40',C'BLOCK  SKIPPED'
         DC    C'END ',X'20',C'JOB TERMINATED'
         DC    C'DUMP',X'20',C'ABEND SYS-001 '
         DC    C'USE ',X'80',C'**BLOCK USED**'
         DC    X'FF'                             END OF MSG LIST
SHORT01  DC    AL2(S-ZSYN01)
LONG01   DC    AL2(END01-ZSYN01)        LENGTH FOR LONG MESSAGE
LINELEN  DC    AL2(ENDLINE-ZSYN01)      LENGTH FOR PRINT LINE
         SPACE 3
ZSYN02   DC    AL2(END02-ZSYN02),AL2(0)
         DC    C'ZSYN02  '
HEXOUT   DC    CL45' FIRST 20 BYTES OF RECORD IN HEX.'
END02    EQU   *
         DC    C' '                     OVERFLOW FIELD FROM UNPACK
         SPACE 6
SNAPCODE DC    C' '                    FOR RETURN CODE FROM SNAP
*                                       TRANSLATE TABLE FOR RTN TO
*                                       CONVERT TO HEXPRINT
TRANSTAB EQU   *-C'0'
         DC    C'0123456789ABCDEF'
BRANCH   B     NOWRITE
ABEND    WTO   'ZSYN06  SNAP ERROR - ABEND'
         ABEND 1000,DUMP
       EJECT
SYNIDL00 DC    A(0)
SYNADMSK DC    0F'0',X'00FFFFFF' MASK OUT ADDRESS BITS
SYNIDLIS DC    C'/',AL1(8),AL2(0),C'/',AL1(8)
SYNIDL01 DC    AL2(0)
         SPACE 2
         PRINT ON,NOGEN
SNAPDCB  DCB   DSORG=PS,MACRF=W,                                       *
               RECFM=VBA,LRECL=125,BLKSIZE=882,                        *
               DDNAME=SYNADSET
         SPACE 3
        LTORG
         DCBD  DEVD=TA,DSORG=PS
         ORG   IHADCB+X'60'
DCBIDLIS DC    C'/',AL1(0),AL2(0) REPEATED AS OFTEN AS REQUIRED
         END
