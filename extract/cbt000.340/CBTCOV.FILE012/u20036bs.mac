OBSERVE  CSECT
         SPACE
* THIS PROGRAM PRODUCES A PRINTOUT SHOWING CHANNEL OBSERVATIONS DONE BY
* A MONITOR PROGRAM. THE OBSERVATIONS ARE  IN CPU ACTIVE AND CPU WAIT
* STATE.
* THE PRINTOUT SHOWS BASICALLY ALL THE POSSIBLE CHANNEL COMBINATIONS
* DURING THE OBSERVATIONS.
* EVERY RECORD READ IS 20 BYTES LONG BYTE 1   RECORD IDENTIFIER.
*                                    BYTE 2  SPARE
*                                    BYTE 3  STATUS BYTE.
*                                    BYTES 4-20 SAME AS 3(TOTAL 18).
*        N.B.  STATUS BYTE BIT 0  CHANNEL 1 NOT BUSY OFF BUSY
*                              1          2
*                              2          3
*                              3          4
*                              4          5
*                              5  ON PROT. KEY 0 OFF PROT. KEY NOT 0
*                              6  ON IF CPU WAIT STATE ELSE ACTIVE.
*                              7  ON IF CPU PROBLEM STATE ELSE SUPVR.
*THIS PROGRAM CATERS FOR 4 CHANNELS.
*THIS PROGRAM READS A PARM FIELD 15 MULTIPUNCHED CHARS INDICATING
*PARM=X'80402010C0A090605030E0D0B070F0'
*CHANNEL COMBINATIONS EG.  1000 0000 CHAN 1 BUSY       X'80'
*                          1110 0000 CHAN 1+2+3 BUSY   X'E0'
         SAVE  (14,12),,*
         BALR  12,0
         USING *,12
         ST    13,SAVE+4
         LR    8,13
         LA    13,SAVE
         ST    13,8(8)
         TITLE 'THIS ROUTINE BUILDS ADDRESS TABLE.'
*                                      INCR. SUP / PROB STATE COUNTERS
* GETMAINS AN AREA MADE UP OF THE FOLLOWING : -
* 256 BYTE AREA CONTAINS CHANNEL COMBINATION COUNTERS.
* FULLOWORD * NO OF CHANNEL COMBINATIONS POSSIBLE (ADDRESS TABLE)
* 48 BYTES FOR SUPERVISOR & PROBLEM STATE COUNTERS.
* TABLE IS 15 FULLWORDS LONG I.E. 15 CHANNEL COMBINATIONS.
* THE 1ST BYTE OF EACH F/W CONTAINS THE HEXADECIMAL REPRESENTATION
* WHICH INDICATES THE CHANNEL COMBINATION IE X'F0' CHNS 1+2+3+4.
* THE LAST 3 BYTES CONTAIN AN ADDRESS WHICH POINTS TO A FULLWORD IN A
* 256 GETMAINED AREA WHICH CONTAINS THE NUMBER OF OBSERVATIONS FOR
* THAT CHANNEL COMBINATION.
         SPACE 2
         LR    2,1
         L     2,0(2)
         LH    3,0(2)                  LOAD COUNT FIELD.
         LTR   3,3                     TEST COUNT FIELD.
*
         BNZ   GOODPARM
         WTO   'BADPARM',ROUTCDE=(2,11)
         ABEND 3000,DUMP
GOODPARM ST    3,PARCOUNT              STORE COUNT.
         SLL   3,2                     MULTIPLY COUNT BY 4.
         LR    4,3                     4 CONTAINS BYTES IN ADDRESS TAB.
*                     THIS ALLOWS FOR 6 CHANNEL ADDRESS TABLE.
         LA    2,2(2)                  POINT R2 AT PARM FIELD.
         ST    2,PARMADDR              STORE PARAMETER ADDRESS.
         LA    3,304(3)                256 + 48
         LR    0,3                     LOAD R0 WITH GETMAIN BYTES.
         ST    0,GETMAIND
         BAL   1,*+4
         SVC   10                      ISSUE GETMAIN SVC.
         ST    1,ADDR1                 R1 POINTS AT DYNAMIC ADDRD AREA.
         LA    1,256(1)
         ST    1,ADDR2                 R1 POINTS AT ADDRESS TABLE.
         LA    1,0(4,1)
         ST    1,ADDR3                 R1 POINTS AT SUP/PROB TABLE
         L     7,ADDR1
LOOPA    MVI   0(7),X'00'
         LA    7,1(7)
         BCT   3,LOOPA
*                ******** BUILD ADDRESS TABLE  *****
         L     1,ADDR2                 R1 POINTS AT ADDRESS TABLE
*                                      R2 POINTS AT PARM FIELD.
         L     3,PARCOUNT              R3 = NO OF BYTES IN PARM FIELD.
LOOP     LA    5,0                     ZEROISE 5
         IC    5,0(2)                  STICK BYTE FROM PARM IN R5
         L     4,ADDR1                 R4 -> AREA WITH COUNTERS.
         AR    4,5                     CALCULATE ADDRESS.
         ST    4,0(0,1)                STORE ADDRESS IN TABLE.
         MVC   0(1,1),0(2)             MOVE BYTE FROM PARM
         LA    1,4(1)                  BUMP R1 TO -> NEXT F/W.
         LA    2,1(2)                  BUMP R2 TO -> NEXT PARM BYTE.
         BCT   3,LOOP
* TABLE SHOULD LOOK X'80' A(CHAN1)  X'40' A(CHAN2) ETC.,
         TITLE 'PROCESS INPUT RECORD'
         SPACE
* READS RECORD AND PROCESSES STATUS BYTE IF TYPE 4. IF NOT TYPE 4
* CHECKS TO SEE WHETHER TYPE 0 OR TYPE 9 ELSE REJECTS IT.
* IT LOOPS 18 TIMES TO PROCESSS BYTES 3 TO 20.
* DETERMINES WHETHER OBSERVATION IS IN ACTIVE OR CPU STATE .
* .............                    AND WHETHER IT IS A NO CHANNEL
* ACTIVE CONDITION. ........
* INCREMENTS APPROPRIATE COUNTERS FOR SUP/PROB STATE COUNTERS.
* .....             INCREMENTS APPROPRIATE COUNTERS AND PROCESSES NEXT
* OBSERVATION(BYTE).
         B     ROUNDDCB
         PRINT NOGEN
FILEIN   DCB   DDNAME=FILEIN,MACRF=GL,DSORG=PS,EODAD=EOJ
ROUNDDCB EQU   *
         CNOP  0,4
         BAL   1,*+8          LOAD REG1 WITH LIST ADDR.
         DC    AL1(128)      OPTION BYTE
         DC    AL3(FILEIN)   DCB ADDRESS.
         SVC   19            ISSUE OPEN SVC
READREC  LA    1,FILEIN                R1 POINTS AT DCB
         L     15,48(0,1)              GET READ ROUTINE
         BALR  14,15
         CLI   0(1),C'4'
         BE    ACCEPT                  ACCEPT IF TYPE 4
         B     MONITOR                 WHEN DID MONITOR START ?
ACCEPT   LR    3,1                     R3 POINTS AT INPUT RECORD .
         LA    3,2(3)                  R3 POINTS 3RD BYTE IN RECORD.
         LA    BCT18,18
LOOP18   EQU   *
         TM    0(3),X'02'              WAIT STATE ?
         BO    WAIT                    YES BRANCH
         TM    0(3),X'F8'              ANY CHAN ACTIVE ?     1 - 5
         BNZ   INCR                    NO BRANCH.
         AP    ACNOCHAN,=P'1'          INCR CPU + NO CHAN.
         B     INCR
WAIT     TM    0(3),X'F8'              ANY CHAN ACTIVE ?     1 - 5
         BNZ   INCR                    NO BRANCH.
         AP    WTNOCHAN,=P'1'          INCR WAIT + NO CHAN
INCR     EQU   *
         MVC   ONEBYTE,0(3)
         NI    ONEBYTE,B'00000111'     TURN BITS 0 - 4 OFF.
         SR    4,4
         IC    4,ONEBYTE
         L     5,ADDR3
         SLL   4,2                     MULTIPLY BY 4.
         LA    5,0(4,5)
         L     6,0(5)
         LA    6,1(6)
         ST    6,0(5)
         SPACE
         MVC   ONEBYTE,0(3)
         NI    ONEBYTE,B'11111010'     TURN PROT. KEY & LAST BIT OFF
         SR    4,4                     ZEROISE 4
         IC    4,ONEBYTE
         L     5,ADDR1
         LA    5,0(4,5)                ADD 4 TO 5
         TM    0(3),X'02'              WAIT STATE ?
         BZ    *+8                     BRANCH IF ACTIVE.
         LA    5,2(5)                  GET RIGHT OFFSET.
         L     6,0(5)                  PICK CONTENTS OF FULLWORD
         LA    6,1(6)                  INCREMENT BY 1
         ST    6,0(5)                  STORE BACK
         LA    3,1(3)
         BCT   BCT18,LOOP18
         B     READREC
         TITLE 'RTN GETS TIME STARTED, DATE, AND DURATION OF MONITOR'
         SPACE
MONITOR  EQU   *
         CLI   0(1),C'0'               PERIOD RECORD TYPE '0' ?
         BNE   MONITOR1
         MVC   YYDDD(4),16(1)          GET DATE IN PACKED DECIMAL.
         MVC   HHMMSS(4),12(1)         MOVE TIME IN BIN 100THS OF SEC
         BAL   14,HMSRTN
         MVC   TIMEX1(8),TIME
         B     READREC
         SPACE
MONITOR1 EQU   *
         CLI   0(1),C'9'               DURATION RECORD TYPE 9 ?
         BNE   READREC
         MVC   HHMMSS(4),12(1)         MOVE SECONDS.
         L     8,HHMMSS
         SRDA  8,32
         M     8,=F'100'
         ST    9,HHMMSS
         BAL   14,HMSRTN
         MVC   TIMEX2(8),TIME
         B     READREC
         TITLE 'CONVERTS FROM BINARY 100THS OF SEC TO HH.MM.SS'
         SPACE
HMSRTN   EQU   *
         STM   4,6,HMSSAVE
         L     4,HHMMSS
         SRDA  4,32
         D     4,=F'360000'
         CVD   5,DHH
         SRDA  4,32
         D     4,=F'6000'
         CVD   5,DMM
         SRDA  4,32
         D     4,=F'100'
         CVD   5,DSS
         MVC   TIME+4(4),=X'40212020'
         ED    TIME+4(4),DSS+6
         MVI   TIME+5,C'.'
         MVC   TIME+1(4),=X'40212020'
         ED    TIME+1(4),DMM+6
         MVI   TIME+2,C'.'
         MVC   TIME-2(4),=X'40212020'
         ED    TIME-2(4),DHH+6
         LM    4,6,HMSSAVE
         BR    14
         TITLE 'BUILDS CHANNEL TOTALS FOR ALL POSSIBLE COMBINATIONS'
         SPACE
* CATERS FOR ACTIVE STATE AND WAIT STATE.
* FOR EACH CHN. COMBN. IT PICKS BYTE FROM PARM, TESTS UNDER MASK EACH
* 1ST BYTE OF THE 15 F/W IN ADDRESS TABLE. IF ONES IT BRANCHES TO
* ADDRESS IN F/W & PICKS UP VALUE FROM F/WORD IN 256 GETMAINED AREA AND
* ACCUMULATES. ON END OF SCANNING ADDRESS TABLE IT STORES VALUE IN
* PRNTARRY AND BUMP INDEX REG 6 BY 4 TO DO SAME PROCESS FOR WAIT STATE.
* THIS PROCESS IS REPEATED 15 TIMES TO FILL  UP ALL 15 COMBINATIONS.
         SPACE
EOJ      EQU   *
         L     2,PARMADDR              R2 POINTS AT PARM LIST.
         LA    4,PRNTARRY+24           R4 POINTS CHAN1(CHANNEL TOTALS)
         LA    7,15                    R7 BCT REG 15 MAJOR LOOPS.
         LA    8,0                     R8 IS ACCUMULATOR.
TMASK0   LA    6,0                     R6 IS INDEX REG BUMPED BY 4 FOR
*                                      WAIT STATE CALCULATIONS.
         LA    9,2                     R9 BCT REG 2 LOOPS ACTIVE/WAIT
TMASK1   L     3,ADDR2                 ADDRESS TABLE POINTER.
         LA    5,15                    R5 BCT REG TO SCAN ADDRESS TABLE
TMASKX   MVC   TMASK+1(1),0(2)         ALTER MASK AT RUN TIME.
TMASK    TM    0(3),X'00'              MASK FROM PARM PLUGGED IN.
         BNO   TMASK3
TMASK2   L     1,0(3)                  PICK COUNTER ADDRESS
         A     8,0(6,1)                ACCUMULATE IN 8.
TMASK3   LA    3,4(3)                  BUMP ADDRESS TABLE POINTER.
         BCT   5,TMASK                 EXAMINE NEXT ADDR. TABLE F/W.
         ST    8,0(4)                  STORE IN PRNTARRY.
         LA    8,0                     ZEROISE ACCUMULATOR.
         LA    4,8(4)                  BUMP PRNTARRY POINTER.
         LA    6,4                     PLUG INDEX REG FOR WAIT PROCESS.
         BCT   9,TMASK1                LOOP TWICE ACTIVE / WAIT
         LA    4,8(4)                  BUMP PRNTARRY POINTER.
         LA    2,1(2)                  BUMP PARM LIST POINTER.
         BCT   7,TMASK0                PROCESS NEXT CHANNEL COMBINATION
         SPACE
*                                      CHANNEL TOTALS COMPLETED.
TMASK5   B     MOVEONLY                MOVE 'ONLY CHANNEL' STATISTICS
*                                      TO PRNTARRY.
         TITLE 'MOVES STATISTICS FROM 256 GETMAINED AREA TO PRNTARRY'
         SPACE
* GETS BYTE FROM PARM LIST AND USES THIS AS MASK. DOES TM ON 1ST BYTE
* OF F/W IN ADDRESS TABLE. ON ONES COUNTER FROM 256 BYTE AREA IS MOVED
* TO APPROPRIATE PLACE IN PRNTARRY. IN THE PROCESS THE TOTAL COUNTS ARE
* ACCUMULATED. THIS PROCESS IS DONE UNTIL PARM LIST IS EXHAUSTED.
         SPACE
MOVEONLY EQU   *
         L     2,PARMADDR              PARMLIST POINTER.
         LA    3,15                    BCT REG FOR 15 MAJOR LOOPS.
         LA    7,PRNTARRY+384          R7 -> CHAN1(ONLY CHANNELS)
         XR    10,10                   ZEROISE REGISTERS USED
         LR    11,10                   AS ACCUMULATORS.
MOVE1    LA    6,15                    LOOPS TO SCAN ADDRESS TABLE.
         L     5,ADDR2                 ADDRESS TABLE POINTER.
         MVC   MOVE2+1(1),0(2)         MOVE MASK
MOVE2    TM    0(5),X'00'
         BNO   MOVE3                   COMBINATION NOT MATCHED
         L     5,0(5)                  COMBINATION MATCHED.
         MVC   0(4,7),0(5)             MOVE IN PRNTARRY ACTIVE
         A     10,0(5)                 CPU ACTIVE TOTAL ACCUMULATOR.
         LA    5,4(5)                  WAIT COUNTER POINTER.
         LA    7,8(7)                  BUMP PRNTARRY POINTER.
         MVC   0(4,7),0(5)             MOVE IN PRNTARRY WAIT
         A     11,0(5)                 CPU WAIT TOTAL ACCUMULATOR.
         B     MOVE4                   GET NEXT BYTE FROM PARM LIST.
         SPACE
MOVE3    LA    5,4(5)                  ADDRESS TABLE POINTER.
         BCT   6,MOVE2
         SPACE
MOVE4    LA    7,16(7)                 BUMP PRNTARRY POINTER.
         LA    2,1(2)                  BUMP PARM LIST POINTER.
         BCT   3,MOVE1
         SPACE
*        ADD ON NO CHANNEL ACTIVE STATISTICS TO TOTAL COUNTS.
         XR    3,3
         BAL   14,CVBRTN
         SPACE
         ST    10,PRNTARRY             STORE TOTAL ACTIVE OBSERVATIONS.
         ST    11,PRNTARRY+8              "   "    WAIT
         B     ANYCHAN
         TITLE ' CONVERTS STATS TO BINARY && PLACES THEM IN CHANAREA'
**       USED FOR 'NO CHANNEL ACTIVE ' STATISTICS.
         SPACE
CVBRTN   EQU   *
         ZAP   EDDWORD,ACNOCHAN
         CVB   9,EDDWORD
         ST    9,CHANAREA
         AR    3,9
         AR    10,9
         ZAP   EDDWORD,WTNOCHAN
         CVB   9,EDDWORD
         ST    9,CHANAREA+8
         AR    3,9
         AR    11,9
         ST    3,CHANAREA+16           NO CHAN ACT CPU + WAIT
         BR    14
         TITLE 'ROUTINE COMPUTES ANY CHANNEL STATISTICS'
         SPACE
* INFO IS OBTAINED FROM TOTAL COUNT AND FROM ONLY CHANNEL STATISTICS
         SPACE
ANYCHAN  EQU   *
*                                      CALCULATE ANY 1 CHANNEL.
         LA    2,PRNTARRY+384
         LA    3,15
         SR    4,4
         LR    5,4
ANY1     A     4,0(2)
         A     5,8(2)
         LA    2,24(2)
         BCT   3,ANY1
         LA    1,744
         ST    4,PRNTARRY(1)
         LA    1,752
         ST    5,PRNTARRY(1)
         SPACE
         LA    2,PRNTARRY+480          CALCULATE ANY 2 CHANNELS.
         LA    3,11                    11 LOOPS
         SR    4,4                     ZEROISE REGISTER  ACTIVE
         LR    5,4                     ZEROISE REGISTER  WAIT
ANY2     A     4,0(2)
         A     5,8(2)
         LA    2,24(2)
         BCT   3,ANY2
         LA    1,768
         ST    4,PRNTARRY(1)
         LA    1,776
         ST    5,PRNTARRY(1)
         SPACE
*                                      CALCULATE ANY 3 CHANNELS.
         LA    2,PRNTARRY+624
         LA    3,5
         SR    4,4
         LR    5,4
ANY3     A     4,0(2)
         A     5,8(2)
         LA    2,24(2)
         BCT   3,ANY3
         LA    1,792
         ST    4,PRNTARRY(1)
         LA    1,800
         ST    5,PRNTARRY(1)
*                                      MOVE ANY 4 CHANNELS.
         LA    1,720
         L     6,PRNTARRY(1)
         LA    7,816
         ST    6,PRNTARRY(7)
         LA    1,728
         L     6,PRNTARRY(1)
         LA    7,824
         ST    6,PRNTARRY(7)
         B     ACROSS
         TITLE 'THIS ROUTINE TRANSFERS TOTAL (ACTIVE+WAIT) ACROSS'
ACROSS   EQU   *
         LA    2,35                    LOOP 35 TIMES.
         LA    3,0                     ZEROISE ACCUMULATOR.
         LA    4,PRNTARRY              PRNTARRY POINTER.
ACROSS1  A     3,0(4)                  ADD ACTIVE.
         A     3,8(4)                  ADD WAIT
         ST    3,16(4)                 STORE IN TOTAL COLUMN.
         SR    3,3                     ZEROISE ACCUMULATOR.
         LA    4,24(4)                 BUMP PRNTARRY POINTER.
         BCT   2,ACROSS1
         B     PERCENT
         TITLE 'CALCULATES ACTIVE,WAIT,TOTAL PERCENTAGES'
         SPACE
*                                      CALCULATE % FOR TOTAL COUNT
         SPACE
PERCENT  EQU   *
         L     10,PRNTARRY+16          ** LOAD BASE FOR PERCENTAGES **
         L     8,PRNTARRY
         BAL   14,PERCENT2
         ST    9,PRNTARRY+4
         L     8,PRNTARRY+8
         BAL   14,PERCENT2
         ST    9,PRNTARRY+12
         L     3,=F'10000'             MOVE TOTAL COUNT PERCENTAGES
         ST    3,PRNTARRY+20
         BAL   14,CHANCENT
         B     PERCENT1
CHANCENT EQU   *
         ST    14,CHAN14
         L     8,CHANAREA
         L     10,PRNTARRY+16
         BAL   14,PERCENT2
         ST    9,CHANAREA+4
         L     8,CHANAREA+8
         BAL   14,PERCENT2
         ST    9,CHANAREA+12
         L     8,CHANAREA+16
         BAL   14,PERCENT2
         ST    9,CHANAREA+20
         L     14,CHAN14
         BR    14
*
CHAN14   DS    F
PERCENT1 LA    2,PRNTARRY+24
         LA    6,34                    LOOP 34 TIMES.
*
         SPACE
*                                      CALCULATE PERCENTAGES.
PERCENT3 L     8,0(2)
         BAL   14,PERCENT2
         ST    9,4(2)
         L     8,8(2)
         BAL   14,PERCENT2
         ST    9,12(2)
         L     8,16(2)
         BAL   14,PERCENT2
         ST    9,20(2)
         LA    2,24(2)                 BUMP PRNTARRY POINTER.
         BCT   6,PERCENT3
*
         B     PRINT
PERCENT2 EQU   *                       COMPUTES PERCENTAGE
*  EXPECTS DIVIDEND IN REG 8 AND DIVISOR IN REG 10.
         SRDA  8,32
         M     8,=F'10000'             MULTIPLY BY 10000
         SR    8,8
         DR    8,10
         BR    14
         TITLE 'THIS ROUTINE PRINTS INFO FROM PRNTARRY'
         SPACE
PRINT    EQU   *
         MVI   LINE,C'1'
         MVC   LINE+55(20),=C'CHANNEL OBSERVATIONS'
         BAL   14,WRITE
         MVI   LINE,C' '
         MVC   LINE+41(43),=C'CPU ACTIVE         CPU WAIT           TOT*
               AL'
         BAL   14,WRITE
         MVC   LINE+40(46),=C'COUNT   %        COUNT    %         COUNT*
                   %'
         BAL   14,WRITE
         MVI   LINE,C'0'
         MVC   LINE+2(11),=C'TOTAL COUNT'
         BAL   14,EDITRTN
         BAL   14,WRITE
         MVC   LINE(19),=C'0 NO CHANNEL ACTIVE'
         ST    2,TWO                   SAVE REG 2.
         LA    2,CHANAREA
         BAL   14,EDITRTN3
         BAL   14,WRITE
         L     2,TWO                   RESTORE REG 2
         SPACE 3
*                                      ROUTINE PRINTS REST OF PRNTARRY
         LA    4,3
         LA    6,HEADS-16
         LA    8,ANYANY-7
AA       LA    5,COMBS
         LA    7,16
AAA      C     7,=F'16'
         BNE   BBB
         LA    6,16(6)
         MVC   LINE(16),0(6)           MOVE SUB-HEADING.
         B     CCC
         SPACE
BBB      MVC   LINE+4(4),=C'CHAN'
         MVC   LINE+10(7),0(5)
         C     4,=F'1'
         BNE   BBBB
BBBBBB   NOP   BBBBBBB
         OI    BBBBBB+1,X'F0'
         LA    7,4                     RESET BCT REGISTER.
BBBBBBB  LA    8,7(8)
         MVC   LINE+1(18),LINE
         MVC   LINE+4(7),0(8)
         B     BBBBB
BBBB     LA    5,7(5)
BBBBB    BAL   14,EDITRTN
CCC      BAL   14,WRITE
         BCT   7,AAA
         BCT   4,AA
         SPACE
*                                      PRINT ' PERIOD MONITORED '
         MVC   LINE(41),=C'0 PERIOD MONITORED STARTED ON          AT'
         MVC   LINE+30(7),=X'4020204B202020'
         ED    LINE+30(7),YYDDD+1
         MVC   LINE+43(8),TIMEX1
         BAL   14,WRITE
         SPACE
*                                      PRINT 'DURATION OF MONITOR'
         MVC   LINE(21),=C'0 DURATION OF MONITOR'
         CLC   TIMEX2(8),BLANK
         BNE   GOTTIME
         MVC   LINE+22(16),=C'IS NOT AVAILABLE'
BACK     BAL   14,WRITE
         B     CPU
GOTTIME  MVC   LINE+26(8),TIMEX2
         B     BACK
         TITLE 'PRINTS CPU STATISTICS SUPERVISOR / PROBLEM STATE'
* RTN TRANSFERS TOTALS ACROSS AND PUTS THEM IN 'CHANAREA'
* CALCULATES % AND EDITS AND PRINTS LINE.
         SPACE
CPU      EQU   *
         MVI   LINE,C'1'
         MVC   LINE+40(11),=C'CPU  ACTIVE'
         MVC   LINE+77(9),=C'CPU  WAIT'
         MVC   LINE+113(5),=C'TOTAL'
         BAL   14,WRITE
         MVI   LINE,C'-'
         MVC   LINE+28(34),SUPPROB
         MVC   LINE+64(34),SUPPROB
         MVC   LINE+99(34),SUPPROB
         BAL   14,WRITE
         LA    2,6
         MVI   LINE,C'0'
         LA    3,LINE+31
CHEERS   MVC   0(10,3),COUNT
         LA    3,18(3)
         BCT   2,CHEERS
         BAL   14,WRITE
         SPACE
         L     10,PRNTARRY+16
         LA    11,2                    2 LOOPS PROT KEY 0 & NOT ZERO
CPU9     LA    4,2
         L     1,ADDR3                 R1 POINTS AT SUP/PROB AREA.
         LA    5,CHANAREA+32
CPU8     LA    2,2
         XR    3,3
CPU7     A     3,0(1)
         LA    1,8(1)
         BCT   2,CPU7
         ST    3,0(5)
         LA    5,8(5)
         L     1,ADDR3
         LA    1,4(1)
         BCT   4,CPU8
         SPACE
*                            TRANSFER TO CHANAREA FOR EASY PROCESSING
         LA    5,CHANAREA
         LA    3,4
         L     1,ADDR3
CPU6     MVC   0(4,5),0(1)
         LA    5,8(5)
         LA    1,4(1)
         BCT   3,CPU6
         SPACE
*                            CALCULATE %,EDIT LINE AND PRINT.
         LA    5,CHANAREA
         LA    3,6
         LA    6,LINE+26               1ST COUNT
         LA    7,LINE+36               1ST %
CPU5     L     8,0(5)
         CVD   8,EDDWORD
         MVC   0(10,6),PATTERN1
         ED    0(10,6),EDDWORD+3
         LA    6,18(6)
         BAL   14,PERCENT2
         CVD   9,EDDWORD
         MVC   0(7,7),PATTERN2
         ED    0(7,7),EDDWORD+5
         LA    7,18(7)
         LA    5,8(5)
         BCT   3,CPU5
         MVC   LINE(22),PKZ
         C     11,=F'1'
         BNE   *+10
         MVC   LINE+14(3),EQUAL
         BAL   14,WRITE
         L     1,ADDR3
         LA    1,16(1)
         ST    1,ADDR3
         BCT   11,CPU9
         SPACE
CPUNOP   NOP   CLOSE
         OI    CPUNOP+1,X'F0'
         MVC   PKZ,BLANK
         MVC   PKZ+1(L'PKZ-1),PKZ
         MVC   EQUAL(3),BLANK
         MVC   PKZ(7),=C'0 TOTAL'
         LR    2,1                     R2 POINTS AT SUP/PROB AREA + 32
         LR    5,1
         S     2,=F'32'                R2 POINTS AT SUP/PROB AREA
         LA    4,4
CPUTOT   SR    3,3
         A     3,0(2)
         A     3,16(2)
         ST    3,0(5)
         LA    2,4(2)
         LA    5,4(5)
         BCT   4,CPUTOT
         LA    11,1
         B     CPU9
CLOSE    CLOSE (PRINTOUT,,FILEIN)
         L     0,GETMAIND
         FREEMAIN R,LV=(0),A=ADDR1
         FREEPOOL PRINTOUT
         FREEPOOL FILEIN
         B     RESTORE
         TITLE ' WRITES LINE ROUTINE'
         SPACE
WRITE    EQU   *
         ST    14,WRITE14
WRITE0   NOP   WRITE1
         OI    WRITE0+1,X'F0'
         OPEN  (PRINTOUT,(OUTPUT))
WRITE1   PUT   PRINTOUT,LINE
         MVI   LINE,C' '
         MVC   LINE+1(L'LINE-1),LINE
         L     14,WRITE14
         BR    14
*
WRITE14  DS    F
         TITLE 'THIS ROUTINE EDITS PRINT LINE.'
         SPACE
EDITRTN  EQU   *
EDITRTN1 NOP   EDITRTN2
         OI    EDITRTN1+1,X'F0'
         LA    2,PRNTARRY-24
EDITRTN2 LA    2,24(2)                 BUMP PRNTARRY POINTER.
         SPACE
EDITRTN3 EQU   *
         MVC   LINE+34(10),PATTERN1
         L     3,0(2)
         CVD   3,EDDWORD
         ED    LINE+34(10),EDDWORD+3
         MVC   LINE+45(7),PATTERN2
         L     3,4(2)
         CVD   3,EDDWORD
         ED    LINE+45(7),EDDWORD+5
         MVC   LINE+52(10),PATTERN1
         L     3,8(2)
         CVD   3,EDDWORD
         ED    LINE+52(10),EDDWORD+3
         MVC   LINE+63(7),PATTERN2
         L     3,12(2)
         CVD   3,EDDWORD
         ED    LINE+63(7),EDDWORD+5
         MVC   LINE+70(10),PATTERN1
         L     3,16(2)
         CVD   3,EDDWORD
         ED    LINE+70(10),EDDWORD+3
         MVC   LINE+82(7),PATTERN2
         L     3,20(2)
         CVD   3,EDDWORD
         ED    LINE+82(7),EDDWORD+5
         BR    14
         TITLE ' RESTORES REGISTERS AND BRANCHES BACK '
RESTORE  L     13,SAVE+4
         LM    14,12,12(13)
         BR    14
         TITLE ' CONSTANTS ETC .,'
BCT18    EQU   2
HEADS    DC    CL16'0 CHANNEL TOTALS'
         DC    CL16'0 ONLY CHANNELS '
         DC    CL16'0 ANY CHANNELS  '
ANYANY   DC    CL7'ANY 1  '
         DC    CL7'ANY 2  '
         DC    CL7'ANY 3  '
         DC    CL7'ANY 4  '
COMBS    DC    CL7'1      '
         DC    CL7'2      '
         DC    CL7'3      '
         DC    CL7'4      '
         DC    CL7'1+2    '
         DC    CL7'1+3    '
         DC    CL7'1+4    '
         DC    CL7'2+3    '
         DC    CL7'2+4    '
         DC    CL7'3+4    '
         DC    CL7'1+2+3  '
         DC    CL7'1+2+4  '
         DC    CL7'1+3+4  '
         DC    CL7'2+3+4  '
         DC    CL7'1+2+3+4'
PKZ      DC    CL22'0 PROTECT KEY NOT ZERO'
EQUAL    DC    CL3' = '
LINE     DC    CL133' '
TIMEX    DC    CL2' '
TIME     DC    CL8' '
TIMEX1   DC    CL8' '
TIMEX2   DC    CL8' '
BLANK    DC    CL8' '
SUPPROB  DC    CL34'SUPERVISOR STATE     PROBLEM STATE'
COUNT    DC    CL10'COUNT    %'
ONEBYTE  DS    CL1
PATTERN1 DC    X'40202020202020202120'
PATTERN2 DC    X'402021204B2020'
WTNOCHAN DC    PL4'0'
ACNOCHAN DC    PL4'0'
YYDDD    DC    PL4'0'
DHH      DS    D
DMM      DS    D
DSS      DS    D
EDDWORD  DS    D
HHMMSS   DS    F
TWO      DS    F
PARMADDR DS    F                       PARAMETER ADDRESS.
ADDR1    DS    F        ADDRESS OF AREA WITH 'ONLY CHANNEL' COUNTERS.
ADDR2    DS    F                       STORES ADDRESS OF ADDRESS TABLE.
ADDR3    DS    F                       SUP/PROB COUNTERS AREA.
PARCOUNT DS    F                       PARM COUNT LENGTH OF PARM.
GETMAIND DS    F
HMSSAVE  DS    3F
CHANAREA DC    12F'0'
SAVE     DC    18F'0'
         LTORG
PRINTOUT DCB   DDNAME=PRINTOUT,MACRF=PM,DSORG=PS
PRNTARRY DC    210F'0'                 ARRAY HOLDS PRINTOUT IMAGE.
         END
