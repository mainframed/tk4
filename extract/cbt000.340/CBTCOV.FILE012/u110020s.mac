//XM7000   JOB 1,CIE,MSGLEVEL=(1,1)
//  EXEC ASMFCL
//ASM.SYSIN DD *
XM7000   CSECT
         EJECT
**************************************************************
**                                                          **
**                                                          **
**                                                          **
**        USE FOR  VS/1  SMF DATA ONLY                      **
**                                                          **
**                                                          **
**                                                          **
**                                                          **
**************************************************************
           EJECT
*****
*    ZW05 WILL BE USED TO SELECT TYPE 04 RECS FROM VARIOUS SMF FILES
*    THESE RECORDS ARE REFORMATTED AND VARIOUS BINARY FIELDS ARE CON
*    -VERTED TO DECIMAL OR P.D. AS SPECIFIED BY TPS ON 10-04-72
*    THE RECORDS ARE STORED ON TAPE FOR USE BY S.S. IN THEIR ACCOUNTING
*    PACKAGE.
*    A CONTROL CARD IS USED TO SPECIFY THE PERIOD FOR WHICH RECORDS ARE
*    TO BE SELECTED.
*      CONTROL CARD FORMAT  CC1-5 YYDDD  FIRST DAY OF PERIOD
*                             6-10 YYDDD  LAST DAY OF PERIOD
*    ONLY RECORDS FOR SYSTEMS SERVICES ARE SELECTED USING THF FIRST 2
*    CHARACTERS OF THE JOBNAME AS SPECIFIED IN THE CUSTOMER
*    TABLE AT CUSTNMTB
*
           EJECT
***********************************************************************
*                                                                     *
*    THE  LAYOUT OF THE  STEP END  RECORD                             *
*                                                                     *
***********************************************************************
*      *           *      *     *      *      *    *                  *
* START*DESCRIPTION*LENGTH* NO  *ALPHA *PACKED*DEC *   REMARKS        *
*  POS.*           *      *BYTES*OR NUM*      *POS.*                  *
***********************************************************************
*      *           *      *     *      *      *    *                  *
* 01   * REC-ID    *   1  *  1  *   N  *      *    *      =X'F4'      *
*      *           *      *     *      *      *    *                  *
***********************************************************************
* 02   * CUST. NO  *   5  *  5  *  A/N *      *    *                  *
***********************************************************************
* 07   * JOBNAME   *   8  *  8  *  A/N *      *    *                  *
***********************************************************************
* 15   * STEP NAME *   8  *  8  *  A/N *      *    *                  *
***********************************************************************
* 23   * PGM NAME  *   8  *  8  *  A/N *      *    *                  *
***********************************************************************
* 31   * RUN DATE  *   7  *  4  *  N   *  P   *    *    YYDDD         *
***********************************************************************
* 35   * SYSTEM-ID *   2  *  2  *  A   *      *    *                  *
***********************************************************************
* 37   * SYS MODEL *   2  *  2  *  N   *      *    *                  *
***********************************************************************
* 39   * MAX CORE  *   5  *  3  *  N   *  P   *    *   IN 1 K BYTES   *
***********************************************************************
* 42   * START TIME*   9  *  5  *  N   *  P   *  2 *   IN SECONDS     *
***********************************************************************
* 47   * END TIME  *   9  *  5  *  N   *  P   *  2 *   IN SECONDS     *
***********************************************************************
* 52   * CPU TIME  *   9  *  5  *  N   *  P   *  2 *   IN SECONDS     *
***********************************************************************
* 57   * PAGE  IN  *   9  *  5  *  N   *  P   *    *                  *
***********************************************************************
* 62   * PAGE  OUT *   9  *  5  *  N   *  P   *    *                  *
***********************************************************************
* 67   *COMP. CODE *   4  *  4  *  A/N *      *    *                  *
***********************************************************************
* 71   * STEP NO.  *   3  *  2  *  N   *  P   *    *                  *
***********************************************************************
*  73  * NO DEVICES*   3  *  2  *  N   *  P   *    *                  *
****************************************************FIELDS REPEATED UP*
*      *UNIT NO-CUU*   3  *  3  *  N   *      *    *TO 40 TIMES AS    *
*      *********************************************SPECIFIED IN      *
*      *EXCP COUNT *   7  *  4  *  N   *  P   *    * NO DEVICES FIELD *
***********************************************************************
           EJECT
**********************************************************************
*                                                                    *
*         REFER  ANY  QUERIES  TO                                    *
*                                                                    *
*                        W. O. FLYNN                                 *
*                                                                    *
*                        CORAS IOMPAIR EIREANN                       *
*                                                                    *
*                        COMPUTER SERVICES DEPT.                     *
*                                                                    *
*                        ORIEL ST.                                   *
*                                                                    *
*                        DUBLIN 1                                    *
*                                                                    *
*                                  742941  EX 133                    *
*                                                                    *
*                                                                    *
*                                                                    *
*                                                                    *
**********************************************************************
           EJECT
*****
BEGIN     SAVE     (14,12)
          BALR     10,0
          USING    HERE,10,11,12
HERE      LM       11,12,BASEADR
          B        FIRST
BASEADR   DC       A(HERE+4096,HERE+8192)
FIRST     ST       13,SAVE+4
          LR       4,13
          LA       13,SAVE
          ST       13,8(4)
***
**  SETUP EQUATE VALUES FOR REGS 1 TO 9
***
R1        EQU      1
R2        EQU      2
R3        EQU      3
R4        EQU      4
R5        EQU      5
R6        EQU      6
R7        EQU      7
R8        EQU      8
R9        EQU      9
***
**   OPEN INPUT AND OUTPUT FILES
***
     OPEN (CARDIN,,INREC,,OUTREC,(OUTPUT),OUTPRT,(OUTPUT))
***
**   PROCESS CONTROL CARD  PACK ALL DATA
***
GETCARD   GET      CARDIN
          USING    CARDREC,R2
          LR       R2,R1
          PACK     PFROM(4),FROMD(5)  PACK START OF PERIOD REQD
          PACK     PTO(4),TOD(5)      PACK END OF PERIOD REQD
***
**  PRINT  HEADINGS FOR EDIT REPORT
***
          MVI      PRT,X'40'        CLEAR
          MVC      PRT+1(132),PRT    PRT AREA
          MVC      HD1+82(5),FROMD   GET  DATES
          MVC      HD1+92(5),TOD       TO HD1 AND
          PUT      OUTPRT,HD1      PRT HD1
          MVI      PRT,X'40'
          MVC      PRT+1(132),PRT
          PUT      OUTPRT,HD2
*****
**   READ THE SMF RECORD. USE R3 AND RELATIVE ADDRESSING TO SEE IF
**   IT IS A STEPEND(TYPE 04) RECORD FOR SYSTEM SERVICES FOR THE
**   REQUIRED PERIOD   IF NOT READ THE NEXT SMF RECORD
*****
**
SMFREAD   GET      INREC
          LR R3,R1
          CLI      5(R3),X'04'     IS IT A TYPE 04 RECORD
          BNE      SMFREAD         IF NOT READ ANOTHER RECORD
**   CHECK TO SEE IF THE RECORD IS FROM THE PERIOD REQUESTED
**   IF  NOT  READ THE NEXT RECORD
DATECHK   CP       10(4,R3),PFROM  IF THE SMF RECORD DATE IS LOW
          BL       SMFREAD           READ THE NEXT RECORD
          CP       10(4,R3),PTO    IF THE SMF RECORD DATE IS HIGH
          BH       SMFREAD           READ THE NEXT RECORD
***
****
*****               *****               *****               *****
***   THIS ROUTINE IS USED TO FORMAT A NEW RECORT FROM DATA IN
***    THE SMF RECORD.  THIS RECORD IS CREATED  IN A FIXED SIZE
***   AREA-WRK1 AND LATER MOVED TO OUTREC.
***   R3 AND RELATIVE ADDRESSING IS USED TO ACCESS THE SMF DATA
***   R4 IS USED TO POSITION THE FORMATTED DATA IN WRK1
***
***
***
***
*****
CREATE    MVI      WRK1,X'40'              CLEAR
          MVC      WRK1+1(200),WRK1          WRK1
         MVC   WRK1+200(210),WRK1+199   TO BLANKS
          LA       R4,WRK1      STORE ADDRESS OF WRK1 IN R4
*****
**   PROCESS SMF TYPE 04 RECORD AND CREATE A NEW TYPE 04 RECORD
**   AS PER SPECS.
***
PROC04    MVI      0(R4),C'4'      REC-ID TO WRK1
INC14     A        R4,=F'1'
****
***
INC2R4    A        R4,=F'5'        INCREMENT R4 BY 5
          MVC      0(8,R4),18(R3)   MOVE JOBNAME TO WRK1
          A        R4,=F'8'        INCREMENT R4 BY 8
          MVC      0(8,R4),66(R3)   MOVE STEPNAME TO WRK1
          A        R4,=F'8'        INCREMENT R4 BY 8
          MVC      0(8,R4),58(R3)   MOVE PGMNAME TO WRK1
          A        R4,=F'8'        INCREMENT R4 BY 8
          MVC      0(4,R4),10(R3)   MOVE RUNDATE TO WRK1
          A        R4,=F'4'
          MVC      0(4,R4),14(R3)  MOVE SYSID & MDL TO WRK1
          A        R4,=F'4'          INCREMENT R4 BY 4
***
*    CONVERT CORE USED TO PD AND STORE AT WRK1
***
          MVC      FLWORD1(4),CLEARFWD  CLEAR F/W AREA
          MVC      FLWORD1+2(4),78(R3)  COREUSED  TO F/W
          XR       R5,R5                CLEAR R5
          L        R5,FLWORD1           CORE USED TO R5
          CVD      R5,DBLWORD           CORE USED TO PD
          MVC      0(3,R4),DBLWORD+5    CORE USED TO WRK1
          A        R4,=F'3'             INCREMENT R4
*****
***  CONVERT STEPSTART AND STEPEND TIMES FROM BINARY TO PD
***   AND MOVE THE DATA TO WRK1
*****
          MVC      FLWORD1(4),CLEARFWD       CLEAR F/W AREA
          MVC      FLWORD1(4),43(R3)         STEPSTART TIME TO F/W
          XR       R5,R5                     CLEAR R5
          L        R5,FLWORD1                STPSTART TO R5
          CVD      R5,DBLWORD                STPSTART TO PD
          MVC      0(5,R4),DBLWORD+3         STPSTART TO WRK1
          A        R4,=F'5'             INCREMENT R4
          MVC      FLWORD1(4),CLEARFWD       CLEAR F/W AREA
          MVC      FLWORD1(4),6(R3)          STPEND  TO F/W
          XR       R5,R5                     CLEAR R5
          L        R5,FLWORD1                STPEND TO R5
          CVD      R5,DBLWORD                STPEND TO PD
          MVC      0(5,R4),DBLWORD+3         STPEND TO WRK1
          A        R4,=F'5'             INCREMENT R4
          ST       R4,CPUDISP           STORE DISPLACEMENT OF CPUTIME
         A     R4,=F'15'      INCREMENT R4 TO POINT TO COMPLETION
*                             CODE IN WRK1
*****
**    CONVERT COMPLETION CODE TO CHARACTER FORMAT AND STORE AT WRK1
*****
          UNPK     WRK2(5),55(3,R3)  UNPK THE COMP. CODE+1 BYTE TO WRK2
          TR       WRK2(4),TBL-X'F0' TRANSLATE COMP CODE TO CHAR
          MVC      0(4,R4),WRK2      MOVE COMP. CODE TO WRK1
          A        R4,=F'4'          INCREMENT R4
***
*   CONVERT  STEP NO TO PD AND STORE AT WRK1
***
          MVC      FLWORD1(4),CLEARFWD
          MVC      FLWORD1+3(1),42(R3)
          XR       R5,R5
          L        R5,FLWORD1
          CVD      R5,DBLWORD
          MVC      0(2,R4),DBLWORD+6
        A          R4,=F'2'
*****
***   EXAMINE LENGTH FIELD FOR DEVICE INFO
***   GET  ADDRESS OF DEVICE INFO R1+DISPLACEMENT 102 TO R9
***   IF NO DEVICES  SET SW1 ON
*****
          XR       R9,R9      CLEAR R9
          AR       R9,R3      ADDRESS OF START OF RECORD TO R9
          A        R9,=F'106' ADD DISPLACEMENT OF DEV INFO TO R9
          MVC      FLWORD1(4),CLEARFWD  CLEAR F/W AREA
          MVC      FLWORD1+2(2),0(R9)  LENGTH OF DEV INFO TO F/W
          XR       R7,R7                CLEAR R7
          L        R7,FLWORD1          LENGTH OF DEV INFO TO R7
          S        R7,=F'2'    SUBTRACT LEN-OF LENGTH FIELD FROM R7
          XR       R6,R6       CLEAR R6
          D        R6,=F'8'    DIV R7 BY 8 TO GET NO. OF DEV
          LTR    R7,R7                    TEST R7
          BZ        NODEV       IF 0 GO TO NO DEVICES
DEV40     C        R7,=F'40'    IF MORE THAN 40 DEVICES
          BH       INVAL2        GO TO INVAL2
          CVD      R7,DBLWORD   CONVERT NO OF DEV TO PD
          MVC      0(2,R4),DBLWORD+6  MOVE NO OF DEV TO WRK1
          A        R4,=F'2'         INCREMENT R4
          A        R9,=F'2'         INCREMENT R9
          TM       SW1,X'01'        IF SW1 ON  GO  TO
          BO       CPUTME           CONVERT CPU TIME
*****
***   EXAMINE  THE DEVICE NO AND CONVERT TO CHARACTER FORMAT
***   GET THE EXCP COUNT FOR EACH DEVICE AND CONVERT TO PD
***   R7 CONTAINS THE NO OF DEVICES WHICH IS THE NO OF TIMES
***      THIS ROUTINE IS REPEATED
*****
DEVINFO   UNPK     WRK2(5),2(3,R9) UNPACK UNIT +1BYTE TO WRK2
          TR       WRK2(4),TBL-X'F0'  TRANS LATE TO CHARACTER
          MVC      0(3,R4),WRK2+1   MOVE UNIT NO TO WRK1
          A        R4,=F'3'        INCREMENT R4
          MVC      FLWORD1(4),CLEARFWD   CLEAR F/W AREA
         MVC       FLWORD1+1(3),5(R9)   MOVE EXCPCNT TO F/W
          XR        R5,R5             CLEAR R5
          L         R5,FLWORD1        EXCPCOUNT TO R5
          CVD       R5,DBLWORD        CONVERT EXCP TO PD
          MVC       0(4,R4),DBLWORD+4  MOVE EXCPCOUNT TO WRK1
          A         R4,=F'4'       INCREMENT R4
         A        R9,=F'8'   INCREMENT   R9
          BCT       R7,DEVINFO   IF ALL DEV ARE NOT PROCESSED DO NEXT
*****
**    GET CPUTIME AND CONVERT FOR STORING AT WRK1
*****
CPUTME    MVC      FLWORD1(4),CLEARFWD  CLEAR F/W AREA
          NI       SW1,X'00'   TURN  OFF  SW1
          MVC      FLWORD1+1(3),1(R9)   CPUTIME TO F/W
          L        R5,FLWORD1           CPUTIME TO R5
          CVD      R5,DBLWORD      CONVERT CPUTIME TO PD
          XR       R4,R4           CLEAR RL
          L        R4,CPUDISP      LOAD DISPL OF CPUTME TO R4
          MVC    0(5,R4),DBLWORD+3 MOVE CPUTIME TO WRK1
         A     R4,=F'5'       INCREMENT R4
****                                                                ***
*   GET PAGING STATISTICS,CONVERT AND STORE IN WRK1                   *
***                                                                 ***
         MVC   FLWORD1(4),CLEARFWD      CLEAR F/W AREA
         MVC   FLWORD1+3(1),0(R9)       MOVE LENGTH  OF CPU TIME
*                                                 AND A/C FIELDS IN
*                                                 TYPE 4 RECORD
         A     R9,FLWORD1               POINT R9 TO PAGING STATS IN
         A  R9,=F'1'
*                                                           SMF RECORD
*      CONVERT  PAGE IN STATS
         MVC   FLWORD1(4),CLEARFWD      CLEAR  F/W AREA
         MVC   FLWORD1(4),0(R9)         PAGE IN TO F/W
         XR    R5,R5                    CLEAR R5
         L     R5,FLWORD1               PAGE IN TO R5
         CVD   R5,DBLWORD               CONVERT TO PD
         MVC   0(5,R4),DBLWORD+3        MOVE  PAGE IN TO WRK1
         A     R4,=F'5'                 INCREMENT R4
         A     R9,=F'4'                           R9
*
*
*      CONVERT  PAGE OUT STATS
         MVC   FLWORD1(4),CLEARFWD      CLEAR F/W AREA
         MVC   FLWORD1(4),0(R9)         PAGE OUT TO F/W
         XR    R5,R5                    CLEAR R5
         L     R5,FLWORD1               PAGE OUT TO R5
         CVD   R5,DBLWORD               CONVERT TO PD
         MVC   0(5,R4),DBLWORD+3        MOVE PAGE IN TO WRK1
*
*
          AP       COUNT,=P'1'    ADD 1 TO RECORD COUNT
          PUT      OUTREC,WRK1    PUT OUT NEW RECORD
       B   SMFREAD
*****
*****
**   END OF JOB ROUTINES
*****
EOFINREC  MVI      PRT,X'40'
          MVC      PRT+1(132),PRT
          MVC      PRT(33),MSG1
          MVC      PRT+35(10),EDIT1
          ED       PRT+35(10),COUNT
          MVC      PRT+46(13),=C'STEP RECS AND'
          MVC      PRT+60(10),EDIT1
          ED       PRT+60(10),CNT05
          MVC      PRT+72(11),=C'JOB RECORDS'
         MVC   PRT+85(10),EDIT1
         ED    PRT+85(10),CNTREJ
         MVC   PRT+96(16),=C'REJECTED RECORDS'
          PUT      OUTPRT,PRT
         MVI      PRT,X'40'
          MVC      PRT+1(132),PRT
          MVC      PRT(12),MSG2
          PUT      OUTPRT,PRT
          B       ENDOFJOB
INVAL1    B        SMFREAD
NODEV     OI       SW1,X'01'
               B       DEV40
***
*  REJECT RECORD WITH MORE THAN 40 DEVICES AND PRINT WARNING
***
INVAL2    MVI      PRT,X'40'       CLEAR PRT
          MVC      PRT+1(132),PRT     AREA
          MVC      FLWORD1(4),CLEARFWD  CLEAR F/W AREA
          MVC      FLWORD1(4),6(R3)  STEPEND TO F/W
          XR       R5,R5             CLEAR R5
          L        R5,FLWORD1        STEPEND TO R5
          CVD      R5,DBLWORD        STEPEND TO PD
          DP       DBLWORD(8),=PL2'100'  BRING TO SECS
          DP       DBLWORD(8),=PL2'60'   BRING TO MINS
          DP       DBLWORD(8),=PL2'60'   BRING TO HRS
          MVC      PRT+16(4),EDIT2       EDIT
          ED       PRT+16(4),DBLWORD+4    AND
          MVC      PRT+12(4),EDIT2         PRINT
          ED       PRT+12(4),DBLWORD+2      TIME
          MVC      PRT+8(4),EDIT2            OF
          ED       PRT+8(4),DBLWORD          DAY
          MVC      PRT+1(10),EDIT1    EDIT AND
          ED       PRT+1(10),10(R3)     PRT DAY NO
          MVC      PRT+22(8),18(R3)     PRT  JOBNAME
          MVC      PRT+32(8),66(R3)     PRT  STPNAME
         MVC   PRT+45(25),=C'STEP HAS TOO MANY DEVICES'
         PUT   OUTPRT,PRT
         MVI   PRT,X'40'
         MVC   PRT+1(132),PRT
         AP    CNTREJ,=P'1'
         B     SMFREAD
*****
**  CLOSE  ALL  FILES
*****
ENDOFJOB  CLOSE  (INREC,,CARDIN,,OUTREC,,OUTPRT)
***
***  RESTORE  REGS
*****
          L        13,4(13)
          RETURN   (14,12)
***
*   FILE   DCBS
***
CARDIN  DCB  DSORG=PS,MACRF=(GL),DDNAME=CARDIN
INREC   DCB  DSORG=PS,MACRF=(GL),DDNAME=INREC,EODAD=EOFINREC
OUTREC  DCB  DSORG=PS,MACRF=(PM),DDNAME=OUTREC
OUTPRT  DCB  DSORG=PS,MACRF=(PM),DDNAME=OUTPRT
***
**   CONSTANTS AND HEADINGS
***
          DS       D     ALIGN ON DOUBLEWORD BOUNDARY
FLWORD1   DC       X'00000000'
CLEARFWD  DC       X'00000000'
DBLWORD   DS       D
CLEARDWD  DC       X'0000000000000000'
SAVE      DS       18F
FLWORD2   DC       X'00000000'
CPUDISP   DC       X'00000000'     DISPLACEMENT OF CPUTIME IN WRK1
*
*
*
WRK1     DS    CL410
WRK2      DS       CL5
TBL  DC  X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
COUNT     DC       PL4'0'
PFROM     DC      PL4'0'
PTO       DC      PL4'0'
PRT       DS     CL133
EDIT1     DC      X'40206B2020206B202120'
EDIT2     DC       X'40202120'
CNT05     DC       PL4'0'
CNTREJ   DC    PL4'0'
          LTORG
SW1        DC      BL1'0'
SW2        DC      BL1'0'
MSG1 DC CL33'- TOTAL NO OF RECORDS SELECTED  '
MSG2 DC CL12'-END OF JOB'
****
*   HEADINGS
*****
HD1  DC  CL133'1         SELECTION AND FORMATTING OF SMF STEPEND RECORD*
               S FOR CIE            FROM         TO           '
HD2  DC  CL133'-    DAYNO     TIME   JOBNAME   STEPNAME'
***
**   DSECT FOR CONTROL CARD
***
CARDREC  DSECT
FROMD    DS    CL5
TOD      DS    CL5
         END
          END
/*
//LKED.SYSLMOD DD DSN=CIEFE.LIBRARY,UNIT=SYSDA,DISP=OLD,VOL=SER=CIESY0
//LKED.SYSIN DD *
  NAME  XM7000(R)
/*
