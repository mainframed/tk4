         MACRO
&NA      BEGIN &BASE,&SAVADR=,&ID=YES,&REGS=YES
         GBLA  &CHK
         LCLC  &BS1,&BS2,&BS3
         USING *,15
         AIF   ('&REGS' EQ 'NO').NOREGS
         AIF   (&CHK EQ 1).NOREGS
*  REGISTER EQUATES
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FP0      EQU   0
FP2      EQU   2
FP4      EQU   4
FP6      EQU   6
&CHK     SETA  1
.*  SET UP CSECT NAME AS AN 8-BYTE CHARACTER CONSTANT IF SPECIFIED
.NOREGS  AIF   ('&ID' EQ 'NO').NOID
         AIF   ('&SYSECT' EQ '').NOID
         B     *+12
         DC    CL8'&SYSECT'
.NOID    ANOP
&NA      STM   14,12,12(13)
         AIF   ('&BASE' NE  '').BSPEC
&BS1     SETC  '12'                DEFAULT BASE = 12
         CNOP  0,4
         BAL   &BS1,*+76
         USING *,&BS1
         AGO   .SAVE
.*  BASE SPECIFIED. SET UP APPROPRIATE USING STATEMENT, ALLOWING UP TO
.*     THREE REGISTERS
.BSPEC   ANOP
&BS1     SETC  '&BASE(1)'
&BS2     SETC  '&BASE(2)'
&BS3     SETC  '&BASE(3)'
         AIF   ('&BS2' EQ  '').ONLY1
         AIF   ('&BS2' EQ '&BS1' OR '&BS1' EQ '&BS3').FAIL
         AIF   ('&BS2' EQ '&BS3').FAIL
         AGO   .OVER1
.*  ALL SPECIFIED BASE REGISTERS ARE UNIQUE
.ONLY1   CNOP  0,4
         BAL   &BS1,*+76
         USING *,&BS1
         AGO   .SAVE
.*  MORE THAN ONE BASE REGISTER SPECIFIED
.OVER1   CNOP  0,4
         BAL   &BS1,*+76
         AIF   ('&BS3' NE  '').ALL3 THREE BASE REGISTERS SPECIFIED
         USING *,&BS1,&BS2
         AGO   .SAVE
.ALL3    USING *,&BS1,&BS2,&BS3
.SAVE    ANOP
&SAVADR  DC    18F'0'
         AIF   ('&BS2' NE  '').SETB2
         AGO   .STORE
.SETB2   LR    &BS2,&BS1           SET 2ND BASE =
         AH    &BS2,IND&SYSNDX        1ST BASE + 4096
         AIF   ('&BS3' NE  '').SETB3
         AGO   .INC4K
.SETB3   LR    &BS3,&BS2           SET 3RD BASE =
         AH    &BS3,IND&SYSNDX        2ND BASE + 4096
.INC4K   B     *+6
IND&SYSNDX  DC H'4096'
.*  COMPLETE THE ESQUENCE
.STORE   ST    &BS1,8(13)
         ST    13,4(&BS1)
         LR    13,&BS1
         MEXIT
.*  ERROR NOTES
.FAIL    MNOTE 12,'BASE REGS DO NOT HAVE UNIQUE NAMES. GENERATION '
         MNOTE *,'TERMINATED'
         MEXIT
         MEND
         MACRO
&NAME    FINISH &RC=Z
&NAME    L     13,4(13)
         AIF   ('&RC' EQ '(15)').REG15
         AIF   ('&RC'(1,1) EQ '(').REGERR
         AIF   ('&RC' EQ 'Z').NORC
         LA    15,&RC
.REG15   L     14,12(13)
         LM    0,12,20(13)
         AGO   .OUT
.NORC    LM    14,12,12(13)
.OUT     BR    14
         MEXIT
.REGERR  MNOTE *,RETURN CODE REGISTER MUST BE 15. NO R.C. RETURNED
         AGO   .NORC
         MEND
         MACRO
&NAME    WTP   &MESSAGE,&MF=
         AIF   ('&MF' NE '').LISTEX
&NAME    WTO   &MESSAGE,ROUTCDE=(11)
         MEXIT
.LISTEX  AIF   ('&MESSAGE' EQ '').EX
&NAME    WTO   &MESSAGE,ROUTCDE=(11),MF=&MF
         MEXIT
.EX      ANOP
&NAME    WTO   MF=&MF
         MEND
        TITLE 'UTIRELSE - RELEASE (AND OPTIONALLY RESET) JOBS ON HOLDQ'
         ISEQ  73,80
         SPACE
***********************************************************************
*                                                                     *
*        THIS CSECT IS DESIGNED TO RELEASE A HELD JOB OR JOBS AND     *
*                                                                     *
*        OPTIONALLY RESET THEM.  IT READS A STRING OF INPUT CARDS     *
*                                                                     *
*        WITH THE JOB NAME STARTING IN COL. 1.  A SPACE OR A COMMA    *
*                                                                     *
*        IS THEN SCANNED FOR & IF A SPACE IS FOUND THE JOB IS         *
*                                                                     *
*        RELEASED; IF A COMMA IS FOUND THE JOB IS RESET TO THE        *
*                                                                     *
*        PRIORITY NUMBER FOLLOWING THE COMMA (UNLESS THAT NUMBER IS   *
*                                                                     *
*        ZERO WHEN NO RESET TAKES PLACE) AND THEN THE JOB RELEASED    *
*                                                                     *
*              E.G.      COL 1                                        *
*                          ×                                          *
*                          SYSJOB              )                      *
*                          SYSRELSE,11         )  VALID               *
*                          POCJOB,0            )                      *
*                           ANYJOB             -  INVALID             *
*                          CFEJOB,PRTY=10            "                *
*                                                                     *
*        IF NO ERROR IS FOUND A RETURN CODE OF ZERO IS PLACED IN R15  *
*                                                                     *
*        OTHERWISE EIGHT IS PLACED IN R15.                            *
*                                                                     *
*                                                                     *
*        TO ENABLE SVC 34 TO WORK IN ANY OTHER THAN STORAGE PROTECT   *
*                                                                     *
*        ZERO THE FOLLOWING SUPERZAP TO SYS1.SVCLIB IS NECESSARY:     *
*                                                                     *
*              NAME   IGC0003D IEE0303D                               *
*              VERIFY 0033 80      RELEASE 20.0                       *
*              REP    0033 F0           "                             *
*                                                                     *
*        THUS CHANGING A BRANCH ON ZERO TO AN UNCONDITIONAL BRANCH.   *
*                                                                     *
*                                                                     *
*        WRITTEN BY CHRIS HUTCHINS, SEPTEMBER 1970,                   *
*                                                                     *
*              WEST SUSSEX COUNTY COUNCIL  SYSTEMS PROGRAMMING GROUP. *
*                                                                     *
***********************************************************************
         EJECT
UTIRELSE CSECT
         PRINT DATA
         BEGIN
         OPEN  CARD
READ     GET   CARD
         LR    R6,R1               SAVE R1 IN R6
         AP    CARDCNT,=P'1'
*
*        SET UP LOOP
*
         LR    R3,R6              STARTING ADDR FOR SEARCH FOR COMMA
         LA    4,1(0,0)           INCREMENT
         LA    5,8(R6)            COMPARAND
         CLI   0(R3),C'Z'          PRE-CHECK FOR FIRST CHAR. ALPHA
         BH    ERROR
         SPACE
COMLOOP  CLI   0(R3),C' '         LOOK FOR A SPACE
         BC    8,COMFOUND         BRANCH IF FOUND
         CLI   0(3),C','          LOOK FOR COMMA
         BC    8,COMFOUND         BRANCH IF FOUND
         CLI   0(R3),C'A'
         BL    ERROR
         CLI   0(R3),C'9'
         BH    ERROR
         BXLE  3,4,COMLOOP
         B     ERROR               JOBNAME > 8 CHARACTERS
         SPACE
COMFOUND SR    3,R6               COMPUTE LENGTH
         BC    2,OKLENGTH          > 0?
ERROR    MVC   WTP+42(11),0(R6)
         UNPK  WTP+18(2),CARDCNT
         OI    WTP+19,X'F0'
         WTP   MF=(E,WTP)
         MVI   ERRORSW,X'FF'
         B     READ
OKLENGTH MVC   COMD+4(24),=C'RESET                   '
         BCTR  3,0                DECREMENT FOR EXECUTE
         EX    3,MVNAME           MOVE NAME
         LA    R5,1(R3,R6)
         LA    3,COMD+13(3)       COMPUTE ADDRESS  --
         CLI   0(R5),C' '
         BE    RELEASE
         CLI   1(R5),C'0'
         BE    RELEASE
         CLI   1(R5),C'1'          CHECK FOR VALID RESET VALUE
         BL    ERROR
         BE    TWODIG
         CLI   2(R5),C' '
         BNE   ERROR
         CLI   1(R5),C'9'
         BH    ERROR
         B     RESET
TWODIG   CLI   2(R5),C' '
         BE    RESET
         CLI   2(R5),C'1'
         BL    ERROR
         CLI   2(R5),C'3'
         BH    ERROR
RESET    MVC    0(6,R3),=C',PRTY='
         MVC   6(2,R3),1(R5)
         LA    1,COMD             WTO --
         SVC   35                 --  'E JOBNAME,PRTY=N'
         SR    R0,R0
         LA    R1,COMD             LOAD COMMAND ADDRESS
         SVC   34                  INVOKE MASTER SCHEDULER
         SPACE
*
*        RESET TO RELEASE MODE
*
RELEASE  MVC   COMD+4(8),=C'RELEASE '
         MVC   0(8,3),=CL8' '     BLANK OUT ',PRTY=N'
         LA    1,COMD             WTO --
         SVC   35                 --  'A JOBNAME'
         SR    R0,R0
         LA    R1,COMD             LOAD COMMAND ADDRESS
         SVC   34                  INVOKE MASTER SCHEDULER
         B     READ
         SPACE 2
EOJ      CLOSE CARD
         CLI   ERRORSW,X'FF'       ERRORS FOUND?
         BNE   OVER                NO, THEN BRANCH
         LA    R15,8               SET RETURN CODE TO 8
         B     OVER+2
OVER     XR    R15,R15             SET RETURN CODE TO 0
         FINISH RC=(15)
         SPACE 3
         SPACE 2
MVNAME   MVC   COMD+12(1),0(R6)
         SPACE 2
         DS    0F
COMD     DC    Y(SIZEMESS-*,0)
         DC    25C' '              COMMAND AREA
         DC    C'''PROGRAM GENERATED COMMAND'''
SIZEMESS DC    C' '                PAD END OF COMMAND
ERRORSW  DC    X'00'
WTP      WTP   'UTIRELSE CARD XX IS INVALID. CONTAINS XXXXXXXXXXX',MF=L
CARDCNT  DC    PL2'0'
         LTORG
         EJECT
CARD     DCB   DSORG=PS,MACRF=GL,LRECL=80,EODAD=EOJ,DDNAME=SYSIN
         END
