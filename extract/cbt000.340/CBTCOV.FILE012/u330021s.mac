PUTGET   CSECT
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*          THIS IS A PROGRAM WHICH MAY BE USED TO TRANSCRIBE ANY
*     SEQUENTIAL DATA SET FROM ANY DEVICE TO ANY OTHER DEVICE,
*     OPTIONALLY ALLOWING A PART OR PARTS ONLY TO BE COPIED.
*          METHOD OF USE.     THE PARM FIELD OF THE EXEC STATEMENT
*     IS USED TO SPECIFY THE SELECTED PARTS OF THE DATA SET.   THE
*     FIRST NUMBER SPECIFIES THE FIRST RECORD TO BE TRANSCRIBED,
*     ALTERNATE NUMBERS THEN SPECIFY THE NUMBER OF RECORDS TO BE
*     TRANSCRIBED AND THE NUMBER OF RECORDS TO BE SKIPPED.   EACH
*     NUMBER MUST BE SEPARATED BY AT LEAST ONE NONE NUMERIC CHARACTER
*     OR BLANK.
*          EXAMPLES:
*     1) PARM='1,1000,  TRANSCRIBES RECORDS 1 - 1000 INCLUSIVE.
*     2) PARM='501,25'  TRANSCRIBES RECORDS 501 - 525 INCLUSIVE.
*     3) PARM='1,50,450,20'   TRANSCRIBES RECORDS 1 - 50 INCLUSIVE,
*     SKIPS THE NEXT 450 RECORDS AND TRANSCRIBES THE NEXT 20 RECORDS.
*     4) PARM='5000'  TRANSCRIBES ALL RECORDS FROM 5000 TO THE END
*     OF THE DATA SET.
*          RESTRICTIONS.   A MAXIMUM OF 10 NUMERIC FIELDS MAY BE
*     SPECIFIED. IF MORE THAN 10 NUMERIC FIELDS ARE SPECIFIED, ONLY
*     THE FIRST 10 WULL BE PROCESSED.
*     TO COPY ALL RECORDS IN THE DATA SET OMIT THE PARM FIELD
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
         SAVE  (14,12)
         BALR  11,0
         USING *,11
         ST    13,SAVE+4
         LA    2,SAVE
         ST    2,8(13)
         LR    13,2
         L     5,0(1)    PARM DATA  AREA
         CLC   0(2,5),=X'0000'      NO PARM?
         BE    NORM
         OI    MOD+1,X'F0'   BRANCH TO PARM LOGIC AFTER OPEN.
NORM     OPEN  (DCBA,,DCBB,(OUTPUT))
MOD      BC    0,PARM
LOOPA    GET   DCBA
         LR    0,1
         PUT   DCBB,(0)
         B    LOOPA
ENDFILE  CLOSE (DCBA,,DCBB)
         L    13,SAVE+4
         LM    14,12,12(13)     RESTORE REGS.
         LA    15,0     RETURN CODE =0
         BR    14    RETURN
PARM     LH    6,0(5)   COUNT OF PARM CHARS.
         LA    4,10   MAX. NO. OF FIELDS.
         LA    5,2(5)     PAST BINARY COUNT.
         LA    8,STPSTT     STORAGE ADDRESS.
STLOOP   LA    7,0    COUNT OF FIELD LENGTH.
         LA    9,0(5)    START OF FIELD.
CLI      CLI   0(5),X'F0'
         BL    ENDONE
         LA    7,1(7)     LENGTH+1
         LA    5,1(5)    NEXT BYTE.
         BCT   6,CLI    ANY MORE BYTES.
         B     ENDB
ENDONE   LA    5,1(5)
         BCT   6,*+4    UPDATE PAST COMMA.
ENDB     CH    7,=X'0000'   FIELD LENGTH 0?
         BE    NOLEN     YES.
         BCT   7,*+4     LENGTH-1
         NI    PACK+1,X'F0'
         EX    7,PACK     PACK INTO STPSTT.
         CP    0(5,8),STPSTT+50(5)
         BNE   *+10
         AP    0(5,8),=PL1'1'
         LA    8,5(8)     NEXT STPSTT FIELD.
         BCT    4,*+4   MAX. NO. STPSIT FIELDS.
NOLEN    CH    6,=X'0000'     ANY MORE CHARS.
         BE    GETPUT
         CH    4,=X'0000'       10 STOP/START CHARS. USED ?
         BE    GETPUT
         B     STLOOP
PACK     PACK  0(5,8),0(5,9)   MODIFIED BY EX.
GETPUT   LA    4,10    COUNT OF STPTTS.
         LA    8,STPSTT
         CP    0(5,8),STPSTT+50(5)
         BE    ENDFILE
ON2      GET   DCBA
GOTPUT   AP    GETNO(5),=PL1'1'
         CP    GETNO(5),0(5,8)
         BNE   DUMMY
         BCT   4,GOON
         MVC   GOTPUT(4),DUM1
         B    GOON
DUM1     B     DUMMY
GOON     LA    8,5(8)
         SP    GETNO(5),GETNO(5)
         XI    DUMMY+1,X'F0'
         CP    0(5,8),STPSTT+50(5)
         BNE   DUMMY
         CLI   DUMMY+1,X'F0'
         BE    ENDFILE
         MVC   GOTPUT(4),DUM1
DUMMY    BC    15,ON2
         LR    0,1
         PUT   DCBB,(0)
         B     ON2
STPSTT   DC    12PL5'0'
GETNO    DC    PL5'0'
SAVE     DC    18F'0'
DCBA     DCB   DSORG=PS,DEVD=DA,MACRF=GL,DDNAME=INPUT,EODAD=ENDFILE
DCBB     DCB   DSORG=PS,DEVD=DA,MACRF=PM,DDNAME=OUTPUT
         END
