          TITLE  'SPY53 - VM D A/D N/D R INTERFACE '
******************************************************************
* THIS MODULE INTERROGATES VS1 AND WRITES INFORMATION ABOUT ANY  *
* ACTIVE JOBS, JOBQ AND OUTSTANDING REQUESTS TO A DISK FILE TO   *
* BE READ BY REPORT PROGRAM WHEN RUNNING UNDER VM.               *
******************************************************************
* MACRO
         MACRO
&NAME    CUREG
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUREG MACRO:16/01/75'
         POP   PRINT
         ACTR  50
         LCLA  &X,&Y,&Z
*    GENERAL REGISTERS
.LPR     ANOP
R&X      EQU   &X
&X       SETA  &X+1
         AIF   (&X LT 16).LPR
*    CONTROL REGISTERS
.LPC     ANOP
C&Y      EQU  &Y
&Y       SETA  &Y+1
         AIF   (&Y LT 16).LPC
*    FLOATING POINT REGISTERS
.LPF     ANOP
F&Z      EQU   &Z
&Z       SETA  &Z+2
         AIF   (&Z LT 8).LPF
         MEND
         MACRO
&NAME    CUENTER &BASE=(R12),&RECURSE=,&RENT=,&FIRST=,&CSECT=,&PARM=
         LCLA  &AL0,&AL1,&AL2,&AL9,&AL12
         ACTR  45                                              DEC 75
&AL2     SETA  &SYSNDX
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUENTER MACRO:16/06/77'
         POP   PRINT
         LCLC  &CL0,&CL1,&CL2,&CL3,&CL12,&CL13,&CL50
         LCLC  &CL51,&CL52,&CL53
         GBLB  &BG15
         AIF   ('&NAME' EQ '').B98
         ENTRY &NAME
.B98     ANOP
&CL0     SETC  '12'
         AIF   ('&BASE'(1,1) EQ '(').B10  *VALIDATE &BASE PARAMETER
&CL0     SETC  '&BASE'
         AIF   ('&CL0' EQ 'NONE').B11
         AIF   ('&CL0'(1,1) NE 'R').B4B
&AL9     SETA  K'&CL0-1
&CL0     SETC  '&CL0'(2,&AL9)
.B4B     AIF   ((&CL0 GT 1) AND (&CL0 LT 13)).B11
.BERA    MNOTE 9,'&&BASES WRONG,MACRO ABANDONED'
         MEXIT
.B10     ANOP
&CL0     SETC  '&BASE(1)'
&AL0     SETA  1                        COUNT ALONG TO-BE-SCANNED BASES
.B13     ANOP
&AL1     SETA  1                       *COUNT ALONG PREVIOUSLY SCANNED
&CL12    SETC  '&BASE(&AL0)'
         AIF ('&CL12'(1,1) NE 'R').B12A
&AL9     SETA  K'&CL12-1
&CL12    SETC  '&CL12'(2,&AL9)
.B12A    ANOP
&AL12    SETA  &CL12
.B12     AIF    ((&AL12 LT 2) OR (&AL12 GT 12)).BERA
.B15     AIF   (&AL1 EQ &AL0).B14      *J OUT IF REACHED LATEST
&CL13    SETC  '&BASE(&AL1)'
         AIF   ('&CL13'(1,1) NE 'R').B15A
&AL9     SETA  K'&CL13-1
&CL13    SETC  '&CL13'(2,&AL9)
.B15A    AIF   (&CL12 EQ &CL13).BERA *ERROR IF DUPLICATED
&AL1     SETA  &AL1+1                  *STEP ALREADY SCANNED PTR
         AGO   .B15
.B14     ANOP
&AL0     SETA  &AL0+1                  *STEP SCAN POINTER
         AIF   ('&BASE(&AL0)' NE '').B13 *J IF NOT NULL
&AL9     SETA  N'&BASE
         AIF   (&AL0 LT &AL9).BERA *ERROR IF NULL ELEMENT
.B11    ANOP
.*   START GENERATING PROGRAM
         DS    0H
         BALR  R15,0
         USING *,R15
&CL1     SETC  '&CSECT'
         AIF   ('&CL1' NE '').B30
&CL1     SETC  '*'
.B30     ANOP
&NAME    SAVE  (14,12),,&CL1
.B32     ANOP
.B90A    BAL   &CL0,OCSVA&AL2
         DROP  R15
         USING *,&CL0
OCSVD&AL2 EQU  *         HOLD IMMEDIATELY AFTER USING STATEMENT
         AIF   (&BG15).NODATIM
         CUREG                          REGISTER MNEMNONICS
&CL51    SETC  '&NAME'
         AIF   (K'&CL51 LE 8).DT1
&CL51    SETC  '&CL51'(1,8)
         AGO   .DT2
.DT1     ANOP
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '&SYSECT'
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '????????'
.DT2     ANOP
&CL52    SETC  '&SYSDATE'(4,2)'.'.'&SYSDATE'(1,2)'.'.'&SYSDATE'(7,2)
&CL53    SETC  '&SYSTIME'(1,2)':'.'&SYSTIME'(4,2)':00'
CUVRSION DC    C'****VERSION/',CL8'&CL51',C'/&CL52./&CL53'
&BG15    SETB  (1)                                             DEC 75
.NODATIM ANOP
OCSAR&AL2 DS    18F
OCSVA&AL2 EQU  *
         AIF   ('&BASE' EQ '').B89
&AL9     SETA  N'&BASE
         AIF   (&AL9 LE 1).B89
&AL1     SETA  &AL9
&AL0     SETA  2
.B88     ANOP
&CL2     SETC  '&BASE(&AL0)'
&CL3     SETC  '&BASE(&AL0-1)'
         LA    &CL2,1
         LA    &CL2,4095(&CL2,&CL3)
         USING OCSVD&AL2+4096*(&AL0-1),&CL2
         AIF   (&AL0 EQ &AL1).B87
&AL0     SETA  &AL0+1
         AGO   .B88
.B89     ANOP
.B87     ANOP
         ST    R13,OCSAR&AL2+4
         LR    R15,R13
         LA    R13,OCSAR&AL2
         ST    R13,8(R15)
         MEXIT
.MEND    MEND
* MACRO
         MACRO
&NAME    CUEXIT   &RC=(15)
         GBLB  &BG15                                 DEC 75
         LCLA  &B,&W
         LCLC  &Z
&NAME    DS 0H
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUEXIT MACRO:16/06/77'
         POP   PRINT
         L      R13,4(13)
&Z         SETC  '&RC'
.B94     AIF   ('&Z'(1,2) NE '(R').B84
&B       SETA  K'&Z-2
&Z        SETC  '&Z'(1,1).'&Z'(3,&B)
.B84     ANOP
         AIF   ('&Z' EQ '(15)').B60
         AIF   ('&Z'(1,1) EQ '(').B61
         RETURN (14,12),RC=&Z
         AGO   .B62
.B61     ANOP
&W       SETA  K'&Z-2
&Z       SETC  '&Z'(2,&W)
         LR    R15,&Z
.B60     RETURN (14,12),RC=(15)
.B62     ANOP
         MEND
SPY53    CUENTER
         LA    7,20                     LOAD MAXIMUM NUMBER OF ORES
         OPEN  (OUTMOVE,(OUTPUT))       OPEN OUTPUT FILE
         TIME  DEC                      GET TIME
         ST    0,TIME                   STORE TIME IN TIME
         OI    TIME+2,X'0F'             PUT ON PACK SIGN FOR NICETY
         UNPK  TIME1(6),TIME(3)         UNPACK TIME
         MVC   TIME1(2),TIME1+1         REFORMAT TIME
         MVI   TIME1+2,C'.'             DOT THE EYES AS THEY SAY
         L     5,16                     SURPRISE SURPRISE THE CVT
         L     3,0(5)                   GET ACTIVE TASK IN CASE
         XR    9,9                      CLEAR OUT 9
         IC    9,248(5)                 LOAD NUMBER OF PARTITIONS
         L     8,244(5)                 GET ADDRESS OF P0 TCB
         LR    5,8                      LOAD 5 WITH P0 ADDRESS
         L     8,0(8)                   LOAD P0 TCB
         ST    8,P0STORE                STORE IN P0STORE
         LA    8,JOBNAMES               LOAD ADDRESS OF JOBNAME AREA
LOOP     L     10,0(5)                  LOAD TCB
         CLC   12(4,10),=X'00000000'    TIOT PRESENT?
         BE    NOTIOT                   IF NOT BRANCH OUT
         MODESET KEY=ZERO               GET PAST FETCH PROTECT PROBLEMS
         L     11,0(10)                 LOAD TOP RB FOR TCB
         L     10,12(10)                LOAD TIOT FOR TCB
         MVC   3(8,8),0(10)             MOVE OVER THE JOBNAME
         MVC   11(8,8),8(10)            MOVE OVER THE STEP NAME
         MODESET KEY=NZERO              BACK OUT OF KEY ZERO
         B     SYSTEM                   BRANCH OUT
NOTIOT   MVC   3(8,8),=C'OS/VS1  '      SHOVE IN CONSTANT 'OS/VS1'
SYSTEM   EQU   *                        HERE WE ARE AGAIN
         LA    5,4(5)                   LOAD NEXT TCB ADDRESS
         LA    8,19(8)                  UP JOBNAME / STEPNAME
         BCT   9,LOOP                   BRANCH COUNT ON NO OF PARTITS
RETURN0  MVC  0(3,8),=C'999'            PUT MARKER AT END OF JOBNAMES
RETURN   LA    8,JOBNAMES               RELOAD JOBNAME AREA
LP5      LA    4,OUTAREA+5              PUT R4 PAST TIME AREA
         MVC   OUTAREA(5),TIME1         MOVE OVER TIME
LP6      MVC   0(3,4),0(8)              MOVE OVER PARTITION NO
         CLC    0(3,8),=C'P14'          ARE WE AT PARTITION 14?
         BNE    N14                     IF NO PROBLEM
         CLI    3(8),C' '               IS THERE NO PARTITION NO
         BE     FINISH                  IF SO GET OUT
N14      MVC   4(8,4),3(8)              MOVE JOBNAME TO OUTPUT AREA
         MVC   13(8,4),11(8)            MOVE STEPNAME TO AREA
         LA    8,19(8)                  UP THE AREA ADDRESS
         CLC   4(6,4),=C'OS/VS1'        JOBNAME OS/VS1?
         BE    LP6                      IF SO MISS OUT
         CLC   0(3,8),=C'999'           ARE WE AT THE END?
         BE    FINISH                   IF SO GET OUT
         CLC   19(3,8),=C'999'          ARE WE AT END
         BE    FINISH                   IF SO GET OUT
         LA    4,21(4)                  UP ADDRESS OF OUTPUT AREA
          B     LP6                     BRANCH OUT
FINISH    MVC   0(4,4),=C'WTOS'         MOVE MARKER FO REPORT PROGRAM
          L     5,16                    CVT HERE WE GO
          LA    4,4(4)                  GET PAST WTO MARKER
          L     5,100(5)                GET HOLD OF UCM
          L     5,28(5)                 GET ADDRESS OF FIRST ORE
          LTR   5,5                     IS IT ZERO
          BZ    FINISH1                 IF SO GET OUT
ORELOOP   L     6,12(5)                 GET OVER TO WTOR MESSAGE
          MVC   0(40,4),8(6)            COPY OVER MESSAGE TO OUTPUT
          LA    4,40(4)                 UP AREA ADDRESS
          CLC   1(3,5),=X'000000'       NEXT ORE GOT ZERO
          BE    FINISH1                 IF SO GET OUT FAST
          L     5,0(5)                  LOAD NEXT ORE
          BCT    7,ORELOOP              BRANCH COUNT ROUND
FINISH1  MVC   0(4,4),=C'END '          PUT END MARKER FOR REPORT PROG
         PUT   OUTMOVE,OUTAREA          WRITE RECORD
NONO     L     7,16                     GET CVT
         L     7,296(7)                 GET JES COMMUNICATION TABLE
         L     7,240(7)                 FROM THENCE GET INTO JOBLIST
OKAYA    L     7,4(7)                   PAST JLIH ETC
         LA    5,OUTAREA                GET OUTARE ADDRESS
LOOPA    EQU    *
NOLOCK   L     8,8(7)                   GET UP
LOOPB    CLC    4(4,8),=X'00000000'     ARE WE AT END OF JOBLIST CHAIN
         BE     ZZ000                   IF SO BRANCH
          CLC   14(2,8),=X'0000'        END OF SUB CHAIN
          BE    ZZ000                   IF SO BRANCH
LOCKB    MVC    0(1,5),18(8)            MOVE JOBCLASS
         MVC   1(8,5),4(8)              MOVE JOBNAME
          MVI   9(5),C'I'               SET UP FOR INPUT
          TM    19(8),X'10'             IS IT INPUT JOB
          BO    INP                     BRANCH IF YES
          MVI   9(5),C'O'               MOVE OUTPUT FLAG
INP       MVC    KEEP,19(8)             FIDDLE PRIORITY
          NI    KEEP,X'0F'              TIDY UP
          TR    KEEP,TABLE              TRANSLATE
          MVC   10(1,5),KEEP            MOVE ACCROSS
          OI    26(5),X'F0'             TIDY UP
          LA    5,11(5)                 MOVE UP ADDRESS
ZZ000    CLC    1(3,8),=X'000000'       SUB CHAIN ADDRESS 0?
         BE     NOGOOD1                 IF SO GET OUT
         L      8,0(8)                  LOAD NEXT ADDRESS
         B      LOOPB                   BRANCH OUT
NOGOOD1  CLC   1(3,7),=X'000000'        END OF CHAIN?
         BE    FIN                      IF SO GET OUT
LPAGN    L      7,0(7)                  OTHERWISE LOAD ADDRESS
         B      LOOPA                   TRY AGAIN
FIN     MVC   0(20,5),BLAN              SET MARKER
        PUT   OUTMOVE,OUTAREA           OUTPUT RECORD
        CLOSE  (OUTMOVE,)               CLOSE FILE
        FREEPOOL OUTMOVE
CURET    CUEXIT   RC=0
KEEP    DC    C' '
FPOINTER  DC   F'0'
BLAN      DC    CL20' '
COMPARE  DC  C' '
TRAP     DC    C' '
P30     DC    PL2'120'
KEEP1   DC      C' '
COUNT    DC   PL4'0'
        DS  0F
TABLE   DC    C'FEDCBA9876543210'
HALF    DC    H'0'
DOUBLE    DC   D'0'
       LTORG
NAME     DC    CL44' '
TIOTSTOR   DC    F'0'
TCBWORD   DC    F'0'
TOTAL    DC  F'0'
ACTIVE    DC  F'0'
WAITS    DC   F'0'
PROBS   DC   F'0'
BREAKS   DC   F'0'
ZEROS    DC    F'0'
P0STORE  DC  F'0'
JOBNAMES DC  CL19'P00               '
         DC  CL19'P01               '
         DC  CL19'P02               '
         DC  CL19'P03               '
         DC  CL19'P04               '
         DC  CL19'P05               '
         DC  CL19'P06               '
         DC  CL19'P07               '
         DC  CL19'P08               '
         DC  CL19'P09               '
         DC  CL19'P10               '
         DC  CL19'P11               '
         DC  CL19'P12               '
         DC  CL19'P13               '
         DC  CL19'P14               '
         DC  CL40' '
OUTMOVE   DCB  DDNAME=OUTMOVE,DSORG=PS,MACRF=PM
TIME      DC   F'0'
TIME1    DC   CL6'000000'
OUTAREA   DC  2500C' '
         END
