AMM.     TITLE 'RT5034M - SQA TRACE ROUTINE - A.MORRISH.'
RT5034M  CSECT
***********************************************************************
*                                                                     *
*  THIS PROGRAM TAKES SNAPS OF SYSTEM QUEUE SPACE AT INTERVALS CHOSEN *
* BY THE USER AND FOR A PERIOD CHOSEN BY THE USER.                    *
*                                                                     *
*  THE PROGRAM IS CONTROLLED BY A PARAMETER LIST OF THE FORM :        *
*                                                                     *
*        PARM='M1,M2.S'                                               *
*                                                                     *
*        WHERE M1 IS THE NUMBER OF MINUTES FOR WHICH THE TRACE IS TO  *
* BE ACTIVE, M2 IS THE NUMBER OF MINUTES BETWEEN SNAPS AND S IS THE   *
* NUMBER OF SECONDS BETWEEN SNAPS. THERE IS NO VERIFICATION OF VALUES *
* OTHER THAN THAT THEY ARE IN DECIMAL DIGITS NOT EXCEEDING 8          *
* CHARACTERS AND ARE CORRECTLY DELIMITED.                             *
*                                                                     *
***********************************************************************
         SPACE 3                                                      *
* REGISTER USAGE.
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2                   WORK REGISTER.
R3       EQU   3                   CHARACTER FOR DELIMITER COMPARE.
R4       EQU   4                   LINK REGISTER.
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9                   SQA DQE POINTER.
R10      EQU   10                  CVT POINTER.
R11      EQU   11                  LOOP COUNT FOR TIMING.LIMIT.
R12      EQU   12
R13      EQU   13                  SAVE AREA POINTER AND BASE REGISTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
         EJECT
         STM   R14,R12,12(R13)     SAVE REGISTERS.
         ST    R15,8(R13)          STORE SAVE AREA FORWARD CHAIN.
         ST    R13,4(R15)          STORE SAVE AREA BACKWARD CHAIN.
         LR    R13,R15             SET GR13 -> NEW SAVE AREA.
         USING RT5034M,R13         DEFINE BASE REGISTER.
         SPACE 1                                                      *
*                                                                     *
*        TRANSLATE AND CONVERT PARAMETERS.                            *
*                                                                     *
         SPACE 1                                                      *
         SR    R7,R7               SET GR7 = 0.  )
         SR    R6,R6               SET GR6 = 0.  ) DEFAULT VALUES.
         LA    R5,10               SET GR5 = 10. )
         L     R1,0(R1)            SET GR1 -> PARAMETER LIST.
         LH    R2,0(R1)            SET GR2 = LENGTH OF PARAMETERS.
         LTR   R2,R2               TEST FOR PARAMETERS OMITTED.
         BZ    PARMDEF             IF OMITTED THEN USE DEFAULTS.
         LA    R14,1               SET GR14 = 1 FOR INCREMENT VALUE.
         LA    R15,1(R2,R1)        SET GR15 AS A STOPPER.
         LA    R1,2(R1)            SET GR1 -> FIRST CHARACTER.
         LA    R3,C','             SET GR3 = STOPPING DELIMITER.
         BAL   R4,PARMSUB          LINK TO CONVERT PARAMETER.
         LR    R5,R0               SET GR5 = DURATION VALUE.
         LA    R3,C'.'             SET GR3 = STOPPING DELIMITER.
         BAL   R4,PARMSUB          LINK TO CONVERT PARAMETER.
         LR    R6,R0               SET GR6 = NUMBER OF MINUTES DELAY.
         SR    R3,R3               SET GR3 TO INHIBIT DELIMITER SEARCH.
         BAL   R4,PARMSUB          LINK TO CONVERT PARAMETER.
         LR    R7,R0               SET GR7 = NUMBER OF SECONDS DELAY.
PARMDEF  LR    R1,R5               SET GR1 = DURATION VALUE.
         LR    R15,R6              SET GR15 = NUMBER OF MINUTES DELAY.
         LA    R14,60              SET GR14 = 60.
         MR    R0,R14              SET GR1 = DURATION IN SECONDS.
         MR    R14,R14             SET GR15 = MINUTES OF DELAY TIME *60
         AR    R15,R7              SET GR15 = DELAY TIME.
         BNZ   *+8                 IF NOT ZERO THEN USE.
         LA    R15,1               SET GR15 = MINIMUM DELAY OF 1 SECOND
         DR    R0,R15              SET GR1 = NUMBER OF ITERATIONS.
         LTR   R11,R1              TEST FOR ZERO (DELAY > DURATION).
         BNZ   *+8                 IF NOT ZERO THEN VALID.
         LA    R11,1               SET FOR SINGLE TEST.
         LA    R14,100             SET GR14 = 100.
         MR    R14,R14             SET GR15 = 100 * DELAY TIME IN SECS.
         LR    R7,R15              SET GR7 = DELAY TI,E.
         SPACE 1                                                      *
*                                                                     *
*        CALCULATE WHETHER SPACE IS AVAILABLE FOR SYSPRINT.           *
*                                                                     *
         SPACE 1                                                      *
         GETMAIN MF=(E,GML)        GETMAIN TO FIND AVAILABLE SPACE.
         LTR   R15,R15             TEST FOR SPACE FOUND.
         BNZ   NOPRINT             IF SPACE NOT FOUND THEN NO SYSPRINT.
         FREEMAIN MF=(E,GML)       RELEASE OBTAINED SPACE.
         OPEN  MF=(E,OPENL)        OPEN SYSPRINT IF PRESENT.
NOPRINT  DS    0H
         SPACE 1                                                      *
*                                                                     *
*        SET UP REGISTERS FOR SQA TRACE.                              *
*                                                                     *
         SPACE 1                                                      *
         L     R10,16              SET GR10 -> CVT.
         TM    116(R10),X'10'      IS OPERATING SYSTEM MVT OR MP/65 ?
         BZ    MFT1                IF NOT THEN GO TO SET UP FOR MFT.
         L     R9,200(R10)         SET GR9 -> SECONDARY CVT.
         L     R9,108(R9)          SET GR9 -> GOVRFLB
         L     R9,4(R9)            SET GR9 -> SQA DQE.
         B     TIME                GO TO NOTE BASE TIME.
MFT1     L     R9,148(R10)         SET GR9 -> M/S RESIDENT DATA AREA.
         LA    R9,92(R9)           SET GR9 -> FQE POINTER - 8.
         L     R1,16(R9)           SET GR1 -> HIGH BOUNDARY.
         S     R1,12(R9)           SET GR1 = SIZE OF SQA FOR MFT.
         SRL   R1,10               SHIFT TO CONVERT TO K.
         CVD   R1,DW               CONVERT TO DECIMAL.
         ED    SQASIZE,DW+5        EDIT MFT SQA SIZE INTO MESSAGE.
         SPACE 1                                                      *
*                                                                     *
*        ENTER SUPERVISORY STATE FOR LATER SSM INSTRUCTIONS.          *
*                                                                     *
         SPACE 1                                                      *
TIME     LA    R2,$SPTAB-8         SET GR2 -> PSEUDO DECB.
         SVC   54                  ISSUE DISABLE SVC.
NOSTIMER TIME  BIN                 OBTAIN INITIAL TIME.
         SPACE 1                                                      *
*                                                                     *
*        STORE INCREMENTED TIME FOR WAIT AND SET UP TIME FOR PRINT.   *
*                                                                     *
         SPACE 1                                                      *
         AR    R0,R7               INCREMENT TIME VALUE FOR NEXT SNAP.
         LR    R5,R0               SAVE TIME OF NEXT SNAPSHOT.
         SSM   *+1                 PROVIBIT ALL INTERRUPTS.
         TIME  DEC                 OBTAIN TIME FOR PRINT OUT.
         STM   R0,R1,DW            STORE TIME AND DATE IN WORK AREA.
         UNPK  YYDDD,DW+5(3)       UNPACK DATE.
         MVO   DW+4(4),DW(3)       MOVE TIME FOR UNPACK.
         UNPK  HHMMSS,DW+4(4)      UNPACK TIME.
         SPACE 1                                                      *
*                                                                     *
*        STORE SQA SIZE (FOR MVT).AND TOTAL FREE SPACE.               *
*                                                                     *
         SPACE 1                                                      *
         TM    116(R10),X'10'      IS OPERATING SYSTEM MVT OR MP/65 ?
         BZ    MFT2                IF NOT THEN SKIP SET-UP FOR MVT.
         L     R1,12(R9)           SET GR1 = SQA SIZE.
         SRL   R1,10               SHIFT TO CONVERT TO K.
         CVD   R1,DW               CONVERT TO DECIMAL.
         MVC   SQASIZE+1(L'SQASIZE-1),MASK+L'MASK-L'SQASIZE+1 STORE MSK
         ED    SQASIZE,DW+6        EDIT MVT SQA SIZE INTO MESSAGE.
MFT2     SR    R2,R2               SET GR2 = 0.
         L     R1,0(R9)            SET GR1 -> FIRST FQE.
         SR    R8,R8               SET GR8 = 0.
         SR    R6,R6               SET GR6 = 0.
SQALOOP  LTR   R1,R1               TEST FOR END OF FQE CHAIN.
         BZ    STFREE              IF END THEN GO TO STORE.
         L     R0,4(R1)            SET GR0 = SIZE OF FREE BLOCK.
         CLR   R0,R8               COMPARE WITH MAXIMUM SO FAR.
         BNH   *+6                 IF NOT GREATER THEN LEAVE.
         LR    R8,R0         SET GR8 = MAXIMUM SO FAR.
         AR    R2,R0               INCREMENT TOTTAL FREE SPACE COUNT.
         LA    R6,1(R6)            INCREMENT TOTAL NUMBER OF BLOCKS.
         L     R1,0(R1)            SET GR1 -> NEXT FQE.
         B     SQALOOP             GO TO REPEAT TEST.
STFREE   DC    X'80FF',S(*-1)      ALLOW ALL INTERRUPTS.
         CVD   R2,DW               CONVERT FREE AREA SIZE TO DECIMAL.
         MVC   SQAFREE,MASK        STORE MASK FOR EDIT.
         ED    SQAFREE,DW+4        EDIT FREE AREA SIZE TO MESSAGE.
         CVD   R8,DW               CONVERT MAXIMUM BLOCK FOR EDIT.
         MVC   SQAMAX,MASK         STORE MASK FOR EDIT.
         ED    SQAMAX,DW+4         EDIT MAXIMUM BLOCK SIZE TO MESSAGE.
         CVD   R6,DW               CONVERT NUMBER OF BLOCKS FOR EDIT.
         MVC   SQANUM+1(L'SQANUM-1),MASK+L'MASK-L'SQANUM+1  SRORE MASK.
         ED    SQANUM,DW+5         EDIT NUMBER OF BLOCKS TO MESSAGE.
         SPACE 1                                                      *
*                                                                     *
*        WRITE MESSAGE.                                               *
*                                                                     *
         SPACE 1                                                      *
         TM    PRT+48,X'10'        IS PRINT OPEN ?
         BZ    WTO                 IF NOT THEN GO TO WRITE TO OPERATOR.
         PUT   PRT,YYDDD           WRITE OUTPUT MESSAGE TO SYSPRINT.
         B     STIME               GO TO SET UP NEXT WAIT.
WTO      WTO   MF=(E,MSG)          WRITE OUTPUT TO OPERATOR.
         SPACE 1                                                      *
*                                                                     *
*        SET UP WAIT INTERVAL.                                        *
*                                                                     *
         SPACE 1                                                      *
STIME    L     R3,DAYTIME          SET GR3 = 24 * 60 * 60 * 100.
         CLR   R5,R3               COMPARE FOR NEWDAY.
         BL    *+6                 IF LESS THEN USE.
         SR    R5,R3               DECREMENT NEXT SNAP TIME FOR NEW DAY
         LR    R2,R5               SET GR2 TO FIND TIME TO NEXT SNAP.
         TIME  BIN                 OBTAIN CURRENT TIME.
         SR    R2,R0               FIND TIME TO NEXT SNAPSHOT.
         BNM   *+6                 IF NOT MINUS THEN NO INCREMENT.
         AR    R2,R3               INCREMENT FOR NEW DAY.
         ST    R2,DW               STORE TIME TO WAIT.
         BCT   R11,STIMER          GO TO CHECK FOR NEXT SNAPSHOT
         SPACE 1                                                      *
*                                                                     *
*        END UP.                                                      *
*                                                                     *
         SPACE 1                                                      *
         LPSW  PSW                 LOAD RESUME PSW.
CLOSE    CLOSE MF=(E,OPENL)        CLOSE OUTPUT DATA SET.
         GOBACK                    RETURN.
         SPACE 3                                                      *
STIMER   STIMER WAIT,BINTVL=DW     WAIT UNTIL NEXT SNAPSHOT TIME.
         B     NOSTIMER            GO TO PRODUCE NEXT SNAPSHOT.
         SPACE 1                                                      *
*                                                                     *
*        PARAMETER PROCESSING SUB-ROUTINE.                            *
*                                                                     *
         SPACE 1                                                      *
PARMSUB  LR    R2,R1               SAVE START ADDRESS OF PARAMETER.
         CLR   R1,R15              COMPARE FOR END OF PARAMETERS.
         BCR   2,R4                IF END THEN RETURN.
PARMSUBC TM    0(R1),X'F0'         IS CHARACTER NUMERIC ?
         BNO   PARMSUBA            IF NOT THEN GO TO TEST DELIMITER.
         BXLE  R1,R14,PARMSUBC     LOOP UNTIL END FOUND.
         B     PARMSUBB            GO TO PROCESS LAST PARAMETER.
PARMSUBA EX    R3,PARMSUBD         COMPARE FOR VALID DELIMITER.
         BE    PARMSUBB            IF EQUAL THEN LEAVE.
         CLI   0(R1),C' '          IS CHARACTER A BLANK ?
         BNE   PARMDEF             IF NOT THEN IGNORE REMAINDER.
         LR    R15,R1              SET GR15 AS A STOPPER.
PARMSUBB BCTR  R1,R0               DECREMENT GR1.
         SR    R0,R0               SET GR0 =0 FOR OMITTED PARM.
         SR    R1,R2               SET GR1 = LENGTH FOR EXECUTE.
         BM    PARMSUBE            IF MINUS THEN NO PACK.
         EX    R1,PARMPACK         PACK TIME VALUE INTO DOUBLE WORD.
         CVB   R0,DW               CONVERT TO BINARY.
PARMSUBE LA    R1,2(R1,R2)         SET GR1 TO START NEXT PARAMETER.
         BR    R4                  RETURN.
PARMSUBD CLI   0(R1),0             MODEL STATEMENT.
PARMPACK PACK  DW,0(0,R2)          MODEL STATEMENT.
         SPACE 1                                                      *
*                                                                     *
*        STORE OVER-RIDE BLOCK SIZE AND BUFFER LENGTH IN OUTPUT DCB.  *
*                                                                     *
         SPACE 1                                                      *
DCBEXIT  DCBEXITS
         SPACE 1                                                      *
*                                                                     *
*        ROUTINE TO ENTER SUPERVISORY STATE.                          *
*                                                                     *
         SPACE 1                                                      *
$SPRTN   LPSW  $PSW-$SPRTN(R12)    FORCE PROTECT KEY ZERO TO RESET RB.
         L     R2,16               SET GR2 -> CVT
         L     R2,0(R2)            SET GR2 -> TCB POINTERS.
         L     R3,4(R2)            SET GR3 -> CURRENT TCB.
         L     R2,0(R3)            SET GR2 -> CURRENT REQUEST BLOCK.
         L     R2,28(R2)           SET GR2 -> PREVIOUS REQUEST BLOCK.
         NI    17(R2),X'FE'        SET SUPERVISORY MODE WITH USER KEY.
         MVZ   PSW+1-$SPRTN(1,R12),28(R3) STORE PROTECT KEY FOR RESUME.
         BR    R13                 RETURN.
         SPACE 1                                                      *
*                                                                     *
*        CONSTANTS AND WORK AREAS.                                    *
*                                                                     *
         SPACE 1                                                      *
DW       DS    D
PSW      DC    0D'0',X'FF050000',A(CLOSE)    RESUME PSW.
$PSW     DC    0D'0',X'FF040000',A($SPRTN+4)
OPENL    OPEN  (PRT,OUTPUT),MF=L
$SPTAB   DC    2A(*-40),A($SPRTN)  PSEUDO DECB AND DCB.
PRT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=88,RECFM=FB,    *
               BLKSIZE=1760,EXLST=DCBEXIT
MSG      DC    0F'0',AL2(MSGEND-MSG,X'0200')
         DC    C'*** RT5034M SQA ANALYSIS - '
YYDDD    DC    C'YYDDD',C'-'
HHMMSS   DC    C'HHMMSS',C'. SQA='
SQASIZE  DC    X'40202120',C'K. FREE='
SQAFREE  DC    X'40202020206B202120',C' BYTES. MAX='
SQAMAX   DC    X'40202020206B202120',C' BYTES. NO.='
SQANUM   DC    X'4020206B202120',C' BLOCKS. ',C'****'
MSGEND   DS    0C
MASK     DC    X'40202020206B202120'
GML      GETMAIN EC,LV=4096,A=DW,MF=L
DAYTIME  DC    A(24*60*60*100)     ONE DAY IN HUNDREDTHS OF SECONDS.
         END   RT5034M
