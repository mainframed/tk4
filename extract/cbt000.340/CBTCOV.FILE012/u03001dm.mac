./     ADD     LIST=ALL,LEVEL=01,NAME=WAYIN
./  NUMBER  NEW1=10,INCR=10
         MACRO
&NAME    WAYIN &BASER,&ID,&VER,&MOD,&EQU,&RENT
.*
.*
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - WAYIN.
.*         AUTHOR - IAIN MACKINTOSH.
.*         DATE   - FEBRUARY, 1972.
.*
.*         FUNCTION -
.*
.*                  GENERAL PURPOSE ENTRY MACRO FOR ASSEMBLER MODULES.
.*                  COMPATIBLE WITH ALL CURRENT HIGH LEVEL LANGUAGES
.*                  AND ALSO PREVIOUS DOS AND PRE-FEBRUARY 1972 OS
.*                  VERSIONS OF WAYIN.
.*
.*         SAMPLE OF USE -
.*                  (NAME)   WAYIN   10,EXAMPLE,07,02,EQU
.*                  THIS EXAMPLE WOULD GIVE BASE REGISTER 10 FOR A
.*                  MODULE IDENTIFIED 'EXAMPLE' WITH VER-MOD LEVEL
.*                  07.02 AND WOULD ALSO GENERATE REGISTER EQUATES.
.*
.*         PARAMETERS USED -
.*                  FIVE PARAMETERS ARE POSSIBLE, EACH POSITIONAL.
.*
.*                  1.  BASE REGISTER(S) - ANY SELF DEFINING TERM,
.*                      EXPRESSED AS A SUBLIST IF MULTIPLE BASE
.*                      REGISTERS ARE REQUIRED E.G. 12 OR (4,5,6).
.*                      REGISTER EQUATES ARE NOT ALLOWED, NOR ARE
.*                      REGISTERS 14-1.  R13 IS USED AS DEFAULT.
.*                  2.  IDENTIFIER - ANY ALPHAMERIC STRING ASSEMBLED
.*                      AS AN 8 BYTE CONSTANT - THE CURRENT CSECT NAME
.*                      IS CHOSEN BY DEFAULT.
.*                  3.  VERSION LEVEL - ANY TWO-DIGIT NUMERIC TO DENOTE
.*                      THE VERSION LEVEL.  DEFAULT IS ZERO.
.*                  4.  MODIFICATION LEVEL - AS VERSION LEVEL.
.*                  5.  REGISTER EQUATES - THE LITERAL 'EQU' CAUSES
.*                      WAYIN TO GENERATE EQUATES IN THE FORM 'R1,R2'
.*                      ETC. FOR REGISTERS 0-15.  IF OMITTED OR
.*                      INVALID, NO ACTION IS TAKEN.
.*
.*         RESTRICTIONS -
.*                  IF MULTIPLE BASE REGISTERS ARE CHOSEN, THEN R13
.*                  CANNOT BE SPECIFIED.  IF WAYIN IS GENERATED MORE
.*                  THAN ONCE WITHIN A CSECT, THEN MULTI-BASE REGISTERS
.*                  ARE NOT PERMITTED AFTER THE FIRST TIME.
.*
.*         ADDITIONAL REMARKS -
.*                  REGISTER EQUATES USED AS STANDARD.
.*                  ANY NUMBER OF WAYIN'S POSSIBLE WITHIN A MODULE
.*                  - ONLY THE FIRST GENERATES A SAVEAREA.
.*                  WAYOUT NOT NOW RESTRICTED - ANY NUMBER OF WAYOUT'S
.*                  MAY BE GENERATED.
.*                  FULLY COMPATIBLE WITH PREVIOUS VERSIONS OF WAYIN -
.*                  BUT NOTE THAT R13 IS NOW DEFAULT.
.*                  COMPATIBLE WITH LA9REG VIA GLOBAL &WAYIN3.
.*
.*         ***************      END OF ABSTRACT         ***************
.*
.*
         GBLB  &WAYIN1                  TRUE IF ENTERED TWICE
         GBLB  &WAYIN2                  TRUE IF LAST BASE REG WAS 13
         GBLB  &WAYIN3                  TRUE IF EQUATES GENERATED
         GBLB  &WAYIN4             TRUE IF RE-ENTRANT OPTION TAKEN
.*
         LCLA  &BASE                    CURRENT BASE REGISTER
         LCLA  &INDEX                   INDEX TO BASE REG SUBLIST
         LCLA  &REGNO                   NUMBER OF BASE REGISTERS
         LCLC  &IDCON                   IDENTIFIER
         LCLC  &MODCON                  MODIFICATION
         LCLC  &VERCON                  VERIFICATION
         LCLC  &MULTI                   USED FOR MULTIPLE BASE REGS
.*
         AIF   (NOT &WAYIN4).ZSRE000   ENTER ONCE ONLY FOR RENT
         MNOTE 8,'WAYIN .. SECOND ENTRY INVALID WITH RENT OPTION'
         MEXIT
.ZSRE000 ANOP
         AIF   (T'&RENT EQ 'O').ZSREEND
         AIF   ('&RENT' EQ 'RENT').ZSRE010
         MNOTE 4,'WAYIN .. SIXTH OPERAND IS &RENT .. RENT ASSUMED'
.ZSRE010 ANOP
&WAYIN4  SETB  1                   INDICATE RE-ENTRANT CODE
         AIF   (&BASE NE 13).ZSRE020
         MNOTE 8,'WAYIN .. RENT SPECIFIED - R13 CANNOT BE BASE REG'
         MEXIT
.ZSRE020 ANOP
.ZSREEND ANOP
         AIF   (N'&BASER GT 1 AND &WAYIN1).ERROR1
         AIF   (T'&BASER EQ 'O').SETBASE
         AIF   (N'&BASER GT 1 AND &BASER(1) EQ 13).ERROR2
         AIF   (N'&BASER GT 4).ERROR7
         AIF   (&BASER(1) LT 2 OR &BASER(1) GT 13).ERROR3
&BASE    SETA  &BASER(1)
         AGO   .TEST13
.*
.SETBASE ANOP
&BASE    SETA  13
.*
.TEST13  AIF   (&WAYIN2 AND &BASE NE 13).ERROR4
         AIF   (NOT &WAYIN2 AND &WAYIN1 AND &BASE EQ 13).ERROR4
.*
&IDCON   SETC  '&SYSECT'
&MODCON  SETC  '00'
&VERCON  SETC  '00'
.*
*                                WAYIN GENERAL PURPOSE MACRO    2.0
*                                 ENTRY POINT LINKAGE
         AIF   (T'&EQU EQ 'O' OR '&EQU' NE 'EQU').TRYID
         AIF   (&WAYIN3).TRYID
*
*                                  REGISTER EQUATES -
*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
*
&WAYIN3  SETB  1
.*
.TRYID   AIF   (T'&ID EQ 'O' OR K'&ID GT 8).TRYMOD
&IDCON   SETC  '&ID'
.TRYMOD  AIF   (T'&MOD EQ 'O').TRYVER
         AIF   (T'&MOD NE 'N' OR K'&MOD GT 2).ERROR5
&MODCON  SETC  '&MOD'
.TRYVER  AIF   (T'&VER EQ 'O').USINGS
         AIF   (T'&VER NE 'N' OR K'&VER GT 2).ERROR6
&VERCON  SETC  '&VER'
.*
.USINGS  ANOP
         AIF   (&BASE EQ 13).BASE13
         AIF   (N'&BASER GT 1).MULTBAS
         USING *,R&BASE .
         AGO   .CONSTS
.MULTBAS ANOP
&MULTI   SETC  '&BASER'(2,K'&BASER-2)
         USING *,&MULTI
         AGO   .CONSTS
.BASE13  USING *,R15
*
*
&NAME    B     *+20 .              BRANCH ROUND CONSTANTS
         AGO   .ZS00
.CONSTS  ANOP
&NAME    B     20(R15) .           BRANCH ROUND CONSTANTS
.ZS00    ANOP
         DC    AL1(14) .           LITERAL LENGTH
         DC    CL8'&IDCON' .     ENTRY NAME
         DC    CL3' &VERCON' .          VERSION LEVEL
         DC    CL4'.&MODCON' .          MODIFICATION LEVEL
*
         STM   R14,R12,12(R13) .   SAVE REGISTERS
         AIF   (&BASE EQ 13).NOLOAD
*                                  SET UP BASE REGISTER(S) -
&REGNO   SETA  N'&BASER
         LR    R&BASE,R15 .
&REGNO   SETA  &REGNO-1
&INDEX   SETA  2
.BASLOOP AIF   (&REGNO EQ 0).NOLOAD
         LA    R&BASER(&INDEX),1 .
         LA    R&BASER(&INDEX),4095(R&BASER(&INDEX),R&BASER(&INDEX-1))
&REGNO   SETA  &REGNO-1
&INDEX   SETA  &INDEX+1
         AGO   .BASLOOP
.*
.NOLOAD  ANOP
         AIF   (&WAYIN4).ZSRE030
         AIF   (&WAYIN1).ADCON
         LA    R14,SAVEAREA .      ADDRESS OUR SAVE AREA
         AGO   .CHAIN
.ZSRE030 ANOP
         LA    R0,72 .             OBTAIN 9 DOUBLE WORDS
         BAL   R1,*+4 .            INDICATE
         SVC   10 .                GETMAIN
         LR    R14,R1 .            POINT AT GOTTEN CORE
         L     R1,24(R13) .        RESTORE REGISTER 1
*
         USING SAVEAREA,R13 .      ADDRESSABILITY
SAVEAREA DSECT , .                 FOR DSECT
         DS    9D .                OF 9 DOUBLEWORDS
&SYSECT  CSECT , .                 CONTINUE THE CSECT
*
         AGO   .CHAIN
.ADCON   ANOP
         CNOP  0,4 .               ALIGN FOR ADCON
         B     *+8 .               BRANCH ROUND IT
         DC    A(SAVEAREA) .       GENERATED BY FIRST WAYIN
         L     R14,*-4 .           LOAD SAVE AREA ADDRESS
.CHAIN   ANOP
         ST    R14,8(R0,R13) .     CHAIN L.S.A.
         ST    R13,4(R0,R14) .     CHAIN H.S.A.
         AIF   (&WAYIN1 OR &WAYIN4).NOSAVE
         CNOP  0,4 .               ALIGN FOR SAVEAREA
         BAL   R13,*+76 .          INITIALISE R13 AND BRANCH
SAVEAREA DC    18F'0' .            ROUND SAVEAREA
         AIF   (NOT &WAYIN1).DROP
.NOSAVE  ANOP
         LR    R13,R14 .           SET SAVEAREA ADDRESS
.DROP    AIF   (&BASE NE 13).EXEUNT
         DROP  R15 .               DISPENSE WITH ENTRY ADDRESSIBILITY
         AIF   (&WAYIN1 AND &WAYIN2).EXEUNT
         USING SAVEAREA,R13 .      ADDRESS CSECT FROM SAVEAREA
&WAYIN2  SETB  1
.EXEUNT  ANOP
&WAYIN1  SETB  1
*
         MEXIT
.ERROR1  MNOTE 8,'WAYIN .. MULTIPLE BASE REGISTERS INVALID AFTER FIRST X
               EXPANSION'
         MEXIT
.ERROR2  MNOTE 8,'WAYIN .. R13 NOT ALLOWED AS FIRST MULTIPLE BASE REGISX
               TER'
         MEXIT
.ERROR3  MNOTE 8,'WAYIN .. BASE REGISTER OUTWITH PERMITTED RANGE'
         MEXIT
.ERROR4  MNOTE 8,'WAYIN .. INVALID RE-USE OF REGISTER 13'
         MEXIT
.ERROR5  MNOTE 0,'WAYIN .. INVALID MODIFICATION LEVEL .. ZERO ASSUMED'
         AGO   .TRYVER
.ERROR6  MNOTE 0,'WAYIN .. INVALID VERSION LEVEL .. ZERO ASSUMED'
         AGO   .USINGS
.ERROR7  MNOTE 8,'WAYIN .. MORE THAN FOUR BASE REGISTERS'
         MEND
./     ADD     LIST=ALL,LEVEL=01,NAME=WAYOUT
./  NUMBER  NEW1=10,INCR=10
         MACRO
&NAME    WAYOUT &RET
         GBLB  &WAYIN1
         GBLB  &WAYIN4
         LCLC  &RETCOD
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - WAYOUT.
.*         AUTHOR - CHRIS THOMSON.
.*                  THIS VERSION FOR OS BY IAIN MACKINTOSH.
.*         DATES  - A. MARCH, 1970.
.*                  B. JANUARY, 1972.
.*
.*         FUNCTION -
.*                  GENERAL EXIT MACRO FOR ASSEMBLER MODULES.
.*                  PROVIDES ADDRESSING COMPATIBILITY FOR WAYIN.
.*
.*         SAMPLE OF USE -
.*                  WAYOUT ,       RETURN CODE OF ZERO ASSUMED
.*                  WAYOUT (R15)   R15 PRE-LOADED BY USER WITH CODE
.*                  WAYOUT 32      RETURN CODE LOADED BY WAYOUT
.*
.*         PARAMETERS USED -
.*                  AS ABOVE TO DENOTE FORM AND/OR VALUE OF RETURN
.*                  CODE TO BE PASSED TO HIGHER LEVEL.  NOTE THAT DOS
.*                  VERSIONS OF WAYOUT NOW NEED TO SPECIFY AN OPERAND
.*                  OR COMMA FOR DEFAULT VALUES.  NOTE ALSO THAT (15)
.*                  AND (R15) ARE BOTH ACCEPTABLE AS REGISTER
.*                  NOTATION.  RETURN CODE VALUES MUST RANGE 1-4095.
.*
.*         ADDITIONAL REMARKS -
.*                  REGISTER EQUATES USED AS STANDARD.
.*                  SAVE AREA AUTOMATICALLY FLAGGED TO SHOW ENTRY.
.*                  LABEL 'SAVEAREA' GENERATED FOR 72-BYTE BUCKET.
.*
.*         ***************      END OF ABSTRACT         ***************
.*
.*
&RETCOD  SETC  '&RET'
*                                WAYOUT GENERAL PURPOSE MACRO    1.0
*                                  STANDARD RETURN FROM A MODULE.
         AIF   (NOT &WAYIN4).ZSRE00
&NAME    LR    R1,R13 .            POINT AT GOTTEN CORE
         L     R13,4(R13) .        RESET SAVE AREA ADDRESS
         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN
         LA    R0,72 .               AND LENGTH
         SVC   10 .                FREEMAIN CORE
         AGO   .TESTRET
.ZSRE00  ANOP
&NAME    L     R13,4(R13) .        RESET SAVEAREA ADDRESS
         MVI   12(R13),X'FF' .     DENOTE SUCCESSFUL RETURN
.TESTRET AIF   ('&RET' EQ '(15)' OR '&RET' EQ '(R15)').REGCODE
         AIF   (T'&RET EQ 'O').ZS01
         AIF   (T'&RET NE 'N').ERROR
         AIF   ('&RET' GE '0' AND '&RET' LE '4095').NOCODE
.ERROR   MNOTE 0,'WAYOUT .. INVALID RETURN CODE .. ZERO ASSUMED'
.ZS01    ANOP
&RETCOD  SETC  '0'
.NOCODE  ANOP
         LM    R14,R12,12(R13) .   RE-LOAD REGISTERS
         LA    R15,&RETCOD .            LOAD SUPPLIED RETURN CODE
         AGO   .RETURN
.REGCODE ANOP
         L     R14,12(R0,R13) .    RE-LOAD R14
         LM    R0,R12,20(R13) .    RE-LOAD R0-R12
.RETURN  ANOP
         BR    R14 .               RETURN TO CALLER
         AIF   (&WAYIN1).NOSAVE
*
SAVEAREA DS    9D .                REGISTER BUCKET FOR THIS MODULE
.NOSAVE  MEND
./     ADD     LIST=ALL,LEVEL=01,NAME=WAYUP
./   NUMBER   NEW1=10,INCR=10
         MACRO
&NAME    WAYUP &MODULE,&PARAMS
.*
.*         ***************      PROGRAM ABSTRACT        ***************
.*
.*         TITLE  - WAYUP (MACRO).
.*         AUTHOR - IAIN MACKINTOSH (OS VERSION).
.*         DATE   - FEBRUARY, 1972.
.*
.*         FUNCTION -
.*                  PROVIDES AN EXTENSION TO CALL MACRO BY ENABLING
.*                 DSECT ADDRESSIBILITY.
.*
.*         SAMPLE OF USE -
.*                  WAYUP MODULE,(PARAM1,PARAM2,....)
.*
.*         PARAMETERS -
.*                  AS PER CALL MACRO, BUT NOTE THAT -
.*
.*                  1.  REGISTER NOTATION FULLY SUPPORTED IN THIS
.*                      VERSION.  BOTH MODULE AND PARAMETER ADDRESSES
.*                      CAN BE SPECIFIED IN ANY REGISTER, AND MAY BE
.*                      INTERMIXED WITH ASSEMBLER LABELS.  THE USE
.*                      OF REGISTER EQUATES IS PERMITTED ALSO.
.*                  2.  THE VL PARAMETER OF CALL IS UNNECESSARY AS
.*                      WAYUP AUTOMATICALLY FLAGS THE FINAL ADDRESS
.*                      CONSTANT WITH X'80'.
.*                  3.  THE ID PARAMETER OF CALL IS NOT SUPPORTED.
.*
.*         OTHER REMARKS -
.*                  ENFORCES THE USE OF REGISTER EQUATES.
.*                  USES SYSTEM REGISTERS 14 THROUGH 1.
.*                  GENERATES RECURSIVE LABEL 'SPGANNNN'.
.*
.*         **************       END OF ABSTRACT         ***************
.*
.*
         LCLA  &REG(4)                  REGISTERS 14 THROUGH 1
         LCLA  &SUBLIST                 NUMBER OF PARAMETERS
         LCLA  &PARMNO                  CURRENT PARAMETER
         LCLA  &LOOPCNT                 STM LOOP COUNTER
         LCLA  &DISPL                   DISPLACEMENT INTO PARM LIST
         LCLB  &MODSW                   SET ACCORDING TO MODULE
         LCLC  &DUMPARM                 INTERMEDIATE PARAMETER
.*
         AIF   (T'&MODULE NE 'O').COMMENT
         MNOTE 8,'WAYUP .. NO MODULE SPECIFIED .. NO CODE GENERATED'
         MEXIT
.COMMENT ANOP
*                                WAYUP GENERAL PURPOSE MACRO    2.0
*                                  EXTENDED LINKAGE FACILITIES
&NAME    DS    0H
         AIF   (T'&PARAMS EQ 'O').NOPARMS
&REG(1)  SETA  14
&REG(2)  SETA  15                       SET UP THE STM
&REG(3)  SETA  0                        REGISTER VARIABLES
&REG(4)  SETA  1
&SUBLIST SETA  N'&PARAMS
&PARMNO  SETA  1
         AIF   ('&MODULE'(1,1) NE '(').LOOP1
         AIF   ('&MODULE' EQ '(R15)' OR '&MODULE' EQ '(15)').SAVE
         AIF   ('&MODULE' EQ '(R14)' OR '&MODULE' EQ '(14)').SAVE
         AIF   ('&MODULE' EQ '(R0)' OR '&MODULE' EQ '(0)').SAVE
         AIF   ('&MODULE' NE '(R1)' OR '&MODULE' NE '(1)').LOOP1
.SAVE    ANOP
&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)
&LOOPCNT SETA  (&SUBLIST*4)+4
         ST    &DUMPARM,SPGA&SYSNDX+&LOOPCNT
&MODSW   SETB  1
.*
.LOOP1   ANOP
&LOOPCNT SETA  0
.*
.LOOP2   ANOP
&LOOPCNT SETA  &LOOPCNT+1
         AIF   (K'&PARAMS(&PARMNO) GT 8).NOSETC
&DUMPARM SETC  '&PARAMS(&PARMNO)'
         AIF   ('&DUMPARM'(1,1) EQ '(').REGNOTN
         LA    R&REG(&LOOPCNT),&DUMPARM
         AGO   .BUMPUP
.NOSETC  LA    R&REG(&LOOPCNT),&PARAMS(&PARMNO)
         AGO   .BUMPUP
.REGNOTN ANOP
&DUMPARM SETC  '&DUMPARM'(2,K'&PARAMS(&PARMNO)-2)
         LR    R&REG(&LOOPCNT),&DUMPARM
.BUMPUP  ANOP
         AIF   (&SUBLIST EQ 1 AND &LOOPCNT EQ 1).ONLYONE
.*
&PARMNO  SETA  &PARMNO+1
&SUBLIST SETA  &SUBLIST-1
         AIF   (&SUBLIST EQ 0).STOREG
         AIF   (&LOOPCNT LT 4).LOOP2
.STOREG  ANOP
         STM   R14,R&REG(&LOOPCNT),SPGA&SYSNDX+&DISPL
&DISPL   SETA  &DISPL+(&LOOPCNT*4)
         AIF   (&SUBLIST EQ 0).ALLDONE
         AGO   .LOOP1
.ONLYONE ANOP
         ST    R14,SPGA&SYSNDX+&DISPL
&DISPL   SETA  &DISPL+4
.ALLDONE ANOP
         CNOP  0,4 .               FULLWORD ALIGNMENT
         OI    SPGA&SYSNDX+(&DISPL-4),X'80' .  FLAG LAST ADCON
         AIF   ('&MODULE'(1,1) NE '(' OR &MODSW).BIGBAL
         BAL   R1,*+4+&DISPL
         AGO   .PARMLST
.BIGBAL  BAL   R1,*+8+&DISPL
.PARMLST ANOP
&DISPL   SETA  &DISPL/4
SPGA&SYSNDX DS &DISPL.F
.NOPARMS ANOP
         AIF   (&MODSW).LABEL
         AIF   ('&MODULE'(1,1) NE '(').LABEL
         AIF   ('&MODULE' EQ '(15)' OR '&MODULE' EQ '(R15)').BALR
&DUMPARM SETC  '&MODULE'(2,K'&MODULE-2)
         LR    R15,&DUMPARM
         AGO   .BALR
.LABEL   ANOP
         AIF   (T'&PARAMS NE 'O').SETCON
         CNOP  0,4 .               FULLWORD ALIGNMENT
         B     *+8 .               BRANCH ROUND ADCON
.SETCON  AIF   (&MODSW).ATYPE
         DC    V(&MODULE) .
         AGO   .LOAD
.ATYPE   ANOP
         DC    A(0) .
.LOAD    ANOP
         L     R15,*-4 .           LOAD ENTRY ADDRESS IN R15
.BALR    ANOP
         BALR  R14,R15 .           EXIT TO CALLED MODULE
         MEND
