XDATEDIT CSECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*    XDATEDIT  CONVERTS  DATES  FROM YYDDDS ,WHERE S=SIGN             *
*    DDD = DAY NO FROM 1-365 (OR 366 IF A LEAP YEAR)  &               *
*    YY = LAST 2 DIGITS OF THE YEAR  AND ALL ARE PACKED DECIMAL ,     *
*    TO   CHARACTERS    DD/MM/YY                                      *
*                                                                     *
*    THE DATE IS INPUT  RIGHT JUSTIFIED IN A DOUBLEWORD WITH          *
*    REGISTER 1 POINTING TO A FULLWORD CONTAINING THE ADDRES          *
*    OF THE DOUBLEWORD CONTAINING THE DATE                            *
*                                                                     *
*    RETURN IS BY REGISTER 14.  THE DATE IS RETURNED IN THE           *
*    DOUBLEWORD. IF SUCCESSFUL RC=0                                   *
*    IF UNSUCCESSFUL RC=4  & THE INPUT DATA IS RETURNED IN  EBCDIC    *
*    IN THE DOUBLEWORD IN THE FORM ' YY.DDD '                         *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         USING *,15
         B     SAVE
         DC    C'XDATEDIT'
         DS    0H
SAVE     STM   14,12,12(13)        SAVE REGISTERS ENTRY VALUES
         DROP  15
         BALR  12,0
         USING *,12
         L     11,0(1)             R 11 -> DWORD CONTAING P.DEC YYDDD
         MVI   0(11),X'00'         MAKE SURE 1ST BYTE IS ZERO
         MVC   1(4,11),0(11)       AND ALL OTHER LEADING BYTES AS WELL
         OI    7(11),X'0F'         MAKE SURE SIGN IS HEX F
         L     2,4(11)             STORE 00YYDDD+  IN REG 2
         CVB   5,0(11)             BINARY VALUE  IN REG 5
         SR    4,4                 CLEAR  REG 4
         D     4,FW1000            4 CONTAINS DDD VALUE  5 YY VALUE
         LA    7,YEAR              7 POINT TO TABLE TOTAL DAYS YEAR
*                                  AND IN EACH MONTH IN TURN
         LTR   6,5                 IS YY=00
         BZ    NOTLYEAR            IF YES IT ISNT  A LEAP YEAR
         N     6,FW3      FW=3 SO IF 6 ISNT ZERO IT IS NOT A LEAP YEAR
         BM    NOTLYEAR    IF ANY ONES PRESENT NOT A LEAP YEAR
         LA    7,LEAPYEAR     7 -> A TABLE WITH TOTAL DAYS IN  A
*                             LEAP YEAR & IN EACH MONTH IN TURN
NOTLYEAR LTR   4,4           CHECK N0 OF DAYS IS NON-ZERO
         BZ    ERROR          IF YES THERE IS AN ERROR
         CH    4,0(7)         COMPARE WITH NO OF DAYS IN YEAR
         BH    ERROR          IF MORE THAN THAT ANOTHER ERROR
         LA    3,1            START VALUE 3 AS INDEX=1 = JANUARY
         SR    6,6
LOOP     IC    6,1(7,3)       6 = NO OF DAY IN MONTH. 3=MONTH
         CR    4,6            COMPARE WITH NO OF DAYS IN 3'S MONTH
         BNH   EDITDA        IF LES OR = TO DAYS IN THIS MONTH GOTO
*                            EDITDA
         SR    4,6            IF HIGH SUBTRACT NO OF DAYS IN 3'S MONTH
         LA    3,1(3)         3 IS NEXT MONTHS NO
         B     LOOP           LOOP AND COMPARE WITH NEW MONTH
EDITDA   MH    4,HW1000      4 CONTAINS DD000
         AR    4,3            NOW  DD0MM
         MH    4,HW1000
         AR    4,5            NOW  DD0MM0YY    THIS IN BINARY
         CVD   4,0(11)        DWORD AT 0(11) CONTAINS IT IN PACKED DEC
         MVC   0(5,11),3(11)
         UNPK  0(8,11),0(5,11)     0(11) CONTAINS BYTES DD0MM0YY EBCDIC
         OI    7(11),X'F0'         CHANGE RIGHTMOST BYTE TO EBCDIC
         MVI   2(11),C'/'          CHANGE F0 T0 /
         MVI   5(11),C'/'
         SR    15,15               RC =0
END      L     14,12(13)           RESTORE  14 TO ENTRY VALUE
         LM    0,12,20(13)         RESTORE 0-12 TO ENTRY VALUES
         BR    14                  RETURN
ERROR    ST    2,0(11)             PUT INPUT DATA IN 1ST 4 BYTES
         UNPK  2(5,11),1(3,11)     UNPACK INTO BYTES 2-6(11)
         MVC   1(2,11),2(11)       SEPARATE YY FROM DDD BY 1 BYTE
         MVI   0(11),C' '
         MVI   3(11),C'.'
         MVI   7(11),C' '          RETURN INPUT DATA IN FORM :
*                                  ' YY.DDD '
*        1 -> FWORD CONTAINING ADDRESS OF DWORD CONTAINING ABOVE
         LA    15,4                RC = 4
         B     END
YEAR     DS    0CL14
         DC    H'365'         ORDINARY YEAR
         DC    AL1(31)        JANUARY
         DC    AL1(28)        FEBRUARY
         DC    AL1(31)        MARCH
         DC    AL1(30)        APRIL
         DC    AL1(31)        MAY
         DC    AL1(30)        JUNE
         DC    AL1(31)        JULY
         DC    AL1(31)        AUGUST
         DC    AL1(30)        SEPTEMBER
         DC    AL1(31)        OCTOBER
         DC    AL1(30)        NOVEMBER
         DC    AL1(31)        DECEMBER
LEAPYEAR DS    0CL14
         DC    H'366'         LEAP YEAR
         DC    AL1(31)        JANUARY
         DC    AL1(29)        FEBRUARY
         DC    AL1(31)        MARCH
         DC    AL1(30)        APRIL
         DC    AL1(31)        MAY
         DC    AL1(30)        JUNE
         DC    AL1(31)        JULY
         DC    AL1(31)        AUGUST
         DC    AL1(30)        SEPTEMBER
         DC    AL1(31)        OCTOBER
         DC    AL1(30)        NOVEMBER
         DC    AL1(31)        DECEMBER
FW1000   DC    F'1000'
HW1000   EQU   FW1000+2
FW3      DC    F'3'
         END
