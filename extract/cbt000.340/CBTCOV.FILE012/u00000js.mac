         TITLE 'PROGRAM TO PREFORMAT A DASD AREA.'
PREFORM  CSECT
*
*  THIS PROGRAM WAS WRITTEN TO ENSURE THAT THE AREAS ALLOCATED FOR SMF
*  DATA SETS WERE FREE OF I/O ERRORS, AND TO EMPTY THEM OF PREVIOUS
*  DATA, BEFORE USING THEM FOR SMF RECORDING.  IT WILL IN FACT PERFORM
*  THE SAME FUNCTIONS FOR ANY DISK AREAS DEFINED BY ANY DD CARDS
*  SUBMITTED (OTHER THAN JOBLIB,STEPLIB,SYSABEND,SYSUDUMP,SYSPRINT, OR
*  PROG=DD.*).
*
*  FOR E ACH NON-DEBARRED DDNAME FOUND IN THE TIOT IT.......
*    1 OPENS AN EXCP DCB FOR THE DATA SET DEFINED.
*    2 EXTRACTS FROM THE DEVICE TABLE THE MAX TRACK LENGTH FOR THE
*      DEVICE ON WHICH TH% DATA SET RESIDES.
*    3 CHECKS FROM THE DEB THE NUMBER OF TRACKS ALLOCATED.
*    4 FOR EACH TRACK IN TURN......
*        A) WRITES A MAX LENGTH RECORD.
*        B) READS IT BACK.
*        C) WRITES AN EOF RECORD AS R1.
*      ALL I/O ERRORS FOUND ARE LISTED ON SYSPRINT, AND IF THERE ARE
*      NO ERRORS A MESSAGE SHOWING GOOD COMPLETION FOR THE LAST TRACK
*      IS PRINTED.
*    5 THE DSCB TTR FIELD IS NOT UPDATED AT CLOSE BECAUSE DSORG=DA IS
*      SPECIFIED.
*
*    THE JCL REQUIRED IS E.G......
*      //VERIFY EXEC PGM=PREFORM
*      //SYSPRINT DD SYSOUT=A
*      //DD1 DD DSN=SYS1.MANX,DISP=SHR
*      //DDX DD DSN=SYS1.MANY,DISP=(,CATLG),VOL=REF=SMF,
*      //       SPACE=(CYL,3,,CONTIG)
*      PLUS ANY OTHER DD CARDS FOR OTHER DATA SETS TO BE CHECKED.
*
*        BEGIN                         MACRO EXPANSION FOLLOWS
         B     12(15)
         DC    AL1(7)
         DC    CL7'PREFORM'
         STM   14,12,12(13)
         BALR  12,0
         USING *,12
         CNOP  0,4
         BAL   15,*+76
         DC    18F'0'
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         OPEN  (PRINT,(OUTPUT))
         BAL   11,SR01                  LOCATE FIRST PRINT AREA.
         TIME
         ST    0,WORK                   STORE THE TIME.
         MVI   WORK+2,X'0F'             ENSURE IT CAN BE EDITED.
         MVC   HDNG+42(7),EDIT1         MOVE EDIT WORD TO PRINT.
         ED    HDNG+42(7),WORK          EDIT TIME TO PRINT.
         MVI   HDNG+48,X'40'            BLANK UNWANTED CHARACTER.
         ST    1,WORK                   STORE THE DATE.
         UNPK  HDNG+56(5),WORK+1(3)     UNPACK THE DATE.
         OI    HDNG+60,X'F0'            MAKE LAST CHARACTER UNPRINTABLE
         TITLE 'LOCATE FIRST TIOT ENTRY AND MAIN LOOP CONTROL.'
*THE ADDRESS OF THE FIRST TIOT DD ENTRY IS LOCATED. THEN THE MAIN LOOP
*IS ENTERED WHICH BEGINS THE PROCESSING FOR A GIVEN DATA SET. DD
*NAMES SYSPRINT,JOBLIB AND STEPLIB ETC ARE BYPASSED. THE DDNAME IS
*MOVED TO THE DCB FOR THE DASD WHICH IS THEN OPENED. THE LAST ENTRY IN
*THE DEB IS LOCATED AND THE LAST CCHH IS STORED.
         SPACE
         L     5,16(0,0)                R5 POINTS TO CVT.
         MVC   CONVRT,28(5)             STORE CONVERT ROUTINE ADDRESS.
         L     5,0(5)                   R5 POINTS TO TCB WORDS.
         L     5,4(5)                   R5 POINTS TO TCB.
         L     5,12(5)                  R5 POINTS TO TIOT.
         LA    5,24(5)                  R5 POINTS TO FIRST TIOT ENTRY.
         SPACE
*THIS IS THE ENTRY POINT FOR THE MAIN PROGRAM LOOP. THE FOLLOWING CODE
*CONTROLS THE LOOP AND PERFORMS INITIALISATION FOR A GIVEN DDNAME.
         SPACE
BL000    CLI   0(5),X'00'               TEST FOR END OF TIOT.
         BC    8,BL900                  GO TO END OF RUN.
         LA    6,6                      SET R6 TO NO. ENTRIES.
         LA    7,JOBLIB                 SET R7 TO FIRST ENTRY.
BL003    CLC   4(8,5),0(7)              TEST IF DDNAME IN TABLE.
         BC    8,BL040                  BRANCH IF IT IS.
         LA    7,8(7)                   INCREMENT POINTER.
         BCT   6,BL003                  LOOP UNTIL TABLE END.
         MVC   DISK+40(8),4(5)          MOVE DDNAME TO DCB.
         OPEN  (DISK,(OUTPUT))          OPEN THE DASD DATA SET.
         L     6,DISK+12                GET ADDRESS OF DEVICE TAB ENT.
         MVC   BYTES,4(6)               STORE MAXIMUM TRACK LENGTH.
         L     6,DISK+44                GET THE DEB ADDRESS.
         SPACE
*THIS CODING WILL LOCATE THE LAST DEB EXTENT ENTRY AND THEN STORE THE
*CCHH FOR THE LAST TRACK ALLOCATED.
         SPACE
         SR    7,7                      CLEAR REGISTER 7.
         IC    7,16(6)                  STORE NUMBER OF EXTENTS.
         BCTR  7,0                      REDUCE BY ONE.
         SLL   7,4                      MULTIPLY BY SIXTEEN.
         LA    6,42(6,7)                R6 POINTS TO LAST CCHH.
         MVC   LASTCCHH,0(6)            STORE THE LAST CCHH.
         XC    TTRN,TTRN                CLEAR THE RELATIVE ADDRESS.
         TITLE 'ROUTINE TO PROCESS THE DATA SET'
*THE RELATIVE TRACK ADDRESS IS CONVERTED TO THE ABSOLUTE ADDRESS; THE
*RESULT IS STORED IN THE IOB. THE COUNT FIELD OF THE RECORD TO BE
*WRITTEN IS INITIALISED AND THE CHANNEL PROGRAM DISKCP1 IS STARTED.
         SPACE
BL005    L     0,TTRN                   LOAD R0 WITH RELATIVE ADDRESS.
         L     1,DISK+44                LOAD R1 WITH DEB ADDRESS.
         STM   0,15,SAVE                SAVE ALL THE REGISTERS.
         LA    2,DISKIOB+32             LOAD R2 WITH MBBCCHHR ADDRESS.
         LA    6,SAVE                   LOAD R6 WITH ADDRESS OF SAVE.
         L     15,CONVRT                LOAD R15 WITH CONVERT ADDRESS.
         BALR  14,15                    BRANCH TO CONVERT ROUTINE.
         LM    0,15,0(6)                RESET ALL THE REGISTERS.
         SPACE
         XC    ECB,ECB                  CLEAR THE ECB.
         LA    6,DISKCP1                GET ADDRESS OF CHANNEL PROGRAM.
         ST    6,DISKIOB+16             STORE IT IN THE IOB.
         MVC   CNT(4),DISKIOB+35        MOVE CCHH TO THE COUNT.
         LH    6,BYTES                  SET R6 TO LARGEST RECORD SIZE.
         STH   6,CNT+6                  SET DATA LENGTH IN COUNT.
         STH   6,DISKCP1+30             SET CORRECT LENGTH.
         EXCP  DISKIOB                  ISSUE EXCP.
         WAIT  ECB=ECB                  WAIT FOR COMPLETION.
         CLI   ECB,X'7F'                TEST FOR ERROR.
         BC    8,BL010                  BRANCH IF OK.
         MVC   DIAGMSG(14),WRITE        CHANGE MESSAGE TO WRITE ERROR.
         BC    15,BL035                 GO TO TERMINATE ROUTINE.
         SPACE
*THE RECORD JUST WRITTEN IS NOW READ BACK. THE ADDRESS OF DISKCP2 IS
*PUT IN THE IOB.
         SPACE
BL010    XC    ECB,ECB                  CLEAR THE ECB.
         LA    6,DISKCP2                GET ADDRESS OF CHANNEL PROGRAM.
         ST    6,DISKIOB+16             STORE IT IN THE IOB.
         LH    6,BYTES                  SET R6 TO LARGEST RECORD SIZE.
         LA    6,8(6)                   ALLOW FOR COUNT.
         STH   6,DISKCP2+22             SET CORRECT LENGTH.
         EXCP  DISKIOB                  ISSUE EXCP.
         WAIT  ECB=ECB                  WAIT FOR COMPLETION.
         CLI   ECB,X'7F'                TEST FOR ERROR.
         BC    8,BL015                  BRANCH IF OK.
         MVC   DIAGMSG(14),READ         CHANGE MESSAGE TO READ ERROR.
         BC    15,BL035                 GO TO TERMINATE ROUTINE.
         SPACE
*AN END OF FILE RECORD IS NOW WRITTEN ON THE TRACK. THE DATA LENGTH IS
*SET TO ZERO AND THE ADDRESS OF DISKCP3 IS PUT IN THE IOB.
         SPACE
BL015    XC    ECB,ECB                  CLEAR THE ECB.
         LA    6,DISKCP3                GET ADDRESS OF CHANNEL PROGRAM.
         ST    6,DISKIOB+16             STORE IT IN THE IOB.
         XC    CNT+6(2),CNT+6           ZEROISE THE DATA LENGTH.
         EXCP  DISKIOB                  ISSUE EXCP.
         WAIT  ECB=ECB                  WAIT FOR COMPLETION.
         CLI   ECB,X'7F'                TEST FOR ERROR.
         BC    8,BL020                  BRANCH IF OK.
         MVC   DIAGMSG(14),WRITE        CHANGE MESSAGE TO WRITE ERROR.
         BC    15,BL035                 GO TO TERMINATE ROUTINE.
         SPACE
*THE FOLLOWING CODE WILL TEST FOR END OF THE DATA SETS AREA. IF IT IS
*NOT THE END THE TTRN IS UPDATED.
         SPACE
BL020    CLC   DISKIOB+35(4),LASTCCHH   TEST FOR END.
         BC    8,BL030                  BRANCH AT END OF DASD AREA.
         LH    6,TTRN                   LOAD REGISTER 6 WITH TT.
         LA    6,1(6)                   ADD ONE TO RELATIVE TRACK.
         STH   6,TTRN                   RESET TT.
         BC    15,BL005                 GO PROCESS NEXT TRACK.
         TITLE 'END OF AREA AND ERROR MESSAGE PROCESSING.'
*THE DDNAME, THE VOLUME SERIAL NUMBER, THE ECB, THE CSW AND THE
*MBBCCHHR ARE PRINTED. THE DATA SET IS CLOSED AND THE JOB IS RESET.
         SPACE
BL030    MVC   DIAGMSG(14),OK           MOVE OK MESSAGE TO PRINT.
BL035    MVC   DIAGMSG+24(8),4(5)       MOVE DD NAME TO MESSAGE.
         L     6,16(5)                  GET ADDRESS OF UCB.
         MVC   DIAGMSG+47(6),28(6)      MOVE VOL.SER.NO. TO MESSAGE.
         UNPK  DIAGMSG+60(9),ECB(5)     CONVERT THE ECB
         TR    DIAGMSG+60(8),TABLE      TO PRINT AS HEX.
         MVI   DIAGMSG+68,X'40'         BLANK UNWANTED BYTE.
         UNPK  DIAGMSG+75(15),DISKIOB+9(8) CONVERT THE CSW
         TR    DIAGMSG+75(14),TABLE        TO PRINT AS HEX.
         MVI   DIAGMSG+89,X'40'         BLANK UNWANTED BYTE.
         UNPK  DIAGMSG+101(15),DISKIOB+32(8) CONVERT THE MBBCCHHR
         TR    DIAGMSG+101(14),TABLE         TO PRINT AS HEX.
         MVC   DIAGMSG+115(2),XF0F1     SET THE CORRECT R FIELD.
         LA    3,116                    SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,DIAGMSG                SET R4 TO MESSAGE.
         BAL   11,SR01                  WRITE LINE.
         CLOSE DISK
         MVI   DISKIOB,X'C2'            RESET THE IOB.
         XC    DISKIOB+1(4),DISKIOB+1
         XC    DISKIOB+8(9),DISKIOB+8
         XC    DISKIOB+24(16),DISKIOB+24
         SPACE
*THIS CODE NOW ADJUSTS THE TIOT POINTER TO THE NEXT TIOT ENTRY THEN
*RETURNS TO THE MAIN LOOP.
         SPACE
BL040    SR    6,6                      CLEAR REGISTER 6.
         IC    6,0(5)                   PUT ENTRY LENGTH INTO R6.
         AR    5,6                      INCREMENT TIOT POINTER.
         BC    15,BL000                 RETURN TO MAIN LOOP.
         TITLE 'END OF RUN ROUTINE.'
*THE END OF RUN MESSAGE IS PRINTED AND THE PRINT DATA SET IS CLOSED.
         SPACE
BL900    LA    3,23                     SET R3 TO MESSAGE LENGTH LESS 1
         LA    4,ENDMESS                SET R4 TO MESSAGE.
         BAL   11,SR01                  WRITE LINE.
         CLOSE PRINT
*        GOBACK                        EXPANSION OF MACRO FOLLOWS
         L     13,4(13)
         LM    14,12,12(13)
         MVI   12(13),255
         LA    15,0
         BR    14
         TITLE 'SUBROUTINE TO PERFORM MESSAGE OUTPUT.'
*THIS ROUTINE IS RESPONSIBLE FOR WRITING A LINE ON SYSPRINT. ON FIRST
*ENTRY IT JUST LOCATES AND CLEARS OUT THE FIRST AREA. ON SUBSEQUENT
*ENTRIES IT TESTS FOR PAGE OVERFLOW; IF THIS CONDITION EXISTS THEN THE
*HEADING IS FIRST PRINTED AND THE OVERFLOW COUNT IS RESET. THE LINE IS
*PRINTED USING AN EXECUTED MOVE.
*
*       REGISTER  USAGE
*
*       2         POINTER TO PRINT LINE.
*       3         LENGTH OF MESSAGE LESS ONE.
*       4         ADDRESS OF MESSAGE.
*       11        RETURN ADDRESS.
         SPACE
SR01     BC    15,SR01B                 BRANCH FIRST TIME.
         CP    OVFLOCNT,OVFLOLMT        TEST FOR OVERFLOW.
         BC    13,SR01A                 BRANCH IF NOT.
         MVI   0(2),X'F1'               CAUSE NEW PAGE.
         MVC   1(61,2),HDNG             MOVE IN THE HEADING.
         PUT   PRINT                    WRITE THE HEADING.
         LR    2,1                      PUT NEXT AREA ADDRESS IN R2.
         MVI   0(2),X'40'               CLEAR THE NEXT AREA.
         MVC   1(132,2),0(2)
         MVI   0(2),X'F0'               CAUSE A DOUBLE SPACE.
         MVC   OVFLOCNT,K2P             RESET THE LINE COUNT.
SR01A    EX    3,EXMOVE                 MOVE THE MESSAGE.
SR01B    NI    SR01+1,X'0F'             NO OP THE FIRST TIME BRANCH.
         PUT   PRINT                    WRITE THE MESSAGE.
         LR    2,1                      PUT NEXT AREA ADDRESS IN R2.
         MVI   0(2),X'40'               CLEAR THE NEXT AREA.
         MVC   1(132,2),0(2)
         AP    OVFLOCNT,K1P             ADD TO LINE COUNT.
         BCR   15,11                    RETURN VIA REGISTER 11.
         TITLE 'ECB,IOB, AND CHANNEL PROGRAMS FOR THE DASD.'
ECB      DC    F'0'                     DASD ECB.
         SPACE
DISKIOB  DC    X'C2000000'              FLAGS FOR DATA AND COMMAND.
         DC    A(ECB)                   ADDRESS OF ECB.
         DC    2F'0'                    CHANNEL STATUS WORD.
         DC    A(DISKCP1)               ADDRESS OF CHANNEL PROGRAM.
         DC    A(DISK)                  ADDRESS OF DASD DCB.
         DC    2F'0'                    RESTART BLOCK ERROR COUNTS.
         DC    2F'0'                    MBBCCHHR.
         SPACE
CNT      DC    X'0000000001000000'      COUNT FIELD - CCHHRKDD.
         SPACE
TTRN     DC    X'00000000'              RELATIVE TRACK ADDRESS.
         SPACE
LASTCCHH DC    F'0'                     ADDRESS OF LAST CCHH IN AREA.
         SPACE
CONVRT   DC    F'0'                     ADDRESS OF CONVERT ROUTINE.
         SPACE
*THIS CHANNEL PROGRAM WILL ATTEMPT TO WRITE THE LARGEST POSSIBLE
*RECORD ONTO THE SPECIFIED TRACK. IT SEARCHES ID EQUAL ON THE ADDRESS
*OF RECORD 0 AND THEN WRITES THE COUNT FIELD FOR RECORD 1 WITH A DATA
*LENGTH EQUAL TO THE LARGEST RECORD SIZE. THE DATA AREA IS WRITTEN
*FROM LOCATION 0 BY A CCW DATA CHAINED TO THE PREVIOUS ONE.
         SPACE
DISKCP1  CCW   X'31',DISKIOB+35,X'40',5 SEARCH ID EQUAL ON R0.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'1D',CNT,X'A0',8        WRITE COUNT R1.
         CCW   X'1D',0,X'20',32767      WRITE DATA R1.
         SPACE
*THIS CHANNEL PROGRAM SEARCHES ID EQUAL ON THE ADDRESS OF RECORD ZERO
*AND THEN READS RECORD 1 AS JUST WRITTEN BY THE PREVIOUS CHANNEL
*PROGRAM. THE SUPPRESS DATA TRANSFER BIT IS ON.
         SPACE
DISKCP2  CCW   X'31',DISKIOB+35,X'40',5 SEARCH ID EQUAL ON R0.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'1E',CNT,X'30',32767    READ COUNT,KEY AND DATA R1.
         SPACE
*THIS CHANNEL PROGRAM SEARCHES ID EQUAL ON THE ADDRESS OF RECORD ZERO
*AND THEN WRITES RECORD 1 BACK WITH A DATA LENGTH OF ZERO.
         SPACE
DISKCP3  CCW   X'31',DISKIOB+35,X'40',5 SEARCH ID EQUAL ON R0.
         CCW   X'08',*-8,X'00',0        TIC.
         CCW   X'1D',CNT,X'20',8        WRITE COUNT DATA (DL=0) R1.
         TITLE 'MISCELLANEOUS CONSTANTS AND WORK AREAS.'
WORK     DC    F'0'                     FULLWORD WORK AREA.
         SPACE
SAVE     DC    16F'0'                   REGISTER SAVE AREA.
         SPACE
BYTES    DC    H'0'                     LARGEST RECORD SIZE.
         SPACE
EXMOVE   MVC   1(1,2),0(4)              MOVE MESSAGES TO PRINT.
         SPACE
*THE FOLLOWING ARE NON-PROCESSABLE DDNAMES WHICH MAY BE FOUND IN THE
*TIOT AND SO TO BE BYPASSED.
         SPACE
JOBLIB   DC    CL8'JOBLIB  '
STEPLIB  DC    CL8'STEPLIB '
SYSPRINT DC    CL8'SYSPRINT'
SYSABEND DC    CL8'SYSABEND'
SYSUDUMP DC    CL8'SYSUDUMP'
PGM      DC    CL8'PGM=*.DD'
         SPACE
*THE FOLLOWING CONSTANTS ARE USED TO PREPARE PAGE HEADINGS AND ERROR
*MESSAGES.
         SPACE
HDNG     DC    CL49'TSG DISK DATA SET PREFORMAT UTILITY TIME = HH.MM '
         DC    CL12'DATE = YYDDD'
OVFLOCNT DC    X'060C'                  LINES PER PAGE COUNT.
OVFLOLMT DC    X'056C'                  LINES PER PAGE LIMIT.
K1P      DC    X'1C'
K2P      DC    X'002C'
EDIT1    DC    X'4020204B202020'        TIME EDIT WORD.
         SPACE
DIAGMSG  DC    CL47'ERROR ON WRITE DDNAME = XXXXXXXX VOL.SER.NO. = '
         DC    CL43'XXXXXX ECB = XXXXXXXX CSW = XXXXXXXXXXXXXX '
         DC    CL27'MBBCCHHR = XXXXXXXXXXXXXXXX'
WRITE    DC    CL14'ERROR ON WRITE'
READ     DC    CL14'ERROR ON READ '
OK       DC    CL14'PREFORMATTED  '
ENDMESS  DC    CL24'NORMAL END OF PROCESSING'
XF0F1    DC    X'F0F1'
         SPACE
*THE FOLLOWING TRANSLATE TABLE IS USED TO CONVERT TO PRINTABLE
*HEXADECIMAL ANY FIELDS TO BE PRINTED IN HEX FORM.
         SPACE
TABLE    EQU   *-240
         DC    X'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'
         TITLE 'DCB FOR THE MESSAGE FILE.'
PRINT    DCB   DSORG=PS,                                               C
               DDNAME=SYSPRINT,                                        C
               BLKSIZE=133,                                            C
               LRECL=133,                                              C
               RECFM=FA,                                               C
               MACRF=PL
         TITLE 'DCB FOR THE DASD.'
DISK     DCB   DSORG=DA,                                               C
               DDNAME=DD1,                                             C
               MACRF=(E),                                              C
               DEVD=DA
         END
