*
         TITLE 'XM210310  COMPARE KEYS OF RECORDS                     '
XM210310 CSECT
         ENTRY XM210300
XM210300 EQU   *
         PRINT NOGEN
         COPY  REGEQU
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM210310  PROGRAMMER R.A.WHITELEY       ASSIGNED 25/04/74 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*  MODULE COMPARES THE KEYS OF THE RECORDS PASSED AT P1 & P2.         *
*   THE POSITION OF THE KEYS IS INDICATED AT P4. THE RESULT OF        *
*   THE COMPARISON IS INDICATED AT P6. THE POSITION OF THE KEY IS     *
*   INDICATED IN THE UNDERLINE AREA BY SETTING P3 TO X'22' OR X'AA'   *
*   IF THE FORMAT IS INVALID.                                         *
*                                                                     *
         SPACE 2
*                             PARAMETERS                              *
*                             ----------                              *
*  1. DATA SET 1 RECORD                 - LENGTH SEE P5               *
*                                                                     *
*  2. DATA SET 2 RECORD                 - LENGTH SEE P5               *
*                                                                     *
*  3. UNDERLINE AREA                    - LENGTH = MAX. OF            *
*                                                  P1 OR P2           *
*  4. KEY FIELD TABLE                   - 11 X 6 BYTES                *
*        EACH ENTRY CONSISTS OF                                       *
*         1 BYTE FORMAT IND.  B=BINARY, P=PACKED                      *
*         1 BYTE ASCENDING/DESCENDING ORDER OF KEYS, A OR D           *
*         2 BYTE BINARY DISPLACEMENT OF KEY WITHIN RECORD             *
*         2 BYTE BINARY LENGTH OF KEY                                 *
*           X'FF' DENOTES LAST ENTRY IN TABLE                         *
*                                                                     *
*  5. RECORD LENGTHS (DS1 & DS2)        - 2 HALFWORDS                 *
*                                                                     *
*  6. ACTION INDICATOR                                                *
*        C'A' = EXTRA RECORD ON DATA SET 1                       O    *
*        C'B' = KEY NOT PRESENT - RECORD 1                       O    *
*        C'C' = INVALID PACKED FORMAT FOR KEY ON DATA SET 1      O    *
*        C'L' = EXTRA RECORD ON DATA SET 2                       O    *
*        C'M' = KEY NOT PRESENT - RECORD 2                       O    *
*        C'N' = INVALID PACKED FORMAT FOR KEY ON DATA SET 2      O    *
*        C' ' = KEYS EQUAL                                       I    *
*                           SPECIAL NOTES                             *
*                           -------------                             *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT
         ISEQ  73,80
         MODIN
*
** SET UP R11 TO POINT AT P6, THE ACTION INDICATOR
*  -----------------------------------------------
         L     R11,20(R1)          POINT R11 AT ACTION INDICATOR
         B     BA06                DO NOT POINT TO NEXT COMPARE FLD.
*
** IF LAST ENTRY IN COMPARE TABLE (X'FF') THEN COMPARE IS FINISHED
*  ---------------------------------------------------------------
BA05     LA    R9,6(,R9)           POINT TO NEXT COMPARE FIELD
BA06     CLI   0(R9),X'FF'         Q. LAST ENTRY  IN TABLE
         BE    BA99                A. YES - RETURN
*
** SET UP REGISTERS WITH KEY FIELD DETAIL
** R3 CONTAINS LENGTH OF KEY
** R4 POINTS AT 1ST KEY FIELD
** R5 POINTS AT 2ND KEY FIELD
** ENSURE THAT KEY FIELD IS PRESENT IN EACH RECORD
*  -----------------------------------------------
         LH    R12,2(,R9)          DISPLACEMENT OF KEY TO R12
         LH    R3,4(,R9)           LENGTH OF KEY TO R3
         LA    R14,0(R3,R12)       POINT R14 AT DISP.OF END OF KEY FLD.
         CH    R14,0(,R10)         Q. KEY FIELD PRESENT IN DSET1 REC.
         BH    BA70                A. NO - ERROR
         CH    R14,2(,R10)         Q. KEY FIELD PRESENT IN DSET2 REC.
         BH    BA75                A. NO - ERROR
         LA    R4,0(R12,R6)        POINT R4 AT KEY FIELD IN DSET1 REC.
         LA    R5,0(R12,R7)        POINT R5 AT KEY FIELD IN DSET1 REC.
*
** UNDERLINE KEY FIELD
*  -------------------
         LA    R14,0(R12,R8)       POINT R14 AT KEY IN UNDERLINE
         LR    R15,R3              LENGTH OF KEY TO R15
         L     R1,CFD004           PADDING CHARACTER TO R1 (X'22')
         MVCL  R14,R0              UNDERLINE KEY FIELD (X'22')
*
** DETERMINE WHAT TYPE OF KEY FIELD IS BEING PROCESSED
*  ---------------------------------------------------
         CLI   0(R9),C'B'          Q. BINARY KEY FIELD
         BNE   BA30                A. NO - MUST BE PACKED
         EJECT
*
** COMPARE BINARY KEY FIELDS
*  -------------------------
         LR    R2,R5               POINT R2 AT 2ND KEY FIELD
         LR    R5,R3               MOVE LENGTH OF KEY TO R5
         CLI   1(R9),C'A'          Q. ASCENDING KEY ORDER
         BNE   BA23                A. NO - MUST BE DESCENDING
*
** KEYS IN ASCENDING ORDER
*  -----------------------
         CLCL  R4,R2               Q. KEYS EQUAL
         BE    BA05                A. YES - COMPARE NEXT KEY
*                                  Q. EXTRA RECORD ON 1ST DATA SET
         BL    BA60                A. YES - GO SET IND.
         BH    BA65                A. NO - EXTRA RECORD IS ON 2ND DSET
*
** KEYS IN DESCENDING ORDER
*  ------------------------
BA23     CLCL  R4,R2               Q. KEYS EQUAL
         BE    BA05                A. YES - COMPARE NEXT KEY
*                                  Q. EXTRA RECORD ON 1ST DATA SET
         BH    BA60                A. YES - GO SET IND.
         BL    BA65                A. NO - EXTRA RECORD IS ON 2ND DSET
         SPACE 3
*
** COMPARE PACKED KEY FIELDS -ENSURE FIELDS ARE PACKED
*  ---------------------------------------------------
BA30     BCTR  R3,R0               SUBTRACT 1 FROM KEY FIELD
         LR    R14,R4              POINT R14 AT KEY IN 1ST DSET REC.
         BAL   R12,B7001           Q. KEY FIELD 1 PACKED
         BNZ   BA80                A. NO - UNDERLINE INVALID FORMAT
         LR    R14,R5              POINT R14 AT KEY IN 2ND DSET REC.
         BAL   R12,B7001           Q. KEY FIELD 2 PACKED
         BNZ   BA85                A. NO - UNDERLINE INVALID FORMAT
         LR    R12,R3              SET UP R12
         SLL   R12,4               - WITH KEY FIELD LENGTHS - 1
         OR    R12,R3              - FOR EXECUTE REGISTER IN CP INSTR.
*
** KEYS IN ASCENDING ORDER
*  -----------------------
         CLI   1(R9),C'A'          Q. ASCENDING KEY ORDER
         BNE   BA33                A. NO - MUST BE DESCENDING
         EX    R12,EX01            Q. KEYS EQUAL
*                                  **  CP   0(0,R4),0(0,R5)  **
         BE    BA05                A. YES - COMPARE NEXT KEY
*                                  Q. EXTRA RECORD ON 1ST DATA SET
         BL    BA60                A. YES - GO SET IND.
         BH    BA65                A. NO  - EXTRA RECORD IS ON 2ND DSET
*
** KEYS IN DESCENDING ORDER
*  ------------------------
BA33     EX    R12,EX01            Q. KEYS EQUAL
*                                  **  CP   0(0,R4),0(0,R5)  **
         BE    BA05                A. YES - COMPARE NEXT KEY
*                                  Q. EXTRA RECORD ON 1ST DATA SET
         BH    BA60                A. YES - GO SET IND.
         BL    BA65                A. NO  - EXTRA RECORD IS ON 2ND DSET
         EJECT
*
** EXTRA RECORD ON DATA SET 1
** SET ACTION IND. TO A & RETURN
*  -----------------------------
BA60     MVI   0(R11),C'A'         SET ACTION IND.
         B     BA99                RETURN
*
** EXTRA RECORD ON DATA SET 2
** SET ACTION IND. TO L & RETURN
*  -----------------------------
BA65     MVI   0(R11),C'L'         SET ACTION IND.
         B     BA99                RETURN
*
** KEY NOT PRESENT IN DATA SET 1 RECORD
** SET ACTION IND. TO B & RETURN
*  ------------------------------------
BA70     MVI   0(R11),C'B'         SET ACTION IND.
         B     BA99                RETURN
*
** KEY NOT PRESENT IN DATA SET 2 RECORD
** SET ACTION IND. TO M & RETURN
*  ------------------------------------
BA75     MVI   0(R11),C'M'         SET ACTION IND.
         B     BA99                RETURN
*
** KEY FIELD NOT IN PACKED FORMAT ON DATA SET 1
** SET ACTION IND. TO C & UNDERLINE
*  --------------------------------------------
BA80     MVI   0(R11),C'C'         SET ACTION IND.
         B     BA86                GO
*
** KEY FIELD NOT IN PACKED FORMAT ON DATA SET 2
** SET ACTION IND. TO N & UNDERLINE
*  --------------------------------------------
BA85     MVI   0(R11),C'N'         SET ACTION IND.
BA86     LH    R14,2(,R9)          POINT R14 TO
         LA    R14,0(R14,R8)       - KEY FIELD POSITION IN UNDERLINE
         EX    R3,EX02             UNDERLINE THE INVALID FIELD (X'88')
*                                  **  MVC   0(0,R14),=16X'AA' **
BA99     MODOUT
         EJECT
***********************************************************************
* B7001 - CHECK FIELD IS PACKED FORMAT                                *
*          R14 POINTS TO FIELD                                        *
*          R3  CONTAINS LENGTH MINUS 1                                *
*         CONDITION CODE WILL BE ZERO IF FIELD IS PACKED              *
***********************************************************************
         SPACE
B7001    SR    R2,R2               CLEAR R2 TO ZERO
         EX    R3,EX03             MOVE FIELD TO W/A
*                                  **  MVC  SPD016(0),0(R14)  **
         EX    R3,EX04             TRANSLATE THE FIELD (IN W/A)
*                                  **  TRT  SPD016(0),CXT256  **
*                                  IF FIELD IS PACKED CONDITION CODE
*                                  - WILL BE 2 & R2 WILL CONTAIN X'01'
         BC    13,B7010            RETURN IF CONDITION CODE NOT 2
         C     R2,=F'1'            Q. FIELD PACKED (I.E. R2 CONTAINS
*                                     X'01' - LAST FUNCTION BYTE)
         BR    R12                 A. NO - RETURN (WITH C.C = 0)
*                                  A. YES- RETURN (WITH C.C NOT ZERO)
B7010    CLI   *,X'00'             SET CONDITION CODE TO NOT ZERO
         BR    R12                 RETURN
         SPACE 3
***********************************************************************
* EXECUTED INSTRUCTIONS                                               *
***********************************************************************
         SPACE
EX01     CP    0(0,R4),0(0,R5)     Q. KEYS EQUAL
EX02     MVC   0(0,R14),=16X'AA'   UNDERLINE INVALID FIELD
EX03     MVC   SPD016(0),0(R14)    MOVE 'PACKED' FIELD TO W/A
EX04     TRT   SPD016(0),CXT256    TRANSLATE 'PACKED' FIELD
         EJECT
***********************************************************************
* STORAGE AREAS, CONSTANTS & LITERAL POOL                             *
***********************************************************************
         SPACE
CFD004   DS    0F                  PADDING CHARACTER FOR PADDING
         DC    X'22000000'         - UNDERLINE FOR KEY FIELD
SPD016   DS    PL16                W/A FOR PACKED FIELD
*
** TRANSLATE TABLE (FOR CHECKING PACKED FIELD)
*  -------------------------------------------
CXT256   DS    0CL256              TABLE
         DC    10X'00000000000000000000010101010101'   00 TO 9F
         DC    96X'FF'                                 A0 ONWARDS
         LTORG
         END
