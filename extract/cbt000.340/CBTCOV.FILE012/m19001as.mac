./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=ALPHA
         MACRO
&NAME    ALPHA
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0'
C&SYSNDX DC    X'C0'
         DC    XL9'00'
         DC    X'CACBCCCDCECFD0'
         DC    XL9'00'
         DC    X'DADBDCDDDEDFE0E1'
         DC    XL8'00'
         DC    X'EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'C0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-192
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'C0'        SET MASK TO LOWEST VALID CH.- 1
         EX    15,D&SYSNDX              EXECUTE AND WITH LENGTH IN R15
         EX    15,E&SYSNDX              EXECUTE EXCL OR WITH LENGTHR 15
         BM    G&SYSNDX                 ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX              EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15                    ERROR RTN SETS R14 AND R15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=ANUM
         MACRO
&NAME    ANUM
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0'
C&SYSNDX DC    X'C0'
         DC    XL9'00'
         DC    X'CACBCCCDCECFD0'
         DC    XL9'00'
         DC    X'DADBDCDDDEDFE0E1'
         DC    XL8'00'
         DC    X'EAEBECEDEEEF'
         DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'C0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-192
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'C0'   SET MASK TO LOWEST VALID CHAR.LESS 1
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX         EYECUTE EXCL.OR- DATA LENGTH IN R15
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR RTN.SETS R14 AND R15 EQUAL
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BZR
         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNZR
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BMR
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BOR
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BPR
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNER
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNLR
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNHR
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BER
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BLR
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BHR
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNPR
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNMR
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=BNOR
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
./ ADD NAME=LATCH,LIST=ALL
./ NUMBER NEW1=10,INCR=10
         MACRO
&NAME    LATCH &A,&B,&VL,&TYPE=
         CNOP  0,4
&NAME    DS    0H
         AIF   ('&TYPE' EQ 'LINK').BA02
         AIF   (K'&B NE 0).BA01
         ST    R1,L1&SYSNDX+4      SAVE ADDRESS OF PARAMETER LIST
         B     *+12                BRANCH AROUND CONSTANTS
L1&SYSNDX DS    A                  ENTRY POINT ADDRESS
         DS    A                   PARAMETER LIST ADDRESS
L2&SYSNDX BC   0,L3&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L1&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L2&SYSNDX+1,X'F0'   CAUSE BRANCH ROUND LOAD
L3&SYSNDX LM   R0,R1,L1&SYSNDX     LOAD ENTRY POINT & PARM LIST ADDR.
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15)
         MEXIT
.BA01    ANOP
L4&SYSNDX BC   0,L5&SYSNDX         BRANCH ROUND LOAD AFTER 1ST TIME
         LOAD  EP=&A
         ST    R0,L6&SYSNDX        SAVE ENTRY POINT ADDRESS
         OI    L4&SYSNDX+1,X'F0'   CAUSE BRANCH AROUND LOAD
         CNOP  0,4
         B     *+8                 BRANCH AROUND ENTRY POINT ADDRESS
L6&SYSNDX DS   A                   ENTRY POINT ADDRESS
L5&SYSNDX L    R0,L6&SYSNDX        LOAD ENTRY POINT ADDRESS
         LR    R15,R0         LOAD ENTRY POINT OF MODULE
         CALL  (15),&B,&VL
         MEXIT
.BA02    ANOP
         LINK  EP=&A,PARAM=&B
         MEND
./       ADD   LIST=ALL,LEVEL=00,SOURCE=0,NAME=LPYR
         MACRO
&NAME    LPYR  &INPUT,&NOLPYR
         AIF   ('&INPUT' NE ' ').NO
         MNOTE 'FIRST PARAMETER OMITTED'
         AGO   .N1
.NO      AIF   ('&NOLPYR' NE ' ').N2
         MNOTE 'SECOND PARAMETER OMITTED'
.N1      MNOTE 'GENERATION TERMINATED'
         MEXIT
.N2      ANOP
&NAME    TM    &INPUT,X'01'
         BO    &NOLPYR
         TM    &INPUT,X'12'
         BM    &NOLPYR
         MEND
./ ADD NAME=MODIN
         MACRO
&NAME    MODIN &ID=YES
.*
.**      MACRO MODIN  VERSION 1.0
.**      -----------
.**                   PROVIDE ADDRESSABILITY,SAVEAREA CHAINING
.**                   PARAMETER ADDRESSES AND IDENTIFICATION.
.**
.*
         LCLA  &LA01
         LCLC  &LC01
         AIF   ('&ID' EQ 'NO').MB05
&LA01    SETA  8                   LENGTH OF IDENTIFICATION
         AIF   ('&ID' EQ 'YES').MB03
&LC01    SETC  '&ID'
         AGO   .MB05
.MB03    ANOP
&LC01    SETC  '&SYSECT'
.MB05    ANOP
.*
         USING *,R15
         CNOP  2,4                 ALIGN SAVEAREA
&NAME    STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SAVEAREA+4      BACK CHAIN SAVEAREAS
         LR    R14,R13             SAVE POINTER TO SAVEAREA
         BAL   R13,&LA01+*+76      POINT R13 TO SAVEAREA
SAVEAREA DC    18A(0)              SAVEAREA
         AIF   (&LA01 NE 8).MB20   SKIP IDENTIFICATION
         DC    CL8'&LC01'          IDENTIFY MODULE
.MB20    DROP  R15                 DROP INITIAL BASE REGISTER
         USING SAVEAREA,R13        ADDRESSABILIY FOR MODULE VIA R13
         ST    R13,8(R14)          FORWARD CHAIN SAVEAREAS
         LM    R6,R10,0(R1)        LOAD PARAMETER REGISTERS
         MEND
./ ADD NAME=MODOUT
         MACRO
&NAME    MODOUT &R1,&R2,&R3,&R4,&R5,&R6
         LCLA  &A,&B
&NAME    L     R13,4(R13)
         AIF   (K'&R6 EQ 0).M01
         MNOTE 1,'NO MORE THAN 5 REGS CAN BE SPECIFIED- REST IGNORED'
.M01     AIF   (K'&R1 EQ 0).M09
&A       SETA  &R1
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R2 EQ 0).M09
&A       SETA  &R2
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R3 EQ 0).M09
&A       SETA  &R3
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R4 EQ 0).M09
&A       SETA  &R4
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AIF   (K'&R5 EQ 0).M09
&A       SETA  &R5
         AIF   (&A GT 12).ERROR
&B       SETA  &A*4+20
         ST    &A,&B.(R13)
         AGO   .M09
.ERROR   MNOTE 1,'REGS 13,14 AND 15 CANNOT BE CHANGED- MACRO IGNORED'
         MEXIT
.M09     RETURN (14,12)
         MEND
./ ADD NAME=NUMBR
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
./ ADD NAME=PROGIN
         MACRO
&NAME    PROGIN &ID=YES
.*
.**      MACRO PROGIN    VERSION 1.0
.**      -----------
.**                      PROVIDE ADDRESSABILITY,SAVEAREA CHAINING,
.**                      LINKAGE, SAVEAREA, AND IDENTIFICATION.
.**
.*
         LCLA  &LA01
         LCLC  &LC01
         AIF   ('&ID' EQ 'NO').MB05
&LA01    SETA  8                   LENGTH OF IDENTIFICATION
         AIF   ('&ID' EQ 'YES').MB03
&LC01    SETC  '&ID'
         AGO   .MB05
.MB03    ANOP
&LC01    SETC  '&SYSECT'
.MB05    ANOP
.*
         ENTRY SAVEAREA
&NAME    DS    0H
         USING *,R15
         CNOP  2,4                 ALIGN SAVEAREA
         STM   R14,R12,12(R13)     SAVE REGISTERS
         ST    R13,SAVEAREA+4      BACK CHAIN SAVEAREAS
         LR    R14,R13             SAVE POINTER TO SAVEAREA
         BAL   R13,&LA01+*+76      POINT R13 TO SAVEAREA
SAVEAREA DC    18A(0)              SAVEAREA
         AIF   (&LA01 NE 8).MB20   SKIP IDENTIFICATION
         DC    CL8'&LC01'          IDENTIFY MODULE
.MB20    DROP  R15                 DROP INITIAL BASE REGISTER
         USING SAVEAREA,R13        ADDRESSABILIY FOR MODULE VIA R13
         ST    R13,8(R14)          FORWARD CHAIN SAVEAREAS
         MEND
./ ADD NAME=PROGOUT
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
./ ADD NAME=REGEQU
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
