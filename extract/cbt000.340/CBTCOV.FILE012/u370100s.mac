         MACRO
&NAME    EDIT  &TO,&FROM,&EDWD
         LCLA  &CNT1,&CNT2,&CNT3,&EDMK
         LCLC  &LITWK,&EDCD,&LIT1,&LIT2,&LIT3,&LIT4,&LIT5,&NO,&LIT6
         AIF   (T'&EDWD NE 'O').A1      IS EDIT WORD OMITTED
         MNOTE 1,'NO EDIT FORMAT GIVEN'
         MEXIT
.A1      AIF   ('&EDWD'(1,1) EQ '''').A2
.A15     MNOTE 1,'EDIT FORMAT NOT WITHIN QUOTS'
         MEXIT
.A2      AIF   ('&EDWD'(K'&EDWD,1) EQ '''').A3
         AGO   .A15
.A3      ANOP
&CNT1    SETA  K'&EDWD-2
&CNT2    SETA  1
         AIF   ('&EDWD'(2,1) EQ 'X').A4
         AIF   ('&EDWD'(2,1) EQ '*').A6
         MNOTE 1,'INPROPER FILL CHARARTER - USE X OR *'
         MEXIT
.A4      ANOP
&LITWK   SETC  '40'
         AGO   .A7
.A6      ANOP
&LITWK   SETC  '5C' *
&CNT2    SETA  &CNT2+1
.A7      ANOP
&CNT2    SETA  &CNT2+1
&EDCD    SETC  '&EDWD'(&CNT2+4*&CNT3,1)
         AIF   ('&EDCD' EQ '''').C91
         AIF   ('&EDCD' EQ 'X').A8
         AIF   ('&EDCD' EQ ',').A9
         AIF   ('&EDCD' EQ '0').B1
         AIF   ('&EDCD' EQ '.').B2
         AIF   ('&EDCD' EQ ' ').B3
         AIF   ('&EDCD' EQ 'C').B4
         AIF   ('&EDCD' EQ 'R').B5
         AIF   ('&EDCD' EQ '-').B6
         AIF   ('&EDCD' EQ '$').B7
         AIF   ('&EDCD' EQ '*').B8
         AIF   ('&EDCD' EQ '/').B9
         MNOTE 1,'IMPROPER EDIT CHARACTER X,0. CR-$*/'
         MEXIT
.A8      ANOP
&LITWK   SETC  '&LITWK'.'20' DIGIT SELECTOR
         AGO   .C9
.A9      ANOP
&LITWK   SETC  '&LITWK'.'6B'  COMMA
         AGO   .C9
.B1      ANOP
&LITWK   SETC  '&LITWK'.'21'  SIGNIFICANT STARTER
         AGO   .C9
.B2      ANOP
&LITWK   SETC  '&LITWK'.'4B'  PERIOD
         AGO   .C9
.B3      ANOP
&LITWK   SETC  '&LITWK'.'40'  BLANK
         AGO   .C9
.B4      ANOP
&LITWK   SETC  '&LITWK'.'C3'  C
         AGO   .C9
.B5      ANOP
&LITWK   SETC  '&LITWK'.'D9'  R
         AGO   .C9
.B6      ANOP
&LITWK   SETC  '&LITWK'.'60'  -
         AGO   .C9
.B7      ANOP
&EDMK    SETA  &CNT2+4*&CNT3
         AGO   .B1
.B8      ANOP
&LITWK   SETC  '&LITWK'.'5C'  *
         AGO   .C9
.B9      ANOP
&LITWK   SETC  '&LITWK'.'61'  /
.C9      AIF   (&CNT2 NE 3).A7
.C91     AIF   (&CNT3 EQ 0).D1
         AIF   (&CNT3 EQ 1).D2
         AIF   (&CNT3 EQ 2).D3
         AIF   (&CNT3 EQ 3).D4
         AIF   (&CNT3 EQ 5).D6
         AIF   (&CNT3 EQ 4).D5
         MNOTE 1,'EDIT WORD TOO LARGE TO HANDLE'
.D1      ANOP
&LIT1    SETC '&LITWK'
         AGO   .D9
.D2      ANOP
&LIT2    SETC '&LITWK'
         AGO   .D9
.D3      ANOP
&LIT3    SETC '&LITWK'
         AGO   .D9
.D4      ANOP
&LIT4    SETC '&LITWK'
         AGO   .D9
.D5      ANOP
&LIT5    SETC '&LITWK'
         AGO   .D9
.D6      ANOP
&LIT6    SETC  '&LITWK'
.D9      AIF   ('&EDCD' EQ '''').E1
&LITWK   SETC '&NO'
&CNT3    SETA  &CNT3+1
&CNT2    SETA 0-1
         AGO   .A7
.E1      AIF   ('&TO'(K'&TO,1) EQ ')').E2
&CNT3    SETA  &CNT3*4+&CNT2-1
         AIF   ('&EDWD'(2,1) NE '*').E1A
&CNT3    SETA  &CNT3-1
.E1A     ANOP
&LITWK   SETC  '('.'&CNT3'.')'
&NAME    MVC   &TO&LITWK,=X'&LIT1&LIT2&LIT3&LIT4&LIT5&LIT6'
         AIF   (&EDMK NE 0).F1
         ED    &TO&LITWK,&FROM
         AGO   .E4
.E2      ANOP
&NAME    MVC   &TO,=X'&LIT1&LIT2&LIT3&LIT4&LIT5&LIT6'
         AIF   (&EDMK NE 0).F2
.E3      ED    &TO,&FROM
         AGO   .E4
.F1      LA    1,&TO+&EDMK
         EDMK  &TO&LITWK,&FROM
.F15     BCTR  1,0
         MVI   0(1),C'$'
         AGO   .E4
.F2      EDMK  &TO,&FROM
         AGO   .F15
.E4      ANOP
         MEND
         MACRO
&NAME    BEGIN &BASE,&ENTRY,&BRANCH,&SAVADR=,&ID=YES,&REGS=YES,        -
               &WORKLTH=0,&WORKNME=,&RENT=NO
.*
.*       THIS IS A RE-WRITE OF THE EXSISTING 'BEGIN' MACRO AND
.*       A REPLACEMENT FOR THE 'MBEGIN' MACRO.  AN
.*       ADDITIONAL RE-ENTRANT FEATURE HAS ALSO BEEN ADDED.
.*
.*       WRITTEN BY CHRIS HUTCHINS, MAY 1974.
.*
.*       WEST SUSSEX COUNTY COUNCIL SYSTEMS PROGRAMMING GROUP.
.*
         GBLB  &CHK,&RSW
         GBLC  &SNAME
         LCLB  &ENTSW
         LCLC  &BS1,&BS2,&BS3,&BS4
         LCLC  &EN1,&EN2,&EN3,&EN4
         LCLC  &BR1,&BR2,&BR3,&BR4
         AIF   ('&REGS' EQ 'NO' OR &CHK).NOREGS
         SPACE
*        REGISTER EQUATES
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE
&CHK     SETB  1
.NOREGS  ANOP
         AIF   ('&NAME' EQ '').NAMESKP
&NAME    EQU   *
.NAMESKP AIF   ('&ENTRY' EQ '' OR '&ENTRY(2)' EQ '').U15
&EN1     SETC  '&ENTRY(1)'
&EN2     SETC  '&ENTRY(2)'
&EN3     SETC  '&ENTRY(3)'
&EN4     SETC  '&ENTRY(4)'
         ENTRY &EN1
         ENTRY &EN2
         AIF   ('&EN3' EQ '').ENT2
         ENTRY &EN3
         AIF   ('&EN4' EQ '').ENT2
         ENTRY &EN4
.ENT2    ANOP
&EN1     NOPR  0
&EN2     NOPR  0
         AIF   ('&EN3' EQ '').NOPENT
&EN3     NOPR  0
         AIF   ('&EN4' EQ '').NOPENT
&EN4     NOPR  0
.NOPENT  ANOP
         AGO   .STM
.U15     USING *,15
.STM     STM   14,12,12(13) .      SAVE REGISTERS
         AIF   ('&BASE(1)' NE '').BSPEC
&BS1     SETC  '12'
         AGO   .RENTCK
.BSPEC   ANOP
&BS1     SETC  '&BASE(1)'
.RENTCK  AIF   ('&RENT' EQ 'YES').RENTNT
         AIF   ('&RENT' EQ 'NO').NOERR3
         MNOTE 8,'RENT VALUE INVALID - RENT=NO ASSUMED'
.NOERR3  ANOP
&RSW     SETB  0
         AIF   ('&WORKLTH' EQ '' OR '&WORKLTH' EQ '0').NOERR1
         MNOTE 4,'WORKLTH INVALID WHEN RENT=NO - IGNORED'
.NOERR1  AIF   ('&WORKNME' EQ '').NOERR2
         MNOTE 4,'WORKNME INVALID WHEN RENT=NO - IGNORED'
.NOERR2  ANOP
         AIF   ('&ENTRY' EQ '' OR '&ENTRY(1)' EQ '').NOBALR
         BALR  &BS1,0
         USING *,&BS1
.NOBALR  AIF   ('&ID' EQ 'NO' OR '&SYSECT' EQ '').NOID1
         B     *+12
         DC    CL8'&SYSECT'
.NOID1   ANOP
         CNOP  0,4
         BAL   &BS1,IHB&SYSNDX.B
IHB&SYSNDX EQU *
         USING *,&BS1
&SAVADR  DC    18F'0'
IHB&SYSNDX.B ST &BS1,8(13) .          CHAIN
         ST    13,4(&BS1) .                SAVE
         LR    13,&BS1 .                        AREA
         AGO   .MBASE
.*
.RENTNT  ANOP
&RSW     SETB  1
         AIF   ('&SAVADR' EQ '').NOSAVA
         MNOTE 4,'SAVADR INVALID WHEN RENT=YES - IGNORED'
.NOSAVA  ANOP
         BALR  &BS1,0
IHB&SYSNDX EQU *
         USING *,&BS1
         AIF   ('&ID' EQ 'NO' OR '&SYSECT' EQ '').NOID2
         B     *+12
         DC    CL8'&SYSECT'
.NOID2   ANOP
         BAL   1,*+8
IHB&SYSNDX.S DC AL4((((72+&WORKLTH)+7)/8)*8)
         ICM   0,B'1111',IHB&SYSNDX.S
         SVC   10
&SNAME   SETC  'IHB&SYSNDX.S'
         XC    0(72,1),0(1) .      CLEAR SAVE AREA
         ST    1,8(13) .           CHAIN
         ST    13,4(1) .                 SAVE
         LR    13,1 .                         AREA
         L     1,4(13) .           RESTORE
         L     1,24(1) .                   REGISTER 1
         AIF   ('&WORKNME' EQ '').MBASE
         USING &WORKNME-72,13 .    USING FOR 'WORKNME' DSECT
.*
.MBASE   AIF   ('&BASE' EQ '' OR '&BASE(2)' EQ '').MENTS
&BS2     SETC  '&BASE(2)'
&BS3     SETC  '&BASE(3)'
&BS4     SETC  '&BASE(4)'
         AIF   ('&BS4' EQ '').BS3CK
         AIF   ('&BS4' EQ '&BS3' OR '&BS4' EQ '&BS2' OR '&BS4' EQ '&BS1-
               ').FAIL1
.BS3CK   AIF   ('&BS3' EQ '').BS2CK
         AIF   ('&BS3' EQ '&BS2' OR '&BS3' EQ '&BS1').FAIL1
.BS2CK   AIF   ('&BS2' EQ '').MENTS
         AIF   ('&BS2' EQ '&BS1').FAIL1
         AIF   ('&BS4' EQ '').BS3U
         USING IHB&SYSNDX+4096,&BS2,&BS3,&BS4
         AGO   .BASET
.BS3U    AIF   ('&BS3' EQ '').BS2U
         USING IHB&SYSNDX+4096,&BS2,&BS3
         AGO   .BASET
.BS2U    USING IHB&SYSNDX+4096,&BS2
.BASET   LR    &BS2,&BS1
         AH    &BS2,IHB&SYSNDX.K
         AIF   ('&BS3' EQ '').KSET
         LR    &BS3,&BS2
         AH    &BS3,IHB&SYSNDX.K
         AIF   ('&BS4' EQ '').KSET
         LR    &BS4,&BS3
         AH    &BS4,IHB&SYSNDX.K
.KSET    B     *+6
IHB&SYSNDX.K DC H'4096'
.*
.MENTS   AIF   ('&BRANCH' EQ '').END
&BR1     SETC  '&BRANCH(1)'
&BR2     SETC  '&BRANCH(2)'
&BR3     SETC  '&BRANCH(3)'
&BR4     SETC  '&BRANCH(4)'
         AIF   ('&BR1' NE '' AND '&EN1' EQ '').FAIL2
         AIF   ('&BR2' NE '' AND '&EN2' EQ '').FAIL2
         AIF   ('&BR3' NE '' AND '&EN3' EQ '').FAIL2
         AIF   ('&BR4' NE '' AND '&EN4' EQ '').FAIL2
&ENTSW   SETB  1
         AIF   (NOT &RSW).BRTAB
         L     15,4(13)
         L     15,16(15)
.BRTAB   N     15,IHB&SYSNDX.A
         SLL   15,1
         B     *+4(15)
         B     &BR1
         B     &BR2
         AIF   ('&BR3' EQ '').BRK
         B     &BR3
         AIF   ('&BR4' EQ '').BRK
         B     &BR4
.BRK     ANOP
         CNOP  0,4
IHB&SYSNDX.A DC X'00000007'
         AGO   .END
.*
.*       ERROR MESSAGES
.*
.FAIL1   MNOTE 12,'DUPLICATE BASE REGISTERS SPECIFIED'
.FAIL999 MNOTE *,'MACRO GENERATION TERMINATED'
         MEXIT
.FAIL2   MNOTE 12,'BRANCH NUMBERS DO NOT AGREE WITH ENTRY NUMBERS'
         AGO   .FAIL999
.END     SPACE
         MEND
         MACRO
&NAME    FINISH &RC=0
         GBLB  &RSW
         GBLC  &SNAME
         AIF   (NOT &RSW).CONT
&NAME    LA    1,0(13)
         L     13,4(13)
         ICM   0,B'1111',&SNAME
         SVC   10
         AGO   .RCHK
.CONT    ANOP
&NAME    L     13,4(13)
.RCHK    AIF   ('&RC' EQ '(15)').REG15
         AIF   ('&RC'(1,1) EQ '(').REGLOAD
         AIF   ('&RC' EQ 'NO').NORC
         AIF   (T'&RC NE 'N').ERR
         AIF   ('&RC' EQ '0').SLR
         LA    15,&RC
         AGO   .REG15
.SLR     SLR   15,15 .             SET ZERO RETURN CODE
.REG15   L     14,12(13)
         LM    0,12,20(13)
         AGO   .OUT
.NORC    LM    14,12,12(13)
.OUT     BR    14
         MEXIT
.REGLOAD LR    15,&RC(1)
         AGO   .REG15
.ERR     MNOTE 8,'INVALID RETURN CODE VALUE - IGNORED'
         AGO   .NORC
         MEND
         TITLE 'SYSORG - REORGANISE PROGRAM LIBRARIES'
         ISEQ  73,80
         SPACE 3
***********************************************************************
*                                                                     *
*        THE PURPOSE OF THIS PROGRAM IS TO REORGANISE PROGRAM         *
*                                                                     *
*        LIBRARIES.  THIS IS ACHIEVED BY DYNAMICALLY INVOKING THE     *
*                                                                     *
*        COMPRESS FEATURE OF IEBCOPY.  ON RETURN FROM IEBCOPY ANY     *
*                                                                     *
*        COMPLETE UNUSED EXTENTS ARE FREED.  ANY NUMBER OF LIBRARIES  *
*                                                                     *
*        MAY BE REORGANISED FOR EACH RUN OF SYSORG, AN ATTEMPT BEING  *
*                                                                     *
*        MADE TO COMPRESS ANY FILE THAT DOES NOT HAVE A 'STANDARD'    *
*                                                                     *
*        DDNAME.                                                      *
*                                                                     *
*                                                                     *
*        REGISTER USAGE:                                              *
*                                                                     *
*              R0 - SYSTEM/WORK                                       *
*              R1 - SYSTEM/WORK                                       *
*              R2 - WORK                                              *
*              R3 - WORK                                              *
*              R4 -                                                   *
*              R5 -                                                   *
*              R6 - BAL REGISTER                                      *
*              R7 -                                                   *
*              R8 -                                                   *
*              R9 - DEB ADDRESS                                       *
*             R10 - CURRENT TIOT ->                                   *
*             R11 -                                                   *
*             R12 - BASE                                              *
*             R13 - SAVE                                              *
*             R14 - SYSTEM                                            *
*             R15 - SYSTEM                                            *
*                                                                     *
*                                                                     *
*        WRITEN BY CHRIS HUTCHINS, NOVEMBER 1974,                     *
*                                                                     *
*        WEST SUSSEX COUNTY COUNCIL SYSTEMS PROGRAMMING GROUP.        *
*                                                                     *
***********************************************************************
         EJECT
SYSORG   CSECT
         BEGIN
         OPEN  (SYSORGP,(OUTPUT))
         L     R10,16         -> CVT
         L     R10,0(R10)     -> TCB NEW/OLD
         L     R10,4(R10)     -> TCB
         L     R10,12(R10)    -> TIOT
         ST    R10,TIOTSAVE        SAVE TIOT ADDRESS
         LA    R10,24(R10)    -> FIRST DD ENTRY
TIOTSTRT CLC   0(4,R10),=F'0' END OF TIOT?
         BE    EOJ            YES, THEN END OF JOB
         LA    R1,SPNAMES
TIOTLOOP CLC   0(8,R1),ENDSP  END OF SPECIAL NAMES?
         BE    READJFCB       YES, THEN READ JFCB
         CLC   0(8,R1),4(R10) TIOT DD NAME IN TABLE?
         BE    TIOTNEXT       YES, THEN SPECIAL DD NAME
         LA    R1,8(R1)
         B     TIOTLOOP
         EJECT
*
*        DETERMINE IF FILE IS OK TO BE COMPRESSED
*
READJFCB MVC   SYSLIB+40(8),4(R10)      MOVE DDNAME TO DCB
         RDJFCB MF=(E,RDJFCB)
         LTR   R15,R15        READ OK?
         BNZ   ABEND1         NO, THEN ABEND
         PUT   SYSORGP,P           PUT BLANK LINE
         SP    LCOUNT,=P'1'
         TM    JFCBAREA+87,X'80'   IS
         BO    NOTOLD                 DISP
         TM    JFCBAREA+87,X'40'           EQUAL
         BO    DISPOK                            TO OLD
NOTOLD   OI    SW,X'80'            TURN ON 'NOGO' SWITCH
         OI    RETCODE+1,X'04'
         MVC   PMESS(L'MESS1),MESS1
         BAL   R6,PRT
DISPOK   OBTAIN DSCBCAM            READ IN F1 DSCB
         LTR   R15,R15             READ OK?
         BNZ   ABEND3              NO, THEN ABEND
         TM    DSCBAREA+38,X'02'   DSORG = PO?
         BO    NOGO
         OI    SW,X'80'            TURN ON 'NOGO' SWITCH
         OI    RETCODE+1,X'04'
         MVC   PMESS(L'MESS2),MESS2
         BAL   R6,PRT
NOGO     TM    SW,X'80'            NOGO CONDITION
         BZ    SYSINSET            NO, THEN SET UP SYSIN FILE
         MVC   PMESS(L'MESS3),MESS3
         BAL   R6,PRT
         NI    SW,X'7F'
         B     TIOTNEXT
         EJECT
*
*        SET UP SYSIN FILE FOR IEBCOPY
*
SYSINSET OPEN  (SYSIN,(OUTPUT))
         PUT   SYSIN
         MVC   0(80,R1),COPY
         MVC   11(8,R1),4(R10)     INSERT FROM DD NAME
         LA    R0,7                LOAD INCREMENT
         LA    R2,12(R1)           LOAD STARTING ADDRESS
COPYLOOP CLI   0(R2),C' '          END OF DD NAME?
         BE    INDDEND             YES, THEN MOVE IN NEXT CONSTANT
         LA    R2,1(R2)            INCREMENT
         BCT   R0,COPYLOOP
INDDEND  MVC   0(7,R2),=C',OUTDD=' MOVE IN OUTDD CONSTANT
         MVC   7(8,R2),4(R10)      INSERT TO DD NAME
         CLOSE (SYSIN,REREAD)
         EJECT
*
*        LINK TO IEBCOPY
*
         LINK  EP=IEBCOPY,PARAM=(H0),VL=1
         LTR   R15,R15             COMPRESS OK?
         BZ    FREEUUE             YES, THEN FREE UNUSED EXTENTS
         OI    RETCODE+1,X'08'
         MVC   PMESS(L'MESS4),MESS4
         CVD   R15,DWRK
         EDIT  PMESS+27,DWRK+6,'X0X'
         BAL   R6,PRT
         B     TIOTNEXT
         EJECT
*
*        FREE UNUSED EXTENTS
*
FREEUUE  EQU   *
         RDJFCB MF=(E,RDJFCB)      GET JFCB AGAIN
         LTR   R15,R15
         BNZ   ABEND1
         OI    JFCBAREA+52,X'08'   JFCB NOT TO BE WRITTEN BACK
         NI    JFCBAREA+87,X'BF'   CHANGE DISP
         OI    JFCBAREA+87,X'80'               TO MOD
         OPEN  (,OUTPUT),TYPE=J,MF=(E,RDJFCB)
         OI    SYSLIB+48,X'80'     ENSURE WRITE BIT ON
         L     R9,SYSLIB+44        LOAD DEB ADDRESS
         SLR   R2,R2               CLEAR R2
         IC    R2,SYSLIB+5         LOAD M FROM FDAD OF DCB
         SLR   R3,R3               CLEAR R3
         IC    R3,16(R9)           LOAD M FROM DEB
         BCTR  R3,0                     AND DECREMENT BY 1
         CR    R2,R3               COMPARE M'S
         BH    ABEND4
         BE    CLOSE
         MVC   DWRK,SYSLIB+5       SAVE FDAD FROM DCB
         OI    8(R9),X'10'         TURN ON 'RLSE' BIT IN DEB
         SLA   R2,4                MULTIPLY DCB M BY 16
         LA    R1,32(R2,R9)        POINT TO LAST USED EXTENT
         CLC   SYSLIB+8(4),10(R1)  IS CCHH IN DEB & DCB EQUAL?
         BE    FSTCLOSE            YES, THEN DO NOT CHANGE
         MVC   SYSLIB+8(4),10(R1)  MOVE DEB CCHH TO DCB
         MVI   SYSLIB+12,X'00'     ZEROISE R
FSTCLOSE CLOSE SYSLIB              CLOSE
         OPEN  (SYSLIB,(OUTPUT))
         MVC   SYSLIB+5(8),DWRK    RESTORE FDAD
         OI    SYSLIB+48,X'80'     ENSURE WRITE BIT IS ON
CLOSE    CLOSE SYSLIB
         MVC   PMESS(L'OKMESS),OKMESS
         BAL   R6,PRT
         SPACE
TIOTNEXT LA    R10,20(R10)         POINT TO NEXT TIOT ENTRY
         B     TIOTSTRT
         EJECT
*
*        SYSORGP DCB EXIT
*
PEXIT    CLC   62(2,R1),H0         DCB BLKSIZE ZERO?
         BCR   7,R14
         MVC   62(2,R1),=H'484'    INSERT DEFAULT BLKSIZE
         BR    R14                 RETURN
         EJECT
*
*        END OF JOB
*
EOJ      PUT   SYSORGP,E1
         PUT   SYSORGP,E2
         CLOSE SYSORGP
         LH    R15,RETCODE
         FINISH RC=(15)
         EJECT
*
*        ABEND
*
ABEND1   LA    R1,1
         B     ABEND
ABEND2   LA    R1,2
         B     ABEND
ABEND3   LA    R1,3
         B     ABEND
ABEND4   LA    R1,4
         B     ABEND
ABEND    ABEND (1),DUMP
         EJECT
*
*        PRINT SUBROUTINE
*
PRT      MVC   P+1(8),4(R10)       PLUG IN DDNAME
         MVC   P+10(44),JFCBAREA   PLUG IN DSNAME
         CLI   P,C' '
         BNE   TWO
         SP    LCOUNT,=P'1'
         B     END
TWO      CLI   P,C'0'
         BNE   THREE
         SP    LCOUNT,=P'2'
         B     END
THREE    CLI   P,C'-'
         BNE   ABEND2
         SP    LCOUNT,=P'3'
END      BP    PUT
         EDIT  HEAD1+117,PCOUNT,'X0X'
         AP    PCOUNT,=P'1'
         ZAP   LCOUNT,=P'50'
         PUT   SYSORGP,HEAD1
         PUT   SYSORGP,HEAD2
         PUT   SYSORGP,HEAD3
         PUT   SYSORGP,HEAD4
PUT      PUT   SYSORGP,P
         CLC   PMESS(L'OKMESS),OKMESS
         BE    CLEARP
         L     R1,TIOTSAVE
         CLC   0(8,R1),=CL8'SYSORG'
         BNE   CLEARP
         WTO   'SYSORG HAS NOT COMPLETED SUCCESSFULLY'
CLEARP   MVI   P,C' '
         MVC   P+1(L'P-1),P
         BR    R6
         EJECT
*
*        CONSTANTS AND WORK AREAS
*
DWRK     DS    D
SPNAMES  DC    CL8'SYSPRINT'
         DC    CL8'SYSORGP'
         DC    CL8'SYSUT1'
         DC    CL8'SYSUT2'
         DC    CL8'SYSUT3'
         DC    CL8'SYSUT4'
         DC    CL8'SYSIN'
         DC    CL8'STEPLIB'
         DC    CL8'JOBLIB'
         DC    CL8'SYSUDUMP'
         DC    CL8'SYSABEND'
         DC    CL8' '              CONCATENATED ENTRIES
ENDSP    DC    8X'FF'
TIOTSAVE DS    F
SW       DC    X'00'
P        DC    CL121' '
PMESS    EQU   P+1+8+1+44
MESS1    DC    C'DISP IS NOT EQUAL TO ''OLD'''
LCOUNT   DC    PL2'0'
PCOUNT   DC    PL2'1'
HEAD1    DC    CL121' '
         ORG   HEAD1
         DC    C'1SYSORG - PROGRAM LIBRARY REORGANISATION'
         ORG   HEAD1+113
         DC    C'PAGE'
         ORG
HEAD2    DC    CL121' '
         ORG   HEAD2
         DC    C' ***************************************'
         ORG   HEAD2+113
         DC    8C'*'
         ORG
HEAD3    DC    CL121' '
         ORG   HEAD3
         DC    C'0DDNAME   DSNAME'
         ORG   HEAD3+1+8+1+44
         DC    C'MESSAGE'
         ORG
DSCBCAM  CAMLST SEARCH,JFCBAREA,JFCBAREA+118,DSCBAREA
DSCBAREA DC    0D'0',148X'00'
MESS2    DC    C'DSORG IS NOT EQUAL TO ''PO'''
MESS3    DC    C'REORGANISATION NOT RUN BECAUSE OF ERRORS IN FILE'
COPY     DC    CL80' COPY INDD='
H0       DC    H'0'
MESS4    DC    C'IEBCOPY COMPRESS FAILED (RC    ) - UNUSED EXTENTS NOT -
               FREED'
RETCODE  DC    H'0'
E1       DC    CL121'-END OF JOB'
E2       DC    CL121' **********'
OKMESS   DC    C'REORGANISATION SUCCESSFUL'
HEAD4    DC    CL121' '
         LTORG
         EJECT
*
*        DCB'S, ETC.
*
SYSORGP  DCB   DSORG=PS,MACRF=PM,DDNAME=SYSORGP,EXLST=PEXITLST,        -
               RECFM=FBA,LRECL=121
         SPACE 5
PEXITLST DS    0F
         DC    X'85',AL3(PEXIT)
         EJECT
SYSLIB   DCB   DSORG=PO,MACRF=W,EXLST=JEXITLST,DDNAME=X
         SPACE 5
JEXITLST DS    0F
         DC    X'87',AL3(JFCBAREA)
JFCBAREA DC    XL176'00'
RDJFCB   RDJFCB SYSLIB,MF=L
         EJECT
SYSIN    DCB   DSORG=PS,MACRF=PL,DDNAME=SYSIN,                         -
               LRECL=80,BLKSIZE=80,RECFM=F,BUFNO=1
         END
