 /*      ZAJL5 - FORM ENTRY IN NODE OR DATASET TABLE */
0ZAJL5:  PROC(P) REORDER;
0/* PARAMETER AND WORKING POINTER     */
         DCL   (P,Q) POINTER;
-/* STRUCTURE TO HOLD TABLE OF NODES  */
         DCL   1    NODES(200) EXTERNAL,
 /*                   NODE NAME       */
                    2 NDN     CHAR(44),
 /*                   LENGTH OF NAME  */
                    2 NDNLN   FIXED BIN(15),
 /*                   VOLUME SERIAL   */
                    2 NDVOL   CHAR(6),
 /*                   INDEX ADDRESS   */
                    2 NDTTR   CHAR(3),
 /*                   FLAGS           */
                    2 NDFLG   BIT(8) ALIGNED;
-/* STRUCTURE TO HOLD TABLE OF DATASETS */
         DCL   1    DSETS(600) EXTERNAL,
 /*                   FOR ALPHAMERIC SEQUENCING */
                    2 DSSEQ   FIXED BIN(16),
 /*                   DATASET NAME    */
                    2 DSN     CHAR(44),
 /*                   LENGTH OF NAME  */
                    2 DSNLN   FIXED BIN(15),
 /*                   VOLUME SERIAL   */
                    2 DSVOL   CHAR(6),
 /*                   DEVICE TYPE     */
                    2 DSTYP   CHAR(4);
-/* STRUCTURE TO HOLD COMMON COUNTERS */
         DCL   1    CTRS EXTERNAL,
 /*                   LAST ENTRY IN NODE TABLE       */
                    2 NND     FIXED BIN(15),
 /*                   LAST ENTRY IN DATASET TABLE    */
                    2 NDS     FIXED BIN(15),
 /*                   CURRENT NODE                   */
                    2 JND     FIXED BIN(15),
 /*                   FIRST DATASET ENTRY IN ALPHAMERIC SEQUENCE  */
                    2 ALPHA   FIXED BIN(15);
-/* STRUCTURE TO DESCRIBE A CATALOG ENTRY  */
         DCL   1    ENT  BASED(Q),
 /*                   NAME OF ENTRY   */
                    2 ENM     CHAR(8),
 /*                   POINTER         */
                    2 ETTR    CHAR(3),
 /*                   COUNT           */
                    2 ECT     BIT(8) ALIGNED,
 /*                   VOLUME COUNT    */
                    2 EVCT    FIXED BIN(15),
 /*                   VOLUME INFORMATION   */
                    2 EVI(5),
 /*                        DEFINE FLAGS    */
                         3 FL1     BIT(16),
 /*                        DEVICE CLASS */
                         3 DEVCL  BIT(8) ALIGNED,
 /*                        UNIT TYPE */
                         3 UNITYP BIT(8) ALIGNED,
 /*                        VOLUME SERIAL   */
                         3 EVOL    CHAR(6),
 /*                        DATASET SEQUENCE*/
                         3 ESEQ    BIT(16);
0/*      OTHER DECLARATIONS */
         DCL   ABIT BIT(32) ALIGNED,
               BBIT BIT(32) STATIC ALIGNED INIT ((32)'1'B),
               CH   CHAR(4);
-/*      ARRAY OF DIRECT ACCESS UNIT TYPES */
         DCL UNITS(9) CHAR(4) STATIC INIT('2311','2301','2303','2302',
                              '2321','2305','2305','2314','3330');
         DCL CTN CHAR(12) VAR;
-/*      INITIALISATION     */
         Q=P;
         IF UNSPEC(SUBSTR(ENM,2,1))='00001111'B
           THEN NDFLG(JND)='11111111'B;
         J=VERIFY(ENM,'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-#@$');
         IF J=0 THEN J=9;
-/*      HANDLE INDEX POINTER ENTRIES */
         IF ECT='00000000'B
           THEN DO;
                NND=NND+1;
                IF NND > HBOUND(NDN,1)
                  THEN DO;
 NDNFULL:
                       PUT SKIP(2) EDIT('NODE TABLE FULL')(A);
                       GO TO DONE;
                       END;
                NDFLG(NND)='0'B;
 INDX:          NDNLN(NND)=NDNLN(JND)+J;
                NDVOL(NND)=NDVOL(JND);
                NDTTR(NND)=ETTR;
                NDN(NND)=SUBSTR(NDN(JND),1,NDNLN(JND))××'.'××ENM;
                GO TO DONE;
                END;
-/*      HANDLE VCB POINTER ENTRIES   */
         IF ECT='00000001'B
           THEN DO;
                NDS=NDS+1;
                IF NDS>HBOUND(DSN,1)
                  THEN DO;
 TOOMANY:              PUT SKIP(2) EDIT('TOO MANY ENTRIES IN INDEX ',
                                        NDN(1)) (A,A);
                       GO TO DONE;
                       END;
                DSN(NDS)=SUBSTR(NDN(JND),1,NDNLN(JND))××'.'××ENM;
                DSVOL(NDS)='';
                DSTYP(NDS)='';
                CALL SEQ;
                GO TO DONE;
                END;
-/*      HANDLE GDG POINTER ENTRIES   */
         IF ECT='00000010'B
           THEN DO;
                NND=NND+1;
                IF NND > HBOUND(NDN,1) THEN GO TO NDNFULL;
                NDFLG(NND)='11111111'B;
                GO TO INDX;
                END;
-/*      REARRANGE GDG NAMES          */
0        IF NDFLG(JND)
           THEN DO;
                ABIT=UNSPEC(SUBSTR(ENM,2,4));
                ABIT=BOOL(ABIT,BBIT,'0110'B);
                UNSPEC(CH)=ABIT;
                SUBSTR(ENM,2,4)=CH;
                END;
-/*      PUT ENTRIES IN DATASET TABLE */
         CTN='';
0        DO J=1 TO EVCT;
           NDS=NDS+1;
           IF NDS > HBOUND(DSN,1)
             THEN GO TO TOOMANY;
           DSN(NDS)=SUBSTR(NDN(JND),1,NDNLN(JND))××'.'××ENM;
           DSNLN(NDS)=LENGTH(CTN);
           DSVOL(NDS)=EVOL(J);
           CALL SEQ;
           DSTYP(NDS)='????';
           IF DEVCL(J)='10000000'B THEN DSTYP(NDS)='TAPE';
           IF DEVCL(J)='00100000'B THEN DSTYP(NDS)=UNITS(UNITYP(J));
           CTN=' (CONTINUED)';
         END;
-/*      CONCLUSION    */
 DONE:
         RETURN;
-/*      PROCEDURE TO ENTER DATASET IN COLLATING SEQUENCE      */
0SEQ:    PROC;
         DCL (K,L) FIXED BIN;
         IF ALPHA=0
           THEN
 FIRST:         DO;
                DSSEQ(NDS)=ALPHA;
                ALPHA=NDS;
                RETURN;
                END;
         IF DSN(NDS)<DSN(ALPHA)
           THEN GO TO FIRST;
         K=ALPHA;
 NEXT:
         L=DSSEQ(K);
         IF L=0
           THEN
 INSERT:        DO;
                DSSEQ(K)=NDS;
                DSSEQ(NDS)=L;
                RETURN;
                END;
         IF DSN(NDS)<DSN(L)
           THEN GO TO INSERT;
         K=L;
         GO TO NEXT;
         END;  /*  OF SEQ  */
-        END;  /* OF ZAJL5 */
