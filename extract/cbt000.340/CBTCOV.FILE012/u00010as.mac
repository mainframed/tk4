//*
//*                HIGH SPEED MEMBER SCRATCHING UTILITY
//*
//*                AUTHOR *** ANON ***
//*
         ICTL 01,65,16
         ISEQ 73,80
SUPASCRT CSECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6         INCREMENT REGISTER : F'1'
R7       EQU   7         WORK1 RECORD POINTER
R8       EQU   8         DIRECTORY ENTRY
R9       EQU   9         LINKAGE REGISTER
RA       EQU   10        DELETE TABLE MEMBER
RB       EQU   11        DCB REGISTER
RC       EQU   12        BASE2
RD       EQU   13        SAVE AND BASE1
RE       EQU   14
RF       EQU   15
         SPACE
CVTADR   EQU   16             CVT POINTER ADDR
RPT2314  EQU   17   # OF 256 BYTE KEYED RECORDS PER TRACK ON STD.
*****               DEVICE FOR TODAY: 2314. MUST BE CHANGED FOR
*****               ANOTHER DEVICE.
RPT3330  EQU   28   # OF 256 BYTE KEYED RECORDS PER 3330 TRACK
RPT23051 EQU   16   # OF 256 BYTE KEYED RECORDS PER 2305-1 TRACK
RPT23052 EQU   26   # OF 256 BYTE KEYED RECORDS PER 2305-2 TRACK
UCBADD   EQU   32   UCB ADDRESS INCR IN DEB
UCBDEVCL EQU   18   DEVICE CLASS IN UCB: X'20' = DIRECT ACCESS
UCBUNITT EQU   19   UNIT TYPE IN UCB: X'08'=2314, X'09'=3330
*                   X'06'=2305-1, X'07'=2305-2
         EJECT
*              FOR RELEASE 20.6 OF OS OR LATER.
         SPACE
*              REMOVE MEMBERS FROM A PDS. THIS INVOLVES READING
*              AND VARIFYING THE REQUEST CARDS, TABLING AND
*              SORTING THE MEMBER NAMES TO BE DELETED, AND
*              REMOVING THEM FROM THE DIRECTORY. THE DIRECTORY IS
*              READ. ENTRIES NOT DELETED ARE REBLOCKED AND
*              WRITTEN BACK ONTO THE DIRECTORY. XDAP IS USED TO
*              WRITE THE REVISED DIRECTORY BLOCKS.
*
*              SAMPLE JCL
*
*//STEP1  EXEC PGM=SUPASCRT
*//STEPLIB  DD    ..........
*//SYSPRINT  DD SYSOUT=A,DCB=BLKSIZE=2000
*//LIBRARY DD  DSN=LIB1,DISP=OLD
*//SYSIN  DD *
*MEMBER=PGM1
*M=PGM2
         SPACE
         USING *,RF
         SAVE  (14,12)
         ST    RD,SAVE+4
         LA    RD,SAVE
         L     RC,BASE2
         LA    R6,1           INCREMENT REGISTER: SET TO 1
         B     A
         SPACE
         DC    CL8'ZUTADAZ'
SAVE     DC    18F'0'
BASE2    DC    A(SAVE+4096)
         SPACE
         DROP  RF
         USING SAVE,RD,RC
         USING IHADCB,RB
A        L     R1,0(,R1)      ADDRESS OF PARAMETERS
         USING PASS,R1
         LH    R0,PLNG
         LTR   R0,R0
         BZ    A1
         C     R0,=F'8'
         BE    DD1
         C     R0,=F'16'
         BE    DD1
         C     R0,=F'24'
         BE    DD1
         SPACE
ABEND52  ABEND 52,DUMP
         SPACE
DD1      LA    RB,UT1
         MVC   DCBDDNAM,DDD
         C     R0,=F'8'
         BE    A1
         LA    RB,LDCBR
         MVC   DCBDDNAM,DDL
         LA    RB,LDCBW
         MVC   DCBDDNAM,DDL
         C     R0,=F'16'
         BE    A1
         LA    RB,SCROLL
         MVC   DCBDDNAM,DDS
         SPACE
A1       OPEN  (SCROLL,(OUTPUT))
         OPEN  (UT1,(INPUT))
         RDJFCB MF=(E,LDCBWO)
         LA    RB,UT1
         TM    DCBOFLGS,X'10'
         BZ    ABEND40
         LA    RB,SCROLL
         TM    DCBOFLGS,X'10'
         BO    B
         SPACE
*              FILE WITH DCB ADDRESS IN REG 11 DID NOT OPEN
         SPACE
ABEND40  ABEND 40,DUMP
         SPACE 2
*              GET THE DATE AND START THE PRINT FILE
         SPACE
B        TIME
         STM   R0,R1,WORKD
         OI    WORKD+3,X'0F'
         OI    WORKD+7,X'0F'
         ED    HDATE,WORKD+5
         ED    HTIME,WORKD
         PUT   SCROLL,HDR
         MVC   DFLF,JFCBL
         PUT   SCROLL,DFL
         EJECT
*              GET THE SCRATCH RECORDS AND TABLE THE NAMES
         SPACE
C        MVC   PL1MSG,=CL32'REQUEST OK'
CG       GET   UT1
         LA    R1,0(,R1)      ZERO HI-ORDER BYTE
         LA    R2,72          SEARCH LIMIT
         AP    SCT,=P'1'
         MVC   PL1CD,0(R1)
         SPACE
*              FIND KEYWORD IN SEARCH AREA OF CARD.
         SPACE
C1       CLC   0(7,R1),=C'MEMBER='
         BE    C3                  FOUND
         CLC   0(2,R1),=C'M='
         BE    C2N            FOUND
         AR    R1,R6          UP BY 1
         BCT   R2,C1               AGAIN
C2       MVC   PL1MSG,=CL32'***** REQUEST REJECTED *****'
         BAL   R9,PUTMSG
         AP    SCTREJ,=P'1'
         B     C
         SPACE
*              CREATE A SCRATCH TABLE ENTRY.
         SPACE
C2N      LA    R5,2(,R1)      ADDR OF NAME
         B     C3N
C3       LA    R5,7(,R1)           ADDR OF NAME
C3N      LA    R2,8
         LA    R0,16
         GETMAIN R,LV=(0)
         LR    R3,R1
         USING TAB1,R3
         MVC   T1NAME,=CL80' '
         LA    R4,T1NAME
C4       CLI   0(R5),C' '
         BE    C6             END OF NAME
         CLI   0(R5),C','
         BE    C6             END OF NAME
         MVC   0(1,R4),0(R5)
         AR    R4,R6          UP BY 1
         AR    R5,R6          UP BY 1
         BCT   R2,C4
         SPACE
*              INSERT A SCRATCH TABLE ENTRY IN CHAIN.
         SPACE
C6       LA    R4,TMEM1
         USING TAB2,R4
C7       CLC   T2NAME,T1NAME
         BE    C8                  NG - MATCHED
         BH    C10                 LOCATION FOUND
         L     R4,T2CHNU
         B     C7
         SPACE
*              REJECT DUPLICATE REQUEST.
         SPACE
C8       MVC   PL1MSG,=CL32'***** REQUEST MATCH *****'
         LA    R0,16
         FREEMAIN R,LV=(0),A=(R3)
         BAL   R9,PUTMSG
         AP    SCTREJ,=P'1'
         B     C
         SPACE
*              INSERT ENTRY IN CHAIN.
         SPACE
C10      MVC   T1CHND,T2CHND
         ST    R4,T1CHNU
         ST    R3,T2CHND
         L     R4,T1CHND
         ST    R3,T2CHNU
         AP    SCTACC,=P'1'
         BAL   R9,PUTMSG
         B     CG
         DROP  R3,R4
         EJECT
*              END OF FILE ON SCRATCH INPUT REQUEST RECORDS.
         SPACE
CDONE    LA    R2,UT1
         BAL   R9,CFP
         PUT   SCROLL,PL2
         ZAP   LINECT,=P'0'   FORCE NEW PAGE ON SCROLL
         MVC   PL1,=AL2(PL1L1)
         MVC   PL1TERM,PL1TERMI
         CP    SCTACC,=P'0'
         BH    CD1            AT LEAST ONE REQUEST ACCEPTED
         MVC   PL1MSG,=CL32'NO REQUESTS TO PROCESS: EOJ'
         BAL   R9,PUTMSG
         CP    SCT,=P'0'      HOUSEKEEPING END-OF-FILE?
         BE    CSCROLL        YES
         LA    R2,SCROLL
         BAL   R9,CFP
         SPACE
*              NO SCRATCHES WERE ACCEPTED.
         SPACE
ABEND44  ABEND 44,DUMP
         SPACE
*              SCRATCH ACCEPTED. SCRATCH FROM BEGINNING TO END
*              OF CHAIN. SKIP DUMMY 1ST MEMBER.
         SPACE
CD1      LA    RA,TMEM1            BGN OF CHAIN MEMBER
         USING TAB1,RA
         EJECT
*              READ THE DIRECTORY AND WRITE MEMBERS ON THE OUTPUT
*              DIRECTORY IF THEY ARE NOT DELETED.
         SPACE
         OPEN  (LDCBR,(INPUT))
         OPEN  TYPE=J,MF=(E,LDCBWO)
         LA    RB,LDCBR
         TM    DCBOFLGS,X'10'
         BZ    ABEND40
         LA    RB,LDCBW
         TM    DCBOFLGS,X'10'
         BZ    ABEND40
         SPACE 2
*              DETERMINE IF LDCBW IS ON 2314, 3330, OR 2305.
         SPACE
         L     R1,DCBDEBAD    DEB ADDRESS
         L     R2,UCBADD(,R1) UCB ADDRESS
         MVC   UCBDC,UCBUNITT(R2) DEVICE TYPE TO SECTOR ADDR FD
         CLI   UCBDEVCL(R2),X'20' DIRECT ACCESS?
         BE    DEVCK1         YES
ABEND56  ABEND 56,DUMP
         SPACE
DEVCK1   CLI   UCBUNITT(R2),X'08' 2314?
         BE    DEVCK2         YES
         CLI   UCBUNITT(R2),X'09' 3330?
         BE    DEVCK3         YES
         CLI   UCBUNITT(R2),X'06' 2305 MODEL 1?
         BE    DEVCK4         YES
         CLI   UCBUNITT(R2),X'07' 2305 MODEL 2?
         BNE   ABEND56
         MVI   DEVSW,X'43'    2305 MODEL 2
         MVC   RCC,=AL1(RPT23052)
         B     DEVCKE
DEVCK2   MVI   DEVSW,X'81'    2314
         MVC   RCC,=AL1(RPT2314)
         B     DEVCKE
DEVCK3   MVI   DEVSW,X'41'    3330
         MVC   RCC,=AL1(RPT3330)
         B     DEVCKE
DEVCK4   MVI   DEVSW,X'42'    2305 MODEL 1
         MVC   RCC,=AL1(RPT23051)
DEVCKE   EQU   *
         SPACE 2
*              PICK UP SUB-ROUTINE ADDRESS NEEDED FROM CVT.
         SPACE
         LA    R1,CVTADR      CVT POINTER ADDRESS
         L     R1,0(,R1)      CVT ADDRESS
         USING CVT,R1
         L     R2,CVTPCNVT    ADDRESS OF OS TTR CONVERSION RTN
         L     R3,CVT0SCR1    ADDRESS OF OS SECTOR CONVERT RTN
         DROP  R1
         ST    R2,CNVTADR
         ST    R3,CNVTRPS
         SPACE
         USING DIR,R8
         USING WDIR,R7
         LA    R3,31          AND MASK
         LA    R7,AREABGN
         SR    R8,R8          ZERO TO INDICATE NO DIR ADDRESS
         BAL   R9,GETDIR
         EJECT
*              COMPARE DIRECTORY ENTRY NAME TO SCRATCH REQUEST
*              NAME. WRITE NON-MATCHED DIRECTORY ENTRY ON OUTPUT.
*              REJECT BYPASSED SCRATCH REQUEST. NOTE DELETION
*              ON SCROLL.
         SPACE
D1       L     RA,T1CHNU      NEXT CHAIN MEMBER
         MVC   PL1NAME,T1NAME
D2       CLC   NAME,T1NAME
         BL    D4                  COPY TO WORK1
         BE    D3                  MATCH: DELETE
         SPACE
*              BYPASSED DELETE REQUEST.
         SPACE
         MVC   PL1MSG,=CL32'***** UNMATCHED REQUEST *****'
         BAL   R9,PUTMSG
         AP    SCTNG,=P'1'
         B     D1
         SPACE
*              MATCH: NOTE DELETION ON SCROLL UNLESS END OF LIST.
*              END OF LIST MATCH INDICATES THAT THE LAST
*              DIRECTORY ENTRY HAS BEEN FOUND.
         SPACE
D3       CLC   NAME,ENDKEY    END OF LIST?
         BE    D4             YES
         AP    SCTDLT,=P'1'
         MVC   PL1MSG,=CL32'ENTRY DELETED'
         BAL   R9,PUTMSG           DELETE MESSAGE
         BAL   R9,GETDIR           NEXT DIRECTORY ENTRY
         B     D1
         EJECT
*              SAVE THIS DIRECTORY ENTRY. NO SCRATCH REQUEST
*              WAS RECEIVED.
         SPACE
D4       LA    R0,1(,R4)
         AH    R0,AREALNG
         C     R0,=F'256'
         BH    D6             MUST WRITE AREA
         STH   R0,AREALNG
         EX    R4,MVCB
         MVC   KEY,NAME
         CLC   KEY,ENDKEY
         BE    D5
         LA    R7,1(R4,R7)
         AP    CCT,=P'1'
         BAL   R9,GETDIR
         B     D2
         SPACE
MVCB     MVC   0(1,R7),0(R8)
         SPACE 2
*              LAST DIRECTORY RECORD FOUND. READ REST OF BLOCKS.
*              DIRCT WILL HOLD COUNT OF DIRECTORY BLOCKS.
         SPACE
D5       GET   LDCBR
         AP    DIRCT,=P'1'
         B     D5
         SPACE 2
*              WRITE AN OUTPUT DIRECTORY BLOCK.
         SPACE
D6       BAL   R9,WRDIR
         MVC   AREA,INIT
         LA    R7,AREABGN
         AP    WRCT,=P'1'
         B     D4
         EJECT
*              END OF FILE ON INPUT. WRITE LAST BLOCK AND PADDING
*              BLOCKS.
         SPACE
EODIR    LA    R2,LDCBR
         BAL   R9,CFP
         BAL   R9,WRDIR
         AP    WRCT,=P'1'
         MVC   AREA,INIT
         MVC   KEY(16),INIT+8
F1       CP    WRCT,DIRCT
         BNL   F2
         BAL   R9,WRDIR            WRITE DIRECTORY BLOCK
         AP    WRCT,=P'1'
         AP    EDIRCT,=P'1'
         B     F1
         SPACE
*              GET THE DATA SET CONTROL BLOCK FOR THE LIBRARY.
         SPACE
F2       OBTAIN DSCBL
         SPACE
*              DCBFDAD:MACHINE FORM OF ADDRESS OF LAST BLOCK
*              WRITTEN, AND DCBTRBAL: TRACK BALANCE AFTER THAT
*              LAST BLOCK, MUST BE PUT IN THE DCB BEFORE CLOSING
*              TO PREVENT DESTRUCTION OF THE DSCB.
         SPACE
         STM   R0,RF,HOLDREG
         MVC   TTR(3),DS1LSTAR     TTR OF LAST BLOCK WRITTEN
         L     R0,TTR
         L     R1,DCBDEBAD
         LA    R2,DCBFDAD
         L     RF,CNVTADR
         BALR  RE,RF          GO TO CONVERT TO MACHINE FORM.
         DROP  RD
         USING *,RE
         LM    R0,RF,HOLDREG
         DROP  RE
         USING SAVE,RD
         MVC   DCBTRBAL,DS1TRBAL   TRACK BALANCE FROM DSCB
         CLOSE (LDCBW)
         EJECT
*              PUT OUT STATISTICS LINES.
         SPACE
         ED    SPL1A,SCT
         ED    SPL1B,SCTACC
         ED    SPL1C,SCTREJ
         ED    SPL2A,SCTNG
         ED    SPL2B,SCTDLT
         ED    SPL3A,CCT
         ED    SPL3B,DIRCT
         ED    SPL3C,WRCT
         ED    SPL4A,EDIRCT
         PUT   SCROLL,HDR
         PUT   SCROLL,DFL
         PUT   SCROLL,SPL1
         PUT   SCROLL,SPL2
         PUT   SCROLL,SPL3
         PUT   SCROLL,SPL4
         PUT   SCROLL,EPL
CSCROLL  LA    R2,SCROLL
         BAL   R9,CFP
         EJECT
*              FREE CORE IN THE SCRATCH REQUEST CHAIN.
         SPACE
         LA    RA,TMEM1       ADDRESS OF DUMMY 1ST MEMBER
         L     RA,T1CHNU
E1       C     RA,=A(TMEM2)
         BE    RETURN
         LR    R1,RA
         L     RA,T1CHNU
         LA    R0,16
         FREEMAIN R,LV=(0),A=(1)
         B     E1
RETURN   L     RD,SAVE+4
         RETURN (14,12),RC=0
         EJECT
*              CLOSE DCB IN R2 AND FREEPOOL. RETURN TO R9.
         SPACE
CFP      CLOSE ((R2))
         FREEPOOL (R2)
         BR    R9
         EJECT
*              PUT A MESSAGE ON SCROLL. LINKAGE REGISTER IS R9.
         SPACE
PUTMSG   CP    LINECT,=P'0'   NEW PAGE NEEDED?
         BH    P1             NO
         PUT   SCROLL,HDR
         ZAP   LINECT,=P'58'
         MVI   PL1CTL,C'0'
P1       PUT   SCROLL,PL1
         MVI   PL1CTL,C' '
         SP    LINECT,=P'1'
         BR    R9
         EJECT
*              READ AND DEBLOCK THE INPUT DIRECTORY.
*              R8 IS TO HAVE DIRECTORY ENTRY ADDRESS.
*              R4 IS TO HAVE THE CURRENT ENTRY LENGTH - 1.
         SPACE
GETDIR   LTR   R8,R8
         BZ    G1             READ 1ST BLOCK
         LA    R8,1(R4,R8)    ADDR OF NEXT DIRECTORY ENTRY
         C     R8,DIRLIM      WITHIN BLOCK LIMIT?
         BL    G2             YES
         SPACE
*              READ THE NEXT BLOCK.
         SPACE
G1       GET   LDCBR
         AP    DIRCT,=P'1'
         LH    RE,0(,R1)      DATA LENGTH
         LA    RE,0(RE,R1)    LIMIT ADDRESS
         ST    RE,DIRLIM
         LA    R8,2(,R1)
G2       IC    R4,DIRLNG
         NR    R4,R3          HALF-WORDS
         SLL   R4,1           BYTES
         LA    R4,WDIRTXT-WNAME-1(,R4) FULL LENGTH - 1
         BR    R9
         EJECT
*              WRITE NEXT DIRECTORY BLOCK. RETURN TO R9.
         SPACE
WRDIR    STM   R0,RF,HOLDREG  PREPARE TO USE IECPCNVT
         CLC   R,RCC          TRACK FULL?
         BNE   WRDIR1         NO
         LA    R0,1           UP RELATIVE TRACK
         AH    R0,TT
         STH   R0,TT          NEW TRACK #
         MVI   R,X'00'        NEW RELATIVE BLOCK
WRDIR1   SR    R1,R1          UP RELATIVE BLOCK BY 1
         IC    R1,R
         AR    R1,R6          +1
         STC   R1,R
         STC   R1,RRPS
         L     R0,TTR         TTRN
         L     R1,DCBDEBAD    DEB ADDRESS
         LA    R2,DISKADD     ACTUAL ADDR FD ADDR.
         L     RF,CNVTADR     SUBROUTINE ADDR.
         BALR  RE,RF          LINK TO CONVERT ROUTINE
         DROP  RC,RD
         USING *,RE
         LM    R0,RF,HOLDREG
         DROP  RE
         USING SAVE,RD,RC
         TM    DEVSW,X'40'    RPS DEVICE?
         BO    WRDIR10        YES
         SPACE
*              WRITE THE DIRECTORY BLOCK. XDAP MUST BE USED
*              BECAUSE KEY MUST BE WRITTEN FOR EACH BLOCK.
         SPACE
         XDAP  XECB,WI,LDCBW,KEY,264,,DISKADD
         WAIT  ,ECB=XECB
         CLI   XECB,X'7F'     COMPLETED OK?
         BE    WRDIR2         YES
         SPACE
*              I/O ERROR IN WRITING THE DIRECTORY
         SPACE
ABEND48  ABEND 48,DUMP
         SPACE
WRDIR2   MVI   XECB,X'00'
         BR    R9
         SPACE
*              WRITE DIRECTORY BLOCK ON A DEVICE WITH ROTATIONAL
*              POSITION SENSING. XDAP MUST BE USED BECAUSE A KEY
*              MUST BE WRITTEN FOR EACH BLOCK.
         SPACE
WRDIR10  L     R0,DDKR
         L     R2,SECPARM2
         L     RF,CNVTRPS
         BALR  RE,RF
         DROP  RC,RD
         USING *,RE
         LM    R0,RF,HOLDREG
         DROP  RE
         USING SAVE,RD,RC
         XDAP  XECB1,WI,LDCBW,KEY,264,,DISKADD,SECTOR
         WAIT  ,ECB=XECB1
         CLI   XECB1,X'7F'    COMPLETED OK?
         BNE   ABEND48        NO
         MVI   XECB1,X'00'
         BR    R9
         EJECT
*              CONSTANTS AND WORK AREAS
         SPACE
WORKD    DC    D'0'
KEY      DC    CL8' '
AREA     DS    0CL256
AREALNG  DC    H'2'
AREABGN  DC    XL254'00'
INIT     DS    0CL256
         DC    H'2'
         DC    H'0'
         DC    63F'0'
TMEM1    DS    0CL16     DUMMY START OF SCRATCH CHAIN
         DC    A(TMEM2)
         DC    3F'0'
TMEM2    DC    F'0'      DUMMY END OF SCRATCH CHAIN
         DC    A(TMEM1)
ENDKEY   DC    2F'-1'
DIRLIM   DC    F'0'
CNVTADR  DC    F'0'
CNVTRPS  DC    A(0)
TTR      DS    0F
TT       DC    H'0'
R        DC    X'00'
         DC    X'00'
DISKADD  DC    XL8'0'
DDKR     DS    0F
DD       DC    H'256'
K        DC    X'08'
RRPS     DC    X'00'
SECPARM2 DS    0F
UCBDC    DC    X'00'
         DC    AL3(SECTOR)
HOLDREG  DC    16F'0'
EL       DC    X'87'          READ-JFCB EXIT LIST
         DC    AL3(JFCBL)
JFCBL    DC    XL176'0'
LDCBWO   RDJFCB (LDCBW,(OUTPUT)),MF=L
DSCB     DS    0CL148
         DC    CL54' '        UNUSED
DS1LSTAR DC    CL3' '         TTR OF LAST BLOCK WRITTEN
DS1TRBAL DC    CL2' '         TRACK BALANCE
         DC    CL89' '        UNUSED
DSCBL    CAMLST SEARCH,JFCBL,JFCBL+JFCBVOLS-INFMJFCB,DSCB
SCT      DC    PL3'0'    INPUT REQUEST COUNT
SCTREJ   DC    PL3'0'    REQUEST REJECT
SCTACC   DC    PL3'0'    REQUEST ACCEPTED
SCTDLT   DC    PL3'0'    REQUEST MATCHED
SCTNG    DC    PL3'0'    REQUEST UNMATCHED
CCT      DC    PL3'0'    COPIED DIRECTORY ENTRY
DIRCT    DC    PL3'0'    COUNT OF INPUT DIRECTORY BLOCKS
WRCT     DC    PL3'0'    COUNT OF OUTPUT DIRECTORY BLOCKS
EDIRCT   DC    PL3'0'    COUNT OF EMPTY DIRECTORY BLOCKS
LINECT   DC    P'56'
DEVSW    DC    X'00'          X'81'=2314, X'41'=3330
SECTOR   DC    X'00'
RCC      DC    X'00'          RECORD COUNT COMPARE FIELD
         LTORG
         EJECT
*              PRINT LINES.
         SPACE
         DS    0H
HDR      DC    AL2(HDRE-HDR)
         DC    H'0'
         DC    C'1ZUTADS  PARTITIONED DATA SET MEMBER DELETE '
         DC    CL53'UTILITY (VERSION 6) (RELEASE 20.6)'
         DC    C'DATE:'
HDATE    DC    X'4020204B202020'
HTIME    DC    X'4021207A20207A20204B20'
HDRE     EQU   *
         SPACE
         DS    0H
PL1      DC    AL2(PL1E-PL1)
         DC    H'0'
PL1CTL   DC    C'0'
PL1MSG   DC    CL32' '
         DC    CL2'->'
PL1NAME  DS    CL8
PL1TERM  DS    CL2
PL1E1    EQU   *
PL1L1    EQU   PL1E1-PL1
         ORG   PL1NAME
PL1CD    DC    CL80' '
PL1TERMI DC    CL2'<-'
         DC    C' '
PL1E     EQU   *
         SPACE
         DS    0H
PL2      DC    AL2(PL2E-PL2)
         DC    H'0'
         DC    C'0END OF REQUESTS'
PL2E     EQU   *
         SPACE 2
         DS    0H
DFL      DC    AL2(DFLE-DFL),H'0'
         DC    C'0DELETIONS FROM FILE: '
DFLF     DC    CL44' '
DFLE     EQU   *
         EJECT
         DS    0H
SPL1     DC    AL2(SPL1E-SPL1)
         DC    H'0'
         DC    C'0SCRATCH REQUESTS -'
SPL1A    DC    X'4020206B202120'
         DC    C', ACCEPTED -'
SPL1B    DC    X'4020206B202120'
         DC    C', REJECTED -'
SPL1C    DC    X'4020206B202120'
SPL1E    EQU   *
         SPACE
         DS    0H
SPL2     DC    AL2(SPL2E-SPL2)
         DC    H'0'
         DC    C'0REQUESTS UNMATCHED -'
SPL2A    DC    X'4020206B202120'
         DC    C', REQUEST MATCHED -'
SPL2B    DC    X'4020206B202120'
SPL2E    EQU   *
         SPACE
         DS    0H
SPL3     DC    AL2(SPL3E-SPL3)
         DC    H'0'
         DC    C'0DIRECTORY ENTRIES COPIED -'
SPL3A    DC    X'4020206B202120'
         DC    C', DIRECTORY BLOCKS READ -'
SPL3B    DC    X'4020206B202120'
         DC    C', DIRECTORY BLOCKS WRITTEN -'
SPL3C    DC    X'4020206B202120'
         DC    C' '
SPL3E    EQU   *
         SPACE 2
         DS    0H
SPL4     DC    AL2(SPL4E-SPL4),H'0'
         DC    C'0UNUSED DIRECTORY BLOCKS -'
SPL4A    DC    X'4020206B202120'
         DC    C' '
SPL4E    EQU   *
         SPACE
         DS    0H
EPL      DC    AL2(EPLE-EPL)
         DC    H'0'
         DC    C'0END OF JOB '
EPLE     EQU   *
         EJECT
*              DCB'S
         SPACE
UT1      DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GL,EODAD=CDONE
         EJECT
*              BLKSIZE + BUFNO MUST BE IN DD-STATEMENT.
         SPACE
SCROLL   DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=VBA,    ***
               LRECL=124
         EJECT
LDCBR    DCB   DDNAME=LIBRARY,DSORG=PS,MACRF=GL,EODAD=EODIR,   ***
               RECFM=F,BLKSIZE=256,LRECL=256,OPTCD=C,BUFNO=200
         EJECT
LDCBW    DCB   DDNAME=ZUTADL,DSORG=PS,MACRF=E,EXLST=EL
         EJECT
*              DSECT'S
         SPACE
TAB1     DSECT
         SPACE
T1CHNU   DS    F
T1CHND   DS    F
T1NAME   DS    CL8
         SPACE 2
TAB2     DSECT
         SPACE
T2CHNU   DS    F
T2CHND   DS    F
T2NAME   DS    CL8
         SPACE 2
DIR      DSECT
         SPACE
NAME     DS    CL8
         DS    CL3
DIRLNG   DS    CL1
DIRTXT   EQU   *
         SPACE 2
WDIR     DSECT
         SPACE
WNAME    DS    CL8
         DS    CL3
WDIRLNG  DS    CL1
WDIRTXT  EQU   *
         SPACE 2
PASS     DSECT                PARAMETERS
         SPACE
PLNG     DS    H              LENGTH 0 OR 24
DDD      DS    CL8            ZUTADD DDNAME
DDL      DS    CL8            ZUTADL DDNAME
DDS      DS    CL8            ZUTADS DDNAME
         EJECT
         DCBD  DSORG=(PS)
         EJECT
CVT      DSECT
         SPACE
         CVT
         EJECT
JFCB     DSECT
         SPACE
         IEFJFCBN
         SPACE 2
         END
