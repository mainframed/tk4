 TITLE 'SYNONYM - PJC - 3/4/73 - EXECUTES ANY PROGRAM'
*    SYNONYM ACCEPTS AN INPUT PARM OF A PROGRAM NAME PLUS ANY PARMS
*   FOR THAT PROGRAM. IT INVOKES THE REQUESTED PROGRAM AND UPON RETURN
*   TESTS THE RETURN CODE. IF IT IS NON-ZERO SYNONYM ABENDS CODE = RC.
         SPACE 4
*   REGISTER USAGE
*        R1    AT ENTRY POINTS TO PARM ADDRESS
*        R2    PARM POINTER
*        R3    PARM SCANNING REG
*        R4    LENGTH/LENGTH-CODE OF PROGRAM NAME
*        R5    LENGTH/LENGTH-CODE OF ADDITIONAL PARM
*        R6    END-OF-PARM POINTER
*        R7    ZERO REGISTER
*        R8-11 NOT USED
*        R12   BASE REGISTER
         SPACE 4
SYNONYM  BEGIN
         SPACE 3
         L     2,0(1)                   R2 POINTS TO PARMLIST
         LA    7,0
         CH    7,0(2)                   IS THERE A PARM/Q
         BNL   PARMERR                  YES
         LA    3,2(2)                   R3 POINTS TO DATA PORTION
         SPACE 4
*   COMMARTN SCANS ALONG THE PARM SEARCHING FOR A COMMA.
*   ON EXIT R4 IS THE LENGTH CODE OF THE PROGRAM NAME AND
*   R3 IS POINTING AT THE COMMA.
*
COMMARTN LH    5,0(2)                   R5 IS DATA LENGTH OF INPUT PARM
         LA    6,0(5,3)                 R6 IS ADDRESS OF END OF PARM
         LA    4,0                      INITIALIZE R4
COMMALOP CLI   0(3),X'6B'               IS IT A COMMA/Q
         BNE   INCR3                    NO - CONTINUE SCAN
         BCTR  4,0                      SUBTRACT 1 TO GET LENGTH CODE
         B     MOVENAME
INCR3    LA    3,1(3)                   R3 POINTS TO NEXT BYTE OF DATA
         CR    3,6                      HAVE WE OVERSHOT PARM/Q
         BNL   MOVENAME                 YES
         CH    4,=H'8'                  VALID PROG.NAME LENGTH/Q
         BNL   PARMERR                  NO
         LA    4,1(4)                   INCREMENT LENGTH CODE
         B     COMMALOP
         SPACE 4
*   MOVENAME RTN BLANKS OUT PROGNAME AREA AND MOVES IN THE PROGRAM
*   NAME FROM THE PARM.
*
MOVENAME MVI   PROGNAME,X'40'
         MVC   PROGNAME+1(7),PROGNAME   BLANK OUT PROGNAME
         EX    4,PROGMOVE               MOVE IN NAME FROM PARM
         B     USERPARM
PROGMOVE MVC   PROGNAME(0),2(2)
         SPACE 4
*   USERPARM RTN RESETS THE INPUT PARM DATALENGTH AREA (ADDR BY R2)
*   TO THE LENGTH OF THE PARMS SUPPLIED IN ADDITION TO THE PROGNAME
*   AND THEN MOVES THE ADDITIONAL PARMS TO THE BEGINNING OF THE PARM
*   DATA AREA, UNLESS THERE IS NO ADDITIONAL PARM, IN WHICH CASE THE
*   LENGTH FIELD WILL BE ZERO.
*
USERPARM LA    4,1(4)         R4 IS NOW LENGTH OF PROGRAM NAME
         BCTR  5,0            ALLOW FOR COMMA
         SR    5,4            R5 IS NOW DATALENGTH - NAMELENGTH
         BNP   NOADDPRM       R5 NOT POSITIVE - NO ADDITIONAL PARM
         STH   5,0(2)         PARM LENGTH FIELD FOR ADDNL. PARM
         BCTR  5,0            LENGTH CODE FOR PARM MOVE
         EX    5,SHIFTPRM     LEFT JUSTIFY ADDNL. PARM
         B     INVOKPGM
SHIFTPRM MVC   2(0,2),1(3)    R3 IS COMMA PTR
         SPACE 2
NOADDPRM STH   7,0(2)         ZEROIZE PARM DATALENGTH
         B     INVOKPGM
         SPACE 4
*   INVOKPGM RTN LINKS TO THE REQUESTED PROGRAM. UPON RETURN, IF THE
*   RETURN CODE IS GREATER THAN ZERO WE ABEND WITH THE SAME CODE.
*
INVOKPGM LINK EPLOC=PROGNAME,PARAM=((2)),VL=1
         CR    15,7                     R7 IS ZERO
         BH    ABENDRC
RETRTN   L     13,4(13)
         L     14,12(13,0)    RESTORE REG14
         LM    0,12,20(13)    RESTORE REGS
         BR    14             RETURN
         SPACE 4
*   PARMERR RTN IS ENTERED IF THERE IS NO PARM AT ALL, OR IF THE
*   PROGRAM NAME IN THE PARM IS LONGER THAN 8 BYTES
*
PARMERR  WTO 'ERROR SYNONYM - INVALID PARM ON EXEC CARD',ROUTCDE=11
         LA    15,444
         B     ABENDRC
         SPACE 4
ABENDRC  LR    1,15                     LOAD ABEND CODE = RETURN CODE
         SVC   13
         SPACE 8
PROGNAME DS    0F
         DC    8C' '
         LTORG
         END
