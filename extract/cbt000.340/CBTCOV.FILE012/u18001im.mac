         TITLE   'SPY59 - AVR MOUNTS MODULE - REL 1.0'
******************************************************
* THIS MODULE DISPLAYS INFO ABOUT OUTSTANDING MOUNTS *
******************************************************
* MACRO
         MACRO
&NAME    CUREG
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUREG MACRO:16/01/75'
         POP   PRINT
         ACTR  50
         LCLA  &X,&Y,&Z
*    GENERAL REGISTERS
.LPR     ANOP
R&X      EQU   &X
&X       SETA  &X+1
         AIF   (&X LT 16).LPR
*    CONTROL REGISTERS
.LPC     ANOP
C&Y      EQU  &Y
&Y       SETA  &Y+1
         AIF   (&Y LT 16).LPC
*    FLOATING POINT REGISTERS
.LPF     ANOP
F&Z      EQU   &Z
&Z       SETA  &Z+2
         AIF   (&Z LT 8).LPF
         MEND
         MACRO
&NAME    CUENTER &BASE=(R12),&RECURSE=,&RENT=,&FIRST=,&CSECT=,&PARM=
         LCLA  &AL0,&AL1,&AL2,&AL9,&AL12
         ACTR  45                                              DEC 75
&AL2     SETA  &SYSNDX
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUENTER MACRO:16/06/77'
         POP   PRINT
         LCLC  &CL0,&CL1,&CL2,&CL3,&CL12,&CL13,&CL50
         LCLC  &CL51,&CL52,&CL53
         GBLB  &BG15
         AIF   ('&NAME' EQ '').B98
         ENTRY &NAME
.B98     ANOP
&CL0     SETC  '12'
         AIF   ('&BASE'(1,1) EQ '(').B10  *VALIDATE &BASE PARAMETER
&CL0     SETC  '&BASE'
         AIF   ('&CL0' EQ 'NONE').B11
         AIF   ('&CL0'(1,1) NE 'R').B4B
&AL9     SETA  K'&CL0-1
&CL0     SETC  '&CL0'(2,&AL9)
.B4B     AIF   ((&CL0 GT 1) AND (&CL0 LT 13)).B11
.BERA    MNOTE 9,'&&BASES WRONG,MACRO ABANDONED'
         MEXIT
.B10     ANOP
&CL0     SETC  '&BASE(1)'
&AL0     SETA  1                        COUNT ALONG TO-BE-SCANNED BASES
.B13     ANOP
&AL1     SETA  1                       *COUNT ALONG PREVIOUSLY SCANNED
&CL12    SETC  '&BASE(&AL0)'
         AIF ('&CL12'(1,1) NE 'R').B12A
&AL9     SETA  K'&CL12-1
&CL12    SETC  '&CL12'(2,&AL9)
.B12A    ANOP
&AL12    SETA  &CL12
.B12     AIF    ((&AL12 LT 2) OR (&AL12 GT 12)).BERA
.B15     AIF   (&AL1 EQ &AL0).B14      *J OUT IF REACHED LATEST
&CL13    SETC  '&BASE(&AL1)'
         AIF   ('&CL13'(1,1) NE 'R').B15A
&AL9     SETA  K'&CL13-1
&CL13    SETC  '&CL13'(2,&AL9)
.B15A    AIF   (&CL12 EQ &CL13).BERA *ERROR IF DUPLICATED
&AL1     SETA  &AL1+1                  *STEP ALREADY SCANNED PTR
         AGO   .B15
.B14     ANOP
&AL0     SETA  &AL0+1                  *STEP SCAN POINTER
         AIF   ('&BASE(&AL0)' NE '').B13 *J IF NOT NULL
&AL9     SETA  N'&BASE
         AIF   (&AL0 LT &AL9).BERA *ERROR IF NULL ELEMENT
.B11    ANOP
.*   START GENERATING PROGRAM
         DS    0H
         BALR  R15,0
         USING *,R15
&CL1     SETC  '&CSECT'
         AIF   ('&CL1' NE '').B30
&CL1     SETC  '*'
.B30     ANOP
&NAME    SAVE  (14,12),,&CL1
.B32     ANOP
.B90A    BAL   &CL0,OCSVA&AL2
         DROP  R15
         USING *,&CL0
OCSVD&AL2 EQU  *         HOLD IMMEDIATELY AFTER USING STATEMENT
         AIF   (&BG15).NODATIM
         CUREG                          REGISTER MNEMNONICS
&CL51    SETC  '&NAME'
         AIF   (K'&CL51 LE 8).DT1
&CL51    SETC  '&CL51'(1,8)
         AGO   .DT2
.DT1     ANOP
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '&SYSECT'
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '????????'
.DT2     ANOP
&CL52    SETC  '&SYSDATE'(4,2)'.'.'&SYSDATE'(1,2)'.'.'&SYSDATE'(7,2)
&CL53    SETC  '&SYSTIME'(1,2)':'.'&SYSTIME'(4,2)':00'
CUVRSION DC    C'****VERSION/',CL8'&CL51',C'/&CL52./&CL53'
&BG15    SETB  (1)                                             DEC 75
.NODATIM ANOP
OCSAR&AL2 DS    18F
OCSVA&AL2 EQU  *
         AIF   ('&BASE' EQ '').B89
&AL9     SETA  N'&BASE
         AIF   (&AL9 LE 1).B89
&AL1     SETA  &AL9
&AL0     SETA  2
.B88     ANOP
&CL2     SETC  '&BASE(&AL0)'
&CL3     SETC  '&BASE(&AL0-1)'
         LA    &CL2,1
         LA    &CL2,4095(&CL2,&CL3)
         USING OCSVD&AL2+4096*(&AL0-1),&CL2
         AIF   (&AL0 EQ &AL1).B87
&AL0     SETA  &AL0+1
         AGO   .B88
.B89     ANOP
.B87     ANOP
         ST    R13,OCSAR&AL2+4
         LR    R15,R13
         LA    R13,OCSAR&AL2
         ST    R13,8(R15)
         MEXIT
.MEND    MEND
* MACRO
         MACRO
&NAME    CUEXIT   &RC=(15)
         GBLB  &BG15                                 DEC 75
         LCLA  &B,&W
         LCLC  &Z
&NAME    DS 0H
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUEXIT MACRO:16/06/77'
         POP   PRINT
         L      R13,4(13)
&Z         SETC  '&RC'
.B94     AIF   ('&Z'(1,2) NE '(R').B84
&B       SETA  K'&Z-2
&Z        SETC  '&Z'(1,1).'&Z'(3,&B)
.B84     ANOP
         AIF   ('&Z' EQ '(15)').B60
         AIF   ('&Z'(1,1) EQ '(').B61
         RETURN (14,12),RC=&Z
         AGO   .B62
.B61     ANOP
&W       SETA  K'&Z-2
&Z       SETC  '&Z'(2,&W)
         LR    R15,&Z
.B60     RETURN (14,12),RC=(15)
.B62     ANOP
         MEND
SPY59    CUENTER BASE=3               SET UP BASE
         L      1,0(1)                GET PARM ADDRESS
         LA     1,128(1)              GET ECB ADDRESS
         POST   (1)                   LET COMMAND MODULE CONTINUE
         LA    9,WTOAVR1+24           POINT 9 AT WTO
         L     11,16(0,0)             GET THE CVT
         L     11,40(11)              GET UCB ADDRESS
HOLY     LH    12,0(11)               LOAD IN
         CH    12,=H'0'               IS ADDRESS ZERO?
         BNE   NOHOLES                IF NOT CONTINUE
UPTAB    LA    11,2(11)               GET NEXT ADDRESS
         B     HOLY                   TRY AGAIN
NOHOLES  CLI   18(12),X'80'           UCBTYPE EQUAL TO TAPE
         BNE   UPTAB                  IF NOT TRY AGAIN
LOOP     LA    5,WTOAVR+24            LOAD 5 WITH WTO ADDRESS
CHAIN1   CLI   2(12),X'FF'            IS THIS A UCB
         BE    GOODMAN                IF SO FINE
         B     FIN                    OTHERWISE GET OUT FAST
GOODMAN  CLI   18(12),X'80'           UCBTYPE TAPE
         BE    ONYOUGO                CONTINUE
         B     AGAIN                  TRY AGAIN
ONYOUGO  EQU   *                      HERE AT LAST
         TM  35(12),X'80'             HAS MOUNT BEEN ISSUED
         BZ    NOAVR                  IF NOT TOUGH
         TM   6(12),X'40'             IS DRIVE WAITING FOR MOUNT?
         BZ   NOGOOD                  NO .. BAD LUCK
         MVC   WTO1+28(3),13(12)      MOVE OVER DEVICE ADDRESS
         MVC   WTO1+34(6),28(12)      MOVE OVER VOL SER
WTO1     WTO  '** MOUNT REQUIRED                          **'
NOGOOD   TM   35(12),X'80'            MOUNT ISSUED?
         BNZ   NOAVR                  CAN'T BE AVR MOUNT THEN
         CLI  11(12),X'0C'            COULD THIS BE AVR MOUNT
         BNE  NOAVR                   NO
         CLI  28(12),X'00'            IS VOL SER EQUAL TO 00
         BNE   NOAVR                  NO AVR OUTSTANDING
         MVC  0(3,5),13(12)           MOVE UNIT NAME
         LA   5,4(5)                  UP STORE ADDRESS
NOAVR    EQU  *                       NOT AVR THIS TIME
AGAIN     LA    12,52(12)             UP UCB ADDRESS
          B     CHAIN1                BRANCH OUT
FIN      CLI  WTOAVR+24,C' '          ANYTHING ON AVR MOUNT WTO
         BNE  WTOAVR                  IF SO PUT OUT WTO
        WTO   '** NO AVR MOUNT OUTSTANDING **'
         B   NO                       BYPASS WTO MESSAGE
WTOAVR   WTO  '** AVR MOUNT -                                          C
                         **'
NO       L    5,16                    GET CVT
         L    5,244(5)                GET P0
         L    5,0(5)                  LOAD P0 TCB ADDRESS
LOOPAVR  L    6,0(5)                  LOAD TOP RB
         CLC  0(8,6),=C'IEFXV001'     IS AVR MODULE IN?
         BE    GOTAVR                 IF YES BRANCH
CONTAVR  L     5,116(5)               LOAD NEXT TCB
         LTR  5,5                     ARE WE AT END OF CHAIN
         BZ   FIN1                    BRANCH OUT IF YES
         B    LOOPAVR                 BRANCH BACK AGAIN
GOTAVR   MVC  EPOINT,12(6)            MOVE AVR MODULE ENTRYPOINT
         L    7,EPOINT                LOAD ENTRYPOINT
         AH   7,OFFSET                ADD THE OFFSET
FUDGED   EQU  *
         MODESET  KEY=ZERO            GET INTO ZERO
         L   7,0(7)                   LOAD ADDRESS
         MVC   BUFFER(80),0(7)        MOVE ACCROSS VOL SER NOS
         MODESET  KEY=NZERO           GET OUT OF ZERO
         LA   8,BUFFER                LOAD BUFFER
AVRLOOP1 CLI  0(8),X'00'              IS IT ZERO
         BE   CONTAVR                 IF SO CONTINUE
        CLI   1(8),X'00'       NOW PUT
         BE   CONTAVR                 THE VOL
         CLI  0(8),C'A'                      SER NOS
         BL   CONTAVR                               OUT ON
         CLI   0(8),C'9'                                   TO WTO
         BE    CONTIN
         CLI  0(8),C'Z'
         BH   CONTAVR
CONTIN   MVC  0(6,9),0(8)
         LA   8,7(8)
         LA   9,7(9)
         B    AVRLOOP1
        B    CONTAVR
FIN1     CLI  WTOAVR+24,C' '
         BE   GETAWAY
WTOAVR1  WTO  '** TAPES REQD-                                          C
                         **'
GETAWAY  CUEXIT RC=0
AVR     DC    H'0'
STORE    DS   F
ECB1    DC   F'0'
AMSG     DC   CL3' '
          DS   0F
OFFSET   DC    X'0B3C'
EPOINT   DC   F'0'
SAVE     DC   CL64' '
TCBS    DC   CL12' '
FOUND   DC   X'00'
         LTORG
BUFFER   DC   80C' '
         END
