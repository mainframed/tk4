         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
*
         TITLE ' LISTS PROGRAMS WHICH USE REQUESTED SUBRTNES.         '
XM060106 CSECT
         ENTRY XM060101            INSERT MODULE NUMBER CHANGING
XM060101 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
         PRINT NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM060106  PROGRAMMER BAZ BARROW         ASSIGNED 14/09/72 *
*                                                                     *
*                           MODULE FUNCTIONS                          *
*                           ----------------                          *
*    READS THROUGH A GIVEN LIBRARY AND SEARCHES ESD ENTRIES FOR THE   *
*                                                                     *
*    GIVEN SUBROUTINES. IF THE COMPARISON IS POSITIVE THE SUBRTNE IS  *
*                                                                     *
*    LISTED ON A REPORT.                                              *
*                                                                     *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE XM060106 BY PAUL ANTON DANIELSON
*
**  ASSIGNED 20/12/72, EFFECTIVE 01/01/73 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT NO OF MEMBERS CAN BE SPECIFIED AS 2ND PARAMET-
*   -------------------- ER OF PARM FIELD. IN WHICH CASE SUFFICIENT
*                        CORE FOR MODULE NAME/TTR TABLE IS OBTAINED
*                        VIA GETMAIN. IF OMITTED A DEFAULT VALUE IS
*                        USED.
*
*
*
*
***********************************************************************
         EJECT
         ISEQ  73,80
         PROGIN
*
** INITIAL ROUTINE - OBTAIN SUBROUTINE NAME FROM PARM INFO. GET     0.1
** SUFFICIENT CORE FOR TABLE OF MODULE NAMES/TTRS.                  0.1
** ------------------------------------------------------------     0.1
*
         L     R1,0(R1)            POINT R1 TO PARM AREA
         SR    R6,R6               CLEAR R6
         IC    R6,1(R1)            INSERT LENGTH INTO R6
         LA    R2,2(R1)            POINT TO START OF PARM FIELD     0.1
BA01     EQU   *                                                    0.1
         CLI   0(R2),C','          Q. SIZE INFORMATION PRESENT      0.1
         BE    BA03                A. YES                           0.1
         LA    R2,1(R2)            POINT TO NEXT CHARACTER OF PARM INPT
         BCT   R6,BA01             LOOP TO END OF PARM FIELD        0.1
*                                                                   0.1
*                                                                   0.1
** OBTAIN MODULE NAME AND CORE FOR NAME/TTR TABLE                   0.1
*  ----------------------------------------------                   0.1
BA02     EQU   *                                                    0.1
         SR    R2,R1               GET LENGTH OF PARM FIELD (NAME) +2 1
         SH    R2,=H'3'            MINUS THREE FOR EXECUTED MOVE    0.1
         EX    R2,BC01             GET SUBROUTINE NAME              0.1
         MVC   CCHXXXA+79(8),SCW008 MOVE MODULE NAME TO HEADINGS    0.1
*                                                                   0.1
         L     R0,CFD004B          LOAD NO OF BYTES REQ'D FOR TABLE 0.1
         GETMAIN R,LV=(0)          GET CORE REQUIRED FOR TABLE      0.1
         LA    R6,0(R1)            POINT R6 TO START OF TABLE       0.1
         MVC   0(4,R6),=F'-1'      INDICATE 12 BYTE OPTION TO GP MODULE
         CALL  GP020112,((R6))     OBTAIN MEMBER NAMES & TTR POINTERS.1
         LA    R6,8(R6)            POINT R6 TO FIRST TTR ADDRESS    0.1
         B     BA0304              GO OPEN PDS                      0.1
*                                                                   0.1
**       ROUTINE TO CALCULATE CORE REQUIRED FROM PARM INFORMATION   0.1
*        --------------------------------------------------------   0.1
BA03     EQU   *                                                    0.1
         LA    R3,1(R2)            POINT TO FIRST CHARACTER IN VALUE0.1
         BCTR  R6,R0               SUBTRACT TWO                     0.1
         BCTR  R6,R0                             FOR   PACK INSTRUCTION
         EX    R6,EX01             EXECUTE PACK INSTRUCTION         0.1
         CVB   R3,SDD008           CONVERT NO OF MEMBERS TO BINARY  0.1
         MH    R3,=H'12'           MULTIPLY BY NO OF BYTES REQ'D/MEMBER
         ST    R3,CFD004B          SAVE LENGTH OF TABLE REQUIRED    0.1
         B     BA02                GO OBTAIN MODULE NAME AND CORE   0.1
*                                            FOR TABLE              0.1
*                                                                   0.1
*
** OPEN THE LIBRARIES DATA SET AND POINT R6 TO START OF MEMBER NAME TBL
** --------------------------------------------------------------------
*
BA0304   EQU   *                                                    0.1
         OPEN  (D01,(INPUT))       OPEN LIBRARIES DATA SET
         SR    R7,R7               CLEAR R7 FOR LATER USE WITH ESD RECS
*
** POINT TO THE NEXT MEMBER OF LIBRARY AND READ ALL THE CESD RECORDS
** LOOKING FOR AN EQUAL COMPARE WITH THE SUBRTNE NAME
** --------------------------------------------------
*
BA04     EQU   *
         POINT D01,(R6)            POINT TO NEXT MEMBER
BA05     EQU   *
         READ  DECB1,SF,D01,SCI248,248  READ NEXT RECORD
         CHECK DECB1
         CLI   SCI248,X'20'        Q. IS IT A CESD RECORD
         BE    BA07                A. YES - GO PROCESS CESD RECORD
BA06     CLI   4(R6),X'FF'         Q. IS IT END OF MEMBER TABLE
         BE    BB01                A. YES - GO END
         LA    R6,12(R6)           A. NO - POINT TO NEXT TTR ENTRY
         B     BA04                GO POINT TO NEXT MEMBER
*
** SEARCH CESD RECORD FOR THE SUBRTNE NAME
*
BA07     EQU   *
         IC    R7,SCI248+7         INSERT LENGTH OF ESD ENTRIES INTO R7
         LA    R8,SCI248+8         POINT R8 TO START OF ESD ENTRIES
         AR    R8,R7               R8 NOW POINTS TO END OF TABLE
         LA    R9,SCI248+8         POINT R9 TO FIRST ESD ENTRY NAME
BA08     EQU   *
         CLC   0(8,R9),SCW008      Q. IS ESD NAME THAT OF THE SUBRTNE
         BNE   BA09                A. NO - GO POINT TO NEXT MEMBER
         BAL   R10,BA20            A. YES - GO PUT OUT ON THE REPORT
         B     BA06                GO POINT TO THE LIBRARIES NEXT MEMBR
BA09     EQU   *
         LA    R9,16(R9)           POINT R9 16 BYTES ON - TO NEXT ESD
         CR    R9,R8               Q. IS IT END OF ESD RECORD
         BL    BA08                A. NO - GO EXAMINE NEXT ESD ENTRY
         B     BA05                A. YES - GO READ NEXT RECORD
*
** RTNE TO PRODUCE PRINT REPORT FOR PROGRAMS CONTAINING THE SUBRTNE
** ----------------------------------------------------------------
**                                 LINKAGE VIA R10
*
BA20     EQU   *
         LR    R11,R6              LOAD R6 INTO R11
         SH    R11,=H'8'           POINT R11 TO PROGRAM NAME
         MVC   CCW020+6(8),0(R11)  MOVE PROGRAM NAME TO PRIME AREA
         CALL  B4701,(CCHXXX,CCW020,CCX001,CFD004,CFD004A,CCD001)
         BR    R10                 RETURN
*
** END OF FILE FOR THE LIBRARIES DATA SET
** --------------------------------------
*
BB01     EQU   *
         MVI   CCW020,X'FF'        INDICATE PRINT FILE TO BE CLOSED
         BAL   R10,BA20            GO CLOSE PRINT FILE
         PROGOUT
*
** STORAGE AND CONSTANTS
** ---------------------
*
SCW008   DC    CL8' '              CONTAINS 8 BYTE SUBRTNE NAME
SDD008   DS    D                   DOUBLE WORD DUMP FOR CVB         0.1
EX01     PACK SDD008,0(0,R3)       PACK NO OF MEMBERS               0.1
BC01     MVC   SCW008(0),2(R1)     MOVE SUBRTNE NAME BY EX INSTRUCTION
SCI248   DS    CL248               INPUT AREA FOR LIBRARIES DATA SET
CFD004   DC    F'55'               NO OF LINES PER PAGE
CCX001   DC    C'0'                NORMAL LINE COUNTING INDICATOR
CCD001   DC    C' '                ASA CONTROL CHARACTER
CFD004B  DC    F'12000'            LENGTH OF TABLE (DEFAULT)        0.1
CFD004A  DC    F'20'               LENGTH OF P2 FOR B4701
CCW020   DC    CL20' '             PRIME INPUT AREA FOR B4701
CCHXXX   DC    CL77'1',CL56'************'
CCHXXXA  DC    CL30' ',CL103'XM06 REPORT OF PROGRAMS USING SUBROUTINE/MX
               ODULE*          *'
         DC    CL30' ',CL103'------------------------------------------X
               -----************',CL133' ',C'Z'
         LTORG
*
D01      DCB   DSORG=PO,DDNAME=D01,EODAD=BB01,MACRF=R
*
         END
