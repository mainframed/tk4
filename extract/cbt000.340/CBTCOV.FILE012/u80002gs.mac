*********************UZVPVKA1****************************
         TITLE 'PVK1 CICS APPLICATION PROGRAM'
*
*********************************************************************
*
*   THIS IS THE CICS APPLICATION PROGRAM FOR PVK1
*
*   IT USES THE KL GDF TO FORMAT INPUT AND OUTPUT TERMINAL MESSAGES
*
*********************************************************************
*
R0       EQU   0
R1       EQU   1
R2       EQU   2                   BASE REGISTER
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
FWACBAR  EQU   8
SAACBAR  EQU   9                   ADDRESS USER STORAGE AREA
TIOABAR  EQU   10                  ADDRESS TIOA
TCTTEAR  EQU   11                  ADDRESS TCTTE
*R12                               RESERVED TO ADDRESS TCA
*R13                               RESERVED TO ADDRESS CSA
R14      EQU   14
R15      EQU   15
         SPACE 5
         PRINT NOGEN
         CSADSECT                * COMMON SYSTEM AREA
         SPACE 3
         COPY  DFHTCADS          * TRANSACTION CONTROL AREA
         SPACE
GDFPARMS DS    0CL40               * GDF PARAMETERS
ACTCODE  DS    CL4
FORMATID DS    CL8
MSGLNGTH DS    CL4
MSGADDR  DS    CL4
DATADDR  DS    CL4
STARTCT  DS    CL4
TOTALCT  DS    CL4
SELECT   DS    CL4
VARDATAD DS    CL4
         SPACE 3
         TCTTEDS
         SPACE 3
         COPY  DFHTIOA
MESSAGE  DS    CL2000
         SPACE 3
         COPY  DFHSAADS
SUBTPRMS DS    0CL12
RFADDR   DS    F
RETNADDR DS    F
TRMIDADR DS    F
SUBTRETN DS    F
SUBTLNCT DS    F
SUBTECB  DS    F
RETNAD1  DS    F
RETNAD2  DS    F
SUBTTCB  DS    F
NUMFLD   DS    F
ATCHLIST DS    0CL60
         DS    CL9
ECBADDR  DS    CL51
RECKEY   DS    CL9
JIDSTOR  DS    CL5
LINEMAX  DS    CL3
LINECT   DS    CL3
SEARCHED DS    CL4                                           MND NOV80
SRCHLEN  DS    XL1
FLAG     DS    CL1
PFKAREA  DS    CL4
DATAREA  DS    0CL1784
DFUNC    DS    CL4
DJOBN    DS    CL8
DCJOB    DS    CL3
DJOBID   DS    CL5
DLINE    DS    CL5
DSRCH    DS    CL20
DDATA    DS    CL1738
DFNOFF   DS    CL1
         SPACE 3
         COPY  DFHFWADS
         SPACE 2
RECORD   DS    0CL142
KEYFLD   DS    CL9
DATLINE  DS    0CL133
RJOBNAM  DS    CL8
RJOBID   DS    CL5
RLINE    DS    CL5
         DS    CL114
         EJECT
UZVPVKA1 CSECT
         PRINT GEN
         BALR R2,0                      SET UP
         USING *,R2                       ADDRESSABILITY
         B     BEGIN
         SPACE
         DC    CL26' START OF UZVPVKA1 AT 0520'
         SPACE
BEGIN    DS    0H
         L     TCTTEAR,TCAFCAAA
         L     TIOABAR,TCTTEDA
         SPACE 5
*   GET TRANSACTION CODE FROM TCA SYSTEM AREA
         L     R3,TCASYAA
         L     R3,20(,R3)
         CLC   0(4,R3),=CL4'PVK2'
         BE    PVK2PROC
         EJECT
*===================================================*
*   INITIAL PROCESSING - RETURN SELECTION DISPLAY   *
*===================================================*
PVK1PROC EQU   *                        DISPLAY INITIAL SCREEN
         MVC   TOTALCT,=F'0'             SET UP GDF PARMS
         XC    SELECT(4),SELECT         ZERO OUT SELECT BITS
         MVC   ACTCODE,=CL4'OPUT'
         LA    R3,MESSAGE
         ST    R3,MSGADDR
         ST    R3,DATADDR
         MVC   FORMATID,=CL8'UZVPV01'
         MVC   STARTCT,=F'1'
         XC    MESSAGE(45),MESSAGE
         DFHPC TYPE=LINK,PROGRAM=UZHBAA
         MVC   TIOATDL,MSGLNGTH+2
         DFHTC TYPE=(WRITE,ERASE)
         MVC   TCANXTID,=CL4'PVK2'
         B     RETURN
         EJECT
*==================================================*
*   MAIN PROCESSING - PERFORM REQUESTED FUNCTION   *
*==================================================*
PVK2PROC EQU   *
         DFHSC TYPE=GETMAIN,NUMBYTE=2000,CLASS=USER
         L     SAACBAR,TCASCSA          PICK UP STORAGE ADDRESS
         SPACE 3
         XC    PFKAREA(49),PFKAREA       CLEAR INPUT AREA
         MVI   FLAG,X'00'                TURN OFF ALL FLAGS
         MVC   ACTCODE,=CL4'IPUT'        FORMAT INPUT MESSAGE
         MVC   FORMATID,=CL8'UZVPV01'
         MVC   MSGLNGTH+2(2),TIOATDL
         LA    R3,MESSAGE
         ST    R3,MSGADDR
         LA    R3,PFKAREA               PASS GDF
         ST    R3,VARDATAD                ADDRESSES
         LA    R3,DATAREA                   FOR
         ST    R3,DATADDR                     ITS OUTPUT
         XC    SELECT(4),SELECT         ZERO OUT SELECT BITS
         SPACE
         DFHPC TYPE=LINK,PROGRAM=UZHBAA
         ST    TIOABAR,TCASCSA          FREE OLD
         DFHSC TYPE=FREEMAIN              (INPUT) TIOA
         EJECT
*--------------------------------*
*   SELECT PROCESSING REQUIRED   *
*--------------------------------*
         CLC   PFKAREA(3),=C'END'
         BE    ENDPROC
         CLC   DFUNC(2),=C'ST'          IS REQUEST FOR STATUS ?
         BE    STATFN                   YES
         CLC   DFUNC(2),=C'PR'          IS REQUEST FOR PRINT ?
         BE    PRINTFN                  YES
         CLC   DFUNC(2),=C'CN'          IS REQUEST FOR CANCEL ?
         BE    CANCLFN                  YES
         CLC   DFUNC(2),=C'DS'          IS REQUEST FOR DISPLAY ?
         BE    DSPLFN                   YES
         CLC   DFUNC(2),=C'EN'          IS REQUEST TO END ?
         BE    ENDPROC                  YES
         B     FNINVAL                  NO - INVALID
         EJECT
*-----------------------------*
*   DISPLAY STATUS OF A JOB   *
*-----------------------------*
STATFN   EQU   *
         MVI   DFNOFF,X'04'
         BAL   R3,SUBTASK
         XC    SELECT(2),SELECT
         MVC   TOTALCT,SUBTLNCT         SAVE NO. OF LINES RETURNED
         B     RETDSPLY
         SPACE 10
*---------------------------------*
*   RESET JOB'S OUTPUT TO PRINT   *
*---------------------------------*
PRINTFN  EQU   *
         MVI   DFNOFF,X'08'
         BAL   R3,SUBTASK
         XC    SELECT(2),SELECT
         OI    SELECT,X'C2'             SELECT BITS 1,2 & 7
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 10
*-------------------------*
*   CANCEL JOB'S OUTPUT   *
*-------------------------*
CANCLFN  EQU   *
         MVI   DFNOFF,X'0C'
         BAL   R3,SUBTASK
         XC    SELECT(2),SELECT
         OI    SELECT,X'C4'             SELECT BITS 1,2 & 6
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         EJECT
*--------------------------*
*   DISPLAY JOB'S OUTPUT   *
*--------------------------*
DSPLFN   EQU   *
         MVC   RECKEY(4),TCTTETI        SET UP KEY
         MVC   RECKEY+4(5),=CL5'00000'     FOR CONTROL RECORD
         DFHFC TYPE=GET,                                               *
               DATASET=PVK1DATA,                                       *
               RDIDADR=RECKEY,                                         *
               ERROR=VSAMERR
         L     FWACBAR,TCAFCAA          ADDRESS RECORD
         SPACE
         CLC   DJOBN,RJOBNAM            CHECK IF JOB
         BNE   NEWJOB                      ALREADY IN FILE
         LA    R6,DJOBID
         LA    R5,DJOBID+5
         BAL   R3,CHKNUM
         LTR   R4,R4                    FIELD NUMERIC ?
         BNZ   JOBIDERR                 NO
         CLC   DJOBID,RJOBID            SAE AS JOBID OF JOB IN FILE ?
         BE    CHKLINE                  YES
         B     NEWJOB                   NO - LOAD NEW JOB
JOBIDERR EQU   *
         C     R4,=F'8'                 FIELD ALL BLANKS ?
         BNE   JOBIDBAD                 NO - JOBID INVALID
         MVC   DJOBID,RJOBID            YES - RETURN ID OF JOB IN FILE
         BE    CHKLINE
         SPACE
NEWJOB   EQU   *               JOB NOT IN FILE - CALL SUBTASK TO ADD IT
         ST    FWACBAR,TCASCSA
         DFHSC TYPE=FREEMAIN
         MVI   DFNOFF,X'10'
         BAL   R3,SUBTASK               CALL SUBTASK
         DFHFC TYPE=GET,                                               *
               DATASET=PVK1DATA,                                       *
               RDIDADR=RECKEY,                                         *
               ERROR=VSAMERR
         L     FWACBAR,TCAFCAA          ADDRESS RECORD
         SPACE
CHKLINE  EQU   *               CHECK THAT REQUESTED LINE IS VALID
         LA    R6,DLINE                 CHECK LINE PARAMETER
         LA    R5,DLINE+5                  IS VALID, & WITHIN
         BAL   R3,CHKNUM                      SIZE OF OUTPUT
         LTR   R4,R4
         BZ    CHKLIMIT
         C     R4,=F'4'
         BE    LINEBAD
         MVC   DLINE(5),=CL5'00001'        LINE OMITTED - ASSUME 1
CHKLIMIT EQU   *
         CLC   DLINE,RLINE              CHECK IF REQUESTED
         BH    OUTLIMIT                    START LINE EXISTS
         CLC   DLINE(5),=CL5'00000'     LINE 0 REQUESTED ?
         BNE   CHKSCROL                 NO
         MVC   DLINE(5),=CL5'00001'     YES - RESET TO 1
         SPACE 2
CHKSCROL EQU   *              CHECK IF SPECIAL SCROLLING REQUESTED
         CLC   PFKAREA,=CL4'PFKX'       IS SCROLL LEFT REQUESTED ?
         BNE   TRYPFKY                  NO
         MVC   PFKAREA,BLANKS           SET PFK TO DISPLAY LINE START
         B     ROLLBACK                 GO REDUCE LINE NUMBER
         SPACE
TRYPFKY  EQU   *
         CLC   PFKAREA,=CL4'PFKY'       IS SCROLL RIGHT REQUESTED ?
         BNE   CHKLOCAT                 NO - GO CHECK LOCATE
         MVC   PFKAREA,=CL4'PFKW'       SET PFK TO DISPLAY END OF LINE
         SPACE
ROLLBACK EQU   *
         PACK  LINECT(3),DLINE(5)       REDUCE LINE
         SP    LINECT,=P'22'               NUMBER BY 22
         CP    LINECT,=PL3'1'           ENSURE STILL VALID
         BNL   ROLLED
         ZAP   LINECT,=PL3'1'
ROLLED   EQU   *
         UNPK  DLINE(5),LINECT(3)       RESTORE TO DISPLAY FIELD
         OI    DLINE+4,X'F0'
         B     STRTREAD                 GO DISPLAY
         SPACE 3
CHKLOCAT EQU   *                   CHECK IF LOCATE REQUESTED
         NI    FLAG,X'BF'               TURN OFF LOCATING FLAG
         CLC   DSRCH,BLANKS             LOCATE FIELD BLANK ?
         BE    STRTREAD                 YES - NO LOCATE
         CLC   DSRCH,=20XL1'00'         ALL ZEROES = BLANKS
         BE    STRTREAD
         OI    FLAG,X'40'               SET FLAG FOR LOCATING
         SPACE 3
         LA    R3,DSRCH                 R3 -> START OF FIELD
         LA    R4,DSRCH+20              R4 -> END OF FIELD
FINDSTRT EQU   *
         CLI   0(R3),C' '               FIND FIRST
         BE    LGETNEXT                    NON-BLANK CHAR
         CLI   0(R3),X'00'
         BNE   GOTSTART
LGETNEXT EQU   *
         LA    R3,1(,R3)                 GET NEXT CHAR
         CR    R3,R4                     END OF FIELD ?
         BL    FINDSTRT                  NO
         NI    FLAG,X'BF'                FIELD ALL BLANK - NO LOCATE
         B     STRTREAD
         SPACE
GOTSTART EQU   *
         BCTR  R4,0                     FIND LAST
         CLI   0(R4),C' '                  NON-BLANK CHAR
         BE    LGETEND
         CLI   0(R4),X'00'
         BNE   GOTEND
LGETEND  EQU   *
         CR    R3,R4
         BL    GOTSTART
         NI    FLAG,X'BF'               FIELD ALL BLANK - NO LOCATE
         B     STRTREAD
         SPACE
GOTEND   EQU   *
         SR    R4,R3                    GET (M/C) LENGTH OF SEARCH
         STC   R4,SRCHLEN                  ARG. & STORE FOR LATER USE
         SPACE 3
STRTREAD EQU   *
         PACK  LINECT(3),DLINE(5)       SET UP
         SR    R6,R6                       COUNTS AND
         LA    R5,DDATA                       POINTERS
         PACK  LINEMAX(3),RLINE(5)
         ZAP   SEARCHED,=PL4'0'                              MND NOV80
         ST    FWACBAR,TCASCSA
         DFHSC TYPE=FREEMAIN
         MVC   RECKEY(4),TCTTETI        SET UP BROWSE OPERATION
         MVC   RECKEY+4(5),DLINE
         DFHFC TYPE=SETL,                                              *
               DATASET=PVK1DATA,                                       *
               RDIDADR=RECKEY,                                         *
               SRCHTYP=FKEQ,                                           *
               ERROR=VSAMERR
         L     FWACBAR,TCAFCAA
         SPACE
READLOOP EQU   *
         CP    LINEMAX,LINECT           END OF OUTPUT REACHED ?
         BL    ENDREAD                  NO - GET NEXT
         ST    FWACBAR,TCAFCAA
         DFHFC TYPE=GETNEXT,                                           *
               ERROR=VSAMERR
         L     FWACBAR,TCAFCAA
         AP    LINECT,=PL3'1'           INCREMENT LINES READ COUNT
         TM    FLAG,X'40'               LOCATE BEING PERFORMED ?
         BO    LOCATE                   YES - GO CHECK LINE
         SPACE
DISPLAY  EQU   *
         CLC   PFKAREA,=CL4'PFKW'       END OF LINE REQUIRED ?
         BE    LAST79                   YES
         CLC   PFKAREA,=CL4'PFKZ'       ALL OF LINE REQUIRED
         BE    ALLINE                   YES
         SPACE
FIRST79  EQU   *               BEGINNING OF LINE TO BE DISPLAYED
         MVC   0(79,R5),DATLINE
         B     NEXTLINE
         SPACE
LAST79   EQU   *               END OF LINE TO BE DISPLAYED
         MVC   0(79,R5),DATLINE+53
         B     NEXTLINE
         SPACE
ALLINE   EQU   *               ENTIRE LINE TO BE DISPLAYED
         MVC   0(79,R5),DATLINE         MOVE DATA TO
         MVC   79(53,R5),DATLINE+79        TWO OUTPUT LINES
         MVC   132(26,R5),BLANKS           (BLANK OUT REMAINDER)
         LA    R5,79(,R5)               INCREMENT COUNTS TO COPE
         LA    R6,1(,R6)                   WITH TWO OUTPUT LINES USED
         SPACE
NEXTLINE EQU   *
         LA    R5,79(,R5)               INCREMENT TO NEXT OUTPUT LINE
         LA    R6,1(,R6)                INCREMENT DISPLAY LINES COUNT
         C     R6,=F'22'                SCREEN FULL ?
         BL    READLOOP                 NO - GO GET NEXT LINE
         SPACE
ENDREAD  EQU   *
         TM    FLAG,X'40'               STILL SEARCHING ?
         BO    NOTFOUND                 YES - ARG NOT FOUND
         UNPK  DLINE(5),LINECT(3)       SAVE COUNT
         OI    DLINE+4,X'F0'               OF LINES READ
         ST    R6,TOTALCT               SET NUMBER OF DISPLAY LINES
         XC    SELECT(2),SELECT          NO SELECT BITS
         CP    LINEMAX,LINECT            REACHED END OF OUTPUT ?
         BNL   ENDBRWSE                  NO
         MVC   DLINE(5),=CL5'00001'      YES - RESET LINE FIELD
         SPACE
ENDBRWSE EQU   *               FINISH BROWSE
         ST    FWACBAR,TCAFCAA
         DFHFC TYPE=ESETL,                                             *
               ERROR=VSAMERR
         B     RETDSPLY
         EJECT
*---------------------------------*
*   SEARCH LINE FOR GIVEN FIELD   *
*---------------------------------*
LOCATE   EQU   *               CHECK LINE FOR SEARCH FIELD
         SR    R6,R6                     GET PTRS FOR START
         IC    R6,SRCHLEN                   & END OF LINE,
         LA    R4,DATLINE                      & LEN OF SEARCH FIELD
         LA    R3,132(,R4)
         SR    R3,R6
         SPACE
SEARCH   EQU   *
         EX    R6,COMPARE                POINTING AT SEARCH FIELD ?
         BE    FOUND                     YES
         LA    R4,1(,R4)                 NO - GO TO NEXT CHAR
         CR    R4,R3                     AT END OF LINE ?
         BL    SEARCH                    NO - TRY NEXT CHAR
         AP    SEARCHED,=PL3'1'          YES - INC COUNT LINES SEARCHED
         CP    SEARCHED,=P'5000'         LIMIT REACHED ?     MND NOV80
         BNL   NOTFOUND                  YES - LOCATE FAILED
         B     READLOOP                  NO - GET NEXT LINE
         SPACE 3
COMPARE  CLC   0(1,R4),DSRCH
         SPACE 3
FOUND    EQU   *               SEARCH FIELD FOUND
         SR    R6,R6                     RESET REGISTERS
         LA    R5,DDATA                     FOR DISPLAY
         NI    FLAG,X'BF'                TURN OFF 'LOCATING' FLAG
         B     DISPLAY                   DISPLAY LINES FROM HERE
         SPACE
NOTFOUND EQU   *               SEARCH FIELD NOT FOUND
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'10'            SELECT BIT 12
         MVC   TOTALCT,=F'0'
         B     ENDBRWSE                  GO FINISH BROWSE
         EJECT
*======================*
*   CALL THE SUBTASK   *
*======================*
SUBTASK  EQU   *
         SPACE
         ST    R3,RETNAD1
         SPACE 3
*------------------------------*
*   VALIDATE JOBNAME & JOBID   *
*------------------------------*
         NI    FLAG,X'7F'               TURN 'IN-JOBNAME' FLAG OFF
         LA    R6,DJOBN                 START OF JOBNAME
         LA    R5,DJOBN+8               END OF JOBNAME
         LR    R3,R6
         SPACE
JOBLOOP  EQU   *
         CLI   0(R6),X'5B'              IF CHARACTER IS
         BE    CHAROK                     A NATIONAL CHARACTER
         CLI   0(R6),X'7B'                  THEN O.K.
         BE    CHAROK
         CLI   0(R6),X'7C'
         BE    CHAROK
         CLI   0(R6),C'A'               IF CHAR < A THEN
         BL    CHARBAD                    GO TEST FOR BLANKS
         CLI   0(R6),C'Z'               CHAR BETWEEN
         BNH   CHAROK                     A AND Z  -  O.K.
         TM    FLAG,X'80'               IF IN JOBNAME (PAST 1ST
         BZ    JOBNBAD                    CHAR), DIGITS ALLOWED
         CLI   0(R6),C'0'
         BL    JOBNBAD
         CLI   0(R6),C'9'
         BH    JOBNBAD
         SPACE
CHAROK   EQU   *
         LA    R6,1(R6)                 INCREMENT POINTER
         OI    FLAG,X'80'               SET 'IN-JOBNAME' FLAG ON
         CR    R6,R5                    PAST END OF JOBNAME ?
         BL    JOBLOOP                  NO
         B     JOBNOK                   YES - JOBNAME O.K.
         SPACE
CHARBAD  EQU   *                   CHAR < A AND NOT NATIONAL
         CLI   0(R6),C' '               IS IT BLANK
         BE    TRYINJOB                   OR HEX 0 ?
         CLI   0(R6),X'00'
         BNE   JOBNBAD                  NO - JOBNAME BAD
TRYINJOB EQU   *
         TM    FLAG,X'80'               IN JOBNAME ?
         BO    BLNKLOOP                 YES - CHECK END OF JOBNAME
         SPACE
         LA    R6,1(,R6)                GET NEXT CHAR
         LR    R3,R6                    SAVE PTR TO IT
         CR    R6,R5                    PAST END OF JOBNAME ?
         BL    JOBLOOP                  NO
         B     JOBNBAD                  YES - JOBN ALL BLANKS = BAD
         SPACE
BLNKLOOP EQU   *                   CHECK REMAINDER OF
         LA    R6,1(,R6)             JOBNAME FIELD IS BLANKS
         CR    R6,R5                    IF NOT, JOBNAME BAD
         BNL   JOBNOK
         CLI   0(R6),C' '
         BE    BLNKLOOP
         CLI   0(R6),X'00'
         BE    BLNKLOOP
         SPACE
JOBNOK   EQU   *
         LA    R6,DJOBN                 PRECEEDING
         CR    R6,R3                       BLANKS ?
         BE    CHKJOBID                 NO
         SR    R5,R3                    GET LENGTH OF JOBNAME
         LR    R7,R5
         LR    R4,R3                    GET START OF JOBNAME
         LA    R3,0(R6,R5)              R3 -> END OF JOBN AFTER MOVE
         MVCL  R6,R4                    MOVE JOBN TO START OF FIELD
         LA    R5,DJOBN+8               GET M/C
         SR    R5,R3                       LENGTH OF
         BCTR  R5,0                           REQD TRAILER
         EX    R5,BLNKMOVE              BLANK OUT REMAINDER OF FIELD
         B     CHKJOBID                 GO CHECK JOBID
         SPACE 2
BLNKMOVE MVC   0(1,R3),BLANKS
         SPACE 5
CHKJOBID EQU   *                   NOW CHECK JOBID VALID
         MVC   DCJOB(3),=CL3'JOB'       SET UP CONSTANT FOR SSOB
         LA    R6,DJOBID                INITIALISE POINTERS
         LA    R5,DJOBID+5                AND COUNTS
         BAL   R3,CHKNUM                GO CHECK NUMERIC
         LTR   R4,R4                    NUMERIC AND REFORMATTED ?
         BZ    ATTCHIT                  YES - CALL SUBTASK
         C     R4,=F'4'                 NON-NUMERIC ?
         BE    JOBIDBAD                 YES - INVALID
         MVC   DCJOB(3),BLANKS          ALL BLANK - SUPRESS JOBID
         B     ATTCHIT                  CALL SUBTASK
         SPACE 5
*---------------------------------*
*   SET UP & ATTACH THE SUBTASK   *
*---------------------------------*
ATTCHIT  EQU   *
         MVC   ATCHLIST(60),ATCHPRMS    COPY ATTACH PARMS TO DSECT
         LA    R3,DATAREA               SET UP PARAMETERS
         ST    R3,RFADDR                   FOR ATTACH
         LA    R3,SUBTRETN
         ST    R3,RETNADDR
         LA    R3,TCTTETI
         ST    R3,TRMIDADR
         OI    TRMIDADR,X'80'
         LA    R3,SUBTECB
         STCM  R3,7,ECBADDR
         XC    SUBTECB,SUBTECB          CLEAR ECB
         SPACE
*   ATTACH THE SUBTASK
         ATTACH SF=(E,ATCHLIST),MF=(E,SUBTPRMS)
         SPACE
         ST    R1,SUBTTCB                SAVE SUBTASK TCB ADDRESS
         SPACE
*   WAIT FOR SUBTASK TO FINISH
         DFHKC TYPE=WAIT,DCI=SINGLE,ECADDR=SUBTECB
*   DETACH THE SUBTASK
         DETACH SUBTTCB
         SPACE
*----------------------------------------*
*   EXAMINE SUBTASK RETURN INFORMATION   *
*----------------------------------------*
         L     R3,SUBTRETN              LOAD RETURN CODE
         LTR   R3,R3                    CODE = 0 ?
         BNZ   DOERROR                   NO - DEAL WITH RETURN CODE
         L     R4,RETNAD1                YES - RETURN TO
         BR    R4                           CALLING ROUTINE
         SPACE 3
DOERROR  EQU   *
         C     R3,=F'4'                 SELECT REQUIRED
         BE    NOJOB                      ERROR ROUTINE
         C     R3,=F'8'
         BE    COMBBAD
         C     R3,=F'12'
         BE    MULTIPLE
         SPACE
         XC    SELECT(2),SELECT         ERROR UNKNOWN
         OI    SELECT+1,X'02'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 5
NOJOB    EQU   *
         XC    SELECT(2),SELECT
         OI    SELECT,X'88'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE
COMBBAD  EQU   *
         XC    SELECT(2),SELECT
         OI    SELECT,X'E0'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE
MULTIPLE EQU   *
         XC    SELECT(2),SELECT
         OI    SELECT,X'90'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         EJECT
*================================*
*   RETURN DISPLAY TO TERMINAL   *
*================================*
RETDSPLY EQU   *
         DFHSC TYPE=GETMAIN,NUMBYTE=2000,CLASS=TERMINAL
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         LA    R3,MESSAGE               SET UP
         ST    R3,MSGADDR                 GDF PARAMS
         LA    R3,DATAREA                   (SELECT & TOTALCT
         ST    R3,DATADDR                    ALREADY SET)
         MVC   VARDATAD,=F'0'
         MVC   STARTCT,=F'1'
         MVC   FORMATID,=CL8'UZVPV01'
         MVC   ACTCODE,=CL4'OPUT'
         SPACE
         DFHPC TYPE=LINK,PROGRAM=UZHBAA
         ST    SAACBAR,TCASCSA          FREE WORK
         DFHSC TYPE=FREEMAIN              AREA
         MVC   TIOATDL,MSGLNGTH+2       SEND DISPLAY
         TM    FLAG,X'20'
         BO    NOERASE
         DFHTC TYPE=(WRITE,ERASE)
         MVC   TCANXTID,=CL4'PVK2'      SET NEXT XID
         B     RETURN
         SPACE 5
NOERASE  EQU   *             INVALID FUNCTION - DO NOT CLEAR SCREEN
         DFHTC TYPE=(WRITE),CTLCHAR=YES
         MVC   TCANXTID(4),=CL4'PVK2'
         B     RETURN
         SPACE 5
*------------------------------------------------*
*   RETURN FINAL DISPLAY - DO NOT SET NEXT XID   *
*------------------------------------------------*
ENDPROC  EQU   *
         ST    SAACBAR,TCASCSA
         DFHSC TYPE=FREEMAIN
         DFHSC TYPE=GETMAIN,NUMBYTE=200,CLASS=TERMINAL
         L     TIOABAR,TCASCSA
         ST    TIOABAR,TCTTEDA
         LA    R3,MESSAGE
         ST    R3,MSGADDR
         ST    R3,DATADDR
         MVC   VARDATAD,=F'0'
         MVC   STARTCT,=F'1'
         XC    SELECT(4),SELECT
         OI    SELECT,X'80'                         MND JAN81
         MVC   TOTALCT,=F'0'
         MVC   FORMATID,=CL8'UZJRF03'
         MVC   ACTCODE,=CL4'OPUT'
         DFHPC TYPE=LINK,PROGRAM=UZHBAA
         MVC   TIOATDL,MSGLNGTH+2       SET MSG LENGTH TO ZERO
         DFHTC TYPE=(WRITE,ERASE)
         SPACE 10
*-----------------------*
*   END OF PROCESSING   *
*-----------------------*
RETURN   EQU   *
         DFHPC TYPE=RETURN
         EJECT
*====================*
*   ERROR ROUTINES   *
*====================*
         SPACE 5
VSAMERR  EQU   *               ERROR READING VSAM FILE
         DFHDC TYPE=TRANSACTION,DMPCODE=VSER
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'08'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 5
OUTLIMIT EQU   *               LINE REQUESTED BEYOND OUTPUT LIMIT
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'04'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 5
LINEBAD  EQU   *               LINE PARAMETER NON-NUMERIC
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'80'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 5
FNINVAL  EQU   *               FUNCTION SPECIFIED INVALID
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'40'           SELECT BIT 10
         MVC   TOTALCT,=F'0'
         OI    FLAG,X'20'
         B     RETDSPLY
         SPACE 5
JOBNBAD  EQU   *               JOBNAME INVALID
         XC    SELECT(2),SELECT
         OI    SELECT+1,X'20'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         SPACE 5
JOBIDBAD EQU   *               JOBID SPECIFIED INVALID
         XC    SELECT(2),SELECT
         OI    SELECT,X'01'
         MVC   TOTALCT,=F'0'
         B     RETDSPLY
         EJECT
*=========================================*
*   CHECK THAT A GIVEN FIELD IS NUMERIC   *
*=========================================*
CHKNUM   EQU   *                   THIS ROUTINE CHECKS THAT A GIVEN
*                                  CHAR STRING IS NUMERIC, RIGHT-
*                                  JUSTIFIES IT, & INSERTS LEADING 0'S
         SPACE
         ST    R3,RETNAD2
         ST    R6,NUMFLD                SAVE PTR TO START OF FLD
         LA    R4,JIDSTOR
         SR    R3,R3
         SPACE
JIDLOOP1 EQU   *
         CLI   0(R6),C' '               FIND 1ST
         BE    JIDNEXT                    NON-BLANK
         CLI   0(R6),X'00'                  CHARACTER
         BNE   FOUNDCH
JIDNEXT  EQU   *
         LA    R6,1(0,R6)
         CR    R6,R5
         BL    JIDLOOP1
         B     ALLBLNK
         SPACE
FOUNDCH  EQU   *                   CHECK ALL CHARACTERS ARE DIGITS
         CLI   0(R6),C'9'
         BH    JIDBAD
         CLI   0(R6),C'0'
         BL    JIDBAD
         LA    R3,1(,R3)                INCREMENT COUNTER
         MVC   0(1,R4),0(R6)            MOVE TO STOR FOR REFORMAT
         LA    R4,1(,R4)                INCREMENT
         LA    R6,1(,R6)                  POINTERS
         CR    R6,R5                    END OF INPUT FIELD ?
         BL    FOUNDCH                  NO
         SPACE
JIDOK    EQU   *                   RIGHT-JUSTIFY AND ADD LEAD ZEROES
         LA    R5,4                     CALCULATE
         SR    R5,R3                      LENGTHS
         BM    ISNUM                    R3 > 4 => FIELD ALL NUMERIC
         BCTR  R3,0
         L     R4,NUMFLD                R4 -> START OF FIELD
         EX    R5,JIDMOV1                 ZEROES
         LA    R4,1(R5,R4)              MOVE JOB
         EX    R3,JIDMOV2                 NUMBER
         B     ISNUM
         SPACE 3
JIDMOV1  MVC   0(1,R4),=CL5'00000'
         SPACE
JIDMOV2  MVC   0(1,R4),JIDSTOR
         SPACE 3
JIDBAD   EQU   *                   CHECK FOR ONLY TRAILING BLANKS
         CLI   0(R6),C' '
         BE    TRNEXT
         CLI   0(R6),X'00'
         BNE   NOTNUM
TRNEXT   EQU   *
         LA    R6,1(,R6)
         CR    R6,R5
         BL    JIDBAD
         B     JIDOK                    ONLY BLANKS - GO RIGHT JUSTIFY
         SPACE 3
ISNUM    EQU   *
         LA    R4,0
         B     NUMRETN
         SPACE
NOTNUM   EQU   *
         LA    R4,4
         B     NUMRETN
         SPACE
ALLBLNK  EQU   *
         LA    R4,8
         SPACE
NUMRETN  EQU   *
         L     R3,RETNAD2
         BR    R3
         EJECT
*====================*
*   CONSTANTS ETC.   *
*====================*
         SPACE 5
BLANKS   DC    CL30'                    '
         SPACE 2
ATCHPRMS ATTACH EP=PVK1SUBT,ECB=BLANKS,SF=L
         SPACE 5
         LTORG
         END
