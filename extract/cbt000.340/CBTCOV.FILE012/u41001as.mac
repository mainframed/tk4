         MACRO
&NAME    BEGIN &BASE=12,&ID=*
         AIF   (&BASE GT 1 AND &BASE LT 13).A
         MNOTE 8,'INVALID BASE REGISTER GIVEN, GENERATION TERMINATED.'
         MEXIT
.A       ANOP
&NAME    SAVE  (14,12),,&ID
         BALR  &BASE,0             LOAD BASE REGISTER
         USING *,&BASE             ESTABLISH ADDRESSABILITY
         CNOP  0,4                 ALIGN ON FULLWORD BOUNDARY
         BAL   15,*+76             LOAD A(SAVEAREA) AND BRANCH AROUND
         DC    18F'0'              SAVEAREA
         ST    15,8(0,13)          CHAIN SAVEAREAS BACKWARDS
         ST    13,4(0,15)          CHAIN SAVEAREAS FOREWARDS
         LR    13,15               UPDATE CURRENT SAVEAREA POINTER
         MEND
         TITLE 'ZLKD - CONTROL MODULE FOR REL 21.6 LINKAGE EDITOR.'
**
**  AUTHOR :  ALAN FULFORD   DATE SUBMITTED :  25/7/73
**  INSTALLATION :  ALLIED BREWERIES, BURTON   PHONE :  0283-66322  X 3
**
**
**  THIS PROGRAM IS DESIGNED TO :
**
**    1) SELECT THE OPTIMUM F-LEVEL LINKAGE EDITOR FOR THIS PARTITION.
**
**    2) SELECT THE OPTIMUM SAFE VALUES FOR THE SIZE PARAMETER.
**
**    3) RESET THE PARM FIELD ACCORDINGLY.
**
**    4) XCTL TO THE SELECTED LINKAGE EDITOR.
**
**
**  ASSUMPTIONS :
**    1) F44, F88, & F128 LEVELS AVAILABLE.
**
**    2) ZLKD SHOULD HAVE ALIASES IEWL & LINKEDIT IN SYS1.LINKLIB.
**
**    3) 40 : 1 BLOCKING FACTORS USED FOR LINKAGE EDITOR.
**
**    4) IF PARTITION SIZE < 112K, SIZE ALREADY GIVEN IS USED FOR F44.
**
**
ZLKD01   CSECT
         BEGIN
         ST    1,SAVE1             SAVE A(PARM FIELD) FOR LKED
**
**  OBTAIN SIZE OF CURRENT PARTITION
**
         L     2,16                A(CVT)
         L     2,0(0,2)            A(N/O BOX)
         L     2,4(0,2)            A(CURRENT TCB)
         L     2,24(0,2)           A(BBX)
         L     3,8(0,2)            A(END OF PARTITION)
         SL    3,4(0,2)            A(START OF PARTITION)
         SRL   3,10                SIZE OF PARTITION IN K
**
**  DETERMINE REQUIRED LINKAGE EDITOR DESIGN LEVEL
**
         LA    11,LKDTAB           A(PARAMETER TABLE)
         USING TABLE,11
         SL    3,=A(8)             REDUCE SIZE BY 8K FOR LKED OVERHEAD
         LA    10,12               PRESET TABLE INDEX FOR F128
         CL    3,VALUE1(10)        IS SIZE ^< 128K
         BNL   F128                YES, BRANCH
         SLR   10,10               ELSE, RESET TABLE INDEX FOR F88
         CL    3,VALUE1(10)        IS SIZE < 104K
         BL    F44                 YES, BRANCH
F128     L     4,SUFFIX(10)        ELSE, LOCATE SUFFIX
         ST    4,LKEDNAME+4        SET UP REQUIRED NAME
**
**  COMPUTE VALUE2 OF SIZE PARAMETER
**
         SLR   4,4
         LR    5,3                 GET SIZE VALUE1
         SL    5,VALUE1(10)        COMPUTE EXCESS SIZE
         D     4,=A(12)            ROUND DOWN TO NEXT 12K
         MH    5,=AL2(12)
         AL    5,VALUE2(10)        COMPUTE SIZE VALUE2
         DROP  11
         CL    5,=A(96)            IS IT ^> 96K
         BNH   CONVERT             YES, BRANCH
         LA    5,96                ELSE, USE 96K FOR VALUE2
CONVERT  CVD   3,DWD               CONVERT VALUE1 TO DECIMAL
         OI    DWD+7,X'0F'         REMOVE SIGN
         UNPK  NEWSIZE+7(3),DWD+6(2) SET IN NEW SIZE PARAMETER
         CVD   5,DWD               CONVERT VALUE2 TO DECIMAL
         OI    DWD+7,X'0F'         REMOVE SIGN
         UNPK  NEWSIZE+12(2),DWD+6(2) SET IN NEW SIZE PARAMETER
**
**  RESET PARM INFORMATION FOR THIS EXECUTION
**
         L     6,SAVE1             LOCATE PARM POINTER
         L     7,0(0,6)            LOCATE CURRENT PARM FIELD
         LH    8,0(0,7)            GET SIZE OF CURRENT PARM
         LTR   8,8                 IS IT ZERO
         BNZ   BUILDNEW            YES, BRANCH
         GETMAIN R,LV=17           ELSE, ACQUIRE MAIN STORAGE FOR SIZE
         LA    9,15
         STH   9,0(0,1)            SET LENGTH
         MVC   2(15,1),NEWSIZE+1   ENTER NEW PARM DATA
         B     RESET
BUILDNEW LA    0,18(0,8)           COMPUTE SIZE OF NEW PARM
         GETMAIN R,LV=(0)          ACQUIRE MAIN STORAGE FOR IT
         BCTR  8,0
         EX    8,MOVEPARM          MOVE IN OLD PARM DATA
         LA    9,17(0,8)           COMPUTE LENGTH OF NEW PARM DATA
         STH   9,0(0,1)            ENTER INTO NEW PARM FIELD
         LA    9,3(8,1)            LOCATE END OF OLD DATA
         MVC   0(16,9),NEWSIZE     ADD ON NEW PARM DATA
RESET    STCM  1,7,1(6)            RESET PARM POINTER
**
**  TRANSFER CONTROL TO LINKAGE EDITOR
**
F44      L     13,4(0,13)          RESTORE A(CALLER'S SAVEAREA)
         LM    14,11,12(13)        RESTORE CALLER'S REGISTERS
         XCTL  (12),EPLOC=LKEDNAME TRANSFER CONTROL TO LKED
         EJECT
**
**  REQUIRED CONSTANTS
**
DWD      DS    D                   WORK AREA
SAVE1    DS    F                   SAVE AREA FOR REG1
LKDTAB   DS    0F                  PARAMETER TABLE
         DC    C'F880'             SUFFIX FOR F88
         DC    A(104)              VALUE1 FOR F88
         DC    A(24)               VALUE2 FOR F88
         DC    C'F128'             SUFFIX FOR F128
         DC    A(128)              VALUE1 FOR F128
         DC    A(24)               VALUE2 FOR F128
LKEDNAME DC    C'IEWLF440'         LKED MODULE NAME
NEWSIZE  DC    C',SIZE=(NNNK,MMK)' NEW SIZE DATA
MOVEPARM MVC   2(0,1),2(7)         MOVE OLD PARM DATA
         LTORG
**
**  REQUIRED DSECT
**
TABLE    DSECT
SUFFIX   DS    F                   SUFFIX
VALUE1   DS    A                   VALUE1
VALUE2   DS    A                   VALUE2
         END
