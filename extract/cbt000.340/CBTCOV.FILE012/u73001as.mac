FREESPAC TITLE 'DISPLAY FREE SPACE ON D.A. DEVICES'
***********************************************************************
*                                                                     *
*    FREESPAC            STUART JEFCOATE          FEBRUARY 1976       *
*    ********                                                         *
*                   THIS PROGRAM IS DESIGNED TO INFORM THE OPERATOR   *
*                 OF THE AMOUNT OF FREE SPACE AVAILABLE ON A 3330     *
*                 DISK PACK.                                          *
*                   AN EXEC CARD PARM GIVES THE UNIT ADDRESS OF THE   *
*                 FIRST DRIVE, AND ALSO THE NUMBER OF DRIVES TO BE    *
*                 CHECKED, E.G.                                       *
*                             PARM='150,4'                            *
*                                                                     *
*                   THE AMOUNT OF FREE SPACE IS FOUND BY ISSUING AN   *
*                 LSPACE SVC (78) , AND THIS INFORMATION IS DISPLAYED *
*                 ON THE CONSOLE .                                    *
*                                                                     *
***********************************************************************
         EJECT
FREESPAC CSECT
         SPACE 2
***                                                                 ***
*        REGISTER EQUATES.                                            *
***                                                                 ***
         SPACE
R0       EQU   0
R1       EQU   1                       * EXEC CARD PARM
R2       EQU   2
R3       EQU   3                       * LOOP CONTROL
R4       EQU   4                       * CVT PTR
R5       EQU   5                       * IECILK1 PTR
R6       EQU   6                       * IECILK2 PTR
R7       EQU   7                       * WORK
R8       EQU   8                       * WORK
R9       EQU   9                       * WORK
R10      EQU   10
R11      EQU   11
R12      EQU   12                      * MODULE BASE
R13      EQU   13                      * SAVEAREA PTR
R14      EQU   14                      * RTN ADDR
R15      EQU   15                      * EP ADDR / WORK
         SPACE 3
CVTPTR   EQU   X'10'                   * COMMUNICATION VECTOR TABLE PTR
ILK1DISP EQU   X'24'                   * DISPLACEMENT FOR IECILK1 PTR
ILK2DISP EQU   X'28'                   * DISPLACEMENT FOR IECILK2 PTR
         SPACE 3
         SAVE  (14,12),,*              * SAVE CALLER'S REGS
         BALR  R12,0                   * MODULE
         USING *,R12                   *  BASE
         LA    R11,SAVEAREA            *
         ST    R13,4(R11)              * SAVEAREA
         ST    R11,8(R13)              *   CHAIN
         LR    R13,R11                 *
         EJECT
         L     R1,0(R1)                * EXEC CARD PARM
         LH    R2,0(R1)                * PARM LTH
         CH    R2,=H'+5'               * CORRECT ?
         BNE   BADPARM                 *   NO - WTO & EXIT
         SPACE 2
         CLI   5(R1),C','              * COMMA IN
         BNE   BADPARM                 *   CORRECT POSITION ?
         SPACE 2
         MVC   5(1,R1),6(R1)           * MOVE UP NO OF UNITS
         CLC   2(4,R1),=C'0000'        * UNIT ADDRESS OF FIRST UNIT
         BL    BADPARM                 *   AND NUMBER OF UNITS
         CLC   2(4,R1),=C'9999'        *   MUST BOTH BE
         BH    BADPARM                 *   NUMERIC
         SPACE 2
         PACK  DWORK,2(3,R1)           * UNIT ADDR
         LH    R3,DWORK+6              * HALFWORD
         SRL   R3,4                    * STORE IT
         STH   R3,CUA                  *   AT CUA
         PACK  DWORK,5(1,R1)           * NO OF UNITS
         CVB   R3,DWORK                * LOOP CTL
         EJECT
***                                                                 ***
*  THIS ROUTINE USES THE I/O INTERRUPTION SUPERVISOR'S UCB LOOKUP     *
*    TABLE TO OBTAIN THE ADDRESS OF A UCB FROM IT'S DEVICE ADDRESS.   *
***                                                                 ***
         SPACE 2
UNITLOOP L     R4,CVTPTR               * R4 --> CVT
         L     R5,ILK1DISP(R4)         * R5 --> IECILK1
         L     R6,ILK2DISP(R4)         * R6 --> IECILK2
         XR    R7,R7                   * R7 = 0
         IC    R7,CUA                  * R7 = 3-BIT CHANNEL ADDRESS
         AR    R7,R5                   * R7 --> K
         XR    R8,R8                   * R8 = 0
         IC    R8,0(R7)                * R8 = K
         SPACE 2
         XR    R7,R7                   * R7 = 0
         IC    R7,CUA+1                * R7 = 4-BIT CONTROL UNIT
         SRL   R7,4                    *   ADDRESS
         AR    R7,R8                   * R7 = CU ADDR + K
         AR    R7,R5                   * R7 --> L
         XR    R8,R8                   * R8 = 0
         IC    R8,0(R7)                * R8 = L
         SPACE 2
         AR    R8,R8                   * R8 = 2L
         XR    R7,R7                   * R7 = 0
         IC    R7,CUA+1
         SLL   R7,28
         SRL   R7,28                   * R7 = 4-BIT DEVICE ADDRESS
         AR    R7,R7                   *   2 X
         AR    R8,R7                   * R8 = 2(DEV ADDR) + 2L
         AR    R8,R6                   * R8--> UCB AADR
         LH    R8,0(R8)                * R8--> UCB
         EJECT
***                                                                 ***
*  AT THIS POINT, REG 8 POINTS TO A UCB FOR A DEVICE TO BE CHECKED.   *
***                                                                 ***
         SPACE 3
         LA    R1,LSPACMSG             * FUNCTION + MSG AREA
         LR    R0,R8                   * UCB ADDR
         SVC   78                      * LSPACE SVC
         SPACE 2
         LTR   R15,R15                 * CHECK FOR ZERO RETURN-CODE
         BNZ   BADRC                   * EXIT IF NOT
         SPACE 2
         MVC   FREESP03+19(6),28(R8)   * VOL SER
         MVC   FREESP03+28(4),LSPACMSG+6     *
         MVC   FREESP03+40(4),LSPACMSG+11    * COMPLETE SPACE VALUES
         MVC   FREESP03+86(4),LSPACMSG+21    *   IN MSG
         MVC   FREESP03+98(4),LSPACMSG+26    *
         SPACE 2
         WTO   MF=(E,FREESP03)         * WRITE OUT FREE SPACE MSG
         SPACE 3
         LH    R1,CUA                  * INCREMENT
         LA    R1,1(R1)                *   UNIT ADDRESS
         STH   R1,CUA                  *   BY ONE
         BCT   R3,UNITLOOP             * ROUND FOR EACH UNIT
         B     COMPLETE                * FINALLY EXIT
         EJECT
***                                                                 ***
*  FREESPAC SUBROUTINES AND ERROR ROUTINES.                           *
***                                                                 ***
         SPACE 2
BADPARM  WTO   'FREESP01  -  INVALID PARM INFORMATION ENTERED  -  RUN AX
               BANDONED'
         B     RETURN                  * EXIT
         SPACE 2
BADRC    WTO   'FREESP02  -  NON-ZERO RETURN-CODE SET BY LSPACE SVC  - X
                ABENDING U0001'
         ABEND 001,DUMP                * PROVIDE SYSABEND DD CARD
         SPACE 2
COMPLETE WTO   'FREESP04  -  FREESPAC PROCESSING COMPLETED'
         SPACE 2
RETURN   L     R13,SAVEAREA+4          * HSA ADDR
         LM    R14,R12,12(R13)         * RESET CALLER REGS
         BR    R14                     * EXIT
         EJECT
***                                                                 ***
*  FREESPAC WORKAREAS AND CONSTANTS.                                  *
***                                                                 ***
         SPACE 3
SAVEAREA DC    9D'0'                   * REGISTER SAVEAREA
DWORK    DC    D'0'                    * WORKAREA
CUA      DC    H'0'                    * UNIT ADDRESS
*
FREESP03 WTO   'FREESP03 - VOL UGXXXX - CCCC CYLS + TTTT TRKS UNUSED - X
               LARGEST CONTIG FREE AREA = CCCC CYLS + TTTT TRKS',MF=L
*
LSPACMSG DC    CL30'SPACE=CCCC,TTTT,AAAA/CCCC,TTTT'
*
         LTORG
         END
