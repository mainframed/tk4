         TITLE  'SPY50 - CPU MONITOR - REL 1.0'
******************************************************************
**** SPY50 WILL HOPEFULLY CHECK OS/VS1 TASK ACTIVITY AND SEARCH  *
* FOR A TASK WHICH IS LOOPING. PERCENTAGES OF ACTIVE,WAITING FOR *
* CPU AND WAITING FOR IO/ECB ARE GIVEN. THE MONITOR RUNS FOR TWO *
* MINUTES.                                                       *
******************************************************************
* MACRO
         MACRO
&NAME    CUREG
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUREG MACRO:16/01/75'
         POP   PRINT
         ACTR  50
         LCLA  &X,&Y,&Z
*    GENERAL REGISTERS
.LPR     ANOP
R&X      EQU   &X
&X       SETA  &X+1
         AIF   (&X LT 16).LPR
*    CONTROL REGISTERS
.LPC     ANOP
C&Y      EQU  &Y
&Y       SETA  &Y+1
         AIF   (&Y LT 16).LPC
*    FLOATING POINT REGISTERS
.LPF     ANOP
F&Z      EQU   &Z
&Z       SETA  &Z+2
         AIF   (&Z LT 8).LPF
         MEND
         MACRO
&NAME    CUENTER &BASE=(R12),&RECURSE=,&RENT=,&FIRST=,&CSECT=,&PARM=
         LCLA  &AL0,&AL1,&AL2,&AL9,&AL12
         ACTR  45                                              DEC 75
&AL2     SETA  &SYSNDX
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUENTER MACRO:16/06/77'
         POP   PRINT
         LCLC  &CL0,&CL1,&CL2,&CL3,&CL12,&CL13,&CL50
         LCLC  &CL51,&CL52,&CL53
         GBLB  &BG15
         AIF   ('&NAME' EQ '').B98
         ENTRY &NAME
.B98     ANOP
&CL0     SETC  '12'
         AIF   ('&BASE'(1,1) EQ '(').B10  *VALIDATE &BASE PARAMETER
&CL0     SETC  '&BASE'
         AIF   ('&CL0' EQ 'NONE').B11
         AIF   ('&CL0'(1,1) NE 'R').B4B
&AL9     SETA  K'&CL0-1
&CL0     SETC  '&CL0'(2,&AL9)
.B4B     AIF   ((&CL0 GT 1) AND (&CL0 LT 13)).B11
.BERA    MNOTE 9,'&&BASES WRONG,MACRO ABANDONED'
         MEXIT
.B10     ANOP
&CL0     SETC  '&BASE(1)'
&AL0     SETA  1                        COUNT ALONG TO-BE-SCANNED BASES
.B13     ANOP
&AL1     SETA  1                       *COUNT ALONG PREVIOUSLY SCANNED
&CL12    SETC  '&BASE(&AL0)'
         AIF ('&CL12'(1,1) NE 'R').B12A
&AL9     SETA  K'&CL12-1
&CL12    SETC  '&CL12'(2,&AL9)
.B12A    ANOP
&AL12    SETA  &CL12
.B12     AIF    ((&AL12 LT 2) OR (&AL12 GT 12)).BERA
.B15     AIF   (&AL1 EQ &AL0).B14      *J OUT IF REACHED LATEST
&CL13    SETC  '&BASE(&AL1)'
         AIF   ('&CL13'(1,1) NE 'R').B15A
&AL9     SETA  K'&CL13-1
&CL13    SETC  '&CL13'(2,&AL9)
.B15A    AIF   (&CL12 EQ &CL13).BERA *ERROR IF DUPLICATED
&AL1     SETA  &AL1+1                  *STEP ALREADY SCANNED PTR
         AGO   .B15
.B14     ANOP
&AL0     SETA  &AL0+1                  *STEP SCAN POINTER
         AIF   ('&BASE(&AL0)' NE '').B13 *J IF NOT NULL
&AL9     SETA  N'&BASE
         AIF   (&AL0 LT &AL9).BERA *ERROR IF NULL ELEMENT
.B11    ANOP
.*   START GENERATING PROGRAM
         DS    0H
         BALR  R15,0
         USING *,R15
&CL1     SETC  '&CSECT'
         AIF   ('&CL1' NE '').B30
&CL1     SETC  '*'
.B30     ANOP
&NAME    SAVE  (14,12),,&CL1
.B32     ANOP
.B90A    BAL   &CL0,OCSVA&AL2
         DROP  R15
         USING *,&CL0
OCSVD&AL2 EQU  *         HOLD IMMEDIATELY AFTER USING STATEMENT
         AIF   (&BG15).NODATIM
         CUREG                          REGISTER MNEMNONICS
&CL51    SETC  '&NAME'
         AIF   (K'&CL51 LE 8).DT1
&CL51    SETC  '&CL51'(1,8)
         AGO   .DT2
.DT1     ANOP
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '&SYSECT'
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '????????'
.DT2     ANOP
&CL52    SETC  '&SYSDATE'(4,2)'.'.'&SYSDATE'(1,2)'.'.'&SYSDATE'(7,2)
&CL53    SETC  '&SYSTIME'(1,2)':'.'&SYSTIME'(4,2)':00'
CUVRSION DC    C'****VERSION/',CL8'&CL51',C'/&CL52./&CL53'
&BG15    SETB  (1)                                             DEC 75
.NODATIM ANOP
OCSAR&AL2 DS    18F
OCSVA&AL2 EQU  *
         AIF   ('&BASE' EQ '').B89
&AL9     SETA  N'&BASE
         AIF   (&AL9 LE 1).B89
&AL1     SETA  &AL9
&AL0     SETA  2
.B88     ANOP
&CL2     SETC  '&BASE(&AL0)'
&CL3     SETC  '&BASE(&AL0-1)'
         LA    &CL2,1
         LA    &CL2,4095(&CL2,&CL3)
         USING OCSVD&AL2+4096*(&AL0-1),&CL2
         AIF   (&AL0 EQ &AL1).B87
&AL0     SETA  &AL0+1
         AGO   .B88
.B89     ANOP
.B87     ANOP
         ST    R13,OCSAR&AL2+4
         LR    R15,R13
         LA    R13,OCSAR&AL2
         ST    R13,8(R15)
         MEXIT
.MEND    MEND
* MACRO
         MACRO
&NAME    CUEXIT   &RC=(15)
         GBLB  &BG15                                 DEC 75
         LCLA  &B,&W
         LCLC  &Z
&NAME    DS 0H
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUEXIT MACRO:16/06/77'
         POP   PRINT
         L      R13,4(13)
&Z         SETC  '&RC'
.B94     AIF   ('&Z'(1,2) NE '(R').B84
&B       SETA  K'&Z-2
&Z        SETC  '&Z'(1,1).'&Z'(3,&B)
.B84     ANOP
         AIF   ('&Z' EQ '(15)').B60
         AIF   ('&Z'(1,1) EQ '(').B61
         RETURN (14,12),RC=&Z
         AGO   .B62
.B61     ANOP
&W       SETA  K'&Z-2
&Z       SETC  '&Z'(2,&W)
         LR    R15,&Z
.B60     RETURN (14,12),RC=(15)
.B62     ANOP
         MEND
SPY50    CUENTER
         L     1,0(1)                 GET PARM ADDRESS
         LA    1,128(1)               GET ECB ADDRESS
         POST  (1)                    LET COMMAND MODULE CONTINUE
         WTO   '** SPY CPU UTILIZATION MONITOR ACTIVE **'
         L     5,16                   GET CVT TO START OFF
         LA    6,AREA                 LOAD 6 WITH OUTPUT AREA
         XR    9,9                    CLEAR OFF 9 IN CASE
         IC    9,248(5)               LOAD 9 WITH NO OF PARTITIONS
         L     8,244(5)               GET ADDRESS OF P0
         LR    5,8                    LOAD 5 WITH IOS FRELIST P0
         L     8,0(8)                 LOAD P0 ADDRESS
         ST    8,P0STORE              SAVE P0 TCB ADDRESS
         ST    9,COUNT                STORE NUMBER OF PARTITIONS
         LA    8,JOBNAMES             LOAD ADDRESS OF JOBNAMES
LOOP     EQU   *                      LOOP EQUATE?
         MVC   0(4,6),0(5)            MOVE TCB ADDRESS TO JOBNAME
         L     10,0(5)                LOAD TCB
         CLC   12(4,10),=X'00000000'  TIOT PRESENT?
         BE    NOTIOT                 IF NOT DON'T WASTE TIME
         MODESET KEY=ZERO             TIOT MAY BE FETCH PROTECTED
         L     11,0(10)               LOAD TOP RB FOR THIS TASK
         L     10,12(10)              LOAD TIOT
         MVC   0(8,8),0(10)           MOVE JOBNAME TO STORE AREA
         MODESET KEY=NZERO            GET OUT OF FETCH PROTECT ZERO
         B     SYSTEM                 BRANCH ON
NOTIOT   MVC   0(8,8),=C'OS/VS1  '    IF NO TIOT MOVE CONSTANT OS/VS1
SYSTEM   LA    5,4(5)                 LOAD NEXT TCB ADDRESS
         LA    6,28(6)                UP ADDRESS OF STORE AREA
         LA    8,8(8)                 UP JOBNAME STORE AREA
         BCT   9,LOOP                 BRANCH COUNT ON NO, OF PARTITS
RETURN0  LA    4,400                  LOAD FO 400 LOOPS ROUND TCB CHAIN
RETURN   LA    6,AREA                 LOAD UP TCB INFORMATION AREA
         L     9,COUNT                LOAD 9 WITH NUMBER OF PARTITIONS
         NI    NOP1+1,X'00'           HIT TH NO OP SWITCH
LOOP1    L     5,0(6)                 LOAD FIRST TCB ADDRESS
         L     5,0(5)                 LOAD TCB INTO 5
         CLC   16(8,5),X'18'          HAS SPY JUST LOST CONTROL ?
         BNE   NOTACT                 IF SO DON'T COUNT IN TOTALS
NOP1     NOP   NOTACT                 NO OP SWITCH
         OI    NOP1+1,X'F0'           SET NO OP SWITCH
         L     10,20(6)               LOAD CPU ACTIVE COUNTER
         LA    10,1(10)               KNOCK UP BY 1
         ST    10,20(6)               STORE BACK AGAIN
         L     10,ACTIVE              LOAD 10 WITH TOTAL ACTIVE COUNTER
         LA    10,1(10)               KNOCK UP BY 1
         ST    10,ACTIVE              STORE BACK AGAIN
         B     GETOUT                 GET OUT OF HERE FAST
NOTACT   CLI   28(5),X'00'            IS IT WAITING FOR SOMETHING ?
         BNE   NOCHG                  BRANCH IF WAITING
BYPASS   L     10,16(6)               LOAD CPU WAIT COUNTER
         LA    10,1(10)               KNOCK UP BY 1
         ST    10,16(6)               STORE CUP WAIT COUNTER
NOADD    MVC    12(4,6),20(5)         MOVE RESUME PSW FOR RB
         B     HOPIT                  GET OUT FAST
NOCHG    EQU   *                      TASK IS WAITING
         L     10,24(6)               LOAD I/O WAIT STORE
         LA    10,1(10)               KNOCK UP BY 1
         ST    10,24(6)               STORE BACK AGAIN
HOPIT    L     10,TOTAL               LOAD TOTAL COUNTER
         LA    10,1(10)               UP COUNT BY 1
         ST    10,TOTAL               STORE AGAIN
GETOUT   LA    6,28(6)                UP TCB INFO AREA COUNTER
         BCT   9,LOOP1                BRANCH COUNT BACK
         L     10,BREAKS              LOAD NO OF BREAKS COUNTER
         LA    10,1(10)               KNOCK UP BY 1
         ST    10,BREAKS              STORE AGAIN
         TM    X'19',X'02'            WAS VS1 IN WAIT
         BZ    WAITNOT                TWAS NOT
         L     10,WAITS               LOAD WAIT COUNTER
         LA    10,1(10)               KNOCK UP BY 1
         ST   10,WAITS                STORE AGAIN
WAITNOT  TM    X'19',X'01'            WAS VS1 IN PROBLEM STATE?
         BZ    PROBNOT                NO PROBLEM
         L     10,PROBS               UP PROBLEM STATE COUNTER
         LA    10,1(10)               BY 1
         ST    10,PROBS               STORE AGAIN
PROBNOT  TM    X'19',X'F0'            WAS VS1 KEY ZERO
         BZ    ZERONOT                TWAS NOT
         L     10,ZEROS               LOAD ZERO COUNTER
         LA    10,1(10)               UP COUNTER BY 1
         ST    10,ZEROS               STORE AGAIN
ZERONOT  EQU   *
ESCAPE   STIMER  WAIT,BINTVL=BINTVL   WAIT FOR A WHILE
         MVI   ECB1,X'00'             SET ECB1
         BCT   4,RETURN               BRANCH COUNT BACK
         L     9,COUNT                LOAD NUMBER OF PARTITIONS
         LA     6,AREA                LOAD TCB INFO AREA
         LA    8,JOBNAMES             LOAD JOBNAMES
         LA    2,WTOS                 LOAD ADDRESS OF WTO AREA
LASTLOOP MVC   1(2,2),6(6)            MOVE PARTITION NUMBER
         L     10,0(6)                LOAD TCB
THISTIME CLC   12(4,10),=X'00000000'  TIOT PRESENT
         BE    MISSTIOT               IF NOT SKIP IT
         MODESET KEY=ZERO             GET IN KEY ZERO
         L     11,0(10)               LOAD TOP PSW
         L     10,12(10)              LOAD TIOT
         CLC   2(4,10),=C'INIT'       IS JOBNAME C.U. INITIATOR
         BNE   F100                   IF NOT BRANCH TO MOVE NAME
         CLC   2(4,8),=C'INIT'        WAS START JOBNAME C.U. INITIATOR
         BNE    F200                  IF SO TRY AGAIN WITH JOB NAME
F100     MVC   0(8,8),0(10)           MOVE TIOT JOBNAME
F200     MODESET KEY=NZERO            GET OUT OF ZERO
         B     TIOTDONE               GET OUT FAST
MISSTIOT MVC   WTO1+37(8),=C'OS/VS1  '   PUT OUT 'OS/VS1' IF DON'T KNOW
TIOTDONE EQU   *                      OUT FAST
         L     4,20(6)                LOAD CPU ACTIVE COUNTER
         MH    4,=H'100'              MULT BY 100
         SRDA  4,32(0)                CLR 4 & SET 5 FOR DIVIDE
         CLC   TOTAL,=X'00000000'     IF TOTAL IS ZERO MISS DIVIDE
         BNE   NONZERO                I.E BRANCH IF NOT ZERO
         XR    5,5                    CLEAR 5
         B     EMPTY                  & SKIP DIVIDE
NONZERO  D     4,BREAKS               DIVIDE BY NUMBER OF BREAKS
EMPTY    EQU   *                      THAT WAS CLOSE..
         CVD   5,DOUBLE               CONVERT TO DECIMAL
         MVC   5(8,2),0(8)            MOVE JOBNAME
         MVC   16(3,2),=X'202120'     SET UP MASK
         ED    15(4,2),DOUBLE+6       DO EDIT
         MVI   19(2),C'%'             PUT IN %
         L     4,16(6)                LOAD CPU WAIT COUNTER
         MH    4,=H'100'              DO AS BEFORE....
         SRDA  4,32(0)
         CLC   TOTAL,=X'00000000'
         BNE   NONZERO1
         XR    5,5
         B     EMPTY1
NONZERO1 D     4,BREAKS
EMPTY1   EQU   *
         CVD   5,DOUBLE
         MVC   23(3,2),=X'202120'
         ED    22(4,2),DOUBLE+6
         MVI   26(2),C'%'
         L     4,24(6)                    LOAD I/O WAIT COUNTER
         MH    4,=H'100'                  DO AS BEFORE
         SRDA  4,32(0)
         CLC   TOTAL,=X'00000000'
         BNE   NONZERO2
         XR    5,5
         B     EMPTY2
NONZERO2 D     4,BREAKS
EMPTY2   EQU   *
         CVD   5,DOUBLE
         MVC   30(3,2),=X'202120'
         ED    29(4,2),DOUBLE+6
          MVI   33(2),C'%'
         B     NOWTO
WTO1     WTO   '*** PARTITION X - XXXXXXXX - XXXXXXXX  XX% XX XXX ***'
NOWTO    EQU   *
JOBUP    LA     8,8(8)         THIS SECTION PUT THE WTO AREA
NOTHIGH  LA    6,28(6)         OUT TO THE CONSOLE AS A SET OF WTOS
         LA     2,38(2)
         BCT   9,LASTLOOP      PUT OUT WTO FOR WAIT STATE PERCENTAGE
          L     4,WAITS
          MH    4,=H'100'
          SRDA   4,32(0)
          D     4,BREAKS
          CVD   5,DOUBLE
          MVC   MESSAGE+13(3),=X'202120'
          ED    MESSAGE+12(4),DOUBLE+6
          L     4,PROBS          AND FOR WAIT STATE
          MH    4,=H'100'
          SRDA   4,32(0)
          D     4,BREAKS
          CVD   5,DOUBLE
          MVC   MESSAGE+32(3),=X'202120'
          ED    MESSAGE+31(4),DOUBLE+6
          L    4,ACTIVE
          C     4,BREAKS
          BNH    ANDR
          NI    ABE+1,X'00'
          L     4,BREAKS
ANDR      MH    4,=H'100'
          SRDA   4,32(0)
          D     4,BREAKS
          CVD   5,DOUBLE
          MVC   SYST+30(3),=X'202120'
          ED    SYST+29(4),DOUBLE+6
          MVI   SYST+33,C'%'
          MVC   SYST+25(2),=C'0%'
          L     4,=F'100'
          SR    4,5
          MVC   SYST+16(3),=X'202120'
          CVD   4,DOUBLE
          ED    SYST+15(4),DOUBLE+6
          MVI   SYST+19,C'%'
          L     9,COUNT
          LA    9,3(9)
          LA     6,WTOA
ENDLOOP   MVC   WRITE+14(38),0(6)
          CLC   5(6,6),=C'OS/VS1'
          BE   UPPER
          CLC   30(3,6),=C'100'
          BNE    WRITE
          CLC   7(4,6),=C'INIT'
          BE     UPPER
WRITE     WTO   '**                                            **'
UPPER     LA    6,38(6)
          BCT    9,ENDLOOP
          MVC   WRITER+14(38),MESSAGE
WRITER    WTO   '**                                            **'
ABE       B     FINISH
          ABEND  2000,DUMP
FINISH  CUEXIT    RC=0
BINTVL  DC   F'25'
MESSAGE   DC    CL38'WAIT STATE =    % PROB STATE =     %  '
ECB1     DC     F'0'
COUNT    DC    F'0'
         DS    0D
AREA     DC    X'00000000'
          DC    C'PA0 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA1 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA2 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA3 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA4 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA5 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA6 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA7 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA8 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA9 '
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA10'
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA11'
          DC    20X'00'
         DC    X'00000000'
          DC    C'PA12'
          DC    20X'00'
          DC    X'00000000'
          DC    C'PA13'
          DC    20X'00'
         DC    C'SYSTEM'
SYS      DC    F'0'
MODULE   DC    CL8' '
NAME     DC    CL44' '
TIOTSTOR   DC    F'0'
TCBWORD   DC    F'0'
DOUBLE    DC    D'0'
TOTAL    DC  F'0'
ACTIVE    DC  F'0'
WAITS    DC   F'0'
PROBS   DC   F'0'
BREAKS   DC   F'0'
ZEROS    DC    F'0'
P0STORE  DC  F'0'
JOBNAMES DC  CL120' '
WTOA     DC   CL38'                       C.P.U.  I/O   '
         DC   CL38'    JOBNAME    ACTIVE   WAIT   WAIT  '
SYST     DC   CL38'OPERATING SYS.                       '
WTOS    DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
        DC   CL38'P                                     '
         END
