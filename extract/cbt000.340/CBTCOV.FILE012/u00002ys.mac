MVTRACE  CSECT
         SPACE 3
         SPACE 3
*                            GENERAL DESCRIPTION
*
*  THIS TRACE ROUTINE USES THE STANDARD O.S. TRACE POINTS TO PROVIDE
*        A) MORE COMPREHENSIVE INFORMATION - INCLUDING JOB, STEP, AND
*           TOP RB NAMES PLUS ALL REGISTERS - AT EACH ENTRY.
*        B) THE ABILITY TO VARY THE DATA COLLECTED AND PRINTED, OR TO
*           SEARCH FOR A PROBLEM SITUATION, BY USER EXIT ROUTINES
*           AVAILABLE IN THE TRACING AND PRINTING ROUTINES.
*
*  TSGTRACE OPERATES AS A NORMAL JOB STEP.  THE USER MAY GIVE A PARM
*  SPECIFYING THE SIZE OF THE TRACE TABLE (IN K - DEFAULT IS 8K), AND
*  THE NAMES OF THE USER EXIT ROUTINES (WHICH WILL BE LOADED FROM THE
*  LIBRARY DEFINED BY A //SPECRTN DD CARD).  THE PARM CAN ALSO BE USED
*  TO INHIBIT THE WTOR BY REPLY TO WHICH THE OPERATOR CAN END THE TRACE
*  (THIS AVOIDS HAVING TO INSTRUCT THE OPERATOR ABOUT THE REPLY WHEN
*  THE TRACE WILL END ITSELF UNDER CONTROL OF AN EXIT ROUTINE), AND TO
*  PASS ADDITIONAL PARAMETERS TO THE EXIT ROUTINE(S).
*
*  THE TRACE BEGINS BY SAVING THE ADCONS USED BY O.S. TO ENTER THE
*  STANDARD TRACE AND REPLACING THEM BY ITS OWN ENTRY POINTS.  IT THEN
*  FINDS THE CSCB FOR THIS JOB AND MAKES IT UNCANCELLABLE TO PREVENT
*  ACCIDENTAL TERMINATION WHILE O.S. IS LINKED TO CODE IN THIS TASK'S
*  CORE.  UNLESS 'NOWTOR' WAS SPECIFIED BY PARM A MESSAGE IS NOW ISSUED
*  LEAVING AN OPEN REPLY FOR THE OPERATOR TO END THE TRACE.
*
*  THE TRACE THEN WAITS ON AN ECBLIST OF THE WTOR ECB AND ANOTHER ECB
*  THAT CAN BE POSTED FROM WITHIN THE TRACE.  WHEN EITHER IS POSTED THE
*  ORIGINAL ADCONS FOR O.S. TRACE ARE RESTORED AND THE CURRENT CONTENTS
*  OF THE TRACE TABLE ARE PRINTED OUT (WORKING BACKWARDS FROM THE
*  LATEST ENTRY).  THE JOB IS MADE CANCELLABLE AGAIN WHEN THE TRACE
*  ADCONS ARE RESTORED.  IF THE EXIT ROUTINE(S) HAVE SET THE 'REPEAT'
*  SWITCH THE PROCESS OF CHANGING ADCONS, MAKING THE JOB UNCANCELLABLE,
*  AND WAITING ON THE ECB LIST IS NOW REPEATED (THE 'REPEAT' SWITCH IS
*  SET OFF FIRST).  IF THE 'REPEAT' SWITCH IS OFF THE JOB ENDS NORMALLY
         EJECT
*                            JCL REQUIREMENTS
*
*  JCL REQUIRED FOR TRACE........
*        //TRACK   EXEC  PGM=TSGTRACE(,PARM=....)(,REGION=....)
*        //SYSPRINT  DD  SYSOUT=....
*       (//SPECRTN   DD  DEFINES OPTIONAL LOAD LIB FOR EXIT ROUTINES)
*
*  NOTE  OPTIONAL PARM FIELD IS DESCRIBED BELOW.
*        REGION/PARTITION SIZE REQUIRED IS 8K PLUS SIZE OF TRACE TABLE
*
*  A PARM IS NOT REQUIRED.  IF OMITTED THE SIZE OF THE TRACE TABLE IS
*  8K (I.E. 64 128-BYTE ENTRIES), AND THE STANDARD DATA IS COLLECTED
*  AND PRINTED WITH NO EXITS BEING TAKEN.
*
*  A PARM MAY BE SUPPLIED IN THE FORM 'CORESIZE, TRACE EXIT NAME, PRINT
*  EXIT NAME'.  CORESIZE MUST BE GIVEN IN 'K', E.G. '8K' OR '50K'.
*  EACH EXTRA K GIVES 8 EXTRA ENTRIES.  THE EXIT NAMES GIVEN MUST BE
*  VALID NAMES OF MEMBERS OF THE LIBRARY DEFINED BY //SPECRTN DD.
*
*  EXAMPLES.   PARM=20K
*              PARM='20K,TREXIT,PREXIT'
*              PARM='100K,INSPECT'
*              PARM=',INSPECT'
*
*  ADDITIONAL PARAMETERS.
*
*  IF YOU HAVE WRITTEN A TRACE EXIT WHICH WILL POST THE INTERNAL ECB
*  ('HSECB') WHEN IT WANTS TO STOP TRACING, AND YOU DO NOT WISH TO HAVE
*  TO INSTRUCT THE OPERATOR ABOUT REPLYING TO THE NORMAL WTOR, YOU MAY
*  CODE ',NOWTOR' AT THE END OF THE STANDARD PARM LIST.  IF YOU DO THIS
*  AND YOU PROVIDE A TRACE EXIT THE WTOR WILL BE BYPASSED.  EXAMPLE..
*
*              PARM=',TREXIT,,NOWTOR'
*
*  IF YOU WISH TO PASS A PARAMETER TO AN EXIT ROUTINE YOU CODE IT AFTER
*  THE 'NOWTOR' POSITIONAL PARAMETER.  IF A COMMA FOLLOWS THE 'NOWTOR'
*  POSITION ANYTHING FOLLOWING THE COMMA IS MADE AVAILABLE TO BOTH EXIT
*  ROUTINES BY STORING THE ADDRESS OF THE NEXT BYTE AFTER THE COMMA IN
*  THE FIELDS 'USERPARM' AND 'USERP'.  THE RESIDUAL PARM LIST COUNT IS
*  STORED IN THE HIGH ORDER BYTE OF THESE TWO FULLWORD FIELDS.
*
*  EXAMPLES    PARM='100K,TR,PR,NOWTOR,10'
*              PARM=',TREXIT,,,TUESDAY'
*  IN THE FIRST EXAMPLE USERPARM POINTS TO '10' WITH A COUNT OF 2.
*  IN THE SECOND EXAMPLE USERPARM POINTS TO 'TUESDAY' WITH A COUNT OF 7
         EJECT
*                            ASSEMBLY REQUIREMENTS
*
*  **MOST IMPORTANT**
*
*  THIS PROGRAM CONTAINS SYSGEN DEPENDENT CONSTANTS WHICH MUST BE
*  SUPPLIED AS EQU STATEMENTS AT ASSEMBLY TIME.  THE PROGRAM MUST BE
*  RE-ASSEMBLED, WITH CORRECTED CONSTANTS, WHENEVER THE NUCLEUS IS
*  RE-LINK EDITED.
*
*  TO OBTAIN THE CONSTANTS RUN THE IMBMDMAP SERVICE AID PROGRAM AGAINST
*  THE NUCLEUS YOU INTEND TO WORK WITH, USING PARM=LINKPACK.  FROM THE
*  ALPHABETICAL LIST OF RLD ENTRIES AND THE NUMERICAL LIST OF ESD
*  ENTRIES FIND THOSE WITH THE SAME NAMES AS THE EQU STATEMENTS (SEE
*  NOTES FOR MFT RE 'PSWNDX' AND 'TRACE') AND GIVE THE CORRESPONDING
*  ENTRY IN THE REL ADR COLUMN OF THE PRINT-OUT AS THE HEX VALUE FOR
*  THE EQUATE.
*
*
*  FOR MVT SUPPLY VALUES FOR THE FOLLOWING EQUATES.
*        FROM THE SECTION 'ALPHABETICALLY BY RLD ITEM'
*
TREX     EQU   0
TRIO     EQU   0
TRPI     EQU   0
TRACE    EQU   0                       SIO
TRSVC    EQU   0
TRDISP   EQU   0
*
*        FROM THE SECTION 'NUMERICALLY BY ESD ITEM'
*              (SUB-SECTION FOR IEAQFX00 CSECT)
*
IEASCSAV EQU   0
IEAPKSAV EQU   0
*
*
*  FOR MFT SUPPLY VALUES FOR THE FOLLOWING EQUATES.
*        FROM THE SECTION 'ALPHABETICALLY BY RLD ITEM'
*
PSWNDXA  EQU   0                       SVC
PSWNDXB  EQU   0                       DSP
PSWNDX2  EQU   0                       I/O
TRACEMFT EQU   0                       SIO
*
*        FROM THE SECTION 'NUMERICALLY BY ESD ITEM'
*              (SUB-SECTION FOR IEAAIH00 CSECT)
*
IORGSAV  EQU   0
SVCSAV   EQU   0
*
*  NOTE  1  THE PRINT-OUT FROM IMBMDMAP FOR MFT WILL SHOW TWO VALUES
*           'PSWNDX' - YOU MUST GIVE THE LOWER OF THE TWO VALUES
*           (PROBABLY X'220') FOR PSWNDXA, AND THE HIGHER VALUE FOR
*           PSWNDXB.
*        2  THE VALUE FOR THE 'TRACEMFT' EQUATE IS FOUND FROM THE
*           IMBMDMAP ENTRY FOR 'TRACE' (THIS IS TO AVOID CONFLICT WITH
*           THE MVT EQUATES).
*
*
*
*  YOU MUST ALSO SUPPLY ONE FURTHER EQUATE VALUE FOR THE BASE REGISTER
*  USED IN THE TRACE ROUTINE CODE - (MFT ENTERS TRACE BY 'BALR 11,9'
*  WHILE MVT USES 'BALR 11,10') - CODE 10 FOR MVT OR 9 FOR MFT IN THE
*  FOLLOWING 'BALREG' EQUATE....
*
BALREG   EQU   0
         SPACE 3
*  BAD EQUATES.
*
*  ERRORS IN THE CHECKS IMPOSED ON THE EQUATE STATEMENTS YOU SUPPLY
*  LEAD TO AN ABEND USER 4 WITH A MESSAGE (ROUTECODE 2,11) THAT ENDS
*  WITH A NUMBER - TO FIND WHICH CHECK FAILED REFER TO THE ASSEMBLY
*  LISTING IN WHICH THERE IS A STATEMENT 'MVI BSWTO+61,C'N'' BEFORE
*  EACH BRANCH TO BADSET. THE NUMBER 'N' WILL TELL YOU WHICH BRANCH
*  WAS TAKEN
*
*  NOTE  1  A 'BAD EQUATES' CODE OF 7 (FOR MVT) OR 9 (FOR MFT) MAY MEAN
*           THAT TSGTRACE IS ALREADY RUNNING IN THE SYSTEM - YOU
*           CAN ONLY RUN ONE TRACE AT A TIME.
*        2  YOU CAN CORRECT ALL EQUATES (EXCEPT BALREG) WITHOUT
*           RE-ASSEMBLY BY SUPERZAP TO THE ADCONS STARTING WITH 'ADIO'
         SPACE 3
*  SMF
*
*  IF SMF IS NOT IN YOUR SYSTEM SUPPLY AN ABSOLUTE VALUE FOR 'MACH'
*  AND REMOVE CODE WHICH REFERS TO 'MACH' - THIS VERSION TAKES THE
*  MACHINE ID FROM THE SMCA FOR THE TITLE OF THE LISTING.
         EJECT
*                            SPECIAL NOTES
*
*
*
*  NOTES ON REGISTERS SAVED IN TRACE.
*
*        1. SREGS ALWAYS CONTAINS REGISTERS OF CURRENT/NEW ACTIVE TASK
*           IN SEQUENCE 0 - 15.  (EXCEPT FOR SIO - SEE BELOW)
*        2. AS WE CANNOT EASILY TELL WHETHER SIO WAS ENTERED FROM EXCP
*           OR I/O WE DO NOT KNOW WHETHER TO TAKE THE REGISTERS FROM
*           THE TCB OR SVC SAVE AREA.  REGISTERS ARE THEREFORE SHOWN AS
*           ALL ZERO, AND WILL BE THE SAME AS THE PRECEDING I/O OR SVC
*           (EXCP) ENTRY.
*        3. ORIGIN OF REGISTERS FOR MVT.
*              I/O  0,15 FROM TCB+48   (VIA CVT D/W)
*              SVC  0,15 FROM IEASCSAV (VIA SVC NEW PSW)
*              DSP  0,15 FROM TCB + 48 (BASED ON REG 14)
*              SIO  N/A
*              EXT  0,15 FROM TCB + 48 (VIA CVT D/W)
*              PCHK 0,15 FROM IEAPKSAV (VIA PROG NEW PSW)
*        4. ORIGIN OF REGISTERS FOR MFT.
*              I/O  2,9 FROM IORGSAV   (VIA I/O NEW PSW)
*                   10,1 FROM TCB + 48 (VIA CVT D/W)
*              SVC  0,15 FROM SVCSAV   (VIA SVC NEW PSW)
*              DSP  10,9 FROM TCB + 48 (VIA REG 0)
*              SIO  N/A
*              EXT  N/A
*              PCHK N/A
*        5. WHEN MVT IS IN A WAIT STATE IT OPERATES UNDER A PSEUDO-TCB
*           FOR WHICH ALL REGISTERS WILL APPEAR AS ZERO IN THE TRACE.
         SPACE 3
*  USE OF THE 'REPEAT' FACILITY.
*
*  SITUATIONS MAY ARISE IN WHICH YOU WISH TO PRINT OUT THE CURRENT
*  CONTENTS OF THE TRACE TABLE AND THEN TO CONTINUE TRACING, E.G. IF
*  YOU ARE USING THE TRACE TABLE TO ACCUMULATE STATISTICS AND IT
*  BECOMES FULL YOU MAY WANT TO DUMP WHAT YOU HAVE COLLECTED AND START
*  AGAIN WITHOUT ASKING THE OPERATOR TO RE-SUBMIT THE JOB.
*
*  TO 'REPEAT' (I.E. TO RE-ENTER THE TRACE AFTER PRINTING) YOU MUST
*  SET THE 'REPEAT' SWITCH TO X'FF' WHEN YOU POST THE ECB FROM YOUR
*  TRACE EXIT.  IT IS RESET TO X'00' ON EACH RE-ENTRY TO THE TRACING
*  ROUTINE.
         SPACE 3
*  COMMUNICATION BETWEEN EXIT ROUTINES.
*
*  THE PARAMETER LIST FOR EACH EXIT INCLUDES THE ADDRESS OF THE 'OTHER'
*  EXIT (OR X'FFFFFFFF' IF NO OTHER EXIT IS SPECIFIED).
*
*  TO PASS INFORMATION FROM ONE EXIT TO THE OTHER YOU MAKE THE SENDING
*  EXIT STORE THE INFORMATION (OR THE ADDRESS OF THE INFORMATION) AT
*  A FIXED OFFSET FROM THE START OF THE RECEIVING EXIT, AND IT IS UP
*  TO YOU TO CO-ORDINATE THE CODE OF THE TWO EXITS.
*
*  IF YOUR EXEC CARD PARM DID NOT CALL FOR THE 'OTHER' EXIT THE ADDRESS
*  GIVEN FOR IT WILL BE X'FFFFFFFF', AND YOU MUST TEST FOR THIS BEFORE
*  ATTEMPTING TO STORE ANY INFORMATION AT THE ADDRESS GIVEN.
         SPACE 3
*  POSTING THE ECB TO STOP TRACING.
*
*  THE TRACE EXIT IS GIVEN THE ADDRESS OF THE ECB TO BE POSTED AND THE
*  ADDRESS OF THE TCB FOR THE TRACE JOB.
*
*  THE RULES FOR BRANCH ENTRY TO THE POST ROUTINE ARE.....
*        1  ADDRESS OF THE BRANCH ENTRY POINT IS OBTAINED FROM CVT+152
*        2  REGS 0 - 8 REMAIN TRANSPARENT THROUGHT POST, BUT YOU MUST
*           SAVE AND RESTORE REGS 9 - 15.
*        3  ON ENTRY TO POST THE REGISTERS MUST CONTAIN....
*
*              REG  9 - WORK REG FOR POST
*              REG 10 - CODE TO BE POSTED (IN HIGH ORDER BYTE OF REG)
*              REG 11 - ADDRESS OF ECB TO BE POSTED.
*              REG 12 - ADDRESS OF TCB FOR ECB TO BE POSTED.
*              REG 13 - WORK REG FOR POST.
*              REG 14 - RETURN ADDRESS TO USER.
*              REG 15 - ENTRY POINT TO POST.
*
*  SEE EXAMPLE OF TRACE EXIT BELOW
         EJECT
*                            CONTENTS OF TRACE TABLE ENTRY.
*
*   +0   TYPE OF ENTRY       ONE OF 6 FOUR CHARACTER IDENTIFIERS....
*                                      I/O, SVC, DSP, SIO, EXT, PCHK
*                            THE LAST TWO (EXTERNAL INTERRUPT AND PROG
*                            CHECK) ARE AVAILABLE IN MVT ONLY.
*   +4   JOBNAME             FROM TIOT OF TASK CURRENTLY IN CONTROL.
*  +12   STEPNAME            AS JOBNAME
*  +20   RB NAME             FROM NAME FIELD OF TOP RB FOR CURRENT TASK
*  +28   TCB ADDRESS         OF TASK CURRENTLY IN CONTROL
*  +32   PSW                 AS APPROPRIATE TO TYPE OF INTERRUPT
*                            FOR DSP ENTRIES PSW IS FROM RB TO BE
*                            DESPATCHED.
*                            FOR SIO THE PSW FIELD MUST BE IGNORED.
*  +40   CSW                 ONLY GIVEN FOR I/O AND SIO
*                            FOR SIO THE CSW IS ONLY RELEVANT IF THE
*                            SIO CC = X'41' (CSW STORED)
*  +48   LAST CCW            ONLY GIVEN FOR I/O INTERRUPTS
*                            FOR SIO THE LAST CCW IS REPLACED BY THE
*                            ADDRESS OF DEVICE STARTED AND THE SIO CC.
*  +56   TIME OF DAY         IN TIMER UNITS (CONVERSION TO HOURS, MINS,
*                            SECONDS, AND HUNDREDTHS OF SECONDS IS
*                            COMPLETED BY THE PRINT ROUTINE).
*  +60   REGS 0 - 15         FOR TASK IN CONTROL AT TIME OF INTERRUPT.
*                            FOR SIO ALL REGISTERS ARE SHOWN AS ZERO
*                            AND MUST BE TAKEN FROM THE PRECEDING EXCP
*                            OR I/O INTERRUPT (WHICHEVER CAME LAST).
* +124   SPARE               A 4 BYTE FIELD AVAILABLE TO THE USER.
*
         EJECT
*                            RULES FOR WRITING EXIT ROUTINES.
*
*  TRACE EXIT.
*        1 NORMAL CONVENTIONS FOR REGISTER SAVING AND ESTABLISHING
*        ADDRESSABILITY DO NOT APPLY.  YOUR CODE IS ENTERED BY BALR 5,3
*        AND THE REGISTERS CONTAIN....
*        REG  0  BELONGS TO O.S.  DO NOT USE WITHOUT SAVE AND RESTORE.
*        REG  1  NEED NOT BE PRESERVED.  HAS ADDRESS OF PARM LIST
*                CONTAINING...
*        +0    A) ADDRESS OF ENTRY POINT TO FORCE AN INTERRUPT DUMP.
*        +4    B) ADDRESS OF ECB TO BE POSTED TO STOP TRACE (SEE CODED
*                 EXAMPLE BELOW)
*        +8    C) ADDRESS OF TCB FOR TRACE PROGRAM.  NEEDED FOR POST.
*              D) THREE FULLWORDS FORMING THE 'BOUNDARY BOX' FOR THE
*                 TRACE TABLE....
*        +12                 1) ADDRESS OF CURRENT ENTRY.
*        +16                 2) ADDRESS OF LOW BOUNDARY
*        +20                 3) ADDRESS OF UPPER BOUNDARY
*        +24   E) ADDRESS OF THE 'REPEAT' SWITCH, WHICH IS A 1 BYTE
*                 FIELD SET TO X'00' WHEN THE TRACE ROUTINE IS
*                 ENTERED (OR RE-ENTERED).  IF YOU SET IT TO X'FF'
*                 WHEN YOU POST THE ECB TP TERMINATE TRACING THEN THE
*                 TRACE ROUTINE WILL BE RE-ENTERED AFTER THE PREVIOUS
*                 CONTENTS OF THE TRACE TABLE HAVE BEEN PRINTED.
*        +28   F) ADDRESS OF PRINT EXIT (OR X'FFFFFFFF')
*        +32   G) A SAVE AREA OF EIGHT FULL WORDS CONTAINING REGS 1 - 8
*                 AS THEY WERE WHEN THE TRACE ROUTINE WAS ENTERED FROM
*                 O.S.
*        +64   H) A FULLWORD CONTAINING THE ADDRESS OF EXIT ROUTINE
*                 PARAMETERS WITH THE CHARACTER COUNT IN THE HIGH BYTE
*                 (ZERO IF NO USER PARAMETERS)
*        REG  2  NEED NOT BE PRESERVED.  HAS HIGHEST VALID CORE ADDRESS
*        REG  3  BASE REG FOR YOUR ROUTINE. NEED NOT BE PRESERVED.
*        REG  4  TCB ADDRESS OF CURRENT TASK (OR TASK TO BE DESPATCHED)
*                 NEED NOT BE PRESERVED.
*        REG  5  RETURN ADDRESS TO MAIN TRACE.  MUST BE USED TO RETURN
*                 FROM YOUR EXIT.
*        REG  6  MUST BE PRESERVED.  BASE REG FOR MAIN TRACE.
*        REG  7  HAS UCB ADDRESS (OR ZERO) AT I/O INTERRUPTS.
*                 HAS RQE ADDRESS AT SIO ENTRIES.
*                 OTHERWISE AVAILABLE FOR WORK. NEED NOT BE PRESERVED.
*        REG  8  HAS ADDRESS OF CURRENT ENTRY (JUST BUILT BY STANDARD
*                 ROUTINE) IN TRACE TABLE.  USE AS BASE FOR STORE DSECT
*                 MUST BE PRESERVED.
*        REG  9 - 15  BELONG TO O.S. AND MUST BE PRESERVED.
*
*        2 AS THE WHOLE TRACE IS DISABLED AND IS AN EXTENSION OF O.S.
*        YOU MUST KEEP YOUR CODE AS SHORT AS POSSIBLE AND MUST TAKE
*        EVERY PRECAUTION AGAINST PROGRAM CHECKS CAUSED BY UNEXPECTED
*        DATA.  FOR EXAMPLE (ESPECIALLY IN MVT WHERE AN I/O INTERRUPT
*        MAY OCCUR WHILE A TCB IS BEING CONSTRUCTED) YOU CANNOT ASSUME
*        THAT A TCB RB POINTER WILL BE EITHER A VALID ADDRESS OR ZERO.
*        YOU SHOULD VALIDATE ALL DATA BEFORE USING IT (E.G. COMPARE
*        WITH MACHINE SIZE IN REG 2, LOAD AND TEST FOR ZERO OR MINUS,
*        AND TEST UNDER MASK FOR THE TWO LOW ORDER BITS BEFORE USING
*        WHAT YOU ASSUME TO BE THE ADDRESS OF A FULLWORD ALIGNED FIELD
*
*        3 YOU CANNOT USE ANY SVCS.
*
*        4 TO ELIMINATE AN ENTRY RECORDED BY THE STANDARD ROUTINE (E.G.
*        TO CREATE A SELECTIVE TRACE OF ENTRIES NOMINATED BY YOUR EXIT)
*        SUBTRACT 128 DECIMAL FROM REG 8 BEFORE RETURNING.
*
*
*        5 TO CALCULATE ELAPSED TIME USE THE 'TIME OF DAY' FIELD IN
*        EACH TRACE TABLE ENTRY IN CONJUNCTION WITH THE FOLLOWING
*        CONSTANTS...
*                            1 SECOND = X'00009600'
*                           10 SECONDS= X'0005DC00'
*                            1 MINUTE = X'00232600'
*        YOU MUST USE LOGICAL ADD AND COMPARE INSTRUCTIONS WITH TIME
*        VALUES.
*
*
*
*  EXAMPLE OF A TRACE EXIT (TO POST TRACE COMPLETE AS SOON AS A PROGRAM
*  CHECK OCCURS)
*
* TREXIT CSECT
*        USING *,3
*        USING STORE,8
*        CLC   STYPE,CHECK
*        BCR   7,5           RETURN IF NO PROGRAM CHECK.
*        STM   0,15,XSAVE
*        L     12,8(1)       ADD OF TRACE TCB
*        LA    10,127
*        SLL   10,28         POST CODE OF '7F'
*        L     11,4(1)       ADD OF ECB TO BE POSTED.
*        L     15,16
*        L     15,152(15)    ENTRY FOR POST ROUTINE
*        ST    3,SAVE3       PRESERVE OUR BASE (NOT NECESSARY IN THIS
*                            CASE AS POST USES REG 9 - 15 ONLY)
*        CNOP  2,4
*        BALR  14,15         GO TO POST
*        L     3,8(14)
*        B     AFTSAVE
* SAVE3  DC    F'0'
* AFTSAVE LM   0,15,XSAVE
*        BR    5             RETURN TO MAIN TRACE
* CHECK  DC    C'PCHK'
* XSAVE  DC    16F'0'
* STORE  DSECT
*  (COPY THIS FROM MAIN PROGRAM)
*        END
         EJECT
*  PRINT EXIT.
*
*
*        1 YOUR CODE IS ENTERED BY BALR 5,6 AND REGISTER CONTENTS ARE
*        AS LISTED BELOW.  THE SAVE AREA ADDRESSED BY REG 13 MAY BE
*        USED (OR YOU MAY SET UP YOUR OWN SAVE AREA ACCORDING TO NORMAL
*        CONVENTIONS).
*
*        REG  0  FREE FOR WORK.
*        REG  1  POINTS TO A PARM LIST CONTAINING THE FOLLOWING
*                ADDRESSES....
*                            +0  PRINT DCB
*                            +4  LINE 1 (AS SET UP BY STANDARD ROUTINE)
*                            +8  LINE 2
*                            +12 LINE 3
*                            +16 NON-PRINT SWITCH FOR LINE 1
*                            +20 NON-PRINT SWITCH FOR LINE 2
*                            +24 NON-PRINT SWITCH FOR LINE 3
*                            +28 INSTRUCTION TO BE EXECUTED TO
*                                SUBTRACT ONE FROM LINE COUNT FOR
*                                CORRECT PAGING BY STANDARD ROUTINE.
*                            +32 HEADING LINE.
*                            +36 ADDRESS OF TRACE EXIT (OR X'FFFFFFFF')
*                            +40 ADDRESS OF REPEAT SWITCH
*                            +44 ADDRESS OF EXIT ROUTINE PARAMETERS
*                                WITH THE CHARACTER COUNT IN THE HIGH
*                                BYTE (ZERO IF NO USER PARMS)
*
*        REG  2 - 4 FREE FOR WORK.
*        REG  5  RETURN REG FROM EXIT ROUTINE.
*        REG  6  BASE FOR YOUR EXIT CODE.
*        REG  7 - 9 FREE FOR WORK.
*        REG 10  BASE FOR 'STORE' DSECT - I.E. CURRENT ENTRY IN TRACE.
*        REG 11 - 12 BASE REGS FOR MAIN ROUTINE.
*        REG 13  ADDRESS OF STANDARD SAVE AREA.
*        REG 14 - 15 FREE FOR WORK.
*
*        2 YOUR EXIT IS AN EXTENSION OF A NORMAL JOB STEP PROGRAM AND
*        YOU MAY CODE ANY SVCS OR MACROS.
*
*        3 EXAMPLE OF HOW TO SUPPLY YOUR OWN FIRST LINE FOR EACH ENTRY
*        (USING DATA PLACED IN THE TRACE BY YOUR TRACE EXIT).
*              A)  GET ADDRESS OF LINE 1 FROM PARM LIST +4.  THIS
*                  POINTS TO THE MACHINE CONTROL CHARACTER AT THE
*                  START OF THE LINE.
*              B)  USE REG 10 AS A BASE FOR THE CURRENT TRACE ENTRY
*                  AND FORMAT YOUR DATA INTO THE LINE.
*              C)  PRINT THE LINE USING QSAM PUT MOVE  E.G...
*                            L     2,0(1)        DCB ADDRESS
*                            L     3,4(1)        LINE 1
*                            PUT   (2),(3)
*              D)  SET SWITCH TO CAUSE STANDARD ROUTINE NOT TO PRINT
*                  LINE 1.  ALSO REDUCE LINE COUNT BY ONE.  E.G....
*                            L     2,16(1)       LINE 1 NON-PRINT SW.
*                            OI    0(2),240
*                            L     3,28(1)
*                            EX    0,0(3)        SP  LCNT,ONE
*              E)  YOU MAY OPTIONALLY ALTER THE CONTENTS OF THE
*                  HEADING LINE FOR EACH PAGE BY MOVING YOUR HEADING
*                  TO THE ADDRESS GIVEN FOR THE STANDARD HEADING BY
*                  PARM LIST +32 (SEE LABEL 'HDNG' IN MAIN PROGRAM)
*
*
         EJECT
         BEGIN BASE=(12,11)
         L     3,16
         L     4,0(3)
         L     4,4(4)
         L     5,12(4)
         MVC   OURJOB,0(5)
         LA    4,BALREG
         CLI   116(3),32
         BL    SETRJOB
*
*  SET UP FOR AN MFT SYSTEM.
         OI    MFTA+1,240
         OI    MFTC+1,240
         OI    MFTE+1,240
         OI    MFTG+1,240
         OI    MFTH+1,240
         OI    MFTK+1,240
         MVC   ADIO(16),MADIO
         LA    5,9
         CR    4,5
         BNE   BADSET
         B     SETRJOBA
SETRJOB  DS    0H
         LA    5,10
         CR    4,5
         MVI   BSWTO+61,C'2'
         BNE   BADSET
SETRJOBA DS    0H
          L    1,0(1)
          LH   2,0(1)
          LTR  2,2
          BZ   NOPARM
*
*  MOVE WHOLE PARM FIELD TO AVOID 'FINAL CHARACTER' PROBLEMS
*
         LA    4,1(2)
         LR    5,1
         EX    4,MVPARM
         LA    1,PARMFLD
          LA   3,2(1)
          SR   4,4
         CLI   0(3),C','
         BE    TPARM
CHKK      CLI  0(3),C'K'
          BE   KFND
          LA   4,1(4)
          LA   3,1(3)
          BCT  2,CHKK
INVPARM   WTO  'INVALID PARM FOR TSGTRACE',ROUTCDE=(2,11)
          GOBACK
KFND     S     4,FONE
          BM   INVPARM
          EX   4,MVZK
          EX   4,XCK
          BNZ  INVPARM
          EX   4,PACKK
          CVB  5,DW
          SLL  5,10
          LR   0,5
          LR   6,1
          GETMAIN  R,LV=(0)
          ST   1,ATT
          ST   5,LTT
         LA    3,1(3)
         S     2,FONE
         BZ    ENDPARM
TPARM    CLI   0(3),C','
         BNE   INVPARM
         LA    3,1(3)
         SR    4,4
         BCTR  4,0
         LR    6,3
         S     2,FONE
         CLI   0(3),C','
         BE    PPARM
CHKT     CLI   0(3),C','
         BE    MVTP
         LA    3,1(3)
         LA    4,1(4)
         C     4,SEVEN
         BH    INVPARM
         BCT   2,CHKT
MVTP     EX    4,MVTPARM
         LTR   2,2
         BZ    ENDPARM
PPARM    LA    3,1(3)
         LR    6,3
         SR    4,4
         BCTR  4,0
         S     2,FONE
         CLI   0(3),C','
         BE    NPARM
CHKP     CLI   0(3),C','
         BE    MVPP
         LA    3,1(3)
         LA    4,1(4)
         C     4,SEVEN
         BH    INVPARM
         BCT   2,CHKP
MVPP     EX    4,MVPPARM
         LTR   2,2
         BZ    ENDPARM
NPARM    DS    0H
         S     2,FONE
         LA    3,1(3)
         CLI   0(3),C','
         BE    EXITPARM
         CLC   0(6,3),NOWTOR
         BNE   INVPARM
         CLI   TEPLOC,64
         BE    INVPARM       'NOWTOR' WITHOUT TRACE EXIT IS ERROR
         OI    WTOR+1,240
         LA    3,6(3)
         S     2,SEVEN
         LA    2,1(2)
EXITPARM LTR   2,2
         BZ    ENDPARM
         CLI   0(3),C','
         BNE   INVPARM
         LA    3,1(3)
         S     2,FONE
         ST    3,USERPARM
         STC   2,USERPARM
         MVC   USERP,USERPARM
ENDPARM  CLI   TEPLOC,64
         BE    TRYPEP
         OPEN  (DCB)
         TM    DCB+48,16
         BZ    NOSPEC
         LOAD  EPLOC=TEPLOC,DCB=DCB
         ST    0,USEREX
         ST    0,ADTREX
TRYPEP   CLI   PEPLOC,64
         BE    SETBBX
         TM    DCB+48,16
         BO    LOADPR
         OPEN  (DCB)
         TM    DCB+48,16
         BO    LOADPR
NOSPEC   MVC   NSWTO+8(8),OURJOB
NSWTO    WTO   '12345678 JOB - NO SPECRTN DD',ROUTCDE=(2,11)
         GOBACK
LOADPR   LOAD  EPLOC=PEPLOC,DCB=DCB
         ST    0,USERPEX
         ST    0,ADPREX
         B     SETBBX
MVPARM   MVC   PARMFLD(1),0(5)
MVTPARM  MVC   TEPLOC(1),0(6)
MVPPARM  MVC   PEPLOC(1),0(6)
PARMFLD  DC    CL24' '
OURJOB   DC    CL8' '
TEPLOC   DC    CL8' '
PEPLOC   DC    CL8' '
NOWTOR   DC    C'NOWTOR'
SETBBX   NC    ATT,ATT
         BNZ   SETBBXA
NOPARM    L    0,LTT
          GETMAIN  R,LV=(0)
          ST   1,ATT
SETBBXA  L     1,ATT
         ST    1,BBXC
          L    5,LTT
          MVC  0(4,1),STOP
          LA   7,0(1,5)
         ST    7,BBXH
          S    7,LENT
          MVC  0(4,7),STOP
          L    1,16
          L    1,0(1)
          L    1,4(1)
          ST   1,TCBAD
         L     1,16
         L     2,36(1)
         ST    2,ILK1
         L     2,40(1)
         ST    2,ILK2
         L     1,16
         MVC   MSIZE,164(1)
         L     2,88(1)
         ST    2,PSCAD
         OPEN  (PRINT,OUTPUT)
SETREGS  DS    0H
         MVI   BSWTO+61,C'3'
MFTA     BC    0,MFTX
         L     1,ADSCSAV
         LTR   1,1
         BZ    BADSET
         TM    ADSCSAV+3,3
         BNZ   BADSET        NOT FULL-WORD ALIGNED
         STH   1,SVCX+4
         MVI   BSWTO+61,C'4'
         L     1,ADPKSAV
         LTR   1,1
         BZ    BADSET
         TM    ADPKSAV+3,3
         BNZ   BADSET        NOT FULL-WORD ALIGNED.
         STH   1,PCHKX+4
         LA    1,ADIO
         LA    2,6
MVTBA    L     3,0(1)
         L     3,0(3)
         CLC   MVTCHKA,0(3)
         BNE   MVTBC
MVTBB    CLC   MVTCHKB,4(3)
         MVI   BSWTO+61,C'5'
         BNE   BADSET
         LA    1,4(1)
         BCT   2,MVTBA
         B     MFTBB
MFTX     L     1,ADSVCSAV
         LTR   1,1
         BZ    BADSET
         TM    ADSVCSAV+3,3
         BNZ   BADSET        NOT FULL-WORD ALIGNED.
         STH   1,SVCX+4
         MVI   BSWTO+61,C'6'
         L     1,ADIORGSV
         LTR   1,1
         BZ    BADSET
         TM    ADIORGSV+3,3
         BNZ   BADSET        NOT FULL-WORD ALIGNED
         STH   1,IOX+4
         B     MFTB
MVTBC    LA    4,3
         CR    2,4
         MVI   BSWTO+61,C'7'
         BNE   BADSET
         CLC   MVTSIOCK,0(3)
         BE    MVTBB
         MVI   BSWTO+61,C'8'
         B     BADSET
MFTB     LA    1,ADIO
         LA    2,4
MFTBA    L     3,0(1)
         L     3,0(3)
         CLC   MFTCHK,0(3)
         MVI   BSWTO+61,C'9'
         BNE   BADSET
         LA    1,4(1)
         BCT   2,MFTBA
MFTBB    DS    0H
         L     3,92          COREDUMP ENTRY POINT
         LA    4,0(3)
         S     4,FOUR
         ST    4,FORCENT
REENTER  DS    0H
         SPMODE  SUPV,0
*
*  FIND CSCB FOR THIS JOB AND MAKE IT UNCANCELLABLE
*
         SSM   *+1
         L     1,16
         L     1,X'94'(1)
         LTR   1,1
         BZ    ENDCSCBS
CSCBLOOP L     1,0(1)
         LTR   1,1
         BZ    ENDCSCBS
         CLC   OURJOB,8(1)
         BNE   CSCBLOOP
         NI    7(1),X'F7'
         ST    1,CSCBAD
ENDCSCBS DS    0H
         SSM   ENABLE
         LA    1,IO
         L     2,ADIO
         ST    2,IOAD
         MVC   RESETIO,0(2)
         ST    1,0(2)
         LA    1,SVC
         L     2,ADSVC
         ST    2,SVCAD
         MVC   RESETSVC,0(2)
         ST    1,0(2)
         LA    1,DSP
         L     2,ADDISP
         ST    2,DISPAD
         MVC   RESETDSP,0(2)
         ST    1,0(2)
MFTC     BC    0,MFTD
         LA    1,EXT
         L     2,ADEXT
         ST    2,EXTAD
         MVC   RESETEXT,0(2)
         ST    1,0(2)
         LA    1,PCHK
         L     2,ADPCHK
         ST    2,PCKAD
         MVC   RESETPCK,0(2)
         ST    1,0(2)
MFTD     DS    0H
         LA    1,SIO
         L     2,ADSIO
         ST    2,SIOAD
         MVC   RESETSIO,0(2)
         ST    1,0(2)
         SPMODE  PROB,*
         CLI   REPEAT,0
         BE    WTOR
         MVI   REPEAT,0
         B     WAITR
WTOR     BC    0,WAITR
         MVC   REPLY,SPACES
         MVI   CONSECB,0
         MVC   WMSG+24(8),OURJOB
WMSG     WTOR  'TO STOP 12345678 REPLY ''ENDTRA'' - TSGTRACE CAN ONLY BE
               E CANCELLED BY REPLY TO THIS MESSAGE',REPLY,6,CONSECB,  *
               ROUTCDE=2
WAITR    DS    0H
          WAIT ECBLIST=ECBL
          TM   HSECB,64
          BO   DISCON
         OC    REPLY,SPACES
         CLC   REPLY,ENDJRH
         BE    DISCON
         MVC   INCREP+17(8),OURJOB
INCREP   WTO   'REPLY TO 12345678 MUST BE ''ENDTRA'' - REPLY IGNORED', *
               ROUTCDE=2
         B     WTOR
BADSET   MVC   BSWTO+8(8),OURJOB
BSWTO    WTO   '12345678 JOB - BAD EQUATES, CHECK AND REASSEMBLE - (01)*
                ',ROUTCDE=(2,11)
         ABEND 4,DUMP
MFTCHK   DC    X'95000014077B'
MVTCHKA  DC    X'50B0'
MVTCHKB  DC    X'45A0'
MVTSIOCK DC    X'90AB'
STM29    DC    X'9029'
STM0F    DC    X'900F'
DISCON   SPMODE  PROB,0
         L     2,IOAD
         MVC   0(4,2),RESETIO
         L     2,SVCAD
         MVC   0(4,2),RESETSVC
         L     2,DISPAD
         MVC   0(4,2),RESETDSP
MFTE     BC    0,MFTF
         L     2,EXTAD
         MVC   0(4,2),RESETEXT
         L     2,PCKAD
         MVC   0(4,2),RESETPCK
MFTF     DS    0H
         L     2,SIOAD
         MVC   0(4,2),RESETSIO
         L     1,CSCBAD
         LTR   1,1
         BZ    *+8
         OI    7(1),8
         SPMODE  PROB,*
         L     10,BBXC
         S     10,LENT
         C     10,ATT
         BNL   *+8
         A     10,LTT
         SPACE
*  IF SMF IS NOT IN YOUR SYSTEM REMOVE THE NEXT 3 INSTRUCTIONS.
         SPACE
         L     1,16
         L     1,196(1)
         MVC   MACH,16(1)
         SPACE
         TIME
         STM   0,1,DW
         MVC   TIMEND,TMASK
         ED    TIMEND,DW
         MVC   DATEND,DMASK
         ED    DATEND,DW+5
NEXTL    EQU   *
         SP    LCNT,ONE
         BP    PENT
         PUT   PRINT,NP
         ZAP   LCNT,MAXCNT
         PUT   PRINT,TITLE
         PUT   PRINT,HDNG
         USING STORE,10
PENT     MVC   LTYPE,STYPE
         TR    SJOB(24),PRTAB
         MVC   LJOB,SJOB
         MVC   LSTEP,SSTEP
         MVC   LRBN,SRBN
         LA    9,28(10)
         HEXPRINT  (9),HEX,28
         MVC   LTCB,HEX+2
         MVC   LPSW(52),LRBN+9
         CLC   LTYPE,TYPSIO
         BE    *+10
         MVC   LPSW,HEX+8
         BE    *+14
         CLC   LTYPE,TYPIO
         BNE   *+16
         MVC   LCSW,HEX+24             ONLY IO + SIO
         MVC   LLCCW,HEX+40
         CLC   LTYPE,TYPSIO
         BNE   *+22
         MVC   LLCCW+14(2),LLCCW
         MVC   LLCCW(5),DEVIS
         MVC   LLCCW+8(6),CCIS
         L     9,STIME
         SRL   9,1
         M     8,CON1
         D     8,CON2
         LA    1,32
         L     7,TDIV
TDVD     SR    8,8
         DR    8,7
         LR    4,8
         SRDL  4,4
         SH    1,*-2
         LTR   9,9
         BZ    TDEND
         CH    1,TH24
         BNL   TDVD
         X     7,TD12
         B     TDVD
TDEND    SRL   5,0(1)
         SR    4,4
         SLDL  4,4
         STM   4,5,DW
         OI    DW+7,15
         MVC   LTIME,TIMASK
         ED    LTIME,DW+3
         LA    9,60(10)
         HEXPRINT  (9),HEX,64
         MVC   LR1,HEX
         MVC   LR2,HEX+8
         MVC   LR3,HEX+16
         MVC   LR4,HEX+24
         MVC   LR5,HEX+32
         MVC   LR6,HEX+40
         MVC   LR7,HEX+48
         MVC   LR8,HEX+56
         MVC   LR9,HEX+64
         MVC   LRA,HEX+72
         MVC   LRB,HEX+80
         MVC   LRC,HEX+88
         MVC   LRD,HEX+96
         MVC   LRE,HEX+104
         MVC   LRF,HEX+112
         MVC   LRG,HEX+120
         LA    1,PRLIST
         L     6,USERPEX
         BALR  5,6
NORMPRNT BC    0,PRLA
         SP    LCNT,ONE
         PUT   PRINT,LINE
PRLA     BC    0,PRLB
         SP    LCNT,ONE
         PUT   PRINT,LREGA
PRLB     BC    0,PRLC
SPLO     SP    LCNT,ONE
         PUT   PRINT,LREGB
PRLC     EQU   *
         S     10,LENT
         C     10,BBXC
         BE    END
         C     10,ATT
         BNL   NEXTL
         A     10,LTT
         CLC   STOP,0(10)
         BNE   NEXTL
END      EQU   *
         CLI   REPEAT,0
         BE    CLOSE
         MVC   BBXC,ATT
         L     1,BBXH
         S     1,LENT
         MVC   0(4,1),STOP
         SP    LCNT,LCNT
         XC    HSECB,HSECB
         B     REENTER
CLOSE    DS    0H
         CLOSE (PRINT,,DCB)
         GOBACK
*  THE FOLLOWING CONSTANTS FORM THE  PRINT EXIT PARAMETER LIST AND
*  THEIR SEQUENCE MUST NOT BE CHANGED
PRLIST   DC    A(PRINT),A(LINE),A(LREGA),A(LREGB)
         DC    A(NORMPRNT+1),A(PRLA+1),A(PRLB+1),A(SPLO)
         DC    A(HDNG)
ADTREX   DC    X'FFFFFFFF',A(REPEAT)
USERPARM DC    F'0'
*  END OF PARAMETER LIST.
*
*  THE SEQUENCE OF THE FOLLOWING ADCONS IS VITAL AND MUST NOT BE
*  CHANGED WITHOUT REFERENCE TO THE MVC INSTRUCTION PRECEDING LABEL
*  'SETRJOB'.
*
ADIO     DC    A(TRIO)
ADSVC    DC    A(TRSVC)
ADDISP   DC    A(TRDISP)
ADSIO    DC    A(TRACE)
ADEXT    DC    A(TREX)
ADPCHK   DC    A(TRPI)
MADIO    DC    A(PSWNDX2)
MADSVC   DC    A(PSWNDXA)
MADDISP  DC    A(PSWNDXB)
MADSIO   DC    A(TRACEMFT)
*
ADSCSAV  DC    A(IEASCSAV)
ADPKSAV  DC    A(IEAPKSAV)
ADSVCSAV DC    A(SVCSAV)
ADIORGSV DC    A(IORGSAV)
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),RECFM=FBM,          *
               LRECL=133,BLKSIZE=665
CSCBAD   DC    F'0'
PACKK     PACK DW,2(1,1)
MVZK      MVZ  DW(1),2(1)
XCK       XC   DW(1),NUMERICS
MVNAME    MVC  LOADNAME(1),0(3)
TMASK    DC    X'4020214B2020'
DEVIS    DC    C'DEV= '
CCIS     DC    C'  CC= '
ENABLE   DC    X'FF'
         DROP  10,11,12
         CNOP  0,8
         USING *,BALREG
IO       STM   1,8,SAVE
         L     8,BBXC
         USING STORE,8
         MVC   STYPE,TYPIO
         MVC   SPSW(16),56
         LM    3,7,IOMASKS
         N     3,56          CHAN
         N     4,56          C.U.
         N     5,56          DEV.
         SRL   3,8
         SRL   4,4
         LR    1,6           ILK1
         AR    1,3           ILK1 + CHAN
         IC    3,0(1)        K
         AR    6,4           ILK1 + C.U.
         AR    6,3           ILK1 + C.U. + K
         IC    3,0(6)        L
         SLL   5,1           2(DEV)
         SLL   3,1           2L
         AR    7,5           ILK2 + 2(DEV)
         AR    7,3           ILK2 + 2(DEV) + 2L
         LH    7,0(7)        A(UCBAD)
         XC    SLCCW,SLCCW
         L     1,64
         LA    1,0(1)
         S     1,EIGHT
         BM    NOLCC
         C     1,MSIZE
         BNL   NOLCC
         MVC   SLCCW,0(1)
NOLCC    EQU   *
         L     1,16
         L     1,0(1)
         L     4,4(1)
MFTH     BC    0,MFTI
         MVC   SREGS,48(4)
         B     COMMON
MFTI     MVC   SREGS(8),72(4)          0,1
IOX      MVC   SREGS+8(32),0           2,9
         MVC   SREGS+40(24),48(4)      10,15
         B     COMMON
         USING *,BALREG
SVC      STM   1,8,SAVE
         L     8,BBXC
         MVC   STYPE,TYPSVC
         MVC   SPSW,32
SVCX     MVC   SREGS,0
         L     4,16
         L     4,0(4)
         L     4,4(4)
         B     COMMON
         USING *,BALREG
DSP      STM   1,8,SAVE
         L     8,BBXC
         MVC   STYPE,TYPDSP
MFTG     BC    0,MFTJ
         LR    4,14          NEW TCB
         L     1,0(4)
         MVC   SPSW,16(1)
         MVC   SREGS,48(4)
         B     COMMON
MFTJ     LR    4,0
         L     1,0(4)
         MVC   SPSW,16(1)
         MVC   SREGS(40),72(4)         0,9
         MVC   SREGS+40(24),48(4)      10,15
         B     COMMON
         USING *,BALREG
EXT      STM   1,8,SAVE
         L     8,BBXC
         MVC   STYPE,TYPEXT
         MVC   SPSW,24
         MVC   SREGS,48(4)
         B     COMMON
         USING *,BALREG
PCHK     STM   1,8,SAVE
         L     8,BBXC
         MVC   STYPE,TYPCHK
PCHKX    MVC   SREGS,0
         MVC   SPSW,40
         L     1,16
         L     1,0(1)
         L     4,4(1)
         B     COMMON
         USING *,9
SIO      STM   1,8,SAVE
         L     8,BBXC
         MVC   STYPE,TYPSIO
         MVC   SCSW,64
         LR    7,1           RQE
         L     1,16
         L     1,0(1)
         L     4,4(1)
         XC    SREGS,SREGS
         ST    6,SLCCW       DEVICE BEING STARTED
         STC   10,SLCCW      SIO CC
COMMON   BALR  6,0
         USING *,6
         ST    4,STCB
         XC    SJOB(24),SJOB
         L     5,0(4)
         TM    3(4),3
         BC    7,NORB
         LA    5,0(5)
         LTR   5,5
         BC    12,NORB
         C     5,MSIZE
         BNL   NORB
MFTK     BC    0,MFTL
         SR    1,1
         IC    1,10(5)
         SRL   1,6
         SR    2,2
         CR    1,2
         BNE   TRIRB
PRB      L     1,12(5)
         LA    1,0(1)
         C     1,MSIZE
         BNL   NORB
         MVC   SRBN,8(1)
         B     TIOT
MFTL     MVC   SRBN,0(5)
         B     TIOT
TRIRB    LA    2,1(2)
         CR    1,2
         BNE   TRSIRB
         MVC   SRBN,IRB
         CR    1,2
         BNE   TRYSV
         B     TIOT
TRSIRB   LA    2,1(2)
         MVC   SRBN,0(5)
         B     TIOT
TRYSV    TM    10(5),16
         BZ    PRB
         MVC   SRBN,4(5)
NORB     EQU   *
TIOT     L     5,12(4)
         LA    5,0(5)
         LTR   5,5
         BZ    NOTIOT
         C     5,MSIZE
         BNL   NOTIOT
         MVC   SJOB(16),0(5)
NOTIOT   EQU   *
TIME     L     5,PSCAD
         LM    1,3,0(5)
         ALR   1,2
         L     2,80
         SRA   2,1
         SLR   1,2
         ALR   1,3
         BC    3,TADJ2
         CL    1,TD24
         BC    4,TADJ2+4
TADJ2    AL    1,TDADJ
         ST    1,STIME
         LA    1,FORCENT
         L     2,MSIZE
         L     3,USEREX
         BALR  5,3
STEPON   LA    8,128(8)
         C     8,BBXH
         BL    *+8
         L     8,ATT
         ST    8,BBXC
EX       LM    1,8,SAVE
         BR    11
*
*  THE FOLLOWING CARDS FORM THE PARAMETER LIST FOR THE TRACE EXIT AND
*  MUST REMAIN TOGETHER IN THE SEQUENCE SHOWN.
*
FORCENT  DC    F'0',A(HSECB)
TCBAD    DC    F'0'
BBXC     DC    F'0'
ATT      DC    F'0'
BBXH     DC    F'0'
         DC    A(REPEAT)
ADPREX   DC    X'FFFFFFFF'
SAVE     DC    8F'0'
USERP    DC    F'0'
*
*  END OS PARAMETER LIST.
*
DCB       DCB  DDNAME=SPECRTN,MACRF=(E),DSORG=DA
         DC    F'0'
DW        DC   D'0'
IOAD     DC    F'0'
RESETIO  DC    F'0'
SVCAD    DC    F'0'
RESETSVC DC    F'0'
DISPAD   DC    F'0'
RESETDSP DC    F'0'
EXTAD    DC    F'0'
RESETEXT DC    F'0'
PCKAD    DC    F'0'
RESETPCK DC    F'0'
SIOAD    DC    F'0'
RESETSIO DC    F'0'
LENT      DC   F'128'
USEREX   DC    A(STEPON)
LTT       DC   F'8192'
HSECB     DC   F'0'
CONSECB  DC    F'0'
ECBL      DC   A(CONSECB),X'80',AL3(HSECB)
MSIZE    DC    F'0'
PSCAD    DC    F'0'
CON1     DC    F'200000'
CON2     DC    X'0249F000'
TD12     DC    F'12'
TDIV     DC    F'10'
TD24     DC    X'C5C10000'
TDADJ    DC    X'3A3F0000'
FOUR     DC    F'4'
USERPEX  DC    A(NORMPRNT)
FONE     DC    F'1'
SEVEN    DC    F'7'
IOMASKS  DC    F'1792',F'240',F'15'
ILK1     DC    F'0'
ILK2     DC    F'0'
EIGHT    DC    F'8'
TH24     DC    H'24'
NUMERICS  DC   8X'F0'
STOP      DC   C'STOP'
ENDJRH   DC    C'ENDTRA'
REPEAT DC X'00'
NP        DC   X'8B'
TITLE     DC   X'11',CL42' ',C'TSGTRACE RUN ON '
MACH      DC   CL2' ',C' AT'
TIMEND    DC   CL6' ',C' (ENDTIME) ON'
DATEND    DC   CL7' ',CL43' '
PRTAB    DC    193C' ',C'ABCDEFGHI',7C' ',C'JKLMNOPQR',8C' '
         DC    C'STUVWXYZ',6C' ',C'0123456789',6C' '
HDNG     DC    X'11',CL8'TYPE',CL9'TCB',CL9'JOB',CL9'STEP',CL15'RBNAME'
         DC    CL18'PSW',CL18'CSW',CL16'LCCW',CL30'TIME'
LINE      DC   X'09'
LTYPE    DC    CL4' ',CL2' '
LTCB      DC   CL6' ',CL2' '
LJOB      DC   CL8' ',CL2' '
LSTEP     DC   CL8' ',CL2' '
LRBN      DC   CL8' ',CL2' '
LPSW      DC   CL16' ',CL2' '
LCSW      DC   CL16' ',CL2' '
LLCCW     DC   CL16' ',CL1' '
LTIME    DC    CL13' ',CL23' '
LREGA     DC   X'09',CL11'  REG (00)'
LR1       DC   CL8' ',CL6' (01)'
LR2       DC   CL8' ',CL6' (02)'
LR3       DC   CL8' ',CL6' (03)'
LR4       DC   CL8' ',CL6' (04)'
LR5       DC   CL8' ',CL6' (05)'
LR6       DC   CL8' ',CL6' (06)'
LR7       DC   CL8' ',CL6' (07)'
LR8       DC   CL8' ',CL15' '
LREGB     DC   X'11',CL11'      (08)'
LR9       DC   CL8' ',CL6' (09)'
LRA       DC   CL8' ',CL6' (10)'
LRB       DC   CL8' ',CL6' (11)'
LRC       DC   CL8' ',CL6' (12)'
LRD       DC   CL8' ',CL6' (13)'
LRE       DC   CL8' ',CL6' (14)'
LRF       DC   CL8' ',CL6' (15)'
LRG       DC   CL8' ',CL15' '
DMASK    DC    X'4020214B202020'
LCNT     DC    PL2'0'
ONE      DC    P'1'
MAXCNT   DC    P'55'
HEX      DS    CL128
TYPIO    DC    CL4'I/O'
TYPSVC   DC    CL4'SVC'
TYPDSP   DC    CL4'DSP'
TYPEXT   DC    CL4'EXT'
TYPCHK   DC    CL4'PCHK'
TYPSIO   DC    CL4'SIO'
LOADNAME DC    CL8' '
REPLY    DC    CL6' '
SPACES   DC    CL6' '
IRB      DC    CL8'IRB'
TIMASK   DC    X'402021204B20204B20204B2020'
         LTORG
STORE    DSECT
STYPE     DS   CL4
SJOB      DS   CL8
SSTEP     DS   CL8
SRBN      DS   CL8
STCB      DS   CL4
SPSW      DS   CL8
SCSW      DS   CL8
SLCCW     DS   CL8
STIME     DS   CL4
SREGS     DS   CL64
SPARE     DS   CL4
         END
