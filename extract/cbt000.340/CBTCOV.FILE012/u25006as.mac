         TITLE 'SCAN TAPE RECORD AMENDING USER SPECIFIED STRING'
STRAUSS  BEGIN
         L     R01,0(R01)          GET PARM
         LH    R02,0(R01)          INFO
         LTR   R02,R02             IS LENGTH ZERO
         BNZ   GO                   NO
ABEND8   EQU   *
         ABEND 8                    YES - LETS STOP HERE
GO       EQU   *
         LA    R02,2(R01)          START OF PARM
         LA    R06,43              LENGTH OF FIELD - ID
         LR    R03,R02             SAVE START ->
         LA    R05,ID              -> RECEIVING FIELD
         BAL   R10,SCAN            CHECK FIELD - ID
         STC   R04,CLCID1          LENGTH TO COMPARE
         LA    R05,LOC             -> RECEIVING FIELD
         LA    R06,4               FIELD LENGTH - LOC
         BAL   R10,SCAN            CHECK FIELD - LOC
         LR    R09,R04             SAVE LENGTH
         LA    R07,1(R09)           AND LENGTH + 1
         LA    R05,NEW             -> RECEIVING FIELD
         LA    R06,43              FIELD LENGTH - NEW
         BAL   R10,SCAN            CHECK FIELD - NEW
         STC   R04,MVCNEW1         LENGTH TO MOVE
         LR    R06,R02             -> TYPE OF PRINT
         CLC   0(4,R02),=C'NONE'   NO PRINT
         BE    SETNONE              YES
         LA    R03,5               FOR NEXT CHAR
         CLC   0(4,R02),=C'BOTH'   PRINT IN AND OUT
         BE    SETBOTH              YES
         LA    R03,4               FOR NEXT CHAR
         CLC   0(3,R02),=C'OLD'    PRINT IN
         BE    SETOLD               YES
         CLC   0(3,R02),=C'NEW'    PRINT OUT
         BNE   ABEND8               NO - SUMMAT WRONG
         OI    PRTNEW1,X'F0'       SET SW ON
         B     CHARTST
SETBOTH  EQU   *
         OI    PRTNEW1,X'F0'       SET SW ON
SETOLD   EQU   *
         OI    PRTOLD1,X'F0'       SET SW ON
CHARTST  EQU   *
         AR    R02,R03             -> NEXT CHAR
         CLI   0(R02),C'C'         CHARACTER PRINT
         BE    SETNONE              YES
         CLI   0(R02),C'X'         HEX PRINT
         BNE   ABEND8               NO - THATS TOO BAD
         OI    HEXCON1,X'F0'       SET CONVERT SW ON
SETNONE  EQU   *
         LA    R08,LOC(R09)        CHECK
LOOP01   EQU   *                    THAT
         CLI   0(R08),C'0'          VALUE
         BL    ABEND8               IN LOC
         CLI   0(R08),C'9'          IS
         BH    ABEND8               NUMERIC
         BCTR  R08,R00             VALUE
         BCT   R07,LOOP01
         EX    R09,PACKLOC
         CVB   R09,LOC
         BCTR  R09,R00             REDUCE BY 1 FOR OFFSET
         CLC   0(4,R06),=C'NONE'   DO WE WANT TO PRINT?
         BE    NOPRINT              NO - SKIP THE OPEN
         OPEN  (PRINT,(OUTPUT))     YES - THEN OPEN A PRINTER
NOPRINT  EQU   *
         OPEN  (INPUT,(INPUT))     OPEN THIS ONE
         TM    MVCNEW1,X'FF'       SHALL WE OPEN
         BO    FORCEOLD             THE OUTPUT?
         OPEN  (OUTPUT,(OUTPUT))    YES
         B     LRECL
FORCEOLD EQU   *
         OI    PRTOLD1,X'F0'       FORCE IT TO
         NI    PRTNEW1,X'0F'        PRINT THE OLD FILE
         OI    BACKNEW1,X'F0'       AND NOT WRITE A NEW ONE
LRECL    EQU   *
         LH    R05,INPUT+82        GET LRECL
         LA    R00,7(R05)          ROUND UP TO
         N     R00,=F'-8'           MULTIPLE OF 8
         ST    R00,R00SAVE         SAVE IT
         GETMAIN R,LV=(0)          GET SOME CORE
         LR    R06,R01             SAVE GOTTEN ADDRESS
         TIME  BIN                 WHATS THE DATE?
         STCM  R01,7,DSTOR          OH
         MVE   HD1+(L'HD1-7)(7),DSTOR,=X'4020204B202020'
READOLD  EQU   *
         GET   INPUT,(R06)         READ A RECORD
         AP    INCNT,=P'1'         INCREMENT RECORD COUNT
         LA    R07,0(R09,R06)      POINT TO BYTE(S) TO COMPARE
CLCID    EQU   *
         CLC   0(0,R07),ID         TEST RECORD
         BNE   BACKNEW              NOT THE SAME
PRTOLD   EQU   *
         BC    0,PNTIN             PRINT INPUT
BACKOLD  EQU   *
         TM    MVCNEW1,X'FF'       ANY NEW
         BO    READOLD              NO
MVCNEW   EQU   *
         MVC   0(0,R07),NEW        MOVE IN NEW VALUE
PRTNEW   EQU   *
         BC    0,PNTOUT            PRINT OUTPUT
BACKNEW  EQU   *
         BC    0,READOLD           NO OUTPUT SW
         PUT   OUTPUT,(R06)        WRITE OUTPUT
         B     READOLD              AND TRY NEXT.
         SPACE 2
SCAN     EQU   *
         XR    R04,R04             ZERO COUNT REGISTER
SCAN01   EQU   *
         CLI   0(R03),C','         IS IT A COMMA (DELIMITER)
         BE    SCAN02              YES
         LA    R03,1(R03)          NO - NEXT CHAR
         LA    R04,1(R04)          ADD TO COUNT
         B     SCAN01              TRY NEXT
SCAN02   EQU   *
         CR    R04,R06             CHECK EXCESSIVE LENGTH
         BH    ABEND8              YES - ABEND CODE 8
         LA    R03,1(R03)          POINT TO NEXT FIELD
         BCTR  R04,R00             REDUCE COUNT
         LTR   R04,R04             IF NEGATIVE
         BM    SCAN04               DONT MOVE
         EX    R04,SCAN03           AND MOVE TO STORE
SCAN04   EQU   *
         LR    R02,R03             SET FOR NEXT FIELD
         BR    R10                 GET OUT OF HERE
         SPACE
SCAN03   EQU   *
         MVC   0(0,R05),0(R02)     EXECUTED MOVE
ENDOFIN  EQU   *
         L     R00,R00SAVE         RESTORE IT
         FREEMAIN R,LV=(0),A=(6)   FREE IT
         WTO   'STRAUSS - END OF JOB' THATS YOUR LOT
         CLOSE (PRINT,,INPUT,,OUTPUT) CLOSE DOWN
         BACK                      GET OUT OF IT
PNTIN    EQU   *
         MVC   RETADDR,ABACKOLD    SET ADDR TO COME BACK TO FROM
         CP    LPP,=P'77'          TIME FOR HEADINGS
         BNH   PNTIN1               NO
         BAL   R10,HEADS            YES - PRINT THEM
PNTIN1   EQU   *
         MVC   PAREA(13),=C'INPUT  RECORD'
         MVE   PAREA+14(10),INCNT,=X'40206B2020206B202120' EDIT COUNT
PRTRTN   EQU   *
         MVI   ASA,C'0'            TWO SPACED
         BAL   R10,PRINTRTN        PRINT IT
         AP    LPP,=P'1'           ADD TO LINES/PAGE
         LA    R02,PAREA           SET UP         PRINT AREA
         LA    R03,108(R02)         PARAMETERS    END OF PRINT AREA
         LR    R04,R06              FOR           RECORD ADDRESS
         LA    R10,10               PRINTING      BYTE GROUP COUNT
         TM    INPUT+36,X'40'      RECFM = U OR V
         BZ    FIXED                NO
         TM    INPUT+36,X'80'      RECFM = U
         BO    FIXED                YES
         LH    R05,0(R04)           NO - GET LENGTH FROM RDW
FIXED    EQU   *
         LA    R08,0(R05,R06)      -> END OF RECORD
LOOP02   EQU   *
         CR    R04,R08             IS IT E.O.R.
         BNL   PNTEND               YES - GO AWAY
         NI    PNTLAST1,X'0F'      ENSURE LAST LINE IS PRINTED
HEXCON   EQU   *
         BC    0,CONHEX            CONVERT TO HEX IF REQD
         MVC   0(1,R02),0(R04)     TAKE A BYTE - ANY BYTE
         LA    R02,1(R02)          NOW GET TO THE NEXT ONE IN PRINT
HEXBACK  EQU   *
         LA    R04,1(R04)           AND THE NEXT ONE IN RECORD
         BCT   R10,LOOP02          DO 10 TIMES
         LA    R02,1(R02)          LEAVE A GAP
         CR    R02,R03             END OF PRINT LINE
         BNH   SETR10               NO
         BAL   R10,PRINTRTN        PRINT A LINE
         LA    R02,PAREA           RESET PRINT ADDRESS
SETR10   EQU   *
         LA    R10,10              RESET COUNT
         B     LOOP02              GO BACK
PNTEND   EQU   *
         L     R10,RETADDR         LOAD RETURN ADDRESS
PNTLAST  EQU   *
         BCR   15,R10              PRINT LAST LINE SW
         BAL   R10,PRINTRTN        PRINT LAST LINE
         OI    PNTLAST1,X'F0'      RESET SW
         L     R10,RETADDR         SET ADDR TO GO BACK TO FROM
         BR    R10                 GO BACK
PRINTRTN EQU   *
         PUT   PRINT,ASA           PUT IT AWAY
         MVI   ASA,C' '            CLEAR OUT
         MVC   PAREA(132),ASA       PRINT AREA
         AP    LPP,=P'1'           ADD TO LINE COUNT
         BR    R10                 GO BACK
HEADS    EQU   *
         ST    R10,R10SAVE         SAVE REG 10
         MVC   PAREA+(66-(L'HD1/2))(L'HD1),HD1 MOVE HEADING
         MVI   ASA,C'1'            NEW PAGE
         ZAP   LPP,=P'0'           ZERO LINE COUNT
         BAL   R10,PRINTRTN        PRINT IT
         MVI   PAREA+(66-(L'HD1/2)),C'=' SET UP UNDERLINING
         MVC   PAREA+(66-(L'HD1/2)+1)(L'HD1-1),PAREA+(66-(L'HD1/2))
         BAL   R10,PRINTRTN        PRINT IT
         MVI   ASA,C'0'            PRINT TWO
         BAL   R10,PRINTRTN         BLANK LINES
         AP    LPP,=P'1'           UP LINE COUNT
         L     R10,R10SAVE         RESTORE RETURN ADDRESS
         BR    R10                 GO BACK
PNTOUT   EQU   *
         MVC   RETADDR,ABACKNEW    SET UP ADDR TO GO BACK TO FROM
         CP    LPP,=P'77'          END OF PAGE
         BNH   PNTOUT1              NO
         BAL   R10,HEADS           DO HEADINGS
PNTOUT1  EQU   *
         MVC   PAREA(13),=C'OUTPUT RECORD' SET UP ID FOR O/P RECORD
         MVE   PAREA+14(10),INCNT,=X'40206B2020206B202120' EDIT COUNT
         B     PRTRTN              PRINT
CONHEX   EQU   *
         MVZ   0(1,R02),0(R04)     1ST HALF BYTE
         MVN   1(1,R02),0(R04)     2ND HALF BYTE
         UNPK  0(1,R02),0(1,R02)   ROTATE 1ST HALF 4
         NC    0(2,R02),=X'0F0F'   ENSURE EACH BYTE IS 00 - 0F
         TR    0(2,R02),TABLE      TRANSLATE TO CHARS
         LA    R02,2(R02)          MOVE ALONG PRINT LINE
         BCTR  R10,R00             REDUCE LOOP COUNT
         B     HEXBACK             GO BACK FOR THE REST
         TITLE 'STRAUSS - DATA CONTROL BLOCKS'
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,RECFM=FBA,            *
               LRECL=133,BLKSIZE=2660
INPUT    DCB   DDNAME=SYSUT1,DSORG=PS,MACRF=GM,EODAD=ENDOFIN
OUTPUT   DCB   DDNAME=SYSUT2,DSORG=PS,MACRF=PM
         TITLE 'STRAUSS - CONSTANTS ETC.'
LOC      DC    D'0'                LOCATION WITHIN RECORD
R00SAVE  DS    F                   SAVE FOR REG 0
R10SAVE  DS    F                   SAVE FOR R10
RETADDR  DS    F                   INTERNAL RETURN ADDR
ABACKOLD DC    A(BACKOLD)           RETURN ADDR 1
ABACKNEW DC    A(BACKNEW)           RETURN ADDR 2
INCNT    DC    PL4'0'              RECORD COUNT
LPP      DC    P'100'              LINE COUNT
DSTOR    DC    PL3'0'              DATE STORE
TABLE    DC    C'0123456789ABCDEF' TRANSLATE TABLE
ASA      DC    C'1'                ASA CONTROL
PAREA    DC    CL132' '            PRINT AREA
ID       DC    CL43' '             INPUT COMPARE VALUE
NEW      DC    CL43' '             REPLACEMENT VALUE
HD1      DC    C'STRAUSS - SCAN TAPE RECORD AMENDING USER SPECIFIED STR*
               ING   DATE       '  HEADING
PRTNEW1  EQU   PRTNEW+1
PRTOLD1  EQU   PRTOLD+1
HEXCON1  EQU   HEXCON+1
CLCID1   EQU   CLCID+1
MVCNEW1  EQU   MVCNEW+1
PNTLAST1 EQU   PNTLAST+1
BACKNEW1 EQU   BACKNEW+1
         DS    0H                  ALIGNMENT
PACKLOC  PACK  LOC(8),LOC(0)       EXECUTED STATEMENT
         LTORG
         END
