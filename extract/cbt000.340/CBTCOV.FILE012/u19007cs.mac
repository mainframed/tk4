         MACRO
&NAME    BZR   &R
&NAME    BCR   8,&R                BR ON ZERO
         MEND
         MACRO
&NAME    BNZR  &R
&NAME    BCR   7,&R                BR ON NOT ZERO
         MEND
         MACRO
&NAME    BMR   &R
&NAME    BCR   4,&R                BR ON MINUS OR MIXED
         MEND
         MACRO
&NAME    BOR   &R
&NAME    BCR   1,&R                BR ON OVERFLOW OR IF ONES
         MEND
         MACRO
&NAME    BPR   &R
&NAME    BCR   2,&R                BR ON PLUS
         MEND
         MACRO
&NAME    BNER  &R
&NAME    BCR   7,&R                BR ON NOT EQUAL
         MEND
         MACRO
&NAME    BNLR  &R
&NAME    BCR   11,&R               BR ON NOT LOW
         MEND
         MACRO
&NAME    BNHR  &R
&NAME    BCR   13,&R               BR ON NOT HIGH
         MEND
         MACRO
&NAME    BER   &R
&NAME    BCR   8,&R                BR ON EQUAL
         MEND
         MACRO
&NAME    BLR   &R
&NAME    BCR   4,&R                BR ON LOW
         MEND
         MACRO
&NAME    BHR   &R
&NAME    BCR   2,&R                BR ON HIGH
         MEND
         MACRO
&NAME    BNPR  &R
&NAME    BCR   13,&R               BR ON NOT PLUS
         MEND
         MACRO
&NAME    BNMR  &R
&NAME    BCR   11,&R               BR ON NOT MINUS
         MEND
         MACRO
&NAME    BNOR  &R
&NAME    BCR   14,&R               BR IF NOT ONES
         MEND
         MACRO
&NAME    NUMBR
         B     F&SYSNDX+6
A&SYSNDX DC    X'FF00FFFFFFFFFF00FFFFFFFFFF00'
B&SYSNDX DC    X'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'
C&SYSNDX DC    XL10'00'
         DC    X'FAFBFCFDFEFF'
X&SYSNDX DC    F'0'                SAVE AREA REGISTER 2
D&SYSNDX NC    B&SYSNDX,0(14)
E&SYSNDX XC    B&SYSNDX,=20X'F0'
F&SYSNDX TRT   0(0,14),C&SYSNDX-240
&NAME    MVI   D&SYSNDX+1,X'00'    SET INSTR. LENGTHS TO ZERO
         MVI   E&SYSNDX+1,X'00'
         MVI   F&SYSNDX+1,X'00'
         BCTR  15,0
         ST    2,X&SYSNDX          SAVE REGISTER 2
         MVC   B&SYSNDX,=20X'F0'   SET MASK TO LOWEST VALID CHARACTER
         EX    15,D&SYSNDX         EXECUTE AND WITH DATA LENGTH IN R15
         EX    15,E&SYSNDX
         BM    G&SYSNDX            ERROR IF ANY BITS LEFT ON
         EX    15,F&SYSNDX         EXECUTE TRANSLATE AND TEST
         BC    8,H&SYSNDX          IF  OK  BYPASS ERROR ROUTINE
G&SYSNDX LR    14,15               ERROR ROUTINE SETS REGS.14 & 15 EQL.
H&SYSNDX L     2,X&SYSNDX          RESTORE REGISTER 2
         MEND
         MACRO
&NAME    PROGOUT  &RC
         LCLA  &A
&NAME    L     R13,4(R13)
         LM    R14,R12,12(R13)
         AIF   (K'&RC GT 0).G01
         MNOTE 0,'RC OMITTED RC=0 ASSUMED'
&A       SETA  0
         AGO   .G03
.G01     ANOP
&A       SETA  &RC
         AIF   (&A GT 15).ERROR
.G03     LA    R15,&A.(R0,R0)
         BR    R14
         MEXIT
.ERROR   MNOTE 8,'INVALID RETURN CODE'
         MEND
         MACRO
&NAME    PROGIN
         ENTRY SAVEAREA
&NAME    SAVE  (14,12)
         BALR  R5,R0
         USING *,R5
         CNOP  6,8
         ST    R13,*+22
         LR    R6,R13
         LA    R13,*+12
         ST    R13,8(R6)
         B     *+76
SAVEAREA DS    9D
         MEND
*
         TITLE 'XM040111 SPOOL UP TO 3 PRINT TAPES TO 3 PRINTERS      '
XM040111 CSECT
         ENTRY XM040103            INSERT MODULE NUMBER CHANGING
XM040103 EQU   *                   PROGRAMMER CODE TO V.M. LEVEL
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         PRINT NOGEN
         SPACE 3
***********************************************************************
*                                                                     *
*    MODULE XM040111  PROGRAMMER S WELLOCK          ASSIGNED 05/09/72 *
*                                                                     *
*                          PROGRAM FUNCTIONS                          *
*                          -----------------                          *
*  PROGRAM ACCEPTS PARM INFORMATION FOR 1, 2 OR 3 TAPES TO SPOOL.     *
*  OPERATOR COMMUNICATIONS ALLOW RESTART, BACKSPACE, FORWARDSPACE     *
*  AND CANCEL FACILITIES. A BLOCKCOUNT IS ISSUED FOR A CANCELLED      *
*  OR COMPLETED TAPE AND THE OPTION TO PRINT ANOTHER TAPE IS GIVEN.   *
*                                                                     *
         SPACE 2
*                                                                     *
*                           SPECIAL NOTES                             *
*                           -------------                             *
*  JCL - 3 SEPARATE PROCEDURES ARE AVAILABLE FOR 1, 2 OR 3 TAPES.     *
*                                                                     *
***********************************************************************
*
**  AMENDMENT TO MODULE XM040111 BY S WELLOCK
*
**  ASSIGNED 13/11/72, EFFECTIVE 17/11/72 AMENDMENT IS 0.1
*
**  DETAILS OF AMENDMENT PROGRAM NOW ALLOWS SPOOLING OF FURTHER TAPES
*   -------------------- WITH THE '1 TAPE' OPTION - PREVIOUSLY A
*                        MESSAGE WAS ISSUED GIVING THIS OPTION BUT
*                        A REPLY WAS NOT ACCEPTED
*
***********************************************************************
*
**  AMENDMENT TO MODULE XM040111 BY S WELLOCK
*
**  ASSIGNED 28/11/72, EFFECTIVE 01/12/72 AMENDMENT IS 0.2
*
**  DETAILS OF AMENDMENT PROGRAM NO LONGER REISSUES A WTOR MESSAGE
*   -------------------- FOR FURTHER TAPES BEING SPOOLED IF THERE
*                        IS ALREADY AN OUTSTANDING MESSAGE FROM A
*                        PREVIOUS TAPE WHICH HAD REACHED NORMAL
*                        END OF FILE.
*
***********************************************************************
*
**  AMENDMENT TO MODULE XM040111 BY S WELLOCK
*
**  ASSIGNED 25/01/31, EFFECTIVE 01/02/73 AMENDMENT IS 0.3
*
**  DETAILS OF AMENDMENT INSERT WAIT/MULTIPLE WAIT AT END OF PRINT
*   -------------------- ROUTINE FOR EACH TAPE TO ENSURE PROGRAM
*                        DOESNT LOOP IF WAITING FOR 'WRITES' TO
*                        COMPLETE.
*                        ALSO - WHEN ALL TAPES CLOSED (2 OR 3 OPTION)
*                        GIVE OPERATOR OPTION OF REOPENING TAPE 1
*                  INSTEAD OF ENDING THE JOB AS BEFORE.
*
***********************************************************************
         EJECT
         ISEQ  73,80
         PROGIN
*
**  ACCEPT PARM INFO. AND SET BRANCHES FOR 1, 2 OR 3 TAPES
*   ------------------------------------------------------
         L     R2,0(R1)            POINT TO PARM INFO.
         CLC   0(2,R2),=X'0000'    Q. IS PARM INFO. PRESENT
         BNE   BA02                A. YES, SET BRANCHES ACCORDINGLY
BA0105   WTO   'XM0401T INVALID OR MISSING PARM INFORMATION'
         ABEND 92,DUMP
BA02     CLI   2(R2),C'1'          Q. OPTION FOR 1 TAPE
         BE    BA04                A. YES, INITIAL RTN FOR 1 TAPE
         CLI   2(R2),C'2'          Q. OPTION FOR 2 TAPES
         BNE   BA0205              A. NO, TRY 3 TAPES
         OI    BA09+1,X'F0'        SET BRANCH FOR 2 TAPES OPEN RTN.
         OI    BA30+1,X'F0'        SET BRANCH FOR 2 TAPES PUT RTN.
         MVI   CXX001,X'20'        SET CLOSED STATUS BIT FOR T3 ONLY
         B     BA04                GO TO OPEN RTN.
BA0205   CLI   2(R2),C'3'          Q. OPTION FOR 3 TAPES
         BNE   BA0105              A. NO, ABEND
         OI    BA09+1,X'F0'        SET BRANCH FOR 2 TAPES OPEN RTN.
         OI    BA30+1,X'F0'        SET BRANCH FOR 2 TAPES PUT RTN.
         OI    BA15+1,X'F0'        SET BRANCH FOR 3 TAPES OPEN RTN.
         OI    BA44+1,X'F0'        SET BRANCH FOR 3 TAPES PUT RTN.
         MVI   CXX001,X'00'        SET ALL STATUS BITS TO 'OPEN'
*
BA04     EQU   *
         USING IHADCB,R2
         EJECT
*
**  INITIALISATION ROUTINES - OPEN, RECS/BLK CALC. AND INITIAL READ
*   ---------------------------------------------------------------
         LA    R2,T01              ADDRESS T01 DCB
         LA    R3,P01              ADDRESS P01 DCB
         BAL   R10,B5001           GO OPEN FILES AND GET BUFFER AREA
         ST    R7,SFD004A          SAVE T01 RECS PER BLOCK
         ST    R1,SFD004B          SAVE T01 BUFFER ADDRESS
         LR    R8,R1               ADDRESS BUFFER AREA FOR READ (T01)
         BAL   R10,B5101           READ A BLOCK - T01
         BAL   R10,B5401           ISSUE WTOR FOR TAPE1 OPTIONS
BA09     BC    0,BA10              BRANCH IF TAPE2 TO OPEN
         B     BA21                GO WRITE THIS BLOCK (P01)
*
**  REPEAT ABOVE ROUTINE FOR TAPE2
*
BA10     LA    R2,T02              ADDRESS T02 DCB
         LA    R3,P02              ADDRESS P02 DCB
         BAL   R10,B5001           GO OPEN FILES AND GET BUFFER AREA
         ST    R7,SFD004C          SAVE T02 RECS PER BLOCK
         ST    R1,SFD004D          SAVE T02 BUFFER ADDRESS
         LR    R8,R1               ADDRESS BUFFER AREA FOR READ (T02)
         BAL   R10,B5201           READ A BLOCK - T02
         BAL   R10,B5402           ISSUE WTOR FOR TAPE2 OPTIONS
BA15     BC    0,BA16              BRANCH IF TAPE3 TO OPEN
         B     BA21                GO WRITE THIS BLOCK (P02)
*
**  REPEAT ABOVE ROUTINE FOR TAPE3
*
BA16     LA    R2,T03              ADDRESS T03 DCB
         LA    R3,P03              ADDRESS P03 DCB
         BAL   R10,B5001           GO OPEN FILES AND GET BUFFER AREA
         ST    R7,SFD004E          SAVE T03 RECS PER BLOCK
         ST    R1,SFD004F          SAVE T03 BUFFER ADDRESS
         LR    R8,R1               ADDRESS BUFFER AREA FOR READ (T03)
         BAL   R10,B5301           READ A BLOCK - T03
         BAL   R10,B5403           ISSUE WTOR FOR TAPE3 OPTIONS
         EJECT
*
**  TAPE1 - WRITE A BLOCK AND CHECK IF OPERATOR HAS ANY REQUESTS
*   ------------------------------------------------------------
BA21     BC    0,BA31              BRANCH IF T01 CLOSED
         CLI   CXD001A,X'00'       Q. HAS LAST P01 WRITE COMPLETED
         BE    BA22                A. YES, CHECK LATEST READ
         LM    R7,R8,SDD008A       RESTORE REGS FOR 'WRITE LOOP'
         B     BA25                GO CHECK IF WRITE NOW COMPLETE
BA22     L     R7,SFD004A          LOAD COUNT FOR 'WRITE LOOP'
         CHECK DECB1               CHECK T01 READ COMPLETE
         LA    R2,T01              LOAD DCB ADDRESS
         L     R3,DECB1+16         LOAD IOB ADDRESS
         CLC   14(2,R3),=X'0000'   Q. FULL BLOCK READ
         BE    BA23                A. YES, BYPASS INCOMPLETE BLK. RTN.
         BAL   R10,B5501           FIND NO. OF RECORDS READ (IN R7)
BA23     L     R8,SFD004B          LOAD T01 BUFFER ADDR.
BA24     WRITE DECB4,SF,P01,(R8),'S'    WRITE A BLOCK (P01)
         MVI   CXD001A,X'FF'       INDICATE 'WRITE' INITIATED
BA25     TM    DECB4,X'40'         Q. IS ECB COMPLETION BIT ON
         BO    BA26                A. YES, ISSUE 'CHECK'
         STM   R7,R8,SDD008A       SAVE REGS FOR THIS 'WRITE LOOP'
         B     BA30                GO PROCESS NEXT TAPE
BA26     CHECK DECB4               CHECK P01 WRITE COMPLETE
         MVI   CXD001A,X'00'       INDICATE WRITE COMPLETED
         LA    R8,133(R8)          POINT TO NEXT REC.
         BCT   R7,BA24             WRITE THIS REC 'LOOP'
         AP    SPD003A,=P'1'       ADD 1 TO T01 BLOCK COUNT
         TM    CFW004A,X'40'       Q. ANY REPLY TO WTOR.(ALL OPTIONS)
         BZ    BA29                A. NO, READ NEXT BLOCK
         BAL   R10,B5701           A. YES, GO PROCESS REPLY
BA28     BAL   R10,B5401           REISSUE WTOR (ALL OPTIONS) FOR T01
BA29     L     R8,SFD004B          LOAD T01 BUFFER ADDR.
         BAL   R10,B5101           READ A BLOCK - T01
BA30     BC    0,BA35              BRANCH IF TAPE2 TO BE WRITTEN
         CLI   CXD001A,X'00'       Q. LATEST P01 WRITE COMPLETE     0.3
         BE    BA21                A. YES, CONTINUE PROCESSING      0.3
         WAIT  ECB=DECB4           A. NO, WAIT FOR LATEST WRITE     0.3
         B     BA21                THEN CONTINUE PROCESSING         0.3
*
*
**  CHECK IF OPERATOR HAS REQUESTED T01 BE REOPENED
*   -----------------------------------------------
BA31     TM    CXX001,X'E0'        Q. ALL TAPES CLOSED
         BO    BA60                A. YES, EOJ
         TM    CFW004D,X'40'       Q. ANY REPLY TO WTORNEW (REOPEN T01)
         BZ    BA30                A. NO, GO TRY NEXT TAPE
         NI    CFW004D,X'00'       RESET ECB
         OI    SCI001A,X'40'       ENSURE REPLY UPPER CASE
BA32     CLI   SCI001A,C'Y'        Q. VALID REPLY - REQUEST REOPEN  0.1
         BE    BA33                A. YES, REOPEN T01
         WTO   'XM04I, INVALID REPLY TO TAPE1 REOPEN OPTION'
         BAL   R11,B6301           REISSUE NEW TAPE1 OPTION
         B     BA30                GO TRY NEXT TAPE
*
BA33     OPEN  T01                 OPEN NEW INPUT TAPE1
         MVI   CXD001A,X'00'       INDICATE T01 OPEN TO MULT WAIT   0.3
         ZAP   SPD003A,=P'0'       ZEROISE BLKCOUNT ACCUM.
         NI    BA21+1,X'0F'        RESET 'T01 CLOSED' BRANCH TO 'OPEN'
         NI    CXX001,X'7F'        SET T01 STATUS BIT TO OPEN
         TM    CXX001A,X'01'       Q. LAST TAPE1 CANCELLED          0.2
         BZ    BA29                A. NO, DONT REISSUE WTOR         0.2
         NI    CXX001A,X'FE'       SET OFF CANCEL INDICATOR         0.2
         B     BA28                GO READ 1ST BLOCK
         EJECT
*
**  TAPE2 - WRITE A BLOCK AND CHECK IF OPERATOR HAS ANY REQUESTS
*   ------------------------------------------------------------
BA35     BC    0,BA45              BRANCH IF T02 CLOSED
         CLI   CXD001B,X'00'       Q. HAS LAST P02 WRITE COMPLETED
         BE    BA36                A. YES, CHECK LATEST READ
         LM    R7,R8,SDD008B       RESTORE REGS FOR 'WRITE LOOP'
         B     BA39                GO CHECK IF WRITE NOW COMPLETE
BA36     L     R7,SFD004C          LOAD COUNT FOR 'WRITE LOOP'
         CHECK DECB2               CHECK T02 READ COMPLETE
         LA    R2,T02              LOAD DCB ADDR.
         L     R3,DECB2+16         LOAD IOB ADDR
         CLC   14(2,R3),=X'0000'   Q. FULL BLOCK READ
         BE    BA37                A. YES, BYPASS INCOMPLETE BLK. RTN.
         BAL   R10,B5501           FIND NO. OF RECORDS READ (IN R7)
BA37     L     R8,SFD004D          LOAD T02 BUFFER ADDR.
BA38     WRITE DECB5,SF,P02,(R8),'S'    WRITE A BLOCK (P02)
         MVI   CXD001B,X'FF'       INDICATE 'WRITE' INITIATED
BA39     TM    DECB5,X'40'         Q. IS ECB COMPLETION BIT ON
         BO    BA40                A. YES, ISSUE 'CHECK'
         STM   R7,R8,SDD008B       SAVE REGS FOR THIS 'WRITE LOOP'
         B     BA44                GO PROCESS NEXT TAPE
BA40     CHECK DECB5               CHECK P02 WRITE COMPLETE
         MVI   CXD001B,X'00'       INDICATE WRITE COMPLETE
         LA    R8,133(R8)          POINT TO NEXT REC.
         BCT   R7,BA38             WRITE THIS REC. - 'LOOP'
         AP    SPD003B,=P'1'       ADD 1 TO T02 BLOCK COUNT
         TM    CFW004B,X'40'       Q. ANY REPLY TO WTOR (ALL OPTIONS)
         BZ    BA43                A. NO, READ NEXT BLOCK
         BAL   R10,B5801           A. YES, GO PROCESS REPLY
BA42     BAL   R10,B5402           REISSUE WTOR (ALL OPTIONS) FOR T02
BA43     L     R8,SFD004D          LOAD T02 BUFFER ADDR.
         BAL   R10,B5201           READ A BLOCK - T02
BA44     BC    0,BA48              BRANCH IF TAPE3 TO BE WRITTEN
         CLI   CXD001A,X'00'       Q. LAST P01 WRITE 'CHECKED'      0.3
         BE    BA21                A. YES, GO CHECK LATEST T01 READ 0.3
         CLI   CXD001B,X'00'       Q. LAST P02 WRITE 'CHECKED'      0.3
         BE    BA35                A. YES, GO CHECK LATEST T02 READ 0.3
         WAIT  1,ECBLIST=CAD008    WAIT FOR EITHER P01 OR P02 WRITE 0.3
         CLI   CXD001A,X'F0'       Q. T01 CLOSED                    0.3
         BE    BA31                A. YES - GO TEST WTOR (REOPEN)   0.3
         TM    DECB4,X'40'         Q. P01 WRITE DECB POSTED         0.3
         BO    BA21                A. YES, GO CHECK THIS WRITE      0.3
         B     BA35                A. NO, ASSUME P02 DECB POSTED    0.3
*
*
**  CHECK IF OPERATOR HAS REQUESTED T02 BE REOPENED
*   -----------------------------------------------
BA45     TM    CFW004E,X'40'       Q. ANY REPLY TO WTOR (REOPEN T02)
         BZ    BA44                A. NO, GO TRY NEXT TAPE
         NI    CFW004E,X'00'       RESET ECB
         OI    SCI001B,X'40'       ENSURE REPLY UPPER CASE
         CLI   SCI001B,C'Y'        Q. VALID REPLY - REQUEST REOPEN
         BE    BA46                A. YES, REOPEN T02
         WTO   'XM04I, INVALID REPLY TO TAPE2 REOPEN OPTION'
         BAL   R11,B6302           REISSUE NEW TAPE2 OPTION
         B     BA44                GO TRY NEXT TAPE
*
BA46     OPEN  T02                 OPEN NEW INPUT TAPE2
         MVI   CXD001B,X'00'       INDICATE T02 OPEN TO MULT WAIT   0.3
         ZAP   SPD003B,=P'0'       ZEROISE BLKCOUNT ACCUM.
         NI    BA35+1,X'0F'        RESET 'T02 CLOSED' BRANCH TO 'OPEN'
         NI    CXX001,X'BF'        SET T02 STATUS BIT TO OPEN
         TM    CXX001A,X'02'       Q. LAST TAPE2 CANCELLED          0.2
         BZ    BA43                A. NO, DONT REISSUE WTOR         0.2
         NI    CXX001A,X'FD'       SET OFF CANCEL IND.              0.2
         B     BA42                GO READ 1ST BLOCK - T02
         EJECT
*
**  TAPE3 - WRITE A BLOCK AND CHECK IF OPERATOR HAS ANY REQUESTS
*   ------------------------------------------------------------
BA48     BC    0,BA57              BRANCH IF T03 CLOSED
         CLI   CXD001C,X'00'       Q. HAS LAST P03 WRITE COMPLETED
         BE    BA49                A. YES, CHECK LATEST READ
         LM    R7,R8,SDD008C       RESTORE REGS FOR 'WRITE LOOP'
         B     BA52                GO CHECK IF WRITE NOW COMPLETE
BA49     L     R7,SFD004E          LOAD COUNT FOR 'WRITE LOOP'
         CHECK DECB3               CHECK T03 READ COMPLETE
         LA    R2,T03              LOAD DCB ADDR.
         L     R3,DECB3+16         LOAD IOB ADDR.
         CLC   14(2,R3),=X'0000'   Q. FULL BLOCK READ
         BE    BA50                A. YES, BYPASS INCOMPLETE BLK. RTN.
         BAL   R10,B5501           FIND NO. OF RECORDS READ (IN R7)
BA50     L     R8,SFD004F          LOAD T03 BUFFER ADDR.
BA51     WRITE DECB6,SF,P03,(R8),'S'    WRITE A BLOCK (P03)
         MVI   CXD001C,X'FF'       INDICATE 'WRITE' INITIATED
BA52     TM    DECB6,X'40'         Q. IS ECB COMPLETION BIT ON
         BO    BA53                A. YES, ISSUE 'CHECK'
         STM   R7,R8,SDD008C       SAVE REGS FOR THIS WRITE LOOP
         B     BA21                GO PROCESS NEXT TAPE
BA53     CHECK DECB6               CHECK P03 WRITE COMPLETE
         MVI   CXD001C,X'00'       INDICATE WRITE COMPLETE
         LA    R8,133(R8)          POINT TO NEXT REC.
         BCT   R7,BA51             WRITE THIS REC. - 'LOOP'
         AP    SPD003C,=P'1'       ADD 1 TO T03 BLOCK COUNT
         TM    CFW004C,X'40'       Q. ANY REPLY TO WTOR (ALL OPTIONS)
         BZ    BA56                A. NO, READ NEXT BLOCK
         BAL   R10,B5901           A. YES, GO PROCESS REPLY
BA55     BAL   R10,B5403           REISSUE WTOR (ALL OPTIONS) FOR T03
BA56     L     R8,SFD004F          LOAD T03 BUFFER ADDR.
         BAL   R10,B5301           READ A BLOCK - T03
         CLI   CXD001A,X'00'       Q. LAST P01 WRITE 'CHECKED'      0.3
         BE    BA21                A. YES, GO CHECK LATEST T01 READ 0.3
         CLI   CXD001B,X'00'       Q. LAST P02 WRITE 'CHECKED'      0.3
         BE    BA35                A. YES, GO CHECK LATEST T02 READ 0.3
         CLI   CXD001C,X'00'       Q. LAST P02 WRITE 'CHECKED'      0.3
         BE    BA48                A. YES, GO CHECK LATEST T03 READ 0.3
         WAIT  1,ECBLIST=CAD012    WAIT FOR P01/P02/P03 WRITE       0.3
         CLI   CXD001A,X'F0'       Q. T01 CLOSED                    0.3
         BE    BA31                A. YES - GO TEST WTOR (REOPEN)   0.3
         TM    DECB4,X'40'         Q. P01 WRITE DECB POSTED         0.3
         BO    BA21                A. YES, GO CHECK THIS WRITE      0.3
         CLI   CXD001B,X'F0'       Q. T02 CLOSED                    0.3
         BE    BA45                A. YES - GO TEST WTOR (REOPEN)   0.3
         TM    DECB5,X'40'         Q. P02 WRITE DECB POSTED         0.3
         BO    BA35                A. YES, GO CHECK THIS WRITE      0.3
         B     BA48                ASSUME P03 WRITE DECB POSTED     0.3
*
*
**  CHECK IF OPERATOR HAS REQUESTED T03 BE REOPENED
*   -----------------------------------------------
BA57     TM    CFW004F,X'40'       Q. ANY REPLY TO WTOR (REOPEN T03)
         BZ    BA21                A. NO, GO BACK TO T01 WRITE RTN
         NI    CFW004F,X'00'       RESET ECB
         OI    SCI001C,X'40'       ENSURE REPLY UPPER CASE
         CLI   SCI001C,C'Y'        Q. VALID REPLY - REQUEST REOPEN
         BE    BA58                A. YES, REOPEN T03
         WTO   'XM04I, INVALID REPLY TO TAPE3 REOPEN OPTION'
         BAL   R11,B6303           REISSUE NEW TAPE3 OPTION
         B     BA21                GO BACK TO T01 WRITE RTN
*
BA58     OPEN  T03                 OPEN NEW INPUT TAPE3
         MVI   CXD001C,X'00'       INDICATE T03 OPEN TO MULT WAIT   0.3
         ZAP   SPD003C,=P'0'       ZEROISE BLKCOUNT ACCUM.
         NI    BA48+1,X'0F'        RESET 'T03 CLOSED' BRANCH TO 'OPEN'
         NI    CXX001,X'DF'        SET T03 STATUS BIT TO OPEN
         TM    CXX001A,X'04'       Q. LAST TAPE3 CANCELLED          0.2
         BZ    BA56                A. NO, DONT REISSUE WTOR         0.2
         NI    CXX001A,X'FB'       SET OFF CANCEL IND.              0.2
         B     BA55                GO READ 1ST BLOCK - T03
         EJECT
*
**  BA60 - END OF JOB ROUTINE
*   -------------------------
BA60     EQU   *
         WTO   'XM04I, TO TERMINATE XM04 REPLY ''N'' TO ABOVE TAPE1 OPEX
               N MESSAGE'                                           0.1
         WAIT  ECB=CFW004D         WAIT FOR REPLY TO TAPE1 REOPEN   0.1
         NI    CFW004D,X'00'       RESET ECB                        0.1
         OI    SCI001A,X'40'       ENSURE REPLY UPPER CASE          0.1
         CLI   SCI001A,C'N'        Q. JOB TO BE TERMINATED          0.1
         BNE   BA32                A. NO, CONTINUE CHECKING REPLY   0.1
*                                                                   0.1
BA65     PROGOUT 0                 EOJ                              0.1
*
         EJECT
***********************************************************************
**  B5001 - OPEN TAPE/PRINT AND CALC RECS/BLOCK IN INPUT
**          ALSO GET MAIN STORAGE FOR INPUT BUFFER
***********************************************************************
B5001    OPEN  ((R2),(INPUT),(R3),(OUTPUT))  OPEN FILES
         SR    R6,R6               CLEAR R6
         LH    R7,DCBBLKSI         INSERT BLKSIZE IN R7
         D     R6,=F'133'          GET NO. OF RECS/BLOCK IN R7
         LH    R6,DCBBLKSI         INSERT BLKSIZE IN R6
         GETMAIN R,LV=(R6)         GET BUFFER AREA
         BR    R10                 RETURN TO INITIAL RTN.
***********************************************************************
**  B51-B53  READ MACROS FOLLOW
***********************************************************************
**  B5101 - READ T01
*   ----------------
B5101    READ  DECB1,SF,T01,(R8),'S'    READ A BLOCK - T01
         BR    R10                      RETURN TO MAIN RTN.
*
*
**  B5201 - READ T02
*   ----------------
B5201    READ  DECB2,SF,T02,(R8),'S'    READ A BLOCK - T0
         BR    R10                      RETURN TO MAIN RTN.
*
*
**  B5301 - READ T03
*   ----------------
B5301    READ  DECB3,SF,T03,(R8),'S'    READ A BLOCK - T03
         BR    R10                      RETURN TO MAIN RTN
*
***********************************************************************
**  B54 - WTOR WITH ALL OPERATOR OPTIONS (EXCEPT REOPEN A CLOSED TAPE)
***********************************************************************
B5401    EQU   *
         WTOR  'XM04D, TAPE1 - REPLY ''RES'',''SKIXXXX'',''BSPXXXX'' ORX
                ''CANCEL''',SCI007A,7,CFW004A
         BR    R10
*
B5402    EQU   *
         WTOR  'XM04D, TAPE2 - REPLY ''RES'',''SKIXXXX'',''BSPXXXX'' ORX
                ''CANCEL''',SCI007B,7,CFW004B
         BR    R10
*
B5403    EQU   *
         WTOR  'XM04D, TAPE3 - REPLY ''RES'',''SKIXXXX'',''BSPXXXX'' ORX
                ''CANCEL''',SCI007C,7,CFW004C
         BR    R10
*
***********************************************************************
**  B5501 - CALCULATE NUMBER OF RECORDS READ IN AN INCOMPLETE BLOCK
***********************************************************************
B5501    EQU   *
         SR    R6,R6               CLEAR R6 FOR DIVIDE
         LH    R7,DCBBLKSI         INSERT BLKSIZE IN R7
         SH    R7,14(R3)           SUBTRACT RESIDUAL BLOCK COUNT
         D     R6,=F'133'          FIND NO. OF RECORDS READ (IN R7)
         BR    R10                 RETURN
*
***********************************************************************
**  B5601 - CHECK WTOR SKI/BSP BLOCK NUMBER IS NUMERIC
***********************************************************************
B5601    LA    R15,4               LOAD NO. OF BYTES TO TEST
         NUMBR                     ISSUE NUMBR MACRO
         CR    R14,R15             Q. BLOCK NO. VALID NUMERIC
         BE    B6005               A. NO, ISSUE INVALID REPLY MESSAGE
         BR    R12                 A. YES, CONTINUE PROCESSING REPLY
***********************************************************************
**  B5701 - WTOR RTN FOR T01
***********************************************************************
B5701    NI    CFW004A,X'00'       RESET ECB
         LA    R2,T01              LOAD T01 DCB ADDR.
         LA    R4,SCI007A          LOAD REPLY AREA ADDR.
         LA    R6,SPD003A          ADDR. TAPE1 BLOCK COUNT
         BAL   R11,B6001           GO INTERPRET REPLY
         OI    CXX001A,X'01'       INDICATE T01 CANCELLED           0.2
*        THE FOLLOWING CODE IS EXECUTED AT EOF OR FOR A 'CANCEL' OPTION
B5702    UNPK  B5703+42(5),SPD003A TAPE1 BLOCK COUNT TO MESSAGE
         MVZ   B5703+46(1),=X'F0'  ENSURE CORRECT SIGN
         CNOP  0,4
B5703    EQU   *
         WTO   'XM04I, TAPE1 FINAL BLOCK COUNT IS XXXXX'
         CLOSE T01                 CLOSE TAPE1
         MVI   CXD001A,X'F0'       INDICATE T01 CLOSED TO MULT WAIT 0.3
         OI    BA21+1,X'F0'        SET 'T01 CLOSED' BRANCH
         OI    CXX001,X'80'        SET T01 STATUS BIT TO CLOSED
         BAL   R11,B6301           ISSUE OPERATOR OPTION TO REOPEN T01
         B     BA31                GO CHECK IF MORE TAPES TO PRINT
*
***********************************************************************
**  B5801 - WTOR RTN FOR T02
***********************************************************************
B5801    NI    CFW004B,X'00'       RESET ECB
         LA    R2,T02              LOAD T02 DCB ADDR.
         LA    R4,SCI007B          LOAD REPLY AREA ADDR.
         LA    R6,SPD003B          ADDR. TAPE2 BLOCK COUNT
         BAL   R11,B6001           GO INTERPRET REPLY
         OI    CXX001A,X'02'       INDICATE T02 CANCELLED           0.2
*        THE FOLLOWING CODE IS EXECUTED AT EOF OR FOR A 'CANCEL' OPTION
B5802    UNPK  B5803+42(5),SPD003B TAPE2 BLOCK COUNT TO MESSAGE
         MVZ   B5803+46(1),=X'F0'  ENSURE CORRECT SIGN
         CNOP  0,4
B5803    EQU   *
         WTO   'XM04I, TAPE2 FINAL BLOCK COUNT IS XXXXX'
         CLOSE T02                 CLOSE TAPE2
         MVI   CXD001B,X'F0'       INDICATE T02 CLOSED TO MULT WAIT 0.3
         OI    BA35+1,X'F0'        SET 'T02 CLOSED' BRANCH
         OI    CXX001,X'40'        SET T02 STATUS BIT TO CLOSED
         BAL   R11,B6302           ISSUE OPERATOR OPTION TO REOPEN T02
         B     BA21                GOBACK TO PROCESS T01
*
***********************************************************************
**  B5901 - WTOR RTN FOR T03
***********************************************************************
B5901    NI    CFW004C,X'00'       RESET ECB
         LA    R2,T03              LOAD T03 DCB ADDR.
         LA    R4,SCI007C          LOAD REPLY AREA ADDR.
         LA    R6,SPD003C          ADDR. TAPE3 BLOCK COUNT
         BAL   R11,B6001           GO INTERPRET REPLY
         OI    CXX001A,X'04'       INDICATE T03 CANCELLED           0.2
*        THE FOLLOWING CODE IS EXECUTED AT EOF OR FOR A 'CANCEL' OPTION
B5902    UNPK  B5903+42(5),SPD003C TAPE3 BLOCK COUNT TO MESSAGE
         MVZ   B5903+46(1),=X'F0'  ENSURE CORRECT SIGN
         CNOP  0,4
B5903    EQU   *
         WTO   'XM04I, TAPE3 FINAL BLOCK COUNT IS XXXXX'
         CLOSE T03                 CLOSE TAPE3
         MVI   CXD001C,X'F0'       INDICATE T03 CLOSED TO MULT WAIT 0.3
         OI    BA48+1,X'F0'        SET 'T03 CLOSED' BRANCH
         OI    CXX001,X'20'        SET T03 STATUS BIT TO CLOSED
         BAL   R11,B6303           ISSUE OPERATOR OPTION TO REOPEN T03
         B     BA21                GOBACK TO PROCESS T01
*
***********************************************************************
**  B6001 - INTERPRET WTOR (ALL OPTIONS) REPLY
***********************************************************************
B6001    OC    0(3,R4),=3X'40'     ENSURE 1ST 3 BYTES UPPER CASE
         CLC   0(3,R4),=C'RES'     Q. RESTART REQUIRED
         BNE   B6002               A. NO, CHECK FOR 'SKI'
         CNTRL (2),BSM             BACKSPACE TO START
         BR    R10                 RETURN TO MAIN 'WRITE' RTN
B6002    CLC   0(3,R4),=C'SKI'     Q. FORWARD SPACING REQUIRED
         BNE   B6003               A. NO, CHECK FOR 'BSP'
         LA    R14,3(R4)           ADDRESS BLOCK NO. FOR NUMERIC TEST
         BAL   R12,B5601           GO CHECK IF BLOCK NO. VALID NUMERIC
         PACK  SPD008,3(4,R4)      PACK NO. OF BLOCKS FROM REPLY
         AP    0(3,R6),SPD008+5(3) ADD TO BLOCK COUNT
         CVB   R9,SPD008           CONVERT BLOCK NO. TO BINARY
         CNTRL (2),FSR,(9)         FORWARD SPACE REQUESTED NO. OF BLKS
         BR    R10                 RETURN TO MAIN 'WRITE' RTN
B6003    CLC   0(3,R4),=C'BSP'     Q. BACKWARD SPACING REQUIRED
         BNE   B6004               A. NO, CHECK FOR 'CANCEL'
         LA    R14,3(R4)           ADDRESS BLOCK NO. FOR NUMERIC TEST
         BAL   R12,B5601           GO CHECK IF BLOCK NO. VALID NUMERIC
         PACK  SPD008,3(4,R4)      PACK NO. OF BLOCKS FROM REPLY
         SP    0(3,R6),SPD008+5(3) SUBTRACT FROM BLOCK COUNT
         CVB   R9,SPD008           CONVERT BLOCK NO. TO BINARY
         CNTRL (2),BSR,(9)         BACKSPACE REQUESTED NO. OF BLOCKS
         BR    R10                 RETURN TO MAIN 'WRITE' RTN.
B6004    OC    3(3,R4),=4X'40'     ENSURE REST OF REPLY UPPER CASE
         CLC   0(6,R4),=C'CANCEL'  Q. CANCEL REQUESTED
         BNE   B6005               A. NO, INDICATE INVALID REPLY
         BR    R11                 RETURN TO 'WTOR' RTN. (FOR CANCEL)
B6005    WTO   'XM04I, INVALID REQUEST - MESSAGE REPEATED BELOW'
         BR    R10
***********************************************************************
**  B63 - WTOR OPTION TO REOPEN A NEW TAPE
***********************************************************************
B6301    EQU   *
         WTOR  'XM04D, TAPE1 - REPLY ''Y'' TO OPEN NEW TAPE',SCI001A,1,X
               CFW004D
         BR    R11
*
B6302    EQU   *
         WTOR  'XM04D, TAPE2 - REPLY ''Y'' TO OPEN NEW TAPE',SCI001B,1,X
               CFW004E
         BR    R11
*
B6303    EQU   *
         WTOR  'XM04D, TAPE3 - REPLY ''Y'' TO OPEN NEW TAPE',SCI001C,1,X
               CFW004F
         BR    R11
*
*
*
**  STORAGE, CONSTANTS AND LITERALS TO FOLLOW
*   -----------------------------------------
CXX001   DC    X'60'     OPEN/CLOSED STATUS BITS - BIT 0 ON, T1 CLOSED
*                                                - BIT 1 ON, T2 CLOSED
*                                                - BIT 2 ON, T3 CLOSED
CXX001A  DC    X'00'     SWITCH INDICATING CANCEL/EOF FOR LAST TAPE 0.2
*                                  BIT 7 ON = LAST TAPE1 CANCELLED  0.2
*                                  BIT 6 ON = LAST TAPE2 CANCELLED  0.2
*                                  BIT 5 ON = LAST TAPE3 CANCELLED  0.2
SFD004A  DS    F                   T01 - RECS PER BLOCK
SFD004B  DS    F                   T01 - BUFFER ADDR.
SFD004C  DS    F                   T02 - RECS PER BLOCK
SFD004D  DS    F                   T02 - BUFFER ADDR.
SFD004E  DS    F                   T03 - RECS PER BLOCK
SFD004F  DS    F                   T03 - BUFFER ADDR.
*
CFW004A  DC    F'0'                ECB - WTOR TAPE1
CFW004B  DC    F'0'                ECB - WTOR TAPE2
CFW004C  DC    F'0'                ECB - WTOR TAPE3
*
SPD003A  DC    PL3'0'              T01 - BLOCK COUNT
SPD003B  DC    PL3'0'              T02 - BLOCK COUNT
SPD003C  DC    PL3'0'              T03 - BLOCK COUNT
*
SCI007A  DS    CL7                 WTOR1 - REPLY AREA
SCI007B  DS    CL7                 WTOR2 - REPLY AREA
SCI007C  DS    CL7                 WTOR3 - REPLY AREA
*
CFW004D  DC    F'0'                ECB - WTOR NEWTAPE1
CFW004E  DC    F'0'                ECB - WTOR NEWTAPE2
CFW004F  DC    F'0'                ECB - WTOR NEWTAPE3
*
SCI001A  DS    CL1                 WTOR1NEW - REPLY AREA
SCI001B  DS    CL1                 WTOR2NEW - REPLY AREA
SCI001C  DS    CL1                 WTOR3NEW - REPLY AREA
*
SPD008   DS    D                   WORK AREA FOR WTOR REPLY CONVERSION
CXD001A  DC    X'00'               WRITE COMPLETION INDICATOR (P01)
CXD001B  DC    X'00'               WRITE COMPLETION INDICATOR (P02)
CXD001C  DC    X'00'               WRITE COMPLETION INDICATOR (P03)
SDD008A  DS    2F                  SAVE AREA FOR P01 'WRITE LOOP'
SDD008B  DS    2F                  SAVE AREA FOR P02 'WRITE LOOP'
SDD008C  DS    2F                  SAVE AREA FOR P03 'WRITE LOOP'
CFD004   DC    F'1'                DEFINE 1 TIMER UNIT FOR 'STIMER'
CAD008   DC    A(DECB4)            ECBLIST FOR 2 TAPE OPTION *      0.3
         DC    X'80'                                         *      0.3
         DC    AL3(DECB5)                                    *      0.3
CAD012   DC    A(DECB4)            ECBLIST FOR 3 TAPE OPTION *      0.3
         DC    A(DECB5)                                      *      0.3
         DC    X'80'                                         *      0.3
         DC    AL3(DECB6)                                    *      0.3
         LTORG
T01      DCB   DSORG=PS,MACRF=(RC),EODAD=B5702,DDNAME=T01
T02      DCB   DSORG=PS,MACRF=(RC),EODAD=B5802,DDNAME=T02
T03      DCB   DSORG=PS,MACRF=(RC),EODAD=B5902,DDNAME=T03
P01      DCB   DSORG=PS,MACRF=(W),DDNAME=P01
P02      DCB   DSORG=PS,MACRF=(W),DDNAME=P02
P03      DCB   DSORG=PS,MACRF=(W),DDNAME=P03
         DCBD  DSORG=PS
         END
