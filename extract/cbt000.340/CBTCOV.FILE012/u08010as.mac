//IRV01 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PAS0     TITLE 'PASS 0'
PASS0    CSECT
         ENTRY SYS13
         EXTRN PASS1
         STM   14,12,12(13)       * SAVE AT CALLER
         BALR  10,0               **
         USING *,10               **
         ST    13,SYS13
         ST    13,P0SV+4          *
         LA    13,P0SV            *
         L     15,AP1             * *
         BALR  14,15              * * GO TO PASS 1
SYS13    DS    F
AP1      DC    A(PASS1)
P0SV     DC    18F'0'
         END
/*
//IRV02 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PAS1     TITLE 'PASS1'
PASS1    CSECT
         BALR  15,0
         USING *,15
         ENTRY LCF
         ENTRY PA
         ENTRY PAB
         ENTRY CARD
         EXTRN READ
         EXTRN PRINT
         EXTRN ESD
         EXTRN TXT
         EXTRN RLD
         EXTRN END
         EXTRN PASS4
         EXTRN COTR
INIT     MVC   PB+1(135),PB       INITIALIZE PROG
         L     3,ACOTR
         MVI   0(3),X'00'
         MVC   1(14,3),0(3)
SKIP     MVI   LCF,X'00'
READP    CLI   LCF,X'FF'
         BC    8,BPASS
NRP      L     14,AREAD
         CNOP  2,4
         BALR  14,14
         DC    A(CARD)
         CLI   RFG,X'FF'
         BC    8,NR
         L     14,ACOTR
         MVI   0(14),X'00'
         CLI   CARD,C'S'
         BC    8,NPRT
         CLI   CARD,C'P'
         BC    7,NP
         MVI   0(14),X'01'
         MVI   RFG,X'FF'
         BC    15,NPRT
NP       CLI   CARD,C'R'
         BC    7,NR
         MVI   0(14),X'02'
         MVI   RFG,X'FF'
NPRT     MVC   1(14,14),CARD+1
         BC    15,NRP
NR       LM    3,5,TERC
         MVI   RFG,X'FF'
COM      CLC   CARD(4),0(3)       DETERMINE TYPE
         BC    8,TERE             OF CARD
         BXLE  3,4,COM
TEER     MVC   PA(25),TERM        PRINT ERROR
         MVC   PA+30(80),CARD
         L     14,APRINT          MESSAGE
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         BC    15,READP
BPASS    L     3,APASS            CALL SECOND
         BALR  14,3               PASS
         BC    15,INIT
TERE     S     3,TERC             CALL ROUTINE TO
         LA    3,TXTA(3)
         L     3,0(3)             HANDLE CARD
         MVC   ACE(4),ACARD
         CNOP  2,4                TYPE
         BALR  14,3
ACE      DC    F'0'
         DC    A(PA)
         BC    15,READP
         DC    C'IMM='
ACARD    DC    A(CARD)
TERC     DC    A(TXTC)
         DC    F'4'
         DC    A(ENDC)
TXTC     DC    X'02'              CARD TYPES
         DC    C'TXT'
         DC    X'02'
         DC    C'ESD'
         DC    X'02'
         DC    C'RLD'
ENDC     DC    X'02'
         DC    C'END'
TXTA     DC    A(TXT)             HANDLING
         DC    A(ESD)             ROUTINES
         DC    A(RLD)
         DC    A(END)
APASS    DC    A(PASS4)
AREAD    DC    A(READ)
APRINT   DC    A(PRINT)
ACOTR    DC    A(COTR)
RFG      DC    F'0'
TERM     DC    C'**  NON-'
         DC    C'RECOGNIZ'
         DC    C'ABLE CAR'
         DC    C'D'
LCF      DC    X'00'
CARD     DS    CL80
         DC    C'READ ERR'
         DC    C'OR O'
         DC    C'CCURED. '
         DC    C'DISASSEM'
         DC    C'LE ERRO'
         DC    C'R MAY O'
         DC    C'CCUR '
PB       DC    C' '
PA       DS    CL135
PAB      DC    34C'    '
         DS    0F
         END
/*
//IRV03 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
COTR     TITLE 'COTR'
COTR     CSECT
         USING *,15
         DS    CL80
         END
/*
//IRV04 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PAS4     TITLE 'PASS4 '
PASS4    CSECT
         BALR  15,0
         USING *,15
         ENTRY ADA
         EXTRN SPPR
         EXTRN PLCB
         EXTRN ADDR
         EXTRN PRINT
         EXTRN CXN
         EXTRN PASS3
         EXTRN FTXT
         EXTRN ART
         EXTRN CDN
         EXTRN LCOM
         EXTRN PASS5
         EXTRN PROGN
         EXTRN LCT
         EXTRN ENDA
         EXTRN USING
         EXTRN BSC
         EXTRN PA
         EXTRN PAB
         EXTRN TXTS
         EXTRN TXTB
         EXTRN NEXT
         EXTRN NENT
         EXTRN CONST
         EXTRN SAVA
         EXTRN BCV
         EXTRN COTR
         EXTRN SBCZ
         EXTRN DECOMP
         EXTRN ARL
         ST    15,PAR+20
         MVI   KEY4+3,X'00'
         MVI   SIN,X'00'
         MVI   SKY,X'00'
         MVI   LEN4+2,X'00'
         L     3,COTR4
         CLI   1(3),C'D'
         BC    7,BCR
         MVI   PAS45,X'00'
BCR      BCR   0,0
         L     3,APAP4
         MVI   0(3),C' '
         MVC   1(134,3),0(3)
         L     3,PABF4
         MVI   0(3),C' '
         MVC   1(134,3),0(3)
         CLI   PAS45,X'FF'        SECOND USE OF PASS4
         BC    8,NEXN
         L     2,APAP4            YES
         L     4,ALCT4            START A
         MVC   0(4,4),FF94        NEW PAGE
         L     4,PROGA4
         MVC   64(5,2),CSECT      PRINT CSECTS
         MVC   55(8,2),0(4)
         S     4,SEV4
         MVC   0(4,4),ZZ4
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         L     3,NENT4
         LR    4,3
         L     3,0(3)
         MVC   0(4,4),ZZ4
         LA    4,4(4)
         SR    5,5
         CR    5,3
         BC    8,NEN
ESDL1    MVC   70(8,2),0(4)       RRINT ENTRIESP
         MVC   64(5,2),ENTRY
         LA    4,13(4)
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         BCT   3,ESDL1
NEN      L     3,NEXT4
         LR    4,3
         LA    4,4(4)
         L     3,0(3)
         SR    5,5
         CR    5,3
         BC    8,NEXN
ESDL2    CLI   12(4),C' '
         BC    8,REX
         CLC   12(3,4),FZ4
         BC    8,REX
         CLC   12(3,4),ZZ4
         BC    7,NEXB
REX      MVC   70(8,2),0(4)
         MVC   64(5,2),EXTRN      PRINT EXTRNS
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
NEXB     LA    4,15(4)
         BCT   3,ESDL2
NEXN     LA    2,15               DROP USING TABLR
         SR    3,3
         ST    3,LNCT
USLP     LA    3,16(3)
         STM   2,3,DRT
         L     14,US4
         STC   3,UREG+2
         CNOP  2,4
         BALR  14,14
UREG     DC    F'0'
         DC    F'0'
         DC    F'0'
         LM    2,3,DRT
         BCT   2,USLP
         MVC   PLC(4),ZZ4
         MVC   FORHF(4),ZZ4
         MVC   FFC(4),ZZ4
         MVC   ACT(4),ZZ4
         MVI   COBRG+3,X'30'
         MVC   FFAD(4),ZZ4
         MVC   COBF(4),ZZ4
         MVC   XSX(4),NXSX
         MVC   BR15+4(3),ZZ4
         MVI   FFC,X'FF'
         L     3,TXTB4
         MVC   BR15+4(3),0(3)
         L     3,AENDA
         L     4,COTR4
         CLI   7(4),C'A'
         BC    7,NAS
         MVI   FFC+1,X'FF'
         CLI   0(3),C' '
         BC    8,PFT
         MVI   BR15,X'01'
         MVC   BR15+4(3),0(3)
         BC    15,PFT
NAS      CLC   0(3,3),ZZ4
         CLC   0(3,3),FT08
         BC    8,TFTR
         CLI   0(3),C' '
         BC    8,TFTR
NBSKP    MVC   FFAD+1(3),0(3)
         L     3,TXTS4
         CLI   0(3),X'90'
         BC    8,NFT
         CLI   0(3),X'05'
         BC    8,NFT
         MVI   PLC+1,X'FF'
         MVI   KEY4+3,X'02'
         L     3,TXTS4
         CLC   16(2,3),FEH
         BC    8,TFTR
         CLI   0(3),X'47'
         BC    8,LFTXTB
         MVI   COBF,X'01'
         BC    15,LFTXTB
TFTR     L     3,TXTS4
         MVI   BR15+6,X'08'
         MVC   B15(4),ZZ4
         CLC   8(4,3),FFBR
         BC    8,PFT
         LA    3,4(3)
         L     9,XSX
         LA    9,8(9)
         ST    9,XSX
         MVI   BR15+6,X'00'
         CLC   8(4,3),FFBR
         BC    8,PFT
NFT      MVI   FFC+1,X'FF'
         MVI   BR15,X'01'
         MVI   FORHF,X'FF'
         BC    15,LFTXTB
PFT      MVI   BR15+7,X'01'
         MVI   BR15+2,X'F0'
         MVI   UREGF+2,X'F0'
         MVC   UREGF+4(3),BR15+4
         ST    3,BRT
         BAL   9,USST
         L     14,US4
         CNOP  2,4
         BALR  14,14
BR15     DC    3F'0'
         L     3,BRT
         CLI   FFC+1,X'FF'
         BC    8,LFTXTB
         MVI   FFC,X'00'
         MVI   FORHF,X'FF'
         MVI   PLC+1,X'FF'        YES
         CLI   16(3),X'58'
         BC    7,NLS7
         MVC   FFAD+2(2),18(3)    FIRST EXEC ADDRESS
         NI    FFAD+2,X'0F'
         L     5,B15
         A     5,FFAD
         LA    3,4(3)
         S     5,XSX
         SRL   5,2
         ST    5,B15
        LTR   5,5
         BC    12,NLS7
         BC    15,NLS8
NLS7     MVC   B15(4),ZZ4
NLS8     MVC   FFAD+2(2),18(3)
         NI    FFAD+2,X'0F'
         MVI   KEY4+3,X'02'       SET CONSTANT MODE
         MVC   COBRG+3(1),18(3)
         NI    COBRG+3,X'F0'
         MVC   COBA(4),ZZ4
         L     5,ALCOM4
         L     5,0(5)
         LA    5,4095(5)
         SR    4,4
         D     4,F100
         L     6,B15
         SR    6,5
         ST    6,B15
         LA    5,3(5)
         SLL   5,4
         ST    5,COBR
LNNP     L     5,COBR
         LA    5,16(5)
         ST    5,COBR
         STC   5,UREGF+2
         CLC   COBR+3(1),COBRG+3
         BC    7,OREG
         L     7,B15
         C     7,ZZ4
         BC    13,OREG
         M     6,F100
         ST    7,COBA
OREG     MVC   UREGF+4(3),COBA+1
         L     4,COBA
         A     4,F100
         ST    4,COBA
         BAL   9,USST
         BC    15,LUS4
USST     ST    9,AFTA
         XC    REGT(3),REGT
         MVC   REGT+3(1),UREGF+2
         MVC   SAVC(3),UREGF+4
         MVI   SAVC+3,X'60'
         L     14,ASAVC
         CNOP  2,4
         BALR  14,14
SAVC     DC    3F'0'
         L     14,BCV4
         CNOP  2,4
         BALR  14,14
REGT     DC    F'0'
         DC    F'0'
         L     4,APAP4
         MVC   70(8,4),SAVC
         MVC   64(6,4),USI4
         LA    5,7
         LA    3,77(4)
CEC      CLI   0(3),C' '
         BC    7,INSC
         BCTR  3,0
         BCT   5,CEC
INSC     MVI   1(3),C','
         MVC   2(2,3),REGT
         CLI   PAS45,X'FF'
         BC    8,NPCB
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
NPCB     L     9,AFTA
         BCR   15,9
LUS4     L     14,US4
         MVI   UREGF,X'01'
         MVI   UREGF+7,X'01'
         CNOP  2,4
         BALR  14,14
UREGF    DC    F'0'
         DC    F'0'
         DC    F'0'
         CLC   COBR+3(1),COBRG+3
         BC    4,LNNP
         L     4,COBA
         S     4,F100
         A     4,FFAD
         ST    4,FFAD
LFTXTB   L     14,APLCB
         MVC   4(36,14),PLC
LFTXT4   L     14,AFTXT4          TETCH TEXT
         CLI   SKY,X'01'
         BC    8,CKEN
         MVC   SKY(1),KEY4+3
         CLI   LEN4+2,X'FF'
         BC    7,BALRF
         MVI   KEY4+3,X'02'
         CNOP  6,8
BALRF    BALR  14,14
         DC    A(PA)
KEY4     DC    F'0'
         DC    F'0'
ROUT4    DC    F'0'
INST4    DC    D'0'
         DC    F'0'
         DC    F'0'
         CLI   KEY4+3,X'01'
         BC    7,NSKY
         MVI   SKY,X'01'
NSKY     MVC   KEY4+3(1),SKY
         BAL   9,AFT
         BC    15,CKK2
AFT      ST    9,AFTA
         CLI   PAS45,X'FF'        SECOND USE OF PASS4
         BC    8,CKK
         CLC   ADA(4),ZZ4         YES
         BC    8,FXN
CFF      CLI   ADA,X'FF'
         BC    8,CKK
         CLC   INST4+9(3),ADA
         BC    8,XNA
         BC    4,CKK
         CLI   ADF,X'00'
         BC    7,FXN
         CLC   NEQT(4),HUD
         BC    4,LADA
         BC    2,FXN
         L     3,APAP4
         MVC   0(24,3),EQTE
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
LADA     L     3,ADA
         SRL   3,8
         S     3,ADB
         L     4,AEQT
         MVC   1(3,4),ADB+1
         ST    3,4(4)             STORE ADDRESS
         LA    4,8(4)             IN EQUATE TABLE
         ST    4,AEQT
         L     4,NEQT
         LA    4,1(4)
         ST    4,NEQT
FXN      L     14,BART            FETCH NEXT ADDRESSP
         MVC   ADB+1(3),ADA
         MVC   ADBC(4),ADA
         CNOP  2,4
         BALR  14,14
ADA      DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         MVI   ADF,X'00'
         BC    15,CFF
XNA      MVC   CX4(3),ADA
         MVI   ADF,X'FF'
         L     14,CXN4            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14
CX4      DC    F'0'
         DC    F'0'
         DC    F'0'
         L     3,APAP4
         CLI   ADA+4,C' '
         BC    8,MVAO
         MVC   55(8,3),ADA+4
         BC    15,CKK
MVAO     MVC   55(6,3),CX4
         MVI   55(3),C'A'
CKK      L     9,AFTA
         BCR   15,9
CKK2     BC    15,LFTXT5
CKEN     XC    PAR(16),PAR
         MVC   PAR+16(4),ONE
         BAL   13,BDCM
         XC    PAR+16(4),PAR+16
         L     3,APAP4
         MVI   2(3),C' '
         MVC   3(97,3),2(3)
         CLI   PAS45,X'FF'        SECOND USE OF PASS4
         BC    8,EPS2
         MVC   INST4+9(3),COAD
COLL     CLI   ADA,X'FF'
         BC    8,NCOL
         BAL   9,AFT
         BC    15,COLL
NCOL     L     2,APAP4
         L     3,NEXT4
         LR    4,3
         LA    4,4(4)
         L     3,0(3)
         SR    5,5
         CR    5,3
         BC    8,NEXE
ESDC     CLC   12(3,4),FZ4
         BC    8,NEXBE
         CLC   12(3,4),ZZ4
         BC    8,NEXBE
         CLI   12(4),C' '
         BC    8,NEXBE
         MVC   DSA+1(3),12(4)
         MVC   64(3,2),COM4
         MVC   55(8,2),0(4)
         MVC   BC(1),0(4)
         LA    4,15(4)
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         MVC   64(2,2),DS4
         L     5,DSA
         CVD   5,DWC
         UNPK  DW4(4),DWC+4(4)
         OI    DW4+3,X'F0'
         MVC   70(4,2),DW4
         MVI   74(2),C'C'
         CLI   BC,C' '
         BC    7,PCM
         MVI   55(2),C'B'
         MVC   56(5,2),BZ5
PCM      L     14,PRINT4
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
NEXBE    BCT   3,ESDC
NEXE     BCR   0,0
         SR    3,3                YES
         C     3,NEQT
         BC    8,ENAD
         MVC   AEQT(4),AEQTI      GENERATE EQATE TABLE
         L     3,NEQT
NQB      ST    3,NEQT
         L     6,AEQT
         MVC   CX44(4),0(6)
         MVC   BCDA5(4),0(6)
         L     7,CX44
         A     7,4(6)
         ST    7,CX45
         ST    7,BCDA6
         LA    6,8(6)
         ST    6,AEQT
         CVD   5,DLC4
         UNPK  RGL4(4),DLC4+4(4)
         OI    RGL4+3,C'0'
         L     14,CXN4
         CNOP  2,4
         BALR  14,14
CX44     DC    F'0'               CONVERT TO BCD
         DC    F'0'
         DC    F'0'
         L     14,CXN4
         CNOP  2,4
         BALR  14,14
CX45     DC    F'0'
         DC    F'0'               CONVERT TO BCD
         DC    F'0'
         L     14,ABSC5
         CNOP  2,4
         BALR  14,14
BCDA5    DC    F'0'               FETCH SYMBOL
         DC    F'0'
         DC    F'0'
         L     14,ABSC5
         CNOP  2,4
         BALR  14,14
BCDA6    DC    F'0'               FETCH SYMBOL
         DC    F'0'               P
         DC    F'0'
         L     3,APAP4
         CLI   BCDA6,C' '
         BC    8,MVX45
         MVC   55(8,3),BCDA6
         BC    15,MVEQ
MVX45    MVC   55(6,3),CX45+2
         CLI   CX45+2,C'1'
         BC    8,MVCB
         MVI   55(3),C'A'
         BC    15,MVEQ
MVCB     MVI   55(3),C'B'
MVEQ     MVC   64(3,3),EQU
         CLI   BCDA5,C' '
         BC    8,MVX44
         LA    3,2(3)
         MVC   68(8,3),BCDA5
         LA    4,BCDA5+7
CLEQ     CLI   0(4),C' '
         BC    7,MVQP
         BCT   4,SQ1
SQ1      BCT   3,CLEQ
MVX44    MVC   70(6,3),CX44+2
         CLI   CX44+2,C'1'
         BC    8,MVCB2
         MVI   70(3),C'A'
         BC    15,MVQP
MVCB2    MVI   70(3),C'B'
MVQP     MVI   76(3),C'+'
         LA    5,3
         LA    4,RGL4
MQQ2     CLI   0(4),C'0'
         BC    7,MQQ
         LA    4,1(4)
         BCT   5,MQQ2
MQQ      EX    5,MVQQ
         L     14,PRINT4          PRINT EQU
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         L     3,NEQT
         BCT   3,NQB
         ST    3,NEQT
ENAD     L     3,APAP4            PRINT END
         MVC   64(3,3),ENDF4
         L     4,PROGA4
         MVC   70(8,3),0(4)
         L     14,PRINT4
         CNOP  2,4
         BALR  14,14
APAP4    DC    A(PA)
         MVI   PAS45,X'FF'
         L     3,COTR4
         MVI   2(3),X'00'
         L     3,APASS5           STOP
         BALR  14,3
EPS2     MVI   PAS45,X'00'
         SR    3,3
         ST    3,KEY4
         L     3,APASS3
         BALR  14,3
LFTXT5   MVC   RT4+8(3),INST4+9
         MVC   RT4+11(1),INST4+8
         MVC   LEN4(4),KEY4+4
         MVC   RT4(8),INST4
         L     14,ROUT4           BRANCH TO DECODING
         CNOP  6,8                ROUTINE
RF5      BALR  14,14
         DC    A(PA)
LEN4     DC    F'0'
RT4      DC    D'0'
         DC    F'0'
         CLI   SIN,X'01'
         BC    8,GONE
         MVC   FPTL(8),KEY4
         MVC   FPTL+8(12),INST4
         MVC   FPTL+20(8),LEN4
         MVC   FPTL+28(4),ROUT4
         CLC   RT4(4),IMM
         BC    7,SPRT
         MVI   SIN,X'01'
         MVI   KEY4+3,X'02'
         MVI   FPTL+3,X'02'
SPRT     L     14,ASPPR
         CNOP  2,4
         BALR  14,14
FPTL     DC    8F'0'
         DC    F'0'
         MVC   KEY4(8),FPTL
         MVC   LEN4(4),FPTL+20
         CLI   FPTL+28,X'01'
         BC    8,LFTXT4
         CLI   FPTL+28,X'02'
         BC    7,GONE
         L     14,ROUTC
         ST    14,ROUT4
         BC    15,RF5
GONE     LA    13,RETD
         MVC   PAR+1(3),INST4+9
         MVC   PAR+4(8),INST4
         MVC   PAR+12(4),ONE
         CLC   ROUT4(4),ACONST
         BC    7,CARL
         XC    PAR+12(4),PAR+12
         BC    15,BDCM
CARL     CLC   ROUT4(4),AARL
         BC    7,BDCM
         MVC   PAR+12(4),X84
         L     1,ASBCZ
         CLI   0(1),X'FF'
         BC    8,BDCM
         MVC   PAR+13(3),ASBCZ+1
BDCM     L     15,ADECO
         CNOP  2,4
         BALR  1,15
PAR      DC    6F'0'
RETD     CLI   PAS45,X'FF'
         BC    8,LFTXT4
         L     3,APAP4
         CLI   64(3),C' '
         BC    8,LSPK
         L     4,LNCT             LINE COUNT
         LA    4,1(4)
         ST    4,LNCT
         MVC   47(6,3),NED
         CVD   4,DLC
         ED    47(6,3),DLC+5
         L     14,PRINT4
         CNOP  2,4                PRINT A LINE
         BALR  14,14
         DC    A(PA)
LSPK     L     3,PABF4
         CLI   0(3),X'FF'         IS SECOND LINE
         BC    7,LFTXT4           TO BE PRINTED
         CLI   3(3),C' '          YES
         BC    8,LPA4
         MVI   0(3),C' '
         MVC   CD5+3(5),3(3)
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14
CD5      DC    C'0000'
         DC    F'0'
         DC    F'0'
         L     3,PABF4
         MVC   INST4+9(3),CD5+5
         BAL   9,AFT
LPA4     L     4,APAP4
         L     3,PABF4
         MVC   55(8,3),55(4)
         MVC   1(90,4),0(4)
         MVI   0(3),C' '
         L     4,LNCT
         LA    4,1(4)
         ST    4,LNCT
         MVC   47(6,3),NED
         CVD   4,DLC
         ED    47(6,3),DLC+5
         L     14,PRINT4          PRINT A LINE
         CNOP  2,4
         BALR  14,14
PABF4    DC    A(PAB)
         BC    15,LFTXT4
MVQQ     MVC   77(1,3),0(4)
IMM      DC    C'IMM='
HUD      DC    F'99'
FF94     DC    F'59'
COTR4    DC    A(COTR)
ALCT4    DC    A(LCT)
DRT      DC    D'0'
DLC      DC    D'0'
LNCT     DC    F'0'
AFTXT4   DC    A(FTXT)
STW4     DC    F'1'
SEV4     DC    F'7'
FZ4      DC    X'000004'
PRINT4   DC    A(PRINT)
PROGA4   DC    A(PROGN)
US4      DC    A(USING)
ASPPR    DC    A(SPPR)
APLCB    DC    A(PLCB)
NED      DC    X'402020202121'
APASS5   DC    A(PASS5)
ENDF4    DC    C'END '
APASS3   DC    A(PASS3)
CXN4     DC    A(CXN)
ABSC5    DC    A(BSC)
BART     DC    A(ART)
XSX      DC    F'96'
B15      DC    F'0'
ZZ4      DC    F'0'
AEQTI    DC    A(EQT)
AEQT     DC    A(EQT)
NEQT     DC    F'0'
DLC4     DC    D'0'
RGL4     DC    F'0'
EQU      DC    C'EQU '
AFTA     DC    F'0'
ALCOM4   DC    A(LCOM)
EQTE     DC    C'**  MORE'
         DC    C' THAN 99'
         DC    C'EQUATES '
ADB      DC    F'0'
FT08     DC    X'000008'
ADBC     DC    F'0'
ADF      DC    F'0'
EXTRN    DC    C'EXTRN'
ENTRY    DC    C'ENTRY'
CSECT    DC    C'CSECT'
NENT4    DC    A(NENT)
NEXT4    DC    A(NEXT)
TXTB4    DC    A(TXTB)
TXTS4    DC    A(TXTS)
AENDA    DC    A(ENDA)
FFBR     DC    X'90ECD00C'
SKY      DC    F'0'
BRT      DC    F'0'
ACDN     DC    A(CDN)
ROUTC    DC    A(CONST)
ASAVC    DC    A(SAVA)
BCV4     DC    A(BCV)
USI4     DC    C'USING '
COM4     DC    C'COM '
DS4      DC    C'DS  '
NXSX     DC    F'60'
SIN      DC    F'0'
FEH      DC    X'9847'
COAD     DC    X'FFFFFF00'
DSA      DC    F'0'
DWC      DC    D'0'
DW4      DC    F'0'
BC       DC    F'0'
BZ5      DC    C'00000'
F100     DC    F'4096'
COBR     DC    F'0'
PLC      DC    F'0'
COBRG    DC    F'48'
COBA     DC    F'0'
ACT      DC    F'0'
COBF     DC    F'0'
FFAD     DC    F'0'
FFC      DC    F'0'
FORHF    DC    F'0'
PAS45    DC    X'FF000000'
ACONST   DC    A(CONST)
AARL     DC    A(ARL)
ADECO    DC    A(DECOMP)
ONE      DC    F'1'
X84      DC    X'84000000'
ASBCZ    DC    A(SBCZ)
EQT      DS    100D
         END
/*
//IRV05 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PAS3     TITLE 'PASS3'
PASS3    CSECT
         BALR  15,0
         USING *,15
         EXTRN COTR
         EXTRN AST
         EXTRN NENT
         EXTRN NAST
         EXTRN SAVA
         EXTRN PRINT
         EXTRN PA
         EXTRN READ
         EXTRN PUNCH
         EXTRN PASS4
         EXTRN NAVBS
         EXTRN AST4
         EXTRN CXN
         EXTRN BSC
         L     3,NENT3
         SR    2,2
         C     2,0(3)
         BC    8,PSLP3
         LA    4,14(3)
         L     3,0(3)
EYLP     STM   3,4,TP33
         MVC   SAVZ33(3),0(4)
         MVI   SAVZ33+3,X'60'
         L     14,SAVP3
         CNOP  2,4
         BALR  14,14
SAVZ33   DC    F'0'
         DC    F'0'
         DC    F'0'
         LM    3,4,TP33
         LA    4,13(4)
         BCT   3,EYLP
PSLP3    L     3,LOOP
         SR    2,2
         C     2,0(3)
         BC    8,LPS6
         LR    4,3
         S     4,FOUR
         MVI   0(4),X'FF'
         MVC   NEL(4),0(3)
         SR    4,4
         ST    4,0(3)
         LA    3,4(3)
         ST    3,LOOP
         ST    3,AB
         ST    3,BB
         L     4,NEL
         SLL   4,2
         AR    3,4
         ST    3,LAB
         ST    3,LB
         S     3,LOOP+4
         ST    3,LOOP+8
         LA    3,B
         AR    3,4
         ST    3,LA
         MVC   AA34(4),AB
         MVC   AA5(4),AA33
         LA    3,1
         C     3,NEL
         BC    11,A9
         LM    1,3,LOOP
A12      CLC   0(4,1),4(1)        ONE PASS BUBBLE SORT
         BC    13,A13
         MVC   TEP(4),0(1)
         MVC   0(4,1),4(1)
         MVC   4(4,1),TEP
A13      BXLE  1,2,A12
         MVI   FL,X'00'
         LA    3,2
         C     3,NEL
         BC    8,A9
         LA    4,8
A8       MVC   LN2(4),AB          SORT-MERGE
         L     3,AA33
A7       L     1,LN2
         C     1,LAB
         BC    8,A9
         LR    6,1
         S     6,FOUR
         C     6,AB
         BC    4,A10
         CLC   0(4,6),0(1)
         BC    13,A10
         MVI   FL,X'01'
A10      LR    2,1
         AR    2,4
         ST    2,LN1
         C     2,LAB
         BC    4,A2
         MVC   LN1(4),LAB
         MVC   LN2(4),LAB
         BC    15,A5
A2       LR    5,2
         C     6,AB
         BC    4,A11
         CLC   0(4,6),0(5)
         BC    13,A11
         MVI   FL,X'01'
A11      AR    5,4
         ST    5,LN2
         C     5,LAB
         BC    4,A3
         MVC   LN2(4),LAB
A3       CLC   0(4,1),0(2)
         BC    2,A1
         MVC   0(4,3),0(1)
         A     1,FOUR
         LA    3,4(3)
         C     1,LN1
         BC    8,A4
         BC    15,A3
A1       MVC   0(4,3),0(2)
         A     2,FOUR
         LA    3,4(3)
         C     2,LN2
         BC    8,A5
         BC    15,A3
A5       LR    2,1
         L     1,LN1
         BC    15,A6
A4       L     1,LN2
A6       MVC   0(4,3),0(2)
         A     2,FOUR
         LA    3,4(3)
         CR    1,2
         BC    7,A6
         MVC   AA5(4),AB
         MVC   AA34(4),AA33
         BC    15,A7
A9       CLI   FL,X'00'
         BC    7,NP4
         LA    3,1
         C     3,NEL
         BC    11,LPS4
         L     3,NEL
         BCT   3,SNL1
SNL1     L     1,AA34
         L     2,AA34
         LA    4,1
DLLP     CLC   0(3,1),4(2)        REMOVE DUPLICATE
         BC    8,NDL              ADDRESSES
         MVC   TEMS(4),4(2)
         MVC   4(4,1),TEMS
         LA    4,1(4)
         LA    1,4(1)
NDL      LA    2,4(2)
         BCT   3,DLLP
         C     4,PS500
         BC    4,PSVV
         L     4,SPAP3
         MVC   0(24,4),LBEM
         L     14,PPRT3
         CNOP  2,4
         BALR  14,14
SPAP3    DC    A(PA)
         L     4,PS500
PSVV     ST    4,NEL
LPS4     L     4,NEL
         L     5,AA34
         L     6,AA5
         L     3,SCOT
         CLI   0(3),X'01'
         BC    7,LPS5             PUNCHED
PLP      MVC   CX3(4),0(5)        YES
         MVC   0(8,6),BL48
         LA    6,8(6)
         STM   4,6,PLP45
         L     3,CX3
         SRL   3,28
         LA    3,193(3)
         STC   3,ADPN+9
         L     14,CXN3            VONVERT TO BCD
         CNOP  2,4
         BALR  14,14
CX3      DC    F'0'
         DC    F'0'
         DC    F'0'
         MVC   ADPN+10(5),CX3+1
         L     14,APUN            PUNCH ADDRESS
         CNOP  2,4
         BALR  14,14
         DC    A(ADPN)
         LM    4,6,PLP45
         LA    5,4(5)
         BCT   4,PLP
         LA    2,2
         MVC   ADPN+9(6),BEND
RPEN     L     14,APUN
         CNOP  2,4
         BALR  14,14
         DC    A(ADPN)
         MVI   ADPN,C' '
         MVC   ADPN+1(79),ADPN
         BCT   2,RPEN
         BC    15,LPS6
LPS5     L     3,SCOT
         CLI   0(3),X'02'
         BC    7,LPS8             READ
         L     14,BREAD           YES
         CNOP  2,4                READ
         BALR  14,14
         DC    A(ADPN)
LPS8     MVC   CXR3(4),0(5)
         MVC   ABC+3(1),0(5)
         STM   4,6,PLP45
         L     14,CXN3            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14
CXR3     DC    F'0'
         DC    F'0'
         DC    F'0'
         LM    4,6,PLP45
         LA    5,4(5)
         MVC   0(8,6),BL48
         L     3,SCOT
         CLI   0(3),X'02'
         BC    7,LPS7
         CLC   ADPN+10(5),CXR3+1
         BC    7,LPS7
         L     3,ABC
         LA    3,193(3)
         STC   3,ABC+3
         CLC   ABC+3(1),ADPN+9
         BC    7,LPS7
         MVC   0(8,6),ADPN        STORE SYMBOL IN
         LA    6,8(6)             TABLE
         L     14,BREAD           READ
         CNOP  2,4
         BALR  14,14
         DC    A(ADPN)
         CLC   ADPN+9(3),BEND
         BC    7,BLPS8
         CLI   ADPN,X'02'
         BC    7,BLPS8
         L     3,SCOT
         MVI   0(3),X'00'
BLPS8    BCT   4,LPS8
         BC    15,LPS6
LPS7     LA    6,8(6)
         BCT   4,LPS8
LPS6     L     4,ASTA
         MVC   0(4,4),4(4)
         L     4,NAV
         MVC   0(4,4),AA34
         MVC   4(4,4),NEL
         MVC   8(4,4),AA5
         L     4,NAVS
         MVC   0(4,4),AA34
         MVC   4(4,4),NEL
         MVC   8(4,4),AA5
         L     3,NENT3       SPECIAL PATCH TO PUT
         SR    2,2           ENTRIES IN SYMBOL
         C     2,0(3)        TABLE
         BC    8,LPS9
         LA    4,4(3)
         L     3,0(3)
EXLP     STM   3,4,TP33
         MVI   BSCL,X'00'
         MVC   BSCL+1(3),10(4)
         ST    13,BSCL+8
         L     14,ABSC
         CNOP  2,4
         BALR  14,14
BSCL     DC    3F'0'
         L     4,TP33+4
         MVC   0(8,3),0(4)   REG 3 IN BSC POINTS TO SYMBOL TABLE
         L     3,TP33        THIS IS SUPPOSED TO BE A TEMPORARY PATCH
         LA    4,13(4)       4/28/67
         BCT   3,EXLP        END OF PATCH
LPS9     L     3,APASS4
         BCR   15,3
NP4      MVI   FL,X'00'
         AR    4,4
         MVC   AB(4),AA33
         MVC   AA33(4),BB
         MVC   BB(4),AB
         MVC   LAB(4),LA
         MVC   LA(4),LB
         MVC   LB(4),LAB
         BC    15,A8
         DC    C'IMM='
AA5      DC    F'0'
PLP45    DC    D'0'
         DC    F'0'
BREAD    DC    A(READ)
APASS4   DC    A(PASS4)
CXN3     DC    A(CXN)
ABSC     DC    A(BSC)
APUN     DC    A(PUNCH)
SAVP3    DC    A(SAVA)
SCOT     DC    A(COTR)
ABC      DC    F'0'
PS500    DC    F'500'
PPRT3    DC    A(PRINT)
NENT3    DC    A(NENT)
TP33     DC    2F'0'
ASTA     DC    A(AST)
AA34     DC    F'0'
TEMS     DC    F'0'
NAV      DC    A(AST4)
NAVS     DC    A(NAVBS)
LOOP     DC    A(NAST)
         DC    F'8'
         DC    F'0'
AB       DC    F'0'
AA33     DC    A(B)
BB       DC    F'0'
FOUR     DC    F'4'
LA       DC    F'0'
LAB      DC    F'0'
LB       DC    F'0'
LN1      DC    F'0'
LN2      DC    F'0'
NEL      DC    F'0'
TEP      DC    F'0'
FL       DC    X'00'
LBEM     DC    C'**  '
         DC    C'MORE THA'
         DC    C'N 500 '
         DC    C'LABELS'
BL48     DC    C'        '
BEND     DC    C'END     '
ADPN     DC    20C'    '
B        DS    500D
         END
/*
//IRV06 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PAS5     TITLE 'PASS5  (WITH SYSTEM RETURN)               JULY 27,1967'
PASS5    CSECT
         ENTRY EXIT
         EXTRN COUNT
         EXTRN PRDCB,RDDCB,PUDCB,DADCB
         EXTRN SYS13
         BALR  11,0
         USING *,11
         STM   14,12,P5SV+12
         ST    13,P5SV+4          SAVE HERE POINTER
         LA    13,P5SV
         L     15,ACNT
         BALR  14,15              GO TO COUNT
EXIT     BALR  11,0
         USING *,11
         CLOSE (PRDCB,,RDDCB,,PUDCB,,DADCB)
         L     12,A
         L     13,0(12)      LOAD SYSTEM SAVE AREA
         LM    14,12,12(13)
         BCR   15,14         RETURN CONTROL TO SYSTEM
ACNT     DC    A(COUNT)
A        DC    A(SYS13)
P5SV     DC    18F'0'
         END
/*
//IRV07 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ESD      TITLE 'ESD'
ESD      CSECT
         BALR  13,0
         USING *,13
         EXTRN SCNE
         EXTRN PRINT
         EXTRN ESD0
         EXTRN ESD1
         EXTRN ESD2
         EXTRN ESD5
         ST    13,ESD13
         L     1,0(14)
         MVC   ESC+2(2),10(1)
         L     4,ASCNE
         MVC   2(2,4),14(1)
         CLC   0(4,4),C01
         BC    7,COM3
         MVI   3(4),X'02'
COM3     LM    3,5,ESDB
         L     2,4(14)
COME     CLC   24(1,1),0(3)       SLEECT
         BC    8,BESD             ESD
         BXLE  3,4,COME           SUBROUTINE
ESD3     MVC   0(20,2),ESDI       ERROR MESSAGE
         ST    14,ESD14
         MVC   EPA(4),4(14)
         L     14,EPRINT
         CNOP  2,4
         BALR  14,14
EPA      DC    F'0'
         L     14,ESD14
         BC    15,8(14)
BESD     S     3,ESDB
         LA    3,AESD(3)
         L     3,0(3)
         CNOP  2,4
         BALR  11,3               BRANCH TO SUBR
         L     13,8(11)
         BC    15,AS13
ESD13    DC    F'0'
AS13     L     1,0(14)
         LA    1,16(1)
         ST    1,0(14)
         L     3,ESC
         S     3,SI6
         ST    3,ESC
         BC    2,COM3
         BC    15,8(14)
         DC    C'IMM='
ASCNE    DC    A(SCNE)
EPRINT   DC    A(PRINT)
AESD     DC    A(ESD5)
         DC    A(ESD2)
         DC    A(ESD1)
         DC    A(ESD0)
         DC    A(ESD5)
         DC    A(ESD2)
         DC    A(ESD1)
         DC    A(ESD0)
ESDB     DC    A(N02)
         DC    F'4'
         DC    A(N00)
ESD14    DC    F'0'
N02      DC    X'05000000'
         DC    X'02000000'
         DC    X'01000000'
         DC    X'00000000'
         DC    X'F5000000'
         DC    X'F2000000'
         DC    X'F1000000'
N00      DC    X'F0000000'
SI6      DC    F'16'
ESC      DC    F'0'
C01      DC    F'1'
ESDI     DC    C'**  ILLE'
         DC    C'GAL ESD '
         DC    C'CARD'
         DS    0F
         END
/*
//IRV08 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ESD0     TITLE 'ESD0 '
ESD0     CSECT
         BALR  13,0
         USING *,13
         ENTRY NPROG
         ENTRY PROGN
         EXTRN CXN
         EXTRN PRINT
         ST    13,XL+8
         ST    14,T14
         ST    2,PRL
         STM   1,5,R15
         L     3,NPROG
         LA    3,1(3)
         ST    3,NPROG
         SLL   3,4
         A     3,APROGL
         L     1,0(14)
         L     2,4(14)
         MVC   0(3,3),29(1)
         MVC   3(8,3),16(1)
         MVC   11(3,3),25(1)
         MVC   14(2,3),14(1)
         MVI   XL,X'00'
         MVC   XL+1(3),25(1)
         BAL   12,LCX
         MVC   ST(6),XL+2
         L     1,R15
         MVI   XL,X'00'
         MVC   XL+1(3),29(1)
         BAL   12,LCX
         MVC   LE(6),XL+2
         L     2,PRL
         MVC   1(37,2),BEG
         L     14,EPRT0
         CNOP  2,4
         BALR  14,14
PRL      DC    F'0'
         LM    1,5,R15
         L     14,T14
         BC    15,0(11)
LCX      L     14,ACXN
         CNOP  2,4
         BALR  14,14
XL       DC    3F'0'
         BCR   15,12
         DC    C'IMM='
T14      DC    F'0'
R15      DC    5F'0'
BEG      DC    C'START '
ST       DC    C'      '
         DC    C'    '
         DC    C'LENGTH '
LE       DC    C'      '
         DC    C'   (HEX)'
ACXN     DC    A(CXN)
EPRT0    DC    A(PRINT)
APROGL   DC    A(PROGL-16)
ES014    DC    F'0'
NPROG    DC    F'0'
PROGL    DS    3CL1
PROGN    DS    8CL1
PROGB    DS    3CL1
PROGS    DS    2CL1
         DS    14CL16
         END
/*
//IRV09 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ESD1     TITLE 'ESD1 '
ESD1     CSECT
         BALR  13,0
         USING *,13
         ENTRY NENT
         EXTRN PRINT
         L     3,NENT
         LA    3,1(3)
         ST    3,NENT
         LA    2,13
         MR    2,2
         A     3,AENT
         L     1,0(14)
         L     2,4(14)
         MVC   0(8,3),16(1)
         MVC   8(2,3),29(1)
         MVC   10(3,3),25(1)
         BC    15,0(11)
         DC    C'IMM='
EPRT1    DC    A(PRINT)
AENT     DC    A(ENTN-13)
ES114    DC    F'0'
NENT     DC    F'0'
ENTN     DS    8CL1
ENTS     DS    2CL1
ENTA     DS    3CL1
         DS    14CL15
         DS    0F
         END
/*
//IRV10 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ESD2     TITLE 'ESD2'
ESD2     CSECT
         BALR  13,0
         USING *,13
         ENTRY SCNE
         ENTRY NEXT
         EXTRN PRINT
         L     3,NEXT
         LA    3,1(3)
         C     3,TWED
         BC    4,ARESD
         BCR   2,11
         L     1,4(14)
         MVC   ESDP2(4),4(14)
         MVC   0(36,1),ESDM2
         ST    14,ES214
         L     14,EPRT2
         CNOP  2,4
         BALR  14,14
ESDP2    DC    F'0'
         L     14,ES214
ARESD    ST    3,NEXT
         LA    2,15
         MR    2,2
         A     3,AEXT
         L     1,0(14)
         MVC   8(2,3),SCNE+2
         L     4,SCNE
         LA    4,1(4)
         ST    4,SCNE
         L     2,4(14)
         MVC   0(8,3),16(1)
         MVC   12(3,3),29(1)
         MVC   11(1,3),24(1)
         BC    15,0(11)
         DC    C'IMM='
TWED     DC    F'30'
ESDM2    DC    C'**  '
         DC    C'MORE THA'
         DC    C'N 29 EXT'
         DC    C'ERN REFE'
         DC    C'RENCES  '
EPRT2    DC    A(PRINT)
AEXT     DC    A(EXTN-15)
SCNE     DC    F'0'
ES214    DC    F'0'
NEXT     DC    F'0'
EXTN     DS    8CL1
EXTS     DS    2CL1
         DS    2CL1
         DS    3CL1
         DS    30CL15
         DS    0F
         END
/*
//IRV11 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ESD5     TITLE 'ESD5 '
ESD5     CSECT
         BALR  13,0
         USING *,13
         ENTRY LCOM
         EXTRN ESD2
         CLI   15(1),X'02'
         BC    7,NCOM
         MVC   LCOM+1(3),29(1)
NCOM     L     13,AES2
         BALR  13,13
         BC    15,0(11)
         DC    C'IMM='
AES2     DC    A(ESD2)
LCOM     DC    F'0'
         END
/*
//IRV12 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
RLD      TITLE 'RLD '
RLD      CSECT
         BALR  13,0
         USING *,13
         ENTRY NBR
         EXTRN PA
         EXTRN PRINT
         CLC   NBR(4),RL200
         BC    4,SRLD
         CLI   ORL,X'FF'
         BC    8,8(14)
         ST    14,RL14
         L     3,LDPG
         MVC   0(27,3),RLDER
         L     14,XRPT
         CNOP  2,4
         BALR  14,14
LDPG     DC    A(PA)
         MVI   ORL,X'FF'
         L     14,RL14
SRLD     L     3,NRLD
         L     1,0(14)
         MVC   MRLD+1(1),11(1)
MRLD     MVC   0(1,3),16(1)
         MVC   MRR+3(1),11(1)
         A     3,MRR
         ST    3,NRLD
         L     3,MRR
         A     3,NBR
         ST    3,NBR
         BC    15,8(14)
XRPT     DC    A(PRINT)
RL14     DC    F'0'
RL200    DC    F'1940'
RLDER    DC    C'**  '
         DC    C'MORE THA'
         DC    C'N 250 '
         DC    C'RLD CARD'
         DC    C'S '
ORL      DC    X'00'
NRLD     DC    A(RLDA)
NRLDN    DC    A(RLDA)
MRR      DC    F'0'
NBR      DC    F'0'
RLDA     DS    250CL8
         DS    0F
         END
/*
//IRV13 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
RR       TITLE ' RR '
RR       CSECT
         BALR  13,0
         USING *,13
         EXTRN PAB
         EXTRN USING
         EXTRN BCV
         ST    14,RR14
         MVC   RG+3(1),9(14)
         MVC   CRR+3(1),9(14)
         MVC   RG(3),Z3
         CLI   8(14),X'0A'        SVC INSTR
         BC    8,DEC              BRANCH IF YES
         L     14,ABCV            CONVERT REGISTER TO
         ST    13,RG+4            BCD
         CNOP  2,4
         BALR  14,14
RG       DC    F'0'
         DC    F'0'
         L     14,RR14
         L     3,0(14)
         MVC   70(2,3),RG
         CLI   RG,C'0'
         BC    7,RRZ
         MVC   70(1,3),RG+1
         MVI   71(3),C' '
         BCT   3,RRZ
RRZ      CLI   8(14),X'04'        SPM INSTR
         BC    8,RET
         MVI   72(3),C','         NO
         MVC   73(2,3),RG+2
         CLI   RG+2,C'0'
         BC    7,RRZ2
         MVC   73(1,3),RG+3
         MVI   74(3),C' '
RRZ2     CLI   8(14),X'05'        BALR INST
         BC    7,RET
         CLC   RG+2(2),ZER
         BC    7,RET
         CLC   RG(2),ZER
         BC    8,RET
         L     3,PCR
         MVC   64(8,3),US
         MVI   0(3),X'FF'
         MVC   72(2,3),RG
         MVC   CRR+4(4),16(14)
         MVC   CRR+2(1),9(14)
         MVI   CRR,X'01'
         L     3,CRR+4
         A     3,F12
         ST    3,CRR+4
         L     14,AUSI            ENTER IC IN USING
         ST    13,CRR+8           TABLE
         CNOP  2,4
         BALR  14,14
CRR      DC    F'0'
         DC    F'0'
         DC    F'0'
         BC    15,RET
DEC      L     3,RG
         CVD   3,RGD
         L     3,0(14)
         UNPK  70(2,3),RGD+6(2)
         OI    71(3),C'0'
RET      L     14,RR14            RETURN
         BAL   14,20(14)
         DC    C'IMM='
ABCV     DC    A(BCV)
AUSI     DC    A(USING)
PCR      DC    A(PAB)
INSTR    DC    C'  '
RGD      DC    D'0'
RR14     DC    F'0'
F12      DC    F'512'
Z3       DC    F'0'
ZER      DC    X'F0F0'
US       DC    C'USING *,'
         DS    0F
         END
/*
//IRV14 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
RX       TITLE 'RX '
RX       CSECT
         BALR  13,0
         USING *,13
         EXTRN BCV
         EXTRN ADDR
         ST    14,RX14
         MVC   RADX+15(1),19(14)
         SR    2,2
         ST    2,RXG
         MVC   RADX+8(4),0(14)
         MVC   RXG+3(1),9(14)
         L     14,BCVX            CONVERT REGISTER
         ST    13,RXG+4           AND INCEX
         CNOP  2,4
         BALR  14,14
RXG      DC    F'0'
         DC    F'0'
         L     14,RX14
         SR    2,2
         ST    2,RADX
         ST    2,RADX+4
         MVC   RADX+2(2),10(14)
         MVC   RADX+6(2),RXG+2
         L     14,ADDX            FIND ADDRESS
         ST    13,RADX+16
         CNOP  6,8
         BALR  14,14
RADX     DC    D'0'
         DC    D'0'
         DC    F'0'
         L     14,RX14
         L     4,0(14)
         CLI   RXG,C'0'
         BC    7,RX1
         MVC   70(1,4),RXG+1
         S     4,RONE
         BC    15,RX2
RX1      MVC   70(2,4),RXG
RX2      MVI   72(4),C','
         L     3,RADX+12
         S     3,RONE
         EX    3,MVR
         BAL   14,20(14)          RETURN
MVR      MVC   73(1,4),RADX
         DC    C'IMM='
ADDX     DC    A(ADDR)
BCVX     DC    A(BCV)
RX14     DC    F'0'
RONE     DC    F'1'
         END
/*
//IRV15 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
RS       TITLE 'RS '
RS       CSECT
         BALR  13,0
         USING *,13
         EXTRN BCV
         EXTRN ADDR
         ST    14,RS14
         MVC   RSG+15(1),19(14)
         SR    2,2
         ST    2,RSG
         ST    2,RSG+4
         MVC   RSG+8(4),0(14)
         MVC   RSG+2(2),10(14)
         MVI   RSG+4,X'01'
         ST    13,RSA+4
         SR    2,2
         ST    2,RSA
         MVC   RSA+3(1),9(14)
         L     14,BCVS            FIND REGISTERS
         CNOP  2,4
         BALR  14,14
RSA      DC    F'0'
         DC    F'0'
         L     14,ADDS            FIND ADDRESS
         ST    13,RSG+16
         CNOP  6,8
         BALR  14,14
RSG      DC    D'0'
         DC    D'0'
         DC    F'0'
         L     14,RS14
         L     4,0(14)
         CLI   RSA,C'0'
         BC    7,RS1
         MVC   70(1,4),RSA+1
         S     4,RSONE
         BC    15,RS2
RS1      MVC   70(2,4),RSA
RS2      MVI   72(4),C','
         CLI   19(14),X'31'
         BC    8,RSOV
         CLI   RSA+2,C'0'
         BC    7,RS3
         MVC   73(1,4),RSA+3
         S     4,RSONE
         BC    15,RS4
RS3      MVC   73(2,4),RSA+2
RS4      MVI   75(4),C','
         LA    4,3(4)
RSOV     L     3,RSG+12
         S     3,RSONE
         EX    3,MVS
         BAL   14,20(14)
MVS      MVC   73(1,4),RSG
         DC    C'IMM='
BCVS     DC    A(BCV)
ADDS     DC    A(ADDR)
RS14     DC    F'0'
RSONE    DC    F'1'
         END
/*
//IRV16 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
SI       TITLE 'SI '
SI       CSECT
         BALR  13,0
         USING *,13
         EXTRN ADDR
         EXTRN CXN
         ST    14,SI14
         MVC   SIG+15(1),19(14)
         SR    2,2
         ST    2,SIG
         ST    2,SIG+4
         MVC   SIG+2(2),10(14)
         MVI   SIG+4,X'01'
         MVC   SIG+8(4),0(14)
         MVC   CII(1),9(14)
         ST    13,CII+8
         L     14,CXNI            FIND IMMEDIATE
         CNOP  6,8                OPERAND
         BALR  14,14
CII      DC    D'0'
         DC    F'0'
         L     14,ADDI            FIND ADDRESS
         ST    13,SIG+16
         CNOP  6,8
         BALR  14,14
SIG      DC    D'0'
         DC    D'0'
         DC    F'0'
         L     14,SI14
         L     4,0(14)
         L     3,SIG+12
         S     3,IONE
         EX    3,MVI
         CLI   19(14),X'41'
         BC    8,SIET
         AR    4,3
         MVC   71(3,4),CX
         MVC   74(2,4),CII
         MVI   76(4),X'7D'
SIET     BAL   14,20(14)
MVI      MVC   70(1,4),SIG
         DC    C'IMM='
ADDI     DC    A(ADDR)
CXNI     DC    A(CXN)
IONE     DC    F'1'
CX       DC    C',X'
         DC    X'7D40'
SI14     DC    F'0'
         END
/*
//IRV17 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
SS       TITLE 'SS '
SS       CSECT
         BALR  13,0
         USING *,13
         EXTRN ADDR
         ST    14,SS14
         MVC   SSD+15(1),19(14)
         MVC   SSD2+15(1),19(14)
         SR    3,3
         IC    3,9(14)
         CLI   19(14),X'50'
         BC    8,DSS
         SRL   3,4
DSS      LA    3,1(3)
         CVD   3,SWA
         UNPK  SWB(4),SWA+4(4)
         OI    SWB+3,C'0'
         SR    2,2
         ST    2,SSD
         ST    2,SSD+4
         MVC   SSD+2(2),10(14)
         MVC   SSD+5(3),SWB+1
         MVC   SSD+8(4),0(14)
         ST    13,SSD+16
         L     14,ADDSS           FIND FIRST ADDRESS
         CNOP  6,8
         BALR  14,14
SSD      DC    D'0'
         DC    D'0'
         DC    F'0'
         L     14,SS14
         L     4,0(14)
         L     3,SSD+12
         S     3,SSONE
         EX    3,MVSS
         SR    2,2
         ST    2,SSD2
         ST    2,SSD2+4
         MVC   SSD2+2(2),12(14)
         MVC   SSD2+8(4),0(14)
         AR    4,3
         ST    4,SAP
         MVI   71(4),C','
         ST    13,SSD2+16
         MVI   SSD2+4,X'01'
         CLI   19(14),X'50'
         BC    8,DSS2
         IC    3,9(14)
         SLL   3,28
         SRL   3,28
         LA    3,1(3)
         CVD   3,SWA
         UNPK  SWB(4),SWA+4(4)
         OI    SWB+3,C'0'
         MVC   SSD2+6(2),SWB+2
         MVI   SSD2+4,X'00'
DSS2     L     14,ADDSS           FIND SECOND ADDRESS
         CNOP  6,8
         BALR  14,14
SSD2     DC    D'0'
         DC    D'0'
         DC    F'0'
         L     3,SSD2+12
         S     3,SSONE
         L     4,SAP
         LA    4,72(4)
         EX    3,MVS2
         L     14,SS14
         BAL   14,20(14)          RETURN
MVSS     MVC   70(1,4),SSD
MVS2     MVC   0(1,4),SSD2
         DC    C'IMM='
ADDSS    DC    A(ADDR)
SAP      DC    F'0'
SS14     DC    F'0'
SSONE    DC    F'1'
SWA      DC    D'0'
SWB      DC    F'0'
         END
/*
//IRV18 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ARL      TITLE 'SUBROUTINE'
ARL      CSECT
         BALR  13,0
         USING *,13
         ENTRY SBCZ
         ENTRY COMF
         EXTRN SAVA
         EXTRN CXN
         EXTRN NEXT
         EXTRN LCOM
         EXTRN COFST
         MVI   COMF,X'00'
         MVC   CXNCA(4),8(14)
         MVC   ASAVZ(3),9(14)
         ST    14,AAR14
         ST    13,CXNCA+8
         L     14,ARCXN           CONVERT CONST TO
         CNOP  6,8                BCD FORMAT
         BALR  14,14
CXNCA    DC    D'0'
         DC    F'0'
         L     14,AAR14
         L     4,0(14)
         MVC   9(8,4),CXNCA
         MVC   64(2,4),DCR
         MVC   70(2,4),DCR+2
         CLC   FX+2(2),6(14)
         BC    8,FIR
         MVI   71(4),C'L'
         OI    7(14),C'0'
         MVC   72(1,4),7(14)
         NI    7(14),X'0F'
         SR    3,3
         ST    3,ASAVZ
         IC    3,7(14)
         S     3,FX
         LPR   3,3
         LA    5,ASAVZ-1
         AR    5,3
         MVC   0(3,5),8(14)
         LA    5,9(4)
         SR    3,3
         IC    3,7(14)
         SLL   3,1
         AR    5,3
         MVC   0(4,5),BLXX
         MVI   73(4),C'('
         LA    4,2(4)
FIR      CLI   7(14),X'04'
         BC    7,NFA
         TM    8(14),X'FF'
         BC    8,NFA
         TM    9(14),X'F0'
         BC    1,NFA
         MVC   70(2,4),XPR
         MVC   72(2,4),CXNCA
         MVI   74(4),X'7D'
         MVI   75(4),C','
         MVC   76(4,4),XPR+2
         LA    4,8(4)
NFA      MVI   SBCZ,X'FF'
         CLC   12(2,14),14(14)
         BC    8,LOCE
         L     3,ANEXT            YES
         L     5,0(3)
         LA    3,4(3)
CEX      CLC   12(2,14),8(3)      FIND BCD NAME
         BC    8,EEX
         LA    3,15(3)
         BCT   5,CEX
         MVC   90(13,4),MET
EEX      MVC   72(8,4),0(3)
         MVC   SBCZ+1(8),0(3)
         CLI   72(4),C' '
         BC    7,RBL
         MVI   COMF,X'10'
         OI    ASAVZ,X'10'
         BC    15,LOCE
RBL      LA    5,7
         LA    3,79(4)
CEE      CLI   0(3),C' '
         BC    7,INSS
         BCT   3,NER
NER      BCT   5,CEE
INSS     STC   5,SBCZ
         CLI   8(14),X'FF'
         BC    8,MINE
         TM    19(14),X'10'
         BC    1,MINE
         MVI   1(3),C'+'
         BC    15,NMINE
MINE     MVI   1(3),C'-'
NMINE    LA    6,4
         L     5,8(14)
         S     6,4(14)
         LPR   6,6
         SLL   6,3
         STC   6,SOFT+3
SOFT     SRL   5,0
         SLL   5,8
         SRA   5,8
         LTR   5,5
         BC    8,RPE
         LA    3,1(3)
LOC2     CVD   5,OFS
         UNPK  OF2(4),OFS+4(4)
         OI    OF2+3,C'0'
         MVC   1(4,3),OF2
         LA    3,4(3)
RPE      MVI   1(3),C')'
         BAL   14,20(14)          RETURN
LOCE     ST    4,TMA4
         MVI   ASAVZ+3,X'60'
         ST    13,ASAVZ+8
         TM    ASAVZ,X'10'
         BC    1,LSA
         L     3,AOFST
         L     3,0(3)
         SLL   3,8
         A     3,ASAVZ
         ST    3,ASAVZ
LSA      L     14,SAVZ
         CNOP  2,4
         BALR  14,14
ASAVZ    DC    F'0'
         DC    F'0'
         DC    F'0'
         L     14,AAR14
         L     4,TMA4
         MVC   72(8,4),ASAVZ
         LA    5,7
         LA    3,79(4)
CEE2     CLI   0(3),C' '
         BC    7,INSA
         BCT   3,NER2
NER2     BCT   5,CEE2
INSA     MVI   1(3),C')'
         BAL   14,20(14)          RETURN
         DC    C'IMM='
SAVZ     DC    A(SAVA)
ARCXN    DC    A(CXN)
FX       DC    F'4'
ANEXT    DC    A(NEXT)
AOFST    DC    A(COFST)
OFS      DC    D'0'
OF2      DC    F'0'
AAR14    DC    F'0'
DCR      DC    C'DCA('
BLXX     DC    C'    '
TMA4     DC    F'0'
XPR      DC    X'E77D'
         DC    C'AL3('
COML     DC    C'COM '
MET      DC    C'MISSING '
         DC    C'EXTRN   '
ALCOM    DC    A(LCOM)
DWRD     DC    D'0'
SBCZ     DC    3F'0'
COMF     DC    X'00'
         END
/*
//IRV19 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
CON      TITLE '*** C O N S T ***  (MODIFIED FOR FTXTA)  AUG. 24,1967'
CONST    CSECT
         EXTRN CXN
         EXTRN ADA
         EXTRN FLPT
         EXTRN FXPT
         BALR  13,0
         USING *,13
         ST    14,CT14
         MVC   CXNC(4),8(14)
         ST    13,CXNC+8
         L     14,CCXN            CONVERT TO BCD
         CNOP  6,8
         BALR  14,14
CXNC     DC    D'0'
         DC    F'0'
         L     14,CT14
         L     4,0(14)
NADAR    MVC   SICC1+1(3),16(14)
         L     3,SICC1
         CLC   SICC(4),ZERC
         BC    8,NADB
         C     3,SICC
         BC    7,NADB
         MVI   64(4),C' '
         MVC   65(35,4),64(4)
         BC    15,20(14)
NADB     L     3,AADA
         LTR   3,3
         BC    4,NADA
         CLC   ZERC(3),0(3)
         BC    8,NADA
         CLC   FORC(4),4(14)
         BC    7,NADA
         CLC   0(3,3),SICC1+1
         BC    7,NADA
         MVC   FHX+4(8),8(14)
         CLI   3(3),X'22'
         BC    8,CFXPT
         CLC   9(3,14),ZERC
         BC    8,NADA
         TM    8(14),X'7F'
         BC    8,NADA
         CLI   3(3),X'24'
         BC    8,CFLPT
         MVI   FHX+12,X'80'
         CLI   3(3),X'25'
         BC    7,NADA
         MVC   CXNC2(4),12(14)
BFLT     ST    13,CXNC2+8
         L     14,CCXN
         CNOP  6,8
         BALR  14,14
CXNC2    DC    D'0'
         DC    F'0'
         L     14,CT14
         L     4,0(14)
         MVC   17(8,4),CXNC2
         MVI   6(14),X'FF'
         L     3,16(14)
         SRL   3,8
         A     3,FORC
         ST    3,SICC
         BC    15,CFLT
CFXPT    MVC   FHF(4),0(14)
         MVC   FHF+4(4),8(14)
         ST    13,FHF+8
         L     14,AFXPT
         CNOP  2,4
         BALR  14,14
FHF      DC    F'0'
         DC    F'0'
         DC    F'0'
         L     14,CT14
         L     4,0(14)
         MVC   9(8,4),CXNC
         BAL   14,20(14)
CFLPT    MVI   FHX+12,X'00'
         MVC   FHX+8(4),ZERC
CFLT     MVC   FHX(4),0(14)
         ST    13,FHX+16
         L     14,AFLPT
         CNOP  2,4
         BALR  14,14
FHX      DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         L     14,CT14
         L     4,0(14)
         MVC   9(8,4),CXNC
         BAL   14,20(14)
NADA     MVC   70(2,4),DCC+2
         MVC   64(2,4),DCC
         L     3,4(14)
         SLL   3,1
         S     3,CONE
         BC    4,20(14)
         C     3,EIGHT
         BC    4,MM
         LA    3,7
MM       EX    3,CMV
         L     2,4(14)
         S     2,CONE
         C     2,TWT
         BC    2,20(14)
         EX    2,TRTI
         BC    7,EXC3
         MVI   70(4),C'C'
         EX    2,CMV3
         AR    4,2
         BC    15,MVIC3
EXC3     EX    3,CMV2
         AR    4,3
MVIC3    MVI   73(4),X'7D'
         BAL   14,20(14)          RETURN
CMV2     MVC   72(1,4),CXNC
CMV      MVC   9(1,4),CXNC
CMV3     MVC   72(1,4),8(14)
TRTI     TRT   8(1,14),ABC
         DC    C'IMM='
CT14     DC    F'0'
CONE     DC    F'1'
EIGHT    DC    F'8'
TWT      DC    F'20'
CCXN     DC    A(CXN)
DCC      DC    C'DCX'
         DC    X'7D'
ABC      DC    16X'FFFFFFFF'
         DC    X'00'
         DC    2X'FFFFFFFF'
         DC    X'FFFF'
         DC    X'00FF0000'
         DC    3X'FFFFFFFF'
         DC    X'000000FF'
         DC    X'FF0000FF'
         DC    2X'FFFFFFFF'
         DC    X'00FFFFFF'
         DC    3X'FFFFFFFF'
         DC    X'FFFFFF00'
         DC    16X'FFFFFFFF'
         DC    X'FFFF'
         DC    2X'00000000'
         DC    X'00FFFFFF'
         DC    X'FFFFFFFF'
         DC    2X'00000000'
         DC    X'00FFFFFF'
         DC    X'FFFFFFFF'
         DC    X'FF'
         DC    2X'00000000'
         DC    2X'FFFFFF'
         DC    2X'00000000'
         DC    X'0000'
         DC    2X'FFFFFF'
SICC     DC    F'0'
ZERC     DC    F'0'
FORC     DC    F'4'
AFLPT    DC    A(FLPT)
AFXPT    DC    A(FXPT)
AADA     DC    A(ADA)
SICC1    DC    F'0'
         DS    0F
         END
/*
//IRV20 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
FTXT     TITLE 'FTXT TO STANDARDIZED FTXTA INTERFACE      AUG. 21,1967'
FTXT     CSECT
         EXTRN FTXTA
         BALR  13,0               REG 13 WAS USED AS BASE BY FTXT,SO
         USING *,13               USE IT AS TEMP. BASE HERE
         STM   12,1,SVLKG         SAVE LINKAGE REGISTERS
         BALR  12,0               ESTABLISH A BASE COMPATIBLE WITH
         USING *,12               OS/360 LINKAGE CONVENTIONS
         LA    13,SVPGM           PROVIDE CALLER SAVE AREA
         LR    1,14               STANDARD PARAMETER LIST POINTER
         L     15,AFTA            CALL STANDARDIZED
         BALR  14,15              FTXT ROUTINE
         LM    12,1,SVLKG         RESTORE ORIGINAL LINKAGE REGISTERS
         BC    15,32(14)          RETURN TO CALLER
AFTA     DC    A(FTXTA)           ADR OF STANDARDIZED FTXT ROUTINE
SVLKG    DS    6F                 LINKAGE REGISTERS SAVE AREA
SVPGM    DC    3F'0'              PROGRAM SAVE AREA
         DS    15F
         END
/*
//IRV21 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
FTXA     TITLE '*** F T X T A ***  (REVISED && STANDARDIZED FTXT)  '
FTXTA    CSECT
         ENTRY COFST
         ENTRY RFTXT
         EXTRN ARL
         EXTRN AXN
         EXTRN CONST
         EXTRN CRLD
         EXTRN CXN
         EXTRN NTXT
         EXTRN PAB
         EXTRN PR
         EXTRN RR
         EXTRN RS
         EXTRN RX
         EXTRN SI
         EXTRN SS
         EXTRN TXTS
         EXTRN DS
         EXTRN ARLDS
         EXTRN CF
         EXTRN TIME
         STM   14,12,12(13)       **************
         BALR  12,0               *            *
         USING *,12               *  STANDARD  *
         ST    13,SAVE+4          *   S/360    *
         LR    11,13              *  LINKAGE   *
         LA    13,SAVE            *            *
         ST    13,8(11)           **************
         CLI   FPFLG,X'FF'        IS THIS FIRST PASS?
         BC    8,INTL             BRANCH IF YES
         CLI   PCFLG,X'FF'        IS PROCESS FLAG ON?
         BC    7,LKAHD            BRANCH IF NO
         BC    15,PROCS
         TITLE '*** I N I T I A L I Z A T I O N ***  (LKAHD && PROCS)'
INTL     MVI   FPFLG,X'00'        TURN-OFF FIRST PASS FLAG
         XC    TOTA(4),TOTA
         L     GRC,HITBL          *********************
         LA    GRC,1(GRC)
         LA    GRB,FTBL+4         *                   *
         SR    GRA,GRA            * PLACE TABLE ENTRY *
         ST    GRA,0(GRB)         * I.D. NUMBERS IN   *
AGNA     LA    GRB,8(GRB)         * BYTE 4 OF EACH    *
         LA    GRA,256(GRA)       * TABLE ENTRY       *
         STH   GRA,0(GRB)         *                   *
         BCT   GRC,AGNA           *********************
         LA    TBL,FTBL           SET TABLE TO ENTRY ZERO
         MVI   0(TBL),X'0F'       TERMINAL CODE INTO BO
         L     GRA,ATBNT
         MVC   TNTC(4),0(GRA)     TOTAL NUMBER OF TXT CARDS
         L     TXB,TNTC
         BCTR  TXB,0
         ST    TXB,TNT1
         LA    TXB,4(GRA)
         ST    TXB,CATXB          SET TXTB POINTER TO TXTB ADR
         L     GRA,ATXTS          SET TEXT POINTER TO
         ST    GRA,SATXS          FIRST BYTE OF TEXT
         MVC   1(3,TBL),0(TXB)    FIRST LOGICAL ADR TO B13
         BAL   14,ADCON           GET FIRST ADCON LOGICAL ADR
         MVC   NBLC+3(1),3(TXB)   NO. OF BYTES LEFT ON CARD
         MVC   APRA(4),0(1)       PRINT AREA ADR FOR AXN
         TITLE '*** L O O K A H E A D *** '
LKAHD    LA    TBL,FTBL           SET TABLE POINTER TO ENTRY ZERO
         L     TXB,CATXB
         MVI   PCFLG,X'FF'         RESET PROCESS FLAG
         MVC   9(3,TBL),1(TBL)    PLACE I.C. IN B13 OF ENTRY ONE
         MVI   13(TBL),X'00'      ZERO TEXT POINTER DISPLACEMENT
GOAGN    CLC   4(1,TBL),HITBL+3   HAS HIGHEST TABLE ENTRY BEEN REACHED?
         BC    11,TERME           BRANCH IF YES
         CLI   TFL,X'FF'           LAST CARD
         BC    8,TERME
      CLI      4(TBL),X'0E'
         BC    7,NCP
         CLI   0(TBL),X'00'
         BC    7,NCP
         TM    3(TBL),X'02'
         BC    1,NCP
         CLC   6(2,TBL),FOUR+2
         BC    8,TERME
NCP      LA    TBL,8(TBL)         SET POINTER TO NEXT ENTRY
         TM    3(TBL),X'01'       IS I.C. ON HW BOUNDARY?
         BC    8,EVEN             BRANCH IF YES
         MVI   0(TBL),X'00'       CLASSIFY AS CONSTANT
         MVC   6(2,TBL),ONE1+2    OF LENGTH ONE
         BC    15,CNST            GO TO CONSTANT ROUTINE
EVEN     SR    GRA,GRA            MOVE THE
         IC    GRA,5(TBL)         NEXT OP
         A     GRA,SATXS          CODE TO
         MVC   AOP(1),0(GRA)      AXN AREA
         MVC   CC(1),1(GRA)
         TM    AOP,X'BF'          IS OP CODE A ZERO OR A BLANK?
         BC    7,NZOB             BRANCH IF NO
         TM    3(TBL),X'02'
         BC    1,NZOB
         ST    GRA,AZBTS          SAVE TXTS POINTER
         CLI   AOP,X'00'          IS OP CODE ZERO?
         BC    7,NZERO            BRANCH IF NO
         CLC   0(8,GRA),ZEROS     IS TEXT EIGHT BYTES OF ZEROES?
         BC    7,NZOB             BRANCH IF NO
         LA    GRB,ZEROS          ADR OF ZEROS
CZOBS    ST    GRB,ADRZB          SAVE TYPE ADR
         BC    15,ZOBS            GO TO 'ZOBS'
NZERO    CLC   0(8,GRA),BLANK     IS TEXT EIGHT BYTES OF BLANKS?
         BC    7,NZOB             BRANCH IF NO
         LA    GRB,BLANK          ADR OF BLANKS
         BC    15,CZOBS           GO TO CALL 'ZOBS'
NZOB     BAL   14,CLAXN           CALL AXN VIA CAXN INTERFACE
         MVI   0(TBL),X'00'
         CLC   0(4,GRA),BLANK
         BC    8,REDO
         MVC   0(1,TBL),AOP+6     AXN CODE TO BO
REDO     MVC   6(2,TBL),TWO2+2    MAKE LENGTH CODE TWO
         TM    0(TBL),X'70'       TEST CLASSIFICATION
         BC    8,CNST             BRANCH IF CONSTANT
         BC    4,INSTR            BRANCH IF INSTRUCTION
         ABEND 20,DUMP            DUMP, ILLEGAL AXN CODE
         TITLE '*** C O N S T A N T *** '
CNST     SR    GRA,GRA
         IC    GRA,5(TBL)         PUT NEW TEXT ADR DIS-
         AH    GRA,6(TBL)         PLACEMENT INTO B5 OF
         STC   GRA,13(TBL)        NEXT TABLE ENTRY
         C     GRA,NBLC           HAS TXT CARD BOUNDARY BEEN CROSSED?
         BC    2,BDS
         BC    4,NODSA
         CLC   NTCF(4),TNT1
         BC    4,NODSA
         MVI   TFL,X'FF'
         BC    15,NODSA
BDS      BAL   14,DSCK            CALL 'DS' CHECK ROUTINE
         BC    15,CNST
NODSA    L     GRA,0(TBL)         FORM
         AH    GRA,6(TBL)         NEXT
         ST    GRA,8(TBL)         I.C.
         CLC   9(3,TBL),ARLD+1    HAS RLD ENTRY BEEN REACHED?
         BC    2,FRLD             BRANCH IF YES
         CLI   4(TBL),X'01'        IS THIS THE FIRST TABLE POSITION
         BC    8,GOAGN            BRANCH IF YES
         LR    GRA,TBL            IS THE PRECEEDING
         S     GRA,EIGHT          CLASSIFICATION A
         CLI   0(GRA),X'00'       NON-TERM CONSTANT?
         BC    7,IFBC             BRANCH IF NO
         TM    3(TBL),X'03'       IS I.C. ON FW BOUNDARY?
         BC    8,GOAGN            BRANCH IF YES
         MVC   AOP(1),0(GRA)       FETCH POTENTIAL OP CODE
         BAL   14,CLAXN            DETERMINE IF OP CODE
         LA    TBL,8(TBL)          UPDATE TABLE POINTER
         CLI   AOP+6,X'00'      IS IT AN INSTRUCTION
         BC    7,GOAGN             BRANCH IF IT IS
         LR    TBL,GRA            MOVE TABLE POINTER BACK ONE ENTRY
         LH    GRA,6(TBL)         UPDATE LENGTH
         LA    GRA,2(GRA)         BY TWO FOR
         STH   GRA,6(TBL)         CONSTANT
         SR    GRA,GRA             ZERO REGISTER
         IC    GRA,5(TBL)          INSERT DISPLACEMENT
         AH    GRA,6(TBL)          ADD INSTRUCTION LENGTH
         STC   GRA,13(TBL)         STORE DISPL IN NEXT TABLE ENTRY
         L     GRA,8(TBL)          LOAD IC
         LA    GRA,2(GRA)          UPDATE IC
         ST    GRA,8(TBL)          SAVE CALC IC
         BC    15,GOAGN
         TITLE '*** I N S T R U C T I O N *** '
INSTR    CLI   4(TBL),X'08'
         BC    4,INSTRS
         LR    GRA,TBL
         S     GRA,EIGHT
         CLI   4(TBL),X'01'
         BC    8,INSTRS
         CLI   0(GRA),X'00'
         BC    7,INSTRS
         TM    3(TBL),X'02'
         BC    8,LRG
         S     GRA,EIGHT
LRG      LR    TBL,GRA
         BC    15,TERME
INSTRS   LH    GRA,6(TBL)         *********************
         TM    AOP,X'C0'          *                   *
         BC    8,ILEN2            * FIND INSTR LENGTH *
         BC    4,ILEN4            * AND PLACE IN B67  *
         LA    GRA,2(GRA)         * OF CURRENT ENTRY  *
ILEN4    LA    GRA,2(GRA)         *                   *
         STH   GRA,6(TBL)         *********************
ILEN2    L     GRB,0(TBL)         FORM
         AR    GRB,GRA            NEXT
         ST    GRB,8(TBL)         I.C.
         CLC   9(3,TBL),ARLD+1    HAS RLD ENTRY BEEN REACHED?
         BC    2,FRLD             BRANCH IF YES
         AH    GRA,4(TBL)         PLACE NEW TEXT ADR DISPLACEMENT
         STC   GRA,13(TBL)        INTO B5 OF NEXT TABLE ENTRY
INSTL    CLC   13(1,TBL),NBLC+3   HAS TXT CARD BOUNDARY BEEN CROSSED
         BC    2,BDSK
         BC    4,NODSB
         CLC   NTCF(4),TNT1
         BC    4,NODSB
         MVI   TFL,X'FF'
         BC    15,NODSB
BDSK     BAL   14,DSCK            CALL 'DS' CHECK ROUTINE
         BC    15,INSTL
NODSB    TM    0(TBL),X'0F'       IS THIS A TERMINAL INSTRUCTION
         BC    12,GOAGN           BRANCH IF NO
         LR    GRA,TBL            IS THE PROCEEDING
         CLI   AOP,X'45'
         BC    7,TS5
         CLI   CC,X'E0'
         BC    8,TERM
TS5      CLI   AOP,X'05'
         BC    7,SGE
         S     GRA,EIGHT
         TM    0(GRA),X'70'
         BC    4,SGD
         MVI   0(TBL),X'10'
         BC    15,GOAGN
SGE      S     GRA,EIGHT          CLASSIFICATION A
SGD      CLI   0(GRA),X'00'       NON-TERM CONSTANT
         BC    8,CREDO            BRANCH IF YES
         CLI   0(GRA),X'0E'       WAS PRECEEDING A TERMINAL CONSTANT?
         BC    7,TERMT
CREDO    MVI   0(TBL),X'00'       CLASSIFY AS CONSTANT
         BC    15,REDO            GO TO 'REDO'
TERMT    TM    AOP,X'B0'
         BC    7,TERM
         MVC   TAOP(1),AOP
         NI    TAOP,X'0F'
         CLI   TAOP,X'06'
         BC    7,BC
         TM    AOP,X'40'
         BC    1,TERM
         NI    0(TBL),X'F0'
         BC    15,GOAGN
BC       CLI   TAOP,X'07'
         BC    7,TERM
         TM    CC,X'F0'
         BC    7,TERM
         NI    0(TBL),X'F0'
         BC    15,GOAGN
         TITLE '** I N S T R     F O L L O W E D   B Y    C O N S T **'
IFBC     CLI   4(TBL),X'01'       *************************************
         BC    8,LAE
         S     TBL,EIGHT
AGNB     CLI   4(TBL),X'01'
         BC    8,LAE
         S     TBL,EIGHT
         TM    0(TBL),X'70'       * GO BACK IN TABLE UNTIL A CONSTANT *
         BC    7,AGNB             * CLASSIFICATION IS FOUND. CLASSIFY *
         LA    TBL,8(TBL)         * ENTY AFTER IT AS A CONSTANT TOO. *
LAE      MVI   0(TBL),X'00'       *                                   *
         BC    15,REDO            *************************************
         TITLE '*** R L D    F O U N D *** '
FRLD     CLI   4(TBL),X'01'
         BC    8,BADR
         S     TBL,EIGHT
         CLI   0(TBL),X'00'
         BC    7,AGNB
         LA    TBL,8(TBL)
BADR     L     GRA,ARLD           ADJUST LENGTH OF CURRENT
         SLL   GRA,8
         SRL   GRA,8
         MVC   CC(1),0(TBL)
         MVI   0(TBL),X'00'
         S     GRA,0(TBL)         ENTRY TO MAKE NEXT ENTRY
         ST    GRA,FRA
         SR    GRA,GRA
         IC    GRA,5(TBL)
         S     GRA,NBLC
         LA    14,BRF
         A     GRA,FRA
         BC    2,DSCK
BRF      L     GRA,FRA
         LTR   GRA,GRA
         BC    8,EOA               BRANCH IF ADCON
         STH   GRA,6(TBL)         START AT RLD ADR
         AH    GRA,4(TBL)         UPDATE TEXT ADR
         STC   GRA,13(TBL)        DISPLACEMENT
         CLI   CC,X'8E'
         BC    7,NZR
         MVI   0(TBL),X'8E'
NZR      CLI   4(TBL),X'0F'
         BC    8,TERM
         LA    TBL,8(TBL)         TABLE POINTER TO NEXT ENTRY
EOA      MVI   0(TBL),X'6E'        CLASSIFY AS ADCON
         MVC   TARLD(8),ARLD-4
         MVC   1(3,TBL),ARLD+1    ADCON LOGICAL ADR TO B13
         MVC   6(2,TBL),LRLD+2    ADCON LENGTH TO B67
         SR    GRA,GRA
         IC    GRA,5(TBL)
         AH    GRA,6(TBL)
         STC   GRA,13(TBL)
         BAL   14,ADCON           GET NEXT ADCON LOGICAL ADR
         CLC   13(1,TBL),NBLC+3
         BC    4,TERM
         BC    2,ADDS
         CLC   NTCF(4),TNT1
         BC    4,ADDS
         MVI   TFL,X'FF'
         BC    15,TERM
ADDS     BAL   14,DSCK
         BC    15,TERM            GO TO CONSTANT TERMINATION
         TITLE '*** ''D S''    C H E C K ***  '
DSCK     L     GRA,NTCF           INCREMENT
         LA    GRA,1(GRA)         FETCHED CARDS
         ST    GRA,NTCF           COUNT BY ONE
         C     GRA,TNTC           IS THIS THE LAST CARD?
         BC    8,EFT               BRANCH IF LAST CARD
         L     TXB,CATXB
         MVC   GPDW+1(3),0(TXB)   ************************************
         L     GRA,GPDW           *                                  *
         SR    GRB,GRB            * COMPARE CURRENT TXTB ADR ENTRY + *
         IC    GRB,3(TXB)         * BYTE COUNT WITH NEXT TXTB ENTRY  *
         AR    GRA,GRB            *                                  *
         ST    GRA,GPDW           ************************************
         CLC   GPDW+1(3),5(TXB)   IS THERE A 'DS'?
         BC    4,DSFND            BRANCH IF YES
         BC    8,NODSF
         ABEND 30,DUMP            DUMP (ILLEGAL TXT OVERLAY)
NODSF    LA    TXB,5(TXB)         UPDATE TXTB POINTER
         ST    TXB,CATXB
         SR    GRB,GRB
         IC    GRB,3(TXB)         UPDATE NO. OF BYTES LEFT
         A     GRB,NBLC           ON CARD BY AMOUNT OF NEW
         ST    GRB,NBLC           TXTB BYTE COUNT ENTRY
         C     GRB,HEXFF
         BCR   2,14
CLB      CLC   13(1,TBL),NBLC+3
         BC    11,DSCK
         BCR   15,14              *** RETURN ***
EFT      MVI   TFL,X'FF'           SET LAST CAED FLAG
         BC    15,DSFND
         TITLE '*** ''D S''    F O U N D ***  '
DSFND    LR    GRA,TBL            WAS PRECEEDING
         S     GRA,EIGHT          CLASSIFICATION
         TM    0(GRA),X'70'       A CONSTANT?
         BC    8,CSD
         MVI   TFL,X'00'
         L     GRB,NTCF
         BCTR  GRB,0
         ST    GRB,NTCF
         BC    15,AGNB
CSD      L     GRA,NBLC
         SR    GRB,GRB            * ADJUST LENGTH OF CURRENT CONSTANT *
         IC    GRB,5(TBL)         * SO THAT NEXT ENTRY I.C. IS THE    *
         SR    GRA,GRB            * START OF THE 'DS' AREA.           *
         BC    8,NZ
         STH   GRA,6(TBL)         *************************************
         MVI   CC,X'00'
         CLI   0(TBL),X'6E'
         BC    8,NMZA
         CLI   0(TBL),X'8E'
         BC    7,NMZ
NMZA     MVC   CC(1),0(TBL)
NMZ      MVI   0(TBL),X'00'       CLASSIFY CURRENT ENTRY AS CONSTANT
         A     GRA,0(TBL)         FORM NEXT
         ST    GRA,8(TBL)         I.C. ENTRY
         MVC   0(1,TBL),CC
         CLC   6(2,TBL),ZEROS
         BC    7,IUD
         ABEND 555,DUMP
IUD      LA    TBL,8(TBL)
NZ       MVI   0(TBL),X'7E'       CLASSIFY AS 'DS'
         CLI   TFL,X'FF'
         BC    7,NZE
         S     TBL,EIGHT
         CLI   4(TBL),X'00'
         BC    8,LASTC
         BC    15,TERMS
NZE      L     TXB,CATXB
         LA    TXB,5(TXB)         UPDATE TXTB TABLE POINTER
         ST    TXB,CATXB
         L     GRA,GPDW           *****************************
         MVC   GPDW+1(3),0(TXB)   * GET 'DS' LENGTH AND PLACE *
         S     GRA,GPDW           * IN B67 OF CURRENT ENTRY   *
         LPR   GRA,GRA
         STH   GRA,6(TBL)         *****************************
         MVC   NBLC+3(1),3(TXB)   NEW BYTES LEFT COUNT
CADC     CLC   GPDW+1(3),ARLD+1
         BC    13,TERMS
         BAL   14,ADCON
         BC    15,CADC
         TITLE '*** Z E R O E S    O R    B L A N K S ***  '
***********************************************************************
*                                                                     *
*        AT ENTRY 'GRA' CONTAINS CURRENT TXTB POINTER & 'GRB' HAS     *
*        ADR OF 'ZEROS' OR 'BLANK' (WHICH EVER OP CODE CONTAINED)     *
*                                                                     *
***********************************************************************
ZOBS     LR    GRC,TBL            WAS PRECEEDING
         S     GRC,EIGHT          CLASSIFICATION
         CLI   4(TBL),X'01'
         BC    8,ZADE
         TM    0(GRC),X'70'        A CONSTANT
         BC    7,IFBC             BRANCH IF NO
ZADE     MVC   ZAD+1(3),1(TBL)
         MVI   0(TBL),X'00'
         L     GRC,ZAD
         LA    GRC,8(GRC)
         ST    GRC,ZAD
         CLC   ZAD+1(3),ARLD+1
         BC    2,FRLD
         MVI   0(TBL),X'8E'       CLASSIFY CURRENT ENTRY AS 'ZOB'
         SR    GRC,GRC            UPDATE
         IC    GRC,5(TBL)         BYTE COUNT
         A     GRC,EIGHT          BY EIGHT
         ST    GRA,TGRA            STORE REG TEMPORARILY
         ST    GRB,TGRB
AGNC     ST    GRA,TGRA           STORE REG TEMPORARILT
         LR    GRB,GRC
         A     GRB,EIGHT
         STC   GRB,13(TBL)
         CLC   ZAD+1(3),ARLD+1
         BC    2,FRLD
         L     GRA,ZAD
         LA    GRA,8(GRA)
         ST    GRA,ZAD
         ST    GRC,TGRC
         LA    14,BR               LOAD RETURN ADDRESS FROM DSFND
         C     GRB,NBLC           HAS CARD BOUNDARY BEEN CROSSED?
         BC    2,DSCK             BRANCH IF YES
BR       L     GRA,TGRA            RESTORE REGISTER
         LA    GRA,8(GRA)         UPDATE TXTS POINTER
         L     GRC,TGRC
         LA    GRC,8(GRC)         UPDATE BYTE COUNTER
         C     GRC,HEXFF          HAS TXTS DISPLACEMENT EXCEEDED X'FF'?
         BC    2,ZBOUT            BRANCH IF YES
         L     GRB,TGRB
         CLC   0(8,GRA),0(GRB)    IS NEXT EIGHT BYTES OF TEXT THE SAME?
         BC    8,AGNC             BRANCH BACK IF YES
ZBOUT    S     GRC,EIGHT
         S     GRA,EIGHT
         SR    GRB,GRB            CALC
         IC    GRB,5(TBL)         ZOB
         SR    GRC,GRB            LENGTH
         STH   GRC,6(TBL)         PLACE LENGTH INTO B67
         BC    15,TERM
         TITLE '*** T E R M I N A T I O N ***  '
TERME    TM    0(TBL),X'70'       GO BACK IN TABLE UNTIL A
         BC    15,TERM             CONSTANT CLASSIFICATION IS
         S     TBL,EIGHT          FOUND OR WHOLE TABLE HAS
         CLI   4(TBL),X'01'       BEEN SEARCHED.  ACCEPT UP
         BC    2,TERME            TO RESULTANT TABLE ENTRY.
         ABEND 70,DUMP            DUMP IF NO CONSTANT FOUND
TERM     SR    GRA,GRA            *********************************
         IC    GRA,5(TBL)         *                               *
         AH    GRA,6(TBL)         * DECREASE NO. OF BYTES LEFT ON *
         L     GRB,NBLC           * CARD BY NO. OF TXT BYTES USED *
         SR    GRB,GRA            *                               *
         ST    GRB,NBLC           *********************************
         BC    2,TERMS             BRANCH IF END OF CARD NOT FOUND
         BC    8,TT
         ABEND 11,DUMP
TT       L     GRA,NTCF            LOAD NO OF CARDS FOUND
         LA    GRA,1(GRA)          INCREMENT CARD COUNT
         S     GRA,TNTC            SUBTR TOTAL NUMBER OF CARDS
         BC    4,TERMS             HAS LAST CARD BEEN FPUND
         MVI TFL,X'FF'             SET FLAG IF YES
TERMS    L     GRA,0(TBL)         PLACE
         AH    GRA,6(TBL)         NEXT I.C.
         ST    GRA,FTBL           INTO B13 OF ENTRY ZERO
         MVI   FTBL,X'0F'         RETAIN END
         NC    FTBL(1),0(TBL)     CLASSIFICATION INFO.
         CLI   0(TBL),X'00'
         BC    8,ISE
         CLI   0(TBL),X'5F'
         BC    2,ISE
         OI    FTBL,X'01'
ISE      MVC   TBLTE+3(1),4(TBL)
         ST    TXB,CATXB          SAVE CURRENT TXTB POINTER
         LA    TBL,FTBL+8         SET TABLE POINTER TO ENTRY
         ST    TBL,CATBL          ONE FOR PROCESS ROUTINE
         BAL   14,PROCS
         TITLE 'CALL TO AXN ROUTINE  (WITH PARAMETERS LISTED HERE) '
CLAXN    STM   14,7,12(13)        SAVE FTXTA REGS
         ST    13,AOP+16          SAVE POINTER TO SAVE AREA JUST USED
         L     14,AAXN            LIKE IRV
         CNOP  6,8
         BALR  14,14              CALL AXN
AOP      DC    D'0'               OP CODE BCD MNEMONIC & DESCRIPTION
APRA     DC    F'0'               ADR OF PRINT AREA
         DC    F'0'               OP CODE COUNTER ADR RETURNED HERE
         DC    F'0'               SAVE AREA POINTER SAVED HERE
*
* REG 13 IS RESTORED TO ENTRY VALUE AT EXIT FROM AXN ROUTINE
*
         LM    14,7,12(13)        RESTORE FTXTA REGS
         BCR   15,14              *** RETURN ***
         TITLE '*** A D C O N ***  (GET LOGICAL ADR OF NEXT ADCON) '
ADCON    STM   14,12,12(13)       SAVE FTXTA REGS
         ST    13,LRLD+4          SAVE POINTER TO FTXTA SAVE AREA
         L     14,ACRLD
         CNOP  2,4
         BALR  14,14              CALL CRLD
         DC    F'0'
ARLD     DC    F'0'               LOGICAL ADR OF NEXT ADCON
LRLD     DC    F'0'               LENGTH OF ADCON
         DC    F'0'               SAVE AREA POINTER SAVED HERE
         CLI   LRLD,X'0F'         HAS LAST ADCON ALREADY BEEN FETCHED?
         BC    7,NLAST            BRANCH IF NO
         MVC   ARLD+1(3),LRLD+1   SET LOGICAL ADR TO X'FFFFFF'
NLAST    LM    14,12,12(13)       RESTORE FTXTA REGS
         BCR   15,14              *** RETURN ***
         TITLE '*** P R O C E S S ***  '
PROCS    L     TXS,SATXS          LOAD STARTING TEXT POINTER
         L     TBL,CATBL          LOAD CURRENT TABLE ENTRY POINTER
         L     PAA,0(1)           LOAD PRINT AREA POINTER
         SR    GRA,GRA            ***********
         IC    GRA,0(TBL)         * BRANCH  *
         SRL   GRA,4              * TO SOME *
         SLL   GRA,2              * PROCESS *
         L     GRA,ALIST(GRA)     * ROUTINE *
         BCR   15,GRA             ***********
PRLD     MVC   12(4,1),AARL       EXTERNAL DECODE
         MVC   16(4,1),0(TXS)
         MVC   20(8,1),TARLD
         MVC   10(2,1),6(TBL)
         L     PAA,0(1)
         MVC   64(2,PAA),DCDS
         BC    15,PASSA
PCON     MVC   12(4,1),ACON       TO PASS 4
MVDC     L     PAA,0(1)           'DC' TO PRINT
         MVC   64(2,PAA),DCDS     AREA POS 65-66
         BC    15,PASS
         TITLE '*** P R O C E S S    I N S T R U C T I O N S *** '
PCRR     MVC   12(4,1),AXFRS      ************
         BC    15,PINST           *          *
PCRX     MVC   12(4,1),AXFRS+4    * EXTERNAL *
         BC    15,PINST           * DECODE   *
PCRS     MVC   12(4,1),AXFRS+8    * ROUTINE  *
         BC    15,PINST           * ADR TO   *
PCSI     MVC   12(4,1),AXFRS+12   * PASS 4   *
         BC    15,PINST           *          *
PCSS     MVC   12(4,1),AXFRS+16   ************
PINST    L     PAA,0(1)           PRINT AREA ADR
         MVC   AOPT(4),0(TXS)
         MVC   PAT(4),0(1)
         STM   14,7,12(13)
         LA    14,RETT
         L     15,ATIME
         CNOP  2,4
         BALR  1,15
PAT      DC    F'0'
AOPT     DC    F'0'
TOTA     DC    F'0'
RETT     LM    14,7,12(13)
         MVC   AOP(1),0(TXS)      OP CODE TO AXN DATA SECTION
         BAL   14,CLAXN           GET BCD MNEMONIC FOR OP CODE
         L     GRA,APRA+4         ************************
         L     GRB,0(GRA)         * INCREMENT CURRENT OP *
         LA    GRB,1(GRB)         * CODE COUNTER BY ONE  *
         ST    GRB,0(GRA)         ************************
         MVC   64(4,PAA),AOP+1    BCD MNEM. TO PRINT AREA
         ST    PAA,PRPAA          PRINT AREA ADR FOR PR ROUTINE
         MVC   PRTXT(8),0(TXS)    TEXT FOR PR
         MVC   PRLEN+2(2),6(TBL)  LENGTH OF TEXT FOR PR
         BAL   14,CLPR            FORMAT TEXT FOR PRINT OUT
         TITLE '*** P R O C E S S    T E R M I N A T I O N ***  '
PASS     MVC   10(2,1),6(TBL)      TEXT LENGTH TO PASS 4
         MVC   16(8,1),0(TXS)     8 BYTES OF TEXT TO PASS 4
PASSA    AH    TXS,6(TBL)
PTRM     STM   14,5,12(13)        SAVE FTXTA REGS
         MVC   24(4,1),0(TBL)     I.C. & AXN CODE TO PASS 4
         ST    13,CXNIC+8         SAVE POINTER TO FTXTA SAVE AREA
         MVC   CXNIC+1(3),1(TBL)  I.C. IS DATA
         MVI   CXNIC,X'00'        FOR 'CXN'
         L     14,ACXN
         CNOP  6,8                CALL CXN
         BALR  14,14
CXNIC    DC    D'0'               CXN DATA
         DC    F'0'               SAVE AREA POINTER SAVED HERE
         MVC   2(6,PAA),CXNIC+2   BCD I.C. TO PRINT POS 3-9
         LM    14,5,12(13)        RESTORE FTXTA REGS
         ST    TXS,SATXS          SAVE TEXT POINTER
         SR    GRA,GRA             ZERO GRA
         IC    GRA,4(TBL)   INSERT TABLE ENTRY NUMBER
         C     GRA,TBLTE          ENTRY BEEN REACHED?
         BC    4,RTN              BRANCH IF NO
         MVI   PCFLG,X'00'        RE-SET FLAG FOR LOOKAHEAD
         CLI   TFL,X'FF'
         BC    8,LASTC
RTN      LA    TBL,8(TBL)         TABLE POINTER TO
         ST    TBL,CATBL          THE NEXT ENTRY
RET      L     13,SAVE+4           ********************
         LM    14,12,12(13)       * RETURN TO PASS 4 *
         BCR   15,14              ********************
         TITLE '*** I N S U B ***  (FORMAT BCD LENGTH FOR DS OR DC) '
INSUB    STM   1,2,24(13)         SAVE R1 & R2 (USED IN TRANSLATE)
         LH    GRA,6(TBL)         GET LENGTH
         TM    3(TBL),X'03'
         BC    7,NFWD
         TM    7(TBL),X'03'       IS LENGTH A MULTIPLE OF FOUR?
         BC    7,NFWD             BRANCH IF NO
         SRL   GRA,2              DIVIDE LENGTH BY FOUR
NFWD     CVD   GRA,GPDW           GET DECIMAL
         UNPK  GPDW(5),GPDW+5(3)  LENGTH READY
         OI    GPDW+4,C'0'        FOR PRINT
         TRT   GPDW(5),TRTBL-240  FIND ADR OF FIRST NON-ZERO DIGIT
         BC    14,CONTC           IN DECIMAL DS OR DC LENGTH
         ABEND 40,DUMP            DUMP IF LENGTH IS ALL ZEROES
CONTC    LA    GRA,GPDW+4         FIND NO. OF BYTES
         SR    GRA,1              TAKEN BY BCD LENGTH
         EX    GRA,MOVE           MOVE BCD LENGTH TO PRINT AREA
         LA    GRA,70(GRA,PAA)    FIND ADR OF BYTE RIGHT AFTER LENGTH
         LM    1,2,24(13)         RESTORE R1 & R2
*
* AT EXIT 'GRA' CONTAINS POINTER TO BYTE RIGHT AFTER BCD DS/DC LENGTH
*
         BCR   15,14              *** RETURN ***
MOVE     MVC   70(1,PAA),0(1)
TRTBL    DC    X'00'
         DC    9X'FF'
         TITLE '*** P C D S ***  (PROCESS DS) '
PCDS     L     PAA,0(1)
         MVC   64(2,PAA),DCDS+2   'DS' TO PRINT POS 65-66
         MVC   12(4,1),ADS
         BAL   14,INSUB
*
*AFTER INSUB 'GRA' CONTAINS ADR OF PRINT POSITION FOLLOWING BCD LENGTH
*
         MVI   1(GRA),C'F'
         TM    3(TBL),X'03'
         BC    7,GMC
         TM    7(TBL),X'03'       * PLACE 'C' OR 'F' AFTER *
         BC    8,PTRM             * BCD LENGTH AND GO TO   *
GMC      MVI   1(GRA),C'C'        * TERMINATION OF PROCESS *
         BC    15,PTRM            **************************
* AFTER INSUB 'GRA' CONTAINS ADR OF PRINT POSITION FOLLOWING BCD LENGTH
         TITLE '*** P C Z B ***  (PROCESS ZEROES OR BLANKS)  '
PCZB     BAL   14,INSUB
*
*
         MVC   12(4,1),ADS
         TM    3(TBL),X'03'        ON FULL WORD BOUNDARY
         BC    7,BZ4               BRANCH IF NO
         TM    7(TBL),X'03'
         BC    7,BZ4
         CLI   0(TXS),X'00'       IS TEXT A GROUP OF ZEROES?
         BC    7,BLNK             BRANCH IF NO
         MVC   1(4,GRA),FBCD       INSERT F'0' AFTER BCD LENGTH
         BC    15,MVDC
BLNK     MVC   1(7,GRA),CBCD       INSERT C'    ' AFTER BSD LENGTH
         BC    15,MVDC
FBCD     DC    X'C67DF07D'        F'0' IN BCD
CBCD     DC    X'C37D404040407D'  C'    ' IN BCD
FBCD3    DC    X'E77DF0F07D'
CBCD3    DC    X'C37D407D'         C' '
FBCD0    DC    X'C37DF0F0F0F07D'
BZ4      CLI   0(TXS),X'00'        IS TEXT A GROUB OF ZEROES
         BC    7,BLN3              BRANCH IF BLANKS
         MVC   1(5,GRA),FBCD3
         BC    15,MVDC
BLN3     MVC   1(4,GRA),CBCD3
         BC    15,MVDC
         TITLE '*** C L P R ***  (CALL PR TO FORMAT TEXT FOR PRINT) '
CLPR     STM   14,12,12(13)       SAVE FTXTA REGS
         ST    13,PRLEN+4         SAVE POINTER TO FTXTA SAVE AREA
         L     14,ADRPR
         CNOP  2,4                CALL PR
         BALR  14,14
PRPAA    DC    F'0'               PRINT AREA ADR
PRTXT    DC    2F'0'              TEXT TO BE FORMATTED
PRLEN    DC    F'0'               TEXT LENGTH
         DC    F'0'               SAVE AREA POINTER SAVED HERE
         LM    14,12,12(13)       RESTORE FTXTA REGS
         BCR   15,14              *** RETURN ***
LASTC    L     2,SAVE+4
         L     1,24(2)
         MVC   4(4,1),ONE1
         MVI   TFL,X'00'
         MVI   PCFLG,X'00'
         SR    GRA,GRA             ZERO REGISTER
         ST    GRA,LRLD            ZERO RLD LENGTH
         ST    GRA,NTCF            ZERO TEXT CARD COUNY
         MVI   FPFLG,X'FF'         SET FIRST PASS FLAG
         L     GRB,ACF
         ST    GRA,0(GRB)
         ST    GRA,8(GRB)
         ST    GRA,12(GRB)
         L     GRB,ARLDF
         MVC   0(4,GRB),4(GRB)
         BC    15,RET
         TITLE '*** F T X T A    C O N S T A N T    A R E A *** '
AAXN     DC    A(AXN)             ADR OF AXN
ACRLD    DC    A(CRLD)            ADR OF CRLD
ADRZB    DC    F'0'               ADR OF ZEROS OR BLANK ENTERING 'ZOBS'
ATBNT    DC    A(NTXT)            POINTER TO # OF TXT CARDS & TXTB TBL
ATXTS    DC    A(TXTS)            ADR OF TEXT TABLE
AZBTS    DC    F'0'               TXTS POINTER AT ENTRY TO 'ZOBS'
BLANK    DC    CL8' '             EIGHT BYTES OF BLANKS
CATXB    DC    F'0'               CURRENT TXTB TABLE POINTER
EIGHT    DC    F'8'
FOUR     DC    F'4'
FPFLG    DC    X'FF'              FIRST PASS FLAG ('FF'=FIRST PASS)
PCFLG    DC    X'00'              PROCESS FLAG ('FF'=PROCESS)
TFL      DC    X'00'               LAST CARD FLAG
CC       DC    X'00'
TAOP     DC    X'00'
FTBL     DS    16D                FETCHED TEXT TABLE
         DC    D'0'
GPDW     DC    D'0'               GENERAL PURPOSE DOUBLE WORD
TARLD    DC    2F'0'
HEXFF    DC    F'255'             UPPER LIMIT OF ONE BYTE COUNTER
HITBL    DC    F'15'              HIGHEST TABLE ENTRY NO.
NBLC     DC    F'0'               NUMBER OF BYTES LEFT ON CARD
NTCF     DC    F'0'               NUMBER OF TXT CARDS FETCHED
ZAD      DC    F'0'
ONE1     DC    F'1'
TNTC     DC    F'0'               TOTAL NUMBER OF TXT CARDS
TWO2     DC    F'2'
SATXS    DC    F'0'               TEXT POINTER (SATXS+B5=CURRENT TEXT)
SAVE     DS    18F                SAVE AREA FOR FTXTA ROUTINE
FRA      DC    F'0'
TBLTE    DC    F'0'               TABLE TERMINATION ENRTY NUMBER
ZEROS    DC    D'0'               EIGHT BYTES OF ZEROES
*
ALIST    DC    A(PCON)            ************
         DC    A(PCRR)            * ADDRESS  *
         DC    A(PCRX)            * LIST     *
         DC    A(PCRS)            * USED     *
         DC    A(PCSI)            * TO GET   *
         DC    A(PCSS)            * SPECIFIC *
         DC    A(PRLD)            * PROCESS  *
         DC    A(PCDS)            * ROUTINE  *
         DC    A(PCZB)            ************
DCDS     DC    C'DCDS'            'DC' & 'DS' MNEMONICS
CATBL    DS    1F                 CURRENT TABLE ENTRY POINTER
ACXN     DC    A(CXN)             ADR OF HEX-BCD CONVERSION ROUTINE
ADRPR    DC    A(PR)              ADR OF TEXT FORMAT ROUTINE
APAB     DC    A(PAB)             SECOND PRINT AREA ADR
ACON     DC    A(CONST)           ************
AXFRS    DC    A(RR)              *          *
         DC    A(RX)              * EXTERNAL *
         DC    A(RS)              * FORMAT   *
         DC    A(SI)              * ROUTINES *
         DC    A(SS)              *          *
AARL     DC    A(ARL)             ************
ADS      DC    A(DS)
ACF      DC    A(CF)
ARLDF    DC    A(ARLDS)
TGRA     DC    F'0'
TGRB     DC    F'0'
TGRC     DC    F'0'
TM1      DC    F'0'
TNT1     DC    F'0'
ATIME    DC    A(TIME)
*
* * * * * * * * * * * REGISTER ASSIGNMENT * * * * * * * * * * * * * * *
*
TXB      EQU   3                  CURRENT TXTB TABLE POINTER
TBL      EQU   4                  CURRENT TABLE POINTER
GRA      EQU   5                  GENERAL WORK REGISTER 'A'
GRB      EQU   6                  GENERAL WORK REGISTER 'B'
GRC      EQU   7                  GENERAL WORK REGISTER 'C'
PAA      EQU   8                  PRINT AREA POINTER
TXS      EQU   9                  CURRENT TEXT POINTER
*
COFST    DC    F'0'               *****DUMMY*****
RFTXT    ABEND 60,DUMP            *****DUMMY*****
         END
/*
//IRV22 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
CRLD     TITLE 'CRLD '
CRLD     CSECT
         BALR  13,0
         USING *,13
         ENTRY CF
         ENTRY ARLDS
         EXTRN NBR
         CLI   RLF,X'FF'
         BC    8,BRLD
         MVI   RLF,X'FF'
         L     3,ARLDS            INITIALIZE
         MVC   RLB(4),0(3)
         LA    4,4(3)
         ST    4,ARLDS
         CLC   RLB(4),RLFF        ANY RLD
         BC    8,REN
         MVC   ST82(4),RLFF
         MVC   ST82+4(4),RLFF
         MVC   ST83(8),0(4)
         MVC   ST8G(8),ST83
         MVI   FF,X'00'
BRLD     L     3,ARLDS
         MVI   CF,X'00'
ALOP1    SR    6,6
ALOP2    TM    CF,X'01'
         BC    1,HM
         MVC   ST8(8),0(3)        NO CONTINUATION
         LA    3,8(3)
         LA    6,8(6)
         BC    15,FM
HM       MVC   ST8+4(4),0(3)      CONTINUATION
         LA    3,4(3)
         LA    6,4(6)
FM       L     4,CF
         SLL   4,4
         SRL   4,30
         LA    4,1(4)             CALCULATE LENGTH
         ST    4,TLA2
         CLI   FF,X'00'
         BC    7,CLOPA
         CLC   ST8+5(3),ST8G+5
         BC    13,C66
         MVC   ST8G(8),ST8
C66      C     6,RLB
         BC    4,ALOP2
         MVI   FF,X'FF'
         MVI   CF,X'00'
         MVC   ST83(8),ST8G
         BC    15,BRLD
CLOPA    CLC   ST8+5(3),ST82+5
         BC    13,RAC4
         CLC   ST8+5(3),ST83+5
         BC    2,RAC4
         MVC   ST83(8),ST8
         MVC   TLA3(4),TLA2
RAC4     C     6,RLB
         BC    4,ALOP2
         BC    8,RAD3
RAD3     CLC   ST82(8),ST83
         BC    8,REN
         MVC   8(4,14),TLA3       NO
         MVC   0(8,14),ST83
         MVC   ST82(8),ST83
         MVC   ST83(8),ST8G
         BC    15,RRR
REN      MVC   8(4,14),LRD        YES
         MVI   CF,X'00'
         SR    3,3
         ST    3,RLFF
         MVC   ARLDS(4),ARLDE
         MVI   RLF,X'00'
RRR      L     13,12(14)          RETURN
         BAL   14,16(14)
         DC    C'IMM='
ARLDS    DC    A(NBR)
ARLDE    DC    A(NBR)
FF       DC    F'0'
ST8      DC    F'0'
CF       DC    F'0'
RLB      DC    F'0'
RLF      DC    F'0'
RLFF     DC    F'0'
LRD      DC    X'0FFFFFFF'
AIC      DC    F'0'
ARLDT    DC    F'0'
ARLDS2   DC    F'0'
RLFF2    DC    F'0'
RLFF3    DC    F'0'
ST8G     DC    2F'0'
ST82     DC    F'0'
CF2      DC    F'0'
ST83     DC    F'0'
         DC    F'0'
TLA2     DC    F'0'
TLA3     DC    F'0'
AFL      DC    F'0'
AFL2     DC    F'0'
ERRA     DC    F'8'
FRRA     DC    F'4'
         END
/*
//IRV23 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
AXN      TITLE 'FIND OP CODE MNEMONIC'
AXN      CSECT
         BALR  13,0
         ENTRY MEN
         EXTRN MENC
         USING *,13
         MVC   BOP(1),0(14)
RMEN     L     3,AMEN             BINARY SEARCH
         L     7,H55
         L     5,H55
         SR    4,4
         LA    3,840(3)
         CLC   BOP(1),4(3)
         BC    2,PSP
         BC    8,FND
SR       AR    7,4
SR2      SRA   7,1
         M     6,SIX
         L     3,AMEN
         AR    3,7
         CLC   BOP(1),4(3)
         BC    8,FND
         BC    4,HIGH
         D     6,SIX
         CR    4,7
         BC    8,PSP
         LR    4,7
         AR    7,5
         BC    15,SR2
HIGH     D     6,SIX
         CR    5,7
         BC    8,PSP
         LR    5,7
         BC    15,SR
FND      MVC   1(6,14),0(3)
         S     3,AMEN
         SR    2,2
         D     2,SIX
         SLL   3,2
         A     3,AMENC
         ST    3,12(14)
RETA     L     13,16(14)
         BAL   14,20(14)
PSP      MVC   1(6,14),DC         NO OP CODE
         BC    15,RETA
         DC    C'IMM='
AMENC    DC    A(MENC)
AMEN     DC    A(MEN)
H55      DC    F'141'
MNEM     DC    C'      '
SIX      DC    F'6'
FIVE     DC    H'5'
ST6      DC    C'      '
BOP      DC    C' '
DC       DC    C'DC  '
         DC    X'0000'
MEN      DC    C'SPM '
         DC    X'0413'
         DC    C'BALR'
         DC    X'051F'
         DC    C'BCTR'
         DC    X'061F'
         DC    C'BCR '
         DC    X'071F'
         DC    C'SSK '
         DC    X'0810'
         DC    C'ISK '
         DC    X'0910'
         DC    C'SVC '
         DC    X'0A1F'
         DC    C'LPR '
         DC    X'1010'
         DC    C'LNR '
         DC    X'1110'
         DC    C'LTR '
         DC    X'1210'
         DC    C'LCR '
         DC    X'1310'
         DC    C'NR  '
         DC    X'1410'
         DC    C'CLR '
         DC    X'1510'
         DC    C'OR  '
         DC    X'1610'
         DC    C'XR  '
         DC    X'1710'
         DC    C'LR  '
         DC    X'1810'
         DC    C'CR  '
         DC    X'1910'
         DC    C'AR  '
         DC    X'1A10'
         DC    C'SR  '
         DC    X'1B10'
         DC    C'MR  '
         DC    X'1C10'
         DC    C'DR  '
         DC    X'1D10'
         DC    C'ALR '
         DC    X'1E10'
         DC    C'SLR '
         DC    X'1F10'
         DC    C'LPDR'
         DC    X'2012'
         DC    C'LNDR'
         DC    X'2112'
         DC    C'LTDR'
         DC    X'2212'
         DC    C'LCDR'
         DC    X'2312'
         DC    C'HDR '
         DC    X'2412'
         DC    C'LDR '
         DC    X'2812'
         DC    C'CDR '
         DC    X'2912'
         DC    C'ADR '
         DC    X'2A12'
         DC    C'SDR '
         DC    X'2B12'
         DC    C'MDR '
         DC    X'2C12'
         DC    C'DDR '
         DC    X'2D12'
         DC    C'AWR '
         DC    X'2E12'
         DC    C'SWR '
         DC    X'2F12'
         DC    C'LPER'
         DC    X'3011'
         DC    C'LNER'
         DC    X'3111'
         DC    C'LTER'
         DC    X'3211'
         DC    C'LCER'
         DC    X'3311'
         DC    C'HER '
         DC    X'3411'
         DC    C'LER '
         DC    X'3811'
         DC    C'CER '
         DC    X'3911'
         DC    C'AER '
         DC    X'3A11'
         DC    C'SER '
         DC    X'3B11'
         DC    C'MER '
         DC    X'3C11'
         DC    C'DER '
         DC    X'3D11'
         DC    C'AUR '
         DC    X'3E11'
         DC    C'SUR '
         DC    X'3F11'
         DC    C'STH '
         DC    X'4021'
         DC    C'LA  '
         DC    X'4120'
         DC    C'STC '
         DC    X'4220'
         DC    C'IC  '
         DC    X'4320'
         DC    C'EX  '
         DC    X'442F'
         DC    C'BAL '
         DC    X'452F'
         DC    C'BCT '
         32    6735  7
         DC    C'BC  '
         DC    X'472F'
         DC    C'LH  '
         DC    X'4821'
         DC    C'CH  '
         DC    X'4921'
         DC    C'AH  '
         DC    X'4A21'
         DC    C'SH  '
         DC    X'4B21'
         DC    C'MH  '
         DC    X'4C21'
         DC    C'CVD '
         DC    X'4E23'
         DC    C'CVB '
         DC    X'4F23'
         DC    C'ST  '
         DC    X'5026'
         DC    C'N   '
         DC    X'5426'
         DC    C'CL  '
         DC    X'5526'
         DC    C'O   '
         DC    X'5626'
         DC    C'X   '
         DC    X'5726'
         DC    C'L   '
         DC    X'5822'
         DC    C'C   '
         DC    X'5922'
         DC    C'A   '
         DC    X'5A22'
         DC    C'S   '
         DC    X'5B22'
         DC    C'M   '
         DC    X'5C22'
         DC    C'D   '
         DC    X'5D22'
         DC    C'AL  '
         DC    X'5E27'
         DC    C'SL  '
         DC    X'5F27'
         DC    C'STD '
         DC    X'6028'
         DC    C'LD  '
         DC    X'6825'
         DC    C'CD  '
         DC    X'6925'
         DC    C'AD  '
         DC    X'6A25'
         DC    C'SD  '
         DC    X'6B25'
         DC    C'MD  '
         DC    X'6C25'
         DC    C'DD  '
         DC    X'6D25'
         DC    C'AW  '
         DC    X'6E28'
         DC    C'SW  '
         DC    X'6F28'
         DC    C'STE '
         DC    X'7024'
         DC    C'LE  '
         DC    X'7824'
         DC    C'CE  '
         DC    X'7924'
         DC    C'AE  '
         DC    X'7A24'
         DC    C'SE  '
         DC    X'7B24'
         DC    C'ME  '
         DC    X'7C24'
         DC    C'DE  '
         DC    X'7D24'
         DC    C'AU  '
         DC    X'7E24'
         DC    C'SU  '
         DC    X'7F24'
         DC    C'SSM '
         DC    X'8041'
         DC    C'LPSW'
         DC    X'824F'
         DC    C'WRD '
         DC    X'8440'
         DC    C'RDD '
         DC    X'8540'
         DC    C'BXH '
         DC    X'863F'
         DC    C'BXLE'
         DC    X'873F'
         DC    C'SRL '
         DC    X'8831'
         DC    C'SLL '
         DC    X'8931'
         DC    C'SRA '
         DC    X'8A31'
         DC    C'SLA '
         DC    X'8B31'
         DC    C'SRDL'
         DC    X'8C31'
         DC    C'SLDL'
         DC    X'8D31'
         DC    C'SRDA'
         DC    X'8E31'
         DC    C'SLDA'
         DC    X'8F31'
         DC    C'STM '
         DC    X'9030'
         DC    C'TM  '
         DC    X'9140'
         DC    C'MVI '
         DC    X'9240'
         DC    C'NI  '
         DC    X'9440'
         DC    C'CLI '
         DC    X'9540'
         DC    C'OI  '
         DC    X'9640'
         DC    C'XI  '
         DC    X'9740'
         DC    C'LM  '
         DC    X'9830'
         DC    C'SIO '
         DC    X'9C41'
         DC    C'TIO '
         DC    X'9D41'
         DC    C'HIO '
         DC    X'9E41'
         DC    C'TCH '
         DC    X'9F41'
         DC    C'MVN '
         DC    X'D150'
         DC    C'MVC '
         DC    X'D250'
         DC    C'MVZ '
         DC    X'D350'
         DC    C'NC  '
         DC    X'D450'
         DC    C'CLC '
         DC    X'D550'
         DC    C'OC  '
         DC    X'D650'
         DC    C'XC  '
         DC    X'D750'
         DC    C'TR  '
         DC    X'DC50'
         DC    C'TRT '
         DC    X'DD50'
         DC    C'ED  '
         DC    X'DE50'
         DC    C'EDMK'
         DC    X'DF50'
         DC    C'MVO '
         DC    X'F151'
         DC    C'PACK'
         DC    X'F251'
         DC    C'UNPK'
         DC    X'F351'
         DC    C'ZAP '
         DC    X'F851'
         DC    C'CP  '
         DC    X'F951'
         DC    C'AP  '
         DC    X'FA51'
         DC    C'SP  '
         DC    X'FB51'
         DC    C'MP  '
         DC    X'FC51'
         DC    C'DP  '
         DC    X'FD51'
         DS    0F
         END
/*
//IRV24 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ADDR     TITLE 'ADDR '
ADDR     CSECT
         BALR  13,0
         USING *,13
         EXTRN SAVA
         EXTRN USING
         EXTRN CXN
         ST    14,A14
         MVC   PAS(4),8(14)
         L     6,PAS
         MVC   BAS(4),0(14)
         MVC   RGG(4),4(14)
         MVC   DISP+2(2),2(14)
         MVC   FLR+2(2),DISP+2
         NI    DISP+2,X'0F'
         MVI   FLR,X'03'
         ST    13,FLR+8
         L     14,AUSIX           FIND ABSOLUTE ADDRESS
         CNOP  2,4
         BALR  14,14
FLR      DC    F'0'
         DC    F'0'
         DC    F'0'
         L     3,FLR
         SLL   3,8
         SRL   3,8
         A     3,DISP
         ST    3,ADX1
         ST    3,DIS2
         ST    13,ADX1+8
         L     14,ADCXN           CONVERT TO BCD
         CNOP  6,8
         BALR  14,14
ADX1     DC    D'0'
         DC    F'0'
         L     14,A14
         L     6,PAS
         CLI   30(6),C'0'
         BC    8,SECA
         MVC   XFG(1),15(14)
         NI    XFG,C'0'
         CLI   XFG,X'20'
         BC    8,SECA
         CLI   XFG,X'30'
         BC    8,SECA
         MVC   30(6,6),ADX1+2     FIRST ADDRESS
         BC    15,SECB
SECA     MVC   40(6,6),ADX1+2     SECOND ADDRESS
SECB     CLI   FLR,X'00'
         BC    8,RAD
LDIS     L     3,DIS2
         SLL   3,8                NO
         ST    3,SAV
         MVC   SAV+3(1),15(14)
         ST    13,SAV+8
         L     14,ASAVA           SAVE ADDRESS
         CNOP  6,8
         BALR  14,14
SAV      DC    D'0'
         DC    F'0'
         L     6,PAS
         LA    5,SAV+7
         LA    4,8
CLL      CLI   0(5),C' '
         BC    7,LAA
         BCT   4,CLM
CLM      BCT   5,CLL
LAA      L     14,A14
         MVC   0(8,14),SAV
         CLC   CZ(3),RGG+1        IS INDEX ZERO
         BC    8,RADD             BRANCH IF YES
         CLI   RGG,X'01'          IS THERE A LENGTH
         BC    8,RADD             OR INDEX
         MVI   1(5),C'('          YES
         CLI   RGG+1,X'00'
         BC    7,RAD2
RADA3    LA    4,4(4)             ONE SIGNIF. CHAR.
         CLI   RGG+2,C'0'
         BC    7,RADO
         MVC   2(1,5),RGG+3
         S     5,ONEM
         S     4,ONEM
         MVI   4(5),C')'
         MVC   0(12,14),SAV
         BC    15,RADD
RADO     MVC   2(2,5),RGG+2       TWO SIGNIF. CHAR.
         MVI   4(5),C')'
         MVC   0(12,14),SAV
         BC    15,RADD
RAD2     CLI   RGG+1,C'0'         THREE SIGNIF. CHAR.
         BC    8,RADA3
         MVC   2(3,5),RGG+1
         MVI   5(5),C')'
         LA    4,5(4)
         MVC   0(12,14),SAV
         BC    15,RADD
RAD      LA    4,8                ADDRESS IS ABSOLUTE
         L     3,DISP
         CVD   3,DWA1
         UNPK  DWA(8),DWA1(8)
         OI    DWA+7,C'0'
         L     6,PAS
         L     14,A14
         LR    8,14
         LA    7,3
         LA    5,DWA+4
CLAD     CLI   0(5),C'0'          REMOVE LEADING ZEROES
         BC    7,RADP
         LA    5,1(5)
         S     14,ONEM
         S     4,ONEM
         BCT   7,CLAD
RADP     STC   7,MVAR+1
MVAR     MVC   0(1,8),0(5)
         MVI   4(14),C'('
         L     3,BAS
         SRL   3,12
         CVD   3,DWA1
         UNPK  DWA(8),DWA1(8)
         OI    DWA+7,C'0'
         CLI   RGG,X'01'          IS THERE A LENGTH
         BC    8,NXX
         CLI   RGG+1,X'00'        YES
         BC    8,NX2
         LA    4,4(4)
         CLI   RGG+1,C'0'
         BC    7,SSR1
         S     4,ONEM
         CLI   RGG+2,C'0'
         BC    7,SSR2
SRRR     S     4,ONEM
         MVC   5(1,14),RGG+3      LENGTH IS ONE SIGN. CHAR.
         MVI   6(14),C','
         S     14,TWOC
         BC    15,SSR3
SSR2     MVC   5(2,14),RGG+2      LENGTH IS TWO SIGN. CHAR.
         MVI   7(14),C','
         S     14,ONEM
         BC    15,SSR3
SSR1     MVC   5(3,14),RGG+1      LENGTH IS THREE SIGN. CHAR.
         MVI   8(14),C','
SSR3     CLC   DWA+6(2),DZA       IS BASE ZERO
         BC    8,NX3
         CLI   DWA+6,C'0'         NO
         BC    7,SSR4
         MVC   9(1,14),DWA+7      BASE IS ONE SIGN. CHAR.
         MVI   10(14),C')'
         S     4,ONEM
         BC    15,RADD
SSR4     MVC   9(2,14),DWA+6      BASE IS TWO SIGN. CHAR.
         MVI   11(14),C')'
         BC    15,RADD
NX3      MVI   8(14),C')'
         S     4,TWOC3
         BC    15,RADD
NX2      LA    4,3(4)
         CLI   RGG+2,C'0'
         BC    7,SSR5
         CLI   RGG+3,C'0'
         BC    7,LAP
         CLC   DWA+6(2),DZA
         BC    7,LAP
         MVI   4(14),C' '
         S     4,SIXC
         BC    15,RADD
LAP      MVC   5(1,14),RGG+3
         S     4,ONEM
         S     14,ONEM
         BC    15,SSR6
SSR5     MVC   5(2,14),RGG+2      INDEX IS TWO SIGN. CHAR.
SSR6     MVI   7(14),C','
         CLC   DWA+6(2),DZA       IS THERE A BASE
         BC    7,SSR7
         MVI   7(14),C')'         NO
         S     4,TWOC3
         BC    15,RADD
SSR7     CLI   DWA+6,C'0'
         BC    7,SSR8
         MVC   8(1,14),DWA+7      BASE IS ONE SIGN. CHAR.
         MVI   9(14),C')'
         S     4,ONEM
         BC    15,RADD
SSR8     MVC   8(2,14),DWA+6      BASE IS TWO SIGN. CHAR.
         MVI   10(14),C')'
         BC    15,RADD
NXX      CLC   DWA+6(2),DZA       IS THERE A BASE
         BC    7,NXX3
         MVI   4(14),C' '         NO
         S     4,FORM
         BC    15,RADD
NXX3     CLI   DWA+6,C'0'
         BC    7,NXX2
         MVC   5(1,14),DWA+7      BASE IS ONE CHAR.
         S     4,ONEM
         MVI   6(14),C')'
         BC    15,RADD
NXX2     MVC   5(2,14),DWA+6      BASE IS TWO CHAR.
         MVI   7(14),C')'
RADD     L     14,A14             RETURN
         ST    4,12(14)
         L     13,16(14)
         BAL   14,20(14)
         DC    C'IMM='
ADCXN    DC    A(CXN)
AUSIX    DC    A(USING)
ASAVA    DC    A(SAVA)
XFG      DC    F'0'
PAS      DC    F'0'
TWOC3    DC    F'3'
FORM     DC    F'4'
SIXC     DC    F'6'
DZA      DC    C'0000'
DWA1     DC    D'0'
DWA      DC    D'0'
RGG      DC    F'0'
BAS      DC    F'0'
ONEM     DC    F'1'
TWOC     DC    F'2'
ADD      DC    F'0'
CZ       DC    X'00F0F000'
DISP     DC    F'0'
DIS2     DC    F'0'
A14      DC    F'0'
         END
/*
//IRV25 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
SAVA     TITLE 'SAVA '
SAVA     CSECT
         BALR  13,0
         USING *,13
         ENTRY AST
         ENTRY NAST
         EXTRN CXN
         EXTRN BSC
         EXTRN PA
         EXTRN PRINT
         ST    14,S14
         CLI   SVK,X'FF'
         BC    8,SVXR
         L     3,NAST
         C     3,SV100
         BC    4,LASTV
         BC    2,SVXR
         L     3,SPAG
         MVI   0(3),C' '
         MVC   1(132,3),0(3)
         MVC   0(35,3),SEM
         L     14,SVPRT
         CNOP  2,4
         BALR  14,14
SPAG     DC    A(PA)
         L     14,S14
         L     3,NAST
LASTV    LA    3,1(3)
         ST    3,NAST
         L     4,AST
         MVC   0(4,4),0(14)
         LA    4,4(4)
         ST    4,AST
SVXR     MVC   SAX(4),0(14)
         CLI   SVK,X'FF'          PASS4
         BC    8,RTSB
RSTV     ST    13,SAX+8           NO
         L     14,SCXN            FIND BCD EQUIV.
         CNOP  6,8
         BALR  14,14
SAX      DC    D'0'
         DC    F'0'
         L     14,S14
         L     3,0(14)
         MVC   0(8,14),BLK
         SRL   3,28
         LA    3,193(3)
         STC   3,0(14)
         MVC   1(5,14),SAX+1
         L     13,8(14)           RETURN
         BAL   14,12(14)          P
RTSB     ST    13,BCDA+8
         SR    3,3
         ST    3,BCDA
         MVC   BCDA+1(4),SAX
         L     14,ABSC            FIND BCD SYMBAL
         CNOP  2,4
         BALR  14,14
BCDA     DC    F'0'
         DC    F'0'
         DC    F'0'
         L     14,S14
         CLI   BCDA,C' '          IS  HERE A S0MBOL
         BC    8,RSTV
         MVC   0(8,14),BCDA       YES
         L     13,8(14)           RETURN
         BAL   14,12(14)
         DC    C'IMM='
ABSC     DC    A(BSC)
SCXN     DC    A(CXN)
S14      DC    F'0'
BLK      DC    C'    '
         DC    C'    '
SV100    DC    F'999'
SEM      DC    C'**  '
         DC    C'MORE THA'
         DC    C'N 1000 '
         DC    C'LABEL RE'
         DC    C'FERENCES'
SVPRT    DC    A(PRINT)
AST      DC    A(STT)
SST      DC    A(STT)
SVK      DC    F'0'
NAST     DC    F'0'
STT      DS    500F
         DS    500F
         END
/*
//IRV26 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
USIN     TITLE 'USING '
USING    CSECT
         BALR  13,0
         USING *,13
         L     3,0(14)
         SLL   3,16
         SRL   3,28
         SLL   3,3
         A     3,AUS
         C     3,AUS              IS REGISTER ZERO
         BC    8,RETR2
         TM    0(14),X'03'        NO
         BC    8,DROP
         BC    1,RETR
         MVC   1(4,3),4(14)       STORE IC IN TABLE
         MVI   0(3),X'01'
         BC    15,RETR
DROP     MVC   0(8,3),DUZ         DROP REGISTER
RETR     MVC   1(3,14),1(3)
         MVC   0(1,14),4(3)
RETR3    L     13,8(14)
         BAL   14,12(14)          RETURN
RETR2    MVC   0(4,14),DUZ        REGISTER IS ZERO
         BC    15,RETR3
         DC    C'IMM='
DUZ      DC    D'0'
AUS      DC    A(USTB)
USTB     DC    16D'0'
         END
/*
//IRV27 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
BCV      TITLE 'BCV '
BCV      CSECT
         BALR  13,0
         USING *,13
         SR    4,4
         LA    5,2
         L     3,0(14)
         SRL   3,4
LP       MVI   RG1+2,C'0'         CONVERT BASE
         C     3,NINE             TO BCD
         BC    4,N1
         MVI   RG1+2,C'1'
         S     3,NINE
N1       STC   3,RG1+3
         OI    RG1+3,C'0'
         BXH   4,5,RETV
         NI    3(14),X'0F'
         MVC   RG1(2),RG1+2
         L     3,0(14)
         BC    15,LP
RETV     MVC   0(4,14),RG1
         L     13,4(14)           RETURN
         BAL   14,8(14)
         DC    C'IMM='
RG1      DC    F'0'
NINE     DC    F'10'
         END
/*
//IRV28 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
FXPT     TITLE 'FXPT'
FXPT     CSECT
         BALR  13,0
         USING *,13
         L     4,0(14)
         MVC   70(2,4),FQ
         TM    4(14),X'80'
         BC    8,NFN
         MVI   72(4),C'-'
         LA    4,1(4)
NFN      L     2,4(14)
         LPR   2,2
         CVD   2,DWFP2
         UNPK  DWD2-2(10),DWFP2+2(6)
         OI    DWD2+7,C'0'
         LA    2,DWD2-2
         LA    3,9
FZL      CLI   0(2),C'0'
         BC    7,NFZ
         LA    2,1(2)
         BCT   3,FZL
NFZ      EX    3,MVFZ2
         AR    4,3
         MVI   73(4),X'7D'
         L     13,8(14)
         BAL   14,12(14)
MVFZ2    MVC   72(1,4),0(2)
         DC    C'IMM='
DWFP2    DC    D'0'
FQ       DC    X'C67D'
         DC    F'0'
DWD2     DC    D'0'
         END
/*
//IRV29 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
FLPT     TITLE 'FLOATING POINT CONVERSION'
FLPT     CSECT
         BALR  13,0
         USING *,13
         MVC   TM1(8),4(14)
         MVC   FSO(2),ZFP
         TM    TM1,X'80'
         BC    8,PFP
         MVI   FSO,X'01'
         NI    TM1,X'7F'
PFP      LD    0,TN16
         LD    2,TM1
         SR    1,1
         CLC   TM1+1(3),ZFP
         BC    8,MZER
         LA    2,16
COMF     CLC   TM1(8),TN17
         BC    11,DVFP
         CLC   TM1(8),TN1
         BC    2,NPMF
         MDR   2,0
         STD   2,TM1
         SR    1,2
         BC    15,COMF
DVFP     DDR   2,0
         STD   2,TM1
         AR    1,2
         BC    15,COMF
NPMF     LA    3,TN16
         LA    4,5
         MVC   TM2(8),TM1
COMF2    CLC   TM2(8),TN17
         BC    4,NMFP2
         AR    1,2
         MVC   TM2(8),TM1
NMFP2    MVC   TM1(8),TM2
         SRL   2,1
         LA    3,8(3)
         LD    0,0(3)
         LD    2,TM2
         MDR   2,0
         SR    1,2
         STD   2,TM2
         BCT   4,COMF2
         CLI   TM1,X'4F'
         BC    7,NOF
         MVI   FSO+1,X'01'
NOF      MVI   TM1,X'00'
         LM    2,3,TM1
         TM    FSO+1,X'01'
         BC    8,NSFP
         SLDL  2,4
         BC    15,NFFP
NSFP     SR    4,4
         NI    TM2,X'0F'
         IC    4,TM2
         S     4,FFP
         LPR   4,4
         SLL   4,2
         STC   4,SLFP+3
SLFP     SRDL  2,0
NFFP     D     2,TNT
         CVD   2,DWFP
         UNPK  FDP+8(9),DWFP+3(5)
         OI    FDP+16,C'0'
         CVD   3,DWFP
         UNPK  FDP(8),DWFP+3(5)
         OI    FDP+7,C'0'
         LA    3,17
         LA    2,FDP
CLFP     CLI   0(2),C'0'
         BC    7,NMFZ
         LA    2,1(2)
         BCT   3,CLFP
NMFZ     AR    1,3
         L     4,0(14)
         MVC   70(4,4),FQD
         TM    12(14),X'80'
         BC    1,DPF
         S     3,EIGHF
         MVI   70(4),C'E'
DPF      CLI   FSO,X'01'
         BC    7,DPF2
         MVI   72(4),C'-'
         MVC   73(2,4),FQD+2
         LA    4,1(4)
DPF2     EX    3,MVFZ
         AR    4,3
         MVI   73(4),C'E'
         MVI   74(4),C'+'
         LTR   1,1
         BC    11,PEXP
         MVI   74(4),C'-'
PEXP     CVD   1,DWFP
         UNPK  75(2,4),DWFP+6(2)
         OI    76(4),C'0'
         MVI   77(4),X'7D'
         L     13,16(14)
         BAL   14,20(14)
MZER     L     4,0(14)
         MVC   70(5,4),ZERPT
         CLI   FSO,X'01'
         BC    7,20(14)
         MVI   70(4),C'D'
         BAL   14,20(14)
MVFZ     MVC   74(1,4),0(2)
         DC    C'IMM='
TM1      DC    D'0'
TM2      DC    D'0'
TN17     DC    X'4F163457'
         DC    X'85D8A000'
TN16     DC    X'4E2386F2'
         DC    X'6FC10000'
         DC    X'475F5E10'
         DC    X'00000000'
         DC    X'44271000'
         DC    X'00000000'
         DC    X'42640000'
         DC    X'00000000'
         DC    X'41A00000'
         DC    X'00000000'
TN1      DC    X'41100000'
         DC    X'00000000'
DWFP     DC    D'0'
FDP      DC    D'0'
         DC    D'0'
         DC    F'0'
ZFP      DC    F'0'
FFP      DC    F'14'
FSO      DC    F'0'
EIGHF    DC    F'8'
TNT      DC    X'3B9ACA00'
FQD      DC    X'C47DF04B'
ZERPT    DC    X'C57DF0'
         DC    C'.'
         DC    X'7D'
         END
/*
//IRV30 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PR       TITLE 'PR  '
PR       CSECT
         BALR  13,0
         USING *,13
         EXTRN CXN
         ST    14,PR14
         MVC   PAX(4),4(14)
         ST    13,PAX+8
         L     14,PACXN
         CNOP  6,8
         BALR  14,14
PAX      DC    D'0'
         DC    F'0'
         L     14,PR14
         L     3,0(14)
         MVC   9(2,3),PAX         ALL INSTRUCTIONS
         MVC   12(2,3),PAX+2
         L     4,12(14)
         S     4,PTWO
         BC    8,PRET
         MVC   15(1,3),PAX+4      RX, RS, SI, AND SS
         MVC   17(3,3),PAX+5      INSTRUCTIONS
         S     4,PTWO
         BC    8,PRET
         MVC   PAX2(4),8(14)      SS INSTRUCTIONS
         ST    13,PAX2+8
         L     14,PACXN
         CNOP  6,8
         BALR  14,14
PAX2     DC    D'0'
         DC    F'0'
         L     14,PR14
         L     3,0(14)
         MVC   21(1,3),PAX2
         MVC   23(3,3),PAX2+1
PRET     L     13,16(14)          RETURN
         BAL   14,20(14)
         DC    C'IMM='
PR14     DC    F'0'
PTWO     DC    F'2'
PACXN    DC    A(CXN)
         END
/*
//IRV31 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
CXN      TITLE 'CXN '
CXN      CSECT
         BALR  13,0
         USING *,13
         L     3,0(14)
         LA    5,0(14)
         LA    1,8
SH       SR    2,2
         SLDL  2,4
         A     2,AONE
         MVC   0(1,5),0(2)        CONVERT HEX TO NUMBER
         LA    5,1(5)             TO BCD
         BCT   1,SH
         L     13,8(14)
         BAL   14,12(14)          RETURN
         DC    C'IMM='
AONE     DC    A(HX)
HX       DC    C'01234567'
         DC    C'89ABCDEF'
         END
/*
//IRV32 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
CDN      TITLE 'CDN '
CDN      CSECT
         BALR  13,0
         USING *,13
         LA    7,2
         LA    6,4
         LR    3,14
         L     5,0(14)
         SR    4,4
SR4      SLL   5,4
         SLDL  4,4
         TM    0(3),C'0'          IS IT A NUMBER
         BC    1,NAF
         LA    4,9(4)             NO
NAF      LA    3,1(3)             YES
         BCT   6,SR4
         LA    6,4
         L     5,4(14)
         BCT   7,SR4
         ST    4,4(14)
         L     13,8(14)
         BAL   14,12(14)          RETURN
         END
/*
//IRV33 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
ART      TITLE 'ART '
ART      CSECT
         BALR  13,0
         USING *,13
         ENTRY AST4
MARTC    MVC   0(4,14),ARP
         CLI   ARP,X'FF'          LAST ADDRESS
         BC    8,RART
         SR    3,3                NO
         C     3,NEL4
         BC    7,LAST
         MVI   ARP,X'FF'
         BC    15,MARTC
LAST     L     4,AST4
         MVC   0(4,14),0(4)       FETCH NEXT ADDRESS
         LA    4,4(4)
         ST    4,AST4
         L     4,AST5
         MVC   4(8,14),0(4)
         LA    4,8(4)             FETCH BCD MNEMONIV
         ST    4,AST5
         L     4,NEL4
         BCT   4,ARM              DECREMENT ADDR. COUNT
         MVI   ARP,X'FF'
         ST    4,NEL4
         BC    15,RART
ARM      ST    4,NEL4
RART     L     13,12(14)          RETURN
         BAL   14,16(14)
         DC    C'IMM='
AST4     DC    F'0'
NEL4     DC    F'0'
AST5     DC    F'0'
ARP      DC    X'00FFFFFF'
         END
/*
//IRV34 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
BSC      TITLE 'BSC '
BSC      CSECT
         BALR  13,0
         USING *,13
         ENTRY NAVBS
         L     3,NAVBS
         L     7,NUMX
         L     5,NUMX
         SR    4,4
         L     6,NUMX
         S     6,BONE
         BC    4,PSPB2
         SLL   6,2
         AR    3,6
         CLC   1(3,14),0(3)
         BC    2,PSPB2
         BC    8,FND2
SRB      AR    7,4                BINARY SEARCH
SRB2     SRA   7,1
         SLL   7,2
         L     3,NAVBS
         AR    3,7
         CLC   1(3,14),0(3)
         BC    8,FND2
         BC    4,HIGH2
         SRL   7,2
         CR    4,7
         BC    8,PSPB2
         LR    4,7
         AR    7,5
         BC    15,SRB2
HIGH2    SRL   7,2
         CR    5,7
         BC    8,PSPB2
         LR    5,7
         BC    15,SRB
FND2     S     3,NAVBS
         SLL   3,1
         A     3,BCDVE
         MVC   0(8,14),0(3)
BRET     L     13,8(14)
         BC    15,12(14)          RETURN
PSPB2    MVI   0(14),C' '         ADDRESS NOT IN TABLE
         BC    15,BRET
         DC    C'IMM='
BONE     DC    F'1'
NAVBS    DC    F'0'
NUMX     DC    F'0'
BCDVE    DC    F'0'
         END
/*
//IRV35 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PRIF     TITLE 'INTERFACE FROM DIS-ASSEMBLER TO STANDARD PRINT && READ'
PRINT    CSECT
         ENTRY READ
         EXTRN PRINTA,READA
         BALR  12,0
         USING *,12
         MVI   PRTIN,X'FF'        SET PRINT ENTERANCE FLAG
READ     BALR  12,0
         USING *,12
         STM   13,1,SVLKG         SAVE REGS USED IN STANDARD LINKAGE
         LR    1,14               SET UP STANDARD PARAMETER POINTER
         LA    13,SVPGM           PROVIDE MAIN PROGRAM SAVE AREA
         CLI   PRTIN,X'FF'        PRINT OR READ CALLED?
         BC    8,PRIN
         LA    14,RTN             SET UP READ RETURN ADR
         L     15,ARD             CALL STANDARDIZED
         BCR   15,15              READ ROUTINE
PRIN     L     15,APRN            CALL STANDARDIZED
         BALR  14,15              PRINT ROUTINE
RTN      LM    13,1,SVLKG         RESTORE LINKAGE REGS
         MVI   PRTIN,X'0'         RESET PRINT ENTERANCE FLAG
         BC    15,4(14)           *** RETURN ***
PRTIN    DC    F'0'               PRINT CALLED FLAG
ARD      DC    A(READA)           STANDARDIZED READ ROUTINE ADR
APRN     DC    A(PRINTA)          STANDARDIZED PRINT ROUTINE ADR
SVLKG    DC    6F'0'              INTERFACE SAVE AREA
SVPGM    DC    18F'0'             MAIN PROGRAM SAVE AREA
         END
/*
//IRV36 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PRTA     TITLE 'STANDARDIZED PRINT WITH ERROR ROUTINE     AUG. 14,1967'
PRINTA   CSECT
         ENTRY LCT
         ENTRY PDOFF
         ENTRY PRDCB
         EXTRN PUNCH
         STM   14,12,12(13)       **************
         BALR  12,0               *            *
         USING *,12               *  STANDARD  *
         ST    13,SVPR+4          *   S/360    *
         LR    11,13              *  LINKAGE   *
         LA    13,SVPR            *            *
         ST    13,8(11)           **************
         L     3,0(1)             LOAD DATA SOURCE ADR
         TM    PRDCB+48,X'10'     IS PRINT DATA SET OPEN?
         BC    1,OKPR             BRANCH IF YES
         OPEN  (PRDCB,(OUTPUT))   NO, OPEN DATA SET
         TM    PRDCB+48,X'10'     WAS PRINT OPEN SUCCESSFUL?
         BC    1,PG1              BRANCH IF YES
         ABEND 2,DUMP             DUMP IF UNABLE TO OPEN PRINT
PG1      MVC   MSG+40(91),MSG+39  CLEAR REMAINING MESSAGE FIELD
         PUT   PRDCB,MSG          PRINT HEADER MESSAGE
OKPR     L     5,LCT
         LA    5,1(5)             INCREMENT LINE COUNT
         ST    5,LCT
         C     5,FFT              IS THIS LAST LINE OF PAGE
         BC    4,PRNT             BRANCH IF NO
         LA    5,1                RE-SET LINE
         ST    5,LCT              COUNT TO ONE
         L     5,PCT              INCREMENT
         LA    5,1(5)             PAGE COUNT
         ST    5,PCT              BY ONE
         CVD   5,DPCT             GET DECIMAL PAGE COUNT
         UNPK  PAGE+4(3),DPCT+5(3)
         CLI   PAGE+4,C'0'        REMOVE
         BC    7,NOBLK
         MVI   PAGE+4,C' '        LEADING
         CLI   PAGE+5,C'0'
         BC    7,NOBLK            ZEROES
         MVI   PAGE+5,C' '
NOBLK    OI    PAGE+6,C'0'        REMOVE DECIMAL SIGN (ZONE)
         PUT   PRDCB,HEAD         PRINT PAGE HEADING
         MVI   0(3),C'0'          SKIP LINE AFTER HEADING
PRNT     PUT   PRDCB,0(3)         PRINT A LINE FROM CALLING PROGRAM
         CLI   PDOFF,X'FF'        SHOULD PUNCH & DISK BE BYPASSED?
         BC    8,ENDPR            BRANCH IF YES
         LA    1,54(3)            LOAD PUNCH DATA ADR
         ST    1,PLL
         L     14,PPUN
         CNOP  2,4
         BALR  14,14              ***** PUNCH *****
PLL      DC    F'0'
ENDPR    MVI   0(3),C' '          CLEAR DATA SOURCE LOCATIONS
         MVC   1(134,3),0(3)      IN CALLING PROGRAM
         L     13,SVPR+4          **********
         LM    14,12,12(13)       * RETURN *
         BCR   15,14              **********
PRERR    MVC   0(44,3),PRMSG      *** PRINTER ERROR ROUTINE ***
         MVC   45(87,3),44(3)     CLEAR PRINT POS BEYOND 45
         BC    15,OKPR            PRINT ERROR MESSAGE & CONTINUE
PPUN     DC    A(PUNCH)           ADR OF PUNCH ROUTINE
T13      DC    F'0'
LCT      DC    F'0'               PRINTER LINE COUNT
FFT      DC    F'60'              MAX LINE COUNT PER PAGE
PDOFF    DC    F'0'               PUNCH & DISK BYPASSED IF =X'FF'
PCT      DC    F'0'               PAGE COUNT
DPCT     DC    D'0'               DECIMAL PAGE COUNT
SVPR     DC    18F'0'             PRINT-READ SAVE AREA
PRMSG    DC    CL45' *** PRINTER ERROR *** (CHECK PREVIOUS LINE) '
HEAD     DC    CL48'1   LOC  OBJECT CODE          ADDR1     ADDR2 '
         DC    CL55' STMT          SOURCE STATEMENT   JAN68 '
VER      DC    CL19'TIMING  TOTAL TIME '
PAGE     DC    CL10'PAGE '
MSG      DC    CL43'1S/360 DISASSEMBLER PROCESSING MESSAGES '
         DS    CL92
         EJECT
PRDCB    DCB   DDNAME=PRDD,DSORG=PS,MACRF=(PM),RECFM=FA,EROPT=ACC,SYNADX
               =PRERR,BLKSIZE=132,LRECL=132
         END
/*
//IRV37 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
READ     TITLE 'STAND. READ WITH EOF && RDERR ROUTINES   AUG. 14, 1967'
READA    CSECT
         ENTRY RDDCB
         EXTRN EXIT
         EXTRN PA
         EXTRN PDOFF
         EXTRN PRINTA
         STM   14,12,12(13)       **************
         BALR  12,0               *            *
         USING *,12               *  STANDARD  *
         ST    13,SVRD+4          *   S/360    *
         LR    11,13              *  LINKAGE   *
         LA    13,SVRD            *            *
         ST    13,8(11)           **************
         L     5,0(1)             LOAD DATA DESTINATION ADR
         TM    RDDCB+48,X'10'     IS READ DATA SET OPEN?
         BC    1,OKRD             BRANCH IF YES
         OPEN  (RDDCB,(INPUT))    NO, OPEN DATA SET
         TM    RDDCB+48,X'10'     WAS OPEN SUCCESSFUL?
         BC    1,OKRD             BRANCH IF YES
         ABEND 4,DUMP             DUMP IF UNABLE TO OPEN READ
OKRD     GET   RDDCB,0(5)         READ A CARD INTO CALLING PROGRAM
         L     13,SVRD+4          **********
         LM    14,12,12(13)       * RETURN *
         BCR   15,14              **********
RDERR    L     1,APDF             *** READ ERROR ROUTINE ***
         MVI   0(1),X'FF'         SET PUNCH-DISK BYPASS FLAG
         L     1,APA              ERROR MESSAGE
         MVC   0(40,1),RDMSG      AND CARD IMAGE
         MVC   40(80,1),0(5)      TO PRINT AREA
         MVI   119(1),C' '        BLANK REMAINING
         MVC   120(11,1),119(1)   PRINT POSITIONS
         LA    1,APA              LOAD PRINT PARM
         L     15,APRN            PRINT ERROR MESSAGE
         LA    14,OKRD            THEN READ NEXT CARD
         BCR   15,15              OVER ERROR IMAGE
EOF      L     1,APA              *** END OF FILE ROUTINE ***
         MVC   0(32,1),EOFMG      EOF MSG TO PRINT AREA
         MVC   33(100,1),32(1)    CLEAR PRINT POS BEYOND 32
         MVC   54(31,1),EOFMG+1   EOF MSG TO CARD IMAGE
         LA    1,APA              LOAD PRINT PARM
         L     15,APRN
         L     14,AEXIT           PRINT EOF MESSAGE, THEN
         BCR   15,15              GO TO SYS RETURN ROUTINE
SVRD     DC    18F'0'             READ TO PRINT SAVE AREA
AEXIT    DC    A(EXIT)            ADR OF SYS RETURN ROUTINE
APA      DC    A(PA)              ADR OF PRINT AREA
APDF     DC    A(PDOFF)           PUNCH-DISK BYPASS FLAG ADR
APRN     DC    A(PRINTA)          ADR OF STANDARDIZED PRINT ROUTINE
RDMSG    DC    CL40' *** READ ERROR *** THIS CARD IGNORED : '
EOFMG    DC    CL33'0*** END OF FILE TERMINATION *** '
         EJECT
RDDCB    DCB   DDNAME=RDDD,DSORG=PS,MACRF=(GM),RECFM=F,LRECL=80,BLKSIZEX
               =80,EODAD=EOF,EROPT=ACC,SYNAD=RDERR
         END
/*
//IRV38 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
PUN      TITLE 'STANDARDIZED PUNCH WITH DISK OUTPUT       AUG. 14,1967'
PUNCH    CSECT
         ENTRY PUDCB,DADCB
         EXTRN COTR
         BALR  10,0
         USING *,10
         LA    13,SAVE
         STM   14,12,12(13)       *************
         ST    13,SVPU+4          *   S/360    *
         LR    11,13              *  LINKAGE   *
         LA    13,SVPU            *            *
         ST    13,8(11)           **************
         L     1,0(14)
         LR    2,1                SAVE DATA ADR
         TM    DADCB+48,X'10'     ARE DATA SETS OPEN?
         BC    1,OKPU             BRANCH IF YES
         OPEN  (PUDCB,(OUTPUT),DADCB,(OUTPUT))
         TM    DADCB+48,X'10'     WAS DISK OPEN SUCCESSFUL?
         BC    1,TPDS             BRANCH IF YES
         ABEND 1,DUMP             DUMP IF UNABLE TO OPEN DISK
TPDS     TM    PUDCB+48,X'10'     WAS PUNCH OPEN SUCCESSFUL?
         BC    1,OKPU             BRANCH IF YES
         ABEND 3,DUMP             DUMP IF UNABLE TO OPEN PUNCH
OKPU     CLI   9(2),C' '          IS COL 10 BLANK
         MVI   LT,X'00'
         BC    7,MV
         CLI   10(2),C' '         IS COL 11 BLANK
         MVI   LT,X'01'
         BC    8,RTN              SKIP CARD IF YES
         LA    2,1(2)             NO,MOVE IMAGE LEFT ONE COL
MV       MVC   PUNO(76),0(2)      MOVE DATA TO PUNCH AREA
         L     3,PCCT
         LA    3,1(3)             INCREMENT CARD COUNT
         ST    3,PCCT
         CVD   3,DW               OBTAIN DECIMAL COUNT
         UNPK  PUNO+76(4),DW+5(3) PLACE UNPACKED COUNT IN COL 77-80
         OI    PUNO+79,X'F0'      REPLACE SIGN BY ZONE (F)
         L     5,PCOTR
         CLI   LT,X'00'
         BC      8,PUP
         CLI   2(5),C'P'          TEST FOR PUNCH INDICATOR
         BC    7,WRDA
PUP      PUT   PUDCB,PUNO         PUNCH A CARD
WRDA     PUT   DADCB,PUNO         CARD TO DISK FOR LATER ASM STEP
         CLC   ENDC(3),PUNO+9     IS THIS THE END CARD
         BC    8,ENDCD
RTN      L     13,SVPU+4          **********
         LM    14,12,12(13)       * RETURN *
         BC    15,4(14)
ENDCD    MVC   PUNO(3),DELM       PLACE DELIMETER ON DISK
         MVC   PUNO+3(77),PUNO+2  CLEAR REST OF DELIMETER CARD
         BC    15,WRDA
DW       DC    D'0'               UNPACKED CARD COUNT
PCOTR    DC    A(COTR)            ADR OF CONTROL CARD IMAGE
PCCT     DC    F'0'               PUNCH CARD COUNT
PUNO     DS    20F                PUNCH AREA
SVPU     DC    18F'0'             PUNCH SAVE AREA
SAVE     DS    18F
LT       DC    X'00'
ENDC     DC    CL3'END'
DELM     DC    CL3'/* '
         EJECT
PUDCB    DCB   DDNAME=PUDD,DSORG=PS,MACRF=(PM),RECFM=F,                X
               LRECL=80,BLKSIZE=80
DADCB    DCB   DDNAME=DADD,DSORG=PS,MACRF=(PM),RECFM=F,LRECL=80,BLKSIZEX
               =80
         END
/*
//IRV39 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
SPPR     TITLE 'SPPR'
SPPR     CSECT
         BALR  13,0
         USING *,13
         ENTRY PLCB
         EXTRN USING
         EXTRN BSC
         EXTRN BCV
         EXTRN CDN
         EXTRN PA
         EXTRN PRINT
         EXTRN RFTXT
         EXTRN ARL
         EXTRN PAB
         EXTRN SAVA
         ST    14,SPP14
         MVC   KEY4(32),0(14)
         CLI   FFC,X'FF'
         BC    8,FPLL
         CLI   FFC+3,X'00'
         BC    7,FPLL1
         CLC   INST4+9(3),FFAD+1  FIRST FORTRAN INSTR
         BC    2,FPLL
         MVC   ICF+1(3),INST4+9
         L     4,ICF
         A     4,KEY4+4
         S     4,FFAD
         BC    4,FPLL
         MVI   KEY4+3,X'00'
         MVI   FFC+3,X'01'
         MVI   PLC+3,X'08'
         LTR   4,4
         BC    8,FPLL
         ST    4,RFT
         BC    15,LRFT
FPLL1    CLI   FFC+3,X'01'
         BC    7,FPLL2
         CLI   CGOF,X'00'
         BC    8,CGO1
         CLI   CGOF,X'01'
         BC    8,CGO2
         CLI   CGOF,X'02'
         BC    8,CGO3
         CLI   CGOF,X'03'
         BC    7,CGOL
         MVC   ICF+1(3),INST4+9
         LH    5,RT4
         SLL   5,1
         A     5,ICF
         LA    5,6(5)
         ST    5,FFAD
         MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         BC    15,CGOL
CGO1     CLC   CGOS1(2),RT4
         BC    7,CGOL
         CLI   KEY4+3,X'02'
         BC    8,FPLL2
         MVI   CGOF,X'01'
         BC    15,CGOM
CGO2     CLC   CGOS1+2(2),RT4
         BC    7,CGOL
         MVI   CGOF,X'02'
         BC    15,CGOM
CGO3     CLC   RT4(2),CGOS2
         BC    7,CGOL
         MVI   CGOF,X'03'
         BC    15,CGOM
CGOL     MVI   CGOF,X'00'
CGOM     BCR   0,0
         CLC   RT4(3),FSS1
         BC    7,FPLL3
         CLI   RT4+3,X'08'
         BC    8,MFFC
         CLI   RT4+3,X'0C'
         BC    8,MFFCL
         CLI   RT4+3,X'1C'
         BC    8,MFFC
         CLI   RT4+3,X'20'
         BC    8,MFFCL
         CLI   RT4+3,X'38'
         BC    8,PSF
         CLI   RT4+3,X'34'
         BC    7,FPLL3
PSF      MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         MVC   ICF+1(3),INST4+9
         L     5,ICF
         LA    5,10(5)
         ST    5,FFAD
         BC    15,FPLL3
MFFCL    MVI   FFC+3,X'00'
         MVI   KEY4+3,X'02'
         MVC   ICF+1(3),INST4+9
         L     5,ICF
         LA    5,12(5)
         ST    5,FFAD
         BC    15,FPLL3
MFFC     MVI   FFC+3,X'02'
         MVI   KEY4+3,X'02'
         BC    15,FPLL
FPLL2    CLI   FFC+3,X'02'
         BC    7,FPLL4
         MVI   FFC+3,X'01'
         MVI   KEY4+3,X'00'
         BC    15,FPLL
FPLL3    CLC   RT4(2),FSS2
         BC    7,FPLL
         MVI   FFC+3,X'03'
         BC    15,FPLL
FPLL4    CLI   FFC+3,X'03'
         BC    7,FPLL
         MVI   FFC+3,X'01'
         L     3,PABF4
         MVI   0(3),X'FF'
         MVC   64(10,3),DROP4
         ST    13,URF+8
         L     14,US4
         MVI   URF+2,X'F0'
         CNOP  2,4
         BALR  14,14
URF      DC    F'0'
         DC    F'0'
         DC    F'0'
         BC    15,FPLL
FPLL     BCR   0,0
         CLI   FORHF,X'FF'
         BC    8,FHN
         CLC   INST4+9(3),FFAD+1
         BC    7,FHN
         CLI   FORHF,X'01'
         BC    8,FH2
         CLC   RT4(4),FHS1
         BC    7,FHC
         MVI   FFC,X'FF'
         MVI   FORHF,X'01'
         MVI   COBF,X'00'
         MVI   KEY4+3,X'02'
         MVI   FHB+2,X'F0'
         MVI   FHB+7,X'01'
         MVC   FHB+4(3),FFAD+1
         ST    13,FHB+8
         MVI   UREGH+2,X'F0'
         MVC   RGH13+1(3),FFAD+1
         BAL   9,USSH
         BC    15,FHA
         L     14,US4
         CNOP  2,4
         BALR  14,14
FHB      DC    3F'0'
FHA      L     3,FFAD
         LA    3,8(3)
         ST    3,FFAD
         BC    15,FHN
FHC      MVI   KEY4+3,X'00'
         BC    15,FHN
FH2      CLI   FORHF+3,X'00'
         BC    7,FH3
         MVI   FORHF+3,X'01'
         MVI   KEY4+3,X'00'
         L     3,FFAD
         LA    3,12(3)
         ST    3,FFAD
         BC    15,FHN
FH3      CLI   FORHF+3,X'01'
         BC    7,FH4
         MVI   FORHF+3,X'02'
         CLI   RT4,X'18'
         BC    7,FMAIN
         MVI   FORHF+3,X'03'
         L     3,FFAD
         LA    3,18(3)
         ST    3,FFAD
         CLI   RT4+2,X'41'
         BC    8,FHN
         MVI   FORHF+2,X'01'
         BC    15,FHN
FMAIN    L     3,FFAD
         LA    3,22(3)
         ST    3,FFAD
         BC    15,FHN
FH4      CLI   FORHF+3,X'02'
         BC    7,FH5
         L     3,FFAD
         LA    3,22(3)
         ST    3,RGH13
         XC    FFAD(4),FFAD
         MVC   FFAD+2(2),RT4+2
         NI    FFAD+2,X'0F'
         A     3,FFAD
         ST    3,FFAD
USTH     MVI   KEY4+3,X'02'
         MVI   FORHF+3,X'05'
         MVI   FFC,X'00'
         MVI   FFC+3,X'00'
         MVI   UREGH+2,X'C0'
         MVC   UREGH+4(3),ZZ4
         MVC   T13(4),RGH13
         MVC   RGH13(4),ZZ4
         LA    5,2
USHL     ST    5,COBR
         MVI   UREGH,X'01'
         MVI   UREGH+7,X'01'
         ST    13,UREGH+8
         BAL   9,USSH
         L     14,US4
         CNOP  2,4
         BALR  14,14
UREGH    DC    F'0'
         DC    F'0'
         DC    F'0'
         MVI   UREGH+2,X'D0'
         MVC   RGH13(4),T13
         MVC   UREGH+4(3),RGH13+1
         L     5,COBR
         BCT   5,USHL
         BC    15,FHN
FH5      CLI   FORHF+3,X'03'
         BC    7,FH6
         MVI   FORHF+3,X'04'
         L     3,FFAD
         LA    3,2(3)
         ST    3,FFAD
         MVI   KEY4+3,X'02'
         BC    15,FHN
FH6      CLI   FORHF+3,X'04'
         BC    7,FH7
         CLI   FORHF+2,X'01'
         BC    7,FHG
         MVC   RGH13(4),RT4
         MVI   FORHF+3,X'01'
         BC    15,USTH
FH7      CLI   FORHF+3,X'05'
         BC    7,FHN
         MVI   FORHF+3,X'06'
         CLI   FORHF+2,X'01'
         BC    7,FHN
         MVC   FFAD(4),RT4
FHG      L     3,FFAD
         LA    3,8(3)
         ST    3,RGH13
         MVC   FFAD(4),RT4
         BC    15,USTH
FHN      BCR   0,0
         CLI   COBF,X'01'
         BC    7,COBAN
         CLC   ROUT4(4),ROUTAE
         BC    7,COBAR
         L     1,ACT
         LA    1,1(1)
         ST    1,ACT
         CLI   ACT+3,X'02'
         BC    7,COBAR
         MVI   COBF+1,X'01'
         MVC   COBR+1(3),INST4
         MVC   COBRA(4),COBR
         L     5,COBR
         LA    5,4095(5)
         SR    4,4
         D     4,F100
         LA    5,1(5)
         MVC   COBA(4),ZZ4
         MVC   COBU+4(3),INST4
RCOB     MVC   COBU+2(1),COBRG+3
         MVC   RGH13+1(3),COBU+4
         ST    5,COBR
         MVI   COBU,X'01'
         MVI   COBU+7,X'01'
         ST    13,UREGH+8
         MVC   UREGH+2(1),COBU+2
         BAL   9,USSH
         ST    13,COBU+8
         L     14,US4
         CNOP  2,4
         BALR  14,14
COBU     DC    F'0'
         DC    F'0'
         DC    F'0'
         SR    4,4
         IC    4,COBRG+3
         LA    4,16(4)
         STC   4,COBRG+3
         L     5,FFAD
         S     5,COBRA
         C     5,F100
         BC    13,LCOB
         MVI   ACT+3,X'01'
         BC    15,COBAN
LCOB     L     5,COBR
         MVC   COBU+4(3),COBA+1
         L     4,COBA
         A     4,F100
         ST    4,COBA
         BCT   5,RCOB
COBAR    CLI   COBF+1,X'01'
         BC    7,COBAN
         CLI   COBF+3,X'01'
         BC    8,COBAC
         CLC   INST4+9(3),FFAD+1
         BC    4,COBAN
         CLC   RT4(2),CBLB
         BC    7,COBAN
         CLI   RT4+2,X'04'
         BC    7,COBAN
         MVI   KEY4+3,X'02'
         MVI   COBF+3,X'01'
         BC    15,COBAN
COBAC    MVI   KEY4+3,X'00'
         MVI   COBF+3,X'00'
COBAN    BCR   0,0
         CLI   PLC+1,X'FF'        PL/I SUBSET
         BC    8,PLL
         CLI   PLC+3,X'00'        YES
         BC    7,PLI1
         CLC   INST4(2),PL1       BALR 13,0
         BC    7,PLI1
         MVI   PLC+3,X'01'
         BC    15,PLL
PLI1     CLI   PLC+3,X'01'
         BC    7,PLI2
         CLC   INST4(2),PL2       ST 15,ZZZ15
         BC    7,MPFF
         MVI   PLC+3,X'02'
         BC    15,PLL
PLI2     CLI   PLC+3,X'02'
         BC    7,PLI3
         CLC   INST4(2),PL3       STM 11,12,ZZZ12
         BC    7,MPFF
         MVI   PLC+3,X'03'
         BC    15,PLL
PLI3     CLI   PLC+3,X'03'
         BC    7,PLI4
         CLC   INST4(2),PL4       LA 11,ZZZ12
         BC    7,MPFF
         L     3,PABF4
         L     4,APAP4
         MVI   0(3),X'FF'
         MVC   64(5,3),USIN4      GENERATE USING
         MVC   70(8,3),73(4)
         LA    5,80(4)
USO2     CLI   0(5),C' '
         BC    7,USV2
         BCT   5,USN2
USN2     BCT   3,USO2
USV2     MVI   78(3),C','
         MVC   79(2,3),EAT
         MVI   PLC+3,X'04'
         CLI   PAS45,X'00'
         BC    8,MT5
         MVC   CD2+3(5),74(4)
         ST    13,CD2+8
         L     14,ACDN            CONVERT ADDRESS TO BCD
         CNOP  2,4
         BALR  14,14
CD2      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT5      MVC   CR5(3),CD2+5
         MVC   CR5-4(4),RG11
         ST    13,CR5+4
         L     14,FUSI            MAKE ENTRY IN USING TABLE
         CNOP  2,4
         BALR  14,14
         DC    F'0'
CR5      DC    F'0'
         DC    F'0'
         BC    15,PLL
PLI4     CLI   PLC+3,X'04'
         BC    7,PLI5
         CLC   INST4(2),PL5       L 12,ZZZ11
         BC    7,MPFF
         L     3,PABF4
         MVI   0(3),X'FF'
         MVC   64(5,3),USIN4      GENERATE USING
         CLI   PAS45,X'00'
         BC    7,NC14
         MVC   CD14+3(5),ZZ14+1
         ST    13,CD14+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14
CD14     DC    C'0000'
         DC    F'0'
         DC    F'0'
         MVC   BCD14(4),CD14+4
         ST    13,BCD14+8
         L     14,ABSC5           FIND BCD SYMBOL
         CNOP  2,4
         BALR  14,14
BCD14    DC    F'0'
         DC    F'0'
         DC    F'0'
         CLI   BCD14,C' '
         BC    8,NC14
         MVC   ZZ14(8),BCD14
NC14     L     3,PABF4
         MVC   70(8,3),ZZ14
         L     4,APAP4
         LA    5,ZZ14+7
USO1     CLI   0(5),C')'
         BC    8,USV1
         CLI   0(5),C' '
         BC    8,ZB14
         LA    3,1(3)
         BC    15,USV1
ZB14     BCT   5,USN1
USN1     BCT   3,USO1
USV1     MVI   77(3),C','
         MVC   78(2,3),EAT+2
         CLI   PAS45,X'00'
         BC    8,MT6
         MVC   CD3+3(5),74(4)
         ST    13,CD3+8
         L     14,ACDN            CONVERT TO BCD
         CNOP  2,4
         BALR  14,14
CD3      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT6      MVC   FZ14(4),CD3+4
         MVI   PLC+3,X'05'
         BC    15,PLL
PLI5     CLI   PLC+3,X'05'
         BC    7,PLI6
         CLC   INST4(2),PL6       LA 4,ZZ1
         BC    7,PLL
         L     3,APAP4
         CLI   PAS45,X'00'
         BC    8,MT7
         MVC   CD1+3(5),74(3)
         ST    13,CD1+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14
CD1      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT7      MVC   FAD(4),CD1+4
         MVI   PLC+3,X'06'
         BC    15,PLL
MPFF     MVI   PLC+1,X'FF'
         BC    15,PLL
PLI6     CLI   PLC+3,X'06'
         BC    7,PLI7
         CLC   INST4+9(3),FZ14+1  A(ZZZ14)
         BC    7,PLI7
         L     3,APAP4
         MVC   ZZ14(8),72(3)
         CLI   PAS45,X'00'
         BC    8,MT8
         MVC   CD4+3(5),73(3)
         ST    13,CD4+8
         L     14,ACDN            CONVERT TO HEX
         CNOP  2,4
         BALR  14,14
CD4      DC    C'0000'
         DC    F'0'
         DC    F'0'
MT8      MVC   CR4(3),CD4+5
         MVC   CR4-4(4),RG12
         ST    13,CR4+4
         L     14,FUSI            MAKE ENTRY IN USING TABLE
         CNOP  2,4
         BALR  14,14
         DC    F'0'
CR4      DC    F'0'
         DC    F'0'
         MVI   PLC+3,X'07'
         BC    15,PLL
PLI7     CLI   PLC+3,X'07'
         BC    7,PLI8
         CLC   INST4+9(3),FAD+1   BALR 15,0
         BC    11,PLL
         L     4,FAD
         MVC   ICF+1(3),INST4+9
         L     4,ICF
         A     4,KEY4+4
         S     4,FAD
         BC    13,PLL
LRFT     L     14,ARFXT
         ST    4,RFT
         CNOP  2,4
         BALR  14,14
RFT      DC    F'0'
         MVI   PLC+3,X'08'
         L     4,LEN4
         S     4,RFT
         ST    4,LEN4
         L     3,APAP4
         MVI   8(3),C' '
         MVC   9(80,3),8(3)
         CLC   LEN4(4),ZZ4
         BC    8,LFTXT4
         BC    15,RF5
PLI8     BCR   0,0
PLL      BCR   0,0
         L     14,SPP14
         MVC   0(24,14),KEY4
         BC    15,36(14)
LFTXT4   L     14,SPP14
         MVI   28(14),X'01'
         BC    15,PLL
RF5      L     14,SPP14
         MVI   28(14),X'02'
         BC    15,PLL
USSH     ST    9,AFF
         XC    REGU(3),REGU
         MVC   REGU+3(1),UREGH+2
         MVC   ASAV4(3),RGH13+1
         MVI   ASAV4+3,X'60'
         ST    13,ASAV4+8
         ST    13,REGU+4
         L     14,SAVZ4
         CNOP  2,4
         BALR  14,14
ASAV4    DC    F'0'
         DC    F'0'
         DC    F'0'
         L     14,BCVF
         CNOP  2,4
         BALR  14,14
REGU     DC    F'0'
         DC    F'0'
         CLI   PAS45,X'FF'
         BC    8,NPFH
         L     14,PRH
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
NPFH     L     4,APAP4
         MVC   64(6,4),USIN4
         MVC   70(8,4),ASAV4
         LA    5,7
         LA    3,77(4)
CEF      CLI   0(3),C' '
         BC    7,INSF
         BCTR  3,0
         BCT   5,CEF
INSF     MVI   1(3),C','
         MVC   2(2,3),REGU
         L     9,AFF
         BCR   15,9
T13      DC    F'0'
SPP14    DC    F'0'
COBR     DC    F'0'
ACDN     DC    A(CDN)
ZZ4      DC    F'0'
ABSC5    DC    A(BSC)
US4      DC    A(USING)
APAP4    DC    A(PA)
SAVZ4    DC    A(SAVA)
KEY4     DC    2F'0'
INST4    DC    3F'0'
LEN4     DC    F'0'
RT4      DC    F'0'
ROUT4    DC    F'0'
CGOS1    DC    X'482058F0'
CGOS2    DC    X'05EF'
CBLB     DC    X'05EF'
CGOF     DC    F'0'
FAD      DC    F'0'
FSS1     DC    X'45E0F008'
PL1      DC    X'05D0'
PL2      DC    X'50F0'
PL3      DC    X'90BC'
PL4      DC    X'41B0'
PL5      DC    X'58C0'
PL6      DC    X'4140'
EAT      DC    C'1112'
USIN4    DC    C'USING'
ZZ14     DC    C'      '
         DC    C'  '
FSS2     DC    X'05F0'
DROP4    DC    C'DROP'
         DC    C'  15'
         DC    C'  '
FZ14     DC    F'0'
RG11     DC    X'0100B000'
RG12     DC    X'0100C000'
PABF4    DC    A(PAB)
FUSI     DC    A(USING)
RGH13    DC    F'0'
FHS1     DC    X'47F0F00C'
ICF      DC    F'0'
ARFXT    DC    A(RFTXT)
ROUTAE   DC    A(ARL)
BCVF     DC    A(BCV)
PRH      DC    A(PRINT)
AFF      DC    F'0'
F100     DC    F'4096'
COBRA    DC    F'0'
PLCB     DC    F'0'
PLC      DC    F'0'
COBRG    DC    F'48'
COBA     DC    F'0'
ACT      DC    F'0'
COBF     DC    F'0'
FFAD     DC    F'0'
FFC      DC    F'0'
FORHF    DC    F'0'
PAS45    DC    X'FF000000'
         END
/*
//IRV40 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
DS       TITLE 'DUMMY CSECT FOR DS'
DS       CSECT
         USING *,13
         BC    15,20(14)
         END
/*
//IRV41 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
TIME     TITLE 'TIMING TABLE FOR MOD 40'
TIME     CSECT
         BALR  15,0
         USING *,15
         MVI   FLG,X'00'
         MVC   OP(4),4(1)
         MVC   TOTAL(4),8(1)
         SR    3,3
         IC    3,OP
         CLI   OP,X'7F'
         BC    13,CRRX
         CLI   OP,X'9F'
         BC    13,CRSI
         CLI   OP,X'DF'
         BC    13,CSSL
         BC    15,CSSD
CRRX     SLL   3,2
         A     3,ARRX
         L     5,0(3)
FORMC    CLI   OP,X'40'
         BC    4,FORM
         TM    RR,X'0F'
         BC    8,FORME
         CLI   OP,X'60'
         BC    4,SHIN
         A     5,XRTC
SHIN     A     5,XRT
FORME    CLI   OP,X'44'
         BC    7,FORM
         MVI   FLG,X'01'
         BC    15,FORM
CSSL     S     3,D0
         SLL   3,3
         A     3,ASSL
         SR    4,4
         IC    4,RR
         LA    4,1(4)
         L     5,4(3)
         MR    4,4
         A     5,0(3)
         BC    15,FORM
CSSD     S     3,F0
         SLL   3,3
         A     3,ASSD
         MVC   L1(1),RR
         MVC   L2(1),RR
         NI    L1,X'F0'
         NI    L2,X'0F'
         SR    4,4
         IC    4,L1
         SRL   4,4
         STC   4,L1
         CLC   L1(1),L2
         BC    11,NE12
         IC    4,L2
NE12     LA    4,1(4)
         L     5,4(3)
         MR    4,4
         A     5,0(3)
         BC    15,FORM
CRSI     S     3,EGO
         SLL   3,3
         A     3,ARSI
         TM    OP,X'07'
         BC    8,STLM
         TM    OP,X'88'
         BC    1,SHIO
LRS      L     5,0(3)
         BC    15,FORM
STLM     TM    OP,X'88'
         BC    1,SHIO
STLME    MVC   L1(1),RR
         MVC   L2(1),RR
         CLI   OP,X'80'
         BC    8,LRS
         SR    4,4
         IC    4,L1
         SRL   4,4
         STC   4,L1
         SR    5,5
         NI    L2,X'0F'
         CLC   L1(1),L2
         BC    13,AFT
         LA    5,16
AFT      IC    4,L2
         AR    5,4
         IC    4,L1
         SR    5,4
         LA    5,1(5)
         M     4,4(3)
         A     5,0(3)
         BC    15,FORM
SHIO     CLI   OP,X'98'
         BC    8,STLME
         TM    OP,X'10'
         BC    1,IO
         LH    4,ADD
         TM    OP,X'04'
         BC    1,SHD
         SLL   4,27
         SRL   4,27
         BC    15,FSH
SHD      SLL   4,26
         SRL   4,26
FSH      SRDL  4,4
         LR    5,4
         MH    5,6(3)
         A     5,0(3)
         TM    ADD,X'F0'
         BC    8,FORM
         MVI   FLG,X'01'
         BC    15,FORM
IO       L     5,0(3)
         MVI   FLG,X'01'
         BC    15,FORM
FORM     LR    4,5
         A     4,TOTAL
         CVD   4,TT
         CVD   5,TI
         ST    4,8(1)
         UNPK  TTD(8),TT+3(5)
         UNPK  TID(8),TI+3(5)
         OI    TID+7,C'0'
         OI    TTD+7,C'0'
         LA    3,5
         LA    2,TTD
BL1      CLI   0(2),C'0'
         BC    7,OL1
         MVI   0(2),C' '
         LA    2,1(2)
         BCT   3,BL1
OL1      LA    3,5
         LA    2,TID
BL2      CLI   0(2),C'0'
         BC    7,OL2
         MVI   0(2),C' '
         LA    2,1(2)
         BCT   3,BL2
OL2      L     2,0(1)
         CLI   FLG,X'01'
         BC    7,NS
         MVI   99(2),C'*'
NS       MVC   100(6,2),TID
         MVI   106(2),C'.'
         MVC   107(2,2),TID+6
         MVC   110(6,2),TTD
         MVI   116(2),C'.'
         MVC   117(2,2),TTD+6
         BCR   15,14
TOTAL    DC    F'0'
XRT      DC    F'125'
XRTC     DC    F'63'
TID      DC    D'0'
TTD      DC    D'0'
TT       DC    D'0'
TI       DC    D'0'
D0       DC    X'000000D0'
F0       DC    X'000000F0'
EGO      DC    X'00000080'
OP       DC    X'00'
RR       DC    X'00'
ADD      DC    X'0000'
FLG      DC    X'00'
L1       DC    X'00'
L2       DC    X'00'
ASSD     DC    A(SSD)
ASSL     DC    A(SSL)
ARSI     DC    A(RSI)
ARRX     DC    A(RRX)
RRX      DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'500'
         DC    F'876'
         DC    F'813'
         DC    F'502'
         DC    F'875'
         DC    F'750'
         DC    F'2375'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'875'
         DC    F'750'
         DC    F'750'
         DC    F'875'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'875'
         DC    F'8330'
         DC    F'19250'
         DC    F'750'
         DC    F'750'
         DC    F'1250'
         DC    F'1250'
         DC    F'1250'
         DC    F'1250'
         DC    F'1250'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1250'
         DC    F'1921'
         DC    F'2253'
         DC    F'2253'
         DC    F'25500'
         DC    F'47250'
         DC    F'2086'
         DC    F'2087'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'750'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'750'
         DC    F'1174'
         DC    F'1430'
         DC    F'1430'
         DC    F'7630'
         DC    F'12810'
         DC    F'1359'
         DC    F'1359'
         DC    F'1000'
         DC    F'1000'
         DC    F'1000'
         DC    F'938'
         DC    F'875'
         DC    F'1125'
         DC    F'1126'
         DC    F'938'
         DC    F'1063'
         DC    F'1000'
         DC    F'1063'
         DC    F'1063'
         DC    F'4500'
         DC    F'0'
         DC    F'7250'
         DC    F'6063'
         DC    F'1250'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'1188'
         DC    F'8640'
         DC    F'19670'
         DC    F'1188'
         DC    F'1188'
         DC    F'1750'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1688'
         DC    F'2453'
         DC    F'2766'
         DC    F'2766'
         DC    F'25940'
         DC    F'47690'
         DC    F'2599'
         DC    F'2599'
         DC    F'1250'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1188'
         DC    F'1638'
         DC    F'1866'
         DC    F'1866'
         DC    F'8060'
         DC    F'13250'
         DC    F'1795'
         DC    F'1866'
RSI      DC    F'1000'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1625'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'937'
         DC    F'0'
         DC    F'1250'
         DC    F'0'
         DC    F'1625'
         DC    F'0'
         DC    F'1625'
         DC    F'0'
         DC    F'1800'
         DC    F'344'
         DC    F'1800'
         DC    F'282'
         DC    F'2100'
         DC    F'344'
         DC    F'2300'
         DC    F'344'
         DC    F'2650'
         DC    F'720'
         DC    F'2500'
         DC    F'533'
         DC    F'3200'
         DC    F'720'
         DC    F'3300'
         DC    F'590'
         DC    F'687'
         DC    F'500'
         DC    F'875'
         DC    F'0'
         DC    F'938'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'938'
         DC    F'0'
         DC    F'875'
         DC    F'0'
         DC    F'938'
         DC    F'0'
         DC    F'938'
         DC    F'0'
         DC    F'625'
         DC    F'500'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'4875'
         DC    F'0'
         DC    F'4875'
         DC    F'0'
         DC    F'3250'
         DC    F'0'
         DC    F'1375'
         DC    F'0'
SSL      DC    F'0'
         DC    F'0'
         DC    F'1688'
         DC    F'375'
         DC    F'1657'
         DC    F'250'
         DC    F'1688'
         DC    F'375'
         DC    F'1688'
         DC    F'313'
         DC    F'1204'
         DC    F'654'
         DC    F'1688'
         DC    F'313'
         DC    F'1688'
         DC    F'313'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'1688'
         DC    F'625'
         DC    F'2188'
         DC    F'375'
         DC    F'2125'
         DC    F'1000'
         DC    F'2125'
         DC    F'1000'
SSD      DC    F'0'
         DC    F'0'
         DC    F'1375'
         DC    F'563'
         DC    F'1188'
         DC    F'700'
         DC    F'1835'
         DC    F'390'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'2532'
         DC    F'250'
         DC    F'2345'
         DC    F'250'
         DC    F'2875'
         DC    F'375'
         DC    F'2875'
         DC    F'375'
         DC    F'2667'
         DC    F'1500'
         DC    F'1313'
         DC    F'2100'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         DC    F'0'
         END
/*
//IRV42 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
CNT      TITLE '*** C O U N T ***  (WITH PAGE HEADING)    AUG. 14,1967'
COUNT    CSECT
         EXTRN LCT
         ENTRY MENC
         EXTRN MEN
         EXTRN PRINT
         EXTRN PA
         BALR  13,0
         USING *,13
         ST    14,CNT14
         LA    7,141
         L     8,PAA
         MVI   0(8),C' '
         MVC   1(131,8),0(8)
         L     2,AAMEN
         LA    3,MENC
         LA    4,TMENC
         SR    9,9
         L     10,TOTAL
CCLL     SR    6,6
         L     5,0(4)
         A     5,0(3)
         ST    5,0(4)
         CR    6,5
         BC    8,CLLA
         SRL   5,1
         CVD   5,DWM
         UNPK  FPW(8),DWM(8)
         OI    FPW+7,C'0'
         MVC   2(4,8),0(2)
         MVC   28(5,8),FPW+3
         L     5,0(3)
         AR    9,5
         AR    10,5
         ST    6,0(3)
         SRL   5,1
         CVD   5,DWM
         UNPK  FPW(8),DWM(8)
         OI    FPW+7,C'0'
         MVC   13(5,8),FPW+3
         L     14,CLCT
         LA    14,1(14)
         ST    14,CLCT
         C     14,MCLCT
         BC    4,GOCT
         L     14,ALCT
         MVC   0(4,14),CLCT
         MVC   CLCT(4),ZRCT
         L     14,APRINC
         CNOP  2,4
         BALR  14,14
         DC    A(CTMSG+84)
         L     14,APRINC
         CNOP  2,4
         BALR  14,14
         DC    A(CTMSG)
GOCT     L     14,APRINC
         CNOP  2,4
         BALR  14,14
PAA      DC    A(PA)
CLLA     LA    2,6(2)
         LA    3,4(3)
         LA    4,4(4)
         BCT   7,CCLL
         MVC   0(8,8),TOT
         SRL   9,1
         CVD   9,DWM
         UNPK  FPW(8),DWM(8)
         OI    FPW+7,C'0'
         MVC   13(5,8),FPW+3
         ST    10,TOTAL
         SRL   10,1
         CVD   10,DWM
         UNPK  FPW(8),DWM(8)
         OI    FPW+7,C'0'
         MVC   28(5,8),FPW+3
         L     14,APRINC
         CNOP  2,4
         BALR  14,14
         DC    A(PA)
         L     14,CNT14
         BCR   15,14
         DC    C'IMM='
CLCT     DC    F'59'
MCLCT    DC    F'57'
ZRCT     DC    F'0'
TOTAL    DC    F'0'
AAMEN    DC    A(MEN)
MENC     DC    141F'0'
TMENC    DC    141F'0'
DWM      DC    D'0'
FPW      DC    D'0'
APRINC   DC    A(PRINT)
CNT14    DC    F'0'
ALCT     DC    A(LCT)
TOT      DC    C'0TOTALS '
CTMSG    DC    CL132'0INSTR   CURRENT USAGE   TOTAL USAGE '
         DC    CL84'--- INSTRUCTION USAGE TABLE --- '
         END
/*
//IRV43 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
DECO     TITLE 'DECOMP DUMMY'
DECOMP   CSECT
         USING *,15
         L     15,20(1)
         BCR   15,13
         END
/*
//IRV44 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
TXT      TITLE '* * * T X T * * *       (TEXT SUBROUTINE)  '
TXT      CSECT
         BALR  13,0
         USING *,13
         ENTRY END
         ENTRY ENDA
         ENTRY NTXT
         ENTRY TXTS
         ENTRY TXTB
         EXTRN LCF
         EXTRN PRINT
         EXTRN PASS5
         ST    14,TX14
         L     1,0(14)
         CLI   11(1),X'00'
         BC    8,8(14)
         L     3,NTXT
         LA    3,1(3)
         ST    3,NTXT
         CLC   NTXT(4),TX500
         BC    4,LT8
         MVC   NTXT(4),TX500
         BC    2,8(14)
         MVC   PTMX(4),4(14)
         L     1,4(14)
         MVC   0(27,1),EMXT
         L     14,XPRT
         CNOP  2,4
         BALR  14,14
PTMX     DC    F'0'
         L     14,TX14
         BC    15,8(14)
LT8      LA    2,8
         MR    2,2
         A     3,ATXTA
         MVC   0(3,3),5(1)
         MVC   3(1,3),11(1)
         MVC   4(1,3),15(1)
         MVC   5(3,3),NTXT+1      (PREV. OMITTED)
         MVC   MOVE+1(1),11(1)
         L     4,TXTNS
MOVE     MVC   0(1,4),16(1)
         MVC   NBY+3(1),11(1)
         MVI   NBY+3,X'38'        (PREV. OMITTED)
         A     4,NBY
         ST    4,TXTNS
         BC    15,8(14)
END      BALR  13,0               *END SUBROUTINE
         USING *,13
         ST    14,TX14
         L     1,0(14)
         MVC   ENDA(3),5(1)
         MVC   ENDS(2),14(1)
         L     3,ALCF
         MVI   0(3),X'FF'
         L     1,TPAS5
         SR    2,2
         C     2,NTXT
         BCR   8,1
RCYC     LA    3,TXTB+8
         L     4,NTXT
         SLL   4,3
         AR    3,4
         S     3,SIXTX
         L     4,NTXT
         S     4,ONEXY
         BC    8,ECR
         MVI   EXCK,X'00'
CLXX     CLC   0(3,3),8(3)
         BC    12,NEXX
         SR    5,5
         SR    6,6
         LH    5,6(3)
         LH    6,14(3)
         MH    5,FFF6
         MH    6,FFF6
         A     5,TXTNS2
         A     6,TXTNS2
         L     7,TXTNS2
         MVC   0(56,7),0(6)
         MVC   0(56,6),0(5)
         MVC   0(56,5),0(7)
         MVC   TMXT(8),8(3)
         MVC   8(5,3),0(3)
         MVC   0(5,3),TMXT
         MVI   EXCK,X'01'
NEXX     S     3,EIGHTX
         BCT   4,CLXX
         CLI   EXCK,X'01'
         BC    8,RCYC
         L     9,NTXT
         L     5,TXTNS2
         ST    5,TXTSC
         LA    3,TXTB
         LR    4,3
         LA    4,8(4)
         L     1,NTXT
PTXT     MVC   TEMPT(5),0(4)
         C     9,ONEXY
         BC    8,PTXTO
         MVC   TCC1+1(3),0(4)
         MVC   TCC2+1(3),8(4)
         SR    5,5
         IC    5,3(4)
         A     5,TCC1
         C     5,TCC2
         BC    13,PTXTO
         STM   4,5,TMXT
         L     4,4(14)
         ST    4,OLE
         MVC   0(28,4),OVLER
         L     14,XPRT
         CNOP  2,4
         BALR  14,14
OLE      DC    F'0'
         L     14,TX14
         LM    4,5,TMXT
         SR    8,8
         IC    8,11(4)
         BCTR  8,0
         LTR   8,8
         BC    4,EROL
         L     5,TCC2
         S     5,TCC1
         LH    6,6(4)
         MH    6,FFF6
         AR    6,5
         A     6,TXTNS2
         LH    7,14(4)
         MH    7,FFF6
         A     7,TXTNS2
         SR    4,4
         IC    4,TEMPT+3
         A     4,TCC1
         SR    4,5
         BCTR  4,0
         CR    4,8
         BC    5,EROL
         EX    8,MOOL
         LM    4,5,TMXT
         MVC   8(5,4),0(4)
         LH    6,6(4)
         LA    4,8(4)
         MH    6,FFF6
         A     6,TXTNS2
         MVC   56(56,6),0(6)
         S     1,ONEXY
         BCT   9,PTXT
EROL     LM    4,5,TMXT
         SR    7,7
         IC    7,11(4)
         A     7,TCC2
         CR    5,7
         BC    11,DLSC
         L     5,TCC2
         S     5,TCC1
         STC   5,TEMPT+3
         BC    15,PTXTO
DLSC     SR    5,5
         STC   5,11(4)
PTXTO    CLI   TEMPT+3,X'00'
         BC    8,DELTX
         MVC   0(5,3),TEMPT
         LA    3,5(3)
         LH    6,6(4)
         SR    8,8
         IC    8,TEMPT+3
         LA    4,8(4)
         MH    6,FFF6
         L     5,TXTNS2
         AR    5,6
         L     7,TXTSC
         MVC   0(56,7),0(5)
         AR    7,8
         ST    7,TXTSC
         BCT   9,PTXT
         ST    1,NTXT
         BC    15,8(14)
DELTX    S     1,ONEXY
         LA    4,8(4)
         BCT   9,PTXT
         ST    1,NTXT
         BC    15,8(14)
ECR      L     7,TXTNS2
         MVC   0(56,7),56(7)
         MVC   TXTB(5),TXTB+8
         BC    15,8(14)
MOOL     MVC   0(1,6),0(7)
         DC    C'IMM='
TCC1     DC    F'0'
TCC2     DC    F'0'
TXTSC    DC    F'0'
FFF6     DC    X'0038'
EIGHTX   DC    F'8'
SIXTX    DC    F'16'
ONEXY    DC    F'1'
EXCK     DC    F'0'
TMXT     DC    2F'0'
XPRT     DC    A(PRINT)
TXTNS2   DC    A(TXTS)
TX14     DC    F'14'
TX500    DC    F'499'
OVLER    DC    C'**  '
         DC    C'SOME TEX'
         DC    C'T CARDS '
         DC    C'OVERLAY '
EMXT     DC    C'**  '
         DC    C'MORE THA'
         DC    C'N 498 TX'
         DC    C'T CARDS '
TEMPT    DC    C'     '
TPAS5    DC    A(PASS5)
ALCF     DC    A(LCF)
ENDA     DS    3CL1
ENDS     DS    2CL1
TXTNS    DC    A(TXTS+56)
NBY      DC    F'0'
ATXTA    DC    A(TXTB)
NTXT     DC    F'0'
TXTB     DS    3CL1
TXTN     DS    1CL1
TXTSN    DS    1CL1
         DS    3CL1
         DS    499CL8             (PREV CL5)
TXTS     DS    500CL56
         DS    0F
         END
/*
///


















//IRV15 JOB ,MILLER,MSGLEVEL=1
//STEP EXEC PROC=ASMFC,PARM.ASM=DECK
//ASM.SYSIN DD *
MAIN     TITLE 'TEST PROGRAM FOR DISINF ROUTINE       AUG. 1, 1967 '
MAIN     CSECT
         EXTRN DISINF
         STM   14,12,12(13)       **************
         BALR  12,0               *            *
         USING *,12               *  STANDARD  *
         ST    13,SAVP+4          *   S/360    *
         LR    11,13              *  LINKAGE   *
         LA    13,SAVP
         ST    13,8(11)           **************
         LA    14,RTN        LOAD RETURN ADDR
         L     15,ADIS
         CNOP  2,4
         BALR  1,15          CALL MDUMP
         DC    A(MAIN)            ADDRESS
         DC    A(MAIN+812)        PARAMETERS
RTN      L     13,SAVP+4          **********
         LM    14,12,12(13)       * RETURN *
         BCR   15,14              **********
         DS    0F
ADIS     DC    A(DISINF)
SAVP     DS    18F           SAVE AREA
         END
/*
//STEP EXEC PROC=ASMFC,PARM.ASM=DECK
//ASM.SYSIN DD *
MDMP     TITLE 'MNEMONIC DUMP PREPARATION                AUG.  1, 1967'
DISINF   CSECT
         STM   14,12,12(13)  SAVE REGISTERS FROM PREVIOUS PROGRAM
         BALR  12,0          ESTABLISH BASE FORE ADDRESSING PURPOSES
         USING *,12
         ST    RSA,SAVE+4    STORE POINTER TO SAVE AREA
         LR    11,RSA        HOLD SAVE ADR JUST USED
         LA    RSA,SAVE      PROVIDE NEW SAVE AREA
         ST    RSA,8(11)     GIVE CALLER THIS SAVE ADR
         LM    CAD,NBD,0(LP)
         CR    CAD,NBD       ARE LIMITS IN ORDER
         BC    13,NX         BRANCH IF YES
         XR    CAD,NBD       INTER-
         XR    NBD,CAD       CHANGE
         XR    CAD,NBD       LIMITS
NX       SR    NBD,CAD       NUMBER OF BYTES TO BE DUMPED
         TM    DCB+48,X'10'  IS DATA SET OPEN
         BC    1,RIN         BRANCH IF YES
         OPEN  (DCB,(OUTPUT)) OPEN DATA SET
         TM    DCB+48,X'10'  WAS OPEN SUCCESSFUL
         BC    1,RIN         BRANCH IF YES
         ABEND 37,DUMP       DUMP IF UNABLE TO OPEN DATA SET
RIN      MVC   NC(4),NS      RESET CARD COUNT
         ST    CAD,ADDR      PLACE STARTING ADDR ON ESD CARD
         MVC   ESDSA(3),ADDR+1
         C     NBD,LCD       MORE THAN 16K?
         BC    4,LESS        BRANCH IF NO
         MVC   ESDLN(3),LCD+1 MAKE SECTION LENGTH 16K
         BC    15,ESDIO
LESS     ST    NBD,TEMP      PLACE SECTION LENGTH ON ESD CARD
         MVC   ESDLN(3),TEMP+1
ESDIO    LA    DA,ESDC       PUNCH ESD CARD
         BAL   14,IO
         SR    MBC,MBC       ZERO MAX BYTE COUNT
         SR    BYC,BYC       ZERO BYTE COUNT
         MVC   NBY(2),T38    NUMBER OF BYTES ON TXT CARD=56
LOOP     ST    CAD,ADDR      ADDR OF FIRST BYTE
         MVC   TXT(56),0(CAD) MOVE DATA TO TXT AREA
         MVC   STA(3),ADDR+1 MOVE FIRST ADDRESS
         L     PCC,NC
         LA    PCC,1(PCC)    INCREMENT CARD COUNT
         ST    PCC,NC
         CVD   PCC,DWD       CONVERT TO DECIMAL
         UNPK  CN(3),DWD+6(2)
         OI    CN+2,C'0'     PLACE COUNT IN PUNCH AREA
         LA    MBC,56(MBC)   INCREMENT MAXIMUM BYTE COUNT
         LA    BYC,56(BYC)   INCREMENT BYTE COUNT
         CR    BYC,NBD       HOW MANY BYTES LEFT
         BC    4,CONT        BRANCH IF MORE THAN 56 BYTES LEFT
         BC    8,RTNE        BRANCH IF EXACTLY 56 BYTES LEFT
         LA    NBD,56(NBD)   LESS THAN 56 BYTES LEFT
         SR    NBD,BYC       FIND NUMBER OF BYTES LEFT
         MVI   TXT,C' '
         MVC   TXT+1(55),TXT BLANK TXT AREA
         ST    NBD,TEMP
         MVC   NBY(2),TEMP+2 SET NEW COUNT
         BCTR  NBD,0         DECREMENT NBD BY ONE
         EX    NBD,MOVE      MOVE REMAINING BYTES
RTNE     BAL   14,PUNCH      PUNCH TXT CARD
         BC    15,RTNC
CONT     C     MBC,LCD       MORE THAN 16K
         BC    7,GON         BRANCH IF NO
         S     NBD,LCD       INITIALIZE FOR NEXT 16K
         BAL   14,PUNCH      PUNCH TXT CARD
         BAL   14,ENDC       PUNCH END CARD
         LA    CAD,56(CAD)   INCREMENT CORE ADDRESS
         BC    15,RIN        BEGIN NEXT SECTION
GON      BAL   14,PUNCH      PUNCH TXT CARD
         LA    CAD,56(CAD)   INCREMENT CORE ADDRESS
         CR    NBD,BYC       END OF DATA
         BC    7,LOOP        CONTINUE PUNCHING IF NO
RTNC     BAL   14,ENDC       PUNCH END CARD
         CLOSE (DCB)         CLOSE DATA SET
RETF     L     RSA,SAVE+4    RETURN
         LM    14,12,12(13)
         BCR   15,14
MOVE     MVC   TXT(1),0(CAD)
IO       STM   14,1,SLKG     SAVE LINKAGE REGS
         PUT   DCB,(0)       WRITE ONE LOGICAL RECORD
         LM    14,1,SLKG     RESTORE LINKAGE REGS
         BCR   15,14
PUNCH    LA    DA,PCARD      PUNCH DATA IS TXT CARD
         BC    15,IO         GO TO I/O ROUTINE
ENDC     L     PCC,NC
         LA    PCC,1(PCC)    INCREMENT CARD COUNT
         ST    PCC,NC
         CVD   PCC,DWD       CONVERT TO DECIMAL
         UNPK  ENDSQ(3),DWD+6(2)
         OI    ENDSQ+2,C'0'  FORMAT SEQ. NO. ON END CARD
         LA    DA,ECARD      PUNCH DATA IS END CARD
         BC    15,IO         GO TO I/O ROUTINE
DA       EQU   0             DATA ADDRESS
LP       EQU   1             LIST POINTER
CAD      EQU   2             CORE ADDRESS
NBD      EQU   3             NUMBER OF BYTES DUMPED
PCC      EQU   4             PUNCH CARD COUNT
BYC      EQU   5             BYTE COUNT
MBC      EQU   6             MAXIMUM BYTE COUNT
RSA      EQU   13            SAVE AREA POINTER
ESDC     DC    X'02'         ESD CARD
         DC    CL9'ESD '
         DC    X'0010'       FIELD COUNT
         DC    CL2' '
         DC    X'0001'       ESD I.D. NO.
         DC    CL8'MAIN '    CSECT NAME
         DC    X'00'         ESD TYPE CODE
ESDSA    DC    X'000000'     STARTING ADDRESS
         DC    CL1' '
ESDLN    DC    X'000000'     SECTION LENGTH
         DC    CL45'  '
         DC    CL3'001'      SEQ. NO.
PCARD    DC    X'02'         TXT CARD
         DC    C'TXT '
STA      DC    X'000000'
         DC    C'  '
NBY      DC    X'0038'       BYTE COUNT
         DC    C'  '
         DC    X'0001'
TXT      DS    CL56          TXT INFO
         DC    5C' '
CN       DC    C'000'        CARD COUNT
ECARD    DC    X'02'         END CARD
         DC    CL76'END '
ENDSQ    DC    CL3'000'      SEQ. NO.
DWD      DC    D'0'
ADDR     DC    F'0'
LCD      DC    F'16352'      292 CARDS
NS       DC    F'1'          ONE
NC       DC    F'0'          CARD COUNT
TEMP     DC    F'0'          TEMPORARY
T38      DC    H'56'         56 BYTES ON FULL CARD
SLKG     DS    4F            LINKAGE REGS SAVE AREA
SAVE     DC    3F'0'         SAVE
         DS    15F           AREA
DCB      DCB   DDNAME=OUT,DSORG=PS,MACRF=(PM),RECFM=F,LRECL=80,BLKSIZE=X
               80,EROPT=ACC
         END
/*
//IRV15 JOB ,MUDDY,MSGLEVEL=1
//STEP EXEC ASMFC,PARM.ASM='DECK'
//ASM.SYSIN DD *
TEST     CSECT
         BALR 15,0
         USING *,15
B        SUR   2,4
         STH   2,A
         STH   2,A(3)
         SU    2,A
         SU    2,A(3)
         SSM   A
         BXLE  2,3,B
         SRL   2,1(2)
         SRL   2,1
         SRL   2,4
         SRL   2,17
         SLA   2,6(2)
         SLA   2,6
         SLA   2,7
         SLA   2,17
         SRDL  2,16(2)
         SRDL  2,16
         SRDL  2,17
         SRDL  2,33
         SRDL  2,48
         SLDA  2,49
         SLDA  2,55
         SLDA  2,40(2)
         MVN   A(4),A
         EDMK  A(2),A
         MVO   A(3),A(6)
         DP    A(6),A(3)
         TIO   0(2)
         SIO   0(2)
         STM   4,4,A
         STM   12,14,A
         LM    14,12,A
         EX    2,A
         SPM   5
         BCTR  5,0
         BCR   14,15
         SSK   5,0
         ISK   5,0
         SVC   23
         LPR   5,5
         LNR   5,5
         LTR   5,5
         LCR   5,5
         NR    5,5
         CLR   5,5
         OR    5,5
         XR    5,5
         LR    4,4
         CR    2,2
         AR    1,1
         SR    2,2
         MR    4,4
         DR    4,4
         ALR   2,2
         SLR   3,3
         LPDR  2,2
         LNDR  2,2
         LTDR  6,6
         LCDR  4,4
         HDR   2,2
         LDR   4,4
         CDR   2,4
         ADR   2,2
         SDR   2,2
         MDR   2,4
         DDR   2,4
         AWR   2,2
         SWR   2,2
         LPER  2,2
         LNER  2,2
         LTER  2,2
         LCER  2,2
         HER   2,2
         LER   2,2
         CER   2,2
         AER   2,2
         SER   2,2
         MER   2,2
         DER   2,2
         AUR   2,2
         SUR   2,2
         LA    5,6
         STC   2,A
         IC    2,A
         BAL   14,A
         BCT   2,A
         BC    2,A
         LH    2,A
         CH    2,A
         AH    2,A
         SH    2,A
         MH    2,A
         CVD   2,A
         CVB   2,A
         ST    2,A
         N     2,A
         CL    2,A
         O     2,A
         X     2,A
         L     2,A
         C     2,A
         A     2,A
         S     2,A
         M     2,A
         D     2,A
         AL    2,A
         SL    2,A
         STD   2,A
         LD    2,A
         CD    2,A
         AD    2,A
         SD    2,A
         MD    2,A
         DD    2,A
         AW    2,A
         SW    2,A
         STE   2,A
         LE    2,A
         CE    2,A
         AE    2,A
         SE    2,A
         ME    2,A
         DE    2,A
         AU    2,A
         SU    2,A
         STH   2,A(3)
         LA    2,A(3)
         STC   2,A(3)
         IC    2,A(3)
         BAL   2,A(3)
         BCT   2,A(3)
         BC    2,A(3)
         LH    2,A(3)
         CH    2,A(3)
         AH    2,A(3)
         SH    2,A(3)
         MH    2,A(3)
         EX    2,A(3)
         CVD   2,A(3)
         CVB   2,A(3)
         ST    2,A(3)
         N     2,A(3)
         CL    2,A(3)
         O     2,A(3)
         X     2,A(3)
         L     2,A(3)
         C     2,A(3)
         A     2,A(3)
         S     2,A(3)
         M     2,A(3)
         D     2,A(3)
         AL    2,A(3)
         SL    2,A(3)
         STD   2,A(3)
         LD    2,A(3)
         CD    2,A(3)
         AD    2,A(3)
         SD    2,A(3)
         MD    2,A(3)
         DD    2,A(3)
         AW    2,A(3)
         SW    2,A(3)
         STE   2,A(3)
         LE    2,A(3)
         CE    2,A(3)
         AE    2,A(3)
         SE    2,A(3)
         ME    2,A(3)
         DE    2,A(3)
         AU    2,A(3)
         SU    2,A(3)
         SSM   A
         LPSW  A
         BXH   2,3,A
         BXLE  2,3,A
         SRL   2,2
         SLL   2,2
         SRA   2,17
         SLL   2,17
         SRL   2,17
         SLA   2,17
         SRDL  2,17
         SLDL  2,17
         SRDA  2,17
         SLDA  2,17
         TM    A,X'00'
         MVI   A,X'00'
         NI    A,X'00'
         CLI   A,X'00'
         OI    A,X'00'
         XI    A,X'00'
         SIO   0(2)
         TIO   0(2)
         HIO   0(2)
         TCH   0(2)
         MVC   A(6),A
         MVN   A(6),A
         MVZ   A(6),A
         NC    A(6),A
         CLC   A(6),A
         OC    A(6),A
         XC    A(6),A
         TR    A(6),A
         TRT   A(6),A
         ED    A(6),A
         EDMK  A(6),A
         MVO   A(6),A(2)
         PACK  A(6),A(2)
         UNPK  A(6),A(2)
         ZAP   A(6),A(2)
         CP    A(6),A(2)
         AP    A(6),A(2)
         SP    A(6),A(2)
         MP    A(6),A(2)
         DP    A(6),A(2)
         MVO   A(2),A(6)
         PACK  A(2),A(6)
         UNPK  A(2),A(6)
         ZAP   A(2),A(6)
         CP    A(2),A(6)
         AP    A(2),A(6)
         SP    A(2),A(6)
         MP    A(2),A(6)
         DP    A(2),A(6)
         BC    15,A
A        DC    D'0'
         END
/*
