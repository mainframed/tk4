*          DATA SET UTLPRRD    AT LEVEL 023 AS OF 27/02/76
         TITLE 'UTLPROGM/UTLPRRD - READ && ANALYSE CONTROL STATEMENT'
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  MDSL  EXTENTION OF IEHPROGM GDG HANDLING FACILITIES                *
*  SOFTWARE CODE - UTL                 * SYSTEMS PROGRAMMING GROUP    *
*  PROGRAM ID    - UTLPROGM            * MOBIL DATA SERVICES LTD      *
*  MODULE ID     - UTLPRRD             * BECKET HOUSE, VESTRY ROAD    *
*  DATE WRITTEN  - JAN 1976            * SEVENOAKS, KENT              *
*  AUTHOR        - ANDREW STRACHAN     * TN14 5EJ                     *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
UTLPRRD  CSECT
         BEGIN
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  THIS MODULE READS A CONTROL STATEMENT, ANALYSES IT, AND STORES     *
*  THE INFO IN 'OPTIONS' FOR USE BY 'UTLPRCM'.                        *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         LR    R3,R1                   * SET BASE REGISTER
         USING OPTIONS,R3              * +
         CLI   CARDOPEN,X'00'          * Q/ IS FILE OPEN
         BNE   RDGET050                * Y. GO DO GET
         OPEN  (CARDDCB,(INPUT))       * OPEN THE FILE
         TM    CARDDCB+X'30',X'10'     * Q/ OPENED OK
         BO    RDOPN040                * Y. GO DO SET FLAG
         MVC   RETJOB,=H'16'           * SET RETURN CODE
         B     RDRET950                * GO DO RETURN
RDOPN040 EQU   *                       * DO SET FLAG
         MVI   CARDOPEN,X'01'          * FLAG IT AS OPEN
         LA    R15,CARDAREA            * SET UP ADDR OF CARD IMAGE
         ST    R15,ACARD               * +
RDGET050 EQU   *                       * DO GET CONTROL STATEMENT
         MVI   OPCODE,X'FF'            * FLAG OPCODE FOR EOF
         GET   CARDDCB,CARDAREA        * READ CONTROL STATEMENT
         MVI   INDEX,SP                * BLANK OUT INDEX
         MVC   INDEX+1(L'INDEX-1),INDEX  +
         MVC   LENINDEX,=H'0'          * ZEROIZE LENGTH
         MVC   RETCODE,=H'0'           * ZEROIZE RETURN CODE
         MVC   NEWMAX,=H'0'            * ZEROIZE NEW MAX
         MVI   SWDLTX,SP               * BLANK OUT DLTX SWITCH
         MVC   MSGNR,=H'0'             * ZEROIZE MESSAGE NUMBER
         MVI   MORE+1,SP               * BLANK OUT DELIMITER
         MVI   OPCODE,X'00'            * FLAG OPCODE FOR USE
         LA    R10,CARDAREA            * POINT REG TO START OF STATEMEN
         CLI   0(R10),SP               * Q/ FIRST CHAR SPACE
         BE    RDOPA100                * Y. GO DO SCAN
         MVC   MSGNR,=H'1'             * N. SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDOPA100 EQU   *                       * DO SCAN FOR OPERATION
         LA    R9,CARDAREA+72          * SET LENGTH REG
         SR    R9,R10                  * +
         EX    R9,TRENONBL             * SCAN FOR NON-BLANK Q/ FOUND IT
         ST    R1,ANEXT                * SAVE ADDRESS REACHED
         BNZ   RDOPB120                * Y. GO DO SCAN
         MVC   MSGNR,=H'1'             * N. SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDOPB120 EQU   *                       * DO SCAN OF OPERATION
         L     R10,ANEXT               * POINT REG TO NEXT PART
         LA    R9,CARDAREA+72          * SET LENGTH REG
         SR    R9,R10                  * +
         EX    R9,TREDELIM             * SCAN FOR DELIMETER Q/ FOUND IT
         BZ    RDERB130                * N. GO DO MESSAGE
         ST    R1,ANEXT                * SAVE ADDRESS REACHED
         STH   R2,MORE                 * SAVE DELIMITER
         CLI   MORE+1,SP               * Q/ IS IT SPACE
         BNE   RDERB130                * N. GO DO MESSAGE
         LR    R8,R1                   * CALCULATE LENGTH
         SR    R8,R10                  * +
         CH    R8,=H'8'                * Q/ IS IT MORE THAN 8 LONG
         BH    RDERB130                * Y. GO DO MESSAGE
         BCTR  R8,0                    * SUBTRACT 1 FOR MVC
         MVI   OPCODE,SP               * BLANK OUT AREA
         MVC   OPCODE+1(L'OPCODE-1),OPCODE +
         EX    R8,MVCOPCOD             * SAVE OPERATION
         CLC   OPCODE,=CL8'SCRAP'      * Q/ SCRAP
         BE    RDOPC140                * Y. GO DO SCAN
         CLC   OPCODE,=CL8'REDUCE'     * Q/ REDUCE
         BE    RDOPC140                * Y. GO DO SCAN
         CLC   OPCODE,=CL8'EXTEND'     * Q/ EXTEND
         BE    RDOPC140                * Y. GO DO SCAN
RDERB130 EQU   *                       * DO MESSAGE
         MVC   MSGNR,=H'2'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  FIND THE NEXT PARAMETER                                            *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
RDOPC140 EQU   *                       * DO SCAN FOR PARAMETER/OPERAND
         L     R10,ANEXT               * POINT REG TO NEXT PART
         LA    R9,CARDAREA+72          * SET LENGTH REG
         SR    R9,R10                  * +
         EX    R9,TRENONBL             * SCAN FOR NON-BLANK Q/ FOUND IT
         ST    R1,ANEXT                * SAVE ADDRESS REACHED
         BNZ   RDOPD170                * Y. GO DO SCAN
         MVC   MSGNR,=H'3'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDOPD160 EQU   *                       * DO SCAN OF PARAM
         CLI   MORE+1,COMMA            * Q/ IS THERE MORE
         BNE   RDCHK800                * N. GO DO CHECK OF MIXTURE
         L     R15,ANEXT               * POINT PAST COMMA
         LA    R15,1(R15)              * +
         ST    R15,ANEXT               * +
RDOPD170 EQU   *                       * DO SCAN OF OPERAND NAME
         L     R10,ANEXT               * POINT REG TO NEXT PART
         LA    R9,CARDAREA+72          * SET LENGTH REG
         SR    R9,R10                  * +
         EX    R9,TREDELIM             * SCAN FOR DELIMITER Q/ FOUND IT
         ST    R1,ANEXT                * SAVE ADDRESS REACHED
         STH   R2,MORE                 * SAVE DELIMITER
         ST    R10,ATHIS               * SAVE LAST ADDR
         BZ    RDERC180                * N. GO DO MESSAGE
         LR    R8,R1                   * CALCULATE LENGTH
         SR    R8,R10                  * +
         CH    R8,=H'8'                * Q/ MORE THAN 8 LONG
         BH    RDERC180                * Y. GO DO MESSAGE
         BCTR  R8,0                    * SUBTRACT 1 FOR MVC
         MVI   PARAM,SP                * BLANK OUT PARAM
         MVC   PARAM+1(L'PARAM-1),PARAM  +
         EX    R8,MVCPARAM             * SAVE PARAM
         B     RDVAA200                * GO DO SCAN
RDERC180 EQU   *                       * DO MESSAGE
         MVC   MSGNR,=H'4'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDVAA200 EQU   *                       * DO SCAN OF VALUE
         CLI   MORE+1,EQ               * Q/ DELIMITER EQ
         BNE   RDTSD280                * N. GO DO TEST ENTRIES
         L     R10,ANEXT               * POINT REG TO NEXT PART
         LA    R9,CARDAREA+72          * CALCULATE LENGTH
         SR    R9,R10                  * +
         LA    R10,1(R10)              * STEP PAST EQ
         BCTR  R9,0                    * REDUCE LENGTH
         EX    R9,TREDELIM             * SCAN FOR DELIMITER Q/ FOUND IT
         ST    R1,ANEXT                * SAVE ADDRESS REACHED
         STH   R2,MORE                 * SAVE DELIMITER
         ST    R10,ATHIS               * SAVE LAST ADDR
         BZ    RDERD220                * N. GO DO MESSAGE
         CLI   MORE+1,EQ               * Q/ DELIMITER EQ
         BE    RDERD220                * Y. GO DO MESSAGE
         LR    R8,R1                   * CALCULATE LENGTH
         SR    R8,R10                  * +
         CH    R8,=H'0'                * Q/ MORE THAN ZERO
         BH    RDTSE240                * Y. GO DO TEST ENTRIES
RDERD220 EQU   *                       * DO MESSAGE
         MVC   MSGNR,=H'4'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  STORE ANY VALUES FOUND AFTER THE PARAMETER NAME                    *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
RDTSE240 EQU   *                       * DO TEST ENTRIES
         CLC   PARAM,=CL8'ENTRIES'     * Q/ ENTRIES
         BNE   RDTSI260                * N. GO DO TEST INDEX
         CH    R8,=H'3'                * Q/ MORE THAN 3 LONG
         BH    RDERF300                * Y. GO DO MESSAGE
         LA    R7,ENTRIES+L'ENTRIES    * POINT TO END OF FIELD
         SR    R7,R8                   * SUBTRACT LENGTH
         MVI   ENTRIES,C'0'            * ZERO OUT AREA
         MVC   ENTRIES+1(L'ENTRIES-1),ENTRIES  +
         BCTR  R8,0                    * SUBTRACT 1 FOR MVC
         EX    R8,MVCENTRY             * MOVE IN VALUE
         TRT   ENTRIES,TRTNUM          * SCAN FOR NON-NUMERIC Q/ FOUND
         BNZ   RDERF300                * Y. GO DO MESSAGE
         PACK  ENTPACK,ENTRIES         * PACK NUMBER
         CVB   R7,ENTPACK              * CONVERT TO BINARY
         STH   R7,NEWMAX               * SAVE IT
         CH    R7,=H'255'              * Q/ MORE THAN 255
         BH    RDERF300                * Y. GO DO MESSAGE
         B     RDOPD160                * GO DO SCAN
RDTSI260 EQU   *                       * DO TEST INDEX
         CLC   PARAM,=CL8'INDEX'       * Q/ INDEX
         BNE   RDTSD280                * N. DO TEST DLTX
         CH    R8,=H'35'               * Q/ TOO LONG
         BH    RDERE290                * Y. GO DO MESSAGE
         CH    R8,=H'1'                * Q/ TOO SHORT
         BL    RDERE290                * Y. GO DO MESSAGE
         STH   R8,LENINDEX             * SAVE LENGTH
         BCTR  R8,0                    * SUBTRACT 1 FOR MVC
         MVI   INDEX,SP                * BLANK OUT AREA
         MVC   INDEX+1(L'INDEX-1),INDEX  +
         EX    R8,MVCINDEX             * SAVE INDEX VALUE
         B     RDOPD160                * GO DO SCAN
RDTSD280 EQU   *                       * DO TEST DLTX
         CLC   PARAM,=CL8'DLTX'        * Q/ DLTX
         BNE   RDERD220                * N. GO DO MESSAGE
         MVI   SWDLTX,C'D'             * SET SWITCH
         B     RDOPD160                * GO DO SCAN
RDERE290 EQU   *                       * DO MESSAGE
         MVC   MSGNR,=H'8'             * SET MESSAGE NUMBER
         B     RDFIN900                * GO DO FINISH
RDERF300 EQU   *                       * DO MESSAGE
         MVC   MSGNR,=H'5'             * SET MESSAGE NUMBER
         B     RDFIN900                * GO DO FINISH
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  CROSS CHECK THE VALUES FOR CONSISTENCY                             *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
RDCHK800 EQU   *                       * DO CHECK MIXTURE
         LH    R15,LENINDEX            * Q/ LENGTH ZERO
         CH    R15,=H'0'               * +
         BE    RDERE290                * Y. GO DO MESSAGE
         CLI   OPCODE,C'S'             * Q/ SCRAP
         BNE   RDCHB820                * N. GO DO CHECK DLTX
         LH    R7,NEWMAX               * Q/ ZERO ENTRIES
         CH    R7,=H'0'                * +
         BE    RDCHD860                * Y. GO DO MESSAGE OK
         MVC   MSGNR,=H'6'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDCHB820 EQU   *                       * DO CHECK DLTX
         CLI   SWDLTX,C'D'             * Q/ DLTX
         BNE   RDCHC840                * N. GO DO CHECK ENTRIES
         MVC   MSGNR,=H'7'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDCHC840 EQU   *                       * DO CHECK ENTRIES
         LH    R7,NEWMAX               * Q/ ZERO ENTRIES
         CH    R7,=H'0'                * +
         BH    RDCHD860                * N. GO DO MESSAGE OK
         MVC   MSGNR,=H'5'             * SET MESSAGE
         B     RDFIN900                * GO DO PRINT
RDCHD860 EQU   *                       * DO MESSAGE OK
         MVC   MSGNR,=H'0'             * SET MESSAGE ZERO
         B     RDFIN900                * GO DO FINISH
RDCLS880 EQU   *                       * DO CLOSE OF FILE
         CLOSE CARDDCB                 * CLOSE FILE
         MVC   MSGNR,=X'FFFF'          * FLAG CLOSE FOR PRINT FILE
RDFIN900 EQU   *                       * DO FINISH
         LR    R1,R3                   * POINT TO OPTIONS LIST
         L     R15,=V(UTLPRMS)         * CALL PRINT ROUTINE
         BALR  R14,15                  * +
         CLC   MSGNR,=X'FFFF'          * Q/ CLOSE PRINT FILE FLAG
         BE    RDRET950                * Y. GO DO RETURN
         CLI   OPCODE,X'FF'            * Q/ END OF JOB
         BE    RDCLS880                * Y. GO DO CLOSE
RDRET950 EQU   *                       * DO RETURN
         EXIT
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
*  WORK AREAS AND EXECUTED INSTUCTIONS USED BY THIS MODULE.           *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
SP       EQU   X'40'                   *
COMMA    EQU   C','                    *
EQ       EQU   C'='                    *
MVCENTRY MVC   0(0,R7),0(R10)          * SAVE ENTRIES
MVCINDEX MVC   INDEX(0),0(R10)         * SAVE INDEX.NAME
MVCOPCOD MVC   OPCODE(0),0(R10)        * SAVE OPERATION
MVCPARAM MVC   PARAM(0),0(R10)         * SAVE PARAMETER NAME
TRENONBL TRT   0(0,R10),TRTNONBL       * SCAN FOR NON-BLANK
TREDELIM TRT   0(0,R10),TRTDELIM       * SCAN FOR DELIMITER
TRTNONBL DC    256X'FF'                * TRANSLATE TABLE FOR NON-BLANK
         ORG   TRTNONBL+SP             * +
         DC    X'00'                   * +
         ORG   TRTNONBL+256            * +
TRTDELIM DC    256X'00'                * TRANSLATE TABLE FOR DELIMITER
         ORG   TRTDELIM+C' '           * +
         DC    C' '                    * +
         ORG   TRTDELIM+C','           * +
         DC    C','                    * +
         ORG   TRTDELIM+C'='           * +
         DC    C'='                    * +
         ORG   TRTDELIM+256            * +
TRTNUM   DC    256X'FF'                * TRANSLATE TABLE FOR NUMERICS
         ORG   TRTNUM+C'0'             * +
         DC    10X'00'                 * +
         ORG   TRTNUM+256              * +
MORE     DC    H'0'                    * SAVE AREA FOR DELIMITER
ATHIS    DS    A                       * SAVE AREA FOR LAST FIELD ADDR
ANEXT    DS    A                       * SAVE AREA FOR NEXT FIELD ADDR
PARAM    DC    CL8' '                  * SAVE AREA FOR PARAMETER
ENTPACK  DS    D                       * WORK AREA FOR ENTRIES
ENTRIES  DS    CL8                     * WORK AREA FOR ENTRIES
CARDOPEN DC    X'00'                   * FLAG FOR OPEN
CARDAREA DS    CL80                    * CARD INPUT AREA
         PRINT NOGEN
CARDDCB  DCB   DDNAME=SYSIN,RECFM=FB,LRECL=80,                         C
               MACRF=GM,EODAD=RDCLS880,DSORG=PS
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*                                                                     *
* THE COMMON AREA USED BY ALL MODULES.                                *
*                                                                     *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
OPTIONS  DSECT                         * THE AREA MAPPED IS IN UTLPROGM
INDEX    DS    CL44                    * INDEX.NAME
SAVDSN   DS    CL44                    * WORK AREA FOR DSN FOR CAMLST
LENINDEX DS    H                       * INDEX.NAME LENGTH
OPCODE   DS    XL8                     * OPERATION
SWDLTX   DS    CL1                     * DELETE INDEX SWITCH
SWEMDEL  DS    H                       * EMPTY/DELETE SWITCH
EMPTY    EQU   2                       * EMPTY
DELETE   EQU   1                       * DELETE
RETCODE  DS    H                       * RETURN CODE FROM MACROS
RETJOB   DS    H                       * HIGHEST RETURN CODE
MSGNR    DS    H                       * MESSAGE NUMBER
OLDREAL  DS    H                       * ACTUAL NUMBER OF GENERATIONS
OLDMAX   DS    H                       * PREVIOUS MAXIMUM
NEWMAX   DS    H                       * MAXIUMUM DESIRED
ACARD    DS    A                       * ADDR OF CARD AREA
UTLPRRD  CSECT
         END
