PROC 0 ACCT(&SYSUID)                 +
       ADATE()                       +
       ARCHIVE                       +
       BACKUP                        +
       CLASS(I)                      +
       COPY(1)                       +
       CYCLE()                       +
       CYL()                         +
       DATA()                        +
       DSN()                         +
       DSG()                         +
       ENQ()                         +
       GEN()                         +
       JOBCARD(YES)                  +
       LIB(SYS1.PLINKLIB)            +
       MAXDD(256)                    +
       MSGCL(T)                      +
       NEWN()                        +
       NEWG()                        +
       NOCAT                         +
       NOTIFY(&SYSUID)               +
       NP                            +
       NVOL()                        +
       OLDB()                        +
       OPT()                         +
       OUTCL(*)                      +
       RECAT                         +
       RLSE                          +
       TAPE()                        +
       TRK()                         +
       TUNIT('3400-6')               +
       VOL()                         +
       VOLG()                        +
       ABRARCH(FDRABR.ABRARCH.MVSLIVE) +
       ABRREST(FDRABR.ABRREST.MVSLIVE)
CONTROL MSG NOFLUSH NOLIST NOCONLIST
WRITE *****************************************************************
WRITE *     THIS CLIST ENABLES A TSO USER TO RESTORE A DATA-SET       *
WRITE *     WITH A PREFIX OF YOUR USERID FROM ARCHIVE OR BACK UP      *
WRITE *                                                               *
WRITE *     A BATCH JOB IS SET UP TO PERFORM THE RESTORE.             *
WRITE *     A PRINT OPTION IS ALSO AVAILABLE.                         *
WRITE *****************************************************************
WRITE *                                                               *
WRITE *           FOR DETAILS SEE TECHNOTE                            *
WRITE *                                                               *
WRITE *****************************************************************
SET &Q=
IF &ARCHIVE = &STR() AND &BACKUP = &STR() +
  THEN +
    SET &Q = &STR(ARCHIVE)
  ELSE +
    DO
      IF &ARCHIVE ^= &STR() THEN +
        SET &Q = &STR(ARCHIVE)
      IF &BACKUP ^= &STR() THEN +
          SET &Q = &STR(BACKUP)
    END
SET &ERR=
SET &O=
SET &OQ=
IF &OPT ^= RQ AND &OPT ^= FG AND &OPT ^= BG AND &OPT ^= PR AND +
   &OPT ^= THEN +
     SET &ERR = Y
GOPT:  IF &Q = ARCHIVE THEN +
         DO
           IF &OPT = FG THEN +
              DO
                SET &ERR = Y
                WRITE ***                                         ***
                WRITE ***   OPT VALUE OF '&OPT' HAS BEEN
                WRITE ***    DISALLOWED IN ALT ENVIRONMENT        ***
                WRITE ***      %RESTORE  TERMINATED               ***
                EXIT QUIT
              END
           IF &OPT = RQ THEN +
              DO
                SET &ERR = Y
                WRITE ***                                         ***
                WRITE ***   OPT VALUE OF '&OPT' IS NOT YET
                WRITE ***    ENABLED IN ALT ENVIRONMENT           ***
                WRITE ***      %RESTORE  TERMINATED               ***
                EXIT QUIT
              END
           IF &OPT = BG OR &OPT = PR +
             THEN +
               DO
                 SET &O=&STR(&OPT)
                 SET &ERR =
               END
         END
       IF &Q = BACKUP THEN +
         DO
           IF &OPT = FG THEN +
              SET &ERR = Y
           IF &OPT = RQ THEN +
              DO
                SET &ERR = Y
                WRITE ***                                         ***
                WRITE ***   OPT VALUE OF '&OPT' IS NOT YET
                WRITE ***    ENABLED IN ALT ENVIRONMENT           ***
                WRITE ***      %RESTORE  TERMINATED               ***
                EXIT QUIT
              END
           IF &OPT = BG OR &OPT = PR +
             THEN +
               DO
                 SET &O=&STR(&OPT)
                 SET &ERR =
               END
         END
       IF &O = THEN +
         DO
           IF &ERR = Y THEN +
              WRITE OPT VALUE OF '&OPT' IS INCORRECT FOR +
                    RESTORE &Q
           WRITE THE AVAILABLE &Q RESTORE OPTIONS ARE:
           WRITE     PR -- REQUEST INFORMATION ON DATA +
                     SET(S) OR DATA SET GROUP(S).
           WRITE     RQ -- PLACE THE RESTORE REQUEST IN THE +
                     &Q REMOTE QUEUE.
           IF &Q = ARCHIVE THEN +
             DO
               WRITE     FG -- EXECUTE THE RESTORE IMMEDIATELY +
                         IN THE FOREGROUND.
               WRITE           NOTE: REQUIRES MOUNT AUTHORITY AND +
                         THE ABILITY TO EXECUTE
               WRITE                 AUTHORIZED PROGRAMS UNDER TSO.
             END
           WRITE     BG -- SUBMIT A BATCH JOB TO EXECUTE THE +
                     RESTORE IN THE BACKGROUND.
           WRITE ENTER OPTION REQUIRED OR 'END' TO TERMINATE +
                 &Q RESTORE
           READ &OPT
           IF &OPT = END THEN +
             DO
               WRITE  OPTION SPECIFIED -- 'END' -- +
                      #RESTORE TERMINATED
               EXIT QUIT
             END
            SET &ERR = Y
            GOTO GOPT
         END
IF &O = PR +
  THEN +
    SET &OQ = &STR(PRINTED)
  ELSE +
    SET &OQ = &STR(RESTORED)
SET &D=
SET &DN=
SET &P= .
GDSN: IF &DSN = AND &DSG= THEN +
        DO
          WRITE ENTER NAME OF DATA SET TO BE &OQ
          READ &DSN
          GOTO GDSN
        END
IF &DSN ^= AND &DSG ^= THEN +
  DO
    WRITE DSN AND DSG CONFLICT -- #RESTORE TERMINATED
    EXIT QUIT
  END
IF &DSN ^= THEN +
  DO
    IF &NP = &STR() +
      THEN +
        SET &DN=&STR(&SYSUID&P&DSN)
      ELSE +
         DO
            WRITE ***                                          ***
            WRITE ***         SECUTITY VIOLATION               ***
            WRITE ***         SECUTITY VIOLATION               ***
            WRITE ***                                          ***
            WRITE ***    ONLY &SYSUID&P DATA-SETS
            WRITE ***         ALLOWED IN THIS CLIST
            WRITE ***    CONTACT MAINTENANCE FOR OTHER         ***
            WRITE ***         DATA-SETS REQUIRED.              ***
            WRITE ***                                          ***
            WRITE ***       %RESTORE TERMINATED.               ***
            WRITE ***                                          ***
            EXIT QUIT
        END
     SET &D=&STR(DSN=&DN)
  END
IF &DSG ^= THEN +
  DO
    IF &Q = ARCHIVE +
      THEN +
        DO
          WRITE ***                                             ***
          WRITE ***    DSG NOT ALLOWED IN ALT ENVIRONMENT       ***
          WRITE ***           FOR ARCHIVE RESTORE.              ***
          WRITE ***                                             ***
          WRITE ***          %RESTORE  TERMINATED               ***
          EXIT QUIT
        END
      ELSE +
        DO
          WRITE DSG NOT SUPPORTED BY RESTORE BACKUP -- +
                #RESTORE TERMINATED
          EXIT QUIT
        END
  END
SET &A=
IF &ADATE ^=  THEN +
  DO
    IF &Q = BACKUP +
      THEN +
        DO
          WRITE ADATE NOT SUPPORTED BY RESTORE BACKUP -- +
                #RESTORE TERMINATED
          EXIT QUIT
        END
      ELSE +
        SET &A=&STR(,ADATE=&ADATE)
  END
SET &C=
IF &COPY = 1 OR &COPY = 2 OR &COPY = +
  THEN +
    DO
      IF &COPY = 2 THEN +
        SET &C=&STR(,COPY=2)
    END
  ELSE +
    WRITE COPY(&COPY) INVALID -- DEFAULTED TO COPY(1)
SET &CYC=
IF &CYCLE ^=  THEN +
  DO
    IF &Q = ARCHIVE +
      THEN +
        DO
          WRITE CYCLE NOT SUPPORTED BY RESTORE ARCHIVE -- +
                #RESTORE TERMINATED
          EXIT QUIT
        END
      ELSE +
        SET &CYC=&STR(,CYCLE=&CYCLE)
  END
SET &G=
IF &GEN ^=  THEN +
  DO
    IF &Q = ARCHIVE +
      THEN +
        DO
          WRITE GEN NOT SUPPORTED BY RESTORE ARCHIVE -- +
                #RESTORE TERMINATED
          EXIT QUIT
        END
      ELSE +
        DO
          IF &CYCLE = +
            THEN +
              DO
                WRITE SPECIFICATION OF GEN REQUIRES CYCLE -- +
                      #RESTORE TERMINATED
                EXIT QUIT
              END
            ELSE +
              SET &G=&STR(,GEN=&GEN)
        END
  END
SET &T=
IF &CYL =^  AND &TRK ^=  THEN +
  DO
    WRITE CYL AND TRK CONFLICT -- #RESTORE TERMINATED
    EXIT QUIT
  END
IF &CYL ^=  THEN +
  SET &T=&STR(,CYL=&CYL)
IF &TRK ^=  THEN +
  SET &T=&STR(,TRK=&TRK)
SET &DA=
IF &DATA = ALL THEN +
  SET &DA=&STR(,DATA=ALL)
SET &E=
IF &ENQ = NONE THEN +
  SET &E=&STR(,ENQ=NONE)
SET &M=
IF &MAXDD ^=  THEN +
  SET &M=&STR(,MAXDD=&MAXDD)
SET &NC=
IF &NOCAT ^= &STR() AND &RECAT ^= &STR() THEN +
  DO
    WRITE NOCAT AND RECAT CONFLICT -- #RESTORE TERMINATED
    EXIT QUIT
  END
IF &NOCAT ^= &STR() THEN +
  SET &NC=&STR(,NOCAT)
IF &RECAT ^= &STR() THEN +
  SET &NC=&STR(,RECAT)
SET &NN=
IF &NEWN ^= AND &NEWG ^= THEN +
  DO
    WRITE NEWN AND NEWG CONFLICT -- #RESTORE TERMINATED
    EXIT QUIT
  END
IF &NEWN ^=  THEN +
  DO
    IF &NP = &STR() +
      THEN +
        SET &NN=&STR(,NEWN=&SYSUID&P&NEWN)
      ELSE +
        SET &NN=&STR(,NEWN=&NEWN)
  END
IF &NEWG ^=  THEN +
  DO
    WRITE ***                                              ***
    WRITE ***     NEWG NOT ALLOWED IN ALT ENVIRONMENT      ***
    WRITE ***         RETORE TERMINATED.                   ***
    EXIT QUIT
  END
SET &NO=
SET &NO=&STR(NTY=&NOTIFY)
SET &OB=
IF &OLDB ^= +
  THEN +
    DO
      IF &Q = ARCHIVE +
        THEN +
          DO
            WRITE OLDB NOT SUPPORTED BY RESTORE ARCHIVE -- +
                  #RESTORE TERMINATED
            EXIT QUIT
          END
        ELSE +
          DO
            IF &OLDB > 0 AND &OLDB < 13 +
              THEN +
                SET &OB=&STR(,OLDB=&OLDB)
              ELSE +
                DO
                  IF &OLDB ^= 0 THEN +
                    WRITE OLDB(&OLDB) INVALID -- DEFAULTED TO OLDB(0)
                END
          END
    END
SET &R=
IF &RLSE ^= &STR() THEN +
  SET &R=&STR(,RLSE)
SET &ET=
IF &TAPE ^=  THEN +
  DO
    IF &TAPE = EXP +
      THEN +
        SET &ET=&STR(,TAPE=EXP)
      ELSE +
        WRITE TAPE(&TAPE) INVALID -- IGNORED
  END
SET &J=
SET &NV=
SET &POP=
SET &V=
IF &Q = ARCHIVE THEN +
  DO
    IF &NVOL ^=  AND &VOL ^= OR &VOLG ^= THEN +
       DO
          WRITE NVOL AND/OR VOL AND/OR VOLG CONFLICT -- +
             #RESTORE TERMINATED
          EXIT QUIT
       END
    IF &NVOL ^=  AND &VOL =  AND &VOLG = THEN +
         DO
           IF &NVOL= ALTM01 OR &NVOL= ALTM11 OR &NVOL = ALTD23 THEN +
       SET &V=&STR(,NVOL=&NVOL)
       ELSE +
            DO
              WRITE  ***                                          ***
              WRITE  ***   ONLY THE THREE TSO VOLUMES ALLOWED     ***
              WRITE  ***   FOR 'NVOL' IN %RESTORE IN ALT          ***
              WRITE  ***             ENVIRONMENT.                 ***
              WRITE  ***      %RESTORE  TERMINATED.               ***
              EXIT QUIT
            END
         END
    IF &VOL ^=  AND &VOLG= AND &NVOL= THEN +
       SET &V=&STR(,VOL=&VOL)
    IF &VOLG ^=  AND &VOL= AND &NVOL = THEN +
       SET &V=&STR(,VOLG=&VOLG)
    FREE F(SYSIN,SYSPRINT,SYSPRIN#,ARCHIVE#)
    FREE F(ABRDUMMY,ABRARCH,ABRWORK,ABRMAP)
    CONTROL MSG
    ALLOC F(SYSPRINT) DA(*)
    IF &O = PR THEN +
      DO
        FREE F(SYSPRINT)
        ALLOC F(ABRMAP) DA(*)
        ALLOC F(SYSPRINT) DUMMY
        CALL '&LIB(FDRABRP)' +
             'P ARCHIVE,SORT=NO,SUM=NO,&D&V'
      END
    IF &O = RQ THEN +
      DO
        ALLOC F(ABRARCH) DA('&ABRARCH') SHR
        CALL '&LIB(FDRABRUT)' +
             'RESTORE ARCHIVE,&D&A&C&DA&E&V&NC&NN&T&R,&NO'
      END
    IF &O = FG THEN +
      DO
        ALLOC F(SYSPRIN#) DA(*)
        ALLOC F(ABRWORK) SP(1 1) CY
        ALLOC F(ABRDUMMY) DUMMY
        CALL '&LIB(FDRABR)' +
             'R TYPE=ARC,ONL,DT,DA,NOS/+
                S &D&A&C&DA&E&V&NC&NN&T&R'
      END
    IF &O = BG THEN +
      DO
        CONTROL NOMSG NOFLUSH
        FREE F(F80,SF)
        ATTR F80 BLKSIZE(800) LRECL(80) RECFM(F B)
        DEL RESTARC$.CNTL
        ALLOC F(SF) DA(RESTARC$.CNTL) SP(1 1) TR USING(F80)
        OPENFILE SF OUTPUT
        IF &JOBCARD = YES THEN +
          DO
            GAJC:  WRITE ENTER JOB NAME CHARACTER
                   READ &J
                   IF &J = THEN GOTO GAJC
                   WRITE ENTER PASSWORD FOR YOUR USERID
                   READ &PASS
                   IF &PASS = THEN GOTO GAJC
            SET &SF = +
                &STR(//&SYSUID.&J JOB '&ACCT','&SYSUID',CLASS=&CLASS,)
            PUTFILE SF
            SET &SF = +
                &STR(// NOTIFY=&NOTIFY,MSGLEVEL=(1,1),MSGCLASS=&MSGCL,)
            PUTFILE SF
            SET &SF = +
                &STR(// USER=&SYSUID,PASSWORD=&PASS)
            PUTFILE SF
          END
        SET &SF = +
            &STR(//STEP1  EXEC  PGM=FDRABR,REGION=400K,)
        PUTFILE SF
        SET &SF = +
            &STR(//  PARM='R TYPE=ARC,ONL,DT,DA&M&ET')
        PUTFILE SF
        SET &SF = +
            &STR(//ABRWORK   DD UNIT=SYSDA,SPACE=(CYL,(1,1)) )
        PUTFILE SF
        SET &SF = +
            &STR(//ABRDUMMY  DD DUMMY)
        PUTFILE SF
        SET &SF = +
            &STR(//SYSPRINT  DD SYSOUT=&OUTCL)
        PUTFILE SF
        SET &SF = +
            &STR(//SYSIN     DD *)
        PUTFILE SF
        SET &SF = +
            &STR(S &D,)
        PUTFILE SF
        SET &SF = +
            &STR(&NO&A&C&DA&E&V&NC&NN&T&R)
        PUTFILE SF
        SET &SF = +
            &STR(/*)
        PUTFILE SF
        CLOSFILE SF
        IF &JOBCARD ^= YES THEN +
           CONTROL MSG PROMPT
        SUBMIT RESTARC$.CNTL NOTIFY
        CONTROL NOMSG NOPROMPT
        IF &JOBCARD = YES THEN +
           WRITE RESTORE ARCHIVE JOB '&SYSUID.&J' SUBMITTED
        FREE F(F80,SF)
        DEL RESTARC$.CNTL
      END
    CONTROL NOMSG
    FREE F(SYSPRINT,SYSPRIN#,ARCHIVE#)
    FREE F(ABRDUMMY,ABRARCH,ABRWORK,ABRMAP)
    ALLOC F(SYSIN) DA(*)
    ALLOC F(SYSPRINT) DA(*)
  END
IF &Q = BACKUP THEN +
  DO
    IF &VOLG =^ THEN +
      DO
        WRITE VOLG NOR SUPPORTED BY BACKUP RESTORE -- +
              #RESTORE TERMINATED
        EXIT QUIT
      END
    IF &NVOL ^=  THEN +
      SET &NV=&STR(,NVOL=&NVOL)
    IF &VOL ^=  THEN +
      SET &V=&STR(,VOL=&VOL)
    FREE F(SYSIN,SYSPRINT,ABRREST,ABRMAP,DISK1)
    ALLOC F(SYSPRINT) DA(*)
    CONTROL MSG
    IF &O = PR THEN +
      DO
        SET &POP = &STR(VTOC,OLDB=ALL)
        IF &VOL = THEN +
          DO
            SET &ERR =
            ALLOC F(DISK1) DA('&DN') SHR
            IF &LASTCC ^= 0 THEN +
              DO
                WRITE DATA SET &DN NOT CATALOGED
                NCO: IF &ERR = Y THEN +
                       WRITE OPT VALUE OF '&OPT' IS INCORRECT
                     WRITE AVAILABLE OPTIONS ARE:
                     WRITE  SC -- SEARCH SCRATCH CATALOG
                     WRITE  EV -- ENTER VOLUME SERIAL NUMBER OF DISK
                     WRITE ENTER OPTION REQUIRED OR 'END' TO +
                           TERMINATE DISPLAY
                     READ &OPT
                     IF &OPT = END THEN +
                       DO
                         WRITE  OPTION SPECIFIED -- 'END' -- +
                                #RESTORE TERMINATED
                         EXIT QUIT
                       END
                     IF &OPT ^= SC AND &OPT ^= EV +
                       THEN +
                         DO
                           SET &ERR = Y
                           GOTO NCO
                         END
                     IF &OPT = SC THEN +
                       SET &POP = &STR(SCRATCH)
                     IF &OPT = EV THEN +
                       DO
                         GVOL: IF &VOL = +
                           THEN +
                             DO
                               WRITE ENTER DISK VOLUME SERIAL NUMBER
                               READ &VOL
                               GOTO GVOL
                             END
                           ELSE +
                             SET &V=&STR(,VOL=&VOL)
                       END
              END
          END
        FREE F(SYSPRINT)
        ALLOC F(ABRMAP) DA(*)
        ALLOC F(SYSPRINT) DUMMY
        CALL '&LIB(FDRABRP)' +
             'P &POP,XREF,&D&V'
      END
    IF &O = RQ THEN +
      DO
        ALLOC F(ABRREST) DA('&ABRREST') SHR
        CALL '&LIB(FDRABRUT)' +
             'RESTORE BACKUP,&D&CYC&C&DA&E&G&V&NV&NC&NN&T&R&OB,&NO'
      END
    IF &O = BG THEN +
      DO
        WRITE ***                                               ***
        WRITE ***     HAVE YOU REQUESTED THE BACKUP TAPE FROM   ***
        WRITE ***        THE LIBRARY YET ????                   ***
        WRITE ***      ANSWER YES OR NO                         ***
        READ &REPLY
        IF &REPLY = YES THEN GOTO CONT
                        ELSE +
                             DO
                               WRITE ***  RESTORE TERMINATED    ***
                               EXIT QUIT
                             END
 CONT:  CONTROL NOMSG NOFLUSH
        FREE F(F80,SF)
        ATTR F80 BLKSIZE(800) LRECL(80) RECFM(F B)
        DEL RESTDSN$.CNTL
        ALLOC F(SF) DA(RESTDSN$.CNTL) SP(1 1) TR USING(F80)
        OPENFILE SF OUTPUT
        IF &JOBCARD = YES THEN +
          DO
            GBJC:  WRITE ENTER JOB NAME CHARACTER
                   READ &J
                   IF &J = THEN GOTO GBJC
                   WRITE ENTER PASSWORD FOR YOUR USERID
                   READ &PASS
                   IF &PASS = THEN GOTO GBJC
            SET &SF = +
                &STR(//&SYSUID.&J JOB '&ACCT','&SYSUID',CLASS=&CLASS,)
            PUTFILE SF
            SET &SF = +
                &STR(// NOTIFY=&NOTIFY,MSGLEVEL=(1,1),MSGCLASS=&MSGCL,)
            PUTFILE SF
            SET &SF = +
                &STR(//   USER=&SYSUID,PASSWORD=&PASS)
            PUTFILE SF
          END
        SET &SF = +
            &STR(//STEP1  EXEC  PGM=FDRABR,REGION=400K,)
        PUTFILE SF
        SET &SF = +
            &STR(//  PARM='R TYPE=ABR,ONL&M&ET')
        PUTFILE SF
        SET &SF = +
            &STR(//ABRWORK   DD UNIT=SYSDA,SPACE=(CYL,(1,1)) )
        PUTFILE SF
        SET &SF = +
            &STR(//ABRDUMMY  DD DUMMY)
        PUTFILE SF
        SET &SF = +
            &STR(//TAPE1     DD UNIT=(&TUNIT,,DEFER),DISP=(OLD,KEEP), )
        PUTFILE SF
        SET &SF = +
            &STR(//             DSN=FDRREST,VOL=SER=FDRVOL)
        PUTFILE SF
        SET &SF = +
            &STR(//SYSPRINT  DD SYSOUT=&OUTCL)
        PUTFILE SF
        SET &SF = +
            &STR(//SYSPRIN1  DD SYSOUT=&OUTCL)
        PUTFILE SF
        SET &SF = +
            &STR(//SYSIN     DD *)
        PUTFILE SF
        SET &SF = +
            &STR(S &D,)
        PUTFILE SF
        SET &SF = +
            &STR(&NO&CYC&C&DA&E&G&V&NV&NC&NN&T&R&OB)
        PUTFILE SF
        SET &SF = +
            &STR(/*)
        PUTFILE SF
        CLOSFILE SF
        IF &JOBCARD ^= YES THEN +
           CONTROL MSG PROMPT
        SUBMIT RESTDSN$.CNTL NOTIFY
        CONTROL NOMSG NOPROMPT
        IF &JOBCARD = YES THEN +
           WRITE RESTORE DATA SET JOB '&SYSUID.&J' SUBMITTED
        FREE F(F80,SF)
        DEL RESTDSN$.CNTL
      END
    CONTROL NOMSG
    FREE F(SYSPRINT,ABRREST,ABRMAP)
    ALLOC F(SYSIN) DA(*)
    ALLOC F(SYSPRINT) DA(*)
  END
