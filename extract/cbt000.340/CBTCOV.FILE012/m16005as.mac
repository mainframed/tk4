         MACRO
&NAME    ENTER &B1,&B2,&B3,&ENT=,&RENT=NO,&EXTENT=,&XTRN=,&BIT=NO,     X
               &EQU=NO,&SP=0,&SA=72,&EC=YES,&VERS=,&AUTH=NO,&PUN=YES
         COPY  HGLOBAL
         COPY  GREPORT
         LCLA  &R1,&R2,&R3,&K,&Q,&A,&C,&LEN
         LCLB  &B,&SW(2)
         LCLC  &N,&N2,&DATE,&V
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
.*                                                                   *
.*       THIS MACRO PROVIDES ENTRY CODING FOR ASSEMBLER PROGRAMS.    *
.*       IT GIVES SAVE AREA CHAINING AND OTHER SERVICES              *
.*       AS NOTED BELOW-                                             *
.*                                                                   *
.*       SYMBOLIC PARAMETERS -                                       *
.*                                                                   *
.*                       &B1 - FIRST BASE REGISTER - DEFAULTS TO     *
.*                             13 IF RENT=NO SPECIFIED OR TO         *
.*                             15 IF RENT=YES IS SPECIFIED.          *
.*                                                                   *
.*                       &B2 - SECOND BASE REGISTER (2-12)           *
.*                                                                   *
.*                       &B3 - THIRD BASE REGISTER (2-12)            *
.*                                                                   *
.*                      &ENT - THIS GIVES ADDITIONAL ENTRY POINTS TO *
.*                             THE PROGRAM WHICH ARE EQUATED TO THE  *
.*                             MAJOR ENTRY POINT.                    *
.*                             (FOR ALIAS RESOLUTION)                *
.*                                                                   *
.*                   &EXTENT - THIS PROVIDES "ENTRY" STATEMENTS FOR  *
.*                             ADDITIONAL ENTRY POINTS WITHIN THE    *
.*                             BODY OF THE PROGRAM.                  *
.*                                                                   *
.*                     &XTRN - THIS PROVIDES "EXTRN" STATEMENTS FOR  *
.*                             RESOLUTION OF ANY A-CONS.             *
.*                                                                   *
.*                      &BIT - DEFAULTS TO "NO" - IF "YES" IS        *
.*                             SPECIFIED THEN A BIT MASK EQUATE      *
.*                             TABLE IS GENERATED.                   *
.*                                                                   *
.*                      &EQU - DEFAULTS TO "NO" - IF "YES" IS        *
.*                             SPECIFIED THEN A REGISTER EQUATE      *
.*                             TABLE IS GENERATED.                   *
.*                                                                   *
.*                       &SP - THIS GIVES THE SUBPOOL NUMBER FOR     *
.*                             A DYNAMICALLY OBTAINED SAVE AREA -    *
.*                             THE DEFAULT IS SP=0                   *
.*                                                                   *
.*                     &RENT - THIS CAUSES THE MACRO TO GENERATE     *
.*                             RE-ENTRANT CODE (SEE NOTE BELOW FOR   *
.*                             DETAILS OF THE EXIT CODING).          *
.*                                                                   *
.*                       &SA - IF "NO" IS SPECIFIED THEN NO SAVE     *
.*                             AREA IS GENERATED AND NO SAVE AREA    *
.*                             CHAINING IS PROVIDED. IF "NO" IS NOT  *
.*                             SPECIFIED THEN THIS GIVES THE SIZE OF *
.*                             OF THE SAVE AREA TO BE PROVIDED - THE *
.*                             DEFAULT IS 72 BYTES (18 FULLWORDS).   *
.*                                                                   *
.*                       &EC - IF "NO" IS SPECIFIED THEN NO          *
.*                             EYECATCHER CONSTANTS APPEAR IN THE    *
.*                             EXPANSION (THIS MAKES THE PROGRAM     *
.*                             SMALLER!)                             *
.*                                                                   *
.*                     &VERS - THIS ALLOWS YOU TO SPECIFY A CHARACTER*
.*                             STRING THAT WILL APPEAR AS A DC TYPE  *
.*                             CONSTANT IN THE PROGRAM (VERSION      *
.*                             NUMBER ETC.)                          *
.*                                                                   *
.*                     &AUTH - IF "YES" IS SPECIFIED THEN A          *
.*                             "SETCODE AC(1)" CARD IS PRODUCED.     *
.*                                                                   *
.*                      &PUN - IF "NO" IS SPECIFIED THEN NO ALIAS    *
.*                             OR SETCODE CARDS ARE PUNCHED.         *
.*                                                                   *
.*                                                                   *
.*       N.B.       THIS MACRO IS TIED UP WITH THE MACRO "LEAVE"     *
.*                  WHICH PROVIDES EXIT CODING FOR PROGRAMS - THE    *
.*                  MACRO "LEAVE" WILL FREE UP THE CORRECT LENGTH    *
.*                  OF SAVE AREA IF IT WAS OBTAINED DYNAMICALLY      *
.*                  AND ONLY RESTORES REGISTERS IF THEY WERE SAVED.  *
.*                                                                   *
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
.*                                                                   *
.*                     VARIABLE USAGE                                *
.*                     **************                                *
.*                                                                   *
.*     GLOBALS                                                       *
.*     *******                                                       *
.*                                                                   *
.*     &#SA     -  SIZE OF THE SAVE AREA IF ONE IS PROVIDED          *
.*                                                                   *
.*     &#SP     -  SUBPOOL NUMBER OF A DYNAMICALLY OBTAINED SAVE AREA*
.*                                                                   *
.*     &#RENT   -  0 = NON RE-ENTRANT                                *
.*                 1 = RE-ENTRANT                                    *
.*                                                                   *
.*     &SAVE    -  LABEL OF THE IN-LINE SAVE AREA (SAVE&SYSNDX)      *
.*                                                                   *
.*     &MCSECT  -  MAIN PROGRAM CSECT NAME (&NAME)                   *
.*                                                                   *
.*     &BASIC   -  FIRST 4 CHARACTERS OF CSECT NAME (E.G. SM12 )     *
.*                                                                   *
.*     &CNAME   -  LAST 3 CHARACTERS OF CSECT NAME                   *
.*                                                                   *
.*                                                                   *
.*     LOCALS                                                        *
.*     ******                                                        *
.*                                                                   *
.*     &R1    -    FIRST BASE REGISTER NUMBER                        *
.*                                                                   *
.*     &R2    -    SECOND BASE REGISTER NUMBER                       *
.*                                                                   *
.*     &R3    -    THIRD BASE REGISTER NUMBER                        *
.*                                                                   *
.*     &K     -    NUMBER OF CHARS. IN EYCATCHER FOR PROGRAM NAME    *
.*                                                                   *
.*     &Q     -    NUMBER OF SUBLIST ENTRIES FOR ANY PARAMETER       *
.*                                                                   *
.*     &A     -    LOOP COUNTER FOR SUBLISTS                         *
.*                                                                   *
.*     &C     -    NUMBER OF CHARS. IN VERSION INFORMATION           *
.*                                                                   *
.*     &LEN   -    LENGTH OF EYECATCHER CONSTANTS                    *
.*                                                                   *
.*     &B     -    0 = SINGLE BASE REGISTER                          *
.*                 1 = MULTIPLE BASE REGISTERS                       *
.*                                                                   *
.*     &SW(1) -    0 = SAVE AREA IS REQUIRED                         *
.*                 1 = NO SAVE AREA TO BE PROVIDED                   *
.*                                                                   *
.*     &SW(2) -    0 = EYECATCHER CONSTANTS REQUIRED                 *
.*                 1 = NO EYECATCHER CONSTANTS TO BE PROVIDED        *
.*                                                                   *
.*     &N     -    CSECT NAME                                        *
.*                                                                   *
.*     &N2    -    PROGRAM NAME FOR EYECATCHER                       *
.*                                                                   *
.*     &DATE  -    ASSEMBLY DATE AS DD/MM/YY                         *
.*                                                                   *
.*     &V     -    VERSION INFORMATION                               *
.*                                                                   *
.*                                                                   *
.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*
&DATE    SETC  '&SYSDATE'(4,3).'&SYSDATE'(1,3).'&SYSDATE'(7,2)
         AIF   (T'&VERS EQ 'O').VEREND
         AIF   ('&VERS'(1,1) EQ '''').VERQ
&V       SETC  '&VERS'
&C       SETA  K'&VERS
         AGO   .VEREND
.VERQ    ANOP
&C       SETA  K'&VERS-2
&V       SETC  '&VERS'(2,&C)
.VEREND  ANOP
         AIF   ('&SA' NE 'NO').ENT1
&SW(1)   SETB  1
.ENT1    AIF   ('&EC' EQ 'YES').ENT2
&SW(2)   SETB  1
.ENT2    AIF   (&SW(1)).ENT3
&#SA     SETA  &SA
&SAVE    SETC  'SAVE&SYSNDX'
.ENT3    ANOP
&N       SETC  '$PRIVATE'
&R1      SETA  13
&R2      SETA  12
&R3      SETA  11
         AIF   (T'&NAME EQ 'O').A1D
&K       SETA  K'&NAME+1
&N       SETC  '&NAME'
&N2      SETC  ' &N'
&MCSECT  SETC  '&N'
&BASIC   SETC  '&N'(1,4)
&CNAME   SETC  '&N'(5,3)
         AGO   .A1
.A1D     ANOP
&K       SETA  7
&N2      SETC  ' NONAME'
.A1      ANOP
&LEN     SETA  &K+20
         AIF   (T'&VERS EQ 'O').A1Z
&LEN     SETA  &LEN+&C+11
.A1Z     AIF   (T'&B3 EQ 'O').A1A
&R3      SETA  &B3
.A1A     AIF   (T'&B2 EQ 'O').A2
&R2      SETA  &B2
.A2      AIF   (T'&B1 EQ 'O').A3
&R1      SETA  &B1
         AGO   .A4
.A3      ANOP
.A4      AIF   (&R1 LT 2 OR &R1 GT 13).ERR2
         AIF   (&R2 LT 2 OR &R2 GT 12).ERR2
         AIF   (&R3 LT 2 OR &R3 GT 12).ERR2
         AIF   (T'&B3 EQ 'O').MM1
         AIF   (T'&B2 EQ 'O').MM2
         AIF   (&R1 EQ &R2 OR &R1 EQ &R3 OR &R2 EQ &R3).ERR1
         AGO   .MMZ
.MM1     AIF   (T'&B2 EQ 'O').MMZ
         AIF   (&R1 EQ &R2).ERR1
         AGO   .MMZ
.MM2     AIF   (&R1 EQ &R3).ERR1
.MMZ     ANOP
         AIF   ('&PUN' EQ 'NO').ZAUTH1
         AIF   (T'&ENT EQ 'O').ZAUTH1
&Q       SETA  N'&ENT
.ZALI1   PUNCH '  ALIAS &ENT(&Q)  '
&Q       SETA  &Q-1
         AIF   (&Q GT  0).ZALI1
.ZAUTH1  AIF   ('&PUN' EQ 'NO').AUTHEND
         AIF   ('&AUTH' NE 'YES').AUTHEND
         PUNCH '  SETCODE AC(1)  '
.AUTHEND ANOP
&N       CSECT
         AIF   ('&EQU' EQ 'NO').S
         REQU
.S       AIF   ('&BIT' EQ 'NO').T
         BEQU
.T       ANOP
         AIF   (T'&ENT EQ 'O').Q1
&Q       SETA  N'&ENT
         AIF   ('&ENT'(1,1) NE '(').SPEC
&A       SETA  1
.Q2      ANOP
&ENT(&A) EQU   *
         ENTRY &ENT(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q1
         AGO   .Q2
.SPEC    ANOP
&ENT     EQU   *
         ENTRY &ENT
.Q1      AIF   (T'&EXTENT EQ 'O').Q3
&Q       SETA  N'&EXTENT
         AIF   ('&EXTENT'(1,1) NE '(').SPEC2
&A       SETA  1
.Q4      ANOP
         ENTRY &EXTENT(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q3
         AGO   .Q4
.SPEC2   ENTRY &EXTENT
.Q3      AIF   (T'&XTRN EQ 'O').Q5
&Q       SETA  N'&XTRN
         AIF   ('&XTRN'(1,1) NE '(').SPEC3
&A       SETA  1
.Q6      ANOP
         EXTRN &XTRN(&A)
&A       SETA  &A+1
         AIF   (&A GT &Q).Q5
         AGO   .Q6
.SPEC3   EXTRN &XTRN
.Q5      ANOP
         USING *,15
         STM   14,12,12(13)        SAVE REGS
         AIF   ('&RENT' EQ 'YES').RTYPE
         AIF   (&SW(1)).ENT6
         LR    14,13               SAVE HSA ADDRESS
.ENT6    AIF   (&SW(2)).X2
         B     B&SYSNDX            BRANCH ROUND CONSTANTS
         DC    H'&LEN'             LENGTH OF CONSTANTS
         DC    CL&K'&N2'           EYECATCHER
         DC    CL20' - &DATE - &SYSTIME '    ASSEMBLY DATE AND TIME
         AIF   (T'&VERS EQ 'O').NOVERS
         DC    C'VERSION - &V '              VERSION INFORMATION
.X2      ANOP
.NOVERS  AIF   (NOT &SW(1)).ENT7
         AIF   (&SW(2)).ENT4
B&SYSNDX DS    0H
         AGO   .ENT4
.ENT7    ANOP
B&SYSNDX BAL   13,A&SYSNDX         BRANCH AROUND SAVE AREA
         AIF   (&R1 NE 13).A5
         AIF   (T'&B2 NE 'O' OR T'&B3 NE 'O').Z1A
         USING *,13
         AGO   .Z2
.Z1A     AIF   (T'&B3 EQ 'O').Z1
         AIF   (T'&B2 EQ 'O').Z1B
         USING *,13,&R2,&R3
         AGO   .Z1Z
.Z1B     USING *,13,&R3
         AGO   .Z1Z
.Z1      USING *,13,&R2
.Z1Z     ANOP
&B       SETB  1
.Z2      DROP  15
.A5      ANOP
&SAVE    DS    ((&#SA+3)/4)F       SAVE AREA
         CNOP  0,4
A&SYSNDX EQU   *
.ENT4    AIF   (NOT &SW(1)).ENT5
         AIF   (T'&B1 EQ 'O').RT8
         AIF   (&R1 EQ 13).ERR4
.ENT5    ANOP
         AIF   (&R1 EQ 13).A6
         BALR  &R1,0               LOAD BASE REGISTER
.MBASE   AIF   (T'&B3 EQ 'O').A7P
         AIF   (T'&B2 EQ 'O').A7Q
         USING *,&R1,&R2,&R3
         DROP  15
         AGO   .A8
.A7Q     ANOP
         USING *,&R1,&R3
         DROP  15
         AGO   .A8
.A7P     ANOP
         AIF   (T'&B2 EQ 'O').A7
         USING *,&R1,&R2
         DROP  15
         AGO   .A8
.A7      ANOP
         USING *,&R1
         DROP  15
         AGO   .A6
.A8      AIF   (T'&B3 EQ 'O').A8Z
         AIF   (T'&B2 EQ 'O').A8Y
         LA    &R2,2048(0,&R1)          LOAD
         LA    &R2,2048(0,&R2)            SECOND AND
         LA    &R3,2048(0,&R2)                THIRD
         LA    &R3,2048(0,&R3)                   BASE REGISTERS
         AGO   .A8ZZ
.A8Y     LA    &R3,2048(0,&R1)         LOAD SECOND
         LA    &R3,2048(0,&R3)             BASE REGISTER
         AGO   .A8ZZ
.A8Z     LA    &R2,2048(0,&R1)     LOAD SECOND
         LA    &R2,2048(0,&R2)        BASE REGISTER
.A8ZZ    ANOP
&B       SETB  0
.A6      AIF   (&B).A8
         AIF   (&SW(1)).RT8
         AIF   ('&RENT' EQ 'YES').RT8
         AIF   (&#SA LT 12).ERR6
         ST    13,8(0,14)          FORWARD POINTER
         ST    14,4(0,13)          BACKWARD POINTER
         MEXIT
.RTYPE   ANOP
&#RENT   SETB  1
&#SP     SETA  &SP
         AIF   (T'&B1 EQ 'O').ERR3
         AIF   ('&B1' EQ '13').ERR4
.RT9     AIF   (&SW(1)).RT1
&#SA     SETA  &SA
         LR    14,13               SAVE HSA ADDRESS
*        GETMAIN  R,LV=&SA,SP=&SP  GET SAVE AREA STORAGE
         GETMAIN  R,LV=&SA,SP=&SP  GET SAVE AREA STORAGE
         LR    13,1                LOAD SAVE AREA ADDRESS
         ST    13,8(0,14)          FORWARD POINTER
         ST    14,4(0,13)          BACKWARD POINTER
         LM    14,1,12(14)         RESTORE LINKAGE REGISTERS
.RT1     AIF   (&SW(2)).RT3
         B     R&SYSNDX            BRANCH ROUND CONSTANTS
         DC    H'&LEN'             LENGTH OF CONSTANTS
         DC    CL&K'&N2'           EYECATCHER
         DC    CL20' - &DATE - &SYSTIME '    ASSEMBLY DATE AND TIME
         AIF   (T'&VERS EQ 'O').NOVERSR
         DC    C'VERSION - &V '              VERSION INFORMATION
.RT3     ANOP
.NOVERSR ANOP
         AIF   (T'&B1 EQ 'O').RT4
         AIF   ('&B1' EQ '13').RT10
R&SYSNDX BALR  &B1,0
         AGO   .MBASE
.RT10    AIF   (T'&B3 EQ 'O' AND T'&B2 EQ 'O').RT4
         AIF   (T'&B2 NE 'O' AND T'&B3 NE 'O').RT5
         AIF   (T'&B3 EQ 'O').RT11
         USING &N,15,&B3
R&SYSNDX LA    &B3,2048(0,15)          LOAD SECOND
         LA    &B3,2048(0,&B3)             BASE REGISTER
         AGO   .RT8
.RT5     USING &N,15,&B2,&B3
R&SYSNDX LA    &B2,2048(0,15)          LOAD
         LA    &B2,2048(0,&B2)            SECOND AND
         LA    &B3,2048(0,&B2)                 THIRD BASE
         LA    &B3,2048(0,&B3)                      REGISTERS
         AGO   .RT8
.RT11    USING &N,15,&B2
R&SYSNDX LA    &B2,2048(0,15)          LOAD SECOND
         LA    &B2,2048(0,&B2)             BASE REGISTER
         AGO   .RT8
.RT4     AIF   (&SW(2)).RT8
R&SYSNDX EQU   *
.RT8     MEXIT
.ERR1    MNOTE 12,'DUPLICATE BASE REGISTERS - NOT ALLOWED'
         MEXIT
.ERR2    MNOTE 12,'INVALID BASE REGISTER ASSIGNMENT'
         MEXIT
.ERR3    MNOTE 1,'NO BASE REGISTER ASSIGNED - 15 ASSUMED'
         AGO   .RT9
.ERR4    MNOTE 1,'REG 13 INVALID AS BASE - REG 15 ASSUMED'
         AGO   .RT9
.ERR5    MNOTE 1,'REG 13 INVALID AS BASE - REG 15 ASSUMED'
         AGO   .RT8
.ERR6    MNOTE 8,'SAVE AREA IS TOO SMALL FOR POINTERS'
         AGO   .RT8
         MEND
