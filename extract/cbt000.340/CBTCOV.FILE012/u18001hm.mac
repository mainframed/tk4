         TITLE   'SPY58 - SCHEDULER/SUSPEND/TRACE MODULE - REL 1.0'
************************************************************
* THIS MODULE SUPPLIES SUSPEND/RELEASE,SCHEDULER,TRACE AND *
* TCB PRIORITY CHANGING SUPPORT.THIS MODULE WILL SOON BE   *
* REPLACED BY THE RELEASE 2 VERSION                        *
************************************************************
* MOD1 THIS MODULE ABENDED S0C5 WHEN PROCESSING THE COMMAND*     MOD1
*      'PRI,D'. THE MODIFICATION RECTIFIES THIS PROBLEM.   *     MOD1
*                                                          *     MOD1
*        B.NOLAN                        24TH AUGUST 1978   *     MOD1
*                                                          *     MOD1
************************************************************     MOD1
* MACRO
         MACRO
&NAME    CUREG
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUREG MACRO:16/01/75'
         POP   PRINT
         ACTR  50
         LCLA  &X,&Y,&Z
*    GENERAL REGISTERS
.LPR     ANOP
R&X      EQU   &X
&X       SETA  &X+1
         AIF   (&X LT 16).LPR
*    CONTROL REGISTERS
.LPC     ANOP
C&Y      EQU  &Y
&Y       SETA  &Y+1
         AIF   (&Y LT 16).LPC
*    FLOATING POINT REGISTERS
.LPF     ANOP
F&Z      EQU   &Z
&Z       SETA  &Z+2
         AIF   (&Z LT 8).LPF
         MEND
         MACRO
&NAME    CUENTER &BASE=(R12),&RECURSE=,&RENT=,&FIRST=,&CSECT=,&PARM=
         LCLA  &AL0,&AL1,&AL2,&AL9,&AL12
         ACTR  45                                              DEC 75
&AL2     SETA  &SYSNDX
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUENTER MACRO:16/06/77'
         POP   PRINT
         LCLC  &CL0,&CL1,&CL2,&CL3,&CL12,&CL13,&CL50
         LCLC  &CL51,&CL52,&CL53
         GBLB  &BG15
         AIF   ('&NAME' EQ '').B98
         ENTRY &NAME
.B98     ANOP
&CL0     SETC  '12'
         AIF   ('&BASE'(1,1) EQ '(').B10  *VALIDATE &BASE PARAMETER
&CL0     SETC  '&BASE'
         AIF   ('&CL0' EQ 'NONE').B11
         AIF   ('&CL0'(1,1) NE 'R').B4B
&AL9     SETA  K'&CL0-1
&CL0     SETC  '&CL0'(2,&AL9)
.B4B     AIF   ((&CL0 GT 1) AND (&CL0 LT 13)).B11
.BERA    MNOTE 9,'&&BASES WRONG,MACRO ABANDONED'
         MEXIT
.B10     ANOP
&CL0     SETC  '&BASE(1)'
&AL0     SETA  1                        COUNT ALONG TO-BE-SCANNED BASES
.B13     ANOP
&AL1     SETA  1                       *COUNT ALONG PREVIOUSLY SCANNED
&CL12    SETC  '&BASE(&AL0)'
         AIF ('&CL12'(1,1) NE 'R').B12A
&AL9     SETA  K'&CL12-1
&CL12    SETC  '&CL12'(2,&AL9)
.B12A    ANOP
&AL12    SETA  &CL12
.B12     AIF    ((&AL12 LT 2) OR (&AL12 GT 12)).BERA
.B15     AIF   (&AL1 EQ &AL0).B14      *J OUT IF REACHED LATEST
&CL13    SETC  '&BASE(&AL1)'
         AIF   ('&CL13'(1,1) NE 'R').B15A
&AL9     SETA  K'&CL13-1
&CL13    SETC  '&CL13'(2,&AL9)
.B15A    AIF   (&CL12 EQ &CL13).BERA *ERROR IF DUPLICATED
&AL1     SETA  &AL1+1                  *STEP ALREADY SCANNED PTR
         AGO   .B15
.B14     ANOP
&AL0     SETA  &AL0+1                  *STEP SCAN POINTER
         AIF   ('&BASE(&AL0)' NE '').B13 *J IF NOT NULL
&AL9     SETA  N'&BASE
         AIF   (&AL0 LT &AL9).BERA *ERROR IF NULL ELEMENT
.B11    ANOP
.*   START GENERATING PROGRAM
         DS    0H
         BALR  R15,0
         USING *,R15
&CL1     SETC  '&CSECT'
         AIF   ('&CL1' NE '').B30
&CL1     SETC  '*'
.B30     ANOP
&NAME    SAVE  (14,12),,&CL1
.B32     ANOP
.B90A    BAL   &CL0,OCSVA&AL2
         DROP  R15
         USING *,&CL0
OCSVD&AL2 EQU  *         HOLD IMMEDIATELY AFTER USING STATEMENT
         AIF   (&BG15).NODATIM
         CUREG                          REGISTER MNEMNONICS
&CL51    SETC  '&NAME'
         AIF   (K'&CL51 LE 8).DT1
&CL51    SETC  '&CL51'(1,8)
         AGO   .DT2
.DT1     ANOP
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '&SYSECT'
         AIF   ('&CL51' NE '').DT2
&CL51    SETC  '????????'
.DT2     ANOP
&CL52    SETC  '&SYSDATE'(4,2)'.'.'&SYSDATE'(1,2)'.'.'&SYSDATE'(7,2)
&CL53    SETC  '&SYSTIME'(1,2)':'.'&SYSTIME'(4,2)':00'
CUVRSION DC    C'****VERSION/',CL8'&CL51',C'/&CL52./&CL53'
&BG15    SETB  (1)                                             DEC 75
.NODATIM ANOP
OCSAR&AL2 DS    18F
OCSVA&AL2 EQU  *
         AIF   ('&BASE' EQ '').B89
&AL9     SETA  N'&BASE
         AIF   (&AL9 LE 1).B89
&AL1     SETA  &AL9
&AL0     SETA  2
.B88     ANOP
&CL2     SETC  '&BASE(&AL0)'
&CL3     SETC  '&BASE(&AL0-1)'
         LA    &CL2,1
         LA    &CL2,4095(&CL2,&CL3)
         USING OCSVD&AL2+4096*(&AL0-1),&CL2
         AIF   (&AL0 EQ &AL1).B87
&AL0     SETA  &AL0+1
         AGO   .B88
.B89     ANOP
.B87     ANOP
         ST    R13,OCSAR&AL2+4
         LR    R15,R13
         LA    R13,OCSAR&AL2
         ST    R13,8(R15)
         MEXIT
.MEND    MEND
* MACRO
         MACRO
&NAME    CUEXIT   &RC=(15)
         GBLB  &BG15                                 DEC 75
         LCLA  &B,&W
         LCLC  &Z
&NAME    DS 0H
         PUSH  PRINT
         PRINT ON
         MNOTE 'DATE OF THIS VERSION OF THE CUEXIT MACRO:16/06/77'
         POP   PRINT
         L      R13,4(13)
&Z         SETC  '&RC'
.B94     AIF   ('&Z'(1,2) NE '(R').B84
&B       SETA  K'&Z-2
&Z        SETC  '&Z'(1,1).'&Z'(3,&B)
.B84     ANOP
         AIF   ('&Z' EQ '(15)').B60
         AIF   ('&Z'(1,1) EQ '(').B61
         RETURN (14,12),RC=&Z
         AGO   .B62
.B61     ANOP
&W       SETA  K'&Z-2
&Z       SETC  '&Z'(2,&W)
         LR    R15,&Z
.B60     RETURN (14,12),RC=(15)
.B62     ANOP
         MEND
SPY58    CUENTER BASE=12
         USING PARMSECT,9                 ADDRESS MAIN MODULE DSECT
         L     9,0(1)                     FROM PARM ADDRESS
         ST    9,PARMADR                  STORE PARM ADDRESS
         MVC   GETBACK+4(7),PARM          SAVE PARM
         MVC   GETBACK(3),COMMAND         MOVE FIRST 3 BYTES
         LA    1,PARMECB                  GET ECB ADDRESS
         POST  (1)                        LET COMMAND MODULE CONTINUE
         LA    2,TCBLIST                  LOAD TCBLIST ADDRESS
         CLC   GETBACK(3),=C'SCH'         IS THIS THE SCHEDULER
         BE    SCHED                      IF SO GET TO IT
         CLC   GETBACK(3),=C'PRI'         IS THIS PRIORITY CHECK
         BE    PRIORITY                   IF SO GO TO IT
MAINLOOP EQU   *
         CLI   GETBACK+4,C'P'             IS THIS A PARTITION COMMAND
         BE    GOODCOM                    YES - NO PROBLEMS
NASTYWTO WTO   '** SPY -  HLD/REL/TRC COMMAND ERROR **'
         B     GETAWAY                    GET OUT
GOODCOM  CLC   GETBACK(3),=C'TRC'         IS THIS A TRACE?
         BE    RIDEON                     IF SO CONTINUE IN PEACE
         CLC   GETBACK(3),=C'DSP'         CHANGE PRIORITY?
         BE    RIDEON                     CONTINUE IN PEACE
         CLC   GETBACK(3),=C'HLD'         SUSPEND A PARTITION?
         BNE   NOTHLD                     IF NOT MUST BE RELEASE
         MVC   CHECK,HLD                  MOVE HOLD BYTE TO CHECK
         B     RIDEON                     CONTINUE IN PEACE
NOTHLD   CLC   GETBACK(3),=C'REL'         IS THIS A RELEASE COMMAND?
         BNE   NASTYWTO                   IF NOT NASTY
         MVC   CHECK,REL                  MOVE RELEASE BYTE TO CHACK
         MVC   WTO1+25(9),RELEASE         PUT WTO RIGHT
RIDEON   CLI   GETBACK+5,C'A'             PARTITION 10
         BNE   RIDEON1                    NO
         MVI   GETBACK+5,X'0A'            CHANGE TO HEX 10
         B     RIDESON                    CONTINUE
RIDEON1  CLI   GETBACK+5,C'B'             PARTITION 11
         BNE   RIDEON2                    NO
         MVI   GETBACK+5,X'0B'            MOVE HEX FOR 11
         B     RIDESON                    GET OUT
RIDEON2  CLI   GETBACK+5,C'C'             IS THIS PARTITION 12
         BNE   RIDEON3                    GET OUT
         MVI   GETBACK+5,X'0C'            MOVE OVER HEX FOR 12
         B     RIDESON                    GET OUT
RIDEON3  CLI   GETBACK+5,C'D'             DO SAME FOR 13
         BNE   RIDEON4
         MVI   GETBACK+5,X'0D'
         B     RIDESON
RIDEON4  CLI   GETBACK+5,C'E'             AND FOR 14
         BNE   RIDEON5
         MVI   GETBACK+5,X'0E'
         B     RIDESON
RIDEON5  CLI   GETBACK+5,C'F'             DON'T FORGET 15
         BNE   RIDESON
         MVI   GETBACK+5,X'0F'
RIDESON  NI    GETBACK+5,X'0F'            GET RID OF SIGN
         XR    6,6                        CLEAR OUT 6
         IC    6,GETBACK+5                INSERT PARTITION NO
         CLI   GETBACK+5,X'00'            IF ZERO NO GOOD
         BE    KILL
NO       L     5,16                       GET CVT
         L     5,244(5)                   LOAD P0 ADDRESS
        MVC    P4STORE,16(5)              MOVE ADDRESS OF PARTIT 4
LOOPAVR  MVC   0(4,2),0(5)                MOVE TCB ADDRESS
         LA    2,4(2)                     UP TCB TABLE
CONTAVR  LA    5,4(5)                     UP IOS FREELIST
         LTR   5,5                        TEST 5
         BZ    FIN2                       END OF FREELIST?
         BCT   6,LOOPAVR                  BRANCH COUNT BACK
         L     5,0(5)
         LA    6,200
         ST    5,STORE
         L     7,12(5)
         CLC   GETBACK(3),=C'DSP'
         BE    NOMODE
         MODESET KEY=ZERO
         MVC   WTO1+12(8),0(7)
         MODESET KEY=NZERO
NOMODE EQU   *
         MVC   FIN1+12(8),WTO1+12
         MVC   FIN2+12(8),WTO1+12
         MVC   FIN3+12(8),WTO1+12
         MVC   JOBNAME,WTO1+12
         CLC   GETBACK(3),=C'TRC'
         BE    TRACE1
         CLC   GETBACK(3),=C'DSP'
         BE    DSPCH
TRCSUSP  L     5,STORE        ***** JEFF WAS HERE *****
         L     5,0(5)
GOTAVR   CLC   28(1,5),CHECK
         BE    SMASH
         CLI   CHECK,X'81'
         BE    FIN3
         STIMER WAIT,BINTVL=BINTVL
         BCT   6,GOTAVR
         B     FIN1
SMASH    MODESET KEY=ZERO
         MVC   28(1,5),CHECK+1
NOCRASH  MODESET  KEY=NZERO
WTO1     WTO   '**           NOW SUSPENDED BY SPY **'
         B     GETAWAY
FIN1     WTO   '**           - SPY COMMAND FAILURE **'
GETAWAY  CUEXIT RC=0
FIN2     WTO   '** SPY - PARTITION SEARCH FAILURE **'
         B     GETAWAY
FIN3     WTO   '**          NOT PREVIOUSLY SUSPENDED BY SPY **'
         B     GETAWAY
TRACE1   OPEN  (TRACE,(OUTPUT))
         WTO   '** SPY TRACE FACILITY NOW ACTIVE **'
         XR    2,2
         XR    3,3
         LA    4,TRCAREA
         MVC   0(8,4),WTO1+12
         LA    4,10(4)
TRACE2   MVC   0(4,4),0(5)        MOVE TOP RB ADDRESS
         L     9,0(5)
         MVC   4(24,4),0(9)           MOVE TOP RB
         MVC   28(64,4),48(5)        MOVE TCB SAVE AREA
         CLC   BUFSTOR,0(4)
         BNE   NOTSAME
         LA    6,1(,6)
         LA    2,1(,2)
         CH    2,=H'500'
         BL    STIME
         LA    3,1(,3)
         CH    3,=H'6'
         BL    DOUBL
         WTO   '** SPY - TRC CANCELLED **'
         LA    4,94(,4)
         B     CLOSTRC
DOUBL    WTO   '** SPY - TRC INTERVAL DOUBLED **'
         L     8,TINTVL
         SLL   8,1
         ST    8,TINTVL
         B     STIME
NOTSAME  MVC   BUFSTOR,0(4)
         XR    2,2
         LA    4,94(4)
STIME    STIMER WAIT,TUINTVL=TINTVL
         BCT   6,TRACE2
CLOSTRC  MVC   0(4,4),=X'FFFFFFFF'
         PUT   TRACE,TRCAREA
         CLOSE (TRACE,)
         FREEPOOL TRACE
         OPEN  (TRACEJCL,(OUTPUT))
         LA    6,6
         LA    7,JOBNAME
BLNKLP   CLI   0(7),C' '
         BE    BLNKOUT
         LA    7,1(7)
         BCT   6,BLNKLP
BLNKOUT  MVC   0(2,7),=C'LP'
         MVC   JCL+2(8),JOBNAME
         LA    6,6
         LA    7,JCL
LSTLOOP  MVC   OUTJCL(50),0(7)
         PUT   TRACEJCL,OUTJCL
         LA    7,50(7)
         BCT   6,LSTLOOP
         CLOSE  (TRACEJCL,)
         FREEPOOL TRACEJCL
         WTO   '** SPY TRACE FACILITY ENDED **'
         L     R0,=X'8000E000'
         MGCR  CCOMMAND
         MVC   CHECK,HLD         ***** JEFF WAS HERE *****
         LA    6,100
         B     TRCSUSP           ***** JEFF WAS HERE *****
PRIORITY LA    7,6
         CLI   GETBACK+4,C' '
         BE    NOPROB
         MVC   INSTR(4),INSTR1
         MVI  TABLE,C' '
         MVC  TABLE+1(8),TABLE
NOPROB   EQU   *
         LA    9,TRCAREA
         L     5,16
         L     5,244(5)
         LA    7,1                                               MOD1
PRLP     LA   5,4(5)
         BCT  7,PRLP
         LA   7,6
        XR   10,10
PRILOOP  L     6,0(5)
        IC   10,35(6)
        CVD  10,DOUBLE
        MVC  0(4,9),=X'40202120'
        ED   0(4,9),DOUBLE+6
       IC   10,152(6)
       CVD    10,DOUBLE
       MVC    4(4,9),=X'40202120'
       ED     4(4,9),DOUBLE+6
      CLC  1(3,9),=C'179'
      BH   NOTSCHED
      CLC  1(3,9),=C'101'
      BL   NOTSCHED
      MVC  1(7,9),=C'SPY SCH'
NOTSCHED L     8,12(6)
         MODESET KEY=ZERO
         MVC    8(8,9),0(8)
         MODESET KEY=NZERO
         LA     9,16(9)
INSTR  LA    5,4(5)
         BCT    7,PRILOOP
         LA     7,6
      WTO  '**        PRI  LIM  JOBNAME      **'
         LA     9,TRCAREA
         LA     10,TABLE
WTOLOOP  CLI    TABLE,C' '
       BE     NOPART
         MVC    PRIWTO+15(1),0(10)
         MVI    PRIWTO+14,C'P'
NOPART   MVC    PRIWTO+18(3),1(9)
         MVC    PRIWTO+23(3),5(9)
         MVC    PRIWTO+28(8),8(9)
PRIWTO   WTO    '**                                        **'
NOWTO   EQU    *
         LA     9,16(9)
         LA     10,1(10)
         BCT    7,WTOLOOP
         B      GETAWAY
DSPCH    LA    2,PACK+3
       CLI   GETBACK+5,X'04'
       BH    TESTHI
KILL   WTO   '** DSP - INVALID PARTITION NO  **'
      B    GETAWAY
TESTHI CLI   GETBACK+5,X'0C'
       BH     KILL
      LA     5,3
         LA    4,GETBACK+9
TRYCOMP  CLI   0(4),C' '
         BE    NOMOVE
         MVC   0(1,2),0(4)
         BCTR  2,0
NOMOVE   BCTR  4,0
         BCT   5,TRYCOMP
      CLC   PACK,=C'0000'
      BNE   CONTIN
      WTO   'PRIORITY PROBLEM'
      B     GETAWAY
CONTIN    PACK  DOUBLE+6(2),PACK+1(3)
        CVB   2,DOUBLE
        STC   2,PRI
       L     4,STORE      LOAD DEQ TCB
       CLI   PRI,X'BE'
       BNH   WINNING
        WTO   '** DSP - NEW PRIORITY GREATER THAN LIMIT **'
      B     GETAWAY
WINNING TM   203(4),X'80'
        BZ   NOTDDG
        WTO  '** DSP - PARTITION MEMBER OF DDG **'
        B    GETAWAY
NOTDDG  EQU  *
          L     5,P4STORE       LOAD P4 TCB
DEQCMP    CLC   117(3,5),=X'000000'  END OF TCB CHAIN?
          BE    NASTYEND             NASTY IF YES
          CLC   117(3,5),STORE+1     TCB POINT TO TCB TO BE DEQD
          BE    DEQIT                IF YES DEQ
          L     5,116(5)             LOAD NEXT TCB
          B     DEQCMP               TRY  AGAIN
DEQIT     L     4,STORE              LOAD TCB TO BE DEQD
         MODESET KEY=ZERO,MODE=SUP,ENABLE=NO
          MVC   116(4,5),116(4)      MOVE NEXT TCB POINTER
          L     5,P4STORE            LOAD P4 TCB
DEQCMP1   CLC   117(3,5),=X'000000'     END OF CHAIN?
         BE    DEQFIN1    END OF TCB CHAIN
         CLC   35(1,5),PRI  DSPTCH PRIORITY LOWER?
         BL    DEQFIN  IF YES REQUEUE TCB
         ST    5,LASTTCB  STORE TCB ADDRESS
         L     5,116(5)  LOAD NEXT TCB
         B     DEQCMP1   BRANCH BACK
DEQFIN   L     5,LASTTCB  LOAD PREVIOUS TCB ADDRESS
DEQFIN1 EQU   *
        MVC   35(1,4),PRI  MOVE NEW PRIORITY TO TCB
         MVC   116(4,4),116(5)  MOVE NEXT TCB POINTER TO DEQ TCB
         ST    4,116(5)  STORE DEQD TCB ADDRESS IN PREV TCB
        MODESET KEY=NZERO,MODE=PROB,ENABLE=YES
       WTO  'DSP - PRIORITY NOW CHANGED **'
         MVC  GETBACK(5),=C'PRI,A'
         B     PRIORITY          GET OUT
NASTYEND WTO    '** DSP - PARTITION NOT FOUND **'
         B    GETAWAY
SCHED   L     5,16
      WTO   '** SPY SCHEDULER NOW ACTIVE **'
        L     5,244(5)
        L     8,20(5)        LOAD 8 WITH P5 TCB
SCHEDULE    LR    5,8
SCHEDLP L     6,116(5)       LOAD 6 WITH NEXT TCB
        CLI   35(6),X'B4'
       BL    SCHED1
       LR    5,6
       B     SCHEDLP
SCHED1 MODESET MODE=SUP,KEY=ZERO,ENABLE=NO
      LR    7,6
       MVC     116(4,5),116(6)
       L       6,116(6)
DISLOOP  CLC     117(3,6),=X'000000'
       BE      SCHEND
       CLI     35(6),X'63'
     BL     SCHEDOUT
     ST     6,LASTTCB
     L      6,116(6)
     B     DISLOOP
SCHEDOUT L  6,LASTTCB
SCHEND   MVC  116(4,7),116(6)
         ST   7,116(6)
      MODESET MODE=PROB,KEY=NZERO,ENABLE=YES
   STIMER  WAIT,BINTVL=TENSECS
         ST    9,SAVER9               SAVE R9 FOR A WHILE
         L     9,PARMADR             LOAD UP PARM ADDRESS
   TM    SCHDFLAG,SCHDDIE
         L     9,SAVER9              RESOTRE R9
   BNO   SCHEDULE
   WTO   '** SPY SCHEDULER NOW CLOSING **'
         L     9,PARMADR            POINT R9 AT PARMS
         NI    SCHDFLAG,255-SCHDACTV  NO LONGER ACTIVE
   B     GETAWAY
TENSECS DC  F'1000'  TEN SECOND INTERVAL
LASTTCB  DC   F'0'
PACK    DC  CL4'0000'
PRI      DC   X'00'
         DS    0D
CCOMMAND DC    X'00500000'
KOMMAND  DC    CL80'S Z007TRCE   '
CHECK    DC    CL2' '
HLD      DC    XL2'0081'
REL      DC    XL2'8100'
SPYECB   DC    F'0'
BINTVL   DC    F'25'
TINTVL   DC    F'160'    ROUGHLY 1/250TH OF A SEC
BUFSTOR  DS    CL94
GETBACK  DC    CL7' '
STORE    DC    F'0'
NAME     DC    CL8' '
RELEASE  DC    CL9'RELEASED '
INSTR1  LA   5,116(6)
TCBLIST  DC    CL56' '
         LTORG
OUTJCL     DC    CL80' '
JCL      DC    CL50'//         JOB (0,0),''SPY TRACE'',MSGLEVEL=1' MOD1
         DC    CL50'//STEP1   EXEC PGM=TRACER'                   MOD1
         DC    CL50'//INMOVE    DD DSN=SYS1.OP.TRACE,DISP=SHR'   MOD1
         DC    CL50'//OUTMOVE   DD SYSOUT=A,'                    MOD1
         DC    CL50'//             DCB=(RECFM=FBA,LRECL=133,'    MOD1
         DC    CL50'//             BLKSIZE=1330)'                MOD1
JOBNAME   DC   CL8' '
TRACE    DCB   DDNAME=TRACE,DSORG=PS,MACRF=PM
TRACEJCL DCB   DDNAME=TRACEJCL,DSORG=PS,MACRF=PM
       DC   F'0'
DOUBLE  DC   D'0'
P4STORE  DC   F'0'
PARMADR DS    F              ADDRESS OF PARAMETERS
SAVER9  DS    F            R9 SAVEAREA
TABLE   DC   CL8'56789ABC'
TRCAREA  DC    190CL100' '
PARMSECT DSECT
         DS    AL2                     DUMMY LENGTH BYTES
PARM     DS    CL100                   COMMAND PARMS
COMMAND  DS    CL10                    COMMAND
         SPACE 1
FLAG1    DS    X'00'                   FLAGS BYTE 1
VMENVIR  EQU   X'80'                   ON IF RUNNING UNDER VM
VMSPY    EQU   X'40'                   ON IF VM SPY IS LIVE
RECOVER  EQU   X'20'                   ON IF REENTRY IMPLIES RESTART
MODIFY   EQU   X'10'                   ON IF MODIFY USED ON LAST CMMD
VMPAGE   EQU   X'08'                   ON IF NONPAGING VM ENVIRONMENT
DDGACTV  EQU   X'04'                   ON IF DYNAMIC DISPATCHING ACTIVE
TSLACTV  EQU   X'02'                   ON IF TIMESLICING ACTIVE
         DS    XL3'00'                 ** PADDING **
         SPACE 1
ATCBTABL DS    A                       ADDRESS OF TCB TABLE
ADISKS   DS    A                       ADDRESS OF DISKTABL
TCBBAR   DS    F'0'                    A(A(LAST NON-MOVABLE TCB))
PARMECB  DS    F'0'                    PARAMETER LOCKING ECB
         SPACE 1
** SCHEDULER FLAGS **
         SPACE 1
SCHDFLAG DS    X'00'
SCHDACTV EQU   X'80'                   ON IF SCHEDULER ACTIVE
SCHDDIE  EQU   X'40'                   TURN ON TO KILL SCHEDULER
         DS    XL3'00'                 ** PADDING **
ENDPARM  EQU   *
           END
