AMM.     TITLE 'RT5033M - DATA SET NAME DEQ/ENQ ROUTINE - A.M.MORRISH.'
RT5033M  CSECT
***********************************************************************
*                                                                     *
*  ANY JOB THAT REFERENCES A NON-TEMPORARY DATA SET CAUSES AN ENQ TO  *
* BE ISSUED ON THE DATA SET NAME THAT LASTS FOR THE LENGTH OF THE     *
* JOB. UNLESS THE DATA SET IS REFERRED TO AS NEW, OLD OR MOD, THE ENQ *
* IS ISSUED TO SHARE THE DATA SET.                                    *
*                                                                     *
*  THIS PROGRAM MODIFIES THE ENQ LIST ON DATA SET NAMES FOR THE JOB   *
* IN WHICH THE PROGRAM IS EXECUTING. THE USER CAN CONTROL THE PROGRAM *
* EXECUTION IN TWO WAYS :                                             *
*                                                                     *
*   1.   BY SPECIFYING THE MODIFICATION IN THE PARAMETER LIST. THIS   *
*        CHANGE IS MADE TO ALL DATA SETS DESCRIBED BY DD STATEMENTS   *
*        IN THE JOB STEP EXCEPT THOSE DEFINED WITH RESERVED NAMES AND *
*        TEMPORARY DATA SETS. THE RESERVED NAMES ARE THOSE THAT DEFINE*
*        THE CONTROL AND LISTING DATA SETS AND THE FOLLOWING :        *
*                                                                     *
*           SYSABEND,SYSUDUMP,PGM=*.DD,JOBLIB,STEPLIB AND SNAPOUT.    *
*                                                                     *
*   2.   BY SPECIFYING THE MODIFICATION IN CONTROL STATEMENTS IN A    *
*        CONTROL DATA SET. THIS CHANGE IS MADE ONLY TO THE DATA SET   *
*        NAMES SPECIFIED IN THE CONTROL STATEMENT IN WHICH THE        *
*        OPERATION IS SPECIFIED.                                      *
*                                                                     *
*                                                                     *
*        THE MODIFICATION IS SPECIFIED BY ONE OF THE FOLLOWING        *
* CONTROL CHARACTERS :                                                *
*                                                                     *
*   D    DEQUEUE THE DATA SET NAME FROM THE LIST.                     *
*                                                                     *
*   E    ENQUEUE EXCLUSIVELY ON THE DATA SET NAME IF IT IS AVAILABLE. *
*        IF THE RESOURCE IS NOT AVAILABLE THEN GENERATE A RETURN      *
*        CODE. THIS FUNCTION MAY BE RE-ITERATED BY CODING 'E=N' WHERE *
*        'N' IS THE NUMBER OF MINUTES THAT THE PROGRAM IS TO WAIT FOR *
*        THE RESOURCE TO BECOME AVAILABLE.                            *
*                                                                     *
*   S    ENQUEUE ON THE DATA SET NAME SHARING WITH OTHER USERS WHO DO *
*        NOT WANT EXCLUSIVE USE IF THE RESOURCE IS AVAILABLE. IF THE  *
*        RESOURCE IS NOT AVAILABLE THEN GENERATE A RETURN CODE. THIS  *
*        FUNCTION MAY BE RE-ITERATED BY CODING 'S=N' WHERE 'N' IS THE *
*        NUMBER OF MINUTES THAT THE PROGRAM IS TO WAIT FOR THE        *
*        RESOURCE TO BECOME AVAILABLE.                                *
*                                                                     *
*   X    ENQUEUE EXCLUSIVELY ON THE DATA SET NAME, WAITING IF IT IS   *
*        NOT IMMEDIATELY AVAILABLE.                                   *
*                                                                     *
*                                                                     *
*        WHEN A FUNCTION IS RE-ITERATED (E OR S) THE ENQ IS RETRIED   *
* EVERY 15 SECONDS FOR THE TIME SPECIFIED. IF THE RESOURCE DOES NOT   *
* BECOME AVAILABLE A RETURN CODE IS GENERATED.                        *
*                                                                     *
*        WHEN THE PROGRAM ENDS, THE RETURN CODE PRODUCED IS THE       *
* HIGHEST CODE DEVELOPED IN THE DEQ AND ENQ MACRO-INSTRUCTIONS.       *
*                                                                     *
*        A LISTING OF THE ACTIONS TAKEN IS PRODUCED IN AN OPTIONAL    *
* OUTPUT DATA SET.                                                    *
*                                                                     *
*                                                                     *
* EXAMPLES:                                                           *
*                                                                     *
*        A USER SOURCE LIBRARY IS TO BE UPDATED AND THE LIBRARY IS TO *
* BE USED AS INPUT TO A COMPILE-LINK-GO TEST WHICH MAY RUN FOR SUCH   *
* TIME AS TO MAKE IT INCONVENIENT TO USE 'DISP=OLD' ON THE LIBRARY,   *
* AND THUS LOCK OUT OTHER USERS.                                      *
*                                                                     *
*        //JOBNAME JOB                                                *
*        //STEPNM EXEC PGM=IEBUPDTE                                   *
*        //SYSPRINT DD SYSOUT=A                                       *
*        //SYSUT1   DD DISP=OLD,DSNAME=USER.SORSLIB                   *
*        //SYSUT2   DD DISP=OLD,DSNAME=USER.SORSLIB                   *
*        //SYSIN    DD *                                              *
*                                                                     *
*          ....CHANGE DATA                                            *
*                                                                     *
*        /*                                                           *
*        //STEPNM EXEC PGM=RT5033M,PARM=S                             *
*        //D        DD DISP=OLD,DSNAME=USER.SORSLIB                   *
*        //STEPNM EXEC ASMFCLG                                        *
*        //SYSIN    DD DISP=OLD,DSNAME=USER.SORSLIB(MEMBER)           *
*        //                                                           *
*                                                                     *
*                                                                     *
*        A TEST RUN IS TO WRITE THE RESULTS TO A DATA SET, ADDING THE *
* RESULTS ON AT THE END OF EXISTING DATA. THE USER DOES NOT WANT THE  *
* DATA SET NAME TO BE ENQUEUED ON OTHER THAN IN THE STEP THAT WRITES  *
* OUT THE TEST DATA.                                                  *
*                                                                     *
*        //JOBNAME JOB                                                *
*        //STEPNM EXEC PGM=RT5033M,PARM=D                             *
*        //D        DD DISP=SHR,DSNAME=TEST.DATA                      *
*        //STEPNM EXEC .....                                          *
*                                                                     *
*        .... TEST RUN                                                *
*                                                                     *
*        //STEPNM EXEC PGM=RT5033M,PARM=X                             *
*        //D        DD DISP=SHR,DSNAME=TEST.DATA                      *
*        //STEPNM EXEC ........                                       *
*        //OUTPUT   DD DISP=MOD,DSNAME=TEST.DATA                      *
*        //                                                           *
*                                                                     *
*                                                                     *
***********************************************************************
         EJECT                                                        *
* REGISTER USAGE
         SPACE 1
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2
RCVT     EQU   3                   CVT POINTER.
RTCB     EQU   4                   POINTER TO INITIATOR TCB.        MVT
RRB      EQU   5                   POINTER TO INITIATOR TOP RB.     MVT
RECB     EQU   6                   POINTER TO INITIATOR ECB.        MVT
RECBLIST EQU   7                   POINTER TO INITIATOR ECB LIST.   MVT
RTIOT    EQU   8                   POINTER TO TASK I/O TABLE.
R9       EQU   9                   RESIDUAL RETRY COUNT.
R10      EQU   10                  LINK REGISTER.
RENQ     EQU   11                  POINTER TO ENQ LIST.
RBASE    EQU   12                  BASE REGISTER.
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESS / RETURN CODE.
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
         EJECT                                                        *
         BEGIN (SAVE,,SAVE),BASE=RBASE  INITIALISE & DEFINE BASE REGS.
         SPACE 1                                                      *
*                                                                     *
*        VALIDATE PARAMETER LIST AND SCAN FOR DD-NAME OVER-RIDES.     *
*                                                                     *
         SPACE 1                                                      *
         LR    R2,R1               SAVE ADDRESS OF PARAMETER LIST.
         SPIE  MF=(E,SPIEL)        SET SPIE TO CHECK PARAMETER VALIDITY
         ST    R1,SPIESAVE         STORE OLD SPIE POINTER.
         L     R1,0(R2)            SET GR1 -> PARAMETER LIST.
         LH    R14,0(R1)           SET GR14 -> PARAMETER LIST.
         LA    R14,1(R14)          INCREMENT GR14 FOR ADDRESSABILITY CK
         EX    R14,PARMOC          CHECK FOR PARAMETER LIST ADDRESSABLE
         TM    0(R2),X'80'         ARE DD-NAME OVER-RIDES SPECIFIED ?
         BO    PARMA               IF NOT THEN LEAVE.
         L     R1,4(R2)            SET GR1 -> DD-NAME OVER-RIDE LIST.
         LH    R14,0(R1)           SET GR14 = LENGTH OF OVER-RIDES.
         LA    R14,1(R14)          INCREMENT GR14 FOR ADDRESSABILITY OK
         EX    R14,PARMOC          CHECK FOR OVER-RIDES
         LA    R15,41              SET GR15 = 41
         CLR   R14,R15             COMPARE FOR SYSIN OVER-RIDE PRESENT.
         BL    PARMA               IF NOT THEN NO OVER-RIDES.
         OC    34(8,R1),34(R1)     TEST FOR NULL
         BZ    *+16                IF NULL THEN LEAVE.
         MVC   IN+40(8),34(R1)     STORE OVER-RIDE NAME IN DCB.
         MVC   INNAME(8),34(R1)    STORE OVER-RIDE NAME FOR SCAN.
         LA    R15,49              SET GR15 = 49.
         CLR   R14,R15             COMPARE FOR SYSPRINT OVER-RIDE PRSNT
         BL    PARMA               IF NOT THEN NO OVER-RIDES.
         OC    42(8,R1),42(R1)     TEST FOR NULL.
         BZ    PARMA               IF NULL THEN LEAVE.
         MVC   PRT+40(8),42(R1)    STORE OVER-RIDE NAME IN DCB.
         MVC   PRTNAME(8),42(R1)   STORE OVER-RIDE NAME FOR SCAN.
PARMA    L     R1,SPIESAVE         SET GR1 -> OLD SPIE.
         SPIE  MF=(E,(1))          RESTORE OLD SPIE.
         SPACE 1                                                      *
*                                                                     *
*        OPEN INPUT AND PRINT DATA SETS IF PRESENT.                   *
*                                                                     *
         SPACE 1                                                      *
         L     RCVT,16             SET GR3 -> CVT.
         L     R1,0(RCVT)          SET GR1 -> TCB POINTERS.
         L     RECB,4(R1)          SET GR6 -> CURRENT TCB.
         L     RTIOT,12(RECB)      SET GR8 -> TIOT.
         LA    RTIOT,24(RTIOT)     SET GR8 -> FIRST DD ENTRY.
         LR    R15,RTIOT           SET GR15 -> FIRST DD ENTRY.
         SR    R14,R14             SET GR14 = 0.
OPENLOOP IC    R14,0(R15)          SET GR14 = LENGTH OF DD ENTRY.
         CLC   PRTNAME,4(R15)      IS DATA DEFINITION FOR OUTPUT ?
         BNE   *+8                 IF NOT THEN LEAVE.
         OI    SW,X'80'            SET OUTPUT DATA SET PRESENT.
         CLC   INNAME,4(R15)       IS DATA DEFINITION FOR CONTROL ?
         BNE   *+8                 IF NOT THEN LEAVE.
         OI    SW,X'40'            SET CONTROL DATA SET PRESENT.
         BXH   R15,R14,OPENLOOP    LOOP UNTIL ALL TESTED.
         LA    R1,OPENL            SET GR1 -> OPEN LIST.
         TM    SW,X'C0'            TEST FOR OUTPUT/CONTROL SPECIFIED.
         BZ    OPENEND             IF NEITHER SPECIFIED THEN LEAVE.
         BO    OPENUP              IF BOTH SPECIFIED THEN GO TO OPEN.
         OI    OPENL,X'80'         SET END OF LIST.
         TM    SW,X'80'            IS OUTPUT DATA SET SPECIFIED ?
         BO    OPENUP              IF SO THEN GO TO OPEN.
         LA    R1,4(R1)            INCREMENT GR1 TO OPEN CONTROL.
OPENUP   OPEN  MF=(E,(1))          OPEN DATA SET(S).
OPENEND  NI    SW,X'3F'            CLEAR SWITCHES.
         SPACE 1                                                      *
*                                                                     *
*        TEST FOR MVT SYSTEM.                                         *
*                                                                     *
         SPACE 1                                                      *
         TM    116(RCVT),X'10'     IS OPERATING SYSTEM MVT OR MP/65 ?
         BZ    NOTMVT1             IF NOT THEN NO SET-UP.
         SPACE 1
***********************************************************************
*                                                                     *
*  AS THE OPERATING SYSTEM IS MVT I MUST ISSUE DEQ/ENQ IN THE PARENT  *
* INITIATOR TASK. THE FOLLOWING CODE FINDS THE TCB AND RB OF THE      *
* INITIATOR AND SAVES THE TASK'S REGISTERS AND RESUME PSW TO RECOVER  *
* AFTER MY CORRUPTION.                                                *
*                                                                     *
***********************************************************************
         SPACE 1
MVTLOOP1 L     RECBLIST,132(RECB)  SET GR7 -> ORIGINATING TASK.TCB.
         LTR   RECBLIST,RECBLIST   TEST FOR MASTER SCHEDULER TASK.
         BZ    MVTCBFND            IF SO THEN GR4 -> INITIATOR TCB.
         STM   RRB,RECBLIST,MVTSAVE     STORE REGISTERS 5-7 FOR RELOAD.
         LM    RTCB,RECB,MVTSAVE   LOAD REGISTERS 4-6 FOR RECYCLE.
         B     MVTLOOP1            LOOP UNTIL GR6 -> MASTER SCHEDULER.
MVTCBFND L     RRB,0(RTCB)         SET GR5 -> INITIATOR TASK TOP RB.
         MVC   MVTSAVE(64),48(RTCB)     SAVE INITIATOR TASK REGISTERS.
         MVC   MVTPSW(8),16(RRB)   SAVE INITIATOR TASK RESUME PSW.
         L     RECBLIST,52(RTCB)   SET GR7 -> INITIATOR ECB LIST.
         LPR   RECBLIST,RECBLIST   SET GR7 POSITIVE.
         L     RECB,4(RECBLIST)    SET GR6 -> NORMAL COMPLETION ECB.
         SPACE 1                                                      *
*                                                                     *
*        SET UP DEQ/ENQ LIST.                                         *
*                                                                     *
         SPACE 1                                                      *
NOTMVT1  L     R1,0(R2)            SET GR1 -> PARAMETER LIST.
DEQLOOP  L     R15,NEXTENQ         SET GR15 -> NEXT ENQUEUE ROUTINE.
         BALR  R10,R15             LINK TO SET UP ENQUEUE LIST.
         SPACE 1                                                      *
*                                                                     *
*        ISSUE DEQ/ENQ                                                *
*                                                                     *
         SPACE 1                                                      *
         L     R9,ENQCOUNT         SET GR9 = NUMBER OF RETRIES ALLOWED.
ENQLOOP  TM    116(RCVT),X'10'     IS OPERATING SYSTEM MVT OR MP/65 ?
         BZ    NOTMVT2             IF NOT THEN DEQ/ENQ UNDER OWN TCB.
         SPACE 1                                                      *
*                                                                     *
*        MODIFY AND POST INITIATOR TASK TO PERFORM DEQ/ENQ            *
*                                                                     *
         SPACE 1                                                      *
         SPMODE PROB,0,MF=(E,SPML) SET PROTECT KEY ZERO.
         LA    R0,INITRTN          SET GR0 -> INITIATOR TASK ROUTINE.
         ST    R0,20(RRB)          STORE NEW RH OF RESUME PSW.
         STM   R2,R13,56(RTCB)     STORE REGISTERS FOR INITIATOR START.
         POST  (RECB)              POST INITIATOR TASK.
         WAIT  1,ECB=ECB           WAIT FOR RETURN OF POST.
         SPMODE PROB,*,MF=(E,SPML) RESTORE USER PROTECT KEY.
         B     *+8                 BRANCH AROUND MFT LINK.
         SPACE 1                                                      *
*                                                                     *
*        ISSUE DEQ/ENQ FOR MFT OR PCP.                                *
*                                                                     *
         SPACE 1                                                      *
NOTMVT2  BAL   R10,DEQENQ          LINK TO ISSUE DEQ/ENQ.
         SPACE 1                                                      *
*                                                                     *
*        TEST COMPLETION.                                             *
*                                                                     *
         SPACE 1                                                      *
         C     R9,ENQCOUNT         IS THIS A RETRY ?
         BNE   NODEQMSG            IF NOT THEN NO DEQ MESSAGE.
         MVC   MSGDEQ(L'MSGDQG),MSGDQG  STORE DEQUEUE SUCCESSFUL MSG.
         CLI   DEQL+3,0            WAS DEQUEUE COMPLETION NORMAL ?
         BE    NODEQMSG            IF SO THEN MESSAGE IS SET UP.
         MVC   MSGDEQ,MSGDEQ-1     CLEAR MESSAGE AREA.
         MVC   MSGDEQ(L'MSGDQB),MSGDQB  STORE DEQUEUE FAILED MESSAGE.
NODEQMSG LTR   RENQ,RENQ           IS AN ENQ REQUESTED ?
         BZ    NOENQMSG            IF NOT THEN GO TO WRITE RESULTS.
         MVC   MSGENQ(L'MSGNQG),MSGNQG  STORE ENQUEUE SUCCESSFUL MSG.
         CLI   3(RENQ),0           DID ENQUEUE SUCCEED ?
         BE    NOENQMSG            IF SO THEN GO TO WRITE RESULTS.
         BCT   R9,ENQWAIT          TEST FOR ITERATION. IF SO GO TO WAIT
         MVC   MSGENQ,MSGENQ-1     CLEAR MESSAGE AREA.
         MVC   MSGENQ(L'MSGNQB),MSGNQB  STORE ENQUEUE FAILED MESSAGE,
         IC    R9,3(RENQ)          SET GR9 = FINAL CODE.
         C     R9,RC               COMPARE WITH HIGHEST SO FAR.
         BNH   NOENQMSG            IF NOT HIGHER TYEN LEAVE.
         ST    R9,RC               STORE NEW HIGHEST RETURN CODE.
NOENQMSG LA    R2,MSGLINE          SET GR2 -> MESSAGE LINE.
         LA    R1,MSGEND           SET GR1 -> END OF MESSAGE.
         LTR   RENQ,RENQ           IS AN ENQUEUE REQUESTED ?
         BNZ   *+8                 IF SO THEN LEAVE.
         LA    R1,MSGENQ-6         SET GR1 -> END OF DEQUEUE MESSAGE.
         CLI   0(R1),C' '          IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END FOUND.
         BCT   R1,*-8              LOOP UNTIL END FOUND.
         LA    R1,1(R1)            INCREMENT GR1 FOR COUNT.
         SR    R1,R2               SET GR1 = LENGTH OF MESSAGE.
         STH   R1,MSGLINE          STORE LENGTH OF MESSAGE.
         BAL   R10,PUTSUB          LINK TO WRITE MESSAGE.
         MVC   MSGDEQ,MSGDEQ-1     CLEAR DEQUEUE MESSAGE.
         MVC   MSGENQ,MSGENQ-1     CLEAR ENQUEUE MESSAGE.
         B     DEQLOOP             GO TO SET UP NEXT DEQ/END.
         SPACE 1                                                      *
ENQWAIT  STIMER WAIT,TUINTVL=W15   WAIT FOR 15 SECONDS.
         B     ENQLOOP             GO TO RETEST ENQUEUE.
         SPACE 1                                                      *
*                                                                     *
*        INITIATOR ROUTINE TO ISSUE DEQ/ENQ MACRO-INSTRUCTIONS.       *
*                                                                     *
         SPACE 1                                                      *
INITRTN  MVI   0(RECB),0           CLEAR ECB.FOR INITIATOR.
         BAL   R10,DEQENQ          LINK TO ISSUE DEQ/ENQ MALROS.
         POST  ECB                 POST ECB FOR TASK.
         LR    R1,RECBLIST         SET GR1 -> ECBLIST.
INITLOOP L     R15,0(R1)           SET GR15 -> ECB.
         NI    0(R15),X'7F'        CLEAR WAIT BIT FROM ECB.
         LA    R1,4(R1)            INCREMENT GR1 FOR NEXT.
         LTR   R15,R15             TEST FOR END OF LIST.
         BNM   INITLOOP            IF NOT END THEN GO TO TEST NEXT.
         WAIT  1,ECBLIST=(RECBLIST)     WAIT FOR COMPLETION.
*                                                                     *
*        IF THE WAIT IS SATISFIED THEN OPERATOR HAS CANCELLED THE JOB.*
*                                                                     *
         SPMODE SUPV,0,MF=(E,SPML) PUT INITIATOR INTO SUPERVISORY MODE.
         SSM   *+1                 PROHIBIT ALL INTERRUPTS.
         MVC   32(8),MVTPSW        STORE RESUME PSW AT VALID ADDRESS.
         LM    R0,R15,MVTSAVE      RESTORE ALL INITIATOR REGISTERS.
         LPSW  32                  RETURN TO INITIATOR TO CANCEL JOB.
         SPACE 1                                                      *
*                                                                     *
*        ISSUE DEQ AND ENQ MACRO-INSTRUCTIONS.                        *
*                                                                     *
         SPACE 1                                                      *
DEQENQ   DEQ   MF=(E,DEQL)         DEQUEUE ON DATA SET NAME.
         LTR   RENQ,RENQ           IS AN ENQUEUE REQUIRED ?
         BCR   8,R10               IF NOT THEN RETURN.
         ENQ   MF=(E,(RENQ))       ENQUEUE ON DATA SET NAME.
         BR    R10                 RETURN.
         SPACE 1                                                      *
*                                                                     *
*        SUB-ROUTINE TO WRITE MESSAGES TO OUTPUT.                     *
*                                                                     *
         SPACE 1                                                      *
PUTSUB   TM    PRT+48,X'10'        IS OUTPUT DATA SET OPEN ?
         BCR   8,R10               IF NOT THEN RETURN.
         LA    R0,3                SET GR0 = 3.
         CLI   4(R2),C'-'          IS CONTROL SPACE 3 ?
         BE    PUTSUBA             IF SO THEN USE.
         BCTR  R0,R0               SET GR0 = 2.
         CLI   4(R2),C'0'          IS CONTROL SPACE 2 ?
         BE    PUTSUBA             IF SO THEN USE.
         BCTR  R0,R0               SET GR0 = 1.
         MVI   4(R2),C' '          STORE CONTROL SPACE 1.
PUTSUBA  L     R1,LINECT           SET GR1 = RESIDUAL LINE COUNT.
         SR    R1,R0               SET GR1 = NEW RESIDUAL LINE COUNT.
         BP    PUTSUBB             IF PLUS THEN GO TO STORE.
         PUT   PRT,HDG             WRITE HEADING.
         MVC   DW(1),4(R2)         SAVE CONTROL CHARACTER ON MESSAGE.
         MVI   4(R2),C'0'          SET CONTROL SPACE 2.
         PUT   PRT,(R2)            WRITE MESSAGE.
         MVC   4(1,R2),DW          RESTORE CONTROL ON MESSAGE.
         MVI   LINECT+L'LINECT-1,56     STORE NEW RESIDUAL LINE COUNT.
         BR    R10                 RETURN.
PUTSUBB  ST    R1,LINECT           STORE NEW RESIDUAL LINE COUNT.
         PUT   PRT,(R2)            WRITE MESSAGE.
         BR    R10                 RETURN.
         SPACE 1                                                      *
         EJECT                                                        *
***********************************************************************
*                                                                     *
*        DEQ/ENQ SET-UP ROUTINE.                                      *
*                                                                     *
*  THE FOLLOWING CODE IS ENTERED WHEN THE NEXT USER-SPECIFIED DEQ/ENQ *
* IS REQUIRED. THE POINT AT WHICH ENTRY IS MADE IS DETERMINED BY THE  *
* ROUTINE ITSELF BEFORE RETURNING TO THE MAIN LOGIC. THE FOLLOWING    *
* ENTRY POINTS ARE USED :                                             *
*                                                                     *
*        ENQ1  INITIAL ENTRY - VERIFY PARAMETER LIST AND START SCAN   *
*              OF TIOT.                                               *
*                                                                     *
*        ENQ2  CONTINUE SCAN OF TIOT.                                 *
*                                                                     *
*        ENQ3  READ AND VERIFY A CONTROL STATEMENT AND START CONTROL  *
*              STATEMENT SCAN.                                        *
*                                                                     *
*        ENQ4  CONTINUE CONTROL STATEMENT SCAN.                       *
*                                                                     *
***********************************************************************
         SPACE 1                                                      *
ENQ1     LH    R14,0(R1)           SET GR14 = LENGTH OF PARAMETERS.
         LTR   R14,R14             TEST FOR PARAMETERS PRESENT.
         BNP   ENQ3                IF NOT THEN GO TO PROCESS CONTROL.
         LA    R0,L'INCARD         SET GR0 = LENGTH OF CONTROL AREA.
         CLR   R14,R0              COMPARE FOR FIT.
         BNH   *+6                 IF FIT THEN USE
         LR    R14,R0              TRUNCATE IF NECESSARY.
         BCTR  R14,R0              DECREMENT GR14 FOR EXECUTE.
         EX    R14,ENQMOVE1        MOVE DATA TO LISTING AREA.
         LA    R14,INCARD(R14)     SET GR14 -> END OF PARAMETERS.
         CLI   0(R14),C' '         IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END FOUND.
         BCT   R14,*-8             LOOP UNTIL END FOUND.
         LA    R0,OUTCARD-1        SET GR0 FOR SUBTRACT.
         SR    R14,R0              SET GR14 = LENGTH OF LINE.
         STH   R14,OUTCARD         STORE LENGTH.
         CLI   OUTCARD+1,6         IS LENGTH LESS THAN 6 ?
         BL    ENQ3                IF SO THEN IGNORE.
         LA    R2,OUTCARD          SET GR2 -> MESSAGE.
         LR    R9,R10              SAVE LINK REGISTER.
         BAL   R10,PUTSUB          LINK TO WRITE MESSAGE.
         LR    R10,R9              RESTORE LINK REGISTER.
         BAL   R14,ENQSUB1         LINK TO SET UP DEQ/ENQ PARAMETERS.
ENQ1A    LA    R14,8               SET GR14 = 8.
         LA    R15,PRTNAME         SET GR15 -> END OF RESERVED NAME LST
         LA    R1,INNAME           SET GR1 -> START OF RESERVED NAMES.
         CLC   0(8,R1),4(RTIOT)    COMPARE FOR RESERVED NAME.
         BE    ENQ2                IF FOUND THEN SKIP THIS ENTRY.
         BXLE  R1,R14,*-10         LOOP UNTIL FOUND OR LIST EXHAUSTED.
         MVC   DCB+40(8),4(RTIOT)  STORE NAME IN DCB.
         RDJFCB MF=(E,RDJFCBL)     READ JOB FILE CONTROL BLOCK.
         TM    JFCB+87,X'01'       IS IT A TEMPORARY DATA SET ?
         BO    ENQ2                IF SO THEN SKIP THIS ENTRY.
         LA    R1,JFCB+1           SET GR1 -> DATA SET NAME.
         LA    R14,1               SET GR14 = 1.
         LA    R15,JFCB+43         SET GR15 TO STOP SCAN.
         CLI   0(R1),C' '          IS CHARACTER BLANK ?
         BE    *+8                 IF SO THEN END FOUND.
         BXLE  R1,R14,*-8          LOOP UNTIL END FOUND.
         LA    R0,JFCB             SET GR0 -> DATA SET NAME.
         TM    JFCB+86,X'02'       IS DATA SET A GDG MEMBER ?
         BZ    *+8                 IF NOT THEN LEAVE.
         LA    R0,JFCB+9           SET GR0 FOR SUBTRACT.
         SR    R1,R0               SET GR1 = LENGTH FOR ENQUEUE.
         STC   R1,DEQL+1           STORE LENGTH IN DEQUEUE LIST.
         LTR   RENQ,RENQ           IS AN ENQUEUE REQUIRED ?
         BZ    *+8                 IF NOT THEN LEAVE.
         STC   R1,1(RENQ)          STORE LENGTH IN ENQUEUE LIST.
         BAL   R15,ENQEXIT         GO TO RETURN TO MAIN LOGIC.
         SPACE 3                                                      *
ENQ2     SR    R0,R0               SET GR0 = 0
         IC    R0,0(RTIOT)         SET GR0 = LENGTH OF TIOT ENTRY.
         AR    RTIOT,R0            SET GR8 -> NEXT TIOT ENTRY.
         IC    R0,0(RTIOT)         SET GR0 = LENGTH OF NEXT ENTRY.
         LTR   R0,R0               IS IT END OF TIOT ?
         BNZ   ENQ1A               IF NOT THEN GO TO CONTINUE SCAN.
         SPACE 3                                                      *
ENQ3     TM    IN+48,X'10'         IS CONTROL DATA SET OPEN ?
         BZ    ENDUP               IF NOT THEN END.
         GET   IN,INCARD           READ A CONTROL CARD.
         LA    R14,INCARD+L'INCARD-1    SET GR14 -> END OF CARD.
         CLI   0(R14),C' '         IS CHARACTER BLANK ?
         BNE   *+8                 IF NOT THEN END FOUND.
         BCT   R14,*-8             LOOP UNTIL END FOUND.
         LA    R0,OUTCARD-1        SET GR0 FOR SUBTRACT.
         SR    R14,R0              SET GR14 = LENGTH OF LINE.
         STH   R14,OUTCARD         STORE LENGTH.
         CLI   OUTCARD+1,6         IS LENGTH LESS THAN 6 ?
         BL    ENQ3                IF SO THEN GO TO READ NEXT CARD.
         LA    R2,OUTCARD          SET GR2 -> MESSAGE.
         LR    R9,R10              SAVE LINK REGISTER.
         BAL   R10,PUTSUB          LINK TO WRITE MESSAGE.
         LR    R10,R9              RESTORE LINK REGISTER.
         BAL   R14,ENQSUB1         LINK TO SET UP DEQ/ENQ PARAMETERS.
         LA    RTIOT,INCARD+1      SET GR8 -> SECOND CHARACTER.
         LA    R14,1               SET GR14 = 1.
         LA    R15,INCARD+L'INCARD-1    SET GR15 TO STOP SCAN.
         CLI   0(RTIOT),C' '       IS CHARACTER BLANK ?
         BE    *+12                IF SO THEN END OF OPERATOR FOUND
         BXLE  RTIOT,R14,*-8       LOOP UNTIL FOUND.
         B     ENQ3                IF NOT FOUND THEN IGNORE CONTROL.
         CLI   0(RTIOT),C' '       IS CHARACTER BLANK ?
         BNE   ENQ4                IF NOT THEN OPERANDS FOUND.
         BXLE  RTIOT,R14,*-8       LOOP UNTIL FOUND.
         B     ENQ3                IF NOT FOUND THEN IGNORE CONTROL.
         SPACE 3                                                      *
ENQ4     LA    R14,1               SET GR14 = 1.
         LA    R15,INCARD+L'INCARD-1    SET GR15 TO STOP SCAN.
         LR    R0,RTIOT            SAVE START ADDRESS OF NAME.
         CLI   0(RTIOT),C','       IS A COMMA DELIMITER FOUND ?
         BE    ENQ4A               IF SO THEN GO TO SET UP ENQUEUE.
         CLI   0(RTIOT),C' '       IS A BLANK DELIMITER FOUND ?
         BE    *+8                 IF SO THEN GO TO SET UP ENQUEUE.
         BXLE  RTIOT,R14,*-16      LOOP UNTIL DELIMITER OR END FOUND.
         LR    R1,RTIOT            SAVE ADDRESS FOR SUBTRACT.
         LA    R15,ENQ3            SET GR15 FOR RETURN.
         B     ENQ4B               GO TO SET UP DEQ/ENQ.
ENQ4A    LR    R1,RTIOT            SAVE ADDRESS FOR SUBTRACT.
         LA    RTIOT,1(RTIOT)      INCREMENT GR8 FOR NEXT ENTRY.
         LA    R15,ENQ4            SET GR15 FOR RETURN.
         CLI   0(RTIOT),C' '       IS NEXT ENTRY NULL ?
         BNE   ENQ4B               IF NOT THEN RETURN VALID.
         LA    R15,ENQ3            SET GR15 TO FORCE A READ AT NEXT NTY
ENQ4B    SR    R1,R0               SET GR1 = LENGTH OF DATA SET NAME.
         BNP   ENQ3                IF ZERO THEN GO TO READ NEXT CONTROL
         LR    R14,R0              SET GR14 -> DATA SET NAME.
         LA    R0,44               SET GR0 = 44.
         CLR   R1,R0               COMPARE FOR VALID LENGTH.
         BH    ENQ3                IF HIGH THEN GO TO READ NEXT CONTROL
         MVI   JFCB,C' '           BLANK FIRST BYTE OF JFCB.
         MVC   JFCB+1(43),JFCB     CLEAR DATA SET NAME.
         STC   R1,DEQL+1           STORE LENGTH OF NAME IN DEQUEUE LIST
         LTR   RENQ,RENQ           IS AN ENQUEUE REQUIRED ?
         BZ    *+8                 IF NOT THEN LEAVE.
         STC   R1,1(RENQ)          STORE LENGTH OF NAME IN DEQUEUE LIST
         BCTR  R1,R0               DECREMENT GR1 FOR EXECUTE.
         EX    R1,ENQMOVE2         MOVE DATA SET NAME TO JFCB NAME AREA
         SPACE 3                                                      *
ENQEXIT  ST    R15,NEXTENQ         STORE ADDRESS OF NEXT ENTRY.
         MVC   MSGNAME,JFCB        STORE NAME IN MESSAGE LINE.
         BR    R10                 RETURN.
         SPACE 3                                                      *
ENQSUB1  SR    RENQ,RENQ           SET GR11 = 0.
         CLI   INCARD,C'D'         IS DEQUEUE REQUESTED ?
         BE    ENQSUB1A            IF SO THEN GO TO STORE DEFAULT COUNT
         LA    RENQ,ENQX           SET GR11 -> ENQUEUE FOR 'X'
         CLI   INCARD,C'X'         IS EXCLUSIVE WAIT ENQUEUE REQUESTED?
         BE    ENQSUB1A            IF SO THEN GO TO STORE DEFAULT COUNT
         LA    RENQ,ENQE           SET GR11 -> ENQUEUE FOR 'E'
         CLI   INCARD,C'E'         IS EXCLUSIVE TEST ENQUEUE REQUESTED?
         BE    ENQSUB1B            IF SO THEN GO TO CHECK WAIT TIME.
         CLI   INCARD,C'S'         IS SHARED ENQUEUE REQUESTED ?
         BNE   ENQ3                IF NOT THEN GO TO READ NEXT CONTROL.
         LA    RENQ,ENQS           SET GR11 -> ENQUEUE FOR 'S'
ENQSUB1B CLI   INCARD+1,C' '       IS A NULL TIME SPECIFIED ?
         BE    ENQSUB1A            IF SO THEN GO TO USE DEFAULT.
         LA    R0,1                SET GR0 = 1.
         LA    R1,INCARD+6         SET GR1 TO STOP SCAN.
         LA    R15,INCARD+2        SET GR15 TO START SCAN.
         TM    0(R15),C'0'         IS CHARACTER NUMERIC ?
         BNO   *+8                 IF NOT THEN END FOUND.
         BXLE  R15,R0,*-8          LOOP UNTIL END FOUND.
         LA    R1,INCARD+2         SET GR1 TO TEST FOR NUMERIC.
         TM    INCARD+1,C'0'       IS SECOND CHARACTER IN CARD NUMERIC?
         BO    ENQSUB1C            IF SO THEN SKIP PREFIX TESTING.
         LA    R1,INCARD+3         SET GR1 TO TEST FOR NUMERIC
         CLI   INCARD+1,C'='       IS AN EQUALS SPECIFIED ?
         BE    ENQSUB1C            IF SO THEN GO TO SET UP TIME LOOP.
         CLI   INCARD+1,C'-'       IS A HYPHEN SPECIFIED ?
         BNE   ENQSUB1A            IF NOT THEN GO TO USE DEFAULT.
ENQSUB1C SR    R15,R1              SET GR15 = LENGTH OF TIME FIELD.
         BM    ENQSUB1A            IF MINUS THEN GO TO USE DEFAULT.
         BCTR  R1,R0               DECREMENT GR1 TO ADDRESS.
         EX    R15,ENQPACK         PACK VALUE INTO DOUBLE WORD.
         CVB   R1,DW               CONVERT TO BINARY.
         SLL   R1,2                MULTIPLY BY 4 FOR QUARTER MINUTES.
         B     *+8                 BRANCH AROUND DEFAULT ENTRY.
ENQSUB1A LA    R1,1                SET GR1 = 1.
         ST    R1,ENQCOUNT         STORE VALUE FOR LOOPS.
         BR    R14                 RETURN.
         EJECT                                                        *
*                                                                     *
*        END-UP ROUTINE.                                              *
*                                                                     *
         SPACE 1                                                      *
ENDUP    CLOSE MF=(E,CLOSEL)       CLOSE DATA SETS.
         TM    116(RCVT),X'10'     IS OPERATING SYSTEM MVT OR MP/65 ?
         BZ    NOTMVT3             IF NOT THEN NO INITIATOR REFRESHING.
         SPACE 1
*
*        RESTORE INITIATOR TO NORMAL STATE.
*
         SPACE 1
         SPMODE PROB,0,MF=(E,SPML) ENTER SUPERVISORY PROTECTION KEY.
         MVC   48(64,RTCB),MVTSAVE RESTORE INITIATOR TASK REGISTERS.
         MVC   16(8,RRB),MVTPSW    RESTORE INITIATOR TASK RESUME PSW.
         SPMODE PROB,*,MF=(E,SPML) RESTORE USER PROTECT KEY.
         SPACE 1                                                      *
*                                                                     *
*        RETURN TO INVOKER.                                           *
*                                                                     *
         SPACE 1                                                      *
NOTMVT3  L     R15,RC              SET GR15 = RETURN CODE.
         GOBACK SAVE,RC=(15)       RETURN.
         EJECT
*
*        SPIE ROUTINE.
*
         SPACE 1
SPIERTN  L     R1,16               SET GR1 -> CVT.
         L     R1,0(R1)            SET GR1 -> TCB POINTERS.
         L     R1,4(R1)            SET GR1 -> CURRENT TCB.
         L     R1,4(R1)            SET GR1 -> PIE.
         LA    R0,PARMA            SET GR0 -> EXIT ADDRESS
         ST    R0,8(R1)            STORE ADDRESS FOR RESUME PSW.
         TM    31(R1),X'03'        IS ADDRESS IN GR2 ON FULL WORD BNDRY
         BNZ   SPIERTNA            IF NOT THEN ERROR.
         LA    R2,0(R2)            CLEAR HIGH ORDER BYTE OF GR2.
         L     R15,16              SET GR15 -> CVT.
         C     R2,164(R15)         IS GR2 ADDRESSABLE ?
         BNL   SPIERTNA            IF NOT THEN ERROR.
         L     R0,0(R2)            SET GR0 -> PARAMETER LIST.
         C     R0,24(R1)           COMPARE WITH VALUE AT INTERRUPT.
         BCR   7,R14               IF NOT EQUAL THEN PARM LIST IS VALID
SPIERTNA SR    R0,R0               SET GR0 = 0.
         ST    R0,28(R1)           STORE ADDRESS TO ALLOW A LOAD.
         LA    R0,ENQ3             SET GR0 -> ENTRY TO READ A CONTROL.
         ST    R0,NEXTENQ          STORE ADDRESS FOR NEXT ENQUEUE ENTRY
         BR    R14                 RETURN.
         SPACE 1                                                      *
*                                                                     *
*        MODEL STATEMENTS.                                            *
*                                                                     *
         SPACE 1                                                      *
PARMOC   OC    0(0,R1),0(R1)       CHECK PARAMETER LIST ADDRESSABILITY.
         SPACE 1                                                      *
ENQMOVE1 MVC   INCARD(0),2(R1)     MOVE PARAMETERS TO SIMULATE CONTROL.
ENQMOVE2 MVC   JFCB(0),0(R14)      MOVE DATA SET NAME TO JFCB NAME AREA
ENQPACK  PACK  DW,0(0,R1)          PACK TIME VALUE INTO DOUBLE WORD.
         EJECT                                                        *
*                                                                     *
*        EXIT ROUTINE FOR DCB.                                        *
*                                                                     *
         SPACE 1                                                      *
DCBEXIT  DCBEXITS
         EJECT                                                        *
*                                                                     *
*        CONSTANTS AND WORK AREAS.                                    *
*                                                                     *
         SPACE 1                                                      *
SAVE     DC    9D'0'
MVTSAVE  DC    8D'0'
MVTPSW   DC    D'0'
DW       DC    D'0'
JFCB     DS    22D
INNAME   DC    CL8'SYSIN   '
         DC    CL8'SYSABEND'
         DC    CL8'SYSUDUMP'
         DC    CL8'PGM=*.DD'
         DC    CL8'JOBLIB  '
         DC    CL8'STEPLIB '
         DC    CL8'SNAPOUT '
PRTNAME  DC    CL8'SYSPRINT'
OPENL    OPEN  (PRT,OUTPUT,IN),MF=L
CLOSEL   CLOSE (PRT,,IN),MF=L
QNAME    DC    CL8'SYSDSN  '
*                                                                     *
*                                                                     *
*                                                                     *
IN       DCB   DDNAME=SYSIN,DSORG=PS,MACRF=GM,LRECL=80,RECFM=FB,       *
               EODAD=ENDUP
PRT      DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=137,RECFM=VBA,  *
               EXLST=DCBEXIT,BLKSIZE=2200
SPIESAVE DS    A
ENQCOUNT DC    F'1'
NEXTENQ  DC    A(ENQ1)
LINECT   DC    A(1)
RDJFCBL  RDJFCB DCB,MF=L
DCB      DCB   DDNAME=*,MACRF=E,EXLST=JFCBX
JFCBX    DC    X'87',AL3(JFCB)
RC       DC    F'0'
SPML     DC    V($SPMODE)
ECB      DC    A(0)
ENQX     ENQ   (QNAME,JFCB,E,0,SYSTEM),MF=L
ENQS     ENQ   (QNAME,JFCB,S,0,SYSTEM),MF=L,RET=USE
ENQE     ENQ   (QNAME,JFCB,E,0,SYSTEM),MF=L,RET=USE
DEQL     DEQ   (QNAME,JFCB,0,SYSTEM),MF=L,RET=HAVE
W15      DC    A(576000)           15 / (26.04 * 10**-6) SECONDS.
*                                                                     *
*                                                                     *
*                                                                     *
MSGDQG   DC    C'SUCCESSFULLY DEQUEUED'
MSGDQB   DC    C'NOT PREVIOUSLY ENQUEUED'
MSGNQG   DC    C'SUCCESSFULLY ENQUEUED.'
MSGNQB   DC    C'NOT AVAILABLE FOR ENQUEUE.'
MSGLINE  DC    0H'0',AL2(MSGEND-MSGLINE,0),X'40',C'  '
MSGNAME  DC    CL44' ',C' '
         AIF   (L'MSGDQB GT L'MSGDQG).C1
MSGDEQ   DC    CL(L'MSGDQG)' ',C' AND '
         AGO   .C2
.C1      ANOP
MSGDEQ   DC    CL(L'MSGDQB)' ',C' AND '
.C2      AIF   (L'MSGNQB GT L'MSGNQG).C3
MSGENQ   DC    CL(L'MSGNQG)' '
         AGO   .C4
.C3      ANOP
MSGENQ   DC    CL(L'MSGNQB)' '
.C4      ANOP
MSGEND   DS    0C
HDG      DLINE F1,'RT5033M SYSDSN DEQ/ENQ UTILITY PROGRAM.'
OUTCARD  DC    2H'0',C'-'
INCARD   DS    CL80
SPIEL    SPIE  SPIERTN,(4,5,6),MF=L
SW       DC    AL1(0)
         END   RT5033M                                                *
