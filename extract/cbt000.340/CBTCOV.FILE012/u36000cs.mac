COPYCAT  CSECT
         SPACE  3
*  THE MAIN PURPOSE OF THIS PROGRAM IS TO ALLOW USERS TO TAKE ADVANTAGE
*  OF THE IMPROVED CATALOGUE SEARCH ROUTINE USED BY O.S. REL 19.  THIS
*  SEARCHES EACH INDEX BY A SINGLE 'SEARCH KEY HIGH OR EQUAL' CCW
*  INSTEAD OF THE OLD PROCEDURE OF READING BLOCKS ONE AT A TIME USING
*  THE INDEX LINK FIELD UNTIL THE BLOCK CONTAINING THE DESIRED ENTRY
*  IS FOUND.
         SPACE
*  THE NEW TECHNIQUE FAILS IN ITS PURPOSE AS SOON AS CHANGES TO THE
*  CATALOGUE CAUSE THE BLOCKS OF ONE INDEX TO BE AT NON CONSECUTIVE
*  DISK ADDRESSES, AND THIS WILL HAPPEN FOR MOST USERS AS SOON AS THE
*  CATALOGUE IS PUT INTO NORMAL USE.
         SPACE
*  THIS PROGRAM REORGANIZES THE CATALOGUE SO THAT EACH INDEX OR SUB
*  INDEX FORMS ONE CONSECUTIVE SET OF BLOCKS WITH CORRECT KEYS.
         SPACE
*  IT CAN BE USED TO REORGANIZE A CATALOGUE ON THE SAME PACK (E.G.
*  THE SYSRES) BY DEFINING NEWCAT WITH A DSNAME OTHER THAN SYSCTLG AND
*  RENAMING THE OLD AND NEW CATALOGUES AFTER THE RUN.
*  THE RTPRINCA PROGRAM HAS BEEN REVISED TO LIST A CATALOGUE WITH ANY
*  DSNAME (NOT ONLY 'SYSCTLG') THUS ALLOWING YOU TO CHECK A
*  RE-ORGANIZED CATALOGUE BEFORE RENAMING.
*  *** NOTE THAT IT IS THE USERS RESPONSIBILITY TO ENSURE THAT CHANGES
*  TO THE ORIGINAL CATALOGUE OCCURRING AFTER THE START OF THIS PROGRAM
*  AND BEFORE THE RENAME ARE ALSO MADE TO THE NEW CATALOGUE ***
         SPACE
*  THE PROGRAM WORKS AT 8 TO 10 TIMES THE SPEED OF IEHMOVE 'COPY
*  CATALOG', MAINLY BECAUSE IT COPIES WHOLE BLOCKS INSTEAD OF
*  CATALOGUING EACH INDIVIDUAL ENTRY IN THE NEW CATALOGUE.  BECAUSE OF
*  THIS IT WILL NOT MERGE ENTRIES WITH ANOTHER CATALOGUE AND IT DOES
*  NOT COPY DUMMY DSCBS.  (SEE THE PUNCHCAT PROGRAM IF YOU WANT TO
*  MERGE CATALOGUES).
         SPACE
*  BY USING THIS PROGRAM UNDER REL 19 THE TIME FOR A TEST LOOP OF 100
*  LOCATES FOR 'SYS1.ZEBEEEE' (A DUMMY ENTRY CATALOGUED FOR THE TEST)
*  WAS DECREASED FROM 48 TO 27 SECS.  THE TEST ALSO SHOWED THAT THE
*  TIME COULD BE REDUCED TO 10 SECS BY POSITIONING SYSCTLG NEXT TO THE
*  VTOC (BECAUSE EVERY CATALOGUE LOOK-UP INVOLVES A VTOC REFERENCE FOR
*  CONSTRUCTING A PSEUDO DEB SINCE THERE IS NO PERMANENTLY OPEN SYSCTLG
*  DCB).
         SPACE
*  THIS PROGRAM IS DEVICE INDEPENDENT AND HAS BEEN USED ON 2314 AND
*  2301 (AND TO COPY FROM 2314 TO 2301).
*  THE PROGRAM ALLOWS FOR 'VOLUME LIST BLOCKS' (WHICH OCCUR WHEN A
*  DATA SET HAS MORE THAN 5 VOLUMES) BUT THIS FUNCTION HAS NOT BEEN
*  TESTED.
         SPACE
*  SAMPLE OF THE JCL REQUIRED......
*        //COPYCAT EXEC PGM=COPYCAT
*        //OLDCAT DD DSN=SYSCTLG,DISP=SHR,VOL=REF=SYS1.SVCLIB
*        //COPYCAT DD UNIT=2314,SPACE=(CYL,1)
*        //NEWCAT DD DSN=NEWCAT,DISP=(,KEEP),VOL=REF=SYS1.SVCLIB,
*        //          SPACE=(CYL,1)
*        //WORKA DD UNIT=(2314,SEP=(COPYCAT)),SPACE=(TRK,10,,CONTIG)
*        //WORKB DD UNIT=(2314,SEP=(COPYCAT,WORKA)),
*        //          SPACE=(TRK,10,,CONTIG)
*        //SYSVTOC DD VOL=REF=*.NEWCAT,DISP=SHR
*  SPACE REQUIREMENTS ARE.....
*        COPYCAT MUST HAVE ROOM FOR AS MANY BLOCKS AS OLDCAT, I.E.
*              EMPTY BLOCKS AS WELL AS ACTIVE BLOCKS ARE COPIED TO IT.
*        WORKA AND WORKB MUST EACH HAVE ROOM FOR THE NUMBER OF ACTIVE
*              BLOCKS IN THE LATGEST (VOLUME OR OTHER) INDEX.
*        NEWCAT MUST HAVE ROOM FOR ALL ACTIVE BLOCKS IN OLDCAT (ANY
*              EXTRA SPACE WILL BE FORMATTED WITH ZERO BLOCKS).
         SPACE
*  IN ORDER TO MINIMISE THE TIME DURING WHICH WE ARE ENQUEUED ON
*  SYSCTLG (AND ARE THUS HOLDING UP THE SCHEDULER FOR OTHER TASKS) WE
*  FIRST MAKE A COMPLETE COPY OF THE ORIGINAL CATALOGUE FROM OLDCAT TO
*  COPYCAT.  WE CAN THEN DEQ AND PROCESS COPYCAT WITHOUT FEAR OF
*  CONFLICT.
         SPACE  3
         CNOP  0,4
         STM   14,12,12(13)
         LR    15,13
         BALR  12,0
         USING *,12
         LA    13,SAVE        ***** CHANGED MAY 77
         USING SAVE,13        ***** CHANGED MAY 77
         ST    15,4(,13)
         ST    13,8(,15)
         SPACE
         OPEN  (OLDCAT,,COPCAT,OUTIN,NEWCAT,OUTIN,A,OUTIN,B,OUTIN)
         L     1,NEWCAT+44
         MVC   SAVETRKS,46(1)
         SPACE
GO       ENQ   (Q,RN,E,7,SYSTEM)
         SPACE
COPY     READ  DEA,SF,OLDCAT,AA,'S',MF=E
         CHECK DEA
         WRITE DEA,SF,COPCAT,AA,'S',MF=E
         CHECK DEA
         B     COPY
         SPACE
DEQ      DEQ   (Q,RN,7,SYSTEM)
         CLOSE (OLDCAT)
         CLOSE (COPCAT,REREAD),TYPE=T
         RDJFCB  (VTOC,,NEWCAT)
         MVC   VJFCB(44),F4
         OPEN  (VTOC,OUTPUT),TYPE=J
         L     1,VTOC+44
         MVC   CCHHR(4),38(1)
         OBTAIN  CAMLSTA
         LTR   15,15
         BZ    UP17
         WTO   'COPYCAT HAS ERROR IN READING F4 DSCB ON NEWCAT VOLUME',*
               ROUTCDE=(2,11)
         B     VTOCERR
UP17     MVC   SEVENTEN+3(1),AA+75
         SPACE
*  START PRELIMINARY PASS TO PRIME A WITH VOL. INDEX.  THIS PASS
*  UPDATES KEYS AND LINK FIELDS FOR EACH BLOCK AND NOTES LAST TTR IN
*  SCRATCH PAD A AREA.
         SPACE
*  REGISTER USAGE
*        2     WORK          USED WITH 3 FOR DIVIDE AND MULTIPLY
*        3     WORK
*        4     CURRENT BLOCK COUNT (=TTR) IN NEWCAT
*        5     POINTER WITHIN AA
*        6     POINTER WITHIN SPA
*        7     POINTER WITHIN BB
*        8     POINTER WITHIN SPB
*        9     BAL
*        10    ICREG
*        11    FREE
*        12    BASE
*        13    2ND BASE STARTING AT 'SAVE'
         SPACE
         SR    4,4
         SR    10,10
         LA    6,SPA
READA    READ  DEA,SF,COPCAT,AA,'S',MF=E
         CHECK DEA
         LA    4,1(4)
         LA    5,AA+10
         MVC   AA(8),FFS
LOOPA    CLC   0(8,5),FFS
         BE    EOBA
         MVC   AA(8),0(5)    CORRECT KEY FOR BLOCK
         IC    10,11(5)
         SLL   10,1
         LA    5,12(10,5)
         B     LOOPA
EOBA     MVC   POINTER(3),8(5)
         OC    POINTER,POINTER
         BZ    EOIA
*  NOW COMPLETE LINK FIELD FOR NEWCAT WHILE WE HAVE NEXT TTR
         BAL   9,CONVTTRB
         MVC   8(3,5),TTR
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         POINT COPCAT,POINTER
         B     READA
EOIA     ST    4,0(6)        END OF VOL INDEX TO SPA
         MVC   AA(8),FFS     SUPERIMPOSE KEY OF FFS ON LAST BLOCK
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         MVC   AA(8),ENDMARK
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         CLOSE (A,REREAD),TYPE=T
         SPACE
*  NOW BEGIN FIRST NORMAL PASS.  READ IN FROM A, COMPLETE INDEX PTR
*  TTRS BY REFERENCE TO SPA, WRITE CONTENTS OF EACH NEXT LOWER INDEX
*  TO B, NOTING LAST TTR OF EACH IN SPB, AND WRITE EACH COMPLETED
*  BLOCK TO NEWCAT.
         SPACE
PASSA    MVI   FT,255
         LA    6,SPA
         LA    8,SPB
         LR    1,8
         A     1,SPLEN
         ST    1,ENDSPB
         B     READAA
SPLEN    DC    F'1020'
READAA   READ  DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         CLC   AA(8),ENDMARK
         BE    EOA
         MVI   FT,0
         LA    5,AA+10
         CLI   0(5),0        IS THIS AN INDEX CONTROL ENTRY
         BNE   TESTENDA
         MVC   SP,0(6)       IF SO FILL IN TTR OF ITS LAST BLOCK
         TM    SP,128
         BZ    *+14
         L     6,0(6)
         MVC   SP,0(6)
         BAL   9,CONVTTRA
         MVC   8(3,5),TTR
         LA    6,4(6)
         L     1,NCA
         LA    1,1(1)
         ST    1,SP
         BAL   9,CONVTTRA
         MVC   12(3,5),TTR   FILL IN TTR OF FIRST BLOCK OF INDEX
         B     STEPONA
TESTENDA CLC   0(8,5),FFS    IS THIS END OF BLOCK
         BNE   TESTYPA
         WRITE DEA,SF,NEWCAT,AA,'S',MF=E
         CHECK DEA
         L     1,NCA
         LA    1,1(1)
         ST    1,NCA
         B     READAA
TESTYPA  CLI   AA,15         IS THIS A VOL CONTROL BLOCK
         BNE   TESTINDA
         MVI   AA,255
         WRITE DEA,SF,NEWCAT,AA,'S',MF=E
         CHECK DEA
         L     1,NCA
         LA    1,1(1)
         ST    1,NCA
         B     READAA
TESTINDA CLI   11(5),3       IGNORE CVOL, ALIAS, AND DSN ENTRIES
         BNL   STEPONA
         CLI   11(5),1       IF VOL CONTROL BLOCK POINTER GO
         BE    GETVCBA         TO EXCEPTION ROUTINE
         SPACE
*  FOR INDEX POINTERS (NORMAL AND GDG) WE PUT THE CURRENT VALUE OF REG
*  4 (NEXT AVAILABLE TTR IN NEWCAT) INTO THE TTR FIELD AND THEN READ
*  THE COMPLETE INDEX INTO BB, UPDATE KEYS, AND WRITE TO B.  AT END OF
*  INDEX WE NOTE THE LAST TTR IN SPB TO COMPLETE THE ICE ON NEXT PASS.
         SPACE
         MVC   POINTER(3),8(5)         SAVE OLDCAT INDEX POINTER
         BAL   9,CONVTTRB    CONVERT REG 4 TO NEXT TTR
         MVC   8(3,5),TTR    SET NEWCAT INDEX POINTER
         POINT COPCAT,POINTER
READAB   READ  DEA,SF,COPCAT,BB,'S',MF=E
         CHECK DEA
         LA    4,1(4)
         LA    7,BB+10
LOOPAA   CLC   0(8,7),FFS
         BE    EOBAA
         MVC   BB(8),0(7)    UPDATE KEY FOR THIS BLOCK
         IC    10,11(7)
         SLL   10,1
         LA    7,12(10,7)
         B     LOOPAA
EOBAA    MVC   POINTER(3),8(7)
         OC    POINTER,POINTER         END OF INEEX
         BZ    EOIAA
*  NOW PUT CORRECT TTR FOR NEWCAT IN INDEX LINK FIELD.
         BAL   9,CONVTTRB
         MVC   8(3,7),TTR
         WRITE DEA,SF,B,BB,'S',MF=E
         CHECK DEA
         POINT COPCAT,POINTER
         B     READAB
*  AT END OF SUB-INDEX NOTE LAST TTR IN SCRATCH PAD AREA.
EOIAA    ST    4,0(8)
         LA    8,4(8)
         MVC   BB(8),FFS
         WRITE DEA,SF,B,BB,'S',MF=E
         CHECK DEA
         C     8,ENDSPB
         BL    STEPONA
         SPACE 3
*  IF THERE ARE MORE THAN 256 SUB-INDEXES AT ANY ONE LEVEL OF THE
*  CATALOGUE THE AREAS LABELLED 'SPA' AND 'SPB' (WHICH ARE USED FOR
*  STORING THE TTRS OF THE LAST BLOCKS OF EACH SUB-INDEX) WILL BE
*  EXTENDED BY THE GETMAIN WHICH FOLLOWS. THIS CORE WILL BE FREED AT
*  THE NEXT PASS (SEE REFERENCES TO 'FREEMA' AND 'FREEMB').
*
*  ** IMPORTANT NOTE  **
*
*  THIS PROGRAM CONTAINS CODE FOR EXTENDING AREAS SPA/SPB IN AMOUNTS
*  OF 1K AT A TIME, BUT IT ONLY FREES THE LAST AREA ACQUIRED AFTER
*  EACH PASS.  IF YOU HAVE MORE THAN 510 SUB-INDEXES AT ONE LEVEL OF
*  THE CATALOGUE YOU ARE ADVISED TO INCREASE THE LENGTH VALUE FOR THE
*  FOLLOWING GETMAIN TO AN APPROPRIATE SIZE, BUT IF YOU DO THIS YOU
*  MUST ALSO PROVIDE A CONSTANT OF 'LENGTH-4' AND USE IT IN PLACE OF
*  SPLEN IN THE INSTRUCTIONS 'A 1,SPLEN'OCCURRING BEFORE THE LABELS
*  'STEPONA' AND 'STEPONB'.
         SPACE 3
         GETMAIN  R,LV=1024
         ST    1,0(8)
         ST    1,FREEMA
         MVI   0(8),128
         LR    8,1
         A     1,SPLEN
         ST    1,ENDSPB
STEPONA  IC    10,11(5)
         SLL   10,1
         LA    5,12(10,5)
         B     TESTENDA
         SPACE
*  IF A VOL CONTROL BLOCK POINTER IS ENCOUNTERED WE WILL UPDATE ITS
*  POINTER TO THE NEXT AVAILABLE NEWCAT TTR, THEN READ THE VCBS,
*  COPYING THEM TO B, BUT WILL MAKE NO SPB ENTRY AT THE END.  BECAUSE
*  VCBS HAVE A DIFFERENT STRUCTURE FROM ALL OTHER CATALOGUE BLOCKS WE
*  MARK THEM BY MAKING THE FIRST CHARACTER OF THE KEY X'0F' SO THEY CAN
*  BE TREATED CORRECTLY WHEN READ BACK FROM B.
         SPACE
GETVCBA  MVC   POINTER(3),8(5)
         BAL   9,CONVTTRB
         MVC   8(3,5),TTR
POINTVCB POINT COPCAT,POINTER
READVCB  READ  DEA,SF,COPCAT,BB,'S',MF=E
         CHECK DEA
         MVI   BB,15
         LA    4,1(4)
         WRITE DEA,SF,B,BB,'S',MF=E
         CHECK DEA
         CLI   BB+9,20
         BL    STEPONA       NO MORE VCBS
         MVC   POINTER(3),BB+260
         B     POINTVCB
         SPACE
*  END OF WORK FILE A.  IF EOF WAS ON FIRST READ THIS MUST BE THE END
*  OF ALL INPUT (I.E. PREVIOUS PASS FOUND NO SUB-INDICES).  IF NOT,
*  RESET A AND B TO START AND GO TO PASS B.
         SPACE
EOA      TM    FT,255
         BO    EOJ
         MVC   BB(8),ENDMARK
         WRITE DEA,SF,B,BB,'S',MF=E
         CHECK DEA
         CLOSE (A,REREAD,B,REREAD),TYPE=T
         L     1,FREEMB
         LTR   1,1
         BZ    PASSB
         FREEMAIN  R,LV=1024,A=(1)
         XC    FREEMB,FREEMB
         SPACE
*  NOW START PASS B AND PROCESS AS FOR A BUT IN THE REVERSE DIRECTION.
         SPACE
PASSB    MVI   FT,255
         LA    6,SPA
         LR    1,6
         A     1,SPLEN
         ST    1,ENDSPA
         LA    8,SPB
READBA   READ  DEA,SF,B,BB,'S',MF=E
         CHECK DEA
         CLC   BB(8),ENDMARK
         BE    EOB
         MVI   FT,0
         LA    7,BB+10
         CLI   0(7),0        INDEX CONTROL ENTRY
         BNE   TESTENDB
         MVC   SP,0(8)
         TM    SP,128
         BZ    *+14
         L     8,0(8)
         MVC   SP,0(8)
         BAL   9,CONVTTRA
         MVC   8(3,7),TTR
         LA    8,4(8)
         L     1,NCA
         LA    1,1(1)
         ST    1,SP
         BAL   9,CONVTTRA
         MVC   12(3,7),TTR   FILL IN TTR OF FIRST BLOCK OF INDEX
         B     STEPONB
TESTENDB CLC   0(8,7),FFS
         BNE   TESTYPB
         WRITE DEA,SF,NEWCAT,BB,'S',MF=E
         CHECK DEA
         L     1,NCA
         LA    1,1(1)
         ST    1,NCA
         B     READBA
TESTYPB  CLI   BB,15
         BNE   TESTINDB
         MVI   BB,255
         WRITE DEA,SF,NEWCAT,BB,'S',MF=E
         CHECK DEA
         L     1,NCA
         LA    1,1(1)
         ST    1,NCA
         B     READBA
TESTINDB CLI   11(7),3
         BNL   STEPONB
         CLI   11(7),1
         BE    GETVCBB
         MVC   POINTER(3),8(7)
         BAL   9,CONVTTRB
         MVC   8(3,7),TTR
         POINT COPCAT,POINTER
READBB   READ  DEA,SF,COPCAT,AA,'S',MF=E
         CHECK DEA
         LA    4,1(4)
         LA    5,AA+10
LOOPBA   CLC   0(8,5),FFS
         BE    EOBB
         MVC   AA(8),0(5)
         IC    10,11(5)
         SLL   10,1
         LA    5,12(10,5)
         B     LOOPBA
EOBB     MVC   POINTER(3),8(5)
         OC    POINTER,POINTER
         BZ    EOIBB
         BAL   9,CONVTTRB
         MVC   8(3,5),TTR
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         POINT COPCAT,POINTER
         B     READBB
EOIBB    ST    4,0(6)
         LA    6,4(6)
         MVC   AA(8),FFS
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         C     6,ENDSPA
         BL    STEPONB
         SPACE 3
*  SEE IMPORTANT NOTE BEFORE LABEL 'STEPONA'
         SPACE 3
         GETMAIN  R,LV=1024
         ST    1,0(6)
         ST    1,FREEMB
         MVI   0(6),128
         LR    6,1
         A     1,SPLEN
         ST    1,ENDSPA
STEPONB  IC    10,11(7)
         SLL   10,1
         LA    7,12(10,7)
         B     TESTENDB
GETVCBB  MVC   POINTER(3),8(7)
         BAL   9,CONVTTRB
         MVC   8(3,7),TTR
POINTVB  POINT COPCAT,POINTER
READVB   READ  DEA,SF,COPCAT,AA,'S',MF=E
         CHECK DEA
         MVI   AA,15
         LA    4,1(4)
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         CLI   AA+9,20
         BL    STEPONB
         MVC   POINTER(3),AA+260
         B     POINTVB
EOB      TM    FT,255
         BO    EOJ
         MVC   AA(8),ENDMARK
         WRITE DEA,SF,A,AA,'S',MF=E
         CHECK DEA
         CLOSE (A,REREAD,B,REREAD),TYPE=T
         L     1,FREEMA
         LTR   1,1
         BZ    PASSA
         FREEMAIN  R,LV=1024,A=(1)
         XC    FREEMA,FREEMA
         B     PASSA
         EJECT
EOJ      BAL   9,CONVTTRB
         MVC   FFB,TTR
         LH    3,SAVETRKS
         L     2,SEVENTEN
         MR    2,2
         XC    AA(256),AA
         MVC   AA+256(8),AA
FILLOUT  CR    4,3
         BNL   FINE
         WRITE DEA,SF,NEWCAT,AA,'S',MF=E
         CHECK DEA
         LA    4,1(4)
         B     FILLOUT
FINE     NOTE  NEWCAT
         ST    1,ENDPOINT
         XC    POINTER,POINTER
         MVI   POINTER+3,1
         POINT NEWCAT,POINTER
         READ  DEA,SF,NEWCAT,AA,'S',MF=E
         CHECK DEA
         MVC   AA+22(3),ENDPOINT
         MVC   AA+26(3),FFB
         L     1,NEWCAT+44
         MVC   BLK+3(4),38(1)
         MVI   BLK+7,1
         XDAP  ECBW,WI,NEWCAT,AA,264,,BLK
         WAIT  ECB=ECBW
         CLI   ECBW,127
         BE    POINTEND
         WTO   'COPYCAT HAS ERROR IN NEWCAT',ROUTCDE=(2,11)
         B     VTOCERR
POINTEND POINT NEWCAT,ENDPOINT
         SPACE
*  NOW UPDATE THE NEWCAT DSCB TO SHOW THAT THE NEW SYSCTLG IS FORMATTED
         SPACE
         OBTAIN  CAMLST
         LTR   15,15
         BNZ   VTOCERR
         MVC   BLK+3(5),AA+96
         MVC   AA+54(3),FORMED
         XDAP  ECB,WK,VTOC,AA,96,(JFCB,44),BLK
         WAIT  ECB=ECB
         CLI   ECB,127
         BE    ENDUP
         SPACE
         WTO   'COPYCAT HAS ERROR IN UPDATING NEWCAT DSCB',            *
               ROUTCDE=(2,11)
VTOCERR  ABEND 2,DUMP
         SPACE
ENDUP    CLOSE (COPCAT,,NEWCAT,,A,,B,,VTOC)
         L     13,4(,13)
         LM    14,12,12(13)
         LA    15,0
         BR    14
         EJECT
CONVTTRA SR    2,2
         L     3,SP
         BCTR  3,0
         D     2,SEVENTEN
         STH   3,TT
         LA    2,1(2)
         STC   2,R
         BR    9
         SPACE 3
CONVTTRB SR    2,2
         LR    3,4
         D     2,SEVENTEN
         STH   3,TT
         LA    2,1(2)
         STC   2,R
         BR    9
         SPACE 3
SURPRISE ABEND 20,DUMP
         EJECT
OLDCAT   DCB   DSORG=PS,RECFM=F,BLKSIZE=256,LRECL=256,KEYLEN=8,        *
               MACRF=(R),EODAD=DEQ,DDNAME=OLDCAT
         SPACE 3
NEWCAT   DCB   DSORG=PS,RECFM=F,BLKSIZE=256,LRECL=256,KEYLEN=8,        *
               MACRF=(RP,WP),DDNAME=NEWCAT,EXLST=NLIST
         SPACE 3
A        DCB   DSORG=PS,RECFM=F,BLKSIZE=256,LRECL=256,KEYLEN=8,        *
               MACRF=(R,W),EODAD=EOA,DDNAME=WORKA
         SPACE 3
B        DCB   DSORG=PS,RECFM=F,BLKSIZE=256,LRECL=256,KEYLEN=8,        *
               MACRF=(R,W),EODAD=EOB,DDNAME=WORKB
         SPACE 3
COPCAT   DCB   DSORG=PS,RECFM=F,BLKSIZE=256,LRECL=256,KEYLEN=8,        *
               MACRF=(RP,WP),DDNAME=COPYCAT,EODAD=SURPRISE
         SPACE 3
VTOC     DCB   DDNAME=SYSVTOC,DSORG=DA,MACRF=(E),EXLST=XLIST
         SPACE  3
         DC    F'0'
XLIST    DC    X'87',AL3(VJFCB)
NLIST    DC    X'87',AL3(JFCB)
         EJECT
SAVE     DC    18F'0'
VJFCB    DC    CL176' '
JFCB     DC    CL176' '
         DS    0D
         DC    CL8'AREA AA'
AA       DS    CL264
         DC    CL8'AREA BB'
BB       DS    CL264
         DC    CL8'SCRATCHA'
SPA      DS    CL1024
SPAEND   EQU   *
ENDSPA   DC    A(SPAEND)
         DC    CL8'SCRATCHB'
SPB      DS    CL1024
SPBEND   EQU   *
ENDSPB   DC    A(SPBEND)
POINTER  DC    F'0'
FFS      DC    8X'FF'
TTR      DS    0H
TT       DC    H'0'
R        DS    C
FT       DC    X'FF'
NCA      DC    F'0'
SEVENTEN DC    F'17'
SP       DC    F'0'
FFB      DC    CL3' ',C' '
ENDPOINT DC    F'0'
FREEMA   DC    F'0'
FREEMB   DC    F'0'
ENDMARK  DC    XL5'00',C'END'
BLK      DC    XL8'00'
NTMO     DC    H'0'
NTMC     DC    H'0'
Q        DC    CL8'SYSCTLG'
RN       DC    CL8'SYSCTLG'
F4       DC    44X'04'
SAVETRKS DC    H'0'
FORMED   DC    X'0000FF'
CCHHR    DC    XL5'01'
         SPACE  3
CAMLST   CAMLST  SEARCH,JFCB,JFCB+118,AA
         SPACE
CAMLSTA  CAMLST  SEEK,CCHHR,JFCB+118,AA
         SPACE
         READ  DEA,SF,MF=L
         END
