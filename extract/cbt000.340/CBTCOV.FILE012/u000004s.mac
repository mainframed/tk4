AMM.     TITLE 'MONITOR UPDATE PROGRAMME FOR UPDATE=INPLACE - A.M.M.'
***********************************************************************
*                                                                     *
*  THIS PROGRAMME READS THE SYSIN DATA SET AND CREATES ON THE SYSUT2  *
* DATA SET INPUT FOR THE IEBUPDTE PROGRAMME. YHE SYSUT1 DATA SET IS   *
* CONSIDERED TO BE BOTH THE OLD AND NEW LIBRARIES.                    *
*                                                                     *
*  THE INPUT STREAM IS SCANNED UNTIL A CHANGE UPDATE=INPLACE CONTROL  *
* CARD IS ENCOUNTERED. THE PRECEDING DATA IN THE INPUT STREAM IS THEN *
* PROCESSED BY THE  IEBUPDTE PROGRAMME. UPDATE=INPLACE DATA IS THEN   *
* PROCESSED ONE DATA CARD AT 0 TIME.                                  *
*                                                                     *
***********************************************************************
         SPACE 2
* REGISTER USAGE.
RBASE    EQU   12                  BASE REGISTER.
R0       EQU   0                   WORK REGISTER.
R1       EQU   1                   WORK REGISTER / PARAMETER REGISTER.
R2       EQU   2                   CHARACTER FOR COMPARE EXECUTE.
R3       EQU   3                   CONTINUATION COLUMN INDICATOR.
R4       EQU   4
R5       EQU   5
R6       EQU   6                   ZERO.
R7       EQU   7                   ADDRESS OF NEXT DYNAMIC AREA.
R8       EQU   8                   ADDRESS OF CURRENT DYNAMIC AREA.
R9       EQU   9                   POINTER TO CURRENT BUFFER.
R10      EQU   10                  RETURN ADDRESS.
R11      EQU   11
R12      EQU   12
R13      EQU   13                  SAVE AREA POINTER.
R14      EQU   14                  RETURN ADDRESS.
R15      EQU   15                  ENTRY POINT ADDRESX / RETURN CODE.
         EJECT
RTPUPDTE CSECT
*        BEGIN SAVE,BASE=RBASE     INITIALISE AND DEFINE BASE REGISTER.
         STM   14,12,12(13)
         BALR  RBASE,0
         USING *,RBASE
         LA    15,SAVE
         ST    15,8(13)
         ST    13,4(15)
         LR    13,15
         RDJFCB MF=(E,OPENL1+4)    READ SYSLIB JOB FILE CONTROL BLOCK.
         MVC   UT2+40(8),CSYSUT2   SET SYSUT2 DDNAME IB DCB.
         MVI   EXITL,X'80'         SET NULL EXIT LIST POINTER.
         LA    R1,JFCB+43          SET GR1 -> LAST BYTE OF DSNAME.
         CLI   0(R1),C' '          IS BYTE BLANK ?
         BNE   *+8                 IF NOT THEN END FOUND.
         BCT   R1,*-8              LOOP UNTIL FOUND.
         LA    R0,JFCB-1           SET GR0 FOR SUBTRACK.
         SR    R1,R0               SET GR1 = LENGTH OS DATA SET NAME.
         STC   R1,ENQL+1           STORE LENGTH FOR ENQUE.
         OPEN  MF=(E,OPENL1)       OPEN SYSIN AND SYSUT2 DATA SETS.
         SR    R6,R6               SET GR6 = 0.
         LA    R8,CHAIN            SET GR8 -> CHAIN POINTER.
LOOP3    BAL   R10,SUB1            LINK TO READ SYSIN DATA SET.
         BNE   PUT                 IF NOT A CONTROL CARD THEN GO TO PUT
CONTCARD LA    R1,1(R9)            SET GR1 -> LAST CHAR BEFORE NAME.
         LA    R2,C' '             SET GR2 FOR COMMAND EXECUTE.
         BAL   R10,SUB2            LINK TO SCAN FOR END OF NAME.
         BE    *+4                 END SCAN WHEN FOUND.
         BAL   R10,SUB2            LINK TO SCAN FOR OPERATION.
         BNE   *+4                 END SCAN WHEN FOUND.
         CLC   0(6,R1),CONTROL+5   COMPARE FOR ENDUP.
         BE    ENDIN               IF EQUAL THEN GO TO END.
         CLC   0(7,R1),CHANGE      IS OPERATION CHANGE ?
         BNE   PUT                 IF NOT THEN GO TO WRITE SYSUT2.
         LA    R1,6(R1)            SET GR1 -> BLANK FOLLOWING OPERATION
         BAL   R10,SUB2            LINK TO SCAN FOR START OF OPERAND.
         BNE   *+4                 END SCAN WHEN FOUND.
         LA    R2,C','             SER GR2 FOR COMPARE EXECUTE.
LOOP1    CLC   0(L'CUP,R1),CUP     IS PARAMETER UPDATE=INPLACE ?
         BE    INPLACE             IF SO THEN GO TO PROCESS.
         CLI   0(R1),C' '          IS PARAMETER BLANK ?
         BE    NEWCARD             IF SO THEN CONTINUATION REQUIRED.
         CR    R1,R3               IS IT END OF DATA ON CARD ?
         BE    NEWCARD             IF SO THEN CONTINUATION REQUIRED.
         BAL   R10,SUB2            LINK TO SCAN FOR NEXT PARAMETER.
         BE    *+4                 END SCAN WHEN FOUND.
         LA    R1,1(R1)            INCREMENT GR1 FOR BYTE AFTER DELIM.
         B     LOOP1               GO TO TRY NEXT PARAMETER.
NEWCARD  CLI   0(R3),C' '          IS CONTINUATION COLUMN BLANK ?
         BE    PUT                 IF SO THEN ERROR FOR IEBUPDTE.
         BAL   R10,SUB3            LINK TO OBTAIN DYNAMIC AREA.
         LA    R1,15(R9)           SET GR1 -> START OF CONTINUATION.
         B     LOOP1               GO TO TRY NEXT PARAMETER.
         SPACE 2
INPLACE  BAL   R10,SUB4            LINK TO LINKAGE TO IEBUPDTE.
         BAL   R10,SUB5            LINK TO WRITE CONTROL CARDS.
         BAL   R10,SUB6            LINK TO FREE DYNAMIC AREA.
         OI    SW,SWINP            SET ON UPDATE INPLACE ACTIVE SWITCH.
         BAL   R10,SUB1            LINK TO READ CONTROL CARDS.
         BNE   *+12                END WHEN FIRST DATA CARD FOUND.
         BAL   R10,SUB5            LINK TO WRITE CONTROL CARD.
         B     *-12                LOOP UNTIL DATA CARD READ.
         BAL   R10,SUB5            LINK TO WRITE DATA CARD.
         BAL   R10,SUB1            LINK TO READ DATA CARD.
         BNE   *-8                 LOOP UNTIL CONTROL CARD TEAD.
         BAL   R10,SUB4            LINK TO LINKAGE TO IEBUPDTE.
         NI    SW,X'FF'-SWINP      SET OFF UPDATE INPLACE ACTIVE SWITCH
         B     CONTCARD            GO TO PROCESS CONTROL CARD.
         SPACE 2
PUT      BAL   R10,SUB5            LINK TO WRITE SYSUT2 DATA SET.
         BAL   R10,SUB6            LINK TO RELEASE DYNAMIC AREA.
         B     LOOP3               GO TO READ NEXT CARD.
         SPACE 2
ENDIN    CLOSE MF=(E,CLOSEL2)      CLOSE SYSIN DATA SET.
         BAL   R10,SUB4            LINK TO LINKAGE TO IEBUPDTE.
*        GOBACK SAVE,RC=(15)       RETURN.
         L     13,4(13)
         L     14,12(13)
         LM    0,12,20(13)
         MVI   12(13),255
         BR    14
         EJECT
SUB1     GET   IN                  READ SYSIN DATA SET.
         LR    R9,R1               SET GR9 -> RECORD.
         LA    R3,71(R9)           SET GR3 -> CONTINUATION COLUMN.
         CLC   0(2,R9),CONTROL     IS IT A CONTROL CARD ?
         BR    R10                 RETURN.
         SPACE 2
SUB2     LA    R1,1(R1)            INCREMENT GR1 FOR NEXT CHAR.
         CR    R1,R3               COMPARE WITH CONT. COL ADDRESS.
         BNL   PUT                 IF NOT LESS THEN LEAVE FOR IEBUPDTE.
         EX    R2,SUB2A            COMPARE FOR CHARACTER SPECIFIED.
         EX    R0,0(R10)           TEST FOR RETURN.
         B     SUB2                LOOP UNTIL RETURN FOUND.
SUB2A    CLI   0(R1),0             MODEL STATEMENT.
         SPACE 2
SUB3     GETMAIN R,LV=88           OBTAIN DYNAMIC SPACE FOR CONTROL CD.
         LR    R7,R1               SET GR7 -> DYNAMIC AREA.
         ST    R7,0(R8)            STORE POINTER TO DYNAMIC AREA.
         LR    R8,R7               SET GR8 -> DYNAMIC AREA.
         ST    R6,0(R8)            CLEAR POINTER TO DYNAMIC AREA.
         MVC   4(80,R8),0(R9)      MOVE CONTROL CARD TO DYNAMIC AREA.
         B     SUB1                GO TO READ NEXT CARD.
         SPACE 2
SUB4     TM    SW,SWOUT            ANY OUTPUT PRESENT ?
         BCR   8,R10               IF NOT THEN RETURN.
         NI    SW,X'FF'-SWOUT      SET OFF OUTPUT PRESENT SWITCH.
         TM    SW,SWINP            IS UPDATE INPLACE ACTIVE ?
         BO    SUB4A               IF SO THEN NO ENDUP.
         PUT   UT2,CONTROL         WRITE END OF INPUT INDICATOR.
SUB4A    CLOSE MF=(E,CLOSEL1)      CLOSE SYSUT2 DATA SET.
         ENQ   MF=(E,ENQL)         ENQUEUE FOR LIBRARY.
         LA    R1,MFL              SET GR1 -> PARAMETER LIST.
         L     R15,VCON            SET GR15 -> IEBUPDTE PROGRAMME ENTRY
         BALR  R14,R15             LINK TO IEBUPDTE PROGRAMME.
         DEQ   MF=(E,ENQL)         DEQUEUE FOR LIBRARY.
         TM    IN+48,X'10'         IS SYSIN DATA SET OPEN ?
         BCR   8,R10               IF NOT THEN RETURN.
         OPEN  MF=(E,OPENL1+4)     OPEN SYSUT2 DATA SET.
         BR    R10                 RETURN.
         SPACE 2
SUB5     L     R4,CHAIN            SET GR4 -> START OF CHAIN.
SUB5B    LTR   R4,R4               TEST SIGN OF GR4.
         BZ    SUB5A               IF ZWRO THEN NO PREFIX.
         PUT   UT2,4(R4)           WRITE SYSUT2 DATA SET.
         L     R4,0(R4)            SET GR4 -> NEXT MEMBER OF CHAIN.
         B     SUB5B               GO TO REPEAT TEST.
SUB5A    PUT   UT2,(R9)            WRITE SYSUT2 DATA SET.
         OI    SW,SWOUT            SET ON OUTPUT PRESENT SWITCH.
         BR    R10                 RETURN.
         SPACE 2
SUB6     L     R8,CHAIN            SET GR8 -> FIRST DYNAMIC AREA.
SUB6B    LTR   R8,R8               TEST SIGN OF GR8.
         BZ    SUB6A               IF ZERO THEN END OF CHAIN.
         L     R7,0(R8)            SET GR7 -> NEXT DYNAMIC AREA.
         FREEMAIN R,LV=88,A=(R8)   RELEASE DYNAMIC AREA.
         LR    R8,R7               SET GR8 -> NEXT DYNAMIC AREA.
         B     SUB6B               GO TO RELEASE NEXT DYNAMIC AREA.
SUB6A    ST    R6,CHAIN            CLEAR POINTER TO START OF CHAIN.
         LA    R8,CHAIN            SET GR8 FOR START OF NEXT CHAIN.
         BR    R10                 RETURN.
         EJECT
* FOLLOWING ARE CONSTANTS AND WORK AREAS USED.
         SPACE 1
SAVE     DS    18F                 SAVE AREA.
OPENL1   OPEN  (IN,INPUT,UT2,OUTPUT),MF=L
CLOSEL1  CLOSE (UT2),MF=L
CLOSEL2  CLOSE (IN),MF=L
CHAIN    DC    A(0)                START OF DYNAMIC AREA CHAIN.
MFL      CALL  ,(PARM,DDNAMES),VL,MF=L
VCON     DC    V(IEBUPDTE)         IEBUPDTE ENTRY POINT.
IN       DCB   BUFNO=3,DDNAME=SYSIN,DSORG=PS,EODAD=ENDIN,EROPT=ACC,    *
               LRECL=80,MACRF=GL,OPTCD=C,RECFM=FB
UT2      DCB   BLKSIZE=80,BUFL=80,BUFNO=3,DDNAME=SYSLIB,DSORG=PS,      *
               LRECL=80,MACRF=PM,OPTCD=C,RECFM=FS,EXLST=EXITL
PARM     DC    H'0'
DDNAMES  DC    H'72',32X'00',C'SYSUT1  SYSPRINT',8X'00',2C'SYSLIB  '
CUP      DC    C'UPDATE=INPLACE'
CHANGE   DC    C'CHANGE '
CONTROL  DC    C'./',CL78'   ENDUP'
SW       DC    AL1(0)
SWINP    EQU   128                 UPDATE INPLACE IS ACTIVE.
SWOUT    EQU   64                  OUTPUT PRESENT.
         SPACE 1
ENQL     ENQ   (QNAME,JFCB,E,0,SYSTEM),MF=L
         DS    0A                  FORCE ALIGNMENT.
EXITL    DC    X'87',AL3(JFCB)     EXIT LIST FOR SYSLIB.
JFCB     DS    44F                 JOB FILE CONTROL BLOCK AREA.
CSYSUT2  DC    CL8'SYSUT1'
QNAME    DC    CL8'RTPUPDTE'       QUEUE MAJOR NAME.
         END   RTPUPDTE
