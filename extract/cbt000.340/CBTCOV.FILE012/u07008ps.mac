 ALIASER: PROC OPTIONS(MAIN);     /* ALIAS LISTER  */
         DCL   1 DIRBLK,                     /*   MAP OF A DIRECTORY */
                 2 COUNT  BIT(16),           /*   BLOCK - LENGTH FLD */
                 2 DATA(254) CHAR(1);        /*   DATA FIELDS        */
         DCL   1 TABLE(1500),                /*   ARRAY PASSED       */
                 2 NAME CHAR(8),             /*                      */
                 2 TTR  BIT(24),             /*     TO THE TWO       */
                 2 INDICS,                   /*                      */
                   3 ALIAS BIT(1),           /*       ROUTINES       */
                   3 MISC  BIT(2),           /*                      */
                   3 USERL BIT(5);           /*                      */
 /*                                          /*   SWITCH             */
         DCL   (I,J)   FIXED BIN(31) ;       /*   COUNTERS           */
         DCL   LEN  FIXED BIN(31) ;          /*   LENGTH GOES HERE   */
         DCL   1  ENTRY BASED(A),            /*                      */
                 2 NAMEE CHAR(8),            /*   DIRECTORY          */
                 2 TTRE  BIT(24),            /*                      */
                 2 INDIE,                    /*      ENTRY           */
                    3 ALIASE BIT(1),         /*                      */
                    3 MISCE  BIT(2),         /*        TO  BE        */
                    3 USERE BIT(5) ;         /*                      */
 /*                                                      PROCESSED   */
         DCL   SYSIN FILE SEQUENTIAL RECORD INPUT ;
         ON ENDFILE(SYSIN) GO TO END ;       /* ESTABLISH EOF        */
         OPEN  FILE(SYSIN) ;                 /* OPEN FILE            */
 /*                                                                  */
               I = 1 ;                       /* INITIALISE           */
               J = 1 ;                       /*     COUNTERS         */
 /*                                                                  */
 READIN :      READ FILE(SYSIN) INTO(DIRBLK);/* READ A DIRECTORY BLK */
 /*                                                                  */
               J   = 1     ;                 /* RESET 4              */
               LEN = COUNT ;                 /* SET UP LENGTH OF     */
                                             /* USED BLOCK           */
 LOOP :        A = ADDR(DATA(J)) ;           /* A -> MEMBER          */
 /*                                                                  */
 /*                 SET UP ENTRY IN ARRAY                            */
 /*                                                                  */
               IF NAMEE   = HIGH(8)          /* END OF DIRECTORY     */
               THEN GO TO END ;              /* BLOCK PROCESSING ?   */
               NAME(I) = NAMEE ;             /*   MEMBER NAME        */
               TTR(I)  = TTRE  ;             /*   TTR                */
               INDICS(I) = INDIE ;           /*   'C' FIELD          */
               I = I + 1 ;                   /*   ADD 1 TO SUBSCRIPT */
               J = J + 12 + 2*USERE ;        /* J -> NEXT MEMBER NAME*/
 /*                                                                  */
         IF J + 2 > LEN THEN GO TO READIN ;  /* END OF BLOCK ?       */
                                             /* YES - READ IN ANOTHER*/
         GO TO LOOP ;                        /* NO  - LOOP ROUND     */
 /*                                                                  */
 END    :      CLOSE FILE(SYSIN) ;           /* CLOSE INPUT FILE     */
 /*                                                                  */
         CALL  SORTIT(I-1,TABLE) ;           /* CALL ALIAS MATCHING  */
 /*                                             ROUTINE              */
         CALL  XREF(I-1,TABLE) ;             /* CALL ALIAS LISTING   */
1SORTIT : PROC(ELEMENTS,ARRAY) ;
 /*            THIS ROUTINE IS PASSED AN ARRAY (MAX SIZE1500 ELEMENTS*/
 /*            AND THE # OF ELEMENTS IN THE ARRAY.                   */
 /*            THE ARRAY IS SEARCHED FOR ALIASES THAT HAVE NO        */
 /*            MATCHING UNALIASED TTR. WHEN SUCH A SITUATION IS      */
 /*            FOUND, AN ERROR MESSAGE IS WRITTEN OUT                */
 /*                                                                  */
         DCL  (K,L,M) FIXED BIN(31) ;        /* COUNTERS             */
 /*                                                                  */
         DCL   1 ARRAY(*),                   /* UNDISCLOSED SIZE     */
                 2 ANAME CHAR(8),            /*  MEMBER NAME         */
                 2 ATTR  BIT(24),            /*  TTR                 */
                 2 AINDS,                    /*  'C' FIELD           */
                   3 AALIAS BIT(1),          /*  ALIAS BIT           */
                   3 AREST  BIT(7);          /*  MISC                */
         DCL   SWITCH BIT(1) ;               /*  SWITCH              */
         DCL   ELEMENTS FIXED BIN(31) ;      /*  UPPER BOUND         */
 /*                                                                  */
               K = ELEMENTS ;                /*  K = UPPER BOUND     */
               L = 1 ;                       /*  INITIALISE BOTH     */
               M = 1 ;                       /*  COUNTERS            */
 /*      SCAN THE ARRAY AND FOR EACH ELEMENT :-                      */
 /*            1.   SEE IF ALIAS BIT IS ON                           */
 /*            2.   IF ON, RE-SCAN ARRAY LOOKING FOR A MODULE        */
 /*                 WITH THE SAME TTR BUT NO ALIAS BIT.              */
 /*            3.   IF (2) CANNOT BE LOCATED, WRITE A MESSAGE.       */
 ALPHA  :DO WHILE(L ^> ELEMENTS);            /*  UNTIL UPPER BOUND   */
            IF AALIAS(L) THEN DO ;           /*  IF ALIAS BIT ON THEN*/
                              SWITCH = '0'B ;/*  SWITCH SET OFF      */
 BETA   :                     DO WHILE(M ^> ELEMENTS);
                                 IF ATTR(M) = ATTR(L)
                                    &^ AALIAS(M) THEN SWITCH = '1'B ;
                                 ELSE ;
                             M = M + 1 ;     /*  INCREMENT INNER     */
                                             /*  ARRAY SCAN SUBSCRIPT*/
                              END BETA ;     /*  END OF INNER SCAN   */
                         M = 1 ;             /*  RE-INITIALIZE M     */
                         IF SWITCH = '0'B    /*  MATCH FOUND ?       */
                            THEN             /*  NO - MESSAGE        */
                            PUT EDIT (ANAME(L),' UNMATCHED ALIAS')
                            (SKIP(2),X(3),A(8),X(3),A(16)) ;
                            ELSE ;           /*   NULL CLAUSE        */
                            END ;            /*  END PROCESSING OF   */
                                             /*  MEMBER WITH ALIAS   */
                                             /*  BIT ON              */
               L = L + 1 ;                   /*  INCREMENT OUTER     */
                                             /*  ARRAY SCAN SUBSCRIPT*/
               END ALPHA ;                   /*  CLOSE OUTER SCAN    */
         END   SORTIT ;                      /*  END THIS ROUTINE    */
1XREF   :PROC  (ELS,ARAY) ;
 /*                                                                  */
 /*            THIS ROUTINE RECEIVES AS PARAMETERS AN ARRAY AND      */
 /*            ITS UPPER BOUND.                                      */
 /*            IT SEARCHES THE ARRAY UNTIL IT FINDS AN ELEMENT       */
 /*            WITHOUT THE ALIAS BIT ON.                             */
 /*            WHEN FOUND IT RE-SCANS THE ARRAY, LISTING ALL         */
 /*            OTHER OCCURRENCES OF THE SAME TTR WHICH DO HAVE       */
 /*            THE ALIAS BIT ON                                      */
 /*                                                                  */
         DCL   1 ARAY(*),                    /*                      */
                 2 XNAME CHAR(8),            /*   ARRAY              */
                 2 XTTR  BIT(24),            /*     PASSED           */
                 2 XINDIC,                   /*      TO              */
                   3 XALIAS BIT(1),          /*       THIS           */
                   3 XMISC  BIT(7);          /*        ROUTINE       */
         DCL   XSWIT BIT(1);                 /*   SWITCH             */
         DCL   (N,O,P) FIXED BIN(31);        /*   COUNTERS           */
 /*                                                                  */
         DCL   ELS  FIXED BIN(31);           /*   UPPER BOUND        */
 /*                                                                  */
         DCL   PRIME CHAR(8) ;               /*   LINKED MEMBER      */
         DCL      S(16) CHAR(8) ;            /*   UP TO 16 ALIASES   */
 /*                                                                  */
               O = 1 ;                       /*  INITIALISE          */
               P = 1 ;                       /*   COUNTERS           */
               N = 1 ;                       /*                      */
               PRIME = ' ' ;                 /*  CLEAR               */
               S = ' ' ;                     /*  FIELDS              */
 /*                                                                  */
 GAMMA  :DO WHILE(N ^> ELS);                 /*                      */
            IF XALIAS(N) = '0'B THEN DO ;    /*  ALIAS BIT NOT ON    */
 /*                                                                  */
               XSWIT = '0'B ;                /*                      */
               PRIME = XNAME(N) ;            /*                      */
 DELTA  :      DO WHILE(O ^> ELS);
                  IF XTTR(O) = XTTR(N) &  XALIAS(O) THEN DO ;
 /*                                                                  */
                    XSWIT = '1'B ;           /*  ALIAS FOUND         */
 /*                                                                  */
                    S(P)  =    XNAME(O) ;    /*  ALIAS NAME STORED   */
 /*                                                                  */
                    P = P + 1 ;              /*  INCREMENT ALIAS NAME*/
                                             /*  ARRAY SUBSCRIPT     */
 /*                                                                  */
                         END ;               /* END PROCESSING       */
                  ELSE ;                     /* ELEMENT WHICH IS A   */
                                             /* MATCHING ALIAS       */
               O = O + 1 ;                   /* INCREMENT INNER      */
                                             /* ARRAY SCAN           */
 /*                                                                  */
               END DELTA ;                   /*  END INNER SCAN      */
 /*                                                                  */
               IF XSWIT= '0'B THEN DO ;      /*  UNALIASED ?         */
 /*                                                                  */
                PUT EDIT (PRIME,' UNALIASED')
                (SKIP(1),X(3),A(8),X(3),A(10)) ;
                                   END ;
 /*                                                                  */
               ELSE DO ;                     /*  NO - IT HAS ALIASES */
 /*                                              WRITE THEM OUT      */
         PUT EDIT
         (PRIME,' HAS THE ALIASES ',S(1),S(2),S(3),S(4),S(5),S(6))
         (SKIP,X(3),A,A(17),X(3),A,X(3),A,X(3),A,X(3),A,X(3),A,X(3),A);
 /*                                                                  */
         PUT EDIT (S(7),S(8),S(9),S(10),S(11),S(12))
         (SKIP,X(31),A,X(3),A,X(3),A,X(3),A,X(3),A,X(3),A) ;
 /*                                                                  */
         PUT EDIT (S(13),S(14),S(15),S(16))
         (SKIP,X(31),A,X(3),A,X(3),A,X(3),A)  ;
 /*                                                                  */
                       END ;
 /*                                                                  */
         PRIME = ' ' ;                       /*  RESET VALUES IN     */
            S  = ' ' ;                       /*  ALIAS ARRAY         */
               P = 1 ;                       /*   RESET COUNTER      */
               O = 1 ;                       /*   VALUES FOR NEXT    */
                                             /*   SCAN               */
                       END ;                 /*  END OF PROCESSING   */
                                             /*  ALIAS BIT OFF       */
 /*                                                                  */
                                             /*  BIT IS ON - SEE     */
                                             /*  'IF' STMT JUST AFTER*/
                                             /*  LABEL 'GAMMA'       */
                    ELSE CALL REXREF(XTTR(N),ARAY,ELS,N) ;
                                             /*   CALL REVERSE REFCE */
                                             /*   ROUTINE            */
            N  =  N + 1 ;                    /*  STEP UP FOR OUTER   */
                                             /*  ARRAY SCAN          */
 /*                                                                  */
         END   GAMMA ;                       /*  END PROCESSING OF   */
                                             /*  OUTER ARRAY         */
 /*                                                                  */
         END   XREF ;                        /*  END ROUTINE         */
 /*                                                                  */
1REXREF: PROC(NTTR,NARAY,NELS,NN) ;
 /*                                                                  */
 /*      THIS ROUTINE IS PASSED FOUR PARAMETERS :-                   */
 /*      1.    THE TTR OF A MEMBER WITH THE ALIAS BIT ON             */
 /*      2.    THE ARRAY OF ELEMENTS WITH DIRECTORY INFORMATION      */
 /*      3.    THE # OF USED ELEMENTS IN THE ARRAY - IE THE RANGE    */
 /*      4.    THE # OF THE PARTICULAR ELEMENT UNDER SCRUTINY        */
 /*                                                                  */
         DCL   1  NARAY(*),                  /*   ARRAY              */
                  2 NNAME CHAR(8),           /*   PASSED             */
                  2 NNTTR BIT(24),           /*   TO                 */
                  2 NINDICS,                 /*   THIS               */
                    3 NALIAS BIT(1),         /*   ROUTINE            */
                    3 NMISC  BIT(7);         /*                      */
 /*                                                                  */
         DCL   NTTR BIT(24)       ;          /*   TTR OF ALIAS       */
         DCL   NELS FIXED BIN(31) ;          /*   RANGE OF ARRAY     */
         DCL   NN   FIXED BIN(31) ;          /*   ELEMENT OF ARRAY   */
         DCL   CT   FIXED BIN(31) ;          /*   LOCAL COUNTER      */
         CT    =  1 ;                        /*   INITIALISED        */
 KAPPA :       DO WHILE(CT ^> NELS) ;        /*   ESTABLISH LOOP     */
 /*                                                                  */
               IF NNTTR(CT) = NTTR           /*   WHEN MATCHING      */
                              &^ NALIAS(CT)  /*   PRIME IS FOUND CALL*/
               THEN CALL LIST(NNAME(CT),NNAME(NN)) ;/*LIST ROUTINE   */
 /*                                                                  */
               ELSE ;
               CT = CT + 1 ;                 /*   INCREMENT LOOP CTL */
 /*                                                                  */
               END  KAPPA ;
 /*                                                                  */
               CT = 1 ;                      /*   RESTORE FIELD      */
 /*                                                                  */
         END   REXREF ;                      /*   END ROUTINE        */
1LIST  : PROC(SECOND,FIRST) ;
 /*                                                                  */
 /*      THIS ROUTINE IS PASSED TWO PARAMETERS :-                    */
 /*      1.    THE ALIAS NAME FOR A GIVEN MEMBER .                   */
 /*      2.    THE ASSOCIATED MEMBER NAME.                           */
 /*                                                                  */
         DCL   SECOND CHAR(8) ;              /*   ALIAS NAME         */
         DCL   FIRST  CHAR(8) ;              /*   MEMBER NAME        */
 /*                                                                  */
               PUT EDIT (FIRST,' IS AN ALIAS OF ',SECOND)
                        (SKIP,X(3),A(8),A(16),A(8)) ;
 /*                                                                  */
         END   LIST ;
         END   ALIASER ;                     /*  END PROGRAM         */
