         TITLE 'IMASPZAP MONITOR AND INPUT LOG PROGRAM - SPZAPLOG'
IMASPZAP CSECT
*        *************************************************************
*        *                                                           *
*        *     SOURCE DERIVED FROM LOAD MODULE VIA DELINKO AND       *
*        *       DISASSEMBLER PROGRAMS.                              *
*        *     MODIFICATIONS  -                                      *
*        *                                                           *
*        *************************************************************
*
*
*
*   MODIFICATIONS:-
*    A.   PRE- DELINKO/DISASM.
*       1.   ADD 3330-1 SUPPORT (REMOVING 2314)
*       2.   PREVENT PASSING OF PARM LIST TO IMASPZAP    (SMP PROBLEM)
*       3.   REMOVE SYSPRINT DCB - RECFM=F,BLKSIZE=120.  (SMP PROBLEM)
*       4.   ENSURE NO PARM LIST IF VTOC UPDATE.  ELSE AMA129I MSG.
*
*
*    B.   POST PAN TRANSFER.                                    LEVEL
*
*       1.   CLOSE SYSLOG BEFORE EXIT.                            2
*            EXTEND DEVICE TABLE FOR LATEST DEVTYPES & PUT
*            CURRENT/NEXT AT HEAD OF TABLE.
*            ENSURE ERMSG6 IF SYSLIB DEVICE TYPE INVALID.
*            BASIC PROVISION FOR PARM XFR TO AMASPZAP TO
*            ENABLE SMP - IGNIDRFULL ETC.
*            LINK NAME = AMASPZAP NOT IMASPZAP
*       2.   USE STANDARD SAVE & RETURN MACROS.                   3
*      3.   STRAIGHTEN OUT CODE                                 6
*           DETECT CALLER - IF SMP, PASS STRAIGHT THROUGH
*           LOG ALL USE
*           PREPARE TO SCRAMBLE NAME OF CALLED PROGRAM
*       4.     ADD NAME SCRAMBLER
*       5.    INCORPORATE LOGGING TO SMF (TYPE 131)
*
*
**********************************************************************
*            REGISTER               USAGE                            *
R0       EQU   0                 WORK                                *
R1       EQU   1                 PARM LIST, ETC                      *
R2       EQU   2                 WORK REGISTER                       *
R3       EQU   3                 DCB POINTER                         *
R4       EQU   4               ) EVEN-ODD PAIR, USED IN              *
R5       EQU   5               ) DERIVING NAME                       *
R6       EQU   6                 ERROR MESSAGE POINTER               *
R7       EQU   7                                                     *
R8       EQU   8                 BCT COUNT                           *
R9       EQU   9                 SAVE R15                            *
R10      EQU   10                                                    *
R11      EQU   11                                                    *
R12      EQU   12                BASE REGISTER                       *
R13      EQU   13                SAVE AREA POINTER                   *
R14      EQU   14                RETURN ADDRESS                      *
R15      EQU   15                BRANCH ADDRESS, RETURN CODE         *
**********************************************************************
         SPACE 3
         USING *,R15
         B     START
         DC    C'IMASPZAP &SYSDATE &SYSTIME '
         DS    0H
         PRINT NOGEN
ESTAEXIT EQU   *
         USING *,R15
         STM   R2,R5,STASTOR
         LA    R2,FINDNAME         FROM ADDRESS
         LA    R4,FINDNAME+1       TO ADDRESS
         LA    R5,RESTR14-FINDNAME
         BCTR  R5,0                TO LENGTH
         SR    R3,R3               FROM LENGTH = 0, SO PAD
         MVCL  R4,R2               ZERO OUT CODE
         XC    TRTAB(256),TRTAB    ... AND TRANSLATION TABLE
         BR    R14
STASTOR  DS    4F
START    STM   R14,R12,12(R13)
         BALR  12,0
         USING *,12
         ST    13,SAVE+4
         LA    14,SAVE
         ST    14,8(13)
         LR    13,14
         TITLE 'FIND IF CALLED BY SMP, ACT ACCORDINGLY'
         L     R2,SAVE+4          SAVE AREA WE JUST USED
         L     R2,4(,R2)          SAVE AREA ABOVE THAT
         L     R2,16(,R2)         EP ADDRESS OF CALLER
         CLC   5(5,R2),=C'HMASM'  IS CALLER SMP ?
         BNE   NOTSMP
         BAL   R14,FINDNAME
         L     R1,SAVE+4
         L     R1,24(,R1)         RESTORE R1
         LINK  EPLOC=EPLOC
         PRINT NOGEN
         B     EXIT              PASS RETURN CODE UNALTERED
         TITLE 'NOT USED BY SMP, SO LOG HERE'
NOTSMP   EQU   *
         ESTAE ESTAEXIT
         RDJFCB (PRINT)
         LTR   R15,R15             IS PRINT OK ?
         BNZ   WTORTN                            NO
         RDJFCB (CARDS)            CHECK DDNAME SYSLIN PRESENT
         LTR   R15,R15
         BNZ   TRYSYSIN
         RDJFCB (TOZAP)           IS DDNAME SYSIN PRESENT ?
         LTR   R15,R15
         BZ    DEFAULTS           SYSLIN AND SYSIN PRESENT
         LA    R1,ALLOCRBP
         SVC   99                 DYNAMIC ALLOCATE SVC
         LTR   R15,R15            RETURN OK ?
         BNZ   ABEND
         MVC   INOUT+40(8),TXTUA+6 MOVE DDNAME INTO DCB
         MVC   TOZAP+40(8),TXTUA+6
         MVC   TXTUB+6(8),TXTUA+6   AND TO UNALLOCATE TEXT UNIT
         MVC   CHANGE,TXTUA+6
         B     OK
         SPACE
TRYSYSIN EQU   *
         RDJFCB (TOZAP)           IS DDNAME SYSIN PRESENT ?
         LTR   R15,R15
         BNZ   NOINOUT            NEITHER SYSLIN NOR SYSIN PRESENT
         LA    R1,ALLOCRBP
         SVC   99                 DYNAMIC ALLOCATE SVC
         LTR   R15,R15            RETURN OK ?
         BNZ   ABEND
         MVC   INOUT+40(8),TXTUA+6 MOVE DDNAME INTO DCB
         MVC   TOZAP+40(8),TXTUA+6
         MVC   TXTUB+6(8),TXTUA+6   AND TO UNALLOCATE TEXT UNIT
         MVC   CHANGE,TXTUA+6
         MVC   CARDS+40(8),=CL8'SYSIN'
         B     OK
         SPACE
NOINOUT  LA    R6,ERMSG1
         B     ERRTN
         SPACE
DEFAULTS EQU   *
OK       EQU   *
         OPEN  (CARDS,,TOZAP,(OUTPUT))
         LA    6,ERMSG1            SYSLIN ERROR MESSAGE
         LA    3,CARDS
         TM    48(3),X'10'         OPEN OK ?
         BZ    ERRTN               NO - ERROR RTN
         LA    6,ERMSG2            SYSIN ERROR MESSAGE
         LA    3,TOZAP
         TM    48(3),X'10'         OPEN OK ?
         BZ    ERRTN               NO - ERROR RTN
*      READ INPUT DATA, TRANSFER TO WORK FILE.
GETCRD   GET   CARDS,CARDAR       AT END GO TO LCARD
         LA    R3,CARDAR         INDEX
         LA    R4,1              INCREMENT FOR BXLE
         LA    R5,CARDAR+71      COMPARAND
CHECKNB  CLI   0(R3),C' '        IS THIS BLANK ?
         BNE   NOTBLNK                           NO
         BXLE  R3,R4,CHECKNB     CHECK NEXT CHARACTER
         B     GETCRD            DROP ALL BLANK CARD
         SPACE
NOTBLNK  CLC   0(5,R3),=C'NAME '  NEW ZAP ?
         BE    LCARD                        YES
         CLC   0(5,R3),=C'CCHHR ' NEW ZAP ?
         BE    LCARD                        YES
         CLC   0(4,R3),=C'DUMP'   NEW ACTION ?
         BE    LCARD                           YES
         CLC   0(7,R3),=C'ABSDUMP' NEW ACTION ?
         BE    LCARD                            YES
PUTCARD  PUT   TOZAP,CARDAR
         MVC   CARDAR(80),BLANKS
         B     GETCRD
         SPACE
LCARD    EQU   *              NAME OR CCHHR CARD
         NOP   NEWSET         AFTER FIRST TIME, START NEW SET
         OI    *-3,X'F0'      BY MAKING NOP BECOME B
         B     PUTCARD        FIRST TIME, PUT THIS THEN READ ANOTHER
         SPACE
NEWSET   EQU   *
         CLOSE TOZAP
         NOP   GOZAP
         OI    *-3,X'F0'
         RDJFCB (TARGET)
         MVC   VOLSER(6),AREA+118
         CLC   AREA(12),VTOCREQ
         BNE   NOTAVTOC
         MVC   DSN+5(18),VTOCREQ
         B     GETIPT
         SPACE
NOTAVTOC MVC   DSN+5(34),AREA
         TITLE 'DETERMINE AND CHECK VALIDITY OF SYSLIB DEVICE'
GETIPT   EQU   *
         DEVTYPE SYSLIB,DEVTYP       DDNAME SYSLIB FOR ZAP TARGET
         LA    R6,ERMSG3           SYSLIB NOT ON VALID DEVICE
         LTR   15,15
         BNZ   ERRTN
         LA    R5,DEVTYP           END OF DEVICE TABLE
         LA    R2,DEVTAB
DEVLOOP  CLC   0(2,R2),DEVTYP+2    CHECK DEVICE TYPE
         BE    DEVOK
         LA    2,8(2)              NEXT DEVICE ENTRY
         CR    5,2                 END OF TABLE ?
         BNE   DEVLOOP                            NO
         B     ERRTN               YES, DEVICE NOT FOUND
         SPACE
DEVOK    EQU   *
         MVC   VOLTYPE(6),2(R2)    STORE DEVICE NAME
GOZAP    BAL   R14,FINDNAME
         LINK  EPLOC=EPLOC,PARAM=(H0,DDNAMES),VL=1
         LR    R9,R15              SAVE RETURN CODE
         C     R15,RETCODE         RETURN CODE HIGHEST YET ?
         BNH   LOGIT                                         NO
         ST    R15,RETCODE         STORE HIGHEST RETURN CODE
LOGIT    EQU   *
         TITLE 'READ INOUT AND LOG IT. AT END GO TO EOFIN'
         OPEN  (INOUT,(INPUT))
PUTLOG   LA    R0,DATE
         BAL   R14,SMFEWTR
         LTR   R9,R9              RETURN CODE FROM LINK
         BZ    GETINO             NO FAILURE MESSAGE
         LA    R1,FAILMSG
         MVC   74(6,R1),VOLSER
         LR    R0,R1
         BAL   R14,SMFEWTR        LOG FAILURE
GETINO   GET   INOUT              GET A(N INPUT) CARD FROM WORK FILE
         MVC   74(6,R1),VOLSER
         LR    R0,R1
         BAL   R14,SMFEWTR        LOG A CARD
         B     GETINO
         TITLE 'SUBROUTINE TO DETERMINE CURRENT NAME'
FINDNAME EQU   *
         ST    R14,SAVR14
         MVC   TIME,EDWD
         TIME  DEC
         STM   R0,R1,TIMESTMP
         UNPK  DATE+4(6),TIMESTMP+5(3)
         MVI   DATE+4,C'='
         ED    TIME,TIMESTMP
         MVI   TIME,C'='
         NOP   RESTR14          GET TIME FOR EACH ACTION
         OI    *-3,X'F0'        ... BUT PROG NAME ONCE ONLY
         ST    1,WORK             00YYDDDF
         N     R1,=X'FFFF000F'
         ST    R1,VAL
***** FIND MONTH
         ZAP   DUBWORD,=P'0'
         MVO   DUBWORD+6(2),WORK+1(1)  YY
         CVB   1,DUBWORD
         STC   1,YR               YEAR, BINARY
         TM    YR,X'03'           IS YEAR DIVISIBLE BY 4 ?
         BNZ   FEBOK                                       NO
         MVC   FEB(2),=P'29'       LEAP YR, FEB HAS 29 DAYS
FEBOK    LA    14,MONTHS
         LA    R2,1
TRYMON   CP    WORK+2(2),0(2,14)   DAYS LEFT : LENGTH OF THIS MONTH
         BNH   MONTHFND            THIS MONTH IS THE ONE
         SP    WORK+2(2),0(2,14)   SUBTRACT THIS MONTH FROM DAYS LEFT,
         LA    R2,1(,R2)          COUNT MONTH
         LA    R14,2(,R14)        POINT TO NEXT MONTH
         B     TRYMON              TRY NEXT MONTH
         SPACE
MONTHFND EQU   *                  R2 CONTAINS NUMBER OF CURRENT MONTH
         ST    R2,MONTH
         L     R1,VAL             FUNNY NUMBER
         LA    R1,0(R1,R2)        ADD MONTH
         SLL   R1,1               DOUBLE
         LA    R2,1(,R1)          AND ADD 1(TO BE SURE IT IS ODD)
         L     5,A                RIGHT HAND END OF EVEN/ODD PAIR
         MR    R4,R2              MULTIPLY INPUT INTEGER BY 7**5
         D     4,P                PSEUDO-RANDOM VARIABLE IS REMAINDER
         CVD   R4,EPLOC           CONVERT TO DECIMAL
         TR    EPLOC(8),TRTAB
         MVI   EPLOC,C'M'
         BLDL  0,BLDLST
         LTR   R15,R15
         BZ    FOUND
NOP      NOP   FOUND
         OI    NOP+1,X'F0'        CHANGE NOP TO B
         MVC   NEWNAME,EPLOC
         L     R2,MONTH
         C     R2,=F'1'
         BNE   NOTJAN
         LA    R2,12
         ST    R2,MONTH
         L     R2,VAL
         S     R2,BACK1YR
         ST    R2,VAL
         L     R2,MONTH
         B     MONTHFND
         SPACE
NOTJAN   BCTR  R2,0
         B     MONTHFND
         SPACE 3
FOUND    TM    NOP+1,X'F0'          THIS MONTH'S NAME ?
         BZ    RESTR14                                   YES
         MVC   OLDNAME,EPLOC
         MVC   EPLOC(8),NEWNAME
         LA    R1,LINKRBP
         SVC   99                 DYNAMIC ALLOCATE FOR SYS1.LINKLIB
         LTR   R15,R15
         BNZ   ABEND
         MVC   LINKLIB+40(8),TXTL4+6
         OPEN  (LINKLIB,(OUTPUT))
         PRINT GEN
         STOW  LINKLIB,OLDNAME,C   CHANGE NAME
         LTR   R15,R15
         BZ    OK2GO
         ABEND 876,DUMP
OK2GO    EQU   *
         CLOSE LINKLIB
RESTR14  L     R14,SAVR14
         BR    14
         TITLE 'ROUTINE TO BUILD AND OUTPUT SMF TYPE 131 RECORDS'
SMFEWTR  EQU   *
         NOP   FIXDONE
         OI    *-3,X'F0'          COME THIS WAY ONCE ONLY
         L     R2,16              POINT AT CVT
         L     R2,0(,R2)          POINT AT TCB WORDS
         L     R2,4(,R2)          POINT AT CURRENT TCB
         L     R3,164(,R2)        POINT AT SMFTCT
         USING SMFTCT,R3
         L     R4,TCTJMR          POINT AT JMR
         USING JMR,R4
         MVC   T131ID(28),JMRJOB  MOVE IN JOB NAME ETC
         MVC   T131SID,JMRCPUID
         L     R5,TCTLCTAD        POINT AT LCT
         USING LCT,R5
         L     R6,LCTJCTAD        POINT AT JCT
         USING JCT,R6
         L     R7,JCTACTAD        POINT AT ACT-16
         SRL   R7,8
         LA    R7,16(,R7)         POINT AT ACT
         LA    R8,JCTLNGTH
         SR    R7,R8              GET TO VIRTUAL BASE
         USING JCT,R7             TO ADDRESS ACT
         MVC   T131USER,ACTPRGNM  MOVE IN PROGRAMMER NAME (JOB CARD)
FIXDONE  EQU   *
         LR    R2,R0              CARD IMAGE TO BE LOGGED
         TIME  BIN
         STM   R0,R1,TIMESTMP
         MVC   T131TIME(8),TIMESTMP TIME STAMP THIS RECORD
         MVC   T131DATA,0(R2)     COPY CARD IMAGE TO SMF RECORD
         SMFWTM T131RECD          OUTPUT NEW SMF RECORD
         BR    R14
          TITLE 'CLOSE FILES AND RETURN'
EOFIN    CLOSE (INOUT)
         FREEPOOL INOUT
         CLC   CARDAR,BLANKS       ANY MORE ZAPS ?
         BE    ENDOFJOB                            NO
         OPEN  (TOZAP,(OUTPUT))
         PUT   TOZAP,CARDAR
         MVC   CARDAR,BLANKS
         B     GETCRD
         SPACE 2
ENDOFJOB EQU   *
         CLC   TXTUA+6(8),BLANKS WAS TOZAP DYNAMICALLY ALLOCATED ?
         BE    GETRET
         LA    R1,UNARBP          YES, UNALLOCATE IT
         SVC   99
GETRET   EQU   *
         ESTAE 0
         L     R15,RETCODE        HIGHEST RETURN CODE FROM ZAP
EXIT     L     13,SAVE+4
         RETURN (14,12),,RC=(15)
         SPACE 3
WTORTN   WTO   '***SYSPRINT NOT OPENED SUCCESSFULLY, SUPERZAP PROG'
         ESTAE 0
         LA    15,12               SET RETURN CODE 12
         B     EXIT
         SPACE
ERRTN    SR    7,7
         OPEN  (PRINT,(OUTPUT))
         MVC   AREA(120),PRTAR
         IC    7,0(6)              ERMSG LENGTH
         EX    7,EXSUB
         PUT   PRINT,AREA
         CLOSE (PRINT)
         LA    R0,AREA
         BAL   R14,SMFEWTR         LOG FAILED ATTEMPT
ERRRET   EQU   *
         ESTAE 0
         LA    15,12               SET RETURN CODE = 12
         B     EXIT
         SPACE
EXSUB    MVC   AREA(1),1(6)        MOVE ERROR MESSAGE TO PRINT
         SPACE 3
ABEND    EQU   *
         LA    R6,ERMSG4          JOB FAILED - CONSULT A SYSTEMS PROG
         MVC   ERRRET(DUBWORD-ABENDX),ABENDX
         B     ERRTN
ABENDX   ABEND 432                NO DUMP
         TITLE 'CONSTANTS, WORK AREAS, DCBS'
DUBWORD  DS    D
OLDNAME  DC    CL8' '
NEWNAME  DC    CL8' '
RETCODE  DC    F'0'
BLDLST   DC    H'1',H'60'
EPLOC    DC    CL60' '
H0       DC    H'0'
         CNOP  6,8
DDNAMES  DC    H'48'
         DC    3D'0'
         DC    CL8'SYSLIB'
CHANGE   DC    CL8'SYSIN'
         DC    CL8'SYSPRINT'
WORK     DS    F
A        DC    F'16807'
P        DC    X'7FFFFFFF'
BACK1YR  DC    X'00010000'
VAL      DC    F'0'               WORK SPACE FOR RANDOMISING
MONTH    DC    F'1'              MONTH
SAVR14   DC    F'0'
YR       DC    X'00'              YEAR
MONTHS   DC    PL2'31'
FEB      DC    PL2'28'
         DC    PL2'31',PL2'30',PL2'31',PL2'30',PL2'31',PL2'31',PL2'30'
         DC    P'31',P'30',P'31'
SAVE     DC    18F'0'
SYSLIB   DC    CL8'SYSLIB  '
DEVTAB   DC    X'200B',C'3350  '
         DC    X'200E',C'3380  '
         DC    X'200D',C'3330-1'
         DC    X'2009',C'3330  '
         DC    X'200C',C'3375  '
         DC    X'200A',C'3340  '
         DC    X'2001',C'2311  '
         DC    X'2002',C'2301  '
         DC    X'2003',C'2303  '
         DC    X'2004',C'2302  '
         DC    X'2005',C'2321  '
         DC    X'2006',C'2305-1'
         DC    X'2007',C'2305-2'
         DC    X'2008',C'2314  '
DEVTYP   DS    2F
TIMESTMP DS    2F
         DC    PL1'0'
EDWD     DC    X'4021204B20204B2020'
         DC    X'40'
DATE     DC    C'DATE=YYDDD,TIME'
TIME     DC    C' HH.MM.SS'
DSN      DC    CL39',DSN= '
         DC    CL4'VOL='
VOLTYPE  DC    C'      ='
VOLSER   DS    CL6
         DS    0D
PRTAR    DC    CL4' '
AREA     DS    44F
*      DCB EXIT LIST FOR TARGET & LOG RDJFCB
LIBEX    DS    0F
         DC    X'87',AL3(AREA)
          TITLE 'ERROR (AND OTHER) MESSAGES'
FAILMSG  DC    CL42' ',CL38'*** ZAP FAILED ***'
ERMSG1   DC    AL1(14),CL15'INPUT NOT FOUND'
ERMSG2   DC    AL1(18),CL19'WORK FILE NOT FOUND'
ERMSG3   DC    AL1(51),CL52'SYSLIB-DATASET IS NOT ON VALID DEVICE. OR SV
               VC FAILED'
ERMSG4   DC    AL1(40),CL41'JOB FAILED - CONSULT A SYSTEMS PROGRAMMER'
         SPACE
         PRINT NOGEN
PRINT    DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,EXLST=LIBEX,LRECL=133,*
               BLKSIZE=133
INOUT    DCB   DDNAME=SYSIN,DSORG=PS,EODAD=EOFIN,MACRF=GL,EXLST=LIBEX
LINKLIB  DCB   DDNAME=LINKLIB,DSORG=PO,MACRF=W
TARGET   DCB   DDNAME=SYSLIB,DSORG=PS,EXLST=LIBEX,MACRF=GL
LOG      DCB   DDNAME=SYSLOG,DSORG=PS,EXLST=LIBEX,MACRF=PM
CARDS    DCB   DDNAME=SYSLIN,DSORG=PS,EODAD=NEWSET,RECFM=FB,MACRF=GM,  *
               LRECL=80,EXLST=LIBEX
TOZAP    DCB   DDNAME=SYSIN,DSORG=PS,RECFM=FB,MACRF=PM,LRECL=80,       *
               EXLST=LIBEX
         SPACE
CARDAR   DS    CL80
REP      DC    CL3'REP'
BLANKS   DC    CL80' '
CARD     DC    CL80' '
VTOCREQ  DC    CL18'FORMAT4.DSCB (VTOC)'
         LTORG
TRTAB    DC    C'THISISATRANSLATETABLEWHICHSHOULD'    THIS TABLE SHOULD
         DC    C'BE SET BY THE USING INSTALLATION'    BE CHANGED BY THE
         DC    C'BLANKS MAY NOT BE LEFT IN IT -  '    USER INSTALLATION
         DC    C'BLANKS ARE NOT VALID WITHIN NAME'    IT MUST CONTAIN
         DC    C'ONCE SET UP, AND IN USE, IT MUST'    ONLY CHARACTERS
         DC    C'REMAIN UNCHANGED - OR ELSE THE  '    VALID IN NAMES -
         DC    C'PROGRAM WILL NOT BE RECOGNISED. '    ESPECIALLY NO
         DC    C'AN ESTAE EXIT PROTECTS IT.......'    BLANKS.
         TITLE 'DYNAMIC ALLOCATION POINTERS AND TEXT UNITS'
         DS    0F
ALLOCRBP DC    X'80',AL3(ALLOCRB)
UNARBP   DC    X'80',AL3(UNALLOCR)
LINKRBP  DC    X'80',AL3(LINKRB)
ALLOCRB  DC    AL1(20),X'01',X'6000'
         DC    2H'0',A(TXTPTRS),2F'0'
UNALLOCR DC    AL1(20),X'026000',2H'0',A(UTXTP),2F'0'
LINKRB   DC    AL1(20),X'010000',2H'0',A(LINKTXTP),2F'0'
TXTPTRS  DC    X'00',AL3(TXTU1)
         DC    X'00',AL3(TXTU2)
         DC    X'00',AL3(TXTU3)
         DC    X'00',AL3(TXTU4)
         DC    X'00',AL3(TXTU5)
         DC    X'00',AL3(TXTU6)
         DC    X'00',AL3(TXTU7)
         DC    X'00',AL3(TXTU8)
         DC    X'00',AL3(TXTU9)
         DC    X'80',AL3(TXTUA)
UTXTP    DC    X'80',AL3(TXTUB)
LINKTXTP DC    X'00',AL3(TXTL1)
         DC    X'00',AL3(TXTL2)
         DC    X'00',AL3(TXTL3)
         DC    X'00',AL3(TXTL4)
         DC    X'80',AL3(TXTL5)
TXTU1    DC    H'4',H'1',H'1',X'04'      DISP=(NEW
TXTU2    DC    H'5',H'1',H'1',X'04'               ,DELETE)
TXTU3    DC    H'7',H'0'                 SPACE=(TRK,
TXTU4    DC    H'10',H'1',H'3',AL3(5)               (5,
TXTU5    DC    H'11',H'1',H'3',AL3(5)                  5))
TXTU6    DC    H'21',H'1',H'5',CL5'XWORK'  UNIT=XWORK
TXTU7    DC    H'48',H'1',H'2',H'3200'  DCB=(BLKSIZE=3200,
TXTU8    DC    H'66',H'1',H'2',H'80'         LRECL=80,
TXTU9    DC    H'73',H'1',H'1',X'90'        RECFM=FB
TXTUA    DC    H'85',H'1',H'8',CL8' '  RETURN DDNAME HERE
TXTUB    DC    H'1',H'1',H'8',CL8' '   UNALLOCATE THIS DDNAME
TXTL1    DC    H'2',H'1',H'12',CL12'SYS1.LINKLIB' DSN=SYS1.LINKLIB
TXTL2    DC    H'4',H'1',H'1',AL1(8)   DISP=SHR
TXTL3    DC    H'80',H'1',H'3',CL8'SP1'  PASSWORD
TXTL4    DC    H'85',H'1',H'8',CL8' '    DDNAME
TXTL5    DC    H'28',H'0'             UNALLOCATE AT CLOSE
         TITLE 'SMF RECORD TYPE 131'
T131RECD EQU   *
         DC    AL2(T131END-*)
         DC    H'0'
         DC    X'02'              VS2
         DC    AL1(131)           RECORD TYPE
T131TIME DS    XL4                TIME AND ...
T131DATE DS    XL4                ... DATE OF THIS RECORD
T131SID  DC    CL4' '             CPUID
T131ID   DC    CL28' '            ALL SMF RECORDS FOR A JOB HAVE THIS
T131USER DC    CL20' '            PROGRAMMER NAME
T131DATA DC    CL80' '            DATA TO BE LOGGED AS AUDIT TRAIL
T131END  EQU   *
         TITLE 'MACROS FOR CONTROL BLOCKS'
         IEFJMR
         IEFTCT
LCT      DSECT
         IEFALLCT
JCT      DSECT
         IEFAJCTB
         END
